/**
 * @author khokharnikunj8
 */

#include <bits/stdc++.h>

using namespace std;

void CAddingPowers(std::istream &in, std::ostream &out) {
    vector<bool> done(100, false);
    int n, k;
    in >> n >> k;
    bool flag = true;
    for (int i = 0; i < n; i++) {
        long long temp;
        in >> temp;
        vector<int> rem;
        while (temp > 0) {
            rem.push_back(temp % k);
            temp /= k;
        }
        for (int i = 0; i < rem.size(); i++) {
            if (rem[i] == 0) continue;
            if (rem[i] != 1 || done[i])flag = false;
            done[i] = true;
        }
    }
    if (flag)
        out << "YES\n";
    else out << "NO\n";
}

int main() {
    class Solver {
    public:
        void solve(std::istream &in, std::ostream &out) {
            return CAddingPowers(in, out);
        }
    };
    Solver solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    int n;
    in >> n;
    for (int i = 0; i < n; ++i) {
        solver.solve(in, out);
    }

    return 0;
}
