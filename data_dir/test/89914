#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define y1 yy1
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    int p = 0;
    if(str[0] == '-')
        p++;
    for(int i = str.length()-1; i >= p; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const ld eps = 1e-7;
const int maxn = 1e6 + 1146;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 9;

ll d[maxn];

void solve(){
    ll n, m, x, y, dx, dy;
    cin >> n >> m >> x >> y >> dx >> dy;
    if(dx == 0){
        if(x % n == 0){
            if(dy > 0)
                cout << x << " " << m;
            else
                cout << x << " " << 0;
        }
        else
            cout << -1;
        return;
    }
    if(dy == 0){
        if(y % m == 0){
            if(dx > 0)
                cout << n << " " << y;
            else
                cout << 0 << " " << y;
        }
        else
            cout << -1;
        return;
    }
    ll ff = x;
    if(dx > 0){
        ff = n - x;
        x = n;
    }
    else
        x = 0;
    y = y + dy * ff;
    y %= (2 * m);
    if(y < 0){
        y = -y;
        dy = -dy;
    }
    if(y > m){
        y = m - (y - m);
        dy = -dy;
    }
    if(y == 0){
        cout << x << " " << y;
        return;
    }
    d[1] = n % m;
    for(int i = 2; i < 31; i++)
        d[i] = (d[i - 1] * 2) % m;
    map<ll, ll> f;
    for(int i = 0; i < (1 << 16); i++){
        ll sum = 0;
        for(int j = 0; j < 16; j++)
            if(i & (1 << j))
                sum = (sum + d[1 + j]) % m;
        if(f.count(sum))
            continue;
        f[sum] = i;
    }
    for(int i = 0; i < (1 << 16); i++){
        ll sum = 0;
        for(int j = 0; j < 16; j++)
            if(i & (1 << j))
                sum = (sum + d[j + 17]) % m;
        ll h = (2 * m - y - sum) % m;
        if(dy < 0)
            h = ((y - sum) % m + m) % m;
        if(f.count(h)){
            ll a = f[h];
            if(((a & 1) && dx < 0) || ((a % 2 == 0) && dx > 0))
                cout << n << " ";
            else
                cout << "0 ";
            ll k = (i << 16) + a;
            ll yy = y;
            if(dy > 0){
                yy += k * n;
                if(yy / m % 2 == 0)
                    cout << 0;
                else
                    cout << m;
            }
            else{
                yy -= k * n;
                if(yy / m % 2 == 0)
                    cout << 0;
                else
                    cout << m;
            }
            return;
        }
    }
    cout << -1;
}

int main(){
//    srand(time(0));
//    srand(228);
    fast_io;
    cin.tie(0);
    cout.tie(0);
//    output;
//    for(int i = 0; i < 100000; i++)
//        brut();
//    output;
//    freopen("money.in", "r", stdin);
//    freopen("money.out", "w", stdout);
//     int t;
//     cin >> t;
//     fout << t << endl;
//    scanf("%d", &t);
//     int cnt = 1;
//     while(t--){
//        cout << "Case #" << cnt << ": ";
//        printf("Case %d: ", cnt);
//      while(1)
        solve();
//        brut();
//         cout << "\n";
//        puts("");
//        cnt++;
//     }
    return 0;
}
