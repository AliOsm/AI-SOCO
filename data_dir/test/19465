#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const int M=2002;
int dp[2*M+2][M+2],tp[2*M+2][M+2]; // dp[l][cnt] => currently have cnt people with aggresiveness l
int l[M],s[M],c[2*M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=n;i++)
		cin>>l[i];
	for(int i=1;i<=n;i++)
		cin>>s[i];
	for(int i=1;i<=n+m;i++)
		cin>>c[i];
	reverse(l+1,l+n+1);
	reverse(s+1,s+n+1);
	for(int i=0;i<2*M;i++)
		for(int j=0;j<M;j++)
		{
			dp[i][j]=-2e9;
			tp[i][j]=-2e9;
		}
	for(int i=0;i<2*M;i++)
	{
		dp[i][0]=0;
		tp[i][0]=0;
	}
	for(int i=1;i<=n;i++)
	{
		int L = l[i];
		for(int j=0;j<M;j++)
		{
			if(dp[L][j]==-2e9)
				continue;
			tp[L][j+1]=max(tp[L][j+1],dp[L][j]+c[L]-s[i]);
		}
		int tt=0;
		for(int j=0;j<2*M;j++)
		{
			for(int k=0;k<M;k++)
			{
				if(tp[j][k]==-2e9)
					break;
				tp[j+1][k/2]=max(tp[j+1][k/2],tp[j][k]+(k/2)*c[j+1]);
			}
		}
		for(int j=0;j<2*M;j++)
		{
			for(int k=0;k<M;k++)
			{
				if(tp[j][k]==-2e9)
					break;
				dp[j][k]=tp[j][k];
			}
		}
	}
	int ans=0;
	for(int i=0;i<2*M;i++)
		for(int j=0;j<2;j++)
			ans=max(ans,dp[i][j]);
	cout<<ans<<"\n";
	return 0;
}