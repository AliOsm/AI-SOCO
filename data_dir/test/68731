#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2e9;
ll LINF = (ll)4e18;
using namespace std;
ll mod = 998244353;
#define M_PI       3.14159265358979323846   // pi

int contains(string s1, string s2) {
	for (int i = 0; i < s2.size(); i++) {
		if (s2[i] != s1[i]) return 0;
	}
	return 1;
}

int revcontains(string s1, string s2) {
	for (int i = s2.size() - 1; i >= 0; i--) {
		if (s1.back() != s2[i]) return 0;
		s1.pop_back();
	}
	return 1;
}

int n;
vector<pair<string, int>>a;
vector<vector<pair<string, int>>>tmp;

void solve(string s) {
	vector<char>ans(2 * n - 2);

	int ok = 1;

	int c1, c2;
	c1 = c2 = 0;
	vector<int>sz1(n, 0);
	vector<int>sz2(n, 0);

	for (int i = 0; i < 2 * n - 2; i++) {
		if (contains(s, a[i].first)) {
			ans[a[i].second] = 'P';
			sz1[a[i].first.size()]++;
			c1++;
		}
		else if (revcontains(s, a[i].first)) {
			ans[a[i].second] = ' S';
			sz2[a[i].first.size()]++;
			c2++;
		}
		else {
			ok = 0;
			break;
		}
	}

	if (ok) {
		if (c1 > c2) {
			for (int i = 1; i < n; i++) {
				if (ans[tmp[i][0].second] == ans[tmp[i][1].second]) {
					if (revcontains(s, tmp[i][0].first)) {
						ans[tmp[i][0].second] = 'S';
						c1--;
						c2++;
					}
					else if (revcontains(s, tmp[i][1].first)) {
						ans[tmp[i][1].second] = 'S';
						c1--;
						c2++;
					}
				}
			}
		}
		else if (c1 < c2) {
			for (int i = 0; i < n; i++) {
				if (ans[tmp[i][0].second] == ans[tmp[i][1].second]) {
					if (contains(s, tmp[i][0].first)) {
						ans[tmp[i][0].second] = 'P';
						c1++;
						c2--;
					}
					else if (revcontains(s, tmp[i][1].first)) {
						ans[tmp[i][1].second] = 'P';
						c1++;
						c2--;
					}
				}
			}
		}
	}
	else return;
	if (c1 == c2) {
		for (auto v : ans) cout << v;
		exit(0);
	}
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("sum.in", "r", stdin);
	//freopen("sum.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> n;
	tmp.resize(n);
	a.resize(2 * n - 2);
	for (int i = 0; i < 2 * n - 2; i++) {
		cin >> a[i].first;
		a[i].second = i;
		tmp[a[i].first.size()].push_back(a[i]);
	}

	for (int i = 0; i < 2; i++) {
		for (int j = 0; j < 2; j++) {
			solve(tmp[1][i].first + tmp[n - 1][j].first);
			solve(tmp[n - 1][j].first + tmp[1][i].first);
		}
	}
	return 0;
}