//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

#include <iostream>
#include <stdlib.h>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

inline void setmin(int &x, int y) { if (y < x) x = y; }
inline void setmax(int &x, int y) { if (y > x) x = y; }
inline void setmin(ll &x, ll y) { if (y < x) x = y; }
inline void setmax(ll &x, ll y) { if (y > x) x = y; }

const int N = 100000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    cout << fixed;
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int x1, y1, x2, y2, x3, y3;
    cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;
    char c1 = 'A', c2 = 'B', c3 = 'C';
    int d = sqrt(x1 * y1 + x2 * y2 + x3 * y3);
    if (!(d * d == x1 * y1 + x2 * y2 + x3 * y3))
    {
        cout << -1 << "\n";
        return 0;
    }
    if (x1 > y1)
        swap(x1, y1);
    if (x2 > y2)
        swap(x2, y2);
    if (x3 > y3)
        swap(x3, y3);
    if (y1 < y2)
    {
        swap(x1, x2);
        swap(y1, y2);
        swap(c1, c2);
    }
    if (y2 < y3)
    {
        swap(x2, x3);
        swap(y2, y3);
        swap(c2, c3);
    }
    if (y1 < y2)
    {
        swap(x1, x2);
        swap(y1, y2);
        swap(c1, c2);
    }
    if (y1 != d)
    {
        cout << -1 << "\n";
        return 0;
    }
    if (y2 == d && y3 == d)
    {
        cout << d << "\n";
        rep(i, 0, x1)
        {
            rep(j, 0, y1)
                cout << c1;
            cout << "\n";
        }
        rep(i, 0, x2)
        {
            rep(j, 0, y2)
                cout << c2;
            cout << "\n";
        }
        rep(i, 0, x3)
        {
            rep(j, 0, y3)
                cout << c3;
            cout << "\n";
        }
    }
    else
    {
        if (x2 != d - x1)
            swap(x2, y2);
        if (x3 != d - x1)
            swap(x3, y3);
        if (x2 != d - x1 || x3 != d - x1)
        {
            cout << -1 << "\n";
            return 0;
        }
        cout << d << "\n";
        rep(i, 0, x1)
        {
            rep(j, 0, y1)
                cout << c1;
            cout << "\n";
        }
        rep(i, 0, d - x1)
        {
            rep(j, 0, d)
                cout << (j < y2 ? c2 : c3);
            cout << "\n";
        }
    }
    return 0;
}