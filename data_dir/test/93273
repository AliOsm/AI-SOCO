#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define re return
#define ll long long
#define ld long double
#define IO ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
const int N = 2e5 + 5, M = 2 * N + 5;

int head[N], nxt[M], to[M], ne, n;

void init(){
    ne = 0;
    memset(head, -1, n * sizeof head[0]);
}

void addEdge(int f, int t){
    to[ne] = t;
    nxt[ne] = head[f];
    head[f] = ne++;
}

queue<int> q;
int a[N], dis[N][2];

void bfs(bool par){
    for(int i = 0 ; i < n ; ++i){
        if((a[i] & 1) != par)continue;
        dis[i][par] = 0;
        q.emplace(i);
    }
    while(q.size()){
        int u = q.front();
        q.pop();
        for(int e = head[u] ; ~e ; e = nxt[e]){
            int v = to[e];
            if(~dis[v][par])continue;
            dis[v][par] = dis[u][par] + 1;
            q.emplace(v);
        }
    }
}

int main(){
    scanf("%d", &n);
    init();
    for(int i = 0 ; i < n ; ++i){
        scanf("%d", a + i);
        int nxt = i + a[i];
        if(nxt < n)addEdge(nxt, i);
        int prev = i - a[i];
        if(prev >= 0)addEdge(prev, i);
    }
    memset(dis, -1, sizeof dis);
    bfs(0);
    bfs(1);
    for(int i = 0 ; i < n ; ++i)
        printf("%d%c", dis[i][!(a[i] & 1)], " \n"[i == n - 1]);
}