#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y,z;
    bool operator <(const P&a) const{
        return x<a.x;
    }
};

bool as(P a,P b)
{
    return a.x>b.x;
}



long long x,y,z,mod=1000000007;
vector<P> v[1110];
int i,n,m,k,a,d,b,c;
int dx[10]={0,1,0,-1,0},dy[10]={0,0,1,0,-1};
int e[1111];
long long o[100111];
int l[110];
int j[1];

set<int> s;
//stack<int> s;

queue<int> q,q1;
map<int,int> p;
vec u[1111],u1[355],u2[555];
char r;
string r1;


int main()
{
    o[2]=2;
    o[1]=1;
    for(int t=3;t<=100000;t++)
        o[t]=(o[t-1]+o[t-2])%mod;
    scanf("%d %d",&a,&b);
    printf("%lld",(o[a]+o[b]-1)*2%mod);
}

