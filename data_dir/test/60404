#include <bits/stdc++.h>
using namespace std ;

#define sz 200005
#define inf 1000000000000000000
long long a[sz] ;

struct info
{
    long long val ;
    long long yo ;
    bool ck ;
} tree[3*sz] ;

void modify( long long node , long long s , long long e , long long l , long long r , long long x )
{
    if( e < l || s > r ) return ;
    if( l <= s && e <= r )
    {
        tree[node].val += x ;
        tree[node].yo += x ;
        tree[node].ck = 1 ;
        //cout << "node "<< node << endl ;
        return ;
    }
    int mid = ( s + e )/ 2 , left = 2 * node , right = 2 * node  + 1 ;

    if( tree[node].ck )
    {
        //cout << "ck ekhn 1: \n" <<endl ;
        tree[node].ck = 0 ;
        tree[left].ck = 1 ;
        tree[right].ck = 1 ;
        tree[left].yo +=  tree[node].yo  ;
        tree[right].yo += tree[node].yo  ;

        tree[left].val += tree[node].yo ;
        tree[right].val += tree[node].yo ;
        tree[node].yo = 0 ;
    }
    modify(left,s,mid,l,r,x);
    modify(right,mid+1,e,l,r,x);
    tree[node].val = min( tree[left].val , tree[right].val );
}

long long query(long long node,long long s,long long e,long long l,long long r)
{
    if(e<l || s>r ) return inf ;
    if(s>=l && e<=r) return tree[node].val ;
    long long mid=(s+e)/2,left=node*2,right=left+1;

    if(tree[node].ck)
    {
        //cout << "q:: node "<< node <<endl ;
        tree[node].ck = 0 ;
        tree[left].ck = 1 ;
        tree[right].ck = 1 ;
        tree[left].yo +=  tree[node].yo ;
        tree[right].yo += tree[node].yo ;

        tree[left].val += tree[node].yo ;
        tree[right].val += tree[node].yo  ;
         tree[node].yo = 0 ;
        //cout << "tree[left].val  "<< tree[left].val  <<endl ;
        //cout << "tree[right].val "<< tree[right].val <<endl ;

    }
    return min( query(left,s,mid,l,r),query(right,mid+1,e,l,r) );
}

void print_tree(int n)
{
    for( int i = 1 ; i < 3*n ; i++)
    {
        cout << tree[i].val  << " " << tree[i].yo  << " "<< tree[i].ck  << "\n" ;
    }
    cout << endl ;

}

int main()
{
    long long n;
    cin>>n;
    for(int i=1; i<=n; i++)
    {
        scanf("%I64d", &a[i] ) ;
        modify(1,1,n,i,i,a[i]);
    }
    int m;
    cin>>m;
    int line = 0 ;
    while(m--)
    {
        long long l,r,x=0 , c = 0 ;
        char ch ;
        scanf("%I64d", &l ) ;
        scanf("%c", &ch ) ;
        scanf("%I64d", &r ) ;
        scanf("%c", &ch ) ;
        l++ ;
        r++ ;
        if( ch != '\n' ) c = 1 , scanf("%I64d", &x ) ;
        //cout << "l << "<< l << " r = "<< r << " x = "<< x <<endl ;
        if( c )
        {
            if(x)
            {
                if( l <= r ) modify(1,1,n, l, r, x ) ;
                else
                {
                    // cout <<"fuck" <<endl ;
                    modify(1,1,n, l, n, x ) ;
                    modify(1,1,n, 1, r, x ) ;
                }
            }

        }
        else
        {
            long long ans ;
            if( l <= r ) ans = query(1,1,n,l,r) ;
            else
            {
                ans = min ( query(1,1,n,1,r) , query(1,1,n,l,n) );

            }
            //cout << "line "<<++line << " " ;
            cout << ans <<endl ;
        }
        //print_tree(n) ;


    }
}


























































