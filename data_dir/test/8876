#include <iostream>
#include <vector>
using namespace std;

vector<int> edges[100000];
int nxt[100000],len[100000];

int A[100000];
int N;
int rem;

void dfs(int i,int par,long long d,long long lowd,bool ok)
{
	if(d - A[i] > lowd) ok = 0;
	lowd = min(lowd,d);
	//cout << d - A[i] << '\n';
	if(!ok) rem++;
	for(int j=0;j<edges[i].size();j++)
		if(nxt[edges[i][j]]!=par)
			dfs(nxt[edges[i][j]],i,d+len[edges[i][j]],lowd,ok);
}

int main()
{
	cin >> N;
	for(int i=0;i<N;i++)
		cin >> A[i];
	int a,b;
	for(int i=1;i<N;i++)
	{
		cin >> a >> b;
		a--;
		edges[a].push_back(i-1);
		nxt[i-1] = i, len[i-1] = b;
	}
	dfs(0,-1,0,0,1);
	cout << rem << '\n';
}