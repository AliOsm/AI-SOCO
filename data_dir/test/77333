#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z } }

int n, m;

string arr[3000];
bool visited[3000][3000];

int dx[] =
{ 0, 0, 1, -1 };
int dy[] =
{ -1, 1, 0, 0 };

bool inside(int i, int j)
{
	return (i >= 0 && j >= 0 && i < n && j < m);
}

bool valid(int i, int j)
{
	return (!visited[i][j] && arr[i][j] != '#');
}

bool flood(int i, int j)
{
	if (arr[i][j] == 'S')
		return true;
	visited[i][j] = true;
	bool ret = false;
	rep(a, 0, 4)
	{
		int x = i + dx[a], y = j + dy[a];
		x = mod(x, n), y = mod(y, m);
		if (valid(x, y))
		{
			ret |= flood(x, y);
			if (ret)
				return ret;
		}
	}
	return ret;
}


int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n >> m;
	int x, y;
	rep(i, 0, n)
	{
		cin >> arr[i];
		rep(j, 0, sz(arr[i]))
			if (arr[i][j] == 'S')
				x = i, y = j;
		arr[i] += arr[i];
	}
	rep(i, n, 2*n)
		arr[i] = arr[i - n];
	n *= 2;
	m *= 2;

	arr[x][y] = '.';

	if (flood(x, y))
		cout << "Yes";
	else
		cout << "No";

	return 0;
}
