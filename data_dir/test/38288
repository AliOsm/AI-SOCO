#include<bits/stdc++.h>
using namespace std;

#define MOD           1000000007/*998244353*/
#define pi            acos(-1)
#define int           long long 
#define D             double
#define S             second
#define F             first
#define pb            push_back
#define ff            fflush(stdout)
#define ppb           pop_back
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define ub            upper_bound
#define si(c)         (int)((c).size())
#define L(c)           c[si(c)-1]
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)      (a*(b/gcd(a,b)))  
#define accuracy      cout << fixed << setprecision(18);
#define inf           (int)2e18
#define pow(i,n)      (int)pow((int)i,n)
#define err           cerr<<"move"<<'\n';
#define print         cout<<"move"<<'\n';
#define en            '\n'

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef map<string,int>                       msi;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;

const int N=2e5+10;
int f[N+10];

struct fenwickTree{
    void update(int k,int x){
        while(k<=N){
            f[k]+=x;
            k+=(k&(-k));
        }
    }
    int sum(int r){
        int s=0;
        while(r>0){
            s+=f[r];
            r-=(r&(-r));
        }
        return s;
    }
}ft;
void solve(){
    int n,m,r,pos,curr=0,mn;
    cin>>n;
    int a[n],b[n];
    mn=n;
    map<int,set<int> >ma;
    for(int i=0;i<n;i++){
        cin>>a[i];
        b[i]=a[i];
        ma[a[i]].insert(i);
    }
    sort(a,a+n,greater<int>());
    cin>>m;
    int ans[m];
    vector<pair<pii,int > > q;
    for(int i=0;i<m;i++){
        cin>>r>>pos;
        q.pb({{r-1,pos},i});
    }
    sort(all(q));
    for(int i=0;i<m;i++){
        for(int j=curr;j<=q[i].F.F;j++){
            auto it=ma[a[j]].lb(mn);
            if(it!=B(ma[a[j]]))it--;
            ft.update((*it)+1,1);
            mn=min(mn,*it);
            ma[a[j]].erase(it);
        }
        int s=0,e=N,temp;
        while(s<=e){
            int mid=(s+e)/2;
            if(ft.sum(mid)>=q[i].F.S){
                e=mid-1;
                temp=mid;
            }
            else s=mid+1;
        }
        ans[q[i].S]=b[temp-1];
        curr=q[i].F.F+1;
    }
    for(int i=0;i<m;i++){
        cout<<ans[i]<<endl;
    }
}

 
signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);    
    int t=1;
    clock_t start, end; 
    start = clock(); 
    accuracy;
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt","w", stderr);
    #endif
    //cin>>t;

    while(t--){
        solve();
    }

    end = clock();
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC); 
    //cerr<<time_taken;
}