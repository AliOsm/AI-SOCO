#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 2e6 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

int ar[Max];
int s[Max];
int t[Max];
int mark[Max];
double cur[Max];

int main() {
#ifdef Mr_Emrul
	freopen("inputf.in", "r", stdin);
#endif /// Mr_Emrul

	int n, k;
	cin >> n >> k;

	for(int i = 1; i <= n; i++) {
		cin >> ar[i];
	}

	multiset <pll> st;

	for(int i = 1; i <= k; i++) {
		st.insert({0, i});
	}

	for(int i = 1; i <= n; i++) {
		pll x = *st.begin();
		st.erase(st.find(x));
		s[i] = x.first;
		t[i] = x.first + ar[i];
		st.insert({t[i], x.second});
		//cout << t[i] << endl;
		mark[t[i]] += 1;
	}

	for(int i = 1; i < Max; i++) {
		mark[i] += mark[i - 1];
	}

	for(int i = 0; i < Max; i++) {
		cur[i] = round(100 * ((double) mark[i] / (double) n));
	}

	int ans = 0;

	for(int i = 1; i <= n; i++) {

		double x = s[i];
		int rem = 1;
		int f = 0;
		int cnt = 0;

		while(rem <= ar[i]) {
			int to = floor(x);

		//	cout << x << " " << ceil(rem) << " " << setprecision(2) << fixed << " " << cur[(int) to] << endl;

			if(ceil(rem) == cur[to]) {
				//		cout << x << " " << setprecision(2) << fixed << " " << cur[(int) to] << endl;

				f = 1;
			}

			x += .5;
			cnt += 1;

			if(cnt == 2) {
				rem += 1, cnt = 0;
			}
		}

		//printf("================\n");

		ans += f;
	}

	cout << ans << endl;


	return 0;
}