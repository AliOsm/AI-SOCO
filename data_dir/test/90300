#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <cstring>
#include <cstdlib>
#include <set>
using namespace std;
#define INF 2001001001
#define MOD 1000000007
typedef long long ll;

int N,X,Y;
char S[200002];
int x_orig[200002],y_orig[200002],x_back[200002],y_back[200002];

bool check(int mid){
  for (int i=0;i+mid<=N;i++){
    int j=i+mid;
    int dif=abs(x_orig[i]-x_back[j])+abs(y_orig[i]-y_back[j]);
    int len=mid;
    if (dif%2==len%2 && len>=dif)
      return true;
  }
  return false;
}

int main()
{
  scanf("%d",&N);
  scanf("%s",S);
  scanf("%d%d",&X,&Y);
  if (N%2!=(abs(X)+abs(Y))%2 || N<abs(X)+abs(Y)){
    cout<<-1<<endl;
    return 0;
  }
  int x=0,y=0;
  x_back[N]=X;
  y_back[N]=Y;
  x_orig[0]=0;  
  y_orig[0]=0;  
  for (int i=1;i<=N;i++){
    if (S[i-1]=='U')
      y++;
    else if (S[i-1]=='D')
      y--;
    else if (S[i-1]=='L')
      x--;
    else
      x++;
    x_orig[i]=x;
    y_orig[i]=y;
  }
  x=X;y=Y;
  for (int i=N-1;i>=0;i--){
    if (S[i]=='U')
      y--;
    else if (S[i]=='D')
      y++;
    else if (S[i]=='L')
      x++;
    else
      x--;
    x_back[i]=x;
    y_back[i]=y;
  }
  int low=-1,high=N+1,mid;
  while (low+1<high){
    mid=(low+high)/2;
    if (check(mid))
      high=mid;
    else
      low=mid;
  }
  cout<<high<<endl;
  return 0;
}
