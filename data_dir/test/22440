#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
 
using namespace std;


ll gcd(ll a, ll b)
{
    if (a == 0)
        return b;
    return gcd(b%a, a);
}
 
ll powerwithoutfact(ll x,ll y)
{
	if(y==0)
		return 1;
	ll p=powerwithoutfact(x,y/2);
	p*=p;
	if(y%2)
		p*=x;
	return p;
}
ll power(ll x, unsigned ll y, unsigned ll m)
{
    if (y == 0)
        return 1;
    ll p = power(x, y/2, m) % m;
    p = (p * p) % m;
 
    return (y%2 == 0)? p : (x * p) % m;
}
 
 
ll modInverse(ll a, ll m)
{
   	return power(a, m-2, m);
}



int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
	int n;
	cin >> n;
	ll x=1;
	set<ll>powers;
	while(x<=2000000000)
	{
		powers.insert(x);
		x*=2;
	}
	map<ll,ll>m;
	REP(i,1,n)
	{
		ll a;
		cin >> a;
		m[a]++;
	}
	ll ct=0;
	for(auto it:m)
	{
		ll val=it.first;
		char ch='n';
		for(auto it2:powers)
		{
			if(m.find(it2-val)!=m.end())
			{
				auto it3=m.find(it2-val);
				if((*it3).second>1||(*it3).first!=val)
				{
					ch='y';
					break;
				}
			}
		}
		if(ch=='n')
			ct+=it.second;
	}
	cout << ct;
}