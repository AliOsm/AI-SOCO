#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
ll mod=1e9+7;
ll const maxn=2e5+5;
ll const inf=1e18;
ll add(ll a,ll b){
    return ((a%mod)+(b%mod))%mod;
}
ll mul(ll a,ll b){
    return ((a%mod)*(b%mod))%mod;
}
ll powm(ll x,ll n,ll M)
{
    ll result=1;
    while(n>0)
    {
        if(n % 2 ==1)
            result=(result * x)%M;
        x=(x*x)%M;
        n=n/2;
    }
    return result;
}
bool prime(ll x){
    if(x<2)return false;
    for(int i=2;i<=sqrt(x);i++){
        if(x%i==0)return false;
    }
    return true;
}
vector<ll>P(maxn);
vector<ll>adj[maxn];
ll find_set(ll x){
    if(x==P[x])return P[x];
    if(x!=P[x])return P[x]=find_set(P[x]);
}
void merge_set(ll a,ll b){
    a=find_set(a);
    b=find_set(b);
        if(adj[a].size()<adj[b].size())swap(a,b);
        for(auto u:adj[b])adj[a].push_back(u);
        P[b]=a;
}
int main(){
    // #ifndef ONLINE_JUDGE
    // freopen("input.txt","r",stdin);
    // freopen("output.txt","w",stdout);
    // #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll n,m;
    cin>>n;
    for(int i=1;i<=n;i++){
        P[i]=i;
        adj[i].push_back(i);
    }
    for(int i=1;i<=n-1;i++){
        ll x,y;
        cin>>x>>y;
        merge_set(x,y);
    }
    //ll x=find_set(1);
    // for(int i=1;i<=n;i++){
    //     cout<<i<<": ";
    //     for(auto j:adj[i])cout<<j<<" ";
    //         cout<<"\n";
    // }
   // for(int i=1;i<=n;i++)cout<<P[i]<<" ";
    for(auto x:adj[find_set(n)])cout<<x<<" ";
    return 0;
}
