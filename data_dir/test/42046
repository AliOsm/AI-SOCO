
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
const int MOD = 1e9+7;

int N;
vector<int> adj[200100];
int DP1[200100];
int was1[200100];
int P[200100];
map<int,int> DP2[200100];
map<int,int> was2[200100];
inline int add(int a, int b)
{
  a += b;
  if (a >= MOD)
    a -= MOD;
  return a;
}
inline int mul(int a, int b)
{
  return int((a*1ll*b) % MOD);
}
map<int,int> productexcept[200100];
int dp2(int u, int except)
{
  int& x = DP2[u][except];
  if (was2[u][except]) return x;
  was2[u][except] = 1;
  x = productexcept[u][except];
  if (u != 1) 
  {
    x = mul(x, add(1 , dp2(P[u],u) ) );
  }
  return x;

}
int dp1(int u)
{
  int& x = DP1[u];
  if (was1[u]) return x;
  was1[u] = 1;
  x = 1;
  vector<int> left;
  vector<int> right;
  left.clear();
  right.clear();
//  db(u); db(sz(adj[u]));
  rep(i,sz(adj[u]))
  {
    int v = adj[u][i];
    x = mul(x, 1 + dp1(v));
    left.pb(1 + dp1(v));
    right.pb(1 + dp1(v));
  }
  rep(i,sz(left))
  {
    if (i == 0) continue;
    left[i] = mul(left[i], left[i-1]);
  }
  for (int i = sz(right) - 2; i >= 0; i--)
  {
    right[i] = mul(right[i], right[i+1]);
  }
  rep(i,sz(adj[u]))
  {
    int l = 1;
    if (i-1 >= 0) l = left[i-1];
    int r = 1;
    if (i+1 < sz(adj[u])) r = right[i+1];
    int v = adj[u][i];
    productexcept[u][v] = mul(l,r);
  }
  return x;
}
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  cin >> N;
  for (int i = 2; i <= N; i++)
  {
    int u = i, v;
    cin >> v;
    adj[v].pb(u);
    P[u] = v;
  }
  vector<int> ans;
  ans.pb(dp1(1));
  for (int i = 2; i <= N; i++)
  {
    ans.pb(mul(dp1(i), add(1,dp2(P[i],i))));
  }
  rep(i,sz(ans)) cout << ans[i] << (i+1<sz(ans)?' ':'\n');
}
