#include <bits/stdc++.h>

using namespace std;
const int MAXN = 100100;
bool flg[MAXN];
int n, m, a[MAXN], sa[MAXN], uf[MAXN], sz[MAXN];
long long ans = 0;
vector<int> g[MAXN];

int find(int x)
{
	if(!uf[x])
		return x;
	return uf[x] = find(uf[x]);
}

void join(int x, int y)
{
	if((x = find(x)) == (y = find(y)))
		return;
	uf[y] = x;
	sz[x] += sz[y] + 1;
}

int main()
{
	scanf("%d %d", &n, &m);
	for(int i = 1; i <= n; ++i)
		scanf("%d", &a[i]), sa[i] = i;
	for(int i = 1, u, v; i <= m; ++i)
		scanf("%d %d", &u, &v), g[u].push_back(v), g[v].push_back(u);
	sort(sa + 1, sa + n + 1, [](const int& x, const int& y){ return a[x] > a[y]; });
	for(int i = 1, cur; i <= n; ++i)
	{
		cur = sa[i];
		flg[cur] = true;
		for(const int& u : g[cur])
			if(flg[u] && find(cur) != find(u))
			{
				ans += 2LL * (sz[find(cur)] + 1) * (sz[find(u)] + 1) * a[cur];
				join(cur, u);
			}
	}
	printf("%lf\n", ans / (double)(1LL * n * (n - 1)));
}