#include <bits/stdc++.h>
using namespace std;

#define FilesX


#define rdi(i)                  scanf("%d", &i)
#define rdii(i, j)              scanf("%d%d", &i, &j)
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e8;

const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;   }

#define pb                  push_back
#define MP                  make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;


const int N = 100;

vector<int>prime;
bool mat[1000001]={0};
void generate_primes (int n)
{
    prime.clear();
    prime.push_back(2);
    for(int i=3;i*i<=n;i+=2)
    {
        if(mat[i]==0)
        {
            for(int j=i*i; j<n;j+=2*i)
                mat[j]=1;
        }
    }
    for(int i=3;i<=n;i+=2)
        if(!mat[i]) 
            prime.push_back(i);
}
ull gcd(ull a, ull b)
{
    for (;;)
    {
        if (a == 0) return b;
        b %= a;
        if (b == 0) return a;
        a %= b;
    }
}
ull lcm(ull a, ull b)
{
    ull temp = gcd(a, b);
    return temp ? (a / temp * b) : 0;
}

ll power(ll a, ll b){
    ll ans = 1;
    lp(i, b) ans *= a;
    return ans;
}

ll minimum(ll a, ll b){
    if(a < b) return a;
    else return b;
}

int main()
{
#ifdef Files
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false);
    
    vd s(5);
    s[0] = 500, s[1] = 1000, s[2] = 1500, s[3] = 2000, s[4] = 2500;
    vd m(5);
    lp(i, 5) cin >> m[i];
    vd wa(5);
    lp(i, 5) cin >> wa[i];
    int tr, fl; cin >> tr >> fl;
    double ans = 0;
    lp(i, 5){
        ans += max(0.3 * s[i], (1 - m[i] / 250) * s[i] - 50 * wa[i]);
    }
    ans += 100 * tr;
    ans -= 50 * fl;
    cout << (int)(ans + EPS) << endl;
    
    return 0;
}