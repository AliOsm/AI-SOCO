#include<bits/stdc++.h>
using namespace std;
vector<long long int>rh(500009),lf(500009);
stack<long long int>s;
vector<bool>vis(500009);
vector<long long int>vec,vec2,vis2(500009);
vector<long long int>::iterator it;
long long int call(long long int a)
{
    if(a==vec[a])
    {
        return a;
    }
    else
    {
        return vec[a]=call(vec[a]);
    }
}
long long int call_2(long long int a)
{
    if(a==vec2[a])
    {
        return a;
    }
    else
    {
        return vec2[a]=call_2(vec2[a]);
    }
}
int main()
{
    long long int a,b,c,d,e,i,j,k,l,n,m,p,mm,x,y,z=0;
    scanf("%lld%lld%lld",&n,&m,&p);
    p--;
    fill(rh.begin(),rh.end(),-1);
    fill(lf.begin(),lf.end(),-1);
    fill(vis.begin(),vis.end(),true);
    string st,ans;
    cin>>st;
    cin>>ans;
    for(i=0;i<n;i++)
    {
        if(st[i]=='(')
        {
            s.push(i);
        }
        else if(st[i]==')')
        {
            a=s.top();
            s.pop();
            lf[a]=i;
            rh[i]=a;
        }
    }
    for(i=0;i<=n+5;i++)
    {
        vec.push_back(i);
        vec2.push_back(i);
    }
    for(i=0;i<m;i++)
    {
        if(ans[i]=='R')
        {
            p=call(p+1);
        }
        else if(ans[i]=='L')
        {
            p=call_2(p-1);
        }
        else if(ans[i]=='D')
        {
            if(lf[p]!=-1)
            {
                a=lf[p];
                b=a+1;
                a=p;
                vis[a]=false;
                vis[b-1]=false;
                vis2[a]=b-1;
                vec[a]=vec[b];
                vec[b-1]=vec[b];
                d=max(a-1,z);
                vec2[a]=vec2[d];
                vec2[b-1]=vec2[d];
                a=call(p);
                if(a<n)
                {
                    p=a;
                }
                else
                {
                    p=call_2(p);
                }
            }
            else if(rh[p]!=-1)
            {
                a=rh[p];
                b=p+1;
                vis[a]=false;
                vis[b-1]=false;
                vis2[a]=b-1;
                vec[a]=vec[b];
                vec[b-1]=vec[b];
                d=max(a-1,z);
                vec2[a]=vec2[d];
                vec2[b-1]=vec2[d];
                a=call(p);
                if(a<n)
                {
                    p=a;
                }
                else
                {
                    p=call_2(p);
                }
            }
        }
    }
    for(i=0;i<n;i++)
    {
        if(vis[i]==true)
        {
            printf("%c",st[i]);
        }
        else
        {
            i=vis2[i];
        }

    }
    printf("\n");
    return 0;
}

