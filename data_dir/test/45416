#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

template<typename T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
#define pi pair<ll,ll>
#define __   ios_base::sync_with_stdio(0);cin.tie();cout.tie();
#define mod 1000000007
#define base 1949313259

ll Set(ll N,ll pos){ return N=N | (1LL<<pos); }
ll reset(ll N,ll pos){ return N= N & ~(1LL<<pos); }
bool check(ll N,ll pos){ return (bool)(N & (1LL<<pos)); }


ll ar[]={0,0,1,-1};
ll br[]={1,-1,0,0};

string s,s1,s2;
ll n,m;
ll arr[500010];
ll brr[500010];
vector<ll>v,v1;

map<ll,ll>mp;
ll vis[500005];
int main()
{__
        ll i,j,a,b,c,d,e,f,g,x,y,z,t,k,l;

        ll ans=0;

        cin>>n>>m>>k;

        for(i=1;i<=n;i++) cin>>arr[i];

        for(i=1;i<=m;i++) cin>>brr[i];
        ll cnt=0;
        for(i=1;i<=n;i++){
            if(arr[i]==1){
                cnt++;
                v.push_back(cnt);
            }
            else{
                cnt=0;
            }
        }

        cnt=0;
        for(i=1;i<=m;i++){
            if(brr[i]==1){
                cnt++;
                v1.push_back(cnt);
            }
            else{
                cnt=0;
            }
        }
        //if(cnt!=0) v1.push_back(cnt);
       // cout<<v.size()<<" "<<v1.size()<<endl;
        ll v_sz=v.size();
        ll v1_sz=v1.size();

        sort(v.begin(),v.end());
        sort(v1.begin(),v1.end());

        for(i=1;i*i<=k;i++){
            if(k%i==0){



                if(k/i!=i){
                    ans+=(v_sz-(lower_bound(v.begin(),v.end(),i)-v.begin()))*(v1_sz-(lower_bound(v1.begin(),v1.end(),k/i)-v1.begin()));
         //           cout<<ans<<endl;
                    ans+=(v_sz-(lower_bound(v.begin(),v.end(),k/i)-v.begin()))*(v1_sz-(lower_bound(v1.begin(),v1.end(),i)-v1.begin()));
         //           cout<<ans<<endl;
                }
                else{
                    ans+=(v_sz-(lower_bound(v.begin(),v.end(),i)-v.begin()))*(v1_sz-(lower_bound(v1.begin(),v1.end(),k/i)-v1.begin()));
                }
        //        cout<<i<<" "<<ans<<" "<<(lower_bound(v.begin(),v.end(),i)-v.begin())<<" "<<(lower_bound(v1.begin(),v1.end(),k/i)-v1.begin())<<endl;
            }
        }
        cout<<ans<<endl;
}

