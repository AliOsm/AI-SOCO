// --------------------<optimizations>--------------------
#pragma GCC optimize("O3")

//(UNCOMMENT WHEN HAVING LOTS OF RECURSIONS)\
#pragma comment(linker, "/stack:200000000")
//(UNCOMMENT WHEN TRYING TO BRUTEFORCE WITH A LOT OF LOOPS)\
#pragma GCC optimize("unroll-loops")
// -------------------</optimizations>--------------------
#include<bits/stdc++.h>
using namespace std;
#define int long long
#define d long double
#define pii pair<int,int>
#define pb push_back
#define pf push_front
#define cases int tc;cin>>tc;while(tc--)
#define N 200003
#define M 103
#define inf LLONG_MAX
//int mod=1e9+7;
//int mod=998244353;
int ind[N],ans[N];
set<int,greater<int> > num;
set<int> pos;

signed main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

    num.clear();pos.clear();
    int n,k;
    cin>>n>>k;
    int a[n+1];
    int i,j;
    for(i=1;i<=n;++i)
        cin>>a[i],ind[a[i]]=i,num.insert(i),pos.insert(i);

    int f=1,t1,c1;
    while(num.size())
    {
        t1=*num.begin();
        num.erase(t1);
        auto it=pos.lower_bound(ind[t1]);
        ans[*it]=f;
        pos.erase(*it);
        c1=k;
        while(c1 and pos.size())
        {
            it=pos.lower_bound(ind[t1]);
            if(it==pos.end())
                break;
            ans[*it]=f;
            --c1;
            num.erase(a[*it]);
            pos.erase(*it);
        }

        c1=k;
        --it;
        while(c1 and pos.size())
        {
            it=pos.lower_bound(ind[t1]);
            if(it==pos.begin())
                break;
            --it;
            ans[*it]=f;
            --c1;
            num.erase(a[*it]);
            pos.erase(*it);
        }

        f=3-f;
    }

    for(i=1;i<=n;++i)
        cout<<ans[i];



    return 0;
}
