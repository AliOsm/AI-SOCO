/*||>>>> Praveen Ojha <<<<>>>> 18 July 2019 <<<<>>>> 00:07:39 <<<<||*/
// #pragma GCC optimize("Ofast")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
// #pragma GCC optimize("unroll-loops")
// #pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("O3")
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define F first
#define S second
#define mod 998244353
#define inf (int)1e18+5
#define sz(x) (int)x.size()
#define PI 3.141592653589793238510
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define __ ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define vi vector<int>
#define vpii vector<pair<int,int> > 
#define vvi vector<vector<int> >
#define PRINT_TIME cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s." <<endl;
#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename   enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
  ris << "(" << d.first << ", " << d.second << ")";
}
sim dor(rge<c> d) {
  *this << "[";
  for (auto it = d.b; it != d.e; ++it)
    *this << ", " + 2 * (it == d.b) << *it;
  ris << "]";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "
typedef long double ld;
typedef pair<int,int> pii;
//Read Problems Carefully & Check for corner cases N=0,1 ?
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
inline int powermod(int a,int n){
	int result=1;
	a=a%mod;
	while(n>0){
		if(n & 1)
			result=(a*result)%mod;
		a=(a*a)%mod;
		n/=2;
	}
	return result;
}
int32_t main(){__
	int n;
	cin>>n;
	vi a(n);
	for(int i=0;i<n;i++){
		cin>>a[i];
	}
	int le=(int)log10(a[0])+1;
	vi ans(2*le+1,0);
	for(int i=0;i<n;i++){
		int x=a[i],cur=0;
		while(x>0){
			int tt=(x%10)*n;
			ans[cur]=ans[cur]+tt;
			ans[cur+1]=ans[cur+1]+tt;
			x/=10;
			cur+=2;
		}
	}
	// debug()<< imie(ans);
	for(int i=0;i<2*le;i++){
		int x=ans[i];
		ans[i]=x%10;
		ans[i+1]+=(x/10);
	}
	int res=0;
	for(int i=0;i<=2*le;i++){
		res=(res+(ans[i]*powermod(10,i))%mod)%mod;
	}
	cout<<res<<"\n";
return 0;
}