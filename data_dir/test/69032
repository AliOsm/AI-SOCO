#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000007;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// -------------------------------------------------------------------------------------------------------------

int A[105][105], N, M, D;

int check(int x, int y, int dx, int dy)
{
    int ret = 0;
    while(true)
    {
        if(x < 0 || x > 100 | y < 0 || y > 100) break;
        ret += A[x][y];
        x += dx, y += dy;
    }
    return ret;
}

bool inside(int x, int y)
{
    if(A[x][y]) return true;

    f(dx,-1,1) f(dy,-1,1)
    {
        if(abs(dx)+abs(dy) == 1)
        {
            int v = check(x,y,dx,dy);
            if(v != 1) return false;
        }
    }
    return true;
}

int main()
{
    faster_io();

    cin >> N >> D >> M;
    int x = D, y = 0;
    while(x > 0)
    {
        A[x][y] = 1;
        x--, y++;
    }
    while(x < N-D)
    {
        A[x][y] = 1;
        x++, y++;
    }
    while(x < N)
    {
        A[x][y] = 1;
        x++, y--;
    }
    while(x > D)
    {
        A[x][y] = 1;
        x--, y--;
    }
    f(i,1,M)
    {
        int x,y;
        cin >> x >> y;
        if(inside(x,y)) cout << "YES\n";
        else cout << "NO\n";
    }
}
