#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define pii pair<ll,ll>
const ll M=3e5+5;
std::vector<ll> vtr[M];
ll U[M],V[M],wt[M],dist[M],val[M];
bool vis[M];
std::vector<ll> ans;
ll adj(ll e,ll x)
{
	if(U[e]==x)
		return V[e];
	return U[e];
}
void dij(ll x)
{
	priority_queue< pii , vector<pii> , greater<pii> > pq;
	dist[x]=0;
	pq.push(mp(dist[x],x));
	while(!pq.empty())
	{
		pii p=pq.top();
		pq.pop();
		x=p.ss;
		if(vis[x])
			continue;
		vis[x]=1;
		if(val[x])
			ans.pb(val[x]);
		for(ll i=0;i<vtr[x].size();i++)
		{
			ll e=vtr[x][i];
			ll u=adj(e,x);
			if(dist[u]>dist[x]+wt[e])
			{
				dist[u]=dist[x]+wt[e];
				val[u]=e;
				pq.push(mp(dist[u],u));
			}
		}
	}
}
int main()
{
	ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,m,k,i,u,v;
	cin>>n>>m>>k;
	for(i=1;i<=m;i++)
	{
		cin>>u>>v>>wt[i];
		vtr[u].pb(i);
		vtr[v].pb(i);
		U[i]=u;
		V[i]=v;
	}
	for(i=1;i<=n;i++)
		dist[i]=1e16;
	dij(1);
	ll pt=min((ll)ans.size(),k);
	cout<<pt<<"\n";
	for(i=0;i<pt;i++)
	{
		cout<<ans[i]<<" ";
	}
	cout<<"\n";
	return 0;
}