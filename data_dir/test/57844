#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <string>
#include <stdlib.h>
#include <set>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <math.h>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>	
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>
using namespace std;

#pragma region TEMPLATE
#define int long long
#define _USE_MATH_DEFINES
#define double long double
typedef long long ll;
typedef unsigned long long ull;
template <typename T>
void __read(T& a) { cin >> a; }
template <typename T, typename ... Args>
void __read(T& a, Args& ... args) { cin >> a; __read(args...); }
#define make(t, ...) t __VA_ARGS__; __read(__VA_ARGS__)
#define makev(a, n) VI e(n); FOR(n) cin >> e[i];
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
typedef vector<int> VI;
typedef vector<vector<int>> VVI;
typedef pair<int, int> PII;
typedef pair<pair<int, int>, int> PPII;
constexpr ll M7 = 1000000007ll;
constexpr ll M9 = 1000000009ll;
constexpr ll MFFT = 998244353ll;
template <class T> void outv(T& a) { for (auto& x : a) cout << x << ' '; }
mt19937 rnd(static_cast<unsigned>(chrono::steady_clock::now().time_since_epoch().count()));
template <class T> void random_shuffle(T s, T e) { shuffle(s, e, rnd); };
static auto __super_speed__ = (ios_base::sync_with_stdio(0), cin.tie(0));
#pragma endregion



int32_t main() {
	make(int, n, m);
	map<int, int> prev;
	queue<int> q;
	q.push(n);
	while (!q.empty()) {
		int v = q.front();
		q.pop();
		if (v == m) break;
		if (v > m) continue;
		prev[2 * v] = v;
		prev[10 * v + 1] = v;
		q.push(2 * v);
		q.push(10 * v + 1);
	}
	if (prev.count(m)) {
		cout << "YES\n";
		VI ans = { m };
		while (ans.back() != n) ans.push_back(prev[ans.back()]);
		cout << ans.size() << '\n';
		FOR(ans.size()) cout << ans[ans.size() - i - 1] << ' ';
	}
	else cout << "NO";
	return 0;
}