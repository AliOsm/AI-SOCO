#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, m;
vector<vector<ll> > arr, dp;

int main (int argc, char *argv[])
{
	scanf("%d%d", &n, &m);
	arr.resize(n);
	dp.resize(n);
	for(int i = 0; i < n; ++i) {
		arr[i].resize(m);
		dp[i].resize(m, -ll(1e18));
		for(int j = 0; j < m; ++j) {
			scanf("%lld", &arr[i][j]);	
		}
	}
	ll cnt = 0;
	for(int j = 0; j < m; ++j) {
		cnt += arr[0][j];
		dp[0][j] = cnt;
	}
	for(int i = 1; i < n; ++i) {
		if(i % 2) {
			ll cnt = 0;
			vector<ll> new_dp;
			new_dp.resize(m);
			for(int j = m - 1; j >= 0; --j) {
				new_dp[j] = dp[i - 1][j];
				if(j != m - 1) {
					new_dp[j] = max(new_dp[j], new_dp[j + 1]);
				}
			}
			for(int j = 0; j + 1 < m; ++j) {
				cnt += arr[i][j];
				dp[i][j] = cnt + new_dp[j + 1];
			}
		} else {
			ll cnt = 0, mx = -ll(1e18);
			for(int j = 0; j < m; ++j) {
				cnt += arr[i][j];
				if(j) {
					dp[i][j] = cnt + mx;
				}
				mx = max(mx, dp[i - 1][j]);
			}
		}
	}
	ll ans = -ll(1e18);
	for(int j = 0; j < m; ++j) {
		ans = max(ans, dp[n - 1][j]);
	}
	printf("%lld", ans);

	return 0;
}

