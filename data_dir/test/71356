#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<bool> vb;
typedef vector<string> vs;
const int MOD = 1e9 + 7;
const int di[] = { -1,0,1,0,1,-1,1,-1 };
const int dj[] = { 0,1,0,-1,1,-1,-1,1 };

string nxt = "A";
void getNxt() {
	if (nxt == "Z")
		nxt = "Aa";
	else if (nxt.length() == 1)
		nxt[0]++;
	else
		nxt.back()++;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	int n, k; cin >> n >> k;
	vs r;
	string s; cin >> s;
	if (s == "NO") {
		r.push_back(nxt), r.push_back(nxt);
		for (int i = 0; i < k - 2; i++) {
			getNxt();
			r.push_back(nxt);
		}
	}
	else {
		for (int i = 0; i < k; i++) {
			getNxt();
			r.push_back(nxt);
		}
	}
	for (int i = 1; i < n - k + 1; i++) {
		cin >> s;
		if (s == "YES") {
			getNxt();
			r.push_back(nxt);
		}
		else {
			bool f = false;
			for (int j = 0; j < k - 2; j++) {
				if (r[r.size() - 1 - j] == r[r.size() - 1 - j - 1]) {
					f = true;
					break;
				}
			}
			if (f) getNxt();
			r.push_back(r[r.size() - k + 1]);
		}
	}
	for (int i = 0; i < r.size(); i++) {
		cout << r[i] << (i == r.size() - 1 ? "\n" : " ");
	}
	//cin.ignore(), cin.get();
}