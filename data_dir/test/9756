#include<bits/stdc++.h>
using namespace std;
#define N 1000005
#define LL long long
LL n,m,f[N],g[N],h[N],id,mx,ans;
char a[N],b[N],s[N];
struct BIT
{
	LL t[N];
	LL lowbit(LL x){return x&(-x);}
	void add(LL x,LL c){if(x)while(x<N)t[x]+=c,x+=lowbit(x);}
	LL ask(LL x){LL res=0;while(x)res+=t[x],x-=lowbit(x);return res;}
	LL get(LL x){return ask(N-1)-ask(max(0ll,x-1));}
}t1,t2;
void getH(int n)
{
	id=mx=1,h[1]=n;
	for(int i=2;i<=n;i++)
	  {
	  if(i>=mx)for(h[i]=0;i+h[i]<=n && s[i+h[i]]==s[1+h[i]];h[i]++);
	  else
	    if(i+h[i-id+1]<mx)h[i]=h[i-id+1];
	    else for(h[i]=mx-i;i+h[i]<=n && s[i+h[i]]==s[1+h[i]];h[i]++);
	  if(i+h[i]>mx)mx=i+h[i],id=i;
	  }
}
int main()
{
	scanf("%lld%lld%s%s%s",&n,&m,a+1,b+1,s+1);
	getH(m-1),id=mx=0;
	for(int i=1;i<=n;i++)
	  {
	  if(i>=mx)for(f[i]=0;i+f[i]<=n && 1+f[i]<m && a[i+f[i]]==s[1+f[i]];f[i]++);
	  else
	    if(i+h[i-id+1]<mx)f[i]=h[i-id+1];
	    else for(f[i]=mx-i;i+f[i]<=n && 1+f[i]<m && a[i+f[i]]==s[1+f[i]];f[i]++);
	  if(i+f[i]>mx)mx=i+f[i],id=i;
	  }
	reverse(s+1,s+m+1);
	reverse(b+1,b+n+1);
	getH(m-1),id=mx=0;
	for(int i=1;i<=n;i++)
	  {
	  if(i>=mx)for(g[i]=0;i+g[i]<=n && 1+g[i]<m && b[i+g[i]]==s[1+g[i]];g[i]++);
	  else
	    if(i+h[i-id+1]<mx)g[i]=h[i-id+1];
	    else for(g[i]=mx-i;i+g[i]<=n && 1+g[i]<m && b[i+g[i]]==s[1+g[i]];g[i]++);
	  if(i+g[i]>mx)mx=i+g[i],id=i;
	  }
	reverse(g+1,g+n+1);
	for(int i=1;i<=min(n,m-2);i++)t1.add(g[i],1),t2.add(g[i],g[i]);
	for(int i=1;i<=n;i++)
	  {
	  if(i+m-2<=n)t1.add(g[i+m-2],1),t2.add(g[i+m-2],g[i+m-2]);
	  ans+=(f[i]-m+1)*t1.get(m-f[i])+t2.get(m-f[i]);
	  t1.add(g[i],-1),t2.add(g[i],-g[i]);
	  }
	printf("%lld\n",ans);
	return 0;
}
