#include<bits/stdc++.h>
//#include <ext/pb_ds/tree_policy.hpp>
//#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
//using namespace __gnu_pbds;
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>pbds;
//#pragma comment(linker, "/stack:200000000")
#define mod ( ll  ) ( 998244353 )  //( 1e9 + 7 )
#define ll long long int
#define inf ( ll  )( 1e9 + 10 )
#define mxs (int)( 1e7 + 10 )
//#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
int n, m, cases, t , ans , k;
string s , s2 , s3;
ll ar [ mxs ];
void brainfuck();
bool checker()
{
    int a , b , c , d;
    cin>>n>>a>>b>>c>>d;
    int x = a - b;
    int y = a + b;
    a = x;
    b = y;

    x = c - d;
    y = c + d;
    c = x;
    d = y;

    m = a * n;
    //cerr<<m<<endl;
    if ( m >= c && m <= d )return 1;
    if ( m > d )return 0;

    while( n-- )
    {
        x = c - m;

        y = min( x , b - a );
        m += y;
        //cerr<<m<<endl;
        if ( m >= c )return 1;
    }
    return 0;
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>t;
    while( t-- )
    {
        if ( checker() )cout<<"Yes\n";
        else cout<<"No\n";
    }
}
