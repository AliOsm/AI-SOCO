#include <bits/stdc++.h>

#define FI(i,a,b) for(int i = (a);i <= (b);i++)
#define FD(i,a,b) for(int i = (a);i >= (b);i--)

using namespace std;

#define LL long long
#define mod 1000000007

int mu[100005], isp[100005], n, m, t;

int fact[100005], inv[100005];

vector<int> ft[100005];

int po(int a, int b){
  int c = 1, d = a;
  while(b){
    if(b & 1) c = 1LL * c * d % mod;
    d = 1LL * d * d % mod;
    b >>= 1;
  }
  return c;
}

int ncr(int a, int b){
  if(b < 0 || b > a) return 0;
  
  int ret = fact[a];
  ret = 1LL * ret * inv[b] % mod;
  ret = 1LL * ret * inv[a - b] % mod;
  return ret;
}

int main(){
  FI(i, 1, 100000) mu[i] = isp[i] = 1;
  FI(i, 1, 100000) for(int j = i; j <= 100000; j += i) ft[j].push_back(i);
  
  FI(i, 2, 100000) if(isp[i]){
    for(int j = i; j <= 100000; j += i){
      mu[j] *= -1;
      if(j % (i * i) == 0) mu[j] = 0;
      isp[j] = 0;
    }
  }
  
  fact[0] = inv[0] = 1;
  FI(i, 1, 100000) fact[i] = 1LL * fact[i - 1] * i % mod;
  FI(i, 1, 100000) inv[i] = 1LL * inv[i - 1] * po(i, mod - 2) % mod;
  
  scanf("%d", &t);
  FI(i, 1, t){
    scanf("%d %d", &n, &m);
    
    int ans = 0;
    
    FI(j, 0, (int)ft[n].size() - 1){
      int gg = ft[n][j];
      int bsum = n / gg;
      
      ans += 1LL * mu[gg] * ncr(bsum - 1, m - 1) % mod;
      ans = (ans % mod + mod) % mod;
    }
    
    printf("%d\n", ans);
  }
  return 0;
}