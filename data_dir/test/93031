#include <string.h>
#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stdlib.h>    
#include <time.h> 
#include <stack>
#include <queue>
#include <set>
 
#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
 
#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf
 
#define pf printf
#define mp make_pair
 
using namespace std;
const int N = 501000;
const int mod = 1e9+7;
//const int mod = 1000000007;

int inf = 1000000000;
int n,m;
vector< pair<int,int> > ans;
vector<int> vc,vr;
int check(int x1, int y1, int x2, int y2){
	printf("? %d %d %d %d\n",x1,y1,x2,y2);
	fflush(stdout);
	int ret;
	cin>>ret;
	return ret;
}

void sol(){
	vector<int> vc,vr;
	for(int i = 1; i <=n; ++i) {
		int ret = check(1,i,n,i);
		if(ret&1) {
			vc.pb(i);
		}
		ret = check(i,1,i,n);
		if(ret&1) {
			vr.pb(i);
		}
	}
	if(vc.size()>0&&vr.size()>0) {
		for(int i = 0; i < vc.size();++i) {
			fr(j,0,vr.size()) {
				int ret = check(vr[i],vc[j],vr[i],vc[j]);
				if(ret&1){
					ans.pb(mp(vr[i],vc[j]));
				}
			}
		}
		return;
	}
	else if(vc.size()>0) {
		int l = 0, r = n;
		while(l+1<r) {
			int mid = (l+r)>>1;
			int ret = check(1,vc[0],mid,vc[0]);
			if(ret&1) {
				r = mid;
			}
			else {
				l = mid;
			}
		}
		ans.pb(mp(r,vc[0]));
		ans.pb(mp(r,vc[1]));
	}
	else {
		int l = 0, r = n;
		while(l+1<r) {
			int mid = (l+r)>>1;
			int ret = check(vr[0],1,vr[0],mid);
			if(ret&1) {
				r = mid;
			}
			else {
				l = mid;
			}
		}
		ans.pb(mp(vr[0],r));
		ans.pb(mp(vr[1],r));
	}
}

int main() {
	cin>>n;
	sol();
	printf("! %d %d %d %d\n",ans[0].first, ans[0].second, ans[1].first, ans[1].second);
}
