#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>; using vi = vector<int>;
template <class T> istream &operator>>(istream &, vector<T> &);
template <class T> ostream &operator<<(ostream &, const vector<T> &);
using ll = long long; using vll = vector<long long>;
constexpr int INF = 0x3f3f3f3f; constexpr ll BINF = 0x3f3f3f3f3f3f3f3fLL;

ll get(int r) {
	if (r <= 0) return 0;
	if (r <= 1) return -1;
	ll sum = 0;
	if (r & 1) {
		int fst = -1, sec = -r, terms = (r + 1) / 2;
		sum += 1LL * (fst + sec) * terms / 2;
		fst = 2, sec = r - 1, terms = (r - 1) / 2;
		sum += 1LL * (fst + sec) * terms / 2;
	} else {
		int fst = -1, sec = -(r - 1), terms = r / 2;
		sum += 1LL * (fst + sec) * terms / 2;
		fst = 2, sec = r, terms = r / 2;
		sum += 1LL * (fst + sec) * terms / 2;
	}
	return sum;
}

int solve() {
	int l, r; cin >> l >> r;
	cout << get(r) - get(l - 1) << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}

template <class T> istream &operator>>(istream &is, vector<T> &v) {
	for (auto it=v.begin();it!=v.end();++it) is >> *it;
	return is;
}

template <class T> ostream &operator<<(ostream &os, const vector<T> &v) {
	for (auto it=v.begin();it!=v.end();) os << *it << " \n"[++it==v.end()];
	return os;
}
