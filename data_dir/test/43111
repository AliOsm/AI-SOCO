#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <hash_map>
#include <map>
#include <hash_set>
#include <unordered_map>
#include <set>
#include <stack>
#include <algorithm>
#include <sstream>

using namespace std;
typedef long long LL;
#define mems(arr, val) memset(arr, val, sizeof(arr));
#define iterat(A) A.begin(), A.end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define INF 2000000000
#define SIZE 1000009
bool erat[SIZE];

int main()
{
//	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
	double sum = 0;
	vector<double> A(1, 0);
	int n;
	cin>>n;
	vector<double> delta(1, 0);
	forn(i, 0, n)
	{
		int t;
		cin>>t;
		if (t == 1)
		{
			double a, x;
			cin>>a>>x;
			sum += a * x;
			a--;
			a = min(a, (double)(A.size() - 1));
			delta[a] += x;
		}
		 
		if (t == 2)
		{
			double x;
			cin>>x;
			sum += x;
			A.push_back(x);
			delta.push_back(0);
		}

		if (t == 3)
		{
			//if (A.size() == 0) continue;
			sum -= A[A.size() - 1];
			sum -= delta[delta.size() - 1];
			if (delta.size() > 1)
			{
				delta[delta.size() - 2] += delta[delta.size() - 1];
			}

			A.pop_back();
			delta.pop_back();
		}

		printf("%.10f\n", sum / A.size());
	}
	return 0;
}