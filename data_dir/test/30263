#include <bits/stdc++.h>

using namespace std;

const int MaxN = 5e2 + 15;
const int MaxQ = 5e5 + 15;
const int INF = 1e9;

int n, m, k, q;

int b[MaxN][MaxN];

struct del{
    int x, y, t;
    bool operator < (const del & oth) const
    {
        return t < oth.t;
    }
} a[MaxQ];

bool can(int d)
{
    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
            b[i][j] = 0;

    for(int i = 1; i <= d; ++i)
        b[a[i].x][a[i].y] = 1;

    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
        {
            if(b[i][j])
                b[i][j] += min(b[i - 1][j], min(b[i][j - 1], b[i - 1][j - 1]));
            if(b[i][j] >= k)
                return true;
        }
    return false;
}

int main()
{
//    freopen("input.txt", "r", stdin);
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m >> k >> q;
    for(int i = 1; i <= q; ++i)
        cin >> a[i].x >> a[i].y >> a[i].t;
    sort(a + 1, a + q + 1);
    int ans = 0;
    int l = 1;
    int r = q;
    while(l <= r)
    {
        int mid = (l + r) / 2;
        if(can(mid))
        {
            ans = mid;
            r = mid - 1;
        }else
            l = mid + 1;
    }
    a[0].t = -1;
    cout << a[ans].t << '\n';
}
