#include <bits/stdc++.h>
#define endl '\n'

#define int long long

using namespace std;
const int MAXN = (1 << 20);
const int mod = (int)1e9 + 7;
const int bound = (int)1e6 + 42;
const int OFFSET = 4;

template <class T>
struct fenwick
{
	int sz;
	T tr[MAXN];

	void init(int n)
	{
		sz = OFFSET + n + 1;
		memset(tr, 0, sizeof(tr));
	}

	T query(int idx)
	{
		idx += OFFSET;
		T ans = 0;
		for(; idx >= 1; idx -= (idx & -idx))
			ans = (ans + tr[idx]) % mod;
		return ans;
	}

	void update(int idx, T val)
	{
		idx += OFFSET;	
		if(idx <= 0) return;
		for(; idx <= sz; idx += (idx & -idx))
			tr[idx] = (tr[idx] + val) % mod;
	}
};

int n;
int a[MAXN];

void read()
{
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> a[i];
}

fenwick<int> t;
int last[MAXN];

void solve()
{
	t.init(bound);
	
	for(int i = 0; i < n; i++)
	{
		int nw_ans = (t.query(a[i]) * a[i] + a[i]) % mod; 
		t.update(a[i], (nw_ans - last[a[i]] + mod) % mod);
		last[a[i]] = nw_ans;
	}			
	
	cout << t.query(bound) << endl;
}

#undef int
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

