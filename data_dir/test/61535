#include<bits/stdc++.h>
#define mx 100000000;

using namespace std;
pair<int,int> mypair;
string s1="";
bool flag=0;
map<string,int >mymap;

int fun(int len,int i,string sum,string s)
{
    if(mymap[sum])
    {
        if(mymap[sum]==1) return 1;
        else return 0;
    }
    if(flag==1)
        return 0;
    if(sum.length()>0)
    {
        int p=sum.length();
        int q=0;
        int j=0;
        while(j<p)
        {
            q = (q*10)+sum[j]-'0';
            q=q%8;
            j++;
        }
        if(q==0)
        {
            if(flag==0)
            {
                s1+=sum;
                flag=1;
            }
            mymap[sum]=1;;
            return 1;
        }
    }
    if(i==len-1)
    {
        int p=sum.length();
        if(p==0)
            return 0;
        int q=0;
        int j=0;
        while(j<p)
        {
            q = (q*10)+sum[j]-'0';
            q=q%8;
            j++;
        }
        if(q==0)
        {
            if(flag==0)
            {
                s1+=sum;
                flag=1;
            }
            mymap[sum]=1;;
            return 1;
        }
        else
        {
            mymap[sum]=2;
            return 0;
        }
    }
    if(i>len-1)
        return 0;
    int p=fun(len,i+1,sum+s[i+1],s);
    int q=fun(len,i+1,sum,s);
    return p|q;
}

int main()
{
    int  c,d,a,b,i,j,k,m,l,t,n,p,q,x,y;
    string s,s2="";
    while(cin>>m>>n>>k)
    {
        int  ara[m+2][n+2];
        memset(ara,0,sizeof(ara));
        int ans =0;
        for(i=0;i<k;i++)
        {
            cin>>p>>q;
            ara[p][q]=1;
            if(((ara[p+1][q]&&ara[p+1][q+1]&&ara[p][q+1])||(ara[p+1][q]&&ara[p+1][q-1]&&ara[p][q-1]) ||(ara[p-1][q]&&ara[p-1][q-1]&&ara[p][q-1]) ||(ara[p-1][q]&&ara[p-1][q+1]&&ara[p][q+1])) && !ans)
                ans=i+1;
        }

        cout<<ans<<endl;
    }
}
