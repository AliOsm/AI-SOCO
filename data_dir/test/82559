#include<bits/stdc++.h>
using namespace std;

#define int long long
#define fast ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define endl "\n"
typedef long long ll;
typedef long double ld;
const int mod = 1000000007;

int power(int x,int y){int res=1;x=x%mod;while(y>0){if(y&1)res=(res*x)%mod;y=y>>1;x=(x*x)%mod;}return res;}
int ncr(int n,int r){int res=1;if(r>n-r)r=n-r;for(int i=0;i<r;i++){res*=(n-i);res/=(i+1);}return res;}
int gcd(int a,int b){if (a==0)return b;return gcd(b%a,a);}
int lcm(int a,int b){return (a/gcd(a,b)*b);}
int max(int a,int b){int ans=a>b?a:b;return ans;}
int min(int a,int b){int ans=a<b?a:b;return ans;}
//cout<<fixed<<setprecision(8)<<x<<endl;
clock_t time_p=clock();
void rtime(){time_p=clock()-time_p;cerr<<"******************\nTime taken : "<<(double)(time_p)/CLOCKS_PER_SEC<<"\n";}


signed main()
{
    //fast;
    //int t=1; cin>>t; while(t--)
    {
        int n,y=0;
        cin>>n;
        set<int> s;

        string x="47";
        do
        {
            stringstream ss(x);
            y=0;
            ss>>y;
            s.insert(y);
        }while(next_permutation(x.begin(),x.end()));

        x="4477";
        do
        {
            stringstream ss(x);
            y=0;
            ss>>y;
            s.insert(y);
        }while(next_permutation(x.begin(),x.end()));

        x="444777";
        do
        {
            stringstream ss(x);
            y=0;
            ss>>y;
            s.insert(y);
        }while(next_permutation(x.begin(),x.end()));

        x="44447777";
        do
        {
            stringstream ss(x);
            int y=0;
            ss>>y;
            s.insert(y);
        }while(next_permutation(x.begin(),x.end()));

        x="4444477777";
        stringstream ss(x);
        y=0;
        ss>>y;
        //cout<<y<<endl;
        s.insert(y);

        y=0;
        y=*s.lower_bound(n);
        cout<<y;
    }
    rtime();
    return 0;
}


