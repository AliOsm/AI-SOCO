#include <bits/stdc++.h>
using namespace std;

// g++ -std=c++14 -o out sol.cc && ./out < input.txt

struct Card {
    int w, h, index, ans = 1;
    shared_ptr<Card> prev = NULL;
    Card(int index, int w, int h) : index(index), w(w), h(h) {} 
};

int main() {	
    int n; cin >> n;
    int cardw; cin >> cardw;
    int cardh; cin >> cardh;
    vector<shared_ptr<Card>> cards;
    for(int i = 0; i < n; i++) {
        int w, h; cin >> w >> h;
        if (w > cardw && h > cardh) cards.push_back(shared_ptr<Card>(new Card(i, w, h)));
    }
    sort(cards.begin(), cards.end(), [&] (const shared_ptr<Card> & a, const shared_ptr<Card> & b) {
        return a -> w < b -> w;
    });
    for(auto & ptr : cards) {
        for(auto & prevptr : cards) {
            if (ptr == prevptr) break;
            if (prevptr -> ans + 1 > ptr -> ans && ptr -> w > prevptr -> w && ptr -> h > prevptr -> h) {
                ptr -> ans = prevptr -> ans + 1;
                ptr -> prev = prevptr;
            }
        }
    }
    sort(cards.begin(), cards.end(), [&] (const shared_ptr<Card> & a, const shared_ptr<Card> & b) {
        return a -> ans > b -> ans;
    });
    if (cards.size() == 0) {
        cout << 0 << endl;
        return 0;
    }
    vector<int> res;
    shared_ptr<Card> cur = cards[0];
    while(cur != NULL) {
        res.push_back(cur -> index + 1);
        cur = cur -> prev;
    }
    cout << res.size() << endl;
    reverse(res.begin(), res.end());
    for(int val : res) cout << val << " ";
    cout << endl;
}