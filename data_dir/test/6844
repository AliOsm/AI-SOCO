#include<bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 

#ifdef sarthak
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cout << name << " : " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
int begtime = clock();
#else
#define trace(...)
#endif

#ifndef sarthak
    #pragma GCC optimize("Ofast")
    #pragma GCC optimize("unroll-loops")
    // #pragma GCC target ("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#endif

#define ll long long

#define foreach(it,ar) for (typeof(ar.begin()) it = ar.begin(); it != ar.end(); it++)
#define fort(i,v) for(auto i:v)
#define fr(i,a,b) for (ll i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (ll i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (ll i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (ll i = n - 1; i >= 0; i--)
#define fill(ar,val) rep(i,sizeof(ar)/sizeof(ll)) ar[i]=val
#define fill2(ar,val) rep(i,sizeof(ar)/sizeof(ar[0])) rep(j,sizeof(ar[0])/sizeof(ll)) ar[i][j]=val
#define fill0(ar) memset(ar,0,sizeof(ar))
#define debug(x) cout<<#x<<": "<<x<<endl

#define ld long double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define sd2(x,y) scanf("%d %d",&x,&y)
#define slld2(x,y) scanf("%lld %lld",&x,&y)
#define pd(x) printf("%d\n",x)
#define plld(x) printf("%lld\n",x)
#define pd2(x,y) printf("%d %d\n",x,y)
#define plld2(x,y) printf("%lld %lld\n",x,y)
#define all(ar) ar.begin(), ar.end()
#define endl '\n'
#define sz(x) (int)x.size()
#define len(x) (int)x.length()

typedef pair<ll, ll> ii;
typedef pair<ii, ll> iii;
typedef vector<ii> vii;
typedef vector<ll> vi;

#define INF 10000000000000000
#define PI 3.14159265358979323846L

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rngb(chrono::steady_clock::now().time_since_epoch().count()); // can give negative values too

void solve()
{
    ll n;
    cin >> n;

    ll a[n];
    ll sa = 0;
    rep(i,n)
    {
        cin >> a[i];
        sa += a[i];
    }

    ll m;
    cin >> m;

    ll sb = 0;
    ll b[m];
    rep(i,m)
    {
        cin >> b[i];
        sb += b[i];
    }

    vector<ll> a2;
    vector<ll> b2;

    ll diff = sa-sb;
    diff = diff/2;
    ll ans = abs(sa-sb);
    ll ans2 = 0;
    vector<pair<ll, ll> > ans3;

    rep(i,n)
    {
        a2.pb(a[i]);
    }
    rep(i,m)
    {
        b2.pb(b[i]);
    }

    sort(all(a2));
    sort(all(b2));

    rep(i,n)
    {
        ll num = a2[i];
        ll ind1 = upper_bound(all(b2),num-diff)-b2.begin();
        ll ind2 = ind1-1;

        if(ind1>=0 && ind1<m)
        {
            ll xx = num-b2[ind1];
            ll yy = sa-sb-2*xx;
            if(abs(yy)<ans)
            {
                ans = abs(yy);
                ans2 = 1;
                ans3.clear();
                ans3.pb(mp(num,b2[ind1]));
            }
        }
        if(ind2>=0 && ind2<m)
        {
            ll xx = num-b2[ind2];
            ll yy = sa-sb-2*xx;
            if(abs(yy)<ans)
            {
                ans = abs(yy);
                ans2 = 1;
                ans3.clear();
                ans3.pb(mp(num,b2[ind2]));
            } 
        }
    }

    vector<pair<ll, ll> > a3;
    vector<pair<ll, ll> > b3;

    rep(i,n-1)
    {
        fr(j,i+1,n-1)
        {
            a3.pb(mp(a[i]+a[j],a[i]));
        }
    }
    rep(i,m-1)
    {
        fr(j,i+1,m-1)
        {
            b3.pb(mp(b[i]+b[j],b[i]));
        }
    }

    sort(all(a3));
    sort(all(b3));

    rep(i,a3.size())
    {
        ll num = a3[i].ff;
        ll ind1 = upper_bound(all(b3),mp(num-diff,INF))-b3.begin();
        ll ind2 = ind1-1;

        if(ind1>=0 && ind1<b3.size())
        {
            ll xx = num-b3[ind1].ff;
            ll yy = sa-sb-2*xx;
            if(abs(yy)<ans)
            {
                ans = abs(yy);
                ans2 = 2;
                ans3.clear();
                ans3.pb(mp(a3[i].ss,b3[ind1].ss));
                ans3.pb(mp(a3[i].ff-a3[i].ss,b3[ind1].ff-b3[ind1].ss));
            }
        }
        if(ind2>=0 && ind2<b3.size())
        {
            ll xx = num-b3[ind2].ff;
            ll yy = sa-sb-2*xx;
            if(abs(yy)<ans)
            {
                ans = abs(yy);
                ans2 = 2;
                ans3.clear();
                ans3.pb(mp(a3[i].ss,b3[ind2].ss));
                ans3.pb(mp(a3[i].ff-a3[i].ss,b3[ind2].ff-b3[ind2].ss));
            }
        }
    }

    cout << ans << endl;
    cout << ans2 << endl;

    rep(i,ans3.size())
    {
        rep(j,n)
        {
            if(a[j]==ans3[i].ff)
            {
                ans3[i].ff = j+1;
                a[j] = INF;
                break;
            }
        }
    }
    rep(i,ans3.size())
    {
        rep(j,m)
        {
            if(b[j]==ans3[i].ss)
            {
                ans3[i].ss = j+1;
                b[j] = INF;
                break;
            }
        }
    }

    rep(i,ans3.size())
    {
        cout << ans3[i].ff << " " << ans3[i].ss << endl;
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout << fixed;
    cout << setprecision(10);
    #ifdef sarthak
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif

    ll t = 1;
    // cin >> t;
    while(t--)
    {
        solve();
    }

    #ifdef sarthak
    cerr << "Time elapsed: " << (clock() - begtime)*1000/CLOCKS_PER_SEC << " ms\n\n";
    #endif
}
