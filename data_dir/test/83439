#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>

using namespace std;
vector<int> p;
int n;
vector<int> vis;
long long ans=1LL;

long long gcd(long long a,long long b){
	if(b==0LL) return a;
	return gcd(b,a%b);
}

int dfs(int u,int l){
	if(vis[u]!=-1){
		ans=ans/gcd(ans,l-vis[u])*(l-vis[u]);
		return vis[u];
	}else{
		vis[u]=l;
		return dfs(p[u],l+1);
	}
}



int main(){
	cin>>n;
	p.assign(n,0);
	for(int i=0;i<n;i++){
		cin>>p[i];
		p[i]--;
	}
	int gap=0;
	for(int i=0;i<n;i++){
		vis.assign(n,-1);
		gap=max(gap,dfs(i,0));
	}
	long long re = ans;
	while(re<gap) re+=ans;
	cout<<re<<endl;
	return 0;
}

