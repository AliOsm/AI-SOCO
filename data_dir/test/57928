#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cmath>
using namespace std;

#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define P_B push_back
#define F first
#define S second
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

//const int mod = 1000 * 1000 * 1000 + 7;
const int MAXN = 1000 * 5 + 10;
ll a[MAXN], dp[MAXN][MAXN], ps[MAXN];

int main()
{
	int n, m, k;
	cin>> n >> m >> k;
	FR(i, 0, n)
		cin>> a[i];

	ps[0] = a[0];
	FR(i, 1, n) ps[i] = ps[i - 1] + a[i];

	FR(i, m - 1, n) FR(j, 1, k + 1)
	{
		if(i - 1 >= 0)
			dp[i][j] = dp[i - 1][j];
		if(i - m >= 0)
			dp[i][j] = max(dp[i - m][j - 1] + ps[i] - ps[i - m], dp[i][j]);
		if(i == m - 1)
			dp[i][j] = max(ps[i], dp[i][j]);
	}
	cout<< dp[n - 1][k] << endl;
	return 0;
}

