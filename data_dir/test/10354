#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
ll need(vector<ll> &cur,vector<ll> &req)
{
    ll i;
    ll diff=0;
    for(i=0;i<3;i++)
        diff+=abs(cur[i]-req[i]);
    return diff/2;
}
int main()
{
    ios;
    ll n;
    cin>>n;
    
    string s;
    cin>>s;
    vector<ll> cnt(3),req(3,n/3);
    ll i,j;
    for(i=0;i<n;i++)
        cnt[s[i]-'0']+=1;
    string ns;
    ll breq=need(cnt,req);
    ll crep=0;
    for(i=0;i<n;i++)
    {
        ll number = s[i]-'0';
        cnt[number]-=1;
        for(j=0;j<3;j++)
        {
            if(req[j]==0)
                continue;
            ll rep=(number!=j);
            req[j]-=1;
            if(crep+rep+need(cnt,req)==breq)
            {
                crep+=rep;
                ns+=j+'0';
                break;
            }
            req[j]+=1;
        }
    }
    cout<<ns;
    
}
