#include <iostream>
using namespace std;

int N = 10;
char grid[12][12];
int dx[4] = {1, 0, 1, -1};
int dy[4] = {0, 1, 1, 1};

bool in_bounds(int x, int y)
{
    return x >= 0 && x < N && y >= 0 && y < N;
}

bool check()
{
    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
            if (grid[i][j] == 'X')
                for (int k = 0; k < 4; k++)
                {
                    bool good = true;
                    for (int n = 1; n <= 4; n++)
                        if (!in_bounds(i + n*dx[k], j + n*dy[k]) || grid[i + n*dx[k]][j + n*dy[k]] != 'X')
                        {
                            good = false;
                            break;
                        }
                    if (good)
                        return true;
                }
    return false;
}

int main()
{
    ios::sync_with_stdio(0);
    
    for (int i = 0; i < N; i++)
        cin >> grid[i];

    for (int i = 0; i < N; i++)
        for (int j = 0; j < N; j++)
            if (grid[i][j] == '.')
            {
                grid[i][j] = 'X';
                if (check())
                {
                    cout << "YES\n";
                    return 0;
                }
                grid[i][j] = '.';
            }
    cout << "NO\n";

    return 0;
}
