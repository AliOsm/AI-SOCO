#include<bits/stdc++.h>
using namespace std;

int n, k;
vector<int> veca;
vector<int> vecb;

int main() {
	scanf("%d", &n);
	scanf("%d", &k);

	for (int i = 2; i < 2 + k; i++) {
		vecb.push_back(i);
	}

	for (int i = 2 + k; i <= n; i++) {
		veca.push_back(i);
	}

	if (veca.size() == 0) {
		puts("2");
		for (int au : vecb) {
			printf("1 %d\n", au);
		}
		exit(0);
	}

	int ways = min(veca.size(), vecb.size());

	int lena = veca.size() / ways;
	if (veca.size() % ways) {
		lena++;
	}

//	cout << "ways " << ways << endl;
//	cout << "lena " << lena << endl;

	if (ways == 1) {
		printf("%d\n", 1 + lena + 1);
	} else if (veca.size() == (lena - 1) * ways + 1) {
		printf("%d\n", 1 + lena - 1 + lena + 1);

		int lasta = 1;
		for (int j = 0; j < lena; j++) {
			if (veca.empty()) {
				break;
			}
			printf("%d %d\n", lasta, veca.back());
			lasta = veca.back();
			veca.pop_back();
		}
		printf("%d %d\n", lasta, vecb.back());
		vecb.pop_back();

		for (int i = 0; i < ways - 1; i++) {
			int lasta = 1;
			for (int j = 0; j < lena - 1; j++) {
				if (veca.empty()) {
					break;
				}
				printf("%d %d\n", lasta, veca.back());
				lasta = veca.back();
				veca.pop_back();
			}
			printf("%d %d\n", lasta, vecb.back());
			vecb.pop_back();
		}

		for (int au : vecb) {
			printf("%d %d\n", 1, au);
		}
		exit(0);

	} else {
		printf("%d\n", 1 + lena + lena + 1);
	}

	for (int i = 0; i < ways; i++) {
		int lasta = 1;
		for (int j = 0; j < lena; j++) {
			if (veca.empty()) {
				break;
			}
			printf("%d %d\n", lasta, veca.back());
			lasta = veca.back();
			veca.pop_back();
		}
		printf("%d %d\n", lasta, vecb.back());
		vecb.pop_back();
	}

	for (int au : vecb) {
		printf("%d %d\n", 1, au);
	}

	return 0;
}
