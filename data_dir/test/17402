#include<stdio.h>
#include<stack>
#include<math.h>
#include<iostream>
#include<algorithm>
#include<string.h>
#include<string>
#include<memory.h>
#include<vector>
#include<map>
#include<queue>
using namespace std;
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define pdd pair<double,double>
typedef long long LL;
#define vint vector<int>
#define vvint vector<vint>
#pragma comment(linker, "/STACK:167177216")
#include<set>
 
typedef long long LL;
 
#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define pb push_back
#define mp make_pair
 
int main()
{
    long long n, m, k;
    cin >> n >> m >> k;
    long long M = sqrt(100000+0.0) + 1;
 
    vector<long long> a(n, 0);
    vector<long long> p(M, 0);
    forn (i, n)
        cin >> a[i];
    vector<long long> l(m), r(m), d(m);
    forn (i, m)
    {
        cin >> l[i] >> r[i] >> d[i];
        l[i]--;
        r[i]--;
    }
    vector< pair<long long, long long> > v;
    forn (i, k)
    {
        long long p, w;
        cin >> p >> w;
        p--, w--;
        v.pb(mp(p, 0));
        v.pb(mp(w, 1));
    }
   
    sort(v.begin(), v.end());
 
    long long q = 0, cnt=0;
 
    for (int i = 0; i < m; ++i)
    {
        while(q < v.size() && v[q].first < i || (v[q].first == i && v[q].second != 1))
        {
            if(v[q].second == 0)
                cnt++;
            else
                cnt--;
            q++;
        }
        while(l[i] <= r[i])
        {
            if(l[i] % M == 0 && l[i] + M <= r[i])
            {
                p[l[i] / M] += cnt * d[i];
                l[i] += M;
            }
            else
                a[l[i]++] += cnt * d[i];
        }
    }
    forn (i, n)
       printf("%I64d ",a[i] + p[i / M]);
    return 0;
}