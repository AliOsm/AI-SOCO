#include <bits/stdc++.h>

using namespace std;
const int N = 501;
int n, m, a[N][N], bit;
bool mem[N][2];
int vis[N][2], visID;
int one[N][10], zero[N][10];

bool go(int i, bool state) {
	if (i == n)
		return state;
	if (vis[i][state] == visID)
		return mem[i][state];
	vis[i][state] = visID;
	bool &ret = mem[i][state];
	ret = false;
	if (one[i][bit] != -1)
		ret = go(i + 1, !state);
	if (zero[i][bit] != -1)
		ret |= go(i + 1, state);
	return ret;
}

void build(int i, bool state) {
	if (i == n)
		return;
	if (one[i][bit] != -1 && go(i + 1, !state)) {
		printf("%d ", one[i][bit] + 1);
		build(i + 1, !state);
	} else {
		printf("%d ", zero[i][bit] + 1);
		build(i + 1, state);
	}
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	memset(one, -1, sizeof one);
	memset(zero, -1, sizeof zero);
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			scanf("%d", a[i] + j);
			for (int k = 0; k < 10; ++k) {
				if ((a[i][j] >> k) & 1) {
					one[i][k] = j;
				} else {
					zero[i][k] = j;
				}
			}
		}
	}
	for (bit = 0; bit < 10; ++bit) {
		++visID;
		if (go(0, 0)) {
			puts("TAK");
			build(0, 0);
			return 0;
		}
	}
	puts("NIE");
	return 0;
}