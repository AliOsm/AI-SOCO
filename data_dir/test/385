//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-8;
using namespace std;
int a, b, l;

double f(double w)
{
    return (w * a + sqrt(l * l - w * w) * b - w * sqrt(l * l - w * w)) / (1. * (double) l);
}

int main()
{
    ni(a), ni(b), ni(l);
    if (a > b)
        swap(a, b);
    if (l <= a)
        return !pri(l);
    if (l <= b)
        return !pri(a);
    double lo = 0, hi = l;
    while (abs(lo - hi) > eps)
    {
        double m1 = (lo * 2 + hi) / 3;
        double m2 = (lo + hi * 2) / 3;
        if (f(m1) > f(m2))
            lo = m1;
        else
            hi = m2;
    }
    if (f(lo) < eps)
        printf("My poor head =(");
    else
        printf("%.20f\n", f(lo));
    return 0;
}
