#include<bits/stdc++.h>
using namespace std;

#define elif else if
#define endl "\n"
#define rep(i,a,n) for (ll i=a;i<n;i++)
#define per(i,a,n) for (ll i=a-1;i>=n;i--)
#define repp(i,a,n) for (ll i=a;i<=n;i++)
#define pper(i,a,n) for (ll i=a;i>=n;i--)
#define pf(x) printf("%.15f\n", x)
#define fix(x,y) cout<<fixed<<setprecision(y)<<x<<endl;
#define pb push_back
#define IOS ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define files freopen("mortar.in","r",stdin);freopen("mortar.out","w",stdout)
#define bs(s,n) binary_search(s.begin(),s.end(),n)
#define be(s) s.begin(),s.end()
#define rbe(s) s.rbegin(),s.rend()
#define sz(s) s.size()
#define pii pair<long long,long long>
#define in insert
#define er erase
#define lb lower_bound
#define ub upper_bound
#define fi first
#define se second

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef short int si;
const ld pi = 3.1415926535897932384626433;
const ll M = 998244353;

ll t,n,p,k,g,f;

int main() {
    IOS;
    cin>>t;
    while(t--){
        cin>>n;
        g=log2(n+1);
        k=1;
        p=1;
        f=0;
        rep(i,0,g){
            if(k+p*2<=n){
                k+=p*2;
                p*=2;
            }
            else{
                g++;
                f=n-k;
                break;
            }
            if(k==n)
                break;
        }
        g--;
        cout<<g<<endl;
        p=1;
        k=0;
        if(f!=0)
            g--;
        /*if(g==0)
            cout<<0;*/

        rep(i,0,g){
            //cout<<endl<<i<<" -->    "<<f<<" "<<p<<endl;
            if(f>0 && 2*p>f){
                cout<<f-p<<" "<<2*p-f<<" ";
                f=0;
            }
            else{
                cout<<p<<" ";
                k+=p;
            }
            p*=2;
        }
        k+=p;

        //cout<<endl<<"  -->   "<<k<<"   "<<p<<endl;

        if(f>0&& k>0){
            cout<<n-k-p;
        }
        cout<<endl;
    }
}
