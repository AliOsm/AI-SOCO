#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
typedef long long ll;
typedef pair<int, int> ii;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int v[5123];
vector<int> ans;

int main(void) {
	ios_base::sync_with_stdio(false); cin.tie(0);

	int n; cin >> n;
	string a, b; cin >> a >> b;

	for (int i = 0; i < n; i++) {
		if (a[i] == b[i] and a[i] == '1') v[i] = 0;
		else if (a[i] == b[i] and a[i] == '0') v[i] = 3;
		else if (a[i] == '1') v[i] = 1;
		else v[i] = 2;
	}

	vector<int> A, B, C, D;
	for (int i = 0; i < n; i++) {
		if (v[i] == 1) A.eb(i+1);
		else if (v[i] == 2) B.eb(i+1);
		else if (v[i] == 0) C.eb(i+1);
		else if (v[i] == 3) D.eb(i+1);
	}

	for (int i = 0; i <= C.size(); i++) {
		for (int j = 0; j <= A.size(); j++) {
			int cl = i+j;
			int ac = C.size()-i;

			if (cl > n/2 or ac > cl or B.size()+(C.size()-i) < cl or max(0, (int)(B.size()-(n/2-cl)))+ac > cl or cl+(B.size()-(cl-ac))+D.size() < n/2) continue;

			for (int k = 0; k < i; k++) ans.eb(C[k]);
			for (int k = 0; k < j; k++) ans.eb(A[k]);
			for (int k = 0; k < B.size()-(cl-ac); k++) ans.eb(B[k]);
			int k = 0;
			while (k < D.size() and ans.size() < n/2) ans.eb(D[k++]);

			assert(ans.size() == n/2);

			for (auto x : ans) cout << x << " ";
			cout << endl;

			return 0;
		}
	}

	cout << -1 << endl;

	return 0;
}
