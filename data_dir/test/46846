/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)

const int N = 1e5+5;

class CCramTime {
public:
	void solve(std::istream& in, std::ostream& out) {
		int a, b; in >> a >> b;
        int n = a + b;
        int bound = 0;
        rep(i, 1, N){
            if(i*(i+1)/2 <= n) bound = i;
            else break;
        }
        vector<int> ra, rb;

        while(bound){
            if(a > b){
                ra.emplace_back(bound);
                a -= bound;
            }
            else{
                rb.emplace_back(bound);
                b -= bound;
            }
            --bound;
        }

        out << ra.size() << '\n';
        for(int x: ra) out << x << ' ';
        out << '\n';
        out << rb.size() << '\n';
        for(int x: rb) out << x << ' ';


	}
};


int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	CCramTime solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
