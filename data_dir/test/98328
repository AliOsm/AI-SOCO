//#define _USE_MATH_DEFINES
//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

int const mod = 998244353;

inline int safe_mul(const int x, const int y) {
    return x * 1LL * y % mod;
}


inline void safe_add(int& x, const int y) {
    x += y;
    if (x >= mod)
        x -= mod;
}





int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("out.txt", "w", stdout);
//    cin.tie(0);
//    cout << fixed << setprecision(20);
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;
    vector<int64_t> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        a[i] *= (i + 1) * 1LL * (n - i);
    }

    vector<int> b(n);
    for (int& x : b)
        cin >> x;

    sort(begin(b), end(b));
    sort(rbegin(a), rend(a));
    int ans = 0;
    for (int i = 0; i < n; ++i)
        safe_add(ans, safe_mul(a[i] % mod, b[i]));

    cout << ans << endl;
}
