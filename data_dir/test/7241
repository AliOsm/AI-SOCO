#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

using ll = long long;
using ull = unsigned long long;
using uint = unsigned int;

int n;
ll l, r, x, y, z, b1, b2;

ll solve(vector<ll> &a) {
	ll res = LLONG_MAX;
	ll mn = LLONG_MAX;
	for (int i = 0; i < (int) a.size(); ++i) {
		if (a[i] == 0) {
			if (mn < a[i]) {
				res = min(res, mn * a[i]);
			}
		} else if (a[i] > 0) {
			if (a[i] > mn) {
				res = min(res, mn * a[i]);
			}
		}
		mn = min(mn, a[i]);
	}
	return res;
}

void read() {
	cin >> n >> l >> r >> x >> y >> z >> b1 >> b2;
	vector<uint> br(n);
	br[0] = b1;
	br[1] = b2;
	for (int i = 2; i < n; ++i) {
    uint val = ((ull)br[i - 2] * x);
    val += ((ull)br[i - 1] * y);
    val += z;
    br[i] = val;
	}
  vector<ll> b(n);
	for (int i = 0; i < n; ++i) {
		b[i] = (br[i] % (r - l + 1)) + l;
	}
	ll res = solve(b);
	reverse(b.begin(), b.end());
	for (auto &it: b) {
		it *= -1;
	}
	res = min(res, solve(b));
	if (res == LLONG_MAX) {
		cout << "IMPOSSIBLE\n";
	} else {
		cout << res << '\n';
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
#ifdef LOCAL
  freopen("xxx.in", "r", stdin);
  freopen("xxx.out", "w", stdout);
#endif
	int tests;
	cin >> tests;
	for (int tc = 1; tc <= tests; ++tc) {
		read();
	}
	return 0;
}
