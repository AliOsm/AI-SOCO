#include<bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define endl '\n'
#define int long long
struct trie
{
    trie* arr[26];
    int end=0;
};
void insert(string s,trie* tmp)
{
    for(int i=0;i<s.length();i++)
    {
        int ind=s[i]-'a';
        if(tmp->arr[ind]==NULL)
            tmp->arr[ind]=new trie();
        tmp=tmp->arr[ind];
    }
    tmp->end=1;
}
int check(int start,string &s,trie* tmp,int diff)
{
    if(diff>1)
        return 0;
    if(start==s.length())
        return (diff==1)&&(tmp->end);
    int ans=0;
    int ind=s[start]-'a';
    for(int j=0;j<26;j++)
    {
        if(tmp->arr[j]==NULL)
            continue;
        ans+=check(start+1,s,tmp->arr[j],diff+(ind!=j));
    }
    return (ans>0);
}
int32_t  main()
{
    trie* root=new trie();
    int n,m;
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        string s;
        cin>>s;
        insert(s,root);
    }
    for(int i=0;i<m;i++)
    {
        string s;
        cin>>s;
        int x=check(0,s,root,0);
        if(x)
            cout<<"YES"<<endl;
        else
            cout<<"NO"<<endl;
    }
}