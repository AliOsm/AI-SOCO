#include <bits/stdc++.h>
#define ll long long
#define pi pair<int, int>
#define F first
#define S second
using namespace std;

int Vote;

set<pi> Cnt;

vector<pi> Pay;

map<int, vector<int>> Val;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int n;  cin >> n;
    int m;  cin >> m;
    for (int i = 0; i < n; i++){
        int a;  cin >> a;
        int b;  cin >> b;
    
        if (a == 1) Vote++;
        else{
            Val[a].push_back(b);
            Pay.push_back({b, a});
        }
    }

    n -= Vote;
    sort(Pay.rbegin(), Pay.rend());
    for (auto &i : Val){
        vector<int> &v = i.S;

        sort(v.rbegin(), v.rend());

        Cnt.insert({v.size(), i.F});
    }

    ll Ans = 1e18;
    for (int i = 0; i <= n; i++)
    {
        ll Cur = 0;
        ll CurVote = Vote;
        set<pi> C = Cnt;
        vector<pi> P = Pay;
        map<int, vector<int>> V = Val;

        for (int j = 0; j < i && C.size(); j++){
            if (CurVote > (*C.rbegin()).F) break;
        
            pi Min = P.back();
            P.pop_back();

            int a = Min.S;
            int b = V[a].size();

            C.erase({b, a});

            b--;    CurVote++;
            Cur += V[a].back();
            V[a].pop_back();

            if (b)  C.insert({b, a});
        }

        for (int j = 0; C.size(); j++){
            if (CurVote > (*C.rbegin()).F) break;
        
            pi Max = *(C.rbegin());
            C.erase(Max);

            int a = Max.S;
            int b = Max.F;

            b--;    CurVote++;
            Cur += V[a].back();
            V[a].pop_back();

            if (b) C.insert({b, a});
        }

        if (!C.size() || CurVote > (*C.rbegin()).F)
            Ans = min(Ans, Cur);
    }

    cout << Ans << '\n';
    return 0;
}
