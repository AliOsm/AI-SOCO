#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <deque>
#include <utility>
#include <string>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf       
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i != end; i += move)

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

int a, b;
int ans = 0;

ll getToDec(ll x, ll p)
{
    ll ans = 0;
    ll curSt = 1LL;
    while (x)
    {
        ans = ans + (curSt * (x % 10));
        curSt *= p;
        x /= 10;
    }
    return ans;
}

int getCount(ll x, ll p)
{
    int ans = 0;
    while(x)
    {
        ans++;
        x /= p;
    }
    return ans;
}

int main()
{
    scf("%d%d", &a, &b);
    int x = a;
    int start = 0;
    while (x)
    {
        start = max(start, x % 10);
        x /= 10;
    }
    x = b;
    while (x)
    {
        start = max(start, x % 10);
        x /= 10;
    }                      
    for (int i = start + 1; i <= max(a, b) + min(a, b); i++)
    {
        ll A = getToDec((ll)a, (ll)i);
        ll B = getToDec((ll)b, (ll)i);
        ll C = A + B;
        ans = max(ans, getCount(C, (ll)i));       
    }                                                                           
    cout << ans << endl;
}
        