// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=1e6+5;
const ll INF=1e18+5;
const ll mod=321555123;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

inline ll mul(ll a, ll b){ return (a * 1ll * b) % mod; }
inline ll sub(ll a, ll b){ ll c = a - b; if(c < 0) c += mod; return c; }
inline ll add(ll a, ll b){ ll c = a + b; if(c > mod) c -= mod; return c; }

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl

vector<ll> bit[N];
ll n,q,a[N],b[N];

void Update(ll idx,ll val)
{
  idx++;
  while(idx<=n)
  {
    bit[idx].pb(val);
    idx+=(idx&-idx);
  }
}

ll Query(ll idx,ll val)
{
  ll sum=0;
  idx++;
  while(idx>0)
  {
    ll lb=lower_bound(all(bit[idx]),val)-bit[idx].begin();
    sum+=lb;
    idx-=(idx&-idx);
  }
  return sum;
}

int main()
{
  fast;
  cin>>n;
  ll sum=0;
  map<ll,ll> f;
  for(ll i=0;i<n;i++){cin>>a[i];}
  for(ll i=n-1;i>=0;i--){f[a[i]]++;b[i]=f[a[i]];}
  for(ll i=0;i<n;i++){Update(i,b[i]);}
  for(ll i=1;i<=n+1;i++){sort(all(bit[i]));}
  f.clear();
  for(ll i=0;i<n;i++)
  {
    ll l=i+1;
    ll r=n-1;
    f[a[i]]++;
    sum+=Query(r,f[a[i]])-Query(l-1,f[a[i]]);
  }
  cout<<sum<<endl;
}
