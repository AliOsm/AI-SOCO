//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <fstream>
#include <functional>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
#include <time.h>
using namespace std;

#define all(S) S.begin(), S.end()
#define rall(S) S.rbegin(), S.rend()
#define getdis(xa, ya, xb, yb) hypot(xa-xb, ya-yb)
#define slope(xa, ya, xb, yb) ((yb-ya)/(xb-xa))
#define rep(i, j) for (ll i = 0; i < (ll)j; i++)
#define Rep(i, j, k) for (ll i = (ll)j; i < (ll)k; i++)
#define siz(S) (int)S.size()

const double PI = 2.0 * acos(0.0);
const double EX = 2.7182818284;
const int MOD = 1e9 + 7;
const int oo = 2e9 + 1e8;

typedef long long ll;

vector<ll> in, disv;
ll n, tmp = 1, idx;

void ini() {
    disv.resize(1e6);
    while (tmp*tmp <= 1e12)
        disv[idx++] = tmp*tmp, tmp++;
}

int main() {
    cin >> n, ini();
    for (long long i = 1; i*i <= n; i++) {
        if (n%i == 0) {
            in.push_back(i);
            in.push_back(n / i);
        }
    }
    sort(rall(in));
    n = siz(in);
    for (int i = 0; i < n; i++) {
        bool good = 1;
        Rep(j, 1, 1e6) if (in[i] % disv[j] == 0) {
            good = 0;
            break;
        }
        else if (disv[j] > in[i])
            break;
        if (good) {
            printf("%I64d\n", in[i]);
            break;
        }
    }
    return 0;
}