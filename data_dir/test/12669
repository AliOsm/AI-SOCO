#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
using namespace std;
#define pb(a) push_back(a)
int n;
vector<int> fo[110];
void clear(){
  for(int i=0;i<110;++i)fo[i].clear();     
}
int depth[110];
void dfs(int vr){
  for(int i=0;i<fo[vr].size();++i)
   if(!depth[fo[vr][i]])depth[fo[vr][i]]=depth[vr]+1 , dfs(fo[vr][i]);
}
int maxd(){
  memset(depth,0,sizeof depth);
  depth[0]=1;dfs(0);
  int bd=0;
  for(int i=1;i<n;++i)if(depth[i]>depth[bd])bd=i;
  memset(depth,0,sizeof depth);
  depth[bd]=1;dfs(bd);
  bd=0;
  for(int i=1;i<n;++i)if(depth[i]>depth[bd])bd=i;
  return depth[bd]-1;
}
int main(){
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  int Q,a,b; cin>>Q;
  int ans=0;
  while(Q--){
   clear();
   cin>>n;
   for(int i=1;i<n;++i)cin>>a>>b , --a , --b , fo[a].pb(b) , fo[b].pb(a);
   ans+=maxd();
            }
  cout<<ans<<'\n';
  //system("pause");
  return 0;
}
