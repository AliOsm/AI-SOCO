#define DBG 1
// No progress
#include<bits/stdc++.h>
//#include<ext/pb_ds/assoc_container.hpp>
//#include<ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define eb emplace_back
#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
#define dbg(x) if (DBG) cerr << #x << " = " << x << '\n';

using namespace std;
//using namespace __gnu_pbds;

typedef long long ll;
typedef pair<int, int> pii;

//template<typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const int MAXN = (int)2e5 + 5;

vector<int> adj[MAXN];
int n, col[MAXN];

void dfs(int v, int pr = -1) {
    int A = col[v];
    int B = (pr == -1 ? -1 : col[pr]);
    int ptr = 0;

    for (int to : adj[v]) {
        if (to != pr) {
            ++ptr;

            while (ptr == A || ptr == B) {
                ++ptr;
            }

            col[to] = ptr;
            dfs(to, v);
        }
    }
}

void solve() {
    scanf("%d", &n);

    for (int i = 1; i < n; ++i) {
        int u, v;
        scanf("%d %d", &u, &v);
        adj[u].pb(v);
        adj[v].pb(u);
    }

    col[1] = 1;
    dfs(1);

    printf("%d\n", *max_element(col + 1, col + n + 1));

    for (int i = 1; i <= n; ++i) {
        printf("%d%c", col[i], " \n"[i == n]);
    }
}

int main() {
    int tt = 1;

    while (tt--) {
        solve();
    }

    return 0;
}
