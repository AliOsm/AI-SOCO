#include <bits/stdc++.h>

using namespace std;

#define ll long long;

const int N = (1 << 23);
int n, m, V;
bool in[N / 2];
bool vis[N];

void dfs(int u)
{
    vis[u] = true;
    if (u < V)
    {
        if (in[u] && !vis[u + V])
            dfs(u + V);
    }
    else
    {
        u -= V;
        if (in[V - 1 - u] && !vis[V - 1 - u])
            dfs(V - 1 - u);

        for (int j = 0; j < n; j++)
            if (!(u & (1 << j)) && !vis[V + (u | (1 << j))])
                dfs(V + (u | (1 << j)));
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n >> m;
    V = (1 << n);
    for (int i = 0; i < m; i++)
    {
        int x;
        cin >> x;
        in[x] = true;
    }
    int c = 0;
    for (int i = 0; i < V; i++)
        if (in[i] && !vis[i])
        {
            c++;
            dfs(i);
        }
    cout << c << endl;
}