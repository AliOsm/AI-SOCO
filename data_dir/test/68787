//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(2e5+5);
const ll mod=(ll)(1e9+7);
int a[maxn],pre[maxn];
int dp1[maxn],dp2[maxn];

int mul(ll a,ll b)
{
    ll ret=(a*b);

    if(ret>=mod)
    {
        ret%=mod;
    }

    return (int)ret;
}

int add(ll a,ll b)
{
    ll ret=a+b;

    if(ret>=mod)
    {
        ret%=mod;
    }

    return (int)ret;
}

int sub(ll a,ll b)
{
    ll ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return (int)ret;
}

inline int poww(ll a,ll b)
{
    int x=1,y=a;

    while(b>0)
    {
        if(b%2)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return (int)(x%mod);
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);

    int n,q;

    cin>>n>>q;

    string s;cin>>s;int curr=0;

    for(int i=1;i<=n;i++)
    {
        if(s[i-1]=='1')
        {
            curr++;
        }

        pre[i]=curr;
    }

    while(q>0)
    {
        int l,r;cin>>l>>r;

        int ones=pre[r]-pre[l-1],zeros=(r-l+1)-ones;

        int zz=sub(poww(2,ones),1);

        int qq=mul(zz,sub(poww(2,zeros),1));

        int res=add(zz,qq);

        cout<<res<<endl;

        q--;
    }

    return 0;
}
