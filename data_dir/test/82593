/**

    WARNING
          This Code Sucks
                        Just Like My Life :(

                                             **/
#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;
template<class T> using orderd_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;
const long long N = 3e5 + 5;
const long long mod = 1e9 + 7;
vector < set < int > > adj(N), adj2(N);
int arr[N];
int main ()
{
    int n, m;
    scanf("%d%d",&n,&m);
    for(int i = 1 ; i <= n ; i++)
        scanf("%d",&arr[i]);
    int nat = arr[n];
    for(int i = 0 ; i < m ; i++){
        int x, y;
        scanf("%d%d",&x,&y);
        adj2[x].insert(y);
        adj[y].insert(x);
    }

    int ans = 0;
    set < int > z;
    for(int i = n - 1 ; i >= 1 ; i--){
        if (adj[nat].find(arr[i]) == adj[nat].end()){
            z.insert(arr[i]);
        }
        else {
            int cnt = 0 ;
            for(auto it : adj2[arr[i]]){
                if (z.find(it) != z.end())
                    cnt++;
            }
            if (cnt == z.size())
                ans++;
            else
                z.insert(arr[i]);
        }
    }
    cout << ans;
    return 0;
}
