#include<bits/stdc++.h>
using namespace std;
const int N=300;
long long ans[N][N];
int vis[N][N],dx[]={ 0, 0, -1, 1 },dy[]={ -1, 1, 0, 0 };
char g[N][N];
int n,m;
void bfs(int x,int y,int val,int cc){

	queue<pair<int, pair<int, int> > > q;
	q.push({ x, make_pair(y,val) });
	ans[x][y]+=val;
	vis[x][y]=cc;
	while(!q.empty()){
		x=q.front().first, y=q.front().second.first, val=q.front().second.second;
		q.pop();
		if(val <= 1) continue;
		for(int i=0;i < 4;i++){
			int tx=x + dx[i],ty=y + dy[i];
			if(tx >= 0 && tx < n && ty >= 0 && ty < m && g[tx][ty] != '*'
				&& vis[tx][ty] != cc){
				ans[tx][ty]+=val / 2;
				vis[tx][ty]=cc;
				q.push({ tx, make_pair(ty,val / 2) });
			}
		}
	}

}

int main(){

//	freopen("in.txt","r",stdin);

	int q,p;
	scanf("%d%d%d%d",&n,&m,&q,&p);
	for(int i=0;i < n;i++){
		scanf(" %s",g[i]);
	}
	int cc=0;
	for(int i=0;i < n;i++){
		for(int j=0;j < m;j++){
			if(g[i][j] >= 'A' && g[i][j] <= 'Z'){
				cc++;
				bfs(i,j,(1 + g[i][j] - 'A') * q,cc);
			}
		}
	}
	int f=0;
	for(int i=0;i < n;i++){
		for(int j=0;j < m;j++){
			if(ans[i][j] > p) f++;
		}
	}
	cout << f << endl;

}
