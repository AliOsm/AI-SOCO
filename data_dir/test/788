#include <bits/stdc++.h>
#ifdef BUG
    #include "debug.hpp"
#else
    #define DEBUG(var)
    #define EXPECT(expr)
#endif
#define NO_IO_TIE ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

using namespace std;
template< class T1, class T2 > inline istream &
operator>>( istream & fin, pair< T1, T2 > & pr )
{ fin >> pr.first >> pr.second; return fin; }
template< class T0, class T1, class T2 > inline istream &
operator>>( istream & fin, tuple< T0, T1, T2 > & t )
{ fin >> get<0>(t) >> get<1>(t) >> get<2>(t); return fin; }
template< class T > inline istream &
operator>>( istream & fin, vector< T > & a ) {
for( auto & u: a) fin >> u; return fin; }
template<class T, size_t n> inline istream &
operator>>( istream & fin, array<T, n> & a ) {
for( auto & u: a) fin >> u; return fin; }
/* @@@ ----------------------------------- */


void probC()
{
    string str;
    cin >> str;
    if( str.find('0') != string::npos )
    {
        cout << "YES" << '\n' << '0';
        return;
    }

    str = "00" + str;
    const auto n = str.size();

    vector<int> a;
    a.reserve(n);
    for(const auto i: str)
        a.push_back( i - '0');

    for(size_t i = 0; i < n; ++ i )
        for( size_t j = i + 1; j < n; ++ j )
            for( size_t k = j + 1; k < n; ++ k )
                if( (a[i] * 100 + a[j] * 10 + a[k]) % 8 == 0)
                {
                    cout << "YES" << '\n';
                    if(a[i]) cout << a[i];
                    if(a[i] || a[j]) cout << a[j];
                    cout << a[k];
                    return;
                }

    cout << "NO";
}


int main( const int argc, char * argv [])
{
    NO_IO_TIE;
    probC();

    return EXIT_SUCCESS;
}
