#include<bits/stdc++.h>
using namespace std;
vector<int> vc[100010];
int yass[100010];
int minx[100010];
int maxx[100010];

int main(){

   int n;
   cin>>n;

   int l;
   int x;;

   for(int i=0;i<n;i++){
       cin>>l;

        int minn = INT_MAX;
        int maxn = -1;
       for(int j=0;j<l;j++){
           cin>>x;
           minn=min(minn,x);
           maxn=max(maxn,x);
           vc[i].push_back(x);
       }
       minx[i]=minn;
       maxx[i]=maxn;

       //check if strictly decreasing

       bool flag=true;

       for(int j=1;j<l;j++){
           if(vc[i][j]>vc[i][j-1]){
               flag=false;
               break;
           }
       }

       if(!flag){
           //has an ascent
           yass[i]=1;
       }
   }

   vector<int> M;
   int yasscnt=0;

   for(int i=0;i<n;i++){
       if(yass[i]){
           yasscnt++;
       }
       else{
           M.push_back(maxx[i]);
       }
   }

   sort(M.begin(),M.end());

   long long ans=1LL*n*n-1LL*(n-yasscnt)*(n-yasscnt);

   for(int i=0;i<n;i++){
       if(yass[i]==0){
           int idx = upper_bound(M.begin(),M.end(),minx[i])-M.begin();
           ans += (M.size()-idx);
       }
   }

   cout<<ans;
}