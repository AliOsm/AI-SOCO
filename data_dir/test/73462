#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 51;
int n, m, dp[N][2][2][2];
char c[N][N];
int solve(int i, bool b1, bool b2, bool b3)
{
    if(i == n && b1 && b2 && b3) return 0;
    if(i == n) return 1e8;
    int &ret = dp[i][b1][b2][b3];
    if(ret != -1) return ret;
    ret = 1e8;
    for(int j=0; j<m; j++)
    {
        if(c[i][j] == '#' || c[i][j] == '*' || c[i][j] == '&')
        ret = min(ret, solve(i+1, 1, b2, b3)+min(j, m-j));
        if(c[i][j] >= 'a' && c[i][j] <= 'z')
        ret = min(ret, solve(i+1, b1, 1, b3)+min(j, m-j));
        if(c[i][j] >= '0' && c[i][j] <= '9')
        ret = min(ret, solve(i+1, b1, b2, 1)+min(j, m-j));
    }
    return ret;
}
int main()
{
    memset(dp, -1, sizeof dp);
    cin >> n >> m;
    for(int i=0; i<n; i++)
    for(int j=0; j<m; j++) cin >> c[i][j];
    cout << solve(0, 0, 0, 0) << endl;
}
