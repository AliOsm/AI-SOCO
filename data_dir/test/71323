#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
#include<queue>
#include<sstream>
#include<list>
#include<bitset>
#include<ctime>
using namespace std;

typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())
const int inf = 1000000000;
const int MOD = 1000000007;

const int N = 200009;
vector<int> g[N+1];
int h[N+1];
int leaf=0;
bool lf[N+1];

void dfs(int v, int fath, int hh) {
	h[v]=hh;
	int child=0;
	FOR(i,0,sz(g[v])-1) {
		int to = g[v][i];
		if(to==fath) continue;
		child++;
		dfs(to, v, hh+1);
	}
	if(!child)  leaf++, lf[v]=true;
}

//int OPT;
int dp[N+1];

void go1(int v, int fath) {
	if(lf[v]) {
		dp[v]=1;
		return;
	}

	if(h[v]%2==0)dp[v]=inf;else
		dp[v]=0;

	FOR(i,0,sz(g[v])-1) {
		int to = g[v][i];
		if(to==fath) continue;
		go1(to, v);
		if(h[v]%2==0)
			dp[v]=min(dp[to], dp[v]);else
			dp[v] += dp[to];
	}
}

void go2(int v, int fath) {
	if(lf[v]) {
		dp[v]=1;
		return;
	}

	if(h[v]%2==1)dp[v]=inf;else
		dp[v]=0;

	FOR(i,0,sz(g[v])-1) {
		int to = g[v][i];
		if(to==fath) continue;
		go2(to, v);
		if(h[v]%2==1)
			dp[v]=min(dp[to], dp[v]);else
			dp[v]+=dp[to];
	}
}

int main() {
	//freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
	int n;cin>>n;
	FOR(i,1,n-1) {
		int x,y;
		scanf("%d %d",&x,&y);
		g[x].pb(y);
		g[y].pb(x);
	}

	dfs(1, -1, 0);
	//cerr<<leaf<<endl;

	go1(1,-1);
	cout<<leaf+1-dp[1]<<" ";

	go2(1, -1);
	cout<<dp[1]<<endl;;
}