 /*
    __                      _    _            __                 __
   / /_/\__        __ _    | | _| | __     _  \ \       __/\__  / /
  / /\    /       / _` |   | |/ / |/ /    (_)  | |      \    / / / 
 / / /_  _\      | (_| |   |   <|   <      _   | |      /_  _\/ /  
/_/    \/         \__,_|___|_|\_\_|\_\    (_)  | |        \/ /_/   
                      |_____|                 /_/                  

*/
#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
#define ld long double
using namespace std;
const long double pi = 3.14159265358979323;
const double EPS = 1e-12;
const int N = 1e5 + 5;
const int MOD = 1e9 + 7;

ll RMQ[5][20][N];
ll floorlog[N];
ll a[5][N];
ll n, m, k;

void pre(ll idx){
	for(int i = n; i >= 1; i--){
		RMQ[idx][0][i] = a[idx][i];
		ll mxj = floorlog[n - i + 1];
		ll pw = 1;
		for(int j = 1; j <= mxj; j++){
			RMQ[idx][j][i] = max(RMQ[idx][j - 1][i], RMQ[idx][j - 1][i + pw]);
			pw <<= 1LL;
		}
	}
}

ll getMax(ll idx, ll l, ll r){
	ll k = floorlog[r - l + 1];
	return max(RMQ[idx][k][l], RMQ[idx][k][r - (1LL << k) + 1]);
}

bool calc(ll mid){
	ll pt = 1, pt1 = pt + mid - 1;
	while(pt1 <= n){
		ll sum  = 0;
		for(int i = 0; i < m; i++)
			sum += getMax(i, pt, pt1);
		if(sum <= k) return 1;
		pt++, pt1++;
	}
	return 0;
}

int main(){
	fast;
	for(int i = 0; (1LL << i) < N; i++){
		for(int j = (1LL << i); j < N && j < (1 << (i + 1)); j++)
			floorlog[j] = i;
	}
	cin >> n >> m >> k;
	for(int i = 1; i <= n; i++){
		for(int j = 0; j < m; j++){
			cin >> a[j][i];
		}
	}
	for(int i = 0; i < m; i++){
		pre(i);
	}
	ll lo = 0, hi = n + 1, mid;
	while(hi - lo > 1){
		mid = (hi + lo) >> 1LL;
		if(calc(mid)) lo = mid;
		else hi = mid;
	}
	ll pt = 1, pt1 = pt + lo - 1;
	while(pt1 <= n){
		ll sum  = 0;
		for(int i = 0; i < m; i++)
			sum += getMax(i, pt, pt1);
		if(sum <= k){
			for(int i = 0; i < m; i++)
				cout << getMax(i, pt, pt1) << " ";
			return 0;
		}
		pt++, pt1++;
	}
	for(int i = 0; i < m; i++) cout << 0 << " ";
	return 0;
}
