#include <algorithm>
#include <iostream>
#include <string.h>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <queue>
#include <stack>
 
#define F first
#define S second
#define eps 1e-8
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define inf 1000000100
#define sz 2010 
 
 
#define name "path_easy"
 
typedef long long ll;
 
using namespace std;
int n;
vector<int> v;
vector<pair<int, int> > e;
ll d, k[sz], x[sz], y[sz], c[sz], ans;
vector<pair<ll, pair<int, int>> > q;
int p[sz];
int dsu_get(int a){
	return (a == p[a] ? a : (p[a] = dsu_get(p[a])));
}
void dsu_unit(int a, int b){
	a = dsu_get(a);
	b = dsu_get(b);
	if(a < b)
		swap(a, b);
	p[a] = b;
}
void prim(){
	for(auto& i : q){
		int a = i.S.F, b = i.S.S;
		if(dsu_get(a) != dsu_get(b)){
			ans += i.F;
			if(a && b)
				e.pb({a, b});
			if(!a)
				v.pb(b);
			if(!b)
				v.pb(a);
			dsu_unit(a, b);
		}
	}	
} 
int main()
{
//	   	freopen (name".in","r",stdin);
//		freopen (name".out","w",stdout);
	cin >> n;
	for(int i = 1; i <= n; i++)
		cin >> x[i] >> y[i];
	for(int i = 1; i <= n; i++)
			cin >> c[i];
	for(int i = 1; i <= n; i++)
			cin >> k[i];
	for(int i = 1; i < n; i++)
	for(int j = i + 1; j <= n; j++){
		d = (k[i] + k[j]) * (abs(x[i] - x[j]) + abs(y[i] - y[j]));
		q.pb({d, {i, j}});
	}
	for(int i = 1; i <= n; i++){
		q.pb({c[i], {0, i}});
		p[i] = i;
	}
	sort(q.begin(), q.end());
	prim();
	cout << ans << endl;
	cout << v.size() << endl;
	for(int i = 0; i < v.size(); i++)
		cout << v[i] << ' ';
	cout << endl;
	cout << e.size() << endl;
	for(int i = 0; i < e.size(); i++)
		cout << e[i].F << ' ' << e[i].S << endl;
	return 0;
	
}