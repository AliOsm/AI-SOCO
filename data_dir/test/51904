
/*\
 * ...
 * ......
 * In the name of ALLAH
 * ......
 * ...
\*/

#include <bits/stdc++.h>

using namespace std;
#define Size(x) ((int)(x).size())
#define pb push_back
#define LD_OUT setprecision(12) << fixed
typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;
const int INF = 1e9 + 10, MN = 1e5 + 10;

int n , q,  par[MN] , sz[MN] , B;
bool is[MN] , ans[MN];
vector<int>H;
vector<pii>seg[MN << 2];

int root(int a,bool &x)
{
	if(is[a]) x = !x;
	if(a == par[a]) return a;
	return root(par[a] , x);
}

void Union(int u,int v)
{
	bool c1 = false ,c2 = false;
	u = root(u , c1) , v = root(v , c2);
	if(u == v){
		H.pb(c1 == c2);
		B += (c1 == c2);
		return;
	}
	if(sz[u] > sz[v]) swap(u , v);
	if(c1 == c2) is[u] = !is[u];
	par[u] = v , sz[v] += sz[u];
	H.pb(2 * (u+1) + (c1 == c2)); 
}

void Err(int rp)
{
	while(rp--){
		int x = H.back();
		if(x / 2 == 0){
			B -= x;	
		}else{
			int u = x/2-1;
			if(x%2) is[u] = !is[u];
			sz[par[u]] -= sz[u];
			par[u] = u;
		}
		H.pop_back();
	}
}

void upd(int id,int b,int e,int l,int r,int u,int v)
{
	if(r <= b || e <= l) return;
	if(l <= b && e <= r){
		seg[id].pb({u , v});
		return;
	}
	int mid = b+e>>1;
	upd(id<<1 , b , mid , l , r , u , v) , upd(id<<1|1 , mid , e , l , r , u , v);
}

void dfs(int id,int b,int e)
{
	for(auto x:seg[id]) Union(x.first , x.second);
	if(e - b == 1){
		ans[b] = (B == 0);
		Err(Size(seg[id]));
		return;
	}
	int mid = b+e>>1;
	dfs(id<<1 , b , mid) , dfs(id<<1|1 , mid , e);
	Err(Size(seg[id]));
}

map<pii , int>mp;

void init()
{
	cin >> n >> q;
	iota(par , par + n , 0);
	fill(sz , sz + n , 1);
	int tim = 0;
	while(q--){
		int u,v;cin>>u>>v;
		--u ,--v;
		if(!mp.count({u ,v})) mp[{u , v}] = tim++;
		else /*cout << mp[{u,v}] << ' ' << tim << ' ' << u << ' ' << v << '*'<< '\n' , */upd(1 , 0 , MN-1 , mp[{u , v}] , tim++ , u , v) , mp.erase({u , v});
	}
	for(auto x:mp) /*cout << x.second << ' ' << tim << ' ' << x.first.first << ' ' << x.first.second << '*'<< '\n',*/upd(1 , 0 , MN-1 , x.second , tim , x.first.first , x.first.second);
	dfs(1 , 0 , MN-1);
	for(int i=0;i<tim;++i) cout << (ans[i]?"YES\n":"NO\n");
	/*while(1){
		char tp;cin>>tp;
		if(tp == '-') Err(1);
		else{
			int x,y;cin>>x>>y;
			--x,--y;
			Union(x , y);
		}
		cout << (B?"no":"yes") << endl;
	}*/
}

int main()
{
	ios_base :: sync_with_stdio(false) ,cin.tie(0) , cout.tie(0);
	init();
	return 0;
}

