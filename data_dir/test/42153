#include <bits/stdc++.h>
 
using namespace std;
 
const int MAX = 2e6 + 5 ;
 
char s[MAX] ;
int n ;
 
int m[MAX],st[MAX],en[MAX],mx[MAX];
vector< pair<pair<int,int>,int>  > v;
 
void prep()
{
    int len = 2 * n + 1 ;
    s[len] = 0 , s[len-1] = 1 ;
    for(int i = n-1 ; ~i ; i--)
    {
        s[2 * i + 1] = s[i] ;
        s[2 * i] = 1 ;
    }
}

int manacher()
{
    int len = 2 * n + 1 ;
    int c = 1 , ws = 0 ;
    int mx = 0 , ret ;
    for(int i = 1 ; i < len ; ++i)
    {
        int mr = (c << 1) - i ; /// c - (i - c)
        int &x = m[i] ;
        x = min(m[mr] , ws - (c - mr + 1)) ;
        while(i - x >= 0 && s[i - x] == s[i + x])
            ++x ;
        if(c + ws < i + x)
            c = i  , ws = x ;
        if(x > mx)
            mx = x , ret = i;
    }
    return ret ;
}


int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%s",s);
        int x;
        n=strlen(s);
        for(x=0;x<n-x-1;x++)
        {
            if(s[x]!=s[n-x-1])
                break;
        }
        string cur="";
        for(int i=0;i<x;i++)
            cur+=s[i];
        for(int i=0;i<n-2*x;i++)
            s[i]=s[i+x];
        s[n-2*x]='\0';
        //cout << s << endl;
        n=strlen(s);
        prep();
        manacher();
        int st=0,en=0;
        for(int i=1;i<2*n;i++)
        {
            int ox=(i-m[i]+1)/2,oy=(i+m[i]-1)/2-1;
            //cout << ox << " " << oy << " " << m[i] << endl;
            if(ox==0)
            {
                if(oy-ox+1>=en-st)
                {
                    st=ox; en=oy+1;
                }
            }
            if(oy==n-1)
            {
                if(oy-ox+1>=en-st)
                {
                    st=ox; en=oy+1;
                }
            }
        }
        string v="";
        for(int i=2*st+1;i<2*en+1;i+=2)
            v+=s[i];
        string vcur=cur;
        reverse(vcur.begin(),vcur.end());
        cur+=v; cur+=vcur;
        printf("%s\n",cur.c_str());
    }
}