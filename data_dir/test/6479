#include <bits/stdc++.h>
using namespace std;
   
#define FilesX
   
   
#define rdi(i)                  scanf("%d", &i)
#define rdii(i, j)              scanf("%d%d", &i, &j)
#define rdc(i)                  scanf(" %c", &i)
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)
   
typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e9;
const ll OOL = 1e18;
   
const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;   }
   
#define MOD                 1000000007
#define pb                  push_back
#define MP                  make_pair
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;
   
   
const int N = 100;
   
vector<int>prime;
bool mat[1000001]={0};
void generate_primes (int n)
{
    prime.clear();
    prime.push_back(2);
    for(int i=3;i*i<=n;i+=2)
    {
        if(mat[i]==0)
        {
            for(int j=i*i; j<n;j+=2*i)
                mat[j]=1;
        }
    }
    for(int i=3;i<=n;i+=2)
        if(!mat[i]) 
            prime.push_back(i);
}

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
   
ull power(ull a, ull b){
    if(b == 0) return 1;
    if(b == 1) return a;
    ull ans = power(a, b / 2);
    ans = ans * ans;
    if(b % 2 != 0) ans *= a;
    return ans;
}

ull c(ull n, ull k) {
	ull numerator = 1;
        
        ull i;
        vi v(k - 1);
        rep(i, v) v[i] = i + 2;
	for(i=0;i<k;i++){
            numerator = (numerator*(n-i));
            lp(j, k - 1) if(numerator % v[j] == 0) numerator /= v[j], v[j] = 1;
        }
	return numerator;
}


ll MODi = 1000000007;

ll memo[2010][4010][2];
int dif;
int a, b;

ll dp(int cur, int br, int half){
    if(cur == dif){
        if(br == 0 && half == 1) return 1;
        if(half == 0 && br == a && b == 0) return 1;
        return 0;
    }
    
    ll &ret = memo[cur][br][half];
    if(ret != -1) return ret;
    if(half == 0){
        ll ans = 0;
        ans += dp(cur + 1, br + 1, 0);
        if(br > 0) ans += dp(cur + 1, br - 1, 0);
        if(br >= a) ans += dp(cur, br - a + b, 1);
        ans %= MODi;
        return ret = ans;
    }
    else{
        ll ans = 0;
        ans += dp(cur + 1, br + 1, 1);
        if(br > 0) ans += dp(cur + 1, br - 1, 1);
        ans %= MODi;
        return ret = ans;
    }
}

int main()
{
#ifdef Files
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false);
    
    int n, m; cin >> n >> m;
    string s; cin >> s;
    int openBefore = 0;
    stack<char> st;
    rep(i, s){
        if(s[i] == '(') st.push('(');
        else{
            if(st.size() == 0) openBefore++;
            else st.pop();
        }
    }
    a = openBefore;
    b = st.size();
    dif = n - m;
    if(a + b == n - m) return cout << 1 << endl, 0;
    
    clr(memo, -1);
    cout << dp(0, 0, 0) << endl;
    
    return 0;
}