#include <bits/stdc++.h>
using namespace std;


const int N = 1e5 + 100;

char ch[N];
int Idx[N];
int fr[N];

int main() {
    int n, m;
    cin >> n >> m;
    for(int i = 1; i <= m; i++) {
        cin >> ch[i] >> Idx[i];
    }
    for(int i = m; i >= 1; i--) {
        if(ch[i] == '+') {
            fr[Idx[i]] = 1;
        }
        else {
            fr[Idx[i]] = -1;
        }
    }

    vector<int> valid_cand;
    set <int> cand;
    for(int i = 1; i <= n; i++) {
        if(fr[i] == 0) {
            valid_cand.push_back(i);
        }
        if(fr[i] == -1) {
            cand.insert(i);
        }
    }
    int I = 1;
    if(cand.size() == 0) {
        assert(ch[1] == '+');
        cand.insert(Idx[1]);
        I++;
    }
    set<int> cur_meet = cand;
    for(int i = I; i <= m; i++) {
        int who = Idx[i];
        if(ch[i] == '+') {
            if(cur_meet.size() == 0) {
                if(cand.find(who) != cand.end()) {
                    cand = {who};
                }
                else {
                    cand = {};
                    break;
                }
            }
            else {
                if(cand.find(who) != cand.end()) {
                    cand.erase(who);
                }
            }
            cur_meet.insert(who);
        }
        else {
            cur_meet.erase(who);
            if(cur_meet.size() > 0) {
                if(cand.find(who) != cand.end()) {
                    cand.erase(who);
                }
            }
        }
    }

    for(int x : cand) {
        valid_cand.push_back(x);
    }
    sort(valid_cand.begin(), valid_cand.end());
    cout << valid_cand.size() << endl;
    for(int x : valid_cand) {
        cout << x << " ";
    }
}
