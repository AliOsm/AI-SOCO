#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("Ofast")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
#define int long long int
typedef complex<long double> cd;
const long double pi=acos(-1);
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;

#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define fi first
#define se second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
#define all(x) x.begin(),x.end()
#define pii pair<int,int>

inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p%m*p%m)%m;if(n%2) return (p%m*a%m)%m;else return p;}
const ll MOD =998244353;
const ll hell=1000000007;
const int INF = 1e18;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
const int N=200005;

void solve()
{
    int n;
    cin>>n;
    int cnt;vector<pair<int,int> >pr;int z=n;
    for(int i=2;i<=sqrt(n);i++)
    {
        cnt=0;
        while(!(z%i))
        {
            z=z/i;
            cnt++;
           // z=z*i;
        }
        if(cnt)
        {
            pr.pb(m1(i,cnt));
        }
    }
    if(z>1)
    {
        pr.pb(m1(z,1));
    }
    if(pr.size()>=3)
    {
        cout<<"YES"<<endl;
        int a=pow(pr[0].first,pr[0].second);
        int b=pow(pr[1].first,pr[1].second);
        int c=1;
        for(int i=2;i<pr.size();i++)
        {
            c=c*pow(pr[i].first,pr[i].second);
        }
        cout<<a<<" "<<b<<" "<<c<<endl;
    }
    else if(pr.size()==2)
    {
        if(pr[0].second>=3)
        {
            int a=pr[0].fi;
            int b=pow(pr[0].fi,pr[0].se-1);
            int c=pow(pr[1].fi,pr[1].se);
            cout<<"YES"<<endl;
            cout<<a<<" "<<b<<" "<<c<<endl;
        }
        else if(pr[1].second>=3)
        {
            int a=pr[1].fi;
            int b=pow(pr[1].fi,pr[1].se-1);
            int c=pow(pr[0].fi,pr[0].se);
            cout<<"YES"<<endl;
            cout<<a<<" "<<b<<" "<<c<<endl;
        }
        else if(pr[0].second==2&&pr[1].second==2)
        {
            cout<<"YES"<<endl;
            int a=pr[0].first;
            int b=pr[1].first;
            int c=a*b;
            cout<<a<<" "<<b<<" "<<c<<endl;
        }
        else
        {
            cout<<"NO"<<endl;
        }
    }
    else
    {
        if(pr[0].second>=6)
        {
            cout<<"YES"<<endl;
            int a=pr[0].first;
            int b=pr[0].first*pr[0].first;
            int c=pow(pr[0].first,pr[0].second-3);
            cout<<a<<" "<<b<<" "<<c<<endl;
        }
        else
            cout<<"NO"<<endl;
    }
}
int32_t main()
{
    IOS;
    int t;
    t=1;
      cin>>t;
    while(t--)
    {
        solve();
    }
    return 0;
}
