// Aggressive Play

#include<bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;

void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

const int N = 3e5 + 5;
ll a[N];
int p[N][30];
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    string s;
    cin >> s;
    int n = (int)s.size();
    s = "@" + s;
    int k = 26;
    for(int i = n; i >= 1; i--){
        for(int j = 0; j < k; j++){
            p[i][j] = p[i + 1][j];
        }
        p[i][s[i] - 'a']++;
    }
    string ans;
    string temp;
    for(int i = 1; i <= n; i++){
        //debug(i);
        while((int)temp.size() >= 1){
            char ch = temp.back();
            int id = ch - 'a';
            bool flag = 0;
            for(int j = 0; j < id; j++)
                if(p[i][j]) flag = 1;
            if(!flag){
                ans += ch;
                temp.pop_back();
            }
            else
                break;
        }
        int id = s[i] - 'a';
        bool flag = 0;
        for(int j = 0; j < id; j++){
            if(p[i][j])
                flag = 1;
        }
        if(flag)
            temp += s[i];
        else ans += s[i];
    }
    //debug(temp, ans);
    reverse(temp.begin(), temp.end());
    ans += temp;
    cout << ans;
return 0;
}
