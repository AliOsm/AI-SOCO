#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

#define maxn 200005

char s[maxn] ;
bool vis[maxn] ;
deque < char > dq ;
int n;

int Prev(int i) { return (i+n-1)%n ; }
int Next(int i) { return (i+1)%n ; }

int main()
{
    int k ;

    scanf("%d %d",&n,&k) ;
    scanf("%s",s) ;

    queue< pair<int,int> > q ;

    for(int i=0 ; i<n ; i++)
    {
        if( s[i]==s[ Next(i) ] || s[i] == s[ Prev(i) ] )
        {
            vis[i] = 1 ;
            q.push( mp(i,0) ) ;
        }
    }

    while( !q.empty() )
    {
        pair<int,int> p = q.front() ;
        q.pop() ;

        if( p.yy == k ) continue ;

        if( !vis[ Next(p.xx) ] )
        {
            vis[ Next(p.xx) ] = 1 ;
            s[ Next(p.xx) ] = s[p.xx] ;
            q.push( mp( Next(p.xx) , p.yy+1 ) ) ;
        }

        if( !vis[ Prev(p.xx) ] )
        {
            vis[ Prev(p.xx) ] = 1 ;
            s[ Prev(p.xx) ] = s[p.xx] ;
            q.push( mp( Prev(p.xx) , p.yy+1 ) ) ;
        }
    }

    for(int i=0 ; i<n ; i++)
    {
        if( !vis[i] )
        {
            if( k%2 == 1 )
            {
                if( s[i]=='W' ) s[i] = 'B' ;
                else s[i] = 'W' ;
            }
        }
    }

    printf("%s\n",s) ;

    return 0 ;
}
