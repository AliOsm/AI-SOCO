    #include <cstring>
    #include <vector>
    #include <list>
    #include <map>
    #include <set>
    #include <deque>
    #include <stack>
    #include <bitset>
    #include <algorithm>
    #include <functional>
    #include <numeric>
    #include <utility>
    #include <sstream>
    #include <iostream>
    #include <iomanip>
    #include <cstdio>
    #include <cmath>
    #include <cstdlib>
    #include <ctime>
    #include <memory.h>
    #include <cassert>

    using namespace std;
    const int N=105;
    int n,m;
    char g[N][N];
    bool vis[N][N];
    int mark[N][N];
    vector<pair<int,int > > all[N*N];
    vector<pair<int,int> > v;
    int k;
    int cnt;
    int dirx[4]={1,-1,0,0};
    int diry[4]={0,0,1,-1};
    bool valid(int x,int y){
    return x>-1&&y>-1&&x<n&&y<m;
    }
    void dfs(int x,int y){
    vis[x][y]=1;
    mark[x][y]=cnt;
    all[cnt].push_back(make_pair(x,y));
    for(int k=0;k<4;k++){
        int xx=x+dirx[k];
        int yy=y+diry[k];
        if(valid(xx,yy)&&g[xx][yy]=='.'&&!vis[xx][yy]){
            dfs(xx,yy);

        }
    }
    }

    int main(){
//freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    scanf("%d %d %d",&n,&m,&k);
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf(" %c",&g[i][j]);

        }

    }

for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
  for(int k=0;k<4;k++){
        int xx=i+dirx[k];
        int yy=j+diry[k];
        if(!valid(xx,yy)){cnt=0;dfs(xx,yy);vis[i][j]=1;}
    }
    }


    }
    all[0].clear();
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
                if(g[i][j]=='.'&&!vis[i][j]){
                    cnt++;
                    dfs(i,j);
                }
                }

    }

    cnt=0;
    for(int i=1;i<N*N;i++){
        if(all[i].size()>0){
          cnt++;
            v.push_back(make_pair(all[i].size(),i));

        }

    }
    if(v.size()){
    sort(v.begin(),v.end());
    }
    int ans=0;
    int pos=0;
    while(cnt>k){
    for(int i=0;i<all[v[pos].second].size();i++){
        int xx=all[v[pos].second][i].first;
        int yy=all[v[pos].second][i].second;
        g[xx][yy]='*';
        ans++;
    }
    cnt--;
    pos++;
    }
    printf("%d\n",ans);
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
                printf("%c",g[i][j]);}
        printf("\n");

    }

    return 0;}
