#include <bits/stdc++.h>
using namespace std;

const int N = 100 + 10, M = 2000 + 5;
typedef long long ll;

struct k {
	int t, d, p, index;
};

ll dp[N][M], par[N][M];

bool sortme(k a, k b) {
	if(a.d == b.d) {
		return a.p < b.p;
	}
	return a.d < b.d;
}

k a[N];

int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i].t >> a[i].d >> a[i].p;
		a[i].index = i + 1;
	}
	sort(a, a + n, sortme);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j <= 2000; j++) {
			dp[i + 1][j] = dp[i][j];
			par[i + 1][j] = 1;
			if(j < a[i].d && j >= a[i].t && dp[i + 1][j] < dp[i][j - a[i].t] + a[i].p) {
				par[i + 1][j] = 2;
				dp[i + 1][j] = dp[i][j - a[i].t] + a[i].p;
			}
		}
	}
	ll ans = 0, idx = 0;;
	for (int i = 0; i <= 2000; i++)	{
		if(dp[n][i] > ans)
			ans = dp[n][i], idx = i;
	}
	cout << ans << "\n";
	int x = n;
	vector <int> v;
	while(x) {
		if(par[x][idx] == 2) {
			v.push_back(a[x - 1].index);
			idx -= a[x - 1].t;
		}
		x--;
	}
	cout << v.size() << "\n";
	reverse(v.begin(), v.end());
	for (auto i : v)	cout << i << " ";
	cout << "\n";
}
