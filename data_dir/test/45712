#include<bits/stdc++.h>


using namespace std;
typedef long long ll;

int inf = (int)1e9 + 7;
ll linf = (ll)1e18 + 7;
ll mod = (ll)1e9 + 7;
ll base = (ll)1e17;

const int N = (int)1e5 + 100;
int a[N], dp[N];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
#ifdef DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int n, k;
    cin >> n >> k;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }

    for (int i = 0; i < n; ++i) {
        int prev = i, next = n - 1 - i;
        if (a[i] == 0) {
            dp[i] = min(prev, k) + min(next, k) + 1;
        } else {
            a[i]--;
            int d = i - a[i] - 1;
            if (d < k) {
                int max_used = min(n - 1, a[i] + k);
                int cur_max = min(n - 1, i + k);
                dp[i] = dp[a[i]] + cur_max - max_used; //берём следующие неиспользованные ранее
            } else if (d <= 2 * k) {
                int prev_max = a[i] + k;
                dp[i] = dp[a[i]] + i - prev_max + min(next, k); //берём неиспользованные между ними и следующие максимум k штук
            } else {
                dp[i] = dp[a[i]] + k + 1 + min(next, k); // берём всё, что можем
            }
        }
    }

    for (int i = 0; i < n; ++i)
        cout << dp[i] << " ";

    return 0;
}