#include <iostream>
#include <vector>
#include <string>
using namespace std;

long long nn = 0;

inline int gn(char x) {
       return x - int('0');
}
long long mp[40001];

int main() {
    for(int i = 0; i <= 40000; i++) mp[i] = 0;
    string s;
    long long n;
    cin >> n >> s;
    long long a[s.length() + 1];
    a[0] = 0;
    for(int i = 1; i <= s.length(); i++) {
            a[i] = gn(s[i - 1]);
    }
    for(int i = 1; i <= s.length(); i++) {
            a[i] = a[i - 1] + a[i];
    }
    for(int i = 1; i <= s.length(); i++) {
            for(int j = i; j <= s.length(); j++) {
                    mp[a[j] - a[i - 1]]++;
            }
    }

    long long ans = 0;
    if (n != 0) {
          for(int i = 1; i <= 40000; i++) {
                  if (n % i == 0 && n / i <= 40000) {
                        ans += (mp[i] * mp[n / i]);
                  }
          }
          cout << ans;
          return 0;
    } else {
           long long m = s.length();
           m = m * (m + 1) / 2;
           cout << m * m - (m - mp[0]) * (m - mp[0]);
    }
           
    
    
    return 0;
}
                                 
                                 
                                 
                                 
                                 
                                 
                            

    
