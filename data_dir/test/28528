#include <bits/stdc++.h>
using namespace std;
#define pf pop_front
#define pb push_back
#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)
#define rep(i,t) for (LL i=0;i<t;i++)
#define pii pair<LL,LL>
#define X first
#define Y second
typedef long long LL;
typedef unsigned long long int ulli;
const LL maxN=1e3+17,N=1e2+17,inf=500017,MOD=1e9+7;
LL n,m,x,y,ans,d[maxN*maxN],cnt[maxN*maxN];
map<char,char>b;
bool cycle,v[maxN*maxN],e[maxN*maxN],vis[maxN];
char c[maxN][maxN],s[maxN];
vector<LL>a[maxN*maxN],answer;
bool dfs(LL x)
{
  v[x]=true;
  rep(i,a[x].size())
  {
    if(!v[a[x][i]])
      dfs(a[x][i]);
    if(v[a[x][i]] && !e[a[x][i]])
      return false;
  }
  answer.pb(x);
  e[x]=true;
  return true;
}
void bfs(LL x,LL par)
{
  d[x]=max(d[x],d[par]+1);
  vis[x]=true;
  rep(i,a[x].size())
    bfs(a[x][i],x);
}
int main()
{
  b['D']='I';
  b['I']='M';
  b['M']='A';
  b['A']='D';
  cin>>n>>m;
  FOR(i,1,n)
  {
    scanf("%s",s);
    rep(j,m)
      c[i][j+1]=s[j];
  }
  FOR(i,1,n)
  {
    FOR(j,1,m)
    {
      d[(i-1)*m+j]=1;
      if(c[i][j+1]==b[c[i][j]])
        a[((i-1)*m)+j].pb(((i-1)*m)+j+1),cnt[(i-1)*m+j+1]++;
      if(c[i][j-1]==b[c[i][j]])
        a[((i-1)*m)+j].pb(((i-1)*m)+j-1),cnt[(i-1)*m+j-1]++;
      if(c[i+1][j]==b[c[i][j]])
        a[((i-1)*m)+j].pb((i*m)+j),cnt[(i*m)+j]++;
      if(c[i-1][j]==b[c[i][j]])
        a[((i-1)*m)+j].pb(((i-2)*m)+j),cnt[(i-2)*m+j]++;
    }
  }
  FOR(i,1,n*m)
  {
    if(!v[i] && dfs(i)==false)
      {cycle=true;break;}
  }
  if(cycle)
    return cout<<"Poor Inna!\n",0;
  rep(i,answer.size())
  {
    rep(j,a[answer[i]].size())
      d[answer[i]]=max(d[answer[i]],d[a[answer[i]][j]]+1);
  }
  FOR(i,1,n)
  {
    FOR(j,1,m)
    {
      if(c[i][j]=='D')
        ans=max(ans,d[(i-1)*m+j]);
    }
  }
  if(ans<4)
    return cout<<"Poor Dima!\n",0;
  return cout<<ans/4<<"\n",0;
}