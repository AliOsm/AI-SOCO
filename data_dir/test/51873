 #include <bits/stdc++.h>

using namespace std;

const int N = int(2e5 + 5);
const int INF = 1e9 + 7;

typedef long long ll;
typedef pair < int, int > pii;

int n;
vector < int > v1, v2, v3;
int main (){
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  cin >> n;
  int ok = 0;
  ll sum = 0;
  set < int > s;
  for (int i = 1; i <= n; ++i){
    int x;
    cin >> x;
    s.insert(x);
    if (x % 3 == 1){
      v1.push_back(x);
    }
    if (x % 3 == 2){
      v2.push_back(x);
    }
    if (x % 3 == 0){
      v3.push_back(x);
    }
    if (x == 0){
      ok = 1;
    }
    sum += x;
  }
  if (!sum){
    cout << 0;
    return 0;
  }
  if (!ok){
    cout << -1;
    return 0;
  }
  sort (v1.begin(), v1.end());
  sort (v2.begin(), v2.end());
  sort (v3.begin(), v3.end());
  if (sum % 3  == 1){
    if (v1.size() > 0){
      v1[0] = -1;
    }
    else if (v2.size() > 1){
      v2[0] = v2[1] = -1;
    }
    else {
      cout << 0;
      return 0;
    }
  }
  else if (sum % 3 == 2){
    if (v2.size() > 0){
      v2[0] = -1;
    }
    else if (v1.size() > 1){
      v1[0] = v1[1] = -1;
    }
    else {
      cout << 0;
      return 0;
    }
  }
  string v;
  for (int i = 0; i < v1.size(); ++i){
    if (v1[i] != -1){
      v.push_back(v1[i]);
    }
  }
  for (int i = 0; i < v2.size(); ++i){
    if (v2[i] != -1){
      v.push_back(v2[i]);
    }
  }
  for (int i = 0; i < v3.size(); ++i){
    if (v3[i] != -1){
      v.push_back(v3[i]);
    }
  }
  sort (v.begin(), v.end());
  reverse (v.begin(), v.end());
  sum = 0;
  for (int i : v){
    sum += i;
  }
  if (!sum){
    cout << 0;
    return 0;
  }
  for (int i : v){
    cout << i;
  }
  return 0;
}