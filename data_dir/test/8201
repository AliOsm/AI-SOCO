#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <cstring>
#include <cstdlib>
#include <cstdio>

using namespace std;

int n,i,x,j,size,m,t,l,r;

long long ans;

int tr1[20][300000], need[20][300000];


void up(int t, int v, int l, int r, int ll, int rr)
{
     if ((r<ll) || (rr<l)) return ;
     
     if ((ll<=l) && (r<=rr))
     {
                 need[t][v] ^= 1;
                 tr1[t][v] = (r-l+1) - tr1[t][v];
                 return ;
     }
     need[t][v*2] ^= need[t][v];
     need[t][v*2+1] ^= need[t][v];     
     if (need[t][v] == 1)
     {
                    tr1[t][v*2] = ((r-l+1)>>1) - tr1[t][v*2];
                    tr1[t][v*2+1] = ((r-l+1)>>1) - tr1[t][v*2+1];                    
     }
     need[t][v] = 0;
     up(t,v*2,l,(l+r)/2,ll,rr);
     up(t,v*2+1,(l+r)/2+1,r,ll,rr);
     
     tr1[t][v] = tr1[t][v*2] + tr1[t][v*2+1];
     
     return ;
}

void get(int t, int v, int l, int r, int ll, int rr)
{
     if ((r<ll) || (rr<l)) return ;
     if ((ll<=l) && (r<=rr))
     {
                 ans = ans + ((long long)(1 << t))*tr1[t][v];
                 return ;
     }
     
     need[t][v*2] ^= need[t][v];
     need[t][v*2+1] ^= need[t][v];     
     if (need[t][v] == 1)
     {
                    tr1[t][v*2] = ((r-l+1)>>1) - tr1[t][v*2];
                    tr1[t][v*2+1] = ((r-l+1)>>1) - tr1[t][v*2+1];                    
     }
     need[t][v] = 0;
     get(t,v*2,l,(l+r)/2,ll,rr);
     get(t,v*2+1,(l+r)/2+1,r,ll,rr);
     
     return ;     
}

int main()
{
    cin >> n;
    size = 1 << 17;
    for (i=1;i<=n;i++)
        {
         scanf("%d",&x);
         for (j=0;j<=19;j++)
             if (x & (1 << j))
                {
                    up(j,1,1,size,i,i); 
                }
        }

    cin >> m;
    for (i=1;i<=m;i++)
        {
        scanf("%d",&t);
        if (t==1)
        {
         scanf("%d%d",&l,&r);
         
         ans = 0;
         
         for (j=0;j<=19;j++)
           get(j,1,1,size,l,r);
         
         printf("%I64d\n",ans);                 
        } else
        {
              scanf("%d%d%d",&l,&r,&x);
              for (j=0;j<=19;j++)
                  if (x & (1 << j))
                     {
                          up(j,1,1,size,l,r);
                     }
        }
        }
 //   system("pause");
    return 0;
}
