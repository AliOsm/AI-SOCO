#include <bits/stdc++.h>

#define SZ(x) (((int)x.size()))

typedef long long ll;

using namespace std;

const int maxn = 200*1000+10;
int n, ind, p[maxn], u, v, w, q, m, z[maxn];
ll cur, ans[maxn];
vector<pair<int, int>> qu;
vector<pair<int, pair<int, int>>> vec;

int gp(int x)
{
	if (p[x] == x)
		return x;
	return p[x] = gp(p[x]);
}

void mrg(int a, int b)
{
	a = gp(a);
	b = gp(b);
	if (z[b] < z[a])
		swap(a, b);
	cur += (ll)z[a] * z[b];
	z[b] += z[a];
	p[a] = b;
}

int main()
{
	ios::sync_with_stdio(0);
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++)
	{
		p[i] = i;
		z[i] = 1;
	}
	for (int i = 0; i < n - 1; i++)
	{
		scanf("%d %d %d", &u, &v, &w);
		u--;
		v--;
		vec.push_back({w, {u, v}});
	}
	sort(vec.begin(), vec.end());
	for (int i = 0; i < m; i++)
	{
		scanf("%d", &q);
		qu.push_back({q, i});
	}
	sort(qu.begin(), qu.end());
	for (auto g : qu)
	{
		while (ind < n - 1 && vec[ind].first <= g.first)
		{
			mrg(vec[ind].second.first, vec[ind].second.second);
			ind++;
		}
		ans[g.second] = cur;
	}
	for (int i = 0; i < m; i++)
		printf("%lld ", ans[i]);
	return 0;
}
