#include<bits/stdc++.h>

#define ll long long
#define Add_Speed ios_base::sync_with_stdio(0);cin.tie(NULL);
#define pb push_back
#define mp make_pair
#define f first
#define int ll
#define sz size()
#define s second
#define all(s) s.begin(), s.end()
#define file(s) freopen(s".in","r",stdin); freopen(s".out","w",stdout);
#define inf INT_MAX

using namespace std;

const int maxn = 1e5 + 100;
const int maxM = (int)1e6 + 100;
const int mod = (int)1e9 + 7;
const int maxlog = (int)20;
const int P = mod;              

int n, m, k, x, dp[maxn][3][14], d[3][14], ans;
vector<int> g[maxn];
void dfs(int v, int p = 0){
  dp[v][0][0] = k - 1;
  dp[v][1][1] = 1;
  dp[v][2][0] = m - k;
  for(int to : g[v]){
    if(to == p) continue;
    dfs(to, v);
    for(int i = 0; i <= x; i++){
      for(int j = 0; j < 3; j++){
        d[j][i] = dp[v][j][i];
        dp[v][j][i] = 0;
      }  
    }
    for(int i = 0; i <= x; i++){
      for(int j = 0; j <= x - i; j++){
        dp[v][0][j + i] += (d[0][i] * (dp[to][0][j] + dp[to][2][j] + dp[to][1][j])) % mod;
        dp[v][2][j + i] += (d[2][i] * (dp[to][2][j] + dp[to][0][j])) % mod;
        if(i) dp[v][1][j + i] += (d[1][i] * dp[to][0][j]) % mod;
        dp[v][0][j + i] %= mod;
        dp[v][2][j + i] %= mod;
        dp[v][1][j + i] %= mod;
      }
    }
  }
}
main () {
  Add_Speed
  cin >> n >> m;
  for(int i = 1; i < n; i++){
    int u, v;
    cin >> u >> v;
    g[u].pb(v);
    g[v].pb(u);
  }
  cin >> k >> x;
  dfs(1);
  for(int i = 0; i <= x; i++)
    for(int j = 0; j <= 2; j++)
      ans += dp[1][j][i], ans %= mod;
  cout << ans;
}    