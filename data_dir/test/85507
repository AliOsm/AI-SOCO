

#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <stack>
#include <string>
#include <assert.h>

#define ll long long
using namespace std;

ll MOD = 998244353;
int INF = 1E9 * 2;



int main() {
	int n,k;
	cin >> n >> k;
	vector<int> a(n);
	string s;
	cin >> s;
	for (int i = 0; i < n; i++) {
		a[i] = s[i] - 'A';
	}

	vector<vector<int>> dp(n, vector<int>(k));
	vector<vector<int>> p(n, vector<int>(k));
	for (int i = 0; i < k; i++) {
		if (a[0] != i) dp[0][i]++;
	}

	for (int i = 1; i < n; i++) {
		for (int j = 0; j < k; j++) {
			dp[i][j] = INF;
			for (int c = 0; c < k; c++) {
				if (c != j) {
					if (dp[i][j] > dp[i - 1][c] + (a[i] == j ? 0 : 1)) {
						dp[i][j] = dp[i - 1][c] + (a[i] == j ? 0 : 1);
						p[i][j] = c;
					}
				}
			}
		}
	}


	vector<char> res;

	int start = -1;
	int min_value = INF;
	for (int i = 0; i < k; i++) {
		if (min_value > dp[n - 1][i]) {
			min_value = dp[n - 1][i];
			start = i;
		}
	}

	for (int i = n - 1; i >= 0; i--) {
		res.push_back((char)(start + 'A'));
		start = p[i][start];
	}
	reverse(res.begin(), res.end());


	cout << min_value << "\n";
	for (char i : res) cout << i;
}