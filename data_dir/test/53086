///In the name of God
#include <bits/stdc++.h>
using namespace std;

const int MAXN = 1e6 + 7;

//#define int __int64


vector <int> sum[3];
int n, m;

int a[MAXN];


void go(int type, int id, int N, vector <int>& temp) {
    if (id - 1 == N) {
        int summa = 0;
        for (int i = 0; i < temp.size(); i++) {
            summa += temp[i];
            summa %= m;
        }
        sum[type].push_back(summa);
        return;
    }
    temp.push_back(a[id]);
    go(type, id + 1, N, temp);
    temp.pop_back();
    temp.push_back(0);
    go(type, id + 1, N, temp);
    temp.pop_back();
}

bool check(int kosindi) {
    if (kosindi >= m) return 0;
    return 1;
}

int fo(int sum1) {
    int l = 0, r = sum[2].size()-1;
    while(r - l > 1) {
        int mid = (l + r) / 2;
        if (check(sum[2][mid]+  sum1)) {
            l = mid;
        } else {
            r = mid;
        }
    }
    return (check(sum[2][r]+sum1) ? sum[2][r] : sum[2][l]);
}

main() {
    cin >> n >> m;
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        a[i] %= m;
    }
    vector <int> temp;
    go(1, 1, n / 2, temp);
    temp.clear();
    go(2, n / 2 + 1, n, temp);

    for (int i = 1; i <= 2; i++) {
        sort(sum[i].begin(), sum[i].end());
    }
    int now = 1;
    int mx = 0;
    for (int i = 0; i < sum[now].size(); i++) {
        mx = max(mx, fo(sum[now][i]) + sum[now][i]);
    }
    cout << mx;
}


