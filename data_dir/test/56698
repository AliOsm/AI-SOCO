#include <bits/stdc++.h>
using namespace std;
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
typedef long long ll;
 
const int inf = int(1e9);
const int mod = 1e9 + 7;
const int N = 1e6 + 555;
const long double PI = acos(-1.0);

int cnt[11][11];
int dp[11][11][11][11];
int res[11][11];
set<char> st;
void solve()
{
	string s;
	cin >> s;
	rep(i, 10) rep(j, 10) cnt[i][j] = -1;
	rep(i, sz(s)) st.insert(s[i]);
	if(sz(st) == 1) cnt[0][0] = 0;
	if(sz(s) == 1){ 
			rep(i, 10) {
			rep(j, 10) cout << 0 << " ";
			cout << endl;
		}
	return;
	}
	for(int a = 0; a < 10; ++a){
		for(int b = 0; b < 10; ++b){
			for(int i = 0; i < 10; ++i){
				for(int j = 0; j < 10; ++j){
					int d[1000];
					for(int k = 0; k < 1000; ++k) d[k] = inf;
					d[a] = 0;
					int mn = 1e9;
					for(int k = 0; k < 1000; ++k){
						if(k - i >= 0) {
							if(d[k - i] != inf)
							d[k] = min(d[k], d[k - i] + 1);
						}
						if(k - j >= 0){
							if(d[k - j] != inf)	
							d[k] = min(d[k], d[k - j] + 1);
						} 
						if(k % 10 == b && d[k] != inf){
							if(k == a){
								if(i == 0 || j == 0) mn = 0;
								else continue;
							}
							else
							mn = min(mn, d[k] - 1);
						}	
					}
					if(mn == -1) mn = 0; 
					dp[i][j][a][b] = mn;
				}
			}
		}
	}


	for(int k = 1; k < sz(s); ++k){
		for(int i = 0; i <= 9; ++i){	
			for(int j = 0; j <= 9; ++j){
				int now = dp[i][j][s[k - 1] - '0'][s[k] - '0'];
				if(now != inf) {
					if(cnt[i][j] == -1) cnt[i][j] = now;
					else cnt[i][j] += now;
					res[i][j]++;
				}
			}
		}
	}
	rep(i, 10) {
		rep(j, 10){
			if(j < i) continue;
			if(res[i][j] < sz(s) - 1) cnt[i][j] = -1;
		}
	}
	rep(i, 10) {
		rep(j, 10){
			if(j < i) cnt[i][j] = cnt[j][i];
			cout << cnt[i][j] << " ";
		}
		cout << endl;	
	}
}	


int main()
{
	Red;
	solve();
	return 0;
}
