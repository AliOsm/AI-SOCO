#include<algorithm>
#include<iostream>
#include<numeric>
#include<iomanip>
#include<cassert>
#include<chrono>
#include<string>
#include<vector>
#include<random>
#include<cmath>
#include<ctime>
#include<deque>
#include<queue>
#include<set>
#include<map>

using namespace std;

void solve() {
	int b, w;
	cin >> b >> w;
	if (min(b, w) * 3 + 1 < max(b, w)) {
		cout << "NO\n";
		return;
	}
	cout << "YES\n";
	if (b < w) {
		vector<pair<int, int>> p;
		for (int i = 0; i < b * 2; i++) {
			p.emplace_back(2, i + 3);
		}
		w -= b;
		if (w > 0) {
			p.emplace_back(2, 2);
			w--;
		}
		if (w > 0) {
			for (int i = 0; i < min(w, b); i++) {
				p.emplace_back(1, (i + 1) * 2 + 1);
			}
			w -= min(w, b);
		}
		if (w > 0) {
			for (int i = 0; i < min(w, b); i++) {
				p.emplace_back(3, (i + 1) * 2 + 1);
			}
			w -= min(w, b);
		}
		for (int i = 0; i < (int)p.size(); i++) {
			cout << p[i].first << " " << p[i].second << '\n';
		}
	} else {
		vector<pair<int, int>> p;
		for (int i = 0; i < w * 2; i++) {
			p.emplace_back(2, i + 2);
		}
		b -= w;
		if (b > 0) {
			p.emplace_back(2, 1);
			b--;
		}
		if (b > 0) {
			for (int i = 0; i < min(b, w); i++) {
				p.emplace_back(1, (i + 1) * 2);
			}
			b -= min(b, w);
		}
		if (b > 0) {
			for (int i = 0; i < min(b, w); i++) {
				p.emplace_back(3, (i + 1) * 2);
			}
			b = min(b, w);
		}
		for (int i = 0; i < (int)p.size(); i++) {
			cout << p[i].first << " " << p[i].second << '\n';
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int q;
	cin >> q;
	for (int qq = 0; qq < q; qq++) {
		solve();
	}
	return 0;
}