#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=5e3+50;
const int mod=1e9+7;
using namespace std;
int t,n,m,i,j,b,bl;
char c[100][100];
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		bl=b=0;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				cin>>c[i][j];
				if(c[i][j]=='A')bl=1;
				if(c[i][j]=='P')b=1;
			}
		}
		if(!bl)
		{
			cout<<"MORTAL\n";
			continue;
		}
		if(!b)
		{
			cout<<0<<'\n';
			continue;
		}
		bl=0,b=0;
		for(i=1;i<=n;i++)if(c[i][1]=='P')break;
		if(i==n+1)bl=1;
		for(i=1;i<=n;i++)if(c[i][m]=='P')break;
		if(i==n+1)bl=1;
		for(i=1;i<=m;i++)if(c[1][i]=='P')break;
		if(i==m+1)bl=1;
		for(i=1;i<=m;i++)if(c[n][i]=='P')break;
		if(i==m+1)bl=1;
		if(bl)
		{
			cout<<1<<'\n';
			continue;
		}
		if(c[1][1]=='A' || c[1][m]=='A' || c[n][1]=='A' || c[n][m]=='A')
		{
			cout<<2<<'\n';
			continue;
		}
		bl=0;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)if(c[i][j]=='P')break;
			if(j==m+1)bl=1;
		}
		for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)if(c[j][i]=='P')break;
			if(j==n+1)bl=1;
		}
		if(bl)
		{
			cout<<2<<'\n';
			continue;
		}
		bl=0;
		for(i=1;i<=n;i++)if(c[i][1]=='A')break;
		if(i!=n+1)bl=1;
		for(i=1;i<=n;i++)if(c[i][m]=='A')break;
		if(i!=n+1)bl=1;
		for(i=1;i<=m;i++)if(c[1][i]=='A')break;
		if(i!=m+1)bl=1;
		for(i=1;i<=m;i++)if(c[n][i]=='A')break;
		if(i!=m+1)bl=1;
		if(bl)
		{
			cout<<3<<'\n';
			continue;
		}
		cout<<4<<'\n';
	}
	return 0;
}
