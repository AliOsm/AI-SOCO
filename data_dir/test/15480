#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 100;

vector<int> P[N];

int Pow(int x, int p) {
    int ret = 1;
    while(p--) ret *= x;
    return ret;
}


int main() {
    // freopen("in.txt", "r", stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n;
    cin >> n;
    for(int i = 1; i <= n; i++) {
        int x;
        cin >> x;
        for(int j = 2; j * j <= x; j++) {
            int cnt = 0;
            while(x % j == 0) {
                cnt++;
                x /= j;
            }
            if(cnt) P[j].push_back(cnt);
        }
        if(x > 1) P[x].push_back(1);
    }
    long long g = 1;
    for(int i = 2; i < N; i++) {
        if(P[i].size() == 0) continue;
        sort(P[i].begin(), P[i].end());
        if(P[i].size() < n-2) continue;
        if(P[i].size() == n-1) {
            g *= Pow(i, P[i][0]);
        }
        if(P[i].size() == n) {
            g *= Pow(i, P[i][1]);
        }
    }
    cout << g << endl;
    return 0;
}
