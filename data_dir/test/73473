#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

vector<ll>ans;

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    ll n;
    cin >> n;
    ll a[n+1];
    a[0] = 0;
    for(int i=1;i<=n;i++) cin >> a[i];
    for(int i=1;i<=n;i++)
    {
    	set<ll>s[i];
    	for(int j=1;j<=n;j++)
    		s[(j-1) % i].insert(a[j] - a[j-1]);
    	ll flag = 0;
    	for(int j=0;j<i;j++)
    	{	
    		if(sz(s[j]) != 1)
    		{
    			flag = 1;
    			break;
    		}
    	}
    	if(!flag) ans.pb(i);	
    }	
    cout << sz(ans) << endl;
    for(auto it : ans)
    	cout << it << " ";
    cout << endl;
    return 0;
}  