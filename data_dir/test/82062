#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
#include<random>
#include<chrono>
#include<bitset>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=3.1415926535897932384626433832795;
const ll INF = 1LL<<62;
const ll MINF = -1LL<<62;

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); uniform_int_distribution<int>(0, n-1)(rng)

#define int ll
main() {
	IO;
	int n;
	cin>>n;
	vector<ll> t(n);
	vector<ll> o, e;
	for(int i=0;i<n;++i) {
		cin>>t[i];
		if(t[i]&1) o.pb(t[i]);
		else e.pb(t[i]);
	}
	
	vector<ll> ans;
	if(sz(ans)<sz(o)) ans=o;
	
	vector<ll> lst[70];

	for(int j=0;j<(int)t.size();++j) {
		ll cnt=0, akt=t[j];
		while(akt%2==0) {
			cnt++;
			akt/=2;
		}
		lst[cnt].push_back(t[j]);
	}
	
	for(int j=0;j<70;++j) {
		if(sz(ans)<sz(lst[j])) ans=lst[j];
	}
	
	map<ll,ll> orig, van;
	for(int i:t) orig[i]++;
	for(int i:ans) van[i]++;
	
	vector<ll> del;
	for(auto i:orig) {
		for(int j=0;j<i.second-van[i.first];++j) del.push_back(i.first);
	}
	
	cout<<sz(del)<<"\n";
	for(auto i:del) cout<<i<<" ";
	cout<<"\n";
	
	return 0;
}
