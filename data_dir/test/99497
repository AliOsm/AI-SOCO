#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
#define endl '\n'
#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfi3(x, y, z) scanf("%d%d%d" , &x,&y,&z)
#define sfl(x) scanf("%I64d" , &x)
#define sfl2(x, y) scanf("%I64d%I64d", &x, &y)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d" , &x,&y,&z)
#define sff(x) scanf("%f",&x)
#define sff2(x, y) scanf("%f%f",&x, &y)
#define sff3(x, y, z) scanf("%f%f%f",&x, &y, &z)
#define vall v.begin(),v.end()
#define mod 1000000007
#define pi 3.1415926536
/*
ll gcd(ll a, ll b)
{
    if (b == 0)
        return a;
    return gcd(b, a % b);
}*/

ll fp(ll x , ll exp)
{
   if(exp == 0)
      return 1;
   if(exp % 2 == 0)
      return fp((x * x) % mod, exp / 2) % mod;
   return (((fp((x * x) % mod, exp / 2)) % mod) * x) % mod;
}
/*bool IspowerofTwo (int x)
{
    return (x & (x - 1)) == 0;
}
string num2str(ll n)
{
    string ans;
    stack <int> s;
    while(n > 0)
    {
        s.push(n % 10);
        n /= 10;
    }
    while (!s.empty())
    {
        ans += s.top();
        s.pop();
    }
    return ans;
}

float dis(float x, float y, float a, float b)
{
    return sqrt((x - a) * (x - a) + (y - b) * (y - b));
}

ll str2num(string s)
{
    bool x = false;
    if (s[0] == '-')
        x = true;
    ll ans = 0;
    for (int i = 0 + x; i < s.size(); i++)
    {
        ans *= 10;
        ans += s[i] - '0';
    }
    if (x)
        ans *= -1;
    return ans;
}

bool prime[1000006];
void seiv()
{
    prime[1] = prime[0] = true;
        for (ll i = 2; i < 1000001; i++)
            for (ll j = i * i; j < 1000001 && !prime[i]; j += i)
                prime[j] = true;
    for (int i = 0; i < 1000001; i++)
        prime[i] = !prime[i];
}

//bitmask
for(int i = 0; i < (1 << n); i++)
{
    vector<int> v;
    for (int j = 0; j < n ; j++)
        if ((i & (1 << j)) != 0)
            v.push_back(a[j]);
}
//printf("%",&)<<fixed<<setprecision()
//freopen("cubes.in", "r", stdin);
//freopen("cubes.in", "w", stdout);
//scanf("%size_s",&s);
*/

int main()
{
    ENGZ
    int n, m, k, x, q;
    string s[100005], h;
    map <string, int> mp;
    cin >> n >> k >> m;
    for (int i = 0; i < n; i++)
        cin >> s[i];
    for (int i = 0; i < n; i++)
        cin >> x, mp[s[i]] = x;
    for (int i = 0; i < k; i++)
    {
        cin >> q;
        vector<int> v;
        int mini = 1e9;
        while (q--)
            cin >> x, v.push_back(x), mini = min(mini, mp[s[x - 1]]);
        for (int i = 0; i < v.size(); i++)
            mp[s[v[i] - 1]] = mini;
    }
    ll ans = 0;
    for (int i = 0; i < m; i++)
        cin >> h, ans += mp[h];
    cout << ans;
    return 0;
}
