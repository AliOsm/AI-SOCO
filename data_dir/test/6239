#include<bits/stdc++.h>
using namespace std;
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(ll i=0;i<n;i++)
#define hell                1000000007LL
#define vi                  vector<ll>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<ll,ll>
#define all(c)              c.begin(),c.end()
#define sz(c)               (ll)c.size()
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
    ll res=1;
    x=x%p;
    while(y>0)
    {
        if(y&1)
            res=((res%p)*(x%p))%p;
        y=y>>1;
        x=((x%p)*(x%p))%p;
    }
    return res;
}
bool isprime(ll n)
{
    if(n<2) return false;
    else if(n==2) return true;
    else if(n%2==0) return false;
    else
    {
        ll z=sqrt(n);
        rep(i,z-1) if(n%(i+2)==0) return false;
        return true;
    }
}
vi dijkstra(vi &a,vi &vis)
{
    ll n=sz(a);
    vi ans(n,1e15);
    priority_queue< pii,vector< pii >,greater< pii > > q;
    q.push(mp(0,0));
    vis[0]=1;
    ans[0]=0;
    while(!q.empty())
    {
        pii z=q.top();
        q.pop();
        if(z.se-1>=0 && vis[z.se-1]==0)
        {
            vis[z.se-1]=1;
            ans[z.se-1]=ans[z.se]+1;
            q.push(mp(ans[z.se-1],z.se-1));
        }
        if(z.se+1<n && vis[z.se+1]==0)
        {
            vis[z.se+1]=1;
            ans[z.se+1]=ans[z.se]+1;
            q.push(mp(ans[z.se+1],z.se+1));
        }
        if(vis[a[z.se]]==0)
        {
            vis[a[z.se]]=1;
            ans[a[z.se]]=ans[z.se]+1;
            q.push(mp(ans[a[z.se]],a[z.se]));
        }
    }
    return ans;
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    ll n;
    cin>>n;
    vi a(n);
    rep(i,n) cin>>a[i];
    rep(i,n) a[i]--;
    vi vis(n,0);
    vi ans=dijkstra(a,vis);
    rep(i,n) cout<<ans[i]<<" ";
    return 0;
}
