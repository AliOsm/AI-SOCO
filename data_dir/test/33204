#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<set>
#include<vector>
#include<map>
#include<stack>
#include<string>
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define piii pair<ll,pair<ll,ll>>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007
#define LD long double
using namespace std;
 
inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int dp[200004];
int temp[200004];

int main()
{
    int a=getnum(),b=getnum();
    
    for(int i=0;i<=a;i++)dp[i]=-1;

    if(a>=1)dp[a-1]=1;
    if(b>=1)dp[a]=1;
    int ans=0;
    int turn=2;
    while(true)
    {
        int tot=0,yes=0;
        for(int j=0;j<=a;j++)
        {
            if(dp[j]!=-1)
            {
                yes=1;
                tot=(tot+dp[j]);
                if(tot>=MOD)tot-=MOD;
            }
        }

        if(!yes)
        {
            printf("%d\n",ans);
            return 0;
        }
        else ans=tot;
        
        for(int j=0;j<=a;j++)
        {
            temp[j]=-1;
            if(dp[j+turn]!=-1&&j+turn<=a)temp[j]=dp[j+turn];
            int x=turn*(turn+1)/2;
            if(x-(a-j)<=b&&dp[j]!=-1)
            {
                if(temp[j]==-1)temp[j]=dp[j];
                else
                {
                    temp[j]=(temp[j]+dp[j]);
                    if(temp[j]>=MOD)temp[j]-=MOD;
                }
            }
        }

        for(int j=0;j<=a;j++)dp[j]=temp[j];

        turn++;
    }
}