#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
//#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int n, m, k;

char s[505][505];
int dist[505][505];

int qx[250005], qy[250005], qt = 0, qh = 0;

int sx = -1, sy = -1;

void out(){
  forn(i, n){
    puts(s[i]);
  }
  printf("\n");
  exit(0);
}

vector<pair<int, pair<int, int> > > res;

int dx[] = {0, 0, 1, -1};
int dy[] = {1, -1, 0, 0};

int main(void) {
  #ifndef ONLINE_JUDGE
      freopen("input.txt", "rt", stdin);
      freopen("output.txt", "wt", stdout);
  #endif
  memset(dist, -1, sizeof dist);
  scanf("%d %d %d\n", &n, &m, &k);
  forn(i, n){
    gets(s[i]);
    forn(j, m){
      if(s[i][j] == '.'){
        sx = i;
        sy = j;
      }
    }
  }
  if(!k){
    out();
  }
  qx[qt] = sx;
  qy[qt] = sy;
  ++qt;
  dist[sx][sy] = 0;
  while(qh != qt){
    int x = qx[qh], y = qy[qh];
    res.pb(mp(dist[x][y], mp(x, y)));
    ++qh;
    forn(i, 4){
      int nx = x + dx[i];
      int ny = y + dy[i];
      if(nx < 0 || nx >= n){
        continue;
      }
      if(ny < 0 || ny >= m){
        continue;
      }
      if(s[nx][ny] != '.'){
        continue;
      }
      if(dist[nx][ny] == -1){
        dist[nx][ny] = dist[x][y] + 1;
        qx[qt] = nx;
        qy[qt] = ny;
        ++qt;
      }
    }
  }
  reverse(all(res));
  forn(i, k){
    int x = res[i].S.F, y = res[i].S.S;
    s[x][y] = 'X';
  }
  out();
  return 0;
}
