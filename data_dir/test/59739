#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define MS0(I) memset(I, 0, sizeof(I));
#define ALL(x) begin(x),end(x)
#define SZ(x) ((int)(x).size())
#define rep(i, n) for(int i = 0; i < n; i ++)
#define rep1(i, a, b) for(int i = a; i < b; i ++)
#define per1(i, a, b) for(int i = a; i >= b; i --)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9;
const LL  INFF = (LL)1e18;
const int mod = (int)1e9 + 7;
const int MXN = (int)3e5 + 7;
char s[MXN];
LL cnt[26];
int dp[MXN];
int main(void){
	int t; scanf("%d", &t);
	dp[0] = 1;
	while( t-- ){
		int n, m, l; scanf("%d %d %d %s", &n, &m, &l, s + 1);
		rep(i, 26) cnt[i] = 0;
		rep1(i, 1, l+1) cnt[ s[i] - 'A' ]++;
		rep1(i, 1, l+1) dp[i] = 0;
		rep(i, 26){
			per1(j, l - cnt[i], 0){
				if(dp[j]) dp[ j + cnt[i] ] = 1;
			}
		}
		bool op = 0;
		rep1(i, n, l+1) if(dp[i]){
			if(l - i >= m) op = 1;
			break;
		}
		if(op){ puts("0"); continue; }
		LL ans = INFF;
		rep(i, 26) if(cnt[i]){
			rep1(j, 1, n+1) dp[j] = 0;
			rep(j, 26) if(i != j){
				per1(k, n - cnt[j], 0) if(dp[k]){
					dp[ k + cnt[j] ] = 1;
				}
			}
			rep1(j, n - cnt[i] + 1, n) if(j >= 0 && dp[j]){
				LL v1 = n - j;
				LL v2 = cnt[i] - v1;
				LL la = l - j - cnt[i];
				v2 = min(v2, m - la);
				ans = min(ans, v1*v2);
			}
		}
		printf("%lld\n", ans);
	}
  return 0;
}

