#include<bits/stdc++.h>
#define CLR(a)              memset(a, 0, sizeof(a))
#define SET(a, x)           memset(a, x, sizeof(a))
#define SORT(v)             sort(v.begin(), v.end())
#define REV(v)              reverse(v.begin(), v.end())
#define FOR(i, n)           for (int i=0; i<n; i++)
#define FOR1(i, n)          for (int i=1; i<=n; i++)
#define ROF(i, n)           for (int i=n-1; i>=0; i--)
#define ROF1(i, n)          for (int i=n; i>=1; i--)
#define LOOP(i, x, n)       for (int i=x; i<=n; i++)
#define READ(x)             freopen(x, "r", stdin);
#define WRITE(x)            freopen(x, "w", stdout);
#define fastIO()            ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define PI                  acos(-1.0)
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define all(v)              v.begin(), v.end()

using namespace std;

typedef long long              ll;
typedef unsigned long long     ull;
typedef vector<int>            vi;
typedef pair<int, int>         pii;
typedef pair<string, int>      psi;
typedef pair<char, int>        pci;

const double eps = 1e-9;

int fx[] = {-1, 1, 0, 0, -1, -1, 1, 1};
int fy[] = {0, 0, -1, 1, -1, 1, -1, 1};

int kx[] = {1, 1, 2, 2, -1, -1, -2, -2};
int ky[] = {2, -2, 1, -1, 2, -2, 1, -1};

string prefix(string s){
    string t = s;
    REV(t);
    s = s + "$" + t;
//    cout << s << endl;
    int n = (int)s.length();
    vector<int> pi(n);
    for (int i = 1; i < n; i++) {
        int j = pi[i-1];
        while (j > 0 && s[i] != s[j])
            j = pi[j-1];
        if (s[i] == s[j])
            j++;
        pi[i] = j;
    }
   return s.substr(0, pi[n-1]);
}

string solve(string s){
    if (s.size() == 1)
        return s;
    int i = 0, j = s.size() - 1;
    string take = "", ans = "";
    while(i <= j && s[i] == s[j]){
        take += s[i];
        i++; j--;
    }
//    cout << s << " " << i << " " << j << endl;
    if (i >= j) return s;

    string sub = s.substr(i, j - i + 1);
    string x = prefix(sub);
    REV(sub);
    string y = prefix(sub);
//    cout << x << " " << y << endl;
    if (x.size() >= y.size()){
        ans = take + x;
        REV(take);
        ans += take;
    }
    else{
        ans = take + y;
        REV(take);
        ans += take;
    }
    return ans;
}

int main()
{
    fastIO();
//    READ("in.txt");
    int T; cin >> T;
    while(T--){
        string s; cin >> s;
        string res = solve(s);
        cout << res << "\n";
    }
    return 0;
}
