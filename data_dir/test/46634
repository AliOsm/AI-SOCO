#include <bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

//using namespace __gnu_pbds;
using namespace std;

//template<typename T>
//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef vector<int> vi;
typedef long long ll;

#define pb push_back
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)
#define ONES(n) __builtin_popcountll(n)

int di[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dj[] = {1, -1, 0, 0, -1, 1, 1, -1};

const int N = 205;
int arr[N] ;
ll memo[N][N][N];
int n , k , x;

ll solve (int i , int nxt , int rem) {
    if (i == n)
        return 0;

    ll &ret = memo[i][nxt][rem];
    if (~ret)
        return ret;

    ret = LLONG_MIN / 2;
    if (nxt > i)
        ret = solve(i + 1 , nxt , rem);

    if (rem)
        ret = max(ret , solve(i + 1 , min(n , i + k) , rem - 1) + arr[i]);

    return ret;
}
int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d%d%d" , &n , &k , &x);
    for (int i = 0 ;i < n ;i++)
        scanf("%d", arr + i);

    memset(memo , -1 , sizeof memo);
    ll ans = solve(0 , k - 1 , x);
    if (ans <= 0)
        puts("-1");
    else
        printf("%lld" , ans);
}
