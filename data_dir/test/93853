#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl

const int maxn = 1e6 + 5;
set<char> good;
string s;
int n;

bool match(string s, string t) {
  //cout<<s<<" ?? "<<t<<endl;
  int n = s.length();
  int m = t.length();
  if (m!=n) return false;
  for (int i=0; i<n; i++) {
    if (s[i]=='?') {
      if (!good.count(t[i])) return false;
    } else {
      if (s[i]!=t[i]) return false;
    }
  }
  return true;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

  {
    string buf; cin>>buf;
    for (char c: buf) good.insert(c);
  }

  cin>>s;
  n = s.length();

  bool noStar = s.find('*') == string::npos;
  int idx = -1;
  if (!noStar) {
    idx = s.find('*');
  }
  int left = idx;
  int right = n-idx-1;

  int q; cin>>q;
  while (q--) {
    string t; cin>>t;
    int m = t.length();
    if (noStar) {
      if (match(s,t)) cout<<"YES\n"; else cout<<"NO\n";
      continue;
    }

    if (m-right<0 || m-left-right<0) {
      cout<<"NO\n"; continue;
    }
    string L = t.substr(0, left);
    string R = t.substr(m-right);
    string M = t.substr(left, m-left-right);
    
    //cout<<L<<" m "<<M<<" r "<<R<<endl;
    
    bool ok = true;
    for (char c: M) {
      if (good.count(c)) ok = false;
    }

    string sL = s.substr(0,left);
    string sR = s.substr(n-right);
    //cout<<sL<<" , "<<sR<<endl;

    ok = ok && match(sL, L) && match(sR, R);
    if (ok) {
      cout<<"YES\n";
    } else {
      cout<<"NO\n";
    }
  }

  return 0;
}
