#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n;
int x[100100], y[100100];

int opposite(int ind) {
    return (ind + n / 2) % n;
}

bool ok(int ax, int ay, int bx, int by, int cx, int cy, int dx, int dy) {
    int x1 = bx - ax;
    int y1 = by - ay;
    int x2 = dx - cx;
    int y2 = dy - cy;
    return (x1 + x2) == 0 && (y1 + y2) == 0;
}

int main(){

    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d%d", x + i, y + i);
    }

    if (n % 2) {
        printf("NO\n");
        return 0;
    }

    for (int i = 0; i < n; i++) {
        int ni = (i + 1) % n;
        int j = opposite(i);
        int nj = (j + 1) % n;
        if (!ok(x[i], y[i], x[ni], y[ni], x[j], y[j], x[nj], y[nj])) {
            printf("NO\n");
            return 0;
        }
    }

    printf("YES\n");

    return 0;
}
