#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

const int maxN = (int)2e5 + 10;
const int INF = (int)2e9 + 10;

int ans[maxN], l[maxN], r[maxN], cost[maxN];

void solveTask() {
    for (int i = 0; i < maxN; ++i) {
        ans[i] = INF;
    }
    int n, t;
    cin >> n >> t;
    int answer = INF;
    vector<pair<int, pair<int, int> > > q;
    for (int i = 1; i <= n; ++i) {
        cin >> l[i] >> r[i] >> cost[i];
        q.push_back(make_pair(l[i], make_pair(-1, i)));
        q.push_back(make_pair(r[i], make_pair(1, i)));
    }
    sort(q.begin(), q.end());
    for (int i = 0; i < q.size(); ++i) {
        int cur_len = r[q[i].second.second] - l[q[i].second.second] + 1;
        if (cur_len > t) continue;
        if (q[i].second.first == -1) {
            int cur_val = ans[t - cur_len];
            if (cur_val == INF) continue;
            answer = min(answer, cur_val + cost[q[i].second.second]);
        } else {
            ans[cur_len] = min(ans[cur_len], cost[q[i].second.second]);
        }
    }
    if (answer == INF) cout << -1 << endl; else cout << answer << endl;
}

int main() {
#ifndef ONLINE_JUDGE  
    freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
#else
    // online submission
#endif    
    solveTask();
    ios_base::sync_with_stdio(false);
    return 0;
}