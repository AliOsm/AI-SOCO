#include<bits/stdc++.h>
using namespace std ;
#define LL long long
#define Rep( i , a , b ) for( i = a ; i <= b ; i ++ )
#define Rev( i , b , a ) for( i = b ; i >= a ; i -- )
#define PB push_back
#define mod 1000000007

LL n , m , k , s ;

LL a[500005] ;
LL cnt[500005] ;
LL cnt1[500005] ;

bool Ok( LL left , LL right ){
    LL d = ( left - 1 ) / k ;
    d += 1 ;
    d += ( m - right ) / k ;
    if( d >= n ) return 1 ;
    return 0 ;
}

int main()
{
    LL i , j ;

    scanf("%lld%lld%lld%lld",&m,&k,&n,&s) ;
    Rep( i , 1 , m ){
        scanf("%lld",&a[i]) ;
    }
    LL mot = 0 ;
    Rep( i , 1 , s ){
        LL x ;
        scanf("%lld",&x) ;
        cnt[x] ++ ;
        if( cnt[x] == 1 ) mot ++ ;
    }
    LL tot = 0 ;
    LL L , R ;
    LL left = 1 , right = 0 ;
    LL res = LLONG_MAX ;
    while( 1 ){
        if( right == m + 1 ) break ;
        if( tot == mot ){
            if( right - left + 1 >= k ){
                LL d = right - left + 1 - k + ( ( left - 1 ) % k ) ;
                if( d < res && Ok( left , right ) ){
                    res = d ;
                    L = left , R = right ;
                }
                cnt1[a[left]] -- ;
                if( cnt1[a[left]] == cnt[a[left]] - 1 ) tot -- ;
                left ++ ;
                if( left == m + 1 ) break ;
            }
            else{
                right ++ ;
                if( right == m + 1 ) break ;
                cnt1[a[right]] ++ ;
                if( cnt1[a[right]] == cnt[a[right]] ) tot ++ ;
            }

        }
        else{
            right ++ ;
            if( right == m + 1 ) break ;
            cnt1[a[right]] ++ ;
            if( cnt1[a[right]] == cnt[a[right]] ) tot ++ ;
        }
    }

    if( res == LLONG_MAX ) puts("-1") ;
    else{
       memset( cnt1 , 0 , sizeof cnt1 ) ;
        printf("%lld\n",res) ;
        LL d = ( L - 1 ) % k ;
        Rep( i , 1 , d ){
            printf("%lld ",i) ;
        }
        Rep( i , L , R ){
            cnt1[a[i]] ++ ;
        }
        d = ( R - L + 1 ) - k ;
        Rep( i , L , R ){
            if( d == 0 ) break ;
            if( cnt1[a[i]] - 1 >= cnt[a[i]] ){
                printf("%lld ",i) ;
                cnt1[a[i]] -- ;
                d -- ;
            }
        }
        puts("") ;
    }


    return 0 ;
}