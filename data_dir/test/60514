#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pll;
typedef pair<pll,ll> plll;
typedef pair<pll,pll> ppll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back
template< typename T,typename V>ostream &operator<< (ostream &out,const pair<T,V> x){ out << "{" << x.fst << " : " << x.snd << "}"; return out;}template< typename T>ostream &operator<< (ostream &out,const set<T> x){ for(auto &it : x){ out << it << " "; } return out;}template< typename T>ostream &operator<< (ostream &out,const multiset<T> x){ for(auto &it : x){ out << it << " "; } return out;}template< typename T,typename V>ostream &operator<< (ostream &out,const map<T,V> x){ for(auto &it : x){ out << "[" << it.fst << "]" << " = " << it.snd << "\n"; } return out;}template< typename T>ostream &operator<< (ostream &out,const vector<T> x){ for(int i = 0;i < x.size() - 1; ++i){ out << x[i] << " "; } out << x.back(); return out;}template< typename T>ostream &operator<< (ostream &out,const vector<vector<T> > x){ for(int i = 0;i < x.size() - 1; ++i){ out << "[" << i << "]" << " = {" << x[i] << "}\n"; } out << "[" << x.size() - 1 << "]" << " = {" << x.back() << "}\n"; return out;}

const int N = 2e6 + 5;
const int MOD = 1e9 + 7;
const int INF = 1e9;
int mn[N],mx[N],p[N];
void push(int v){
    mx[2 * v] += p[v];
    mx[2 * v + 1] += p[v];
    mn[2 * v] += p[v];
    mn[2 * v + 1] += p[v];
    p[2 * v] += p[v];
    p[2 * v + 1] += p[v];
    p[v] = 0;
}
void upd(int v,int tl,int tr,int l,int r,int val){
    if(r < tl || tr < l)return;
    if(l <= tl && tr <= r){
        mx[v] += val;
        mn[v] += val;
        p[v] += val;
        return;
    }
    int tm = (tl + tr) >> 1;
    push(v);
    upd(2 * v,tl,tm,l,r,val);
    upd(2 * v + 1,tm + 1,tr,l,r,val);
    mx[v] = max(mx[2 * v],mx[2 * v + 1]);
    mn[v] = min(mn[2 * v],mn[2 * v + 1]);
}
pll get(int v,int tl,int tr,int l,int r){
    if(r < tl || tr < l)return {-INF,INF};
    if(l <= tl && tr <= r){
        return {mx[v],mn[v]};
    }
    int tm = (tl + tr) >> 1;
    push(v);
    pll lf = get(2 * v,tl,tm,l,r);
    pll rg = get(2 * v + 1,tm + 1,tr,l,r);
    return {max(lf.fst,rg.fst),min(lf.snd,rg.snd)};
}
string was;
main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    int n;
    cin >> n;
    string s;
    cin >> s;
    int pos = 0,sz = 0,op = 0;
    for(int i = 0;i < n; ++i)was.pb(' ');
    for(int i = 0;i < n; ++i){
        if(s[i] == 'L'){
            pos--;
            if(pos < 0)pos = 0;
        }else
        if(s[i] == 'R'){
            pos++;
        }else{
            if(pos >= 0){
            if(was[pos] == '('){
                op--;
                upd(1,0,n - 1,pos,sz,-1);
            }
            if(was[pos] == ')'){
                op++;
                upd(1,0,n - 1,pos,sz,+1);
            }
            was[pos] = s[i];
            if(was[pos] == '('){
                op++;
                upd(1,0,n - 1,pos,sz,1);
            }
            if(was[pos] == ')'){
                op--;
                upd(1,0,n - 1,pos,sz,-1);
            }
            }
        }
        if(sz < pos){
            int pre = get(1,0,n - 1,pos - 1,pos - 1).fst;
            if(pre > (int)1e8)pre = 0;
            upd(1,0,n - 1,pos,pos,pre);
            sz = pos;
        }
        pll g = get(1,0,n - 1,0,sz);
        if(g.snd < 0 || op != 0){
            cout << -1;
        }else{
            cout << g.fst;
        }
        cout << " ";
    }
    return 0;
}

