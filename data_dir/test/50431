#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
using namespace std;
typedef long long LL;
const int N = 300005;
const LL MOD = 1000000007LL;
LL n , x , a[N];
map <LL , LL> m;
LL powmod (LL a , LL b) {
    LL ret = 1;
    while (b) {
        if (b & 1) ret = ret * a % MOD;
        a = a * a % MOD;
        b >>= 1;
    }
    return ret;
}
int main () {
    // freopen ("input.txt" , "r " , stdin);
    cin >> n >> x;
    LL sum = 0 , mx = 0;

    for (int i = 0 ; i < n ; i ++) {
        cin >> a[i];mx = max (a[i] , mx);
        sum += a[i];
    }
    for (int i = 0 ; i < n ; i ++) {
        m[mx - a[i]] ++;
    }
    LL ret = sum - mx;
    map <LL , LL> :: iterator it; 
    for (it = m.begin () ; it != m.end () ; ) {
        LL a = it -> first , b = it -> second;
        if (b && b % x == 0) m[a + 1] += b / x , m[a] = 0 , it = m.lower_bound (a + 1);
        else it ++;
    }
    for (it = m.begin () ; it != m.end () ; it ++) {
        if (it -> second != 0) {
            ret += it -> first;
            break;
        }
    }
    cout << powmod (x , min (ret , sum)) << endl;
    return 0;
}