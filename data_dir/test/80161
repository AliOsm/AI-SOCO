# include <bits/stdc++.h>

using namespace std;

const int N = 5e5 + 2;

long long k, n, a[N], dp[N], old[N], cp[N], u[N];
vector < pair <long long, long long> > vec;

int main(){
      cin >> k >> n;

      for(int i = 1; i <= n; i ++)
            cin >> a[i];

      sort(a + 1, a + n + 1);

      for(int i = 2; i <= n; i ++){
            vec.push_back({a[i] - a[i - 1], i});
      }

      sort(vec.begin(), vec.end());
      long long sz = vec.size();

      for(int i = 0; i < min(2 * k + 1, sz); i ++){
            u[vec[i].second] = 1;
            u[vec[i].second - 1] = 1;
      }

      int cn = n;
      n = 0;

      for(int i = 1; i <= cn; i ++){
            if(u[i]){
                  cp[++ n] = a[i];
            }
      }

      sort(cp + 1, cp + n + 1);

      dp[0] = 1e9 + 7;
      dp[1] = 1e9 + 7;

      for(int i = 2; i <= n; i ++)
            dp[i] = min(dp[i - 1], cp[i] - cp[i - 1]);

      for(int i = 2; i <= k; i ++){
            for(int j = 1; j <= n; j ++){
                  old[j] = dp[j];
                  dp[j] = 1e9 + 7;
            }
            for(int j = i * 2; j <= n; j ++)
                  dp[j] = min(dp[j - 1], (cp[j] - cp[j - 1]) + old[j - 2]);
      }

      cout << dp[n] << endl;
}
