#include<bits/stdc++.h>
using namespace std;
int N, Q, i, L, R, P[1000];
long long A[100000];
int euc(int X) {
	int i, R=X;
	for (i=2;i*i<=R;i++) {
		if (R%i==0) {
			for (X-=X/i;R%i==0;R/=i) {}
		}
	}
	if (R>1) {
		X-=X/R;
	}
	return X;
}
long long kal(long long X,long long Y,int M) {
	return min((X*Y)%M+M,X*Y);
}
long long pan(long long X,int Y,int M) {
	if (Y==0) {
		return 1;
	}
	long long R=pan(X,Y>>1,M);
	R=kal(R,R,M);
	if (Y&1) {
		R=kal(R,X,M);
	}
	return R;
}
long long ans(int D) {
	if (D==R) {
		/*cout<<A[D]%P[D-L]<<' ';
		if (A[D]%P[D-L]==0) {
			return P[D-L];
		}*/
		return pan(A[D],1,P[D-L]);
	}
	if (P[D-L]==1) {
		return min(A[D],(long long)2);
	}
	return pan(A[D],ans(D+1),P[D-L]);
	/*cout<<R<<' ';
	if (R==0) {
		cout<<'-'<<P[D-L]<<' ';
		return P[D-L];
	}*/
	return R;
}
int main () {
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	cin>>N>>P[0];
	for (i=0;i<N;i++) {
		cin>>A[i];
	}
	for (i=1;P[i-1]>1;i++) {
		P[i]=euc(P[i-1]);
	}
	cin>>Q;
	for (i=0;i<Q;i++) {
		cin>>L>>R;
		L--;
		R--;
		cout<<ans(L)%P[0]<<'\n';
	}
}
