//                             In The Name Of Allah
#include <bits/stdc++.h>
#define ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define ll long long
#define int long long
#define pb push_back
using namespace std; 

const ll N = 2e5 + 100, OO = 1e18, M = 1e9 + 7, M2 = 998244353;
typedef pair <int, int> pii;
int l[N], r[N], dp[N];

int32_t main() {
	int n, m;
	cin >> n >> m;
	string s;
	cin >> s;
	int k = -1;
	memset(l, 60, sizeof(l));
	memset(r, 60, sizeof(r));
	for(int i = 0; i < s.size(); i++) {
		if(s[i] == '1') {
			k = max(i - 1, k);
			for(int j = k + 1; j <= min(i + m, n - 1); j++) 
				l[j] = i;
			k = i + m;
		}
	}
	k = n;
	for(int i = s.size() - 1; i >= 0; i--) {
		if(s[i] == '1')	
			k = i;
		if(k > min(n - 1, i + m)) 
			continue;
		r[i] = k;
	}
	dp[0] = 1;
	for(int i = 1; i < s.size(); i++) {
		if(r[i] < n) {
			dp[i] = r[i] + 1;
			if(r[i] - m - 1 >= 0)
				dp[i] += dp[r[i] - m - 1];
		}
		if(l[i] < n) {
			int t = l[i] + 1;
			if(l[i] - m - 1 >= 0) 
				t += dp[l[i] - m - 1];
			if(dp[i] == 0)
				dp[i] = t;
			else
				dp[i] = min(dp[i], t);
		}
		if(dp[i] == 0)
			dp[i] = dp[i - 1] + i + 1;
		else
			dp[i] = min(dp[i - 1] + i + 1, dp[i]);
	}
	cout << dp[n - 1] << endl;
	return 0;
}
/*
killing :
1- if not solve after 20 min, read again twice
2- after submit read the code again
*/
