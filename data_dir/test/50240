#include <iostream>
#include <cmath>
#include <algorithm>

using namespace std;

typedef long long ll;

const int N = 5e2 + 10;

ll dp[N][N];
ll tmp[N][N];
ll a[N];


int main()
{
	ios :: sync_with_stdio(false);

	ll n, m, b, mod;
	cin >> n >> m >> b >> mod;

	for (int i=1; i<=n; i++)
		cin >> a[i];

	for (int i=1; i<=n; i++)
		dp[0][i] = 1;

	for (int i=1; i<=m; i++)
	{
		for (int j=0; j<=b; j++)
		{
			for (int k=0; k<=n; k++)
			{
				tmp[j][k] = 0;
				if (j-a[k] >= 0)
				{
					tmp[j][k] += dp[j-a[k]][k];
					tmp[j][k] %= mod;
				}

				tmp[j][k] += tmp[j][k-1];
				tmp[j][k] %= mod;
			}
		}

		for (int j=0; j<=b; j++)
			for (int k=0; k<=n; k++)
				dp[j][k] = tmp[j][k];
	}

	ll ans = 0;

	for (int i=0; i<=b; i++)
	{
		ans += dp[i][n];
		ans %= mod;
	}

	cout << ans << "\n";
	return 0;
}