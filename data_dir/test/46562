/**
 *    author : meneketehe
 *    created: 21.03.2019
**/

#include <bits/stdc++.h>
using namespace std;

int n, a[1505];
vector<pair<int,int>> data[3000005];
map<int, int> id;

bool cmp(pair<int,int> a, pair<int,int> b) {
	if (a.second != b.second) return a.second <= b.second;
	else return a.first <= b.first;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	
	cin >> n;

	vector<int> pref(n + 1, 0);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		pref[i + 1] = pref[i] + a[i];
	}

	int pos = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = i; j <= n; j++) {
			int x = pref[j] - pref[j - i];
			if (!id.count(x)) {
				id[x] = pos++;
			}
			data[id[x]].push_back(make_pair(j - i + 1, j));
		}
	}

	vector<pair<int,int>> output, tmp;
	for (map<int,int>::iterator it = id.begin(); it != id.end(); it++) {
		pos = it->second;
		sort(data[pos].begin(), data[pos].end(), cmp);

		int last = -1;
		tmp.clear();
		for (int i = 0; i < data[pos].size(); i++) {
			if (data[pos][i].first > last) {
				last = data[pos][i].second;
				tmp.push_back(data[pos][i]);
			}
		}

		if (tmp.size() > output.size()) {
			output = tmp;
		}
	}

	cout << output.size() << '\n';
	for (int i = 0; i < output.size(); i++) {
		cout << output[i].first << ' ' << output[i].second << '\n';
	}

	return 0;
}