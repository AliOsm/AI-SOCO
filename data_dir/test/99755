#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cstring>
#include <string.h>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <stdlib.h>
#include <functional>
#include <locale>
#include <cmath>
#include <math.h>

using namespace std;

#define ll  long long
#define ld long double
#define OO 100000000000000000
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844
#define fast ios_base::sync_with_stdio(0);cin.tie(0);
#define _CRT_SECURE_NO_WARNINGS
//ll arr[4];
//char op[3];
//ll calc(ll number1, ll number2, char operation)
//{
//	return (operation == '*') ? number1*number2 : number1 + number2;
//}
//ll solve()
//{
//	ll result1 = 0,result2=0,result3=0,result4=0,result5=0,result6=0;
//	
//	result1 += calc(arr[0], arr[1], op[0]);
//	result1 += calc(result1, arr[2], op[1]);
//	result1 += calc(result1, arr[3], op[2]);
//
//	result1 += calc(arr[0], arr[1], op[0]);
//	result1 += calc(result1, arr[2], op[1]);
//	result1 += calc(result1, arr[3], op[2]);
//
//	result1 += calc(arr[0], arr[1], op[0]);
//	result1 += calc(result1, arr[2], op[1]);
//	result1 += calc(result1, arr[3], op[2]);
//
//	result1 += calc(arr[0], arr[1], op[0]);
//	result1 += calc(result1, arr[2], op[1]);
//	result1 += calc(result1, arr[3], op[2]);
//
//	result1 += calc(arr[0], arr[1], op[0]);
//	result1 += calc(result1, arr[2], op[1]);
//	result1 += calc(result1, arr[3], op[2]);
//
//	result1 += calc(arr[0], arr[1], op[0]);
//	result1 += calc(result1, arr[2], op[1]);
//	result1 += calc(result1, arr[3], op[2]);
//
//	return min(min(result6,min(result1,result2)),min(result5,min(result3,result4)));
//}
//int main()
//{
//	ll answer = OO;
//	cin >> arr[0] >> arr[1] >> arr[2] >> arr[3];
////	cin >> op[0] >> op[1] >> op[2];
////	sort(arr, arr + 4);
////	do
////	{
////		do
////		{
////			answer = min(solve(), answer);
////		} while (next_permutation(arr, arr + 4));
////	} while (next_permutation(op, op + 3));
////	cout << answer << endl;
////	return 0;
////}
//
//int main()
//{
//	ll n, m, k, result1, result2, x1, x2;
//	cin >> n >> k >> m;
//	cin >> x1;
//	for (int i = 0; i < n - 1; i++)
//	{
//		cin >> x2;
//		if (i % 2 == 1 && x2<x1)
//			x1 = x2;
//	}
//	if (n % 2 == 0)
//	{
//		cout << 0 << endl;
//		return 0;
//	}
//	result1 = x1;
//	result2 = m*(k / ((n + 1) / 2));
//	cout << min(result1, result2);
//	return 0;
//}

int main()
{
	ll r, g, b, ans = 0;
	cin >> r >> g >> b;
	ans = 30 + 3 * ((r + 1) / 2 - 1);
	if (g) ans = max(ans, 31 + 3 * ((g + 1) / 2 - 1));
	if (b) ans = max(ans, 32 + 3 * ((b + 1) / 2 - 1));
	cout << ans << endl;
	return 0;
}