#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
template<typename T>
using vc=vector<T>;
template<typename T, typename X>
using pr=pair<T, X>;

const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

int n, par[123456], ans;
pr<int, int> a[123456];
map<int, vc<int>> s;

inline auto init()
{
	ans = n;
	for(int i=1; i<=n; i++)
		par[i] = i;
}

auto find(int x)
{
	if(par[x] == x)
		return x;
	par[x] = find(par[x]);
	return par[x];
}

auto unite(int x, int y)
{
	auto i = find(x);
	auto j = find(y);
	if(i == j)
		return;
	ans--;
	par[i] = j;
}

int main()
{
	ssync;
	cin >> n;
	init();
	for(int i=1; i<=n; i++)
	{
		cin >> a[i].F;
		a[i].S = i;
	}
	sort(a+1, a+n+1);
	for(int i=1; i<=n; i++)
		unite(i, a[i].S);
	for(int i=1; i<=n; i++)
		s[find(a[i].S)].pb(a[i].S);
	cout << ans << "\n";
	for(auto& x: s)
	{
		cout << x.S.size() << " ";
		for(auto& a: x.S)
			cout << a << " ";
		cout << "\n";
	}
	return 0;
}
