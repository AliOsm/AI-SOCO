#include <bits/stdc++.h>

using namespace std;

const int N = (int)123;

int n, m;
vector < int > gr[N];
vector < pair < int, int > > ans[N];
int mx;
int used[N];
map < pair < int, int >, int > mp;

void dfs(int v) {
	used[v] = 1;
	for (int to : gr[v]) {
		if (!mp.count({v, to})) {
			mp[{v, to}] = mp[{to, v}] = 1;
			ans[v].push_back({v, mx});
			ans[to].push_back({to, mx});
			mx++;
		}
		if (!used[to]) {
			dfs(to);
		} 
	}
}

main() {
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= m; i++) {
		int u, v;
		scanf("%d %d", &u, &v);
		gr[u].push_back(v);
		gr[v].push_back(u);
	}
	mx = n + 1;
	for (int i = 1; i <= n; i++) {
		ans[i].push_back({i, i});
	}
	for (int i = 1; i <= n; i++) {
		if (!used[i]) {
			dfs(i);
		}
	}
	for (int i = 1; i <= n; i++) {
		printf("%d\n", ans[i].size());
		for (pair < int, int > to : ans[i]) {
			printf("%d %d\n", to.first, to.second);
		}
	}
}
