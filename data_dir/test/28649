#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>   
#include <cstdlib>
#include <iomanip>
#include <set>
#include <memory.h>
#include <cstring>
#include <map>
#include <iterator>

using namespace std;

#define pb push_back
#define mp make_pair                  
#define F first
#define S second
#define scf scanf
#define prf printf
#define For(i, n) for (int i = 0; i < n; i++)

typedef long double ld;
typedef long long ll;

vector < int > g[111];
int cl[1111];
int st[111];

int n;
char s[111][111];

void dfs(int ver) {
    cl[ver] = 1;
    for (size_t i = 0; i < g[ver].size(); i++) {
        int to = g[ver][i];
        if (to == ver) continue;
        if (cl[to] == 1) {
            puts("Impossible");
            exit(0);
        }
        if (cl[to] == 2) continue;
        dfs(to);
    }
    cl[ver] = 2;
}

void dfsAns(int ver) {
    prf("%c", (char)(ver + (int)('a')));
    cl[ver] = 1;
    for (size_t i = 0; i < g[ver].size(); i++) {
        int to = g[ver][i];
        if (cl[to] == 1) continue;
        dfsAns(to);
    }
}
         

int main() {
//  freopen("input.txt","r",stdin);                                 
    scf("%d\n", &n);
    for (int i = 1; i <= n; i++) gets(s[i] + 1);
    memset(cl, 0, sizeof(cl));
    memset(st, 0, sizeof(st));
    vector < char > ans;
    ans.pb(s[1][1]);
    for (int i = 2; i <= n; i++) {
        if (s[i - 1][1] != s[i][1]) {
            int v1 = (int)(s[i - 1][1]) - (int)('a');
            int v2 = (int)(s[i][1]) - (int)('a');
            g[v1].pb(v2);
            st[v2]++;
            continue;
        }
        bool have = false;
        int x = strlen(s[i - 1] + 1);
        int y = strlen(s[i] + 1);                             
        int len = min(x, y);
        for (int j = 1; j <= len; j++) {
            if (s[i - 1][j] == s[i][j]) continue;
            int v1 = (int)(s[i - 1][j]) - (int)('a');
            int v2 = (int)(s[i][j]) - (int)('a');
            g[v1].pb(v2);
            have = true;
            st[v2]++;
            break;
        }
        if (!have && x > y) {
            puts("Impossible");
            return 0;
        }
    }
    ans.clear();
    for (int q = 0; q < 26; q++) {
        bool have = false;
        for (int i = 0; i < 26; i++)
            if (st[i] == 0) {
                have = true;
                ans.pb(char(i + (int)('a')));
                for (size_t j = 0; j < g[i].size(); j++) {
                    int to = g[i][j];
                    st[to]--;
                }
                st[i] = -1;
                break;
            }
        if (!have) {
            puts("Impossible");
            return 0;
        }
    }
    for (int i = 0; i < 26; i++)
        prf("%c", ans[i]);puts("");                              
    return 0;
}