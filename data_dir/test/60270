/*input
3

*/
 
/*
                                                    ______________
                                                          |       )
                                                          |   )   /
                                                          |______/
                                                    |     |      \
                                                    |     |   )   \
                                                    |_____|_______)
 
*/
 
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <ctime>
#include <cassert>
#include <complex>
#include <string>
#include <cstring>
#include <chrono>
#include <random>
#include <queue>
#include <bitset>
#include <iomanip>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;
 
#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
const int inf = 1034567891;
const ll LL_INF = 1234567890123456789ll;
#define PI 3.14159265
#define endl '\n'
#define F first
#define S second
#define debug(x) cout << #x << " = " << x << endl;
#define TRACE
 
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cout << name << " : " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif
 
#define out(container) for (auto it : container) cout << it << " "; cout << endl;
 
 
template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(int x, int y){ x += y; if(x >= mod) x -= mod; return x;}
inline int sub(int x, int y){ x -= y; if(x < 0) x += mod; return x;}
inline int mul(int x, int y){ return (x * 1ll * y) % mod;}
inline int powr(int a, ll b){
  int x = 1 % mod;
  while(b){
    if(b & 1) x = mul(x, a);
    a = mul(a, a);
    b >>= 1;
  }
  return x;
}
inline int inv(int a){ return powr(a, mod - 2);}

int n, m;
vector <int> vec;
bool vis[100];

int give(vector <int> vec1, vector <int> vec2) {
  int ans = 0;
  for (int i = 0; i < n; i++) {
    for (auto it : vec2) {
      if (vec1[i] > it) ans++;
    }
  }
  return ans;
}

void fun(int ind) {
  if (ind == m) {
    vector <vector <int> > temp;
    int idx = 0;
    for (int i = 0; i < n; i++) {
      vector <int> vv;
      for (int j = 0; j < n; j++) {
        vv.pb(vec[idx++]);
      }
      temp.pb(vv);
    }
    int mx = m;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j) continue;
        mx = min(mx, give(temp[i], temp[j]));
      }
    }
    if (mx == 1) {
      idx = 0;
      for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
          cout << vec[idx++] << " ";
        }
        cout << endl;
      }
      cout << endl;
      // exit(0);
    }
    return;
  }
  for (int i = 1; i <= m; i++) {
    if (!vis[i]) {
      vis[i] = true;
      vec.pb(i);
      fun(ind + 1);
      vis[i] = false;
      vec.pop_back();
    }
  }
}

int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  cin >> n;
  m = n * n;
  int cur = 1;
  int arr[n][n];
  for (int i = 0; i < n; i++) {
    if (i & 1) {
      for (int j = n - 1; j >= 0; j--) {
        arr[j][i] = cur++;
      }
    } else {
      for (int j = 0; j < n; j++) {
        arr[j][i] = cur++;
      }
    }
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      cout << arr[i][j] << " ";
    }
    cout << endl;
  }

  return 0;
} 
