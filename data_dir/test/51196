#include <bits/stdc++.h>
using namespace std;
typedef long long i64;
#define SZ(v) int((v).size())
#define ALL(vec) (vec).begin(),(vec).end()
template<typename T> inline bool uax(T &x, T y) {return (y > x) ? x = y, true : false;}
template<typename T> inline bool uin(T &x, T y) {return (y < x) ? x = y, true : false;}
 
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \
  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string>) {}
template<typename T1,typename T2> ostream& operator<<(ostream& os, pair<T1,T2> buf) {
  return os << "(" << buf.first << ": " << buf.second << ")"; }
#define DefOut(Con) template<typename T>ostream&operator<<(ostream&os,Con<T>&A){ bool f = false; os << "{"; \
  for (const auto e: A) { if (f) os << ", "; os << e; f = true; } return os << "}"; }
#define DefOut2(Con) template<typename K,typename V>ostream&operator<<(ostream&os,Con<K,V>&A) \
{ bool f = false; os << "{"; for (auto &e: A) { if (f) os << ", "; os << e; f = true; } return os << "}"; }
template<typename T>ostream &operator << (ostream &os,vector<vector<T>>& A) {
  for (auto &B: A) os << '\n' << B; return os; }
DefOut(vector) DefOut(set) DefOut(multiset) DefOut2(map) 
template<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {
  cerr << *it << " =: " << a << endl; err(++it, args...); }
template<typename T> void kek(T ans) {cout << ans << endl; exit(0);}
int const MOD = 1000000007;
long long const INF = 1e18;
#define PI 3.14159265358979323846
/***********************************************************************/
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
inline int randint(int a, int b) {
  return uniform_int_distribution<int>(a, b)(rng);
}
int32_t main() {

  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int n, x;
  cin >> n >> x;
  
  if (x >= (1 << n)) {
    x = 0;
  }
  assert (x < (1 << n));

  if (x == 0) ++n;
  int m = (1 << n) / 2 - 1;
  cout << m << '\n';
  vector<int> a(m);
  for (int b = 0; b < n; ++b) {
    for (int i = (1 << b) - 1; i < m; i += 1 << b + 1) {
      a[i] |= 1 << b;
    }
  }
  if (!(x >> (n - 1)) & 1) {
    for (int b = 0; b < n; ++b) {
      if (x >> b & 1) {
        for (int i = 0; i < m; ++i) {
          assert (!(a[i] >> n - 1));
          if (a[i] >> b & 1) {
            a[i] |= 1 << n - 1;
            a[i] ^= 1 << b;
          }
        }
        break;
      }
    }
  }
  //~ for (int )
  /*
  for (int i = 0; i < m; ++i) {
    for (int j = i; j < m; ++j) {
      int xr = 0;
      for (int k = i; k <= j; ++k) {
        xr ^= a[k];
      }
      if (xr == x) error(i, j);
      assert (xr != 0);
      assert (xr != x);
    }
  }
  */
  for (int z: a) cout << z << ' ';
  cout << endl;
  return 0;
}
