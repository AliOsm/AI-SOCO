#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1000000007;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

const int MAX = 200001;
vi adj[MAX];
vll height[MAX];
int a[MAX], n;
ll tot[MAX];

ll filltot(int v, int par)
{
	tot[v] += a[v];
	for(int x: adj[v])
	{
		if(x!=par)
			tot[v] += filltot(x, v);
	}
	return tot[v];
}

ll fillheight(int v, int par, int h)
{
	ll ans = tot[v];
	for(int x: adj[v])
	{
		if(x!=par)
			ans = max(ans, fillheight(x, v, h+1));
	}
	height[h].pb(ans);
	return ans;
}

int main()
{
	ssync;
	int x, y;
	cin>>n;
	for(int i=1; i<=n; i++)
		cin >> a[i];
	for(int i=1; i<n; i++)
	{
		cin >> x >> y;
		adj[x].pb(y);
		adj[y].pb(x);
	}
	filltot(1, 0);
	fillheight(1, 0, 1);
	ll ans = LLONG_MIN;
	for(int i=1; height[i].size(); i++)
	{
		if(height[i].size() == 1)
			continue;
		sort(height[i].begin(), height[i].end());
		ans = max(ans, height[i][height[i].size()-2]+height[i].back());
	}
	if(ans > LLONG_MIN)
		cout << ans << "\n";
	else
		cout << "Impossible\n";
	return 0;
}
