#include <bits/stdc++.h>
#define SZ(x) (int)x.size()
const int SIZE=1e3+5;
using namespace std;

int n,m;
int arr[SIZE*1000];
int dp[SIZE][SIZE][2];

int DP(int i,int sum,int type)
{
    if(sum==0 && type)
        return 1;
    
    if(i==min(SIZE,n))
        return 0;
        
    if(dp[i][sum][type]!=-1)
        return dp[i][sum][type];
    
    int c2=DP(i+1,(sum+arr[i])%m,1);
    int c1=DP(i+1,sum,type);

    return dp[i][sum][type]=max(c1,c2);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL),cout.tie(NULL);
    
    cin>>n>>m;
    bool res=false;

    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
        
        if(arr[i]%m==0)
            res=true;

        if(i<SIZE)
            arr[i]%=m;
    }
    
    memset(dp,-1,sizeof dp);
    cout<<( (res || DP(0,0,0))? "YES":"NO");
}