#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <unordered_set>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define endl '\n'
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const ll  Inf = 1e18;
ll LINF = (ll)2e18;
using namespace std;
ll mod = 1e9 + 7;
ll mod3 = 998244353;
ll mod2 = 1e9 + 123;
#define M_PI       3.14159265358979323846   // pi
vector<string> a(5200, "");
int n;

bool check(int x) {
	int nn = n / x;
	int xx = 0, yy = 0;
	forn(i, 0, nn) {
		yy = 0;
		forn(j, 0, nn) {
			forn(ii, xx, xx + x) {
				forn(jj, yy, yy + x) {
					if (a[ii][jj] != a[xx][yy])	return false;
				}
			}
			yy += x;
		}
		xx += x;
	}
	return true;
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("javacert.in", "r", stdin);
	//freopen("javacert.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0); cout.setf(ios::fixed); cout.precision(20);
	cin >> n;
	map<char, string> tmp;
	tmp['0'] = "0000";
	tmp['1'] = "0001";
	tmp['2'] = "0010";
	tmp['3'] = "0011";
	tmp['4'] = "0100";
	tmp['5'] = "0101";
	tmp['6'] = "0110";
	tmp['7'] = "0111";
	tmp['8'] = "1000";
	tmp['9'] = "1001";
	tmp['A'] = "1010";
	tmp['B'] = "1011";
	tmp['C'] = "1100";
	tmp['D'] = "1101";
	tmp['E'] = "1110";
	tmp['F'] = "1111";
	int cntF = 0, cnt0 = 0;
	forn(i, 0, n) {
		string x;
		cin >> x;
		forn(j, 0, x.length()) {
			a[i] += tmp[x[j]];
			if (x[j] == 'F') cntF++;
			if (x[j] == '0') cnt0++;
		}
	}
	if (cntF == n * n / 4 || cnt0 == n * n / 4) {
		cout << n;
		return 0;
	}
	int mx = 1;
	for (int i = 2; i*i <= n; i++) {
		if (n%i == 0) {
			int q = n / i;
			if (check(i)) mx = max(mx, i);
			if (check(q)) mx = max(mx, q);
		}
	}
	cout << mx;
	return 0;
}