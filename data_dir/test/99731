/*
 * test.cpp
 *
 *
 *      Author: Fireworks
 */

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>

using namespace std;

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<ii,ii> iiii;
long long mod = 1000000007LL;
long long base = 37;
long long large = 1000000000000000000LL;


void gcdE(long long a,long long b,long long& d,long long& x,long long& y){
	if(!b){
		d=a;
		x=1;
		y=0;
	}else{
		gcdE(b,a%b,d,y,x);
		y-=x*(a/b);
	}
}

//to calculate (a/b) mod n, change it to ((a mod n)*inv(b,n)) mod n
long long inv(long long a,long long n){
	long long d,x,y;
	gcdE(a,n,d,x,y);
	return d==1?(x+n)%n:-1;
}

long long mul(long long x,long long y){
	return (x*y)%mod;
}
int n;
vector<vector<ii> > adj;
ll f(int u,int pa){
	if(adj[u].size()==1&&adj[u][0].first==pa){
		return ll(0,0);
	}
	long long a=0,b=0;
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j].first;
		int d = adj[u][j].second;
		if(v!=pa){
			ll re = f(v,u);
			a+=re.first;
			b+=re.second;
			a%=mod;
			b%=mod;
		}
		b+=1LL*d;
		b%=mod;
	}
	long long div = inv(adj[u].size(),mod);
	a=mul(a,div);
	b=mul(b,div);
	a=1LL+mod-a;
	a%=mod;
	b=mul(b,inv(a,mod));
	return ll(mul(div,inv(a,mod)),b);
}
int main(){
	cin>>n;
	adj.assign(n,vector<ii>(0,ii(0,0)));
	for(int i=0;i<n-1;i++){
		int x,y,z;
		cin>>x>>y>>z;
		adj[x].push_back(ii(y,z));
		adj[y].push_back(ii(x,z));
	}

	cout<<f(0,-1).second<<endl;


	/*int totalcase;
	int testcase=0;
	cin>>totalcase;
	ofstream out;
	out.open("result.txt");

	while(totalcase--){
		testcase++;
		out<<"Case #"<<testcase<<": ";
		cout<<testcase<<": "<<endl;

		//GOGOGO


		//END
	}
	out.close();*/

	return 0;
}
