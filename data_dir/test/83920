#include<bits/stdc++.h>
using namespace std;
const int MAX = 1e5 + 10;
#define int long long
vector<int> g[MAX] , revg[MAX];
bool vis1[MAX] , vis2[MAX]; int a[MAX] , c[MAX] , ans[MAX] , ted[MAX];
vector<int> topol;

void dfs(int v){
    vis1[v]=true;
    for(auto u:g[v])if(!vis1[u])dfs(u);
    topol.push_back(v);
}

void sfd(int v,int col){
    vis2[v]=true ;c[v]=col;
    for(auto u:revg[v]){
        if(!vis2[u])sfd(u , col);
    }
}

main(){
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n,m; cin>>n;
    for(int i=1;i<=n;i++)cin>>a[i];
    cin>>m;
    for(int i=0;i<m;i++){
        int u,v; cin>>u>>v;
        g[u].push_back(v); revg[v].push_back(u);
    }
    for(int i=1;i<=n;i++){
        if(!vis1[i])dfs(i);
    }
    reverse(topol.begin() , topol.end());
    int col=1;
    for(auto v:topol){
        if(!vis2[v])sfd(v , col++);
    }
    for(int i=1;i<=n;i++)ans[i]=1e9+10;
    for(int i=1;i<=n;i++){
        if(a[i] < ans[c[i]]){ans[c[i]]=a[i]; ted[c[i]]=1;}
        else if(a[i] == ans[c[i]]){ted[c[i]]++;}
    }
    long long ANS=0 , cnt=1;
    for(int i=1;i<=n;i++){
        if(ans[i]!=1e9+10)
            ANS+=ans[i];
        if(ted[i])cnt*=ted[i];
        cnt%=((int)(1e9+7));
    }
    cout<<ANS<<" "<<cnt<<'\n';
}
