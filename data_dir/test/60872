#include <bits/stdc++.h>

using namespace std;

const int N=200005;

int arr[N],c[N],las[N];
vector<int> v[3*N];
int n,m;

int can(int x)
{
	memset(c,0,sizeof c);
	memset(las,-1,sizeof las);
	/*int cur=x,ans=0;
	int tm=0;
	for(int i=x;i>=1;i--)
	{
		int sr=0;
		for(int j:v[i])
		{
			while(cur>0&&c[j]<arr[j])
			{
				sr=1;
				c[j]++; cur--;
				tm++;
			}	
		}
		if(!sr) cur--;
	}*/
	for(int i=x;i>=1;i--)
	{
		for(int j:v[i]) if(las[j]==-1) las[j]=i;
	}
	int cur=0;
	for(int i=1;i<=x;i++)
	{
		cur++;
		for(int j:v[i])
		{
			if(las[j]==i)
			{
				while(cur>0&&c[j]<arr[j])
				{
					cur--; c[j]++;
				}
			}
		}
	}
	for(int i=0;i<n;i++)
	{
		cur-=2*(arr[i]-c[i]);
	}
	return cur>=0;
}

int main()
{
	cin >> n >> m;
	for(int i=0;i<n;i++)
	{
		cin >> arr[i];
	}
	for(int i=0;i<m;i++)
	{
		int x,y;
		cin >> x >> y;
		y--;
		v[x].push_back(y);
	}
	int st=1,en=3*N,ans=3*N;
	while(st<=en)
	{
		int mid=(st+en)/2;
		if(can(mid)) {en=mid-1; ans=mid;}
		else st=mid+1;
	}
	while(can(ans-1)) ans--;
	cout << ans << endl;
}