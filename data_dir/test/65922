#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define _o          printf("1\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod         1000000007
#define read()      freopen("in.txt","r",stdin)
#define write()     freopen("out.txt","w",stdout)
#define xx          1000000

vector<long long>p;
long long s;

void seive(){
    bool vst[1111];
    p.push_back(2);
    clr(vst);
    for(long long i=3;i<=1000;i+=2) if(vst[i]==false){
        p.push_back(i);
        for(long long j=i*i;j<=1000;j+=i+i) vst[j]=true;
    }
    s=p.size();
    //fr(i,s) cout<<p[i]<<endl;
    return;
}

long long Power(long long BaSe,long long PoWeR,long long MoD){
    if(BaSe==0) assert(0);
    BaSe%=MoD;
    long long ret=1;
    while(PoWeR>0){
        if(PoWeR&1) ret=(ret*BaSe)%MoD;
        PoWeR>>=1;
        BaSe=(BaSe*BaSe)%MoD;
    }
    if(ret==0) assert(0);
    return ret;
}

long long pr[xx+110];
long long nCr(long long n,long long r){
    long long ret=(pr[n]*Power((pr[r]*pr[n-r])%mod,mod-2,mod))%mod;
    //if(ret==0) assert(0);
    return ret;
}
long long p2[xx+110];

main(){

    pr[0]=1;
    pr[1]=1;
    p2[1]=1;

    fi(i,2,xx+50) {
        p2[i]=(p2[i-1]*2)%mod;
        pr[i]=(pr[i-1]*i)%mod;
        if(p2[i]==0||pr[i]==0) assert(0);
    }
    //cout<<nCr(4,1)<<endl;
    seive();
    long long q;
    scanf("%I64d",&q);
    while(q--){
        long long x,y;
        scanf("%I64d %I64d",&x,&y);
        long long cnt=0;
        long long ans=1;
        fr(i,s){
           cnt=0;
           while(x%p[i]==0) cnt++,x/=p[i];
           if(cnt) ans=(ans*nCr(y+cnt-1,y-1))%mod;
        }
        if(x>1) ans=(ans*y)%mod;

        ans%=mod;
        ans=(ans*p2[y])%mod;
        printf("%I64d\n",ans);
    }


    return 0;
}
