#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n, k;
const ll MOD = 1e9 + 7;
ll gcd(ll a, ll b)
{
    while (a * b)
    {
        if (a > b) a%=b;
        else
            b%=a;
    }
    return a + b;
}
ll p(ll w)
{
    ll rez = 1;
    for(ll i=0; i<w; i++)
    {
        rez*=2;
        rez%=MOD;
    }
    return rez;
}
ll f(ll n , ll k)
{
    if ( (n == k) || (k == 0)) return 1;
    if ( (k == 1) || (k + 1 == n)) return n;
    /*ll rez = 1;
    for(ll i = n; i>n - k; i--)
    {
        rez*=i;
    }
    for(ll i = 1; i<=k; i++)
        rez/=i;
    return rez;
    */
    vector <ll> num, den;
    ll i, j;
    for(i = n; i>n - k; i--)
    {
        num.push_back(i);
    }
    for(i = 2; i<=k; i++)
    {
        den.push_back(i);
    }
    for(i=0; i<den.size(); i++)
    {
        ll cur = den[i];
        for(j=0; j<num.size(); j++)
        {
            ll t = gcd(num[j], cur);
            num[j]/=t;
            cur/=t;
            if (cur == 1) break;
        }
    }
    ll rez = 1;
    for(i=0; i<num.size(); i++)
    {
        rez*=num[i];
        rez%=MOD;
    }
    return rez;
}
set <string> all;
vector <ll> up;
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
   /* cout<<f(9, 3) * f(6, 3);
    return 0;
    */
  /*  cout<<p(3);
    return 0;*/
    ll i,j;
   /* cout<<f(5, 2);
    return 0;*/
    /*string now = "aaabbbccc";
    all.insert(now);
    for(i=0; i<100000; i++)
    {
        next_permutation(now.begin(), now.end());
        all.insert(now);
    }
    cout<<all.size();
    return 0;
    */
    cin>>n>>k;
    ll total = n - k;
/*    for(i = 2; i<=total; i++)
        up.push_back(i);
*/
    vector <ll> light;
    for(i=0; i<k; i++)
    {
        ll q;
        cin>>q;
        light.push_back(q);
    }
    sort(light.begin(), light.end());
    ll answer = 1;
    if (light[0] > 1)
    {
            answer = answer * f(total, light[0] - 1);
            answer%=MOD;
            total = total - light[0] + 1;
    }
  //  cout<<"ans = "<<answer<<endl;
    if (light[k - 1] < n)
    {
        answer = answer * f(total, n - light[k - 1]);
        answer%=MOD;
        total-=(n - light[k - 1]);
    }
  //  cout<<answer<<endl;
for(i = 0; i<k - 1; i++)
{
    ll cur = light[i];
    ll Next = light[i + 1];
    ll len = Next - cur - 1;
   /* cout<<"total = "<<total<<endl;
    cout<<"len = "<<len<<endl;*/
        ll r = f(total, len) * p(len -1);
        r%=MOD;
        answer*=r;
        answer%=MOD;
        total-=len;
}
    cout<<answer;




    return 0;
}