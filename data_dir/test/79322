// In the Name of Allah
#include <bits/stdc++.h>

using namespace std;

typedef long double LD;
typedef long long int LL;
typedef pair <int,int> pii;

#define L first
#define R second

const int maxn = 2e5 + 100;
int n, a[maxn];
vector <int> seg[4 * maxn];

void build(int L=0,int R=n,int id=1) {
    if (L == R - 1) {
        seg[id].push_back(a[L]);
        return;
    }
    int mid = (L + R) >> 1;
    build(L, mid, id * 2 + 0);
    build(mid, R, id * 2 + 1);
    for (int i = 0; i < seg[id * 2 + 0].size(); i++)
        seg[id].push_back(seg[id * 2 + 0][i]);
    for (int i = 0; i < seg[id * 2 + 1].size(); i++)
        seg[id].push_back(seg[id * 2 + 1][i]);
    sort (seg[id].begin(), seg[id].end());
}

int get(int l,int r,int val,int L=0,int R=n,int id=1) {
    if (l == L && r == R) {
        int idx = lower_bound(seg[id].begin(), seg[id].end(), val) - seg[id].begin();
        return seg[id].size() - idx;
    }
    int mid = (L + R) >> 1, ret = 0;
    if (l < mid)
        ret += get(l, min(mid, r), val, L, mid, id * 2 + 0);
    if (r > mid)
        ret += get(max(l, mid), r, val, mid, R, id * 2 + 1);
    return ret;
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i], a[i]--;
    build();

    LL ans = 0;
    for (int i = 0; i < n; i++)
        ans += get(0, min(a[i] + 1, n), i);

    for (int i = 0; i < n; i++)
        if (a[i] >= i)
            ans--;
    cout << ans / 2 << endl;

    return 0;
}

