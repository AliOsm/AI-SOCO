#include<bits/stdc++.h>
using namespace std;
#define int long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
int const M=2e5+10;
vector<int>adj[M];
int zt[M],mark[M];
vector<pair<pii,int> >ans;
vector<int>good[M];
int p[M],dep[M];
void dfs(int v,int l)
{
	mark[v]=1;
	int cnt=0;
	dep[v]=dep[l]+1;
	for(int i=0;i<adj[v].size();i++)
	{
		int u=adj[v][i];
		if(mark[u]){
			if(dep[v]<dep[u])
				good[v].pb(u),cnt++;
			continue;
		}
		dfs(u,v);
		cnt+=zt[u]+1;
		if(zt[u]%2==0)good[v].pb(u);
	}
	zt[v]=cnt;
	//cerr<<v<<" "<<zt[v]<<endl;
	if(zt[v]%2==1)good[v].pb(l);
	if(good[v].size()%2==1 || (zt[v]%2==1 && l==0))
	{
		cout<<"No solution";
		exit(0);
	}
	for(int i=0;i<good[v].size();i+=2)
	{
		//cerr<<v<<" "<<good[v][i]<<" "<<good[v][i+1]<<endl;
		ans.pb(mp(mp(good[v][i],v),good[v][i+1]));
	}
}
main()
{
	int n,m,a,b;
	cin>>n>>m;
	for(int i=1;i<=m;i++)cin>>a>>b,adj[a].pb(b),adj[b].pb(a);
	for(int i=1;i<=n;i++)
	{
		if(!mark[i])dfs(i,0);
	}
	for(int i=0;i<ans.size();i++)cout<<ans[i].F.F<<" "<<ans[i].F.S<<" "<<ans[i].S<<"\n";
}
