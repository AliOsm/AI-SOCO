#include "bits/stdc++.h"
#include "ext/pb_ds/tree_policy.hpp"
#include "ext/pb_ds/assoc_container.hpp"
#define PB push_back
#define PF push_front
#define LB lower_bound
#define UB upper_bound
#define fr(x) freopen(x,"r",stdin)
#define fw(x) freopen(x,"w",stdout)
#define iout(x) printf("%d\n",x)
#define lout(x) printf("%lld\n",x)
#define REP(x,l,u) for(ll x = l;x<u;x++)
#define RREP(x,l,u) for(ll x = l;x>=u;x--)
#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())
#define mst(x,a) memset(x,a,sizeof(x))
#define all(a) a.begin(),a.end()
#define PII pair<int,int>
#define PLL pair<ll,ll>
#define MP make_pair
#define sqr(x) ((x)*(x))
#define lowbit(x) (x&(-x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define se second
#define fi first
#define dbg(x) cout<<#x<<" = "<<(x)<<endl;
#define sz(x) ((int)x.size())
typedef int ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ld;
using namespace std;
const int block_size = 320;
typedef complex<ll> point;
const ll mod = 1e9+7;
const ld eps = 1e-9;
const int inf = mod;
const db PI = atan(1)*4;
template<typename T>
inline int sign(const T&a){if(a<0)return -1;if(a>0)return 1;return 0;}


template<typename T> inline void in(T &x){
    x = 0; T f = 1; char ch = getchar();
    while (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}
    while (isdigit(ch))  {x = x * 10 + ch - '0'; ch = getchar();}
    x *= f;
}

string ans,s;
bool test(int l,int r){
    string temp = "";
    REP(i,l,r+1)temp+=s[i];
    for(int i = 0;i<sz(temp);i+=2){
        if(temp[i]!='o')return false;
    }
    for(int i = 1;i<sz(temp);i+=2){
        if(temp[i]!='g')return false;
    }
    if(sz(temp)%2!=1)return false;
    return true;
}
string ts(char x){
    string temp ="";
    temp+=x;
    return temp;
}
 
pair<string,int> calc(int st){
    if(st>=sz(s)){
        cout<<ans,exit(0);
    }
    string temp = "";
    RREP(i,sz(s)-1,st+2){
        if(test(st,i)){
            REP(j,st,i+1)temp+=s[j];
            return {"***",i+1};
        }
    }
    return {ts(s[st]),st+1};
}
int main(){
    cin>>s>>s;
    int cur = 0;
    while(1){
        auto c = calc(cur);
        ans+=c.fi;
        cur = c.se;
    }
}