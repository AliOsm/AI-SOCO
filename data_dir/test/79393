//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
ll dp[5015][5012];
ll sum[5005];
int  a[5005];
int n,m,k; 
ll compute(int s,int p)
{
	if(s>n-m&&p>0)
		return -1*inf;

    if(p==0)
    	return 0;
    if(dp[s][p]!=-1)
    	return dp[s][p];

    if(s>0){
    	dp[s][p]=max(compute(s+1,p),compute(s+m,p-1)+sum[s+m-1]-sum[s-1]);
    return dp[s][p];
    }
    
    else if(s==0)
    {
    	dp[s][p]=max(compute(s+1,p),compute(s+m,p-1)+sum[s+m-1]);
    return dp[s][p];
    }

}
int main(){
	std::ios::sync_with_stdio(false);
    
    cin>>n>>m>>k;
    int i,j;
    for(i=0;i<n+2;i++){
    	for(j=0;j<k+2;j++){
    		dp[i][j]=-1;
    	}
    }
    for(i=0;i<n;i++)
    {
    	cin>>a[i];
    	sum[0]=a[0];
    	if(i>0)
    	{
    		sum[i]=sum[i-1]+a[i];
    	}
    }
    cout<<compute(0,k)<<endl;
} 
  