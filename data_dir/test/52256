//#include "stdc++.h"
#include<bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//typedef tuple<int, int, int> t3;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0) return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p; }
#define flush fflush(stdout)
const ll MOD =998244353;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
int main()
{
    int n,m,p;
    cin>>n>>m>>p;
    int a[n][m];int cnt[p+1];ll mx=1000000000000000;
    memset(cnt,0,sizeof(cnt));
    vector<pair<int,int> > xy[p+1];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        { cin>>a[i][j];
            cnt[a[i][j]]++;
            xy[a[i][j]].pb(m1(i,j));
        }
    }
    ll ans[n][m];
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            ans[i][j]=mx;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a[i][j]==1)
                ans[i][j]=i+j;
        }
    }
    int cr,pr,x1,y1,x2,y2;
    for(int i=2;i<=p;i++)
    {
        cr=i;pr=i-1;
        if(cnt[cr]*cnt[pr]>=(n*m))
        {
            ll d[n][m];queue<pair<int,int> >q;pair<int,int>p1;
            for(int j=0;j<n;j++)
                for(int k=0;k<m;k++)
                    d[j][k]=mx;
            for(int j=0;j<xy[pr].size();j++)
            {
                d[xy[pr][j].first][xy[pr][j].second]=ans[xy[pr][j].first][xy[pr][j].second];
                q.push(m1(xy[pr][j].first,xy[pr][j].second));
            }
            while(!q.empty())
            {
                p1=q.front();
                q.pop();
                x1=p1.first;
                y1=p1.second;
                if(x1>=1&&(d[x1-1][y1]>(1+d[x1][y1])))
                {
                    d[x1-1][y1]=1+d[x1][y1];
                    q.push(m1(x1-1,y1));
                }
                if(y1>=1&&(d[x1][y1-1]>=(1+d[x1][y1])))
                   {
                       d[x1][y1-1]=1+d[x1][y1];
                       q.push(m1(x1,y1-1));
                   }
                   if(x1<n-1&&(d[x1+1][y1]>(1+d[x1][y1])))
                   {
                       d[x1+1][y1]=1+d[x1][y1];
                       q.push(m1(x1+1,y1));
                   }
                   if(y1<m-1&&(d[x1][y1+1]>(1+d[x1][y1])))
                   {
                       d[x1][y1+1]=1+d[x1][y1];
                       q.push(m1(x1,y1+1));
                   }
            }
                   for(int j=0;j<xy[cr].size();j++)
                   {
                       x1=xy[cr][j].first;y1=xy[cr][j].second;
                       ans[x1][y1]=d[x1][y1];
                   }
            
            
        }
        else
        {
            for(int j=0;j<xy[cr].size();j++)
            {
                x1=xy[cr][j].first;y1=xy[cr][j].second;
                for(int k=0;k<xy[pr].size();k++)
                {
                    x2=xy[pr][k].first;y2=xy[pr][k].second;
                    ans[x1][y1]=min(ans[x1][y1],ans[x2][y2]+abs(x1-x2)+abs(y1-y2));
                }
            }
        }
    }
    x1=xy[p][0].first;y1=xy[p][0].second;
    cout<<ans[x1][y1]<<endl;
    return 0;
}
