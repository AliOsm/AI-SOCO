#include <bits/stdc++.h>

#define int long long

#define pb push_back
#define pp pop_back()
#define sz(a) (int)(a.size())
#define F first
#define S second
#define mp make_pair
#define ll long long
#define ull unsigned long long

const int N = (int)1e6 + 123;
const ll INF = (ll)1e17 + 123;
const int inf = (int)1e9 + 123;
const double eps = 1e-6;

using namespace std;

pair <int, pair <int, int> > a[100001];

void boost() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);	
}

ll sz = 1, t[4 * N], L[4 * N], R[4 * N], n, q;

void update (ll id, ll x, int v = 1, ll tl = 0, ll tr = INF) {
	if (tl > tr)
		return;
	if (tl == tr) {
		t[v] = x;
		//cout << t[v] << " " << v << " " << x << endl;
		return;
	}
	ll mid = (tl + tr) / 2;
	if (id <= mid) {
		if (!L[v])
			L[v] = ++ sz;
		update (id, x, L[v], tl, mid);
	}
	else {
		if (!R[v])
			R[v] = ++ sz;
		update (id, x, R[v], mid + 1, tr);
	}
	t[v] = max (t[L[v]] , t[R[v]]);
}

ll get (ll l, ll r, int v = 1, ll tl = 0, ll tr = INF) {
	if (l > r || tl > tr || tr < l || tl > r || !t[v])
		return 0;
	ll mid = (tl + tr) / 2;
	if (l <= tl && tr <= r)
		return t[v];
	return max (get (l, r, L[v], tl, mid), get (l, r, R[v], mid + 1, tr));	
}

 main() {
	boost();
	cin >> n;
	for (int i = 1;i <= n;i ++) {
		cin >> a[i].second.first >> a[i].first >> a[i].second.second;
	}
	sort (a + 1, a + n + 1);
	int ans = 0;
	for (int i = n;i >= 1;i --) {
		int cur = a[i].second.second;
		if (a[i].first > 1) {
			cur += get (1, a[i].first - 1);
		}
		update (a[i].second.first, cur);
		ans = max (ans, cur);
	//	cout << cur << ' ' ;
	}
	cout << ans;
	return 0;
}