#include "bits/stdc++.h"
using namespace std;
#define fi first
#define se second
#define ll long long
#define dbg(v) cerr<<#v<<" = "<<v<<'\n'
#define vi vector<int>
#define vl vector <ll>
#define pii pair<int,int>
#define vii vector < pii >
#define mp make_pair
#define db long double
#define pb push_back
#define all(s) s.begin(),s.end()
template < class P , class Q > ostream& operator<<(ostream& stream, pair < P , Q > v){ stream << "(" << v.fi << ',' << v.se << ")"; return stream;}
template < class T > ostream& operator<<(ostream& stream, const vector<T> v){ stream << "[ "; for (int i=0; i<(int)v.size(); i++) stream << v[i] << " "; stream << "]"; return stream;}
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
const int N = 1e6 + 5;
pii s[N];
ll t[N];
const int C = 5e5;
ll que(int i) {
	ll ans = 0;
	for (;i;i -= i&(-i))
		ans += t[i];
	return ans;
}
void upd(int i,ll v) {
	for (;i <= C;i += i&(-i))
		t[i] += v;
}
int was[N];
void up(int i) {
	if (was[i])
		return;
	was[i] = 1;
	upd(i,1);
}
vi Q[N];
ll c2(ll x) {
	return x * (x + 1) / 2;
}
int main(void) {
    int n;
    ios_base :: sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    vi ss;
    for (int i = 1;i <= n;++i)
    	cin>>s[i].fi>>s[i].se,swap(s[i].fi,s[i].se),ss.pb(s[i].fi),ss.pb(s[i].se);
    sort(all(ss));
    ss.resize(unique(all(ss)) - ss.begin());
    for (int i = 1;i <= n;++i) {
    	s[i].fi = lower_bound(all(ss),s[i].fi) - ss.begin() + 1;
    	s[i].se = lower_bound(all(ss),s[i].se) - ss.begin() + 1;
    	assert(1 <= s[i].fi && s[i].fi <= C && 1 <= s[i].se && s[i].se <= C);
    	Q[s[i].fi].pb(s[i].se);
    }
    ll ans = 0;
    was[0] = was[C + 1] = 1;
    for (int i = C;i >= 1;--i) {
    	if (Q[i].empty())
    		continue;
    	Q[i].pb(0);Q[i].pb(C + 1);
    	sort(all(Q[i]));
    	int sz = Q[i].size();
    	for (auto it : Q[i])
    		up(it);
    	ans += c2(que(C));
    	for (int j = 0;j + 1 < sz;++j)
    		ans -= c2(que(Q[i][j + 1] - 1) - que(Q[i][j]));
    }
    cout << ans << '\n';
    return 0;
}