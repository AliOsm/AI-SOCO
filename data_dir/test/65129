#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define ll long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 21;
string s[N];
int a[N][N], dp[N][1 << 20], x[26][50], p[26][50], b[50][50];
vector < int > v[1 << 20];
inline upd(int &x, int y){
    if (x > y) x = y;
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i++) cin >> s[i];
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++) cin >> a[i][j];
    for (int i = 1; i <= m; i++){
        for (int l = 0; l < 26; l++){
            for (int j = 1; j <= n; j++){
                if (s[j][i - 1] == l + 'a') b[i][l] |= (1 << (j - 1));
            }
        }
    }
    for (int i = 0; i <= m; i++){
        for (int j = 0; j < (1 << n); j++) dp[i][j] = 2e9;
    }
    dp[0][0] = 0;
    for (int i = 1; i <= m; i++){
        for (int j = 0; j < 26; j++){
        for (int l = 1; l <= n; l++){
            if (s[l][i - 1] == j + 'a'){
                x[i][j] = max(x[i][j], a[l][i]);
                p[i][j] += a[l][i];
                b[i][j] |= (1 << (l - 1));
            }
        }
        p[i][j] -= x[i][j];
        }
    }
    for (int i = 1; i <= m; i++){
        for (int j = 0; j < (1 << n); j++){
            dp[i][j] = min(dp[i][j], dp[i - 1][j]);
            for (int l = 0; l < n; l++){
                int c = s[l + 1][i - 1] - 'a';
                upd(dp[i][j | (1 << l)], dp[i][j] + a[l + 1][i]);
                upd(dp[i][j | b[i][c]], dp[i][j] + p[i][c]);
            }
        }
    }
    cout << dp[m][(1 << n) - 1];
}
