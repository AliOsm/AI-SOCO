#include<bits/stdc++.h>
#define ll long long
#define ss string
#define pb push_back
#define rev(i,n) for(ll i=0;i<n;i++)
#define rev1(i,n) for(ll i=n-1;i>=0;i--)
#define sync ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define tci(v,i) for(map<ll,ll>::iterator i=v.begin();i!=v.end();i++)
#define MOD 1000000007
#define TIMESTAMP cerr<<(((double)clock())/CLOCKS_PER_SEC)
#define  rep(i,start,lim) for(ll (i)=(start);i<(lim);i++)
using namespace std;
#define M 2000005
int32_t main()
{
    sync;
    ll n,q=0,c=0;cin>>n;multiset<ll> m;multiset<ll>::iterator it;ss b[n];ll x[n];
    rev(i,n)
    {
        cin>>b[i];
        if(b[i][0]=='i')
        {
            c++;cin>>x[i];
            m.insert(x[i]);
        }
        if(b[i][0]=='r')
        {
            if(m.empty())
            {
                c+=2;
            }
            else
            {
                it=m.begin();m.erase(it);
                c++;
            }
        }
        if(b[i][0]=='g')
        {
            cin>>x[i];it=m.begin();
            while(*it<x[i])
            {
                m.erase(it);
                it=m.begin();c++;
            }
            if(*it==x[i])
            {
                c++;
            }
            else
            {
                m.insert(x[i]);
                c+=2;
            }
        }
    }m.clear();
    cout<<c<<endl;
    rev(i,n)
    {
        if(b[i][0]=='i')
        {
            cout<<"insert "<<x[i]<<endl;c++;
            m.insert(x[i]);
        }
        if(b[i][0]=='r')
        {
            if(m.empty())
            {
                cout<<"insert 1"<<endl;c+=2;
                cout<<"removeMin"<<endl;
            }
            else
            {
                it=m.begin();m.erase(it);
                cout<<"removeMin"<<endl;c++;
            }
        }
        if(b[i][0]=='g')
        {
            it=m.begin();
            while(*it<x[i])
            {
                cout<<"removeMin"<<endl; m.erase(it);
                it=m.begin();c++;
            }
            if(*it==x[i])
            {
                cout<<"getMin "<<x[i]<<endl;c++;
            }
            else
            {
                cout<<"insert "<<x[i]<<endl;m.insert(x[i]);
                cout<<"getMin "<<x[i]<<endl;c+=2;
            }
        }
    }
}
