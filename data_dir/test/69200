#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

#define REP(i,n) for( (i)=0 ; (i)<(n) ; (i)++ )
#define rep(i,x,n) for( (i)=(x) ; (i)<(n) ; (i)++ )
#define REV(i,n) for( (i)=(n) ; (i)>=0 ; (i)-- )
#define FORIT(it,x) for( (it)=(x).begin() ; (it)!=(x).end() ; (it)++ )
#define foreach(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define rforeach(it,c) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();++it)
#define foreach2d(i, j, v) foreach(i,v) foreach(j,*i)
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define SZ(x) ((int)(x).size())
#define MMS(x,n) memset(x,n,sizeof(x))
#define mms(x,n,s) memset(x,n,sizeof(x)*s)
#define pb push_back
#define mp make_pair
#define NX next_permutation
#define UN(x) sort(all(x)),x.erase(unique(all(x)),x.end())
#define CV(x,n) count(all(x),(n))
#define FIND(x,n) find(all(x),(n))-(x).begin()
#define ACC(x) accumulate(all(x),0)
#define PPC(x) __builtin_popcount(x)
#define LZ(x) __builtin_clz(x)
#define TZ(x) __builtin_ctz(x)
#define mxe(x) *max_element(all(x))
#define mne(x) *min_element(all(x))
#define low(x,i) lower_bound(all(x),i)
#define upp(x,i) upper_bound(all(x),i)
#define NXPOW2(x) (1ll << ((int)log2(x)+1))
#define PR(x) cout << #x << " = " << (x) << endl ;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

const int OO = (int) 2e9;
const double eps = 1e-9;
const int mod = (int) 1e9 + 7;

ll memnCr[1001][1001];
ll nCr(ll n, ll r) {
   if (r == 0 || n == r)
      return 1;
   if (r == 1)
      return n;
   ll &ret = memnCr[n][r];
   if (ret)
      return ret;
   return ret = (nCr(n - 1, r) + nCr(n - 1, r - 1)) % mod;
}
ll prs[1001];
int arr[100005];

int main() {
   std::ios_base::sync_with_stdio(false);
   cin.tie(NULL);
   cout.tie(NULL);
#ifndef ONLINE_JUDGE
// freopen("in.txt","rt",stdin);
// freopen("out.txt","wt",stdout);
#endif
   int n, m;
   cin >> n >> m;
   ll ret = 1, cnt = 0, r = 1;
   prs[0] = 1;
   for (int i = 1; i <= 1000; i++) {
      prs[i] = r;
      r = (r * 2ll) % mod;
   }
   for (int i = 0; i < m; i++)
      cin >> arr[i];
   sort(arr, arr + m);
   arr[m] = n + 1, cnt = arr[0] - 1;
   for (int i = 1; i <= m; i++) {
      if (i < m)
         ret *= prs[arr[i] - arr[i - 1] - 1];
      ret %= mod;
      cnt += arr[i] - arr[i - 1] - 1;
      ret *= nCr(cnt, arr[i] - arr[i - 1] - 1);
      ret %= mod;
   }
   cout << ret << endl;
   return 0;
}
