#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include<sstream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include<queue>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define N 100005
#define inf 1000000
#define sz(a) int(a.size())
#define pii pair<int,int>
#define vi vector<int>
struct node
{
 int x,y;
 node(){}
 node(int _x,int _y):x(_x),y(_y){}
 bool operator <(const node&a)const
 {return x<a.x;}
}q[N];
int a[N];
pair<int,pii>ans[N];
int main()
{
   // freopen("in.txt","r",stdin);
    int n,i,j,k,m;
    while(~scanf("%d",&n))
    {
     for(i=0;i<n;i++)
     {scanf("%d",&a[i]);}
     sort(a,a+n);
     k=1;q[0]=node(1,a[0]);
     for(i=1;i<n;i++)
     {
      if(a[i]!=a[i-1])q[k++]=node(1,a[i]);
      else q[k-1].x++;
     }
     priority_queue<node>p;
     for(i=k-1;i>=0;i--)p.push(q[i]);
     k=0;
     while(1)
     {
      if(sz(p)>=3)
      {int b[3];
       node u1=p.top();p.pop();
       b[0]=u1.y;u1.x--;
       node u2=p.top();p.pop();
       b[1]=u2.y;u2.x--;
       node u3=p.top();p.pop();
       b[2]=u3.y;u3.x--;
       sort(b,b+3);
       ans[k++]=mp(b[2],mp(b[1],b[0]));
       if(u1.x)p.push(node(u1));
       if(u2.x)p.push(node(u2));
       if(u3.x)p.push(node(u3));
      }
      else break;
     }
     printf("%d\n",k);
     for(i=0;i<k;i++)
     printf("%d %d %d\n",ans[i].fi,ans[i].se.fi,ans[i].se.se);
    }
    return 0;
}
