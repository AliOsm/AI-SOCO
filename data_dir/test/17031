#include <bits/stdc++.h>

using namespace std;

const int N = 300010;

bool z[N];
vector < pair <int, int> > g[N];
int q[N];
bool was[N];
bool used[N];

int main() {
  int n, k, mxd;
  scanf("%d %d %d", &n, &k, &mxd);
  memset(z, false, sizeof z);
  for (int i = 0; i < k; ++i) {
    int x;
    scanf("%d", &x);
    z[x - 1] = true;
  }
  for (int i = 0; i < n; ++i) {
    g[i].clear();
  }
  for (int i = 0; i < n - 1; ++i) {
    int x, y;
    scanf("%d %d", &x, &y);
    --x; --y;
    g[x].emplace_back(y, i);
    g[y].emplace_back(x, i);
  }
  memset(was, false, sizeof was);
  int qt = 0;
  for (int i = 0; i < n; ++i) {
    if (z[i]) {
      was[i] = true;
      q[qt++] = i;
    }
  }
  memset(used, false, sizeof used);
  for (int qh = 0; qh < qt; ++qh) {
    int x = q[qh];
    for (auto e : g[x]) {
      int y = e.first;
      if (!was[y]) {
        was[y] = true;
        q[qt++] = y;
        used[e.second] = true;
      }
    }
  }
  vector <int> ans;
  for (int i = 0; i < n - 1; ++i) {
    if (!used[i]) {
      ans.push_back(i);
    }
  }
  printf("%d\n", (int)ans.size());
  for (int e : ans) {
    printf("%d ", e + 1);
  }
}