// 31.03.2020
// 01.04.202

/*

*/


# include <iostream>
# include <cstdio>
# include <cstring>
# include <string>
# include <cstdlib>
# include <cmath>
# include <iomanip>
# include <vector>
//                 insert, append, size
# include <stack>
//                 push, pop, top, empty
# include <queue>
//                 push, pop, front, empty
# include <map>
# include <list>
//                 push_back, begin, end
# include <algorithm>


# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define sqr(x) ( (x) * (x) )


//# define lint long long int
# define lint __int64

# define fi first
# define se second

# define x XX_
# define y YY_
# define x1 XX_1
# define y1 YY_1
# define x2 XX_2
# define y2 YY_2


using namespace std;


typedef pair <int, int> Pair;
typedef pair <int, Pair> trio;
typedef pair <Pair, lint> Trio;
typedef pair <Pair, Pair> Quattro;


const int N = 200200;
const int ABC = 256;
const int K = 26;
const int INF = 2000000000;
const double eps = 1e-12;


int k, m, n, a, b, c, d, x, y, x1, y1, x2, y2;
//char s [N];
bool ok;


int F ();


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("A.TXT", "r", stdin);
   freopen ("OUTPUT.OUT", "w", stdout);
# endif

   ios_base::sync_with_stdio (false);
   cin.tie (NULL);

   cin >> n;

   for ( int i (0); i < n; i++ )
   {
      cin >> a >> b >> c >> d;
      cin >> x >> y >> x1 >> y1 >> x2 >> y2;
      
      ok = true;

# ifndef ONLINE_JUDGE
   cout << "*** " << a << " " << b << " " << c << " " << d << endl;
   cout << "*** " << x << " " << y << " " << x1 << " " << y1 << " " << x2 << " " << y2 << endl;
# endif

//   if ( x-a < x1 || x+b > x2 || y-c < y1 || y+d > y2 )
   if ( x-a+b < x1 || x-a+b > x2 || y-c+d < y1 || y-c+d > y2 )
      ok = false;

   if ( x1 == x2 && a+b > 0 || y1 == y2 && c+d > 0 )
      ok = false;
      
   if ( ok )
      cout << "Yes" << endl;
   else
      cout << "No" << endl;
   }

   return 0;
}

int F ()
{
   return 0;
}
