   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
 #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v==0) return b;
                                	if(b==0) return v;
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                        
                        /*        
                int pr[10100];
                int inv[10000010];
                
       
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=((ll)pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=(ll)inv[i+1]*(i+1)%mod;
                	}
                }
                */
                         int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;
vector<int> ve;
struct roll_hash{
private:
public:
	
	vector<int> str;
	
	vector<int> r1,r2;
	int MOD1=inf;
	int MOD2=inf+2;
	int base=12341;
	vector<int> baseinv1;
	vector<int> baseinv2;
	
	void make_hash(vector<int> s){
		
		s.insert(s.begin(),0);
		this->str=s;
		int l=s.size();
		r1.resize(l+1);
		r2.resize(l+1);
		baseinv1.resize(l+1);
		baseinv2.resize(l+1);
		
		r1[0]=0;
		r2[0]=0;
		int kake1=1;
		int kake2=1;
		for(int i=1;i<=l;i++){
			r1[i]=r1[i-1]+kake1*(str[i]);
			r2[i]=r2[i-1]+kake2*(str[i]);
			r1[i]%=MOD1;
			r2[i]%=MOD2;
			
			kake1=base*kake1%MOD1;
			kake2=base*kake2%MOD2;
		}
		
		baseinv1[l]=beki(beki(base,l,MOD1),MOD1-2,MOD1);
		baseinv2[l]=beki(beki(base,l,MOD2),MOD2-2,MOD2);
		
		for(int i=l-1;i>=0;i--){
			baseinv1[i]=baseinv1[i+1]*base%MOD1;
			baseinv2[i]=baseinv2[i+1]*base%MOD2;
		}
	}
	
	pa hash(int l,int r){//[l,r)
		int z1=(r1[r]+MOD1-r1[l])%MOD1;
		z1*=baseinv1[l];
		z1%=MOD1;
	return mp(z1,0);
		int z2=(r2[r]+MOD2-r2[l])%MOD2;
		z2*=baseinv2[l];
		z2%=MOD2;
	return mp(z1,z2);
	}
	
	bool same(int l1,int r1,int l2,int r2){
		if(l1-r1!=l2-r2)return 0;
		if(l1==r1)return 1;
		return hash(l1,r1)==hash(l2,r2);
	}
	
	
};

int num[200020];

	int l;
	string s;
	
	int usi[200020],mae[200020];
	
int rui[200020]={};

pa4 ch(int l,int r){
	r--;
	//cout<<usi[l]<<" "<<mae[r]<<" "<<num[l+usi[l]]<<" "<<num[r-mae[r]]<<endl;
	return (pa4){usi[l],mae[r],num[l+usi[l]],num[r-mae[r]]};
}
 roll_hash ss;

	
void solve(){
	int l,r,len;
	cin>>l>>r>>len;
	int l1=l-1;
	int r1=l1+len;
	int l2=r-1;
	int r2=l2+len;
	int h1=rui[l2-1]-(r2>0?rui[r2-1]:0);
	int h2=rui[l1-1]-(r1>0?rui[r1-1]:0);
	if(h1!=h2){
		cout<<"No\n";
		return;
	}
	if(s[l1]=='1' && s[r1-1]=='1' && num[l1]==num[r1-1]){
		cout<<"Yes\n";
		return;
	}
	
	pa4 z1=ch(l1,r1);
	pa4 z2=ch(l2,r2);
	
	if(z1.x%2!=z2.x%2){
		cout<<"No\n";
		return;
	}
	if(z1.y%2!=z2.y%2){
		cout<<"No\n";
		return;
	}
	//cout<<"d"<<endl;
	if(!ss.same(z1.z,z1.w,z2.z,z2.w)){
		cout<<"No\n";
		return;
	}
	cout<<"Yes\n";
	
}


signed main(){
	
	
cin.tie(0);
ios::sync_with_stdio(false);

	
	cin>>l>>s;
	ve.pb(0);
	for(int i=0;i<l;i++){
		rui[i]=(i==0?0:rui[i-1])+s[i]-'0';
	}
	for(int i=0;i<l;i++){
		if(s[i]=='0'){
			ve.pb(0);
			num[i]=ve.size()-1;
		}
		else{
			ve.back()++;
			num[i]=ve.size()-1;
		}
	}
	int q;
	cin>>q;
	
	for(int i=0;i<l;i++){
		if(s[i]=='0')mae[i]=0;
		else mae[i]=(i==0?0:mae[i-1])+1;
	}
	for(int i=l-1;i>=0;i--){
		if(s[i]=='0')usi[i]=0;
		else usi[i]=(i==l-1?0:usi[i+1])+1;
	}
	
	for(auto &v:ve)v%=2;
	ss.make_hash(ve);
	for(int i=0;i<q;i++)solve();
	
	
	
	return 0; 
 }
