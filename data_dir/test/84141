#include <bits/stdc++.h>
#define endl '\n'

using namespace std;
template<class T, class T2> inline void chkmax(T &x, const T2 &y) { if(x < y) x = y; }
template<class T, class T2> inline void chkmin(T &x, const T2 &y) { if(x > y) x = y; }
const int MAXN = (1 << 20);

int q;

void read()
{
	cin >> q;
}

string s = "What are you doing at the end of the world? Are you busy? Will you save us?";
string other1 = "What are you doing while sending \"";
string other2 = "\"? Are you busy? Will you send \"";
string other3 = "\"?";

int64_t len[MAXN];

char solve(int n, int64_t pos)
{
	if(pos > len[n]) return '.';
	if(n == 0) return s[pos - 1];

	if(pos <= (int64_t)other1.size()) return other1[pos - 1];
	if(pos <= (int64_t)other1.size() + len[n - 1]) return solve(n - 1, pos - other1.size());
	if(pos <= (int64_t)other1.size() + len[n - 1] + (int64_t)other2.size()) return other2[pos - len[n - 1] - other1.size() - 1];
	if(pos <= (int64_t)other1.size() + len[n - 1] + (int64_t)other2.size() + len[n - 1]) return solve(n - 1, pos - other2.size() - other1.size() - len[n - 1]);
	return other3[pos - len[n - 1] - len[n - 1] - other1.size() - other2.size() - 1];
}

void solve()
{
	len[0] = s.size();
	for(int i = 1; i < MAXN; i++)
	{
		len[i] = other1.size() + other2.size() + other3.size() + 2ll * len[i - 1]; 
		chkmin(len[i], (int64_t)2e18);
	}
	
	while(q--)
	{
		int n;
		int64_t k;
		cin >> n >> k;
		cout << solve(n, k);
	}

	cout << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

