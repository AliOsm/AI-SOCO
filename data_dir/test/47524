// Bismillahirrahmanir Rahim
//NAMOMIZARAHID
#include<bits/stdc++.h>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<string>

#define nl printf("\n")
#define sp printf(" ")

#define rep(i,a,b) for(i=a;i<=b;i++)
#define rev(i,a,b) for(i=a;i>=b;i--)

#define fil freopen("input.txt","r",stdin)

#define pf printf
#define sf scanf


typedef long long l;
typedef unsigned long long ul;

using namespace std;

#define pi acos(-1.0)
#define mp make_pair
#define pb push_back
#define p_q priority_queue


#define dis( a ,b ) abs( a - b )
#define dis2d( x1 ,y1 ,x2 ,y2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) )
#define dis3d( x1 ,y1 ,z1 ,x2 ,y2 ,z2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) + ( z1 - z2 ) * ( z1 - z2 ) )


#define C(i) pf("Case %I64d: ",i)


typedef pair< l ,l > pll;
typedef pair< string ,l > psl;
typedef pair< l ,string > pls;
typedef pair< string ,string > pss;
typedef pair< char ,l > pcl;
typedef pair< l ,char > plc;


#define Inf 0x7f7f7f
#define Max 200000001
#define Min -100000000001
#define mod 1000000007

#define ms0(a) memset(a,0,sizeof(a))
#define ms1(a) memset(a,1,sizeof(a))
#define ms_1(a) memset(a,-1,sizeof(a))

#define valid(nx,ny,r,c) nx>=0&&nx<=r-1 && ny>=0&&ny<=c-1

#define ck_bt( v , p ) ( ( v >> p ) & 1 )



int inline in(){int x;sf("%d",&x);return x;}
l inline lin(){l x;sf("%I64d",&x);return x;}
void P(l x){pf("%I64d",x);}


l fx[]={0,0,-1,1};
l fy[]={-1,1,0,0};

/*
struct info
{
    l x,y;
    info() {};
    info(l _x, l _y) {x = _x; y = _y;};

    bool operator < (const info &p) const
    {
		if(x == p.x) return y > p.y;
		else
			return x > p.x;
    }
};
*/


/*
    rep(i,1,n)
    {
        a[i]=lin();
    }

*/

#define rng 100010

map < l , l >  na ;

vector< l > r1 ;
vector< char > r2 ;

pll namira ;

bool vis[rng] ;

//pll a[rng] ;

l a[rng] , b[rng] ;

char s[rng] ;

int main()
{
    l i , j , k ;
    //fil;
    //freopen("out.txt","w",stdout);

    l n = lin() ;

    l d = 0 ;

    rep( i , 1 , n )
    {
        a[i] = lin() ;
        d += a[i] ;
        na[d] = i ;
    }

    l D = d ;

    l m = lin() ;

    d = 0 ;

    l last = 1 ;

    rep( i , 1 , m )
    {
        l x = lin() ;

        bool ck = 0 ;

        d += x ;

        l pos = na[d] ;

        if( pos == 0 )
        {
            puts("NO") ;
            return 0 ;
        }

        l boro = 0 , boro_pos = -1 ;

        rev( j , pos , last )
        {
            if( a[j] > boro )
            {
                boro = a[j] ;
            }
        }

        rev( j , pos , last )
        {
            if( a[j] == boro )
            {
                if( j < pos && j > last )
                {
                    if( a[j] > a[j-1] )
                    {
                        boro_pos = j ;
                        ck = 1 ;
                        break ;
                    }
                    if( a[j] > a[j+1] )
                    {
                        boro_pos = j ;
                        break ;
                    }

                }
                else if( j < pos )
                {
                    if( a[j] > a[j+1] )
                    {
                        boro_pos = j ;
                        break ;
                    }
                }
                else
                {
                    if( a[j] > a[j-1] )
                    {
                        boro_pos = j ;
                        ck = 1 ;
                        break ;
                    }
                }
            }
        }

        if( boro_pos == -1 && pos - last >= 1 )
        {
            puts("NO") ;
            return 0 ;
        }

        l now = boro_pos - last + i ;


        if( ck )
        {
            rep( j , last , boro_pos - 1 )
            {
                if( pos - last == 0 ) break ;
                r1.pb( now ) ;
                r2.pb( 'L' ) ;
                now -- ;
            }
            rep( j , boro_pos + 1 , pos )
            {
                if( pos - last == 0 ) break ;
                r1.pb( now ) ;
                r2.pb( 'R' ) ;
            }

        }
        else
        {
            rep( j , boro_pos + 1 , pos )
            {
                if( pos - last == 0 ) break ;
                r1.pb( now ) ;
                r2.pb( 'R' ) ;
            }

            rep( j , last , boro_pos - 1 )
            {
                if( pos - last == 0 ) break ;
                r1.pb( now ) ;
                r2.pb( 'L' ) ;
                now -- ;
            }
        }

        last = pos + 1 ;

    }

    if( D != d )
    {
        puts("NO") ;
        return 0 ;
    }

    puts("YES") ;

    n = r1.size() ;

    rep( i , 0 , n - 1 )
    {
        P(r1[i]) ; sp ;
        pf("%c", r2[i] ) ;
        nl ;
    }


    //sort( a + 1 , a + n + 1 ) ;

    //gets(s);
    return 0;
}


