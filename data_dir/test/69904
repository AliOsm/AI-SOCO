#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 10, M = 10 + 5, sq = 225;
int n, m, q, mark[N][M];
char a[N][M];
struct Cl {
	int x, y;
	Cl () {
		x = y = -2;
	}
	Cl (int xx, int yy) {
		x = xx, y = yy;
	}
} dp[N][M];
const Cl loop (-1, -1);
Cl Next(Cl rn) {
	if (a[rn.x][rn.y] == '>')
		rn.y++;
	else if (a[rn.x][rn.y] == '<')
		rn.y--;
	else
		rn.x--;
	return rn;
}
bool isOut(Cl rn) {
	if (rn.x == -1 || rn.y == m || rn.y == -1)
		return true;
	return false;
}
Cl getDp(Cl rn) {
	mark[rn.x][rn.y] = 1;
//	cout << "rn = " << rn.x << ", " << rn.y << endl;
	Cl nx = Next(rn);
	if (isOut(nx))
		return dp[rn.x][rn.y] = nx;
	if (nx.x % sq == sq - 1 && a[rn.x][rn.y] == '^')
		return dp[rn.x][rn.y] = nx;
	if (mark[nx.x][nx.y]) {
		if (dp[nx.x][nx.y].x == -2) {
//			cout << "HO\n"; 
			return dp[rn.x][rn.y] = loop;
		}
		else {
//			cout << "HI\n";
			return dp[rn.x][rn.y] = dp[nx.x][nx.y];
		}
	}
	else 
		return dp[rn.x][rn.y] = getDp(nx);
}	
void Pre() {
	for (int i = 0; i < n; i++) { 
		for (int j = 0; j < m; j++) {
			Cl rn (i, j);
			dp[i][j] = getDp(rn);
		}
	}
}
void reset(int st) {
	st = st * sq;
	int en = st + sq;
	for (int i = st; i < min(n, en); i++) {
		for (int j = 0; j < m; j++) {
			mark[i][j] = 0;
			dp[i][j] = {-2, -2};
		}
	}
	for (int i = st; i < min(en, n); i++) { 
		for (int j = 0; j < m; j++) {
			Cl rn (i, j);
			dp[i][j] = getDp(rn);
//			cout << endl;
		}
	}
}
Cl getAns(int xx, int yy) {
	Cl rn (xx, yy);
	while (!isOut(rn))
		rn = dp[rn.x][rn.y];
	return rn;
}
int main() {
	cin >> n >> m >> q;
	for (int i = 0; i < n; i++) 
		for (int j = 0; j < m; j++)
			cin >> a[i][j];
	Pre();
/*	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cout << dp[i][j].x << " " << dp[i][j].y << ", ";
		}
		cout << endl;
	}*/
	for (int i = 0; i < q; i++) {
		char t, ch;
		int x, y;
		cin >> t;
		if (t == 'C') {
			cin >> x >> y >> ch;
			x--, y--;
			a[x][y] = ch;
			reset(x / sq);
		}
		else {
			cin >> x >> y;
			x--, y--;
			Cl rtr = getAns(x, y);
			if (rtr.x != -1 || rtr.y != -1)
				cout << rtr.x + 1 << " " << rtr.y + 1 << "\n";
			else
				cout << rtr.x << " " << rtr.y << "\n";
		}
	}
/*	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cout << a[i][j] << ", ";
		}
		cout << endl;
	}*/
	return 0;
}
