#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int n, a[100005], b[100005], r[100005];

bool intersect(int x, int y){
  int dist = abs(b[x] - b[y]);
  if(dist + min(r[x], r[y]) <= max(r[x], r[y])){
    return false;
  }
  if(dist >= r[x] + r[y]) return false;
  return true;
}

int main(void) {
  #ifndef ONLINE_JUDGE
      freopen("input.txt","rt",stdin);
      freopen("output.txt","wt",stdout);
  #endif
  scanf("%d", &n);
  forn(i, n){
    scanf("%d", a + i);
    if(i){
      b[i - 1] = a[i] + a[i - 1];
      r[i - 1] = abs(2 * a[i] - b[i - 1]);
    }
  }
  n--;
  forn(i, n) forn(j, n){
    if(intersect(i, j)){
      puts("yes");
      exit(0);
    }
  }
  puts("no");
  return 0;
}
