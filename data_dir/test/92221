#include <bits/stdc++.h>
// #include <sys/types.h> 
// #include <unistd.h> 
using namespace std;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
const int MOD = 1e9+7;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=2e5+2;
vector<int> a[N];
vector<int> p;
bool vis[N];
void dfs(int x)
{
  if(vis[x]) return;
  vis[x]=true;
  p.pb(x);
  for(auto y:a[x]) dfs(y);
}
int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      int n,m;
      cin>>n>>m;
      for(int i=0;i<m;i++)
      {
        int x,y;
        cin>>x>>y;
        a[x].pb(y);
        a[y].pb(x);
      }
      int ans=0;
      int b[n+1];
      int cnt=0;
      for(int i=1;i<=n;i++)
      {
        if(!vis[i])
        {
          p.clear();
          dfs(i);
          for(auto x:p) b[x]=cnt;
          cnt++;
          // sort(all(p));
          
          // if(!f) ans++;
        }
      }
      map<int,int> ma,mal,mar;
      vector<int> co;
      for(int i=1;i<=n;i++)
      {
        int j=i;
        while(j<=n&&b[j]==b[i]) j++;
        ma[b[i]]++;
        co.pb(b[i]);
        i=j-1;
      }
      for(int i=0;i<co.size();i++)
      {
        // cout<<co[i]<<" ";
        if(mal.count(co[i])==0)
        {
          mal[co[i]]=i;
          mar[co[i]]=i;
        }
        else{
          mar[co[i]]=i;
        }
      }
      // cout<<"\n";
      int cntt[co.size()+2]={0};
      for(auto x:ma)
      {
        int ii=mal[x.fi];
        int jj=mar[x.fi];
        // cout<<x.fi<<" "<<ii<<" "<<jj<<"\n";
        if(ii!=jj)
        {
          cntt[ii]++;
          cntt[jj]--;
        }
      }
      int lol=0;
      int cc=0;
      set<int> s;
      int ansss=0; 
      for(int i=0;i<co.size();i++)
      {
        // cc+=cntt[i];
        if(cc==0&&(int)s.size()!=0) 
        {
          // cout<<"*"<<s.size();
          ansss+=(int)s.size()-1;
          s.clear();
        }
        else if(cc!=0)
        {
          s.insert(co[i]);
        }
        cc+=cntt[i];
      }
      if(s.size()!=0)
      {
        ansss+=(int)s.size()-1;
      }
      cout<<max(ansss,0LL);
}
// I never lose. I either win or I learn