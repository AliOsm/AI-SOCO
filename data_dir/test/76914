#include<bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N=205;
ll arr[N];
ll dp[N][N][N];
int n,k,x;
ll solve(int ind,int last,int rem){
    if(ind==n && rem==0)
        return 0;
    if(ind==n)
        return -1e15;
    if(ind-last>=k && rem==0)
        return -1e15;
    ll ans=-1e15;
    if(last!=-1 && dp[ind][last][rem]!=-1 )
        return dp[ind][last][rem];
    if(ind-last<k && last!=-1)
       ans=max(ans,solve(ind+1,last,rem));
    if( (ind-last)<k && rem>0){
        ans=max(ans,solve(ind+1,ind,rem-1)+arr[ind]);
        ans=max(ans,solve(ind+1,last,rem));
    }
    if( (ind-last)>=k && rem>0)
        ans=max(ans,solve(ind+1,ind,rem-1)+arr[ind]);
    if(last!=-1)
        return dp[ind][last][rem]=ans;
    return ans;
}

int main(){
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    cin>>n>>k>>x;
    for(int i=0;i<n;i++)
        cin>>arr[i];
    memset(dp,-1,sizeof(dp));
    ll ans=solve(0,-1,x);
    if(ans<0)
        cout<<-1<<endl;
    else
        cout<<ans<<endl;
    return 0;
}
