#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define pb push_back
#define fst first
#define snd second
#define SZ(x) ((int)x.size())
typedef long long ll;
#define dforn(i, n) for(int i = n - 1; i >= 0; i--)
const int MAXN=-1;

int TC,n;
set<int> sub,S;
map<int,int> cnt;

struct dot {
  ll a,b;
};
ll getPer(dot a){ return 2*(a.a+a.b);}
ll getAr(dot a){ return a.a*a.b;}
bool operator < (dot p, dot q){
  if(p.a==-1) return false;
  if(q.a==-1) return true;
  return getPer(p)*getPer(p)*getAr(q)<getPer(q)*getPer(q)*getAr(p);
}

int main() {
  //~ freopen("C.in","r",stdin);
  while(scanf("%d",&TC)>=1){
    forn(tc,TC){
      sub.clear();S.clear();cnt.clear();
      dot ans=(dot){-1,-1};
      
      scanf("%d",&n);
      forn(i,n){
        int x; scanf("%d",&x);cnt[x]++;
        if(cnt[x]==4){
          ans=(dot){x,x};
        }
        if(sub.count(x)){
          S.insert(x);
        }
        sub.insert(x);
      }
      
      for(auto it=S.begin();it!=S.end();++it){
        auto it2=next(it);
        if(it2==S.end()) break;
        dot cand=(dot){*it,*it2};
        if(cand<ans){
          ans=cand;
        }
      }
      printf("%lld %lld %lld %lld\n",ans.a,ans.a,ans.b,ans.b);
    }
  }
  return 0;
}
