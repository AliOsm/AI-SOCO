#include <cassert>
#include <list>
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define scs(a) scanf("%s", a)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                               \
   for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
   cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
vector<string> simula(string &s, int x){
    vector<string> ret;
    ret.pb("\0");
    if(x==s.size()) return ret;
    ret=simula(s,x+1);
    if(s[x]=='+' or s[x]=='-') for(int i=0;i<ret.size();i++) ret[i].pb(s[x]);
    else{
        vector<string> aux=ret;
        for(int i=0;i<ret.size();i++) ret[i].pb('+'), aux[i].pb('-');
        for(string c: aux) ret.pb(c);
    }
    return ret;
}
int main()
{
   string s,t;
   cin>>s>>t;
   int pos=0;

   for(int i=0;i<s.size();i++){
       pos+=(s[i]=='+');
       pos-=(s[i]=='-');
   }
   vector<string> simu=simula(t,0);
   int r=0;
   for(string x: simu){
       int cu=0;
       for(char c: x){
            cu+=(c=='+');
            cu-=(c=='-');
       }    
       r+=(cu==pos);
   }
   cout<<setprecision(10)<<fixed;
   cout<<r/(double)simu.size()<<endl;
   return 0;
}
