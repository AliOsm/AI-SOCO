#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define pp pair<int, pair<int, int> >
#define fi first
#define se second
#define esp 1e-12
#define inf 1000000000000003
#define mod 1000000007
#define N 100100
const long double pi = acos(-1.0);
typedef long long ll;
typedef long double ld;
using namespace std;
int n;
vector <pp> a;

bool cmpx(pp x, pp y) {
    return (x.se.fi < y.se.fi || (x.se.fi == y.se.fi && x.se.se < y.se.se));
}

bool cmpy(pp x, pp y) {
    return (x.se.se < y.se.se || (x.se.se == y.se.se && x.se.fi < y.se.fi));
}

vector <int> rr;
vector <int> c[100100];
vector <int> d[100100];

//map<int, int> M;
//vector <int> cc;

bool IsValid(pp x, pp y, pp z) {
    ll ux = x.se.fi - y.se.fi;
    ll uy = x.se.se - y.se.se;
    ll vx = x.se.fi - z.se.fi;
    ll vy = x.se.se - z.se.se;
    return (ux * vy == uy * vx);
}

int main() {
  //  freopen("in.in", "r", stdin);
    ios::sync_with_stdio(false);
    cin>>n;
    for (int i = 1; i <= n; i++) {
        int u, v;
        cin>>u>>v;
        a.pb(mp(i, mp(u, v)));

 //       cc.pb(u);
 //       cc.pb(v);
    }

   /* int dm = 1;
    sort(cc.begin(), cc.end());
    for (int i = 0; i < cc.size(); i++)
        if (M[cc[i]] == 0)  M[cc[i]] = dm++;

    for (int i = 0; i < a.size(); i++) {
        cout << M[a[i].se.fi] << " " << M[a[i].se.se] << "\n";
    }
    */


    sort(a.begin(), a.end(), cmpx);
    a.pb(mp(-1, mp(-1, -1)));

    int cnt = 1;
    for (int i = 0; i < a.size() - 1; i++) {
        c[cnt].pb(a[i].fi);
        if (a[i].se.fi != a[i + 1].se.fi) {
            cnt++;
        }
    }

    for (int i = 1; i < cnt - 1; i++) {
        if (c[i].size() >= 2) {
            cout<< c[i][0] << " " << c[i][1] << " " << c[i + 1][0];
            return 0;
        }
        if (c[i + 1].size() >= 2) {
            cout<< c[i + 1][0] << " " << c[i + 1][1] << " " << c[i][0];
            return 0;
        }
    }


    a.pop_back();
    sort(a.begin(), a.end(), cmpy);
    a.pb(mp(-1, mp(-1, -1)));

    cnt = 1;
    for (int i = 0; i < a.size() - 1; i++) {
        d[cnt].pb(a[i].fi);
        if (a[i].se.se != a[i + 1].se.se) {
            cnt++;
        }
    }

    for (int i = 1; i < cnt - 1; i++) {
        if (d[i].size() >= 2) {
            cout<< d[i][0] << " " << d[i][1] << " " << d[i + 1][0];
            return 0;
        }
        if (d[i + 1].size() >= 2) {
            cout<< d[i + 1][0] << " " << d[i + 1][1] << " " << d[i][0];
            return 0;
        }
    }

    /// alive
    for (int i = 2; i < n; i++)
        if (!IsValid(a[0], a[1], a[i])) {
            cout << a[0].fi << " " << a[1].fi << " " << a[i].fi << "\n";
            return 0;
        }

    /**/return 0;
}
