#include <algorithm>
#include <iostream>
#include <utility>
#include <string>
#include <vector>

#define pb push_back

using namespace std;

pair <int,int> h[105];

bool graph[105][105];

string arr[105];

int res[105];

bool u[105];

int main (){
   int n; cin >> n;
   string s;

   for (int i = 1; i <= n; i ++){
      cin >> arr[i];
   }

   for (int i = 1; i <= 26; i ++){
      h[i].first = 1;
      h[i].second = i;
   }

   for (int i = 1; i <= n; i ++){
      bool quit = 0;

      for (int j = 1; j < i; j ++){
         for (int k = 0; k < arr[i].size () && k < arr[j].size (); k ++){
            if (arr[i][k] != arr[j][k]){
               graph[arr[j][k] - 'a' + 1][arr[i][k] - 'a' + 1] = 1;
               quit = 1; break;
            }
         }

         if (!quit && arr[j].size () > arr[i].size ()){
            cout << "Impossible";
            return 0;
         }

      }
   }

   for (int i = 1; i <= 26; i ++){
      for (int j = 1; j <= 26; j ++){
         for (int k = 1; k <= 26; k ++){
            if (graph[i][j] && graph[j][k]){
               graph[i][k] = 1;
            }
         }
      }
   }

   for (int i = 1; i <= 26; i ++){
      if (graph[i][i]){
         cout << ("Impossible");
         return 0;
      }
   }

   for (int i = 1; i <= 26; i ++){
      for (int j = 1; j <= 26; j ++){
         h[i].first += graph[j][i];
      }
   }

   sort (h + 1, h + 27);

   for (int i = 1; i <= 26; i ++){
      int k = h[i].first;

      while (u[k]){
         k ++;
      }

      u[k] = 1;
      res[k] = h[i].second;
   }

   for (int i = 1; i <= 26; i ++){
      cout << char (res[i] + 'a' - 1);
   }

   return 0;
}

