#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 1e5 + 5;

vector< int> pfactors[N];
set< int> st[N];
bitset< N> isON;

int main() {
    ios::sync_with_stdio(false); cin.tie(nullptr);
    
    for (int i = 2; i < N; i++) {
        if (!pfactors[i].empty()) continue;
        for (int j = i; j < N; j += i) {
            pfactors[j].push_back(i);
        }
    }

    int n, m;
    cin >> n >> m;

    while (m--) {
        char c; int x;
        cin >> c >> x;

        if (c == '+') {
            if (isON[x]) cout << "Already on\n";
            else {
                bool conflict = false;

                for (const int& p : pfactors[x]) {
                    if (!st[p].empty()) {
                        conflict = true;
                        cout << "Conflict with " << *st[p].begin() << "\n";
                        break;
                    }
                }
                
                if (!conflict) {
                    cout << "Success\n";
                    isON[x] = true;
                    for (const int &p : pfactors[x]) st[p].emplace(x);
                }
            }
        }
        else {
            if (!isON[x]) cout << "Already off\n";
            else {
                cout << "Success\n";
                for (const int &p : pfactors[x]) st[p].erase(x);
                isON[x] = false;
            }
        }
    }
}