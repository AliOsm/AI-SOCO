#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


int n,h;
double p,f[2005][2005][2][2],dq;
int l,r;
int lft[2005],rgt[2005],x[2005];

int main()

{
	scanf("%d%d",&n,&h);
	scanf("%lf",&p);
	for (int i=1;i<=n;++i) scanf("%d",&x[i]);
	sort(x+1,x+n+1);
	lft[1]=1;
	for (int i=2;i<=n;++i)
	{
		if (x[i]-x[i-1]<h) lft[i]=lft[i-1];
		else lft[i]=i;
	}
	rgt[n]=n;
	for (int i=n-1;i>=1;--i)
	{
		if (x[i+1]-x[i]<h) rgt[i]=rgt[i+1];
		else rgt[i]=i;
	}
	for (int i=1;i<=n;++i)
		for (int j=1;j<=n;++j)
			for (int ii=0;ii<=1;++ii)
				for (int jj=0;jj<=1;++jj) f[i][j][ii][jj]=0;
	for (int len=1;len<=n;++len)
		for (int i=1;i+len-1<=n;++i)
		{
			int j=i+len-1;
			for (int ii=0;ii<=1;++ii)
				for (int jj=0;jj<=1;++jj)
				{
					dq=0;
					//i <-  
					l=x[i]-h;r=x[i];
					if (i>1)
						l=max(l,ii==0?x[i-1]:x[i-1]+h);
					if (j<n)
						r=min(r,jj==0?x[j+1]-h:x[j+1]);
					if (l<r)
						dq+=(r-l)*p;
					dq+=f[i+1][j][0][jj]*p;
					//i ->
					l=x[i];r=x[rgt[i]]+h;
					if (i>1)
						l=max(l,ii==0?x[i-1]:x[i-1]+h);
					if (j<n)
						r=min(r,jj==0?x[j+1]-h:x[j+1]);
					if (l<r)
						dq+=(r-l)*(1-p);
					dq+=f[rgt[i]+1][j][1][jj]*(1-p);
					//j ->
					l=x[j];r=x[j]+h;
					if (i>1)
						l=max(l,ii==0?x[i-1]:x[i-1]+h);
					if (j<n)
						r=min(r,jj==0?x[j+1]-h:x[j+1]);
					if (l<r) 
						dq+=(r-l)*(1-p);
					dq+=f[i][j-1][ii][1]*(1-p);
					l=x[lft[j]]-h;r=x[j];
					if (i>1)
						l=max(l,ii==0?x[i-1]:x[i-1]+h);
					if (j<n)
						r=min(r,jj==0?x[j+1]-h:x[j+1]);
					if (l<r)
						dq+=(r-l)*p;
					dq+=f[i][lft[j]-1][ii][0]*p;
					dq*=0.5;
					f[i][j][ii][jj]=dq;
				}
		}
	printf("%.10f\n",f[1][n][0][0]);

	return 0;

}