#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define MAX 10007

struct triplet {
    ll first, second, third;
};

ll n, q;
ll L[MAX], R[MAX], X[MAX];

triplet MOD = {127657753, 999999937, 387420479};

triplet DP[MAX];

void addQuery(ll q)
{
    //cout << "added " << q << endl;
    for (ll i = n; i >= X[q]; i--) {
        DP[i].first = DP[i].first+DP[i-X[q]].first;
        if (DP[i].first >= MOD.first) DP[i].first -= MOD.first;
        DP[i].second = DP[i].second+DP[i-X[q]].second;
        if (DP[i].second >= MOD.second) DP[i].second -= MOD.second;
        DP[i].third = DP[i].third+DP[i-X[q]].third;
        if (DP[i].third >= MOD.third) DP[i].third -= MOD.third;
    }
}

void rmvQuery(ll q)
{
    //cout << "removed " << q << endl;
    for (ll i = X[q]; i <= n; i++) {
        DP[i].first = DP[i].first-DP[i-X[q]].first+MOD.first;
        if (DP[i].first >= MOD.first) DP[i].first -= MOD.first;
        DP[i].second = DP[i].second+DP[i-X[q]].second+MOD.second;
        if (DP[i].second >= MOD.second) DP[i].second -= MOD.second;
        DP[i].third = DP[i].third+DP[i-X[q]].third+MOD.third;
        if (DP[i].third >= MOD.third) DP[i].third -= MOD.third;
    }
}

vector< ll >addon[MAX];
vector< ll >rmvon[MAX];

ll psbl[MAX];

int main()
{
    std::ios_base::sync_with_stdio(false);
    cin.tie(0);

    cin >> n >> q;

    for (ll i = 1; i <= q; i++) {
        cin >> L[i] >> R[i] >> X[i];
        addon[L[i]].push_back(i);
        rmvon[R[i]+1].push_back(i);
    }

    DP[0].first = 1;
    DP[0].second = 1;
    DP[0].third = 1;

    for (ll i = 1; i <= n; i++) {
        //cout << "at " << i << endl;
        for (ll q : addon[i]) addQuery(q);
        for (ll q : rmvon[i]) rmvQuery(q);

        //cout << "at " << i << endl;
        for (ll j = 1; j <= n; j++) {
            if (psbl[j]) continue;
            //cout << "DP[" << j << "] = " << DP[j].first << endl;
            if (DP[j].first > 0 && DP[j].second > 0 && DP[j].third > 0) {
                psbl[j] = 1;
            }
        }
    }

    vector< ll >v;

    for (ll i = 1; i <= n; i++) if (psbl[i]) v.push_back(i);

    cout << v.size() << "\n";
    for (ll a : v) cout << a << " ";


    return 0;
}

