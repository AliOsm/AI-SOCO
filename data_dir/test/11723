#include <bits/stdc++.h>
using namespace std;

#define VIC ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;
#define matrix vector<vector<ll>>

const int N = 1e5 + 10;
const ll mod = 1000000007;

class fenwickTree
{
    public:
        int n;
        ll tree[15][N] = {};
        static unsigned int getParent(unsigned int node)
        {
            return node - ((-node) & node);
        }
        static unsigned int getNext(unsigned int node)
        {
            return node + ((-node) & node);
        }
        void update(int bit, int i, ll val)
        {
            unsigned int st = i;
            do
            {
                tree[bit][st] += val;
                st = getNext(st);
            }while (st <= n);
        }
        ll getCum(int bit, int ind)
        {
            ll ans = 0;
            if (ind < 0)
                return ans;
            unsigned int st = ind;
            while (st > 0)
            {
                ans += tree[bit][st];
                st = getParent(st);
            }
            return ans + tree[bit][st];
        }
};

fenwickTree t;

int main()
{
    VIC
    int x, n, k;
    cin >> n >> k;
    t.n = n;
    for (int i = 0; i < n; i++)
    {
        cin >> x;
        t.update(0, x, 1);
        for (int j = 1; j <= k; j++)
            t.update(j, x, t.getCum(j - 1, x - 1));
    }
    cout << t.getCum(k, n);
    return 0;
}