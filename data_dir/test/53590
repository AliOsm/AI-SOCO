#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define nl cout<<endl

#define pii pair<ll,ll>
#define vi  vector<ll>
#define vii vector<pii>
#define mi  map<ll,ll>
#define all(a)  (a).begin(),(a).end()

#define pb push_back
#define make make_pair
#define ff first
#define ss second
#define hell 1000000007

#define test4(x,y,z,a) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<"		a is "<<a<<endl;
#define test3(x,y,z) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<endl;
#define test2(x,y) cout<<"x is "<<x<<"		y is "<<y<<endl;
#define test1(x) cout<<"x is "<<x<<endl;
#define M 1000009
ll gcd(ll a,ll b)
{
    if(a==0)
        return b;
    else
        return gcd(b%a,a);
}
ll power(ll a,ll b,ll m)
{
	ll ans=1;
	while(b)
	{
		if(b&1)
			ans=(ans*a)%m;
		b/=2;
		a=(a*a)%m;
	}
	return ans;
}
int main()
{	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
        ll n;cin>>n;
	vii v;
	rep(i,0,n)
	{
		ll a,b;cin>>a>>b;
		v.pb(make_pair(a,b));
	}
	sort(v.begin(), v.end());
	ll left[M],right[M];
	vi power,index;

	rep(i,0,n)
	{
		power.pb(v[i].ss);
		index.pb(v[i].ff);
	}
	sort(index.begin(),index.end());
	ll damleft[M];
	vi ans;	rep(i,0,n)
	{
		ll ind=index[i]-power[i];
		//test1(ind);
		ll ind2;
		ll low=0,high=i;
		while(low<=high)
		{
			ll mid=(low+high)/2;
			if(index[mid]>=ind)
			{
				ind2=mid;
				high=mid-1;
			}
			/*else if(index[mid]>ind)
			high=mid-1;*/
			else
			low=mid+1;
		}
		//test1(ind2);
		damleft[i]=i-ind2;
		if(ind2>0)
		damleft[i]+=damleft[ind2-1];
		ll damright=n-1-i;
		ans.pb(damleft[i]+damright);
		//test1(damleft[i]+damright);
	}
	sort(ans.begin(), ans.end());
	cout<<ans[0]<<endl;
}
		
	
		