#include <iostream>
#include <cstdio>
#include <cmath>
#include <string>
#include <algorithm>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <ctime>
#include <memory.h>
#include <assert.h>
#include <complex>
#include <ctime>  
#include <cstdlib>
using namespace std;

#pragma comment(linker, "/STACK:100000000")

#define mp make_pair
#define pb push_back
#define sz(x) (int)(x).size()
#define ll long long
#define ull unsigned long long


int mas[200100];

pair<int, int> v[200100];

int main() {
    //freopen("dijkstra.in", "rt", stdin);
    //freopen("dijkstra.out", "wt", stdout);
    
    int n, m, w;
    scanf("%d %d %d", &n, &m, &w);
    for(int i = 0; i < n; i++) scanf("%d", &mas[i]);

    int mini = 2e9;
    for(int i = 0; i < n; i++) mini = min(mini, mas[i]);
    int l = mini, r = mini + 200000;
    while(l < r) {
        int av = (l + r + 1) / 2;
        ll ccc = 0;
        int add = 0;
        int p = 0; // скидываем отсюда
        int size = 0; // номер первого неиспользуемого
        for(int i = 0; i < n; i++) {
            if(p < size) {
                if(i == v[p].first) {
                    add -= v[p].second;
                    p++;
                }
            }
            int diff = av - mas[i] - add;
            if(diff > 0) {
                v[size].first = i + w;
                v[size].second = diff;
                size++;
                add += diff;
                ccc += (ll)diff;
                if(ccc > (ll)m) break;
            }
        }

        if(ccc <= (ll)m) l = av;
        else r = av - 1;
    }
    printf("%d\n", l);

    return 0;
}