#include <bits/stdc++.h>
using namespace std;
#define ll  long long
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define MOD 1000000007
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);srand(time(NULL));
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
int main()
{
    ll t;
    cin >> t;
    while(t--)
    {
        string s;
        cin >> s;
        ll n = s.size();
        ll chk = 1;
        for(ll i=1;i<s.size();i++)
        {
            if(s[i]==s[i-1] && s[i]!='?')   
            {
                chk = 0;
                break;
            }
        }
        if(chk==0)   {cout<<"-1\n";continue;}
        else
        {
            for(ll i=0;i<n;i++)
            {
                if(s[i]=='?')
                {
                    if(i<n-1 && s[i+1]=='?')
                    {
                        if(i==0)    s[i] = 'a';
                        else 
                        {
                            char temp = s[i-1];
                            if(temp=='c')   temp = 'a';
                            else  temp++;
                            s[i] = temp;
                        }
                    }
                    else
                    {
                        for(char j='a';j!='d';j++)
                        {
                            if(i==0)
                            {
                                if(j!=s[i+1])  {s[i] = j;break;}
                            }
                            else if(i==n-1)
                            {
                                if(j!=s[i-1])  {s[i] = j;break;}
                            }
                            else 
                            {
                                if(j!=s[i-1] && j!=s[i+1])
                                {
                                    s[i] = j;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
            cout<<s<<'\n';
        }
    }
}