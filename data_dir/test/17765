#include<bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int> >

 
const int INF = 1e9+7;
const int MAXN = 2e5 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;



int n,m;
int x[100] , s[100] , l[100] , r[100];
long long dp[MAXN];
void solve(){
		

	cin>>n>>m;	
	for (int i=1; i<=n; i++){
		cin>>x[i]>>s[i];
		l[i] = x[i] - s[i];
		r[i] = x[i] + s[i];
	}	
	
	for (int i=1; i<=m; i++){
		dp[i] = i;
		for (int j=1; j<=n; j++){
			if (l[j] <= i && r[j] >= i) dp[i] = min(dp[i - 1] , dp[i]);
			else if (r[j] < i){
				int idx = max(0 , l[j] - (i - r[j]) - 1);
				dp[i] = min(dp[i] , dp[idx] + i - r[j]);
			}
		}
	}
	cout<<dp[m]<<endl;
}
 
 
int main() {
ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
cout.setf(ios::fixed), cout.precision(20);
 //freopen("perm.in", "r", stdin);
 //freopen("perm.out", "w", stdout);
 
int t;
t = 1;
	while (t > 0){
		t--;
		solve();
	}
 
return 0;
}
