#include <bits/stdc++.h>
#define LL long long
using namespace std;

const LL M = 1e9+7, N = 1e6+7;
LL fac[N];

void pre() {
    fac[0] = 1;
    for (LL i=1; i<N; i++)
        fac[i] = (fac[i-1] * i)%M;
}

LL power(LL a, LL p) {
    if (p==0)   return 1;
    LL ans = power(a, p/2);
    ans = (ans * ans)%M;
    if (p%2)    ans = (ans * a)%M;
    return ans;
}

LL inverse(LL a) {
    return power(a, M-2);
}

LL f(LL n, LL k) {
    assert(n>=k);
    LL ans = k;
    ans = (ans * power(n, n-k))%M;
    ans = (ans * fac[n-1])%M;
    ans = (ans * inverse(fac[n-k]))%M;
    return ans;
}

LL C(LL n, LL r) {
    if (r>n || r<0) return 0;
    LL num = fac[n];
    LL denom = (fac[r] * fac[n-r])%M;
    return (num*inverse(denom))%M;
}

int main() {
    pre();
    LL n, m;
    cin>>n>>m;

    LL ans = 0;
    for (LL d=2; d<=n; d++) {
        LL cur = f(n, d);
        cur = (cur * power(m, n-d))%M;
        cur = (cur * C(m-1, d-2))%M;
        ans = (ans + cur)%M;
    }
    LL denom = (n*(n-1))%M;
    ans = (ans * inverse(denom))%M;
    cout<<ans<<endl;
}
