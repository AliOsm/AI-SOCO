#include <bits/stdc++.h>

using namespace std;

int n;
int a[501];
int d[501][501];

int solve (int l, int r) {
    if (l > r) return 0;
    if (d[l][r]) return d[l][r];
    if (l == r) d[l][r] = 1;
    else if (l + 1 == r) {
        if (a[l] == a[r]) d[l][r] = 1;
        else d[l][r] = 2;
    }
    else {
        d[l][r] = min ({1 + solve (l + 1, r), 1 + solve (l, r - 1), (a[l] != a[r]) * 2 + solve (l + 1, r - 1)});
        for (int i = l;i <= r;i ++) {
            if (a[l] == a[i])
                d[l][r] = min (d[l][r], solve (l, i) + solve (i + 1, r));
        }
        for (int i = l;i <= r;i ++) {
            if (a[r] == a[i])
                d[l][r] = min (d[l][r], solve (l, i - 1) + solve (i, r));
        }
        //cout << l << ' ' << r << ' ' << d[l][r] << endl;
    }
    return d[l][r];
}

int main () {
    ios_base::sync_with_stdio (0);
    cin.tie (0), cout.tie (0);
    cin >> n;
    for (int i = 1;i <= n;i ++) {
        cin >> a[i];
    }
    cout << solve (1, n);
    return 0;
}