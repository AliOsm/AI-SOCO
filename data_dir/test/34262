#include <bits/stdc++.h>
using namespace std;

int n,In[30];
bool Free[30],Edge[30][30];
string s,rs="";
vector<int> g[30];

void DFS(int u)
{
    Free[u]=false;
    rs+=char(u+'a');
    for(int i=0; i<g[u].size(); i++)
        DFS(g[u][i]);
}

int main()
{
    ios_base::sync_with_stdio(false);
    //freopen("890D.INP","r",stdin);
    cin>>n;
    while(n--)
    {
        cin>>s;
        for(int i=0; i<s.size()-1; i++)
        {
            int u=s[i]-'a';
            int v=s[i+1]-'a';
            if(Edge[u][v]==false)
            {
                Edge[u][v]=true;
                In[v]++;
                g[u].push_back(v);
                Free[u]=true;
                Free[v]=true;
            }
        }
        Free[s.back()-'a']=true;
    }
    for(int i=0; i<26; i++)
        if(In[i]>1||g[i].size()>1)
        {
            cout<<"NO";
            return 0;
        }
    for(int i=0; i<26; i++)
        if(In[i]==0&&Free[i]==true)
            DFS(i);
    for(int i=0; i<26; i++)
        if(Free[i]==true)
        {
            cout<<"NO";
            return 0;
        }
    cout<<rs;
}
