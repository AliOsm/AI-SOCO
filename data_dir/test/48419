#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <cmath>
#include <ctime>
#include <map>
#include <iterator>
#include <queue>
#include <list>
#include <stack>
#include <set>

using namespace std;

typedef long long ll;
typedef long double ld;

const int NMax = 1000001;
const int INF = int(1e9);
const int cntTree = 262145;
const double eps = 1e-9;
const double PI = 3.141592653589793238462;
const int MOD = int(1e9 + 7);

#define MIN(x,y) ((x) > (y) ? (y) : (x))
#define MAX(x,y) ((x) > (y) ? (x) : (y))
#define SQR(x) ((x) * (x))
#define ABS(x) ((x) < (0) ? (-(x)) : (x))
#define SZ(x) (int) (x).size()

struct T
{
    string name;
    int key;
    void read() { cin >> name >> key;}
    bool operator < (const T &k) const
    {
        return (key < k.key);
    }
};

vector < T > res;
T p[3001];
int n;


int main()
{
    scanf("%i\n", &n);
    for (int i = 1;i <= n;i++) p[i].read();
    sort(p + 1,p + n + 1);
    for (int i = 1;i <= n;i++)
    {
        if (p[i].key >= i)
        {
            cout << -1;
            return 0;
        }
        T c;
        c.key = n - i + 1;
        c.name = p[i].name;
        res.insert(res.begin() + p[i].key,c);
    }
    for (int i = 0;i < SZ(res);i++) cout << res[i].name << " " << res[i].key << endl;
    
    return 0;
}
