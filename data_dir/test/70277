#include <bits/stdc++.h>
using namespace std;

const int N = 1010;

int n, k;
string s;
int dp[N][3*N];

int go(int i, int win) {
	int &ret = dp[i][win];
	if (ret != -1) return ret;

	if (i == n) {
		if (k == win-2000 or -k == win-2000) return ret=1;
		else return ret=0;
	}

	if (k == abs(win-2000)) return ret = 0;
	

	if (s[i] == 'W') ret = go(i+1, win+1);
	if (s[i] == 'L') ret = go(i+1, win-1);
	if (s[i] == 'D') ret = go(i+1, win);
	if (s[i] == '?') {
		int r1 = go(i+1, win+1);
		int r2 = go(i+1, win-1);
		int r3 = go(i+1, win);
		ret = r1 || r2 || r3;
	}

	return ret;
}

void print(int i, int win) {
	if (i == n) return;
	
	if (s[i] == 'W') {	
		cout << s[i];
		print(i+1, win+1);
	}
	if (s[i] == 'L') {	
		cout << s[i];
		print(i+1, win-1);
	}
	if (s[i] == 'D') {	
		cout << s[i];
		print(i+1, win);
	}

	if (s[i] == '?') {
		if (dp[i+1][win+1] == 1) {
			cout << 'W';
			print(i+1, win+1);
		} else if (dp[i+1][win-1] == 1) {
			cout << 'L';
			print(i+1, win-1);
		} else if (dp[i+1][win] == 1) {
			cout << 'D';
			print(i+1, win);
		}
	}
}

int main() {
	memset(dp, -1, sizeof dp);
	cin >> n >> k;
	cin >> s;

	int ret = go(0, 2000);
	if (!ret) cout << "NO" << endl;
	else print(0,2000);
	cout << endl;

	return 0;
}
