#include<bits/stdc++.h>
#define pb push_back
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define int long long
#define pii pair<int,int>
#define all(x) x.begin(),x.end()
#define lb lower_bound
#define ld long double
using namespace std;
const int N = 3e5+1;
vector<pii> adj[N];
int dp[N];
int a[N];
int ans = 0;
void dfs (int src,int par){
	dp[src] = a[src];
	multiset<int,greater<int>> st;
	for(auto it:adj[src]){
		if(it.first!=par){
			dfs(it.first,src);
			dp[src] = max(dp[src],a[src] - it.second + dp[it.first]);
			st.insert(dp[it.first] - it.second);
		}
	}
	int nn = st.size();
	if(nn>=2){
		int fmx = *st.begin();
		st.erase(st.begin());
		int smx = *st.begin();
		ans = max(ans,fmx + smx + a[src]);
	}
	ans = max(ans,dp[src]);	
}
signed main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int n;
	cin>>n;
	for(int i = 1;i<=n;i++)
		cin>>a[i];
	for(int i = 1;i<=n-1;i++){
		int u,v,w;
		cin>>u>>v>>w;
		adj[u].pb({v,w});
		adj[v].pb({u,w});
	}
	dfs(1,-1);
	cout<<ans;
}