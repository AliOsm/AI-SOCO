#include <bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
long double pi = 3.14159265358979323;

const double EPS = 1e-12;
const int N = 1e6 + 5;
const int mod = 998244353;




int main()
{
    fast;
    ll n ;
    cin >> n ;
    string s  ,t;
    cin >> s >> t;
   // st(s) , st(t);
    vector < ll > v[26] , v1[26];
    vector < ll > vs , vt;
    vector < pair < ll , ll > > vp;
    for(int i = 0 ; i < n ; i++)
    {
    	ll l = s[i] - 'a';
    	if(s[i] != '?')
    		v[l].pb(i);
    	else
    		vs.pb(i);

    }
      for(int i = 0 ; i < n ; i++)
    {
    	ll l = t[i] - 'a';
    	if(t[i] != '?')
    		v1[l].pb(i);
    	else
    	vt.pb(i);
    }
    for(int i = 0 ; i <= 25 ; i++ )
    {
    	
    	if(v[i].size() <= v1[i].size())
    	{
    		for(int j = 0 ; j < v[i].size() ; j++)
    		{
    			vp.pb({v[i][j] , v1[i][j]});
    		}
    		if(!vs.empty()){
    		for(int j = v[i].size() ; j < v1[i].size() ; j++)
    		{
    			if(!vs.empty())
    			vp.pb({vs.back() , v1[i][j]});
    			else
    				break;
    			vs.pop_back();
    		}

    	}
    	}
    	else
    	{
    		for(int j = 0 ; j < v1[i].size() ; j++)
    		{
    			vp.pb({v[i][j] , v1[i][j]});
    		}
    		if(!vt.empty()){
    		for(int j = v1[i].size() ; j < v[i].size() ; j++)
    		{
    			if(!vt.empty())
    			vp.pb({ v[i][j] ,vt.back()});
    			else
    				break;
    			vt.pop_back();
    		}

    	}
    	}
    }
 	//cout << v[0].size() << " ";
    if(!vs.empty() && !vt.empty())
    {
    //	cout << vs.size() << " ";
    	ll l = min(vs.size() , vt.size());
    	for(int i = 0 ; i < l ; i++)
    	{
    	//	cout << vs.size() << " " << vt.size() << "\n";
    		vp.pb({vs.back() , vt.back()});
    		vs.pop_back() , vt.pop_back();
    	}
    }
    cout << vp.size() << "\n";
    for(auto it : vp)
    {
    	cout << it.fe  + 1 << " " << it.se  + 1<< "\n";
    }













    
    return 0;
    
}