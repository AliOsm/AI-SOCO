#include <bits/stdc++.h>
using namespace std;
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)
#define ll long long

int const N = 200, md = 1e9 + 7;
char s[N + 1];
int n, dp[N + 1][N + 1][N + 1], kmp[N + 1], m, dp2[N + 1][2];

inline void ad(int &x, int y) { if ((x += y) >= md)x -= md; }

int gt(int i, char c){
	if (i == m)return m;
	int id = c == ')' ? 0 : 1;
	if (dp2[i][id] != -1)return dp2[i][id];
	int oi = i;
	while (i && s[i] != c)i = kmp[i - 1];
	if (c == s[i])++i;
	return dp2[oi][id] = i;
}

int main(){
	scanf("%d%s", &n, s);
	n <<= 1;
	m = strlen(s);
	if (m > n) { printf("0\n"); return 0; }
	int j = 0;
	f(i, 1, m){
		while (j && s[j] != s[i])j = kmp[j - 1];
		if (s[j] == s[i])++j;
		kmp[i] = j;
	}
	f(i, 0, m + 1)f(j, 0, 2)dp2[i][j] = -1;
	dp[0][0][0] = 1;
	f(i, 0, n)f(j, 0, n)f(k, 0, m + 1){
		int &r = dp[i][j][k];
		if (r == 0)continue;
		if (j)ad(dp[i + 1][j - 1][gt(k, ')')], r);
		ad(dp[i + 1][j + 1][gt(k, '(')], r);
	}
	printf("%d\n", dp[n][0][m]);
}