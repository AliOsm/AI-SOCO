/* In the name of Allah */
#include <bits/stdc++.h>
using namespace std;

const int N = 1500 + 5;
int n, s, m, k, a[N], w[N];
int l[N], r[N], dp[N][N];
vector<int> vec[N];

bool check(int x) {
	memset(w, 0, sizeof w);
	memset(dp, 0, sizeof dp);
	for (int i = 1; i <= n; i++) {
		if (a[i] <= x)
			for (auto p: vec[i])
				w[p]++;
		int mn = 0;
		for (auto p: vec[i])
			if (l[p] < l[mn])
				mn = p;
		for (int j = 1; j <= m; j++)
			dp[i][j] = max(dp[i - 1][j], dp[l[mn] - 1][j - 1] + w[mn]);
	}
	return dp[n][m] >= k;
}

void readInput() {
	cin >> n >> s >> m >> k;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	for (int i = 1; i <= s; i++) {
		cin >> l[i] >> r[i];
		for (int j = l[i]; j <= r[i]; j++)
			vec[j].push_back(i);
	}
	l[0] = n + 2;
}

void solve() {
	int L = 0, R = 1e9 + 10;
	while (L + 1 < R) {
		int mid = L + R >> 1;
		(check(mid)? R: L) = mid;
	}
	cout << (R <= 1e9? R: -1) << endl;
}

int main() {
	ios_base:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	readInput(), solve();
	return 0;
}
