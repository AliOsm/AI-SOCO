#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <cmath>
#include <ctime>
#include <map>
#include <iterator>
#include <queue>
#include <list>
#include <stack>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef list < int > :: iterator IteratorList;

const int NMax = 100011;
const int INF = (int) 1e9;
const int cntTree = 2 * 262145;
const ld eps = 1e-9;
const double PI = 3.141592653589793238462;
const int MD = (int) 1e7 + 9;

#define MIN(x,y) ((x) > (y) ? (y) : (x))
#define MAX(x,y) ((x) > (y) ? (x) : (y))
#define SQR(x) ((x) * (x))
#define ABS(x) ((x) < (0) ? (-(x)) : (x))
#define SZ(x) (int) (x).size()

map < string, int > a;
string s;
int n;
char ch;
int l[NMax], r[NMax];

char lowercase(char c)
{
    if (c >= 'A' && c <= 'Z') return c - 'A' + 'a';
    else return c;
}

char uppercase(char c)
{
    if (c >= 'a' && c <= 'z') return c - 'a' + 'A';
    else return c;
}


void f(string &s)
{
    for (int i = 0;i < SZ(s);i++)
        if (s[i] >= 'A' && s[i] <= 'Z') s[i] = lowercase(s[i]);
}

char f1(char c1,char c2)
{
    if (c1 == lowercase(c1)) return c2;
    else return uppercase(c2);
}

int main()
{
    scanf("%i", &n);
    for (int i = 1;i <= n;i++)
    {
        cin >> s;
        f(s);
        a[s]++;
    }
    cin >> s >> ch;
    char ch1 = 'a';
    for (ch1 = 'a';ch1 <= 'z';ch1++)
        if (ch1 != ch) break;
    int m = 0;
    for (int i = 0;i < SZ(s);i++)
    {
        string w = "";
        for (int j = i;j < SZ(s);j++)
        {
            w += lowercase(s[j]);
            if (a[w] > 0)
            {
                l[++m] = i;
                r[m] = j;
            }
        }
    }
    for (int i = 0;i < SZ(s);i++)
    {
        bool flag = false;
        for (int j = 1;j <= m;j++)
            if (i >= l[j] && i <= r[j]) flag = true;
        if (!flag) continue;
        if (lowercase(s[i]) != ch) s[i] = f1(s[i],ch);
        else s[i] = f1(s[i],ch1);
    }
    cout << s << endl;
    return 0;
}
