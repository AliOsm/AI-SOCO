#include<bits/stdc++.h>

using namespace std;

#define pb push_back
const int maxi = 3e6+10;

int h, g,n ,m;
int a[maxi];
int dp[maxi], treba[maxi];
int poz[maxi];
vector<int> ans;
long long sum = 0;
int bad = 0;
int c[maxi];

void obrisi(int x, int val)
{
// cout<<"USO "<<x<<endl;
    if (!a[2*x] && !a[2*x+1]){
        a[x] = 0;
        dp[x] = 0;
        return;
    }

    if (a[2*x]>a[2*x+1])
    {
        a[x] = a[2*x];
        poz[a[x]] = x;
        dp[x]--;
        obrisi(2*x, 0);
    } else
    {
        a[x] = a[2*x+1];
        poz[a[x]] = x;
        dp[x]--;
        obrisi(2*x+1, 0);
    }

    if (val==1)
    {
        x/=2;
        while(x>0)
        {
            dp[x]--;
            x/=2;
        }
    }
}


void _try(int x, int val)
{
    if (!a[2*x] && !a[2*x+1]){
        if (treba[x] > 0) bad = 1;
        return;
    }

    if (a[2*x]>a[2*x+1])
    {
        _try(2*x, 0);
        if (dp[x]-1<treba[x]) bad = 1;
    } else
    {
        _try(2*x + 1, 0);
        if (dp[x]-1<treba[x]) bad = 1;
    }

    if (val==1)
    {
        x/=2;
        while(x>0)
        {
           if (dp[x] - 1 < treba[x]) bad = 1;
           x/=2;
        }
    }
}



void solve()
{
    scanf("%d%d",&h,&g);

    n = (1<<h) - 1;
    m = (1<<g) -1;
    sum = 0;
    ans.clear();
    int m1 = n - m;

    for (int i =1;i<=n;i++){
        scanf("%lld",&a[i]);
        c[i] = a[i];
        sum+=a[i];
        poz[a[i]] = i;
        dp[i]  = 1;
    }

   for (int i =1;i<=2*n+1;i++)
        treba[i] = 0;

   for (int i= n+1;i<=2*n+1;i++){
    dp[i] = 0;
    a[i] = 0;
   }

  for (int i =n;i>0;i--)
      dp[i] +=dp[2*i] + dp[2*i+1];

  for (int i =1;i<=m;i++)
    treba[i] = 1;

  for (int i =m;i>0;i--)
    if (2*i+1<=m) treba[i]+=treba[2*i] + treba[2*i+1];

   sort(c+1, c+n+1);
   reverse(c+1, c+n+1);

   for (int i =1;i<=n && m1;i++)
   {
       bad = 0;
       _try(poz[c[i]], 1);

       //if (i==6) cout<<bad<<" "<<endl;
       if (!bad)
       {
           sum-=c[i];
           m1--;
           ans.pb(poz[c[i]]);
           obrisi(poz[c[i]], 1);
       }

   }

   printf("%lld\n",sum);

   for (auto i:ans)
    printf("%d ",i);
   printf("\n");
}

int main()
{
   int t;
   cin>>t;

   while(t--)
    solve();
}
