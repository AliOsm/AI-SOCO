#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>; using vi = vector<int>;
template <class T> istream &operator>>(istream &, vector<T> &);
template <class T> ostream &operator<<(ostream &, const vector<T> &);
using ll = long long; using vll = vector<long long>;
constexpr int INF = 0x3f3f3f3f; constexpr ll BINF = 0x3f3f3f3f3f3f3f3fLL;

int solve() {
	int n, m, q; cin >> n >> m >> q;
	vi p(n); cin >> p;
	vi mp(n + 1); for (int i=0;i<n;i++) mp[p[i]] = i;
	vi a(m); cin >> a; for (int &x : a) x = mp[x];

	vi tmplst(n, -1), lst(m, -1);
	for (int i=0;i<m;i++) {
		int tar = (a[i] + n - 1) % n;
		if (tmplst[tar] != -1) lst[i] = tmplst[tar];
		tmplst[a[i]] = i;
	}

	const int MXL = 20;
        vector<vi> dp(m, vi(MXL, -1));
        for (int i=0;i<m;i++) dp[i][0] = lst[i];
        for (int j=1;j<MXL;j++) for (int i=0;i<m;i++)
                dp[i][j] = dp[i][j - 1] == -1 ? -1 : dp[dp[i][j - 1]][j - 1];
	
	vi cool(m); iota(cool.begin(), cool.end(), 0);
	for (int i=0;i<m;i++) for (int p=n-1,j=0;p;p>>=1,j++) if (p & 1) if (cool[i] != -1) cool[i] = dp[cool[i]][j]; else break;
	
	for (int i=1;i<m;i++) cool[i] = max(cool[i], cool[i - 1]);
	for (int i=0;i<q;i++) {
		int l, r; cin >> l >> r; l--, r--;
		cout << (cool[r] >= l);
	}
	cout << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	// int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}

template <class T> istream &operator>>(istream &is, vector<T> &v) {
	for (auto it=v.begin();it!=v.end();++it) is >> *it;
	return is;
}

template <class T> ostream &operator<<(ostream &os, const vector<T> &v) {
	for (auto it=v.begin();it!=v.end();) { os << *it; os << " \n"[++it==v.end()]; }
	return os;
}