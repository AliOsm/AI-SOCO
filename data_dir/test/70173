# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define scn(x) scanf("%I64d",&x)
# define scan(x) scanf("%d",&x)
# define print(x) printf("%d ",x)
# define prnt(x) printf("%I64d ",x);
# define eol printf("\n")
# define IOS ios_base :: sync_with_stdio(0)
# define pe "Possible"
# define ie "Impossible"
# define halt(...) {fo << (__VA_ARGS__) << '\n';exit(0);}
# define rep(n) for (int qwerty = 1;qwerty <= n;++qwerty)
# define pp(n) cerr << #n << " = " << n << '\n'
# define ppp(v) for (auto it : v) cerr << it << ' ';cerr << '\n'
# define aprint(x,y,z) for (int i = x;i <= y;++i) cerr << z[i] << ' ';cerr << '\n'
vector < pair < int , int > > v[1 << 20];
int dp[1 << 20];
const int mod = 1e9 + 7;
int D_26[1 << 20];
int D_25[1 << 20];
int f[1 << 20];
int c[1 << 20];
int ans[1 << 20];
int main(void)
{
    #ifdef CF
    ifstream fi("input");
    #endif // CF
    srand(time(0));
    IOS;
    int t;
    fi>>t;
    D_26[0] = D_25[0] = 1;
    auto pow = [&](int a,int b,int mod)
    {
        int ans = 1;
        while (b)
        {
            if (b&1) ans = (1ll * ans * a) % mod;
            a = (1ll * a * a) % mod;
            b /= 2;
        }
        return ans;
    };
    auto C = [&](int n,int k)
    {
        int ans = f[n];
        ans = (1ll * ans * c[k]) % mod;
        ans = (1ll * ans * c[n-k]) % mod;
        return ans;
    };
    f[0] = c[0] = 1;
    for (int i = 1;i <= 1e5;++i)
    {
        f[i] = (1ll * f[i-1] * i) % mod;
        c[i] = pow(f[i],mod - 2,mod);
    }
    for (int i = 1;i <= 1e6;++i)
    {
        D_25[i] = (25ll * D_25[i-1]) % mod;
        D_26[i] = (26ll * D_26[i-1]) % mod;
    }
    string str;
    fi>>str;
    int now = str.length();
    rep(t)
    {
        int op,val;
        fi>>op;
        if (op == 1) fi>>str,now = str.length();
        else fi>>val,v[now].push_back({val,qwerty});
    }
    for (int i = 1;i <= 1e5;++i) ans[i] = -1;
    for (int i = 1;i <= 1e5;++i)
        if (!v[i].empty())
        {
            dp[i] = 1;
            for (int k = i + 1;k <= 1e5;++k)
                dp[k] = (dp[k-1] * 26ll + 1ll * C(k - 1,i - 1) * D_25[k - i]) % mod;
            for (auto it : v[i])
                if (it.x >= i) ans[it.y] = dp[it.x];
                else ans[it.y] = 0;
        }
    for (int i = 1;i <= t;++i) if (ans[i] != -1) fo << ans[i]  << '\n';
    return 0;
}


