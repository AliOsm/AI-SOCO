/*  */
#include <iostream>
#include <sstream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 2e5+5;
int a[maxn], b[maxn];
// int nxt[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif

	int n;
	__int64 ans = 0, tmp;
	int mn = INT_MAX;

	cin >> n;

	rep(i, 0, n) {
		cin >> a[i];
		mn = min(mn, a[i]);
		// nxt[i] = i + 1;
	}
	b[n] = 0;

	int m = 0;
	rep(i, 0, n) {
		if (a[i] == mn)
			b[m++] = i;
	}

	if (m == 1) {
		ans = 1LL * mn * n + n - 1;
		cout << ans << endl;
		return 0;
	}

	rep(i, 1, m) {
		tmp = b[i] - b[i-1] - 1;
		ans = max(ans, tmp);
	}

	tmp = n-1-b[m-1] + b[0];
	ans = max(ans, tmp);

	ans += 1LL * mn * n;

	cout << ans << endl;

	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif

	return 0;
}
