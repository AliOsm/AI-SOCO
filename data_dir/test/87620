#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define pp pair<int, int>
#define ppl pair<int, ll>
#define ppll pair<ll, ll>
#define ppx pair<pp, int>
#define fi first
#define se second
#define MAXN 1000000000000001
typedef long long ll;
using namespace std;
int n, m, k;
ll dp[(1 << 18) + 1][20];
int a[20];
int f[20][20];
vector <int> nb[20];

void bitOn(int &x, int k)
{
    x = (x ^ (1 << k));
}

int main()
{
    ios::sync_with_stdio(false);
    cin>>n>>m>>k;
    for (int i = 0; i < n; i++) cin>>a[i];
    for (int i = 1; i <= k; i++)
    {
        int u, v, c;
        cin>>u>>v>>c;
        f[u - 1][v - 1] = c;
    }

    for (int i = 0; i < n; i++)
    for (int j = 0; j < (1 << n); j++)
        dp[j][i] = -MAXN;

    for (int i = 0; i < n; i++)
        dp[(1 << i)][i] = a[i];

    for (int i = 1; i < (1 << n); i++)
    {
        int d = __builtin_popcount(i);
        nb[d].pb(i);
    }

    for (int k = 1; k < m; k++)
    for (int h = 0; h < nb[k].size(); h++)
    for (int i = 0; i < n; i++)
    {
        int kk = nb[k][h];
        if ((kk >> i) & 1)
        {
            for (int j = 0; j < n; j++)
                if (((kk >> j) & 1) == 0)
                {
                    int ns = kk;
                    bitOn(ns, j);
                    dp[ns][j] = max(dp[ns][j], dp[kk][i] + a[j] + f[i][j]);
                }
        }
    }

    ll ans = - MAXN;
    for (int h = 0; h < nb[m].size(); h++)
    for (int i = 0; i < n; i++)
        ans = max(ans, dp[nb[m][h]][i]);


    cout<<ans;
    return 0;
}
