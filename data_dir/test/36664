#include<bits/stdc++.h>
using namespace std;
const int N = 1e5 + 10, NX = 1e9 + 7;
int n, m, r, t, a, b, c, st, cyc, A[N], D[N], M[N][2], MM[N], P[N][2];
vector < int > V[N], VV[N], S;
void DFS(int v)
{
    if (D[v] == 0)
        M[v][0] = 1;
    for (auto X : V[v])
    {
        if (M[v][0] && (!M[X][1]))
            M[X][1] = 1, P[X][1] = v, DFS(X);
        if (M[v][1] && (!M[X][0]))
            M[X][0] = 1, P[X][0] = v, DFS(X);
    }
}
void DFS2(int v)
{
    MM[v] = 1;
    for (auto X : VV[v])
    {
        if (MM[X] == 1)
            cyc = 1;
        if (!MM[X])
            DFS2(X);
    }
    MM[v] = 2;
}
int main()
{
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++)
    {
        scanf("%d", &D[i]);
        if (!D[i])
            S.push_back(i);
        for (int j = 0; j < D[i]; j++)
            scanf("%d", &t), V[t].push_back(i), VV[i].push_back(t);
    }
    scanf("%d", &st);
    for (auto X : S)
        DFS(X);
    DFS2(st);
    if (M[st][1] == 0 && cyc == 0)
        return !printf("Lose");
    if (M[st][1] == 0)
        return !printf("Draw");
    printf("Win\n");
    while (st != 0)
    {
        printf("%d ", st);
        st = P[st][1];
        printf("%d ", st);
        st = P[st][0];
    }
    return (0);
}

