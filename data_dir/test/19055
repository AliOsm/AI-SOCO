#include <bits/stdc++.h>
using namespace std;

using ll = long long;

const int mx = 1e5 + 10;
vector < pair < int, int > > G[mx];
bool vis[mx];
int d[mx];
int p[mx];

struct nd {
    int valu, par, id;
    bool operator <(const nd &a ) const{
        return valu < a.valu;
    }
};

vector < nd > vp;
vector < int > ans;

bool dfs( int u, int c, int par ) {
    vis[u] = 1;
    d[u] = c;
    p[u] = par;
    bool ret = 0;
    for( auto xx: G[u] ) {
        if( !vis[xx.first] ) ret |= dfs( xx.first, xx.second, u );
    }
    if( ret )  return 1;
    if( !c ) return 0;
    ans.push_back( u );
    return 1;
}

void mark( int u ) {
    if( p[u] != -1 && !vis[ p[u] ] ) mark ( p[u] );
    vis[ u ] = 1;
}

int main() {
   int n, x, y, c;
   while( cin >> n ) {
       for( int i=0; i<mx; i++ ) G[i].clear();
       vp.clear();
       ans.clear();
       for( int i=0; i<n-1; i++ ) {
           cin >> x >> y >> c;
           G[x].push_back( { y, c-1 } );
           G[y].push_back( { x, c-1 } );
       }
       memset( vis, 0, sizeof vis );
       memset( d, 0, sizeof d );
       memset( p, 0, sizeof p );
       dfs( 1, 0, -1 );
       cout << ans.size() << "\n";
       for( int v: ans ) cout << v << " "; cout << "\n";
   }
   return 0;
}