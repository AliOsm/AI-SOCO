#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=2e5+7;
const double eps=0.00000001;
LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a,T b){T ret=1;for (;b;b>>=1ll,a=a*a%M) ret=1ll*ret*a%M;return ret;}

//4倍数。。找规律，杨辉三角，杨辉三角=C(k,n)
LL inv[maxn];
LL fac[maxn];
inline LL C(int k,int n){return fac[n]*inv[k]%M*inv[n-k]%M;}
LL a[maxn],b[maxn];
int n,m,nn;
int i,j,k;
bool mark;
LL ans;
int main(){
	fac[0]=1;
	FOR(i,1,maxn) fac[i]=i*fac[i-1]%M;
	inv[0]=inv[1]=1;
	FOR(i,2,maxn) inv[i]=(M-M/i)*inv[M%i]%M;
	FOR(i,1,maxn) inv[i]=inv[i]*inv[i-1]%M;
	scanf("%d",&n);
	FOR(i,1,n) scanf("%d",&a[i]);
	if (n>4){
		m=(n-1)/4;
		nn=n-m*4;
		m=m*2;
		FOR(i,1,nn){
			FOR(j,0,m) b[i]=(b[i]+a[i+j*2]%M*C(j,m))%M;
		}
		n=nn;
		FOR(i,1,nn) a[i]=b[i];
	}
	while(n>1){
		n--;
		FOR(i,1,n){
			if (mark) b[i]=a[i]-a[i+1];
			else b[i]=a[i]+a[i+1];
			mark^=1; 
		}
		FOR(i,1,n) a[i]=b[i]%M;
	}
	printf("%d",(a[1]+M)%M);
}
/*
*/