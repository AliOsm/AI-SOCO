#include <bits/stdc++.h>

using namespace std ;

const int MAX = 110 ;

int arr[MAX] , mark[MAX] ;
int n ;
int dp[MAX][MAX][MAX][2] ;

int match(int x , int y)
{
	if(x == y)
		return 0 ;
	return 1 ;
}

int solve(int idx , int o , int e , bool prv)
{
	if(idx == n)
		return 0 ;
	int &ret = dp[idx][o][e][prv] ;
	if(ret != -1)
		return ret ;
	ret = 1000 ;
	if(arr[idx] != 0)
		ret = solve(idx+1 , o , e , (arr[idx] & 1)) + match((arr[idx] & 1) , prv) ;
	else
	{
		if(o > 0)
			ret = min(ret , solve(idx+1 , o-1 , e , 1) + match(1 , prv)) ;
		if(e > 0)
			ret = min(ret , solve(idx+1 , o , e-1 , 0)+ match(0 , prv)) ;
	}
	return ret ;
}

int main()
{
	memset(dp , -1 , sizeof(dp)) ;
	ios_base::sync_with_stdio(0) ;
	cin.tie(0) ;
	cin>>n ;
	for(int i = 0 ; i < n ; ++i)
	{
		cin>>arr[i] ;
		mark[arr[i]] = 1 ;
	}
	int o = 0 , e = 0 ;
	for(int i = 1 ; i <= n;  ++i)
	{
		if(mark[i] == 0 && i % 2 == 0)
			e++ ;
		else if(mark[i] == 0)
			o++ ;
	}
	int ans = 1e9 ;
	if(arr[0] == 0)
	{
		if(o > 0)
			ans = min(ans , solve(1 , o-1 , e , 1)) ;
		if(e > 0)
			ans = min(ans , solve(1 , o , e-1 , 0)) ;
	}
	else
		ans = min(ans , solve(1 , o , e , (arr[0] & 1))) ;
	return cout<<ans<<"\n" , 0 ;
}		