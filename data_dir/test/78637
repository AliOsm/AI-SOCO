#include <bits/stdc++.h>
using namespace std;
#define oo 1000000010
#define mod 998244353
const int N = 200010;
int n , arr[N];
string tmp;

vector< int > v;

string s[N];

int vvv;

int low , high , mid , res;

int get_index(int i){
    low = 0 , high = (int)v.size() - 1 , res = (int)v.size();
    while(high >= low){
        mid = (low + high) / 2;
        if(s[v[mid]] >= s[i]){
            high = mid - 1;
            res = mid;
        }
        else
            low = mid + 1;
    }
    return res;
}

int cur;

inline void add(int i){
    cur = get_index(i);
    v.push_back(0);
    for(int i = (int)v.size() - 1;i > cur;i--){
        v[i] = v[i - 1];
    }
    v[cur] = i;
}

inline void remove(int i){
    for(int j = i;j < (int)v.size() - 1;j++){
        v[j] = v[j + 1];
    }
    v.pop_back();
}

int main(){
    scanf("%d",&n);
    for(int i = 0;i < n;i++){
        scanf("%d",&arr[i]);
    }
    s[0] = "0";
    s[1] = "1";
    arr[0]--;
    v.push_back(0);
    v.push_back(1);
    int cur;
    for(int i = 1;i < n;i++){
        tmp.clear();
        for(int j = 0 ;j < i;j++){
            if(arr[j] == 0)
                tmp += '0';
            else{
                arr[j]--;
                tmp += '1';
            }
        }
        s[i + 1] = tmp;
        cur = get_index(i + 1);
        if(cur < (int)v.size() && s[v[cur]] == s[i + 1]){
            vvv = v[cur];
            s[vvv] += '0';
            s[i + 1] += '1';
            arr[i]--;
            remove(cur);
            for(int j = (int)v.size() - 1;j >= 0;j--){
                if(arr[i] > 0){
                    s[v[j]] += '1';
                    arr[i]--;
                }
                else
                    s[v[j]] += '0';
            }
            add(vvv);
            add(i + 1);
        }
        else{
            add(i + 1);
            for(int j = (int)v.size() - 1;j >= 0;j--){
                if(arr[i] > 0){
                    s[v[j]] += '1';
                    arr[i]--;
                }
                else
                    s[v[j]] += '0';
            }
        }
    }
    printf("%d\n",n + 1);
    for(int i = 0 ; i < (int)v.size();i++){
        puts(s[v[i]].c_str());
    }
    return 0;
}
