#include <bits/stdc++.h>
#define clr(x) memset((x), 0, sizeof((x)))
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp std::make_pair
#define x first
#define y second

typedef std::pair<int, int> PII;
typedef int64_t ll;
typedef std::pair<ll, ll> PLL;
typedef long double ld;
typedef std::pair<ld, ld> PLD;
typedef std::pair<double, double> PDD;
using namespace std;

int nxt() {
    int a = 0;
    char c = getchar();
    while (!isdigit(c) && c != '-') {
        c = getchar();
    }
    char minus = 0;
    if (c == '-') {
        minus = 1;
        c = getchar();
    }
    while (isdigit(c)) {
        a = a * 10 + c - '0';
        c = getchar();
    }
    return (minus ? -a : a);
}


inline long long gcd(long long a, long long b) {
    while (b > 0) {
        a %= b;
        swap(a, b);
    }
    return a;
}

void solve() {
    long long t, w, b;
    cin >> t >> w >> b;
    if (w == b) {
        cout << "1/1\n";
        return;
    }
    long long g = gcd(w, b);
    long double lcmdo = (w / g) * ((long double)b);
    long long lcm = (w / g) * b;
    long long p = 0, q = t;
    if (lcmdo > t + 1e18 || lcm > t) {
        p = min(t, min(w, b) - 1);
    } else {
        long long k = t / lcm;
        p = k * min(w, b) - 1;
        long long qw = k * lcm;
        p += min(min(w, b), t - qw + 1);
    }
    long long gg = gcd(p, q);
    p /= gg;
    q /= gg;
    cout << p << "/" << q << "\n";
}


int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    double cl0 = clock();
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);



    int t = 1;//nxt();
    for (int i = 0; i < t; ++i) {
        solve();
    }

#ifdef LOCAL
    cerr << "time: " << (clock() - cl0) / CLOCKS_PER_SEC << endl;
#endif
}