#include <iostream>
#include <deque>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <climits>
using namespace std;

bool used[2000];

int main(){
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	vector < pair < pair <int, int>, pair <int, int> > > v(n);
	for(int i = 0; i < n; ++i) {
		cin >> v[i].first.first >> v[i].first.second >> v[i].second.first;
		v[i].second.second = i + 1;
	}
	sort(v.begin(), v.end());
	map < pair <int, int>,  vector <int> > m;
	for(int i = 0; i < n; ++i) {
		m[make_pair(v[i].first.first, v[i].first.second)].push_back(v[i].second.second);
	}
	map <int, vector <int> > m1;
	while(!m.empty()) {
		vector <int> k = m.begin() -> second;
		for(int i = 0; i < k.size() - 1; i += 2) {
			cout << k[i] << " " << k[i + 1] << endl;
		}
		if(k.size() & 1) {
			m1[m.begin() -> first.first].push_back(k[k.size() - 1]);
		}
		m.erase(m.begin());
	}
	vector <int> t;
	while(!m1.empty()) {
		vector <int> k = m1.begin() -> second;
		for(int i = 0; i < k.size() - 1; i += 2) {
			cout << k[i] << " " << k[i + 1] << endl;
		}
		if(k.size() & 1) {
			t.push_back(k[k.size() - 1]);
		}
		m1.erase(m1.begin());
	}
	for(int i = 0; i < t.size(); i += 2) {
		cout << t[i] << " " << t[i + 1] << endl;
	}
	return  0;
}