/*
Submitted With (^^) by -> Hossam ^_^
_____________________
|     ___     ___     |
|    (^_^)   (^_^)    |
|   /( | )\_/( | )\   |
|_____|_|_____|_|_____|
*/

#include <bits/stdc++.h>

using namespace std;

inline void prep()
{
    cin.tie(0);
    cin.sync_with_stdio(0); 
};

#define X first
#define Y second
#define ll long long
#define inf (0x7fffffffffffffff)
#define all(x) x.begin(), x.end()
#define debug(x) cerr << #x << " = " << (x) << " ";
#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;

// const int mod = (int)1e9 + 7;
const int mod = 998244353;
const int MX = (int)1e6 + 20;

int main()
{
    prep();

    srand(time(0));

    int a, b, x;
    cin >> a >> b >> x;

    int n = a + b;
    
    int req_X = x + 1; // number of alternating components

    string res;

    if(a > b){
        for(int i = 1; i <= x; ++i) res += '0' + (i & 1); // discards the first 0 componnet
        a -= x / 2;
        b -= req_X / 2;
        res = string(a, '0') + string(b, '1') + res;
    }
    else{
        for(int i = 0; i < x; ++i) res += '0' + (i & 1); // discards the first 1 component
        a -= req_X / 2;
        b -= x / 2;
        res = string(b, '1') + string(a, '0') + res;
    }

    cout << res << endl;

    // ZXC
    return 0;
}