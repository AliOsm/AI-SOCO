#include <bits/stdc++.h>
using namespace std;
// __builtin_popcount

vector <int> u;
vector <int> c(100000);
multiset <int> F;

int main(){
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	u.resize(n);
	int k = 0;
	for (int i = 0; i < n; i++){
		cin >> u[i];
		u[i] --;
		c[u[i]] ++;
		if (c[u[i]] == 1)
			F.insert(1);
		else{
			F.erase(F.find(c[u[i]] - 1));
			F.insert(c[u[i]]);
		}
		// cout << 1 << endl;
		// F.clear();
		// for (int j = 0; j < 10; j++){
			// if (c[j])
				// F.push_back(c[j]);
		// }
		// if (F.size() == 1)
			// F.push_back(0);
		// sort(F.begin(), F.end());
		// cout << F.size() << i << endl;
		auto x1 = F.end();
		x1 --;
		// x1 += F.size() - 1;
		auto x2 = x1;
		if (F.size() >= 2)
			x1 --;
		auto x3 = x1;
		auto x4 = F.begin();
		x4 ++;
		// cout << *x1 << endl;
		// cout << *x2 << endl;
		// cout << *x3 << endl;
		// cout << *x4 << endl;
		// cout << *(F.begin()) << endl;
		if (F.size() == 1 || (*(F.begin()) == *x3 && *x2 == *(F.begin()) + 1) || (*(F.begin()) == 1 && *x4 == *x2)){
			k = i + 1;
		}
		// cout << k << endl;
	}
	cout << k;
}