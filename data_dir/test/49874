#include <bits/stdc++.h>
using namespace std;
#define oo 20000000
#define mod 1000000007
const int N = 200010;
int n  , cur , sum = 0;
char tmpread[N];
string s;
bool good[N] , curgood[N];;
vector< int > g[N] , g2[N];

bool get(int start,int inc){
    int sum = s[start] - '0';
    int cur = start + inc;
    if(cur >= n) cur -= n;
    while(cur != start){
        sum += s[cur] - '0';
        cur += inc;
        if(cur >= n)
            cur -= n;
    }
    return ((sum & 1) == 0);
}

int main(){
    scanf("%d",&n);
    scanf("%s",tmpread);
    s = (string)tmpread;
    for(int i = 1;i <= n;i++){
        sum += s[i - 1] - '0';
        curgood[i] = good[i] = true;
        cur = __gcd(n , i);
        for(int j = 0 ;j < cur;j++){
            g2[j].push_back(cur);
            g[j].push_back(i);
        }
    }
    if(sum == 0){
        cout << n << endl;
        return 0;
    }
    for(int i = 0;i < n;i++){
        sort(g2[i].begin(),g2[i].end());
        g2[i].resize(unique(g2[i].begin(),g2[i].end()) - g2[i].begin());
        for(int j = 0 ;j < (int)g2[i].size();j++){
            curgood[g2[i][j]] = get(i , g2[i][j]);
        }
        for(int j = 0 ;j < (int)g[i].size();j++){
            if(curgood[__gcd(g[i][j] , n)] == false)
                good[g[i][j]] = false;
        }
        for(int j = 0 ;j < (int)g2[i].size();j++){
            curgood[g2[i][j]] = true;
        }
    }
    int ans = 0;
    for(int i = 1;i < n;i++) ans += good[i];
    cout << ans << endl;
    return 0;
}