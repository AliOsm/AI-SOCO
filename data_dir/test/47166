#include <bits/stdc++.h>
using namespace std;

const int N=5005;

int n;
char s[N];

long long ANS;
int dp[N][N];
short int Next[N][N];
int Prec[N][N];
long long Mod=1000000007;

bool Ch(int L,int R,int l,int r)
{
	if (Next[L][l]<r-l+1 && s[L+Next[L][l]]<s[l+Next[L][l]]) return true;
	return false;
}

main ()
{
	cin>>n;
	
	for (int i=1; i<=n; i++)
		cin>>s[i];
	
	for (int i=n; i>=1; i--)
		for (int j=n; j>=1; j--)
			if (s[i]==s[j]) Next[i][j]=Next[i+1][j+1]+1;
					   else Next[i][j]=0;
	
    for (int i=1; i<=n; i++)
		dp[1][i]=1;
	
	for (int r=1; r<=n; r++)
	{
		for (int l=r; l>=1; l--)
		{
			if (s[l]=='0') continue;
			
			long long R=l-1,L=max(0LL,R-(r-l+1)+1);
			long long Res=(Prec[R][R]-Prec[L][R]+Mod)%Mod;
			
			dp[l][r]=(dp[l][r]+Res)%Mod;	
			
			if (R-L==r-l && Ch(L,R,l,r)) dp[l][r]=(dp[l][r]+dp[L][R])%Mod;
		}
		
		for (int j=1; j<=r; j++)
			Prec[j][r]=(dp[j][r]+Prec[j-1][r])%Mod;	
	}
	
	for (int i=1; i<=n; i++)
		ANS=(ANS+dp[i][n])%Mod;
	
	cout<<ANS<<endl;
}