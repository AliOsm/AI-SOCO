/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)1e6+7;

// ---------------------------------------- 变量 ---------------------------------------- //

int n;
int c[N], in[N], tin[N];
vi e[N], Q[4], tQ[4];

// ---------------------------------------- 函数 ---------------------------------------- //

void Init() {
	rep(i, 1, 4) Q[i].clear();
	memset(in, 0, sizeof(in));
	rep(i, 0, n+1) e[i].clear();
    rep(i, 1, n+1) scanf("%d", c+i);
    rep(i, 1, n+1) {
    	int k; scanf("%d", &k);
    	rep(j, 0, k) {
    		int v; scanf("%d", &v);
    		e[v].pb(i);
    		in[i]++;
		}
	}
}

bool check() { bool ok = 1; rep(i, 1, 4) if (sz(Q[i])) ok = 0; return ok; }

int work(int start) {
	int cnt = 0;
	for (int i = start; ; i = i % 3 + 1) {
		if (check()) break;
		else cnt++;
		//dd(i); dd(sz(Q[i])); de(cnt);
		rep(j, 0, sz(Q[i])) {
			int u = Q[i][j];
			cnt++;
			for (auto o : e[u]) {
				in[o]--;
				if (!in[o]) Q[c[o]].pb(o);
			}
		}
		Q[i].clear();
	}
	//de(cnt);
	return cnt;
}

int Solve() {
	rep(i, 1, n+1) if (!in[i]) Q[c[i]].pb(i);
	rep(i, 1, n+1) tin[i] = in[i];
	rep(i, 1, 4) tQ[i] = Q[i];
	int ans = INF;
	rep(i, 1, 4) {
		rep(j, 1, 4) Q[j] = tQ[j];
		rep(j, 1, n+1) in[j] = tin[j];
		ans = min(ans, work(i));
	}
	return printf("%d\n", ans - 1);
}

// ---------------------------------------- main ---------------------------------------- //

int main ()
{
    //ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}