#include<bits/stdc++.h>
using namespace std;
int ara[200005], seg[800005], b[200005];
int fst[200005], lst[200005];
void update(int n, int s, int e, int l, int r, int val)
{
    if(s>=l && e<=r)
    {
        seg[n]= val;
        return;
    }
    if(s>r || e<l)
        return;
    if(seg[n])
    {
        seg[n*2]= seg[n];
        seg[n*2 +1]= seg[n];
        seg[n]= 0;
    }
    int mid= (s+e)>>1;
    update(n*2, s, mid, l, r, val);
    update(n*2 +1, mid+1, e, l, r, val);
    return;
}
int query(int n, int s, int e, int indx)
{
    if(seg[n])return seg[n];
    int mid= (s+e)>>1;
    if(indx<=mid)return query(n*2, s, mid, indx);
    else return query(n*2 +1, mid+1, e, indx);
}
int main()
{
    int n, q, ind= -1;
    scanf("%d %d", &n, &q);
    for(int i=1; i<=n; i++)
    {
        scanf("%d", &ara[i]);
        if(!ara[i])ind= i;
        if(!fst[ ara[i] ])
            fst[ ara[i] ]= i;
        lst[ ara[i] ]= i;
    }

    update(1, 1, n, 1, n, 1);
    bool f= 1;
    if(!fst[q])
    {
         if(ind==-1)f= 0;
         else fst[q]= lst[q]= ind;
    }
    for(int i=2; i<=q; i++)
        update(1, 1, n, fst[i], lst[i], i);
    for(int i=1; i<=n; i++)
        b[i]= query(1, 1, n, i);
    
    for(int i=1; i<=n && f; i++)
        if(ara[i] && (ara[i]!=b[i]))
            f= 0;
    if(f)
    {
        printf("YES\n");
        for(int i=1; i<=n; i++)printf("%d ", b[i]);puts("");
    }else printf("NO\n");

    return 0;
}