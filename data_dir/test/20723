#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
typedef long long ll;
typedef pair<int, int> ii;

int n, m;
vector<ii> v1, v2;

int main(void) {
	ios_base::sync_with_stdio(false);

	cin >> n >> m;

	for (int i = 0; i < n; i++) {
		int a, b; cin >> a >> b;
		v1.eb(a,b);
	}
	for (int i = 0; i < m; i++) {
		int a, b; cin >> a >> b;
		v2.eb(a,b);
	}

	set<int> ans;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int cnt = 0, num;
			if (v1[i].fi == v2[j].fi) cnt++, num = v2[j].fi;
			if (v1[i].fi == v2[j].se) cnt++, num = v2[j].se;
			if (v1[i].se == v2[j].fi) cnt++, num = v2[j].fi;
			if (v1[i].se == v2[j].se) cnt++, num = v2[j].se;
			if (cnt == 1) {
				ans.emp(num);
			}
		}
	}

	if (ans.size() == 1) {
		cout << *ans.begin() << endl;
		return 0;
	}

	bool ok = 1;

	for (int i = 0; i < n; i++) {
		set<int> bom;
		for (int j = 0; j < m; j++) {
			int cnt = 0, num;
			if (v1[i].fi == v2[j].fi) cnt++, num = v2[j].fi;
			if (v1[i].fi == v2[j].se) cnt++, num = v2[j].se;
			if (v1[i].se == v2[j].fi) cnt++, num = v2[j].fi;
			if (v1[i].se == v2[j].se) cnt++, num = v2[j].se;
			if (cnt == 1) {
				bom.emp(num);
			}
		}

		if (bom.size() > 1) ok = 0;
	}

	for (int i = 0; i < m; i++) {
		set<int> bom;
		for (int j = 0; j < n; j++) {
			int cnt = 0, num;
			if (v2[i].fi == v1[j].fi) cnt++, num = v1[j].fi;
			if (v2[i].fi == v1[j].se) cnt++, num = v1[j].se;
			if (v2[i].se == v1[j].fi) cnt++, num = v1[j].fi;
			if (v2[i].se == v1[j].se) cnt++, num = v1[j].se;
			if (cnt == 1) {
				bom.emp(num);
			}
		}

		if (bom.size() > 1) ok = 0;
	}

	if (ok) cout << 0 << endl;
	else cout << -1 << endl;

	
	return 0;
}

