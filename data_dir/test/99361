#include<bits/stdc++.h>

using namespace std;

const int maxn = 2e5+100;
#define ll long long
ll arr[maxn];
ll dp[maxn];
ll sum[maxn];
ll ans[maxn];
vector<int>g[maxn];

void dfs(ll u, ll p)
{
    dp[u] = 0;
    sum[u] = arr[u];
    for (ll v : g[u]) {
        if(v - p){
            dfs(v, u);
            dp[u] += dp[v]+sum[v];
            sum[u] += sum[v];
        }
    }
}

ll mx = 0;
void solve(ll u, ll p, ll upsum, ll upcost)
{
    upcost += upsum;
    mx = max(mx ,dp[u]+upcost);
    for (ll v : g[u]) {
        if (v==p) continue;
        solve(v, u, upsum+sum[u]-sum[v], upcost+dp[u]-dp[v]-sum[v]);
    }
}





int main()
{
    int n;
    scanf("%d",&n);
    for(int i = 1; i<=n; i++){
        scanf("%lld",&arr[i]);
    }
    for(int i = 1; i<n; i++){
        int u , v ;
        scanf("%d%d",&u,&v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1 , -1);
    solve(1,-1,0,0);
    cout << mx << endl;
    return 0;

}
