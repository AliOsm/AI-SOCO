#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=3.1415926535897932384626433832795;
const ll INF = 1LL<<62;
const ll MINF = -1LL<<62;

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

int main() {
	IO;
	ll h, n;
	cin>>h>>n;
	vector<ll> t(n);
	for(int i=0;i<n;++i) cin>>t[i];
	ll mn=0, sum=0;
	for(int i=0;i<n;++i) {
		sum+=t[i];
		mn=min(mn, sum);
	}
	
	if(h+mn>0 && sum>=0) {
		cout<<"-1\n";
	}else {
		ll minute=0;
		auto iter=[&]() {
			for(int i=0;i<n;++i) {
				h+=t[i];
				minute++;
				if(h<=0) {
					cout<<(minute)<<"\n";
					exit(0);
				}
			}
		};

		//h+mn+sum*x<=0 for the smallest x
		if(h+mn<=0) {
			iter();
		}
	//	cerr<<h<<" "<<minute<<"\n";
		ll curr=1; //egy iteráció után még biztos hogy nem lesz
		ll meddig=min(int(log2(-1e18/sum)+2),60);
	
		for(ll i=meddig;i>=0;i--) {
			ll akt=curr+(1LL<<i);
			if(h+mn+sum*akt>0) curr=akt;
		}
		
	//	cerr<<curr<<"\n";
		//cerr<<minute+n*curr<<"\n";
		//annyiszor levonjuk then iter
		minute=n*curr;
		h+=curr*sum;
		iter();
		iter();
		iter();
		//cerr<<minute<<" "<<h<<"\n";
		assert(0);
	}
	
	return 0;
}
