#include <bits/stdc++.h>
using namespace std;

const int N = 100001;

typedef long long LL;

struct point{
        LL x, y;
        void in() {cin >> x >> y;}
        void out() {cout << x << ", " << y << endl;}
        bool operator < (point &p) const {
                return x == p.x ? y < p.y : x < p.x;
        }
        bool operator == (point &p) {
                return x == p.x && y == p.y;
        }
};

bool chk(point a, point b, point c) {
        return a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y) == 0;
}

bool chk(vector <point> px) {
        for(int i = 2; i < px.size(); i++) {
                if(!chk(px[i - 2], px[i - 1], px[i]))
                        return 0;
        }
        return 1;
}


point px[N];

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main() {

        ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
        int n; cin >> n; vector <point> v;
        for(int i = 1; i <= n; i++) {
                point P; P.in(); v.push_back(P);
        }
        sort(v.begin(), v.end());
        v.erase(unique(v.begin(), v.end()), v.end());



        for(int s = 0; s < 30; s++) { shuffle(v.begin(), v.end(), rng);


        n = v.size();
        for(int i = 1; i <= n; i++) px[i] = v[i - 1];
        if(n <= 3) {
                cout << "YES" << endl;
                return 0;
        }

        vector <point> free;
        int idx = 2;
        for(int i = 1; i <= n; i++)
                if(!chk(px[1], px[2], px[i]))
                        free.push_back(px[i]),
                        idx = i;


        if(chk(free)) {
                cout << "YES" << endl;
                return 0;
        }
        swap(px[2], px[idx]); free.clear();
        //px[1].out(); px[2].out();

        for(int i = 1; i <= n; i++)
                if(!chk(px[1], px[2], px[i]))
                        free.push_back(px[i]);

        if(chk(free)) {
                cout << "YES" << endl;
                return 0;
        }
        }
        cout << "NO" << endl;
        return 0;


}
