#include <bits/stdc++.h>
#define y0    lol
#define y1    lool
#define yn    loool
#define prev  looool
#define fi first
#define se second
#define pb push_back
#define sz(x) (int)(x).size()
#define pcnt __builtin_popcountll
#define rep(i,a,b) for(int i = (a); i <= (b); i++)
#define rrep(i,a,b) for(int i = (b); i >= (a); i--)
#ifdef LOCAL
#define rall(x,a) for(x : a)
#else
#define rall(x,a) for(auto x : a)
#endif
#define rng(a) a.begin(), a.end()
#define PI 3.14159265358979323846
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
using namespace std;

const int N = 555;
vector<int> graph[N];
int col[N];
bool add, found;
vector<int> cycle;
int n, m;

void dfs(int u) {
    if(col[u] == 1) {
        add = true;
        found = true;
        col[u] = -1;
        cycle.pb(u);
        return;
    } else if(col[u] == 2) {
        return;
    }
    col[u] = 1;
    rall(v, graph[u]) {
        dfs(v);
        if(found) {
            if(add) {
                if(col[u] == -1) {
                    add = false;
                } else {
                    cycle.pb(u);
                }
            }
            return;
        }
    }
    col[u] = 2;
}

bool dfs2(int u, int from, int to) {
    if(col[u]) {
        return col[u] == 1;
    }
    col[u] = 1;
    rall(v, graph[u]) {
        if(u == from && v == to) continue;
        if(dfs2(v, from, to)) {
            return true;
        }
    }
    col[u] = 2;
    return false;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    rep(i, 1, m) {
        int u, v;
        cin >> u >> v;
        graph[u].pb(v);
    }
    rep(i, 1, n) {
        if(!found && !col[i]) {
            dfs(i);
        }
    }
    if(!found) {
        cout << "Yes" << endl;
        return 0;
    }
    reverse(cycle.begin(), cycle.end());
    rep(i, 0, sz(cycle)) {
        int u = cycle[i], v = cycle[(i + 1) % sz(cycle)];
        fill(col, col + n + 1, 0);
        bool ok = true;
        rep(w, 1, n) {
            if(!col[w]) {
                if(dfs2(w, u, v)) {
                    ok = false;
                    break;
                }
            }
        }
        if(ok) {
            cout << "Yes" << endl;
            return 0;
        }
    }
    cout << "No" << endl;
    return 0;
}
