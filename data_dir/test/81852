#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define ll long long int
#define ld long double
#define pb push_back
#define mkp make_pair
#define pii pair<int, int> 
#define pll pair<long long int, long long int>
#define sci(x) scanf("%d", &x)
#define scl(x) scanf("%lld", &x)
#define fi first
#define sc second
#define deb 0

map<ll, ll> mp;
set<ll> se;
pair<pll, ll> A[100001];
ll T[1000001];

void update(ll n, ll start, ll end, ll x, ll y)
{
	if (start > end || start > x || end < x) return;
	if (start == x && end == x) {
		T[n] = max(T[n], y); return;
	}
	ll mid = (start + end) / 2;
	update(n<<1, start, mid, x, y);
	update(n<<1|1, mid+1, end, x, y);
	T[n] = max(T[n<<1], T[n<<1|1]);
}

ll query(ll n, ll start, ll end, ll l, ll r)
{
	if (start > end || start > r || end < l || l > r) return 0;
	if (start >= l && end <= r) return T[n];
	ll mid = (start + end) >> 1;
	return max(query(n<<1, start, mid, l, r), query(n<<1|1, mid+1, end, l, r));
}

int main()
{
	ios_base::sync_with_stdio(false);cout.tie(0);cin.tie(0);

	ll n, i, j, k, x, y, z, a, b, c;
	cin >> n;
	for (i = 0; i < n; ++i) {
		cin >> A[i].fi.sc >> A[i].fi.fi >> A[i].sc;
		se.insert(A[i].fi.sc);
		se.insert(A[i].fi.fi);
	}
	ll lim = 0;
	for (auto it: se) {
		mp[it] = ++lim;
	}

	sort(A, A+n);
	ll ans = 0;
	for (i = n-1; i >= 0; --i) {
		x = mp[A[i].fi.fi]-1;
		z = A[i].sc + query(1, 1, lim, 1, x);
		ans = max(ans, z);
		update(1, 1, lim, mp[A[i].fi.sc], z);
	}
	cout << ans << endl;

	return 0;
}
