#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
using namespace std;

typedef long long ll;

ll n, nilai[100005], ans;
int node[100005];
vector<pair<ll,ll> >  arr[100005]; 
bool visited[100005];

void cari(int now){
	visited[now] = true;
	int res = 0;
	bool ada = false;
	for (int i = 0; i < arr[now].size(); i++) {
		if (!visited[arr[now][i].fi]) {
			ada = true;
			cari(arr[now][i].fi);
			res+=node[arr[now][i].fi];
		}
	}
	node[now] = (!ada ? 1 : res+1);
}

void finAns(int now,ll sumNow) {
	visited[now] = true;
	if (sumNow > nilai[now]) {
		//cout << "masuk " << now << '\n';
		ans += node[now];
		return;
	}
	for (int i = 0 ; i < arr[now].size(); i++) {
		if (!visited[arr[now][i].fi]) {
			if (sumNow + arr[now][i].se < 0) finAns(arr[now][i].fi, 0);
			else finAns(arr[now][i].fi, sumNow + arr[now][i].se);
		}
	}
}

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	cin >> n;
	for (int i = 1 ; i <= n ; i++) 
		cin >> nilai[i];
	for (int i = 1; i <= n-1; i++) {
		ll tmp, berat;
		cin >> tmp >> berat;
		arr[i+1].pb({tmp, berat});
		arr[tmp].pb({i+1, berat});
	}
	cari(1); 
	memset(visited, false, sizeof visited);
	finAns(1, 0);
	cout << ans << '\n';
	return 0;
}