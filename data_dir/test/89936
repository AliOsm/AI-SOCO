#include<bits/stdc++.h>
//#define int long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD2 998244353
#define MOD1 1e9+7
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define piii pair<pii,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int MOD=MOD1;
int arr[105];
vector<pii> vals;
int dp[105][105][105];
int n;
int toAdd(int bef,int aft,int i,int j)
{
	int x=arr[bef]%2,y=arr[aft]%2;
	if(bef==0)
	{
		 if(y!=j)
		 {
             return 1;
		 }
		 return 0;	
	}
	if(aft==n+1)
	{
		  if(x!=i)
		  {
              return 1;
		  }
		  return 0;	
	}
	int cnt=0;
	if(x!=i)cnt++;
	if(y!=j)cnt++;
	return cnt;	
}
int solve(int i,int even,int odd)
{
	 if(even<0 || odd<0)return 305;
	 if(even==0 && odd==0)return 0;
	 if(dp[i][even][odd]!=-1)return dp[i][even][odd]; 
	 if(1)
	 {
         int l=vals[i].f,r=vals[i].s;
         int len=r-l+1;
         //For odds
         rep(j,0,len)
         {
         	 int x=1,y=0;
         	 int tot1=len-j,tot2=j;
         	 if(j==0)x=0;
             int t=0;
             if(tot1!=0 && tot2!=0)t++;
             if(dp[i][even][odd]==-1)
             dp[i][even][odd]=t+solve(i+1,even-tot1,odd-tot2)+toAdd(l-1,r+1,x,y);	
             else
             dp[i][even][odd]=min(dp[i][even][odd],t+solve(i+1,even-tot1,odd-tot2)+toAdd(l-1,r+1,x,y)); 
         }
         //For evens
         rep(j,0,len)
         {
         	 int x=0,y=1;
         	 int tot1=j,tot2=len-j;
         	     int t=0;
             if(tot1!=0 && tot2!=0)t++;
           	 if(j==0)x=1;
             if(dp[i][even][odd]==-1)
             dp[i][even][odd]=t+solve(i+1,even-tot1,odd-tot2)+toAdd(l-1,r+1,x,y);	
             else
             dp[i][even][odd]=min(dp[i][even][odd],t+solve(i+1,even-tot1,odd-tot2)+toAdd(l-1,r+1,x,y)); 
         }
         return dp[i][even][odd];
	 }	
}
int32_t main()
{
	getFaster;
    cin>>n;
    int odd=(n+1)/2;
    int even=n/2;
    rep(i,0,102)rep(j,0,102)rep(k,0,102)dp[i][j][k]=-1;
    rep(i,1,n+1)
    {
    	cin>>arr[i];
    	if(arr[i]!=0)
    	{
    		if(arr[i]&1)odd--;
    		else even--;
    	}	
    }
    if(n==1)
    {
    	cout<<0<<endl;
    	return 0;
    }	
    if(odd+even==n)
    {
    	cout<<1<<endl;
    	return 0;
    }
    if(odd==0 && even==0)
    {
    	int cnt=0;
    	rep(i,2,n+1)
    	{
    		if(arr[i]%2!=arr[i-1]%2)
    		cnt++;	
    	}
    	cout<<cnt<<endl;
    	return 0;
    }	
    int l=1,r=1;
    while(r<=n)
    {
        if(arr[r]==0)
        {
        	if(r==n)
        	{
        		int x=arr[l-1]%2;
        		vals.push_back({l,n});
        	}
        	r++;
        		
        }
        else if(l<r)
        {

            int x=arr[r]%2,y=arr[l-1]%2;
            if(l==1)
            {
            	vals.push_back({1,r-1});
            }
            else
            {
            	vals.push_back({l,r-1});
            }	
            l=r+1;
            r++;	
        }
        else
        {l=r+1;r++;}	
    }
    solve(0,even,odd);
    int ans=dp[0][even][odd];    
    rep(i,1,n+1)
    {
    	if(arr[i]!=0 && arr[i-1]!=0)
    	{
    		int x=arr[i]%2,y=arr[i-1]%2;
            if(x!=y)ans++;
    	}	
    }
    cout<<ans<<endl;
    return 0;
}