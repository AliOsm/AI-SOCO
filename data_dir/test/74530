#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int n;
char S[210000];
int col[210000];
vector<int>V[8];
int disp[8][210000],disc[8][8];
queue<int>q;
int f[8][1<<8];
ll ans[24];
int main()
{
    scanf("%d",&n);
    scanf("%s",S);
	for(int i=0;i<n;i++)col[i+1]=S[i]-'a';
    for(int i=1;i<=n;i++)V[col[i]].push_back(i);
    for(int i=0;i<8;i++)
    {
        for(int j=0;j<8;j++)disc[i][j]=8*2;
        disc[i][i]=0;
        for(int j=1;j<=n;j++)disp[i][j]=8*2;
        for(int j=0;j<V[i].size();j++)
        {
            int x=V[i][j];
            disp[i][x]=0,q.push(x);
        }
        while(!q.empty())
        {
            int x=q.front();q.pop();
            int nc=disp[i][x]+1,cx=col[x];
            if(disc[i][cx]==8*2) 
            {
                disc[i][cx]=disp[i][x];
                for(int j=0;j<V[cx].size();j++)
                {
                    int y=V[cx][j];
                    if(disp[i][y]==8*2) disp[i][y]=nc,q.push(y);
                }
            }
            if(x<n&&disp[i][x+1]==8*2) disp[i][x+1]=nc,q.push(x+1);
            if(x>1&&disp[i][x-1]==8*2) disp[i][x-1]=nc,q.push(x-1);
        }
    }
    for(int i=2;i<=n;i++)
    {   
        int j=i-8*2;
        if(j>0)
        {
            int cj=col[j],s=0;
            for(int k=0;k<8;k++) s|=(disp[k][j]-disc[k][col[j]])<<k;
            f[cj][s]++;
        }
        for(int k=max(1,j+1);k<i;k++)
        {
            int dis=i-k;
            for(int c=0;c<8;c++) dis=min(dis,disp[c][k]+disp[c][i]+1);
            ans[dis]++;
        }
        for(int c=0;c<8;c++)
        {
            for(int s=0;s<1<<8;s++) 
			{
				if(f[c][s])
            	{
            	   	int dis=8*2-1;
                	for(int k=0;k<8;k++) dis=min(dis,disc[c][k]+(s>>k&1)+1+disp[k][i]);
                	ans[dis]+=f[c][s];
            	}
			}
        }
    }
    for(int i=8*2;i>=0;i--)
	{ 
		if(ans[i])
		{
			printf("%d %lld\n",i,ans[i]);
			return 0;
		}
	}
    return 0;
}