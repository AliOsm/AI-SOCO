///=================================================================================////
///   It's me Bishal Gautam...........I just love my code, u may love it too :)     ////
///=================================================================================////
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
#define PI acos(-1.0)
#define nl puts("")
#define SZ(x) x.size()
#define pb(x) push_back(x)
#define X first
#define Y second
#define pii pair<int,int>
#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define SL(a) scanf("%lld",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define S3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define SL2(a,b) scanf("%lld%lld",&a,&b)
#define SL3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define all(v) v.begin(),v.end()
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(i=a;i<=n;i++)
#define rf(i,n,a) for(i=n;i>=a;i--)
#define _cin ios_base::sync_with_stdio(0),cin.tie(0)
#define ct(x) cerr<<__LINE__<< ":: "<<#x<<"= "<<x<<endl
#define fi(it,n) for(__typeof(n.begin()) it=n.begin();it!=n.end();it++)
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> os;
//find_by_order
//order_of_key
void show() {
    cout<<'\n';
}
template<typename T,typename... Args>
void show(T a, Args... args) {
    cout<<a<<" ";
    show(args...);
}
template<typename T>
void show_c(T& a) {
    for ( auto &x:a ) cout<<x<<" ";
    cout<<endl;
}
/// atoi( str.c_str() ); // char string to int
/// sprintf(str,"%d",num);// num to char string
///int month[]={-1,31,28,31,30,31,30,31,31,30,31,30,31}; //Not Leap Yr
///int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Dir
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 Dir
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight
/************************************************************************
 * /////////////////////////////////////////////////////////////////////*
 ************************************************************************/
///Dgt        012345678910
#define MX    2001
#define MD    1000000007
#define inf   1000000002

ll fac[MX+2],ncr[MX+2][MX+2];
int n,pV[MX],vV[MX];
int main() {
    int i,j,k,x;
    fac[0]=1LL;
    for(i=1; i<=MX; i++)fac[i]=(fac[i-1]*i)%MD;
    ncr[0][0]=1;
    ncr[1][0]=ncr[1][1]=1;
    for(i=2; i<=MX; i++) {
        ncr[i][i]=ncr[i][0]=1LL;
        for(j=1; j<i; j++) {
            ncr[i][j]=(ncr[i-1][j]+ncr[i-1][j-1])%MD;
        }
    }
    _cin;
    cin>>n;
    int tot=0;
    fr(i,1,n) {
        cin>>x;
        if(x!=-1) pV[i]=1,vV[x]=1;
        else tot++;
    }
    int m=0;
    fr(i,1,n) {
        if(!pV[i] && !vV[i])m++;
    }
    ll ans=0LL;
   // cout<<tot<< " _ "<<m<<endl;
    fr(i,0,m) {
        if(i%2==0) {
            ans=(ans+ncr[m][i]*fac[ tot-i ] )%MD;
        } else  {
            ans=(ans-ncr[m][i]*fac[ tot-i ])%MD;
        }
       // cout<< " + "<<ncr[m][i]<< " - "<<fac[ tot-i ]<<endl;
        ans=(ans+MD)%MD;
       // cout<<ans<<endl;
    }

    cout<<ans<< "\n";

    return 0;
}
