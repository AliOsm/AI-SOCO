#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <ctime>
using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long Long;
typedef pair<int,int> PII;

#define MOD 1000000007
#define INV 500000004



int main() {

    int N, K;
    cin >> N >> K;
    vector<Long> V(N);
    vector<int> NO;
    for (int i = 0; i < N; ++i) {
        cin >> V[i];
        if (V[i] > 1) {
            NO.push_back(i);
        }
    }
    Long cnt = 0;
    if (NO.size() > 0) {
        Long INF = 2000000000000000000LL;
        for (int i = 0; i < NO.size(); ++i) {
            Long PROD = 1, SUM = 0;
            for (int j = i; j >= 0; --j) {
                Long e = V[NO[j]];
                if (PROD > INF / e) break;
                PROD *= e;
                SUM += e;
//                cout << e << " ";
                int nonOnes = (NO[i] - NO[j] + 1) - (i - j + 1);
                int onesLeft = j == 0 ? NO[j] : (NO[j] - NO[j - 1] - 1);
                int onesRight =
                        i == NO.size() - 1 ? (N - NO[i] - 1) : (NO[i + 1] -
                                                                NO[i] - 1);
                if (PROD % K != 0) continue;
                Long t = PROD / K;
                Long ts = SUM + nonOnes;
                if (ts <= t && t <= ts + onesLeft + onesRight) {
                    int tem = min(min(ts + onesLeft + onesRight - t, t - ts), (Long) min(onesLeft, onesRight)) + 1;
                    cnt += tem;
//                    cout << "(" << NO[j] << "," << NO[i] << " " << PROD << ")" << " " << tem << endl;
                }
            }
//            cout << endl;
        }
    }
    if (K == 1) {
        cnt += N - NO.size();
    }
    cout << cnt << endl;
}