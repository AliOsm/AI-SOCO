#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll N = 1000 + 20, inf = 1e18;
ll prime[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29}, cnt[10], dp[N][10], n;

ll pw(ll a, ll b) {
    ll res = 1, tmp = a;
    while (b) {
        if (b & 1)
            res *= tmp;
        tmp *= tmp;
        b >>= 1;
    }
    return res;
}

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    cin >> n;
    for (int i = 0; i < 10; i++) {
        ll x = 1;
        while (x <= 1e18 / prime[i]) {
            cnt[i]++;
            x *= prime[i];
        }
    }
    for (ll i = 0; i < N; i++)
        for (ll j = 0; j < 10; j++)
            dp[i][j] = inf;
    for (ll i = 1; i <= cnt[0]; i++)
        dp[i][0] = pw(2, i - 1);
    for (ll j = 1; j < 10; j++)
        for (ll i = 1; i <= n; i++)
            for (ll k = 1; k <= min(i, cnt[j]); k++)
                if (i % k == 0)
                    dp[i][j] = min(dp[i][j], (dp[i / k][j - 1] <= 1e18 / pw(prime[j], k - 1)? dp[i / k][j - 1] * pw(prime[j], k - 1): inf));
    return cout << dp[n][9] << "\n", 0;
}