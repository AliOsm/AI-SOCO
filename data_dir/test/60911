#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define ll long long
#define endl '\n'
#define pi 3.14159265
ll n,m,x1,y1;
vector<pair<ll,ll>> v[1001],v2[1001];
ll t[1001],c[1001];
ll d[1001][1001];

int main()
{
    IOS;
    cin>>n>>m;
    cin>>x1>>y1;
    for(ll i=0;i<m;i++)
    {
        ll x,y,w;
        cin>>x>>y>>w;
        v[x].push_back({y,w});
        v[y].push_back({x,w});
    }
    for(ll i=1;i<=n;i++)
        cin>>t[i]>>c[i];
    memset(d,0,sizeof(d));
    for(ll i=1;i<=n;i++)
    {
        multiset<pair<ll,ll> > s;
        s.insert({0,i});
        ll vis[n+1]={0};
        ll dist[n+1];
        for(ll i=1;i<=n;i++)
            dist[i]=1e17;
        dist[i]=0;
        while(!s.empty())
        {   
            auto temp=*(s.begin());
            s.erase(s.begin());
            ll x=temp.second;
            ll wei=temp.first;
            if(vis[x]==1)
                continue;
            vis[x]=1;
            for(ll j=0;j<v[x].size();j++)
            {
                ll ed=v[x][j].first;
                ll len=v[x][j].second;
                if(dist[x]+len<dist[ed])
                {
                    dist[ed]=dist[x]+len;
                    s.insert({dist[ed],ed});
                }
            }
        }
        for(ll j=1;j<=n;j++)
        {
            d[i][j]=dist[j];
            d[j][i]=dist[j];
        }
    }
    for(ll i=1;i<=n;i++)
    {
        for(ll j=1;j<=n;j++)
        {
            if(i==j)
                continue;
            if(d[i][j]<=t[i])
                v2[i].push_back({j,c[i]});
        }
    }
    multiset<pair<ll,ll> > s;
    s.insert({0,x1});
    ll vis[n+1]={0};
    ll dist[n+1];
    for(ll i=1;i<=n;i++)
        dist[i]=1e17;
    dist[x1]=0;
    while(!s.empty())
    {   
        auto temp=*(s.begin());
        s.erase(s.begin());
        ll x=temp.second;
        ll wei=temp.first;
        if(vis[x]==1)
            continue;
        vis[x]=1;
        for(ll j=0;j<v2[x].size();j++)
        {
            ll ed=v2[x][j].first;
            ll len=v2[x][j].second;
            if(dist[x]+len<dist[ed])
            {
                dist[ed]=dist[x]+len;
                s.insert({dist[ed],ed});
            }
        }
    }
    if(dist[y1]>1e14)
        cout<<-1;
    else
        cout<<dist[y1];
} 