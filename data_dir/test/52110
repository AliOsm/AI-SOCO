#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

const int N = 300000;
set < int > s;
int a[N];
map < int, int > f;
vector < pair < int, pair < int, int > > > e;
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt",  "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++){
        int l, r;
        cin >> l >> r;
        e.pb({l, {-1, i}});
        e.pb({r + 1, {1, i}});
        e.pb({r, {-2, -1}});
        e.pb({r + 2, {-2, i}});
        e.pb({l - 1, {0, i}});
        f[l]++;
    }
    sort(e.begin(), e.end());
    set < int > s;
    for (auto i: e){
       // if (s.size() == 1 && i.S.F == 1 && i != e.back()) a[*s.begin()] = 1;
        if (i.S.F == -1) s.insert(i.S.S); else
        if (i.S.F == 1) s.erase(i.S.S);
    }
    while(!s.empty()) s.erase(s.begin());
    for (auto& i: e) i.S.F = -i.S.F;
    sort(e.begin(), e.end());
    for (auto i: e){
        if (s.size() == 1 && (i.S.F == 0 || i.S.F == 2)) a[*s.begin()] = 1;
        if (i.S.F == 1) s.insert(i.S.S); else
        if (i.S.F == -1) s.erase(i.S.S);
        if (s.size() == 1 && i.S.F == 1 && f[i.F] == 1) a[*s.begin()] = 1;
    }
    for (int i = 1; i <= n; i++) if (a[i] == 0){
        cout << i;
        return 0;
    }
    cout << -1;
}
