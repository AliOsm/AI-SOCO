#include <bits/stdc++.h>
#define int long long
using namespace std;

const int N = 2010;

int n;
int root;
int c[N];
int res[N];
int sub_tree_sz[N];
vector <int> adj[N];

int dfs0 (int v) {
  int ret = 1;
  for (auto x : adj[v]) ret += dfs0 (x);
  return sub_tree_sz[v] = ret;
}

vector <int> dfs (int v) {
  if (c[v] > sub_tree_sz[v] - 1) {
    cout << "NO";
    exit(0);
  }
  vector <int> ret;
  for (auto x : adj[v]) {
    vector <int> ch = dfs (x);
    for (auto y : ch) ret.push_back (y);
  }
  ret.insert (ret.begin() + c[v], v);
  return ret;
}

signed main () {
  cin >> n;
  for (int i = 1; i <= n; i++) {
    int par; cin >> par >> c[i];
    if (par == 0) {
      root = i;
      continue;
    }
    adj[par].push_back(i);
  }
  dfs0 (root);
  vector <int> ord = dfs (root);
  for (int i = 1; i <= n; i++) res[ord[i - 1]] = i;
  cout << "YES" << "\n";
  for (int i = 1; i <= n; i++) cout << res[i] << " "; cout << "\n";
  return 0;
} 