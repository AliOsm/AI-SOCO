/*
    Author : harshit15
    Before submission
    - Fast IO
    - mx value
    - int overflow
*/
#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 1000000007
#define mx 1000015
#define mx2 15
#define inf 4e18
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
bool vis[10][10];
vector<int> vx,vy,vz;
int fans;
void ansnikallo()
{
    int cnt = 0;
    fl(i,0,vx.size())
    {
        fl(j,0,vx.size())
        {
            int x = vx[i];
            int y = vx[j];
            cnt += vis[x][y];
        }
    }
    fl(i,0,vy.size())
    {
        fl(j,0,vy.size())
        {
            int x = vy[i];
            int y = vy[j];
            cnt += vis[x][y];
        }
    }
    fl(i,0,vz.size())
    {
        fl(j,0,vz.size())
        {
            int x = vz[i];
            int y = vz[j];
            cnt += vis[x][y];
        }
    }
    fans = max(fans,cnt);
}
void solve(int x, int y, int z)
{
    fl(mask,0,1<<7)
    {
       
        if(__builtin_popcount(mask) == x)
        {
            fl(mask2,0,1<<7)
            {
                if(__builtin_popcount(mask2) == y && (mask & mask2) == 0)
                {
                    fl(j,0,7)
                    {
                        if(mask>>j & 1)
                        {
                            vx.pb(j+1);
                        }
                        else if(mask2>>j&1)
                        {
                            vy.pb(j+1);
                        }
                        else vz.pb(j+1);
                    }
                    ansnikallo();
                    vx.clear();
                    vy.clear();
                    vz.clear();
                }
            }
        }
    }
}
main()
{
    fast;
    map<string, int> mp;
    mp["Anka"] = 1;
    mp["Chapay"] = 2;
    mp["Cleo"] = 3;
    mp["Troll"] = 4;
    mp["Dracul"] = 5;
    mp["Snowy"] = 6;
    mp["Hexadecimal"] = 7;
    int n;
    cin >> n;
    fl(i,0,n)
    {
        string s1,s2,s3;
        cin >> s1 >> s2 >> s3;
        int x = mp[s1];
        int y = mp[s3];
        vis[x][y] = 1;
    }

    ll a,b,c;
    cin >> a >> b >> c;
    ll ans = 1e9;
    ll arr[3];
    fl(i,1,7)
    {
        fl(j,1,7)
        {
            fl(k,1,7)
            {
                if(i + j + k != 7)
                    continue;
                
                arr[0] = a / i;
                arr[1] = b / j;
                arr[2] = c / k;
                sort(arr,arr+3);
                ans = min(ans , arr[2] - arr[0]);
            }
        }
    }
    

    fl(i,1,6)
    {
        fl(j,1,6)
        {
            fl(k,1,6)
            {
                if(i + j + k != 7)
                    continue;
                
                arr[0] = a / i;
                arr[1] = b / j;
                arr[2] = c / k;
                sort(arr,arr+3);
                if(ans != arr[2] - arr[0])continue;
                solve(i,j,k);
            }
        }
    }
    cout<<ans<<" "<<fans;


      
}  