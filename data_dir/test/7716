#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <utility>
#include <functional>
#include <iterator>

using namespace std;

int main()
{
	ios::sync_with_stdio (false);
	
	int n, k, q;

	cin >> n >> k >> q;

	priority_queue<int, deque<int>, greater<int>> pq;
	vector<int> level(n), awoke (n, false);

	copy_n (istream_iterator<int>(cin), n, level.begin());

	for (int i = 0; i < q; i++) {
		int type, id;

		cin >> type >> id;
		
		--id;

		if (type == 2)
			cout << (awoke[id] && level[id] >= pq.top() ? "YES" : "NO") << '\n';
		else {
			awoke[id] = true;
			pq.push (level[id]);

			if (pq.size() > k)
				pq.pop();
		}
	}
}
