#include<iostream>
#include<cmath>
#include<vector>
#include<string>
#include<sstream>
#include<fstream>
#include<algorithm>
#include<set>
#include<map>
#include<string.h>
#include<cstdio>
#include<hash_map>
#include<queue>
using namespace std;
const int inf = 1000000001;
const int MOD = 1000000007;
typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())

const int N = 200002;
int have[N+1], S[N+1];

bool lower(set<int>&s, int val, int &ans) {
	set<int>::iterator it = s.upper_bound(val);
	if(it==s.begin()) return false;
	it--;
	ans=*it;
	return true;
}

int main() {
	//freopen("input.txt","r",stdin);freopen("output.txt", "w", stdout);
	int m;
	cin>>m;
	string s;
	cin>>s;
	int n=sz(s);
	s=" "+s;

	vector<int> pos;
	string ans="";
	
	FOR(c,'a','z') {
		memset(have, 0, sizeof(have));
		FOR(i,0,sz(pos)-1) have[pos[i]]++;
		FOR(i,1,n) if(s[i]==c) {
			have[i]++;
		}

		S[0]=0;
		FOR(i,1,n) S[i]=S[i-1]+have[i];

		bool ok=true;
		FOR(j,1,n+1-m) {
			if(S[j+m-1]-S[j-1]==0) ok=false;
		}

		if(ok) {
			set<int> now;
			FOR(i,0,sz(pos)-1) now.insert(pos[i]);
			
			set<int> can;
			FOR(i,1,n) if(s[i]==c) {
				can.insert(i);
			}

			FOR(j,1,n+1-m) {
				int hz;
				if(lower(now, j+m-1, hz) && hz>=j) {
					//okay
				} else {
					lower(can, j+m-1, hz);
					now.insert(hz);
					ans+=c;
				}
			}
			break;
		} else {
			FOR(i,1,n) if(s[i]==c) pos.pb(i), ans+=c;
		}
	}

	cout<<ans<<endl;
}