#include<bits/stdc++.h>
using namespace std;
#define N 101
int n,m,x,y,X,Y,lr,ud,mp[N][N],f[N][N];
bool vis[N][N];queue<int>q;
int read()
{
	char ch=getchar();
	while(ch!='.' && ch!='*' && ch!='F')
	  ch=getchar();
	if(ch=='.')return 1;
	if(ch=='*')return -1;
	if(ch=='F')return 2;
}
void getXY(){scanf("%d%d",&x,&y);}
void askL(){printf("%c\n",lr?'R':'L');fflush(stdout);getXY();}
void askR(){printf("%c\n",lr?'L':'R');fflush(stdout);getXY();}
void askU(){printf("%c\n",ud?'D':'U');fflush(stdout);getXY();}
void askD(){printf("%c\n",ud?'U':'D');fflush(stdout);getXY();}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
	  for(int j=1;j<=m;j++)
	    mp[i][j]=read(),mp[i][j]>1?X=i,Y=j:0;
	if(mp[1][2]>0)
	  {
	  askR(),lr=2-y;if(mp[x][y]>1)return 0;
	  if(mp[2][1]>0 && y>1)askL();
	  else while(mp[2][y]<0){askR();if(mp[x][y]>1)return 0;}
	  askD(),ud=2-x;
	  }
	else
	  {
	  askD(),ud=2-x;if(mp[x][y]>1)return 0;
	  if(mp[1][2]>0 && x>1)askU();
	  else while(mp[x][2]<0){askD();if(mp[x][y]>1)return 0;}
	  askR(),lr=2-y;
	  }
	q.push(X*233+Y),vis[X][Y]=true;
	while(!q.empty())
	  {
	  int id=q.front();q.pop();
	  if(id/233==x && id%233==y)break;
	  X=id/233,Y=id%233;
	  for(int dx=-1;dx<=1;dx++)
	    for(int dy=-1;dy<=1;dy++)
	      if(dx*dy==0 && dx+dy)
	      if(1<=X+dx && X+dx<=n)
	      if(1<=Y+dy && Y+dy<=m)
	      if(mp[X+dx][Y+dy]>0)
	      if(!vis[X+dx][Y+dy])
	        {
	        if(dy==1)f[X+dx][Y+dy]=0;
	        if(dy==-1)f[X+dx][Y+dy]=1;
	        if(dx==1)f[X+dx][Y+dy]=2;
	        if(dx==-1)f[X+dx][Y+dy]=3;
	        q.push((X+dx)*233+Y+dy);
	        vis[X+dx][Y+dy]=true;
			}
	  }
	while(mp[x][y]!=2)
	  {
	  if(f[x][y]==0)askL();else
	  if(f[x][y]==1)askR();else
	  if(f[x][y]==2)askU();else
	  if(f[x][y]==3)askD();
	  }
	return 0;
}
