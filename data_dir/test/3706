#include <bits/stdc++.h>
#ifdef DBP
#define deb(...) fprintf(stderr,__VA_ARGS__)
#else
#define deb(...) 0
#endif
#define fore(x,a,b) for(int x=a, qwerty=b; x<qwerty; x++)
#define ALL(a) (a).begin(),(a).end()
#define SZ(a) ((int)(a).size())
#define pb push_back
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define fst first
#define snd second
#define mset(a,v) memset((a),(v),sizeof(a))
using namespace std;
typedef long long ll;

const ll MOD=1e9+7;
const int N=363304+100;
int n;
void bad(){cout<<"0\n";exit(0);}
set<int> buy, sell, who;
int never_knows=0;

ll be(ll b, ll e){
    ll r=1;
    while(e)if(e&1)r=(r*b)%MOD,e^=1;else b=(b*b)%MOD,e>>=1;
    return r;
}

int main(){FIN;
    cin >> n;
    fore(x,0,n){
        string cmd;int p;cin>>cmd>>p;
        if(cmd=="ADD"){
            if(SZ(buy)&&*buy.rbegin()>p){
                buy.insert(p);
                if(SZ(sell)&&*sell.begin()<p)bad();
            }else if(SZ(sell)&&*sell.begin()<p){
                sell.insert(p);
                if(SZ(buy)&&*buy.rbegin()>p)bad();
            }else{
                who.insert(p);
            }
        }else{
            if(who.count(p)){
                never_knows++;
                for(auto it=who.begin(); it!=who.end(); it++){
                    if(*it>p)sell.insert(*it);
                    else if(*it<p)buy.insert(*it);
                }
                who.clear();
            }else if(SZ(buy)&&*buy.rbegin()==p){
                buy.erase(p);
                for(int v:who)sell.insert(v);
                who.clear();
            }else if(SZ(sell)&&*sell.begin()==p){
                sell.erase(p);
                for(int v:who)buy.insert(v);
                who.clear();
            }else bad();
        }
    }
    
    cout << (be(2,never_knows)*(SZ(who)+1LL))%MOD << "\n";
}