#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <string.h>
#include <cstdlib>
#include <ctime>
#include <assert.h>
#include <unordered_map>
#include <unordered_set>

typedef long long ll ;
using namespace std;
const ll mod=1e9+7;
ll dp[2001][2001][2][2],m,n;
char d;
string s1,s2;
ll dfs(int i ,int rem,bool sm,bool gr)
{
    if(i==n)
    {
        if(rem%m==0)
            return 1;
        return 0;
    }
    if(dp[i][rem][sm][gr]!=-1)
        return dp[i][rem][sm][gr];
    ll ret=0;
    if(sm==0&&gr==0)
    {
        if(i%2)
        {
            if(s1[i]==d&&d==s2[i])
                ret=dfs(i+1,(rem*10+(d-'0'))%m,0,0);
            else if(s1[i]==d&&d<s2[i])
                ret=dfs(i+1,(rem*10+(d-'0'))%m,0,1);
            else if(s1[i]<d&&d==s2[i])
                ret=dfs(i+1,(rem*10+(d-'0'))%m,1,0);
            else if(s1[i]<d&&d<s2[i])
                ret=dfs(i+1,(rem*10+(d-'0'))%m,1,1);
        }
        else
        {
            for(char h=s1[i]; h<=s2[i]; h++)
            {
                if(h==d)
                    continue;
                if(s1[i]==h&&h==s2[i])
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,0,0);
                else if(s1[i]==h)
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,0,1);
                else if(h==s2[i])
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,1,0);
                else
                {
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,1,1);
                }
            }
        }
    }
    else if(sm==0&&gr==1)
    {
        if(i%2)
        {
            if(s1[i]==d)
                ret=dfs(i+1,(rem*10+(d-'0'))%m,0,1);
            else if(s1[i]<d)
                ret=dfs(i+1,(rem*10+(d-'0'))%m,1,1);
        }
        else
        {
            for(char h=s1[i]; h<='9'; h++)
            {
                if(h==d)
                    continue;
                if(s1[i]==h)
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,0,1);
                else
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,1,1);
            }
        }
    }
    else if(sm==1&&gr==0)
    {
        if(i%2)
        {
            if(d==s2[i])
                ret=dfs(i+1,(rem*10+(d-'0'))%m,1,0);
            else if(d<s2[i])
                ret=dfs(i+1,(rem*10+(d-'0'))%m,1,1);
        }
        else
        {
            for(char h='0'; h<=s2[i]; h++)
            {
                if(h==d)
                    continue;
                if(h==s2[i])
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,1,0);
                else
                    ret+=dfs(i+1,(rem*10+(h-'0'))%m,1,1);
            }
        }
    }
    else
    {
        if(i%2)
        {
            ret=dfs(i+1,(rem*10+(d-'0'))%m,1,1);
        }
        else
        {
            for(char h='0'; h<='9'; h++)
            {
                if(h==d)
                    continue;
                ret+=dfs(i+1,(rem*10+(h-'0'))%m,1,1);
            }
        }
    }
    return dp[i][rem][sm][gr]=ret%mod;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("farm.in", "r", stdin);
    //freopen("farm.out", "w", stdout);
    cin >> m>>d;
    cin >> s1 >> s2;
    memset(dp,-1,sizeof dp);
    n=s1.size();
    cout << dfs(0,0,0,0)<< endl;
    return 0;
}
