
// Target Expert 

/*
 * Author    : raj1307 - Raj Singh
 * Date      : 07.10.19
 */

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <iomanip>
#include <memory.h>
#include <assert.h>
using namespace std;

//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define endl "\n"
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rep(i, a, b) for(int i = (a); i <= (b); ++i)
#define rr return 
#define pb push_back
#define sz(x) ((int)x.size())
#define int long long
typedef pair<int, int> ii;;
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}
int gcd(int a,int b){ return (b == 0) ? a : gcd(b, a % b);}
inline int lcm(int a,int b){ return a / gcd(a, b) * b;}
inline int normalize(int x,int mod){ x %= mod; if (x < 0) x += mod; return x;}

const int mod = 1000*1000*1000+7;
const int INF = 1e18 +5;

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}


const int N = 2e5 + 5;


int n,p[N],x,y,a,b,k,l,f[N],last;





void solve(){   
    
    cin>>n;
    
    fr(i,1,n+1){
        cin>>p[i];
        p[i]/=100;
    }

    sort(p + 1, p + 1 + n, greater<int>());
    cin >> x >> a >> y >> b;
    if (x > y) {
        swap(x, y);
        swap(a, b);
    }
    cin >> k;
    int lo = 1, hi = n;

    while(lo<=hi){

        int mid=(lo+hi)/2;
        int c0 = 0, c1 = 0, c2 = 0;
        for (int i = 1; i <= mid; ++i) {
                if (i % a == 0 and i % b == 0) {
                    ++c0;
                } else if (i % b == 0) {
                    ++c1;
                } else if (i % a == 0) {
                    ++c2;
                }
        }
        int ans = 0;
        for (int i = 1; i <= mid; ++i) {
            if (c0) {
                ans += (x + y) * p[i];
                --c0;
            } else if (c1) {
                ans += y * p[i];
                --c1;
            } else if (c2) {
                ans += x * p[i];
                --c2;
            } else {
                break;
            }
        }
        if (ans >= k) {
            hi = mid - 1;
        } else {
            lo = mid + 1;
        }

    }
       
    if (hi == n) {
        cout << -1 << '\n';
    }else{
        cout << hi + 1 << '\n';
    }

    











    





    
}




signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
	cin>>t;
	while(t--) {
		solve();
	}

	
	return 0;
}


