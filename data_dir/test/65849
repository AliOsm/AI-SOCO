#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include<unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

void pre() {
    return ;
}

lli p[N];

void solve()
{
    lli n, x;
    cin>>n>>x;
    string s;
    cin>>s;
    lli c0 = 0, c1 = 0;
    bool ok = 0;
    memset(p, 0, sizeof p);
    for(int i = 0; i < s.size(); i ++) {
        if(s[i] == '0')
            c0 ++;
        else
            c1 ++;
        if(c0 - c1 == x) {
            ok = 1;
        }
        p[i] = c0 - c1;
    }
    if(ok && c0 - c1 == 0) {
        cout<<-1<<'\n';
        return ;
    }
    lli q = inf;
    lli ans = 0;
    if(x == 0)
        ans ++;
    for(int i = 0; i < n; i ++) {
        lli t = x - p[i];
        if(p[n - 1] != 0 && abs(t) % abs(p[n - 1]) == 0) {
            q = t / p[n - 1];
            if(q >= 0)
                ans ++;
        }
    }
    cout<<ans;
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

//    pre();

    int t = 1;
    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
/*
*/
