#include<bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define all(a) a.begin(),a.end()
#define endl '\n'
#define y1 y123123123
#define int ll

using namespace std;

const int N = 3e5 + 3;
const int inf = 1e9 + 3;
const int md = 1e9 + 7;

int q, n, k;
string s;
int a[N];
vector<int> ps[3][3];

int get_bin(int x, int y, int l1, int r1){
    if(ps[x][y].size() == 0)return 0;
    int l, r;
    l = 0;
    r = ps[x][y].size() - 1;
    while(l < r){
        int mid = (l + r) / 2;
        if(ps[x][y][mid] < l1)l = mid + 1;
        else r = mid;
    }
    if(ps[x][y][l] < l1)return 0;
    int l2 = l;
    l = 0;
    r = ps[x][y].size() - 1;
    while(l < r){
        int mid = (l + r + 1) / 2;
        if(ps[x][y][mid] > r1)r = mid - 1;
        else l = mid;
    }
    if(ps[x][y][l] > r1)return 0;
    if(l2 > l)return 0;
    return l - l2 + 1;
}

int get_res(int l, int r, int x){
    int cnt = 0;
    for(int j = 0; j < 3; ++j){
        int cv = (x + j) % 3;
        int ps = (l + j) % 3;
        cnt += get_bin(cv, ps, l + j, r);
    }
    return (r - l + 1) - cnt;
}

main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    cin >> q;
    for(int i = 1; i <= q; ++i){
        for(int j = 0; j < 3; ++j){
            for(int v = 0; v < 3; ++v){
                ps[j][v].clear();
            }
        }
        cin >> n >> k;
        cin >> s;
        for(int i = 0; i < n; ++i){
            if(s[i] == 'R')a[i] = 0;
            if(s[i] == 'G')a[i] = 1;
            if(s[i] == 'B')a[i] = 2;
            ps[a[i]][i % 3].pb(i);
        }
        int ans = inf;
        for(int j = 0; j + k - 1 < n; ++j){
            for(int v = 0; v < 3; ++v){
                ans = min(ans, get_res(j, j + k - 1, v));
            }
        }
        cout << ans << endl;
    }

}
