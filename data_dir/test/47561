#include<bits/stdc++.h>
using namespace std;
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007LL
#define inf                 (ll)1e15
#define vi                  vector<ll>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<ll,ll>
#define all(c)              c.begin(),c.end()
#define sz(c)               (ll)c.size()
#define hash1               31LL
#define hash2               10000000000000061LL
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
    ll res=1;
    x=x%p;
    while(y>0)
    {
        if(y&1)
            res=((res%p)*(x%p))%p;
        y=y>>1;
        x=((x%p)*(x%p))%p;
    }
    return res;
}
ll raichu(ll x,ll y)
{
    ll res=1;
    while(y>0)
    {
        if(y&1)
            res=((res)*(x));
        y=y>>1;
        x=((x)*(x));
    }
    return res;
}
bool isprime(ll n)
{
    if(n<2) return false;
    else if(n==2) return true;
    else if(n%2==0) return false;
    else
    {
        ll z=sqrt(n);
        rep(i,z-1) if(n%(i+2)==0) return false;
        return true;
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    ll n;
    cin>>n;
    string S;
    cin>>S;
    ll m;
    cin>>m;
    map<ll,ll> M;
    vector<string> v(m);
    rep(i,m)
    {
        string s;
        cin>>s;
        v[i]=s;
        rep(j,sz(s))
        {
            if(s[j]>='A' && s[j]<='Z')
            {
                s[j]=s[j]-'A'+'a';
            }
        }
        ll add=0,mul=1;
        for(ll j=0;j<sz(s);j++)
        {
            add+=(mul*s[j]);
            add%=hash2;
            mul*=hash1;
            mul%=hash2;
        }
        M[add]=i;
    }
    vi dp(n,0),backtrack(n),ans(n);
    rep(i,n)
    {
        ll add=0,mul=1;
        for(ll j=i;j>=0 && i-j+1<=1000;j--)
        {
            add+=(mul*S[j]);
            add%=hash2;
            mul*=hash1;
            mul%=hash2;
            if(M.find(add)!=M.end())
            {
                if(j==0 || dp[j-1]==1)
                {
                    dp[i]=1;
                    backtrack[i]=j-1;
                    ans[i]=M[add];
                    break;
                }
            }
        }
    }
    ll in=n-1;
    vector<ll> Ans;
    while(in>=0)
    {
        Ans.pb(ans[in]);
        in=backtrack[in];
    }
    rep(i,sz(Ans))
    {
        cout<<v[Ans[sz(Ans)-1-i]]<<" ";
    }
    return 0;
}
