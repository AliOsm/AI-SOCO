#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define Lmax 10000005
#define pb push_back
#define mp make_pair
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

int n,R,C,dp[Nmax][20],nxt[Nmax],len,l[Nmax],r[Nmax];
char a[Lmax];

inline void Spaces(int &p)
{
    for(;a[p]==' ';++p);
}

inline void Words()
{
    int i,cnt=0;
    for(i=1;i<=len;)
    {
        Spaces(i);
        l[++cnt]=i;
        for(;i<=len && a[i]>='a' && a[i]<='z';++i);
        r[cnt]=i-1;
    }
}

inline void RMQ()
{
    int i,j;
    for(i=1;i<=n+1;++i) dp[i][0]=nxt[i];
    for(j=1;j<20;++j)
        for(i=1;i<=n+1;++i) dp[i][j]=dp[dp[i][j-1]][j-1];
}

inline int Query(int p, int x)
{
    for(int i=19;i>=0;--i)
    {
        if((1<<i)>x) continue;
        p=dp[p][i]; x-=(1<<i);
    }
    return p;
}

inline void Linie(int k1, int k2)
{
    for(int i=l[k1];i<=r[k2];++i) cout<<a[i];
}

inline void Afis(int x, int y)
{
    //cout<<x<<" "<<y<<"\n";
    for(int i=1;i<=R && x<=y;++i)
    {
        Linie(x,nxt[x]-1); cout<<"\n";
        x=nxt[x];
    }
}

int main()
{
    int i,j,left,right,sol=0;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n>>R>>C; cin.get();
    cin.getline(a+1,Lmax);
    len=strlen(a+1);
    Words();
    for(i=j=n;i;--i)
    {
        while(r[j]-l[i]+1>C) --j;
        nxt[i]=j+1;
    }
    nxt[n+1]=n+1;
    RMQ();
    for(i=1;i<=n;++i)
    {
        j=Query(i,R);
        if(j-i>sol)
        {
            sol=j-i; left=i; right=j-1;
        }
    }
    Afis(left,right);
    return 0;
}
