#include <cstdio>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <set>
#include <cassert>
#include <unordered_map>
#include <cstring>

using namespace std;

typedef vector<int> vi;
typedef pair<int, int> ii;
typedef long long ll;

inline int read() {
	int x;
	scanf(" %d", &x);
	return x;
}

const int inf = 1e9 + 100;

char foo[64];
int cost[8];

int main() {
	int n = read();
	for (int i = 0; i < 8; i++) cost[i] = inf;
	for (int i = 0; i < n; i++) {
		int c = read();
		scanf(" %s", foo);
		int m = strlen(foo);
		int mask = 0;
		for (int j = 0; j < m; j++) {
			mask |= 1 << (foo[j] - 'A');
		}
		cost[mask] = min(cost[mask], c);
	}
	ll res = inf;
	for (int m = 0; m < 256; m++) {
		ll tot = 0;
		int tmask = 0;
		for (int i = 0; i < 8; i++) {
			if ((m >> i) & 1) {
				tot += cost[i];
				tmask |= i;
			}
		}
		//printf("m = %d, tot = %lld, tmask = %d\n", m, tot, tmask);
		if (tmask == 7) {
			res = min(res, tot);
		}
	}
	if (res == inf) {
		printf("-1\n");
	} else {
		printf("%lld\n", res);
	}
	return 0;
}