#include <bits/stdc++.h>
typedef long long ll;
using namespace std;
vector<int>bids;

int main() {
	int n; scanf("%d", &n);
	vector<vector<pair<int,int> > >occ(n);
	bids.resize(n, -1);

	for(int i = 0; i < n; i++){
		int a, b; scanf("%d%d", &a, &b);
		a--;
		occ[a].push_back(make_pair(i, b));
		bids[a] = i;
	}

	set<pair<int,int> >s;
	for(int i = 0; i < n; i++)
		s.insert(make_pair(bids[i], i));

	int q; scanf("%d", &q);
	while(q--){
		int k; scanf("%d", &k);
		vector<int>tmp(k);
		for(int i = 0; i < k; i++){
			int ab; scanf("%d", &ab); ab--;
			tmp[i] = ab;
			if(bids[ab] != -1)
				s.erase(s.lower_bound(make_pair(bids[ab], -1)));
		}

		if(!s.size())
			printf("0 0\n");
		else{
			int high = (*s.rbegin()).second;
			if(bids[high] == -1)
				printf("0 0\n");
			else{
				s.erase(s.lower_bound(make_pair(bids[high], -1)));
				int bef = -1;
				if(s.size())
					bef = (*s.rbegin()).first;
				int ind = upper_bound(occ[high].begin(), occ[high].end(), make_pair(bef, 0)) - occ[high].begin();
				printf("%d %d\n", high + 1, occ[high][ind].second);
				s.insert(make_pair(bids[high], high));
			}
		}
		for(int i = 0; i < k; i++)
			if(bids[tmp[i]] != -1)
				s.insert(make_pair(bids[tmp[i]], tmp[i]));
	}
	return 0;
}
