#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;

const int MX = 10'000'009;

int cnt[MX];

const int N = 1'000'009;

int a[N];

int main() {
  int n;
  scanf("%d", &n);
  memset(cnt, 0, sizeof cnt);
  for (int i = 0; i < n; ++i) {
    scanf("%d", a + i);
    ++cnt[a[i]];
  }
  long long best = 1'000'000'000'000'000'000;
  int x = -1, y = -1;
  for (int d = 1; d < MX; ++d) {
    int cx = -1, cy = -1;
    for (int i = d; i < MX; i += d) {
      for (int j = 0; j < cnt[i]; ++j) {
        if (cx == -1) {
          cx = i;
        } else
        if (cy == -1) {
          cy = i;
        } else {
          break;
        }
      }
    }
    if (cx != -1 && cy != -1 && (long long)cx * cy / d < best) {
      best = (long long)cx * cy / d;
      x = cx;
      y = cy;
    }
  }
  int ansx = -1, ansy = -1;
  for (int i = 0; i < n; ++i) {
    if (a[i] == x) {
      ansx = i;
      break;
    }
  }
  for (int i = 0; i < n; ++i) {
    if (i != ansx && a[i] == y) {
      ansy = i;
      break;
    }
  }
  if (ansx > ansy) {
    swap(ansx, ansy);
  }
  printf("%d %d\n", ansx + 1, ansy + 1);
}
