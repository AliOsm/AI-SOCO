#include <bits/stdc++.h>
using namespace std;

#define clr(i, j)     memset(i, j, sizeof(i))
#define pb            push_back
#define mp            make_pair
typedef long long     ll;
int mod = 1e9+7;
int n, e, cnt, cost[100001], vis[100001];
vector<int> g1[100001], g2[100001], ssc;
ll tot1, tot2 = 1, mn;
void dfs1(int i)
{
    if(vis[i])
        return;
    vis[i] = 1;
    for(int j=0; j<g1[i].size(); ++j)
        dfs1(g1[i][j]);
    ssc.pb(i);
}
void dfs2(int i)
{
    if(vis[i])
        return ;
    vis[i] = 1;
    if(mn > cost[i])
        mn = cost[i], cnt = 0;
    if(mn == cost[i])
        cnt++;
    for(int j=0; j<g2[i].size(); j++)
        dfs2(g2[i][j]);
}
int main()
{
    scanf("%d", &n);
    for(int i=0; i<n; i++)
        scanf("%d", &cost[i]);
    scanf("%d", &e);
    for(int i=0; i<e; i++)
    {
        int x, y;
        scanf("%d %d", &x, &y);
        x--, y--;
        g1[x].pb(y);
    }
    for(int i=0; i<n; i++)
        if(!vis[i])
            dfs1(i);
    for(int i=0; i<n; i++)
        for(int j=0; j<g1[i].size(); j++)
            g2[g1[i][j]].pb(i);
    clr(vis, 0);
    for(int i=n-1; i>=0; i--)
    {
        int v = ssc[i];
        if(!vis[v])
        {
            cnt = 0;
            mn = INT_MAX;
            dfs2(v);
            tot1 += mn, tot2 = (tot2%mod*cnt%mod)%mod;
        }
    }
    printf("%I64d %I64d\n", tot1, tot2);
}
