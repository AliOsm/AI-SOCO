#include <bits/stdc++.h>

using namespace std;

#define mx 300005
#define int long long
#define pii pair <int, int>
#define piii pair <int, pii>
#define fi first
#define se second
#define mod 1000000007
#define seed 13
#define inf 1e18+5
#define pb push_back
#define mem(ara, x) memset(ara, x, sizeof ara)
#define read() freopen("in.txt", "r", stdin)
#define write() freopen("out.txt", "w", stdout)
#define fst ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

string str;

bool check(int N,int pos){return (bool)(N & (1<<pos));}

int ara[505][505], one, both;

int32_t main(){
    //read();
    fst;
    int l, r;
    while(cin >> l >> r){
        int b = 0;
        int temp = l-1;
        int od = 0;
        int ev = 0;
        for(int i=0;i<63;i++){
            if(i%2){
                int a = (1LL<<i);
                a = min(a, temp);
                int t = (((ev+a)%mod)*((ev+a+1)%mod) - ((ev)%mod)*((ev+1)%mod))%mod;
                temp -= a;
                b = (b+t+mod)%mod;
                ev = (ev+a)%mod;
            }
            else{
                int a = (1LL<<i);
                a = min(a, temp);
                int t = ((od+a)%mod)*((od+a)%mod) - ((od)%mod)*((od)%mod);
                t = (t%mod);
                temp -= a;
                b = (b+t+mod)%mod;
                od = (od+a)%mod;
            }
        }
        int e = 0;
        temp = r;
        od = 0;
        ev = 0;
        for(int i=0;i<63;i++){
            if(i%2){
                int a = (1LL<<i);
                a = min(a, temp);
                int t = (((ev+a)%mod)*((ev+a+1)%mod) - ((ev)%mod)*((ev+1)%mod))%mod;
                temp -= a;
                e = (e+t+mod)%mod;
                ev = (ev+a)%mod;
            }
            else{
                int a = (1LL<<i);
                a = min(a, temp);
                int t = ((od+a)%mod)*((od+a)%mod) - ((od)%mod)*((od)%mod);
                t = (t%mod);
                temp -= a;
                e = (e+t+mod)%mod;
                od = (od+a)%mod;
            }
        }
        int ans = (e - b + mod)%mod;
        cout << ans << endl;
    }
    return 0;
}
