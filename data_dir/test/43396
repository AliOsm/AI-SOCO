/**
SXR0aXAkI0JwbXptI3FhI3Z3I293bCNqY2IjUG0jMCNicG0jVHFkcXZvLyNCcG0jQW10bjBhY2phcWFicXZvLyNNYm16dml0MSNWdyNhdGN1am16I2tpdiNhbXF9bSNQcXUjVnd6I0F0bW14MSNQcWEjaXptI2l0dCNicHF2b2EjUXYjYnBtI3BtaWRtdmEjaXZsI3d2I21pemJwMSNFcHcjcWEjYnBtem0ja2l2I3F2Ym16a21sbSNRdiNQcWEjeHptYW12a20jbXtrbXhiI0lhI3BtI3htenVxYmJtYnBHI1BtI3N2d2VtYnAjRXBpYiMraXh4bWl6bWJwI2J3I1BxYSNrem1pYmN6bWEjSWEsI0ptbnd6bSN3eiNJbmJteiN3eiNKbXBxdmwjYnBtdTEjVnd6I2FwaXR0I2JwbXwja3d1eGlhYSNJY29wYiN3biNwcWEjc3Z3ZXRtbG9tI017a214YiNpYSNQbSNlcXR0bWJwMSNQcWEjYnB6d3ZtI2x3YnAjbXtibXZsI1dkbXojYnBtI3BtaWRtdmEjSXZsI3d2I21pemJwLyNpdmwjUG0jbm1tdG1icCNWdyNuaWJxb2NtI3F2I29jaXpscXZvI0l2bCN4em1hbXpkcXZvI2JwbXUvI053eiNQbSNxYSNicG0jVXdhYiNQcW9wMSNCcG0jQWN4em11bSMrcXYjb3R3enwsMQ==
*/
#include <cstring>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <queue>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
 
#define F first
#define S second
#define endl '\n'
#define deb(x) cout<<#x<<' '<<x<<endl;
#define pb push_back
 using namespace __gnu_pbds;
using namespace std;

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
/*
#ifdef IZI_KATKA
#define int __int64_t
#else
#define int __int64
#endif
*/
const long long MOD = 1e9 + 7;
const long long MAXN = 1e6 + 1;

typedef long long ll;

#define pii pair<int,int>
 
long long readInt() {
    bool minus1 = false;
    long long result = 0;
    char ch;
    ch = getchar();
    while (true) {
        if (ch == '-') break;
        if (ch >= '0' && ch <= '9') break;
        ch = getchar();
    }
    if (ch == '-') minus1 = true; else result = ch-'0';
    while (true) {
        ch = getchar();
        if (ch < '0' || ch > '9') break;
        result = result*10 + (ch - '0');
    }
    if (minus1)
        return -result;
    else
        return result;
}

const int N = 5001;

ll dp[2*N];
int a[MAXN];
int b[MAXN];
int c[MAXN];
int mx[MAXN];
vector <int> g[N];

int main() {
	#ifdef IZI_KATKA
	assert(freopen("input", "r", stdin));
    assert(freopen("output", "w", stdout));
    #endif
    int n = readInt(), m = readInt(), k = readInt();
    for (int i = 1; i <= n; i++) {
    	a[i] = readInt(), b[i] = readInt(), c[i] = readInt();
    	mx[i] = i;
    }
    for (int i = 1; i <= m; i++) {
    	int a = readInt(), b = readInt();
    	mx[b] = max(mx[b], a);
    }
    for (int i = 1; i <= n; i++) {
    	g[mx[i]].pb(c[i]);
    }
    for (int i = 1; i <= n; i++) {
    	sort(g[i].begin(), g[i].end());
    	reverse(g[i].begin(), g[i].end());
    }
    for (int i = 0; i <= N; i++) {
    	dp[i] = -MOD;
    }
    dp[k] = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = 0; j < a[i]; j++) {
			dp[j] = -MOD;
		}
		//dp[j + b[i]] = dp[j];
		for (int j = N; j >= 0; j--) {
			dp[j + b[i]] = max(dp[j + b[i]], dp[j]);
		}

		for (int j = 0; j <= N; j++) {
			ll sum = 0;
			for (int cnt = 0; cnt < g[i].size() && j - cnt - 1 >= 0; cnt++) {
				sum += g[i][cnt];
				dp[j - (cnt + 1)] = max(dp[j - (cnt + 1)], dp[j] + sum);
			}
		}
	}
	ll ans = -1;
	for (int i = 0; i <= N; i++) {
		ans = max(ans, dp[i]);			
	}
	cout << (ans);
	return 0;
}