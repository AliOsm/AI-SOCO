#include <bits/stdc++.h>
using namespace std;

#define all(x) begin(x), end(x)
#define sz(x) (ll)(x).size()

using ll = long long;
using ld = long double;

vector<vector<ll>> adj;
vector<ll> first, last, parent;
ll t = 0;

void dfs(ll cur = 0, ll pref = -1){
    parent[cur] = pref;
    first[cur] = t;
    for (ll x : adj[cur]) {
        if (x == pref) continue;
        t++;
        dfs(x, cur);
    }
    last[cur] = t;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    ll n, q;
    cin >> n >> q;
    adj.assign(n, {});
    for (ll i = 1; i < n; i++) {
        ll a, b;
        cin >> a >> b;
        a--;
        b--;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    first.assign(n, 0);
    last.assign(n, 0);
    parent.assign(n, -1);
    dfs();
    for (ll i = 0; i < q; i++) {
        ll l = 0;
        ll r = n;
        ll k;
        cin >> k;
        for (ll j = 0; j < k; j++) {
            ll x;
            cin >> x;
            x--;
            if (parent[x] >= 0) x = parent[x];
            l = max(l, first[x]);
            r = min(r, last[x]);
        }
        cout << (l < r ? "YES" : "NO") << endl;
    }
}
