#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define ndl '\n'
#define mp make_pair
#define pb push_back
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set=tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<int,ull> piu;
typedef vector<vector<int>> matrix;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=998244353;
const int N=5e5+123;
const int M=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

string s[N];

int p[21],cnt[11];

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>s[i];
        reverse(all(s[i]));
        cnt[sz(s[i])]++;
    }
    p[0]=1;
    for(int i=1;i<=20;i++){
        p[i]=p[i-1]*10ll%MOD;
    }
    int ans=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=sz(s[i]);j++){
            int x=s[i][j-1]-'0';
            for(int k=1;k<=10;k++){
                ans=(ans+1ll*p[j-1+min(j,k)]*cnt[k]*x)%MOD;
                ans=(ans+1ll*p[j-1+min(j-1,k)]*cnt[k]*x)%MOD;
            }
          //  cout<<ans<<endl;
        }

    }
    cout<<ans;
    return 0;
}
