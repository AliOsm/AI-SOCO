#include<bits/stdc++.h>
#define MOD (ll)(1e9+7)
#define MAX (ll)(3e5 + 3)
#define INF (ll)(1e18)
#define PI 3.14159265
using namespace std;
using ll = long long;

int main () {
	int n , k , p;
	vector <int> odd;
	vector <int> even;
	cin >> n >> k >> p;
	int ar[n];
	for (int i = 0; i < n; i++) {
		cin >> ar[i];
		if (ar[i] & 1) {
			odd.push_back (i);
		}
		else {
			even.push_back (i);
		}
	}
	bool fl = 1;
	vector <int> gr[k + 1];
	int grn = 0;
	vector <pair <int, int>> vec;
	if (odd.size () >= k - p && (odd.size ()  - k + p) % 2 == 0) {
		for (int i = 0; i < k - p; i++) {
			gr[++grn].push_back (odd[i]);
		}
		for (int i = k - p; i < odd.size (); i += 2) {
			vec.push_back (make_pair (odd[i], odd[i + 1]));
		}	
	}
	else {
		fl = 0;
	}
	int vec_ind = 0;
	if (fl && even.size () + vec.size () >= p) {
		if (even.size () >= p) {
			for (int i = 0; i < p; i++) {
				gr[++grn].push_back (even[i]);
			}
			for (int i = p; i < even.size (); i++) {
				gr[grn].push_back (even[i]);
			}
		}
		else {
			for (int i = 0; i < even.size (); i++) {
				gr[++grn].push_back (even[i]);
			}
			for (;vec_ind < p - even.size (); vec_ind++) {
				gr[++grn].push_back (vec[vec_ind].first);
				gr[grn].push_back (vec[vec_ind].second);
			}
		}
	}
	else {
		fl = 0;
	}
	if (fl) {
		for (;vec_ind < vec.size (); vec_ind++) {
				gr[grn].push_back (vec[vec_ind].first);
				gr[grn].push_back (vec[vec_ind].second);
		}
		cout << "YES\n";
		for (int i = 1; i <= k; i++) {
			cout << gr[i].size () << " ";
			for (int x : gr[i]) {
				cout << ar[x] << " ";
			}
			cout << '\n';
		}
			
	}
	else {	
		cout << "NO\n";
	}
}
		

	
