#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

const int mod = 1e9 + 7;

int add(int a, int b)
{
	return (a + b) % mod;
}

int sub(int a, int b)
{
	return (a - b + mod) % mod;
}

int mul(int a, int b)
{
	return (1ll * a * b) % mod;
}


int fastpow(int b, int p)
{
	if(!p)
		return 1;
	int ret = fastpow(b, p / 2);
	ret = mul(ret, ret);
	if(p & 1)
		ret = mul(ret, b);
	return ret;
}
int k, pa, pb;
int dp[1005][1005];

int solve(int a, int ab)
{
	int &ans = dp[a][ab];
	if(~ans)
		return ans;
	if(a + ab >= k)
	{
		int E = mul(pa, fastpow(sub(1, pa), mod - 2));
		E = add(E, a);
		E = add(E, ab);
		return ans = E;
	}
	return ans = add(mul(solve(a + 1, ab), pa), mul(solve(a, ab + a), pb));
}

int main()
{
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int a, b;
	cin >> k >> a >> b;
	pa = mul(a, fastpow(a + b, mod - 2));
	pb = mul(b, fastpow(a + b, mod - 2));
	memset(dp, -1, sizeof dp);
	cout << solve(1, 0);
	return 0;
}
