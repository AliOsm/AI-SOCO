#include<bits/stdc++.h>

using namespace std;

const int maxn=1e5+5;
int a[maxn],bit1[maxn],bit2[maxn],dp1[maxn],dp2[maxn],cnt[maxn];
bool v[maxn];
int n;

static void update1(int idx,int val)
{
	while(idx<maxn)
	{
		bit1[idx]=max(bit1[idx],val);idx+=idx&-idx;
	}
}

static int query1(int idx)
{
	int ret=0;
	while(idx>0)
	{
		ret=max(ret,bit1[idx]);idx-=idx&-idx;
	}
	return ret;
}

static void update2(int idx,int val)
{
	while(idx>0)
	{
		bit2[idx]=max(bit2[idx],val);idx-=idx&-idx;
	}
}

static int query2(int idx)
{
	int ret=0;
	while(idx<maxn)
	{
		ret=max(ret,bit2[idx]);idx+=idx&-idx;
	}
	return ret;
}

int main()
{
	cin>>n;memset(bit1,0,sizeof(bit1));memset(bit2,0,sizeof(bit2));
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
	}
	int curr=0;
	for(int i=0;i<n;i++)
	{
		dp1[i]=1+query1(a[i]-1);update1(a[i],dp1[i]);curr=max(curr,dp1[i]);
	}
	for(int i=n-1;i>=0;i--)
	{
		dp2[i]=1+query2(a[i]+1);update2(a[i],dp2[i]);
	}
	
	for(int i=0;i<n;i++)
	{
		if(dp1[i]+dp2[i]-1==curr)
		{
			v[i]=true;cnt[dp1[i]]++;
		}
	}
	for(int i=0;i<n;i++)
	{
		if(!v[i])
		{
			cout<<1;
		}
		else
		{
			cout<<((cnt[dp1[i]]==1)?3:2);
		}
	}	
	cout<<endl;return 0;
}
