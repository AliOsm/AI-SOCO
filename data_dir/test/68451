//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n, k, arr[205];
int DP[202][202][1002];


int dp(int i, int open, int rem){

    if(rem < 0 || open < 0) return 0;
    if(i == n+1)  return (open == 0);
    if(DP[i][open][rem] != -1)  return DP[i][open][rem];

    ll ans = 0;

    //open and close a new group which has only arr[i] in it
    ans = (ans + 1LL*dp(i+1, open, rem-open*(arr[i+1]-arr[i]))) % MOD;

    //add arr[i] to some open group and then close it
    if(open > 0)
        ans = (ans + 1LL*open*dp(i+1, open-1, rem-(open-1)*(arr[i+1]-arr[i]))) % MOD;

    //add arr[i] to some open group and keep it open
    if(open > 0)
        ans = (ans + 1LL*open*dp(i+1, open, rem-open*(arr[i+1]-arr[i]))) % MOD;

    //open a new group with arr[i]
    ans = (ans + 1LL*dp(i+1, open+1, rem-(open+1)*(arr[i+1]-arr[i]))) % MOD;

// cout<<"dp "<<i<<" "<<open<<" "<<rem<<" returns "<<ans<<endl;
    return DP[i][open][rem] = ans;
}


int main(){

    ios_base::sync_with_stdio(0);
    //http://codeforces.com/blog/entry/47764

    cin>>n>>k;
    for(int i=1;i<=n;i++)
        cin>>arr[i];
    sort(arr+1, arr+n+1);
    arr[0] = arr[1];
    arr[n+1] = arr[n];

    memset(DP, -1, sizeof(DP));
    cout<<dp(1, 0, k);
    return 0;
}




