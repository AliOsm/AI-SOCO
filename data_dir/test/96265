//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
 
ll pwr(ll base, ll p, ll mod=MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


vector<int> primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67};
int mapping[100];
ll cnt[100], DP[2][1<<23], fac[100002], invFac[100002];


ll C(int n, int r){
    if(r < 0 || r > n)  return 0;
    ll ans = fac[n];
    ans = (ans * invFac[r]) % MOD;
    ans = (ans * invFac[n-r]) % MOD;
    return ans;
}


 
int main(){
 
    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

    fac[0] = invFac[0] = 1;
    for(int i=1;i<=100000;i++){
        fac[i] = (i * fac[i-1]) % MOD;
        invFac[i] = pwr(fac[i], MOD-2);
    }

    for(int i=0;i<(int)primes.size();i++)
        mapping[primes[i]] = i;

    int n;
    scanf("%d", &n);
    while(n--){
        int a;
        scanf("%d", &a);
        cnt[a]++;
    }

    DP[0][0] = 1;
    for(int i=0;i<=69;i++){

        int mask = 0, val = i+1;
        for(int j=2;j*j<=val;j++)
            if(val % j == 0){
                int c = 0;
                while(val % j == 0){
                    val /= j;
                    c++;
                }
                c %= 2;
                if(c)   mask |= (1 << mapping[j]);
            }
        if(val != 1) mask |= (1 << mapping[val]);

        ll evens = 0, odds = 0;
        for(int k=0;k<=cnt[i+1];k++)
            if(k & 1)
                odds = (odds + C(cnt[i+1], k)) % MOD;
            else
                evens = (evens + C(cnt[i+1], k)) % MOD;

// cout<<cnt[i+1]<<" "<<odds<<" "<<evens<<" mask = "<<mask<<endl;

        for(int m=0;m<(1<<20);m++)
            DP[(i+1)&1][m] = 0;

        for(int m=0;m<(1<<20);m++){
            int newmask = m ^ mask;
            DP[(i+1)&1][newmask] = (DP[(i+1)&1][newmask] + DP[i&1][m]*odds) % MOD;
            DP[(i+1)&1][m] = (DP[(i+1)&1][m] + DP[i&1][m]*evens) % MOD;
        }
    }

    printf("%lld", (DP[70&1][0]+MOD-1)%MOD);
    return 0;
}









