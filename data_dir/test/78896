//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
int n,nxt[303][305];
string w[305];
int check(int l, int r){
	int len=r-l+1,i,j;
	f(i,r+1,n){
		if(i+len-1>=n){
			return 0;
		}
		f(j,i,i+len){
			if(w[j]!=w[l+j-i]){
				break;
			}
		}
		if(j==i+len){
			return i;
		}
	}
	return 0;
}
int main(){
	std::ios::sync_with_stdio(false);
	int i,val,j,len,res,tm,i1,j1,c;
	cin>>n;
	val=n-1;
	rep(i,n){
		cin>>w[i];
		val+=w[i].length();
	}	
	res=val;
	rep(i,n){
		rep(j,n){
			nxt[i][j]=-1;
		}
	}
	rep(i,n){
		f(j,i,n){
			tm=check(i,j);
			if(tm==0){
				break;
			}
			else{
				nxt[i][j]=tm;
			}
			//cout<<i<<" "<<j<<" "<<nxt[i][j]<<endl;
		}
	}
	rep(i,n){
		len=0;
		f(j,i,n){
			len+=w[j].length();
			i1=i;
			j1=j;
			if(nxt[i][j]==-1){
				break;
			}
			c=1;
			while(nxt[i1][j1]!=-1){
				//cout<<"hi"<<endl;
				c++;
				i1=nxt[i1][j1];
				j1=i1+(j-i);
			}
			//cout<<i<<" "<<j<<" "<<c<<" "<<len<<endl;
			res=min(res,val-c*(len+j-i)+c*(j-i+1));
		}
	}
	cout<<res<<endl;
} 
	