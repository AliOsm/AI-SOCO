#include <bits/stdc++.h>
using namespace std;

#define rep(i, a, b) for (int (i) = (a); (i) < (b); ++(i))
#define per(i, a, b) for (int (i) = (a); (i) >= (b); ++(i))
#define sz(x) ((int) x.size())
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define pb push_back
#define mp make_pair

const int N = 1e5 + 10;

char a[N], b[N];

void solve() {
  scanf("%s %s", a, b);
  
  int n = strlen(a);
  int m = strlen(b);
  set<char> s;
  rep(i, 0, n) s.insert(a[i]);
  rep(i, 0, m) {
    if (s.count(b[i]) == 0) {
      puts("-1");
      return;
    }
  }
  
  vector<vector<int> > pos(26);
  rep(i, 0, n) pos[a[i] - 'a'].pb(i);
  
  vector<int> seq;
  seq.pb(-1);
  int ans = 1;
  rep(i, 0, m) {
    if (pos[b[i] - 'a'].back() <= seq.back()) {
//      puts("qq");
      seq.pb(pos[b[i] - 'a'].front());
      ++ans;
    } else {
      int z = upper_bound(all(pos[b[i] - 'a']), seq.back()) - pos[b[i] - 'a'].begin();
      seq.pb(pos[b[i] - 'a'][z]);
    }
  }
  
//  rep(i, 0, sz(seq)) printf("!!!! %d\n", seq[i]);
  printf("%d\n", ans);
}

int main() {
  int qq;
  scanf("%d", &qq);
  while (qq--) solve();
  return 0;
}