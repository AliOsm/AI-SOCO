#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>
#include <chrono>

using namespace std;
using ll = long long;
using ull = unsigned long long;
const int oo = numeric_limits<int>::max() / 2;
mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
  int n;
  cin >> n;
  string s;
  cin >> s;
  int z = 0, o = 0, t = 0;
  for(size_t i = 0; i < s.size(); ++i) {
    if (s[i] == '0') ++z;
    else if (s[i] == '1') ++o;
    else if (s[i] == '2') ++t;
  }

  if (z < n / 3) {
    for(size_t i = 0; i < s.size() && z != n / 3; ++i) {
      if (s[i] == '0') continue;
      if (s[i] == '2' && t > n / 3) {
        s[i] = '0';
        --t;
        ++z;
      } else if (s[i] == '1' && o > n / 3) {
        s[i] = '0';
        --o;
        ++z;
      }
    }
  }

  if (t < n / 3) {
    for(size_t i = s.size() - 1; i >= 0 && t != n / 3; --i) {
      if (s[i] == '2') continue;
      if (s[i] == '0' && z > n / 3) {
        s[i] = '2';
        --z;
        ++t;
      } else if (s[i] == '1' && o > n / 3) {
        s[i] = '2';
        --o;
        ++t;
      }     
    }
  }

  for(size_t i = s.size() - 1; i >= 0 && z > n / 3 && o != n / 3; --i) {
    if (s[i] != '0') continue;
    s[i] = '1';
    ++o;
    --z;
  }

  for(size_t i = 0; i < s.size() && t > n / 3 && o != n / 3; ++i) {
    if (s[i] != '2') continue;
    s[i] = '1';
    ++o;
    --t;
  }

  cout << s << endl;
  return 0;
}
