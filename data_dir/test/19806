#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll f[25];

ll solve(ll k){
    ll sum = 0, aux = 0;
    ll add = 0;
    while(1){
        ll maxi = pow(10, aux+1)-1;
        ll mini = pow(10, aux);
        if(maxi > k) maxi = k;
        // cout << mini << " " << maxi << endl;
        ll cnt = maxi-mini + 1; // cnt is the number o numbers with aux digits
        // cout << "cnt = " << cnt << endl;
        sum += add*(cnt) + (aux+1)*(cnt*(cnt+1))/2;
        add += cnt*(aux+1);
        aux++;
        // cout << "sum = " << sum << endl;
        if(maxi == k) break;
    }
    return sum;
}

ll go(ll k){
    ll aux = 0;
    ll add = 0;
    while(1){
        ll maxi = pow(10, aux+1)-1;
        ll mini = pow(10, aux);
        if(maxi > k) maxi = k;
        
        ll cnt = maxi-mini + 1; // cnt is the number o numbers with aux digits
        add += cnt*(aux+1);
        aux++;
        if(maxi == k) break;
    }
    return add;
}


    /*
        1             -> 1  1
        12            -> 2  3
        123           -> 3  6
        1234          -> 4  10
        12345         -> 5  15
        123456        -> 6  21
        1234567       -> 7  28
        12345678      -> 8  36
        123456789     -> 9  45
        12345678910   -> 11 56
        1234567891011 -> 13 69
        123456789101112 -> 15 84
    */


int main(){
    ll q; cin >> q;
    while(q--){
        ll k; cin >> k;
        ll res = 0;
        ll esq = 1, dir = 1e9;
        while(esq <= dir){
            ll mid = (esq+dir)/2;
            ll val = solve(mid);
            if(val < k) res = max(res, mid), esq = mid+1;
            else dir = mid-1;
        }
        // cout << res << endl;
        k -= solve(res);
        esq = 1, dir = 1e9;
        res = 1e9;
        while(esq <= dir){
            ll mid = (esq+dir)/2;
            ll val = go(mid);
            if(val >= k) res = min(res, mid), dir = mid-1;
            else esq = mid + 1;
        }
        // cout << res << endl;
        // return 0;
        ll diff = go(res)-k;
        cout << (res / int(pow(10, diff))%10) << endl;
        
    }
   
	return 0;
}