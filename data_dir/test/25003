#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>

using namespace std;

void minimize(int &a,int b)
{
  a=min(a,b);
}

void maximize(int &a,int b)
{
  a=max(a,b);
}

const int limit=1000005;

int n,k;
vector<int> g[limit];
int shortest[limit];
int inside[limit];
int come[limit];

void compute(int u)
{
  shortest[u]=limit;
  vector<int> &ar=g[u];
  if (u!=1 and int(ar.size())==0) {
    shortest[u]=0;
    come[u]=1;
    inside[u]=1;
    return;
  } else if (int(ar.size())==0) {
    return;
  }
  int s=0;
  for (int i=0;i<int(ar.size());i++) {
    int v=ar[i];
    compute(v);
    minimize(shortest[u],shortest[v]+1);
    s+=come[v];
  }
  for (int i=0;i<int(ar.size());i++) {
    int v=ar[i];
    maximize(inside[u],inside[v]+s-come[v]);
  }
  if (shortest[u]<k) come[u]=s;
}

int main()
{
  scanf("%d%d",&n,&k);
  for (int u=2;u<=n;u++) {
    int p;
    scanf("%d",&p);
    g[p].push_back(u);
  }
  compute(1);
  cout<<inside[1]<<endl;
}

