#include <bits/stdc++.h>
using namespace std;

const int N = 1000005;
const int mod = 1e9+7;

int n, m, a[N], cnt[N], fact[N];

int seed[2] = {100003, 100019};
int pr[2][N];
int md[2];

pair<int,int> b[N];

bool isPrime(int n) {
	if (n <= 1) return false;
	for (int i = 2; i*i <= n; ++i) {
		if (n % i == 0) return false;
	}
	return true;
}

void add(int id, int val, int pos) {
	b[id].first = (b[id].first + 1LL*val*pr[0][pos])%md[0];
	b[id].second = (b[id].second + 1LL*val*pr[1][pos])%md[1];
}

void prepare() {
	srand(time(0));
	md[0] = mod/2 + rand() % (mod/2);
	md[1] = mod/2 + rand() % (mod/2);
	while (!isPrime(md[0])) ++md[0];
	while (!isPrime(md[1])) ++md[1];
	pr[0][0] = pr[1][0] = 1;
	for (int j = 0; j < 2; ++j) {
		for (int i = 1; i < N; ++i) {
			pr[j][i] = (1LL*pr[j][i-1]*seed[j])%md[j];
		}
	}
}

int main() {
	ios::sync_with_stdio(false);

	prepare();

	cin >> n >> m;

	fact[0] = 1;
	for (int i = 1; i < N; ++i) {
		fact[i] = (1LL*fact[i - 1]*i) % mod;
	}

	for (int j = 0; j < n; ++j) {
		int sz;
		cin >> sz;
		for (int i = 0; i < sz; ++i) {
			cin >> a[i];
			--a[i];
			++cnt[a[i]];
		}
		for (int i = 0; i < sz; ++i) {
			if (!cnt[a[i]]) continue;
			add(a[i], cnt[a[i]], j);
			cnt[a[i]] = 0;
		}
	}
	sort(b, b + m);

	int result = 1;
	
	for (int i = 0; i < m; ++i) {
		int j = i;
		while (j < m && b[i] == b[j]) ++j;
		result = (1LL*result*fact[j-i]) % mod;
		i = j - 1;
	}

	cout << result << endl;
	return 0;
}