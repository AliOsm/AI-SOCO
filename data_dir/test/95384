#include <iostream>
#include <algorithm>
#include <time.h>
#include <stack>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <cassert>

using namespace std;

const int N = 100005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int n;
int sz[N];
vector <int> g[N] , h[3];

void dfs(int v,int p,int r){
    h[r].push_back(v);
    for(int i=0;i<(int)g[v].size();i++){
        int to = g[v][i];
        if(to == p)continue;
        dfs(to , v , (r + 1) % 2);
    }
}

int main(){
    cin>>n;
    for(int i=1;i<n;i++){
        int a,b;
        cin>>a>>b;
        sz[a]++;
        sz[b]++;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    dfs(1 , 0 , 0);
    long long answ = 0;
    for(int i=0;i<(int)h[0].size();i++){
        int v = h[0][i];
        answ += 1ll * ((int)h[1].size() - sz[v]);
    }
    cout<<answ<<endl;
    return 0;
}
