//求i < j 而且 a[i]>=j && a[j]>=i的对数

//对于每个a[j]我们去计算有多少a[i]满足条件
//对于一个a[j],满足条件的i不会超过a[j], 最大的i = min(j - 1, a[j]);
//所以对于每个j我们可以确定最大的i在哪里

//那么接下来就是查询有多少的a[i] >= j, 即在[1, maxi]区间内有多少的
//a[i] >= j
//用一个树状数组即可搞定

#include <bits/stdc++.h>
using namespace std;

const int N = 200010;

int a[N];
int n;

vector<int> v[N];

int c[N];

void M(int x) {
  for (; x < N; x += x & -x) {
    c[x]++;
  }
}

int Q(int x) {
  int ret = 0;
  for (; x; x -= x & -x) {
    ret += c[x];
  }
  return ret;
}

int main() {
  
  scanf("%d", &n);

  for (int i = 1; i <= n; i++) {
    scanf("%d", &a[i]);
    a[i] = min(a[i] , n);
    v[min(i - 1, a[i])].push_back(i);
  }

  long long ret = 0;
  for (int i = 1; i <= n; i++) {
    M(a[i]);
    for (auto it : v[i]) { //枚举以i为最大的i的所有的j(it)
    //  cout << Q(n) << " " << Q(it - 1) <<endl;
      ret += Q(n) - Q(it - 1);
    }
  }
  cout << ret <<endl;

  return 0;
}
