#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y,z;
    bool operator <(const P&a) const{
        return x<a.x;
    }
};

bool as(P a,P b)
{
    return a.x>b.x;
}

long long x,y,z,mod=1000000007;
vector<int> v[1];
int i,n,m,k,a,d,b,c;
int dx[10]={0,1,0,-1,0},dy[10]={0,0,1,0,-1};
int e;
int o[11];
int l[1];
int j[1];

//set<int> s;
stack<int> s;

queue<int> q,q1;
map<int,int> p;
P u[1];
//char r;
string r;


int main()
{
    scanf("%d",&e);
    for(int pp=1;pp<=e;pp++)
    {
        scanf("%d",&a);
        for(int t=1;t<=3;t++)
            scanf("%d",&o[t]);
        l[1]=l[2]=l[3]=0;
        cin>>r;
        for(int t=0;t<r.size();t++)
            if(r[t]=='R') l[2]++;
            else if(r[t]=='S') l[1]++;
            else l[3]++;
        int k=0;
        for(int t=1;t<=3;t++)
            k+=min(l[t],o[t]);
        if(k*2<a) puts("NO");
        else
        {
            puts("YES");
            for(int t=0;t<r.size();t++)
            if((r[t]=='P'&&o[3]))
            {
                o[3]--;
                l[3]--;
                printf("S");
            }
            else if((r[t]=='R'&&o[2]))
            {
                o[2]--;
                l[2]--;
                printf("P");
            }
            else if(r[t]=='S'&&o[1])
            {
                o[1]--;
                l[1]--;
                printf("R");
            }
            else
            {
                if(r[t]=='R') l[2]--;
                else if(r[t]=='S') l[1]--;
                else l[3]--;
                if(o[1]>l[1])
                {
                    o[1]--;
                    printf("R");
                }
                else if(o[2]>l[2])
                {
                    o[2]--;
                    printf("P");
                }
                else
                {
                    o[3]--;
                    printf("S");
                }
            }
            puts("");
        }
    }
}

