#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

int sub[3456789], par[3456789], ans[3456789];

vector<int> g[3456789];

set< pair<int,int> > e[3456789];

void dfs(int v) {
	sub[v] = 1;
	int mx = -1;
	for (int u: g[v]) {
		dfs(u);
		sub[v] += sub[u];
		if (mx == -1 || sub[u] > sub[mx])
			mx = u;
	}
	if (mx == -1) {
		par[v] = v;
		e[v].insert({sub[v], v});
		ans[v] = v + 1;
		return;
	}
	par[v] = par[mx];
	e[par[v]].insert({sub[v], v});
	ans[v] = e[par[v]].upper_bound({sub[v] / 2, 3456789})->second + 1;
}

int main() {
	int n, q;
	cin >> n >> q;
	for (int i = 1; i < n; ++i) {
		int p;
		cin >> p;
		p --;
		g[p].push_back(i);
	}
	dfs(0);
	for (int i = 0; i < q; ++i) {
		int v;
		cin >> v;
		cout << ans[-- v] << '\n';
	}
    return 0;
}
