#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define mx 100010
#define mod 1000000007
#define int long long
#define pi acos(-1.0)
#define BLOCK 320
#define inf 1000000000000000001

using namespace std;

const int N=30;

int ara[mx];
int k;
int ans;

struct node{
    node *next[2];
    int cnt;
    node(){
        cnt=0;
        for(int i=0;i<2;i++){
            next[i]=NULL;
        }
    }
}*root;


void update(int val,int p){
    node *cur=root;
    for(int i=N;i>=0;i--){
        bool id = (val & (1<<i));
        if(cur->next[id]==NULL){
            cur->next[id] = new node();
        }
        cur = cur->next[id];
        cur->cnt+=p;
    }
}

int query(int val){
    node *cur=root;
    int ans=0;
    for(int i=N;i>=0;i--){
        bool id = (val & (1<<i));
        if(cur->next[!id] && cur->next[!id]->cnt){
            ans += (1<<i);
            cur = cur->next[!id];
        }
        else{
            cur = cur->next[id];
        }
    }
    return ans;
}

void del(node *cur){
    for(int i=0;i<2;i++){
        if(cur->next[i]){
            del(cur->next[i]);
        }
    }
    delete(cur);
}


main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int t;
    cin>>t;
    int n;
    char c;
    root = new node();
    update(0,1);
    while(t--){
        cin>>c>>n;
        if(c=='+'){
            update(n,1);
        }
        else if(c=='-'){
            update(n,-1);
        }
        else{
            int ans=query(n);
            cout<<ans<<endl;
        }
    }
    return 0;
}


