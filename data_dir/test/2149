// Aggressive Play

#include<bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;

void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

const int N = 3e5 + 5;
ll a[N];
bool check(vector<string> & yo){
    string go = "XXXXX";
    for(int row = 0; row < 10; row++){
        for(int col = 0; col <= 5; col++){
            string yoo = yo[row].substr(col, 5);
            if(yoo == go)
                return 1;
        }
    }
    for(int row = 0; row <= 5; row++){
        for(int col = 0; col <= 5; col++){
            string yoo;
            int x = row, y = col;
            for(int k = 0; k < 5; k++){
                yoo += yo[x][y];
                x++, y++;
            }
            if(yoo == go)
                return 1;
        }
    }

    for(int i = 0; i < 10; i++){
        for(int j = i; j < 10; j++){
            swap(yo[i][j], yo[j][i]);
        }
    }
    for(int i = 0; i < 10; i++){
        for(int j = 0, k = 10 - 1; j < k; j++, k--){
            swap(yo[j][i], yo[k][i]);
        }
    }
    for(int row = 0; row < 10; row++){
        for(int col = 0; col <= 5; col++){
            string yoo = yo[row].substr(col, 5);
            if(yoo == go)
                return 1;
        }
    }

    for(int row = 0; row <= 5; row++){
        for(int col = 0; col <= 5; col++){
            string yoo;
            int x = row, y = col;
            for(int k = 0; k < 5; k++){
                yoo += yo[x][y];
                x++, y++;
            }
            if(yoo == go)
                return 1;
        }
    }

    return 0;
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n = 10;
    vector<string> s(n);
    for(int i = 0; i < 10; i++){
        cin >> s[i];
    }
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            if(s[i][j] == '.'){
                vector<string> yo = s;
                yo[i][j] = 'X';
                if(check(yo))
                    return cout << "YES", 0;
            }
        }
    }
    cout << "NO";
return 0;
}
