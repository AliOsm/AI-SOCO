#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <set>
#include <string.h>
using namespace std;

#define sz(x) int((x).size())
const int inf = 1000000000;
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define pi 2*acos(0.0)
#define sqr(a) (a)*(a)
#define mp make_pair
#define pb push_back
typedef long long Int;

string b[2001];
int h[2002];
vector<int> g[2002][26];
int f[2002][26];
string s;
int dp1[2002][26];
int id[2002];
int dp[2002][2002];



int nx(int len,char c,const int &k)
{
	if(len==inf)return inf;

	int ans;
	if(len==0)
	{
		ans=dp1[1][c-'a'];
		if(ans==inf)return inf;
		return f[id[ans]][c-'a']+h[ans-1]+1;
	}

	int l=1,r=k;
	while(l!=r)
	{
		int m=((l+r)>>1);
		if(h[m]<len)l=m+1;else
			r=m;
	}

	int t=id[r];
	if(g[t][c-'a'][len-h[r-1]]!=inf)return g[t][c-'a'][len-h[r-1]]+h[r-1]+1;

	
	t=dp1[r+1][c-'a'];
	if(t==inf)return inf;
	return f[id[t]][c-'a']+h[t-1]+1;
}


int main()
{
  // freopen("input.txt","r",stdin);
   int n;
   scanf("%d\n",&n);
   FOR(i,1,n)
   {
	   getline(cin,b[i]);
	 
	   FOR(j,0,25)f[i][j]=-1;
	   FOR(j,0,sz(b[i])-1)
		   if(f[i][b[i][j]-'a']==-1)
			   f[i][b[i][j]-'a']=j;

	   FOR(j,0,25)
	   g[i][j].resize(sz(b[i])+1);
	   
	   FOR(j,0,25)g[i][j][sz(b[i])]=inf;
	   for(int c=sz(b[i])-1;c>=0;c--)
	   {
		   FOR(j,0,25)
			   g[i][j][c]=g[i][j][c+1];
		   g[i][b[i][c]-'a'][c]=c;
	   }
   }
   
   h[0]=0;
   int k;
   scanf("%d\n",&k);
   FOR(i,1,k)cin>>id[i],h[i]=h[i-1]+sz(b[id[i]]);
   scanf("\n");
   getline(cin,s);s=" "+s;
   
   FOR(i,0,25)dp1[k+1][i]=inf;
   for(int i=k;i>=1;i--)
   FOR(j,0,25)
   {
	   if(f[id[i]][j]!=-1)dp1[i][j]=i;else
		   dp1[i][j]=dp1[i+1][j];
   }



   FOR(i,0,sz(s)-1)
   FOR(j,0,sz(s)-1)
   {
	   if(i<j){dp[i][j]=inf;continue;}
	   if(j==0){dp[i][j]=0;continue;}
	   dp[i][j]=dp[i-1][j];

	   if(dp[i-1][j-1]!=inf)
	   {
		//cout<<dp[i-1][j-1]<<" "<<s[i]<<" "<<" "<<k<<" "<<nx(dp[i-1][j-1],s[i],k)<<endl;
	   dp[i][j]=min(dp[i][j],nx(dp[i-1][j-1],s[i],k));
	   }

	   //cout<<i<<" "<<j<<" "<<dp[i][j]<<endl;
   }
   int ans=0;
   FOR(i,1,sz(s)-1)
	   if(dp[sz(s)-1][i]<=h[k])
		   ans=i;
   cout<<ans<<endl;
   return 0;
}
