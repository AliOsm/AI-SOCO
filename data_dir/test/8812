#include <bits/stdc++.h>

using namespace std;

using ll = long long;

const int maxn = 1e5 + 10;
const int inf = 1e9 + 5;
const ll llinf = 1e18 + 5;
const int mod = 998244353;

int main() {
//  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
  std::ios_base::sync_with_stdio(false);

  int k;
  cin >> k;

  for (int last = 750000; last <= 1000000; ++last) {
    int tot = k + last;
    for (int n = 2; n * n <= tot && n <= 2000; ++n) {
      if (tot % n != 0) {
        continue;
      }
      int sum = last - tot / n;
      if (sum >= n - 1 && sum <= (n - 1) * 1000000LL) {
//        cout << n << ' ' << sum << ' ' << last << ' ' << tot / n << endl;
        vector<int> ans(n);
        for (int i = 0; i < n - 1; ++i) {
          ans[i] = 1;
          sum--;
        }
        for (int i = 0; i < n - 1; ++i) {
          int ex = min(999999, sum);
          sum -= ex;
          ans[i] += ex;
          ans[i] *= -1;
        }
        ans.back() = last;

        long long res = last;
        long long s = 0;
        for (int i = n - 1; i >= 0; --i) {
          s += ans[i];
          res = max(res, s * (n - i));
        }
        if (res - last == k) {
          cout << n << endl;
          for (auto x : ans) cout << x << ' ';
          return 0;
        }
      }
    }
  }
  assert(false);
  return 0;
}

/*
 * (n + 1) * (-750000 + last) - last = k
 */
/*
 * 2000 * s - last = k
 * k = 10
 * p = 4
 * -2 -1 -1 6
 *
 */