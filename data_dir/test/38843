// start of CP 3.0
#include <bits/stdc++.h>
 
//____By:sirjan13____
 
#define int long long
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i & 1]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll
 
inline int sbt(int x){return __builtin_popcount(x);}
 
using namespace std;
 
#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 200013
bool ok;

bool cmp(pair<int, pair<int, pi>> x, pair<int, pair<int, pi>> y) {
    return x.se.fi < y.se.fi;
}
 
inline int mul(int a, int b, int m = mod) { return (a * b) % m; }
inline int add(int a, int b, int m = mod) { return (a + b) % m; }
inline int sub(int a, int b, int m = mod) { return (a - b + m) % m; }
 
int fastpow(int a, int b) {
    int res = 1;
    while(b > 0) {
        if(b & 1) res = mul(res, a);
        a = mul(a, a);
        b >>= 1;
    }
    return res;
}
 
int modinv(int a) {
    return fastpow(a, mod - 2);
}

int pre[N];
int a[N];
int n, k;

 
int32_t main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    int t;
    cin >> t;
    while(t--) {
        cin >> n >> k;
        for(int i = 1; i <= n; i++) {
            cin >> a[i];
        }
        pre[0] = pre[1] = 0;
        for(int i = 2; i < n; i++) {
            pre[i] = pre[i - 1];
            if(a[i] > a[i - 1] and a[i] > a[i + 1]) pre[i]++;
        }
        pre[n] = pre[n - 1];
        int ind = 0, res = -1;
        for(int i = 1; i <= n - k + 1; i++) {
            int l = i;
            int r = i + k - 1;
            if((pre[r - 1] - pre[l]) > res) {
                res = pre[r - 1] - pre[l];
                ind = i;
            }
        }
        cout << res + 1 << ' ' << ind << endl;
    }
    return 0;
}
