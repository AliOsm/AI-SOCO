#pragma comment(linker, "/STACK:268435456")

#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>
#include<memory.h>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cmath>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define for1(i, n) for(int i = 1; i <= (int)(n); ++i)
#define forr(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = int(a); i <= int(b); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())
#define hash archash
#define next arcnext
#define link arclink
#define y0 arcy0
#define y1 arcy1
#define log2 arclog2

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair <int, int> pt;
typedef vector <int> vi; 
typedef vector <vector <int> > vvi;
typedef vector <pair <int, int> > vpt; 

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};

const int N = int(5e1) + 9;
const int M = int(3e3) + 9;
const int LOGN = 22;
const int SQN = 350;
const int MOD = int(1e9) + 7;
const int INF = 1e9 + 100;
const li INF64 = 2e18;
const ld PI = 3.1415926535897932384626433832795;
const ld EPS = 1e-9;

int m[N][N];

void solve(){
	string a, b;
	cin >> a >> b;
	if(sz(a) != sz(b)){
		cout << -1;
		return;
	}	
	forn(i, N) forn(j, N) if(i != j) m[i][j] = INF;
	int n;
	cin >> n;
	forn(i, n){
		char x, y;
		int c;
		cin >> x >> y >> c;
		m[x - 'a'][y - 'a'] = min(m[x - 'a'][y - 'a'], c );
	}
	forn(k, 26)
		forn(i, 26)
			forn(j, 26)
				m[i][j] = min(m[i][j], m[i][k] + m[k][j]);

	int res = 0;
	string ans = "";
	forn(i, sz(a)){
		char d = '?';
		int mn = INF;
		forn(j, 26)
			if(m[a[i] - 'a'][j] + m[b[i] - 'a'][j] < mn){
				mn = m[a[i] - 'a'][j] + m[b[i] - 'a'][j];
				d = char('a' + j);
			}
		if(mn < INF / 2){
			ans += d;
			res += mn;
		}
		else{
			cout << -1;
			return;
		}
	}
	cout << res << endl << ans;
}

int main(){

   //// freopen("input.txt", "r", stdin);
   //// freopen("output.txt", "w", stdout);

    srand(time(NULL));
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;   

    solve();

    return 0;
}