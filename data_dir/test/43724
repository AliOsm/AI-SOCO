/*jai mata di
 let's rock*/
#include<bits/stdc++.h>
using namespace std;
const int N=200004;
char s[N];
int a[N],b[N],c[N],val[N];
map< pair<int,int> ,int>mp;
int gcd(int a, int b)
{
    if (a == 0)
        return b;
    return gcd(b%a, a);
}
int main()
{
    int n;
    scanf("%d",&n);
    int i;
    for(i=1;i<=n;i++)
    {
        scanf("%s",s+1);
        int len=strlen(s+1);
        if(s[3]=='+')
        {
            a[i]=(s[2]-'0');
            if(s[5]==')')
                {
                    b[i]=(s[4]-'0');
                    if(s[8]=='\0')
                        c[i]=(s[7]-'0');
                    else
                        c[i]=10*(s[7]-'0')+(s[8]-'0');
                }
            else
                {
                    b[i]=(s[4]-'0')*10+(s[5]-'0');
                    if(s[9]=='\0')
                        c[i]=(s[8]-'0');
                    else
                        c[i]=10*(s[8]-'0')+(s[9]-'0');
                }
        }
        else
        {
            a[i]=10*(s[2]-'0')+(s[3]-'0');
             if(s[6]==')')
                {
                    b[i]=(s[5]-'0');
                    if(s[9]=='\0')
                        c[i]=(s[8]-'0');
                    else
                        c[i]=10*(s[8]-'0')+(s[9]-'0');
                }
            else
                {
                    b[i]=(s[5]-'0')*10+(s[6]-'0');
                    if(s[10]=='\0')
                        c[i]=(s[9]-'0');
                    else
                        c[i]=10*(s[9]-'0')+(s[10]-'0');
                }
        }
        //printf("a=%d b=%d c=%d\n",a[i],b[i],c[i]);
        val[i]=(a[i]+b[i]);
        int g=gcd(val[i],c[i]);
        //printf("g=%d\n",g);
        val[i]=val[i]/g;
        c[i]=c[i]/g;
        //printf("val=%d c=%d\n",val[i],c[i]);
        mp[make_pair(val[i],c[i])]++;
    }
    for(i=1;i<=n;i++)
        {
            printf("%d ",mp[make_pair(val[i],c[i])]);
        }
    return 0;
}
