#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int main()
{
    _upgrade
    LL n, k;
    cin >> n >> k;
    if(n + (n - 1) < k || 1 + 2 > k)
    {
        cout << "0\n";
        return 0;
    }
    LL l = (k - 1) / 2 + 1, r = 0;
    while(l > r + 1)
    {
        LL m = (l + r) / 2, m2 = k - m;
        if(m <= n && m2 <= n)
        {
            l = m;
        }
        else
        {
            r = m;
        }
    }
    cout << (k - 1) / 2 - l + 1 << "\n";
	return 0;
}
