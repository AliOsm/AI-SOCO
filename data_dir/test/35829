#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>; using vi = vector<int>;
template <class T> istream &operator>>(istream &, vector<T> &);
template <class T> ostream &operator<<(ostream &, const vector<T> &);
using ll = long long; using vll = vector<long long>;
constexpr int INF = 0x3f3f3f3f; constexpr ll BINF = 0x3f3f3f3f3f3f3f3fLL;

int solve() {
	int n, k; ll a, b; cin >> n >> k >> a >> b;
	vector<int> arr(k); cin >> arr;
	for (int &x : arr) x--;
	sort(arr.begin(), arr.end());
	auto getnum = [&](int lo, int hi) {
		return upper_bound(arr.begin(), arr.end(), hi) - lower_bound(arr.begin(), arr.end(), lo);
	};
	function<ll(int,int)> process = [&](int lo, int hi) {
		int cnt = getnum(lo, hi);
		if (cnt == 0)
			return a;
		else {
			ll ans = cnt * b * (hi - lo + 1);
			if (lo < hi) {
				int mi = (lo + hi) / 2;
				ans = min(ans, process(lo, mi) + process(mi + 1, hi));
			}
			return ans;
		}
	};
	cout << process(0, (1 << n) - 1) << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	// int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}

template <class T> istream &operator>>(istream &is, vector<T> &v) {
	for (auto it=v.begin();it!=v.end();++it) is >> *it;
	return is;
}

template <class T> ostream &operator<<(ostream &os, const vector<T> &v) {
	for (auto it=v.begin();it!=v.end();) os << *it << " \n"[++it==v.end()];
	return os;
}
