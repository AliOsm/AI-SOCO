//Codeforces Alpha Round #20 (Codeforces format)
#include <stdio.h>
#include <string.h>
#include <queue>
using namespace std;
queue <int> q;
typedef struct
{
    int v,pre;
    long long w;
} Edge;
Edge e[200010];
int hh[100010],e_cnt;
long long dis[100010];
int use[100010],p[100010],num[100010];
void addEdge(int u,int v,int w)
{
    e[e_cnt].v=v;
    e[e_cnt].w=w;
    e[e_cnt].pre=hh[u];
    hh[u]=e_cnt++;
}
int main()
{
    int n,m;
    while (scanf("%d%d",&n,&m)==2)
    {
        e_cnt=0;
        memset(hh,-1,sizeof(hh));
        for (int i=0;i<m;i++)
        {
            int a,b,w;
            scanf("%d%d%d",&a,&b,&w);
            addEdge(a,b,w);
            addEdge(b,a,w);
        }
        while (!q.empty()) q.pop();
        memset(dis,-1,sizeof(dis));
        q.push(1);
        memset(use,0,sizeof(use));
        use[1]=1;
        dis[1]=0;
        p[1]=-1;
        while (!q.empty())
        {
            int head=q.front();
            q.pop();
            use[head]=0;
            for (int i=hh[head];i!=-1;i=e[i].pre)
            {
                int v=e[i].v;
                if (dis[v]==-1||dis[head]+e[i].w<dis[v])
                {
                    dis[v]=dis[head]+e[i].w;
                    p[v]=head;
                    if (!use[v])
                    {
                        use[v]=1;
                        q.push(v);
                    }
                }
            }
        }
        if (dis[n]==-1) puts("-1");
        else
        {
            int cnt=0,now=n;
            while (now!=-1)
            {
                num[cnt++]=now;
                now=p[now];
            }
            printf("1");
            for (int i=cnt-2;i>=0;i--)
                printf(" %d",num[i]);
            printf("\n");
        }
    }
    return 0;
}
