#include <bits/stdc++.h>
using namespace std;
#define all(v) ((v).begin()),((v).end())
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
double const EPS = 1e-12, PI = acos(-1);
const int N = 3e5 + 9, M = 1e7 + 9, OO = 1e9 + 7, MOD = 1e9 + 7, MOD2 = 998244353;
const ll INF = 2e18;

int nxt[N], arr[N];
map<int, vector<int>> mp;

int main() {
	fastIO;
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
#endif
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i) {
		cin >> arr[i];
		mp[arr[i]].push_back(i);
	}
	for(auto it: mp) {
		for (int i = 1; i < (int)it.second.size(); ++i)
			nxt[it.second[i - 1]] = it.second[i];
		nxt[it.second.back()] = OO;
	}
	int mx = OO, start = 0;
	vector<pair<int, int>> ans;
	for (int i = 0; i < n; ++i) {
		if(i == mx) {
			ans.push_back({start, mx});
			start = i + 1, mx = OO;
			continue;
		}
		mx = min(mx, nxt[i]);
	}
	if(ans.empty())
		cout << -1;
	else {
		ans.back().second = n - 1;
		cout << ans.size() << '\n';
		for(auto it: ans) cout << it.first + 1 << ' ' << it.second + 1 << '\n';
	}
	return 0;
}
