#include <functional>
#include <algorithm>
#include <iostream>
#include <complex>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <stdio.h>
#include <cstring>
#include <cassert>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

using namespace std;

typedef long long ll;
typedef long double ld;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxN = (int)3e5 + 10;
const int mod = (int)1e9 + 7;
const int INF = (int)1e9 + 5;
const ll LLINF = (ll)1e18 + 5;

int a[maxN][4];
int order[] = {0, 3, 1, 2};
int revorder[] = {1, 0, 2, 3};
int main() {

   // freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);

    int n,m;
    cin >> n >> m;
    int cur = 1;
    int c = 0;
    for(int now = 1; now <= m; ) {
        for (int j = 0; j < 2 && now <= m; ++j) {
            a[cur][order[j + c]] = now++;
        }
        cur++;
        if (cur == n + 1) {
            cur = 1;
            c = 2;
        }
    }
    for (int i = 1; i <= n; ++i) {
        for (int j =0 ; j < 4; ++j) {
            if (a[i][revorder[j]] > 0) {
                cout << a[i][revorder[j]] << ' ';
            }
        }
    }
    return 0;
}
