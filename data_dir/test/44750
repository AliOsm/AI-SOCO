/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
#include <bits/stdc++.h>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))

using namespace std;

string itos(int x){
	stringstream ss;
	ss << x;
	return ss.str();
}

pii res = {0, MOD};
string s, t;

int f[100010], g[100010];

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin >> s >> t;
	fill(f, f+100010, MOD);
	fill(g, g+100010, MOD);
	g[t.length()] = f[0] = 0;
	for(int i = 0, j = 0; j < t.length(); i++, j++){
		while(i < s.length() && s[i] != t[j])
			i++;
		f[j] = i+1;
	}
	for(int i = s.length()-1, j = t.length()-1; j >= 0; i--, j--){
		while(i >= 0 && s[i] != t[j])
			i--;
		g[j] = s.length()-i;
	}
	if(f[0] > s.length() && g[t.length()-1] > t.length()){
		cout << "-" << endl;
		return 0;
	}
	{
		int l = 0, r = 1;
		for( ; l < t.length(); l++){
			if(l == r)
				r++;
			while(r < t.length() && f[l] + g[r] > s.length())
				r++;
			if(f[l] + g[r] > s.length())
				break;
			if(r-l+1 < res.second-res.first+1)
				res = mp(l, r);
		}
		for(int i = 0; i < t.length(); i++)
			if(g[i] <= s.length()){
				if(i < res.second-res.first-1)
					res = mp(-1, i);
				break;
			}
	}
	cout << (res.second == MOD? "-": t.substr(0, res.first+1) + t.substr(res.second)) << endl;
	return 0;
}

