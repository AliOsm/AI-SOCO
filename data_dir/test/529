#include <bits/stdc++.h>
using namespace std;

set<long long> S;
map<long long, int> M;
set<int> X[1000006];
long long hashx[1000006];
vector< pair<int, long long> > Z;

int main()
{
    cin.tie(NULL), cout.tie(NULL);
    
    int N;
    cin >> N;
    
    int k = 0;
    
    for(int i=1; i<=N; i++)
    {
        int x;
        cin >> x;
        
        if(M.count(x) == 0)
        {
            M[x] = ++k;
            hashx[k] = x;
            S.insert(x);
        }
        
        X[ M[x] ].insert(i);
    }
    
    long long done = 0;
    
    while(1)
    {
        set<long long>::iterator it = S.upper_bound(done);
        
        if(it == S.end())
            break;
        
        int x = M[*it];
        long long num = *it;
        
        while(X[x].size() > 1)
        {
            set<int>::iterator ptr = X[x].begin();
            int a = *ptr;
            X[x].erase(ptr);
            
            ptr = X[x].begin();
            int b = *ptr;
            X[x].erase(ptr);
            
            if(M.count(num * 2) == 0)
            {
                M[num*2] = ++k;
                hashx[k] = num * 2;
                S.insert(num * 2);
            }
            
            X[ M[num*2] ].insert(b);
        }
        
        done = num;
    }
    
    for(int i=1; i<=k; i++)
    {
        for(set<int>::iterator it = X[i].begin(); it != X[i].end(); it++)
            Z.push_back(make_pair(*it, hashx[i]));
    }
    
    sort(Z.begin(), Z.end());
    
    cout << Z.size() << "\n";
    
    for(int i=0; i<Z.size(); i++)
        cout << Z[i].second << " ";
    cout << "\n";
    
    return 0;
}