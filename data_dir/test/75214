#include <iostream>
#include <algorithm>
#include <vector>
#include <string.h>
#include <cmath>
#include <ctime>
#include <cstring>
#include <sstream>
#include <array>
#include <tuple>
#include <set>
#include <iterator>
#include <cstdio>
#include <string>
#include <valarray>
#include <utility>
#include <iomanip>
#include <list>
#include <numeric>
#include <regex>
#include <map>
#include <queue>
#include <deque>
#include <unordered_map>

using namespace std;

#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define PI 3.1415926535
#define pb push_back
#define ins insert
#define mp make_pair
#define ff first
#define Ln length
#define ss second
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define sz(x) ((int) (x).size())
#define fill(x,y) memset(x,y,sizeof(x))
#define all(x) (x).begin(), (x).end()
#define MOD 1000000007;
#define forn(i, a, b) for(ll int i = (a); i <= (b); ++i)
const ll N = 2e5 + 7;
template<typename T> T gcd(T a,T b) { if(a==0) return b; return gcd(b%a,a); }
// always use 1ll*ans2 to avoid signed integer overflow;
// in max,min fxs they have to be of same type like ll,ll or int,int;
ll int p[N],s[N],ans2=1;
map <ll int,ll int> mpp;
vector <ll int> v;
int main()
{
	IOS;
    ll int n,k;
    cin >> n >> k;
    forn(i,1,n)
      {
      	cin >> p[i];
      	s[i] = p[i];
      } 
    sort(s+1,s+n+1,greater<int>());
    int ll ans1 = 0;
    for(int i=1; i<=k; ++i)
    {
    	ans1 += s[i];
        mpp[s[i]]=1;
    }	
    cout << ans1 << " ";
    forn(i,1,n)
    {
    	if(mpp[p[i]]==1)
    		v.pb(i);
    }
    for(int i=1; i<sz(v); ++i)
    {
    	ans2 *= (v[i]-v[i-1])%998244353;
    	ans2 %=  998244353;
    }
    cout << ans2 << endl;
	return 0;
}
