#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;
typedef unsigned long long ull;

template <class T> T smod(T a, T b) {
  return (a % b + b) % b; }

struct _time {
    int h,m;
    _time(int _h, int _m) {
        h = _h;
        m = _m;
    } 
    int operator-(const _time &a) {
        int oldh = h;
        int oldm = m;
        int cnt = 0;
        while(h != a.h || m != a.m) {
            m++;
            cnt++;
            if(m % 60 == 0) {
                m %= 60;
                h++;
            }
        }
        h = oldh;
        m = oldm;
        return cnt;
    } 
    string draw() {
        string k = to_string(h);
        while(size(k) != 2) k = "0"+k;
        string h = to_string(m);
        while(size(h) != 2) h = "0"+h;
        return k+":"+h;
    }
};

int main() {
    cin.sync_with_stdio(false);
    string s;
    cin >> s;
    _time A(stoi(s.substr(0,2)),stoi(s.substr(3,2)));
    cin >> s;
    _time B(stoi(s.substr(0,2)),stoi(s.substr(3,2)));
    int offset = A-B;
    rep(i,0,offset/2) {
        A.m += 1;
        if(A.m % 60 == 0) {
            A.h += 1;
            A.m %= 60;
        }
    }
    cout << A.draw() << endl;

    return 0;
}


