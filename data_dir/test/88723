#pragma GCC target("sse,sse2,sse3,ssse3,sse4,abm,mmx,avx,avx2,popcnt,tune=native")
//#pragma GCC optimize("SEX_ON_THE_BEACH")	
#pragma GCC optimize("fast-math")
#pragma GCC optimize("unroll-loops")
#pragma comment(linker, "/STACK:36777216")

#define _CRT_SECURE_NO_WARNINGS

#include <set>
#include <map>
#include <deque>
#include <cmath>
#include <queue>
#include <cassert>
#include <random>
#include <bitset>
#include <iomanip>
#include <numeric>
#include <time.h>//////////////
#include <ctime>
#include <string>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
//#define endl '\n'
#define mp make_pair
#define pbc push_back
#define pob pop_back()
#define empb emplace_back
#define queuel queue<long long>
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define matrix vector<vector<ll>>
#define pin(p) cin >> p.first >> p.second;
#define rev(v) reverse(v.begin(), v.end());
#define mx(v) max_element(v.begin(), v.end());
#define mn(v) min_element(v.begin(), v.end());
#define sout(s, c) for (auto i : s) cout << i << c;
#define pout(p) cout << p.first << " " << p.second;
#define er(v, l, r) erase(v.begin() + l, v.begin() + r);
#define vin(v) for (ll i = 0; i < v.size(); ++i) cin >> v[i];
#define vout(v, c) for (int i = 0; i < v.size(); ++i) cout << v[i] << c;
#define pushi(v, a) for (int i = 0; i < a.size(); ++i) v.push_back(a[i]);
#define sin(s, n) for (int i = 0; i < n; ++i){int a; cin >> a; s.insert(a); }
#define fastio() ios_base::sync_with_stdio(0); cout.tie(0); cin.tie(0); srand(time(NULL))
#define sp system("pause")
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
using namespace std;//СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚СЂСџВ¦Р‚
					//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
//#define int ll
const int MAXN = 2e5 + 1;
const ll inf = 1e9;
const ld EPS = 1e-4;
const ld PI = acos(-1);
int mod = (int)998244353;
//const int MOD = 1000000007;
const int MOD9 = 1000000009;
const int a228 = 18;
const ll MOD = 1000000007;
const int maxelem = 12000000;
const int fsconst = 12000;
int n;
vector<int> a;
vector<vector<int>> g;
vector<pair<int, int>> dp[MAXN];
int lp[MAXN];
vector<int> pr;
int ans = 0;
void dfs(int v, int p)
{
	if (g[v].size() == 1 && p!=-11)
	{
		while (a[v] != 1)
		{
			dp[v].pbc({ lp[a[v]], 1 });
			int x = lp[a[v]];
			while (a[v] % x == 0) a[v] /= x;
		}
		return;
	}
	vector<pair<int, int>> dps;
	for (int i : g[v])
	{
		if (i == p)continue;
		dfs(i, v);
		for (auto j : dp[i])
		{
			dps.pbc(j);
		}
	}
	sort(all(dps));
	for (int i = 0; i < (int)dps.size(); ++i)
	{
		int m1 = 0, m2 = dps[i].second;
		if ( i < (int) dps.size() - 1 && dps[i].first == dps[i + 1].first)
		{
			for (; i < (int)dps.size() - 1&&  dps[i].first == dps[i + 1].first; ++i)
			{
				m1 = dps[i].second, m2 = dps[i + 1].second;
			}
		}
		if (a[v] % dps[i].first == 0)
		{
			ans = max(ans, m1 + m2 + 1);
			dp[v].pbc({ dps[i].first, m2 + 1 });
			while (a[v] % dps[i].first == 0) a[v] /= dps[i].first;
		}
		else
		{
			ans = max(ans, m2);
		}
	}
	if (a[v] != 1)
	{
		ans = max(ans, 1);
		int c1 = 0;
		while (a[v] > 1)
		{
			int x = lp[a[v]];
			++c1;
			if (c1 > 1e4)
			{
				cout << "kek";
				assert(0);
			}
			dp[v].pbc({ x, 1 });
			while (a[v] % x == 0) a[v] /= x;
		}
	}
}
signed main()
{
	fastio();
	cin >> n;
	a.resize(n + 1);
	for (int i = 1; i <= n; ++i) cin >> a[i];
	g.resize(n + 1);
	for (int i = 0; i < n - 1; ++i)
	{
		int v, u;
		cin >> v >> u;
		g[v].pbc(u);
		g[u].pbc(v);
	}
	for (int i = 2; i < MAXN; ++i)
	{
		if (!lp[i])
		{
			lp[i] = i; pr.pbc(i);
		}
		for (int j = 0; j < pr.size() && pr[j] * i < MAXN && pr[j] <= lp[i]; ++j)
		{
			lp[i*pr[j]] = pr[j];
		}
	}
	dfs(1, -11);
	cout << ans;
//	sp;
}