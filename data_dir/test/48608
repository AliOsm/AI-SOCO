#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  998244353
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
template<class T> using ordered_class_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
const int N=1000005;
int t,n,k,dp[N][3],save[N];
string s;
///
void init()
{for(int i=0;i<=n;i++)
 for(int y=0;y<2;y++)
  dp[i][y]=-1;
}
///
int solve(int idx,int state)
{if(idx>=n)re 0;
 if(dp[idx][state]!=-1)
 re dp[idx][state];
 ///
 int fi=oo,se=oo,th=oo,add;
 if(idx+k<n)
 add=(save[idx+k-1]-save[idx])+(s[idx+k]=='0');
 ///
 if(state==0)
 {  if(s[idx]=='0')
     {fi=solve(idx+1,0);
       if(idx+k<n)
       se=solve(idx+k,1)+add+1;
     }
    else
    {fi=solve(idx+1,0)+1;
      if(idx+k<n)
      se=solve(idx+k,1)+add;
    }
 }
 else
 { if(idx+k<n)
    fi=solve(idx+k,1)+add;
 }
 th=solve(n,0)+save[n-1]-save[idx];
 ///
 re dp[idx][state]=min(th, min(fi,se));
}
int main()
{yalla;
 cin>>t;
 while(t--)
 {cin>>n>>k>>s;
  int cnt=0;
  init();
  for(int i=0;i<n;i++)
  {if(s[i]=='1')cnt++;
   save[i]=cnt;
  }
  cout<<solve(0,0)<<endl;
 }
 re 0;
}
