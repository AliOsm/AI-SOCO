
// ~/RedLink/Developers/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>
#include <assert.h>
#include <complex>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

const int N = 100005, M = 10;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;
const double PI = acos(-1.0);

int n;
ll a[N];
vector<vector<int> > g;

ll gcd(ll a,ll b) {
    return b==0 ? a : gcd(b,a%b);
}

int dfs(int u,int p, map<ll,int> &mp) {
    int ans = 0;
    map<ll,int> mp2;
    mp2[a[u]] = 1;
    for(auto it=mp.begin(); it!=mp.end(); it++)
        mp2[gcd(it->first, a[u])] += it->second;
    for(auto it=mp2.begin(); it!=mp2.end(); it++)
        ans = (ans + (it->first * it->second) % MOD) % MOD;
    for(int i=0; i<g[u].size(); i++) {
        if(g[u][i] != p) {
            ans = (ans + dfs(g[u][i], u, mp2)) % MOD;
        }
    }
    return ans;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d",&n);
    g.resize(n);
    for(int i=0; i<n; i++)
        scanf("%lld",a+i);
    for(int i=1,a,b; i<n; i++) {
        scanf("%d%d",&a,&b);
        a--, b--;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    map<ll,int> mp;
    printf("%d\n", dfs(0,-1,mp));
    return 0;
}