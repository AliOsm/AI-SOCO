#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
ll gcd(ll a , ll b){
  while(b){
   a %= b;
   swap(a,b);
          }
  return a;
}
ll N , a , b , mod = 1;
map< ll , pair<ll , ll> > base;
ll nxt(ll to , ll div){
  if(to%div == 0)return to;
  return ((to/div)+1)*div;
}
ll nxt_exc(ll to , ll div){
  return ((to/div)+1)*div;
}
int main(){
  cin>>b>>a>>N;
  for(int i=2;i<=N;++i)
   mod /= gcd(mod , i) , mod *= i;
  if(a == b)puts("0");
  else{
   ll last = a;
   ll ans = 0;
   bool start = true;
   bool ignore = false;
   for(int i=1;;++i){
    if(last >= b){
     cout<<ans<<'\n';
     break;
                 }
    ++ans;
    ll neo=last+1;
    for(int j=2;j<=N;++j){
     if( (nxt_exc(last , j)-1) - ((nxt_exc(last , j)-1)%j) < a)continue;
     if(start && (nxt_exc(last , j)-1) - ((nxt_exc(last , j)-1)%j) != a)continue;
     relaxMax(neo , nxt_exc(last , j)-1);
                         }
    last = neo;
    //cout<<ans<<' '<<last<<":"<<last%mod<<endl;
    start = false;
    if(last >= b){
     cout<<ans<<'\n';
     break;
                 }
    if(ignore || i < 100)continue;
    if(!base.count(last%mod)){
     base[last%mod] = mp(last , i);
                             }
    else{
     //cout<<"HERE\n";
     //cout<<ans<<":"<<last<<endl;
     pair<ll , ll> T = base[last%mod];
     ll cyc = last-T.fi;
     ll cnt = i - T.se;
     ans += ((b-last) / cyc)*cnt;
     last += ((b-last) / cyc)*cyc;
     ignore = true;
     continue;
        }
                    }
      }
  return 0;
}
