#include <bits/stdc++.h>
using namespace std;

const int MAXN=1e6+5;

int T, N, M, X, Y;
long long H, P;
int A[MAXN];

void cek() {
	if (N*M!=T) {
		return;
	}
	
	bool B;
	B=1;
	
	for (int i=1;i<=N;i++) {
		for (int j=1;j<=M;j++) {
			A[abs(i-X)+abs(j-Y)]--;
			
			if (A[abs(i-X)+abs(j-Y)]<0) {
				B=0;
			}
		}
	}
	
	if (B) {
		cout<<N<<' '<<M<<'\n';
		cout<<X<<' '<<Y<<'\n';
		exit(0);
	}
	
	for (int i=1;i<=N;i++) {
		for (int j=1;j<=M;j++) {
			A[abs(i-X)+abs(j-Y)]++;
		}
	}
	
	return;
}

int main () {
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	
	cin>>T;
	
	for (int i=0;i<T;i++) {
		cin>>P;
		A[P]++;
		H=max(H,P);
	}
	
	if (A[0]!=1) {
		cout<<-1<<'\n';
		return 0;
	}
	
	if (T==1) {
		N=1;
		M=1;
		X=1;
		Y=1;
		cek();
		return 0;
	}
	
	for (int i=1;i<T;i++) {
		if (A[i]!=4*i) {
			if (A[i]==4*i-4) {
				N=2*i-1;
				M=2*i-1;
				X=i;
				Y=i;
				cek();
				cout<<-1<<'\n';
				return 0;
			}
			
			if (A[i]==4*i-3) {
				N=2*i-1;
				M=T/N;
				X=i;
				Y=i;
				cek();
				cout<<-1<<'\n';
				return 0;
			}
			
			if (A[i]==4*i-2) {
				N=2*i-1;
				M=T/N;
				X=i;
				Y=H-i+2;
				cek();
				
				if ((H+2*i)*(H+2*i)>=4*T) {
					N=(H+2*i+sqrt((H+2*i)*(H+2*i)-4*T))/2;
					M=T/N;
					X=i;
					Y=i;
					cek();
				}
				
				cout<<-1<<'\n';
				return 0;
			}
			
			if (A[i]==4*i-1) {
				for (int j=i+1;j<T;j++) {
					if (A[j]!=2*(i+j)-1) {
						N=i+j-1;
						M=T/N;
						X=i;
						Y=H-j+2;
						cek();
						
						if ((H+i+j)*(H+i+j)>=4*T) {
							N=(H+i+j+sqrt((H+i+j)*(H+i+j)-4*T))/2;
							M=T/N;
							X=i;
							Y=j;
							cek();
							
							N=(H+i+j+sqrt((H+i+j)*(H+i+j)-4*T))/2;
							M=T/N;
							X=j;
							Y=i;
							cek();
						}
						
						cout<<-1<<'\n';
						return 0;
					}
				}
			}
			
			cout<<-1<<'\n';
			return 0;
		}
	}
	
	return 0;
}
