///** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define inf ( int )( 1e9 + 10 )
#define mxs (int)( 1e6 + 10 )
#define ll long long int
//#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
int ans, t, n, m, i, j , k, a, b, c, d, e,f, sz, q,mx,le,re,cases;
int ar [ mxs ];
map < int , int > mp;
map < int , int >::iterator it;
void brainfuck();
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>n;
    for ( i = 1 ; i <= n; i++ )
    {
        cin>>ar [ i ];
        mp [ ar [ i ] ]++;
    }
    sz = 0;
    ans = inf;
    for ( i = 1 ; i <= n; i++ )
    {
        a = 0;
        for ( it = mp.begin(); it != mp.end(); it++ )
        {
            if ( it->second > 1 )a++;
        }
        if ( !a )
        {
            ans = 0;
            break;
        }
        ///Now I've a values multiple times.
        for ( j = i; j <= n; j++ )
        {
            mp [ ar [ j ] ]--;
            if ( mp [ ar [ j ] ] == 1 )a--;
            if ( !a )
            {
                //cout<<i<<"  "<<j<<endl;
                ans = min( ans , j - i + 1 );
            }
        }
        for ( j = i; j <= n; j++ )mp [ ar [ j ] ]++;
    }
    cout<<ans;
}
