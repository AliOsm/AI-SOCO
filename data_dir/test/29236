#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
#include <bitset>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
#define pll pair<ll, ll>
#pragma GCC optimize ("O3")
//#define x first
//#define y second
const int mod = (1e9) + 7;
const double eps = 1e-10;
const int siz = 2e5 + 5, lg = 25, sq = 355, extrm[2] = {INT_MIN, INT_MAX};
int n, co[101];
char dp[102][101][10001];
char add(char a, char b) {
	return min(a + b, 2);
}
void solve() {
	dp[101][0][0] = 1;
	for (int i = 100; i >= 1; i--) {
		for (int j = 0; j <= co[i]; j++) {
			for (int k = j; k <= 100; k++) {
				for (int l = i*j; l <= 10000; l++) {
					dp[i][k][l] = add(dp[i][k][l], dp[i+1][k-j][l-i*j]);
				}
			}
		}
	}
}
int main()
{
	scanf("%d", &n);
	int dis = 0;
	for (int i = 1; i <= n; i++) {
		int v;
		scanf("%d", &v);
		if (co[v] == 0) {
			dis++;
		}
		co[v]++;
	}
	if (dis == 2) {
		printf("%d\n", n);
		return 0;
	}
	solve();
	int ans = 0;
	for (int i = 1; i <= 100; i++) {
		for (int j = 0; j <= co[i]; j++) {
			if (dp[1][j][j*i] == 1) {
				ans = max(ans, j);
			}
		}
 	}
	printf("%d\n", ans);
	return 0;
}