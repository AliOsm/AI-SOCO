#include <bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define ff first
#define ss second
 
typedef long long ll;
const int MAXN = 117;
const ll inf = 1e18;
 
ll n, a[MAXN], dp[MAXN][MAXN][MAXN], d[MAXN * MAXN], x[MAXN];
string s;
 
ll mem(int i, int j, int p) {
	if (j < i)	return d[p];
	if (dp[i][j][p] != -inf)	return dp[i][j][p];
	dp[i][j][p] = mem(i, j - x[j], 0) + d[x[j] + p];
	for (int t = j - x[j]; t >= i; t -= x[t]) {
		if (s[t - 1] == s[j - 1]) {
			dp[i][j][p] = max(dp[i][j][p], mem(i, t, x[j] + p) + mem(t + 1, j - x[j], 0));
		}
	}
	//cerr << i << " " << j << " " << p << "    " << dp[i][j][p] << endl;
	return dp[i][j][p];
}
 
int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	cin >> s;
	for (int i = 1; i <= n; i++)	cin >> a[i];
	x[1] = 1;
	for (int i = 2; i <= n; i++)
		if (s[i - 2] != s[i - 1])	x[i] = 1;
		else	x[i] = x[i - 1] + 1;
	d[1] = a[1];
	for (int i = 2; i < MAXN * MAXN; i++)
		for (int j = 1; j <= min(n, 1LL * i); j++)	d[i] = max(d[i], d[i - j] + a[j]);
	for (int i = 0; i < MAXN; i++)
		for (int j = 0; j < MAXN; j++)
			for (int p = 0; p < MAXN; p++)	dp[i][j][p] = -inf;
	ll ans = mem(1, n, 0);
	/*
	for (int i = 1; i <= n; i++) {
		for (int j = i; j <= n; j++)	cerr << dp[i][j] << " ";
		cerr << endl;
	}
	*/
	cout << ans;
}
