#include<bits/stdc++.h>
using namespace std;

# define C continue;
# define R return

# define D double
# define I insert
# define ll long long
# define ld long double

# define ull unsigned long long
# define ui unsigned int

# define pb push_back
# define vi vector < int >
# define vc vector < char >
# define vs vector < string >
# define vb vector < bool >
# define vd vector < D >
# define vll vector < ll >
# define vull vector < ull >

# define vvi vector < vector < int > >
# define vvb vector < vector < bool > >
# define vvc vector < vector < char > >
# define vvll vector < vector < ll > >
# define vvd vector < vector < D > >
# define vld vector < ld >

# define all(v) (v).begin() , (v).end()
# define allrev(v) (v).rbegin() , (v).rend()
# define allcomp(v) v.begin() , v.end() , comp
# define allrevcomp(v) v.rbegin() , v.rend() , comp

# define pii pair < int , int >
# define pll pair < long , long >
# define pld pair < ld , ld >
# define pDD pair < D , D >

# define vpld vector < pld >
# define vpii vector < pii >
# define vpll vector < pll >
# define vpDD vector < pDD >

# define vvpii vector < vector < pii > >
# define F first
# define S second
# define mp make_pair

# define fast ios_base::sync_with_stdio(false) ; cin.tie(0) ; cout.tie(0);
# define dist(a,b,p,q) sqrt((p-a)*(p-a) + (q-b)*(q-b))

# define pp(n) printf("%.10Lf",n);
# define line cout<<"\n";

const ld pie = 3.14159265358979 ;
const ll mod = 1e9 + 7 ;

string vow = "aeiou";

void solve ( int test_case )
{
    int n ; cin >> n ;

    string s , t ;
    cin >> s >> t ;

    vi a , b ;

    for ( int i=0 ; i < n ; i++ )
    {
        if ( s[i] == t[i] ) C ;

        if ( s[i] == 'a' )
        {
            a.pb ( i ) ;
        }
        else b.pb ( i ) ;


    }

    if ( a.size() % 2 != b.size() % 2 )
    {
        cout << -1 ; line  ; R ;;
    }

    cout << a.size() / 2 + b.size() / 2 + 2*(a.size() % 2) ; line

    while ( a.size() > 1 )
    {
        cout << a.back() + 1 << " " ;

        a.pop_back() ;
        cout << a.back()  + 1;

        line

        a.pop_back() ;
    }

    while ( b.size() > 1 )
    {
        cout << b.back() + 1 << " " ;

        b.pop_back() ;
        cout << b.back() + 1;

        line

        b.pop_back() ;
    }

    if ( a.size() )
    {
        cout << a.back() + 1 << " " << a.back() + 1 ; line

        cout << a.back() + 1 << " " << b.back()  + 1; line
    }

}

int main()
{
fast
    int t = 1;
    //cin >> t;

    for ( int i=0 ; i<t ; i++ ) solve(i);
    return 0;
}
