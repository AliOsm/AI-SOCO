#include<bits/stdc++.h>
using namespace std;

#define fore(i,ii,iii) for(int i=ii;i<iii;i++)
#define pb push_back
#define SZ(a) ((int)(a).size())
const int N=1e5+15,M=256;

int n,q,dp[M][M][M],nxt[M][N];
string s,t[3];

void debug(int step) {
  cout<<"now: "<<step<<endl;
  fore(i,0,SZ(t[0])+1)fore(j,0,SZ(t[1])+1)fore(k,0,SZ(t[2])+1)cout<<"dp["<<i<<"]["<<j<<"]["<<k<<"]: "<<dp[i][j][k]<<endl;
}

void update(int id,char c) {
  vector<int>mn={0,0,0};
  vector<int>mx={SZ(t[0]),SZ(t[1]),SZ(t[2])};
  mn[id]=mx[id]=t[id].length();
  fore(i,mn[0],mx[0]+1)fore(j,mn[1],mx[1]+1)fore(k,mn[2],mx[2]+1) {
    int res=N;
    // if(i)cout<<"i: "<<nxt[t[0][i-1]][dp[i-1][j][k]]+1<<endl;;
    // if(j)cout<<"j: "<<nxt[t[1][j-1]][dp[i][j-1][k]]+1<<endl;;
    // if(k)cout<<"k: "<<nxt[t[2][k-1]][dp[i][j][k-1]]+1<<endl;;
    if(i)res=min(res,nxt[t[0][i-1]][dp[i-1][j][k]]+1);
    if(j)res=min(res,nxt[t[1][j-1]][dp[i][j-1][k]]+1);
    if(k)res=min(res,nxt[t[2][k-1]][dp[i][j][k-1]]+1);
    dp[i][j][k]=res;
  }
}

int main() {
  ios::sync_with_stdio(false);
  vector<bool>res;
  cin>>n>>q>>s;
  // cout<<"s: "<<s<<endl;
  fore(i,'a','z'+1) {
    int cur=N-5;
    nxt[i][n]=cur;
    for(int j=N-1;j>=0;j--) {
      if(j<SZ(s) && s[j]==i)cur=j;
      nxt[i][j]=cur;
    }
  }
  // for(char i:s){cout<<i<<" : ";fore(j,0,n+1)cout<<nxt[i][j]<<" ";cout<<endl;}
  fore(_,0,q) {
    char sgn,c;int id;
    cin>>sgn>>id;id--;
    if(sgn=='+') {
      cin>>c;
      t[id]+=c;
      update(id,c);
    } else {
      t[id].pop_back();
    }
    // debug(_);
//    cout<<"dp["<<SZ(t[0])<<"]["<<SZ(t[1])<<"]["<<SZ(t[2])<<"]: "<<dp[SZ(t[0])][SZ(t[1])][SZ(t[2])]<<endl;
    res.pb(dp[SZ(t[0])][SZ(t[1])][SZ(t[2])]<N-5);
  }
  for(auto i:res)if(i)cout<<"YES\n"; else cout<<"NO\n";
  // cout<<"finally: "<<t[0]<<" "<<t[1]<<" "<<t[2]<<endl;
}

// adc | b | ab