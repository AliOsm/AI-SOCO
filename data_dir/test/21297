//string __(){
//	_(int,n);
//	_(vpii,a,n);
//	int min_x = MOD, max_x = -MOD;
//	int min_y = MOD, max_y = -MOD;
//	for(auto &_ : a){
//		_.X *= 2;
//		_.Y *= 2;
//		min_x = min(min_x,_.X);
//		min_y = min(min_y,_.Y);
//		max_x = max(max_x,_.X);
//		max_y = max(max_y,_.Y);
//	}
//	int cx = (min_x+max_x)/2;
//	int cy = (min_y+max_y)/2;
//	for(auto &_ : a){
//		_.X -= cx;
//		_.Y -= cy;
//	}
//	set<pii> got(all(a));
//	for(auto _ : a){
//		pii tmp = _;
//		tmp.X *= -1;
//		tmp.Y *= -1;
//		if(!got.count(tmp))
//			return "NO";
//	}
//	return "YES";
//}
//
#include <set>
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define X first
#define Y second
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vpii;
const ll MOD = 1e9 + 7;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
template <typename F, typename S> static
istream& operator>>(istream& stream, pair<F, S>& t){
    return stream >> t.first >> t.second;
}
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
#define INPUT_WITHOUT_INIT(type,name) type name; cin >> name
#define _IWI(type,name,...) type name(__VA_ARGS__); cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
string __(){
	_(int,n);
	_(vpii,a,n);
	int min_x = MOD, max_x = -MOD;
	int min_y = MOD, max_y = -MOD;
	for(auto &_ : a){
		_.X *= 2;
		_.Y *= 2;
		min_x = min(min_x,_.X);
		min_y = min(min_y,_.Y);
		max_x = max(max_x,_.X);
		max_y = max(max_y,_.Y);
	}
	int cx = (min_x+max_x)/2;
	int cy = (min_y+max_y)/2;
	for(auto &_ : a){
		_.X -= cx;
		_.Y -= cy;
	}
	set<pii> got(all(a));
	for(auto _ : a){
		pii tmp = _;
		tmp.X *= -1;
		tmp.Y *= -1;
		if(!got.count(tmp))
			return "NO";
	}
	return "YES";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        cout << __() << '\n';
}
