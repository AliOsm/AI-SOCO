#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;
#define MS0(I) memset(I, 0, sizeof(I));
#define MS1(I) memset(I, -1, sizeof(I));
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define rep1(i, s, n) for(int i = (s); i < (n); ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define DRI(A) int A; scanf("%d", &A);
#define DRII(A, B) int A, B; scanf("%d %d", &A, &B);
#define DRIII(A, B, C) int A, B, C; scanf("%d %d %d", &A, &B, &C);
#define DRL(A) long long A; scanf("%lld", &A);
#define DRLL(A, B) long long A, B; scanf("%lld %lld", &A, &B);
#define DRLLL(A, B, C) long long A, B, C; scanf("%lld %lld %lld", &A, &B, &C);
#define SZ(X) ((int)X.size() )
#define MP make_pair 
#define pb push_back
#define F first
#define S second
#define ALL(I) (I).begin(), (I).end()
typedef long long LL;
typedef unsigned long long ULL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII; 
typedef pair<int, LL> PIL;
typedef pair<LL, int> PLI;
typedef pair<LL, LL> PLL;
const double eps = 1e-9;
const double PI = acos(-1);
const LL INFF = 1e18;
const int INF = 1e9+1;
const int mod = 1e9+7;
const int MAX = 1e5+7;
int a[MAX], b[MAX];
int main(void){
  DRI(n);
  rep1(i, 1, n+1) scanf("%d", a + i);
  DRI(m);
  rep1(i, 1, m+1) scanf("%d", b + i);
  int p = 1;
  vector<pair<int, char>>ans;
  rep1(i, 1, m+1){
    LL v = b[i];
    int r = p;
    rep1(j, p, n+1){
      if(v > a[j]) v -= a[j];
      else if(v == a[j]){
        v -= a[j];
        r = j; break;
      }
      else{
        puts("NO"); return 0;
      }
    }
    if(v){
      puts("NO"); return 0;
    }
    if(p == r){
      p++; continue;
    }
    int mxv = 0, pp = 0;
    rep1(j, p, r+1) if(a[j] > mxv) mxv = a[j];
    rep1(j, p, r+1){
      if(a[j] == mxv){
        if(j == p && a[j] > a[j+1]) pp = j;
        else if(j == r && a[j] > a[j-1]) pp = j;
        else if(j != p && j != r && (a[j] > a[j+1] || a[j] > a[j-1]) ) pp = j;
      }
    }
    if(!pp){
      puts("NO"); return 0;
    }
    if(pp != p && a[pp] > a[pp-1]){
      per1(j, pp-1, p) ans.pb(MP(i + j - p  + 1, 'L'));
      rep1(j, pp+1, r+1) ans.pb(MP(i, 'R'));
    }
    else{
      rep1(j, pp+1, r+1) ans.pb(MP(i + pp - p, 'R'));
      per1(j, pp-1, p) ans.pb(MP(i + j - p  + 1, 'L'));
    }
    p = r+1;
  }
  if(p != n+1){
    puts("NO"); return 0;
  }
  puts("YES");
  for(auto x : ans) printf("%d %c\n", x.F, x.S);
  return 0;
}
