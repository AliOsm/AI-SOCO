#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>
#include <cctype>
#include<string>
#include<map>
#include<set>
#define ll long long
using namespace std;
const ll MOD = 1000000007;
ll ss[1000];

class node
{
public:
	ll f1_0;
	ll f0_1;
	ll f0_2;
	ll f2_0;
	ll tot;
	node(){
		f1_0 = 0; f0_1 = 0;
		f0_2 = 0; f2_0 = 0;
		tot = -1;
	}
	node(ll a1_0, ll a0_1, ll a0_2, ll a2_0)
	{
		f1_0 = a1_0; f0_1 = a0_1;
		f0_2 = a0_2; f2_0 = a2_0;
		tot = f1_0 + f2_0 + f0_1 + f0_2;
	}
	void compleft(node t)
	{
		f1_0 *= (t.tot - t.f0_1);
		f0_1 *= t.tot;
		f0_2 *= t.tot;
		f2_0 *= (t.tot - t.f0_2);
		f1_0 %= MOD;
		f0_1 %= MOD;
		f0_2 %= MOD;
		f2_0 %= MOD;
		tot = f1_0 + f2_0 + f0_1 + f0_2;
	
	
	}
	void print()
	{
		cout << "f1_0  :  " << f1_0 << endl;
		cout << "f2_0  :  " << f2_0 << endl;
		cout << "f0_1  :  " << f0_1 << endl;
		cout << "f0_2  :  " << f0_2 << endl;
		cout << "tot  :  " << tot << endl;
	}
	void inter(node t)
	{
		f1_0 = (t.tot - t.f0_1)%MOD;
		f2_0 = (t.tot - t.f0_2)%MOD;
		f0_1 = (t.tot - t.f0_1)%MOD;
		f0_2 = (t.tot - t.f0_2)%MOD;
		tot = f1_0 + f2_0 + f0_1 + f0_2;
	}
	
};

void setind(string s)
{
	ll t = 0;
	for (int i = 0; i < s.length(); i++)
	{
		t = 1;
		if (s[i] == '(')
		{
			for (int j = i + 1; j < s.length(); j++)
			{
				if (s[j] == '(')t++;
				else t--;
				if (t == 0)
				{
					ss[i] = j;
					ss[j] = i;
					break;
				}
			}
		}
	}
}
map<string, node>dp;
node solve(int f,int l,string s)
{
	string w = "";
	for (int i = f; i <= l; i++)w += s[i];
	if (dp[w].tot != -1)
	{
		return dp[w];
	}
	int i = f;
	vector<node>r;
	//cout << f << "   " << l << endl;
	if (ss[i] == l)
	{
		
		node t(1, 1, 1, 1);
		node r = solve(i + 1, ss[i] - 1, s);
		t.inter(r);
		
		return dp[w]=t;
	}
	while (i <= l)
	{
		r.push_back(solve(i,ss[i],s));
		i = ss[i] + 1;
	}
	for (int i = 1; i < r.size(); i++)
	{
		r[i].compleft(r[i-1]);
	}
	return dp[w] = r[r.size() - 1];
}
int main()
{
	node q(1, 1, 1, 1);
	dp["()"] = q;
	string s;
	cin >> s;
	setind(s);
	cout<<solve(0, s.length() - 1, s).tot%MOD;
	//system("pause");
}