//Be Name Khoda, Besmellah Rahmane Rahim, In The Name Of God;
//#include<bits/stdc++.h>
#include<iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>
#include <stdio.h>
#include <string.h>
#include<iomanip>
#include<unordered_map>
#include<unordered_set>

using namespace std;

const long long N = 500 + 5;
long long dp[N][N];
long long dp2[N];
long long a[N];
long long n;

long long solver(long long l, long long r)
{
	if (r - l == 1)
	{
		dp[l][r] = a[l];
		return dp[l][r];
	}
	if (dp[l][r] != 0)
	{
		return dp[l][r];
	}
	dp[l][r] = -1;
	for (long long i = l + 1; i < r; i++)
	{
		long long before = solver(l, i);
		long long after = solver(i, r);
		//cout << before << " " << after << endl;
		if (before > 0 && before == after)
		{
			dp[l][r] = before + 1;
			return dp[l][r];
		}
	}
	return dp[l][r];
}
 
int main()
{
	cin >> n;
	for (long long i = 0; i < n; i++)
	{
		cin >> a[i];
	}
	memset(dp2, 127, sizeof dp2);
	dp2[0] = 0;
	for (long long i = 0; i < n; i++)
	{
		for (long long j = i + 1; j <= n; j++)
		{
			if (solver(i, j) > 0)
			{
				//cout << solver(i, j) << " " << i << " " << j << endl;
				dp2[j] = min(dp2[j], dp2[i] + 1);
			}
		}
	}
	cout << dp2[n] << endl;

}