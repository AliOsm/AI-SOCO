# include <bits/stdc++.h>
# define int long long 
using namespace std;
const int mod = 1e9 + 7, N = 105, MOD = mod * mod * 9; 
int a[N], dp[N];
bool ok[N][N];
struct mat{
	int A[N][N];
	mat(){
		for(int i = 0; i < N; i++){
			for(int j = 0; j < N; j++){
				A[i][j] = 0;
			}
		}
	}
	void operator *=(mat other){
		mat Ans;
		for(int i = 0; i < N; i++)
			for(int j = 0; j < N; j++)
				for(int k = 0; k < N; k++){
					Ans.A[i][j] += A[i][k] * other.A[k][j];
					if(Ans.A[i][j] >= MOD)Ans.A[i][j] -= MOD;
					Ans.A[i][j] %= mod;
				}
		for(int i = 0; i < N; i++)
			for(int j = 0; j < N; j++)
				for(int k = 0; k < N; k++)
					A[i][j] = Ans.A[i][j];
	}
	mat power(mat x, int p){
		mat ans = x, cnt = x;
		p --;
		for(; p; p >>= 1){
			if(p & 1){
				ans *= cnt;
			}
			cnt *= cnt;
		}
		return ans;
	}
};
int calc(mat m, int n){
	int ans = 0;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++){
			ans += m.A[j][i];
			if(ans >= MOD)ans -= MOD;
		}
	ans %= mod;
	return ans; 
}
main(){
	int n, k;
	cin >> n >> k;
	for(int i = 0; i < n; i++){
		cin >> a[i];
	}
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
				ok[i][j] = __builtin_popcountll(a[i] ^ a[j]) % 3 == 0;
	if(k == 1){
		cout << n << endl;
	}else{
		mat x, ans;
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++)
				x.A[i][j] = ok[i][j];
		ans = ans.power(x, k - 1);
		cout << calc(ans, n) << endl;
	}
}