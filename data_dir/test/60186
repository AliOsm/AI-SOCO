#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <set>
#include <list>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
const ll MOD = 1e9 + 7;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v; queue<int> q; deque<int> dq;

int vec[200000];
map<int, int> ma;

int main() {
	int n, m;
	int lo, cnt;
	ll ans = 0;
	scanf("%d %d", &n, &m);

	for (int i = 0; i < n; i++) {
		scanf("%d", &vec[i]);
		if (vec[i] == m) lo = i;
	}

	cnt = 0;
	ma[0] = 1;
	for (int i = lo - 1; i >= 0; i--) {
		if (vec[i] < m) cnt--;
		else cnt++;
		auto k = ma.find(cnt);

		if (k == ma.end()) ma[cnt] = 1;
		else k->second++;
	}
	ans += ma[0];
	if(ma.count(1)) ans += ma[1];

	cnt = 0;
	for (int i = lo + 1; i < n; i++) {
		if (vec[i] < m) cnt--;
		else cnt++;

		auto k = ma.find(-cnt);
		auto kk = ma.find(-cnt + 1);

		if (k != ma.end()) ans += k->second;
		if (kk != ma.end()) ans += kk->second;
	}

	printf("%lld", ans);
}