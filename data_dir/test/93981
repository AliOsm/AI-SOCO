//ITNOG
#include<bits/stdc++.h>
 
using namespace std;
 
#define scan(x) do{while((x=getchar_unlocked())<'0'); for(x-='0'; '0'<=(_=getchar_unlocked()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
typedef double ld;

const int maxN = 50 + 5;
const int mod = 1000*1000*1000+7;
const int base = 701;
const int maxL = 14;
typedef long long ll;
#define X first
#define Y second

int dp[maxN][maxN];
int D[maxN][maxN];


main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    memset(dp,63,sizeof dp);
    int n,m; cin >> n >> m;
    rep(i,0,m)
    {
	  int v, u, w; cin >> v >> u >> w; v --; u --;
	  dp[v][u] = dp[u][v] = w;
    }
    rep(i,0,n) dp[i][i] = 0;

    rep(i,0,n) rep(j,0,n) rep(k,0,n) 
	  dp[j][k] = min(dp[j][k], dp[j][i] + dp[i][k]);
    
//    rep(i,0,n) rep(j,0,n) cout << dp[i][j] << ' '; cout << endl;
    
    int g1, g2, s1, s2; cin >> g1 >> g2 >> s1 >> s2;

    vector<pair<int,int> > mx, mn;
    rep(i,0,n)
    {
	  int mmn = mod, mmx = 0;
	  rep(j,0,n) if(i != j) 
	  {
		mmn = min(mmn, dp[i][j]);
		mmx = max(mmx, dp[i][j]);
	  }
	  mx.push_back({mmx, i});
	  mn.push_back({mmn, i});
    }

//    rep(i,0,n) cout << mn[i].X << ' ' << mn[i].Y << endl;

    int ans = 0;
    
    rep(i,0,n) rep(j,0,n)
    {
	  memset(D, 0, sizeof D); D[0][0] = 1;
	  if(mn[i] > mx[j] || mn[i].Y == mx[j].Y) continue;
	  
	  rep(k,0,n) 
	  {
		int gg = 0, ss = 0, bb = 0;
		rep(t,0,n) if(k != t)
		{
		    pair<int,int> tmp = {dp[k][t], k};
		    if(tmp < mn[i]) gg = 1;
		    else if(tmp > mx[j]) bb = 1;
		    else ss = 1;
		}
		
		if(mn[i].Y == k) { gg=1; ss=bb=0;}
		if(mx[j].Y == k) { bb=1; ss=gg=0;}

//		if(ss)
//		    cout << k << ' ' << "::" << mn[i].X << ' ' << mn[i].Y << " ==== " << mx[j].X << ' ' << mx[j].Y << endl;

		for(int G = g2; G >= 0; G --)
		    for(int S = s2; S >= 0; S --)
		    {
			  if(bb == 0) D[G][S] = 0;
			  if(G && gg) D[G][S] += D[G-1][S]; 
			  if(S && ss) D[G][S] += D[G][S-1];
		    }
	  }

	  rep(G,g1,g2+1) rep(S,s1,s2+1)
		ans += D[G][S];
    }

    cout << ans << endl;
    return 0;
}
