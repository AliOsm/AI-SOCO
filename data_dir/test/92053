#include <bits/stdc++.h>
#define ll long long
#define pb push_back
#define endl '\n'
#define pii pair<ll,ll>
#define pll pair<ll,ll>
#define triple pair<ll, pair<ll,ll> >
#define mt(x,y,z) mp(x,mp(y,z))
#define mp make_pair
#define ff first
#define ss second
#define fir first
#define sec second.first
#define thi second.second
#define pi 3.141592653589793
#define eps 1e-6
#define MAX 500000
#define powerof2(x) ((x-1)|(x>>1))==x
using namespace std;

int a[100];
int b[100];
int n;

bool Valid(int msk1,int msk2)
{
    for(int i=0;i<n;i++)
        if((msk1&(1<<i)) && (msk2&(1<<i)))return false;
    return true;
}

ll Sum(ll x,ll y)
{
    return ((y+x)*(y-x+1))/2;
}

int Cnt(int msk)
{
    int ret= 0 ;
    for(int i=0;i<n;i++)
        if(msk&(1<<i))ret++;
    return ret;
}


int main()
{
    ios::sync_with_stdio(false);

    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>a[i]>>b[i];
    }
    double ans = 0;


    // Scenario #1 -> more than 1 tied on the top with value x

    for(int x=1;x<=10000;x++)
    {
        for(int msk=1;msk<(1<<n);msk++)
        {
            if(Cnt(msk)<=1 && n!=1)continue;
            bool valid = true;
            double p = 1.0;
            for(int i=0;i<n;i++)
            {
                if(msk&(1<<i))
                {
                    if(x<a[i] || x>b[i]){valid=false;break;}
                    p*=(1.0)/(b[i]-a[i]+1);
                }
                else
                {
                    if(a[i]>=x){valid=false;break;}
                    p*=((min(x-1,b[i])-a[i]+1)*1.0)/(b[i]-a[i]+1);
                }
            }
            if(!valid)continue;
            ans+=x*p;
        }
    }
    // Scenario #2: only one on the top and all behind him (second behind him is value x)

    for(int x=1;x<=10000;x++)
    {
        for(int i=0;i<n;i++)
        {
            if(b[i]<=x)continue;
            for(int msk=1;msk<(1<<n);msk++)
            {
                double p = ((b[i]-max(x+1,a[i])+1)*1.0)/(b[i]-a[i]+1);
                if(msk&(1<<i))continue;
                bool valid = true;;
                for(int j=0;j<n;j++)
                {
                    if(msk&(1<<j))
                    {
                        if(b[j]<x || a[j]>x){valid=false;break;}
                    }
                    else if(j!=i)
                    {
                        if(a[j]>=x){valid=false;break;}
                    }
                }
                if(!valid)continue;
                for(int j=0;j<n;j++)
                {
                    if(msk&(1<<j))
                    {
                        p*=1.0/(b[j]-a[j]+1);
                    }
                    else if(j!=i)
                    {
                        p*=((min(x-1,b[j])-a[j]+1)*1.0)/(b[j]-a[j]+1);
                    }
                }
                ans+=p*x;
            }
        }
    }




    printf("%.12lf\n",ans);
    return 0;
}
