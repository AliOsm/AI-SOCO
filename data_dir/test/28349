#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

map<LL,LL> s;

const LL mod=1000000007;
LL n,m,seed,vmax;
vector<pair<LL,LL> >v;
LL rnd()
{
	LL ret=seed;
	seed=(1LL*seed*7+13)%mod;
	return ret;
}

LL powmod(LL a,LL b,LL c)
{
	LL ans=1;
	while (b)
	{
		if (b&1) ans=ans*a%c;
		b/=2;
		a=a*a%c;
	}
	return ans;
}
int main()
{
    cin>>n>>m>>seed>>vmax;
	s.clear();
	for (int i=1;i<=n;++i)
	{
		LL x=rnd()%vmax;
		x++;
		s[i]=x;
	}
	LL cnt=0;
	s[n+1]=0;
	for (int i=1;i<=m;++i)
	{
		LL op,l,r,x,y;
		op=rnd()%4+1;l=rnd()%n+1;r=rnd()%n+1;if (l>r) swap(l,r);
		if (op==3) x=rnd()%(r-l+1)+1;
		else x=rnd()%vmax+1;
		if (op==4) y=rnd()%vmax+1;
		map<LL,LL>::iterator L,R;
		L=s.upper_bound(l);
		--L;
		if (L->first!=l)
		{
			s[l]=L->second;
			++L;
		}
		R=s.upper_bound(r+1);
		--R;
		if (R->first!=r+1)
		{
			s[r+1]=R->second;
			++R;
		}
		if (op==1)
		{
			while (L!=R) 
			{
				L->second+=x;
                L++;
			}
		}
		else if (op==2)
		{
			while (L!=R)
			{
				s.erase(L++);
			}
			s[l]=x;
		}
		else if (op==3)
		{
			v.clear();
			while (L!=R)
			{
				LL tmp=R->first;
				R--;
				v.push_back(make_pair(R->second,tmp-R->first));
			}
			sort(v.begin(),v.end());
			for (int i=0,num=0;;++i)
			{
				num+=v[i].second;
				if (x<=num)
				{
				    cnt++;
					printf("%I64d\n",v[i].first);
					break;
				}
			}
		}
		else
		{
			LL sum=0;
			while (L!=R)
			{
				LL tmp=R->first;
				R--;
				sum+=1LL*powmod(R->second%y,x,y)*(tmp-R->first)%y;
				sum%=y;
			}
			printf("%I64d\n",sum);
		}
	}
	return 0;
}