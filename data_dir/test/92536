#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define int ll
#define endl '\n';
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define floop(i,a,b) for(int i=a;i<=b;++i)
const ll mod=1e9+7;
const int maxn=6e5+5;
int minim[maxn],maxin[maxn];
int t[4*maxn+5];
void update(int v, int tl, int tr, int l, int r, int add) {
    if (l > r)
        return;
    if (l == tl && r == tr) {
        t[v] += add;
    } else {
        int tm = (tl + tr) / 2;
        update(v*2, tl, tm, l, min(r, tm), add);
        update(v*2+1, tm+1, tr, max(l, tm+1), r, add);
    }
}

int get(int v, int tl, int tr, int pos) {
    if (tl == tr)
        return t[v];
    int tm = (tl + tr) / 2;
    if (pos <= tm)
        return t[v] + get(v*2, tl, tm, pos);
    else
        return t[v] + get(v*2+1, tm+1, tr, pos);
}
int prevv[maxn];
int32_t main(){
	IOS;	
	int n,m;
	cin>>n>>m;
	floop(i,1,n) minim[i]=i,maxin[i]=i;
	int tot=n+m;
	int temp=1;
	for(int i=n;i>=1;i--){
		update(1,1,tot,1,temp-1,1);
		prevv[i]=temp;
		temp++;
	}
	for (int i = 1; i <= m; ++i)
	{
		int x;
		cin>>x;
		minim[x]=1;
		temp = get(1,1,tot,prevv[x])+1;
		maxin[x]=max(maxin[x],temp);
		// cout<<i<<" "<<x<<" "<<prevv[x]<<" "<<maxin[x]<<endl;
		update(1,1,tot,prevv[x]+1,n+i-1,1);
		prevv[x]=n+i;
	}
	floop(i,1,n){
		temp = 1+get(1,1,tot,prevv[i]);
		maxin[i]=max(maxin[i],temp);
	}
	floop(i,1,n){
		cout<<minim[i]<<" "<<maxin[i]<<endl;
	}
	return 0;
}