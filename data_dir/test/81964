#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'

int n,m;
int tree[300005];
int mark[100005][32];
int soln[100005];
int update(int i,int l,int r)
{
	if(l==r)
		return tree[i]=soln[l];
	int mid=(l+r)/2;
	return tree[i]=update(i*2,l,mid)&update(i*2+1,mid+1,r);
}
int query(int i,int l,int r,int l1,int r1)
{
	if(l1<=l&&r<=r1)
		return tree[i];
	if(l1>r || r1<l)
		return (1<<30)-1;
	int mid=(l+r)/2;
	return query(i*2,l,mid,l1,r1)&query(i*2+1,mid+1,r,l1,r1);
}
int32_t main()
{
	IOS;
	cin>>n>>m;
	int store[m][3]={};
	for(int i=0;i<m;i++)
	{
		int l,r,a;
		cin>>l>>r>>a;
		store[i][0]=l;store[i][1]=r;store[i][2]=a;
		for(int j=30;j>=0;j--)
		{
			if(a&(1<<j))
				mark[l][j]++,mark[r+1][j]--;
		}
	}
	for(int j=0;j<31;j++)
	{
		for(int i=1;i<=n;i++)
		{
			mark[i][j]+=mark[i-1][j];
			if(mark[i][j])
				soln[i]+=(1<<j);
		}
	}
	update(1,1,n);
	for(int i=0;i<m;i++)
	{
		if(query(1,1,n,store[i][0],store[i][1])!=store[i][2])
			return cout<<"NO",0;
	}
	cout<<"YES"<<endl;
	for(int i=1;i<=n;i++)
		cout<<soln[i]<<" ";
}