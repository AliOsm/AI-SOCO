#include <bits/stdc++.h>

using namespace std;

struct cir{
	double x , y , r;
	double area;
	int idx;
	bool operator<(const cir &rhs)const{
		return area < rhs.area;
	}
};

int n;
cir c[1001];

double ar(double r){
	return r * r * acos(-1);
}

bool AIB(cir &a,cir &b){
	return abs(a.r-b.r)>= sqrt((a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y));
}
int p[1011];

vector<int> adj[1011];

double fn = 0.0;

void dfs(int u , bool add){
	if(add)
		fn += c[u].area;
	else
		fn -= c[u].area;
	for (int i = 0; i < adj[u].size(); ++i){
		dfs(adj[u][i],!add);
	}
}
int main() {
	//freopen("input.txt", "r", stdin);
	memset(p,-1,sizeof p);
	scanf("%d",&n);
	for (int i = 0; i < n; ++i){
		scanf("%lf%lf%lf",&c[i].x,&c[i].y,&c[i].r);
		c[i].area = ar(c[i].r);
		c[i].idx = i+1;
	}
	sort(c,c+n);
	reverse(c,c+n);
	for (int i = 0; i < n; ++i){
		for(int j = i - 1 ; j >= 0;j--){
			if(AIB(c[j],c[i])){
				p[i] = j;
				break;
			}
		}
	}
	for (int i = 0; i < n; ++i){
		if(p[i] == -1)
			continue;
		adj[p[i]].push_back(i);
	}
	for (int i = 0; i < n; ++i){
		if(p[i] == -1){
			fn += c[i].area;
			for(int j = 0 ; j < adj[i].size();j++){
				int v = adj[i][j];
				dfs(v,1);
			}
		}
	}
	printf("%.9lf\n", fn);
	return 0;
}