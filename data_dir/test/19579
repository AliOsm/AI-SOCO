/*
#####################################################
# I will win.. maybe not immediately but definitely #
#####################################################
*/

#include <bits/stdc++.h>
using namespace std;

//Optimizations
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

//save time
#define endl '\n'
#define db(x) cout << "> " << #x << ": " << x << endl;
typedef long long ll;

//for sorting
#define all(a) a.begin(),a.end()

//Constants
#define PI   3.141592653593
#define MOD  1000000007LL
#define EPS  0.000000001
#define INF  0X3f3f3f3f

//loops
#define REP(i,n) 	    for(int i=0;i<(n);++i)
#define FOR(i,a,b)      for(int i=(a);i<(b);++i)
#define DFOR(i,a,b)     for(int i=(a);i>=(b);--i)

//vectors
#define vi vector<int>
#define vll vector<ll>
#define vii vector<pair<int,int>>
#define vlll vector<pair<ll,ll>>
#define pb 	push_back

//pairs
#define pi pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define F first
#define S second

//fast I/O
#ifndef _WIN32
#define getchar getchar_unlocked
#define putchar putchar_unlocked
#endif
#define gc getchar
#define pc putchar

//If using cin and cout
#define IOS ios::sync_with_stdio(false)
#define TIE cin.tie(NULL);cout.tie(NULL)

//queue
#define di deque<int>
#define dll deque<ll>
#define qi queue<int>
#define PQ priority_queue

//general
#define E empty()

//Declare all variables and methods needed between this comment and the next one(OCD lol)
const int MAXN=400010;
map<string,vll> arr;

vll none,alice,bob,both;
//Main function
int main(){
    IOS;
    TIE;

    int n;
    cin>>n;

    REP(i,n){
        string str;
        cin>>str;

        ll temp;
        cin>>temp;
        arr[str].pb(temp);
    }

    none=arr["00"];
    alice=arr["01"];
    bob=arr["10"];
    both=arr["11"];

    ll ans=0,aliceCnt=0,bobCnt=0,totCnt=0;
    for(ll x : both)
        ++aliceCnt,++bobCnt,++totCnt,ans+=x;

    int aSz=alice.size(),bSz=bob.size();
    sort(all(alice),greater<ll>());
    sort(all(bob),greater<ll>());
    sort(all(none),greater<ll>());

    PQ<ll> q;
    if(alice.size()>=bob.size()){
        REP(i,bSz)
            ++aliceCnt,++bobCnt,totCnt+=2LL,ans+=(alice[i]+bob[i]);

        FOR(i,bSz,aSz)
            q.push(alice[i]);
        for(ll x : none)
            q.push(x);

        while(!q.E){
            ll cur=q.top();
            q.pop();

            if(2LL*bobCnt<totCnt+1)
                break;
            else
                ++totCnt,ans+=cur;
        }
    }
    else{
        REP(i,aSz)
            ++aliceCnt,++bobCnt,totCnt+=2LL,ans+=(alice[i]+bob[i]);

        FOR(i,aSz,bSz)
            q.push(bob[i]);
        for(ll x : none)
            q.push(x);

        while(!q.E){
            ll cur=q.top();
            q.pop();

            if(2LL*aliceCnt<totCnt+1)
                break;
            else
                ++totCnt,ans+=cur;
        }
    }
    cout<<ans<<endl;

    return 0;
}
