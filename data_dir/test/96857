//ITNOG
#include<bits/stdc++.h>

using namespace std;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
typedef long double ld;

const int maxN = 500*1000 + 5;
const int mod = 1000*1000*1000 + 7;
const int maxM = 2*20003;

int x[maxN], y[maxN];
vector<int> vx,vy;
vector<pair<int,int> > a[maxN];
int poi[maxN], an[maxN];

map<pair<int,int>,int> mp;


int mpx(int t) { return lower_bound(vx.begin(), vx.end(), t) - vx.begin(); }
int mpy(int t) { return lower_bound(vy.begin(), vy.end(), t) - vy.begin(); }

int mar[maxN], mark[maxN];
vector<int> ans;

void dfs(int v)
{
    mar[v] = 1;
    for(;poi[v] < a[v].size(); poi[v]++)
    {
	  auto u = a[v][poi[v]];
	  if(mark[u.second] == 0)
		mark[u.second] = 1, dfs(u.first);
    }
    ans.push_back(v);
}


main()
{
    ios::sync_with_stdio(0); cin.tie();
    int n; cin >> n;

    vx.push_back(0); vy.push_back(0);
    rep(i,0,n) cin >> x[i] >> y[i], vx.push_back(x[i]), vy.push_back(y[i]);
    sort(vx.begin(), vx.end()); vx.resize(unique(vx.begin(), vx.end()) - vx.begin());
    sort(vy.begin(), vy.end()); vy.resize(unique(vy.begin(), vy.end()) - vy.begin());

    rep(i,0,n)
    {
	  a[mpx(x[i])].push_back({mpy(y[i]) + vx.size(),i});
	  a[mpy(y[i])+vx.size()].push_back({mpx(x[i]),i});

	  mp[{mpx(x[i]), mpy(y[i])+vx.size()}] = i;
	  mp[{mpy(y[i])+vx.size(), mpx(x[i])}] = i;
    }

    int st = n;

    rep(i,0,vx.size()) if(a[i].size() % 2)
    {
	  a[i].push_back({vx.size(),st});
	  a[vx.size()].push_back({i,st});

	  mp[{i,vx.size()}] = st;
	  mp[{vx.size(),i}] = st++;
    }

    rep(i,0,vy.size()) if(a[i+vx.size()].size() % 2)
    {
	  a[i+vx.size()].push_back({0,st});
	  a[0].push_back({i+vx.size(),st});

	  mp[{0,i+vx.size()}] = st;
	  mp[{i+vx.size(),i}] = st++;
    }

    rep(i,0,vx.size()+vy.size())
	  if(mar[i]==0)
	  {
		dfs(i);
//		cout << ans.size() << endl;
		rep(i,0,ans.size()-1)
		{
		    int v = ans[i], u = ans[i+1];
		    if(v == 0 || u == 0) continue;
		    if(v == vx.size() || u == vx.size()) continue;   
		    if(v < vx.size()) an[mp[{v,u}]] = 1;
		}
		ans.clear();
	  }


    rep(i,0,n) cout << (an[i] ? 'r' : 'b');
    cout << endl;

    return 0;
}
