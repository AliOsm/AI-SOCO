#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

class BITree {
public:
    static const int SIZE = 1050000, BIAS = 5;
    int u[SIZE],n;
    void clear(){
        memset(u,n=0,sizeof(u));
    }
    void modify(int x, int v){
        n+=v;
        for(x+=BIAS;x<SIZE;x+=x&-x) u[x]+=v;
    }
    int getsum(int x){
        int s=0;
        for(x+=BIAS;x;x-=x&-x) s+=u[x];
        return s;
    }
}seg;

long long ans,pos[20],neg[20];
int a[1050000];

int main(){
    int n,m;
    scanf("%d",&n);
    vector<int> u;
    for(int i=0;i<(1<<n);i++){
        scanf("%d",&a[i]);
        u.push_back(a[i]);
    }
    sort(u.begin(),u.end());
    u.erase(unique(u.begin(),u.end()),u.end());
    for(int i=0;i<(1<<n);i++)
        a[i]=lower_bound(u.begin(),u.end(),a[i])-u.begin();
    for(int o=0;o<n;o++){
        int t=1<<(n-o-1),s=1<<o,x=0,y=0;
        for(int i=0;i<t;i++,y+=s){
            for(int j=0;j<s;j++) seg.modify(a[x++],+1);
            for(int j=0;j<s;j++){
                neg[o]+=seg.getsum(a[x]-1);
                pos[o]+=seg.n-seg.getsum(a[x++]);
            }
            for(int j=0;j<s;j++) seg.modify(a[y++],-1);
        }
        ans+=pos[o];
    }
    scanf("%d",&m);
    while(m--){
        int o;
        scanf("%d",&o);
        for(int i=0;i<o;i++){
            ans-=pos[i];
            ans+=neg[i];
            swap(pos[i],neg[i]);
        }
        printf("%I64d\n",ans);
    }
}
