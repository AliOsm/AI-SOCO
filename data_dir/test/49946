
/*
 * Author    : raj1307 - Raj Singh
 * Date      : 28.03.2020
 */

#pragma GCC optimize("Ofast")
// #pragma GCC optimize("unroll-loops")
// #define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
using namespace std;

//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define print(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cerr << *it << " "; cerr << endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define debarr(a,n) {}
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rr return 
#define mp make_pair
#define pb push_back
#define sz(x) ((int)x.size())
#define int long long
#define ll long long
#define ld long double
#define endl "\n"
#define all(v) (v).begin(), (v).end()
typedef pair<int, int> ii;;
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}
int gcd(int a,int b){ return (b == 0) ? a : gcd(b, a % b);}
inline int lcm(int a,int b){ return a / gcd(a, b) * b;}
inline int normalize(int x,int mod){ x %= mod; if (x < 0) x += mod; return x;}

int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};
string abc="abcdefghijklmnopqrstuvwxyz";
const double PI=acosl(-1);
const int mod = 1000*1000*1000+7;
//const int mod = 998244353;
const int inf = 1e18 +5;

//a and b are assumed to be taken modulo p
inline int add(int a, int b, int p = mod){ int c = a + b; if(c >= p) c -= p; return c; }
inline int sub(int a, int b, int p = mod){ int c = a - b; if(c < 0) c += p; return c; }
inline int mul(int a, int b, int p = mod){ return (a * 1ll * b) % p; }

int floor1(int n,int k){
    if(n%k == 0 || n >= 0)return n/k;
    return (n/k)-1;
}

int ceil1(int n,int k){
    return floor1(n+k-1,k);
}

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}


const int N = 100 + 5;
 

int n,m,k;

string s1,s2,virus;

int cache[N][N][N][2];
vector<int> pi(N);
vector<int> prefix_function(string &s) 
{
	int n = (int)s.length();
	for (int i = 1; i < n; i++) 
	{
		int j = pi[i-1];
		while (j > 0 && s[i] != s[j])
			j = pi[j-1];
		if (s[i] == s[j])
			j++;
		pi[i] = j;
	}
	return pi;
}

int dp(int i,int j,int l,int f){


	if(l==k)
		return -1e9;


	if(i==n or j==m)
		return 0;

	int &ans=cache[i][j][l][f];

	if(ans!=-1) 
		return ans;

	if(!f){
		ans=max(dp(i+1,j,l,0),dp(i,j+1,l,0));
	}

	if(s1[i]==s2[j]){

		if(virus[l]==s1[i])
			ans=max(ans,1+dp(i+1,j+1,l+1,0));
		else{
			if(l==0)
				ans=max(ans,1+dp(i+1,j+1,l,0));
			else{
				ans=max(ans,dp(i,j,pi[l-1],1));
			}
		}

	}
	return ans;


}

void path(int i,int j,int l,int f){


	if(i==n or j==m)
		return;

	int ans=dp(i,j,l,f);
	if(ans==0)
		return;

	if(!f){
		if(ans==dp(i+1, j, l,0))
			return path(i+1, j, l,0);
		if(ans==dp(i, j+1, l,0))
			return path(i, j+1, l,0);
	}


	if(s1[i]==s2[j]){
		if(virus[l]==s1[i]){
			cout<<s1[i];
			return path(i+1,j+1,l+1,0);
		}
		else{
			if(l==0){
				cout<<s1[i];
				return path(i+1,j+1,l,0);
			}
			else
				return path(i,j,pi[l-1],1);
		}
	}

}



void solve(){     

		
	cin>>s1>>s2>>virus;
	n=sz(s1);
	m=sz(s2);
	k=sz(virus);
	prefix_function(virus);
	memset(cache,-1,sizeof(cache));
	int ans=dp(0,0,0,0);
	//cout<<ans<<endl;
	if(ans<=0)
		cout<<0;
	else
		path(0,0,0,0);

















    
}




signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	//freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
	//cin>>t;  // UNCOMMENT FOR TEST-CASES
    //precompute();
	while(t--) {
		solve();
	}
	return 0;
}


