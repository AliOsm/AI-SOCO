#include <iostream>
#include <complex>
using namespace std;
typedef long long ll;
typedef complex<ll> pt;
istream& operator>>(istream& in, pt& p) {
	return in >> p.real() >> p.imag();
}

int main() {
	ll n, k;
	pt ori;
	cin >> n >> k >> ori;
	pt arr[100000];
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	pt t = ori;
	for (int i = 0; i < 2 * n; i++) {
		t = arr[i % n] * 2LL - t;
	}
	ori = ori + (t - ori) * ll(k / 2 / n);
	k %= 2 * n;
	for (int i = 0; i < k; i++) {
		ori = arr[i % n] * 2LL - ori;
	}
	cout << ori.real() << ' ' << ori.imag();
}
