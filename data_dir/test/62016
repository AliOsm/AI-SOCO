#include<bits/stdc++.h>

#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define emp What is it
#define SORRY FUL Accepted 
#define dimash the top one
#define I wish 
#define you be a little more calm
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)

using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 5e3 + 123;                                          
const int NN = 5e5 + 123;
const int PRI = 555557;
const int pri = 997;

string f0 = "What are you doing at the end of the world? Are you busy? Will you save us?";
string quote = "\"";
string a = "What are you doing while sending " + quote;
string b = quote + "? Are you busy? Will you send " + quote;
string c = quote + "?";

long long len[101010];

char calc (int n, long long k) {
	if (len[n] < k)
  		return '.';
  	if (n == 0)       
  	  	return f0[k - 1];
  	if (k <= sz(a))
  	  	return a[k - 1];
  	k -= sz(a);  
  
  	if (k <= len[n - 1])
  	  	return calc (n - 1, k);
  	k -= len[n - 1];
  
  	if (k <= sz(b))    
  	  	return b[k - 1];
  	k -= sz(b);
  
  	if (k <= len[n - 1])
  	  	return calc (n - 1, k);
  	k -= len[n - 1];

  	if (k <= sz(c))
    	return c[k - 1];
	
}

int tests = 1;
int n, m, cnt, ans;
long long k;

inline void Solve () {
	// easy
//	cin >> n >> k;
	len[0] = f0.size();
	for (int i = 1; i <= 1e5; i ++) {
		if(len[i - 1] >= 1e18) {
			len[i] = 2e18;
			continue;
		}
		len[i] = a.size() + len[i - 1] + b.size() + len[i - 1] + c.size();
	}

	int q;
	cin >> q;
	while (q --) {
		cin >> n >> k;
		cout << calc(n, k);
	}
}

int main () {
	SpeedForce;
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);	
//	cin >> tests;
	while(tests --) {
		Solve ();
		// Ee Zadrot
	}	
}