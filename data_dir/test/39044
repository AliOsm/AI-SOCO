#include <bits/stdc++.h>
using namespace std;

const int NMAX = 200010;
set <int> adia[NMAX];
int a[NMAX], b[NMAX];
int nr_vec[NMAX], k;
bool activ[NMAX];
int nr, n, m;
int ans[NMAX];

void rem(int x)
{
    if (activ[x])
        return;

    nr_vec[x]--;
    if (nr_vec[x] >= k)
        return;

    activ[x] = 1;
    nr--;

    for (auto i : adia[x]) {
        nr_vec[i]--;
        if (nr_vec[i] < k)
            rem(i);
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m >> k;

    for (int i = 1; i <= m; i++) {
        cin >> a[i] >> b[i];
        adia[a[i]].insert(b[i]);
        adia[b[i]].insert(a[i]);
        nr_vec[a[i]]++, nr_vec[b[i]]++;
    }


    for (int i = 1; i <= n; i++)
        if (nr_vec[i] < k)
            rem(i);

    nr = 0;
    for (int i = 1; i <= n; i++)
        nr += (!activ[i] && nr_vec[i] >= k);

    ans[m] = nr;
    for (int i = m - 1; i >= 1; i--) {
        if (activ[a[i + 1]] || activ[b[i + 1]]) { }
        else {
        adia[a[i + 1]].erase(b[i + 1]);
        adia[b[i + 1]].erase(a[i + 1]);
        rem(a[i + 1]);
        rem(b[i + 1]);}
        ans[i] = nr;
    }

    for (int i = 1; i <= m; i++)
        cout << ans[i] << '\n';

    return 0;
}








