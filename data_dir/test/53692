#include<bits/stdc++.h>
#define int long long int
#define ull unsigned long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD 1000000007
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int BIG=pow(2,20);
const int N=100005;
int convert(int x,int y)
{
	int a=min(x,y);
	int b=max(x,y);
	return min(b-a,a+26-b);
}
int solve(string str,int cur,int dir)
{
	int n=str.length();
	int mid=(n-1)/2;
         int start=cur;
         int end=0;
         while(end<start)
         {
                if(str[end]==str[n-1-end])
                {
                	end++;
                }
                else
                break;          
         }

         int end1=mid;
         while(end1>start)
         {
         	  if(str[end1]==str[n-1-end1])
         	  end1--;	 
	         else
	         break;
	     }
	     int sum=convert(str[cur],str[n-1-cur]);
	     if(dir==-1)
         {
	         for(int i=end;i<start;i++)
	         {
	              sum+=2;
	              sum+=convert(str[i],str[n-1-i]);
	         }
	         for(int i=start+1;i<=end1;i++)
             sum+=convert(str[i],str[n-1-i])+1;	         	
         }
         else
         {
         	  for(int i=end1;i>start;i--)
         	  {
         	  	 sum+=2;
         	  	 sum+=convert(str[i],str[n-1-i]);
         	  }
         	  for(int i=start-1;i>=end;i--)
         	  sum+=convert(str[i],str[n-1-i])+1;
        }
         return sum;	
    
}
int32_t main(){
	 getFaster;
     int n,cur;
     cin>>n>>cur;
     string str;
     cin>>str;
     if(cur>(n-1)/2)
     {
     	reverse(str.begin(),str.end());
     	cur=n-cur+1;
     }
     cout<<min(solve(str,cur-1,-1),solve(str,cur-1,1))<<endl;
     return 0;
}