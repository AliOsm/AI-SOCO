#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int X, d;
const int MAXN = 35;
long long power[MAXN];
vector<long long> ans;

int main()
{
	ios::sync_with_stdio(0);
	cin >> X >> d;

	power[0] = 1;
	int idx = 30;
	for(int i = 1; i < MAXN; i++)
		power[i] = power[i - 1] * 2;

	long long curr = 1;
	while(true)
	{
		while(X < power[idx] - 1 && idx > 0)
			idx--;
		if(idx == 0)
			break;
		X -= (power[idx] - 1);
		for(int i = 0; i < idx; i++)
			ans.push_back(curr);
		curr += d;
	}

	if(ans.size() > 10000)
	{
		cout << -1 << "\n";
		return 0;
	}

	cout << ans.size() << "\n";
	for(int i = 0; i < ans.size(); i++)
		cout << ans[i] << " ";
	cout << "\n";
	return 0;
}