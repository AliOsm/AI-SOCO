#include <iostream>
#include <cstring>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <vector>
#include <cstdio>
#include <ctime>
#include <queue>
using namespace std;
#define ll long long
#define VI vector<int>
#define inf 1000000000
#define L(s) ((int)(s).size())
#define x first 
#define y second
#define pii pair<int, int>
#define mp make_pair
#define pb push_back
#define all(s) (s).begin(), (s).end()
int n;
double pro[111];
inline double value(vector<double> v) {
	double logsum = 0;
	for(int i = 0; i < L(v); ++i) logsum += log(1 - v[i]);
	double ans = 0.;
	for(int i = 0; i < L(v); ++i) {
		ans += exp(logsum - log(1 - v[i]) + log(v[i]));
	}
	return ans;
}
inline double solve() {
	double ans(0);
	for(int i = 0; i < n; ++i) {
		vector<double> v(0);
		for(int j = i; j < n; ++j) {
			v.pb(pro[j]);
			ans = max(ans, value(v));
		}
	}
	return ans;
}
int main() {
	cin >> n;
	for(int i = 0; i < n; ++i)
		cin >> pro[i];
	if (*max_element(pro, pro + n) < 1e-7) {
		cout << "0\n";
		return 0;
	}
	if (abs(1 - *max_element(pro, pro + n)) < 1e-7) {
		cout << "1\n";
		return 0;
	}
	sort(pro, pro + n);
	reverse(pro, pro + n);
	while(pro[n - 1] < 1e-8) --n;

	printf("%0.12lf\n", solve());
}
	