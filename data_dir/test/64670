#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(n);i++)
#define for1(i,n) for(int i=1;i<(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=200002;

int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      #endif
      int n,k;
      cin>>n>>k;
      vector<pii> v;
      for(int i=0;i<n;i++)
      {
            int x,y;
            cin>>x>>y;
            v.pb({x,0});
            v.pb({y,1});
      }
      sort(all(v));
      int cnt=0;
      vector<pii> ans;
      int l=1e12,r=-1e12;
      for(int i=0;i<v.size();i++)
      {
            if(v[i].se==0)
            {
                  if(cnt+1==k)
                  {
                        // if(l!=1e12)
                        // ans.pb({l,r});
                        ///l=1e12,r=-1e12;
                        l=min(l,v[i].fi);
                        r=max(r,v[i].fi);
                  }
                  else if(cnt>=k)
                  {
                        l=min(l,v[i].fi);
                        r=max(r,v[i].fi);
                  }
                  else{
                        l=1e12;
                        r=-1e12;
                  }
                  cnt++;

            }
            else{
                  if(cnt==k)
                  {
                        l=min(l,v[i].fi);
                        r=max(r,v[i].fi);
                        if(ans.size()>0&&ans.back().se==l)
                        {
                              pii yy=ans.back();
                              ans.pop_back();
                              l=yy.fi;
                        }
                        ans.pb({l,r});
                        l=1e12;
                        r=-1e12;
                  }
                  else if(cnt>k)
                  {
                        l=min(l,v[i].fi);
                        r=max(r,v[i].fi);
                  }
                  else{
                        l=1e12,r=-1e12;
                  }
                  cnt--;
            }
      }
      sort(all(ans));
      cout<<ans.size()<<"\n";
      for(auto x:ans) cout<<x.fi<<" "<<x.se<<"\n";
}