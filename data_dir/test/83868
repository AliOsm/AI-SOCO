#include <bits/stdc++.h>

using namespace std;

vector< vector<int> >adjlist ;
vector<bool>visited ;
pair<int , int> arr[101] ;
int n ;

void dfs(int node)
{
    visited[node] = true ;
    for(int i = 0 ; i < adjlist[node].size() ; ++i)
    {
        int child = adjlist[node][i] ;
        if(!visited[child])
            dfs(child);
    }
}

int connected_components()
{
    int cnt = 0 ;
    for(int i = 1 ; i <= n ; ++i)
    {
        if(!visited[i])
        {
            dfs(i);
            cnt++;
        }
    }
    return cnt ;
}

int main()
{
    cin>>n ;
    adjlist = vector< vector<int> >(n+1);
    visited = vector<bool>(n+1);
    for(int i = 1 ; i <= n ; ++i)
        cin>>arr[i].first>>arr[i].second;
    for(int i = 1 ; i <= n ; ++i)
    {
        for(int j = 2 ; j <= n ; ++j)
        {
            if(arr[i].first - arr[j].first == 0 || arr[i].second - arr[j].second == 0)
            {
                adjlist[i].push_back(j);
                adjlist[j].push_back(i);
            }
        }
    }
    int ans = connected_components();
    cout<<ans-1;
    return 0 ;
}
