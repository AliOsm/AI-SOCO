#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <bitset>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned long ul;
typedef long double ld;

const int maxn = 100500 * 10;

int n, k;
char s[maxn];
int z[maxn];

void calc_z() {
    z[0] = n;
    int l = 0, r = 0;
    for (int i = 1; i < n; i++) {
        if (i <= r) z[i] = min(z[i - l], r - i + 1);
        while (i + z[i] < n && s[z[i]] == s[i + z[i]]) z[i]++;
        if (i + z[i] - 1 > r) {
            l = i, r = i + z[i] - 1;
        }
    }
}

int ss[maxn];

void add(int l, int r) {
    ss[l]++;
    ss[r + 1]--;
}

bool isGood(int pref, int block) {
    if (block + z[block] >= pref) return true;
    return false;
}

int main()
{
    //srand(time(0));
    //freopen("input.txt", "r", stdin);

    scanf("%d%d%s", &n, &k, s);

    calc_z();

    for (int pref = 1; pref <= n; pref++) {
        if (pref % k != 0) continue;
        int block = pref / k;
        if (!isGood(pref, block)) continue;
        add(pref - 1, pref + min(block, z[pref]) - 1);
    }

    int curSum = 0;

    string res;

    for (int i = 0; i < n; i++) {
        curSum += ss[i];
        if (curSum != 0) res.push_back('1');
        else res.push_back('0');
    }

    puts(res.c_str());

    return 0;
}
