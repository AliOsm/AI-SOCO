#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <assert.h>
#include <fstream>
#include <iomanip>
#include <bitset>
#include <string>
#include <cstdio>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

const int64 inf = 1e18;

#ifdef _DEBUG
    const int N = 5010;
#else
    const int N = 5010;
#endif

const int MOD = 1e9+7;

int n, f[N], dp[N], c[N][N];


int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    cin >> n;
    c[0][0] = 1;
    for (int i = 1; i <= n; i++)
    {
        c[i][0] = 1;
        c[i][i] = 1;
        for (int j = 1; j < i; j++) c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % MOD;
    }
    f[0] = 1;
    for (int i = 1; i <= n; i++) f[i] = (1ll * f[i - 1] * i) % MOD;
    dp[0] = 1;
    dp[1] = 1;
    for (int i = 2; i <= n; i++)
    {
        dp[i] = 0;
        for (int j = 1; j <= i; j++) 
        {
            int cur = c[i - 1][j - 1];
            dp[i] = (1ll * dp[i] + 1ll * dp[i - j] * cur) % MOD;
        }
    }
    int ans = 0;
    for (int i = 0; i < n; i++)
        ans = (1ll * ans + 1ll * c[n][n - i] * dp[i]) % MOD;
    cout << ans;
    return 0;
}