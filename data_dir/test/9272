#include<bits/stdc++.h>
using namespace std;

#define MOD 1000000007
#define MOD1 1000000009
#define PR 43
#define PR1 37
#define ll long long
#define MAX 300005

int mod_mul(long long a,long long b,int md)
{
    return (a*b)%md;
}

int mod_plus(int a,int b,int md)
{
    return (a+b)%md;
}

int k,n;
char str[MAX];

map<pair<int,int>,int >mm;
vector<int>gr[MAX];
bool self[MAX],vis[MAX];
int opp[MAX];


pair<int,int>getHash()
{
    int xx,pw,pw1,xx1,i;
    xx=xx1=0;
    pw=pw1=1;
    for(i=0;i<n;i++){
        xx=mod_plus(xx,mod_mul(pw,str[i],MOD),MOD);
        xx1=mod_plus(xx1,mod_mul(pw1,str[i],MOD1),MOD1);
        pw=mod_mul(pw,PR,MOD);
        pw1=mod_mul(pw1,PR1,MOD1);
    }
    return {xx,xx1};
}


int main()
{
    //freopen("input.txt","r",stdin);
    int i,j,k,t=1,val;
    scanf("%d%d",&k,&n);
    for(i=1;i<=k;i++){
        scanf("%s",str);
        scanf("%d",&val);
        pair<int,int>p=getHash();
        int node=mm[p];
        if(!node){
            node=t;
            mm[p]=t;
            t++;
        }
        gr[node].push_back(val);


        reverse(str,str+n);
        pair<int,int>q=getHash();
        if(p==q){
            self[node]=true;
            continue;
        }
        int opp_node=mm[q];
        if(opp_node!=0){
            opp[node]=opp_node;
            opp[opp_node]=node;
        }
    }
    for(i=1;i<t;i++){
        sort(gr[i].begin(),gr[i].end());
        reverse(gr[i].begin(),gr[i].end());
    }
    long long ans=0;
    int tt=0;
    vector<pair<int,int> >xxx;
    for(i=1;i<t;i++){
        if(vis[i])continue;
        vis[i]=vis[opp[i]]=true;
        if(self[i]){
            for(j=0;j+1<gr[i].size();j+=2){
                if(gr[i][j]+gr[i][j+1]>0){
                    ans+=gr[i][j]+gr[i][j+1];
                    if(gr[i][j+1]<0)xxx.push_back({gr[i][j],gr[i][j+1]});
                }
                else break;
            }
            if(j<gr[i].size() && gr[i][j]>0)tt=max(tt,gr[i][j]);
        }
        else{
            int p1=0,p2=0;
            while(p1<gr[i].size() && p2<gr[opp[i]].size()){
                int xx=gr[i][p1]+gr[opp[i]][p2];
                if(xx>0)ans+=xx;
                else break;
                p1++;p2++;
            }
        }

    }
    ll aa1=ans;
    for(i=0;i<xxx.size();i++){
        aa1=max(aa1,ans-(xxx[i].first+xxx[i].second)+xxx[i].first);
    }
    ans=max(aa1,ans+tt);



    cout<<ans<<endl;


    return 0;
}
