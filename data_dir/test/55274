/*
 * Author    : raj1307 - Raj Singh
 * Institute : Jalpaiguri Government Engineering College
 * Date      : 24.07.19
 */

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <iomanip>
 
#include <memory.h>
#include <assert.h>
using namespace std;

//#define DEBUG
#ifdef DEBUG
#define deb(...) cout<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cout<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cout.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...)
#define endl "\n"
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rep(i, a, b) for(int i = (a); i <= (b); ++i)
#define int long long
#define pb push_back
#define sz(x) ((int)x.size())
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}

const int mod = 1000*1000*1000+7;

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}

const int N = 1e5 + 5;

int m=100000000;
int n1,n2,k1,k2;

int cache[103][103][2][12];


int dp(int f, int s, int cur,int ongoing){


	if(cur==0){
		if(ongoing>k1)
			return 0;
	}
	if(cur==1){
		if(ongoing>k2)
			return 0;
	}
	if(f>n1 || s>n2) return 0; 



	if(f+s==n1+n2){

		if(f==n1 && s==n2) // smart case
			return 1;
		else
			return 0; 
	}

	if(cache[f][s][cur][ongoing]!=-1)
		return cache[f][s][cur][ongoing];


	cache[f][s][cur][ongoing]=0;

	if(cur==0){
		cache[f][s][cur][ongoing]+=(dp(f+1,s,cur,ongoing+1)%m+dp(f,s+1,1,1)%m)%m;
	}
	if(cur==1){
		cache[f][s][cur][ongoing]+=(dp(f+1,s,0,1)%m+dp(f,s+1,cur,ongoing+1)%m)%m;
	}


	return cache[f][s][cur][ongoing];





}






void solve(){
	

	cin>>n1>>n2>>k1>>k2;

	memset(cache,-1,sizeof(cache));
	
	cout<<(dp(1,0,0,1)+dp(0,1,1,1))%m;


	


}




signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
//	cin>>t;
	while(t--) {
		solve();
	}

	
	return 0;
}
