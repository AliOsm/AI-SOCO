#include <bits/stdc++.h>
#define F first
#define S second
#define all(a) a.begin(),a.end()
#define setDP(arr) memset(arr,-1,sizeof arr)
#define Clear(arr) memset(arr,0,sizeof arr)
#define li(x) x.size()-1
#define oo 1000000000
#define inf 1000000000000000000
#define M 1000000007
#define M2 1000000009
#define pii pair<ll,ll>
using namespace std;
typedef long long ll;
const int N = 2e5+100;
const int SQRTN = 320;
const int LOGN = 20;
const double PI = acos(-1);

int n , m;
vector<set<int> > g;
int vis[N];
int ans =0;
set<int> iv;
set<int> iv2;
set<int>::iterator it;
vector<pair<int,int> > va;
void bfs(int node){
	if(vis[node])return;
	iv.erase(node);
	queue<int> q;
	q.push(node);
	ans++;
	while(!q.empty()){
		node=q.front();
		vis[node]=1;
		q.pop();
		iv2.clear();
		for(it = iv.begin() ; it!=iv.end() ; it++){
			if(g[node].find(*it)==g[node].end()){
				q.push(*it);
			}else{
				iv2.insert(*it);
			}
		}
		iv.clear();
		for(it = iv2.begin() ; it!=iv2.end() ; it++){
			iv.insert(*it);
		}
	}
}
int main() {
	cin >> n >> m ;
	g.resize(n+1);
	va.resize(1);
	va[0]=make_pair(oo,oo);
	for(int i = 1 ; i<= n ; i++)iv.insert(i),va.push_back(make_pair(0,i));
	for(int i = 0,a,b ; i < m ; i++){
		scanf("%d%d",&a,&b);
		va[a].F++;
		va[b].F++;
		g[a].insert(b);
		g[b].insert(a);
	}
	sort(all(va));
	for(int i = 0 ; i< n ;i++){
		if(vis[va[i].S])continue;
		bfs(va[i].S);
	}
	cout << ans-1 << endl;
	
    return 0;
}	