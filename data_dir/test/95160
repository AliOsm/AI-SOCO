#include <bits/stdc++.h>
#define vec vector
#define ms multiset
#define F first
#define S second
#define pb push_back
#define pii pair<int, int>
#define pll pair<ll,ll>
#define pq priority_queue
#define FILE ifstream in("fly.in");ofstream out("fly.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef long long ll;
typedef long double ld;

vec<vec<int>> st;
vec<int> dep, mxd;
int a,lg;

int lca(int x, int y){
    int dx = dep[x], dy = dep[y];
    for(; abs(dx-dy)>0;){
        int k = mxd[abs(dx-dy)];
        if(dx>dy){
            dx-=1<<k;
            x = st[k][x];
        }
        else{
            dy-=1<<k;
            y = st[k][y];
        }
    }
    for(int k = mxd[dep[x]]; x!=y; k = abs(k-1)){
        if(st[k][x]!=st[k][y] || k==0) {
            x = st[k][x];
            y = st[k][y];
        }
    }
    return x;
}

int dist(int x, int y){
    return dep[x]+dep[y]-2*dep[lca(x,y)];
}

int main() {
    fast;
    cin>>a;
    lg = ceil(log2(a));
    mxd = vec<int>(250000);
    mxd[2] = 1;
    for(int q=3; q<250000; q++) mxd[q] = 2<<mxd[q-1]>q ? mxd[q-1] : mxd[q-1]+1;
    int v1=0, v2=1, d=1;
    st = vec<vec<int>>(lg, vec<int>(a));
    dep = vec<int>(a);
    vec<int> vr(a); dep[0] = 1;
    for(int q=0; q<lg; q++) st[q][0] = -1;
    for(int q=0; q<a-1; q++){
        int x=q+1, p; cin>>p; p--;
        st[0][x] = p;
        vr.pb(p);
        dep[x] = dep[p]+1;
    }
    for(int q=1; q<lg; q++)for(int w=1; w<a; w++)st[q][w] = 1<<q>=dep[w] ? -1 : st[q-1][st[q-1][w]];
    cout<<1<<" ";
    for(int q=1; q<a-1; q++){
        int x = q+1, p = vr[q];
        if(q==0) continue;
        if(dist(v1, x)>d){
            d++;
            v2 = x;
        }
        else if(dist(v2, x)>d){
            d++;
            v1 = x;
        }
        cout<<d<<" ";
    }
}