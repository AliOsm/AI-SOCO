#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
	// freopen("data.in", "rt", stdin);
	// freopen("data.out", "w", stdout);
	auto _start = chrono::high_resolution_clock::now();
#endif

	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(15);
	int n;
	cin >> n;
	vector<int> a(n);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	string ans;
	int back = 0, l = 0, r = n - 1;
	while (l <= r) {
		// cerr << l << ' ' << r << '\n';
		if (a[l] < a[r]) {
			if (back < a[l]) {
				ans += 'L';
				back = a[l];
				l++;
			} else if (back < a[r]) {
				ans += 'R';
				back = a[r];
				r--;
			} else break;
		} else {
			if (back < a[r]) {
				ans += 'R';
				back = a[r];
				r--;
			} else if (back < a[l]) {
				ans += 'L';
				back = a[l];
				l++;
			} else break;
		}
	}
	cout << (int)ans.size() << '\n';
	cout << ans << '\n';

#ifdef LOCAL_DEFINE
	auto _end = chrono::high_resolution_clock::now();
	cerr << "elapsed time: " << chrono::duration<double, milli>(_end - _start).count() << " ms\n";
#endif
	return 0;
}