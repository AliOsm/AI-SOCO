#include <bits/stdc++.h>

using namespace std;

const int N = 1234567;

int n, m;
int size[N];
vector<int> g[N];
int used[N];
int cc;

int dfs(int v) {
  used[v] = 1;
  size[cc]++;
  int ret = 0;
  for (int to : g[v]) {
    ret++;
    if (used[to]) continue;
    ret += dfs(to);
  }
  return ret;
}

int main() {
  scanf("%d %d", &n, &m);
  for (int i = 0; i < m; i++) {
    int a, b; scanf("%d %d", &a, &b); a--; b--;
    g[a].push_back(b);
    g[b].push_back(a);
  }
  int ans = 0;
  for (int i = 0; i < n; i++) {
    if (!used[i]) {
      int edges = dfs(i);
      assert(edges % 2 == 0);
      edges /= 2;
      if (edges < size[cc]) ans++;
      cc++;
    }
  }
  printf("%d\n", ans);
  return 0;
}