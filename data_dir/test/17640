#include <bits/stdc++.h>

using namespace std;

#define FORU(i, a, b) for (int i = a; i < b; i++)
#define FORD(i, a, b) for (int i = a - 1; i >= b; i--)
#define MAXEL(x, n) *max_element(x, x + n)
#define MAXELS(v) *max_element(v.begin(), v.end())
#define MINEL(x, n) *min_element(x, x + n)
#define MINELS(v) *min_element(v.begin(), v.end())
#define LB(x, n, a) int (lower_bound(x, x + n, a) - x)
#define LBS(v, a) int (lower_bound(v.begin(), v.end(), a) - v.begin())
#define UB(x, n, a) int (upper_bound(x, x + n, a) - x)
#define UBS(v, a) int (upper_bound(v.begin(), v.end(), a) - v.begin())
#define SORT(x, n) sort(x, x + n)
#define SORTS(v) sort(v.begin(), v.end())
#define PB push_back
#define MP make_pair
#define CINVI(v) { int cur; cin >> cur; v.PB(cur); }
#define BSS(v, a) (LBS(v, a) == v.size() || v[LBS(v, a)] != a ? -1 : LBS(v, a))

typedef long long li;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <double, double> pdd;
typedef map <int, int> mii;
typedef map <string, int> msi;
typedef vector <int> vi;

const int SHINF = 1 << 15; 
const int INF = 1 << 30;
const li LINF = 1LL << 62;

// functions, types, constants and variables
const int MAXY = 44722;
int n, sq[MAXY + 1];
vi dn;

vi convert(int a) {
	vi d;
	do {
		d.PB(a % 10);
		a /= 10;
	} while (a);
	reverse(d.begin(), d.end());
	return d;
}

int findOp(int y) {
	vi d = convert(y);
	for (int i = 0, j = 0; i < d.size(); i++, j++) {
		while (j < dn.size() && d[i] != dn[j]) {
			j++;
		}
		if (j == dn.size()) {
			return SHINF;
		}
	}
	return dn.size() - d.size();
}

// solving
void solve() {
	dn = convert(n);
	FORU(i, 1, MAXY) sq[i] = i * i;
	int curMin = SHINF;
	FORU(i, 1, MAXY) curMin = min(curMin, findOp(sq[i]));
	cout << (curMin == SHINF ? -1 : curMin) << endl;
}

// reading
int main() {
	cin >> n;
		
	//-----------------------------------------------
	
	solve();
}