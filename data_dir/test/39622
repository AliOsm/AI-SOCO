#include <bits/stdc++.h>

const int N = 5000000 + 5;
int prime[N],ptot;
int mindiv[N];
bool doge[N];
int count[N];

void get_prime(int n) {
    for (int i = 2; i < n; ++ i) {
        if (!doge[i]) {
            prime[ptot++] = i;
            mindiv[i] = i;
        }
        for (int j = 0; j < ptot; ++ j) {
            if (prime[j] * i >= n) break;
            doge[prime[j] * i] = true;
            mindiv[prime[j] * i] = prime[j];
            if (i % prime[j] == 0) break;
        }
    }
    for (int i = n - 1; i > 1; -- i) {
        int t = i;
        int cnt = 0;
        while (t > 1) {
            int x = mindiv[t];
            cnt ++;
            t /= x;
        }
        count[i] += cnt;
        count[i - 1] += count[i];
    }
}

int main() {
    get_prime(N);
    int cas;
    scanf("%d",&cas);
    while (cas--) {
        int a,b;
        scanf("%d%d",&a,&b);
        int cnt = count[1] - count[b + 1] - (count[1] - count[a + 1]);
        printf("%d\n",-cnt);
    }
}
