#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define MP make_pair
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define MAGIC0
mt19937 rnd(time(0)); //rnd()

typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;

const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e5 + 7;
const double PI = acos(-1.);
const double EPS = 1e-8;
const int MOD = 998244353;

#define int LL

VI a(200005), x[200005];
LL sum[200005], res;
LL All = 0, ans;

void dfs(int v, int par, int h = 0)
{
	sum[v] = a[v];
	res += h * a[v];
	for(int to : x[v])
	{
		if (to != par)
		{
			dfs(to, v, h + 1);
			sum[v] += sum[to];
		}
	}
}

void dfs2(int v, int par)
{
	ans = max(res, ans);
	for(int to : x[v])
	{
		if (to != par)
		{
			res -= sum[to];
			sum[v] -= sum[to];
			res += sum[v];
			sum[to] += sum[v];

			dfs2(to, v);

			sum[to] -= sum[v];
			res -= sum[v];
			sum[v] += sum[to];
			res += sum[to];

		}
	}
}

main()
{
	ios_base::sync_with_stdio(0);
	int n;
	cin >> n;
	FOR(i, 0, n)
	{
		cin >> a[i];
		All += a[i];
	}
	FOR(i, 1, n)
	{
		int u, v;
		cin >> u >> v;
		--u;
		--v;
		x[u].PB(v);
		x[v].PB(u);
	}

	dfs(0, 0);
//	cout << res << endl;
	dfs2(0, 0);
	cout << ans << endl;

	return 0;
}


