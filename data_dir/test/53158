#include<bits/stdc++.h>
using namespace std;
vector<int>vec[102];
int par[102][102];
int a[102],b[102];
int mem[102][10004],n;
int dp(int pos,int rem)
{
    if(!rem)
        return 0;
    if(pos==n)
        return -1000000000;
    if(mem[pos][rem]!=-1)
        return mem[pos][rem];
    mem[pos][rem]=0;
    for(int i=0;i<=min((int)vec[pos].size(), rem); i++)
        mem[pos][rem]= max(mem[pos][rem], par[pos][i]+dp(pos+1,rem-i));
    return mem[pos][rem];
}
int main()
{
    int m, x, y;
    scanf("%d %d",&n,&m);
    for(int i=0; i<n; i++)
    {
        scanf("%d",&x);
        int sum= 0;
        for(int j=0; j<x; j++)
            scanf("%d", &y), vec[i].push_back(y);
        for(int j=1;j<=x; j++)
            a[j]= a[j-1]+vec[i][j-1];
        for(int j=1, k=x-1;j<=x; j++, k--)
            b[j]=b[j-1]+vec[i][k];
        for(int j=1; j<=x; j++)
        {
            for(int k=0; k<=j;k++)
                par[i][j]= max(par[i][j], a[k]+b[j-k]);
        }
    }
    memset(mem,-1,sizeof mem);
    printf("%d\n", dp(0,m));

    return 0;
}
