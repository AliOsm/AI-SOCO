//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

const int N = 2000 + 10;

char a[N][N];
int d[N][N], dx[4], dy[4];

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i ++)
        for (int j = 1; j <= m; j ++)
            cin >> a[i][j];
    dx[0] = +1;
    dx[1] = -1;
    dy[2] = +1;
    dy[3] = -1;
    for (int i = 1; i <= n; i ++){
        for (int j = 1; j <= m; j ++){
            if (a[i][j] == '*')
                continue;
            for (int k = 0; k < 4; k ++)
                if (a[i + dx[k]][j + dy[k]] == '.')
                    d[i][j] ++;
        }
    }
    queue < pair < int , int > > q;
    for (int i = 1; i <= n; i ++)
        for (int j = 1; j <= m; j ++)
                q.push(make_pair(i, j));
    while (!q.empty()){
        int x = q.front().first, y = q.front().second;
        q.pop();
        if (d[x][y] != 1 || a[x][y] != '.')
            continue;
        for (int i = 0; i < 4; i ++){
            int nx = x + dx[i], ny = y + dy[i];
            if (a[nx][ny] != '.')
                continue;
            if (i == 0)
                a[x][y] = '^', a[nx][ny] = 'v';
            if (i == 1)
                a[x][y] = 'v', a[nx][ny] = '^';
            if (i == 2)
                a[x][y] = '<', a[nx][ny] = '>';
            if (i == 3)
                a[x][y] = '>', a[nx][ny] = '<';
            d[nx][ny] --;
            for (int j = 0; j < 4; j ++){
                d[nx + dx[j]][ny + dy[j]] --;
                if (d[nx + dx[j]][ny + dy[j]] == 1)
                    q.push(make_pair(nx + dx[j], ny + dy[j]));
            }
            break;
        }
    }
    for (int i = 1; i <= n; i ++)
        for (int j = 1; j <= m; j ++)
            if (a[i][j] == '.')
                return cout << "Not unique", 0;
    for (int i = 1; i <= n; i ++, cout << '\n')
        for (int j = 1; j <= m; j ++)
            cout << a[i][j];
    return 0;
}