#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 2e5 + 7;

int n, k, mx, T[N], C[N];

bool check(int x)
{
    int ans = 0;
    for(int i = 1; i <= mx; i++)
    {
        ans += C[i] / x;
    }
    return ans >= k;
}

int main()
{
    _upgrade
    cin >> n >> k;
    for(int i = 1; i <= n; i++)
    {
        cin >> T[i];
        C[T[i]]++;
        mx = max(mx, T[i]);
    }
    int l = 0, r = n + 1;
    while(l + 1 < r)
    {
        int m = (l + r) / 2;
        check(m) ? l = m : r = m;
    }
    vector < int > ans;
    for(int i = 1; i <= mx; i++)
    {
        while(sz(ans) < k && C[i] >= l)
        {
            ans.push_back(i);
            C[i] -= l;
        }
    }
    for(auto u: ans)
        cout << u << " ";
	return 0;
}
