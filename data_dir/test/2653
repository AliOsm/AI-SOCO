#include <string>
#include <vector>
#include <iostream>
#include <unordered_map>
#include <unordered_set>

int main() {
  int N;
  std::cin >> N;
  std::vector<std::string> v(N);
  std::unordered_map<std::string, int> subsets;
  for (int i = 0; i < N; ++i) {
    std::cin >> v[i];
    std::unordered_set<std::string> ignore;
    for (int j = 0; j < 9; ++j) {
      for (int k = j; k < 9; ++k) {
        if (ignore.find(v[i].substr(j, k - j + 1)) == ignore.end()) {
          ++subsets[v[i].substr(j, k - j + 1)];
          ignore.insert(v[i].substr(j, k - j + 1));
        }
      }
    }
  }
  for (int i = 0; i < N; ++i) {
    bool found = false;
    for (int len = 1; !found && len <= 9; ++len) {
      for (int j = 0; !found && j + len <= 9; ++j) {
        if (subsets[v[i].substr(j, len)] == 1) {
          std::cout << v[i].substr(j, len) << "\n";
          found = true;
        }
      }
    }
  }
}
