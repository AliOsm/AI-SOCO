#include <bits/stdc++.h>
using namespace std;
const int MAXN = 1e3 + 77;
int p[MAXN];

int dsu_get (int v) {
	return (v == p[v]) ? v : (p[v] = dsu_get (p[v]));
}

int main() {

    int m;
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) {
        int x;
        cin >>x;
        p[i] = i;
    }
    cin >> m;
    vector < pair < int, pair<int,int> > > g;
    for (int i = 1; i <= m; i++) {
        int a, b,c;
        cin >> a >> b >> c;
        g.push_back({c, {a, b}});
    }
    int cost = 0;
    vector < pair<int,int> > res;
    sort (g.begin(), g.end());
    for (int i=0; i<m; ++i) {
        int a = g[i].second.first,  b = g[i].second.second,  l = g[i].first;
        if (dsu_get(b) == g[i].second.second) {
            cost += l;
            p[b] = dsu_get(a);
            res.push_back (g[i].second);
        }
    }
    if (res.size() == n - 1) {
        cout << cost;
    } else {
        cout << -1;
    }
}
