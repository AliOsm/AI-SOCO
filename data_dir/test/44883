#include <stdio.h>
#include <string.h>
char s[510],ts[510];
int dp[510][510],cost[510][510],pre[510][510],p[510];
int check(int l,int r)
{
    int anss=0;
    for (int i=l;i<=(l+r)/2;i++)
        if (s[i]!=s[l+r-i]) anss++;
    return anss;
}
void get(int l,int r)
{
    int len=0;
    for (int i=l;i<=(l+r)/2;i++)
        ts[len++]=s[l+r-i];
    for (int i=(l+r)/2+1;i<=r;i++)
        ts[len++]=s[i];
    ts[len]=0;
}
int main()
{
    while (scanf("%s",s)==1)
    {
        int kk;
        scanf("%d",&kk);
        int len=strlen(s);
        for (int i=0;i<len;i++)
            for (int j=i;j<len;j++)
                cost[i][j]=check(i,j);
        memset(dp,-1,sizeof(dp));
        memset(pre,-1,sizeof(pre));
        dp[0][0]=0;
        for (int i=0;i<len;i++)
            for (int j=0;j<kk;j++)
            {
                if (dp[i][j]==-1) continue;
                for (int k=i;k<len;k++)
                {
                    int cc=dp[i][j]+cost[i][k];
                    if (dp[k+1][j+1]==-1||dp[k+1][j+1]>cc)
                    {
                        dp[k+1][j+1]=cc;
                        pre[k+1][j+1]=i;
                    }
                }
            }
        int id=1;
        for (int i=1;i<=kk;i++)
            if (dp[len][i]<dp[len][id]) id=i;
        kk=id;
        printf("%d\n",dp[len][kk]);
        int cntt=0,now=len;
        for (int k=kk;k>=1;k--)
        {
            p[k]=now;
            now=pre[now][k];
        }
        p[0]=0;
        for (int i=0;i<kk;i++)
        {
            if (i!=0) printf("+");
            get(p[i],p[i+1]-1);
            printf("%s",ts);
        }
        printf("\n");
    }
    return 0;
}
