#include<bits/stdc++.h>
#define MOD 1000000007
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define vpll vector<pll>
using namespace std;
typedef long long int ll;

ll common(pll p1,pll p2)
{
    if(p1.first==p2.first)
    {
        return p1.first;
    }
    if(p1.first==p2.second)
    {
        return p1.first;
    }
    if(p1.second==p2.first)
    {
        return p2.first;
    }
    if(p1.second==p2.second)
    {
        return p2.second;
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);    
    
    map<ll,pll> product;
    ll special[6]={4,8,15,16,23,42};
    ll result[6];
    ll visit[6]={false,false,false,false,false,false};
    map<ll,ll> inverse;
    for(ll i=0;i<6;i++)
    {
        inverse[special[i]]=i;
    }
    for(ll i=0;i<6;i++)
    {
        for(ll j=i+1;j<6;j++)
        {
            product[special[i]*special[j]]=make_pair(special[i],special[j]);
        }
    }
    pll arr1[5];
    ll store;
    for(ll i=1;i<5;i++)
    {
        cout<<"? "<<i<<" "<<i+1<<endl;
        cin>>store;
        arr1[i]=product[store];
    }
    ll val1;
    for(ll i=1;i<4;i++)
    {
        val1=common(arr1[i],arr1[i+1]);
        result[i]=val1;
        visit[inverse[val1]]=true;
    }
    if(visit[inverse[arr1[1].first]])
    {
        result[0]=arr1[1].second;
        visit[inverse[result[0]]]=true;        
    }
    else
    {
        result[0]=arr1[1].first;
        visit[inverse[result[0]]]=true;
    }
    if(visit[inverse[arr1[4].first]])
    {
        result[4]=arr1[4].second;
        visit[inverse[result[4]]]=true;
    }
    else
    {
        result[4]=arr1[4].first;
        visit[inverse[result[4]]]=true;
    }
    for(ll i=0;i<6;i++)
    {
        if(visit[i]==false)
        {
            result[5]=special[i];
        }
    }
    cout<<"!";
    for(ll i=0;i<6;i++)
    {
        cout<<" "<<result[i];
    }
    return 0;
}