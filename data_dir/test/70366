#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
ll t[M];
bool f[M],dn[M];
int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	set<pair<ll,ll> > s,vt;
	vector<pair<ll,ll> > v;
	for(ll i=1;i<=n;i++)
	{
		ll a,b;
		cin>>a>>b>>t[i];
		v.pb({a,i});
		v.pb({b,i});
		vt.insert({b-t[i],i});
	}
	sort(all(v));
	s.insert({t[v[0].ss],v[0].ss});
	ll c=v[0].ff;
	f[v[0].ss]=1;
	ll ans=0;
	for(ll i=1;i<sz(v);i++)
	{
		ll p=v[i].ff;
		ll mt=(*s.begin()).ff;
		ll z=(p-c)/mt;
		ans+=z;
		c+=mt*z;
		if(f[v[i].ss])
		{
			s.erase({t[v[i].ss],v[i].ss});
		}
		else
		{
			while(sz(vt))
			{
				auto X=*(vt.begin());
				if(c<=X.ff)
					break;
				ll z=X.ss;
				dn[z]=1;
				s.erase({t[z],z});
				vt.erase(vt.begin());
			}
			ll p;
			if(sz(s))
				p=c+(*s.begin()).ff;
			else
				p=2e18;
			ll j;
			for(j=i;j<sz(v);j++)
			{
				if(dn[v[j].ss])
					continue;
				if(p<=v[j].ff)
					break;
				p=min(p,v[j].ff+t[v[j].ss]);
				f[v[j].ss]=1;
				s.insert({t[v[j].ss],v[j].ss});
			}
			c=p;
			ans++;
			i=j-1;
		}
	}
	cout<<ans<<"\n";
}