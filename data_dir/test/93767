#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define ll long long
#define sz(s) int(s.size())
#define ull unsigned long long
#define sc(s) scanf("%d",&s)
#define pr(s) printf("%d ",s)
#define all(s) s.begin(),s.end()

using namespace std;

const int MAXN = 1e5 + 256;
const char nxt = '\n';
inline void in (string Q) {Q += ".in";freopen (Q.c_str(), "r", stdin);}
inline void out (string Q) {Q += ".out";freopen (Q.c_str(), "w", stdout);}
inline void open_file (string Q) {in (Q);out (Q);}

set < pair < int, char > > query;
map < pair < int, char >, int > res;
int n, q;

int main () {
	#ifdef accepted
		in ("");
	#endif
	if (0)
		open_file ("");
	sc (n); sc (q);
	query.insert (mp (n + 1, 'U'));
	query.insert (mp (0, 'L'));
	for (; q--; ) {
		int x, y; sc (x); sc (y);
		char c; cin >> c;
		if (query.count (mp (x, 'L')) || query.count (mp (x, 'U'))) {
			cout << 0 << nxt;
			continue;
		}
		int ans;
		if (c == 'U') {
			auto it = query.upper_bound (mp (x, '0'));
			if (it->second == 'L')
				ans = (n + 1 - x) - (n + 1 - it->first);
			else
				ans = (n + 1 - x) - (n + 1 - it->first), ans += res[*it];
		}
		else {
			auto it = query.upper_bound (mp (x, '0'));
			it--;
			if (it->second == 'U')
				ans = x - it->first;
			else
				ans = (x - it->first), ans += res[*it];
		}
		res[mp (x, c)] = ans;
		query.insert (mp (x, c));
		cout << ans << nxt;
	}

    return 0;
}
/*
	6 5
	3 4 U
	6 1 L
	2 5 L
	1 6 U
	4 3 U
*/