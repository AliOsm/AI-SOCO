#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n;
const int MAXN = 200005;
int dist[MAXN], a[MAXN];
bool vis[MAXN];
priority_queue<pair<int, int> > q;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 1; i <= n; i++)
		cin >> a[i];

	q.push(make_pair(0, 1));
	while(!q.empty())
	{
		int d = -q.top().first, idx = q.top().second;
		q.pop();
		if(vis[idx])
			continue;
		vis[idx] = true;
		dist[idx] = d;
		if(idx > 1 && !vis[idx - 1])
			q.push(make_pair(-(d + 1), idx - 1));
		if(idx < n && !vis[idx + 1])
			q.push(make_pair(-(d + 1), idx + 1));
		if(!vis[a[idx]])
			q.push(make_pair(-(d + 1), a[idx]));
	}

	for(int i = 1; i <= n; i++)
		cout << dist[i] << " ";
	cout << "\n";

	return 0;
}
