#include <bits/stdc++.h>
using namespace std;
const long long mod = 100000000;
int32_t main() {
    ios_base :: sync_with_stdio(false);
    long long n1, n2, k1, k2;
    cin >> n1 >> n2 >> k1 >> k2;
    vector<vector<vector<vector<long long>>>> 
        dp(n1 + 1, vector<vector<vector<long long>>>
            (n2 + 1, vector<vector<long long>>(k1 + 1, vector<long long>(k2 + 1, 0))));
    for (long long i = 1; i <= min(n1, k1); ++i) {
        dp[i][0][i][0] = 1;
    }
    for (long long i = 0; i <= min(n2, k2); ++i) {
        dp[0][i][0][i] = 1;
    }
    for (long long i = 1; i <= n1; ++i) {
        for (long long j = 1; j <= n2; ++j) {
            for (long long u = 0; u <= min(j, k2); ++u) {
                dp[i][j][1][0] = (dp[i][j][1][0] + dp[i-1][j][0][u]) % mod;
            }
            for (long long y = 2; y <= min(i, k1); ++y) {
                dp[i][j][y][0] = (dp[i][j][y][0] + dp[i-1][j][y-1][0]) % mod;
            }
            
            for (long long y = 0; y <= min(i, k1); ++y) {
                dp[i][j][0][1] = (dp[i][j][0][1] + dp[i][j-1][y][0]) % mod;
            }
            for (long long u = 2; u <= min(j, k2); ++u) {
                dp[i][j][0][u] = (dp[i][j][0][u] + dp[i][j-1][0][u-1]) % mod;
            }
        }
    }
    long long ans = 0;
    for (long long i = 1; i <= k1; ++i) {
        ans = (ans + dp[n1][n2][i][0]) % mod;
    }
    for (long long i = 1; i <= k2; ++i) {
        ans = (ans + dp[n1][n2][0][i]) % mod;
    }
    cout << ans;
}