#define  _CRT_SECURE_NO_WARNINGS
#pragma comment (linker, "/STACK:526000000")

#include "bits/stdc++.h"

using namespace std;
typedef string::const_iterator State;
#define eps 1e-11L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL

#define MOD 998244353LL
#define seg_size 262144*2LL
#define pb push_back
#define mp make_pair
typedef long long ll;
#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))
#define ALL(x) (x).begin(),(x).end()

unsigned long xor128() {
	static unsigned long x = 123456789, y = 362436069, z = 521288629, w = time(NULL);
	unsigned long t = (x ^ (x << 11));
	x = y; y = z; z = w;
	return (w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)));
}

void init() {
	iostream::sync_with_stdio(false);
	cout << fixed << setprecision(20);
}

#define int ll

vector<tuple<int, int, int>> inputs;
void solve() {
	if (inputs.empty() == true) {
		for (int A = 1; A <= 20000; ++A) {
			for (int B = A; B <= 20000; B += A) {
				for (int C = B; C <= 20000; C += B) {
					inputs.push_back(make_tuple(A, B, C));
				}
			}
		}
	}
	int a, b, c;
	cin >> a >> b >> c;
	tuple<int, int, int> ans;
	int now_ans = 1e9;
	REP(i, inputs.size()) {
		int cost = abs(get<0>(inputs[i]) - a) + abs(get<1>(inputs[i]) - b) + abs(get<2>(inputs[i]) - c);
		if (now_ans > cost) {
			now_ans = cost;
			ans = inputs[i];
		}
	}
	cout << now_ans << endl;
	cout << get<0>(ans) << " " << get<1>(ans) << " " << get<2>(ans) << endl;
}

#undef int
int main() {
	init();
	int t;
	cin >> t;
	REP(tea,t)
	solve();
}