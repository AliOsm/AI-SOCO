#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

const int N=5e5+5;

ll x[N],y[N],bit[N];

vii v[N],a,b;

void upd(int i)
{
	while(i<N)
	{
		bit[i]++;
		i+=i&-i;
	}
}
ll query(int i)
{
	ll r=0;
	while(i)
	{
		r+=bit[i];
		i-=i&-i;
	}
	return r;
}
int main()
{ios_base::sync_with_stdio(false);
int n;
cin>>n;
rep(i,0,n-1)cin>>x[i]>>y[i],a.pb(x[i]),b.pb(y[i]);
sort(all(a));
sort(all(b));
rep(i,0,n-1)
{
	x[i]=lower_bound(all(a),x[i])-a.begin()+1;
	y[i]=lower_bound(all(b),y[i])-b.begin()+1;
	v[y[i]].pb(x[i]);
}
ll ans=0;

ren(i,N-1,0)
{
	if(v[i].size()==0)continue;
	sort(all(v[i]));
	int sz=v[i].size();
	rep(j,0,sz-1)
	{
		if(query(v[i][j])-query(v[i][j]-1)==0)
		upd(v[i][j]);
	}
	ll lst=0;
	rep(j,0,sz-1)
	{
		ans+=(query(v[i][j])-query(lst))*(query(N)-query(v[i][j]-1));
		lst=v[i][j];
	}
}
ol(ans);
return 0;
}


