#include<bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int> >
#define mp make_pair
 
const int INF = 1e9+7;
const int MAXN = 2e5 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;

int n,m;
set<pair <int , int > > edg;
set<int>used;
int ans;

void dfs(int v){
	vector<int>g;
	used.erase(v);
	for (int to : used) if (!edg.count(mp(v,to))) g.pb(to);
	for (int x: g) used.erase(x);
	for (int x : g) dfs(x);
}

void solve(){
	cin>>n>>m;
	for (int i=1; i<=m; i++){
		int x,y;
		cin>>x>>y;
		edg.insert(mp(x,y));
		edg.insert(mp(y,x));
	}
	for (int i=1; i<=n; i++) used.insert(i);
	
	for (int i=1; i<=n; i++){
		if (!used.count(i)) continue;
		ans++;
		dfs(i);
	}
	cout<<ans-1<<endl;
}
 
 
int main() {
ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
cout.setf(ios::fixed), cout.precision(20);
// freopen("inverse.in", "r", stdin);
// freopen("inverse.out", "w", stdout);
 
int t;
t =1;
 
	while (t > 0){
		t--;
		solve();
	}
 
return 0;
}
