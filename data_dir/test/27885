#include <bits/stdc++.h>
using namespace std;
#define oo 1000000010
const int N = 110;
int n , arr[N];
bool done[N];

int even , odd;

int dp[N][N][N][2];

int solve(int idx,int even,int odd,int pre){
	if(idx == n)
		return 0;
	if(dp[idx][even][odd][pre] != -1)
		return dp[idx][even][odd][pre];
	if(arr[idx] != 0){
		return dp[idx][even][odd][pre] = solve(idx + 1, even, odd , (arr[idx] & 1)) + ((idx != 0 && (arr[idx] & 1) != pre) ? 1 : 0);
	}
	dp[idx][even][odd][pre] = oo;
	if(even > 0)
		dp[idx][even][odd][pre] = min(dp[idx][even][odd][pre] , solve(idx + 1, even - 1 , odd , 0) + (idx != 0 && (pre == 1) ? 1 : 0));
	if(odd > 0)
		dp[idx][even][odd][pre] = min(dp[idx][even][odd][pre] , solve(idx + 1, even , odd - 1 , 1) + (idx != 0 && (pre == 0) ? 1 : 0));
	return dp[idx][even][odd][pre];
}

int main(){
	scanf("%d",&n);
	for(int i = 0 ; i< n;i++){
		scanf("%d",&arr[i]);
		done[arr[i]] = true;
	}
	for(int i = 1;i <= n;i++){
		if(done[i]) continue;
		if(i & 1)
			odd++;
		else
			even++;
	}
	memset(dp,-1,sizeof(dp));
	cout << solve(0 , even , odd ,0) << endl;
	return 0;
}