#include <cstdio>
#include <iostream>
#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <cmath>
#include <sstream>
#include <utility>
#include <ctime>
#include <memory.h>
#include <cctype>
#include <cstdlib>
#include <limits>

using namespace std;

#pragma comment (linker, "/STACK:64000000")

#define y0 qwertyuiop
#define y1 asdfghjkl
#define forn(j, n) for(j=1; j<=n; j++)
#define sz size()
#define pb push_back
#define fors(w, s) for(set <string> :: iterator w=s.begin(); w!=s.end(); w++)
#define pii pair<int, int>
#define uns unsigned
#define vi vector <int>
#define vvi vector <vi>
#define inf 2000000000
#define o 1000000000
#define ll long long int

int z[30]={0, 1, 2, 1, 4, 3, 2, 1, 5, 6, 2, 1, 8, 7, 5, 9, 8, 7, 3, 4, 7, 4, 2, 1, 10, 9, 3, 6, 11, 12};
int j, n, k, l, p, i, h, mn=inf, mx, sum, a[200500], pf[200500], x, q;
ll y;
bool b[100500];

void tg ()
{
	freopen ("output.txt","r",stdin); freopen ("input.txt","w",stdout);
	
}

int main()
{
	//tg (); return 0;
	//freopen ("input.txt","r",stdin); freopen ("output.txt","w",stdout);
    //freopen ("karlsson.in","r",stdin); freopen ("karlsson.out","w",stdout);
	scanf ("%d", &n);
	p=n;
	k=ceil(pow(double(n), 0.5));
	for (j=2; j<=k; j++)
	{
		if (b[j])
		{
			continue;
		}
		y=ll(j);
		x=1;
		while (y*ll(j)<=ll(n))
		{
			y*=ll(j);
			if (y<=k)
			{
				b[y]=1;
			}
			x++;
		}
		p-=x;
		q^=z[x];
	}
	if (p&1)
	{
		q^=1;
	}
	if (q)
	{
		printf ("Vasya\n");
	}
	else
	{
		printf ("Petya\n");
	}
	return 0;
}