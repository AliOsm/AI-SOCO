#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define nl '\n'

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

const int N=2e5+11;
const int M=1e3+11;
const int inf=1e9;
const ll INF=1e18;
const ll mod=1e9+9;
const double EPS=1e-9;

int x[N];

int main(){
  ios_base::sync_with_stdio(0);
  cin.tie(0),cout.tie(0);
  int n;
  cin>>n;
  for(int i=1;i<=n;i++){
    cin>>x[i];
  }
  sort(x+1,x+n+1);
  vector<int>vec;
  for(int i=1;i<=n;i++){
    if(x[i]!=x[i-1]){
      vec.pb(x[i]);
    }
  }
  int mn=0;
  for(int i=0;i<sz(vec);i++){
    int j=i;
    while(j<sz(vec)-1&&vec[j+1]-vec[i]<=2)j++;
    mn++;
    i=j;
  }
  cout<<mn<<" ";
  set<int>s;
  for(int i=1;i<=n;i++){
    if(s.find(x[i]-1)==s.end()){
      s.insert(x[i]-1);
    }
    else if(s.find(x[i])==s.end()){
      s.insert(x[i]);
    }
    else if(s.find(x[i]+1)==s.end()){
      s.insert(x[i]+1);
    }
  }
  cout<<sz(s);
}
