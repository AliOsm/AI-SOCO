#include <bits/stdc++.h>
using namespace std;
long long dp[50001][501],ans = 0;
vector<int> G[50001];
int N,K;

void dfs(int u,int p){
	dp[u][0] = 1;
	if(G[u].size() == 1 && p)
        return;
	for(int v : G[u])
		if(v != p)	{
			dfs(v,u);
			for(int k = 0;k <= K - 1;k++)
				ans = (ans + dp[u][k] * dp[v][K - k - 1]);
			for(int k = 1;k <= K;k++)
				dp[u][k] = (dp[u][k] + dp[v][k - 1]);
		}
}

int main(){
	int a,b;
	scanf("%d %d",&N,&K);
	for(int i = 1;i < N;i++){
		scanf("%d %d",&a,&b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	dfs(1,0);
	cout << ans << "\n";
	return 0;
}
