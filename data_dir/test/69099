#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#define int long long
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define all(x) x.begin(), x.end()
using namespace std;

int n;
int a[110];
int cnt[110];
char res[110];

signed main () {
  cin >> n;
  for (int i = 0; i < 110; i++) res[i] = '@';
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    cnt[a[i]] += 1;
  }
  vector <int> one, two, other;
  for (int i = 1; i <= 100; i++) {
    if (cnt[i] == 1) {
      one.push_back (i);
    } else if (cnt[i] == 2) {
      two.push_back (i);
    } else if (cnt[i] > 0) {
      other.push_back (i);
    }
  }
  if (one.size() & 1) {
    if (other.size() == 0) {
      cout << "NO" << endl;
    } else {
      vector <int> pos;
      for (int i = 0; i < one.size(); i++) {
        for (int j = 0; j < n; j++) {
          if (one[i] == a[j]) {
            pos.push_back (j);
            break;  
          }
        }
      }
      for (int i = 0; i < pos.size() / 2; i++) {
        res[pos[i]] = 'A';
      }
      for (int i = 0; i < n; i++) {
        if (a[i] == other[0]) {
          res[i] = 'A';
          break;
        }
      }
      for (int i = 0; i < n; i++) {
          if (res[i] == 'A') continue;
          res[i] = 'B';
        }
        cout << "YES" << endl;
        for (int i = 0; i < n; i++) cout << res[i]; cout << endl;
      }
  } else {
    if (one.size() > 0) {
      vector <int> pos;
      for (int i = 0; i < one.size(); i++) {
        for (int j = 0; j < n; j++) {
          if (one[i] == a[j]) {
            pos.push_back (j);
            break;  
          }
        }
      }
      for (int i = 0; i < pos.size() / 2; i++) {
        res[pos[i]] = 'A';
      }
      for (int i = 0; i < n; i++) {
        if (res[i] == 'A') continue;
        res[i] = 'B';
      }
      cout << "YES" << endl;
      for (int i = 0; i < n; i++) cout << res[i]; cout << endl;
    } else {
      cout << "YES" << endl;
      for (int i = 0; i < n; i++) cout << "A"; cout << endl;
    }
  }
  return 0;
}

