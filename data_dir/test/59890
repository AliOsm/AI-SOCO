#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <numeric>
#include <stack>
#include <deque>
#include <memory.h>
#include <string>
#include <unordered_map>

#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<ll>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%lld", &(a))
#pragma comment (linker, "/STACK:5000000000")
typedef long long ll;

const ll mod = 1000000007;
ll Inf = (ll)2e9;
ll LINF = (ll)1e18 + 1e17;
using namespace std;
vector<int> can(26);
vector<bool> used(26);
bool check(vector<int> &b, int idx, int last)
{
	if (idx == b.size())
		return true;
	for (int i = 0; i < b.size(); i++)
	{
		if (!used[i] && abs(b[i] - last) > 1)
		{
			used[i] = 1;
			bool flag = check(b, idx + 1, b[i]);
			used[i] = 0;
			if (flag == 1)
			{
				can[idx] = b[i];
				return true;
			}
		}
	}
	return false;
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int t;
	cin >> t;
	while (t--)
	{
		vector<int> cnt(26);
		vector<int> b;
		can.assign(26, -1);
		used.assign(26, false);
		string s;
		cin >> s;
		fori(i, s.length())
		{
			cnt[s[i] - 'a'] ++;
		}
		int a = 0;
		fori(i, 26)
		{
			if (cnt[i] > 0)
			{
				a++;
				b.push_back(i);
			}
		}
		if (a == 1)
		{
			cout << s << endl;
			continue;
		}
		if (a == 2)
		{
			bool flag = 1;
			fori(i, 25)
			{
				if (cnt[i] > 0 && cnt[i + 1] > 0)
				{
					flag = false;
					break;
				}
			}
			if (flag)
				cout << s << endl;
			else
				cout << "No answer" << endl;
			continue;
		}
		if (check(b, 0, -2))
		{
			for (int i = 0; i < 26; i++)
			{
				if (can[i] == -1)
					break;
				fori(j, cnt[can[i]])
				{
					cout << char('a' + can[i]);
				}
			}
			cout << endl;
		}
		else
			cout << "No answer" << endl;
		
	}
	

	return 0;
}