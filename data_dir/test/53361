#include <bits/stdc++.h>
using namespace std;

vector<int> A;
vector<int> B;
vector<int> v;
int cmp(int a,int b){
  return A[a] > A[b];
}
int dp[3010][3010];
pair<int,int> par[3010][3010];

bool set_MX(int &cur, int upd){
  if(upd > cur)
    cur = upd;
  return cur == upd;
}

int main() {
  int n,p,s;cin>>n>>p>>s;
  A.resize(n);
  B.resize(n);
  v.resize(n);

  for(int i = 0 ; i < n ;i++) cin>>A[i];
  for(int i = 0 ; i < n ;i++) cin>>B[i];
  for(int i = 0 ; i < n ;i++) v[i] = i;

  sort(v.begin(), v.end(), cmp);
  for(int i = 0; i < 3010; i++)for(int j = 0; j < 3010; j++) par[i][j] = make_pair(-1,-1);
  memset(dp, -1, sizeof(dp));

  dp[0][0] = 0;
  for(int y = 0; y <= s; y++)
    for(int pos = 0; pos < n; pos++){
      if(dp[y][pos] < 0) continue;

      //cout<< y << ' '<<pos<<' '<<dp[y][pos]<<endl;
      int x = min(p, pos - y);
      if(x != p){
        if(set_MX(dp[y][pos + 1], dp[y][pos] + A[v[pos]])){
          par[y][pos + 1] = make_pair(y, pos);
        }
      }

      if(y != s){
        if(set_MX(dp[y + 1][pos + 1], dp[y][pos] + B[v[pos]])){
          par[y + 1][pos + 1] = make_pair(y, pos);
        }
      }
      if(set_MX(dp[y][pos + 1], dp[y][pos])){
        par[y][pos + 1] = make_pair(y, pos);
      }
    }

  vector<int> a,b;
  cout<<dp[s][n]<<endl;
  while(s != -1){
    pair<int,int> t = par[s][n];
    if(t.first == -1) break;
    if(t.first == s){
      assert(t.second != n);
      if(dp[s][n] != dp[t.first][t.second]) a.push_back(v[t.second] + 1);
    }else{
      b.push_back(v[t.second] + 1);
    }
    s = t.first;
    n = t.second;
  }

  sort(a.begin(),a.end());
  sort(b.begin(), b.end());
  for(int z : a) cout<<z<<' ';cout<<endl;
  for(int z : b) cout<<z<<' ';cout<<endl;


  return 0;
}