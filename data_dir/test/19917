#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#define rank krevedka
#define left trulala
#define next ttrulala
#define rigth trulalo
#define ran rank
using namespace std;

# define M_PI		3.14159265358979323846	/* pi */

long long s[2][2];
int k[2];
int a[100500];

set<pair<int,int> > active[2];
set<pair<int,int> > passive[2];
int trololo;


void add(int z,int value,int id)
{
    k[z]++;
    s[z][0] += value;
    active[z].insert(make_pair(value,id));
    if(k[z]>trololo)
    {
        set<pair<int,int> >::iterator it = active[z].begin();
        passive[z].insert(*it);
        k[z]--;
        s[z][0]-=it->first;
        s[z][1]+=it->first;
        active[z].erase(it);
    }
}

void rm(int z,int value,int id)
{
    set<pair<int,int> >::iterator it = passive[z].find(make_pair(value,id));
    if(it!=passive[z].end())
    {
        s[z][1] -= value;
        passive[z].erase(it);
    }else
    {
        s[z][0] -=value;
        k[z]--;
        active[z].erase(active[z].find(make_pair(value,id)));
        if(passive[z].begin()!=passive[z].end())
        {
            it = passive[z].end();
            it--;
            s[z][1] -= it->first;
            s[z][0] += it->first;
            k[z]++;
            active[z].insert(*it);
            passive[z].erase(it);
        }
    }
}

int main()
{
    int n,len;
    scanf("%d%d",&n,&len);
    for(int i=0;i<n;i++)
        scanf("%d",a+i);
    scanf("%d",&trololo);
    for(int i=0;i<len;i++)
        if(a[i]>0)add(0,a[i],i);else add(1,-a[i],i);

    long long res = s[0][0] + s[1][1] + s[0][1] + s[1][0];
    res -= 2*min(s[0][1],s[1][1]);
    for(int i=len;i<n;i++)
    {
        if(a[i-len]>0)rm(0,a[i-len],i-len);else rm(1,-a[i-len],i-len);
        if(a[i]>0)add(0,a[i],i);else add(1,-a[i],i);
        long long cur = s[0][0] + s[1][1] + s[0][1] + s[1][0];
        cur -= 2*min(s[0][1],s[1][1]);
        if(res<cur) res = cur;
    }
    cout <<res<<endl;
    return 0;
}
