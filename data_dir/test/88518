#include <bits/stdc++.h>

using namespace std;
const int N = 2e5 + 9;
vector<int> adj[N] ;
int idxes[N] , dis[N] , cnt;
bool vis[N];
vector<int> ans;
void DFS(int s = 1){
vis[s] = 1;
ans.push_back(s);
dis[s] = 1;
for(int i=0;i<adj[s].size();++i){
    if(!vis[adj[s][i]]){
        DFS(adj[s][i]);
        dis[s]+=dis[adj[s][i]];
    }
}

}
void bfs(int s= 1){
	queue<int> q;
	int u, v;
	dis[s] = 0;
	q.push(s);
	while(!q.empty()){
		u = q.front();
		q.pop();
		for(int i = 0; i < adj[u].size(); i++){
			v = adj[u][i];
			if(dis[v] == -1){
				dis[v] = 1 + dis[u];
				q.push(v);
			}
		}
	}

}
int main()
{
    int n , k , m  , a ,u ;
    cin >> n >> m;
    for(int i=2;i<=n;++i)
    {
        cin >> a;
        adj[a].push_back(i);

    }
    for(int i=1;i<=n;++i)
    {
        if(adj[i].size())
            sort(adj[i].begin() , adj[i].end());
    }
    DFS();
    for(int i =0;i<ans.size();++i){
      //  cout << i << " ";
      idxes[ans[i]] = i;
    }
    //cout << dis[1] << endl;

        while(m--){
            cin >> u >> k;
            if(k > dis[u])
            cout << -1 << endl;
            else
                cout << ans[idxes[u] + k - 1] << endl;
        }

    return 0;
}
