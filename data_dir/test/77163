#include <bits/stdc++.h>
using namespace std;

int n, C[3008];
vector<int> G[3008];

/*
    
    2
   /\
  1 3


*/

vector<int> dfs(int v)
{
    vector<int> aux;
    for(int &u : G[v])
    {
        vector<int> a = dfs(u);
        
        if(a.empty())
            return vector<int>{};
        
        for(int &w : a)
           aux.push_back(w);
    }
    if(aux.size() < C[v]) return vector<int>{};
    vector<int> aux_c;
    if(C[v] == 0) aux_c.push_back(v);
    for(int &w : aux)
    {
        if(aux_c.size() == C[v])
            aux_c.push_back(v);
        aux_c.push_back(w);
    }
    if(C[v] == aux_c.size()) aux_c.push_back(v);
    return aux_c;
}

int main()
{
    cin >> n;
    int root;
    for(int i = 0; i < n; i++)
    {
        int p, c;
        cin >> p >> c; p--;
        if(p < 0) root = i;
        else G[p].push_back(i);
        C[i] = c;
    }

    vector<int> ans = dfs(root);

    if(ans.empty()) return puts("No");
    
    vector<int> val(n);
    int cnt = 0;
    
    for(int i = 0; i < ans.size(); i++)
        val[ans[i]] = ++cnt;

    puts("YES");
    for(int &w : val)
        cout << w << ' ';
    puts("");
    

    return 0;
}