// In The Name Of God :
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
using namespace std ;
using namespace __gnu_pbds;
#define X first 
#define Y second
#define int long long 
typedef long long ll ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
typedef pair < int , int > pii ; 
typedef pair < pii , int > pii_i ;
typedef pair < pii , pii > pii_ii ;
#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%I64d"
const int maxn = 1e6 + 10 ;
const int maxL = 21 ;
//const int inf = 1e13 ;
const int mod = 1e9+7 ; 
int n , a , b , cnt , dp [ maxn ] ;
bool mark [ maxn ] ;
char ans [ maxn ] , ch = 'A' ;
vector < int > vc [ maxn ] ; 

void dfs0 ( int x )
{
  mark [ x ] = 1 ;
  dp [ x ] = 0 ;
  for ( int i = 0 ; i < vc [ x ] . size ( ) ; i ++ )
    if ( mark [ vc [ x ] [ i ] ] == 0 )
      if ( ans [ vc [ x ] [ i ] ] == '#' )
	dfs0 ( vc [ x ] [ i ] ) ,
	  dp [ x ] += dp [ vc [ x ] [ i ] ] ;
  dp [ x ] ++ ;
}
int nmdnm ;

int dfs1 ( int x , int siz )
{
  mark [ x ] = 1 ;
  for ( int i = 0 ; i < vc [ x ] . size ( ) ; i ++ )
    if ( mark [ vc [ x ] [ i ] ] == 0 )
      if ( ans [ vc [ x ] [ i ] ] == '#' )
	if ( nmdnm == -1 )
	  if ( dp [ vc [ x ] [ i ] ] * 2 > siz )
	    nmdnm = dfs1 ( vc [ x ] [ i ] , siz ) ;
	  else
	    nmdnm = 1 , dfs1 ( vc [ x ] [ i ] , siz ) , nmdnm = -1 ;
	else
	  dfs1 ( vc [ x ] [ i ] , siz ) ;
  if ( nmdnm == -1 )
    nmdnm = x ;
  return nmdnm ; 
} 

main ( )
{
  fast ;
  memset ( ans , '#' , sizeof ans ) ;
  cin >> n ;
  for ( int i = 1 ; i < n ; i ++ )
    cin >> a >> b , a -- , b -- ,
      vc [ a ] . push_back ( b ) ,
      vc [ b ] . push_back ( a ) ;
  cnt = n ;
  int v = 0 ; 
  while ( cnt > 0 )
    {
      //cout << "SALAM:D ";
      memset ( mark , 0 , sizeof mark ) ; 
      for ( int i = 0 ; i < n ; i ++ )
	if ( ans [ i ] == '#' )
	  if ( mark [ i ] == 0 )
	    dfs0 ( i ) ;
      memset ( mark , 0 , sizeof mark ) ; 
      for ( int i = 0 ; i < n ; i ++ )
	if ( ans [ i ] == '#' )
	  if ( mark [ i ] == 0 )
	    nmdnm = -1 ,
	      v = dfs1 ( i , dp [ i ] ) ,
	      //cerr << v << ' ' ,
	      ans [ v ] = ch ,
	      cnt -- ; 
      ch ++ ;
      //cerr << endl ;
    }
  for ( int i = 0 ; i < n ; i ++ )
    cout << ans [ i ] << ' ' ; 
} 
