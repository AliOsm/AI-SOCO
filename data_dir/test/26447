#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;

//#include <ext/pb_ds/tree_policy.hpp>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/rope>
//using namespace __gnu_pbds;
//using namespace __gnu_cxx;
//
//template<class T> using Tree = tree<T, null_type, less<T>, rb_t_tag,t_order_statistics_node_update>;
/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______      
 * |\  \|\  \  |\  ___ \  |\  ___ \     
 * \ \  \/  /|_\ \   __/| \ \   __/|    
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__  
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \ 
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */
const long long mod = 1000000007;
//const long long mod = 998244353;

// watch this
//using ll = long long;
//typedef long long LL;
#define ll long long
#undef ll

const int mxN = 500010;

int mn[mxN];
int cnt[mxN];

int main(int argc, char** argv) {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
#endif

	int N, c;
	cin >> N >> c;
	vector<int> a(N);
	for (int i = 0; i < N; i++)
		cin >> a[i];
	int tot = count(begin(a), end(a), c);
	int res = tot;
	int cf = 0;
//	cerr << tot << '\n';
	for (int i = 0; i < N; i++) {
		if (a[i] == c) {
			cf++;
			continue;
		}
		cnt[a[i]]++;
		mn[a[i]] = min(mn[a[i]], cnt[a[i]] - 1 - cf);
		int cur = cnt[a[i]] - cf;
//		cerr << i << ' ' << a[i] << ' ' << cur << ' ' << mn[a[i]] << ' '
//				<< (tot - cf) << '\n';
		res = max(res, cur - mn[a[i]] + tot);
	}
	cout << res << '\n';
	return 0;
}
