#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <unordered_set>
#include <cctype>
#include <cassert>

using namespace std;

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

const int nax = 205 * 205;

li sums[nax];

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("angle2.in", "r", stdin);
	//freopen("angle2.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int t;
	cin >> t;

	while (t--) {
		li a, b, q;
		cin >> a >> b >> q;
		li cnt = 0;
		for (int i = 0; i <= a * b; i++) {
			if ((i % a) % b != (i % b) % a) {
				cnt++;
			}
			sums[i] = cnt;
		}

		auto get_ans = [&](li x) {
			if (x == 0) return 0LL;
			li tot = x / (a * b);
			li rem = x % (a * b);
			li res = sums[a * b] * tot;
			res += sums[rem];
			return res;
		};

		while (q--) {
			li l, r;
			cin >> l >> r;
			cout << get_ans(r) - get_ans(l - 1) << ' ';
		}

		cout << '\n';
	}
	return 0;
}