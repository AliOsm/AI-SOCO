//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <stdlib.h>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int, int> ii;

void fastIO() {
	std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
}

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define FORE(i,c) for(auto i = (c).begin(); i != (c).end(); i++)
#define pb push_back
#define all(obj) obj.begin(), obj.end()
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)

#define fst first
#define snd second

template<typename T, typename U> inline void mnze(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void mxze(T &x, U y) { if(x < y) x = y; }

void _scan( int &x ) { scanf("%d",&x); }
void _scan( long long &x ) { scanf("%lld",&x); }
void _scan( double &x ) { scanf("%lf",&x); }
void _scan( char &x ) { scanf(" %c",&x); }
void _scan( char *x ) { scanf("%s",x); }
void scan() {}
template<typename T, typename... U>
void scan( T& head, U&... tail ) { _scan(head); scan(tail...);}

template<typename T> void _dbg(const char* sdbg, T h) { cerr<<sdbg<<"="<<h<<"\n"; }
template<typename T, typename... U> void _dbg(const char* sdbg, T h, U... t) {
	while(*sdbg != ',')cerr<<*sdbg++;
	cerr<<"="<<h<<","; _dbg(sdbg+1, t...);
}

#ifdef LOCAL
#define debug(...) _dbg(#__VA_ARGS__, __VA_ARGS__)
#define debugv(x) {{cerr <<#x <<" = "; FORE(_i, (x)) cerr <<*_i <<", "; cerr <<"\n"; }}
#define debuga(x, sz) {{cerr <<#x <<" = "; FOR(_i, 0, sz) cerr << x[_i] <<", "; cerr <<"\n"; }}
#else
#define debug(...) (__VA_ARGS__)
#define debugv(x)
#define debuga(x, sz)
#define cerr if(0)cout
#endif

///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

const int MAXN = 703;
int _gcd(int a, int b){
	if(!b) return a;
	return _gcd(b, a%b);
}

int n, a[MAXN];
int gcd[MAXN][MAXN];

bool dpr[MAXN][MAXN];
bool dpl[MAXN][MAXN];

int main(){
	//printf("700\n");
	//FOR(i,0,700) printf("%d ",i+2);
	//return 0;
	scan(n);
	FOR(i,1,n+1) scan(a[i]);
	FOR(i,0,n+2) FOR(j,0,n+2) gcd[i][j] = _gcd(a[i], a[j]);
	FOR(i,1,n+2) dpl[i][i-1] = dpr[i][i-1] = true;
	FOR(l,1,n+1) FOR(i,1,n+1){
		int j = i+l-1;
		if(j > n) break;
		for(int k=i; k<=j && !dpl[i][j]; k++){
			dpl[i][j] |= (dpr[i][k-1] && dpl[k+1][j] && (gcd[k][i-1]>1));
		}
		for(int k=i; k<=j && !dpr[i][j]; k++){
			dpr[i][j] |= (dpr[i][k-1] && dpl[k+1][j] && (gcd[k][j+1]>1));
		}
	}
	printf(dpl[1][n] ? "Yes\n" : "No\n");

}
