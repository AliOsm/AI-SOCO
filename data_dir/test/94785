#include <stdio.h>
#include <math.h>
#include <string.h>

#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#include <string>

typedef unsigned int uint;
typedef unsigned char uchar;

#ifdef _MSC_VER
typedef unsigned __int64 uint64;
#else
typedef unsigned long long uint64;
#endif

#define EPS 1E-6

using namespace std;

string mask;
uint a[1000],
     pr,
     l,
     r,
     m;

bool dfs(uint ci)
{
    if (ci == m)
        return true;

    for (uint j = 0; j < 10; ++j)
    {
        if (j != pr - 1 && mask[j] == '1' && r + j + 1 > l)
        {
            pr = j + 1;
            a[ci] = pr;
            r += pr;
            swap(l, r);

            if (dfs(ci + 1))
                return true;

            swap(l, r);
            r -= a[ci];
            pr = (ci == 0 ? 0 : a[ci - 1]);
        }
    }

    return false;
}

int main()
{
    cin >> mask >> m;

    bool ok = dfs(0);

    if (ok)
    {
        cout << "YES\n";
        cout << a[0];
        for (uint i = 1; i < m; ++i)
            cout << ' ' << a[i];
        cout << endl;
    }
    else
        cout << "NO\n";
    return 0;
}
