#include <bits/stdc++.h>
#define MAX (ll)(1e5+5)
#define MOD (ll)(1e9 + 7)
#define INF (ll)(1e17 + 5)
#define PI (double)(3.14159265)

using namespace std;
using ll = long long;

ll co[MAX][3], dp[MAX][4][4], ar[MAX], cc = 0, par[MAX][4][4];
vector <ll> gr[MAX];

void dfs (ll node, ll par) {
	ar[++cc] = node;
	for (ll x : gr[node]) {
		if (x != par) {
			dfs (x, node);
		}
	}
}

int main () {
	ios_base :: sync_with_stdio (false);
	cin.tie (nullptr);
	ll n;
	cin >> n;
	for (ll j = 0; j < 3; j++) {
		for (ll i = 1; i <= n; i++) {
			cin >> co[i][j];
		}
	}
	bool fl = 1;
	for (ll i = 1; i < n; i++) {
		ll u, v;
		cin >> u >> v;
		gr[u].push_back (v);
		gr[v].push_back (u);
		if (gr[u].size () > 2 || gr[v].size () > 2) {
			fl = 0;
		}
	}
	if (!fl) {
		cout << "-1\n";
		return 0;
	}
	ll ver = 0;
	for (ll i = 1; i <= n; i++) {
		if (gr[i].size () == 1) {
			ver = i;
			break;
		}
	}
	dfs (ver, 0);
	for (ll i = 1; i <= n; i++) {
		for (ll j = 0; j < 4; j++) {
			for (ll k = 0; k < 4; k++) {
				dp[i][j][k] = INF;
			}
		}
	}
	for (ll i = 0; i < n; i++) {
		for (ll j = 0; j < 4; j++) {
			for (ll k = 0; k < 4; k++)  {
				for (ll c = 1; c < 4; c++) {
					if (c != j && c != k) {
						if (dp[i + 1][k][c] > dp[i][j][k] + co[ar[i + 1]][c - 1]) {
							par[i + 1][k][c] = j;
							dp[i + 1][k][c] = dp[i][j][k] + co[ar[i + 1]][c  - 1];
						}
					}
				}
			}
		}
	}
	ll co = INF, pc, cc;
	for (ll i = 1; i < 4; i++) {
		for (ll j = 1; j < 4; j++) {
			if (dp[n][i][j] < co) {
				pc = i, cc = j;
				co = dp[n][i][j];
			}
		}
	}
	ll nn = n;
	ll col[n + 1];
	cout << co << "\n";
	while (pc && nn) {
		col[ar[nn--]] = cc;
		ll xx = par[n][pc][cc];
		cc = pc;
		pc = xx;
	}
	for (ll i = 1; i <= n; i++) {
		cout << col[i] << " ";
	}
	cout << "\n";
}
		
