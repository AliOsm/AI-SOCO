/*
ID: xildar91
PROG: humble
LANG: C++11
*/
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()

template<typename T,typename T1>
void prin(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}
/*
template<typename T,typename T1>
void prin(set<pair<T,T1> >& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout <<it->fi <<" "<<it->se<<"\n";
    }
}*/
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
       // else
        //    cout <<"\n";
    }
}
template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}

long double s_triangle(long double x1,long double y1,long double x2,long double y2,long double x3,long double y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
bool overflow(ll a,ll b)
{
    if(a*b/b!=a)
        return true;
    return false;
}



#define x1 gfgs
#define y1 asd
#define rank asdsad
bool debug=0;
const int maxn=1e5+100;
ll mod=1e9+7;
vector<int> g[maxn];

vector<int> aa[maxn];
vector<int> up[maxn];
int tin[maxn],tout[maxn],timer;
int l;
vector<int> res[maxn][20];
void dfs(int v,int p)
{
    tin[v]=++timer;
    up[v][0]=p;
  //  prin(a[v]);
  //  prin(a[p]);
    if(v!=p)
    {
        merge(aa[v].begin(),aa[v].end(),aa[p].begin(),aa[p].end(),back_inserter(res[v][0]));
        res[v][0].resize(min(10,distance(res[v][0].begin(),unique(res[v][0].begin(),res[v][0].end()))));
    }
    else
    {
        res[v][0]=aa[v];
    }


    for(int i=1;i<=l;i++)
    {
        up[v][i]=up[up[v][i-1]][i-1];
        merge(res[up[v][i-1]][i-1].begin(),res[up[v][i-1]][i-1].end(),res[v][i-1].begin(),res[v][i-1].end(),back_inserter(res[v][i]));
        res[v][i].resize(min(10,distance(res[v][i].begin(),unique(res[v][i].begin(),res[v][i].end()))));
    }

    for(int to:g[v])
    {
        if(to!=p)
        {
            dfs(to,v);
        }
    }
    tout[v]=timer;
}
inline bool upper(int a,int b)
{
    return tin[a]<=tin[b] && tout[a]>=tout[b];
}
int lca(int a,int b)
{
    if(upper(a,b))return a;
    if(upper(b,a))return b;
    for(int i=l;i>=0;i--)
    {
        if(!upper(up[a][i],b))
        {
            a=up[a][i];
        }
    }
    return up[a][0];
}
void solve()
{
   int n,m,q;
   scanf("%d %d %d",&n,&m,&q);
   //cin >> n >> m >> q;
   for(int i=0;i<n-1;i++)
    {
        int a,b;
        scanf("%d %d",&a,&b);
        g[a].pb(b);
        g[b].pb(a);
    }
    for(int i=0;i<m;i++)
    {
        int x;
        scanf("%d",&x);
        aa[x].pb(i+1);
    }
    for(int i=1;i<=n;i++)
    {
        sort(aa[i].begin(),aa[i].end());
        aa[i].resize(min(10,int(aa[i].sz)));
    }
    while((1<<l)<=n)l++;
    for(int i=1;i<=n;i++)
    {
        up[i].resize(l+2);
    }
    dfs(1,1);
    for(int j=0;j<q;j++)
    {
        int a,b,k;
        scanf("%d %d %d",&a,&b,&k);
        if(a==b)
        {
            vector<int> ans=aa[a];
            ans.resize(min(k,int(ans.sz)));
            printf("%d ",ans.sz);
            //cout << ans.sz<<" ";
            for(int v:ans)
            {
                printf("%d ",v);
            }
            printf("\n");
            continue;
        }
        int lc=lca(a,b);
        vector<int> ans;
       // cout << lc <<endl;
        for(int i=l;i>=0;i--)
        {
           // cout << i<< " "<<up[a][i]<<" "<<a<<endl;
            if(up[a][i]==lc)
            {
                vector<int> c;
                merge(ans.begin(),ans.end(),res[a][i].begin(),res[a][i].end(),back_inserter(c));
                swap(c,ans);

             //   cout << a<<" "<<i <<": " <<endl;
               // prin(ans);
                break;
            }
            else if(!upper(up[a][i],lc))
            {
                vector<int> c;
                merge(ans.begin(),ans.end(),res[a][i].begin(),res[a][i].end(),back_inserter(c));
                swap(c,ans);
             //   cout << a<<" "<<i <<": " <<endl;
            //    prin(ans);
                a=up[a][i];
            }

        }
        ans.resize(min(k,distance(ans.begin(),unique(ans.begin(),ans.end()))));
        for(int i=l;i>=0;i--)
        {
           // cout << i<< " "<<up[b][i]<<" "<<b<<endl;
            if(up[b][i]==lc)
            {
                vector<int> c;
                merge(ans.begin(),ans.end(),res[b][i].begin(),res[b][i].end(),back_inserter(c));
                swap(c,ans);

             //   cout << b<<" "<<i <<": " <<endl;
             //   prin(ans);
                break;
            }
            else if(!upper(up[b][i],lc))
            {
                vector<int> c;
                merge(ans.begin(),ans.end(),res[b][i].begin(),res[b][i].end(),back_inserter(c));
                swap(c,ans);
              //  cout << b<<" "<<i <<": " <<endl;
             //   prin(ans);
                b=up[b][i];
            }

        }
        ans.resize(min(k,distance(ans.begin(),unique(ans.begin(),ans.end()))));
            printf("%d ",ans.sz);
            //cout << ans.sz<<" ";
            for(int v:ans)
            {
                printf("%d ",v);
            }
            printf("\n");
      //  cout << endl;
       // cout << lc<<endl;
    }
}








#define FILE "bridges"
int main()
{

    //    freopen("hh.txt","r",stdin);
     //   freopen("output.txt","w",stdout);

       //  freopen(FILE".in","r",stdin);
       //  freopen(FILE".out","w",stdout);
       if(!debug)
       {
            ios_base::sync_with_stdio(0);
            cin.tie(0);
           cout.tie(0);
       }

        int t=1;
         while(t--)
            solve();
        return 0;
}
