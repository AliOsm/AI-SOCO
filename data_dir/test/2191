#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<ll, ll>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const int MOD1 = 1045009799;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int N = 200 * 1000 + 13;
const int M = 1000 * 1000 + 13;
const int BASE = 1001977;

int n, m, sum;
vector<pt> g[N], e[N];
vector<pt> oc[M];
char used[M];


bool read(){
	if(scanf("%d%d", &n, &m) != 2)
		return 0;
	int t;
	sum = 0;
	
	forn(i, M)
		oc[i] = vector<pt>();
	
	forn(i, n){
		scanf("%d", &t);
		g[i].resize(t);
		
		forn(j, t){
			scanf("%d", &g[i][j].x);
			g[i][j].x--;	
		}
		sort(all(g[i]));
		
		int pos = 0, cnt = 0;
		forn(j, t){
			if (!j || g[i][j].x == g[i][j - 1].x)
				cnt++;
			else{
				g[i][pos++] = mp(cnt, g[i][j - 1].x);
				cnt = 1;
			}
		}
		
		g[i][pos++] = mp(cnt, g[i][t - 1].x);
		g[i].resize(pos);
		sort(all(g[i]));

		forn(j, pos)
			oc[g[i][j].y].pb(mp(i + 1, g[i][j].x));

		sum += t;
	}
	return 1;
}


void solve(){
	li h1[M], h2[M];
	memset(h1, 0, sizeof(h1));
	memset(h2, 0, sizeof(h2));
	
	forn(i, M)
		forn(j, sz(oc[i])){
			h1[i] = (h1[i] * BASE % MOD1 + (li)oc[i][j].x) % MOD1;
			h1[i] = (h1[i] * BASE % MOD1 + (li)oc[i][j].y) % MOD1;
			h2[i] = (h2[i] * BASE % MOD + (li)oc[i][j].x) % MOD;
			h2[i] = (h2[i] * BASE % MOD + (li)oc[i][j].y) % MOD;
		}
	
	map<pair<li, li>, li> ans;
	forn(i, m)
		if (ans.find(mp(h1[i], h2[i])) != ans.end())
			ans[mp(h1[i], h2[i])]++;
		else
			ans[mp(h1[i], h2[i])] = 1;
			
	li fact[M];
	fact[0] = 1;
	fore(i, 1, M)
		fact[i] = fact[i - 1] * i % MOD;

	li res = 1;

	for (auto it : ans)
		res = (fact[it.y] * res) % MOD;

	printf("%lld\n", res);
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}