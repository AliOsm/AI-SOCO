#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int N = 100010;

inline int in() {int x; scanf("%d",&x); return x;}
inline ll lin() {ll x; scanf("%I64d",&x); return x;}

int n, l , r;
int A[N], B[N], C[N], D[N];
pair < int , int > P[N];

int Solve(){
    int low = l, high = r, mid, now;
    for(int i = 1; i <= n; i++){
        B[i] = low;
        C[i] = B[i] - A[i];
    }
    for(int i = 2; i <= n; i++){
        if(C[i] <= C[i - 1]){
            C[i] = C[i - 1] + 1;
        }
    }

    for(int i = 1; i <= n; i++){
        B[P[i].se] = C[i] + A[i];
    }

    for(int i = 1; i <= n; i++){
        if(B[i] < l || B[i] > r) return -1;
    }

    return 1;
}

int main(){
    n = in(); l = in(); r = in();
    for(int i = 1; i <= n; i++){
        A[i] = in();
    }
    for(int i = 1; i <= n; i++){
        P[i].fs = in();
        P[i].se = i;
    }
    sort(P + 1, P + n + 1);
    for(int i = 1; i <= n; i++){
        D[i] = A[P[i].se];
    }
    for(int i = 1; i <= n; i++) A[i] = D[i];

    int ans = Solve();

    if(ans == -1) puts("-1");
    else {
        for(int i = 1; i <= n; i++){
            printf("%d ",B[i]);
        }
        puts("");
    }

    return 0;
}
