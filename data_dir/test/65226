#include <bits/stdc++.h>
using namespace std;

struct Node{
	int vx, vy;
};

const int N = 2e5 + 10;

Node c[N];
int x[N];
int a, b;

long long calc(int vx, int vy){
	return 1LL * a * vx - vy;
}

bool cmp(const Node& x, const Node& y){
	if (calc(x.vx, x.vy) == calc(y.vx, y.vy)) return x.vx < y.vx;
	return calc(x.vx, x.vy) < calc(y.vx, y.vy);
}

int main(){
	int n, cnt;
	long long ans;
	scanf("%d %d %d",&n,&a,&b);
	for (int i = 1; i <= n; i++) scanf("%d %d %d",&x[i],&c[i].vx,&c[i].vy);
	sort(c + 1, c + n + 1, cmp);
	ans = 0; cnt = 1;
	for (int i = 2; i <= n; i++){
		if (calc(c[i].vx, c[i].vy) != calc(c[i - 1].vx, c[i - 1].vy)){
			ans += 1LL * cnt * (cnt - 1) / 2;
			cnt = 1;
		}
		else cnt++;
	}
	ans += 1LL * cnt * (cnt - 1) / 2;
	cnt = 1;
	for (int i = 2; i <= n; i++){
		if (c[i].vx == c[i - 1].vx && c[i].vy == c[i - 1].vy) cnt++;
		else{
			ans -= 1LL * cnt * (cnt - 1) / 2;
			cnt = 1;
		}
	}
	ans -= 1LL * cnt * (cnt - 1) / 2;
	printf("%I64d\n", ans * 2);
	return 0;
}