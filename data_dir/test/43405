#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <string>
#include <cmath>
using namespace std;
int n,m,de[200010],f[200010],fa[200010],topt,ma,lc;
struct tree {int fr,to;}a[200010],ans[200010];
int getf(int x)
{
	if (fa[x]==x)  return x;
	fa[x]=getf(fa[x]);
return fa[x];
}
void comb(int x,int y) 
{
	if (getf(x)==getf(y)) return;
	fa[getf(x)]=getf(y);
}
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;i++) 
	 scanf("%d%d",&a[i].fr,&a[i].to),de[a[i].fr]++,de[a[i].to]++;
	for (int i=1;i<=n;i++)
	{
	 if (de[i]>ma) {ma=de[i]; lc=i;}
	 fa[i]=i;
	}
	for (int i=1;i<=m;i++)
	if (a[i].fr==lc || a[i].to==lc)
	{
		comb(a[i].fr,a[i].to);
		f[i]=1;		
	}
	for (int i=1;i<=m;i++)
	 if (!f[i] && getf(a[i].fr)!=getf(a[i].to))
	 {
	 	comb(a[i].fr,a[i].to); f[i]=1;
	 }
	for (int i=1;i<=m;i++) 
	if (f[i]) printf("%d %d\n",a[i].fr,a[i].to);
return 0;
}