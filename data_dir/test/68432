#include<bits/stdc++.h>
#define ll long long
#define MOD 1000000007
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define pi acos(-1.0)
#define MAX 1000001
#define mem(x) memset(x,0,sizeof(x))
ll tree[1<<20];
ll val[1<<18];
ll n,m,i,j;
void build(ll v,ll lo ,ll hi,ll l)
{
    if(lo==hi)
       {tree[v]=val[lo]; return;}
    ll mid=(lo+hi)/2;
    build(2*v,lo,mid,l+1);
    build(2*v+1,mid+1,hi,l+1);
    if((n-l)&1) {
        tree[v] = tree[2*v] | tree[2*v+1];
    } else {
        tree[v] = tree[2*v] ^ tree[2*v+1];
    }
}
void update(ll v,ll lo,ll hi,ll l,ll val,ll ind)
{
    if(lo==hi)
    {tree[v]=val;return;}
    if((lo+hi)/2>=ind)
      update(2*v,lo,(lo+hi)/2,l+1,val,ind);
    if((lo+hi)/2<ind)
      update(2*v+1,(lo+hi)/2+1,hi,l+1,val,ind);
    if((n-l)&1) {
        tree[v] = tree[2*v] | tree[2*v+1];
    } else {
        tree[v] = tree[2*v] ^ tree[2*v+1];
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin>>n>>m;
    for(j=1;j<=(1<<n);j++)
        cin>>val[j];
     build(1,1,(1<<n),0);
     for(j=0;j<m;j++)
     {
         ll x,y;
         cin>>x>>y;
         update(1,1,(1<<n),0,y,x);
         cout<<tree[1]<<endl;
     }
    return 0;
}
