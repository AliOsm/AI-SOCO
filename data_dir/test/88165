#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define size(x) ((int) x.size())
#define abs(x) ((x) < 0 ? -(x) : (x))
#define sqr(x) ((x) * (x))
#define max3(a, b, c) max(max((a), (b)), (c))

const int maxn = 1000005;
const int logn = 17;
const int inf = (int) 1e9;
const long long mod = (int) 1e9 + 7;
const long long l_inf = (long long) 4e12;
const long double pi = acosl(-1.0);
const long double eps = 1e-12;

long long p, k;
int to[maxn];
bool used[maxn];

long long binpow(long long a, long long b) {
	if (b == 0)
		return 1;
	if (b & 1ll)
		return (binpow(a, b ^ 1) * a) % mod;
	a = binpow(a, b >> 1);
	return (a * a) % mod;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.precision(15);
	cout << fixed;
	srand(566);

	cin >> p >> k;

	if (k == 0) {
		cout << binpow(p, p - 1);
		exit(0);
	}
	if (k == 1) {
		cout << binpow(p, p);
		exit(0);
	}

	long long ans = 1;
	for (int i = 1; i < p; i++)
		to[(k * i) % p] = i;

	for (int i = 1; i < p; i++) {
		if (used[i])
			continue;
		int sz = 0, v = i;
		while (!used[v]) {
			sz++;
			used[v] = true;
			v = to[v];
		}
		ans = (ans * p) % mod;
	}

	cout << ans;

//	for (int i = 0; i < p; i++) {
//		cout << "f(" << (i * k) % p << ") -> " << k << " * f(" << i << ")\n";
//	}

	return 0;
}
