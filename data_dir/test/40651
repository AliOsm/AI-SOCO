#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

const int maxN = 1e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

vector<ii> vc;
ll dst[100][100];

ll manh(ii one, ii two) {
	return abs(one.fi - two.fi) + abs(one.se - two.se);
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	ll x0, y0, ax, ay, bx, by, X, Y, t;
	cin >> x0 >> y0 >> ax >> ay >> bx >> by >> X >> Y >> t;

	const ll lm = 3e16;
	while(vc.empty() || max(x0, y0) <= lm) {
		vc.push_back(ii(x0, y0));
		ll newx = ax * x0 + bx, newy = ay * y0 + by;
		x0 = newx, y0 = newy;
	}

	int n = vc.size();
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
			dst[i][j] = manh(vc[i], vc[j]);

	int ans = 0;
	for(int i = 0; i < n; i++) 
		for(int j = 0; j <= i; j++) 
			for(int k = i; k < n; k++) 
				if(manh(ii(X, Y), vc[i]) + 
				min(dst[j][i] * 2 + dst[k][i], dst[k][i] * 2 + dst[j][i]) <= t)
					ans = max(ans, k - j + 1);
	cout << ans << '\n';
}
