#include<iostream>
#include<algorithm>
#include<string>
#include<vector>
#include<fstream>
#include<map>
#include<set>
#include<iomanip>
#include<cmath>
#include<numeric>
#include<queue>
#include<cstring>
#include<stack>
using namespace std;
int vis[10010];
int n, m, ans = 0;
void bfs()
{
	queue<pair<int, int>>q;
	pair<int, int>p;
	vis[n] = 1;
	q.push(make_pair(n,0));
	while (1)
	{
		p = q.front();
		q.pop();
		if (p.first == m)
		{
			ans = p.second;
			return;
		}
		if (p.first - 1 > 0 && !vis[p.first - 1])
		{
			q.push(make_pair(p.first - 1, p.second + 1));
			vis[p.first - 1] = 1;
		}
		if (p.first * 2 <= 10000 && !vis[p.first * 2])
		{
			q.push(make_pair(p.first * 2, p.second + 1));
			vis[2 * p.first] = 1;
		}
	}

}
int main()
{
	cin >> n >> m;
	bfs();
	cout << ans << endl;
	return 0;
}