#include <iostream>
#include <cstdio>
#include <map>
#include <cstring>
#include <string>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <set>

using namespace std;

int n;
long long fen[200000];
long long fen2[200000];

void up(int v, long long val) {
    while (v <= n) {
        fen[v] += val;
        v = (v | (v + 1));
    } 
}

long long get(int v) {
    long long val = 0;
    while (v > 0) {
        val += fen[v];
        v = (v & (v + 1)) - 1;
    }
    return val;
}

void up2(int v, long long val) {
    while (v <= n) {
        fen2[v] += val;
        v = (v | (v + 1));
    } 
}

long long get2(int v) {
    long long val = 0;
    while (v > 0) {
        val += fen2[v];
        v = (v & (v + 1)) - 1;
    }
    return val;
}

int main() {
    ios_base::sync_with_stdio(false);
    cout << fixed << setprecision(15);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);    
    cin >> n;
    long long N = n;
    long double ans = 0;    
    long double sum = N * (N + 1) / 2;
    for (int i = 0; i < n; i++) {
        int p;
        cin >> p;
        long long q = get(p);
        long long sk = get2(p);

        ans += q * (n - i) / sum / 2.;

//        cout << q << "     " << sum << endl;

        q = get(n) - q;
        sk = get2(n) - sk;

   //     cout << i << " " << sk << " " << q << endl;

        ans += sk - q * (n - i) / sum / 2.;

        up(p, i + 1);
        up2(p, 1);
    }
    cout << (double)ans << endl;
	return 0;
}