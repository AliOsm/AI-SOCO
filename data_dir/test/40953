#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
#include <time.h>
using namespace std; 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 123 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
#define y1 asdf
#define y2 asdqwer
const int N = 5000;
int mod = 1e9 + 7;
int fac[N], ofac[N];
int d[N];
int n;
int st(int a, int x = mod - 2)
{
    int res = 1;
    while(x)
    {
        if (x & 1)
            res = (res * (int64) a) % mod;
        a = (a * (int64) a) % mod;
        x >>= 1;
    }
    return res;
}

void init()
{
    cin >> n;
    fac[0] = 1;
    memset(d, -1, sizeof d);
    d[1] = 0;
    d[0] = 1;
    for(int i = 1; i <= n; ++i) 
        fac[i] = (fac[i - 1] *(int64) i) % mod;
    for(int i = 0; i <= n; ++i)
        ofac[i] = st(fac[i]);
}
inline int c(int a, int b)
{
    return ((fac[b] *(int64) ofac[a]) % mod * ofac[b - a]) % mod;
}

int fun(int x)
{
    if (d[x] != -1)
        return d[x];
    int64 ans = 0;
    for(int i = 2; i <= x; ++i)
    {
        ans = (ans + c(i - 1, x - 1) *(int64) fun(x - i) % mod) % mod;
    }
    return d[x] = ans;
}

int lfun(int x)
{
    int64 ans = 0;
    for(int i = 1; i <= x; ++i)
    {
        ans = (ans + c(i, x) *(int64) fun(x - i) % mod) % mod;
    }
    return ans;
}
void solve()
{
    int64 res = 1;
    for(int i = 1; i < n; ++i)
    {
        res = (res + (c(i, n ) * (int64) (fun(i) + lfun(i)) % mod) % mod) % mod;
        //cerr << res << endl;
    }
    cout << res;
}

int main()
{
     //ios_base::sync_with_stdio(false);cin.tie(0);
    #ifdef WIN32
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    init();
    solve();
    
} 