/// I won't run away anymore... I won't go back on my word... that is my ninja way!
#include<bits/stdc++.h>
using namespace std ;
const int N = 3e6 + 5 ,M = 4e5 + 5;
int n ,arr[M] ,gt[N] ,cnt[N] ;
vector<int> primes ,ans ;
bool vis[N] ,is[N] ;
int spf[N];
void sieve(){
    for(int i=1;i<N;++i) spf[i]=i;
    for(int i=2;i*i<N;++i)if(spf[i]==i){
        for(int j=i*i;j<N;j+=i)if(spf[j]==j)spf[j]=i;
    }
}

int main(){
    for(int i=2;i<N && primes.size()<2e5+5;++i){
        if(vis[i])continue;
        primes.push_back(i);
        for(int j=i;j<N;j+=i)vis[j] = 1 ;
    }
    sieve();
    scanf("%d",&n);
    const int xx = 2e5 ;
    for(int i=0;i<n+n;++i){
        scanf("%d",arr+i);
        ++cnt[arr[i]];
        if(arr[i]>xx)continue;
        if(spf[arr[i]]==arr[i])gt[arr[i]] = primes[arr[i]-1] ;
        else gt[arr[i]] = arr[i]/spf[arr[i]] ;
    }
    sort(arr,arr+n+n);
    reverse(arr,arr+n+n);
    for(int i=0;i<n+n;++i){
        if(arr[i]>xx)continue;
        if(!cnt[arr[i]])continue;
        if(spf[arr[i]]!=arr[i] && cnt[gt[arr[i]]]){
            --cnt[gt[arr[i]]] ;
            --cnt[arr[i]] ;
            ans.push_back(arr[i]);
        }
    }
    reverse(arr,arr+n+n);
    for(int i=0;i<n+n;++i){
        if(arr[i]>xx)continue;
        if(!cnt[arr[i]])continue;
        if(spf[arr[i]]==arr[i] && cnt[gt[arr[i]]]){
            --cnt[gt[arr[i]]] ;
            --cnt[arr[i]] ;
            ans.push_back(arr[i]);
        }
    }
    for(int go:ans)printf("%d ",go);
    return 0 ;
}
