#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>

#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

lli w[N];

lli get(lli x) {
    if(x == w[x])
        return x;
    return w[x] = get(w[x]);
}

void merge(lli a, lli b) {
    a = get(a);
    b = get(b);
    if(a == b) {
        return ;
    }
    w[a] = b;
    return ;
}

void solve()
{
    lli n;
    cin>>n;
    string s[n];
    vector<lli> v[27];
    for(int i = 0; i <= n; i ++ ) {
        w[i] = i;
    }
    for(int i = 0; i < n; i ++) {
        cin>>s[i];
        for(int j = 0; j < s[i].size(); j ++) {
            lli x = s[i][j] - 'a';
            v[x].push_back(i);
        }
    }
    for(int i = 0; i < 26; i ++) {
        for(int j = 1; j < v[i].size(); j ++) {
            merge(v[i][j], v[i][j - 1]);
        }
    }
    set<lli> se;
    for(int i = 0; i < n; i ++) {
        se.insert(get(i));
    }
    cout<<se.size();
    cout<<'\n';
    return ;
}

/*
*/
;
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
