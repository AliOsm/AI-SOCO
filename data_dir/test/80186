#include <bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
#define PI acos(-1);
 
const double EPS = 1e-12;
const int N = 1e6 + 1;
const int mod = 1e9 + 7;
 const ll infl=0x3f3f3f3f3f3f3f3fLL;
 
//similar minimum coin change problem ....

vector < ll > v;
void  pre(ll x,ll n){
	if(x > n) return ;
	v.pb(x);
	pre(x*10,n),pre(x*10+1,n);
}
int main(){

	ll n;
	cin >> n;
	v.pb(0);
	pre(1,n);
	st(v);
	ll p = v.size();

	ll dp[n+1];
	for(int i = 1 ; i <= n; i++ )
		dp[i] = infl;
	dp[0] = 0 ;
	ll ans[N];
	for(int i = 1 ; i < p ; i++ )
	{
		for(int j = 1 ; j <= n ; j++ )
		{
			if(j >= v[i] && dp[j] > 1 + dp[j-v[i]])
			{
				dp[j] = 1 + dp[j-v[i]];
				ans[j] = v[i];
			}
		}
	}
	//second method
	/*for(int i = 1 ; i <= n ;i++ )
	{

		for(int j = 1 ; j < p ; j++ )
		{
			if(i >= v[i] && dp[i] > 1 + dp[i-v[j]])
			{	
				dp[i] = 1 + dp[i-v[j]];
				ans[i] = v[j];
			}
		}
	}*/
	cout << dp[n]  << "\n";
	ll i = n ;
	while(i)
	{
		cout << ans[i] << " ";
		i -= ans[i] ; 
	}
	












	return 0;
}












