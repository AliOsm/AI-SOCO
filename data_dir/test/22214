#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-8

int f[20][3], g[50], cnt, n, m, a, b;

bool Sol(int a, int b) {
	if (g[a] && g[b]) {
		if (g[a] != g[b]) return 0;
		else return 1;
	}
	else if (g[a]) {
		g[b] = g[a];
		if (f[g[a]][2] == 0) f[g[a]][2] = b;
		else return 0;
	}
	else if (g[b]) {
		g[a] = g[b];
		if (f[g[b]][2] == 0) f[g[b]][2] = a;
		else return 0;
	}
	else {
		if (cnt > n/3) return 0;
		g[a] = g[b] = cnt;
		f[cnt][0] = a;
		f[cnt++][1] = b;
	}
	return 1;
}

int main() {
	memset(f, 0, sizeof(f));
	memset(g, 0, sizeof(g));
	cnt = 1;
	scanf("%d%d", &n, &m);
	while (m--) {
		scanf("%d%d", &a, &b);
		if (!Sol(a, b)) {
			printf("-1\n");
			return 0;
		}
	}
	cnt = 1;
	for (int i = 1; i <= n; i++)
		if (g[i] == 0) {
			while (f[cnt][0] && f[cnt][1] && f[cnt][2]) cnt++;
			if (f[cnt][0] == 0) f[cnt][0] = i;
			else if (f[cnt][1] == 0) f[cnt][1] = i;
			else f[cnt][2] = i;
		}
	for (int i = 1; i <= n/3; i++)
		printf("%d %d %d\n", f[i][0], f[i][1], f[i][2]);
	return 0;
}
