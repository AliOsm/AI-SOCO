#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int> ,null_type,less<pair<int,int> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
long long MOD = 998244353;
pair<int,int> dx[4] = {{1,0},{-1,0},{0,1},{0,-1}};
long long fastpow(long long x,long long k)
{
    if(!k)
        return 1;
    if(k & 1)
        return ((x * fastpow(x,k-1) % MOD) % MOD) % MOD;
    long long ans = fastpow(x,k/2);
    ans %= MOD;
    ans *= ans;
    ans %= MOD;
    return ans;
}
long long sumF(long long x)
{
    int s = 0;
    while(x)
        s += x%10,x /= 10;
    return s;
}
vector<long long> fac;
int main() {
    int n;
    cin>>n;
    long long s = 1;
    for(int i = 1;i <= n;i++)
    {
        s *= 1LL * i;
        s %= MOD;
        fac.push_back(s);
    }
    long long ans = s;
    long long temp = s;
    long long cur = 1;
    for(int i = n;i >= 2;i--)
    {
        cur *= i;
        cur %= MOD;
        ans += (((temp%MOD - cur%MOD) + MOD) % MOD);
        ans %= MOD;
    }
    cout << ans % MOD;
    return 0;
}
