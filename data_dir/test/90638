#include <bits/stdc++.h> 
using namespace std;
#define rep(i, a, b) for(int i = a; i < (b); ++i)
#define trav(a, x) for(auto& a : x)
#define sz(x) (int)(x).size()
typedef vector<int> vi;
// #define ll long long 
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
const int MOD = 1e9+7;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=2e5+300;
const int M=19;
vector<int> an[N];
bool vis[N];
int cnt=0;
void dfs(int x)
{
  if(vis[x]) return;
  vis[x]=true;
  cnt++;
  for(auto y:an[x])
  {
    dfs(y);
  }
}
int p[N];
int sz[N];
int find(int x){
  return x==p[x]?x:p[x]=find(p[x]);
}
int unite(int x,int y)
{
  x=find(x);
  y=find(y);
  if(x==y) return -1;
  int o=sz[x]*sz[y];
  sz[y]+=sz[x];
  p[x]=y;
  return o;
}
int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      int t;
      cin>>t;
      while(t--){
        int n,m,a,b;
        cin>>n>>m>>a>>b;
        for(int i=1;i<=n;i++) an[i].clear(),vis[i]=false;
        vector<pii> v;
        vector<pii> v1;
        for(int i=1;i<=n;i++) p[i]=i,sz[i]=1;
        for(int i=0;i<m;i++)
        {
          int x,y;
          cin>>x>>y;
          if(x==a||x==b||y==a||y==b)
          {
            v.pb({x,y});
          }
          else{
            an[x].pb(y);
            an[y].pb(x);
            v1.pb({x,y});
            unite(x,y);
          }
        }
        vector<int> lol;
        for(int i=1;i<=n;i++)
        {
          if(i==a||i==b) continue;
          if(!vis[i])
          {
            cnt=0;
            dfs(i);
            lol.pb(cnt);
          }
        }
        int ans=0;
        int sum=0;
        for(int i=(int)lol.size()-1;i>=0;i--)
        {
          // cout<<lol[i]<<" ";
          ans+=lol[i]*sum;
          sum+=lol[i];
        }
        for(auto x:v)
        {
          an[x.fi].pb(x.se);
          an[x.se].pb(x.fi);
        }
        lol.clear();
        set<int> r;
        map<int,int> ma;
        for(auto x:an[a])
        {
          if(x!=b)
          {
            // cout<<sz[x]<<" ";
            r.insert(find(x));
            ma[find(x)]++;
          } 
        }
        for(auto x:r) lol.pb(sz[x]);
        sum=0;
        for(int i=(int)lol.size()-1;i>=0;i--)
        {
          //cout<<lol[i]<<" ";
          ans-=lol[i]*sum;
          sum+=lol[i];
        }
        lol.clear();
        r.clear();
        vector<int> lol1;
        set<int> r1;
        
        for(auto x:an[b])
        {
          if(x!=a)
          {
            r.insert(find(x));
            if(ma[find(x)])
            {
              r1.insert(find(x));
            }
          }
        }
        for(auto x:r) lol.pb(sz[x]);
        for(auto x:r1) lol1.pb(sz[x]);
        sum=0;
        for(int i=(int)lol.size()-1;i>=0;i--)
        {
          // cout<<lol[i]<<" ";
          ans-=lol[i]*sum;
          sum+=lol[i];
        }
        sum=0;
        for(int i=(int)lol1.size()-1;i>=0;i--)
        {
          // cout<<lol[i]<<" ";
          ans+=lol1[i]*sum;
          sum+=lol1[i];
        }
        cout<<ans<<"\n";
      }
}
// I never lose. I either win or I learn