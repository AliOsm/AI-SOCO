#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e6+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define int ll

#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int n,A,cf,cm,m;
pii a[maxn];
int sum[maxn];
int ans[maxn];

int32_t main()
{
    IOS
    cin>>n>>A>>cf>>cm>>m;
    for (int i=1;i<=n;i++) cin>>a[i].F,a[i].S=i;
    sort(a+1,a+n+1);
    for (int i=1;i<=n;i++) sum[i]=sum[i-1]+a[i].F;

    if (m>=n*A-sum[n])
    {
        cout<<n*cf+cm*A<<endl;
        for (int i=1;i<=n;i++) cout<<A<<' ';
        return 0;
    }
    if (n==1)
    {
        cout<<cm*(m+a[1].F)<<endl;
        cout<<m+a[1].F<<endl;
        return 0;
    }

    a[n+1].F=A;

    pii tmp;
    int anss=-inff;
    for (int i=n+1;i>=2;i--)
    {
        m-=(A-a[i].F);
        if (m<0) break;

        if (a[i-1].F==A) continue;
        if (m>((A-1)*(i-1)-sum[i-1])) continue;

        int L=0,R=1e9+2;
        while (R-L>1)
        {
            int M=(L+R)>>1,ok;
            if (M<=a[1].F) ok=1;
            if (M>=A) ok=0;
            int now=upper_bound(a+1,a+i,mkp(M,-1ll))-a;
            now--;
            if (M*now-sum[now]<=m) ok=1;
            else ok=0;
            if (ok) L=M;
            else R=M;
        }
        if ((n+1-i)*cf+cm*L>=anss)
        {
            anss=(n+1-i)*cf+cm*L;
            tmp=mkp(i,L);
        }
    }

    cout<<anss<<endl;
    for (int i=1;i<=n;i++)
        if (i>=tmp.F) ans[a[i].S]=A;
        else if (a[i].F<=tmp.S) ans[a[i].S]=tmp.S;
        else ans[a[i].S]=a[i].F;
    for (int i=1;i<=n;i++) cout<<ans[i]<<' ';

}

