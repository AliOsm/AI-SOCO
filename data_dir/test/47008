#include <bits/stdc++.h>

using namespace std;

const int MX = 1000006;
typedef pair<long long ,long long> pll;
long long int n , m , k , sol , acc , ini;
vector<pll>all[MX] ;
pll sege[4*MX];

pll put (pll a , pll b)
{
    a.first+=b.first;
    a.second+=b.second;
    return a;
}

void update(int node , int l , int r, int ind , pll p)
{
    if(l==r)
        sege[node] = put(sege[node],p);
    else
    {
        int mid = (l+r)>>1;
        if(ind<=mid)
            update(2*node+1,l,mid,ind,p);
        else
            update(2*node+2,mid+1,r,ind,p);
        sege[node] = put(sege[2*node+1],sege[2*node+2]);
    }
}

long long query(int node , int l , int r , int rem )
{
    if(rem==0)return 0;
    if(l==r)
        return min( (long long ) rem , sege[node].first ) * r;
    else
    {
        int mid = (l+r)>>1;
        if(sege[2*node+1].first>rem)
            return query(2*node+1,l,mid,rem);
        else
            return sege[2*node+1].second+query(2*node+2,mid+1,r,rem-sege[2*node+1].first );
    }
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    scanf("%d %d %d",&n,&m,&k);
    for(int i=0;i<k;i++)
    {
        long long L , R , P , C;
        scanf("%I64d %I64d %I64d %I64d",&L,&R,&P,&C);
        all[L].push_back({P,C});
        all[R+1].push_back({-P,C});
    }
    for(int i=1;i<=n;i++)
    {
        for(auto u : all[i])
            update(1,1,MX,u.second,{u.first,u.first*u.second});
        sol+=query(1,1,MX,m);
    }
    printf("%I64d",sol);
    return 0;
}
