#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int mx = 200050;

#define F first
#define S second
#define mp make_pair
#define pii pair<int,int>

pair<int,int> tr[mx];

int main()
{
    int n , q , i , j , k , p , m , a , b;
    scanf("%d %d",&n,&q);
    int arr[n+5];
    int sum = 0;

    for(i = 1 ; i <= n ; i++)
    {
        scanf("%d",&arr[i]);
        p = arr[i];
        if(p)sum = 1;
        if(tr[p].F==0)
        {
            tr[p].F = tr[p].S = i;
        }
        else
        {
            tr[p].S = i;
        }
    }
    if(sum  == 0)
    {
        printf("YES\n");
        for(i = 1 ; i <= n ; i++)
        {
            if(i>1)printf(" ");
            printf("%d",q);
        }
        printf("\n");
        return 0;
    }

    int nen[n+5];

    nen[n+1] = n+1;

    for(i = n ; i >= 1 ; i--)
    {
        if(arr[i] == 0)
        {
            nen[i] = nen[i+1];
        }
        else
        {
            nen[i] = i;
        }
    }



    for(i = q ; i >= 1 ; i--)
    {
        for(j = tr[i].F+1 ; j < tr[i].S ; j++)
        {
            if(arr[j] == 0)
            {
                j = nen[j];
            }
            else if(arr[j] > i)
            {
                j = tr[arr[j]].S+1;
            }
            else if(arr[j] < i)
            {
                return !printf("NO\n");
            }
        }
    }

    vector<pii> zer;

    for(i = 1 ; i <= n ; i++)
    {
        if(arr[i]==0)
        {
            a = i;
            b = nen[i]-1;
            i = nen[i];
            zer.push_back(mp(a,b));
        }
    }

    int l = zer.size();
    int idx = 0;

    for(k = 0 ; k < l ; k++)
    {
        a = zer[k].F;
        b = zer[k].S;

        if(!idx)idx = a;

        j = 0;
        if(a > 1) j = arr[a-1];
        if(b < n) j = max(j,arr[b+1]);

        for(i = a ; i <= b ; i++)arr[i] = j;
    }




    if(tr[q].F == 0)arr[idx] = q;
    if(tr[q].F == 0 && idx == 0)return !printf("NO\n");


    printf("YES\n");
    for(i = 1 ; i <= n ; i++)
    {
        if(i > 1)printf(" ");
        printf("%d",arr[i]);
    }
    printf("\n");


    return 0;
}
