#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ull unsigned long long
#define iter set<pair<int,int>>::iterator
#define int long long
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=2e5+7;
const int inf=1e9+5;
const int mod=1e9+7;

main ()
{
    ios;
    int n;
    string s,t;
    cin>>n>>s>>t;
    vector<int>a;
    a.pb(1);
    a.pb(2);
    a.pb(3);
    while(true){
        string f="";
        bool ans=true;
        for (int j=0;j<a.size();++j){
            if (a[j]==1)f+='a';
            else if (a[j]==2)f+='b';
            else f+='c';
        }
        string p="";
        p+=f[0];
        p+=f[1];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[1];
        p+=f[2];
        if (p==s || p==t){
            ans=false;
        }
        if (ans && n==1){
            cout<<"YES"<<endl;
            cout<<f<<endl;
            exit(0);
        }
        p="";
        p+=f[2];
        p+=f[0];
        if (p==s || p==t){
            ans=false;
        }
        if (ans){
            cout<<"YES"<<endl;
            for (int i=1;i<=n;++i){
                cout<<f;
            }
            exit(0);
        }
        if (!next_permutation(all(a)))break;
    }
    a[0]=1;
    a[1]=2;
    a[2]=3;
    while(1){
        bool ans=true;
        string f="";
        for (int i=0;i<a.size();++i){
            if (a[i]==1)f+='a';
            else if (a[i]==2)f+='b';
            else if (a[i]==3)f+='c';
        }
        string p="";
        p+=f[0];
        p+=f[1];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[1];
        p+=f[0];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[1];
        p+=f[2];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[2];
        p+=f[2];
        if (p==s || p==t){
            ans=false;
        }
        if (ans){
            cout<<"YES"<<endl;
            for (int i=1;i<=n;++i){
                cout<<f[0]<<f[1];
            }
            for (int i=1;i<=n;++i){
                cout<<f[2];
            }
            exit(0);
        }
        ans=true;
        p="";
        p+=f[0];
        p+=f[0];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[0];
        p+=f[1];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[1];
        p+=f[2];
        if (p==s || p==t){
            ans=false;
        }
        p="";
        p+=f[2];
        p+=f[1];
        if (p==s | p==t){
            ans=false;
        }
        if (ans){
            cout<<"YES"<<endl;
            for (int i=1;i<=n;++i){
                cout<<f[0];
            }
            for (int i=1;i<=n;++i){
                cout<<f[1]<<f[2];
            }
            exit(0);
        }
        if (!next_permutation(all(a)))break;
    }
}
