#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
void sprint(string s) {for (int i = 0; i < s.size(); ++i)	printf("%c",s[i]); printf("\n");}
int n,m;
int a[10],b[10];
vector<pair<int,int> >u,v;
int f(int x,int y){
	if(u[x].first==v[y].first and u[x].second!=v[y].second ) return u[x].first;
	if(u[x].first!=v[y].first and u[x].second==v[y].second ) return u[x].second;
	if(u[x].first==v[y].second and u[x].second!=v[y].first ) return u[x].first;
	if(u[x].second==v[y].first and u[x].first!=v[y].second ) return v[y].first;
	return -1;
}
int main(){
	cin>>n>>m;
	for (int i = 0; i < n; ++i)
	{
		int x,y;
		cin>>x>>y;
		u.push_back({x,y});
	}
	for (int i = 0; i < m; ++i)
	{
		int x,y;
		cin>>x>>y;
		v.push_back({x,y});
	}
	set<int>temp;
	for (int i = 0; i < n; ++i)
	{
		for (int j = 0; j < m; ++j)
		{
			int t=f(i,j);
			if(t!=-1) temp.insert(t);
		}
	}
	if(temp.size()==1){
		cout<<*(temp.begin())<<endl;
		return 0;
	}
	for (int i = 0; i < n; ++i)
	{
		set<int>flag;
		for (int j = 0; j < m; ++j)
		{
			int t=f(i,j);
			if(t!=-1) flag.insert(t);
		}
		if(flag.size()>1) {
			cout<<-1<<endl;
			return 0;
		}
	}
	for (int i = 0; i < m; ++i)
	{
		set<int>flag;
		for (int j = 0; j < n; ++j)
		{
			int t=f(j,i);
			if(t!=-1) flag.insert(t);
		}
		if(flag.size()>1) {
			cout<<-1<<endl;
			return 0;
		}
	}
	cout<<0<<endl;
	return 0;
}