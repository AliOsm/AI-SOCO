#include <bits/stdc++.h>

using namespace std;

typedef long double LD;
typedef long long int LL;
typedef pair <int,int> pii;

#define L first
#define R second

const int maxn = 1e5;
int pre[maxn], suf[maxn];

int main() {
	ios_base::sync_with_stdio(false);
	string s, t;
	cin >> s >> t;

	int p = 0;
	for (int i = 0; i < t.size(); i++) {
		while (t[i] != s[p] && p < s.size())
			p++;
		pre[i] = p++;
		p = min(p, (int)s.size());
	}
	
	p = s.size() - 1;
	for (int i = t.size() - 1; i >= 0; i--) {
		while (t[i] != s[p] && p >= 0)
			p--;
		suf[i] = p--;
		p = max(p, -1);
	}

	int ans = 0;
	for (int i = 0; i < t.size(); i++)
		if (pre[i] != s.size())
			ans = max(ans, i + 1);

	for (int i = 0; i < t.size(); i++)
		if (suf[i] != -1)
			ans = max(ans, (int)t.size() - i);

	for (int i = 0; i < t.size(); i++) {
		int idx = upper_bound(suf + i + 1, suf + t.size(), pre[i]) - suf;
		if (idx != t.size() && pre[i] < s.size() && suf[idx] > -1)
			ans = max(ans, i + 1 + (int)t.size() - idx);
	}
	if (ans == 0) {
		cout << "-\n";
		return 0;
	}

	for (int i = 0; i < t.size(); i++)
		if (pre[i] != s.size() && i + 1 == ans) {
			for (int j = 0; j <= i; j++)
				cout << t[j];
			cout << endl;
			return 0;
		}

	for (int i = 0; i < t.size(); i++)
		if (suf[i] != -1 && ans == t.size() - i) {
			for (int j = i; j < t.size(); j++)
				cout << t[j];
			cout << endl;
			return 0;
		}

	for (int i = 0; i < t.size(); i++) {
		int idx = upper_bound(suf + i + 1, suf + t.size(), pre[i]) - suf;
		if (idx != t.size() && pre[i] < s.size() && suf[idx] > -1 && ans == i + 1 + (int)t.size() - idx) {
			for (int j = 0; j <= i; j++)
				cout << t[j];
			for (int j = idx; j < t.size(); j++)
				cout << t[j];
			cout << endl;
			return 0;
		}
	}
	return 0;
}