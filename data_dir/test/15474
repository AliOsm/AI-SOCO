#include<bits/stdc++.h>
using namespace std;
long long a,b,c,d,i,e,f,g,n,m,k,A[200005],ans,B[200005],minn,M[2000005],P[200005];
vector <long long> v[200005];
void dfs(long long x,long long y,long long z)
{
           if(A[x]<z && A[x]!=-1) { cout<<-1; exit(0); }
           for(long long i=0;i<v[x].size();i++)
           {
                      if(v[x][i]==y) continue;
                      if(A[x]!=-1) dfs(v[x][i],x,A[x]);
                      else dfs(v[x][i],x,z);
           }
}
void dfs1(long long x,long long y,long long z){
           if(v[x].size()==1 && x!=1) {  return ; }
           for(long long i=0;i<v[x].size();i++)
           {
                      if(v[x][i]==y) continue;
                      if(A[x]==-1) {
                                 dfs1(v[x][i],x,z);
                                 B[x]=M[x]-z;
                               //  cout<<M[x]<<" "<<x<<endl;
                      }
                      else {
                                 dfs1(v[x][i],x,A[x]);
                      }
           }
}
void dfs2(long long x,long long y,long long z) {
           //if(x==3) cout<<y<<" "<<z<<endl;
           if(A[x]!=-1) B[x]=A[x]-B[y]-z;
           for(long long i=0;i<v[x].size();i++)
           {
                      if(v[x][i]==y) continue;
                      if(A[x]!=-1) { dfs2(v[x][i],x,A[x]); }
                      else dfs2(v[x][i],x,z); 
           }
}
int main()
{
           cin>>n;
           //for(long long i=1;i<=n;i++)
          // M[i]=999999999999;
           for(long long i=2;i<=n;i++)
           {
                      cin>>P[i];
                    ///  M[a]=min(M[a],i);
                      v[i].push_back(P[i]);
                      v[P[i]].push_back(i);
           }
           for(long long i=1;i<=n;i++)
           {
                     // cout<<M[i]<<" ";
                      cin>>A[i];
           }
           for(long long i=1;i<=n;i++)
           {
                      minn=999999999999999999;
                      if(A[i]!=-1 || v[i].size()==1) continue;
                     // if(i==2) cout<<P[i]<<" ";
                      for(long long j=0;j<v[i].size();j++)
                      {
                                 //if(i==2) cout<<v[i][j]<<" ";
                                 if(v[i][j]==P[i]) continue;
                                 minn=min(minn,A[v[i][j]]);
                      }
                      M[i]=minn;
           }
           //cout<<endl;
           //for(long long i=1;i<=n;i++)
           //cout<<M[i]<<" ";
           //cout<<endl;
           dfs(1,0,0);
           dfs1(1,0,0);
           //cout<<endl;
           dfs2(1,0,0);
           for(long long i=1;i<=n;i++)
           {
           ans+=B[i];
          // cout<<B[i]<<" ";
                      
           }
           cout<<ans;
}