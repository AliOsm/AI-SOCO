#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <assert.h>

#pragma comment(linker, "/stack:20000000")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef int mt;
typedef double fl;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 1000000007ll;//998244353ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

#define N 510
#define K 4
#define P 3
#define M (N * N)
#define p2(x) ((((x) * (x)) % (MOD)))
#define mxy(x, y) ((((x) * (y)) % (MOD)))
#define p2p(x) ((((x) * (x))))

mt n, m;
mt a[N][N], b[N][N];
mt pa[N], pb[N], cnt;
bool ok = true;
int main(void) {
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d %d", &n, &m);
	rep(0, n, i)
		rep(0, m, j) scanf("%d", &a[i][j]);
	rep(0, n, i)
		rep(0, m, j) scanf("%d", &b[i][j]);
	rep(0, n + m - 1, s) {
		cnt = 0;
		mt x = min(s, n - 1), y = max(s - (n - 1), 0);
		while (x >= 0 && y < m) {
			pa[cnt] = a[x][y];
			pb[cnt] = b[x][y];
			++cnt, --x, ++y;
		}
		sort(pa, pa + cnt);
		sort(pb, pb + cnt);
		rep(0, cnt, j) ok &= pa[j] == pb[j];
	}
	puts(ok ? "YES" : "NO");

	return 0;
}