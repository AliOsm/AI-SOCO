#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1e9+7;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result =(result * base) % modulus;
		exponent >>= 1;
		base =(base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

void stringToUpper(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::toupper);
}

void stringToLower(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::tolower);
}

int n, parent[212345], comp, x, ans, cnt;

void init()
{
	for(int i=0; i<200001; i++)
		parent[i]=i;
}

int find(int x)
{
	if(x == parent[x])
		return x;
	parent[x] = find(parent[x]);
	return parent[x];
}

void unite(int x, int y)
{
	int p1 = find(x);
	int p2 = find(y);
	if(p1 == p2)
		return;
	parent[p1] = parent[p2];
	comp--;
}

int main()
{
	ssync;
	init();
	cin >> n;
	comp = n;
	for(int i=1; i<=n; i++)
	{
		cin >> x;
		unite(x, i);
	}
	ans = (comp > 1) ? comp : 0;
	for(int i=0; i<n; i++)
	{
		cin >> x;
		cnt += x;
	}
	cout << ans + 1 - (cnt&1) << "\n";
	return 0;
}
