#include <bits/stdc++.h>
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
using namespace std;

const int N = 2e5 + 9;
vector<pair<int, ll>> adj[N];

ll best[N];

int main() {
	fastIO;
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
#endif
	int n, m, u, v;
	ll c;
	cin >> n >> m;
	for (int i = 0; i < m; ++i) {
		cin >> u >> v >> c;
		adj[u].push_back({v, c});
		adj[v].push_back({u, c});
	}
	priority_queue<pair<ll, int>> pq;
	for (int i = 1; i <= n; ++i) {
		cin >> best[i];
		pq.push({-best[i], i});
	}
	while(!pq.empty()) {
		int node = pq.top().second;
		ll cost = -pq.top().first;
		pq.pop();
		if(best[node] < cost) continue;
		for(auto it: adj[node]) {
			ll nwDist = cost + it.second * 2ll;
			if(best[it.first] > nwDist) {
				best[it.first] = nwDist;
				pq.push({-nwDist, it.first});
			}
		}
	}
	for (int i = 1; i <= n; ++i)
		cout << best[i] << ' ';
	return 0;
}
