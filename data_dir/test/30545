#include <bits/stdc++.h>

using namespace std;
const int N = 1e6+ 9, OO = 0x3f3f3f3f;
int n  ,  arr[N], maxi , ans ;
map < int , vector < pair < int , int > >  > cnt;
bool cmp(pair < int , int > a , pair < int , int > b){
    return a.second < b.second;
}
int main(){

ios_base::sync_with_stdio(0);
cin.tie(0);
cout.tie(0);
    cin >> n ;
    for(int i=1;i<=n;++i){
        cin >> arr[i];
        arr[i]+=arr[i-1];

    }
    for(int i=1;i<=n;++i){
        for(int j=i;j<=n;++j){
            int sum = arr[j] - arr[i - 1];
            cnt[sum].push_back({i ,j});

        }
    }
    for(auto itr : cnt){
        int i = itr.first;
        vector < pair < int , int > > vv = cnt[i] , now;
        if(!vv.empty()){
            cnt[i].clear();
            sort(vv.begin() , vv.end() , cmp);
            int pre = -1;
            for(auto seg : vv){
                if(seg.first > pre){
                    pre = seg.second;
                    now.push_back(seg);
                }
            }
             for(int j=0;j<now.size();++j){
            cnt[i].push_back({now[j].first , now[j].second});
        }
        }
        if(cnt[i].size() > maxi){
            maxi = cnt[i].size();
            ans = i;
        }


    }
    cout << cnt[ans].size() << endl;
    for(auto i  : cnt[ans]) cout << i.first << " " << i.second << endl;

    return 0;
}
