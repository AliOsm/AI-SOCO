#include<iostream>
#include<map>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<list>

using namespace std;


void dis(list<char> l)
{
     list<char>::iterator it=l.begin();
     for(;it!=l.end();it++)
     {
                           cout<<(*it);
     }
}

int main()
{
    string s;
    cin>>s;
    int i,b,d,k,t,i1;
    list<char> l;
    if(s.at(0)=='-')
    {
                    b=1;
                    i=1;
    }
    else
    {
        b=0;
        i=0;
    }
    d=-1;
    for(i1=i;i1<s.size();i1++)
    {
                        if(s.at(i1)=='.')
                        {
                                        d=i1;
                                        break;
                        }
    }
    if(d!=-1)
    {
             l.push_front('.');
             for(k=d-1,t=0;k>=i;k--,t++)
             {
                               
                               l.push_front(s.at(k));
                               if(t==2&&k!=i)
                               {
                                       l.push_front(',');
                                       t=-1;
                               }
             }
    }
    else
    {
             for(k=s.size()-1,t=0;k>=i;k--,t++)
             {
                               
                               l.push_front(s.at(k));
                               if(t==2&&k!=i)
                               {
                                       l.push_front(',');
                                       t=-1;
                               }
             }
             l.push_back('.');
             l.push_back('0');
             l.push_back('0');
             l.push_front('$');
             if(b==1)
             {
                     l.push_back(')');
                     l.push_front('(');
             }
             dis(l);
             //system("pause");
             return 0;
    }
    
    if(d+3<=s.size())
    {
                     for(k=d+1;k<d+3;k++)
                     {
                                         l.push_back(s.at(k));
                     }
    }
    else
    {
        if(d+1==s.size())
        {
                         l.push_back('0');
                         l.push_back('0');
        }
        else if(d+2==s.size())
        {
             l.push_back(s.at(d+1));
             l.push_back('0');
        }
    }
    l.push_front('$');
    if(b==1)
             {
                     l.push_back(')');
                     l.push_front('(');
             }
    dis(l);
    //system("pause");
    return 0;
}
