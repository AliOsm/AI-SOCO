#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ll int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
ll ct[M],D[M],U[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=1;i<=n;i++)
	{
		ll x;
		cin>>x;
		ct[x]++;
	}
	for(ll i=1;i<=M-5;i++)
	{
		if(ct[i]>=2)
			D[i]=ct[i]+D[i-1];
		else
			D[i]=ct[i];
	}
	for(ll i=M-5;i>=1;i--)
	{
		if(ct[i]>=2)
			U[i]=ct[i]+U[i+1];
		else
			U[i]=ct[i];
	}
	ll ind=0;
	for(ll i=1;i<=M-5;i++)
	{
		if(D[ind]+U[ind+1]<D[i]+U[i+1])
			ind=i;
	}
	cout<<D[ind]+U[ind+1]<<"\n";
	std::vector<ll> ans,v;
	ll z=ind;
	while(ct[z])
	{
		for(ll i=1;i<ct[z];i++)
			ans.pb(z);
		v.pb(z);
		if(ct[z]==1)
			break;
		z--;
	}
	reverse(all(v));
	for(auto u:v)
		ans.pb(u);
	z=ind+1;
	v.clear();
	while(ct[z])
	{
		for(ll i=1;i<ct[z];i++)
			ans.pb(z);
		v.pb(z);
		if(ct[z]==1)
			break;
		z++;
	}
	reverse(all(v));
	for(auto u:v)
		ans.pb(u);
	for(auto u:ans)
		cout<<u<<" ";
	cout<<"\n";
	return 0;
}