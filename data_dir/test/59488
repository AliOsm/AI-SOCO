#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <iostream>
#include <queue>
#include <cstring>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define FORD(i,a,b) for(int i=(a);i>(b);i--)
typedef long long ll;
int nextint()
{
	int t;
	scanf("%d",&t);
	return t;
}

ll nextll()
{
	ll t;
	cin>>t;
	return t;
}

int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};
int n,m;


int used[51][51];
char str[51][51];
bool isgood(int x,int y)
{
	return 0<=x&&x<n&&0<=y&&y<m&&str[x][y]=='#';
}

int bfs(int x,int y)
{
	memset(used,0,sizeof(used));
	int res=1;
	used[x][y]=1;
	queue<int> q;
	q.push(x);
	q.push(y);
	while(!q.empty())
	{
		x=q.front(); q.pop();
		y=q.front(); q.pop();
		REP(i,4)
		{
			int nx=x+dx[i];
			int ny=y+dy[i];
			if(isgood(nx,ny)&&!used[nx][ny])
			{
				used[nx][ny]=1;
				res++;
				q.push(nx);
				q.push(ny);
			}
		}
	}
	return res;
}

int main()
{
	scanf("%d%d",&n,&m);
	REP(i,n)
		scanf("%s",str[i]);
	int cnt=0;
	REP(i,n)
		REP(j,m)
			if(str[i][j]=='#') cnt++;
	if(cnt<=2) printf("-1\n");
	else
	{
		int res=2;
		REP(i,n) REP(j,m)
		{
			if(str[i][j]=='#')
			{
				str[i][j]='.';
				REP(k,4)
					if(isgood(i+dx[k],j+dy[k]))
					{
						if(bfs(i+dx[k],j+dy[k])!=cnt-1)
							res=1;
						break;
					}
				str[i][j]='#';
			}
		}
		printf("%d\n",res);
	}
}
