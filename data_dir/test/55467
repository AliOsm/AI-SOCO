#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=300010;
const int inf=0x3f3f3f3f;

using namespace std;

#define sz(x) ((x).size())

int next[N];

int kmp(string s,int next[N],int l)
{
	next[0]=-1;
	for(int i=1,j=-1;i<sz(s);i++)
	{
		while(j!=-1 && s[j+1]!=s[i]) j=next[j];
		if(s[j+1]==s[i]) j++;
		next[i]=j;
		if(j==l-1) return -1;
	}
	return next[sz(s)-1]+1;
}

string link(string s1,string s2)
{
	string s=s2+'#'+s1;
	int ret=kmp(s,next,sz(s2));
	if(ret==-1) return s1;
	s="";
	for(int i=0;i<sz(s1)-ret;i++)
		s+=s1[i];
	for(int i=0;i<sz(s2);i++)
		s+=s2[i];
	return s;
}

int solve(string s1,string s2,string s3)
{
	s1=link(s1,s2);
	s1=link(s1,s3);
	return sz(s1);
}

string s1,s2,s3;

int main()
{
	cin>>s1>>s2>>s3;
	int ret=inf;
	ret=min(ret,solve(s1,s2,s3));
	ret=min(ret,solve(s1,s3,s2));
	ret=min(ret,solve(s2,s1,s3));
	ret=min(ret,solve(s2,s3,s1));
	ret=min(ret,solve(s3,s1,s2));
	ret=min(ret,solve(s3,s2,s1));
	cout<<ret<<endl;
	return 0;
}
