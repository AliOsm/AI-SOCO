#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include <iostream>
#include <algorithm>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <deque>
#include <queue>
#include <sstream>

using namespace std;

#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define ppb pop_back
#define rept(i,c) for (typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

#define task "a"

typedef long long ll;
typedef pair<int,int> pii;

const int maxN=100500;
const int INF=(int)1e9;
const int MOD = 7+(int)1e9;
const double eps = 1e-9;

double ans;
int isBad[333];
int k;

void Z(string s1, string s2) {
	int l1 = s1.size();
	int l2 = s2.size();
	string s = s2 + "&" + s1;
	int L = s.size();
	vector<int> z(L);
	vector<int> A(l2 + 1);
//	cout << s << endl; 
//	cout << 0 << " ";
	for (int i = 1, l = 0, r = 0; i < L; i++) {
		z[i] = max(0, min(r - i, z[i - l]));
		while(i + z[i] < L && s[i + z[i]] == s[z[i]]) 
			z[i]++;
		if (i + z[i] > r) {
			l = i;
			r = i + z[i];
		}	
	//	cout << z[i] << " ";
	}
//	cout << endl;
	for (int i = l2 + 1; i < L; i++) {
		A[z[i]]++;
	}
	for (int i = l2, s = 0; i >= 0; i--) {
		s += A[i];
		A[i] = s;
	}
/*	for (int i = 0; i <= l2; i++) {
		cout << A[i] << " ";
	}
	cout << endl;
	cout << endl;*/
	for (int i = 1, p = 0; i <= l2; i++) {
		p += isBad[s[i - 1]];
		if (p > k) {
			break;
		}
		ans += 1.0 / (double)A[i];
	}
}

int main(void){
    //freopen(task".in", "r",stdin); freopen(task".out","w",stdout);
	ans = 0.0;
	string s;
	cin >> s;
	string nn;
	cin >> nn;
	for (int i = 0; i < nn.size(); i++) {
		isBad['a' + i] = '1' - nn[i];
	}
	cin >> k;
	int L = s.size();
	for(int i = 0; i < s.size(); i++) {
		Z(s, s.substr(i, L - i));
	}
	printf("%.0lf", ans);
	return 0;
}




