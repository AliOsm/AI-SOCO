/*
    STARK_BOY
*/
#include <bits/stdc++.h>
#include <fstream>
using namespace std;
#define rep(i,a,b) for(ll i=a;i<b;i++)
#define repe(i,a,b) for(ll i=a;i<=b;i++)
#define bac(i,a,b) for(ll i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define F first
#define S second
typedef long long ll;
typedef vector< ll > vi;
typedef vector<pair<ll,ll> > vpii;
typedef pair<ll,ll> pii;
#define all(c) c.begin(),c.end()
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define setbitc(x) __builtin_popcount(x)
#define init(x,a) memset(x,a,sizeof(x))
#define INF 1000000000  
#define MOD 1000000007
#define MO 1000000006
#define M 998244353
#define PI           3.14159265358979323846  /* pi */
mt19937 rng32(chrono::steady_clock::now().time_since_epoch().count());
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
template<typename T>
using ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; 
ll modExpo(ll x,ll n)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modExpo((x*x)%MOD,n/2);
    else                             //n is odd
        
        return (x*modExpo((x*x)%MOD,(n-1)/2))%MOD;

}
ll modInverse(ll n) 
{ 
    return modExpo(n,MOD-2); 
}
const long long N=100005;
const int LN=20;
//Variables Start   
ll n,m,k,ar[N],par[N][LN],lev[N],edge[N],ans[N];
string s,s1;
vpii adj[N];
//Variables End
ll sub(ll a, ll b){return (a-b+MOD)%MOD;}
ll add(ll a, ll b){return (a+b)%MOD;}
ll mul(ll a, ll b){return (a*b)%MOD;}

void dfs(ll ver,ll prev_ver,ll dep)
{
    par[ver][0]=prev_ver;
    lev[ver]=dep;
    for(auto i:adj[ver])
    {
        if(i.F!=prev_ver)
        {
            edge[i.F]=i.S;
            dfs(i.F,ver,dep+1);
        }
    }
}

ll LCA(ll u,ll v)
{
    if(lev[u]>lev[v])swap(u,v);

    ll log_dep=ceil(log2(lev[v]));
    bac(i,log_dep,0)
    {
        if(par[v][i]!=-1 && lev[par[v][i]]>=lev[u])v=par[v][i];
    }
    if(u==v)return v;

    log_dep=ceil(log2(lev[v]));

    bac(i,log_dep,0)if(par[u][i]!=par[v][i])
    {
        u=par[u][i];
        v=par[v][i];
    }

    return par[u][0];

}
void solve(ll ver,ll prev_ver)
{
    for(auto i:adj[ver])
    {
        if(i.F!=prev_ver)
        {
            solve(i.F,ver);
            ar[ver]+=ar[i.F];
        }
    }

    ans[edge[ver]]=ar[ver];
}
int main()
{
    ios
    int ti=1;
    //cin>>ti;
    while(ti--)
    {
        cin>>n;
        rep(i,1,n)
        {
            ll x,y;cin>>x>>y;
            adj[x].pb(mp(y,i));
            adj[y].pb(mp(x,i));
        }
        rep(i,0,LN)rep(j,0,N)par[j][i]=-1;
        dfs(1,-1,1);
        rep(i,1,LN)rep(j,1,n+1)if(par[j][i-1]!=-1)
            par[j][i]=par[par[j][i-1]][i-1];

        cin>>k;
        rep(i,0,k)
        {
            ll x,y;
            cin>>x>>y;
            ar[x]++;
            ar[y]++;
            ar[LCA(x,y)]-=2;
            //cout<<LCA(x,y)<<endl;
        }

        solve(1,-1);

        rep(i,1,n)cout<<ans[i]<<" ";
        cout<<endl;


    }
    return 0;
        
}