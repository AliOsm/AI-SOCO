#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define ll long long int
#define mod (ll)(1000000007)
#define fio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define N (int)(100005)

void solve()
{
     ll n,k;
     cin>>n>>k;
     set<int> s;

     ll a[n+1],b[n+1];
     for(int i=1;i<=n;i++)
        cin>>a[i] , s.insert(i);
    for(int i=1;i<=n;i++)
        cin>>b[i];

    ll job[k+1];
    ll person[k+1];
    memset(job,-1,sizeof(job));
    memset(person,-1,sizeof(person));

    for(int i=1;i<=n;i++)
    {
        ll j = a[i];
        ll time = b[i];
        if(time > job[j])
        {
            person[j] = i;
            job[j] = time;
        }
    }

    ll left = 0;
    vector<ll> v;
    for(int i=1;i<=k;i++)
    {
        if(job[i] == -1)
            left++;
        else
        {
            s.erase(person[i]);
        }
    }

    for(ll el : s)
    {
        ll per = el;
        ll t = b[per];
        v.push_back(t);
    }

    sort(v.begin(),v.end());

    ll ans = 0;
    for(int i=0;i<left;i++)
        ans += v[i];
    cout<<ans;






}

/*
*/

int main()
{
    fio;
    ll t = 1;
   // cin>>t;
    while(t--)
    {
        solve();
    }

}
