#include <iostream>
#include <deque>
#include <queue>
#include <stack>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n ;
    cin >> n ;
    int arr[n] ;
    long long x ;
    priority_queue < pair < long long , pair < long long , int > > > Q ;
    for ( int i = 0 ; i < n ; i++ )
        cin >> arr[i] ;
    long long MIN = 1E15 ;
    for ( int i = 0 ; i < 5 ; i++ )
    {
        cin >> x ;
        Q.push({x,{0,i}}) ;
        MIN = min(MIN,x);
    }
    long long sum = 0 ;
    queue < pair < long long , pair < long long , int > > > tmp ;
    pair < long long , pair < long long , int > > p ;
    long long helper ;
    for ( int i = 0 ; i < n ; i++ )
    {
        sum += arr[i] ;
        if ( sum >= MIN )
        {
            while ( !Q.empty() )
            {
                p = Q.top() ;
                Q.pop() ;
                if ( p.first <= sum )
                {
                    helper = sum/p.first ;
                    p.second.first += helper ;
                    sum -= p.first*helper ;
                }
                tmp.push(p);
            }
            while ( !tmp.empty() )
            {
                Q.push(tmp.front()) ;
                tmp.pop() ;
            }
        }
    }
    long long ans[5] ;
    while ( !Q.empty() )
    {
        p = Q.top() ;
        Q.pop() ;
        ans[p.second.second] = p.second.first ;
    }
    for ( int i = 0 ; i < 5 ; i++ )
        cout << ans[i] << " ";
    cout << endl << sum ;
    return 0;
}
