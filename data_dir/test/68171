#include<bits/stdc++.h>
#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define pii pair<int,int>
#define read(x) scanf("%d",&x)
#define lread(x) scanf("%lld",&x)
using namespace std;

typedef long long ll;
const int N=1e6+7;
const int inf=0x3f3f3f3f;
const ll INF=0x3f3f3f3f3f3f3f3f;
const int mod=1998030377;
const int base=10;

int n,a[N],xor1[N],ans[N],pre[N];
struct BIT
{
    int a[N];
    int query(int x)
    {
        int ans=0;
        for(int i=x;i>0;i-=i&-i)
            ans^=a[i];
        return ans;
    }
    void modify(int x,int v)
    {
        for(int i=x;i<=n;i+=i&-i)
            a[i]^=v;
    }
}bit;
struct qus
{
    int l,r,id;
    bool operator < (const qus &rhs)const
    {
        return r<rhs.r;
    }
}qu[N];
map<int,int> mp;
int main()
{
    read(n);
    for(int i=1;i<=n;i++)
    {
        read(a[i]);
        pre[i]=mp[a[i]];
        mp[a[i]]=i;
    }
    for(int i=1;i<=n;i++)
        xor1[i]=xor1[i-1]^a[i];
    int q; read(q);
    for(int i=0;i<q;i++)
    {
        read(qu[i].l);
        read(qu[i].r);
        qu[i].id=i;
        ans[i]=xor1[qu[i].r]^xor1[qu[i].l-1];
    }
    sort(qu,qu+q);
    int j=1;
    for(int i=0;i<q;i++)
    {
        for(;j<=n && j<=qu[i].r;j++)
        {
            if(pre[j]) bit.modify(pre[j],a[j]);
            bit.modify(j,a[j]);
        }
        ans[qu[i].id]^=bit.query(qu[i].r)^bit.query(qu[i].l-1);
    }
    for(int i=0;i<q;i++)
        printf("%d\n",ans[i]);
    return 0;
}
/*
*/
