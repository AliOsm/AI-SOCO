/*
ID: Tariqul
PROG:
LANG: C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1e9
#ifdef localhost
typedef long long Long;
#else
typedef __int64 Long;
#endif // localhost
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; }
#ifdef localhost
bool readl(Long &n)	{ return scanf("%lld",&n) == 1; }
#else
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; }
#endif // localhost
bool readd(double &n){ return scanf("%lf",&n) == 1; }
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }

const int maxn = 102;
int pid[maxn],target = two(16) - 1;
vector<int> a,b;
int dp[maxn][1<<16];

bool isprime(int n)
{
	int i; if(n < 3)return true;
	fo(i,2,n)if(n%i == 0)return false;
	return true;
}

void init()
{
	CLR(pid,-1); int i,n,cnt = 0;
	fo(i,2,60)if(isprime(i))pid[i] = cnt++;
	cin >> n; a.resize(n);
	foo(i,0,a)cin >> a[i];
	b.clear();	CLR(dp,-1);
}

bool valid(int n,int &mask)
{
	int i,j;
	for(i = 2; i*i <= n; i++)if(n%i==0)
	{
        j = two(pid[i]);
		if(mask & j)return false;	mask |= j;
		while(n%i == 0)n /= i;
	}
	if(n > 1)
	{
        j = two(pid[n]);
		if(mask & j)return false;
		mask |= j;
	}
	return true;
}

int memo(int pos,int mask)
{
	if(pos >= sz(a))return 0;
	int &res = dp[pos][mask];
	if(res != -1)return res;
	int i = a[pos], j = a[pos], mi, tmask;
	mi = memo(pos+1,mask) + abs(a[pos]-1);
	if(mask < target)
	for(; i > 1; i--, j++)
	{
		tmask = mask; if(valid(i,tmask))mi = min(mi,memo(pos+1,tmask) + abs(a[pos]-i));
		tmask = mask; if(valid(j,tmask))mi = min(mi,memo(pos+1,tmask) + abs(a[pos]-j));
	}
	return res = mi;
}

bool AddResult(int pos,int mask, int mi)
{
	if(pos >= sz(a))return true;
	int i = a[pos], j = a[pos], tmask, val = abs(a[pos]-1);
	if(mi == (memo(pos+1,mask) + val)){ b.push_back(1); return AddResult(pos+1,mask,mi - val); }
	for(; i > 1; i--, j++)
	{
		val = abs(a[pos]-i); tmask = mask; if(valid(i,tmask))if(mi == memo(pos+1,tmask) + val){ b.push_back(i); return AddResult(pos+1,tmask,mi - val) ; }
		val = abs(a[pos]-j); tmask = mask; if(valid(j,tmask))if(mi == memo(pos+1,tmask) + val){ b.push_back(j); return AddResult(pos+1,tmask,mi - val) ; }
	}
	return false;
}

int answer()
{
    int i,n,m;
    cin >> n;
    fo(i,0,n)
    {
        cin >> m;
        if(m == 1)return -1;
    }
    return 1;
}

int main()
{

	#ifdef localhost
	freopen("/home/tariqul/APC/Contest/input.txt","r",stdin);
	//freopen("/home/tariqul/APC/Contest/output.txt","w",stdout);
	#endif

    cout << answer() << endl;
	/*init();
	int ans = memo(0,0);
	AddResult(0,0,ans);
	int i;
	foo(i,0,b)
	{
		if(i > 0)cout << " ";
		cout << b[i];
	}
	cout << endl;*/

	return 0;
}
