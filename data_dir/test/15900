#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int N, M, K;

int main()
{
    ios::sync_with_stdio(0);

    cin >> N >> M;
    vector<vector<int> > grid(N, vector<int>(M));
    for (int i = 0; i < N; i++)
        for (int j = 0; j < M; j++)
            cin >> grid[i][j];

    vector<int> ans(N, 0);
    for (int j = 0; j < M; j++)
    {
        int last = 0;
        for (int i = 1; i < N; i++)
            if (grid[i - 1][j] > grid[i][j])
            {
                while (last < i)
                {
                    ans[last] = max(ans[last], i - last);
                    last++;
                }
            }
        while (last < N)
        {
            ans[last] = max(ans[last], N - last);
            last++;
        }
    }

    cin >> K;
    for (int i = 0, ql, qr; i < K; i++)
    {
        cin >> ql >> qr;
        ql--, qr--;
        if (ans[ql] >= qr - ql + 1)
            cout << "Yes\n";
        else
            cout << "No\n";
    }

    return 0;
}
