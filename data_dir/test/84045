/*
ID: essi
LANG: C++
TASK: .cpp
*/

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define sep ios::sync_with_stdio(0),cin.tie(0)
const ll MXi = 1e5 + 5;
vector<int> Tree[MXi];
vector<int> seen(MXi);
int n, u;

void dfs(int node) {
	for (auto adj: Tree[node]) {
		if (seen[adj] == 0) {
			seen[adj] = 1;
			dfs(adj);
		}
	}
}

int main() {
    sep;
    // The question itself has revealed the answer ;)
    cin >> n;
    for (int i = 1; i <= n; ++i) {
    	cin >> u;
    	Tree[i].emplace_back(u);
    	Tree[u].emplace_back(i);
    }
    int res = 0;
    for (int i = 1; i <= n; ++i) {
    	if (seen[i] == 0) {
    		++res;
    		seen[i] = 1;
    		dfs(i);
    	}
    }
    cout << res << "\n";
    return 0;
}
