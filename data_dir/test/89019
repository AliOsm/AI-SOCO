#include<bits/stdc++.h>
using namespace std;
const int N = 2e4 + 30;
mt19937 rng(std::chrono::system_clock::now().time_since_epoch().count());
int n,m,k,a[51][N],dp[50][N],mx[50][N],mx1[50][N],ans;

int main(){
// 	freopen("input.txt","r",stdin);
	scanf("%d%d%d",&n,&m,&k);
	for(int i = 0;i < n;i++){
		for(int j = 1;j <= m;j++){
			scanf("%d",&a[i][j]);
			a[i][j]+=a[i][j - 1];
		}
	}
	for(int i = 1;i + k <= m + 1;i++){
			dp[0][i] = a[0][i + k - 1] - a[0][i - 1];
		ans = max(ans,dp[0][i]);
	}
	for(int i = 1;i < n;i++){
		for(int j = 1;j <= m;j++)mx[i - 1][j] = max(dp[i - 1][j] + a[i][j + k - 1] - a[i][j - 1],mx[i - 1][j - 1]);
		for(int j = m;j + 1;j--)mx1[i - 1][j] = max(dp[i - 1][j] + a[i][j + k - 1] - a[i][j - 1],mx1[i - 1][j + 1]);
		for(int j = 1;j + k <= m + 1;j++){
			if(j - k > 0)dp[i][j] = mx[i - 1][j - k] + a[i][j + k - 1] - a[i][j - 1];
			for(int lol = max(1,j - 2*k);lol + k <= min(m,j + 2*k) + 1;lol++){
				int temp = dp[i - 1][lol] + a[i][lol + k - 1] - a[i][lol - 1];
				temp+=a[i][j + k - 1] - a[i][j - 1];
				int L = max(j,lol);
				int R = min(lol + k - 1,j + k - 1);
				if(L <= R)temp-=a[i][R] - a[i][L - 1];
				dp[i][j] = max(dp[i][j],temp);
			}
			if(j + k <= m)dp[i][j] = max(dp[i][j],mx1[i - 1][j + k] + a[i][j + k - 1] - a[i][j - 1]);
			ans = max(ans,dp[i][j]);
		}
	}
	cout << ans << endl;
}