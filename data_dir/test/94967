//const int N = 5e5+5;
//int should[N],has[N];
//void _(){
//    int m,k,n,s;
//    cin >> m >> k >> n >> s;
//    vi a(m),b(s);
//    cin >> a >> b;
//    for(int x : b)
//        should[x]++;
//    int l = 0, not_sat = 0;
//    for(int i = 0; i < N; ++i)
//        if(should[i])
//            not_sat++;
//    for(int r = 0; r < m; ++r){
//        has[a[r]]++;
//        if(has[a[r]] == should[a[r]])
//            not_sat--;
//        while(r-l >= k && has[a[l]] > should[a[l]]){
//            has[a[l]]--;
//            ++l;
//        }
//        if(r-l+1 >= k && !not_sat && l/k + 1 + (m-(r+1))/k >= n){
//            //watch(l);
//            //watch(r);
//            vi to_del;
//            for(int i = min(l/k,n-1)*k; i < l; ++i)
//                to_del.pb(i+1);
//            vi take,extra;
//            for(int i = l; i <= r; ++i){
//                if(should[a[i]]){
//                    --should[a[i]];
//                    take.pb(i+1);
//                }
//                else
//                    extra.pb(i+1);
//            }
//            while(sz(take) < k){
//                take.pb(extra.back());
//                extra.pop_back();
//            }
//            to_del.insert(to_del.end(),all(extra));
//            print(sz(to_del));
//            print(to_del);
//            return;
//        }
//    }
//    print(-1);
//}
//
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
T1 void print(T x, string end = "\n"){
    cout << x << end;
}
T1 ostream& print(T b, T e, string sep = " ", ostream& stream = cout){
    for(T it = b; it != e; ++it){
        stream << *it;
        if(it + 1 != e)
            stream << sep;
    }
    return stream;
}
T1 void print(vector<T> arr, string sep = " "){
    if(arr.empty()){
        return;
    }
    print(arr.begin(), arr.end(), sep);
    cout << '\n';
}
const int N = 5e5+5;
int should[N],has[N];
void _(){
    int m,k,n,s;
    cin >> m >> k >> n >> s;
    vi a(m),b(s);
    cin >> a >> b;
    for(int x : b)
        should[x]++;
    int l = 0, not_sat = 0;
    for(int i = 0; i < N; ++i)
        if(should[i])
            not_sat++;
    for(int r = 0; r < m; ++r){
        has[a[r]]++;
        if(has[a[r]] == should[a[r]])
            not_sat--;
        while(r-l >= k && has[a[l]] > should[a[l]]){
            has[a[l]]--;
            ++l;
        }
        if(r-l+1 >= k && !not_sat && l/k + 1 + (m-(r+1))/k >= n){
            //watch(l);
            //watch(r);
            vi to_del;
            for(int i = min(l/k,n-1)*k; i < l; ++i)
                to_del.pb(i+1);
            vi take,extra;
            for(int i = l; i <= r; ++i){
                if(should[a[i]]){
                    --should[a[i]];
                    take.pb(i+1);
                }
                else
                    extra.pb(i+1);
            }
            while(sz(take) < k){
                take.pb(extra.back());
                extra.pop_back();
            }
            to_del.insert(to_del.end(),all(extra));
            print(sz(to_del));
            print(to_del);
            return;
        }
    }
    print(-1);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
    }
