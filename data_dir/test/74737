// 10.07.2013
//

/*
155A. �������� � �������
����������� �� ������� �� ����   1 �������
����   input.txt       �����   output.txt
� ���� ���� 2n ��������, �� ������ �� ������� �������� ��������� ����� �����. ����� �� ��������� ����� ���������.
����� ��� �������� ������������� ����������������� ������ ������� �� 1 �� 2n.
�����, ���������� �� �������� � ������� i, ��������� ��� ai.
��� ����, ����� ������� � �������� � ���� ������������� ����, ���� ����� ������� �������� �� ���� ����� �������,
����� � ������ ���� ����� �� ��������� ���� ���������. �������� ���� ��� �������.
������� ������
� ������ ������ �������� ����� ����� n (1 <= n <= 3�10^5).
�� ������ ������ �������� ������������������ �� 2n ������������� ����� ����� a1, a2, ..., a2n (1 <= ai <= 5000) -
�����, ������� �������� �� ���������. ����� � ������ ����������� ���������� ���������.
�������� ������
���� ���������� ������� �������� �� ���� ���, ����� � ������ ���� �� ��������� ���� �������� ���������� �����,
� ������������ ������ �������� ����� -1.
���� �� ������� ��������� ����������, �� �������� n ��� �����, �� ����� ���� � ������ � ������ ��������, ���������� ����.
����� � ����� ���������� ���������. ���� � ����� � ����� ����� �������� � ����� �������.
���� ������� ���������, �������� ����� �� ���.
������� ������
������� ������
3
20 30 10 30 20 10
�������� ������
4 2
1 5
6 3
������� ������
1
1 2
�������� ������
-1


 
*/


# include <stdio.h>
# include <string.h>
# include <math.h>

/*
# include <iostream>

# include <set>

// set <type> S;
// void erase (type)
// void insert (type)
//

# include <map>

// mat <keytype, valtype> M;
// void erase (type)
// void insert (type)
//


# include <queue>

// queue <type> Q;
// priority_queue <type> PQ;

// void erase (type) ???
// void push (type)
// type front ()
// type back ()
// void pop ()
// bool empty ()
// int size ()


*/

# include <vector>

// int size ()
// resize (int)
// void clear ()
// void push_back (type)
// void insert (int, type)


# include <algorithm>

using namespace std;


# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define imax(a,b) ( (a) > (b) ? (a) : (b) )
# define imin(a,b) ( (a) < (b) ? (a) : (b) )

# define isalpha(c) ( (c) >= 'a' && (c) <= 'z' )
# define isAlpha(c) ( (c) >= 'A' && (c) <= 'Z' )
# define isdigit(c) ( (c) >= '0' && (c) <= '9' )


# define convert(x) ( isalpha (x) ? (x)-'a'+'A' : (x) )
# define Convert(x) ( isAlpha (x) ? (x)-'A'+'a' : (x) )


# define sqr(x) ( (x) * (x) )


# define NUM(r,c) ( ((r) << 8) + (c) )
# define ROW(n) ( (n) >> 8 )
# define COL(n) ( (n) & 0XFF )

# define CHECK(r,c) ( (r) >= 0 && (r) < n && (c) >= 0 && (c) < m )



typedef pair <int, int> Pair;
typedef long long int   Long;



const int N = 600400;
const int M = 1000;
const int P = 1000000007;   // 10^9 + 7


int n, m, k, l, d, n2;
Pair a [N];
int p [N], kp;
bool ok;


void Print (int par=0);


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("A.TXT", "r", stdin);
   freopen ("A.OUT", "w", stdout);
# else
   freopen ("INPUT.TXT", "r", stdin);
   freopen ("OUTPUT.TXT", "w", stdout);
# endif

   int i, j;

# ifndef ONLINE_JUDGE
   int nnn;
   scanf ("%d\n", &nnn);
   for ( int iii=0; iii < nnn; iii++ )
   {
      ok = false;
# endif

      scanf ("%d\n", &n);
      n2 = n + n;
      for ( i=0; i < n2; i++ )
      {
         scanf ("%d", &a [i].first);
         a [i].second = i+1;
      }

      sort (a, a+n2);

# ifndef ONLINE_JUDGE
   Print ();
# endif

      for ( i=1; i < n2; i+=2 )
         if ( a [i].first != a [i-1].first )
         {
            ok = true; break;
         }

      if ( ! ok )
         for ( i=1; i < n2; i+=2 )
            printf ("%d %d\n", a [i-1].second, a [i].second );
      else
         printf ("-1");

# ifndef ONLINE_JUDGE
   }
# endif


   return 0;
}

void Print (int par)
{
   if ( par == 0 )
   {
      printf ("\nn2=%d\n", n2);
      for ( int i=0; i < n2; i++ )
         printf (" %d (%d)", a [i].first, a [i].second);
   }
   else
   {

   }
   printf ("\n");
}
