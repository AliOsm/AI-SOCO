#include <bits/stdc++.h>
#define ll  long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc second
#define fr first

using namespace std;

const int MX = 2520;
const int N = 1010;
int k[N];
int m[N];

int go[N][15];

bool inSta[N][MX];
pii st[N*MX+100];
int stn;
pii per[N][MX];
int sz[N][MX];
int rr[N][MX];
bool cyc[N][MX];

pii pr(pii x){
    if(per[x.fr][x.sc] == x)
        return x;
    return per[x.fr][x.sc] = pr(per[x.fr][x.sc]);
}

bool vis[N][MX];

void merg(pii x,pii y){
    x = pr(x);
    y = pr(y);
    cyc[x.fr][x.sc] = 1;
    if(x == y)
        return ;
    if(sz[x.fr][x.sc] < sz[y.fr][y.sc])swap(x,y);
    cyc[x.fr][x.sc] = 1;
    sz[x.fr][x.sc] += sz[y.fr][y.sc];
    per[y.fr][y.sc] = x;

}



void findCyc(int x,int vl){

    vl %= MX;
    vl += MX;
    vl %= MX;
    if(vis[x][vl]){
        if(inSta[x][vl]){
            set<int>st1;
            while(1){
                pii t = st[--stn];


                st1.insert(t.fr);
                pii tt = {x,vl};

                inSta[t.fr][t.sc] = 0;
                merg(t,{x,vl});
                if(t == tt)break;
            }
            pii t = pr({x,vl});
            rr[t.fr][t.sc] = st1.size();
        }
        return ;
    }

    vis[x][vl] = 1;
    inSta[x][vl] = 1;
    st[stn++] = {x,vl};
    int vl1 = vl + k[x];
    vl1 %= MX;
    vl1 += MX;
    vl1 %= MX;

    int y = go[x][vl1%m[x]];

    findCyc(y,vl1);
    if(inSta[x][vl])
        stn--;
    inSta[x][vl] = 0;
}

int res[N][MX];

int f(int x,int vl){
    vl %= MX;
    vl += MX;
    vl %= MX;
    if(vis[x][vl]){
        return res[x][vl];
    }
    pii t = pr({x,vl});
    if(cyc[t.fr][t.sc])
        return rr[t.fr][t.sc];

    vis[x][vl] = 1;

    int vl1 = vl + k[x];
    vl1 %= MX;
    vl1 += MX;
    vl1 %= MX;

    int y = go[x][vl1%m[x]];

    int ans = f(y,vl1);
    return res[x][vl] = ans;
}

int main(){
    int n;
    cin>>n;

    for(int i=0 ; i<=n ;i ++){
        for(int j=0 ;j <MX ; j++){
            per[i][j] = {i,j};
            sz[i][j] = 1;
            cyc[i][j] = 0;
        }
    }

    for(int i=1 ;i <=n ; i++){
        scanf("%d",&k[i]);
    }

    for(int i=1 ;i <=n ; i++){
        scanf("%d",&m[i]);
        for(int j=0 ;j <m[i]; j++){
            scanf("%d",&go[i][j]);
        }
    }
    for(int i=1 ;i <=n ;i ++){
        for(int j=0 ; j<MX; j++){
            if(!vis[i][j])findCyc(i,j);
        }
    }
    memset(vis,0,sizeof vis);
    int q;
    cin>>q;
    int x,y;
    for(int i=0 ;i <q; i++){
        scanf("%d%d",&x,&y);
        y %= MX;
        y += MX;
        y %= MX;
        printf("%d\n",f(x,y));
    }
    return 0;
}
