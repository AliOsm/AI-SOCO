#include<bits/stdc++.h>
using namespace std;

#define MAX 1000006

bool pr[MAX];
vector<int>prime;
map<int,bool>mp;

void seive()
{
    memset(pr,true,sizeof(pr));
    pr[1]=pr[0]=false;
    for(int i=2;i<MAX;i++){
        if(!pr[i])
            continue;
        prime.push_back(i);
        for(int j=i*2;j<MAX;j+=i)
            pr[j]=false;
    }

}
vector<int >v;

int main()
{
    int i,j;
    seive();
    int n;
    cin>>n;
    long long  ans=1LL;
    int  mx=1;
    for(i=0;prime[i]*prime[i]<=n;i++){
        int cnt=0;
        while(n%prime[i]==0){
            n/=prime[i];
            cnt++;
        }
        if(cnt){
            mx=max(mx,cnt);
            ans*=prime[i];
            //cout<<prime[i]<<' '<<cnt<<endl;
            v.push_back(cnt);
        }
    }
    if(n!=1){
        mx=max(mx,1);
        v.push_back(1);
        ans*=n;
    }
    //cout<<mx<<endl;
    int  step=0;

    for(i=1;i<=10000000;){
        mp[i]=true;
        i*=2;
    }
    bool  f1=false,f2=false;
    for(i=1;i<v.size();i++){
        if(v[i]!=v[i-1])f1=true;
    }
    //cout<<mp[7]<<' '<<mp[8]<<endl;
    if(mp[mx]==false){
        while(!mp[mx]){
            mx++;
        }
        //cout<< mx<<endl;
        f2=true;
    }
    if(f1 ||  f2)step++;
    //cout<<mx<<' '<<step<<endl;
    while(mx != 1){
        mx/=2;
        step++;
    }
    cout<<ans<<' '<<step<<endl;


}
