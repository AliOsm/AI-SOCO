#include<bits/stdc++.h>

using namespace std;

const int n_ = 501;
int inf = 501;
int arr[n_];
int n;
int memo[n_][n_];

int dp (int l, int r) {
	int &ret = memo[l][r];
	if(ret != -1) {
		return ret;
	}

	ret = inf;
	for (int i = l; i <= r; i++) {
		if (arr[l] == arr[i]) {
			if(l == i || l + 1 == i) {
				if(i != r) {
					ret = min(ret, 1 + dp(i + 1, r));
				} else {
					ret = min(ret, 1);
				}
			} else {
				if(i != r) {
					ret = min(ret, dp(l + 1, i - 1) + dp(i + 1, r));
				} else {
					ret = min(ret, dp(l + 1, i - 1));
				}
			}
		}
	}
	return ret;
}
int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}

	memset(memo, -1, sizeof memo);
	cout << dp(0, n - 1) << "\n";
}
