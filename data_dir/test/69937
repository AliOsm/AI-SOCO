#include "bits/stdc++.h"
using namespace std;
#ifdef ONLINE_JUDGE
#define trace(...)
#endif

using LL = long long;

LL A, B;

class SegmentTree {
	struct Node {
		Node *lt, *rt;
		LL cnt;
		Node() {
			lt = rt = NULL;
			cnt = 0;
		}
	};

	Node *root;
	int sz;

public:
	SegmentTree(int n) {
		root = new Node;
		sz = 1 << n;
	}
	Node* update_aux(int i, Node *curr, int x, int y) {
		if (i < x || i >= y) return curr;

		if (curr == NULL) curr = new Node;

		if (y - x > 1) {
			curr->lt = update_aux(i, curr->lt, x, (x + y) / 2);
			curr->rt = update_aux(i, curr->rt, (x + y) / 2, y);
		}
		curr->cnt++;
		return curr;
	}
	LL query(Node *curr, int x, int y) {
		if (curr == NULL || curr->cnt == 0) return A;

		LL best = B * 1ll * curr->cnt * 1ll * (y - x);
		if (y - x == 1) return best;

		LL lb = query(curr->lt, x, (x + y) / 2);
		LL rb = query(curr->rt, (x + y) / 2, y);

		return min(best, lb + rb);
	}

	void update(int i) {
		update_aux(i, root, 0, sz);
	}
	LL compute() {
		return query(root, 0, sz);
	}
};

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	int n, k; cin >> n >> k >> A >> B;
	SegmentTree tree(n);
	for (int i = 0; i < k; i++) {
		int a; cin >> a;
		tree.update(a - 1);
	}
	cout << tree.compute() << endl;
	return 0;
}
