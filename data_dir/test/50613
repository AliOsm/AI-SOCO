#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <list>
#include <fstream>
#include <unordered_map>
#include <unordered_set>
#include <array>


using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define lps(i, j, n)        for(int i=(j);i<(int)(n);++i)
#define lpb(i, j, n)        for(int i=(j);i>=(int)(n);--i)
#define ff first
#define ss second
#define setzero(a) memset(a,0,sizeof(a))
#define setdp(a) memset(a,-1,sizeof(a))
#define bits(a) __builtin_popcount(a)

typedef long long                   ll;
typedef long double                 LD;
typedef vector<int>                 vi;
typedef vector<ll>                  vl;

ll suf(ll a){ return (a*(a + 1)) / 2; }

int dx[]{1, -1, 0, 0};
int dy[]{0, 0, 1, -1};
int dx8[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy8[]{0, 0, 1, -1, 1, -1, -1, 1};

const ll  OO = 1e9 + 7;


int main()
{

	int n;
	cin >> n;
	vector<int>v(3003);
	for (int i = 0; i < n; i++){
		int l;
		cin >> l;
		v[l]++;
	}
	for (int i = 1; i < v.size();i++)
		if (v[i] == 0)
		{
			cout << i << endl;
			break;
		}

	//system("pause");
	return 0;
}