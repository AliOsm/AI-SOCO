 ///                                                     ببِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم
#include <bits/stdc++.h>
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define sc   scanf
#define pr   printf
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define siz  strlen
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    300256
#define M    1000000007
#define I    1000000000000000000
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define rep( a, b, c, d )  for( int a = b; a <= c; a += d )
#define rvv( a, b, c, d )  for( int a = b; a >= c; a -= d )
#define en                 printf( "\n" )
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define srtr( c )          sort( c.rbegin(), c.rend() )
#define numcounts          __builtin_popcount
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
const int dx[ ] = { 1, -1, 0, 0 };
const int dy[ ] = { 0, 0, -1, 1 };
using namespace std;
ll tests;
ll a, b, z, res = I, k;
vector < ll > v;
void check( ll x )
{
    ll kk = ( x - ( a % x ) ) % x;
    ll cnt = ( a + kk ) / x * ( b + kk );
    if( cnt == res ){
        k = min( k, kk );
    }
    if( cnt < res )
    {
        res = cnt;
        k = kk;
    }
}
void solve()
{
    sc( "%I64d%I64d", &a, &b );
    z = abs( a - b );
    for( int i = 1; i * i <= z; i ++ )
    {
        if( z % i == 0 )
        {
            check( i );
            check( z / i );
        }
    }
    pr( "%I64d", k );
}
int main()
{
    /*sc( "%I64d", &tests );
    while( tests -- )*/
        solve();
}




















