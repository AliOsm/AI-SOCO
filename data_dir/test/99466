#include<bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp>
//using namespace boost::multiprecision;
using namespace std;
#define PI                      3.1415926535897932384626
#define int                     long long int
#define fi                      first
#define se                      second
#define pq                      priority_queue
#define pb                      push_back
#define endl                    '\n'
#define all(x)                  x.begin(),x.end()
#define pii                     pair<int,int>
#define fill(x,y)               memset(x,y,sizeof(x));
#define fast                    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define hash                    _H
#define lg                      long double         
#define vi                      std::vector<int>
#define SZ(x)                   ((int)x.size())
 
 
 
template<typename T> T pow(T a,T b, int m){T ans=1; while(b>0){ if(b%2==1) ans=(ans*a)%m; b/=2; a=(a*a)%m; } return ans%m; }
template<typename T>T InverseMod(T a,int m){return pow(a,m-2,m);}
template<typename T>int SquareDist(T a,T b){int x = abs(a.fi - b.fi),y = abs(a.se - b.se); return x*x + y*y;}

int n,k;
const int N = 1000+2;
std::vector<int> q(N),s(N);
std::vector<int> v[N],v2[N];


bool match(std::vector<int> &a, std::vector<int> &b) {
    for(int i = 1; i <= n; ++i) {
        if(a[i] != b[i])
            return false;
    }
    return true;
}

void print(int idx) {  
    int a = idx - 1;
    if(((k-a)%2 == 0 and (k-a >= 0))) {
        cout << "YES";
    }
    else {
        return;
    }
    exit(0);
}
void solve() {
    cin >> n >> k;
    for(int i = 1; i <= n; ++i) {
        cin >> q[i];
    }
    for(int i = 1; i < N; ++i) {
        v[i].assign(100+1,0);
        v2[i].assign(100+1,0);
    }
    for(int i = 1; i <= n; ++i) {
        v[1][i] = i;
        v2[1][i] = i;
    }
    for(int i = 1 ; i <= n; ++i) {
        cin >> s[i];
    }
    int idx = -1,idx2 = -1;
    for(int i = 2; i <= k+1; ++i) {
        for(int j = 1; j <= n; ++j) {
            v[i][j] = v[i-1][q[j]];
        }
        if(match(v[i],s)) {
            idx = i;
            break;
        }
    }
    for(int i = 2; i <= k+1; ++i) {
        for(int j = 1; j <= n; ++j) {
            v2[i][q[j]] = v2[i-1][j];
        }
        if(match(v2[i],s)) {
            idx2 = i;
            break;
        }
    }
    if((idx == idx2 and idx ==2 and k > 1) or match(v[1],s)) {
        cout << "NO";
        exit(0);
    }
    if(idx != -1) {
        print(idx);
    }
    if(idx2 != -1) {
        print(idx2);
    }
    cout << "NO";
}  
 
 
signed main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    fast;
    int t = 1;
    //cin >> t;
    while(t--)
        solve();
} 











