#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
const int N = 2005;

int low[N], num[N], cnt;
vector<int> S;
int scc_cnt, scc[N];
int vis[N];
vector<int> g[N];

void tarjanSCC(int u){
    low[u] = num[u] = ++cnt;
    vis[u] = 1;
    S.push_back(u);
    for(int v : g[u]){
        if(!num[v]) tarjanSCC(v);
        if(vis[v]) low[u] = min(low[u], low[v]);
    }
    if(low[u] == num[u]){
        scc[u] = ++scc_cnt; int v;
        do{
            v = S.back(); S.pop_back(); vis[v] = 0;
            scc[v] = scc_cnt;
        }while(u != v);
    }
}

vector<int> h[N];

int f(int u){
    int &ans = vis[u];
    if(~ans) return ans;
    ans = 1;
    for(int v : h[u]){
        ans = max(ans, f(v) + 1);
    }
    return ans;
}

int n, m;
char mat[N][N];

int main(){

    scanf("%d %d", &n, &m);

    for(int i = 0; i < n; i++)
        scanf(" %s", mat[i]);

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(mat[i][j] == '='){
                g[i].push_back(n + j);
                g[n + j].push_back(i);
            }
            if(mat[i][j] == '>'){
                g[i].push_back(n + j);
            }
            if(mat[i][j] == '<'){
                g[n + j].push_back(i);
            }
        }
    }

    for(int i = 0; i < n + m; i++) if(!num[i])
        tarjanSCC(i);

    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(mat[i][j] != '='){
                if(scc[i] == scc[n + j]){
                    printf("No\n");
                    return 0;
                }
            }
        }
    }

    for(int i = 0; i < n + m; i++){
        for(int j : g[i]){
            if(scc[i] == scc[j]) continue;
            h[ scc[i] ].push_back(scc[j]);
        }
    }

    memset(vis, -1, sizeof vis);

    printf("Yes\n");

    for(int i = 0; i < n; i++){
        printf("%d%c", f(scc[i]), " \n"[i + 1 == n]);
    }

    for(int j = 0; j < m; j++){
        printf("%d%c", f(scc[n + j]), " \n"[j + 1 == m]);
    }



}
