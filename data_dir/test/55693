#include<iostream>
#include<map>
#include<algorithm>
#include<cstdio>
#include<string.h>
#include<vector>
using namespace std;
const int inf = 1000000000;
const int MOD = 1000000007;
typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())

int n,m;

int id(int r, int c) {
    return m*r+c;
}

const int N = 1000009;
vector<int> gb[N+1];
int q[N+1];
int val[N+1], cnt[N+1];
int fath[N+1];

int getf(int v) {
    if(v==fath[v]) return v;
    return fath[v]=getf(fath[v]);
}

inline void unite(int x,int y) {
    x=getf(x);
    y=getf(y);
    if(rand()&1) swap(x,y);
    if(x!=y) fath[x]=y;
}

int main() {
    //freopen("input.txt", "r", stdin);//freopen("output.txt", "w", stdout);
    cin>>n>>m;
    vector<vector<int> > a;
    FOR(i,0,n-1) {
        vector<int> temp;
        FOR(j,0,m-1) {
            int x;
            scanf("%d",&x);
            temp.pb(x);
        }
        a.pb(temp);
    }

    FOR(i,0,n*m-1) fath[i]=i;
    vector<pair<int,int> > bb;
    FOR(row,0,n-1) {
        bb.clear();
        FOR(j,0,m-1) bb.pb(mp(a[row][j], j));
        sort(bb.begin(), bb.end());
        FOR(j,1,sz(bb)-1) if(bb[j].first==bb[j-1].first) {
            int p1 = id(row, bb[j-1].second);
            int p2 = id(row, bb[j].second);
            unite(p1, p2);
        }
    }

    FOR(col,0,m-1) {
        bb.clear();
        FOR(i,0,n-1) bb.pb(mp(a[i][col], i));
        sort(bb.begin(), bb.end());
        FOR(j,1,sz(bb)-1) if(bb[j].first==bb[j-1].first) {
            int p1 = id(bb[j-1].second, col);
            int p2 = id(bb[j].second, col);
            unite(p1, p2);
        }
    }

    //FOR(i,0,n*m-1) cerr<<fath[i]<<" ";cerr<<endl;

    vector<pair<int,int> >b;
    FOR(row,0,n+m-1) {
        b.clear();
        if(row<n) FOR(j,0,m-1) b.pb(mp(a[row][j], id(row, j)));
        if(row>=n) FOR(i,0,n-1) b.pb(mp(a[i][row-n], id(i, row-n)));
        sort(b.begin(), b.end());
        FOR(j,1,sz(b)-1) if(b[j].first!=b[j-1].first) {
            int p1 = getf(b[j-1].second);
            int p2 = getf(b[j].second);
            if(p1==p2) continue;
            cnt[p2]++;
            gb[p1].pb(p2);
            //cerr<<p1<<" "<<p2<<endl;
        }
    }


    FOR(i,0,n*m-1) val[i]=1;
    int qt=0, qh=0;
    FOR(i,0,n*m-1) if(cnt[getf(i)]==0) q[qt++]=i, val[i]=1;

    while(qh<qt) {
        int v=q[qh++];
        FOR(i,0,sz(gb[v])-1) {
            int to = gb[v][i];
            val[to]=max(val[to], val[v]+1);
            cnt[to]--;
            if(cnt[to]==0) q[qt++]=to;
        }
    }

    FOR(i,0,n-1) {
        FOR(j,0,m-1) printf("%d ",val[getf(id(i,j))]); printf("\n");
    }
}
