#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;

#define endl '\n'
#define ff first
#define ss second
#define int long long
#define pb push_back
#define f(i,l,r) for(ll i=l;i<=r;i++)
#define rf(i,r,l) for(ll i=r;i>=l;i--)
#define Max 5000001
#define inf 2147483647
#define llinf 9223372036854775807
#define all(v) v.begin(),v.end()
#define bp(n) __builtin_popcountll(n)
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)

#define d0(a) cout<<a<<' ';
#define d1(a) cout<<a<<endl;
#define d2(a,b) cout<<a<<' '<<b<<endl;
#define d3(a,b,c) cout<<a<<' '<<b<<' '<<c<<endl;
#define d4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;
#define d5(a,b,c,d,e) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<endl;
#define d6(a,b,c,d,e,f) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<' '<<f<<endl;

const ll N=2e5+5,mod=1e9+7,bit=61;

ll from[N],hp[N],dmg[N],used[N];
priority_queue<pll> pq;

signed main()
{
    fast;

    ll t=1;
    //cin>>t;
    while(t--)
    {
        ll n,a,b;
        cin>>n>>a>>b;
        ll ans=0,last=0;
        f(i,1,n)
        {
            from[i]=0;
            used[i]=0;
            cin>>hp[i]>>dmg[i];
            ans+=dmg[i];
            if(hp[i]>dmg[i])
            {
                pq.push({hp[i]-dmg[i],i});
            }
        }
        if(b==0)
        {
            cout<<ans<<endl;
            return 0;
        }
        a=(ll)pow(2,a);
        while(b>0 and !pq.empty())
        {
            pll x=pq.top();
            pq.pop();
            used[x.ss]=1;
            from[x.ss]=x.ff;
            ans+=x.ff;
            last=x.ff;
            b--;
        }
        ll fans=ans;
        f(i,1,n)
        {
            ll nhp=hp[i]*a;
            if(used[i])
            {
                ll curr=ans+nhp-dmg[i]-from[i];
                fans=max(fans,curr);
            }
            else
            {
                ll curr;
                if(b==0)
                {
                    curr=ans+nhp-dmg[i]-last;
                }
                else
                {
                    curr=ans+nhp-dmg[i];
                }
                fans=max(fans,curr);
            }
        }
        cout<<fans<<endl;
    }
    return 0;
}














