#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <memory.h>

#define uLL unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<LL>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%I64d", &(a))
#pragma comment (linker, "/STACK:5000000000")
typedef long long ll;
const ll mod = 1000000007;
int Inf = (int)2e9;

using namespace std;
int n, m;
vector<string> a;
int ans = 1000000000;





int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif // DEBUG
	cin >> n >> m;
	a.resize(n);
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
	}
	vector<vector<int>> s(n, vector<int>(3, 100000));
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (a[i][j] >= '0' && a[i][j] <= '9')
				s[i][0] = min(s[i][0], min(j, m - j));
			if (a[i][j] >= 'a' && a[i][j] <= 'z')
				s[i][1] = min(s[i][1], min(j, m - j));
			if (a[i][j] == '*' || a[i][j] == '#' || a[i][j] == '&')
				s[i][2] = min(s[i][2], min(j, m - j));
		}
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			for (int k = j + 1; k < n; k++)
			{
				int t = s[i][0] + s[j][1] + s[k][2];
				t = min(t, s[i][0] + s[j][2] + s[k][1]);
				t = min(t, s[i][1] + s[j][0] + s[k][2]);
				t = min(t, s[i][1] + s[j][2] + s[k][0]);
				t = min(t, s[i][2] + s[j][0] + s[k][1]);
				t = min(t, s[i][2] + s[j][1] + s[k][0]);
				ans = min(ans, t);
			}
		}
	}
	cout << ans;

	return 0;
}