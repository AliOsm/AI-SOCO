#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())

const int N = 5005;
vector<int> a[N];
int c[N], ans[N], n;

int go(int x, int from=-1) {
	int sum=1;
	int dp[N]={};
	dp[0] = 1;
	FOR(it, a[x]) {
		if(*it == from) continue;
		int r = go(*it, x);
		for(int i=sum-1;i>=0;i--) dp[i+r] |= dp[i];
		sum += r;
	}
	c[x]=sum;
	for(int i=0;i<=sum;i++) {
		ans[i+(n-c[x])] |= dp[i];
		ans[i] |= dp[i];
	}
	return c[x];
}
int main(void) {
	scanf("%d", &n);
	for(int i=1;i<n;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	go(1);
	int cnt=0;
	for(int i=1;i<n-1;i++)
		if(ans[i]) ++cnt;
	printf("%d\n", cnt);
	for(int i=1;i<n-1;i++)
		if(ans[i])
			printf("%d %d\n", i, n-1-i);
	return 0;
}
