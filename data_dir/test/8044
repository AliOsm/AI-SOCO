#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>

#define ll long long
#define ld long double
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 1e9;
ll LINF = (ll)4e18;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi
int n;
vvi gr;
vi used;
int sum = 0;
void dfs(int v) {
	used[v] = 1;
	sum++;
	for (int to : gr[v]) {
		if (!used[to]) {
			dfs(to);
		}
	}
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);	
	cin >> n;
	gr.resize(n);
	used.resize(n, 0);
	forn(i, 0, n) {
		int x;
		cin >> x;
		x--;
		gr[i].push_back(x);
		gr[x].push_back(i);
	}
	vi tmp;
	forn(i, 0, n) {
		if (!used[i]) {		
			sum = 0;
			dfs(i);
			tmp.push_back(sum);
		}
	}
	sort(rall(tmp));
	ll ans = 0;
	if (tmp.size() == 1) {
		ans = (ll)tmp[0] * tmp[0];
	}
	else {
		forn(i, 0, tmp.size()) {
			if (!i) {
				tmp[0] += tmp[1];
				ans += (ll)tmp[0] * tmp[0];
				i++;
			}
			else {
				ans += (ll)tmp[i] * tmp[i];
			}
		}
	}
	cout << ans;
	return 0;
}