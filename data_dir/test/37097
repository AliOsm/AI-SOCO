#ifdef DEBUG
#define _GLIBCXX_DEBUG
#endif

#include <bits/stdc++.h>

using namespace std;

mt19937 mrand(random_device{} ()); 

int rnd(int x) {
  return mrand() % x;
}

typedef long double ld;
typedef long long ll;

#ifdef DEBUG
#define eprintf(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)
#else
#define eprintf(...) ;
#endif

#define pb push_back
#define mp make_pair
#define sz(x) ((int) (x).size())
#define TASK "text"

const int inf = (int) 1.01e9;
const ld eps = 1e-9;
const ld pi = acos((ld) -1.0);

void precalc() {
}

const int maxn = 20 + 5;
int a[maxn][maxn];

int n, m;

int read() {
  if (scanf("%d%d", &n, &m) < 2) {
    return 0;
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      scanf("%d", a[i] + j);
      --a[i][j];
    }
  }
  return 1;
}

int x[maxn], y[maxn];

void solve() {
  for (int c = 0; c < m; ++c) {
    for (int d = c; d < m; ++d) {
      bool ok = 1;
      for (int i = 0; i < n; ++i) {
        ok = 0;
        for (int iter = 0; iter < 2; ++iter) {
          int cnt = 0;
          for (int j = 0; j < m; ++j) {
            int x = a[i][j], y = j;
            if (iter) {
              swap(x, y);
            }
            if (x == c) {
              x = d;
            } else {
              if (x == d) {
                x = c;
              }
            }

            if (x == y) {
              ++cnt;
            }
          }
          if (cnt >= m - 2) {
            ok = 1;
            break;
          }
        }
        if (!ok) {
          break;
        }
      }
      if (ok) {
        printf("YES\n");
        return;
      }
    }
  }
  printf("NO\n");
}

int main() {
  precalc();
#ifdef LOCAL
  freopen(TASK ".out", "w", stdout);
  assert(freopen(TASK ".in", "r", stdin));
#endif

  while (1) {
    if (!read()) {
      break;
    }
    solve();
#ifdef DEBUG
    eprintf("Time %.2f\n", (double) clock() / CLOCKS_PER_SEC);
#endif
  }
  return 0;
}
