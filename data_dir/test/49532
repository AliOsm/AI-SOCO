#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;
const int N = 1e9, MID = 1e7;

int q, b, w;
int delta_x[] = {0, 0, 1, -1};
int delta_y[] = {1, -1, 0, 0};
vector<pii> black, white, ans;
map<pii, bool> mark;

void add(pii p) {
	int x = p.first, y = p.second;
	ans.push_back(pii(x, y));
	for (int i = 0; i < 4; i++) {
		int X = x + delta_x[i],
			Y = y + delta_y[i];
		if(mark[pii(X, Y)] == false) {
			if((X + Y) & 1)
				black.push_back(pii(X, Y));
			else
				white.push_back(pii(X, Y));
			mark[pii(X, Y)] = true;
		}
	}
}

void add_black() {
	b--;
	pii p = black.back();
	black.pop_back();
	add(p);
}

void add_white() {
	w--;
	pii p = white.back();
	white.pop_back();
	add(p);
}

void solve() {
	black.clear();
	white.clear();
	ans.clear();
	mark.clear();
	white.push_back(pii(MID, MID));
	mark[pii(MID, MID)] = true;
	black.push_back(pii(MID, MID - 1));
	mark[pii(MID, MID - 1)] = true;

	if(w >= b)
		add_white();
	else
		add_black();
	while(b + w) {
		if(b >= w) {
			if(black.size())
				add_black();
			else
				add_white();
		}
		else {
			if(white.size())
				add_white();
			else
				add_black();
		}
		if(b < 0 || w < 0) {
			cout << "NO\n";
			return;
		}
	}
	cout << "YES\n";
	for (pii p: ans)
		cout << p.first << ' ' << p.second << '\n';
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> q;
	while(q--) {
		cin >> b >> w;
		solve();
	}
	return 0;
}