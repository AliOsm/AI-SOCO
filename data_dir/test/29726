#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 2e6 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

map <int, vector <int>> vec;
ll cnt[Max];
vector <int> pos;

int BS(int x, int ans) {
	int l = x, r = pos.size() - 1;
	int ret = 2e5 + 1;
	while(l <= r) {
		int mid = (l + r) >> 1;
		if(pos[mid] >= ans) {
			ret = mid;
			r = mid - 1;
		} 
		else {
			l = mid + 1;
		}
	}
	//cout<<"Ans " << x << " " << ans << " " << ret << endl;
	return ret;
}

int ok(int mid) {
	ll ans = mid;
	ll tot = 0;
	int cur = 0;

	cur = BS(0, ans);

	//cout << "---" << mid << " " << cur << endl;

	if(cur < pos.size()) {
		tot += 1;
		ans *= 2;
		cur += 1;
		while(1) {
			cur = BS(cur, ans);
			//cout << "---" << mid << " " << cur << endl;
			if(cur >= pos.size()) {
				break;
			}
			ans *= 2;
			tot += 1;
			cur += 1;
		}
	//	printf("Ret %d\n", tot);
		return tot;
	}
	else {
		return tot;
	}
}

int solve(int n, int m) {
	int ret = 0;

	for(int i = 1; i <= m; i++) {
		ret += n;
		n *= 2;
	}

	return ret;
}

int main() {
#ifdef Mr_Emrul
	freopen("inputf.in", "r", stdin);
#endif /// Mr_Emrul

	int n, x;
	scanf("%d", &n);
	vector <int> inp;

	for(int i = 1; i <= n; i++) {
		scanf("%d", &x);

		if(vec[x].size() == 0) {
			inp.push_back(x);
		}

		vec[x].push_back(i);
	}

	for(int x : inp) {
		pos.push_back(vec[x].size());
	}

	sort(pos.begin(), pos.end());

	/*for(int x : pos) {
		printf("pos el %d\n", x);
	}*/
	int l = 1, r = n;
	int ans = 0;

	for(int i = 1; i <= n; i++) {
		int res = ok(i);
		//cout << "Midddddd " << i << " " << res << " " << solve(i, res) << endl;

		if(res) {
			ans = max(ans, solve(i, res));
		}
	}

	printf("%d\n", ans);
	return 0;
}