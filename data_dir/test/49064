#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
#include <memory.h>

#include <time.h>
#pragma comment(linker, "/STACK:100000000")
using namespace std;

#define mp make_pair
#define pb push_back
#define ll long long
#define sz(x) (int)(x).size()

bool vis[4040];
ll v[4040], d[4040], p[4040];

int main()
{
    
    //freopen("input.txt","rt",stdin);
    //freopen("bipartite.in","rt",stdin);
    //freopen("bipartite.out","wt",stdout);
    
    int n;
    scanf("%d", &n);
    for(int i = 0; i < n; i++) {
        scanf("%d %d %d", &v[i], &d[i], &p[i]);
    }
    vector<int> ans;
    int cnt = n;
    while(cnt > 0) {
        int idx = 0;
        for(int i = 0; i < n; i++) {
            if(!vis[i]) {
                vis[i] = true;
                idx = i;
                ans.pb(idx + 1);
                cnt--;
                break;
            }
        }
        ll x = v[idx];
        for(int i = idx + 1; i < n; i++) {
            if(!vis[i]) {
                p[i] -= x;
                x--;
                if(x == 0) break;
            }
        }
        bool ok = true;
        while(ok) {
            ok = false;
            int xxx = -1;
            for(int i = idx + 1; i < n; i++) {
                if(!vis[i] && p[i] < 0) {
                    xxx = i;
                    ok = true;
                    cnt--;
                    vis[xxx] = true;
                    break;
                }
            }
            if(ok) {
                for(int i = xxx + 1; i < n; i++) {
                    p[i] -= d[xxx];
                }
            }
        }
    }
    printf("%d\n", sz(ans));
    for(int i = 0; i < sz(ans); i++) printf("%d ", ans[i]);

    return 0;
}