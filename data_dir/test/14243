#include <bits/stdc++.h>
using namespace std;

const int maxn = 1e5 + 10;
const long long INF = 1e16;

int n;
long long a[maxn];

long long dp[2][maxn];

long long f (int sum, int i)
{
	if (dp[sum][i] == -1)
	{
		if (i > n)
		{
			if (!sum)
				return dp[sum][i] = -INF;

			return 0;
		}

		if (!sum)
			dp[sum][i] = -INF;
		else
			dp[sum][i] = 0;

		if (a[i] % 2 == 0)
			dp[sum][i] = max (dp[sum][i], f (sum, i + 1) + max (0LL, a[i]));
		else
			dp[sum][i] = max (dp[sum][i], max (f (sum, i + 1), f (sum ^ 1, i + 1) + a[i]));
	}

	return dp[sum][i];
}

int main ()
{
	cin.sync_with_stdio (false);
	cin.tie (0);
	cout.tie (0);

	cin >> n;

	for (int i = 1; i <= n; ++i)
		cin >> a[i];

	memset (dp, -1, sizeof (dp));

	cout << f (0, 1) << '\n';

	return 0;
}