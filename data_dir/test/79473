#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define fr(i,n) for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

const int INF = 1e9;
const int N = 100100;
const long double PI = 3.141592653589793238;

int n;
long double x, y; 

struct point {
    
    long double x;
    long double y;
    
} p[N];

long double dist(int i, int j) {
    
    long double dx = p[i].x - p[j].x;
    long double dy = p[i].y - p[j].y;
    
    return sqrt(dx * dx + dy * dy);
}

int main() {
   ios_base::sync_with_stdio(0);
   
   cin >> n;
   cin >> p[0].x >> p[0].y;
   
   fru(i, 1, n) cin >> p[i].x >> p[i].y;    
   
   p[n + 1].x = p[1].x;
   p[n + 1].y = p[1].y;
   
   long double up = 0;
   long double dn = 1e18;
   
   fru(i, 1, n)
   {
       long double d = dist(0, i);

       up = max(up, d);
       dn = min(dn, d);
   }
   
   fru(i, 1, n)
   {
       long double a = dist(0, i);
       long double b = dist(0, i + 1);
       long double c = dist(i, i + 1);
       
       if(a < b)
           swap(a, b);
       
       long double alpha = (b * b + c * c - a * a) / (2 * b * c);
       
       if(acos(alpha) < PI / 2 || alpha == 0)
       {
           long double x = (b * b - a * a + c * c) / (2 * c);
           x = sqrt(b * b - x * x);
           
           dn = min(dn, x);
       }
   }
   
   long double res = up * up * PI - dn * dn * PI;
   
   cout << fixed << setprecision(10) << res;
   
   return 0;
}