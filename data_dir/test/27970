#include <bits/stdc++.h>
//#include <ext/rope>

#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")

#define endl "\n"
#define fi first
#define se second
#define pb push_back
#define last(s) (s)[int((s).size())-1]
#define prelast(s) (s)[int((s).size())-2]
#define all(a) (a).begin(),(a).end()
#define elif else if
#define left asdasd
#define next zaza
#define prev azaz
#define cclear cout<<flush;
#define x0 kerker
//#define time chas
#define y0 lolik
#define kchay ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define files freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define ref svyazi
// #define int long long //
#define real nihuya
using namespace std;
//using namespace __gnu_cxx;


using llong = long long;
using ld = long double;
using itn = int;
using ii = pair<int,int>;
using ull = unsigned long long;
using psi = pair<string, int>;
using ll = pair<llong, llong>;

const llong over999 = 1e9;
const ld over999ld = 1e18+1;
const llong md = 1e9+7;
const ld EPS = 1e-2;
const ld Pi = acos(-1);
const ld nich = 0;
const llong mnogo = 300;


/*logggggggggggggggggggggggggggggggggggggggggggggggggggblyat*/

llong n, m, k, x;
llong c[1001000], last[1001000];
bool blocked[1001000];

int32_t main() {
    kchay;
    
    cin >> n >> m >> k;
    
    for(int i = 1; i <= m; i++){
        cin >> x;
        blocked[x] = true;
    }
    
    for(int i = 1; i <= k; i++){
        cin >> c[i];
    }
    
    if(blocked[0])return cout << -1, 0;
    
    for(int i = 0; i < n; i++){
        if(blocked[i]) {
            last[i] = last[i-1];
        } else {
            last[i] = i;
        }
    }
    llong ans = over999ld;
    for(int i = 1; i <= k; i++){
        llong cur = 0, now = 0;
        while(now < n) {
            now += i;
            cur += c[i];
            if(now < n) {
                if(last[now] == now - i){
                    cur = over999ld;
                    break;
                }
                now = last[now];
            }
        }
        ans = min(ans, cur);
    }
    
    if(ans == over999ld)cout << -1; else cout << ans;
    
    
    
    
	
    
    return 0;
}