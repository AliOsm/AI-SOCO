#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

#define si(a) scanf("%d",&a)
#define MAX 300005
#define MOD 1000000009

int s[4*MAX],lazy[4*MAX][2],ara[MAX],n;

int mod_plus(int a,int b)
{
    return (a+b)%MOD;
}

int mod_mul(long long a,long long b)
{
    return (a*b)%MOD;
}

int mod_min(int a,int b)
{
    return (a-b+MOD)%MOD;
}

int allfib[MAX];

int fib(int a,int b,int k)
{
    if(k==1)
        return a;
    if(k==2)
        return b;
    return mod_plus(mod_mul(a,allfib[k-2]),mod_mul(b,allfib[k-1]));
}

int fibsum(int a,int b,int k)
{
    return mod_min(fib(a,b,k+2),fib(a,b,2));
}

void upd(int id,int l,int r,int sta,int stb)
{
    s[id]=mod_plus(s[id],fibsum(sta,stb,r-l));
    lazy[id][0]=mod_plus(lazy[id][0],sta);
    lazy[id][1]=mod_plus(lazy[id][1],stb);
    return ;
}

void shift(int id,int l,int r)
{
    int mid=(l+r)>>1;
    upd(2*id,l,mid,lazy[id][0],lazy[id][1]);
    int aa=fib(lazy[id][0],lazy[id][1],mid-l+1),bb=fib(lazy[id][0],lazy[id][1],mid-l+2);
    upd(2*id+1,mid,r,aa,bb);
    lazy[id][0]=lazy[id][1]=0;
    return ;
}

void modify(int b,int e,int sta,int stb,int id=1,int l=0,int r=n)
{
    if(b>=r || e<=l) return ;
    if(l>=b && r<=e){
        int aa=fib(sta,stb,l-b+1),bb=fib(sta,stb,l-b+2);
        upd(id,l,r,aa,bb);
        return ;
    }
    shift(id,l,r);
    int mid=(l+r)>>1;
    modify(b,e,sta,stb,2*id,l,mid);
    modify(b,e,sta,stb,2*id+1,mid,r);
    s[id]=mod_plus(s[2*id],s[2*id+1]);
}

int sum(int b,int e,int id=1,int l=0,int r=n)
{
    if(b>=r || e<=l) return 0;
    if(l>=b && r<=e){

        return s[id];
    }
    shift(id,l,r);
    int mid=(l+r)>>1;
    return mod_plus(sum(b,e,2*id,l,mid),sum(b,e,2*id+1,mid,r));
}

int main()
{
    //freopen("input.txt","r",stdin);
    int i,q;
    allfib[1]=allfib[2]=1;
    for(i=3;i<MAX;i++)
        allfib[i]=mod_plus(allfib[i-1],allfib[i-2]);
    si(n);si(q);
    for(i=0;i<n;i++){
        si(ara[i]);
        if(i)
            ara[i]=mod_plus(ara[i],ara[i-1]);
    }
    for(i=0;i<q;i++){
        int type,l,r;
        si(type);si(l);si(r);
        if(type==1)
            modify(l-1,r,1,1);
        else{
            int ans=ara[r-1];
            if(l-1)
                ans=mod_min(ans,ara[l-2]);
            printf("%d\n",mod_plus(ans,sum(l-1,r)));
        }
    }
    return 0;
}
