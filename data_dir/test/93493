#include <cstdio>

#include <vector>

using namespace std;

typedef vector<int> VI;
typedef vector<VI> VVI;
typedef vector<bool> VB;

int N;
VVI adj;
VB vis;
int max_depth;
int deepest_node;
void dfs(int u, int depth = 0) {
   if (depth > max_depth) {
      max_depth = depth;
      deepest_node = u;
   }
   vis[u] = true;
   for (int j = 0; j < adj[u].size(); ++j) {
      int v = adj[u][j];
      if (vis[v]) continue;
      dfs(v, depth+1);
   }
}

int main(int argc, char* argv[]) {
   freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);

   int T;
   scanf("%d", &T);
   int res = 0;
   while (T-- > 0) {
      scanf("%d", &N);
      adj = VVI(N);
      for (int i = 0; i < N-1; ++i) {
         int u, v;
         scanf("%d %d", &u, &v);
         --u, --v;
         adj[u].push_back(v);
         adj[v].push_back(u);
      }
      vis = VB(N);
      max_depth = -1;
      dfs(0);
   //   fprintf(stderr, "deepest_node = %d\n", deepest_node);
   
      vis = VB(N);
      max_depth = -1;
      dfs(deepest_node);
   //   fprintf(stderr, "deepest_node = %d\n", deepest_node);
      res += max_depth;
   }
   printf("%d\n", res);
   return 0;
}
