#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

#define REP(i,n) for( (i)=0 ; (i)<(n) ; (i)++ )
#define rep(i,x,n) for( (i)=(x) ; (i)<(n) ; (i)++ )
#define REV(i,n) for( (i)=(n) ; (i)>=0 ; (i)-- )
#define FORIT(it,x) for( (it)=(x).begin() ; (it)!=(x).end() ; (it)++ )
#define foreach(it,c) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define rforeach(it,c) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();++it)
#define foreach2d(i, j, v) foreach(i,v) foreach(j,*i)
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define SZ(x) ((int)(x).size())
#define MMS(x,n) memset(x,n,sizeof(x))
#define mms(x,n,s) memset(x,n,sizeof(x)*s)
#define pb push_back
#define mp make_pair
#define NX next_permutation
#define UN(x) sort(all(x)),x.erase(unique(all(x)),x.end())
#define CV(x,n) count(all(x),(n))
#define FIND(x,n) find(all(x),(n))-(x).begin()
#define ACC(x) accumulate(all(x),0)
#define PPC(x) __builtin_popcount(x)
#define LZ(x) __builtin_clz(x)
#define TZ(x) __builtin_ctz(x)
#define mxe(x) *max_element(all(x))
#define mne(x) *min_element(all(x))
#define low(x,i) lower_bound(all(x),i)
#define upp(x,i) upper_bound(all(x),i)
#define NXPOW2(x) (1ll << ((int)log2(x)+1))
#define PR(x) cout << #x << " = " << (x) << endl ;

typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

const int OO = (int) 2e9;
const double eps = 1e-9;
const int MAXN = 21;

int n, m;
char G[105][105];
char R[105][105];
bool V[105][105];
vector<pii> arr;

bool inB(int x, int y) {
	return x >= 0 && x < n && y >= 0 && y < n;
}

bool ok(int x, int y) {
	return !inB(x, y) || G[x][y] == 'o' || G[x][y] == 'x';
}

bool valid(int dx, int dy) {
	for (int i = 0; i < m; i++) {
		if (!ok(arr[i].first + dx, arr[i].second + dy))
			return 0;
	}
	for (int i = 0; i < m; i++)
		if (inB(arr[i].first + dx, arr[i].second + dy))
			V[arr[i].first + dx][arr[i].second + dy] = 0;
	return 1;
}

int main() {
	std::ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
//	freopen("in.txt", "rt", stdin);
//	freopen("out.txt", "wt", stdout);
#endif
	cin >> n;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> G[i][j];
			if (G[i][j] == 'o')
				arr.pb(mp(i, j));
			V[i][j] = G[i][j] == 'x';
		}
	}
	m = SZ(arr);
	MMS(R, '.');
	R[n - 1][n - 1] = 'o';
	for (int dx = -n + 1; dx < n; dx++) {
		for (int dy = -n + 1; dy < n; dy++) {
			if (dx || dy) {
				if (valid(dx, dy)) {
					R[n - 1 + dx][n - 1 + dy] = 'x';
				}
			}
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (V[i][j]) {
				cout << "NO\n";
				return 0;
			}
		}
	}
	cout << "YES\n";
	n = 2 * n - 1;
	for (int i = 0; i < n; i++)
		R[i][n] = 0, cout << R[i] << "\n";
	return 0;
}
