#include <bits/stdc++.h>
#define db(x) cout<<#x<<" = "<<x<<"\n"
#define fst first
#define snd second
#define fore(i,a,b) for(int i=a,ThxDem=b;i<ThxDem;++i)
#define pb push_back
#define ALL(s) s.begin(),s.end()
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define SZ(s) int(s.size())
using namespace std;
typedef long long ll;
typedef pair<int,int> ii;

#define oper __gcd
#define NEUT 0
struct STree { // segment tree for min over integers
	vector<int> st;int n;
	STree(int n): st(4*n+5,NEUT), n(n) {}
	void init(int k, int s, int e, vector<int> &a){
		if(s+1==e){st[k]=a[s];return;}
		int m=(s+e)/2;
		init(2*k,s,m,a);init(2*k+1,m,e,a);
		st[k]=oper(st[2*k],st[2*k+1]);
	}
	ii query(int k, int s, int e, int pos, int v){
		if(e<=pos) return {n,NEUT};
		if(pos<=s){
			int gg=__gcd(v,st[k]);
			if(gg>=v) return {n,gg};
			if(s+1==e) return {s,gg};
		}
		int m=(s+e)/2;
		ii r=query(2*k,s,m,pos,v);
		if(r.fst==n) r=query(2*k+1,m,e,pos,__gcd(v,r.snd));
		return r;
	}
	void init(vector<int> &a){init(1,0,n,a);}
	ii query(int pos, int v){return query(1,0,n,pos,v);}
}; // usage: STree rmq(n);rmq.init(x);rmq.upd(i,v);rmq.query(s,e);

int main(){FIN;
	int n; cin>>n;
	vector<int> a(n);
	fore(i,0,n) cin>>a[i];
	STree st(n); st.init(a);
	vector<ii> v;
	fore(i,0,n){
		int now=a[i],pos=i;
		while(pos<n){
			auto nx=st.query(i,now);
			v.pb({now,nx.fst-pos});
			pos=nx.fst;
			now=nx.snd;
		}
	}
	sort(ALL(v));
	vector<pair<int,ll>> ans;
	fore(i,0,SZ(v)){
		if(i&&v[i].fst==v[i-1].fst) ans.back().snd+=v[i].snd;
		else ans.pb(v[i]);
	}
	int q; cin>>q;
	while(q--){
		int x; cin>>x;
		auto it=lower_bound(ALL(ans),(pair<int,ll>){x,-1});
		if(it==ans.end()||it->fst!=x) cout<<"0\n";
		else cout<<it->snd<<"\n";
	}
}