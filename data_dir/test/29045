#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell (ll)998244353
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree< ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
ll add( ll x , ll y )
{
    x %= hell ;
    y %= hell ;
    x += y ;
    return x % hell ;
}
ll mult( ll x , ll y )
{
    x %= hell ;
    y %= hell ;
    ll ans = x ;
    ans = ( ans * y ) % hell ;
    return ans ;
}
ll calc_y( ll x )
{
    vector<ll> digs ;
    ll xx = x ;
    while( xx > 0 )
    {
        digs.pb(xx%10);
        xx /= 10 ;
    }
    ll ans = 0 , fac = 1 ;
    rep( i , 0 , sz(digs) )
    {
        ans = add(ans,mult(digs[i],fac));
        fac = mult(fac,100);
    }
    return ans; 
}
ll calc_x( ll x )
{
    vector<ll> digs ;
    ll xx = x ;
    while( xx > 0 )
    {
        digs.pb(xx%10);
        xx /= 10 ;
    }
    ll ans = 0 , fac = 10 ;
    rep( i , 0 , sz(digs) )
    {
        ans = add(ans,mult(digs[i],fac));
        fac = mult(fac,100);
    }
    return ans; 
}
void solve()
{
    ll n , val = 0 ;
    cin >> n ;
    vector<ll> v(n+5,0) ;
    rep( i , 1 , n + 1 )
    {
        cin >> v[i] ;
        val = add( val , calc_x(v[i]) ) ; 
    }
    ll ans = 0 ;
    rep( i , 1 , n + 1 )
    {
        ans = add( ans , add( val , mult(calc_y(v[i]),n)));
    }
    cout << ans << "\n" ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}

