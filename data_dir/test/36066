#include<iostream>
//#include <bits/stdc++.h>
using namespace std;
#include<algorithm>
#include<map>
#include<vector>
#include <iomanip>
#include <set>
#include<cmath>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
#define int long long
#define mp make_pair
#define db double;
#define ldb long double;
void sp(double y,int x){cout<<fixed<<setprecision(x)<<y;}
int inf=1e9+10;
int const M=2e5+10;
int const M2=1e6+10;
int const M3=1e3+10;
int mod=1e9+7;
vector<int>dig,dig2;
int maxx=0;
char tmp[2];
int pw[M];
map<pii,int> dp;
void ne(int x)
{
    while(x!=0)
        dig.pb(x%2),x/=2;
    int now=0;
    while(dig.size()<27)
        dig.pb(0);
    reverse(dig.begin(),dig.end());
    for(int i=0;i<dig.size();i++)
    {
        now+=pw[i]*dig[i];
        dp[mp(now,i)]++;
    }
    //cerr<<now<<endl;
   // int t;
   // cin>>t;
}
void ol(int x)
{
    while(x!=0)
        dig.pb(x%2),x/=2;
    while(dig.size()<27)
        dig.pb(0);
    reverse(dig.begin(),dig.end());
    int now=0;
    for(int i=0;i<dig.size();i++)
        now+=pw[i]*dig[i],dp[mp(now,i)]--;
}
int check(int x,int y)
{
    int need=x xor y;
    int now=0;
    while(need!=0)
        dig.pb(need%2),need/=2;
    while(x!=0)
    {
        dig2.pb(x%2),x/=2;
    }
    while(dig.size()<27)
        dig.pb(0);
    while(dig2.size()<27)
        dig2.pb(0);
    int ans=0;
    reverse(dig.begin(),dig.end());
    reverse(dig2.begin(),dig2.end());
    for(int i=0;i<dig.size();i++)
    {
        if(dig[i]==dig2[i]){
            now+=dig[i]*pw[i];
            continue;
        }
        now+=(1-dig[i])*pw[i];
        ans+=dp[mp(now,i)];
        now-=pw[i]*(1-dig[i]);
        now+=dig[i]*pw[i];
    }
    return ans;
}
int sa(int x,int y){if(x%y==0)return x/y;return x/y+1;}
int binp(int x,int y){int ans=1;int t=x;while(y!=0){if(y%2==1){ans*=t;ans;}y/=2;t*=t;t;}return ans;}
main(){
	ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	int n;
	cin>>n;
	tmp[0]='0';
	tmp[1]='1';
	pw[0]=1;
	for(int i=1;i<=40;i++)
        pw[i]=pw[i-1]*2;
	while(n--)
    {
        dig.clear();
        dig2.clear();
        int t,x,y;
        cin>>t;
        if(t==1)
            cin>>x,ne(x);
        else if(t==2)
            cin>>x,ol(x);
        else
            cin>>x>>y,cout<<check(x,y)<<endl;
    }
}
