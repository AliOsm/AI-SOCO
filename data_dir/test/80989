#include<bits/stdc++.h>
using namespace std;
int n;
class vec
{
	public:
		int x,y,w,id;
}t,a[20010];
inline bool cmp1(const vec &a,const vec &b)
{
	return a.y!=b.y?a.y<b.y:a.x<b.x;
}
inline bool cmp2(const vec &a,const vec &b)
{
	return (a.x-t.x)*(b.y-t.y)-(a.y-t.y)*(b.x-t.x)<0;
}
int ans[10010];
void solve(int l,int r)
{
	if(l>r)return;
	int c=min_element(a+l,a+r+1,cmp1)-a;
	swap(a[c],a[l]);
	t=a[l];
	sort(a+l+1,a+r+1,cmp2);
	int k,t1=0,t2=0;
	for(k=r;!(t.w!=a[k].w&&t1==t2);k--)
	{
        if(a[k].w==t.w)t1++;
		else t2++;
	}
	if(t.w)ans[a[k].id]=t.id;
	else ans[t.id]=a[k].id;
	solve(l+1,k-1);
	solve(k+1,r);
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=2*n;i++)
	{
		scanf("%d%d",&a[i].x,&a[i].y);
		a[i].w=(i>n);a[i].id=i>n?i-n:i;
	}
	solve(1,n<<1);
	for(int i=1;i<=n;i++)printf("%d\n",ans[i]);
	return 0;
}