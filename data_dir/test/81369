#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i,a,b) for(int i = a; i >= b;--i)
#define REP(i, n) FOR(i, 0, n)
#define F first
#define S second
#define ll long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define sz(f) (int)f.size()
#define vi vector < int > 
#define db(x) cerr << #x << " = " << x << endl
#define db2(x, y) cerr << "(" << #x << ", " << #y << ") = (" << x << ", " << y << ")\n"; 
#define y1 jaksflkajsf
#define pii pair<int,int>
#define pli pair<ll,int>
const int INF = 1000000000;
const int MOD = INF + 7;
const int N = 2e6+5;
const double PI = acos(-1.0);
int arr[N];
int n,a,b;
int gcd(int a, int b) {
	while(a>0 && b>0) {
		if(a>b)a%=b;
		else b%=a;
	}
	return (a+b);
}
ll cnt[N];
ll f(int p) {
	ll res=0;
	int left,right;
	left=-1;
	REP(i,n)cnt[i]=0;
	
	REP(i,n){
		if(arr[i]%p==0){
			cnt[i]=-b;
		} else {
			if((arr[i]+1)%p==0 || (arr[i]-1)%p==0){
				cnt[i]=a-b;
				res+=a;
			} else {
				if(left==-1)
					left=i;
				right=i;
			}
		}
	}
	if(left==-1){
			ll res=0;
			REP(i,n){
				res+=cnt[i]+b;
			}
			ll sum=0;
			ll cur=0;
			REP(i,n){
				sum+=cnt[i];
				if(sum<0)sum=0;
				cur=max(cur,sum);
			}
			res-=cur;
			return res;
	}
	ll cur=0;
	ll r1=0,r2=0;
	REP(i,left){
		cur+=cnt[i]+b;
		ll tmp=cur+1LL*(left-i-1)*b;
		if(i==0 || r1>tmp)r1=tmp;
	}
	cur=0;
	if(right!=n-1){
		r2=1LL*(n-right-1)*b;
		RFOR(i,n-1,right+1){
			cur+=cnt[i]+b;
			ll tmp=cur+1LL*(i-right-1)*b;
			r2=min(r2,tmp);
		}
	}
	res=r1+r2+1LL*(right-left+1)*b;
	return res;
}
ll solve(int val) {
	vi primes;
	for(int d=2;d*d<=val;++d){
		if(val%d==0){
			primes.pb(d);
			while(val%d==0){
				val/=d;
			}
		}
	}
	if(val>1){
		primes.pb(val);
	}
	ll ans=1LL*b*(n-1);
	REP(i,sz(primes)){
		//cout<<primes[i]<<" "<<f(primes[i])<<endl;
		ll res=f(primes[i]);
		ans=min(ans,res);
	}
	return ans;
}
int main() {
//	freopen("input.txt","r",stdin);         
	scanf("%d%d%d",&n,&b,&a);
	int g=0;
	REP(i,n){
		scanf("%d", &arr[i]);
		g=gcd(g,arr[i]);
	}
	if(g>1){
		cout<<0<<endl;
		return 0;
	}
	if(a==0 || b==0){
		cout<<0<<endl;
		return 0;
	}
	//reverse(arr,arr+n);
	ll ans=solve(arr[0]);
	ll tmp=solve(arr[0]+1);
	ans=min(ans,tmp);
	if(arr[0]>2){
		tmp=solve(arr[0]-1);
		ans=min(ans,tmp);
	}
	reverse(arr,arr+n);
	ll res=solve(arr[0]);
	tmp=solve(arr[0]+1);
	res=min(res,tmp);
	if(arr[0]>2){
		tmp=solve(arr[0]-1);
		ans=min(ans,tmp);
	}
	ans=min(ans,res);
	ans=min(ans,1LL*(n-1)*b);
	cout<<ans<<endl;
	return 0;
}	
