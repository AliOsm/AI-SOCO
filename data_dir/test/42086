#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

vector<int> g[101010];
int color[101010];

void dfs(int u, int p) {
	for (int v : g[u]) if (v != p) {
		color[v] = color[u] ^ 1;
		dfs(v, u);
	}
}

int main() {
	int n;
	cin >> n;

	for (int i = 0; i < n - 1; i++) {
		int u, v;
		scanf("%d %d", &u, &v);
		u--;
		v--;
		g[u].push_back(v);
		g[v].push_back(u);
	}

	dfs(0, -1);

	int white = 0;
	int black = 0;
	for (int i = 0; i < n; i++) {
		white += color[i] == 0;
		black += color[i] == 1;
	}

	long long ans = 0;
	for (int i = 0; i < n; i++) {
		int w = white;
		int b = black;
		for (int j : g[i]) {
			w -= color[j] == 0;
			b -= color[j] == 1;
		}
		if (color[i] == 0) {
			ans += b;
		} else {
			ans += w;
		}
	}

	cout << ans / 2 << endl;
}