#include<bits/stdc++.h>
#define MOD 1000000007
#define MOD2 1000000006
#define TEMPMOD1 998244353
#define TEMPMOD2 998244352
#define INF 1000000000000000007
#define NEGINF -1000000000000000007
#define vll vector<ll> 
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define plll pair<ll,pll>
#define vpll vector<pll>
using namespace std;
typedef long long int ll;

struct node
{
    ll freq;
    struct node *next[2];
};

struct node* create()
{
    struct node* new1=new struct node; 
    new1->next[0]=NULL;
    new1->next[1]=NULL;
    new1->freq=0;
    return new1;
}
struct node *trie;
ll n,minreq;

void add(ll num)
{
    struct node* temp=trie;
    ll rem;
    for(ll i=30;i>=0;i--)
    {
        rem=num&(1<<i);
        rem=rem>>i;
        if(temp->next[rem]==NULL)
        {
            temp->next[rem]=create();
        }
        temp=temp->next[rem];
        temp->freq++;
    }
    return;
}

ll greatercount(ll num)
{
    ll ans=0;
    struct node* temp=trie;
    ll rem1,remmin,store;
    for(ll i=30;i>=0;i--)
    {
        rem1=num&(1<<i);
        rem1>>=i;
        remmin=minreq&(1<<i);
        remmin>>=i;
        if(remmin==1)
        {
            if(temp->next[1-rem1]==NULL)
            {
                break;
            }
            temp=temp->next[1-rem1];
        }
        else
        {
            if(temp->next[1-rem1]!=NULL)
            {
                ans+=temp->next[1-rem1]->freq;    
            }
            if(temp->next[rem1]==NULL)
            {
                break;
            }
            temp=temp->next[rem1];
        }
        if(i==0)
        {
            ans+=temp->freq;
        }
    }
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    cin>>n>>minreq;
    trie=create();
    ll prefix[n+1];
    prefix[0]=0;
    for(ll i=1;i<=n;i++)
    {
        cin>>prefix[i];
        prefix[i]^=prefix[i-1];
    }
    ll ans=0;
    for(ll i=0;i<=n;i++)
    {
        ans+=greatercount(prefix[i]);
        add(prefix[i]);
    }
    cout<<ans;
    return 0;
}