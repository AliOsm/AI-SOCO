#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define ll long long int
#define ld long double
#define pb push_back
#define mkp make_pair
#define pii pair<int, int> 
#define pll pair<long long int, long long int>
#define sci(x) scanf("%d", &x)
#define scl(x) scanf("%lld", &x)
#define fi first
#define sc second
#define deb 0

ll par[100001], size[100001];
set <ll> X[100001], Y[100001];
map<ll, ll> mx, my;
ll x[100001], y[100001], F[1000001];

ll inv(ll a)
{
	ll b = MOD - 2, ans = 1;
	while (b) {
		if (b&1) ans = (ans * a) % MOD;
		a = (a * a) % MOD;
		b >>= 1;
	}
	return ans;
}

ll ncr(ll n, ll r)
{
	return (F[n] * inv((F[r] * F[n-r]) % MOD)) % MOD;
}

ll find(ll x)
{
	return x == par[x] ? x : par[x] = find(par[x]);
}

void uni(ll x, ll y)
{
	if ((x = find(x)) != (y = find(y))) par[x] = y, size[y] += size[x];
}


int main()
{
	ios_base::sync_with_stdio(false);cout.tie(0);cin.tie(0);

	ll n, i, j, k;
	cin >> n;
	F[0] = 1;
	for (i = 1; i <= 1000000; ++i) F[i] = (i * F[i-1]) % MOD;
	for (i = 1; i <= n; ++i) {
		par[i] = i;
		size[i] = 1;
	}
	for (i = 1; i <= n; ++i) {
		cin >> x[i] >> y[i];
		if (mx[x[i]] != 0) {
			uni(i, mx[x[i]]);
		}
		if (my[y[i]] != 0) {
			uni(i, my[y[i]]);
		}
		if (mx[x[i]] == 0) mx[x[i]] = i;
		if (my[y[i]] == 0) my[y[i]] = i;
	}
	set <ll> s1, s2;
	for (i = 1; i <= n; ++i) {
		k = find(i);
		s1.insert(x[i]);
		s2.insert(y[i]);
		X[k].insert(x[i]);
		Y[k].insert(y[i]);
	}
	ll ans = 1;
	for (i = 1; i <= n; ++i) {
		if (par[i] == i) {
			ll tmp = 0;
			for (j = 0; j <= size[i] && j <= X[i].size()+Y[i].size(); ++j) {
			        tmp = (tmp + ncr(X[i].size() + Y[i].size(), j)) % MOD;
			}
			ans = (ans * tmp) % MOD;
		}
	}
	cout << ans << endl;

	return 0;
}