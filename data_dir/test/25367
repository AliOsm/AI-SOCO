#define _CRT_SECURE_NO_WARNINGS
#ifdef _MSC_VER
#endif

#include <bits/stdc++.h>
#include <unordered_map>
#include<stack>

using namespace std;

#define OO ll(1e8)
#define MOD ll(1000000007)
#define all(v) (v.begin(), v.end())
#define rall(v) (v.rbegin(), v.rend())
#define sz(a) a.size()
typedef unsigned long long ull;
typedef long long ll;

int dx[] = { 1,1,0,-1,-1,-1,0,1 };
int dy[] = { 0,1,1,1,0,-1,-1,-1 };
bool vis[500][500];
char g[510][510], g1[1111][1111], g2[1111][1111];
int n, m;
void dfs(int i, int j) {
	if (!(i >= 0 && i < n && j >= 0 && j < m))return;
	if (vis[i][j])return;
	vis[i][j] = 1;
	dfs(i + 1, j);
	dfs(i - 1, j);
	dfs(i, j + 1);
	dfs(i, j - 1);
}

int main() {
	bool f = 0;
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> g[i][j];
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (g[i][j] == 'X' && vis[i][j])continue;
			if (g[i][j] == 'X' && f) {
				cout << "NO\n";
				return 0;
			}
			if (g[i][j] == 'X') {
				dfs(i, j);
				f = 1;
			}
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (g[i][j] == '.') {
				if (i + 1 < n && g[i + 1][j] == 'X') {
					if (j + 1 < m && g[i][j + 1] == 'X' || j - 1 >= 0 && g[i][j - 1] == 'X') {
						cout << "NO\n";
						return 0;
					}
				}
				if (i - 1 >= 0 && g[i - 1][j] == 'X') {
					if (j + 1 < m && g[i][j + 1] == 'X' || j - 1 >= 0 && g[i][j - 1] == 'X') {
						cout << "NO\n";
						return 0;
					}
				}
			}
		}
	}
	cout << "YES\n";
}