//      ——By DD_BOND

#include<bits/stdc++.h>

#define fi first
#define se second
#define MP make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define pi 3.1415926535898
#define lowbit(a)  (a&(-a))
#define lson l,(l+r)/2,rt<<1
#define rson (l+r)/2+1,r,rt<<1|1
#define Min(a,b,c)  min(a,min(b,c))
#define Max(a,b,c)  max(a,max(b,c))
#define debug(x)  cerr<<#x<<"="<<x<<"\n";

//#pragma GCC optimize(3)
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

using namespace std;

typedef long long ll;
typedef pair<int,int> P;
typedef pair<ll,ll> Pll;
typedef unsigned long long ull;

const int seed=131;
const ll LLMAX=2e18;
const int MOD=1e9+7;
const double eps=1e-8;
const int MAXN=1e6+10;
const int hmod1=0x48E2DCE7;
const int hmod2=0x60000005;

inline ll sqr(ll x){ return x*x; }
inline int sqr(int x){ return x*x; }
inline double sqr(double x){ return x*x; }
ll __gcd(ll a,ll b){ return b==0? a: __gcd(b,a%b); }
ll qpow(ll a,ll n){ll sum=1;while(n){if(n&1)sum=sum*a%MOD;a=a*a%MOD;n>>=1;}return sum;}
inline int dcmp(double x){	if(fabs(x)<eps) return 0;	return (x>0? 1: -1); }

int a[MAXN],t0[MAXN],t1[MAXN],ans=2*INF;

void dfs(int l,int r,int b,int v){
    if(b==-1){
        ans=min(ans,v);
        return ;
    }
    int ln=0,rn=0;
    for(int i=l;i<=r;i++)
        if(a[i]&(1<<b)) t1[rn++]=a[i];
        else    t0[ln++]=a[i];
    for(int i=l;i<l+ln;i++)     a[i]=t0[i-l];
    for(int i=l+ln;i<=r;i++)    a[i]=t1[i-l-ln];
    if(ln==0||rn==0)       dfs(l,r,b-1,v);
    else{
        dfs(l,l+ln-1,b-1,(1<<b)|v);
        dfs(l+ln,r,b-1,(1<<b)|v);
    }
}

int main(void)
{
	//ios::sync_with_stdio(false);    cin.tie(0);   cout.tie(0);
	// freopen("/My_Mac/Resource/Project__C++/testdata.in","r",stdin);
	//freopen("/My_Mac/Resource/Project__C++/testdata.out","w",stdout);
    int n;  cin>>n;
    for(int i=0;i<n;i++)    cin>>a[i];
    dfs(0,n-1,29,0);
    cout<<ans<<endl;
	return 0;
}
