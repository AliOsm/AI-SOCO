#include <bits/stdc++.h>
using namespace std;
const int N = 26;
int n;
vector <int> a[N];
vector <int> res;
bool vis[N] = {0};
int cnt[N] = {0};

int main() {
    scanf("%d", &n);
    string s; cin >> s;
    for (int i = 1; i < n; i++) {
        string t; cin >> t;
        int j = 0;
        int mi = min((int)s.size(), (int)t.size());
        while (j < mi && s[j] == t[j]) j++;
        if (j == mi) {
            if (s.size() > t.size()) {
                cout << "Impossible" << endl;
                return 0;
            }
            continue;
        }
        a[s[j] - 'a'].push_back(t[j] - 'a');
        s = t;
        cnt[t[j] - 'a']++;
    }
    queue <int> q;
    for (int i = 0; i < N; i++) {
        if (cnt[i] == 0) q.push(i);
    }
    while (q.size()) {
        int u = q.front(); q.pop();
        res.push_back(u); vis[u] = true;
        for (int i = 0; i < a[u].size(); i++) {
            int v = a[u][i];
            if (vis[v]) {
                cout << "Impossible" << endl;
                return 0;
            }
            cnt[v]--;
            if (cnt[v] == 0) q.push(v);
        }
    }
    if (res.size() < N) cout << "Impossible" << endl;
    else for (int i = 0; i < N; i++) cout << char(res[i] + 'a');
}