

   #include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=10000000000;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll fastexp(ll x ,ll n)
{
    ll result =1;
    while(n>0)
    {
        if(n%2==1)
            result*=x;
        x*=x;
        n=n/2;
    }
    return result;
}

ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
bool mycomp(pll &a,pll &b)
{
    if(a.F!=b.F)
        return a.F < b.F;
    else
        return a.S < b.S;
}

int main()
{
    ios;
    ll tests;
    cin>>tests;
    while(tests--)
    {
        ll n,m;
        cin>>n>>m;
        string s;
        cin>>s;
        vector<ll> v(m+1);
        ll i,j;
        for(i=1;i<=m;i++)
            cin>>v[i];
        vector<ll> cnt(26);
        vector<ll> freq(n+3);
        for(i=1;i<=m;i++)
        {
            freq[0]+=1;
            freq[v[i]]-=1;
        }
        for(i=1;i<=n;i++)
            freq[i]+=freq[i-1];
        for(i=0;i<=n;i++)
            freq[i]+=1;
        for(i=0;i<n;i++)
        {
            ll x= s[i]-'a';
            cnt[x]+=freq[i];
        }
        for(i=0;i<26;i++)
            cout<<cnt[i]<<" ";
        cout<<"\n";
        
        
    }
}
