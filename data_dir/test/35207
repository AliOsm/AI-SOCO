#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pf push_front
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("board.in");ofstream out("board.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    int k; cin>>k;
    for(; k; k--){
        ll n,x,y,d; cin>>n>>x>>y>>d;
        if(abs(x-y)%d==0) cout<<abs(x-y)/d<<endl;
        else{
            vec<ll> m;
            if(abs(1-y)%d==0) m.pb(abs(1-y)/d+(x-1+d-1)/d);
            if(abs(n-y)%d==0) m.pb(abs(n-y)/d+(n-x+d-1)/d);
            if(m.size()==0) cout<<-1<<endl;
            else if(m.size()==1) cout<<m[0]<<endl;
            else cout<<min(m[0], m[1])<<endl;
        }
    }
}