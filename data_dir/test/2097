/* @nazarbek.altybay */

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <queue>
#include <cstdlib>
#include <ctime>
#include <cassert>

#define pt pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

typedef unsigned long long ull;
typedef long long ll;

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 1e6 + 7;

const int dx[] = {0, -1, 0, 1};
const int dy[] = {1, 0, -1, 0};

int n, m;
char s[2020];
int a[1010][1010];
int s1[1010][1010];
int s2[1010][1010];

int f1(int x, int y, int xx, int yy) {
  x--;
  y--;
  return s1[xx][yy] - s1[x][yy] - s1[xx][y] + s1[x][y];
}

int f2(int x, int y, int xx, int yy) {
  x--;
  y--;
  return s2[xx][yy] - s2[x][yy] - s2[xx][y] + s2[x][y];
}

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif

  scanf("%d%d", &n, &m);
  for (int i = 1; i <= n; i++) {
    scanf("\n%s", &s);
    for (int j = 1; j <= m; j++) {
      if (s[j - 1] == '#') a[i][j] = 1;
    }
  }
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      if (!a[i][j] && !a[i - 1][j]) s1[i][j] = 1;
      if (!a[i][j] && !a[i][j - 1]) s2[i][j] = 1;
      s1[i][j] += s1[i - 1][j] + s1[i][j - 1] - s1[i - 1][j - 1];
      s2[i][j] += s2[i - 1][j] + s2[i][j - 1] - s2[i - 1][j - 1];
    }
  }
  int q;
  scanf("%d", &q);
  while (q --> 0) {
    int u, l, d, r;
    scanf("%d%d%d%d", &u, &l, &d, &r);
    int ans = 0;
    if (u != d) ans += f1(u + 1, l, d, r);
    if (l != r) ans += f2(u, l + 1, d, r);
    printf("%d\n", ans);
  }
  return 0;
}