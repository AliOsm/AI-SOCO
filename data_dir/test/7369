#include <bits/stdc++.h>
#define FASTIO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define LL long long int
// const int MOD = 998244353;
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
// const LL INF = 1e18 + 7;
const int N = 1e6 + 5;
const int M = 2e5 + 5;
using namespace std;

LL l[N], r[N], sum[N];
void solve() {
  LL sy, a, b;
  cin >> sy >> a >> b;
  sy = -sy;
  int n, i;
  cin >> n;
  for (i=0;i<n;i++) {
    cin >> l[i] >> r[i];
    sum[i] = r[i] - l[i];
    if (i > 0) sum[i] += sum[i-1];
  }
  int q;
  cin >> q;
  while(q--) {
    LL x, y;
    cin >> x >> y;
    int ll, rr, lo=0, hi=n-1, m;

    if (l[hi] * (y + sy) < (a * y + x * sy)) {
      ll = n;
    } else {
      while(lo < hi-1) {
        m = (lo + hi)/2;
        if (l[m] * (y + sy) >= (a * y + x * sy)) hi = m;
        else lo = m;
      }
      if (l[lo] * (y + sy) >= (a * y + x * sy)) hi = lo;
      ll = hi;
    }
    lo = 0; hi = n-1;
    if (r[lo] * (y + sy) > (b * y + x * sy)) {
      rr = -1;
    } else {
      while(lo < hi-1) {
        m = (lo + hi)/2;
        if (r[m] * (y + sy) <= (b * y + x * sy)) lo = m;
        else hi = m;
      }
        if (r[hi] * (y + sy) <= (b * y + x * sy)) lo = hi;
        rr = lo;
    }

    // cout << ll << " " << rr << '\n';

    long double ans = 0;
    if (ll <= rr) {
      ans += sum[rr];
      if (ll > 0) ans -= sum[ll-1];
    }
    ll--;rr++;
    
    // cout << fixed << setprecision(10) << (ans * (y + sy)) / (y) << " curans\n";

    long double ans2 = 0;
    if (ll == rr) {
      // ans += (long double)((b - a) * y) / ((long double)y + sy);
      ans2 += (b - a) * y;
    } else {
      if (ll >= 0 && (a * y + x * sy) <= r[ll] * (y + sy)) {
        // ans += r[ll] - (a * y + x * sy) / ((long double)(y + sy));
        ans += r[ll];
        ans2 -= (a * y + x * sy);
      }
      if (rr < n && b * y + x * sy >= l[rr] * (y + sy)) {
        // ans += (b * y + x * sy) / ((long double)(y + sy)) - l[rr];
        ans -= l[rr];
        ans2 += (b * y + x * sy);
      }
    }
    ans = (ans * (y + sy) + ans2) / ((long double) y);
    cout << fixed << setprecision(10) << ans << '\n';
  }
}

int main() {
  FASTIO;
  int t = 1;
  // cin >> t;
  for (int tc=1;tc<=t;tc++) {
    solve();
  }
  return 0; 
}