#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>

#define f first
#define s second
#define ll long long
#define mp make_pair
#define pb push_back
#define pii pair < int, int >
#define pll pair < long long, long long >
#define forit(it,S) for(typeof(S.begin()) it = S.begin(); it!= S.end(); it++)

using namespace std;
int const maxn = (int)1e5 + 111;
int const inf = (1<<30) - 1;

int n, k, w;
string s;
int sum[11][maxn];


int main (){
    #ifdef LOCAL
    freopen ("input.txt", "r", stdin);
    freopen ("output.txt", "w", stdout);
    #endif

    cin >>n>>k>>w;

    cin >>s;

    for (int i=0;i<s.length();i++){
        for (int j=0;j<k;j++)
            sum[j][i] = (i?sum[j][i-1]:0);
        sum[i%k][i] += (s[i] == '1');
    }

    for(int iter=0;iter<w;iter++){
        int l, r;
        scanf("%d%d", &l, &r);
        l--; r--;
        int need = r%k;
        int len = (r - l + 1)/k;
        int ans = len - (sum[need][r] - (r-len*k>=0?sum[need][r - len*k]:0));

        for (int j=r-1, cnt = 0;cnt < k-1 && j >= 0;j--, cnt++){
            int need = j%k;
            ans += (sum[need][j] - (j-len*k>=0?sum[need][j - len*k]:0));
        }
        printf("%d\n", ans);
    }




    return 0;
}







