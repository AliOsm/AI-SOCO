#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
typedef
tree < pair<int,int>, null_type ,less<pair<int,int>>,
rb_tree_tag,
tree_order_statistics_node_update > ordered_set;

const int N = 1e6 + 100;

ordered_set S;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin >> n >> m;
    vector <int> vert_block(n);
    for(int i = 0; i < n; i++) cin >> vert_block[i];
    sort(vert_block.begin(), vert_block.end());
    vert_block.push_back(1e9);
    vector <pair<int,int>> hor_block;
    for(int i = 0; i < m; i++) {
        int x1, x2, y;
        cin >> x1 >> x2 >> y;
        if(x1 != 1) continue;
        S.insert({x2, i});
    }
    int ans = 1e9;
    for(int i = 0; i < vert_block.size(); i++) {
//        cout << "hey" << endl;
        int cur = i + (int)S.size() - S.order_of_key(make_pair(vert_block[i],0));
        ans = min(ans, cur);
    }
    cout << ans;
    return 0;
}
