#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<double, double> pdd;
typedef pair<int, int> pii;
const ll oo = 1e18;
#define mp make_pair
#define x first
#define y second
const int N = 500010;
const int LOGN = 20;

int n , p[N],c[N];

bool vis[N];

vector<int> cycle;
vector<int> s;

void dfs(int u){
	if(vis[u]){
		while(s.size()){
			cycle.push_back(s.back());
			s.pop_back();
			if(cycle.back()==u)break;
		}
		for(int j = cycle.size()-1; j >= 0 ; --j){
			s.push_back(cycle[j]);
		}
		return;
	}
	vis[u] = 1;
	s.push_back(u);
	dfs(p[u]);
	s.pop_back();
}
int dsu[N];

int find(int u){
	return dsu[u]==u?u:dsu[u]=find(dsu[u]);
}
int main(){
	cin >> n;
	for (int i = 1; i <= n; ++i){
		scanf("%d",&c[i]);
		dsu[i] = i;
	}
	for (int i = 1; i <= n; ++i){
		scanf("%d",&p[i]);
		dsu[find(i)]=find(p[i]);
	}
	ll res = 0;
	for(int j = 1; j <= n ; ++j){
		if(find(j)!=j)continue;
		cycle.clear();
		dfs(j);
		int mn = 1e9;
		for(int j = 0 ;j < cycle.size();++j){
			mn = min(mn,c[cycle[j]]);
		}
		res += mn;
	}
	cout << res << endl;
    return 0;
}