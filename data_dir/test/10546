#include <bits/stdc++.h>

using namespace std;

const int MAX_N = 5e3 + 7;

int n, g[MAX_N], mark[MAX_N];

int highBit(int n)
{
	int k = 1;
	while ((k << 1) <= n) k <<= 1;
	return k;
}

int getZor(string& t)
{
	int i = 0, zor = 0;
	while (i < n)
	{
		if (t[i] == '1')
		{
			int j = i + 1;
			while (j < n && t[j] == '1') ++j;
			zor ^= g[j - i];
			i = j;
		}
		else
			i ++;
	}
	return zor;
}

int mak(string t, int pos)
{
	t[pos - 1] = '0';
	t[pos + 1] = '0';
	t[pos] = '0';
	return getZor(t);
}

int main()
{
//	freopen("input", "r", stdin);
	ios::sync_with_stdio(0);
	string s, t;
	cin >> s;
	n = s.length();
	g[0] = 0, g[1] = 1;
	for (int i = 2; i <= n; ++i)
	{
		mark[g[i - 2]] = i;
		for (int j = 1; j < i - 1; ++j)
			mark[(g[j - 1] ^ g[i - j - 2])] = i;
		while (mark[g[i]] == i) g[i] ++;
	}
	for (int i = 0; i < n; ++i)
	{
		if (i > 0 && i < n - 1 && s[i + 1] == s[i - 1])
			t += "1";
		else
			t += "0";
	}
	int zor = getZor(t);
	if (zor == 0)
		cout << "Second\n";
	else
	{
		cout << "First\n";
		for (int i = 1; i < n - 1; ++i)
			if (t[i] == '1' && mak(t, i) == 0)
			{
				cout << i + 1 << "\n";
				return 0;
			}
	}
}
