// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 200000;

int iiab[N], iiba[N];

int main() {
	int n; cin >> n;
	string s, t; cin >> s >> t;
	int kab = 0, kba = 0;
	for (int i = 0; i < n; i++)
		if (s[i] == 'a' && t[i] == 'b')
			iiab[kab++] = i;
		else if (s[i] == 'b' && t[i] == 'a')
			iiba[kba++] = i;
	if (kab % 2 != kba % 2) {
		cout << "-1\n";
		return 0;
	}
	int k = (kab + kba) / 2;
	if (kab % 2)
		k++;
	cout << k << '\n';
	if (kab % 2) {
		int i = iiab[--kab]; iiba[kba++] = i;
		cout << i + 1 << ' ' << i + 1 << '\n';
	}
	while (kab) {
		int i = iiab[--kab], j = iiab[--kab];
		cout << i + 1 << ' ' << j + 1 << '\n';
	}
	while (kba) {
		int i = iiba[--kba], j = iiba[--kba];
		cout << i + 1 << ' ' << j + 1 << '\n';
	}
	return 0;
}
