#include <bits/stdc++.h>
typedef long long ll;
using namespace std;
vector<vector<int> >g;
void nadaf(){
	for(int i = 1; i < g.size(); i++){
		sort(g[i].begin(), g[i].end());
		g[i].erase(unique(g[i].begin(), g[i].end()), g[i].end());
		int ind = find(g[i].begin(), g[i].end(), i) - g[i].begin();
		if(ind < g[i].size()){
			swap(g[i][ind], g[i][g[i].size() - 1]);
			g[i].erase(g[i].end() - 1);
		}
	}
}

vector<bool>vis;
vector<int>tour;
int cnt = 0, n;
void go(int i){
	vis[i] = 1;
	cnt++;
	tour.push_back(i);
	bool f = 1;
	for(int j = 0; j < g[i].size(); j++){
		if(!vis[g[i][j]]){
			if(!f)
				tour.push_back(i);
			go(g[i][j]);
			f = 0;
		}
	}

	if(cnt < n && !f)
		tour.push_back(i);
}

int main() {
	int m, k; scanf("%d%d%d", &n, &m, &k);
	g.resize(n + 1);
	for(int i = 0; i < m; i++){
		int u, v; scanf("%d%d", &u, &v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	vis.resize(n + 1, 0);
	nadaf();

	go(1);

	vector<vector<int> >res(k);
	int cur = 0;
	for(int i = 0; i < k; i++){
		while(cur < tour.size() && res[i].size() < (2 * n + k - 1) / k)
			res[i].push_back(tour[cur++]);
	}

	for(int i = 0; i < k; i++){
		if(!res[i].size())
			res[i].push_back(1);

		printf("%d", (int)res[i].size());
		for(int j = 0; j < res[i].size(); j++)
			printf(" %d", res[i][j]);
		printf("\n");
	}
	return 0;
}
