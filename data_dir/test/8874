#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <queue>
#include <map>
#include <unordered_map>

#define distance keklolmda
using namespace std;
const int N = 1000228;

pair<long long, int> t[N * 4];

long long s[N * 4];

void modify(int v, int l, int r, int i, long long f) {
    if(l == r) {
        t[v] = make_pair(f, i);
        s[v] = f;
        return;
    }
    int c = (l + r) / 2;
    if(i <= c)
        modify(v << 1, l, c, i, f);
    else
        modify((v << 1) ^ 1, c + 1, r, i, f);
    t[v] = max(t[v << 1], t[(v << 1) ^ 1]);
    s[v] = s[v << 1] + s[(v << 1) ^ 1];
}

long long getsum(int ll, int rr, int l, int r, int v) {
    if(rr < l || r < ll)
        return 0;
    if(ll <= l && r <= rr)
        return s[v];
    int c = (l + r) >> 1;
    return getsum(ll, rr, l, c, v << 1) + getsum(ll, rr, c + 1, r, (v << 1) ^ 1);
}

pair<long long, int> getmax(int ll, int rr, int l, int r, int v) {
    if(rr < l || r < ll)
        return make_pair((long long)-1e18, (int)1e9);
    if(ll <= l && r <= rr)
        return t[v];
    int c = (l + r) >> 1;
    return max(getmax(ll, rr, l, c, v << 1), getmax(ll, rr, c + 1, r, (v << 1) ^ 1));
}

int main() {
    int n, m;
    scanf("%d%d", &n, &m);

    for(int i = 1; i <= n; i++) {
        long long x;
        scanf("%I64d", &x);

        modify(1, 1, n, i, x);
    }

    while(m--) {
        int type;
        scanf("%d", &type);
        if(type == 1) {
            int l, r;
            scanf("%d%d", &l, &r);

            printf("%I64d\n", getsum(l, r, 1, n, 1));
        } else if(type == 2) {
            int l, r;
            long long x;
            scanf("%d%d%I64d", &l, &r, &x);

            while(true) {
                pair<long long, int> p = getmax(l, r, 1, n, 1);
                if(p.first < x)
                    break;
                modify(1, 1, n, p.second, p.first % x);
            }
        } else {
            int i;
            long long x;
            scanf("%d%I64d", &i, &x);

            modify(1, 1, n, i, x);
        }
    }
}


