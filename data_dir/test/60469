//#pragma GCC target("avx2")
//#pragma GCC optimization("O3")
//#pragma GCC optimization("unroll-loops")
//assert(q==w) если q!=w --> runtime error
#include <bits/stdc++.h>

#define pb push_back
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define ub upper_bound
#define lb lower_bound
#define bit __builtin_popcount
#define memset(x) memset(x,0,sizeof(x))

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<vector<int>> matrix;

inline void boost(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

const ll maxn=2e5+123;
const ll inf=1e9+123;
const ll linf=1e18+123;
const ll mod=1e9+7;
const double eps=1e-9;
const double pi=acos(-1);
int dx[8]={0,1,-1,0,1,-1,1,-1};
int dy[8]={1,0,0,-1,1,1,-1,-1};

int main(){
    boost();
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int T;
    cin>>T;
    while(T--){
        string s;
        cin>>s;
        int d=0,l=0,r=0,u=0;
        for(int i=0;i<s.size();i++){
            if(s[i]=='D'){
                d++;
            }
            if(s[i]=='U'){
                u++;
            }
            if(s[i]=='L'){
                l++;
            }
            if(s[i]=='R'){
                r++;
            }
        }
        if(min(l,r)>=1 && min(u,d)==0){
            cout<<"2\nLR\n";
            continue;
        }
        if(min(u,d)>=1 && min(l,r)==0){
            cout<<"2\nUD\n";
            continue;
        }
        if(min(l,r)==0 || min(u,d)==0){
            cout<<"0\n";
            continue;
        }
        string ans="";
        for(int i=1;i<=min(l,r);i++){
            ans+='L';
        }
        for(int i=1;i<=min(u,d);i++){
            ans+='U';
        }
        for(int i=1;i<=min(l,r);i++){
            ans+='R';
        }
        for(int i=1;i<=min(u,d);i++){
            ans+='D';
        }
        cout<<ans.size()<<"\n"<<ans<<"\n";
    }
	exit(0);
}
