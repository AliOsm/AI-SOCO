#include <bits/stdc++.h>
using namespace std;

#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
typedef long long ll;
const ll LINF = (ll)1e18;
ll m;

vector<int> getT(ll h, ll x, ll y, ll a) {
    vector<int> ans;
    for (int i = 0; i < (int)4e6 && ans.size() < 2; i++) {
        if (h == a) {
            ans.push_back(i);
        }
        h = (x * h + y) % m;
    }
    return ans;
}

ll solve(ll a, ll b, ll c, ll d) {
    ll ans = LINF;
    for (int i = 0; i < (int)4e6; i++) {
        ll u = c + d * i;
        if (u == a || (u >= a && b && (u - a) % b == 0)) {
            ans = min(ans, u);
        }
    }
    return ans;
}

int main() {
    ll h1, a1, x1, y1;
    ll h2, a2, x2, y2;
    cin >> m;
    cin >> h1 >> a1 >> x1 >> y1;
    cin >> h2 >> a2 >> x2 >> y2;
    vector<int> c = getT(h1, x1, y1, a1);
    vector<int> d = getT(h2, x2, y2, a2);
    if (!c.size() || !d.size()) {
        cout << -1 << endl;
        return 0;
    }
    if (c.size() == 1) {
        c.push_back(c[0]);
    }
    if (d.size() == 1) {
        d.push_back(d[0]);
    }
    c[1] -= c[0];
    d[1] -= d[0];
    ll cur = min(solve(c[0], c[1], d[0], d[1]), solve(d[0], d[1], c[0], c[1]));
    if (cur == LINF) {
        cout << -1 << endl;
        return 0;
    } else {
        cout << cur << endl;
    }
    return 0;
}