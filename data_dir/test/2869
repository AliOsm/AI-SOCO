
/*             
"IF U BELIEVE WHY NOT!!"
                       --Cristiano Ronaldo
*/             
#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli M=1e9+7;   
#define INF 1000000007
typedef pair<lli,lli> ll;
#define mem(a,x) memset(a,x,sizeof(a))
lli n,k,m;
lli z,q,u,a1,l,r,ax,cx,ay,by,cy,ql,qr,d,x,y;
//unordered_map<pair<ll,lli>,lli> mp;
vector<lli> v[400000];
lli vis[5000005];
lli cd[5000005];
lli a[400000];
lli w[105][105];
lli dp[105][105][105];
void dfs(lli i,lli cnt)
{
    
}
//lli tot=0;
lli me(lli a,lli b,lli M)
{
    if(b==0)
    return 1;
    else if(b%2==0)
    return me((a*a)%M,b/2,M);
    else
    return (a%M*me((a*a)%M,(b-1)/2,M)%M)%M;
}
lli mI(lli a,lli m)
{
    return me(a,m-2,m);
}
lli da[400000];
struct edge
{
    lli a,x,y;
}e[400000];
bool cmp(edge ax,edge bx)
{
    if(ax.a==bx.a)
    {
        if(ax.x==bx.x)
        return ax.y<bx.y;
        return ax.x<bx.x;
    }
    return ax.a>bx.a;
}
int main()
{
cin>>n>>k;
map<lli,lli> dp;
for(int i=1;i<=n;i++)
{
    cin>>x;
    if(i==1)
    dp[i]=x;
    else
    dp[i]=dp[i-1]+x;
}
map<lli,lli> ml,ml1;
for(int i=1;i<=n-m+1;i++)
{
    e[i].a=dp[i+k-1]-dp[i-1];
    e[i].x=i;
    e[i].y=i+k-1;
}
for(int i=n-k;i>=0;i--)
{
    ml[i]=max(ml[i+1],e[i+1].a);
}
for(int i=n-k;i<=n;i++)
{
    ml1[i]=max(ml1[i-1],e[i-k].a);
}
lli mx=-1;
lli xa,ya;
lli mn=0;
for(int i=1;i<=n-k+1;i++)
{
    d=max(ml1[i-1],ml[i+k-1]);
    if(mx<d+e[i].a)
    {
        mx=d+e[i].a;
        mn=d;
        xa=i;
    }
}
for(int i=1;i<=n;i++)
{
    if(e[i].x>xa+k-1||e[i].y<xa)
    {
        if(e[i].a==mn)
        {
            ya=i;
            break;
        }
    }
}
if(xa>ya)
cout<<ya<<" "<<xa;
else
cout<<xa<<" "<<ya;
}
/*
Time:
1:40
*/