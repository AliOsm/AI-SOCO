#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int const N = 100 * 1000 + 16;
int const M = 1000*1000*1000 + 7;

int n, m, k;
int dist[N];
double here[N];
int leaf[N];
vector<int> g[N];
double ans = 0;

void dfs(int u, int p) {
  int cnt = 0;
  dist[u] = dist[p] + 1;

  int kids = g[u].size() - (u!=1);
  
  double o = here[u] / kids;
  // cout << kids << endl;

  for(int v : g[u]) {
    if(v == p)
      continue;
    cnt++;
    here[v] = o;
    dfs(v, u);
  }

  if(not cnt) {
    ans += here[u] * dist[u];
  }
}

int main() {
  cin.tie(0);
  cin.sync_with_stdio(0);

  cin >> n;
  for(int i = 1; i < n; ++i) {
    int u, v;
    cin >> u >> v;
    g[u].emplace_back(v);
    g[v].emplace_back(u);
  }

  dist[0] = -1;
  here[1] = 1.0;
  dfs(1, 0);

  cout << fixed << setprecision(10) << ans;
}