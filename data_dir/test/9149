/* ****revpro**** */
// #pragma GCC target ("avx2")
// #pragma GCC optimization ("O3")
// #pragma GCC optimization ("unroll-loops")
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl       '\n'
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)    
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mii        map<ll,ll>
using namespace std;

#define TIME        cerr << "\nTime elapsed: " << setprecision(5) <<1000.0 * clock() / CLOCKS_PER_SEC << "ms\n";
#define FAST ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define N  100005
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;  
#define ordered_set tree<double, null_type,less<double>, rb_tree_tag,tree_order_statistics_node_update> 
signed main()
{
    
        /***********************************/
    unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();
    mt19937_64 generator (seed);
    /***********************************/
 #ifndef ONLINE_JUDGE
      // for getting input from input.txt
     freopen("input.txt", "r", stdin);
//     // for writing output to output.txt
//     freopen("output1.txt", "w", stdout);
 #endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int TESTS=1;
//    cin>>TESTS;
    while(TESTS--)
    {
        ll n;
        cin>>n;
        ll a[n];
        rep(i,0,n) cin>>a[i];
        ll ans=0;
        rep(i,0,25)
        {
            vi v[2];
            ll cnt=0;
            ll val=1<<i;
            rep(j,0,n)
                v[!!(a[j]&(val))].pb(a[j]&((val)-1));
            // for(auto j:v[0])cout<<j<<' '; cout<<endl;
            //     for(auto j:v[1]) cout<<j<<' ';
            //     cout<<endl;
            sort(all(v[0]));
            sort(all(v[1]));
            if(i)
            {
                for(auto j:v[0])
                    cnt+=lbnd(all(v[1]),(val)-j)-v[1].begin();
                // cout<<cnt<<endl;
                rep(j,0,sz(v[0]))
                    cnt+=min(sz(v[0])-(lbnd(all(v[0]),(val)-v[0][j])-v[0].begin()),sz(v[0])-j-1);
                // cout<<cnt<<endl;
                rep(j,0,sz(v[1]))
                    cnt+=min(sz(v[1])-(lbnd(all(v[1]),(val)-v[1][j])-v[1].begin()),sz(v[1])-(j+1));
                // cout<<cnt<<endl;
                if(cnt%2) ans+=(val);
            }
            else {
                ans+=val*(sz(v[0])%2)*(sz(v[1])%2);
            }
        }   
        cout<<ans<<endl;
    }
    return 0;
}