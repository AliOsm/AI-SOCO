#include <iostream>
#include <vector>
#include <string.h>
#include <deque>
#include <queue>
#include <algorithm>
#include <set>
#include <map>
#include <sstream>
#include <stack>
#include <iomanip>
#include <cmath>
#include <climits>
#include <complex>
#include <cmath>
#define fi first
#define se second
#define th second
#define FI first
#define SE second.first
#define TH second.second

#define M_PI 3.14159265358979311599796346854418516159057617187500

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef long double ld;
typedef complex<double> cd;

const int maxN = 2e5 + 9, MOD = 1e9 + 7, INF = 2e7;

int n, m, q;

int comp[maxN * 2];

int find(int u){
    if(u == comp[u]) return u;
    return comp[u] = find(comp[u]);
}

void unite(int u, int v){
    comp[find(u)] = find(v);
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    cin >> n >> m >> q;
    
    for(int i = 0; i < n + m; i++) comp[i] = i;
    
    for(int i = 0; i < q; i++){
        int x, y;
        cin >> x >> y;
        x--;
        y--;
        
        if(find(x) != find(y + n)){
            unite(x, y + n);
        }
    }
    
    int ans = 0;
    
    for(int i = n; i < n + m; i++){
        if(find(0) != find(i)){
            unite(0, i);
            ans++;
        }
    }
    for(int i = 0; i < n; i++){
        if(find(n) != find(i)){
            unite(n, i);
            ans++;
        }
    }
    
    cout << ans <<'\n';
    
}

/*
 001000000
 000100000
 000010000
 000000000
 000000111
 000000111
 000001111
 
 011110110
 011110110
 011110110
 011110110
 011110110
 000000000
 
 011110110
 011110111
 011110110
 011110110
 011110110
 000000000
 
 000000000
 000101000
 000000000
 000101000
 000000101
 000000000
 000000101
 
 000000000
 000000000
 000000000
 000000000
 000000101
 000000000
 000000101
 
 */
