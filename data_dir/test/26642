#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define forn() for(int i=0;i<n;i++)
#define fori(n) for(ll i=0;i<(ll)n;i++)
#define forj(n) for(ll j=0;j<(ll)n;j++)
#define form(i,a,n) for (int i=(a);i<(n);i++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<unsigned int, unsigned int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 2009000999;
const double eps = 1e-6;
const int maxn = 1e5 + 5;
const int maxk = 51;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);

int a[maxn];
vector<int> p[maxn];
int b[maxn];
vector<int> t[maxn*4];
int n, k;
vector<int>::iterator it1, it2;

void build(int v, int l, int r){
    if(l == r){
        t[v].pb(b[l]);
        return;
    }
    int c = (l + r)/2;
    build(2*v, l, c);
    build(2*v + 1, c + 1, r);
    it1 = t[v*2].begin();
    it2 = t[v*2 + 1].begin();
    while(it1 != t[v*2].end() || it2 != t[v*2 + 1].end()){
        if(it1 != t[v*2].end() &&(*it1 < *it2 || it2 == t[v*2 + 1].end())){
            t[v].pb(*it1);
            it1++;
        }
        else{
            t[v].pb(*it2);
            it2++;
        }
    }
}

int get(int v, int tl, int tr, int l, int r, int lll){
    if(l > r)
        return 0;
    if(tl == l && tr == r){
        r -= l;
        l = 0;
        int m;
        while(l < r){
            m = (l + r)/2;
            if(t[v][m] < lll){
                l = m;
                if(l == r - 1)
                    if(t[v][r] < lll)
                        l++;
                    else
                        r--;
            }
            else
                r = m - 1;
        }
        if(t[v][l] >= lll)
            l--;
        return l + 1;
    }
    int c = (tl + tr)/2;
    return get(v*2, tl, c, l, min(r, c), lll) + get(v*2 + 1, c + 1, tr, max(l, c + 1), r, lll);
}

int main(){
    srand(time(NULL));
    fast_io;

    cin >> n >> k;
    form(i, 0, n)
        cin >> a[i];
    form(i, 0, n){
        if(p[a[i]].size() < k)
            b[i] = -1;
        else
            b[i] = p[a[i]][p[a[i]].size() - k];
        p[a[i]].pb(i);
    }
    build(1, 0, n - 1);
    int q, last = 0;
    cin >> q;
    while(q--){
        int l, r;
        cin >> l >> r;
        l += last;
        r += last;
        l %= n;
        r %= n;
        if(l > r)
            swap(l, r);
        last = get(1, 0, n - 1, l, r, l);
        cout << last << "\n";
    }
    return 0;
}
