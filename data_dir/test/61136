#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef unsigned long long ull;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;

const int N = 100010;
const int MX = 123456;
const int mod = (int)1e9 + 7;
const int base = 1023456789;
const ull BS1 = 10000019ULL;
const int INF = (1 << 29);

template < class T > inline void fastScan(T &x){
    register char c = getchar();
    int neg = 0; x = 0;
    for(   ; (c < 48 || c > 57) && (c != '-'); c = getchar());
    if(c == '-') { neg = 1; c = getchar(); }
    for(   ; c > 47 && c < 58; c = getchar()){
        x = (x << 1) + (x << 3) + c - 48;
    }
    if(neg) x = -x;
}

ll la, ra, ta;
ll lb, rb, tb;

ll P(ll x, ll y, ll gcd){
    ll l1 = la + gcd * x, r1 = ra + gcd * x;
    ll l2 = lb + gcd * y, r2 = rb + gcd * y;
    return max(0ll, min(r1, r2) - max(l1, l2) + 1);
}

int main(){
    fastScan(la); fastScan(ra); fastScan(ta);
    fastScan(lb); fastScan(rb); fastScan(tb);
    if(la > lb){
        swap(la, lb);
        swap(ra, rb);
        swap(ta, tb);
    }
    ll lo = 0, hi = 1ll * 1e9, k = 0;
    ll gcd = __gcd(ta, tb);
    while(lo <= hi){
        ll mid = (lo + hi) / 2;
        if(la + mid * gcd <= lb){
            k = mid;
            lo = mid + 1;
        } else {
            hi = mid - 1;
        }
    }
    ll ans = 0;
    ans = max(ans, min(rb, ra + k * gcd) - max(lb, la + k * gcd) + 1);
    k++;
    ans = max(ans, min(rb, ra + k * gcd) - max(lb, la + k * gcd) + 1);
    printf("%lld\n", ans);
}

/*
372839920 992839201 1000000000
100293021 773829394 999999993
*/
