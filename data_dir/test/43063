#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef unsigned int uint;
typedef long double ld;
//#define ll __int128
#define int ll
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;

#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a,b) make_pair(a,b)
#define modsum(a, b) ((a) + (b) >= M ? (a) + (b) - M : (a) + (b))
#define modsubtract(a, b) ((a) - (b) < 0 ? (a) - (b) + M : (a) - (b))
#define modmultiply(a, b) (((a) * (b)) % M)
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define cint const int &
#define SZ(a) ((int)(a.size()))
#define watch(x) cout << (#x) << " = " << x << endl;

const double PI = atan2(1, 0) * 2;

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";


template<class T>
ostream & operator << (ostream &out, vector<T> &a) {
    out << "{";
    for (auto x : a) out << x << " ";
    return out << "}";
}

void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n";
    cout << "TOTAL EXECUTION TIME: " << float(clock() - start) / CLOCKS_PER_SEC << endl;
#endif
}


int get_balance(const string &s)
{
    int cur = 0;
    for (int i = 0; i < SZ(s); ++i)
    {
        if (s[i] == '(')
            cur++;
        else
            cur--;
    }

    return cur;
}


bool check(string s) {
    int cur = 0, mn = 0;
    for (int i = 0; i < SZ(s); ++i)
    {
        if (s[i] == '(')
            cur++;
        else
            cur--;

        mn = min(mn, cur);
    }

    return mn >= 0 || cur == mn;
}


void smain() {
    int n;
    cin >> n;

    vector<string> chal;
    for (int i = 0; i < n; ++i)
    {
        string s;
        cin >> s;

        if (!check(s))
            continue;

        chal.push_back(s);
    }

    vi vl(SZ(chal));
    for (int i = 0; i < SZ(chal); ++i)
        vl[i] = get_balance(chal[i]);

    map<int, int> cnt;
    int ans = 0;

    for (int v : vl)
    {
        if (cnt[-v])
        {
            cnt[-v]--;
            ans++;
        } else
        {
            cnt[v]++;
        }
    }

    cout << ans << '\n';
}