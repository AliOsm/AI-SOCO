#include <iostream> 
#include <iomanip>
#include <string>
#include <vector>
#include <bitset>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <set>
#include <map>
#include <cassert>
#include <fstream>
#include <numeric>

using namespace std;

#define error(x) cout << #x << " = " << x << endl;
#define FOR(x, a, b) for (int x = (a); x < int(b); x++)
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define X first
#define Y second
#define Size(x) (int((x).size()))
typedef long long ll;
typedef pair<int, int> pii;
#define double long double

const int MAXN = 55;
ll dp[MAXN][MAXN][MAXN][MAXN]; // dp[pos][sum][ignore][cnt];
int n, a[MAXN];
double fac[MAXN];

int main() {
	fac[0] = 1;
	FOR(i, 1, MAXN) fac[i] = fac[i-1]*i;
	cin >> n;
	FOR(i, 0, n) cin >> a[i];
	memset(dp, 0, sizeof dp);
	FOR(i, 0, n) dp[0][0][i][0] = 1;
	int q;
	cin >> q;
	int acc = accumulate(a, a+n, 0);
	if (q >= acc) {
		cout << n << endl;
		return 0;
	}
	FOR(pos, 0, n) FOR(sum, 0, MAXN) FOR(ignore, 0, n) FOR(cnt, 0, n+1) {
		dp[pos+1][sum][ignore][cnt] += dp[pos][sum][ignore][cnt];
		if (pos != ignore && sum+a[pos] < MAXN) dp[pos+1][sum+a[pos]][ignore][cnt+1] += dp[pos][sum][ignore][cnt];
	}
	double tot = 0;
	FOR(sz, 0, n) FOR(i, 0, n) FOR(st, max(q-a[i]+1, 0), min(q, acc-a[i])+1) tot += dp[n][st][i][sz]*fac[sz]*fac[n-sz-1]*sz;
	cout << fixed << setprecision(10) << tot/fac[n] << endl;
	return 0;
}
