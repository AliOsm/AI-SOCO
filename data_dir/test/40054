#include <iostream>
#include <cstring>
#include <string>
using namespace std;

bool vis[52][52];
string grid[52];
int n, m;

int mx[4] = {-1, 0, 1, 0};
int my[4] = {0, -1, 0, 1};

void dfs(int i, int j) {
	if (vis[i][j] || grid[i][j] != '#') return;
	vis[i][j] = true;
	for (int m = 0; m < 4; m++) {
		int ni = i + mx[m];
		int nj = j + my[m];
		dfs(ni, nj);
	}
}

int countcomp() {
	int c = 0;
	memset(vis, 0, sizeof(vis));
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (!vis[i][j] && grid[i][j] == '#') {
				dfs(i, j);
				c++;
			}
		}
	}
	return c;
}

int main() {
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		string s;
		cin >> s;
		grid[i] = '.' + s + '.';
	}
	string s;
	for (int i = 0; i < m + 2; i++) {
		s += '.';
	}
	grid[0] = grid[n + 1] = s;
	n += 2;
	m += 2;
	if (countcomp() > 1) {
		cout << 0 << endl;
		return 0;
	}
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (grid[i][j] == '#') {
				cnt++;
				grid[i][j] = '.';
				if (countcomp() > 1) {
					cout << 1 << endl;
					return 0;
				}
				grid[i][j] = '#';
			}
		}
	}
	if (cnt < 3) {
		cout << -1 << endl;
	} else {
		cout << 2 << endl;
	}
}
