#include <iostream>
#include <vector>
#include <map>

using namespace std;

int a[705];

int g[705][705];

int gcd(int a,int b)
{
    if (!b)
        return a;
    return gcd(b,a%b);
}

//1 2 3 4 5 6 7 8
//4 3 2 1 8 7 6 5
//7 8 1 2 3 4 5 6

int dp[705][705];

int d[100500];

int main()
{
    ios_base::sync_with_stdio(false);
    /*int n;
    cin >> n;
    for (int i=0;i<n;i++)
        cin >> a[i];
    for (int i=0;i<n;i++)
    {
        dp[i][i]=1;
        for (int j=0;j<n;j++)
        {
            g[i][j]=g[j][i]=gcd(a[i],a[j])>1;
        }
        if (i<n-1)
        {
            dp[i][i+1]=g[i][i+1];
        }
    }
    for (int l=3;l<=n;l++)
    {
        for (int i=0;i<n+1-l;i++)
        {

        }
    }*/
    string s;
    cin >> s;
    int n=s.length();
    s+=s;
    d[0]=1;
    int res=1;
    for (int i=1;i<n+n;i++)
    {
        if (s[i]!=s[i-1])
        {
            d[i]=1+d[i-1];
        }
        else
        {
            d[i]=1;
        }
        res=max(res,d[i]);
    }
    cout << min( res,n);
    return 0;
}
