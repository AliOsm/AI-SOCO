#include <iostream>
#include <bits/stdc++.h>

using namespace std;

vector < int > v[1010],v2[1010];
priority_queue < pair < int  , int > , vector < pair < int , int > > , greater < pair < int , int > > > Q;
set < pair < int , int > > st;
set < pair < int , int > >::iterator it;
int dis[1010],n,m,S,E,x,y,Answer = 0,dis2[1010],par[1010];

void dik(int S){

    for(int i=1;i<=n;i++)  dis[i] = 1e6;

    dis[S] = 0;
    Q.push({0,S});
    while(!Q.empty()){
        pair < int , int > x = Q.top();
        Q.pop();

        for(int i=0;i<v[x.second].size();i++){
            if(dis[v[x.second][i]] > dis[x.second] + 1){
                dis[v[x.second][i]] = dis[x.second] + 1;
                Q.push({dis[x.second] + 1 , v[x.second][i]});
            }
        }
    }
}

void dik2(int E){

    for(int i=1;i<=n;i++)  dis2[i] = 1e6;

    dis2[E] = 0;
    Q.push({0,E});
    while(!Q.empty()){
        pair < int , int > x = Q.top();
        Q.pop();

        for(int i=0;i<v[x.second].size();i++){
            if(dis2[v[x.second][i]] >= dis2[x.second] + 1){
                dis2[v[x.second][i]] = dis2[x.second] + 1;
                Q.push({dis2[x.second] + 1 , v[x.second][i]});
            }
        }
    }
}

int main()
{
    cin>>n>>m>>S>>E;
    while(m--){
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
        st.insert({x,y});
        st.insert({y,x});
    }
    dik(S);
    dik2(E);
    for(int i=1;i<=n;i++){
        for(int j=i+1;j<=n;j++){
            it = st.find({i,j});
            if(it==st.end() && dis[i] + dis2[j] + 1 >= dis[E] && dis[j] + dis2[i] +1 >= dis[E]){
                Answer++;
            }
        }
    }
    cout<<Answer;
    return 0;
}
