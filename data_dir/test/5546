//g++  5.4.0

#include<bits/stdc++.h>
using namespace std;

#define ff first
#define ss second
#define int long long
#define all(v) sort(v.begin(),v.end())
#define pb push_back
#define pii pair< int,int >
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0) ;

int val(int x,int y,int z)
{
    return (x-y)*(x-y)+(y-z)*(y-z)+(x-z)*(x-z);
}
signed main()
{
    fast;
    int t;
    cin >> t;
    while( t-- )
    {
        int a,b,c;
        cin >> a >> b >> c;
        vector<int> xa(a) , xb(b) , xc(c);
        for(int i=0 ; i<a ; i++ ) cin>>xa[i];
        for(int i=0 ; i<b ; i++ ) cin>>xb[i];
        for(int i=0 ; i<c ; i++ ) cin>>xc[i];
        all(xa);
        all(xb);
        all(xc);
        int ans = 4e18;
        
        // a centre
        for( auto &i : xa )
        {
            auto p = upper_bound( xb.begin() , xb.end() , i );
            if( p == xb.begin() ) continue;
            p--;
            auto q = lower_bound( xc.begin() , xc.end() , i );
            if( q == xc.end() ) continue;
            
            ans = min( ans , val( i, *p , *q ));
        }
        
        for( auto &i : xa )
        {
            auto p = upper_bound( xc.begin() , xc.end() , i );
            if( p == xc.begin() ) continue;
            p--;
            auto q = lower_bound( xb.begin() , xb.end() , i );
            if( q == xb.end() ) continue;
            
            ans = min( ans , val( i, *p , *q ));
        }
        // b centre
        
        for( auto &i : xb )
        {
            auto p = upper_bound( xa.begin() , xa.end() , i );
            if( p == xa.begin() ) continue;
            p--;
            auto q = lower_bound( xc.begin() , xc.end() , i );
            if( q == xc.end() ) continue;
            
            ans = min( ans , val( i, *p , *q ));
        }
        for( auto &i : xb )
        {
            auto p = upper_bound( xc.begin() , xc.end() , i );
            if( p == xc.begin() ) continue;
            p--;
            auto q = lower_bound( xa.begin() , xa.end() , i );
            if( q == xa.end() ) continue;
            
            ans = min( ans , val( i, *p , *q ));
        }
        // c centre
        
        for( auto &i : xc )
        {
            auto p = upper_bound( xa.begin() , xa.end() , i );
            if( p == xa.begin() ) continue;
            p--;
            auto q = lower_bound( xb.begin() , xb.end() , i );
            if( q == xb.end() ) continue;
            
            ans = min( ans , val( i, *p , *q ));
        }
        for( auto &i : xc )
        {
            auto p = upper_bound( xb.begin() , xb.end() , i );
            if( p == xb.begin() ) continue;
            p--;
            auto q = lower_bound( xa.begin() , xa.end() , i );
            if( q == xa.end() ) continue;
            
            ans = min( ans , val( i, *p , *q ));
        }
        cout << ans << '\n';
    }
}