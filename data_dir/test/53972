/*
0510B. Fox And Two Dots
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const ll prime = 998244353;

int n, m, c;
char grid[51][51] = {'?'};
bool visited[51][51] = {false}, flag;

void dfs(int i, int j, int sx, int sy){
  visited[i][j] = true;
  if((i>0) && (grid[i-1][j] == c)){
    if(!visited[i-1][j]){dfs(i-1,j,i,j);}
    else if((i-1!=sx) || (j!=sy)){flag = true;}
  }
  if((j>0) && (grid[i][j-1] == c)){
    if(!visited[i][j-1]){dfs(i,j-1,i,j);}
    else if((i!=sx) || (j-1!=sy)){flag = true;}
  }
  if((i<n-1) && (grid[i+1][j] == c)){
    if(!visited[i+1][j]){dfs(i+1,j,i,j);}
    else if((i+1!=sx) || (j!=sy)){flag = true;}
  }
  if((j<m-1) && (grid[i][j+1] == c)){
    if(!visited[i][j+1]){dfs(i,j+1,i,j);}
    else if((i!=sx) || (j+1!=sy)){flag = true;}
  }
}

int main(){
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  cin >> n >> m;
  for(int i=0; i<n; i++){cin >> grid[i];}
  for(int i=0; i<n; i++){
    for(int j=0; j<m; j++){
      flag = false; c = grid[i][j];
      if(!visited[i][j]){dfs(i,j,i,j);}
      if(flag){cout << "Yes"; return 0;}
    }
  }
  cout << "No";
  return 0;
}