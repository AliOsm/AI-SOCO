#include <bits/stdc++.h>
using namespace std;
#define read            freopen("C:\\Users\\Dell\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\Dell\\Desktop\\out.txt", "w", stdout)
#define pii             pair<int , int >
#define inf             111111111
#define linf            9111111111111111111
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pn              printf("\n");
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b ,c)    printf("%d %d %d\n", a, b, c)
#define MP              make_pair
#define vi              vector<int >
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of int
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

/* ***************************************************************************************
   *************************************************************************************** */
const int M=100010;
vi G[M];
int ind[M], A[M], pos[M];
pii E[M];
queue<int>q;
int main()
{
#ifndef ONLINE_JUDGE
    read;
#endif
    int i, j, k, n, m, u, v, cnt;

    in2(n, m);
    MEM(ind, 0);
    for (i=0; i<m; i++)
    {
        in2(u, v);
        G[u].pb(v);
        E[i]=MP(u, v);
        ind[v]++;
    }
    for (i=1; i<=n; i++) if (ind[i]==0) q.push(i);

    if (q.sz>1) ext("-1");
    int id=0;

    while (!q.empty())
    {
        u=q.front();
        q.pop();

        A[id]=u;
        pos[u]=id;
        id++;

        for (i=0; i<G[u].sz; i++)
        {
            v=G[u][i];
            ind[v]--;

            if (ind[v]==0)
            {
                q.push(v);
            }
        }
    }

    cnt=0;
    for (i=0; i<m; i++)
    {
        u=E[i].first;
        v=E[i].second;

        if (pos[v]==pos[u]+1)
        {
            cnt++;
            if (cnt==n-1)
            {
                pr(i+1);
                return 0;
            }
        }
    }

    pr(-1);

return 0;
}
