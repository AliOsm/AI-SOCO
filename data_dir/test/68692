#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
using namespace std;
int dir[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}}, visited[1010][1010], n;
pair<int, int> A[1010][1010];
char val[1010][1010];
string rt = "UDLR", ry = "DURL";
int mk = 0;
void dfs1(int x, int y){
	visited[x][y] = 1;
	for(int i = 0; i < 4; i++){
		int p = x + dir[i][0];
		int q = y + dir[i][1];
		if(p >= 1 && p <= n && q >= 1 && q <= n && !visited[p][q] && A[p][q] == A[x][y]){
			val[p][q] = ry[i];
			dfs1(p, q);
		}
	}
}
void dfs2(int x, int y){
	visited[x][y] = 1;
	int ct = 0;
	for(int i = 0; i < 4; i++){
		int p = x + dir[i][0];
		int q = y + dir[i][1];
		if(p >= 1 && p <= n && q >= 1 && q <= n && A[p][q] == A[x][y]){
			ct++;
			val[p][q] = ry[i];
			val[x][y] = rt[i];
			if(!visited[p][q])
				dfs2(p, q);
		}
	}
	if(!ct)
		mk = 1;
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n;
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			cin >> A[i][j].first >> A[i][j].second;
		}
	}
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			if(A[i][j].first == i && A[i][j].second == j){
				dfs1(i, j);
				val[i][j] = 'X';
			}
		}
	}
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			if(!visited[i][j] && A[i][j].first != -1){
				cout << "INVALID\n";
				return 0;
			}
		}
	}
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			if(!visited[i][j] && A[i][j].first == -1){
				dfs2(i, j);
			}
		}
	}
	if(mk){
		cout << "INVALID\n";
	}
	else{
		cout << "VALID\n";
		for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n; j++)
				cout << val[i][j];
			cout << '\n';
		}
	}

}