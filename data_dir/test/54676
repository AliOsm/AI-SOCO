#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e5+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define int ll

#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int n;
int d[maxn];
int l1[maxn],r1[maxn],l2[maxn],r2[maxn];
int check1[maxn],check2[maxn];

int pre1[maxn*4],pre2[maxn*4],suf1[maxn*4],suf2[maxn*4];

int32_t main()
{
    IOS
    mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
    cin>>n;
    for (int i=1;i<=n;i++) d[i]=rng();
    vector<int> values;

    for (int i=1;i<=n;i++)
    {
        cin>>l1[i]>>r1[i]>>l2[i]>>r2[i];
        values.pb(l1[i]);
        values.pb(r1[i]);
        values.pb(l2[i]);
        values.pb(r2[i]);
    }

    sort(all(values));
    values.resize(unique(all(values))-values.begin());

    for (int i=1;i<=n;i++)
    {
        l1[i]=lower_bound(all(values),l1[i])-values.begin()+1;
        l2[i]=lower_bound(all(values),l2[i])-values.begin()+1;
        r1[i]=lower_bound(all(values),r1[i])-values.begin()+1;
        r2[i]=lower_bound(all(values),r2[i])-values.begin()+1;
        suf1[l1[i]]^=d[i];
        suf2[l2[i]]^=d[i];
        pre1[r1[i]]^=d[i];
        pre2[r2[i]]^=d[i];
    }

    for (int i=400004;i>=0;i--) suf1[i]^=suf1[i+1],suf2[i]^=suf2[i+1];
    for (int i=1;i<=400004;i++) pre1[i]^=pre1[i-1],pre2[i]^=pre2[i-1];

    for (int i=1;i<=n;i++)
    {
        check1[i]=(pre1[l1[i]-1]^suf1[r1[i]+1]);
        check2[i]=(pre2[l2[i]-1]^suf2[r2[i]+1]);
        if (check1[i]!=check2[i]) return cout<<"NO"<<endl,0;
    }
    cout<<"YES"<<endl;
}

