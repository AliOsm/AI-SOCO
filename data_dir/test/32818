#include<bits/stdc++.h>

#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define emp What is it
#define SORRY FUL Accepted 
#define dimash the top one
#define I wish 
#define you be a little more calm
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)
#define int long long
using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 123;
const ll INF = 1e18 + 9;
const int minn = 1e5 + 9;
const int N = 5e3 + 123;                                          
const int NN = 5e5 + 123;
const int PRI = 555557;
const int pri = 997;

int n, a[NN], dp[NN][2];
pair<string, string> s[NN];

main () {
  // 	#ifdef ONLINE_JUDGE
//be//	freopen(".in", "r", stdin);
//st//	freopen(".out", "w", stdout);	
 //	#endif */
	cin >> n;
	for (int i = 1; i <= n; i ++) {
		cin >> a[i];
	}
	for (int i = 1; i <= n; i ++) {
		cin >> s[i].F;
		s[i].S = s[i].F;
		reverse(all(s[i].S));
	}
	dp[1][1] = 0ll;
	dp[1][2] = a[1];
	for (int i = 2; i <= n; i ++) {
		dp[i][1] = dp[i][2] = INF;
		if(s[i].F >= s[i - 1].F) {
			dp[i][1] = min(dp[i][1], dp[i - 1][1]);
		}
		if(s[i].F >= s[i - 1].S) {
			dp[i][1] = min(dp[i][1], dp[i - 1][2]);
		}
		if(s[i].S >= s[i - 1].F) {
			dp[i][2] = min(dp[i][2], dp[i - 1][1] + a[i]);
		}
		if(s[i].S >= s[i - 1].S) {
			dp[i][2] = min(dp[i][2], dp[i - 1][2] + a[i]);
		}
		if(min(dp[i][1], dp[i][2]) == INF) {
			cout << -1;
			return 0;
		}
	}
	cout << min(dp[n][1], dp[n][2]);	
}