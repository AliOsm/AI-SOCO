#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define pb push_back
#define mp make_pair
map<pair<ll,ll>,bool>valid,vis;
bool flag=false;
map<pair<ll,ll>,ll>level;
void bfs(pair<ll,ll>p)
{
	vis[p]=true;
	level[p]=0;
	queue<pair<ll,ll> >q;
	q.push(p);
	while(!q.empty())
	{
		pair<ll,ll>z=q.front();
		q.pop();
		if(valid[mp(z.first+1,z.second)] && !vis[mp(z.first+1,z.second)])
		{
			vis[mp(z.first+1,z.second)]=true;
			level[mp(z.first+1,z.second)]=level[z]+1;
			q.push(mp(z.first+1,z.second));
		}
		if(valid[mp(z.first,z.second+1)] && !vis[mp(z.first,z.second+1)])
		{
			vis[mp(z.first,z.second+1)]=true;
			level[mp(z.first,z.second+1)]=level[z]+1;
			q.push(mp(z.first,z.second+1));
		}
		if(valid[mp(z.first+1,z.second+1)] && !vis[mp(z.first+1,z.second+1)])
		{
			vis[mp(z.first+1,z.second+1)]=true;
			level[mp(z.first+1,z.second+1)]=level[z]+1;
			q.push(mp(z.first+1,z.second+1));
		}
		if(valid[mp(z.first+1,z.second-1)] && !vis[mp(z.first+1,z.second-1)])
		{
			vis[mp(z.first+1,z.second-1)]=true;
			level[mp(z.first+1,z.second-1)]=level[z]+1;
			q.push(mp(z.first+1,z.second-1));
		}
		if(valid[mp(z.first-1,z.second)] && !vis[mp(z.first-1,z.second)])
		{
			vis[mp(z.first-1,z.second)]=true;
			level[mp(z.first-1,z.second)]=level[z]+1;
			q.push(mp(z.first-1,z.second));
		}
		if(valid[mp(z.first,z.second-1)] && !vis[mp(z.first,z.second-1)])
		{
			vis[mp(z.first,z.second-1)]=true;
			level[mp(z.first,z.second-1)]=level[z]+1;
			q.push(mp(z.first,z.second-1));
		}
		if(valid[mp(z.first-1,z.second-1)] && !vis[mp(z.first-1,z.second-1)])
		{
			vis[mp(z.first-1,z.second-1)]=true;
			level[mp(z.first-1,z.second-1)]=level[z]+1;
			q.push(mp(z.first-1,z.second-1));
		}
		if(valid[mp(z.first-1,z.second+1)] && !vis[mp(z.first-1,z.second+1)])
		{
			vis[mp(z.first-1,z.second+1)]=true;
			level[mp(z.first-1,z.second+1)]=level[z]+1;
			q.push(mp(z.first-1,z.second+1));
		}	
	}

}
int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    ll n,x0,y0,x1,y1;
    cin>>x0>>y0>>x1>>y1>>n;
    for(int i=0;i<n;i++)
    {
    	ll r,a,b;
    	cin>>r>>a>>b;
    	for(int j=a;j<=b;j++)
    		valid[mp(r,j)]=true;
    }
    bfs(mp(x0,y0));
    if(level[mp(x1,y1)]==0)
    	cout<<"-1"<<endl;
    else
    	cout<<level[mp(x1,y1)]-level[mp(x0,y0)]<<endl;
    return 0;
}		