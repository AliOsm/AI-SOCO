//AUTHOR : TIRTH JARSANIA
//COLLEGE : DAIICT
//TOPIC : DP ON TREES

#pragma optimize("", off)
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma comment(linker, "/STACK:36777216")
#include<bits/stdc++.h>
using namespace std;

#define INF LONG_LONG_MAX
#define MINF LONG_LONG_MIN
#define pi acos(-1)
#define bp __builtin_popcount
#define ll long long int
#define ld long double
#define pii pair<ll , ll>
#define For(i,a,b) for(ll i=a;i<b;i++)
#define Fori(i,a,b,p) for(ll i=a;i<b;i+=p)
#define Ror(i,a,b) for(ll i=a;i>b;i--)
#define Rori(i,a,b,p) for(ll i=a;i>b;i-=p)

#define precision(x,d) cout<<fixed<<setprecision(d)<<x
#define minQueue priority_queue<pii,vector<pii>,greater<pii> > 
#define maxQueue priority_queue<pii> 

#define pb push_back
#define pf push_front
#define ff first
#define ss second
#define FILL(a,b) memset((a),(b),sizeof((a)))
#define FAST ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);srand(time(NULL))

const ll N = 1e5+5;
vector<ll > c(N) ;
vector<ll > g[N];
bool f1 = 0;
bool f2 = 0;

bool checker(ll v,ll p)
{
    ll x = c[v];
    for(auto &it : g[v])
    {
        if(it != p)
        {
            bool y = checker(it , v);
            if(!y)
                return 0;
            if(p != 0)
            {
                if(x != c[it])
                    return 0;
            }
        }
    }
    return 1;
}

int main()
{
    FAST;
    ll n;
    cin >> n;
    set<ll> s;
    For(i,0,n-1)
    {
        ll u ,v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    For(i,1,n+1)
    {
        cin >> c[i];
        s.insert(c[i]);
    }
    if(s.size() == 1)
    {
        cout << "YES\n1";
        return 0;
    }
    For(i,1,n+1)
    {
        For(j,0,g[i].size())
        {
            if(c[i] != c[g[i][j]])
            {
                f1 = checker(i,0);
                f2 = checker(g[i][j],0);
                if(f1)  return cout << "YES\n" << i ,0;
                if(f2)  return cout << "YES\n" << g[i][j] ,0;
                return cout << "NO\n",0;
            }
        }
    }
}
