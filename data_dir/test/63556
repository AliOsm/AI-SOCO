#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	const ll oo = 1e15;
	
	int t;
	cin >> t;
	
	while(t--){
		
		int n;
		cin >> n;
		
		vector<ll> v(n + 5, -1);
		for(int i = 1; i <= n; i++)
			cin >> v[i];
		
		set<ll> S;
			
		for(int i = 1; i <= n; i++){
			if(v[i] == -1){
				if(i > 1 && v[i - 1] != -1)
					S.insert(v[i - 1]);
				if(i < n && v[i + 1] != -1)
					S.insert(v[i + 1]);
			}
		}
		
		if(S.size() == 0){
			cout << 0 << " " << 0 << endl;
			continue;
		}
		
		ll mn = *(S.begin());
		ll mx = *(S.rbegin());
		ll opt = (mx + mn) / 2ll;
		
		ll ans = 0;
		for(int i = 1; i <= n; i++)
			if(v[i] == -1)
				v[i] = opt;
		
		for(int i = 2; i <= n; i++)
			ans = max(ans, abs(v[i] - v[i - 1]));
		
		cout << ans << " " << opt << endl;
		
	}

	return 0;
}
