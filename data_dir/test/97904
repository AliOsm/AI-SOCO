#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007
#define dancila 3.14159265359
#define eps 1e-9

// #define fisier 1

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    int x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
long long rand_seed()
{
    long long a = rng();
    return a;
}

int ansL[1002], ansC[1002], a[502][502];
int main()
{

    #ifdef fisier
        ifstream f("input.in");
        ofstream g("output.out");
    #endif

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m, q;
    cin >> n >> m >> q;
    for(int i = 1; i <= n; ++i)
        for(int j = 1; j <= m; ++j)
            cin >> a[i][j];

    for(int i = 1; i <= n; ++i)
    {
        int xt = 0;
        for(int j = 1; j <= m; ++j)
        {
            if(a[i][j] == 1)
                ++xt;
            else
                xt = 0;
            ansL[i] = max(ansL[i], xt);
        }
    }
    /*
    for(int j = 1; j <= m; ++j)
    {
        int xt = 0;
        for(int i = 1; i <= n; ++i)
        {
            if(a[i][j] == 1)
                ++xt;
            else
                xt = 0;
            ansC[j] = max(ansC[j], xt);
        }
    }
    */
    for(; q; --q)
    {
        int x, y;
        cin >> x >> y;
        a[x][y] ^= 1;
        int xt = 0;
        ansL[x] = 0;
        for(int j = 1; j <= m; ++j)
        {
            if(a[x][j] == 1)
                ++xt;
            else
                xt = 0;
            ansL[x] = max(ansL[x], xt);
        }
        /*
        ansC[y] = 0;
        for(int i = 1; i <= n; ++i)
        {
            if(a[i][y] == 1)
                ++xt;
            else
                xt = 0;
            ansC[y] = max(ansC[y], xt);
        }
        */
        int mx = 0;
        for(int i = 1; i <= n; ++i)
            mx = max(mx, ansL[i]);
      //  for(int j = 1; j <= m; ++j)
          //  mx = max(mx, ansC[j]);
        cout << mx << '\n';
    }
    return 0;
}
