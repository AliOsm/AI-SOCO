#define _CRT_SECURE_NO_WARNINGS
#include<set>
#include<map>
#include<list>
#include<iomanip>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<complex>
#include<sstream>
#include<iostream>
#include<fstream>
#include<algorithm>
#include<numeric>
#include<utility>
#include<functional>
#include<stdio.h>
#include<assert.h>
#include<memory.h>
#include<bitset>

using namespace std;

#define Files


#define rdi(i)          scanf("%d", &i)
#define rdii(i, j)      scanf("%d%d", &i, &j)
#define rep(i, v)       for(int i=0;i<v.size();++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)          ((v).begin()), ((v).end())
#define clr(v, d)       memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e8;
const ll OOL = 1e16;
const ll MOD = 1e9 + 7;




#define pb                  push_back
#define MP                  make_pair
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
ull power(ull a, ull b){ if (b == 0) return 1; ull ans = power(a, b / 2); ans = ans * ans; if (b % 2 != 0) ans *= a; return ans; }


string a[105];
int b[105];
bool is[105];
bool vis[200];
int match[200];
int main() {
#ifdef Filess
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	int n, m; 
	cin >> n >> m; 
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int x; 
	for (int i = 0; i < m; i++) { cin >> x; x--; is[x] = 1; b[i] = x;  }

	set<int> s; 
	for (int i = 0; i < n; i++) {
		if (!is[i]) continue;
		s.insert(a[i].size());
	}
	if (s.size() > 1) {
		cout << "No\n"; return 0;
	}

	string pattern = "";
	int len = (*s.begin());
	for (int i = 0; i < len; i++) {
		memset(vis, 0, sizeof vis);
		for (int j = 0; j < m; j++) {
			vis[a[b[j]][i]] = 1; 
		}

		int cnt = 0;
		for (int j = 0; j < 200; j++) {
			if (vis[j]) cnt++;
		}
		if (cnt > 1) {
			pattern += "?";
		}
		else {
			pattern += a[b[0]][i];
		}
	}

	for (int i = 0; i < (int)pattern.size(); i++) {
		char c = pattern[i];
		for (int j = 0; j < n; j++) {
			if (is[j]) continue;
			if (a[j].size() != len) continue;
			if (pattern[i] == '?') {
				match[j]++;
			}
			else if (pattern[i] == a[j][i]) {
				match[j]++;
			}
		}
	}

	for (int i = 0; i < n; i++) {
		if (is[i])continue;
		if (match[i] == len) {

			cout << "No\n"; return 0; 
		}
	}
	cout << "Yes\n"; 
	cout << pattern << "\n";
	return 0;
}