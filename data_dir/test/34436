/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)

const int N = 105, offset = 1e5+5;
int dp[N][300005], a[N], b[N];

class CDimaAndSalad {
public:
    int n, k;
    int rec(int i, int cur){
        if(i==n) return cur==offset?0:-1e10;
        if(dp[i][cur]!=-1) return dp[i][cur];
        int res = rec(i+1, cur);
        res = max(res, a[i] + rec(i+1, cur + a[i] - k*b[i]));
        return dp[i][cur] = res;
    }
	void solve(std::istream& in, std::ostream& out) {
        in >> n >> k;
        f(i, n) in >> a[i];
        f(i, n) in >> b[i];
        memset(dp, -1, sizeof dp);
        int res = INT_MIN;
        f(i, n) res = max(res, a[i] + rec(i+1, a[i]-k*b[i] + offset));
        if(res == INT_MIN) res = -1;
        out << res;
	}
};


int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	CDimaAndSalad solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
