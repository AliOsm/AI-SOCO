#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const uli mod=1e9+7;
uli fxp(uli b,uli x){
  uli a=1;
  for(;x!=0;b=b*b%mod,x>>=1)
    if(x&1ll)a=a*b%mod;  
  return a;
}
vector<pair<int,int> >dec(int v){
  vector<pair<int,int> >pe;
  for(int p=2;p*p<=v;p++){
    int e=0;
    while(v%p==0)e++,v/=p;
    if(e>0)pe.push_back({p,e});
  }
  if(v!=1)pe.push_back({v,1});
  return pe;
}
vector<pair<int,int> >dy;
map<int,int>dx;
uli ans=0;
uli S;
void gen(int i,uli val,uli sgn){
  if(i==(int)dy.size()){
    assert(val>0);
    ans+=sgn*fxp(2,(S/val)-1);
    ans%=mod;
    return;
  }
  int from=0,to=dy[i].second;
  if(dx.count(dy[i].first))from=dx[dy[i].first];  
  for(int it=0;it<from;it++)val*=dy[i].first;
  for(int e=from;e<=to && e<=from+1;e++){
    gen(i+1,val,sgn);
    sgn=-sgn;
    val*=dy[i].first;
  }
}
int main(){
  int x;
  cin>>x>>S;
  if(S%x!=0){
    puts("0");
    return 0;
  }
  auto vx=dec(x);
  for(auto p:vx)dx[p.first]=p.second;
  dy=dec(S);
  gen(0,1,1);
  ans=(ans+mod)%mod;
  cout<<ans<<endl;
  return 0;
}
