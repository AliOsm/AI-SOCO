#include<bits/stdc++.h>
#define int long long
#define mp make_pair
#define x first
#define kek shrek
#define shrek kek
#define y second
using namespace std;
const int inf=1e16;
int n,m;
int tree[1000000];
int treea[1000000];
int treeb[1000000];

int p[1000000];
int a[1000000];
int b[1000000];

int d[1000000];
int h[1000000];

int sz;
int l,r;
void make(int v,int l,int r)
{
    if(l==r)
    {
        treea[v]=a[l];
        treeb[v]=b[l];
        tree[v]=-inf;
        return;
    }
    int u=(l+r)/2;
    make(v+v,l,u);
    make(v+v+1,u+1,r);
    treea[v]=max(treea[v+v],treea[v+v+1]);
    treeb[v]=max(treeb[v+v],treeb[v+v+1]);
    tree[v]=max(tree[v+v],tree[v+v+1]);
    tree[v]=max(tree[v],treea[v+v]+treeb[v+v+1]);
}

pair<int,pair<int,int> > get(int v,int l,int r,int ll,int rr)
{
    if(l>rr || r<ll)return mp(-inf,mp(-inf,-inf));
    if(l>=ll && r<=rr)return mp(tree[v],mp(treea[v],treeb[v]));
    int u=(l+r)/2;
    pair<int,pair<int,int> > pi1=get(v+v,l,u,ll,rr);
    pair<int,pair<int,int> > pi2=get(v+v+1,u+1,r,ll,rr);
    int cura=max(pi1.y.x,pi2.y.x);
    int curb=max(pi1.y.y,pi2.y.y);
    int curv=max(pi1.x,pi2.x);
    curv=max(curv,pi1.y.x+pi2.y.y);
    return mp(curv,mp(cura,curb));
    ///return max(get(v+v,l,u,ll,rr),get(v+v+1,u+1,r,ll,rr));
}

main()
{
    cin>>n>>m;

    for(int i=1;i<=n;i++)
    {
        cin>>d[i];
        p[i+1]=d[i]+p[i];
    }
    for(int i=n+1;i<=n+n;i++)
    {
        p[i+1]=p[i]+d[i-n];
    }
    for(int i=1;i<=n;i++)cin>>h[i];
    for(int i=n+1;i<=n+n;i++)h[i]=h[i-n];
    sz=1;
    while(sz<n+n)sz+=sz;
    for(int i=1;i<=n+n;i++)
    {
        a[i]=h[i]+h[i]-p[i];
        b[i]=h[i]+h[i]+p[i];
    }
    make(1,1,sz);
    for(int i=1;i<=m;i++)
    {
        cin>>l>>r;
        int r1=l-1;
        int l1=r+1;
        if(r1<l1)r1+=n;
        //if(l>r)r+=n;
        //cout<<l1<<' '<<r1<<endl;
        cout<<get(1,1,sz,l1,r1).x<<"\n";
    }
}