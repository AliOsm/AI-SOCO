//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define F first
#define S second
#define _sz(x) (int)x.size()

using namespace std ;
using ll = long long ;
using ld = long double ;
using pii = pair <int , int> ;

int const N = 5000 + 20 ;
int n , k , v , sum , a[N] , dp[N][N] ;
vector <int> vec[2] ;

int main(){
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

	cin >> n >> k >> v ;
	for (int i = 0 ; i < n ; i ++) cin >> a[i] , sum += a[i] ;

	memset(dp , -1 , sizeof dp) ;
	dp[0][0] = 0 ;
	for (int i = 0 ; i < n ; i ++) {
		for (int j = 0 ; j < k ; j ++) {
			if (dp[i][j] == -1) continue ;
			dp[i + 1][j] = 0 ;
			dp[i + 1][(j + a[i]) % k] = 1 ;
		}
	}

	int w = v % k ;

	if (sum < v || dp[n][w] == -1) return cout << "NO\n" , 0 ;

	sum = 0 ;
	for (int i = n ; i ; i --) {
		if (dp[i][w]) {
			vec[1].push_back(i - 1) ;
			w = (w + k - a[i - 1] % k) % k ;
			sum += a[i - 1] ;
		}
		else {
			vec[0].push_back(i - 1) ;
		}
	}

	sort(vec[0].begin() , vec[0].end()) ;
	sort(vec[1].begin() , vec[1].end()) ;

	cout << "YES\n" ;

	for (int i = 1 ; i < _sz(vec[0]) ; i ++) cout << 1000000 << ' ' << vec[0][i] + 1 << ' ' << vec[0][0] + 1 << '\n' ;
	for (int i = 1 ; i < _sz(vec[1]) ; i ++) cout << 1000000 << ' ' << vec[1][i] + 1 << ' ' << vec[1][0] + 1 << '\n' ;

	int p0 , p1 ;
	if (vec[0].empty()) p0 = vec[1][1] , p1 = vec[1][0] ;
	else if (vec[1].empty()) p0 = vec[0][0] , p1 = vec[0][1] ;
	else p0 = vec[0][0] , p1 = vec[1][0] ;

	if (sum < v) cout << (v - sum) / k << ' ' << p0 + 1 << ' ' << p1 + 1 << '\n' ;
	if (sum > v) cout << (sum - v) / k << ' ' << p1 + 1 << ' ' << p0 + 1 << '\n' ;
}
