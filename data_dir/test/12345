#include <bits/stdc++.h>
using namespace std;

struct modifier {
    int t;
    double mul;
    double b;
    int number;

    modifier() : b(-1) {}
    modifier(int t, double b, int number) : t(t), b(b), number(number) {}
};

int main() {
    int k, m, n;
    cin >> k >> n >> m;
    vector <int> A(k + 1);
    for (int i = 1; i <= k; ++i) {
        cin >> A[i];
    }
    vector <modifier> a;
    vector <vector <modifier> > b(k + 1);
    vector <modifier> c(k + 1);
    for (int i = 0; i < n; ++i) {
        int x, pos, y;
        cin >> x >> pos >> y;
        if (x == 1) {
            if (c[pos].b < y) {
                c[pos] = modifier(x, y, i + 1);
            }
        } else if (x == 2) {
            b[pos].push_back(modifier(2, y, i + 1));
        } else {
            a.push_back(modifier(3, y, i + 1));
            a.back().mul = a.back().b;
        }
    }
    for (int i = 1; i <= k; ++i) {
        if (c[i].b > A[i]) {
            b[i].push_back(modifier(1, c[i].b - A[i], c[i].number));
        }
        sort(b[i].begin(), b[i].end(), [](modifier a, modifier b) {
            return a.b > b.b;
        });
        double sum = A[i];
        for (int j = 0; j < b[i].size(); ++j) {
            b[i][j].mul = (sum + b[i][j].b) / sum;
            sum += b[i][j].b;
            a.push_back(b[i][j]);
        }
    }
    sort(a.begin(), a.end(), [](modifier a, modifier b) {
        return a.mul > b.mul;
    });
    while (a.size() > m) {
        a.pop_back();
    }
    sort(a.begin(), a.end(), [](modifier a, modifier b) {
        return a.t < b.t;
    });
    cout << (int)a.size() << endl;
    for (int i = 0; i < a.size() && i < m; ++i) {
        cout << a[i].number << ' ';
    }
}