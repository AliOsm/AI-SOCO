#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<61);
const int inf=(1<<30);
const int nmax=1e6+50;
const int mod=1e9+7;
using namespace std;
ll n,m,r[nmax],l[nmax],mx,c[nmax],cur,x,y,i,j;
vector<ll>vc[nmax];
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>n>>m;
	for(i=1;i<=n;i++)cin>>r[i];
	for(i=1;i<=n;i++)
	{
		cin>>c[i];
		vc[c[i]].pb(i);
		mx=max(c[i],mx);
	}
	for(i=1;i<=mx;i++)sort(vc[i].begin(),vc[i].end());
	i=1;
	while(m--)
	{
		cin>>x>>y;
		while(l[i]>=vc[i].size())i++;
		cur=0;
		if(r[x]>=y)
		{
			r[x]-=y;
			cur=c[x]*y;
		}
		else
		{
			cur=r[x]*c[x];
			y-=r[x];
			r[x]=0;
			while(y>0 && i<=mx)
			{
				for(j=l[i];j<vc[i].size();j++)
				{
					if(r[vc[i][j]]>0)
					{
						cur+=min(r[vc[i][j]],y)*c[vc[i][j]];
						ll z=y;
						y-=min(r[vc[i][j]],y);
						r[vc[i][j]]-=min(r[vc[i][j]],z);
						if(!y)break;
					}
					l[i]++;
				}
				if(l[i]>=vc[i].size())i++;
				if(i==mx+1)break;
			}
			if(y)cur=0;
		}
		cout<<cur<<endl;
	}
    return 0;
}
