// In The Name Of God
// Road To Gray and beyond !

#include<bits/stdc++.h>
#define IOS ios::sync_with_stdio(false),cin.tie(0)
#define rep(i,n) for(int i=0;i<(n);i++)
#define rpp(i,st,en) for(int i=(st);i<=(en);i++)
#define prr(i,st,en) for(int i=(en);i>=(st);i--)
#define fe(i,v) for(auto &i:(v)) 
#define suniq(v) (sort(v.begin(),v.end()), v.resize(distance(v.begin(),unique(v.begin(),v.end()))))
#define ms0(v) memset((v),0,sizeof(v))
#define ms1(v) memset((v),-1,sizeof(v))
#define ms22(v) memset((v),63,sizeof(v))
#define all(v) (v).begin(),(v).end()
#define sz(v) int((v).size())
#define pb push_back
#define F first
#define S second
#define mp make_pair
#define pii pair<int,int> 
#define vi vector<int>
#define ll long long

using namespace std;
const int N = 2e5+22 ;

int n;
ll w,h;
multiset<ll>s,ss,t,tt ;

int main()
{IOS;
	ll x,y;
	char c;
	
	cin>>w>>h>>n;
	s.insert(0) , s.insert(w) ;
	ss.insert(w) ;
	t.insert(0) , t.insert(h) ;
	tt.insert(h) ;
	rep(i,n)
	{
		cin>>c>>x;
		if(c=='V')
		{
			auto it=s.lower_bound(x) ;
			auto it2=it ;
			it2-- ;
			ss.erase(ss.find(*it-*it2)) ;
			ss.insert(*it-x) ;
			ss.insert(x-*it2) ;
			s.insert(x) ;
		}
		else
		{
			auto it=t.lower_bound(x) ;
			auto it2=it ;
			it2-- ;
			tt.erase(tt.find(*it-*it2)) ;
			tt.insert(*it-x) ;
			tt.insert(x-*it2) ;
			t.insert(x) ;
		}
		auto it1=ss.end() , it2=tt.end() ;
		it1-- , it2-- ;
		cout<<(*it1)*(*it2)<<endl;
	}
	
	
	return 0;
}
