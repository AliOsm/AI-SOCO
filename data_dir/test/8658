#include<bits/stdc++.h>
using namespace std;
const int MAXN = 300007;

vector< int >edg[MAXN];
int c[MAXN];

int sb[MAXN][3];

void dfs(int u, int p)
{
    for (int v : edg[u]) {
        if (v==p) continue;
        dfs(v, u);
        for (int i = 0; i < 3; i++) {
            sb[u][i] += sb[v][i];
        }
    }
    sb[u][c[u]]++;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;

    for (int i = 1; i <= n; i++) cin >> c[i];

    for (int i = 1; i < n; i++) {
        int u, v;
        cin >> u >> v;
        edg[u].push_back(v);
        edg[v].push_back(u);
    }

    dfs(1, 0);

    int ans = 0;

    for (int i = 1; i <= n; i++) {
        if (    (sb[i][1]==sb[1][1]&&sb[i][2]==0) ||
                (sb[i][2]==sb[1][2]&&sb[i][1]==0) ) ans++;
    }

    cout << ans << "\n";


    return 0;
}

