#include <bits/stdc++.h>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int a, b, c;
    char aa, bb, cc;

    cin >> a >> aa >> b >> bb >> c >> cc;

    map < char, vector < int > > mp;

    mp[aa].push_back(a);
    mp[bb].push_back(b);
    mp[cc].push_back(c);

    vector < int > v1 = mp[aa];
    vector < int > v2 = mp[bb];
    vector < int > v3 = mp[cc];

    int ans = 1;

    vector < int > us1(20), us2(20), us3(20);

    for(int i = 0; i < v1.size(); ++i){
        us1[v1[i]]++;
        ans = max(ans, us1[v1[i]]);
    }

    sort(v1.begin(), v1.end());

    int cnt1 = 0;

    for(int i = 1; i < v1.size(); ++i){
        if(v1[i] == v1[i - 1] + 1) ++cnt1;
        if(v1[i] == v1[i - 1] + 2){
            ans = max(2, ans);
        }
    } ans = max(ans, cnt1 + 1);


    for(int i = 0; i < v2.size(); ++i){
        us2[v2[i]]++;
        ans = max(ans, us2[v2[i]]);
    }

    sort(v2.begin(), v2.end());

    int cnt2 = 0;

    for(int i = 1; i < v2.size(); ++i){
        if(v2[i] == v2[i - 1] + 1) ++cnt2;
        if(v2[i] == v2[i - 1] + 2){
            ans = max(2, ans);
        }
    } ans = max(ans, cnt2 + 1);

    for(int i = 0; i < v3.size(); ++i){
        us3[v3[i]]++;
        ans = max(ans, us3[v3[i]]);
    }

    sort(v3.begin(), v3.end());

    int cnt3 = 0;

    for(int i = 1; i < v3.size(); ++i){
        if(v3[i] == v3[i - 1] + 1) ++cnt3;
        if(v3[i] == v3[i - 1] + 2){
            ans = max(2, ans);
        }
    } ans = max(ans, cnt3 + 1);

    cout << 3 - ans;
}
