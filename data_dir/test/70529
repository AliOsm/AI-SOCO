#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;



const int INF=1e9;


int n,m,a[505],b[505],l,r,s[505];

vector<pair<int,string> >v;
bool check(int l,int r,int pos)
{
	int maxid,id;
	bool flag;
	if (l==r) return true;
	maxid=l;
	for (int i=l;i<=r;++i) 
	{
		if (a[i]>a[maxid]) maxid=i;
	}
	id=-1;
	for (int i=l;i<=r;++i)
	{
		if (a[i]!=a[maxid]) continue;
		flag=false;
		if (i-1>=l&&a[i]>a[i-1]) flag=true;
		if (i+1<=r&&a[i]>a[i+1]) flag=true;
		if (flag) id=i;
	}
	if (id==-1) return false;
	if (id-1>=l&&a[id]>a[id-1])
	{
		for (int i=id-1;i>=l;--i)
			v.push_back(make_pair(pos+i-l+1+1,"L"));
		for (int i=id+1;i<=r;++i)
			v.push_back(make_pair(pos+1,"R"));
		return true;
	}	
	else
	{
		for (int i=id+1;i<=r;++i)
			v.push_back(make_pair(pos+id-l+1,"R"));
		for (int i=id-1;i>=l;--i)
			v.push_back(make_pair(pos+i-l+1+1,"L"));
		return true;
	}
}
int main()

{
	scanf("%d",&n);
	for (int i=1;i<=n;++i) scanf("%d",&a[i]);
	scanf("%d",&m);
	for (int i=1;i<=m;++i) scanf("%d",&b[i]);
	l=0;r=1;
	s[0]=0;
	for (int i=1;i<=n;++i) s[i]=s[i-1]+a[i];
	v.clear();
	for (int i=1;i<=m;++i)
	{
		while (r<=n&&s[r]-s[l]!=b[i]) ++r;
		if (r==n+1)
		{
			printf("NO\n");
			return 0;
		}
		if (!check(l+1,r,i-1))
		{
			printf("NO\n");
			return 0;
		}
		l=r;
	}
	if (l!=n)
	{
		printf("NO\n");
		return 0;
	}
	printf("YES\n");
	for (int i=0;i<v.size();++i)
		cout<<v[i].first<<" "<<v[i].second<<endl;
	return 0;

}