#include <bits/stdc++.h>
#include <ctime>
using namespace std;

#define space ' '
#define enter "\n"
#define fi first
#define se second
#define mp make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef set <int> si;
typedef map <int, int> mii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;
typedef vector <pii> vii;

template <typename T>
T sqr (T x) {
	return x * x;
}

template <typename T>
T gcd (T a, T b) {
	return b ? gcd(b, a % b) : a;
}

template <class T>
T chmin (T &x, const T &y) {
	if (y < x)
		return x = y;
	return x;
}

template <class T>
T chmax (T &x, const T &y) {
	if (x < y)
		return x = y;
	return x;
}


template <class P, class Q>
ostream & operator << (ostream &os, const pair <P, Q> &p) {
	return os << '(' << p.fi << ", " << p.se << ')';
}


template <class T>
ostream & operator << (ostream &os, const vector <T> &v) {
	os << '{';
	bool was = false;
	for (const T & x : v) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << '}';
	return os;
}

template <class T>
ostream & operator << (ostream &os, const set <T> &v) {
	os << '[';
	bool was = false;
	for (const T & x : v) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << ']';
	return os;
}

template <class P, class Q>
ostream & operator << (ostream &os, const map <P, Q> &m) {
	os << '<';
	bool was = false;
	for (const auto &x : m) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << '>';
	return os;
}

const ll INF = (int)2e9;
const int MAXN = 510;

int n, m;
int a[MAXN], b[MAXN];
int CntFr = 0;
vii ans;

void bad () {
	cout << "NO";
	exit(0);
}

void dfs (int l, int r) {
	if (l == r)
		return void(CntFr++);
	int pos = 0, ma = -1;
	for (int i = l + 1; i < r; i++) {
		if ((a[i] != a[i + 1] || a[i] != a[i - 1]) && a[i] > ma)
			ma = a[i], pos = i;
	}
	if (a[l] != a[l + 1] && a[l] > ma)
		ma = a[l], pos = l;
	if (a[r] != a[r - 1] && a[r] > ma)
		ma = a[r], pos = r;
	if (pos == 0)
		bad();
	int dir = 0;
	if (pos == l)
		dir = 1;
	else
		if (pos == r)
			dir = -1;
		else
			if (a[pos] != a[pos - 1])
				dir = -1;
			else
				dir = 1;
	CntFr += pos - l + 1;
	if (dir == 1) {
		for (int i = pos + 1; i <= r; i++)
			ans.push_back(pii(CntFr, 'R'));
		for (int i = pos - 1; i >= l; i--)
			ans.push_back(pii(CntFr, 'L')), CntFr--;
	}
	else {
		for (int i = pos - 1; i >= l; i--)
			ans.push_back(pii(CntFr, 'L')), CntFr--;
		for (int i = pos + 1; i <= r; i++) {
			ans.push_back(pii(CntFr, 'R'));
		}
	}
}

int main () {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	cin >> m;
	for (int i = 1; i <= m; i++)
		cin >> b[i];
	int st = 1;
	for (int i = 1; i <= m; i++) {
		ll sum = 0;
		int r = i;
		for (int j = st; j <= n; j++) {
			sum += a[j];
			r = j;
			if (sum >= b[i]) {
				break;
			}
		}
		if (sum != b[i])
			bad();
		dfs(st, r);
		st = r + 1;
	}
	if (st != n + 1)
		bad();
	cout << "YES\n";
	for (auto it : ans) {
		cout << it.first << space << char(it.second) << enter;
	}
}
