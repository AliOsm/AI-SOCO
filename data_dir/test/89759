#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

using namespace std;
int prep[110][110];
vector<vector<int> > a;
vector<vector<int> > sum1,sum2;
int dp[110][10010];
int r(int p, int m)
{
	if (p==a.size())
	{
		if (m==0)
			return 0;
		return -2000000000;
	}
	if (dp[p][m]!=-1)
		return dp[p][m];
	int v=MIN(m,a[p].size());
	int res=0;
	FOR(j,0,v+1)
	{
		int res1=prep[p][j]+r(p+1,m-j);
		res=MAX(res,res1);
	}
	return dp[p][m]=res;
}
int main()
{
	int n,m;
	scanf("%d%d",&n,&m);
	a.resize(n);
	sum1.resize(n);
	sum2.resize(n);
	FOR(i,0,n)
	{
		int v1;
		scanf("%d",&v1);
		a[i].resize(v1);
		sum1[i].resize(v1);
		sum2[i].resize(v1);
		FOR(j,0,v1)
		{
			scanf("%d",&a[i][j]);
			if (j==0)
				sum1[i][j]=a[i][j];
			else
				sum1[i][j]=a[i][j]+sum1[i][j-1];
		}
		sum2[i][v1-1]=a[i][v1-1];
		for (int j=v1-2; j>=0; --j)
			sum2[i][j]=a[i][j]+sum2[i][j+1];
	}
	FOR(i,0,n)
	{
		int v=(int)(a[i].size());
		FOR(j,0,v+1)
		{
			FOR(k,0,j+1)
			{
				int s1=0;
				if (k)
					s1=sum1[i][k-1];
				int s2=0;
				int nk=j-k;
				if (nk)
					s2=sum2[i][v-nk];
				prep[i][j]=MAX(prep[i][j],s1+s2);
			}
		}
	}
	MEMS(dp,-1);
	int res=r(0,m);
	cout<<res<<endl;
	return 0;
} 