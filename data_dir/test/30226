#include "omp.h"
#include <iostream>
#include <cmath>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <map>
#include <string>
#include <set>
#include <cassert>



using namespace std;


typedef long double ld;
typedef long long ll;


const int psze = 20, sze = 1 << 21, INF = 1e9 + 1, M = 1e6, root = 1;
bool prime[sze];
int cnt[sze];


signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n;
	cin >> n;


	vector<int> values(n);
	for (int i = 0; i < n; ++i)
	{
		cin >> values[i];
		cnt[values[i]]++;
	}

	for (int i = 2; i * i < sze; ++i)
	{
		if (prime[i])
			continue;

		for (int j = i * i; j <= sze; j += i)
			prime[j] = 1;
	}

	bool label1 = 0, label2 = 0;
	int a1, b1, a2, b2;

	for (int i = 0; i < n; ++i)
	{
		for (int j = i + 1; j < n; ++j)
		{
			if (!prime[values[i] + values[j]])
			{
				label1 = 1;
				a1 = values[i];
				b1 = values[j];
			}
		}
	}

	if (cnt[1])
	{
		for (int j = 0; j < n; ++j)
		{
			if (values[j] == 1)
				continue;

			if (!prime[values[j] + 1])
			{
				label2 = 1;
				a2 = cnt[1];
				b2 = values[j];
			}
		}
	}

	if (!label2 && cnt[1] >= 2)
	{
		a2 = cnt[1] - 1;
		b2 = 1;
		label2 = 1;
	}
//1
	if (label2)
	{
		cout << a2 + 1 << '\n';
		for (int i = 0; i < a2; ++i)
			cout << 1 << ' ';

		cout << b2 << '\n';
	}
	else if (label1)
	{
		cout << 2 << '\n' << a1 << ' ' << b1 << '\n';
	}
	else
	{
		cout << 1 << '\n' << values[0] << '\n';
	}
	
	return 0;
}