//In the name of Allah

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 1e6+10 , MOD = 1e9+7 , L = 20;

int q , h[N] , d1 = 1 , d2 = 2 , dim = 2 , v , par[N][L] , v1 , v2 , x , now = 4;
vector <int> g[N];

inline int pr(int v , int x){
	for(int i=0 ; i<L ; i++)
		if((1 << i) & x)
			v = par[v][i];
	return v;
}	

inline int lca(int u , int v){
	if(h[u] > h[v])
		swap(u , v);
	v = pr(v , h[v] - h[u]);
	if(u == v)
		return v;
	for(int i=L-1 ; i>=0 ; i--)
		if(par[u][i] != par[v][i]){
			u = par[u][i];
			v = par[v][i];
		}
	return par[v][0];
}

int32_t main()
{
  ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
  h[1] = h[2] = h[3] = 1;
  cin >> q;
  for(int i=0 ; i<q ; i++){
	cin >> v;
	v--;
	v1 = now++;
	v2 = now++;
	h[v1] = h[v2] = h[v] + 1;
	par[v1][0] = par[v2][0] = v;
	for(int j=1 ; j<L ; j++)
		par[v1][j] = par[v2][j] = par[par[v1][j - 1]][j - 1];
	x = h[v1] + h[d1] - 2 * h[lca(v1 , d1)];
	if(x > dim){
		dim = x;
		d2 = v1;
	}
	x = h[v1] + h[d2] - 2 * h[lca(v1 , d2)];
	if(x > dim){
		dim = x;
		d1 = v1;
	}
	cout << dim << "\n";
  }
  return 0;
}
