#include <iostream>
#include <cstdio>
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <queue>
using namespace std;
#define ll long long
#define pii pair<int, int>
#define mp make_pair
#define x first
#define y second
#define pb push_back
#define VI vector<int>
#define all(s) (s).begin(),(s).end()
#define L(s) (int)(s).size()
#define inf 1000000000
#define pdd pair<double, double>
int n, m, pos;
char s[555555];
char act[555555];
set<int> fr;
int match[555555];
VI st;
int main() {
    scanf("%d%d%d", &n, &m, &pos); --pos;
    for(int i = 0; i < n; ++i) {
        fr.insert(i);
    }
    scanf("%s", s);
    for(int i = 0; i < n; ++i) {
        if (s[i] == '(') st.pb(i); else {
            match[i] = st.back();
            match[st.back()] = i;
            st.pop_back();
        }
    }

    scanf("%s", act);
    for(int i = 0; i < m; ++i) {
        if (act[i] == 'L') {
            auto it = fr.lower_bound(pos); --it;
            pos = *it;
        }
        if (act[i] == 'R') {
            auto it = fr.upper_bound(pos);
            pos = *it;
        }
        if (act[i] == 'D') {
            int lft = min(pos, match[pos]);
            int rgt = max(pos, match[pos]);
            while(1) {
                auto it = fr.lower_bound(lft);
                fr.erase(it);
                it = fr.lower_bound(lft);
                if (it == fr.end()) break;
                if (*it > rgt) break;
            }
            auto it = fr.lower_bound(rgt);
            if (it != fr.end()) pos = *it; else {
                --it; pos = *it;
            }
        }
    }

    for(int i = 0; i < n; ++i) {
        if (fr.count(i)) printf("%c", s[i]);
    }
    printf("\n");
}

