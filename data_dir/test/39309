#include <bits/stdc++.h>
using namespace std;

vector <pair <int, int>> adia[200010];
int ans[200010];
int flow[200010];
bool viz[200010];

void dfs(int nod)
{
    viz[nod] = 1;
    for (auto i : adia[nod]) {
        if (!viz[i.first]) {
            dfs(i.first);
            ans[(int)abs(i.second)] = flow[i.first] * (i.second > 0 ? 1 : -1);
            flow[nod] += flow[i.first];
        }
    }
}


int main()
{
    ios_base :: sync_with_stdio(0);
    cin.tie(0);

    int n, m;
    cin >> n;

    for (int i = 1; i <= n; i++)
        cin >> flow[i];

    cin >> m;

    for (int i = 1; i <= m; i++) {
        int a, b;
        cin >> a >> b;
        adia[a].push_back({ b, i });
        adia[b].push_back({ a, -i });
    }

    dfs(1);

    if (flow[1] != 0) {
        cout << "Impossible\n";
        return 0;
    }

    cout << "Possible\n";

    for (int i = 1; i <= m; i++)
        cout << ans[i] << '\n';

    return 0;
}
