#include <bits/stdc++.h>
using namespace std;
int a[200005],lvl[200005],n,par[200005],ind[200005];
set<int> v[200005];
deque<int> ht[200005];
void dfs(int u, int dad=0, int d=1){
	lvl[u] = d, par[u] = dad;
	v[u].erase(dad);
	for(auto i:v[u]) if(i!=dad)
		dfs(i,u,d+1);
}
int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	cin>>n;
	for(int i=n,x,y;--i;v[x].insert(y),v[y].insert(x))
		cin>>x>>y;
	for(int i=1;i<=n;cin>>a[i++]);
	if(a[1]!=1) return cout<<"No",0;
	dfs(a[1]);
	for(int i=2;i<=n;++i) if(lvl[a[i]]<lvl[a[i-1]])
		return cout<<"No",0;
	for(int i=1;i<=n;++i){
		ht[lvl[a[i]]].push_back(a[i]);
		ind[a[i]] = ht[lvl[a[i]]].size();
	}
	for(int i=1;i<=n;++i){
		vector<int> now;
		for(auto j:ht[i]) now.push_back(ind[par[j]]);
		if(!is_sorted(now.begin(), now.end()))
			return cout<<"No",0;
	}
	cout<<"Yes";
}