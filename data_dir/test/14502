#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 200500;
typedef long long LL;
const LL MOD = 1000000000 + 7;

LL n,m;
vector<int> starter;
vector<int> ender;
void solve(LL pos)
{
    if (pos == n) return;
    LL need = (n - pos);
    LL cur = ((LL)1 << max((need - 2),(LL)0));
    if (cur >= m)
    {
        starter.push_back(pos + 1); 
        solve(pos + 1);
    }
    else
    {
        ender.push_back(pos + 1);
        m -= cur;
        solve(pos + 1);
    }
}

int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#else
    //freopen("html.in", "r", stdin); freopen("html.out", "w", stdout);
#endif
    cin>>n>>m;

    solve(0);


    forn(i, 0, starter.size())
        cout<<starter[i]<<" ";
    reverse(all(ender));
    forn(i, 0, ender.size())
        cout<<ender[i]<<" ";

    return 0;
}