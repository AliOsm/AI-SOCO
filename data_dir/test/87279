#include <bits/stdc++.h>

using namespace std;

const int N = 1003;
vector <int> v[N];
set <int> s, s2;
int ans, tr;

void fl()
{
    fflush(stdout);
}

void f(char t, int x)
{
    printf("%c %d\n", t, x);
    fl();
    scanf("%d", &ans);
    if (ans == -1) exit(0);
}

void dfs(int x, int par)
{
    if (s.count(x))
    {
        tr = x;
    }
    else if (!tr)
    {
        int sz = v[x].size();
        for (int i = 0; i < sz; i++)
        {
            if (v[x][i] != par)
            {
                dfs(v[x][i], x);
            }
        }
    }
}

int main()
{
    int t;
    scanf("%d", &t);
    while (t--)
    {
        int n, k, b;
        scanf("%d", &n);
        for (int i = 1; i < n; i++)
        {
            int x, y;
            scanf("%d %d", &x, &y);
            v[x].push_back(y);
            v[y].push_back(x);
        }
        scanf("%d", &k);
        while (k--)
        {
            int a;
            scanf("%d", &a);
            s.insert(a);
        }
        scanf("%d", &k);
        while (k--)
        {
            scanf("%d", &b);
            s2.insert(b);
        }
        f('B', b);
        if (s.count(ans))
        {
            printf("C %d\n", ans);
            fl();
        }
        else
        {
            tr = 0;
            dfs(ans, ans);
            f('A', tr);
            if (s2.count(ans))
            {
                printf("C %d\n", tr);
                fl();
            }
            else
            {
                printf("C -1\n");
                fl();
            }
        }
        for (int i = 0; i < N; i++)
        {
            v[i].clear();
        }
        s.clear();
        s2.clear();
    }
    return 0;
}
