#include<bits/stdc++.h>
using namespace std;
const int N=1048576+10;
typedef long long ll;
const ll mod=998244353;
const int U=1048576;
int R[N];
ll rt[2][22];
int n;
char mde[N];
int T;
inline ll power(ll a,ll p)
{
	ll r=1;
	for(; p; p>>=1,a=a*a%mod)if(p&1)r=r*a%mod;
	return r;
}
inline void ntt(ll* a,int o,int len)
{
	for(int i=0; i<len; i++)if(i<R[i])swap(a[i],a[R[i]]);
	for(int k=1,j=1; k<len; k<<=1,j++)
		for(int s=0; s<len; s+=(k<<1))
			for(int i=s,w=1; i<s+k; i++,w=w*rt[o][j]%mod)
			{
				ll a0=a[i];
				ll a1=a[i+k]*w%mod;
				a[i]=(a0+a1)%mod,a[i+k]=(a0+mod-a1)%mod;
			}
	if(o)
	{
		ll inv=power(len,mod-2);
		for(int i=0; i<len; i++)(a[i]*=inv)%=mod;
	}
}
ll f1[N];
ll f2[N];
ll f3[N];
inline void solve()
{
	scanf("%d",&n);
	scanf("%s",mde);
	int d=0;
	int le=1;
	for(; le<(n<<1); le<<=1,d++);
	for(int i=0; i<le; i++)R[i]=(R[i>>1]>>1)|((i&1)<<(d-1));
	for(int i=0; i<n; i++)f1[i]=(mde[i]=='V');
	for(int i=0; i<n; i++)f2[i]=(mde[n-1-i]=='K');
	ntt(f1,0,le);
	ntt(f2,0,le);
	for(int i=0; i<le; i++)(f1[i]*=f2[i])%=mod;
	ntt(f1,1,le);
	reverse(f1,f1+n);
	for(int i=0; i<n; i++)f3[i]+=f1[i];
	for(int i=0; i<le; i++)f1[i]=0;
	for(int i=0; i<le; i++)f2[i]=0;
	for(int i=0; i<n; i++)f1[i]=(mde[i]=='K');
	for(int i=0; i<n; i++)f2[i]=(mde[n-i-1]=='V');
	ntt(f1,0,le);
	ntt(f2,0,le);
	for(int i=0; i<le; i++)(f1[i]*=f2[i])%=mod;
	ntt(f1,1,le);
	reverse(f1,f1+n);
	for(int i=0; i<n; i++)f3[i]+=f1[i];
	int cnt=0;
	for(int i=1; i<=n; i++)
		for(int j=2*i; j<=n; j+=i)if(f3[j]!=0)
			{
				f3[i]=-1;
				break;
			}
	for(int i=1; i<=n; i++)cnt+=(f3[i]==0);
	printf("%d\n",cnt);
	for(int i=1; i<=n; i++)if(f3[i]==0)printf("%d ",i);
	printf("\n");
	for(int i=0; i<=n; i++)f3[i]=0;
	for(int i=0; i<le; i++)f1[i]=0;
	for(int i=0; i<le; i++)f2[i]=0;
}
int main()
{
	for(int j=1,t=(mod-1)/2; j<=20; t>>=1,j++)rt[0][j]=power(3,t);
	for(int j=1,t=(mod-1)/2; j<=20; t>>=1,j++)rt[1][j]=power(332748118,t);
	scanf("%d",&T);
	for(int z=1; z<=T; z++)solve();
	return 0;
}