#include<bits/stdc++.h>
using namespace std;


const int N = 2e5 + 5;
const double INF = 1e150;

int n, t, q;
double ans;
set < pair < double, int > > adds, dels;

struct my{
    int p, l, x;
    double val, add, del;
    inline void upd(){
        val = (double)p * x / (l + x);
        add = -INF;
        if(x + 1 <= l){
            add = (double)p * l / ((double)(l + x) * (l + x + 1));
        }
        del = INF;
        if(x - 1 >= 0){
            del = (double)p * l / ((double)(l + x) * (l + x - 1));
        }
    }
};
my a[N];

inline void update(int num){
    ans -= a[num].val;
    adds.erase(make_pair(-a[num].add, num));
    dels.erase(make_pair(+a[num].del, num));
    a[num].upd();
    ans += a[num].val;
    adds.insert(make_pair(-a[num].add, num));
    dels.insert(make_pair(+a[num].del, num));
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> t >> q;
    for(int i = 1; i <= n; i++){
        cin >> a[i].p;
    }
    for(int i = 1; i <= n; i++){
        cin >> a[i].l;
        a[i].upd();
        adds.insert(make_pair(-a[i].add, i));
        dels.insert(make_pair(+a[i].del, i));
    }
    while(t){
        if(adds.begin()->first >= INF){
            break;
        }
        t--;
        int num = adds.begin()->second;
        a[num].x++;
        update(num);
    }
    cout << fixed << setprecision(10);
    while(q--){
        int tt, r;
        cin >> tt >> r;
        a[r].l += (tt == 2 ? -1 : +1);
        if(a[r].l < a[r].x){
            a[r].x--;
            t++;
        }
        if(a[r].x > 0){
            a[r].x--;
            t++;
        }
        update(r);
        int num = dels.begin()->second;
        if(a[num].x > 0){
            a[num].x--;
            t++;
            update(num);
        }
        while(t){
            if(adds.begin()->first >= INF){
                break;
            }
            t--;
            int num = adds.begin()->second;
            a[num].x++;
            update(num);
        }
        cout << ans << "\n";
    }
}
