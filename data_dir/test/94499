#include<bits/stdc++.h>
using namespace std;
//#define int long long
#define fast ios_base::sync_with_stdio(false)
typedef long long ll;
typedef long double ld;
const int mod = 1e9 + 7;
#define x first
#define y second
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//#define int long long
const int N = 1e5 + 5;
bool check(ll a , ll b, ll c){
    //we need to check if a * b > c
    ll tmp = (c + b - 1) / b;
    if(tmp < a) return true;
    return a * b > c;
}
bool bin_pow(ll a, int deg, ll n){
    // check if a ** deg > n
    ll res = 1;
    while(deg){
        if(deg & 1){
            if(check(res, a, n)) return true;
            res = res * 1ll * a;
        }
        deg >>= 1;
        if(deg == 0) break;
        if(check(a, a, n)) return true;
        a = a * a;
    }
    return res > n;
}
void solve(ll n){
    ll cur[61] = {};
    ll ans = 0;
    for(int i = 60; i >= 2; --i){
        cur[i] = pow(n, 1. / i);
        if(bin_pow(cur[i], i, n)) cur[i]--;
        if(!bin_pow(cur[i] + 1, i, n)) cur[i]++;
        cur[i] --;
        for(int j = 2 * i; j <= 60; j += i){
            cur[i] -= cur[j];
        }
        ans += cur[i];
    }
    cout << n - 1 - ans << "\n";
}
int main(){
    fast;
    int T;
    cin >> T;
    //T = 1;
    for(int qw = 0; qw < T; ++qw){
        ll n = 1e18;
        cin >> n;
        solve(n);
    }
    return 0;
}
