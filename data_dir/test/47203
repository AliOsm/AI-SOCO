//bismillahir rahmanir rahim
#include <iostream>
#include <math.h>
#include <string.h>
#include <vector>
#include <stack>
#include <algorithm>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cstdio>
#include <iterator>
#define                 ll                                  long  long
#define                 lf                                  double 
#define                 pb(x)                               push_back(x)
#define                 ull                                 unsigned long long
#define                 sfl(a)                              scanf("%lld",&a)
#define                 sf(a)                               scanf("%d",&a)
#define                 pf(a)                               printf("%d\n",a)
#define                 pfl(a)                              printf("%lld\n",a)
#define                 pdl(a)                              printf("%llf\n",a)
#define                 FOR(x,n)                            for(int x=1;x<=n;++x)
#define                 vii                                 vector< ll > v
#define                 pi                                  3.14159265359
#define                 mex                                 10000000
#define                 pii                                 pair< ll , ll >
#define                 mem(m)                              memset( m, 0, sizeof m)
#define                 mp(a,b)                             make_pair(a,b)
#define                 maxn                                100000
#define                 mod                                 1000000007
#define 				INF									1e17
#define 				f1 									first
#define 				f2									second

using namespace std;

vector < ll > v[210000];

int color[210000];

bool flag = true;

void dfs( ll s , ll c){

	if ( !flag ) return;

	color[s] = c;

	for ( ll i = 0; i < v[s].size(); i++ ){

		if ( color[v[s][i]] != 0 ){

			if ( color[v[s][i]] == color[s] ){

				flag = false;

				return;
			}
		}

		else{

			if ( c == 1 ){

				dfs ( v[s][i] , 2);
			}

			else{

				dfs ( v[s][i] , 1 );
			}
		}
	}
}

int main(){
    
    ll n;

    sfl ( n );

    pii a[n+10];

    memset ( color , 0 , sizeof color );

    for ( ll i = 1; i <= n; i++ ){ 

    	sfl ( a[i].f1 ) , sfl ( a[i].f2 );

    	v[a[i].f1].pb ( a[i].f2 );

    	v[a[i].f2].pb ( a[i].f1 );
    }

    for ( int i = 1; i <= 2*n; i+=2 ){

    	v[i].pb( i+1 );

    	v[i+1].pb( i );
    }

    //bool tmp =  bfs(1);

    for ( ll i = 1; i <= 2*n; i++ ){

    	if ( color[i] != 0 ) continue;

    	dfs ( i, 1 );

    	if ( !flag ){

    		printf("-1\n");
    	}
    	

    }

    for ( ll i = 1; i <= n; i++ ){

    	printf("%d %d\n",color[a[i].f1] ,color[a[i].f2]);
    }

}


