#include <bits/stdc++.h>

using namespace std;

string method(int val,string first,string last){
    string temp;
    if(val == 1){
        temp.push_back(first[0]);
        temp.push_back(first[1]);
        temp.push_back(first[2]);
    }
    if(val == 2){
        temp.push_back(first[0]);
        temp.push_back(first[1]);
        temp.push_back(last[0]);
    }
    return temp;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    string first[n];
    string last[n];
    bool vis[n];
    string ans[n];
    for(int i = 0;i < n;i++){
        cin >> first[i] >> last[i];
    }
    for(int i = 0;i < n;i++)
        vis[i] = 0;
    unordered_set<string>seta;
    for(int i = 0;i < n;i++){
        int cnt = 0;
        string temp = method(1,first[i],last[i]);
        for(int j = 0;j < n;j++){
            string temp1 = method(1,first[j],last[j]);
            if(temp == temp1)++cnt;
            //cout << temp << " " << temp1 << "\n";
        }
        if(cnt > 1){
            ans[i] = method(2,first[i],last[i]);
            vis[i] = true;
            if(seta.find(ans[i]) != seta.end()){
                cout << "NO";
                return 0;
            }
            seta.insert(ans[i]);
            //cout << ans[i] << " " << i << " " << cnt;
        }
    }
    for(int cycle = 0;cycle < n;cycle++){
    for(int i = 0;i < n;i++){
        string fir = method(1,first[i],last[i]);
        string sec = method(2,first[i],last[i]);
        if(!vis[i] && seta.find(fir) != seta.end() && seta.find(sec) != seta.end()){
            cout << "NO";
            return 0;
        }
        if(vis[i] || seta.find(fir) == seta.end() && seta.find(sec) == seta.end())continue;
        vis[i] = true;
        if(seta.find(fir) == seta.end()){
            seta.insert(fir);
            ans[i] = fir;
        }
        if(seta.find(sec) == seta.end()){
            seta.insert(sec);
            ans[i] = sec;
        }
    }
}
    for(int i = 0;i < n;i++){
        if(vis[i])continue;
        ans[i] = method(1,first[i],last[i]);
    }
    cout << "YES" << "\n";
    for(int i = 0;i < n;i++)
        cout << ans[i] << "\n";
}
