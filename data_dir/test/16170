#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 1e5+50;
const int oo = 1e9;
const int mod = 1e9+7;

int a[N],p[N];
vector<int> seg[4*N],v[N];

void build(int n,int s,int e){
	if(s==e){
		seg[n].push_back(p[s]);
		return;
	}
	build(n*2,s,(s+e)/2);
	build(n*2+1,(s+e)/2+1,e);
	seg[n] = seg[n*2];
	for(int i=0;i<seg[2*n+1].size();i++)
		seg[n].push_back(seg[2*n+1][i]);
	sort(seg[n].begin(),seg[n].end());
}
int l,r;

int get(int n,int s,int e){
	if(s > r || e < l)return 0;
	if(s >= l && e <= r){
		int k = lower_bound(seg[n].begin(),seg[n].end(),l) - seg[n].begin();
		return k;
	}
	return get(n*2,s,(s+e)/2) + get(n*2+1,(s+e)/2+1,e);
}

int main(){
	int n,k;
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++){
		scanf("%d",a+i);
		v[a[i]].push_back(i);
	}
	for(int i=0;i<N;i++)
        for(int j=0;j<v[i].size();j++)
            if(j-k<0)p[v[i][j]]=-1;
            else p[v[i][j]]=v[i][j-k];
	build(1,1,n);
	int q;
	scanf("%d",&q);
	int lst=0;
	for(int i=0;i<q;i++){
		scanf("%d%d",&l,&r);
		l = (l+lst)%n + 1;
		r = (r+lst)%n + 1;
		if(l>r)swap(l,r);
		lst = get(1,1,n);
		printf("%d\n", lst);
	}
}