#include<bits/stdc++.h>
#include<unordered_map>
#include<unordered_set>
using namespace std;

map<string, int> mp;

int n;

#define MAX 100002
int have[MAX];

char buf[MAX];

string s;

vector<pair<pair<int, int>,int>  > each;

int ans[MAX];

int main(){
	mp["S"] = 0;
	mp["M"] = 1;
	mp["L"] = 2;
	mp["XL"] = 3;
	mp["XXL"] = 4;
	mp["XXXL"] = 5;
	for (int i = 0; i < 6; i++){
		cin >> have[i];
	}
	cin >> n;
	for (int i = 0; i < n; i++){
		scanf("%s", buf);
		s = buf;
		auto k = s.find(',');
		if (k == string::npos){
			have[mp[s]]--;
			ans[i] = mp[s];
			if (have[mp[s]] < 0){
				puts("NO");
				return 0;
			}
		}
		else{
			each.push_back(make_pair(make_pair(mp[s.substr(0, k)], mp[s.substr(k + 1, s.size() - k - 1)]),i) );
			if (each.back().first.first > each.back().first.second){
				swap(each.back().first.first, each.back().first.second);
			}
		}
	}
	sort(each.begin(), each.end());
	for (int i = 0; i < each.size(); i++){
		int a = each[i].first.first;
		int b = each[i].first.second;
		if (have[a]){
			have[a]--;
			ans[each[i].second] = a;
			continue;
		}
		have[b]--;
		ans[each[i].second] = b;
		if (have[b] < 0){
			puts("NO");
			return 0;
		}
	}
	puts("YES");
	for (int i = 0; i < n; i++){
		for (auto it = mp.begin(); it != mp.end(); it++){
			if ((*it).second == ans[i]){
				printf("%s\n", (*it).first.c_str());
			}
		}
	}
	return 0;
}