#include <bits/stdc++.h>

using namespace std;

const int mod = 998244353;

int add() { return 0; }
template<typename... M> int add(int a, M... b) {
  int x = add(b...);
  return a + x - mod * (a + x >= mod);
}

int mul() { return 1; }
template<typename... M> int mul(int a, M... b) {
  return int(1ll * a * mul(b...) % mod);
}

int pwr(int a, long long x) {
  return (x ? mul(pwr(mul(a, a), x >> 1), (x & 1 ? a : 1)) : 1);
}

int dvd(int a, int b) {
  return mul(a, pwr(b, mod - 2));
}

int sub(int a, int b) {
  return a - b + mod * (a < b);
}

void inc(int& a, int b) {
  a = add(a, b);
}

void dec(int& a, int b) {
  a = sub(a, b);
}

const int N = 5e5 + 10;
int f[N], invf[N];

int C(int n, int k) {
  if (n < k or 0 > k) {
    return 0;
  }
  return mul(f[n], invf[n - k], invf[k]);
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0), cout.tie(0);

  f[0] = invf[0] = 1;
  for (int i = 1; i < N; ++i) {
    f[i] = mul(f[i - 1], i);
    invf[i] = dvd(invf[i - 1], i);
  }

  int n;
  long long k;
  cin >> n >> k;
  if (k >= n) {
    cout << 0;
    return 0;
  }
  if (k == 0) {
    cout << f[n];
    return 0;
  }
  int ans = mul(2, C(n, n - k));
  int x = n - k;
  int s = 0;
  for (int i = 0; i <= x; ++i) {
    int cur = mul(C(x, i), pwr(i, n));
    if ((x - i) & 1) {
      dec(s, cur);
    } else {
      inc(s, cur);
    }
  }
  cout << mul(ans, s);

  return 0;
}
