#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>
#include <random>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2e9;
ll LINF = (ll)4e18;
using namespace std;
//ll mod = 1e9 + 7;
#define M_PI       3.14159265358979323846   // pi

int have[100005];

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("domino-covering-1.in", "r", stdin);
	//freopen("domino-covering-1.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	
	map<int, vector<int>>a;

	for (int i = 0; i < 2 * n; i++) {
		int x;
		cin >> x;
		a[x - 1].push_back(i);
	}
	ll p1, p2;
	p1 = p2 = 0;

	ll ans = 0;

	for (int i = 0; i < n; i++) {
		ll d1, d2, d3, d4;
		d1 = abs(a[i][0] - p1);
		d2 = abs(a[i][1] - p2);
		d3 = abs(a[i][1] - p1);
		d4 = abs(a[i][0] - p2);

		if (d1 + d2 <= d3 + d4) {
			ans += d1 + d2;
			p1 = a[i][0];
			p2 = a[i][1];
		}
		else {
			ans += d3 + d4;
			p1 = a[i][1];
			p2 = a[i][0];
		}
	}
	cout << ans;
	return 0;
}