/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

//#define DEBUG
#ifndef DEBUG
#define endl "\n"
#define log(args...)
#else
#define log(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); logf(_it, args); cout<<endl; }
void logf(istream_iterator<string> it) {
}
template<typename T, typename ... Args>
void logf(istream_iterator<string> it, T a, Args ... args) {
	cout << *it << "=" << a << " ";
	logf(++it, args...);
}
#endif

const double PI = acos(-1);
typedef long long ll;
#define fori(n) for(int i=0; i<(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cinll(l) ll l; cin>>l;
#define cind(d) double d; cin>>d;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinall(a, n) vll a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }
#define cinad(a, n) vd a(n); fori(n) { cin>>a[i]; }

typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;

void solve() {
    cini(n);
    cini(m);
    cini(k);
    cinai(a,n);

/* only the persons before me matter */
    k=min(k,m-1);
    
/* number of free choices==m-1-k
 * So, we remove that k elements from the array ends
 * that the min of all left pairs is max.
 * A pair is worth its max.
 * A left pair is one of the m-k+1 pairs that can be 
 * created by the persons with free will.
 *
 * We simply brute force that.
 */

    const int h=m-1-k;  // they choices
log(k,h);
    int ans=1;
    for(int i=0; i<=k; i++) {
/* Me remove i elements from left, k-i from right.
 * They remove j elements from the left h-j from the right.
 **/
        int lans=1e9;
        int l=i;
        int r=n-1-(k-i)-h;
        for(int j=0; j<=h; j++) {
log(a[l],a[r]);
            lans=min(lans, max(a[l], a[r]));
            l++;
            r++;
        }
        ans=max(ans,lans);
    }

    cout<<ans<<endl;
}

int main() {
	cin.tie(nullptr);
	std::ios::sync_with_stdio(false);
	cini(t);
	while (t--)
		solve();
}

