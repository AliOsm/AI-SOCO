# include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 2;
const int block = 800;

int n, m, a[N], b[N], c[N], d[N], fen[300][N], bl[N];

 void update(int x, int pos, int val){
      for(; pos <= n; pos |= pos + 1)
            fen[x][pos] += val;
}

 int get(int x, int r){
      int res = 0;
      for(; r > 0; r = (r & (r + 1)) - 1)
            res += fen[x][r];
      return res;
}

 int get(int x, int l, int r){
      return get(x, r) - get(x, l - 1);
}

int main(){
      scanf("%d %d", &n, &m);

      for(int i = 1; i <= n; i ++)
            scanf("%d", &a[i]);

      for(int i = 1; i <= n; i ++){
            scanf("%d", &b[i]);
            c[b[i]] = i;
            bl[i] = (i - 1) / block;
      }

      for(int i = 1; i <= n; i ++){
            d[i] = c[a[i]];
      }

      for(int i = 1; i <= n; i ++)
            c[a[i]] = i;

      for(int i = 1; i <= n; i ++)
            update(bl[i], d[i], 1);


      while(m --){
            int type;
            scanf("%d", &type);
            if(type == 1){
                  int la, ra, lb, rb, ans = 0;
                  scanf("%d %d %d %d", &la, &ra, &lb, &rb);
                  if(bl[la] == bl[ra]){
                        for(int i = la; i <= ra; i ++){
                              if(lb <= d[i] && d[i] <= rb)
                                    ans ++;
                        }
                        printf("%d\n", ans);
                        continue;
                  }
                  for(int i = la; bl[i] == bl[la]; i ++){
                        if(lb <= d[i] && d[i] <= rb)
                              ans ++;
                  }
                  for(int i = ra; bl[i] == bl[ra]; i --){
                        if(lb <= d[i] && d[i] <= rb)
                              ans ++;
                  }
                  for(int i = bl[la] + 1; i < bl[ra]; i ++)
                        ans += get(i, lb, rb);

                  printf("%d\n", ans);
            } else {
                  int x, y;
                  scanf("%d %d", &x, &y);
                  update(bl[ c[ b[x] ] ], x, -1);
                  update(bl[ c[ b[y] ] ], x, 1);
                  update(bl[ c[ b[y] ] ], y, -1);
                  update(bl[ c[ b[x] ] ], y, 1);
                  swap(d[ c[ b[x] ] ], d[ c[ b[y] ] ]);
                  swap(b[x] , b[y] );
            }
      }

}