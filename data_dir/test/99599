
#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#include<map>
#include<iostream>
#include <cstring>
#include <iomanip>
#include <algorithm>
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);

//const double PI  = acos(-1.0);
using namespace std;
//typedef pair<double,double>pdd;
typedef long long  ll;
//typedef pair<ll, ll>pii;
//typedef complex<double> point;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
const double EPS = 1e-9;
const int N = 5e5 + 9;
int n,a[N];

 int main()
{
//freopen("circles.in ","r",stdin);
//freopen("circles.out","w",stdout);
//__builtin_popcount()
input
        int t;
        cin>>t;
        while(t--)
        {
            cin>>n;
            vector<int>v;
            forr(i,1,n)cin>>a[i];
            forr(i,1,n)
            {
                if(a[i]==-1)
                {
                    if(i>1&&a[i-1]!=-1)v.push_back(a[i-1]);
                    if(i<n&&a[i+1]!=-1)v.push_back(a[i+1]);
                }
            }
            sort(v.begin(),v.end());
            if((int)v.size()==0)
            {
                cout<<"0 0"<<endl;
            }
            else
            {
                int x=v.size()-1;
                int y=v[x]+v[0];
                y/=2;
               int mx=0;
               forr(i,1,n)
               {
                   if(a[i]==-1)a[i]=y;
                   if(i>1)mx=max(abs(a[i]-a[i-1]),mx);
               }
                cout<<mx<<" "<<y<<endl;
            }
        }





return 0;
}
