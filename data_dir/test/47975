#include <bits/stdc++.h>
#include <iostream>	
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
typedef long long ll;

const int inf = int(2e9);
const int mod = inf + 7;
using namespace std;

char c[55][55];
int n, m;
bool check(int x, int y){
	if(x >= n || x < 0 || y >= m || y < 0 || c[x][y] == '#') return false;
	return true;
}
void solve()
{	
	int sx, sy, ex, ey;
	cin >> n >> m;
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			cin >> c[i][j];
			if(c[i][j] == 'S') sx = i, sy = j;
			if(c[i][j] == 'E') ex = i, ey = j;
		}
	}
	vector<char> v;
	string s;
	cin >> s;
	for(char c = '0'; c <= '3'; ++c){
		v.pb(c);
	}
	int sum = 0;
	int cnt = 0;
	do{
		int nx = sx, ny = sy;
		for(int i = 0; i < s.size(); ++i){
			if(s[i] == v[0]) nx++;
			if(s[i] == v[1]) ny++;
			if(s[i] == v[2]) nx--;
			if(s[i] == v[3]) ny--;
			if(nx == ex && ny == ey) {
				cnt++;
				break;
			}
			if(!check(nx, ny)){
				break;
			}
		}
	}
	while(next_permutation(all(v)));
	cout << cnt;
}

int main()
{
	Red;
	solve();
	return 0;
}