
#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES

#include <iostream>
#include <cstdio>
#include <string>
#include <stdlib.h>
#include <set>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <math.h>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>	
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <thread>

using namespace std;

#define int long long
#define ll long long
typedef int hv;
#define double long double
#define make(type, x) type x; cin>>x	
#define make2(type, x, y) type x, y; cin>>x>>y
#define make3(type, x, y, z) type x, y, z; cin>>x>>y>>z
#define make4(type, x, y, z, q) type x, y, z, q; cin>>x>>y>>z>>q
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
#define VI vector<int>
#define VVI vector<vector<int>>
#define PII pair<int, int>
#define PPII pair<PII, int>
#define M7 1000000007ll
#define M9 1000000009ll
#define makev(a, n) VI a(n); FOR(n) cin >> a[i];

string sum(string s1, string s2) {
	if (s1.length() > s2.length()) swap(s1, s2);
	string res = s1;
	reverse(ALL(res));
	int carry = 0;
	for (int i = 0; i < s2.length(); ++i) {
		if (i == res.length()) res.push_back('0');
		int num = res[i] - '0';
		num += carry;
		num += s2[s2.length() - i - 1] - '0';
		carry = num > 9;
		res[i] = (num % 10) + '0';
	}
	if (carry) res.push_back('1'); 
	while (res.size() > 1 && res.back() == '0') res.erase(--res.end());
	reverse(ALL(res));
	return res;
}

void Solve() {
	make(int, l);
	make(string, s);
	int d1 = (l + 1)/ 2;
	while (d1 < l && s[d1] == '0') d1++;
	string t11 = s.substr(0, d1);
	string t12 = s.substr(d1);
	string res1 = sum(t11, t12);
	
	int d2 = (l + 1) / 2 - 1;
	while (d2 >= 0 && s[d2] == '0') d2--;
	string t21 = s.substr(0, d2);
	string t22 = s.substr(d2);
	string res2 = sum(t21, t22);

	if (res2.length() < res1.length()) res1 = res2;
	if (res1.length() < res2.length()) res2 = res1;
	res1 = min(res1, res2);
	cout << res1;
}

signed main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#ifdef _SUPER_DEFINE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	Solve();
	fflush(stdout);
	while (!cin.eof()) {
		string s = "_";
		do getline(cin, s);
		while (!cin.eof() && !s.empty());
		if (cin.eof()) return 0;
		FOR(2) cout << endl;
		Solve();
		fflush(stdout);
	}
#else
	Solve();
#endif
	return 0;
}