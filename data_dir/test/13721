#include <bits/stdc++.h>
#define int long long
#define mx 200005
#define inf 99999999999
#define f1 first
#define s2 second

using namespace std;

vector <int> x[4*mx];
int ara[mx];

void init(int node, int i, int j){
    if(i==j){
        x[node].push_back(-ara[i]);
        return;
    }
    init(node*2, i, (i+j)/2);
    init(node*2 + 1, (i+j)/2 + 1, j);
    x[node].resize(j-i+1);
    merge(x[node*2].begin(), x[node*2].end(), x[node*2+1].begin(), x[node*2+1].end(), x[node].begin());
}

int get(int node, int i, int j, int b, int e, int val){
    if(i>e||j<i){
        return 0;
    }
    if(i>=b&&j<=e){
        int l = upper_bound(x[node].begin(), x[node].end(), val) - x[node].begin();
        return l;
    }
    int p1 = get(node*2, i, (i+j)/2, b, e, val);
    int p2 = get(node*2 + 1, (i+j)/2 + 1, j, b, e, val);
    return p1+p2;
}

int32_t main(){
    //freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, i, j, m, a, k, b, c;
    while(cin >> n){
        for(i=1;i<=n;i++){
            cin >> ara[i];
            ara[i] = min(ara[i], n);
        }
        init(1, 1, n);
        a = 0;
        for(i=1;i<=n;i++){
            a += get(1, 1, n, 1, ara[i], -i);
            if(ara[i]>=i) a--;
        }
        cout << a/2 << endl;
        for(i=0;i<mx;i++) {
            x[i].resize(0);
        }
    }
    return 0;
}




