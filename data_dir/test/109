#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define all(x) x.begin(),x.end()
 
int const N = 500001;
int n, m, mx, lf, lr, pa[N], an; 
vector<int>g[N];
pair<int,int>range[N];
set<int>rem;
bool have[N], vs[N], take[N];
 
void go(int u, int p){
     vs[u] = true;
     pa[u] = p;
     lf = min(lf, u);
     lr = max(lr, u);
     for(auto i: g[u])if(!vs[i])go(i, p);
}
 
void ad(int u, int l , int r){
     vs[u] = true;
     range[u] = {l, r};
     for(auto i: g[u])if(!vs[i])ad(i, l, r);
}
 
int find(int u){if(pa[u] == u || !pa[u])return u; return pa[u] = find(pa[u]);}
 
void gogo(int u, int l, int r){
     vs[u] = true;
     mx = max(mx, u);
     l = min(l, range[u].first);
     r = max(r, range[u].second);
     if(u+1 >= l && u+1 <= r && !vs[u+1] && find(u+1) != find(u)){
        ++an;
        g[u].push_back(u+1);
        pa[find(u+1)] = find(u);
        l = min(l, range[u+1].first);
        r = max(r, range[u+1].second);
        gogo(u+1, l, r);
     }
     if(u + 1 >= l && u + 1 <= r && !vs[u+1] && find(u+1) == find(u)){
        gogo(u+1, l, r);
     }
     for(auto j: g[u])if(!vs[j])gogo(j, l, r);
}
 
int main(){
    #ifndef ONLINE_JUDGE
    freopen("read.txt","r",stdin);
    #endif
    scanf("%d%d", &n, &m);
    for(int i = 0, u, v; i<m; ++i){
        scanf("%d%d", &u, &v);
        g[u].push_back(v);
        g[v].push_back(u);
        have[u] = have[v] = 1;
    }
    for(int i = 1; i<=n; ++i){
       if(pa[i])continue;
       lf = i, lr = i;
       go(i, i);
       range[i] = {lf, lr};
    }
    memset(vs, 0, sizeof vs);
    for(int i = 1; i <= n; ++i){
         if(!vs[i])ad(i, range[i].first, range[i].second);
    }
    memset(vs, 0, sizeof vs);
    for(int i = 1; i<=n; ++i){
        if(vs[range[i].first] || vs[range[i].second])continue;
        int x = range[i].first, y = range[i].second;
        if(vs[x] || vs[y])continue;
        gogo(x, x, y);
    }
    printf("%d\n", an);
} 