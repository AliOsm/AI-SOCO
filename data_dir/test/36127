#include <bits/stdc++.h>
using namespace std;

#define ll long long
struct node
{
	int x, y, z;
	node () {}
	node (int x, int y, int z) : x(x), y(y), z(z) {}
};
int n, d, k;

int main()
{
	while (scanf("%d%d%d", &n, &d, &k) != EOF)
	{
		++d;
		if (d > n || (d > 2 && k == 1)) puts("NO");
		else
		{
			ll tot = 0;
			ll base = k - 2;
			for (int i = 2; i <= (d + 1) / 2 && tot < n; ++i) 
			{
				//cout << "b:" << i << endl;
				tot += base;
				base *= k;
			}
			base = k - 2;  
			for (int i = d - 1; i > (d + 1) / 2 && tot < n; --i)
			{
				tot += base;
				base *= k;
			}
			//cout << tot << endl;
			if (tot + d < n) puts("NO"); 
			else
			{
				puts("YES");
				int id = d + 1;
				for (int i = 2; i <= d; ++i) printf("%d %d\n", i - 1, i);
				queue <node> q;
				for (int i = 2; i < d; ++i) q.push(node(i, k - 2, min(i - 1, d - i)));
				while (!q.empty() && id <= n)
				{
					int root = q.front().x, remind = q.front().y, deep = q.front().z; 
					--deep;
					q.pop(); 
					while (remind-- && id <= n)
					{
						printf("%d %d\n", root, id);
						if (deep) 
							q.push(node(id, k - 1, deep));  
						++id; 
					}
				}
			}
		}
	}
	return 0;
}
