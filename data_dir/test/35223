#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <memory.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;
typedef long long ll;
vector<int> p;
int find(int u) {
	if (p[u] == u)
		return u;
	return p[u] = find(p[u]);
}
int main()
{
	int n;
	scanf("%d", &n);
	p.resize(n);
	vector<int> v(n);
	map<int, int> loc;
	for (int i = 0; i < n; ++i) {
		scanf("%d", &v[i]);
		loc[v[i]] = i;
		p[i] = i;
	}
	vector<int> g = v;
	sort(g.begin(), g.end());
	for (int i = 0; i < n; ++i) {
		int cur = g[i];
		int a = loc[cur];
		int b = i;
		a = find(a);
		b = find(b);
		p[a] = b;
	}
	vector<int> mp(n, -1);
	vector<vector<int> > sol;
	for (int i = 0; i < n; ++i) {
		int x = find(i);
		if (mp[x] == -1) {
			mp[x] = sol.size();
			sol.push_back(vector<int>());
		}
		sol[mp[x]].push_back(i);
	}
	printf("%d\n", sol.size());
	for (int i = 0; i < sol.size(); ++i) {
		printf("%d", sol[i].size());
		for (int j = 0; j < sol[i].size(); ++j)
			printf(" %d", sol[i][j] + 1);
		puts("");
	}
	return 0;
}