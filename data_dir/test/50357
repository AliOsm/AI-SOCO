
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <array>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
#include <bitset>
#include <complex>
using namespace std;
#define rep(i, n) for (int (i) = 0; (i) < (n); (i) ++)
#define rep1(i, n) for (int (i) = 1; (i) <= (n); (i) ++)
#define FOR(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout<<#a<<" :";FOR(i123,x,y)cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int((x).size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int N;
int L[300100];
int R[300100];
int main() {
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  multiset<int, greater<int> > setl;
  multiset<int, greater<int> > setr;
  cin >> N;
  for (int i = 1; i <= N; i++) {
    cin >> L[i] >> R[i];
    setl.insert(L[i]);
    setr.insert(R[i]);
  }
//  dba(L, 1, N); dba(R, 1, N);
  int ans = 0;
  for (int i = 1; i <= N; i++) {
    setl.erase(setl.find(L[i]));
    setr.erase(setr.find(R[i]));
    int l = *setl.begin();
    int r = *(--setr.end());
//    db(l); db(r); cout << endl;
    ans = max(ans, r - l);
    setl.insert(L[i]);
    setr.insert(R[i]);
  }
  cout << ans << endl;
}

