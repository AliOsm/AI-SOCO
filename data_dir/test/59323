#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

const int N = 300100;

int n;

ll d[N], c[N], pref[N], dp[N], a;

ll ans = 0;

ll t[N*4], ob[N*4];

void push(int v){
    if (ob[v] == 0)
        return;
    t[v+v] += ob[v];
    t[v+v+1] += ob[v];
    ob[v+v] += ob[v];
    ob[v+v+1] += ob[v];
    ob[v] = 0;
}

void update(int v, int l, int r, int tl, int tr, ll x){
    if (l > r || tl > r || l > tr || tl > tr)
        return;
    if (tl <= l && r <= tr){
        t[v] += x;
        ob[v] += x;
        return;
    }
    int mid = (l+r)>>1;
    push(v);
    update(v+v, l, mid, tl, tr, x);
    update(v+v+1, mid+1, r, tl, tr, x);
    t[v] = max(t[v+v], t[v+v+1]);
}

ll get(int v, int l, int r, int tl, int tr){
    if (l > r || tl > r || l > tr || tl > tr)
        return -1e15;
    if (tl <= l && r <= tr){
        return t[v];
    }
    push(v);
    int mid = (l+r)>>1;
    return max(get(v+v, l, mid, tl, tr), get(v+v+1, mid+1, r, tl, tr));
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);

    cin >> n >> a;
    for (int i = 1; i <= n; i++){
        cin >> d[i] >> c[i];
        pref[i] = pref[i-1] + (a-c[i]);
    }
    stack<pair<ll, ll> > stck;
    update(1, 1, n, 1, 1, a-c[1]);
    //cout << endl;
    ans = max(ans, a-c[1]);
    stck.push({1e18, 1});
    for (int i = 2; i <= n; i++){
        ans = max(ans, a-c[i]);
        update(1, 1, n, 1, i, a-c[i]);
        ll cur = (d[i]-d[i-1])*(d[i]-d[i-1]);
        while(!stck.empty() && stck.top().first <= cur){
            int pos = stck.top().second;
            ll x = stck.top().first;
            stck.pop();
            int lst = stck.top().second;
            update(1, 1, n, lst, pos-1, x);
        }
        update(1, 1, n, stck.top().second, i-1, -cur);
        ans = max(ans, get(1, 1, n, 1, i-1));
        //cout << i << ' ' << ans << ' ' << get(1, 1, n, 1, i-1) << endl;
        stck.push({cur, i});
    }
    cout << ans;

}
