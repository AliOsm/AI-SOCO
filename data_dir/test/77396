#include<bits/stdc++.h>
using namespace std;
const int MAX = 3010;
bool vis[MAX][MAX]; int ans[MAX][MAX] , p[MAX];
bool ya[MAX] , no[MAX];
int main(){
    ios_base::sync_with_stdio(0);
    int n , k; cin>>n>>k;
    for(int i=1;i<=n;i++){
        cin>>p[i];
    }
    no[n+1] = true;
    for(int i=n ; i>=1 ;i--){
        ya[i] = (p[i] == 100) || ya[i+1];
        no[i] = (p[i] == 0) && no[i+1];
    }
    //ya --> ghatan mimire
    //no --> ghatan nmimire
    int A =0;
    queue<pair<int,int>> q;
    q.push({1,2}); ans[1][2] = 0; vis[1][2] = true;
    while(!q.empty()){
        pair<int,int> v = q.front(); q.pop();
        int st = v.first , sec = v.second;
        if(ans[st][sec] <= k)A++;
        if(st>n){continue;}
        if(sec>n){continue;}
        if(!no[sec] && p[st] != 100){
            if(vis[sec][sec+1] == false){
                q.push({sec , sec+1});
                vis[sec][sec+1] = true; ans[sec][sec+1] = ans[st][sec] + 1;
            }
        }
        if(!no[sec] &&  p[st] != 0){
            if(vis[sec+1][sec+2] == false){
                q.push({sec+1 , sec+2});
                vis[sec+1][sec+2] = true; ans[sec+1][sec+2] = ans[st][sec] + 1;
            }
        }
        if(!ya[sec] && p[st]!= 0){
            if(vis[st][sec+1] == false){
                q.push({st , sec+1});
                vis[st][sec+1] = true; ans[st][sec+1] = ans[st][sec] + 1;
            }
        }
    }
    cout<<A; return 0;
}
