#include<bits/stdc++.h>
typedef long long int ll;
typedef long double ld;
#define pi acos(-1)
#define MOD 1000000007
#define MOD2 1000000006
#define TEMPMOD1 998244353
#define TEMPMOD2 998244352
#define INF 1000000000000000001
#define NEGINF -1000000000000000007
#define vll vector<ll> 
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define plll pair<pll,ll>
#define vplll vector<plll>
#define vpll vector<pll>
using namespace std;
using namespace std::chrono; 
#define fileIO(name) \
    freopen(name".in", "r", stdin); \
    freopen(name".out", "w", stdout);
    
ll parent[26];
ll rank1[26];
ll count1[26];

ll findset(ll idx)
{
    if(parent[idx]==idx)
    {
        return idx;
    }
    return parent[idx]=findset(parent[idx]);
}

void charunion(ll idx1,ll idx2)
{
    if(rank1[idx1]>rank1[idx2])
    {
        parent[idx2]=idx1;
        rank1[idx1]+=rank1[idx2];
    }
    else
    {
        parent[idx1]=idx2;
        rank1[idx2]+=rank1[idx1];
    }
    return;
}

void unionset(string str1,string str2)
{
    ll len1=str1.size();
    ll len2=str2.size();
    ll idx1,idx2;
    for(ll i=0;i<len1;i++)
    {
        for(ll j=0;j<len2;j++)
        {
            idx1=str1[i]-'a';
            idx2=str2[j]-'a';
            if(findset(idx1)!=findset(idx2))
            {
                charunion(idx1,idx2);   
            }
            
        }
    }
}

string reduced(string str1)
{
    map<char,ll> freq;
    ll len1=str1.size();
    for(ll i=0;i<len1;i++)
    {
        freq[findset(str1[i]-'a')+'a']++;
        count1[str1[i]-'a']++;
    }
    string res;
    for(auto it:freq)
    {
        res+=it.first;
    }
    return res;
}

int main()
{ 
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    for(ll i=0;i<26;i++)
    {
        parent[i]=i;
        rank1[i]=1;
    }
    ll n;
    cin>>n;
    string str1[n];
    string charlast[26];
    string temp="a";
    for(ll i=0;i<26;i++)
    {
        charlast[i]=temp;
        temp[0]++;
    }
    while(n--)
    {
        cin>>temp;
        temp=reduced(temp);
        ll len1=temp.size();
        for(ll i=0;i<len1;i++)
        {
            unionset(charlast[temp[i]-'a'],temp);
            charlast[temp[i]-'a']=temp;
        }
    }
    set<ll>s1;
    for(ll i=0;i<26;i++)
    {
        if(count1[i]>0)
        {
            s1.insert(findset(i));
        }
    }
    cout<<s1.size();
    return 0;
}