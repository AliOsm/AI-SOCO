#include<bits/stdc++.h>
#define int long long int
#define ull unsigned long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD 1000000007
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int BIG=pow(2,20);
const int N=100005;
int32_t main(){
        getFaster;
         int t;
         cin>>t;
         rep(ii,0,t)
         {
              int n;
              cin>>n;
              set<string> s;
              map<int,bool> bad;
              string arr[n];
              rep(i,0,n)
              {
              	string str;
              	cin>>str;
              	arr[i]=str;
              	int bef=s.size();
              	s.insert(str);
              	int aft=s.size();
              	if(bef==aft)
              	bad[i]=true;
              }
              int siz=s.size();
              cout<<n-siz<<endl;
              rep(i,0,n)
              {
              	   if(!bad[i])
              	   cout<<arr[i]<<endl;
              	   else
              	   {
              	   	    string cur=arr[i];
                        string v="!!!!";
                        string ans="!"; 
              	   	    rep(i,0,4)
              	   	    {
              	   	    	rep(j,0,4)
              	   	    	{
              	   	    		if(j!=i)
              	   	    		v[j]=cur[j];	
              	   	    	}
              	   	    	rep(j,0,9)
              	   	    	{
              	   	    		 v[i]=j+'0';
                                 string temp=v;
                                 if(s.find(temp)==s.end())
                                 {
                                     ans=temp;
                                     break;
                                 }

              	   	    	}
              	   	    	if(ans!="!")break;
              	   	    }
              	   	    cout<<ans<<endl;
              	   	    s.insert(ans);
              	   } 
              }	
         }
         return 0;
}