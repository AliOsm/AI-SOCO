#include<bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp>
//using namespace boost::multiprecision;
using namespace std;
#define PI                      3.1415926535897932384626
#define int                     long long int
#define fi                      first
#define se                      second
#define pq                      priority_queue
#define pb                      push_back
#define endl                    '\n'
#define all(x)                  x.begin(),x.end()
#define pii                     pair<int,int>
#define fill(x,y)               memset(x,y,sizeof(x));
#define fast                    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define hash                    _H
#define LG                      long double         
#define vi                      std::vector<int>
#define SZ(x)                   ((int)x.size())
#define UNI(vec)                (vec.erase( unique( vec.begin(), vec.end() ), vec.end() ));
 
template<typename T> T pow(T a,T b, int m){T ans=1; while(b>0){ if(b%2==1) ans=(ans*a)%m; b/=2; a=(a*a)%m; } return ans%m; }
template<typename T>T InverseMod(T a,int m){return pow(a,m-2,m);}
template<typename T>int SquareDist(T a,T b){int x = abs(a.fi - b.fi),y = abs(a.se - b.se); return x*x + y*y;}
 
 
void solve() {
    int n;
    cin >> n;
    int arr[n+1];
    for(int i = 1; i <= n; ++i) {
        cin >> arr[i];
    }
    bool f[n + 1];
    fill(f,0);
    std::vector<pair <int, pii > > v;
    int q;
    cin >> q;
    for(int i = 0; i < q; ++i) {
        int t;
        cin >> t;
        if(t == 2) {
            int x;
            cin >> x;
            v.pb({2,{x,-1}});
        }
        else {
            int a,b;
            cin >> a >> b;
            v.pb({1,{a,b}});
        }
    }
    int m = -1;

    for(int i = q-1; i >= 0; --i) {
        if(v[i].fi == 1 and !f[v[i].se.fi]) {
            arr[v[i].se.fi] = max(v[i].se.se,m);
            f[v[i].se.fi] = 1;
        } else if(v[i].fi == 2) {
            m = max(m,v[i].se.fi);
        }
    }
    for(int i = 1; i <= n; ++i) {
        if(!f[i]) {
            arr[i] = max(arr[i],m);
        }
    }
    for(int i = 1 ; i <= n; ++i) {
        cout << arr[i] << " ";
    }
}   

 
 
 
 
signed main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    fast;
    int t = 1;
    //cin >> t;
    while(t--) {
        //cout << t << endl;
        solve();
    }
} 