#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define mp make_pair
#define int64 long long

#ifdef _DEBUG
    const int N = 3010;
#else
    const int N = 3010;
#endif

const int64 inf = 1e18;

#define y1 var

int n, x1, y1, x2, y2, x[N], y[N];


int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
	scanf("%d%d%d%d%d", &n, &x1, &y1, &x2, &y2);
	for (int i = 1; i <= n; i++) scanf("%d%d", &x[i], &y[i]);
	int64 ans = inf;
	for (int i = 1; i <= n; i++)
	{
		int64 r1 = 1ll * (x[i] - x1) * (x[i] - x1) + 1ll * (y[i] - y1) * (y[i] - y1);
		int64 r2 = 0;
		for (int j = 1; j <= n; j++)
		{
			int64 tmp = 1ll * (x[j] - x1) * (x[j] - x1) + 1ll * (y[j] - y1) * (y[j] - y1);
			if (tmp > r1)
			{
				r2 = max(r2, 1ll * (x[j] - x2) * (x[j] - x2) + 1ll * (y[j] - y2) * (y[j] - y2));
			}
		}
		ans = min(ans, r1 + r2);
	}
	for (int i = 1; i <= n; i++)
	{
		int64 r2 = 1ll * (x[i] - x2) * (x[i] - x2) + 1ll * (y[i] - y2) * (y[i] - y2);
		int64 r1 = 0;
		for (int j = 1; j <= n; j++)
		{
			int64 tmp = 1ll * (x[j] - x2) * (x[j] - x2) + 1ll * (y[j] - y2) * (y[j] - y2);
			if (tmp > r2)
			{
				r1 = max(r1, 1ll * (x[j] - x1) * (x[j] - x1) + 1ll * (y[j] - y1) * (y[j] - y1));
			}
		}
		ans = min(ans, r1 + r2);
	}
	cout << ans;
    return 0;
}