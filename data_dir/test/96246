#include<bits/stdc++.h>
#define x first
#define y second
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ins insert
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define rep(i,a,b) for(ll i=a;i<=b;i++)
#define rev(i,a,b) for(int i=b;i>=a;i--)
#define boost ios_base::sync_with_stdio(NULL),cin.tie(NULL),cout.tie(NULL)
#define nl '\n'

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,int> pli;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<pii> vii;

const int N=501;
const int MXN=1000001;
const int inf=1e9;
const ll INF=1e18;

int a[N][N];
int l[N][N],r[N][N],u[N][N],d[N][N];
int us[N][N];
vi gr[N],gc[N];

string ans="";

void dfs(int x,int y){
  us[x][y]=1;
  if(a[x][y]==0){
    ans+="1";
    a[x][y]=1;
  }
  if(~u[x][y]){
    if(!us[x-1][y]){
      if(!us[u[x][y]][y]){
      ans+="U";
      dfs(x-1,y);
      ans+="D";}
    }
  }
  if(~d[x][y]){
    if(!us[x+1][y]){
      if(!us[d[x][y]][y]){
      ans+="D";
      dfs(x+1,y);
      ans+="U";}
    }
  }
  if(~l[x][y]){
    if(!us[x][y-1]){
      if(!us[x][l[x][y]]){
      ans+="L";
      dfs(x,y-1);
      ans+="R";}
    }
  }
  if(~r[x][y]){
    if(!us[x][y+1]){
      if(!us[x][r[x][y]]){
      ans+="R";
      dfs(x,y+1);
      ans+="L";}
    }
  }
  if(a[x][y]==1){
    ans+="2";
    a[x][y]=0;
  }
}

int main(){
  boost;
  int n,x0,y0;
  cin>>n>>x0>>y0;
  for(int i=1;i<=n;i++){
    int x=-1;
    for(int j=1;j<=n;j++){
      cin>>a[i][j];
      if(i==x0&&j==y0){
        if(a[i][j]==0){
          a[i][j]=1;
          ans+="1";
        }
      }
      l[i][j]=x;
      if(a[i][j])x=j;
    }
    x=-1;
    for(int j=n;j>=1;j--){
      r[i][j]=x;
      if(a[i][j])x=j;
    }
  }
  for(int j=1;j<=n;j++){
    int x=-1;
    for(int i=1;i<=n;i++){
      u[i][j]=x;
      if(a[i][j])x=i;
    }
    x=-1;
    for(int i=n;i>=1;i--){
      d[i][j]=x;
      if(a[i][j])x=i;
    }
  }
  dfs(x0,y0);
  for(int i=1;i<=n;i++){
    for(int j=1;j<=n;j++){
      if(a[i][j]==1){
        cout<<"NO";
        return 0;
      }
    }
  }
  cout<<"YES\n";
  cout<<ans;
  return 0;
}
