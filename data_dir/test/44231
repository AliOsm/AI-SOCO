//**KEEP IT SHORT AND SIMPLE**

#include <bits/stdc++.h>
#define IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define REP(i,a,b) for (int i = a; i < b; i++)
#define NL '\n'
#define F first
#define S second
#define dot(a, b) (conj(a) * (b)).real()
#define cross(a, b) (conj(a)* (b)).imag()
using namespace std;
typedef long long ll;
typedef long double ld;
typedef bool bl;
typedef vector < vector<long long> > vvl;
typedef vector <long long> vll;
typedef pair <long long, long long> pll;
typedef map <long long, long long> mll;
typedef map <long long, bool> mlb;
typedef priority_queue<long long, vector<long long>, greater<long long> > minPq;
typedef tuple<ll, ll, ll> line;
typedef complex<double> point;
const double pi = 2 * acos(0.0);
const int OO = 0x3f3f3f3f;
ll Mod = 1e9+7;
ll powers[100010];
void preCal()
{
    powers[0] = 1;
    REP(i, 1, 100005)
        powers[i] = (powers[i - 1] * 2) % Mod;
    REP(i, 1, 100005)
        powers[i] = (powers[i] + powers[i - 1]) % Mod;
}
int main()
{
    IO
    preCal();
    ll n, m, a, b;
    cin >> n >> m;
    char arr[n];
    ll acc0[n], acc1[n];
    acc1[0] = acc0[0] = 0;
    REP(i, 0, n)
    {
        cin >> arr[i];
        if(i)
        {
            acc0[i] = acc0[i - 1];
            acc1[i] = acc1[i - 1];
        }
        if(arr[i] == '0')   acc0[i]++;
        else                acc1[i]++;
    }
    while(m--)
    {
        cin >> a >> b;
        --a;
        --b;
        ll zero = acc0[b] - (a ? acc0[a - 1] : 0);
        ll one = acc1[b] - (a ? acc1[a - 1] : 0);
        ll sum = powers[one - 1];
        ll sum2 = (sum * powers[zero - 1]) % Mod;
        cout << (sum + sum2) % Mod << NL;
    }
    return 0;
}
