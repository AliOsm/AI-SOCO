#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e18
#define MOD ((long) 1e9 + 7)
#define mll map<long, long>
#define pll pair<long, long>
#define umap unordered_map
#define uset unordered_set
#define pb push_back
#define pf push_front
#define FOR(i, a, b) \
  for (long i = a; i < (long) b; i++)
#define SORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
  FOR (_i, 0, v.size()) \
    printf("%lld ", v[_i]); \
  printf("\n");

set<long> gera_primos(long n)
{
  set<long> primos;
  vector<bool> crivo(n);
  primos.insert(2);
  for (long i = 3; i <= n; i += 2) {
    if (crivo[i]) continue;
    primos.insert(i);
    for (long j = i; j <= n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Link
{
  long from, to, cost;
};

struct Node
{
  bool visitado = false;
  vector<long> out;
};

int main()
{
  //ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

  long n;
  cin >> n;

  auto primos = gera_primos(2e6);
  long r1, r2;
  FOR (i, 2, n) {
    r1 = i;
    r2 = n-i;
    if (not primos.count(r1) and not primos.count(r2)) {
      printf("%lld %lld\n", r1, r2);
      return 0;
    }
  }
}
