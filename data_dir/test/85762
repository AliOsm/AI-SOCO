/*-----Deep D. Savani------------
-------DAIICT,INDIA--------------
*/
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
#define nax 1000010
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;
    
using namespace std;
    
long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);

ll digit[20];
ll cache[20][2][5];

void build()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
}

ll dp(ll ind,ll less,ll taken,ll sz)
{
    if(taken>3)
        return 0;
    if(ind==sz)
        return 1;

    if(cache[ind][less][taken]!=-1)
        return cache[ind][less][taken];

    ll ans=0;
    if(less)
    {
        for(int i=0;i<=9;i++)
            ans+=dp(ind+1,1,taken+(i!=0),sz);
    }
    else
    {
        for(int i=0;i<=digit[ind];i++)
            ans+=dp(ind+1,i<digit[ind],taken+(i!=0),sz);
    }

    return (cache[ind][less][taken]=ans);
}


ll getans(ll x)
{
    memset(digit,0,sizeof(digit));
    memset(cache,-1,sizeof(cache));
    ll sz=0;

    while(x)
    {
        digit[sz++]=x%10;
        x/=10;
    }
    reverse(digit,digit+sz);

    return dp(0,0,0,sz);
}    
    
int main(){

    build();
    
    ll t;
    scanf("%lld",&t);

    while(t--)
    {
        ll l,r;
        scanf("%lld %lld",&l,&r);

        printf("%lld\n",getans(r)-getans(l-1));
    }
    return 0;
}
    
        
    
long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;
    
    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;

        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
        return result;
}
    
long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}
    
void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}
    
ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}