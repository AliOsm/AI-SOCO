#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = 1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = 3e5+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

int n, k;
ll a[N];

// -------------------------------------------------- 函数 -------------------------------------------------- //

int lg[N]; pair<ll, int> d[N][20];
void st_init(ll a[], int n) {
    rep(i, 1, n+1) d[i][0] = mp(a[i], i);
    rep(j, 1, 20) for (int i = 1; i + (1 << j) - 1 <= n; ++i)
        d[i][j] = max(d[i][j-1], d[i + (1 << (j-1) )][j-1]);
    lg[1] = 0; rep(i, 2, n+1) lg[i] = lg[i>>1] + 1;
}

pair <ll, int> Qry(int l, int r) {
    int k = lg[r-l+1];
    return max(d[l][k], d[r-(1<<k)+1][k]);
}

void Init() {
    rep(i, 1, n+1) scanf("%I64d", a+i);
    //reverse(a + 1, a + n + 1);
    rep(i, 2, n+1) a[i] += a[i-1];
    //st_init(a, n);
}

int Solve() {
    /*
    if (k == 1) return printf("%I64d\n", a[n]);

    //rep(i, 1, n+1) printf("%I64d ", a[i]); puts("");

    ll ans = 0, pos = 1; a[0] = 0;
    per(i, 1, k) {
        auto res = Qry(pos, n - i);
        ans += 1ll * (res.fi - a[pos-1]) * (i + 1);
        pos = res.se + 1;
        //dd(res.fi); dd(res.se); de(ans);
    }
    ans += a[n] - a[pos-1];
    return printf("%I64d\n", ans);
    */
    vector <ll> v;
    rep(i, 1, n) v.pb(a[i]);
    sort(all(v));
    ll tmp = 0;
    rep(i, 0, k-1) tmp += v[i];
    return printf("%I64d\n", 1ll * k * a[n] - tmp);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &k)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}