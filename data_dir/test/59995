#include<bits/stdc++.h>

using namespace std;

const int Maxn = 300 * 1000 + 10;
long long n, prs[Maxn];
long long arr[Maxn], ans;

int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for(int i = 0; i < n; i ++) {
		cin >> arr[i];
		arr[i] = __builtin_popcountll(arr[i]);
	}

	prs[0] = arr[0];
	for(int i = 1; i < n; i ++) {
		prs[i] = prs[i - 1] + arr[i];
	}

	long long odd_n = 0;
	for(int i = 0; i < n; i ++) {
		if(prs[i] % 2 == 1)
			odd_n ++;
	}
	ans = odd_n * (odd_n - 1) / 2;
	ans += (n - odd_n) * (n - odd_n - 1) / 2 + (n - odd_n);

	for(int i = 0; i < n; i ++) {
		long long sum = 0, _max = 0;
		for (int j = 0; j < 64; j ++) {
			if(i + j >= n) {
				continue;
			}
			sum += arr[i + j];
			_max = max(_max, arr[i + j]);
			if(sum % 2 == 0 && _max > sum / 2) {
				ans --;
			}
		}
	}

	cout << ans << endl;
	return 0;
}

