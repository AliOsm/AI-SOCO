#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>

#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

lli dp[N], dp2[N];

void solve()
{
    lli n;
    cin>>n;
    lli a[n];
    for(int i = 0; i < n; i ++) {
        cin>>a[i];
    }
    dp[0] = 1;
    dp2[n - 1] = 1;
    for(int i = 1; i < n; i ++) {
        if(a[i] > a[i - 1])
            dp[i] = dp[i - 1] + 1;
        else
            dp[i] = 1;
    }
    for(int i = n - 1; i > 0; i --) {
        if(a[i] > a[i - 1]) {
            dp2[i - 1] = dp2[i] + 1;
        }
        else{
            dp2[i - 1] = 1;
        }
    }
    /*
    for(int i = 0; i < n; i++) {
        cout<<dp[i]<<' ';
    }
    cout<<endl;
    for(int i = 0; i < n; i++) {
        cout<<dp2[i]<<' ';
    }
    cout<<endl;
    */
    lli ans = 0;
    ans = max(dp[0], dp2[n - 1]);
    ans = max(ans, dp2[0]);
    ans = max(ans, dp[n - 1]);
    for(int i = 1; i < n - 1; i ++) {
        ans = max(ans, dp[i]);
        ans = max(ans, dp2[i]);
        if(a[i - 1] < a[i + 1]) {
            ans = max(ans, dp[i - 1] + dp2[i + 1]);
        }
    }
    cout<<ans;
    cout<<'\n';
    return ;
}

/*
*/
;
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
