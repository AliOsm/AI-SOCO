/* 234D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

typedef struct {
	char s[15];
	int n;
	int mx, mn;
} node_t;

const int maxn = 105;
bool mark[maxn];
node_t nd[maxn];
int ans[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#else
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif
	
	int m, k, x;
	
	scanf("%d %d", &m, &k);
	rep(i, 0, k) {
		scanf("%d", &x);
		mark[x] = true;
	}
	int k_ = m - k;
	
	int n, zn, tmp;
	int cnt;
	
	scanf("%d", &n);
	rep(i, 0, n) {
		scanf("%s %d", nd[i].s, &nd[i].n);
		zn = cnt = 0;
		rep(j, 0, nd[i].n) {
			scanf("%d", &x);
			zn += (x==0);
			cnt += mark[x];
		}
		nd[i].mx = min(cnt+zn, k);
		nd[i].mn = nd[i].n - min(k_, nd[i].n-cnt);
	}
	
	rep(i, 0, n)
		ans[i] = 2;
	
	#ifndef ONLINE_JUDGE
		rep(i, 0, n)
			printf("%d: mn = %d, mx = %d\n", i, nd[i].mn, nd[i].mx);
	#endif
	
	rep(i, 0, n) {
		rep(j, 0, n) {
			if (i == j)
				continue;
			if (nd[i].mx < nd[j].mn) {
				ans[i] = 1;
				break;
			}
		}
	}
	
	bool flag;
	vi vc;
	
	rep(i, 0, n) {
		flag = true;
		rep(j, 0, n) {
			if (i == j)
				continue;
			if (nd[i].mn < nd[j].mx) {
				flag = false;
				break;
			}
		}
		if (flag) {
			vc.pb(i);
		}
	}
	
	int sz = SZ(vc);
	if (sz > 0) {
		if (sz == 1) {
			ans[vc[0]] = 0;
		} else {
			rep(i, 0, sz) {
				ans[vc[i]] = 0;
			}
		}
	}
	rep(i, 0, n)
		printf("%d\n", ans[i]);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}