#include <bits/stdc++.h>
using namespace std;

const int INF = INT_MAX;

int n, m, sum[5005], lebih[5005], a[5005], b[5005], c[5005];
vector<vector<int>> adj;

bool visited[5005];
priority_queue<int> best;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m >> sum[0];
	for (int i = 1; i <= n; i++) {
		cin >> a[i] >> b[i] >> c[i]; sum[i] = sum[i - 1] + b[i];
	}

	adj.resize(n + 2);
	for (int i = 0; i < m; i++) {
		int u, v; cin >> u >> v;
		adj[u].push_back(v);
	}

	lebih[n + 1] = INF;
	for (int i = n; i >= 1; i--) {
		lebih[i] = min(sum[i] - a[i + 1], lebih[i + 1]);
	}

	int ans = 0, cur;
	for (int i = n; i >= 1; i--) {
		cur = lebih[i];
		if (cur < 0) {
			ans = -1;
			break;
		}

		if (!visited[i]) {
			visited[i] = 1;
			best.push(c[i]);
		}

		for (int v : adj[i]) {
			if (!visited[v]) {
				visited[v] = 1;
				best.push(c[v]);
			}
		}

		while (!best.empty() && cur > lebih[i - 1]) {
			ans += best.top();
			best.pop();
			cur--;
		}
	}

	cout << ans << '\n';

	return 0;
}