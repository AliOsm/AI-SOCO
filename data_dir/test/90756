#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second

 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};	
//////////////////////

const int N = 1000100;



ll w,h,n;





int main()
{
	ios::sync_with_stdio(0);
	cin >> w >> h >> n;
	set<ll>hor,ver;
	multiset<ll>dhor, dver;

	hor.insert(0);
	hor.insert(h);
	ver.insert(0);
	ver.insert(w);

	set<ll>::iterator it1,it2,it;
	dhor.insert(h);
	dver.insert(w);

	while(n--)
	{
		char c;
		int pos;
		cin >> c >> pos;
		if( c == 'H' ) 
		{
			hor.insert(pos);
			it = hor.find(pos);
			it1 = it;
			it2 = it;
			it1--;
			it2++;
			ll get_dist = (*it2)-(*it1);
			dhor.erase(dhor.find(get_dist));
			get_dist = (*it2)-(*it);
			dhor.insert(get_dist);
			get_dist = (*it)-(*it1);
			dhor.insert(get_dist);
		}
		else
		{
			ver.insert(pos);
			it = ver.find(pos);
			it1 = it;
			it2 = it;
			it1--;
			it2++;
			ll get_dist = (*it2)-(*it1);
			dver.erase(dver.find(get_dist));
			get_dist = (*it2)-(*it);
			dver.insert(get_dist);
			get_dist = (*it)-(*it1);
			dver.insert(get_dist);
		}

		multiset<ll>::iterator p1,p2;
		p1 = dver.end();
		p1--;
		p2 = dhor.end();
		p2--;
		cout << (*p1)*(*p2) << endl;
	}
	return 0;
}