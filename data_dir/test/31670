///*BISMILLAHIR RAHMANIR RAHIM*///
#include<bits/stdc++.h>
using namespace std; 
#define mx 200005
typedef long long ll;
ll level[mx],par[mx],child[mx];
vector<ll>adjlist[mx],tree,tmp;
void dfs(ll s, ll p, ll d){
    level[s]=d;
    par[s]=p;
    for(auto v:adjlist[s]){
        if(v!=p)dfs(v,s,d+1);
    }
}
int main(){
	ll n,i,j=0,u,v,len;
    scanf("%I64d",&n);
    for(i=1;i<n;i++){
        scanf("%I64d%I64d",&u,&v);
        adjlist[v].push_back(u);
        adjlist[u].push_back(v);
    }
    for(i=0;i<n;i++){
        scanf("%I64d",child+i);
    }
    dfs(1,-1,0);
    for(i=0;i<n;i++){
        tree.push_back(level[i+1]);
    }
    sort(tree.begin(),tree.end());
    for(i=0;i<n;i++){
        if(tree[i]!=level[child[i]]){
            printf("No\n");
            return 0;
        }
    }
    for(i=1;i<n;i++){
        if(i==1)tmp.push_back(par[child[i]]);
        else if(par[child[i-1]]!=par[child[i]])tmp.push_back(par[child[i]]);
    }
    len=tmp.size();
    for(i=0;i<n && j<len; i++){
        if(child[i]==tmp[j])j++;
    }
    if(j==len)printf("Yes\n");
    else printf("No\n");
	return 0;
}