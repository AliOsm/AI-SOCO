#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define u unsigned
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);
#define ones __builtin_popcount() 
#define pii pair<int,int>
#define pll pair<long long,long long>
const long double eps=0.00000001;
const long long MAX=(long long)1e12;
using namespace std;
ll ans=MAX;
ll cf[1000010],ct[1000010],mt[1000010],mf[1000010];
vector<vector<pll>>v;
main()
{
	FX iOS
	ll n,i,j,m,k;
	cin>>n>>m>>k;
	v.resize(1000005);
	for(i=0;i<m;++i)
	{
		ll d,f,t,c;
		cin>>d>>f>>t>>c;
		if(f==0)t*=-1;
		else t=f;
		v[d].pb(mp(t,c));
	}
	for(i=0;i<=1000001;++i)cf[i]=ct[i]=mt[i]=mf[i]=MAX;
	ll val=n*1ll*MAX;
	for(i=1;i<1000001;++i)
	{
		for(j=0;j<v[i].size();++j)
		{
			int city=v[i][j].f;
			if(city<0)continue;
			if(v[i][j].s>mt[city])continue;
			val-=mt[city];
			val+=v[i][j].s;
			mt[city]=v[i][j].s;
		}
		ct[i]=val;
	}
	val=n*1ll*MAX;
	for(i=1000000;i>0;--i)
	{
		for(j=0;j<v[i].size();++j)
		{
			int city=v[i][j].f;city*=-1;
			if(city<0)continue;
			if(v[i][j].s>mf[city])continue;
			val-=mf[city];
			val+=v[i][j].s;
			mf[city]=v[i][j].s;
		}
		cf[i]=val;
	}
	for(i=1;i+k+1<=1000000;++i)
		ans=min(ans,ct[i]+cf[i+k+1]);
	if(ans>=MAX)cout<<-1;
	else cout<<ans;
}