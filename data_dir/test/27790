#include <bits/stdc++.h>
 
using namespace std;
const int MAXN = 2 * 100100;
int n, c, a[MAXN], b[MAXN], memo[MAXN][2];

int dp(int i, bool el)
{
	if(i == 1)
		return 0;
	if(memo[i][el] != -1)
		return memo[i][el];
	if(el)
		return memo[i][el] = min(dp(i - 1, false) + a[i - 1], dp(i - 1, true) + b[i - 1]);
	else
		return memo[i][el] = min(dp(i - 1, false) + a[i - 1], dp(i - 1, true) + b[i - 1] + c);
}

int main()
{
	memset(memo, -1, sizeof memo);
	scanf("%d %d", &n, &c);
	for(int i = 1; i < n; ++i)
		scanf("%d", &a[i]);
	for(int i = 1; i < n; ++i)
		scanf("%d", &b[i]);
	for(int i = 1; i <= n; ++i)
		printf("%d ", min(dp(i, 0), dp(i, 1) + c));
}