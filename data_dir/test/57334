#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007
#define dancila 3.14159265359
#define eps 1e-9

// #define fisier 1

using namespace std;

typedef long long ll;

int val[200002], tt[200002], rg[200002]; 
vector<int> divi[200002], nr[200002], v[200002];

void ciur()
{
	for(int i = 1; i <= 200000; i++)
		for(int j = i; j <= 200000; j += i)
			divi[j].pb(i);
}

ll poz, dp[200002];

int Find(int nod)
{
	if(tt[nod] == nod)
		return nod;
	return tt[nod] = Find(tt[nod]);
}
void Union(int a, int b)
{
	if(rg[a] < rg[b])
		swap(a, b);
	dp[poz] -= 1LL * rg[a] * (rg[a] + 1) / 2;
	dp[poz] -= 1LL * rg[b] * (rg[b] + 1) / 2;
	tt[b] = a;
	rg[a] += rg[b];
	dp[poz] += 1LL * rg[a] * (rg[a] + 1) / 2;
}
int main()
{

    #ifdef fisier
        ifstream f("input.in");
        ofstream g("output.out");
    #endif

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

	int n;
	cin >> n;
	ciur();
	for(int i = 1; i <= n; ++i)
	{
		cin >> val[i];
		for(int j = 0; j < divi[val[i]].size(); ++j)
			nr[divi[val[i]][j]].pb(i);
	}
	for(int i = 1; i < n; ++i)
	{
		int a, b;
		cin >> a >> b;
		v[a].pb(b);
		v[b].pb(a);
	}
	for(int i = 200000; i >= 1; --i)
	{
		poz = i;
		for(int j = 0; j < nr[i].size(); ++j)
		{
			int x = nr[i][j];
			tt[x] = x;
			rg[x] = 1;
			++dp[i];
		}
		for(int j = 0; j < nr[i].size(); ++j)
		{
			int x = nr[i][j];
			for(int k = 0; k < v[x].size(); ++k)
			{
				int vec = v[x][k];
				if(val[vec] % i != 0)
					continue;
				if(Find(x) != Find(vec))
					Union(Find(x), Find(vec));
			}
		}
		for(int j = i+i; j <= 200000; j += i)
			dp[i] -= dp[j];
	}
	for(int i = 1; i <= 200000; ++i)
		if(dp[i])
			cout << i << " " << dp[i] << '\n';
    return 0;
}
