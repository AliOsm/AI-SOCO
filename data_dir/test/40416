// Let's bring the sky down :)
#include<bits/stdc++.h>
#define fe first
#define se second
#define ll long long
using namespace std;
typedef pair<ll, ll> pt;
const int N = 3e5 + 5;
pt p[N];
bool vis[N];
int n;
ll cross(pt a, pt b){
    return a.fe * b.se - a.se * b.fe;
}
pt operator - (pt a, pt b){
    return {a.fe - b.fe, a.se - b.se};
}
bool fcheck(){
    int flag1 = -1, flag2 = -1;
    for(int i = 1; i <= n; i++){
        if(vis[i]) continue;
        if(flag1 == -1)
            flag1 = i;
        else if(flag2 == -1)
            flag2 = i;
    }
    if(flag2 == -1) return true;
    for(int i = 1; i <= n; i++){
        if(vis[i]) continue;
            if(cross(p[flag2] - p[flag1], p[i] - p[flag1]) != 0)
                return false;
    }
    return true;
}
bool check(pt a, pt b){
    memset(vis, 0, sizeof(vis));
    for(int i = 1; i <= n; i++)
        if(cross(b - a, p[i] - a) == 0)
            vis[i] = 1;
    return fcheck();
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    cin >> n;
    for(int i = 1; i <= n; i++) cin >> p[i].fe >> p[i].se;
    if(n <= 2)
        return cout << "YES", 0;
    if(check(p[2], p[1]) || check(p[3], p[2]) || check(p[1], p[3]))
        cout << "YES";
    else cout << "NO";
return 0;
}
