#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second

const int sz=1e5+4;
vll topsort,a[sz];
vector<pair<int,pll> > edges;
int in[sz],pos[sz],n,m;

bool f(int val){
  rep(i,1,n+1) in[i]=0,a[i].clear();
  topsort.clear();
  memset(in,0,sizeof in);
  rep(i,0,sz(edges)){
    int u=edges[i].S.F;
    int v=edges[i].S.S;
    int w=edges[i].F;
    if(w>val){
      in[v]++;
      a[u].pb(v);
    }
  }
  queue<int> q;
  rep(i,1,n+1) if(in[i]==0) q.push(i);
  while(!q.empty()){
    int top=q.front();
    topsort.pb(top);
    q.pop();
    for(auto i:a[top]){
      in[i]--;
      if(in[i]==0)
        q.push(i);
    }
  }
  return sz(topsort)==n;
}

void solve(){  
    cin>>n>>m;
    rep(i,0,m){
      int u,v,w;
      cin>>u>>v>>w;
      edges.pb(mp(w,mp(u,v)));
    }
    int hi=hell,lo=-1;
    while(hi-lo>1){
      int mid=(hi+lo)/2;
      if(f(mid))
        hi=mid;
      else lo=mid;
    }
    f(hi);
    int cnt=0;
    vll ra;
    rep(i,0,sz(topsort))
      pos[topsort[i]]=i;
    rep(i,0,sz(edges)){
      int u=edges[i].S.F;
      int v=edges[i].S.S;
      if(pos[v]<pos[u]){
        ++cnt;
        ra.pb(i+1);
      }
    }
    cout<<hi<<' '<<cnt<<endl;
    for(auto i:ra) cout<<i<<' ';
    cout<<endl;
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}