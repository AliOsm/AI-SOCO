/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 50 + 5, M = N * 10;
const long long INF = 1e12 + 5;
long long dp[N][M] = {1};
int par[M];

inline long long solve(long long k, int x) {
	long long ans = 0;
	for (int i = N - 1, s = 0; i; i--)
		for (int j = 0; j < 10; j++) {
			long long sum = 0;
			for (int t = s + j; t < M; t++)
				if (par[t] == x)
					sum = min(sum + dp[i - 1][t - s - j], k);
			if (sum >= k) {
				(ans *= 10) += j, s += j;
				break;
			}
			k -= sum;
		}
	return ans;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);

	iota(par, par + 10, 0);
	for (int i = 1; i < N; i++)
		for (int j = 0; j < 10; j++)
			for (int k = j; k < M; k++)
				dp[i][k] = min(dp[i][k] + dp[i - 1][k - j], INF);
	for (int i = 10; i < M; i++) {
		int x = 0;
		for (int j = i; j; j /= 10)
			x += j % 10;
		par[i] = par[x];
	}

	int q;
	cin >> q;
	while (q--) {
		int x;
		long long k;
		cin >> k >> x;
		cout << solve(k, x) << endl;
	}

	return 0;
}
