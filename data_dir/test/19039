/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using pii = pair<int, int>;

#define pb push_back

constexpr auto MOD = 1000000007LL;
constexpr auto LINF = (1LL<<60);
constexpr auto INF = 2147483647LL;
constexpr auto PI = 3.1415926535897932384626433;
constexpr auto EPS = 1E-9;

template<typename T1, typename T2>
ostream& operator<<(ostream& out, const pair<T1, T2> p){
	out << p.first << ' ' << p.second;
	return out;
}

template <typename T1, typename T2>
istream& operator>>(istream& in, pair<T1, T2> &p){
	in >> p.first >> p.second;
	return in;
}

auto printVector = []<typename T>(ostream& out, vector<T> v){
	copy(v.begin(), v.end(), ostream_iterator<T>(out, " "));
};

constexpr auto MAXN = 60;

int n, k, dist[60][60], e[60][60];
ll a[55], res;

bool check(ll x){
	memset(dist, 0, sizeof(dist));
	dist[0][0] = 1;
	memset(e, 0, sizeof(e));
	
	for(int i = 0; i < n; i++){
		ll sum = 0;
		for(int j = i; j < n; j++){
			sum += a[j];
			if((sum&x) == x){
				e[i][j+1] = 1;
			}
		}
	}
	
	for(int i = 0; i < n; i++){
		for(int j = i+1; j <= n; j++){
			if(e[i][j]){
				for(int d = 0; d < k; d++){
					dist[j][d+1] |= dist[i][d];
				}
			}
		}
	}
	
	return dist[n][k];
}

int main(){
	#ifdef LOCAL
		freopen("input.txt","r",stdin);
//		freopen("output.txt","w",stdout);
	#endif
	ios_base::sync_with_stdio(false);
	
	cin >> n >> k;
	for(int i = 0; i < n; i++)
		cin >> a[i];
	
	for(int i = 59; i >= 0; i--){
		if(check(res|(1LL<<i)))
			res |= (1LL<<i);
	}
	
	cout << res << endl;

	return 0;
}

