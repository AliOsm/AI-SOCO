#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
#include<random>
#include<chrono>
#include<bitset>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=acos(-1);
const ll INF = 1LL<<62;
const ll MINF = -(1LL<<62);

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); uniform_int_distribution<int>(0, n-1)(rng)


const int MAXN=10000001;
pair<ll,int> t[1000001];
ll orig[1000001];
vector<int> p;
int lp[MAXN];
vector<int> idx[MAXN];
void gen(int x, int ind, int& pos, vector<pair<int,int>>& prs) {
	if(ind==sz(prs)) {
		idx[x].pb(pos);
		if(sz(idx[x])>=3) {
			sort(idx[x].begin(),idx[x].begin()+3, [&](int a, int b) {
				return orig[a]<orig[b];
			});
			idx[x].pop_back();
		}
		return ;
	}
	
	gen(x,ind+1,pos,prs);
	for(int j=0;j<prs[ind].yy;++j) {
		x*=prs[ind].xx;
		gen(x,ind+1,pos, prs);
	}
}
void add(int val, int pos) {
	//~ cerr<<val<<": ";
	vector<pair<int,int>> prs;
	while(val>1) {
		int p=lp[val];
		prs.pb({p,0});
		while(val%p==0) prs.back().yy++, val/=p;
	}

	gen(1,0,pos, prs);
	
}

int main() {
	IO;
	for(int i=2;i<MAXN;++i) {
		if(!lp[i]) {
			lp[i]=i;
			p.pb(i);
		}
		
		for(int j=0;j<sz(p) && p[j]*i<MAXN && p[j]<=lp[i];++j) {
			lp[p[j]*i]=p[j];
		}
	}
	
	int n;
	cin>>n;
	for(int i=0;i<n;++i) {
		cin>>orig[i];
		t[i].xx=orig[i];
		t[i].yy=i;
	}
	
	sort(t,t+n);
	int j;
	for(int i=0;i<n;i=j) {
		j=i;
		while(j<n && t[i].xx==t[j].xx) j++;
		//~ LOG(t[i].xx);
		//~ LOG(i);
		//~ LOG(j);
		for(int k=i;k<min(i+2,j);++k) {
			add(t[i].xx, t[k].yy);
		}
	}
	
	ll ans=1LL<<60;
	int a,b;
	for(ll i=1;i<MAXN;++i) {
		if(sz(idx[i])>=2) {
			ll cans=orig[idx[i][0]]*orig[idx[i][1]]/i;
			if(ans>cans) {
				ans=cans;
				a=idx[i][0];
				b=idx[i][1];
			}
		}
	}
	
	if(a>b) swap(a,b);
	cout<<(a+1)<<" "<<(b+1)<<"\n";
	
	return 0;
}
