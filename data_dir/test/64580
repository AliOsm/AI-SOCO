#include <iostream>
#include<memory.h>
#include <map>
#include <string>
#include <iomanip>
#include <fstream>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

/*
*/

string dp[601][301][2];
string sol(int i, int j, int k)
{
	if (i == 0 && j == 0 && k == 0) return "";
	else if (i == 0 && j == 0 && k == 1) return "0";
	else if (i == 0 && j > 0) return "z";
	if (dp[i][j][k] != "x") return dp[i][j][k];
	string r = "z";
	for (int z = k; z < 10; z++)
	{
		string dig = "";
		dig +=(z+'0');
		string in = sol(i-1, j-z, 0);
		if (in != "z") {
			r = dig + in;
			break;
		}
	}
	return dp[i][j][k] = r;
}



string dp2[601][301][2];
string lst;
string sol2(int i, int j, int k)
{
	if (j < 0) return "z";
	if (i == 0 && j == 0 && k == 0) return "";
	else if (i == 0 && j == 0 && k == 1) return "z";
	else if (i == 0 && j > 0) return "z";
	if (k == 0 && dp2[i][j][k] != "x") return dp2[i][j][k];
	if (k == 1)
	{
		string r = "z";
		int z = lst[lst.size()-i]-'0';
		string dig = "";
		dig += (z+'0');
		string in = sol2(i-1, j-z, 1);
		if (in != "z") {
			r = dig + in;
			return dp2[i][j][k] = r;
		}
		z++;
		for (; z < 10; z++)
		{
			string dig = "";
			dig +=(z+'0');
			string in = sol2(i-1, j-z, 0);
			if (in != "z") {
				r = dig + in;
				break;
			}
		}
		return dp2[i][j][k] = r;
	}
	else
	{
		string r = "z";
		for (int z = 0; z < 10; z++)
		{
			string dig = "";
			dig +=(z+'0');
			string in = sol2(i-1, j-z, 0);
			if (in != "z") {
				r = dig + in;
				break;
			}
		}
		return dp2[i][j][k] = r;
	}
}

int main()
{
	for (int i = 0; i <= 600; i++) for (int j = 0; j <= 300; j++) dp[i][j][0] = dp[i][j][1]= dp2[i][j][0] = dp2[i][j][1] = "x";
	int n;
	cin>>n;
	vector<int> a(n);
	for (int i = 0; i < n; i++) cin>>a[i];
	int dig = 1;
	vector<string> res;
	while (dig < 300)
	{
		string r = sol(dig, a[0], 1);
		if (r != "z")
		{
			lst = r;
			res.push_back(r);
			break;
		}
		dig++;
	}
	for (int i = 1;i < n; i++)
	{
		string r = "z";
		while (r == "z")
		{
			if (dig == lst.size()) r = sol2(dig, a[i], 1);
			else r = sol(dig, a[i], 1);
			if (r != "z")
			{
				lst = r;
				res.push_back(r);
				break;
			}
			dig++;
		}
	}
	for (int i = 0; i < res.size(); i++) cout<<res[i]<<endl;
}