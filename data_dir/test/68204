#include<bits/stdc++.h>
using namespace std;
const int N = 2e5 + 7;
int n, s;
vector <int> g[N];
int up[N], down[N];
int par[N];
void dfs(int u, int p, int d) {
    par[u] = p;
    up[u] = d;
    down[u] = 0;
    for (int v : g[u]) {
        if (v != p) {
            dfs(v, u, d + 1);
            down[u] = max(down[u], down[v] + 1);
        }   
    }   
}   
signed main() {
    #ifdef HOME
    freopen("input.txt", "r", stdin);
    #else
    ios_base::sync_with_stdio(0); cin.tie(0);
    #endif
    cin >> n >> s;
    --s;
    for (int i = 0; i < n - 1; ++i) {
        int u, v;
        cin >> u >> v;
        --u; --v;
        g[u].push_back(v); g[v].push_back(u);
    }   
    dfs(0, 0, 0);
    int u = s;
    int ans = 0;
    while (1) {
        if (up[u] <= up[s] - up[u]) break;
        ans = max(ans, (up[u] + down[u]) << 1);
        u = par[u];
    }   
    cout << ans << '\n';
}   