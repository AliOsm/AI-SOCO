#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				2000000000000000100
#define S second
#define F first
#define Ceil(x,y) ((x+y-1)/y)
#define EPS 1e-8
#define IO ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define LFT(x)  (x*2)
#define RGHT(x) (x*2+1)
const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
typedef unsigned int uint;
typedef long long ll;
int dX[] = {0,1,0,-1,1,1,-1,-1};
int dY[] = {1,0,-1,0,1,-1,1,-1};
#define DATATYPE int
typedef tree<DATATYPE, null_type, less<DATATYPE>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;
string alpha = "abcdefghijklmnopqrstuvwxyz";
const int N = 300100;
int n,m,mn[N],mx[N];
int main()
{
#ifndef ONLINE_JUDGE
	//freopen("in.txt","r",stdin);
#endif
    indexed_set st;
    int ID = 0;
    unordered_map<int,int>mp;
    sc(n); sc(m);
    for(int i = 1;i<=n;++i)
        st.insert(i),mn[i]=mx[i]=i,mp[i]=i;
    while(m--){
        int x; sc(x);
        mn[x] = 1;
        int p = st.order_of_key(mp[x])+1;
        mx[x] = max(mx[x],p);
        st.erase(mp[x]);
        mp[ID] = x,mp[x] = ID;
        st.insert(mp[x]); ID--;
    }
    for(int i = 1;i<=n;++i)
        mx[i] = max(mx[i],(int)st.order_of_key(mp[i])+1);
    for(int i = 1;i<=n;++i)
        printf("%d %d\n",mn[i],mx[i]);


    return 0;
}
