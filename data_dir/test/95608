#include <iostream>
#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define ll long long
#define F first
#define S second
#define PI acos(-1)
#define EPS 1e-9
#define BASE 53ll
#define ld long double
#define MAX 1000000000
#define NIL 0
#define INF -1e18-1e10
#define infi 1000000000ll;
#define rd(a) scanf("%d",&a)
#define rdll(a) scanf("%I64d",&a)
#define sz(a) (int) a.size()
#define lp(i,a,n) for(int i=(a); i<=(n) ; ++i)
#define lpd(i,n,a) for(int i=(n); i>=(a) ; --i)
#define pi acos(-1)

typedef complex<double>CX;
typedef pair<int,int>ii;
typedef pair<ii,ii>quad;
typedef pair<int,ii>edge;
typedef pair<vector<int>,int>vii;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll fact(ll n){ll ret=1;for(int i=1;i<=n;i++)ret*=i;return ret;}
bool is_vowel(char c){if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;return 0;}
ld getDistance(ld x1,ld y1,ld x2,ld y2){return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}
ll mod=1000000009;
ll power(ll base,ll p){if(p==1)return base;if(!p)return 1ll;ll ret=power(base,p/2);ret*=ret;ret%=mod;if(p&1)ret*=base;return ret%mod;}
ll extended_euclidean(ll a,ll b,ll &x,ll &y){if(b==0){x=1;y=0;return a;}ll g = extended_euclidean(b,a%b,y,x);y -= (a/b)*x;return g;}

const int N = 300002;

ll a,b,k,n;
ll get(){
  ll factor=0;
  for(int i=0;i<(n+1)/k;i++){
    factor+=((power(power(a,i*k*1ll),mod-2)%mod)*power(b,i*k*1ll))%mod;
    factor%=mod;
  }
  return factor;
}
ll get2(){
  ll z=(n+1)/k;
  ll A=power(power(a,mod-2),k)%mod;
  ll B=power(b,k)%mod;
  A=power(A,z)%mod;
  B=power(B,z)%mod;
  ll factor=B*A;
  factor%=mod;
  factor--;
  factor+=mod;
  factor%=mod;
  A=power(a,k)%mod;
  B=power(b,k)%mod;
  ll factor2=B*power(A,mod-2)%mod;
  factor2--;
  factor2+=mod;
  factor2%=mod;
  factor=factor*power(factor2,mod-2)%mod;
  factor%=mod;
  if(a==b||factor==0)return z;
  return factor;
}
int main() {
  //freopen("test.in","r",stdin);
  cin>>n>>a>>b>>k;
  string s;
  cin>>s;
  /*if(get()!=get2()){
      if(get()==k||get()==(n+1)/k)while(1);
  }*/
  ll factor=get2();
  ll sum=0;
  for(int i=0;i<k;i++){
    ll term=power(a,n-i)*power(b,i);
    term%=mod;
    if(s[i]=='-')
        term*=-1;
    term+=mod;
    term%=mod;
    term*=factor;
    term%=mod;
    sum=(sum+term)%mod;
  }
  cout<<sum;
  return 0;
}
