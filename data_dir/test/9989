#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>

#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.14159265
#define pll pair<ll, ll>
using namespace std;

typedef unsigned long long ull;

bool is_prime(int n) {

    for (int i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b){
    ll res = 1ll,tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= mod;
       }
       tp *= tp;
       tp %= mod;
       b >>= 1ll;
    }
    return res;
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

void ok() {
    puts("Yes");
    exit(0);
}

void no() {
    puts("No");
    exit(0);
}

inline void out(auto mas) {
    for(int i = 0; i < mas.size(); i++) {
           cout << mas[i] << " ";
    }
}
ll xx[] = {-1, 1, 0, 0};
ll yy[] = {0, 0, -1, 1};

// please, accepted!

const int N = 1111111;

int main()
{

    ll n = nxt(), k = nxt();
    vector<ll> ans;
    ll indx = 0;
    bool flag = 0;
    ll ind = 0;
    while(ind < n) {
        ll l = max(ind - k, 0ll);
        ll r = min(ind + k, n - 1);
        if(l > 0) {
             break;
        }
        ll ost = n - (r - l + 1);
        if(ost % (k * 2 + 1) == 0 || ost % (k * 2 + 1) >= k + 1) {
              flag = 1;
              indx = ind;
        }
        ind++;
    }
    if(flag) {
         while(indx < n) {
               ans.push_back(indx);
               indx += k * 2 + 1;

         }
         if(ans.back() + k < n - 1) {
                for(int j = n - 1; j >= n - 1 - k; j--) {
                       if(j - k - 1 == ans.back()) {
                               ans.push_back(j);
                               break;
                       }
                }
         }
    }
    cout << ans.size() << endl;
    for(auto x : ans) {
           cout << x + 1 << " ";
    }
    return 0;
}
