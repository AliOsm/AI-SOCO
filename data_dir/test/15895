#include<bits/stdc++.h>
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int MAXN=5005;
vector<int> E[MAXN];
int dep[MAXN],fa[MAXN][20],u[MAXN],v[MAXN],w[MAXN][MAXN];
struct node
{
	int u,v,val;
	bool operator < (const node &o)const
	{
		return val>o.val;
	}
}sv[MAXN];
void dfs(int now,int f)
{
	fa[now][0]=f;dep[now]=dep[f]+1;
	for(int i=1;i<20;i++)
		fa[now][i]=fa[fa[now][i-1]][i-1];
	for(int x:E[now])
	{
		if(x==f) continue;
		dfs(x,now);
	}
}
int lca(int x,int y)
{
	if(dep[x]<dep[y]) swap(x,y);
	int det=dep[x]-dep[y];
	for(int i=0;i<20;i++)
		if((det>>i)&1)
			x=fa[x][i];
	if(x==y) return x;
	for(int i=19;i>=0;i--)
		if(fa[x][i]!=fa[y][i])
			x=fa[x][i],y=fa[y][i];
	return fa[x][0];
}

bool up(int x,int y,int val)
{
	int rt=lca(x,y);
	bool flag=false;
	while(x!=rt)
	{
		int tmp=w[fa[x][0]][x];
		if(tmp==0) w[fa[x][0]][x]=w[x][fa[x][0]]=val;
		if(w[fa[x][0]][x]==val) flag=true;
		x=fa[x][0];
	}
	while(y!=rt)
	{
		int tmp=w[fa[y][0]][y];
		if(tmp==0) w[fa[y][0]][y]=w[y][fa[y][0]]=val;
		if(w[fa[y][0]][y]==val) flag=true;
		y=fa[y][0];
	}
	return flag;
}
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int n,m;
	scanf("%d",&n);
	for(int i=1;i<n;i++)
	{
		scanf("%d%d",&u[i],&v[i]);
		E[u[i]].pb(v[i]);
		E[v[i]].pb(u[i]);
	}
	dfs(1,0);
	scanf("%d",&m);
	for(int i=1;i<=m;i++)
		scanf("%d%d%d",&sv[i].u,&sv[i].v,&sv[i].val);
	sort(sv+1,sv+1+m);
	for(int i=1;i<=m;i++)
		if(!up(sv[i].u,sv[i].v,sv[i].val))
			return 0*puts("-1");
	for(int i=1;i<n;i++)
	{
		if(w[u[i]][v[i]]==0) w[u[i]][v[i]]=1000000;
		printf("%d ",w[u[i]][v[i]]);
	}
	puts("");
	return 0;
}
