#include <bits/stdc++.h>
using namespace std;
typedef long long intt;
#define mk make_pair
#define pb push_back
#define fr first
#define sc second
int n,m;
vector <vector <int> >op(133333);
vector <vector <int> > nop(133333);
map<pair<int,int>,int >opm;
int visit[600];
bool ok=0;
void dfs1(int node,int fathr)
{
    int i;
    int color;
    if(fathr==1)
        color=3;
    else if(fathr==3)
        color=1;
    visit[node]=color;
        for(i=0;i<nop[node].size();i++)
        {
            if(visit[nop[node][i]]==color)
            {

                ok=1;
                return ;
            }
            if(!visit[nop[node][i]])
                dfs1(nop[node][i],color);
        }
}
void dfs2(int node)
{
    int i;
    for(i=0;i<op[node].size();i++)
    {
        if(visit[op[node][i]]==3)
            visit[node]=2;
    }
    if(!visit[node])
        visit[node]=1;
    for(i=0;i<op[node].size();i++)
    {
        if(!visit[op[node][i]])
            dfs2(op[node][i]);
    }
}
int main()
{
    cin>>n>>m;
    int i;
    vector <pair<int,int> >oo;
    vector <pair<int,int> >o1;

    for(i=0;i<m;i++)
    {
        int x,y;
        cin>>x>>y;
        op[x].pb(y);
        op[y].pb(x);
        opm[mk(x,y)]=1;
        opm[mk(y,x)]=1;
        o1.push_back(make_pair(x,y));
    }
        int j;

    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(j!=i&&opm[mk(i,j)]==0&&opm[mk(j,i)]==0)
            {
                nop[i].push_back(j);
                nop[j].push_back(i);
                oo.push_back(make_pair(i,j));
                opm[mk(i,j)]=1;
                opm[mk(j,i)]=1;
            }
        }
    }
    for(i=0;i<oo.size();i++)
    {
        if(!visit[oo[i].first])
            dfs1(oo[i].first,3);
    }
    if(ok==1)
    {


        cout<<"No";
        return 0;
    }
    for(i=0;i<o1.size();i++)
    {
        if(!visit[o1[i].first])
            dfs2(o1[i].first);
        if(!visit[o1[i].second])
            dfs2(o1[i].second);
    }
    for(i=0;i<o1.size();i++)
    {
        for(j=0;j<op[o1[i].first].size();j++)
        {
            int v=visit[o1[i].first];
            int h=visit[op[o1[i].first][j]];
            if(abs(v-h)==2)
            {
                cout<<"No";
                return 0;
            }

        }
    }
    cout<<"Yes"<<endl;
    for(i=1;i<=n;i++)
    {
        if(visit[i]==1)
            cout<<"a";
        else if(visit[i]==2)
            cout<<"b";
        else
            cout<<"c";
    }








       return 0;
}






