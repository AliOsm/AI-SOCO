#include <bits/stdc++.h>
using namespace std;

bool isPrime(int x)
{
    for(int i = 2 ; i <= sqrt(x) ; i++)
    {
        if(x%i==0)
        {
            return 0 ;
        }
    }

    return 1 ;
}


int main ()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);


    int n , m ;
    cin >> n >>  m ;

    int arr[n][m] ;
    int num = 100003 ;

    vector<int > prime ;
//5
    for(int i =2 ; i <= 1e5+3 ; i++)
    {
        if(isPrime(i)) prime.push_back(i);
        //cout << i << endl;
    }

    int row[n] = {};
    int column[m] = {};
    for(int i = 0 ; i< n ; i ++)
    {
        for(int w = 0 ;w < m ; w++)
        {
            num = 1e9 ;
            cin >> arr[i][w] ;

            int l = 0 , h = prime.size()-1 , mid ;

            if(arr[i][w] == 1)
            {
                row[i] += 1;
                column[w] +=1;
            }
            else
            {
                while(l <= h)
                {
                    mid = (l+h) /2 ;

                    if(prime[mid] < arr[i][w])
                    {
                        l = mid +1;
                    }
                    else if(prime[mid] == arr[i][w])
                    {
                        num = arr[i][w] ;
                        break;
                    }
                    else
                    {
                        num = min(num , prime[mid]);
                        h = mid -1 ;
                    }
                   // cout << l << " " << h << " " << mid << endl;
                }
               // cout << num << endl;
                 row[i] += num - arr[i][w] ;
                 column[w] += num - arr[i][w] ;
            }
        }
    }


    /*cout << endl;
    for(int i = 0 ; i <n ; i++)
    {
        cout << row[i] << " ";
    }
    cout << endl;

    for(int i = 0 ; i < m ; i++)
    {
        cout << column[i] << " ";
    }
    cout << endl;
*/

    int mn = 1e9 ;
    for(int i = 0 ;i<n ; i++)
    {
        mn = min(row[i] , mn );
    }

    for(int i = 0 ; i< m ; i++)
    {
        mn = min(mn , column[i]);
    }

    cout << mn ;

    return 0 ;
}
