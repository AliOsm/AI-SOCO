#include <bits/stdc++.h>
#include<string.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define fr(i,s,e) for(i=s;i<e;i++)
#define rf(i,s,e) for(i=s-1;i>=e;i--)
#define pb push_back
#define eb emblace_back
#define mp make_pair
#define ff first
#define ss second
#define int   long long
#define ll   long long
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define vl vector<long long>
#define inf (1LL<<61)
#define vi vector<int> 
#define vii vector< vector<int> >
#define vll vector< vector<long long> >
#define vpi vector< pair<int,int> >   
#define vpl vector< pair<ll,ll> >   
#define viii vector< vector<vector<int> > >
typedef pair<pair<int, int>,int> P;
#define cd complex<double>
#define PI 4*atan(1)
#define mod 1000000007
#define pi 3.14159265358979323846//20 decimals
#define ld long double
#define N 100001
struct edge{
    int v,ind,w;

};
edge init(int to,int weight,int index)
{
    edge e;
    e.v=to;
    e.w=weight;
    e.ind=index;
    return e;
}
class dc
{
    public:
bool operator()(edge e1,edge e2)
{
    return e1.w>e2.w;
}
 
};
int32_t main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
    int n,m,k;
    cin>>n>>m>>k;
    vi dist(n+1,inf);
    vector<edge> g[n+1];
    for(int i=0;i<m;i++)
    {
        int a,b,c;
        cin>>a>>b>>c;
        g[a].pb(init(b,c,i));
        g[b].pb(init(a,c,i));
    }
    priority_queue<edge,vector<edge>,dc> pq;
    int choose[m];
    memset(choose,0,sizeof(choose));
    dist[1]=0;
    for(auto it:g[1])
    {

        pq.push(it);
        dist[it.v]=it.w;
    }
    vi sel;
    while(!pq.empty())
    {
        edge s=pq.top();
        pq.pop();
        if(dist[s.v]!=s.w)
            continue;
        choose[s.ind]=1;
        sel.pb(s.ind);
        for(auto it:g[s.v])
        {
            if(dist[it.v]>s.w+it.w)
            {
                dist[it.v]=s.w+it.w;
                pq.push(init(it.v,dist[it.v],it.ind));
            }
        }
    }
    if(n-1>k)
    {
        for(int i=k;i<n-1;i++)
        {
            sel.pop_back();
        }

    }
    sort(sel.begin(),sel.end());
    cout<<sel.size()<<endl;
    for(auto it:sel)
        cout<<it+1<<endl;
    return 0;
}