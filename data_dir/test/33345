#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       a*(b/gcd(a,b))
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define all(v)         v.begin(),v.end()
#define fill(a,b)      memset(a,b,sizeof a)
#define smax(a, b)     a=max(a, b)
#define smin(a, b)     a=min(a, b)
#define sqr(x)         x*x
#define cube(x)        x*x*x
#define endl           '\n'

int in() {
    int n;
    scanf("%d",&n);
    return n;
}

ll Lin() {
    ll n;
    scanf("%lld",&n);
    return n;
}

double Din() {
    double n;
    scanf("%lf",&n);
    return n;
}

const ll inf = 1e17;
const ll mod = (ll)1e9 + 7;
const int N = 1e5 + 5;


ll dp[N] ;


int solve() {
    int test=in(), k=in(), n=100002;
    for(int i=0; i<=n; i++) {
        if(i<k) dp[i]=1LL;
        else dp[i] = (dp[i-1] + dp[i-k]) % mod;
    }
    for(int i=1; i<=n; i++) {
        dp[i] = (dp[i] + dp[i-1]) % mod;
    }
    while(test--) {
        int a=in(), b=in();
        printf("%lld\n", (dp[b]-dp[a-1]+mod) % mod) ;
    }
    return 0;
}

int main() {
    int test = 1;
    while(test--) {
        solve();
    }
    return 0;
}
