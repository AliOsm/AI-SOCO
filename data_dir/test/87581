#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define ii pair<int,int>
#define mp make_pair
using namespace std;
int n;
vector < ii > adj;
vector < int > v2[1000005];
int vis[1000005];
int dfs(int node,int par)
{
    vis[node] = 1;
    for(auto x : v2[node])
    {
        if(x!=par && !vis[x])
        {
            dfs(x,node);
        }
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin>>n;
    vector < pair<ii,int> > v;
    for(int i=0;i<n;i++)
    {
        int x,y;
        cin>>x>>y;
        v.push_back(mp(mp(x,y) , i+1));
    }
    sort(v.begin(),v.end());
    set < ii > my;
    for(int i=0;i<n;i++)
    {
        int L , R ;
        L = v[i].fr.fr;
        R = v[i].fr.sc;
        int id = v[i].sc;
        if(my.size() > 0)
        {
            while(my.size() > 0)
            {
                set<ii>::iterator itr = my.begin();
                ii temp = *itr;
                if(temp.fr < L)
                {
                    my.erase(my.find(temp));
                }
                else
                {
                    break;
                }
            }
            for(auto x : my)
            {
                if(x.fr > R)
                    break;
                adj.push_back(mp(x.sc,id));
                v2[x.sc].push_back(id);
                v2[id].push_back(x.sc);
                adj.push_back(mp(id,x.sc));
                if(adj.size() > 2*n)
                {
                    cout<<"NO";
                    return 0 ;
                }
            }
        }
        my.insert(mp(R,id));
    }
    if(adj.size()!= (n-1)*2)
    {
        cout<<"NO";
    }
    else
    {
        dfs(1,-1);
        for(int i=1;i<=n;i++)
        {
            if(!vis[i])
            {
                cout<<"NO";
                return 0 ;
            }
        }
        cout<<"YES\n";
    }

    return 0;
}
