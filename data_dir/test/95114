/* ****GT_18**** */
//Motivational Source->FUHPD

#include<bits/stdc++.h>
#define	MIN(a,b,c)	min(min(a,b),c)
#define	MAX(a,b,c)	max(max(a,b),c)
#define ll          long long
#define itr         vector<ll int>::iterator
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		int n;
		cin>>n;
		vi c(n);
		rep(i,0,n)cin>>c[i];
		vector<string> a(n),b(n);
		ll dp[n][2]={0};
		rep(i,0,n)
		{
			cin>>a[i];
			dp[i][0]=1e15+5;
			dp[i][1]=1e15+5;
		}
		dp[0][0]=0;
		dp[0][1]=c[0];
		rep(i,1,n)
		{
			string t1=a[i-1],t2=a[i];
			reverse(all(t1));
			reverse(all(t2));
			if(a[i]>=a[i-1])
			dp[i][0]=min(dp[i][0],dp[i-1][0]);
			if(a[i]>=t1)
			dp[i][0]=min(dp[i][0],dp[i-1][1]);
			if(t2>=a[i-1])
			dp[i][1]=min(dp[i][1],c[i]+dp[i-1][0]);
			if(t2>=t1)
			dp[i][1]=min(dp[i][1],c[i]+dp[i-1][1]);
			if(dp[i][0]==1e15+5&&dp[i][1]==1e15+5)
			{
				cout<<-1;
				return 0;
			}
		}
//		cout<<1e15+5;
		cout<<min(dp[n-1][0],dp[n-1][1]);
	}
	return 0;
}
