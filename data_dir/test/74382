#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre(){freopen("c://test//input.in","r",stdin);freopen("c://test//output.out","w",stdout);}
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1,class T2>inline void gmax(T1 &a,T2 b){if(b>a)a=b;}
template <class T1,class T2>inline void gmin(T1 &a,T2 b){if(b<a)a=b;}
const int N=1e5+10,M=0,Z=1e9+7,ms63=0x3f3f3f3f;
int n,m;
struct B
{
	int x1,y1;
	int x2,y2;
}b[N];
struct A
{
	int typ;
	int x,y;
	int l,r;
	bool operator < (const A& b)const
	{
		if(x!=b.x)return x<b.x;
		else if(typ!=b.typ)return typ<b.typ;
		else if(l!=b.l)return l<b.l;
		else return r<b.r;
	}
}a[N*3];
map<int,int>Y;int yid;
map<int,int>::iterator it;

int c[N*3];
int cnt(int x)
{
	int tmp=0;
	for(;x;x-=x&-x)tmp+=c[x];
	return tmp;
}
void modify(int x,int v)
{
	for(;x<=yid;x+=x&-x)c[x]+=v;
}
map<int,int>mop;
map<int,int>last;
int main()
{
	//fre();
	int x1,y1,x2,y2;
	int casei=0;
	while(~scanf("%d",&n))
	{
		if(++casei==9562)
		{
			int pause=1;
		}
		Y.clear();yid=0;
		mop.clear();
		last.clear();
		m=0;
		for(int i=1;i<=n;++i)
		{
			scanf("%d%d%d%d",&b[i].x1,&b[i].y1,&b[i].x2,&b[i].y2);
			Y[b[i].y1]=0;
			Y[b[i].y2]=0;
		}
		for(it=Y.begin();it!=Y.end();++it)
		{
			it->second=++yid;
		}
		for(int i=1;i<=n;++i)
		{
			x1=b[i].x1;
			y1=b[i].y1;
			x2=b[i].x2;
			y2=b[i].y2;
			if(x1==x2)
			{
				if(y1>y2)swap(y1,y2);
				++m;
				a[m].typ=2;
				a[m].x=x1;
				a[m].l=y1;
				a[m].r=y2;
			}
			else//y1==y2
			{
				if(x1>x2)swap(x1,x2);
				++m;
				a[m].typ=1;
				a[m].x=x1;
				a[m].y=y1;
				++m;
				a[m].typ=3;
				a[m].x=x2;
				a[m].y=y1;				
			}
		}
		LL ans=0;
		sort(a+1,a+m+1);
		MS(c,0);
		for(int i=1;i<=m;++i)
		{
			if(a[i].typ==1)//左端点
			{
				if(++mop[a[i].y]==1)
				{
					modify(Y[a[i].y],1);
					last[a[i].y]=a[i].x;
				}
			}
			else if(a[i].typ==2)//竖线
			{
				if(a[i-1].typ==2&&a[i].x==a[i-1].x)
				{
					if(a[i].l<a[i-1].r)a[i].l=a[i-1].r;//
				}
				if(a[i].l<=a[i].r)
				{
					ans+=a[i].r-a[i].l+1;
					int tmp=cnt(Y[a[i].r])-cnt(Y[a[i].l]-1);//
					ans-=tmp;

					if(a[i-1].typ==2&&a[i].x==a[i-1].x&&a[i].l==a[i-1].r)
					{
						int tmp=cnt(Y[a[i].l])-cnt(Y[a[i].l]-1);
						ans+=tmp;
						ans-=1;
					}
				}
				if(a[i-1].typ==2&&a[i].x==a[i-1].x)gmax(a[i].r,a[i-1].r);
			}
			else if(a[i].typ==3)//右端点
			{
				if(--mop[a[i].y]==0)//
				{
					modify(Y[a[i].y],-1);
					ans+=a[i].x-last[a[i].y]+1;
				}
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【类型】


【分析】


【时间复杂度&&优化】


【数据】
2
0 0 0 5
0 7 0 10

3
0 1 2 1
0 1 0 1
0 0 0 2

4
0 1 0 1
0 1 0 1
0 1 0 1
0 0 0 2
*/