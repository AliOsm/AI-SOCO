#include <bits/stdc++.h>

using namespace std;
string s;
const int N=2e5+5;
int sparse[N][30];
int cnt[30];
vector<int> idx[N];
void build()
{
    for(int i=0;i<s.size();i++) sparse[i][0]=s[i]-'a';
    int l=log2((int)s.size());
    for(int j=1;j<=l;j++)
        for(int i=0;i+(1<<j)-1<s.size();i++)
            sparse[i][j]=min(sparse[i][j-1],sparse[i+(1<<(j-1))][j-1]);
}
int query(int l,int r)
{
    int j=log2(r-l+1);
    return min(sparse[l][j],sparse[r-(1<<j)+1][j]);
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int m;
    string ans;
    cin>>m>>s;
    for(int i=0;i<s.size();i++)
        idx[s[i]-'a'].push_back(i);
    build();
    int e=0;
    while(e+m-1<s.size())
    {
        int q=query(e,e+m-1);
        cnt[q]++;
        int p=upper_bound(idx[q].begin(),idx[q].end(),e+m-1)-idx[q].begin();
        e=idx[q][p-1];
        e++;
    }
    int mx=-1;
    for(int i=0;i<26;i++) if(cnt[i]) mx=max(mx,i);
    for(int i=0;i<s.size();i++)
    {
        if(cnt[mx]&&s[i]-'a'==mx)
        {
            cnt[mx]--;
            ans+=s[i];
        }
        if(s[i]-'a'<mx) ans+=s[i];
    }
    sort(ans.begin(),ans.end());
    cout<<ans<<endl;
    return 0;
}
