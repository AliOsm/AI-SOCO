#include<bits/stdc++.h>
#define ll long long

using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

vector<int> V[100040];
set<int> S;
vector<int> Z[100040];
queue<int> Q;

int done[100004],ttt[100004],value[100004],from[100004];

void bfs()
{
    int node=Q.front();Q.pop();

    if(done[node])return;
    done[node]=1;

    for(int i=0;i<V[node].size();i++)
    {
        int x=V[node][i],z=Z[node][i],r;
        if(done[x]||ttt[node]+1>ttt[x])continue;
        Q.push(x);
        ttt[x]=ttt[node]+1;
        if(value[x]>value[node]-1&&z==1){value[x]=value[node]-1;from[x]=node;}
        else if(value[x]>value[node]+1&&z==0){value[x]=value[node]+1;from[x]=node;}
    }
}

int main()
{
    memset(value,1000000,sizeof(value));
    memset(ttt,1000000,sizeof(ttt));

    int n=getnum(),m=getnum(),br=0;

    for(int i=1;i<=m;i++)
    {
        int x=getnum(),y=getnum(),z=getnum();
        br+=z;
        V[x].push_back(y);
        V[y].push_back(x);
        Z[x].push_back(z);
        Z[y].push_back(z);
    }
    Q.push(1);
    value[1]=br;ttt[1]=1;

    while(Q.size()!=0)bfs();

    for(int i=n;from[i]!=0;i=from[i])
    {
        ll x=(ll)i*100001+(ll)from[i];
        ll y=(ll)from[i]*100001+(ll)i;
        S.insert(x);
        S.insert(y);
    }
    printf("%d\n",value[n]);

    for(int i=1;i<=n;i++)
    {
        int l=V[i].size();
        for(int j=0;j<l;j++)
        {
            if(i>V[i][j])continue;
            ll x = (ll)i*100001+(ll)V[i][j];
            bool flag=(S.find(x)!=S.end());
            if(flag&&Z[i][j]==0)printf("%d %d 1\n",i,V[i][j]);
            else if(!flag&&Z[i][j]==1)printf("%d %d 0\n",i,V[i][j]);
        }
    }
}
