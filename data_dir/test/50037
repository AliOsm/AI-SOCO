#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define MAXLL 1000000000000000000LL
#define MAXINT 2000000000

#define MINLL -1000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

vector <int> v[2501];

int one, two, a[2501], n, m, i, j, z, k, l, ans;

bool poleN[2501][2501], pole[2501];

    void dfs(int nom)
    {
        int i;

        l++;

        a[l] = nom;

        pole[nom] = true;

        for (i = 0; i < v[nom].size(); i++)
            if (!pole[v[nom][i]]) dfs(v[nom][i]);
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    cin >> m;

    for (i = 1; i <= m; i++) {
        cin >> one >> two;

        v[one].p_b(two);

        v[two].p_b(one);
    }

    cin >> k;

    for (i = 1; i <= k; i++) {
        cin >> one >> two;

        poleN[one][two] = poleN[two][one] = true;
    }

    for (z = 1; z <= n; z++)
        if (!pole[z]) {
            l = 0;

            dfs(z);

            for (i = 1; i <= l - 1; i++)
                for (j = i + 1; j <= l; j++)
                    if (poleN[a[i]][a[j]]) l = 0;

            ans = max(ans, l);
        }

    cout << ans << endl;

    return 0;
}
