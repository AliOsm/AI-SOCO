#include <cstdio>
#include <list>
#include <algorithm>
using namespace std;

char s[1005];
int sz[1005],p[1005],n;

int root(int x){
    return p[x]!=x?p[x]=root(p[x]):x;
}

int main(){
    gets(s+1);
    for(int i=1;s[i];i++){
        sz[n=p[i]=i]=1;
        for(int j=1;j<i;j++) if(__gcd(i,j)>1){
            int x=root(i),y=root(j);
            if(x==y) continue;
            if(sz[x]<=sz[y]) sz[p[x]=y]+=sz[x];
                        else sz[p[y]=x]+=sz[y];
        }
    }
    list<char> o;
    vector<pair<int,char>> u;
    for(char c='a';c<='z';c++) u.push_back({count(s+1,s+n+1,c),c});
    sort(u.begin(),u.end());
    if(u.back().first<*max_element(sz,sz+n+1)) return puts("NO")&0;
    for(auto c:u) for(int i=0;i<c.first;i++) o.push_back(c.second);
    puts("YES");
    for(int i=0;i<n;i++) if(sz[root(i+1)]>1){
        putchar(o.back());
        o.pop_back();
    }else{
        putchar(o.front());
        o.pop_front();
    }
}
