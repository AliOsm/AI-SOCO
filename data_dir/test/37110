#include<bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp>

//using namespace boost::multiprecision;

using namespace std;
#define PI                      3.1415926535897932384626
#define int                     long long int
#define fi                      first
#define se                      second
#define pq                      priority_queue
#define pb                      push_back
#define endl                    '\n'
#define all(x)                  x.begin(),x.end()
#define pii                     pair<int,int>
#define fill(x,y)               memset(x,y,sizeof(x));
#define fast                    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define hash                    _H
#define lg                      long double         
#define vi                      std::vector<int>
#define sz(x)                   ((int)x.size())


template<typename T> T pow(T a,T b, int m){T ans=1; while(b>0){ if(b%2==1) ans=(ans*a)%m; b/=2; a=(a*a)%m; } return ans%m; }
template<typename T>T InverseMod(T a,int m){return pow(a,m-2,m);}
template<typename T>int SquareDist(T a,T b){int x = abs(a.fi - b.fi),y = abs(a.se - b.se); return x*x + y*y;}



void solve() {
    string s,t,p;
    cin >> s >> t >> p;
    vector<char> x;
    multiset<char> y;
    for(auto i:s) x.pb(i);
    reverse(all(x));
    for(auto i:p) y.insert(i);
    string temp = "";
    int i = 0;
    while(true and i < t.length()) {
        if(x.size() and t[i] == x.back()) {
            temp += t[i];
            x.pop_back();
            ++i;
        }
        else if(y.find(t[i]) != y.end()) {
            temp += t[i];
            y.erase(y.find(t[i]));
            ++i;
        }
        else 
            break;
    }
    if(x.size() == 0 and temp == t)
        cout << "YES" << endl;
    else
        cout << "NO" << endl;

}




signed main()
{
    fast;
    int t = 1;
    cin >> t;
    while(t--)
        solve();
} 