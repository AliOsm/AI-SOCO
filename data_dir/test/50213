#include <bits/stdc++.h>

using namespace std;

#ifdef DGC
#include "debug.h"
#else
#define debug(...) 9715
#endif
typedef long long ll;
typedef long double ld;
typedef complex<ll> point;
#define F first
#define S second



int main()
{
	#ifdef NeverBeRed
		//freopen("a.in", "r", stdin);
		//freopen("a.out", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n, h, l, r;
	cin >> n >> h >> l >> r;
	vector<int> a(n);
	for (auto &i : a) cin >> i;

	vector<vector<int>> dp(n+1, vector<int>(h, -1e9));
	dp[0][0] = 0;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < h; ++j)
		{
			int x = j + a[i];
			if (x >= h) x -= h;
			dp[i+1][x] = max(dp[i+1][x], dp[i][j] + (l <= x && x <= r));

			x = j + a[i] - 1;
			if (x >= h) x -= h;
			dp[i+1][x] = max(dp[i+1][x], dp[i][j] + (l <= x && x <= r));
		}

	cout << *max_element(dp[n].begin(), dp[n].end()) << "\n";

	return 0;
}
