#include<bits/stdc++.h>
#define GO ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
using namespace std;
typedef long long ll;
typedef vector<ll> vec;
const int N = 5e5 + 5;
const int M = 1e6 + 5;
const int Mod = 998244353;

int n, k;

struct node
{
	map<pair<int, int>,node*> next;
	int cnt;
	node() :cnt(0) {}
}*root;

void add(vector<pair<int, int>>& v)
{
	node* cur = root;
	for (auto i : v)
	{
		i.second = k - i.second;
		if (cur->next[i] == NULL)
			cur->next[i] = new node();
		cur = cur->next[i];
	}
	cur->cnt++;
}

int query(vector<pair<int, int>>& v)
{
	node* cur = root;
	for (auto i : v)
	{
		if (cur->next[i] == NULL)
			return 0;
		cur = cur->next[i];
	}
	return cur->cnt;
}

int main()
{
	GO;
	cin >> n >> k;
	root = new node();
	ll ans = 0;
	for (int i = 1; i <= n; i++)
	{
		int x;
		cin >> x;
		vector<pair<int, int>> v;
		for(int j=2;j*j<=x;j++)
			if (x % j == 0)
			{
				v.push_back({ j,0 });
				while (x % j == 0)
					x /= j, v.back().second++;
				v.back().second %= k;
				if (v.back().second == 0)
					v.pop_back();
			}
		if (x > 1)
			v.push_back({ x,1 });

		ans += query(v);
		add(v);
	}
	cout << ans << endl;
	return 0;
}