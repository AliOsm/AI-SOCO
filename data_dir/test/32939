/*
      HET PAGHADAR
      DA-IICT
      @HET262
*/
 
#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long ll;
typedef vector<ll> vec; 
#define inf LLONG_MAX
#define bp __builtin_popcountll
#define pb push_back
#define ff first
#define ss second
#define P pair<ll,ll>
#define N 2005
#define mod 1000000007
#define FAST ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

ll n;
ll d[N][N]={0};
vector<vector<P>> g(N);
vector<pair<ll,P>> ed;
ll dis[N]={0};

struct DSU
{
	int connected;
	int par[N], sz[N];

	DSU() {} 

	DSU(int n) 
	{
		for(int i=1;i<=n;i++)
		{
			par[i]=i;
			sz[i]=1;
		}
		connected=n;
	}

	int root(int k)
	{
		while(k!=par[k])
		{
			par[k]=par[par[k]];
			k=par[k];
		}
		return k;
	}

	int getSize(int k)
	{
		return sz[root(k)];
	}

	void unite(int u, int v)
	{
		int par1=root(u), par2=root(v);

		if(par1==par2)
			return;

		connected--;

		if(sz[par1]>sz[par2])
			swap(par1, par2);

		sz[par2]+=sz[par1];
		sz[par1]=0;
		par[par1]=par[par2];
	}
};

ll DFS(ll x,ll pare,ll sum=0)
{
      dis[x]=sum;
      
      for(auto X:g[x])
      {
            if(X.ff!=pare)
            {
                  DFS(X.ff,x,sum+X.ss);
            }
      }
}

void MST_CHK()
{
      
      sort(ed.begin(),ed.end());
      
      DSU a(n);
      
      for(auto X:ed)
      {
            ll x=X.ss.ff;
            ll y=X.ss.ss;
            if(a.root(x)!=a.root(y))
            {
                  a.unite(x,y);
                  g[x].pb({y,X.ff});
                  g[y].pb({x,X.ff});
            }
      }
      
      if(a.connected!=1)
      {
            cout<<"NO\n";
            return;
      }
      
      for(int i=1;i<=n;i++)
      {
            DFS(i,i);
            for(int j=1;j<=n;j++)
            {
                  if(d[i][j]!=dis[j])
                  {
                        cout<<"NO\n";
                        return ;
                  }
            }
      }
      
      cout<<"YES\n";
      return ;
      
      
      
}

int32_t main()
{
      FAST;
      
      cin>>n;
      
      
      for(int i=1;i<=n;i++)
      {
            for(int j=1;j<=n;j++)
            {
                  cin>>d[i][j];
                  if(d[i][j]!=0)
                  {
                        ed.pb({d[i][j],{i,j}});
                  }
            }
      }
      
      MST_CHK();
      
      

}