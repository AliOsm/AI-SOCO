#include <bits/stdc++.h>
using namespace std;
long long n,ans,x,y,xx,yy;
bool vis[55][55];
char a[55][55];
int dx[]={-1,0,0,1};
int dy[]={0,-1,1,0};
vector<pair<int,int> >v,vv;
bool valid(int i, int j){
    return i>-1 && j>-1 && i<n && j<n && a[i][j] == '0';
}
void dfs(int i, int j, bool f){
    vis[i][j]=1;
    if(i == xx && j== yy && f)
        cout<<0,exit(0);
    if(f)
        v.push_back({i,j});
    else
        vv.push_back({i,j});
    for(int k=0; k<4; k++){
        int nx =i +dx[k], ny = j + dy[k];
        if(!vis[nx][ny] && valid(nx,ny))
            dfs(nx,ny,f);
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin>>n>>x>>y>>xx>>yy;
    x--,y--,xx--,yy--;
    for(int i=0; i<n; i++)
        cin>>a[i];
    dfs(x,y,1);
    dfs(xx,yy,0);
    ans=1e18;
    for(int i=0; i<v.size(); i++){
        for(int j=0; j<vv.size(); j++){
            long long p = abs(v[i].first - vv[j].first), q = abs(v[i].second - vv[j].second);
            p*=p,q*=q;
            ans=min(ans,p+q);
        }
    }
    cout<<ans<<endl;
    return 0;
}
