#include<bits/stdc++.h>
using namespace std;
#define M            1000000007
#define C            998244353
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size());
typedef pair<int,int> pii;
typedef pair<int,pii> pipi;
typedef vector<vector<int> > vvi;
typedef map<int,int>  mp;
typedef priority_queue<int, vector<int>, greater<int> > pq;
const int N=3e5+5;
vector<int>G[N];
bool visited[N];
int R[N];
int primes[N];
void P(){
for(int i=2;i<=N;i++){
		if(!primes[i])//in which prime[i]==0 that number is prime;
		for(int j=2*i;j<=N;j+=i)primes[j]=i;
	}
}
int root(int x){
	return R[x]==x?x:root(R[x]);
}
void union1(int x,int y){
	x=root(x),y=root(y);
	R[x]=R[y];
}
void dfs(int V){
	visited[V]=1;
	for(int i=0;i<G[V].size();i++){
		if(!visited[G[V][i]]){
			int to=G[V][i];
			dfs(to);
		}
	}
}
void intialize(){
	for(int i=0;i<=N;i++);
}
void  solve(){
    int n;cin>>n;int b[3]={0};vector<int>v[3];
    string s;cin>>s;
    for(int i=0;i<s.size();i++){
    	b[s[i]-'0']++;
    	v[s[i]-'0'].pb(i);
	}
	b[0]=b[0]-n/3,b[1]=b[1]-n/3,b[2]=b[2]-n/3;
	int i1=0,i2=0;
	if(b[0]<0){
		int a0=-b[0],k1=max((int)0,b[1]),k2=max((int)0,b[2]);
		for(int i=0;i<min(k1,a0);i++)s[v[1][i]]='0';
		a0-=min(k1,a0);b[1]-=min(k1,a0);
		for(int i=0;i<min(k2,a0);i++)s[v[2][i]]='0',i2=i+1;b[0]=0;
		b[2]-=min(k2,a0);
	}if(b[2]<0){
		int a2=-b[2],k0=max((int)0,b[0]),k1=max((int)0,b[1]),count=0;
		for(int i=v[0].size()-1;count<min(k0,a2);i--){
			s[v[0][i]]='2';count++;v[0].pop_back();
		}b[0]-=min(a2,k0);
		a2-=min(k0,a2);count=0;
		for(int i=v[1].size()-1,count=0;count<min(k1,a2);i--){
			s[v[1][i]]='2';count++;v[1].pop_back();
		}b[2]=0;
	}
	if(b[1]<0){
		int a1=-b[1],k0=max((int)0,b[0]),k2=max((int)0,b[2]),count=0;
		for(int i=v[0].size()-1;(count<min(a1,k0));i--){
		s[v[0][i]]='1';count++;}a1-=min(a1,k0);
		for(int i=i2;i<min(k2,a1)+i2;i++)s[v[2][i]]='1';
	}cout<<s;
}
signed main(){   
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	int t=1;
	//cin>>t;
	while(t--){
		solve();
	}
}