#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;
/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______      
 * |\  \|\  \  |\  ___ \  |\  ___ \     
 * \ \  \/  /|_\ \   __/| \ \   __/|    
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__  
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \ 
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */
const long long mod = 1000000007;
#define ll long long
#undef ll

const int mxN = 5010;
long long dp[2][mxN];
int prv[mxN];
int cur[30];

int main(int argc, char** argv) {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif

	int N;
	string s,t = "";
	cin>>N>>s;
	t += s[0];
	int K = 1;
	for(int i = 1;i < N;i++) {
		if(s[i] != s[i-1]) {
			t += s[i];
			K ++;
		}
	}
	for(int i = 0;i < 30;i++) cur[i] = -1;
	for(int i = 0;i < K;i++) {
		prv[i] = cur[t[i] - 'a'];
		cur[t[i] - 'a'] = i;
	}
	for(int k = 0;k < K;k++) dp[0][k] = 1;
	for(int d = 1;d <= N;d++) {
		int i = d&1;
		for(int k = 0;k < K;k++) {
			dp[i][k] = dp[i^1][k];
			if(k) {
				dp[i][k] += dp[i][k-1];
				if(prv[k] != -1) {
					dp[i][k] += mod - dp[i^1][prv[k]];
				}
				dp[i][k] %= mod;
			}
//			cerr<<d<<' '<<k<<' '<<dp[i][k]<<'\n';
		}
	}
	cout<<dp[N&1][K-1]<<'\n';
	return 0;
}
