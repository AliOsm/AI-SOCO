//#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <fstream>
#include <map>
#include <set>
#include <queue>
#include <memory.h>
#include <time.h>
#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <algorithm>
#include <cstdio>
#include <set>
#include <queue>
#include <cassert>
#include <climits>
#include <deque>
#include <limits>
#define sz(x) int((x).size())
#define FOR(i,a,b) for(ll(i) = (a); (i) <= (b); ++(i))
#define ROF(i,a,b) for(ll(i) = (a); (i) >= (b); --(i))
#define rep(i,n) for (int(i) = 0; (i) < (n); ++(i))
#define fe(i,a) for (ll(i) = 0; (i) < int((a).size()); ++(i))
#define C(a) memset((a),0,sizeof(a))
#define pb push_back
#define ppb pop_back
#define all(c) (c).begin(), (c).end()
#define sqr(a) (a)*(a)
#define mp(a,b) make_pair((a), (b))
#define X first
#define Y second
#define file freopen("input.txt","r",stdin)
#define file2 freopen("output.txt", "w",stdout)
#define text freopen("input.txt","r",stdin); freopen("output.txt", "w",stdout)
using namespace std;
typedef vector<int> vint;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
#define y1 vamdlsfmvldf
const int mod = (int)1e9 + 7;
const ll INF = (int)(1e9);
const int N = 1010;
int n, m;
int a[N][N];
bool ch(int i, int j){
    return (a[i][j] && a[i][j - 1] && a[i][j + 1] && a[i + 1][j] && a[i - 1][j] && 
        a[i + 1][j + 1] && a[i + 1][j - 1] && a[i - 1][j + 1] && a[i - 1][j - 1]);
}
bool is(int i, int j){
    return (ch(i,j) || ch(i, j - 1) || ch(i, j + 1) || ch(i + 1,j) || ch(i - 1,j) || 
        ch(i + 1, j + 1) || ch(i + 1,j - 1) || ch(i - 1,j + 1) || ch(i - 1,j - 1));
}
int main(){
    cin >> n >> m;
    int x, y;
    int pos = -1;
    int dp = 0;
    for(int i = 0; i < m; ++i){
        scanf("%d %d", &x, &y);
        ++x; ++y;
        a[x][y] = 1;
        if(dp == 0)
            if(is(x, y)){ pos = i + 1; dp = 1;}
    }
    cout << pos << endl;
    return 0;
}