#include<iostream>
#include<vector>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<complex>
#include<set>
#include<map>
#include<queue>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;
typedef long long ll;

const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

int n,k,a[300000];
int team[100000][3],where[300000];
int use[300000];

void run()
{
	cin>>n;
	rep(i,3*n)cin>>a[i], a[i]--;
	rep(i,n)rep(j,3)cin>>team[i][j], where[--team[i][j]]=i;
	cin>>k;
	k--;
	
	memset(use,0,sizeof(use));
	rep(i,3*n){
		if(a[i]==k){
			if(use[a[i]]){
				vi ans;
				rep(j,3*n)if(j!=a[i])ans.pb(j+1);
				rep(j,3*n-1)cout<<ans[j]<<(j==3*n-2?"\n":" ");
				return;
			}
			vi teammate,notselected,selected,ans(3*n-1);
			rep(j,3)if(team[where[a[i]]][j]!=a[i]){
				teammate.pb(team[where[a[i]]][j]+1);
				use[team[where[a[i]]][j]]=-1;
			}
			sort(all(teammate));
			
			rep(j,3*n){
				if(j==a[i]||use[j]<0)continue;
				if(use[j])selected.pb(j+1);
				else notselected.pb(j+1);
			}
			sort(all(selected)); sort(all(notselected));
			teammate.insert(teammate.end(),all(notselected));
			
			merge(all(teammate),all(selected),ans.begin());
			
			rep(j,3*n-1)cout<<ans[j]<<(j==3*n-2?"\n":" ");
			return;
		}
		if(!use[a[i]]){
			rep(j,3)use[team[where[a[i]]][j]]=1;
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	int cs=3;rep(i,cs)
#endif
	run();
}
