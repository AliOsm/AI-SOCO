#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <iostream>
#include <map>
#include <iomanip>
#include <set>
#include <ctime>
#include <queue>
#include <cassert>
#include <vector>
#include <algorithm>

#define For(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
#define Rep(i,a,b) for(int (i)=(a);(i)<(b);(i)++)
#define Ford(i,a,b) for(int (i)=(a);(i)>=(b);(i)--)
#define foreach(i,a) for(__typeof(a.begin()) i = a.begin() ; (i)!=a.end() ; (i)++ )
#define fi first
#define se second
#define dbg(x) cerr<<#x<<":"<<x<<endl;
#define dg(x) cerr<<#x<<":"<<x<<' ';
#define mp make_pair
#define fill(x,y) memset(x,y,sizeof x)

using namespace std;

typedef pair<int,int> ii;
typedef long long Lint;

const int MAXN = 1010;
const Lint inf = 1e18;

vector<int> prime;
bool nprime[MAXN*MAXN];
int N;
Lint dn[MAXN];

Lint pw(Lint a,Lint b){
	
	Lint res = 1LL ;
	
	for( ; b ; b>>=1 , a*=a){
		if(b&1){
			res*=a;
			if(res>1e18 || res<0) return -1;
		}
		if(a>1e18 || res<0) return -1;	
	}
	return res;
		
}

int main(){

	Rep(i,2,MAXN*MAXN)
		if(!nprime[i]){
			prime.push_back(i);
			if(prime.size()==30) break;
			for(int j=i+i;j<MAXN*MAXN;j+=i)
				nprime[j]=true;
		}

	cin >> N ; 
	
	Rep(i,0,MAXN) dn[i] = inf ; 
	
	dn[1] = 1;
	
	Rep(j,0,prime.size())
		Ford(i,N,1)
			for(int k=1;(k+1)*i<=N && pw(prime[j],k)!=-1 && pw(prime[j],k)*dn[i]>0 ;k++)
				if(dn[i]!=inf)
					dn[i*(k+1)]=min(dn[i*(k+1)],dn[i]*pw(prime[j],k));
				
	cout << dn[N] << endl;
	
	return 0;
}
