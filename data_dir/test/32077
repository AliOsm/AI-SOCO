#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

//#include<bits/stdc++.h>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>

#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define SORRY FUL Accepted 
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)
#define Toktama Kazakhstan 

using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 3e5 + 123;                                          
const int PRI = 555557;
const int pri = 997;

int t[26][505050];
int tin[505050];
int tout[505050];
int timer;
int n, m;
vector < int > g[505050];
int d[505050];
vector < pair < int, int > > q[505050];
vector < int > h[505050];
int ans[505050];

void dfs (int v) {
	h[d[v]].pb(v);
	tin[v] = ++ timer;
	for (auto to : g[v]) {
		if(!tin[to]) {
			d[to] = d[v] + 1;
			dfs(to);
		}
	}
	tout[v] = timer;
}

void upd (int tp,int pos, int add) {
	for(int i = pos; i < 500050; i |= (i + 1))
		t[tp][i] += add;		
}

int get (int tp,int pos) {
	int tmp = 0;
	for(int i = pos; i >= 0; i = (i & (i + 1)) - 1)
		tmp += t[tp][i];
	return tmp;
}

string s;
char lol[505050];

int main () {
	SpeedForce;
	// easy 
	scanf ("%d%d", &n, &m);
	for (int i = 2; i <= n; i ++) {
		int x;
		scanf ("%d", &x);
		g[x].pb(i);
	}
	d[1] = 1;
	dfs(1);
             
    scanf ("%s", lol);
    s = lol;

	for (int i = 1, x, y; i <= m; i ++) {
		scanf ("%d%d", &x, &y);
		q[y].pb(mp(x, i));
	}

	for (int i = 1; i <= n; i ++) {
		if (q[i].empty()) continue;
		for (int to : h[i])
			upd(s[to - 1] - 'a', tin[to], 1);
		
		for (auto cur : q[i]) {
			int v = cur.F, id = cur.S, cnt = 0;
			for (int i = 0; i < 26; i ++)
				if ((get(i,tout[v]) - get(i, tin[v] - 1)) & 1)
					++ cnt;
			ans[cur.S] = cnt;
		}

		for (int to : h[i])
			upd(s[to - 1] - 'a', tin[to], -1);
	}

	for (int i = 1; i <= m; i ++) {
		if(ans[i] <= 1) {
			puts ("Yes");
		} else {
			puts ("No");
		}
	}

	return Accepted; 
}