#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

ll a[2005];
ll b[2005];
ll dpa [2005];
ll dpb [2005];

ll aVal [2005];
ll bVal [2005];

vector <ll> aSum;

ll ans;

int main()
{

    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    ll n,m;
    cin >> n>> m;
    for(ll i=1;i<=n;i++)cin>>a[i];
    for(ll i=1;i<=m;i++)cin>>b[i];
    ll x;
    cin >> x;

    dpa[1]=a[1];
    dpb[1]=b[1];
    for(ll i=2;i<=n;i++)dpa[i]=dpa[i-1]+a[i];
    for(ll i=2;i<=m;i++)dpb[i]=dpb[i-1]+b[i];

    for(ll i=1;i<=n;i++){ // len
        for(ll j=1;j<=n;j++){ // start
            if(i+j-1>n)continue;
            ll value = dpa[j+i-1] - dpa[j-1];
            if(aVal[i])aVal[i] = min( aVal[i] , value );
            else aVal[i] = value;
        }
    }
    aVal[0]=0;
    for(ll i=1;i<=m;i++){ // len
        for(ll j=1;j<=m;j++){ // start
            if(i+j-1>m)continue;
            ll value = dpb[j+i-1] - dpb[j-1];
            if(bVal[i])bVal[i] = min( bVal[i] , value );
            else bVal[i] = value;
        }
    }
    for(ll i=0;i<=n;i++)
        aSum.push_back(aVal[i]);

    for(ll i=1;i<=m;i++){

        ll value = x / bVal[i];

        ll lo = 0;
        ll hi = n;
        ll best = 0;
        while(lo<=hi){
            ll mid = (lo+hi)/2;
            if( aSum[mid] > value ){
                hi = mid-1;
            }
            else{
                best = mid;
                lo = mid+1;
            }
        }

        ans = max(ans , i*best);
    }
    cout << ans;


    return 0;
}
