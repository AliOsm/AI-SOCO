#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 1e5 + 7;
const int M = 20;

ll m;
ll dp[N][M];
ll c[N], s[N];
int cc[N];
vector<ll> v;

int main()
{
	cin >> m;
	//m = (ll)1e15;
	ll sum = 0, cnt = 0;
	for (ll i=1; i<N; i++)
	{
		ll j = i+1;
		while (sum + i * i * i <= m && sum + i * i * i < j * j * j)
		{
			sum += i * i * i, cnt++;
			v.push_back(i);
			c[i]++;
		}
	}

	bool flag = true;
	for (int x=v.size()-1; x>=0 && flag; x--)
		if (x+1 == v.size() || v[x] < v[x+1])
		{
			ll tmp = 0;
			bool flag = true;
			sum += - v[x] * v[x] * v[x] + (v[x]+1) * (v[x]+1) * (v[x]+1);
			v[x]++;
			for (int i=0; i<v.size(); i++)
			{
				tmp += v[i] * v[i] * v[i];
				if (tmp > m || tmp >= (v[i]+1) * (v[i]+1) * (v[i]+1))
					flag = false;
			}
			if (flag)
				x++;
			else
			{
				v[x]--;
				sum -= - v[x] * v[x] * v[x] + (v[x]+1) * (v[x]+1) * (v[x]+1);
			}
		}
	cout << cnt << " " << sum << "\n";
	return 0;
}
