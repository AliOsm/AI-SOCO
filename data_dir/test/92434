// Enjoy your stay. Code by evima on 2017/06/18

#include <bits/stdc++.h>

#define long long long  // for Codeforces
#define LOOPVAR_TYPE long

#define all(x) (x).begin(), (x).end()
#define sz(x) ((LOOPVAR_TYPE)(x).size())
#define foreach(it, X) for(__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define GET_MACRO(_1, _2, _3, NAME, ...) NAME
#define _rep(i, n) _rep2(i, 0, n)
#define _rep2(i, a, b) for(LOOPVAR_TYPE i = (LOOPVAR_TYPE)(a); i < (LOOPVAR_TYPE)(b); i++)
#define rep(...) GET_MACRO(__VA_ARGS__, _rep2, _rep)(__VA_ARGS__)

template<class T>
bool tomin(T &a, const T &b) { return (b < a) ? (a = b, true) : false; }

template<class T>
bool tomax(T &a, const T &b) { return (a < b) ? (a = b, true) : false; }

#define fir first
#define sec second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back

const double EPS = 1e-9;
const double PI = 3.141592653589793238462;
const long INF = 1070000000LL;
const long MOD = 1000000007LL;

using namespace std;

long n, a[100010];
long N, d[100010];
long s[100010];

int main() {
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);

    cin >> n;
    rep(i, n) cin >> a[i];
    N = n - 1;
    rep(i, N) d[i] = abs(a[i + 1] - a[i]);
    long min_even = 0, max_odd = -1e18;
    long sum = 0;
    long ans = -1e18;
    rep(i, N){
        sum += d[i] * (i % 2 ? -1 : 1);
        tomax(ans, sum - min_even);
        tomax(ans, - (sum - max_odd));
        if(i % 2 == 0) tomax(max_odd, sum);
        else tomin(min_even, sum);
    }
    cout << ans << endl;
}