#include <bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < (n) ; i++ )
#define clr( t , val ) memset( t , val , sizeof(t) )

#define all(v)  v.begin() , v.end()
#define pb push_back
#define SZ( v ) ((int)(v).size())

#define mp make_pair
#define fi first
#define se second

#define test() cerr << "hola que hace ?" << endl;
#define DEBUG( x ) cerr <<  #x << "=" << x << endl;
#define DEBUG2( x , y ) cerr << #x << "=" << x << " " << #y << "=" << y << endl;

#define N 500000

typedef long long ll;
typedef pair< int , int > pii;
typedef vector< int > vi;

int A[ N + 5 ];

int solve( int n ){
    if( n == 0 ) return 0;
    return ((n - 1) >> 1) + 1;
}
int main(){
    int n;
    while( sc( n ) == 1 ){
        REP( i , n ) sc( A[ i ] );
        int ans = 0;
        for( int i = 0 ; i < n ; ++i ){
            int ind;
            for( int j = i ; j < n ; ++j )
                if( A[ i ] == A[ j ] ) ind = j;
                else break;
            if( i == 0 || ind == n - 1 || i != ind ){
                i = ind;
                continue;
            }
            int target = A[ i ];
            for( int j = i ; j < n ; ++j ){
                if( A[ j ] == target ) ind = j;
                else break;
                target ^= 1;
            }
            ind --;
            target = A[ i ];
            int len = ind - i + 1;
            ans = max( ans , solve( len ) );
            if( len & 1 ){
                REP( k , len ) A[ i + k ] = target ^ 1;
            }else{
                REP( k , len >> 1 ) A[ i + k ] = target ^ 1;
                REP( k , len >> 1 ) A[ i + (len >> 1) + k ] = target;
            }
            i = ind;
        }
        printf( "%d\n" , ans );
        REP( i , n ) printf( "%d%c" , A[ i ] , (i + 1 == n ? 10 : 32) );
    }
}

