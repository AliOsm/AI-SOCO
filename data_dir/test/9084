#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e18
#define MOD 998'244'353
#define pll pair<long, long>
#define pb push_back
#define FOR(i, a, b) \
    for (long i = a; i < (long) b; i++)
#define REP(i, n) FOR(i, 0, n)
#define SORT(v, atr) \
    sort(v.begin(), v.end(), \
      [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
    sort(v.begin(), v.end(), \
      [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
    if (not v.empty()) { \
        printf("%lld", v[0]); \
        for (long _i = 1; _i < (long) v.size(); _i++) \
            printf(" %lld", v[_i]); \
        printf("\n"); \
    }

auto gera_primos(long n)
{
  set<long> primos;
  vector<bool> crivo(n);
  primos.insert(1);
  primos.insert(2);
  for (long i = 3; i < n; i += 2) {
    if (crivo[i]) continue;
    primos.insert(i);
    for (long j = i; j < n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

long fat(long k, long a=1)
{
  long x = 1;
  FOR (i, a, k+1) {
    x = (x * i);
  }
  return x;
}

long solve(auto &w)
{
  if (w.size() == 2) return 0;
  long n = w.size();
  long resp, minimo = INF;
  FOR (i, 0, n - 1) {
    resp = abs(w[i] - w[i+1]);
    vector<long> a(w.begin(), w.begin() + i);
    vector<long> b(w.begin() + i + 2, w.end());
    a.insert(a.end(), b.begin(), b.end());
    resp += solve(a);
    minimo = min(minimo, resp);
  }
  return minimo;
}

int main()
{
  long n;
  string x;
  cin >> n >> x;

  long f = 0, s = 0;
  FOR (i, 1, x.length()) {
    if (x[i] == 'F' and x[i-1] == 'S') f++;
    if (x[i] == 'S' and x[i-1] == 'F') s++;
  }
  if (f > s) puts("YES");
  else puts("NO");
}
