#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef long double real;

#ifdef WIN32
#define INT64 "%I64d"
#define UINT64 "%I64u"
#else
#define INT64 "%lld"
#define UINT64 "%llu"
#endif

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

const int MaxN = 1003, MaxC = 0x3F3F3F3F, NA = -1;

int d [MaxN];
int s [MaxN];
int m, k;

int main (void)
{
 int i;

 while (scanf (" %d %d", &m, &k) != EOF)
 {
  for (i = 0; i < m; i++)
   scanf (" %d", &d[i]);
  for (i = 0; i < m; i++)
   scanf (" %d", &s[i]);
  int maxf = 0;
  int curf = 0;
  int res = 0;
  for (i = 0; i < m; i++)
  {
   eprintf ("%d %d %d %d\n", i, curf, maxf, res);
   curf += s[i];
   maxf = max (maxf, s[i]);
   if (curf < d[i])
   {
    int times = (d[i] - curf - 1) / maxf + 1;
    eprintf ("%d\n", times);
    res += k * times;
    curf += maxf * times;
   }
   res += d[i];
   curf -= d[i];
  }
  printf ("%d\n", res);
 }

 return 0;
}
