/* ****GT_18**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  1000005

ll n;
vi a(N),po,vis(N,0),cyc;
ll cnt=0;

void dfs1(ll node)
{
	cyc[cnt]++;
	vis[node]=3;
	if(vis[a[node]]!=3) 
	dfs1(a[node]);
}

void dfs(ll node)
{
	vis[node]=2;
	if(vis[a[node]]==0) 
		dfs(a[node]);
	else if(vis[a[node]]==1)
	{
		vis[node]=1;
		return;
	}
	else
	{
		cyc.pb(0);
		dfs1(node);
		cnt++;
	}
	vis[node]=1;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		cin>>n;
		rep(i,1,n+1) cin>>a[i];
		po.pb(1);
		rep(i,1,N+1) po.pb((po.back()*2)%hell);
		ll ans=1;
		rep(i,1,n+1)
		if(!vis[i])
			dfs(i);
		ll c=n;
		rep(i,0,sz(cyc))
		c-=cyc[i],ans=(ans*(po[cyc[i]]-2))%hell;
		ans=(ans*po[c])%hell;
		cout<<ans;
	}
	return 0;
}