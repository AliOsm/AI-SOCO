//In the name of God

#include <iostream>
#include <vector>
#include <cstdlib>
#include <iomanip>
using namespace std;
const int MAXN=1e5+10;
#define lol long long
#define lod long double
#define mp make_pair
#define X first
#define Y second
vector <pair <int,int> > a[MAXN];
vector <pair <pair<int,int> ,int> > edges;
bool mark[MAXN];
lol dp[MAXN],d[MAXN];
void dfs(int v,int dis)
{
  mark[v]=true;
  d[v]=dis;
  for(int i=0;i<a[v].size();i++)
    {
      int u=a[v][i].first,w=a[v][i].second;
      if(!mark[u])
	{
	  dfs(u,dis+w);
	  dp[v]+=dp[u];
	}
    }
  dp[v]++;
  //cerr<<v<<" "<<dp[v]<<" "<<d[v]<<endl;
}


int main()
{
  
  lol n;
  cin>>n;
  for(lol i=1;i<n;i++)
    {
      lol w,x,y;
      cin>>x>>y>>w;
      a[x].push_back(mp(y,w));
      a[y].push_back(mp(x,w));
      edges.push_back(mp(mp(x,y),w));
    }
  dfs(1,0);
  //for(lol i=1;i<=n;i++)
  //cerr<<dp[i]<<" "<<d[i]<<endl;
  lol sum=0;
  for(lol i=0;i<edges.size();i++)
    {
      pair <pair <lol,lol>,lol> e=edges[i];
      lol v=e.X.X,u=e.X.Y,w=e.Y;
      if(d[v]>d[u])
	swap(v,u);
      //cerr<<v<<" "<<u<<" "<<w<<endl;
      sum+=dp[u]*(n-dp[u])*w;
    }
  lol m;
  cin>>m;
  lol p=n*(n-1);
  for(lol i=0;i<m;i++)
    {
      //cerr<<sum<<endl;
      lol r,x;
      cin>>r>>x;
      r--;
      pair <pair <lol,lol>,lol> e=edges[r];
      lol v=e.X.X,u=e.X.Y,w=e.Y;
      edges[r].Y=x;
      if(d[v]>d[u])
	swap(v,u);
      sum-=dp[u]*(n-dp[u])*w;
      sum+=dp[u]*(n-dp[u])*x;
      long double ans=sum;
      ans/=p;
      ans*=6;
      cout<<fixed;
      cout<<setprecision(6)<<ans<<endl;
    }
  //cout<<sum<<endl;
  return 0;
}
