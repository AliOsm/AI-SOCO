#include <bits/stdc++.h>

using namespace std;

const int maxN = 1e6 + 10;
const int INF = 1e9;

int a[maxN], b[maxN], A, B, v, n, m;

pair<int, int> getA(int value) {
    int l = 1, r = A;
    while (r - l > 1) {
        int mid = (l + r) / 2;
        if (a[mid] < value) l = mid; else r = mid;
    }
    while (a[l] < value) ++l;
    return {a[l - 1], a[l]};
}

int get(int val) {
    return (val + v - 1) / v;
}

pair<int, int> getB(int value) {
    int l = 1, r = B;
    while (r - l > 1) {
        int mid = (l + r) / 2;
        if (b[mid] < value) l = mid; else r = mid;
    }
    while (b[l] < value) ++l;
    return {b[l - 1], b[l]};
}

int f(int x1, int y1, int x2, int y2) {
    if (x1 == x2) return abs(y1 - y2);
    if (x1 > x2) {
        swap(x1, x2);
        swap(y1, y2);
        return  f(x1, y1, x2, y2);
    }
    pair<int, int> indexes1 = getA(y1);
    pair<int, int> indexes2 = getB(y1);
    int answer = INF;
    if (indexes1.first != -INF) answer = min(answer, abs(y1 - indexes1.first) + abs(x1 - x2) + abs(indexes1.first - y2));
    if (indexes1.second != INF) answer = min(answer, abs(y1 - indexes1.second) + abs(x1 - x2) + abs(indexes1.second - y2));
    if (indexes2.first != -INF) {
        answer = min(answer, abs(y1 - indexes2.first) + get(abs(x1 - x2)) + abs(indexes2.first - y2));
    }
    if (indexes2.second != INF){
        answer = min(answer, abs(y1 - indexes2.second) + get(abs(x1 - x2)) + abs(indexes2.second - y2));
    }
    return answer;
}

int main() {
    //freopen("input.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin >> n >> m >> A >> B >> v;
    for (int i = 1; i <= A; ++i) cin >> a[i];
    for (int i = 1; i <= B; ++i) cin >> b[i];
    ++A;
    a[A] = INF;
    ++A;
    a[A] = -INF;
    ++B;
    b[B] = INF;
    ++B;
    b[B] = -INF;
    sort(a + 1, a + A + 1);
    sort(b + 1, b + B + 1);
    int q;
    cin >> q;
    for (int i = 1; i <= q; ++i) {
        int x1, y1, x2, y2;
        cin >> x1 >> y1 >> x2 >> y2;
        cout << f(x1, y1, x2, y2) << endl;
    }
    return 0;
}
