//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
int trie[100005*20*20][2],minn[100005*20*20],counti=0,vis[100005],posi[100005],vis1[100005];
int add(int x,int fl){
	int i=20,pos=posi[fl],val,val1=x;
	minn[pos]=min(minn[pos],val1);
	while(i>=0){
		if(x&(1<<i)){
			val=1;
			val1-=(1<<i);
		}
		else{
			val=0;
		}
		if(trie[pos][val]==-1){
			trie[pos][val]=counti++;
		}
		pos=trie[pos][val];
		i--;
		minn[pos]=min(minn[pos],val1);
	}
}
int get(int x,int fl,int s){
	if(vis[fl]==0){
		return -1;
	}
	int val1=s-x,i=20,pos=posi[fl],val,res=0,val2;
	while(i>=0){
		if(x&(1<<i)){
			val=1;
		}
		else{
			val=0;
		}
		val2=val1-(1<<i);
		if(val==1){
			if(trie[pos][0]!=-1&&minn[trie[pos][0]]<=val1){
				pos=trie[pos][0];
			}
			else if(trie[pos][1]!=-1&&minn[trie[pos][1]]<=val2){
				res+=(1<<i);
				val1-=(1<<i); 
				pos=trie[pos][1];
			}
			else{
				return -1;
			}
		}
		else{
			if(trie[pos][1]!=-1&&minn[trie[pos][1]]<=val2){
				val1=val2;
				res+=(1<<i);
				pos=trie[pos][1];		
			}
			else{
				if(trie[pos][0]!=-1&&minn[trie[pos][0]]<=val1){
					pos=trie[pos][0];
				}
				else{
					return -1;
				}
			}
		}
		i--;
	}
	return res;

}
int main(){
	std::ios::sync_with_stdio(false);
	int q,i,typ,j,x,s,k,val;
	cin>>q;
	rep(i,100005*20*19){
		minn[i]=inf;
		rep(j,2){
			trie[i][j]=-1;
		}
	}
	rep(i,q){
		cin>>typ;
		if(typ==1){
			cin>>x;
			if(vis1[x]==1){
				continue;
			}
			vis1[x]=1;
			for(j=1;j*j<=x;j++){
				if(x%j==0){
					if(vis[j]==0){
						vis[j]=1;
						posi[j]=counti++;
					}
					add(x,j);
				}
				if(j*j!=x&&x%j==0){
					if(vis[x/j]==0){
						vis[x/j]=1;
						posi[x/j]=counti++;
					}
					add(x,x/j);
				}
			}
		}
		else{
			cin>>x>>k>>s;
			if(x%k!=0){
				cout<<-1<<endl;
				continue;
			}
			val=get(x,k,s);
			//cout<<get(x,k,s)<<endl;
			if(val!=-1&&(val%k!=0||val+x>s)){
				assert(0);
			}
			cout<<val<<endl;
		}
	}		
} 
	