/**
 *   Author: praveen_ojha
 *   Created: 23 January 2019
 *   Time: 11:29:01
**/
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define mod 1000000007
#define PI 3.141592653589793238510
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<pii> vpii;
struct node{
	bool found;
	int val;
	node *a[11];
	node(){
		found=false;
		val=0;
		for(int i=0;i<11;i++)
			a[i]=NULL;
	}
};
node *root=new node();
const int md1=1e9+7,md2=1e9+9;
string solve(string s){
	int n=s.size();
	int h1=0,h2=0;
	for(int i=0;i<n;i++){
		h1=(h1*27+(s[i]-'a'+1))%md1;
		h2=(h2*27+(s[i]-'a'+1))%md2;
	}
	string ans;
	ans+=to_string(h1);
	ans+='$';
	ans+=to_string(h2);
	return ans;
}
int Find(string s){
	int n=s.size();
	node *t=root;
	for(int i=0;i<n;i++){
		if(s[i]=='$'){
			if(!t->a[10])
				return 0;
			t=t->a[10];
		}
		else{
			int cur=s[i]-'0';
			if(!t->a[cur])
				return 0;
			t=t->a[cur];
		}
	}
	if(!t->found)
		return 0;
	return t->val;
}
void insert(string s,int val){
	int n=s.size();
	node *t=root;
	for(int i=0;i<n;i++){
		if(s[i]=='$'){
			if(!t->a[10])
				t->a[10]=new node();
			t=t->a[10];
		}
		else{
			int cur=s[i]-'0';
			if(!t->a[cur])
				t->a[cur]=new node();
			t=t->a[cur];
		}
	}
	t->found=true;
	t->val=val;
}
int32_t main(){
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    int n;
    string s;
    cin>>n;
    for(int i=0;i<n;i++){
      cin>>s;
      string cur=solve(s);
      if(Find(cur)==0){
        cout<<"OK\n";
        insert(cur,1);
      }
      else{
      	int val=Find(cur);
        cout<<s<<val<<"\n";
        insert(cur,val+1);
      }
    }
return 0;
}