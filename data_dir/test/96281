# include <bits/stdc++.h>

using namespace std;

typedef long long int LL;
typedef complex <LL> point;

# define x real()
# define y imag()

const int maxn = 1e5 + 100;

point a[maxn];

LL dis(point A, point B){
	return (A.x - B.x) * (A.x - B.x) + (A.y - B.y) * (A.y - B.y);
}

LL cross(point A,point B){
	return (A.x * B.y - A.y * B.x);
}

LL tri(point A,point B,point C){
	LL S = abs(cross(B - A, C - A));
	return (S == 0 ? 2e18 : S);
}

int main(){
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i].x >> a[i].y;
	
	int idx = 1;
	for (int i = 2; i < n; i++)
		if(dis(a[0], a[i]) < dis(a[0], a[idx]))
			idx = i;
	
	int bst = -1;
	for (int i = 1; i < n; i++)
		if(idx != i && (bst == -1 || tri(a[0], a[idx], a[i]) < tri(a[0], a[idx], a[bst])))
			bst = i;

	cout << 1 << " " << idx + 1 << " " << bst + 1 << endl;

	return 0;
}
