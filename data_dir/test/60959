#include <bits/stdc++.h>
using namespace std;
#define pb  push_back
#define ll  long long
#define vi  vector<ll >
#define vvi vector<vi >
#define all(x) x.begin(), x.end()

int inf;
int n, m;
vector<string> t;
vvi a, b, c;
vi  d;

int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    t.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> t[i];

    inf = n + m + 1000;
    a = b = vvi(n, vi(m, inf));
    a[0][0] = 0;
    b[n - 1][m - 1] = 0;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (t[i][j] == '#') continue;
            if (i) {
                if (a[i][j] > a[i - 1][j] + 1)
                    a[i][j] = a[i - 1][j] + 1;
            }
            if (j) {
                if (a[i][j] > a[i][j - 1] + 1)
                    a[i][j] = a[i][j - 1] + 1;
            }
        }
    }
    for (int i = n - 1; i >= 0; --i) {
        for (int j = m - 1; j >= 0; --j) {
            if (t[i][j] == '#') continue;
            if (i + 1 < n) {
                if (b[i][j] > b[i + 1][j] + 1)
                    b[i][j] = b[i + 1][j] + 1;
            }
            if (j + 1 < m) {
                if (b[i][j] > b[i][j + 1] + 1)
                    b[i][j] = b[i][j + 1] + 1;
            }
        }
    }
    c.assign(n, vi(m, 0));
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j)
            if (a[i][j] + b[i][j] == n + m - 2)
                c[i][j] = 1;
    if (!c[0][0]) {
        cout << 0;
        return 0;
    }
    d.assign(n + m - 1, 0);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (!c[i][j]) continue;
            ++d[a[i][j]];
        }
    }
    for (int i = 1; i < n + m - 2; ++i) {
        if (d[i] == 1) {
            cout << 1;
            return 0;
        }
    }
    cout << 2;

    return 0;
}
