#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cassert>
#include <ctime>
#include <deque>

#define forn(i, n) for (int i = 0; i < int(n); i ++)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; i --)
#define mp make_pair
#define pb push_back
#define pi 3.1415926535897932
#define ll long long
#define ld long double

using namespace std;

struct item{
    item* l, *r;
    int x, y, sz;
    ll sum;
    item(int X){
        x = X;
        y = (rand() << 12) + rand();
        sz = 1;
        l = r = NULL;
    }
    item(){}
};

inline void upd(item* &t){
    if (!t) return;
    int sz = 1;
    ll sum1 = t->x;
    if (t->l) sz += t->l->sz;
    if (t->r) sz += t->r->sz;
    if (t->l) sum1 += t->l->sum;
    if (t->r) sum1 += t->r->sum;
    t->sz = sz;
    t->sum = sum1;
    return;
}

void split(item* t, int x, item* &l, item *&r){
    if (!t){
        l = r = NULL;
        return;
    }
    if (t->x < x){
        split(t->r, x, t->r, r);
        l = t;
        upd(l);
        return;
    }
    split(t->l, x, l, t->l);
    r = t;
    upd(r);
}

void merge(item * &t, item* l, item *r){
    if (!r && !l) return;
    if (!l){
        t = r;
        upd(t);
        return;
    }
    if (!r){
        t = l;
        upd(t);
        return;
    }
    if (l->y < r->y){
        merge(l->r, l->r, r);
        t = l;
        upd(t);
        return;
    }
    merge(r->l, l, r->l);
    t = r;
    upd(t);
}

item *t[5];

inline void add(int x){
    bool q = false;
    item *t1[5];
    item* t2 = new item(x);
    forn(i, 5){
        split(t[i], x, t[i], t1[i]);
        if (t[0] && !q && (!t[i] || t[i]->sz < t[0]->sz)){
            q = true;
            merge(t[i], t[i], t2);
        }
    }
    if (!q) merge(t[0], t[0], t2);
    forn(i, 5)
        merge(t[i], t[i], t1[(i - 1 + 5) % 5]);
}

inline void del(int x){
    item *t1[5], *t2[5];
    forn(i, 5){
        split(t[i], x, t[i], t1[i]);
        split(t1[i], x + 1, t1[i], t2[i]);
    }
    forn(i, 5)
        merge(t[i], t[i], t2[(i + 1) % 5]);
}

int main(){
#ifndef ONLINE_JUDGE
    freopen ("input.txt","rt",stdin);
    freopen ("output.txt","wt",stdout);
#endif
    int n;
    scanf("%d\n", &n);
    forn(i, n){
        char c;
        scanf("%c", &c);
        if (c == 's'){
            scanf("um\n");
            if (!t[2]) cout << 0 << endl;
            else cout << t[2]->sum << endl;
            continue;
        }
        int t1;
        if (c == 'a'){
            scanf("dd %d\n", &t1);
            add(t1);
            continue;
        }
        scanf("el %d\n", &t1);
        del(t1);
    }
    return 0;
}