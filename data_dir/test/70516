//Dream your Code, Code your Dream [Siriuslight -Subham Pal]
#include<bits/stdc++.h>
#define FIO ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
using namespace std;    typedef long long ll;    typedef long double ld;

const int inf = 1e9, N = 1e5+5;
const ll INF = 1e18, MOD = 1e9+7;;

ll n, a[N], b[N];
ll ans = INF;

int main(){
    FIO;
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    // 0 0
    ll ctr = 0;
    b[0] = a[0];
    b[1] = a[1];
    bool ok = 1;
    ll diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
        b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    // 0 +
    ctr = 0;
    b[0] = a[0];
    b[1] = a[1] + 1;
    ok = 1;
    ctr = 1;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
        b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    //+ 0
    ctr = 0;
    b[0] = a[0] + 1;
    b[1] = a[1];
    ctr = 1;
    ok = 1;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
      b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    //- 0
    ctr = 0;
    b[0] = a[0] - 1;
    b[1] = a[1];
    ok = 1;
    ctr = 1;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
       b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    // 0 -
    ctr = 0;
    b[0] = a[0];
    b[1] = a[1] - 1;
    ok = 1;
    ctr = 1;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
      b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    // + -
    ctr = 0;
    b[0] = a[0] + 1;
    b[1] = a[1] - 1;
    ok = 1;
    ctr = 2;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
     b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    // - +
    ctr = 0;
    b[0] = a[0] - 1;
    b[1] = a[1] + 1;
    ok = 1;
    ctr = 2;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
       b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    // + +
    ctr = 0;
    b[0] = a[0] + 1;
    b[1] = a[1] + 1;
    ok = 1;
    ctr = 2;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
       b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    // - -
    ctr = 0;
    b[0] = a[0] - 1;
    b[1] = a[1] - 1;
    ok = 1;
    ctr = 2;
    diff = b[1] - b[0];
    for(int i = 2; i < n; i++){
        b[i] = b[i - 1] + diff;
        if(b[i] != a[i]){
            ctr++;
        }
        if(abs(a[i]- b[i]) > 1){
            ok = 0;
        }
    }
    if(ok){
        ans = min(ans, ctr);
    }
    if(ans == INF){
        cout << -1;
    }
    else
        cout << ans;
    return 0;
}
