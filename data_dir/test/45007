#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define eb emplace_back
#define mt make_tuple

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int N = 5010, oo = 0x3f3f3f3f;

int comf[N][N];
int used[N];
int a[N];
int n;
int l[N], r[N];

int pd[N], vis[N];

int solve(int pos)
{
	if (pos >= n)
		return 0;

	if (vis[pos])
		return pd[pos];
	
	vis[pos] = 1;

	pd[pos] = solve(pos+1);

	if (l[a[pos]] < pos)
		return pd[pos];
	
	int need_r = pos;
	int i = pos;
	int ok = 1;
	while (i <= need_r)
	{
		if (l[a[i]] < pos)
		{
			ok = 0;
			break;
		}
		need_r = max(need_r, r[a[i]]);
		i++;
	}
	if (ok)
		pd[pos] = max(pd[pos], comf[pos][i-1] + solve(i));
	return pd[pos];
}

int main()
{
	memset(l, 0x3f, sizeof(l));
	memset(r, -1, sizeof(r));

	scanf("%d", &n);
	for (int i = 0; i < n; i++)
	{
		scanf("%d", a+i);
		l[a[i]] = min(l[a[i]], i);
		r[a[i]] = max(r[a[i]], i);
	}
	for (int i = 0; i < n; i++)
	{
		memset(used, 0, sizeof(used));
		int cur = 0;
		for (int j = i; j < n; j++)
		{
			if (!used[a[j]])
			{
				cur ^= a[j];
				used[a[j]] = 1;
			}
			comf[i][j] = cur;
		}
	}
	int ans = solve(0);
	printf("%d\n", ans);
	return 0;
}


