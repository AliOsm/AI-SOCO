#include <bits/stdc++.h>

using namespace std;

const int N = 410;

int n, m;
int a[N][N], it;
int last[N * N], pos[N * N];
short f[N][N][N];

short Min(short u, short v) {
  if (u > v) {
    swap(u, v);
  }
  return u;
}

void add(int i1, int j1, int i2, int j2) {
  j2--;
  f[i1][i2][j1] = Min(f[i1][i2][j1], j2);
}

int main() {
  scanf("%d %d", &n, &m);
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      scanf("%d", &a[i][j]);
    }
  }
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= n; j++) {
      for (int k = 1; k <= m; k++) {
        f[i][j][k] = m;
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    it++;
    for (int j = m; j; j--) {
      if (pos[a[i][j]] == it) {
        add(i, j, i, last[a[i][j]]);
      }
      pos[a[i][j]] = it;
      last[a[i][j]] = j;
    }
  }
  for (int i1 = 1; i1 <= n; i1++) {
    for (int i2 = i1 + 1; i2 <= n; i2++) {
      it++;
      for (int j = m; j; j--) {
        if (pos[a[i1][j]] == it) {
          add(i1, j, i2, last[a[i1][j]]);
        }
        last[a[i1][j]] = j;
        pos[a[i1][j]] = it;
        if (pos[a[i2][j]] == it) {
          add(i1, j, i2, last[a[i2][j]]);
        }
        last[a[i2][j]] = j;
        pos[a[i2][j]] = it;
      }
    }
  }
  int res = 0;
  for (int i1 = n; i1; i1--) {
    for (int i2 = i1; i2 <= n; i2++) {
      for (int j = m; j; j--) {
        int foo = f[i1][i2][j];
        res = max(res, (i2 - i1 + 1) * (foo - j + 1));
        if (i1 > 1) {
          f[i1 - 1][i2][j] = Min(f[i1 - 1][i2][j], f[i1][i2][j]);
        }
        if (i2 < n) {
          f[i1][i2 + 1][j] = Min(f[i1][i2 + 1][j], f[i1][i2][j]);
        }
        if (j > 1) {
          f[i1][i2][j - 1] = Min(f[i1][i2][j - 1], f[i1][i2][j]);
        }
      }
    }
  }
  printf("%d\n", res);
  return 0;
}
