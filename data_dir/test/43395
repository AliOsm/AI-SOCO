/*****Enigma_27*****/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define pll         pair<ll,ll>
#define vll          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define endl		'\n'
#define ios        	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
ll n,i,j,l=2,t=0,k=1,x,p,b[4]={0},visited[100005]={0};
vector<ll> a[100005];
long double dfs(int node,long double pp,ll x)
{
    if(visited[node]) return 0.0;
    if(a[node].size()==1&&node!=1) return (x*(1.0/pp));
    visited[node]=1;
    long double c=a[node].size();
    if(node!=1) c-=1.0;
    long double ans=0.0;
    for(int i=0;i<a[node].size();i++)
    {
        ans+=dfs(a[node][i],pp*c,x+1);
    }
    return ans;
}
int main()
{
    cin>>n;
    for(i=0;i<n-1;i++)
    {
        cin>>j>>k;
        a[j].pb(k);
        a[k].pb(j);
    }
    long double kk=dfs(1,1.00,0);
    //cout<<setprecision(12)<<showpoint();
 
    printf("%0.12LF",kk);
	return 0;
}
