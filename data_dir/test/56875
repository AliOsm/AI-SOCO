#include <bits/stdc++.h>

using namespace std;

const double eps = 1e-7;

int main() {
#ifdef LOCAL
  freopen("input.txt", "r", stdin);
#endif
  int n, l, r;
  cin >> n >> l >> r;
  vector <double> x(n), y(n), a(n);
  double pi = acos(-1);
  for (int i = 0; i < n; ++i) {
    cin >> x[i] >> y[i] >> a[i];
    a[i] = a[i] * pi / 180.0;
  }
  vector <double> dp(1 << n);
  for (int mask = 1; mask < (1 << n); ++mask) {
    for (int i = 0; i < n; ++i) {
      if ((mask & (1 << i)) > 0) {
        double len = dp[mask ^ (1 << i)];
        double beta = acos(-(l + len - x[i]) / sqrt((l + len - x[i]) * (l + len - x[i]) + y[i] * y[i]));
        beta += a[i];
        if (beta >= pi) {
          dp[mask] = r - l;
          continue;
        }
        dp[mask] = max(dp[mask], x[i] + y[i] * tan(beta - pi / 2.0) - l);
      }
    }
  }
  cout.precision(10);
  cout << fixed;
  cout << min(dp.back(), static_cast<double>(r - l)) << endl;
  return 0;
}