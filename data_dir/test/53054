///https://www.youtube.com/watch?v=vOIqVQ76Iug
#include<bits/stdc++.h>

using namespace std;
#define ll long long
#define dbug printf("I am here\n");
#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
const int maxn = 2e5+100;

const ll inf = 1e18;
ll n  , m;
map < ll , ll > coun;
ll arr[maxn];

bool pr[maxn];
vector < ll > primes;
void seive(){
    for(int i = 2; i<maxn; i++){
        if(pr[i] == false){
            primes.push_back(i);
            for(int j = i + i; j<maxn; j+=i){
                pr[j] = true;
            }
        }
    }
}

ll Pow(ll p , ll base){
    ll ans = 1;
    for(int i = 1; i<=p; i++){
        ans *= base;
        if(ans > 1e10)return -1;
    }
    return ans;
}

int main()
{
    fast;
    ll n , k;
    seive();
    cin >> n >> k;
    ll one = 1;
    for(int i = 1; i<=n; i++){
        cin >> arr[i];
        if(arr[i] == 1)one++;
    }
    set < ll > hmm;
    for(int i = 1; i<=n; i++){
        ll num = 1;
        ll nm = arr[i];
        for(ll j = 0; j<primes.size(); j++){
            ll prime = primes[j];
            if(prime * prime > nm)break;
            ll co = 0;
            if(nm%prime == 0){
                co = 0;
                while(nm % prime==0){
                    nm/=prime;
                    co++;
                }
                ll rem = co % k;
                if(rem > 0){
                    num *= Pow(rem,prime);
                }
            }
        }
        num *= nm;
        coun[num]++;
        if(num > 1){
            hmm.insert(num);
        }
    }
    ll an = 0;
    an += (coun[1]*(coun[1]-1));

    for(auto v : hmm){
        ll ok = 1;
        ll nd = v;
        int oho = 0;
        for(ll j = 0; j<primes.size(); j++){
            ll prime = primes[j];
            if(prime*prime > v)break;
            int co = 0;
            if(v % prime == 0){
                co = 0;
                while(v%prime == 0){
                    v/=prime;
                    co++;
                }
                ll dd = k-co;
                ok *= Pow(dd , prime);
                if(ok > 1e10)oho = 1;
                if(Pow(dd,prime) == -1)oho = 1;
               // cout << dd << " " << prime << " " << nd << endl;
            }
        }
        if(v > 1){
            ll dd = k-1;
            ok *= Pow(dd , v);
            if(Pow(dd,v) == -1)oho = 1;
            if(ok > 1e10)oho = 1;
        }
        if(oho)continue;
        //cout << nd << " why " << ok << endl;
        if(nd == ok){
            an += (coun[ok]*(coun[ok]-1));
        }
        else an += (coun[nd]*coun[ok]);
    }


    cout << an/2 << endl;


}
/*



*/

