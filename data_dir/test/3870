#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
using namespace std; 
#pragma comment(linker, "/STACK:256000000") 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 1103 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
int mas[30001];
int n, k;
int was[30001][200][2][2];
int was1[30001][200][2][2];
int f[30001][200][2][2];
int g[30001][200][2][2];
int fun(int i, int j, int c, int c1);

int gun(int i, int j, int c, int c1)
{
    //cerr << i << ' ' << j << ' ' << c << ' ' << c1 << endl;
    if (j == k)
        return 0;
    if (i > n)
        return -1e9; 
    
    if (was1[i][j][c][c1])
        return g[i][j][c][c1];
    was1[i][j][c][c1] = 1;
    int sign = c ? 1 : -1;
    int sign1 = c1 ? 1 : -1;
    if (!j)
        sign = 0;
    if (j == k - 1)
        sign1 = 0;
    g[i][j][c][c1] = max(fun(i, j + 1, c1, 1), fun(i, j + 1, c1, 0));
    //cerr << g[i][j][c][c1] << ' ' << i << ' ' << j << endl;
    g[i][j][c][c1] = max(g[i][j][c][c1], (-sign * mas[i] + sign1 * mas[i] + gun(i + 1, j, c, c1)));
//  cerr << g[i][j][c][c1] << ' ' << i << ' ' << j << endl;
    return g[i][j][c][c1];
}

int fun(int i, int j, int c, int c1)
{
    //cerr << i << ' ' << j << ' ' << c << ' ' << c1 << endl;
    if (j == k)
        return 0;
    if (i > n)
        return -1e9; 
    if (was[i][j][c][c1])
        return f[i][j][c][c1];
    was[i][j][c][c1] = 1;
    int sign = c ? 1 : -1;
    int sign1 = c1 ? 1 : -1;
    if (!j)
        sign = 0;
    if (j == k - 1)
        sign1 = 0;
    f[i][j][c][c1] = max(fun(i + 1, j, c, c1), -sign * mas[i] + sign1 * mas[i] + gun(i + 1, j, c, c1));
    return f[i][j][c][c1];
}
int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    scanf("%d %d\n", &n, &k);
    for(int i = 0; i < n; ++i)
        scanf("%d", &mas[i]);
    
    cout << max(fun(0, 0, 0, 0), fun(0, 0, 0, 1)); 

}