#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=8000+7;
const double eps=0.00000001;
LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a,T b){T ret=1;for (;b;b>>=1ll,a=a*a%M) ret=1ll*ret*a%M;return ret;}

inline int cal(int x){
	int ret=0;
	while (x) ret++,x/=10;
	return ret;
}
int n;
int i,j,k;
char a[maxn];
int dp[maxn];
int fail[maxn];//反向kmp
int p; 
int main(){
	scanf("%s",a+1);
	n=strlen(a+1);
	memset(dp,0x3f,sizeof(dp));
	dp[0]=0;
	FOR(i,1,n){
		memset(fail,0xff,sizeof(fail));
		p=-1;
		REP(j,i){
			while (p!=-1&&a[i-j]!=a[i-p]) p=fail[p];
			fail[j+1]=p+1;//fail[0]=0
			if ((j+1)%(j-p)==0)
				 dp[i]=min(dp[i],dp[i-j-1]+j-p+cal((j+1)/(j-p)));
			dp[i]=min(dp[i],dp[i-j-1]+j+1+1);//1
			p++;
		}
	}
	printf("%d",dp[n]);
}
/*
*/