#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long MOD = 1'000'000'007LL;
const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	const ll MAX = 1'000'000'000'000LL;
	ll n, k; cin >> n >> k;
	string s; cin >> s;
	vector<vector<ll>> pre(n, vector<ll>(26, -1));
	for (ll i = 0; i < n; i++) {
		if (i > 0) for (ll j = 0; j < 26; j++) pre[i][j] = pre[i - 1][j];
		pre[i][s[i] - 'a'] = i;
	}

	vector<vector<ll>> dp(n, vector<ll>(n + 1));
	for (ll i = 0; i < n; i++) dp[i][1] = 1;
	for (ll i = 1; i < n; i++) {
		for (ll j = 0; j < 26; j++) {
			if (pre[i - 1][j] == -1) continue;
			for (ll k = 1; k < n; k++) {
				dp[i][k + 1] += dp[pre[i - 1][j]][k];
				chmin(dp[i][k + 1], MAX);
			}
		}
	}

	ll res = 0;
	ll now = 0;
	for (ll i = n; i >= 0; i--) {
		for (ll j = 0; j < 26; j++) {
			if (pre[n - 1][j] == -1) continue;
			ll cnt = dp[pre[n - 1][j]][i];
			if (now + cnt >= k) {
				res += (n - i)*(k - now);
				cout << res << endl;
				return 0;
			}
			else {
				res += (n - i)*cnt;
				now += cnt;
			}
		}
	}
	if (now + 1 == k) {
		res += n;
		cout << res << endl;
	}
	else {
		cout << -1 << endl;
	}
	return 0;
}