//const int N = 1e6+6;
//ll pow2[N];
//int _(){
//    pow2[0] = 1;
//    for(int i = 1; i < N; ++i)
//        pow2[i] = (pow2[i-1]*2)%MOD;
//    string s;
//    cin >> s;
//    s += "a";
//    int cnt_a = 0;
//    int cnt_b = 0;
//    ll ans = 0;
//    for(char c : s){
//        if(c == 'a'){
//            ans += cnt_b*(pow2[cnt_a]-1);
//            ans %= MOD;
//            cnt_b = 0;
//            cnt_a++;
//        }
//        else
//            cnt_b++;
//    }
//    return ans;
//}
//
//
// ================================================ 
// ^^^	ABOVE is what I wrote in my editor	^^^
// ------------------------------------------------ 
// vvv	BELOW is automatically generated 	vvv
// ================================================ 
#include <iomanip>
#include <vector>
#include <iostream>
#define all(v) (v).begin(),(v).end()
using namespace std;
typedef long long ll;
template<typename IT>
ostream &print(IT b, IT e, string sep = " ", ostream &stream = cout){
	for(IT it = b; it != e; ++it){
		stream << *it;
		if(it+1 != e) stream << sep;
	} 
	return stream;
}
template<typename IT> istream &read(IT b, IT e, istream &stream = cin){
	for(IT it = b; it != e; ++it) stream >> *it; return stream;
}
template<typename T> ostream &operator<<(ostream &stream, vector<T> &t){
	return print(all(t)," ",stream);
}
template<typename T> ostream &operator<<(ostream &stream, vector<T> &&t){
	return print(all(t)," ",stream);
}
template<typename T> istream &operator>>(istream &stream, vector<T> &t){
	return read(all(t),stream);
}
template <typename T> 
void print(T x){
	cout << x << '\n';
}
template <typename t> 
void print(vector<t> arr,string sep=" "){
	print(arr.begin(),arr.end(),sep);
	cout << '\n';
}
template <typename T> 
void print(vector<vector<T> > arr){
	for(int i = 0; i < arr.size(); ++i){
		cout << "[" << arr[i] << "]";
		if(i+1 < arr.size())
			cout << ", ";
	}
	cout << '\n';
}
template<typename T>
T _();
const ll INF = ll(2e18)+666;
const ll MOD = 1e9+7;
const int N = 1e6+6;
ll pow2[N];
int _(){
    pow2[0] = 1;
    for(int i = 1; i < N; ++i)
        pow2[i] = (pow2[i-1]*2)%MOD;
    string s;
    cin >> s;
    s += "a";
    int cnt_a = 0;
    int cnt_b = 0;
    ll ans = 0;
    for(char c : s){
        if(c == 'a'){
            ans += cnt_b*(pow2[cnt_a]-1);
            ans %= MOD;
            cnt_b = 0;
            cnt_a++;
        }
        else
            cnt_b++;
    }
    return ans;
}

int main(){
	ios_base::sync_with_stdio(false); cin.tie(0);
	cout << fixed << setprecision(12);
	cout << _() << '\n';
}
