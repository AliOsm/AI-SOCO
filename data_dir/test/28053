//Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
#define double long double

int mod=1000000007;
int fact[200005];
int ten[200005];
int cumstore[200005];
int inv(int x)
{
    int r,y;
    for(r=1,y=mod-2;y>0;x=(x*x)%mod,y/=2)
        if(y%2==1)
            r=r*x%mod;
    return r;
}
int nCr(int n, int m)
{
    if(n<m || n<0 || m<0)
        return 0;
    return fact[n] *inv(fact[m])%mod *inv(fact[n-m])%mod ;
}
int32_t main()
{
    IOS;
    fact[0]=1;
    ten[0]=1;
    for(int i=1;i<200005;i++)
        fact[i]=(i*fact[i-1])%mod,ten[i]=(10*ten[i-1])%mod;

    int n,k;
    cin>>n>>k;
    string s;cin>>s;

    int ans=0;
    int gaps=n-1;
    for(int i=n-1;i>=0;i--)
    {
        int pos=n-1-i;
        int tempans=(ten[pos]*nCr(gaps-pos,k))%mod;
        //Brute force-
        // for(int j=pos-1;j>=0;j--)
        // {
        //     cout<<j<<" "<<gaps-j-1<<" "<<k-1<<endl;
        //     tempans+=(ten[j]*nCr(gaps-j-1,k-1))%mod,tempans%=mod;
        // }
        if(i!=n-1)
        {
            cumstore[i]=(ten[pos-1]*nCr(gaps-pos,k-1))%mod;
            cumstore[i]+=cumstore[i+1];
            cumstore[i]%=mod;
            tempans+=cumstore[i];
            tempans%=mod;
        }
        ans+=(tempans*(s[i]-'0'))%mod;
        ans%=mod;
    }
    cout<<ans;
}
