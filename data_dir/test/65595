#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define fi first
#define se second
#define amen exit(0)
#define endl "\n"

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef pair <ll, ll> pii;
typedef long double ld;

template <class type1>
using super_set = tree <type1, null_type, less <type1>, rb_tree_tag, tree_order_statistics_node_update>;
template <class type1, class type2>
using super_map = tree <type1, type2, less <type1>, rb_tree_tag, tree_order_statistics_node_update>;
#define tree nado_ubrat_tree_potomu_chto_tree_est_v_biblioteke_s_super_setom
#define left aksjdfajcvhmcxfmddddjlasjdffjfncxkmskxmcvnmaaaasdjkhlkmnzcmznkj
#define right akjdsfllllkcjvcbkhjfdjbfzfjhhdsabmnffjmczbnbvhjadvkhzmbbbjfdgyv
#define y1 ljkhasdfkjvbbnvnnnnvsbncxvmnshdfnbshfdcvnkfsdkjjkkuhwihfkjskjfd

const ll D = 100007;
const ll Inf = 1000000007;

ll a[D], b[D], cnt[D];
priority_queue <ll> q[D];
priority_queue <ll, vector <ll>, greater <ll> > u;

int main()
{
    //ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    ll n, m;
    cin >> n >> m;
    for (ll i = 1; i <= n; i++)
        cin >> a[i], cnt[a[i]]++;
    for (ll i = 1; i <= n; i++)
        cin >> b[i], q[a[i]].push(b[i]);

    ll res = 0;
    for (ll i = 1; i <= m; i++)
        res += cnt[i] == 0;

    for (ll i = 1; i <= n; i++)
        if (!q[i].empty())
        {
            q[i].pop();
            while (!q[i].empty())
            {
                u.push(q[i].top());
                q[i].pop();
            }
        }

    ll ans = 0;
    for (ll i = 1; i <= res; i++)
        ans += u.top(), u.pop();
    cout << ans << endl;
    amen;
}
