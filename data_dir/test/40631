#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=10000000000000000;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
int  max3(int  a,int  b, int  c)
{
    return max(c,max(a,b));
}
int  min3(int  a,int  b,int  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;
}
int  logg(int  a)
{
    int  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
int  gcd(int  a,int   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
int abso(int x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vvi adj(n+1);
        for(int i=0;i<n-1;i++)
        {
            int x,y;
            cin>>x>>y;
            adj[x].pb(y);
            adj[y].pb(x);
        }
        int k1;cin>>k1;
        vi x(k1);
        for(int i=0;i<k1;i++)
        {
            cin>>x[i];
        }
        sort(all(x));
        int k2;cin>>k2;
        vi y(k2);
        for(int i=0;i<k2;i++)
        {
            cin>>y[i];
        }
        sort(all(y));
        cout<<'B'<<' '<<y[0]<<endl;
        int in;cin>>in;
        queue<int> Q;
        Q.push(in);
        if(binary_search(all(x),in))
        {
            cout<<"C"<<' '<<in<<endl;
            continue;
        }
        vi visited;visited.resize(n+1,0);visited[in]=1;
        bool found=false;
        int an;
        while(!Q.empty())
        {
            int tmp=Q.front();
            Q.pop();
            for(int j=0;j<adj[tmp].size();j++)
            {
                if(binary_search(all(x),adj[tmp][j]))
                {
                    found=true;
                    an=adj[tmp][j];
                    break;
                }
                else
                {
                    if(!visited[adj[tmp][j]])
                    {
                        Q.push(adj[tmp][j]);
                        visited[adj[tmp][j]]=1;
                    }
                    else
                    {
                        
                    }
                }
            }
            if(found)
            {
                break;
            }
        }
        if(!found)
        {
            cout<<"C"<<' '<<-1<<endl;
        }
        else
        {
            cout<<"A"<<' '<<an<<endl;
            int tm;
            cin>>tm;
            if(binary_search(all(y),tm))
            {
                cout<<"C"<<' '<<an<<endl;
            }
            else
            {
                cout<<"C"<<' '<<-1<<endl;
            }
        }
    }
}

