#include <bits/stdc++.h>

using namespace std;


struct P
{
    int x,y,z;

    bool operator<(const P &a)const{
        if(x!=a.x) return x<a.x;
        return y<a.y;
    }
};

long long x,y,z;
vector<P> v;
int i,n,m,k,a,d,b,c;
int e;
int o[1001][51][51];
int j[51];
int l[51];



P u[1111];
char r[1001],r1[51],r2[51];
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p[22222];
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();


bool as(P a,P b)
{
    if(a.x!=b.x) return a.x<b.x;
    if(a.y!=b.y) return a.y<b.y;
    return a.z<b.z;
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;t++)
    {
        scanf("%d %d",&n,&m);
        u[t]={n,m};
    }
    //a(x-x0)=b(y-y0)
    //ax-ax0+by0-by=0;
    for(int i=1;i<=a;i++)
    for(int j=i+1;j<=a;j++)
    {
        int a=u[j].y-u[i].y,b=u[i].x-u[j].x;
        int c=a*u[i].x+b*u[i].y;
        int p=__gcd(abs(a),__gcd(abs(b),abs(c)));
        if(p==0)
        {
            printf("%d %d",i,j);
        }
        a/=p;
        b/=p;
        c/=p;
        if(a<0) v.push_back({-a,-b,-c});
        else if(a==0)
        {
            if(b<0) v.push_back({-a,-b,-c});
            else v.push_back({a,b,c});
        }
        else v.push_back({a,b,c});
    }
    //puts("##");
    sort(v.begin(),v.end(),as);
    for(int h=0;h<v.size();h++)
    if(h==0||(v[h].x!=v[h-1].x||v[h].y!=v[h-1].y||v[h].z!=v[h-1].z))
    {
        int s=abs(__gcd(v[h].x,v[h].y));
        //printf("%d\n",s);
        int n=v[h].x/s,m=v[h].y/s;
        if(n==0&&m<0) m=1;
        x+=h-d-p[n][m];
        //printf("@@%d %d\n",v[h].x,v[h].y);
        //puts("$$");
        p[n][m]++;
    }
    else d++;
    printf("%lld",x);
}
