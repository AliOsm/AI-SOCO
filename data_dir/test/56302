#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int N = 52;
int n, k, dp[N][N];
ll arr[N], mask;

int DP(int pos, int parts) {
	if(pos < 0) return parts == 0;
	if(parts == 0) return 0;
	if(dp[pos][parts] != -1) return dp[pos][parts];

	int ret = 0; ll sum = 0;
	for(int i = pos; i >= 0; i--) {
		sum += arr[i];
		if((sum & mask) == mask) ret |= DP(i-1, parts-1);
	} return dp[pos][parts] = ret;
}

int main() {
	scanf("%d %d", &n, &k);
	for(int i = 0; i < n; i++)
		scanf("%lld", &arr[i]);

	for(int i = 63; i >= 0; i--) {
		memset(dp,-1,sizeof dp);
		mask |= (1ll<<i);
		if(!DP(n-1,k)) mask ^= (1ll<<i);
	} printf("%lld", mask);
	return 0;
}