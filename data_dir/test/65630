#include<bits/stdc++.h>
using namespace std;

#define int           long long 
#define S             second
#define F             first
#define pb            push_back
#define ppb           pop_back()
#define ppb           pop_back()
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a,b)      (a*(b/__gcd(a,b)))  
#define inf           (int)(1e18)
#define err           cerr << "move" << '\n';
//#define endl          '\n'

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef vector<vector<int> >                  vvi;;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;


void solve(){
    int len, x, b, cnt = 0;
    cout << "a" << endl;
    cin >> len;
    if(len == 300){
        for(int i = 0; i < len; i++){
            cout << "b";
        }
        cout << endl;
        cin >> len;
        if(!len)exit(0);
    }
    len++;
    string s, ans;
    for(int i = 0; i < len; i++)s.pb('a'), ans.pb('a');
    cout << s << endl;
    cin >> b;
    if(b == len){
        for(int i = 0; i < len-1; i++){
            cout << "b";
        }
        cout << endl;
        cin >> b;
        if(!b)exit(0);
    }
    else if(!b)exit(0);
    else{
        for(int i = 0; i < len-1; i++){
            s[i] = 'b';
            cout << s << endl;
            cin >> x;
            if(!x)exit(0);
            if(x == b-1){
                cnt++;
                ans[i] = 'b';
            }
            else ans[i] = 'a';
            s[i] = 'a';
        }
        if(cnt != b)ans[len-1] = 'b';
        cout << ans << endl;
        cin >> x;
        if(!x)exit(0);
    }
}

signed main(){

    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);    
    int t = 1;
    clock_t start, end; 
    start = clock(); 

    cout << fixed << setprecision(8);
    

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif

    //cin >> t;

    while(t--){
        solve();
    }

    end = clock();
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC); 
    //cerr<<time_taken;
}