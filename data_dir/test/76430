#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define sz(a) (lld)((a).size())
#define all(c) (c).begin(),(c).end()             
typedef long double ldb;
typedef long long lld;
const lld MOD = 1e9+7;
const lld INF = 1011111111;
const lld LLINF = 1000111000111000111LL;
const ldb EPS = 1e-10;
const ldb PI = 3.14159265358979323;
using namespace std;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
const lld N = 350005;
lld a[N][10],n,m;
vector<pair<lld,lld>> masks;
set<lld> s;
bool check(lld x,lld mode) {
    lld tmp = (1<<m)-1;
    masks.clear();
    s.clear();
    rep(i,1,n+1) {
        lld curr = 0;
        rep(j,0,m) if(a[i][j] >= x) curr |= (1<<j);
        if(s.find(curr) == s.end()) {
            masks.pb(mp(curr,i));
            s.insert(curr);
        }
    }
    for(auto i:masks) for(auto j:masks) if((i.f|j.f)==tmp) {
        if(mode) cout<<i.s<<" "<<j.s<<endl;
        return 1;
    }
    return 0;
}
int32_t main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin>>n>>m;
    rep(i,1,n+1) rep(j,0,m) cin>>a[i][j];
    lld low = 0, high = MOD;
    while(high-low>1) {
        lld mid = (low+high)/2;
        if(check(mid,0)) low = mid;
        else high = mid;
    }
    if(check(high,0)) check(high,1);
    else check(low,1);
    return 0;
}