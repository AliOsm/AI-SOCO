#include<algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
    using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                              \
  for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
  cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N = 200100;
int n, k, s, t;
vii carro;
int pit[N];
//gas,preco
bool simula(int x){
  int gas=carro[x].first;
  ll tempo=0;
  for(int i=1;i<=k+1;i++){
    ll dist=pit[i]-pit[i-1];
    if(gas<dist) return false;
    ll extra=(gas-dist);
    if(extra>=dist) tempo+=dist;
    else{
      tempo+=extra+2*(dist-extra);
    }
  }
  return (tempo<=t);
}
int bb(int b, int e){
  if(b==e) return b;
  int mid=(b+e)/2;
  if(simula(mid)) return bb(b,mid);
  return bb(mid+1,e);
}
int main()
{
  sc2(n, k);
  sc2(s, t);
  for (int i = 0; i < n; i++) {
    int x,y;
    sc2(x, y);
    carro.pb(mp(y,x));
  }
  for (int i = 1; i <= k; i++) sc(pit[i]);
  pit[k + 1] = s;
  sort(pit, pit + k + 2);
  sort(carro.begin(),carro.end());
  int idx=bb(0,n-1);
  int resp=INF;
  if(idx==n-1 and !simula(idx)) resp=-1;
  else{
    for(int i=idx;i<n;i++){
      resp=min(resp,carro[i].second);
    }
  }
  pri(resp);
  return 0;
}
