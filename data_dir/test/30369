// In the name of God.
// We're nothing and you're everything.
// Ya Ali!
 
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 14;
int n, k;
bool mark[maxn], in_comp[maxn];
vector<int> g[maxn], rg[maxn];
char s[maxn];
void dfs(int v, vector<int> *g, vector<int> &vec){
	mark[v] = 1;
	for(auto u : g[v])
		if(!mark[u])
			dfs(u, g, vec);
	vec.push_back(v);
}
int main(){
	ios::sync_with_stdio(0), cin.tie(0);
	cin >> n >> k;
	for(int i = 0; i < 2; i++){
		int last;
		cin >> last;
		last--;
		for(int i = 1; i < n; i++){
			int p;
			cin >> p;
			p--;
			g[last].push_back(p);
			rg[p].push_back(last);
			last = p;
		}
	}
	vector<int> all;
	for(int i = 0; i < n; i++)
		if(!mark[i])
			dfs(i, g, all);
	memset(mark, 0, sizeof mark);
	reverse(all.begin(), all.end());
	vector<vector<int> > cmps;
	for(auto v : all){
		if(mark[v])  continue;
		vector<int> comp;
		dfs(v, rg, comp);
		cmps.push_back(comp);
	}
	if(cmps.size() < k)
		return cout << "NO\n", 0;
	cout << "YES\n";
	for(int i = 0; i < cmps.size(); i++)
		for(auto p : cmps[i])
			s[p] = 'a' + min(k - 1, i);
	cout << s << '\n';
}
