#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <iomanip>
#include <cmath>
#include <algorithm>
using namespace std;

/*
int main()
{
	int a = 0;
	int b = 0;
	int n;
	cin>>n;
	vector<int> c(n);
	for (int i = 0; i < n; i++)
	{
		cin>>c[i];
	}
	int i = 0,j = n-1;
	int t = 0;
	while (i <=j)
	{
		if (c[i] > c[j])
		{
			if (t)
			{
				b += c[i];
			}
			else
				a += c[i];
			i++;
		}
		else
		{
			if (t)
			{
				b += c[j];
			}
			else
				a += c[j];
			j--;
		}
		
		t = (t+1)%2;
	}
	cout<<a<<" "<<b<<endl;
//	system("pause");
}


int main()
{
	int n;
	cin>>n;
	int a[5001] = {0};
	vector<int> in;
	vector<int> dec;
	for (int i = 0; i < n; i++)
	{
		int d ;
		cin>>d;
		a[d]++;
	}
	for (int i = 0; i < 5001; i++)
	{
		if (a[i] > 0)
		{
			in.push_back(i);
			if (a[i] > 1)
				dec.push_back(i);
		}
	}
	int ins, dcs;
	ins = in.size();
	dcs = dec.size();
//	cout<<"ok"<<endl;
	
	if (dcs && ins && in[ins-1] == dec[dcs-1])
	{
		dcs--;
	}
	//cout<<"ok"<<endl;
	cout<<ins+dcs<<endl;
	cout<<in[0];
	//cout<<"ok"<<endl;
	for (int i = 1; i < in.size(); i++)
	{
		cout<<" "<<in[i];
	}
	for (int i = dcs-1; i >=0; i--)
	{
		cout<<" "<<dec[i];
	}
	cout<<endl;
	//cout<<"ok"<<endl;
//	system("pause");
}


vector<long long> ind;
vector<pair<int,pair<long long,long long> > > ins;

long long find(long long a)
{
	vector<long long> :: iterator it = lower_bound(ind.begin(), ind.end(), a);
	int i = it-ind.begin();
	if (ins[i].first == 1)
		return ins[i].second.first;
	else
	{
		long long beg = ind[i-1];
		a -= beg;
		a--;
		a %= ins[i].second.first;
		a++;
		return find(a);
	}
}

int main()
{
	int m;
	cin>>m;
	ins =vector<pair<int,pair<long long,long long> > >(m);
	ind = vector<long long> (m);
	for (int i = 0; i < m; i++)
	{
		long long a,b,c;
		cin>>a;
		ins[i].first = a;
		if (a == 1)
		{
			cin>>b;
			ins[i].second.first = b;
			if (i)
				ind[i] = ind[i-1]+1;
			else ind[i] = 1;
		}
		else
		{
			cin>>b>>c;
			ins[i].second.first = b;
			ins[i].second.second = c;
			long long mul = b*c;
			ind[i] = ind[i-1]+mul;
		}
	}
	int n;
	cin>>n;
	while (n--)
	{
		long long a;
		cin>>a;
		long long res = find(a);
		cout<<res<<endl;
	}
//	system("pause");
}


int main()
{
	int pw2[] = {1,2,4,8,16,32,64,128,256,512,1024,2048,4096, 8192};
	int arr[7001];
	arr[0] = 1;
	int s = 0;
	for (int i = 1; i < 7000; i++)
	{
		int p=0;
		for (p=0; p<14 && pw2[p] <= arr[i-1]; p++);
		arr[i] = p*2 + arr[i-1]-p;
		s += arr[i];
		//cout<<arr[i]<<endl;
	}
	cout<<arr[7000-1]<<" "<<s<<endl;
	system("pause");
}


int main()
{
	int pw2[20] = {1};
	for (int i = 1; i< 20; i++) pw2[i] = 2*pw2[i-1];
	int n, m;
	cin>>n>>m;
	vector<vector<int> > s;
	int l1[7001], l2[7001];
	while (m--)
	{
		int ty;
		cin>>ty;
		if (ty == 1)
		{
			vector<int> in(4);
			cin>>in[0]>>in[1]>>in[2]>>in[3];
			s.push_back(in);
		}
		else
		{
			int a, b;
			cin>>a>>b;
			l1[a] = l2[a] = b;
			for (int i = a+1; i <= n; i++)
			{
				int p=0;
				for (p=0; p<20 && pw2[p] < l1[i-1]; p++);
				//cout<<p<<endl;
				l1[i] = l1[i-1] + p;
			}
			for (int i = a+1; i <= n; i++)
			{
				int p=0;
				for (p=0; p<20 && pw2[p] <= l2[i-1]; p++);
				//cout<<p<<endl;
				l2[i] = l2[i-1] + p;
			}
			set<int> se;
			for (int i = 0; i < s.size(); i++)
			{
				if (s[i][0] < a) continue;
				if (s[i][1] >= l1[s[i][0]] && s[i][1] <= l2[s[i][0]])
					se.insert(s[i][3]);
				else if ((s[i][2] >= l1[s[i][0]] && s[i][2] <= l2[s[i][0]]))
					se.insert(s[i][3]);
				else if ((s[i][1] <= l1[s[i][0]] && s[i][2] >= l2[s[i][0]]))
					se.insert(s[i][3]);
			}
			cout<<se.size()<<endl;
		}
	}
//	system("pause");
}


int main()
{
	string a,b;
	cin>>a>>b;
	char mx = '0';
	for (int i = 0;i <a.size(); i++)
	{
		mx = max(mx, a[i]);
	}
	for (int i = 0;i <b.size(); i++)
	{
		mx = max(mx, b[i]);
	}
	int mxi = mx-'0';
	mxi++;
	int aa = 0;
	int bb = 0;
	for (int i = 0; i < a.size(); i++)
	{
		aa*= mxi;
		aa += a[i]-'0';
	}
	for (int i = 0; i < b.size(); i++)
	{
		bb*= mxi;
		bb += b[i]-'0';
	}
	int c = aa+bb;
//	cout<<c<<endl;
	string cc  = "";
	while (c)
	{
		cc += ((c%mxi)+'0');
		c/=mxi;
	}
	cout<<cc.size()<<endl;
//	system("pause");
}


int main()
{
	int n;
	cin>>n;
	vector<pair<int,int> > a(n);
	for (int i = 0; i < n; i++)
	{
		cin>>a[i].first;
		a[i].second = i+1;
	}
	sort(a.begin(), a.end());
	cout<<a[a.size()-1].second<<" "<<a[a.size()-2].first<<endl;
}


int main()
{
	int n;
	cin>>n;
	vector<int> a(n);
	for (int i = 0;i < n ;i++)
	{
		cin>>a[i];
	}
	int T;
	cin>>T;
	sort(a.begin(), a.end());
	int mx = 0;
	for (int i = 0; i < n; i++)
	{
		int k = upper_bound(a.begin(), a.end(), a[i]+T)- a.begin();
		k -= i;
		mx = max(mx, k);
	}
	cout<<mx<<endl;
}


int main()
{
	
	string s;
	cin>>s;
	int n = s.size();
	vector<vector<int> > a(n+2, vector<int>(26, 0));
	for (int i = 1; i <= s.size(); i++)
	{
		for (int j = 0; j < 26; j++)
		{
			a[i][j] = a[i-1][j];
		}
		a[i][s[i-1]-'a']++;
	}

	int mx = 0;
	for (int i = 0; i < 26; i++) if (a[n][i] > 0) mx++;
	cout<<mx<<endl;
	for (int i = 1; i <= mx; i++)
	{
		int sm = 0;
		for (int j = 1; j <= n; j++)
		{
			int lw = j;
			int hi = n;
			int mid = (j+n)/2;
			while (lw <= hi)
			{
				mid = (lw+hi)/2;
				int val = 0;
				for (int k = 0; k < 26; k++)
				{
					if (a[mid][k] - a[j-1][k] > 0) val++;
				}
				if (val >= i)
				{
					hi = mid-1;
				}
				else
					lw = mid+1;
			}
			int low = lw;
			lw = j;
			hi = n;
			mid = (j+n)/2;
			while (lw <= hi)
			{
				mid = (lw+hi)/2;
				int val = 0;
				for (int k = 0; k < 26; k++)
				{
					if (a[mid][k] - a[j-1][k] > 0) val++;
				}
				if (val > i)
				{
					hi = mid-1;
				}
				else
					lw = mid+1;
			}
			int high = lw;
			sm += high-low;
//			cout<<i<< " "<<j<<" "<<low<<" "<<high<<" "<<sm<<endl;
		}
		cout<<sm<<endl;
	}
//	system("pause");
}


int main()
{
	string s;
	cin>>s;
	string rem;
	cin>>rem;
	int a,b;
	a = b = 0;
	bool ok = false;
	string aa = "", bb="";
	for (int i = 0; i < s.size(); i++)
	{
		if (s[i] == '|')
		{
			ok = true;
			continue;
		}
		if (ok)
		{
			b++;
			bb += s[i];
		}
		else
		{
			a++;
			aa += s[i];
		}
	}
	int c = rem.size();
	c -= (abs(a-b));
	if (c < 0) cout<<"Impossible"<<endl;
	else
	{
		if (c%2!=0)
		{
			cout<<"Impossible"<<endl;
		}
		else
		{
			if (a < b)
			{
				for (int i = 0; i < b-a; i++)
				{
					aa += rem[i];
				}
			}
			else
			{
				for (int i = 0; i < a-b; i++)
				{
					bb += rem[i];
				}
			}
			for (int i = abs(a-b); i < rem.size(); i++)
			{
				if (i%2==0)
				{
					aa += rem[i];
				}
				else bb += rem[i];
			}
			cout<<aa<<"|"<<bb<<endl;
		}
	}
//	system("pause");
}



int main()
{
	int n;
	cin>>n;
	vector<int> a(n);

	int d1, d2;
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
	}
	sort(a.begin(), a.end());
	if (n == 1)
	{
		cout<<-1<<endl;
	}
	else if (n == 2)
	{
		d1 = a[1]-a[0];
		if (d1 == 0)
		{
			cout<<1<<endl;
			cout<<a[0]-d1<<endl;
		}
		else if ((a[1]-a[0])%2==0)
		{
			cout<<3<<endl;
			cout<<a[0]-d1<<" "<<a[0]+d1/2<<" "<<a[1]+d1<<endl;
		}
		else
		{
		cout<<2<<endl;
		cout<<a[0]-d1<<" "<<a[1]+d1<<endl;
		}
	}
	else
	{
		d1 = a[1]-a[0];
		bool ok = true;
		for (int i = 2; i < n; i++)
		{
			if (a[i] - a[i-1] != d1)
				ok = false;
		}
		if (ok)
		{
			if (a[0]-d1== a[n-1]+d1)
			{
				cout<<1<<endl;
				cout<<a[n-1]+d1<<endl;
			}
			else
			{
			cout<<2<<endl;
			cout<<a[0]-d1<<" "<<a[n-1]+d1<<endl;
			}
			return 0;
		}
		d2 = a[2] - a[1];
		int d = min(d1, d2);
		bool ok1 = true;
		bool tk = false;
		bool ok3 = true;
		long long r = 0;
		for (int i = 1; i < n; i++)
		{
			if (a[i] - a[i-1] != d && tk)
				ok3 = false;
			else if (a[i] - a[i-1] != d)
			{
				if (a[i-1]+d == a[i]-d)
				{
					r = a[i-1]+d;
					tk = true;
				}
				else
					ok3 = false;
			}
		}
		if (ok3)
		{
			cout<<1<<endl<<r<<endl;
		}
		else
			cout<<0<<endl;	
	}
//	system("pause");
}


int main()
{
	long long a,b,w,x,c;
	cin>>a>>b>>w>>x>>c;

	long long na = 0;
	if (b>=x)
	{
		na += (b-x)/x;
		b -= na*(x);
		b -=x;
		na++;
	}
	if (c-a <= na)
	{
		cout<<max(0ll, c-a)<<endl;
		//system("pause");
		return 0;
	}
	c -= na;
	long long t = na;
	pair<long,long> cy[1001];
	for (int i = 0; i < 1001; i++)
	{
		cy[i].first = -1;
		cy[i].second = -1;
	}
	long long dif = c-a;
	while (dif > 0)
	{
		if (cy[b].first != -1)
		{
			long long ola, olb;
			ola = dif;
			olb = t;
			long long add = dif/(cy[b].first-dif);
			if (dif % (cy[b].first-dif) >0)
				dif %= (cy[b].first-dif);
			else
			{
				dif= dif%(cy[b].first-dif) + (cy[b].first-dif);
				add--;
			}
			t += add*(t-cy[b].second);
			cy[b].first = ola;
			cy[b].second = olb;
		}
		else
		{
			cy[b].first = dif;
			cy[b].second = t;
		}
		if (b < x)
		{
			int r = 0;
			while (b < x)
			{
				r++;
				b = w-(x-b);
			}
			t += r;
		}
		else
		{
			na=0;
			na += (b-x)/x;
			b -= na*(x);
			b -=x;
			na++;
			if (dif <= na)
			{
				cout<<t+dif<<endl;
	//			system("pause");
				return 0;
			}
			dif-=na;
			t += na;
		}
	}
	cout<<t<<endl;
//	system("pause");
}


int n,m;
int dis[2001][2001];
short tk[2001][2001];
vector<string > g;
int dfs(int i, int j)
{
	tk[i][j] = 1;
	if (g[i][j] == '>')
	{
		if (tk[i][j+1] == 1)
		{
			tk[i][j] = 2;
			return dis[i][j+1] = -1;
		}
		else if (tk[i][j+1] == 2)
		{
			dis[i][j] = 1+dis[i][j+1];
		}
		else
		{
			dis[i][j] = 1+dfs(i,j+1);
		}
		if (dis[i][j] == 0)
		{
			dis[i][j] = -1;
			tk[i][j] = 2;
			return -1;
		}
		else
		{
			tk[i][j] = 2;
			return dis[i][j];
		}
	}
	else if (g[i][j] == '<')
	{
		if (tk[i][j-1] == 1)
		{
			tk[i][j] = 2;
			return dis[i][j-1] = -1;
		}
		else if (tk[i][j-1] == 2)
		{
			dis[i][j] = 1+dis[i][j-1];
		}
		else
		{
			dis[i][j] = 1+dfs(i,j-1);
		}
		if (dis[i][j] == 0)
		{
			dis[i][j] = -1;
			tk[i][j] = 2;
			return -1;
		}
		else
		{
			tk[i][j] = 2;
			return dis[i][j];
		}
	}
	else if (g[i][j] == '^')
	{
		if (tk[i-1][j] == 1)
		{
			tk[i][j] = 2;
			return dis[i-1][j] = -1;
		}
		else if (tk[i-1][j] == 2)
		{
			dis[i][j] = 1+dis[i-1][j];
		}
		else
		{
			dis[i][j] = 1+dfs(i-1,j);
		}
		if (dis[i][j] == 0)
		{
			dis[i][j] = -1;
			tk[i][j] = 2;
			return -1;
		}
		else
		{
			tk[i][j] = 2;
			return dis[i][j];
		}
	}
	else if (g[i][j] == 'v')
	{
		if (tk[i+1][j] == 1)
		{
			tk[i][j] = 2;
			return dis[i+1][j] = -1;
		}
		else if (tk[i+1][j] == 2)
		{
			dis[i][j] = 1+dis[i+1][j];
		}
		else
		{
			dis[i][j] = 1+dfs(i+1,j);
		}
		if (dis[i][j] == 0)
		{
			dis[i][j] = -1;
			tk[i][j] = 2;
			return -1;
		}
		else
		{
			tk[i][j] = 2;
			return dis[i][j];
		}
	}
	else
	{
		tk[i][j] = 2;
		return dis[i][j] =0;
	}
}

int main()
{
	cin>>n>>m;
	g = vector<string>(n);
	for (int i = 0; i < n ; i++)
	{
		cin>>g[i];
	}
	
	int mx = 0;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (tk[i][j] == 0)
			{
				int res = dfs(i, j);
				if (res == -1)
				{
					cout<<-1<<endl;
					return 0;
				}
				mx = max(mx, res);
			}
		}
	}
	if (mx <=1)
	{
		cout<<mx<<endl;
		return 0;
	}
	vector<vector<int> > ti(n, vector<int> (m, -1));
	bool fin = false;
	bool dou = false;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (dis[i][j] == mx)
			{
				ti[i][j] = 0;
				int a = i, b = j;
				int co = 1;
				do
				{
					if (g[a][b] == '^')
						a--;
					else if (g[a][b] == 'v')
						a++;
					else if (g[a][b] == '>')
						b++;
					else if (g[a][b] == '<')
						b--;
					ti[a][b] = co;
					co++;
				} while (g[a][b] != '#');
				fin = true;
				break;
			}
		}
		if (fin) break;
	}


	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (dis[i][j] == mx)
			{
				if (ti[i][j] == 0) continue;
				ti[i][j] = 0;
				int a = i, b = j;
				int co = 1;
				dou = true;
				do
				{
					
					if (g[a][b] == '^')
						a--;
					else if (g[a][b] == 'v')
						a++;
					else if (g[a][b] == '>')
						b++;
					else if (g[a][b] == '<')
						b--;
					if (ti[a][b] == co && g[a][b] != '#')
					{
						dou = false;
					}
					ti[a][b] = co;
					co++;
				} while (g[a][b] != '#');
				if (dou)
				{
					break;
				}
			}
		}
		if (dou) break;
	}
	if (dou)
	{
		cout<<2*mx<<endl;
	}
	else
	{
		cout<<2*mx-1<<endl;
	}
//	system("pause");
}




int main()
{
	int r , d, s;
	cin>>r>>d>>s;
	int co = 1;
	vector<vector<int> > g1;
	vector<vector<int> > g2;
	pair<int,int> tk[10][1<<10];
	while (r != 0|| d!=0 || s != 0)
	{
		g1 = vector<vector<int> >(r);
		g2 = vector<vector<int> >(r);
		for (int i = 0; i < d; i++)
		{
			int a, b;
			cin>>a>>b;
			g1[a-1].push_back(b-1);
			g1[b-1].push_back(a-1);
		}
		for (int i = 0; i < s; i++)
		{
			int a, b;
			
			cin>>a>>b;
			if (a == b) continue;
			g2[a-1].push_back(b-1);
		}
		for (int i = 0; i < 10; i++)
		{
			for(int j = 0; j < (1<<10); j++) tk[i][j].first = tk[i][j].second = -1;
		}
		queue<pair<int,int> > q;
		tk[0][1] = make_pair(0, 1);
		q.push(make_pair(0, 1));
		while (!q.empty())
		{
			pair<int,int> cur = q.front();
			q.pop();
			int room = cur.first;
			int msk = cur.second;
			//cout<<room<< " "<<msk<<endl;
			if (room == r-1 && msk == (1<<(r-1)))
			{
				break;
			}
			for (int i = 0; i < g2[room].size(); i++)
			{
				int nwmsk = msk ^ (1<<(g2[room][i]));
				if (tk[room][nwmsk].first != -1) continue;
				tk[room][nwmsk].first = room;
				tk[room][nwmsk].second = msk;
				q.push(make_pair(room, nwmsk));
			}
			for (int i = 0; i < g1[room].size(); i++)
			{
				if (tk[g1[room][i]][msk].first != -1) continue;
				if (((1<<(g1[room][i]))&msk) > 0)
				{
					tk[g1[room][i]][msk].first = room;
					tk[g1[room][i]][msk].second = msk;
					q.push(make_pair(g1[room][i], msk));
				}
			}
		}
		cout<<"Villa #"<<co<<endl;
		if (tk[r-1][(1<<(r-1))].first == -1)
		{
			cout<<"The problem cannot be solved."<<endl;
		}
		else
		{
			vector<pair<int,int> > res;
			int i, j;
			i = r-1;
			j = (1<<(r-1));
			while (!((tk[i][j].first == i) && (tk[i][j].second == j)))
			{
				res.push_back(make_pair(i, j));
				int ni = tk[i][j].first;
				int nj = tk[i][j].second;
				i = ni;
				j = nj;
			}
			cout<<"The problem can be solved in "<<res.size()<<" steps:"<<endl;
			
			i= j = 0;
			j = 1;
			reverse(res.begin(), res.end());
			for (int k =0; k < res.size(); k++)
			{
				if (res[k].first != i)
				{
					cout<<"- Move to room "<<res[k].first+1<<"."<<endl;
				}
				else
				{
					int chr = -1;
					int on = -1;
					for (int z = 0; z < r; z++)
					{
						if (((1<<z)&j) == ((1<<z)&res[k].second)) continue;
						if (((1<<z)&j) > 0)
						{
							cout<<"- Switch off light in room "<<z+1<<"."<<endl;
						}
						else
						{
							cout<<"- Switch on light in room "<<z+1<<"."<<endl;
						}
					}
				}
				i = res[k].first;
				j = res[k].second;
			}

		}
		cout<<endl;
		co++;
		cin>>r>>d>>s;
	}
}


int main()
{
	int n;
	cin>>n;
	vector<int> a(n);
	for (int i =0; i < n; i++)
	{
		cin>>a[i];
	}
	vector<long long> s(n);
	s[0] = a[0];
	for (int i = 1; i < n; i++)
	{
		s[i] = a[i] + s[i-1];
	}
	long long res = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] == 0)
			res += s[i];
	}

	cout<<res<<endl;
}


int main()
{
	long long n, m;
	cin>>n>>m;
	vector<pair<int,int> > p(m);
	vector<vector<int> > mp;
	for (int i = 0; i < m; i++)
	{
		int a, b;
		cin>>a>>b;
		p[i].first = a;
		p[i].second = b;
	}
	sort(p.begin(), p.end());
	vector<int> rws;
	rws.push_back(p[0].first);
	mp.push_back(vector<int>());
	mp[0].push_back(p[0].second);
	for (int i = 1; i < m;i++)
	{
		if (p[i].first - p[i-1].first == 0)
		{
			mp[mp.size()-1].push_back(p[i].second);
		}
		else
		{
			mp.push_back( vector<int>());
			mp[mp.size()-1].push_back(p[i].second);
			rws.push_back(p[i].first);
		}
	}
	for (int i = rws.size()-1; i >0 ; i--)
	{
		if (rws[i]-rws[i-1] == 1)
		{
			for (int j = 0; j < mp[i-1].size(); j++)
			{
				mp[i].push_back(mp[i-1][j]);
			}
		}
	}
	set<pair<int, int> > all;
	int lw = 1;
	
	for (int i = 0; i < rws.size(); i++)
	{
		vector<int> &v = mp[i];
		all.clear();
		all.insert(make_pair(lw, n));
		for (int j = 0; j < v.size(); j++)
		{
			pair<int,int> s = make_pair(v[j], 1000000020);
			set<pair<int, int> > ::iterator it = all.upper_bound(s);
			if (it == all.begin()) continue;
			it--;
			pair<int,int> seg = (*it);
			if (seg.first <= v[j] && seg.second >= v[j])
			{
				all.erase(it);
				
				if (seg.first == seg.second)
				{
					continue;
				}
				else if (v[j] == seg.first)
				{
					
					seg.first++;
					all.insert(seg);
				}
				else if (v[j] == seg.second)
				{
					seg.second--;
					all.insert(seg);
				}
				else
				{
					pair<int,int> s1, s2;
					s1.first = seg.first;
					s1.second = v[j]-1;
					s2.first = v[j]+1;
					s2.second = seg.second;
					all.insert(s1);
					all.insert(s2);
				}
			}
		}
		if (!all.empty())
		{
			set<pair<int, int> > ::iterator it = all.begin();
			lw = (*it).first;
		}
		else
		{
			lw = n+1;
		}
	}
	if (n - p[m-1].first == 0)
	{
		if (all.empty())
		{
			cout<<-1<<endl;
			return 0;
		}
		set<pair<int, int> > ::iterator it = all.end();
		it--;
		pair<int,int> r = (*it);
		if (n >= r.first && n <= r.second)
		{
			cout<<n+n-2<<endl;
		}
		else
		{
			cout<<-1<<endl;
		}
	}
	else
	{
		if (n >= lw)
		{
			cout<<n+n-2<<endl;
		}
		else
		{
			cout<<-1<<endl;
		}
	}
	system("pause");
}
*/

int a[1001];
int n;
int dp[1000][10001][2];

int sol(int i, int s, int m)
{
//	cout<<i<<" "<<s<<" "<<m<<endl;
	int res = 0;
	if (s == 0) res++;
	if (i == n) return res;
	if (dp[i][s][m] != -1) return dp[i][s][m];
	
	if (m == 0) s = -s;
	s += a[i];
	if (s >= 0)
	{
		res += sol(i+1, s, 1);
		res %= 1000000007;
	}
	else
	{
		res += sol(i+1, -s, 0);
		res %= 1000000007;
	}
	s -= 2*a[i];
	if (s >= 0)
	{
		res += sol(i+1, s, 1);
		res %= 1000000007;
	}
	else
	{
		res += sol(i+1, -s, 0);
		res %= 1000000007;
	}
	res %= 1000000007;
	s += a[i];
	if (s < 0) s = -s;
	return dp[i][s][m] = res;
}

int main()
{
	cin>>n;
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
	}
	for (int i = 0; i < n; i++) for (int j = 0; j < 10001; j++) dp[i][j][0] = dp[i][j][1] = -1;
	long long res = 0;
	for (int i = 0; i < n; i++)
	{
		res += sol(i, 0, 1);
		res--;
	//	cout<<res<<endl;
		res += 1000000007;
		res %= 1000000007;
	}
	cout<<res<<endl;
//	system("pause");
}