#include <bits/stdc++.h>
using namespace std;

int n;
vector<int> t;

int gcd(int a, int b)
{
	while(b)
	{
		a %= b;
		swap(a, b);
	}

	return a;
}

void update(int v, int tl, int tr, int pos, int value)
{
	if(tl == tr)
	{
		t[v] = value;
	} else
	{
		int tm = (tl + tr) / 2;
		if(pos <= tm)
		{
			update(2 * v + 1, tl, tm, pos, value);
		} else
		{
			update(2 * v + 2, tm + 1, tr, pos, value);
		}
		t[v] = gcd(t[2 * v + 1], t[2 * v + 2]);
	}
}

int get(int v, int tl, int tr, int l, int r, int x)
{
	if(l > r)
	{
		return 0;
	} else if(tl == tr)
	{
		if(t[v] % x == 0)
		{
			return 0;
		} else
		{
			return 1;
		}
	} else if(tl == l && tr == r)
	{
		if(t[v] % x == 0)
		{
			return 0;
		} else
		{
			int tm = (tl + tr) / 2;
			if(t[2 * v + 1] % x == 0)
			{
				return get(2 * v + 2, tm + 1, tr, max(tm + 1, l), r, x);
			} else if(t[2 * v + 2] % x == 0)
			{
				return get(2 * v + 1, tl, tm, l, min(tm, r), x);
			} else
			{
				return 2;
			}
		}
	} else
	{
		int tm = (tl + tr) / 2;
		return get(2 * v + 1, tl, tm, l, min(tm, r), x) + get(2 * v + 2, tm + 1, tr, max(tm + 1, l), r, x);
	}
}

int main (int argc, char *argv[])
{
	scanf("%d", &n);
	t.resize(4 * n, 0);
	for(int i = 0; i < n; ++i)
	{
		int a;
		scanf("%d", &a);
		update(0, 0, n - 1, i, a);
	}
	int q;
	scanf("%d", &q);
	while(q--)
	{
		int type;
		scanf("%d", &type);
		if(type == 1)
		{
			int l, r, x;
			scanf("%d%d%d", &l, &r, &x);
			--l; --r;
			if(get(0, 0, n - 1, l, r, x) > 1)
			{
				printf("NO\n");
			} else
			{
				printf("YES\n");
			}
		} else
		{
			int i, y;
			scanf("%d%d", &i, &y);
			--i;
			update(0, 0, n - 1, i, y);
		}
	}

	return 0;
}

