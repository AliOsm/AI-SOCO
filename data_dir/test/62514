#include <bits/stdc++.h>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
#define MOD 1000000007
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const long double PI = 3.141592653589793238462643383279502884197;

ll fac[1] = {1}, inv[1] = {1};
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
ll mp(ll a,ll b){ll ret=1;while(b){if(b&1)ret=ret*a%MOD;a=a*a%MOD;b>>=1;}return ret;}
ll cmb(ll r, ll c) {return fac[r] * inv[c] % MOD * inv[r - c] % MOD;}

priority_queue<int, vector<int>, greater<int>> pq;
vector<int> v;

int dp[1<<24];
int nn;
int vec[24];
int kk[2];

int main() {
    int n, k, ne;
    scanf("%d", &n);
    nn = 1 << n;
    for (int i = 0; i < n; i++) scanf("%d", &vec[i]);
    scanf("%d", &k);
    kk[0] = kk[1] = -1;
    for (int i = 0; i < k; i++) scanf("%d", &kk[i]);

    ll sum;
    dp[0] = 1;

    for (int i = 0; i < nn; i++) {
        sum = 0;

        for (int j = 0; j < n; j++) sum += vec[j] * !!(i & (1 << j));
        dp[i] *= (sum!=kk[0]) * (sum!=kk[1]);

        for (int j = 0; j < n; j++) {
            ne = i|(1<<j);
            dp[ne] += dp[i] * (i != ne);
            dp[ne] -= (dp[ne] >= MOD) * MOD;
        }
    }
    printf("%d\n", dp[nn - 1]);
}