#include <bits/stdc++.h>
#define pb push_back
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)
using namespace std;

typedef vector<int> vi;
typedef long long ll;

int di[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dj[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};


const int N = 1e5 + 5;
deque<int> f , s;

int main(){
    int n , m;
    scanf("%d%d",&n,&m);

    int cnt = 0, x;
    for(int i = 0 ;i < n ;i++){
        scanf("%d",&x);
        f.pb(x);
    }

    for(int j = 0 ;j < m ;j++){
        scanf("%d",&x);
        s.pb(x);
    }

    while(f.size() && s.size()){
        if(f.front() == s.front()){
            cnt++;
            f.pop_front();
            s.pop_front();
            continue;
        }

        int s1 = f.front() , s2 = s.front();
        if(s1 < s2){
            f.pop_front();
            f.front() += s1;
        }else{
            s.pop_front();
            s.front() += s2;
        }
    }
    printf("%d",cnt);
}
