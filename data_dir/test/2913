#include "bits/stdc++.h"
using namespace std;
#ifdef ONLINE_JUDGE
#define trace(...)
#endif

using LL = long long;
using PII = pair<int, int>;
const int N = 1001;
int grid[N][N];
int rowr[N][N], colr[N][N];
int rowsz[N], colsz[N];

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	int n, m; cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> grid[i][j];
		}
	}

	for (int i = 0; i < n; i++) {
		vector<PII> vec(m);
		for (int j = 0; j < m; j++) {
			vec[j].first = grid[i][j];
			vec[j].second = j;
		}
		sort(vec.begin(), vec.end());
		rowsz[i] = 0;
		for (int jj = 0, r = -1, prev = 0; jj < m; jj++) {
			int j = vec[jj].second;
			if (vec[jj].first > prev) {
				prev = vec[jj].first;
				r++;
				rowsz[i]++;
			}
			rowr[i][j] = r;
		}
	}

	for (int j = 0; j < m; j++) {
		vector<PII> vec(n);
		for (int i = 0; i < n; i++) {
			vec[i].first = grid[i][j];
			vec[i].second = i;
		}
		sort(vec.begin(), vec.end());
		colsz[j] = 0;
		for (int ii = 0, r = -1, prev = 0; ii < n; ii++) {
			int i = vec[ii].second;
			if (vec[ii].first > prev) {
				prev = vec[ii].first;
				r++;
				colsz[j]++;
			}
			colr[i][j] = r;
		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int rank = max(rowr[i][j], colr[i][j]);
			int extra = max(rowsz[i] - rowr[i][j], colsz[j] - colr[i][j]);
			cout << (rank + extra) << ' ';
		}
		cout << '\n';
	}

	return 0;
}
