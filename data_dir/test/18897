/**
 * @author khokharnikunj8
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CNEKOsMazeGame {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n;
        int q;
        in >> n >> q;
        vector<int> countExact(n + 5);
        vector<int> countLess(n + 5);
        vector<int> countMore(n + 5);
        int E = 0, L = 0, M = 0;
        vector<vector<bool>> grid(2, vector<bool>(n + 1, false));
        for (int i = 0; i < q; i++) {
            int ri, ci;
            in >> ri >> ci;
            ri--;
            if (grid[ri][ci]) {
                grid[ri][ci] = false;
                if (ri == 0) {
                    countExact[ci]--;
                    if (countExact[ci] == 1) E--;
                    countMore[ci]--;
                    if (countMore[ci] == 1) M--;
                    countLess[ci]--;
                    if (countLess[ci] == 1) L--;
                } else {
                    countExact[ci]--;
                    if (countExact[ci] == 1) E--;
                    countMore[ci + 1]--;
                    if (countMore[ci + 1] == 1) M--;
                    countLess[ci - 1]--;
                    if (countLess[ci - 1] == 1) L--;
                }
            } else {
                grid[ri][ci] = true;
                if (ri == 0) {
                    countExact[ci]++;
                    if (countExact[ci] == 2) E++;
                    countMore[ci]++;
                    if (countMore[ci] == 2) M++;
                    countLess[ci]++;
                    if (countLess[ci] == 2) L++;
                } else {
                    countExact[ci]++;
                    if (countExact[ci] == 2) E++;
                    countMore[ci + 1]++;
                    if (countMore[ci + 1] == 2) M++;
                    countLess[ci - 1]++;
                    if (countLess[ci - 1] == 2) L++;
                }
            }
            if (!E && !L && !M) {
                out << "Yes" << "\n";
            } else {
                out << "No" << "\n";
            }
        }

    }
};


int main() {
    CNEKOsMazeGame solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
