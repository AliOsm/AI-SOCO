//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >
const int maxn=(int)(1e5+5);
const ll mod=(ll)(1e9+7);
int mu[maxn];
bool pr[maxn];
vector<int> divs[maxn];

int add(int a,int b)
{
    int ret=a+b;

    if(ret>=mod)
    {
        ret-=mod;
    }

    return ret;
}

int sub(int a,int b)
{
    int ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return ret;
}

int mul(ll a,ll b)
{
    return (a*b)%mod;
}

int poww(int a,int b)
{
    int x=1,y=a;

    while(b>0)
    {
        if(b%2==1)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return x;
}

void build()
{
    fill(mu,mu+maxn,mod-1);

    mu[1]=0;fill(pr,pr+maxn,true);

    for(int i=2;i<maxn;i++)
    {
        ll now=i*1ll*i;

        if(pr[i])
        {
            for(int j=i;j<maxn;j+=i)
            {
                mu[j]=mul(mu[j],mod-1);

                if(j%now==0)
                {
                    mu[j]=0;
                }

                pr[j]=false;
            }
        }
    }

    for(int i=2;i<maxn;i++)
    {
        if(mu[i]!=0)
        {
            for(int j=i;j<maxn;j+=i)
            {
                divs[j].pb(i);
            }
        }
    }
}

int get1(int x)
{
    int now=sub(1,x);now=mul(now,now);

    now=poww(now,mod-2);

    int ret=mul(x,now);

    return ret;
}

int get2(int x)
{
    int now=sub(1,x);now=poww(now,mod-2);

    int ret=mul(x,now);

    return ret;

}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);

    build();

    int m;cin>>m;

    vector<int> f(m+1);int invv=poww(m,mod-2);

    for(int i=2;i<=m;i++)
    {
        int zz=m/i;

        int prob=mul(zz,invv),now1=get1(prob),now2=get2(prob);

        f[i]=add(now1,now2);
    }

    for(int i=m;i>=1;i--)
    {
        for(int j=i+i;j<=m;j+=i)
        {
            f[i]=sub(f[i],f[j]);
        }
    }

    vector<int> co(m+1);int ret=0;

    for(int i=2;i<=m;i++)
    {
        for(int x:divs[i])
        {
            co[i]=add(co[i],mul(mu[x],m/x));
        }

        co[i]=sub(m,co[i]);

     //   cout<<i<<" "<<co[i]<<endl;

        int last_prob=mul(co[i],invv);

        ret=add(ret,mul(f[i],last_prob));
    }

    ret=add(ret,invv);

    cout<<ret<<endl;

    return 0;
}
