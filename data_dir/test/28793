using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define sl "%lld"
#define sll "%lld\n"
#define sls "%lld "
#define pr pair<ll,ll>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define sz(c) ((ll)c.size())
#define READ(f) freopen(f,"r",stdin)
#define WRITE(f) freopen(f,"w",stdout)
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define __rep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)
#define ford(i,a,b) for(int i=a;i<=b;i++)
#define __ford(i,a,b) for(int i=a;i>=b;i--)

const ll MAXN=1e5+5;
vector <ll> adj[MAXN];
ll a[MAXN],leaf[MAXN],d[MAXN];
ll m,n,ans=0;

inline void DFS(ll u,ll f)
{
    leaf[u]=true;
    rep(adj[u],it)
    {
        ll v=*it;
        if(v!=f)
        {
            leaf[u]=false;
            if(a[v])d[v]=d[u]+1;
            DFS(v,u);
        }
    }
}

inline void DFS(ll u,ll f,ll id)
{
    rep(adj[u],it)
    {
        ll v=*it;
        if(v!=f)
        {
            d[v]=max(d[v],d[u]);
            DFS(v,u,id);
        }
    }
}

main(void)
{
    scanf(sl sl,&n,&m);
    for(int i=1; i<=n; i++)scanf(sl,&a[i]);
    for(int i=1; i<n; i++)
    {
        ll u,v;
        scanf(sl sl,&u,&v);
        adj[u].pb(v);
        adj[v].pb(u);
    }
    d[1]=a[1];
    DFS(1,1);
    DFS(1,1,1);
    for(int i=2; i<=n; i++)
        if(leaf[i])ans+=(d[i] <= m);
    printf(sl,ans);
}
