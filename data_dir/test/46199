#include <cstdio>
#include <vector>

#define USED 1
#define UNUSED 0

using namespace std;

int main() 
{
	int target_sum, no_of_children, minimum_edge;
	scanf("%d %d %d", &target_sum, &no_of_children, &minimum_edge);
	
	const int MOD = 1e9 + 7;
	
	typedef vector <long long> v_long;
	vector <v_long> no_of_ways(target_sum + 1, v_long(2, 0));
	
	no_of_ways[0][UNUSED] = 1;
	no_of_ways[1][USED] = 0;
	
	for(int sum = 1; sum <= target_sum; sum++)
	{
		no_of_ways[sum][USED] = no_of_ways[sum][UNUSED] = 0;
		
		for(int edge = 1; edge <= min(no_of_children, sum); edge++)
		{
			if(edge < minimum_edge)
			{
				no_of_ways[sum][UNUSED] += no_of_ways[sum - edge][UNUSED];
				no_of_ways[sum][USED] += no_of_ways[sum - edge][USED];
			}
			else
			{
				no_of_ways[sum][USED] += no_of_ways[sum - edge][USED] + no_of_ways[sum - edge][UNUSED];
			}
			
			no_of_ways[sum][USED] %= MOD;
			no_of_ways[sum][UNUSED] %= MOD;
		}
	}
	
	printf("%I64d\n", no_of_ways[target_sum][USED]);
	return 0;
}