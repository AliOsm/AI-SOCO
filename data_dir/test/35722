#include <bits/stdc++.h>
#define ll long long
using namespace std;

const int N=1e6+6;

ll n,x,j,ans=-1,tot,a[N];
unordered_map < ll , int > f;
unordered_map < ll , bool > usd;
vector < ll > Divisors;

main () {
	srand(time(NULL));
	ios::sync_with_stdio(false);
	cin.tie(NULL),cout.tie(NULL);
	cin>>n;
	for (int i=0; i<n; i++) {
		cin>>a[i];
		int j=rand()%(i+1);
		swap(a[i],a[j]);
	}
	
	int Try=10;
	for (int i=0; i<n; i++) {
		x=a[i];
		if (!usd[x] && Try) {
			usd[x]=1;
			--Try;
			
			Divisors.clear();
			
			for (j=1; j<=sqrt(x); j++) {
				if (x%j==0) {
					Divisors.push_back(j);
					Divisors.push_back(x/j);
				}
			}
			
			sort(Divisors.begin(),Divisors.end());
			Divisors.erase(unique(Divisors.begin(),Divisors.end()),Divisors.end());
			f.clear();			
			
			for (j=0; j<n; j++) {
				f[__gcd(a[j],x)]++;
			}

			for (j=Divisors.size()-1; j>=0; j--) {
				if (Divisors[j]<ans) break;
				tot=0;
				for (int k=j; k<Divisors.size(); k++) {
					if (Divisors[k]%Divisors[j]==0) tot+=f[Divisors[k]];
				}
				if (2*tot>=n) {
					ans=Divisors[j];
					break;
				}
			}
		}
	}
	
	cout<<ans<<endl;
}