#include<bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int> >
#define mp make_pair
const int INF = 1e9+7;
const int MAXN = 1e5 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;
string s;
long long dp[MAXN];
long long ans;
void solve(){

	cin>>s;
	for (int i=0; i<s.length(); i++) if (s[i] =='m' || s[i] =='w'){
		cout<<0<<endl;
		return;
	}
	dp[1] = 1;
	dp[2] = 2;
	
	for (int i=3; i<=s.length(); i++) {
		dp[i] = dp[i-1] + dp[i-2];
		dp[i]%=INF;
	}
	int l = 0;
	ans = 1;
	while (true){
		if (s[l] == 'u' || s[l] == 'n'){
			int r = l;
			int kol = 0;
			
			while (true){
				if (s[l] != s[r]) break;
				if (r>=s.length()) break;
				r++;
 			}
 			if (r == s.length()) r--;
			if (s[l]!=s[r]) r--;
			kol = r - l + 1;
			ans*=dp[kol];
			ans%=INF;
			l = r;
		}
		l++;
		if (l >= s.length()) break;
	}
	cout<<ans<<endl;
}

	
int main() {
    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
    cout.setf(ios::fixed), cout.precision(20);
//  freopen("inverse.in", "r", stdin);
//  freopen("inverse.out", "w", stdout);
    int t;
	t = 1;    
	while (t > 0){
        t--;
        solve();
    }
    return 0;
}