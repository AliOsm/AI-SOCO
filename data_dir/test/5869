#include <iostream>
#include <vector>

using namespace std;

vector<pair<int,int> > sol;

void solve(vector<int> d)
{
  /*
  cout<<"solve"<<endl;
  for (int i=0;i<int(d.size());i++)
    cout<<d[i]<<",";
  cout<<endl;
  */
  if (int(d.size())==0) return;
  int k=int(d.size());
  int n=d.back()+1;
  if (int(d.size())==1) {
    for (int i=1;i<=n;i++)
      for (int j=i+1;j<=n;j++)
	sol.push_back(pair<int,int> (i,j));
    return;
  }
  int d1=d[0];
  int dk=d.back();
  int dk1=d[int(d.size())-2];
  int n1=dk-dk1;
  vector<int> nextd;
  int quedan=n-(n1+d1);
  //cout<<"d1 "<<d1<<" dk "<<dk<<" dk1 "<<dk1<<" n1 "<<n1<<" quedan "<<quedan<<endl;
  for (int i=1;i<k-1;i++)
    nextd.push_back(d[i]-d1);
  for (int i=1;i<=d1;i++)
    for (int j=i+1;j<=d1;j++)
      sol.push_back(pair<int,int> (quedan+n1+i,quedan+n1+j));
  for (int i=1;i<=n1;i++)
    for (int j=1;j<=d1;j++)
      sol.push_back(pair<int,int> (quedan+i,quedan+n1+j));
  for (int i=1;i<=quedan;i++)
    for (int j=1;j<=d1;j++)
      sol.push_back(pair<int,int> (i,quedan+n1+j));
  solve(nextd);
}

int main()
{
  int k;
  cin>>k;
  vector<int> v(k);
  for (int i=0;i<k;i++)
    cin>>v[i];
  solve(v);
  cout<<int(sol.size())<<endl;
  for (int i=0;i<int(sol.size());i++)
    cout<<sol[i].first<<" "<<sol[i].second<<endl;
}
