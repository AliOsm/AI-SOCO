#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include <functional>
#include <iomanip>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <hash_set>
#include <hash_map>
#include <algorithm>
#include <memory>

//#define NDEBUG
#include <cassert>

#define FILE_READER assert(freopen("input.txt", "r", stdin)); assert(freopen("output.txt", "w", stdout));
#define FAST_READER ios::sync_with_stdio(false); cin.tie(nullptr);
#define all_(v) (v).begin(), (v).end()
#define for_(i, a, b) for (int i = (a); i < (int)(b); i++)
#define ford_(i, a, b) for (int i = (a); i > (int)(b); i--)
#define foreach_(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
#define sz_(v) ((int)(v).size())
#define mp_ make_pair
#define pb_ push_back
typedef long long LL_;
typedef long double LD_;
template<class T> T sqr_(T a) {return a * a;}
template<class T> T abs_(T a) {return a > 0 ? a : -a;}
template<class T> T sgn_(T a) {return a > 0 ? 1 : (a < 0 ? -1 : 0);}

using namespace std;

#define xx first
#define yy second

pair<int, int> v[10];
const int n = 8;
    
int cnt(int msk) {
    int ret = 0;
    for(;msk;++ret,msk&=(msk-1));
    return ret;
}

pair<int, int> v1[10], v2[10];
int p1[10],p2[10];

int sqr(int a) {
    return a * a;
}

int dist(const pair<int, int>& a, const pair<int, int>& b) {
    return sqr(a.xx - b.xx) + sqr(a.yy - b.yy);
}

int scal(const pair<int, int>& a1, const pair<int, int>& a2, const pair<int, int>& b1, const pair<int, int>& b2){
    return (a2.xx - a1.xx) * (b2.xx - b1.xx) + (a2.yy - a1.yy) * (b2.yy - b1.yy);
}

int main() {

//#ifndef ONLINE_JUDGE 
    //FILE_READER 
//#endif    
    //assert(freopen("input.txt", "r", stdin)); assert(freopen("output.txt", "w", stdout));

    FAST_READER;
    
    for(int i = 0; i < n; ++i) {
        cin >> v[i].xx >> v[i].yy;
    }

    bool rect1, rect2, sqr1;
    for(int msk = 0; msk<(1<<n);++msk){
        if (cnt(msk)!=4) continue;
        for(int i = 0,j1=0,j2=0; i < n; ++i) {
            if (((msk>>i)&1)==1) {
                p1[j1]=j1;
                v1[j1++]=v[i];
            }else{
                p2[j2]=j2;
                v2[j2++]=v[i];
            }
        }

        rect1 = rect2 = sqr1 = false;

        do {
            rect1=true;
            p1[4]=p1[0];
            p1[5]=p1[1];
            for(int i = 0; i < 4; ++i) {
                if(scal(v1[p1[i]],v1[p1[i+1]],v1[p1[i+1]],v1[p1[i+2]])!=0){
                    rect1=false;
                    break;
                }   
            }
            sqr1=true;
            for(int i = 0; i < 4; ++i){
                if(dist(v1[p1[i]],v1[p1[i+1]])!=dist(v1[p1[i+1]],v1[p1[i+2]])){
                    sqr1=false;
                    break;
                }
            }
            if (rect1 && sqr1) break;
        }while(next_permutation(p1, p1+4));
        
        do{
            rect2=true;
            p2[4]=p2[0];
            p2[5]=p2[1];
            for(int i = 0; i < 4; ++i) {
                if (scal(v2[p2[i]],v2[p2[i+1]],v2[p2[i+1]],v2[p2[i+2]])!=0) {
                    rect2=false;
                    break;
                }
            }
            if (rect2) break;
        } while(next_permutation(p2,p2+4));

        if (rect1 && rect2 && sqr1) {
            cout << "YES" << endl;
            for(int i = 0; i < n; ++i){
                if(((msk>>i)&1)==1) {
                    cout << i + 1 << " ";   
                } 
            }
            cout << endl;
            for(int i = 0; i < n; ++i){
                if(((msk>>i)&1)==0) {
                    cout << i + 1 << " ";   
                } 
            }
            return 0;
        }
    }

    cout << "NO";

    return 0;
}

//#include <string.h>
//#include <stdio.h>
//
//char *f()
//{
//        char s[256];
//        strcpy(s, "Hello World!");
//        return s;
//}
//
//int main()
//{
//        printf("%s\n", f());
//        fflush(stdout);
//        return 0;
//}