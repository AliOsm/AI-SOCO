#include <bits/stdc++.h>
#ifndef M_PI
#define M_PI 3.14159265358979323846264338327
#endif // M_PI
#define endl "\n"
#define S struct
#define X first
#define Y second
#define V vector
#ifndef __linux__
#define LLD "%I64d"
#else
#define LLD "%ll""d"
#endif
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define GET(a, n) for (int __i = 0; __i < (n); ++__i) cin >> a[__i];
#define GETM(a, n, m) for (int __i = 0; __i < (n); ++__i) for (int __j = 0; __j < m; ++__j) cin >> a[__i][__j];
#define PRINTM(a, n, m) for (int __i = 0; __i < (n); ++__i) { for (int __j = 0; __j < m; ++__j) cout << a[__i][__j] << " ";  cout << endl; };
#define PRINT(a, n) for (int __i = 0; __i < (n); ++__i) cout << a[__i] << " ";
#define IT(a) a.begin(), a.end()
#define SQR(x) (x) * (x)
#define CASE(a, s) cout << "Case #" << a << ": " << s << endl;
#define DEB(a) cout << #a << " = " << (a) << endl; cout.flush();
#define DEBA(a) for (auto __i: a) cout << __i << " "; cout << endl; cout.flush();
#define IFDEB(b, a) if (b) { cout << #a << " = " << (a) << endl; cout.flush(); }
using namespace std;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair <int, int> PII;
typedef pair <LL, LL> PLL;
const int MOD = 1000000007;
void sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); }
S Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;
S FAIL { FAIL () { cout << "CHANGE!!!" << endl;}};

vector <vector <int>> g;
vector <double> ans;
vector <int> used;
vector <int> d;

int dfs0(int x)
{
    used[x] = 1;
    LL res = 1;
    for (auto i: g[x]) {
        if (used[i]) {
           continue;
        }
        res += dfs0(i);
    }
    return d[x] = res;
}

void dfs(int x, double t = 1.0)
{
    used[x] = 1;
    LL res = 0;
    int cnt = 0;
    for (auto i: g[x]) {
        if (used[i]) {
            continue;
        }
        res += d[i];
        ++cnt;
    }
    for (auto i: g[x]) {
        if (used[i]) {
            continue;
        }
        ans[i] = t + 1 + (res - d[i]) / 2.0;
    }
    for (auto i: g[x]) {
        if (used[i]) {
            continue;
        }
        dfs(i, ans[i]);
    }
}

int main()
{
    int n;
    scanf("%d", &n);
    g.resize(n);
    ans.resize(n);
    d.resize(n);
    FOR (i, 1, n) {
        int x;
        scanf("%d", &x);
        --x;
        g[x].push_back(i);
        g[i].push_back(x);
    }
    used.assign(n, 0);
    dfs0(0);
    used.assign(n, 0);
    dfs(0);
    ans[0] = 1.0;
    for (auto i: ans) {
        printf("%.10f ", i);
    }
}
