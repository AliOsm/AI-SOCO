#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

const int MX = 4010;
int n, g, a[MX][MX], cost[MX][MX];
int dp[MX][MX];
char buf[2 * MX];

inline void rec(int g, int l, int r, int kl, int kr){
	if(kl + 1 == kr){
		for(int i = l; i < r; i++) dp[g][i] = dp[g - 1][kl] + cost[kl][i];
		return;
	}
	int m = (l + r) / 2, k;
	dp[g][m] = inf;
	for(int i = kl; i < kr && i < m; i++) if(dp[g][m] > dp[g - 1][i] + cost[i][m]){
		k = i;
		dp[g][m] = dp[g - 1][i] + cost[i][m];
	}
	if(l + 1 == r) return;
	/*
	if(g == 2){
		dbg(dp[g][m]);
		cerr<<"l: "<<l<<" r: "<<r<<" k: "<<k<<endl;
		cerr<<"kl: "<<kl<<" kr: "<<kr<<endl;
	}
	*/
	rec(g, l, m, kl, k + 1);
	rec(g, m, r, k, kr);
}

int main(){
	scanf("%d%d", &n, &g);
	gets(buf);
	rep(i, n){
		gets(buf);
		rep(j, n) a[i][j + 1] += a[i][j] + buf[2 * j] - '0';
	}
	rep(i, n) for(int j = i + 1; j <= n; j++) cost[i][j] = cost[i][j - 1] + a[j - 1][j] - a[j - 1][i];
	
	rep(i, n + 1) dp[1][i] = cost[0][i];
	rep(i, g - 1) rec(i + 2, 0, n + 1, 0, n);
	cout << dp[g][n] << endl;
	
	return 0;
}
