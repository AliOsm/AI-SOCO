#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair
#define pii pair<int,int>
#define pll pair<LL,LL>


#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,b) for(int i=0;i<b;i++)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())


#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);
#ifdef VAMP
     #define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template < typename Arg1 >
    void __f(const char* name, Arg1&& arg1){
        cout << name << " = " << arg1 << std::endl;
    }
    template < typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names+1, ',');
        cout.write(names, comma - names) << " = " << arg1 <<" | ";
        __f(comma+1, args...);
    }
#else
    #define debug(...)
#endif
const int N = 35000000;
const LL MOD = 998244353;

bool stat[N+5];
vector<LL>primes;
void siv()
{
    LL sq = sqrt(N);for(LL i =4;i<=N;i+=2)stat[i]=1;
    for(LL i=3;i<=sq;i+=2)if(!stat[i])for(LL j=i*i;j<=N;j+=2*i)stat[j]=1;
    FOR(i,2,N)if(!stat[i])primes.pb(i);
    stat[1] = 1;
}

LL D , Q;
vector<LL>PF;

map<LL,LL>dp;
LL calc(LL u)
{
    if(u == 1)return 1;
    if(dp.find(u) != dp.end())return dp[u];
    LL ret = 0;
    for(LL i : PF){
        if(u % i == 0){
            ret += calc(u/i);
        }
    }
    return dp[u] = ret % MOD;
}
int main()
{
    #ifdef VAMP
        clock_t tStart = clock();
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    siv();
    FastRead
    cin >> D;
    LL sq = sqrt(D);
    LL TEMP = D;
    for(LL i = 0;i < primes.size() and primes[i] <= TEMP;i++){
        if(TEMP % primes[i] == 0){
            PF.push_back(primes[i]);
            while(TEMP % primes[i] == 0)TEMP/=primes[i];
        }
    }
    if(TEMP > 1)PF.push_back(TEMP);

    cin >> Q;
    while(Q--){
        LL U , V;
        cin >> U >> V;
        LL G = __gcd(V,U);

        LL ans = calc(U/G) * calc(V/G);
        cout << (ans % MOD) << "\n";
    }
    #ifdef VAMP
        fprintf(stderr, "\n>> Runtime: %.10fs\n", (double) (clock() - tStart) / CLOCKS_PER_SEC);
    #endif
}
