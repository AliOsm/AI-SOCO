#include <bits/stdc++.h>
#define int long long
using namespace std;
const int N = 2123456;
const int mod = 1e9 + 7;
const int inf = 1e9 + 7;

int read(){
    int x;
    scanf("%I64d", &x);
    return x;
}
int bin(int n, int m) {
    int res = 1;
    while(m > 0) {
        if(m % 2 == 0) {
            m /= 2;
            n *= n;
            n %= mod;
        }
        else {
            m --;
            res *= n;
            res %= mod;
        }
    }
    return res;
}

struct abc{
    int x, y;
};
bool cmp(abc a, abc b) {
    return (a.x * a.x + a.y * a.y) < (b.x * b.x + b.y * b.y);
}
abc a[N];
main()
{
    int n, m = 10100, i, j;
    cin >> n;
    for(i = 1; i <= n; i ++) {
          a[i].x = read();
          a[i].y = read();
    }
    sort(a + 1, a + n + 1, cmp);
    vector <pair <int, pair <int, char> > > ans;
    for(i = 1; i <= n; i ++) {
        if(a[i].x != 0) {
            ans.push_back(make_pair(1, make_pair(a[i].x, a[i].x > 0 ? 'R' : 'L')));
        }
        if(a[i].y != 0) {
            ans.push_back(make_pair(1, make_pair(a[i].y, a[i].y > 0 ? 'U' : 'D')));
        }
        ans.push_back(make_pair(2, make_pair(a[i].y, a[i].y > 0 ? 'U' : 'D')));
        if(a[i].x != 0) {
            ans.push_back(make_pair(1, make_pair(a[i].x, a[i].x > 0 ? 'L' : 'R')));
        }
        if(a[i].y != 0) {
            ans.push_back(make_pair(1, make_pair(a[i].y, a[i].y > 0 ? 'D' : 'U')));
        }
        ans.push_back(make_pair(3, make_pair(a[i].y, a[i].y > 0 ? 'U' : 'D')));
    }
    cout << ans.size() << endl;
    for(i = 0; i < ans.size(); i ++) {
        if(ans[i].first != 1)
            printf("%I64d\n", ans[i].first);
        else
            printf("%I64d %I64d %c\n", 1ll, abs(ans[i].second.first), ans[i].second.second);
    }
}

