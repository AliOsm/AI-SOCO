#include <bits/stdc++.h>
#include <stdio.h>
#include <cstdio>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
 
#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)
#define dbg(x) cerr << (#x) << " --> " << (x) << nxtl;
#define onlycin ios_base::sync_with_stdio(false); cin.tie(0) 
using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;
typedef double ld;
typedef tree<
pair < int, int >,
null_type,
less< pair < int, int > >,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
const int MAXN = (int)5e5+228;
const char nxtl = '\n';
const int mod = (int)1e9+7;
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int n, go[MAXN], pos[MAXN];
int used[111];

inline ll lcm(ll x, ll y) {
	return x*y/__gcd(x,y);
}

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	onlycin;
	cin >> n;
	rep(i,1,n) cin >> go[i];
	ll res = -1;
	rep(len1,1,1) {
		bool ok = 1;
		memset(used,0,sizeof used);
		rep(i,1,n) {
			int cur = i;
			int len = 0;
			while(used[cur] != i) {
				used[cur] = i;
				len++;
				cur = go[cur];
			}
			if(cur != i) {
				cout << -1;
				return 0;
			}
			if(!len) len = 1;
			if(len % 2 == 0) len /= 2;
			if(res == -1) res = len;
			else res = lcm(res, len);
			
		}
	}
	cout << res << nxtl;
	
	return 0;
}