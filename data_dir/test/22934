/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 2e5 + 5;
unordered_map<int, int> mp[N];
vector<int> adj[N];
int n, a[N], dp[N];

void dfs(int u, int par, int h) {
	if (a[u] > 1)
		mp[u][a[u]] = h;
	else
		dp[u] = -1;
	for (auto v: adj[u])
		if (v ^ par) {
			dfs(v, u, h + 1);
			dp[u] = max(dp[u], dp[v]);
			for (auto x: mp[v]) {
				int k = __gcd(x.first, a[u]);
				if (k > 1)
					for (auto y: mp[u])
						if (__gcd(k, y.first) > 1)
							dp[u] = max(dp[u], x.second + y.second - 2 * h);
			}
			for (auto x: mp[v]) {
				int k = __gcd(x.first, a[u]);
				if (k > 1)
					mp[u][k] = max(mp[u][k], x.second);
			}
			mp[v].clear();
		}
}

inline void readInput() {
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 1; i < n; i++) {
		int u, v;
		cin >> u >> v;

		u--, v--;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
}

inline void solve() {
	dfs(0, 0, 0);
	cout << dp[0] + 1 << endl;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	readInput(), solve();
	return 0;
}
