#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <algorithm>
#include <cmath>
#include <queue>
#include <iterator>
#include <functional>
#include <numeric>
#include <cmath>
#include <stack>
#include <limits>

using namespace std;

#define ll long long
#define f0(i,n)for(i=0;i<n;i++)
#define f1(i,n)for(i=1;i<=n;i++)
#define fc(i,c,n)for(i=c;i<=n;i++)
#define f0r(i,n)for(i=n-1;i>=0;i--)
#define f1r(i,n)for(i=n;i>0;i--)
#define fcr(i,c,n)for(i=n;i>=c;i--)
#define IO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

typedef list<ll> LST;
typedef vector<ll> VEC;
typedef map<ll, ll> MAP;

long long i, j, q;

int main() {
	IO;
	ifstream fin("Text.txt");
	ll n, m, k, x;
	cin >> n >> m >> k;
	map<ll,ll>mp;
	VEC vc(n);
	vector<pair<ll, ll> > vcs(n);
	ll ans = 0;
	f0(i, n) {
		cin >> vc[i];
		ans += vc[i];
		vcs[i] = make_pair(vc[i],i + 1);
	}
	sort(vcs.begin(), vcs.end());
	ll cnt = n - k*m;
	f0(i, cnt) {
		mp[vcs[i].second] = 1;
		ans -= vcs[i].first;
	}
	VEC ansv(k);
	ll cur = 0; ll tmp = 0;
	f0(i, n) {
		if (!mp[i + 1]) {
			tmp++;
			if (tmp == m) {
				ansv[cur] = i + 1;
				tmp = 0;
				cur++;
			}
		}
	}
	cout << ans << endl;
	f0(i, k - 1)
		cout << ansv[i] << " ";
	return 0;
}