#include <bits/stdc++.h>
#define ld long double
#define ll long long int
#define mod 1000000007
#define ll_inf 1000000000000000
#define int_inf 1000000000
#define pb push_back
#define endl '\n'
#define Endl '\n'
#define eps 1e-9
#define PI acos(-1.0)
#define ii pair<int,int>
#define se second
#define fi first
using namespace std;
ll tree[3000010], lazy[3000010];
ll qst, qend, delta=1;
void update(int pos, int l, int r){
    if(lazy[pos]!=0){
        tree[pos] += (r-l+1)*lazy[pos];
        if(l!=r){
            lazy[2*pos]+=lazy[pos];
            lazy[2*pos+1]+=lazy[pos];
        }
        lazy[pos]=0;
    }
    if(l>qend || r<qst)return;  // out of range
    if(qst<=l && qend>=r){ // total
        tree[pos]+=(r-l+1)*delta;
          if (l != r){
            lazy[pos*2]+= delta;
            lazy[pos*2+1]+= delta;
        }
        return;
    }
    int mid=(r+l)/2;
    update(2*pos,l, mid);
    update(2*pos+1,mid+1, r);
    tree[pos]=tree[2*pos]+tree[2*pos+1];
}
int quer(int pos, int l, int r){
    if(lazy[pos]!=0){
        tree[pos]+=(r-l+1)*lazy[pos];
        if (l != r){
            lazy[pos*2]+= lazy[pos];
            lazy[pos*2+1]+= lazy[pos];
        }
        lazy[pos]=0;
    }
    if(l>qend || r<qst)return 0;   // out
    if(qst<=l && qend>=r)return tree[pos]; // total
    int mid=(l+r)/2;
    return quer(2*pos, l, mid)+quer(2*pos+1,mid+1,r);
}
ll ans[1000010];
int main(){
    int n,k;
    //cout<<"sadsd "; return 0;
    cin>>n>>k;
    k=min(k,n-k);
    memset(tree,0,sizeof tree);
    memset(lazy,0,sizeof lazy);
    ll x=1; int f=1;
    ans[0]=1;
    int z=k-1;
    while(f<=n){
        int nx;
        if(x+k<=n)nx=x+k;
        else nx=x+k-n;
        int qs,qe;
        int sum=0;
        if(x>=k){
            qst=x-z; qend=x; sum+=quer(1,1,n);
        }
        else {
            qst=1; qend=x; sum+=quer(1,1,n);
            //if(x==8)cout<<"st "<<qst<<" "<<qend<<endl;
            qst=(n-z+x); qend=n; sum+=quer(1,1,n);
            //if(x==8)cout<<"st "<<qst<<" "<<qend<<endl;
        }
        // now i have the back piece
        //if(x==8)cout<<" in twoooooo "<<sum<<Endl;
        if(x+k<=n){
            qst=x; qend=x+z; sum+=quer(1,1,n);
        }
        else{
            qst=x; qend=n;   sum+=quer(1,1,n);
            qst=1; qend=z-n+x; sum+=quer(1,1,n);
        }
        //sum=min(sum,2*z);
        qst=x; qend=x; delta=1; update(1,1,n);
        ans[f]=ans[f-1]+sum+1;
        f++;
        //cout<<"x is    "<<x<<" nx is    "<<nx<<" "<<"sum is     "<<sum<<endl;
        cout<<ans[f-1]<<" ";
        x=nx;
    }
    cout<<endl;
}