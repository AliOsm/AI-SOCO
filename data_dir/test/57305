#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b>a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }
const int N = 1e5+10, M = 2e5+10, Z = 1e9 + 7, ms63 = 0x3f3f3f3f;
int n, m;
int x, y;
int first[N], id;
int w[M], c[M], nxt[M];
void ins(int x, int y)
{
	w[++id] = y;
	nxt[id] = first[x];
	first[x] = id;
}
vector<int>p[2];
bool dfs(int x, int col)
{
	c[x] = col;
	p[col].push_back(x);
	for (int z = first[x]; z; z = nxt[z])
	{
		int y = w[z];
		if (c[y] == -1)
		{
			if (!dfs(y, 1 - col))return 0;
		}
		else if (c[y] == c[x])
		{
			return 0;
		}
	}
	return 1;
}
int main()
{
	while (~scanf("%d%d", &n, &m))
	{
		MS(first, 0); id = 1;
		for (int i = 1; i <= m; ++i)
		{
			scanf("%d%d", &x, &y);
			ins(x, y);
			ins(y, x);
		}
		p[0].clear();
		p[1].clear();
		MS(c, -1);
		bool flag = 1;
		for (int i = 1; i <= n; ++i)if(c[i]==-1)
		{
			if (!dfs(i, 0))
			{
				flag = 0;
				break;
			}
		}
		if (flag)
		{
			for (int t = 0; t < 2; ++t)
			{
				printf("%d\n", p[t].size());
				for (int i = p[t].size() - 1; ~i; --i)printf("%d ", p[t][i]);
				puts("");
			}
		}
		else puts("-1");
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【类型】


【分析】


【时间复杂度&&优化】


【数据】
6 7
1 2
2 3
4 5
5 6
1 4
3 6

*/