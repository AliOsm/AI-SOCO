#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <array>
#include <bitset>
#include <complex>
using namespace std;

#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) (c).begin(), (c).end()

typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;

int in() { int x; scanf("%d", &x); return x; }
ll lin() { ll x; scanf("%lld", &x); return x; }

ll naive(ll n){
    set<ll> st;
    REP(i,n+1) REP(v,n+1-i) REP(x,n+1-i-v){
        int l = n - i - v - x;
        st.insert(i + 5 * v + 10 * x + 50 * l);
    }
    return st.size();
}

int main() {
    ll n;
    cin >> n;
    ll m = 10000, lim = 200;
    VI dp(m), dp2(m);
    dp[0] = dp2[0] = 1;
    REP(i,min(n, lim)){
        FORR(j,m-1,0){
            if (dp[j]){
                for (int x : {4, 9, 49}){
                    if (j + x < m) dp[j + x] = 1;
                }
            }
            if (dp2[j]){
                for (int x : {40, 45, 49}){
                    if (j + x < m) dp2[j + x] = 1;
                }
            }
        }
    }

    ll ans = 0;
    if (n < lim){
        REP(i,m) ans += dp[i];
    }else{
        ans = n * 49 + 1;
        REP(i,1000) ans -= (2 - dp[i] - dp2[i]);
    }
    cout << ans << endl;

    return 0;
}