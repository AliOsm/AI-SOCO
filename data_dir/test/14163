#include <ctype.h>
#include <stdio.h>

#define N	1000000
#define N_	(1 << 20)	/* N_ = pow2(ceil(log2(N))) */

int min(int a, int b) { return a < b ? a : b; }
int max(int a, int b) { return a > b ? a : b; }

int tr_sum[N_ * 2], tr_min[N_ * 2], tr_max[N_ * 2], n_;

void pul(int i) {
	int l = i << 1, r = i << 1 | 1;

	tr_sum[i] = tr_sum[l] + tr_sum[r];
	tr_max[i] = max(tr_max[l], tr_sum[l] + tr_max[r]);
	tr_min[i] = min(tr_min[l], tr_sum[l] + tr_min[r]);
}

void update(int i, int x) {
	i += n_;
	tr_sum[i] = x;
	tr_min[i] = min(x, 0);
	tr_max[i] = max(x, 0);
	while (i > 1)
		pul(i >>= 1);
}

int main() {
	static char cc[N + 1];
	int n, h, i;

	scanf("%d%s", &n, cc);
	n_ = 1;
	while (n_ < n)
		n_ *= 2;
	for (h = 0, i = 0; h < n; h++) {
		char c = cc[h];

		if (c == 'R')
			i++;
		else if (c == 'L') {
			if (i-- == 0)
				i = 0;
		} else
			update(i, islower(c) ? 0 : c == '(' ? 1 : -1);
		printf("%d ", tr_min[1] < 0 || tr_sum[1] ? -1 : tr_max[1]);
	}
	printf("\n");
	return 0;
}
