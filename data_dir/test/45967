#include <bits/stdc++.h>
using namespace std;

set <int> adia[100010];

vector <int> dist1, dist2;
int n;

void get_dist(vector <int> & dist, int x)
{
    dist = vector <int> (n + 1, 0);
    dist[x] = 1;
    queue <int> q;
    q.push(x);

    while (!q.empty()) {
        x = q.front();
        q.pop();
        for (auto i : adia[x]) {
            if (!dist[i]) {
                dist[i] = 1 + dist[x];
                q.push(i);
            }
        }
    }
}

int main()
{
    int m, s, t, a, b;
    cin >> n >> m >> s >> t;

    while (m--) {
        cin >> a >> b;
        adia[a].insert(b);
        adia[b].insert(a);
    }

    get_dist(dist1, s);
    get_dist(dist2, t);

    int d = dist1[t] + 1;
    int ans(0);


    for (int i(1); i <= n; i++) {
        for (int j(i + 1); j <= n; j++) {
            if (adia[i].find(j) == adia[i].end() && dist1[i] + dist2[j] + 1 >= d && dist2[i] + dist1[j] + 1 >= d) {
                ans++;
                //cout << i << ' ' << j << '\n';
            }
        }
    }

    cout << ans << '\n';
    return 0;
}
