#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <valarray>
#include <random>
#include <bitset>
#include <iomanip>


typedef long long tint;
typedef unsigned long long utint;
typedef long double ldouble; 


#define forn(i,n) for(tint i=0;i<(tint)(n); i++)
#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;



void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

const tint maxN = 1024;
const tint INFINITO = 1e15;
tint p[maxN + 1] = {1, 1};

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);

	vector<tint> f (maxN,-INFINITO);
	forsn(i,4,maxN)
		if (i != 5 && i != 7 && i != 11)
		{
			f[i] = 1;	
			forn(j,i)
				f[i] = max(f[i],f[j] + f[i-j]);
		}
	tint q;
	while (cin >> q)
	{
		forn(kk,q)
		{
			tint n;
			cin >> n;
			if (n < maxN)
				cout << max(tint(-1),f[n]) << "\n";
			else
			{
				tint k = (n-997)/4;
				cout << max(tint(-1),k + f[n-4*k]) << "\n";
					
				
			}
		}
	}
	return 0;
}


