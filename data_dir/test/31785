#include <vector>
#include <stdio.h>
#include <string.h>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
typedef long long ll;
typedef long double d;
using namespace std;
//int direcy[]= {0,0,-1,1},direcx[]= {1,-1,0,0};

int main()
{
    //std::cin.tie(0);
    //std::ios::sync_with_stdio(false);
    //freopen("read.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ll n,k,out=0;
    string s;
    cin >> n>>k>>s;
    if(k>s.size()/2)
    {
        k=s.size()-k;
    }
    else
        k--;
    ll st=-1,en=-1;
    for(int i =0; i<s.size()/2; i++)
    {
        if(s[i]!=s[s.size()-1-i]&&st==-1&&i<=k)
            st=i;
        if(s[i]!=s[s.size()-1-i])
        {
            if(s[i]>s[s.size()-1-i])
                swap(s[i],s[s.size()-i-1]);
            if(i>k)
            en=i;
            out+=min(s[s.size()-1-i]-s[i],'z'-s[s.size()-1-i]+s[i]-'a'+1);
        }
    }
    if(st!=-1&&en!=-1)
    {
        cout << out+min((k-st)*2+en-k,(en-k)*2+k-st);
    }
    else if(en==-1&&st!=-1)
    {
        cout << out+k-st<<endl;
    }
    else if(en!=-1&&st==-1)
    {
        cout << out+en-k<<endl;
    }
    else cout << 0<< endl;
    return 0;
}
