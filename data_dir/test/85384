/// #include<POS>
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define F first
#define S second
#define pb push_back
#define mp make_pair
const int MX=1000005;
ll md=1e9+7;
ll N, M;
ll primes[MX], p[MX], sz;
pair<int, int> ch[MX], sorted[MX], arr[MX];
map<int, int> now;
int c;
int BS(int aim)
{
    ll lo=0, hi=sz-1, R, mid;
    while(lo <= hi)
    {
        mid=lo+hi;
        mid/=2;
        if(primes[mid] <= aim)
        {
            R=mid;
            lo=mid+1;
        }
        else hi=mid-1;
    }
    return R;
}
int main()
{
    cin>>N;
    for(int i=0;i<N;i++)
    {
        scanf("%d", &arr[i].F);
        arr[i].S=i;
        sorted[i].F=arr[i].F;
        now[arr[i].F]=i;
    }
    sort(sorted, sorted+N);
    for(int i=0;i<N;i++)
        sorted[i].S=i;
    for(int i=2;i<=MX-2;i++)
    {
        if(p[i]) continue;
        for(int j=i+i;j<MX-2;j+=i)
            p[j]++;
    }
    for(int i=2;i<=MX;i++)
        if(!p[i]) primes[sz++]=i-1;
    for(int i=0;i<N;i++)
    {
        while(1)
        {
            int cur_idx=now[sorted[i].F];
            if(sorted[i].S == cur_idx) break;
            int b=BS(cur_idx-i);
            int bb=primes[b];
            int last_idx=cur_idx-bb;
            now[sorted[i].F]=last_idx;
            int last=arr[last_idx].F;
            now[last]=cur_idx;
            swap(arr[cur_idx].F, arr[last_idx].F);
            ch[c].F=last_idx;
            ch[c++].S=cur_idx;
        }
    }
    cout<<c<<endl;
    for(int i=0;i<c;i++)
        cout<<ch[i].F+1<<" "<<ch[i].S+1<<"\n";
    return 0;
}
