#include <bits/stdc++.h>

using namespace std;
const int N=3e5+5;
vector<int> adj[N];
vector< pair<int,int> > q[N];
long long add[N],ans[N];
bool vis[N];

void dfs(int u,int h,long long sum)
{
    vis[u]=1;
   // cout<<u<<" "<<h<<" "<<sum<<endl;
    for(auto p:q[u])
    {
        int d=p.first,x=p.second;
        add[h]+=x;
        if(h+d+1<N-1) add[h+d+1]-=x;
    }
    sum+=add[h];
    ans[u]=sum;
    for(auto v:adj[u])
        if(!vis[v])
            dfs(v,h+1,sum);
    for(auto p:q[u])
    {
        int d=p.first,x=p.second;
        add[h]-=x;
        if(h+d+1<N-1) add[h+d+1]+=x;
    }

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n,m;
    cin>>n;
    for(int i=1;i<n;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    cin>>m;
    for(int i=0;i<m;i++)
    {
        int u,d,x;
        cin>>u>>d>>x;
        q[u].push_back({d,x});
    }
    dfs(1,0,0);
    for(int i=1;i<=n;i++) cout<<ans[i]<<" ";
    cout<<endl;
    return 0;
}
