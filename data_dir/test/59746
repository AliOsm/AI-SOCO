/*
ID: xildar91
PROG: fracdec
LANG: C++11
*/
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=1e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
        else
            cout <<"\n";
    }
}
template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}

const int maxn=1e5+100;
bool debug=0;

string a[2];
int k,n;
void solve()
{
    cin >> n >> k;
    cin >> a[0] >> a[1];
    int time[n][2];
    for(int i=0;i<n;i++)
    {
        time[i][0]=time[i][1]=inf_int;
    }
    time[0][0]=0;
    queue<pii> q;
    q.push({0,0});
    while(!q.empty())
    {
        int v=q.front().fi;
        int d=q.front().se;
        dout << v <<" "<<d <<endl;
        q.pop();
        if(v+k>=n)
        {
            cout << "YES";
            return;
        }

        if(v>0 && a[d][v-1]=='-' && time[v-1][d]>time[v][d]+1 && time[v][d]+1<=v-1)
        {
            time[v-1][d]=time[v][d]+1;
            q.push({v-1,d});
        }
        if(a[d][v+1]=='-' && time[v+1][d]>time[v][d]+1)
        {
            time[v+1][d]=time[v][d]+1;
            q.push({v+1,d});
        }
        if(a[1-d][v+k]=='-' && time[v+k][1-d]>time[v][d]+1)
        {
            time[v+k][1-d]=time[v][d]+1;
            q.push({v+k,1-d});
        }

    }
    cout << "NO";



}

#define FILE "path"
int main()
{

       // freopen("high_security.txt","r",stdin);
       // freopen("output.txt","w",stdout);

 //    freopen(FILE".in","r",stdin);
 //    freopen(FILE".out","w",stdout);
       if(!debug)
       {
           ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }
        int t=1;
        while(t--)
            solve();
        return 0;
}
