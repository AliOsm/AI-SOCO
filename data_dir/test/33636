#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>

#define F first
#define S second
#define eps 1e-8
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define INF 2000000000

typedef long long ll;

using namespace std;
ll ans;
ll res(ll cur){
	return (cur + 1ll) * (cur + 2ll) / 2ll;
}
void func(int a, int b, int c, int l){
	int cur = max(a, max(b, c)), x, y, z, t, r;
	l -= cur - a;
	a = cur;
	if(a == b || a == c)
		a++, l--;
		for(int i = 0; i <= l; i++){
			cur = l - i;
			x = min(a - b - 1, cur);
			y = min(a - c - 1, cur);
			cur = min(x + y, cur);
			if(b + c > a){
				ans += res(cur);
				ans -= res(cur - x - 1);
				ans -= res(cur - y - 1);
			}
			else{
				z = a - b - c + 1;
				if(cur >= z){
					t = min(x, cur - y);
					if(t > z)
						ans += (t - z) * 1ll * (y + 1ll);
					t = min(t, z);
					ans += (t + 1ll) * (y - z + 1ll) + t * (t + 1ll) / 2ll;
					t = max(cur - y + 1, z + 1);
					if(x >= t)
						ans += (x - t + 1ll) * (cur + 1ll) - x * (x + 1ll) / 2ll + (t - 1ll) * t / 2ll;
					t = min(z, x);
					r = cur - y + 1;
					if(t >= r)
						ans += (cur - z + 1ll) * (t - r + 1ll);
				}
			}			
			a++;
		}
}
void Func(int a, int b, int c, int l){
	int cur = max(a, max(b, c)), x;
	l -= cur - a;
	a = cur;
	l -= cur - b;
	b = cur;
	if(a == c)	
		a++, b++, l -= 2;
	if(l >= 0){
	    for(int i = 0; i <= l; i += 2){
	    	cur = l - i;
			x = min(a - c - 1, cur);
			ans += x + 1;
	    	a++, b++;
	    }
	}
}
int main()
{
	ios::sync_with_stdio(0);
	int a[9], l;
	cin >> a[0] >> a[1] >> a[2] >> l;
	func(a[0], a[1], a[2], l);
	func(a[1], a[0], a[2], l);
	func(a[2], a[1], a[0], l);
	Func(a[0], a[1], a[2], l);
	Func(a[0], a[2], a[1], l);
	Func(a[2], a[1], a[0], l);
	sort(a, a + 3);
	int x = 0;
	x = a[2] - a[0] + a[2] - a[1];
	if(l >= x){
		l -= x;
		ans += l / 3 + 1;
	}
	cout << ans;
	return 0;
}
