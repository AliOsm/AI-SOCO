#pragma GCC optimize ("O1")
#pragma GCC optimize ("O2")
#pragma GCC optimize ("O3")

#include <bits/stdc++.h>

//#include "rubo.h"
//#define mp make_pair
//#define pb push_back
#define in int
#define ll long long
#define vc vector
#define SQ(j) (j)*(j)
//#define F first
//#define S second

//#define ld long double
#define dbl long double
#define pll pair<long long,long long>
#define pii pair<int,int>
#define pdd pair<dbl,dbl>
#define all(j) j.begin(), j.end()
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
//#define printf(fmt, ...) (0)
//#define HOME
//#define y0 ngacaleiebinvoaeu
//#define y1 gnarpipipaigare
#define j1 adsfndnasfafoasp

using namespace std;

const int N = 5000 + 123;

int n;

int a[N],b[N];

int ans[N];

map<int,int> mp;
int cnt[N];
int main() {

    cin >> n;
    set<int> st;

    int x,y;
    loop(i, n) {
        scanf("%d", &x);
        y = abs(x);

        for (int j = 2; j * j <= y; j++) {
            while (y % (j * j) == 0) {
                y /= (j * j);
            }
        }

        if (x < 0) y = -y;

        a[i] = y;
        b[i] = y;
        st.insert(y);
    }

//    n = 5000;
//    loop(i,5000) a[i] = 0;




    int GI = 0;
    for(int e : st){
        mp[e] = GI++;
    }
    for(int i = 0; i < n; i++){
        a[i] = mp[a[i]];
    }

    int j;




    for (int i = 0; i < n; i++) {
        loop(k,N) cnt[k] = 0;
        int sum = 0;

        for (j = i; j < n; j++) {
            x = a[j];

            if(b[j] == 0){
                if(sum == 0) {
                    ans[sum+1]++;
                }
                else{
                    ans[sum]++;
                }
                continue;
            }

            if(sum == 0){
                cnt[x]++;
                sum++;

                ans[1]++;
                continue;
            }


            if (cnt[x] == 0) {
                // chka



                cnt[x]++;
                sum++;

                ans[sum] ++;
            }
            else {
                // ka
                ans[sum]++;
            }

        }
    }

    for(int k = 1; k <= n; k++){
        printf("%d ", ans[k]);
    }
    cout << endl;

    return 0;
}