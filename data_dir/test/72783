#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
#define F first
#define S second

struct st
{
	int a, b, c, d;
	int mnx, mxx, mny, mxy;
};

int main()
{
	#ifdef DGC
		freopen("a.txt", "r", stdin);
	#endif
	ios_base::sync_with_stdio(0), cin.tie(0);

	int d;
	cin >> d;
	int n, m;
	cin >> n >> m;
	vector<int> left, right, top, bottom;

	vector<st> s(d);
	for (auto &i : s)
	{
		cin >> i.a >> i.b >> i.c >> i.d;
		i.mnx = min(i.a, i.c);
		i.mxx = max(i.a, i.c);
		i.mny = min(i.b, i.d);
		i.mxy = max(i.b, i.d);

		left.push_back(i.mnx);
		right.push_back(i.mxx);
		top.push_back(i.mny);
		bottom.push_back(i.mxy);
	}

	sort(left.begin(), left.end());
	sort(right.begin(), right.end());
	sort(top.begin(), top.end());
	sort(bottom.begin(), bottom.end());

	int l, r, t, b;
	cin >> l >> r >> t >> b;

	for (auto &i : s)
	{
		if (lower_bound(left.begin(), left.end(), i.mxx) - left.begin() == l+(i.mnx < i.mxx))
			if (right.end() - upper_bound(right.begin(), right.end(), i.mnx) == r+(i.mxx > i.mnx))
				if (lower_bound(top.begin(), top.end(), i.mxy) - top.begin() == t+(i.mny < i.mxy))
					if (bottom.end() - upper_bound(bottom.begin(), bottom.end(), i.mny) == b+(i.mxy > i.mny))
					{
						cout << (&i-&s[0])+1 << "\n";
						return 0;
					}
	}

	cout << "-1\n";

	return 0;
}
