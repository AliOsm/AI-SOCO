#include <iostream>
#include <vector>
#include <algorithm>
#include <cassert>

typedef long long ll;

const bool debug = 0;

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0); std::cout.tie(0); std::cerr.tie(0);
    int n;
    while (std::cin >> n) {
        n /= 2;
        if (debug) {
            std::cout << "n = " << n << std::endl;
        }
        std::vector<ll> sum(n);
        for (auto &it : sum) {
            std::cin >> it;
        }
        if (debug) {
            for (auto it : sum) {
                std::cout << it << ' ';
            }
            std::cout << std::endl;
        }
        std::vector<ll> answ(2 * n);
        answ.front() = 0;
        answ.back() = sum.front();
        for (int i = 1; i < n; ++i) {
            auto min_fi = answ.at(i-1);
            auto max_se = answ.at(2 * n - i);
            auto item = std::max(sum.at(i) - max_se, min_fi);
            answ.at(i) = item;
            answ.at(2*n-i-1) = sum.at(i) - item;
        }
        for (auto it : answ) {
            std::cout << it << ' ';
        }
        std::cout << std::endl;
        assert(std::is_sorted(answ.begin(), answ.end()));
    }
    return 0;
}