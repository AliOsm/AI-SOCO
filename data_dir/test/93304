#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int N = 500010;
const int mx = 1000005;

inline int in() {int x; scanf("%d",&x); return x;}
inline ll lin() {ll x; scanf("%I64d",&x); return x;}

int n, c;
int ok[N];

int tree[4 * mx];

vector < int > V[N];

void modify(int x, int st, int ed, int l, int r){
    if(st > r || ed < l) return ;
    if(st >= l && ed <= r){
        tree[x]++;
        return ;
    }

    if(tree[x] > 0){
        if(st != ed){
            tree[x + x] += tree[x];
            tree[x + x + 1] += tree[x];
            tree[x] = 0;
        }
    }

    int mid = (st + ed) >> 1;
    modify(x + x, st, mid, l, r);
    modify(x + x + 1, mid + 1, ed, l, r);
}

void Bigger(int id){
    int a = id - 1, b = id;
    int sz = min((int)V[a].size(),(int)V[b].size());

    int l = 0,r = -1, eq = 0;
    for(int i = 0;i < sz; i++){
        if(V[a][i] == V[b][i]){
            eq++; continue;
        }
        if(V[a][i] < V[b][i]){
            l = 0; r = c - V[b][i];
            if(l <= r) modify(1,0,c,l,r);
            l = c - V[a][i] + 1; r = c;
            if(l <= r) modify(1,0,c,l,r);
        }else {
            l = c - V[a][i] + 1;
            r = c - V[b][i];
            if(l <= r) modify(1,0,c,l,r);
        }
        break;
    }

    if(eq == sz){
        if(V[a].size() <= V[b].size()){
            l = 0; r = c;
            modify(1,0,c,0,c);
        }
    }

    //cout << l << " " << r << '\n';
}

int get(int x, int st, int ed, int l, int r){
    if(st > r || ed < l) return 0;
    if(tree[x] > 0){
        if(st != ed){
            tree[x + x] += tree[x];
            tree[x + x + 1] += tree[x];
            tree[x] = 0;
        }
    }
    if(st >= l && ed <= r) return tree[x];

    int mid = (st + ed) >> 1;
    return get(x + x, st, mid, l, r) +
    get(x + x + 1, mid + 1, ed, l, r);
}

int main(){
    n = in(); c = in();
    for(int i = 1;i <= n; i++){
        int x = in();
        for(int j = 1;j <= x; j++){
            int v = in();
            V[i].pb(v);
        }
    }

    modify(1,0,c,0,c);
    for(int i = 2;i <= n; i++){
        Bigger(i);
    }

    int ans = -1;
    for(int i = 0;i <= c; i++){
        //cout << get(1,0,c,i,i) << '\n';
        if(get(1,0,c,i,i) >= n){
            ans = i; break;
        }
    }

    printf("%d\n",ans);
}

/*
5 10
1 5
7 5 1 10 5 3 7 10
1 2
1 3
7 4 7 3 9 4 6 1
*/
