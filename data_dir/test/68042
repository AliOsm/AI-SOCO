#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

priority_queue<pair<LL, int> > s;
int q[500100];

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
	double beg = clock();
#endif

	int n, m;
	scanf("%d%d", &n, &m);
	FOR(i, 0, n)
	{
		int st, m;
		scanf("%d%d", &st, &m);
		s.push(mp(-st, m));
	}
	int l = 0, r = 0;
	while (s.size())
	{
		pair<LL, int> tmp = s.top();
		s.pop();
		if (tmp.second < 0)
		{
			if (l < r)
			{
				s.push(mp(tmp.first - q[l], -1));
				printf("%lld\n", -tmp.first + q[l]);
				l++;
			}
			else
				m++;
		}
		else
		{
			if (m == 0)
			{
				q[r] = tmp.second;
				r++;
			}
			else
			{
				m--;
				s.push(mp(tmp.first - tmp.second, -1));
				printf("%lld\n", -tmp.first + tmp.second);
			}
		}
	}

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}