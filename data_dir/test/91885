#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

const long double eps = 1e-9;

#define MOD 1000000007
#define MAX 200005

typedef complex<double> point;
const double EPS = 1e-9;

int ar[] = { 1, -1, 0, 0, 1, 1, -1, -1 };
int ac[] = { 0, 0, 1, -1, 1, -1, 1, -1 };

int main() {
#ifdef Adel_SaadEddin_PC
    freopen("input.txt", "r", stdin);
        // freopen("output.out", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);

    int n; cin >> n;
    set<char> se;

    for(char i = 'a'; i <= 'z'; i++)
        se.insert(i);

    bool ok = false;
    int res = 0;
    for(int i = 0; i < n; i++) {
        char type; cin >> type;
        if(se.size() == 1)
            ok = true;

        if(ok) {
            if(type == '.') {
                string s; cin >> s;
            }
            if(type == '!') {
                string s; cin >> s;
                res++;
            }
            else
                if(type == '?') {
                    char let; cin >> let;
                    if(*se.begin() != let)
                        res++;
                }
        }

        else {
            if(type == '.') {
                string s; cin >> s;

                for(auto x : s)
                    if(se.count(x))
                        se.erase(x);
            }
            if(type == '!') {
                string s; cin >> s;

                set<char> temp;

                for(auto x : s)
                    temp.insert(x);

                set<char> ns;

                for(auto x : se) {
                    if(temp.count(x))
                        ns.insert(x);
                }

                se.clear();

                for(auto x : ns)
                    se.insert(x);
            }
            if(type == '?') {
                char let; cin >> let;

                if(se.count(let))
                    se.erase(let);
            }
        }
    }

    cout << res << "\n";

    return 0;
}











