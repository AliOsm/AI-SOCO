#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

const int MaxN = 10004, NA = -1, MaxC = 0x3F3F3F3F;

int p [3], t [2];
int l [MaxN], r [MaxN];
int n;

int main (void)
{
 int c, i, s;
 while (scanf (" %d %d %d %d %d %d", &n, &p[0], &p[1], &p[2], &t[0], &t[1])
  != EOF)
 {
  for (i = 0; i < n; i++)
   scanf (" %d %d", &l[i], &r[i]);
  s = (r[0] - l[0]) * p[0];
  for (i = 1; i < n; i++)
  {
   c = min (t[0], l[i] - r[i - 1]);
   s += c * p[0];
   c = max (0, min (t[0] + t[1], l[i] - r[i - 1]) - t[0]);
   s += c * p[1];
   c = max (0, l[i] - r[i - 1] - t[0] - t[1]);
   s += c * p[2];
   s += (r[i] - l[i]) * p[0];
  }
  printf ("%d\n", s);
 }
 return 0;
}
