#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define PI 3.14159265358979

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

using namespace std;

#define mod 1000000007
#define M 2000005

int n,k,m,pv[26];
char s[M];

int dp[M],sum[M];

int main(){
	scanf("%d %d %s",&n,&k,s);
	//step 1: gen string (greedy)
	m=strlen(s);
	FI(i,0,k-1) pv[i]=-1;
	FI(i,0,m-1) pv[s[i]-'a']=i;
	FI(i,m,m+n-1){
		int ok=0;
		FI(j,1,k-1) if(pv[j]<pv[ok]) ok=j;
		s[i]=ok+'a';
		pv[ok]=i;
	}
//	puts(s);
	m=m+n;
	//step 2: calculate answer
	memset(pv,-1,sizeof(pv));
	FD(i,m,1) s[i]=s[i-1];
	dp[0]=sum[0]=1;
	FI(i,1,m){
		int id=s[i]-'a';
		if(pv[id]==-1) dp[i]=sum[i-1];
		else dp[i]=(sum[i-1]-sum[pv[id]-1]+mod)%mod;
		sum[i]=(sum[i-1]+dp[i])%mod;
		pv[id]=i;
	//	printf("%d %d\n",dp[i],sum[i]);
	}
	printf("%d\n",sum[m]);
	return 0;
}
