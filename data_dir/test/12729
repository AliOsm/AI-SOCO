#include <bits/stdc++.h>

using namespace std;

typedef long long lli;
const int MX = 200005;
typedef pair<int,int> pii;

vector<set<int> > adj(MX) ;
vector<int> vis(MX) , viz(MX) , vos(MX) , hei(MX) , sols ;
int all,n,far,L , s , e,k;

void dfs1(int x ,int lvl )
{
    if(vis[x])return;
    vis[x]=1;
    for(auto u : adj[x])
        dfs1(u,lvl+1);
    if(lvl>L)
    {
        L=lvl;
        far=x;
    }
    vis[x]=0;
}

bool dfs2(int x,int lvl)
{
    if(vis[x])
        return 0;
    if(x==e)return 1;
    vis[x]=1;
    for(auto u :adj[x])
    {
        if(!vis[u])
        {
            if(dfs2(u,lvl+1))
            {
                if(L%2)
                {
                    if(lvl==L/2 ||lvl==L/2+1)
                        sols.push_back(x);
                }
                else
                {
                    if(lvl==L/2)
                        sols.push_back(x);
                }
                vis[x]=0;
                return 1;
            }
        }
    }
    return 0;
    vis[x]=0;
}
int dfs3(int x , int lvl)
{
    if(vos[x])
        return 0;
    vos[x]=1;
    int X = 0;
    for(auto u : adj[x])
        if(!vos[u])
            X =max(X , dfs3(u,lvl) +1 );
    hei[x] = X;
    vos[x]=0;
    return X;
}
bool is = 1;
int tr(int x,int lvl)
{
    if(viz[x])return 0;
    viz[x]=1;
    set<int> val;
    for(auto u : adj[x])
    {
        if(!viz[u])
        {
            tr(u,lvl);
            val.insert(hei[u]);
            if(x==k)
            {
                if(val.size()>2)
                {
                    is = 0;
                    viz[x]=0;
                    return 0;
                }
            }
            else
            {
                if(val.size()>1)
                {
                    is=0;
                    viz[x]=0;
                    return 0;
                }
            }
        }
    }
    if(x==k)
        for(auto u : val)
            all+=u+1;
    viz[x]=0;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    scanf("%d",&n);
    for(int i=0;i<n-1;i++)
    {
        int l , r;
        scanf("%d%d",&l,&r);
        adj[l].insert(r);
        adj[r].insert(l);
    }
    dfs1(1,0);s=far;
    L=0;
    dfs1(far,0);e = far;
        dfs2(s,0);
    for(int i=0;i<MX;i++)
        vis[i]=0;
    for(auto u : sols)
    {
        is=1;
        k=u;
        dfs3(k,0);
        tr(u,0);
        if(is)
            break;
    }
    while(all%2==0&&all)
        all/=2;
    if(is)printf("%d",all);
    else printf("-1");
    return 0;
}
