//Daniel Grzegorzewski
#include <bits/stdc++.h>
#pragma GCC optimize("O3")

#define MP make_pair
#define PB push_back
#define ST first
#define ND second

using namespace std;

typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
typedef long long LL;

void init_ios() {
     ios_base::sync_with_stdio(0);
     cin.tie(0);
}

const int N = (int)1e5 + 3;

int n, res = 1, a[N];
VI ind;

int main() {
  init_ios();
  cin >> n;
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    if (i > 1 && a[i] <= a[i-1])
      ind.PB(i-1);
  }
  a[n+1] = 1e9+3;
  for (int i = 1; i <= n; ++i) {
    auto id = lower_bound(ind.begin(), ind.end(), i) - ind.begin();
    if (id == ind.size()) {
      res = max(res, n-i+1);
      break;
    }
    int nr = ind[id];
    if (nr == i || a[nr-1]+1 < a[nr+1] || a[nr]+1 < a[nr+2]) {
      id = lower_bound(ind.begin(), ind.end(), nr+1) - ind.begin();
      if (id == ind.size()) {
        res = max(res, n-i+1);
        break;
      }
      res = max(res, ind[id]-i+1);
    }
    else {
      res = max(res, nr-i+2);
    }
  }
  cout<<res<<"\n";
}