#include <bits/stdc++.h>
#define ll long long

using namespace std;
 
vector <vector <int> > e;
vector <int> v, ans, init, goal;
ll c, r = 1;
 
void DFS(int x, int d, int p0, int p1)
{
	int z = init[x];
	v[x] = 1;
	
	if (d % 2 == 0 && p0 || d % 2 == 1 && p1)
		z = !z;
		
	if (z != goal[x])
	{
		ans.push_back(x + 1);
		d % 2 ? p1 = !p1 : p0 = !p0;
	}
	
	for (int i = 0; i < e[x].size(); i++)
		if (!v[e[x][i]])
			DFS(e[x][i], d + 1, p0, p1);
}
 
int main()
{
	int n, m, a, b;
	cin >> n;
	e.resize(n);
	v.resize(n);
	init.resize(n);
	goal.resize(n);
	
	for (int i = 0; i < n - 1; i++)
	{
		cin >> a >> b;
		a--;
		b--;
		e[a].push_back(b);
		e[b].push_back(a);
	}
	
	for (int i = 0; i < n; i++)
		cin >> init[i];
		
	for (int i = 0; i < n; i++)
		cin >> goal[i];
	
	DFS(0, 0, 0, 0);
	cout << ans.size() << endl;
	
	for (auto x: ans)
		cout << x << endl;
}