#include <bits/stdc++.h>
using namespace std;

typedef long long         ll;
typedef vector<int>       vi;
typedef vector<ll>        vl;
typedef pair<int, int>    pi;
typedef pair<ll, ll>      pl;
typedef vector<pi>        vpi;
typedef vector<pl>        vpl;

#define read        freopen("in.c", "r", stdin)
#define write       freopen("out.c", "w", stdout)
#define all(a)      a.begin(), a.end()
#define bye         exit(0)
#define mp          make_pair
#define ff          first
#define ss          second
#define L(x)        ((x) << 1)
#define R(x)        ((x) << 1 | 1)
#define bit(x)      (1LL << (x))
#define SZ(a)       (ll)(a).size()
#define pb          push_back
#define pp          pop_back
#define eps         1e-9
#define inf         (1000000000)
#define infl        (1000000000000000000LL)
#define cs(p)       printf("Case %d:", (p)++)
#define ptc(c)      putchar(c)
#define gtc()       getchar()
#define nl          puts("")
#define sp          printf(" ")
#define out(a)      printf("%lld", (ll)(a))
#define ots(s)      printf("%s", s)
#define SET(a)      memset((a), -1, sizeof(a))
#define CLR(a)      memset((a), 0, sizeof(a))
#define dbg(x)      cout << #x << " = " << x << endl

ll bgm(ll a, ll b, ll m) {
    a %= m;
    ll rem = 1;
    while(b) {
        if(b&1)
            rem = (rem * a) % m;
        a = (a * a)%m;
        b >>= 1;
    }
    return rem;
}

ll inv(ll a, ll mod) {
    return bgm(a, mod - 2, mod);
}

ll in() {
    ll a;
    assert(scanf("%lld", &a) != EOF);
    return a;
}

double dl() {
    double a;
    assert(scanf("%lf", &a) != EOF);
    return a;
}

const int MAX = 200005;
const int LEN = 50;
const ll MOD = 1000000007;

double ttm;

int n;
ll a[MAX], b[MAX], c[MAX], d[MAX];

ll x, y;

priority_queue< ll > lx, ly;
priority_queue< ll, vl, greater<ll> > rx, ry;

void solve() {
    if(lx.top() > rx.top())
        return ;
    if(ly.top() > ry.top())
        return ;
    out(lx.top()), sp, out(ly.top()), nl;
    bye;
}

int main() {
    #ifndef ONLINE_JUDGE
        read, write;
        ttm = clock();
    #endif

    n = in();
    for(int i = 0; i < n; i++) {
        a[i] = in(), b[i] = in(), c[i] = in(), d[i] = in();
        lx.push(a[i]), rx.push(c[i]);
        ly.push(b[i]), ry.push(d[i]);
    }

    for(int i = 0; i < n; i++) {
        bool p, q, r, s;
        p = q = r = s = false;
        if(lx.top() == a[i])
            lx.pop(), p = true;
        if(rx.top() == c[i])
            rx.pop(), q = true;
        if(ly.top() == b[i])
            ly.pop(), r = true;
        if(ry.top() == d[i])
            ry.pop(), s = true;

        solve();

        if(p == true)
            lx.push(a[i]);
        if(q == true)
            rx.push(c[i]);
        if(r == true)
            ly.push(b[i]);
        if(s == true)
            ry.push(d[i]);
    }

    #ifndef ONLINE_JUDGE
        printf("Runtime = %lf seconds\n", (clock() - ttm)/1000.0);
    #endif

    return 0;
}
