#include <bits/stdc++.h>
using namespace std;

const int N = 55;

int n, dp[N][N][N][N];
string s[N];

void _min(int &a, int b) {
	a = min(a, b);
}

void solve() {
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			dp[i][i + 1][j][j + 1] = (s[i][j] == '#');
	for (int l1 = 1; l1 <= n; l1++)
		for (int l2 = 1; l2 <= n; l2++)
			if (l1 + l2 > 2)
				for (int i = 0; i + l1 <= n; i++)
					for (int j = 0; j + l2 <= n; j++) {
						dp[i][i + l1][j][j + l2] = max(l1, l2);
						for (int k = i; k < i + l1; k++)
							_min(dp[i][i + l1][j][j + l2], dp[i][k][j][j + l2] + dp[k][i + l1][j][j + l2]);
						for (int k = j; k < j + l2; k++)
							_min(dp[i][i + l1][j][j + l2], dp[i][i + l1][j][k] + dp[i][i + l1][k][j + l2]);
					}
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> s[i];
	solve();
	cout << dp[0][n][0][n];
	return 0;
}
