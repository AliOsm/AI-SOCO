#include <bits/stdc++.h>

//#pragma GCC optimize("Ofast")

#define fi first
#define se second
#define ll long long

using namespace std;

const int N = 1e6 + 7;
const int NN = 1e9 + 10;
const int mod = 1e9 + 7;

int n;
int a[N];
int b[N];
ll h[N];
ll d[N];
map < ll , pair < ll , int > > t;

void upd( int x , ll y , int z )
{
    while( x < NN ){
        if( t[x].fi < y ){
            t[x].fi = y;
            t[x].se = z;
        }
        x += x & -x;
    }
}

ll get( int x )
{
    ll res = 0;
    int fg = 0;
    while( x > 0 ){
        if( t[x].fi > res ){
            res = t[x].fi;
            fg = t[x].se;
        }
        x -= x & -x;
    }
    return fg;
}

void solve1()
{
    cin >> n;
    vector < int > v;
    for( int i = 1; i <= n; i++ ){
        cin >> a[i] >> b[i] >> h[i];
        v.push_back(i);
    }
    sort( v.begin() , v.end() , [&] (int i , int j){
        if( b[i] == b[j] ){
            return a[i] > a[j];
         }
         return b[i] > b[j];
    });
    for( int j = 0; j < n; j++ ){
        int i = v[j];
        d[i] = d[get(b[i] - 1)] + h[i];
        upd( a[i] , d[i] , i );
    }
    cout << *max_element(d , d + n + 2);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0); srand(time(0));
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
