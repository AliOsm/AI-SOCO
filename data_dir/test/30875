#include<bits/stdc++.h>

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define endl '\n'
#define MAX

typedef long long ll;
typedef pair<int,int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

struct adata{
	ll x, y, t;
	double p;
};

bool cmp(adata a, adata b){
	return a.t < b.t;
}

int n;
vector<adata> a;

const int maxn = 1e3 + 5;

double dp[maxn];
bool ok[maxn];

ll sqr(ll x){
	return x * x;
}

ll dist2(ll xo, ll yo, ll xi, ll yi){
	return sqr(xo - xi) + sqr(yo - yi);
}

double solve(int pos){

	if(ok[pos])
		return dp[pos];

	ok[pos] = true;
	double ans = a[pos].p;

	for(int i = pos + 1; i < n; i++){

		ll d = dist2(a[pos].x, a[pos].y, a[i].x, a[i].y);
		if(d <= sqr(a[i].t - a[pos].t))
			ans = max(ans, solve(i) + a[pos].p);
	
	}
	
	return dp[pos] = ans;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	
	cout << setprecision(10) << fixed;
	
	cin >> n;
	a.resize(n);
	for(int i = 0; i < n; i++)
		cin >> a[i].x >> a[i].y >> a[i].t >> a[i].p;
	
	sort(a.begin(), a.end(), cmp);
	
	double ans = 0.0;
	for(int i = 0; i < n; i++)
		ans = max(ans, solve(i));
	
	cout << ans << endl;

	return 0;
}