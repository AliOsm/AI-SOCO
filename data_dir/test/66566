#include <iostream>
#include <cmath>
#define MaxN 1000000007
using namespace std;
int dp[110][132000];
int tr[110][132000]; //Trace
int val[110][132000];
int f[62];
int n;
int a[110];
int b[110];
int p[]= {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59};

int getbit(int x,int k)
{
    return ((x>>k)&1);
}

void biton(int &x, int k)
{
    x+= (1<<k);
}
int main()
{
    ios::sync_with_stdio(false);
    cin>>n;
    for (int i=1; i<=n; i++) cin>>a[i];
    /* Set Bit Chose Array */
    for (int i=2; i<=60; i++)
    {
        f[i] = 0;
        for (int j = 0; j<17; j++)
            if (i%p[j]==0) biton(f[i],j);
    }

    /* Init dp[][] array */
    for (int i = 1; i<=n; i++)
    for (int j = 0; j<=(1<<17)-1; j++)
        dp[i][j] = MaxN;

    /* Dynamic Programming */
    for (int i = 0; i<n; i++)
    for (int j = 0; j<= (1<<17)-1; j++)
    {
       for (int k=1; k<=60; k++)
       {
        int x = f[k]&j;
        if ((x==0)||(k==1)) // Match success
        {
           int kk = f[k]|j;
           int x = dp[i][j] + abs(k-a[i+1]);
           if (dp[i+1][kk]>x)
           {
               dp[i+1][kk] = x;
               tr[i+1][kk] = j;
               val[i+1][kk] = k;
           }
        }}
    }

    int pos;
    int res = MaxN;
    for (int i = 0; i<=(1<<17)-1; i++)
        if (res>dp[n][i]) {res=dp[n][i]; pos = i;}
    int m = n;
    while (1!=0)
    {
        b[m] = val[m][pos];
        if (m == 0) break;
        pos = tr[m][pos];
        m--;
    }
    for (int i=1; i<=n; i++)
         cout<<b[i]<<" ";
    return 0;
}
