#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
typedef vector<vector<ll>> mat;

const int N = 1e6 + 6 , mod = 1e9 + 7;
ll val[N] , p[N] , n;
string s;

ll get(int l , int r)
{
    return ( val[r] - (val[l - 1] * p[r - l + 1]) % mod + mod ) % mod;
}

void ok(int l , int r)
{
    if(r <= l || n - r < r - l || n - r < l) return;
    if( (s[1] == '0' && l > 1) || (s[l + 1] == '0' && r > l + 1) || (s[r + 1] == '0' && n > r + 1) ) return;
    if( ( get(1 , l) + get(l + 1 , r) ) % mod != get(r + 1 , n)) return;

    for(int i = 1 ; i <= n ; i++)
    {
        cout << s[i];
        if(i == l) cout << '+';
        if(i == r) cout << '=';
    }
    exit(0);
}

int main()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    cin >> s;
    n = s.size();
    p[0] = 1;
    s = "S" + s;
    for(int i = 1 ; i <= n ; i++)
    {
        val[i] = (val[i - 1] * 10 + s[i] - '0') % mod;
        p[i] = p[i - 1] * 10 % mod;
    }

    for(int i = 1 ; i <= n / 2 ; i++)
    {
        ok(i , n - i);
        ok(i , n - i - 1);
        ok(i , n - (n - i) / 2);
        ok(i , n - (n - i) / 2 - 1);
    }

    return 0;
}
