#include<bits/stdc++.h>
using namespace std;

const int mx=3e6+777;

int main() {
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);
	vector<bool> flag(mx,true);
	vector<int> div(mx,0);
	flag[0]=flag[1]=false;
	for (int i=2; i*i<mx; i++)
		if(flag[i])
			for (int j=i; j*i<mx; j++) {
				if(!div[i*j]) div[i*j]=j;
				flag[i*j]=false;
			}
	map<int,int> idx;
	int it=0,n,x;
	for (int i=0; i<mx; i++)
		if(flag[i])
			idx[i]=++it;
	cin>>n; n<<=1;
	multiset<int> b;
	for (int i=0; i<n; i++)
		cin>>x, b.insert(x);
	while(!b.empty()) {
		int x=*b.rbegin(), y=idx[x];
		if(!flag[x])
			y=div[x], swap(x,y);
		b.erase(b.find(x));
		b.erase(b.find(y));
		cout<<y<<" ";
	}
	cout<<endl;
	return 0;
}
