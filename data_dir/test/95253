#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,no-stack-protector,fast-math")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pi acos(-1)
#define IO ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
const int N = 2e5 + 5, M = 2 * N + 5;

int head[N], nxt[M], to[M], ne, n;

void init(){
    ne = 0;
    memset(head, -1, n * sizeof head[0]);
}

void addEdge(int f, int t){
    to[ne] = t;
    nxt[ne] = head[f];
    head[f] = ne++;
}

void addBiEdge(int a, int b){
    addEdge(a, b);
    addEdge(b, a);
}

ll sub[N];
int a[N], dep[N];

void pre(int u = 0, int par = -1, int l = 0){
    dep[u] = l;
    sub[u] = a[u];
    for(int e = head[u] ; ~e ; e = nxt[e]){
        int v = to[e];
        if(v == par)continue;
        pre(v, u, l + 1);
        sub[u] += sub[v];
    }
}

ll sum, mx, nw;

void reRoot(int u = 0, int par = -1){
    mx = max(mx, nw);

    for(int e = head[u] ; ~e ; e = nxt[e]){
        int v = to[e];
        if(v == par)continue;

        nw -= sub[v];
        nw += (sum - sub[v]);

        reRoot(v, u);

        nw += sub[v];
        nw -= (sum - sub[v]);

    }
}

int main(){
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d", &n);
    init();

    for(int i = 0 ; i < n ; ++i)
        scanf("%d", a + i);

    for(int i = 1 ; i < n ; ++i){
        int u, v;
        scanf("%d %d", &u, &v);
        addBiEdge(--u, --v);
    }

    pre();

    for(int i = 0 ; i < n ; ++i)
        nw += (1ll * a[i] * dep[i]), sum += a[i];

    reRoot();

    printf("%lld\n", mx);

}