#include<bits/stdc++.h>
using namespace std;
int power(int x,int y)
{
    int f=1;
    for(int i=0;i<y;i++)
    {
        f*=x;
    }
    return f;
}
int conv1(string s)
{
    int len=s.length(),res=0;
    for(int i=1;i<=len;i++)
    {
        res+=((s[i-1]-48)*power(10,len-i));
    }
    return res;
}
int conv2(string s)
{
    int len=s.length(),res=0;
    for(int i=1;i<=len;i++)
    {
        res+=((s[i-1]-64)*power(26,len-i));
    }
    return res;
}
int main()
{
    int n;
    cin>>n;
    string x;
    while(n--)
    {
        cin>>x;
        int len=x.length(),cnt=0;
        string r,c;
        int cc;
        for(int i=0;i<len;i++)
        {
            if(x[i]-65>=0 && x[i]-65<=25) cnt++;
        }
        if(cnt==2 && x[1]-48>=0 && x[1]-48<=9)
        {
            int i=x.find("C");
            r=x.substr(1,i-1);
            cc=conv1(x.substr(i+1,len-1-i));
            for(i=0;cc>0;i++)
            {
                if(cc%26==0)
                {
                    c[i]='Z';
                    cc=cc/26-1;
                }
                else
                {
                    c[i]=(cc%26)+64;
                    cc/=26;
                }
            }
            for(int j=i-1;j>=0;j--)
                cout<<c[j];
            cout<<r<<endl;
        }
        else
        {
            int ndx;
            for(int i=0;i<len;i++)
            {
                if(x[i]-48>=0 && x[i]-48<=9)
                {
                    ndx=i;
                    break;
                }
            }
            r=x.substr(ndx,len-ndx);
            cc=conv2(x.substr(0,ndx));
            cout<<"R"<<r<<"C"<<cc<<endl;
        }
    }
    return 0;
}