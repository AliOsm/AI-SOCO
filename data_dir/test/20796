#define _CRT_SECURE_NO_WARNINGS

#pragma comment(linker, "/STACK:640000000")

#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define forr(i, l, r) for(int i = int(l); i <= int(r); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))

typedef long long li;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long uli;
typedef pair<int, int> pt;

inline void read(int&);
inline void read(li&);
inline void read(ld&);
inline void read(char&);
inline void read(string&);
template <typename T1, typename T2> inline void read(T1&, T2&);
template <typename T1, typename T2, typename T3> inline void read(T1&, T2&, T3&);
template <typename T1, typename T2, typename T3, typename T4> inline void read(T1&, T2&, T3&, T4&);

inline void read(string &s) {
	static char buf[int(1e6) + 10];
	assert(scanf("%s", buf) == 1);
	s = string(buf);
	return;
}

const int INF = (int)(1e9);
const li INF64 = (li)(INF)* (li)(INF);
const ld eps = 1e-8;
const ld pi = ld(3.1415926535897932384626433832795);

inline bool in(int i, int j, int n, int m) {
	return i >= 1 && i <= n && j >= 1 && j <= m;
}

inline int myrand() {
	return (rand() ^ (rand() << 15));
}

inline li randL() {
	return myrand() * 1LL * myrand() + myrand();
}

const int dx[] = { 0, -1, 1, 0 };
const int dy[] = { -1, 0, 0, 1 };

const int N = 2e5 + 555;

char a[3][3], b[3][3];
int n = 2, m = 2;

inline void gen() {
	return;
}

inline bool read() {
	forn1(i, n) forn1(j, n) cin >> a[i][j];
	forn1(i, n) forn1(j, n) cin >> b[i][j];
	return true;
}

void rec(vector<vector<char> > v, set<vector<vector<char> > > &used) {
	/*cerr << "TABLE" << endl;
	cerr << sz(v) << ' ' << sz(v[0]) << endl;
	forn(i, 2) {
		forn(j, 2) cerr << v[i][j] << ' '; cerr << endl;
	}*/
	if (used.count(v)) return;
	used.insert(v);
	int xx, yy;
	forn(i, 2) forn(j, 2) if (v[i][j] == 'X') {
		xx = i, yy = j;
	}

	//cerr << "xx yy == " << xx << ' ' << yy << endl;
	forn(dir, 4) {
		int nx = xx + dx[dir];
		int ny = yy + dy[dir];
		if (nx >= 0 && nx < 2 && ny >= 0 && ny < 2) {
			vector<vector<char> > vv = v;
			/*cerr << "OMG" << endl;
			forn(i, 2) {
				forn(j, 2) cerr << vv[i][j] << ' '; cerr << endl;
			}*/
			vv[xx][yy] = vv[nx][ny];
			vv[nx][ny] = 'X';
			/*cerr << "NV == " << endl;
			forn(i, 2) {
				forn(j, 2) cerr << vv[i][j] << ' '; cerr << endl;
			}*/
			rec(vv, used);
		}
	}
}

inline void solve() {
	vector<vector<char> > v1(2, vector<char>(2));
	vector<vector<char> > v2(2, vector<char>(2));
	forn1(i, n) forn1(j, n) {
		v1[i - 1][j - 1] = a[i][j];
		v2[i - 1][j - 1] = b[i][j];
	}

	set < vector<vector<char> > > used1, used2;
	rec(v1, used1);
	cerr << "???" << endl;
	//assert(false);
	rec(v2, used2);

	for (auto x : used1) if (used2.count(x)) {
		puts("YES");
		return;
	}

	puts("NO");
	return;
}

int main() {
#ifdef _DEBUG
	assert(freopen("input.txt", "rt", stdin));
	assert(freopen("output.txt", "wt", stdout));
#else
#endif

	cout << setprecision(10) << fixed;
	cerr << setprecision(10) << fixed;

	srand(int(time(NULL)));

	int T = 1;
	//assert(scanf("%d", &T) == 1);

	forn(i, T) {
		//cerr << "TEST == " << i + 1 << endl;
		assert(read());
		solve();
	}

#ifdef _DEBUG
	cerr << "TIME == " << clock() << " ms" << endl;
#endif
	return 0;
}