#include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

const int maxn = 1e5 + 100;
vector <int> adj[maxn];
LL val[maxn], pos[maxn], neg[maxn];

void dfs(int v,int par = -1) {
	for (auto u : adj[v])
		if (u != par) {
			dfs(u, v);
			pos[v] = max(pos[v], pos[u]);
			neg[v] = max(neg[v], neg[u]);
		}
	val[v] += pos[v] - neg[v];
	if (val[v] > 0)
		neg[v] += abs(val[v]);
	else
		pos[v] += abs(val[v]);
}

int main() {
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	for (int i = 1; i < n; i++) {
		int v, u;
		cin >> v >> u;
		v--, u--;
		adj[v].push_back(u);
		adj[u].push_back(v);
	}
	for (int i = 0; i < n; i++)
		cin >> val[i];
	dfs(0);
	cout << pos[0] + neg[0] << endl;
	return 0;
}