//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>

#define pb push_back
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define ub upper_bound
#define lb lower_bound
#define bit __builtin_popcount
#define memset(x) memset(x,0,sizeof(x))

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<vector<int>> matrix;

inline void boost(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

const ll maxn=2e5+123;
const ll inf=1e9+123;
const ll linf=1e18+123;
const ll mod=1e9+7;
const double eps=1e-9;
const double pi=acos(-1);
int dx[8]={0,1,-1,0,1,-1,1,-1};
int dy[8]={1,0,0,-1,1,1,-1,-1};
int a[maxn],suff[maxn];
vector<int>c;
pii b[maxn];
void solve(){
    int n;
    cin>>n;
    int mxn=0,mxm=0;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        mxn=max(mxn,a[i]);
    }
    int m;
    cin>>m;
    c.resize(m+1);
    for(int i=1;i<=m;i++){
        cin>>b[i].F>>b[i].S;
        mxm=max(mxm,b[i].F);
    }
    if(mxm<mxn){
        cout<<"-1\n";
        return;
    }
    sort(b+1,b+1+m);
    for(int i=1;i<=m;i++){
        c[i]=b[i].F;
    }
    suff[m+1]=0;
    for(int i=m;i>=1;i--){
        suff[i]=max(suff[i+1],b[i].S);
    }
    int cntr=0,currmx=0,curr=0;
    for(int i=1;i<=n;i++){
        currmx=max(currmx,a[i]);
        int it=lb(all(c),currmx)-c.begin();
        if(suff[it]<i-curr){
            cntr++;
            curr=i-1;
            currmx=a[i];
        }
    }
    cout<<cntr+1<<"\n";
}
int main(){
    boost();
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int q;
    cin>>q;
    while(q--){
        solve();
    }
	exit(0);
}
