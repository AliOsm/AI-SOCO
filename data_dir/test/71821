#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x), end(x)
#define SZ(x) (int)(x).size()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define rep1(i, a, b) for(int i = a; i < b; ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9;
const LL  INFF = (LL)1e18;
const int mod = (int)1e9 + 7;
const int MXN = (int)1e6 + 7;
int n, k; 
int ans = 1;
vector<int>edge[MXN];
int dfs(int u, int pa){
	vector<int>buf;
	if(SZ(edge[u]) == 1) return 0;
	for(int v : edge[u]){
		if(v == pa) continue;
		int d = dfs(v, u) + 1;
		buf.pb(d);
	}
	sort(ALL(buf));
	while( SZ(buf) >= 2 ){
		if(buf.back() + buf[SZ(buf)-2] <= k) break;
		ans++;
		buf.pop_back();
	}
	return buf.back();
}
int main(void){
	scanf("%d %d", &n, &k);
	rep1(i, 1, n){
		int u, v; scanf("%d %d", &u, &v);
		edge[u].pb(v);
		edge[v].pb(u);
	}
	rep1(i, 1, n+1) if(SZ(edge[i]) >= 2){
		dfs(i, 0); break;
	}
	printf("%d\n", ans);
	return 0;
}
