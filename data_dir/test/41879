#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <ctime>

using namespace std;

int is_parrent[1600];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int n, k;
    cin >> n >> k;

    srand(time(0));
    vector<int> possible;
    for (int i = 0; i < n; ++i)
        possible.push_back(i+1);

    while(true)
    {
        set<int> new_possible;
        for (int _ = 0; _ < 30; ++_)
        {
            int a = possible[rand() % possible.size()];
            int c;
            while(true)
            {
                int cc = possible[rand() % possible.size()];
                if (a != cc)
                {
                    c = cc;
                    break;
                }
            }
            for (int i = 0; i < possible.size(); ++i)
            {
                int b = possible[i];
                if (b == a || b == c)
                    continue;
                cout << "? " << a << " " << b << " " << c << endl;
                string s;
                cin >> s;

                if (s == "Yes")
                    new_possible.insert(b);
            }
        }
        if (new_possible.size() == 0)
            continue;
        possible = vector<int>(new_possible.begin(), new_possible.end());
        if (possible.size() == 1)
        {
            cout << "! " << possible[0] << endl;
            return 0;
        }

    }
}
/*




*/
