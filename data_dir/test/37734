#include<iostream>
#include<stdio.h>
#include<string>
#include<map>
#include<algorithm>
#include<vector>
using namespace std;
class state{
    public:
    string x;
    int score,miss,goals;
    state(string str,int a,int b,int c){
        x=str;
        score=a;
        miss=b;
        goals=c;
    }
    bool operator<(const state & a)const{
        if(score!=a.score)
            return score>a.score;
        if(goals-miss!=a.goals-a.miss)
            return goals-miss>a.goals-a.miss;
        if(goals!=a.goals)
            return goals>a.goals;
    }
};
map<string,int>mp;
int n;
char x[100][100];
int a,b;
char first[100],second[100];
int score[100];
int miss[100];
int goals[100];
int main(){
    scanf("%d",&n);
    int s=n;
    for(int i=0;i<n;++i){
        scanf("%s",&x[i]);
        mp[x[i]]=i;
    }
    n=n*(n-1)/2;
    for(int i=0;i<n;++i){
        scanf(" %[^-]-%s",first,second);
        scanf("%d:%d",&a,&b);
        int A=mp[first];
        int B=mp[second];
        goals[A]+=a;
        goals[B]+=b;
        miss[B]+=a;
        miss[A]+=b;
        if(a==b){
            ++score[A];
            ++score[B];
        }
        else if(a>b)
            score[A]+=3;
        else score[B]+=3;
    }
    vector<state>v;
    for(int i=0;i<s;++i)
        v.push_back(state(x[i],score[mp[x[i]]],miss[mp[x[i]]],goals[mp[x[i]]]));
    sort(v.begin(),v.end());
    vector<string>g;
    for(int i=0;i<s/2;++i)
        g.push_back(v[i].x);
    sort(g.begin(),g.end());
    for(int i=0;i<g.size();++i)
        cout<<g[i]<<endl;
}