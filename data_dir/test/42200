#include <stdio.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <assert.h>
#include <queue>
#include <map>
#include <string.h>
#include <string>
#include <set>
#include <memory.h>
#include <functional> 
using namespace std;
#define ll long long

const int N = 300005;

int dsu[N];

vector<int> ch[N];
int f(int x) {
	if (x == dsu[x]) {
		return x;
	}
	return dsu[x] = f(dsu[x]);
}

void merge(int x, int y) {
	x = f(x), y = f(y);
	if (x != y) {
		if (x > y) {
			swap(x, y);
		}
		dsu[x] = y;
	}
}

void dfs(vector<int> &ret,int node, int n) {
	if (node <= n) {
		ret.push_back(node);
		return;
	}
	for (int i = 0; i < ch[node].size(); ++i) {
		int u = ch[node][i];
		dfs(ret, u, n);
	}
}
void solve() {
	int t; scanf("%d", &t);
	while(t--) {
		int ang;
		scanf("%d", &ang);
		ang *= 2;
		int ret = -1;
		for (int n = 3;n<=360; ++n) {
			int alpha = 180 * (n - 2);
			
			if (alpha%n != 0) {
				continue;
			}
			alpha /= n;
			int u =  180- alpha;
			alpha *= 2;
			if (u > 0 ) {
				alpha = alpha - ang;
				
				if (alpha>=0 && alpha%u == 0) {
					ret = n;
					break;
				}
			}
			else {
				break;
			}
		}
		printf("%d\n", ret);
	}
}

int main() {
	//freopen("input.txt", "r", stdin);
	solve();
}