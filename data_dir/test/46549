#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7;
char s[N];
int n;
int a[N],b[N];

int main () {
	scanf("%s",s + 1);
	n = strlen(s + 1);
	int ok = 1;
	for(int i = 1; i <= n; i++){
		if(s[i] != '7'){
			if(s[i] > '7') ok = 0;
			break;
		}
	}
	if(n % 2 == 0){
		for(int i = 1; i <= n / 2; i++){
			if(s[i] != '7'){
				if(s[i] > '7') ok = 0;
				else ok = 2;
				break;
			}
		}
		if(ok == 1){
			for(int i = n / 2 + 1; i <= n; i++){
				if(s[i] != '4'){
					if(s[i] > '4') ok = 0;
					else ok = 2;
					break;
				}
			}
		}
	}
	if((n & 1) || !ok){
		int len = n / 2 + 1;
		for(int i = 1; i <= len; i++){
	    	printf("4");
		}
		for(int i = 1; i <= len; i++){
			printf("7");
		}
		return 0;
	}
	for(int i = 1; i <= n; i++){
		a[i] = a[i - 1];
		b[i] = b[i - 1];
		if(s[i] == '4') a[i]++;
		if(s[i] == '7') b[i]++;
	}
	if(a[n] == n / 2 && b[n] == n / 2){
		printf("%s",s + 1);
		return 0;
	}
	int mx = -1,cur = 0;
	int c4 = 0,c7 = 0;
	for(int i = 1; i <= n; i++){
		int n4 = a[i - 1];
		int n7 = b[i - 1];
		if(n4 + n7 != i - 1) break;
		bool ok = 1;
		if(s[i] < '4'){
			n4++;
			if(n4 <= n / 2 && n7 <= n / 2){
				mx = i - 1;
				cur = 4;
				c4 = n4;
				c7 = n7;
				ok = 0;
			}
		}
		if(ok && s[i] < '7'){
			n7++;
			if(n4 <= n / 2 && n7 <= n / 2){
				mx = i - 1;
				cur = 7;
				c4 = n4;
				c7 = n7;
			}
		}
	}
	for(int i = 1; i <= mx; i++) printf("%c",s[i]);
	printf("%d",cur);
	while(c4 < n / 2){
		printf("4");
		c4++;
	}
	while(c7 < n / 2){
		printf("7");
		c7++;
	}

return 0;
}

