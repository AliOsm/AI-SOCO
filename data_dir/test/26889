/*"Everything in the universe is balanced. Every disappointment
   you face in life will be balanced by something good for you!
                Keep going, never give up."            */

#include "bits/stdc++.h"
using namespace std;

#define ll long long int
#define rep(i,a,b) for(int i=a; i<=b; ++i)
#define repd(i,a,b) for(int i=a; i>=b; --i)
#define nl '\n'
#define pb push_back
#define all(a) a.begin(),a.end()
#define P pair<ll,ll> 
#define F first
#define S second
const ll N=1e6+9;
const ll mod=1e9+7;
ll powerk(ll x, ll y);
ll mul(ll x, ll y);
ll add(ll x, ll y);
ll sub(ll x, ll y);

ll sa,sb,sc,aa[N],t[N];
ll dp[105][105][105];
string a,b,c;

void kmp(){
  aa[0]=0;
  ll j = 0, i = 1 ;
  while(i<=sc){
    if(c[j]==c[i]){
      aa[i] = j+1;
      j++;i++;
    }
    else if(j>0){
      j = aa[j-1];
    }
    else if(j==0){
      aa[i]=0;
      i++;
    }
  }
}
 
void kmp1(){
  int i=0,j=-1;
  t[0]=-1;
  for(i=1;i<sc;i++){
    while(j>=0&&c[i-1]!=c[j])j=t[j];
    j++;
    t[i]=j;
  }
}

ll go(ll p, ll q, ll r){
  if(r>=sc)return -1e6;
  if(p>=sa or q>=sb)return 0;
  //cout<<p<<" "<<q<<" "<<r<<nl;
  //assert(dp[p][q][r]);
  ll &ans = dp[p][q][r] ;
  //ans = 300;
  if(ans!=-1)return ans ;
  ans = max(go(p+1,q,r),go(p,q+1,r));
  if(a[p]==b[q]){
    ll rr =  r;
    while(rr>0 && a[p]!=c[rr])rr=aa[rr-1];
    if(rr==0){
      if(a[p]!=c[rr])rr--;
    }
    ans = max(ans,1+go(p+1,q+1,rr+1));
  }
  return ans;

}


void solve()
{    
  ll n,m;
  cin>>a>>b>>c;
  sa = a.size();
  sb = b.size();
  sc = c.size();
  //cout<<sa<<sb<<sc<<nl;
 // return;
  kmp();
  kmp1();
  //rep(i,0,sc-1)cout<<aa[i]<<" ";cout<<nl;
  //rep(i,0,sc-1)cout<<t[i]<<" ";cout<<nl;
  memset(dp,-1,sizeof dp);
  ll ans = go(0,0,0);
  //cout<<ans<<nl;
  if(!ans)cout<<ans<<nl;
  else{
    ll p=0,q=0,r=0;
    while(ans>0){
      
      ll n=go(p+1,q,r);
      ll m=go(p,q+1,r);
      ll rr,k=-1e6; 
      if(a[p]==b[q]){
        rr =  r;
        while(rr>0 && a[p]!=c[rr])rr=aa[rr-1];
        if(rr==0){
          if(a[p]!=c[rr])rr--;
        }
        k = 1+  go(p+1,q+1,rr+1);
      }
      if(n>=m && n>=k)p++;
      else if(m>=n && m>=k)q++;
      else{
        cout<<a[p];
        p++;q++;r=rr+1;
        ans--;
      }
    }
  }
}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll t=1;
    //pre();
    //cin>>t;
    while(t--)
    {
      solve();
    }  
}
ll mul(ll x, ll y){return (x*y)%mod;}
ll add(ll x, ll y){return (x+y)%mod;}
ll sub(ll x, ll y){return (x-y+mod)%mod;}
ll powerk(ll x, ll y)
{
  if(y==0)return 1;
  if(y==1)return x%mod;
  if(y&1)
    return ((powerk((x*x)%mod, y/2)%mod)*x)%mod;
  else return powerk((x*x)%mod,y/2)%mod;
}

// Xorawar