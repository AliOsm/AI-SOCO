#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define endl '\n'
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set=tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef vector<vector<int>> matrix;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=5e5+123;
const int M=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

int a[N],b[N],cnt[N],d[N],f[N],p2[N],e=0;

map<int,int>id;

int get_id(int x){
    if(id[x])return id[x];
    return id[x]=++e;
}

main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n,m;
    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        a[i]=get_id(a[i]);
        cnt[a[i]]++;
    }
    for(int i=1;i<=n;i++){
        cin>>b[i];
        b[i]=get_id(b[i]);
        cnt[b[i]]++;
        if(b[i]==a[i])d[a[i]]++;
    }
    cin>>m;
    f[0]=1;
    p2[0]=1;
    for(int i=1;i<=n+n;i++){
        f[i]=f[i-1];
        p2[i]=(p2[i-1]*2ll)%m;
        if(i&1){
            f[i]=(1ll*f[i]*i)%m;
        }
        else{
            f[i]=(1ll*f[i]*i>>1)%m;
        }
    }
    ll ans=1;
    for(int i=1;i<=e;i++){
        int cur=(1ll*f[cnt[i]]*p2[(cnt[i]>>1)-d[i]])%m;
        assert(cnt[i]/2>=d[i]);
        ans=(1ll*cur*ans)%m;
    }
    cout<<ans;
    return 0;
}
