//**KEEP IT SHORT AND SIMPLE**
#include <bits/stdc++.h>
#define IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define REP(i,a,b) for (int i = a; i < b; i++)
#define NL '\n'
#define F first
#define S second
#define dot(a, b) (conj(a) * (b)).real()
#define cross(a, b) (conj(a)* (b)).imag()
using namespace std;
typedef long long ll;
typedef long double ld;
typedef bool bl;
typedef vector < vector<long long> > vvl;
typedef vector <long long> vll;
typedef pair <long long, long long> pll;
typedef map <long long, long long> mll;
typedef map <long long, bool> mlb;
typedef priority_queue<long long, vector<long long>, greater<long long> > minPq;
typedef tuple<ll, ll, ll> line;
typedef complex<double> point;
const double pi = 2 * acos(0.0);
const int OO = 0x3f3f3f3f;
using namespace std;
int main()
{
    IO
    map<char, int>mp1;
    map<int, char>mp2;
    int a = 0;
    char c = 'a';
    for(int i = 0;i < 26;i++)       mp2[i] = c++;
    for(char i = 'a';i <= 'z';i++)  mp1[i] = a++;
    int n, x, y;
    bl carry = 0;
    string s, t;
    cin >> n >> s >> t;
    deque<int>dq1, dq2;
    for(int i = n - 1;i >= 0;i--)
    {
        x = mp1[s[i]] + mp1[t[i]] + carry;
        if(x > 25)  dq1.push_front(x - 26), carry = 1;
        else        dq1.push_front(x), carry = 0;
    }
    if(carry)   dq1.push_front(1);
    for(int i = dq1.size() - 1;i >= 0;i--)
    {
        if(i && dq1[i - 1] & 1)
        {
            dq1[i] += 26;
            dq1[i - 1]--;
        }
        dq2.push_front(dq1[i] / 2);
    }
    y = (dq2.size() != n);
    REP(i, y, dq2.size())   cout << mp2[dq2[i]];
    return 0;
}
