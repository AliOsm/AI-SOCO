#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
typedef long long ll;
const int _p=998244353;

#define debug(x) cout<<#x<<"="<<x<<endl
#define pb push_back
#define mem(a,x) memset(a,x,sizeof(a))

ll Pow(ll x,ll k) {
	ll ans=1;
	for (; k; k>>=1,(x*=x)%=_p) if (k&1) (ans*=x)%=_p;
	return ans;
}

const int N=300005; bool op; ll ans=0;
int n,T,x,y,c[N],num[3],m; vector<int> V[N];

bool dfs(int x,int p,int cc) {
	c[x]=cc,num[cc]++;
	rep(i,0,(int)V[x].size()-1) {
		if (V[x][i]==p) continue;
		if (c[V[x][i]]==-1 && !dfs(V[x][i],x,cc^1) || c[V[x][i]]+c[x]!=1) return 0;
	}
	return 1;
}

int main(){
	scanf("%d",&T);
	while (T--) {
		scanf("%d%d",&n,&m),ans=1;
		rep(i,1,n) V[i].clear();
		rep(i,1,m) scanf("%d%d",&x,&y),V[x].pb(y),V[y].pb(x);
		rep(i,1,n) c[i]=-1;
		op=1;
		rep(i,1,n) {
			if (c[i]!=-1) continue;
			num[0]=num[1]=0;
			if (!dfs(i,0,1)) {
				printf("0\n"),op=0; 
				break;
			}
			ans*=(Pow(2,num[1])+Pow(2,num[0]))%_p,ans%=_p;
		}
		if (op) printf("%lld\n",ans);
	}
	
	return 0;
}
