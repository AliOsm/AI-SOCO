#include <cstdio>
#include <cstring>
#include <set>
#include <string>
#include <iostream>
#include <cmath>
#include <vector>
#include <map>
#include <fstream>
#include <sstream>
#include <stack>
#include <time.h>
#include <queue>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define sqr(x) ((x)*(x))
#define PB push_back
#define MP make_pair
map<string,int>::iterator it;
#define Tr(it, x) for(it = x.begin(); it!=x.end();it++)
typedef long long lld;
typedef pair<int,int> PII;
#define SZ(x) x.size()
#define SORT(x) sort(s.begin(),s.end())
#define REP(i,n) for(int i=0;i<n;i++)
#define REV(s) reverse(s.begin(),s.end())
#define fill(x, y) memset(x, y, sizeof(x))
inline int two(int x) {return 1<<x; }
inline lld TWO(int x) {return (lld)1<<x ;}
template <class T>  void _Min(T &x, T y){if(y < x || x==-1) x = y;}
template <class T>  void Min(T &x, T y){if(y < x) x = y;}
template <class T>  void Max(T &x,T y){if(y > x) x = y;}
template <class T>  T _abs(T x) {return x > 0 ? x : -x ;}
template <class T>  T gcd(T a,T b){return !b ? a : gcd(b,a%b);}
const int maxn = 200010;
const int mod = 1000000007;
const int inf  = 1000000000 * 2 + 10;
int c[maxn];
void update(int x,int d)
{
    for(;x<maxn;x+=x&-x) c[x] += d;
}
int sum(int x)
{
    int ans = 0;
    for(;x>0;x-=x&-x) ans += c[x];
    return ans;
}
int a[maxn] , b[maxn];
int main()
{
    int n , q;
    cin >>n >> q;
    for(int i = 1; i <= n; i++)  scanf("%d",&a[i]);
    sort(a+1,a+n+1);
    REP(i,q)
    {
        int l , r;
        cin >> l >> r;
        update(l,1);
        update(r+1,-1);
    }
    for(int i = 1; i <= n; i++)
    {
        b[i] = sum(i);
    }
    sort(b+1,b+n+1);
    lld ans = 0;
    for(int i = 1; i <= n; i++) ans += (lld)a[i] * b[i];
    printf("%I64d\n",ans);
    return 0;
}