//ITNOA
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <queue>
#include <fstream>
#include <cstring>
#include <cstdlib>
#include <iomanip>

using namespace std;

#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;


#define rep(i, s, e) for(int i = s; i < e; i ++)
#define int long long
#define X first
#define Y second

typedef long long ll;
typedef long double ld;

const int maxN = 500*1000 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 500;
const int maxL = 20;




int32_t main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	int n, x, y, T; cin >> n >> x >> y >> T;
	string s; cin >> s;

	int sum = 0;
	for(int i = 0; i < n; i ++)
	{
		if(s[i] == 'w')
			sum += y;
		if(sum > T) break;
	}

	if(sum + (n-1) * x + n <= T)
	{
		cout << n << endl;
		return 0;
	}

	sum = 0;
	
	vector< pair<int,int> > v1, v2;
	for(int i = 0; i < n; i ++)
	{
		sum += (s[i] == 'w') * y + 1;

		if(sum + i * x <= T)
			v1.push_back(make_pair(sum + i * x, i+1));
		else
			break;


		if(sum + 2 * i * x <= T)
			v2.push_back(make_pair(sum + 2 * i * x, i+1));
	}

	int ans = v1.size();

	sum = 0;
	for(int i = n-1; i >= 0; i --)
	{
		sum += (s[i] == 'w') * y + 1;
		if(sum + (n-i) * x <= T)
		{
			//cout << T - sum - (n-i) * x << endl;
			int ps = lower_bound(v2.begin(), v2.end(), make_pair(T - sum - (n-i) * x, mod)) - v2.begin();
			ps --;
			if(ps >= 0)
				ans = max(ans, v2[ps].Y + (n-i));
		}
		else
			break;

		if(sum + 2*(n-i)*x <= T)
		{
			int ps = lower_bound(v1.begin(), v1.end(), make_pair(T - sum - 2 * (n-i) * x, mod)) - v1.begin();
			ps --;
			if(ps >= 0)
				ans = max(ans, v1[ps].Y + (n-i));	
		}
	}


	cout << ans << endl;
	
	return 0;
}
