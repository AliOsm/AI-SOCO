#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
#include <bitset>
#include <complex>
#include <random>
#include <chrono>
#include <functional>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pli pair<ll, int>
#define pil pair<int, ll>
#pragma GCC optimize ("O3")
//#define x first
//#define y second
const int mod = (1e9) + 7, mod2 = 998244353;
const double eps = 1e-10;
const int siz = 2e5 + 5, siz2 = 19, lg = 31, block = 317, block2 = 1000, mxv = 5e5;

int q, n, co1[siz], co2[siz], lastunused;

void adjust() {
	while (lastunused != 0 && co2[lastunused]) {
		lastunused--;
	}
}

int main()
{
	scanf("%d", &q);
	while (q--) {
		scanf("%d", &n);
		for (int i = 0; i < n; i++) {
			int v;
			scanf("%d", &v);
			co1[v]++;
		}
		for (int i = 1; i <= n; i++) {
			co2[co1[i]]++;
		}
		ll tot = 0;
		for (int i = n; i >= 1; i--) {
			lastunused = i - 1;
			while (co2[i] > 1) {
				adjust();
				if (lastunused != 0) {
					co2[lastunused]++;
					co2[i]--;
				}
				else {
					break;
				}
			}
			tot += (bool)co2[i] * i;
		}
		printf("%I64d\n", tot);
		for (int i = 1; i <= n; i++) {
			co1[i] = co2[i] = 0;
		}
	}
	return 0;
}
