#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <cstring>
#include <cctype>

using namespace std;

#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)1e2 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;

int dp[Z][3], a[Z];

int main() {
	//files;
	SWS;
	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) {
        cin >> a[i];
	}
	for (int i = 1; i <= n; ++i) {
        dp[i][0] = max(dp[i-1][1], max(dp[i-1][2], dp[i-1][0]));
        if (a[i] == 1 || a[i] == 3)
            dp[i][1] = max(dp[i-1][0], dp[i-1][2]) + 1;
        if (a[i] == 2 || a[i] == 3)
            dp[i][2] = max(dp[i-1][0], dp[i-1][1]) + 1;
	}
	cout << n - max(dp[n][0], max(dp[n][1], dp[n][2]));
	return 0;
}
