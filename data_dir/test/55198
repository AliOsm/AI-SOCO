#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
#include <memory.h>
#include <complex>
#include <time.h>
#pragma comment(linker, "/STACK:100000000")
using namespace std;

#define mp make_pair
#define pb push_back
#define ll long long
#define sz(x) (int)(x).size()

#define ull unsigned long long


int main() {
    //freopen("input.txt","rt",stdin);
    //freopen("cyclic.in","rt",stdin);
    //freopen("cyclic.out","wt",stdout);

	ull n;
	cin >> n;
	ll l = -1, r = 1000000000LL;
	if(n == 0) {
		cout << "0 0" << endl;
		return 0;
	}

	while(l + 1LL < r) {
		ll mid = (l + r) >> 1;
		ll ar = ((mid * (mid + 1LL)) >> 1) * 6LL + 1LL; // столько надо сделать шагов, чтобы оказаться в круге mid
		if(n >= ar) l = mid;
		else r = mid;
	}
	ll num = r; // на таком кругу
	ll st = ((num * (num - 1LL)) >> 1) * 6LL + 1LL; // начало круга
	ll len = num;

	ll x = num * 2LL - 1LL;
	ll y = 2LL;

	
	if(st < n) {
		len--;
		if(st + len < n) {
			x -= (len);
			y += (len) * 2LL;
			st += len;
		}
		else {
			x -= (n - st);
			y += (n - st) * 2LL;
			st = n;
		}
		len++;
	}
	if(st < n) {
		if(st + len < n) {
			x -= (len) * 2LL;
			y += 0;
			st += len;
		}
		else {
			x -= (n - st) * 2LL;
			y += 0;
			st = n;
		}
	}
	if(st < n) {
		if(st + len < n) {
			x -= (len);
			y -= (len) * 2LL;
			st += len;
		}
		else {
			x -= (n - st);
			y -= (n - st) * 2LL;
			st = n;
		}
	}
	if(st < n) {
		if(st + len < n) {
			x += (len);
			y -= (len) * 2LL;
			st += len;
		}
		else {
			x += (n - st);
			y -= (n - st) * 2LL;
			st = n;
		}
	}
	if(st < n) {
		if(st + len < n) {
			x += (len) * 2LL;
			y += 0;
			st += len;
		}
		else {
			x += (n - st) * 2LL;
			y += 0;
			st = n;
		}
	}
	if(st < n) {
		len++;
		if(st + len < n) {
			x += (len);
			y += (len) * 2LL;
			st += len;
		}
		else {
			x += (n - st);
			y += (n - st) * 2LL;
			st = n;
		}
		len--;
	}
	if(st < n) {
		assert(0);
	}

	cout << x << " " << y << endl;

	//cout << st << endl;
    return 0;
}
