#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b>a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }
const int N = 0, M = 0, Z = 1e9 + 7, ms63 = 0x3f3f3f3f;
int n;
#include<unordered_map>//unordered_map
map<string, int>mop;
map<int, string>mup;
void init()
{
	for (int i = 1989; i <= 29999; ++i)
	{
		string s = "";
		int tmp = i;
		while (1)
		{
			s = (char)(tmp % 10 + 48) + s;
			if (!mop.count(s))
			{
				mop[s] = i;
				mup[i] = s;
				break;
			}
			tmp /= 10;
		}
	}
}
char s[12];
int main()
{
	//init();
	while (~scanf("%d", &n))
	{
		while (n--)
		{
			scanf("%s", s);
			int l = strlen(s);
			int x = atoi(s + 4);
			int ten = 10;
			int sum = 0;
			for (int i = 4; i < l - 1; ++i)
			{
				sum += ten;
				ten *= 10;
			}
			//求出的sum表示我们要达到当前这个缩写长度，至少需要的前缀增量
			while (x - 1989 < sum)x += ten;
			printf("%d\n", x);
		}
	}
	return 0;
}