#include <iostream>
#include <cmath>
#include <string>
#include <conio.h>
#include <stdlib.h>
#include <cstring>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <ctime>
#include <iomanip>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int) 2e5 + 111;
const int inf = (int) 1e9 + 111;
const ll llinf = (ll) 1e18 + 5;
const int MOD = (int) 1e9 + 7;

#define int long long

signed main() {
  srand(time(0));
  //files;
  SWS;

  int n;
  cin >> n;
  if (n <= 2) {
    cout << n;
    return 0;
  }
//  vector<int> p(n);
//  for (int i = 0; i < n; ++i) {
//    p[i] = i + 1;
//  }
//  vector<int> a;
//  do {
//    for (int i : p) {
//      a.pb(i);
//    }
//  } while (next_permutation(all(p)));
//
//  map<vector<int>, int> ans;
//
//  for (int l = 0; l < sz(a) - n + 1; ++l) {
//    int r = l + n - 1;
//    int sum = 0;
//    for (int j = l; j <= r; ++j) {
//      sum += a[j];
//    }
//    if (sum == n * (n + 1) / 2) {
//      vector<int> cur;
//      for (int j = l; j <= r; ++j) {
//        cur.pb(a[j]);
//      }
//      ++ans[cur];
//    }
//  }
//  map<int, int> stat;
//  for (auto[key, value] : ans) {
//    for (auto x : key) {
//      cout << x << " ";
//    }
//    cout << "- " << value << endl;
//    ++stat[value];
//  }
//  cout << endl;
//  for (auto[key, value] : stat) {
//    cout << key << " " << value << endl;
//  }

  deque<int> coef;
  coef.pb(3);
  coef.pb(3);
  cout << endl;
  for (int i = 4; i <= n; ++i) {
    coef[0]--;
    coef.pf(i);
  }

  int d = 1;
  int cnt = 0;
  for (int &i : coef) {
    ++cnt; i *= d;
    if (cnt != sz(coef) - 1)
      d *= n;

    i %= 998244353;
    d %= 998244353;
    n--;
  }
  int res = 0;
  for (int i = 0; i < coef.size(); ++i) {
    res += (i + 1) * coef[i];
    res %= 998244353;
  }
  cout << res;
  return 0;
}