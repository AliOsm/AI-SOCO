# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define scn(x) scanf("%I64d",&x)
# define scan(x) scanf("%d",&x)
# define print(x) printf("%d ",x)
# define prnt(x) printf("%I64d ",x);
# define eol printf("\n")
# define IOS ios_base :: sync_with_stdio(0)
# define pe "Possible"
# define ie "Impossible"
# define halt(...) {fo << (__VA_ARGS__) << '\n';exit(0);}
# define rep1(n) for (int qwerty = 1;qwerty <= n;++qwerty)
# define pp(n) cerr << #n << " = " << n << '\n'
# define ppp(v) for (auto it : v) cerr << it << ' ';cerr << '\n'
# define aprint(x,y,z) for (int i = x;i <= y;++i) cerr << z[i] << ' ';cerr << '\n'
# define rep(n) for (int i = 1;i <= n;++i)
# define CF
# define int ll
const int mod = 1e9 + 7;
ll s[55];
ll dp[1 << 20];
int inv[55];
int pow(int a,int b,int mod)
{
    int ans = 1;
    while (b)
    {
        if (b&1) ans = (1ll * ans * a) % mod;
        a = (1ll * a * a) % mod;
        b /= 2;
    }
    return ans;
}
int comb(ll S,int k)
{
    if (!(0 <= k && k <= S)) return 0;
    ll ans = inv[k];
    ll mul = S % mod;
    for (int i = 0;i < k;++i)
        ans = (ans * mul) % mod,mul = (mul + mod - 1) % mod;
    return ans;
}
signed main(void)
{
    #ifdef CF
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n;
    ll S;
    fi>>n>>S;
    for (int i = 1;i <= n;++i) fi>>s[i];
    const int N = 1 << n;
    for (int i = 1;i < N;++i)
        for (int j = 0;j < n;++j)
            if ((i >> j) & 1)
                dp[i] = dp[(1 << j) ^ i] + s[j + 1];
    inv[0] = 1;
    for (int i = 1;i <= n;++i)
        inv[i] = (1ll * inv[i-1] * pow(i,mod - 2,mod)) % mod;
    ll ans = 0;
    for (int i = 0;i < N;++i)
    {
        int how = __builtin_popcount(i)&1 ? -1 : 1;
        ans += how * comb(S - dp[i] + n - 1 - __builtin_popcount(i),n - 1);
        ans = (ans + mod + mod) % mod;
    }
    fo << ans << '\n';
    return 0;
}


