
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz
#define endl '\n'

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 100;
const int MN = 1e5 + 10;

vector<int>edges[MN];
int n;
int sz[MN];
ld pt[MN];

void input()
{
	boost;
	int t;
	cin >> n;
	for(int i=1;i<n;++i){
		cin >> t;
		--t;
		edges[t].push_back(i);
		edges[i].push_back(t);
	}
}

void dfs1(int s , int pr)
{
	for(int i=0;i<edges[s].size();++i){
		if(edges[s][i] == pr) continue;
		dfs1(edges[s][i] , s);
		sz[s] += sz[edges[s][i]];
	}
	++sz[s];
}

void dfs2(int s, int pr)
{
	for(int i=0;i<edges[s].size();++i){
		if(edges[s][i] == pr) continue;
		pt[edges[s][i]] = pt[s] + 1 + (ld)0.5*(sz[s]-1-sz[edges[s][i]]);
		dfs2(edges[s][i] , s);
	}
}

int main()
{
	boost;
	input();	
	dfs1(0 , -1);
	pt[0] = 1;
	dfs2(0, -1);
	for(int i=0;i<n;++i)
		cout << setprecision(10) << fixed << pt[i] << ' ';
	cout << endl;
	return 0;
}

