#include<bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int> >
#define mp make_pair
const int INF = 1e9+7;
const int MAXN = 3e6 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;

int n,k,x,cnt;
map <vector<pair<int,int> > , int> mpa;
long long ans;
void solve() {
	cin>>n>>k;
	for (int i=1; i<=n; i++){
		cin>>x;
		vector<pair<int,int> > v1;
		vector<pair<int,int> > v2;
		for (int j=2; j*j<=x; j++){
			cnt = 0;
			
			while (x % j == 0){
				cnt++;
				x/=j;
			}
			cnt%=k;
			if (cnt > 0)
			v1.pb({j , cnt});
		}
		if (x > 1) v1.pb({x , 1});
		for (int j=0; j<v1.size(); j++) v2.pb({v1[j].fr , k - v1[j].sc});
		ans+=mpa[v2];
		mpa[v1]++;
	}
	cout<<ans;
}
 
int main() {
    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
    cout.setf(ios::fixed), cout.precision(20);
 	//freopen("equal.in", "r", stdin);
	//freopen("equal.out", "w", stdout);
	int t;
	t = 1;	
	while (t > 0){
		t--;
		solve();
	}
	return 0;
}
