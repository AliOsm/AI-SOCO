/*...Part - 01...*/

#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <deque>
#include <iterator>
#include <bitset>
#include <assert.h>
#include <new>
#include <sstream>
//#include <bits/stdc++.h>
using namespace std ;

/*...Part - 02...*/

typedef long long               ll ;
typedef long double             ld ;
typedef unsigned long long      ull ;
typedef pair<int,int>           pii ;
typedef pair<ll,ll>             pll ;
typedef vector<int>             vi ;
typedef vector<ll>              vll ;
typedef vector<vector<int>>     vvi ;

int Int(){int x ; scanf("%d",&x) ; return x ;}
ll Long(){ll x ; scanf("%lld",&x) ; return x ;}

/*...Part - 03...*/
/*....Debugger....*/

#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it) {cout << endl ;}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
    cerr << *it << " = " << a << ' ' ;
    err(++it, args...);
}

/*...Part - 04...*/
/*...Needed to change according to problem requirements...*/

const int N          = (int)2e5 + 5 ;
const int maxN       = (int)1e6 + 6 ;
const ll  Mod        = (ll)1e9 + 7 ;
const int inf        = (int)2e9 ;
const ll  Inf        = (ll)1e18 ;

/*..........................................................*/
/*...Part - 05...*/

#define     debug(x)    cerr << #x << " = " << x << '\n' ;
#define     rep(i,b,e)  for(__typeof(e) i = (b) ; i != (e + 1) - 2 * ((b) > (e))  ; i += 1 - 2 * ((b) > (e)))
#define     Int         Int()
#define     Long        Long()
#define     all(x)      x.begin() , x.end()
#define     sz(x)       (int)x.size()
#define     ff          first
#define     ss          second
#define     pb          push_back
#define     eb          emplace_back
#define     mem(a)      memset(a , 0 ,sizeof a)
#define     memn(a)     memset(a , -1 ,sizeof a)

/*...Part - 06...*/
/*...... ! Code start from here ! ......*/


int par[N] , sp[N] , dp[N];

void make(){
    for(int i = 0 ; i < N ; ++i)par[i] = i ;
}
int Find(int s){
    return par[s] == s ? s : par[s] = Find(par[s]) ;
}

struct tree{
    int a , b , c ;
    bool operator<(const tree &p)const{
        return c < p.c ;
    }
} ;

vector< tree > g ;

std::vector< std::vector< pii > > v;

void span(int n){
    sort(all(g)) ;
    make() ;
    v.resize(n + 1) ;
    for(tree i : g){
        int x = Find(i.a) , y = Find(i.b) ;
        if(x != y){
            par[x] = y ;
            v[i.a].pb({i.b , i.c}) ;
            v[i.b].pb({i.a , i.c}) ;
        }
    }
}

void dfs(int s, int cur, int p = 0 ){
    int out = 1 ;
    for(pii i : v[s]){
        if(i.ff == p)continue ;
        out = 0 ;
        dfs(i.ff, i.ss, s) ;
        dp[s] = max(dp[s] , dp[i.ff]) ;
    }
    if(dp[s])dp[s] = max(dp[s] , cur) ;
    if(out or !dp[s])dp[s] = sp[s] ? cur : 0 ;
}


int main(){
    int test = 1 , tc = 0 ;
    while(test--){
        int n = Int , m = Int , k = Int ;
        int ff ;
        for(int i = 1 ; i <= k ; ++i){
            int f = Int ;
            ff = f ;
            sp[f] = 1 ;
        }
        for(int i = 1 ; i <= m ; ++i){
             int x = Int , y = Int , z = Int ;
             g.pb({x , y , z}) ;
        }
        span(n) ;
        dfs(ff , 0) ;
        for(int i = 1 ; i <= k ; ++i)cout << dp[ff] << " \n"[i == k] ;
    }
    return 0 ;
}

/*...Always look at the part - 04...*/
/*...............END................*/


