//Pham Huu Canh
//D. Distance in Tree
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define MP make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "d.inp"
#define foo "d.out"
#define MOD 1000000007

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;
#define nmax 50005

int child[nmax][505];
VI v[nmax];
int n, k;
ll res = 0;

void dfs(int x, int g){
    int i, y;
    child[x][0] = 1;
    fore(ite, v[x]){
        y = *ite;
        if (y == g) continue;
        dfs(y, x);
        fori(i, k)  res += (ll)child[x][i] * (ll)child[y][k - i - 1];
        fori(i, k)  child[x][i+1] += child[y][i];
    }
}

void input()
{
    int i, x, y;
    
    scanf("%d %d", &n, &k);
    repi(i, 2, n){
        scanf("%d %d", &x, &y);
        v[x].pb(y);
        v[y].pb(x);
    }
    
    dfs(1, 0);
    printf("%I64d", res);
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}

