#include<bits/stdc++.h>
using namespace std;

#define ll int

#define fr(i,a,b) for (ll i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (ll i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (ll i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (ll i = n - 1; i >= 0; i--)
#define fill(ar,val) memset(ar, val, sizeof(ar))
#define fill0(ar) fill((ar), 0)
#define debug(x) cout<<#x<<": "<<x<<endl

#define ld long double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef pair<int, int> ii;
typedef pair<ii, int> iii;
typedef vector<ii> vii;
typedef vector<int> vi;

#define INF 1000000000000000000
#define PI 3.14159265358979323846L
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
template<class T>
T rand() {
    return uniform_int_distribution<T>()(rng);
}

ll times = 0;

ll gcd(ll a, ll b)
{
	if(b==0)
		return a;
	return gcd(b,a%b);
}

bool query(ll x)
{
	times++;

	cout << "> " << x << endl;
	fflush(stdout);
	ll ans;
	cin >> ans;
	fflush(stdout);

	if(ans)
		return true;
	return false;
} 

ll binSearch(ll st, ll en)
{
	if(st==en)
	{
		if(query(st-1))
			return st;
		return st-1;
	}

	ll mid = (st+en)/2;

	if(query(mid))
		return binSearch(mid+1,en);
	return binSearch(st,mid);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif

    ll n;
    cin >> n;

    ll last = binSearch(0,1000000000);

    vector<ll> num;

    ll x = 60-times;

    // srand(time(0));
    rep(i,x)
    {
    	ll xx = rand<ll>()%n;
    	xx++;
    	// if(i+1>n)
    	// 	break;
    	cout << "? " << xx << endl;
    	fflush(stdout);
    	ll ans;
    	cin >> ans;
    	fflush(stdout);

    	num.pb(ans);
    } 

    sort(num.begin(), num.end());
    unique(num.begin(), num.end());
    ll xxx = num[0];
  	
    ll anss = num[1] - num[0];
    fr(i,1,num.size()-1)
    {
  	  	ll xy = num[i] - num[i-1];
  	  	anss = gcd(anss,xy);
    }

    ll d = anss;

    ll a = last - ((n-1)*d);

    cout << "! " << a << " " << d << endl;
    fflush(stdout);
}
