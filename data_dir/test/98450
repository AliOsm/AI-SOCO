//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

const int N = 1e3 + 10;

char a[N][N];
int n, m, k, t, sx, sy, dx[4], dy[4], dis[N][N];
string p, w;

bool val(int x, int y){
    return (-1 < x && x < n && -1 < y && y < m);
}

bool emp(int x, int y){
    return (val(x, y) && a[x][y] != '*');
}

void dfs(int x, int y){
    for (int i = 0; i < 4; i ++){
        int nx = x + dx[i], ny = y + dy[i];
        if (emp(nx, ny) && t + 1 + dis[nx][ny] <= k){
            p += w[i];
            t ++;
            dfs(nx, ny);
            return ;
        }
    }
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    cin >> n >> m >> k;
    for (int i = 0; i < n; i ++){
        for (int j = 0; j < m; j ++){
            cin >> a[i][j];
            if (a[i][j] == 'X'){
                sx = i;
                sy = j;
            }
        }
    }
    dx[0] = dy[2] = 1;
    dx[3] = dy[1] = -1;
    w = "DLRU";
    bool f = 0;
    for (int i = 0; i < 4; i ++)
        f |= emp(sx + dx[i], sy + dy[i]);
    if (k % 2 || !f)
        return cout << "IMPOSSIBLE", 0;
    for (int i = 0; i < N; i ++)
        for (int j = 0; j < N; j ++)
            dis[i][j] = N * N * N;
    queue < pair < int , int > > q;
    q.push({sx, sy});
    dis[sx][sy] = 0;
    while (!q.empty()){
        int x = q.front().first, y = q.front().second;
        q.pop();
        for (int i = 0; i < 4; i ++){
            int nx = x + dx[i], ny = y + dy[i];
            if (emp(nx, ny) && dis[x][y] + 1 < dis[nx][ny]){
                dis[nx][ny] = dis[x][y] + 1;
                q.push({nx, ny});
            }
        }
    }
    dfs(sx, sy);
    cout << p;
    return 0;
}
