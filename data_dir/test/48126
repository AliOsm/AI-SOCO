#include <bits/stdc++.h>
#define long long long

using namespace std ;

string s1, s2 ;
int  n ;

double solve(int curr , int pos1 , int pos2)
{
    if(curr == n) return pos1 == pos2 ;

    double ans = 0 ;

    vector<int > dir1 , dir2;

    if(s1[curr] == '?')
        dir1.push_back(1) , dir1.push_back(-1) ;
    else if(s1[curr] == '+')
        dir1.push_back(1) ;
    else dir1.push_back(-1) ;

    if(s2[curr] == '?')
        dir2.push_back(1) , dir2.push_back(-1) ;
    else if(s2[curr] == '+')
        dir2.push_back(1) ;
    else dir2.push_back(-1) ;

    double p1 = 1.0 / double(dir1.size());
    double p2 = 1.0 / double(dir2.size());

    for(int i = 0 ; i < dir1.size() ; i++)
        for(int j = 0 ; j < dir2.size() ; j++)
            ans += p1 * p2 * solve(curr + 1 , pos1 + dir1[i] , pos2 + dir2[j]) ;


    return ans ;

}
int main()
{
    ios_base :: sync_with_stdio(false) , cin.tie(nullptr) , cout.tie(nullptr) ;

    cin >> s1 >> s2 ;
    n = sizeof(s1) ;

    cout << setprecision(10) << solve(0 , 0 , 0) << '\n';


    return  0 ;
}