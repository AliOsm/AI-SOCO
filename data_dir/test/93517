#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
using namespace std;

#define ll long long
#define MP make_pair

#define sc(n) scanf("%d", &n)
#define sc2(a,b) scanf("%d%d", &a, &b)
#define sc3(a,b,c) scanf("%d%d%d", &a, &b, &c)

const int mod = 1e9 + 7;

int main()
{
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w+", stdout);

    ios_base::sync_with_stdio(false);

    int w = 0;
    int h = 0;
    int n = 0;
    cin >> w >> h >> n;

    set<int> x;
    set<int> y;
    multiset<int> lw;
    multiset<int> lh;

    x.insert(0);
    x.insert(w);

    y.insert(0);
    y.insert(h);

    lw.insert(w);
    lh.insert(h);

    for (int i = 0; i < n; ++i) {
        char t = '0';
        int v = 0;

        cin >> t >> v;

        if (t == 'H') {
            set<int>::iterator i1 = y.upper_bound(v);
            set<int>::iterator i2 = i1;
            i2--;

            int y1 = *i2;
            int y2 = *i1;

            multiset<int>::iterator j = lh.find(y2 - y1);
            lh.erase(j);

            lh.insert(v - y1);
            lh.insert(y2 - v);
            y.insert(v);
        } else {
            set<int>::iterator i1 = x.upper_bound(v);
            set<int>::iterator i2 = i1;
            i2--;

            int x1 = *i2;
            int x2 = *i1;

            multiset<int>::iterator j = lw.find(x2 - x1);
            lw.erase(j);

            lw.insert(v - x1);
            lw.insert(x2 - v);
            x.insert(v);
        }
        int a = *lw.rbegin();
        int b = *lh.rbegin();
        ll ans = 1LL * a * b;
        cout << ans << endl;
    }

    return 0;
}

















