#include <bits/stdc++.h>
using namespace std;

const int N = 100005;

int n, q, a[N], b[N], c[N], sz;
vector<int> cmp;

pair<int, int> t[4 * N];

inline pair<int, int> merg(pair<int, int> a, pair<int, int> b) {
    if (a.first > b.first) return a; else return b;
}

pair<int, int> go(int l, int r) {
    l += n;
    r += n;
    pair<int, int> result = {-1, 0};
    for (; l <= r; l = (l + 1) / 2, r = (r - 1) / 2) {
        if (l & 1) result = merg(result, t[l]);
        if (~r & 1) result = merg(result, t[r]);
    }
    return result;
}

void upd(int pos, int val) {
    pos += n;
    t[pos] = {val, pos - n};
    for (pos /= 2; pos > 0; pos /= 2) {
        t[pos] = merg(t[pos<<1], t[pos<<1|1]);
    }
}

long long fnd(int l, int r) {
    if (r <= l) return 0;
    auto cur = go(l, r - 1); 
    long long result = 1LL * (cur.second - l + 1) * (r - cur.second) * cur.first;
    result += fnd(l, cur.second);
    result += fnd(cur.second + 1, r);
    return result;
}

int main() {
    for (int i = 0; i < 4 * N; ++i) 
        t[i] = {-1, 0};
    scanf("%d %d", &n, &q);
    for (int i = 0; i < n; ++i) {
        scanf("%d", a + i);
    }
    for (int i = 0; i < n; ++i) {
        upd(i, abs(a[i] - a[i + 1]));
    }
    while (q--) {
        int l, r;
        scanf("%d %d", &l, &r);
        --l; --r;
        long long result = fnd(l, r);
        printf("%I64d\n", result);
    }
    return 0;
}
