#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
#define N 100005
const int MOD = 1e9 + 7;

int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};
string toBinary(ll num)
{
    string tmp = "";
    while(num)
    {
        char added = (num&1)+'0';
        tmp+=(added);
        num>>=1;
    }
    reverse(tmp.begin(),tmp.end());
    return tmp;
}
//----------------------- ------------------------
int n,m; ll cst[70],ans[70],dp[70]; string b;
ll solve(int idx)
{
    if(idx == sz(b)) return 0;
    if(dp[idx] != -1) return dp[idx];
    if(b[idx]=='0')
            return dp[idx] = min(ans[sz(b)-idx-1],solve(idx+1));
    return dp[idx] = ans[sz(b)-idx-1]+solve(idx+1);
}
int main()
{
#ifndef ONLINE_JUDGE
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    sc(n); sc(m);
    b = toBinary(m);
    for(int i=0;i<n;++i) sc(cst[i]);
    string tot = toBinary(1<<(n-1));
    if(31 > sz(b))
    {
        string tmp; tmp.resize(31-sz(b),'0');
        b = tmp + b;
    }
    for(int i=n;i<=35;++i) cst[i] = OO;
    ans[0] = cst[0];
    for(int i=1;i<=35;++i) ans[i] = min(2*ans[i-1],cst[i]);
    mem(dp,-1);
    //for(int i=0;i<31;++i) printf("%lld ",ans[i]);
    //cout<<b<<endl;
    //cout<<sz(b)<<endl;;
    cout<<solve(0);
    return 0;
}
