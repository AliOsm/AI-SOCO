/// In The Name Of God

#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * 1ll * (x))
#define all(x) x.begin(), x.end()

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)200 + 7;
const int M = (int)1000 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

void add(int &x, int y) {
	x += y;
	if (x >= mod) x -= mod;
}
int sum(int x, int y) {
	add(x, y);
	return x;
}

int n, k;
int a[N];
int dp[N][N][M];

int main() {
	#ifdef IOI2018
		freopen ("in.txt", "r", stdin);
	#endif
	Kazakhstan
	cin >> n >> k;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
	}
	sort (a + 1, a + 1 + n);
	dp[1][1][0] = dp[1][0][0] = 1;
	for (int i = 1; i < n; i++) {
		for (int j = 0; j <= i; j++) {
			for (int x = 0; x <= k; x++) {
				if (!dp[i][j][x]) continue;
				int bal = a[i + 1] - a[i];
				if (j) { /// close or continue
					int nxt = x + j * bal;
					if (nxt <= k) {
						add(dp[i + 1][j - 1][nxt], dp[i][j][x] * 1ll * j % mod);
						add(dp[i + 1][j][nxt], dp[i][j][x] * 1ll * j % mod);
					}
				}
				///close and open
				{
					int nxt = x + j * bal;
					if (nxt <= k) add(dp[i + 1][j][nxt], dp[i][j][x]);	
				}
				///open
				{
					int nxt = x + j * bal;
					if (nxt <= k) add(dp[i + 1][j + 1][nxt], dp[i][j][x]);
				}
			}
		}
	}
	int ans = 0;
	for (int i = 0; i <= k; i++) {
		add(ans, dp[n][0][i]);
	}
	cout << ans;
	ioi
}
