#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <cmath>
#include <stack>
#include <map>
#include <queue>
#include <cstdio>

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef struct item * pitem;

#define all(x) (x).begin(),(x).end()
#define INF 1000000001
#define pi 3.1415926535897932384626433832795
#define INPUT "input.txt"
#define OUTPUT "output.txt"

int x[100001];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(9)
    //freopen(INPUT,"r",stdin);
    //freopen(OUTPUT,"w",stdout);
    int n,mi=1e7,ma=-1e7,cnt1=0,cnt2=0,cnt3=0,ans=INF,a=0,b=0,c=0;
    ll sum=0;
    cin >> n;
    for (int i=1;i<=n;i++){
        cin >> x[i];
        sum+=x[i];
        mi=min(mi,x[i]);
        ma=max(ma,x[i]);
    }
    if (ma-mi<=1){
        cout << n << "\n";
        for (int i=1;i<=n;i++) cout << x[i] << " ";
        return 0;
    }
    for (int i=1;i<=n;i++){
        cnt1+=(x[i]==mi);
        cnt2+=(x[i]==mi+1);
        cnt3+=(x[i]==ma);
    }
    for (int i=0;i<=n;i++){
        ll need=sum-i*1ll*mi,can1=(n-i)*1ll*(mi+1),can2=(n-i)*1ll*ma;
        if (need<can1||need>can2) continue;
        int a1=i,b1=n-i-need+can1,c1=n-a1-b1;
        if (min(a1,cnt1)+min(b1,cnt2)+min(c1,cnt3)<ans){
            ans=min(a1,cnt1)+min(b1,cnt2)+min(c1,cnt3);
            a=a1;
            b=b1;
            c=c1;
        }
    }
    cout << ans << "\n";
    while (a--) cout << mi << " ";
    while (b--) cout << mi+1 << " ";
    while (c--) cout << ma << " ";
}
