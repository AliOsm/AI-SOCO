#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define N 1000005
vector<plld> edges;
vector<lld> v[N];
set<plld> deg[N];
lld d[N],degree[N];
int main()
{	
	lld n,k,maxm=0;
	cin>>n>>k;	
	rep(i,1,n+1) cin>>d[i],v[d[i]].pb(i),deg[d[i]].insert({0LL,i}),maxm=max(maxm,d[i]);
	rep(i,1,maxm+1) {
		for(auto j:v[i]) {
			
			if(deg[i-1].size() ==0) return 0*print(-1LL);
			plld curr=*deg[i-1].begin();
			if(curr.f<k) {
				edges.pb({j,curr.s});
				deg[i-1].erase({degree[curr.s],curr.s});
				degree[curr.s]++;
				deg[i-1].insert({degree[curr.s],curr.s});
				
				deg[i].erase({degree[j],j});
				degree[j]++;
				deg[i].insert({degree[j],j});
			} 
			else return 0*print(-1LL);
		}
	}
	if(edges.size() != (n-1)) return 0*print(-1LL);
	cout<<edges.size()<<endl;
	for(auto i:edges) cout<<i.f<<" "<<i.s<<endl;
	return 0;
}

