#include<bits/stdc++.h>

#define ll long long
#define Add_Speed ios_base::sync_with_stdio(0);cin.tie(NULL);
#define pb push_back
#define mp make_pair
#define f first
#define sz size()
#define s second
#define pii pair<int, int>
#define all(s) s.begin(), s.end()
#define file(s) freopen(s".in","r",stdin); freopen(s".out","w",stdout);
#define inf INT_MAX    

using namespace std;

const int maxn = (int)4e5 + 3;
const int mod = (int)1e9 + 7;
const int maxlog = (int)20;
const int P = mod;


int tmin[maxn][21], n, tmax[maxn][21], lg[maxn];
ll ans;
inline void build() {
  lg[1] = 0;
  for (int i = 2; i < maxn; i++)
    lg[i] = lg[i / 2] + 1;  
  for (int j = 1; j <= 18; j++){
    for (int i = 1; i <= n + 1; i++){
      tmin[i][j] = min(tmin[i][j - 1], tmin[i + (1 << (j - 1))][j - 1]);
      tmax[i][j] = max(tmax[i][j - 1], tmax[i + (1 << (j - 1))][j - 1]);
    }
  }
}
int getmin(int l, int r){          
  int k = lg[r - l + 1];                         
  return min(tmin[l][k], tmin[r - (1 << k) + 1][k]);
}

int getmax(int l, int r){
  int k = lg[r - l + 1];                    
  return max(tmax[l][k], tmax[r - (1 << k) + 1][k]);
}
int main () {
  Add_Speed;
  cin >> n;
  for(int i = 1; i <= n; i++) cin >> tmax[i][0];
  for(int i = 1; i <= n; i++) cin >> tmin[i][0];
  build();
  for(int i = 1; i <= n; i++){
    int l = i, r = n, r1 = i - 1;
    while(l <= r){
      int mid = (l + r) >> 1;
      if(getmax(i, mid) < getmin(i, mid)){
        l = mid + 1;
        r1 = mid;
      }else{
        r = mid - 1;
      }
    }
    l = i, r = n;
    int r2 = n + 1;
    while(l <= r){
      int mid = (l + r) >> 1;
      if(getmax(i, mid) > getmin(i, mid)){
        r = mid - 1;
        r2 = mid;
      }else{
        l = mid + 1;
      }
    }
    ans += (r2 - r1 - 1);
  }
  cout << ans;
  return 0;
}