#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

#define M 30000

int hp[2], dt[2], l[2], r[2], p[2];
double dp[M+10][210];
double a[M+10], b[M+10];

void func(int hp, int low, int high, double fail){
    int i,j;
    
    REP(i,M+1) REP(j,hp+1) dp[i][j] = 0.0;
    dp[0][hp] = 1.0;
    
    for(i=1;i<=M;i++){
        double p = (1.0 - fail) / (high - low + 1);
        double sum = 0.0;
        
        for(j=hp;j>=1;j--){
            dp[i][j] += dp[i-1][j] * fail;
            // dp[i][j] += (dp[i-1][j+low] + ... + dp[i-1][j+high]) * p;
            if(j+low <= hp) sum += dp[i-1][j+low];
            if(j+high+1 <= hp) sum -= dp[i-1][j+high+1];
            dp[i][j] += sum * p;
        }
        
        dp[i][0] = 1.0;
        for(j=1;j<=hp;j++) dp[i][0] -= dp[i][j];
        
        REP(j,hp+1) if(dp[i][j] < 1.0E-20) dp[i][j] = 0.0;
    }
}

int main(void){
    int i;
    
    REP(i,2) cin >> hp[i] >> dt[i] >> l[i] >> r[i] >> p[i];
    
    if(p[0] == 100) {cout << 0.0 << endl; return 0;}
    if(p[1] == 100) {cout << 1.0 << endl; return 0;}
    
    func(hp[0], l[1], r[1], p[1] / 100.0);
    REP(i,M+1) a[i] = dp[i][0];
    func(hp[1], l[0], r[0], p[0] / 100.0);
    REP(i,M+1) b[i] = dp[i][0];
    
//  REP(i,10) cout << a[i] << ' '; cout << endl;
//  REP(i,10) cout << b[i] << ' '; cout << endl;
    
    int x = 0, y = 0;
    double ans = 0.0;
    
    for(i=0;;i++){
        if(x == M && y == M) break;
        if(i % dt[0] == 0 && y < M){
            y++;
            ans += (b[y] - b[y-1]) * (1.0 - a[x]);
        }
        if(i % dt[1] == 0 && x < M) x++;
    }
    
    printf("%.9f\n", ans);
    
    return 0;
}
