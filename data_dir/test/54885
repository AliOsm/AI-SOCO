#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
const int mod = (1e9) + 7;
const double eps = 1e-9;
const int siz = 2e5 + 5, siz2 = 1e5 + 5;
int sz;
ll n, ans, ncr[22][22];
unordered_map<int, int> ma1, ma2;
void bc()
{
	int i, j;

	// Caculate value of Binomial Coefficient in bottom up manner
	for (i = 0; i <= 19; i++)
	{
		for (j = 0; j <= i; j++)
		{
			// Base Cases
			if (j == 0 || j == i)
				ncr[i][j] = 1;

			// Calculate value using previosly stored values
			else
				ncr[i][j] = ncr[i - 1][j - 1] + ncr[i - 1][j];
		}
	}
}
void calc() {
	int nsz = 0;
	for (auto v : ma2) {
		nsz += v.second;
	}
	nsz--;
	int cur = nsz;
	ll tot = 1;
	for (auto v : ma2) {
		if (v.first == 0) {
			continue;
		}
		for (auto v2 : ma2) {
			int co = v2.second;
			if (v2.first == v.first) {
				co--;
			}
			tot *= ncr[cur][co];
			cur -= co;
		}
		ans += tot;
		tot = 1;
		cur = nsz;
	}
}
void brute(unordered_map<int, int>::iterator it) {
	if (it == ma1.end()) {
		calc();
		return;
	}
	int fi = (*it).first, se = (*it).second;
	for (int j = se; j >= 1; j--) {
		ma2[fi] = j;
		auto it2 = it;
		it2++;
		brute(it2);
	}
}
int main()
{
	scanf("%I64d", &n);
	string s = to_string(n);
	sz = s.size();
	for (int i = 0; i < sz; i++) {
		ma1[s[i] - '0']++;
	}
	bc();
	brute(ma1.begin());
	printf("%I64d\n", ans);
	return 0;
}