/*
 * Author    : raj1307 - Raj Singh
 * Date      : 16.04.2020
 */
 
#pragma GCC optimize("Ofast")
// #pragma GCC optimize("unroll-loops")
// #define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
using namespace std;
 
//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define print(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cerr << *it << " "; cerr << endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}
 
#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define debarr(a,n) {}
#endif
 
#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rr return 
#define mp make_pair
#define pb push_back
#define sz(x) ((int)x.size())
#define int long long
#define ll long long
#define ld long double
#define endl "\n"
#define Endl "\n"
#define all(v) (v).begin(), (v).end()
typedef pair<int, int> ii;;
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}
int gcd(int a,int b){ return (b == 0) ? a : gcd(b, a % b);}
inline int lcm(int a,int b){ return a / gcd(a, b) * b;}
inline int normalize(int x,int mod){ x %= mod; if (x < 0) x += mod; return x;}
 
int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};
string abc="abcdefghijklmnopqrstuvwxyz";
const double PI=acosl(-1);
const int mod = 1000*1000*1000+7;
//const int mod = 998244353;
const int inf = 1e18 +5;
 
//a and b are assumed to be taken modulo p
inline int add(int a, int b, int p = mod){ int c = a + b; if(c >= p) c -= p; return c; }
inline int sub(int a, int b, int p = mod){ int c = a - b; if(c < 0) c += p; return c; }
inline int mul(int a, int b, int p = mod){ return (a * 1ll * b) % p; }
 
int floor1(int n,int k){
    if(n%k == 0 || n >= 0)return n/k;
    return (n/k)-1;
}
 
int ceil1(int n,int k){
    return floor1(n+k-1,k);
}
 
int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}
 
 
const int N = 1e5 + 5;
 
 
int n,m,k;
 


int dist(int x,int y,int z){

	return (x-y)*(x-y) + (y-z)*(y-z) + (x-z)*(x-z);
}


 
void solve(){   
        
	
 	
	cin>>n>>m>>k;
	vector<int>a(n);
	vector<int>b(m);
	vector<int>c(k);
	fr(i,0,n) cin>>a[i];
	fr(i,0,m) cin>>b[i];
	fr(i,0,k) cin>>c[i];


	sort(all(a));
	sort(all(b));
	sort(all(c));

	int mn=inf+inf;
	fr(i,0,n){

		int x=lower_bound(all(b),a[i])-b.begin();
		int y=upper_bound(all(b),a[i])-b.begin();

		int u=lower_bound(all(c),a[i])-c.begin();
		int v=upper_bound(all(c),a[i])-c.begin();



		y--;
		v--;

		y=max(0,y);
		v=max(0,v);



		if(x>=m) x--;
		if(y>=m) y--;

		if(u>=k) u--;
		if(v>=k) v--;




		mn=min(mn,dist(a[i],b[x],c[u]));

		if(v!=k)
			mn=min(mn,dist(a[i],b[x],c[v]));


		if(y!=m){
			mn=min(mn,dist(a[i],b[y],c[u]));
			if(v!=k)
				mn=min(mn,dist(a[i],b[y],c[v]));
		}
	
	}



	fr(i,0,m){

		int x=lower_bound(all(a),b[i])-a.begin();
		int y=upper_bound(all(a),b[i])-a.begin();

		int u=lower_bound(all(c),b[i])-c.begin();
		int v=upper_bound(all(c),b[i])-c.begin();


		y--;
		v--;
		y=max(0,y);
		v=max(0,v);


		if(x>=n) x--;
		if(y>=n) y--;

		if(u>=k) u--;
		if(v>=k) v--;


		mn=min(mn,dist(b[i],a[x],c[u]));

		if(v!=k)
			mn=min(mn,dist(b[i],a[x],c[v]));


		if(y!=n){
			mn=min(mn,dist(b[i],a[y],c[u]));
			if(v!=k)
				mn=min(mn,dist(b[i],a[y],c[v]));
		}
	
	}


	fr(i,0,k){

		int x=lower_bound(all(b),c[i])-b.begin();
		int y=upper_bound(all(b),c[i])-b.begin();

		int u=lower_bound(all(a),c[i])-a.begin();
		int v=upper_bound(all(a),c[i])-a.begin();

		y--;
		v--;
		y=max(0,y);
		v=max(0,v);

		if(x>=m) x--;
		if(y>=m) y--;

		if(u>=n) u--;
		if(v>=n) v--;

		mn=min(mn,dist(c[i],b[x],a[u]));

		if(v!=n)
			mn=min(mn,dist(c[i],b[x],a[v]));


		if(y!=m){
			mn=min(mn,dist(c[i],b[y],a[u]));
			if(v!=n)
				mn=min(mn,dist(c[i],b[y],a[v]));
		}
	
	}


	cout<<mn<<endl;
























 

 
 
 
    
}
 
 
 
 
signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	//freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
	cin>>t;  // UNCOMMENT FOR TEST-CASES
	//precompute();
	while(t--) {
		solve();
	}	
	return 0;
}
 
 