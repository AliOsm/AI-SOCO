#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
typedef vector<vector<ll>> mat;

const int N = 101 , M = 1e4 + 5;
int dp[N][M] , n , m , a[N][N] , x , dp2[N][M];

int main()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    for(int i = 0 ; i < N ; i++)
        for(int j = 0 ; j < M ; j++)
            dp2[i][j] = -1e9;

    cin >> n >> m;
    for(int i = 0 ; i < n ; i++)
    {
        cin >> x;
        for(int j = 1 ; j <= x ; j++)
            cin >> a[i][j];
        for(int j = 2 ; j <= x ; j++)
            a[i][j] += a[i][j - 1];

        for(int j = 0 ; j <= min(x , m) ; j++)
            for(int k = j ; k >= 0 ; k--)
                dp[i][j] = max(dp[i][j] , a[i][k] + a[i][x] - a[i][ x - (j - k) ]);
    }

    dp2[0][m] = 0;
    for(int i = 0 ; i < n ; i++)
        for(int j = 0 ; j <= m ; j++)
        {
            dp2[i + 1][j] = max(dp2[i + 1][j] , dp2[i][j]);
            for(int k = 0 ; k <= min(j , N) ; k++)
                dp2[i + 1][j - k] = max(dp2[i + 1][j - k] , dp2[i][j] + dp[i][k] );
        }

    cout << dp2[n][0];

    return 0;
}
