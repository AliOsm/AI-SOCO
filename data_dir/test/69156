#include <bits/stdc++.h>

#define F first
#define S second

#define ll long long
#define ull unsigned long long
#define ld long double

#define pb push_back
#define ppb pop_back
#define mp make_pair

#define sz(x) (int) x.size()
#define all(x) x.begin(), x.end()
#define bit(x) __builtin_popcountll(x)
#define sqr(x) ((x) * 1LL * (x))

#define nl '\n'
#define ioi exit(0);

#define NeedForSpeed ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

using namespace std;

typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <double, double> pdd;

const int N = 1e5 + 7, MxN = 1e6 + 7, mod = 1e9 + 7, inf = 2e9 + 7;
const long long linf = 1e18 + 7;
const double eps = 1e-9;
const int ii[] = {-1, 0, 1, 0, 1, -1, -1, 1}, jj[] = {0, 1, 0, -1, 1, -1, 1, -1};




    int n;
    char s[N][10];
    inline void Bye(){
        printf ("NO"), ioi
    }
    inline bool Go(int id){
        int ok = 0, cur = 0;
        char x;
        while (true){
            x = getchar();
            if (x == nl) return ok;;
            if (x == '?') ok = 1;
            s[id][cur] = x;
            cur++;
        }
    }
    inline bool Magic(int pos, int id, bool ok = 0){
        if (strlen(s[id]) > strlen(s[id - 1])) return 1;
        if (strlen(s[id]) < strlen(s[id - 1])) return 0;
        for (int i = pos; i < strlen(s[id]); i++){
            if (s[id][i] == '?'){
                if (ok) s[id][i] = '0';
                else{
                    for (int j = s[id - 1][i]; j <= '9'; j++){
                        if (j == s[id - 1][i]){
                            if (Magic(i + 1, id, ok)) {s[id][i] = j; return 1;}
                        }
                        else{
                            if (Magic(i + 1, id, 1)) {s[id][i] = j; return 1;}
                        }
                    }
                }
            }
            else{
                if (s[id][i] > s[id - 1][i] && !ok) ok = 1;
                if (s[id][i] < s[id - 1][i] && !ok) return 0;
            }
        }

        return ok;
    }
int main(){
    scanf ("%d\n", &n);
    for (int i = 1; i <= n; i++){
        bool ok = Go(i);
        if (strlen(s[i - 1]) > strlen(s[i])) Bye();
        if (ok){
            if (i == 1){
                for (int j = 0; j < strlen(s[i]); j++){
                        if (s[i][j] == '?'){
                            if (!j) s[i][j] = '1';
                            else s[i][j] = '0';
                        }
                    }
                }

            else{
                if (strlen(s[i]) > strlen(s[i - 1])){
                    for (int j = 0; j < strlen(s[i]); j++){
                        if (s[i][j] == '?'){
                            if (!j) s[i][j] = '1';
                            else s[i][j] = '0';
                        }
                    }
                }
                else if (!Magic(0, i)) Bye();
            }
        }
        else if (!Magic(0, i)) Bye();
    }
    printf ("YES\n");
    for (int i = 1; i <= n; i++, printf ("\n"))
        printf ("%s", s[i]);
    ioi
}
