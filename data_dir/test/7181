#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <unordered_map>

using namespace std;

#define sf(x) scanf("%d", &x)
#define scan(x) scanf("%I64d", &x)
#define pr(x) printf("%d ", x)
#define distance(x1,y1,x2,y2) sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1))

typedef unsigned long long ull;
typedef long long ll;

int dx[] = { 1, 0, -1, 0 };
int dy[] = { 0, 1, 0, -1 };

bool isprimes[1000001] = { 1 };
void seive(){
    isprimes[1] = 0; isprimes[0] = 0;
    for (int i = 2; i*i < 1000001; i++){
        if (isprimes[i]){
            for (int j = i*i; j < 1000001; j += i)isprimes[j] = 0;
        }
    }
}
int main(){
    memset(isprimes, true, sizeof(isprimes));
    seive();
    int n;
    cin >> n;
    long long x;
    for (int i = 0; i < n; i++){
        cin >> x;
        long long sq = sqrt(x);
        if (isprimes[sq] && sq*sq == x)cout << "YES\n";
        else cout << "NO\n";
    }
}