#include <bits/stdc++.h>
#ifndef M_PI
#define M_PI 3.14159265358979323846264338327
#endif // M_PI
#define endl "\n"
#define S struct
#define X first
#define Y second
#define V vector
#ifndef __linux__
#define LLD "%I64d"
#else
#define LLD "%ll""d"
#endif
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define GET(a, n) for (int __i = 0; __i < (n); ++__i) cin >> a[__i];
#define GETM(a, n, m) for (int __i = 0; __i < (n); ++__i) for (int __j = 0; __j < m; ++__j) cin >> a[__i][__j];
#define PRINTM(a, n, m) for (int __i = 0; __i < (n); ++__i) { for (int __j = 0; __j < m; ++__j) cout << a[__i][__j] << " ";  cout << endl; };
#define PRINT(a, n) for (int __i = 0; __i < (n); ++__i) cout << a[__i] << " ";
#define IT(a) a.begin(), a.end()
#define SQR(x) (x) * (x)
#define CASE(a, s) cout << "Case #" << a << ": " << s << endl;
#define DEB(a) cout << #a << " = " << (a) << endl; cout.flush();
#define DEBA(a) for (auto __i: a) cout << __i << " "; cout << endl; cout.flush();
#define IFDEB(b, a) if (b) { cout << #a << " = " << (a) << endl; cout.flush(); }
using namespace std;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair <int, int> PII;
typedef pair <LL, LL> PLL;
const int MOD = 1000000007;
S Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;
S FAIL { FAIL () { cout << "CHANGE!!!" << endl;}};

template <class T> class MinSegment
{
    stack <pair <T, T>> s1, s2;
public:
    T top() {
        T current_minimum;
        if (s1.empty() || s2.empty()) {
        	current_minimum = s1.empty() ? s2.top().second : s1.top().second;
        } else {
	        current_minimum = min(s1.top().second, s2.top().second);
        }
        return current_minimum;
    }
    void push(T new_element) {
        T minima = s1.empty() ? new_element : min(new_element, s1.top().second);
        s1.push(make_pair(new_element, minima));
    }
    void pop() {
        if (s2.empty()) {
        	while (!s1.empty()) {
		        T element = s1.top().first;
        		s1.pop();
        		T minima = s2.empty() ? element : min (element, s2.top().second);
		        s2.push (make_pair (element, minima));
	        }
        }
        s2.pop();
    }
};


int main()
{
    LL n, x, y;
    cin >> n >> x >> y;
    MinSegment <LL> t;
    vector <LL> dp(n + 1, LLONG_MAX);
    dp[0] = 0;
    FOR (i, 1, n + 1) {
        dp[i] = dp[i - 1] + x;
        if (i != 1) {
            dp[i] = min(dp[i], t.top() - i * x + y);
        }
        if (i % 2 == 0) {
            t.pop();
        }
        t.push(dp[i] + 2LL * x * i);
    }
    cout << dp[n];
}
