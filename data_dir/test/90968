//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 200005
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

i64 N, K;
i64 a[MAX];
i64 b[MAX];
i64 pos[MAX];
char c[MAX];
char d[MAX];

i64 f( i64 x ) { return x * ( x + 1 ) / 2; }

int main()
{
    optimiza_io
    cin >> N >> K;
    for( i64 i = 1; i <= N; i ++ ) {
        cin >> a[i];
        pos[a[i]] = i;
    }
    
    for( i64 i = 1; i <= N; i ++ ) {
        cin >> b[i];
        b[i] = pos[b[i]];
    }
        
    vector < i64 > gpo;
    i64 l = 1;
    while( l <= N ) {
        i64 nl = l;
        i64 nr = b[l];
        i64 sum = b[l];
        i64 r = l;
        while( r - l != nr - nl or sum != f( nr ) - f( nl - 1 ) ) {
            r++;
            sum += b[r];
            nr = max( nr , b[r] );
        }
        gpo.push_back( l );
        l = r + 1;
    } 
    
    while( gpo.size() > K )
        gpo.pop_back();
    if( gpo.size() < K ) {
        cout << "NO\n";
        exit( 0 );
    }
    gpo.push_back( N+1 );
    for( i64 i = 0; i < gpo.size() - 1; i ++ ) {
        i64 l = gpo[i];
        i64 r = gpo[i + 1] - 1;
        while( l <= r )
            c[l++] = 'a' + i;
    }
    
    for( i64 i = 1; i <= N; i ++ )
        d[a[i]] = c[i];
    
    cout << "YES\n";
    for( i64 i = 1; i <= N; i ++ )
        cout << d[i] ;
    return 0;
}

// i hasta b[i] 
