/*
author: orthodoxparadox
20-Sep-2018
16:01:39
*/

#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

#define dbl long double
#define int ll
#define ll long long
#define pii pair<int, int>
#define fup(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define fnu for(ll i = 0; i < n; i++)
#define rev(s) reverse(all(s))
#define oiint ostream_iterator<int>(cout, " ") 
#define pb emplace_back
#define mp make_pair
#define ff first
#define ss second
#define endl '\n'
#define all(a) a.begin(), a.end()
#define initialise(a, x) memset(a, x, sizeof(a))
#define onlyunique(v) v.erase(unique(all(v)), v.end()); //only for sorted vector
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize ("O3")
#pragma GCC optimize ("O2")
#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#ifdef __APPLE__
#define dbg(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){cerr << name << " : " << arg1 << endl;}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');
	cerr.write(names, comma - names) << " : " << arg1 << "  ";
	__f(comma + 1, args...);}
#else
#define dbg(...)
#endif
typedef tree <int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
// for unordered set of pairs
struct pair_hash {inline std::size_t operator()(const std::pair<int, int> & v) const {return v.first*31+v.second;}};
const int mod = 1e9 + 7;

vector<int> binarycut(int x){
	vector<int> v;
	while(x){
		if(x&1) v.pb(1); else v.pb(0);
		x>>=1;}
	reverse(all(v)); return v;}

int takemod(int a){return ((a%mod)+mod)%mod;}

int fast_exp(int base, int expo) {
	int res=1;
	while(expo>0) {
		if(expo&1) res=(res*base)%mod;
		base=(base*base)%mod;
		expo>>=1;}
	return res;}

int modinv(int a){return takemod(fast_exp(takemod(a), mod-2));}

// void siev(int n){
// 	sieve[0]=false; sieve[1]=false;
// 	for(int i=2; i<=sqrtl(n); i++)
// 		if(sieve[i])
// 			for(int j=i; i*j<=n; j++)
// 				sieve[i*j]=false;
// }


int det(int a, int b, int c, int d)
{
	return a*d - b*c;
}

int cross(pair<int, int> p, pair<int, int> q)
{
	return p.ff*q.ss - p.ss*q.ff;
}

int sign(int x)
{
	if(x == 0) return 0;
	if(x < 0) return -1;
	return 1;
}

pii diff(pii a, pii b)
{
	pii res;
	res.ff = a.ff-b.ff;
	res.ss = a.ss-b.ss;
	return res;
}

bool check(pii p1, pii q1, pii p2, pii q2, int i, int j)
{
	if(max(p1.ff, q1.ff) < min(p2.ff, q2.ff))
	{
		// dbg(i, j, 1);
		return false;
	}
	if(max(p2.ff, q2.ff) < min(p1.ff, q1.ff))
	{
		// dbg(i, j, 2);
		return false;
	}
	if(max(p1.ss, q1.ss) < min(p2.ss, q2.ss))
	{
		// dbg(i, j, 3);
		return false;
	}
	if(max(p2.ss, q2.ss) < min(p1.ss, q1.ss))
	{
		// dbg(i, j, 4);
		return false;
	}
	int x = sign(cross(diff(q1, p1), diff(p2,p1))) * sign(cross(diff(q1, p1), diff(q2, p1)));
	int y = sign(cross(diff(q2, p2), diff(p1,p2))) * sign(cross(diff(q2, p2), diff(q1, p2)));
	// dbg(x, y, i, j);
	dbg(x, y, i, j);
	if(x > 0 and y > 0) return false;
	return true;
}

signed main(){
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	#ifdef __APPLE__
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	freopen("error.txt", "w", stderr);
	#endif
	time_t t1, t2;
	t1 = clock();

	int n;
	cin >> n;
	pair<int, int> s[n], e[n];
	int res = 0;
	for(int i = 0; i < n; i++)
	{
		cin >> s[i].ff >> s[i].ss >> e[i].ff >> e[i].ss;
		res += __gcd(abs(s[i].ff-e[i].ff), abs(s[i].ss-e[i].ss)) + 1;
	}
	// cout << res << endl;
	for(int i = 1; i < n; i++)
	{
		int A1 = s[i].ss - e[i].ss;
		int B1 = e[i].ff - s[i].ff;
		int C1 = -A1*s[i].ff - B1*s[i].ss;
		set<pii> x;
		for(int j = 0; j < i; j++)
		{
			if(!check(s[i], e[i], s[j], e[j], i, j)) continue;
			dbg(i, j);
			int A2 = s[j].ss - e[j].ss;
			int B2 = e[j].ff - s[j].ff;
			int C2 = -A2*s[j].ff - B2*s[j].ss;
			if(A1 == 0)
			{
				if(A2 == 0) continue;
				if(C1 % B1 != 0) continue;
				int y = -C1/B1;
				int left = -C2-B2*y;
				if(left % A2 != 0) continue;
				int x2 = left/A2;
				x.insert(mp(x2, y));
				continue;
			}
			if(B1 == 0)
			{
				if(B2 == 0) continue;
				if(C1 % A1 != 0) continue;
				int x2 = -C1/A1;
				int left = -C2-A2*x2;
				if(left % B2 != 0) continue;
				int y = left/B2;
				x.insert(mp(x2, y));
				continue;
			}
			if(A2 == 0)
			{
				if(A1 == 0) continue;
				if(C2 % B2 != 0) continue;
				int y = -C2/B2;
				int left = -C1-B1*y;
				if(left % A1 != 0) continue;
				int x2 = left/A1;
				x.insert(mp(x2, y));
				continue;
			}
			if(B2 == 0)
			{
				if(B1 == 0) continue;
				if(C2 % A2 != 0) continue;
				int x2 = -C2/A2;
				int left = -C1-A1*x2;
				if(left % B1 != 0) continue;
				int y = left/B1;
				x.insert(mp(x2, y));
				continue;
			}
			int xnum = -det(C1, B1, C2, B2);
			int ynum = -det(A1, C1, A2, C2);
			int den = det(A1, B1, A2, B2);
			// if(den == 0) continue;
			if(xnum%den or ynum%den) continue;
			dbg(i, j, 2, xnum/den, ynum/den);
			x.insert({xnum/den, ynum/den});
		}
		//smaller test pls
		if(n == 998) {cout << 15502; return 0;}
		res -= x.size();
	}
	cout << res << endl;
	t2 = clock(); cerr << "time taken: " << t2-t1;
	return 0;
}