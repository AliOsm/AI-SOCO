using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define pr pair<ll,ll>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define sz(c) ((int)c.size())
#define all(c) (c).begin(),(c).end()
#define fn "Exposition"  /// ___FILE_NAME_HERE___
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define __rep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)
#define ford(i,a,b) for(int i=a;i<=b;i++)
#define __ford(i,a,b) for(int i=a;i>=b;i--)

const int MAXN=1e5+55;
const int lg=18;
int rmq[2][MAXN][lg+2],h[MAXN];
int n,k;
vector <pair <int,int> > ans;

inline void buildRMQ()
{
    /// 0 max    1 min
    for(int i=1; i<=n; i++)rmq[0][i][0]=rmq[1][i][0]=h[i];
    for(int j=1; j<=lg; j++)
        for(int i=1; i<=n-(1<<j)+1; i++)
        {
            rmq[0][i][j]=max(rmq[0][i][j-1],rmq[0][i+(1<<(j-1))][j-1]);
            rmq[1][i][j]=min(rmq[1][i][j-1],rmq[1][i+(1<<(j-1))][j-1]);
        }
}

inline int get(int l,int r,int idx)
{
    int x=log2(r-l+1);
    int lleft=rmq[idx][l][x];
    int rright=rmq[idx][r-(1<<x)+1][x];
    if(idx==0)return max(lleft,rright);
    return min(lleft,rright);
}

inline bool check(int l,int r)
{
    return get(l,r,0) - get(l,r,1) <= k;
}

int main(void)
{
#ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
#endif // ONLINE_JUDGE
    scanf("%d%d",&n,&k);
    for(int i=1; i<=n; i++)scanf("%d",&h[i]);
    buildRMQ();
    int l=1,r=1,len=0;
    while(l <= r and r<=n)
    {
        if(check(l,r))len=max(len,r-l+1),r++;
        else l++;
    }
    for(int i=1;i<=n-len+1;i++)
        if(check(i,i+len-1))ans.pb(mp(i,i+len-1));
    printf("%d %d\n",len,sz(ans));
    rep(ans,it)
    printf("%d %d\n",it->fir,it->sec);
}
