#include <bits/stdc++.h>
  
using namespace std;
  
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
  
#define pb push_back
#define mp make_pair
#define cotu cout
#define itn int
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
  
#define ordered_set tree<int , null_type,less<int >, rb_tree_tag,tree_order_statistics_node_update> 
  
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
  
typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
  
const int inf = int(1e9);
const int mod = inf + 7;
const int N = 1e6 + 555; // TL MB
const double PI = acos(-1.0);


void solve()
{
	ll n;
	cin >> n;
	ll a[n];
	map<ll, ll> pos, cnt;
	vector<ll> v, t;
	for(ll i = 0; i < n; ++i){
		cin >> a[i];
		pos[a[i]] = i;
		cnt[a[i]]++;
		v.pb(a[i]);
	}
	ll g = 0, s = 0, b = 0, ans = 0 ;
	for(auto it : cnt) t.pb(it.S);
	reverse(all(t));	
	ll pref[sz(t)];
	pref[0] = t[0];
	for(int i = 1; i < sz(t); ++i){
		pref[i] = pref[i - 1] + t[i];
	}
	ll l = 1, r = sz(t) - 1;
	ll st = pref[0], res = -1;
	while(l <= r){
		int m = l + r >> 1;
		if(pref[m] > n / 2) {
			r = m - 1;
		}
		else{
			res = m;
			l = m + 1;
		}
	}
	// cout << res << " itsres " << endl;
	// return;
	if(res != -1 && res >= 2){
		for(int i = 1; i < res; ++i){
			if(pref[res] - pref[i] > pref[0] && pref[i] - pref[0] > pref[0]){
				cout << pref[0] << " " << pref[i] - pref[0] << " " << pref[res] - pref[i] << endl;
				return;
			}
		}
	}
	cout << "0 0 0" << endl;
}

 
int main()
{
    Red;
  	int T; cin >> T; while(T--)
    solve();
    return 0;
}