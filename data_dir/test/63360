#include <bits/stdc++.h>
using namespace std;
template<typename T>
void kek(T ans) {cout << ans << endl; exit(0);}

using Type = set<pair<int,int>>;
Type del(Type s, int x) {
  auto it = s.begin();
  while (it != s.end()) {
    if (it->first == x || it->second == x)
      it = s.erase(it);
    else
      it++;
  }
  return s;
}
pair<Type,Type> work(Type s) {
  auto rem = [&] (pair<int,int> p) {
    int a, b; tie(a, b) = p;
    s.erase({a, b});
    s.erase({b, a});
  };
  int x, y;
  tie(x, y) = *s.begin();
  rem(*s.begin());
  return make_pair(del(s, x), del(s, y));
}
int32_t main() {

  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int n, m;
  cin >> n >> m;
  Type s;
  for (int i = 0; i < m; ++i) {
    int x, y; cin >> x >> y;
    s.emplace(x, y);
    s.emplace(y, x);
  }
  Type a, b;
  tie(a, b) = work(s);
  if (a.empty() || b.empty()) kek("YES");
  Type c, d;
  tie(c, d) = work(a);
  if (c.empty() || d.empty()) kek("YES");
  tie(c, d) = work(b);
  if (c.empty() || d.empty()) kek("YES");
  kek("NO");
  
  return 0;
}
