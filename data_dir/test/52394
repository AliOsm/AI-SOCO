//besmellah
#include <bits/stdc++.h>
using namespace std;

const int maxN = 100 * 1000;
vector <int> adj[maxN];
bool mark[maxN];

bool dfs(int v, int u){
    mark[v] = true;
    for (int i = 0; i < adj[v].size(); i++){
        if (adj[v][i] != u && mark[adj[v][i]])
            return true;
        if (adj[v][i] != u && dfs(adj[v][i], v))
            return true;
    }
    return false;
}

int main(){
    ios::sync_with_stdio(false);
    int n, m, tmp, temp, cnt = 0;
    cin >> n >> m;
    for (int i = 0; i < m; i++){
        cin >> tmp >> temp;
        tmp --;
        temp --;
        adj[tmp].push_back(temp);
        adj[temp].push_back(tmp);
    }
    for (int i = 0; i < n; i++){
        if (!mark[i]){
            if (!dfs(i, -1))
                cnt ++;
        }
    }
    cout << cnt;
}