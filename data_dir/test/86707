#include<bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
  
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
 
#define FS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define ll long long int
#define ld long double
#define pb push_back
#define bp __builtin_popcount
#define sz size()
#define ff first
#define ss second
#define vll vector<ll>
#define vbool vector<bool>
#define vpll vector<pair<ll,ll>>
#define pll pair<ll,ll>
#define vllv vector<vector<ll>>
#define setpri(x) cout<<setprecision(x)<<fixed;
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),v.rend()
#define yesr {cout<<"YES"<<endl;return;}
#define nor {cout<<"NO"<<endl;return;}
// getline (std::cin,name);
ll MOD=1e9+7;
ll ceil1(ll n,ll x){if(n%x==0)return n/x; else return (n/x)+1;}
ll gcd(ll a,ll b){return __gcd(a,b);}
ll lcm(ll a,ll b){return (max(a,b)/gcd(a,b))*min(a,b);}

bool func(pair<ll,ll> &a,pair<ll,ll> &b ){
    if(a.ff != b.ff)return a.ff < b.ff;
    return a.ss > b.ss;
}
bool isprime(ll n){
        if(n==1)return false;
        if(n==2 || n==3) return true;
        if(n%2==0 || n%3==0)return false;
        
        for(ll i=5;i*i<=n;i+=2){
                if(n%i==0)return false;
        }
        return true;
}
void solve(){
        ll i,j,k,l,n,m,x,y,z,r;
        
      cin>>n>>k;
      vll a(n+11);
      ll fl=0;
      for(i=1;i<=n;i++){
              cin>>a[i];
              if(a[i]==k)fl=1;
      }
      if(!fl){
              cout<<"NO\n";
              return;
      }
      if(n==1){
              cout<<"YES\n";
              return;
      }
      
      for(i=1;i<=n;i++){
             if(i>1){
                     if(a[i]>=k &&a[i-1]>=k){
                             cout<<"YES\n";
                             return;
                     }
             }
             if(i<n){
                     if(a[i]>=k && a[i+1]>=k){
                             cout<<"YES\n";
                             return;
                     }
             }
      }
      for(i=2;i<n;i++){
              if(a[i-1]>=k &&a[i+1]>=k){
                      cout<<"YES\n";
                      return;
              }
      }
      cout<<"NO\n";
      return;
       
       
	
}
int main(){
    FS;
    ll i,j,k,n,m,x,y,z,q;
    q=1;
     cin>>q;
    while(q--){
        solve();
    }
    return 0;
}