#include <bits/stdc++.h>

using namespace std;

const int N = 2, Mod = 1e9 + 7;

int A, B, x;
long long n;
long long a[N][N], b[N][N];

void mul(long long a[N][N], long long b[N][N]) {
  long long c[N][N];
  memset(c, 0, sizeof(c));
  for (int i = 0; i < 2; ++i) {
    for (int j = 0; j < 2; ++j) {
      for (int k = 0; k < 2; ++k) {
        c[i][j] += a[i][k] * b[k][j] % Mod;
        c[i][j] %= Mod;
      }
    }
  }
  for (int i = 0; i < 2; ++i) {
    for (int j = 0; j < 2; ++j) {
      a[i][j] = c[i][j];
    }
  }
}

void pw(long long a[N][N], long long b) {
  long long c[N][N];
  memset(c, 0, sizeof(c));
  c[1][1] = c[0][0] = 1;
  while (b) {
    if (b & 1) mul(c, a);
    b >>= 1;
    mul(a, a);
  }
  for (int i = 0; i < 2; ++i) {
    for (int j = 0; j < 2; ++j) {
      a[i][j] = c[i][j];
    }
  }
}

int main() {
  scanf("%d%d%lld%d", &A, &B, &n, &x);
  a[0][0] = A % Mod;
  a[0][1] = 0;
  a[1][0] = B % Mod;
  a[1][1] = 1;
  b[0][0] = x;
  b[0][1] = 1;
  pw(a, n);
  mul(b, a);
  printf("%lld\n", b[0][0] % Mod);
  return 0;
}
