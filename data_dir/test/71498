#include <bits/stdc++.h>

using namespace std ;

const int MAX = (int)1e7 + 1 ;

int idx[2][MAX] ;
int cnt[MAX] ;

inline long long lcm(long long x , long long y)
{
    return 1ll * x * 1ll * (y / __gcd(x , y)) ;
}

int main()
{
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr) ;

    memset(idx , 0 , sizeof idx) ;
    memset(cnt , 0 , sizeof cnt) ;
    int n  ; cin >> n ;
    int a[n + 1] ;

    for(int i = 1 ;i <= n ;i++)
    {
        cin >> a[i] ;
        cnt[a[i]] ++ ;
        if(cnt[a[i]] < 3)
            idx[cnt[a[i]] > 1][a[i]] = i;
    }

    long long mn = (1ll << 60) ;
    int i = -1 , j = -1 ;

    for(int x = 1 ; x < MAX ; x++)
    {
        int start = x ;

        for(;start < MAX && !cnt[start]; start += x) ;

        for (int y = start; y < MAX; y += x){

            int i1, i2;
            if (start == y && cnt[y] > 1)
                i1 = idx[0][start], i2 = idx[1][start];
            else if (start != y && cnt[y] > 0)
                i1 = idx[0][start], i2 = idx[0][y];
            else
                continue;
            
            long long curr = 1ll * start * (y / __gcd(start , y));

            if (curr < mn) mn = curr, i = i1, j = i2;
            if (i > j) swap(i, j);
        }
    }

    cout << i << ' ' << j << '\n' ;
    return 0 ;
}