#include <iostream>
#include <vector>
#include <iomanip>
#include <algorithm>
#include <cmath>
#include <limits>
#include <string>
using namespace std;

int n;
vector<int> m;

long long gcd(long long a, long long b) {
	return b ? gcd(b, a % b) : a;
}

int dfs(int v, int p) {
	int ans = 1;
	v = m[v];
	for (int i = 0; i < n; ++i) {
		if (v == p)
			return ans;
		else
			v = m[v];
		++ans;
	}
	return -1;
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;
	m.resize(n);
	for (int i = 0; i < n; ++i) {
		cin >> m[i];
		--m[i];
	}
	long long ans = 1;
	for (int i = 0; i < n; ++i) {
		long long a = dfs(i, i);
		if (a == -1) {
			cout << -1;
			return 0;
		}
		if (a % 2 == 0) {
			a /= 2;
		}
		ans = ans * a / gcd(ans, a);
	}
	cout << ans << '\n';
	return 0;
}