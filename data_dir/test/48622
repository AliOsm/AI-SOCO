#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll n,k;
ll b[6][1005];
ll total[1005];
vector <ll> d(1005, 0);
vector < vector <ll> > a(1005, d);
ll ans = 0;
ll inC = 0;
vector <ll> dp(1005, -1);
void check(ll one, ll two)
{
    //bool good = true;
    for(ll i=1; i<=k; i++)
    {
        /*cout<<" i = "<<i<<endl;
        cout<<b[i][one]<<" "<<b[i][two]<<endl;*/
        if (b[i][one] >= b[i][two]) return;
    }
   // a[one].push_back(two);
   a[one][two] = 1;
   total[one]++;
   a[two][one] = -1;
}
/*
void dfs(ll parent, ll start, ll pos)
{
    inC++;
    ans =  max(ans, pos);
    for(ll i=0; i<a[start].size(); i++)
    {
        ll cur = a[start][i];
        if (dp[cur] == -1)
        dfs(parent, a[start][i], pos+1);
        else
        {
            dp[parent] = max(dp[parent], dp[cur]+pos);
            ans = max(ans, dp[parent]);
        }

    }
    dp[parent] = max(dp[parent], pos);

}
*/
vector <bool> used(1005, false);

void dfs(ll start, ll pos)
{
    inC++;
    used[start] = true;
    dp[start] = max(dp[start], pos);
    ll i;
    for(i=1; i<=n; i++)
    {
        if (a[start][i] == -1 && (dp[i]<=pos) )
        {
            dfs(i, pos + 1);
        }
    }
}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
    cin>>n>>k;
    ll i,j;
    for(i=1; i<=k; i++)
    {
        for(j=1; j<=n; j++)
        {
            ll q;
            cin>>q;
            b[i][q] = j;
        }
    }
/*
    for(i=1; i<=k; i++)
    {
        for(j=1; j<=n; j++)
            cout<<b[i][j]<<" ";
        cout<<endl;
    }
*/
    for(i = 1; i<=n; i++)
    {
        for(j=1; j<=n; j++)
            check(i,j);
    }

    //check(1,2);
/*
    for(i = 1; i<=n; i++)
    {
        cout<<"i = "<<i<<" /  ";
        for(j=1; j<=n; j++)
            cout<<a[i][j]<<" ";
        cout<<endl;
    }
    */
/*
    for(i = 1; i<=n; i++)
        cout<<total[i]<<" ";
    cout<<endl;
    */
 /*   for(i = 1; i<=n; i++)
        dfs(i,i, 1);
        cout<<inC<<endl;
        */
        for(i = 1; i<=n; i++)
        {
            if (total[i] == 0) dfs(i, 1);
        }
     /*   for(i = 1; i<=n; i++)
            cout<<dp[i]<<" ";
        cout<<endl;
        cout<<inC<<endl;*/
        ll ans = 0;
        for(i = 1; i<=n; i++)
            ans = max(ans, dp[i]);
    cout<<ans;
    return 0;
}
