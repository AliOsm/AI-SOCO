#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, m;
vector <int> g[100100];
int used[100100];

void dfs(int v, vector <int> &comp) {
    if (used[v]) return;
    comp.pb(v);
    used[v] = 1;
    forit (it, g[v])
        dfs(*it, comp);
}

int calc(vector <int> &v) {
    int ans = 0;
    for (int i = 0; i < v.size(); i++)
        ans += g[v[i]].size();
    return ans / 2;
}

int main(){

    scanf("%d%d", &n, &m);
    for (int i = 0, x, y; i < m; i++) {
        scanf("%d%d", &x, &y);
        x--; y--;
        g[x].pb(y);
        g[y].pb(x);
    }

    int ans = 0;

    for (int i = 0; i < n; i++) {
        if (!used[i]) {
            vector <int> comp;
            dfs(i, comp);
            int e = calc(comp);
            ans += e + 1 == comp.size();
        }
    }

    cout << ans << endl;

    return 0;
}
