#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=3e5+5;
ll dp[M],dn[M],a[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,k;
	cin>>n>>k;
	// if(n==0)
	// {
	// 	cout<<"0\n";
	// 	return 0;
	// }
	set<ll> S;
	std::vector<ll> P,N;
	for(ll i=1;i<=k;i++)
	{
		cin>>a[i];
		if(S.find(a[i])!=S.end())
		{
			i--;
			k--;
			continue;
		}
		S.insert(a[i]);
		if(n==a[i])
		{
			cout<<"1\n";
			return 0;
		}
		if(n<a[i])
			P.pb(a[i]-n);
		else
			N.pb(n-a[i]);
	}
	if(sz(P)==k || sz(P)==0)
	{
		cout<<"-1\n";
		return 0;
	}
	ll mx=250000;
	// for(auto u:P)
		// for(auto v:N)
			// mx=min(mx,(u*v)/(__gcd(u,v)));
	// cout<<mx<<"\n";
	for(ll i=0;i<M;i++)
	{
		dp[i]=1e9;
		dn[i]=1e9;
	}
	dp[0]=0;
	dn[0]=0;
	ll ans=1e16;
	for(ll i=1;i<=mx;i++)
	{
		for(auto u:P)
			if(u<=i)
				dp[i]=min(dp[i],1+dp[i-u]);
		for(auto u:N)
			if(u<=i)
				dn[i]=min(dn[i],1+dn[i-u]);
		ans=min(ans,dp[i]+dn[i]);
	}
	// cout<<dn[100]<<"\n";
	cout<<ans<<"\n";
	return 0;
}