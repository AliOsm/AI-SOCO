#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = 1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = 2e2+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

int n, K;
int a[N];

// -------------------------------------------------- 函数 -------------------------------------------------- //

void Init() {
    rep(i, 0, n) scanf("%d", a+i);
}

int Solve() {
    ll ans = -LINF;
    rep(i, 0, n) rep(j, i, n) {
        priority_queue <int> Qmin;
        priority_queue <int> Qmax;
        ll sum = 0;
        rep(k, i, j+1) {
            Qmin.push(-a[k]);
            sum += a[k];
        }
        ans = max(ans, sum);
        rep(k, 0, i) Qmax.push(a[k]);
        rep(k, j+1, n) Qmax.push(a[k]);
        rep(k, 0, K) {
            if (Qmax.empty()) break;
            if (Qmax.top() < -Qmin.top()) break;
            sum += Qmin.top() + Qmax.top();
            Qmin.push(-Qmax.top()); Qmax.pop();
            Qmax.push(-Qmin.top()); Qmin.pop();
            ans = max(ans, sum);
        }
    }
    return printf("%I64d\n", ans);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &K)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}
