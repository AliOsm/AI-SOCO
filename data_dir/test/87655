#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define mt make_tuple
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7, mod2 = 998244353;
const int MAX = 6e5 + 11;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-9;
const double PI = acos(-1.0);

int n, m, x, cnt[N], minuss, ctt[N], rev;
main() {
    file("a");
    ios;
    cin >> n >> m;
    int ct1 = 0, ct = 0, ct2 = 0;
    string ans = "";
    fo(i, 1, m, 1) {
        cin >> x;
        ++cnt[x];
        if (cnt[x] - minuss == 1) {
            ++ct;
            ++ctt[1 + rev];
        } else {
            int val = cnt[x] - minuss;
            --ctt[val + rev - 1];
            ++ctt[val + rev];
        }
        if (ct == n) {
            ++minuss;
            ct -= ctt[1 + rev];
            ans += '1';
            ++rev;
        } else {
            ans += '0';
        }
    }
    cout << ans;
    return 0;
}
/**

*/
