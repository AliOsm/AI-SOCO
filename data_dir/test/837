/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 3e5 + 5;
int n, d[N], p[N], par[N];
long long ans[N], suf[N], pre[N], sum[N];

inline bool cmp(int i, int j) {
	return d[i] - d[i - 1] < d[j] - d[j - 1];
}

int get_par(int u) {
	return ~par[u]? par[u] = get_par(par[u]): u;
}

inline void merge(int v) {
	int u = get_par(v - 1), dist = d[v] - d[v - 1];
	ans[u] = max(max(ans[u], ans[v]), suf[u] + pre[v] - 1LL * dist * dist);
	suf[u] = max(suf[v], sum[v] + suf[u]), pre[u] = max(pre[u], sum[u] + pre[v]), sum[par[v] = u] += sum[v];
}

inline void readInput() {
	int a, c;
	cin >> n >> a;
	for (int i = 0; i < n; i++) {
		cin >> d[i] >> c;
		par[p[i] = i] = -1;
		ans[i] = suf[i] = pre[i] = max(sum[i] = a - c, 0LL);
	}
}

inline void solve() {
	sort(p + 1, p + n, cmp);
	for (int i = 1; i < n; i++)
		merge(p[i]);
	cout << ans[0] << endl;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	readInput(), solve();
	return 0;
}
