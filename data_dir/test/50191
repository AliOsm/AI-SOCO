/*<<head>> {{{*/
#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/
const int MOD = (int)1e9+7;
const int N = (int)1e5+7;
#define y1 y10086

// ---------------------------------------- 变量 ---------------------------------------- //

ll n, m, a[N];
set <ll> S;

// ---------------------------------------- 函数 ---------------------------------------- //

void Init() {
	S.clear();
	rep(i, 0, n) scanf("%lld", a+i);
}

int Solve() {
	ll row = 0, col = 0, sum = 0;
	rep(i, 0, n) sum += a[i];
	rep(i, 0, n) if (a[i]) row++;
	rep(i, 0, n) col = max(col, a[i]);
	ll pos = col;
	sort(a, a + n);
	per(i, 0, n) {
		if (S.count(a[i])) {
			S.insert(min(max(1ll, pos-1), max(1ll, a[i]-1)));
			pos = min(max(1ll, pos-1), max(1ll, a[i]-1));
		} else S.insert(a[i]);
	}
	//dd(sum); dd(row); dd(col); de(sz(S));
	return printf("%lld\n", sum - (row + col - sz(S)));
}

// ---------------------------------------- main ---------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%lld%lld", &n, &m)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}