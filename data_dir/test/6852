 //g++ -std=c++14 -O2 -Wall -Wextra a.cpp
//In The Name Of God :
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
using namespace std ;
//using namespace __gnu_pbds;
#define X first
#define Y second
#define int long long
typedef long long ll ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define ALL(x) (x).begin(),(x).end()
#define size(x) ((int)((x).size()))
typedef pair < int , int > pii ;
typedef pair < pii , int > pii_i ;
typedef pair < int , pii > pi_ii ;
typedef pair < pii , pii > pii_ii ;
//#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%
//const int inf = 1e9+100 ;
typedef long long ll ;
int mod = 1e9+ 7 ;
ll mod1 = 1e9+7 ;
const int inf = 1.2e18 ;
typedef long double ld ;
const int maxL = 20 ;
const int maxn = 1e6+100 ;
const int baze = 330 ;
int k , d , t ;

int32_t main ( )
{
  cin >> k >> d >> t ;
  ld x = ((k+d-1)/d)*d ;
  ld ans = 0 ;
  cerr << fixed<< setprecision ( 10 ) << x << endl ;
  ld hlp = floor(ld(t)/((x+k)/2.)) ;
  cerr << fixed<< setprecision ( 10 ) << hlp << endl ;
  ans = hlp * x ;
  ld z = ld(t)-hlp*ld(k+x)/2. ;
  if ( z <= k )
    ans += z ;
  else
    ans += k + 2*(z-k) ;
  cout << fixed<< setprecision ( 10 ) << ans << endl ;
} 
