#include<bits/stdc++.h>
using namespace std;
#define ll long long int 
#define mod 1000000007
#define mkp make_pair
#define pb push_back

ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}

ll level[66];

ll get_level(ll x)
{
    ll c=0;
    while(x)
    {
        c++;
        x=x/2;
    }
    return c;
}
ll level_update[66];
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    // ios_base::sync_with_stdio(false);
    // cin.tie(NULL);
    ll t,i,j,k,s,l,r,n,x;
    level[0]=1;
    level[1]=1;
    for(i=2;i<=60;i++)
    {
        level[i]=2*level[i-1];
    }
    scanf("%lld",&n);
    while(n--)
    {
        scanf("%lld",&l);
        if(l==1)
        {
            scanf("%lld%lld",&x,&k);
            level_update[get_level(x)]+=k;
        }
        else if(l==2)
        {
            scanf("%lld%lld",&x,&k);
            ll p=1;
            for(i=get_level(x);i<=60;i++)
            {
                level_update[i]+=p*k;
                p=p*2;
            }
        }
        else
        {
            scanf("%lld",&x);
            ll xp=get_level(x);

            // cout<<xp<<"\n";
            ll o_index = x-level[xp];
            // cout<<level[xp]<<" ";
            ll curr_index = (o_index + (level_update[xp]%level[xp])+level[xp])%level[xp];
            // cout<<curr_index<<" ";
            printf("%lld ",x);
            while(--xp)
            {
                ll par_curr = curr_index/2;
                ll lp = par_curr;
                // cout<<level_update[xp]<<" ";
                curr_index = (par_curr - (level_update[xp]%level[xp])  + level[xp])%level[xp];
                // cout<<curr_index<<" ";
                printf("%lld ",(curr_index + level[xp]));
                curr_index = lp;
            }
            printf("\n");
        }
    }
return 0;
}