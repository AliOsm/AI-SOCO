#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;


#define f first
#define s second
#define sz size()
#define pb push_back
#define mem(a,b,s) for(int i=0 ; i<=s ; ++i) a[i]=b;
#define mem2(a,r,c,b) for(int i=0 ; i<=r ; ++i)    for(int j=0 ; j<=c ; ++j)    a[i][j]=b;
#define all(a) a.begin(),a.end()
#define mp make_pair
#define in insert
#define sc(a) scanf("%d",&a)
#define sc2(a,b)	scanf("%d%d",&a,&b)
#define rep(x,a,b)	for(int x=a ; x<=b ; ++x)
#define irep(x,a,b)	for(int x=a ; x>=b ; --x)

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef set<int> si;
typedef set<pair<int,int> > sii;
typedef map<int,int>	mii;


const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
const double EPS = 1e-9;
const int MAXN=1e5+10;
const ll MOD=1e9+7;
const int oo=2e9;
const ll OO=1e17;

int dx[]={0,1,0,-1,-1,-1,1,1};
int dy[]={1,0,-1,0,-1,1,-1,1};

int n,Rr,Rg,Rb;
string s,str;
set<char>clr;
bool dp[201][201][201];

void solve(int R, int G, int B)
{
	if(R<0 || G<0 || B<0)	return;

	if(R+G+B==1)
	{
		if(R)	clr.in('R');
		if(G)	clr.in('G');
		if(B) clr.in('B');
		return;
	}
	if(dp[R][G][B])	return;
	dp[R][G][B]=1;
	solve(R-1,G-1,B+1);
	solve(R-1,G+1,B-1);
	solve(R+1,G-1,B-1);
	if(R>1)	solve(R-1,G,B);
	else if(G>1)	solve(R,G-1,B);
	else if(B>1)	solve(R,G,B-1);
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	//	freopen("In.txt","r",stdin);
	//	freopen("Out.txt","w",stdout);

	cin >> n >> s;
	for(int i=0 ; i<s.sz ; ++i)
	{
		if(s[i]=='R')	Rr++;
		else if(s[i]=='G')	Rg++;
		else Rb++;
	}
	solve(Rr,Rg,Rb);

	while(clr.sz)	cout << *clr.begin(),clr.erase(clr.begin());

}
