// "Brevity is the soul of wit."
#include <stdio.h>
#include <bits/stdc++.h>

using namespace std;

#define boost ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)(a).size()
#define pb push_back
#define ull unsigned long long

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int maxn = (int)500200;

int n, k;
vector<pair<int, int> > g[maxn];
unordered_map <int, int> good;
int d[maxn], used[maxn];
int a[1111], maxVal;

int main() { boost
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
#endif  
    cin >> n >> k;

    for (int i = 0; i < n; i++) {
        cin >> a[i];
        good[a[i]] = 1;
        maxVal = max(maxVal, a[i]);
    }

    if (a[0] + k >= a[n - 1]) {
        cout << 1 << "\n";
        return 0;
    }

    for (int i = 0, j = maxVal; i <= j; i++, j--) {
        d[i] = d[j] = INT_MAX;
    }

    for (int i = 0; i < n; i++){
        for (int j = 1; j <= k; j++){
            if (a[i] + j > maxVal) {
                break;
            }

            if (good[a[i] + j]){
                g[a[i]].push_back(make_pair(a[i] + j, 1));
            }
        }
    }

    d[a[0]] = 0;
    priority_queue<pair<int,int> > q;
    q.push(make_pair(0, a[0]));

    while (!q.empty()) {
        int v = q.top().second, cur_d = -q.top().first;
        q.pop();
        if(cur_d > d[v]) continue;

        for (int i = 0, vSize = (int)g[v].size(); i < vSize; i++) {
            int to = g[v][i].first, len = g[v][i].second;

            if (d[v] + len < d[to]) {
                d[to] = d[v] + len;
                q.push(make_pair(-d[to], to));
            }
        }
    }

    if (d[a[n-1]] == INT_MAX) {
        cout << -1 << "\n";
    } else {
        cout << d[a[n-1]] << "\n";
    }

    return 0;
}

