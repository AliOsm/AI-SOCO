#include<bits/stdc++.h>
#define fpos f_pos
using namespace std;

int n;
string s;
int sp[1000000][21];
map<char,int> mp[1500000];
int sz,last;
int link[1500000];
int len[1500000];
int fpos[1500000];

void add(char q)
{
    int cur=++sz;
    len[cur]=len[last]+1;
    fpos[cur]=len[last]+1;
    for(;last>=0 && !mp[last].count(q);last=link[last])
        mp[last][q]=cur;
    if(last==-1)
    {
        link[cur]=0;
    }else
    {
        int to=mp[last][q];
        if(len[to]-1==len[last])
        {
            link[cur]=to;
        }else
        {
            int clone=++sz;
            mp[clone]=mp[to];
            link[clone]=link[to];
            len[clone]=len[last]+1;
            link[to]=clone;
            fpos[clone]=fpos[to];
            link[cur]=clone;
            for(;last>=0 && mp[last][q]==to;last=link[last])
                mp[last][q]=clone;
        }
    }
    last=cur;
}

void prepare()
{
    vector<int> v;
    for(int i=1;i<=n;i++)
        if(s[i-1]=='(')
           v.push_back(i);
        else
        {
            if(v.empty())
                continue;
            else
            {
                sp[i][0]=v.back();
                v.pop_back();
                for(int j=1;j<=20;j++)
                {
                    if(sp[i][j-1]==0)
                        break;
                    sp[i][j]=sp[sp[i][j-1]-1][j-1];
                }
            }
        }
}

int get(int pos,int x)
{
    int res=0;
    int first=pos;
    for(int i=20;i>=0;i--)
        if(sp[pos][i])
        {
            if(first-sp[pos][i]+1>x)continue;
            res+=(1<<i);
            pos=sp[pos][i]-1;
        }
    return res;
}



int main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);
    cin>>n;
    cin>>s;
    link[0]=-1;
    for(int i=0;i<s.size();i++)
        add(s[i]);
    prepare();
    long long ans=0;
    for(int i=1;i<=sz;i++)
    {
        ans+=get(fpos[i],len[i])-get(fpos[i],len[link[i]]);
    }
    cout<<ans<<endl;
}
