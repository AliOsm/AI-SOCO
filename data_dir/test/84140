#include<bits/stdc++.h>
#define ll long long
using namespace std;
ll mod= 100003417;
ll mod2=100003559;
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,m;
    cin>>n>>m;
    vector< vector< ll > > ar(n, vector< ll > (m,0));
    vector< vector< ll > > dp1(n, vector< ll > (m,0));
    vector< vector< ll > > dp2(n, vector< ll > (m,0));
    vector< vector< ll > > mp1(n, vector< ll > (m,0));
    vector< vector< ll > > mp2(n, vector< ll > (m,0));
    char a;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin>>a;
            if(a=='#')ar[i][j]=1;
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(i==0&&j==0){
                dp1[i][j]=1;
                mp1[i][j]=1;
                continue;
            }
            if(ar[i][j]){
                dp1[i][j]=0;
                mp1[i][j]=0;
                continue;
            }
            if(i){
                dp1[i][j]+=dp1[i-1][j];
                mp1[i][j]+=mp1[i-1][j];
                if(mp1[i][j]>=mod)mp1[i][j]-=mod;
                if(dp1[i][j]>=mod2)dp1[i][j]-=mod2;
            }
            if(j){
                dp1[i][j]+=dp1[i][j-1];
                mp1[i][j]+=mp1[i][j-1];
                if(mp1[i][j]>=mod)mp1[i][j]-=mod;
                if(dp1[i][j]>=mod2)dp1[i][j]-=mod2;
            }
        }
    }
    for(int i=n-1;i>=0;i--){
        for(int j=m-1;j>=0;j--){
            if((i==n-1)&&(j==m-1)){
                dp2[i][j]=1;
                mp2[i][j]=1;
                continue;
            }
            if(ar[i][j]){
                dp2[i][j]=0;
                mp2[i][j]=0;
                continue;
            }
            if((i+1)<n){
                dp2[i][j]+=dp2[i+1][j];
                mp2[i][j]+=mp2[i+1][j];
                if(mp2[i][j]>=mod)mp2[i][j]-=mod;
                if(dp2[i][j]>=mod)dp2[i][j]-=mod2;
            }
            if((j+1)<m){
                dp2[i][j]+=dp2[i][j+1];
                mp2[i][j]+=mp2[i][j+1];
                if(mp2[i][j]>=mod)mp2[i][j]-=mod;
                if(dp2[i][j]>=mod)dp2[i][j]-=mod2;
            }
        }
    }
    if(dp1[n-1][m-1]==0&&(mp1[n-1][m-1]==0)&&(dp2[0][0]==0)&&(mp2[0][0]==0)){
        cout<<"0";return 0;
    }
    int ans=2;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
                if(i==0&&j==0)continue;
                if((i==n-1)&&(j==m-1))continue;
            long long f=0;
            f=dp1[i][j]*dp2[i][j];
            f%=mod2;
            ll x=mp1[i][j]*mp2[i][j];
            x%=mod;
            if((f==(dp1[n-1][m-1]))&&(x==mp1[n-1][m-1])){
                    ans=1;
                    break;
            }
        }
    }
    cout<<ans;
    return 0;
}