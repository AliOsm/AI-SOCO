// In the name of Allah.
// We're nothing and you're everything.
// Ya Ali!

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int maxn = 1e6 + 17;
int n, who[maxn], r[maxn];
struct Dsu{
	int par[maxn];
	Dsu(){  memset(par, -1, sizeof par);  }
	Dsu& operator = (const Dsu &od){
		memcpy(par, od.par, sizeof par);
		return *this;
	}
	int root(int v){
		return par[v] == -1 ? v : par[v] = root(par[v]);
	}
	bool fri(int v, int u){
		return root(v) == root(u);
	}
	bool merge(int v, int u){
		return (v = root(v)) == (u = root(u)) ? 0 : (par[v] = u, 1);
	}
}  dsu;

int main(){
	ios::sync_with_stdio(0), cin.tie(0);
	cin >> n;
	for(int i = 0; i < n; i++){
		int sl, sr;
		cin >> sl >> sr;
		sl--, sr--;
		r[i] = sr;
		who[sl] = who[sr] = i;
	}
	set<pair<int, int>> have;
	int cmps = n;
	for(int i = 0; i < 2 * n; i++){
		if(!have.count({r[who[i]], who[i]})){
			for(auto [rx, x] : have)
				if(rx < r[who[i]])
					if(!dsu.merge(x, who[i]))
						return cout << "NO\n", 0;
					else{
						// cerr << who[i] << ' ' << x << '\n';
						cmps--;
					}
				else
					break;
			have.insert({r[who[i]], who[i]});
		}
		else
			have.erase({r[who[i]], who[i]});
	}
	if(cmps == 1)
		cout << "YES\n";
	else
		cout << "NO\n";
}
