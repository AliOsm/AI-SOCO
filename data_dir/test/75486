#include<bits/stdc++.h>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define INF 2000000000
#define pb push_back 
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)

using namespace std;

string s1,s2;

int dp[401][201][201];
int ans[401][201][201];

int solve(int val,int idx1,int idx2)
{
    if((idx1 == s1.length()) && (idx2 == s2.length()) && (val == 0))
        return 0;
    if(val > 400)
        return INF;
    if(val < 0)
        return INF;
    if(dp[val][idx1][idx2] != -1)
        return dp[val][idx1][idx2];
    dp[val][idx1][idx2] = INF;
    int nxt1 = 0, nxt2 = 0;
    if((idx1 < s1.length()) && (s1[idx1] == '('))
        nxt1++;
    if((idx2 < s2.length()) && (s2[idx2] == '('))
        nxt2++;
    int v = 1 + solve(val+1,idx1+nxt1,idx2+nxt2);
    if(v < dp[val][idx1][idx2])
    {
        dp[val][idx1][idx2] = v;
        ans[val][idx1][idx2] = 1;
    }
    nxt1 = 0, nxt2 = 0;
    if((idx1 < s1.length()) && (s1[idx1] == ')'))
        nxt1++;
    if((idx2 < s2.length()) && (s2[idx2] == ')'))
        nxt2++;
    v = 1 + solve(val-1,idx1+nxt1,idx2+nxt2);
    if(v < dp[val][idx1][idx2])
    {
        dp[val][idx1][idx2] = v;
        ans[val][idx1][idx2] = 0;
    }
    return dp[val][idx1][idx2];
}

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    memset(dp,-1,sizeof(dp));
    memset(ans,-1,sizeof(ans));
    cin >> s1;
    cin >> s2;
    int val = solve(0,0,0);
    int idx1 = 0,idx2 = 0;
    val = 0;
    while((val) || (idx1 != s1.length()) || (idx2 != s2.length()))
    {
        if(ans[val][idx1][idx2])
        {
            cout << "(";
            if(idx1 < s1.length() && s1[idx1] == '(')
                idx1++;
            if(idx2 < s2.length() && s2[idx2] == '(')
                idx2++;
            val++;
        }
        else
        {
            cout << ")";
            if(idx1 < s1.length() && s1[idx1] == ')')
                idx1++;
            if(idx2 < s2.length() && s2[idx2] == ')')
                idx2++;
            val--;
        }
    }
}   