/*-----Deep D. Savani------------
-------DAIICT,INDIA--------------
*/
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
#define nax 1000010
typedef long long ll;
	
using namespace std;
	
long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);


void build()
{
	
}

vector<ll> adj[nax];
ll visit[5005];

ll c;

void dfs(ll x)
{
    visit[x]=1;
    c++;
    for(int i=0;i<adj[x].size();i++)
    {
        ll y=adj[x][i];
        if(!visit[y])
        {
            dfs(y);
        }
    }
}
	
int main(){

    build();
	ll n,m,s;
	scanf("%lld %lld %lld",&n,&m,&s);

	for(int i=0;i<m;i++)
	{
		ll x,y;
		scanf("%lld %lld",&x,&y);
		adj[x].pb(y);
	}

	vector< pair<ll,ll> > a;

    for(int i=1;i<=n;i++)
    {
        memset(visit,0,sizeof(visit));
        c=0;
        dfs(i);
        a.pb(mp(c,i));
    }

    sort(a.begin(),a.end());
    reverse(a.begin(),a.end());

    memset(visit,0,sizeof(visit));
    dfs(s);
    ll ans=0;
    
    for(int i=0;i<a.size();i++)
    {
        ll x=a[i].ss;
        if(!visit[x])
        {
            dfs(x);
            ans++;
        }
    }

    cout<<ans<<endl;





	return 0;
}
	
		
	
long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;
	
    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;

        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
        return result;
}
	
long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}
	
void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}
	
ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}