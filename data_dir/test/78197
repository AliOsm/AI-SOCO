#include <bits/stdc++.h>

using namespace std;

const int N = 1005;

int mat[N][N];
pair<int, int> p[N][N];

int dx[] = {0, 0, 1,-1};
int dy[] = {1,-1, 0, 0};

vector<pair<int, int>> straight(int a, int b, int c, int d){
    vector<pair<int, int>> ans;
    while(a != c){
        if(a < c) a++;
        else a--;
        ans.emplace_back(a, b);
    }
    while(b != d){
        if(b < d) b++;
        else b--;
        ans.emplace_back(a, b);
    }
    return ans;
}

vector<pair<int, int>> solve(int xa, int ya, int xb, int yb,int xc,int yc){
    
    memset(p, -1, sizeof p);

    queue<pair<int, int>> q;

    int a, b;

    q.emplace(xc, yc);
    p[xc][yc] = {xc, yc};

    vector<pair<int, int>> ans;
    int dist = abs(xa-xb) + abs(ya-yb);
    while(!q.empty()){
        tie(a, b) = q.front();
        q.pop();
        if(abs(a-xa)+abs(b-ya)+abs(a-xb)+abs(b-yb) <= dist){
            for(auto w : straight(a, b, xa, ya))
                ans.push_back(w);
            for(auto w : straight(a, b, xb, yb))
                ans.push_back(w);
            break;
        }

        for(int i = 0; i < 4; i++){
            int xx = a + dx[i], yy = b + dy[i];
            if(xx < 0 || xx > 1002) continue;
            if(yy < 0 || yy > 1002) continue;
            if(p[xx][yy].first != -1) continue;
            p[xx][yy] = {a, b};
            q.emplace(xx, yy);
        }
    }


    while(!q.empty()) q.pop();

    {
        while(a != xc || b != yc){
            ans.emplace_back(a, b);
            tie(a, b) = p[a][b];
        }
        ans.emplace_back(xc, yc);
    }

    return ans;
}

int main(){

    int xa, ya, xb, yb, xc, yc;
    scanf("%d %d", &xa, &ya);
    scanf("%d %d", &xb, &yb);
    scanf("%d %d", &xc, &yc);

    auto ans = solve(xa, ya, xb, yb, xc, yc);

    auto tmp = solve(xc, yc, xb, yb, xa, ya);
    if(tmp.size() < ans.size()) swap(ans, tmp);
    tmp.clear();
    
    tmp = solve(xc, yc, xa, ya, xb, yb);
    if(tmp.size() < ans.size()) swap(ans, tmp);
    tmp.clear();

    printf("%d\n", (int)ans.size());

    for(auto w : ans)
        printf("%d %d\n", w.first, w.second);


}
