#include <bits/stdc++.h>
using namespace std;
#define ll long long

    void solve()
    {
        ll n;
        cin>>n;
        string s1, s2;
        cin>>s1>>s2;
        /*  j_new, i_new,    j_old, i_old */

        deque <   pair< pair <ll, ll>, pair <ll,ll> > > a;

        //a.push_back( {},{} )


        if (s1[0]  < '3')
        {
        a.push_back( { {1, 0} , {0,0} } );
        }
        if (s1[0] > '2')
        a.push_back( { {0,1}, {0,0}   }  );
        //a.pop_front();
        while (a.size() > 0)
        {
            ll cur_j = a[0].first.first;
            ll cur_i = a[0].first.second;
            ll prev_j = a[0].second.first;
            ll prev_i = a[0].second.second;
          //  cout<<cur_j<<" "<<cur_i<<" "<<"  from  "<<prev_j<<" "<<prev_i<<endl;
            if ((cur_j==n) && (cur_i==1))
            {
                cout<<"YES"<<endl;
                return;
            }

            if (cur_i==0) // upper
            {
                    ll number = s1[cur_j]-'0';
                    if (number<3)
                    {
                        if (prev_i==cur_i)
                        a.push_back( { {cur_j+1, cur_i}, {cur_j, cur_i} } );
                    }
                    if (number > 2)
                    {
                        if (prev_i==cur_i)
                        a.push_back( { {cur_j, cur_i+1}, {cur_j, cur_i} } );
                        else
                        a.push_back( { {cur_j+1, cur_i} , {cur_j, cur_i} } );
                    }
            }
            if (cur_i == 1) // lower
            {
                ll number = s2[cur_j]-'0';
                        if (number < 3)
                        {
                            if (prev_i == cur_i)
                            a.push_back(  {  {cur_j+1, cur_i}, {cur_j, cur_i} } );
                        }
                        if (number > 2)
                        {
                            if (prev_i == cur_i)
                            a.push_back(  { {cur_j, cur_i - 1}, {cur_j, cur_i}  } );
                            else
                            a.push_back( { {cur_j+1, cur_i}, {cur_j, cur_i}  } );
                        }


            }





        a.pop_front();

        }

    cout<<"NO"<<endl;
    return;

    }

int main()
{
//    freopen("input.txt","r",stdin);
        ll t;
        cin>>t;
        for(ll i=0; i<t; i++)
            solve();

    return 0;
}
