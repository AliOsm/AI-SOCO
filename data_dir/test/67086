#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("input.txt","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef pair<int, int> pii ;
typedef tree< pii, null_type, less<pii>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define maxn 300005

i64 dp[maxn] , a[maxn] , mx , ans = 0LL ;
vector <i64> g[maxn] ;

void dfs(int u ,int par , int fl)
{
    dp[u] = a[u] ;

    for(int i=0 ; i<g[u].size() ; i++)
    {
        int v = g[u][i] ;
        if( v==par ) continue ;
        dfs( v , u , fl ) ;
        dp[u] = max( dp[u] , dp[u]+dp[v] ) ;
    }
    if( fl==1 )
    {
        if( dp[u]==mx )
        {
            ans++ ;
            dp[u] = 0LL ;
        }
    }
    return ;
}

int main()
{
    i64 i , j , k , l , m , n ;

    scanf("%lld",&n) ;
    for(i=1 ; i<=n ; i++) scanf("%lld",&a[i]) ;

    for(i=1 ; i<n ; i++)
    {
        i64 u , v ;
        scanf("%lld %lld",&u,&v) ;
        g[u].pb(v) ; g[v].pb(u) ;
    }

    dfs(1,0,0) ;
    mx = dp[1] ;
    for(i=2 ; i<=n ;i++) mx = max(mx,dp[i]) ;
    dfs(1,0,1) ;

    printf("%lld %lld\n",mx*ans,ans) ;

    return 0 ;
}
