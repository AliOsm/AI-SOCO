#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <algorithm>
#include <climits>
#include <cmath>
using namespace std;
 
int mas[6] = {4, 8, 15, 16, 23, 42};
 
int main(int argc, char const *argv[])
{
	int q;
	cin >> q;
	while(q--) {
		int n;
		cin >> n;
		map <int, int> m;
		set <int> s;
		for(int i = 0; i < 4 * n; ++i) {
			int a;
			cin >> a;
			s.insert(a);
			m[a]++;
		}
		int len = INT_MAX, kol = 0;
		bool bad = false;
		while(!m.empty()) {
			map <int, int> :: iterator it = m.begin();
			m.erase(it);
			int len_a = (it -> first);
			int kol_a = (it -> second);
			if(kol_a & 1) {
				bad = true;
				break;
			}
			int len_b;
			int kol_b;
			if(!m.empty()) {
				map <int, int> :: iterator it1 = m.end();
				it1--;
				m.erase(it1);
				len_b = (it1 -> first);
				kol_b = (it1 -> second);
				if(len == INT_MAX) {
					if(kol_a == kol_b) {
						len = len_a * len_b;
						kol += kol_a;
					} else {
						bad = true;
						break;
					}
				} else {
					if(kol_a == kol_b && len_a * len_b == len) {
						kol += kol_a;
					} else {
						bad = true;
						break;
					}
				}
			} else {
				if(len == INT_MAX) {
					len = len_a * len_b;
					kol += kol_a;
				} else {
					if(len_a * len_a == len) {
						kol += kol_a;
					} else {
						bad = true;
						break;
					}
				}
			}
		}
		cout << (bad ? "NO" : "YES") << endl;
	}

 	return 0;
}