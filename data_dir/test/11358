#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfs(x) scanf("%s", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define fst(x) cout << fixed << setprecision(x)
#define mod 1000000007
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;

bool vis[502][502];
int n, m, dx[] = {0, 0, 1, -1}, dy[] = {1, -1, 0, 0}, k;
char a[502][502];
bool safe(int x, int y)
{
    return x <= n && x > 0 && y <= m && y > 0 && !vis[x][y];
}

void solve(int x, int y)
{
    if (!safe(x, y) || k == 0)
        return;
    vis[x][y] = true;
    for (int i = 0; i < 4; i++)
        if (k > 0)
            solve(x + dx[i], y + dy[i]);
    if (k > 0)
        a[x][y] = 'X';
    k--;
}

int main()
{
    int x = 1, y = 1;
    cin >> n >> m >> k;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
            cin >> a[i][j], vis[i][j] = (a[i][j] == '#'), x = (a[i][j] == '.'? i: x), y = (a[i][j] == '.'? j: y);
    solve(x, y);
    for (int i = 1; i <= n; i++, cout << endl)
        for (int j = 1; j <= m; j++)
            cout << a[i][j];
    return 0;
}