#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
#include <memory.h>

#include <time.h>
#pragma comment(linker, "/STACK:100000000")
using namespace std;

#define mp make_pair
#define pb push_back
#define ll long long
#define sz(x) (int)(x).size()

string str[3];
set<pair<int, int> > st;

int main()
{
    
    //freopen("input.txt","rt",stdin);
    //freopen("bipartite.in","rt",stdin);
    //freopen("bipartite.out","wt",stdout);
    
    int t;
    scanf("%d", &t);
    for(int T = 0; T < t; T++) {
        int n, k;
        scanf("%d %d", &n, &k);
        st.clear();
        for(int i = 0; i < 3; i++) {
            cin >> str[i];
            str[i] += "........";
            if(str[i][0] == 's') st.insert(mp(i, 0));
        }
        bool win = false;
        while(sz(st) != 0) {
            if(win) break;
            set<pair<int, int> > nxtst;
            for(set<pair<int, int> >::iterator it = st.begin(); it != st.end(); it++) {
                int r = it->first;
                int c = it->second;
                if(c > n) {
                    win = true;
                    break;
                }
                c++;
                if(str[r][c] != '.') continue;
                if(str[r][c+1] == '.' && str[r][c+2] == '.') nxtst.insert(mp(r, c+2));
                if(r != 0 && str[r-1][c+1] == '.' && str[r-1][c+2] == '.' && str[r-1][c] == '.')  nxtst.insert(mp(r-1, c+2));
                if(r != 2 && str[r+1][c+1] == '.' && str[r+1][c+2] == '.' && str[r+1][c] == '.')  nxtst.insert(mp(r+1, c+2));
            }
            swap(st, nxtst);
        }

        if(win) printf("YES\n");
        else printf("NO\n");
    }

    return 0;
}