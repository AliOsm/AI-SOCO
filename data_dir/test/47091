#include<bits/stdc++.h>

using namespace std;

#define ll long long int

ll mod=1e9+7,zero,one,two,dp[200005][3],n;

ll Find(ll first_term, ll last_term)
{
    ll tot=(last_term-first_term)/3LL;

    return (tot+1);
}

ll Mod(ll a, ll b)
{
    a=((a%mod)+(b%mod))%mod;

    return a;
}

ll func(ll indx, ll sum)
{
    if(indx==n)
    {
        return (!sum);
    }

    if(dp[indx][sum]!=-1)
    {
        return dp[indx][sum];
    }

    ll ans=0;

    ans=Mod(ans,zero*func(indx+1,sum));

    ans=Mod(ans,one*func(indx+1,(sum+1)%3));

    ans=Mod(ans,two*func(indx+1,(sum+2)%3));

    return dp[indx][sum]=ans;
}

int main()
{
    ll l,r,i,j;

    cin>>n>>l>>r;

    ll first_term=-1,last_term=-1;

    for(i=l; i<=r; i++)
    {
        if(i%3==0)
        {
            first_term=i;

            break;
        }
    }

    for(i=r; i>=l; i--)
    {
        if(i%3==0)
        {
            last_term=i;

            break;
        }
    }

    if(first_term!=-1)
    {
        zero=Find(first_term,last_term);
    }

    first_term=-1,last_term=-1;

    for(i=l; i<=r; i++)
    {
        if(i%3==1)
        {
            first_term=i;

            break;
        }
    }

    for(i=r; i>=l; i--)
    {
        if(i%3==1)
        {
            last_term=i;

            break;
        }
    }

    if(first_term!=-1)
    {
        one=Find(first_term,last_term);
    }

    first_term=-1,last_term=-1;

    for(i=l; i<=r; i++)
    {
        if(i%3==2)
        {
            first_term=i;

            break;
        }
    }

    for(i=r; i>=l; i--)
    {
        if(i%3==2)
        {
            last_term=i;

            break;
        }
    }

    if(first_term!=-1)
    {
        two=Find(first_term,last_term);
    }

    memset(dp, -1, sizeof dp);

    ll ans=func(0LL,0LL);

    cout<<ans<<endl;

    return 0;


}
