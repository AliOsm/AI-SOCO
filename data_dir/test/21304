#include <bits/stdc++.h>
#define PI 3.1415926535897932384626
using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};

struct P
{

    long long x,y;
    bool operator <(const P &a) const{
        if(x!=a.x) return x<a.x;
        return y<a.y;
    }
};


bool as(P a,P b)
{
    if(a.x!=b.x)
    return a.x<b.x;
    return a.y<b.y;
}


long long x,y,z,mod=1000000007;
vector<int> v[203010],v1;
int i,n,m,k,a,d,b,c,dx[10]={1,0,-1,0},dy[10]={0,1,0,-1};
int e[33][33][2];
int o[31][33];
int l[1203001];
int par[211001];
int j[31];
//stack<int> s;
set<P> s;
queue<int> q,q1;
long long u[201101];
char r[31][33];
//string r,r1;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

int f(int n)
{
    //printf("%d\n",n);
    if(n==(1<<a)-1) return 0;
    if(l[n]>=0) return l[n];
    l[n]=987654321;
    for(int p=1,i=1;;p*=2,i++)
        if((p&n)==0)
    {
        l[n]=f(n+p)+j[i];
        for(int t=1;t<=b;t++)
            l[n]=min(f(n|e[i][t][1])+e[i][t][0],l[n]);
        break;
    }
    return l[n];
}

int main()
{
    memset(l,-1,sizeof(l));
    scanf("%d %d",&a,&b);
    for(int t=1;t<=a;t++)
        scanf("%s",r[t]+1);
    for(int t=1;t<=a;t++)
    {
        for(int w=1;w<=b;w++)
        {
            for(int i=1;i<=a;i++)
                if(i!=t&&r[t][w]==r[i][w]) goto qwe;
            d+=(1<<(t-1));
            break;
            qwe:;
        }
    }
    for(int t=1;t<=a;t++)
    {
        for(int w=1;w<=b;w++)
        scanf("%d",&o[t][w]);
        j[t]=987654321;
        for(int w=1;w<=b;w++)
            j[t]=min(j[t],o[t][w]);
    }
    for(int t=1;t<=a;t++)
    {
        for(int w=1;w<=b;w++)
        {
            int k=0;
            for(int i=1;i<=a;i++)
            if(r[i][w]==r[t][w])
            k=max(k,o[i][w]),e[t][w][0]+=o[i][w],e[t][w][1]^=(1<<(i-1));
            e[t][w][0]-=k;
        }
    }
    //for(int i=1;i<=a;i++,puts(""))
    //for(int t=1;t<=b;t++)
        //printf("%d ",j[i]);
    printf("%d",f(d));
}
