#pragma GCC optimize("Ofast")
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ll long long
//#define int  unsigned long long
#define pb push_back
//#define double long double

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
const int N = 100000;
const int mod = 998244353;
const int K = 18;
const int M = 16;
int s[N];
main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int tc;
    cin >> tc;
    while(tc--){
        int a, b, q;
        cin >> a >> b >> q;
        memset(s, 0, sizeof(s));
        for (int i = 0; i < a * b; i++){
            if (((i % a) % b) != ((i % b) % a)) s[i] = 1;
            if (i != 0) s[i] += s[i - 1];
        }
        while(q--){
            int l, r;
            cin >> l >> r;
            int ans = 0;
            if (r / (a * b) == l / (a * b)){
                r = r % (a * b);
                l = l % (a * b);
                ans = s[r];
                if (l != 0) ans -= s[l - 1];
                cout << ans << " ";
            } else{
                if (l % (a * b) != 0){
                    ans = s[a * b - 1] - s[(l % (a * b)) - 1];
                    l = l - (l % (a * b)) + a * b;
                }
                if (r % (a * b) != 0){
                    ans = ans + s[r % (a * b)];
                    r = r - r % (a * b);
                }
                int c = (r - l) / (a * b);
                ans += c * s[a * b - 1];
                cout << ans << " ";
            }
        }
        cout << endl;
    }
}
