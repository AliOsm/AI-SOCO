#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.14159265
using namespace std;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef bitset<8> mask;
//int x4[4]={1,0,0,-1};
//int y4[4]={0,1,-1,0};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
int n,m,x,y,vis[200010],ans,h,c,p[200020];
vector<ll>adj[200010];
void dfs(int s,int v)
{
    vis[s]=1;
    p[s]++;
    if(p[s]>1)
        return;
    if(adj[s].size()!=2)
        h=1;
    for(int i=0;i<adj[s].size();i++)
    {
        if(adj[s][i]!=v)
          dfs(adj[s][i],s);
    }
}
int main()
{
    //cout<<Pow((ll)1000000,(ll)110);
//freopen("hotel.in","r",stdin);
//freopen("math.in","w",stdout);
//printf("%s %.4f\n",k.c_str(),g);
cin>>n>>m;
for(int i=1;i<=m;i++)
{
    cin>>x>>y;
    adj[x].push_back(y);
    adj[y].push_back(x);
}

for(int i=1;i<=n;i++)
{
    h=0;
    if(vis[i]==0)
    {
       dfs(i,-1);
       if(p[i]==2&&h==0)
        ans++;
    }

}
cout<<ans;
return 0;
}
