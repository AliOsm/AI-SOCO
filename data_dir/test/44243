#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define ZERO (1e-10)
#define INF int(1e9+1)
#define CL(A,I) (memset(A,I,sizeof(A)))
#define DEB printf("DEB!\n");
#define D(X) cout<<"  "<<#X": "<<X<<endl;
#define EQ(A,B) (A+ZERO>B&&A-ZERO<B)
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
#define IN(n) int n;scanf("%d",&n);
#define FOR(i, m, n) for (int i(m); i < n; i++)
#define F(n) FOR(i,0,n)
#define FF(n) FOR(j,0,n)
#define FT(m, n) FOR(k, m, n)
#define aa first
#define bb second
void ga(int N,int *A){F(N)scanf("%d",A+i);}
#define MX (1<<17)
typedef long double ld;
int L[MX],H[MX],C[MX][8],f[MX][8],X;
void gen(void){
    F(MX)H[i]=i;
    for(int i(2);i<MX;++i)if(H[i]>1)
        for(int j(i),c(0);j<MX;j+=i,c=0){
            while(!(H[j]%i))H[j]/=i,++c;
            if(c)C[j][L[j]]=c,f[j][L[j]++]=i;
        }
}
ll pw(ll n,ll k){
    ll r(1);
    while(k){
        if(k&1)r*=n;
        n*=n,k>>=1;
    }
    return r;
}
struct fn{
    int F[MX];
    void clr(){CL(F,0);if(!X++)gen();}
    void ad(int a){F(L[a])F[f[a][i]]+=C[a][i];}
    void sb(int a){F(L[a])F[f[a][i]]-=C[a][i];}
    ld ev(){
        ld S=1;
        F(MX)if(F[i]>0)S*=pow(i,F[i]);
             else if(F[i]<0)S/=pow(i,-F[i]);
        return S;
    }
}F;
void fc(int N){FT(2,N+1)F.ad(k);}
void iv(int N){FT(2,N+1)F.sb(k);}
int K,N,I,A[MX],S;
int main(void){
    scanf("%d%d%d",&K,&N,&I),--I,ga(N,A),--K,assert(~--A[I]),S=accumulate(A,A+N,0),F.clr();
    if(S<K)return puts("-1");
    if(S-A[I]<K)return puts("1");
    fc(S-A[I]),iv(K),iv(S-A[I]-K);
    iv(S),fc(K),fc(S-K);
    printf("%.30lf\n",double(1-F.ev()));
    return 0;
}
