#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 2e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;
/*
2
3
5
7
11
13
17
19
23
29
31
37
41
43
47
53
*/
void solve()
{
    lli a[] = {2,
3,
5,
7,
11,
13,
17,
19,
23,
29,
31,
4,
9,
25,
49,37, 41,43,47,53
};
string s;
bool flag = 0;
map<lli, lli > ma;
for(int i = 0; i < 20; i ++)
{
    cout<<a[i]<<endl;
    cin>>s;
    if(s == "yes"){
        ma[a[i]] ++;
        if(ma[a[i]] > 1)
        flag = 1;
    }
}
if(ma.size() > 1)
    flag = 1;
if(flag == 0)
    cout<<"prime";
else
    cout<<"composite";
    return ;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
//    cin>>t;
    t = 1;
    while(t--)
    {
        solve();
    }
    return 0;
}
