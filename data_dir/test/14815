
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 21;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;

int n, m;
ll ans, K, a[N][N];
map<ll, int> f[N][N];

void calc1(int i, int j, int k, ll x) {
	x ^= a[i][j];
	f[i][j][x]++;
	if (!k) 
		return;
	if (i + 1 < n) calc1(i + 1, j, k - 1, x);
	if (j + 1 < m) calc1(i, j + 1, k - 1, x);
}

void calc2(int i, int j, int k, ll x) {
	ans += f[i][j][K^x];
	x ^= a[i][j];
	if (!k) 
		return;
	if (i - 1 >= 0) calc2(i - 1, j, k - 1, x);
	if (j - 1 >= 0) calc2(i, j - 1, k - 1, x);
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif

	scanf("%d%d%lld", &n, &m, &K);
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			scanf("%lld", &a[i][j]);
	int m1 = (n + m - 1) / 2, m2 = (n + m - 1) - m1;
	calc1(0, 0, m1, 0);
	calc2(n - 1, m - 1, m2-1, 0);
	printf("%lld\n", ans);
	return 0; 
}