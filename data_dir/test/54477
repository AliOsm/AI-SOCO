#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>

using namespace std;
using ll = long long;
const int oo = numeric_limits<int>::max() / 2;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
	int n;
	cin >> n;
	vector<ll> a(n);
	for(int i = 0; i < n; ++i) {
		cin >> a[i];
	}
	int m;
	cin >> m;
	vector<ll> b(m);
	for(int i = 0; i < m; ++i) {
		cin >> b[i];
	}

	if (accumulate(a.begin(), a.end(), (ll)0) != accumulate(b.begin(), b.end(), (ll)0)) {
		cout << -1 << endl;	
		return 0;
	}

	ll suma = 0, sumb = 0;
	int i = 0, j = 0;
	int ret = -1;
	while(i < n && j < m) {
		if (suma == sumb) {
			++ret;
			suma = a[i++];
			sumb = b[j++];
		} else {
			if (suma < sumb) {
				suma += a[i++];
			} else {
				sumb += b[j++];
			}
		}
	}
	
	while(i < n) suma += a[i++];
	while(j < m) sumb += b[j++];
	if (suma == sumb) {
		++ret;
	}
	
	cout << ret << endl;
	return 0;
}
