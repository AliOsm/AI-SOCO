#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef unsigned int uint;
typedef long double ld;
//#define ll __int128
#define int ll
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;

#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a,b) make_pair(a,b)
#define modsum(a, b) ((a) + (b) >= M ? (a) + (b) - M : (a) + (b))
#define modsubtract(a, b) ((a) - (b) < 0 ? (a) - (b) + M : (a) - (b))
#define modmultiply(a, b) (((a) * (b)) % M)
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define cint const int &
#define SZ(a) ((int)(a.size()))
#define watch(x) cout << (#x) << " = " << x << endl;

const double PI = atan2(1, 0) * 2;

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";


template<class T>
ostream & operator << (ostream &out, vector<T> &a) {
    out << "{";
    for (auto x : a) out << x << " ";
    return out << "}";
}

void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);


#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n";
    cout << "TOTAL EXECUTION TIME: " << float(clock() - start) / CLOCKS_PER_SEC << endl;
#endif
}


struct edge
{
    int a, b, w;

    edge(int a = 0, int b = 0, int w = 0): a(a), b(b), w(w){};
};


const int N = 1 << 17, INF = 1e9 + 10;

int sze[N], par[N];


bool cmp(edge a, edge b)
{
    return a.w < b.w;
}


int find_par(int v)
{
    if (par[v] != v)
        return par[v] = find_par(par[v]);

    return v;
}


void unin(int a, int b)
{
    if (sze[a] > sze[b])
        par[b] = a;
    else
        par[a] = b;
}


void smain() {

    int n, m, k;
    cin >> n >> m >> k;
    vi quer(k);

    for (int i = 0; i < N; ++i)
        par[i] = i;

    for (int i = 0; i < k; ++i)
    {
        int l;
        cin >> l;
        quer[i] = l;
        sze[l] = 1;
    }

    vector<edge> tst(m);
    for (int i = 0; i < m; ++i)
    {
        int a, b, w;
        cin >> a >> b >> w;
        tst.push_back(edge(a, b, w));
    }

    stable_sort(ALL(tst), cmp);

    int ans = 0;

    for (auto p : tst)
    {
        find_par(p.a);
        find_par(p.b);

        if (par[p.a] == par[p.b])
            continue;

        if (sze[par[p.a]] && sze[par[p.b]])
            ans = p.w;

        unin(par[p.a], par[p.b]);
    }

    for (int i = 0; i < k; ++i)
        cout << ans << ' ';
}