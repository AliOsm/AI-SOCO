#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n, q;
	cin >> n >> q;
	
	int cnt = 0;
	
	vector<vector<bool>> flags(3, vector<bool>(n + 1));
	
	for(int i = 0; i < q; i++){
		int x, y;
		cin >> x >> y;
		
		int op = 1;
		if(x == 1)
			op = 2;
		
		if(flags[x][y]){
			flags[x][y] = false;
			for(int j = -1; j <= 1; j++){
				if(y + j >= 1 && y + j <= n && flags[op][y + j])
					cnt--;
			}
		}
		else{
			flags[x][y] = true;
			for(int j = -1; j <= 1; j++){
				if(y + j >= 1 && y + j <= n && flags[op][y + j])
					cnt++;
			}
		}
		
		
		if(cnt == 0)
			cout << "Yes" << endl;
		else
			cout << "No" << endl;
	}

	return 0;
}
