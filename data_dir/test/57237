#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

typedef long long            ll;
typedef unsigned long long   ull;
typedef vector<int>          vi;
typedef vector<ll>           vl;
typedef pair<int, int>       pi;
typedef pair<ll, ll>         pl;
typedef vector<pi>           vpi;
typedef vector<pl>           vpl;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define read        freopen("in.c", "r", stdin)
#define write       freopen("out.c", "w", stdout)
#define all(a)      a.begin(), a.end()
#define bye         exit(0)
#define mp          make_pair
#define ff          first
#define ss          second
#define L(x)        ((x) << 1)
#define R(x)        ((x) << 1 | 1)
#define bit(x)      (1LL << (x))
#define SZ(a)       (ll)(a).size()
#define pb          push_back
#define eb          emplace_back
#define pp          pop_back
#define eps         1e-9
#define inf         (1000000000)
#define infl        (1000000000000000000LL)
#define cs(p)       printf("Case %d:", (p)++)
#define ptc(c)      putchar(c)
#define gtc()       getchar()
#define nl          puts("")
#define sp          printf(" ")
#define out(a)      printf("%lld", (ll)(a))
#define ots(s)      printf("%s", s)
#define SET(a)      memset((a), -1, sizeof(a))
#define CLR(a)      memset((a), 0, sizeof(a))
#define dbg(x)      cout << "--- " << #x << " = " << x << '\n'

ll bgm(ll a, ll b, ll m) {
    a %= m;
    ll rem = 1;
    while(b != 0) {
        if(b&1)
            rem = (rem * a) % m;
        a = (a * a)%m;
        b >>= 1;
    }
    return rem;
}

ll inv(ll a, ll mod) {
    return bgm(a, mod - 2, mod);
}

ll in() {
    ll a;
    assert(scanf("%lld", &a) != EOF);
    return a;
}

double dl() {
    double a;
    assert(scanf("%lf", &a) != EOF);
    return a;
}

const int MAX = 100 + 5;
const int LEN = 50;
const ll MOD = 1000000007;

double ttm;

ll n;
ll lim;
int cnt;

vi ara;

int x;

int f, fl;

ll ans, mov;

int main() {
    #ifndef ONLINE_JUDGE
        read, write;
        ttm = clock();
    #endif

    n = in();
    if(n == 1) {
        out(1), sp, out(0), nl;
        bye;
    }
    lim = sqrt(n + 1);

    ans = 1;
    for(int i = 2; i <= lim; i++) {
        cnt = 0;
        while(n % i == 0) {
            n /= i;
            ++cnt;
        }
        if(cnt != 0) {
            ara.pb(cnt);
            ans *= i;
        }
    }
    if(n != 1) {
        ara.pb(1);
        ans *= n;
    }

    x = *max_element(all(ara));

    cnt = 1, fl = 0;
    while(cnt < x)
        cnt <<= 1, ++fl;

    for(auto i : ara) {
        if(i != cnt)
            f = 1;
    }

    mov += f + fl;

    out(ans), sp, out(mov), nl;

    fprintf(stderr, "Runtime = %lf seconds\n", (clock() - ttm)/1000.0);
    return 0;
}
