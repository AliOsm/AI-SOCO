#include <bits/stdc++.h>
#define fio ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define ll long long
#define en cin.close();return 0;
#define INF ((ll)(1e18))
#define mod (ll)(1e8)
#define pb push_back
#define fi first//printf ("%lli\n",cur);
#define se second//scanf ("%lli",&n);
using namespace std;
struct t
{
    ll w, h, kord;
};
bool mys(t a, t b)
{
    return (a.w<b.w);
}
int main()
{
    fio
    //ifstream cin("in.inn");
    ll n, w, h;
    cin >> n >> w >> h;
    vector<t> cor;//correct
    cor.pb({0, 0, 0});
    for(ll i = 0;i<n;i++)
    {
        ll a, b;
        cin >> a >> b;
        if(a>w&&b>h)
        cor.pb({a, b, i+1});
    }
    if(cor.size()==1)
        return cout << 0, 0;
    sort(cor.begin(), cor.end(), mys);
    ll mx = 0, kord=1;
    ll dp[cor.size()+1], path[cor.size()+1];
    dp[0]=0;
    for(ll i = 1;i<cor.size();i++)
    {
        dp[i]=0;
        for(ll j = i-1;j>0;j--)
        {
            if(cor[i].w>cor[j].w&&cor[i].h>cor[j].h)
            {
                if(dp[i]<dp[j]+1)
                {
                    dp[i]=dp[j]+1;
                    path[i]=j;
                }
                if(dp[i]>mx)
                {
                    mx=dp[i];
                    kord=i;
                }
            }
        }
    }
    vector<ll> ans;
    while(dp[kord]>0)
    {
        ans.pb(cor[kord].kord);
        kord=path[kord];
    }
    ans.pb(cor[kord].kord);
    cout << ans.size() << "\n";
    for(ll i = ans.size()-1;i>=0;i--)
        cout << ans[i] << " ";
    //cin.close();
    return 0;
}
