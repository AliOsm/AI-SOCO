#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

#ifdef _DEBUG
	const int N = 5000010;
#else
	const int N = 5000010;
#endif

const int M = 1000000;

int n, m, a[N], cnt[N];
vector <int> d[M], ans;

int gcd(int a, int b)
{
	if (!b) return a;
	return gcd(b, a % b);
}

int lcm(int a, int b)
{
	return 1ll * a * b / gcd(a, b);
}

int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
	for (int i = 1; i <= n; i++) 
		if (a[i] <= m) cnt[a[i]]++;
	for (int i = 1; i <= M; i++)
		for (int j = i; j <= M; j += i) d[j].push_back(i);
	int opt = 1, res = 0;
	for (int i = 1; i <= m; i++)
	{
		int cur = 0;
		for (int j = 0; j < d[i].size(); j++) 
		{
			cur += cnt[d[i][j]];
		}
		if (cur > res)
		{
			res = cur;
			opt = i;
		}
	}
	int val = 1;
	for (int i = 1; i <= n; i++) 
		if (opt % a[i] == 0) 
		{
			val = lcm(val, a[i]);
			ans.push_back(i);
		}
	printf("%d %d\n", val, ans.size());
	for (int i = 0; i < ans.size(); i++) printf("%d ", ans[i]);
    return 0;
}