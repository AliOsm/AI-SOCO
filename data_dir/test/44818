#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstdio>
#include <string>
#include <stdlib.h>
#include <set>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <math.h>
#include <map>
#include <iterator>
#include <limits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>


using namespace std;

typedef int integer;
#define int long long
typedef array<int, 2> hv;
#define double long double
#define make(type, x) type x; cin>>x
#define make2(type, x, y) type x, y; cin>>x>>y
#define make3(type, x, y, z) type x, y, z; cin>>x>>y>>z
#define make4(type, x, y, z, q) type x, y, z, q; cin>>x>>y>>z>>q
#define ALL(x) (x).begin(), (x).end()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(int i = 0; i <(b); i++)
#define VI vector<int>
#define VVI vector<vector<int>>
#define PII pair<int, int>
#define PPII pair<PII, int>


void Solve() {
	make(int, n);
	VI a(n);
	VI dp(n + 1);
	dp[0] = -10;
	FOR(n) cin >> a[i];
	if (n < 3) {
		cout << 1;
		return;
	}
	int max1 = a[0];
	dp[max1]--;
	int max2 = 0;
	for (int i = 1; i < n; i++) {
		if (a[i] > max1) {
			max2 = max1;
			max1 = a[i];
			dp[max1]--;
			continue;
		}
		if (a[i] < max1 && a[i] > max2) {
			dp[max1]++;
			max2 = a[i];
			continue;
		}
	}
	cout << max_element(ALL(dp)) - dp.begin();
	

}

integer main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
#if  _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	Solve();
	while (!cin.eof()) {
		string s = "_";
		do getline(cin, s);
		while (!cin.eof() && !s.empty());
		if (cin.eof()) return 0;
		FOR(3) cout << endl;
		Solve();
	}
#else
	Solve();
#endif
	return 0;
}