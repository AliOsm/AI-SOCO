#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <cstdlib>
#include <utility>
#include <memory.h>
#include <cassert>
#include <iterator>
#include <bitset>
#include <iomanip>
#include <complex>
#include <queue>
#include <ctime>
#include <deque>
#include <stack>
#include <set>
#include <map>
 
using namespace std;
 
#define pb push_back
#define mp make_pair
#define F first
#define S second

int main() {                        
 // freopen("input.txt","r",stdin);
 // freopen("output.txt","w",stdout);
  int n;
  scanf("%d\n", &n);
  multiset<int> ms;
  multiset<int> :: iterator it;
  vector< pair<int, int> > v;
  for (int i = 1; i <= n; i++) {
  	char c;
  	scanf("%c", &c);
  	if (c == 'i') {
  		for (int j = 0; j < 5; j++) scanf("%c", &c);
  		int x;
  		scanf("%d", &x);
  		ms.insert(x);
  		if (i < n) scanf("\n");
  		v.pb(mp(1, x));
  	} else if (c == 'r') {
  		for (int j = 0; j < 8; j++) scanf("%c", &c);
  		if ((int)ms.size() == 0) {
  			v.pb(mp(1, 1));
  			ms.insert(1);
  		}
  		v.pb(mp(2, 0));
  		it = ms.begin();
  		ms.erase(it);
  		if (i < n) scanf("\n");
  	} else {
  		for (int j = 0; j < 5; j++) scanf("%c", &c);
  		int x;
  		scanf("%d", &x);
  		it = ms.find(x);
  		if (it == ms.end()) {
  			v.pb(mp(1, x));
  			ms.insert(x);
  		}
  		while (true) {
  			it = ms.begin();
  			if (*it == x) break;
  			v.pb(mp(2, 0));
  			ms.erase(it);
  		}
  		v.pb(mp(3, x));
  		if (i < n) scanf("\n");
  	}
  }
  string out[4] = {"@", "insert", "removeMin", "getMin"}; 
  printf("%d\n", (int)v.size());
  for (int i = 0; i < (int)v.size(); i++) {
  	if (v[i].F == 2) {
  		for (int j = 0; j < out[2].size(); j++) printf("%c", out[2][j]);
  		puts("");
  		continue;
  	}
  	if (v[i].F == 1) {
  		printf("insert %d\n", v[i].S);
  		continue;
  	}
  	printf("getMin %d\n", v[i].S);
  }
  return 0;
}