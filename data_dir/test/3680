#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e7; 
const int OO = 0x3f3f3f3f;
const double EPS = 1e-9; 

#define bug(x) cout << #x << " = " << x << '\n'
#define FOR(i, a, n) for(int i = a; i < (int)n; i++)
#define REP(i, n) FOR(i, 0, n)
#define fi first
#define se second
#define pb push_back
#define mt make_tuple
#define all(vetor) vetor.begin(), vetor.end()
#define X real()
#define Y imag()
//#define gc getchar_unlocked

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef complex<ll> Pll;
typedef complex<ld> Pld;

int n;
vector<int> G[MAX];
int ent[MAX], sz[MAX], vertex[MAX];
int tempo = 1;

int dfs(int v, int p)
{
    vertex[tempo] = v + 1;
    ent[v] = tempo++;
    int s = 1;
    for(int &u : G[v])
        if(u != p)
            s += dfs(u, v);

    return sz[v] = s;
}

int main()
{	
    int q;
    cin >> n >> q;
    FOR(i, 1, n)
    {
        int u;
        cin >> u;
        G[i].pb(u - 1);
        G[u - 1].pb(i);
    }
    dfs(0, -1);
    REP(i, q)
    {
        int u, k;
        cin >> u >> k; u--;
        if(sz[u] >= k)    
            cout << vertex[ent[u] + k - 1] << '\n';
        else
            cout << "-1\n";
    }

	return 0;
}