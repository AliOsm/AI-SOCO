#include <iostream>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
using namespace std;

inline void boostIO() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}

int n, u, v;
vector<int> edges[100100];

double solve(int cur = 1, int par = 0, int dis = 0) {
	if (edges[cur].size() == 1 && par > 0) {
		return dis;
	}

	double p = 1.0 / (edges[cur].size() - (par > 0));
	double res = 0;

	for (int v : edges[cur]) {
		if (v != par) {
			res += p * solve(v, cur, dis + 1);
		}
	}

	return res;
}

int main() {
	boostIO();
	cin >> n;
	for (int i = 1; i < n; ++i) {
		cin >> u >> v;
		edges[u].push_back(v);
		edges[v].push_back(u);
	}
	printf("%0.10lf",  solve());
	return 0;
}