//Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define int long long
#define endl "\n"

int par[200005];
set<int>v[200005];
int mark[200005];int st[200005];
map<pair<int,int>,int>mp;
int mod=1e9+7;
int n;
int sz=0,ctr=0;
void dfs1(int pos,int val)
{
    if(mark[pos]!=0)
    {
        sz=val+mark[pos];
        return;
    }
    mark[pos]=val+1;
    if(pos==1)
        return;
    dfs1(par[pos],val+1);
}
void dfs(int pos,int p)
{
    if(par[pos])
        return;
    par[pos]=p;
    ctr++;
    for(int j:v[pos])
    {
        if(mp.find({pos,j})!=mp.end())
            sz=2;
        if(j!=p)
        {
            if(par[j] && !sz)
            {
                dfs1(j,0);
                dfs1(pos,0);
            }
            dfs(j,pos);
        }
    }
}
int32_t main()
{
    IOS;
    st[0]=1;
    for(int i=1;i<200004;i++)
        st[i]=(2*st[i-1])%mod;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        int a;cin>>a;
        if(v[a].find(i)!=v[a].end())
            mp[{a,i}]=1,mp[{i,a}]=1;
        v[a].insert(i);
        v[i].insert(a);
    }
    int ans=1;
    for(int i=1;i<=n;i++)
    {
        if(!par[i])
        {
            dfs(i,i);
            if(sz!=0)
                ans*=(st[ctr-sz]*(st[sz]-2))%mod;
            ans%=mod;
            sz=0;ctr=0;
        }
    }
    cout<<ans;
}