#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
using namespace std;
typedef long long mt;
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 2010
#define K 8101
#define M (300001)
#define INF 10000000007//10000000000000007// 1e16 + 7
#define MOD 1000000000  //1000000007//1e9 + 7
#define EPS 1e-9
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:2000000000")
mt gcd(mt a, mt b) {
	return b ? gcd(b, a % b) : a;
}
mt n, x, cx;
mt a[N];
int main(void)
{
#ifdef _DEBUG	
	freopen("in.txt", "r", stdin);
#endif
	scanf("%lld", &n);
	rep(0, n, i) {
		scanf("%lld", a + i);
		if (a[i] == 1) ++cx;
	}
	x = a[0];
	rep(1, n, i)
		x = gcd(x, a[i]);
	if (x != 1) puts("-1");
	else {
		if (!cx) {
			mt bl = INF;
			rep(0, n, i) {
				x = a[i];
				rep(i + 1, n, j) {
					x = gcd(x, a[j]);
					if (x == 1)
					{
						bl = min(bl, j - i);
						break;
					}
				}
			}
			printf("%lld\n", n - 1 + bl);
		}
		else printf("%lld\n", n - cx);
	}
	return 0;
}