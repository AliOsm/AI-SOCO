#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<bool> vb;
typedef vector<string> vs;
const int MOD = 1e9 + 7;
const int di[] = { -1,0,1,0 };
const int dj[] = { 0,1,0,-1 };
#define INF 1000000000
#define mp make_pair

ll bigmod(ll a, int p, int m) {
	if (p == 0)
		return 1;
	if (p % 2 == 1)
		return ((a % m) * (bigmod(a, p - 1, m) % m)) % m;
	ll c = bigmod(a, p / 2, m);
	return (c * c) % m;
}
ll fact(int n) {
	return n == 0 ? 1 : (n * fact(n - 1)) % MOD;
}
ll fact2(int n) {
	if (n == 0)
		return 1;
	return (bigmod(n, MOD - 2, MOD) * fact2(n - 1)) % MOD;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	//cout << fact2(2) << endl;
	int n, m; cin >> n >> m;
	if (m == n) {
		cout << 1 << endl; return 0;
	}
	vi num(m);
	for (int i = 0; i < m; i++)
		cin >> num[i];
	sort(num.begin(), num.end());

	ll r = fact(n - num.size());
	if (!num.empty()) {
		ll tn = fact2(num[0] - 1);
		r = (r * tn) % MOD;
		tn = fact2(n - num.back());
		r = (r * tn) % MOD;
	}

	for (int i = 1; i < m; i++) {
		r = (r * fact2(num[i] - num[i - 1] - 1)) % MOD;
	}
	for (int i = 1; i < m; i++) {
		if (num[i] - num[i - 1] - 1)
			r = (r * bigmod(2, num[i] - num[i - 1] - 2, MOD)) % MOD;
	}
	cout << r % MOD << endl;
	//cin.ignore(), cin.get();
}