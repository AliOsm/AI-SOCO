#include <bits/stdc++.h>
using namespace std;

const int MAXN=3*100*1000+99;
int p[MAXN];
int where[MAXN];

typedef pair<int, int> pii;
vector<pii> ans;
int N;
int op=0;

void do_swap(int A, int B)
{
    if(A==B) return;
    assert(abs(A-B)>=N/2);

    int pA=p[A];
    int pB=p[B];

    p[A]=pB;
    p[B]=pA;

    where[pA]=B;
    where[pB]=A;
    ans.push_back({A, B});
    op++;
    assert(op<=5*N);
}

int main()
{
    cin >>N;
    for(int i=1; i<=N; i++)
    {
        cin >> p[i];
        where[p[i]]=i;
    }

    for(int i=N; i>N/2; i--)
    {
        int Y=i;
        int U=where[Y];
        assert(U<=Y);
        if(U==Y) continue;

        if(U>N/2)
        {
            do_swap(1, U);
            do_swap(1, Y);
            //cout << "this\n";
        }
        else
        {
            if(U==1)
            {
                do_swap(U, Y);
            }
            else
            {
                if(Y==N)
                {
                    do_swap(U, Y);
                }
                else
                {
                    //cout << 1 <<  ' ' << U << ' ' << Y << ' ' << N << endl;
                    assert(1<U && U < Y && Y < N);
                    do_swap(U, N);
                    do_swap(1, N);
                    do_swap(1, Y);
                    do_swap(U, N);
                }
            }
            //cout << "that\n";
        }

        //for(int j=1; j<=N; j++) cout << p[j] << ' ';
        //cout << endl;
        assert(p[Y]==Y);
    }

    for(int i=N/2; i>=1; i--)
    {
        int Y=i;
        int X=where[Y];
        assert(X<=Y);
        if(X==Y) continue;

        do_swap(X, N);
        do_swap(Y, N);
        do_swap(X, N);
        assert(p[Y]==Y);
    }

    for(int i=1; i<=N; i++) assert(p[i]==i);

    cout << ans.size() << '\n';
    for(auto aa: ans)
    {
        cout << aa.first << ' ' << aa.second << '\n';
    }

    return 0;
}
