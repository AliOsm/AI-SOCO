#include <bits/stdc++.h>
using namespace std ;
#define ll long long 
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)

int const N = 200000;

map<int, int> mp;
int pa[N << 1 | 1];
map<int, int> x[N << 1 | 1];

int getid(int v){
	map<int, int>::iterator it = mp.find(v);
	if (it == mp.end()){
		int t = mp.size() + 1;
		x[t][t] = 0;
		return mp[v] = t;
	}
	return it->second;
}

int P(int v) { return pa[v] ? pa[v] = P(pa[v]) : v; }

void J(int a, int b, int z, int p, int q){
	if (a == b)return;
	if (x[a].size() < x[b].size())swap(a, b), swap(p, q);
	pa[b] = a;
	int t = x[b][q] ^ z ^ x[a][p];
	for (map<int, int>::iterator it = x[b].begin(); it != x[b].end(); x[b].erase(it++))x[a][it->first] = it->second ^ t;
}

int main(){
	int q;
	scanf("%d", &q);
	int lst = 0;
	while (q--){
		int o;
		scanf("%d", &o);
		if (o == 1){
			int l, r, x;
			scanf("%d%d%d", &l, &r, &x);
			l ^= lst;
			r ^= lst;
			x ^= lst;
			if (l > r)swap(l, r);
			l = getid(l - 1);
			r = getid(r);
			J(P(l), P(r), x, l, r);
		}else {
			int l, r;
			scanf("%d%d", &l, &r);
			l ^= lst;
			r ^= lst;
			if (l > r)swap(l, r);
			l = getid(l - 1);
			r = getid(r);
			int a = P(l), b = P(r);
			if (a != b)printf("-1\n"), lst = 1;
			else {
				lst = x[a][l] ^ x[a][r];
				printf("%d\n", lst);
			}
		}
	}
}