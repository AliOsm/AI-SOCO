#include<bits/stdc++.h>
using namespace std;

const int N = 100005;

vector< int > adj[N];

int u[N], v[N], dp[N], col[N];

int dfs(int x){
    if(dp[x] != -1) return dp[x];
    col[x] = 1;
    int ret = 0;
    for(int i=0;i<(int)adj[x].size();i++){
        if(col[adj[x][i]] == 1){
            col[x] = col[ adj[x][i] ] = 0;
            return dp[x] = N + N + N;
        }
        ret = max(ret , 1 + dfs(adj[x][i]));
    }
    col[x] = 0;
    return dp[x] = ret;
}

int main(){
    int n,k; scanf("%d %d",&n,&k);

    for(int i=1;i<=k;i++){
        scanf("%d %d",&u[i],&v[i]);
        adj[ u[i] ].push_back( v[i] );
    }

    for(int i=1;i<=n;i++) dp[i] = -1;
    for(int i=1;i<=n;i++) dp[i] = dfs(i);

    bool yes = false;
    for(int i=1;i<=n;i++) if(dp[i] == n - 1) yes = true;

    if(yes){
        int ans = 0;
        for(int i=1;i<=k;i++){
            if(dp[u[i]] - dp[v[i]] == 1) ans = max(ans , i);
        }

        printf("%d\n",ans);
    }else{
        puts("-1");
    }

    return 0;
}
