//besmellah
#include <bits/stdc++.h>
using namespace std;

#pragma GCC optimize("O3,Ofast,no-stack-protector,unroll-loops,fast-math")

typedef tuple <int, int, int, int> tii;

const int maxn = 1000, maxm = 2e5;
int A[maxn][maxn], V[maxm], U[maxm];
vector <tii> Q[maxm];
bitset <maxm> ans;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, m, q;
	cin >> n >> m >> q;
	for (int i = 0; i < n; i++)
		fill(A[i], A[i] + n, m);
	for (int i = 0; i < m; i++) {
		cin >> V[i] >> U[i];
		V[i]--;
		U[i]--;
	}
	for (int i = 0; i < q; i++) {
		int l, r, s, t;
		cin >> l >> r >> s >> t;
		l--;
		r--;
		s--;
		t--;
		Q[l].push_back(tii(r, s, t, i));
	}
	for (int i = m - 1; i >= 0; i--) {
		int v = V[i], u = U[i];
		A[v][u] = A[u][v] = i;
		for (int i = 0; i < n; i++)
			A[v][i] = A[u][i] = min(A[v][i], A[u][i]);
		for (tii T: Q[i]) {
			ans[get<3>(T)] = (A[get<1>(T)][get<2>(T)] <= get<0>(T));
		}
	}
	for (int i = 0; i < q; i++) {
		if (ans[i])
			cout << "Yes\n";
		else
			cout << "No\n";
	}
}
