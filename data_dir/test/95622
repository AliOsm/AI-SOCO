#include <stdio.h>

#define N	300000
#define N_	(1 << 19)	/* N_ = pow2(ceil(log2(N))) */

int max(int a, int b) { return a > b ? a : b; }

int sum[N_ * 2], suf[N_ * 2], aa[N_], n_;

void pul(int i) {
	int l = i << 1, r = l | 1;

	sum[i] = sum[l] + sum[r];
	suf[i] = max(suf[l] + sum[r], suf[r]);
}

void build(int n) {
	int i;

	n_ = 1;
	while (n_ < n)
		n_ <<= 1;
	for (i = 0; i < n_; i++)
		sum[n_ + i] = suf[n_ + i] = aa[i] = 0;
	for (i = n_ - 1; i > 0; i--)
		pul(i);
}

void update(int i, int x) {
	aa[i] += x;
	sum[n_ + i] = aa[i];
	suf[n_ + i] = max(aa[i], 0);
	i += n_;
	while (i > 1)
		pul(i >>= 1);
}

int main() {
	static int ii[N];
	int n, h, i, p;

	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		scanf("%d", &p), p--;
		ii[p] = i;
	}
	build(n);
	for (h = 0, p = n - 1; h < n; h++) {
		scanf("%d", &i), i--;
		while (suf[1] == 0)
			update(ii[p--], 1);
		update(i, -1);
		printf("%d ", p + 1 + 1);
	}
	printf("\n");
	return 0;
}
