//bismillahir rahmanir rahim            //Author:Fayed Anik
 
#include <bits/stdc++.h> 
 
using namespace std;
 
 
#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e17
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")
 
ll k;
ll dp[100005][2][2];

ll f(ll pos,ll p,ll ck){
	if(pos==k){
		return 1;
	}
	ll &ret=dp[pos][p][ck];
	if(ret!=-1){
		return ret;
	}
	ret=0;
	if(ck==0){
		ret+=f(pos+1,p,!ck)%mod;
		ret+= f(pos+1,!p,ck)%mod;
	}
	else{
		ret +=f(pos+1,!p,!ck)%mod;
	}
	return dp[pos][p][ck]=ret;
}
int main(){
	ll n,m;
	sfl(n),sfl(m);
	memset(dp,-1,sizeof dp);
	k=n;
	ll ans=(f(1,0,0)+f(1,1,0))%mod;
	k=m;
	memset(dp,-1,sizeof dp);
	ll ans1=(f(1,0,0)+f(1,1,0))%mod;
	ll tmp=(ans+ans1-2+mod)%mod;
	pfl(tmp);
	return 0;
}