#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < int, int > ii;

const int N = 2e5 + 5;

int n, dep_x;
int ch[N], d[N], par[N];
bool h[N];
vector < int > v[N];

int ask_d(int x) {
  printf("d %d\n", x);
  fflush(stdout);
  int v;
  scanf("%d", &v);
  if(!v) {
    printf("! %d\n", x);
    exit(0);
  }
  return v;
}

int ask_s(int x) {
  printf("s %d\n", x);
  fflush(stdout);
  int v;
  scanf("%d", &v);
  return v;
}

void dfs2(int p, int x) {
  ch[x] = 1;
  for(auto u : v[x]) {
    if(u != p and !h[u]) {
      dfs2(x, u);
      ch[x] += ch[u];
    }
  }
}

void dfs3(int p, int x) {
  d[x] = d[p] + 1;
  par[x] = p;
  for(auto u : v[x]) {
    if(u != p and !h[u]) {
      dfs3(x, u);
    }
  }
}

int find(int p, int x, int t) {
  for(auto u : v[x]) {
    if(u != p and !h[u] and ch[u] * 2 >= t) {
      return find(x, u, t);
    }
  }
  return x;
}

void dfs(int x) {
  dfs2(0, x);
  x = find(0, x, ch[x]);
  h[x] = 1;

  int dist = ask_d(x);

  if(d[x] + dist != dep_x) {
    dfs(par[x]);
  }
  else {
    dfs(ask_s(x));
  }
}

int main() {

  scanf("%d", &n);

  for(int i = 1; i < n; i++) {
    int x, y;
    scanf("%d %d", &x, &y);
    v[x].push_back(y);
    v[y].push_back(x);
  }

  dep_x = ask_d(1);

  d[0] = -1;
  dfs3(0, 1);

  dfs(1);

  return 0;

}

