#include<bits/stdc++.h>
using namespace std;
const int N = 1000*100 + 10;

vector <int> adj[N];
queue <int>	q;
bool mark[N] , part[N];

void BFS(){
	
	mark[0] = 1;
	part[0] = 1;
	q.push(0);
	
	while(q.size()){
		int u = q.front();
		
		for(int i = 0 ; i < adj[u].size() ; i++){
			if(!mark[adj[u][i]]){
				mark[adj[u][i]] = 1;
				q.push(adj[u][i]);
				
				if(!part[u])
					part[adj[u][i]] = 1;
			}
				
		}
		
		q.pop();
	}
	
	
}

int main(){
	
	long long n , x , y , t = 0;
	cin >> n;
	
	for(int i = 1 ; i < n ; i++){
		scanf("%d %d" , &x ,&y);
		adj[--x].push_back(--y);
		adj[y].push_back(x);
	}
	
	
	BFS();
	for(int i = 0 ; i < n ; i++){
		if(part[i])
			t++;
	}
	
	t = t*(n-t);
	
	cout << t - n + 1;
	
	
}