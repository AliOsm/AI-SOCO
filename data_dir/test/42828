#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define PB push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define debug(x) cerr<< #x << ": " << x << endl;
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

//const int mod = 1000 * 1000 * 1000 + 7;
const int N = 100 * 1000 + 10;
vector <int> vec[N], q;
int cl[N];
bool chck = true, mark[N];
int cnt = 0;
void bfs()
{
	while(cnt < size(q))
	{
		int v = q[cnt++];
		mark[v] = true;
		for(int u: vec[v])
			if(!mark[u])
			{
				if(cl[u] == 0)
				{
					cl[u] = cl[v] + 1;
					q.PB(u);
				}
				else if(cl[u] != cl[v] + 1)
					chck = false;
			}
	}
}

int main()
{
	int n, k;
	cin>> n >> k;
	FR(i, 0, n - 1)
	{
		int a, b;
		cin>> a >> b;
		a--, b--;
		vec[a].PB(b);
		vec[b].PB(a);
	}
	if(n < 4)
	{
		cout<< "No\n";
		return 0;
	}

	FR(i, 0, n)
		if(size(vec[i]) == 1)
			q.PB(i);

	bfs();

	int v = q[cnt - 1];
	FR(i, 0, n)
		if(size(vec[i]) != 1 && i != v && size(vec[i]) < 4)
			chck = false;
	if(size(vec[v]) < 3)
		chck = false;

	if(chck && cl[q[cnt - 1]] == k)
		cout<< "Yes\n";
	else
		cout<< "No\n";
	return 0;
}

