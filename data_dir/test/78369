//#include<bits/stdc++.h>
#include<iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include <stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>

using namespace std;

const int N = 1e5 + 5;
const int R = 320;
int p[N];
int n, m;
pair<int, int> dp[N];

void update(int a, int b)
{
	p[a] = b;
	int ind = a / R;
	int st = ind * R;
	int ed = (ind + 1) * R;
	ed = min(ed, n);
	ed--;
	for (int i = ed; i >= st; i--)
	{
		if (i + p[i] > ed)
		{
			dp[i].first = 1;
			dp[i].second = i;
		}
		else
		{
			dp[i].first = 1 + dp[i + p[i]].first;
			dp[i].second = dp[i + p[i]].second;
		}
	}
	/*
	for (int i = 0; i < n; i++)
	{
		cout << dp[i].second << " ";
	}
	cout << endl;
	*/
}

void get(int a)
{
	int ans = dp[a].second;
	int jump = dp[a].first;
	while (dp[a].second + p[dp[a].second] < n)
	{
		a = dp[a].second + p[dp[a].second];
		ans = dp[a].second;
		jump += dp[a].first;
	}
	//cout << "black" << " " << dp[1].second << endl;
	ans++;
	cout << ans << " " << jump << '\n';
}

int main() 
{
	std::ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m;
	for (int i = 0; i < n; i++)
	{
		cin >> p[i];
	}
	for (int i = n - 1; i >= 0; i--)
	{
		update(i, p[i]);
	}
	for (int i = 0; i < m; i++)
	{
		int mark;
		cin >> mark;
		if (mark == 0)
		{
			int a, b;
			cin >> a >> b;
			a--;
			update(a, b);
		}
		else
		{
			int a;
			cin >> a;
			a--;
			get(a);
		}
	}
}



