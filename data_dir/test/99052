//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second

typedef long long ll;
typedef pair < ll , ll > pll;
typedef pair < pll , ll > plll;

const ll N = 3e5 + 10;

ll dis[N], mark[N];
pll par[N];
vector < plll > adj[N];
vector < pll > g[N];
vector < ll > E;
priority_queue < pll , vector < pll > , greater < pll > > pq;

void dfs(ll v){
    mark[v] = 1;
    for (auto e : g[v]){
        ll u = e.X, id = e.Y;
        if (mark[u])
            continue;
        E.push_back(id);
        dfs(u);
    }
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    ll n, m, k;
    cin >> n >> m >> k;
    for (ll i = 1; i <= m; i ++){
        ll u, v, w;
        cin >> u >> v >> w;
        adj[u].push_back({{v, w}, i});
        adj[v].push_back({{u, w}, i});
    }
    memset(dis, 63, sizeof dis);
    fill(par, par + N, make_pair(-1, -1));
    dis[1] = 0;
    pq.push({0, 1});
    while (!pq.empty()){
        ll d = pq.top().X, v = pq.top().Y;
        pq.pop();
        if (d != dis[v])
            continue;
        for (auto e : adj[v]){
            ll u = e.X.X, w = e.X.Y, id = e.Y;
            if (d + w < dis[u]){
                dis[u] = d + w;
                par[u] = {v, id};
                pq.push({d + w, u});
            }
        }
    }
    for (ll v = 1; v <= n; v ++)
        if (par[v].X != -1)
            g[par[v].X].push_back({v, par[v].Y});
    for (ll v = 1; v <= n; v ++)
        if (!mark[v])
            dfs(v);
    ll t = min(k, (ll)E.size());
    cout << t << '\n';
    for (ll i = 0; i < t; i ++)
        cout << E[i] << ' ';
    return 0;
}
