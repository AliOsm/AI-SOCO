


#include<bits/stdc++.h>
using namespace std;

#define LL                  long long
#define ull                 unsigned long long LL
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)

#define N 500005

bool bad[N];
int main()
{

    LL n,k;
    cin>>n>>k;

    LL m=n;

    LL cnt=0;


    vector<LL>res;

    LL i=0;
    while(m)
    {
        LL r=m%2;

        if(r==1)
        {
            cnt++;

        }

        m=m>>1;
        i++;
    }

    if( k>n || cnt>k )
    {
        cout<<"NO"<<endl;
        return 0;
    }


    LL two[100];

    two[0]=1;

    cout<<"YES"<<endl;
    for(int i=1;i<=30;i++)
    {
        two[i]=2LL*two[i-1];
    }


    for(int i=30;i>=0;i--)
    {

        while( n-two[i]>=(k-1)  && n>0  && k)
        {
            n=n-two[i];
            k--;
            res.pb( two[i] );
        }

    }


    for(int i=0;i<res.size();i++)
    {
        cout<<res[i]<<" ";
    }

    return 0;
}


/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
