#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXN = 3005;

int R, C, A, B;
LL G0, X, Y, Z;

LL in[MAXN][MAXN];
LL minn[MAXN][MAXN];
int main() {
    cin >> R >> C >> A >> B;
    cin >> G0 >> X >> Y >> Z;
    REP(i, R) {
        REP(j, C) {
            if (i == 0 && j == 0) {
                in[i][j] = G0;
            } else if (j == 0) {
                in[i][j] = (in[i - 1][C - 1] * X + Y) % Z;
            } else {
                in[i][j] = (in[i][j - 1] * X + Y) % Z;
            }
        }
    }
    REP(i, R) {
        deque<P2> Q; // v, p
        REP(j, C) {
            while (!Q.empty() && Q.back().x >= in[i][j]) {
                Q.pop_back();
            }
            Q.push_back(P2(in[i][j], j));
            while (!Q.empty() && Q.front().y < j - B + 1) {
                Q.pop_front();
            }
            minn[i][j] = Q.front().x;
        }
    }
    REP(j, C) {
        deque<P2> Q; // v, p
        REP(i, R) {
            while (!Q.empty() && Q.back().x >= minn[i][j]) {
                Q.pop_back();
            }
            Q.push_back(P2(minn[i][j], i));
            while (!Q.empty() && Q.front().y < i - A + 1) {
                Q.pop_front();
            }
            minn[i][j] = Q.front().x;
        }
    }
    LL ans = 0;
    for (int i = A - 1; i < R; i++) {
        for (int j = B - 1; j < C; j++) {
            ans += minn[i][j];
        }
    }
    cout << ans << endl;
    return 0;
}
