#include <bits/stdc++.h>
#define SZ(x) (int)x.size()
#define X first
#define Y second
const int SZ=3e3+5;
const int mod=1e9+7;
typedef long long ll;
const ll oo=(1LL<<62);
const double PI=acos(-1);
const int dx4[]={0,0,1,-1};
const int dy4[]={-1,1,0,0};
const int dx8[]={0,0,1,-1,1,-1,1,-1};
const int dy8[]={-1,1,0,0,1,-1,-1,1};
using namespace std;

ll a[10][5];

ll dis(int i,int j)
{
	return	(a[i][0]-a[j][0])*(a[i][0]-a[j][0])+
			(a[i][1]-a[j][1])*(a[i][1]-a[j][1])+
			(a[i][2]-a[j][2])*(a[i][2]-a[j][2]);
}

bool isCube()
{
	ll d=oo;
	for(int j=1;j<8;j++)
		d=min(d,dis(0,j));
	
	if(!d) return 0;
	for(int i=0;i<8;i++)
	{
		int l1=0,l2=0,l3=0;
		for(int j=0;j<8;j++)
		{
			if(i==j) continue;
			ll l=dis(i,j);
			if(l==d) l1++;
			if(l==2*d) l2++;
			if(l==3*d) l3++;
		}
		
		if(!(l1==3 && l2==3 && l3==1)) 
			return 0;
	}
	
	return 1;
}

void print()
{
	for(int i=0;i<8;i++)
	{
		for(int j=0;j<3;j++)
			cout<<a[i][j]<<' ';
		cout<<'\n';
	}
}

bool solve()
{
	do {
		do {
			do {
				do {
					do {
						do {
							do {
								do {

		if(isCube()) 
			{cout<<"YES\n", print(); return 1;}

	} while(next_permutation(a[0],a[0]+3));
	} while(next_permutation(a[1],a[1]+3));
	} while(next_permutation(a[2],a[2]+3));
	} while(next_permutation(a[3],a[3]+3));
	} while(next_permutation(a[4],a[4]+3));
	} while(next_permutation(a[5],a[5]+3));
	} while(next_permutation(a[6],a[6]+3));
	} while(next_permutation(a[7],a[7]+3));

	return 0;
}

int main()
{
	for(int i=0;i<8;i++)
	{
		for(int j=0;j<3;j++)
			cin>>a[i][j];
		sort(a[i],a[i]+3);
	}
	
	if(!solve())
		cout<<"NO";
}