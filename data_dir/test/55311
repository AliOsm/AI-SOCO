#include <bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;

int n;
int factorial[2000011];

int binpow(int x, int n) {
	int res = 1;
	while (n > 0) {
		if (n & 1) res = res * 1ll * x % MOD;
		x = x * 1ll * x % MOD;
		n >>= 1;
	}
	return res;
}

int C(int n, int k) {
	return factorial[n] * 1ll * binpow(factorial[k] * 1ll * factorial[n - k] % MOD, MOD - 2) % MOD;
}

int main() {
	cin >> n;
	factorial[0] = 1;
	for (int i = 1; i <= 2000010; ++i) {
		factorial[i] = factorial[i - 1] * 1ll * i % MOD;
	}
	++n;
	int res = C(2 * n, n) - 1;
	if (res < 0) res += MOD;
	cout << res << endl;
	return 0;
}