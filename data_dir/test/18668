/**************************************************************************
Coded by: Saba Karimi(_VINTAGE)
Institution: AIT PUNE
***************************************************************************/
#include<bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define pb push_back 
#define all(a) a.begin(),a.end()
#define lb lower_bound
#define ub upper_bound
#define pii pair<int,int>
#define ld long double
//#define int long long int 
/**************************************************************************/
const int N = 1e6+6;
vector<int> tree[3*N];
int suff[N];
void build(int node,int start,int end)
{
    if(start == end)
    {
        tree[node].pb(suff[start]);
        return ;
    }
    int mid = (start+end)>>1;
    int l = node<<1;
    int r = l+1;
    build(l,start,mid);
    build(r,mid+1,end);
    merge(all(tree[l]),all(tree[r]),back_inserter(tree[node]));
}
long long int query(int node,int start,int end,int l,int r,int val)
{
    if(start>r || end<l) return 0;
    if(start>=l && end<=r)
        return lb(all(tree[node]),val)-tree[node].begin();
    int mid = (start+end)/2;
    return query(2*node,start,mid,l,r,val)+query(2*node+1,mid+1,end,l,r,val);
}
int main()
{
    fast;
    int n;
    cin>>n;
    map<int,int> mp,cp;
    int pre[n];
    int a[n];
    for(int i=0;i<n;i++)
    {
        cin>>a[i];
        mp[a[i]]++;
        pre[i] = mp[a[i]];
    }
    for(int i=n-1;i>=0;i--)
    {
        cp[a[i]]++;
        suff[i] = cp[a[i]];
    }
    build(1,0,n-1);
    long long int ans = 0;
    for(int i=0;i<n;i++)
    {
        ans+=query(1,0,n-1,i+1,n-1,pre[i]);
    }
    cout<<ans;
}