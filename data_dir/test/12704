#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;

typedef double db;
typedef long long ll;
typedef pair<db, db> pdd;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef unsigned long long ull;

#define F          first
#define S          second
#define pnl        printf("\n")
#define sz(x)      (int)x.size()
#define sf(x)      scanf("%d",&x)
#define pf(x)      printf("%d\n",x)
#define all(x)     x.begin(),x.end()
#define rall(x)    x.rbegin(),x.rend()
#define rep(i, n)  for(int i = 0; i < n; ++i)

const db eps = 1e-9;
const db pi = acos(-1);
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1000 * 1000 * 1000 + 7;

int n;
map<int, bool> done;

int main() {
    cin >> n;
    if (n == 2)
        return !printf("-1\n");
    vector<int> v = {6, 10, 15, 30};
    done[6] = done[10] = 1;
    done[15] = done[30] = 1;
    queue<int> q;
    q.push(30);
    while (sz(v) < n) {
        int me = q.front();
        q.pop();
        int a = me * 2;
        int b = me * 3;
        int c = me * 5;
        if (done.count(a) == 0) {
            v.push_back(a);
            q.push(a);
            done[a] = 1;
        }
        if (done.count(b) == 0) {
            v.push_back(b);
            q.push(b);
            done[b] = 1;
        }
        if (done.count(c) == 0) {
            v.push_back(c);
            q.push(c);
            done[c] = 1;
        }
    }
    for (int i = 0; i < n; ++i)
        printf("%d\n", v[i]);
    return 0;
}
