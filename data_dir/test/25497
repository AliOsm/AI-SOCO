#include <bits/stdc++.h>

#define f first
#define s second
#define fri(x) freopen(x, "r", stdin)
#define fro(x) freopen(x, "w", stdout)
#define mp(x, y) make_pair(x, y)

#define ct cout
#define sp " "
#define en "\n"

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned uns;
typedef pair<int, int> pii;

const int INF = (int) 1e9;
const ll LINF = (long long) 1e18;

template <typename Type1, typename Type2>
	Type1 mypow(Type1 n, Type2 k){
		Type1 ans = (Type1)1;
		while(k){
			k--;
			ans *= n;
		}
		return ans;
	}
template <typename T1, typename T2>
	T1 mymax(T1 x, T2 y){
		return x < (T1)y ? y : x;
	}
template <typename T>
	T myabs(T x){
		return x < 0 ? -x : x;
	}
template <typename T>
	void vv(vector<T> &v){
		for(int i = 0; i < v.size(); i ++)ct << v[i] << sp;
		cout << en;
	}

vector<int> a[150100];
int tp[150100];
void dfs(int cur, int par, int &sum, int &nsum){
	nsum = min(nsum, (int)a[cur].size());
	tp[cur] = 1;
	sum ++;
	for(int i = 0; i < a[cur].size(); i ++){
		int to = a[cur][i];
		if(to == par || tp[to])continue;
		dfs(to, cur, sum, nsum);
	}
}

void solve(){
	int n, m;
	cin >> n >> m;
	int nn = 0;
	for(int i = 0; i < m; i ++){
		int x, y;
		cin >> x >> y;
		a[x].push_back(y);
		a[y].push_back(x);
	}
	bool b = true; 
//	cout << a[3][4] << sp << a[3][2] << sp << a[2][4] << en;
//	cout << en;
	for(int i = 0; i < n; i ++){
		if(tp[i])continue;
		if(a[i].size() == 0)continue;
		if(a[i].size() == 1 && a[a[i][0]].size() == 1)continue;
		int sum = 0, nsum = INF;
		dfs(i, -1, sum, nsum);
//		cout << sum << sp << nsum << en;
		if(nsum != sum-1)b = false;
//		cout << a[i].size() << en;
	}
	if(b)cout << "YES";
	else cout << "NO";
}
int main(){
	srand(time(NULL));
	ios_base::sync_with_stdio(false);
	solve();
	
	
}

