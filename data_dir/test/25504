/*
 * temp.cpp
 *
 *  Created on: 2012-7-18
 *      Author: BSBandme
 */
#include <iostream>
#include <fstream>
#include <string.h>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cassert>
#include <iomanip>
#include <math.h>
#include <deque>
#include <utility>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <climits>
#include <cctype>
#include <cmath>
#include <cstdlib>
#include <sstream>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <double, double> pdd;
typedef vector <int> vi;
typedef vector <ll> vl;
typedef vector <double> vd;
typedef vector <string> vs;
typedef map <string, int> mpsi;
typedef map <double, int> mpdi;
typedef map <int, int> mpii;

const double pi = acos(0.0) * 2.0;
const double eps = 1e-12;

template <class T> inline T abs1(T a) {return a < 0 ? -a : a;}
template <class T> inline T max1(T a, T b) {return a > b ? a : b;}
template <class T> inline T min1(T a, T b) {return a < b ? a : b;}
template <class T> inline T gcd1(T a, T b) {
	if(a < b) swap(a, b);
	if(a % b == 0) return b;
	return gcd1(b, a % b);
}
template <class T> inline T lb(T num) {return num & (-num); }
inline int bitnum(ull nValue){
    nValue = ((0xaaaaaaaaaaaaaaaaull & nValue)>>1) + (0x5555555555555555ull & nValue);
    nValue = ((0xccccccccccccccccull & nValue)>>2) + (0x3333333333333333ull & nValue);
    nValue = ((0xf0f0f0f0f0f0f0f0ull & nValue)>>4) + (0x0f0f0f0f0f0f0f0full & nValue);
    nValue = ((0xff00ff00ff00ff00ull & nValue)>>8) + (0x00ff00ff00ff00ffull & nValue);
    nValue = ((0xffff0000ffff0000ull & nValue)>>16) + (0x0000ffff0000ffffull & nValue);
    nValue = ((0xffffffff00000000ull & nValue)>>32) + (0x00000000ffffffffull & nValue);
	return nValue;
}
inline int jud(double a, double b){
	if(abs1(a - b) < eps) return 0;
	if(a < b) return -1;
	return 1;
}
long long pow(long long n, long long m, long long mod = 0){
	long long ans = 1;
	long long k = n;
	while(m){
		if(m & 1) {
			ans *= k;
			if(mod) ans %= mod;
		}
		k *= k;
		if(mod) k %= mod;
		m >>= 1;
	}
	return ans;
}

const int maxn = 321000;
int n;
ll orig[maxn];
ll dp[maxn];
bool f[maxn];
int sor[maxn];

int main(){
//	freopen("input.txt","r", stdin);
	scanf("%d", &n);
	ll maxnum = 0;
	for(int i = 0; i < n; i++) {
		scanf("%I64d", orig + i);
		maxnum = max1(orig[i], maxnum);
	}
	ll biao = 0;
	for(ll j = 1ll; j <= maxnum; j <<= 1){
		int stat1 = 0;
		for(int i = 0; i < n; i++) if(orig[i] & j) stat1++;
		if(stat1 != 0 && stat1 % 2 == 0) biao |= j;
	}
	int ans[100];
	memset(ans, -1, sizeof(ans));
	ll j = 1;
	while(j <= maxnum) j <<= 1;
	j >>= 1;
	bool yes[100];
	memset(yes, 0, sizeof(yes));
	int lsor = 0;
	for(int i = 62; i >= 0; i--) if(biao & (1ll << i)) sor[lsor++] = i;
	for(int i = 62; i >= 0; i--) {
		if((1ll << i) > maxnum) continue;
		if((biao & (1ll << i)) == 0) sor[lsor++] = i;
	}
	for(int i = 0; i < lsor; i++){
		ll jj = 0, j = 1ll << sor[i];
		for(; jj < n; jj++){
			if(f[jj]) continue;
			if((orig[jj] & j) != 0) break;
		}
		if(jj == n) continue;
		f[jj] = 1;  dp[jj] |= 1ll << sor[i];
		for(int k = 0; k < n; k++) if((orig[k] & j) && k != jj) dp[k] ^= dp[jj], orig[k] ^= orig[jj];
		if(biao & j) yes[sor[i]] = 1;
		ans[sor[i]] = jj;
	}
	ll last = 0;
	for(int i = 0; i < lsor; i++) if(ans[i] != -1 && yes[i]) last ^= (dp[ans[i]]);
	memset(f, 0, sizeof(f));
	for(int i = 0; i < lsor; i++) if(last & (1ll << i)) f[ans[i]] = 1;
	for(int i = 0; i < n; i++) printf("%d ", f[i] ? 1 : 2);
	printf("\n");

	return 0;
}



