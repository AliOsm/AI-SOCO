#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>

using namespace std;

struct Elem
{
	int prevNum;
	int value;
	int nextNum;
	
	bool isReserve;	//��ʾ��ǰ���Ƿ��Ե�ǰ��ǰ���ϵ����ת 
};

Elem elems[200010];
int n;


void add(int a, int b)
{
	//����Ҫȷ��a��b��Ӧ������������� 
	if (elems[a].nextNum == -1 && elems[b].prevNum == -1)
	{
		//��ͬ����ģ���ȽϺø㣬�����ǻ���Ҫ������������� 
		//a�����b
		elems[a].nextNum = b;
		elems[b].prevNum = a;
	}
	else if (elems[a].prevNum == -1 && elems[b].nextNum == -1)
	{
		//b�����a 
		elems[a].prevNum = b;
		elems[b].nextNum = a;
	}
	else if (elems[a].prevNum == -1 && elems[b].prevNum == -1)
	{
		//ͬһ��������ô����ζ����һ��������Ҫ��ת��
		//������Ϊ�Ǻ���һ������Ҫ��ת 
		elems[a].prevNum = b;
		elems[b].prevNum = a;
		elems[b].isReserve = true;	//���ᷢ��������ת������� 
	}
	else if (elems[a].nextNum == -1 && elems[b].nextNum == -1)
	{
		elems[a].nextNum = b;
		elems[b].nextNum = a;
		elems[b].isReserve = true;	//���ᷢ��������ת�������
	}
}

int main()
{
	scanf("%d", &n);
	
	for (int i = 1 ; i <= n ; i++)
	{
		elems[i].value = i;
		elems[i].isReserve = false;
		elems[i].prevNum = -1;
		elems[i].nextNum = -1;
	}
	
	bool isFirst = true;
	int firstA, firstB;
	int a, b;
	for (int i = 1 ; i <= n ; i++)
	{
		scanf("%d%d", &a, &b);
		
		if (isFirst)
		{
			isFirst = false;
			firstA = a;
			firstB = b;
		}
		
//		if (i == 1)
//			add(i, a);
		add(a, b);
		
//		//������֤a<b
//		if (a > b)
//		{
//			int temp = a;
//			a = b;
//			b = temp;
//		}
		
	}
	
	int p = 1;
	printf("%d", p);
	
	int prevP = 1;
	if ((elems[p].nextNum == firstA) || (elems[p].nextNum == firstB))
	{
		p = elems[p].nextNum;
	}
	else
	{
		p = elems[p].prevNum;
	}
	

	int directFlag = 1;	//��ǰ����1��ʾû�еߵ���-1��ʾ���ߵ����� 
	for (int i = 2 ; i <= n ; i++)
	{
		printf(" %d", p);
		
		if ((prevP == -1) || (prevP == elems[p].prevNum))
		{
			prevP = p;
			p = elems[p].nextNum;			
		}
		else
		{
			prevP = p;
			p = elems[p].prevNum;			
		}
		
	}
	
	printf("\n");
	
	return 0;
}

//�����һ�������ӣ�
//ע�⣬��Ϊ��������������ֻ������������һ�����ᱻ�������棬������Է��� 
//���ü��ɼ�¼���������������������ܿ���ת�� 
