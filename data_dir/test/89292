#include <bits/stdc++.h>
using namespace std;
const int N=2e5+5;
#define F first
#define pb push_back
#define S second

int n,m,cnt;
bool vis[N];
vector<int>v[N];
inline void dfs(int node,int start,int par,bool is)
{   
    vis[node]=true;
    for (auto u:v[node])
    {
        if (is&&par!=u&&u==start) cnt++;
        if (vis[u]) continue;
        dfs(u,start,node,is);
    }
}
int main() {
    ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
    cin>>n>>m;
    while(m--)
    {
        int x,y;
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    for (int i=1;i<=n;++i)
    {
        if (vis[i]) continue;
        if (v[i].size()!=2) dfs(i,i,i,false);
    }
    for (int i=1;i<=n;++i)
    {
        if (vis[i]) continue;
        dfs(i,i,i,true);
    }
    cout<<cnt<<"\n";
    return 0;
}