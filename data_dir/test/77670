#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int N=22;
bool f[N][N];
int n,m,num[N][N];
ll a[N][N],ans,k;
unordered_map < ll , int > frec[N];
queue < pair < pair < int , int > , ll > > q;
main () {
 cin>>n>>m>>k;
 for (int i=1; i<=n; i++)
  for (int j=1; j<=m; j++)
   cin>>a[i][j];

 int x=n,y=1,tot=0;
 while (x>=1 && y<=m) {
  f[x][y]=1;
  num[x][y]=++tot;
	x--,y++;
 }
 
 queue < pair < pair < int , int > , ll > > q;
 q.push({{1,1},a[1][1]});
 
 while (!q.empty())  {
 	int x=q.front().first.first;
 	int y=q.front().first.second;
 	ll Cur_Xor=q.front().second;
 	q.pop();
 	
	if (!(1<=x && x<=n && 1<=y && y<=m)) 
	 	continue;
 	
 	if (f[x][y]) {
 	 frec[num[x][y]][Cur_Xor]++;	
 	 continue;
	}
	
 	q.push({{x+1,y},(Cur_Xor^a[x+1][y])});
	q.push({{x,y+1},(Cur_Xor^a[x][y+1])});	
 } 	
	
 q.push({{n,m},a[n][m]});
 
 while (!q.empty())  {
 	int x=q.front().first.first;
 	int y=q.front().first.second;
 	ll Cur_Xor=q.front().second;
 	q.pop();
 	
 	if (!(1<=x && x<=n && 1<=y && y<=m)) 
	 	continue;
 	
 	if (f[x][y]) {
 	 Cur_Xor^=a[x][y];
 	 ans+=frec[num[x][y]][(Cur_Xor^k)];
 	 continue;
	}
	
 	q.push({{x-1,y},(Cur_Xor^a[x-1][y])});
	q.push({{x,y-1},(Cur_Xor^a[x][y-1])});	
 } 	
 
 cout<<ans<<"\n";
}