/* ****GT_18**** */
//Motivational Source->FUHPD

#include<bits/stdc++.h>
#define	MIN(a,b,c)	min(min(a,b),c)
#define	MAX(a,b,c)	max(max(a,b),c)
#define ll          long long
#define itr         vector<ll int>::iterator
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n,m;
		cin>>n>>m;
		vector<pair<pii,ll> > a(m);
		rep(i,0,m)
		cin>>a[i].F.F>>a[i].F.S;
//		rep(i,0,m) cout<<a[i].F.F<<" "<<a[i].F.S<<endl;
		rep(i,0,m) a[i].S=i,a[i].F.S=-a[i].F.S;
		sort(all(a));
		ll st=2,end=3,mx=2;
		vector<pii> ans(m);
		rep(i,0,m)
		{
//		    cout<<a[i].S;
			if(a[i].F.S==-1)
			{
				ans[a[i].S]=mp(1,mx);
				mx++;
			}
			else
			{
				if(st==1)
				{
					end++;
					st=end-1;
				}
				if(end>=mx)
				{
					cout<<-1;
					return 0;
				}
				ans[a[i].S]=mp(st,end);
				st--;
			}
		}
		rep(i,0,m) cout<<ans[i].F<<" "<<ans[i].S<<endl;

	}
	return 0;
}
