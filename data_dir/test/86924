#pragma comment(linker, "/stack:64000000")
 
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cstring>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <sstream>
#include <cassert>
 
using namespace std;
 
#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define FOR(i, a, b) for (int (i) = (a); (i) < (b); (i)++)
#define sz(v) (int)(v).size()
#define all(v) (v).begin(), (v).end()
#define mp make_pair
#define pb push_back
 
typedef long long LL;
typedef pair <int, int> pi;
typedef vector <int> vi;
typedef vector <vi> vvi;

struct item {
	int w, h, n;

	item() {}
	item(int w, int h, int n): w(w), h(h), n(n) {}
	
	bool operator<(const item &it) {
		return w < it.w;
	}
};

item v[5555];
int dp[5555];
int pr[5555];

int main() {	
#ifndef ONLINE_JUDGE
	#define NAME "test"
	freopen(NAME".in", "r", stdin);
	freopen(NAME".out", "w", stdout);
#endif	
	int n, w, h;
	scanf("%d %d %d", &n, &w, &h);
	fill(dp, dp + n, 0);
	fill(pr, pr + n, -1);
	REP(i, n) {
		int a, b;
		scanf("%d %d", &a, &b);
		v[i] = item(a, b, i + 1);
	}
	sort(v, v + n);
	REP(i, n) {
		if (v[i].w > w && v[i].h > h) {
			dp[i] = 1;
			REP(j, i) {
				if (v[j].w < v[i].w && v[j].h < v[i].h && dp[j] + 1 > dp[i]) {					
					dp[i] = dp[j] + 1;
					pr[i] = j;
				}
			}
		} else {
			dp[i] = 0;
		}
	}
	int p = max_element(dp, dp + n) - dp;
	printf("%d\n", dp[p]);
	if (dp[p] == 0) return 0;
	vector <int> ans;
	while (p != -1) {
		ans.push_back(v[p].n);
		p = pr[p];
	}
	for (int i = sz(ans) - 1; i >= 0; i--) {
		printf("%d ", ans[i]);
	}
	return 0;
}