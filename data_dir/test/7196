
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 101;
const ll MOD = 1e9+7;
const double eps = 1e-9;

int n,m,k,f[N],z[N],mn[N],mx[N];
bool fav[N];
char s[11];

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif

	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);

	scanf("%d%d",&n,&k);
	for(int i=0,x; i<k; i++) {
		scanf("%d",&x);
		fav[x] = 1;
	}
	scanf("%d",&m);
	int l=-1,r=-1;
	for(int i=0,d,b; i<m; i++) {
		scanf("%s",s);
		scanf("%d",&d);
		int non = 0;
		for(int j=0; j<d; j++) {
			scanf("%d",&b);
			if(!b) z[i]++;
			else if(fav[b]) f[i]++;
			else non++;
		}
		mn[i] = f[i] + max(0,z[i]-(n-k-non));
		mx[i] = min(k, f[i]+z[i]);
		l = max(l,mn[i]);
		r = max(r,mx[i]);
	}
	for(int i=0; i<m; i++) {
		int x = -1;
		for(int j=0; j<m; j++)
			if(j!=i)
				x = max(x,mx[j]);
		if((mn[i]==mx[i] && mx[i]==r) || mn[i]>=x) puts("0");
		else if(mn[i]<l && mx[i]<l) puts("1");
		else puts("2");
	}
 	return 0;
} 