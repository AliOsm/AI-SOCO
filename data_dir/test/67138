// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define int long long
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define inf 1e15
#define N 100013
int n;
vector<pair<string, string>> s;
int a[N];
int dp[N][2];

int32_t main() {
    fast_io()
    
    cin >> n;
    for(int i = 1; i <= n; i++) {
        cin >> a[i];
    }
    s.pb(mp("sirjan13", "31najris"));
    for(int i = 1; i <= n; i++) {
        string x;
        cin >> x;
        string r = x;
        reverse(all(r));
        s.pb(mp(x, r));
    }
    for(int i = 0; i <= n + 1; i++) {
        for(int j = 0; j < 2; j++) {
            dp[i][j] = inf;
        }
    }
    dp[1][0] = 0;
    dp[1][1] = a[1];
    for(int i = 2; i <= n; i++) {
        string o = s[i].fi;
        string rev = s[i].se;
        string prevo = s[i - 1].fi;
        string prevrev = s[i - 1].se;
        if(prevo <= o) {
            dp[i][0] = min(dp[i][0], dp[i - 1][0]);
        }
        if(prevo <= rev) {
            dp[i][1] = min(dp[i][1], dp[i - 1][0] + a[i]);
        }
        if(prevrev <= o) {
            dp[i][0] = min(dp[i][0], dp[i - 1][1]);
        }
        if(prevrev <= rev) {
            dp[i][1] = min(dp[i][1], dp[i - 1][1] + a[i]);
        }
    }
    int res = min(dp[n][0], dp[n][1]); 
    if(res >= inf){
		cout << -1;
	}
    else {
        cout << res;
    }
	return 0;
}
