#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>

using namespace std;

vector<int> z_function (string s) {
	int n = (int) s.length();
	vector<int> z (n);
	for (int i=1, l=0, r=0; i<n; ++i) {
		if (i <= r)
			z[i] = min (r-i+1, z[i-l]);
		while (i+z[i] < n && s[z[i]] == s[i+z[i]])
			++z[i];
		if (i+z[i]-1 > r)
			l = i,  r = i+z[i]-1;
	}
	return z;
}

int kol[2];

int main()
{
    ios_base::sync_with_stdio(false);
    string s,t;
    cin >> s >> t;
    for (auto c:s)
    {
        ++kol[c-'0'];
    }
    auto z=z_function(t);
    int p=t.length();
    for (int i=0;i<t.length();i++)
    {
        if (z[i]+i==t.length())
        {
            p=i;
            break;
        }
    }

    int pos=0;
    while(kol[0]&&kol[1])
    {
        //cout << pos << ' ' << p << ' ' << kol[0] << ' ' << kol[1] << endl;
        int a=t[pos++]-'0';
        pos%=p;
        cout << a;
        --kol[a];
    }
    while(kol[0]--)cout << 0;
    while(kol[1]--)cout << 1;

    return 0;
}
