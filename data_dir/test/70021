//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <stdlib.h>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int, int> ii;

void fastIO() {std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);}

#define pb push_back
#define all(obj) obj.begin(), obj.end()
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)

#define fst first
#define snd second

template<typename T, typename U> inline void mnze(T &x, U y) {if(y < x) x = y;}
template<typename T, typename U> inline void mxze(T &x, U y) {if(x < y) x = y;}

void _scan( int &x ) { scanf("%d",&x); }
void _scan( long long &x ) { scanf("%lld",&x); }
void _scan( double &x ) { scanf("%lf",&x); }
void _scan( char &x ) { scanf(" %c",&x); }
void _scan( char *x ) { scanf("%s",x); }
void scan() {}
template<typename T, typename... U>
void scan( T& head, U&... tail ) { _scan(head); scan(tail...);}

const int MaxN = 3e5+5;

int n, m;

ll k, a[MaxN], aa[MaxN];
ll curp[11];
set<ll> prefs[11];

int main(){
	scan(n, m, k);
	for(int i = 0; i < (int)n; i++) scan(a[i]);
	for(int i = 1; i < (int)n; i++) aa[i] = aa[i-1] + a[i-1];
	ll ans = 0;
	for(int i = 0; i < (int)n; i++) {
		for(int j = 0; j < (int)m; j++) {
			ll x = aa[i] - k*curp[j];
			prefs[j].insert(x);
		}
		ll it = *(prefs[i%m].begin());
		ll nans = a[i]+aa[i] - k*curp[i%m] -it -k;
		mxze(ans, nans);
		curp[i%m]++;
	}
	printf("%lld\n", ans);
}
