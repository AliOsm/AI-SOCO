#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;

const int maxN = 2e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int k, n, inv[maxN], resp[maxN];

set<int> mys;
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	cin >> n >> k;

	for(int i = 0, inp; i < n; i++) {
		cin >> inp;
		inp--;
		inv[inp] = i;
		mys.insert(i);
	}

	int sd = 0;
	for(int i = n - 1; i >= 0; i--) {
		if(resp[inv[i]]) continue;
		for(int j = 1; j <= k; j++) {
			auto it = mys.find(inv[i]);
			if(it == mys.begin()) break;
			resp[*(--it)] = sd + 1;
			mys.erase(it);
		}
		for(int j = 1; j <= k; j++) {
			auto it = mys.find(inv[i]);
			if(++it == mys.end()) break;
			resp[*it] = sd + 1;
			mys.erase(it);
		}
		resp[inv[i]] = sd + 1;
		mys.erase(inv[i]);
		sd ^= 1;
	}
		
	for(int i = 0; i < n; i++) cout << resp[i]; cout << '\n';
}
