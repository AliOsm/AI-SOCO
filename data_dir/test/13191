#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef pair<ll,ll> pii;
typedef vector<pii> vpii;
#define pb push_back 
#define all(v) (v).begin(),(v).end()
#define rall(v) (v).rbegin(),(v).rend()
#define sz(v) ll(v.size())
const ll INF = 1e18;
const int MOD = 1e9+7;
const int N = 5e5+5;
void no(){
	puts("NO");
	exit(0);
}
int main(){
	ios_base::sync_with_stdio(false); cin.tie(0);
	cout << fixed << setprecision(12);
	int n,q; cin >> n >> q;
	vector<int> arr(n);
	map<int,vector<int> > pos_of;
	for(int i = 0; i < n; ++i){
		cin >> arr[i];
		pos_of[arr[i]].pb(i);
	}
	vector<int> x,l,r;
	for(auto cur : pos_of){
		if(cur.first != 0){
			x.pb(cur.first);
			l.pb(cur.second[0]);
			r.pb(cur.second.back());
		}
	}
	assert(is_sorted(all(x)));
	reverse(all(x));
	reverse(all(l));
	reverse(all(r));
	vector<int> ans(n,0);
	//--------------------------
	set<int> unused;
	for(int i = 0; i < n; ++i)
		unused.insert(i);
	for(int i = 0; i < x.size(); ++i){
		for(int cur : pos_of[x[i]]){
			if(unused.count(cur) == 0)
				no();
			ans[cur] = x[i];
			unused.erase(cur);
		}
		auto it = unused.lower_bound(l[i]);
		while(it != unused.end() && *it <= r[i]){
			ans[*it] = x[i];
			//cout << *it << '\n';
			unused.erase(it);
			it = unused.lower_bound(l[i]);
		}
	}
	//--------------------------
	bool has_q = 0;
	for(int i = 0; i < n; ++i)
		if(ans[i] == q)
			has_q = true;
	for(int i = 0; i < n; ++i)
		if(arr[i] == 0 && !has_q){
			has_q = true;
			ans[i] = q;
			break;
		}
	for(int i = 0; i < n; ++i){
		if(ans[i] == 0){
			ans[i] = 1;
		}
	}
	if(!has_q)
		no();
	cout << "YES" << endl;
	for(int i = 0; i < n; ++i)
		cout << ans[i] << " \n"[i==n-1];
}

