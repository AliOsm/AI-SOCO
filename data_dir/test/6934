#include <bits/stdc++.h>
using namespace std;

/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______
 * |\  \|\  \  |\  ___ \  |\  ___ \
 * \ \  \/  /|_\ \   __/| \ \   __/|
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */
const long long mod = 1000000007;

const int mxN = 55;

bool can[mxN][mxN];
bool vis[mxN][mxN];

long long A[mxN];

long long cur;
int K,N;
bool solve(int st,int sh) {
//	cout<<st<<' '<<sh<<endl;
	if(sh == K && st == N) return true;
	if(sh >= K || st >= N) return false; 
	if(vis[st][sh]) return can[st][sh];
	can[st][sh] = false;
	long long with = 0;
	for(int i = st;i < N && !can[st][sh];i++) {
		with += A[i];
		if((with&cur) == cur) can[st][sh] = solve(i+1,sh+1);
	}
	vis[st][sh] = true;
	return can[st][sh];
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	cin>>N>>K;
	for(int i = 0;i < N;i++) cin>>A[i];
	if(K == 1) {
		long long s = 0;
		for(int i = 0;i < N;i++) s += A[i];
		cout<<s<<'\n';
		return 0;
	}
	if (K == N) {
		long long s = A[0];
		for(int i = 1;i < N;i++) s &= A[i];
		cout<<s<<'\n';
		return 0;
	}
	long long res = 0;
	for(long long i = 60;i >= 0;i--) {
//		cout<<i<<endl;
		cur = res | (1ll<<i);
		memset(vis,0,sizeof vis);
		if(solve(0,0)) res = cur;
	}
	cout<<res<<'\n';
	return 0;
}
