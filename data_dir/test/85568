#include<bits/stdc++.h>
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    ll x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}

bool prim[5000002], pa[5000002];
void ciur()
{
    prim[1] = 0;
    for(int i = 2; i <= 5000000; i++)
        if(!prim[i])
            for(int j = i + i; j <= 5000000; j += i)
                prim[j] = 1;
}
int pal(int nr)
{
    int og = nr;
    int an = 0;
    while(og)
    {
        an = an * 10 + og%10;
        og /= 10;
    }
    return (nr == an);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int p, q;
    cin >> p >> q;
    int dc = __gcd(p, q);
    p /= dc;
    q /= dc;
    ciur();
    for(int i = 1; i <= 5000000; ++i)
        if(pal(i))
            pa[i] = 1;
    int ans = 1;
    int sum1 = 0;
    int sum2 = 1;
    for(int i = 2; i <= 5000000; ++i)
    {
        sum1 += (1 - prim[i]);
        sum2 += pa[i];
        ll p1 = 1LL * sum1 * q;
        ll p2 = 1LL * sum2 * p;
        if(p1 <= p2)
            ans = i;
    }
    cout << ans;
    return 0;
}
