
 #include<bits/stdc++.h>

using namespace std;

const int N = 2e6 + 8, MOD = 1e9 + 7;

const long long INF = 2e16;

#define ss second
#define ff first
#define int long long
#define double long double

using vi = vector <int>;
using vp = vector <pair <long long, long long>>;

mt19937 Flash_new_51(515151);

int prefnul[N], prefone[N];

bool sum (int l, int r) {
    int o, o1;
    if (l == 0) o = o1 = 0;
    else o = prefnul[l - 1], o1 = prefone[l - 1];
    return prefnul[r] - o < prefone[r] - o1;
}
bool sum1 (int l, int r) {
    int o, o1;
    if (l == 0) o = o1 = 0;
    else o = prefnul[l - 1], o1 = prefone[l - 1];
    return prefnul[r] - o <= prefone[r] - o1;
}


signed main() {
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    string s;
    cin >> s;
    string s1;
    for (int i = 0; i < s.size(); i++) {
        if (i != 0) prefnul[i] = prefnul[i - 1], prefone[i] = prefone[i - 1];

        if (s[i] == '0') {
            prefnul[i]++;
             s1+= '0';
             continue;
        }

        bool ok = true, ok1 = true;
        prefnul[i]++;
        for (int j = i + 1; j < s.size(); j++) {
            prefnul[j] = prefnul[j - 1], prefone[j] = prefone[j - 1];
            if (s[j] == '1') prefone[j]++;
            else prefnul[j]++;
        }
        for (int j = 0; j < s1.size(); j++) {
            if (sum(j, i)) {
                ok = false;
                break;
            }
        }
        for (int j = i + 1; j < s.size(); j++) {
            if (s[j] == '0') {
                if (!sum1(i + 1, j)) {
                    ok1 = false;
                    break;
                }
            }
        }
        if (ok && ok1) s1+= '0';
        else {
            s1+= '1', prefone[i]++, prefnul[i]--;
            for (int j = i + 1; j < s.size(); j++) {
                prefnul[j] = prefnul[j - 1], prefone[j] = prefone[j - 1];
                if (s[j] == '1') prefone[j]++;
                else prefnul[j]++;
            }
        }
    }
    cout << s1;
}
