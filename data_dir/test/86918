#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cmath>
#include <ctime>
#include <string>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define read freopen("C:\\Users\\USER\\Desktop\\in.txt", "r", stdin)
#define write freopen("C:\\Users\\USER\\Desktop\\out.txt", "a", stdout)
#define inf 1<<30
#define pii pair<int, int>
#define ff first
#define ss second
#define in(a) scanf("%I64d", &a)
#define ins(a) scanf("%s", a)
#define in2(a, b) scanf("%I64d%I64d", &a, &b)
#define in3(a, b, c) scanf("%I64d%I64d%I64d", &a, &b, &c)
#define pn printf("\n");
#define pcs(a) printf("Case %I64d: ", a)
#define pr(a) printf("%I64d\n", a)
#define pr(a) printf("%I64d\n", a)
#define prs(a) printf("%I64d ", a)
#define pr2(a, b) printf("%I64d %I64d\n", a, b)
#define pr3(a, b ,c) printf("%I64d %I64d %I64d\n", a, b, c)
#define vi vector<int>
#define msi map<string, int>
#define mii map<int, int>
#define si set<int>
#define cl clear()
#define sz size()
#define pb push_back
#define MAX(A,B) (((A)>(B))?(A):(B))
#define MIN(A,B) (((A)<(B))?(A):(B))
#define all(X) (X).begin(), (X).end ()
#define iter(it, X) for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
//LL dx[]={1,0,-1,0};LL dy[]={0,1,0,-1}; //4 Direction
//LL dx[]={1,1,0,-1,-1,-1,0,1};LL dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//LL dx[]={2,1,-1,-2,-2,-1,1,2};LL dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(LL n, LL pos) {return (bool) (n & (1<<pos));}
//LL on(LL n, LL pos) {return n | (1<<pos);}
//LL off(LL n, LL pos) {return n & ~(1<<pos);}
//bool operator < (const data &d) const{return cost<d.cost;}
typedef long long LL;
typedef struct data sd;
LL val[200100], A[200100], max_val[200100], pos[200100];
int main()
{
    //use %I64d
  //  read;
    LL n, i, j, k, sum=0;
    in2(n, k);

    for (i=0; i<n; i++) in(val[i]);
    for (i=0; i<k; i++) sum+=val[i];
    A[0]=sum;
    for (i=k, j=0; i<n; i++, j++)
    {
        sum+= (val[i]-val[j]);
        A[j+1]=sum;
    }
    for (j=j+1; j<n; j++) A[j]=0;
    LL maxx=0;
    for (i=n-1; i>=0; i--)
    {
        if (A[i]>=maxx)
        {
            maxx=A[i];
            j=i;
        }
        max_val[i]=maxx;
        pos[i]=j;
    }
maxx=0;
LL a, b;
for (i=n-k-1; i>=0; i--)
{
    if (A[i]+max_val[i+k]>=maxx)
    {
        maxx=A[i]+max_val[i+k];
        a=i;
        b=pos[i+k];
    }
}
pr2(a+1, b+1);
//file?
return 0;
}
