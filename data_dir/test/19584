#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("Ofast")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
#define int long long int
typedef complex<long double> cd;
const long double pi=acos(-1);
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;

#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define fi first
#define se second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
#define all(x) x.begin(),x.end()
#define pii pair<int,int>

inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p%m*p%m)%m;if(n%2) return (p%m*a%m)%m;else return p;}
const ll MOD =998244353;
const ll hell=1000000007;
const int INF = 1e8;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
const int N=300005;

void solve()
{
    int q;
   
    int pr[28];
    pr[0]=1;
    for(int i=1;i<28;i++)
        pr[i]=(1LL<<i);
    
    cin>>q;
    map<int,int> mp[28];int t,z,p,l;
    while(q--)
    {
        cin>>t;z=0;
        if(t==1)
        {
            cin>>p;z=0;
            for(int i=27;i>=0;i--)
            {
                if(pr[i]&p)
                {
                    z=z|pr[i];
                }
                mp[27-i][z]++;
            }
        }
        else if(t==2)
        {
            z=0;
            cin>>p;
            for(int i=27;i>=0;i--)
            {
                if(pr[i]&p)
                {
                    z=z|pr[i];
                }
                mp[27-i][z]--;
            }
        }
        else
        {
            cin>>p>>l;
            bool is1,is2; int ans=0;
            for(int i=27;i>=0;i--)
            {
                is1=(pr[i]&p);
                is2=(pr[i]&l);
                if(is1&&is2)
                {
                    ans=ans+mp[27-i][z|pr[i]];
                }
                else if(is1)
                {
                    z=z|pr[i];
                }
                else if(is2)
                {
                    ans=ans+mp[27-i][z];
                    z=z|pr[i];
                }
                
            }
            cout<<ans<<endl;
        }
    }
   // cout<<ans<<endl;
    
}
int32_t main()
{
    IOS;
    
    int t;
    t=1;
    //cin>>t;
    while(t--)
    {
        solve();
    }
    return 0;
}
