// Let Go Your Earthly Tether , Enter The Void , Empty And Become Wind

#include <bits/stdc++.h>
using namespace std ;

#define pb push_back
#define F first
#define S second
#define error(x) cerr << #x << " = " << x << endl

const int MAXN = 1000 * 1000 + 19 , inf = 2e9 + 19 ;

int a[MAXN] , n ;
long long seg[MAXN << 2] , lazy[MAXN << 2] ;

void upd(int b , int e , int l , int r , int v , int node) {
        if (b >= r || e <= l)
                return ;
        if (b >= l && e <= r) {
                lazy[node] += v ;
                return ;
        }
        int mid = (b + e) >> 1 ;
        upd(b , mid , l , r , v , node << 1) , upd(mid , e , l , r , v , node << 1 | 1) ;
        seg[node] = min(seg[node << 1] + lazy[node << 1] , seg[node << 1 | 1] + lazy[node << 1 | 1]) ;
}

long long get(int b , int e , int l , int r , int node) {
        if (b >= r || e <= l)
                return inf ;
        if (b >= l && e <= r) {
                return seg[node] + lazy[node] ;
        }
        int mid = (b + e) >> 1 ;
        return min(get(b , mid , l , r , node << 1) , get(mid , e , l , r , node << 1 | 1)) + lazy[node] ;
}

int main() {
        ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;
        cin >> n ;
        for (int i = 0 ; i < n ; i ++)
                cin >> a[i] , upd(0 , n , i , i + 1 , a[i] , 1) ;
        int Q ;
        cin >> Q ;
        string s ;
        getline(cin , s) ;
        while (Q --) {
                int l , r , v ;
                getline(cin , s) ;
                        stringstream ss ; ss << s ;
                if (ss >> l >> r >> v) {
                        r ++ ;
                        if (l < r)
                                upd(0 , n , l , r , v , 1) ;
                        else
                                upd(0 , n , 0 , r , v , 1) , upd(0 , n , l , n , v , 1) ;
                }
                else {
                        r ++ ;
                        if (l < r)
                                cout << get(0 , n , l , r , 1) << endl ;
                        else
                                cout << min(get(0 , n , 0 , r , 1) , get(0 , n , l , n , 1)) << endl ;
                }
        }
        return (0) ;
}
