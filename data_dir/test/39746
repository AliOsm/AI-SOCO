#include<bits/stdc++.h>
#include<string>
using namespace std;
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define ll long long
#define pb push_back
#define MOD 998244353
#define MODE 1000000006
#define INF 1000000100
const ll INFll=1ll*INF*INF;
//#define mp make_pair
const long double PI=3.141592653589793238462643383279502884197169399375105820974944;
#define rep(i,n) for (int i = 0; i < n; i++)
#define remax(a,b) a = max(a,b)
#define remin(a,b) a = min(a,b)
#define all(v) v.begin(),v.end()
#define f first
#define s second
#define mii map<int,int>
#define vi vector<int>
#define vl vector<ll>
#define vli vector<pair<ll,int>>
#define llll pair<ll,ll>
#define vll vector<llll >
#define vvl vector<vector<ll> >
#define ii pair<int,int>
#define ic pair<int,char>
#define vii vector< ii >
#define vvi vector< vector<int > >
#define vvii vector< vector<ii > >
#define vlli vector<pair<llll,int>>
#define itr :: iterator it
#define WL(t) while(t --)
#define gcd(a,b) __gcd((a),(b))
#define lcm(a,b) ((a)*(b))/gcd((a),(b))
#define print(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cout << *it << ' '; cout << endl;
#define printii(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cout << it->first<<' '<<it->second << endl; cout << endl;
#define debug(x) cout << x << endl;
#define debug2(x,y) cout << x << " " << y << endl;
#define debug3(x,y,z) cout << x << " " << y << " " << z << endl;
#define LC(i) 2*(i)+1
#define RC(i) 2*(i)+2
#define MID(i,j) ((i)+(j))/2
#define disparr(arr,n) for(int i=0;i<(n);i++)   cout<<arr[i]<<' ';  cout<<endl;
#define vd vector<double>
#define ld long double
#define forn(i,n)  for(int (i)=0;(i)<(n);(i)++)
#define repe(i,n)   for(int (i)=1;(i)<=(n);(i)++)
#define iii pair<int,ii>
int n,m,k;
priority_queue<ii> todo;
vii lights;
map<ii,int> label;
int dx[4]={1,-1,0,0};
int dy[4]={0,0,1,-1};
vi r[10001],c[10001];
vi dr(10001,0),dc(10001,0);
vi dist(10005,MOD);
void fillrow(int x,int val)
{
    if(x<=n&&x>=1&&dr[x]==0)
    {
        dr[x]=1;
        for(int y:r[x])
        {
            dist[label[{x,y}]]=min(dist[label[{x,y}]],val);
            todo.push({-val,label[{x,y}]});
        }
    }
}
void fillcol(int y,int val)
{
    if(y<=m&&y>=1&&dc[y]==0)
    {
        dc[y]=1;
        for(int x:c[y])
        {
            dist[label[{x,y}]]=min(dist[label[{x,y}]],val);
            todo.push({-val,label[{x,y}]});
        }
    }
}
void adj(int x,int y,int val)
{
    if(label.find({x,y})!=label.end())
    {
        if(dist[label[{x,y}]]>val)
        {
            dist[label[{x,y}]]=val;
            todo.push({-val,label[{x,y}]});
        }
    }
}
void disp()
{
    for(int i=0;i<k;i++)
        cout<<dist[i]<<' ';
    cout<<endl;
}
int main()
{
    cin>>n>>m>>k;
    for(int i=0;i<k;i++)
    {
        int x,y;
        cin>>x>>y;
        lights.pb({x,y});
        r[x].pb(y);
        c[y].pb(x);
        label[{x,y}]=i;
    }
    if(label.find({n,m})==label.end())
    {
        fillrow(n,1);
        fillrow(n-1,1);
        fillcol(m,1);
        fillcol(m-1,1);
    }
    else
    {
        todo.push({0,label[{n,m}]});
    }
    //disp();
    while(!todo.empty())
    {
        ii a=todo.top();
        todo.pop();
        a.f=-a.f;
        if(a.f>dist[a.s])
            continue;
        dist[a.s]=a.f;
        for(int i=0;i<4;i++)
            adj(lights[a.s].f+dx[i],lights[a.s].s+dy[i],a.f);
        for(int i=lights[a.s].f-2;i<=lights[a.s].f+2;i++)
            fillrow(i,a.f+1);
        for(int i=lights[a.s].s-2;i<=lights[a.s].s+2;i++)
            fillcol(i,a.f+1);
    }
    if(dist[0]==MOD)
        cout<<-1<<endl;
    else
        cout<<dist[0]<<endl;
}
