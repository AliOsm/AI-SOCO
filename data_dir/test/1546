/* 464A */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1005;
char s[maxn], ts[maxn];
bool visit[26];
int nxt[3] = {
	2,0,1
};
int t[3] = {
	1,2,0
};

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n, p;
	
	scanf("%d %d", &n, &p);
	scanf("%s", s);
	
	int len = strlen(s);
	char mc = 'a' + p - 1;
	
	if (len == 1) {
		if (++s[0] > mc)
			puts("NO");
		else
			puts(s);
	} else if (len == 2) {
		if (++s[1] == s[0])
			++s[1];
		if (s[1] < mc) {
			puts(s);
		} else {
			if (++s[0] > mc) {
				puts("NO");
			} else{
				s[1] = 'a';
				puts(s);
			}
		}
	} else if (p == 2) {
		if (s[0] == 'a') {
			puts("NO");
		} else {
			printf("%sb\n", s+1);
		}
	} else {
		int i, j, k;
		bool flag = false;
		
		for (i=len-1; i>=0; --i) {
			for (k=s[i]+1; k<=mc; ++k) {
				if (i && s[i-1]==k)
					continue;
				if (i>1 && s[i-2]==k)
					continue;
				flag = true;
				goto _output;
			}
		}
		
		_output:
		if (flag) {
			s[i] = '\0';
			printf("%s", s);
			j = i;
			s[i++] = k;
			for (; i<len; ++i) {
				for (k='a'; k<=mc; ++k) {
					if (i && s[i-1]==k)
						continue;
					if (i>1 && s[i-2]==k)
						continue;
					break;
				}
				s[i] = k;
			}
			puts(s+j);
		} else {
			puts("NO");
		}
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}