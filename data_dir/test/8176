#include <bits/stdc++.h>
using namespace std;

#define int long long

const int N = 2e5 + 10;
int n, m, q, com, mark[N][2];
vector <int> adj[N][2];

void dfs(int v, int indx, int c) {
	mark[v][indx] = c;
	for (int u : adj[v][indx])
		if (mark[u][1 - indx] == -1)
			dfs(u, 1 - indx, c);
}

int32_t main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	
	cin >> n >> m >> q;
	for (int i = 0; i < q; i++) {
		int x, y;
		cin >> x >> y;
		x--; y--;
		adj[x][0].push_back(y);
		adj[y][1].push_back(x);
	}
	
	memset(mark, -1, sizeof mark);
	for (int i = 0; i < n; i++)
		if (mark[i][0] == -1)
			dfs(i, 0, com++);
	for (int i = 0; i < m; i++)
		if (mark[i][1] == -1)
			dfs(i, 1, com++);
	cout << com - 1;
}
