//#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <vector>
#include <string.h>
#include <cmath>
#include <assert.h>
#include <iomanip>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define debug(...) fprintf(stderr,__VA_ARGS__)
#define debug(...)
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}

int f[N],B;
struct node{
    int x,y,id;
    bool operator <(const node&a)const{
        if(x/B!=a.x/B)return x/B<a.x/B;
        return y<a.y;
    }
}q[N];
int cnt[1<<20],cnt1[1<<20];
ll res[N];
int main(){
    //cout<<fixed<<setprecision(5);
    int T,i,j,k,ca=0,n,m;
    int K;
    scanf("%d%d%d",&n,&m,&K);
    for(i=1;i<=n;i++)scanf("%d",&k),f[i]=f[i-1]^k;
    for(i=0;i<m;i++){
        scanf("%d%d",&q[i].x,&q[i].y),q[i].y++;
        q[i].id=i;
    }    
    B=sqrt(n+0.);
    sort(q,q+m);
    int l=1,r=2,x;ll ans=0;
    cnt1[0]++;cnt[f[1]]++;
    if(K==f[1])ans=1;
    for(i=0;i<m;i++){
        while(l<q[i].x){
            x=f[l-1]^K;
            ans-=cnt[x];
            cnt1[f[l-1]]--,cnt[f[l]]--;
            l++;
        }
        while(l>q[i].x){
            l--;
            cnt[f[l]]++;cnt1[f[l-1]]++;
            x=f[l-1]^K;
            ans+=cnt[x];
        }
        while(r>q[i].y){
            r--;
            x=f[r]^K;
            ans-=cnt1[x];
            cnt1[f[r-1]]--,cnt[f[r]]--;
        }
        while(r<q[i].y){
            cnt1[f[r-1]]++,cnt[f[r]]++;
            x=f[r]^K;
            ans+=cnt1[x];
            r++;
        }
        res[q[i].id]=ans;
    }
    for(i=0;i<m;i++)printf("%I64d\n",res[i]);
    return 0;
}