#include <iostream>
#include <cstring>

#include <string>
#include <queue>

using namespace std;

int N, K;
string W[2];

typedef pair<int,int> II;

int D[2][100004];

int bfs() {
   memset(D, -1, sizeof(D));
   D[0][0] = 0;
   queue<II> q;
   q.push(II(0, 0));
   while (!q.empty()) {
      II cur = q.front();
      q.pop();
      int t = D[cur.first][cur.second];
      if (cur.second + K >= N || cur.second+1 >= N)
         return t+1;
      // go up
      II nxt1(cur.first, cur.second+1);
      if (W[nxt1.first][nxt1.second] == '-' && D[nxt1.first][nxt1.second] < 0) {
         q.push(nxt1);
         D[nxt1.first][nxt1.second] = t + 1;
      }
      
      // go down
      II nxt2(cur.first, cur.second-1);
      if (nxt2.second > t && W[nxt2.first][nxt2.second] == '-' && D[nxt2.first][nxt2.second] < 0) {
         q.push(nxt2);
         D[nxt2.first][nxt2.second] = t + 1;
      }
      
      // jump
      II nxt3(cur.first ^ 1, cur.second + K);
      if (W[nxt3.first][nxt3.second] == '-' && D[nxt3.first][nxt3.second] < 0) {
         q.push(nxt3);
         D[nxt3.first][nxt3.second] = t + 1;
      }
   }
   return -1;
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 

   cin >> N >> K;
   cin >> W[0];
   cin >> W[1];

   int res = bfs();
   cout << (res < 0 ? "NO" : "YES") << endl;

   return 0;
}
