#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
#define N 5000005
const int MOD = 1e9 + 7;

int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};

//ll GCD(ll num,ll ones) { return !ones ? num : GCD(ones,num%ones); }
//ll lcm(ll a, ll b) { return (a / GCD(a, b)) * b; }
//double Len(int x,int y,int X,int Y) { return sqrt((X-x)*(X-x)+(Y-y)*(Y-y)); }
/*int fastpower(int a,int x)
{
    if(x == 1) return a;
    if (x==0) return 1;
    int p = fastpower(a,x/2);
    if(x%2) return ((p%m)*(p%m)*(a%m))%m;
s}*/
//----------------------- ------------------------
int dp[55][2],n,a[55];
int solve(int idx,int turn)
{
    if(idx == n) return 0;
    if(dp[idx][turn]!=-1) return dp[idx][turn];
    if(turn) return dp[idx][turn] = max(solve(idx+1,1-turn)+a[idx],solve(idx+1,turn));
    else return dp[idx][turn] = min(solve(idx+1,1-turn),solve(idx+1,turn)+a[idx]);
}
int main()
{
#ifndef ONLINE_JUDGE
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    sc(n); int mx = 0;
    for(int i=0;i<n;++i) sc(a[i]),mx+=a[i];
    mem(dp,-1);
    int bob = solve(0,1);
    printf("%d %d",mx-bob,bob);
    return 0;
}