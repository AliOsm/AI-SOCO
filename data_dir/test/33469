#include <bits/stdc++.h>

using namespace std;

//#define int int

int mod=1e9+7,m,d;

vector < int > vv;

int dp[2005][2005][2][2][2];

void Split(char s[], int len)
{
    vv.clear();

    for(int i=0; i<len; i++)
    {
        vv.push_back(s[i]-'0');

    }
}

bool is_magic(char s[], int len)
{
    int sum=0;

    for(int i=0; i<len; i++)
    {
        if(i%2==0 && (s[i]-'0')==d)
        {
            return false;
        }

        if(i%2 && (s[i]-'0')!=d)
        {
            return false;
        }

        sum=(sum*10+s[i]-'0')%m;
    }

    return (sum%m==0);
}

int func(int pos, int isStart, int isSmaint, int rem, int turn)
{
    if(pos==vv.size())
    {
        return (rem==0);
    }

    if(dp[pos][rem][isStart][isSmaint][turn]!=-1)
    {
        return dp[pos][rem][isStart][isSmaint][turn];
    }

    int ret=0;

    int lim=isSmaint ? 9 : vv[pos];

    if(isStart)
    {
        for(int i=1; i<=lim; i++)
        {
            if((pos+turn)%2==0 && i==d)
            {
                continue;
            }

            if((pos+turn)%2 && i!=d)
            {
                continue;
            }

            ret+=func(pos+1,0,isSmaint | i<vv[pos], (rem*10+i)%m, turn);

            if(ret>mod) ret=ret-mod;

        }

        ret+=func(pos+1,1,1,0,1-turn);

        if(ret>mod) ret=ret-mod;
    }

    else
    {
        for(int i=0; i<=lim; i++)
        {
            if((pos+turn)%2==0 && i==d)
            {
                continue;
            }

            if((pos+turn)%2 && i!=d)
            {
                continue;
            }

            ret+=func(pos+1,0,isSmaint | i<vv[pos], (rem*10+i)%m, turn);

            if(ret>mod) ret=ret-mod;

        }

    }

    return dp[pos][rem][isStart][isSmaint][turn]=ret;
}

int main()
{
    int i,j,len;

    scanf("%d %d",&m,&d);

    char a[2005],b[2005];

    scanf("%s %s",a,b);

    int len1=strlen(a);

    int len2=strlen(b);

    Split(b,len2);

    memset(dp, -1, sizeof dp);

    int ans1=func(0,1,0,0,0);

    Split(a,len1);

    memset(dp, -1, sizeof dp);

    int ans2=func(0,1,0,0,0);

    int ans=((ans1%mod)-(ans2%mod))%mod;

    if(ans<0) ans+=mod;

    bool p=is_magic(a,len1);

    if(p) ans=((ans%mod)+(1%mod))%mod;

    cout<<ans<<endl;

   // cout<<"ook: "<<ans1<<' '<<ans2<<endl;

    return 0;





}
