#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define N 100005
vector<plld> adj[N];
vector<pair<plld,lld>> edges;
map<plld,lld> contri;
lld sz[N],ans,n;
void dfs(lld curr=1,lld par=-1) {
	sz[curr]=1;
	for(auto i:adj[curr]) if(i.f!=par) dfs(i.f,curr),sz[curr]+=sz[i.f];
}
void pre(lld curr=1,lld par=-1) {
	for(auto i:adj[curr]) if(i.f!=par) {
		lld tmp=(sz[i.f] * (n-sz[i.f]));
		contri[{curr,i.f}]=contri[{i.f,curr}]=tmp;
		ans+=(i.s*tmp);
		pre(i.f,curr);
	}
}
int main()
{
	lld q,t,u,v,l,r,w;
	cin>>n;
	rep(i,0,n-1) {
		cin>>u>>v>>l;
		adj[u].pb({v,l}),adj[v].pb({u,l});
		edges.pb(mp(mp(u,v),l));
	}
	dfs(),pre();
	cin>>q;
	while(q--) {
		cin>>r>>w;
		u=edges[r-1].f.f,v=edges[r-1].f.s;
		ans-=(contri[{u,v}]*(edges[r-1].s - w));
		edges[r-1].s=w;
		cout<<fixed<<setprecision(7)<<((ldb)ans * 6/(n*(n-1)))<<endl; 
	}
	return 0;
}

