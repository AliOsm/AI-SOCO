#include <bits/stdc++.h>
using namespace std;

const int maxn = 2e5+1;
int n, k;
int p[maxn];
stack<int> stk;

void end()
{
  puts("-1");
  exit(0);
}
inline void solve()
{
  int ptr = 1;
  int pos = 1;
  while (pos <= k)
    {
      while (!stk.empty() && stk.top() == ptr)
	{
	  stk.pop();
	  ++ptr;
	}
      if (!stk.empty() && stk.top() < p[pos])
	end();
      stk.push(p[pos]);
      ++pos;
    }
  while (!stk.empty())
    {
      int cur = stk.top();
      stk.pop();
      if (cur > ptr)
	{
	  for (int i = cur-1; i >= ptr; --i)
	    p[pos++] = i;
	  ptr = cur;
	}
      else
	assert(cur == ptr);
      int nxt = cur;
      while (!stk.empty() && stk.top() == nxt+1)
	{
	  stk.pop();
	  ++nxt;
	}
      ptr = nxt+1;
    }

  int tmp = n;
  while (pos <= n)
    p[pos++] = tmp--;
  for (int i = 1; i <= n; ++i)
    {
      if (i != 1)
	printf(" ");
      printf("%d", p[i]);
    }
  puts("");
}
int main()
{
  scanf("%d %d", &n, &k);
  for (int i = 1; i <= k; ++i)
    scanf("%d", p+i);
  solve();
}
