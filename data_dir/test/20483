#include <bits/stdc++.h>

#define llong long long

using namespace std;

typedef vector<int> big;

const int MAXN = (int) 1e6 + 3;
const int INF = (int) 1e9 + 7;

int n;
int pr[MAXN];

int ans;
bool used[MAXN];

vector<int> g[MAXN];
vector<int> roots;

void dfs(int v, int lvl = 1) {
  used[v] = true;
  ans = max(ans, lvl);
  for (auto to : g[v]) {
    if (!used[to])
      dfs(to, lvl + 1);
  }
}

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif
  
  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%d", &pr[i]);
    if (pr[i] == -1)
      roots.push_back(i);
    else
      g[pr[i]].push_back(i);
  }
  for (auto v : roots)
    dfs(v);

  printf("%d", ans);
  return 0;
}