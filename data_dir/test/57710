#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define ll long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
int p[3000000];
const int N = 300000;
int b[N];
pair < pair < int, int >, int > a[N];
vector < int > v1, v2;
map < int, int > t1, t2;
int l1, l2, c[N], e[N];
vector < int > f[N], d[N];
int sum (int x, int r)
{
	int result = 0;
	for (; r >= 0; r = (r & (r+1)) - 1)
		result += f[x][r];
	return result;
}

void inc (int x, int i, int delta)
{
	for (; i < f[x].size(); i = (i | (i+1)))
		f[x][i] += delta;
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++){
        cin >> a[i].S >> a[i].F.F >> a[i].F.S;
        v1.pb(a[i].F.F);
        v2.pb(a[i].F.S);
    }
    sort(v1.begin(), v1.end());
    sort(v2.begin(), v2.end());
    for (auto i: v1){
        t1[i] = ++l1;
    }
    for (auto i: v2){
        t2[i] = ++l2;
    }
    for (int i = 1; i <= n; i++){
        a[i].F.F = t1[a[i].F.F];
        a[i].F.S = t2[a[i].F.S];
        b[a[i].F.S]++;
        d[a[i].F.S].pb(a[i].F.F);
    }
    for (int i = 1; i <= n; i++){
        sort(d[i].begin(), d[i].end());
        for(int j = 0; j < d[i].size(); j++){
            e[d[i][j]] = j;
        }
    }
    for (int i = 1; i <= n; i++){
        for (int j = 0; j < b[i] + b[i]; j++)
            f[i].pb(0);
    }
    for (int i = 1; i <= n; i++){
        if (a[i].S == 1){
            inc(a[i].F.S, e[a[i].F.F], 1);
        } else
        if (a[i].S == 2){
            inc(a[i].F.S, e[a[i].F.F], -1);
        } else
        cout << sum(a[i].F.S, e[a[i].F.F]) << endl;
    }
}
