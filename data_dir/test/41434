//ITNOG
#include<bits/stdc++.h>

using namespace std;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)

const int maxN = 1000 + 5;
const int mod = 1000*1000*1000 + 7;

vector<int> a[maxN];
int mark[maxN], col[maxN];
int cnt, con[maxN];
void dfs(int v, int c = 0)
{
    mark[v] = 1; col[v] = c; con[v] = cnt;
//    cout << v << ' ' << c << endl;
    for(auto u : a[v]) 
	  if(!mark[u])
		dfs(u, c ^ 1);
	  else if(col[u] == c) { cout << "-1" << endl; exit(0); }
}

int q[maxN];
int ans[maxN];
main()
{
    ios::sync_with_stdio(0); cin.tie();
    int n,m; cin >> n >> m;
    rep(i,0,m)
    {
	  int v,u; cin >> v >> u; v --; u --;
	  a[v].push_back(u);
	  a[u].push_back(v);
    }    
    rep(i,0,n) if(!mark[i]) dfs(i), cnt ++;
    
    rep(i,0,n)
    {
	  memset(mark,0,sizeof mark);
	  int st = 0, en = 0; q[en ++] = i; mark[i] = 1;
	  while(st < en)
	  {
		int v = q[st++];
		for(auto u : a[v])
		    if(!mark[u])
		    {
			  mark[u] = mark[v] + 1;
			  q[en++] = u;
		    }
	  }
	  ans[con[i]] = max(ans[con[i]], *max_element(mark,mark+n));
    }
    int sum=0;
    rep(i,0,cnt)sum+=ans[i]-1;
    cout << sum << endl;

    return 0;
}
