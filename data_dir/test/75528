#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const int M=2002;
int req[M][10];
int dp[M][M],val[M][M];
int pr[M][M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	int n,k;
	cin>>n>>k;
	memset(req,-1,sizeof(req));
	memset(dp,-1,sizeof(dp));
	for(int i=1;i<=n;i++)
	{
		string s;
		cin>>s;
		vector<int> ct;
		ct.pb(-1);
		for(int i=0;i<sz(s);i++)
			ct.pb((int)(s[i]-'0'));
		// 0
		if(ct[4]==0)
		{
			req[i][0] = 6-ct[1]-ct[2]-ct[3]-ct[5]-ct[6]-ct[7];
		}
		//1
		if(ct[1]+ct[2]+ct[4]+ct[5]+ct[7]==0)
		{
			req[i][1] = 2 - ct[3]-ct[6];
		}
		//2
		if(ct[2]+ct[6]==0)
		{
			req[i][2] = 5-ct[1]-ct[3]-ct[4]-ct[5]-ct[7];
		}
		//3
		if(ct[2]+ct[5]==0)
		{
			req[i][3] = 5-ct[1]-ct[3]-ct[4]-ct[6]-ct[7];
		}
		//4
		if(ct[1]+ct[5]+ct[7]==0)
		{
			req[i][4] = 4-ct[2]-ct[3]-ct[4]-ct[6];
		}
		//5
		if(ct[3]+ct[5]==0)
		{
			req[i][5] = 5-ct[1]-ct[2]-ct[4]-ct[6]-ct[7];
		}
		//6
		if(ct[3]==0)
		{
			req[i][6] = 6-ct[1]-ct[2]-ct[4]-ct[5]-ct[6]-ct[7];
		}
		//7
		if(ct[2]+ct[4]+ct[5]+ct[7]==0)
		{
			req[i][7] = 3-ct[1]-ct[3]-ct[6];
		}
		//8
		req[i][8] = 7-ct[1]-ct[2]-ct[3]-ct[4]-ct[5]-ct[6]-ct[7];
		//9
		if(ct[5]==0)
		{
			req[i][9] = 6 - ct[1]-ct[2]-ct[3]-ct[4]-ct[6]-ct[7];
		}
	}
	dp[n+1][0] = 1;
	for(int i=n;i>=1;i--)
	{
		for(int j=0;j<=k;j++)
		{
			for(int p=0;p<10;p++)
			{
				if(req[i][p]==-1 || req[i][p]>j)
					continue;
				if(dp[i+1][j-req[i][p]]!=-1)
				{
					dp[i][j] = 1;
					val[i][j] = p;
					pr[i][j] = j-req[i][p];
				}
			}
		}
	}
	if(dp[1][k]==-1)
	{
		cout<<"-1\n";
		return 0;
	}
	for(int i=1;i<=n;i++)
	{
		cout<<val[i][k];
		k = pr[i][k];
	}
	cout<<"\n";
	return 0;
}