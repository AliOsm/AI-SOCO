///In the name of GOD
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll MXN = 2e5 + 10;
ll n, x, sum, p, cnt[3];
string s, t;
bool f = 1;
string Make(string s, ll r, ll xp){
    t = "";
    t += s[0], x = xp;
    for(int i = 1; i < n; i ++){
        if((s[i] - '0') % 3 == r && x){
            x --;
            continue;
        }
        t += s[i];
    }
    return t;
}
string Solve(string s){
    sum = s[0] - '0', n = s.size(), cnt[0] = cnt[1] = cnt[2] = 0;
    for(int i = 1; i < n; i ++) sum += (s[i] - '0'), cnt[(s[i] - '0') % 3] ++;
    if(sum % 3 == 0) return s;
    if(cnt[sum % 3]) return Make(s, sum % 3, 1);
    if(n >= 2 && s[1] != '0' && (s[0] - '0') % 3 == sum % 3) return s.substr(1, n - 1);
    if(cnt[1] >= 2) return Make(s, 1, 2);
    if(cnt[2] >= 2) return Make(s, 2, 2);
    sum -= (s[0] - '0');
    t = "", p = 1;
    while(p < n && s[p] == '0') p ++;
    for(int i = p; i < n; i ++) t += s[i];
    if(sum % 3 == 0 && t.empty()) t += '0';
    return Solve(t);
}
int main(){
    ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
    cin >> s; n = s.size(), sum = s[0] - '0' + s[n - 1] - '0';
    for(int i = 1; i < n - 1; i ++){
        if(s[i] != 0) f = 0;
        sum += s[i] - '0';
    }
    if(sum % 3 == 0) return cout << s, 0;
    if(s[0] % 3 != s[n - 1] % 3) f = 0;
    if(f) return cout << -1, 0;
    cout << Solve(s);
    return 0;
}
/*!
    You are under no obligation to be the same person you were a minute ago,
    You have the right to grow !
*/
//! N.N