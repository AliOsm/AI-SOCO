#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll mod = 1000000007LL;
vector<ll> start;

void pre() {
    ll odd = 1LL, even = 2LL;
    for(int i = 1; i < 64; i++) {
        if(i & 1) {
            start.push_back(odd);
            odd += (1LL << i);
        }
        else {
            start.push_back(even);
            even += (1LL << i);
        }
    }
}

ll solve(ll n) {
    ll cover = 0LL, sum = 0LL;
    for(int i = 0; i < start.size(); i++) {
        ll t = (1LL << i);
        cover += t;
        //cout << "cover " << cover << endl;
        if(cover >= n) {
            ll start_pos = cover - t + 1;
            ll psize = n - start_pos + 1;

            //cout << "sum " << sum % mod << endl;
            //cout << "cur " << ( (psize % mod) * ((start[i] + psize - 1) % mod) ) % mod << endl;
            return ( (sum % mod) + ( (psize % mod) * ((start[i] + psize - 1) % mod) ) % mod ) % mod;
            break;
        }
        sum += ( (t % mod) * ((start[i] + t - 1) % mod) ) % mod;
    }
}

int main() {
    ll l, r;
    cin >> l >> r;
    pre();
    cout << (solve(r) - solve(l - 1) + mod) % mod << endl;
}

/**
1 2 4 3 5 7 9 6 8 10 12 14 16 18 20
* *           *
*/
