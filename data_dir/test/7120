#define _USE_MATH_DEFINES
#include <cassert>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <algorithm>
#include <complex>
#include <cmath>
#include <numeric>
#include <bitset>
#include <functional>
#include <random>
#include <ctime>

using namespace std;

#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cerr << name << ": " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');
  cerr.write(names, comma - names) << ": " << arg1 << " |";
  __f(comma + 1, args...);
}

typedef long long int64;
typedef pair<int, int> ii;
const int INF = 1 << 29;
const int MOD = 1e9 + 7;

char s[200];
bool check(const string& s) {
  int n = s.size();
  for (int i = 1; i < n; ++i) {
    if (abs(s[i - 1] - s[i]) == 1) return false;
  }
  return true;
}

int main() {
  int cas;
  scanf("%d", &cas);
  while (cas--) {
    scanf("%s", s);
    vector<int> cnt(26);
    for (int i = 0; s[i]; ++i) {
      cnt[s[i] - 'a']++;
    }
    string s = "";
    for (int i = 0; i < 26; i += 2) {
      int len = cnt[i];
      while (len--) s += (char)('a' + i);
    }
    for (int i = 1; i < 26; i += 2) {
      int len = cnt[i];
      while (len--) s += (char)('a' + i);
    }
    if (check(s)) {
      puts(s.c_str());
      continue;
    }
    s = "";
    for (int i = 1; i < 26; i += 2) {
      int len = cnt[i];
      while (len--) s += (char)('a' + i);
    }
    for (int i = 0; i < 26; i += 2) {
      int len = cnt[i];
      while (len--) s += (char)('a' + i);
    }
    if (check(s)) {
      puts(s.c_str());
    } else {
      puts("No answer");
    }
  }
  return 0;
}
