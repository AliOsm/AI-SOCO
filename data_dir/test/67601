#include <bits/stdc++.h>
using namespace std;

const int MAX = 3e5 + 5;
set <pair <int, int> > s;
int n, d[MAX], pt[MAX];
vector <int> g[MAX];

void dfs(int u, int p = -1) {
	for(int v : g[u]) {
		if(v == p)
			continue;

		d[v] = d[u] + 1;
		pt[v] = u;

		dfs(v, u);
	}
}

int main() {
	scanf("%d", &n);

	for(int i = 1; i < n; i++) {
		int a, b; scanf("%d%d", &a, &b);
		g[a].push_back(b);
		g[b].push_back(a);
	}

	dfs(1);

	for(int i = 1; i <= n; i++)
		s.insert({d[i], i});

	int ans = 0;

	while(!s.empty() && (--s.end()) -> first > 2) {
		auto x = *(--s.end());

		int u = pt[x.second];

		// printf("u = %d\n", u);

		for(int v : g[u]) {
			if(pt[v] == u) {
				// printf("quitando v = %d\n", v);

				if(s.find({d[v], v}) != s.end())
					s.erase(s.find({d[v], v}));
			}
		}

		// printf("quitando u = %d\n", u);

		if(s.find({d[u], u}) != s.end())
			s.erase(s.find({d[u], u}));

		u = pt[u];

		if(u > 0) {
			if(s.find({d[u], u}) != s.end())
				s.erase(s.find({d[u], u}));
		}

		ans++;

		// printf("add edge between %d %d\n", 1, u);
	}

	printf("%d\n", ans);
	return 0;
}