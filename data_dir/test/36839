/*
 Anton Gulikov
*/
#pragma comment(linker,"/STACK:300000000")
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <string>
#include <stdlib.h>

#define gcd(a,b) __gcd((a),(b))
#define sqr(a) ((a)*(a))
#define odd(a) ((a)&1)
#define foru(i,n) for (int i=0;i<(n);i++)
#define ford(i,n) for (int i=(n)-1;i>=0;i--)
#define forab(i,l,r) for (int i=(l);i<=(r);i++)
#define forabd(i,r,l) for (int i=(r);i>=(l);i--)
#define fillchar(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define F first
#define S second
#define all(x) x.begin,x.end
#define pw2(x) (1ull<<(x))
#define mp make_pair

const long double eps=1e-20;
const long double pi=acos(-1.0);
const long long inf=1000*1000*1000*1000*1000*1000;
const long long base=1000*1000*1000+7;

using namespace std;

map <int,int> kol;
int n,k,l,r,all=0;
int a[111111];

int main(){
    scanf("%d%d",&n,&k);
    foru(i,n){
        scanf("%d",&a[i]);
        kol[a[i]]++;
        if (kol[a[i]]==1) all++;
    }
    if (all<k){
        printf("-1 -1");
        return 0;
    }
    l=0; r=n-1;
    while (all>=k){
        kol[a[r]]--;
        if (kol[a[r]]==0) all--;
        r--;
    }
    r++;
    kol[a[r]]++;
    all++;
    while (all>=k){
        kol[a[l]]--;
        if (kol[a[l]]==0) all--;
        l++;
    }
    l--;
    printf("%d %d",l+1,r+1);
    return 0;
}
