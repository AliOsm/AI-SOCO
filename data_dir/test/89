#include <cstdio>
#include <vector>
using namespace std;
int ch[2010], a[2010], n, q;
int p[2010], c[2010], low[2010], hi[2010];
vector<int> e[2010];
void inc(int v, int k) {
	if (a[v] >= k) ++a[v];
	for (int i = 0; i < e[v].size(); i++) {
		int w = e[v][i];
		inc(w, k);
	}
}
void dfs(int v) {
	low[v] = q;
	for (int i = 0; i < e[v].size(); i++) {
		int w = e[v][i];
		dfs(w);
		int nch = ch[v] + ch[w];
		if (!a[v] && c[v] < nch) {
			++q;
			a[v] = q - ch[w] + c[v] - ch[v];
			inc(w, a[v]);
		}
		ch[v] = nch;
	}
	if (!a[v]) a[v] = ++q;
	hi[v] = q;
	ch[v]++;
}
int cfs(int v, int k) {
	int r = a[v] < k;
	for (int i = 0; i < e[v].size(); i++) {
		int w = e[v][i];
		r += cfs(w, k);
	}
	return r;
}
int main() {
	scanf("%d", &n);
	int r;
	for (int i = 0; i < n; i++) {
		scanf("%d%d", &p[i], &c[i]);
		if (p[i] == 0) {
			r = i;
		} else {
			e[p[i]-1].push_back(i);
		}
	}
	q = 1;
	dfs(r);
	for (int i = 0; i < n; i++) {
		if (cfs(i, a[i]) != c[i]) {
			puts("NO");
			return 0;
		}
	}
	puts("YES");
	for (int i = 0; i < n; i++) {
		printf("%d ", a[i]);
	}
	return 0;
}
