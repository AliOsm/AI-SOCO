#include<bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pii pair<int, int>
#define mem(a, b) memset(a, b, sizeof(a))
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define fopen freopen("in.txt", "r", stdin);freopen("out.txt", "w", stout);
//head

const int INF = 0x3f3f3f3f;
int a[55], cnt[55];
int main() {
    LL n;
    scanf("%lld", &n);
    int tot = 0;
    while(n) {
        a[++tot] = n%10;
        n = n/10;
        cnt[a[tot]] ++;
    }
    int ans = INF;
    if(cnt[0] >= 2) {
        int l, r, i;
        for (i = 1; i <= tot; i++) {
            if(a[i] == 0) {
                l = i;
                break;
            }
        }
        for (i++; i <= tot; i++) {
            if(a[i] == 0) {
                r = i;
                break;
            }
        }
        ans = min(ans, l+r-3);
    }
    if(cnt[2] && cnt[5]) {
        int l, r, t = 0;
        for (int i = 1; i <= tot; i++) {
            if(a[i] == 5) {
                l = i;
                break;
            }
        }
        for (int i = 1; i <= tot; i++) {
            if(a[i] == 2) {
                r = i;
                break;
            }
        }

        if(l < r) {
            if(r == tot) {
                int tt = 1;
                for (int i = tot - 1; i >= 1; i--) {
                    if(a[i]) {
                        tt = i;
                        break;
                    }
                }
                t = l+r-3+tot-1-tt;
            }
            else t = l+r-3;
        }
        else {
            if(l == tot) {
                int tt = 1;
                for (int i = tot - 1; i >= 1; i--) {
                    if(a[i]) {
                        tt = i;
                        break;
                    }
                }
                t = l+r-2+tot-1-tt;
            }
            else t = l+r-2;
        }
        ans = min(ans, t);
    }
    if(cnt[5] && cnt[0]) {
        int l, r, t = 0;
        for (int i = 1; i <= tot; i++) {
            if(a[i] == 0) {
                l = i;
                break;
            }
        }
        for (int i = 1; i <= tot; i++) {
            if(a[i] == 5) {
                r = i;
                break;
            }
        }
        if(l < r) {
            if(r == tot && l != tot-1) {
                int tt = 1;
                for (int i = tot - 1; i >= 1; i--) {
                    if(a[i]) {
                        tt = i;
                        break;
                    }
                }
                t = l+r-3+tot-1-tt;
            }
            else t = l+r-3;
        }
        else {
            t = l+r-2;
        }
        ans = min(ans, t);
    }
    if(cnt[7] && cnt[5]) {
        int l, r, t = 0;
        for (int i = 1; i <= tot; i++) {
            if(a[i] == 5) {
                l = i;
                break;
            }
        }
        for (int i = 1; i <= tot; i++) {
            if(a[i] == 7) {
                r = i;
                break;
            }
        }
        if(l < r) {
            if(r == tot) {
                int tt = 1;
                for (int i = tot - 1; i >= 1; i--) {
                    if(a[i]) {
                        tt = i;
                        break;
                    }
                }
                t = l+r-3+tot-1-tt;
            }
            else t = l+r-3;
        }
        else {
            if(l == tot) {
                int tt = 1;
                for (int i = tot - 1; i >= 1; i--) {
                    if(a[i]) {
                        tt = i;
                        break;
                    }
                }
                t = l+r-2+tot-1-tt;
            }
            else t = l+r-2;
        }
        ans = min(ans, t);
    }
    if(ans == INF) printf("-1\n");
    else printf("%d\n", ans);
    return 0;
}

