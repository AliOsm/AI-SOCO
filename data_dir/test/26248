//raja1999

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")

#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string> 
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
using namespace __gnu_pbds;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (998244353LL)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >
#define int ll

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

//std::ios::sync_with_stdio(false);
int k,vis[300005],vis1[300005],dp[300005],dp1[300005],a[300005];
int compute(int x);
int compute1(int x);
int powe(int a,int b){
	int res=1;
	while(b>0){
		if(b%2){
			res*=a;
			res%=mod;
		}
		a*=a;
		a%=mod;
		b/=2;

	}
	return res;
}
int compute(int len){
	if(len==1){
		return 	dp[len]=k-1;
	}
	if(vis[len]!=0){
		return dp[len];
	}
	vis[len]=1;
	dp[len]=(k-1)*compute1(len-1);
	dp[len]%=mod;
	return dp[len];
}
int compute1(int len){
	if(len==1){
		return dp1[len]=k-2;
	}
	if(vis1[len]){
		return dp1[len];
	}
	vis1[len]=1;
	dp1[len]=compute(len-1)+(k-2)*compute1(len-1);
	dp1[len]%=mod;
	return dp1[len];
}
int solve(vi vec){

	int n=vec.size(),i,l=-1,r,val,prev,cur,c=0;
	f(i,1,vec.size()){
		if(vec[i]!=-1&&vec[i-1]!=-1&&vec[i]==vec[i-1]){
			return 0;
		}
	}
	rep(i,vec.size()){
		if(vec[i]!=-1){
			l=i;
			break;
		}
	}
	fd(i,vec.size()-1,0){
		if(vec[i]!=-1){
			r=i;
			break;
		}
	}
	if(l==-1){
		val=powe(k-1,n-1);
		val*=k;
		val%=mod;
		return val;
	}
	else{
		val=powe(k-1,l);
		val*=powe(k-1,n-1-r);
		val%=mod;
		prev=vec[l];
		f(i,l,r+1){
			if(vec[i]==-1){
				c++;
			}
			else{
				if(c==0){
					prev=vec[i];
				}
				else{
					cur=vec[i];
					if(cur==prev){
						val*=dp[c];
						val%=mod;
					}
					else{
						val*=dp1[c];
						val%=mod;
					}
					prev=vec[i];
				}
				c=0;
			}
		}
		return val;
	}
}
vi vec,vec1;
main(){
	std::ios::sync_with_stdio(false); cin.tie(NULL);
	int n,i,ans;
	cin>>n>>k;
	rep(i,n){
		cin>>a[i];
	}
	f(i,1,n+5){
		compute(i);
		compute1(i);
	}		
	f(i,0,n){
		vec.pb(a[i]);
		i++;
	}
	f(i,1,n){
		vec1.pb(a[i]);
		i++;
	}
	
	ans=solve(vec);
	//cout<<ans<<endl;
	ans*=solve(vec1);
	ans%=mod;

	cout<<ans<<endl;
	return 0;
} 
	