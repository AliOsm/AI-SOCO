#pragma GCC optimize("O3")

#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <random>
#include <cmath>
#include <chrono>
#include <bitset>

#define ll long long
#define ld long double
#define pb push_back
#define eb emplace_back
#define int long long
using namespace std;

const int INF = 2e15;
const int MOD = 1e9 + 7;
const int MB = 20;
const int maxN = 5000;

void go() {
	string s;
	cin >> s;
	int x = 0, y = 0;
	vector<int> a(4);
	for (char c : s) {
		if (c == 'U') a[0]++;
		if (c == 'D') a[1]++;
		if (c == 'L') a[2]++;
		if (c == 'R') a[3]++;
 	}
	
	if (!min(a[0], a[1])) {
		if (min(a[2], a[3])) cout << "2\nRL";
		else cout << "0";
	}
	else if (!min(a[2], a[3])) {
		if (min(a[0], a[1])) cout << "2\nUD";
		else cout << "0";
	}
	else if (min(a[0], a[1]) && min(a[2], a[3])) {
		int x = min(a[0], a[1]);
		int y = min(a[2], a[3]);
		cout << (x + y) * 2 << '\n';
		for (int i = 0; i < x; i++) cout << 'U';
		for (int i = 0; i < y; i++) cout << 'R';
		for (int i = 0; i < x; i++) cout << 'D';
		for (int i = 0; i < y; i++) cout << 'L';
	}
	cout << '\n';
}

void solve() {
	int q;
	cin >> q;
	for (int i = 0; i < q; i++) {
		go();
	}

}

signed main() {
	/*
	freopen("search.in", "r", stdin);
	freopen("search.out", "w", stdout);
	*/
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}