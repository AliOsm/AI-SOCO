#include <iostream>

using namespace std;

int p[51], sz[51];

int find_parent(int n) {
	if (p[n] == n)
		return n;
	return p[n] = find_parent(p[n]);
}

int main() {
	int n, m, x, y, bit;

	ios::sync_with_stdio(0);
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		p[i] = i;
		sz[i] = 1;
	}
	for (int i = 0; i < m; i++) {
		cin >> x >> y;
		int px = find_parent(x);
		int py = find_parent(y);
		if (px < py) {
			p[py] = px;
			sz[px] += sz[py];
			sz[py] = 0;
		}
		else if (py < px) {
			p[px] = py;
			sz[py] += sz[px];
			sz[px] = 0;
		}
	}

	bit = 0;
	for (int i = 1; i <= n; i++)
		if (sz[i])
			bit += sz[i] - 1;

	cout << (1ll << bit) << endl;

	return 0;
}