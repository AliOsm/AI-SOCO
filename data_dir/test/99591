#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<vector>
#include<queue>
#include<bitset>
#include<string>
#include<stack>
#include<set>
#include<unordered_set>
#include<map>
#include<unordered_map>
#include<cstring>
#include<complex>
#include<cmath>
#include<iomanip>
#include<numeric>
#include<algorithm>
#include<list>
#include<functional>
#include<cassert>
#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define INF 987654321987654321
#define PI 3.141592653589793238462643383279502884
#define fup(i,a,b,c) for(int (i)=(a);(i)<=(b);(i)+=(c))
#define fdn(i,a,b,c) for(int (i)=(a);(i)>=(b);(i)-=(c))
#define MEM0(a) memset(a,0,sizeof(a));
#define MEM_1(a) memset(a,-1,sizeof(a));
#define ALL(a) a.begin(),a.end()
#define SYNC ios_base::sync_with_stdio(false);cin.tie(0)
using namespace std;
typedef long long ll;
typedef long double ld;
typedef double db;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<int, int> Pi;
typedef pair<ll, ll> Pll;
typedef pair<double, double> Pd;
typedef vector<int> Vi;
typedef vector<ll> Vll;
typedef vector<double> Vd;
typedef vector<Pi> VPi;
typedef vector<Pll> VPll;
typedef vector<Pd> VPd;
typedef tuple<int, int, int> iii;
typedef tuple<int, int, int, int> iiii;
typedef tuple<ll, ll, ll> LLL;
typedef vector<iii> Viii;
typedef vector<LLL> VLLL;
typedef complex<double> base;
const ll MOD = 1000000007;
ll POW(ll a, ll b, ll MMM = MOD) {ll ret=1; for(;b;b>>=1,a=(a*a)%MMM)if(b&1)ret=(ret*a)% MMM; return ret; }
ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
ll lcm(ll a, ll b) { if (a == 0 || b == 0)return a + b; return a*(b / gcd(a, b)); }
int dx[] = { 0,1,0,-1 }, dy[] = { 1,0,-1,0 };
int ddx[] = { 0,0,1,1,1,-1,-1,-1 }, ddy[] = { 1,-1,1,0,-1,1,0,-1 };

ll n;
int k;
ll a[65];
ll d[65][65][2];
ll go(int N,int K,int C)
{
	if(N<0)return K==0;
	ll &ret=d[N][K][C];
	if(ret!=-1)return ret;
	ret=0;
	if(C==0)
	{
		if(!a[N])ret+=go(N-1,K,0);
		else
		{
			if(K>0) ret+=go(N-1,K-1,0);
			ret+=go(N-1,K,1);
		}
	}
	else
	{
		if(K>0)ret+=go(N-1,K-1,1);
		ret+=go(N-1,K,1);
	}
	return ret;
}
ll res(ll N)
{
	MEM_1(d);
	fup(i,0,63,1)a[i]=N&(1LL<<i);
	return go(63,k,0);
}
int main() {
	scanf("%lld%d",&n,&k);
	ll l=1,r=(ll)1e18;
	while(l<=r)
	{
		ll N=(l+r)>>1;
		ll t=res(2*N)-res(N);
		if(t>=n)r=N-1;
		else l=N+1;
	}
	printf("%lld",l);
}