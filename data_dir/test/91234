/*
▄███████▀▀▀▀▀▀███████▄
░▐████▀▒ЗАПУСКАЕМ▒▀██████▄
░███▀▒▒▒▒▒ДЯДЮ▒▒▒▒▒▒▀█████
░▐██▒▒▒▒▒▒БОГДАНА▒▒▒▒▒████▌
░▐█▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌
░░█▒▄▀▀▀▀▀▄▒▒▄▀▀▀▀▀▄▒▐███▌
░░░▐░░░▄▄░░▌▐░░░▄▄░░▌▐███▌
░▄▀▌░░░▀▀░░▌▐░░░▀▀░░▌▒▀▒█▌
░▌▒▀▄░░░░▄▀▒▒▀▄░░░▄▀▒▒▄▀▒▌
░▀▄▐▒▀▀▀▀▒▒▒▒▒▒▀▀▀▒▒▒▒▒▒█
░░░▀▌▒▄██▄▄▄▄████▄▒▒▒▒█▀
░░░░▄██████████████▒▒▐▌
░░░▀███▀▀████▀█████▀▒▌
░░░░░▌▒▒▒▄▒▒▒▄▒▒▒▒▒▒▐
░░░░░▌▒▒▒▒▀▀▀▒▒▒▒▒▒▒▐
TAYA 
*/
#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#pragma GCC optimize("fast-math")
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
#include <random>
 
using namespace std;


#define ll long long
#define ld double
#define null NULL
#define prev prev228
#define index index228
#define left left228
#define right right228
#define hash hash228
#define firn(i, n) for (int i = 0; i < (int)n; ++i)
#define forn(i, n) for (int i = 1; i <= (int)n; ++i)
#define endl '\n'
#define int long long


template<typename T> inline void uin(T &a, T b) {
	if (b < a) a = b;
}

template<typename T> inline void uax(T &a, T b) {
	if (b > a) a = b;
}


bool check(string s) {
	bool b1 = 0, b2 = 0, b3 = 0;
	for (int i = 0; i < (int)s.size(); ++i) {
		if ('0' <= s[i] && s[i] <= '9') b1 = 1;
		if ('a' <= s[i] && s[i] <= 'z') b2 = 1;
		if ('A' <= s[i] && s[i] <= 'Z') b3 = 1;
	}
	if (b1 && b2 && b3) return 1;
	return 0;
}

string s;

void upd(int i, int type) {
	if (type == 0) s[i] = '1';
	if (type == 1) s[i] = 'a';
	if (type == 2) s[i] = 'A';
}

void solve() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> s;
	if (check(s)) {
		cout << s << endl;
		return ;
	}
	int n = (int)s.size();
	string _s = s;
	for (int i = 0; i < n; ++i) {
		s = _s;
		s[i] = '1';
		if (check(s)) {
			cout << s << endl;
			return ;
		}
		s[i] = 'a';
		if (check(s)) {
			cout << s << endl;
			return ;
		}
		s[i] = 'A';
		if (check(s)) {
			cout << s << endl;
			return ;
		}
		s = _s;
	}
	for (int i = 0; i < n - 1; ++i) {
		for (int c1 = 0; c1 < 3; ++c1) {
			for (int c2 = 0; c2 < 3; ++c2) {
				s = _s;
				
				upd(i, c1);
				upd(i + 1, c2);
				if (check(s)) {
					cout << s << endl;
					return ;
				}

				s = _s;
			}
		}
	}
}

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int T;
	cin >> T;
	forn(iter, T) {
		solve();
	}
    return 0;
}






