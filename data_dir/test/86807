#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>

#define ll long long
#define ld long double
#define OS tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

const int N = 1e5 + 5, Mod = 1e9 + 7;
ll n, a, b, arr[N];
map<ll, ll> dp[5][N];
vector<int> edge[N];

ll rec(int u, int par, ll gc, bool cut) {
    if (dp[cut][u].find(gc) != dp[cut][u].end()) {
        return dp[cut][u][gc] % Mod;
    }
    dp[cut][u][gc] = gc % Mod;
    ll &re = dp[cut][u][gc];
    for (auto i : edge[u]) {
        if (i != par) {
            re = (re % Mod + rec(i, u, __gcd(gc, arr[i]), cut) % Mod) % Mod;
            if (cut) {
                re = (re % Mod + rec(i, u, arr[i], 0) % Mod) % Mod;
            }
        }
    }
    return re % Mod;
}

int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n;
    /*memset(dp, -1, sizeof(dp));*/
    for (int i = 1; i <= n; i++) {
        cin >> arr[i];
    }
    for (int i = 1; i <= n - 1; i++) {
        cin >> a >> b;
        edge[a].push_back(b);
        edge[b].push_back(a);
    }
    cout << rec(1, -1, arr[1], 1)  % Mod << endl;
    return 0;
}