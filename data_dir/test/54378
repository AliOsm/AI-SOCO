#include <bits/stdc++.h>

using namespace std;

const int N = 200005;

int n, q;

int a[N];

vector<int> occ[N];

int nx[N], pv[N];

void erase(int pos){
    if(pv[pos] != -1){
        nx[ pv[pos] ] = nx[pos];
    }
    
    if(nx[pos] != n){
        pv[ nx[pos] ] = pv[pos];
    }
}

bool solve(){
    for(int i = 0; i < n; i++)
        occ[ a[i] ].push_back(i);

    for(int i = 0; i < n; i++){
        nx[i] = i+1;
        pv[i] = i-1;
    }

    int pos = 0;
    for(int val = q; val >= 1; val--) if(!occ[val].empty()){

        while((int)occ[val].size() >= 2){
            pos = occ[val].back(); occ[val].pop_back();
            if(pv[pos] != occ[val].back())
                return 0;
            erase(pos);
        }
        erase(occ[val].back());
        occ[val].pop_back();
    }

    return 1;
}

int main(){

    scanf("%d %d", &n, &q);

    for(int i = 0; i < n; i++) scanf("%d", a+i);

    if(n == 1){
        if(a[0] != q && a[0]) return printf("NO\n"), 0;
        printf("YES\n");
        printf("%d\n", q);
        return 0;
    }

    {
        int ok = 0;
        for(int i = 0; i < n; i++) if(a[i] == q){
            ok = 1;
            break;
        }
        if(!ok){
            int zero = 0;
            for(int i = 0; i < n; i++) if(!a[i]){
                zero = 1;
                a[i] = q;
                break;
            }
            if(!zero) return printf("NO\n"), 0;
        }
    }

    for(int k = 0; k < 5; k++){
        for(int i = 1; i < n; i++) if(!a[i])
            a[i] = a[i-1];
        for(int i = n-2; i >= 0; i--) if(!a[i])
            a[i] = a[i+1];
    }

    if(!solve()) return printf("NO\n"), 0;

    printf("YES\n");

    for(int i = 0; i < n; i++)
        printf("%d%c", a[i], " \n"[i+1 == n]);
}
