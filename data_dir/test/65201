// Sakhiya07 - Yagnik Sakhiya
 
#include <bits/stdc++.h>
using namespace std;
 
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define all(x) x.begin(),x.end()
 
#define mp make_pair
#define bp __builtin_popcountll
#define MOD  1000000007
#define N 100005
#define pll pair<ll,ll>

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update>

#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);srand(time(NULL));

void solve()
{
     ll n;
     cin >> n;
     ll a[n+1],maxi[n+2],mini[n+2],maxi_suf[n+2],mini_suf[n+2],sum[n+2],sum_suf[n+2];
     map<ll,ll> y1,y2;
     ll cnt1 = 0,cnt2 = 0;
     for(ll i=1;i<=n;i++)   cin >> a[i];
     for(ll i=1;i<=n;i++)
     {
          if(y2[a[i]]==1)    cnt2++;
          y2[a[i]]++;
     }
     vector<ll> ans;
     for(ll i=0;i<=n+1;i++)
     {
          maxi[i] = maxi_suf[i] = sum[i] = sum_suf[i] = 0;
          mini[i] = mini_suf[i] = MOD;
     }
     for(ll i=1;i<=n;i++)
     {
          mini[i] = min(mini[i-1],a[i]);
          maxi[i] = max(maxi[i-1],a[i]);
          sum[i] = a[i] + sum[i-1];
     }
     for(ll i=n;i>=1;i--)
     {
          mini_suf[i] = min(mini_suf[i+1],a[i]);
          maxi_suf[i] = max(maxi_suf[i+1],a[i]);
          sum_suf[i] = a[i] + sum_suf[i+1];
     }
     for(ll i=1;i<=n-1;i++)
     {
          if(y2[a[i]]==2)     cnt2--;
          y2[a[i]]--;
          if(y1[a[i]]==1)     cnt1++;
          y1[a[i]]++;
          ll max_pre = maxi[i];
          ll min_pre = mini[i];
          ll max_suf = maxi_suf[i+1];
          ll min_suf = mini_suf[i+1];
          if(max_pre==i && min_pre==1 && min_suf==1 && max_suf==n-i)
          {
               ll sum1 = sum[i];
               ll sum2 = sum_suf[i+1];
               ll temp1 = (i*(i+1))/2;
               ll temp2 = ((n-i)*(n-i+1))/2;
               if(sum1==temp1 && sum2==temp2 && !cnt1 && !cnt2)   ans.pb(i);
          }
     }
     cout<<ans.size()<<"\n";
     for(auto X:ans)   cout<<X<<" "<<n-X<<"\n";
} 

int main()
{
     FAST;
     ll t = 1;
     cin >> t;
     while(t--)
     {
          solve();
     }
}