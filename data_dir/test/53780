#include <iostream>
#include <vector>
using namespace std;

int n;

vector < vector < int > > g;
int timer;
vector < int > tin , tout , par , d;

void init() {
	g.assign(n, vector < int >());
	timer = 0;
	tin.assign(n,0);
	tout.assign(n,0);
	par.assign(n,0);
	d.assign(n,-1);
}

void dfs(int u = 0 , int depth = 0, int p = -1) {

	d[u] = depth;
	par[u] = p;
	tin[u] = timer++;

	for(int i = 0; i < g[u].size(); ++i) {
		int v = g[u][i];

		if(d[v] != -1)	continue;

		dfs(v,depth+1,u);
	}

	tout[u] = timer++;
}

bool isAncestor(int v, int u) {
	return tin[v] <= tin[u] && tout[v] >= tout[u];
}

int main() {

	#ifdef tajir
		freopen("input.txt","r",stdin);
	#endif

	int q;

	cin >> n >> q;

	init();

	for(int i = 1; i < n; ++i) {
		int u,v;
		cin >> u >> v;

		--u , --v;

		g[u].push_back(v);
		g[v].push_back(u);
	}

	dfs();

	while(q--) {
		int m;

		cin >> m;

		vector < int > v(m);

		for(int i = 0;i < m; ++i) {
			cin >> v[i];
			v[i]--;
		}

		int target = v[0];

		for(int i = 0; i < m; ++i)
			if(d[v[i]] > d[target])
				target = v[i];

		for(int i = 0; i < m; ++i) {
			int u = v[i];

			if(u == target)	continue;

			if(par[u] != -1)
				v[i]= par[u];
		}

		bool flag = true;

		for(int i = 0; i < m; ++i){
			int u = v[i];

			flag &= isAncestor(v[i] , target);
		}

		cout << (flag ? "YES" : "NO") << endl;
	}



	return 0;
}























