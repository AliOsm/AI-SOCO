#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sfi1(v) scanf("%d",&v)
#define sfi2(v1,v2) scanf("%d %d",&v1,&v2)
#define sfi3(v1,v2,v3) scanf("%d %d %d",&v1,&v2,&v3)
#define sfll1(v) scanf("%I64d",&v);
#define sfll2(v1,v2) scanf("%I64d %I64d",&v1,&v2)
#define sfll3(v1,v2,v3) scanf("%I64d %I64d %I64d",&v1,&v2,&v3)

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 1e4 + 4;
int freq[N];
int vis[N];
vi v , a;
int visid;

int main()
{

#ifndef ONLINE_JUDGE
	//freopen("in.in", "r", stdin);
	//freopen("out.in", "w", stdout);
	//ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#endif

    int n , x , t;
    sfi1(t);
    while(t--){
        visid++;
        v.clear();
        a.clear();
        int q , w;
        sfi1(n);
        loop(i,n){
            sfi1(x);
            if(vis[x] != visid){
                freq[x] = 0;
                vis[x] = visid;
            }

            freq[x]++;
            if(freq[x] == 2)v.pb(x);
            if(freq[x] == 4)a.pb(x);
        }

        double best = 1e18;
        sort(ALL(v));
        loop(i,SZ(v)){
            if(i + 1 < v.size()){
                double cur = (v[i]+0.0) / v[i+1] + (v[i+1]+0.0)/ v[i];
                if(cur < best){
                    best = cur;
                    q = v[i];
                    w = v[i+1];
                }
            }
        }

        for(int nxt : a){
            double cur = 2;
            if(cur < best){
                best = cur;
                q = w = nxt;
            }
        }

        //cout << SZ(a) << endl;
        printf("%d %d %d %d\n",q,w,q,w);



    }

    return 0;
}
