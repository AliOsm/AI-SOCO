#include <bits/stdc++.h>

typedef long long tint;


#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define forn(i,n) forsn(i,0,n)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;

void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

const tint maxN = 2048;

tint inversion[maxN][maxN];

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n;
	while (cin >> n)
	{
		
		vector<tint> p (n);
		forn(i,n)
			cin >> p[i];
		tint total = 0;
		forsn(j,1,n)
		forn(i,j)
		{
			total += (p[i] > p[j]);
			inversion[i+1][j+1]++;
			inversion[i+1][n+1]--;
		}
		forsn(i,1,n+1)
		forsn(j,1,n+1)
			inversion[i][j] += inversion[i][j-1];
		tint m;
		cin >> m;
		forn(q,m)
		{
			tint a,b;
			cin >> a >> b;
			tint r = ((b-a+1)*(b-a))/2;
			total += r - 2*inversion[a][b];
			if (total % 2)
				cout << "odd\n";
			else
				cout << "even\n";
		}
	}
	
	return 0;
}




