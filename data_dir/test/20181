//AUTHOR : TIRTH JARSANIA
//COLLEGE : DAIICT

#pragma optimize("", off)
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma comment(linker, "/STACK:36777216")
#include<bits/stdc++.h>
using namespace std;

#define INF LONG_LONG_MAX
#define MINF LONG_LONG_MIN
#define pi acos(-1)
#define bp __builtin_popcount
#define ll long long int
#define ld long double
#define pii pair<ll , ll>
#define For(i,a,b) for(ll i=a;i<b;i++)
#define Fori(i,a,b,p) for(ll i=a;i<b;i+=p)
#define Ror(i,a,b) for(ll i=a;i>b;i--)
#define Rori(i,a,b,p) for(ll i=a;i>b;i-=p)

#define precision(x,d) cout<<fixed<<setprecision(d)<<x
#define minQueue priority_queue<pii,vector<pii>,greater<pii> > 
#define maxQueue priority_queue<pii> 

#define pb push_back
#define pf push_front
#define ff first
#define ss second
#define FILL(a,b) memset((a),(b),sizeof((a)))
#define FAST ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);srand(time(NULL))

const ll LN = 11;
const ll N = 505;
ll dp1[N][LN];
ll dp2[N][LN];

int main()
{
    FAST;
    ll n , m;
    cin >> n >> m;
    FILL(dp1,-1);
    FILL(dp2,-1);
    For(i,1,n+1)
    {
        For(k,1,m+1)
        {
            ll x;
            cin >> x;
            For(j,0,LN)
            {
                if((x>>j)&1)
                {
                    if(dp1[i][j] == -1)
                        dp1[i][j] = k;
                }
                else
                {
                    if(dp2[i][j] == -1)
                        dp2[i][j] = k;
                }
            }
        }
    }
    For(j,0,LN)
    {
        ll cnt = 0;
        ll id = -1;
        For(i,1,n+1)
        {
            if(dp1[i][j] != -1) cnt++;
            if(dp1[i][j] != -1 && dp2[i][j] != -1 && id == -1)  id = i;    
        }
        
        if(cnt % 2 == 1)
        {
            cout << "TAK\n";
            For(i,1,n+1)
            {
                if(dp1[i][j] == -1)
                    cout << dp2[i][j] << " ";
                else
                    cout << dp1[i][j] << " ";
            }
            exit(0);
        }
        else if((cnt%2 == 0)  && id != -1 )
        {
            cout << "TAK\n";
            For(i,1,n+1)
            {
                if(id != i)
                {
                    if(dp1[i][j] == -1)
                        cout << dp2[i][j] << " ";
                    else
                        cout << dp1[i][j] << " ";
                }
                else 
                    cout << dp2[i][j] << " ";
                
            } 
            exit(0);
        }
    }
    cout << "NIE";
}