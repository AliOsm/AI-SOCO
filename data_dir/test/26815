#include <bits/stdc++.h>
 
using namespace std ;
 
const int MAX = 105 , MAXMASK = (1 << 5) ;
 
int arr[5][MAX] ;
int dp[MAX][MAXMASK] ;
int n , m ;
 
int solve(int idx , int mask)
{
	if(mask == (1 << (n))-1)
		return 0 ;
	if(idx == m)
		return -1e7 ;
	int &ret = dp[idx][mask] ;
	if(ret != -1)
		return ret ;
	ret = -5e7 ;
	for(int i = 0 ; i < n ; ++i)
	{
		for(int sub = 0 ; sub < (1 << n) ; ++sub)
		{
			int sum = 0 ;
			if((mask & sub) != 0)
				continue ;
			for(int j = 0 ; j < n ; ++j)
			{
				if((sub & (1 << j)))
					sum += arr[((j-i+n)%n)][idx] ;
			}
			ret = max(ret , solve(idx+1 , (mask | sub)) + sum) ;
		}
	}
	return ret ;
}
 
int main()
{
	ios_base::sync_with_stdio(0) ;
	cin.tie(0) ;
	int t ;
	cin>>t ;
	while(t--)
	{
		memset(dp , -1 , sizeof(dp)) ;
		cin>>n>>m ;
		for(int i = 0 ; i < n ; ++i)
		{
			for(int j = 0 ; j < m ; ++j)
				cin>>arr[i][j] ;
		}
		cout<<solve(0 , 0)<<"\n";
	}
	return 0 ;
}