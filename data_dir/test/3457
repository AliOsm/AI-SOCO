//                             In The Name Of Allah
#include <bits/stdc++.h>
#define	ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define pb push_back
#define int long long
#define ld long double
using namespace std; 
 
const int N = 4e5 + 100, OO = 1e6 + 1000, M = 1e9 + 7, P = 6151, SQ = 1000, lg = 30;
typedef pair <int, int> pii;
vector <pii> v[N];
int cnt[N];
pii a[N];

struct node {
	int num = 0, ans = 0;
} seg[N << 2];

void upd(int c, int b, int e, int l, int r) {
	if(e - b == 1) {
		seg[c].ans = r;
		seg[c].num = 1;
		return;
	}
	int mid = (b + e) >> 1;
	if(l < mid) upd(c << 1, b, mid, l, r);
	else upd(c << 1 | 1, mid, e, l, r);
	seg[c].num = seg[c << 1].num + seg[c << 1 | 1].num;
}

int get(int c, int b, int e, int l) {
	if(e - b == 1)
		return seg[c].ans;
	int mid = (b + e) >> 1;
	if(seg[c << 1].num >= l)
		return get(c << 1, b, mid, l);
	else
		return get(c << 1 | 1, mid, e, l - seg[c << 1].num);	
}

int32_t main() {
	use_fast;
	int n;
	cin >> n;
	for(int i = 0; i < n; i++) {
		cin >> a[i].ff;
		a[i].ss = -1 * i;
	}
	sort(a, a + n);
	int m;
	cin >> m;
	for(int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		v[x].pb({y, i});
	}
	for(int i = n - 1; i >= 0; i--) {
		int j = n - i;
		upd(1, 0, n, a[i].ss * -1, a[i].ff);
		for(auto u : v[j]) 
			cnt[u.ss] = get(1, 0, n, u.ff);
	}
	for(int i = 0; i < m; i++)
		cout << cnt[i] << endl;
	return 0;
} 
/*
be carefull :
1- if not solve after 20 min, read again twice
2- after submit read the code again
3- fun with contest
4- ... 
*/
