#include<bits/stdc++.h>
#define ll long long
#define N 200050
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
//order_of_key (k) : Number of items strictly smaller than k .
//find_by_order(k) : K-th element in a set (counting from zero).
vector< pair< int , int > > ar;
vector< pair<pair< int, int >, int>  > query;
int a[N];
int ans[N];
ordered_set s;
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n; cin>>n;
    for(int i=0;i<n;i++){
        cin>>a[i];
        ar.push_back({a[i],-i});
    }
    sort(ar.begin(),ar.end());
    reverse(ar.begin(),ar.end());
    int m; cin>>m;
    for(int i=0;i<m;i++){
        int k,pos;
        cin>>k>>pos;
        query.push_back({{k,pos},i});
    }
    sort(query.begin(),query.end());
    int cu=0;
    for(int i=0;i<m;i++){
          //  cout<<query[i].first.first<<" "<<query[i].first.second<<" ";
        while(cu<query[i].first.first){
           //     cout<<ar[cu].first<<" dddd "<<ar[cu].second<<" ";
            s.insert(abs(ar[cu].second));
            cu++;
        }
        int val=*s.find_by_order(query[i].first.second-1);
        ans[query[i].second]=a[val];
       // cout<<a[val]<<" val= "<<val<<"\n";
    }
    for(int i=0;i<m;i++)
        cout<<ans[i]<<"\n";
    return 0;
}
