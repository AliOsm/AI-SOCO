#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <memory.h>
#include <cstring>
#include <stack>
#include <unordered_set>
#include <unordered_map>
#include <iterator>
#pragma comment(linker, "/STACK:667177216")
#define ll long long
#define ull unsigned long long
#define INF 1000000007;
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define mp make_pair
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<LL>
#define vS vector<string>
#define fori(i, n) for (int(i) = 0; (i) < n; (i)++)
#define forn(it, from, to) for (int(it) = from; (it) < to; (it)++)
#define forI(tmp) for (auto(it) = (tmp).begin(); (it) != (tmp).end(); (it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scLL(a) scanf("%I64d", &(a))
#define mems(a, val) memset(a, val, sizeof(a))
typedef long long LL;
using namespace std;
const LL MOD = 1000000000 + 7;
const LL MAXN = 100000 + 100;

vector<int> ans;
int n,k;

void print_v(vector<LL> &v) {
    forn(i,0,n)cout<<v[i]<<" ";
    cout<<endl;
}

void dij(vector<vector<pair<pair<int, LL>, int> > > &g) {
    vector<LL> d(g.size(), 1e18);
    vector<pair<int,int> > par(g.size(), mp(-1, -1));
    priority_queue<pair<LL, int> > q;
    d[0] = 0;
    q.push(mp(0,0));
    
    while(!q.empty()) {
        auto cur = q.top();
        q.pop();
        LL dist = -cur.first;
        int v = cur.second;
        if (d[v] < dist) continue;

        for(int i = 0; i < g[v].size(); ++i) {
            int to = g[v][i].first.first;
            LL new_dst = dist + g[v][i].first.second;
            if (d[to] > new_dst) {
                d[to] = new_dst;
                q.push(mp(-new_dst, to));
                par[to] = mp(v, g[v][i].second);
            }
        }
    }


    vector<pair<LL, int> > d2;
    forn(i,0,d.size()) {
        if (d[i] > 1e17) {
            break;
        }

        d2.push_back(mp(d[i], i));
    }


    sort(all(d2));

    for(int i = 1; i < min((int)d2.size(), k + 1); ++i) {
        ans.push_back(par[d2[i].second].second);
    }
}


int main()
{
#ifdef ONLINE_JUDGE
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    int m;
    cin>>n>>m>>k;
    vector<vector<pair<pair<int,LL>, int> > > g(n);

    forn(i,0,m) {
        int from,to,w;
        cin>>from>>to>>w;
        from--;
        to--;
        g[from].push_back(mp(mp(to, w), i + 1));
        g[to].push_back(mp(mp(from, w), i + 1));
    }

    if (k == 0) {
        cout<<0;
        return 0;
    }
    dij(g);
sort(all(ans));
    cout<<ans.size()<<endl;
    forn(i,0,ans.size()) cout<<ans[i]<<" ";
    return 0;
}