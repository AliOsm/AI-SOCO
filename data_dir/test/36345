#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll oo = 2e18;
typedef pair<int,int> pii;
const int N = 250000*2;

ll a,b,n,k;
/*
ll moveLeft(ll idx, ll g){
  g %= (n*k);
  if(g >= idx+1){
    g -= idx+1;
    idx = n*k-1;
  }
  return idx - g;
}
ll moveRight(ll idx, ll g){
  g %= (n*k);
  idx += g;
  if(idx >= (n*k)) idx -= (n*k);
  return idx;
}
ll closet(ll idx , )*/

ll gcd( ll a,  ll b){
  return !b?a:gcd(b,a%b);
}

int main(){
  cin >> n >> k >> a >> b;
  vector<ll> v;
  if(n == 1 && k == 1){
    cout << 1 << " " << 1 << endl;
    return 0;
  }else if(n == 1){
    v.push_back(a+b);
    v.push_back(k-a-b);
    if(a >= b)v.push_back(a-b);
    if(b >= a)v.push_back(b-a);
  }else{
   v.push_back(k-a-b);
   v.push_back(a+b);
   v.push_back(k-a+b);
   v.push_back(k-a+k-b);
   v.push_back(a+k-b);
   if(a >= b)v.push_back(a-b);
   if(b >= a)v.push_back(b-a);
  }
  ll x = oo, y = 0;
  for (int i = 0; i < v.size(); ++i){
    for(int j = 0 ; j <= n ; ++j){
      ll go = gcd(n*k,v[i]+j*k);
      x = min(x,(n*k)/go);
      y = max(y,(n*k)/go);
    }
  }
  cout << x << " " << y << endl;
  return 0; 
}
