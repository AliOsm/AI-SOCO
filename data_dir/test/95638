#include<iostream>
#include<vector>
#include<set>
#include<math.h>
#include<string>
#include<algorithm>
#define ll long long
using namespace std;
ll MOD = 1000000007;
ll n, m;
ll f[110];
ll t[110][110];
void multMatrix(ll A[110][110], ll B[110][110])
{
	ll sol[110][110];
	//cout << endl;
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < m; j++)
		{
			sol[i][j] = 0;
			for (int k = 0; k < m; k++)
			{
				sol[i][j] += A[i][k] * B[k][j];
				sol[i][j] %= MOD;
				
			}
		//	cout << sol[i][j] << " ";
			
		}
		//cout << endl;
	}
	for (int i = 0; i < m; i++)
		for (int j = 0; j < m; j++)
			A[i][j] = sol[i][j];
}
void fpow(ll T[110][110], ll k)
{		
	ll r[110][110]; 
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < m; j++)
	{
			if(i==j)r[i][j] = 1;
			else r[i][j] = 0;
		}
	}
		for (; k; k >>= 1) 
		{ 
		//	cout << k << endl;
			if (k & 1) multMatrix(r, T);//r =( r * n )%p;
			multMatrix(T, T);
		} 
		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < m; j++)
			{
			//	cout << r[i][j] << " ";
				T[i][j] = r[i][j];
			}
		//	cout << endl;
		}
		
}
ll ww[110];
int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> m;
	if (n < m)
	{
		cout << 1 << endl;
		return 0;
	}
	for (int i = 0; i < m; i++)
	{
		f[i] = 1;
	}
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (i == m - 1)
			{
				if (j == 0 || j == m - 1)t[i][j] = 1;
			}
			else
			{
				if (j == i + 1)
				{
					t[i][j] = 1;
				}
			}
			//cout << t[i][j] << "  ";
		}
		//cout << endl;
	}
		fpow(t, n - m + 1 );
	//	cout << t[1][1] << endl;

		for (int i = 0; i < m; i++)
		{
			for (int j = 0; j < m; j++)
			{
				//cout << t[i][j] << " " << f[i] << endl;
				ww[i] += (t[i][j] * f[i]);
				ww[i] %= MOD;
			}
		}
		cout << ww[m - 1] << endl;
		//system("pause");
	return 0;
}