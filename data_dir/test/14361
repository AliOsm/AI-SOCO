#include <bits/stdc++.h>
using namespace std;

struct P
{
    int x,y;

    bool operator<(const P &a)const{
        if(x!=a.x) return x>a.x;
        return y<a.y;
    }
};


vector<int> v[211111];
//vector<P> v1;
//bitset<4001000> b;
int i,n,m,k,a,d,b,c;
int e[211111];
int o[212111];
int l[212111];
int j[211111];
int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
int px[10]={-1,1,1,-1,1,1,-1,-1},py[10]={1,1,-1,-1,1,-1,1,-1};
long long mod=1000000007,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[1];
stack<int> s;
//set<int> se[33],s1;

queue<int> q;
string r,r1;

//char r[11][11];
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());

bool as(P a,P b)
{
    //if(a.x!=b.x) return a.x<b.x;
    return a.x<b.x;
}


//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

void qq(int n,int m)
{
    for(int h=0;h<v[n].size();h++)
    if(v[n][h]!=m)
    {
        o[v[n][h]]=n;
        l[v[n][h]]=l[n]+1;
        qq(v[n][h],n);
    }
}

void pp(int n,int m)
{
    j[n]=1;
    for(int h=0;h<v[n].size();h++)
    if(e[v[n][h]]==0&&m!=v[n][h])
    {
        pp(v[n][h],n);
        j[n]+=j[v[n][h]];
    }
}

int g(int n,int m,int k)
{
    for(int h=0;h<v[n].size();h++)
    if(v[n][h]!=m&&e[v[n][h]]==0&&j[v[n][h]]>k/2)
        return g(v[n][h],n,k);
    return n;
}

int dd(int n)
{
    printf("d %d\n",n);
    fflush(stdout);
    int e;
    scanf("%d",&e);
    return e;
}

int ss(int n)
{
    printf("s %d\n",n);
    fflush(stdout);
    int e;
    scanf("%d",&e);
    return e;
}

int f(int n)
{
    pp(n,0);
    int c=g(n,0,j[n]),d=dd(c);
    if(d==0) return c;
    e[c]=1;
    if(d+l[c]==b) return f(ss(c));
    return f(o[c]);
}


int main()
{
    scanf("%d",&a);
    for(int t=1;t<a;t++)
    {
        scanf("%d %d",&n,&m);
        v[n].push_back(m);
        v[m].push_back(n);
    }
    l[0]=-1;
    qq(1,0);
    b=dd(1);
    printf("! %d\n",f(1));
    fflush(stdout);
}



