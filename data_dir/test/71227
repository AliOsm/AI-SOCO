//g++ -o A A.cpp

//g++ -Wl,--stack,16777216 -o A A.cpp


//#include <bits/stdc++.h>
//using namespace std;

#include <iostream>
using std::cin;
using std::cout;
using std::string;
//using std::to_string; //convert number to string
using std::endl;

#include <algorithm>
using std::sort;
using std::min;
using std::max;
using std::pair;//pair <int,int> data[100];sort(data,data+100);

#include <math.h>
//sqrt(123.123)
//ceil(0.12)=1
//pow(x,2)=x^2

#include<cstdio>
//printf()

#include <map>
using std::map;
//map <string,int> x;

#include <stdlib.h>
//abs(-123);

#include <vector>
using std::vector;
//vector<int> x;
//x.push_back(0);
//x.pop_back();
//vector<int> x(10,3);   ==>   x[0]==x[1]==...==x[9]==3;
//vector<int> y(x);      ==>   y[0]==y[1]==...==y[9]==3;
//cout<<x.size();        ==>   10


#include <queue>
using std::queue;

#include <deque>
using std::deque;



#include <stack>
using std::stack;
//.push(123)
//.pop()
//.top()
//.size()
//.size()

#include <set>
using std::set;
using std::multiset;

/*
long long gcd(long long a, long long b)
{
    //O(log(max(a,b)))
    long long t;
    while(b!=0)
    {
        t=a%b;
        a=b;
        b=t;
    }
    return a;
}
*/


/*
long long C(int x,int y)
{
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer/=i;
    }
    return answer;
}
*/




/*
//C(x,y) % mod
long long C(long long x,long long y)
{
    long long mod=1000000007;
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer%=mod;
    }
    for(i=1;i<=y;i++)
    {
        while(answer%i!=0){
            answer+=mod;
        }
        answer/=i;
        answer%=mod;
    }
    return answer%mod;
}


for (i=0; i<1010; i++) {
    c[i][0]=1;
    for (j=1; j<=i; j++) c[i][j]=(c[i-1][j-1]+c[i-1][j])%md;
}
*/

/*
//must return true if first>then second
struct classcomp {
    bool operator() (const int& lhs, const int& rhs) const{
        return lhs>rhs;
    }
};
*/


/*
int t;
string qwe;

vector<string> permutations;
void f(string s){
    if(s.size()==t){
        permutations.push_back(s);
        return;
    }
    int n=s.size();
    
    string x=qwe.substr(n,1);
    
    f(x+s);
    f(s+x);
    for(int i=1;i<n;i++){
        f(s.substr(0,i)+x+s.substr(i));
    }
}
*/


int main()
{
    /*
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    */
    
    int data[101][101]={0,};

    int qwe[100000][4]={0,};
    
    int n,m,q;scanf("%d%d%d",&n,&m,&q);
    
    for(int i=0;i<q;i++){
        int a,b,c;
        int x;
        scanf("%d",&x);
        if(x==3){
           scanf("%d%d%d",&a,&b,&c);
           qwe[i][0]=x;
           qwe[i][1]=a;
           qwe[i][2]=b;
           qwe[i][3]=c;
        }else{
            scanf("%d",&a);
            qwe[i][0]=x;
            qwe[i][1]=a;
        }
    }
    for(int i=q-1;i>=0;i--){
        int a=qwe[i][1],b=qwe[i][2],c=qwe[i][3];
        int x=qwe[i][0];
        
        if(x==1){
            data[a][0]=data[a][m];
            for(int i=m;i>0;i--){
                data[a][i]=data[a][i-1];
            }
        }else if(x==2){
            data[0][a]=data[n][a];
            for(int i=n;i>0;i--){
                data[i][a]=data[i-1][a];
            }
        }else{
            data[a][b]=c;
        }
    }
    
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cout<<data[i][j]<<" ";
        }
        cout<<endl;
    }

    
    return 0;   
}
