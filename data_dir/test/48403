/*
    STARK_BOY
*/
#include <bits/stdc++.h>
#include <fstream>
using namespace std;
#define rep(i,a,b) for(ll i=a;i<b;i++)
#define repe(i,a,b) for(ll i=a;i<=b;i++)
#define bac(i,a,b) for(ll i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define F first
#define S second
typedef long long ll;
typedef vector< ll > vi;
typedef vector<pair<ll,ll> > vpii;
typedef pair<ll,ll> pii;
#define all(c) c.begin(),c.end()
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define setbitc(x) __builtin_popcount(x)
#define init(x,a) memset(x,a,sizeof(x))
#define INF 1000000000  
#define MOD 1000000007
#define M 998244353
#define N 500010
# define PI           3.14159265358979323846  /* pi */
mt19937 rng32(chrono::steady_clock::now().time_since_epoch().count());

//Variables Start
ll n,ans=0,m,k;
ll par[N];
//Variables End

ll modularExponentiation(ll x,ll n)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modularExponentiation((x*x)%MOD,n/2);
    else                             //n is odd
        
        return (x*modularExponentiation((x*x)%MOD,(n-1)/2))%MOD;

}
ll modInverse(ll n) 
{ 
    return modularExponentiation(n,MOD-2); 
}
ll get_par(ll ver)
{
    while(par[ver]!=ver)
        ver=par[ver];
    return ver;
}
void merge(ll p1,ll p2)
{
    p1=get_par(p1);
    p2=get_par(p2);
    if(p1==p2)return;
    if(p1<p2) par[p2]=p1;
    else par[p1]=p2;
}
int main()
{
    ios
    int ti=1;
    //cin>>ti;
    while(ti--)
    {
        ll ans=0;
       cin>>n;
       vi v;
       rep(i,0,n)
       {
        ll x;
        cin>>x;
        v.pb(abs(x));
       }
       sort(all(v));
       rep(i,0,n)
       {
            ll t=upper_bound(all(v),2*v[i])-v.begin();
            ans+=(t-i-1);
       }
       cout<<ans;



        
    }
    
    return 0;
        
} 