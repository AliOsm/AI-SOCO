//Caution to the wind,complete freedom
#include<bits/stdc++.h>
#define ll long long
#define MOD 1000000007
#define sd(n) scanf("%d",&n);
#define pd(n) printf("%d\n",n);
#define sl(n) scanf("%llu",&n);
#define pl(n) printf("%llu\n",n);
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define pi acos(-1.0)
#define MAX 1000001
#define  pii pair<int,int>
#define vi vector<int>
int j;
map<int,int> prim,prim1;
int main()
{
    ll a1,a2,b1,b2,A1,A2,B1,B2;
    cin>>a1>>b1>>a2>>b2;
    A1=a1,B1=b1,A2=a2,B2=b2;
    for(j=2;j<=sqrt(a1);j++)
        while(a1%j==0)
            {a1/=j;prim[j]++;}
    if(a1!=1)
        prim[a1]++;
        for(j=2;j<=sqrt(b1);j++)
        while(b1%j==0)
            {b1/=j;prim[j]++;}
    if(b1!=1)
        prim[b1]++;
        for(j=2;j<=sqrt(a2);j++)
        while(a2%j==0)
            {a2/=j;prim1[j]++;}
    if(a2!=1)
        prim1[a2]++;
        for(j=2;j<=sqrt(b2);j++)
        while(b2%j==0)
            {b2/=j;prim1[j]++;}
    if(b2!=1)
        prim1[b2]++;
     ll ans1=1,ans2=1;
     for(j=2;j<=33000;j++)
     {
         if(j==2||j==3)
            continue;
         while(prim[j])
         {ans1*=j;prim[j]--;}
         while(prim1[j])
         {ans2*=j;prim1[j]--;}
    }
     if(ans1!=ans2)
     {
         cout<<"-1";

     }
     else
     {
         while(prim1[3] > 0 && prim[3] > 0) {
        --prim[3], --prim1[3];
         }
    int o13 = 0, o23 = 0;
    while(prim[3]>0) {
        --prim[3];
        ++prim[2];
        ++o13;
    }
    while(prim1[3] > 0) {
        --prim1[3];
        ++prim1[2];
        ++o23;
    }
    int sum = o13 + o23;
    while(o13) {
        if(A1 % 3 == 0) {
            A1 /= 3;
            A1 *= 2;
        } else {
            B1 /= 3;
            B1 *= 2;
        }
        --o13;
    }
    while(o23) {
        if(A2 % 3 == 0) {
            A2 /= 3;
            A2 *= 2;
        } else {
            B2 /= 3;
            B2 *= 2;
        }
        --o23;
    }
    int t2 = max(prim1[2], prim[2]) - min(prim1[2], prim[2]);
    sum += t2;
    while(t2) {
        if(prim[2]>prim1[2]) {
            if(A1 % 2 == 0) {
                A1 /= 2;
            } else {
                B1 /= 2;
            }
        } else {
            if(A2 % 2 == 0) {
                A2 /= 2;
            } else {
                B2 /= 2;
            }
        }
        --t2;
    }
    cout << sum << '\n';
    cout << A1 << ' ' << B1 << '\n';
    cout << A2 << ' ' << B2 << '\n';
     }

    return 0;
}
