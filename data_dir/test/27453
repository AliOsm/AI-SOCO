#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define IN freopen("hard1.txt","r",stdin)
#define OUT freopen("hard1.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG printf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 1000005
#define FastIO  ios_base::sync_with_stdio(false); cin.tie(NULL)


using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii ;

#define maxn 1000005
#define mod 1000000007LL
#define lim 1000000000
#define INF 4500000000000000000LL
#define Max(x,y,z) max(max(x,y),z)

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

pair<int,int> p[3] ;

int main()
{
    for(int i=0 ; i<3 ; i++)
    {
        scanf("%d %d",&p[i].xx,&p[i].yy) ;
    }

    sort(p,p+3) ;

    set <pair<int,int> > vp ;

    pair<int,int> cur = p[0] ;

    while( cur.xx != p[1].xx )
    {
        vp.insert(cur) ;
        cur.xx += 1 ;
    }

    cur = p[2] ;

    while( cur.xx != p[1].xx )
    {
        vp.insert(cur) ;
        cur.xx -= 1 ;
    }

    pair<int,int> cur1 = mp( p[1].xx , min( p[0].yy, min( p[1].yy,p[2].yy ) ) ) ;
    pair<int,int> cur2 = mp( p[1].xx , max( p[0].yy, max( p[1].yy,p[2].yy ) ) ) ;

   // printf("%d %d\n %d %d\n",cur1.xx,cur1.yy,cur2.xx,cur2.yy) ;

    while( 1 )
    {
 //       printf("DBG\n") ;
        vp.insert(cur1) ;
        if( cur1==cur2 ) break ;
        cur1.yy += 1 ;
    }

    printf("%d\n",vp.size()) ;

    for(auto p: vp) printf("%d %d\n",p.xx,p.yy) ;

    return 0 ;
}
