//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e5 + 7;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
int par[30];
int parent(int v){return par[v]<0?v:par[v]=parent(par[v]);}
void merge(int v,int u)
{
	if ((v=parent(v))==(u=parent(u)))
		return ;
	if (par[v]>par[u]) 
		swap(v,u);
	par[v]+=par[u];
	par[u]=v;
}
vector<pair<char, char> > C;
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	memset(par, -1, sizeof par);
	string s1, s2;
	cin >> s1 >> s2;
	for (int i = 0; i < n; i++)
	{
		int a = (s1[i] - 'a'), b = (s2[i] - 'a');
		a = parent(a);
		b = parent(b);
		if(a != b)
		{
			C.push_back({(char)('a' + a), (char)('a' + b)});
			merge(a, b);
		}
	}
	cout << C.size() << "\n";
	for (int i = 0; i < C.size(); i++)
		cout << C[i].first << " " << C[i].second << "\n";
}