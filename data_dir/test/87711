#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e6+10;
const uli mod=1e9+7;
uli fa[mx],fi[mx];
uli fxp(uli b,uli x){
   uli a=1;
   for(;x!=0;b=b*b%mod,x>>=1)
      if(x&1ll)a=a*b%mod;   
   return a;
}
uli cmb(int n,int k){
   return fa[n]*fi[k]%mod*fi[n-k]%mod;
}
uli f[2][1<<10];

uli solve(int n,int k){
   f[0][0]=1ll;
   int rw=0;
   for(int i=0;i<n;i++){
      rw^=1;
      f[rw][0]=1;
      for(int b=1;b<(1<<k);b++){
         f[rw][b]=0ll;
         for(int c=0;c<(1<<k);c++)if((b|c)==b){
            int v=1+__builtin_popcount(c);
            if(v==1)f[rw][b]+=f[rw^1][b^c];
            else f[rw][b]+=f[rw^1][b^c]*fxp(v,v-2)%mod;
            f[rw][b]%=mod;
         }
      }
   }
   return f[rw][(1<<k)-1];
}
int main(){
   fa[0]=fi[0]=1;
   for(int i=1;i<mx;i++){
      fa[i]=fa[i-1]*uli(i)%mod;
      fi[i]=fxp(fa[i],mod-2);
   }
   int n,k;
   cin>>n>>k;
   uli ans=0;
   //n-k
   for(int l=0;l<=k-1;l++){
      memset(f,0ll,sizeof f);
      uli inc=cmb(k-1,l)*fa[l]%mod*solve(l+1,k-(l+1))%mod;
      ans=(ans+inc)%mod;
   }
   if(n-k!=0)ans=ans*fxp(n-k,n-k)%mod;
   cout<<ans<<endl;
   return 0;
}

