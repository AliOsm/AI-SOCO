#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define Endl endl
#define mod  1000000007
#define mkp make_pair
#define pb push_back
#define sfl(n) scanf("%lld",&n)
#define pfl(n) printf("%lld\n",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
#define bitget(n) __builtin_popcountll(n)
#define MAX 1000000000000000000 //10^18
#define MIN -1000000000000000000
#define ipair pair<long long ,long long >

ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
ll intpoint(ll x1, ll y1, ll x2, ll y2) { return ( __gcd(abs(x1-x2),abs(y1-y2))+1); }
bool isvalid(ll x,ll y,ll n,ll m) { return (x>=0&&x<n&&y>=0&&y<m); }
// ---------------------///////////////---------------------------------
// ---------------------///////////////----------------------------------
// -------------/////////////////---------------------------------///////
struct gg{
  ll first;
  ll indx;
};
bool fun(gg x,gg y){
  return x.first<y.first;
}
int main()
{
    unsigned seed = std::chrono::system_clock::now().time_since_epoch().count();

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ll t,i,j,l,r,q,k,kk,x,c,m,n,p;
    sfl(n);
    ll a[n+11];
    ll b[n+11];
    ll sum3 = 0,sum4 = 0;
    for(i=0;i<n;i++){
      sfl(a[i]);
      sum3 += a[i];
    }
    for(i=0;i<n;i++){
      sfl(b[i]);
      sum4 += b[i];
    }
    ll list[n+11];
    for(i=0;i<n;i++){
      list[i] = i;
    }
    p = 4;
    k = (n/2) + 1;
    while(p){
      shuffle(list,list+n,std::default_random_engine(seed));
      for(i=0;i<n;i++){
        // printf("%lld ", list[i]);
      }
      ll sum1 = 0,sum2 = 0;
      // printf("\n");
      for(i=0;i<k;i++){
        sum1 += a[list[i]];
        sum2 += b[list[i]];
      }
      if(2*sum1>=sum3&&2*sum2>=sum4){
        p = 0;
      }
    }
    printf("%lld\n", k);
    for(i=0;i<k;i++){
      printf("%lld ", list[i]+1);
    }
return 0;
}