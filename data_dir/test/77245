#pragma GCC optimize("O3")
//#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld  double
#define pii pair<int,int>
#define pip pair<int,pii>
#define ppi pair<pii,int> 
#define ppp pair<pii,pii>
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define ff first
#define ss second
#define inf (ll)(1e9+11)
#define warmup ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
const int N = 200003, mod = 998244353;
ll fact[N], ifact[N];

ll power(ll b,int p)
{
    ll r=1;
    while(p)
    {
        if(p&1)
            r*=b, r%=mod;
        b*=b, b%=mod;
        p>>=1;
    }   
    return r;
}   

void pre()
{
    int i;
    fact[0]=1;
    for(i=1;i<N;++i)
        fact[i] = fact[i-1]*i % mod;
    ifact[i-1]=power(fact[i-1],mod-2);
    for(i=i-2;i>=0;--i)
        ifact[i] = ifact[i+1]*(i+1) % mod;
}   

inline ll ncr(ll n,ll r)
{
    return (fact[n]*ifact[r] % mod)*ifact[n-r] % mod; 
}   

signed main()
{
    warmup
    
    ll n,k;
    cin>>n>>k;
    int i,j;
    if(k>n-1)
        return cout<<0, 0;
    
    pre();
    
    ll c=n-k;
    ll ans=power(c,n);
    for(i=1;i<c;++i)
    {
        if(i&1)
            ans-=ncr(c,i)*power(c-i,n) % mod;
        else
            ans+=ncr(c,i)*power(c-i,n) % mod;
        if(ans<0)
            ans+=mod;
        else if(ans>=mod)
            ans-=mod;
    }
    
    ans*=ncr(n,c);
    ans%=mod;
    if(k)
        ans*=2, ans%=mod;
    cout<<ans;
    
    
    return 0;
}
