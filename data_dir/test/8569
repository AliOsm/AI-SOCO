#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define N 3003
#define ll long long 
#define ld long double
#define pb push_back
#define ff first
#define ss second

int d[N][N];
vector <int> g[N];
int s[2], t[2], l[2];

int main(){
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int n, m; cin>>n>>m;
	int i, j, x, y;
	for(i=1; i<=m; i++){
		cin>>x>>y;
		g[x].pb(y);
		g[y].pb(x);
	}
	memset(d, -1, sizeof d);
	int so, to;
	for(i=1; i<=n; i++){
		d[i][i] = 0;
		queue <int> q;
		q.push(i);
		while(!q.empty()){
			so = q.front();
			q.pop();
			for(j=0; j<int(g[so].size()); j++){
				to = g[so][j];
				if(d[i][to] == -1){
					d[i][to] = d[i][so] + 1;
					q.push(to);
				}
			}
		}
	}
	cin>>s[0]>>t[0]>>l[0];
	cin>>s[1]>>t[1]>>l[1];
	int ans = m+1;
	for(int x=0; x<2; x++){
		swap(s[0], t[0]);
		for(i=1; i<=n; i++){
			for(j=1; j<=n; j++){
				int v[] = {d[s[0]][i] + d[i][j] + d[j][t[0]],
					d[s[1]][i] + d[i][j] + d[j][t[1]]};
				if(v[0] <= l[0] && v[1] <= l[1]){
					ans = min(ans, v[0] + v[1] - d[i][j]);
				}
			}
		}
	}
	if(d[s[0]][t[0]] <= l[0] && d[s[1]][t[1]] <= l[1]){
		ans = min(ans, d[s[0]][t[0]] + d[s[1]][t[1]]);
	}
	if(ans > m){
		ans = -1;
	}
	else{
		ans = m - ans;
	}
	cout<<ans;
	return 0;
}