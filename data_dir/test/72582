#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
using namespace std;
ll mod=10e9+7;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
int main()
{
    ll t;
    cin>>t;
    while(t--)
    {
        ll n,k;
        cin>>n>>k;
        string s;
        cin>>s;
        ll i;
        vector<ll> zreg;
        for(i=0;i<n;i++)
        {
            if(s[i]=='0')
                zreg.pb(i);
        }
        ll zc=zreg.size();
        ll oc=n-zc;
        vector<ll> ans(n,-1);
        ll last=0;
        ll sw=0;
        for(i=0;i<zreg.size();i++)
        {
            ll idx=zreg[i];
            if(idx==last)
            {
                ans[idx]=0;
                last=last+1;
                continue;
            }
            else if(idx-last<=k)
            {
                //cout<<idx<<"## ";
                ans[last]=0;
                k=k-(idx-last);
                last=last+1;
                sw+=1;
            }
            else if(k>0)
            {
                ans[idx-k]=0;
                k=0;
                sw+=1;
            }
            else 
                ans[idx]=0;
        }
        for(i=0;i<n;i++)
            if(ans[i]==-1)
                ans[i]=1;
        for(i=0;i<n;i++)
            cout<<ans[i];
        cout<<"\n";
            
            


    }
}
