#include<bits/stdc++.h>

using namespace std;

//#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;

long long mod = 1000000007LL;
long long large = 2000000000000000000LL;

long long power(long long a,long long x){
	long long ans = 1;
	while(x){
		if(x&1) ans = ans*a%mod;
		a = a*a%mod;
		x>>=1;
	}
	return ans;
}
vector<vector<long long> > dp;
vector<vector<int> > adj;

void dfs(int u,int pa){
	int cnt = 0;
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j];
		if(v==pa) continue;
		dfs(v,u);
		cnt++;

	}
	if(cnt==0){
		dp[u][0] = 1;
		dp[u][1] = 0;
		dp[u][2] = 1;
		dp[u][3] = 1;
		return;
	}
	long long s = 1;
	for(int j=0;j<(int)adj[u].size();j++){
		int v  = adj[u][j];
		if(v==pa) continue;
		s = s*(dp[v][0]+dp[v][1]+dp[v][2]+dp[v][3])%mod;
	}
	dp[u][0] = s;
	dp[u][2] = s;

	s = 1;
	long long ss = 1;
	for(int j=0;j<(int)adj[u].size();j++){
		int v  = adj[u][j];
		if(v==pa) continue;
		s = s*(dp[v][0]+dp[v][1]+dp[v][2])%mod;
		ss = ss*(dp[v][0]+dp[v][1])%mod;
	}

	dp[u][1] = (s+mod-ss)%mod;

	dp[u][3] = s;




}

int main(){

	ios::sync_with_stdio(false);

	mod = 998244353LL;

	int n;
	cin>>n;
	adj.assign(n,vector<int>());
	for(int i=0;i<n-1;i++){
		int x,y;
		cin>>x>>y;
		x--;y--;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	dp.assign(n,vector<long long>(4,0));
//	cout<<"!"<<endl;

	dfs(0,-1);
	cout<<(dp[0][0]+dp[0][1]+mod-1)%mod<<endl;


    return 0;

}
