//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }

vector<int> vals;

void precalc(const vector<int>& a, const int m, const int s = 0, const int ind = 0)
{
    if (ind == a.size())
    {
        vals.push_back(s);
    }
    else
    {
        precalc(a, m, (s + a[ind]) % m, ind + 1);
        precalc(a, m, s, ind + 1);
    }
}

int best = 0;

void calc(const vector<int>& a, const int m, const int s = 0, const int ind = 0)
{
    if (ind == a.size())
    {
        int need = m - 1 - s;
        while (need < 0) need += m;

        auto it = upper_bound(begin(vals), end(vals), need);
        if (it == begin(vals))
        {
            best = max(best, (vals.back() + s) % m);
        }
        else
        {
            --it;
            best = max(best, *it + s);
        }
    }
    else
    {
        calc(a, m, (s + a[ind]) % m, ind + 1);
        calc(a, m, s, ind + 1);
    }
}

int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("output.txt", "w", stdout);
//    cout << fixed << setprecision(10);
    ios_base::sync_with_stdio(false);

    int n,m;
    cin >> n >> m;

    vector<int> a(n);
    for(int& x : a)
        cin >> x;

    int thold = min(20, n);
    precalc(vector<int>(a.begin(), a.begin() + thold), m);
    sort(begin(vals), end(vals));
    cout << endl;
    calc(vector<int>(a.begin() + thold, a.end()), m);
    cout << best << endl;
}

