#include<bits/stdc++.h>

#define x first
#define y second
#define pb push_back
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define all(v) v.begin(),v.end()
#define boost ios_base::sync_with_stdio(0),cin.tie(0),cout.tie()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;

const ll INF = 1e18;
const int inf = INT_MAX;
const ll mod = 1e9 + 7;
const int pi = acos(-1);
const int dx[8] = {0, 0, 1, -1, 1, 1, -1, -1};
const int dy[8] = {1, -1, 0, 0, 1, -1, 1, -1};
const int N = 1e6 + 5;

ll t[4 * N], a[N], b[N], c[N];
map < int, int > cnt;

void upd(int v, int tl, int tr, int pos, int val){
	if(tl == tr){
		t[v] += val;
		return;
	}
	int tm = (tl + tr) / 2;
	if(pos <= tm)upd(v * 2, tl, tm, pos, val);
	else upd(v * 2 + 1, tm + 1, tr, pos, val);
	t[v] = t[v * 2] + t[v * 2 + 1];
}

ll getlr(int v, int tl, int tr, int l, int r){
	if(l > r)return 0;
	if(l == tl && tr == r)return t[v];
	int tm = (tl + tr) / 2;
	return getlr(v * 2, tl, tm, l, min(r, tm)) + getlr(v * 2 + 1, tm + 1, tr, max(l, tm + 1), r);
}

int main(){
	boost;
	int n;
	cin >> n;
	for(int i = 1; i <= n; i++){
		cin >> a[i];
	}
	for(int i = 1; i <= n; i++){
		cnt[a[i]]++;
		b[i] = cnt[a[i]];
	}
	cnt.clear();
	for(int i = n; i >= 1; i--){
		cnt[a[i]]++;
		c[i] = cnt[a[i]];
	}
	ll ans = 0;
	for(int i = 1; i <= n; i++){
		ans += getlr(1, 1, n, c[i] + 1, n);
		//cout << getlr(1, 1, n, c[i] + 1, n) << " ";
		upd(1, 1, n, b[i], 1);
	}
	cout << ans;
}
