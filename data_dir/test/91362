#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <memory.h>
#include <set>
#include <ctime>
#include <map>
#include <cstring>
#include <iterator>
#include <queue>
#include <assert.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>

using namespace std;



#define pb push_back
#define pii pair<int, int>
#define mp make_pair
#define ull unsigned long long
#pragma comment(linker, "/STACK:64000000")
#define null NULL
#define forn(i, n) for (int i = 0; i < (n); ++i)
#define fornr(i, n) for (int i = (n); i >= 0; --i)
#define forab(i, a, b) for (int i = (a); i < (b); ++i)

typedef long double ld;
typedef pair<ld, ld> pldld;
typedef long long ll;
typedef pair<ll, ll> pll;


typedef unsigned int ui;
typedef unsigned char uc;
const int infi = 1e9 + 7;
const ll infl = 1e18 + 7;

pii ch[100500];
set<pii> ar;
int p[100500];

int main() {
	cin.sync_with_stdio(false);
	cin.tie(0);
//	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
	//freopen("ufo.in", "r", stdin);freopen("ufo.out", "w", stdout);
	int n;
	cin >> n;
	forn(i, n)
		ch[i] = mp(-1, -1);
	int a;
	cin >> a;
	ar.insert(mp(a, 0));
	for (int i = 1; i < n; ++i) {
		int a;
		cin >> a;
		auto it = ar.upper_bound(mp(a, i));
		int added = 0;
		if (it != ar.end()) {
			int j = it->second;
			if (ch[j].first == -1) {
				p[i] = it->first;
				ch[j].first = i;
				added = 1;
			}
		}
		if (!added && it != ar.begin()) {
			--it;
			int j = it->second;
			if (ch[j].second == -1) {
				p[i] = it->first;
				ch[j].second = i;
				added = 1;
			}
		}
		assert(added);
		ar.insert(mp(a, i));
	}
	for (int i = 1; i < n; ++i)
		cout << p[i] << ' ';

	return 0;
}