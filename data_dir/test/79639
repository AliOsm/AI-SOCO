#include <bits/stdc++.h>
#define F first
#define S second
using namespace std;
typedef long long ll;
const int N = 1005;
ll n, m, ans, arr[N][N], dp1[N][N], dp2[N][N], dp3[N][N], dp4[N][N];
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    for(int i = 0;i < n;++i)
        for(int j = 0;j < m;++j)
            cin >> arr[i][j];
    for(int i = 0;i < n;++i)
        for(int j = 0;j < m;++j)
            dp1[i][j] = max(i ? dp1[i - 1][j] : 0, j ? dp1[i][j - 1] : 0) + arr[i][j];
    for(int i = 0;i < n;++i)
        for(int j = m - 1;j >= 0;--j)
            dp2[i][j] = max(i ? dp2[i - 1][j] : 0, dp2[i][j + 1]) + arr[i][j];
    for(int i = n - 1;i >= 0;--i)
        for(int j = 0;j < m;++j)
            dp3[i][j] = max(dp3[i + 1][j], j ? dp3[i][j - 1] : 0) + arr[i][j];
    for(int i = n - 1;i >= 0;--i)
        for(int j = m - 1;j >= 0;--j)
            dp4[i][j] = max(dp4[i + 1][j], dp4[i][j + 1]) + arr[i][j];
    for(int i = 1;i < n - 1;++i)
        for(int j = 1;j < m - 1;++j)
            ans = max({ans, dp1[i][j - 1] + dp2[i - 1][j] + dp3[i + 1][j] + dp4[i][j + 1], dp1[i - 1][j] + dp2[i][j + 1] + dp3[i][j - 1] + dp4[i + 1][j]});
    cout << ans;
    return 0;
}
