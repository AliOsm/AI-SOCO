#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<unordered_map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
#include<bitset>
#include<fstream>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
#include<fstream>
const ll INF=9223372036854775807;
const ll mod=1000000007;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b, ll  c)
{
    return max(c,max(a,b));
}
ll min3(ll  a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y,ll mod1)
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod1;
        y = y>>1;
        x = (x*x)%mod1;
    }
    return res;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x,ll p)
{
    return power(x,p-2,p);
}
int main()
{
    int n,m;
    scanf("%d %d",&n,&m );
    vector<char> str(n);
    char u;scanf("%c",&u);
    for(int i=0;i<n;i++)
    {
        scanf("%c",&str[i]);
    }
    vvi g(n);
    vector<vll> g1(n),g2(n);
    vector<vector<int>> l(n);
    for(int i=0;i<n;i++)
    {
        l[i].resize(26);
    }
    for(int i=0;i<n;i++)
    {
        g[i].resize(26);
        g[i][str[i]-'a']=1;
        g1[i].resize(26);
        g2[i].resize(26);
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<26;j++)
        {
            if(str[i]==j+'a')
            {
                l[i][j]=i;
            }
            else
            {
                if(i>0)
                {
                    l[i][j]=l[i-1][j];
                }
                else
                {
                    l[i][j]=-1;
                }
            }
        }
    }
    ll b1=26;
    ll mod1=1000000007;
    ll b2=25;
    ll mod2=998244353;
    vll inv_mod1(n,1);
    vll inv_mod2(n,1);
    for(int i=1;i<n;i++)
    {
        inv_mod1[i]=((modinv(power(b1,i,mod1),mod1))%mod1);
        inv_mod2[i]=((modinv(power(b2,i,mod2),mod2))%mod2);
    }
    vll powers1(n);
    vll powers2(n);
    powers1[0]=powers2[0]=1;
    for(int i=1;i<n;i++)
    {
        powers1[i]=((b1*powers1[i-1])%mod1);
        powers2[i]=((b2*powers2[i-1])%mod2);
    }
    for(ll i=0;i<n;i++)
    {
        for(ll j=0;j<26;j++)
        {
            if(i==0)
            {
                g1[i][j]=g[i][j]*powers1[i];
                g2[i][j]=g[i][j]*powers2[i];
            }
            else
            {
                g1[i][j]=((g[i][j]*powers1[i]+g1[i-1][j])%mod1);
                g2[i][j]=((g[i][j]*powers2[i]+g2[i-1][j])%mod2);
                g[i][j]+=g[i-1][j];
            }
            
        }
    }
    while(m--)
    {
        int l1,l2,len;
        scanf("%d %d %d",&l1,&l2,&len);
        l1--;
        l2--;
        ll inv_11=1;
        ll inv_21=1;
        ll inv_12=1;
        ll inv_22=1;
        inv_11=inv_mod1[l1];
        inv_12=inv_mod2[l1];
        inv_21=inv_mod1[l2];
        inv_22=inv_mod2[l2];
        pair<ll,ll> h1=mp(1,1);
        pair<ll,ll> h2=mp(1,1);
        vector<ll>v1,v2;
        bool c=true;
        for(int j=0;j<26;j++)
        {
            if(l[l1+len-1][j]>=l1)
            {
                int k=str[l2+l[l1+len-1][j]-l1]-'a';
                
                if(l1>0){
                    h1.f=(((((g1[l1+len-1][j]-g1[l1-1][j]+mod1))%mod1)*inv_11)%mod1);
                    h1.s=(((((g2[l1+len-1][j]-g2[l1-1][j]+mod2))%mod2)*inv_12)%mod2);
                }
                else
                {
                    h1.f=(((((g1[l1+len-1][j]))%mod1)*inv_11)%mod1);
                    h1.s=(((((g2[l1+len-1][j]))%mod2)*inv_12)%mod2);
                }
                if(l2>0){
                    h2.f=(((((g1[l2+len-1][k]-g1[l2-1][k]+mod1))%mod1)*inv_21)%mod1);
                    h2.s=(((((g2[l2+len-1][k]-g2[l2-1][k]+mod2))%mod2)*inv_22)%mod2);
                }
                else
                {
                    h2.f=(((((g1[l2+len-1][k]))%mod1)*inv_21)%mod1);
                    h2.s=(((((g2[l2+len-1][k]))%mod2)*inv_22)%mod2);
                }
            }
            if(h1!=h2)
            {
                c=false;
            }
            
        }
        if(c)
        {
            printf("YES\n");
        }
        else
        {
            printf("NO\n");
        }
    }
}

