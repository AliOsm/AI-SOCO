#include <bits/stdc++.h>
using namespace std;
const int maxn =  10;
int what[maxn][maxn],n,m;
vector<pair<int,int> > moves[4];
inline bool ok(int i , int j , int pt )
{
    for (int x = 0 ; x < moves[pt].size() ; x ++)
    {
        int i2 = i + moves[pt][x].first , j2 = j + moves[pt][x].second;
        if (i2 >= 0 && i2 < n && j2 >= 0 && j2 < m && what[i2][j2] == -1 )
            continue;
        return false;
    }
    return true;
}
inline void  put(int i , int j , int pt , int value)
{
    for (int x = 0 ; x < moves[pt].size() ; x ++)
    {
        int i2 = i + moves[pt][x].first , j2 = j + moves[pt][x].second;
        what[i2][j2] = value;
    }
}
int res = -1;
int finalwhat[maxn][maxn];
inline void brute_force(int i , int j , int cnt)
{
    if (cnt > res)
        memcpy(finalwhat,what,sizeof what) , res = cnt;
    for (int a = 0  ; a < n ; a ++)
        for (int b = 0 ; b < m ; b ++)
        {
            if (make_pair(a,b) >= make_pair(i,j))
                for(int pt = 0 ; pt < 4 ; pt ++)
                {
                    if (ok(a,b,pt))
                    {
                        put(a,b,pt,cnt);
                        brute_force(a,b,cnt+1);
                        put(a,b,pt,-1);
                        
                    }
                }
        }
}
int32_t main()
{
    moves[0] = {{0,0},{0,1},{0,2},{1,1},{2,1}};
    moves[1] = {{0,2},{1,0},{1,1},{1,2},{2,2}};
    moves[2] = {{0,1},{1,1},{2,0},{2,1},{2,2}};
    moves[3] = {{0,0},{1,0},{1,1},{1,2},{2,0}};
    cin >> n >> m;
    if (n == 7 && m == 8) return cout << "9\nA.BBB..C\nAAABDCCC\nA.EBDDDC\nEEEFDGGG\n.HEF.IG.\n.HFFFIG.\nHHH.III.\n" , 0;
    if (n == 8 && m == 7) return cout << "9\nAAAB..C\n.A.BCCC\nDABBBEC\nDDDEEE.\nDFFF.EG\n.HFIGGG\n.HFIIIG\nHHHI...\n" , 0;
    if (n == 7 && m == 9) return cout << "10\nA.BBBCDDD\nAAAB.C.D.\nA.EBCCCDF\nEEEG..FFF\n.HEGIIIJF\n.HGGGI.J.\nHHH..IJJJ\n" , 0;
    if (n == 9 && m == 7) return cout << "10\nA.BBB.C\nAAABCCC\nA.DB.EC\nDDDEEE.\nF.DG.EH\nFFFGHHH\nFIGGGJH\n.I.JJJ.\nIII..J.\n" , 0;
    if (n == 8 && m == n) return cout << "10\nA.BBB.C.\nAAABCCC.\nAD.BEFC.\n.DEEEFFF\nDDDGEF.H\nIGGGJHHH\nIIIGJ..H\nI..JJJ..\n" , 0;
    if (n == 8 && m == 9) return cout << "12\nA.BBBC...\nAAABDCCCE\nA.FBDCEEE\nFFFDDDG.E\nH.FIIIGGG\nHHHJIKG.L\nHJJJIKLLL\n...JKKK.L\n" , 0;
    if (n == 9 && m == 8) return cout << "12\nA.BBBCCC\nAAAB.DC.\nAE.B.DC.\n.EEEDDDF\nGEHHHFFF\nGGGHIIIF\nGJ.HKIL.\n.JKKKIL.\nJJJ.KLLL\n" , 0;
    if (n == 9 && m == 9) return cout << "13\nA.BBB.C..\nAAABCCCD.\nA.EB.FCD.\nEEEFFFDDD\nG.E.HFIII\nGGGJHHHI.\nGK.JHL.IM\n.KJJJLMMM\nKKK.LLL.M\n" , 0;
    memset(what,-1,sizeof what);
    brute_force(0,0,0);
    cout << res << "\n";
    for (int i = 0 ; i < n ; i ++ , cout << "\n")
    {
        for (int j = 0 ; j < m ; j ++)
        {
            if (finalwhat[i][j] == -1) cout << '.';
            else cout << char('A' + finalwhat[i][j]);
        }
    }
}
