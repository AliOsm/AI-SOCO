#include<bits/stdc++.h>
using namespace std;


const int n = 3e3;
int p[n], x[n], sz[n], total, ans;
char flag = false;


int findSet(int v) {
	return v == p[v] ? v : p[v] = findSet(p[v]);
}


void join(int v, int u) {
	v = findSet(v);
	u = findSet(u);
	sz[v] += sz[u];
	x[v] += x[u];
	p[u] = v;

	if (sz[v] > total - x[v]) {
		flag = true;
	}
}


struct edge {
	int v, u, len;
	edge() {}
};


bool operator < (edge a, edge b) {
	return a.len < b.len;
}


main() {
#ifndef ONLINE_JUDGE
	freopen("1.txt", "r", stdin);
#endif // ONLINE_JUDGE

	int n;
	scanf("%d", &n);
	vector<edge> e(n - 1);

	for (edge &i : e) {
		scanf("%d%d%d", &i.v, &i.u, &i.len);
		i.v--;
		i.u--;
	}

	sort(e.begin(), e.end());

	for (int i = 0; i < n; i++) {
		scanf("%d", &x[i]);
		sz[i] = 1;
		p[i] = i;
		total += x[i];
	}

	for (int i = 0; i < n; i++)
		if (1 > total - x[i]) {
			flag = true;
		}

	if (!flag && n > 1) {
		ans = e[0].len;
	}

	for (auto i = e.begin(); i != e.end(); ) {
		join(i->v, i->u);

		if (++i != e.end() && !flag) {
			ans = i->len;
		}
	}

	printf("%d", ans);

}
