#include<bits/stdc++.h>
using namespace std;
#define y1 y11
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define pdd pair<double, double>
#define mem(a, b) memset(a, b, sizeof(a))
#define debug(x) cerr << #x << " = " << x << "\n";
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
//head

const int N = 2e5 + 5;
vector<int> g[N];
vector<pii> res;
int fa[N];
bool vis[N], vs[N];
void init(int n) {
    for (int i = 2; i <= n; ++i) {
        fa[i] = i;
    }
}
int Find(int x) {
    if(x == fa[x]) return x;
    else return fa[x] = Find(fa[x]);
}
void dfs(int u) {
    for (int v : g[u]) {
        if(vis[v]) continue;
        vis[v] = true;
        res.pb({u, v});
        dfs(v);
    }
}
int main() {
    int n, m, d, u, v;
    scanf("%d %d %d", &n, &m, &d);
    for (int i = 1; i <= m; ++i) scanf("%d %d", &u, &v), g[u].pb(v), g[v].pb(u);
    if(g[1].size() < d) return 0*puts("NO");
    init(n);
    for (int i = 2; i <= n; ++i) {
        int x, y;
        for (int v : g[i]) {
            if(v == 1) continue;
            x = Find(i);
            y = Find(v);
            if(x == y) continue;
            fa[x] = y;
        }
    }
    int cnt = 0, tot = 0;
    for (int i = 2; i <= n; ++i) if(fa[i] == i) cnt++;
    if(cnt > d) return 0*puts("NO");
    vis[1] = true;
    for (int v : g[1]) {
        int x = Find(v);
        if(vs[x]) continue;
        vs[x] = true;
        vis[v] = true;
        res.pb({1, v});
        tot++;
    }
    for (int v : g[1]) {
        if(tot == d) break;
        if(vis[v]) continue;
        vis[v] = true;
        res.pb({1, v});
        tot++;
    }
    for (int i = 2; i <= n; ++i) if(vis[i]) dfs(i);
    puts("YES");
    for (pii t : res) printf("%d %d\n", t.fi, t.se);
    return 0;
}
