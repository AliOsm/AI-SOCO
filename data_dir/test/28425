#include <bits/stdc++.h>
using namespace std;

// why am I so weak

int n, m, w;
int par[1055];
int weight[1055];
long long b[1055];
long long dp[2][1055];

int tot_w[1055];
long long tot_b[1055];

vector<int> group[1055];

int fin(int x) {
	if (par[x] == x) return x;
	return par[x] = fin(par[x]);
}
int main() {
	scanf("%d %d %d", &n, &m, &w);

	for (int i = 0; i < n; i++) {
		par[i] = i;

		scanf("%d", &weight[i]);

		tot_w[i] = weight[i];
	}

	for (int i = 0; i < n; i++) {
		scanf("%lld", &b[i]);

		tot_b[i] = b[i];
	}

	while (m--) {
		int x, y;

		scanf("%d %d", &x, &y);
		x--, y--;

		x = fin(x), y = fin(y);

		if (x == y) continue;


		tot_w[y] += tot_w[x];
		tot_b[y] += tot_b[x];
		par[x] = y;
	}

	set<int> s;

	for (int i = 0; i < n; i++) {
		s.insert(fin(i));
		group[fin(i)].push_back(i);
	}

	for (auto u : s) {
		swap(dp[0], dp[1]);

		memset(dp[1], 0, sizeof(dp[1]));

		for (int i = tot_w[u]; i <= w; i++) {
			dp[1][i] = max(dp[1][i], dp[0][i - tot_w[u]] + tot_b[u]);
		}

		for (auto v : group[u]) {
			for (int i = weight[v]; i <= w; i++) {
				dp[1][i] = max(dp[1][i], dp[0][i - weight[v]] + b[v]);
			}
		}

		for (int i = 0; i <= w; i++) dp[1][i] = max(dp[0][i], dp[1][i]);
	}

	long long res = 0ll;

	for (int i = 0; i <= w; i++) res = max(res, dp[1][i]);

	printf("%lld\n", res);

	return 0;
}

