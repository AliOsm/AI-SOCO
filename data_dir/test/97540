#include <string.h>
#include <unordered_map>

#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include   <stdlib.h>    
#include   <time.h> 
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair

using namespace std;
const int N = 200000;
int mod = 998244353;
int INF = 1<<30;

int a[1000010];
map<int,int> pos;

vector<pair<int,int> > ans;
int n;

struct Info{
	int a,b,idx;
	Info(){}
	Info(int a, int b, int idx):a(a),b(b),idx(idx){}
};

int main() {
	sf("%d",&n);
	vector<Info> ft1,ft2;
	fr(i,0,n) {
		int a,b;
		cin>>a>>b;
		if(a>b) {
			ft1.pb(Info(a,b,i+1));
		}
		else if(a<b) {
			ft2.pb(Info(a,b,i+1));
		}
	}
	auto cmp1 = [&](const Info &a, const Info &b) {
		return a.b < b.b;
	};
	auto cmp2 = [&](const Info &a, const Info &b) {
		return a.b > b.b;
	};
	sort(ft1.begin(), ft1.end(), cmp1);
	sort(ft2.begin(), ft2.end(), cmp2);

	vector<Info> a1,a2;
	int res1 = 0;
	Info ret = Info(0,0,0);
	for(auto x : ft1) {
		if(x.a > ret.b) {
			res1++;
			ret = x;
			a1.pb(x);
		}
	}
	ret = Info(3*n,3*n,0);
	int res2 = 0;
	for(auto x : ft2) {
		if(x.a < ret.b) {
			res2++;
			ret = x;
			a2.pb(x);
		}
	}
	if(res1>res2) {
		cout<<res1<<endl;
		for(auto x : a1) {
			printf("%d ",x.idx);
		}
		printf("\n");
	}
	else {
		cout<<res2<<endl;
		for(auto x : a2) {
			printf("%d ",x.idx);
		}
		printf("\n");
	}
}


