//#include<bits/stdc++.h>
#include<iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <map>
#include<unordered_map>
#include <stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>
 
using namespace std;

const int N = 8000;
long long a[N];
long long b[N];
bool d[N];
long long ans = 0;
int n;

bool check(long long t)
{
	bool mark = false;
	for (int i = 0; i < n; i++)
	{
		if (!d[i])
		{
			continue;
		}
		mark = true;
		long long y = a[i];
		long long tmp = t;
		for (int i = 0; i < 60; i++)
		{
			if (y % 2 == 0 && t % 2 == 1)
			{
				mark = false;
				break;
			}
			y = y >> 1;
			t = t >> 1;
		}
		if (mark)
		{
			return true;
		}
		t = tmp;
	}
	return false;
}

int main()
{
	std::ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
	}
	for (int i = 0; i < n; i++)
	{
		cin >> b[i];
	}
	long long maxi = 0;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (a[i] == a[j] && j != i)
			{

				d[i] = true;
				maxi = max(a[i], maxi);
				ans += b[i];
				break;
			}
		}
	}
	for (int i = 0; i < n; i++)
	{
		if (d[i] > maxi)
		{
			continue;
		}
		if (d[i])
		{
			continue;
		}
		else
		{
			if (check(a[i]))
			{
				ans += b[i];
				d[i] = true;
			}
		}
	}
	cout << ans;

}
