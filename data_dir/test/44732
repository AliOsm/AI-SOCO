#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define pii pair<int, int>
#define pb push_back
#define mp make_pair
#define mt make_tuple
#define DEBUG 1
#define cerr if (DEBUG) cerr
#define fprintf if (DEBUG) fprintf
#define local freopen("in.txt", r, stdin);
#define test cerr << "hi\n";
#define tr(x) cerr << #x << ' ' << x << '\n';
#define fi first
#define se second
#define HH1 402653289
#define HH2 1610612741
#define INF 0x3f3f3f3f
#define tii tuple<int, int, int>
#define npos string::npos
#define ll long long

using namespace std;

#define MOD 1000000007LL
#define MAXN 100005

vector<int> lay[5050];
deque<int> chain;
int n, d, par[5050];

void solve() {
	cin >> n >> d;
	
	for (int i = 0; i < d+5; i++) 
		lay[i].clear();
	chain.clear();
	
	int mx = 0;
	long long tot = 0;
	
	for (int i = 1; i <= n; i++) {
		par[i] = i/2;
		int dep = 31 - __builtin_clz(i);
		lay[dep].pb(i);
		tot += dep;
		mx = max(mx, dep);
	}
	
	if (d < tot) {
		cout << "NO\n";
		return;
	}
	
	if (tot == d) {
		cout << "YES\n";
		for (int i = 2; i <= n; i++)
			cout << par[i] << " \n"[i==n];
		return;
	}
	
	for (int dep = mx; dep >= 1; dep--) {
		chain.push_front(lay[dep][0]);
		while (lay[dep].size() > 1) {
			int cur = lay[dep].back();
			for (int x : chain) {
				par[cur] = x;
				tot++;
				
				if (tot == d) {
					cout << "YES\n";
					for (int i = 2; i <= n; i++)
						cout << par[i] << " \n"[i==n];
					return;
				}
			}
			
			chain.pb(cur);
			lay[dep].pop_back();
		}
	}
	
	cout << "NO\n";
}

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);

	int t; cin >> t;
	while (t--) {
		solve();
	}
}
