#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second

using namespace std;

typedef pair<int, int> ii;
typedef long long ll;

const int N = 200010;

int n, m;
vector<int> g[N];
ii edges[N], edget[N];
bool cs[N], ct[N];
int comp[N];
int compcnt;
bool vis[N];
int s, t, ds, dt;

int dfs(int u)
{
	int ret = 1;
	vis[u] = true;
	for (int i = 0; i < g[u].size(); i++)
	{
		int v = g[u][i];
		if (!vis[v])
			ret += dfs(v);
	}
	return ret;
}

vector<ii> ans;

void dfs2(int u, int c)
{
	vis[u] = true;
	comp[u] = c;
	for (int i = 0; i < g[u].size(); i++)
	{
		int v = g[u][i];
		if (v == s and !cs[c])
		{
			cs[c] = true;
			edges[c] = mp(u, v);
		}
		else if (v == t and !ct[c])
		{
			ct[c] = true;
			edget[c] = mp(u, v);
		}
		else if (v != s and v != t and !vis[v])
		{
			ans.pb(mp(u, v));
			dfs2(v, c);
		}
	}
}


int main()
{
	scanf("%d %d", &n, &m);
	for (int i = 0; i < m; i++)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		g[u].pb(v);
		g[v].pb(u);
	}
	scanf("%d %d %d %d", &s, &t, &ds, &dt);

	if (dfs(1) != n)
	{
		printf("No\n");
		return 0;
	}
	bool stedge = false;
	for (int i = 0; i < g[s].size(); i++)
	{
		if (g[s][i] == t) stedge = true;
	}

	memset(vis, 0, sizeof(vis));
	for (int i = 1; i <= n; i++)
	{
		if (i == s or i == t) continue;
		if (!vis[i])
			dfs2(i, compcnt++);
	}
	vector<int> both;
	for (int i = 0; i < compcnt; i++)
	{
		if (cs[i] and ct[i])
			both.pb(i);
		else if (cs[i])
		{
			ans.pb(edges[i]);
			ds--;
		}
		else if (ct[i])
		{
			ans.pb(edget[i]);
			dt--;
		}
	}
	if (ds < 0 or dt < 0)
	{
		printf("No\n");
		return 0;
	}
	for (int i = 0; i < both.size(); i++)
	{
		if (i == 0)
		{
			ds--;
			dt--;
			ans.pb(edges[both[i]]);
			ans.pb(edget[both[i]]);
			stedge = false;
			continue;
		}
		if (ds > dt)
		{
			ds--;
			ans.pb(edges[both[i]]);
		}
		else
		{
			dt--;
			ans.pb(edget[both[i]]);
		}
	}
	if (stedge)
	{
		ans.pb(mp(s, t));
		ds--;
		dt--;
	}

	if (ds < 0 or dt < 0)
	{
		printf("No\n");
	}
	else
	{
		printf("Yes\n");
		for (int i = 0; i < ans.size(); i++)
		{
			printf("%d %d\n", ans[i].fi, ans[i].se);
		}
	}
	return 0;
}

