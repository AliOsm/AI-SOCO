#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define pb push_back
#define mk make_pair
#define ld long double
#define y1 asdfghjkl
#define ufo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
using namespace std;

mt19937_64 mt_rnd_64(chrono::steady_clock::now().time_since_epoch().count());
long long rnd(long long l, long long r){
    return (mt_rnd_64() % (r-l+1)) + l;
}

const int N = 1e5 + 5;

int n,ans = 1;
int a[N];
int dp[N][2];

main()
{
    ufo;
    cin>>n;
    for(int i = 1;i <= n;i++){
        cin>>a[i];
    }
    if(n == 1)return cout<<1, 0;
    int r = 0;
    for(int i = 1;i <= n;i++){
        r = max(r,i+1);
        while(a[r-1] < a[r] && r <= n)r++;
        dp[i][1] = r-i;
    }
    r = n;
    for(int i = n;i >= 1;i--){
        r = min(r,i-1);
        while(a[r+1] > a[r] && r >= 1)r--;
        dp[i][0] = i-r;
    }
//    dp[1][0]--;
//    dp[n][1]--;
//    for(int i = 1;i <= n;i++){
//        cout<<dp[i][0]<<' ';
//    }
//    cout<<'\n';
//    for(int i = 1;i <= n;i++){
//        cout<<dp[i][1]<<' ';
//    }
//    cout<<'\n';
    ans = max(ans,dp[1][1]+1);
    ans = max(ans,dp[n][0]+1);
    for(int i = 2;i <= n;i++){
        if(a[i-1]+1 < a[i+1])
            ans = max(ans,dp[i-1][0] + dp[i+1][1] + 1);
        ans = max(ans,dp[i][1] + 1);
        ans = max(ans,dp[i][0] + 1);
    }
    ans = min(ans,n);
    cout<<ans;
}
