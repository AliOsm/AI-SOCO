#include <algorithm>
#include <cstdio>

using namespace std;

const int N = 200000;
const int MD = 998244353;

int aa[N];

struct S {
	int l, r;
} ss[N];

int power(int a, int b) {
	if (b == 0)
		return 1;
	int p = power(a, b / 2);
	p = (long long) p * p % MD;
	if (b % 2 == 1)
		p = (long long) p * a % MD;
	return p;
}

int main() {
	int ii[N], n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &aa[i]);
		ii[i] = i;
	}
	sort(ii, ii + n, [] (int p, int q) { return aa[p] != aa[q] ? aa[p] < aa[q] : p < q; });
	int k = 0;
	for (int i = 0, j; i < n; i = j) {
		for (j = i + 1; j < n && aa[ii[i]] == aa[ii[j]]; j++)
			;
		ss[k++] = { ii[i], ii[j - 1] };
	}
	sort(ss, ss + k, [] (struct S &p, struct S &q) { return p.l < q.l; });
	int cnt = 0;
	for (int i = 0, l = -1, r = -1; i < k; i++) {
		S *s = &ss[i];
		if (r < s->l) {
			l = s->l;
			r = s->r;
			cnt++;
		} else if (r < s->r)
			r = s->r;
	}
	printf("%d\n", power(2, cnt - 1));
	return 0;
}
