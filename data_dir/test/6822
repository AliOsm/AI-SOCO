#include <iostream>
#include <stdio.h>
#include <vector>
#include <string.h>
#include <set>
#include <algorithm>
#include <map>
#ifdef lyosha
#define files freopen("input.txt", "r", stdin);
#else
#define files //freopen("howmany.in","r",stdin); freopen("howmany.out","w",sdout);
#endif
using namespace std;
typedef long long ll;
#define y1 vsdmlkcs
const int N = 2105;
const int mod = 1e9 + 7;
int dp1[N][N], dp2[N][N];
pair<int, int> res[N];
string s, t;
int len(pair<int, int> cur){
    if(cur.second == -1) return 0;
    return fabs(cur.first - cur.second) + 1;
}
int ans[N];
int main()
{
    files;
    cin >> t >> s;
    int m = t.size();
    int n = s.size();
    for(int i = n - 1; i >= 0; --i){
        for(int j = m - 1; j >= 0; --j){
            if(s[i] == t[j]){
                if(i < n - 1 && j < m - 1){
                    dp1[i][j] = dp1[i + 1][j + 1] + 1;
                }
                else{
                    dp1[i][j] = 1;
                }
            }
        }
    }
    reverse(t.begin(), t.end());
    for(int i = n - 1; i >= 0; --i){
        for(int j = m - 1; j >= 0; --j){
            if(s[i] == t[j]){
                if(i < n - 1 && j < m - 1){
                    dp2[i][j] = dp2[i + 1][j + 1] + 1;
                }
                else{
                    dp2[i][j] = 1;
                }
            }
        }
    }
    for(int i = 0; i <= n; ++i)
        res[i] = {0, -1};
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < m; ++j){
            if(dp1[i][j] > len(res[i])){
                res[i] = {j, j + dp1[i][j] - 1};
            }
            if(dp2[i][j] > len(res[i])){
                int x = j;
                int y = j + dp2[i][j] - 1;
                res[i] = {m - 1 - x, m - 1 - y};
            }
        }
    }

    int pos = 0;
    vector<pair<int, int> > out;
    while(len(res[pos]) > 0){
        out.push_back(res[pos]);
        pos += len(res[pos]);
    }
    if(pos == n){
        cout << out.size() << endl;
        for(auto it : out){
            cout << it.first + 1 << " " << it.second + 1 << endl;
        }
    }
    else{
        cout << -1 << endl;
    }
    return 0;
}
