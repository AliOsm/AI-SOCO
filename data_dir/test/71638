#include <bits/stdc++.h>
using namespace std;

#define endl    "\n"
#define pb      push_back
#define all(v)  v.begin(),v.end()
#define FAST    ios_base::sync_with_stdio(0);cin.tie(0);
#define fin(f)  freopen(f,"r",stdin)
#define fout(f) freopen(f,"w",stdout)

typedef long long     ll;
typedef long double   ld;
typedef pair<int,int> ii;

const int    inf = 2e9;
const ll     INF = 4e17;
const int    mod = 1e9+7;
const double eps = 1e-9;

const int N = 105;
ll n, arr[N], deg[N], out[N];
vector<int> g[N];
vector<ll> soln;

bool vis[N];
void solve(int u) {
	soln.push_back(arr[u]);
	vis[u] = true;
	for(int v : g[u]) {
		if(!vis[v]) 
			solve(v);
	}
}

int main() {
	scanf("%I64d", &n);
	for(int i = 0; i < n; i++) {
		scanf("%I64d", &arr[i]);
	}
	for(int i = 0; i < n; i++) {
		for(int j = 0; j < n; j++) {
			if(i == j) continue;
			if(arr[i] * 2ll == arr[j]) {
				g[i].push_back(j), deg[i]++, deg[j]++, out[i]++;
			}
			if(arr[i] % 3 == 0 && arr[i] / 3 == arr[j]) {
				g[i].push_back(j), deg[i]++, deg[j]++, out[i]++;
			}
		}
	}
	for(int i = 0; i < n; i++) 
		if(deg[i] == 1 && out[i] == 1) {
			solve(i);
		}
	for(int i = 0; i < n; i++)
		printf("%I64d ", soln[i]);
	return 0;
}
