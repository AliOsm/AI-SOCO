#include <bits/stdc++.h>
#define endl '\n'

#define int long long
#define abs myabs

using namespace std;
const int MAXN = (1 << 20);
const int MAXO = (42);
const int inf = (int)2e18 + 42;
const int BIG = (int)1e9;

int n, k, b, c, a[MAXN];

void read()
{
	cin >> n >> k >> b >> c;
	for(int i = 0; i < n; i++)
	{
		cin >> a[i];
		a[i] += BIG;
	}

	if(5 * c < b) b = 5 * c;
}

int abs(int x) {return x < 0 ? -x : x; } 
int dist(int x, int y) { return (abs(x - y) / 5) * b + (abs(x - y) % 5) * c; }

vector<pair<int, int>> chain[MAXO];

void solve()
{
	sort(a, a + n);
	for(int i = 0; i < n; i++)
	{
		int ost = a[i] % 5;
		for(int z = 0; z < 5; z++)
			chain[(ost + z) % 5].push_back({a[i] + z, z * c});
	}

	int ans = inf;
	for(int o = 0; o < 5; o++)
	{
		sort(chain[o].begin(), chain[o].end());
		priority_queue<int> q;
		int sum = 0, largest = (int)2e9 + o;

		for(int i = 0; i < chain[o].size(); i++)
		{	
			int val = dist(largest, chain[o][i].first);
			q.push((chain[o][i].second + val));
			sum += (chain[o][i].second + val);

			while(q.size() > k)
			{
				sum -= q.top();
				q.pop();
			}

			if(q.size() == k)
				ans = min(ans, sum - dist(chain[o][i].first, largest) * k);
		}
	}

	cout << ans << endl;
}

#undef int
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

