
//#include "stdc++.h"
#include<bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//typedef tuple<int, int, int> t3;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0) return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p; }
#define flush fflush(stdout)
const ll MOD = 1000000007;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
void swap(int *a,int *b)
{
    int c;
    c=*a;
    *a=*b;
    *b=c;
}
int main()
{
    IOS;//ifstream fin("input.txt");ofstream fout("output.txt");
    int n,m;
    cin>>n>>m;
    int p[2*n];set<pair<int,pair<int,int> > >mp;set<pair<int,int> >st;set<pair<int,int> >::reverse_iterator it1;
    set<pair<int,pair<int,int> > >::reverse_iterator it;
    set<pair<int,int> >::iterator it2;
    set<pair<int,pair<int,int> > >::iterator it3;
    for(int i=0;i<2*n;i++)
    {
        cin>>p[i];
    }
    
    int out[2*n];int a,b;
    memset(out,0,sizeof(out));int adj[2*n];
    for(int i=0;i<m;i++)
    {
        cin>>a>>b;
        a--;b--;
        adj[a]=b;
        adj[b]=a;
        out[a]=1;out[b]=1;
        if(p[b]>p[a])
            swap(&b,&a);
        mp.insert(m1(abs(p[b]-p[a]),m1(a,b)));
    }
    int t;
    cin>>t;
    for(int i=0;i<2*n;i++)
    {
        if(!out[i])
        {
            st.insert(m1(p[i],i));
        }
    }
    queue<int>q;int x;
    for(int i=1;i<=n;i++)
    {
        if(t==1)
        {
            
                //it=mp.rbegin()
                if(!mp.empty())
                {
                    it=mp.rbegin();
                    pair<int,int>p1=it->second;
                    cout<<p1.first+1<<endl;
                    flush;
                    it3=mp.find(m1(it->first,it->second));
                    if(it3!=mp.end())
                    mp.erase(it3);
                    cin>>x;
                    continue;
                }
                else
                {
                    it1=st.rbegin();
                    cout<<it1->second+1<<endl;
                    flush;
                    it2=st.find(m1(p[it1->second],it1->second));
                    if(it2!=st.end())
                    st.erase(it2);
                    cin>>x;
                    if(!out[x-1])
                    {
                        it2=st.find(m1(p[x-1],x-1));
                        if(it2!=st.end())
                        st.erase(it2);
                    }
                    continue;
                }
            
        }
        else
        {
            cin>>x;
            if(out[x-1]==1)
            {
                if(out[adj[x-1]]==1)
                {
                q.push(adj[x-1]);
                pair<int,int>p5;
                if(p[x-1]>=p[adj[x-1]])
                {p5.first=x-1;
                p5.second=adj[x-1];
                }
                else
                {
                  p5.first=adj[x-1];
                  p5.second=x-1;
                }
                it3=mp.find(m1(abs(p[x-1]-p[adj[x-1]]),p5));
                mp.erase(it3);
                }
                out[x-1]=2;
                out[adj[x-1]]=2;
            }
            if(out[x-1]==0)
            {
                it2=st.find(m1(p[x-1],x-1));
                st.erase(it2);
            }
            if(!q.empty())
            {
                cout<<q.front()+1<<endl;
                flush;
                out[q.front()]=2;
                q.pop();
            }
            else
            {
                if(!mp.empty())
                {
                    it=mp.rbegin();
                    cout<<(it->second).first+1<<endl;
                    flush;
                    out[it->second.first]=2;
                    out[adj[it->second.second]]=2;
                    it3=mp.find(m1(it->first,m1(it->second.first,it->second.second)));
                    if(it3!=mp.end())
                    mp.erase(it3);
                    //mp.erase(mp.rbegin());
                }
                else
                {
                    it1=st.rbegin();
                    cout<<it1->second+1<<endl;
                    flush;
                    it2=st.find(m1(p[it1->second],it1->second));
                    if(it2!=st.end())
                    st.erase(it2);
                }
            }
        }
    }
    return 0;
}

