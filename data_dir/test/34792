#include <bits/stdc++.h>
#define N 100006
using namespace std;
struct ar{int a,b;}g[N];
struct arr{int to,ne,v;}e[2*N];bool flag[N];
int n,L,W,x,y,rt,cnt,sum,tot,f[N],d[N],p[N],siz[N],head[N],o[N];long long ans;
inline int read()
{
	int x=0,c=getchar(),f=1;while(c<'0'||c>'9'){f=(c=='-'?-1:f);c=getchar();}
	while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+c-48,c=getchar();return x*f;
}
inline bool cmp(ar x,ar y)
{
	return x.a<y.a;
}
inline void add_edge(int x,int y,int v)
{
	e[++cnt].to=y;e[cnt].ne=head[x];e[cnt].v=v;head[x]=cnt;
}
inline void add(int x,int y)
{
	for(;x<=L+1;x+=x&-x)o[x]+=y;
}
inline int query(int x)
{
	if(x<=0)return 0;
	int tmp=0;for(;x;x-=x&-x)tmp+=o[x];return tmp;
}
void find(int x,int fa)
{
	siz[x]=1;f[x]=0;
	for(int i=head[x];i;i=e[i].ne)if(e[i].to!=fa&&!flag[e[i].to]){
		find(e[i].to,x);
		siz[x]+=siz[e[i].to];f[x]=max(f[x],siz[e[i].to]);
	}
	f[x]=max(f[x],sum-siz[x]);if(f[x]<f[rt])rt=x;
}
void doit(int x,int fa)
{
	g[++tot].a=d[x];g[tot].b=p[x];
	for(int i=head[x];i;i=e[i].ne)if(e[i].to!=fa&&!flag[e[i].to]){
		d[e[i].to]=d[x]+e[i].v;
		p[e[i].to]=p[x]+1;
		doit(e[i].to,x);
	}
}
long long solve(int x,int y,int z)
{

	tot=0;d[x]=y;p[x]=z;doit(x,0);
	sort(g+1,g+tot+1,cmp);
	for(int i=2;i<=tot;i++)add(g[i].b+1,1);
	int r=tot,l=1;long long res=0;
	while(l<r){
		if(g[r].a+g[l].a<=W)res+=1LL*query(L-g[l].b+1),l++,add(g[l].b+1,-1);
		else add(g[r].b+1,-1),r--;
	}
	return res;
}
void work(int x)
{
	ans+=1LL*solve(x,0,0);flag[x]=1;
	for(int i=head[x];i;i=e[i].ne)if(!flag[e[i].to]){
		ans-=1LL*solve(e[i].to,e[i].v,1);
		sum=siz[e[i].to];
		find(e[i].to,rt=0);work(rt);
	}
}
int main()
{
	n=read();L=read();W=read();
	for(int i=1;i<n;i++){
		x=read();y=read();
		add_edge(i+1,x,y);add_edge(x,i+1,y);
	}
	rt=0;f[0]=n;sum=n;find(1,0);
	work(rt);printf("%I64d",ans);
}
