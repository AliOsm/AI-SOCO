#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
#define pii pair<int, int>
#define endl '\n'
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int, int>
#define vpii vector<pii>
typedef long long ll;
typedef long double ld;
using namespace std;
template<class T> using minheap = priority_queue<T, vector<T>, greater<T>>;

const int N = 10;
int h[N][N];
vpii path;
map<pii, int> pos;
int main() {
  // ios::sync_with_stdio(0);
  // cin.tie(0); cout.tie(0);

  for (int i = 9; i >= 0; i--) {
    for (int j = 0; j < 10; j++) {
      cin >> h[i][j];
    }
  }

  for (int i = 0; i < 10; i++) {
    if (i & 1) {
      for (int j = 9; j >= 0; j--) {
        path.pb({i, j});
      }
    } else {
      for (int j = 0; j < 10; j++) {
        path.pb({i, j});
      }
    }
  }
  for (int i = 0; i < 100; i++) {
    pos[path[i]] = i;
  }

  vi go(100);
  vector<ld> ans(100);

  for (int i = 0; i < 100; i++) {
    int u = path[i].f, v = path[i].s;
    go[i] = pos[{u + h[u][v], v}];
  }

  for (int i = 98; i > 93; i--) {
    for (int j = 1; i + j < 100; j++) {
      ans[i] += 1.0 / 6 * (1 + ans[i + j]);
    }
    ans[i] = (6 * ans[i] + i - 93) / (99 - i);
  }

  for (int i = 93; i >= 0; i--) {
    for (int j = 1; j <= 6; j++) {
      int x = path[i].f;
      int y = path[i].s;
      ans[i] += 1.0 / 6.0 * (1 + min(ans[i + j], ans[go[i + j]]));
    }
  }

  printf("%.12LF\n", ans[0]);
  
  return 0;
}