#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <vector>
#define N 50
#define M ((N * (N - 1)) >> 1)
using namespace std;

int a[M], b[M];
int p[N], s[N];
vector<int> v;
vector<pair<int, int> > w;

inline int find(const int &x)
{
    return p[x] == x ? x : p[x] = find(p[x]);
}

int main(void)
{
    int n, m;
    int i, j;

    scanf("%d %d", &n, &m);
    for(i = 0; i < m; i ++)
        scanf("%d %d", &a[i], &b[i]);

    for(i = 1; i <= n; i ++)
        p[i] = i;
    for(i = 0; i < m; i ++)
        p[find(a[i])] = find(b[i]);
    for(i = 1; i <= n; i ++)
        ++ s[find(i)];

    for(i = 1; i <= n; i ++)
        if(find(i) == i)
        {
            if(s[i] == 1)
                v.push_back(i);
            if(s[i] == 2)
            {
                for(j = 1; j <= n; j ++)
                    if(i != j && find(j) == i)
                    {
                        w.push_back(make_pair(i, j));
                        break;
                    }
            }
            if(s[i] > 3)
            {
                puts("-1");

                return 0;
            }
        }
    if(v.size() < w.size())
        puts("-1");
    else
    {
        for(i = 1; i <= n; i ++)
            if(find(i) == i && s[i] == 3)
            {
                for(j = 1; j <= n; j ++)
                    if(find(j) == i)
                        printf("%d ", j);
                putchar('\n');
            }
        for(i = 0; i < (signed)w.size(); i ++)
            printf("%d %d %d\n", w.at(i).first, w.at(i).second, v.at(i));
        for(i = w.size(); i + 2 < (signed)v.size(); i += 3)
            printf("%d %d %d\n", v.at(i), v.at(i + 1), v.at(i + 2));
    }

    return 0;
}