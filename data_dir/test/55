#include <bits/stdc++.h>
#define rep(x, a, b) for (int x = a; x <= b; x++)
long long rd() {
    long long x = 0, f = 1;
    char c = getchar();
    while (not isdigit(c)) {
        if (c == '-') f = -1;
        c = getchar();
    }
    while (isdigit(c)) {
        x = (x << 3) + (x << 1) + c - 48;
        c = getchar();
    }
    return x * f;
}
using namespace std;
const int N = 1e5 + 5;

int n = rd();
long long a[N];
multiset<long long> st;

int main() {
    long long sum = 0;
    rep(i, 1, n) sum += a[i] = rd();
    if (sum & 1) puts("NO");
    else {
        rep(i, 1, n) st.insert(a[i]);
        sum /= 2;
        long long t = sum;
        if (st.count(sum)) puts("YES");
        else {
            rep(i, 1, n) {
                sum -= a[i];
                st.erase(st.find(a[i]));
                if (sum <= 0) break;
                else if (st.count(sum)) {
                    puts("YES");
                    return 0;
                }
            }
            st.clear();
            reverse(a + 1, a + n + 1);
            rep(i, 1, n) st.insert(a[i]);
            sum = t;
            rep(i, 1, n) {
                sum -= a[i];
                st.erase(st.find(a[i]));
                if (sum <= 0) break;
                else if (st.count(sum)) {
                    puts("YES");
                    return 0;
                }
            }
            puts("NO");
        }
    }
}