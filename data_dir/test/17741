#include <bits/stdc++.h>
using namespace std;
typedef long long int i64;
#define SZ(v) (int((v).size()))
#define ALL(vec) (vec).begin(),(vec).end()
template<typename T> inline bool uax(T &x, T y) {return (y > x) ? x = y, true : false;}
template<typename T> inline bool uin(T &x, T y) {return (y < x) ? x = y, true : false;}
 
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \
  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(__attribute__((unused)) istream_iterator<string> it) {}
template<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {
  cerr << *it << " =: " << a << endl; err(++it, args...); }
template<typename T1,typename T2> ostream& operator<<(ostream& os, pair<T1,T2>& buf) {
  return os << "(" << buf.first << ": " << buf.second << ")"; }
#define DefOut(Con) template<typename T>ostream&operator<<(ostream&os,Con<T>&A){ bool f = false; os << "{"; \
  for (auto &e: A) { if (f) os << ", "; os << e; f = true; } return os << "}"; }
#define DefOut2(Con) template<typename K,typename V>ostream&operator<<(ostream&os,Con<K,V>&A) \
{ bool f = false; os << "{"; for (auto &e: A) { if (f) os << ", "; os << e; f = true; } return os << "}"; }
template<typename T>ostream &operator << (ostream &os,vector<vector<T>>& A) {
  for (auto &B: A) os << '\n' << B; return os; }
DefOut(vector) DefOut(set) DefOut(multiset) DefOut2(map) 
template<typename T> void kek(T ans) {cout << ans << endl; exit(0);}
int const MOD = 1000000007;
long long const INF = 1e18;
#define PI 3.14159265358979323846
/***********************************************************************/

int32_t main() {

  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  const int nax = 3000000;
  vector<int> prime(nax, true);
  prime[0] = prime[1] = false;
  for (int i = 2; i < nax; ++i) {
    if (prime[i]) {
      for (int j = i + i; j < nax; j += i)
        prime[j] = false;
    }
  }
  int n; cin >> n;
  vector<int> a(n);
  int ones = 0;
  for (int &z: a) {
    cin >> z;
    ones += z == 1;
  }
  vector<int> ans;
  if (ones >= 2) {
    ans.assign(ones, 1);
    for (int z: a) {
      if (z != 1 && prime[z + 1]) {
        ans.push_back(z);
        break;
      } 
    }
  } else {
    ans = {a[0]};
    bool f = false;
    for (int i = 0; i < n && !f; ++i) {
      for (int j = i + 1; j < n && !f; ++j) {
        if (prime[a[i] + a[j]]) {
          ans = {a[i], a[j]};
          f = true;
        }
      }
    }
  }
  cout << SZ(ans) << '\n';
  for (int z: ans) cout << z << ' ';
  
  return 0;
}
