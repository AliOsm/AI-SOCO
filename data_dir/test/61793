#include <iostream>
#include <memory.h>
#include <string>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <queue>

using namespace std;

#define x0 askjasf
#define y0 asfxnv
#define ll long long
#define rep(i,n) for(int i = 0; i < n; ++i)
#define FOR(i,a,b) for(int i = a; i < b; ++i)
#define FORS(i,a,b) for (int i = a; i <= b; ++i)
int sz,n;
ll a[2000000],b[200000];
int q[200000];
int find(long long x) {
    return lower_bound(b,b+sz,x)-b;
}
ll gcd(ll a, ll b) {
    while(a && b) {
        if (a>b) a%=b;
        else b%=a;
    }
    return (a+b);
}
int main(){
    scanf("%d",&n);
    FOR(i,0,n) {
        scanf("%I64d",&a[i]);
    }
    ll ans = 1;
    random_shuffle(a,a+n);
    FOR(t,0,9) {
        ll x = a[(rand()%n * 133 + 12378)%n];
        sz=0;
        for(int i=1;(ll)i*i<=x;++i) {
            if (x % i == 0) {
                b[sz++]=i;
                if ((ll)i*i!=x) b[sz++]=x/i;
            }
        }
        sort(b,b+sz);
        FOR(i,0,sz) q[i]=0;
        FOR(i,0,n) {
            ll d=gcd(a[i],x);
            q[lower_bound(b,b+sz,d)-b]++;
        }
        FOR(i,0,sz){
            int sum=0;
            FOR(j,0,sz)
                if (b[j]%b[i]==0) sum+=q[j];
            if (sum+sum>=n) ans=max(ans,b[i]);
        }
    }
    cout << ans << endl;
    return 0;
 }