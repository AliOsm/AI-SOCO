//! Lets Get it
#include<bits/stdc++.h>
using namespace std;

typedef double                      ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 3e3 + 10;
const ll MXM = (1LL << 18) + 10;
const ll MX5 = 3e5 + 10;
const ll MX6 = 1e6 + 10;
const ll LOG = 20;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}

int n, m, k, a, b, c;
int dis[MXN][MXN];
pii par[MXN][MXN];
vector<int> G[MXN], ANS, Bad[MXN][MXN];
map<pair<pii, int>, bool> mp;
bool vis[MXN][MXN];
queue<pii> q;

int main(){
    fast_io
    //file_io
    cin >> n >> m >> k;
    for(int i = 0; i < m; i ++){
        int u, v;
        cin >> u >> v;
        G[u].pb(v);
        G[v].pb(u);
    }
    for(int i = 0; i < k; i ++){
        cin >> a >> b >> c;
        Bad[a][b].pb(c);
    }

    vis[0][1] = 1;
    dis[0][1] = 0;
    q.push({0, 1});
    par[0][1] = {0, 0};

    while(!q.empty()){
        int u = q.front().S, Par = q.front().F;
        q.pop();
        vis[Par][u] = 1;
        for(int v : G[u]){
            bool f = 0;
            for(int bad : Bad[Par][u]){
                if(bad == v) f = 1;
            }
            if(!f && !vis[u][v]){
                vis[u][v] = 1;
                dis[u][v] = dis[Par][u] + 1;
                par[u][v] = {Par, u};
                q.push({u, v});
            }
        }
    }

    int f = 0, ans = INF;
    pii now;

    for(int u : G[n]){
        if(vis[u][n]){
            f = 1;
            if(dis[u][n] < ans){
                now = {u, n};
            }
            ans = min(ans, dis[u][n]);
        }
    }

    if(!f) kill(-1);
    ANS.pb(n);
    while(now.F != 0){
        ANS.pb(now.F);
        now = par[now.F][now.S];
    }

    reverse(all(ANS));

    cout << ans << endl;
    for(int X : ANS) cout << X << sep;

    return 0;
}
//! N.N
