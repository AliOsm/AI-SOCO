#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <memory.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 1e3 + 1;
int n, a[N], b[N];
int k1, k2;
int main()
{
	cin >> n;
	cin >> k1 >> k2;
	ll res = 0;
	for (int i = 0; i < n; ++i)
		cin >> a[i];
	priority_queue<int> q;
	for (int i = 0; i < n; ++i) {
		cin >> b[i];
		res += abs(a[i] - b[i])*(ll)abs(a[i] - b[i]);
		q.push(abs(a[i] - b[i]));
	}
	while (!q.empty() && (k1 || k2)) {
		auto u = q.top();
		q.pop();
		if (!u)
			break;
		res -= (ll)u*u;
		--u;
		res += (ll)u*u;
		if (u)
			q.push(u);
		if (k1)
			--k1;
		else
			--k2;
	}
	if (k1 || k2) {
		int need = k1 + k2;
		if (need & 1)
			++res;
	}
	cout << res << endl;
	return 0;
}