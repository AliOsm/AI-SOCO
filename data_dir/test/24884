#include <iostream>
#include <algorithm>
#include <set>
using namespace std;

long long A[400000];

struct pr
{
	long long l,r;
	int cid;
};

bool cmp(pr a,pr b)
{
	return a.r<b.r;
}

long long L[200000],R[200000];

pr B[200000];


struct cmps
{
	bool operator()(int a,int b)
	{
		if(A[a]==A[b])
			return a>b;
		return A[a]<A[b];
	}
};

set<int,cmps> S;

int ans[200000];

int main()
{
	int N,M;
	long long a,b;
	cin >> N >> M;
	for(int i=0;i<N;i++)
	{
		cin >> L[i] >> R[i];
		if(i>0)
		{
			B[i-1].l = L[i]-R[i-1];
			B[i-1].r = R[i]-L[i-1];
		}
		B[i-1].cid = i-1;
	}
	for(int i=0;i<M;i++)
	{
		cin >> A[i];
		S.insert(i);
	}
	sort(B,B+N-1,cmp);
	int j = 0;
	set<int,cmps>::iterator it;
	for(int i=0;i<N-1;i++)
	{
		A[M] = B[i].l;
		it = S.lower_bound(M);
		if(it == S.end())
		{
			cout << "No\n";
			return 0;
		}
		if(A[*it] > B[i].r)
		{
			cout << "No\n";
			return 0;
		}
		ans[B[i].cid] = *it;
		S.erase(it);
	}
	cout << "Yes\n";
	for(int i=0;i<N-1;i++)
		cout << ans[i]+1 << " ";
	cout << '\n';
}