#include <bits/stdc++.h>
#define F first
#define S second
#define pii pair<int, int>
#define pb push_back
#define prev NNNNEx

using namespace std;

typedef long long ll;
typedef long double ld;

const int N = 2e5 + 10, LOG = 30, INF = 1e9 + 10;

int a[N], nex[N][LOG], prev[N][LOG];
int r[N], l[N];

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	int n; cin >> n;
	for(int i=0; i<n; i++)
		cin >> a[i];

	vector<pii> v;
	v.pb({INF, -1});
	
	for(int i=0; i<n; i++){
		while(v.back().F <= a[i])
			v.pop_back();
		l[i] = v.back().S;
		v.pb({a[i], i});
	}

	v.clear();
	v.pb({INF, n});

	for(int i=n-1; i>=0; i--){
		while(v.back().F < a[i])
			v.pop_back();
		r[i] = v.back().S;
		v.pb({a[i], i});
	}

	for(int i=n-1; i>=0; i--){
		for(int j=0; j<LOG; j++){
			if(i == n - 1)nex[i][j] = n;
			else nex[i][j] = nex[i + 1][j];
			if(a[i] & (1 << j))nex[i][j] = i;
		}
	}

	for(int i=0; i<n; i++){
		for(int j=0; j<LOG; j++){
			if(i == 0)prev[i][j] = -1;
			else prev[i][j] = prev[i - 1][j];
			if(a[i] & (1 << j))prev[i][j] = i;
		}
	}

	ll ans = 0;

	for(int i=0; i<n; i++){
		ll kol = 1LL * (i - l[i]) * (r[i] - i);
		int lf = -1;
		for(int j=0; j<LOG; j++)
			if((a[i] & (1 << j)) == 0)lf = max(lf, prev[i][j]);
		int rg = n;
		for(int j=0; j<LOG; j++)
			if((a[i] & (1 << j)) == 0)rg = min(rg, nex[i][j]);
		lf = max(lf, l[i]);
		rg = min(rg, r[i]);
		ll bad = 1LL * (i - lf) * (rg - i);
		ans += kol - bad;
	}
	cout << ans << endl;
}