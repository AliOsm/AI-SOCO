#include<bits/stdc++.h>
using namespace std;
int i, j, k, l, x, y, z, m, n, ans, p, q, r, temp;

pair < int , int > pnts[30000];

int main()
{
    cin >> n;

    for(i = 0; i <= n; i++) scanf("%d %d", &pnts[i].first, &pnts[i].second);


    if(pnts[n - 1].first > pnts[n].first) temp = 1;

    else temp = 2;





    // dir 1 for ease dir 2 for west dir 3 for north dir 4 for south

    int now_dirr = 3;
    int nxt_dirr = 0;


    for(i = 1; i < n ; i++){


        if(now_dirr == 3 || now_dirr == 4){

            if(pnts[i].first < pnts[i + 1].first) nxt_dirr = 1;
            else nxt_dirr = 2;

        }

        else{
            if(pnts[i].second < pnts[i + 1].second) nxt_dirr = 3;
            else nxt_dirr = 4;

        }

         //cout << i << ' '  << now_dirr << ' '  << nxt_dirr << endl;

        if(temp == 1){
            if(now_dirr == 1 && nxt_dirr == 3) ans++;

            else if(now_dirr == 2 && nxt_dirr == 4) ans++;

            else if(now_dirr == 3 && nxt_dirr == 2) ans++;

            else if (now_dirr == 4 && nxt_dirr == 1) ans++;
        }

        else{

            if(now_dirr == 1 && nxt_dirr == 4) ans++;

            else if(now_dirr == 2 && nxt_dirr == 3) ans++;

            else if(now_dirr == 3 && nxt_dirr == 1) ans++;

            else if (now_dirr == 4 && nxt_dirr == 2) ans++;
        }

        now_dirr = nxt_dirr;


    }

    cout << ans;



    return 0;
}
