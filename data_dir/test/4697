#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <deque>
#include <utility>
#include <cstring>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf
#define prev(x) (x/2)
#define left(x) (x*2)
#define right(x) (x*2+1)
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i <= end; i += move)

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

int n,k;
int x,y;
int ans = 10000000;
map < int, int > all,l;
map < int, int > :: iterator it;

int main()
{
    scanf("%d", &n);
    For(i,n)
    {
            scanf("%d%d", &x, &y);
            all[y]++;
            if (x != y) ++all[x];
            l[x]++;
    }
    int need = (n+1) / 2;int ans = -1;
    for (it = all.begin(); it != all.end(); it++)
    {
        if (it->S<need)
           continue;
        ans = max(ans, l[it->F]);
    }
    if (ans < 0)
       printf("-1");
    else if (ans >= need)
         printf("0");
    else printf("%d", need - ans);    
    return 0;
}
