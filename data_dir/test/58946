#include <bits/stdc++.h>
using namespace std;
#define F        first
#define S        second
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
#define N 100009
const int MOD = 1e9 + 7;

int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};

//ll GCD(ll num,ll ones) { return !ones ? num : GCD(ones,num%ones); }
//ll lcm(ll a, ll b) { return (a / GCD(a, b)) * b; }
//double Len(int x,int y,int X,int Y) { return sqrt((X-x)*(X-x)+(Y-y)*(Y-y)); }
/*int fastpower(int a,int x)
{
    if(x == 1) return a;
    if (x==0) return 1;
        int p = fastpower(a,x/2);
    if(x%2) return ((p%m)*(p%m)*(a%m))%m;
s}*/
//----------------------- ------------------------
int n,m,k,idx;
int a[N][6];
struct element
{
    int idx , arr[5];
    element()
    {
        for(int i=0;i<5;++i) arr[i] = 0;
    }
};
void pushing(stack<element>& tmp,element e)
{
    element x;
    for(int j=0;j<m;++j)
    {
        x.arr[j] = a[e.idx][j];
        if(!tmp.empty()) x.arr[j] = max(a[e.idx][j],tmp.top().arr[j]);
    }
    x.idx = e.idx;
    tmp.push(x);
}
bool ok(int mid)
{
    if(mid == 0) return 1;
    stack<element>f,s; ll cst = 0;
    for(int i=0;i<mid;++i)
    {
        element x;
        for(int j=0;j<m;++j) x.arr[j] = a[i][j];
        x.idx = i;
        pushing(f,x);
    }
    cst = 0; for(int j=0;j<m;++j) cst+=f.top().arr[j];
    if(cst<=k) return idx = 0,1;

    for(int i=mid;i<n;++i)
    {
        if(s.empty())
        {
            while(sz(f)>1) { pushing(s,f.top()); f.pop(); }
            f.pop();
        }
        else s.pop();
        element x;
        for(int j=0;j<m;++j) x.arr[j] = a[i][j];
        x.idx = i;
        pushing(f,x);
        cst = 0;
        for(int j=0;j<m;++j)
        {
            if(sz(f)) x.arr[j] = f.top().arr[j];
            if(sz(s)) x.arr[j] = max(x.arr[j],s.top().arr[j]);
            cst+=x.arr[j];
        }
        if(cst<=k) return idx = i-mid+1,1;
    }
    return 0;
}
int main()
{
#ifndef ONLINE_JUDGE
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    sc(n); sc(m); sc(k);
    for(int i=0;i<n;++i) for(int j=0;j<m;++j) sc(a[i][j]);
    int l = 0,r = n,mid;
    while(l<r)
    {
        mid = l+(r-l+1)/2;
        if(ok(mid)) l = mid;
        else r = mid-1;
    }
    ok(l);
    element mx;
    for(int i=idx,j=0;i<n&&j<l;++i,++j)
    {
        for(int z=0;z<m;++z) mx.arr[z] = max(mx.arr[z],a[i][z]);
    }
    for(int i=0;i<m;++i) printf("%d ",mx.arr[i]);
    return 0;
}

