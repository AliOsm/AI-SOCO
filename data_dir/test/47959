#include <iostream>
#include<algorithm>
#include<string>
#include<map>
#include<iomanip>
#include<vector>
#include<cmath>
#include<queue>
#include<stack>
#include<set>

#define mod 1000000007
#define pa(a,b) make_pair(a,b)
#define f first
#define s second
#define pb(a)  push_back(a)
#define all(a) a.begin() , a.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define LL  long long int
#define oo 1e9
#define pi 3.14159265359

LL maxx(LL a , LL b){ return a>b ?  a : b ;}
LL minn(LL a , LL b){ return a>b ?  b : a ;}

using namespace std;
LL gcd(LL a, LL b) {
    return b == 0 ? a : gcd(b, a % b);
}
LL lcm(LL a , LL b )
{
    return (a*b)/gcd(a , b);
}
LL poww(LL base, LL exp) {
  base %= mod;
  LL result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}
vector<int>graph[20000]; bool vis[10010];
void dfs(int root)
{
    vis[root]=1;
    for(int i=0;i<graph[root].size();i++)if(!vis[graph[root][i]])dfs(graph[root][i]);
    return ;
}
int main()
{
    int n; cin>>n;
    vector<int>a,b;
    for(int i=0;i<n;i++)
    {
        int x; cin>>x;
        a.pb(x);
    }
    for(int i=0;i<n;i++)
    {
        int x; cin>>x;
        b.pb(x);
    }
    int ans=0;
    for(int i=0;i<n;i++)
    {
        int ansa=a[i]; int ansb=b[i];
        for(int j=i+1;j<n;j++)
        {
            ansb|=b[j]; ansa|=a[j];
            ans=max(ans , ansb+ansa);
        }
        ans=max(ans , ansb+ansa);
    }
    cout<<ans;
}
