#include <bits/stdc++.h>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

ll fac[1], inv[1];
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
ll mp(ll a,ll b){ll ret=1;while(b){if(b&1)ret=ret*a%MOD;a=a*a%MOD;b>>=1;}return ret;}
ll cmb(ll r, ll c) {return fac[r] * inv[c] % MOD * inv[r - c] % MOD;}

priority_queue<int, vector<int>, greater<int>> pq;
vector<int> v;

ll psum[1000001];
ll pp[1000001];
ll ss = 0;

int main() {
    // 가장 작은 값이 x이하인 애들의 개수..
    // 가장 큰 값..
    // 1. 그 자체로 가능한 값

    int n;
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        int t;
        scanf("%d", &t);

        int miv = 1e9;
        int mav = 0, flag = 0;

        while (t--) {
            int kk;
            scanf("%d", &kk);
            if (kk > miv) flag = 1;
            miv = min(miv, kk);
            mav = max(mav, kk);
        }

        if (flag) ss++;
        else {
            psum[miv]++;
            pp[mav]++;
        }
    }

    ll ans = ss * ss;
    ll tt = ss;
    for (int i = 0; i <= 1000000; i++) {
        ans += tt * psum[i];
        if (i) ss += psum[i - 1];
        ans += pp[i] * (ss);
    }
    printf("%lld", ans);
}