#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <set>
#define N 200010
using namespace std;
typedef long long ll;
int w, h, n;
set<int> hcut, wcut;
ll hcnt[N], wcnt[N];
int main() {
	string cut;
	int pos;
	while (cin>>w>>h>>n) {
		hcut.clear();
		wcut.clear();
		hcut.insert(0);
		hcut.insert(h);
		wcut.insert(0);
		wcut.insert(w);
		memset(hcnt, 0, sizeof(hcnt));
		memset(wcnt, 0, sizeof(wcnt));
		hcnt[h]++;
		wcnt[w]++;
		ll maxH = h, maxW = w;
		ll ans = h * w;
		for (int i = 0; i < n; ++i) {
			cin>>cut>>pos;
			if (cut[0] == 'H') {
				set<int>::iterator lower = hcut.lower_bound(pos);
				set<int>::iterator upper = hcut.upper_bound(pos);
				lower--;
				int len = *upper - *lower;
		//		cout<<*lower<<" "<<*upper<<endl;
				hcnt[len]--;
				hcnt[pos - *lower]++;
				hcnt[*upper - pos]++;
				hcut.insert(pos);
				while (hcnt[maxH] == 0) {
					maxH--;
				}
			} else {
				set<int>::iterator lower = wcut.lower_bound(pos);
				set<int>::iterator upper = wcut.upper_bound(pos);
				lower--;
				int len = *upper - *lower;
				wcnt[len]--;
				wcnt[pos - *lower]++;
				wcnt[*upper - pos]++;
				wcut.insert(pos);
				while (wcnt[maxW] == 0) {
					maxW--;
				}
			}
			cout<<maxH * maxW<<endl;
		}
	}
	return 0;
}
