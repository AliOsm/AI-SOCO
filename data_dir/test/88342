#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>
#define mod 1000000007ll

int n;
char s[10100];
int S[10100], a[130];
ll dp_h[1010];
int dp_max[1010], dp_min[1010];
bitset<1010> visited;

void solve(int k){
	if(visited[k]) return;
	else{
		visited[k] = true;
		if(k == n){
			dp_h[k] = 1;
			dp_max[k] = 0;
			dp_min[k] = 0;
		}
		else{
			dp_h[k] = 0;
			dp_max[k] = 0;
			dp_min[k] = INFINITY;

			int m = INFINITY;

			for(int i = k; i < n; i++){
				m = min(m, a[S[i]]);
				//printf("m = %d\n", m);
				if(m < i - k + 1) break;
				else{
					solve(i + 1);
					dp_h[k] += dp_h[i + 1];
					dp_h[k] %= mod;

					dp_max[k] = max(dp_max[k], dp_max[i + 1]);
					dp_max[k] = max(dp_max[k], i - k + 1);
					
					dp_min[k] = min(dp_min[k], dp_min[i + 1] + 1);

				}
			}
		}
	}
}



int main(){
	scanf("%d", &n);
	scanf("%s", s);
	REP(i, n) S[i] = s[i] - 'a';
	REP(i, 26) scanf("%d", &a[i]);
	solve(0);
	
	printf("%lld\n", dp_h[0]);
	printf("%d\n", dp_max[0]);
	printf("%d\n", dp_min[0]);

}