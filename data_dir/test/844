#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md l + ((r - l) >> 1)
#define all(x) x.begin(),x.end()
#define ll long long
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 44 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0};
const int dy[] = {0, 0, 1, -1};
const double EPS = 1e-9;
const double PI = acos(-1.0);

int n, m, a[N][N], dp[N][N], ans[N][N][N][N], q;
main() {
    file("queue");
    ios;
    cin >> n >> m >> q;
    fo(i, 1, n, 1) fo(j, 1, m, 1) {
        char x;
        cin >> x;
        a[i][j] = x - '0';
        a[i][j] == 1 ? dp[i][j] = 0 : dp[i][j] = dp[i - 1][j] + 1;
    }
    fo(i1, 1, n, 1) {
        fo(j1, 1, m, 1) {
            fo(i2, i1, n, 1) {
                fo(j2, j1, m, 1) {
                    ans[i1][j1][i2][j2] = ans[i1][j1][i2][j2 - 1] + ans[i1][j1][i2 - 1][j2] - ans[i1][j1][i2 - 1][j2 - 1];
                    if (a[i2][j2] == 0) {
                        int cur = i2 - i1 + 1;
                        foo(j, j2, j1, 1) {
                            cur = min(cur, dp[i2][j]);
                            ans[i1][j1][i2][j2] += cur;
                        }
                    }
                }
            }
        }
    }
    while (q--) {
        int x, y, xx, yy;
        cin >> x >> y >> xx >> yy;
        cout << ans[x][y][xx][yy] << "\n";
    }
    return 0;
}
