/* winners never quit and quitters never win.
      #swap                                 */
#include <bits/stdc++.h>
using namespace std;
#pragma GCC optimize ("-O3")
using ll = long long;
using ld = long double;
const ll mod = 1000000007;
const ll inf = 1000000000000000000;
const ll rk = 256;
#define pb push_back
#define mp make_pair
#define vc vector
#define fs first
#define sec second
#define pq priority_queue
#define lb lower_bound
#define ub upper_bound
#define pll pair<ll,ll> 
#define pls pair<ll,string>
#define psl pair<string,ll>
#define plc pair<ll,char>
#define pcl pair<char,ll>
#define pss pair<string,string>
#define all(v) v.begin(),v.end()
#define tol(s) transform(s.begin(),s.end(),s.begin(),::tolower);
#define tou(s) transform(s.begin(),s.end(),s.begin(),::toupper);
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define T ll t=0;cin>>t;for(ll test=0;test<t;test++)
bool comp(pll a,pll b)
{
    if(a.fs==b.fs)
        return a.sec<b.sec;
    return a.fs>b.fs;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
	//isprime();
	//coeff();
	/*freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);*/
    T
    {
        ll n,s;
        cin>>n>>s;
        vc<pll> v,v1;
        rep(a,0,n)
        {
            ll m,p;
            cin>>m>>p;
            v.pb({m,p});
            v1.pb({m,p});
        }
        sort(all(v),comp);
        ll low=0,high=s,ans=0;
        while(low<=high)
        {
            ll mid=(low+high)/2;
            ll tot=n/2+1,done=0,sum=0;
            rep(a,0,n)
            {
                if(v[a].sec<mid or tot==0)
                {
                    sum+=v[a].fs;
                    continue;
                }
                tot--;
                sum+=max(mid,v[a].fs);
            }
            if(tot or sum>s)
                high=mid-1;
            else{
                ans=mid;
                low=mid+1;
            }
        }
        cout<<ans<<endl;
    }
	return 0;
}