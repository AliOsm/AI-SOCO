#include <bits/stdc++.h>
 
using namespace std;
 
#define DIM 200009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define amen exit(0)
#define endl '\n'
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define MODULO 1000000007

long long i,j,k,n,m,T,a,b,cnt1,cnt2,c1,c2;

long long t[DIM],can[DIM];

struct seg{
	long long x,t;
};

inline bool cmp(seg a,seg b){
	if(a.x!=b.x)return a.x<b.x;
	return a.t<b.t;
}

vector<seg>nums;

long long count(long long c1,long long c2,long long x){
	long long res=c1+c2;
	if(c1*a+c2*b>x)return 0;
	x-=c1*a+c2*b;
	long long kilk1=cnt1-c1;
	long long kilk2=cnt2-c2;
	long long k=min(kilk1,x/a);
	x-=k*a;
	res+=k;
	kilk1-=k;
	k=min(kilk2,x/b);
	x-=k*b;
	kilk2-=k;
	res+=k;
	return res;
}

int main()
{
    fast;

    int nt;
    cin>>nt;
    while(nt--){
    	cin>>n>>T>>a>>b;
    	cnt1=cnt2=0;
    	for(i=1;i<=n;i++){
    		cin>>can[i];
    		if(can[i]==0)cnt1++;
    		else cnt2++;
    	}

    	nums.clear();

    	for(i=1;i<=n;i++){
    		cin>>t[i];
    		nums.push_back({t[i],can[i]});
    	}

    	sort(nums.begin(),nums.end(),cmp);

    	long long res=0,c=0,c1=0,c2=0;

    	for(int i=0;i<nums.size();i++){
 			long long x=nums[i].x;
 			c++;
 			res=max(res,count(c1,c2,x-1));
 			if(nums[i].t==0)c1++;
 			else c2++;
 		}
 		res=max(res,count(cnt1,cnt2,T));
 		cout<<res<<endl;
    }

    amen;
}
/*
1
5 17 2 5
1 1 1 1 0
17 11 10 6 4
*/