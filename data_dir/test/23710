#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
bool ok = 0;
char a[55][55];
bool vis[55][55];
int n, m, d[55][55];
int dx[] = {-1, 0, 0, 1};
int dy[] = {0, -1, 1, 0};
bool valid(int i, int j){
    return i > -1 && j > -1 && i < n && j < m;
}
void dfs(int x, int y, int cnt){
    vis[x][y] = 1;
    d[x][y] = cnt;
    for(int i = 0; i < 4; i++){
        int nx = x + dx[i];
        int ny = y + dy[i];
        if(valid(nx, ny) && !vis[nx][ny] && a[nx][ny] == a[x][y]){
            dfs(nx, ny, cnt + 1);
        }
        else if(valid(nx, ny) && a[nx][ny] == a[x][y]){
            if(abs(d[x][y] - d[nx][ny]) > 2){
                ok = 1;
            }
        }
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin >> n >> m;
    for(int i = 0; i < n; i++)
        for(int j = 0; j < m; j++)
            cin >> a[i][j];
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(!vis[i][j])
                dfs(i,j, 0);
        }
    }
    if(ok)
        cout << "Yes" << endl;
    else
        cout << "No" << endl;
    return 0;
}
