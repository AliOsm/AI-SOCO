
// In the name of God
#include <bits/stdc++.h>

using namespace std;
#define Size(x) ((int)(x).size())
#define pb push_back
#define Rp(x) for(int rp_=0;rp_<x;++rp_)
typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;
const int INF = 1e9 + 10;
const int MN = 2e3 + 10;

ld dp[MN][MN];
int cnt[MN][MN];
int n , P , Q;
ld p[MN] , q[MN];

bool check(ld val)
{
	for(int i=0;i<MN;++i)
		fill(dp[i] , dp[i]+MN , -1e12) , fill(cnt[i] , cnt[i]+MN , 0);
	dp[0][0] = 0;
	for(int i=0;i<n;++i)
		for(int j=0;j<=i+1 && j <= P;++j){
			dp[i+1][j] = dp[i][j] , cnt[i+1][j] = cnt[i][j];	
			if(j && dp[i][j-1]+p[i] > dp[i+1][j])
				dp[i+1][j] = dp[i][j-1]+p[i] , cnt[i+1][j] = cnt[i][j-1];
		   	if(j!=i+1 && dp[i][j]+q[i]+val > dp[i+1][j])
				dp[i+1][j] = dp[i][j]+q[i]+val , cnt[i+1][j] = cnt[i][j]+1;	
			if(j && dp[i][j-1]+q[i]+p[i]-p[i]*q[i]+val > dp[i+1][j])
				dp[i+1][j] = dp[i][j-1]+q[i]+p[i]-p[i]*q[i]+val , cnt[i+1][j] = cnt[i][j-1]+1;
		}
	return cnt[n][P] <	Q; 
}

int main()
{
	ios_base :: sync_with_stdio(false) ,cin.tie(0) , cout.tie(0);
	cin >> n >> P >> Q;
	for(int i=0;i<n;++i) cin >> p[i];
	for(int i=0;i<n;++i) cin >> q[i];
	ld L = -5e4 , R = 5e4;
	Rp(70){
		ld mid = (L+R)/2;
		if(check(mid)) L = mid;
		else R = mid;
	}
	cout << setprecision(12) << fixed << dp[n][P]-Q*L << endl;
	return 0;
}

