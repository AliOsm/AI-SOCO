#include<bits/stdc++.h>
using namespace std;

typedef long long LL;
const int M = 1e9+7, N = 305;

LL C[N][N];
LL dp[N][N];

LL pwx[N], pwx1[N];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    for (int i=0; i<N; i++)     C[i][0] = 1;
    for (int i=1; i<N; i++)
        for (int j=1; j<N; j++)
            C[i][j] = (C[i-1][j-1] + C[i-1][j])%M;

    int n, x;
    cin>>n>>x;

    pwx[0] = pwx1[0] = 1;
    for (int i=1; i<N; i++) {
        pwx[i] = (pwx[i-1]*x)%M;
        pwx1[i] = (pwx1[i-1]*(x-1))%M;
    }

    dp[0][0] = 1;
    for (int i=1; i<=n; i++) {
        for (int j=0; j<=n; j++) {
            for (int k=0; k<=j; k++) {
                LL ways = (C[j][k] * dp[i-1][j-k])%M;
                ways = (ways * pwx1[j-k])%M;
                LL rest = pwx[n-j];
                if (k == 0)     rest = (rest+M-pwx1[n-j])%M;
                dp[i][j] = (dp[i][j] + ways*rest)%M;
//                cout<<":"<<k<<" "<<" "<<dp[i-1][j-k]<<" "<<ways<<" "<<rest<<endl;
            }
//            cout<<i<<" "<<j<<" "<<dp[i][j]<<endl;
        }
    }
    cout<<dp[n][n]<<endl;
}