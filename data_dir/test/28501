#pragma comment(linker, "/STACK:640000000")
#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

const int maxn = (int)2e5 + 10;

int x[maxn],p[maxn];

int main() {
	#ifdef LOCAL
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	
	int d,n,m; cin >> d >> n >> m;
	
	vector<pii> v(m);

	for (int i = 0; i < m; i++) {
		scanf("%d%d",&v[i].first,&v[i].second);
	}	
	sort(all(v));
	for (int i = 1; i <= m; i++) {
		x[i] = v[i - 1].first;
		p[i] = v[i - 1].second;
	}
	x[m + 1] = d;

	deque<pii> q;

	int pos = n;
	ll res = 0;
	int i = 1;

	while(pos < d)	{
		while(i <= m && x[i] <= pos) {
			pii cur = mp(p[i],x[i] - x[i - 1]);
			while(!q.empty() && q.back().first >= p[i]) {
				cur.second += q.back().second;
				q.pop_back();
			}
			q.push_back(cur);
			i++;
		}
		int need = x[i] - pos;
		while(!q.empty() && need > 0) {
			if (q.front().second > need) {
				res += q.front().first * 1LL * need;
				q.front().second -= need;
				need = 0;
			} else {
				need -= q.front().second;
				res += q.front().first * 1LL * q.front().second;
				q.pop_front();
			}
		}
		if (need > 0) {
			cout << -1 << endl;
			return 0;
		}
		pos = x[i];
	}
	
	cout << res << endl;
	
	return 0;
}
