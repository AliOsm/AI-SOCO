#include <bits/stdc++.h>

using namespace std;

#ifdef SWEDE
#define rep(i, a, b) for(int i = a; i < (b); ++i)
#define trav(a, x) for(auto& a : x)
#define sz(x) (int)(x).size()
#endif
#define all(x) begin(x), end(x)

using ll = int64_t;
using ld = long double;
using pii = pair<int32_t, int32_t>;
using vi = vector<int32_t>;

void solve() {
    int n;
    cin >> n;

    using st = tuple<int, int, int>;
    vector<st> a;
    a.reserve(n + n - 1);
    ll a_tot = 0;
    ll b_tot = 0;
    for (int i = 0; i < n + n - 1; ++i) {
        int x, y;
        cin >> x >> y;
        a.emplace_back(x, y, i);
        a_tot += x;
        b_tot += y;
    }
    sort(all(a), greater<st>());
    // sorted in desc order of a
    ll odd = 0;
    ll even = 0;
    for (int i = 1; i < n + n - 1; ++i) {
        if (i % 2)
            odd += get<1>(a[i]);
        else
            even += get<1>(a[i]);
    }

    vi idxs;
    if (odd >= even) {
        idxs.push_back(get<2>(a[0]));
        for (int i = 1; i < n + n - 1; i += 2) {
            idxs.push_back(get<2>(a[i]));
        }
    } else {
        for (int i = 0; i < n + n - 1; i += 2) {
            idxs.push_back(get<2>(a[i]));
        }
    }

    sort(all(idxs));
    cout << "YES\n";
    for (int x : idxs) {
        cout << x + 1 << ' ';
    }
    cout << '\n';
}

int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

    int T;
    cin >> T;
    while (T-- > 0) {
        solve();
    }

    return 0;
}
