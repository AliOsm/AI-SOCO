#include<bits/stdc++.h>
using namespace std;

const int N = 82, INF = 2e9+7;
int c[N][N];

vector<pair<int, int>> best[N][N];
int n, k, ccc = 0, k2;
int v[10];
int cnt[N];

int ans = INF;

void go(int cur) {
    if (cur == k2) {
        v[cur] = 1;

        int sum = 0;

        for (int i=0; i<k2; i++) {
            int l = v[i], r = v[i+1];
            int mn = INF;
            for (auto pr: best[l][r]) {
                if (!cnt[pr.second])    mn = pr.first;
                break;
            }
            if (mn == INF) {
                sum = INF;
                break;
            }
            sum += mn;
        }
        if (sum < ans)  ans = sum;

        return;
    }

    for (int i=1; i<=n; i++) {
        v[cur] = i;
        cnt[i]++;
        go(cur+1);
        cnt[i]--;
    }
}


int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin>>n>>k;

    k2 = k/2;

    for (int i=1; i<=n; i++)
        for (int j=1; j<=n; j++) {
            cin>>c[i][j];
        }

    for (int i=1; i<=n; i++) {
        for (int j=1; j<=n; j++) {
            for (int k=1; k<=n; k++) {
                if (i == k || j == k)   continue;
                best[i][j].push_back({c[i][k] + c[k][j], k});
            }
            sort(best[i][j].begin(), best[i][j].end());
        }
    }

    v[0] = 1;
    cnt[1]++;
    go(1);
    cout<<ans<<endl;

}