#define __USE_MINGW_ANSI_STDIO 0
#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define ff first
#define ss second
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define int long long
#define all(a) a.begin(), a.end()
#define ull unsigned long long
#define N 2000010
#define inf 10000000000000000
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
int gcd(int x,int y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
int expo(int n,int m,int p)   //MODULAR EXPONENTIATION
{
    int r=1;
    n=n%p;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
bool f(string s,int k)
{
	s.erase(s.begin()+k);
	for(int i=0;i<s.size();i++)
	{
		if(s[i]!=s[s.size()-1-i])
			return false;
	}
	return true;
}
int32_t main()
{
 
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ************************/
   int p,q,n;
   cin>>p>>q>>n;
   vector<int>a(n);
   for(int i=0;i<n;i++)
   {
   	cin>>a[i];
   }
   if(n==1)
   {
	if(p%q)
	{
		cout<<"NO";
	}
	else
	{
		int y=p/q;
		if(y==a[0])
			cout<<"YES";
		else
			cout<<"NO";
	}
	return 0;   	
   }

   int num=p/gcd(p,q),den=q/gcd(p,q);
   for(int i=0;i<n;i++)
   {
   	num=num-a[i]*den;
   	debug1(a[i]*den);
   	debug2(num,den);
   	if(num<0)
   	{
   		cout<<"NO";
   		return 0;
   	}
   	if(i<=n-2)
   		swap(num,den);
   	
   }	
   if(num!=0)
   {
   	cout<<"NO";
   }
   else
   {
   	cout<<"YES";
   }
}   