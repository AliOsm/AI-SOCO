#include <bits/stdc++.h>
using namespace std;

#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()

using ll = long long;
using ld = long double;

ll n, k, A, B;
map<ll, ll> m;

ll count(ll l, ll r) {
    ll res = 0;
    auto it = m.lower_bound(l);
    while (it != m.end() && it->first < r) {
        res += it->second;
        it++;
    }
    return res;
}

ll calc(ll l, ll r){
    ll res = 0;
    ll c = count(l, r);
    if (c == 0) {
        res = A;
    } else if (r - l == 1) {
        res = B * c * (r - l);
    } else {
        ll lll = (r - l) / 2;
        res = min(B * c * (r - l), calc(l, l + lll) + calc(l + lll, r));
    }
    return res;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    string a, b;
    cin >> a >> b;
    if (sz(a) != sz(b)) {
        cout << "No" << endl;
        return 0;
    }
    for (int i = 0; i < sz(a); i++) {
        bool c = a[i] == 'a' || a[i] == 'e' || a[i] == 'i' || a[i] == 'o' || a[i] == 'u';
        bool d = b[i] == 'a' || b[i] == 'e' || b[i] == 'i' || b[i] == 'o' || b[i] == 'u';
        if (c != d) {
            cout << "No" << endl;
            return 0;
        }
    }
    cout << "Yes" << endl;
    /*ll n, k, m;
    cin >> n >> k >> m;
    vector<ll> in(n);
    for (ll i = 0; i < n; i++) {
        cin >> in[i];
    }
    sort(all(in), greater<ll>());
    while (m > 0 && sz(in) > 1) {
        in.pop_back();
        m--;
    }
    double res = 0;
    for (ll i = 0; i < sz(in); i++) {
        in[i] += min(k, m);
        m -= min(k, m);
        res += in[i];
    }
    cout << fixed << setprecision(10) << res / sz(in) << endl;*/
    /*cin >> n >> k >> A >> B;
    for (ll i = 0; i < k; i++) {
        ll x;
        cin >> x;
        x--;
        m[x]++;
    }
    cout << calc(0, (1ll << n)) << endl;*/
}
