#include <bits/stdc++.h>
#define fr first
#define sc scanf
#define pf printf
#define se second
#define ll long long
#define pb push_back
#define mk make_pair
#define ld long double
#define pr pair<int,int>
#define sz(s) int(s.size())
#define piip pair< pair<ll,ll>,ll >
#define fin(xs) freopen( s, "r", stdin )
#define fout(s) freopen( s, "w", stdout )
#define TIME ios_base::sync_with_stdio(0)
using namespace std;

const ll INF = 1e9;
const ll N = 1e6 + 1;
const ll mod = 1e9 + 7;
const long double eps = 1E-7;

ll ans, an[N];
int n, t, l, r, k, a[N], d[N];
vector<pair<int,pair<int,pair<int,int>>>>V;
int main()
{
    sc( "%d%d", &n, &t );
    for( int i = 0; i < n; i ++ )
        sc( "%d", &a[i] );
    k = 1.514 * sqrt( n ) + 1;
    for( int i = 0; i < t; i ++ )
    {
        sc( "%d%d", &l, &r );
        l --, r --;
        V.pb( { l/k, { r, { l, i } } } );
    }
    sort( V.begin(), V.end() );
    l = r = 0, d[a[0]] ++, ans = a[0];
    for( auto k: V )
    {
        while( r > k.se.fr )
        {
            ans -= 1ll * d[a[r]] * d[a[r]] -- * a[r];
            ans += 1ll * d[a[r]] * d[a[r]] * a[r --];
        }
        while( r < k.se.fr )
        {
            ans -= 1ll * d[a[++r]] * d[a[r]] ++ * a[r];
            ans += 1ll * d[a[r]] * d[a[r]] * a[r];
        }
        while( l > k.se.se.fr )
        {
            ans -= 1ll * d[a[--l]] * d[a[l]] ++ * a[l];
            ans += 1ll * d[a[l]] * d[a[l]] * a[l];
        }
        while( l < k.se.se.fr )
        {
            ans -= 1ll * d[a[l]] * d[a[l]] -- * a[l];
            ans += 1ll * d[a[l]] * d[a[l]] * a[l ++];
        }
        an[k.se.se.se] = ans;
    }
    for( int i = 0; i < t; i ++ )
        pf( "%I64d\n", an[i] );
}
