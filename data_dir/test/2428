#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>

#define F first
#define S second
#define eps 1e-8
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define INF 2000000000

typedef long long ll;

using namespace std;
int n, m, k, ok[22][22], a[22], x, y, c, b[22];
bool w[22];
ll ans, dp[1333333][22];
int main()
{
	cin >> n >> m >> k;
	for(int i = 1; i <= n; i++)
		cin >> a[i];
	for(int i = 0; i < k; i++){
		cin >> x >> y >> c;
		ok[x][y] = c;
	}
	b[0] = 1;
	for(int i = 1; i <= n; i++)
		b[i] = 2 * b[i - 1];
	for(int i = 0; i < n; i++)
		dp[b[i]][i] = a[i + 1];
	for(int mask = 0; mask < b[n]; mask++)
	for(int i = 0; i < n; i++)
		if(mask & b[i])
	        for(int j = 0; j < n; j++)
	        	if(!(mask & b[j]))
	        		dp[mask | b[j]][j] = max(dp[mask | b[j]][j], dp[mask][i] + ok[i + 1][j + 1] + a[j + 1]);
	for(int mask = 0; mask < b[n]; mask++){
		int col = 0, cur = mask;
		while(cur){
			col += cur & 1;
			cur /= 2;
		}
		if(col == m)
		for(int i = 0; i < n; i++)
			ans = max(ans, dp[mask][i]);			
	}
	cout << ans;	    	
	return 0;
}
