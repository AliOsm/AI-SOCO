#include <bits/stdc++.h>
#define MAX (ll)(2e3 + 7)
#define MOD (ll)(1e9 + 7)

using namespace std;
using ll = long long;
using ld = long double;

vector<int> v1[MAX], v2[MAX];

int main () {
	int n, k;
	cin >> n >> k;
	char ch[n][n];
	int ans = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> ch[i][j];
		}
	}
	for (int i = 0; i < n; i++) {
		int st = -1, en = -1;
		for (int j = 0; j < n; j++) {
			if (ch[i][j] == 'B') {
				if (st == -1) {
					st = j;
				}
				en = j;
			}
		}	
		if (st == -1) {
			ans++;
		}
		else if ((en - st + 1) <= k) {
			for (int x = st; x >= 0 && x >= st + (en - st + 1 - k); x--) {
				v1[x].push_back (i);
			}
		}
	}
	for (int j = 0; j < n; j++) {
		int st = -1, en = -1;
		for (int i = 0; i < n; i++) {
			if (ch[i][j] == 'B') {
				if (st == -1) {
					st = i;
				}
				en = i;
			}
		}
		if (st == -1) {
			ans++;
		}
		else if ((en - st + 1) <= k) {
			for (int x = st; x >= 0 && x >= st + (en - st + 1 - k); x--) {
				v2[x].push_back (j);
			}
		}
	}
	int rm = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			int ma = 0;
			ma += upper_bound (v1[j].begin (), v1[j].end (), i + k - 1) - lower_bound (v1[j].begin (), v1[j].end (), i);
			ma += upper_bound (v2[i].begin (), v2[i].end (), j + k - 1) - lower_bound (v2[i].begin (), v2[i].end (), j);
			rm = max (rm, ma);
		}
	}
	cout << ans + rm << "\n";
}
