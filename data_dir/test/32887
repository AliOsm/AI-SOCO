#include <bits/stdc++.h>
using namespace std;

int N, M;
char S[1003][1003];
int dp[1003][1003][4][3];

int solve(int x, int y, int dir, int turn)
{
    if(turn<0 || x<0 || y<0 || x>=N || y>=M || S[x][y]=='*')
        return 0;

    if(S[x][y]=='T')
        return 1;

    if(dp[x][y][dir][turn]!=-1)
        return dp[x][y][dir][turn];

    int ans = 0;

    if(dir==0)
    {
        ans |= solve(x-1, y, 0, turn);
        ans |= solve(x-1, y, 1, turn-1);
        ans |= solve(x-1, y, 2, turn-1);
        ans |= solve(x-1, y, 3, turn-1);
    }
    else if(dir==1)
    {
        ans |= solve(x, y+1, 0, turn-1);
        ans |= solve(x, y+1, 1, turn);
        ans |= solve(x, y+1, 2, turn-1);
        ans |= solve(x, y+1, 3, turn-1);
    }
    else if(dir==2)
    {
        ans |= solve(x+1, y, 0, turn-1);
        ans |= solve(x+1, y, 1, turn-1);
        ans |= solve(x+1, y, 2, turn);
        ans |= solve(x+1, y, 3, turn-1);
    }
    else
    {
        ans |= solve(x, y-1, 0, turn-1);
        ans |= solve(x, y-1, 1, turn-1);
        ans |= solve(x, y-1, 2, turn-1);
        ans |= solve(x, y-1, 3, turn);
    }

    return dp[x][y][dir][turn] = ans;
}

int main()
{
    scanf("%d %d", &N, &M);

    for(int i=0; i<N; i++)
        scanf(" %s", S[i]);

    int x, y;

    for(int i=0; i<N; i++)
        for(int j=0; j<M; j++)
            if(S[i][j]=='S')
                x = i, y = j;

    memset(dp, -1, sizeof(dp));

    if(solve(x, y, 0, 2) || solve(x, y, 1, 2) || solve(x, y, 2, 2) || solve(x, y, 3, 2))
        printf("YES\n");
    else
        printf("NO\n");

    return 0;
}
