#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;

const ll mod = 1e9+7;

vector<ll> fact, ifact;

ll binom(ll n, ll k) {
  if (n < 0 or k < 0 or n-k < 0) return 1;
  return (fact[n]*ifact[k]%mod)*ifact[n-k]%mod;
}

 
ll fastexp (ll a, ll b, ll n) {
  ll res = 1;
  while (b) {
      if (b & 1) res = res*a%n; 
      a = a*a%n;
      b >>= 1;
  }
  return res;
}



ll inv(ll x) {
  return fastexp(x, mod-2, mod);
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
  int n, m;
  cin >> n >> m;
  
  if (m == 1) {
    cout << n*(n+1)/2 << endl;
    return 0;
  }
  
  
  fact = ifact = vector<ll>(4000, 1);
  for (ll i = 1; i < 4000; i++) {
    fact[i] = fact[i-1]*i%mod;
    ifact[i] = inv(fact[i]);
  }

  vector<ll> totd(n, 0), tota(n, 0);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j+i < n; j++) {
      totd[i] = (totd[i] + binom(j+m-2, j))%mod;
    }
    for (int j = 0; j <= i; j++) {
      tota[i] = (tota[i] + binom(j+m-2, j))%mod;
    }
  }

  
  
  /*
  
  for (int i = 0; i < n; i++)
    cerr << totd[i] << " ";
  cerr << endl << endl;
  */
  ll sol = 0;
  for (int i = 0; i < n; i++)
    for (int j = 0; j <= i; j++)
      sol = (sol+ totd[i]*tota[j])%mod;
  cout << sol << endl;
}

