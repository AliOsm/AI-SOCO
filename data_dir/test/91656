#include<bits/stdc++.h>
using namespace std;
const int N = 2e5 + 5;
long long n, a[N], m, sq[10000005], ans[N], k;
vector < pair < long long, long long > > g[N];
vector < long long > b;

bool f(long long x){
    long long s = sqrt(x);
    for (long long i = s - 2; i <= s + 2; ++i){
        if (i * i == x)return 1;
    }
    return 0;
}

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    for (long long i = 1; i <= 100000000; ++i){
        if (i * i > 1e13)break;
        m = i;
        sq[i] = i * i;
    }
    /*for (int i = 1; i <= 200000; ++i){
        if (i % 2 == 0)continue;
        int x = i;
        g[x].push_back(make_pair(i / 2, 1));
        for (int j = 1; j <= 200000; ++j){
            x += i + j * 2;
            if (x > 200000)break;
            g[x].push_back(make_pair(i / 2, j + 1));
        }
    }
    for (int i = 1; i <= 100; ++i){
        cout <<"AA"<<i<<" "<<g[i].size()<<endl;
        for (int j = 0; j < g[i].size(); ++j){
            cout <<g[i][j].first<<" "<<g[i][j].second<<endl;
        }
    }
    b.push_back(1);*/
    cin >>n;
    n /= 2;
    for (int i = 1; i <= n; ++i){
        cin >>a[i];
    }
    for (int i = 1; i <= m; ++i){
        if (!f(a[1] + sq[i]))continue;
        long long s = a[1] + sq[i];
        int r = 1;
        while (r <= m && sq[r] != s){
            r++;
        }
        if (r > m)continue;
        ans[1] = sq[i];
        ans[2] = a[1];
        k = 2;
        for (int j = 2; j <= n; ++j){
            while (r <= m && sq[r] - a[j] <= s){
                r++;
            }
            if (r > m)break;
            while (r <= m && !f(sq[r] - a[j])){
                r++;
            }
            if (r > m)break;
            ans[++k] = sq[r] - a[j] - s;
            ans[++k] = a[j];
            s = sq[r];
        }
        if (k == n + n){
            cout <<"Yes"<<endl;
            for (int i = 1; i <= k; ++i){
                cout <<ans[i]<<" ";
            }
            return 0;
        }
    }
    cout <<"No";
}
