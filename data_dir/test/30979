//IOI 2021
//this will accept, By the order of the peaky fucking blinders
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

const int MAXN = 2 * 100 * 1000 + 17;

int n, p1[MAXN], p2[MAXN], ans[MAXN], ted[MAXN];
ordered_set os;

void add_cnt(int p[]) {
	for (int i = 0; i < n; i++)
		os.insert(i);
	for (int i = 0; i < n; i++)
		ted[n - i - 1] += os.order_of_key(p[i]), os.erase(p[i]);
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> p1[i];
	for (int i = 0; i < n; i++)
		cin >> p2[i];
	add_cnt(p1);
	add_cnt(p2);
	for (int i = 1; i < n; i++)
		ted[i + 1] += ted[i] / (i + 1), ted[i] %= i + 1;
	for (int i = 0; i < n; i++)
		os.insert(i);
	for (int i = 0; i < n; i++) {
		ans[i] = *os.find_by_order(ted[n - i - 1]), os.erase(ans[i]);
		cout << ans[i] << ' ';
	}
	return 0;
}
