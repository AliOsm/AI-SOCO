#include <bits/stdc++.h>
using namespace std;

const int N = 2005;

int n, k;
char a[N][N];
int prefr[N][N], sufr[N][N];
int prefc[N][N], sufc[N][N];
int pref2r[N][N], pref2c[N][N];
int wlr[N], wlc[N];

int main() {
  scanf("%d %d", &n, &k);
  for (int i = 0; i < n; i++)
    scanf(" %s", a[i]);

  for (int i = 0; i < n; i++) {
    prefr[i][0] = (a[i][0] == 'W');
    for (int j = 1; j < n; j++)
      prefr[i][j] = prefr[i][j - 1] + (a[i][j] == 'W');
    sufr[i][n - 1] = (a[i][n - 1] == 'W');
    for (int j = n - 2; j >= 0; j--)
      sufr[i][j] = sufr[i][j + 1] + (a[i][j] == 'W');
  }

  for (int i = 0; i < n; i++) {
    prefc[i][0] = (a[0][i] == 'W');
    for (int j = 1; j < n; j++)
      prefc[i][j] = prefc[i][j - 1] + (a[j][i] == 'W');
    sufc[i][n - 1] = (a[n - 1][i] == 'W');
    for (int j = n - 2; j >= 0; j--)
      sufc[i][j] = sufc[i][j + 1] + (a[j][i] == 'W');
  }

  for (int i = 0; i < n; i++) {
    for (int j = k - 1; j < n; j++) {
      int z = 0;
      if (j - k >= 0)
        z += prefr[i][j - k];
      if (j + 1 < n)
        z += sufr[i][j + 1];
      if (z == n - k)
        pref2r[i][j] = 1;
    }
  }

  for (int i = 1; i < n; i++)
    for (int j = k - 1; j < n; j++)
      pref2r[i][j] += pref2r[i - 1][j];

  for (int i = 0; i < n; i++) {
    for (int j = k - 1; j < n; j++) {
      int z = 0;
      if (j - k >= 0)
        z += prefc[i][j - k];
      if (j + 1 < n)
        z += sufc[i][j + 1];
      if (z == n - k)
        pref2c[i][j] = 1;
    }
  }

  for (int i = 1; i < n; i++)
    for (int j = k - 1; j < n; j++)
      pref2c[i][j] += pref2c[i - 1][j];

  wlr[0] = 1;
  for (int j = 0; j < n; j++)
    wlr[0] &= (a[0][j] == 'W');
  for (int i = 1; i < n; i++) {
    int add = 1;
    for (int j = 0; j < n; j++)
      add &= (a[i][j] == 'W');
    wlr[i] = wlr[i - 1] + add;
  }

  wlc[0] = 1;
  for (int i = 0; i < n; i++)
    wlc[0] &= (a[i][0] == 'W');
  for (int j = 1; j < n; j++) {
    int add = 1;
    for (int i = 0; i < n; i++)
      add &= (a[i][j] == 'W');
    wlc[j] = wlc[j - 1] + add;
  }

  int ans = 0;
  for (int i = k - 1; i < n; i++) {
    for (int j = k - 1; j < n; j++) {
      int cur = pref2r[i][j] + pref2c[j][i] + wlr[n - 1] - wlr[i] + wlc[n - 1] - wlc[j];
      if (i - k >= 0)
        cur += wlr[i - k];
      if (j - k >= 0)
        cur += wlc[j - k];
      if (j - k >= 0)
        cur -= pref2c[j - k][i];
      if (i - k >= 0)
        cur -= pref2r[i - k][j];
      ans = max(ans, cur);
    }
  }

  printf("%d\n", ans);
  return 0;
}