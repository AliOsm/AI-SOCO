/* Author: Dhruv Rastogi */
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second
const long double PI = acos(-1.0);

int a[105][105];
int dp[105][105][2];
void solve(){  
	int n,m;
	cin>>n>>m;
	rep(i,0,n){
		rep(j,0,m){
			cin>>a[i][j];
			a[i][j]-=(i+j);
		}
	}  
	int ans=4e18;
	rep(i,0,n){
		rep(j,0,m){
			//fix minimum
			int mn=a[i][j];
			rep(i,0,n){
				rep(j,0,m){
					rep(k,0,2){
						dp[i][j][k]=4e18;
					}
				}
			}
			if(a[0][0]>=mn){
				dp[0][0][0]=a[0][0];
			}
			if(a[n-1][m-1]>=mn){
				dp[n-1][m-1][1]=a[n-1][m-1];
			}
			rep(i,0,n){
				rep(j,0,m){
					if(i+j==0) continue;
					if(a[i][j]<mn){
						continue;
					}
					if(i){
						dp[i][j][0]=min(dp[i][j][0],dp[i-1][j][0]+a[i][j]);
					}
					if(j){
						dp[i][j][0]=min(dp[i][j][0],dp[i][j-1][0]+a[i][j]);
					}
				}
			}
			repd(i,n-1,0){
				repd(j,m-1,0){
					if(i+j==n+m-2){
						continue;
					}
					if(a[i][j]<mn){
						continue;
					}
					if(i!=n-1){
						dp[i][j][1]=min(dp[i][j][1],dp[i+1][j][1]+a[i][j]);
					}
					if(j!=m-1){
						dp[i][j][1]=min(dp[i][j][1],dp[i][j+1][1]+a[i][j]);
					}
				}
			}
			ans=min(ans,dp[i][j][1]+dp[i][j][0]-(n+m)*mn);
		}
	}
	cout<<ans<<endl;
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}