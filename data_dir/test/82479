#include<bits/stdc++.h>
//#define DEBUG
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FORZ(i,n) for(int i=0;i<n;i++)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define piii pair<pair<int,int>,int>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007  
#define LD long long double
#define bpc __builtin_popcount
#define gentum getnum
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

char S[354];
int n;
int endreached=0;
int no=0;

ll rec()
{
    if(n==0)return 0;

    n--;
    scanf("%s",S+1);
    if(S[1]=='a')
    {
        ll ans=rec();

        if(ans==-1||ans>(ll)UINT32_MAX)
        {
            no=1;
            return -1;
        }

        ans++;

        if(ans==-1||ans>(ll)UINT32_MAX)
        {
            no=1;
            return -1;
        }

        return ans;
    }
    if(S[1]=='f')
    {
        ll x=getnum();
        ll ans=0;

        while(endreached==0)
        {
            ll y=rec();

            if(y==-1||y>(ll)UINT32_MAX)
            {
                no=1;
                return -1;
            }

            ans=ans+y;

            if(ans==-1||ans>(ll)UINT32_MAX)
            {
                no=1;
                return -1;
            }
        }
        endreached=0;

        ans=ans*x;

        if(ans==-1||ans>(ll)UINT32_MAX)
        {
            no=1;
            return -1;
        }

        return ans;
    }
    if(S[1]=='e')
    {
        endreached=1;
        return 0;
    }
}

int main()
{
    n=getnum();

    ll ans=0;

    while(n)
    {
        ll x=rec();
        ans+=x;

        if(x==-1||ans>(ll)UINT32_MAX)
        {
            no=1;
            ans=-1;
            break;
        }
    }

    if(ans==-1||ans>(ll)UINT32_MAX||no)
    {
        cout<<"OVERFLOW!!!";
    }
    else
    {
        cout<<ans;
    }
    
}