#include <iostream>
#include <cmath>
#include <algorithm>
#include <string.h>
#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <sstream>

//#pragma comment(linker, "/STACK:167772160")
using namespace std;

#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define sz(s) (int)s.size()
#define pb push_back
#define mp make_pair
#define y1 kfjad
#define y0 fkasj
typedef long long Int;
const int inf=1000000000;
const double pi=2*acos(0.0);
const int md=30000001;

vector<int> g[100001];
bool z[100001];
int pr[100001][19];
int tin[100001],tout[100001];
int tt;
map<pair<int,int>,int> M;
int k[100001],ans[100001];
int num[100001];

void dfs(int v)
{
	tin[v]=tt++;
	z[v]=false;
	FOR(i,0,sz(g[v])-1)
	{
		int to=g[v][i];
		if(z[to])
		{
			pr[to][0]=v;
			FOR(j,1,18)
				pr[to][j]=pr[pr[to][j-1]][j-1];
			dfs(to);
		}
	}
	tout[v]=tt++;
}

inline bool ok(int x,int y)
{
	return tin[x]<=tin[y] && tout[x]>=tout[y];
}

int lca(int x,int y)
{
	if(ok(x,y))return x;
	if(ok(y,x))return y;
	for(int i=18;i>=0;--i)
		if(pr[x][i] && !ok(pr[x][i],y))x=pr[x][i];
	return pr[x][0];
}

void DFS(int v)
{
	z[v]=false;
	FOR(i,0,sz(g[v])-1)
	{
		int to=g[v][i];
		if(z[to])
		{
			DFS(to);
			ans[M[mp(min(v,to),max(v,to))]]=k[to];
			k[v]+=k[to];
		}
	}
	return;
}

int main()
{
	//freopen("input.txt","r",stdin);
	int n;
	cin>>n;
	FOR(i,1,n)g[i].clear();
	FOR(i,1,n-1)
	{
		int x,y;
		scanf("%d %d",&x,&y);
		M[mp(min(x,y),max(x,y))]=i;
		g[x].pb(y);
		g[y].pb(x);
	}
	tt=0;
	memset(pr,0,sizeof(pr));
	memset(z,true,sizeof(z));
	dfs(1);


	int kk;
	scanf("%d",&kk);
	memset(k,0,sizeof(k));
	FOR(i,1,kk)
	{
		int x,y;
		scanf("%d %d",&x,&y);
		int v=lca(x,y);
		//cout<<x<<" "<<y<<" "<<v<<endl;
		k[x]++;
		k[y]++;
		k[v]-=2;
	}

	memset(z,true,sizeof(z));
	DFS(1);

	FOR(i,1,n-1)cout<<ans[i]<< " ";
	cout<<endl;



	return 0;
}