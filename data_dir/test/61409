#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

typedef long long int64;
typedef double real;

const int MaxN = 102, MaxC = 0x3F3F3F3F, NA = -1;

char f [MaxN] [MaxN];
int a, b, c, d, n;

int main (void)
{
 int i, j, k, l, v, x, y;
 while (scanf (" %d %d %d %d %d", &a, &b, &c, &d, &n) != EOF)
 {
  x = 0;
  if (a & 1)
  {
   y = b - 1;
   v = -1;
  }
  else
  {
   y = 0;
   v = +1;
  }
  memset (f, '.', sizeof (f));
  for (i = 0; i < n; i++)
   for (scanf (" %d", &k); k > 0; k--)
   {
    assert (x < a + c);
    l = (x >= a) ? d : b;
    f[y][x] = i + 'a';
    y += v;
    if (y < 0)
    {
     y = 0;
     x++;
     v = -v;
    }
    else if (y >= l)
    {
     y = l - 1;
     x++;
     v = -v;
    }
   }
  assert (x == a + c);
  printf ("YES\n");
  for (i = 0; i < max (b, d); i++)
  {
   for (j = 0; j < a + c; j++)
    putchar (f[i][j]);
   putchar ('\n');
  }
 }
 return 0;
}
