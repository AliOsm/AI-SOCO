#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353 
#define mx 300005
#define inf 1e17
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
ll fact[mx];
bool cmp(pair<int,int> p1 , pair<int,int> p2)
{
	return p1.ss < p2.ss;
}
main()
{
	fact[0] = 1;
	fl(i,1,mx)
	{
		fact[i] = fact[i-1]*i%mod;
	}
 	int n;
 	cin>>n;
 	ll ans = fact[n]; // n! total permutations
 	pair<int,int> p[n];
 	fl(i,0,n)
 	{
 		cin>>p[i].ff>>p[i].ss;
 		
 	}
 	ll first_sorted = 1 ,  second_sorted = 1 , both_sorted = 1;
 	sort(p,p+n);
 	ll cnt = 1;
 	fl(i,1,n)
 	{
 		if(p[i].ff == p[i-1].ff)
 			cnt++;
 		else
 		{
 			first_sorted = first_sorted * fact[cnt] %mod;
 			cnt = 1;
 		}
 	}
 	first_sorted = first_sorted * fact[cnt] %mod;

 	sort(p,p+n,cmp);
 	cnt = 1;
 	fl(i,1,n)
 	{
 		if(p[i].ss == p[i-1].ss)
 			cnt++;
 		else
 		{
 			second_sorted = second_sorted * fact[cnt] %mod;
 		//	cout<<i<<" "<<cnt<<endl;
 			cnt = 1;

 		}
 	}
 	second_sorted = second_sorted * fact[cnt] %mod;

 	cnt = 1;
 	bool flag = 0;
 	sort(p,p+n);
 	fl(i,1,n)
 	{
 		if(p[i].ss == p[i-1].ss && p[i].ff == p[i-1].ff)
 			cnt++;
 		else
 		{
 			if(!(p[i].ff>=p[i-1].ff && p[i].ss>=p[i-1].ss))
 			{
 			//	cout<<p[i].ss<<" "<<p[i-1].ss<<endl;
 				flag = 1;
 			}
 			both_sorted = both_sorted * fact[cnt] %mod;

 			cnt = 1;
 		}
 	}
 	both_sorted = both_sorted * fact[cnt] %mod;
 	if(flag)
 	{
 		both_sorted = 0;
 	}
 	//cout<<first_sorted<<" "<<second_sorted<<" "<<both_sorted<<endl;
 	ans = ans - first_sorted -second_sorted + both_sorted + 2*mod;
 	ans%=mod;
 	cout<<ans;
 
}