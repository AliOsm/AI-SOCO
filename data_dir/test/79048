//bismillahir rahmanir rahim            //Author:Fayed Anik
 
#include <bits/stdc++.h> 
 
using namespace std;
 
 
#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e17
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")

vector<ll>edge[300005];

ll p[300005],npar[300005];

void dfs(ll u,ll par){
    p[u]=1;
    npar[u]=par;
    ll v;
    for(ll i=0;i<edge[u].size();i++){
        v=edge[u][i];
        if(par!=v){
            dfs(v,u);
            p[u] += p[v];
        }
    }
}
int main(){
    ll n,x,y,u,v;
    sfl(n),sfl(x),sfl(y);
    FOR(i,n-1){
        sfl(u),sfl(v);
        edge[u].pb(v);
        edge[v].pb(u);
    }
    dfs(x,x);
    u=x,v=y;
    while(npar[v]!=u){
        v=npar[v];
    }   
    ll ans=n*(n-1)-(p[x]-p[v])*p[y];
    pfl(ans);
    return 0;
}