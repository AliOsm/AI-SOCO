#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 105;
int N, M;
char grid[MAXN][MAXN];

bool checkRows(int r, char c)
{
    for (int i = r; i < r + N/3; i++)
        for (int j = 0; j < M; j++)
            if (grid[i][j] != c)
                return false;
    return true;
}

bool checkCol(int r, char c)
{
    for (int i = r; i < r + M/3; i++)
        for (int j = 0; j < N; j++)
            if (grid[j][i] != c)
                return false;
    return true;
}

int main()
{
    ios::sync_with_stdio(0);

    cin >> N >> M;
    for (int i = 0; i < N; i++)
        cin >> grid[i];

    if (N % 3 == 0) //check horizontal
    {
        char a = grid[0][0], b = grid[N/3][0], c = grid[2*N/3][0];
        if (a != b && a != c && b != c && checkRows(0, a) && checkRows(N/3, b) && checkRows(2*N/3, c))
        {
            cout << "YES\n";
            return 0;
        }
    }
    if (M % 3 == 0) //check vertical
    {
        char a = grid[0][0], b = grid[0][M/3], c = grid[0][2*M/3];
        if (a != b && a != c && b != c && checkCol(0, a) && checkCol(M/3, b) && checkCol(2*M/3, c))
        {
            cout << "YES\n";
            return 0;
        }
    }

    cout << "NO\n";

    return 0;
}
