///****In the name of Allah, most Gracious, most Compassionate****//

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <ll, ll> pii;

#define NL cout<<"\n";
#define ALL(a) a.begin(), a.end()
#define DBG(a) cout<< #a <<" --> "<<(a)<<endl;
#define FastIO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const ll N=3e5+5;
const ll oo=1e9+7;
ll dp[2][N];
ll sum[2][N];

int32_t main()
{
    FastIO;
    ll n,a,b,k;
    cin>>n>>a>>b>>k;
    ll now = 0;
    for(ll i=1;i<=n;i++)
    {
        dp[now] [i] =1;
        sum[now][i]= (sum[now][i-1] + dp[now][i])%oo;
    }
    while(k--)
    {
        now= !now;
        for(ll i=1;i<=n;i++)
        {
//            if(i==b) continue;
            ll d = abs(i-b);
            ll lo = max(1LL,i-d+1);
            ll hi = min(n,i+d-1);

            dp[now][i] = ( sum[!now][hi]- sum[!now][lo-1]  -dp[!now][i] )%oo;

        }
        for(ll i=1;i<=n;i++)
        {
            sum[now][i] = (sum[now][i-1] + dp[now][i])%oo;
        }
    }
    ll ans =dp[now][a]%oo;
    ans+=oo;
    ans%=oo;
    cout<<ans;
}
