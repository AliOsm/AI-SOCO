// Daniel Grzegorzewski
// while (clock()<=69*CLOCKS_PER_SEC)
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
// #pragma GCC target ("avx2")
// #pragma GCC optimization ("O3")
// #pragma GCC optimization ("unroll-loops")
 
#define MP make_pair
#define PB push_back
#define ST first
#define ND second
#define int long long

using namespace __gnu_pbds;
using namespace std;
 
template <typename T>
using ordered_set =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
 
//X.find_by_order(k); - zwraca iterator na k-ty element (numeracja od zerowego)
//X.order_of_key(k); - zwraca liczbę elementów ostro mniejszych niż k
 
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
typedef long long LL;
 
void init_ios() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
}

int t, n, g, b;
 
int calc(int x) {
  int cnt = x/(g+b);
  int res = g*cnt;
  x -= (g+b)*cnt;
  res += min(g, x);
  return res;
}

signed main() {
  init_ios();
  cin >> t;
  while (t--) {
    cin >> n >> g >> b;
    int x1 = n;
    n = (n+1)/2;
    int x2 = 3e18, x3;
    while (x2-x1 > 1) {
      x3 = (x1+x2)/2;
      if (calc(x3) >= n)
        x2 = x3;
      else
        x1 = x3;
    }
    if (calc(x1) >= n)
      cout<<x1<<"\n";
    else
      cout<<x2<<"\n";
  }
}