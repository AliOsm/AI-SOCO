#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef pair<ll,ll> p2;
p2 v[1005][1005];
ll n,vis[1005][1005];
char res[1005][1005];
void dfs(ll i,ll j,ll pi,ll pj){
  vis[i][j]=1;
  ll f=0;
  if(i>0&&vis[i-1][j]==0&&v[i-1][j].first==(-1)){
    res[i][j]='U';
    f=1;
    dfs(i-1,j,i,j);
  }
  if(i<n-1&&vis[i+1][j]==0&&v[i+1][j].first==(-1)){
    res[i][j]='D';
    f=1;
    dfs(i+1,j,i,j);
  }
  if(j>0&&vis[i][j-1]==0&&v[i][j-1].first==(-1)){
    res[i][j]='L';
    f=1;
    dfs(i,j-1,i,j);
  }
  if(j<n-1&&vis[i][j+1]==0&&v[i][j+1].first==(-1)){
    res[i][j]='R';
    f=1;
    dfs(i,j+1,i,j);
  }
  if(!f&&(!(pi==i&&pj==j))){
    if(res[pi][pj]=='D')
      res[i][j]='U';
    else if(res[pi][pj]=='U')
      res[i][j]='D';
    else if(res[pi][pj]=='L')
      res[i][j]='R';
    else
      res[i][j]='L';
  }
}
int main(){
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  cin>>n;
  queue<p2> q;
  for(ll i=0;i<n;i++)
    for(ll j=0;j<n;j++){
      res[i][j]='0';
      cin>>v[i][j].first>>v[i][j].second;
      if(v[i][j].first==(-1))
        continue;
      v[i][j].first--;
      v[i][j].second--;
      if(i==v[i][j].first&&j==v[i][j].second){
        q.push({i,j});
        vis[i][j]=1;
        res[i][j]='X';
      }
    }
  while(!q.empty()){
    ll i=q.front().first,j=q.front().second;
    ll a=v[i][j].first,b=v[i][j].second;
    q.pop();
    if(i>0&&vis[i-1][j]==0&&v[i-1][j].first==a&&v[i-1][j].second==b){
      vis[i-1][j]=1;
      q.push({i-1,j});
      res[i-1][j]='D';
    }
    if(i<n-1&&vis[i+1][j]==0&&v[i+1][j].first==a&&v[i+1][j].second==b){
      vis[i+1][j]=1;
      q.push({i+1,j});
      res[i+1][j]='U';
    }
    if(j>0&&vis[i][j-1]==0&&v[i][j-1].first==a&&v[i][j-1].second==b){
      vis[i][j-1]=1;
      q.push({i,j-1});
      res[i][j-1]='R';
    }
    if(j<n-1&&vis[i][j+1]==0&&v[i][j+1].first==a&&v[i][j+1].second==b){
      vis[i][j+1]=1;
      q.push({i,j+1});
      res[i][j+1]='L';
    }
  }
  for(ll i=0;i<n;i++)
    for(ll j=0;j<n;j++)
      vis[i][j]=0;
  for(ll i=0;i<n;i++)
    for(ll j=0;j<n;j++)
      if(!vis[i][j]&&v[i][j].first==(-1))
        dfs(i,j,i,j);
  for(ll i=0;i<n;i++)
    for(ll j=0;j<n;j++)
      if(res[i][j]=='0'){
        cout<<"INVALID";
        exit(0);
      }
  cout<<"VALID\n";
  for(ll i=0;i<n;i++){
    for(ll j=0;j<n;j++)
      cout<<res[i][j];
    cout<<endl;
  }
}