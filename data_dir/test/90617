#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

const int N = 301;
int n;
int l[N], c[N];

map<pair<int, pii>, int> memo;

int solve(int idx, int gcd, bool f)
{
	if (idx == n)
	{
		if (!f || gcd != 1)
			return 2e9;
		return 0;
	}

	if (memo.find(mp(idx, gcd, f)) != memo.end())
		return memo[mp(idx, gcd, f)];

	int ret = solve(idx + 1, gcd, f);
	ret = min(ret, c[idx] + solve(idx + 1, __gcd(gcd, l[idx]), 1));

	return memo[mp(idx, gcd, f)] = ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;
	rep(i, 0, n) cin >> l[i];
	rep(i, 0, n) cin >> c[i];

	cout << (solve(0, 0, 0) == 2e9 ? -1 : solve(0, 0, 0));

	return 0;
}
