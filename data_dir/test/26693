#include<bits/stdc++.h>
using namespace std;
int n,m;
bool vis[100010];
vector<int> v[100010];
int vl[100010];
vector<int> ans,ret;
int sum=0;
void dfs(int np)
{
	ans.push_back(np);
	vis[np]=1;
	sum+=vl[np];
	vl[np]^=1;
	for(auto &x:v[np])
	{
		if(vis[x])continue;
		dfs(x);
		ans.push_back(np);
		vl[np]^=1;
		if(vl[x])
		{
			ans.push_back(x);
			vl[x]^=1;
			ans.push_back(np);
			vl[np]^=1;
		}
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1,ti,tj;i<=m;i++)
	{
		scanf("%d%d",&ti,&tj);
		v[ti].push_back(tj);
		v[tj].push_back(ti);
	}
	for(int i=1;i<=n;i++)scanf("%d",&vl[i]);
	for(int i=1;i<=n;i++)
	{
		if(!vis[i])
		{
			sum=0;
			ans.clear();
			dfs(i);
			if(sum==0)continue;
			if(vl[i])ans.pop_back();
			if(!ans.empty())
			{
				if(!ret.empty())
				{
					puts("-1");
					return 0;
				}
				ret=ans;
			}
		}
	}
	printf("%d\n",ret.size());
	for(auto &x:ret)printf("%d ",x);
	return 0;
}