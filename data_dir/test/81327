#include<bits/stdc++.h>

using namespace std;

#define pb push_back

const int maxi=3e5+6;

const long long mo=1e9+7;

vector<int> v[maxi];
long long dp[3][11][maxi],sum[maxi][12];
int x,y,n;
long long m,k;

void ocisti(int len, int len1)
{
    for (int i=0;i<=len;i++)
    for (int j=0;j<=len1;j++)
        sum[i][j]=0;
}

void dfs(int pred, int tr)
{

    for (int i:v[tr])
        if (i!=pred)
           dfs(tr,i);

    ocisti(v[tr].size(),x);
   sum[0][0]=1;

      for (int j=0;j<v[tr].size();j++)
        if (v[tr][j]!=pred)
       {
           for (int w=0;w<=x;w++)
            for (int l=0;l<=w;l++)
                 sum[j+1][w]=(sum[j+1][w]+sum[j][w-l]*(dp[0][l][v[tr][j]]+dp[1][l][v[tr][j]]+dp[2][l][v[tr][j]]))%mo;
       } else
       {
          for (int l=0;l<=x;l++)
            sum[j+1][l]=sum[j][l];
       }


    for (int i=0;i<=x;i++)
     dp[0][i][tr]=((k-1)*sum[v[tr].size()][i])%mo;


     ocisti(v[tr].size(),x);
     sum[0][0]=1;

      for (int j=0;j<v[tr].size();j++)
        if (v[tr][j]!=pred)
        {
            for (int w=0;w<=x;w++)
            for (int l=0;l<=w;l++)
                sum[j+1][w]=(sum[j+1][w]+sum[j][w-l]*(dp[0][l][v[tr][j]]))%mo;
        } else
        {
          for (int l=0;l<=x;l++)
            sum[j+1][l]=sum[j][l];
       }


  for (int i=1;i<=x;i++)
    dp[1][i][tr]=(sum[v[tr].size()][i-1])%mo;


    ocisti(v[tr].size(),x);
    sum[0][0]=1;

      for (int j=0;j<v[tr].size();j++)
        if (v[tr][j]!=pred)
        {
            for (int w=0;w<=x;w++)
            for (int l=0;l<=w;l++)
                sum[j+1][w]=(sum[j+1][w]+sum[j][w-l]*(dp[0][l][v[tr][j]]+dp[2][l][v[tr][j]]))%mo;
        } else
        {
          for (int l=0;l<=x;l++)
            sum[j+1][l]=sum[j][l];
       }

  for (int i=0;i<=x;i++)
    dp[2][i][tr]=((m-k)*sum[v[tr].size()][i])%mo;


 return ;
}

int main()
{

      cin>>n>>m;

     for (int i=1;i<n;i++)
     {
         scanf("%d%d",&x,&y);
         v[x].pb(y);
         v[y].pb(x);
     }

   cin>>k>>x;


   dfs(0,1);

  // cout<<dp[0][0][2]<<" "<<dp[1][1][2]<<" "<<dp[2][0][2]<<"\n";
  long long ans=0;

   for (int j=0;j<=x;j++)
   for (int i=0;i<3;i++)
    ans+=dp[i][j][1];

    ans%=mo;

    cout<<ans;

     return 0;
}
//posvecujem djurdjini 