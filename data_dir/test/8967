#include <bits/stdc++.h>

using namespace std;

string s;
int n;
set<string> m;
bool dp[2][100000];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> s;
    n = s.size();
    if (n >= 7) {
        dp[0][n - 2] = true;
        dp[1][n - 3] = true;
        for (int i = n - 4; i >= 5; --i) {
            string s1, s2;
            s1 = s1 + s[i] + s[i + 1];
            s2 = s2 + s[i + 2] + s[i + 3];
            if (s1 != s2) {
                dp[0][i] |= dp[0][i + 2];
            }
            dp[0][i] |= dp[1][i + 2];

            s1.clear();
            s2.clear();
            if (i <= n - 6) {
                s1 = s1 + s[i] + s[i + 1] + s[i + 2];
                s2 = s2 + s[i + 3] + s[i + 4] + s[i + 5];
                if (s1 != s2) {
                    dp[1][i] |= dp[1][i + 3];
            }

            }
            dp[1][i] |= dp[0][i + 3];

        }
    }

    for (int i = 5; i < n - 1; ++i) {
        string s1;
        if (dp[0][i]) {
            s1 = s1 + s[i] + s[i + 1];
            m.insert(s1);
        }

    }
    for (int i = 5; i < n - 1; ++i) {
        string s1;
        if (dp[1][i]) {
            s1 = s1 + s[i] + s[i + 1] + s[i + 2];
            m.insert(s1);
        }
    }
    cout << m.size() << '\n';
    for (auto it = m.begin(); it != m.end(); ++it) {
        cout << *it << '\n';
    }
    return 0;
}
