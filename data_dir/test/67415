#include <iostream>
#include <cstring>

#include <string>
#include <vector>
#include <algorithm>

using namespace std;

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

#define MAXN 200004
int N;
VI adj[MAXN];

int C[MAXN];
void dfs(int u, int p) {
   int col = 1;
   for (int v : adj[u]) {
      if (v == p) continue;
      while (col == C[u] || col == C[p])
         ++col;
      C[v] = col++;
      dfs(v, u);
   }
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(NULL);

   cin >> N;
   REP(j, N-1) {
      int u, v;
      cin >> u >> v;
      adj[u].push_back(v);
      adj[v].push_back(u);
   }
   adj[0].push_back(1);

   C[0] = 0;
   C[1] = 1;
   dfs(1, 0);

   cout << *max_element(C+1, C+N+1) << endl;
   FOR(u, 1, N)
      cout << C[u] << ' ';
   cout << endl;

   return 0;
}
