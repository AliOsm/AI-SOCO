#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <set>
#include <sstream>

using namespace std;
#define ll long long
#define pii pair<int, int>
#define mp make_pair
#define x first
#define y second
#define pb push_back
#define VI vector<int>
#define all(s) (s).begin(),(s).end()
#define L(s) (int)(s).size()
#define inf 1000000000
int n;
pair<pii, int> a[111111];
inline bool angle_less(const pair<pii, int>&a, const pair<pii, int> &b) {
    if (a.x.x == 0) return 0;
    if (b.x.x == 0) return 1;
    return 1LL * a.x.y * b.x.x < 1LL * b.x.y * a.x.x;
}
inline bool mycmp(const pair<pii, int> &a, const pair<pii, int> &b) {
    if (angle_less(a, b)) return 1;
    if (angle_less(b, a)) return 0;
    if (a.x.x != b.x.x) return a.x.x < b.x.x; else return a.x.y < b.x.y;
}

int main() {
    scanf("%d", &n);
    int bid = 0;
    for(int i = 0; i < n; ++i) {
        scanf("%d%d", &a[i].x.x, &a[i].x.y);
        a[i].y = i + 1;
        if (a[i].x < a[bid].x) bid = i;
    }

    swap(a[bid], a[0]);
    for(int i = 1; i < n; ++i) {
        a[i].x.x -= a[0].x.x;
        a[i].x.y -= a[0].x.y;
    }

    sort(a + 1, a + n, mycmp);
    int ptr = 2;
    while(!angle_less(a[1], a[ptr])) ++ptr;

    cout << a[0].y << " " << a[1].y << " " << a[ptr].y << endl;


}
