
#include <iostream>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j1234 = n; (i) < j1234; (i) ++)
#define rep1(i, n) for (int (i) = 1, j1234 = n; (i) <= j1234; (i) ++)
#define For(i, a, b) for (int (i) = (a), ub1234=b; (i) <= ub1234; (i) ++)
#define db(x) {if(debug){cout << #x << " = " << (x) << endl;}}
#define dba(a, x, y) {if(debug){cout << #a << " :";For(i, (x), (y))cout<<" "<<(a)[(i)];cout<<endl;}}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define endl '\n'
#define ll long long
#define ld long double
#define pi 3.1415926535897932384626433832795028
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const int output_precision = 15;
const bool debug = true;
// const ll MOD = ;

int M, S;
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(output_precision); cout << fixed;
  cout.tie(0);
  cin >> M >> S;
  if (M == 1)
  {
    if (S >= 10)
      cout << -1 << " " << -1 << endl;
    else
      cout << S << " " << S << endl;
    return 0;
  }
  else
  {
    // impossible to make
    // M digits numbers with sum 0
    // or sum larger than 9*M
    if (S == 0 || S > 9*M)
    {
      cout << -1 << " " << -1 << endl;
      return 0;
    }
  }

  vector<int> v;
  int s = S - 1;
  rep1(mmmm,M-1)
  {
    int add = min(9,s); 
    s -= add;
    v.pb(add);
  }
  v.pb(s+1);
  rep(i,v.size()) cout << v[v.size()-1-i];
  cout << " ";
  v.clear();
  s = S;
  rep1(mmmm,M)
  {
    int add = min(9,s); 
    s -= add;
    v.pb(add);
  }
  rep(i,v.size()) cout << v[i];
  cout << endl;

}
