#include <bits/stdc++.h>
// #pragma GCC optimize ("Ofast")
// #pragma GCC target ("sse4")
// #pragma GCC optimize ("unroll-loops")
#define ll          long long
#define ld          long double
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
using namespace std;
int diffinc[200005],res[200005];
pii edges[200005];
vector<pair<int,pii>> adj[200005];
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int n,m,i,a,b,c;
	set<pii> s;
	cin>>n>>m;
	for(i=0;i<m;i++){
		res[i]=-1;
		cin>>a>>b>>c;
		edges[i]={a,b};
		adj[a].pb({b,{c,i}});
		adj[b].pb({a,{c,i}});
		diffinc[a]+=c;
		diffinc[b]+=c;
	}
	diffinc[1]=0;
	for(i=2;i<n;i++)
		diffinc[i]>>=1;
	for(i=1;i<=n;i++)
		s.insert({diffinc[i],i});
	while(!s.empty()){
		pii x=*s.begin();
		s.erase(s.begin());
		assert(!x.F);
		for(auto y:adj[x.S])
			if(res[y.S.S]==-1){
				res[y.S.S]=(make_pair(x.S,y.F)!=edges[y.S.S]);
				s.erase({diffinc[y.F],y.F});
				diffinc[y.F]-=y.S.F;
				s.insert({diffinc[y.F],y.F});
			}
	}
	for(i=0;i<m;i++)
		cout<<res[i]<<endl;
	return 0;
}