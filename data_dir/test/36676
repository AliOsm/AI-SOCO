/// a.cpp

# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
const pair < int , int > DD[] = {{1,0},{1,1},{0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1}};
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < __typeof(v.x) > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vl vector < ll >
# define pll pair < ll , ll >
# define pii pair < int , int >
# define mp make_pair
# define db long double
# define fail puts("-1")
# define yes puts("YES")
# define no puts("NO")
# define PP puts("Possible")
# define II puts("Impossible")
# define vii vector < pii >
# define vll vector < pll >
# define pb push_back
# define pdd pair < db , db >
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    static int cnt[1 << 20];
    static int sum[1 << 20];
    static int sqr[1 << 20];
    int n;
    const int mod = 1e9 + 7;
    fi>>n;
    while (n --)
    {
        int v;
        fi>>v;
        ++cnt[v];
        sum[v] = (sum[v] + v) % mod;
        sqr[v] = (sqr[v] + 1ll * v * v) % mod;
    }
    const int N = 1e6;
    static int p10[55];
    p10[0] = 1;
    for (int i = 1;i < 9;++i)
        p10[i] = p10[i - 1] * 10;
    static int p2[1 << 20];
    p2[0] = 1;
    for (int i = 1;i <= N + 55;++i)
        p2[i] = (p2[i - 1] * 2) % mod;
    for (int k = 0;k < 6;++k)
        for (int i = N - 1;i;--i)
            if ((i / p10[k]) % 10)
                (cnt[i - p10[k]] += cnt[i]),
                (sum[i - p10[k]] += sum[i]) %= mod,
                (sqr[i - p10[k]] += sqr[i]) %= mod;
    static int D[1 << 20];
    for (int i = 0;i <= N;++i)
    {
        if (!cnt[i])
            D[i] = 0;
        else
        if (cnt[i] == 1)
            D[i] = sqr[i];
        else
            D[i] = (1ll * sqr[i] * p2[cnt[i] - 1] + ((1ll * sum[i] * sum[i] + mod - sqr[i]) % mod) * p2[cnt[i] - 2]) % mod;
    }
    for (int k = 0;k < 6;++k)
        for (int i = 0;i < N;++i)
            if ((i / p10[k]) % 10 != 9)
                (D[i] += mod - D[i + p10[k]]) %= mod;
    ll ans = 0;
    for (int i = 0;i < N;++i)
        ans ^= 1ll * i * D[i];
    fo << ans << '\n';
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}
