#include <bits/stdc++.h>
#define F first
#define S second
#define all(a) a.begin(),a.end()
#define setDP(arr) memset(arr,-1,sizeof arr)
#define oo 2000000000
#define inf 1400000000000000000LL
#define M 998244353
#define M2 1000000009
#define P1 29
#define P2 31
#define sc(n) scanf("%lld",&n);
typedef long long ll;
using namespace std;
const int N = 355001;
const double PI = acos(-1);

ll n , m , k , a[N],pref[N];
ll seg[10][N<<2];
void build(int n , int s , int e){
    if(s==e){
        for(int i = 0 ; i < m ; i++){
            seg[i][n]=pref[s]-(k*((s+m-1-i)/m));
        }
        return;
    }
    int mid = s+e>>1;
    build(n<<1,s,mid);
    build(n<<1|1,mid+1,e);
    for(int i = 0 ; i < m ; i++){
        seg[i][n]=max(seg[i][n<<1],seg[i][n<<1|1]);
    }
}
ll get(int n , int s , int e ,int l , int r , int si){
    if(s>r||e<l)return -10000000000000000LL;
    if(s>=l&&e<=r)return seg[si][n];
    int mid = s+e>>1;
    return max(get(n<<1,s,mid,l,r,si),get(n<<1|1,mid+1,e,l,r,si));
}
signed main(){
    #ifndef ONLINE_JUDGE
        freopen("in.txt","r",stdin);
    #endif
    sc(n);
    sc(m);
    sc(k);
    for(int i = 1 ; i <=n ; i++){
        sc(a[i]);
        pref[i]=pref[i-1]+a[i];
    }
    build(1,1,n);
    ll ans = 0,mins=0;
    int ctr=0;
    for(int i = 0 ; i <=n ; i++){
        if(ctr==m){
            mins+=k;
            ctr=0;
        }
        ctr++;
        ans=max(ans,get(1,1,n,i+1,n,i%m)+mins-pref[i]);
    }
    cout << ans << endl;







}
