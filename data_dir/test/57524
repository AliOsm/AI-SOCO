#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rep(i,n) for(int i=0;i<n;i++)
#define fr(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)
#define all(c) (c).begin(), (c).end()
#define pb push_back
using namespace std;

typedef vector<int> vi;
typedef long long ll;

int n;
int l[6][6],h[6][6],a[6][6];
int flow[6][6],total;
int mxcost,cost;

void rec(int c,int e){
  if(e==n){
    int in=0, out=0;
    rep(i,n)in+=flow[i][c], out+=flow[c][i];
    if(c==0&&out==total||c==n-1&&in==total||c!=0&&c!=n-1&&in==out)rec(c+1,c+2);
    return;
  }
  if(c==n){
    mxcost=max(mxcost,cost);
    return;
  }
  for(int i=l[c][e];i<=h[c][e];i++){
    flow[c][e]+=i;
    cost+=(i?a[c][e]:0)+i*i;
    rec(c,e+1);
    cost-=(i?a[c][e]:0)+i*i;
    flow[c][e]-=i;
  }
}

void run(){
  cin>>n;
  rep(i,n*(n-1)/2){
    int s,t,L,H,A;
    cin>>s>>t>>L>>H>>A;
    s--; t--;
    l[s][t]=L;
    h[s][t]=H;
    a[s][t]=A;
  }
  for(total=0;total<=36;total++){
    mxcost=-(int)1e9;
    memset(flow,0,sizeof(flow));
    cost=0;
    rec(0,1);
    if(mxcost>=0){
      cout<<total<<" "<<mxcost<<endl;
      return;
    }
  }
  cout<<-1<<" "<<-1<<endl;
}
int main(){
#ifndef ONLINE_JUDGE
  rep(i,3)
#endif
    run();
  return 0;
}
