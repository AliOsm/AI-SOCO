// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 200000 + 77;
int n , k , A , Ev[N] , Eu[N] , d[N] , P[N] , C[N];
bool M[N];
vector < int > a[N];
bool CMP(int x , int y) {
   return d[x] > d[y];
}
void dfs(int v , int used = - 1) {
   M[v] = 1;
   int tim = 1;
   for(int id : a[v]) {
      if(C[id] > 0)
         continue ;
      int u = Ev[id] ^ Eu[id] ^ v;
      if(tim == used)
         ++ tim;
      C[id] = tim ++;
      if(! M[u])
         dfs(u , tim - 1);
   }
}
int main() {
   scanf("%d %d" , & n , & k);
   iota(P + 1 , P + 1 + n , 1);
   for(int i = 1;i < n;++ i) {
      scanf("%d %d" , Ev + i , Eu + i);
      a[Ev[i]].push_back(i);
      a[Eu[i]].push_back(i);
      ++ d[Ev[i]];
      ++ d[Eu[i]];
   }
   sort(P + 1 , P + 1 + n , CMP);
   for(int i = 1;i <= k;++ i)
      M[P[i]] = 1;
   A = d[P[k + 1]];
   for(int i = k + 1;i <= n;++ i)
      if(! M[P[i]])
         dfs(P[i]);
   printf("%d\n" , A);
   for(int i = 1;i < n;++ i)
      printf("%d " , (C[i] == 0 ? 1 : C[i]));
   return 0;
}
