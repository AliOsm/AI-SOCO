//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <fstream>
#include <functional>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
#include <time.h>
using namespace std;

#define all(S) S.begin(), S.end()
#define rall(S) S.rbegin(), S.rend()
#define getdis(xa, ya, xb, yb) hypot(xa-xb, ya-yb)
#define slope(xa, ya, xb, yb) ((yb-ya)/(xb-xa))
#define rep(i, j) for (ll i = 0; i < (ll)j; i++)
#define Rep(i, j, k) for (ll i = (ll)j; i < (ll)k; i++)
#define siz(S) (int)S.size()

const double PI = 2.0 * acos(0.0);
const double EX = 2.7182818284;
const int MOD = 1e9 + 7;
const int oo = 2e9 + 1e8;

typedef unsigned long long ll;

ll gcd(ll x, ll y) { return !y ? x : gcd(y, x%y); }

int main() {
    char grid[10][10];
    ll a, b;
    a = b = oo;
    Rep(i, 1, 9)
        Rep(j, 1, 9)
        cin >> grid[i][j];
    Rep(i, 1, 9) Rep(j, 1, 9) {
        if (grid[i][j] == 'W') {
            bool good = 1;
            int idx = i-1;
            while (idx > 0) {
                if (grid[idx][j] != '.')
                    good = 0;
                idx--;
            }
            if (good)
                a = min(a, i - 1);
        }
        else if (grid[i][j] == 'B') {
            bool good = 1;
            int idx = i+1;
            while (idx < 9) {
                if (grid[idx][j] != '.')
                    good = 0;
                idx++;
            }
            if (good)
                b = min(b, 8 - i);
        }
    }
    if (a <= b)
        puts("A");
    else
        puts("B");
    return 0;
}