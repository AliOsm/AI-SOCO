#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;

#define endl '\n'
#define _ ios_base :: sync_with_stdio(false); cin.tie(NULL);

const int inf = (int)(1e9) + 100;
const int mod = (int)(1e9) + 7;
const int N = (int)(1e5) + 100;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define ll long long
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vll vector <ll>
#define vpi vector <pii>
#define vpl vector <pll>
#define sc1(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define frw(i, p, n) for(int i = p; i <= n; i++)
#define bck(i, n, p) for(int i = n; i >= p; i--)
#define mem(a) memset(a, 0, sizeof(a))
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#ifdef inputf
#	define fname ""
#else
#	define fname "" // <- Here
#endif

#ifndef lcl
#	define cerr if (0) cout
#endif

template <typename T> T gcd(T a, T b) {
	return b ? gcd (b, a % b) : a;
}

const double eps = 1e-9;
const int MAXN = (int)2e5 + 256;
const int MOD = (int)1e9 + 7, INF = (int)1e9;
const ll INFLL = (ll)1e18;
	
int n, m, used[555];
int ans[555], c[555][555], d[555];

int main() { // _
	_
	cin >> n >> m;
	for(int i = 1; i <= m; i++){
		int a, b;
		cin >> a >> b;
		c[a][b] = c[b][a] = 1;
		d[a]++, d[b]++;
	}
	memset(ans, 0, sizeof ans);
	for(int i = 1; i <= n; i++) ans[i] = (d[i] == n - 1 ? 2 : 0);
	int cur = 1;
	for(int i = 1; i <= n; i++){
		if(ans[i] == 0){
			ans[i] = cur;
			for(int j = 1; j <= n; j++){ 
				if(c[i][j] && ans[j] == 0) ans[j] = cur;  
			}
			cur+=2;
		}
	}
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
		    if(i == j) continue;
			if((abs(ans[i] - ans[j]) <= 1 && c[i][j] == 0) || (abs(ans[i] - ans[j] > 1) && c[i][j])) return cout << "No", 0;
		}
	}
	if(cur > 5) return cout << "No", 0;
	cout << "Yes\n";
	for(int i = 1; i <= n; i++) cout << char(ans[i] - 1 + 'a');
	return 0;
}
