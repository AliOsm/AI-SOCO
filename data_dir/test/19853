//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define MAX 200005
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

int N, M;
int mp[MAX];
int a[MAX];

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> OST;
OST bit[MAX];

void upd( int x , int v , int t )
{
    for( int i = x; i <= N; i += i & -i )
    {
        if( t == 1 )
            bit[i].insert( v );
        else
            bit[i].erase( v );
    }
}

int qry( int x , int v )
{
    int tmp = 0;
    for( int i = x; i > 0; i -= i & -i )
        tmp += bit[i].order_of_key( v + 1 );
    return tmp;
}

int main()
{
    optimiza_io
    cin >> N >> M;
    for( int i = 1; i <= N; i ++ )
    {
        int x;
        cin >> x;
        mp[x] = i;
    }
    
    for( int i = 1; i <= N; i ++ )
    {
        cin >> a[i];
        a[i] = mp[a[i]];
        upd( i , a[i] , 1 );
    }
    
    while( M -- )
    {
        int op;
        cin >> op;
        if( op == 1 )
        {
            int l1, r1, l2, r2;
            cin >> l1 >> r1 >> l2 >> r2;
            cout << qry( r2 , r1 ) - qry( l2 - 1 , r1 ) - qry( r2 , l1 - 1 ) + qry( l2 - 1 , l1 - 1 ) << "\n";
        }
        else
        {
            int x, y;
            cin >> x >> y;
            upd( x , a[x] , -1 );
            upd( y , a[y] , -1 );
            swap( a[x] , a[y] );
            upd( x , a[x] , 1 );
            upd( y , a[y] , 1 );
        }
    }
    
    return 0;
}

