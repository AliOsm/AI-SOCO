
#include <bits/stdc++.h>
using namespace std;

#define FOR(i,begin,end) for (int i=begin;i<=end;i++)
#define rep(i,t) for (int i=0;i<t;i++)
#define pii pair<int,int>
#define pi pair<pii,int>
#define pb push_back
#define X first
#define Y second
typedef long long LL;
const int maxN=1e4+7,N=5e2+7,MOD=1e9+7,Mod=1e9+6;

LL n,m,q,hx,hy,par[N],h[N],ans,l,r;

pii a[maxN];

bool v1[maxN],v2[maxN],vis[N];

vector<int>e[N];
int find_par(int x)
{
	if(par[x]!=x)
		par[x]=find_par(par[x]);
	return par[x];
}


void merge(int x,int y)
{
	if(h[x]<=h[y])
	{
		par[x]=y;
		h[y]=max(h[y],h[x]+1);
	}
	else
		par[y]=x,h[x]=max(h[x],h[y]+1);
}

void dfs(int s)
{
	vis[s]=true;
	rep(i,e[s].size())
	{
		if(!vis[e[s][i]])
			dfs(e[s][i]);
	}
}

void clear()
{
	FOR(i,1,n)
		e[i].clear(),vis[i]=false;
}


int main()
{ 
	cin.tie(0);
	cout.tie(0);
	ios::sync_with_stdio(false);
	cin>>n>>m;
	FOR(i,1,m)
		cin>>a[i].X>>a[i].Y;
	
	FOR(i,1,n)
		par[i]=i,h[i]=0;
	FOR(i,1,m)
	{
		hx=find_par(a[i].X);
		hy=find_par(a[i].Y);
		if(hx!=hy)
			merge(hx,hy),v1[i]=true;
	}
	FOR(i,1,n)
		par[i]=i,h[i]=0;
	for(int i=m;i>=1;i--)
	{
		hx=find_par(a[i].X);
		hy=find_par(a[i].Y);
		if(hx!=hy)
			merge(hx,hy),v2[i]=true;	
	}
	cin>>q;
	FOR(i,1,q)
	{
		cin>>l>>r;
		l--;
		r++;
		clear();
		ans=0;
		FOR(j,1,l)
		{
			if(v1[j])
				e[a[j].X].pb(a[j].Y),e[a[j].Y].pb(a[j].X);
		}
		for(int j=m;j>=r;j--)
		{
			if(v2[j])
				e[a[j].X].pb(a[j].Y),e[a[j].Y].pb(a[j].X);
		}
		FOR(j,1,n)
		{
			if(!vis[j])
				dfs(j),ans++;
		}
		cout<<ans<<"\n";
	}
	return cout<<'\n',0;
}