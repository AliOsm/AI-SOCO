#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long llu;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
const ll MOD = 1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<pii> v[200000]; // -1인경우 역방향, 1인경우 정방향
vector<int> aa;

int ans[200000];

int prego(int o, int p) {
	int sum = 0;
	for (int i = 0; i < sz(v[o]); i++) {
		if (v[o][i].second == p) continue;
		sum += prego(v[o][i].second, o) + (v[o][i].first == -1);
	}

	return sum;
}

void go(int o, int p, int now) {
	ans[o] = now;

	for (int i = 0; i < sz(v[o]); i++) {
		if (v[o][i].second == p) continue;
		go(v[o][i].second, o, now + v[o][i].first);
	}
}

int main() {
	int n;
	scanf("%d", &n);

	int a, b;
	for (int i = 0; i < n - 1; i++) {
		scanf("%d %d", &a, &b);
		a--; b--;
		v[a].push_back({ 1, b });
		v[b].push_back({ -1, a });
	}

	a = prego(0, 0);
	go(0, 0, a);

	int miv = 1e9;
	for (int i = 0; i < n; i++) {
		if (ans[i] < miv) {
			miv = ans[i];
			aa.clear();
			aa.push_back(i);
		}
		else if (ans[i] == miv) aa.push_back(i);
	}

	printf("%d\n", miv);
	for (int i = 0; i < sz(aa); i++)
		printf("%d ", aa[i] + 1);
}