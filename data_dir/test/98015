#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<queue>
typedef long long int uli;
using namespace std;

const int mx = 3e5+10;
pair<int,pair<int,int> >d[mx];
int w1[mx],w2[mx],f1[mx],f2[mx];
int main(){
    int n,m,u,v,w;
    scanf("%d %d",&n,&m);
    for(int i=0;i<m;i++){
        scanf("%d %d %d",&u,&v,&w);
        d[i] = make_pair(w,make_pair(u,v));
    }
    sort(d,d+m);
    memset(w1,0,sizeof w1);
    memset(w2,0,sizeof w2);
    memset(f1,0,sizeof f1);
    memset(f2,0,sizeof f2);
    for(int i=m-1;i>=0;i--){
        int u = d[i].second.first;
        int v = d[i].second.second;
        int w = d[i].first;
        int better = 0;
        if(w1[v]==w) better = 1+f2[v];
        else better = 1+f1[v];

        if(better>f1[u]){
            if(w1[u]==w){
                f1[u] = better;
            }
            else{
                f2[u] = f1[u];
                w2[u] = w1[u];
                f1[u] = better;
                w1[u] = w;
            }
        }
    }
    int ans = 0;
    for(int i=1;i<=n;i++){
        ans = max(ans,f1[i]);
    }
    printf("%d\n",ans);
    return 0;
}
