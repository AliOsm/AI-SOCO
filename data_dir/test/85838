//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)501;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
ll mat[MAXN][MAXN], dp[MAXN][MAXN], tmp[MAXN][MAXN], a[MAXN];
vector<ll> cnt;
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			cin >> mat[i][j];
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			dp[i][j] = inf;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	reverse(a, a + n);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			dp[i][j] = mat[i][j];
	for (int k = 0; k < n; k++)
	{
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= n; j++)
				tmp[i][j] = min(dp[i][j], dp[i][a[k]] + dp[a[k]][j]);
		ll ans = 0;
		for (int i = 1; i <= n; i++)
			for (int j = 1; j <= n; j++)
				dp[i][j] = tmp[i][j];
		for (int i = 0; i <= k; i++)
			for (int j = 0; j <= k; j++)
				ans += dp[a[i]][a[j]];
		cnt.push_back(ans);
	}
	for (int i = cnt.size() - 1; i >= 0; i--)
		cout << cnt[i] << " ";
}
