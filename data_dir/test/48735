#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<double> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		//freopen("a.txt", "r", stdin);
		//freopen("b.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n;
	cin >> n;
	vector<int> a(n);

	set<pair<int, int>> s1, s2;

	int pf, ans = 1;
	for (auto &i : a)
	{
		cin >> i;
		pf = 0;
		auto it = s1.lower_bound({ i, -1 });
		if (it != s1.end() && it->F == i)
		{
			pf = it->S;
			s2.erase({ it->S, it->F });
			s1.erase(it);
		}

		s1.insert({ i, pf+1 });
		s2.insert({ pf+1, i });

		/*for (auto k : s2)
			cout << k.F << " " << k.S << endl;
		cout << endl;*/

		if (s2.size() == 1)
			ans = &i-&a[0]+1;
		else if (s2.size() > 1)
		{
			if (((s2.begin()->F == 1 || s2.begin()->F-1 == s2.rbegin()->F) && next(s2.begin())->F == s2.rbegin()->F)
					|| ((s2.rbegin()->F == 1 || s2.rbegin()->F-1 == s2.begin()->F) && s2.begin()->F == prev(prev(s2.end()))->F))
				ans = &i-&a[0]+1;
		}
	}

	cout << ans << "\n";

	return 0;
}
