#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <valarray>
#include <vector>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(__typeof((X).begin()) it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

struct timer{
	time_t start;
	timer(){start=clock();}
	~timer(){cerr<<1.*(clock()-start)/CLOCKS_PER_SEC<<" secs"<<endl;}
};

typedef istringstream iss;
typedef long long ll;
typedef pair<int,int> pi;
typedef stringstream sst;
typedef vector<int> vi;

string s;
int n;
string p[11];
int l[11],r[11];

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	cin>>s>>n;
	rep(i,n)cin>>p[i]>>l[i]>>r[i];
	
	int ans=0;
	rep2(len,1,sz(s)+1){
		set<string> S;
		rep(from,sz(s)-len+1){
			string t=s.substr(from,len);
			int ok=1;
			rep(i,n){
				int c=0;
				rep(j,sz(p[i])-len+1){
					if(t == p[i].substr(j,len))c++;
				}
				if(!(l[i]<=c && c<=r[i])){ok=0;break;}
			}
			if(ok)S.insert(t);
		}
		ans+=sz(S);
	}
	cout<<ans<<endl;
}