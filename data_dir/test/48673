#include<bits/stdc++.h>

using namespace std;


#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define MAX 300010
#define NL endl
#define LL long long
#define MP make_pair
#define PB push_back
#define F first
#define S second
#define pf printf
#define sf(a) scanf("%lld",&a)
typedef pair<LL,LL> pr;


vector<LL> mat[MAX];
stack<int> stk;
LL ran[MAX], kotodur[MAX];
LL st[MAX], en[MAX], ti, rp, a, b, c, d;


void dfs(LL p,LL pa)
{
    st[p] = ++ti;

    FOR(i,0,(LL)mat[p].size()-1)
    {
        LL x = mat[p][i];
        if(st[x] == 0)
        {
            stk.push(x);
            dfs(x,p);
        }
        else if(x != pa && en[x] == 0)
        {
            a = min(p,x);
            b = max(p,x);

            while(!stk.empty())
            {
                c = stk.top();
                a = min(a,c);
                b = max(c,b);
               /// cout << x << ' ' << c << NL;
                if(x == c)
                {
                    ran[b] = a;
                    break;
                }
                else stk.pop();

            }
           /// cout<<a<<' '<<b<<NL<<NL;
        }
    }

    en[p] = ++ti;

    return;
}


LL khujo(LL y)
{
   LL st = 1, en = y, mid, c = y;

   while(st <= en)
   {
       mid = (st+en)>>1;

       if(kotodur[mid] + mid > y) en = mid-1, c = min(c, mid);
       else st = mid+1;

   }

   return c;
}

LL koro(LL v)
{
    return (v * (v+1)) / 2;
}


LL sum[MAX];

int main()
{
    ///ios::sync_with_stdio(false);

    LL n, m, i, j;
    LL c  = 0, x, y , z;

    sf(n); sf(m);///cin >> n >> m;

    FOR(i,1,m)
    {
        sf(a); sf(b);//cin >> a >> b;
        mat[a].PB(b); mat[b].PB(a);
    }

    FOR(i,1,n) if(!st[i])
    {
        while(!stk.empty())
        {
            stk.pop();
        }
        stk.push(i);
        dfs(i,i);
    }
  ///  FOR(i,1,m) cout<<ran[i]<<NL;

    i = j = 1;
    while(i <= n && j <= n)
    {
        if(ran[j] == 0 || ran[j] < i) j++;
        else
        {
            kotodur[i] = j-i;
            i++;
        }
    }

    FOR(l,i,n) kotodur[l] = (n-l) + 1;

 //   FOR(i,1,n) cout<<kotodur[i]<<' ';
 ///   cout<<NL<<NL;

    c = 0;
    FOR(i,1,n)
    {
        c += kotodur[i];
        sum[i] = c;
    }

    LL q;

    sf(q);//cin >> q;

    FOR(i,1,q)
    {
        sf(x); sf(y);///cin >> x >> y;
        z = max(x, (LL)khujo(y));
        ///cout << z << ' ' << sum[z-1] << ' ' << sum[x-1]<<NL;
        c = max(sum[z-1] - sum[x-1], (LL)0);
        ///cout<<c<<endl;
        c += koro((y-z) + 1);

        pf("%lld\n",c);///cout<<c<<NL;
    }

}
