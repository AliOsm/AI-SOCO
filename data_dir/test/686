#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <ctime>
#include <set>
#include <map>
#include <vector>
using namespace std;

template <typename T>
T next_int() {
	T x = 0, p = 1;
	char ch;
	do { ch = getchar(); } while(ch <= ' ');
	if(ch == '-') {
		p = -1;
		ch = getchar();
	}
	while(ch >= '0' && ch <= '9') {
		x = x * 10 + (ch - '0');
		ch = getchar();
	}
	return p * x;
}
	
const int max_int = (int)1e9 + 228;
const int max_n = (int)502;
const int mod = (int)1e9 + 7;

int main() {
//	freopen(".in", "r", stdin);

	int n = next_int<int>();
	int m = next_int<int>();

	vector<int> k(n + 1);
	vector<set<int> > lol(n + 1);

	for(int i = 1; i <= n; i++) k[i] = 0;

	int t = 0;
	set<pair<int, int> > a;

	for(int i = 0; i < m; i++) {
		int type = next_int<int>();
		int x = next_int<int>();

		if(type == 1) {
			a.insert(make_pair(t, x)); 
			lol[x].insert(t);
			t++;
		} else 
		if(type == 2) {
			for(set<int> :: iterator i = lol[x].begin(); i != lol[x].end(); i++) {
                       		a.erase(make_pair(*i, x));
                        }
                        lol[x].clear();
		} else {
			while(a.size() && (*a.begin()).first < x) {
				pair<int, int> q = *a.begin();

				lol[q.second].erase(lol[q.second].find(q.first));

				a.erase(a.begin());
			}
		}

		cout << a.size() << "\n";
	}
}