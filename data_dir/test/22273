#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
template<typename T>
using vc=vector<T>;
template<typename T, typename X>
using pr=pair<T, X>;

const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

int n, k, a[312345], ans[312345];
multiset<pr<int,int>> avail;
ll tot, curr;

int main()
{
	ssync;
	cin >> n >> k;
	curr = k+1;
	for(int i=1; i<=n; i++)
	{
		cin >> a[i];
		avail.insert({a[i], i});
		if(i > k)
		{
			auto temp = *(--avail.end());
			tot += temp.F * (curr - temp.S);
			ans[temp.S] = curr;
			curr++;
			avail.erase(--avail.end());
		}
	}
	while(!avail.empty())
	{
		auto temp = *(--avail.end());
		tot += temp.F * (curr - temp.S);
		ans[temp.S] = curr;
		curr++;
		avail.erase(--avail.end());
	}
	cout << tot << "\n";
	for(int i=1; i<=n; i++)
		cout << ans[i] << " ";
	cout << "\n";
	return 0;
}
