#include<bits/stdc++.h>
using namespace std;

int a[100005];
vector<int> v;
vector<int> primes;


bool p[2001005];
void seive(int lim) {
	for (int i = 2; i <= lim; i++)
		p[i] = true;
	for (int x = 2; x <= lim; x++)
		if (p[x]) {
			primes.push_back(x);
			for (int y = x + x; y <= lim; y += x)
				p[y] = false;
		}
}

bool isPrime(int x) {
	return p[x];
}

int main() {
	ios::sync_with_stdio(false);
	seive(2001000);

	int n, x; scanf("%d%d", &n, &x);
	for (int i = 0; i < n; i++)
		scanf("%d", a + i);
	sort(a, a + n);
	if (x == 2) {
		cout << 0 << endl;
		return 0;
	}
	if (n == 0) {
		cout << -1 << endl;
		return 0;
	}
	if (a[0] == 1) {
		cout << 1 << endl;
		return 0;
	}
	if (x > 2000000) {
		puts("-1");
		return 0;
	}


	for (int i = 0; i < n; i++)
		if ((i == 0 || a[i] != a[i - 1]) && a[i] < x && isPrime(a[i]))
			v.push_back(a[i]);

	int indP = 0, indV = 0;
	while (primes[indP] < x) {
	    if (indV >= int(v.size())) {
	        puts("-1");
	        return 0;
	    }
		if (primes[indP] != v[indV]) {
			puts("-1");
			return 0;
		}
		indP++;
		indV++;
	}
	cout << v.size() << endl;


	return 0;
}
