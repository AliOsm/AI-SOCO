//g++  5.4.0
// http://www.cse.iitd.ernet.in/~mittal/stirling.html
//https://www.careerbless.com/aptitude/qa/permutations_combinations_imp7.php#p2

/* here option = row / coloum which are distinct
        object = rooks which also are ditinct ,yeah distinct 
        why?
        becoz , every rook we give a number from 1 to n one-one mapping
        so if we choose k rows then we have to put rooks in row no.2 like 4 rooks but where to place it
        so if we give the number every rook then it is easy and also correct so...
*/        
#include<bits/stdc++.h>
using namespace std;

#define ff first
#define ss second
#define int long long
#define pb push_back
#define pii pair< int,int >
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0) ;

int mod = 998244353;
int nax = 1e6+10;
vector<int> f(nax),invf(nax);

int binpow(int a,int b)
{
    int res = 1;
    a %= mod;
    while( b )
    {
        if( (b&1) ) res = (res*a)%mod;
        a = (a*a)%mod;
        b >>= 1;
    }
    return res;
}

void init()
{
    f[0] = 1;
    for(int i=1; i<nax ;i++) f[i] = (f[i-1] * i )%mod;
    invf[nax-1] = binpow( f[nax-1],mod-2 );
    for(int i=nax-2; i>=0 ;i--) invf[i] = (invf[i+1] * (i+1) )%mod;
    return ;
}
int ncr(int n , int r)
{
    if( n < r || n < 0 ) return 0;
    return ( (f[n] * invf[r] )%mod * invf[n-r] )%mod;
}
signed main()
{
    fast;
    init();
    int n,  k;
    cin >> n >> k;
    if( k > n ) return cout << "0",0;
    int ans = 0;
    
    for(int x = 0 ; x<= n-k ; x++ )
    {
        if( !(x&1) )
        {
            ans += (ncr(n-k,x) * binpow( n-k-x , n))%mod;
            ans %= mod;
        }
        else
        {
            ans -= (ncr(n-k,x) * binpow( n-k-x , n))%mod;
            ans += mod;
            ans %= mod;
        }

    }
    
    ans *= ncr(n , n-k );
    ans %= mod;
    if( k ) ans *= 2;
    ans %= mod;
    cout << ans;
    
}



