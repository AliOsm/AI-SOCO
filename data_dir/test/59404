#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    int n,m,a,b,c;
    cin>>n>>m>>a>>b>>c;
    if((n&1) && (m&1))return cout<<"IMPOSSIBLE\n",0;
    char D = 'd',A='a',E='e',B='b',C='c',F='f',G='g',H='h';

    vector<string>ats(n,string(m,'.'));

    if(n&1)
    {
        int need = m/2;
        if(need > a)return cout<<"IMPOSSIBLE\n",0;
        for(int j=0; j<m; j+=2)
        ats[n-1][j]=ats[n-1][j+1]=G,swap(G,H);
        a-=need;
        n--;
    }

    if(m&1)
    {
        int need = n/2;
        if(need > b)return cout<<"IMPOSSIBLE\n",0;
        for(int i=0; i<n; i+=2)ats[i][m-1]=ats[i+1][m-1]=G,swap(G,H);
        b-=need;
        m--;
    }

    if(a&1)a--;
    if(b&1)b--;

    if(2*a+2*b+4*c < n*m)return cout<<"IMPOSSIBLE\n",0;

    for(int i=0; i<n; i+=2)
        for(int j=0; j<m; j+=2)
    {
        if(a!=0)
        {
            set<char>S({'a','b','c','d','e','f','j','k','q','w','e','r','t'});
            if(i!=0)S.erase(ats[i-1][j]),S.erase(ats[i-1][j+1]);
            if(j!=0)S.erase(ats[i][j-1]),S.erase(ats[i+1][j-1]);
            A = *S.begin();
            B = *S.rbegin();

            ats[i][j]=ats[i][j+1]=A;
            ats[i+1][j]=ats[i+1][j+1]=B;
            a-=2;
        }
        else if(b!=0)
        {
            set<char>S({'a','b','c','d','e','f','j','k','q','w','e','r','t'});
            if(i!=0)S.erase(ats[i-1][j]),S.erase(ats[i-1][j+1]);
            if(j!=0)S.erase(ats[i][j-1]),S.erase(ats[i+1][j-1]);
            A = *S.begin();
            B = *S.rbegin();

            ats[i][j]=ats[i+1][j]=A;
            ats[i][j+1]=ats[i+1][j+1]=B;
            b-=2;
        }
        else
        {
            set<char>S({'a','b','c','d','e','f','j','k','q','w','e','r','t'});
            if(i!=0)S.erase(ats[i-1][j]),S.erase(ats[i-1][j+1]);
            if(j!=0)S.erase(ats[i][j-1]),S.erase(ats[i+1][j-1]);
            A = *S.begin();

            ats[i][j]=ats[i+1][j]=ats[i][j+1]=ats[i+1][j+1]=A;
            c--;
        }
    }

    for(auto&s : ats)
        cout<<s<<'\n';
}
