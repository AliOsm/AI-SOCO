#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <sstream>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <iomanip>
#include <functional>
#include <bitset>
#include <cassert>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <memory.h>
#include <complex>
#include <numeric>
using namespace std;
#pragma comment(linker, "/STACK:256000000")
#define mp make_pair
#define pb push_back
#define all(C) (C).begin(), (C).end()
#define sz(C) (int)(C).size()
#define PRIME 1103
#define PRIME1 31415
#define INF ((1ll << 30) - 1)
#define MOD 99990001
#define FAIL ++*(int*)0
#define EPS 1e-6
template<class T> T sqr(T a) {return a * a;}
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pi64;
typedef pair<int, pii> piii;
typedef vector<int> vi;
typedef vector<int64> vi64;
typedef vector<vi64> vvi64;
typedef vector<pi64> vpi64;
typedef vector<vpi64 > vvpi64;
typedef vector<pii> vpii;
typedef vector<vector<int> > vvi;
typedef vector<vvi> vvvi;
typedef vector<vector<pair<int, int > > > vvpii;
typedef vector<vector<vector<pair<int, int > > > > vvvpii;
typedef complex<long double> cd;
//----------------------------------------------------------    
int n, k, mod = 1e9 + 7, s, a[2000][2000];
int64 d[4000], d1[4000];
void init()
{
    scanf("%d", &n);
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            scanf("%d", &a[i][j]);
}
int ok(int x, int y)
{
    if (x < 0 || x >= n || y < 0 || y >= n)
        return 0;
    return 1;
}
int dx[4] = {1, 1, -1, -1};
int dy[4] = {1, -1, 1, -1};
void solve()
{
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < n; ++j)
        {
            d1[j + i] += a[i][j];
            d[j - i + n] += a[i][j];
        }
    }
    int64 best = -1, ot = -1;
    int bx, by, ox, oy;
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < n; ++j)
        {
            int64 t = d1[j + i] + d[j - i + n] - a[i][j];
            if (t > best)
            {
                bx = i;
                by = j;
                best = t;
            }
        }
    }
    d1[bx + by] = -1e12;
    d[by - bx + n] = -1e12;
    for (int i = 0; i < 4; ++i)
    {
        int x = bx, y = by;
        while(ok(x + dx[i], y + dy[i]))
        {
            x += dx[i];
            y += dy[i];
            d1[x + y] = -1e12;
            d[y - x + n] = -1e12;
        }
    }
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < n; ++j)
        {
            int64 t = d1[j + i] + d[j - i + n] - a[i][j];
            if (t > ot)
            {
                ox = i;
                oy = j;
                ot = t;
            }
        }
    }
    printf("%lld \n", ot + best);
    printf("%d %d %d %d", ox + 1, oy + 1, bx + 1, by + 1);
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen ("input.txt", "r", stdin); freopen ("output.txt", "w", stdout);
    #endif
    init();
    solve();
    return 0;
}
