#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll N=2e5+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m=mod){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

vector<pair<ll,ll> > g[N];
pair<ll,pair<ll,ll> > h[N],f[N];
ll n,w,m,u,v,q,lev[N],p[N][22],maxi[N][22],a[N],siz[N];

ll root(ll x)
{
  while(x!=a[x])
  {
    a[x]=a[a[x]];
    x=a[x];
  }
  return x;
}

void unionx(ll x,ll y)
{
  ll rx=root(x);
  ll ry=root(y);
  if(rx==ry) return;
  else
  {
    if(siz[rx]<siz[ry])
    {
      a[rx]=ry;
      siz[ry]+=siz[rx];
      siz[rx]=0;
    }
    else
    {
      a[ry]=rx;
      siz[rx]+=siz[ry];
      siz[ry]=0;
    }
  }
}

void DFS(ll cur,ll par)
{
  p[cur][0]=par;
  lev[cur]=1+lev[par];
  //cout<<cur<<" ";
  for(ll i=0;i<g[cur].size();i++)
  {
    ll uu=g[cur][i].f;
    if(uu==par){continue;}
    //cout<<uu<<" "<<g[cur][i].s<<endl;
    maxi[uu][0]=g[cur][i].s;
    DFS(uu,cur);
  }
}

ll LCA(ll u,ll v)
{
  ll maxx=0;
  if(lev[u]<lev[v]){swap(u,v);}
  for(ll i=21;i>=0;i--)
  {
    if(u==v){break;}
    if(lev[u]-(1<<i)>=lev[v]){maxx=max(maxx,maxi[u][i]);u=p[u][i];}
  }
  if(u==v){return maxx;}
  for(ll i=21;i>=0;i--)
  {
    if(p[u][i]!=-1&&p[u][i]!=p[v][i]){maxx=max(maxx,max(maxi[u][i],maxi[v][i]));u=p[u][i];v=p[v][i];}
  }
  return max(maxx,max(maxi[u][0],maxi[v][0]));
}

void init()
{
  lev[0]=-1;
  memset(p,-1,sizeof(p));
  //cout<<"DFS : "<<endl;
  DFS(1,0);
  //cout<<endl;
  for(ll i=1;i<22;i++)
  {
    for(ll j=1;j<=n;j++)
    {
      if(p[j][i-1]==-1){continue;}
      p[j][i]=p[p[j][i-1]][i-1];
      maxi[j][i]=max(maxi[j][i-1],maxi[p[j][i-1]][i-1]);
    }
  }
}

int main()
{
  cin>>n>>m;
  ll sum=0;
  for(ll i=1;i<=n;i++){a[i]=i;siz[i]=1;}
  for(ll i=0;i<m;i++)
  {
    cin>>u>>v>>w;
    f[i]=mp(w,mp(u,v));
    h[i]=mp(w,mp(u,v));
  }
  sort(h,h+m);
  for(ll i=0;i<m;i++)
  {
    u=h[i].s.f;
    v=h[i].s.s;
    ll rx=root(u);
    ll ry=root(v);
    if(rx==ry){continue;}
    sum+=h[i].f;
    g[u].pb(mp(v,h[i].f));
    g[v].pb(mp(u,h[i].f));
    unionx(u,v);
  }
  init();
  ll ans[m];
  //for(ll i=1;i<=n;i++){cout<<i<<" "<<maxi[i][1]<<endl;}
  for(ll i=0;i<m;i++){ans[i]=sum+f[i].f-LCA(f[i].s.f,f[i].s.s);}
  for(ll i=0;i<m;i++){cout<<ans[i]<<endl;}
}
