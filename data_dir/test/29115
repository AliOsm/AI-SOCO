#include <bits/stdc++.h>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<t; i++)
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define pb push_back
#define ri(x) scanf("%d", &x)
#define rii(x,y) scanf("%d %d", &x, &y)

typedef long long ll;

int const MOD = 1e9 + 7;

int N, K;
ll L;

int main(){
	scanf("%d %I64d %d",&N,&L,&K);
	vector<vector<ll> > dp(K+1,vector<ll>(N));
	vector<vector<ll> > acc(K+1,vector<ll>(N));
	vector<int> pos(N), ipos(N), a(N);
	vector<pair<int, int> > sorter;
	FOR(i,0,N){
		ri(a[i]);
		sorter.pb({a[i],i});
	}
	sort(sorter.begin(), sorter.end());
	FOR(i,0,N){
		pos[sorter[i].second] = i;
		ipos[i] = sorter[i].second;
	}
	

	FOR(i,0,N) dp[1][i] = 1;
	acc[1][ipos[0]] = dp[1][ipos[0]];
	FOR(i,1,N){
		acc[1][ipos[i]] = (dp[1][ipos[i]]+acc[1][ipos[i-1]])%MOD;
	}
	for(int l=2; l<=K; l++){
		for(int i=N-1; i>-1; i--){
			
			if(pos[i]!=N-1 && a[i]==a[ipos[pos[i]+1]])
				dp[l][i] = dp[l][ipos[pos[i]+1]];
			else
				dp[l][i] = acc[l-1][i];
			
			/*
			for(int j=0; j<N; j++){
				if(a[i]>=a[j])
					dp[l][i]= (dp[l][i]+dp[l-1][j])%MOD;
			}
			*/
		}
		acc[l][ipos[0]] = dp[l][ipos[0]];
		FOR(i,1,N){
			acc[l][ipos[i]] = (dp[l][ipos[i]]+acc[l][ipos[i-1]])%MOD;
		}
	}
	ll S=L/N;
	ll ans=0;
	FOR(l,1,min((ll)K,S)+1){
		FOR(i,0,N){
			ans = (ans + (dp[l][i]*((S-l+1)%MOD))%MOD )%MOD;
		}
	}
	ll R = L%N;
	FOR(l,1,min((ll)K,S+1)+1){
		FOR(i,0,R){
			ans = (ans + dp[l][i])%MOD;
		}
	}
	printf("%I64d\n",ans);
}

