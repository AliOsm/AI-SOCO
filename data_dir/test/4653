#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 1e5 + 7;

int n;
LL p, q, r, T[N], smx[N], smn[N], suf[N];

int main()
{
    _upgrade
    cin >> n >> p >> q >> r;
    for(int i = 1; i <= n; i++)
    {
        cin >> T[i];
    }
    smn[n] = smx[n] = T[n];
    for(int i = n - 1; i; i--)
    {
        smn[i] = min(smn[i + 1], T[i]);
        smx[i] = max(smx[i + 1], T[i]);
    }
    suf[n] = (q + r) * T[n];
    for(int i = n - 1; i; i--)
    {
        LL val = r;
        if(r >= 0) val *= smx[i];
        else val *= smn[i];
        suf[i] = max(suf[i + 1], q * T[i] + val);
    }
    LL ans = p * T[n] + suf[n];
    for(int i = n; i; i--)
    {
        ans = max(ans, p * T[i] + suf[i]);
    }
    cout << ans << "\n";
	return 0;
}
