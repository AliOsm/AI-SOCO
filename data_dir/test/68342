#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7;

int n,dp[N],d[N];
int cnt[N];
vector <pii> g[N];
bool used[N];

bool check(int v){
	while(v > 0){
		if(v % 10 != 7 && v % 10 != 4) return 0;
		v /= 10;
	}
	return 1;
}

void dfs(int v){
	used[v] = 1;
	cnt[v] = 1;
	for(int i = 0; i < g[v].size(); i++){
		int to = g[v][i].f;
		if(used[to]) continue;
		dfs(to);
		cnt[v] += cnt[to];
		if(g[v][i].s) d[v] += cnt[to];
		else d[v] += d[to];
	}
}

void rec(int v){
	used[v] = 1;
	for(int i = 0; i < g[v].size(); i++){
		int to = g[v][i].f;
		if(used[to]) continue;
		if(g[v][i].s) dp[to] += (n - cnt[to]);
		else{
			dp[to] += (dp[v] + d[v] - d[to]);
		}
		rec(to);
	}
}

int main () {
	scanf("%d",&n);
	for(int i = 1,u,v,w; i < n; i++){
	    scanf("%d%d%d",&u,&v,&w);
		if(check(w)) w = 1;
		else w = 0;
		g[u].pb(mp(v,w));
		g[v].pb(mp(u,w));
	}
	dfs(1);
	memset(used,0,sizeof(used));
	rec(1);
	ll ans = 0;
	for(int i = 1; i <= n; i++){
		ll res = dp[i] + d[i];
		ans += res * (res - 1);
	}
	cout << ans;

return 0;
}

