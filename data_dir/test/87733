#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 100, M = 550, inF = 2e9;

int n, m, ans = inF, cnt[N], val[N], a[M][M];
bool prime[N];

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	memset(prime, true, sizeof prime);
	prime[0] = prime[1] = false;
	for (int i = 2; i < N; i++)
		if(prime[i])
			for (int j = i << 1; j < N; j += i)
				prime[j] = false;
	
	for (int i = 1; i < (N >> 1); i++)
		for (int j = i;; j++)
			if(prime[j]) {
				val[i] = j - i;
				break;
			}
	
	
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		int cnt = 0;
		for (int j = 0; j < m; j++)
			cin >> a[i][j], cnt += val[a[i][j]];
		ans = min(ans, cnt);
	}
	for (int j = 0; j < m; j++) {
		int cnt = 0;
		for (int i = 0; i < n; i++)
			cnt += val[a[i][j]];
		ans = min(ans, cnt);
	}
	cout << ans;
	return 0;
}
