#include <bits/stdc++.h>
using namespace std;

const int kMaxN = 110;

int N, K;
char a[5][kMaxN];

bool Solve() {
    cin >> N >> K;
    queue<pair<int, int>> q;
    for (int i = 1; i <= 3; ++i) {
        cin >> a[i];
        a[i][N] = a[i][N + 1] = a[i][N + 2] = a[i][N + 3] = '.';
        if (a[i][0] == 's')
            q.emplace(i, 0);
    }
    while (!q.empty()) {
        int x = q.front().first;
        int y = q.front().second;
        q.pop();
        if (a[x][y + 1] != '.')
            continue;
        for (int nx = x - 1; nx <= x + 1; ++nx)
            if (a[nx][y + 1] == '.' && a[nx][y + 2] == '.' && a[nx][y + 3] == '.') {
                if (y + 3 >= N)
                    return true;
                a[nx][y + 3] = 'U';
                q.emplace(nx, y + 3);
            }
    }
    return false;
}

int main() {
    ios::sync_with_stdio(false);
    int T;
    cin >> T;
    while (T--)
        cout << (Solve() ? "YES\n" : "NO\n");
    return 0;
}