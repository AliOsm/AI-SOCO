#include<bits/stdc++.h> 
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define MOD2 1000000009
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1)
#define E 998244353
#define pb push_back
#define mp make_pair
#define pdd pair<double,double>
#define ll long long
 
using namespace std;
//using namespace __gnu_pbds;
 
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
 
int arr[1000001];
int k;
int lp[10000001];
ll freq[10000001];
vector<int>prim;

void Sieve()
{
	lp[1]=1;
	REP(i,2,10000000)
	{
		if(!lp[i])
		{
			lp[i]=i;
			prim.pb(i);
			for(int j=2;j*i<=10000000;j++)
			{
				lp[i*j]=i;
			}
		}
	}
}

bool check(ll x)
{
	if(x==0)
		return false;
	for(auto it:prim)
	{
		ll tot=0;
		ll prod=it;
		while(prod<=x)
		{
			tot+=(x/prod);
			prod*=it;
		}
		if(tot<freq[it])
			return false;
	}
	return true;
}

int main()
{
	IOS;
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	cin >> k;
	ll l=1,r=0;
	int maxim=1;
	Sieve();
	REP(i,1,k)
	{
		cin >> arr[i];
		r+=arr[i];
		freq[arr[i]]++;
		maxim=max(maxim,arr[i]);
	}	
	for(int i=maxim-1;i>=2;i--)
		freq[i]=freq[i]+freq[i+1];
	for(int i=maxim;i>=2;i--)
	{
		if(lp[i]!=i)
			freq[lp[i]]+=freq[i];
		freq[i/lp[i]]+=freq[i];
	}
	ll ans;
	while(l<=r)
	{
		ans=(l+r)/2;
		if(check(ans)&&(!check(ans-1)))
		{
			cout << ans;
			return 0;
		}
		else if(!check(ans))
			l=ans+1;
		else
			r=ans-1;
	}

}