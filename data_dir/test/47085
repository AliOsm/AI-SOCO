#include<bits/stdc++.h>
using namespace std;

int i,j,ans,cnt=1,flag,depth[1000001],visited[1000001];
string temp,s[1000001],num_temp;
vector<string>v[1000001];

void dfs(int x,int d)
{
    if(visited[x])
        return;

    visited[x]=1;
    ans=max(ans,d);
    v[d].push_back(s[x]);

    int next=1;
    int k=1;

    while(k<=depth[x])
    {
        if(!visited[x+next])
        {
            dfs(x+next,d+1);
            ++k;
        }
        ++next;
    }
}

int main()
{
    ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);

    cin>>temp;
    temp+=",";

    for(i=0;i<temp.length();i++)
    {
        if(temp[i]!=',')
        {
            if(!flag)
                s[cnt]+=temp[i];
            else
                num_temp+=temp[i];
        }
        else
        {
            if(!flag)
                flag=1,num_temp="";
            else
                flag=0,depth[cnt]=atoi(num_temp.c_str()),++cnt;
        }
    }

    for(i=1;i<cnt;i++)
        if(!visited[i])
            dfs(i,1);

    cout<<ans<<endl;
    for(i=1;i<=ans;i++)
    {
        for(j=0;j<v[i].size();j++)
            cout<<v[i][j]<<" ";
        cout<<endl;
    }
}