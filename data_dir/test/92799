#include <iostream>
#include <algorithm>
#define Max 110
#define inf -(1<<30)
using namespace std;

int n;
bool a[Max];
int dp[Max][Max];

int max(int a, int b, int c) {
	if(a > b) {
		if(a > c) return a;
		return c;
	}
	if(b > c) return b;
	return c;
}

int cal(int i, int j) {
	int ans = 0;
	for(int k=i; k<=j; k++) if(a[k]) ans++;
	return max(0, ans, j-i+1-ans);
}

int memo(int i, int j) {
	if(dp[i][j] != inf) return dp[i][j];
	if(i == j) return 1;
	dp[i][j] = max(memo(i, j-1)+a[j], a[i]+memo(i+1, j), cal(i,j));
	return dp[i][j];
}

int main() {
	cin >> n;
	int k = 0;
	for(int i=0; i<n; i++) {
		cin >> a[i];
		if(a[i]) k++;
	}
	for(int i=0; i<n; i++) for(int j=0; j<n; j++) dp[i][j] = inf;
	int ans = memo(0,n-1);
	if(ans == n && k == ans) cout << n-1;
	else cout << ans;
	return 0;
}