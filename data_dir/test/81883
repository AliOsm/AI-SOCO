#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>

#define ll long long
#define ld long double
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const ll  Inf = 2 * 1e15;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi
int n, l;
vector<pii> a;
int d[3010][100][2];

int din(int len, int num, int q) {
	if (len > l) return 0;
	if (d[len][num][q] != -1) return d[len][num][q];
	if (len == l) return 1;
	
	int ans = 0;
	bool fl = false;
	if (q == 0) {
		forn(i, 0, n) {
			if (i != num) {
				if (a[i].first == a[num].second) {
					ans += din(len + a[i].second, i, 0);
					ans %= mod;
					fl = true;
				}
				if (a[i].second == a[num].second && a[i].second != a[i].first) {
					ans += din(len + a[i].first, i, 1);
					ans %= mod;
					fl = true;
				}
			}
		}
	}
	else {
		forn(i, 0, n) {
			if (i != num) {
				if (a[i].first == a[num].first) {
					ans += din(len + a[i].second, i, 0);
					ans %= mod;
					fl = true;

				}
				if (a[i].second == a[num].first && a[i].second!=a[i].first) {
					ans += din(len + a[i].first, i, 1);
					ans %= mod;
					fl = true;

				}
			}
		}
	}
	if (!fl) return 0;
	d[len][num][q] = ans;
	return ans;
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("hard.in", "r", stdin);
	//freopen("hard.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	forn(i, 0, 3010) {
		forn(j, 0, 100) {
			forn(k, 0, 2) d[i][j][k] = -1;
		}
	}
	cin >> n >> l;
	a.resize(n);
	forn(i, 0, n) {
		int  aa, bb;
		cin >> aa >> bb;
		a[i] = mp(aa, bb);
	}
	int ans = 0;
	forn(i, 0, n) {
		if (a[i].first == a[i].second) {
			ans += din(a[i].second, i, 0);
			ans %= mod;
		}
		else {
			ans += din(a[i].second, i, 0);
			ans %= mod;
			ans += din(a[i].first, i, 1);
			ans %= mod;
		}
	}
	cout << ans;
	return 0;
}