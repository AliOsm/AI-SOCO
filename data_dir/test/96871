#include <bits/stdc++.h>
#define F first
#define S second
#define all(a) a.begin(),a.end()
#define setDP(arr) memset(arr,-1,sizeof arr)
#define oo 2000000000
#define inf 1000000000000000LL
#define M 1000000007
#define sc(n) scanf("%d",&n);
typedef long long ll;
using namespace std;
const int N = 1005001;
const double PI = acos(-1);
const int SQRT = 7915;

string a,b,c,ans;
int dp[111][111][111],n,m,l,f[111];

int calc(int i , int j,int k){
    if(k==l)return -10000;
    if(i==n||j==m)return 0;
    int&ret = dp[i][j][k];
    if(ret!=-1)return ret;
    ret = calc(i+1,j,k);
    ret = max(ret,calc(i,j+1,k));
    if(a[i]==b[j]){
        while(k&&a[i]!=c[k])k=f[k-1];
        if(a[i]==c[k])k++;
        ret = max(ret,1+calc(i+1,j+1,k));
    }
    return ret;
}

void build_path(int i , int j,int k){
    if(k==l)return;
    if(i==n||j==m)return;
    int val = calc(i,j,k);
    if(val==calc(i,j+1,k))return build_path(i,j+1,k);
    if(val==calc(i+1,j,k))return build_path(i+1,j,k);
    if(a[i]==b[j]){
        while(k&&a[i]!=c[k])k=f[k-1];
        if(a[i]==c[k])k++;
        if(val == 1+calc(1+i,j+1,k)){
            ans+=a[i];
            return build_path(1+i,j+1,k);
        }
    }
}

signed main(){
    #ifndef ONLINE_JUDGE
        freopen("in.txt","r",stdin);
    #endif
    cin >> a >> b >> c;
    int len =0;
    l=c.size();
    m=b.size();
    n=a.size();
    for(int i = 1 ; i < l ; i++){
        while(len && c[i]!=c[len])
            len = f[len-1];
        if(c[i]==c[len])len++;
        f[i]=len;
    }
    setDP(dp);
    build_path(0,0,0);
    cout << (ans.empty()?"0":ans) << endl;


}
