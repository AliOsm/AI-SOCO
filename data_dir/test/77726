#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

ll n,m,k,q,dp[2][300005];

vll v[300005],col;

int main()
{ios_base::sync_with_stdio(false);
cin>>n>>m>>k>>q;
ll mxr=0;
while(k--)
{
	int r,c;
	cin>>r>>c;
	v[r].pb(c);
	mxr=max(mxr,ll(r));
}
ll ans=mxr-1;

while(q--)
{
	int x;
	cin>>x;
	col.pb(x);
}
sort(all(col));

rep(i,1,n)sort(all(v[i]));

vll cur_col;
cur_col.pb(1);
dp[0][1]=0;
q=col.size();
rep(i,1,n)
{
	int sz=v[i].size();
	if(sz==0)
	{
		if(i>1)continue;
		cur_col.clear();
		cur_col.pb(col[0]);
		dp[0][col[0]]=col[0]-1;
		continue;
	}
	vll new_col;
	ll mn=v[i][0],mx=v[i][sz-1];
	int id=lower_bound(all(col),mn)-col.begin();
	if(id<q)new_col.pb(col[id]);
	id--;
	if(id>=0)new_col.pb(col[id]);
	id=lower_bound(all(col),mx)-col.begin();
	if(id<q)new_col.pb(col[id]);
	id--;
	if(id>=0)new_col.pb(col[id]);
	tr(new_col,it)dp[1][*it]=1e18+7;
	tr(cur_col,it)
	{
		ll from=*it;
		tr(new_col,it1)
		{
			ll to=*it1;
			if(i!=mxr)
			{
				dp[1][to]=min(dp[1][to],abs(from-mn)+abs(mx-mn)+abs(to-mx)+dp[0][from]);
				dp[1][to]=min(dp[1][to],abs(from-mx)+abs(mx-mn)+abs(to-mn)+dp[0][from]);
			}
			else
			{
				dp[1][to]=min(dp[1][to],abs(from-mn)+abs(mx-mn)+dp[0][from]);
				dp[1][to]=min(dp[1][to],abs(from-mx)+abs(mx-mn)+dp[0][from]);
			}
		}
	}
	cur_col=new_col;
	tr(cur_col,it)
	{
		dp[0][*it]=dp[1][*it];
		//o2(i,*it);os;ol(dp[1][*it]);on;
	}
}

ll mn=1e18+7;

tr(cur_col,it)mn=min(mn,dp[0][*it]);
ol(ans+mn);

return 0;
}


