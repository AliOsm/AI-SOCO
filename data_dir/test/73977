// Charan Sriramula (@msd_007 && @furious__)

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll N=3e5+5;
const ll INF=2e18;
const ll mod=1e9+7;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);

struct node
{
	ll val;
	ll idx;
};

node maxi[N];
ll n,k,ff,maxn,maxa,maxb,x,y,msum,a[N],b[N],pre[N],chunk[N];

int main()
{
	cin>>n>>k;
	for(ll i=1;i<=n;i++){cin>>a[i];pre[i]=pre[i-1]+a[i];}
	for(ll i=k;i<=n;i++){chunk[i-k+1]=pre[i]-pre[i-k];}
	for(ll i=n-k+1;i>=1;i--)
	{
		if(maxn<=chunk[i])
		{
			maxn=chunk[i];
			maxi[i].val=maxn;
			maxi[i].idx=i;
		}
		else{maxi[i].val=maxi[i+1].val;maxi[i].idx=maxi[i+1].idx;}
	}
	for(ll i=1;i<=n-k+1;i++)
	{
		if(chunk[i]&&maxi[i+k].val)
		{
			if(msum<chunk[i]+maxi[i+k].val){ff++;msum=chunk[i]+maxi[i+k].val;x=i;y=maxi[i+k].idx;}
			else if(msum==chunk[i]+maxi[i+k].val)
			{
				if(x>i){x=i;y=maxi[i+k].idx;ff++;}
				else if(x==i){y=maxi[i+k].idx;ff++;}
			}
		}
	}
	if(!ff){cout<<1<<" "<<k+1<<endl;exit(0);}
	cout<<x<<" "<<y<<endl;
}