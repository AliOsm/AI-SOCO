
#include<bits/stdc++.h>

using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/

#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second

#define what_is(x)     cerr << #x << " is " << x << endl;

///*....Debugger....*/

#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it)
{
    cout << endl ;
}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args)
{
    cerr << *it << " = " << a << ' ' ;
    err(++it, args...);
}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
int ini()
{
    int x;
    scanf("%d",&x);
    return x;
}
long long inl()
{
    long long x;
    scanf("%lld",&x);
    return x;
}

int set_1(int n,int pos){return n = (n | (1<<pos));}
int reset_0(int n,int pos){return n= n & ~(1<<pos);}
bool check_bit(int n,int pos){return n = n & (1<<pos);}

const int N = (int) 1e6 + 5;
const ll M = (ll) 1e9 + 7;
const double pi=2* acos(0.0);

struct matrix
{
	ll mat[2][2];
};

matrix mul(matrix a,matrix b){
	matrix res;
	for(int i=0;i<2;i++){
		for(int j=0,k;j<2;j++){
			for(res.mat[i][j]=k=0;k<2;k++){
				res.mat[i][j] += (a.mat[i][k]*b.mat[k][j])%M;
				res.mat[i][j]%=M;
			}
		}
	}
	return res;
}

matrix fun(matrix a,ll n){
	matrix res;
	res.mat[0][0]=res.mat[1][1]=1;
    res.mat[0][1]=res.mat[1][0]=0;
	while(n>0){
		if(n&1){
			res=mul(res,a);
		}
		a=mul(a,a);
		n/=2;
	}
	return res;
}
int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
	ll n=inl();

	matrix a;

	a.mat[0][0]=3,a.mat[0][1]=1;
	a.mat[1][0]=1,a.mat[1][1]=3;

	if(n==0){
		printf("1\n");
		return 0;
	}
	matrix res=fun(a,n);

    printf("%lld\n", res.mat[0][0]%M);

    return 0;
}
