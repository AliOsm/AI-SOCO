#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef tree<ii,null_type,less<ii>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const int mx=777+(int) sqrt(1e13);

bool flag[mx];

int main() {
	memset(flag,true,sizeof flag);
	flag[0]=flag[1]=false;
	for (ll i=2; i*i<mx; i++)
		if(flag[i])
			for (ll j=i; j*i<mx; j++)
				flag[i*j]=false;
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);
	ll q; cin>>q;
	if(q==1) {
		cout<<"1\n0\n"; return 0;
	}
	vector<ll> ret;
	for (ll i=0; i<mx; i++) {
		if(i*i>q) break;
		if(flag[i]) {
			while(q%i==0)
				ret.push_back(i), q/=i;
		}
	}
	if(q>1) ret.push_back(q);
	if(ret.size()==1) {
		cout<<"1\n0\n"; return 0;
	}
	if(ret.size()<=2) {
		cout<<"2\n"; return 0;
	}
	cout<<"1\n"<<ret.front()*ret.back()<<"\n";
	return 0;
}
