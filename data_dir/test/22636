//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int _i = 0; _i < (n); _i++) ni(a[_i])
#define nal(a, n) for (int _i = 0; _i < (n); _i++) nl(a[_i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const ll INF = 1e16 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
pii a[MAXN];
vi pos[MAXN];

void solve() {
	int n; ni(n);
	for (int i = 0; i <= n; i++) pos[i].clear();
	for (int i = 1; i <= n; i++) {
		scanf("%d %d", &a[i].fi, &a[i].se);
		pos[a[i].fi].pb(a[i].se);
	}
	ll ans = 0;
	priority_queue<int> pq;
	for (int i = n; i > 0; i--) {
		for (int x: pos[i])
			pq.push(-x);
		while (pq.size() > n-i) {
			ans -= pq.top();
			pq.pop();
		}
	}
	prl(ans);
}

int main() {
	int t; ni(t); while (t--) solve();
	return 0;
}
