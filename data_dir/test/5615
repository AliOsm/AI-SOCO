#include <bits/stdc++.h>

using namespace std; 	
typedef long long ll;
typedef unsigned long long ull;
const int N = 4e5+50;
const int oo = 1e9;
const int mod = 1e9+7;

bool dp[1001][2001],vis[1001][2001];

int n,k;
string s;	
bool solve(int idx,int c){
	if(idx == n)
		return (abs(c-1000)==k);
	if(abs(c - 1000) >= k)return false;
	if(vis[idx][c])return dp[idx][c];
	vis[idx][c] = 1;
	dp[idx][c] = 0;
	if(s[idx] == '?'){
		if(solve(idx+1,c+1))
			dp[idx][c] = 1;
		if(solve(idx+1,c-1))
			dp[idx][c] = 1;
		if(solve(idx+1,c))
			dp[idx][c] = 1;
		return dp[idx][c];
	}else{
		if(s[idx] == 'W') return dp[idx][c] = solve(idx+1,c+1);
		else if(s[idx] == 'L') return dp[idx][c] = solve(idx+1,c-1);
		else return dp[idx][c] = solve(idx+1,c);
	}
}

string ans;
void build(int idx,int c){
	if(idx == n)return;
	if((s[idx] == 'W' || s[idx] == '?') && solve(idx+1,c+1)){
		ans += 'W';
		build(idx+1,c+1);
		return;
	}
	if((s[idx] == 'D' || s[idx] == '?') && solve(idx+1,c)){
		ans += 'D';
		build(idx+1,c);
		return;
	}
	ans += 'L';
	build(idx+1,c-1);
}

int main(){
	cin>>n>>k>>s;
	if(solve(0,1000)){
		build(0,1000);
		cout << ans << endl;
	}else{
		puts("NO");
	}
}
