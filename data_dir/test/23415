#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define ii pair<int,int>
#define mp make_pair
using namespace std;
int n;
vector < int > v[1000005];
int a[1000005];


/// Segment Tree
const int max_node = 10000000;
ii tree[max_node];

void update(int node , int start , int _end , int idx , int val)
{
    if(start == _end)
    {
        tree[node] = mp(val,start);
    }
    else
    {
        int mid = (start+_end)/2;
        if(start <= idx && idx <= mid)
        {
            update(node*2,start,mid,idx,val);
        }
        else
        {
            update(node*2+1,mid+1,_end,idx,val);
        }
        if(tree[2*node].fr > tree[2*node+1].fr)
        {
            tree[node] = tree[2*node];
        }
        else
            tree[node] = tree[2*node+1];
    }
}

ii query(int node , int start , int _end, int l , int r)
{
    if(r < start || l > _end)
    {
        return mp(-1,-1);
    }
    if(l <= start && _end<= r)
    {
        return tree[node];
    }
    int mid = (start+_end)/2;
    ii x1 = query(2*node  ,start , mid , l , r);
    ii x2 = query(2*node+1,mid+1 ,_end , l , r);
    if(x1.fr > x2.fr)
        return x1;
    return x2;
}
vector < pair < ii , int > > ans;
int res[1000005];
int main()
{
    cin>>n;
    for(int i=1; i<=n; i++)
    {
        scanf("%d",&a[i]);
        v[a[i]].push_back(i);
    }
    for(int i=0; i<1000000; i++)
        v[i].push_back(1e9);
    int q;
    cin>>q;
    int cnt = 0;
    for(int i=0;i<q;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        ans.push_back(mp(mp(x,y),cnt));
        cnt++;
    }
    for(int i=0;i<1000000;i++)
    {
        reverse(v[i].begin(),v[i].end());
    }
    sort(ans.begin(),ans.end());
    for(int i=0;i<1000000;i++)
    {
        if(v[i].size() > 1)
        {
            int len = v[i].size()-1;
            int x = v[i][len];
            int last = v[i][len-1];
            update(1,1,n,x,last);
        }
    }
    int last = 1;
    for(int i=0;i<ans.size();i++)
    {
        int x = ans[i].fr.fr;
        int y = ans[i].fr.sc;
        if(x > last)
        {
            while(last < x)
            {
                int num = a[last];
                int len = v[num].size()-1;
                int X = v[num][len];
                update(1,1,n,X,-1);
                v[num].pop_back();
                if(v[num].size() > 1)
                {
                    len--;
                    X = v[num][len];
                    int last = v[num][len-1];
                    update(1,1,n,X,last);
                }
                last++;
            }
        }
        ii temp = query(1,1,n,x,y);
        if(temp.sc != -1 && temp.fr > y)
        {
            int z = ans[i].sc;
            res[z] = a[temp.sc];
        }
    }
    for(int i=0;i<q;i++)
    {
        printf("%d\n",res[i]);
    }
}
