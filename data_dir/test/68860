//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 

ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n;
vector<int> arr[1005];


int main(){
 
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin>>n;
    for(int i=1;i<=n;i++){
    	int sz;
    	cin>>sz;
    	while(sz--){
    		int a;
    		cin>>a;
    		arr[i].pb(a);
    	}
    	sort(arr[i].begin(), arr[i].end());
    }

    arr[n+1] = arr[1];
    arr[n+2] = arr[2];

    int ans = 0;
    for(int i=2;i<=n+1;i++){

    	for(int j=1;j<(int)arr[i].size();j++){
    		int l = arr[i][j-1], r = arr[i][j];
    		int l_cnt = upper_bound(arr[i-1].begin(), arr[i-1].end(), r) - lower_bound(arr[i-1].begin(), arr[i-1].end(), l);
    		int r_cnt = upper_bound(arr[i+1].begin(), arr[i+1].end(), r) - lower_bound(arr[i+1].begin(), arr[i+1].end(), l);
    		ans += (l_cnt != r_cnt);
    	}
    }

    cout<<ans;
    return 0;
}




 
 
