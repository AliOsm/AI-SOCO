#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define pi 3.141592653589793238
#define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const int sz=(1<<20)*4;
vector<int>temp[sz+5];
int a[(1<<20)+5];
int seg[sz+5];
int rev[sz+5];
pair<int,int>seg_hgt[25];

void merge(int ver,int sz1,int sz2)
{
   int in1=0,in2=0;
   while (in1<sz1&&in2<sz2)
   {
      if(temp[2*ver][in1]<temp[2*ver+1][in2])
      {
         temp[ver].push_back(temp[2*ver][in1]);
         in1++;
      }
      else if(temp[2*ver][in1]>=temp[2*ver+1][in2])
      {
         seg[ver]+=sz1-in1;
         rev[ver]+=in1;
         temp[ver].push_back(temp[2*ver+1][in2]);
         in2++;
      }      
   }

   while (in1<sz1)
   {
      temp[ver].push_back(temp[2*ver][in1]);
      in1++;
   }
   while (in2<sz2)
   {
      seg[ver]+=sz1-in1;
      rev[ver]+=in1;
      temp[ver].push_back(temp[2*ver+1][in2]);
      in2++;
   }

   map<int,int>mm;
   for(auto i:temp[2*ver])
   {
      mm[i]++;
   }   
   for(auto i:temp[2*ver+1])
   {
      seg[ver]-=mm[i];
   }
}

void build(int ver,int tl,int tr,int height)
{
   if(tl>tr)
      return ;
   else if(tl==tr)
   {
      temp[ver].push_back(a[tl]);      
   }
   else
   {
      int tm=(tl+tr)/2;
      build(2*ver,tl,tm,height+1);
      build(2*ver+1,tm+1,tr,height+1);
      merge(ver,tm-tl+1,tr-tm);      
      seg_hgt[height].first+=seg[ver];
      seg_hgt[height].second+=rev[ver];
   }   
}

signed main()
{
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);  
   
 #ifndef ONLINE_JUDGE
    if(fopen("INPUT.txt","r"))
    {
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
    }
 #endif
 
// -------------------------------------Code starts here---------------------------------------------------------------------     

   int n;
   cin>>n;
   for(int i=1;i<=(1<<n);i++)
      cin>>a[i];
   for(int i=0;i<=24;i++)
   {
      seg_hgt[i]={0,0};
   }
   build(1,1,(1<<n),0);
   int ans=0;
   for(int i=0;i<22;i++)
   {
      ans+=seg_hgt[i].first;
   }

   int m;
   cin>>m;

   while (m--)
   {
      int x;
      cin>>x;
      for(int i=n-x;i<=n;i++)
      {
      ans+=-seg_hgt[i].first+seg_hgt[i].second;
      swap(seg_hgt[i].first,seg_hgt[i].second);
      }
      cout<<ans<<'\n';
   }
   


// -------------------------------------Code ends here------------------------------------------------------------------
     clock_t clk;
 	clk = clock();
 
    clk = clock() - clk;
 	cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
 	return 0;
 }
 