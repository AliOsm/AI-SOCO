#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;

const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

template<typename T>
void term(T x)
{
	cout << x << "\n";
	exit(0);
}

const int L=64;
int q,op,be;
ll x,y,sh[L];
inline void shift(int fl,ll val)
{
	ll mod=1LL<<fl;
	val%=mod;
	sh[fl]=(sh[fl]+val+mod)%mod;
}
int main()
{
	scanf("%d",&q);
	while(q--)
	{
		scanf("%d%lld",&op,&x);
		for(be=0;x>>be;be++);be--;
		if(op<3)
		{
			scanf("%lld",&y);
			if(op>1)shift(be,y);
			else shift(be,y),shift(be+1,-y*2);
		}
		else
		{
			for(;be>=0;be--)
			{
				printf("%lld ",x);
				x+=sh[be];
				if(x>=(1LL<<be+1))x-=(1LL<<be);
				x>>=1;
			}
			puts("");
		}
	}
	return 0;
}
