
#include <bits/stdc++.h>

using namespace std;


bool dfs(vector<vector<int>>& graph, int ind, bool visitted[]) {
	visitted[ind] = true;
	bool condition = graph[ind].size() == 2;
	for(int i = 0; i < graph[ind].size(); i++) {
		if(visitted[graph[ind][i]] == false) {
			condition &= dfs(graph, graph[ind][i], visitted);
		}
	}
	return condition;
}

int main() {
	int n, m; cin >> n >> m;
	bool visitted[n];
	memset(visitted, false, n);
	vector<vector<int>> graph(n);
	for(int i = 0; i < m; i++) {
		int u, v; cin >> u >> v;
		graph[u-1].push_back(v-1);
		graph[v-1].push_back(u-1);
	}
	int ans = 0;
	for(int i = 0; i < n; i++) {
		if(visitted[i] == false) {
			ans += dfs(graph, i, visitted) ? 1 : 0;
		}
	}
	cout << ans;
}

/*
5 4
1 2
3 4
5 4
3 5

 */
