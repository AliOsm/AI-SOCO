//Tirth Jarsania
// i*ncr(t,i)*p^i*q^(t-i) where ifrom 1 to max(t,n)

#include<bits/stdc++.h>
using namespace std;
#define ld long double
#define int long long

const int N = 2e3+5;
ld dp[N][N];

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    
    int n,t;
    ld  p  , q;
    cin >> n >> p >> t;
    q = 1.00000-p;
    memset(dp,0.00,sizeof(dp));
    
    dp[0][0] = 1.00000;
    ld ans = 0.000;
    for(int i=0;i<=n;i++)
    {
            if(i==0) for(int j=1;j<=t;j++)  dp[j][i] = dp[j-1][i]*q;
            else if(i!=n){
        for(int j=i;j<=t;j++)
            dp[j][i] += (dp[j-1][i-1]*p + dp[j-1][i]*q);}
        else
        {
            for(int j=i;j<=t;j++)
            dp[j][i] += (dp[j-1][i] + dp[j-1][i-1]*p );}
        
        ans += (dp[t][i]*i);
        
    }
    
    cout << fixed << setprecision(6) << ans;
    
    
}