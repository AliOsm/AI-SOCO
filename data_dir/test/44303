#include<bits/stdc++.h>
using namespace std;

const int N=1e6+9;

long long m,h1,a1,x1,y1,h2,a2,x2,y2;
long long i,cycle1=-1,cycle2=-1,d,e,n;
vector <long long> adj1[N],adj2[N];
bool iscycle1[N],iscycle2[N];
int cnt1,cnt2;
int main()
{
    scanf("%lld",&m);
    scanf("%lld%lld",&h1,&a1);
    scanf("%lld%lld",&x1,&y1);
    scanf("%lld%lld",&h2,&a2);
    scanf("%lld%lld",&x2,&y2);

    for(i=0;i<m+9;i++)
    {
        adj1[h1].push_back(i);
        if(adj1[h1].size()>1)
        {
            if(iscycle1[h1]==false) cnt1++;
            iscycle1[h1]=true;
            cycle1=adj1[h1][1]-adj1[h1][0];
        }
        h1=(x1*h1+y1)%m;

        adj2[h2].push_back(i);
        if(adj2[h2].size()>1)
        {
            if(iscycle2[h2]==false) cnt2++;
            iscycle2[h2]=true;
            cycle2=adj2[h2][1]-adj2[h2][0];
        }
        h2=(x2*h2+y2)%m;
    }

    if(cnt1>1)
    {
        if(cycle1==-1) cycle1=m;
        for(i=0;i<m;i++) iscycle1[i]=true;
    }
    if(cnt2>1)
    {
        if(cycle2==-1) cycle2=m;
        for(i=0;i<m;i++) iscycle2[i]=true;
    }

    if(adj1[a1].size()==0 or adj2[a2].size()==0) return 0 * printf("-1");

    if(iscycle1[a1]==false)
    {
        if(adj1[a1][0]-adj2[a2][0]>=0 and (adj1[a1][0]-adj2[a2][0])%cycle2==0) return 0 * printf("%lld",adj1[a1][0]);
        return 0 * printf("-1");
    }
    if(iscycle2[a2]==false)
    {
        if(adj2[a2][0]-adj1[a1][0]>=0 and (adj2[a2][0]-adj1[a1][0])%cycle1==0) return 0 * printf("%lld",adj2[a2][0]);
        return 0 * printf("-1");
    }

    x1=adj1[a1][0];
    x2=adj2[a2][0];

    d=cycle1;
    e=cycle2;

    x1=x1-x2+e-d; //me-nd=x1
    if(x1%__gcd(d,e)!=0) return 0 * printf("-1");
    n=1;
    while(1)
    {
        if(x1+n*d>0 and (x1+n*d)%e==0) return 0 * printf("%lld",adj1[a1][0]+(n-1)*d);
        n++;
    }
    return 0;
}
