#include <bits/stdc++.h>
using namespace std;
const int MX=105;
int a[MX] , b[MX];
int done[105] , arr[15];
int main(){
    string ss = "RGBYW";
    sort(ss.begin() , ss.end());
    char cc[3];
    int n;
    cin>>n;
    for(int j=1;j<=n;j++){
        cin>>cc;
        a[j] = lower_bound(ss.begin() , ss.end() , cc[0]) - ss.begin();
        b[j] = cc[1] - '1' + 5;
    }
    int mxmask = (1<<10) , ans = 1234;
    for(int mask = 0 ; mask < mxmask ; mask++){
        memset(done , 0 , sizeof(done));
        for(int j=1;j<=n;j++){
            if((mask & (1<<a[j]))) done[j] |= 1;
            if((mask & (1<<b[j]))) done[j] |= 2;
        }
        for(int tt = 1 ; tt <= n ; tt++){
            memset(arr , -1 , sizeof(arr));
            int aa = -1 , bb = -1;
            for(int j=1;j<=n;j++){
                if( (done[j]&1) == 0){
                    if(aa == -1) aa = a[j];
                    else if(aa != a[j]) aa = -2;
                }
                if( (done[j]&2) == 0){
                    if(bb == -1) bb = b[j];
                    else if(bb != b[j]) bb = -2;
                }
            }
            if(aa != -2) for(int j=1;j<=n;j++)  done[j] |= 1;
            if(bb != -2) for(int j=1;j<=n;j++)  done[j] |= 2;
            for(int j=1;j<=n;j++){
                if(done[j] == 3) continue;
                if(arr[a[j]] == -1)
                    arr[a[j]] = b[j];
                else if(arr[a[j]] != b[j]) arr[a[j]] = -2;
                if(arr[b[j]] == -1)
                    arr[b[j]] = a[j];
                else if(arr[b[j]] != a[j]) arr[b[j]] = -2;
            }
            for(int j=1;j<=n;j++){
                if(done[j] == 1)
                    if(arr[a[j]] == b[j])
                        done[j] |= 2;
                if(done[j] == 2)
                    if(arr[b[j]] == a[j])
                        done[j] |= 1;
            }
        }
        if(count(done+1 , done+1+n , 3) == n) {
            if(ans > __builtin_popcount(mask)){
                ans = __builtin_popcount(mask);
            }
        }
    }
    cout<<ans<<endl;
}
