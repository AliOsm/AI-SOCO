	//     . .. ... .... ..... be name khoda ..... .... ... .. .     \\

#include <bits/stdc++.h>
using namespace std;

inline int in() { int x; scanf("%d", &x); return x; }
const int N = 200002;

int deg[N], yes[N], no1[N], no2[N];
vector <int> g[N];

void dfs(int v, int dad = -1)
{
	yes[v] = no1[v] = no2[v] = 1;
	if(dad != -1)
		g[v].erase(find(g[v].begin(), g[v].end(), dad));
	for(int u : g[v])
	{
		dfs(u, v);
		int tmpy = min(yes[v] + yes[u], no1[v] + no1[u] - 1);
		int tmp1 = min(no2[v] + no1[u] - 1, no1[v] + yes[u]);
		no2[v] += yes[u];
		no1[v] = tmp1;
		yes[v] = tmpy;
	}
}

int main()
{
	int n = in(), x = in(), y = in();
	if(n == 2)
	{
		cout << x << endl;
		return 0;
	}
	for(int i = 1; i < n; i++)
	{
		int u, v;
		deg[u = in() - 1]++;
		deg[v = in() - 1]++;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	long long ans;
	if(x >= y)
	{
		sort(deg, deg + n);
		if(deg[n - 1] == n - 1)
			ans = 1LL * (n - 2) * y + x;
		else
			ans = 1LL * (n - 1) * y;
	}
	else
	{
		int v;
		for(v = 0; v < n; v++)
			if(deg[v] > 1)
				break;
		dfs(v);
		int X = yes[v] - 1;
		ans = 1LL * X * y + 1LL * (n - 1 - X) * x;
	}
	cout << ans << endl;
}
