#include <bits/stdc++.h>

using namespace std;

const int maxN = 6e6 + 10;
const int modulo = 1e6;
const int INF = 1e9 + 10;

int a[maxN], rsq[maxN], rsq2[maxN];

void replace(int i, int x) {
    i += modulo - 1;
    rsq[i] = x;
    i /= 2;
    while (i) {
        rsq[i] = min(rsq[i + i], rsq[i + i + 1]);
        i /= 2;
    }
}

void replace2(int i, int x) {
    i += modulo - 1;
    rsq2[i] = x;
    i /= 2;
    while (i) {
        rsq2[i] = min(rsq2[i + i], rsq2[i + i + 1]);
        i /= 2;
    }
}

int getmin(int l, int r) {
    int i = l + modulo - 1, j = r + modulo - 1;
    int ans = INF;
    while (i <= j) {
        if (i % 2 == 1) ans = min(ans, rsq[i]);
        if (j % 2 == 0) ans = min(ans, rsq[j]);
        i = (i + 1) / 2;
        j = (j - 1) / 2;
    }
    return ans;
}

int getmin2(int l, int r) {
    int i = l + modulo - 1, j = r + modulo - 1;
    int ans = INF;
    while (i <= j) {
        if (i % 2 == 1) ans = min(ans, rsq2[i]);
        if (j % 2 == 0) ans = min(ans, rsq2[j]);
        i = (i + 1) / 2;
        j = (j - 1) / 2;
    }
    return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
    for (int i = 0; i < maxN; ++i) rsq[i] = INF, rsq2[i] = INF;
    int n;
    cin >> n;
    for (int i = 1; i <= n; ++i) cin >> a[i];
    for (int i = n + 1; i <= 4 * n; ++i) {
        a[i] = a[i - n];
    }
    for (int i = 1; i <= 4 * n; ++i) replace(i, a[i]);
    for (int i = 1; i <= n + n; ++i) {
        int l = i + 1, r = 4 * n;
        while (r - l > 1) {
            int mid = (l + r) / 2;
            int cur_mid = getmin(i + 1, mid);
            if (2 * cur_mid < a[i]) {
                r = mid;
            } else {
                l = mid;
            }
        }
        int cur_ans = INF;
        int cur_mid = getmin(i + 1, l);
        if (2 * cur_mid < a[i]) cur_ans = l;
        else {
            cur_mid = getmin(i + 1, r);
            if (2 * cur_mid < a[i]) cur_ans = r;
        }
        replace2(i, cur_ans);
    }
    for (int i = 1; i <= n; ++i) {
        int cur_ans = getmin2(i, n + n);
        if (cur_ans == INF) cout << -1 << " "; else cout << cur_ans - i << " ";
    }
    cout << endl;
    return 0;
}