
#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int (i) = 0; (i) < (n); (i) ++)
#define rep1(i, n) for (int (i) = 1; (i) <= (n); (i) ++)
#define For(i, a, b) for (int (i) = (a); (i) <= (b); (i) ++)
#define db(x) {if(debug){cout << #x << " = " << (x) << endl;}}
#define dba(a, x, y) {if(debug){cout << #a << " :";For(i, (x), (y))cout<<" "<<(a)[(i)];cout<<endl;}}
#define mp make_pair
#define pb push_back
#define endl '\n'
#define ll long long
#define ld long double
#define pi 3.1415926535897932384626433832795028
const int INF = INT_MAX;
const bool debug = true;
// const int MOD = ;
const ll INFL = LLONG_MAX;
const int output_precision = 15;

stringstream ss;
int N, M, table[1010][1010];
ll memo[1010][1010][3][3];
bool was[1010][1010][3][3];
ll dp(int x, int y, int dx, int dy)
{
    if (x <= 0 || y <= 0 || x > N || y > M) return -INF;
    if ((x == 1 || x == N) && (y == 1 || y == M)) return table[x][y];
    if (was[x][y][dx][dy]) return memo[x][y][dx][dy];
    was[x][y][dx][dy]=1;
    ll& d = memo[x][y][dx][dy];
    d = -INF;
    d = max(d, dp(x+dx, y, dx, dy));
    d = max(d, dp(x, y+dy, dx, dy));
    d += table[x][y];
    return d;
}
int main()
{
    ios_base::sync_with_stdio(0); cout.precision(output_precision); cout << fixed;
    ss.precision(output_precision); ss << fixed;
    cin >> N >> M;
    rep1(i, N) rep1(j, M) cin >> table[i][j];
    ll ans = -INF;
    rep1(i, N) rep1(j, M)
    {
        ll acc = 0;
        acc += dp(i-1, j, -1, -1);
        acc += dp(i+1, j,  1,  1);
        acc += dp(i, j-1,  1, -1);
        acc += dp(i, j+1, -1,  1);
//        acc += table[i][j] << 1;
        ans = max(ans, acc);
    }
    rep1(i, N) rep1(j, M)
    {
        ll acc = 0;
        acc += dp(i-1, j, -1,  1);
        acc += dp(i+1, j,  1, -1);
        acc += dp(i, j-1, -1, -1);
        acc += dp(i, j+1,  1,  1);
//        acc += table[i][j] << 1;
        ans = max(ans, acc);
    }
    cout << ans << endl;



}
