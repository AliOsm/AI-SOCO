#include <bits/stdc++.h>

using namespace std;


string calc(string a,string b){
    string an="";
    int i=a.size()-1,j=b.size()-1;
    int c=0;
    while(i>-1&&j>-1){
        int sum=a[i]-'0'+b[j]-'0'+c;
        an+=char(sum%10+'0');
        c=sum/10;
        i--,j--;
    }
    while(i>-1){
        int sum=a[i]-'0'+c;
        an+=char(sum%10+'0');
        c=sum/10;
        i--;
    }
    while(j>-1){
        int sum=b[j]-'0'+c;
        an+=sum%10+'0';
        c=sum/10;
        j--;
    }
    if(c)an+=c+'0';
    reverse(an.begin(),an.end());
    return an;
}

bool comp(string a,string b){
    if(a.size()!=b.size())return a.size()<b.size();
    for(int i=0;i<(int)a.size();i++)if(a[i]!=b[i])return a[i]<b[i];
}

int main() {
    int n;
    string s;
    cin>>n>>s;
    string an="";
    vector<string > vec;
    for(int i=n/2,cnt=0;i>0&&cnt<3;i--){
        if(s[i]!='0'){
            string a=s.substr(0,i),b=s.substr(i,n);
            vec.push_back(calc(a,b));
            cnt++;
        }
    }
    for(int i=n/2,cnt=0;i<n&&cnt<3;i++){
        if(s[i]!='0'){
            string a=s.substr(0,i),b=s.substr(i,n);
            vec.push_back(calc(a,b));
            cnt++;
        }
    }    
    sort(vec.begin(),vec.end(),comp);
    cout<<vec[0];
    return 0;
}
