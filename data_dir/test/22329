#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ll long long
#define ld long double
#define ull unsigned long long
#define sz(v)  ((int)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define db(x) cout << " WHY " <<  x << '\n'
#define MEM(dp,i) memset( dp ,i, sizeof (dp))
#define forr(c,x,n)   for(ll c=x;c<=(ll)n; ++c)
#define forrr(c,x,n)  for(ll c=x;c>=( ll )n ;--c)
#define ICPC ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);


int k[100007] ,  n ,  vis[107][100007];
int dx[] ={ 0 , 0 , -1 , 1 };
int dy[] ={ 1 , -1 , 0 , 0 };


int BFS (int x , int y , int xx , int yy  )
{
    queue <pair< int ,int> > q ;
    q.push( { x , y}); vis[x][y] = 0 ;

    while ( !q.empty() )
    {
        pair < int ,int >p = q.front(); q.pop();
        if ( p.F == xx && p.S == yy ) return vis[xx][yy];
        forr ( i , 0 , 3 )
        {
            int nx = p.F + dx[i] , ny = p.S +dy[i];
            if ( nx == p.F && ny >= 1 && ny <= k[nx] && !vis[nx][ny] )

            {q.push( {nx , ny  }); vis[nx][ny] = vis[p.F][p.S]+1;}

            if ( nx != p.F && nx >=1 && nx <= n && !vis[nx][min ( ny , k[nx])] )

            {q.push({nx , min ( ny , k[nx]) }); vis[nx][min ( ny , k[nx])] = vis[p.F][p.S]+1; }

        }

    }
}
int main()
{
read("input.txt"); write("output.txt");
scanf("%d" , &n );
forr ( i ,1, n ) { scanf("%d" ,&k[i]); k[i]++; }
int x , y , xx , yy ; scanf("%d%d%d%d" , &x , &y ,&xx ,&yy );
printf("%d" , BFS ( x , y , xx , yy ) );

}
