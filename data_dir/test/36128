#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")

using namespace std;

#define ff first
#define ss second
#define add push_back
#define all(x) x.begin(), x.end()
#define sz(x) (int)x.size()

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    int n, m;
    cin >> n >> m;
    vector<vector<int>> a(n, vector<int>(m));
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            cin >> a[i][j];
        }
    }
    vector<vector<int>> row_less(n, vector<int>(m));
    vector<vector<int>> row_greater(n, vector<int>(m));
    for (int i = 0; i < n; ++i)
    {
        vector<int> b = a[i];
        sort(all(b));
        b.erase(unique(all(b)), b.end());
        for (int j = 0; j < m; ++j)
        {
            row_less[i][j] = lower_bound(all(b), a[i][j]) - b.begin();
            row_greater[i][j] = sz(b) - row_less[i][j] - 1;
        }
    }
    vector<vector<int>> col_less(n, vector<int>(m));
    vector<vector<int>> col_greater(n, vector<int>(m));
    for(int j = 0; j < m; ++j)
    {
        vector<int> b(n);
        for (int i = 0; i < n; ++i) b[i] = a[i][j];
        sort(all(b));
        b.erase(unique(all(b)), b.end());
        for (int i = 0; i < n; ++i)
        {
            col_less[i][j] = lower_bound(all(b), a[i][j]) - b.begin();
            col_greater[i][j] = sz(b) - col_less[i][j] - 1;
        }
    }
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            cout << max(row_less[i][j], col_less[i][j]) + 1 + max(row_greater[i][j], col_greater[i][j]) << ' ';
        }
        cout << '\n';
    }

    return 0;
}
