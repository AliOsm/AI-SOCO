#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

//#include<bits/stdc++.h>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>

#define _USE_DALEN_BRAINS_
#define _USE_MATH_DEFINES_
// You don't know me 
#define ll long long
#define ins Not Needed Thing
// The Dalen
#define ull unsigned long long
#define ld long double
// Yeah Yeah
#define Accepted 0
#define pb push_back
// Ora Ora, Ora Ora, Ora fat
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
// Aydin day aydirinday
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
// @Im@5@Im@5 @Im@5@Im@5
#define F first
#define S second
// Skyrim dlya nordov (c) Roflakopter
#define SORRY FUL Accepted 
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)
// Skr Skr v chernih Naykax (c) ZzzzZzzzzZz
#define Toktama Kazakhstan
// TOKTAMA!

using namespace std;

bool isvowel (char c) {
	c = tolower(c);
    if (c == 'a' || c == 'e' || c == 'i' || c == 'y' || c == 'o' || c == 'u') return 1;
    return 0;
}

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 3e5 + 123;                                          
const int PRI = 555557;
const int pri = 997;

int tests = 1;
int n, m, k;
int p[mxn];

inline void Solve () {
	//easy (c) Dalen
	for (int i = 2; i <= 1e6; i ++) {
		if(!p[i]) {
			for (int j = i; j <= 1e6; j += i)
				p[j] = i;
		}
	}	

	cin >> n;
	int ans = inf;
	for (int i = 2; i <= n; i ++)
		if (p[i] == i && n % i == 0) {
			for (int j = n - i + 1; j <= n; j ++)
				if (p[j] != j)
					ans = min(ans, j - p[j] + 1);
		}

	cout << ans;
}

int main () {
	SpeedForce;
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);	
	//cin >> tests;
	while(tests --) {
		Solve ();
		// Ee Zadrot (P.S. Dalen)
	}

	return Accepted; 
}