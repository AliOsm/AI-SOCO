#include <bits/stdc++.h>
// #pragma GCC optimize ("Ofast")
// #pragma GCC target ("sse4")
// #pragma GCC optimize ("unroll-loops")
#define ll          long long
#define ld          long double
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
using namespace std;
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	multiset<pii> x,y;
	int n,k,l,r,u,d,L,R,U,D;
	ll dx,dy,mini=LLONG_MAX;
	pii z;
	vector<pii> rem;
	cin>>n>>k;
	while(n--){
		cin>>l>>d>>r>>u;
		x.insert({l+r,d+u});
		y.insert({d+u,l+r});
	}
	for(l=0;l<=10;l++)
		for(r=0;r<=10;r++)
			for(u=0;u<=10;u++)
				for(d=0;d<=10;d++)
					if(l+r+u+d==k){
						L=l,R=r,U=u,D=d;
						rem.clear();
						while(L-- and !x.empty()){
							z=*x.begin();
							rem.pb(z);
							x.erase(x.begin());
							swap(z.F,z.S);
							y.erase(y.find(z));
						}
						while(R-- and !x.empty()){
							z=*x.rbegin();
							rem.pb(z);
							x.erase(x.find(z));
							swap(z.F,z.S);
							y.erase(y.find(z));
						}
						while(D-- and !y.empty()){
							z=*y.begin();
							y.erase(y.begin());
							swap(z.F,z.S);
							rem.pb(z);
							x.erase(x.find(z));
						}
						while(U-- and !y.empty()){
							z=*y.rbegin();
							y.erase(y.find(z));
							swap(z.F,z.S);
							rem.pb(z);
							x.erase(x.find(z));
						}
						if(x.empty())
							dx=1;
						else
							dx=max(1,x.rbegin()->F-x.begin()->F);
						if(y.empty())
							dy=1;
						else
							dy=max(1,y.rbegin()->F-y.begin()->F);
						mini=min(mini,((dx+1)/2)*((dy+1)/2));
						for(auto p:rem){
							x.insert(p);
							swap(p.F,p.S);
							y.insert(p);
						}
					}
	cout<<mini;
	return 0;
}