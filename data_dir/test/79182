#include <bits/stdc++.h>

#define ff first
#define ss second
#define pb push_back

using namespace std;
using ll = long long;
using ii = pair<int, int>;

const int N = 400005;
map<int, int> cnt;

bool cmp(ii a, ii b){
	if(a.ss == b.ss) return a.ff < b.ff;
	return a.ss < b.ss;
}

int main() {
	int n;
	scanf("%d", &n);
	int v[N];
	vector<ii> a;
	for(int i = 0; i < n; i++){
		scanf("%d", v+i);
		cnt[v[i]]++;
		a.pb({v[i], cnt[v[i]]});
	}
	sort(a.begin(), a.end(), cmp);
	int ans = 1;
	int r = 1, c = 1;
	int id = 0;
	for(int i = 1; i <= n; i++){
		int mi = i;
		while(id < (int)a.size() && a[id].ss <= mi){
			id++;
		}
		int sz = id - id % i;
		if(sz / i >= i && sz > ans){
			ans = sz;
			r = i;
			c = sz / i;
		}
	}
	while(a.size() > ans){
		cnt[a.back().ff]--;
		a.pop_back();
	}
	for(int i = 0; i < ans; i++){
		a[i].ss = cnt[a[i].ff];
	}
	sort(a.rbegin(), a.rend(), cmp);
	printf("%d\n", ans);
	printf("%d %d\n", r, c);
	int x = 0, y = 0;
	int dif = 0;
	int mat[r+1][c+1];
	memset(mat, 0, sizeof mat);
	for(int i = 0; i < ans; i++){
		mat[x%r][y%c] = a[i].ff;
		x++;
		y++;
		if(x >= r){
			dif++;
			y = dif;
			x = 0;
		}
	}
	for(int i = 0; i < r; i++){
		for(int j = 0; j < c; j++){
			assert(mat[i][j] != 0);
			printf("%d ", mat[i][j]);
		}
		printf("\n");
	}
	return 0;
}
