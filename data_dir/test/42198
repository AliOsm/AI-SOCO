#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll ; 
typedef long double ld ;
typedef pair<ll , ll> pll ;

const ll N = 6e3 + 30 , Mod = 1e9 + 7 ;
const ll SQ = 330 ;

pll E[N]  ;
ll S[N] , F[N] , n , m ;
vector<ll> G[N] , O[N] ;
map<pll ,ll> col ;

bool DFS(ll v) {
	S[v] = 1 ;
	for (auto u : G[v]) {
		if (S[u] && !F[u]) return false ;
		if (!S[u])
			if (!DFS(u))
				return false ;
	}
	F[v] = 1 ;
	return true ;
}
bool check() {
	fill(S , S + N , 0) ;
	fill(F , F + N , 0  ) ;
	for (int i = 1 ; i <= n ; i ++) {
		if (!S[i])
			if (!DFS(i))
				return false ;
	}
	return true ;
}
int main () {
    ios::sync_with_stdio(0), cin.tie(0) ;
    cin >> n >> m ;
    for (int i = 0 ; i < m ; i ++) {
    	ll v , u ;
    	cin >> v >> u ;
    	G[v].pb(u) ;
    	O[u].pb(v) ;
    	
    	E[i] = {v , u} ;
	}
	if (check()) {
		cout << 1 << '\n';
		for (int i = 0 ; i <  m ; i ++) cout << "1 " ;
		return 0 ;
	}
	cout << "2\n" ;
	for (int v = 1 ; v <= n ;v ++) {
		for (auto u : G[v]) {
			if (!col[{v , u}]) col[{v , u}] = 1 ;
		}
		for (auto u : O[v]) {
			if (!col[{u , v}]) col[{u , v}] = 2 ;
		}
	}
	for (int i = 0 ; i < m ; i ++) {
		cout << col[{E[i].F , E[i].S} ] << ' ' ;  
	}
    
    return (0) ;
}
