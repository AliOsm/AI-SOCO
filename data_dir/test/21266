/*input
10 6 2
100 49 71 73 66 96 8 60 41 63
*/
#include <bits/stdc++.h>
using namespace std;
const long long md=1e9+7;
long long x,y,ans;
vector<int> primes;
int a[500005],n,spf[int(1e6+5)],freq[1000005];
inline void solve(int u,int g,long long res){
	if(res>=ans) return;
	if(u>=n){
		ans=res;
		return;
	}
	solve(u+1,g,res+min(x,y*(g-1-(a[u]-1)%g)));
}
int main(){
	#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	#endif
	long long q,m,k,h,sum=0;
	for(int i=0;i<1000005;++i)
		spf[i]=i;
	for(int i=2;i<1020;++i)
		if(i==spf[i]){
			int t;
			for(primes.push_back(i),t=i*i;t<1000005;t+=i)
				spf[t]=min(spf[t],i);
		}
	for(long long int i=primes[primes.size()-1]+1;i<1000002;++i)
		if(i==spf[i]) primes.push_back(i);
	cin>>n>>x>>y;
	unordered_set<int> s;
	for(int i=0;i<n;++i){
		cin>>a[i];
		int k=a[i];
		while(k>1){
			s.insert(spf[k]);
			int sp=spf[k];
			while(sp==spf[k]) k/=spf[k];
			++freq[sp];
		}
	}
	ans=min(n*x,y*(n-freq[2]));
	int cnt=0;
	for(int i:s){
		ans=min(ans,x*(n-freq[i]));
		if(y*(n-freq[i])>=ans) continue;
		solve(0,i,0);
	}
	cout<<ans;
}