#include <bits/stdc++.h>
#define pb push_back
#define sc second
#define fr first
#define mk make_pair
#define ll long long
#define ii pair<int,int>
#define mp make_pair
#define scn(x) scanf("%d" ,&x)
typedef long long intt;
using namespace std;
vector<ii> comuteprefix(string s)
{
    int m=s.size();
    vector<ii> res(m);
    for(int i=1,k=0;i<m;i++)
    {
        while(k>0&&s[i]!=s[k])
           k=res[k-1].fr;
           k+=(s[i]==s[k]);
          res[i].fr=k,res[i].sc=i;
    }
    return res;
}
int main()
{
int t;
cin>>t;
while(t--)
{
    string s;
    cin>>s;
    int i,j;
    string res1,res2,resmid;
    i=0,j=s.length()-1;
    while(i<=j)
    {
        if(s[i]==s[j]&&i!=j)
          res1+=s[i],res2+=s[j],i++,j--;
        else if(s[i]==s[j]&&i==j)
          res1+=s[i],i++,j--;
         else
         break;
    }
    reverse(res2.begin(),res2.end());
    if(i>j)
     cout<<res1<<res2<<endl;
    else
    {
        string stay;
 
        int iit=i,jj=j;
        for(iit=i;iit<=j;iit++)
            stay+=s[iit];
        string stay2=stay;
        reverse(stay2.begin(),stay2.end());
        vector<ii> op1=comuteprefix(stay+"@"+stay2);
        string help1;
        int t=op1[op1.size()-1].fr;
        while(t--)
        {
            help1+=s[i];
            i++;
        }
        string help2;
        op1=comuteprefix(stay2+"@"+stay);
         t=op1[op1.size()-1].fr;
        while(t--)
        {
            help2+=s[j];
            j--;
        }
        int x1=help1.size();
        int x2=help2.size();
        if(x1>x2)
         cout<<res1<<help1<<res2<<endl;
        else
         cout<<res1<<help2<<res2<<endl;
    }
}
    return 0;
}