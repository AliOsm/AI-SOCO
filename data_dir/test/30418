#include <bits/stdc++.h>
#pragma GCC optimize ("Ofast")
#pragma GCC target ("sse4")
#pragma GCC optimize("unroll-loops")
#define ll          long long
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
using namespace std;
vi adj[200005];
int deg[200005],d[200005];
bool del[200005];
void dfs(int u,int p){
	d[u]=d[p]+1;
	for(auto x:adj[u])
		if(x!=p)
			dfs(x,u);
}
int main()
{	
	std::ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int n,i,p;
	cin>>n;
	for(i=1;i<=n;i++){
		cin>>p;
		if(p==0)
			continue;
		adj[p].pb(i);
		adj[i].pb(p);
		deg[i]++;
		deg[p]++;
	}
	if(n%2==0){
		cout<<"NO";
		return 0;
	}
	dfs(1,0);
	cout<<"YES"<<endl;
	set<pii> odd,even;
	vi res;
	for(i=1;i<=n;i++)
		if(deg[i]%2)
			odd.insert({-d[i],i});
		else
			even.insert({-d[i],i});
	while(!even.empty()){
		i=even.begin()->S;
		even.erase(even.begin());
		del[i]=1;
		cout<<i<<endl;
		for(auto x:adj[i])
			if(!del[x]){
				deg[x]--;
				if(deg[x]%2){
					even.erase({-d[x],x});
					odd.insert({-d[x],x});
				}
				else{
					odd.erase({-d[x],x});
					even.insert({-d[x],x});
				}
			}
	}
	return 0;
}