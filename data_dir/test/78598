#include<bits/stdc++.h>

using namespace std;

const int MaxN = 3e5 + 14;

int f[MaxN];
int a[MaxN];
int dp1[MaxN];
int dp2[MaxN];
int n, m;

int getMax(int pos)
{
    int res = 0;
    for(int x = pos; x >= 0; x &= x + 1, --x)
        res = max(res, f[x]);
    return res;
}

void upMax(int pos, int v)
{
    for(int x = pos; x < MaxN; x |= x + 1)
        f[x] = max(f[x], v);
}

void solve1()
{
    memset(f, 0, sizeof(f));

    for(int i = 1; i <= m; ++i)
    {
        dp1[i] = 1 + getMax(a[i]);
        upMax(a[i], dp1[i]);
    }
}

void solve2()
{
    memset(f, 0, sizeof(f));

    for(int i = m; i > 0; --i)
    {
        dp2[i] = 1 + getMax(a[i]);
        upMax(a[i], dp2[i]);
    }
}

int main()
{
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m;

    for(int i = 1; i <= n; ++i)
    {
        int l, r;
        cin >> l >> r;
        ++a[l];
        --a[r + 1];
    }

    for(int i = 2; i <= m; ++i)
        a[i] += a[i - 1];

    solve1();
    solve2();

    int ans = 0;

    for(int i = 1; i <= m; ++i)
        ans = max(ans, dp1[i] + dp2[i] - 1);
    cout << ans << '\n';

    return 0;
}
