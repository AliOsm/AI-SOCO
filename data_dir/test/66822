#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1 ;
void solve()
{
    ll n , x , li , ri , costi , ans = 1e18 ;
    cin >> n >> x ;
    vector<vector<pair<ll,ll> > > a( 212345 ) , b( 212345 ) ;
    vector<vector<ll> > v ;
    vector<ll> s( 212345 , 1e18 ) ;
    rep( i , 0 , n )
    {
        cin >> li >> ri >> costi ;
        a[li].pb( { ri - li + 1 , costi } ) ;
        b[ri].pb( { ri - li + 1 , costi } ) ;
    }
    rep( i , 1 , 212345 )
    {
        rep( j , 0 , sz(a[i]))
        {
            ll len = a[i][j].F , cost = a[i][j].S ;
            if( len < x )
            {
                ans = min( ans , cost + s[ x - len ] ) ;
                //cout << "ans = " << ans << "\n" ;
            }
        }
        rep( j , 0 , sz(b[i]))
        {
            ll len = b[i][j].F , cost = b[i][j].S ;
            //cout << "len = " << len << " cost = " << cost << "\n" ;
            s[len]=min( s[len] , cost ) ;
        }
    }
    ans >= 1e15 ? cout << "-1" : cout << ans ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
