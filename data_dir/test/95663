#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>

using namespace std;

typedef size_t index_t;
typedef vector< index_t > index_vector;

typedef vector< char > bool_vector;

#define forin(i,n) for (index_t (i) = 0; (i) < (n); ++(i))
#define all(x) (x).begin(), (x).end()
#define space ' '
#define nl '\n'
	
int read_int()
{
	int value;
	cin >> value;
	
	return value;
}

typedef pair < int, index_t > student_t;
typedef vector< student_t > student_vector;

bool students_cmp(const student_t & first, const student_t & second)
{
	return (first.first > second.first);
}

int main()
{
	size_t n = read_int();
	
	student_vector students(n);
	forin(i, n)
		students[i] = make_pair(read_int(), i);
		
	sort(all(students), students_cmp);
	
	index_vector places(n);
	forin(i, n)
	{
		student_t student = students[i];
		student_t prev_student = (i == 0 ? student : students[i-1]);
		
		index_t student_index = student.second;
		
		if (i == 0 || student.first != prev_student.first)
			places[student_index] = i + 1;
		else 
			places[student_index] = places[prev_student.second];
	}
	
	forin(i, n)
		cout << places[i] << space;
		
	cout << nl;
	
	return 0;
}