#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <ctime>
#include <string>
#include <algorithm>
#include <sstream>
#include <map>
#include <cmath>
#include <set>
using namespace std;
#define x first
#define y second
#define VI vector<int>
#define pii pair<int,int>
#define inf 1000000000
#define L(s) ((int)(s).size())
#define pb push_back
#define mp make_pair
#define all(s) (s).begin(), (s).end()
#define ll long long
int n, m, s;
pii bugs[111111];
struct T {
	int lev;
	int cost;
	int num;
} a[111111];
int cert[111111];

inline bool by_lev(const T &a, const T &b) {
	return a.lev < b.lev;
}
set<pair<int, int> > guys;
inline ll getcost(int k) {
	int bug = 0;
	int guy = 0;
	ll res = 0;
	guys.clear();
	while(bug < m) {
		while(guy < n && a[guy].lev >= bugs[bug].x) {
			guys.insert(mp(a[guy].cost, a[guy].num));
			guy++;
		}
		if (!L(guys)) return 2 * inf;
		res += guys.begin()->x;
		int hero_num = guys.begin()->y;
		guys.erase(guys.begin());
		for(int iter = 0; iter < k; ++iter) {
			cert[bugs[bug].y] = hero_num;
			++bug;
			if (bug == m) break;
		}
	}
	return res;
}
int main() {
	scanf("%d%d%d", &n, &m, &s);
	for(int i = 0; i < m; ++i) { scanf("%d", &bugs[i].x); bugs[i].y = i; }
	for(int i = 0; i < n; ++i) { scanf("%d", &a[i].lev); a[i].num = i; }
	for(int i = 0; i < n; ++i) { scanf("%d", &a[i].cost); }

	sort(a, a + n, by_lev);
	reverse(a, a + n);

	sort(bugs, bugs + m);
	reverse(bugs, bugs + m);
	
	if (getcost(m) > s) {
		cout << "NO\n";
		return 0;
	}

	int low = 0, high = m;
	while(high - low > 1) {
		int mid = (high + low) / 2;
		if (getcost(mid) > s) {
			low = mid;
		} else {
			high = mid;
		}
	}

	printf("YES\n");
	getcost(high);
	for(int i = 0; i < m; ++i) {
		if (i) printf(" ");
		printf("%d", cert[i] + 1);
	}
	printf("\n");
}