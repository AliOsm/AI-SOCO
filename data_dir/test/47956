#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				2000000000000000100
#define PI 3.14159265
#define S second
#define F first
#define Ceil(x,y) ((x+y-1)/y)
#define EPS 1e-8
#define IO ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
typedef unsigned int uint;
typedef long long ll;
int dX[] = {0,0,1,-1,0};
int dY[] = {1,-1,0,0,0};
string alpha = "abcdefghijklmnopqrstuvwxyz";
const int N = 100100;
int n,m,col[N];
vector<int>adj[N];

int main()
{
#ifndef ONLINE_JUDGE
    //freopen("in.txt","r",stdin);
#else
    //freopen("journey.in","r",stdin);
    //freopen("journey.out","w",stdout);
#endif
    sc(n); sc(m);
    map<int,int>mp;
    for(int i = 0;i<m;++i){
        int u,v; sc(u); sc(v);
        adj[u].push_back(v);
        adj[v].push_back(u);
        if(u == 1) mp[v] = 1;
        if(v == 1) mp[u] = 1;
    }
    col[1] = 1;
    for(int i = 2;i<=n;++i)
        if(mp[i]==0) col[i] = 1;

    for(auto x:adj[1]){
        col[x] = 2;
        for(auto y:adj[x])
            if(!col[y]) col[y] = 3;
        break;
    }
    for(auto x:adj[1])
        if(!col[x]) col[x]=2;

    for(int i = 1;i<=n;++i)
        if(!col[i]) return puts("-1");
    int frq[5] = {0};
    for(int i = 1;i<=n;++i)
        frq[col[i]]++;
    for(int i = 1;i<=n;++i)
    {
        int tmp[5] = {0};
        set<int>st; st.insert(col[i]);
        for(auto x:adj[i]){
            if(col[x]==col[i]) return puts("-1");
            st.insert(col[x]);
            tmp[col[x]]++;
        }
        if(sz(st)!=3) return puts("-1");
        for(int j = 1;j<=3;++j)
            if(col[i]!=j && tmp[j] != frq[j]) return puts("-1");
    }
    for(int i = 1;i<=n;++i)
        printf("%d%c",col[i]," \n"[i==n]);








    return 0;
}
