#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>

#define ll long long
#define ld long double
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vI vector<int>
#define vvI vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const ll  Inf = 2 * 1e9;
const ll  mod = 1e9 + 7;
using namespace std;


int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("hard.in", "r", stdin);
	//freopen("hard.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	vector<ll> a(n);
	map<ll, ll> mx;
	ll sum = 0;
	forn(i, 0, n) {
		cin >> a[i];
		sum += a[i];
		mx[a[i]] = i;
	}
	if (sum % 2) {
		cout << "NO";
		return 0;
	}
	ll chsum = 0;
	sum /= 2;
	forn(i, 0, n) {		
		ll tmp = sum - chsum;
		if (tmp==0 || mx.count(tmp) && mx[tmp] > i) {
			cout << "YES";
			return 0;
		}
		chsum += a[i];
		if (chsum > sum) break;

	}
	reverse(all(a));
	mx.clear();
	forn(i, 0, n) {
		mx[a[i]] = i;
	}
	chsum = 0;
	forn(i, 0, n) {		
		ll tmp = sum - chsum;
		if (tmp==0 || mx.count(tmp) && mx[tmp] > i) {
			cout << "YES";
			return 0;
		}
		chsum += a[i];
		if (chsum > sum) break;

	}
	cout << "NO";
	return 0;
}