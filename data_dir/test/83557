#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N = 19;

ll n, m, k, x, y, ans, a[N], c[N][N], dp[1 << N][N];

int main() {
    cin >> n >> m >> k;
    for (int i = 0; i < n; i++)
        cin >> a[i], dp[1 << i][i] = a[i];
    while(k--)
        cin >> x >> y, cin >> c[--x][--y];
    for (int mask = 1; mask < (1 << n); mask++)
        for (int i = 0; i < n; i++)
            if(mask & (1 << i))
                for (int j = 0; j < n; j++)
                    if((mask & (1 << j)) == 0)
                        dp[mask | (1 << j)][j] = max(dp[mask | (1 << j)][j], dp[mask][i] + a[j] + c[i][j]);
    for (int mask = 0; mask < (1 << n); mask++)
        if(__builtin_popcount(mask) <= m)
            for (int j = 0; j < n; j++)
                ans = max(ans, dp[mask][j]);
    cout << ans;
    return 0;
}