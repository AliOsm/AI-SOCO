#include<bits/stdc++.h>
using namespace std;
#define ll long long int
ll dp[102][102];
ll vec[102][102];
#define inf 2000000000000000000
ll X;
ll n,m;
ll call(ll a,ll b)
{
    if(a==n && b==m)
    {
        if(vec[a][b]>=X)
        {
            return abs(vec[a][b]-X);
        }
        else
        {
            return inf;
        }
    }
    if(dp[a][b]!=-1)
    {
        return dp[a][b];
    }
    ll x,y;
    if(a==n)
    {
        if(vec[a][b]>=X)
        {
            x=abs(X-vec[a][b]);
            X++;
            x+=call(a,b+1);
            X--;
        }
        else
        {
            x=inf;
        }
    }
    else if(b==m)
    {
        if(vec[a][b]>=X)
        {
        x=abs(X-vec[a][b]);
        X++;
        x+=call(a+1,b);
        X--;
        }
        else
        {
            x=inf;
        }
    }
    else
    {
        if(vec[a][b]>=X)
        {
        x=abs(X-vec[a][b]);
        X++;
        x+=call(a,b+1);
        X--;
        }
        else
        {
            x=inf;
        }


        if(vec[a][b]>=X)
        {
        y=abs(X-vec[a][b]);
        X++;
        y+=call(a+1,b);
        X--;
        }
        else
        {
            y=inf;
        }
        x=min(x,y);
    }
    return dp[a][b]=x;
}
int main()
{
    ll a,b,c,d,e,i,j,k,l,x,y,t,p,r,mid;
    scanf("%lld",&t);
    for(p=1;p<=t;p++)
    {
        scanf("%lld%lld",&n,&m);
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=m;j++)
            {
                scanf("%lld",&vec[i][j]);
            }
        }

        /*l=-300;
        r=1e15;
        x=0;
        ll ans;*/
        ll ans;
        ans=inf;
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=m;j++)
            {
                x=vec[i][j]-i-j+2;
                if(x<=vec[1][1])
                {
                    for(ll ii=1;ii<=n;ii++)
                    {
                        for(ll jj=1;jj<=m;jj++)
                        {
                            dp[ii][jj]=-1;
                        }
                    }
                    X=x;
                    x=call(1,1);
                    ans=min(ans,x);
                }

            }
        }
        printf("%lld\n",ans);
    }
}
