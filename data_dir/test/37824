#include <bits/stdc++.h>
using namespace std;

int n, m, r2, c2;
vector<string> g;

bool f(int i, int j)
{
    return i == r2 && j == c2;
}

bool s(int i, int j)
{
    return i >= 0 && i < n && j >= 0 && j < m && g[i][j] == '.';
}

int adj_d(int i, int j)
{
    return s(r2 - 1, c2) + s(r2 + 1, c2) + s(r2, c2 - 1) + s(r2, c2 + 1);
}

bool dfs(int i, int j);
bool dfs_h(int i, int j)
{
    return (s(i, j) || f(i, j)) && dfs(i, j);
}

bool dfs(int i, int j)
{
    if (f(i, j))
        return true;
    g[i][j] = 'X';
    return dfs_h(i - 1, j) || dfs_h(i + 1, j) || dfs_h(i, j - 1) || dfs_h(i, j + 1);
}

int main()
{
    cin >> n >> m;
    g.resize(n);
    for (int i = 0; i < n; i++)
        cin >> g[i];
    int r1, c1;
    cin >> r1 >> c1 >> r2 >> c2;
    r1--, c1--, r2--, c2--;
    if (f(r1, c1))
        cout << (adj_d(r2, c2) > 0 ? "YES" : "NO");
    else {
        g[r1][c1] = '.';
        if (g[r2][c2] == '.' && adj_d(r2, c2) <= 1)
            cout << "NO";
        else
            cout << (dfs(r1, c1) ? "YES" : "NO");
    }
}