#include <bits/stdc++.h>
using namespace std;
const long long mod = 1e9 + 7;
int vis[1010];
char str[1010];
long long memo[1010][1010][3];
int l;
int getbits(int v) {
	int c = 0;
	while (v) {
		if (v & 1)
			++c;
		v >>= 1;
	}
	return c;
}

int getsteps(int idx) {
	if (idx == 1)
		return 1;
	if (vis[idx] != -1)
		return vis[idx];
	vis[idx] = 1 + getsteps(getbits(idx));
	return vis[idx];
}

long long solve(int i, int k, bool b) {
	if (k < 0)
		return 0;
	if (i == l) {
		if (k == 0)
			return 1ll;
		return 0;
	}
	long long &r = memo[i][k][b];
	if (~r)
		return r;
	r = 0;


	if (b) {
		r = (r + solve(i + 1, k, 1)) % mod;
		r = (r + solve(i + 1, k - 1, 1)) % mod;
	} else {
		if (str[i] == '1') {
			r = (r + solve(i + 1, k, 1)) % mod;
			r = (r + solve(i + 1, k - 1, 0)) % mod;
		} else {
			r = (r + solve(i + 1, k, 0)) % mod;
		}
	}
	return r;
}

int main() {
	//freopen("in.txt","rt",stdin);
	scanf("%s", str);
	l = strlen(str);
	int k;
	scanf("%d", &k);
	if(k==0){
		puts("1");
		return 0;
	}
	memset(vis, -1, sizeof vis);
	memset(memo, -1, sizeof memo);
	long long ans = 0;
	for (int i = 1; i <= l; ++i) {
		if (getsteps(i) == k ) {
			if(i==1) ans=(ans+(l-1))%mod;
			else ans = (ans + solve(0, i, 0)) % mod;
			//printf("%d <<\n",i);
		}

	}
	printf("%lld", ans);
}

