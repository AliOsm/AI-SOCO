//raja1999

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")

#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string> 
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
using namespace __gnu_pbds;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >
#define int ll

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

//std::ios::sync_with_stdio(false);
int a[200005],preodd[200005],preeven[200005],odd[200005],even[200005];
main(){
	std::ios::sync_with_stdio(false); cin.tie(NULL);
	int t,t1;
	//cin>>t;
	t=1;
	t1=t;
	while(t--){
		int n,i,gg1=0,haha1=0,gg=0,haha=0,anso=0,anse=0,val;
		cin>>n;
		rep(i,n){
			cin>>a[i];
			if(a[i]<0){
				odd[i]=1;
			}
			else{
				even[i]=1;
			}
		}
		rep(i,n){
			preodd[i]=i>0?preodd[i-1]+odd[i]:odd[i];
		}
		fd(i,n-1,0){
			if(preodd[i]%2){
				haha++;
			}
			else{
				gg++;
			}
			// if(preeven[i]%2){
			// 	haha1++;
			// }
			// else{
			// 	gg1++;
			// }
			val=0;
			if(i!=0){
				val=preodd[i-1];
			}
			if(val%2==0){
				anso+=haha;
			}
			else{
				anso+=gg;
			}
			if(val%2==0){
				anse+=gg;
			}
			else{
				anse+=haha;
			}
		}
		cout<<anso<<" "<<anse<<endl;
	}
	return 0;
} 
	