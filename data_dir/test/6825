#include<bits/stdc++.h>
#define st first
#define nd second
#define pb push_back
#define ppb pop_back
#define umax(x,y) x=max(x,y)
#define umin(x,y) x=min(x,y)
#define ll long long
#define ii pair<int,int>
#define iii pair<ii,int>
#define iiii pair<ii,ii>
#define sz(x) ((int) x.size())
#define orta ((bas+son)>>1)
#define all(x) x.begin(),x.end()
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define pw(x) (1<<(x))
#define inf 1000000000
#define MOD 1000000007
#define M 15000007
#define N 300005
#define MAX 5032117	
#define LOG 100
#define KOK 333
using namespace std;

int n;
ll ans,x;
int a[N],pre[N],odd[N],ev[N];

int ar(ll x) {

	int tot=0;

	while(x) {

		tot+=x%2;

		x/=2;

	}

	return tot;

}
	
int main() {

	//freopen("input.txt","r",stdin);

	scanf("%d",&n);

	ev[0]=1;

	for(int i=1;i<=n;i++) {

		scanf("%lld",&x);

		a[i]=ar(x);

		pre[i]=pre[i-1]+a[i]%2;

		odd[i]=odd[i-1]+pre[i]%2;
		ev[i]=ev[i-1]+1-pre[i]%2;

	}

	for(int i=1;i<=n;i++) {

		int mx=-inf;
		int sum=0;

		for(int j=i;j>=max(1,i-69);j--) {

			sum+=a[j];

			umax(mx,a[j]);

			if(sum%2==0 && sum-mx>=mx) ans++;

		}

		int upto=max(-1,i-71);

		if(upto==-1) continue ; 

		if(pre[i]%2) {

			ans+=odd[upto];

		}
		else {

			ans+=ev[upto];

		}

	}

	printf("%lld",ans);

}