/*
 _     _                             
| |__ | |__   __ _  __ _ _   _  __ _ 
| '_ \| '_ \ / _` |/ _` | | | |/ _` |
| |_) | | | | (_| | (_| | |_| | (_| |
|_.__/|_| |_|\__,_|\__, |\__, |\__,_|
                   |___/ |___/       
*/
#include<bits/stdc++.h>

#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll int,ll int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
using namespace std;

#define N  100005

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
	// cin>>TESTS;
	while(TESTS--)
	{
		ll int n,m;
		cin>>n>>m;
		swap(n,m);
		ll int arr[n+1][m+1];
		for(ll int i=1;i<=n;i++)
		{
			for(ll int j=1;j<=m;j++)
			{
				cin>>arr[i][j];
			}
		}
		pii ans={hell,-1};
		for(ll int c=1;c<m;c++)
		{
			vector<pii> v;
			for(ll int i=1;i<=n;i++)
			{
				v.pb({arr[i][c]-arr[i][m],i});
			}
			sort(all(v));
			reverse(all(v));
			ll int sm=0,maxi=0;
			for(auto it:v)
			{
				if(sm+it.F>=0)
				{
					sm+=it.F;
					maxi++;
				}
				else break;
			}
			ans=min(ans,{n-maxi,c});
		}
		cout<<ans.F<<endl;
		ll int c=ans.S;
		vector<pii> v;
		for(ll int i=1;i<=n;i++)
		{
			v.pb({arr[i][c]-arr[i][m],i});
		}
		sort(all(v));
		reverse(all(v));
		ll int sm=0,maxi=0;
		for(auto it:v)
		{
			if(sm+it.F>=0)
			{
				sm+=it.F;
				maxi++;
			}
			else cout<<it.S<<" ";
		}
	}
	return 0;
}