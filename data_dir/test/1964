#include<iostream>
//#include <bits/stdc++.h>
using namespace std;
#include<algorithm>
#include<map>
#include<vector>
#include <iomanip>
#include <set>
#include<cmath>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
#define int long long
#define mp make_pair
#define db double;
#define ldb long double;
void sp(double y,int x){cout<<fixed<<setprecision(x)<<y;}
int inf=1e9+10;
int const M=2e5+10;
int const M2=1e6+10;
int const M3=1e3+10;
int mod=1e9+7;
int a,b,p[M],mark[M];
vector<int>adj[M];
int ans[M];
int ch=0;
int dep[M];
void fp(int v)
{
    ans[v]=-1;
    if(v==ch){
        ch=-1;
        return;
    }
    if(p[v]==0)
        return;
    fp(p[v]);
}
void dfs(int v,int l)
{
    dep[v]=dep[l]+1;
    mark[v]=1;
    p[v]=l;
    for(int i=0;i<adj[v].size();i++)
    {
        int u=adj[v][i];
        if(u==l)
            continue;
        if(mark[u]){
            if(dep[v]>dep[u]){
                ch=u,fp(v);
                if(ch>=0)
                    fp(u);
            }
        }
        else
            dfs(u,v);
        if(ans[u]==-1 && ans[v]==0)
            ans[v]=1;
        if(ans[u]>0 && ans[v]==0)
            ans[v]=ans[u]+1;
    }
}
void dfs2(int v,int l)
{
    mark[v]=1;
    if(ans[v]==0){
        ans[v]=ans[l]+1;
        if(ans[l]==-1)
            ans[v]=1;
    }
    for(int i=0;i<adj[v].size();i++)
    {
        int u=adj[v][i];
        if(mark[u])
            continue;
        else
            dfs2(u,v);
    }
}
int sa(int x,int y){if(x%y==0)return x/y;return x/y+1;}
int binp(int x,int y){int ans=1;int t=x;while(y!=0){if(y%2==1){ans*=t;ans;}y/=2;t*=t;t;}return ans;}
main(){
	ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
        cin>>a>>b,adj[a].pb(b),adj[b].pb(a);
    dfs(1,0);
    for(int i=1;i<=n;i++)
        mark[i]=0;
    dfs2(1,0);
    int t=0;
    for(int i=1;i<=n;i++)
        cout<<max(ans[i],t)<<" ";
}
