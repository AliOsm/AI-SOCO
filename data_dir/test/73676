#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef pair<int,int> pii;
typedef vector<int> vec;

#define ones(x) __builtin_popcount(x)
#define onesl(x) __builtin_popcountl(x)
#define onesll(x) __builtin_popcountll(x)

#define pb push_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define mod 1000000007

int Set(int N,int pos){return N=N | (1<<pos);}
int reset(int N,int pos){return N= N & ~(1<<pos);}
bool check(int N,int pos){return (bool)(N & (1<<pos));}



int main()
{
    ///freopen("output.txt","w",stdout);
    ///freopen("input.txt","r",stdin);

    int n,m;
    scn2(n,m);

    int a[m+1][n+1] , idx[n+1];

    for(int i=1; i<=m; i++){

        for(int j=1; j<=n; j++) scn(a[i][j]);
    }

    int len[m+1][n+1];

    for(int i=1; i<=n; i++) idx[a[1][i]] = i;
    //cout<<"\n\n";
    for(int i=1; i<=m; i++){

        for(int j=1; j<=n; j++){

            a[i][j] = idx[a[i][j]];

           // cout<<a[i][j]<<" ";
        }
      //  cout<<endl;
    }

    for(int i=1; i<=m; i++){

        for(int j=n; j ; j--){

            int val = a[i][j];

            if(j==n || (a[i][j]+1 != a[i][j+1])) len[i][val] = 1;

            else len[i][val] = len[i][val+1] + 1;
        }
    }

    lli ans = 0;
    int last = 0;

    //cout<<len[2][1]<<endl;

    for(int i=1; i<=n; i++){

        if(last>=i) continue;

        int mn = n+1;

        for(int j=1; j<=m; j++){

            mn = min(mn,len[j][i]);
        }

        last = i + mn - 1;

        //cout<<i<<" mn "<<mn<<" -----\n";

        ans += (mn * 1LL * (mn+1))/2;
    }

    cout<<ans;

    return 0;

}
