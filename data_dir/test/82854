#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using pii = pair<int,int>;

#define fi first
#define se second
#define eb emplace_back
#define all(x) x.begin(), x.end()

int const N = 100 * 1000 + 16;
int const M = 1000 * 1000 * 1000 + 7;

struct trie {
  int sz;
  int t[3150*1000+5][11];

  int sz2;
  int h = 10;
  int t2[64][11];
  int at[64][11];

  void insert(string const& w) {
    for(int i = 0; i < 9; ++i)
        insert(w, i);
  }

  void insert(string const& w, int i) {
    auto p = 0;    
    for(; i < 9; ++i) {
      int x = w[i]-'0';
      if(not t[p][x])
        t[p][x] = ++sz;
      p = t[p][x];
      t[p][10]++;
    }
  }

  void insert2(string const& w) {
    h++;
    sz2 = 0;
    for(int i = 0; i < 9; ++i)
        insert2(w, i);
  }

  void insert2(string const& w, int i) {
    auto p = 0;    
    for(; i < 9; ++i) {
      int x = w[i]-'0';
      if(at[p][x] != h)
        t2[p][x] = ++sz2, at[p][x] = h, t2[sz2][10] = 0;
      p = t2[p][x];
      t2[p][10]++;
    }
  }

  tuple<int,int,int> q[64];
  void query(string const& w) {
    insert2(w);

    int tail = 0;
    for(int i = 0; i < 9; ++i)
      q[tail++] = make_tuple(0, 0, i);

    for(int front = 0; front < tail; front++) {
      int p1, p2, i;
      tie(p1, p2, i) = q[front];
      int len = i >> 4;
      i &= 0xF;

      int x = w[i]-'0';
      p1 = t[p1][x];
      p2 = t2[p2][x];

      if(t[p1][10] == t2[p2][10]) {
        cout.write(&w[i-len], len+1) << "\n";
        return;
      }

      if(i+1 < 9)
        q[tail++] = make_tuple(p1, p2, (len+1<<4)|(i+1));
    }
  }
} t;

string a[70*1000];

int main() {
  cin.tie(0);
  cin.sync_with_stdio(0);

  int n;
  cin >> n;

  for(int i = 0; i < n; ++i) {
    cin >> a[i];
    t.insert(a[i]);
  }

  for(int i = 0; i < n; ++i) {
    string const& s = a[i];
    int mn = 10;
    int idx = -1;
    t.query(s);
  }
}