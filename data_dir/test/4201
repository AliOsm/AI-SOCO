#include <bits/stdc++.h>
using namespace std;
typedef long long Long;

const Long MX = 1e5 + 10;

vector<Long> z_function(string &s){
	Long l = 0, r = 0, n = s.size();
	vector<Long> z(n,0);
	for(Long i = 1; i < n; i++){
		if(i <= r) z[i] = min(r - i + 1, z[i - l]);
		while(i + z[i] < n && s[z[i]] == s[i + z[i]]) z[i]++;
		if(i + z[i] - 1 > r) l = i, r = i + z[i] - 1;
	}
	return z;
}

Long cnt[MX];
bool vis[MX];

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cout.precision(10);
	cout << fixed;
	
	string s;
	cin >> s;
	Long n = s.size();
	vector<Long> Z = z_function(s);
	Long tot = 0;
	Z[0] = n;
	for(Long i = n - 1; i >= 0; i--){
		if(i + Z[i] == n){
			tot++;
			vis[Z[i]] = true;
		}
		cnt[Z[i]]++;
	}
	
	for(Long i = n - 1; i >= 0; i--){
		cnt[i] = cnt[i + 1] + cnt[i];
	}
	
	cout << tot << "\n";
	for(Long i = 1; i <= n; i++){
		if(vis[i]){
			cout << i << " " << cnt[i] << "\n";
		}
	}
	return 0;
}
