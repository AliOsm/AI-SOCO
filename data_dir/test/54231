#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
#include <stdio.h>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
using namespace std;

long long n, m;
const int MAXN = 100005;
long long x[MAXN], d[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	long long sum = 0;
	long long maxdist = 0, mindist = 0;
	if(n % 2 == 0)
		maxdist = (1 + (n - 1) / 2) * ((n - 1) / 2) / 2 + (1 + n / 2) * (n / 2) / 2;
	else
		maxdist = (1 + n / 2) * (n / 2);
	mindist = n * (n - 1) / 2;

 	for(int i = 0; i < m; i++)
	{
		cin >> x[i] >> d[i];
		sum += x[i] * n;
		if(d[i] < 0)
			sum += d[i] * maxdist;
		else
			sum += d[i] * mindist;
	}

	printf("%.8f\n", (double)sum / n);

	return 0;
}