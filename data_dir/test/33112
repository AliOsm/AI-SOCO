
// ~/SolverToBe/Developers/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>
#include <assert.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 100005, M = 1000005;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;

int n;
vector<pair<int,int> > v;
vector<int> p;

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    scanf("%d",&n);
    v.resize(n);
    for(int i=0; i<n; i++)
        scanf("%d%d",&v[i].first, &v[i].second);
    if(n==3) {
        for(int i=1; i<=3; i++)
            printf("%d ", i);
        puts("");
        return 0;
    }
    p.push_back(v[0].first);
    int a=v[0].second,b=-1;
    for(int i=1; i<n; i++) {
        if(v[i].first==v[0].first) b = v[i].second;
        else if(v[i].second==v[0].first) b = v[i].first;
    }
    if(v[a-1].first!=v[0].first && v[a-1].second!=v[0].first)
        p.push_back(a);
    else p.push_back(b);
    for(int i=0; i<=n-3; i++) {
        int a = v[p[i]-1].first, b = v[p[i]-1].second;
        if(a==p[i+1]) p.push_back(b);
        else p.push_back(a);
    }
    for(int i=0; i<n; i++)
        printf("%d ", p[i]);
    puts("");
    return 0;
}