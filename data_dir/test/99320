#include<bits/stdc++.h>
using namespace std;
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(ll i=0;i<n;i++)
#define hell                1000000007LL
#define vi                  vector<ll>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<ll,ll>
#define all(c)              c.begin(),c.end()
#define sz(c)               c.size()
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
    ll res=1;
    x=x%p;
    while(y>0)
    {
        if(y&1)
            res=((res%p)*(x%p))%p;
        y=y>>1;
        x=((x%p)*(x%p))%p;
    }
    return res;
}
bool isprime(ll n)
{
    if(n<2) return false;
    else if(n==2) return true;
    else if(n%2==0) return false;
    else
    {
        ll z=sqrt(n);
        rep(i,z-1) if(n%(i+2)==0) return false;
        return true;
    }
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    ll n,m;
    cin>>n>>m;
    vii g(n);
    vector<pii > edges;
    rep(i,m)
    {
        ll a,b;
        cin>>a>>b;
        g[--a].pb(--b);
        g[b].pb(a);
        edges.pb(mp(a,b));
    }
    rep(i,n) sort(all(g[i]));
    ll ans=LLONG_MAX;
    rep(i,m)
    {
        ll a=edges[i].fi,b=edges[i].se;
        ll j=0,k=0;
        while(j<sz(g[a]) && k<sz(g[b]))
        {
            if(g[a][j]<g[b][k]) j++;
            else if(g[a][j]>g[b][k]) k++;
            else
            {
                ans=min(ans,0LL+sz(g[a])+sz(g[b])+sz(g[g[a][j]])-6);
                j++;
                k++;
            }
        }
    }
    if(ans==LLONG_MAX) cout<<-1;
    else cout<<ans;
    return 0;
}
