#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stdio.h>
#include <cstdio>
#include <math.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <deque>
#include <random>
#include <iomanip>
#include <bitset>
                        
using namespace std;
                        
template<typename T> void uin(T &a, T b) {
    if (b < a) {
        a = b;
    }
}
                        
template<typename T> void uax(T &a, T b) {
    if (b > a) {
        a = b;
    }
}

#define int long long
#define ghost signed
#define left left228
#define right right228
#define prev prev228
#define list list228

void solve() {
	int n, m;
	cin >> n >> m;
	vector< vector< char > > a(n + 1, vector< char > (m + 1));
	vector<int> row(n + 1), col(m + 1);
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			cin >> a[i][j];
			row[i] += (a[i][j] == '.');
			col[j] += (a[i][j] == '.');
		}
	}
	int ans = n * m + 10;
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			uin(ans, row[i] + col[j] - (a[i][j] == '.'));
		}
	}
	cout << ans << '\n';
}

ghost main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
	int t;
	cin >> t;
	while(t--) solve();
    return 0;
} // kek ;
