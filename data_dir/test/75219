#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
double E = 2.71828182846;
double PI = 3.1415926535897932384626433832795;
double EPS = 1e-9;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int64, int64> pii;

const int MAXN = 1001;

string s, t;
int n, m, k;
int dp[MAXN][MAXN][11][2];

int fun(int poss, int post, int cnt, int open)
{
	if (poss == n)
		return 0;
	if (post == m)
		return 0;
	if (k == cnt && !open)
		return 0;
	if (dp[poss][post][cnt][open] != -1)
		return dp[poss][post][cnt][open] ;
	int ans = 0;
	ans = max(ans, fun(poss + 1, post, cnt, 0));
	ans = max(ans, fun(poss, post + 1, cnt, 0));
	if (s[poss] == t[post])
	{
		if (open)
		{
			ans = max(ans, fun(poss + 1, post + 1, cnt, 1) + 1);
		}
		else
		{
			ans = max(ans, fun(poss + 1, post + 1, cnt + 1, 1) + 1);
		}
	}
	return dp[poss][post][cnt][open] = ans;
}

void solve()
{
	
	cin >> n >> m >> k;
	cin >> s >> t;
	memset(dp, -1, sizeof dp);
	cout << fun(0, 0, 0, 0);
}
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	solve();
	
	
 
    return 0;
}   