
/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;
typedef unsigned int uint;

int main() {
    uint n;
    cin>>n;
    string s;
    cin>>s;

    if(n%2) {
        cout<<":(";
        return 0;
    }

    uint open=0;
    uint close=0;
    for(auto c : s) {
        if(c=='(')
            open++;
        else if(c==')')
            close++;
    }

	if(open>n/2 || close>n/2) {
        	cout<<":(";
        	return 0;
	}

// first try to make it a correct seq by making the postfix as much
// closing brackets as possible, but not to much.
    uint i=0;
    while(close<s.length()/2 && s[s.length()-1-i]=='?') {
        s[s.length()-1-i]=')';
        i++;
        close++;
    }

// then simply make it a correct string
    int needopen=s.length()/2-open;
    for(uint i=0; i<s.length(); i++) {
        if(s[i]=='?') {
            if(needopen>0) {
                s[i]='(';
                needopen--;
            } else
                s[i]=')';
        }
    }

// check if we result in a correct string and all prefixes are not correct
    open=0;
    close=0;
    for(uint i=0; i<s.length(); i++) {
        if(s[i]=='(')
            open++;
        else
            close++;
        if(open==close && i<s.length()-1) {
            cout<<":(";
            return 0;
        }
    }
    if(open!=close) {
        cout<<":(";
        return 0;
    }

    if(s[0]!='(' || s[s.length()-1]!=')')
        cout<<":(";
    else
        cout<<s;
    cout<<endl;
}

