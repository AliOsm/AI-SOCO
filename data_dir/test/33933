#include <bits/stdc++.h>
using namespace std;
#define pf push_front
#define pb push_back
#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)
#define rep(i,t) for (LL i=0;i<t;i++)
#define pii pair<LL,LL>
#define pi pair<pii,pii>
#define X first
#define Y second 
#define fast cin.tie(0),cout.tie(0),ios::sync_with_stdio(false) 
typedef long long LL;
const LL maxN=5e2+7,MOD=1e9+7,INF=1e18+7,N=1e6+17;
LL n,m,x,y,z,dp[maxN][maxN],dis[maxN][maxN],now,w,res;
vector<pii>a[maxN];
void floyd()
{
    FOR(k,1,n)
    {
        FOR(i,1,n)
        {
            FOR(j,1,n)
                dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);
        }
    }
}
void fill_dp()
{
    FOR(i,1,n)
    {
        FOR(j,1,n)
        {
            rep(z,a[j].size())
            {
                now=a[j][z].X;
                w=a[j][z].Y;
                if(dis[i][j]==dis[i][now]+w)
                    dp[i][j]++;
            }
        }
    }
}
main()
{
    fast;
    cin>>n>>m;
    FOR(i,1,n)
    {
        FOR(j,1,n)
        {
            if(i!=j)
                dis[i][j]=INF;
        }
    }
    FOR(i,1,m)
        cin>>x>>y>>z,a[x].pb(pii(y,z)),a[y].pb(pii(x,z)),dis[x][y]=dis[y][x]=z;
    floyd();
    fill_dp();
    FOR(i,1,n)
    {
        FOR(j,i+1,n)
        {
            res=0;
            FOR(z,1,n)
            {
              if(dis[i][j]==dis[i][z]+dis[z][j])
                res+=dp[i][z];
            }
            cout<<res<<" ";
        }
    }
    return cout<<"\n",0;
}