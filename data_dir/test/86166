/* Author: Dhruv Rastogi */
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second
const long double PI = acos(-1.0);

const int N = 2e5+4;
int indeg[N],ind[N];
vll adjlist[N];
int min_reachable[N];
int min_reachable2[N];
vll radjlist[N];
int outdeg[N];
void solve(){  
	int n,m;
	cin>>n>>m;
	rep(i,0,m){
		int x,y;
		cin>>x>>y;
		adjlist[x].pb(y);
		radjlist[y].pb(x);
		++indeg[y];
		++ind[y];
		++outdeg[x];
	}  
	queue<int> q;
	rep(i,1,n+1){
		min_reachable[i]=i;
		min_reachable2[i]=i;
	}
	rep(i,1,n+1){
		if(indeg[i]==0) q.push(i);
	}
	int nvis=0;
	while(!q.empty()){
		int k=q.front();
		++nvis;
		q.pop();
		for(int i:adjlist[k]){
			indeg[i]--;
			min_reachable2[i]=min(min_reachable2[i],min_reachable2[k]);
			if(indeg[i]==0){
				q.push(i);
			}
		}
	}	
	if(nvis !=n){
		cout<<-1<<endl;
		return;
	}
	string ret(n,'E');
	rep(i,1,n+1){
		if(outdeg[i]==0){
			q.push(i);
		}
	}
	while(!q.empty()){
		int k=q.front();
		q.pop();
		for(int j:radjlist[k]){
			min_reachable[j] = min(min_reachable[j], min_reachable[k]);
			outdeg[j]--;
			if(outdeg[j]==0){
				q.push(j);
			}
		}
	}
	int k=0;
	rep(i,1,n+1){
		if(min_reachable[i]==i and min_reachable2[i]==i){
			ret[i-1]='A';
			++k;
		}
	}
	cout<<k<<endl;
	cout<<ret<<endl;

}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}