#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define pi 3.1415926536
ll min(ll a,ll b)
{ if(a>b) return b;
return a;
}
ll max(ll a,ll b)
{ if(a>b) return a;
return b;
}
int isprime(ll n)
{ if(n==2) return 1;
    if(n<2||n%2==0) return 0;
       for(int i=3;i*i<=n;i+=2) if(n%i==0) return 0;
    return 1;
}
ll power(ll a,ll b,ll mod)
{ ll res=1;
    while(b)
    {  if(b&1) {res=res*a;res%=mod;}
        a=a*a;a%=mod;
        b=b>>1;
    }
    return res%mod;
    
}
void bfs(ll level[],vector <int> adj[],ll n,ll visited[])
{ queue <int> q;
    q.push(1);
    visited[1]=1;
    level[1]=1;
    while(!q.empty())
    { int p=q.front();
        q.pop();
        for(int i=0;i<adj[p].size();i++)
        {  
           if(visited[adj[p][i]]==0)
           {   level[adj[p][i]]=level[p]+1; 
               q.push(adj[p][i]);
               visited[adj[p][i]]=1;
           }
            
        }
        
    }
} 
void dfs(ll x,vector <int> adj[],ll visited[])
{   
    stack <int> s;
    s.push(x);
    visited[x]=1;
          int p=s.top();
            for(int i=0;i<adj[p].size();i++)
        {     if(visited[adj[p][i]]==0)
                 dfs(adj[p][i],adj,visited);
           
        }
    s.pop();
}
int main(){  
       ll n;
       cin>>n;
       ll x0,y0,t1,t2,count=0;
       double m[n+1];
       cin>>x0>>y0;
       for(int i=1;i<=n;i++) 
       {cin>>t1>>t2; 
       double temp1=t2-y0;
       double temp2=t1-x0;
              if(temp2==0) m[i]=2e4+10;
              else
              m[i]=temp1/temp2;
       
       }
       /*for(int i=1;i<=n;i++) cout<<m[i]<<" ";*/
        for(int i=1;i<=n;i++)
        {  if(m[i]!=1000000) count++;
          for(int j=i+1;j<=n;j++)
            if(m[j]==m[i]) m[j]=1000000;
        }
        
        cout<<count<<endl;
    return 0;
}
