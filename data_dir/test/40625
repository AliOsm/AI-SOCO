#include <iostream>
#include <cstdio>
#include <stack>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <set>
#include <map>
using namespace std;

typedef pair<int, int> pi;
typedef long long ll;

const int MAXN = 1000005;

bool active[MAXN];

struct Event{
    char action;
    int id;
} events[MAXN];

int extra[MAXN];

int main()
{

    int n; cin >> n;

    //int capacity = 0;
    int maxi = 0;

    for(int i = 0; i < n; i++){

        cin >> events[i].action >> events[i].id;

        int id = events[i].id;

        if( events[i].action == '-' ){

            if(!active[id]){

                for(int j = 0; j <= i; j++)
                    extra[j]++;
            }
            active[id] = false;

        }else{
            active[id] = true;
        }
    }

    memset(active, false, sizeof active);
    int e;
    int capacity = 0;
    for(int i = 0; i < n; i++){

        int id = events[i].id;
        char act = events[i].action;

        if(act == '-'){
            if(active[id])
                capacity--;

            active[id] = false;
        }else{
            if(!active[id])
                capacity++;
            active[id] = true;
        }
        maxi = max(maxi, capacity + extra[i]);
    }
    cout << maxi << endl;

    return 0;
}
