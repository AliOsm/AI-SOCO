#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define dbg(x) cout << #x << '=' << x << '\n';
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define pb push_back
#define MAXN 100005
#define INF 1000000005
#define LINF 1000000000000000005
#define x1 xdddddddddddddddddd
#define y1 ydddddddddddddddddd

ll n,k,dp[1005],fc[1005],inv[1005],mod=1e9+7,ans;

string s;

vector <ll> b;

ll pwr(ll a, ll p){
    if(p==0) return 1;
    if(p%2) return pwr(a,p-1)*a%mod;
    else{
        ll x=pwr(a,p/2);
        return x*x%mod;
    }
}

ll comb(ll n, ll k){
    if(n<k) return 0;
    if(k<0) return 0;
    return (fc[n]*inv[k]%mod)*inv[n-k]%mod;
}

int32_t main(){
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    fc[0]=1; inv[0]=1;
    for(int i=1;i<=1000;i++){
        fc[i]=fc[i-1]*i%mod;
        inv[i]=pwr(fc[i],mod-2);
    }

    cin >> s >> k;
    n=s.lg;
    if(k==0){
        cout << 1;
        return 0;
    }
    for(int i=0;i<n;i++){
        if(s[i]=='1') b.pb(n-i-1);
    }
    for(int i=1;i<=1000;i++){
        ll x=i;
        while(x!=1){
            dp[i]++; ll f=0;
            for(int j=0;j<15;j++){
                if(x&(1<<j)) f++;
            }
            x=f;
        }
        if(dp[i]==k-1){
            x=i;
            for(int j : b){
                ans+=comb(j,x);
                ans%=mod;
                x--;
            }
            if(b.sz==i) ans++;
            ans%=mod;
        }
    }
    if(k==1) ans--;
    cout << ans;
}
