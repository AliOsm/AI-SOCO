#include <bits/stdc++.h>

#define int long long

using namespace std;

int a[600001];
int t[1400001];
int	ok[1400001];
int d[1000001];              			 
int n, q;

void build (int v = 1, int tl = 1, int tr = n) {
	if (tl == tr) {
		t[v] = a[tl];
		if (t[v] == d[t[v]]) ok[v] = 0;
		else ok[v] = 1;
		return;
	}
	int tm = (tl + tr) / 2;
	build (v + v, tl, tm);
	build (v + v + 1, tm + 1, tr);
	ok[v] = ok[v + v] + ok[v + v + 1];  
	t[v] = t[v + v] + t[v + v + 1];
}

void upd (int l, int r, int v = 1, int tl = 1, int tr = n) {
	if (ok[v] == 0) return;
	if (tr < l || tl > r) return;
	if (tl == tr) {
		t[v] = d[t[v]];      
		if (t[v] == d[t[v]]) {
			ok[v] = 0;
		}
		return;
	}
	int tm = (tl + tr) / 2;
	upd (l, r, v + v, tl, tm);
	upd (l, r, v + v + 1, tm + 1, tr);
	ok[v] = ok[v + v] + ok[v + v + 1];
	t[v] = t[v + v] + t[v + v + 1];
}

int get (int l, int r, int v = 1, int tl = 1, int tr = n) {
	if (tr < l || tl > r) return 0;
	if (tl >= l && tr <= r) return t[v];
	int tm = (tl + tr) / 2;
	return get (l, r, v + v, tl, tm) + get (l, r, v + v + 1, tm + 1, tr);
}

 main () {  	
 	ios_base::sync_with_stdio (0);
 	cin.tie (0), cout.tie (0);
    cin >> n >> q;
    for (int i = 1;i <= n;i ++) {
    	cin >> a[i];
    }
    build ();
    for (int i = 1;i <= 1000000;i ++) {
    	for (int j = i;j <= 1000000;j += i) {
    		d[j] ++;
    	}
    }
    while (q --) {
    	int tp;
    	cin >> tp;
    	if (tp == 1) {
    		int l, r;
    		cin >> l >> r;
    		upd (l, r);
    	}
    	else {
    		int l, r;
    		cin >> l >> r;
    		cout << get (l, r) << endl;
    	}
    }
    return 0;           		            	
}