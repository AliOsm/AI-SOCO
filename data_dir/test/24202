#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ll long long
//increase stack size
#pragma comment(linker, "/STACK:16777216")
 
ll mxm() {return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a, Args... args) { return max(a,mxm(args...)); }
 
ll mnm() {return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a, Args... args) { return min(a,mnm(args...)); }
 
template<class T> ostream& operator<<(ostream& os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<"]";
}
template<class L,class R> ostream& operator<<(ostream& os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}
 
#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template <typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
	const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif
 
#define ld long double
#define pll pair<ll,ll>
#define ii pair<int,int>
#define vll vector<ll>
#define vii vector<ii>
#define vi vector<int>
#define vpll vector<pll>
#define vld vector<ld>
#define vvld vector<vld>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvii vector<vii>
#define I insert
#define F first
#define S second
#define pb push_back
#define endl "\n"
#define all(x)	x.begin(),x.end()
 
const int mod=1e9+7;
// 128 bit: __int128
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}
 
struct compare{
	bool operator() (const int &a,const int &b) const{
		return a>b;
	}
};

typedef tree<pair<ll,ll> ,null_type,less<pair<ll, ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

const int N = 2e5 + 10;

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	ll n;
	cin >> n;
	vll v(n);
	for(ll i = 0; i < n; i++)
		cin >> v[i];
	vll nx(n, -1), prev(n, -1);
	stack<ll> s;
	for(ll i = 0; i < n; i++){
		while(!s.empty() && v[s.top()] >= v[i])
			nx[s.top()] = i, s.pop();
		s.push(i);
	}
	while(!s.empty())
		s.pop();
	for(ll i = n - 1; i >= 0; i--){
		while(!s.empty() && v[s.top()] >= v[i])
			prev[s.top()] = i, s.pop();
		s.push(i);
	}
	vll fwd(n), bck(n);
	for(ll i = 0; i < n; i++){
		if(i == 0){
			bck[i] = v[i];
			continue;
		}
		ll j = prev[i];
		if(j == -1)
			bck[i] = (i + 1) * v[i];
		else
			bck[i] = (i - j) * v[i] + bck[j];
	}
	for(ll i = n - 1; i >= 0; i--){
		if(i == n - 1){
			fwd[i] = v[i];
			continue;
		}
		ll j = nx[i];
		if(j == -1)
			fwd[i] = (n - i) * v[i];
		else fwd[i] = (j - i) * v[i] + fwd[j];
	}
	ll ans = 0, idx = -1;
	for(ll i = 0; i < n; i++){
		ll j = prev[i], k = nx[i];
		ll cur = (i - j) * v[i] + ((k == - 1 ? n : k) - i - 1) * v[i] + (j == - 1 ? 0 : bck[j]) + (k == - 1 ? 0 : fwd[k]);
		if(cur > ans)
			ans = cur, idx = i;
	}
	vll how(n);
	how[idx] = v[idx];
	for(ll j = idx + 1; j < n; j++){
		how[j] = min(v[j], how[j - 1]);
	}
	for(ll j = idx - 1; j >= 0; j--){
		how[j] = min(v[j], how[j + 1]);
	}
	for(auto i : how)
		cout << i << ' ';
	cout << endl;
}