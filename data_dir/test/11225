#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e6+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
//#define int ll
//#define endl '\n'

int n,q;
int dp[253][253][253];
int pre[100007][30],now[30];
string s;
string t[5];
int len[5];
char c,y;
int x;

int32_t main()
{
    IOS
    cin>>n>>q>>s;
    for (int i=0;i<26;i++) now[i]=inf;
    for (int i=n;i>=0;i--)
    {
        for (int j=0;j<26;j++)
        {
            pre[i][j]=now[j];
        }
        if (i!=0) now[s[i-1]-'a']=i;
    }
    dp[0][0][0]=0;
    while (q--)
    {
        cin>>c;
        if (c=='+')
        {
            cin>>x>>y;
            t[x].pb(y);
            len[x]++;
            if (x==1)
            {
                for (int i=len[1];i<=len[1];i++)
                    for (int j=0;j<=len[2];j++)
                        for (int k=0;k<=len[3];k++)
                        {
                            dp[i][j][k]=inf;
                            if (i-1>=0&&dp[i-1][j][k]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i-1][j][k]][t[1][i-1]-'a']);
                            if (j-1>=0&&dp[i][j-1][k]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i][j-1][k]][t[2][j-1]-'a']);
                            if (k-1>=0&&dp[i][j][k-1]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i][j][k-1]][t[3][k-1]-'a']);
                        }
            }
            else if (x==2)
            {
                for (int i=0;i<=len[1];i++)
                    for (int j=len[2];j<=len[2];j++)
                        for (int k=0;k<=len[3];k++)
                        {
                            dp[i][j][k]=inf;
                            if (i-1>=0&&dp[i-1][j][k]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i-1][j][k]][t[1][i-1]-'a']);
                            if (j-1>=0&&dp[i][j-1][k]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i][j-1][k]][t[2][j-1]-'a']);
                            if (k-1>=0&&dp[i][j][k-1]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i][j][k-1]][t[3][k-1]-'a']);
                        }
            }
            else
            {
                for (int i=0;i<=len[1];i++)
                    for (int j=0;j<=len[2];j++)
                        for (int k=len[3];k<=len[3];k++)
                        {
                            dp[i][j][k]=inf;
                            if (i-1>=0&&dp[i-1][j][k]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i-1][j][k]][t[1][i-1]-'a']);
                            if (j-1>=0&&dp[i][j-1][k]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i][j-1][k]][t[2][j-1]-'a']);
                            if (k-1>=0&&dp[i][j][k-1]!=inf) dp[i][j][k]=min(dp[i][j][k],pre[dp[i][j][k-1]][t[3][k-1]-'a']);
                        }
            }
        }
        else
        {
            cin>>x;
            t[x].pop_back();
            len[x]--;
        }
        if (dp[len[1]][len[2]][len[3]]==inf) cout<<"NO"<<endl;
        else cout<<"YES"<<endl;
    }
}
