#include <bits/stdc++.h>

using namespace std;

/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______      
 * |\  \|\  \  |\  ___ \  |\  ___ \     
 * \ \  \/  /|_\ \   __/| \ \   __/|    
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__  
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \ 
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */

const long long mod = 1000000007;
//const long long mod = 5318008;
#define ll long long
#undef ll

struct PT {
	long long x, y;
	PT() :
		x(0), y(0) {
	}
	PT(long long _x, long long _y) :
		x(_x), y(_y) {
	}
	PT(const PT &p) :
		x(p.x), y(p.y) {
	}
	PT operator +(const PT &p) const {
		return PT(x + p.x, y + p.y);
	}
	PT operator -(const PT &p) const {
		return PT(x - p.x, y - p.y);
	}
	PT operator *(long long c) const {
		return PT(x * c, y * c);
	}
	PT operator /(long long c) const {
		return PT(x / c, y / c);
	}
	bool operator<(const PT &p) const {
		return make_pair(x, y) < make_pair(p.x, p.y);
	}
	bool operator==(const PT &p) const {
		return !(*this < p) && !(p < *this);
	}
};

long long dist(PT a, PT b) {
	return abs(a.x - b.x) + abs(a.y - b.y);
}

istream &operator>>(istream &is, PT &p) {
	return is >> p.x >> p.y;
}
ostream &operator<<(ostream &os, const PT &p) {
	return os << "(" << p.x << "," << p.y << ")";
}

const int mxN = 300010;
PT p[mxN];


int main(int argc, char** argv) {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif

	int N;
	cin >> N;
	vector<long long> x(N), y(N);
	for (int i = 0; i < N; i++)
		cin >> p[i], x[i] = p[i].x, y[i] = p[i].y;
	sort(begin(x), end(x));
	sort(begin(y), end(y));
	long long res = abs(x[N-1]-x[0]) + abs(y[N-1] - y[0]);
	res <<= 1;
	long long res3 = 0;
	for(int i = 0;i < N;i++) {
		for(int f = 0;f < 2;f++)
			for(int f1 = 0;f1 < 2;f1++)
				res3 = max(res3,abs(x[(f?0:N-1)] - p[i].x) + abs(y[(f1?0:N-1)] - p[i].y));
	}
	cout<<(res3<<1)<<' ';
	for (int i = 4; i <= N; i++)
		cout << res << " \n"[i == N];
	return 0;
}
