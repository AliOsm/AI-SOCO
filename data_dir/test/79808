#include<bits/stdc++.h>
using namespace std;
const int N=20,INF=1e9;
int dp[1<<N][4];
int n,k;
int main()
{
	ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
	for (int i=0;i<(1<<N);i++) dp[i][1]=dp[i][2]=dp[i][3]=-INF;
	
	cin>>n>>k;
	
	int sz=1<<(n-1);
	for (int i=0,x;i<k;i++) 
	{
		cin>>x,x--;
		x=sz+(x>>1);
		dp[x][3]=dp[x][1];
		dp[x][1]=1;
		dp[x][2]=1;
	}

	for (int i=sz-1;i>0;i--)
		for (int x=0;x<4;x++)
			for (int y=0;y<4;y++)
				dp[i][x|y]=max(dp[i][x|y], (x|y)+dp[2*i][x]+dp[2*i+1][y]);

	int ans=max({dp[1][1],dp[1][2],dp[1][3]})+1;
	if (ans<0)
		cout<<0<<endl;
	else
		cout<<ans<<endl;
	return 0;
}
