///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define ll long long int
#define inf ( int )( 1e9 + 1e9 )
#define mxs (int)( 1e6 + 10 )
#define md  int mid = ( l + r )>>1;
#define mod (ll)(1e9)+7
//int dx[]={+1,0,+0,-1};///Four Directions
//int dy[]={+0,-1,+1,+0};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
ll t, n, m, j, ans, k,a, b, c, d, e,f  , i,sz,cases ,q,source , target,marker;
string s, s2, s3, s4;
//int ar [ mxs ] , ar2 [ mxs ] , ar3 [ mxs ] , parent [ mxs ] ;
vector < ll > v;
map < ll , ll > mp;
void brainfuck();
bool checker()
{
    m = sqrt( c + 1 );
    for ( i = 2 ; i <= m; i++ )
    {
        if ( c % i == 0 )
        {
            a = c / i;
            b = i;
            if ( mp.find( a ) == mp.end() || mp.find( b ) == mp.end() )return 0;
        }
    }
    return 1;
}
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    deque < ll > dq;
    cin>>t;
    while( t-- )
    {
        mp.clear();
        cin>>n;
        for ( i = 1 ; i <= n; i++ )
        {
            cin>>a;
            dq.push_back( a );
        }
        c = e = 0;
        sort( dq.begin() , dq.end() );
        while( !dq.empty() )
        {
            if ( dq.size() == 1 )
            {
                a = dq.back();
                dq.pop_back();
                mp [ a ] = 1;
                if ( !c )c = a * a;
                else if ( a * a != c )e = 1;
            }
            else
            {
                a = dq.back();
                dq.pop_back();
                b = dq.front();
                dq.pop_front();
                mp [ a ] = 1;
                mp [ b ] = 1;
                if ( !c )c = a * b;
                else if ( a * b != c )e = 1;
            }
        }
        sort( v.begin() , v.end() );
        if ( !e && checker() )cout<<c<<"\n";
        else cout<<"-1\n";
    }
}
