#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/*------------------------------------BITMASK------------------------------------------*/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/*-----------------------------------------------------------------------------------------------*/

/*-----------------------------DIRECTION_ARRAY-------------------------*/
//------FOUR_DIRECTION---------//
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


//------EIGHT_DIRECTION---------//
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/*--------------------------------------------------------------------------------------*/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}

///-----------------------------START FROM HERE--------------------------------------///

map<string, bool>mp;

void fnc(int x){

    string ss;

    while(x){

        int p=x%10;
        ss+='0'+p;
        x/=10;
    }
    reverse(all(ss));

    mp[ss]=1;

}

int main(){

    mp["ABSINTH"]=mp["BEER"]=mp["BRANDY"]=mp["CHAMPAGNE"]=mp["GIN"]=mp["RUM"]=mp["SAKE"]=mp["TEQUILA"]=mp["VODKA"]=mp["WHISKEY"]=mp["WINE"]=1;

   for(int i=1; i<=17; i++){

         fnc(i);

   }
   mp["0"]=1;

   int n;
   scanf("%d", &n);
   int ans=0;
   for(int i=1; i<=n; i++){

        string SS;
        cin>>SS;

        if(mp[SS]==1)ans++;

   }
    cout<<ans;
}
