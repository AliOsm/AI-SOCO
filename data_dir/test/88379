#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef unsigned long long int ulli;
typedef pair<int,int> pii;

#define ones(x) __builtin_popcount(x)
#define onesl(x) __builtin_popcountl(x)
#define onesll(x) __builtin_popcountll(x)

#define pb push_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define mod 1000000007
#define FastIO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

int Set(int N,int pos)
{
    return N=N | (1<<pos);
}
int reset(int N,int pos)
{
    return N = N & ~(1<<pos);
}
bool check(int N,int pos)
{
    return (bool)(N & (1<<pos));
}

///priority_queue< int, vector< int >, greater< int > > minHeap;


int main()
{
    ///freopen("output.txt","w",stdout);
    ///freopen("input.txt","r",stdin);

    ///FastIO;

    string s;

    int ans = s.size();

    cin>>s;

    int op , cls , c1,c2;

    op = cls = c1 = c2 = -1;

    for(int i=0; i<s.size(); i++){
        if(s[i] == '['){
            op = i;
            break;
        }
    }


    for(int i=op+1; i<s.size(); i++){
        if(s[i] == ':'){
            c1 = i;
            break;
        }
    }

    for(int i=s.size()-1 ; i>=0 ; i--){
        if(s[i] == ']'){
            cls = i;
            break;
        }
    }


    for(int i=cls-1 ; i>=0 ; i--){
        if(s[i] == ':'){
            c2 = i;
            break;
        }
    }

    if(c1 == -1 || c2 == -1 || op == -1 || cls == -1) ans = -1;
    else if(op<c1 && c1<c2 && c2<cls){
        ans = 4;
        for(int i=c1 ; i<c2; i++) ans += (s[i] == '|');
    }
    else ans = -1;

    printf("%d",ans);

    return 0;
}
