#ifndef _USE_MATH_DEFINES
#define _USE_MATH_DEFINES
#include <cmath>
#endif

#include <iostream>
#include <conio.h>
#include <cstdio>
#include <cstdlib>

#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
using namespace std;

#define unlli unsigned long long int

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FOR1(i,a,b) for(int i=a;i>=b;i--)

#define sc(n) scanf("%d",&n)
#define sc2(n,m) scanf("%d %d",&n,&m)
#define sc3(n,m,k) scanf("%d %d %d",&n,&m,&k)
#define scp() scanf("\n")

#define P(x) printf("%d\n",x)
#define P2(x,y) printf("%d %d\n",x,y)
#define MOD 1000000007

unlli gcd(unlli x,unlli y)
{
    return (y==0)?x:gcd(y,x%y);
}
unlli kd(unlli x)
{
    unlli k=2,q=sqrt((double)x);

    for(unlli i=2;i<q+1;i++)
        if(x%i==0)k+=2;
    if(q*q==x)k--;
    return k;
}

void resh();

int main()
{   
    resh();
    return 0;
}


vector<int> t(400000);

void tree(vector<int> a,int tl,int tr,int v,int h)
{
    if(tl==tr) t[v]=a[tl];
    else
    {
        int q=(tl+tr)/2;

        tree(a,tl,q,v<<1,!h);
        tree(a,q+1,tr,(v<<1)+1,!h);

        if(h%2) t[v]=t[v<<1]|t[(v<<1)+1];
        else t[v]=t[v<<1]^t[(v<<1)+1];
    }
}

void update(int tl,int tr,int v,int h,int pos,int x)
{
    if(tl<=pos&&pos<=tr)
    if(tl==tr) t[v]=x;
    else
    {
        
        int q=(tl+tr)/2;

        if(pos<=q)update(tl,q,v<<1,!h,pos,x);
        else update(q+1,tr,(v<<1)+1,!h,pos,x);

        if(h%2) t[v]=t[v<<1]|t[(v<<1)+1];
        else t[v]=t[v<<1]^t[(v<<1)+1];
    }
}

int binpow(int a,int n)
{
    int res=1;

    while(n)
    {
        if(n&1) res*=a;
        a*=a;
        n>>=1;  
    }
    return res;
}

void resh()
{   
    int n,m;
    sc2(n,m);
    
    int x;
    FOR(i,0,1<<n)
    {   
        sc(x);
        update(0,(1<<n)-1,1,n&1,i,x);
    }
    
    int p,b;
    FOR(i,0,m)
    {
        sc2(p,b);
        update(0,(1<<n)-1,1,n%2,p-1,b);
        P(t[1]);
    }
}