// #pragma GCC target ("avx2")
// #pragma GCC optimization ("O3")
// #pragma GCC optimization ("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define mod 1000000007
//#define int long long
#define inf 200000000
const int maxnodes=1005;
#define ll long long
#define N 2001
#define EPS 0.01
#define ld long double


int canrow[N],cancol[N];
pair<int,int> row[N],col[N];
int v[N][N];
int ans[N][N];

int32_t main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
    memset(canrow,0,sizeof(canrow));
    memset(cancol,0,sizeof(cancol));
    memset(ans,0,sizeof(ans));
    int n,k;
    cin >> n >> k;
    int fans = 0;
    for(int i = 0;i < n;i++)
    {
        string s;
        cin >> s;
        for(int j = 0;j < s.length();j++)
        {
            v[i][j] = (s[j] == 'B');
        }
        int lastb = -1;
        int firstb = -1;
        for(int j = n - 1;j >= 0;j--)
        {
            if(v[i][j])
            {
                lastb = max(lastb,j);
                firstb = j;
            }
        }
        // cerr << lastb << endl;

        if(lastb == -1)
        {
            fans++;
            continue;
        }
        if(lastb - firstb >= k)
            continue;
        canrow[i] = 1;
        row[i] = {max(0,lastb - k + 1),firstb};
        // cerr << row[i].first << " " << row[i].second << endl;

    }
    for(int j = 0;j < n;j++)
    {
        int lastb = -1;
        int firstb = -1;
        for(int i = n-1;i >= 0;i--)
        {
            if(v[i][j])
            {
                lastb = max(lastb,i);
                firstb = i;
            }
        }
        if(lastb == -1)
        {
            fans++;
            continue;
        }
        if(lastb - firstb >= k)
            continue;
        cancol[j] = 1;
        col[j] = {max(0,lastb - k + 1),firstb};
        // cerr << col[j].first << " " << col[j].second << endl;

    }

    for(int i = 0;i < n;i++)
    {
        int st = 0;
        int cnt = 0;
        for(int j = 0;j < k;j++)
        {
            if(cancol[j] and i >= col[j].first and i <= col[j].second)
                cnt++;
        }
        ans[i][0] = cnt;
        // cerr << i << " " << 0 << " " << ans[i][0] << endl;
        for(int j = k;j < n;j++)
        {
            if(cancol[j-k] and i >= col[j-k].first and i <= col[j-k].second)
                cnt--;
            if(cancol[j] and i >= col[j].first and i <= col[j].second)
                cnt++;
            ans[i][j-k+1] = cnt;
            // cerr << i << " " << j-k+1 << " " << ans[i][j-k+1] << endl;

        }
    }
    for(int j = 0;j < n;j++)
    {
        int st = 0;
        int cnt = 0;
        for(int i = 0;i < k;i++)
        {
            if(canrow[i] and j >= row[i].first and j <= row[i].second)
                cnt++;
        }
        ans[0][j] += cnt;
        for(int i = k;i < n;i++)
        {
            if(canrow[i-k] and j >= row[i-k].first and j <= row[i-k].second)
                cnt--;
            if(canrow[i] and j >= row[i].first and j <= row[i].second)
                cnt++;
            ans[i-k+1][j] += cnt;
        }

    }

    int mans = fans;
    for(int i = 0;i < n;i++)
    {
        for(int j = 0;j < n;j++)
        {
            mans = max(mans,fans+ans[i][j]);
        }
    }
    cout << mans;


}   
 
 
 