#include <iostream>
#include <vector>
#include <set>
#include <cstdlib>

using namespace std;

const int limit=200005;

void die()
{
  cout<<"NO"<<endl;
  exit(0);
}

int n,q;

int v[limit];
int seen[limit];
int isleft[limit];
int isright[limit];
set<int> s;
int minpos[limit];
int maxpos[limit];
vector<int> listpos[limit];
int pos0;
int posq;

int main()
{
  ios::sync_with_stdio(false);
  cin>>n>>q;
  for (int i=1;i<=n;i++) {
    cin>>v[i];
    if (v[i]==0)
      pos0=i;
    if (v[i]==q)
      posq=i;
  }
  for (int i=1;i<=n;i++) {
    int x=v[i];
    if (seen[x]) isleft[i]=1;
    seen[x]=1;
  }
  for (int i=0;i<=q;i++)
    seen[i]=0;
  for (int i=n;i>=1;i--) {
    int x=v[i];
    if (seen[x]) isright[i]=1;
    seen[x]=1;
  }
  for (int i=1;i<=n;i++) {
    int x=v[i];
    if (x==0) {
      if (int(s.size())==0) {
	v[i]=1;
      } else {
	v[i]=*(s.rbegin());
      }
    } else {
      if (not isleft[i]) {
	if (isright[i])
	  s.insert(x);
      } else {
	if (not isright[i])
	  s.erase(x);
      }
    }
  }
  if (not posq) {
    if (not pos0) die();
    v[pos0]=q;
  }
  s=set<int>();
  for (int i=1;i<=n;i++)
    listpos[v[i]].push_back(i);
  for (int i=n;i>=1;i--)
    minpos[v[i]]=i;
  for (int i=1;i<=n;i++)
    maxpos[v[i]]=i;
  for (int x=1;x<=q;x++) {
    if (minpos[x]==0) continue;
    if (int(s.size())) {
      set<int>::iterator itmin=s.upper_bound(minpos[x]);
      set<int>::iterator itmax=s.upper_bound(maxpos[x]);
      if (itmin!=itmax) die();
    }
    vector<int> &lis=listpos[x];
    for (int i=0;i<int(lis.size());i++)
      s.insert(lis[i]);
  }
  cout<<"YES"<<endl;
  for (int i=1;i<=n;i++) {
    if (i>1) cout<<" ";
    cout<<v[i];
  }
  cout<<endl;
}
