# include <iostream>
# include <set>

using namespace std;

const int N = 2e5 + 100;

int n, k;
int a[N], ps[N], p[N], d[N], cm[N];
set < int > st;

int  getp( int x )
{
	if ( cm[x] == 0 || x == -1)
		return x;
		
	else{
		return p[x] = getp( p[x] );
	}
}

int getd( int x )
{
	if ( cm[x] == 0 || x == -1)
		return x;
		
	else{
		return d[x] = getd( d[x] );
	}
}


void change1( int x, int cnt, int tnt)
{
	if( x == -1 || !tnt )
		return;
		
	cm[x] = cnt;
	if ( d[x] != -1 )
		p[d[x]] = p[x];
	if ( p[x] != -1 )
		d[p[x]] = d[x];
	st.erase( -a[x] );	
		
	change1( getp( x ), cnt, tnt - 1); 
}


void change2( int x, int cnt, int tnt)
{
	if( x == -1 || !tnt )
		return;
		
	cm[x] = cnt;
	if ( d[x] != -1 )
		p[d[x]] = p[x];
	if ( p[x] != -1 )
		d[p[x]] = d[x];
		
	st.erase( -a[x] );	
		
	change2( getd( x ), cnt, tnt - 1); 
}

int main()
{
	cin >> n >> k;
	for ( int i = 1; i <= n; i ++ ){
		cin >> a[i];
		st.insert( -a[i] );
		ps[ a[i] ] = i;
	}

	for ( int i = 1; i <= n; i++ ){
		p[i] = i - 1;
		d[i] = i + 1;
	}
	cm[0] = 1;
	cm[n + 1] = 1;
	p[0] = -1;
	d[n + 1] = -1;
	int cnt = 1;
	
	while( st.empty() == false ){
		
		int mx = -(*st.begin());
		int sp = ps[mx];
		
		change1( sp, cnt, k + 1 );
		change2( sp, cnt, k + 1 );
		
		cnt = 3 - cnt;
	}
	
	for ( int i = 1; i <= n; i ++ )
		cout << cm[i];
	
	return 0;

	
}

