#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;
mt19937 rnd(time(NULL));

const int sts = 5, maxN = 1.5e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int trans[300][300], dp[maxN][sts], n;
ii aux[maxN][sts], who[maxN][sts];

/*
0=>vac
1=>e
2=>ne
3=>o
4=>wo
*/

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	for(int i = 0; i < 300; i++)
		for(int j = 0; j < 300; j++)
			if(i == 'e')
				trans[i][j] = 1;
			else if(i == 'o')
				trans[i][j] = 3;
	trans['o'][2] = -1, trans['t'][4] = -1;
	trans['n'][1] = 2, trans['w'][3] = 4;

	int t;
	cin >> t;
	while(t--) {
		string st;
		cin >> st;
		n = st.size();
		memset(dp[n], 0, sizeof dp[n]);
		for(int i = 0; i < sts; i++) aux[n][i].fi = who[n][i].fi = n;

		for(int i = n - 1; i >= 0; i--) {
			memcpy(dp[i], dp[i + 1], sizeof dp[i]);
			memcpy(aux[i], aux[i + 1], sizeof aux[i]);
			memcpy(who[i], who[i + 1], sizeof who[i]);

			for(int j = 0; j < sts; j++) {
				int nxt = trans[st[i]][j];
				if(nxt != -1 && dp[i][nxt] < dp[i + 1][j] + 1)
					who[i][nxt] = ii(i, nxt), aux[i][nxt] = who[i + 1][j], dp[i][nxt] = dp[i + 1][j] + 1;
			}
		}
		int res = max_element(dp[0], dp[0] + sts) - dp[0];
		cout << n - dp[0][res] << '\n';
		vector<bool> vi(n);
		for(ii u = who[0][res]; u.fi < n; u = aux[u.fi][u.se])
			vi[u.fi] = 1;
		for(int i = 0; i < n; i++)
			if(!vi[i])
				cout << i + 1 << ' ';
		cout << '\n';
	}
}
