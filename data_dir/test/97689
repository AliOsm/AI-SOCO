#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int,int> ii;
#define sc second
#define fs first

int CNT[100'050];
set<int> FRIENDS[100'050];
bool vis[100'050];


int main() {
    memset(CNT,0,sizeof(CNT));
    memset(vis,0,sizeof(vis));
    int n;
    cin >> n;
    for(int i = 0; i < n-2; i++) {
        vector<int> C(3);
        for(int j = 0; j < 3; j++) {
            cin >> C[j];
            C[j]--;
            CNT[C[j]] += 1;
        }
        for(int j = 0; j < 3; j++) {
            for(int z = 0; z < 3; z++) {
                FRIENDS[C[j]].insert(C[z]);
            }
        }
    }
    priority_queue<ii,vector<ii>,greater<ii>> pq;
    for(int i = 0; i < n; i++) {
        pq.push(ii(CNT[i],i));
    }
    vi A;
    vi B;
    while(!pq.empty()) {
        ii at = pq.top();
        pq.pop();
        if(vis[at.sc]) continue;
        vis[at.sc] = true;
        if(A.empty()) A.push_back(at.sc);
        else if(FRIENDS[at.sc].find(A.back()) != FRIENDS[at.sc].end()) A.push_back(at.sc);
        else B.push_back(at.sc);
        for(auto it = FRIENDS[at.sc].begin(); it != FRIENDS[at.sc].end(); ++it) {
            CNT[*it] -= 10;
            pq.push(ii(CNT[*it], *it));
        }
    }
    reverse(B.begin(), B.end());
    for(int i = 0; i < B.size(); i++) {
        A.push_back(B[i]);
    }
    for(int i = 0; i < A.size(); i++) {
        cout << A[i]+1 << " ";
    }
    cout << endl;
    
}
