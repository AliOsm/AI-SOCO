#include <bits/stdc++.h>

using namespace std;

const int MAX = 3e5 + 10 ;
vector< vector<int> >adj(MAX) ;
int color[MAX] ;
int red[MAX] , blue[MAX] ;
int n ;
int ans = 0 ;

void dfs(int node , int par)
{
    if(color[node] == 1)
        red[node]++;
    else if(color[node] == 2)
        blue[node]++ ;
    for(auto &child : adj[node])
    {
        if(child != par)
        {
            dfs(child , node) ;
            red[node] += red[child] ;
            blue[node] += blue[child] ;
        }
    }
}

void dfs2(int node , int par)
{
    for(auto &child : adj[node])
    {
        if(child != par)
        {
            int x = red[1] , y = blue[1] ;
            x -= red[child] , y -= blue[child] ;
            int cnt = (bool)(x > 0) + (bool)(y > 0) ;
            int cnt2 = (bool)(red[child] > 0) + (bool)(blue[child] > 0) ;
            if(cnt < 2 && cnt2 < 2)
                ans++;
            dfs2(child , node) ;
        }
    }
    return ;
}


int main()
{
    int n ;
    scanf("%d" , &n) ;
    for(int i = 1 ; i <= n ; ++i)
        scanf("%d" , &color[i]) ;
    for(int i = 0 ; i < n-1 ; ++i)
    {
        int x , y ;
        scanf("%d %d" , &x , &y) ;
        adj[x].push_back(y) ;
        adj[y].push_back(x) ;
    }
    dfs(1 , -1) ;
    dfs2(1 , -1) ;
    return cout<<ans<<"\n" , 0 ;
}
