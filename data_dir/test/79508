/*||>>>> Praveen Ojha <<<<>>>> 01 August 2019 <<<<>>>> 23:22:45 <<<<||*/
// #pragma GCC optimize("Ofast")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
// #pragma GCC optimize("unroll-loops")
// #pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("O3")
#pragma GCC target ("sse4")
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define F first
#define S second
#define mod 1000000007
#define inf (int)1e18+5
#define sz(x) (int)x.size()
#define PI 3.141592653589793238510
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define __ ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define vi vector<int>
#define vpii vector<pair<int,int> > 
#define vvi vector<vector<int> >
#define PRINT_TIME cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s." <<endl;
#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename   enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
  ris << "(" << d.first << ", " << d.second << ")";
}
sim dor(rge<c> d) {
  *this << "[";
  for (auto it = d.b; it != d.e; ++it)
    *this << ", " + 2 * (it == d.b) << *it;
  ris << "]";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "
typedef long double ld;
typedef pair<int,int> pii;
//Read Problems Carefully & Check for corner cases N=0,1 ?
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
const int N=10005;
int a[N],b[N],id[N];
int ans[N];
bool cmp(int i,int j){
    return a[i]<a[j];
}
int sq(int x){
    return (x*x);
}
int cnt;
void search(int le,int ri,int x,int y,int ind){
    if(le>ri)
        return;
    int mid=(le+ri)/2;
    if(sq(a[id[mid]]-x)+sq(y)<=sq(b[id[mid]]) && ans[id[mid]]==-1){
        cnt++;
        ans[id[mid]]=ind;
    }
    if(x<a[id[mid]])
        search(le,mid-1,x,y,ind);
    if(x>a[id[mid]])
        search(mid+1,ri,x,y,ind);
}
int32_t main(){__
    int n;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>a[i]>>b[i];
        id[i]=i;
    }
    sort(id,id+n,cmp);
    // debug()<< range(a,a+n);//range(b,b+n);
    int m,x,y;
    cin>>m;
    memset(ans,-1,sizeof ans);
    for(int i=0;i<m;i++){
        cin>>x>>y;
        search(0,n-1,x,y,i+1);
    }
    cout<<cnt<<"\n";
    for(int i=0;i<n;i++)
        cout<<ans[i]<<" ";
    cout<<"\n";
return 0;
}