// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 100 + 77;
const long long inf = 1e12 + 77;
int n;
long long k , A;
char S[N];
long long dp[N][N] , F[N][N];
long long T[N];
bool SS[N];
int main() {
   scanf("%d %lld" , & n , & k);
   scanf("%s" , S + 1);
   dp[0][0] = 1;
   for(int i = 1;i <= n;++ i) {
      int prv = T[S[i] - 'a'];
      T[S[i] - 'a'] = i;
      for(int j = 1;j <= i;++ j)
         F[i][j] = dp[i - 1][j - 1];
      for(int j = 0;j <= i;++ j) {
         dp[i][j] = F[i][j] + dp[i - 1][j];
         if(prv > 0)
            dp[i][j] -= F[prv][j];
         if(dp[i][j] > inf)
            dp[i][j] = inf , SS[j] = 1;
      }
   }
   memset(T , 0 , sizeof(T));
   for(int i = n;i > 0;-- i) {
      T[i] = dp[n][i];
      if(SS[i])
         T[i] = inf;
   }

   T[0] = 1;
   for(int i = n;i >= 0;-- i)
      A += min(k , T[i]) * 1ll * (n - i) , k -= min(k , T[i]);
   if(k > 0)
      A = - 1;
   printf("%lld\n" , A);
   return 0;
}
