// --------------------<optimizations>--------------------
#pragma GCC optimize("O3")

//(UNCOMMENT WHEN HAVING LOTS OF RECURSIONS)\
#pragma comment(linker, "/stack:200000000")
//(UNCOMMENT WHEN TRYING TO BRUTEFORCE WITH A LOT OF LOOPS)\
#pragma GCC optimize("unroll-loops")

// -------------------</optimizations>--------------------
#include<bits/stdc++.h>
using namespace std;
//#define int long long
//#define d long double
#define pii pair<int,int>
#define pb push_back
#define cases int tc;cin>>tc;while(tc--)
#define N 100003
#define M 513
#define inf 1e18
#define Arena ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
//int mod=1e9+7;
//int mod=998244353;
int par[M], sz[M];

signed main()
{
    Arena
    
    int n,k;
    cin>>n>>k;
    int p[n+1],i,j,l;
    fill(par,par+M,-1);
    for(i=1;i<=n;++i)
        cin>>p[i];
    
    i=1;
    while(i<=n)
    {
        if(par[p[i]]!=-1)
        {
            cout<<par[p[i]]<<' ';
            ++i;
            continue;
        }
        
        j=p[i];
        while(j>0 and j>p[i]-k+1 and par[j]==-1)
            --j;
        if(par[j]==-1)
        {
            l=j;
            int t1=j;
            while(j<=p[i])
                par[j++]=l;
            sz[l]+=p[i]-t1+1;
        }   
        else if(sz[par[j]]+p[i]-j>k)
        {
            ++j;
            l=j;
            int t1=j;
            while(j<=p[i])
                par[j++]=l;
            sz[l]+=p[i]-t1+1;
        }
        else
        {
            l=par[j];
            int t1=j;
            while(j<=p[i])
                par[j++]=l;
            sz[l]+=p[i]-t1;
        }   
        
        cout<<par[p[i]]<<' ';
        ++i;
    }   
    
    
    return 0;
}
