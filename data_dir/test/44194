#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define dbg(x) cout << #x << '=' << x << '\n';
#define ll long long
#define pi pair<int,int>
#define pl pair<long long,long long>
#define lg length()
#define pb push_back
ifstream in("file.in");
ofstream out("file.out");
#define MAXN 100005
#define INF 1000000005
#define LINF 1000000000000000005

struct bil{
    long long d,x,c,t;
} a[100005];

long long n,m,k,x,y,z,t,s1[1000005],s2[1000005],cnt,bst[100005],s,ans=LINF;

bool comp(bil a, bil b){
    return a.d<b.d;
}

int main(){
    ios_base :: sync_with_stdio(0); cin.tie();
    cin >> n >> m >> k;
    for(int i=1;i<=m;i++){
        cin >> x >> y >> z >> t;
        if(y==0) a[i]={x,z,t,1};
        else a[i]={x,y,t,0};
    }
    sort(a+1,a+m+1,comp);
    int p=1;
    for(int i=1;i<=1000000;i++){
        while(p<=m && a[p].d==i){
            if(a[p].t==1){
                p++;
                continue;
            }
            if(bst[a[p].x]){
                //cout << i << ' ';
                if(a[p].c<bst[a[p].x]){
                    s-=bst[a[p].x]-a[p].c;
                    bst[a[p].x]=a[p].c;
                }
            }
            else{
                s+=a[p].c;
                bst[a[p].x]=a[p].c;
                //cout << a[p].x << ' ';
                cnt++;
            }
            p++;
        }
        if(cnt<n) s1[i]=-1;
        else{
            s1[i]=s;
        }
    }
    p=m; cnt=0; s=0;
    for(int i=1;i<=n;i++) bst[i]=0;
    for(int i=1000000;i;i--){
        while(p && a[p].d==i){
            if(a[p].t==0){
                p--;
                continue;
            }
            if(bst[a[p].x]){
                if(a[p].c<bst[a[p].x]){
                    s-=bst[a[p].x]-a[p].c;
                    bst[a[p].x]=a[p].c;
                }
            }
            else{
                s+=a[p].c;
                bst[a[p].x]=a[p].c;
                cnt++;
            }
            p--;
        }
        if(cnt<n) s2[i]=-1;
        else{
            s2[i]=s;
        }
    }
    //cout << cnt << '\n';
    //for(int i=1;i<=20;i++) cout << s1[i] << ' ';
    for(int i=1;i<=1000000-k-1;i++){
        //if(i<=20) cout << s1[i] << ' ' << s2[i+k+1] << '\n';
        if(s1[i]==-1 || s2[i+k+1]==-1){
            continue;
        }
        else{
            ans=min(ans,s1[i]+s2[i+k+1]);
        }
    }
    if(ans==LINF) cout << -1;
    else cout << ans;
}
