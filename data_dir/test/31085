#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define fi first
#define se second
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d",x)
#define sl(x) scanf("%lld",&x)
#define pl(x) printf("%lld",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(1e3+50)
int valid[27],mod=1e9+7,dp[N],pref[N][26];
int n;
string s;
void calpref(){
    for(int i=1;i<=n;i++){
        for(int j=0;j<26;j++){
            pref[i][j]=pref[i-1][j];
        }
        pref[i][s[i]-'a']++;
    }
}
void solve(){
    int p;
    sd(p);
    cin>>s;
    n=s.size();
    s='#'+s;
    for(int i=1;i<=26;i++)sd(valid[i]);
    calpref();
    dp[0]=1;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=i;j++){
            bool ok=1;
            for(int k=0;k<26;k++){
                if(pref[i][k]-pref[j-1][k]==0){
                    continue;
                }
                if(i-j+1>valid[k+1]){
                    ok=0;
                    break;
                }
            }
            if(ok){
                dp[i]+=dp[j-1];
                if(dp[i]>=mod)dp[i]-=mod;
            }
        }
    }
    pd(dp[n]);
    printf("\n");
    mem(dp,0);
    for(int i=1;i<=n;i++){
        for(int j=1;j<=i;j++){
            bool ok=1;
            for(int k=0;k<26;k++){
                if(pref[i][k]-pref[j-1][k]==0){
                    continue;
                }
                if(i-j+1>valid[k+1]){
                    ok=0;
                    break;
                }

            }
            if(ok){
                dp[i]=max(dp[i],max(dp[j-1],i-j+1));
            }
        }
    }
    pd(dp[n]);
    printf("\n");
    mem(dp,0x7F);
    dp[0]=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=i;j++){
            bool ok=1;
            for(int k=0;k<26;k++){
                if(pref[i][k]-pref[j-1][k]==0){
                    continue;
                }
                if(i-j+1>valid[k+1]){
                    ok=0;
                    break;
                }

            }
            if(ok){
                dp[i]=min(dp[i],dp[j-1]+1);
            }
        }
    }
    pd(dp[n]);
}
int main(){
    //freopen("input.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int t=1;
    //sd(t);
    for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}