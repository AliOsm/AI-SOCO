#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <array>
#include <bitset>
using namespace std;

#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) (c).begin(), (c).end()

typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;

int in() { int x; scanf("%d", &x); return x; }
ll lin() { ll x; scanf("%lld", &x); return x; }

const ll INF = 1e18;

int main() {
    int n, m, k;
    cin >> n >> m >> k;
    VI b(n);
    REP(i,m){
        b[in()] = 1;
    }
    VL c(k);
    REP(i,k){
        c[i] = in();
    }

    if (b[0]){
        cout << -1 << endl;
        return 0;
    }

    VI back(n+1);
    back[n] = n;
    REP(i,n){
        if (b[i]) back[i] = back[i-1];
        else back[i] = i;
    }

    ll ans = INF;
    REP(i,k){
        int p = 0;
        ll cnt = 0;
        bool ok = true;
        while (p < n){
            int next = p + i + 1;
            if (next <= n) next = back[next];
            if (next <= p){
                ok = false;
                break;
            }
            p = next;
            cnt++;
        }
        if (ok) ans = min(ans, cnt * c[i]);
    }
    cout << (ans == INF ? -1 : ans) << endl;

    return 0;
}