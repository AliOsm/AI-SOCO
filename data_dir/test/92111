
// Problem : D. Walk on Matrix
// Contest : Codeforces Round #630 (Div. 2)
// URL : https://codeforces.com/contest/1332/problem/D
// Memory Limit : 512 MB
// Time Limit : 2000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
ordered_set;	

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const ll maxN = 1e6 + 5;
const ll MOD = 1e9 + 7;

void print4(int a, int b, int c, int d) {
	cout << a << " " << b << " " << c << " " << d << "\n";
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int k;
	cin >> k;
	if (k == 0) {
		cout << "1 1\n1\n";
		return 0;
	}
	cout << "3 4\n";
	int z = 1;
	while (z <= k) z *= 2;
	int x = (z | k);
	assert((z & k) == 0);
	assert((z & x) == z);
	assert((k & x) == k);
	print4(x, k, k, 0);
	print4(z, 0, k, 0);
	print4(x, x, x, k);
	return 0;
}
 
