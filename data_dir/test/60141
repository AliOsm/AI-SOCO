#include <bits/stdc++.h>
using namespace std;

long long dp[200009];
vector<int> A[200009];
int a[200009];

long long ans;
long long sm[200009];
void Dfs(int u,int p) {
    sm[u]=a[u];
    long long mx=-2e17;
    long long mx1=-2e17;
    for(int i=0;i<A[u].size();i++) {
        int v=A[u][i];
        if(v==p) continue;
        Dfs(v,u);
        sm[u]+=sm[v];
        if(mx==(-2e17)) mx=dp[v];
        else if(mx<dp[v]) {
            mx1=mx;
            mx=dp[v];
        }
        else if(mx==dp[v]) {
            mx1=dp[v];
        }
        else if(mx1<dp[v]) {
            mx1=dp[v];
        }
    }
    if(mx1!=(-2e17)) {
        ans=max(ans,mx+mx1);
    }
    dp[u]=max(sm[u],mx);
    return;
}

int main()
{
    int n;
    scanf("%d",&n);
    for(int i=1;i<=n;i++) {
        scanf("%d",&a[i]);
    }
    for(int i=1;i<n;i++) {
        int u,v;
        scanf("%d%d",&u,&v);
        A[u].push_back(v);
        A[v].push_back(u);
    }
    ans=-2e17;
    Dfs(1,0);

    if(ans==-2e17) {
        printf("Impossible\n");
    }
    else printf("%lld\n",ans);

    return 0;
}
