#include <bits/stdc++.h>
using namespace std;
typedef long long lld;
const int MOD = 1000000007;
const int N = 5000 + 5;

bool arr[N];
lld dp[N][N], sum[N];

int main(){
	ios_base::sync_with_stdio(0);cin.tie(0);
	int n; cin>>n;
	for(int i=1;i<=n;i++){
		string ss; cin>>ss;
		if(ss[0]=='s') arr[i] = 1;
		else arr[i] = 0;
	}
	auto psum = [](int l, int r){
		// 0-base [l, r]
		if(l) return sum[r]-sum[l-1];
		else return sum[r];
	};
	dp[0][0] = 1;
	for(int i=1;i<=n;i++){
		if(arr[i-1]){
			sum[0] = dp[i-1][0];
			for(int j=1;j<=n;j++) sum[j] = (sum[j-1]+dp[i-1][j])%MOD;
			if(arr[i]) for(int j=0;j<=n;j++) dp[i][j] = (psum(j, n)+MOD)%MOD;
			else for(int j=1;j<=n;j++) dp[i][j] = (psum(j-1, n)+MOD)%MOD;
		}else{
			if(arr[i]) for(int j=0;j<=n;j++) dp[i][j] = dp[i-1][j];
			else for(int j=1;j<=n;j++) dp[i][j] = dp[i-1][j-1];
		}
	}
	lld ans = 0;
	for(int j=0;j<=n;j++) ans = (ans+dp[n][j])%MOD;
	cout << ans << '\n';
	return 0;
}