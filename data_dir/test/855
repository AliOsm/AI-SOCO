#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=5e6+7;
const double eps=0.00000001;
LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a,T b){T ret=1;for (;b;b>>=1ll,a=a*a%M) ret=1ll*ret*a%M;return ret;}


LL l,r,T;
LL i,j,k;
LL f[maxn],ans;
bool mark[maxn];
vector<LL> p;
int main(){
	scanf("%I64d%I64d%I64d",&T,&l,&r);
	FOR(i,1,r) f[i]=INFF;
	f[0]=0;f[1]=0;f[2]=2;
	FOR(i,2,r){
		if (!mark[i]){
			p.push_back(i);
			f[i]=i*(i-1)/2;
		}
		for(LL j:p){//从下往上分。。。我分反了 
			if (j*i>r) break;
			mark[j*i]=1;
			f[j*i]=min(f[j*i],i*j*(j-1)/2+f[i]);
			if (i%j==0) break;
		}
	}
	k=1;
	FOR(i,l,r){
		ans=(ans+f[i]%M*k)%M;
		k=k*T%M;
	}
	printf("%I64d",ans);
}
/*
2 1 5000000
*/