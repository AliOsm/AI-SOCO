#include<bits/stdc++.h>

using namespace std;

#define getSeed std::chrono::system_clock::now().time_since_epoch().count()

#define ll long long

#define all(x) x.begin(), x.end()

const int mod = (int) 1e9 + 7;
const int mod2 = 998244353;


int main(){

    cin.tie(0);
    cin.sync_with_stdio(0);

    #ifdef Cyborg101
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif


    int p[3][2], idx[3];

    for(int i = 0; i < 3; ++i)
    	cin >> p[i][0] >> p[i][1];

    iota(idx, idx + 3, 0);


    do{

    	int i = idx[0];
    	int j = idx[1];
    	int k = idx[2];

    	int y12 = (p[i][1] - p[j][1]); 
    	int x12 = (p[i][0] - p[j][0]);

    	int y13 = (p[i][1] - p[k][1]);
    	int x13 = (p[i][0] - p[k][0]);

    	ll sly = y12 * 1ll * x13;
    	ll sky = y13 * 1ll * x12;

    	if(sly == sky){ //co-linear - same slope
    		cout << 1 << endl;
    		return 0;
    	} 
    	
    	if(p[i][0] == p[j][0]){ // equal on x-axis

    		int lb = min(p[i][1], p[j][1]);
    		int rb = max(p[i][1], p[j][1]);
    		int yy = p[k][1];

    		if(yy >= rb || yy <= lb){
    			cout << 2 << endl;
    			return 0;
    		}

    	}

    	if(p[i][1] == p[j][1]){ // equal on y-axis

    		int lb = min(p[i][0], p[j][0]);
    		int rb = max(p[i][0], p[j][0]);
    		int xx = p[k][0];

    		if(xx >= rb || xx <= lb){
    			cout << 2 << endl;
    			return 0;
    		}
    	}

    }while(next_permutation(idx, idx + 3));

    cout << 3 << endl;

    return 0;
}
