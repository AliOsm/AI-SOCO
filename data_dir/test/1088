#include <stdio.h>
#include <queue>
#include <math.h>
#include <iostream>
#include <assert.h>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <memory.h>
#include <fstream>
#include <functional>
using namespace std;
#define ll long long

const int N = 16, M = 105;

bool tab[N][M];
int H=1, L[N], R[N], dp[N][2],m;

int sol(int h, int bit) {
	//bit==0  Left , bit==1 Right
	if (h > H)return -1;
	int i, j, &ret = dp[h][bit];

	
	if (ret != -1)return ret;


	if (!bit) {
		
		ret = m + 1 + sol(h + 1, 1);
		int d = R[h];
		if (h != H)
			d *= 2;
		ret = min(ret, d  + sol(h + 1, 0));
	}
	else {
		ret = m + 1 + sol(h + 1, 0);

		int d = m+1-L[h];

		if (h != H)d *= 2;
		ret = min(ret, d  + sol(h + 1, 1));
	}
	++ret;
	return ret;
}
int main(){
	int n,  i, j;
	cin >> n >> m;
	string s;
	for (i = n; i >= 1; --i) {
		L[i] = m + 1;
		cin >> s;
		for (j = 1; j <= m; ++j) {
			tab[i][j] = s[j] -'0';

			if (tab[i][j])H= max(H,i), R[i] = max(R[i], j), L[i] = min(L[i], j);
		}
	}

	memset(dp, -1, sizeof(dp));
	cout << sol(1, 0) << endl;
}