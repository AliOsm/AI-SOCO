//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2,fma,sse4.1,sse4.2,sse4a,xsave")
#include <bits/stdc++.h>
using namespace std;

#define PB push_back
#define MP make_pair
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define MAGIC0
mt19937 rnd(time(0));

typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e5 + 7;
const double PI = acos(-1.);
const double EPS = 1e-8;
const int MOD = 1000 * 1000 * 1000 + 7;

LL calc[100005];
VI x[100005];
int cnt[100005];

void dfs(int v, int par=-1)
{
	cnt[v] = 1;
	for(int to : x[v])
	{
		if (to != par)
		{
			dfs(to, v);
			cnt[v] += cnt[to];
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(0);
	int n, k;
	cin >> n >> k;
	vector<PII> vec;
	FOR(i, 1, n)
	{
		int a, b, c;
		cin >> a >> b >> c;
		if (c == 0)
		{
			x[a].PB(b);
			x[b].PB(a);
		}
	}

	for(int i = 1;i <= n;++i)
	{
		calc[i] = i;
		for(int j = 2;j <= k;++j)
		{
			calc[i] *= i;
			calc[i] %= MOD;
		}
	}
	LL ans = calc[n];

	FOR(i, 1, n + 1)
	{
		if (!cnt[i])
		{
			dfs(i);
			ans -= calc[cnt[i]];
			while(ans < 0)
			{
				ans += MOD;
			}
		}
	}

	cout << (ans + MOD) % MOD;

	return 0;
}
