#include <cstdlib> 
#include <cctype> 
#include <cstring> 
#include <cstdio> 
#include <cmath> 
#include <algorithm> 
#include <vector> 
#include <string> 
#include <iostream> 
#include <sstream> 
#include <map> 
#include <set> 
#include <queue> 
#include <stack> 
#include <fstream> 
#include <numeric> 
#include <iomanip> 
#include <bitset> 
#include <list> 
#include <stdexcept> 
#include <functional> 
#include <utility> 
#include <ctime> 
using namespace std; 

#define PB push_back 
#define MP make_pair 

#define rep(i,n) for(int i=0;i<(n);++i) 
#define FOR(i,l,h) for(int i=(l);i<=(h);++i) 
#define FORD(i,h,l) for(int i=(h);i>=(l);--i) 
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl

typedef vector<int> VI; 
typedef vector<string> VS; 
typedef vector<double> VD; 
typedef long long int64; 
typedef pair<int,int> pii; 

const int maxl=200;

struct bign{
	int s[maxl],len;
	bign(){
		memset(s,0,sizeof(s));
		len=1;
	}
	void clear(void)
	{
		while(len>0 && !s[len-1]) len--;
	}
	bign operator = (const char *num)
	{
		memset(s,0,sizeof(s));
		len=strlen(num);
		for(int i=0;i<len;i++) s[i]=num[len-i-1]-'0';
		return *this;
	}
	bign operator = (int num)
	{
		char str[maxl]={};
		sprintf(str,"%d",num);
		*this=str;
		return *this;
	}
	bign(int num){ *this=num;}
	bign operator * (const bign &b)
	{
		bign res;
		res.len=len+b.len;
		for(int i=0;i<len;i++)
			for(int j=0;j<b.len;j++)
				res.s[i+j] += s[i]*b.s[j];
		for(int i=1;i<res.len;i++)
		{
			if(res.s[i-1]>9)
			{
				res.s[i] += res.s[i-1]/10;
				res.s[i-1] %= 10;
			}
		}
		res.clear();
		return res;
	}
	void output()
	{
		for(int i=len-1;i>=0;i--) printf("%d",s[i]);
		printf("\n");
	}
};

int p[500]={},pt=0;
bool isp[1000]={};

void Getprime(void)
{
	memset(isp,true,sizeof(isp));
	isp[0]=isp[1]=false;
	for(int i=2;i<1000;i++) if(isp[i])
	{
		p[pt++]=i;
		for(int j=i+i;j<1000;j+=i)
			isp[j]=false;
	}
}

int main(void)
{
	Getprime();
	int n; cin>>n;
	if(n==2) { cout<<"-1"<<endl; return  0;}
	rep(i,n)
	{
		bign res=1;
		rep(j,n) if(i!=j)
		{
			res=res*p[j];
		}
		res.output();
	}
	return 0;
}