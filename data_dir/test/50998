#include<bits/stdc++.h>
#include<unordered_map>
using namespace std;
typedef double D;
typedef long long ll;
typedef pair<ll,ll> pll;
const ll mod=1000000007;
const ll inf=(1ll<<62);
const int MX=1e5+9;
int n,k,a[MX][5],f[3][3][3][3],kk;
int main(){
    cin>>n>>k;
    for(int i=0;i<n;i++){
        int kk=0;
        for(int j=0;j<k;j++){
            cin>>a[i][j];
            kk+=a[i][j];
        }
        if(kk==0){
            puts("YES");
            return 0;
        }
    }
    if(k==1){
        for(int i=0;i<n;i++){
            for(int j=0;j<k;j++){
                if(a[i][j]==0){
                    puts("YES");
                    return 0;
                }
            }
        }
        puts("NO");
        return 0;
    }
    if(k==2){
        int b=0,c=0;
        for(int i=0;i<n;i++){
            if(a[i][0]==0&&a[i][1]==1)b=1;
            if(a[i][1]==0&&a[i][0]==1)c=1;
            if(a[i][0]==0&&a[i][1]==0){
                puts("YES");
                return 0;
            }
        }
        if(b&&c){
            puts("YES");
            return 0;
        }
        puts("NO");
        return 0;
    }
    if(k==3){
        for(int i=0;i<n;i++){
            for(int b1=0;b1<=1;b1++){
                for(int b2=0;b2<=1;b2++){
                    for(int b3=0;b3<=1;b3++){
                        if(!f[b1][b2][b3][0])continue;
                        if(b1+a[i][0]<=1&&b2+a[i][1]<=1&&b3+a[i][2]<=1){
                            puts("YES");
                            return 0;
                        }
                    }
                }
            }
            f[a[i][0]][a[i][1]][a[i][2]][0]=1;
        }
        puts("NO");
        return 0;
    }
    for(int i=0;i<n;i++){
        for(int b1=0;b1<=1;b1++){
            for(int b2=0;b2<=1;b2++){
                for(int b3=0;b3<=1;b3++){
                    for(int b4=0;b4<=1;b4++){
                        if(!f[b1][b2][b3][b4])continue;
                        if(b1+a[i][0]<=1&&b2+a[i][1]<=1&&b3+a[i][2]<=1&&b4+a[i][3]<=1){
                            puts("YES");
                            return 0;
                        }
                    }
                }
            }
        }
        f[a[i][0]][a[i][1]][a[i][2]][a[i][3]]=1;
    }
    puts("NO");
}
