#include<bits/stdc++.h>

#define x first
#define y second
#define y0 hi1
#define y1 hi2
#define ll long long
#define mp make_pair
#define pb push_back
#define sqr(a) (a)*(a)
#define ld long double
#define all(a) (a).begin(), (a).end()

using namespace std;

const int inf = 2000000000;
const int N = 1e5 + 5;

map<string, int> id;
int f[N], w[N], g[N];

int find_fr(int x){
    if(x == -1){
        return -1;
    }

    if(f[x] == x){
        return x;
    } else {
        f[x] = find_fr(f[x]);
        return f[x];
    }
}

void union_fr(int x, int y){
    f[y] = x;
}

int main(){

    int n, m, q;
    cin >> n >> m >> q;

    string a[n + 1];
    for(int i = 0; i < n; i++){
        cin >> a[i];
        id[a[i]] = i;
        f[i] = i;
        g[i] = -1;
    }

    for(int i = 0; i < m; i++){
        string s, t;
        int ty;
        cin >> ty >> s >> t;
        int x = id[s];
        int y = id[t];

        if(ty == 1){
            int f1 = find_fr(x);
            int f2 = find_fr(y);

            if(g[f1] != f2 && g[f2] != f1){
                cout << "YES\n";
                int w1 = find_fr(g[f1]);
                int w2 = find_fr(g[f2]);

                union_fr(f1, f2);
                f1 = find_fr(x);

                if(w1 == -1 && w2 == -1){
                    //union_fr(w1, w2);
                } else
                if(w1 == -1){
                    g[f1] = w2;
                    g[w2] = f1;
                } else
                if(w2 == -1){
                    g[f1] = w1;
                    g[w1] = f1;
                } else {
                    union_fr(w1, w2);
                    g[f1] = find_fr(w1);
                    g[find_fr(w1)] = f1;
                }
            } else {
                cout << "NO\n";
            }
        } else {
            int f1 = find_fr(x);
            int f2 = find_fr(y);
            if(f1 == f2){
                cout << "NO\n";
            } else {
                int w1 = g[f1];
                int w2 = g[f2];

                if(w2 != -1)union_fr(f1, w2);
                if(w1 != -1)union_fr(f2, w1);

                f1 = find_fr(x);
                f2 = find_fr(y);

                g[f1] = f2;
                g[f2] = f1;

                cout << "YES\n";
            }
        }
    }

    for(int i = 0; i < q; i++){
        string s1, s2;
        cin >> s1 >> s2;
        int x = id[s1];
        int y = id[s2];
        int f1 = find_fr(x);
        int f2 = find_fr(y);
        if(f1 == f2){
            cout << "1\n";
        } else
        if(g[f1] == f2 || g[f2] == f1){
            cout << "2\n";
        } else {
            cout << "3\n";
        }
    }
}
