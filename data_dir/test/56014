#include <bits/stdc++.h>

using namespace std;
using namespace placeholders;

template <class T> void mini(T &l, T r) {l = min(l, r);}
template <class T> void maxi(T &l, T r) {l = max(l, r);}

template <class TH> void _dbg(const char *sdbg, TH h) {
  cerr << sdbg << "=" << h << "\n";
}
template <class TH, class ...TA> void _dbg(const char *sdbg, TH h, TA ...a) {
  while (*sdbg != ',') cerr << *sdbg++; cerr << "=" << h << ","; _dbg(sdbg + 1, a...);
}
template <class T> ostream &operator<<(ostream &os, vector <T> v) {
  os << "[";
  for (auto vv : v) os << vv << ",";
  return os << "]";
}
template <class L, class R> ostream &operator<<(ostream &os, pair <L, R> p) {
  return os << "(" << p.first << "," << p.second << ")";
}

#define eput(...) //_dbg(#__VA_ARGS__, __VA_ARGS__)

int n, x;

void run() {
  scanf("%d%d", &n, &x);
  if (n == 2) {
    if (x != 0) {
      puts("YES");
      printf("0 %d\n", x);
    } else {
      puts("NO");
    }
    return;
  }
  int t = 0;
  for (int i = 1; i <= n - 1; ++i) {
    t ^= i;
  }
  t ^= x;
  eput(t);
  vector <int> ans;
  if (t >= n || t < 1) {
    for (int i = 1; i <= n - 1; ++i) ans.push_back(i);
    ans.push_back(t);
  } else {
    if (t != 1) {
      ans.push_back(0);
      ans.push_back(131072);
      ans.push_back(131073);
      for (int i = 2; i <= n - 1; ++i) if (i != t) ans.push_back(i);
    } else if (n - 1 >= 2) {
      ans.push_back(0);
      ans.push_back(131072);
      ans.push_back(131074);
      for (int i = 1; i <= n - 1; ++i) if (i != t && i != 2) ans.push_back(i);
    }
  }
  if (ans.size() != n) {
    puts("NO");
    return;
  }
  puts("YES");
  for (int i : ans) printf("%d ", i);
  puts("");
}

int main() {
  run();
  return 0;
}
