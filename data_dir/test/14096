#include <bits/stdc++.h>

using namespace std;

template<class T1, class T2>
istream & operator>> (istream& is, pair<T1,T2> &p){
    return is >> p.first >> p.second;
}
template<class T1, class T2>
ostream & operator<< (ostream &os, pair<T1,T2> &p){
    return os << p.first << " " << p.second;
}

const int N=200005;

int t[N<<2];

void update(int v, int tl, int tr, int pos, int val){
    if(tl==tr)return void(t[v]=val);
    int tm=(tl+tr)>>1;
    if(pos<=tm)update(v+v,tl,tm,pos,val);
    else update(v+v+1,tm+1,tr,pos,val);
    t[v]=max(t[v+v],t[v+v+1]);
}

int get_x(int v, int tl, int tr, int min_x, int min_y){
    if(min_x>tr || t[v]<=min_y)return -1;
    if(tl==tr)return tl;
    int tm=(tl+tr)>>1;
    int ans=get_x(v+v,tl,tm,min_x,min_y);
    if(ans!=-1)return ans;
    return get_x(v+v+1,tm+1,tr,min_x,min_y);
}

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	int q;
	cin >> q;
	vector<pair<int,pair<int,int> > > z(q);
	vector<int> all;
	for(int i=0; i<q; i++){
        string s;
        int x,y;
        cin >> s >> x >> y;
        int t;
        if(s=="add")t=1;
        else if(s=="remove")t=-1;
        else t=0;
        z[i]={t,{x,y}};
        all.push_back(x);
	}
	sort(all.begin(),all.end());
	all.resize(unique(all.begin(),all.end())-all.begin());
	int n=all.size();
	vector<set<int> > points(n);
    for(int i=0; i<q; i++){
        int x=z[i].second.first,y=z[i].second.second;
        x=lower_bound(all.begin(),all.end(),x)-all.begin();
        if(z[i].first==1){
            points[x].insert(y);
            update(1,0,n-1,x,*points[x].rbegin());
        }
        else if(z[i].first==-1){
            points[x].erase(y);
            update(1,0,n-1,x,points[x].empty() ? 0 : *points[x].rbegin());
        }
        else{
            int res=get_x(1,0,n-1,x+1,y);
            if(res==-1)cout << "-1\n";
            else cout << all[res] << " " << *points[res].upper_bound(y) << "\n";
        }
    }
}
