#include <bits/stdc++.h>
#define nmax 100005
#define INF 999999999999999
#define lld long long
using namespace std;
vector<string>words, revwords;
string act;
int n, c[nmax], nw, lst;
lld dp[2][2];
lld minn(lld a, lld b)
{
    if (a < b) return a;
    return b;
}
int main()
{
    words.push_back("");
    revwords.push_back("");
    cin>>n;
    for (int i=1;i<=n;++i)
        cin>>c[i];
    for (int i=1;i<=n;++i)
    {
        cin>>act;
        words.push_back(act);
        reverse(act.begin(), act.end());
        revwords.push_back(act);
    }
    dp[1][0] = 0;
    dp[1][1] = c[1];
    for (int i=2;i<=n;++i)
    {
        nw = i%2;
        lst = !nw;
        dp[nw][0] = dp[nw][1] = INF;
        for (int j=0;j<2;++j)
        {
            // j = 1 reversed current string
            if (j == 0)
            {
                if (words[i] >= words[i-1])
                    dp[nw][j] = minn(dp[nw][j],dp[lst][0]);
                if (words[i] >= revwords[i-1])
                    dp[nw][j] = minn(dp[nw][j],dp[lst][1]);
            }
            else
            {
                if (revwords[i] >= words[i-1])
                    dp[nw][j] = minn(dp[nw][j],dp[lst][0] + c[i]);
                if (revwords[i] >= revwords[i-1])
                    dp[nw][j] = minn(dp[nw][j],dp[lst][1] + c[i]);
            }
        }
    }
    if (dp[nw][0] == INF && dp[nw][1] == INF)
    {
        cout<<"-1\n";
        return 0;
    }
    cout<<minn(dp[nw][0],dp[nw][1])<<'\n';
    return 0;
}
