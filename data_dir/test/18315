/**
SXR0aXAkI0JwbXptI3FhI3Z3I293bCNqY2IjUG0jMCNicG0jVHFkcXZvLyNCcG0jQW10bjBhY2phcWFicXZvLyNNYm16dml0MSNWdyNhdGN1am16I2tpdiNhbXF9bSNQcXUjVnd6I0F0bW14MSNQcWEjaXptI2l0dCNicHF2b2EjUXYjYnBtI3BtaWRtdmEjaXZsI3d2I21pemJwMSNFcHcjcWEjYnBtem0ja2l2I3F2Ym16a21sbSNRdiNQcWEjeHptYW12a20jbXtrbXhiI0lhI3BtI3htenVxYmJtYnBHI1BtI3N2d2VtYnAjRXBpYiMraXh4bWl6bWJwI2J3I1BxYSNrem1pYmN6bWEjSWEsI0ptbnd6bSN3eiNJbmJteiN3eiNKbXBxdmwjYnBtdTEjVnd6I2FwaXR0I2JwbXwja3d1eGlhYSNJY29wYiN3biNwcWEjc3Z3ZXRtbG9tI017a214YiNpYSNQbSNlcXR0bWJwMSNQcWEjYnB6d3ZtI2x3YnAjbXtibXZsI1dkbXojYnBtI3BtaWRtdmEjSXZsI3d2I21pemJwLyNpdmwjUG0jbm1tdG1icCNWdyNuaWJxb2NtI3F2I29jaXpscXZvI0l2bCN4em1hbXpkcXZvI2JwbXUvI053eiNQbSNxYSNicG0jVXdhYiNQcW9wMSNCcG0jQWN4em11bSMrcXYjb3R3enwsMQ==
*/
#include <cstring>
#include <vector>
#include <complex>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <queue>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>

#define F first
#define S second
#define endl '\n'
#define deb(x) cout<<#x<<' '<<x<<endl;
#define pb push_back
#define ll long long

const long long MAXN = 1e6 + 1;
const long long MOD = 1e9 + 7;
using namespace std;

typedef pair<int, int> pii;


long long readInt() {
    bool minus1 = false;
    long long result = 0;
    char ch;
    ch = getchar();
    while (true) {
        if (ch == '-') break;
        if (ch >= '0' && ch <= '9') break;
        ch = getchar();
    }
    if (ch == '-') minus1 = true; else result = ch-'0';
    while (true) {
        ch = getchar();
        if (ch < '0' || ch > '9') break;
        result = result*10 + (ch - '0');
    }
    if (minus1)
        return -result;
    else
        return result;
}

int ans[MAXN];
vector <pii> g[MAXN];

int used[MAXN];
int main(){
	#ifdef IZI_KATKA
	assert(freopen("input", "r", stdin));
    assert(freopen("output", "w", stdout));
    #endif
  	int n = readInt();
  	for (int i = 1; i <= n - 2; i++) {
  		int x1 = readInt(), x2 = readInt(), x3 = readInt();
  		used[x1]++;
  		used[x2]++;
  		used[x3]++;
  		g[x1].pb({x2, x3});
  		g[x2].pb({x1, x3});
  		g[x3].pb({x1, x2});
  	}
	for (int i = 1; i <= n; i++) {
		if (used[i] == 1) {
			if (ans[1]) {
				ans[n] = i;
			} else {
				ans[1] = i;
			}
		}
	}
	for (int i = 1; i <= n; i++) {
		if (used[i] == 2) {
			for (pii j : g[i]) {
				if (j.F == ans[1]) {
					ans[2] = i;
					break;
				}
				if (j.S == ans[1]) {
					ans[2] = i;
					break;
				}
			}
			for (pii j : g[i]) {
				if (j.F == ans[n]) {
					ans[n - 1] = i;
					break;
				}
				if (j.S == ans[n]) {
					ans[n - 1] = i;
					break;
				}
			}
		}
	}
	for (int i = 3; i <= n - 2; i++) {
		for (pii j : g[ans[i - 1]]) {
			if (j.F == ans[i - 2] && j.S != ans[i - 3]) {
				ans[i] = j.S;
				break;
			}
			if (j.S == ans[i - 2] && j.F != ans[i - 3]) {
				ans[i] = j.F;
				break;
			}
		}
	}	  	
	for (int i = 1; i <= n; i++) {
		cout << ans[i] << ' ';
	}
  	return 0;
}

 
