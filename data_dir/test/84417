#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define R cin>>
#define Z class
#define ll long long
#define ln cout<<'\n'
#define in(a) insert(a)
#define pb(a) push_back(a)
#define pd(a) printf("%.10f\n",a)
#define mem(a) memset(a,0,sizeof(a))
#define all(c) (c).begin(),(c).end()
#define iter(c) __typeof((c).begin())
#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)
#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)
#define rep(i,n) REP(i,0,n)
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
template<Z A>void pr(A a){cout<<a;ln;}
template<Z A,Z B>void pr(A a,B b){cout<<a<<' ';pr(b);}
template<Z A,Z B,Z C>void pr(A a,B b,C c){cout<<a<<' ';pr(b,c);}
template<Z A,Z B,Z C,Z D>void pr(A a,B b,C c,D d){cout<<a<<' ';pr(b,c,d);}
template<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}
ll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}
const ll MAX=1e9+7,MAXL=1LL<<61,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<ll,ll> P;

int d[2222][2222],t[2222][2222],r[2222][2222],t2[2222][2222],r2[2222][2222];

void init(ll n,ll m) {
  rep(i,n+1)rep(j,m) d[i][j+1]+=d[i][j];
  rep(j,m+1)rep(i,n) d[i+1][j]+=d[i][j];
}
int calc(ll x1,ll y1,ll x2,ll y2) {return d[x2][y2]-d[x1][y2]-d[x2][y1]+d[x1][y1];}

void Main() {
  ll n,m;
  cin >> n >> m;
  string s[n];
  rep(i,n) R s[i];
  if(n==1&&m==1) {
    pr(1);
    return;
  }
  rep(i,n) {
    rep(j,m) {
      if(s[i][j]=='R') d[i+1][j+1]++;
    }
  }
  init(2002,2002);
  t[0][0]=1;
  r[0][0]=1;
  rep(i,n) {
    rep(j,m) {
      if(j) {
        t2[i][j]+=t2[i][j-1];
        t2[i][j]%=MAX;
      }
      if(i) {
        r2[j][i]+=r2[j][i-1];
        r2[j][i]%=MAX;
      }
      if(j) {
        t[i][j]+=t2[i][j];
        t[i][j]%=MAX;
      }
      if(i) {
        r[j][i]+=r2[j][i];
        r[j][i]%=MAX;
      }
      ll x1=t[i][j],x2=r[j][i];
      ll c1=calc(i,j+1,i+1,m),c2=calc(i+1,j,n,j+1);
      //pr(i,j,x1,x2);
      t2[i][j+1]+=r[j][i];
      t2[i][j+1]%=MAX;
      t2[i][m-c1]-=r[j][i];
      t2[i][m-c1]+=MAX;
      t2[i][m-c1]%=MAX;
      r2[j][i+1]+=t[i][j];
      r2[j][i+1]%=MAX;
      r2[j][n-c2]-=t[i][j];
      r2[j][n-c2]+=MAX;
      r2[j][n-c2]%=MAX;
      //t[i].add(j+1,m-c1,x2);
      //r[j].add(i+1,n-c2,x1);
    }
  }
  pr((t[n-1][m-1]+r[m-1][n-1])%MAX);
  //pr((t[n-1].getMin(m-1,m)+r[m-1].getMin(n-1,n))%MAX);
}

int main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}
