#include <bits/stdc++.h>

#define F first
#define S second

#define ll long long
#define uns unsigned

#define pb push_back
#define ppb pop_back
#define mp make_pair

#define sz(x) (int) x.size()
#define all(x) x.begin(), x.end()
#define bit(x) __builtin_popcountll(x)
#define sqr(x) ((x) * 1LL * (x))

#define sf scanf
#define pf printf
#define nl '\n'
#define rt return

#define Fname "b"
#define RockyBalboa
#define TNT

#define NeedForSpeed ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

using namespace std;

typedef pair <int, int> pi;
typedef pair <ll, ll> pl;
typedef pair <double, double> pd;

const int N = 100007, MX = 1000007, MOD = 1000000007, INF = 2000000007;
const long long oo = 1000000000000000007;
const double eps = 1e-9;
const int xi[4] = {-1, 0, 1, 0}, yj[4] = {0, 1, 0, -1}, hr[8][2] = {{1, 2},{1, -2},{-1, 2},{-1, -2},{-2, -1},{-2, 1},{2, 1}, {2, -1}};

    void IOI2017(){
    #ifdef RockyBalboa
        freopen(Fname".in", "r", stdin);
        freopen(Fname".out", "w", stdout);
    #endif
    #ifdef TNT
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    }
    #define int long long
    int n, m;
    int a[N], b[N];
    inline int GetR(int x){
        int l = 1, r = n + 1, m;
        while (r - l > 1){
            m = r + l >> 1;
            if (a[m] > x) r = m;
            else l = m;
        }
        if (a[l] <= x) rt l;
        else rt -INF;
    }
    inline int GetL(int x){
        int pos = lower_bound(a + 1, a + 1 + n, x) - a;
        if (a[pos] >= x) rt pos;
        else rt INF;
    }
    inline bool Check(int r){
        vector <int> used;
        int lx = 0, ly = 0;
        for (int i = 1; i <= m; i++){
            int x = GetL(b[i] - r), y = GetR(b[i] + r);
            if (x == INF || y == -INF) continue;
            used.pb(x), used.pb(y);
            //if (x > ly + 1) rt 0;
            if (!lx && !ly){
                if (x > 1) rt 0;
                lx = x, ly = y;
            }
            else{
                if (x > ly + 1) rt 0;
                lx = x, ly = y;
            }
        }
        if (ly == n) rt 1;
        else rt 0;
    }
main(){
    NeedForSpeed
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i <= m; i++)
        cin >> b[i];
//    cout << nl;

    int l = -1, r = INF, m;
    while (r - l > 1){
        m = r + l >> 1;
        if (Check(m)) r = m;
        else l = m;
    }
    cout << r;
    rt 0;
}
