#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>

#ifdef PRINTERS
#include "printers.hpp"
using namespace printers;
#define tr(a)		cerr<<#a<<": "<<a<<endl;
#else
#define tr(a)    
#endif

#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(int i=a;i<b;i++)
using namespace std;
vi adj[200005];
vi bot[200005];
int n,m,k;
int curbot;
bool visited[200005];
void dfs(int u){
	bot[curbot].pb(u);
	if(sz(bot[curbot])==(2*n+k-1)/k){
		curbot++;
	}
	visited[u]=1;
	for(auto i:adj[u]){
		if(visited[i])continue;
		dfs(i);
		bot[curbot].pb(u);
		if(sz(bot[curbot])==(2*n+k-1)/k){
			curbot++;
		}
	}
}
void solve(){
	cin>>n>>m>>k;
	rep(i,0,m){
		int a,b;
		cin>>a>>b;
		adj[a].pb(b);
		adj[b].pb(a);
	}
	dfs(1);
	rep(i,0,k){
		if(sz(bot[i])==0){
			bot[i].pb(1);
		}
	}
	rep(i,0,k){
		cout<<sz(bot[i])<<" ";
		for(auto j:bot[i])cout<<j<<" ";
		cout<<endl;
	}
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int t=1;
//	cin>>t;
	while(t--){
		solve();
	}
	return 0;
}