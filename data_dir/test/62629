#include <bits/stdc++.h>
#define base 1000000007LL
#define ll long long
#define ld long double
#define X first
#define Y second
#define pb push_back
#define EPS 1e-9
#define all(a) (a).begin(), (a).end()
#define sz(a) int((a).size())
#define ms(s, n) memset(s, n, sizeof(s))
#define FOR(i,a,b) for (int i = (a); i <= (b); i++)
#define FORE(i,a,b) for (int i = (a); i >= (b); i--)
#define FORALL(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
using namespace std;
typedef pair<int, int> II;
typedef pair<II, int> III;

double PI = acos(-1);

struct point {
    ll x, y;
    point(ll x = 0, ll y = 0) {
        this->x = x;
        this->y = y;
    }
    bool operator== (point& p) {
        return p.x == x && p.y == y;
    }
};

struct vecto {
    ll x, y;
    vecto(ll x = 0, ll y = 0) {
        this->x = x;
        this->y = y;
    }
    bool operator== (vecto& v) {
        return v.x == x && v.y == y;
    }
    bool operator< (const vecto& v) const {
        if (v.x == x) return y < v.y;
        return x < v.x;
    }
};

vecto toVec(point a, point b)
{
    return vecto(b.x - a.x, b.y - a.y);
}

ll crossProduct(vecto a, vecto b)
{
    return a.x * b.y - a.y * b.x;
}

ll dotProduct(vecto a, vecto b)
{
    return a.x * b.x + a.y * b.y;
}

ll dist(point a, point b)
{
    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);
}

int main()
{
    //int t = 0;
    ios::sync_with_stdio(0);
    //freopen("inp.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    int r, h;
    cin >> r >> h;
    int res = h / r;
    int k = h % r;
    int them = 0;
    if (k == 0) them = 1;
    else if (k*2 < r) them = 1;
    else if (k*2 >= r * sqrt(3)) them = 3;
    else them = 2;
    cout << 2*res + them;
    return 0;
}
