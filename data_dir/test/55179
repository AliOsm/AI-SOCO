#include<bits/stdc++.h>
using namespace std;

const int N = 1e5 + 23;

struct seg {
    int le, r, gr;
    
    bool operator<(const seg & rhs) {
        return le < rhs.le;
    }
};

array<seg, N> a;
array<int, N> ord;

int main()
{   
    ios_base::sync_with_stdio(false);

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        for (int i = 0; i < n; ++i) cin >> a[i].le >> a[i].r;
        
        for (int i = 0; i < n; ++i) ord[i] = i;
        sort(ord.begin(), next(ord.begin(), n), [&](int x, int y) { return a[x].le < a[y].le; });
        
        multiset<int> rs;
        rs.insert(a[ord[0]].r);
        a[ord[0]].gr = 1;
        int idg = 1;
        for (int i = 1; i < n; ++i) {
            while (not rs.empty() and *rs.begin() < a[ord[i]].le) rs.erase(rs.begin());
            
            if (rs.empty()) idg = 2;
            
            a[ord[i]].gr = idg;
            
            rs.insert(a[ord[i]].r);
        }
        
        if (idg == 1) {
            cout << -1 << '\n';
            continue;
        }
       
        for (int i = 0; i < n; ++i) {
            if (i > 0) cout << ' ';
            cout << a[i].gr;
        }
        cout << '\n';
    }
}