#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
template<typename T>
using v=vector<T>;
template<typename T>
using s=set<T>;
template<typename T, typename X>
using p=pair<T, X>;
template<typename T, typename X>
using m=map<T, X>;

const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

const int MAXN = 1e5 + 10;
int n, a[MAXN], curr;
m<int, int> per;
m<int, v<int>> idx;
ll ans, arr[MAXN];

int main()
{
	ssync;
	cin >> n;
	for(int i=0; i<n; i++)
	{
		cin >> a[i];
		per[a[i]] = 0;
	}
	for(auto& x: per)
		x.S = ++curr;
	for(int i=0; i<n; i++)
	{
		a[i] = per[a[i]];
		idx[a[i]].pb(i);
		if(a[i] == 1)
			arr[i] = 1, ans++;
	}
	curr = 1;
	for(auto& x: idx)
	{
		if(x.F == 1)
			continue;
		for(auto ptr = x.S.rbegin(); ptr != x.S.rend(); ptr++)
		{
			auto i = *ptr;
			const auto& it = idx[x.F - 1];
			auto pos = upper_bound(it.begin(), it.end(), i);
			if(pos != it.end())
				curr = arr[*pos] + 1;
			ans += curr;
			arr[i] = curr;
		}
	}
	cout << ans << "\n";
	return 0;
}
