#include <bits/stdc++.h>
#define endl '\n'
#define debug(X) cout << #X << " = " << X << endl

using namespace std;

typedef vector< vector<int> > Matrix;

const int MD = 1e9 + 7;

Matrix mult(Matrix &a, Matrix &b) {
	int m = a.size();
	Matrix res(m, vector<int>(m));
	for (int i = 0; i < m; i++)
		for (int j = 0; j < m; j++)
			for (int k = 0; k < m; k++)
				res[i][j] = (res[i][j] + 1LL * a[i][k] * b[k][j]) % MD;
	return res;
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	#ifdef UTP
	freopen("input.txt", "r", stdin);
	#endif
	long long n; cin >> n;
	int m; cin >> m;
	if (n < m) { cout << 1 << endl; return 0; }
	Matrix mat(m, vector<int>(m));
	Matrix ans(m, vector<int>(m));
	mat[0][0] = 1;
	mat[0][m - 1] = 1;
	for (int i = 1; i < m; i++) mat[i][i - 1] = 1;
	for (int i = 0; i < m; i++) ans[i][i] = 1;
	long long e = n - m + 1;
	while (e > 0) {
		if (e & 1)
			ans = mult(ans, mat);
		mat = mult(mat, mat);
		e >>= 1;
	}
	int ways = 0;
	for (int i = 0; i < m; i++)
		ways = (ways + ans[0][i]) % MD;
	cout << ways << endl;
	return 0;
}
