//██████╗ ██╗   ██╗██╗      ██████╗ ███████╗
//██╔══██╗██║   ██║██║      ██╔══██╗██╔════╝
//██████╔╝██║   ██║██║█████╗██║  ██║█████╗
//██╔══██╗██║   ██║██║╚════╝██║  ██║██╔══╝
//██║  ██║╚██████╔╝██║      ██████╔╝███████╗
//╚═╝  ╚═╝ ╚═════╝ ╚═╝      ╚═════╝ ╚══════╝
#include <bits/stdc++.h>

// #pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
using namespace std;

#define fst first
#define snd second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back

#define all(v) (v).begin(), (v).end()
#define sz(v) ((int)(v).size())
#define sqr(x) ((x) * (x))

typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector<int> vi;

#define next ajksdslk
#define prev aklsfjk

mt19937_64 mt_rand(chrono::system_clock::now().time_since_epoch().count());

template<typename T1, typename T2> inline bool upmax(T1& a, T2 b) { return (a < b ? (a = b, true) : false); }
template<typename T1, typename T2> inline bool upmin(T1& a, T2 b) { return (b < a ? (a = b, true) : false); }

const int maxn = (int) 1e6 + 100;
const int maxlog = 21;
const int base = 1e9 + 7;
const ld eps = (ld) 1e-9;
const ld PI = acos(-1.);
//const int pp = 41;
const int inf = 2e9;
const ll llinf = 4e18;

bool dbg = false;

struct pt {
	int x, y;
};

pt a[maxn];

int triangle_area_2 (int x1, int y1, int x2, int y2, int x3, int y3) {
	return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

bool cw(pt a, pt b, pt c) {
 return a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y) < 0;
}

map<tuple<int,int,int>, ll> aa[2];

bool cw(int i, int j, int k) {
    if (dbg) {
        return cw(a[i], a[j], a[k]);

    }
    if (aa[1].count(mt(i, j, k))) {
        return aa[1][mt(i, j, k)] < 0;
    }
    cout << "2 " << i << " " << j << " " << k << endl;
    int x; cin >> x;
     aa[1][mt(i, j, k)] = x;
     aa[1][mt(j, k, i)] = x;
     aa[1][mt(k, i, j)] = x;

     aa[1][mt(i, k, j)] = -x;
     aa[1][mt(j, i, k)] = -x;
     aa[1][mt(k, j, i)] = -x;

    return x < 0;
}

ll getSq(int i, int j, int k) {
    if (dbg) {
        return triangle_area_2(a[i].x, a[i].y, a[j].x, a[j].y, a[k].x, a[k].y);
    }

    if (i == j || i == k || j == k) return 0;
    if (k < j) swap(j, k);
    if (j < i) swap(i, j);
    if (k < j) swap(j, k);
    if (aa[0].count(mt(i, j, k))) {
        return aa[0][mt(i, j, k)];
    }
    cout << "1 " << i << " "<< j << " " << k << endl;
    ll x; cin >> x;
    aa[0][mt(i, j, k)] = x;
    return x;
}

ll dist[maxn];
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
#ifdef LOCAL
  freopen ("input.txt", "r", stdin);
#endif

    int n;
    cin >> n;

    if (dbg) {
        for (int i = 1; i <= n; i ++) {
            cin >> a[i].x >> a[i].y;
        }
    }

    int vstart = 1;
    int curV = 2;
    for (int i = 3; i <= n; i ++) {
        if (cw(vstart, curV, i)) {
            curV = i;
        }
    }

    for (int i = 1; i <= n; i ++) {
        if (i == vstart) continue;

        dist[i] = getSq(vstart, curV, i);
    }
    vector<int> a(n);
    iota(all(a), 1);
    sort(a.begin() + 1, a.end(), [&](int i, int j) {
         return dist[i] < dist[j];
    });
//    for (int v : a ) {
//        cout << v << " ";
//    }
//    cout << endl;
    int p1 = vstart;
    int p2 = a.back();
    vector<int> up, down;
	up.push_back (p1);
	down.push_back (p1);
	for (size_t i=1; i<a.size(); ++i) {
		if (i==a.size()-1 || cw (p1, a[i], p2)) {
			//while (up.size()>=2 && !cw (up[up.size()-2], up[up.size()-1], a[i]))
			//	up.pop_back();
			up.push_back (a[i]);
		}
		if (i==a.size()-1 || !cw (p1, a[i], p2)) {
			//while (down.size()>=2 && cw (down[down.size()-2], down[down.size()-1], a[i]))
			//	down.pop_back();
			down.push_back (a[i]);
		}
	}
	a.clear();
	for (size_t i=0; i<down.size(); ++i)
		a.push_back (down[i]);
	for (size_t i=up.size()-2; i>0; --i)
		a.push_back (up[i]);

    cout << "0 ";
    for (int v : a) {
        cout << v << " ";
    }
    cout << endl;

  return 0;
}
