#include <string.h>
#include <unordered_map>

#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include   <stdlib.h>    
#include   <time.h> 
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair

using namespace std;
const int N = 400000;
int mod = 998244353;

ll pt[N];
int son[N];
int INF = 1<<30;

vector<int> g[N];

ll dfs(int t, int f) {

	ll ret = 1;
	int num = 1;
	for(int u : g[t]) {
		if(u==f)continue;
		ret = (ret * dfs(u,t))%mod;
		num++;
	}
	if(t==1) {
		ret = (ret * pt[num-1])%mod;
	}
	else {
		ret = (ret * pt[num])%mod;
	}
	//printf("t = %d ret = %lld\n",t,ret);
	return ret;
}

int main() {
	int n;
	sf("%d",&n);
	for(int i = 0; i < n-1; ++i) {
		int u,v;
		cin>>u>>v;
		g[u].pb(v);
		g[v].pb(u);
	}

	pt[0] = 1;
	for(int i = 1; i <=n; ++i) pt[i] = (pt[i-1]*i)%mod;

	cout<<(dfs(1,1)*n)%mod<<endl;
}

