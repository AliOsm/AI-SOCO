#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e18
#define MOD ((long) 1e9 + 7)
#define mll map<long, long>
#define pll pair<long, long>
#define umap unordered_map
#define uset unordered_set
#define pb push_back
#define pf push_front
#define FOR(i, a, b) \
  for (long i = a; i < (long) b; i++)
#define SORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
  FOR (_i, 0, v.size()) \
    printf("%lld ", v[_i]); \
  printf("\n");

vector<long> gera_primos(long n)
{
  vector<long> primos;
  vector<bool> crivo(n);
  primos.pb(2);
  for (long i = 3; i <= n; i += 2) {
    if (crivo[i]) continue;
    primos.pb(i);
    for (long j = i; j <= n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Node
{
  long id;
  bool visitado = false;
  long val;
  set<long> out, in;

  Node() {
    static long i = 0;
    id = i++;
  }
};

int main()
{
  //ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

  long n;
  cin >> n;

  vector<string> s = {"zero", "one", "two", "three",
    "four", "five", "six", "seven", "eight", "nine", "ten",
    "eleven", "twelve", "thirteen", "fourteen", "fifteen",
    "sixteen", "seventeen", "eighteen", "nineteen"};
  vector<string> dec = {
    "twenty", "thirty", "forty", "fifty", "sixty",
    "seventy", "eighty", "ninety"
  };
  if (n < 20) {
    cout << s[n] << "\n";
  } else {
    if (n % 10 == 0) {
      cout << dec[n/10 - 2] << "\n";
    } else {
      cout << dec[n/10 - 2] << "-" << s[n % 10] << "\n";
    }
  }
}
