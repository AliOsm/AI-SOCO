#include <iostream>
#include <string.h>
using namespace std;
const int M = 1e9 + 7;
int pow[701],ans;
char c[701];
string s;
void add(int &a,int b){
	a+=b;
	if(a >= M)a-=M;
}
struct lol{
	int num,freq;
	lol(int a = -1,int b = -1){num = a;freq = b;}
	void operator+=(lol a){
		add(num,a.num);
		add(freq,a.freq);
	}
}dp[701][701][10][2];
bool lel;
lol calc(int u,int b,int n,bool l){
	if(b < 0)return lol(0,0);
	if(u == s.size())return lol(0,!b);
	lol &ref = dp[u][b][n][l];
	if(ref.num != -1)return ref;
	ref.num = ref.freq = 0;
	int st = l ? 9 : s[u] - '0';
	while(st + 1){
		lol temp = calc(u + 1,b - (st >= n),n,l || st < s[u] - '0');
		if(st != n && st > n)temp.num = temp.num*10LL%M;
		ref+=temp;
		int sum = 0;
		if(st == n)sum = n*1LL*pow[b - 1]%M;
		sum = sum*1LL*temp.freq%M;
		add(ref.num,sum);
		st--;
	}
	return ref;
}
int main(){
// 	freopen("readin.txt","r",stdin);
	scanf("%s",c);
	s = c;
	pow[0] = 1;
	for(int i = 1;i < 701;i++)pow[i] = 10LL*pow[i - 1]%M;
	for(int j = 1;j < 10;j++)
		for(int k = 1;k <= s.size();k++)add(ans,calc(0,k,j,0).num);
	printf("%d\n",ans);
}