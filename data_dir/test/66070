/* 264C */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
int V[maxn], C[maxn];
int n, q;
const __int64 INF = 1e18+5;
__int64 dp[maxn];
__int64 ans;
__int64 a, b;

void solve() {
	int mxc = 0, mxc_ = -1;
	__int64 mx, tmp, tmp_;
	
	// memset(dp, 0x30, sizeof(dp));
	fill(dp, dp+maxn, -INF);
	dp[0] = 0;
	rep(i, 0, n) {
		mx = -INF;
		tmp_ = V[i] * b;
		if (mxc != C[i]) {
			mx = max(dp[mxc]+tmp_, dp[C[i]]+a*V[i]);
		} else if (mxc_>=0 && mxc_!=C[i]) {
			mx = max(dp[mxc_]+tmp_, dp[C[i]]+a*V[i]);
		}
		if (mx > dp[C[i]]) {
			dp[C[i]] = mx;
			if (C[i] != mxc) {
				if (C[i] == mxc_) {
					if (dp[C[i]] > dp[mxc]) {
						mxc_ = mxc;
						mxc = C[i];
					}
				} else {
					if (dp[C[i]] > dp[mxc]) {
						mxc_ = mxc;
						mxc = C[i];
					} else if (mxc_<0 || dp[C[i]]>dp[mxc_]) {
						mxc_ = C[i];
					}
				}
			}
			
		}
	}
	
	ans = dp[mxc];
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	scanf("%d %d", &n, &q);
	rep(i, 0, n)
		scanf("%d", &V[i]);
	rep(i, 0, n)
		scanf("%d", &C[i]);
	
	while (q--) {
		scanf("%I64d %I64d", &a, &b);
		solve();
		printf("%I64d\n", ans);
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
