#include<bits/stdc++.h>
using namespace std;
#define ll long long
const ll mx=1e6;
set<ll> adj[mx];
queue<ll> q;
ll n,m,k,answers[mx],fcount[mx],done[mx],ans;
void rem()
{
	while(!q.empty())
	{
		ll p=q.front();q.pop();
		for(auto i:adj[p])
		{
			fcount[i]--;
			if(fcount[i]<k&&!done[i])
				q.push(i),done[i]=1,ans--;
		}
		adj[p].clear();
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);cout.tie(0);
	cin>>n>>m>>k;
	ll qx[m],qy[m];
	for(ll i=0;i<m;i++)
	{
		cin>>qx[i]>>qy[i];--qx[i];--qy[i];
		adj[qx[i]].insert(qy[i]);adj[qy[i]].insert(qx[i]);
		fcount[qx[i]]++,fcount[qy[i]]++;
	}
	for(ll i=0;i<n;i++)
		if(fcount[i]<k)
			q.push(i),done[i]=1;
		else ans++;
	for(ll i=m-1;i>=0;i--)
	{
		rem();
		answers[i]=ans;
		if(!done[qy[i]])
			fcount[qx[i]]--;
		if(!done[qx[i]])
			fcount[qy[i]]--;
		if(adj[qx[i]].find(qy[i])!=adj[qx[i]].end())
			adj[qx[i]].erase(qy[i]);
		if(adj[qy[i]].find(qx[i])!=adj[qy[i]].end())
			adj[qy[i]].erase(qx[i]);
		if(fcount[qx[i]]<k&&!done[qx[i]])
			q.push(qx[i]),done[qx[i]]=1,ans--;
		if(fcount[qy[i]]<k&&!done[qy[i]])
			q.push(qy[i]),done[qy[i]]=1,ans--;
	}
	for(ll i=0;i<m;i++)
		cout<<answers[i]<<endl;
}