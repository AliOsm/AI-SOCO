/*...Part - 01...*/

#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <deque>
#include <iterator>
#include <bitset>
#include <assert.h>
#include <new>
#include <sstream>
//#include <bits/stdc++.h>
using namespace std ;

/*...Part - 02...*/

typedef long long               ll ;
typedef long double             ld ;
typedef unsigned long long      ull ;
typedef pair<int,int>           pii ;
typedef pair<ll,ll>             pll ;
typedef vector<int>             vi ;
typedef vector<ll>              vll ;
typedef vector<vector<int>>     vvi ;

int Int(){int x ; scanf("%d",&x) ; return x ;}
ll Long(){ll x ; scanf("%lld",&x) ; return x ;}

/*...Part - 03...*/
/*....Debugger....*/

#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it) {cout << endl ;}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
    cerr << *it << " = " << a << ' ' ;
    err(++it, args...);
}

/*...Part - 04...*/
/*...Needed to change according to problem requirements...*/

const int N          = (int)2e5 + 5 ;
const int maxN       = (int)1e6 + 6 ;
const ll  Mod        = (ll)1e9 + 7 ;
const int inf        = (int)2e9 ;
const ll  Inf        = (ll)1e18 ;

/*..........................................................*/
/*...Part - 05...*/

#define     debug(x)    cerr << #x << " = " << x << '\n' ;
#define     rep(i,b,e)  for(__typeof(e) i = (b) ; i != (e + 1) - 2 * ((b) > (e))  ; i += 1 - 2 * ((b) > (e)))
#define     Int         Int()
#define     Long        Long()
#define     all(x)      x.begin() , x.end()
#define     sz(x)       (int)x.size()
#define     ff          first
#define     ss          second
#define     pb          push_back
#define     eb          emplace_back
#define     mem(a)      memset(a , 0 ,sizeof a)
#define     memn(a)     memset(a , -1 ,sizeof a)

/*...Part - 06...*/
/*...... ! Code start from here ! ......*/

int dx[4] = {0 , 0 , -1 , 1} ;
int dy[4] = {1 , -1 , 0 , 0} ;
int p[7] , vis[1006][1005], tt ;
pair < int , int > par[4][1005][1005] ;
set < pii > res[4] ;

bool valid(int x , int y){
    return x >= 0 and y >= 0 and x <= 1000 and y <= 1000 ;
}

int found(int x , int y){
    if(x == p[3] and y == p[4])return 2 ;
    if(x == p[5] and y == p[6])return 3 ;
    return 0 ;
}

void bfs(int x , int y, int id){
    queue < pii > q ;
    vis[x][y] = tt ;
    //dist[x][y] = 0 ;
    q.push({x , y}) ;
    set < int > ff ;
    //error(x , y)
    while(!q.empty()){
        pii f = q.front() ;
        q.pop() ;
        for(int i = 0 ; i < 4 ; ++i){
            int u = f.ff + dx[i] , v = f.ss + dy[i] ;
            if(valid(u , v) and vis[u][v] != tt){
                //error(f.ff, f.ss, u , v)
                vis[u][v] = tt ;
                par[id][u][v] = {f.ff , f.ss} ;
                int h = found(u , v) ;
                if(h)ff.insert(h) ;
                if(sz(ff) < 2)q.push({u , v}) ;
            }
        }
    }
    pii b = {p[3] , p[4]} ;
    res[id].insert(b) ;
    while(1){
        b = par[id][b.ff][b.ss] ;
        res[id].insert(b) ;
        if(b.ff == x and b.ss == y)break ;
    }
    b = {p[5],p[6]} ;
    res[id].insert(b) ;
    while(1){
        b = par[id][b.ff][b.ss] ;
        res[id].insert(b) ;
        if(b.ff == x and b.ss == y)break ;
    }
    
}



int main(){
    int test = 1 , tc = 0 ;
    while(test--){
        for(int i = 1 ; i <= 6 ; ++i){
            p[i] = Int ;
        }
        ++tt ;
        bfs(p[1] , p[2] , 1) ;
        swap(p[1] , p[3]) ;
        swap(p[2] , p[4]) ;
        ++tt ;
        bfs(p[1],p[2] , 2) ;
        swap(p[1] , p[5]) ;
        swap(p[2] , p[6]) ;
        ++tt ;
        bfs(p[1],p[2] , 3) ;
        int id = 0 , m = inf ;
        for(int i = 1 ; i < 4 ; ++i){
            if(m > sz(res[i])){
                m = sz(res[i]) ;
                id = i ;
            }
        }
        cout << sz(res[id]) << '\n' ;
        for(pii i : res[id])cout << i.ff << ' ' << i.ss << '\n' ;
    }
    return 0 ;
}

/*...Always look at the part - 04...*/
/*...............END................*/


