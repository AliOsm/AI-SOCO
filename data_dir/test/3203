#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll ; 
typedef long double ld ;
typedef pair<ll , ll> pll ;

const ll N = 666 + 66 , Mod = 1e9 + 7 ;
const ll SQ = 330 ;

ll a[N][N] , M[N][N] , c[N][N] , n  , X , Y , cnt ;
string ans = "" ;

// 1 U 
// 2 D 
// 3 R 
// 4 L 

inline bool ok(ll x , ll y) {
	return x >= 1 && y >= 1 && x <= n && y <= n ;
}

inline bool val(ll x , ll y , ll dx , ll dy) {
	x += dx ;
	y += dy ;
	while (ok(x , y)) {
		if (a[x][y]) return !M[x][y] ;
		x += dx ;
		y += dy ;
	}
	return 0 ;
} 
void DFS(ll x , ll y , ll k = 0) {
	M[x][y] = 1 ;
	c[x][y] = k ;
	if (!a[x][y]) {
		a[x][y] = 1 ;
		cnt ++ ;
		ans += "1" ; 
	}
	if (val(x , y , 1 , 0)) ans += "D" , DFS(x + 1 , y + 0 , 2) ;
	if (val(x , y , -1 , 0)) ans += "U" , DFS(x - 1 , y + 0 , 1) ;
	if (val(x , y , 0 , 1)) ans += "R" , DFS(x + 0 , y + 1 , 3) ;
	if (val(x , y , 0 , -1)) ans += "L" , DFS(x + 0 , y - 1 , 4) ;
	if (a[x][y]) {
		a[x][y] = 0 ;
		cnt -- ;
		ans += "2" ;
	}
	if (c[x][y]) {
		if (c[x][y] == 1) ans += "D" ;
		if (c[x][y] == 2) ans += "U" ;
		if (c[x][y] == 3) ans += "L" ;
		if (c[x][y] == 4) ans += "R" ;
	}
}
int main () {
    ios::sync_with_stdio(0), cin.tie(0) ;
    cin >> n >> X >> Y ;
    for (int i = 1 ; i <= n ; i ++)
    	for (int j = 1 ; j <= n ; j ++)
    		cin >> a[i][j] , cnt += a[i][j] ;
    DFS(X , Y) ;
    if (cnt) cout << "NO\n" ;
    else cout << "YES\n" << ans ;
    return (0) ;
}
