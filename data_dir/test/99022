// --------------------<optimizations>--------------------
#pragma GCC optimize("O3")

//(UNCOMMENT WHEN HAVING LOTS OF RECURSIONS)\
#pragma comment(linker, "/stack:200000000")
//(UNCOMMENT WHEN TRYING TO BRUTEFORCE WITH A LOT OF LOOPS)\
#pragma GCC optimize("unroll-loops")
// -------------------</optimizations>--------------------
#include<bits/stdc++.h>
using namespace std;
#define int long long
#define d double
#define pdd pair<d,d>
#define pdp pair<d,pdd>
#define pb push_back
#define pf push_front
#define cases int tc;cin>>tc;while(tc--)
#define N 100003
#define M 103
#define inf LLONG_MAX
#define SPEED ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
//int mod=1e9+7;
//int mod=998244353;
map<d,set<pdp>> m;

signed main()
{
    SPEED

    m.clear();
    int n;
    cin>>n;
    int i,j;
    d x[n+1],y[n+1],a,b,c,s;
    for(i=1;i<=n;++i)
        cin>>x[i]>>y[i];
    for(i=1;i<=n-1;++i)
    {
        for(j=i+1;j<=n;++j)
        {
            if(x[j]==x[i])
            {
                m[N].insert({0,{1,x[i]}});
            }
            else if(y[j]==y[i])
            {
                m[0].insert({0,{1,y[i]}});
            }
            else
            {
                s=(y[j]-y[i])/(x[j]-x[i]);
                a=(1.0/s),b=-1.0;
                c=-1.0*(a*y[i]+b*x[i]);
                m[s].insert({a,{b,c}});
            }
        }
    }
    int ans=0,cnt=0;
    for(auto it:m)
    {
        int temp=it.second.size();
        ans-=(temp*(temp-1))/2;
        cnt+=temp;
    }
    ans+=(cnt*(cnt-1))/2;
    cout<<ans;



    return 0;
}
