#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define dbg(x) cout << #x << '=' << x << '\n';
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define pb push_back
#define MAXN 100005
#define INF 1000000005
#define LINF 1000000000000000005
#define x1 xdddddddddddddddddd
#define y1 ydddddddddddddddddd

int n,m,x,y,d[2005][2005],xs,ys,v[2005][2005],ans;

char a[2005][2005];

deque <pi> q;

int32_t main(){
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    cin >> n >> m >> xs >> ys >> x >> y;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cin >> a[i][j];
            d[i][j]=INF;
        }
    }
    q.push_back({xs,ys}); d[xs][ys]=0;
    while(q.sz){
        pi t=q.front();
        q.pop_front();
        if(v[t.x][t.y]) continue;
        v[t.x][t.y]=1;
        if(t.x-1 && a[t.x-1][t.y]!='*' && !v[t.x-1][t.y] && d[t.x-1][t.y]>d[t.x][t.y]) d[t.x-1][t.y]=d[t.x][t.y],q.push_front({t.x-1,t.y});
        if(t.x+1<=n && a[t.x+1][t.y]!='*' && !v[t.x+1][t.y] && d[t.x+1][t.y]>d[t.x][t.y]) d[t.x+1][t.y]=d[t.x][t.y],q.push_front({t.x+1,t.y});
        if(t.y-1 && a[t.x][t.y-1]!='*' && !v[t.x][t.y-1] && d[t.x][t.y-1]>d[t.x][t.y]+1) d[t.x][t.y-1]=d[t.x][t.y]+1,q.push_back({t.x,t.y-1});
        if(t.y+1<=m && a[t.x][t.y+1]!='*' && !v[t.x][t.y+1] && d[t.x][t.y+1]>d[t.x][t.y]+1) d[t.x][t.y+1]=d[t.x][t.y]+1,q.push_back({t.x,t.y+1});
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            //cout << d[i][j] << ' ';
            if(a[i][j]=='*') continue;
            int l=0,r=0;
            if(j<ys){
                l=ys-j;
                d[i][j]-=l;
                l+=d[i][j]/2; r+=d[i][j]/2;
                if(l<=x && r<=y) ans++;
            }
            else{
                r=j-ys;
                d[i][j]-=r;
                l+=d[i][j]/2; r+=d[i][j]/2;
                if(l<=x && r<=y) ans++;
            }
        }
        //cout << '\n';
    }
    cout << ans;
}
