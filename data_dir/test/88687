// 01.09.2013
//
// ������������ ����� �� ����� 2, 10

/*
120C. STL
����������� �� ������� �� ����   2 seconds
�� ����� ���� ��� �����������, �� ���� �� ��������, ��� ����� ������������ �����������, � ������� ������������� ��������� ������ ���.
��� �� �����, ��� � ���������� ����� ���������� ������� ������ ����� �����.
��������, ����� � ������ ��� ���������� ��������������� ���� ����� ����������������� ����� �������:
����� �������-������, ����� �������-����� � ��� �����.
��� � ���� ���������� � ����� ���������, ������� ����������� � ����� ��������� �������������� ������� �������������� ������.
���� - �� �����������, ������� �� ������� � ������ ����� ����, ��� ������� ������� n ����� �����.
������ ���� ����� �� ����� X-- � ������� ����� ������������ ������ ������ �� ����� �����. ��������� ������� ���� � ����� X--:
"	��-������, ����� �������� ������ "int".
"	��-������, ����� �������� ������, ������������ � "pair", ����� ������� � ����������� ������� ����� ������� �������
    ����� ��� ������ ���� ����� X--. � ���� ������ ��� ��������.
"	������� ������ ������ ����� �� ��������. 
����� ���������: type := int | pair<type,type>. ��������, ��� ����� ����� ���� ���������� ��� pair<int,pair<int,int>>.
���� � �������� ����� ����, �� ����������� ��� ��� ����� X--, ������� ������ n ����� �����.
� ���������, ���� ��������� � �� ���������� ������ ����������.
������ ���� ��� ����, � ���� ��� ����� �� ����� ���������� ����� ����������, ����� �������� ��� ����� X--.
�������� ����, ���������� ����� ���������� ���, ����� ��������� ���������� ��� ����� X--, ��� ��������, ��� ������� ��� ����������.
������� ������
� ������ ������ �������� ������������ ����� ����� n (1 <= n <= 10^5) - ���������� �����, ������� ������ ��� �������������� �����.
�� ������ ������ ����� ������ �������� �����, ��������� �����. ������ �� ��� - "pair" ��� "int" (��� �������).
�������������, ��� ����� ���������� ���� �� ����������� 10^5 � ��� ����� ������������� ���� ����� ����� n ���� "int".
�������� ������
���� ����� ���������� ����� ���������� ���, ����� ��������� ���������� ��� ����� X--, �������� ������������ ������ ������������ ���������� ���.
����� �������� "Error occurred" (��� �������). ������ ���� �� ������ ��������� ������ ���� ������ �������� � ������ ��������. 
�������������, ��� ���� ����� ��� ����������, �� �� �����������.
�������� ��������, ��� ����� ������� ���, ������������� ����� (���� ����� ����������), � �� �����, � ������� ���������� n ��������.
������� ������
������� ������
3
pair pair int int int
�������� ������
pair<pair<int,int>,int>
������� ������
1
pair int
�������� ������
Error occurred

 
*/


# include <stdio.h>
# include <string.h>
# include <math.h>


//# include <iostream>

//# include <set>

// set <type> S;
// void erase (type)
// void insert (type)
// void clear ()
// ptr * find (type)


//# include <map>

// mat <keytype, valtype> M;
// void erase (keytype)
// void insert (keytype)
// void clear ()
// ptr * find (keytype)


//# include <queue>

// queue <type> Q;
// priority_queue <type> PQ;

// void erase (type) ???
// void push (type)
// type top ()     type front () NOT!!!
//                 type back ()  NOT!!!
// void pop ()
// bool empty ()
// int size ()


# include <stack>

// stack <type> Q;

// void erase (type) ???
// void push (type)
// type top ()
// void pop ()
// bool empty ()
// int size ()


# include <vector>

// int size ()
// resize (int)
// void clear ()
// void push_back (type)
// void insert (int, type)


# include <algorithm>


using namespace std;


# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define imax(a,b) ( (a) > (b) ? (a) : (b) )
# define imin(a,b) ( (a) < (b) ? (a) : (b) )

# define isalpha(c) ( (c) >= 'a' && (c) <= 'z' )
# define isAlpha(c) ( (c) >= 'A' && (c) <= 'Z' )
# define isdigit(c) ( (c) >= '0' && (c) <= '9' )


# define convert(x) ( isalpha (x) ? (x)-'a'+'A' : (x) )
# define Convert(x) ( isAlpha (x) ? (x)-'A'+'a' : (x) )


# define sqr(x) ( (x) * (x) )


# define NUM(r,c) ( ((r) << 8) + (c) )
# define ROW(n) ( (n) >> 8 )
# define COL(n) ( (n) & 0XFF )

# define CHECK(r,c) ( (r) >= 0 && (r) < n && (c) >= 0 && (c) < m )


# define x  X
# define y  Y
# define x1 X1
# define y1 Y1
# define x2 X2
# define y2 Y2



typedef pair <int, int>          Pair;
typedef long long int            Long;
typedef unsigned int             uint;
typedef unsigned long long int   ULong;



/*

struct E
{
   int v;
   E * next;
   E (int w, E * p=NULL) { v = w, next = p; }
};

*/


//+++++++++++++++++++++++++++++++++++++++++++++
/*
// ������� ���� ����� !!!
//
//
//
//
//
//
//
//
*/
//+++++++++++++++++++++++++++++++++++++++++++++



const int N = 700400;
const int M = 1000;

/*
const int P = 1000000007;   // 10^9 + 7
const int K = 256;


const double PI = 3.14159265358979323846;
const double eps = 1e-7;
*/


int n, m, k, l, d, n2;
//int a [N], b [N];
//int a [N][N];

//int p [N], kp;
//int kol [K], len;

//bool mark [N];
bool ok;

char s [N], t [N];
stack <char> st;


//void Primes ();
//int BinSearch (int * b, int n, int x);
void Print (int par=0);


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("C.TXT", "r", stdin);
   freopen ("C.OUT", "w", stdout);
/*
# else
   freopen ("INPUT.TXT", "r", stdin);
   freopen ("OUTPUT.TXT", "w", stdout);
*/
# endif

   int i, j, nk, si;

//   Primes ();

# ifndef ONLINE_JUDGE
   int nnn;
   scanf ("%d\n", &nnn);
   for ( int iii=1; iii <= nnn; iii++ )
   {
/*
      for ( i=0; i < N; i++ )
         mark [i] = false;
*/
//      memset (t, 0, sizeof (t));

      while ( ! st.empty () )
         st.pop ();
 
      printf ("\n\n\nSAMPLE %d\n", iii);
# endif



//+++++++++++++++++++++++++++++++++++++++++++++
//
// ��������� ������������� ���������� ����� !!!
//
//+++++++++++++++++++++++++++++++++++++++++++++

      n = 0, m = 0, k = 0;
      ok = true;

      scanf ("%d\n", &n);
      gets (s);
//      scanf ("%d %d\n", &n, &k);
//      scanf ("%d %d\n", &n, &m);

//      scanf ("%s\n", s);   // gets (s);
//      len = strlen (s);

/*
      for ( i=0; i < n; i++ )
         scanf ("%d", &a [i]);
*/

//      sort (a, a+n);


/*
      for ( i=0; i < n; i++ )
         for ( j=0; j < n; j++ )
            scanf ("%d", &a [i][j]);
*/

# ifndef ONLINE_JUDGE
   Print ();
# endif

//      ok = ( n > 1 );
      for ( i=0, k=0, j=0; s [i] && ok; i++ )
      {
         si = s [i];
//
//printf ("%d [%c]\n", i, si);
//
         if ( si == 'p' )
         {
            //
            if ( ! st.empty () && st.top () == 'i' )
               t [j++] = ',';
            strcpy (t+j, "pair<");
            j += 5;
            st.push ('<');
            //
            k++;
            i += 3;
         }
         else if ( si == 'i' )
         {
            //
//            if ( st.empty () )
//               { ok = false; break; }
            if ( ! st.empty () && st.top () == 'i' )
               t [j++] = ',';
            strcpy (t+j, "int");
            j += 3;

            while ( ! st.empty () && st.top () == 'i' )
            {
               t [j++] = '>';
               st.pop ();
               if ( ! st.empty () && st.top () == '<' )
                  st.pop ();
               else
                  { ok = false; break; }
            }

            st.push ('i');
            //
            i += 2;
         }
         else
            ;

//
//printf ("%d [%c] size=%d\n", i, s [i], st.size ());
//
      }

      t [j] = 0;

      if ( ok && (st.size () != 1 || st.top () != 'i') )
         ok = false;

# ifndef ONLINE_JUDGE
      printf ("i=%d j=%d\n", i, j);
/*
      while ( ! st.empty () )
      {
         printf ("%c", st.top ());
         st.pop ();
      }
      printf ("\n");
*/
      Print (1);
# endif


      if ( ok )
         printf ("%s", t);
      else
         printf ("Error occurred");

# ifndef ONLINE_JUDGE
   }
# endif


   return 0;
}

void Print (int par)
{
   if ( par == 0 )
   {
      printf ("n=%d s=[%s]\n", n, s);
//      printf ("n=%d k=%d\n", n, k);
//      printf ("n=%d\n", n);

//      printf ("<%s> len=%d", s, len);

/*
      for ( int i=0; i < n; i++ )
         printf (" %d", a [i]);

      for ( int i=0, j; i < n; i++ )
      {
         for ( j=0; j < n; j++ )
            printf (" %d", a [i][j]);
         printf ("\n");
      }
*/
   }
   else
   {
      printf ("%d", k);
   }
   printf ("\n");
}


/*
void Primes ()   // calculate primes
{
   int i, j, k, ki, pj;
   bool ok;

   p [0] = 2, p [1] = 3, p [2] = 5, p [3] = 7, p [4] = 11, p [5] = 13;
   p [6] = 17, p [7] = 19, p [8] = 23, p [9] = 29, p [10] = 31;
   p [11] = 37, p [12] = 41, p [13] = 43, p [14] = 47, p [15] = 53;
   p [16] = 59, p [17] = 61, p [18] = 67, p [19] = 71, p [20] = 73;
   p [21] = 79, p [22] = 83, p [23] = 89, p [24] = 97, p [25] = 101;

   for ( i=26; i < N; i++ )
   {
      for ( k=p [i-1]+2; ; k+=2 )
      {
         ki = (int) sqrt ((double) k) + 2;
         for ( ok=true, j=0; pj = p [j], pj < ki; j++ )           // ??? p [j] < ki ???
            if ( k % pj == 0 )
               { ok = false; break;}
         if ( ok ) break;
      }
      p [i] = k;
   }
   kp = i;
}

int BinSearch (int * b, int n, int x)
{
   int l=0, r=n-1, m;
   if ( x < b [0] ) return -1;
   if ( x > b [n-1] ) return n;

   while ( l < r-1 )
   {
      m = (l + r) / 2;
      if ( x == b [m] ) return m;
      if ( x < b [m] )
         r = m;
      else
         l = m;
   }
   if ( x == b [l] ) return l;
   if ( x == b [r] ) return r;
   return -2;
}
*/
