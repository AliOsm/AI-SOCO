#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
int n;
string s,t;
deque<int>ab,ba;
vector<pair<int,int> >v;
///
void input()
{ cin>>n>>s>>t;
  for(int i=0;i<n;i++)
  {if(s[i]=='a'&&t[i]=='b')ab.push_back(i);
   else if(s[i]=='b'&&t[i]=='a')ba.push_back(i);
  }
}
///
void check()
{for(int i=0;i<n;i++)
  {if(s[i]=='a'&&t[i]=='b')
   {ab.pop_front();
     if(ab.size())
      {v.push_back({i,ab.front()});
       s[ab.front()]=t[ab.front()];
       ab.pop_front();
      }
     else if(!ba.empty())
      {v.push_back({i,i});
       v.push_back({i,ba.front()});
       s[ba.front()]=t[ba.front()];
       ba.pop_front();
      }
     else cout<<-1,exit(0);
   }
   else if(s[i]=='b'&&t[i]=='a')
   {ba.pop_front();
     if(ba.size())
      {v.push_back({i,ba.front()});
       s[ba.front()]=t[ba.front()];
       ba.pop_front();
      }
     else if(!ab.empty())
      {v.push_back({i,i});
       v.push_back({i,ab.front()});
       s[ab.front()]=t[ab.front()];
       ab.pop_front();
      }
     else cout<<-1,exit(0);
 
   }
  }
 
}
///
void display()
{ cout<<v.size()<<endl;
  for(int i=0;i<v.size();i++)
  cout<<v[i].F+1<<" "<<v[i].S+1<<endl;
}
///
int main()
{
  yalla;
  input();
  check();
  display();
  re 0;
}