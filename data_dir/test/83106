#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define MP make_pair
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define MAGIC0
mt19937 rnd(time(0)); //rnd()

typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e5 + 7;
const double PI = acos(-1.);
const double EPS = 1e-8;
const int MOD = 1000 * 1000 * 1000 + 7;

#define x1 daslas
#define x2 dsll
#define y1 dsg
#define y2 lfsl
#define int LL

int x1, y1, x2, y2;
int n;
string s;

bool is = 0;

bool check(int res)
{
	int cnt = res / n, countR = 0, countL = 0, countU = 0, countD = 0;
	int dx = x2 - x1;
	int dy = y2 - y1;
	is = 0;
	for(auto ch : s)
	{
		countR += (ch == 'R') * cnt;
		countL += (ch == 'L') * cnt;
		countU += (ch == 'U') * cnt;
		countD += (ch == 'D') * cnt;
	}

	for(int i = 0;i < res % n;++i)
	{
		char ch = s[i];
		countR += (ch == 'R');
		countL += (ch == 'L');
		countU += (ch == 'U');
		countD += (ch == 'D');
	}

	int dcountX = countR - countL;
	int dcountY = countU - countD;
//	cout << dcountX << ' ' << dcountY << ' ' << dx << ' ' << dy << endl;
//	cout << res << ' ' << dcountX << ' ' << dcountY << endl;
	return (int)(abs(dcountX - dx) + abs(dcountY - dy)) <= res;
}

main()
{
	ios_base::sync_with_stdio(0);
	cin >> x1 >> y1 >> x2 >> y2;
	cin >> n;
	cin >> s;

	int l = 0, r = 1e15, mid, ans = -1;
	FOR(i, 0, 60)
	{
		if (check(1ll << i))
		{
			r = 1ll<<i;
			ans = 1ll<<i;
			break;
		}
		else
		{
			l = 1ll << i;
		}
	}
	while(l <= r)
	{
		mid = (l + r) >> 1;
		if (check(mid))
		{
			r = mid - 1;
			ans = mid;
		}
		else
		{
			l = mid + 1;
		}
	}

	cout << ans;

	return 0;
}
