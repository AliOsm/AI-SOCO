#include<bits/stdc++.h>
using namespace std;
const int N = 1e5 + 1;
mt19937 rng(std::chrono::system_clock::now().time_since_epoch().count());
int n,s;
long long ans,sum,more;
struct contestant{
	int a,b,s;
	contestant(int x = 0,int y = 0,int z = 0){
		a = x;b = y;s = z;
	}
	bool operator<(contestant temp){return b - a > temp.b - temp.a;}
}a[N],b[N];
long long find(long long x,long long y){
	x = x*s;y = y*s;
	for(int i = 0;i < n;i++)a[i] = b[i];
	long long cost = 0;
	for(int i = 0;i < n;i++){
		long long temp = min(a[i].s*1LL,x);
		cost+=temp*a[i].b;
		x-=temp;
		a[i].s-=temp;
		temp = min(a[i].s*1LL,y);
		y-=temp;
		a[i].s-=temp;
		cost+=temp*a[i].a;
	}
	return cost;
}
int main(){
// 	freopen("input.txt","r",stdin);
	scanf("%d%d",&n,&s);
	for(int i = 0,s,a,b;i < n;i++){
		scanf("%d%d%d",&s,&a,&b);
		::b[i] = {a,b,s};
		sum+=s;
		if(b > a)more+=s;
	}
	b[n] = {0,0,(int)((sum + s - 1)/s*s - sum)};
	n++;
	sort(b,b + n);
	ans = find((more + s - 1)/s,(sum + s - 1)/s - (more + s - 1)/s);
	if((more + s - 1)/s)ans = max(ans,find((more + s - 1)/s - 1,(sum + s - 1)/s - (more + s - 1)/s + 1));
	printf("%lld\n",ans);
}