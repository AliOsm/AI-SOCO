#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
  //freopen("data.in", "rt", stdin);
  //freopen("data.out", "w", stdout);
  auto _start = chrono::high_resolution_clock::now();
#endif
	
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(15);
	int n;
	cin >> n;
	vector<vector<int>> tree(n);
	for(int i = 1; i < n; i++) {
		int p;
		cin >> p;
		p--;
		tree[p].push_back(i);
	}
	vector<int> pre(n + 1, -1);
	function<void(int)> dfs = [&](int u) {
		for(int v : tree[u]) {
			pre[v] = u;
			dfs(v);
		}
	};
	dfs(0);
	function<void(int)> path = [&](int u) {
		if(u == -1) return;
		path(pre[u]);
		cout << u + 1 << ' ';
	};
	path(n - 1);
	cout << '\n';

#ifdef LOCAL_DEFINE
  auto _end = chrono::high_resolution_clock::now();
  cerr << "elapsed time: " << chrono::duration<double, milli>(_end - _start).count() << " ms\n";
#endif
	return 0;
}