#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
#define db(x) cout<<#x<<" = "<<x<<"\n";
#define fore(i,a,b) for(int i=a,ggdem=b;i<ggdem;i++)
#define FIN ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define SZ(a) ((int)(a).size())
#define ALL(a) a.begin(),a.end()
#define mset(a,b) memset(a,b,sizeof(a));
#define pb push_back
#define fst first
#define snd second
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());


const int K=17;
vector<int> g[1<<K];int n;  // K such that 2^K>=n
int F[K][1<<K],D[1<<K];
void lca_dfs(int x){
	fore(i,0,g[x].size()){
		int y=g[x][i];if(y==F[0][x])continue;
		F[0][y]=x;D[y]=D[x]+1;lca_dfs(y);
	}
}
void lca_init(){
	D[0]=0;F[0][0]=-1;
	lca_dfs(0);
	fore(k,1,K)fore(x,0,n)
		if(F[k-1][x]<0)F[k][x]=-1;
		else F[k][x]=F[k-1][F[k-1][x]];
}
int lca(int x, int y){
	if(D[x]<D[y])swap(x,y);
	for(int k=K-1;k>=0;--k)if(D[x]-(1<<k)>=D[y])x=F[k][x];
	if(x==y)return x;
	for(int k=K-1;k>=0;--k)if(F[k][x]!=F[k][y])x=F[k][x],y=F[k][y];
	return F[0][x];
}

int dist(int x,int y) {
  int l=lca(x,y);
  return (D[x]-D[l])+(D[y]-D[l]);
}

int main() {FIN;
  cin>>n;
  fore(i,1,n) {
    int x,y;cin>>x>>y;x--,y--;
    g[x].pb(y);
    g[y].pb(x);
  }
  lca_init();
  int q;cin>>q;
  while(q--) {
    int x,y,a,b,k;
    cin>>x>>y>>a>>b>>k;x--,y--,a--,b--;
    int l=dist(a,b);
    int r=min(dist(a,x)+dist(b,y)+1,dist(a,y)+dist(b,x)+1);
    if(l<=k && (l&1)==(k&1))cout<<"YES\n";
    else if (r<=k && (r&1)==(k&1))cout<<"YES\n";
    else cout<<"NO\n";
  }
}