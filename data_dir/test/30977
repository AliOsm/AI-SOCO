#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using OS = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long

const int N = 105;
ll a[N][N];
string s, t;
ll b, d, q;

int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    cin >> b >> d >> s >> t;

    for (int i = 0; i < t.size(); i++)
        for (int j = 0; j < s.size(); j++) {
            int cnt = 0, idx = i;
            for (int k = j; k < s.size(); k++) {
                if (t[idx % (int) t.size()] == s[k]) cnt++, idx++;
            }
            a[i][j] = cnt;
        }
    
    int cnt = 0, idx = 0;
    for (int i = 0; i < b; i++) {
        cnt += a[idx][0];
        idx = (idx + a[idx][0]) % (int) t.size();
    }

    auto ch = [&](ll len) {
        return cnt / (int) t.size() >= len * d;
    };

    ll l = 0, r = 1e9, mid;
    while (l <= r) {
        mid = (l + r) >> 1;
        if (ch(mid)) {
            l = mid + 1;
            q = mid;
        } else {
            r = mid - 1;
        }
    }
    cout << q;

    return 0;
}