#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int x[100005], y[100005], arr[100005], sz;

int main(void) {
    #ifndef ONLINE_JUDGE
        freopen("input.txt","rt",stdin);
        freopen("output.txt","wt",stdout);
    #endif
    int n; scanf("%d",&n);
    forn(i,n) scanf("%d",y+i);
    int a, b; scanf("%d%d",&a,&b);
    sort(y,y+n);
    forn(i,n) if(!i || y[i] != y[i-1]) x[sz++] = y[i];
    n = sz;
    int ans = 0;
    while(a != b){
     int mx = 1;
     sz = 0;
     bool flag = false;
     for(int i=0;i<n&&(x[i]<=a || !flag);i++){
      if(a - a % x[i] >= b)
       mx = max(mx,a % x[i]),
       arr[sz++] = x[i];
      if(x[i] > a) flag = true;
     }
     forn(i,sz) x[i] = arr[i]; n = sz;
     a -= mx;
     ans++;
    }
    printf("%d\n",ans);
    return 0;
}
