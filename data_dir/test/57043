#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <iomanip>
#include <iostream>
#include <list>
#include <sstream>
#include <ctime>
#include <functional>
#include <fstream>
#include <map>
#include <stack>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <queue>
#include <tuple>
#include <fstream>
#include <numeric>
#include <regex>
#include <array>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <deque>
#include <complex>
#include <stack>



using namespace std;
typedef long long ll;
typedef long double ld;


const int sze = 1 << 18, psze = 25, MOD1 = 1e9 + 447, MOD2 = 1e9 + 21, x1 = 139, INF = 1e9 + 1;
const ld EPS = 1e-9;


int used[sze];
int n, k;


bool check(const vector<int> &values)
{
	stack<int> test;
	int cur = 1;

	vector<int> res;
	for (int v : values)
	{
		test.push(v);

		while (test.size() && test.top() == cur)
		{
			res.push_back(cur++);
			test.pop();
		}
	}

	if (res.size() != n)
		return 0;

	for (int i = 0; i < n; ++i)
	{
		if (res[i] != i + 1)
			return 0;
	}
	
	return 1;
}


signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> n >> k;
	vector<int> values(k);
	vector<int> ans(n);

	for (int i = 0; i < k; ++i)
	{
		cin >> values[i];
		ans[i] = values[i];
	}

	int down = 1;

	stack<int> test;
	stack<int> mn;

	for (int i = 0; i < k; ++i)
	{
		test.push(values[i]);
		
		if (mn.size())
			mn.push(min(mn.top(), values[i]));
		else
			mn.push(values[i]);

		used[values[i]] = 1;

		while (test.size() && test.top() == down)
		{
			down++;
			test.pop();
			mn.pop();
		}

	}
	
	while (mn.size())
	{
		for (int i = mn.top(); i >= down; --i)
		{
			if (!used[i])
			{
				ans[k++] = i;
				used[i]++;
			}
		}

		down = mn.top() + 1;
		mn.pop();
	}

	int up = n;
	while (k != n)
		ans[k++] = up--;

	if (!check(ans))
		cout << "-1";
	else
	{
		for (int v : ans)
			cout << v << ' ';
	}

	return 0;
}