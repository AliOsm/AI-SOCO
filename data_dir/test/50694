#include <bits/stdc++.h>

using namespace std;

#define mem(a,b) memset(a,b,sizeof(a))
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define REV(i,j,k) for(int i=j;i>=k;i--)
#define FORR(i,j,k,l) for(int i=j;i<=k;i+=l)
#define inf         freopen("in.txt", "r", stdin)
#define outf        freopen("out.txt", "w", stdout)
#define pf          printf
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c)    scanf("%d %d %d", &a, &b, &c)
#define clean(mat,n)   FOR(i,0,n) mat[i].clear()
#define minn          (long long)-1000000000000000000
#define maxx          (long long) 1000000000000000000
#define mod          998244353
#define M_PI           3.14159265358979323846  /* pi */
#define LL           long long
#define NL '\n'
#define cnd tree[idx]
#define lnd (idx<<1)
#define rnd ((idx<<1)+1)
#define PB push_back
#define F first
#define S second
#define MAX 300010
#define MP make_pair
#define valid(nx,ny)  ((nx >= 0) && (nx < row) && (ny >= 0) && (ny < col))
typedef pair<LL,LL> PR;

LL lef = 0, rgt;
PR ara[MAX], val[MAX];
LL prin[MAX];
vector<int> mat[MAX];

LL getVal(int x,int y)
{
    return min(ara[x].F + ara[y].S, ara[x].S + ara[y].F);
}

int main()
{
    ios::sync_with_stdio(false);
    //inf;
    //outf;
    int n, m, u, v;

    cin >> n >> m;
    FOR(i,0,n-1) cin >> ara[i].F >> ara[i].S;

    FOR(i,0,m-1)
    {
        cin >> u >> v; u--; v--;
        mat[u].PB( v );
        mat[v].PB( u );
    }

    FOR(i,0,n-1)
    {
        val[i].F = ara[i].F - ara[i].S;
        val[i].S = i;
        lef += ara[i].S;
    }

    sort(val, val + n);

    FOR(i,0,n-1)
    {
        int p = val[i].S;
        PR v = ara[ p ];

        lef -= ara[p].S;

        prin[p] = lef + (v.F * (n - i - 1));
        prin[p] += ( rgt + (v.S * i) );

        rgt += ara[p].F;

        for(auto x : mat[p])
            prin[p] -= getVal(x, p);
    }

    FOR(i,0,n-1) cout << prin[i] << ' ';

    return 0;
}

