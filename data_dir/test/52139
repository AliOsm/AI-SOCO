#include<cstdio>
#include<cstring>
#include<iostream>
#include<vector>
#include<stack>
#include<algorithm>

#define MAXN 100001
#define MAXVAL 1000100000

using namespace std;


typedef long long LL;

LL N,M,W;
LL height[MAXN];


bool check(LL h)
{
    LL starting_node[MAXN];
    LL moves=0;
    LL sum=0;

    memset(starting_node,0,sizeof(starting_node));

    for(int i=0; i<N; ++i)
    {
        if(i>=W)
            sum-=starting_node[i-W];

        if(height[i]+sum < h)
        {
            starting_node[i]=h-height[i]-sum;
            sum+=starting_node[i];
            moves+=starting_node[i];
        }

        if(moves>M)
            return false;
    }

    return true;
}

void binary_searchs()
{
    LL begs=1;
    LL ends=MAXVAL;
    LL mid,ans;

    while(begs<=ends)
    {
        mid=(begs+ends)/2;

        if(check(mid))
        {
            ans=mid;
            begs=mid+1;
        }

        else
            ends=mid-1;
    }

    printf("%I64d\n",ans);
}


int main()
{
    scanf("%I64d%I64d%I64d",&N,&M,&W);

    for(int i=0; i<N; ++i)
        scanf("%I64d",&height[i]);


    binary_searchs();


    return 0;

}
