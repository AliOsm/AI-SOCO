#include <bits/stdc++.h>

using namespace std;

int n, l;
int a[200010];
int b[200010];

int dist(int a, int b){
    return min(abs(a-b), l - abs(a-b));
}

int mod(int x){
    return (x % n + n) % n;
}

int modl(int x){
    return (x % l + l) % l;
}

bool solve(int v){
    int pref[200010] = {};
    for(int i = 0; i < n; i++){
        int le = modl(a[i] - v);
        int ri = modl(a[i] + v);
        if(le <= ri){
            int lo = 0, hi = n;
            while(lo != hi){
                int mi = (lo + hi) >> 1;
                if(b[mi] < le) lo = mi + 1;
                else hi = mi;
            }
            if(lo == n) return false;
            int f1 = lo;
            lo = -1, hi = n - 1;
            while(lo != hi){
                int mi = (lo + hi + 1) >> 1;
                if(b[mi] > ri) hi = mi - 1;
                else lo = mi;
            }
            if(hi == -1) return false;
            int f2 = lo;
            int l = mod(f1 - i), r = mod(f2 - i);
            pref[l]++;
            pref[r+1]--;
            if(l > r) pref[0]++;
        }
        else{
            int lo = 0, hi = n;
            while(lo != hi){
                int mi = (lo + hi) >> 1;
                if(b[mi] < le) lo = mi + 1;
                else hi = mi;
            }
            int f1 = mod(lo);
            lo = -1, hi = n-1;
            while(lo != hi){
                int mi = (lo + hi + 1) >> 1;
                if(b[mi] > ri) hi = mi - 1;
                else lo = mi;
            }
            int f2 = mod(lo);
            if(f2 == n - 1 && f1 == 0) return false;
            int l = mod(f1 - i), r = mod(f2 - i);
            pref[l]++;
            pref[r+1]--;
            if(l > r) pref[0]++;
        }
    }
    int c = 0;
    for(int i = 0; i < n; i++){
        c += pref[i];
        if(c == n) return true;
    }
    return false;
}

main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> l;
    for(int i = 0; i < n; i++) cin >> a[i];
    for(int i = 0; i < n; i++) cin >> b[i];
    if(n == 1){
        cout << dist(a[0], b[0]) << endl;
        exit(0);
    }
    sort(a, a + n);
    sort(b, b + n);
    int lo = 0, hi = l/2;
    while(lo != hi){
        int mi = (lo + hi) >> 1;
        if(solve(mi)) hi = mi;
        else lo = mi + 1;
    }
    cout << lo << endl;
}
