#include <bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair

int dp[35005][55];
int v[35005];
int p[35005];
int last[35005];
int n,k;
int st[350005];
int lz[350005];

int upd(int l, int r, int v = 1, int x = 1, int ll = 0, int rr = n-1){
	if(lz[x]){
		st[x] += lz[x];
		lz[2 * x] += lz[x];
		lz[2 * x + 1] += lz[x];
		lz[x] = 0;
	}
	
	if(rr < l || ll > r || ll > rr || l > r)
		return st[x];

	if(ll >= l && rr <= r){
		st[x] += v;
		lz[2 * x] += v;
		lz[2 * x + 1] += v;
		return st[x];
	}
	else{
		int mid = (ll + rr)/2;
		return st[x] = max(upd(l, r, v, 2 * x, ll, mid), upd(l, r, v, 2 * x + 1, mid + 1, rr));
	}

}

int qry(int r, int x = 1, int ll = 0, int rr = n-1){
	if(lz[x]){
		st[x] += lz[x];
		lz[2 * x] += lz[x];
		lz[2 * x + 1] += lz[x];
		lz[x] = 0;
	}

	if(ll > r || ll > rr)
		return 0;
	if(rr <= r)
		return st[x];

	int mid = (ll + rr)/2;
	return max(qry(r, 2 * x, ll, mid), qry(r, 2 * x + 1, mid + 1, rr));

}

int main(){
	memset(dp, -1, sizeof dp);
	scanf("%d %d",&n,&k);
	for(int i = 0; i < n; i++) scanf("%d",v+i);
	int ans = 1;
	
	dp[0][1] = 1;
	p[v[0]] = 1;
	for(int i = 1; i < n; i++){
		dp[i][1] = dp[i-1][1] + (p[v[i]] == 0);
		ans = max(ans, dp[i][1]);
		p[v[i]] = 1;
	}

	for(int i = 2; i <= k; i++){
		memset(last, 0, sizeof last);
		memset(st, 0, sizeof st);
		memset(lz, 0, sizeof st);

		for(int j = 0; j < n-1; j++)
			upd(j+1, j+1, dp[j][i-1]);
		
		for(int j = 0; j < n; j++){
			upd(last[v[j]], j);
			dp[j][i] = qry(j);
			ans = max(dp[j][i], ans);
			last[v[j]] = j + 1;
		}
	}

	printf("%d\n",dp[n-1][k]);
    return 0;
}
