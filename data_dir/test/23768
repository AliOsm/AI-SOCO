#include <cstdlib>
#include <iostream>
#include <map>
#include <stdio.h>
#include <vector>
#include<bits/stdc++.h>
#include <ctype.h>
#include <list>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#define _CRT_SECURE_NO_DEPRECATE
#define INF 1000000000
#define Set(a, s) memset(a, s, sizeof (a))
#define forpos(i,j,k) for (int i=0 ; i<j ; i+=k)
#define forneg(i,j,k) for (int i=j ;i>=0 ;i-=k)
#define PI 3.14159265358979323846
#define pf printf
#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
       ( std::ostringstream() << std::dec << x ) ).str()
#include<queue>


using namespace std;

typedef long long ll;
typedef std::pair<int,int> ii;
typedef std::pair<std::string,int> si;
typedef vector<int> vi;
typedef vector<ii> vii;
queue<ii>q;
ll vis[1000000]={0};
ll bfs( ll m )
{

    ii x = q.front();q.pop();
    vis[x.first]=1;
    if(x.first==m)return x.second;
    if(x.first-1>=0 && vis[x.first-1]!=1)
    q.push(pair<int,int>(x.first-1,x.second+1));
    if(x.first*2 <=2*m && vis[x.first*2]!=1)
    q.push(pair<int,int>(x.first*2,x.second+1));

    return bfs(m);
}
int main()
{
    long long n , m;cin>>n>>m;
    q.push(pair<int,int>(n,0));
    printf("%d",bfs(m));
    //cout<<bfs(n,m,0);

	return 0;
}