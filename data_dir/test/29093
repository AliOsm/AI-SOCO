#include <bits/stdc++.h>

using namespace std;

#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define sz(x) ((int)(x).size())
#define whole(x) (x).begin(), (x).end()

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair < int, int > pii;
typedef pair < ll, ll > pll;

const int N = int(1e5) + 2;
const int LG = 20;
const ll mod = (int)1e8;
const int INF = (int)1e9 + 7;
const ll linf = 1e16;
const ld pi = acos(-1);
const int base = 10;
const ld EPS = 1e-9;

string s;
int cnt[27], pref[27][N];

bool ok (int k){
    int kol = 0;
    for (int i = 0; i < sz(s); ++i){
        if (i + k - 1 >= sz(s)) break;
        ++kol;
        for (int j = 0; j < 26; ++j){
            cnt[j] += ((pref[j][i + k - 1] - pref[j][i - 1]) > 0);
        }
    }
    bool f = 0;
    for (int j = 0; j < 26; ++j){
        if (cnt[j] == kol) f = 1;
        cnt[j] = 0;
    }
    return f;
}

int main (){
    cin >> s;
    for (int i = 0; i < sz(s); ++i){
        int x = s[i] - 'a';
        pref[x][i] = 1;
    }
    for (int i = 0; i < 26; ++i){
        for (int j = 0; j < sz(s); ++j){
            pref[i][j] = pref[i][j - 1] + pref[i][j];
        }
    }
    int l = 1, r = sz(s);
    while (r - l > 1){
        int mid = r + l >> 1;
        if (ok(mid)) r = mid;
        else l = mid;
    }
    if (ok(l)) cout << l << "\n";
    else cout << r << "\n";
    return 0;
}
