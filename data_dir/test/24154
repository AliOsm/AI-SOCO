
/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
#define	Unique(v)	v.erase(unique(all(v)),v.end())

using namespace std;

typedef unsigned int uint;
typedef long long ll;

#define N 501
int mat[N][N];
set<int> nums[N];
vector<int> ans;
int n, m;

findNum(int row, int num) {
//cout<<"findNum, row="<<row<<" num="<<num<<endl;
    for(int j=0; j<m; j++)
        if(mat[row][j]==num)
            return j;
    return -1;
}

bool search(int num, int idx) {
    if(idx==n)
        return num>0;

    for(auto c : nums[idx]) {
        ans.push_back(c);
        if(search(num^c, idx+1))
            return true;
        ans.pop_back();
    }
    return false;
}

int main() {
    cin>>n>>m;
    for(int i=0; i<n; i++) {
        for(int j=0; j<m; j++) {
            cin>>mat[i][j];
            nums[i].insert(mat[i][j]);
        }
    }

    // find combination of nums[i] with xor !=0
    for(auto i : nums[0])  {
        ans.clear();
        ans.push_back(i);
        if(search(i, 1)) {
            cout<<"TAK"<<endl;
            for(uint i=0; i<ans.size(); i++)
                cout<<findNum(i, ans[i])+1<<" ";
            cout<<endl;
            return 0;
        }
    }
    cout<<"NIE"<<endl;
}

