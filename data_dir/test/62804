#include<bits/stdc++.h>
using namespace std;
#define int long long
#define ff first
#define ss second
#define pb push_back
#define pii pair<int,int> 
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

struct point
{
    int x,y,z,i;
    bool operator<(const point& X) const {
        return std::tie(x, y, z) < std::tie(X.x, X.y, X.z);
    }
};

int work2(vector<point> p )
{
    int n = (int)p.size();
    for(int i=0; i+1<n ; i += 2 )
        cout << p[i].i << " " << p[i+1].i << "\n";
    if( (n&1) ) 
        return p.back().i;
    return -1;
}
int work1(vector<point> p )
{
    int n = (int)p.size();
    
    int now = -1;
    for( int i=0,j=0 ; i<n ; i = j )
    {
        while( j < n && p[i].y == p[j].y )
            j++;
        
        int nxt = work2( vector<point> (p.begin() + i , p.begin() + j ) );
        if( nxt != -1 )
        {
            if( now != -1 )
            {
                cout << now << " " << nxt << "\n";
                now = -1;
            }
            else
                now = nxt;
        }
        
    }
    return now;
}
signed main()
{
    fast;
    int n;
    cin >> n;
    vector< point > a(n);
    
    for(int i=0; i<n; i++)
    {
        cin >> a[i].x >> a[i].y >> a[i].z;
        a[i].i = i+1;
    }
    
    sort( a.begin() , a.end() );
   
    // jya sudhi kashi sakay tya sudhi kasho
    int now = -1;
    for( int i=0,j=0 ; i<n ; i = j )
    {
        while( j < n && a[i].x == a[j].x )
            j++;

        int nxt = work1( vector<point> (a.begin() + i , a.begin() + j ) );
        
        if( nxt != -1 )
        {
            if( now != -1 )
            {
                cout << now << " " << nxt << "\n";
                now = -1;
            }
            else
                now = nxt;
        }
        
    }
}
