#include <bits/stdc++.h>
using namespace std;
bool good[26];
string pattern;
int main() {
    ios_base::sync_with_stdio(false);
    string goods;
    cin >> goods;
    memset(good, false, sizeof good);
    for(char c : goods) {
        good[c-'a'] = true;
    }
    cin >> pattern;
    int q;
    cin >> q;
    while(q--) {
        string quer;
        cin >> quer;
        int i = 0;
        bool valid = true;
        for(char c : pattern) {
            if(c == '?') {
                if(i < quer.length() && good[quer[i]-'a']) {
                    i++;
                } else {
                    valid = false;
                    break;
                }
            } else if(c == '*') {
                int missing_chars = quer.length() - pattern.length() + 1;
                valid &= missing_chars >= 0;
                for(int j = 0; j < missing_chars && valid; j++) {
                    valid &= (i+j < quer.length()) && !good[quer[i+j]-'a'];
                }
                i = i + missing_chars;
                if(!valid) {
                    break;
                }
            } else {
                if(i < quer.length() && c == quer[i]) {
                    i++;
                } else {
                    valid = false;
                    break;
                }
            }
        }
        cout << (valid && i == quer.length() ? "YES" : "NO") << endl;
    }
    return 0;
}
