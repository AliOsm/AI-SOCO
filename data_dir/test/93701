#include <bits/stdc++.h>
using namespace std;

const int N = 100005;

int n;
long long a[N], b[N], r[N], sum[N], mx;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> n;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
        sum[i] = sum[i - 1] + a[i];
    }
    for (int i = 0; i < n; ++i) {
        cin >> b[i];
    }
    set<pair<int,int>> s;
    for (int i = n - 1; i >= 0; --i) {
        r[i] = mx;
        int pos = b[i];
        pair<int, int> cur = {pos, pos};
        auto f = s.lower_bound(cur);
        if (f != s.end()) {
            if (f->first == pos + 1) {
                cur = {pos, f->second};
                s.erase(f);
            }
        }
        auto w = s.lower_bound(cur);
        if (w != s.begin()) {
            --w;
            if (w->second == pos - 1) {
                cur = {w->first, cur.second};
                s.erase(w);
            }
        }
        mx = max(mx, sum[cur.second] - sum[cur.first - 1]);
        s.insert(cur);
    }
    for (int i = 0; i < n; ++i) {
        cout << r[i] << '\n';
    }
    return 0;
}
