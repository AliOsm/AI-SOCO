#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef long double ld;

ld epsilon = 0.000'000'000'1;

ld a[1005];
ld b[1005];

int n;
ld m;

bool can(ld fuel){
    fuel -= (fuel+m)/a[0];
    for(int i=1;i<n;i++){
        fuel -= (fuel+m)/a[i];
        fuel -= (fuel+m)/b[i];
    }
    fuel -= (fuel+m)/b[0];
    return fuel > 0.0;
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n >>m;
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    for(int i=0;i<n;i++){
        cin>>b[i];
    }
    if(!can(1'000'000'000)){
        cout << -1;
        return 0;
    }

    ld l = 0.0;
    ld r = 1'000'000'000;

    // try all amounts of fuel
    while(r-l>epsilon){
        ld mid = (r+l)/2.0;
        if(can(mid)){
            r = mid;
        }
        else{
            l = mid;
        }
    }
    cout << std::setprecision(8) <<l << endl;



    return 0;
}
