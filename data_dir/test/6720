#include <stdio.h>
#include <cstring>
#include <math.h>
#include <algorithm>

using namespace std;

const int N = 1000002;

char buf[N], sa[N], sb[N], c;
long long ans = 0, gans, len, a, b, g, z[N][26];
int i, j;

template<typename T>
T gcd(T a, T b)
{
    return a == 0 ? a + b : gcd(b % a, a);
}

int main()
{
    scanf("%I64d %I64d\n", &a, &b);
    gets(buf);
    strcpy(sa, buf);

    gets(buf);
    strcpy(sb, buf);

/*    a = (long long)1e12;
    b = (long long)1e12;
    for(i = 0; i < N-1; i++)
        sa[i] = 'a',
        sb[i] = 'b';
    sb[N-1] = sa[N-1] = '\0';*/
    if(strlen(sa) > strlen(sb))
    {
        swap(sa, sb);
        swap(a, b);
    }

    gans = gcd(a, b);
    a /= gans;
    b /= gans;

    g = gcd(strlen(sa), strlen(sb));
    len = strlen(sb);
    for(i = len - 1; i >= 0; i--)
    {
        z[i][sb[i]-'a']++;
        if(i + g >= len)
            continue;
        for(c = 'a'; c <= 'z'; c++)
            z[i][c-'a'] += z[i + g][c-'a'];
    }
    len = strlen(sa);
    for(i = 0; i < len; i++)
    {
        ans += a;
        ans -= z[i % g][sa[i]-'a'];
    }
    ans *= gans;
    printf("%I64d", ans);
    return 0;
}
