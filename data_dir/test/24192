#include<bits/stdc++.h>

using namespace std;

#define int long long

struct Edg {
    int x, y, w;
};

bool operator < (const Edg &p, const Edg &q) {
    return p.w < q.w;
}

const int N = 200200;

int p[N], sz[N];

int get(int v) {
    if (p[v] == v) {
        return v;
    }
    return p[v] = get(p[v]);
}

void un(int a, int b) {
    a = get(a);
    b = get(b);
    if (a != b) {
        if (sz[a] > sz[b]) {
            swap(a, b);
        }
        p[a] = b;
        sz[b] += sz[a];
    }
}

int a[N];

int32_t main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin >> n >> m;
    int mni = 0;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        if (a[i] < a[mni]) {
            mni = i;
        }
        p[i] = i;
        sz[i] = 1;
    }
    vector<Edg> eds;
    for (int i = 0; i < n; i++) {
        if (i != mni) {
            eds.push_back({i, mni, a[mni] + a[i]});
        }
    }
    for (int i = 0; i < m; i++) {
        int x, y, w;
        cin >> x >> y >> w;
        x--;
        y--;
        w = min(w, a[x] + a[y]);
        eds.push_back({x, y, w});
    }
    sort(eds.begin(), eds.end());
    int ans = 0;
    for (auto &ed : eds) {
        if (get(ed.x) != get(ed.y)) {
            ans += ed.w;
            un(ed.x, ed.y);
        }
    }
    cout << ans;
    return 0;
}
