#include <iostream>
#include <algorithm>
#include <time.h>
#include <stack>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>

using namespace std;

const int N = 100005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int q , n;
long long k;
string f0 = "What are you doing at the end of the world? Are you busy? Will you save us?";
string zibil = "What are you doing while sending ? Are you busy? Will you send ?";
string zibil1 = "What are you doing while sending ";
string zibil2 = "? Are you busy? Will you send ";
long long sz[N];

char rec(int n,long long k){
    if(n == 0){
        if(k > 1ll * (int)f0.size())
            return '.';
        return f0[k - 1];
    }

    if(k <= zibil1.size())return zibil1[k - 1];
    if(k == 1ll * (int)zibil1.size() + 1)return '"';
    k -= 1ll * (int)zibil1.size() + 1;

    if(k <= sz[n - 1])return rec(n - 1 , k);
    k -= sz[n - 1];
    if(k == 1)return '"';
    k--;

    if(k <= (int)zibil2.size())return zibil2[k - 1];
    if(k == 1ll * (int)zibil2.size() + 1)return '"';
    k -= 1ll * (int)zibil2.size() + 1;

    if(k <= sz[n - 1])return rec(n - 1 , k);
    k -= sz[n - 1];
    if(k == 1)return '"';
    if(k == 2)return '?';

    return '.';
}

int main(){
    cin>>q;
    sz[0] = 1ll * (int)f0.size();
    for(int i=1;i<=100000;i++){
        sz[i] = 2ll * sz[i - 1] + 1ll * (int)zibil.size() + 4;
        if(sz[i] > 1ll * inf * inf) sz[i] = 1ll * inf * inf;
    }
    string answ = "";
    while(q--){
        cin>>n>>k;
        answ += rec(n , k);
    }
    cout<<answ<<endl;
	return 0;
}
