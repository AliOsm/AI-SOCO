///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>

#define                           int                         long long
#define                           fi                          first
#define                           si                          second
#define                           mp                          make_pair
#define                           pb                          push_back
#define                           pi                          pair<int,int>
#define                           f(i,l,r)                    for(int i=l;i<=r;i++)
#define                           M                           500009
#define                           clr(x)                      memset(x,0,sizeof(x));
#define                           bug(i)                      cout<<"ekhane ami  "<<i<<endl;

#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);

                                      /* AHASAN KABIR  JFBGDFKGB */

using namespace std;

const int inf=1e18;
const int mod=1e9+7;

struct dat
{
    int b,s,r;
};
int n,ses=0;
map<int,int>id;
dat a[M+10];
bool cmp(dat x,dat y)
{
    if(x.b==y.b)return x.s<y.s;
    else return x.b>y.b;
}
int tre[4*M+2];
void update(int pos,int l,int r,int I,int J,int val)
{
    if(l>J || r<I)return ;
    if(I<=l && J>=r)
    {
        tre[pos]=max(tre[pos],val);
        return ;
    }
    int mid=(l+r)>>1;
    update(2*pos,l,mid,I,J,val);
    update(2*pos+1,mid+1,r,I,J,val);
    tre[pos]=max(tre[2*pos],tre[2*pos+1]);
}
int qry(int pos,int l,int r,int I,int J)
{
    if(l>J || r<I)return 0;
    if(I<=l && J>=r)
    {
       return  tre[pos];
    }
    int mid=(l+r)>>1;
    int op1=qry(2*pos,l,mid,I,J);
    int op2=qry(2*pos+1,mid+1,r,I,J);
    return max(op1,op2);
}
main()
{
  fast
  cin>>n;
  f(i,0,n-1)cin>>a[i].b;
  f(i,0,n-1){cin>>a[i].s;id[a[i].s]=i;}
  f(i,0,n-1)cin>>a[i].r;
  int roll=0;
  for(auto it=id.begin();it!=id.end();it++)
  {
      id[it->fi]=roll++;
  }
  f(i,0,n-1)a[i].s=id[a[i].s];
  sort(a,a+n,cmp);
  for(int i=0;i<n;)
  {
     int cur=i;
     while(cur<n && a[i].b==a[cur].b)
     {
         int v=qry(1,0,M,a[cur].s+1,M);
         if(v>a[cur].r)ses++;
         cur++;
     }
    for(int j=i;j<cur;j++)
     {
         update(1,0,M,a[j].s,a[j].s,a[j].r);
     }
     i=cur;
  }
  cout<<ses<<endl;
    return 0;
}

