#include <vector>
#include <stdio.h>
#include <string.h>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
typedef long long ll;
using namespace std;
int arr[5][10005]={};
vector<vector<ll> > v(1005);
int dp[1005];
ll dfs(ll i)
{
    if(dp[i]!=-1)
        return dp[i];
    ll ret=0;
    for(int h =0;h<v[i].size();h++)
    {
        ret=max(ret,dfs(v[i][h])+1);
    }
    return dp[i]=ret;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("read.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ll n,k,x;
    memset(dp,-1,sizeof dp);
    cin >> n>>k;
    for(int i =0;i<k;i++)
    {
        for(int h=0;h<n;h++)
        {
            cin >>x;
            arr[i][x]=h;
        }
    }
    queue<ll> q;
    for(int i =1;i<=n;i++)
    {
        for(int h=i+1;h<=n;h++)
        {
            bool ok=1;
            for(int r=0;r<k;r++)
            {
                if(arr[r][i]>arr[r][h])
                {
                    ok=0;
                    break;
                }
            }
            if(ok)
            {
                v[i].push_back(h);
            }
            ok=1;
            for(int r=0;r<k;r++)
            {
                if(arr[r][h]>arr[r][i])
                {
                    ok=0;
                    break;
                }
            }
            if(ok)
            {
                v[h].push_back(i);
            }
        }
    }
    ll out=0;
    for(int i =1;i<=n;i++)
    {
        out=max(out,dfs(i)+1);
    }
    cout << out << endl;
    return 0;
}
