#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

int n;
vector<ll> vec;
ll Dp[5005][5005];

ll solve(int start, int End)
{
    if(start > End)
        return 0;

    if(Dp[start][End] != -1)
        return Dp[start][End];

    ll ans = 0;
    ll sub = vec[start];
    for(int i = start; i <= End; i++)
    {
        sub = min(vec[i], sub);
    }
    ans += sub;
    for(int i = start; i <= End; i++)
    {
        vec[i] -= sub;
    }
    int s = start;
    for(int i = start; i <= End; i++)
    {
        if(!vec[i])
        {
            ans += solve(s, i - 1);
            for(int j = i; j <= End; j++)
            {
                i = j;
                s = j;
                if(vec[i])
                {
                    break;
                }
            }
        }
    }
    if(vec[s] != 0)
        ans += solve(s, End);
    for(int i = start; i <= End; i++)
        vec[i] += sub;
    //cout << "start: " << start << " End: " << End << " case1: " << case1 << " case2: " << case2 << '\n';
    return min((ll)(End - start + 1), ans);
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n;
    vec.resize(n);
    memset(Dp, -1, sizeof(Dp));
    for(auto &x: vec)
    {
        cin >> x;
    }
    cout << solve(0, n - 1);
    return 0;
}
