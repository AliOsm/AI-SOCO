#include <bits/stdc++.h> 
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define int long long
#define ld double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define sz(x) ((long long)x.size())
#define all(x) (x).begin(), (x).end()
#define oset(T) tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update>
auto clk=clock();
const int MOD =1e9+7;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1LL;}return res%p;}
const int N=2*1e5+2,M=20;

void solve()
{
	int n;
	cin>>n;
	int a[n],b[n];
	for(int i=0;i<n;i++) cin>>a[i],b[i]=a[i];
	bool ok=true;
	for(int i=1;i<n;i++)
	{
		if(a[i]<a[i-1])
		{
			ok=false;
		}
	}
	if(ok)
	{
		cout<<0<<"\n";
		return;
	}
	int s=0;
	for(int i=1;i<60;i++)
	{
		s+=(1LL<<(i-1));
		a[n-1]=a[n-1]+s;
		bool ok=true;
		for(int j=n-2;j>=0;j--)
		{
			if(a[j]>a[j+1])
			{
				ok=false;
				break;
			}
			int diff=a[j+1]-a[j];
			diff=min(diff,s);
			a[j]=a[j]+diff;
		}
		if(ok)
		{
			cout<<i<<"\n";
			return;
		}
		for(int i=0;i<n;i++) a[i]=b[i];
	}
}

int32_t main(){
	ios_base::sync_with_stdio(false);cin.tie(NULL);
	#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	#endif
	cout<<fixed<<setprecision(8);
	int t=1;
	cin>>t;
	while(t--)
		solve();
	#ifdef LOCAL
	cout<<"\n\n\n"<<"Time elapsed: "<<(double)(clock()-clk)/CLOCKS_PER_SEC<<endl;
	#endif
}  