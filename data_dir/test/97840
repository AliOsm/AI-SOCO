/* @nazarbek.altybay */

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <queue>
#include <unordered_set>

#define pii pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

typedef long long ll;
typedef long double ld;

const double EPS = 1e-9;
const double PI = acos(-1);

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 1e6 + 7;

int n;
double a[18][18];

double prob[1 << 18];

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif

  cin >> n;
  for (int i = 0; i < n; i++)
    for (int j = 0; j < n; j++)
      cin >> a[i][j];

  prob[(1 << n) - 1] = 1.0;
  for (int mask = (1 << n) - 1; mask > 0; mask--) {
    int f = __builtin_popcount(mask);
    int pairs = f * (f - 1) / 2;
    double meet = 1.0 / pairs;
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        if ((mask >> i) & 1) {
          if ((mask >> j) & 1) {
            prob[mask ^ (1 << j)] += prob[mask] * meet * a[i][j];
            prob[mask ^ (1 << i)] += prob[mask] * meet * a[j][i];
          }
        }
      }
    }
  }
  for (int i = 0; i < n; i++) {
    cout << fixed << setprecision(6) << prob[1 << i] << ' ';
  }
  
  return 0;
}