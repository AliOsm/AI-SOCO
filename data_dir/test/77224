#include<bits/stdc++.h>
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
using namespace std;
const ll mod=1e9+7;
const int N=1e6+4;
const double pi=3.14159265359;
ll dp[N];
int main()      
{
    int n;
    scn(n);          //sorting in descending order is important
                //because the update by current value to a lower index
                // will effect the upper indexes, which they should not;
    dp[0]=1;    //Consider you update 1 before 2 for any ith value(a[i]%2==0)
    rep(i,0,n)  //So when you update 2 you will add it with the new value of 1
    {           //which has the contribution of a[i],but for calculation of 2
        int temp;//you should not add the contribution of a[i] in previous values 
        scn(temp);// ,here, 1 is the previous value.
        vector<int> v;
        for(int j=1;j*j<=temp;j++)
        if(temp%j==0)
        {
            int val=temp/j;
            v.pb(j);          
            if(j!=val)      
            v.pb(val);      
        }
        sort(v.begin(),v.end(),greater<int>());
        for(auto it:v)
        {
            dp[it]=(dp[it]+dp[it-1])%mod;
        }
    }
    ll ans=0;
    rep(i,1,n+1)
    ans=(ans+dp[i])%mod;
    lpri(ans);
    return 0;   
}