#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define rep(i,a,n) for (int i=(a);i<(n);i++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int,int> pii;

const int inf = 2009000999;
const double eps = 1e-8;
const int maxn = 2e5 + 500;
const int maxk = 51;
const int base = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 7;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

pair<pii, pii> cmax[maxn], dmax[maxn];
int a[maxn], m[maxn], pp[maxn];

int main(){
    srand(time(0));
    fast_io;
    int n;
    cin >> n;
    int c, d;
    cin >> c >> d;
    rep(i, 0, n){
        int b, p;
        cin >> p >> b;
        char t;
        cin >> t;
        pp[i] = p;
        if(t == 'C'){
            m[i] = b;
        }
        else{
            a[i] = b;
        }
        if(t == 'C')
            if(cmax[b].fr.fr != 0){
                if(cmax[b].fr.fr < p){
                    cmax[b].sc = cmax[b].fr;
                    cmax[b].fr = mp(p, b);
                }
                else if(cmax[b].sc.fr < p)
                    cmax[b].sc = mp(p, b);
            }
            else{
                cmax[b].fr = mp(p, b);
            }
        else
            if(dmax[b].fr.fr != 0){
                if(dmax[b].fr.fr < p){
                    dmax[b].sc = dmax[b].fr;
                    dmax[b].fr = mp(p, b);
                }
                else if(dmax[b].sc.fr < p)
                    dmax[b].sc = mp(p, b);
            }
            else
                dmax[b].fr = mp(p, b);
    }
    for(int i = 2; i < 100001; i++){
        int b = cmax[i - 1].fr.sc, p = cmax[i - 1].fr.fr;
        if(cmax[i].fr.fr != 0){
            if(cmax[i].fr.fr < p){
                cmax[i].sc = cmax[i].fr;
                cmax[i].fr = mp(p, b);
            }
            else if(cmax[i].sc.fr < p)
                cmax[i].sc = mp(p, b);
        }
        else{
            cmax[i].fr = mp(p, b);
        }
        b = dmax[i - 1].fr.sc, p = dmax[i - 1].fr.fr;
        if(dmax[i].fr.fr != 0){
            if(dmax[i].fr.fr < p){
                dmax[i].sc = dmax[i].fr;
                dmax[i].fr = mp(p, b);
            }
            else if(dmax[i].sc.fr < p)
                dmax[i].sc = mp(p, b);
        }
        else
            dmax[i].fr = mp(p, b);
        b = cmax[i - 1].sc.sc, p = cmax[i - 1].sc.fr;
        if(cmax[i].fr.fr != 0){
            if(cmax[i].fr.fr < p){
                cmax[i].sc = cmax[i].fr;
                cmax[i].fr = mp(p, b);
            }
            else if(cmax[i].sc.fr < p)
                cmax[i].sc = mp(p, b);
        }
        else{
            cmax[i].fr = mp(p, b);
        }
        b = dmax[i - 1].sc.sc, p = dmax[i - 1].sc.fr;
        if(dmax[i].fr.fr != 0){
            if(dmax[i].fr.fr < p){
                dmax[i].sc = dmax[i].fr;
                dmax[i].fr = mp(p, b);
            }
            else if(dmax[i].sc.fr < p)
                dmax[i].sc = mp(p, b);
        }
        else
            dmax[i].fr = mp(p, b);
    }
    int ans = 0;
    for(int i = 0; i < n; i++){
        c -= m[i];
        d -= a[i];
        if(c >= 0 && d >= 0){
            if(m[i] > 0){
                if(dmax[d].fr.fr > 0)
                    ans = max(ans, pp[i] + dmax[d].fr.fr);
                if(cmax[c].fr.fr == pp[i] && cmax[c].fr.sc == m[i] && cmax[c].sc.fr > 0)
                    ans = max(ans, pp[i] + cmax[c].sc.fr);
                else if(!(cmax[c].fr.fr == pp[i] && cmax[c].fr.sc == m[i]) && cmax[c].fr.fr > 0)
                    ans = max(ans, pp[i] + cmax[c].fr.fr);
            }
            else{
                if(cmax[c].fr.fr > 0)
                    ans = max(ans, pp[i] + cmax[c].fr.fr);
                if(dmax[d].fr.fr == pp[i] && dmax[d].fr.sc == m[i] && dmax[d].sc.fr > 0)
                    ans = max(ans, pp[i] + dmax[d].sc.fr);
                else if(!(dmax[d].fr.fr == pp[i] && dmax[d].fr.sc == a[i]) && dmax[d].fr.fr > 0)
                    ans = max(ans, pp[i] + dmax[d].fr.fr);
            }
        }
        c += m[i];
        d += a[i];
    }

    cout << ans;
    return 0;
}
