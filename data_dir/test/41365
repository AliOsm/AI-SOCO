#include <bits/stdc++.h>
 
using namespace std;
const int MAXN = 2 * 100100;
int n, k;
vector<tuple<int, int, char>> v;
char s[3 * MAXN], c, nc;

int main()
{
	scanf("%d %d %s", &n, &k, s);
	strncpy(s + n, s, n), strncpy(s + n + n, s, n);
	for(int i = 0, aux; i < 3 * n; ++i)
		if(s[i] == s[i + 1])
		{
			aux = i;
			while(s[i + 1] == s[i])
				i++;
			v.emplace_back(aux, i, s[aux]);
		}
	if(v.empty() && k % 2)
	{
		for(int i = 0; i < n; ++i)
			printf("%c", 'B' + 'W' - s[i]);
		exit(0);
	}
	for(int i = 0, beg, end, nbeg, nend, x; i < (int)v.size() - 1; ++i)
	{
		tie(beg, end, c) = v[i], tie(nbeg, nend, nc) = v[i + 1];
		x = min(k, (nbeg - end) / 2);
		for(int i = 1; i <= x; ++i)
			s[end + i] = c, s[nbeg - i] = nc;
		for(int i = end + x + 1; i < nbeg - x; ++i)
			s[i] = 'B' + 'W' - s[i - 1];
	}
	s[2 * n] = 0;
	printf("%s\n", s + n);
}