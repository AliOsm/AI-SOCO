#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
void sprint(string s) {for (int i = 0; i < (int)s.size(); ++i)	printf("%c",s[i]); printf("\n");}
ll mod=1e9+7;
ll power(ll a, ll b){                       
    ll x = 1, y = a;
    while (b > 0){
        if (b%2){
            x = (x*y)%mod;
        }
        y = (y*y)%mod;
        b /= 2;
    }
    return x%mod;
}   
int main(){
	ll n,m;
	cin>>n>>m;
	ll p[200001];
	p[0]=1;
	for (int i = 1; i < 200001; ++i)
	{
		p[i]=(p[i-1]*m)%mod;
	}
	ll a[n],b[n];
	ll a_emp=0;
	for (int i = 0; i < n; ++i)
	{
		scanf("%lld",&a[i]);
		if(a[i]==0) a_emp++;
	}
	for (int i = 0; i < n; ++i)
	{
		scanf("%lld",&b[i]);
		if(b[i]==0) a_emp++;
	}
	ll b_emp=a_emp;
	ll num=0,prev=1,den=power(p[a_emp],mod-2);
	for (int i = 0; i < n; ++i)
	{
		if(a[i]!=0 and b[i]!=0){
			if(a[i]<b[i]) break;
			else if(a[i]>b[i]){
				num=(num+ (prev*p[a_emp])%mod)%mod;
				break;
			}
			continue;
		}
		if(b[i]!=0){
			a_emp--;
			ll temp=((m-b[i])*p[a_emp])%mod;
			num=(num + prev*temp)%mod;
		}
		else if(a[i]!=0){
			a_emp--;
			ll temp=((a[i]-1)*p[a_emp])%mod;
			num=(num + prev*temp)%mod;
		}
		else{
			a_emp-=2;
			ll temp=(m*(m-1))/2;
			temp=temp%mod;
			temp=(temp*p[a_emp])%mod;
			num=(num + prev*temp)%mod;
			prev=(prev*m)%mod;
		}
	}
	if(b_emp==0){
		if(num==0){
			printf("0\n");
		}
		else {
			printf("1\n");
		}
		return 0;
	}
	ll ans= (num*den)%mod;
	cout<<ans<<endl;
	return 0;
}