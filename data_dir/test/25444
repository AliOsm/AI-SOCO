/*** Author: Dhruv Rastogi ***/
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<ll,ll>
#define pb push_back
#define rep(i,a,b) for(ll i=a;i<b;++i)
#define repd(i,a,b) for(ll i=a;i>=b;--i)
#define mp make_pair
#define hell 998244353
#define endl '\n'
#define vvll vector<vector<ll> >
#define vll vector<ll>
#define mint map<int,int> 
#define int long long
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>

int l,r,k;
pll dp[20][2][1024][2];
bool used[20][2][1024][2];
int pow10[20];
int sb(int num){
	int ans=0;
	while(num) num&=num-1,++ans;
	return ans;
}

pll rec(string s,int ind,bool sm,int flag,bool ld){
	if(ind==sz(s)){
		if(sb(flag)<=k)
			return mp(0LL,1LL);
		else return mp(0LL,0LL);
	}
	if(used[ind][sm][flag][ld])
		return dp[ind][sm][flag][ld];
	used[ind][sm][flag][ld]=true;
	pll ret=mp(0LL,0LL);
	ll mx=(sm?9:s[ind]-'0');
	rep(i,0,mx+1){
		pll aage;
		if(!ld) aage=rec(s,ind+1,sm||(i!=mx),(i>0?((1LL)<<i):0LL),(i>0?1LL:0LL));
		else if(!sm){
			if(i==mx){
				aage=rec(s,ind+1,0LL,flag|((1LL)<<i),1LL);
			}
			else{
				aage=rec(s,ind+1,1LL,flag|((1LL)<<i),1LL);
			}
		}
		else aage=rec(s,ind+1,1LL,flag|((1LL)<<i),1LL);
		ret.first+=((pow10[sz(s)-1-ind]*i)%hell)*aage.second+aage.first;
		ret.first%=hell;
		ret.second+=aage.second;
		ret.second%=hell;
	}
	return dp[ind][sm][flag][ld]=ret;
}
void solve(){  
 	cin>>l>>r>>k;
 	pow10[0]=1;
 	rep(i,1,20){
 		pow10[i]=(pow10[i-1]*10)%hell;
 	}
 	string rs=to_string(r);
 	string ls=to_string(l-1);
 	// cout<<rs<<' '<<ls<<endl;
 	int ans1=rec(rs,0LL,0LL,0LL,0LL).first;
 	memset(used,0,sizeof used);
 	int ans2=rec(ls,0LL,0LL,0LL,0LL).first;
 	if(ans1<ans2){
 		cout<<ans1-ans2+hell<<endl;
 	}
 	else cout<<ans1-ans2<<endl;
 	
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}