#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

using namespace std;

//#define int long long
#define ll long long
//#define double long double
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()

const int INF = 2e9;
const int MB = 20;
const int MOD = 1e9 + 7;

void solve() {
    int n;
    cin >> n;
    int len = 1;
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }

    set<pair<int, int>> st;
    for (int i = 0; i < n; i++) {
        st.insert({ a[i], i });
    }

    int mx = *max_element(all(a));

    for(int i = 0;i<n;i++){
        auto p = *st.begin();
        st.erase(p);
        if (p.first == mx) break;
        if (p.second == n - 1 || a[p.second] != a[p.second + 1]) {
            cout << "NO";
            return;
        }
        st.erase({ a[p.second + 1], p.second + 1 });
        int mn = max(p.second ? a[p.second - 1] : 0, p.second + 2 < n ? a[p.second + 2] : 0);
        if (mn == a[p.second] || !mn) mn = mx;
        assert(a[p.second] != mn);
        a[p.second] = a[p.second + 1] = mn;
        st.insert({ mn, p.second });
        st.insert({ mn, p.second + 1 });
    }
    cout << "YES";
}


signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    //int t;
    //cin >> t;
    int t = 1;
    //srand(time(0));
    while (t--) solve();
}