#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>
#include <random>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2e9;
ll LINF = (ll)4e18;
using namespace std;
//ll mod = 1e9 + 7;
#define M_PI       3.14159265358979323846   // pi

struct juice {
	ll c;
	int t;
};

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("domino-covering-1.in", "r", stdin);
	//freopen("domino-covering-1.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	vector<juice>tmp(n);

	for (int i = 0; i < n; i++) {
		cin >> tmp[i].c;
		string s;
		cin >> s;
		for (auto &c : s) {
			tmp[i].t |= 1 << (c - 'A');
		}
	}
	// a b c ab ac bc abc
	vector<ll>have(8, 2e9);

	for (int i = 0; i < n; i++) {
		for (int j = 1; j <= 7; j++) {
			if ((tmp[i].t & j) != j) continue;
			have[j] = min(have[j], tmp[i].c);
		}
	}
	ll ans = min(have[7], have[1] + have[2] + have[4]);
	for (int i = 1; i <= 7; i++) {
		ans = min(ans, have[i] + have[7 ^ i]);
	}

	if (ans >= 2e9) ans = -1;
	cout << ans;
	return 0;
}