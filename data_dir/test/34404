/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)

class DConcatenatedMultiples {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, k; in >> n >> k;
		unordered_map<int, int> Map[11];
        int arr[n], len[n];
        f(i, 11){
            Map[i].reserve(1<<15);
            Map[i].max_load_factor(0.25);
        }
        f(i, n){
            in >> arr[i];
            len[i] = to_string(arr[i]).length();
            Map[len[i]][arr[i]%k]++;
        }
        int res = 0;
        f(i, n){
            int cur = arr[i] % k;
            rep(j, 1, 10){
                cur = (cur * 10) % k;
                int req = (k - cur)%k;
                res += Map[j][req];
                if(len[i] == j and req == (arr[i]%k)) --res;
            }
        }
        out << res;
	}
};


int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	DConcatenatedMultiples solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
