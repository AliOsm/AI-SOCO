#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1e9+7;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result =(result * base) % modulus;
		exponent >>= 1;
		base =(base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

int n;
vector<pii> useless;
vi parent(1234);
set<int> leaders;

inline void init()
{
	for(int i=1; i<1001; i++)
		parent[i] = i;
}

int find(int x)
{
	if(parent[x] == x)
		return x;
	parent[x] = find(parent[x]);
	return parent[x];
}

bool unite(int x, int y)
{
	x = find(x);
	y = find(y);
	if(x == y)
		return true;
	parent[x] = y;
	return false;
}

int main()
{
	ssync;
	init();
	cin >> n;
	int x, y;
	for(int i=1; i<n; i++)
	{
		cin >> x >> y;
		if(unite(x, y))
			useless.pb({x, y});
	}
	cout << useless.size() << "\n";
	for(int i=1; i<=n; i++)
		leaders.insert(find(i));
	auto it = leaders.begin();	
	for(int i=0; i<useless.size(); i++)
	{
		cout << useless[i].F << " " << useless[i].S << " " << *it << " ";
		cout << *(++it) << "\n";
	}
	return 0;
}
