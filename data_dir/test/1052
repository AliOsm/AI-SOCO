#include <bits/stdc++.h>
using namespace std;

#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()

using ll = long long;
using ld = long double;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    //this problem is bad... and the author should feel bad...
    ll n, m, k;
    cin >> n >> m >> k;
    vector<vector<ll>> rows(n), cols(m);
    for (ll i = 0; i < k; i++) {
        ll x, y;
        cin >> x >> y;
        x--;
        y--;
        rows[x].push_back(y);
        cols[y].push_back(x);
    }
    ll seen = 1;
    for (auto& v : rows) sort(all(v));
    for (auto& v : cols) sort(all(v));
    ll l = 0;
    ll r = m - 1;
    ll u = 0;
    ll d = n - 1;

    ll x = 0;
    ll y = 0;
    ll dir = 0;
    for (ll i = 0; l <= r && u <= d; i++) {
        if (dir == 0) {
            ll nx = r;
            auto it = upper_bound(all(rows[y]), x);
            if (it != rows[y].end()) nx = min(nx, *it - 1);
            if (nx == x) {
                if (i != 0) break;
                dir++;
                continue;
            }
            u = max(u, y + 1);
            seen += abs(x - nx);
            x = nx;
        } else if (dir == 1) {
            ll ny = d;
            auto it = upper_bound(all(cols[x]), y);
            if (it != cols[x].end()) ny = min(ny, *it - 1);
            if (ny == y) break;
            r = min(r, x - 1);
            seen += abs(ny - y);
            y = ny;
        } else if (dir == 2) {
            ll nx = l;
            auto it = upper_bound(all(rows[y]), x);
            if (it != rows[y].begin()) nx = max(nx, *prev(it) + 1);
            if (nx == x) break;
            d = min(d, y - 1);
            seen += abs(x - nx);
            x = nx;
        } else {
            ll ny = u;
            auto it = upper_bound(all(cols[x]), y);
            if (it != cols[x].begin()) ny = max(ny, *prev(it) + 1);
            if (ny == y) break;
            l = max(l, x + 1);
            seen += abs(y - ny);
            y = ny;
        }
        dir++;
        dir %= 4;
    }
    cout << (seen == n*m-k ? "Yes" : "No") << endl;
}
