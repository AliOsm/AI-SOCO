#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <algorithm>
#define pb push_back
using namespace std;
const int maxn=200010;
int n,k,ans[maxn],st[maxn<<1],nt[maxn<<1],to[maxn<<1],topt,ord[maxn<<1];
struct da{int de,id;}a[maxn];
bool f[maxn],bad[maxn];
bool cmp(da aa,da bb){return aa.de>bb.de;}
void add(int x,int y,int z)
{to[++topt]=y; nt[topt]=st[x]; st[x]=topt; ord[topt]=z;}
void dfs(int x,int col)
{
	f[x]=1; int p=st[x];
	if (bad[x])
	{
		int now=col; if (!now) now++;
		while (p)
		{
			if (!f[to[p]])
			{
				ans[ord[p]]=now;
				dfs(to[p],now);
			}
			p=nt[p];
		}
	}
	else
	{
		int now=1;
		while (p)
		{
			if (!f[to[p]])
			{
				if (now==col) now++;
				ans[ord[p]]=now;
				dfs(to[p],now); now++;
			}
			p=nt[p];
		}
	}
}
int main()
{
	scanf("%d%d",&n,&k); for (int i=1;i<=n;i++) a[i].id=i;
	for (int i=1;i<n;i++)
	{
		int xx,yy; scanf("%d%d",&xx,&yy);
		a[xx].de++; a[yy].de++; add(xx,yy,i); add(yy,xx,i);
	}
	sort(a+1,a+n+1,cmp); printf("%d\n",a[k+1].de);
	for (int i=1;i<=k;i++) bad[a[i].id]=1;
	dfs(1,0); for (int i=1;i<n;i++) printf("%d ",ans[i]?ans[i]:1);
return 0;
}