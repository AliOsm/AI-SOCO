//void _(){
//    int n;
//    string s;
//    cin >> n >> s;
//    char last = -1;
//    int keep = 0;
//    string ans;
//    for(char c : s)
//        if(last == -1)
//            last = c;
//        else{
//            if(last == c)
//                continue;
//            ans.pb(last);
//            ans.pb(c);
//            last = -1;
//            keep += 2;
//        }
//    print_n n-keep,ans;
//
//}
//
#include <iomanip>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print_n _print("\n"),
void _(){
    int n;
    string s;
    cin >> n >> s;
    char last = -1;
    int keep = 0;
    string ans;
    for(char c : s)
        if(last == -1)
            last = c;
        else{
            if(last == c)
                continue;
            ans.pb(last);
            ans.pb(c);
            last = -1;
            keep += 2;
        }
    print_n n-keep,ans;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
