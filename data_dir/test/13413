#include<bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; ++i )
#define clr( t , val ) memset( t , val , sizeof( t ) )

#define pb push_back
#define all( v ) v.begin(),v.end()
#define SZ( v ) (int)v.size()

#define mp make_pair
#define fi first
#define se second

#define N 100000

typedef long long ll;
typedef vector< int > vi;
typedef vector< vi > vvi;

vi E[ N + 5 ];
int pa[ N + 5 ] , vis[ N + 5 ];
void dfs( int u , int p = -1 ){
    vis[ u ] = 1;
    REP( i , SZ( E[ u ] ) ){
        int v = E[ u ][ i ];
        if( v != p && !vis[ v ] ){
            pa[ v ] = u;
            dfs( v , u );
        }
    }
}
int val[ N + 5 ];
vi G[ N + 5 ];
vi ans;
void dfs2( int u , int p = -1 ){
    vis[ u ] = 1;
    REP( i , SZ( G[ u ] ) ){
        int v = G[ u ][ i ];
        if( v != p && !vis[ v ] ){
            if( val[ v ] != val[ u ] ) ans.pb( v );
            dfs2( v );
        }
    }
}
int main(){
    int n , u , v ;
    while( sc( n ) == 1 ){
        REP( i , n ) E[ i ].clear() , G[ i ].clear();
        REP( i , n - 1 ){
            sc( u ) , sc( v );
            u -- , v --;
            E[ u ].pb( v );
            E[ v ].pb( u );
        }
        vi in( n ) , out( n );
        REP( i , n ) sc( in[ i ] );
        REP( i , n ) sc( out[ i ] );
        REP( i , n ) val[ i ] = in[ i ] ^ out[ i ];
        pa[ 0 ] = -1;
        clr( vis , 0 );
        dfs( 0 );
        vi ind( n );
        REP( i , n ){
            int pat = pa[ i ];
            if( pat == -1 ) continue;
            pat = pa[ pat ];
            if( pat == -1 ) continue;
            G[ pat ].pb( i );
            ind[ i ] ++;
        }
        clr( vis , 0 );
        ans.clear();
        REP( i , n ) 
            if( !ind[ i ] ) {
                if( val[ i ] ) ans.pb( i );
                dfs2( i );
            }
        int nv = SZ( ans );
        printf( "%d\n" , nv );
        REP( i , nv ) printf( "%d\n" , ans[ i ] + 1 );
    }
}