#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define ii pair<ll,ll>
#define mp make_pair

using namespace std;
ll const N =(ll) 3e5 + 10;
ll OO = (ll)1e18;
ll a[4][N];
vector<ll> G[N];
vector<ll> v;
ll c[N];
void dfs(ll u,ll p = -1){
    v.push_back(u);
    for(ll v:G[u])if(v!=p)dfs(v,u);
}
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cin.exceptions(cin.failbit);
#ifdef LOCAL
    freopen("in.in","r",stdin);
#endif
    ll n;
    cin >> n ;
    for(ll i=1;i<=3;i++)for(ll j=1;j<=n;j++)cin >> a[i][j];
    ll x = -1;
    for(ll i =0;i+1<n;i++){
        ll a,b;
        cin >> a >> b ;
        G[a].push_back(b);
        G[b].push_back(a);
        if(G[a].size() > 2 || G[b].size() > 2)return cout << -1,0;
        if(G[a].size() == 1)x = a;
        if(G[b].size() == 1)x = b;
    }
    for(int i=1;i<=n;i++)if(G[i].size()==1)x=i;
    dfs(x);
    ll ans=OO;
//    for(int x:v)cout << x << " " ;
//    cout << endl;
    pair<ll,ll> be={-1,-1};
    for(ll i=1;i<=3;i++){
        for(ll j=1;j<=3;j++){
            if(i!=j){
                c[v[0]]=i;
                c[v[1]]=j;
                for(ll k=2;k<v.size();k++){
                    for(ll d=1;d<=3;d++){
                        if(d != c[v[k - 1]] && d != c[v[k - 2]]){
                            c[v[k]] = d;
                        }
                    }
                }
                ll cur= 0;
                for (ll k : v) {
                    cur+=a[c[k]][k];
                }
//                cout << i<< " "<< j <<" " <<  cur << endl;
                if(cur < ans) {
                    be={i,j};
                    ans = cur;
                }
            }
        }
    }
    cout << ans << endl;
    c[v[0]]=be.fr;
    c[v[1]]=be.sc;
    for(ll k=2;k<v.size();k++){
        for(ll d=1;d<=3;d++){
            if(d!=c[v[k-1]] && d!=c[v[k-2]]){
                c[v[k]] = d;
            }
        }
    }
    for(ll i=1;i<=n;i++)cout << c[i]  << " ";
    cout << endl;
}
