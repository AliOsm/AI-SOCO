#include <bits/stdc++.h>
#define endl '\n'
#define debug(X) cout << #X << " = " << X << endl

using namespace std;

const int MN = 5010;

int from[MN], to[MN], color[MN];
int cnt, nComps, compOf[MN];
int low[MN], num[MN], vis[MN];
vector<int> g[MN];
stack<int> st;

void scc(int u) {
	low[u] = num[u] = cnt++;
	st.push(u);
	vis[u] = 1;
	for (int e : g[u]) {
		int v = to[e];
		if (num[v] == -1)
			scc(v);
		if (vis[v])
			low[u] = min(low[u], low[v]);
	}
	if (low[u] == num[u]) {
		while (true) {
			int v = st.top(); st.pop();
			vis[v] = 0;
			compOf[v] = nComps;
			if (u == v) break;
		}
		nComps++;
	}
}

void dfs(int u) {
	vis[u] = 1;
	for (int e : g[u]) {
		int v = to[e];
		if (compOf[u] == compOf[v]) {
			color[e] = (from[e] > to[e]);
			if (!vis[v]) dfs(v);
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	#ifdef UTP
	freopen("input.txt", "r", stdin);
	#endif
	int n, m; cin >> n >> m;
	for (int i = 0; i < m; i++) {
		cin >> from[i] >> to[i];
		from[i]--; to[i]--;
		g[from[i]].push_back(i);
	}
	memset(num, -1, sizeof num);
	for (int i = 0; i < n; i++) if (num[i] == -1)
		scc(i);
	if (nComps == n) {
		cout << 1 << endl;
		for (int i = 0; i < m; i++) cout << 1 << " ";
		cout << endl;
		return 0;
	}
	memset(vis, 0, sizeof vis);
	for (int i = 0; i < n; i++) if (!vis[i])
		dfs(i);
	cout << 2 << endl;
	for (int i = 0; i < m; i++)
		cout << color[i] + 1 << " ";
	cout << endl;
	return 0;
}
