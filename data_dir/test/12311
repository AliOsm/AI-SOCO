#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll mod = 1e9+7;
const int N = 200200;
int to[N] , n ;
vector<int>adj[N];
bool vis[N],used[N],in[N];

int dfs(int u){
vis[u]=1;
int ret=1;
for(auto v:adj[u])
    if( !vis[v] )
        ret+=dfs(v);

return ret;
}

int main(){

memset(to,-1,sizeof to);

scanf("%d",&n);

for(int i=0;i<n;i++){
    int x,y;
    scanf("%d %d",&x,&y);
    to[x]=y;
    adj[x].push_back(y);
    adj[y].push_back(x);
    in[x]=in[y]=1;
}

ll ans=1;
for(int i=1;i<N;i++)
if( in[i] && !vis[i] ){

    int sz = dfs(i);

    int cur=i;
    while( !used[cur] && cur!=-1 ){
        used[cur]=1;
        cur=to[cur];
    }

    if( cur == -1 ){// no cycle

        ans = ans*sz%mod;

    }else{// cycle

        if( cur == to[cur] ){// size=1

            ans*=1ll;

        }else{// size >1

            ans*=2ll;
            ans%=mod;
        }

    }

}
printf("%lld\n",ans);

return 0;
}
