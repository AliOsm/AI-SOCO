#include <bits/stdc++.h>
#define int long long
#define inf 1e18
using namespace std;
const int N = 112345;
const int mod = 1e9 + 7;
int read()
{
    int x;
    scanf("%I64d", &x);
    return x;
}
int getrand()
{
    srand(time(0));
    int x = rand();
    while(x -- > 0)
        rand();
    return rand() % 732 + 1;
}
int a[N];
int sz[N];
int sum[N];
int cnt[N];
vector <int> h;
int ind[N];
vector <int> v[N];
vector <int> vcnt[N];
int used[N];
main()
{
    int n, m, i, j, x, y, k;
    n = read();
    m = read();
    k = read();
    int t = sqrt(n);
    for(i = 1; i <= n; i ++) a[i] = read();
    for(i = 1; i <= m; i ++)
    {
        x = read();
        sz[i] = x;
        if(t <= x)
        {
            ind[i] = h.size();
            h.push_back(i);
        }
        while(x -- > 0)
        {
            y = read();
            sum[i] += a[y];
            v[i].push_back(y);
        }
        sort(v[i].begin(), v[i].end());
    }
    for(i = 0; i < h.size(); i ++)
    {
        for(j = 1; j <= n; j ++)
            used[j] = 0;
        for(j = 0; j < v[h[i]].size(); j ++)
            used[v[h[i]][j]] = 1;
        vcnt[i].push_back(0);
        for(j = 1; j <= m; j ++)
        {
            int s = 0;
            for(int c = 0; c < v[j].size(); c ++)
            {
                int to = v[j][c];
                s += used[to];
            }
            vcnt[i].push_back(s);
        }
    }
    char w;
    for(i = 1; i <= k; i ++)
    {
        cin >> w;
        if(w == '?')
        {
            x = read();
            int ans = 0;
            if(v[x].size() < t)
            {
                for(j = 0; j < v[x].size(); j ++)
                {
                    int to = v[x][j];
                    ans += a[to];
                }
                for(j = 0; j < h.size(); j ++)
                {
                    int id = h[j];
                    ans += cnt[h[j]] * vcnt[j][x];
                }
            }
            else
            {
                ans = sum[x];
                for(j = 0; j < h.size(); j ++)
                {
                    ans += cnt[h[j]] * vcnt[j][x];
                }
            }
            printf("%I64d\n", ans);

        }
        else
        {
            x = read();
            y = read();
            if(v[x].size() < t)
            {
                for(j = 0; j < v[x].size(); j ++)
                {
                    int to = v[x][j];
                    a[to] += y;
                }
                for(j = 0; j < h.size(); j ++)
                {
                    int id = h[j];
                    sum[id] += y * vcnt[j][x];
                }
            }
            else
            {
                cnt[x] += y;
            }
        }
    }
}

