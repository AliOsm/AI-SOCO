#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(5e2+5)
ll dis[N][N];
vector<pair<pii,int> > edges;
int InEd[N][N];
void solve(){
    int n,m;
    cin>>n>>m;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            if(i!=j)
                dis[i][j]=1e15;
        }
    }
    for(int i=0;i<m;i++){
        int x,y,l;
        cin>>x>>y>>l;
        dis[x][y]=l;
        dis[y][x]=l;
        edges.pb(mp(mp(x,y),l));
    }
    for(int k=1;k<=n;k++){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                if(dis[i][j]>dis[i][k]+dis[k][j]){
                    dis[i][j]=dis[i][k]+dis[k][j];
                }
            }
        }
    }
    for(int i=0;i<edges.size();i++){
        for(int j=1;j<=n;j++){
            if(dis[j][edges[i].fi.fi]+edges[i].se==dis[j][edges[i].fi.se]){
                InEd[j][edges[i].fi.se]++;
            }
            if(dis[j][edges[i].fi.se]+edges[i].se==dis[j][edges[i].fi.fi]){
                InEd[j][edges[i].fi.fi]++;
            }
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=i+1;j<=n;j++){
            int ans=0;
            for(int k=1;k<=n;k++){
                if(dis[i][k]+dis[k][j]==dis[i][j]){
                   ans+=InEd[i][k];
                }
            }
            cout<<ans<<" ";
        }
    }

}
int main(){
   //ios_base::sync_with_stdio(false);
   int t=1;
   //cin>>t;
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
