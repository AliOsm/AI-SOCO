//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));


int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("out.txt", "w", stdout);
//    cin.tie(0);
//    cout << fixed << setprecision(20);
    ios_base::sync_with_stdio(false);
    cin.tie(0);


    int n, k;
    cin >> n >> k;
    int cntf = k;
    set<pair<long long,int>> qu;
    vector<long long> res(n);

    for (int i = 0; i < n; ++i) {
        int s, m;
        cin >> s >> m;
        while (!qu.empty() && qu.begin()->first < s) {
            res[qu.begin()->second] = qu.begin()->first;
            qu.erase(qu.begin());
            ++cntf;
        }
        if (cntf > 0) {
            qu.insert({s + m, i});
            --cntf;
        } else {
            long long t = qu.begin()->first;
            res[qu.begin()->second] = qu.begin()->first;
            qu.erase(qu.begin());
            qu.insert({t + m, i});
        }
    }
    while (!qu.empty()) {
        res[qu.begin()->second] = qu.begin()->first;
        qu.erase(qu.begin());
    }

    for (auto& x : res)
        cout << x << '\n';

}
