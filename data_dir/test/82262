#include<bits/stdc++.h>
using namespace std;
const int dir[2][4] = {{-1,0,1,0},{0,-1,0,1}};
int n,m,a[1010][1010],ans,total;
bool vis[1010][1010][4];
void dfs(int x,int y,int d,int len)
{
    bool mark=0;
    for(int i=0;i<4;i++)
    {
        if(!a[x+dir[0][i]][y+dir[1][i]]||vis[x][y][i])continue;
        vis[x][y][i] = true,vis[x+dir[0][i]][y+dir[1][i]][(i+2)%4] = true;
        total -= 2;
        if(d != -1 && i != d)
            ans=__gcd(ans,len),dfs(x+dir[0][i],y+dir[1][i],i,1);
        else
            dfs(x+dir[0][i],y+dir[1][i],i,len+1);
         mark=1;
    }
    if(!mark)ans=__gcd(ans,len);
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			scanf("%d",&a[i][j]);
	int odd=0;
	ans=0,total=0;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			if(a[i][j]==0)continue;
			ans=0;
            for(int k = 0;k < 4; ++k)
                ans+=a[i+dir[0][k]][j+dir[1][k]];
            total+=ans;
            if(!ans)
            {
            	puts("-1");
            	return 0;
			}
            if(ans&1)odd++;
		}
	}
	if(odd&&odd!=2)
	{
		puts("-1");
		return 0;
	}
	ans=0;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			if(a[i][j])
			{
				dfs(i,j,-1,0);
				goto cont;
			}
		}
	}
	cont:
	if(total||ans<=1)
	{
		puts("-1");
		return 0;
	}
	for(int i=2;i<ans;i++)
        if(ans%i==0)
            printf("%d ",i);
    printf("%d\n",ans);
	return 0;
}