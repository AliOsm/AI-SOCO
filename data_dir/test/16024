///...................SUBHASHIS MOLLICK...................///
///.....DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING....///
///.............ISLAMIC UNIVERSITY,BANGLADESH.............///
///....................SESSION-(14-15)....................///
#include<bits/stdc++.h>
using namespace std;
#define sf(a) scanf("%lld",&a)
#define sf2(a,b) scanf("%lld %lld",&a,&b)
#define sf3(a,b,c) scanf("%lld %lld %lld",&a,&b,&c)
#define pf(a) printf("%lld",a)
#define pf2(a,b) printf("%lld %lld",a,b)
#define pf3(a,b,c) printf("%lld %lld %lld",a,b,c)
#define nl printf("\n")
#define   timesave              ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define ll long long
#define pb push_back
#define MPI map<int,int>mp;
#define fr(i,n) for(i=0;i<n;i++)
#define fr1(i,n) for(i=1;i<=n;i++)
#define frl(i,a,b) for(i=a;i<=b;i++)
/*primes in range 1 - n
1 - 100(1e2) -> 25 pimes
1 - 1000(1e3) -> 168 primes
1 - 10000(1e4) -> 1229 primes
1 - 100000(1e5) -> 9592 primes
1 - 1000000(1e6) -> 78498 primes
1 - 10000000(1e7) -> 664579 primes
large primes ->
104729 1299709 15485863 179424673 2147483647 32416190071 112272535095293 48112959837082048697
*/
//freopen("Input.txt","r",stdin);
//freopen("Output.txt","w",stdout);
//const int fx[]={+1,-1,+0,+0};
//const int fy[]={+0,+0,+1,-1};
//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move
//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move
//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move
//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move
vector<long>vv;
vector<pair<char,string> >vec[1000005];
vector<string>last,first;
vector<pair<string,string> >rs;
long check(char ch)
{
    if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u')
        return 1;
    else
        return 0;
}
map<long,long>mp;
main()
{
    timesave;
    long n;
    cin>>n;
    // while(cin>>n)
    {
        long i;
        string s;

        for(i=1; i<=n; i++)
        {
            cin>>s;
            long v=0,j;
            char lch;
            for(j=0; j<s.size(); j++)
            {
                //x=check[]
                if(check(s[j]))
                {
                    v++;
                    lch=s[j];
                }
            }
            vec[v].push_back(make_pair(lch,s));
        }
        //cout<<vv.size()<<endl;
        for(i=0;i<=1000000; i++)
        {
            long xx=vec[i].size();//
            if(xx>1)
            {
                sort(vec[i].begin(),vec[i].end());
                long j=0,cnt=0;
                for(j=0; j<xx; j++)
                {
                    if(j+1<xx&&(vec[i][j].first==vec[i][j+1].first))
                    {
                        last.push_back(vec[i][j].second);
                        last.push_back(vec[i][j+1].second);
                        j++;
                    }
                    else
                    {
                        cnt++;
                        first.push_back(vec[i][j].second);
                    }

                }
                if(cnt>0&&cnt%2==1&&first.size()>0)
                {
                    first.pop_back();
                }
                //cout<<endl;
            }
        }
        long lsz=last.size();
        long fsz=first.size(),j=0;
        i=0;
        for(i=0,j=0;i+1<fsz&&j+1<lsz; j++,i++)
        {
            rs.push_back(make_pair(first[i++],last[j++]));
            rs.push_back(make_pair(first[i],last[j]));
        }
        for(long k=j;k+3<lsz;k+=4)
        {
            rs.push_back(make_pair(last[k],last[k+2]));
            rs.push_back(make_pair(last[k+1],last[k+3]));
        }
        cout<<rs.size()/2<<endl;
        for(i=0;i<rs.size();i++)
        {
            cout<<rs[i].first<<" "<<rs[i].second<<endl;
        }
    }
}
