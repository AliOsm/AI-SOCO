#include<bits/stdc++.h>

using namespace std;

#define FTB(i,a,b) for(LL i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(LL i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(LL i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(LL i=a,_b=b;i>_b;i--)
#define endl "\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define debug cout<<"VL\n";
#define coYES cout<<"YES\n";
#define coNO cout<<"NO\n";
#define coyes cout<<"yes\n";
#define cono cout<<"no\n";
#define coYes cout<<"Yes\n";
#define coNo cout<<"No\n";
#define PI 3.1415926535897
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define y1 aghksdmlsjdfjavljvlckdfmg
#define lamtron(n) fixed<<setprecision(n)
#define ALL(s) s.begin(),s.end()
#define ONLINE_JUDGE gshysrthrrthbd

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
template<class T> inline T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}

typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<II> VII;
typedef vector<bool> VB;


LL k1,k2,n1,n2,mod=1e8,dd[102][102][11],dc[102][102][11],pd[102],pc[102];


int main(){
    ios::sync_with_stdio(false);cin.tie(0);
    #ifndef ONLINE_JUDGE
    	freopen("input.txt","r",stdin);
    	freopen("output.txt","w",stdout);
    #endif
    cin>>n1>>n2>>k1>>k2;
    FTB(i,1,k1) dd[i][0][i]=1;
    FTB(i,1,k2) dc[0][i][i]=1;
    dd[0][0][0]=1;
    dc[0][0][0]=1;
    FTB(i,1,n1) FTB(j,1,n2){
        FTB(k,1,min(i,k1)){
            FTB(g,1,min(j,k2)) (dd[i][j][k]+=dc[i-k][j][g])%=mod;
        }
        FTB(k,1,min(j,k2)){
            FTB(g,1,min(i,k1)) (dc[i][j][k]+=dd[i][j-k][g])%=mod;
        }
    }
    LL res=0;
    FTB(i,1,k1) (res+=dd[n1][n2][i])%=mod;
    FTB(i,1,k2) (res+=dc[n1][n2][i])%=mod;
    cout<<res;
	return 0;
}




