#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define Endl endl
#define mod  1000000007
#define mkp make_pair
#define pb push_back
#define cin(n) scanf("%lld",&n)
#define cout(n) printf("%lld ",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
#define bitget(n) __builtin_popcountll(n)
#define MAX 1000000000000000000 //10^18
#define MIN -1000000000000000000
#define ipair pair<long long ,long long >

ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
ll intpoint(ll x1, ll y1, ll x2, ll y2) { return ( __gcd(abs(x1-x2),abs(y1-y2))+1); }
bool isvalid(ll x,ll y,ll n,ll m) { return (x>=0&&x<n&&y>=0&&y<m); }
// ---------------------///////////////---------------------------------
// ---------------------///////////////----------------------------------
// -------------/////////////////---------------------------------///////
ll ap[100011];
ll dp[100011][5];
ll ok;
bool solve(ll indx, ll val,ll n){
    // cout<<indx<<" "<<val<<" "<<n<<endl;
    if(indx == n + 1){
        ok = 1;
        return true;
    }
    if(dp[indx][val]!=-1){
        return dp[indx][val];
    }
    dp[indx][val] = 0;
    if(ap[indx] == ap[indx-1]){
        for(ll j=0;j<5;j++){
            if(val==j){
                continue;
            }
            dp[indx][val] = dp[indx][val]|solve(indx+1,j,n);
            if(ok){
               break;
            }   
        }
    }else if(ap[indx]>ap[indx-1]){
        for(ll j=val+1;j<5;j++){
            dp[indx][val] = dp[indx][val]|solve(indx+1,j,n);
            if(ok){
                break;
            }
        }
    }else{
        for(ll j = 0;j<val;j++){
            dp[indx][val] = dp[indx][val]|solve(indx+1,j,n);
            if(ok){
                break;
            }
        }
    }
    return dp[indx][val];
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ll t,i,j,l,r,q,k,kk,x,c,m,n,p;
    cin(n);
    for(i=0;i<n;i++){
        cin(ap[i]);
        for(j=0;j<5;j++){
            dp[i][j] = -1;
        }
    }
    for(j=0;j<5;j++)
        dp[n][j] = -1;
    ap[n] = ap[n-1];
    for(i=0;i<5;i++){
        if(solve(1,i,n)){
            break;
        }
    }
    ll ans[n+11];
    k=0;
    for(i=1;i<=n;i++){
        for(j=0;j<5;j++){
            if(dp[i][j] == 1){
                ans[k++] = j+1;
            }
        }
    }
    // cout<<k<<" ";
    if(k == n){
        for(i=0;i<n;i++){
            cout(ans[i]);
        }
    }else{
        cout(-1LL);
    }
return 0;
}