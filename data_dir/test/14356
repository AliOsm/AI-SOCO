//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <cstdio>
#include <sstream>
#include <fstream>
#include <functional>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
#include <time.h>
#include <complex>

using namespace std;

#define read freopen("in.txt", "r", stdin)
#define write freopen("out.txt", "w", stdout)
#define all(_) _.begin(), _.end()
#define rall(_) _.rbegin(), _.rend()
#define rep(i, j) for (int i = 0; i < j; i++)
#define Rep(i, j, k) for (int i = j; i < k; i++)
#define siz(_) (int)_.size()
#define ll long long
#define endl '\n'
#define ff fflush(stdout)

const double PI = 2.0 * acos(0.0);
const int MOD = 1e9 + 7;
const int oo = MOD;

typedef pair<int, int> pii;
typedef pair<string, string> pss;

ll gcd(ll x, ll y) { return !y ? x : gcd(y, x%y); }

int main() {
	int n;
	cin >> n;
	vector<pii> in(n);
	rep(i, n)
		scanf("%d%d", &in[i].first, &in[i].second);
	double ans = oo + oo;
	rep(i, n) {
		pair<double, double> l, m, r;
		l = in[(i - 1 + n) % n];
		r = in[(i + 1) % n];
		m = in[i];
		double dis = fabs((r.second - l.second)*m.first - (r.first - l.first)*m.second + r.first*l.second - r.second*l.first);
		dis /= sqrt((l.second - r.second)*(l.second - r.second) + (l.first - r.first)*(l.first - r.first));
		ans = min(ans, dis / 2);
	}
	printf("%.10lf\n", ans);
	return 0;
}