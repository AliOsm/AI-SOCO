#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}

int main()
{   
  ll n;
  cin>>n;
  vector<ll> a(n);
  vector<ll> b(n);
  set<ll> st;
  map<ll,ll> mp;
  ll i;
  for(i=0;i<n;i++)
    cin>>a[i];
  for(i=0;i<n;i++)
  {
    cin>>b[i];
    mp[b[i]]+=1;
    st.insert(b[i]);
  }
  for(i=0;i<n;i++)
  {
      ll x=a[i];
      ll top=n-x;
      set<ll>::iterator it=st.lower_bound(top);
      if(it!=st.end())
      {
          ll y=*it;
          cout<<(x+y)%n<<" ";
          mp[y]-=1;
          if(mp[y]==0)
            st.erase(y);
      }
      else 
      {
          ll y=*st.begin();
          cout<<(x+y)%n<<" ";
          mp[y]-=1;
          if(mp[y]==0)
            st.erase(y);
      }
  }
  
}

