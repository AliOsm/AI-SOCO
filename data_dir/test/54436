/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

class ProblemCLorenzoVonMatterhorn {
public:
    map<pair<ll, ll>, ll> m;
	void solve(std::istream& in, std::ostream& out) {
		int q; in>>q;
        m.clear();
        while(q--){
            int type; in>>type;
            if(type == 1){
                ll u, v, w; in>>u>>v>>w;
                while(u!=v){
                    if(u>v){
                        m[{u, u>>1}] += w;
                        u>>=1;
                    }
                    else{
                        m[{v, v>>1}] += w;
                        v>>=1;
                    }
                }
            }
            else{
                ll u, v, res = 0; in>>u>>v;
                while(u!=v){
                    if(u>v) res += m[{u, u>>1}], u>>=1;
                    else res += m[{v, v>>1}], v>>=1;
                }
                out<<res<<'\n';
            }
        }
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ProblemCLorenzoVonMatterhorn solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
