#include <bits/stdc++.h>

using namespace std;
#define endl "\n"
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
typedef long long ll;
typedef unsigned long long ull;
const double PI = acos(-1);
//const ll mod = 1e16+371;
//const ll mod = 1e12+193;
const ll mod = 1e9+7;
//const int mod = 1e9+7;
const int INF = 2e9;
const int MAX=505, N=1e6+10;


int n,q;
vector<int>v,cnt;
void add(int pos,int &ans){
	if(v[pos]<=n&&cnt[v[pos]]==v[pos])
		ans--;
	if(v[pos]<=n)
		cnt[v[pos]]++;
	if(v[pos]<=n&&cnt[v[pos]]==v[pos])
		ans++;
}
void rmv(int pos,int &ans){
	if(v[pos]<=n&&cnt[v[pos]]==v[pos])
		ans--;
	if(v[pos]<=n)
		cnt[v[pos]]--;
	if(v[pos]<=n&&cnt[v[pos]]==v[pos])
		ans++;
}
bool cmp(pair<pair<int,int>,int>a,pair<pair<int,int>,int>b){
	if(a.first.second<b.first.second)
		return true;
	return false;
}
int main(){
	ios_base::sync_with_stdio(0);
	//	cin.tie(0);

	cin>>n>>q;
	v.resize(n);
	cnt.resize(n+5);
	for(int i=0;i<n;i++)
		cin>>v[i];
	vector<pair<pair<int,int>,int>>qur(q),tmp;
	for(int i=0;i<q;i++){
		cin>>qur[i].first.first>>qur[i].first.second;
		qur[i].first.first--;
		qur[i].first.second--;
		qur[i].second=i;
	}
	tmp=qur;
	sort(all(qur));
	int buc=sqrt(n)+1;
	int sz=(n+buc-1)/buc;
	int b=0;
	vector<vector<pair<pair<int,int>,int>>>sqd(sz);
	for(int i=0;i<q;i++){
		if(qur[i].first.first<(b+1)*buc)
			sqd[b].push_back(qur[i]);
		else
			sqd[++b].push_back(qur[i]);
	}
	for(int i=0;i<sqd.size();i++)
		sort(all(sqd[i]),cmp);
	vector<int>res(q);
	int moL=0,moR=-1,ans=0;
	for(int i=0;i<sqd.size();i++){
		for(int j=0;j<sqd[i].size();j++){
			int l=sqd[i][j].first.first, r=sqd[i][j].first.second;
			while(moL<l){
				rmv(moL,ans);
				moL++;
			}
			while(moL>l){
				moL--;
				add(moL,ans);
			}
			while(moR<r){
				moR++;
				add(moR,ans);
			}
			while(moR>r){
				rmv(moR,ans);
				moR--;
			}
			res[sqd[i][j].second]=ans;
		}
	}

	for(int i=0;i<q;i++)
		cout<<res[i]<<endl;


	return 0;
}
