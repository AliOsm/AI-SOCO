




#include<bits/stdc++.h>
using namespace std;

#define LL                  long long
#define ull                 unsigned long long LL
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)

#define N 200005


int main()
{
  string str;
  cin>>str;

  int k;
  cin>>k;

  int n=str.length();

  int cnt=0;

  int lft=0,ad=0,nrm=0;

  for(int i=0;i<n;i++)
  {
      if(str[i]=='*')
      {
          ad++;
      }

      else if(str[i]=='?')
      {
          lft++;
      }
      else
      {
          nrm++;
      }
  }

 // cout<<nrm<<" "<<lft<<" "<<ad<<endl;


  if(nrm<k && ad==0)
  {
      cout<<"Impossible"<<endl;
  }
  else if(nrm==k && ad==0 && lft==0)
  {
      cout<<str<<endl;
  }
  else if(nrm>k && (nrm-ad-lft)>k )
  {
      cout<<"Impossible"<<endl;
  }
  else if(nrm<k && ad==0)
  {
       cout<<"Impossible"<<endl;
  }

  else if(nrm>k)
  {
    int diff=nrm-k;
   // cout<<"dd "<<diff<<endl;

    for(int i=0;i<n;i++)
    {
        if(diff  && (str[i+1]=='?' || str[i+1]=='*' ) )
        {
            //cout<<i<<" ";
            diff--;
            continue;
        }

         if(str[i]=='*' || str[i]=='?')
            continue;
        cout<<str[i];
    }


  }
  else
  {

      int shrt=k-nrm;

      for(int i=0;i<n;i++)
      {
          if(shrt>0 && str[i+1]=='*')
          {

              while(shrt>0)
              {
                  cout<<str[i];
                  shrt--;
              }
          }

          if(str[i]=='*' || str[i]=='?')
            continue;
          cout<<str[i];
      }
  }





    return 0;
}


/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
