
#include <bits/stdc++.h>

typedef long long tint;


#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define forn(i,n) forsn(i,0,n)
#define dforn(i,n) for(tint i = tint(n)-1; i >= 0; i--)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;

void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

const tint INFINITO = 1000000000000000000;

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n,k,m;
	while (cin >> n >> k >> m)
	{
		vector<string> word(n);
		map<string,tint> id;
		forn(i,n)
		{
			cin >> word[i];
			id[word[i]] = i;
		}
		
		vector<tint> a (n);
		forn(i,n)
			cin >> a[i];
		vector<tint> meaning (n,-1);
		forn(i,k)
		{
			tint x;
			cin >> x;
			forn(w,x)
			{
				tint r;
				cin >> r;
				meaning[r-1] = i;
			}
		}
		
		vector<tint> f (k,INFINITO);
		forn(i,n)
			f[meaning[i]] = min(f[meaning[i]],a[i]);
		tint ans = 0;
		forn(i,m)
		{
			string s;
			cin >> s;
			ans += f[meaning[id[s]]];
		}
		cout << ans << "\n";
		
	}
	
	return 0;
}



