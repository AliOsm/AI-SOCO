#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std ;
using namespace __gnu_pbds ;

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

const int MAX = 2e5 + 10 ;

int arr[MAX] , ans[MAX] , arr2[MAX] ;
int n , m ;

map<int , vector<int> >occ ;
vector< pair<int , int> >Q[MAX] ;

int main()
{
    ios_base::sync_with_stdio(0) ;
    cin.tie(0) ;
    cin>>n ;
    for(int i = 0 ; i < n ; ++i)
    {
        cin>>arr[i] ;
        arr2[i] = arr[i] ;
        occ[arr[i]].push_back(i) ;
    }
    sort(arr , arr + n) ;
    cin>>m ;
    for(int i = 0 ; i < m ; ++i)
    {
        int k , idx ;
        cin>>k>>idx ;
        Q[n-k].emplace_back(idx , i) ;
    }
    ordered_set s ;
    int prv = 0 , cnt = 0 ;
    for(int i = n-1 ; i >= 0 ; --i)
    {
        if(arr[i] == prv)
            cnt++ ;
        else
            prv = arr[i] , cnt = 0 ;
        s.insert(occ[arr[i]][cnt]) ;
        for(auto &j : Q[i])
            ans[j.second] = arr2[*s.find_by_order(j.first-1)] ;
    }
    for(int i = 0 ; i < m ; ++i)
        cout<<ans[i]<<"\n" ;
    return 0 ;
}       