//Solution by Tima
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7; 

int n, cnt, m, c[N], sz, a[3];

vi g[N];

ll ans;

void dfs(int v,int col){
	c[v] = col;
	a[col]++;
	sz++;
	for(int to : g[v]){
		if(!c[to]){
			dfs(to,3 - col);
		}
		else{
			if(c[to] != 3 - col){
				printf("0 1");
				exit(0);
			}
		}
	}
}

int main () {
	scanf("%d%d", &n, &m);

	for(int i = 1,u,v; i <= m; i++){
		scanf("%d%d", &u, &v);
		g[u].pb(v);
		g[v].pb(u);
	}

	if(m == 0){
		printf("3 %lld", 1ll * n * (n - 1) * (n - 2) / 6);
		return 0;
	}
	int mx = 0;
	for(int i = 1; i <= n; i++) if(!c[i]){
	    sz = 0;
	    dfs(i,1);
	    mx = max(mx, sz);
	    if(sz == 2) cnt++;
	    ans += 1ll * a[1] * (a[1] - 1) >> 1;
	    ans += 1ll * a[2] * (a[2] - 1) >> 1;
	    a[1] = a[2] = 0;
	}

	if(mx == 2){
		printf("2 %lld", 1ll * (n - 2) * cnt);
		return 0;
	}
	printf("1 %lld",ans);

return 0;
}