#include <bits/stdc++.h>
using namespace std;

template<typename T>
vector<T> compress(vector<T> A){
    sort(A.begin(), A.end());
    A.erase(unique(A.begin(), A.end()), A.end());
    return A;
}

int main(){
    int T;
    cin >> T;
    while(T--){
        int N;
        scanf("%d", &N);
        vector<pair<int, int>> LR(N);
        vector<int> P;
        for(int i=0; i<N; i++){
            int l, r;
            scanf("%d %d", &l, &r);
            l *= 2;
            r *= 2;
            LR[i] = {l, r};
            P.push_back(l);
            P.push_back(l-1);
            P.push_back(r);
            P.push_back(r+1);
        }
        P = compress(P);
        int sz = P.size();
        vector<int> imos(sz+1);
        for(auto& p : LR){
            p.first = lower_bound(P.begin(), P.end(), p.first) - P.begin();
            p.second = lower_bound(P.begin(), P.end(), p.second) - P.begin();
            imos[p.first]++;
            imos[p.second+1]--;
        }
        for(int i=0; i<sz; i++) imos[i+1] += imos[i];

        int total = 0;
        vector<int> ones(sz+1);
        for(int i=0; i<sz; i++){
            if(imos[i] == 1) if(i==0 || imos[i-1] != 1) ones[i+1]++;
            if(imos[i] > 0) if(i==0 || imos[i-1] == 0) total++;
            ones[i+1] += ones[i];
        }
        int ans = 0;
        for(auto& p : LR){
            int res = total + ones[p.second+1] - ones[p.first];
            if(imos[p.first] == 1) res--;
            if(imos[p.second] == 1) res--;
            ans = max(ans, res);
        }
        printf("%d\n", ans);
    }
    return 0;
}
