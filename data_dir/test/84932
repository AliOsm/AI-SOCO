#include <iostream>
#include <fstream>
#include <cstdio>
#include <string>
#include <set>
#include <vector>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <iomanip>
#include <cmath>
using namespace std;

/*

int main()
{
	int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		string s1;
		string s2;
		cin>>s1>>s2;
		int ps[26] = {0};
		for (int j = 0; j < s2.size(); j++)
		{
			ps[s2[j]-'a']++;
		}
		vector<vector<int> > fr(s1.size()+1, vector<int> (26, 0));
		for (int j = 0; j < s1.size(); j++)
		{
			fr[j+1][s1[j]-'a']++;
			for (int k = 0; k < 26; k++)
			{
				fr[j+1][k] += fr[j][k];
			}
		}
		bool ok = false;
		for (int j = 0; j+s2.size() <= s1.size(); j++)
		{
			int ps2[26] = {0};
			for (int k = 0; k < 26; k++)
			{
				ps2[k] = fr[j+s2.size()][k]-fr[j][k];
			}
			ok = true;
			for (int k = 0; k < 26; k++)
			{
				if (ps[k] != ps2[k])
				{
					ok = false;
					break;
				}
			}
			if (ok)
			{
				break;
			}
		}
		if (ok) cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
	}
}



//Regional: Swapping Game
typedef vector<int> VI;
typedef vector<VI> VVI;

bool FindMatch(int i, const VVI &w, VI &mr, VI &mc, VI &seen) {
  for (int j = 0; j < w[i].size(); j++) {
    if (w[i][j] && !seen[j]) {
      seen[j] = true;
      if (mc[j] < 0 || FindMatch(mc[j], w, mr, mc, seen)) {
        mr[i] = j;
        mc[j] = i;
        return true;
      }
    }
  }
  return false;
}

int BipartiteMatching(const VVI &w, VI &mr, VI &mc) {
  mr = VI(w.size(), -1);
  mc = VI(w[0].size(), -1);
  
  int ct = 0;
  for (int i = w.size()-1; i >= 0; i--) {
    VI seen(w[0].size());
    if (FindMatch(i, w, mr, mc, seen)) ct++;
  }
  return ct;
}
vector<vector<int> > w;

int main()
{
	string s;
	cin>>s;
	w = vector<vector<int> >(s.size(), vector<int>(s.size(),0));
	sort(s.begin(), s.end());
	string ok;
	for (int i = 0; i < s.size(); i++)
	{
		cin>>ok;
		for (int j = 0; j < ok.size(); j++)
		{
			for (int k = 0; k < s.size(); k++)
			{
				if (s[k] == ok[j])
				{
					w[i][k] = 1;
				}
			}
		}
	}
	VI mr = VI(w.size(), -1);
	VI mc = VI(w[0].size(), -1);
	int r = BipartiteMatching(w,mr,mc);
	if (r < s.size()) cout<<"NO SOLUTION"<<endl;
	else
	{
		for (int i = 0; i < s.size(); i++)
		{
			cout<<s[mr[i]];
		}
		cout<<endl;
	}
	
	
//	system("pause");
}






int main()
{
	int n;
	cin>>n;
	int top;
	cin>>top;
	int l = 7-top;
	for (int i = 0; i < n; i++)
	{
		int x,y;
		cin>>x>>y;
		if (x == top || x == l || y == top || y == l) {cout<<"NO"<<endl; return 0;}
	}
	cout<<"YES"<<endl;
	return 0;
}


int main()
{
	long long s, k;
	cin>>s>>k;
	long long fib[51] = {0};
	fib[0] = 0;
	fib[1] = 1;
	for (int i = 2; i < 51; i++)
	{
		for (int j = i-1; j >= 0 && j >= i-k; j--)
		{
			fib[i] += fib[j];
		}
	//	cout<<fib[i]<<endl;
	}

	vector<long long> r;
	bool tk[51] = {false};
	while (s > 0)
	{
		for (int i = 50; i >= 0; i--)
		{
			if (!tk[i] && fib[i] <= s)
			{
				s -= fib[i];
				r.push_back(fib[i]);
				tk[i] = true;
			}
		}
	}
	if (r.size() == 1) r.push_back(0);
	cout<<r.size()<<endl;
	for (int i = 0; i < r.size(); i++)
	{
		cout<<r[i];
		if (i+1 < r.size()) cout<<" ";
	}
	cout<<endl;
//	system("pause");
}

vector<int> bl;
int r, c, x, y;
vector<vector<int> > dp;
int sol(int i, int col)
{
	if (i > c) return 10000000;
	if (i == c) return 0;
	if (dp[i][col] != -1) return dp[i][col];
	int cost = 0;
	for (int j = i; j < i+x; j++)
	{
		if (j >= c) return dp[i][col] = 1000000000;
		if (col) cost += bl[j];
		else cost += r-bl[j];
	}
	int m = 10000000;
	for (int j = i+x; j < i+y; j++)
	{
		if (j== c) {m = min(m, cost); break;}
		m = min(m,cost + sol(j,1-col));
		if (col) cost += bl[j];
		else cost += r-bl[j];
	}
	m = min(m,cost + sol(i+y,1-col));
//	cout<<i<<" "<<col<<" "<<m<<endl;
	return dp[i][col] = m;
}
int main()
{
	cin>>r>>c>>x>>y;
	vector<string> mat(r);
	for (int i = 0; i < r; i++)
	{
		cin>>mat[i];
	}
	bl = vector<int>(c,0);
	for (int i = 0; i < c; i++)
	{
		for (int j = 0; j < r; j++)
		{
			if (mat[j][i] == '#') bl[i]++;
		}
	}
	dp = vector<vector<int> > (c, vector<int>(2,-1));
	int res = min(sol(0,0), sol(0,1));
	cout<<res<<endl;
//	system("pause");
}


int main()
{
	int n, k;
	cin>>n>>k;
	vector<int> a(2*n+1,0);
	for (int i = 0; i < a.size(); i++)
	{
		cin>>a[i];
	}
	for (int i = 1; i <a.size(); i+=2)
	{
		if (a[i] > a[i-1]+1 && a[i] > a[i+1]+1)
		{
			a[i]--;
			k--;
		}
		if (!k) break;
	}
	cout<<a[0];
	for (int i = 1; i < a.size(); i++)
	{
		cout<<" "<<a[i];
	}
	cout<<endl;
}


int main()
{
	int n;
	cin>>n;
	vector<pair<int,int> > a(n);
	for (int i = 0; i < n; i++)
	{
		cin>>a[i].first;
		a[i].second = i+1;
	}
	sort(a.begin(), a.end());
	if (n == 1) cout<<a[0].second<<endl;
	else
	{
		if (a[0].first == a[1].first) cout<< "Still Rozdil"<<endl;
		else
		{
			cout<<a[0].second<<endl;
		}
	}
}

int main()
{
	int n, m;
	cin>>n>>m;
	priority_queue<int> q1;
	priority_queue<int> q2;
	int em;
	for (int i = 0; i < m; i++)
	{
		cin>>em;
		q1.push(em);
		q2.push(-em);
	}
	int m1 = 0;
	int rem = n;
	while (rem--)
	{
		m1 += q1.top();
		int cu = q1.top()-1;
		q1.pop();
		q1.push(cu);
	}
	int m2 = 0;
	rem = n;
	while (rem--)
	{
		m2 += -q2.top();
		int cu = q2.top()+1;
		q2.pop();
		if (cu < 0)
			q2.push(cu);
	}
	cout<<m1<<" "<<m2<<endl;
	//system("pause");
}


int main()
{
	int n;
	cin>>n;
	vector<long long> a(n);
	vector<long long> s(n,0);
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
	}
	for (int i = 1; i <n; i++)
	{
		s[i] = s[i-1];
		if (a[i] < a[i-1])
		{
			s[i] += a[i-1]-a[i];
		}
	}
	cout<<s[n-1]<<endl;
}



vector<vector<double> > dp;

double sol(int i, int rem)
{
	if (rem < 0) return 0.0;
	if (i == dp.size()) if (rem == 0) return 1.0; else return 0.0;
	if (dp[i][rem] >= 0) return dp[i][rem];
	double res = 0.0;
	for (int j = 1; j < 7; j++)
	{
		res += (1.0/6.0) * sol(i+1, rem-j);
	}
	return dp[i][rem] = res;
}

int main()
{
	int t;
	int n,m;
	cin>>t;
	while (t--)
	{
		cin>>n>>m;
		dp = vector<vector<double> >(n, vector<double>(m+1,-1));
		double res = sol(0,m);
		cout<<fixed<<setprecision(2)<<res<<endl;
	}
}

int main()
{
	int n, m;
	cin>>n>>m;
	vector<long long> a(n);
	vector<bool> b(m,false);
	vector<vector<pair<int,int> > > aa(n);
	for (int i = 0; i < m; i++)
	{
		int l, r, q, d;
		cin>>q>>l>>r>>d;
		if (q == 1)
		{
			b[i] = true;
			for (int j = l-1; j < r; j++)
			{
				a[j] += d;
			}
		}
		else
		{
			for (int j = l-1; j < r; j++)
			{
				aa[j].push_back(make_pair(d-a[j],i));
			}
		}
	}
	for (int i = 0; i < n; i++)
	{
		int mi = 1000000000;
		for (int j = 0; j < aa[i].size(); j++)
		{
			mi = min(mi, aa[i][j].first);
		}
		if (aa[i].empty())
		{
			a[i] = 0;
		}
		else
		{
			for (int j = 0; j < aa[i].size(); j++)
			{
				if (aa[i][j].first == mi)
				{
					a[i] = mi;
					b[aa[i][j].second] = true;
				}
			}
		}
	}
	bool ok = true;
	for (int i = 0; i < m; i++)
	{
		if (!b[i])
		{
			ok = false;
			break;
		}
	}
	if (ok)
	{
		cout<<"YES"<<endl;
		cout<<a[0];
		for (int i = 1; i < a.size(); i++)
		{
			cout<<" "<<a[i];
		}
		cout<<endl;
	}
	else
	{
		cout<<"NO"<<endl;
	}
}


int main()
{
	int n,k;
	cin>>n>>k;
	if (k%n == 0)
	{
		int q = k/n;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (j) cout<<" ";
				cout<<q;
			}
			cout<<endl;
		}
	}
	else
	{
	int q = k/n;
	int q2 = q + k%n;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (j) cout<<" ";
				if (i != j)cout<<q;
				else
					cout<<q2;
			}
			cout<<endl;
		}
	}
}


int main()
{
	int n, k;
	cin>>n>>k;
	if (k < n)
	{
		if ((n-k)%2 == 0)
		{
		for (int i = 1; i <= (n-k); i+=2)
		{
			if (i > 1) cout<<" ";
			cout<<i+1<<" "<<i;
		}
		for (int i = n-k+1; i <= n; i++)
		{
			if (i > 1) cout<<" ";
			cout<<i;
		}
		cout<<endl;
		}
		else
		{
			cout<<1;
			for (int i = 2; i <= (n-k); i+=2)
			{
				if (i > 1) cout<<" ";
				cout<<i+1<<" "<<i;
			}
		for (int i = n-k+1; i <= n; i++)
		{
			if (i > 1) cout<<" ";
			cout<<i;
		}
		cout<<endl;
		}
		
	}
	else
	{
		cout<<-1<<endl;
	}
}




//Problem B: Roads
vector<int> p;
vector<vector<int> > com;
vector<stack<pair<long long, int> > >wait;
vector<long long> res;
int find(int i)
{
	if (i != p[i])
		return p[i] = find(p[i]);
	return i;
}

void un(int i, int j, long long cost)
{
	int a = find(i);
	int b = find(j);
	int count = 0;
	if (com[a].size() > com[b].size())
	{
		swap(a,b);
	}
		count = com[a].size();
		wait[b].push(make_pair(cost*count, com[b].size()));
		wait[a].push(make_pair(cost*com[b].size(), com[a].size()));
		int cur = 0;
		vector<long long> todo(com[a].size()+1, 0);
		while (!wait[a].empty())
		{
			todo[0] +=wait[a].top().first;
			todo[wait[a].top().second] -= wait[a].top().first;
			wait[a].pop();
		}
		for (int k = 1; k < todo.size(); k++)
		{
			todo[k] += todo[k-1];
		}
		for (int z = 0; z < com[a].size(); z++)
		{
			int v = com[a][z];
			res[v] += todo[z];
			com[b].push_back(v);
		}
//		com[a].clear();
		p[a] = b;
}

bool con(int i, int j)
{
	return find(i) == find(j);
}
int n, m;
pair<long long, pair<int,int> > q[100000];
void krus()
{
	p = vector<int>(n);
	com = vector<vector<int> > (n);
	wait = vector<stack<pair<long long, int> > >(n);
	res = vector<long long> (n,0);
	for (int i = 0; i < p.size(); i++)
	{
		p[i] = i;
		com[i].push_back(i);
	}
	for (int i = 0; i < m; i++)
	{
		pair<long long, pair<int,int> > c = q[i];
		if (con(c.second.first,c.second.second)) continue;
		un(c.second.first, c.second.second, c.first);
	}
	int i = find(0);
	vector<long long> todo(com[i].size()+1, 0);
	while (!wait[i].empty())
	{
		todo[0] +=wait[i].top().first;
		todo[wait[i].top().second] -= wait[i].top().first;
		wait[i].pop();
	}
	for (int k = 1; k < todo.size(); k++)
	{
		todo[k] += todo[k-1];
	}
	for (int z = 0; z < com[i].size(); z++)
	{
		int v = com[i][z];
		res[v] += todo[z];
	}
	
}

int main()
{
	freopen("road.in","r",stdin);
	int t;
	scanf(" %d",&t);
	for (int i = 0; i < t; i++)
	{
		scanf(" %d %d",&n,&m);
		for (int j = 0; j < m; j++)
		{
			long long a,b,c;
			scanf(" %d %d %d",&a,&b,&c);
			q[j].first = c;
			q[j].second.first = a-1;
			q[j].second.second = b-1;
		}
		sort(q, q+m);
		krus();
		printf("Case %d:\n",i+1);
		for (int j = 0; j < res.size(); j++)
		{
			printf("%d\n",res[j]);
		}
	}
//	system("pause");
}




//Problem C: Treasures
long long dp[101][205][205] = {0};
long long sum[101][205][205] = {0};
long long mod(long long a, long long m)
{
	if (a < 0) return mod(a+m,m);
	return (a)%m;
}
int main()
{
	ifstream cin;
	cin.open("treasures.in");
	int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		for (int a = 0; a < 101; a++) for (int b = 0; b < 205; b++) for (int c = 0; c < 205; c++) dp[a][b][c] = sum[a][b][c] = 0;
		int n, m;
		cin>>n>>m;
		int s,x,y;
		cin>>s>>x>>y;
		for (int a = 1; a <= n; a++)
		{
			for (int b = 1; b <= m; b++)
			{
				cin>>dp[1][a+b][a-b+m];
			}
		}

		for (int a = 2; a <= s; a++)
		{
			for (int b = 1; b <= n+m; b++)
			{
				for (int c = 1; c <= n+m; c++)
				{
					sum[a-1][b][c] = dp[a-1][b][c] + sum[a-1][b-1][c] + sum[a-1][b][c-1]-sum[a-1][b-1][c-1];
					sum[a-1][b][c] = mod(sum[a-1][b][c],1000000007ll);
				}
			}
			
			for (int b = 1; b <= n; b++)
			{
				for (int c = 1; c <= m; c++)
				{
					int ii,jj;
					ii = max(0,-a+b+c);
					jj = max(0,-a+b-c+m);
					int ii2,jj2;
					ii2 = min(n+m, a-1+b+c);
					jj2 = min(n+m, a-1+b-c+m);
					dp[a][b+c][b-c+m] = sum[a-1][ii2][jj2] - sum[a-1][ii2][jj] - sum[a-1][ii][jj2]+ sum[a-1][ii][jj];
					dp[a][b+c][b-c+m] = mod(dp[a][b+c][b-c+m],1000000007ll);
				}
			}
		}
		cout<<"Case "<<i+1<<": "<<dp[s][x+y][x-y+m]<<endl;
	}
}


//Problem D: Alorithm Quiz
vector<vector<long long> > dp;
bool rows;
int n,m;
long long sol(int i, int j)
{
	if (j < 0) return 0;
	if (i < 0) return 0;
	if (i == 0 && j == 0) return 1;
	if (i == 0) return 0;
	if (dp[i][j] != -1) return dp[i][j];
	long long res = 0;
	if (rows)
	{
		res += (n-j)*sol(i-1, j);
		res += j*sol(i-1,j-1);
		res %= 1000000007;
	}
	else
	{
		res += (m-j)*sol(i-1, j);
		res += j*sol(i-1,j-1);
		res %= 1000000007;
	}
	return dp[i][j] = res;
}

int main()
{
	ifstream cin;
	cin.open("rooks.in");
	int t;
	cin>>t;
	for(int i = 0; i < t; i++)
	{
		cin>>n>>m;
		int k;
		cin>>k;
		set<long long> r;
		set<long long> c;
		while (k--)
		{
			long long a,b;
			cin>>a>>b;
			r.insert(a);
			c.insert(b);
		}
		int x = r.size();
		int y = c.size();
		if (x >= y)
		{
			rows = false;
			dp = vector<vector<long long> >(x+1, vector<long long> (y+1,-1));
			long long res = sol(x,y);
			cout<<"Case "<<i+1<<": "<<x<<" "<<res<<endl;
		}
		else
		{
			rows = true;
			dp = vector<vector<long long> >(y+1, vector<long long> (x+1,-1));
			long long res = sol(y,x);
			cout<<"Case "<<i+1<<": "<<y<<" "<<res<<endl;
		}
	}
}

/*
//Problem E: Ghanophobia
int main()
{
	ifstream cin;
	cin.open("ghanophobia.in");
	int g,e;
	g = 6;
	e = 1;
	int a,b;
	int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		char ch;
		cin>>a>>ch>>b;
		if (a+e > b+g)
		{
			cout<<"Case "<<i+1<<": YES"<<endl;
		}
		else if (a+e < b+g)
		{
			cout<<"Case "<<i+1<<": NO"<<endl;
		}
		else
		{
			if (a +e*2 > b*2 + g)
				cout<<"Case "<<i+1<<": YES"<<endl;
			else if (a +e*2 < b*2 + g)
				cout<<"Case "<<i+1<<": NO"<<endl;
			else cout<<"Case "<<i+1<<": PENALTIES"<<endl;
		}
	}
}


//Problem F: Army
long long rows[2000010];

void fillRows()
{
	rows[0] = 0;
	for (long long i = 1; i < 2000010; i++)
	{
		rows[i] = rows[i-1];
		
		rows[i] += (long long)i+(long long)i*(i-1ll);

	}
}

long long pos(long long r, long long i)
{
	long long mx = (r*(r+1)) / 2;
	if (i <= r)
	{
		return (i*(i+1)) / 2;
	}
	else
	{
		i-=r;
		long long m1 = ((r)*(r-1))/2;
		long long m2 = ((r-i)*(r-i-1)) / 2;
		return mx+m1-m2;
	}
}

long long bs(long long n)
{
	long long *row = upper_bound(rows, rows+2000010, n);
	row--;
	long long r = (long long)(row-rows);
	long long s = *row;
	long long res = r*r;
//	cout<<r<<endl;
//	cout<<res<<endl;
	long long l = 0, h = 2*r + 1;
	while (l <= h)
	{
		long long mid = (l+h)/2;
		if (pos(r+1,mid) < n-s)
		{
			l = mid+1;
		}
		else if (pos(r+1,mid) > n-s)
		{
			h = mid-1;
		}
		else
		{
//			cout<<mid<<endl;
			return res+mid;
		}
	}
//	cout<<l<<endl;
	return res + l;
}

int main()
{
	ifstream cin;
	cin.open("army.in");
	int t;
	cin>>t;
	fillRows();
	for (int i = 0; i < t; i++)
	{
		long long n;
		cin>>n;
		long long r = bs(n);
		cout<<"Case "<<i+1<<": "<<r<<endl;
	}
//	system("pause");
}


//Problem G: Jenga
int main()
{
//ifstream cin;
//cin.open("jenga.in");
int t;
cin>>t;
for (int i =0; i < t; i++)
{
int n;
cin>>n;
if (n%3 != 0)
{
cout<<"Case "<<i+1<<": Bakkar"<<endl;
}
else
{
cout<<"Case "<<i+1<<": Wahdan"<<endl;
}
}
}


//Problem I: Zanzibar, Correct

class fr
{
public:
	long long x,y;
	long long gcd(long long a, long long b)
	{
		if (b == 0) return a;
		return gcd(b, a%b);
	}
	
	void simp()
	{
		long long g = gcd(x,y);
		x /=g;
		y /= g;
	}
	
	bool operator<(const fr &b) const
	{
		return abs(x*b.y)-abs(y*b.x) < 0;
	}
	
	fr sub(fr b)
	{
		fr r;
		r.x = x*b.y-y*b.x;
		r.y = y*b.y;
		r.x = abs(r.x);
		r.simp();
		return r;
	}

	fr add(fr b)
	{
		fr r;
		r.x = x*b.y+y*b.x;
		r.y = y*b.y;
		r.simp();
		return r;
	}

	fr()
	{
		x = y = 0;
	}
	
	fr(const fr &b)
	{
		x = b.x;
		y = b.y;
	}
};

int main()
{
	//ifstream cin;
	//cin.open("zanzibar.in");
	set<fr> s;
	queue<fr> q;
	vector<fr> a;
	fr st;
	st.x = 0;
	st.y = 1;
	q.push(st);
	s.insert(st);
	for (long long i = 7; i <= 13; i++)
	{
		fr f;
		f.x = 1;
		f.y = i;
		a.push_back(f);
	}
	while (!q.empty())
	{
		fr cu = q.front();
		q.pop();
		for (int j = 0; j < a.size(); j++)
		{
			fr ncu = cu.add(a[j]);
			if (ncu.x > ncu.y) continue;
			if (s.count(ncu) > 0) continue;
			s.insert(ncu);
			q.push(ncu);
		}
	}
	int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		long long x, y;
		cin>>x>>y;
		fr se;
		se.x = x;
		se.y = y;
		se.simp();
		set<fr>::iterator l = lower_bound(s.begin(), s.end(), se);
		fr r = *l;
		r = r.sub(se);
		l--;
		fr r2 = *l;
		r2 = r2.sub(se);
		if (r < r2)
		{
			cout<<"Case "<<i+1<<": "<<r.x<<"/"<<r.y<<endl;
		}
		else
		{
			cout<<"Case "<<i+1<<": "<<r2.x<<"/"<<r2.y<<endl;
		}
	}
}


//Problem K: Cubes Shuffling
int main()
{
	ifstream cin;
	cin.open("cubes.in");
	int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		int n;
		cin>>n;
		vector<int> a(n);
		for (int j = 0; j < n; j++)
		{
			cin>>a[j];
		}
		sort(a.begin(), a.end());
		reverse(a.begin(), a.end());
		vector<int> r(n);
		for (int j = 0; j < n/2; j++)
		{
			r[j] = a[2*j+1];
			r[n-j-1] = a[2*j];
		}
		if (n%2==1)
		{
			r[n/2] = a[n-1];
		}
		cout<<"Case "<<i+1<<":"<<endl;
		cout<<r[0];
		for (int j = 1; j < n; j++)
		{
			cout<<" "<<r[j];
		}
		cout<<endl;
	}
}





//Problem L: Mahdi and Teddy Bear
int main()
{
	ifstream cin;
	cin.open("mahdi.in");
	int t;
	cin>>t;

	for (int i = 0; i < t; i++)
	{
		cout<<"Case "<<i+1<<":"<<endl;
		vector<long long> ind[26];
		char ch;
		long long l,m,a;
		cin>>ch>>l>>m>>a;
		ind[ch-'a'].push_back(0);
		long long last = ch-'a';
	//	cout<<ch;
		for (long long j = 1; j < l; j++)
		{
			long long n = (last*m + j*a)%26;
			last = n;
			ind[n].push_back(j);
		}
		int n;
		cin>>n;
		while (n--)
		{
			cin>>ch>>l>>m>>a;
			last = -1;
			int ll = ch-'a';
			vector<long long> ::iterator el = upper_bound(ind[ch-'a'].begin(),ind[ch-'a'].end(), last);
			if (el == ind[ch-'a'].end())
			{
				cout<<"REPEAT"<<endl;
				continue;
			}
			last = *el;
			bool ok = true;
			for (int j = 1; j < l; j++)
			{
				int n = (ll*m + j*a)%26;
				ll = n;
				el = upper_bound(ind[n].begin(),ind[n].end(), last);
				if (el == ind[n].end())
				{
					cout<<"REPEAT"<<endl;
					ok = false;
					break;
				}
				last = *el;
			}
			if (ok)
				cout<<"BRAVO"<<endl;
		}
	}
//	system("pause");
}











//Problem I: Zanzibar, Will time limit
class fr
{
public:
	long long x,y;
	long long gcd(long long a, long long b)
	{
		if (b == 0) return a;
		return gcd(b, a%b);
	}
	
	void simp()
	{
		long long g = gcd(x,y);
		x /=g;
		y /= g;
	}
	
	bool operator<(const fr &b) const
	{
		return abs(x*b.y)-abs(y*b.x) < 0;
	}
	
	fr sub(fr b)
	{
		fr r;
		r.x = x*b.y-y*b.x;
		r.y = y*b.y;
		if (r.x >= 0) r.simp();
		return r;
	}
	
	fr()
	{
		x = y = 0;
	}
	
	fr(const fr &b)
	{
		x = b.x;
		y = b.y;
	}
};
vector<fr> a;
map<fr,fr> dp;

fr sol(int x, int y)
{
	fr in;
	in.x = in.y = 1;
	if (y < 0) return in;
	fr r;
	r.x = abs(x);
	r.y = y;
	if (x <= 0)
	{
		return r;
	}
	
	if (dp.count(r) > 0) return dp[r];
	fr m = r;
	for (int i = 0; i < a.size(); i++)
	{
		fr cu = r.sub(a[i]);
		fr s = sol(cu.x,cu.y);
		if (s < m)
		{
			m = s;
		}
	}
	return dp[r] = m;
}

int main()
{
//	ifstream cin;
//	cin.open("zanzibar.in");
	int t;
	cin>>t;
	
	for (long long i = 7; i <= 13; i++)
	{
		fr n;
		n.x = 1;
		n.y = i;
		a.push_back(n);
	}
	
	for (int i = 0; i < t; i++)
	{
		fr r;
		long long x,y;
		cin>>x>>y;
		int g = r.gcd(x,y);
		x/=g;
		y/=g;
		r = sol(x,y);
		cout<<"Case "<<i+1<<": ";
		r.x = abs(r.x);
		r.simp();
		cout<<r.x<<"/"<<r.y<<endl;
	}
//	system("pause");
}




//Problem J: Wrong Answer
1
10 3
5 6 6 5 4
1 9 3 8 0
1 7 7 5 5
4 0 1 9 8
6 0 5 6 0
6 7 6 5 4
1 4 5 6 6
5 7 8 9 8
1 3 3 7 9
1 2 8 4 8
0 1 2 3 4 5 6 7 8 9
4 0 1 5 0 6 7 6 9 8
3 2 5 7 8 5 5 6 8 9


int bit[12][12][12][12][12] = {0};

void updatewe(int p , int h, int w, int t, int we , int val){

	while (we <= 11){
		bit[p][h][w][t][we] += val;
		we += (we & (-we)); 
	}
}

void updatet(int p , int h, int w, int t, int we , int val){

	while (t <= 11){
		
		updatewe(p , h, w, t, we , val);
		// this function should update array tree[x] 
		t += (t & (-t)); 
	}
}
void updatew(int p , int h, int w, int t, int we , int val){
	while (w <= 11){
		
		updatet(p , h, w, t, we , val);
		// this function should update array tree[x] 
		w += (w & (-w)); 
	}
}

void updateh(int p , int h, int w, int t, int we , int val){
	while (h <= 11){
		updatew(p , h, w, t, we , val);
		// this function should update array tree[x] 
		h += (h & (-h)); 
	}
}

void update(int p , int h, int w, int t, int we , int val){
	while (p <= 11){
		updateh(p , h, w, t, we , val);
		// this function should update array tree[x] 
		p += (p & (-p)); 
	}
}
int readwe(int p , int h, int w, int t, int we2){
	int s = 0;
	while (we2 > 0){
		s += bit[p][h][w][t][we2];
		// this function should update array tree[x] 
		we2 -= (we2 & (-we2)); 
	}
	
	return s;
}

int readt(int p , int h, int w, int t2, int we2)
{
	int s = 0;
	while (t2 > 0)
	{
		s += readwe(p , h, w, t2,we2);
		// this function should update array tree[x] 
		t2 -= (t2 & (-t2)); 
	}

	return s;
}


int readw(int p , int h, int w2, int t2, int we2){
	int s = 0;
	while (w2 > 0){
		s += readt(p , h, w2,t2, we2);
		// this function should update array tree[x] 
		w2 -= (w2 & (-w2)); 
	}
	
	return s;
}
int readh(int p , int h2, int w2, int t2,int we2){
	int s = 0;
	while (h2 > 0){
		//cout<<h<<endl;
		s += readw(p , h2, w2,t2,we2);
		// this function should update array tree[x] 
		h2 -= (h2 & (-h2)); 
	}
	
	return s;
}
int read(int p2 ,int h2, int w2,int t2, int we2){
	int s = 0;
	while (p2 > 0){
		
		s += readh(p2 ,h2, w2, t2,we2);
		// this function should update array tree[x] 
		p2 -= (p2 & (-p2)); 
	}
	return s;
}

vector<double> v[5];
vector<double> val[5];
vector<vector<double> > ph;

int main()
{
	int t;
	cin>>t;
	for (int i = 0; i < t; i++)
	{
		for (int a=0; a<12; a++) for (int b=0;b<12; b++) for (int c =0 ; c< 12; c++) for (int d=0; d<12; d++) for (int e=0; e < 12; e++) bit[a][b][c][d][e] = 0;
		int n, q;
		cin>>n>>q;
		ph = vector<vector<double> >(n, vector<double>(5));
		for (int j = 0; j < n; j++)
		{
			cin>>ph[j][0]>>ph[j][1]>>ph[j][2]>>ph[j][3]>>ph[j][4];
			v[0].push_back(ph[j][0]);
			v[1].push_back(ph[j][1]);
			v[2].push_back(ph[j][2]);
			v[3].push_back(ph[j][3]);
			v[4].push_back(ph[j][4]);
		}
		for (int j= 0; j < 5; j++)
		{
			sort(v[j].begin(), v[j].end());
			for (int k = 0; k < v[j].size(); k++)
			{
				if (k && v[j][k] == v[j][k-1]) continue;
			//	cout<<j<<" "<<v[j][k]<<endl;
				val[j].push_back(v[j][k]);
			}
		}
		for (int j = 0; j < n; j++)
		{
			int arr[5] = {0};
			for (int k = 0; k < 5; k++)
			{
				for (int z = 0; z < val[k].size(); z++)
				{
					if (ph[j][k] == val[k][z]) arr[k] = z+1;
				}
			}
			
			update(arr[0],arr[1],arr[2],arr[3],arr[4],1);
		}
		cout<<"Case "<<i+1<<":"<<endl;
		for (int j = 0; j < q; j++)
		{
			double arr[5];
			double arr2[5];
			int t1[5];
			int t2[5];
			for (int k = 0; k < 5; k++)
			{
				cin>>arr[k];
				for (int z = 0; z < val[k].size(); z++)
				{
					if (val[k][z] < arr[k]) {
					//	cout<<k<<" "<<z<<" "<<arr[k]<<" "<<val[k][z]<<endl;
						t1[k] = z+1;
					} else break;
				}
			}
			for (int k = 0; k < 5; k++)
			{
				cin>>arr2[k];
				for (int z = 0; z < val[k].size(); z++)
				{
					if (val[k][z] <= arr2[k]) t2[k] = z+1;
					else break;
				}
			}
			
			int res = read(t2[0],t2[1],t2[2],t2[3],t2[4]);
			for (int a=0; a<5; a++)
			{
				int t3[5];
				for (int b = 0;b < 5; b++)
				{
					if (b == a)
					{
						t3[b] = t1[b];
					}
					else
						t3[b] = t2[b];
				}
				int sub = read(t3[0],t3[1],t3[2],t3[3],t3[4]);
				res -= sub;
			}
			for (int a=0; a<5; a++)
			{
				for (int c = a+1; c < 5; c++)
				{
					int t3[5];
					for (int b = 0;b < 5; b++)
					{
						if (b == a || b == c)
						{
							t3[b] = t1[b];
						}
						else
							t3[b] = t2[b];
					}
				int sub = read(t3[0],t3[1],t3[2],t3[3],t3[4]);
		//		cout<<sub<<" ";
				res += sub;
				}
			}
	//		cout<<endl;
			for (int a=0; a<5; a++)
			{
				for (int c = a+1; c < 5; c++)
				{
					for (int d = c+1; d < 5; d++)
					{
						int t3[5];
						for (int b = 0;b < 5; b++)
						{
							if (b == a || b == c || b == d)
							{
								t3[b] = t1[b];
							}
							else
								t3[b] = t2[b];
						}
						int sub = read(t3[0],t3[1],t3[2],t3[3],t3[4]);
		//				cout<<sub<<" ";
						res -= sub;
					}
				}
			}
		//	cout<<endl;
			for (int a=0; a<5; a++)
			{
				int t3[5];
				for (int b = 0;b < 5; b++)
				{
					if (b == a)
					{
						t3[b] = t2[b];
					}
					else
						t3[b] = t1[b];
				}
				int sub = read(t3[0],t3[1],t3[2],t3[3],t3[4]);
		//		cout<<sub<<" ";
				res += sub;
			}
			res -= read(t1[0],t1[1],t1[2],t1[3],t1[4]);
			cout<<res<<endl;
		}
	}
	system("pause");
}



map<long long, int> dp[2001];

long long diff[2001];
int n, k;
long long mxDif;

int sol(int i, long long dif)
{
//	cout<<"            "<<i<<" "<<dif<<endl;
	if (i == n) return 0;
	if (dp[i].count(dif)) return dp[i][dif];
	long long change = 0;
	int res1 = (abs(dif) > mxDif) ? 10000000 : sol(i+1, diff[i+1]);
	int res2, res3;
	change = mxDif-dif;
	res2 = 1+ sol(i+1, diff[i+1]-change);
	if (dif >= 0)
	{
		change = -mxDif-dif;
		res3 = 1+ sol(i+1, diff[i+1]-change);
	}
	else
	{
		change = -mxDif-dif;
		res3 = 1+ sol(i+1, diff[i+1]-change);
	}
	
	return dp[i][dif] = min(res1, min(res2, res3));
}

int solve()
{
	for (int i = 0; i <= n; i++)
	{
		dp[i].clear();
	}
	int mini = 1000000;
	for (int i = 0; i < n; i++)
	{
		mini = min(mini, i+sol(i,0));
	}
	return mini;
}

int main()
{
	cin>>n>>k;
	vector<long long> a(n);
	long long mx = 0;
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
		if (i)
		{
			diff[i] = a[i]-a[i-1];
			mx = max(mx, abs(diff[i]));
		}
	}
	long long l = 0;
	long long h = mx + 1;
	while (l <= h)
	{
		mxDif = (l+h)/2;
		
		int res = solve();
//		cout<<mxDif<<" "<<res<<endl;
		if (res > k)
		{
			l = mxDif+1;
		}
		else if (res <= k)
		{
			h = mxDif-1;
		}
	}
	cout<<l<<endl;
//	system("pause");
}

int main()
{
	string s;
	int n;
	cin>>s>>n;
	int ch[26];
	int res[26];
	for (int i = 0; i < s.size(); i++)
	{
		ch[s[i]-'a']++;
	}
	int c = 0;
	for (int i = 0; i < 26; i++)
	{
		if (ch[i]) {c++; res[i]++;}
	}
	if (c > n) cout<<-1<<endl;
	else
	{
		n -= c;
		priority_queue<pair<double, int> > q;
		
		for (int i = 0; i < 26; i++)
		{
			q.push(make_pair(ch[i], i));
		}
		while (n-- && !q.empty())
		{
			pair<double, int> c = q.top();
			q.pop();
			res[c.second]++;
			c.first = (double)ch[c.second] / (double)res[c.second];
			q.push(c);
		}
		string result = "";
		int mx = 0;
		for (int i = 0; i < 26; i++)
		{
			for (int j = 0; j < res[i]; j++)
			{
				result += (char)(i+'a');
			}
			mx = max(mx, (int)ceil((double)ch[i]/(double)res[i]));
		}
		cout<<mx<<endl;
		cout<<result<<endl;
	}
}


int main()
{
	int s,t,m;
	cin>>s>>t>>m;
	int c = 1;
	while (s || t|| m)
	{
		vector<int> sc(s+1,0);
		vector<bool> sc2(s+1,0);
		for (int i = 0; i < s; i++)
		{
			int a,b,c;
			cin>>a>>b>>c;
			sc[a] += b+c;
		}
		for (int i = 0; i < t; i++)
		{
			int a,b;
			cin>>a>>b;
			if (b >= m)
			{
				if (!sc2[a])
				{
					sc2[a] = true;
					sc[a]++;
				}
			}
		}
		int res = 0;
		for (int i = 0; i < sc.size(); i++)
		{
			res += sc[i];
		}
		cout<<"Case "<<c<<": "<<res<<endl;
		cin>>s>>t>>m;
		c++;
	}
}


int main()
{
	int t;
	cin>>t;
	int ca = 1;
	while (t)
	{
		cout<<"Case "<<ca<<":"<<endl;
		ca++;
		vector<int> s;
		for (int i = 0; i < t; i++)
		{
			char com;
			int x;
			cin>>com>>x;
			if (com == 'B')
			{
				s.push_back(x);
			}
			else
			{
				int mn = 100000000;
				for (int j = 0; j < s.size(); j++)
				{
					mn = min(mn, s[j]%x);
				}
				for (int j = s.size()-1; j >=0; j--)
				{
					if (s[j]%x == mn)
					{
						cout<<j+1<<endl;
						break;
					}
				}
				if (s.empty()) cout<<-1<<endl;
			}
		}
		cin>>t;
		if (t) cout<<endl;
	}
}



int main()
{
	string s;
	long long n;
	cin>>n;
	cin>>s;
	vector<int> a(s.size());
	vector<long long> sum(s.size(),0);
	for (int i = 0; i < s.size(); i++)
	{
		a[i] = s[i]-'0';
		sum[i] = a[i];
		if (i) sum[i] += sum[i-1];
	}
	long long res = 0;
	vector<long long> mp(100000,0);
	vector<long long> ss;
	long long num = 0;
	for (int i = 0; i < sum.size(); i++)
	{
		num++;
		if (mp[sum[i]]) mp[sum[i]]++;
		else
		{
			mp[sum[i]] = 1;
			ss.push_back(sum[i]);
		}
		
		for (int j = 0; j < i; j++)
		{
			num++;
			if (mp[sum[i]-sum[j]]) mp[sum[i]-sum[j]]++;
			else
			{
				mp[sum[i]-sum[j]] = 1;
				ss.push_back(sum[i]-sum[j]);
			}
		}
	}
	
	for (int i = 0; i < ss.size(); i++)
	{
		
		if (ss[i] == 0) 
		{
			if (n == 0)
			{
				res += mp[ss[i]]*num;
			}
		}
		else if (n%ss[i] != 0) continue;
		else if (n/ss[i] > 90000) continue;
		else res += (long long)mp[n/ss[i]] * (long long)(mp[ss[i]]);
	}
	cout<<res<<endl;
//	system("pause");
}


int main()
{
	int k;
	cin>>k;
	int primes[14] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43};
	
	int kk = 1;
	int a = 0;
	while(kk <= k)
	{
		a++;
		kk*=2;
	}
	
	vector<long long> res;
	for (int i = 0; i < (1<<a); i++)
	{
		long long c = 1;
		for (int j = 0; j < (a+1)/2; j++)
		{
			if ((i&(1<<j)) > 0)
			{
				c*=primes[j];
			}
		}
		//cout<<c<<endl;
		res.push_back(c);
	}
	sort(res.begin(), res.end());
	vector<long long> mul = res;
	
	vector<bool> tk(2*k*k+1, false);
	for (int i = 0; i < res.size(); i++)
	{
		if (res[i] < tk.size())
		{
			if (!tk[res[i]])
				tk[res[i]] = true;
			else
			{
				for (int j = 0; j < mul.size(); j++)
				{
					if (res[i]*mul[j] < tk.size() && !tk[res[i]*mul[j]])
					{
						res[i]*=mul[j];
						//cout<<res[i]<<endl;
						tk[res[i]] = true;
						break;
					}
				}
			}
		}
	}
	for (int i = 0; i < k; i++)
	{
		if (res[i] == 1 && i > 0) {k++; continue;}
		cout<<res[i]<<" ";
	}
	system("pause");
}


typedef pair<long long,long> pll;

int main()
{
	int n;
	pll c;
	cin>>n;
	int cu = 1;
	while (n)
	{
		cout<<"Case "<<cu<<": ";
		vector<pll> po(n);
		vector<long long> r;
		set<long long> rs;
		vector<long long> c;
		set<long long> cs;
		for (int i = 0; i < n; i++)
		{
			cin>>po[i].first>>po[i].second;
			if (!rs.count(po[i].first))
			{
				rs.insert(po[i].first);
				r.push_back(po[i].first);
			}
			if (!cs.count(po[i].second))
			{
				cs.insert(po[i].second);
				c.push_back(po[i].second);
			}
		}
		sort(r.begin(), r.end());
		sort(c.begin(), c.end());
		vector<vector<int> > s(r.size() + 2, vector<int> ( c.size() + 2, 0));
		for (int i = 0; i < n; i++)
		{
			vector<long long> :: iterator inr = lower_bound(r.begin(), r.end(), po[i].first);
			vector<long long> :: iterator inc = lower_bound(c.begin(), c.end(), po[i].second);
			s[inr-r.begin() + 1][inc-c.begin() + 1]++;
		}
		vector<vector<int> > s1(r.size() + 2, vector<int> ( c.size() + 2, 0));
		vector<vector<int> > s2(c.size() + 2, vector<int> ( r.size() + 2, 0));
		for (int i = 1; i < s.size(); i++)
		{
			for (int j = 1; j < s[i].size(); j++)
			{
				s1[i][j] += s[i][j] + s1[i][j-1];
				s2[j][i] += s[i][j] + s2[j][i-1];
			}
		}
		int mx = 0;
//		cout<<"ok"<<endl;
		for (int i = 1; i < s.size(); i++)
		{
			for (int j = i+1; j < s.size(); j++)
			{
				for (int a = 1; a < s[i].size(); a++)
				{
					for (int b = a+1; b < s[i].size(); b++)
					{
						int su = s2[b][j] + s2[a][j] - (s2[b][i-1] + s2[a][i-1]) + s1[j][b] + s1[i][b] - (s1[j][a-1] + s1[i][a-1]) - (s[i][a]+s[i][b]+s[j][a]+s[j][b]);
						//cout<<i<<" "<<j<<" "<<a<<" "<<b<<" : "<<su<<endl;
						mx = max(mx, su);
					}
				}
			}
		}
		cout<<mx<<endl;
		cu++;
		cin>>n;
	}
}



vector<int> g1[30000], g2[30000];

int d2[30000];
map<string, int> mp;
int dp[30000];
int s, des;
int sol(int i)
{
	if (i == des) return 0;
	if (dp[i] != -1) return dp[i];
	int dis = d2[i];
	int r = 1000000;
	for (int j = 0; j < g1[i].size(); j++)
	{
		if (d2[g1[i][j]] < dis)
		{
			r = min(r, sol(g1[i][j]));
		}
	}
	for (int j = 0; j < g2[i].size(); j++)
	{
		if (d2[g2[i][j]] < dis)
		{
			r = min(r, 1+sol(g2[i][j]));
		}
	}
	return dp[i] = r;
}

int main()
{
	freopen("error.in","r",stdin);
	freopen("error.out","w",stdout);
	int t;
	cin>>t;
	char str[5];
	for (int i = 0; i < t; i++)
	{
		mp.clear();
		for (int j = 0; j< 30000; j++)
		{
			dp[j] = -1;
			g1[j].clear();
			g2[j].clear();
		}
		int n;
		scanf("%d",&n);
		vector<pair<string, string> > li(n);
		int co = 0;
		
		for(int j = 0; j < n; j++)
		{
			scanf("%s",str);
			li[j].first = string(str);
			scanf("%s",str);
			li[j].second = string(str);
			if (!mp.count(li[j].first))
			{
				mp[li[j].first] = co;
				co++;
			}
			if (!mp.count(li[j].second))
			{
				mp[li[j].second] = co;
				co++;
			}
		}
		for (int j = 0; j < n; j++)
		{
			g2[mp[li[j].first]].push_back(mp[li[j].second]);
			g2[mp[li[j].second]].push_back(mp[li[j].first]);
		}
		int m;
		scanf("%d",&m);
		string st;
		scanf("%s",str);
		st = string(str);
		s = mp[st];
		int la = s;
		for (int j = 0; j < m; j++)
		{
			scanf("%s",str);
			st = string(str);
			g1[la].push_back(mp[st]);
			la = mp[st];
		}
		des = la;
		queue<pair<int,int> > q;
		bool tk[10000] = {0};
		q.push(make_pair(des,0));
		tk[des] = true;
		int sp = 0;
		while (!q.empty())
		{
			pair<int,int> cu = q.front();
			q.pop();
			d2[cu.first] = cu.second;
			if (cu.first == s)
			{
				sp = cu.second;
				break;
			}
			for (int j = 0; j < g2[cu.first].size(); j++)
			{
				if (tk[g2[cu.first][j]]) continue;
				tk[g2[cu.first][j]] = true;
				q.push(make_pair(g2[cu.first][j], cu.second+1));
			}
		}
		
		int ex = sol(s);
		printf("%d\n",ex);
	}
	
}



vector<long long> seg;
long long getMx(int c, int mn, int mx, int l, int r)
{
	
}

long long upd(int c, int mn, int mx, int i, long long vl)
{
	if (mn > i || mx < i) return ;
	if (mn == mx) seg[c] = vl;
}

int main()
{
	
}




const int INF = 2000000000;
typedef pair<int,int> PII;

//Problem K: Mario Kart
int main()
{
	ifstream cin;
	cin.open("mario.in");
	ofstream cout;
	cout.open("mario2.out");
	int t;
	cin>>t;
	while (t--)
	{
		int n, m, l;
		cin>>n>>m>>l;
		vector<int> a(n);
		for (int i = 0; i < n; i++)
		{
			cin>>a[i];
		}
		sort(a.begin(), a.end());
		vector<pair<int,int> > b(m);
		for (int i = 0; i < m; i++)
		{
			cin>>b[i].second>>b[i].first;
		}
		sort(b.begin(), b.end());
		int dp[1005][105] = {0};
		for (int i=0; i <= a[n-1]; i++) for (int j = 0; j <= m; j++) dp[i][j] = 1001;
		for (int j = 0; j < m; j++) dp[0][j] = 0;

		for (int i = 1; i <= a[n-1]; i++)
		{
			if (i == b[0].first) dp[i][0] = b[0].second;
			for (int j = 1; j < m; j++)
			{
				if (i < b[j].first) dp[i][j] = dp[i][j-1];
				else dp[i][j] = min(dp[i][j-1], b[j].second+dp[i-b[j].first][j-1]);
			}
		}
		vector<vector<int> > g(n);
		for (int i = 0; i< n; i++)
			for (int j = i+1; j<n; j++)
			{
				if (dp[a[j]-a[i]][m-1] <= l)
				{
					g[i].push_back(j);
					g[j].push_back(i);
				}
			}
		queue<pair<int,int> > q;
		vector<bool> tk(n,false);
		q.push(make_pair(0,0));
		int res = -1;
		tk[0] = true;
		while (!q.empty())
		{
			pair<int,int> cu = q.front();
			q.pop();
			if (cu.first == n-1)
			{
				res = cu.second;
				break;
			}
			for (int j = 0; j < g[cu.first].size(); j++)
			{
				if (tk[g[cu.first][j]]) continue;
				tk[g[cu.first][j]] = true;
				q.push(make_pair(g[cu.first][j], cu.second+1));
			}
		}
		cout<<res<<endl;
	}
}


map<int,int> dp[151][151];
pair<pair<int,int>,int> edges[3001];
vector<vector<int> > g;
int sol(int ed, int rem, int to)
{
	if (rem == 0) return -2;
	
	int res = edges[ed].second;
	int sc = edges[ed].first.second;
	if (sc == to) return res;
	if (dp[rem][to].count(ed)) return dp[rem][to][ed];
	int mn = 1000000000;
	for (int i = 0; i < g[sc].size(); i++)
	{
		int cu = sol(g[sc][i], rem-1, to);
		if (cu > 0) mn = min(cu, mn);
	}
	if (mn == 1000000000) return dp[ed][rem][to] = -2;
	else dp[ed][rem][to] = mn;
}

int main()
{
		ifstream cin;
	cin.open("path.in");
	ofstream cout;
	cout.open("path2.out");
	int t;
	cin>>t;
	while (t--)
	{
		for (int i = 0; i < 151; i++) for (int j = 0; j < 151; j++) dp[i][j].clear();
		int n,m,q;
		cin>>n>>m>>q;
		g = vector<vector<int> >(n);
		for (int i = 0; i < m; i++)
		{
			cin>>edges[i].first.first>>edges[i].first.second>>edges[i].second;
			edges[i].first.first--;
			edges[i].first.second--;
			g[edges[i].first.first].push_back(i);
		}
		for (int i = 0; i < q; i++)
		{
			int s,t,c;
			cin>>s>>t>>c;
			int res = 1000000000;
			for (int j = 0; j < g[s].size(); j++)
			{
				int r = sol(g[s][j],c,t);
				if (r < 0) continue;
				res = min(res, r);
			}
			if (res == 1000000000) cout<<-1<<endl;
			else cout<<res<<endl;
		}
	}
}


int main()
{
	int t;
	cin>>t;
	while (t--)
	{
		long long n,m,x;
		cin>>n>>m>>x;
		if (n%m == x%m) cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
	}
}



int main()
{
//	ifstream cin;
//	cin.open("gift.in");
	int ph[12][12][12][12][12] = {0};
	double pho[10000][5];
	double w[11];
	double h[11];
	double p[11];
	double t[11];
	double we[11];
	int te;
	cin>>te;
	for (int i = 0; i < te; i++)
	{
		int n,q;
		cin>>n>>q;
		set<double> s[5];
		for (int z=0; z < 12; z++) for (int j = 0; j < 12; j++) for (int k = 0; k < 12; k++) for (int x = 0; x < 12; x++) for (int y = 0; y < 12; y++) ph[z][j][k][x][y] = 0;
		for (int z = 0; z < 11; z++)
			p[z] = w[z] = h[z] = t[z] = we[z] = 100000000;
		for (int j = 0; j < n; j++)
		{
			for (int k = 0; k < 5; k++)
			{
				cin>>pho[j][k];
				s[k].insert(pho[j][k]);
			}
		}
		
		set<double>::iterator it = s[0].begin();
		p[0] = h[0] = w[0] = t[0] = we[0] = -1;
		for (int j = 1; j <= s[0].size(); j++)
		{
			p[j] = (*it);
			it++;
		}
		it = s[1].begin();
		for (int j = 1; j <= s[1].size(); j++)
		{
			h[j] = (*it);
			it++;
		}
		it = s[2].begin();
		for (int j = 1; j <= s[2].size(); j++)
		{
			w[j] = (*it);
			it++;
		}
		it = s[3].begin();
		for (int j = 1; j <= s[3].size(); j++)
		{
			t[j] = (*it);
			it++;
		}
		it = s[4].begin();
		for (int j = 1; j <= s[4].size(); j++)
		{
			we[j] = (*it);
			it++;
		}
		for (int j = 0; j < n; j++)
		{
			int a = 0;
			for (a = 0; a < 11; a++)
			{
				if (pho[j][0] == p[a])
				{
					break;
				}
			}
			int b = 0;
			for (b = 0; b < 11; b++)
			{
				if (pho[j][1] == h[b])
				{
					break;
				}
			}
			int c = 0;
			for (c = 0; c < 11; c++)
			{
				if (pho[j][2] == w[c])
				{
					break;
				}
			}
			int d = 0;
			for (d = 0; d < 11; d++)
			{
				if (pho[j][3] == t[d])
				{
					break;
				}
			}
			int e = 0;
			for (e = 0; e < 11; e++)
			{
				if (pho[j][4] == we[e])
				{
					break;
				}
			}
			ph[a][b][c][d][e]++;
		}

		for (int a = 1; a < 12; a++)
		{
			for (int b = 1; b < 12; b++)
			{
				for (int c = 1; c < 12; c++)
				{
					for (int d = 1; d < 12; d++)
					{
						for (int e = 1; e < 12; e++)
						{
							ph[a][b][c][d][e] += ph[a][b][c][d][e-1] + ph[a][b][c][d-1][e] + ph[a][b][c-1][d][e]+ ph[a][b-1][c][d][e]+ph[a-1][b][c][d][e];
							ph[a][b][c][d][e] -= ph[a-1][b-1][c][d][e] + ph[a-1][b][c-1][d][e] + ph[a-1][b][c][d][e-1] + ph[a-1][b][c][d-1][e];
							ph[a][b][c][d][e] -= ph[a][b][c][d-1][e-1];
							ph[a][b][c][d][e] -= ph[a][b][c-1][d-1][e] + ph[a][b][c-1][d][e-1];
							ph[a][b][c][d][e] -= ph[a][b-1][c-1][d][e] + ph[a][b-1][c][d][e-1] + ph[a][b-1][c][d-1][e];
							ph[a][b][c][d][e] += 2*ph[a][b][c-1][d-1][e-1] + 2*ph[a][b-1][c][d-1][e-1] + 2*ph[a][b-1][c-1][d-1][e] + 2*ph[a][b-1][c-1][d][e-1];
							ph[a][b][c][d][e] += 2*ph[a-1][b-1][c-1][d][e];
							ph[a][b][c][d][e] += 2*(ph[a-1][b-1][c][d][e-1] + ph[a-1][b-1][c][d-1][e]);
							ph[a][b][c][d][e] += 2*(ph[a-1][b][c][d-1][e-1] + ph[a-1][b][c-1][d-1][e] + ph[a-1][b][c-1][d][e-1]);
							ph[a][b][c][d][e] -= 7*(ph[a-1][b-1][c-1][d-1][e] + ph[a-1][b-1][c-1][d][e-1] + ph[a-1][b-1][c][d-1][e-1]+ ph[a-1][b][c-1][d-1][e-1]+ph[a][b-1][c-1][d-1][e-1]);
							ph[a][b][c][d][e] += 34*ph[a-1][b-1][c-1][d-1][e-1];
						}
					}
				}
			}
		}
		cout<<ph[11][11][11][11][11]<<endl;
		cout<<"Case "<<i+1<<":"<<endl;
		
		for (int j = 0; j < q; j++)
		{
			double ql[5],qh[5];
			for (int k = 0; k < 5; k++)
			{
				cin>>ql[k];
			}
			for (int k = 0; k < 5; k++)
			{
				cin>>qh[k];
			}
			int ql2[5] = {0},qh2[5]={0};
			for (int k = 0; k < 12; k++)
			{
				if (p[k] < ql[0]) ql2[0]++;
				if (p[k] <= qh[0]) qh2[0]++;
			}
			for (int k = 0; k < 12; k++)
			{
				if (h[k] < ql[1]) ql2[1]++;
				if (h[k] <= qh[1]) qh2[1]++;
			}
			for (int k = 0; k < 12; k++)
			{
				if (w[k] < ql[2]) ql2[2]++;
				if (w[k] <= qh[2]) qh2[2]++;
			}
			for (int k = 0; k < 12; k++)
			{
				if (t[k] < ql[3]) ql2[3]++;
				if (t[k] <= qh[3]) qh2[3]++;
			}
			for (int k = 0; k < 12; k++)
			{
				if (we[k] < ql[4]) ql2[4]++;
				if (we[k] <= qh[4]) qh2[4]++;
			}
			int a,b,c,d,e,f,g,h,x,y;
			a = ql2[0];
			b = ql2[1];
			c = ql2[2];
			d = ql2[3];
			e = ql2[4];
			f = qh2[0];
			g = qh2[1];
			h = qh2[2];
			x = qh2[3];
			y = qh2[4];
			int res = ph[qh2[0]-1][qh2[1]-1][qh2[2]-1][qh2[3]-1][qh2[4]-1];
			res -=ph[qh2[0]-1][qh2[1]-1][qh2[2]-1][qh2[3]-1][ql2[4]-1];
			res -=ph[qh2[0]-1][qh2[1]-1][qh2[2]-1][ql2[3]-1][qh2[4]-1];
			res -=ph[qh2[0]-1][qh2[1]-1][ql2[2]-1][qh2[3]-1][qh2[4]-1];
			res -=ph[qh2[0]-1][ql2[1]-1][qh2[2]-1][qh2[3]-1][qh2[4]-1];
			res -=ph[ql2[0]-1][qh2[1]-1][qh2[2]-1][qh2[3]-1][qh2[4]-1];
			res += ph[a-1][b-1][h-1][x-1][y-1] + ph[a-1][g-1][c-1][x-1][y-1] + ph[a-1][g-1][h-1][x-1][e-1] + ph[a-1][g-1][h-1][d-1][y-1];
			res += ph[f-1][g-1][h-1][d-1][e-1];
			res += ph[f-1][g-1][c-1][d-1][y-1] + ph[f-1][g-1][c-1][x-1][e-1];
			res += ph[f-1][b-1][c-1][x-1][y-1] + ph[f-1][b-1][h-1][x-1][e-1] + ph[f-1][b-1][h-1][d-1][y-1];
			
			res -= 2*ph[f-1][g-1][c-1][d-1][e-1] + 2*ph[f-1][b-1][h-1][d-1][e-1] + 2*ph[f-1][b-1][c-1][d-1][y-1] + 2*ph[f-1][b-1][c-1][x-1][e-1];
			res -= 2*ph[a-1][b-1][c-1][x-1][y-1];
			res -= 2*(ph[a-1][b-1][h-1][x-1][e-1] + ph[a-1][b-1][h-1][d-1][y-1]);
			res -= 2*(ph[a-1][g-1][h-1][d-1][e-1] + ph[a-1][g-1][c-1][d-1][y-1] + ph[a-1][g-1][c-1][x-1][e-1]);
			
			res += 7*(ph[a-1][b-1][c-1][d-1][y-1] + ph[a-1][b-1][c-1][x-1][e-1] + ph[a-1][b-1][h-1][d-1][e-1]+ ph[a-1][g-1][c-1][d-1][e-1]+ph[f-1][b-1][c-1][d-1][e-1]);
			res -= 27*ph[a-1][b-1][c-1][d-1][e-1];
			cout<<res<<endl;
		}
		//p,h,w,t,we
	}
//	system("pause");
}


int main()
{
	int b;
	int a;
	int bb;
	cin>>a>>bb;
	int res = 0;
	b = 0;
	while (a)
	{
		
		res += a;
		a += b;
		b = a%bb;
		a/=bb;
	}
	cout<<res<<endl;
//	system("pause");
}


int main()
{
	int n;
	 cin>>n;
	 vector<int> a(n);
	 for (int i = 0; i < n; i++)
	 {
		cin>>a[i];
	 }
	 string res = "";
	 for (int i = 0; i< n; i++)
	 {
		
		for (int j = 0; j < a[i]; j++)
		{
			res += 'P';
		}
		if (i < n-1)
			res += 'R';
	 }
	 cout<<res[0];
	 for (int i = 1; i < res.size(); i++)
	 {
		 if (i < a[0] && res[i] == 'P' && res[i-1] == 'P')
		 {
			cout<<"RL";
		 }
		 else if (res[i] == 'P' && res[i-1] == 'P')
			cout<<"LR";
		cout<<res[i];
	 }
	 cout<<endl;
}
*/

int main()
{
	int n;
	cin>>n;
	vector<pair<int,int> > a(n);
	for (int i = 0; i < n; i++)
	{
		cin>>a[i].first;
		a[i].second = i;
	}
	sort(a.begin(), a.end());
	int mx = 0;
	for (int i = 0; i < n; i++)
	{
		a[i].first = max(mx+1, a[i].first);
		mx = a[i].first;
	}
	for (int i = 0; i < n; i++)
	{
		swap(a[i].first, a[i].second);
	}
	sort(a.begin(), a.end());
	cout<<a[0].second;
	for (int i = 1; i < n; i++)
	{
		cout<<" "<<a[i].second; 
	}
	cout<<endl;
}