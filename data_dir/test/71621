#include <bits/stdc++.h>
using namespace std;
#define read            freopen("C:\\Users\\Dell\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\Dell\\Desktop\\out.txt", "w", stdout)
#define pii             pair<int, int>
#define pll             pair<LL, LL>
#define inf             2111111111
#define linf            9111111111111111111
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pn              printf("\n");
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b ,c)    printf("%d %d %d\n", a, b, c)
#define MP              make_pair
#define OP(a, b)        make_pair(MIN(a, b), MAX(a, b))
#define vi              vector<int>
#define vll             vector<LL>
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of int
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

/* ***************************************************************************************
   *************************************************************************************** */
const int M=5010;
char A[M][M];
int cnt[M][M];
vi temp;
int main()
{
#ifndef ONLINE_JUDGE
    read;
    //int->LL :: inf->linf
#endif
    int i, j, k, row, col, maxx=0, tmax=0;

    in2(row, col);
    for (i=0; i<row; i++) ins(A[i]);

    for (i=0; i<row; i++)
    {
        cnt[i][0]=A[i][0]-'0';
        for (j=1; j<col; j++) cnt[i][j]=A[i][j]=='0'?0:cnt[i][j-1]+1;
    }

    for (i=0; i<col; i++)
    {
        for (j=0; j<row; j++) temp.pb(cnt[j][i]);
        sort(all(temp), greater<int>());

        for (j=0; j<row; j++) tmax=max(tmax, temp[j]*(j+1));

        maxx=max(maxx, tmax);
        temp.cl;
        tmax=0;
    }

    pr(maxx);

return 0;
}
