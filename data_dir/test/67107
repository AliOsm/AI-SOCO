#include <bits/stdc++.h>

using namespace std  ;

class Trie
{
public:
    struct Node
    {
        Node *child[2] ;
        int cnt = 0 ;
    };
    Node *root = new Node();

    void add(int x , int dx)
    {
        Node *curr = root ;
        for(int i = 29 ; i >= 0 ; i--) {
            if (curr->child[(x >> i) & 1] == NULL)
                curr->child[(x >> i) & 1] = new Node() ;
            curr = curr->child[(x >> i) & 1] ;
            curr->cnt += dx;
        }
    }
    int getWarriors(int p , int l)
    {
        Node *curr = root ;
        int ans = 0;
        for(int i = 29 ; i >= 0 ; i--)
        {
            int b1 = (p >> i) & 1;
            int b2 = (l >> i) & 1;
            if(b2 == 0)
            {
                if(curr->child[b1] == NULL) return ans ;
                curr = curr->child[b1] ;
            }
            else
            {
                if(curr->child[b1] != NULL) ans += curr->child[b1]->cnt ;
                if(curr->child[b1 ^ 1] == NULL) return ans ;
                curr = curr -> child[b1 ^ 1] ;
            }
        }
        return ans ;
    }
};
int main()
{
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr) ;
    Trie t ;
    int q ;
    cin >> q ;
    while(q--)
    {
        int type , p;
        cin >> type >> p;
        if(type == 1)
            t.add(p , 1) ;
        else if(type == 2)
            t.add(p , -1) ;
        else {
            int l ;
            cin >> l ;
            cout << t.getWarriors(p , l) << '\n';
        }
    }
    return 0 ;
}