#include<bits/stdc++.h>
#define pb push_back
#define pf push_front
#define F first
#define S second
#define MOD 1000000007
#define rw freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
#define ll long long
#define acm ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
int n,m,k,dx[]= {0,0,1,-1},dy[]= {1,-1,0,0};
string arr[55]= {};
deque<pair<int,vector<pair<int,int>>>>ans;
vector<pair<int,int>>ts;
bool vis[55][55]= {};
inline int ongrid(int x,int y)
{
    if (x<0||y<0||x>n||y>m)
        return -1;
    else if (!vis[x][y]&&arr[x][y]!='*')
        return 1;
    return 0;
}
bool is=false;
void dfs(int x,int y)
{
    vis[x][y]=true;
    for (int i=0; i<4; ++i)
    {
        int xx=x+dx[i];
        int yy=y+dy[i];
        if (ongrid(xx,yy)==-1)
            is=true;
        else if (ongrid(xx,yy))
        {
            dfs(xx,yy);
        }
    }
    ts.pb({x,y});
}
int main()
{
    acm;
    cin>>n>>m>>k;
    for (int i=0; i<n; ++i)
        cin>>arr[i];
    for (int i=0; i<n; ++i)
    {
        for (int j=0; j<m; ++j)
        {
            if (arr[i][j]=='.'&&!vis[i][j])
            {
                ts.clear();
                is=false;
                dfs(i,j);
                if (is)
                    continue;
                ans.pb({ts.size(),ts});
            }
        }
    }
    sort(ans.begin(),ans.end());
    int val=0;
    while((int)ans.size()>k)
    {
        for (auto u:ans[0].S)
        {
            arr[u.F][u.S]='*';
        }
        val+=ans[0].F;
        ans.pop_front();
    }
    cout<<val<<"\n";
    for (int i=0; i<n; ++i)
        cout<<arr[i]<<"\n";
    return 0;
}