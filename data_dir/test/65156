//Pham Huu Canh
//E. The Art of Dealing with ATM
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define MP make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "e.inp"
#define foo "e.out"
#define MOD 1000000007

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;

bool mark[10000005];
int a[5005];
int n, k;

int cal(int x){
    int i, j, h, res, r, val;
    
    res = maxty;
    fori(i, n)  repi(j, 0, k){
        r = x - j * a[i];
        if (r < 0)  break;
        if (r == 0) res = timmin(res, j);
        else{
            for (h = 1; j + h <= k; h++) if (r % h == 0){
                val = r / h;
                if (val <= 10000000 && mark[val])
                    res = timmin(res, j + h);
            }
        }
    }
    if (res <= k)   return res;
    return -1;
}

void input()
{
    int i, nq, x;
    
    scanf("%d %d", &n, &k);
    fori(i, n)  scanf("%d", &a[i]), mark[a[i]] = true;
    
    scanf("%d", &nq);
    while (nq--){
        scanf("%d", &x);
        printf("%d\n", cal(x));
    }
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}

