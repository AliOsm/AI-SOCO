#include <bits/stdc++.h>

using namespace std;

const long long MOD=(int)1e9+7;

long long power(long long b,long long p){
    if(!p)return 1;
    long long ret=power(b,p/2);
    ret=(ret*ret)%MOD;
    if(p&1LL)ret=(ret*b)%MOD;
    return ret;
}
/*bool isPrime(int x){
    for(int i=2;i*i<=x;i++){
        if(x%i==0)return false;
    }
    return true;
}*/
int main(){
    //cout<<power(2,3)<<endl;
    //cout<<(2*power(2,MOD-2))%MOD<<endl;
    /*if(isPrime(MOD))printf("YES\n");
    else printf("NO\n");*/
    int n;
    scanf("%d",&n);

    long long fact[n+5];
    fact[0]=1;
    for(long long i=1;i<=n;i++)fact[i]=(i*fact[i-1])%MOD;


    int arr[n+5];
    for(int i=1;i<=n;i++)scanf("%d",&arr[i]);
    sort(arr+1,arr+1+n);

    vector<pair<long long,long long> >vec;
    for(int i=1;i<=n;){
        int cnt=1,temp=arr[i];
        while(arr[++i]==temp && i<=n)++cnt;
        vec.push_back(make_pair(temp,cnt));
    }

    int sum=0;
    long long ans=0,add;
    for(int i=0;i<vec.size()-1;i++){
        //cout<<vec[i].first<<" "<<vec[i].second<<endl;
        int prev=sum;
        sum+=vec[i].second;
        int rem=n-prev-1;
        //cout<<prev<<" "<<sum<<" "<<rem<<endl;
        add=(fact[rem]*vec[i].first)%MOD;
        add=(add*vec[i].second)%MOD;
        //cout<<add<<endl;
        add=(add*fact[n])%MOD;
        //cout<<add<<endl;
        //cout<<n-prev<<endl;
        add=(add*power(fact[n-prev],MOD-2LL))%MOD;
        ans+=add;
        ans%=MOD;

        //cout<<ans<<endl<<endl;;
    }
    printf("%lld\n",ans);

    return 0;
}
