#include <bits/stdc++.h>

using namespace std;


int main() {
  #ifdef LOCAL
  freopen("sol.in", "r", stdin);
  freopen("sol.out", "w+", stdout);
  #endif
  ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
  int n, k;
  scanf("%d %d", &n, &k);
  const int MAX = 200010;
  vector<int> have(MAX);
  for (int i = 0; i < n; i++) {
    int x;
    scanf("%d", &x);
    have[x]++;
  }
  vector<pair<int, int>> b;
  int low = 0, high = 0, mid;
  for (int i = 0; i < MAX; i++) {
    if (have[i] > 0) {
      b.push_back(make_pair(i, have[i]));
    }
    high = max(high, have[i]);
  }
  int m = (int) b.size();
  function<bool(int)> ok = [&](int x) {
    int counter = 0;
    for (int i = 0; i < m; i++) {
      counter += b[i].second / x;
    }
    return counter >= k;
  };
  while (low < high) {
    mid = (low + high + 1) >> 1;
    if (ok(mid)) {
      low = mid;
    } else {
      high = mid - 1;
    }
  }
  vector<int> ans;
  for (int i = 0; i < m; i++) {
    int t = b[i].second / low;
    for (int j = 0; j < t; j++) {
      ans.push_back(b[i].first);
    }
  }
  assert((int) ans.size() >= k);
  for (int i = 0; i < k; i++) {
    printf("%d ", ans[i]);
  }
  puts("");
  return 0;
}