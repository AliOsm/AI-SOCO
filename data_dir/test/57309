#include <bits/stdc++.h>
//#include <ext/rope>

#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")

#define endl "\n"
#define fi first
#define se second
#define pb push_back
#define last(s) (s)[(int)((s).size())-1]
#define prelast(s) (s)[(int)((s).size())-2]
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define elif else if
#define left asdasd
#define next zaza
//#define prev azaz
#define cclear cout<<flush;
#define x0 kerker
//#define time chas
#define y0 lolik
#define x1 ashkjl
#define y1 fakakaka
#define y2 ololol
#define x2 jejejejej
#define kchay ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define files freopen("sequence.in", "r", stdin);freopen("sequence.out", "w", stdout);
#define ref svyazi
#define int long long
#define lint __int128
#define ii pair<int, int>
#define llong long long
#define ld long double
#define list spisok
#define tm kozerog


const ld eps = 1e-9;
const ld Pi = acos(-1);
const int md = (1e9+7);
// const int fakmd = 998244353;
// const int mod = (1 << 30) + 1;

using namespace std;
//using namespace __gnu_cxx;

/*


*/

vector<ii> v[2020];
map<int, int> m;
int p[2020], a[2020], n, ans, ls[2020], dp[2020];

int32_t main() {
    kchay;

    cin >> n;

    for(int i = 1; i <= n; i++) {
        cin >> a[i];
        p[i] = p[i - 1] + a[i];
    }



    for(int i = 1; i <= n + 1; i++) {
        for(auto& j : v[i]) {
            m[j.fi] = max(m[j.fi], j.se);
        }
        v[i].clear();
        for(int j = i; j <= n; j++) {
            int cur = p[j] - p[i - 1];
            v[j + 1].pb({cur, m[cur] + 1});
        }
    }

    int it = 0;

    for(auto i : m) {
        if(ans < i.se) {
            ans = i.se;
            it = i.fi;
        }
    }

    vector<int> v[2020];
    cout << ans << endl;

    for(int i = 1; i <= n; i++) {
        for(int j = i; j <= n; j++) {
            if(p[j] - p[i - 1] == it) {
                ls[j] = max(ls[j], i);
            }
        }
    }


    for(int i = 1; i <= n; i++) {
        dp[i] = max(dp[i - 1], dp[i]);
        if(ls[i]) {
            dp[i] = max(dp[i], dp[ls[i] - 1] + 1);
        }
    }


    int cur = ans;
    vector<ii> vans;
    for(int i = n; i >= 1; i--) {
        if(dp[i] == ans && ls[i] && dp[ls[i] - 1] == dp[i] - 1) {
            vans.pb({ls[i], i});
            i = ls[i];
            ans--;
        }
    }

    for(auto& i : vans) {
        cout << i.fi << " " << i.se << endl;
    }




    return 0;
}

/*
You're one microscopic cog
in his catastrophic plan
Designed and directed by his red right hand
*/
