#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 123;

const int mod = 1e9 + 7;

int n, a[N], k;

long long l;
                                                            
vector < int > d[N], s[N];

void compress()
{
    vector < pair < int, int > > v;
    for (int i = 1;i <= n;i++)
        v.push_back (make_pair (a[i], i));
    sort (v.begin (), v.end ());
    for (int i = 0, num = 0;i < v.size ();i++)
    {
        if (i == 0 || v[i].first != v[i - 1].first) num++;
        a[v[i].second] = num;
    }
}

void calc()
{
    for (int i = 0;i <= k;i++)
        d[i].resize (n + 1), s[i].resize(n + 1);
    for(int i = 0;i <= n;i++) s[0][i] = 1;
    for (int i = 1;i <= k;i++)
    {
      for (int j = 1;j <= n;j++) d[i][a[j]] = (d[i][a[j]] + s[i - 1][a[j]]) % mod;
        for (int j = 1;j <= n;j++) s[i][j] = (s[i][j - 1] + d[i][j]) % mod;
    }
}

int main ()
{
    scanf ("%d%I64d%d", &n, &l, &k);
    for (int i = 1;i <= n;i++) scanf ("%d", &a[i]);
    compress();
    calc();
    long long bl = l / n, rem = l % n;
    int ans = 0;
    for (int i = 1;i <= min(bl, 1ll * k);i++) ans = (ans + (1ll * ((bl - i + 1) % mod) % mod * s[i][n])) % mod;
    for (int i = 1;i <= min(bl + 1, 1ll * k);i++)
        for (int j = 1;j <= rem;j++)
            ans = (ans + s[i - 1][a[j]]) % mod;
    cout << ans;
    return 0;           
}