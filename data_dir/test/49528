#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
const int inf_int = 1e9 + 100;
const ll inf_ll = 8e18;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef long double dbl;
#define pb push_back
const double pi = 3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz(a) (int(a.size()))
#define all(a) a.begin(),a.end()
bool debug = 0;
const int MAXN = 2e5+100;
const int LOG = 19;
const ll mod = 998244353;
const int MX = 1e7;

void bad(){
    cout <<"impossible";
    exit(0);
}

int a[MAXN];
vector<int> g[MAXN];
char pr[MAXN];
vector<int> prime;

void sieve(){
    for(int i=2;i<MAXN;++i){
        if(!pr[i]){
            prime.pb(i);
            if(1ll * i * i  < MAXN){
                for(int e=i*i;e<MAXN;e=e+i){
                    pr[e] = 1;
                }
            }

        }
    }
}

vector<int> get(int x){
    vector<int> res;
    for(int i=0;prime[i] * prime[i]<=x;++i){
        if(x%prime[i]==0){
            res.pb(prime[i]);
            while(x%prime[i]==0){
                x=x/prime[i];
            }
        }
    }
    if(x > 1)
        res.pb(x);
    return res;
}


map<int,int> mp[MAXN];
int ans = 0;
void dfs(int v,int p){
    int cnt = 0;
    vector<int> vals = get(a[v]);
    for(int to:g[v]){
        if(to==p)
            continue;
        dfs(to,v);
        for(int x:vals){
            if(mp[to].count(x)){
                if(mp[v].count(x)){
                    ans = max(ans, mp[v][x] + mp[to][x]);
                    mp[v][x] = max(mp[v][x],mp[to][x]+1);
                } else{
                    mp[v][x] = mp[to][x]+1;
                    ans = max(ans, mp[v][x]);
                }
            }
        }
        cnt++;
    }
    for(int x:vals){
        mp[v][x] = max(mp[v][x],1);
        ans =max(ans,1);
    }
}

void solve() {
    sieve();
    int n;
    cin >> n;
    for(int i=1;i<=n;++i){
        cin >> a[i];
    }
    for(int i=1;i<=n-1;++i){
        int a,b;
        cin >> a >> b;
        g[a].pb(b);
        g[b].pb(a);
    }

    dfs(1,-1);

    cout << ans;

}

signed main() {
#ifdef zxc
    debug = 1;
    freopen("../input.txt", "r", stdin);
    //freopen("output1.txt","w",stdout);
#else
#endif //zxc
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cout.setf(ios::fixed);
    cout.precision(20);


    int t = 1;
    while (t--)
        solve();
}