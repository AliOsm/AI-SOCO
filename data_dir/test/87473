#include<bits/stdc++.h>

using namespace std;
#define FTB(i,a,b) for(LL i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(LL i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(LL i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(LL i=a,_b=b;i>_b;i--)
#define endl "\n"
#define debug cout<<"debug\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define PI 3.1415926535897
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define y1 aghksdmlsjdfjavljvlckdfmg
#define lamtron(n) fixed<<setprecision(n)
#define ALL(s) s.begin(),s.end()
#define ONLINE_JUDGE gshysrthrrthbd

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
template<class T> inline T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}

typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<II> VII;
typedef vector<bool> VB;




LL l,res,tmp,g;
string s;
stack<pair<LL,LL>> st;


int main(){
    ios::sync_with_stdio(false);cin.tie(0);
    #ifndef ONLINE_JUDGE
    	freopen("input.txt","r",stdin);
    	freopen("output.txt","w",stdout);
    #endif
    cin>>l;
    LL g=(1LL<<32)-1;
    while(l--){
        cin>>s;
        if(s[0]=='a'){
            st.push({1,0});
        }
        else if(s[0]=='f'){
            LL x;cin>>x;
            st.push({x,-1});
        }
        else{
            LL tmp=0;
            while(st.size()&&st.top().se==0){
                tmp+=st.top().fi;
                if(tmp>g){
                    cout<<"OVERFLOW!!!";
                    return 0;
                }
                st.pop();
            }
            tmp*=st.top().fi;
            if(tmp>g){
                cout<<"OVERFLOW!!!";
                return 0;
            }
            st.pop();st.push({tmp,0});

        }
    }
    while(st.size()){
        res+=st.top().fi;st.pop();
        if(res>g){
            cout<<"OVERFLOW!!!";
            return 0;
        }
    }
    cout<<res;

	return 0;
}