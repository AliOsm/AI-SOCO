#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<unordered_map>
using namespace std;
struct st {
    int l;
    int r;
    char ty;
    st(int l_, int r_) {
        l = l_;
        r = r_;
    }
};
vector<st> V;
void rect(vector<st> v) {
    for (int i = 1;i < v.size();i++) {
        if (v[i].r != v[0].r) {
            return;
        }
    }
    int sum = 0;
    int sum2 = 0;
    for (int i = 0;i < v.size();i++) {
        sum += v[i].l;
        sum2 = v[i].r;
    }
    if (sum != sum2) {
       return;
    }
    printf("%d\n", sum);
    for (int i = 0;i < v.size();i++) {
        for (int j = 0;j < v[i].l;j++) {
            for (int k = 0;k < v[i].r;k++) {
                putchar(v[i].ty);
            }
            puts("");
        }
    }
    exit(0);
}
void rect2(vector<st> v) {
    int l = v[0].r + v[1].r;
    if (l != v[2].r) {
        return;
    }
    if (v[0].l != v[1].l) {
        return;
    }
    int sum = v[0].l+v[2].l;
    int sum2 = v[0].r + v[1].r;
    if (sum != sum2) {
        return;
    }
    printf("%d\n", sum);
    for (int i = 0;i < v[0].l;i++) {
        for (int j = 0;j < v[0].r;j++) {
            putchar(v[0].ty);
        }
        for (int j = 0;j < v[1].r;j++) {
            putchar(v[1].ty);
        }
        puts("");
    }
    for (int i = 0;i < v[2].l;i++) {
        for (int j = 0;j < v[2].r;j++) {
            putchar(v[2].ty);
        }
        puts("");
    }
    exit(0);
}
int main() {
    for (int i = 0;i < 3;i++) {
        int a, b;
        scanf("%d%d", &a, &b);
        V.push_back(st(a, b));
    }
    V[0].ty = 'A';
    V[1].ty = 'B';
    V[2].ty = 'C';
    for (int i = 0;i < (1 << 3);i++) {
        vector<st> v;
        v.clear();
        for (int j = 0;j < 3;j++) {
            if ((i >> j) & 1) {
                v.push_back(V[j]);
            }
            else {
                v.push_back(V[j]);
                swap(v.back().l, v.back().r);
            }
        }
        vector<int> vv;
        vv.push_back(0);
        vv.push_back(1);
        vv.push_back(2);
        do {
            vector<st> tmp;
            tmp.clear();
            for (int i = 0;i < vv.size();i++) {
                tmp.push_back(v[vv[i]]);
            }
            rect(tmp);
            rect2(tmp);
        } while (next_permutation(vv.begin(), vv.end()));
    }
    puts("-1");
    return 0;
}