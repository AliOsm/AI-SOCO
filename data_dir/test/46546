#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef long long int ll;
typedef vector< pair<int, int> > vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long int> vll;
typedef pair<int, int> pii;

const ll INF = 1e18;
const ll inf = 1e9;
const ll MOD = 1e9 + 7;
const ll nax = 1000000 + 10;

vi graph[nax];
ll n;
ll dp1[nax], dp2[nax], b[nax];

void dfs(ll v, ll par = -1)
{
    dp1[v] = b[v];
    dp2[v] = 1 - b[v];

    for(auto x: graph[v])
    {
        if(x == par) continue;
        dfs(x, v);
        ll old1 = dp1[v];
        ll old2 = dp2[v];
        dp1[v] = dp2[v] = 0;
        // if x is included
        dp1[v] += (old1 % MOD * dp2[x]) % MOD;
        dp1[v] += (old2 % MOD * dp1[x]) % MOD;
        dp2[v] += (old2 % MOD * dp2[x]) % MOD;
        // if x is not included
        dp1[v] += (old1 % MOD * dp1[x]) % MOD;
        dp2[v] += (old2 % MOD * dp1[x]) % MOD;
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin >> n;
    for(ll i = 2; i <= n; i++)
    {
        ll u; cin >> u;
        graph[u + 1].pb(i);
        graph[i].pb(u + 1);
    }
    for(ll i = 1; i <= n; i++) cin >> b[i];
    dfs(1);
    cout << dp1[1] % MOD;
    return 0;
}
