/**
 * @author khokharnikunj8
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class CMindControl {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n, m, k;
        in >> n >> m >> k;
        vector<int> ar(n);
        for (int i = 0; i < n; i++) in >> ar[i];
        k = min(k, m - 1);
        int slidingsize = n - k;
        int rem = m - k - 1;
        int ans = 0;
        for (int i = 0; i + slidingsize - 1 < n; i++) {
            int temp = 0;
            int temp2 = rem;
            int rep = INT32_MAX;
            while (temp <= rem) {
                rep = min(rep, max(ar[i + temp], ar[i + slidingsize - 1 - temp2]));
                temp++;
                temp2--;
            }
            ans = max(ans, rep);
        }
        out << ans << "\n";
    }
};


int main() {
    CMindControl solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    int n;
    in >> n;
    for (int i = 0; i < n; ++i) {
        solver.solve(in, out);
    }

    return 0;
}
