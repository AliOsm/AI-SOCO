#include <iostream>
#include <cstdio>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <cmath>
#include <vector>
#include <cstring>

using namespace std;

typedef long long ll;
typedef long double ld;

int n, m, s, d;
int a[200500];
vector < int > vec;
int l, r;

void ERROR() {
    printf ("IMPOSSIBLE");
    exit(0);
}

int main() {
    scanf ("%d%d%d%d", &n, &m, &s, &d);
    for (int i = 1; i <= n; i ++)
        scanf ("%d", &a[i]);
    sort (a + 1, a + 1 + n);
    if (d < 2) ERROR();

    int full = 0;
    int now = 0;
    for (int i = 1; i <= n; i ++) {

        int newDist = a[i] - 1 - now;
        if (newDist < s) {
            if (vec.empty()) ERROR();
            int predLen = vec.back();
            int newLen = predLen + newDist + 2;
            if (newLen > d) ERROR();
            vec.back() = newLen;
            now = a[i] + 1;
            full = full - predLen + newLen;
            continue;
        }
        vec.push_back(newDist);
        vec.push_back(2);
        now = a[i] + 1;
        full += newDist + 2;
    }
    if (full != m) vec.push_back( m - full );
    for (int i = 0; i <vec.size(); i ++) {
        printf (i % 2 ? "JUMP " : "RUN ");
        printf ("%d\n", vec[i]);
    }
    return 0;
}