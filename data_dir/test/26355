#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};
//////////////////////

void arquivo()
{
	freopen("","r",stdin);
	freopen("","w",stdout);
}

const int N = 1000010;

struct edge{
	int w,op,id;
	edge(){};
	edge( int x, int y, int z ){
		w = x;
		op = y;
		id = z;
	}
	bool operator < ( edge foo ) const{
		if( w != foo.w ) return w<foo.w;
		return op > foo.op;
	}
};

int n,m;
vector< edge > v;
int X[N], Y[N];
int sz = 1;
queue<ii>q;

void add(int i){
	int id = v[i].id;
	X[id] = 0; Y[id] = sz;
	if( sz-1 ) q.push(mp(sz,sz-1));
	sz++;
}

int main()
{
	//ios::sync_with_stdio(0);
	scanf("%d %d",&n,&m);
	for(int i=0;i<m;++i){
		int a,b; scanf("%d %d",&a,&b);
		v.pb(edge(a,b,i));
	}
	sort(v.begin(),v.end());
	for(int i=0;i<m;++i){
		if( v[i].op == 1 ) add(i);
		else{
			if(q.empty()){
				puts("-1");
				return 0;
			}
			ii foo = q.front(); q.pop();
			int x = foo.F, w = foo.S;
			w--;
			int id = v[i].id;
			X[id] = x;
			Y[id] = w+1;
			if( w ) q.push(ii(x,w));
		}
	}

	
	for(int i=0;i<m;++i){
		printf("%d %d\n",X[i]+1,Y[i]+1);
	}

	return 0;
}