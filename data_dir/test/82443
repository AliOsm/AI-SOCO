#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
#define ld long double
using namespace std;
const int N = 2 * 1e5 + 5;
const int MOD = 1e9 + 7;

std::vector<ll> v, vv, vvv, a;

ll LIS(){
	const int INF = 1e9;
	 ll n = a.size();
	vector<ll> dp(n + 1, INF);
	dp[0] = -INF;
	for(int i = 0; i < n; i++){
		int j = upper_bound(dp.begin(), dp.end(), a[i]) - dp.begin();
		if(dp[j - 1] < a[i] && a[i] < dp[j])
			dp[j] = a[i]; 
	}
	ll res = 0;
	for(int i = 0; i <= n; i++){
		if(dp[i] < INF)
			res = i;
	}
	return res;
}

int main(){
	fast;
	ll k1, k2, k3;
	cin >> k1 >> k2 >> k3;
	ll n = k1 + k2 + k3;
	for(int i = 0; i < k1; i++){
		ll x;
		cin >> x;
		v.push_back(x);
	}
	for(int i = 0; i < k2; i++){
		ll x;
		cin >> x;
		vv.push_back(x);
	}
	for(int i = 0; i < k3; i++){
		ll x;
		cin >> x;
		vvv.push_back(x);
	}
	sort(v.begin(), v.end());
	sort(vv.begin(), vv.end());
	sort(vvv.begin(), vvv.end());
	a = v;
	a.insert(a.end(), vv.begin(), vv.end());
	a.insert(a.end(), vvv.begin(), vvv.end());
	cout << n - LIS();
	
	
	
	return 0;
}
