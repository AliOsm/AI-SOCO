#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath> 
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<assert.h>
#include<math.h>
#include<memory.h>
#include<sstream>	
#include<cstdio>
using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define INF (0x7fffffff)
#define mp make_pair
#define fastIO ios::sync_with_stdio(false)
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
#define All(a) a.begin(), a.end()

typedef long long ll;
typedef vector<ll> vi;
typedef pair<int, int> ii;
typedef long double ld;

#define X first
#define Y second


ll p[500001];
int n;
string s;
char ss[500002];
ll sum[500001];
ll sum1[500001];
int main(){
	
	//read; write;
	scf(n);
	
	repi(i, 1, n+1){
		scf(p[i]);
	}
	scanf("%s", ss + 1);
	repi(i, 1, n + 1){
		sum1[i] = sum1[i - 1];
		sum[i] = sum[i - 1];
		if (ss[i] == 'A')sum1[i] += p[i];
		else sum[i] += p[i];
	}
	ll res = sum[n];
	repi(i,1, n+1){
		res = max(res, sum1[i] + sum[n]-sum[i]);
	}
	for (int i = n ; i > 0; --i){
		res = max(res, sum1[n] - sum1[i - 1] + sum[i - 1]);
	}
	cout << res << endl;
	return 0;
}