#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int n;
bool vis[55];
vector < int > v[55];
map < pair < int, int >, int > mp;

bool DFS(int x , int Target){

    vis[x] = true;
    if(x == Target)  return false;

    bool Res = true;
    for(auto j : v[x])  if(!vis[j])  Res&=DFS(j , Target);
    return Res;
}

int main()
{
    cin >> n;
    int m = (n*(n - 1))/2 - 1;
    while(m--)
    {
        int x,y;
        cin >> x >> y;
        mp[ {x, y}];
        v[y].push_back(x);
    }
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            if(j != i && !mp.count({i, j}) && !mp.count({j, i}) && DFS(j, i))
                return cout << j << " " << i, 0;
            memset(vis, 0, sizeof(vis));
        }
    }
    return 0;
}
