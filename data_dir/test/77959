#include<bits/stdc++.h>
using namespace std;
//#define int                 long long
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
    ll res=1;
    x=x%p;
    while(y>0)
    {
        if(y&1)
            res=((res%p)*(x%p))%p;
        y=y>>1;
        x=((x%p)*(x%p))%p;
    }
    return res;
}
ll raichu(ll x,ll y)
{
    ll res=1;
    while(y>0)
    {
        if(y&1)
            res=((res)*(x));
        y=y>>1;
        x=((x)*(x));
    }
    return res;
}
bool isprime(ll n)
{
    if(n<2) return false;
    else if(n==2) return true;
    else if(n%2==0) return false;
    else
    {
        ll z=sqrt(n);
        rep(i,z-1) if(n%(i+2)==0) return false;
        return true;
    }
}
int32_t main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1,T;
    //cin>>t;
    T=t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<pair<int,int> > kb(n);
        vector<pair<pair<ld,int>,int> > v;
        vector<pair<ld,int> > minus,plus;
        vector<pair<ll,ll> > lines;
        ll K=0,B=0;
        rep(i,n)
        {
            cin>>kb[i].fi>>kb[i].se;
            if(kb[i].fi==0 && kb[i].se==0) continue;
            else if(kb[i].fi==0)
            {
                if(kb[i].se>0) B+=kb[i].se;
                else continue;
            }
            else if(kb[i].se==0)
            {
                if(kb[i].fi>0) v.pb(mp(mp(0,1),i));
                else v.pb(mp(mp(0,-1),i));
            }
            else
            {
                if(kb[i].fi>0) v.pb(mp(mp((-1.0*kb[i].se)/kb[i].fi,1),i));
                else v.pb(mp(mp((-1.0*kb[i].se)/kb[i].fi,-1),i));
            }
        }
        n=sz(v);
        int ans=0;
        sort(all(v));
        rep(i,n)
        {
            if(v[i].fi.se==-1)
            {
                K+=kb[v[i].se].fi;
                B+=kb[v[i].se].se;
            }
        }
        lines.pb(mp(K,B));
        for(int i=0;i<n;i++)
        {
            ld x=v[i].fi.fi;
            while(i<n && v[i].fi.fi==x)
            {
                if(v[i].fi.se==1)
                {
                    K+=kb[v[i].se].fi;
                    B+=kb[v[i].se].se;
                }
                else
                {
                    K-=kb[v[i].se].fi;
                    B-=kb[v[i].se].se;
                }
                i++;
            }
            i--;
            lines.pb(mp(K,B));
        }
        for(int i=0;i<sz(lines)-1;i++)
        {
            if(lines[i].fi!=lines[i+1].fi) ans++;
        }
        cout<<ans;
    }
    return 0;
}