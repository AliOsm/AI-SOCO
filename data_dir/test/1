#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define ll long long
const int MXN = 50005;
int n, k;
vector<int> g[MXN];
ll res = 0;

vector<int> solve(int u, int pa) {
	if (g[u].size() == 1 && g[u][0] == pa) { // Terminating condition
		vector<int> res(k+1, 0);
		res[1] = 1;
		return res;
	}
	vector<int> mp;
	for (int j=0; j<g[u].size(); j++) {
		int v = g[u][j];
		if (v == pa) continue;
		vector<int> cur_mp = solve(v, u);
		if (mp.empty()) { 
			mp = cur_mp;
			res += cur_mp[k];
		}
		else {
			res += cur_mp[k];
			for (int i=1; i<k; i++) {
				int dist = i;
				int cnt = cur_mp[dist];
				if (dist == k) continue;
				res += cnt * mp[k - dist];
			}
			for (int i=1; i<k; i++) {
				mp[i] += cur_mp[i];
			}
		}
	}
	vector<int> mp2(k+1, 0);
	for (int i=1; i<k; i++) {
		int dist = i;
		int cnt = mp[i];
		if (dist < k) mp2[dist + 1] = cnt;
	}
	mp2[1] = 1;
	return mp2;
}

int main () {
	ios_base::sync_with_stdio(false);
	cin>>n>>k;
	for (int i=0; i<n-1; i++) {
		int u, v;
		cin>>u>>v;
		g[u].pb(v);
		g[v].pb(u);
	}
	solve(1, -1);
	cout<<res<<endl;
	return 0;
}
