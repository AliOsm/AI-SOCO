#include <bits/stdc++.h>
using namespace std;
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
typedef long long ll;
 
const int inf = int(1e9);
const int mod = 256;
const int N = 1e6 + 555;


void solve()
{
	int a[3][3];
	rep(i, 3) rep(j, 3) cin >> a[i][j];
	int fi = a[0][1] + a[0][2];
	int se = a[0][1] + a[2][1];
	int th = a[2][0] + a[2][1];
	se = fi - se;
	th = fi - th;
	for(int i = 0; i <= 1e5; ++i){
		int b[3][3];
		if(i + se < 0 || i + th < 0) continue;
		rep(k, 3) rep(t, 3) b[k][t] = a[k][t];
		b[0][0] = i;
		b[1][1] = i + se;
		b[2][2] = i + th;
		bool ok = 1;
		int S = i + i + se + i + th;
		rep(k, 3) {
			int sum = 0;
			rep(t, 3){
				sum += b[k][t];
			}
			if(sum != S) ok = 0;
		}
		rep(k, 3){
			int sum = 0;
			rep(t, 3){
				sum += b[t][k];
			}
			if(sum != S) ok = 0;
		}
		if(b[2][0] + b[1][1] + b[0][2] != S) ok = 0;
		if(ok){
			rep(k, 3){
				rep(t, 3){
					if(k == t) cout << b[k][t];
					else cout << a[k][t];
					cout << " ";
				}
				cout << endl;
			}
			return;
		}
	}
}
int main()
{
	Red;
	solve();
	return 0;
}