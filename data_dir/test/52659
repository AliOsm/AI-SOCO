#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

vector<int> prefix_function(string s, string t) {
    string S = t + "#" + s;
    int n = S.size();
    vector<int> pi(n);
    for (int i = 1; i < n; ++i) {
        int j = pi[i - 1];
        while (j > 0 && S[i] != S[j]) {
            j = pi[j - 1];
        }
        if (S[i] == S[j]) ++j;
        pi[i] = j;
    }
    vector<int> result;
    for (int i = t.size(); i < S.size(); ++i) {
        if (pi[i] == t.size()) {
            result.push_back(i - t.size() + 1 - t.size() - 1);
        }
    }
    return result;
}

int main() {
    ios_base::sync_with_stdio(false);
    int test;
//    cin >> test;
    test = 1;
    for (int tst = 1; tst <= test; ++tst) {
        int n, m, q;
        cin >> n >> m >> q;
        string s;
        cin >> s;
        string t;
        cin >> t;
        vector<int> indexes = prefix_function(s, t);
        //for (int x : indexes) cout << x << endl;
        vector<int> sum(n + 1, 0);
        for (int x : indexes) {
            sum[x + 1] += 1;
        }
        for (int i = 1; i <= n; ++i) {
            sum[i] += sum[i - 1];
        }
        for (int i = 1; i <= q; ++i) {
            int l, r;
            cin >> l >> r;
            r -= t.size() - 1;
            if (l <= r) cout << sum[r] - sum[l - 1] << endl; else cout << 0 << endl;
        }
    }
    return 0;
}
