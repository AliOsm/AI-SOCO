#include <bits/stdc++.h>    
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long ll;
typedef pair <int, int> pii;

#define int ll

const int maxN = 20 + 5;
const int MOD = 1e9 + 7;
int fac[maxN];
int pow(int a, int b)
{
    int ret = 1;
    if (b == 0)
        return 1;

    ret = pow(a, b >> 1);
    if (b & 1)
        return ( ((ret * ret) % MOD) * a ) % MOD;
    else
        return (ret * ret) % MOD;
}

int choose(int n, int r)
{
    ll ret = 1;
    for (int i = n ; i >= n - r + 1 ; i--)
        ret *= (i % MOD), ret %= MOD;

    ret *= pow(fac[r], MOD - 2);
    ret %= MOD;
    return ret;
}


int b[maxN];

int32_t main()
{
    fac[0] = 1;
    for (int i = 1 ; i < maxN ; i++)
        fac[i] = (fac[i - 1] * i) % MOD;

    int n;
    ll s;
    cin >> n >> s;
    for (int i = 0 ; i < n ; i++)
        cin >> b[i];

    //a[1] + a[2] + ... + a[n] = s
    int res = 0;
    for (int mask = 0 ; mask < (1 << n) ; mask++)
    {
        ll x = s;
        for (int i = 0 ; i < n ; i++)
            if ((mask >> i) & 1) //a[i] > b[i]
                x -= (b[i] + 1);

        if (x < 0)
            continue;
        int ans = choose(n + x - 1, n - 1);
        if (ans < 0)
            ans += MOD;
        ans %= MOD;
        //cout << "Choosing " << n + x - 1 << " " << n - 1 << " = " << ans << endl; 

        if (__builtin_popcount(mask) & 1)
            res -= ans;
        else
            res += ans;

        res += MOD;
        res %= MOD;
    }
    cout << res << endl;
    return 0;
}