#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <valarray>
#include <vector>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(__typeof((X).begin()) it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)x.size())

using namespace std;

struct timer{
	time_t start;
	timer(){start=clock();}
	~timer(){cerr<<1.*(clock()-start)/CLOCKS_PER_SEC<<" secs"<<endl;}
};

typedef istringstream iss;
typedef long long ll;
typedef pair<int,int> pi;
typedef stringstream sst;
typedef vector<int> vi;

string s,t;
int n,m,a[1000010],b[1000010];
ll pos1[1000010],pos2[1000010];
ll badsum[3][3][1000010];

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	cin>>s>>t;
	n=sz(s),m=sz(t);
	rep(i,n)a[i]=s[i]=='R'?0:s[i]=='G'?1:2;
	a[n]=3;
	rep(i,m)b[i]=t[i]=='R'?0:t[i]=='G'?1:2;
	b[m]=3;
	rep2(i,1,n){
		pos1[i] = pos1[i-1] + (s[i-1]==t[pos1[i-1]]);
	}
	rep2(i,1,m){
		pos2[i] = pos2[i-1] + (t[i-1]==s[pos2[i-1]]);
	}
	pos2[m]=INF;
	rep2(i,2,m+1){
		rep(j,3)rep(k,3){
			badsum[j][k][i] = badsum[j][k][i-1] + (b[i-2]==j && b[i-1]==k);
		}
	}
	
	ll ans=0;
	int cur=0;
	rep(i,n){
		while(pos2[cur] == i)cur++;
		if(i==0 || a[i-1]==a[i])ans+=cur-pos1[i];
		else ans+=cur-pos1[i]
		-(badsum[a[i]][a[i-1]][cur] - badsum[a[i]][a[i-1]][pos1[i]]);
	}
	cout<<ans;
}
