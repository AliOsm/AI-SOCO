/*
                _                _____             _                 
     /\        (_)              / ____|           (_)                
    /  \   _ __ _ _   _ _ __   | (___   __ _ _ __  _  ___  _____   __
   / /\ \ | '__| | | | | '_ \   \___ \ / _` | '_ \| |/ _ \/ _ \ \ / /
  / ____ \| |  | | |_| | | | |  ____) | (_| | | | | |  __/  __/\ V / 
 /_/    \_\_|  | |\__,_|_| |_| |_____/ \__,_|_| |_| |\___|\___| \_/  
              _/ |                               _/ |                
             |__/                               |__/                 
*/

#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for(let(it,v.begin()); it != v.end(); it++)
#define rtr(v,it) for(let(it,v.rbegin()); it != v.rend(); it++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define ll long long int
#define pii pair<int,int>
#define vi vector<int>

using namespace std;

vector< vector<pair<ll,ll> > > V;
ll w[300005],ans=0;
vi marked;

ll foo(int u) {
	marked[u]=1;
	ll add=0,cur1=0,cur2=0;
	for(auto p:V[u]) {
		if(!marked[p.f]) {
			add=foo(p.f);
			//trace2(p.f,add);
			if(add>=0) {
				ll val=w[u]-p.s+add;
				//trace1(val);
				if(val>=cur1) {
					cur2=cur1;
					cur1=val;
				} else if(val>=cur2) {
					cur2=val;
				}
			}
		}
	}
	cur1=max(cur1,w[u]);
	ans=max(ans,cur1);
	ans=max(ans,cur1+cur2-w[u]);
	return cur1;
}

int main() {
	ios::sync_with_stdio(false);
	int n,a,b,l;
	cin>>n;
	V.assign(n, vector<pair<ll,ll>>());
	marked.assign(n,0);
	for(int i=0;i<n;i++) {
		cin>>w[i];
	}
	for(int i=0;i<n-1;i++) {
		cin>>a>>b>>l;
		a--; b--;
		V[a].pb({b,l});
		V[b].pb({a,l});
	}
	foo(0);
	cout<<ans<<endl;
	return 0;
}