#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>
#include <sstream>
#include <set>
#include <queue>
#include <vector>

const int N=20000010;
const int inf=0x3f3f3f3f;

using namespace std;

#define sz(x) ((x).size())
#define pb push_back

bool is_prim[N];
vector<int> prim;

void make_prim()
{
	memset(is_prim,1,sizeof(is_prim));
	is_prim[0]=is_prim[1]=0;
	for(int i=2;i<N;i++)
	{
		if(is_prim[i]) prim.pb(i);
		for(int j=0;j<sz(prim) && i*prim[j]<N;j++)
		{
			is_prim[prim[j]*i]=0;
			if(i%prim[j]==0) break;
		}
	}
}

int main()
{
	make_prim();
	int a,b,k;
	scanf("%d%d%d",&a,&b,&k);
	int ret=inf;
	for(int i=a,pre=0;i<=b;i++)
	{
		int c=*(lower_bound(prim.begin(),prim.end(),i)+k-1);
		if(c>b) break;
		pre=max(pre,c-i+1);
		if(pre<=b-i+1) ret=min(ret,b-i+1);
	}
	if(ret==inf) cout<<-1<<endl;
	else cout<<ret<<endl;
	return 0;
}
