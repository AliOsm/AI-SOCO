#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=3.1415926535897932384626433832795;
const ll INF = 1LL<<62;
const ll MINF = -1LL<<62;

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

vector<int> adj[5001];
int nxt[5001];
int cnt[5001];

int main() {
	IO;
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;++i) {
		int a,b;
		cin>>a>>b;
		adj[a].pb(b);
	}
	
	int mxdg=0;
	for(int i=1;i<=n;++i) {
		sort(all(adj[i]), [&](int a, int b) -> bool {
			return (a-i+n)%n>(b-i+n)%n;
		});
		mxdg=max(sz(adj[i]), mxdg);
	}
	
	for(int i=1;i<=n;++i) {
		memset(nxt,0,sizeof nxt);
		memset(cnt,0,sizeof cnt);
		int kovi=i, ok=0, ans=0;
		if(mxdg>3) {
			for(int j=1;j<=n;++j) {
				nxt[j]=mxdg-2;
				ok+=min(sz(adj[j]), mxdg-2);
			}
			ans+=(mxdg-2)*n;
			
		}
		while(ok<m) {
			//LOG(kovi);
			
//			LOG(cnt[kovi]);
	//		LOG(nxt[kovi]);
			if(cnt[kovi]>0) {
				ok+=cnt[kovi];
				cnt[kovi]=0;
			}
			
			if(nxt[kovi]<sz(adj[kovi])) {
				cnt[adj[kovi][nxt[kovi]++]]++;
			}
			if(ok==m) break ;
			kovi=kovi%n+1;
			ans++;
		}
	
		cout<<ans<<" \n"[i==n];
	}
	
	return 0;
}
