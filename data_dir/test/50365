//ITNOA
#include<bits/stdc++.h> 

using namespace std;
 
#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second
 
typedef long long ll;
typedef long double ld;

const int maxN = 2000 + 15;
const int maxM = 100*100 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 500;
const int maxL = 17;

int dp[maxN][maxN];
int sum[maxN][maxN];
int n, m;

void upd(int i)
{
    int res = 0;
    rep(j,1,m+1)
    {
	res = (res + dp[i][j]) % mod;
	sum[i][j] = (sum[i][j-1] + res) % mod;
    }
}


int32_t main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    cin >> n >> m;

    rep(i,1,m+1)
	sum[0][i] = 1;
    
    rep(i,2,m+1)
	dp[1][i] = 1;	
    upd(1);

    rep(i,2,n+1)
    {
	rep(j,1,m+1)
	    dp[i][j] = sum[i-1][j];
	upd(i);
    }

    
    
    int ans = 0;
    rep(i,1,m+1)
    {
	int ted = (m-i+1);
	
	int par = 0, res = 0;
	for(int j = n; j > 0; j --)
	{
	    int tmp = (sum[n-j][i] + mod - dp[n-j][i]) % mod;
	    par = (par + tmp) % mod;
	    res = (res + par) % mod;
	    
	    ans = (ans + (1LL) * dp[j][i] * ((1LL) * res * ted % mod) % mod) % mod;
	}	
    }

    cout << ans << endl;
    return 0;
}
