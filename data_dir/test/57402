#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>

#define F first
#define S second
#define eps 1e-8
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define INF 2000000000

typedef long long ll;

using namespace std;
int n, m, x, y;
vector <int>  g[111];
bool bad, vis, good;
int ok[111];
void dfs(int v, int par){
	ok[v] = 2;
	for(size_t i = 0; i < g[v].size(); i++){
	    int to = g[v][i];
		if(!ok[to])
			dfs(to, v);
		else
		if(ok[to] == 2 && par != to){
			good = 1;
			if(vis == 1)
				bad = 1;
			else
				vis = 1;
		}
	}
	ok[v] = 1;
}
int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		cin >> x >> y;
		g[x].pb(y);
		g[y].pb(x);
	}
	dfs(1, -1);	
	for(int i = 1; i <= n; i++)
		if(!ok[i])
			bad = 1;
	if(bad || !good)
		cout << "NO";
	else
		cout << "FHTAGN!";
	
	return 0;
}
