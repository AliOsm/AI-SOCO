#include <iostream>
#include <vector>

using namespace std;

typedef long long ll;

const int mx[] = { 0, 2, 3, 1 };

ll get_base(ll n) {
    ll b = 4;
    for (;;) {
        if (b > n)
            return b / 4;
        b <<= 2;
    }
    return 0;
}

ll func1(ll n) {
    ll b = get_base(n);
    return (n - b) / 3 + b;
}

ll func2(ll n) {
    ll b = get_base(n);
    ll m = (n - b - 1) / 3;
    ll bb = b;
    vector<int> v;
    while (bb >= 4) {
        v.push_back(m % 4);
        m /= 4;
        bb /= 4;
    }
    
    ll r = b + b;
    bb = b / 4;
    for (int i = v.size()-1; i >= 0; i--) {
        r += bb * mx[v[i]];
        bb /= 4;
    }
    
    if (n == 2)
        return 2;

    return r;
}

int main() {
    int t;
    ll n, ans;
    
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> t;
    while (t--) {
        cin >> n;
        if (n % 3 == 0)
            ans = func1(n-2) ^ func2(n-1);
        else if (n % 3 == 1)
            ans = func1(n);
        else
            ans = func2(n);
        cout << ans << endl;
    }

    return 0;
}
