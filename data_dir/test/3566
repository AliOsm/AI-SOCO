#include<bits/stdc++.h>
using namespace std;
#define ll long long
const int mx=1e6+10;
int n,k;
vector<int> dfsorder;
vector<int> adj[mx];
int mxup[mx],ans[mx],shald[mx],dep[mx];
int dfs(int i,int d)
{
	dep[i]=1+d;
	if(adj[i].empty()){shald[i]=dep[i];return dep[i];}
	int mn=n+1;
	for(auto j:adj[i]){int d1=dfs(j,d+1);mn=min(mn,d1);}shald[i]=mn;return mn;
}
int dfs2(int i)
{
	mxup[i]=max(0,shald[i]-k);
	mxup[0]=0;
	if((mxup[i]<dfsorder.size())) mxup[i]=mxup[dfsorder[mxup[i]]];
	if(adj[i].size()==0)
		++ans[dfsorder[mxup[i]]];
	else
	{
		dfsorder.push_back(i);int mx=0;
		for(auto j:adj[i])mx=max(mx,dfs2(j));
		dfsorder.pop_back();
		ans[i]+=mx;return ans[i];
	}
	return 0;
}
int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
	for(int i=0;i<mx;i++)shald[i]=INT_MAX;
	int x;cin>>n>>k;for(int i=1;i<n;i++)cin>>x,--x,adj[x].push_back(i);
	dfs(0,-1);dfs2(0);
	cout<<ans[0]<<endl;
}
