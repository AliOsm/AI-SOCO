#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}

#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }

#define maxn 200005

int n, a[maxn];
vector<II> P;

bool check(int u, int v){
    For(i, u, v - 1) if(a[i + 1] <= a[i]) return false;
    return true;
}

int main(){

//  freopen("in.txt", "r", stdin);

    cin >> n;
    For(i, 1, n) cin >> a[i];
    a[n + 1] = 0;

    if(n == 1){
        cout << 1 << endl;
        return 0;
    }

    int u = 1;
    For(i, 2, n + 1){
        if(a[i] <= a[i - 1]){
            P.pb(mp(u, i - 1));
            u = i;
        }
    }

    int res = 0;
    Rep(i, sz(P)){
        res = max(res, P[i].se - P[i].fi + 1);
    }

    Rep(i, sz(P) - 1){
        int the = a[P[i].se];
        a[P[i].se] = a[P[i + 1].fi] - 1;
        if(check(P[i].fi, P[i + 1].se)) res = max(res, P[i + 1].se - P[i].fi + 1);
        else res = max(res, P[i + 1].se - P[i + 1].fi + 2);
        a[P[i].se] = the;
        the = a[P[i + 1].fi];
        a[P[i + 1].fi] = a[P[i].se] + 1;
        if(check(P[i].fi, P[i + 1].se)) res = max(res, P[i + 1].se - P[i].fi + 1);
        else res = max(res, P[i].se - P[i].fi + 2);
        a[P[i + 1].fi] = the;
    }

    cout << res << endl;

    return 0;
}
