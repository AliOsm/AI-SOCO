#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d",x)
#define sl(x) scanf("%lld",&x)
#define pl(x) printf("%lld",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(2600+25)
int dp[N][N];
string ans,s;
void trace(int i,int j){
    if(j==1){
        ans+=s[i];
        return;
    }
    if(j==2){
       if(dp[i][j]==1)
            ans+=s[i];
       else{
            ans+=s[i];
            ans+=s[i];
       }
       return;
    }
    if(j>=3&&(s[i]==s[i+j-1])&&dp[i][j]==2+dp[i+1][j-2]){
       ans+=s[i];
       trace(i+1,j-2);
       ans+=s[i];
    }
    else if(dp[i][j]==dp[i+1][j-1]){
        trace(i+1,j-1);
    }
    else{
        trace(i,j-1);
    }
}
void solve(){
    cin>>s;
    int n=s.size();
    s='#'+s;
    if(n<2600){
       for(int i=1;i<=n;i++){
           dp[i][1]=1;
           if(i==n)
              continue;
           if(s[i]==s[i+1]){
              dp[i][2]=2;
           }
           else{
              dp[i][2]=1;
           }
       }
       for(int j=3;j<=n;j++){
           for(int i=1;i+j-1<=n;i++){
               int l=i,r=i+j-1;
               dp[i][j]=max(dp[i+1][j-1],dp[i][j-1]);
               if(s[l]==s[r]){
                  dp[i][j]=max(dp[i+1][j-2]+2,dp[i][j]);
               }
           }
       }
       for(int j=1;j<=n;j++){
           for(int i=1;i+j-1<=n;i++){
               if(dp[i][j]==100){
                  trace(i,j);
                  cout<<ans;
                  return;
               }
           }
       }
       trace(1,n);
       string a1,a2;
       if(ans.size()>=100){
          for(int i=0;i<min(50,(int)ans.size());i++){
              a1+=ans[i];
              a2+=ans[ans.size()-1-i];
          }
          reverse(all(a2));
          cout<<a1+a2;
          return;
       }
       cout<<ans;
       return;
    }
    int c[26];
    mem(c,0);
    for(int i=1;i<=n;i++){
        c[s[i]-'a']++;
        if(c[s[i]-'a']==100){
           for(int j=0;j<100;j++){
               cout<<s[i];
           }
           break;
        }
    }
}
int main(){
   //freopen("C-large-practice.IN","r",stdin);
   //freopen("out.txt","w",stdout);
    int t=1;
 //  sd(t);
   for(int i=1;i<=t;i++){
       //printf("Case #%d:\n",i);
       solve();
   }
   return 0;
}
