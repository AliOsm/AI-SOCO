#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll MOD = 1000000007LL;

ll getRes(ll r)
{
	ll totalSize = 0, currSize = 1;
	bool currOdd = true;
	ll oddUsed = 0, evenUsed = 0;
	ll res = 0;
	while (totalSize < r)
	{
		if (totalSize + currSize > r)
			currSize = r - totalSize;

		ll a1 = currOdd ? (oddUsed * 2LL + 1) : (evenUsed * 2LL + 2);
		ll currRes = (a1 + currSize - 1 + MOD) % MOD;
		currRes = (currRes * (currSize % MOD)) % MOD;
		res = (res + currRes) % MOD;

		if (currOdd)
			oddUsed += currSize;
		else
			evenUsed += currSize;
		totalSize += currSize;
		currSize *= 2LL;
		currOdd = !currOdd;
	}
	return res;
}

int main()
{
	ios::sync_with_stdio(false);
	ll l, r;
	cin >> l >> r;
	ll result = (getRes(r) - getRes(l - 1) + MOD) % MOD;
	cout << result << endl;
}