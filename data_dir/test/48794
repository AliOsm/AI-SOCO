#include<bits/stdc++.h>
#define pb push_back
using namespace std;
const int N = 2e5 + 10;
int n, a, b, A[N], P[N], C[2][N];
vector < int > T, V[N];
map < int , int > M;
int Find(int v)
{
    if (!P[v])
        return (v);
    return (P[v] = Find(P[v]));
}
void Unite(int v, int u)
{
    v = Find(v); u = Find(u);
    if (u != v)
        P[v] = u, C[0][u] &= C[0][v]; C[1][u] &= C[1][v];
}
int main()
{
    scanf("%d%d%d", &n, &a, &b);
    for (int i = 1; i <= n; i++)
        scanf("%d", &A[i]), M[A[i]] = i, C[0][i] = C[1][i] = 1;
    for (int i = 1; i <= n; i++)
    {
        if (M[a - A[i]])
            Unite(i, M[a - A[i]]);
        else
            C[0][Find(i)] = 0;
        if (M[b - A[i]])
            Unite(i, M[b - A[i]]);
        else
            C[1][Find(i)] = 0;
    }
    for (int i = 1; i <= n; i++)
        if (!P[i] && !C[0][i] && !C[1][i])
            return !printf("NO");
    printf("YES\n");
    for (int i = 1; i <= n; i++)
        printf("%d ", C[0][Find(i)] ? 0 : 1);
    return (0);
}
