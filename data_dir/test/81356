#include <stdio.h>
#include <string.h>
#include <iostream>
using namespace std;

int niz(int X,int Y,int i,int j)
{
    if ((X==i)&&(Y>j))return 1;
    else return 0;
}
int verh(int X,int Y,int i,int j)
{
    if ((X==i)&&(Y<j))return 1;
    else return 0;
}
int levo(int X,int Y,int i,int j)
{
    if ((X>i)&&(Y==j))return 1;
    else return 0;
}
int pravo(int X,int Y,int i,int j)
{
    if ((X<i)&&(Y==j))return 1;
    else return 0;
}

int flag_levo(int *x,int *y,int i)
{
 int flag=0;   
 for(int j=0;j<i;j++)
 if (levo(x[i],y[i],x[j],y[j])){flag=1;break;}   
 return flag;
}
int flag_pravo(int *x,int *y,int i,int n)
{
 int flag=0;   
 for(int j=i+1;j<n;j++)
 if (pravo(x[i],y[i],x[j],y[j])){flag=1;break;}   
 return flag;
}
int flag_niz(int *x,int *y,int i)
{
 int flag=0;   
 for(int j=0;j<i;j++)
 if (niz(x[i],y[i],x[j],y[j])){flag=1;break;}   
 return flag;
}
int flag_verh(int *x,int *y,int i,int n)
{
 int flag=0;   
 for(int j=i+1;j<n;j++)
 if (verh(x[i],y[i],x[j],y[j])){flag=1;break;}   
 return flag;
}

void sort(int *x,int *y,int n)
{
    int buf;
    for(int i=0;i<n-1;i++)
      for(int j=i+1;j<n;j++)
        if(x[i]>x[j])
        {
            buf=x[i];x[i]=x[j];x[j]=buf;
            buf=y[i];y[i]=y[j];y[j]=buf;
        }    
        else
        if(x[i]==x[j])
            if(y[i]>y[j])
            {
             buf=x[i];x[i]=x[j];x[j]=buf;
             buf=y[i];y[i]=y[j];y[j]=buf;
            }
}

int main()
{    
  int n,kol=0,*x,*y,flag;
  scanf("%d\n",&n);
  x=new int[n];  y=new int[n];
  for(int i=0;i<n;i++)scanf("%d %d",&x[i],&y[i]);
  
  sort(x,y,n);
  //for(int i=0;i<n;i++)printf("%d %d\n",x[i],y[i]);
  
  for(int i=1;i<n-1;i++)
  {
    flag=0;  
    for(int j=i-1;j>=0;j--)
    {
      for(int k=i+1;k<n;k++)
        if (flag_levo(x,y,i)) 
        if (flag_pravo(x,y,i,n))
        if (flag_niz(x,y,i))
        if (flag_verh(x,y,i,n)){kol++;flag=1;break;}
      if (flag)break;
    }  
  }
  
  delete []x; delete []y;
  printf("%d",kol);
  return 0;
}