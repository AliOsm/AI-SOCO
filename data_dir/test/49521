#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 660;

int n;
int l[MAX], r[MAX];
bool visited[MAX][MAX];
bool dp[MAX][MAX];

bool solve(int a, int b) {
	if(visited[a][b]) return dp[a][b];
	else {
		visited[a][b] = true;
		if(a == b) {
			if(l[a] <= 1 && 1 <= r[a]) return dp[a][b] = true;
			else return dp[a][b] = false;
		}
		else {
			for(int i = l[a]; i <= r[a]; i++)
				if(i%2 == 1) {
					if(a + i/2 == b) {
						if(solve(a + 1, a + i/2)) return dp[a][b] = true;
						break;
					}
					else if(i == 1) {
						if(solve(a + i/2 + 1, b)) return dp[a][b] = true;
					}
					else if(solve(a + 1, a + i/2) && solve(a + i/2 + 1, b)) return dp[a][b] = true;
				}
			return dp[a][b] = false;
		}
	}
}

void print(int a, int b) {
	if(a == b) printf("()");
	else {
		for(int i = l[a]; i <= r[a]; i++)
			if(i%2 == 1) {
				if(a + i/2 == b) {
					if(solve(a + 1, a + i/2)) {
						printf("(");
						print(a + 1, a + i/2);
						printf(")");
						return;
					}
				}
				else if(i == 1) {
					if(solve(a + i/2 + 1, b)) {
						printf("()");
						print(a + i/2 + 1, b);
						return;
					}
				}
				else if(solve(a + 1, a + i/2) && solve(a + i/2 + 1, b)) {
					printf("(");
					print(a + 1, a + i/2);
					printf(")");
					print(a + i/2 + 1, b);
					return;
				}
			}
	}
}

int main() {
	scanf("%d", &n);
	REP(i, n) scanf("%d %d", l + i, r + i);
	if(solve(0, n - 1)) {
		print(0, n - 1);
		printf("\n");
	}
	else printf("IMPOSSIBLE\n");
}