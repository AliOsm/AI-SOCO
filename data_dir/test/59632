#include<bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
#define ll long long

template<class T> ostream& operator<<(ostream &os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<" ]";
}
template<class L,class R> ostream& operator<<(ostream &os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}
ll mxm(){return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a,Args... args){return max(a,mxm(args...));}
ll mnm(){return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a,Args... args){return min(a,mnm(args...));}
void C(){return;}
template<typename Arg1,typename... Args>
void C(Arg1& arg1,Args&&... args){cin>>arg1;C(args...);}
void P(){return;}
template<typename Arg1,typename... Args>
void P(Arg1& arg1,Args&&... args){cout<<arg1<<' ';P(args...);}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template<typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
		const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define vll vector<ll>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define vi vector<int>
#define vpll vector<pll>
#define vpii vector<pii>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvpii vector<vpii>
#define vld vector<ld>
#define vvld vector<vld>
#define I insert
#define F first
#define S second
#define pb push_back
#define all(x) x.begin(),x.end()
#define endl "\n"
#define siz(a)	((int)(a).size())
#define fl cout<<endl

const int mod=1e9+7;
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}

const int N=1e5+5;

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	ll n,m;cin>>n>>m;
	vll arr(n);for(int i=0;i<n;i++)cin>>arr[i];
	sort(all(arr));
	ll st=1,en=n,ans=-1;
	while(st<=en){
		ll mid=st+en>>1;
		vll got[mid];
		int id=0;
		for(int i=n-1;i>=0;i--)
			got[id].pb(arr[i]),id++,id%=mid;
		ll cando=0;
		for(int i=0;i<mid;i++)
			for(int j=0;j<got[i].size();j++)
				cando+=max(0ll,got[i][j]-j);
		if(cando>=m)
			ans=mid,en=mid-1;
		else st=mid+1;
	}
	cout<<ans<<endl;
}