#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
inline ll add(ll a,ll b,ll mod)
{
    if((a+=b)>=mod)a-=mod;
    return a;
}
inline ll mult(ll a,ll b,ll mod)
{
    if(a<b)swap(a,b);
    ll ret=0;
    while(b)
    {
        if(b&1)ret=add(ret,a,mod);
        a=add(a,a,mod);
        b>>=1;
    }
    return ret;
}
inline ll power(ll a,ll b,ll mod)
{
    ll ret=1;
    while(b)
    {
        if(b&1)ret=mult(ret,a,mod);
        a=mult(a,a,mod);
        b>>=1;
    }
    return ret;
}
ll a;
ll pw2[64],pw10[19];
void init()
{
    pw2[0]=pw10[0]=1;
    for(int i=1;i<64;i++)pw2[i]=pw2[i-1]<<1;
    for(int i=1;i<19;i++)pw10[i]=pw10[i-1]*10;
}
void solve()
{
    scanf("%lld",&a);
    int n=upper_bound(pw10,pw10+19,a)-pw10;
    for(int m=0;;m++)
    {
        ll p10=pw10[m];
        ll part1=p10*a;
        ll b=(-part1)&((1ll<<(n+m))-1);
        if((part1+b)%5==0)b+=(1ll<<(n+m));
        if(b>=p10)continue;
        ll x=part1+b,y=x>>(n+m);
        ll phi=4,pw=5;
        ll now=0;
        for(int i=0;i<4;i++)
        {
            if(power(2,i,5)==y%5)
            {
                now=i;
                break;
            }
        }
        for(int i=2;i<=n+m;i++)
        {
            pw*=5;
            for(int j=0;j<5;j++)
            {
                if(power(2,now+j*phi,pw)==y%pw)
                {
                    now+=j*phi;
                    break;
                }
            }
            phi*=5;
        }
        printf("%lld\n",now+n+m);
        break;
    }
}
int T;
int main()
{
    init();
    scanf("%d",&T);
    while(T--)solve();
    return 0;
}