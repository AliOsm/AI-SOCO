#include<bits/stdc++.h>
using namespace std;

#define fi                      first
#define se                      second
#define pb                      push_back
#define endl                    '\n'
#define all(x)                  x.begin(),x.end()
#define pii                     pair<int,int>
#define fast                    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define SZ(x)                   ((int)x.size())

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

void solve();

int32_t main()
{
        fast;
        int t = 1;
        // cin >> t;
        for(int i = 1; i <= t; ++i)
                solve();
        cerr << "Time taken: " << ((clock() * 1000) / CLOCKS_PER_SEC) << "ms\n";
}

template <typename A, typename B>
string to_string(pair<A, B> p);
 
string to_string(const string& s) {
        return '"' + s + '"';
}
 
string to_string(const char* s) {
        return to_string((string) s);
}
 
string to_string(bool b) {
        return (b ? "true" : "false");
}
 
string to_string(vector<bool> v) {
        bool first = true;
        string res = "{";
        for (int i = 0; i < static_cast<int>(v.size()); i++) {
                if (!first) {
                        res += ", ";
                }
                first = false;
                res += to_string(v[i]); 
        }
        res += "}";
        return res;
}
 
template <size_t N>
string to_string(bitset<N> v) {
        string res = "";
        for (size_t i = 0; i < N; i++) {
                res += static_cast<char>('0' + v[i]);
        }
        return res;
}
 
template <typename A>
string to_string(A v) {
        bool first = true;
        string res = "{";
        for (const auto &x : v) {
                if (!first) {
                        res += ", ";
                }
                first = false;
                res += to_string(x);
        }
        res += "}";
        return res;
}
 
template <typename A, typename B>
string to_string(pair<A, B> p) {
        return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}
 
void debug_out() { 
        cerr << endl; 
}
 
template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
        cerr << " " << to_string(H);
        debug_out(T...);
}
 
#ifdef IGM
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...)
#endif

void solve() {
	std::vector<ll> v(26);
	for(int i = 0; i < 26; ++i) {
		cin >> v[i];
	}	

	string s;
	cin >> s;
	std::vector<pair < pair <ll,ll > , ll > > st[26];
	int len = SZ(s);
	std::vector<ll> a(len);
	ll ans = 0;
	for (int i = 0; i < len; ++i)
	{
		a[i] = v[s[i]-'a'];
		if(i - 1 >= 0) {
			a[i] += a[i-1];
			st[s[i-1] - 'a'].pb({ {i-1,a[i-1]}, 0});
			st[s[i] - 'a'].pb({ {i-1,a[i-1]}, 1 });
		}
	}
	debug(st[0]);
	for(int i = 0; i < 26; ++i) {
		sort(all(st[i]));
		map<ll,ll> mp;
		for(int j = SZ(st[i]) - 1; j >= 0; --j ) {
			if(st[i][j].se == 1) {
				mp[st[i][j].fi.se]++;
			}
			else {
				ans += mp[st[i][j].fi.se];
			}
		}
	}
	cout << ans << endl;
}