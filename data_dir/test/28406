#include <bits/stdc++.h>
//#include "RNG.h"
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define inf 1000000005
#define linf (1ll << 60)
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-6
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 1000005

int n, k, m, s;
int a[maxn], need[maxn], cur[maxn];

void solve(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
//    freopen("in.txt", "r", stdin);
//    freopen("out.txt", "w", stdout);
    cin >> n >> k >> m >> s;
    For(i, 1, n) cin >> a[i];
    ms(need, 0); ms(cur, 0);
    For(i, 1, s){
    	int x;
    	cin >> x;
    	need[x]++;
    }

    int dem = 0;
    For(i, 1, maxn - 1) if(need[i]) dem++;

    int cuoi = 1;
    For(i, 1, n){
    	cur[a[i]]++;
    	if(cur[a[i]] == need[a[i]]) dem--;
    	if(dem == 0 && i >= k){
    		cuoi = i;
    		break;
    	}
    }

    if(dem > 0){
    	cout << -1 << endl;
    	return;
    }

    For(i, 1, n){
    	if(i != 1){
    		cur[a[i - 1]]--;
    		if(cur[a[i - 1]] < need[a[i - 1]]){
    			while(cuoi <= n && (cur[a[i - 1]] < need[a[i - 1]] || cuoi - i + 1 < k)){
    				cuoi++;
    				cur[a[cuoi]]++;
    			}
    			if(cuoi == n + 1) break;
    		}
    	}

    	if((i - 1) / k + 1 + (n - cuoi) / k >= m){
    		vector<int> res;
    		For(j, 1, (i - 1) % k) res.pb(j);

    		int num = cuoi - i + 1;
    		For(j, i, cuoi){
    			if(num > k && cur[a[j]] > need[a[j]]){
    				cur[a[j]]--;
    				num--;
    				res.pb(j);
    			}
    		}

    		For(j, n - (n - cuoi) % k + 1, n) res.pb(j);
    		cout << sz(res) << endl;
    		Rep(j, sz(res)) cout << res[j] << " ";
    		return;
    	}
    }

    cout << -1 << endl;
}

int main(){
  solve();

  return 0;
}
