#include <bits/stdc++.h>
/*#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;*/
#define itn int
#define all(c) c.begin(),c.end()
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define ll long long
#define ull unsigned long long
#define pll pair<ll, ll>
#define pii pair<int, int>
#define mp(x, y) make_pair(x, y)
using namespace std;
 
const ll inf = 1e18, mod = 1000000007;
const double PI = 3.1415926536;
int days[13] = {0, 31, 28, 31, 30, 31,30, 31, 31, 30, 31, 30, 31};
 
template<typename T>
ostream& operator <<(ostream& out, const vector<T>& mas) {
    for (const auto& x : mas) {
        out << x << ' ';
    }
    return out;
}
 
template <typename Iterator>
class IteratorRange {
public:
    IteratorRange (Iterator f, Iterator l)
        : first(f), last(l) {}
 
    Iterator begin () const {
        return first;
    }
    Iterator end () const {
        return last;
    }
 
private:
    Iterator first , last;
};
 
void ok() {
    cout << "YES" << '\n';
}
 
void no() {
    cout << "NO" << '\n';
}
 
inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}
 
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    int t = nxt();
    while (t--) {
        int n = nxt();
        int ans = (1 << n);
        for (int i = n - 1; i >= n / 2; i--) {
            ans -= (1 << i);
        }
        for (int i = n / 2 - 1; i >= 1; i--) {
            ans += (1 << i);
        }
        cout << ans << '\n';
    }
    
    return 0;
}
