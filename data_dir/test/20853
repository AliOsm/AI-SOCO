#include<bits/stdc++.h>
using namespace std;
int a,s,d,f,g,h,j,k,l,i,n,m,tmp;
struct tre{
    int val;
    int rev;
    tre* L;
    tre* R;
    tre(){
        val=0;
        rev=0;
        L=NULL;
        R=NULL;
    }
};

tre* root[33];
/////////////////////////////////init/////////////////////////////////
void add(tre *&it,int idx,int l,int r){
    if(!it) it=new tre();
    if(l>idx || r<=idx) return;
    if(l<=idx && r>idx) it->val++;
    if(l+1==r) return;
    add(it->L,idx,l,(l+r)/2);
    add(it->R,idx,(l+r)/2,r);
    return;
}
/////////////////////////////////xor//////////////////////////////////
int upd(tre *&it,int l,int r,int lf,int rg){
    if(!it) it=new tre();
    if(it->rev==1){
        if(!it->L) it->L=new tre();
        it->L->rev=(it->L->rev+1)%2;
        if(!it->R) it->R=new tre();
        it->R->rev=(it->R->rev+1)%2;
        it->rev=0;
        it->val=rg-lf-it->val;
    }

    if(lf>=r || rg<=l) return 0;

    if(lf>=l && rg<=r) {//cout<<lf<<" "<<rg<<"*"<<endl;
        it->rev=1-it->rev;
        return rg-lf-2*it->val;
    }


    int ret=upd(it->L,l,r,lf,(lf+rg)/2)+upd(it->R,l,r,(lf+rg)/2,rg);
    it->val+=ret;
    return ret;
}

void xorr(int l,int r,int val){
    int idx=0;
    while(val>0){
        if(val%2) {upd(root[idx],l,r,0,n);}
        val/=2;
        idx++;
    }
    return;
}
///////////////////////////////sum///////////////////////////////////////////
long long sum(tre *&it,int l,int r,int lf,int rg){
    if(!it) return 0;
    if(it->rev==1){
        if(!it->L) it->L=new tre();
        it->L->rev=(it->L->rev+1)%2;
        if(!it->R) it->R=new tre();
        it->R->rev=(it->R->rev+1)%2;
        it->rev=0;
        it->val=rg-lf-it->val;
    }


    if(l>=rg || r<=lf) return 0;
    if(l<=lf && r>=rg) return it->val;

    return sum(it->L,l,r,lf,(lf+rg)/2)+sum(it->R,l,r,(lf+rg)/2,rg);
}


long long calc(int l,int r){
    long long ret=0;
    for(int i=0;i<20;i++){
        ret+=(1<<i)*sum(root[i],l,r,0,n);
    }
    return ret;
}
/////////////////////////////////////////////////////////////
main(){
    cin>>n;
    for(i=0;i<25;i++){
        root[i]=new tre();
    }
    for(i=0;i<n;i++){
        cin>>a;
        k=0;
        while(a>0){
            if(a%2) add(root[k],i,0,n);
            a/=2;
            k++;
        }
    }
    cin>>m;
    for(i=0;i<m;i++){
        cin>>a>>s>>l;
        s--;//l--;
        if(a==1) cout<<calc(s,l)<<endl;
        else {
            cin>>k;
            xorr(s,l,k);
        }
        /*for(int u=0;u<n;u++){
        cout<<"<<<<<<<";
        for(a=5;a<n;a++){
            cout<<calc(a,a+u+1)<<" ";
        }
        cout<<">>>>>>>"<<endl;
        }*/
    }
}
