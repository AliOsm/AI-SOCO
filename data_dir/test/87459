/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
typedef vector<int> vi;
typedef long long int ll;
vector<vector<int>> adj;


bool prime[100005];

class TaskB {
public:
	void solve(std::istream& in, std::ostream& out) {
        int n; in>>n;
        if(n==1){
            out<<"1\n1";
            return;
        }
        if(n==2){
            out<<"1\n1 1";
            return;
        }
        memset(prime, true, sizeof(prime));
        rep(i, 2, n+2){
            if(prime[i]){
                for(int j=2*i; j<n+2; j+=i) prime[j]=false;
            }
        }
        out<<2<<"\n";
        rep(i, 2, n+1) {
            if(prime[i]) out<<1<<" ";
            else out<<2<<" ";
        }
	}
    void inG(int m, istream& in){ int u,v; adj = vector<vi>(200005);f(i, m){ in>>u>>v; adj[u].push_back(v); adj[v].push_back(u); }}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
