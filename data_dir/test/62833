#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define all(a) a.begin(), a.end()
#define forn(i, n) for(int i = 0; i < int(n); i++) 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.x << ", " << a.y << ")";
}

template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i) out << ", ";
		out << v[i];
	}
	return out << "]";
}

mt19937 rnd(time(NULL));

const int INF = int(1e9);
const li INF64 = li(1e18);
const int MOD = INF + 7;
const ld EPS = 1e-9;
const ld PI = acos(-1.0);

ld R, x1, y1, x2, y2;

bool read () {
	if (!(cin >> R >> x1 >> y1 >> x2 >> y2))
		return false;
	return true;
}

void solve() {
	x2 -= x1;
	y2 -= y1;
	
	if (sqr(x2) + sqr(y2) > sqr(R)){
		cout << x1 << " " << y1 << " " << R << endl;
		return;
	}
	
	ld ang = PI + atan2l(y2, x2);
	ld r = (R + sqrtl(sqr(x2) + sqr(y2))) / 2;
	ld x = (x2 + cosl(ang) * R) / 2 + x1;
	ld y = (y2 + sinl(ang) * R) / 2 + y1;
	
	cout << x << " " << y << " " << r << endl;
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	
	int tt = clock();
	
#endif
	
	cerr.precision(15);
	cout.precision(15);
	cerr << fixed;
	cout << fixed;

	while(read()) {	
		solve();
		
#ifdef _DEBUG
	cerr << "TIME = " << clock() - tt << endl;
	tt = clock();
#endif

	}
}