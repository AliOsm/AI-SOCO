#include <string>
#include <vector>
#include <map>
#include <set>
#include <iostream>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <string.h>
using namespace std;

typedef long long    Int;
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define mp make_pair
#define pb push_back
#define sz(x) int((x).size())
#define inf 1000000000
const int MOD=1000000007;

struct matrix
{
	int sz;
	Int mas[60][60];
}; 
matrix c;
void mull (matrix &a,matrix &b)
{
	memset(c.mas,0,sizeof(c.mas));
	c.sz=a.sz;
	FOR(i,0,c.sz)FOR(j,0,c.sz)
	{
		FOR(k,0,c.sz)
			c.mas[i][j]=(c.mas[i][j]+a.mas[i][k]*b.mas[k][j])%MOD;
	}
}
 
matrix ans;
void binpw(matrix &a,Int times)
{
	ans.sz=a.sz;
	FOR(i,0,ans.sz)FOR(j,0,ans.sz)ans.mas[i][j]=(i==j);
	while(times)
	{
		if(times&1){mull(ans,a);ans=c;}
		mull(a,a);a=c;
		times/=2;
	}
}

int id(char x)
{
	if(x<='z' && x>='a')return x-'a'+1;
	return 26+(x-'A')+1;
}

matrix f;
bool can[100][100];
int main()
{
    //freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	Int n,m,k;
	memset(can,true,sizeof(can));
	cin>>n>>m>>k;
	FOR(i,1,k)
	{
		string s;
		cin>>s;
		can[id(s[0])][id(s[1])]=false;
	}

	f.sz=m;
	memset(f.mas,0,sizeof(f.mas));
	FOR(i,1,f.sz)FOR(j,1,f.sz)
		if(can[i][j])
			f.mas[i][j]=1;
	FOR(i,1,f.sz)f.mas[0][i]=1;

	binpw(f,n);
	f=ans;

	int ans=0;
	FOR(j,0,f.sz)
		ans=(ans+f.mas[0][j])%MOD;

	cout<<ans<<endl;
}