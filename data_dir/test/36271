#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e6+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pb push_back
#define pii pair<int,int>
#define all(v) (v).begin(),(v).end()
#define F first
#define S second
#define sz(v) ((int)(v).size())
#define mkp make_pair
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
//#define endl '\n'
#define int ll

vector<pii> v;
int n,k;
int a[maxn],p[maxn],l[maxn],r[maxn];

int32_t main()
{
    IOS
    cin>>n>>k;
    int ans=0;
    for (int i=1;i<=n;i++)
    {
        int x;
        cin>>x;
        a[i]=x;
        p[i]=p[i-1]+x;
    }
    int cnt=0;
    for (int i=1;i<=n;i++)
    {
        l[i]=cnt;
        if (a[i]==1) {cnt++; if (k==1) ans++;}
        else cnt=0,v.pb(mkp(a[i],i));
    }
    cnt=0;
    for (int i=n;i>=1;i--)
    {
        r[i]=cnt;
        if (a[i]==1) cnt++;
        else cnt=0;
    }
    int SZ=sz(v);
    for (int i=0;i<SZ;i++)
    {
        int pp=1;
        for (int j=i;j<SZ;j++)
        {
            if (log10(pp)+log10(v[j].F)>=18) break;
            pp*=v[j].F;
            if (pp%k!=0) continue;
            if (pp/k-(p[v[j].S]-p[v[i].S-1])>=0
                &&pp/k-(p[v[j].S]-p[v[i].S-1])<=r[v[j].S]+l[v[i].S])
            {
                int L=l[v[i].S],R=r[v[j].S],need=pp/k-(p[v[j].S]-p[v[i].S-1]);
                int M=min(L,R);
                if (need<M) ans+=(need+1);
                else if ((L+R-need)<M) ans+=(L+R-need+1);
                else ans+=(M+1);
            }
        }
    }
    cout<<ans<<endl;
}
