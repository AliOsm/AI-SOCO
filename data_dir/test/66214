#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define V vector
#define MP make_pair
#define MAX INT_MAX
#define MIN INT_MIN
#define pi pair<int,int>
#define pl pair<ll,ll>
#define ff first
#define ss second
#define PI acos(-1)
#define pb push_back
#define sz(a) ((int)a.size())
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sfll(x) scanf("%I64d", &x)
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y)
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z)
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;
ll suf(ll x) { return (x * (x + 1)) / 2; }
V<V<int> > adj;
const ll mod = 1e9 + 7, size = 1000006, ooi = INT_MAX, ool = INT64_MAX;

int main()
{
	ll  n, m , k;
	while (cin >> n >> k){
		ll sum = 0, all = 0;
		V<ll>v(n);
		for (int i = 0; i < n; i++)cin >> v[i], all += v[i];
		ll t , last = 0;
		V<bool>r(n) , mrk(n);
		map<pair<int, int>, bool > mp;
		for (int i = 0; i < k; i++){
			cin >> t;
			t--;
			ll tmp = all;
			tmp -= v[t];
			tmp -= last;
			sum += tmp * v[t];
			last += v[t];
			int A = t;
			int B1 = (t + 1) % n, B2 = (t - 1 + n) % n;
			mp[MP(min(A, B2), max(A, B2))] = mp[MP(min(A, B1), max(A, B1))] = 1;
		}
		for (int i = 0; i < n; i++){
			int a = i, b = (i + 1) % n;
			if (mp[MP(min(a,b),max(a,b))] == 0){
				sum += v[i] * v[(i + 1) % n];
			}
		}
		cout << sum << endl;
	}

	return 0;
}