#include <bits/stdc++.h>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define fr first
#define sc second
#define ll  long long
#define mp make_pair

using namespace std;

int n,m,q;

int a[2020][2020];
pii go[4][2020][2020];
int ri = 0;
int le = 1;
int up = 2;
int dw = 3;

int dx[]={0,0 ,-1,1};
int dy[]={1,-1,0 ,0};

int main(){
    cin>>n>>m>>q;
    for(int i=1 ;i <=n ;i ++){
        for(int j=1 ;j <=m ;j ++){
            scanf("%d",&a[i][j]);
        }
    }

    for(int k=0 ;k <4 ; k++){
        for(int i=0; i <=n+1 ; i++){
            for(int j=0 ; j<=m+1; j++){
                go[k][i][j] = {i+dx[k],j+dy[k]};
            }
        }
    }



    while(q--){
        pii st;
        pii st1;
        pii sz;
        scanf("%d%d",&st.fr,&st.sc);
        scanf("%d%d",&st1.fr,&st1.sc);
        scanf("%d%d",&sz.fr,&sz.sc);

        pii t,cur = {0,st.sc};
        pii t1,cur1 = {0,st1.sc};

        for(int i=0 ; i< st.fr ;i++){
            cur = go[dw][cur.fr][cur.sc];
        }
        for(int i=0 ; i< st1.fr ;i++){
            cur1 = go[dw][cur1.fr][cur1.sc];
        }

        for(int i=0 ; i<sz.fr ; i++){
            t = go[le][cur.fr][cur.sc];
            t1 = go[le][cur1.fr][cur1.sc];
            swap(go[ri][t.fr][t.sc],go[ri][t1.fr][t1.sc]);
            swap(go[le][cur.fr][cur.sc],go[le][cur1.fr][cur1.sc]);
            if(i == sz.fr -1 )break;

            cur = go[dw][cur.fr][cur.sc];
            cur1 = go[dw][cur1.fr][cur1.sc];
        }

        for(int i=0 ; i<sz.sc ; i++){
            t = go[dw][cur.fr][cur.sc];
            t1 = go[dw][cur1.fr][cur1.sc];
            swap(go[up][t.fr][t.sc],go[up][t1.fr][t1.sc]);
            swap(go[dw][cur.fr][cur.sc],go[dw][cur1.fr][cur1.sc]);
            if(i == sz.sc -1 )break;
            cur = go[ri][cur.fr][cur.sc];
            cur1 = go[ri][cur1.fr][cur1.sc];
        }

        for(int i=0 ; i<sz.fr ; i++){
            t = go[ri][cur.fr][cur.sc];
            t1 = go[ri][cur1.fr][cur1.sc];
            swap(go[le][t.fr][t.sc],go[le][t1.fr][t1.sc]);
            swap(go[ri][cur.fr][cur.sc],go[ri][cur1.fr][cur1.sc]);
            if(i == sz.fr -1 )break;

            cur = go[up][cur.fr][cur.sc];
            cur1 = go[up][cur1.fr][cur1.sc];
        }

        for(int i=0 ; i<sz.sc ; i++){
            t = go[up][cur.fr][cur.sc];
            t1 = go[up][cur1.fr][cur1.sc];
            swap(go[dw][t.fr][t.sc],go[dw][t1.fr][t1.sc]);
            swap(go[up][cur.fr][cur.sc],go[up][cur1.fr][cur1.sc]);
            if(i == sz.sc -1 )break;

            cur = go[le][cur.fr][cur.sc];
            cur1 = go[le][cur1.fr][cur1.sc];
        }
    }

    for(int i=1;i <=n ;i++){
        pii cur = {i,0};
        for(int j=1; j <=m ;j ++){
            cur = go[ri][cur.fr][cur.sc];
            printf("%d ",a[cur.fr][cur.sc]);
        }
        printf("\n");
    }


    return 0;
}
