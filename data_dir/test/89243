#include<bits/stdc++.h>
#include<string>
using namespace std;
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define ll long long
#define pb push_back
#define MOD 1000000007
#define INF 1000000009
const ll INFll=1ll*INF*INF;
#define mp make_pair
#define rep(i,n) for (int i = 0; i < n; i++)
#define all(v) v.begin(),v.end()
#define f first
#define s second
#define vi vector<int>
#define vl vector<ll>
#define llll pair<ll,ll>
#define vll vector<llll >
#define vvl vector<vector<ll> >
#define vvi vector<vi>
#define ii pair<int,int>
#define vii vector<ii>
#define vvii vector<vector<ii>>
#define gcd(a,b) __gcd((a),(b))
#define lcm(a,b) ((a)*(b))/gcd((a),(b))
#define print(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cout << *it << ' '; cout << endl;
#define printii(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cout << it->first<<' '<<it->second << endl; cout << endl;
#define debug(x) cout << x << endl;
#define LC(i) 2*(i)+1
#define RC(i) 2*(i)+2
#define MID(i,j) ((i)+(j))/2
#define disparr(arr,n) for(int i=0;i<(n);i++)   cout<<arr[i]<<' ';  cout<<endl;
#define vd vector<double>
#define ld long double
vl pw(63,1);
vl a;
int findBits(ll n)
{
    int cnt=0;
    while(n>0)
    {
        cnt+=n%2;
        n/=2;
    }
    return cnt;
}
int main()
{
    int n;
    cin>>n;
    vl a(n);
    for(int i=0;i<n;i++)
        cin>>a[i];
    vi b(n);
    for(int i=0;i<n;i++)
        b[i]=findBits(a[i]);
    int dp[n+1][2];
    dp[n][0]=dp[n][1]=0;
    for(int i=n-1;i>=0;i--)
    {
        if(b[i]%2==0)
        {
            dp[i][0]=dp[i+1][0]+1;
            dp[i][1]=dp[i+1][1];
        }
        else
        {
            dp[i][0]=dp[i+1][1];
            dp[i][1]=dp[i+1][0]+1;
        }
    }
    ll ans=0;
    for(int i=n-1;i>=0;i--)
    {
        int mx=b[i],sum=b[i];
        for(int j=i+1;j<min(n,i+65);j++)
        {
            sum+=b[j];
            mx=max(mx,b[j]);
            //cout<<sum<<' '<<mx<<endl;
            if(2*mx<=sum&&sum%2==0)
                ans++;
        }
        if(i+65<n)
        {
            if(sum%2)
                ans+=dp[i+65][1];
            else
                ans+=dp[i+65][0];
        }
    }
    cout<<ans<<endl;
}
