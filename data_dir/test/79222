#include <bits/stdc++.h>
#define pb push_back
#define sc second
#define fr first
#define mk make_pair
#define ll long long
#define ii pair<int,int>
#define mp make_pair
using namespace std;
int n,k;
set < int > s;
map < int , int > my;
vector  < int > prime;
int dp[50][100005];
int need[50];
int solve(int i,int mid)
{
    for(int j=0; j<prime.size(); j++)
    {
        int have = dp[j][mid]-dp[j][i-1];
        if(have < need[j])
            return 0;
    }
    return 1;
}
int main()
{
    cin>>n>>k;
    int temp=k;
    for(int i=2; i*i<=k; i++)
    {
        while(temp%i == 0)
        {
            temp/=i;
            s.insert(i);
            my[i]++;
        }
    }
    if(temp != 1)
    {
        s.insert(temp);
        my[temp]++;
    }
    int cnt = 0;
    for(auto x : s)
    {
        prime.push_back(x);
        need[cnt] = my[x];
        cnt++;
    }
    for(int i=1; i<=n; i++)
    {
        int x;
        scanf("%d",&x);
        for(int j=0; j<prime.size(); j++)
        {
            int u = prime[j];
            while(x%u == 0)
            {
                x /=u;
                dp[j][i]++;
            }
            dp[j][i]+=dp[j][i-1];
        }
    }
    ll res = 0;
    for(int i=1; i<=n; i++)
    {
        int st = i , En = n;
        int ans = 0;
        while(st <= En)
        {
            int mid = (st+En)/2;
            if(solve(i,mid))
            {
                En = mid-1;
                ans = mid;
            }
            else
            {
                st = mid+1;
            }
        }
        if(ans != 0)
            res+=(n-ans+1);
    }
    cout<<res;

}
