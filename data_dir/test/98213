#include <iostream>
using namespace std;

int n, m, costRow[101], costCol[101], RC, LC=105, TR=105, BR;
char c, grid[101][101];

int WB(char C){
    return (C == 'B' ? 0 : 1);
}
int calcRow(int row){
    if(row >= n || row < 0) return 1e9;
    int ret = 0;
    for(int i = LC ; i <= RC ; i++)
        ret += WB(grid[row][i]);
    return ret;
}
int calcCol(int col){
    if(col >= m || col < 0) return 1e9;
    int ret = 0;
    for(int i = TR ; i <= BR ; i++)
        ret += WB(grid[i][col]);
    return ret;
}
int calc(){
    int ret = 0;
    for(int i = TR ; i <= BR ; i++)
        for(int j = LC ; j <= RC ; j++)
            ret += WB(grid[i][j]);
    return ret;
}
int main(){
    cin >> n >> m;
    for(int i = 0 ; i < n ; i++)
        for(int j = 0 ; j < m ; j++){
            cin >> c;
            grid[i][j] = c;
            if(c == 'B'){
                RC = max(RC, j);
                LC = min(LC, j);
                TR = min(TR, i);
                BR = max(BR, i);
            }
        }
    if(LC == 105) return cout << 1 << endl, 0;
    while(RC-LC > BR-TR)
        if(calcRow(BR+1) < calcRow(TR-1)) BR++;
        else TR--;
    while(RC-LC < BR-TR)
        if(calcCol(LC-1) < calcCol(RC+1)) LC--;
        else RC++;
    if(LC < 0 || RC >= m || TR < 0 || BR >= n) cout << -1 << endl;
    else cout << calc() << endl;
    return 0;
}
