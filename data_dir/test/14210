#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
#define INF 0x3f3f3f3f
typedef long long ll;
typedef pair<int,int> ii;

const int N = 1123;

int n, m, x, y;
int dp[N][N][2];
string g[N];
int color[N];

int go(int i, int last, int cor) {
	if (i == m) {
		if (last < x) return INF;
		else return 0;
	}
	
	int& ret = dp[i][last][cor];
	if (ret != -1) return ret;
	else ret = 0;

	if (i == 0) {
			int r1 = go(i+1, 1, 0) + color[i];
			int r2 = go(i+1, 1, 1) + (n-color[i]);
			ret = min(r1, r2);
	} else {
		if (last < x) {
			ret = go(i+1, last+1, cor);
			if (cor == 1) ret += n-color[i];
			else ret += color[i];
		} else if (last == y) {
			ret = go(i+1, 1, cor^1);
			if (cor == 0) ret += n-color[i];
			else ret += color[i];
		} else {
			int r1 = go(i+1, last+1, cor);
			if (cor == 1) r1 += n-color[i];
			else r1 += color[i];
			
			int r2 = go(i+1, 1, cor^1);
			if (cor == 0) r2 += n-color[i];
			else r2 += color[i];

			ret = min(r1, r2);
		}
	}

	return ret;
}

int main(void) {
	ios_base::sync_with_stdio(false);

	memset(dp, -1, sizeof dp);

	cin >> n >> m >> x >> y;

	for (int i = 0; i < n; i++) cin >> g[i];

	for (int j = 0; j < m; j++) {
		int black = 0;
		for (int i = 0; i < n; i++) {
			if (g[i][j] == '#') black++;
		}
		color[j] = black;
	}

	cout << go(0, 0, 0) << endl;
    
	return 0;
}
