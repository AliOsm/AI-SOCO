#include <bits/stdc++.h>

using namespace std;

const int mx = 100005;
const int inf = (500*10005)+1;

int d[505][505];
vector<int> vec[mx];
bool vis[mx];
int mpp[mx];

void deepika(int u)
{
    vis[u] = 1;
    int i , v , l = vec[u].size();
    for(i = 0 ; i < l ; i++)
    {
        v = vec[u][i];
        if(!vis[v])
        {
            deepika(v);
        }
    }
}
void scarlett(int n)
{
    int i , j , k;
    for(k = 1 ; k <= n ; k++)
    {
        for(i = 1 ; i <= n ; i++)
        {
            for(j = 1 ; j <= n ; j++)
            {
                d[i][j] = d[j][i] = min(d[i][j],d[i][k]+d[k][j]);
            }
        }
    }
}

int main()
{

    int i , j , k, u , v , w , n , m , idx = 1 , num , x , y;
    scanf("%d %d %d",&n,&m,&k);
    int arr[k+5];

    for(i = 1 ; i <= k ; i++)
    {
        scanf("%d",&num);
        arr[i] = num;
        while(num--)
        {
            mpp[idx] = i;
            idx++;
        }
    }
    for(i = 1 ; i <= k ; i++)
    {
        for(j = 1 ; j <= k ; j++)
        {
            d[i][j] = inf;
        }
        d[i][i] = 0;
    }

    for(i = 0 ; i < m ; i++)
    {
        scanf("%d %d %d",&u,&v,&w);
        x = mpp[u];
        y = mpp[v];
        if(!w)
        {
            vec[u].push_back(v);
            vec[v].push_back(u);
        }
        d[x][y] = d[y][x] = min(d[x][y],w);
    }
    idx = 1;
    for(i = 1 ; i <= k ; i++)
    {
        memset(vis,0,sizeof(vis));
        deepika(idx);
        for(j = idx ; j < (idx+arr[i]) ; j++)
        {
            if(!vis[j])return !printf("No\n");
        }
        idx +=arr[i];
    }


    printf("Yes\n");

    scarlett(k);
    for(i = 1 ; i <= k ; i++)
    {
        for(j = 1 ; j <= k ; j++)
        {
            if(d[i][j] == inf)d[i][j] = -1;
            if(j>1)printf(" ");
            printf("%d",d[i][j]);
        }
        printf("\n");
    }

    return 0;
}
