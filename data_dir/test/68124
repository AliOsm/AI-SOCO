#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

using namespace std;

const int MaxN = 8, MaxD = 4, NA = -1, MaxC = 0x3F3F3F3F;
const int dx [MaxD] = {-1,  0,  1,  0},
          dy [MaxD] = { 0, -1,  0,  1};

int a [MaxN + 2] [MaxN + 2];

int main (void)
{
 int d, i, j, ok, x, y, x1, y1, x2, y2, x3, y3, x4, y4;
 char c1, c2;
 while (scanf (" %c %c", &c1, &c2) != EOF)
 {
  memset (a, 0, sizeof (a));
  for (i = 0; i < MaxN + 2; i++)
   for (j = 0; j < MaxN + 2; j++)
    if (i == 0 || i == MaxN + 1 || j == 0 || j == MaxN + 1)
     a[i][j] = 7;
  x1 = c1 - 'a' + 1;
  y1 = c2 - '0';
  scanf (" %c %c", &c1, &c2);
  x2 = c1 - 'a' + 1;
  y2 = c2 - '0';
  scanf (" %c %c", &c1, &c2);
  x3 = c1 - 'a' + 1;
  y3 = c2 - '0';
  scanf (" %c %c", &c1, &c2);
  x4 = c1 - 'a' + 1;
  y4 = c2 - '0';
  a[x1][y1] = 1;
  a[x2][y2] = 1;
  a[x3][y3] = 1;
  a[x4][y4] = 2;
  for (d = 0; d < MaxD; d++)
  {
   x = x1; y = y1;
   do
   {
    x += dx[d];
    y += dy[d];
    a[x][y] |= 4;
   }
   while ((a[x][y] & 1) == 0);
   x = x2; y = y2;
   do
   {
    x += dx[d];
    y += dy[d];
    a[x][y] |= 4;
   }
   while ((a[x][y] & 1) == 0);
  }
  for (i = -1; i <= 1; i++)
   for (j = -1; j <= 1; j++)
    a[x3 + i][y3 + j] |= 4;

  ok = 4;
  for (i = -1; i <= 1; i++)
   for (j = -1; j <= 1; j++)
//    printf ("%d %d: %d\n", x4 + i, y4 + j, a[x4 + i][y4 + j]),
    ok &= a[x4 + i][y4 + j];
  if (ok & 4)
   printf ("CHECKMATE\n");
  else
   printf ("OTHER\n");
 }
 return 0;
}
