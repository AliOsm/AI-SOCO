#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const ll MOD = (ll)(1LL << 32) - 1;
const int MAXN = (int)1e7 + 7;
const ll infint = (ll)4e18 + 3;
const ll inf = (ll)1e18;
map< pair<int, int>, bool> M;
ll n, l, r, x, y, z, b1, b2, a[MAXN];
ll smin(ll a, ll b)
{
	if(a == -1)
		return b;
	return min(a, b);
}
ll fix(ll a)
{
	return a & MOD;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int T;
	cin >> T;
	while(T--)
	{
		cin >> n;
		cin >> l >> r >> x >> y >> z >> b1 >> b2;
		a[1] = b1, a[2] = b2;
		for (int i = 3; i <= n; i++)
			a[i] = fix(fix(a[i - 2] * x) + fix(a[i - 1] * y) + z);
		for (int i = 1; i <= n; i++)
			a[i] = (a[i] % (r - l + 1)) + l;
		/*for (int i = 1; i <= n; i++)
			cin >> a[i];*/
		ll neg = 1, pos = -1, mn = 1;
		for (int i = 1; i <= n; i++)
		{
			if(a[i] <= 0)
				mn = min(mn, a[i]);
			else
			if(mn != 1)
				neg = min(neg, a[i] * mn);
		}
		//both positive
		mn = infint;
		for (int i = 1; i <= n; i++)
			if(a[i] >= 0)
			{
				if(a[i] > mn)
					pos = smin(pos, a[i] * mn);
				mn = min(mn, a[i]);	
			}
		//both negative.
		mn = infint;
		for (int i = n; i >= 1; i--)
			if(a[i] <= 0)
			{
				if(-a[i] > mn)
					pos = smin(pos, -a[i] * mn);
				mn = min(mn, -a[i]);
			}
		if(pos == -1 && neg == 1)
			cout << "IMPOSSIBLE\n";
		else
		if(neg != 1)
			cout << neg << "\n";
		else
			cout << pos << "\n";
	}
}