#include <bits/stdc++.h>
using namespace std;

const int mod = (int)1e9 + 7;
const int N = 100005;

int n;
int c[N][2][2], s[N][2][2], sq[N][2][2];
int acc4[N], acc7[N], p10[N];
char a[N], b[N];

int32_t main() {
	acc4[0] = acc7[0] = 0; 
	p10[0] = 1;
	for (int i = 1; i < N; ++i) {
		acc4[i] = (acc4[i-1] + 4LL * p10[i-1]) % mod;
		acc7[i] = (acc7[i-1] + 7LL * p10[i-1]) % mod;
		p10[i] = (1LL * p10[i-1] * 10) % mod;
	}
	scanf("%s %s", a, b);
	n = strlen(a);
	c[0][0][0] = 1;
	int result = 0;
	for (int i = 0; i < n; ++i) {
		for (int x = 0; x < 2; ++x) {
			for (int y = 0; y < 2; ++y) {
				int dig[] = {4, 7};
				for (int d = 0; d < 2; ++d) {
					int cur = dig[d];
					if (!x && cur < a[i]-'0') {
						continue;
					}
					if (!y && cur > b[i]-'0') {
						continue;
					}
					int nx = x | (cur > a[i] - '0');
					int ny = y | (cur < b[i] - '0');
					int mul = (1LL * cur * p10[n-i-1]) % mod;
					int sqmul = (1LL * mul * mul) % mod;
					c[i+1][nx][ny] = (c[i+1][nx][ny] + c[i][x][y]) % mod;
					s[i+1][nx][ny] = (s[i+1][nx][ny] + s[i][x][y] + 1LL*mul*c[i][x][y]) % mod;
					sq[i+1][nx][ny] = (sq[i+1][nx][ny] + sq[i][x][y] + 1LL*sqmul*c[i][x][y] + 2LL*s[i][x][y]*mul) % mod;
				}
				if (!x && 4 < a[i]-'0') {
					continue;
				}
				if (!y && 7 > b[i]-'0') {
					continue;
				}
				int m1 = (4LL*p10[n-i-1]%mod+acc7[n-i-1])%mod;
				int m2 = (7LL*p10[n-i-1]%mod+acc4[n-i-1])%mod;
				result = (result + sq[i][x][y]) % mod;
				result = (result + 1LL*(m1+m2)*s[i][x][y]) % mod;
				result = (result + ((1LL*m1*m2)%mod)*c[i][x][y]) % mod;
			}
		}
	}
	cout << result << endl;
	return 0;
}