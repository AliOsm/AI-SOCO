#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
using namespace std;
#define ll long long
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
//#define ld long double
const int mod = (1e9) + 7;
const double eps = 1e-9;
const int siz = 1e5 + 5, siz2 = 1e5 + 5;
int n;
multiset<ll> cur;
int v[siz], melt[siz];
int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &v[i]);
	}
	for (int i = 0; i < n; i++) {
		scanf("%d", &melt[i]);
	}
	ll cumu = 0;
	vector<ll> ans;
	for (int i = 0; i < n; i++) {
		cur.insert(v[i]+cumu);
		cumu += melt[i];
		ll offset = 0;
		while (true) {
			auto it = cur.begin();
			if (it == cur.end())
				break;
			ll val = *it;
			if (cumu >= val) {
				offset += melt[i] - (cumu-val);
				cur.erase(it);
			}
			else {
				break;
			}
		}
		ans.push_back(melt[i]*(ll)cur.size() + offset);
	}
	for (int i = 0; i < n; i++) {
		printf("%I64d", ans[i]);
		if (i != n - 1)
			printf(" ");
		else
			printf("\n");
	}
	return 0;
}