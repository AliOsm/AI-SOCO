#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define endl '\n'
typedef long long ll;
const int _N = 1e6 + 5;
const ll INF = 1e18;
const ll MOD = 1e9 + 7;

ll n, k, a[_N], mx = 1e14, sum[_N];
map <ll ,ll> m, cnt;

ll power(ll a, ll b) {
	ll bb = b;
	bool ok = 0;
	if (a < 0) {
		ok = 1;
		a = -a;
	}
	ll res = 1LL;
	while (b) {
		if (b & 1) res = (res * a);
		b >>= 1LL;
		a = (a * a);
	}
	if (ok) {
		if (bb & 1) res = -res;
	}
	return res;
}

int main() {
	boost();
	#ifndef ONLINE_JUDGE
		freopen("in", "r", stdin);
	#endif
	cin >> n >> k;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		sum[i] = sum[i - 1] + a[i];
	}
	for (ll i = 0; ; i++) {
		ll pw = power(k, i);
		if (pw <= mx && pw >= -mx) m[pw] = 1;
		else break;
		if (k == 1) {
			m[1] = 1;
			break;
		}
		if (k == -1) {
			m[1] = 1;
			m[-1] = 1;
			break;
		}
	}
	ll res = 0;
	for (auto x : m) {
		ll val = (x.first);
		cnt[0] = 1;
		for (int i = 1; i <= n; i++) { // 1, 2, 4, 8, 16
			res += cnt[(sum[i] - val)]; // 2, 4, 6, 8
			cnt[sum[i]] += 1; // 1, 1, 1, 1, 1
		}
		cnt.clear();
	}
	cout << res << endl;
	return 0;
}
