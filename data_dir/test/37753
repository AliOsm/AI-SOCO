#include <bits/stdc++.h>
#define pb(a)           push_back(a)
#define ll              long long int
#define scd(a)          scanf("%d",&a)
#define mp(a,b)         make_pair(a,b)
#define scl(w)          scanf("%I64d",&w)
#define scdd(a,b)       scanf("%d %d",&a,&b)
#define srt(a)          sort(a.begin(),a.end())
#define rsrt(a)         sort(a.rbegin(),a.rend())
#define scll(a,b)       scanf("%I64d %I64d",&a,&b)
///4direction ->        int del_x[]={-1,0,1,0},del_y[]={0,1,0,-1};
#define input(v,n)      for (int i=0;i<n;i++){int a;cin >> a;v.push_back(a);}
#define inputll(v,n)    for (ll i=0;i<n;i++){ll a;cin >> a;v.push_back(a);}
#define vii             vector < int >
#define vll             vector < ll >
#define pii             pair < int , int >
#define pll             pair < ll , ll >
#define mk              make_pair
#define inf8            100000008
#define inf18           1000000000000000018


using namespace std;
vii v;
bool ans = true;
int sum =0;
int n,w,b;

int fun(int a)
{
    if (a==0)return w;
    return b;
}

void res(int i)
{
    if (v[i]==2 && v[n-1-i]==2){
        if (w==min(w,b)){
            v[i]=0;
            v[n-1-i]=0;
        }
        else {
            v[i] = 1;
            v[n-1-i]=1;
        }
        sum+=(min(w,b)*2);
        return;
    }
    if (v[i]==2){
        v[i]=v[n-1-i];
        sum+=(fun(v[n-1-i]));
        return;
    }
    if (v[n-1-i]==2){
        v[n-1-i]=v[i];
        sum+=(fun(v[i]));
        return;
    }
}

int main()
{
    cin >> n >> w >> b;

    input(v,n);
    for (int i=0;i<n/2;i++){
        int fnt = v[i],bck = v[n-i-1];
        if (fnt == 0 && bck == 1){
            ans = false;
            break;
        }
        if (fnt == 1 && bck == 0){
            ans = false;
            break;
        }
        if (fnt == 2 || bck == 2){
            res(i);
        }
    }
    if (n%2 && v[n/2]==2){
        sum+=min(w,b);
    }
    if (!ans)cout << "-1" << endl;
    else cout << sum << endl;

    return 0;
}
