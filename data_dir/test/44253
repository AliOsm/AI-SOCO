#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=2e5+50;
const int mod=1e9+7;
using namespace std;
int t,i,n;
ll tota,totb,ta,tb,ans,rs,cur,tmp,x,tp,a,b;
pair<ll,ll>pr[nmax];
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>t;
	while(t--)
	{
		cin>>n>>tp>>a>>b;
		tota=totb=ta=tb=0;
		for(i=1;i<=n;i++)
		{
			cin>>pr[i].sc;
			tota+=(pr[i].sc^1);
			totb+=pr[i].sc;
		}
		for(i=1;i<=n;i++)cin>>pr[i].fr;
		sort(pr+1,pr+n+1);
		ans=0;
		for(i=1;i<=n+1;i++)
		{
			if(i<=n)cur=pr[i].fr-1;
			else cur=tp;
			if(cur<0)
			{
				ta+=(pr[i].sc^1);
				tb+=pr[i].sc;
				tota-=(pr[i].sc^1);
				totb-=pr[i].sc;
				continue;
			}
			x=a*ta+b*tb;
			if(x>cur)
			{
				ta+=(pr[i].sc^1);
				tb+=pr[i].sc;
				tota-=(pr[i].sc^1);
				totb-=pr[i].sc;
				continue;
			}
			tmp=cur-x;
			rs=ta+tb;
			if(tmp-tota*a>=0)tmp-=tota*a,rs+=tota;
			else rs+=(tmp/a),tmp-=(tmp/a)*a;
			if(tmp-totb*b>=0)tmp-=totb*b,rs+=totb;
			else rs+=(tmp/b),tmp-=(tmp/b)*b;
			ans=max(ans,rs);
			ta+=(pr[i].sc^1);
			tb+=pr[i].sc;
			tota-=(pr[i].sc^1);
			totb-=pr[i].sc;
		}
		cout<<ans<<'\n';
	}
	return 0;
}
