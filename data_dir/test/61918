#include<bits/stdc++.h>
using namespace std;
int ara[100005];
bool chck(int n)
{
    int diff= ara[0]-ara[1];
    for(int i=1; i<n-1; i++)
    {
        int x= ara[i]-ara[i+1];
        if(x!=diff)return 0;
    }return 1;
}
unordered_set<int>st;
unordered_map<int, int>mp;
int main()
{
    int n;
    while(scanf("%d", &n)==1)
    {
        st.clear();
        mp.clear();
        for(int i=0; i<n; i++)
            scanf("%d", &ara[i]);
        sort(ara, ara+n);

        if(n==1)cout<<-1<<endl;
        else if(n==2)
        {
            int diff= ara[1]-ara[0];
            if(!diff)cout<<1<<endl<<ara[0]<<endl;
            else if(diff&1)cout<<2<<endl<<ara[0]-diff<<" "<<ara[1]+diff<<endl;
            else cout<<3<<endl<<ara[0]-diff<<" "<<ara[0]+(diff>>1)<<" "<<ara[1]+diff<<endl;
        }
        else
        {
            if(chck(n))
            {
                int d= ara[1]-ara[0];
                int x= (ara[0]-d);
                int y= (ara[n-1]+d);
                if(x>y)swap(x, y);
                if(d)cout<<2<<endl<<x<<" "<<y<<endl;
                else cout<<1<<endl<<x<<endl;
            }
            else
            {
                int x, y;
                x= ara[1]-ara[0];
                st.insert(x);
                if(st.size()>2)break;
                mp[x]++;
                for(int i=1; i<n-1; i++)
                {
                    int d= ara[i+1]-ara[i];
                    st.insert(d);
                    if(!mp[d])y= d;
                    mp[d]++;
                }if(x>y)swap(x, y);

                if(st.size()==2 && (mp[x]==n-2 && mp[y]==1))
                {
                    int ans;
                    for(int i=0; i<n-1; i++)
                        if(ara[i+1]-ara[i]==y)
                        {
                            ans= ara[i]+x;
                            break;
                        }
                    ara[n]= ans;
                    sort(ara, ara+n+1);
                    if(chck(n+1))cout<<1<<endl<<ans<<endl;
                    else cout<<0<<endl;
                }
                else cout<<0<<endl;
            }
        }
    }

    return 0;
}
