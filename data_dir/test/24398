#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

struct elem {
  int l,r,i;
};

bool operator<(elem e1,elem e2)
{
  if (e1.l!=e2.l) return e1.l<e2.l;
  return e1.r<e2.r;
}

int cases;

int main()
{
  ios::sync_with_stdio(false);
  cin>>cases;
  for (int cas=0;cas<cases;cas++) {
    int n;
    cin>>n;
    vector<elem> v(n);
    vector<int> sol(n);
    for (int i=0;i<n;i++) {
      cin>>v[i].l>>v[i].r;
      v[i].i=i;
    }
    sort(v.begin(),v.end());
    int i=0;
    int right=v[0].r;
    while (i<n-1 and right>=v[i+1].l) {
      i++;
      right=max(right,v[i].r);
    }
    if (i==n-1) cout<<-1<<endl;
    else {
      for (int j=0;j<=i;j++)
	sol[v[j].i]=1;
      for (int j=i+1;j<n;j++)
	sol[v[j].i]=2;
      for (int i=0;i<n;i++) {
	if (i>0) cout<<" ";
	cout<<sol[i];
      }
      cout<<endl;
    }
  }
}
