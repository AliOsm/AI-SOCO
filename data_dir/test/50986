#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#include<bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define mod 998244353
#define inf (1LL<<61)
#define int long long
typedef long long ll;
#define ld long double
#define N 301 

struct data{
    int l,r,ind;
};
bool comp(data d1,data d2)
{
    if(d1.l != d2.l)
        return d1.l < d2.l;
    return d1.r > d2.r;
}
int32_t main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
    int n;
    cin >> n;
    data v[n];
    for(int i = 0;i < n;i++)
    {
        cin >> v[i].l >> v[i].r;
        
        v[i].ind = i;
    }
    sort(v,v+n,comp);
    set<pair<int,int>> s;
    int re = -1;
    int mx = -1;
    int ind = -1;
    vector<int> take(n,0);
    for(int i = 0;i < n;i++)
    {
         //cerr << v[i].ind << " " << re << " " << mx << " " << v[i].l <<  " " << v[i].r << endl;
        if(v[i].l <= re)
        {
            if(mx < v[i].r)
            {
                mx = v[i].r;
                ind = v[i].ind;
            }
        }
        else
        {
            if(mx < v[i].l)
            {
                if(re < mx)
                {
                    if(ind != -1)
                    {
                        re = mx;
                        take[ind] = 1;
                    }
                }
                take[v[i].ind] = 1;
                ind = v[i].ind;
                re = v[i].r;
                mx = v[i].r;
            }
            else
            if(mx < v[i].r)
            {
                if(re == v[i].l - 1)
                {
                    mx = v[i].r;
                    re = mx;
                    take[v[i].ind] = 1;
                }
                else
                {
                    if(ind != -1)
                    {
                        take[ind] = 1;
                        re = mx;
                        mx = v[i].r;

                        ind = v[i].ind;
                    }
                }
            }
            else
            {
                re = mx;
                take[ind] = 1;
            }

        }
        
    }
    if(mx > re and ind!=-1)
        take[ind] = 1;
    for(int i = 0;i < n;i++)
    {
        if(take[i] == 0)
        {
            cout << i+1 ;
            return 0;
        }
    }
    cout << -1;
}