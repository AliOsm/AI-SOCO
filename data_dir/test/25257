#include <bits/stdc++.h>
using namespace std;

vector<int> G[200010];
int a[200010], C[200010], visited[200010];

int diameter(int v, int p)
{
    int len, mv;

    function<void(int, int, int, int)> dfs=[&](int v, int c, int p, int x)
    {
        if (a[v]%p>0 || visited[v]==x) return;
        visited[v]=x;
        if (len<c) {
            len=c;
            mv=v;
        }
        for(int u: G[v]) dfs(u, c+1, p, x);
    };

    len=1;
    mv=v;
    dfs(v, 1, p, -p);
    len=1;
    dfs(mv, 1, p, p);
    return len;
}

int main()
{
    int n; scanf("%d", &n);
    for(int i=0; i<n; ++i) scanf("%d", a+i+1);
    for(int i=0; i<n-1; ++i) {
        int x, y; scanf("%d%d", &x, &y);
        G[x].push_back(y);
        G[y].push_back(x);
    }

    int res=0;
    for(int i=2; i*i<=200000; ++i) if (!C[i]) {
        for(int j=i+i; j<=200000; j+=i) C[j]=1;
        for(int v=1; v<=n; ++v) {
            if (!(a[v]>1 && visited[v]!=i && visited[v]!=-i)) continue;
            res=max(res, diameter(v, i));
        }
        for(int v=1; v<=n; ++v) while (a[v]%i==0) a[v]/=i;
    }
    for(int v=1; v<=n; ++v) {
        if (!(a[v]>1 && visited[v]!=a[v] && visited[v]!=-a[v])) continue;
        res=max(res, diameter(v, a[v]));
    }
    cout<<res<<endl;
}
