#include <bits/stdc++.h>
using namespace std;

int MM[1000000] = {0};
vector<vector<int>> E;
int leaves = 0;
int n;
int dfs(int ind) {
    if (E[ind].empty()) {
        leaves ++;
        return 0;
    }
    if (MM[ind] == 1) {
        int discard = dfs(E[ind][0]);
        for (int i = 1; i < E[ind].size(); i++) {
            discard = min(discard, dfs(E[ind][i]));
        }
        return discard;
    }
    else {
        int discard = (int)(E[ind].size()) - 1;
        for (int e : E[ind]) {
            discard += dfs(e);
        }
        return discard;
    }
}


int main() {
    scanf("%d", &n);

	for (int i = 0; i < n; i++) {
        scanf("%d", &MM[i]);
	}

    for (int i = 0; i < n; i++){
        E.push_back(vector<int>());
    }

	for (int i = 0; i < n - 1; i++) {
        int v; scanf("%d", &v);
        E[v-1].push_back(i+1);
	}



	int discard = dfs(0);
	cout << leaves - discard;

}
