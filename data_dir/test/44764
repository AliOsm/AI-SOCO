#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 3000;
int a[N], b[N], l[N], r[N];
pair<int, int> c[N];

int main(){
	int n, p, s;
	scanf("%d%d%d", &n, &p, &s);
	f(i, 0, n)scanf("%d", a + i);
	f(i, 0, n)scanf("%d", b + i);
	f(i, 0, n)c[i] = make_pair(a[i] - b[i], i);
	sort(c, c + n);
	multiset<int> st;
	int sum = 0;
	f(i, 0, s)sum += b[c[i].second], st.insert(b[c[i].second]), l[i] = sum;
	f(i, s, n){
		sum += b[c[i].second];
		st.insert(b[c[i].second]);
		sum -= *st.begin();
		st.erase(st.begin());
		l[i] = sum;
	}
	st.clear();
	sum = 0;
	for (int i = n - 1; i >= n - p; --i)sum += a[c[i].second], st.insert(a[c[i].second]), r[i] = sum;
	for (int i = n - p - 1; i >= 0; --i){
		sum += a[c[i].second];
		st.insert(a[c[i].second]);
		sum -= *st.begin();
		st.erase(st.begin());
		r[i] = sum;
	}
	int an = 0, z = 0;
	f(i, s - 1, n - p)if (l[i] + r[i + 1] > an)an = l[i] + r[i + 1], z = i;
	printf("%d\n", an);
	set<pair<int, int> > zt;
	f(i, z + 1, n){
		zt.insert(make_pair(a[c[i].second], c[i].second));
		if ((int)zt.size() > p)zt.erase(zt.begin());
	}
	for (set<pair<int, int> >::iterator it = zt.begin(); it != zt.end(); ++it){
		if (it != zt.begin())printf(" ");
		printf("%d", it->second + 1);
	}
	printf("\n");
	zt.clear();
	f(i, 0, z + 1){
		zt.insert(make_pair(b[c[i].second], c[i].second));
		if ((int)zt.size() > s)zt.erase(zt.begin());
	}
	for (set<pair<int, int> >::iterator it = zt.begin(); it != zt.end(); ++it){
		if (it != zt.begin())printf(" ");
		printf("%d", it->second + 1);
	}
}