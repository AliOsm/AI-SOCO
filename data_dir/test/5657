//g++ -std=c++14 -g -O2 -o ./a ./A.cpp
#include <bits/stdc++.h>
using namespace std;
#define ff first
#define ss second
#define nl '\n'
typedef long long ll;
//////////////////////////////////////////////////////////////////////

const int LG = 21;
int n,a[1<<LG];

vector<int> mst[1<<LG];
ll inv[LG],rev[LG];

void make(int lvl,vector<int>&c,vector<int>&a,vector<int>&b){
  int ax=0,bx=0;
  for(;ax<a.size() and bx<b.size();){
    if(a[ax] < b[bx]){
      rev[lvl]+=b.size()-bx;
      ax++;
    }else if(a[ax] > b[bx]){
      inv[lvl]+=a.size()-ax;
      bx++;
    }else{
      int aa = ax, bb = bx;
      for(;aa<a.size() and a[aa] == a[ax];aa++);
      for(;bb<b.size() and b[bb] == b[bx];bb++);
      ll ac = aa-ax , bc = bb-bx;

      inv[lvl] += bc*(a.size()-aa);
      rev[lvl] += ac*(b.size()-bb);
      
      ax=aa;bx=bb;
    }
  }
  
  merge(a.begin(),a.end(),b.begin(),b.end(),back_inserter(c));
}

int lvl(int i){
  int ret=0;
  for(;i>1;i>>=1,ret++);
  return n-ret;
}

int main(){
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
  
  cin>>n;
  
  memset(inv,0,sizeof inv);memset(rev,0,sizeof rev);

  for(int i=0;i<1<<n;i++){
    cin>>a[i];
    mst[i+(1<<n)].emplace_back(a[i]);
  }

  for(int i=(1<<n)-1;i>=1;i--){
    make(lvl(i),mst[i],mst[i<<1],mst[i<<1|1]);
  }
  
  int m;cin>>m;
  while(m--){
    int q;cin>>q;

    for(int j=q;j>=0;j--)
      swap(inv[j],rev[j]);
    
    ll ans = 0;
    for(int j=n;j>=0;j--)
      ans+=inv[j];
    
    cout<<ans<<nl;//
  }
  
  return 0;
}
