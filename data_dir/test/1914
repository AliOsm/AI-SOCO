////////////////////////////////////////////    _LeMur_
//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 1005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int binpow(int a,long long b){
    if(b == 0)return 1;
    if(b % 2)return a * 1ll * binpow(a , b - 1) % mod;
    int t = binpow(a , b / 2);
    return t * 1ll * t % mod;
}

int n;
long long m;

vector <int> p;

int answ = 1;

int calc(long long n,int p){
    int pat = 1;
    while(n != 0){
        pat = pat * 1ll * binpow(p , n / p) % mod;
        n /= p;
    }
    return pat;
}

int main(){
	mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());
    cin >> n >> m;
    for(int i=2;i<=sqrt(n);i++){
        if(n % i == 0){
            p.push_back(i);
            while(n % i == 0){
                n /= i;
            }
        }
    }
    if(n != 1) p.push_back(n);
    for(int i=0;i<(int)p.size();i++){
        answ = answ * 1ll * calc(m , p[i]) % mod;
    }
    cout << answ << endl;
    return 0;
}
