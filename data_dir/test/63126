#include <iostream>
#include <cstdio>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <cstring>
#include <fstream>
#include <memory.h>
#include <iomanip>
#include <omp.h>
#include <string>

using namespace std;

#define right asfdsg
#define left asfdsvs
#define F first
#define S second

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

int n, m, k;
char s[1005];
char t[1005];
int f[1005][1005][11][2];

void update ( int &a, int b ) {
    a = max (a, b);
}

int main() {
    scanf ("%d%d%d\n", &n, &m, &k);
    gets (s + 1);
    gets (t + 1);
    f[0][0][0][0] = 0;
    for (int fi = 1; fi <= n; fi ++) {
        for (int se = 1; se <= m; se ++) {
            for (int num = 1; num <= k; num ++) {
                update (f[fi][se][num][0], f[fi - 1][se][num][0]);
                update (f[fi][se][num][0], f[fi - 1][se][num][1]);
                update (f[fi][se][num][0], f[fi][se - 1][num][0]);
                update (f[fi][se][num][0], f[fi][se - 1][num][1]);
                if (s[fi] == t[se]) {
                    update (f[fi][se][num][1], f[fi - 1][se - 1][num][1] + 1);
                    update (f[fi][se][num][1], f[fi - 1][se - 1][num - 1][0] + 1);
                    update (f[fi][se][num][1], f[fi - 1][se - 1][num - 1][1] + 1);
                }
            }
        }
    }
    int ans = max (f[n][m][k][0], f[n][m][k][1]);
    cout << ans;
    return 0;
}
