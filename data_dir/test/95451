#include <cstdio>
#include <vector>
#include <set>
#include <cstring>
#include <iostream>

using namespace std;

const int N = 100'009;

vector<int> g[N];
int cnt[N];
bool was[N];

int main() {
  int n, k;
  scanf("%d %d", &n, &k);
  for (int i = 0; i < n; ++i) {
    g[i].clear();
  }
  for (int i = 0; i < n - 1; ++i) {
    int x, y;
    scanf("%d %d", &x, &y);
    --x;
    --y;
    g[x].push_back(y);
    g[y].push_back(x);
  }
  memset(was, false, sizeof was);
  set<int> s;
  for (int i = 0; i < n; ++i) {
    if ((int)g[i].size() == 1) {
      s.insert(i);
      was[i] = true;
    }
  }
  memset(cnt, 0, sizeof cnt);
  int rem = n;
  while (k > 0) {
    if (rem < 4) {
      puts("No");
      return 0;
    }
    set<int> ns;
    for (int x : s) {
      for (int y : g[x]) {
        if (was[y]) {
          continue;
        }
        ++cnt[y];
        ns.insert(y);
      }
    }
    for (int x : ns) {
      was[x] = true;
      if (cnt[x] < 3) {
        puts("No");
        return 0;
      }
      if (cnt[x] != (int)g[x].size() - (k > 1)) {
        puts("No");
        return 0;
      }
    }
    rem -= (int)s.size();
    s = ns;
    --k;
  }
  puts(rem == 1 ? "Yes" : "No");
}
