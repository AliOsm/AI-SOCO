#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
using namespace std;

const long long MOD = 1e9 + 7;

int a[10][10], res;
void rec(int i, int j, int h, int w, int p) {
    if (i == h) {
        bool ok = 1;
        for (int ii = 0; ok && ii < h; ii++) {
            int pp = 1;
            for (int jj = 0; jj < w; jj++)
                pp *= a[ii][jj];
            ok &= pp == p;
        }
        for (int jj = 0; ok && jj < w; jj++) {
            int pp = 1;
            for (int ii = 0; ii < h; ii++)
                pp *= a[ii][jj];
            ok &= pp == p;
        }
        res += ok;
        return;
    }
    if (j == w) {
        rec(i + 1, 0, h, w, p);
        return;
    }
    a[i][j] = 1;
    rec(i, j + 1, h, w, p);
    a[i][j] = -1;
    rec(i, j + 1, h, w, p);
}

long long binPow(long long x, long long p) {
    if (!p)
        return 1;
    if (p % 2)
        return binPow(x, p - 1) * x % MOD;
    long long r = binPow(x, p / 2);
    return r * r % MOD;
}

int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    //for (int h = 1; h <= 5; h++) {
    //    for (int w = 1; w <= 5; w++) {
    //        res = 0;
    //        rec(0, 0, h, w, -1);
    //        printf("(%d, %d) = %d\n", h - 1, w - 1, res);
    //    }
    //    printf("\n");
    //}

    long long h, w, k;
    cin >> h >> w >> k;
    if (k == -1 && (h + w) % 2) {
        cout << 0;
    } else {
        long long res = binPow(2, h - 1);
        res = binPow(res, w - 1);
        cout << res;
    }
}