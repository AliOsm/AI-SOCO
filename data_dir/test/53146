/*input
6
1 2
1 3
3 4
3 5
2 6
*/
#include "bits/stdc++.h"
using namespace std;
int deg[500005],n,dad[500005];
vector<int> v[500005];
int in[500005], out[500005];

set<int> vis;

int CLK  = 1;
void dfs(int u, int dad, int depth){
	for(auto i: v[u]) if(i != dad){
		in[i] = CLK++;
	}
	out[u] = CLK++;
	reverse(v[u].begin(), v[u].end());
	for(auto i: v[u]) if(i != dad){
		dfs(i, u, depth + 1);
	}
}
int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	int n; cin >> n;
	for(int i = n, x, y; --i;){
		cin >> x >> y;
		v[x].push_back(y);
		v[y].push_back(x);
		++deg[x]; ++deg[y];
	}

	in[1] = CLK++;
	dfs(1, 0, 1);

	// for(int i = 2; i <= n; ++i)
	// 	--deg[i];

	// queue<int> q;q.push(1);
	// int CLK = 1;
	// in[1] = CLK++;
	// while(q.size()){
	// 	auto u = q.front(); q.pop();
	// 	for(auto i: v[u]) if(i != dad[u]){
	// 		dad[i] = u;
	// 		in[i] = CLK++;
	// 		q.push(i);
	// 	}
	// 	out[u] = CLK++;
	// }

	for(int i = 1; i <= n; ++i)
		cout << in[i] << ' ' << out[i] << '\n'; 
}