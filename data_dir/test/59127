#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n;
	string s;
	cin >> n >> s;
	
	int ans = 0, bal = 0, lo = 0, mn = 0;
	
	for(int i = 0; i < n; i++){
		if(s[i] == '(')
			bal++;
		else
			bal--;
		mn = min(mn, bal);
		if(bal == 0){
			if(mn < 0)
				ans += i - lo + 1;
			lo = i + 1;
			mn = 0;
		}
	}
	
	if(bal != 0)
		ans = -1;
		
	cout << ans << endl;
	
	return 0;
}