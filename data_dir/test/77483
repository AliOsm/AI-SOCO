#include<bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define ll long long
#define maxn 500005
#define fr(i,j,k) for(int i=j;i<k;i++)
#define f(n) fr(i,0,n)
#define f1(n) fr(i,1,n+1)
#define ms(i) memset(i,0,sizeof(i));
#define ms1(i) memset(i,-1,sizeof(i));
#define F first
#define S second
const int mod = 1e9 + 7;
int b[maxn+5];
void update(int now){
    while(now <= maxn){
        b[now]++;
        now += now & (-now);
    }
}
int sum(int x){
    int ret = 0;
    while(x){
        ret += b[x];
        x -= x & (-x);
    }
    return ret;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    vector<int>p(n+5),q(n+5);
    f1(n){
        cin >> p[i];
    }
    f1(n){
        q[p[i]] = i;
    }
    ll ls = 0, rs = 0, inv = 0;
    set<int>lh,rh;
    f1(n){
        inv += i - 1 - sum(q[i]);
        update(q[i]);
        if(lh.empty()||q[i] < *lh.rbegin()){
            lh.insert(q[i]),ls += q[i];
        }
        else{
            rh.insert(q[i]),rs += q[i];
        }
        while(rh.size() > lh.size()){
            int x = *rh.begin();
            rs -= x;
            ls += x;
            rh.erase(x);
            lh.insert(x);
        }
        while(lh.size() > rh.size() + 1){
            int x = *lh.rbegin();
            ls -= x;
            rs += x;
            lh.erase(x);
            rh.insert(x);
        }
        ll ans = inv;
        ll x = *lh.rbegin();
        ll L = lh.size(), R = rh.size();
        ans += (x + 1) * x / 2 - (x - L + 1) * (x - L) / 2 - ls;
        ans += rs - ((x + R + 1) * (x + R) / 2 - (x) * (x + 1) / 2);
        cout << ans <<' ';
    }
    cout << endl;
}