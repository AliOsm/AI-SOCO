#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cassert>
using namespace std;

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define each(i,c) for(__typeof(c.begin()) i=c.begin();i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef pair<int,int> pi;
typedef long long ll;
const int inf=(int)1e9;
const double EPS=1e-9, INF=1e12;

int n, m;
int c[100000];
vector<vi> e;
map<int, set<int> > s;

int main(){
	cin >> n >> m;
	rep(i, n){
		cin >> c[i];
		s[c[i]].insert(i);
	}
	e.resize(n);
	rep(i, m){
		int a, b;
		cin >> a >> b;
		a--; b--;
		e[a].pb(b);
		e[b].pb(a);
	}
	int ans = -1, mxi = -1;
	each(i, s) if(i->second.size()){
		set<int> ss;
		each(j, i->second){
			rep(k, e[*j].size()){
				if(c[e[*j][k]] != i->first) ss.insert(c[e[*j][k]]);
			}
		}
		if(ans < (int)ss.size() || ans == (int)ss.size() && mxi > i->first)
			ans = ss.size(), mxi = i->first;
	}
	cout << mxi << endl;
	
	return 0;
}
