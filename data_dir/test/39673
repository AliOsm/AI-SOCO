#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
#define MAXV 2000010
int N;
vi in;
int small[MAXV];
int main(){
  scanf("%d" , &N);
  in.resize(N);
  for(int i=0;i<N;++i)
   scanf("%d" , &in[i]);
  sort(all(in));
  in.erase(unique(all(in)) , in.end());
  N = sz(in);
  small[0] = -1;
  for(int i=1;i<MAXV;++i)
   if(small[i-1]+1 < N &&
      in[small[i-1]+1] < i)
    small[i] = small[i-1] + 1;
   else
    small[i] = small[i-1];
  int ans = 0;
  for(int i=0;i<N;++i)
   for(int j = 2*in[i];j<MAXV;j += in[i])
    if(small[j] != -1)
     relaxMax(ans , in[small[j]] - (j - in[i]));
  cout<<ans<<'\n';
  return 0;
}
