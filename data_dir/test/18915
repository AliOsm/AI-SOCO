#include <iostream>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <algorithm>

using namespace std;

int main() {
//    freopen("input.txt", "r", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    int test;
    cin >> test;

    while (test--) {
        long long n, a, b;
        cin >> n >> a >> b;

        string s;
        cin >> s;

        vector<vector<long long> > dp(n + 1, vector<long long>(2, (long long) 1e18));
        dp[0][0] = b;

        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < 2; ++j) {
                if (s[i] == '0') {
                    dp[i + 1][j] = min(dp[i + 1][j], dp[i][j] + (j + 1) * b + a);
                    dp[i + 1][1 - j] = min(dp[i + 1][1 - j], dp[i][j] + (1 - j + 1) * b + a * 2);
                } else {
                    if (j) {
                        dp[i + 1][j] = min(dp[i + 1][j], dp[i][j] + (j + 1) * b + a);
                    }
                }
            }
        }

        cout << dp[n][0] << "\n";
    }
}
