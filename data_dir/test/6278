#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
using namespace std;

int LIS(vector<int> V){
    
    vector<int> L;
    for(int i = 0; i < V.size(); ++i){
        
        int p = upper_bound(L.begin(), L.end(), V[i]) - L.begin();
        if(p == L.size()){
            L.push_back(V[i]);
        }else{
            L[p] = V[i];
        }
        
    }
    return L.size();
    
}

int main()
{
    int N, T;
    cin >> N >> T;
    vector<int> V(N);
    vector<int> R(310);
    int ma = 0;
    for (int i = 0; i < N; ++i) {
        cin >> V[i];
        ma = max(ma, ++R[V[i]]);
    }
    int TR = min(N, T);
    int RSZ = N * TR;
    vector<int> V2(RSZ);
    for (int i = 0; i < TR; ++i) {
        for(int j = 0; j < N; ++j){
            V2[i*N + j] = V[j];
        }
    }
    int lis = LIS(V2);
    cout << lis + ma * (T - TR) << endl;
}

/*
 * 
4 10
1 2 3 1


 */