#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <list>
#include <fstream>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define ss 	                second
#define ff  	                first


typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;
typedef vector<int>                 vi;
typedef vector<ll>                  vl;

ll suf(ll a){ return (a*(a + 1)) / 2; }
const ll  OO = 1e6 + 10, SIZE = 1e6 + 10;
vector<vector<int> >adj, can;
bool OK;

int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};

int main()
{
	ll n, m, c, t, x, y;
	while (cin >> n){
		map<ll, ll>l, r;
		map<pair<ll, ll>, ll>end;
		for (int i = 0; i < n; i++){
			scanf("%I64d%I64d", &x, &y);
				l[x]++;
				r[y]++;
				end[{x, y}]++;
		}
		ll ans = 0;
		for (map<ll, ll>::iterator it = l.begin(); it != l.end(); it++)
			ans += suf(it->second - 1);

		for (map<ll, ll>::iterator it = r.begin(); it != r.end(); it++)
			ans += suf(it->second - 1);

		for (map<pair<ll, ll>, ll>::iterator it = end.begin(); it != end.end(); it++)
			ans -= suf(it->second - 1);

		cout << ans << endl;
	}
	return 0;
}