#include <stdio.h>
#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)2 * 1e9;
const ll MOD = (ll)1e9 + 7;
const ll P = 239;
const ll MAX_N = 100000;
const ll ABC = 26;
const ld pi = 3.1415926535897932384626;
const ld eps = 1e-6;

int main()
{
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    int n, m;
    scanf("%d %d", &n, &m);
    int sz = round(sqrt(n));
    int a[n];
    for (int i = 0; i < n; i++)
        scanf("%d", &a[i]);
    pair<int, int> b[n];
    for (int i = 0; i < n; i += sz)
        for (int j = min(n - 1, i + sz - 1); j >= i; j--)
            if (j + a[j] >= min(n, i + sz))
                b[j] = {1, j};
            else
                b[j] = {1 + b[j + a[j]].first, b[j + a[j]].second};
    for (int i = 0; i < m; i++)
    {
        int t;
        scanf("%d", &t);
        if (t == 0)
        {
            int x, v;
            scanf("%d %d", &x, &v);
            x--;
            a[x] = v;
            for (int j = min(n - 1, x / sz * sz + sz - 1); j >= x / sz * sz; j--)
                if (j + a[j] >= min(n, x / sz * sz + sz))
                    b[j] = {1, j};
                else
                    b[j] = {1 + b[j + a[j]].first, b[j + a[j]].second};
        }
        else
        {
            int x;
            scanf("%d", &x);
            x--;
            int cnt = 0;
            while (true)
            {
                int y = b[x].second;
                cnt += b[x].first;
                if (y + a[y] >= n)
                {
                    printf("%d %d\n", y + 1, cnt);
                    break;
                }
                x = y + a[y];
            }
        }
    }
    return 0;
}
