/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include <bits/stdc++.h>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(500005);

int a[MAXN];

int main(){

    int n,k;
    S("%d%d",&n,&k);

    int low = 1e9, high = 1, mid, MIN, MAX, num, d;

    REP(i,n)
    {
        S("%d",&a[i]);
        low = min(low, a[i]);
        high = max(high, a[i]);
    }

    MIN = low, MAX = high;

    while(low <= high)
    {
        mid = (low+high)/2;

        long long num1 = 0, num2 = 0;

        REP(i,n)
        {
            if(a[i] < mid)
                num1 += mid-a[i];
            if(a[i] > mid)
                num2 += a[i]-mid;
        }

        if(num2 >= num1 && num1 <= k) MIN = mid, low = mid+1;

        else high = mid-1;

    }

    low = MIN, high = MAX;

    while(low <= high)
    {
        mid = (low+high)/2;

        int cnt = 0;
        long long num1 = 0, num2 = 0;

        REP(i,n)
        {
            if(a[i] <= MIN)
                num1 += MIN-a[i], cnt++;
            else if(a[i] > mid)
                num2 += a[i]-mid;
        }

        if(num2 >= num1) MAX = mid, d = num2-num1, num = min(cnt-1ll,k-num1), low = mid+1;

        else high = mid-1;

    }

    multiset<int>s;
    multiset<int>::iterator it, it2;

    REP(i,n)
    {
        if(a[i] <= MIN) s.insert(MIN);
        else if(a[i] >= MAX)
        {
            if(d > 0) s.insert(MAX+1), d--;
            else s.insert(MAX);
        }
        else s.insert(a[i]);
    }

    if(n >= 2)
    {
        REP(i,num)
        {
            it = s.begin();
            it2 = s.end(); it2--;

            if(*it == *it2) break;

            int num1 = *it+1, num2 = *it2-1;

            s.erase(it);
            s.erase(it2);

            s.insert(num1);
            s.insert(num2);
        }
    }

    it2 = s.end(); it2--;

    MAX = *it2;

    P("%d",MAX-MIN);

}
