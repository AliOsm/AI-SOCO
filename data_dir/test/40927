#include <bits/stdc++.h>

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//#pragma GCC optimize("Ofast")
//1.0 * clock() / CLOCKS_PER_SEC

#define fi first
#define se second
#define ll long long
#define dl double long

using namespace std;

const int NN = 1e6 + 7;
const int N = 2e5 + 7;
const int M = 20;
const ll mod = 998244353;
const ll inf = 1e18 + 7;
const dl rf = 1e-14;

void solve1()
{
    int n;
    cin >> n;
    vector < ll > v(n);
    vector < ll > pw(20 + 1);
    vector < ll > cnt(20);
    for( int i = 0; i < n; i++ ){
        cin >> v[i];
        int l = 0;
        int x = v[i];
        while( x > 0 ){
            l += 1;
            x /= 10;
        }
        cnt[l] += 1;
    }
    pw[0] = 1;
    for( int i = 1; i <= 20; i++ ){
        pw[i] = pw[i - 1] * 10 % mod;
    }
    ll ans = 0;
    for( int i = 0; i < n; i++ ){
        ll x = v[i];
        ll res = 0;
        ll res1 = 0;
        vector < ll > g;
        while( x > 0 ){
            g.push_back(x % 10);
            x /= 10;
        }
        for( int j = 0; j < (int)g.size(); j++ ){
            for( int h = 0; h < j; h++ ){
                ans = ( ans + pw[j + h + 1] * cnt[h + 1] * g[j] * 2 ) % mod;
            }
            for( int h = j; h < 10; h++ ){
                ans = ( ans + pw[j * 2 + 1] * cnt[h + 1] * g[j] ) % mod;
                ans = ( ans + pw[j * 2] * cnt[h + 1] * g[j] ) % mod;
            }
        }
    }
    cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0); srand(time(0));
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
