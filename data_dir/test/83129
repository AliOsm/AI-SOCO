#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;


lli special[N];

lli w[N];
lli ans[N];

lli get(lli x)
{
    if(x == w[x])
        return x;
    return w[x] = get(w[x]);
}

lli merge(lli a, lli b)
{
    a = get(a);
    b = get(b);
    if(a == b)
        return a;
    if(ans[a] < ans[b])
        swap(b, a);
    ans[a] += ans[b];
    special[a] += special[b];
    w[b] = a;
    return a;
}

void solve()
{
    lli n, m, k;
    cin>>n>>m>>k;
    lli x[n];
    for(int i = 0; i <= max(n, m); i ++)
    {
        w[i] = i;
        ans[i] = 1;
    }
    for(int i = 0; i < k; i ++)
    {
        cin>>x[i];
        special[x[i]]++;
    }
    vector<pair<lli, pair<lli, lli >> > haa;
    for(int i = 0; i < m; i ++)
    {
        lli u,v, w;
        cin>>u>>v>>w;
        haa.push_back({w, {u, v}});
    }
    sort(haa.begin(), haa.end());
    for(int i = 0; i < m; i ++)
    {
        lli ok = merge(haa[i].second.first, haa[i].second.second);
        if(special[ok] == k)
        {
            for(int j = 0; j < k; j ++)
            {
                cout<<haa[i].first<<' ';
            }
            return ;
        }
    }
    return ;
}
/*
10
6
10 3 2 5 7 8
*/
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
