#include <iostream>
#include <chrono>
#include <random>
#include <cassert>
#include <numeric>
#include <limits>
#include <climits>
#include <cmath>
#include <deque>
#include <cstring>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <vector>
#include <algorithm>
using namespace std;
#define all(v) (v).begin(), (v).end()
#define pb(v) push_back(v)
#define fst first
#define snd second
using ll = long long int;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vint = vector<int>;


class solver {
public:
    void solve(int n, int k) {
        int ans = 0;
        if (k % 2 == 0) {
            int a;
            for (int i = 0; i < n; i++) {
                cin >> a;
                if (a == 1) {
                    ans ^= 1;
                } else if (a == 2) {
                    ans ^= 2;
                } else {
                    ans ^= ((a + 1) % 2);
                }
            }
        } else {
            int a;
            for (int i = 0; i < n; i++) {
                cin >> a;
                if (a == 1 || a == 3) {
                    ans ^= 1;
                } else if (a % 2 == 0) {
                    vector<int> memes;
                    int cur = a;
                    while (cur) {
                        if (cur == 1 || cur == 3) {
                            break;
                        }
                        if (cur % 2 == 0) {
                            memes.push_back(cur);
                            cur /= 2;
                        } else {
                            break;
                        }
                    }
                    reverse(all(memes));
                    map<int, int> ril;
                    ril[1] = 1;
                    ril[3] = 1;
                    for (int i = 0; i < memes.size(); i++) {
                        set<int> were;
                        were.insert(ril[memes[i] / 2]);
                        were.insert(ril[memes[i] - 1]);
                        int kz = 0;
                        while (were.count(kz)) {
                            kz++;
                        }
                        ril[memes[i]] = kz;
                    }

                    ans ^= ril[a];
                }
            }
        }

        cout << (ans ? "Kevin" : "Nicky") << endl;
    }
};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n, k;
    while (cin >> n >> k) {
        solver s;
        s.solve(n, k);
    }
}
