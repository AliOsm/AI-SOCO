#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef pair<ll,ll> pll;
typedef pair<pll,ll> plll;
typedef pair<pll,pll> ppll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back

const int N = 1e5 + 5;
const int MOD = 1e9 + 7;
//const int RANDOM = chrono::high_resolution_clock::now().time_since_epoch().count();
//struct chash {
//    int operator()(int x) const { return x ^ RANDOM; }
//};
//gp_hash_table<ll, int, chash> mp[N];
ll a[N];
vector<int> g[N];
ll ans = 0;
map<ll,int> tmp;
void dfs(int v,int p,map<ll,int> mpt){
    tmp.clear();
    tmp[a[v]]++;
    for(auto &it : mpt){
        tmp[__gcd(it.fst,a[v])] += it.snd;
    }
    for(auto &it : tmp){
        ans += it.fst * (ll)it.snd;
        ans %= MOD;
    }
    mpt = tmp;
    for(auto &it : g[v]){
        if(it == p)continue;
        dfs(it,v,mpt);
    }
}
int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    int n;
    cin >> n;
    for(int i = 0;i < n; ++i)cin >> a[i];
    for(int i = 1;i < n; ++i){
        int u,v;
        cin >> u >> v;
        --u,--v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs(0,0,{});
    cout << ans;
    return 0;
}
