#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 100005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int a[5] , aa[5];
int b[10] = {1 , 2 , 3 , 1 , 3 , 2 , 1};

int main() {
	mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());
	cin>>a[1]>>a[2]>>a[3];
	int x = a[1] / 3;
	x = min(x , a[2] / 2);
	x = min(x , a[3] / 2);
	a[1] -= x * 3;
	a[2] -= 2 * x;
	a[3] -= 2 * x;
	int answ = 0;
    for(int i=0;i<7;i++){
        int s = 0;
        int v = i;
        for(int j=1;j<=3;j++){
            aa[j] = a[j];
        }
        while(true){
            int id = b[v];
            if(aa[id] == 0)break;
            --aa[id];
            ++s;
            v = (v + 1) % 7;
        }
        answ = max(answ , s + x * 7);
    }
    cout << answ << endl;
	return 0;
}
