#include<bits/stdc++.h>

using namespace std;

#define forn(i, n) for(int i = 0; i < int(n); ++i)
#define nfor(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define for1(i, n) for(int i = 1; i < int(n); ++i)
#define fork(i, k, n) for(int i = int(k); i <= int(n); ++i)
#define forft(i, from, to) for(int i = int(from); i < int(to); ++i)
#define fore(i, from, to) for(int i = int(from); i < int(to); ++i)
#define forr(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define pb push_back
#define mp make_pair
#define mnp(a, b) make_pair((a) < (b) ? (a) : (b), (a) < (b) ? (b) : (a))
#define sz(d) int(d.size())
#define all(a) a.begin(), a.end()
#define ms(a, v) memset(a, v, sizeof(a))
#define msn(a, v, n) memset(a, v, n * sizeof(a[0]))
#define mcn(dst, src, n) memcpy(dst, src, n * sizeof(src[0]))
#define x first
#define y second
#define correct(x, y, xmax, ymax) ((x) >= 0 && (x) < (xmax) && (y) >= 0 && (y) < (ymax))

template<typename T> T sqr(const T &x) {
    return x * x;
}

template<typename T> T my_abs(const T &x) {
    return x < 0 ? -x : x;
}

typedef long long li;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned long long uli;
typedef long double ld;
typedef pair<int,int> pt;
typedef pair<li,li> pli;
typedef pair<ld,ld> pd;

const int INF = (int)1e9;
const li LINF = (li)4e18;
const li INF64 = LINF;
const li INFLL = LINF;
const ld EPS = 1e-9;
const ld PI = 3.1415926535897932384626433832795;
const int N = 1000 * 1000 + 9;
const int MOD = int(1e9) + 7;

bool f(int n){
    int k = 1;
    while(n % 2 == 0)
        n /= 2, ++k;
    ++n;
     while(n % 2 == 0)
        n /= 2, --k;
    return n == 1 && k == 0;
}

void solve() {
    int n;
    cin >> n;
    int res = 1;
    for(int i = 1; i * i <= n; ++i){
        if(n % i)
            continue;
        if(f(i))
            res = max(res, i);
        if(f(n / i))
            res = max(res, n / i);
    }
    
    cout << res << endl;
}

int main() {

    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    
    srand((unsigned int)time(NULL));

    cout << setprecision(15) << fixed;

    //read();
    solve();
    
#ifdef SU2_PROJ
    cerr << "time: " << clock() << " ms" << endl;
#endif

    return 0;
}