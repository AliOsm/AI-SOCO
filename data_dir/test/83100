//bismillahir rahmanir rahim            //Author:Fayed Anik

#include <bits/stdc++.h> 

using namespace std;


#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e7
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")


int dp[100005][2],n;
string s;

int solve(int pos,int state){
	int &ret=dp[pos][state];
	if(pos==n) return 0;
	if(ret!=-1){
		return ret;
	}
	ret=INF;
	if(state){
		if(s[pos]>='a' and s[pos]<='z'){
			ret=min(ret,1+solve(pos+1,state));
			ret =min(ret,solve(pos+1,!state));
		}

		else if(s[pos]>='A' and s[pos]<='Z'){
			ret=min(ret,solve(pos+1,state));
			ret =min(ret,solve(pos+1,!state));
		}

	}
	else{

		if(s[pos]>='A' and s[pos]<='Z'){
			ret=min(ret,1+solve(pos+1,state));
		}
		else{
			ret=min(ret,solve(pos+1,state));
		}
	}

	return dp[pos][state]=ret;
}
int main(){
	cin>>s;
	n=s.size();
	memset(dp,-1,sizeof dp);
	int ans=solve(0,1);
	pf(ans);
}

