#include <bits/stdc++.h>
#define LL long long
#define VI vector<int>
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define INF 0x3f3f3f3f
#define ULL unsigned long long
#define onbits __builtin_popcountll
using namespace std;
int R[100010];
int n, m;
VI room[100010];
vector<pii> g[100010];
int col[100010];
bool f(int cur){
	if(col[cur]) return true;
	queue<int> q;
	q.push(cur);
	col[cur] = 1;
	while(!q.empty()){
		cur = q.front(); q.pop();
		for(int i = 0; i < (int)g[cur].size(); i++){
			int next = g[cur][i].first, c = g[cur][i].second;
			if(c == 0){
				if(!col[next]){
					col[next] = ((col[cur] == 1) ? (2) : (1));
					q.push(next);
				}else{
					//printf("%d %d %d %d\n", cur, next, col[cur], col[next]);
					if(col[cur] == col[next]) return false;
				}
			}else{
				if(!col[next]){
					col[next] = col[cur];
					q.push(next);
				}else{
					if(col[cur] != col[next]) return false;
				}
			}
		}
	}
	return true;
}
int main(){
	scanf("%d %d", &n, &m);
	bool z = false;
	for(int i = 1; i <= n; i++){
		scanf("%d", &R[i]);
		z = z || !R[i];
	}
	if(!z){
		printf("YES\n");
		return 0;
	}
	
	for(int i = 1; i <= m; i++){
		int x;
		scanf("%d", &x);
		int on = 0;
		for(int j = 0; j < x; j++){
			int xi;
			scanf("%d", &xi);
			room[xi].pb(i);
		}
	}
	for(int i = 1; i <= n; i++){
		g[room[i][0]].pb(mp(room[i][1], R[i]));
		g[room[i][1]].pb(mp(room[i][0], R[i]));
	}
	bool ans = true;
	for(int i = 1; i <= m && ans; i++) ans = ans && f(i);
	printf("%s\n", ans ? "YES" : "NO");
	return 0;
}