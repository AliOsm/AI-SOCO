#include <bits/stdc++.h>

using namespace std;
typedef pair<int, int> PII;
typedef long long ll;
typedef long double ld;
#define x first
#define y second

int nxt() {
    int a;
    scanf("%d", &a);
    return a;
}


char s[10];

int getTime() {
    int hh = (s[0] - '0') * 10 + (s[1] - '0');
    int mm = (s[3] - '0') * 10 + (s[4] - '0');
    int ss = (s[6] - '0') * 10 + (s[7] - '0');

    return (hh * 60 + mm) * 60 + ss;
}

const int N = 30000;
int ri[N];
int user = 0;

struct cmp {
    bool operator()(int l, int r) {
        return ri[l] < ri[r];
    }
};

inline void solve() {
    int n = nxt();
    int m = nxt();
    int t = nxt();

    int tm[n];

    for (int i = 0; i < n; ++i) {
        scanf("%s", s);
        tm[i] = getTime();
    }
    set<int> online;
    bool ok = false;
    int ans[n];

    for (int i = 0; i < n; ++i) {
        while (!online.empty()) {
            int v = *online.begin();
            if (ri[v] < tm[i]) {
                online.erase(v);
            } else {
                break;
            }
        }

        if (online.size() == m) {
            ok = true;
            int v = *online.rbegin();
            ans[i] = v;
            online.erase(v);
            ri[v] = tm[i] + t - 1;
            online.insert(v);
        } else {
            int v = user++;
            ans[i] = v;
            ri[v] = tm[i] + t - 1;
            online.insert(v);
        }

        if (online.size() == m) {
            ok = true;
        }
    }
    if (!ok) {
        cout << "No solution\n";
        return;
    }

    cout << user << "\n";
    for (int i = 0; i < n; ++i) {
        cout << ans[i] + 1 << "\n";
    }
}

int main() {
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
#endif
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    solve();
    return 0;
}