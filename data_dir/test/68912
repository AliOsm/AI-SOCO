#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>


template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long MOD = 1'000'000'007LL;
const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

void bfs(vector<vector<int>> &g, vector<ll> &d, ll start) {
	queue<ll> q;
	q.push(start);
	while(!q.empty()) {
		ll cur = q.front();
		q.pop();
		for (ll next : g[cur]) {
			if (d[next] != -1) continue;
			d[next] = d[cur] + 1;
			q.push(next);
		}
	}
}
int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/
	ll n, m, s, t; scanf("%lld %lld %lld %lld", &n, &m, &s, &t);
	s--; t--;
	vector<vector<int>> g(n);

	vector<ll> ds(n, -1), dt(n, -1);
	for (ll i = 0; i < m; i++) {
		ll a, b; scanf("%lld %lld", &a, &b);
		a--; b--;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	ds[s] = 0;
	dt[t] = 0;
	bfs(g, ds, s);
	bfs(g, dt, t);

	ll res = 0;
	for (ll i = 0; i < n; i++) {
		for (ll j = i + 1; j < n; j++) {
			ll len1 = ds[i] + 1 + dt[j];
			ll len2 = ds[j] + 1 + dt[i];
			if (len1 >= ds[t] && len2 >= ds[t]) res++;
		}
	}
	res -= m;
	cout << res << endl;
	return 0;

}

