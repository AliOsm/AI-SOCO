//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <fstream>
#include <functional>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
#include <time.h>
using namespace std;

#define read freopen("in.txt", "r", stdin)
#define write freopen("out.txt", "w", stdout)
#define all(_) _.begin(), _.end()
#define rall(_) _.rbegin(), _.rend()
#define rep(i, j) for (int i = 0; i < j; i++)
#define Rep(i, j, k) for (int i = j; i < k; i++)
#define siz(_) (int)_.size()
#define ll long long
#define endl '\n'

const double PI = 2.0 * acos(0.0);
const double EX = 2.7182818284;
const int MOD = 1e9 + 7;
const int oo = 2e9 + 1e8;

ll gcd(ll x, ll y) { return !y ? x : gcd(y, x%y); }

const int mx = 5e3 + 10;
int n, m, k, a, b, c, idx, grid[mx][mx];
pair<int, pair<int, int>> ans[mx << 1];

int main() {
	rep(i, mx << 1)
		ans[i].first = oo;
	scanf("%d%d%d", &n, &m, &k);
	idx = 1;
	while (k--&& scanf("%d%d%d", &a, &b, &c)) {
		if (a == 1) {
			ans[b].first = idx++;
			ans[b].second.second = c;
			ans[b].second.first = b;
		}
		else {
			b += 5000;
			ans[b].first = idx++;
			ans[b].second.second = c;
			ans[b].second.first = b;
		}
	}
	sort(ans, ans + mx * 2);
	rep(i, mx << 1) {
		if (ans[i].first != oo) {
			if (ans[i].second.first > 5000) {
				idx = ans[i].second.first - 5000;
				Rep(j, 1, n + 1)
					grid[j][idx] = ans[i].second.second;
			}
			else {
				idx = ans[i].second.first;
				Rep(j, 1, m + 1)
					grid[idx][j] = ans[i].second.second;
			}
		}
	}
	Rep(i, 1, n + 1) {
		Rep(j, 1, m + 1)
			printf("%d ", grid[i][j]);
		puts("");
	}
	return 0;
}