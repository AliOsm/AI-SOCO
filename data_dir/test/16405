#include <bits/stdc++.h>

typedef long long ll ;
typedef long double ld ;
using namespace std;
vector<vector<ll> > v(300000);
ll parent[300000];
void dfs(ll x,ll target)
{
    if(x==target)
    {
        return;
    }
    for(ll i =0;i<v[x].size();i++)
    {
        if(parent[v[x][i]]==-1)
        {
            parent[v[x][i]]=x;
            dfs(v[x][i],target);
        }
    }
}
ll con(ll x)
{
    ll ret=0;
    parent[x]=1;
    for(ll i =0;i<v[x].size();i++)
    {
        if(v[x][i]!=-1&&v[x][i]!=x&&parent[v[x][i]]==-1)
        ret+=con(v[x][i]);
    }
    return ret+(v[x].size()!=0);
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ll n,x,y,f,b;
    cin >> n>>f>>b;
    memset(parent,-1,sizeof parent);
    for(ll i =0;i<n-1;i++)
    {
        cin >> x>>y;
        x--,y--;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    b--,f--;
    parent[f]=f;
    dfs(f,b);
    vector<ll> all;
    x=b;
    while(parent[x]!=x)
    {
        x=parent[x];
        all.push_back(x);
    }
    all.pop_back();
    for(ll i =0;i<all.size();i++)
    {
        v[all[i]].clear();
    }
    for(ll i =0;i<v[f].size();i++)
    {
        if(v[f][i]==b)
            v[f][i]=f;
    }
    for(ll i =0;i<v[b].size();i++)
    {
        if(v[b][i]==f)
            v[b][i]=b;
    }
    memset(parent,-1,sizeof parent);
    x=con(f);
    y=con(b);
    cout << n*(n-1) - x*y << endl;
    return 0;
}
