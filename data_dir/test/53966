#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include <iostream>
#include <algorithm>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <deque>
#include <queue>
#include <sstream>

using namespace std;

#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define ppb pop_back
#define rept(i,c) for (typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

#define task "a"

typedef long long ll;
typedef pair<int,int> pii;

const int maxK = 1050;
const int maxN = 11;
const int INF=(int)1.1e9;
const int MOD = 7+(int)1e9;
const double eps = 1e-9;

int W[maxK][maxK];

int A[maxK][maxN][maxN];

int D[maxK];
int P[maxK];
int mark[maxK];
int n, m;

int dist(int ii, int jj) {
    int res = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            res += (A[ii][i][j] != A[jj][i][j]);
        }
    }
    return res;
}

int main(void){
  //  freopen(task".in", "r",stdin); freopen(task".out","w",stdout);
    int k, w;
    
    cin >> n >> m >> k >> w;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            A[0][i][j] = '$';
        }
    }
    
    for (int ii = 1; ii <= k; ii++) {
        for (int i = 0; i < n; i++) {
            string s;
            cin >> s;
            for (int j = 0; j < m; j++) {
                A[ii][i][j] = s[j];
            }
        }
    }
    
    for (int i = 0; i <= k; i++)
        D[i] = INF;
    
    for (int i = 1; i <= k; i++) {
        for (int j = 1; j <= k; j++) {
            W[i][j] = w*dist(i,j);
        }
    }
    for (int i = 1; i <= k; i++) {
        W[0][i] = n*m;
        W[i][0] = n*m;
    }
    
    D[0] = 0;
    P[0] = -1;
    vector<pii> ans;
    int res = 0;
    for (int ii = 1; ii <= k + 1; ii++) {
        int minI = -1;
        for (int i = 0; i <= k; i++) {
            if (!mark[i] && (minI == -1 || D[minI] > D[i])) {
                minI = i;
            }
        }
        mark[minI] = 1;
        /*for (int i = 0; i <= k; i++) {
            cout << D[i] << " ";
        }
        cout << endl;
        for (int i = 0; i <= k; i++) {
            cout << P[i] << " ";
        }
        cout << endl;
        cout << endl;
        */
        if (ii != 1) {
            ans.pb(mp(minI, P[minI]));
            res += W[minI][P[minI]];
        }
        for (int i = 0; i <= k; i++) {
            if (W[minI][i] < D[i]) {
                D[i] = W[minI][i];
                P[i] = minI;
            }
        }
    }
    cout << res << endl;
    for (int i = 0; i < ans.size(); i++) {
        cout << ans[i].fi << " " << ans[i].se << endl;
     }
    return 0;
}




