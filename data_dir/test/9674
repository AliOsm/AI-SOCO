/****** BISMILLAH HIR RAHMANIR RAHIM ******/

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

typedef long long ll;
typedef pair <ll, ll> pii;
/* Special functions:

        find_by_order(k) --> returns iterator to the kth largest element counting from 0
        order_of_key(val) --> returns the number of items in a set that are strictly smaller than our item
*/

typedef tree<
ll,
null_type,
less<ll>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;


#define EPS 1e-9
#define NL cout<<endl;
#define MP make_pair
#define ALL(a) a.begin(), a.end()
#define DBG(a) cout<< #a <<" --> "<<(a)<<endl;
#define FastIO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}
template < class T1,class T2>
pair <T1,T2> operator + ( const  pair < T1,T2 > &p1,const pair < T1,T2 > &p2)
{
    return make_pair(p1.first+p2.first,p1.second+p2.second);
}
/****** END OF HEADER ******/
const ll N=1e5+5;
const ll oo=1e9+7;
pii ans[N];
ll a[N];
int32_t main()
{
//    IN;
//    OUT;
    ll n,q;
    cin>>n>>q;
    for(ll i=0;i<n;i++) cin>>a[i];

    ll i=0;
    for(ll j=1;j<n;j++)
    {
        if(a[j]> a[i])  i=j;

    }

    vector<ll > x;

    for(ll j=i+1;j<n;j++)
        x.push_back(a[j]);


    ll top=0,id=1;
    ll an=1;
    for(id=1;id<=i;id++)
    {
        ans[an]={a[top],a[id]};
        an++;
        if(a[top]>a[id])
        {
            x.push_back(a[id]);
        }
        else
        {
            x.push_back(a[top]);
            top= id;
        }
    }

//    DBG(i);
//    DBG(an-1);
//    assert(ans[i] == make_pair(a[i],x[0]));
    while(q--)
    {
        ll m;
        cin>>m;
        if(m>i)
        {
            ll now= m-i-1;
            now%=((ll)x.size());
            now+=((ll)x.size());
            now%=((ll)x.size());
            cout<<a[i]<<" "<<x[now]<<endl;
        }
        else cout<<ans[m].first<<" "<<ans[m].second<<endl;
    }
}
