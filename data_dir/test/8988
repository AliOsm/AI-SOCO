#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 400005;
int n, m, Z[N];
ll A[N], B[N], C[N];
char S[N], T[N], R[N];
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    cin >> n >> m;
    for (int i = 0; i < n; i ++)
    {
        cin >> A[i] >> S[i] >> S[i];
        if (i && S[i] == S[i - 1])
            A[i - 1] += A[i], i --, n --;
    }
    for (int i = 0; i < m; i ++)
    {
        cin >> B[i] >> T[i] >> T[i];
        if (i && T[i] == T[i - 1])
            B[i - 1] += B[i], i --, m --;
    }
    if (m == 1)
    {
        ll tot = 0;
        for (int i = 0; i < n; i ++)
            if (S[i] == T[0] && A[i] >= B[0])
                tot += A[i] - B[0] + 1;
        return !printf("%lld", tot);
    }
    for (int i = 1; i < m - 1; i ++)
        R[i - 1] = T[i], C[i - 1] = B[i];
    R[m - 2] = '$';
    for (int i = 0; i < n; i ++)
        R[m + i - 1] = S[i], C[m + i - 1] = A[i];
    int l = 0, r = 0;
    Z[0] = n + m - 1;
    for (int i = 1; i < n + m - 1; i ++)
    {
        if (Z[i - l] < r - i)
        {
            Z[i] = Z[i - l];
            continue;
        }
        l = i; r = max(r, i);
        while (r < n + m - 1 && R[r] == R[r - l] && C[r] == C[r - l])
            r ++;
        Z[i] = r - l;
    }
    int tot = 0;
    for (int i = 0; i + m <= n; i ++)
        if (Z[m + i] >= m - 2 && S[i] == T[0] && A[i] >= B[0] && S[i + m - 1] == T[m - 1] && A[i + m - 1] >= B[m - 1])
            tot ++;
    return !printf("%d", tot);
}