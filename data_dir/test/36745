#include<bits/stdc++.h>
#define LL long long
using namespace std;

const int N = (int)3000 + 7;

int n, k;
char s[N], b[N];

void solve() {
    vector<vector<int> > path;
    scanf("%d%d%s", &n, &k, s + 1);
    for(int i = 1; i <= n; i++) b[i] = s[i];
    int minStep = 0, maxStep = 0;
    while(1) {
        vector<int> V;
        for(int i = 1; i < n; i++) {
            if(s[i] == 'R' && s[i + 1] == 'L') {
                V.push_back(i);
                swap(s[i], s[i + 1]);
                i++;
            }
        }
        if(!V.size()) break;
        path.push_back(V);
        minStep += 1;
        maxStep += V.size();
    }
    if(k < minStep || k > maxStep) {
        puts("-1");
        return;
    }
    int need = k - minStep;
    for(auto &V : path) {
        while(need && (int)V.size() > 1) {
            need--;
            printf("1 %d\n", V.back());
            V.pop_back();
        }
        printf("%d", (int)V.size());
        for(auto t : V) printf(" %d", t);
        puts("");
    }
}

int main() {
    solve();
}

/**
**/
