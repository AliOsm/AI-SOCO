#include <string.h>
#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stdlib.h>    
#include <time.h> 
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair

using namespace std;
const int N = 6000000;

int n;
string s;
char tmp[N],ans[N];
int max_len;

void cmp(int len) {
	if(max_len!=0&&len>max_len) return;
	if(max_len == 0 || len<max_len || memcmp(ans,tmp,len)>0){
		memcpy(ans,tmp,len);
		max_len = len;
		/*
		printf("get ans\n");
		for(int i = 0; i < len; ++i) {
			printf("%c",tmp[i]+'0');
		}
		printf("\n");
		*/
	}
}

void check(int idx1, int len1, int idx2,int len2) {
	if(s[idx1]=='0' || s[idx2]=='0') return;
	if(max_len != 0 && max(len1,len2)>max_len) return;

	int add = 0;
	for(int i = 0; i < min(len1,len2); ++i) {
		tmp[i] = s[idx1+len1-i-1] -'0' + s[idx2+len2-i-1]-'0';
		//printf("%c %c\n",s[idx1+len1-i-1] , s[idx2+len2-i-1]);
		tmp[i] += add;
		add = tmp[i] / 10;
		tmp[i]%=10;
		//printf("%d add = %d\n",tmp[i],add);
	}
	if(len1>len2) {
		for(int i = len2; i <len1; ++i) {
			tmp[i] = s[idx1+len1-i-1]-'0';
			tmp[i] += add;
			add = tmp[i] / 10;
			tmp[i]%=10;
		}
	}
	else {
		for(int i = len1; i <len2; ++i) {
			tmp[i] = s[idx2+len2-i-1]-'0';
			tmp[i] += add;
			add = tmp[i] / 10;
			tmp[i]%=10;
		}
	}
	int len = max(len1,len2);
	if(add) {
		tmp[len++]=add;
	}
	//printf("add %s %s\n",s.substr(idx1,len1).c_str(), s.substr(idx2,len2).c_str());
	/*
	for(int i = 0; i < len; ++i) {
		printf("%c",tmp[i]+'0');
	}
	printf("\n");
	*/
	reverse(tmp,tmp+len);

	cmp(len);
}

int main() {
	cin>>n;
	cin>>s;
	max_len = 0;
	int idx = n/2;
	if(s[idx]=='0') {
		while(idx>0&&s[idx]=='0')idx--;
	}
	//printf("idx = %d\n",idx);
	for(int i = idx; i < n; ++i) {
		check(0,i,i,n-1-i+1);
	}
	for(int i = 0; i < max_len; ++i) {
		printf("%c",ans[i]+'0');
	}
	printf("\n");
}

