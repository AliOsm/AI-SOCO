#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<bool> vb;
typedef vector<string> vs;
const int di[] = { -1,0,1,0,1,1,-1,-1 };
const int dj[] = { 0,1,0,-1,1,-1,1,-1 };
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
#define mp make_pair

int n, m;
vvi adj;

int bfs(int cur) {
	set<int> st;
	vi vis(n);
	
	for (auto i : adj[cur])
		st.insert(i);

	for (auto i : st)
		for (auto j : adj[i])
			if (j != cur) vis[j]++;
	for (int i = 0; i < n; i++)
		if (vis[i]) vis[i]--;

	int ret = 0;
	for (int i = 0; i < n; i++)
		ret += vis[i] * (vis[i] + 1) / 2;
	return ret;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> n >> m;
	adj.assign(n, vi());
	for (int i = 0; i < m; i++) {
		int u, v; cin >> u >> v; u--, v--;
		adj[u].push_back(v);
	}
	int r = 0;
	for (int i = 0; i < n; i++)
		r += bfs(i);
	cout << r << endl;
	cin.ignore(), cin.get();
}
