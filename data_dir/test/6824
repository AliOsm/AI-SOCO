#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <string>
#include <memory.h>
#include <sstream>
#include <stack>
#include <deque>
#include <queue>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
const int N = 100000 + 10;
const int M = 1000000007;
const double PI = atan(1) * 4;
int n, m, mn=1e9, all;
vector<vector<pair<int,bool> > >v;
vector<int> sol;
int get(int u, int p){
	int x=0;
	for(int i=0; i<v[u].size(); ++i){
		if(v[u][i].first == p)
			continue;
		x+=v[u][i].second;
		x+=get(v[u][i].first, u);
	}
	return x;
}
void dfs(int u, int p ,int d){
	int t = all - d;
	if(t<mn){
		mn=t;
		sol.clear();
	}
	if(t==mn)
		sol.pb(u+1);
	for(int i=0; i<v[u].size(); ++i)
		if(v[u][i].first != p)
			dfs(v[u][i].first, u, d+(v[u][i].second?1:-1));
}
int main(){
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	cin>>n;
	v.resize(n);
	for(int a,b,i=0; i<n-1; ++i){
		scanf("%d%d",&a,&b);
		--a;--b;
		v[a].pb(make_pair(b,false));
		v[b].pb(make_pair(a,true));
	}
	all = get(0, -1);
	dfs(0, -1, 0);
	cout<<mn<<endl;
	sort(sol.begin(), sol.end());
	for(int i=0; i<sol.size(); ++i)
		printf("%d ", sol[i]);
}