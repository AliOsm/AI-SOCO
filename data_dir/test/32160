#include <bits/stdc++.h>

using namespace std;

#define INF (long) 1e18
#define long long long
#define pll pair<long, long>
#define pb push_back
#define FOR(i, n) \
    for (size_t i = 0; i < (size_t) n; i++)
#define SORT(v, atr) \
    sort(v.begin(), v.end(), \
         [](auto &a, auto &b) { return a.atr < b.atr; })
#define PRINTV(v) \
    if (not v.empty()) { \
        printf("%lld", v[0]); \
        for (long _i = 1; _i < (long) v.size(); _i++) \
            printf(" %lld", v[_i]); \
        printf("\n"); \
    }

template<typename T>
    class Matriz2D : public vector<vector<T>>
{
public:
    size_t n, m;

    Matriz2D() {}

    Matriz2D(size_t n, size_t m, const T &valor)
        : n(n), m(m) {
        this->resize(n);
        for (size_t i = 0; i < n; i++) {
            (*this)[i].resize(m, valor);
        }
    }
};

int main()
{
    ios::sync_with_stdio(false);

    long n;
    cin >> n;

    vector<long> a(n);
    for (auto &x : a) cin >> x;

    if (n == 1) {
        if (a[n-1] == 0) puts("UP");
        else if (a[n-1] == 15) puts("DOWN");
        else puts("-1");
        return 0;
    }
    if (a[n-2] < a[n-1]) {
        if (a[n-1] != 15) puts("UP");
        else puts("DOWN");
    } else if (a[n-2] > a[n-1]) {
        if (a[n-1] != 0) puts("DOWN");
        else puts("UP");
    }
}