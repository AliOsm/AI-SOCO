#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
int dp1[1000100], dp2[1000010];
int l[1000010];
vector <int> v[1000010];
void sev(){
  for(int i=2; i<=1000000; ++i){
    if(l[i])
      continue;
     l[i]=i;
    for(int j=i; j<=1000000; j+=i){
        if(!l[j])
          l[j]=i;
    }
  }
  int tmp, tmp1;
  for(int i=2; i<=1000000; ++i){
    tmp=i;
    while(tmp>1){
      v[i].push_back(l[tmp]);
      tmp1=l[tmp];
      while(tmp%tmp1==0)    
          tmp/=tmp1;
    }
    sort(v[i].begin(), v[i].end());
    reverse(v[i].begin(), v[i].end());
  }
}
int main(){
  int n;
  sev();
  int tmp, tmp1;
  for(int i=2; i<=1000000; ++i){
    if(l[i]==i){
      dp1[i]=1e7;
    }
    else{
        tmp=v[i][0];
        dp1[i]=i-tmp+1;
    }
  }
  while(cin>>n){
    dp2[n]=1e7;
    for(int i=0; i<v[n].size(); ++i){
      tmp=v[n][i];
      tmp1=n/tmp;
      tmp1=(tmp1-1)*tmp;
      for(int j=tmp1+1; j<=n; ++j){
        dp2[n]=min(dp2[n], dp1[j]);
      }
    }
    cout<<dp2[n]<<endl;
  }
  return 0;
}


