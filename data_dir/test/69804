#include<bits/stdc++.h>
#define ll long long
#define f first
#define s second
#define pb push_back
using namespace std;
ll dp[2][2005],las[500];
string s,t;
int main(){
    ios::sync_with_stdio(false);
    ll q;
    cin >> q;
    
    while(q--){
        cin >> s >> t;
        string a = "" , b = "";
        ll k = 0;
        for(int ind=0; ind<=(int)t.size(); ind++){
            a = "";
            b = "";
            for(int j=0; j<ind; j++)
                a += t[j];
            for(int j=ind; j<(int)t.size(); j++)
                b += t[j];
            for(int i=0; i<=(int)a.size() + 2; i++){
                dp[0][i] = -1;
                dp[1][i] = -1;
            }
            /*
            adaadccdcb
            cadaadcdc
            */
            dp[1][0] = 0;
            for(int i=0; i<s.size(); i++){
                ll i0 = (i % 2);
                ll i1 = (i0 ^ 1);
                for(int j=0; j<=(int)a.size(); j++)
                    dp[i0][j] = dp[i1][j];
                for(int j=0; j<=(int)b.size(); j++)
                    las[j] = -1;
                for(int j=0; j<=(int)a.size(); j++)
                    if(dp[i1][j] != -1)
                        for(int l=dp[i1][j]; l>dp[i1][j + 1]; l--)
                            las[l] = j;
                for(int j=0; j<(int)a.size(); j++)
                    if(s[i] == a[j] && dp[i1][j] != -1){
                        dp[i0][j + 1] = max(dp[i1][j] , dp[i0][j + 1]);
                    }
                for(int j=0; j<(int)b.size(); j++)
                    if(s[i] == b[j] && las[j] != -1){
                        dp[i0][las[j]] = max(j + 1LL , dp[i0][las[j]]);
                    }
                for(int j=0; j<=(int)a.size(); j++)
                    dp[i0][j] = max(dp[i1][j] , dp[i0][j]);
            }
            if(dp[0][(int)a.size()] >= (int)b.size() || dp[1][(int)a.size()] >= (int)b.size()){
                cout << "YES\n";
                k = 1;
                break;
            }
        }
        if(k)continue;
        cout << "NO\n";
    }
    
    
    
    return 0;
}
