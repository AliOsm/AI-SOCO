#include <bits/stdc++.h>
#define F first
#define S second
#define pii pair<int, int>
#define pb push_back

using namespace std;

typedef long long ll;
typedef long double ld;

const int N = 1e5 + 10, K = 310, INF = 1e9 + 10;

int x[N], y[N], sum[2 * N];
ll ans[N], bef[2 * N];

map<int, int> mp;
vector<int> vy;
vector<pair<pii, int> > query;

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	int n, k; cin >> n >> k;
		
	for(int i=0; i<n; i++){
		cin >> x[i] >> y[i];
		mp[y[i]] = mp[y[i] + k] = 0;
		vy.pb(y[i]); vy.pb(y[i] + k);
		query.pb({{x[i], y[i]}, 1});
		query.pb({{x[i] + k, y[i]}, 0});
	}

	int cnt = 0;
	for(auto X : mp)
		mp[X.F] = cnt++;

	sort(vy.begin(), vy.end());
	vy.resize(unique(vy.begin(), vy.end()) - vy.begin());

	sort(query.begin(), query.end());

	for(int i=0; i<2*n; i++)
		bef[i] = -INF;

	int sz = query.size();
	for(int i=0; i<sz; i++){
		int X = query[i].F.F, lo = mp[query[i].F.S], hi = mp[query[i].F.S + k], dl = query[i].S;
		for(int i=lo; i<hi; i++){
			ans[sum[i]] += 1LL * (vy[i + 1] - vy[i]) * (X - bef[i]);
			if(dl == 1)sum[i]++;
			else sum[i]--;
			bef[i] = X;
		}
	}
	for(int i=1; i<=n; i++)
		cout << ans[i] << ' '; cout << endl << endl;

}
