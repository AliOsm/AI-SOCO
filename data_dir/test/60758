#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);


	int n, m;
	cin >> n >> m;

	if(n == 1 && m == 1){
		cout << 0 << endl;
		return 0;
	}

	vector<vector<ll>> v(n, vector<ll>(m));


	ll idx = 2;

	for(int i = 0; i < m; i++)
		v[0][i] = idx++;

	if(m == 1){
		for(int i = 1; i < n; i++)
			v[i][0] = idx++;
	}
	else{
		for(int i = 1; i < n; i++){
			for(int j = 0; j < m; j++)
				v[i][j] = idx * v[0][j];

			idx++;
		}
	}



	for(int i = 0; i < n; i++)
		for(int j = 0; j < m; j++)
			cout << v[i][j] << " \n"[j + 1 == m];

	return 0;
}
