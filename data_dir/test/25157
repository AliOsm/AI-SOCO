#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0; i < n; i++)
#define pii pair<int, int>
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define vi vector<int>

typedef long long LL;

const LL INF = 1e18 + 5;
const int mod = 1e9 + 7;

const int N = 3 * 1e5 + 5;

int a[N], c[N];
multiset<pair<int, pii> > S;

int main() {
#ifdef DEBUG
    freopen("in.txt", "r", stdin);
#endif
 //   ios_base::sync_with_stdio(false);    
    
    int n, m;
    cin >> n >> m;
    loop(i, n) cin >> a[i + 1]; // initial remain
    loop(i, n) cin >> c[i + 1]; // costs
    loop(i, n) {
        S.insert({c[i + 1], {a[i + 1], i + 1}});
    }
    LL res = 0;
    loop(i, m) {
        LL cc = 0; // customer cost
        int tj, dj;
        cin >> tj >> dj; // tj - kind, dj - count
        bool customerOk = false;
        while (true) {
            auto it = S.find({c[tj], {a[tj], tj}});
            if (it == S.end()) {
                if (S.empty()) break;
                tj = (*S.begin()).S.S; // cheapest
            }
            else {
                int cost = it->F;
                int count = it->S.F;
                S.erase(it);
                if (count >= dj) {
                    count -= dj;
                    a[tj] = count;
                    cc += 1ll * dj * cost;
                    if (count > 0)
                        S.insert({cost, {count, tj}});
                    customerOk = true;
                    break;
                }
                else {
                    a[tj] = 0;
                    dj -= count;
                    cc += 1ll * count * cost;
                    if (S.empty()) break;
                    tj = (*S.begin()).S.S; // cheapest
                }
            }
        }
        if (customerOk) cout << cc << endl;
        else cout << 0 << endl;
    }
    return 0;
}
