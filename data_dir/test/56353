#include<bits/stdc++.h>
using namespace std;
#define M            1000000007
#define C            998244353
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define ppb          pop_back()
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size())
typedef pair<int,int> pii;
typedef pair<int,pii> pipi;
typedef vector<vector<int> > vvi;
typedef map<int,int>  mp;
typedef priority_queue<int, vector<int>, greater<int> > pq;
const int N=5e3+1;
//vector<int>G[N];
int ans=0;
//vector<int>fuel;
//int R[N];
/*int re[N];
int fact(int n){
	return (n==0?1:(n*fact(n-1))%C);
}
//int primes[N];
void P(){
for(int i=2;i<=N;i++){
	    if(!primes[i]){
		for(int j=2*i;j<=N;j+=i){
		if(!primes[j])primes[j]=i;}
		}
	}
}
int root(int x){
	return R[x]==x?x:root(R[x]);
}
void union1(int x,int y){
	x=root(x),y=root(y);
	R[x]=R[y];
}
void dfs(int V,int u){
	ans=(ans*fact(si(G[V])))%C;
	for(int i=0;i<G[V].size();i++){
		if(G[V][i]!=u){
			int to=G[V][i];
			dfs(to,V);
		}
	}
}
int  kruskal(pipi p[]){
	int x,y,cost=0,minimumcost=0;
	for(int i=0;i<N;i++){
		x=p[i].S.F,y=p[i].S.S;cost=p[i].F;
		if(root(x)!=root(y)){
			minimumcost+=cost;
			union1(x,y);
		}
	}return minimumcost;
}
int modpow(int x,int n){
	if(n==0)return 1;
	int u=modpow(x,n/2)%M;
	u=(u*u)%M;
	if(n%2)u=(u*x)%M;
	return u;
}
void intialize(){
	
}*/
void  solve(){
   int n;cin>>n;
   int a[n],x;vector<int>ans;
   for(int i=0;i<n;i++)cin>>a[i];
   for(int i=n-1;i>=0;i--){
       x=a[i]-i;if(x<0)x=n-x;
       else {
       	int y=x/n;if(x%n)y++;x=y*n-x;
	   }
       for(int j=i;j>=0;j--){
       	  a[j]+=x;
	   }ans.pb(x);
   }cout<<n+1<<endl;
   for(int i=0;i<si(ans);i++){
   	cout<<"1 "<<n-i<<" "<<ans[i]<<endl;
   }cout<<"2 "<<n<<" "<<n<<endl;
}
signed main(){   
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	int t=1;
    //cin>>t;
	while(t--){
		solve();
	}
}