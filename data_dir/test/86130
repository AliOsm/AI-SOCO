//#define _USE_MATH_DEFINES
//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
//#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));


int main()
{
//    freopen("in.txt","r", stdin);
    cout << fixed << setprecision(20);
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    string s;
    string t;
    cin >> s >> t;

    vector<int> masks(300, 0);
    vector<int> maskt(300, 0);

    for (char c : s)
        ++masks[c];

    for (char c : t)
        ++maskt[c];

    int l = 0;
    int r = 1000005;
    while (r-l > 1) {
        long long mid = (l+r) >> 1;
        bool good = true;
        int cnt = masks['?'];
        for (size_t i = 0; i < masks.size(); ++i) {
            int64_t need = max(0LL, maskt[i] * mid - masks[i]);
            if (need)
            if (need > cnt) {
                good = false;
                break;
            }
            cnt -= need;
        }
        (good ? l : r) = mid;
    }

    int idx = 0;
    for (size_t i = 0; i < masks.size(); ++i) {
        int need = max(0, maskt[i] * l - masks[i]);
        for (; need > 0; --need) {
            while (s[idx] != '?')
                ++idx;
            s[idx] = i;
        }
    }
    for (int i = idx; i < s.length(); ++i)
        if (s[i] == '?')
            s[i] = 'z';

    cout << s << endl;
}
