#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>

#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.14159265
#define pll pair<ll, ll>
using namespace std;

typedef unsigned long long ull;

bool is_prime(int n) {

    for (int i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b){
    ll res = 1ll,tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
          /* res %= mod;*/
       }
       tp *= tp;
      /* tp %= mod;*/
       b >>= 1ll;
    }
    return res;
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

void ok() {
    puts("YES");
    exit(0);
}

void no() {
    puts("NO");
    exit(0);
}

ll xx[] = {-1, 1, 0, 0};
ll yy[] = {0, 0, -1, 1};

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    ll n = nxt(), t = nxt();
    vector<ll> a(n);
    vector<ll> p(n);
    for(int i = 0; i < n; i++) {
           ll t1 = nxt(), t2 = nxt();;
           a[i] = t1;
           p[i] = t2;
    }
    ll l = 0, r = n;
    vector<ll> ans;
    auto check = [&](ll md) {

        vector<pll> buf;
        for(int i = 0; i < n; i++) {
               if(md <= a[i]) {
                     buf.push_back({p[i], i});
               }
        }
        sort(all(buf));
        if(buf.size() < md) return false;

        ll sum = 0;
        ans.clear();
        for(int i = 0; i < md; i++) {
               ans.push_back(buf[i].second);
               sum += buf[i].first;
        }
       // cout << sum << " " <<
        if(sum <= t) return true;
        else return false;

    };

    while(r - l > 1) {
           ll mid = (r + l) / 2;
           if(check(mid)) l = mid;
           else r = mid;
           //cout << mid << endl;
    }
    if(check(r)) {
            cout << r << endl << r << endl;
            for(auto x : ans) {
                   cout << x + 1 << " ";
            }

    }
    else {
            check(l);

            cout << l << endl << l << endl;
            for(auto x : ans) {
                   cout << x + 1 << " ";
            }
    }
    return 0;
}
