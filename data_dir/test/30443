#include <bits/stdc++.h>
using namespace std;

struct bor
{
	bor *next[26];
	int leaf;
	bor() 
	{
		leaf = -1;
		for(int i = 0; i < 26; ++i)
		{
			next[i] = NULL;
		}
	}
};

typedef bor * pbor;

pbor root = new bor();
int n, k;
string str;
vector<string> arr;
vector<int> dp;
pbor it;

void insert(char s)
{
	int c = s - 'a';
	if(!(it -> next[c]))
	{
		it -> next[c] = new bor();
	}
	it = it -> next[c];
}

int main (int argc, char *argv[])
{
	//FILE *in = freopen("input.txt", "r", stdin);
	ios_base::sync_with_stdio(false);

	cin >> n;
	cin >> str;
	cin >> k;
	arr.resize(k);
	for(int i = 0; i < k; ++i)
	{	
		cin >> arr[i];
		it = root;
		for(int j = 0; arr[i][j]; ++j)
		{
			char c = arr[i][j];
			if(c >= 'A' && c <= 'Z')
			{
				c = char('a' + (c - 'A'));
			}		
			insert(c);
		}
		it -> leaf = i;
	}
	dp.resize(n, -1);
	for(int i = 0; i < n; ++i)
	{
		pbor it = root;
		for(int j = i; j >= 0; --j)
		{
			int c = str[j] - 'a';
			if(!(it -> next[c]))
			{
				break;
			}
			it = it -> next[c];
			if(it -> leaf != -1)
			{
				if(j == 0 || dp[j - 1] != -1)
				{
					dp[i] = it -> leaf;
					break;
				}
			}
		}
	}
	vector<string> ans;
	for(int v = n - 1; v >= 0;)
	{
		ans.push_back(arr[dp[v]]);
		v -= int(arr[dp[v]].length());
	}
	reverse(ans.begin(), ans.end());
	for(int i = 0; i < ans.size(); ++i)
	{
		cout << ans[i] << " ";
	}

	return 0;
}

