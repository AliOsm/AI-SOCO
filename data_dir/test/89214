#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
	//freopen("data.in", "rt", stdin);
	//freopen("data.out", "w", stdout);
	auto _start = chrono::high_resolution_clock::now();
#endif

	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cout << fixed << setprecision(15);
	int n;
	cin >> n;
	unordered_map<int, int> mp;
	priority_queue<int> pq;
	for(int i = 0, a; i < n; i++) {
		cin >> a;
		mp[a]++;
		if(pq.size() < 3) {
			pq.push(a);
		} else if(pq.top() > a) {
			pq.pop();
			pq.push(a);
		}
	}
	int z = pq.top(); pq.pop();
	int y = pq.top(); pq.pop();
	int x = pq.top(); pq.pop();
	long long ans = 0;
	if(x == z) {
		ans = 1LL * mp[x] * (mp[x] - 1) * (mp[x] - 2) / 6;
	} else if(y == z) {
		ans = 1LL * mp[y] * (mp[y] - 1) / 2;
	} else {
		ans = mp[z];
	}
	cout << ans << '\n';

#ifdef LOCAL_DEFINE
	auto _end = chrono::high_resolution_clock::now();
	cerr << "elapsed time: " << chrono::duration<double, milli>(_end - _start).count() << " ms\n";
#endif
	return 0;
}