#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>

using namespace std;
const int oo = numeric_limits<int>::max() / 2;

inline int lg(int x) {
	int c = 0;
	do {
		++c;
		x /= 7;
	} while(x > 0);
	return c;
}

int mp[7];

int main() {
	ios_base::sync_with_stdio(0);
	int n, m;
	cin >> n >> m;
	int l1 = lg(n - 1), l2 = lg(m - 1);
#ifdef DEBUG
	cout << "l1 = " << l1 << " l2 = " << l2 << endl;
#endif
	if (l1 + l2 > 7) {
		cout << 0 << endl;
		return 0;
	}
	
	int ret = 0;
	for(int i = 0; i < n; ++i) {
		for(int j = 0; j < m; ++j) {
			memset(mp, 0, sizeof(mp));
			bool valid = true;
			int x = i;
			int numx = 0;
			while(x > 0) {
				int d = x % 7;
				++mp[d];
				if (mp[d] > 1) {
					valid = false;
				}
				x /= 7;
				++numx;
			}
			for(int k = 0; k < l1 - numx; ++k) {
				++mp[0];
				if (mp[0] > 1) {
					valid = false;
					break;
				}
			}
			int y = j;
			int numy = 0;
			while(y > 0) {
				int d = y % 7;
				++mp[d];
				if (mp[d] > 1) {
					valid = false;
				}
				y /= 7;
				++numy;
			}
			for(int k = 0; k < l2 - numy; ++k) {
				++mp[0];
				if (mp[0] > 1) {
					valid = false;
					break;
				}
			}
			if (valid) {
				++ret;
			}
		}
	}

	cout << ret << endl;

	return 0;
}
