#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
//#define int                 long long
#define ll              	long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007LL
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
typedef tree<int,null_type,less<int>,
				rb_tree_tag,tree_order_statistics_node_update> statisticsTree;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=(res*x)%p;
		y=y>>1;
		x=(x*x)%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out4.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>tests;
	Tests=tests;
	while(tests--)
	{
		int a,b;
		cin>>a>>b;
		string s;
		cin>>s;
		int X=0,Y=0;
		int cx=0,cy=0;
		vector<pair<int,int> > v;
		v.pb(mp(cx,cy));
		rep(i,sz(s))
		{
			if(s[i]=='U') cy++;
			else if(s[i]=='D') cy--;
			else if(s[i]=='L') cx--;
			else cx++;
			v.pb(mp(cx,cy));
		}
		X=v.back().fi,Y=v.back().se;
		rep(i,sz(v))
		{
			if(v[i]==mp(a,b))
			{
				cout<<"Yes";
				return 0;
			}
			if(!(X==0 && Y==0) && (b-v[i].se)*1LL*X==(a-v[i].fi)*1LL*Y && ((X!=0 && abs(a-v[i].fi)%abs(X)==0 && ((a-v[i].fi)/X)>0) || (Y!=0 && abs(b-v[i].se)%abs(Y)==0 && ((b-v[i].se)/Y)>0)))
			{
				cout<<"Yes";
				return 0;
			}
		}
		cout<<"No";
	}
	return 0;
}