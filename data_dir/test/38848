#include <bits/stdc++.h>
#define fst first
#define snd second
#define fore(i,a,b) for(int i=a,ThxDem=b;i<ThxDem;++i)
#define pb push_back
#define ALL(s) s.begin(),s.end()
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define SZ(s) int(s.size())
using namespace std;
typedef long long ll;
typedef pair<int,int> ii;

const int MAXN=1e6;
ll n,m,tt,MOD=1e9+7;
vector<ii> g[MAXN];
ll ds[MAXN];

void add_edge(int x, int y, int v){
	vector<int> dg;
	while(v) dg.pb(v%10),v/=10;
	reverse(ALL(dg));
	int now=x;
	fore(i,0,SZ(dg)-1) g[now].pb({n++,dg[i]}),now=n-1;
	g[now].pb({y,dg.back()});
}

int sd[MAXN];

void set_dist(){
	queue<int> q; q.push(0); sd[0]=0;
	while(SZ(q)){
		int x=q.front(); q.pop();
		for(auto y:g[x]) if(sd[y.fst]<0) sd[y.fst]=sd[x]+1,q.push(y.fst);
	}
}

int main(){FIN;
	memset(ds,-1,sizeof(ds));
	memset(sd,-1,sizeof(sd));
	cin>>n>>m; int nt=n;
	fore(i,0,m){
		int x,y; cin>>x>>y; x--; y--;
		add_edge(x,y,i+1);
		add_edge(y,x,i+1);
	}
	set_dist();
	int did=0;
	queue<ii> q; q.push({0,tt++});
	ds[0]=0;
	while(SZ(q)){
		vector<int> nw;
		while(SZ(q)&&q.front().snd==did) nw.pb(q.front().fst),q.pop();
		if(!SZ(nw)) continue;
		fore(i,0,10){
			int ff=0;
			for(auto x:nw){
				for(auto y:g[x]) if(y.snd==i&&ds[y.fst]<0&&sd[y.fst]==sd[x]+1){
					ds[y.fst]=(10*ds[x]+y.snd)%MOD; q.push({y.fst,tt}); ff=1;
				}
			}
			tt+=ff;
		}
		did++;
	}
	fore(i,1,nt) cout << ds[i] << "\n";
}
