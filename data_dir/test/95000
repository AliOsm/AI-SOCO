#include<bits/stdc++.h>
using namespace std;

#define MX 100002
#define pb push_back

vector < int > G[MX];
double prob[MX];
int dist[MX];
bool mark[MX];
int leaf;
double res;

void dfs(int n, int p){
    int sub = G[n].size();
    if (n != 1) sub--;

    for (auto v : G[n]){
        if (v == p) continue;
        dist[v] = dist[n] + 1;
        prob[v] = prob[n] / sub;

        if (G[v].size() == 1){
//            cout << v << " d: " << dist[v] << " " << " p: " << prob[v] << endl;
            res += dist[v] * prob[v];
        }
        dfs(v, n);
    }
}

int main()
{
    int n; scanf("%d", &n);
    for (int i = 1; i < n; i++){
        int u, v; scanf("%d%d", &u, &v);
        G[u].pb(v);
        G[v].pb(u);
    }
    prob[1] = 1.0;
    dfs(1, 1);
    printf("%.14f\n", res);
    return 0;
}
