/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
typedef vector<int> vi;
typedef long long int ll;
vector<vector<int>> adj;

class TaskA {
public:
	void solve(std::istream& in, std::ostream& out) {
        int n, k; in>>n>>k;
        if(k>n*n){
            out<<-1;
            return;
        }
        /*if(k>n and (k-n)&1){
            out<<-1;
            return;
        }*/
        int arr[n][n];
        memset(arr, 0, sizeof(arr));
        bool flag = false;
        f(i, n){
            if(k>=1){
                arr[i][i] = 1;
                k-=1;
            }
            else break;
            rep(j, i+1, n-1){
                if(k>=2){
                    arr[i][j]=1;
                    arr[j][i]=1;
                    k-=2;
                }
                else if(k==1){
                    arr[i+1][i+1]=1;
                    k-=1;
                    flag = true;
                    break;
                }
                else{
                    flag = true;
                    break;
                }
            }
            if(flag) break;
        }
        f(i, n){
            f(j, n) out<<arr[i][j]<<" ";
            out<<"\n";
        }


	}
    void inG(int m, istream& in){ int u,v; adj = vector<vi>(200005);f(i, m){ in>>u>>v; adj[u].push_back(v); adj[v].push_back(u); }}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
