// rc.cpp : Defines the entry point for the console application.
//

#include <math.h>

#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <functional>
#include <iomanip>
#include <regex>

#include <fstream>

using namespace std;

#define PI 3.14159265358979323846
#define EPS 1.E-11

#define FIN(a, n) { for (ui _ = 0; _ < n; ++_) cin >> (a)[_]; }
#define FOUT(a, n) { cout << (a)[0]; for (ui _ = 1; _ < n; ++_) cout << ' ' << (a)[_]; cout << '\n'; }

typedef unsigned char uc;
typedef unsigned int ui;
typedef unsigned long long ul;
typedef long long sl;

ul p[300000],
   x[300000];

vector<pair<ul, ul>> v;

void exch(ul a, ul b)
{
	swap(p[a], p[b]);
	x[p[a]] = a;
	x[p[b]] = b;

	if (a > b)
		swap(a, b);
	v.push_back({ a, b });
}

int main(int argc, char* argv[])
{
	ios_base::sync_with_stdio(false);

#ifdef JUDGE
	freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
	//	ifstream cin("input.txt");
	//	ofstream cout("output.txt"); 
#endif

	ul n;
	cin >> n;

	bool s = true;
	for (ul i = 0; i < n; ++i)
	{
		cin >> p[i];
		--p[i];

		x[p[i]] = i;

		if (p[i] != i)
			s = false;
	}

	if (s)
		cout << "0\n";
	else
	{
		ul z = n / 2;
		for (ul i = 0; i < z; ++i)
		{
			if (x[i] != i + z)
			{
				ul cx = x[i];
				if (cx < z && i + z - cx < z)
				{
					exch(cx, n - 1);
					cx = n - 1;
				}

				if (cx >= z)
				{
					exch(cx, 0);
					cx = 0;
				}

				exch(cx, i + z);
			}
		}

		for (ul i = 0; i < z; ++i)
		{
			if (x[i + z] != i)
			{
				if (x[i + z] != n - 1)
					exch(x[i + z], n - 1);
				exch(n - 1, i);
			}
		}

		for (ul i = 0; i < z; ++i)
			exch(i, i + z);

		cout << v.size() << '\n';
		for (auto f : v)
			cout << f.first + 1 << ' ' << f.second + 1 << '\n';
	}

	return 0;
}
