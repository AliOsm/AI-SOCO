#include <iostream>
#include <bitset>
#include <string>
#include <vector>
#include <algorithm>
#include <ctime>
#include <queue>
#include <cstring>
#include <set>
#include <map>
#include <sstream>
#include <cmath>
#include <fstream>
#include <list>
using namespace std;
#define rp(i,n) for(int (i)=0;(i)<(n);++(i))
#define pb push_back
#define L(s) (int)s.size()
#define mp make_pair
#define pii pair<int,int>
//#define x first 
//#define y second
#define inf 1000000000
#define VI vector<int>
#define ll long long
#define all(s) (s).begin(),(s).end()
#define C(u) memset((u),0,sizeof((u)))
#define ull unsigned ll
ll n,t,a,b,c;
inline ll fabs(ll x)
{
	return (x<0)?(-x):(x);
}
inline ll G(ll x)
{
	return x*(x+1)/2;
}
inline ll sum(ll st,ll fn)
{
	if (st<=fn)
		return G(fn)-G(st);
	else
		return G(st-1)-G(fn-1);
}
inline ll shortest(ll ci,ll cj,ll wi,ll wj)
{
	if (ci>=wi && cj>=wj)
		return sum(fabs(ci-wi)+fabs(cj-wj),fabs(n-wi)+fabs(n-wj));
	if (ci<wi && ci!=n)
	{
		ll ni=min(wi,n);
		return sum(fabs(ci-wi)+fabs(cj-wj),fabs(ni-wi)+fabs(cj-wj))+shortest(ni,cj,wi,wj);
	}
	if (cj<wj && cj!=n)
	{
		ll nj=min(wj,n);
		return sum(fabs(ci-wi)+fabs(cj-wj),fabs(ci-wi)+fabs(nj-wj))+shortest(ci,nj,wi,wj);
	}
	if (ci==n || cj==n)
		return sum(fabs(ci-wi)+fabs(cj-wj),fabs(n-wi)+fabs(n-wj));
	cerr<<"ERROR\n";
	exit(0);

}
int main()
{
	cin>>n>>t>>a>>b>>c;
	swap(b,a);
	string s="";
	ll c1=0,ci=1,cj=1,c2=0,c3=0,c4=0;
	while(ci!=n || cj!=n)
	{
		if (ci==n)
		{
			s+="R";
			cj++;
		}
		else
			if (cj==n)
			{
				s+="U";
				ci++;
			}
			else
				if (c1+fabs(ci-a)+fabs(cj+1-b)+shortest(ci,cj+1,a,b)<=t &&
					c2+fabs(ci-(a+c-1))+fabs(cj+1-b)+shortest(ci,cj+1,a+c-1,b)<=t &&
					c3+fabs(ci-a)+fabs(cj+1-(b+c-1))+shortest(ci,cj+1,a,b+c-1)<=t &&
					c4+fabs(ci-(a+c-1))+fabs(cj+1-(b+c-1))+shortest(ci,cj+1,a+c-1,b+c-1)<=t)
							{
								s+="R";
								cj++;
							}
							else
							{
								s+="U";
								ci++;
							}
		c1+=fabs(ci-a)+fabs(cj-b);
		c2+=fabs(ci-(a+c-1))+fabs(cj-b);
		c3+=fabs(ci-a)+fabs(cj-(b+c-1));
		c4+=fabs(ci-(a+c-1))+fabs(cj-(b+c-1));
	}
	if (c1>t || c2>t || c3>t || c4>t)
		cout<<"Impossible\n";
	else
		cout<<s<<endl;
}
