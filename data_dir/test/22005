#include <bits/stdc++.h>
#define ll long long
using namespace std;

const int N = 1e6 + 100;
const int Mod = 1e9 + 7;

string a;
string b;

int n;

ll inv[N];
ll Fact[N];
ll invFact[N];

vector<int> Cnt(26);

ll Rec(int idx, bool Bigger, bool Smaller, ll Way)
{
    if (Smaller && Bigger)  return Way;
 
    if (idx == n)   return 0;
 
    ll Res = 0;
    int L = (Bigger ? 0 : a[idx]);
    int R = (Smaller ? 25 : b[idx]);
    for (int i = L; i <= R; i++) if (Cnt[i])
    {
        ll tmp = ((Way * inv[n - idx])%Mod * Cnt[i])%Mod;

        Cnt[i]--;
        Res = (Res%Mod + Rec(idx + 1, Bigger | (i > L), Smaller | (i < R), tmp)%Mod)%Mod;
        Cnt[i]++;
    }
 
    return Res;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    inv[1] = 1;
    for(int i = 2; i < N; i++)
        inv[i] = ( Mod - (Mod / i) * inv[Mod%i] % Mod ) % Mod;

    Fact[0] = 1;
    for (int i = 1; i < N; i++)
        Fact[i] = (i * Fact[i - 1])%Mod;

    invFact[0] = inv[1];
    for (int i = 1; i < N; i++)
        invFact[i] = (inv[i] * invFact[i - 1])%Mod;

    cin >> a >> b;

    n = a.size();
    for (int i = 0; i < n; i++){
        a[i] -= 'a';
        b[i] -= 'a';

        Cnt[a[i]]++;
    }

    ll Way = Fact[n];
    for (int i = 0; i < 26; i++)
        Way = (Way * invFact[Cnt[i]])%Mod;

    cout << Rec(0, 0, 0, Way) << '\n';
    return 0;
}
