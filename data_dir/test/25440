#include <bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef long double ld;
typedef complex<int> point;
#define pii pair<int,int>
#define mod 1000000007
#define S second
#define F first
#define B begin
#define E end
#define RE real
#define IM image
#define PB push_back
#define lasB(b) (b&(-b))
#define PI acos(-1.0)
#define EPS (1e-8)
#define N 1003

lli n,m,solA,solB=10000000000;
vector<lli>TA,TB;

void play(lli mid)
{
    lli sc1 = upper_bound(TA.B(),TA.E(),mid)-TA.B();
    lli sc2 = upper_bound(TB.B(),TB.E(),mid)-TB.B();
    sc1 = sc1*2 + (n-sc1)*3;
    sc2 = sc2*2 + (m-sc2)*3;
    if( (sc1-sc2>solA-solB) || (sc1-sc2==solA-solB && sc1>solA) )
    {
        solA=sc1;
        solB=sc2;
    }
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    scanf("%I64d",&n);
    TA.resize(n);
    for(int i=0;i<n;i++)
        scanf("%I64d",&TA[i]);
    scanf("%I64d",&m);
    TB.resize(m);
    for(int i=0;i<m;i++)
        scanf("%I64d",&TB[i]);
    sort(TA.B(),TA.E());
    sort(TB.B(),TB.E());
    for(auto u : TA)play(u),play(u-1),play(u+1);
    for(auto u : TB)play(u),play(u-1),play(u+1);
    printf("%I64d:%I64d",solA,solB);
    return 0;
}
