#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;
#define MOD 1000000007ll

ll C[110][110];
ll dp[110][10010];
ll a[110];

ll power(ll x, ll n){
    if(n == 0) return 1;
    ll y = power(x, n/2);
    y = y * y % MOD;
    if(n%2 == 1) y = y * x % MOD;
    return y;
}

int main(void){
    int i,j,k;
    
    int N,K;
    ll M;
    cin >> N >> M >> K;
    
    REP(i,N+1) REP(j,i+1){
        if(j == 0 || j == i) C[i][j] = 1;
        else C[i][j] = (C[i-1][j-1] + C[i-1][j]) % MOD;
    }
    
    dp[0][0] = 1;
    REP(i,N){
        ll K2 = (M - i + N - 1) / N;
        REP(j,N+1) a[j] = power(C[N][j], K2);
        REP(j,N*N+1) if(dp[i][j] > 0) REP(k,N+1){
            ll tmp = dp[i][j] * a[k] % MOD;
            dp[i+1][j+k] += tmp;
            if(dp[i+1][j+k] >= MOD) dp[i+1][j+k] -= MOD;
        }
    }
    
    cout << dp[N][K] << endl;
    
    return 0;
}
