#include<bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define pii pair<int,int>
#define pll pair<ll,ll>

using namespace std;

struct pt{
    long double x,y;

    pt(){
    }

    pt(long double a,long double b){
        x = a;
        y = b;
    }

    pt rotat(long double teta){
        pt res;
        res.x = x*cos(teta)-y*sin(teta);
        res.y = y*cos(teta)+x*sin(teta);
        return res;
    }

    pt operator * (long double r){
        return pt(x*r,y*r);
    }

    pt operator + (pt z){
        return pt(x+z.x,y+z.y);
    }

    pt operator - (pt z){
        return pt(x-z.x,y-z.y);
    }

    long double dist(pt z){
        return ((*this)-z).value();
    }

    long double value(){
        return hypot(x,y);
    }

};

pt st,en,v,w;

long double vmax,t;

const long double pi = acos(-1);

long double go(pt st,pt v){
    long double a = v.x*v.x+v.y*v.y -vmax*vmax;
    long double b = -2.0*(v.x*(en.x-st.x)+v.y*(en.y-st.y));
    long double c = (en.x-st.x)*(en.x-st.x) + (en.y-st.y)*(en.y-st.y);
    long double del = b*b - 4.0*a*c;
    if(del < 0)return 1e30;
    del = sqrtl(del);
    long double res = (-b-del)/(2*a);
    if(res < 0)res = 1e30;
    long double res1 = (-b+del)/(2*a);
    if(res1 < 0)res1 = 1e30;
    return min(res,res1);
}

long double ch(long double teta){
    pt vec(0,1),cVec,temp;
    long double res = 1e30;
    cVec = vec.rotat(teta);
    double eps = 1;
    long double l = 0,h = vmax;
    for(int j=0 ;j <1000 ; j++){
        long double m = (l+h)/2;
        temp = cVec*m;
        temp = temp + v;
        temp = temp * t;
        temp = temp+st;
        long double r = go(temp,w)+t;
        long double m1 = m +(h-l)/5;

        temp = cVec*m1;
        temp = temp + v;
        temp = temp * t;
        temp = temp+st;
        long double r1 = go(temp,w)+t;
        res = min(res,r);
        if(m1 > h){
            eps/=1.5;
            continue;
        }
        res = min(res,r1);

        if(r < r1){
            h = m1;
        }
        else{
            l = m;
        }
    }
    return res;
}

int main(){
    cin>>st.x>>st.y;
    cin>>en.x>>en.y;
    cin>>vmax>>t;
    cin>>v.x>>v.y;
    cin>>w.x>>w.y;


    int iter = 1e3;

    long double res = go(st,v);
    if(res > t)res = 1e30;
    double tet;
    for(int i=0 ;i <iter ; i++){
        long double teta = i*(2.0*pi)/iter;
        double r = ch(teta);
        if(res >r){
            res = r;
            tet = teta;
        }
    }
    long double l= tet - pi/4,h = tet+pi/4;
    long double eps = 1;
    for(int i1=0 ;i1 <1000 ;i1 ++){
        long double teta = (l+h)/2;
        long double r = ch(teta);
        long double teta1 = teta + (h-l)/5;
        long double r1 = ch(teta1);
        res = min(res,r);
        res = min(res,r1);


        if(r < r1){
            h = teta1;
        }
        else{
            l = teta;
        }
    }

    cout<<fixed<<setprecision(10)<<res<<endl;
    return 0;
}
