#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

const int N = 250;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

int Q, val;

string a[N];
int d[N][N];
int ans[N][N];
int t = 0;
int used[N][N];

vector<int> dx = {0, 0, -1, 1};
vector<int> dy = {-1, 1, 0, 0};

void bfs(int x, int y, int n, int m)
{
    queue<pair<int, int> > q;
    t++;
    used[x][y] = t;
    d[x][y] = 0;
    val = Q * (a[x][y] - 'A' + 1);
    q.push({x, y});
    while (!q.empty())
    {
        x = q.front().fi; y = q.front().se;
        q.pop();
        if ((val >> d[x][y]) == 0)
            break;
        ans[x][y] += (val >> d[x][y]);
        rep(i, 0, 4)
            if (x + dx[i] >= 0 && x + dx[i] < n && y + dy[i] >= 0 && y + dy[i] < m)
                if (a[x + dx[i]][y + dy[i]] != '*' && used[x + dx[i]][y + dy[i]] != t)
                {
                    used[x + dx[i]][y + dy[i]] = t;
                    d[x + dx[i]][y + dy[i]] = d[x][y] + 1;
                    q.push({x + dx[i], y + dy[i]});
                }
    }
}

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n, m, p;
    cin >> n >> m >> Q >> p;
    rep(i, 0, n)
        cin >> a[i];
    rep(i, 0, n)
        rep(j, 0, m)
            if (a[i][j] >= 'A' && a[i][j] <= 'Z')
                bfs(i, j, n, m);
    int cnt = 0;
    rep(i, 0, n)
        rep(j, 0, m)
            if (ans[i][j] > p)
                cnt++;
    cout << cnt << "\n";
    return 0;
}
