#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
int mx;
string s;
string h, m;
void findMx(string str) {
	for (int i = 0; i < (int) str.size(); ++i) {
		int num;
		if (isalpha(str[i]))
			num = 10 + str[i] - 'A';
		else
			num = str[i] - '0';
		mx = max(mx, num);
	}
}
bool check(int x) {
	int pw = 1;
	int sum = 0;
	for (int i = (int) h.size() - 1; i > -1; --i) {
		int num;
		if (isalpha(h[i]))
			num = h[i] - 'A' + 10;
		else
			num = h[i] - '0';
		sum += (pw * num);
		if (sum >= 24)
			return 0;
		pw *= x;
	}
	sum = 0;
	pw = 1;
	for (int i = (int) m.size() - 1; i > -1; --i) {
		int num;
		if (isalpha(m[i]))
			num = m[i] - 'A' + 10;
		else
			num = m[i] - '0';
		sum += (pw * num);
		if (sum >= 60)
			return 0;
		pw *= x;
	}
	return 1;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "rt", stdin);
#endif
	cin >> s;
	h = s.substr(0, s.find(':')), m = s.substr(s.find(':') + 1);
	findMx(h);
	findMx(m);
	int s = mx, e = 70;
	bool b = 1;
	while (s < e) {
		int mid = s + ((e - s + 1) >> 1);
		if (check(mid)) {
			s = mid;
			b = 1;
		} else
			e = mid - 1;
	}
	if (s == 70)
		return puts("-1");
	if (e == mx)
		return puts("0");
	for (int i = mx + 1; i <= s; ++i)
		printf("%d ", i);
}
