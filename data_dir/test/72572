#define __USE_MINGW_ANSI_STDIO 0
#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define INF (1LL<<59)
#define ff first
#define ss second
#define mod 1000000007 
#define pb push_back
#define mp make_pair
#define int long long
#define all(a) a.begin(), a.end()
#define inf (1LL<<61)
#define ull unsigned long long
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
int gcd(int x,int y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
int expo(int n,int m,int p)   //modULAR EXPONENTIATION
{
    int r=1;
    n=n%p;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
bool isPrime(int n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;
 
    // This is checked so that we can skip 
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;
 
    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;
 
    return true;
}
vector<int>adj[1005];
int dis[103][103];
vector<int>p,ans;
int m;
void dfs(int s,int par,int len,int ind)
{
	if(ind==m)
	{
		ans.pb(p[ind-1]);
		return ;
	}
	if(dis[par][s]==len)
	{	
		dfs(p[ind+1],par,len+1,ind+1);
	}
	else
	{
		//cout<<ind<<endl;
		ans.pb(p[ind-1]);
		dfs(s,p[ind-1],1,ind);
	}
}
int32_t main()
{
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif 
   /********************* Code starts here ***********************/   
   int n;
   cin>>n;
   char a[n][n];
   
   memset(dis,10000,sizeof(dis));
   for(int i=0;i<n;i++)
   {
   	dis[i][i]=0;
   	for(int j=0;j<n;j++)
   	{
   		cin>>a[i][j];
   		if(a[i][j]=='1')
   		{
   			dis[i][j]=1;
   			adj[i].pb(j);
   		}
   	}
   }
   for(int i=0;i<n;i++)
   {
   	for(int j=0;j<n;j++)
   	{
   		for(int k=0;k<n;k++)
   		{
   			dis[j][k]=min(dis[j][k],dis[j][i]+dis[i][k]);
   		}
   	}
   }
   //int m;
   cin>>m;
   for(int i=0;i<m;i++)
   {
   	int x;
   	cin>>x;
   	x--;
  	p.pb(x);
   }
   ans.pb(p[0]);
   dfs(p[1],p[0],1,1);
   cout<<ans.size()<<endl;
   for(auto x : ans)
   	cout<<x+1<<' ';
}        