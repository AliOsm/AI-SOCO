#pragma GCC optimize ("O3")
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) (((n%m) + m)%m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

const int N = 2e3 + 5;

map<int, int> mp;
int arr[N], n;

bool check(int mid)
{
	map<int, int> cnt = mp;

	rep(i, 0, mid)
		cnt[arr[i]]--;

	bool flag = true;
	for(auto i : cnt)
		if (i.second > 1)
		{
			flag = false;
		}
	if (flag)
		return true;

	rep(i, mid, n)
	{
		int l = i - mid;
		cnt[arr[l]]++;
		cnt[arr[i]]--;
		flag = true;
		for(auto j : cnt)
		{
			if (j.second > 1)
			{
				flag = false;
				break;
			}
		}
		if (flag)
			return true;
	}

	return false;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	int cnt = 0;

	rep(i, 0, n)
	{
		cin >> arr[i], mp[arr[i]]++;
		if (mp[arr[i]] == 2)
			cnt++;
	}

	int st = 0, en = n, mid, ret = -1;

	while(st <= en)
	{
		mid = (st+en)/2;

		if (check(mid))
			en = mid - 1, ret = mid;
		else
			st = mid + 1;
	}

	cout << ret << endl;

	return 0;
}
