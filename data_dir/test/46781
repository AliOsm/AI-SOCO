/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskA {
public:
    void solve(istream& in, ostream& out) {
        int n;
        in >> n;
        vector<int> s(n);
        for (int i = 0; i < n; ++i) {
            in >> s[i];
        }
        vector<int> num_ones(n + 1, 0);
        for (int i = n - 1; i >= 0; --i) {
            num_ones[i] = num_ones[i + 1] + s[i];
        }
        int res = num_ones[0];
        for (int i = 0, cur_zeros = 0; i < n; ++i) {
            cur_zeros += (s[i] == 0);
            res = max(res, cur_zeros + num_ones[i + 1]);
        }
        out << res << "\n";
    }
};


int main() {
	std::ios::sync_with_stdio(false); cin.tie(nullptr);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
