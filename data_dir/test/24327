// rc.cpp
//

#include <assert.h>
#include <time.h>
#include <math.h>
#include <string.h>

#include <iterator>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <algorithm>
#include <numeric>
#include <functional>

using namespace std;

typedef unsigned char uchar;
typedef unsigned int uint;
typedef unsigned long long uint64;
typedef long long sint64;

#define PI 3.1415926535897932384626433832795
#define EPS 1E-11

char a[100001],
b[100001],
r[100001];

int main(int argc, char* argv[])
{
    /*#ifndef _DEBUG
    freopen("gazmyas.in", "rt", stdin);
    freopen("gazmyas.out", "wt", stdout);
    #endif*/

    uint n, t;
    cin >> n >> t >> a >> b;

    uint s = 0;
    for (uint i = 0; i < n; ++i)
    {
        if (a[i] == b[i])
            ++s;
    }

    uint d = n - s;
    if (t < (d + 1) / 2)
        cout << -1 << endl;
    else
    {
        uint cs = 0,
            cq = 0;
        if (t >= d)
            cq = t - d;
        else
        {
            cs = (d - t) * 2;
            cq = (d & 1) && (cs == t - 1) ? 1 : 0;
        }

        bool f = true;
        for (uint i = 0; i < n; ++i)
        {
            if (a[i] != b[i])
            {
                if (cs)
                {
                    --cs;
                    if (f)
                        r[i] = a[i];
                    else
                        r[i] = b[i];
                    f = !f;
                }
                else
                {
                    r[i] = a[i] + 1;
                    if (r[i] > 'z')
                        r[i] = 'a';
                    if (r[i] == b[i])
                        ++r[i];
                    if (r[i] > 'z')
                        r[i] = 'a';
                }
            }
            else
            {
                if (cq)
                {
                    --cq;
                    r[i] = a[i] == 'z' ? 'a' : a[i] + 1;
                }
                else
                    r[i] = a[i];
            }
        }
        cout << r << endl;
    }

    return 0;
}
