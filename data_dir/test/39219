#pragma GCC optimize("O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("trapv")
#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define f first
#define s second
#define y1 bbp
#define sz size()
using namespace std;
ll const N=1e6+3,M=2e5+3,inf=1e9+7,md=998244353;
ll n,x,y,q,qq,b[N],k,ps,m;
vector<ll> v;
ll a[N];
ll us[N];
string s,s1,s2;
main()
{
//    freopen("maximum.dat","r",stdin);freopen("maximum.sol","w",stdout);
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin>>n;
//    x=n*(n+1)/2;
    for (int i=1;i<=n;i++)
    {
        cin>>a[i];
        b[i]=b[i-1]+a[i];
    }
    ll l=0;
    set<ll> st;
    st.insert(0ll);
    for (int i=1;i<=n;)
    {
//        cout<<i<<endl;
//        cout<<st.sz<<endl;
        if (st.sz>0 && st.find(b[i])!=st.end())
        {
            st.erase(b[l]);
            l++;
        } else
        {
            st.insert(b[i]);
            x+=(i-l);
            i++;
        }
    }
    cout<<x;

}
