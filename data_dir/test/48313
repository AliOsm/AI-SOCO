#include <bits/stdc++.h>

using namespace std;

const int dx[] = {-1, -1, 0, 1, 1, 1, 0, -1};
const int dy[] = {0, -1, -1, -1, 0, 1, 1, 1};

int main() {
  #ifdef LOCAL
  freopen("sol.in", "r", stdin);
  freopen("sol.out", "w+", stdout);
  #endif
  ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
  int n;
  cin >> n;
  int ax, ay, bx, by, cx, cy;
  cin >> ax >> ay >> bx >> by >> cx >> cy;
  ax--; ay--; bx--; by--; cx--; cy--;
  vector<vector<int>> used(n, vector<int>(n));
  function<bool(int,int)> dfs = [&](int x, int y) {
    if (x == cx && y == cy) {
      return true;
    }
    used[x][y] = 1;
    for (int k = 0; k < 8; k++) {
      int xk = x + dx[k];
      int yk = y + dy[k];
      if (0 <= xk && xk < n && 0 <= yk && yk < n) {
        if (used[xk][yk]) {
          continue;
        }
        if (ax == x || ay == y || abs(ax - x) == abs(ay - y)) {
          continue;
        } else {
          if (dfs(xk, yk)) {
            return true;
          }
        }
      }
    }
    return false;
  };
  cout << (dfs(bx, by) ? "YES" : "NO") << '\n';
  return 0;
}