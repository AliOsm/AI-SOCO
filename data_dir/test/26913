#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
	// freopen("data.in", "rt", stdin);
	// freopen("data.out", "w", stdout);
	auto _start = chrono::high_resolution_clock::now();
#endif

	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(15);
	int n;
	string s;
	cin >> n >> s;
	string color = "BGR";
	int ans = n;
	string res = s;
	vector<vector<int>> dp(n + 1, vector<int>(3, n));
	vector<vector<int>> pre(n + 1, vector<int>(3, -1));
	for(int i = 0; i < 3; i++) {
		dp[0][i] = 0;
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 3; j++) {
			for (int k = 0; k < 3; k++) {
				if (j == k) continue;
				if (dp[i][j] + (s[i] != color[k]) < dp[i + 1][k]) {
					dp[i + 1][k] = dp[i][j] + (s[i] != color[k]);
					pre[i + 1][k] = j;
				}
			}
		}
	}
	int idx = -1;
	for(int i = 0; i < 3; i++) {
		if(dp[n][i] < ans) {
			ans = dp[n][i];
			idx = i;
		}
	}
	for(int i = n, j = idx; pre[i][j] != -1; j = pre[i][j], i--) {
		res[i - 1] = color[j];
	}
	cout << ans << '\n' << res << '\n';

#ifdef LOCAL_DEFINE
	auto _end = chrono::high_resolution_clock::now();
	cerr << "elapsed time: " << chrono::duration<double, milli>(_end - _start).count() << " ms\n";
#endif
	return 0;
}