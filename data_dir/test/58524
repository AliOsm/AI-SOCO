#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize ("Ofast")
#pragma GCC target ("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
#define int long long
#define d long double
#define pii pair<int,int>
#define pb push_back
#define cases int tc;cin>>tc;while(tc--)
#define N 200003
#define M 1003
//int mod=1e9+7;
//int mod=998244353;
vector<int> g[N],g2[N];
bool vis[N],done[N];
vector<pii> ans;

void dfs(int i)
{
    vis[i]=true;

    for(auto j:g[i])
    {
        if(!vis[j])
        {
            g2[i].pb(j);
            g2[j].pb(i);
            dfs(j);
        }
    }
}

void bfs()
{
    ans.clear();
    queue<int> q;
    q.push(1);
    fill(vis,vis+N,0);
    vis[1]=true;

    while(!q.empty())
    {
        int u=q.front();
        q.pop();

        for(auto j:g2[u])
        {
            if(!vis[j])
            {
                vis[j]=true;
                ans.pb({u,j});
                q.push(j);
            }
        }
    }
}

signed main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

    int n,m,k;
    cin>>n>>m>>k;
    int i,j,x,y;
    for(i=1;i<=m;++i)
    {
        cin>>x>>y;
        g[x].pb(y);
        g[y].pb(x);
    }
    if(g[1].size()<k)
    {
        cout<<"NO";
        return 0;
    }

    fill(vis,vis+N,0);
    fill(done,done+N,0);
    vis[1]=true;
    int comp=0;
    for(auto x:g[1])
    {
        if(!vis[x])
        {
            g2[1].pb(x);
            g2[x].pb(1);
            ++comp;
            dfs(x);
            done[x]=1;
        }
    }
    if(comp>k)
    {
        cout<<"NO";
        return 0;
    }

    k-=comp;
    if(k)
    {
        for(auto x:g[1])
        {
            if(!done[x])
            {
                --k;
                g2[1].pb(x);
                g2[x].pb(1);
                done[x]=1;
            }
            if(!k)
                break;
        }
    }

    bfs();

    cout<<"YES\n";
    for(auto x:ans)
        cout<<x.first<<" "<<x.second<<"\n";


    return 0;
}
