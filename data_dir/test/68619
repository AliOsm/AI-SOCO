#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define pb push_back
#define mp make_pair
#define sf(x) scanf("%d", &x);
#define sfll(x) scanf("%I64d", &x);
#define pr(x) printf("%d ", x);

typedef long long ll;
using namespace std;

int main() {
    string ss;
    while(cin >> ss) {
        string s;
        vector<int>occ;
        for(int i = 0; i < ss.size(); i++) {
            s += ss[i];
            int j = 1;
            while(i + j < ss.size() && ss[i + j] == ss[i]) j++;
            occ.push_back(j);
            j -= (i + j < ss.size());
            i += j;
        }

        int n;
        cin >> n;
        string rst(26, '5');
        while(n--) {
            string r;
            cin >> r;
            rst[r[0] - 'a'] = r[1];
            rst[r[1] - 'a'] = r[0];
        }

        int res = 0;
        for(int i = 0; i + 1 < s.size(); i++) {
            int j = i, ti = 0, ti1 = 0;
            while(j<s.size() && s[j]==s[i]) {
                ti += occ[j];
                if(j + 1 >= s.size() || rst[s[j] - 'a'] != s[j + 1]) break;
                ti1 += occ[j + 1];
                j += 2;
            }
            i = max(i,j - (j < s.size()));
            res += min(ti, ti1);
        }

        cout << res << endl;
    }
    return 0;
}
