// Discussed with rainboy, coached by Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 100, M = 100;
const long long INF = 0x3f3f3f3f3f3f3f3fLL;

long long aa[N][M], dp[N][M];

int main() {
	int t; cin >> t;
	while (t--) {
		int n, m; cin >> n >> m;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				cin >> aa[i][j];
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				aa[i][j] -= i + j;
		long long ans = INF;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++) {
				for (int i_ = 0; i_ < n; i_++)
					for (int j_ = 0; j_ < m; j_++)
						if (aa[i_][j_] >= aa[i][j]) {
							dp[i_][j_] = aa[i_][j_] - aa[i][j];
							if (i_ > 0 && j_ > 0)
								dp[i_][j_] += min(dp[i_ - 1][j_], dp[i_][j_ - 1]);
							else if (i_ > 0)
								dp[i_][j_] += dp[i_ - 1][j_];
							else if (j_ > 0)
								dp[i_][j_] += dp[i_][j_ - 1];
							if (dp[i_][j_] > INF)
								dp[i_][j_] = INF;
						} else
							dp[i_][j_] = INF;
				ans = min(ans, dp[n - 1][m - 1]);
			}
		cout << ans << '\n';
	}
	return 0;
}
