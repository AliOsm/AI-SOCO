#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;

struct node
{
    lli fi ;
    lli se ;
}seg[4 * N];

lli a[N];

node calc(node X, node Y)
{
    node temp ;
    temp.fi = __gcd(X.fi, Y.fi);
    temp.se = 0;
    if(temp.fi == X.fi)
    {
        temp.se += X.se;
    }
    if(temp.fi == Y.fi)
    {
        temp.se += Y.se;
    }
    return temp;
}

void build(lli s, lli e, lli idx)
{
    if(s == e)
    {
        seg[idx].fi = a[s];
        seg[idx].se = 1;
        return ;
    }
    lli mid = (s + e) / 2;
    build(s, mid, 2 * idx + 1);
    build(mid + 1, e, 2 * idx + 2);
    seg[idx] = calc(seg[2 * idx + 1], seg[2 * idx + 2]);
}

node query(lli s, lli e, lli qs, lli qe, lli idx)
{
    if(s > qe || e < qs)
    {
        node temp ;
        temp.fi = temp.se = 0;
        return temp ;
    }
    if(s >= qs && e <= qe)
    {
        return seg[idx];
    }
    lli mid = (s + e) / 2;
    node l = query(s, mid, qs, qe, 2 * idx + 1);
    node r = query(mid + 1, e, qs, qe, 2 * idx + 2);
    return calc(l, r);
}


void solve()
{
    lli n;
    cin>>n;
    for(int i = 0; i < n; i ++)
        cin>>a[i];
    build(0, n - 1, 0);
  //  cout<<seg[0].fi<<' '<<seg[0].se<<endl;
    lli q;
    cin>>q;
    for(int i = 0; i < q; i ++)
    {
        lli l, r;
        cin>>l>>r;
        l --;
        r --;
//        cout<<l<<' '<<r<<endl;
        cout<<(r - l + 1) - (query(0, n - 1, l, r, 0).se)<<endl;
    }
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
