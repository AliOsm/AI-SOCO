#include<bits/stdc++.h>

using namespace std;

#define ll long long int

map<int, int> dp;
set<int> st, all;
char s[20];
const int mod = 1e9 + 7, INF = 1e9;

int main() {
#ifdef HOME
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    int n;
    scanf("%d", &n);

    dp[0] = 1;
    st = {0, INF};
    all = {0, INF};

    for (int i = 0; i < n; i++) {
        int x;
        scanf(" %s%d", s, &x);

        if (s[1] == 'D') {
            if (*st.begin() < x && x < *st.rbegin()) {
                dp[x] = prev(dp.lower_bound(x))->second;
                st.insert(x);
            }
            all.insert(x);
        } else {
            if (!st.count(x)) {
                printf("0");
                return 0;
            }
            auto q = all.find(x);
            st = {*prev(q), *next(q)};
            all.erase(q);

            pair<int, int> p;
            if (dp.lower_bound(x) == dp.begin())
                p = {*st.begin(), dp[x]};
            else {
                p = *prev(dp.lower_bound(x));
                p.second = (p.second + dp[x]) % mod;
            }
            dp = {p};
        }
    }

    int ans = 0;
    for (auto p : dp)
        ans = (ans + p.second) % mod;

    printf("%d\n", ans);

    return 0;
}