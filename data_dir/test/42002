#include <iostream>
#include <algorithm>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <stdint.h>
#include <string>
#include <initializer_list>
#include <functional>
#include <future>
using namespace std;

int main(void)
{
	string str;
	cin >> str;
	int64_t a, b;
	cin >> a >> b;
	vector<int64_t> ra, rb;
	int n = str.size();
	if (n < 2)
	{
		cout << "NO" << endl;
		return 0;
	}
	ra.push_back(1);
	rb.push_back(1);
	for (int i = 0; i < n - 1; ++i)
	{
		int64_t cura = (ra.back() * 10) % a;
		int64_t curb = (rb.back() * 10) % b;
		ra.push_back(cura);
		rb.push_back(curb);
	}
	std::reverse(ra.begin(), ra.end());
	std::reverse(rb.begin(), rb.end());

	int64_t suma = 0, sumb = 0;	
	for (int i = 0; i < n; ++i)
	{
		int64_t curd = str[i] - '0';
		sumb += curd * rb[i];
		sumb %= b;
	}
	for (int i = 0; i < n; ++i)
	{
		if (suma % a == 0 && sumb % b == 0)
		{
			string stra = str.substr(0, i);
			string strb = str.substr(i);
			if (!stra.empty() && !strb.empty() && stra[0] != '0' && strb[0] != '0')
			{
				cout << "YES" << endl;
				cout << stra << endl << strb << endl;
				return 0;
			}
		}

		int64_t curd = str[i] - '0';
		suma *= 10;
		suma += curd;		

		sumb -= curd * rb[i];

		while (suma < 0)
			suma += a;
		while (sumb < 0)
			sumb += b;

		suma %= a;
		sumb %= b;
	}
	cout << "NO" << endl;
	return 0;
}