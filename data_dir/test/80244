#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef long double real;

#ifdef WIN32
#define INT64 "%I64d"
#define UINT64 "%I64u"
#else
#define INT64 "%lld"
#define UINT64 "%llu"
#endif

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

const int MaxN = 1000000, MaxC = 0x3F3F3F3F, NA = -1;

bool s [MaxN];
int p [MaxN];
int m, n;

int main (void)
{
 int i, j, k;

 memset (s, 1, sizeof (s));
 s[0] = s[1] = false;
 for (i = 2; i * i < MaxN; i++)
  if (s[i])
   for (j = i * i; j < MaxN; j += i)
    s[j] = false;

 m = 0;
 for (i = 0; i < MaxN; i++)
  if (s[i])
  {
   for (j = i, k = 0; j > 0; j /= 10)
    k = k * 10 + j % 10;
   if (k != i && s[k])
    p[m++] = i;
  }
// printf ("%d\n", m);

 while (scanf (" %d", &n) != EOF)
 {
  printf ("%d\n", p[n - 1]);
 }

 return 0;
}
