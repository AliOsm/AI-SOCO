#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
using namespace std;
typedef long long mt;
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 500001
#define K1 1110
#define K (32)
#define M (2021)
#define INF 10000000000000007//1e16 + 7
#define MOD 1000000007ll //1000000007//1e9 + 7
#define EPS 1e-9

mt n, k, d, tu, tv;
vector<pair<mt, mt>> g[N];
queue<pair<pair<mt, mt>, pair<mt, mt>>> p;
bool u[N];
vector<mt> answ;
int main(void)
{
#ifdef _DEBUG	
	freopen("in.txt", "r", stdin);
#endif
	scanf("%lld %lld %lld", &n, &k, &d);
	while (k--)
		scanf("%lld", &tv), p.push(make_pair(make_pair(tv, -1), make_pair(0, 0)));
	rep(1, n, i)
		scanf("%lld %lld", &tu, &tv), g[tu].push_back(make_pair(tv, i)), g[tv].push_back(make_pair(tu, i));
	while (!p.empty()) {
		auto vx = p.front();
		mt v = vx.first.first, id = vx.first.second, dist = vx.second.first, pr = vx.second.second;
		p.pop();
		if (u[v] && id != (-1ll)) {
			answ.push_back(id);
			continue;
		}
		else if (u[v] && id == (-1ll)) {
			continue;
		}
		u[v] = true;
		for (auto to : g[v])
			if(dist <= d && to.first != pr) p.push(make_pair(make_pair(to.first, to.second), make_pair(dist + 1, v)));
	}
	sort(answ.begin(), answ.end());
	answ.resize(unique(answ.begin(), answ.end()) - answ.begin());
	printf("%lld\n", answ.size() * 1ll);
	rep(0, answ.size(), i)
		printf("%lld ", answ[i]);
	putc('\n', stdout);
	return 0;
}