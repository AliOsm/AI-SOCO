#include <bits/stdc++.h>
#define REP(i, n) for (long long i = 0; i < n; i++)
using namespace std;
typedef long long Long;
typedef long double Double;

const Long N = 5e5 + 10;
const Double INF = 1e9 + 10;
const Double EPS = 1e-9;

vector< pair<Long,Long> > der, izq;

bool f(Double tiempo){
	if(der.empty() || izq.empty()) return false;
	
	vector< pair<Double,Double> > r1,r2;
	for(Long i = 0; i < der.size(); i++){
		Double L = der[i].first*1.0;
		Double R = der[i].first + der[i].second*tiempo;
		while(i+1 < der.size() && L <= der[i+1].first*1.0 && der[i+1].first*1.0 <= R){
			i++;
			R = max(der[i].first + der[i].second*tiempo,R);
		}
		r1.push_back({L,R});
	}
	
	for(Long i = izq.size() - 1; i >= 0 ; i--){
		Double L = izq[i].first + izq[i].second*tiempo;
		Double R = izq[i].first*1.0;
		while(i-1 >= 0 && L <= izq[i-1].first*1.0 && izq[i-1].first*1.0 <= R){
			i--;
			L = min(izq[i].first + izq[i].second*tiempo,L);
		}
		r2.push_back({L,R});
	}
	reverse(r2.begin(),r2.end());
	
	Long ind1 = 0;
	Long ind2 = 0;
	while(true){
		if(ind1 == r1.size() || ind2 == r2.size()){
			break;
		}
		if(r1[ind1].second < r2[ind2].first){
			ind1++;
		}else if(r2[ind2].second < r1[ind1].first){
			ind2++;
		}else{
			return true;
		}
	}
	
	return false;
}

Double bb(Double l, Double r){
	for(Long i = 0; i < 60; i++){
		Double m = (l+r)/2;
		if(!f(m)){
			l = m;
		}else{
			r = m;
		}
	}
	return (l+r) / 2.0;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.precision(20);
	cout << fixed;
    
    Double ans = 1e9 + 10;
    
    Long n;
    cin >> n;
    Long ind = -1;
    Long x, v;
    for(Long i = 0; i < n; i++){
    	cin >> x >> v;
    	if(v > 0){
    		der.push_back({x,v});
		}else{
			izq.push_back({x,v});
		}
	}
	
	ans = bb(0.0,INF);
	if(fabs(ans-INF) < EPS){
		cout << -1 << endl;
	}else{
		cout << ans << endl;
	}
	return 0;
}
