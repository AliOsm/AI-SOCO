#include <bits/stdc++.h>
using namespace std;

const int N = 3003;

int arr[N][N], g[N * N], mn[N][N];



int f(int n, int m, int a, int b) {
        int tmp[n + 1][m + 1];
        for(int i = 1; i <= n; i++) {
                deque <int> DQ;
                for(int j = 1; j <= m; j++) {
                        while(!DQ.empty() && j - DQ.front() + 1 > b) DQ.pop_front();
                        while(!DQ.empty() && arr[i][j] < arr[i][DQ.back()]) DQ.pop_back();
                        DQ.push_back(j);
                        tmp[i][j] = arr[i][DQ.front()];
                }
        }

        for(int j = 1; j <= m; j++) {
                deque <int> DQ;
                for(int i = 1; i <= n; i++) {
                        while(!DQ.empty() && i - DQ.front() + 1 > a) DQ.pop_front();
                        while(!DQ.empty() && tmp[i][j] < tmp[DQ.back()][j]) DQ.pop_back();
                        DQ.push_back(i);
                        mn[i][j] = tmp[DQ.front()][j];

                }
        }
}





int32_t main() {
        ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
        int n, m, a, b; cin >> n >> m >> a >> b;
        int  x, y; long long z; cin >> g[0] >> x >> y >> z;
        for(int i = 1; i <= n * m; i++) g[i] = (1LL * g[i - 1] * x + y) % z;
        for(int i = 1; i <= n; i++) {
                for(int j = 1; j <= m; j++) {
                        arr[i][j] = g[(i - 1) * m + j - 1];
                }
        }
//        for(int i = 1; i <= n; i++) {
//                for(int j = 1; j <= m; j++) {
//                        cout << arr[i][j] << ' ';
//                }
//                cout << endl;
//        }
        f(n, m, a, b);
        long long int res = 0;
        for(int i = a; i <= n; i++) {
                for(int j = b; j <= m; j++) {
                       // cout << mn[i][j] << ' ' << cnt[i][j] << endl;
                        res += mn[i][j];
                }
        }
        cout << res << endl;


}
