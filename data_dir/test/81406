#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

const int MOD = 998244353;

map<ll, int> mp, all;

ll gcd(ll a, ll b)
{
	return b == 0 ? a : gcd(b, a % b);
}

ll Sqrt(ll x, ll t)
{
	ll y = pow(x, (ld)1 / t);
	for (ll i = max(0ll, y - 10); i <= y + 10; i++)
	{
		ll tmp = 1;
		for (int shit = 0; shit < t; shit ++)
			tmp *= i;
		if (tmp == x)
			return i;
	}
	return -1;
}

int main()
{
	ios::sync_with_stdio(false);

	ll res = 1;

	int n;
	cin >> n;
	for (int i=0; i<n; i++)
	{
		ll x;
		cin >> x;
		mp[x]++;
	}
	for (auto p : mp)
	{
		ll x = p.first;
		ll cnt = p.second;
		bool found = false;
		if (!found && Sqrt(x, 4) != -1)
		{
			ll shit = Sqrt(x, 4);
			all[shit] += 4 * cnt;
			found = true;
		}
		if (!found && Sqrt(x, 2) != -1)
		{
			ll shit = Sqrt(x, 2);
			all[shit] += 2 * cnt;
			found = true;
		}
		if (!found && Sqrt(x, 3) != -1)
		{
			ll shit = Sqrt(x, 3);
			all[shit] += 3 * cnt;
			found = true;
		}
		if (!found)
		{
			for (auto q : mp)
				if (x != q.first && gcd(x, q.first) != 1)
				{
					ll shit = gcd(x, q.first);
					ll oshit = x / shit;
					all[shit] += cnt;
					all[oshit] += cnt;
					found = true;
					break;
				}
		}
		if (!found)
		{
			res = res * (cnt + 1) % MOD * (cnt + 1) % MOD;			
		}
	}
	for (auto p : all)
		res = res * (p.second + 1) % MOD;
	cout << res << "\n";
	return 0;
}
