#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define popcntll(x) __builtin_popcountll(x)
#define inf 0x3f3f3f3f  //integers only
#define watch(x) cout << (#x) << " is " << (x) << endl
#define isOn(S, j) (S & (1 << j))
#define setBit(S, j) (S |= (1 << j))
#define clearBit(S, j) (S &= ~(1 << j))
#define endl '\n'

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long  ll;

const double pi = acos(-1);
int dx[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dy[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};

const int N = 1010;

struct line{
    int Gpos , Spos;
};

line a[N];
char grid[N][N];
int n , m;

bool isvalid(){
    for(int i = 0 ; i < n ;++i){
        if(a[i].Gpos > a[i].Spos)
            return false;
    }
    return true;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    cin >> n >> m;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> grid[i][j];
            if (grid[i][j] == 'S') {
                a[i].Spos = j;
            } else if (grid[i][j] == 'G') {
                a[i].Gpos = j;
            }
        }
    }

    if (!isvalid()) {
        puts("-1");
        return 0;
    }

    set<int> s;
    for (int i = 0; i < n; ++i) {
        s.insert(a[i].Spos - a[i].Gpos);
    }

    printf("%d\n", s.size());

}
