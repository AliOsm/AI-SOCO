#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <cstring>
#include <cctype>
#include <queue>
#include <deque>
#include <ctime>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)2e5 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;
const int MOD = (int)1e9 + 7;

int cnt[Z], p[Z], ok[Z];

int main() {
	srand(time(0));
	//files;
	SWS;
	int n;
	cin >> n;
    set <int> mn;
    for (int i = 1; i <= n; ++i) {
        mn.insert(i);
    }
    for (int i = 1; i <= n; ++i) {
        cin >> p[i];
        cnt[p[i]]++;
        mn.erase(p[i]);
    }
    int ans = 0;
    for (int i = 1; i <= n; ++i) {
        if (cnt[p[i]] > 1) {
            if (p[i] < *mn.begin() && !ok[p[i]]) {
                ok[p[i]] = 1;
                continue;
            }
            ans++;
            cnt[p[i]]--;
            p[i] = *mn.begin();
            mn.erase(mn.begin());
            cnt[p[i]]++;
        }
    }
    cout << ans << '\n';
    for (int i = 1; i <= n; ++i) {
        cout << p[i] << ' ';
    }
	return 0;
}