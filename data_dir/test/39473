
// ~/BAU/ACM-ICPC/Teams/Republic_of_Coders/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 100002;
const ll MOD = 1e9 + 7;

int p[N];
int find(int u) {
	if (u == p[u])
		return u;
	return p[u] = find(p[u]);
}

int bruteforce(int n) {
	vector<pair<int, pair<int, int> > > v;

	for (int i = 0; i < n; i++)
		for (int j = i + 1; j < n; j++)
			v.push_back(make_pair(i^j, make_pair(i, j)));

	sort(v.begin(), v.end());
	for (int i = 0; i < n; i++)
		p[i] = i;

	cout << n << " : ";
	int e = 0, ans = 0;
	for (int i = 0; i < v.size(); i++) {
		int a = find(v[i].second.first), b = find(v[i].second.second);
		if (a != b) {
			e++;
			p[a] = b;
			ans += v[i].first;
			cout << v[i].first << " , ";
		}
	}
	cout << " -- " << ans << endl;
	return ans;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	/*
	for (int n = 2; n <= 10; n++) {
		bruteforce(n);
	}
	return 0;
	*/
	ll n;
	scanf("%lld", &n);

	ll ans = 0;
	for (ll i = 0; i <= 40; i++) {
		ll x = (1ll << i), y = (1ll << (i + 1));
		ans += 1ll * (1ll << i)*((n - x + (y - 1)) / y);
		//cout << i << " , " << ans << endl;
	}

	printf("%lld\n", ans);

	return 0;
}