#include<bits/stdc++.h>
#define int long long int
#define ull unsigned long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD 1000000007
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int BIG=pow(2,20);
map<int,int> m;
map<int,int> cnt;
vector<int32_t> v[7005];
int a[7005];
map<int,int> encode;
int decode[7005];
bool check[4000005];
set<int> s;
set<int32_t> vals;
void compress()
{
	int cur=0;
	for(auto it:s)
	{
		decode[cur]=it;
		encode[it]=cur++;
	}	
}
void dfs(int i)
{
	 if(!check[i])
	 {
	 	   check[i]=true;
	 	   vals.insert(i);
           rep(j,0,v[i].size())dfs(v[i][j]);
	 }	
}
int32_t main(){
  	 getFaster;
     int n;
     cin>>n;
     rep(i,0,n)cin>>a[i];
     rep(i,0,n)
     {
     	 int b;
     	 cin>>b;
     	 m[a[i]]+=b;
     	 cnt[a[i]]++;
     	 s.insert(a[i]);
     }
     compress();
     rep(i,0,n)rep(j,0,n)
     {
     	  if(a[i]==a[j])continue;
     	  int x=a[i],y=a[j];
     	  int and1=x&y;
     	  if(and1==x)
     	  {
             v[encode[y]].push_back(encode[x]);
          }	
     }
     int ans=0;
     for(auto it:s)
     {
     	 int x=encode[it];
     	 if(!check[x] && cnt[it]>1)dfs(x);	
     }
     for(auto it:vals)ans+=m[decode[it]]; 	
     cout<<ans<<endl;
     return 0;
}