#include "bits/stdc++.h"
using namespace std;
#define fi first
#define se second
#define ll long long
#define dbg(v) cerr<<#v<<" = "<<v<<'\n'
#define vi vector<int>
#define vl vector <ll>
#define pii pair<int,int>
#define mp make_pair
#define db long double
#define pb push_back
#define all(s) s.begin(),s.end()
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
struct tri {
	tri * t[2];
	int ans;
	tri(void) {
		memset(t,0,sizeof(t));
		ans = 0;
	}
};
typedef tri * tr;
const int N = (int)(1e6) + 5;
int s[N];
int v[N];
inline int readChar();
template <class T = int> inline T readInt();
template <class T> inline void writeInt( T x, char end = 0 );
inline void writeChar( int x );
inline void writeWord( const char *s );

/** Read */

static const int buf_size = 4096;

inline int getChar() {
    static char buf[buf_size];
    static int len = 0, pos = 0;
    if (pos == len)
        pos = 0, len = fread(buf, 1, buf_size, stdin);
    if (pos == len)
        return -1;
    return buf[pos++];
}

inline int readChar() {
    int c = getChar();
    while (c <= 32)
        c = getChar();
    return c;
}

template <class T>
inline T readInt() {
    int s = 1, c = readChar();
    T x = 0;
    if (c == '-')
        s = -1, c = getChar();
    while ('0' <= c && c <= '9')
        x = x * 10 + c - '0', c = getChar();
    return s == 1 ? x : -x;
}

/** Write */

static int write_pos = 0;
static char write_buf[buf_size];

inline void writeChar( int x ) {
    if (write_pos == buf_size)
        fwrite(write_buf, 1, buf_size, stdout), write_pos = 0;
    write_buf[write_pos++] = x;
}

template <class T>
inline void writeInt( T x, char end ) {
    if (x < 0)
        writeChar('-'), x = -x;

    char s[24];
    int n = 0;
    while (x || !n)
        s[n++] = '0' + x % 10, x /= 10;
    while (n--)
        writeChar(s[n]);
    if (end)
        writeChar(end);
}

inline void writeWord( const char *s ) {
    while (*s)
        writeChar(*s++);
}

struct Flusher {
    ~Flusher() {
        if (write_pos)
            fwrite(write_buf, 1, write_pos, stdout), write_pos = 0;
    }
} flusher;

int main(void)
{
	int n;
	n = readInt();
	for (int i = 1;i <= n;++i)
		s[i] = readInt();
	for (int i = 1;i <= n;++i)
		v[i] = readInt();
	tr t = new tri();
	for (int i = 1;i <= n;++i) {
		auto cnt = t;
		for (int j = 29;j >= 0;--j) {
			int bit = (v[i] >> j) & 1;
			if (!cnt->t[bit])
				cnt->t[bit] = new tri();
			cnt = cnt->t[bit];
			++cnt->ans;
		}
	}
	vi answer;
	for (int i = 1;i <= n;++i) {
		auto cnt = t;
		int val = 0;
		for (int j = 29;j >= 0;--j) {
			int bit = (s[i] >> j) & 1;
			if (cnt->t[bit] && cnt->t[bit]->ans)
				val |= bit * (1 << j),cnt = cnt->t[bit];
			else
				val |= (1 - bit) * (1 << j),cnt = cnt->t[bit^1];
			--cnt->ans;
		}
		answer.pb(s[i] ^ val);
	}
	for (int i = 0;i < n;++i)
		cout << answer[i] << " \n"[i == n - 1];
    return 0;
}