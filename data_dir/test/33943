#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pi pair<int, int>
#define F first
#define S second
#define pb push_back
#define PI acos(-1.0)
using namespace std;
ll n;
string l, r;
set<int> Left[30], Right[30], Lefid, Righid;
set<pi> Ans;
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    cin >> n;
    cin >> l >> r;
    for (int i=0; i<n; i++){
    	if (l[i] == '?') Lefid.insert(i+1);
    	else Left[l[i] - 'a'].insert(i+1);
    	if (r[i] == '?') Righid.insert(i+1);
    	else Right[r[i] - 'a'].insert(i+1);
    }

    for (int i=0; i<26; i++){
    	if (Right[i].size() && Left[i].size()){
    		Ans.insert({*Left[i].begin(), *Right[i].begin()});
    		Right[i].erase(Right[i].begin());
    		Left[i].erase(Left[i].begin());
    		i--;
    	}else if (Right[i].size() && Lefid.size()){
    		Ans.insert({*Lefid.begin(), *Right[i].begin()});
    		Right[i].erase(Right[i].begin());
    		Lefid.erase(Lefid.begin());
    		i--;
    	}else if (Left[i].size() && Righid.size()){
    		Ans.insert({*Left[i].begin(), *Righid.begin()});
    		Left[i].erase(Left[i].begin());
    		Righid.erase(Righid.begin());
    		i--;
    	}
    }
    while(Lefid.size() && Righid.size()){
    	Ans.insert({*Lefid.begin(), *Righid.begin()});
    	Righid.erase(Righid.begin());
    	Lefid.erase(Lefid.begin());
    }

    cout << Ans.size() << '\n';
    for (auto it : Ans) cout << it.F << ' ' << it.S << '\n';
	return 0;
}
