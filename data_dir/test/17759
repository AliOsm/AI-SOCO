#define _CRT_SECURE_NO_WARNINGS
#include<set>
#include<map>
#include<list>
#include<iomanip>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<complex>
#include<sstream>
#include<iostream>
#include<fstream>
#include<algorithm>
#include<numeric>
#include<utility>
#include<functional>
#include<stdio.h>
#include<assert.h>
#include<memory.h>
#include<bitset>

using namespace std;

#define Files


#define rdi(i)          scanf("%d", &i)
#define rdii(i, j)      scanf("%d%d", &i, &j)
#define rep(i, v)       for(int i=0;i<v.size();++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)          ((v).begin()), ((v).end())
#define clr(v, d)       memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e8;
const ll OOL = 1e16;
const ll MOD = 1e9 + 7;

const double EPS = (1e-7);
int dcmp(double x, double y) { return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1; }

#define pb                  push_back
#define MP                  make_pair
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
ull power(ull a, ull b){ if (b == 0) return 1; ull ans = power(a, b / 2); ans = ans * ans; if (b % 2 != 0) ans *= a; return ans; }

int n, m;
int a[100100];
int cnt[100100];
int sub[100100];

bool OK(ll x){
	clr(sub, -1);
	lp(i, x){
		sub[a[i]] = i;
	}
	vector<pair<int, pair<int, int> > > suborder;
	lpi(i, 1, m + 1){
		if (sub[i] == -1) return 0;
		suborder.push_back(make_pair(sub[i], make_pair(i, cnt[i])));
	}
	sort(all(suborder));
	int cur = 0;
	lp(i, x){
		if (cur >= suborder.size()) break;
		if (suborder[cur].first == i) return 0;
		if (a[i] > 0 && sub[a[i]] == i) continue;
		suborder[cur].second.second--;
		while (cur < suborder.size() && suborder[cur].second.second == 0) cur++;
	}
	return (cur >= suborder.size());
}

int main() {
#ifdef Filesx
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	
	cin >> n >> m;
	lp(i, n) cin >> a[i];
	lp(i, m) cin >> cnt[i + 1];
	int s = 0, e = n, ans = -1;
	while (s <= e){
		int midi = (s + e) / 2;
		if (OK(midi)) e = midi - 1, ans = midi;
		else s = midi + 1;
	}
	cout << ans << endl;

	return 0;
}