#include <bits/stdc++.h>
using namespace std;
#define endl           '\n'
#define LL             long long
#define ULL            unsigned long long
#define all(x)         x.begin(), x.end()
#define fill(a, b)     memset(a, b, sizeof a)


const LL Mod = 1000000007;
const int N = 1e5 + 5;

int ed, nd;
vector <int> g[N];
int used[N], gov[N];

void dfs(int u) {
    used[u] = true, nd++;
    for (auto v : g[u]) {
        ed++;
        if (!used[v]) dfs(v);
    }
}

int main() {
    int n, m, k;
    scanf("%d%d%d", &n, &m, &k);
    for (int i = 0; i < k; i++) {
        scanf("%d", gov + i);
    }
    for (int i = 0; i < m; i++) {
        int u, v;
        scanf("%d%d", &u, &v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    int res = 0, mx = 0;
    for (int i = 0; i < k; i++) {
        ed = nd = 0;
        dfs(gov[i]);
        mx = max(mx, nd);
        res += (nd * (nd - 1) / 2) - ed / 2;
    }
    int bnode = 0, bedge = 0;
    for (int i = 1; i <= n; i++) {
        if (!used[i]) {
            ed = nd = 0;
            dfs(i);
            bnode += nd, bedge += ed / 2;
        }
    }
    res += (bnode * (bnode - 1) / 2) - bedge;
    res += bnode * mx;
    printf("%d\n", res);
}