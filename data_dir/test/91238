#include <bits/stdc++.h>

using namespace std;

const int N = 210;

int fa[N];
bool vis[N];

void init() {
  for (int i = 0; i < N; ++i) {
    fa[i] = i;
  }
}

int find(int x) {
  return fa[x] == x ? x : (fa[x] = find(fa[x]));
}

void mrg(int x, int y) {
  x = find(x);
  y = find(y);
  if (x != y) {
    fa[x] = y;
  }
}

int main() {
  int n, m;
  scanf("%d%d", &n, &m);
  init();
  for (int i = 0, x, y, c; i < m; ++i) {
    scanf("%d%d%d", &x, &y, &c);
    --x, --y;
    if (c) {
      mrg(x, y);
      mrg(x + n, y + n);
    }
    else {
      mrg(x, y + n);
      mrg(x + n, y);
    }
  }
  for (int i = 0; i < n; ++i) {
    if (find(i) == find(i + n)) {
      puts("Impossible");
      return 0;
    }
  }
  vector<int> ans;
  for (int i = 0; i < n; ++i) {
    if (!vis[i]) {
      for (int j = 0; j < n; ++j) {
        if (find(j) == find(i)) {
          ans.push_back(j);
        }
        if (find(j) == find(i) || find(j + n) == find(i)) {
          vis[j] = 1;
        }
      }
    }
  }
  printf("%d\n", ans.size());
  for (int i = 0; i < ans.size(); ++i) {
    printf("%d%c", ans[i] + 1, " \n"[i == (int)ans.size() - 1]);
  }
  return 0;
}
