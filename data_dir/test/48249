#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 1, oo = 1e9;
int n, a[N], F[N];
vector<int> at[N];
set<pair<int, int> > st;
set<pair<int, int> >::iterator it;

int main(int argc, char **argv) {
	scanf("%d", &n);
	memset(F, -1, sizeof F);
	for (int i = 0; i < n; ++i) {
		scanf("%d", &a[i]);
		if (F[a[i]] == -1)
			F[a[i]] = i;
		at[a[i]].push_back(i);
	}
	for (int i = 1; i <= n; ++i)
		reverse(at[i].begin(), at[i].end());
	vector<int> v;
	for (int i = 1; i <= n; ++i)
		if (at[i].empty())
			v.push_back(i);
	for (int i = 0; i < n; ++i)
		st.insert( { i, a[i] });
	for (size_t i = 0; i < v.size(); ++i) {
		int p = v[i];
		while (true) {
			assert(!st.empty());
			it = st.begin();
			int cur = it->second;
			if ((cur > p && at[cur].size() == 1) || (cur < p && it->first == F[cur])) {
				at[cur].pop_back();
				st.erase(it);
				continue;
			}
			break;
		}
		a[it->first] = p;
		at[it->second].pop_back();
		if (F[it->second] == it->first)
			F[it->second] = at[it->second].back();
		st.erase(it);
	}
	printf("%d\n", (int) v.size());
	for (int i = 0; i < n; ++i)
		printf("%s%d", i ? " " : "", a[i]);
	puts("");
	return 0;
}
