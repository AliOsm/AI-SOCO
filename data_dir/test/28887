#include <bits/stdc++.h>
using namespace std;
long long mod=1e9+7;
long long binpow(long long a, long long n)
{
	if (n==0)
	{
		return 1;
	}
	if (n%2==1)
	{
		return (binpow(a, n-1)*a)%mod;
	}
	else
	{
		long long b=(binpow(a, n/2));
		return (b*b)%mod;
	}
} 
int main()
{
	int n;
	cin>>n;
	long long cnt[200005];
	for (int i=0; i<200005; i++)
	{
		cnt[i]=0;
	}
	for (int i=0; i<n; i++)
	{
		long long x;
		cin>>x;
		cnt[x]++;
	}
	vector<pair<long long, long long> >D;
	for (int i=0; i<200005; i++)
	{
		if (cnt[i])
		{
			D.push_back({i, cnt[i]});
		}
	}
	n=D.size();
	long long pre[n];
	pre[0]=D[0].second;
	for (int i=1; i<n; i++)
	{
		pre[i]=(pre[i-1]+D[i].second+pre[i-1]*D[i].second)%(mod-1);
	}
	long long pre_[n];
	pre_[n-1]=D[n-1].second;
	for (int i=n-2; i>=0; i--)
	{
		pre_[i]=(pre_[i+1]+D[i].second+pre_[i+1]*D[i].second)%(mod-1);
	}
/*	for (int i=0; i<n; i++)
	{
		cout<<pre[i]<<" ";
	}
	cout<<"\n";
	for (int i=0; i<n; i++)
	{
		cout<<pre_[i]<<" ";
	}
	cout<<"\n";*/
	long long ans=1;
	for (int i=0; i<n; i++)
	{
		long long x=D[i].second;
		x=(x*(x+1)/2)%(mod-1);
		long long y;
		if (i==0 && i==n-1)
		{
			y=0;
		}
		else if (i==0)
		{
			y=pre_[1]%(mod-1);
		}
		else if (i==n-1)
		{
			y=pre[n-2]%(mod-1);
		}
		else
		{
			y=(pre[i-1]+pre_[i+1]+pre[i-1]*pre_[i+1])%(mod-1);
		}
		y++;
		x=(x*y)%(mod-1);
//		cout<<x<<"\n";
		ans=(ans*binpow(D[i].first, x))%mod;
	}
	cout<<ans;
	return 0;
}