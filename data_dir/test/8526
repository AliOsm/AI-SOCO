#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define INF	1e9
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 1e6 + 6;
int v[N] , tree[N] , val[N];
int n;
map<int,int> m;

void increase(int i, int delta)
{
    for (; i < N; i |= i + 1)
        tree[i] += delta;
}

int sum(int i)
{
	int ans = 0;
	for (; i >= 0; i = (i & (i + 1)) - 1)
		ans += tree[i];
	return ans;
}

int getsum(int left, int right)
{
    return sum(right) - sum(left-1);
}

int main()
{

#ifndef ONLINE_JUDGE
	//freopen("in.in", "r", stdin);
	//freopen("out.in", "w", stdout);
	//ios_base::sync_with_stdio(0);
#endif

    scanf("%d",&n);
    loop(i,n)scanf("%d",&v[i]);
    for(int i = n - 1; i >= 0 ; i--){
        m[v[i]]++;
        increase(m[v[i]] , 1);
        val[i] = m[v[i]];
    }

    m.clear();
    long long ans = 0;
    loop(i,n){
        m[v[i]]++;
        increase(val[i] , -1);
        ans += getsum(1 , m[v[i]] - 1);

    }

    cout << ans << endl;

    return 0;
}

