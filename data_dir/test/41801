#include "bits/stdc++.h"
using namespace std;
typedef long long LL;
LL MOD = 1000000009;

LL modpow(LL a, LL n) {
  a = a % MOD;
  if (n < 0) {
    a = modpow(a, MOD - 2);
    n = -n;
  }
  LL res = 1;
  while (n > 0) {
    if (n & 1) res = (res * a) % MOD;
    a = (a * a) % MOD;
    n >>= 1;
  }
  return res;
}
#define modinv(x) modpow((x), -1)

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL);
  LL n, a, b; int k; cin >> n >> a >> b >> k;
  string s; cin >> s;

  // LL x = 2 * (MOD - 1);
  // trace(MOD);
  // trace(x, x * x);

  LL r = (b * modinv(a)) % MOD;
  LL term1 = (modpow(r, k) == 1) ? (n + 1) / k :
    (
      (modpow(r, n + 1) + MOD - 1)
      * modinv(modpow(r, k) + MOD - 1)
    ) % MOD;
  LL term2 = 0;
  for (int i = 0; i < k; i++) {
    term2 += (s[i] == '+' ? +1 : -1) * modpow(r, i);
  }
  term2 %= MOD;
  if (term2 < 0) term2 += MOD;

  assert (term1 > 0);
  assert (term2 >= 0);

  LL ans = (modpow(a, n) * ((term1 * term2) % MOD)) % MOD;

  cout << ans << '\n';

  return 0;
}
