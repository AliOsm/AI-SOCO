#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define fi first
#define se second
#define SZ(x) ((ll)(x).size())
using namespace std;
using namespace __gnu_pbds;
using ll = int64_t;
using ld = long double;
using ull = uint64_t;
using pl = pair<ll, ll>;
using vl = vector<ll>;
using vll = vector<vector<ll>>;
typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

ll t;
vl a, b, c;

ull count(ll a, ll b, ll c) {
  //cerr << "count " << a << ' ' << b << ' ' << c << endl;
  ull x = abs(a-b);
  ull y = abs(a-c);
  ull z = abs(b-c);
  return x*x+y*y+z*z;
}

ll solve(vl& a, vl& b, vl& c) {
  ull anw = 3*(ull)1e18;
  
  for (auto y: b) {
    auto xx = upper_bound(all(a), y);
    auto zz = lower_bound(all(c), y);
    ll x;

    if (xx == a.begin()) {
      x = a[0];
    } else {
      x = *(xx-1);
    }

    ll z;
    if (zz == c.end()) {
      z = c.back();
    } else {
      z = *zz;
    }
    anw = min(anw, count(x, y, z));
  }

  return anw;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> t;
    
    while(t--) {
      ll x, y, z; cin >> x >> y >> z;
      a.resize(x);
      b.resize(y);
      c.resize(z);
      for(auto &i : a) cin >> i;
      for(auto &i : b) cin >> i;
      for(auto &i : c) cin >> i;

      sort(all(a));
      sort(all(b));
      sort(all(c));

      vl anses;
      anses.pb(solve(a, b, c));
      anses.pb(solve(a, c, b));
      anses.pb(solve(b, a, c));
      anses.pb(solve(b, c, a));
      anses.pb(solve(c, a, b));
      anses.pb(solve(c, b, a));

      sort(all(anses));

      cout << anses[0] << endl;
    }

}