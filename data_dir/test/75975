#include<bits/stdc++.h>

using namespace std;

#define ll long long

#define all(x) x.begin(), x.end()

int main(){

	cin.tie(0);
	cin.sync_with_stdio(0);

	#ifdef Cyborg101
		freopen("input.txt", "r", stdin);
		freopen("output.txt", "w", stdout);
	#endif

	int n, s;
	cin >> n >> s;

	int cnt[n + 1], a[n + 1], b[n + 1];

	ll total = 0;

	for(int i = 0; i < n; ++i){
		cin >> cnt[i] >> a[i] >> b[i];
		total += cnt[i];
	}

	ll pizzas = (total + s - 1) / s;
	int rem = s * pizzas - total;
	cnt[n] = rem;
	a[n] = b[n] = 0;
	n++;

	ll cnt_a = 0, cnt_b = 0;
	ll res = 0;

	vector<pair<ll, ll>> a_to_b, b_to_a;

	for(int i = 0; i < n; ++i){
		
		if(a[i] > b[i]){
			cnt_a += cnt[i];
			res += cnt[i] * 1ll * a[i];
			a_to_b.push_back({a[i] - b[i], cnt[i]});
		}
		else{
			cnt_b += cnt[i];
			res += cnt[i] * 1ll * b[i];
			b_to_a.push_back({b[i] - a[i], cnt[i]});
		}

	}

	sort(all(a_to_b));
	sort(all(b_to_a));

	ll best = (ll) 1e12;

	//move the remainder of a to b
	{
		ll sub = 0;
		ll extra = cnt_a % s;
		for(auto &p : a_to_b){
			ll take = min(extra, p.second);
			extra -= take;
			sub += take * p.first;
		}
		best = min(best, sub);
	}


	//move the remainder of b to a
	{
		ll sub = 0;
		ll extra = cnt_b % s;
		for(auto &p : b_to_a){
			ll take = min(extra, p.second);
			extra -= take;
			sub += take * p.first;
		}
		best = min(best, sub);
	}

	cout << res - best << endl;

	return 0;
}