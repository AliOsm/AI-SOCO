#include <bits/stdc++.h>
    
#define ll long long
#define all(aaa) aaa.begin(), aaa.end()
 
using namespace std;


const int N = 5e4 + 5, K = 10;
int mx[N][K], mn[N][K], sz[N];
set<pair<int, int>> st[N];
 
signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);

    int n, k;
    cin >> n >> k;

    set<pair<int, int>> st_c;

    for (int i = 0; i < n; i++) {
    	int l = -1, r = -1;
    	for (int j = 0; j < k; j++) {
    		int x;
    		cin >> x;

    		mn[i][j] = x;
    		mx[i][j] = x;

    		auto it = st[j].lower_bound({x + 1, -1});

    		if (it != st[j].end() &&
    			(l == -1 || mn[l][j] > mn[it->second][j])) {
    			l = it->second;
    		}

    		if (it != st[j].begin()) {
    			it--;

    			if (r == -1 || mn[r][j] < mn[it->second][j])
    				r = it->second;

    			if (mx[it->second][j] > x &&
    				(l == -1 || mn[l][j] > mn[it->second][j])) {
    				l = it->second;
    			}
    		}
    	}

		sz[i] = 1;

		for (int j = 0; j < k; j++) {
			if (l != -1 && r != -1) {
    			auto itl = st[j].find({mn[l][j], l}),
    				itr = st[j].find({mn[r][j], r});
    			itr++;
    			for (auto it = itl; it != itr; it++) {
    				mn[i][j] = min(mn[i][j], mn[it->second][j]);
    				mx[i][j] = max(mx[i][j], mx[it->second][j]);
    				if (j == 0)
    					sz[i] += sz[it->second];
    			}
    			st[j].erase(itl, itr);
			}

			st[j].insert({mn[i][j], i});
		}

    	cout << sz[st[0].rbegin()->second] << "\n";
    }
    return 0;
}