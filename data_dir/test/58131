/*
    Author: Nguyen Tan Bao
    Status:
    Idea:
*/
 
#include <bits/stdc++.h>
#define FI first
#define SE second
#define EPS 1e-9
#define ALL(a) a.begin(),a.end()
#define SZ(a) int((a).size())
#define MS(s, n) memset(s, n, sizeof(s))
#define FOR(i,a,b) for (int i = (a); i <= (b); i++)
#define FORE(i,a,b) for (int i = (a); i >= (b); i--)
#define FORALL(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
//__builtin_ffs(x) return 1 + index of least significant 1-bit of x
//__builtin_clz(x) return number of leading zeros of x
//__builtin_ctz(x) return number of trailing zeros of x
 
using namespace std;
using ll = long long;
using ld = double;
typedef pair<int, int> II;
typedef pair<int, II> III;
typedef complex<ld> cd;
typedef vector<cd> vcd;
 
const ll MODBASE = 1000000007LL;
const int MAXN = 100010;
const int MAXM = 30010;
const int MAXK = 16;
const int MAXQ = 200010;

int t, n, m;
string s;
vector<II> res;

void doSwap(int l, int r) {
    int len = r - l;
    FOR(i,0,len/2) swap(s[l+i], s[r-i]);
    res.emplace_back(II(l, r));
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(nullptr);
    cin >> t;
    while (t--) {
        cin >> n >> m;
        cin >> s;
        s = " " + s;
        int now = 1;
        res.clear(); 
        // cout << s << endl;
        while (now <= n) {
            if (s[now] == ')') {
                FOR(i,now+1,n)
                    if (s[i] == '(') {
                        doSwap(now, i);
                        // cout << now << ' ' << i << endl;
                        break;
                    }
                now += 2;
            }
            else {
                FOR(i,now+1,n)
                    if (s[i] == ')') {
                        doSwap(now+1, i);
                        // cout << now+1 << ' ' << i << endl;
                        break;
                    }
                now += 2;
            }
            // cout << s << endl;
        }
        now = n / 2;
        int pos = 2;
        while (now > m) {
            now--;
            doSwap(pos, pos+1);
            pos += 2;
        }
        // cout << s << endl;
        cout << SZ(res) << "\n";
        FOR(i,0,SZ(res)-1) cout << res[i].FI << ' ' << res[i].SE << "\n";
        // cout << endl;
    }
    return 0;
}
