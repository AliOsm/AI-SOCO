#include <cstdio>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 200'009;

vector<int> g[N];
int ct;
int st[N];
int en[N];
int path[N];

void dfs(int x) {
  path[ct] = x;
  st[x] = ct;
  ++ct;
  for (int y : g[x]) {
    dfs(y);
  }
  en[x] = ct;
}

int main() {
  int n, qq;
  scanf("%d %d", &n, &qq);
  for (int i = 0; i < n; ++i) {
    g[i].clear();
  }
  for (int x = 1; x < n; ++x) {
    int y;
    scanf("%d", &y);
    --y;
    g[y].push_back(x);
  }
  for (int i = 0; i < n; ++i) {
    sort(g[i].begin(), g[i].end());
  }
  ct = 0;
  dfs(0);
  while (qq--) {
    int x, k;
    scanf("%d %d", &x, &k);
    --x;
    printf("%d\n", k > en[x] - st[x] ? -1 : path[st[x] + k - 1] + 1);
  }
}
