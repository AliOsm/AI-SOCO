#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <cmath>
#define rank krevedka
#define left trulala
#define next ttrulala
#define rigth trulalo
#define ran rank
using namespace std;

const int inf = int(1e9)+5;
int m1 = -inf;
int m2 = inf;
set<pair<int,int> >z1,z2;
int a[200500];
int b[200500];
int r1,r2;
void add1(int val,int p)
{
    if(val>=m1) {m1 = val; r1 = p;}
    z1.insert(make_pair(val,p));
}
void add2(int val,int p)
{
    if(val<=m2) {m2 = val; r2 = p;}
    z2.insert(make_pair(val,-p));
}
void rm1(int val,int p)
{
    z1.erase(z1.find(make_pair(val,p)));
    if(z1.begin()==z1.end()) {m1 = -inf; return;}
    set<pair<int,int> >::iterator it = z1.end();
    it--;
    m1 = it->first;
    r1 = it->second;
}
void rm2(int val,int p)
{
    z2.erase(z2.find(make_pair(val,-p)));
    if(z2.begin()==z2.end()) {m2 = inf; return;}
    m2 = z2.begin()->first;
    r2 = -z2.begin()->second;
}


int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",a+i);
    for(int i=0;i<n;i++)
        scanf("%d",b+i);
    int k = 0;
    long long res = 0;
    for(int i=0;i<n;i++)
    {

        add1(a[i],i);
        add2(b[i],i);
        k++;
        while(m1>m2)
        {
            rm1(a[i-k+1],i-k+1);
            rm2(b[i-k+1],i-k+1);
            k--;
        }
        if(m1==m2)
        {
            int r = min(r1,r2);
            res +=k - (i-r);
        }
    }
    cout <<res <<endl;
    return 0;
}
