#include "bits/stdc++.h"
using namespace std;
#define pb push_back
typedef long long ll;
#define fi first
#define se second
#define FF first
#define SS second
#define INF 2e18
#define mp make_pair
#define pii pair<int,int>
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define pd(x) printf("%d\n",x)
#define plld(x) printf("%lld\n",x)
#define endl '\n'
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define sz(s) (int)s.size()
#define y1 fdfbvfds
typedef long double f80;
#define all(x) x.begin(), x.end()

const int mod = 1e9 + 7;

ll pwr(ll a,ll b) {
    ll ans = 1;
    a %= mod;
    while(b) {
        if(b & 1) ans = ((ll)ans * a) % mod;
        a = ((ll)a * a) % mod;
        b >>= 1;
    }
    return ans;
}

const int N = 3e5 + 5;
bool vis[N];
vector<int> g[N];

int comp[N];
vector<int> v1, v2, v3;
vector<int> tot;
set<pii> s;

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int n, m;
    cin >> n >> m;
    fr(i, 1, m) {
        int u, v;
        cin >> u >> v;
        if(u > v) swap(u, v);
        s.insert({u, v});
        g[u].pb(v);
        g[v].pb(u);
    }
    fill(vis + 1, vis + n + 1, 0);
    for(int v : g[1]) {
        vis[v] = 1;
    }
    fr(i, 1, n) {
        if(!vis[i]) {
            v1.pb(i);
            comp[i] = 1;
        }
    }
    if(g[1].empty()) {
        cout << -1;
        return 0;
    }
    int uu = g[1][0];
    fill(vis + 1, vis + n + 1, 0);
    for(int v : g[uu]) {
        vis[v] = 1;
    }
    fr(i, 1, n) {
        if(!vis[i]){
            if(comp[i]) {
                cout << -1;
                return 0;
            }
            comp[i] = 2;
            v2.pb(i);
        }
        else if(!comp[i]){
            comp[i] = 3;
            v3.pb(i);
        }
    }
    if(sz(v1) * 1LL * sz(v2) + sz(v2) * 1LL * sz(v3) + sz(v3) * 1LL * sz(v1) != m) {
        cout << -1;
        return 0;
    }
    if(sz(v1) + sz(v2) + sz(v3) != n) {
        cout << -1;
        return 0;
    }
    for(int u : v1) {
        for(int v : v2) {
            int uu = u, vv = v;
            if(uu > vv) swap(uu, vv);
            if(!s.count({uu, vv})) {
                cout << -1;
                return 0;
            }
        }
    }
    for(int u : v2) {
        for(int v : v3) {
            int uu = u, vv = v;
            if(uu > vv) swap(uu, vv);
            if(!s.count({uu, vv})) {
                cout << -1;
                return 0;
            }
        }
    }
    for(int u : v3) {
        for(int v : v1) {
            int uu = u, vv = v;
            if(uu > vv) swap(uu, vv);
            if(!s.count({uu, vv})) {
                cout << -1;
                return 0;
            }
        }
    }
    if(v1.empty() || v2.empty() || v3.empty()) {
        cout << -1;
        return 0;
    }
    for(int x : v1) {
        tot.pb(x);
    }
    for(int x : v2) {
        tot.pb(x);
    }
    for(int x : v3) {
        tot.pb(x);
    }
    sort(all(tot));
    tot.resize(unique(all(tot)) - tot.begin());
    if(sz(tot) != n) {
        cout << -1;
        return 0;
    }
    fr(i, 1, n) {
        assert(comp[i] > 0);
        cout << comp[i] << " ";
    }
    return 0;
}