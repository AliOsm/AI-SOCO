#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int W = 100005, N = 300005;
vector<pair<int, int>> edges[W];
int d[N];

int main() {
    int n, m, u, v, w;
    cin.sync_with_stdio(false);
    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> u >> v >> w;
        edges[w].push_back(make_pair(u, v));
    }
    for (int w = 1; w < W; w++) {
        vector<pair<int, int>> updates;
        for (auto &&it : edges[w])
            updates.push_back(make_pair(it.second, d[it.first] + 1));
        for (auto &&it : updates)
            d[it.first] = max(d[it.first], it.second);
    }
    cout << *max_element(d+1, d+n+1) << endl;
    return 0;
}