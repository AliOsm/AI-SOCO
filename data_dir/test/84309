//gskhirtladze

#include <iostream>
#include <time.h>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>

#define fi first
#define se second
#define mk make_pair

using namespace std;

double p[200],X,Z,ans;
int n,i,j,k,f[200];

main()
 {
  cin>>n;
  for (i=1;i<=n;i++)
   {
    cin>>p[i];
    p[i]=1-p[i];
    ans=max(ans,1-p[i]);
   }
  sort(p+1,p+n+1);
  for (j=1;j<=n;j++)
   for (i=j+1;i<=n;i++)
    {
     f[i]=1;
     f[j]=1;
     X=p[i]*p[j];
     Z=(1-p[i])/p[i]+(1-p[j])/p[j];
     ans=max(ans,Z*X);
     for (k=n;k>=1;k--)
      if (!f[k])
       {
        X*=p[k];
        Z+=(1-p[k])/p[k];
        ans=max(ans,X*Z);
       }
     X=p[i]*p[j];
     Z=(1-p[i])/p[i]+(1-p[j])/p[j];
     ans=max(ans,Z*X);
     for (k=1;k<=n;k++)
      if (!f[k])
       {
        X*=p[k];
        Z+=(1-p[k])/p[k];
        ans=max(ans,X*Z);
       }
     X=p[i]*p[j];
     Z=(1-p[i])/p[i]+(1-p[j])/p[j];
     ans=max(ans,Z*X);
     for (k=n;k>=1;k--)
      if (!f[k])
       {
        if (X*p[k]*(Z+(1-p[k])/p[k]) >= X*Z)
         {
          X*=p[k];
          Z+=(1-p[k])/p[k];
         }
        ans=max(ans,X*Z);
       }
     X=p[i]*p[j];
     Z=(1-p[i])/p[i]+(1-p[j])/p[j];
     ans=max(ans,Z*X);
     for (k=1;k<=n;k++)
      if (!f[k])
       {
        if (X*p[k]*(Z+(1-p[k])/p[k]) >= X*Z)
         {
          X*=p[k];
          Z+=(1-p[k])/p[k];
         }
        ans=max(ans,X*Z);
       }
     f[i]=0;
     f[j]=0;
    }
  printf("%.12f\n",ans);
 }