#include <bits/stdc++.h>
using namespace std;
typedef pair<int,int> pii;
typedef long long ll;
typedef pair<ll,ll> pll;
#define pb push_back
#define dout if(debug) cerr <<"  $ "
#define fi first
#define se second
#define sz(x) (int)x.size()
#define x1 asdflasdfl
#define y1 ldfadz
typedef double dbl;
const int MAXN = 2e6+2000;
const int MX = 1e5+2000;

const int inf_int = 2e9+100;
const ll inf_ll = 1e18;
const dbl PI = 3.1415926535898;
bool debug = 0;
const int MOD = 1e9+7;
#define ass(x,y)  if(!(y))  { cerr << x <<endl; assert(false); }
#define left asfasl
#define next dsdfkl
const int MAX_BIT = 500;
int n;

ll dp[50][50][2];
ll fun(int i,int bit,bool any){
    if(bit<0)
        return 1;
    ll &res = dp[i][bit][any];
    if(res!=-1)
        return res;
    res = 0;
    if(i==0){
        if(n&(1<<bit) || any)
            res+=fun(1,bit-1,any);
        res+=fun(0,bit-1,any || (n&(1<<bit)));
        res%=MOD;
        return res;
    }
    if(any){
        res+=fun(i+1,bit-1,any); //new
        res+=1ll * fun(i,bit-1,any) * (1<<i) %MOD;
    } else{
        if(n&(1<<bit)){
           res+=fun(i+1,bit-1,0); //new
           res+=fun(i,bit-1,0) * (1<<(i-1))%MOD;
           res%=MOD;
           res+=fun(i,bit-1,1) * (1<<(i-1))%MOD;
        } else{
            res+=fun(i,bit-1,0) * (1<<(i-1))%MOD;
        }
    }
    res%=MOD;
    return res;
}
void solve(){
    cin >> n;
    memset(dp,-1,sizeof(dp));

    cout <<fun(0,30,0);
}
#define FILE "perfect-squares"
int main(){
    #ifdef zxc
        freopen("input.txt","r",stdin);
    #else
       // freopen(FILE".in","r",stdin);
       // freopen(FILE".out","w",stdout);

    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    solve();

}
