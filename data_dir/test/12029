#include <iostream>
#include <cmath>
#include <queue>
#include <vector>
#include <set>
#include <cstdio>
#include <algorithm>
using namespace std;

typedef vector<int> VI;
typedef vector<VI> VVI;

VVI adj;
int vis[100010];
int LVL[2];
int ST[100010];
int EN[100010];
int FT[100010];
int dfs(int u,int L = 0)
{
    if(vis[u])return 0;
    vis[u] = 1;
    bool flipThis = 0;
    int st = ST[u]^LVL[L%2];
    if(st != EN[u])
    {
        FT[u] = 1;
        flipThis = 1;
        LVL[L%2] ^= 1;
    }
    int ret = flipThis;
    for(int i = 0; i < adj[u].size(); ++i)
    {
        int v = adj[u][i];
        ret += dfs(v,L+1);
    }
    if(flipThis)
    {
        LVL[L%2] ^= 1;
    }
    return ret;
}

int main()
{
    int N;
    cin >> N;
    adj = VVI(N);
    for(int i = 0; i < N-1; ++i)
    {
        int u,v;cin >> u >> v;u--;v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for (int i = 0; i < N; ++i) {
        cin >> ST[i];
    }
    for (int i = 0; i < N; ++i) {
        cin >> EN[i];
    }
    cout << dfs(0) << endl;
    for (int i = 0; i < N; ++i) {
        if(FT[i])
            cout << i+1 << endl;
    }
    
}

