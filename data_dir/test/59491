/// However long the night,
///     The dawn will break
/// ICPC next year

#include<bits/stdc++.h>
using namespace std ;
const int N = 2e5+5 ;

int n ,u ,v ,a ,b ,c ,add ;
vector<int> adj[N] ;
int leave ,mx=-1 ;
bool vis[N] ;
void dfs(int p,int gp,int d){
    if(d>mx) mx = d ,leave = p ;
    for(int ch:adj[p]){
        if(ch == gp) continue ;
        dfs(ch,p,d+1);
    }
}
bool dfs2(int p,int gp){
    if(p==b) return vis[p] = 1;
    if(vis[p]) return 1;
    for(int ch:adj[p]){
        if(ch==gp) continue ;
        vis[p] |= dfs2(ch,p) ;
    }
    return vis[p] ;
}
void dfs3(int p,int gp,int d){
    if(d>add) add = d ,c = p ;
    for(int ch:adj[p]){
        if(ch==gp) continue ;
        if(vis[ch]) continue ;
        dfs3(ch,p,d+1);
    }
}
int main(){
    scanf("%d",&n);
    for(int i=1;i<n;++i){
        scanf("%d%d",&u,&v);
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs(1,1,0) ;
    a = leave ;
    mx = -1 ;
    dfs(leave,leave,0);
    b = leave ;

    dfs2(a,a) ;

    for(int i=1;i<=n;++i){
        if(!vis[i]) continue ;
        dfs3(i,i,0) ;
    }
    if(add==0){
        for(int i=1;i<=n;++i){
            if(i==a)continue;
            if(i==b) continue ;
            c = i ;
            break;
        }
    }
    cout << mx + add << endl ;
    cout << a << " " << b << " " << c;
    return 0;
}
