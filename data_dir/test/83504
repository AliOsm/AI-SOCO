#include <bits/stdc++.h>

#define mx 5004

using namespace std;


int wt[mx], ht[mx], w, h, n;
std::vector< pair < pair <int, int>, int > > v;
short int dp[mx][mx];

int rec(int i, int l){
	if(i>n) return 0;
	if(dp[i][l]!=-1) return dp[i][l];
	int ret  = rec(i+1, l);
	if( wt[i]>wt[l] && ht[i]>ht[l]){
		if(wt[i]>w && ht[i]>h){
			ret = max(ret, 1+rec(i+1, i));
		}
	}
	return dp[i][l] = ret;
}

void prinp(int i, int l, int a){
	if(i>n) return;
	if(dp[i+1][l]==a) {
		prinp(i+1, l, a);
		return;
	}
	if( wt[i]>wt[l] && ht[i]>ht[l]){
		if(wt[i]>w && ht[i]>h){
			if(dp[i][l]==a){
				cout << v[i-1].second << " ";
				prinp(i+1, i, a-1);
				return;
			}
		}
	}
	return;
}


int main(){
    //freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int i, j;
    while(cin >> n >> w >> h){
    	wt[0] = ht[0] = 0;
    	v.clear();
    	for(i=1;i<=n;i++){
    		cin >> wt[i] >> ht[i];
    		if( wt[i]>w && ht[i]>h){
				v.push_back(make_pair(make_pair(wt[i], ht[i]), i));	
			}
    	}
    	sort(v.begin(), v.end());
    	n = int (v.size());
    	for(i=1;i<=n;i++){
    		wt[i] = v[i-1].first.first;
    		ht[i] = v[i-1].first.second;
    	}
    	memset(dp, -1, sizeof dp);
    	int ans  = rec(1, 0);
    	cout << ans << endl;
    	prinp(1, 0, ans);
    	cout << endl;
    }
    return 0;
}