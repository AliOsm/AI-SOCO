#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int > pii;
typedef pair<ll, ll > pll;
typedef complex<double> point;

#define X real()
#define Y imag()
#define F first
#define S second
#define mk(x, y) make_pair((x), (y))
#define mt(x, y, z ,w) make_tuple((x), (y), (z),(w))
#define pb(x) push_back(x)
#define sz(x)((int)((x).size()))
#define all(x)	((x).begin()), ((x).end())
#define debug(x) dout << "[" #x "] = " << x << '\n'
#define IN "input.in"
#define OUT "output.out"

#define MAX 300005
#define MOD 1000000007
#define eps 1e-7

const ll OO = 0x0101010101010101;

class debug_t {
public:
    template<typename T>
    debug_t& operator << (const T& o) {
#ifdef Adel_SaadEddin_PC
        cout << o << flush;
        cerr << o << flush;
#endif
        return *this;
    }
    void end() {
        *this << "\nExecution Time = " << clock() * 1.0 / CLOCKS_PER_SEC << '\n';
        exit(0);
    }
} dout;

int dr[] = { 0,0,-1,1 };
int dc[] = { -1,1,0,0 };

ll pos[MAX];
vector<pii> ve;
int n;
ll on[MAX], off[MAX];

ll get_pos(ll x) {
    return lower_bound(pos, pos + n, x) - pos;
}

int main() {
#ifdef Adel_SaadEddin_PC
    freopen(IN, "r", stdin);
//    freopen(OUT, "w", stdout);
#endif // Adel_SaadEddin_PC
ios_base::sync_with_stdio(false);

    cin >> n;

    for(int i = 0; i < n; i++) {
        int x, y; cin >> x >> y;
        ve.push_back({x, y});
    }

    sort(ve.begin(), ve.end());

    for(int i = 0 ; i < n; i++)
        pos[i] = ve[i].first;

    off[0] = 1;
    for(ll i = 0; i < n; i++) {
        if(!i) continue;
        off[i] = 1 + on[i - 1];

        ll idx = get_pos(ve[i].first - ve[i].second);

        if(!idx) {
            on[i] = i;
            continue;
        }
        on[i] = on[idx - 1] + (i - idx);
    }

//    cout << "==============\n\n\n";
//    for(int i = 0; i < n; i++)
//        cout << on[i] << " " << off[i] << "\n";
//    return 0;

    ll mn = 1e15;
    for(ll i = n - 1; i >= 0; i--) {
        ll num = min(on[i], off[i]);
        ll pre = n - 1 - i;

//        cout << num << " " << pre << "\n";
        mn = min(mn, num + pre);
    }

    cout << mn << "\n";

    return 0;
}
