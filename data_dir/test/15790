
// ~/SolverToBe/Developers/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h> 
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>
#include <assert.h>
#include <complex>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

const int N = 2000005, M = 1005;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;
const double PI = acos(-1.0);

int n, d[10][10];
char s[N];

void init() {
	for (int i = 0; i <= 9; i++) 
		for (int j = 0; j <= 9; j++)
			d[i][j] = 1e9 + 10;
}

void floyed() {
	for (int k = 0; k <= 9; k++)
		for (int i = 0; i <= 9; i++)
			for (int j = 0; j <= 9; j++)
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	scanf("%s", s);
	n = strlen(s);
	for (int a = 0; a <= 9; a++) {
		for (int b = 0; b <= 9; b++) {
			init();
			for (int u = 0; u <= 9; u++) {
				d[u][(u + a) % 10] = 1;
				d[u][(u + b) % 10] = 1;
			}
			floyed();
			int ans = 0;
			for (int i = 1; i < n; i++) {
				ans += d[s[i - 1] - '0'][s[i] - '0'] - 1;
				if (ans >= 1e9) {
					ans = -1;
					break;
				}
			}
			printf("%d ", ans);
		}
		puts("");
	}
	return 0;
}