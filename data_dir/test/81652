#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 2e5 + 5;

int link[N], Size[N];
LL in[N];

int find(int x) {
	return x == link[x]? x : link[x] = find(link[x]);
}

bool unite(int a, int b) {
	a = find(a);
	b = find(b);

	if (a == b) return false;
	if (Size[a] < Size[b]) swap(a, b);
	Size[a] += Size[b];
	link[b] = a;
	return true;
}


int main() {
	ios::sync_with_stdio(false); cin.tie(nullptr);
	
	int n, m;
	cin >> n >> m;

	for (int i = 0; i < n; i++) cin >> in[i];

	vector< tuple<LL, int, int>> E;

	for (int i = 0; i < m; i++) {
		int u, v; LL w;
		cin >> u >> v >> w;
		u--; v--;
		E.push_back(make_tuple(w, u, v));
	}

	int z = min_element(in, in + n) - in;
	for (int i = 0; i < n; i++) E.push_back(make_tuple(in[i] + in[z], i, z));

	iota(link, link + n, 0);
	fill_n(Size, n, 1);
	
	sort(begin(E), end(E));

	LL res = 0;

	for (const auto &e : E) {
		int u, v; LL w;
		tie(w, u, v) = e;

		if (unite(u, v)) {
			res += w;
		}
	}

	cout << res << endl;
}