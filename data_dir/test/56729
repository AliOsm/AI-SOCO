#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

double pi = acos(-1), tree[400005];
ll v[100005], r[100005], h[100005];
map<ll,int> mapa;
int left(int u){return (u << 1);}
int right(int u){return (u << 1) + 1;}


void add(int u, int L, int R, int pos, double x){
    if(L == R) tree[u] = x;
    else{
        int mid = (L+R)/2;
        if(pos <= mid) add(left(u), L, mid, pos, x);
        else add(right(u), mid+1, R, pos, x);
        tree[u] = max(tree[left(u)], tree[right(u)]);
    }
}

double query(int u, int l, int r, int L, int R){
    if(l > R or r < L) return 0;
    if(l >= L and r <= R) return tree[u];
    int mid = (l + r) / 2;
    return max(query(left(u), l, mid, L, R),
               query(right(u), mid + 1, r, L, R));
}

int main(){
    int n; cin >> n;
    for(int i = 0; i < n; i++){
        cin >> r[i] >> h[i];
        v[i] = r[i]*r[i]*h[i];
        //cout << v[i] << endl;
        mapa[v[i]] = 1;
    }
    int pos = 1;
    for(auto& par : mapa)
        par.second = pos++;
    pos--;
    
    double maxi = 0;
    for(int i = n-1; i >= 0; i--){
        ll x = mapa[v[i]];
        double aux = query(1, 1, pos, x+1, pos);
        add(1, 1, pos, x, aux + v[i]*pi);
        maxi = max(maxi, aux + v[i]*pi);
    }
    printf("%.6f\n", maxi);
	
	return 0;
}
