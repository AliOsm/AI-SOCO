/* 20C */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+1;
vpii E[maxn];
int pre[maxn];
bool visit[maxn];
__int64 dis[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n, m;
	int u, v, w;
	__int64 w_;
	
	scanf("%d %d", &n, &m);
	while (m--) {
		scanf("%d %d %d", &u, &v, &w);
		E[u].pb(mp(v, w));
		E[v].pb(mp(u, w));
	}
	
	memset(visit, false, sizeof(visit));
	rep(i, 1, n+1)
		dis[i] = LLONG_MAX;
	pre[1] = 0;
	dis[1] = 0;
	set<pair<int, int> > Q;
	Q.insert(mp(0, 1));
	
	while (!Q.empty()) {
		u = Q.begin()->sec;
		// w = dis[u];
		Q.erase(Q.begin());
		rep(i, 0, SZ(E[u])) {
			v = E[u][i].fir;
			w_ = E[u][i].sec + dis[u];
			if (w_ < dis[v]) {
				pre[v] = u;
				Q.erase(mp(dis[v], v));
				dis[v] = w_;
				Q.insert(mp(dis[v], v));
			}
		}
	}
	
	if (dis[n] == LLONG_MAX) {
		puts("-1");
		return 0;
	}
	
	vi ans;
	v = n;
	while (v) {
		ans.pb(v);
		v = pre[v];
	}
	per(i, 0, SZ(ans)) {
		printf("%d ", ans[i]);
	}
	putchar('\n');
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
