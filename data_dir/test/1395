#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;

const int N = 2e5 + 11, mod = 1e9 + 7, mod2 = 998244353;
const int MAX = 3e5 + 11;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const double INF3 = 1e8 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-6;
const double PI = acos(-1.0);


#define int ll

template<typename T> using ordered_set = tree <T, null_type, less <T>, rb_tree_tag, tree_order_statistics_node_update>;
template<typename T1, typename T2> inline void chmin(T1 &a, T2 b) { if (a > b) a = b; }
template<typename T1, typename T2> inline void chmax(T1 &a, T2 b) { if (a < b) a = b; }


typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int n, a[N],z[N*4],cur;
pii t[N*4];
inline pii combine(pii a, pii b) {
    if (a.F<b.F) {
        return a;
    } else {
        if (a.F>b.F) {
            return b;
        } else {
            a.S=max(a.S,b.S);
            return a;
        }
    }
}
inline void build(int v, int l, int r) {
    if (l == r) {
        t[v].F=a[l];
        t[v].S=l;
        return;
    }
    build(v+v,l,md);
    build(v+v+1,md+1,r);
    t[v]=combine(t[v+v],t[v+v+1]);
}
inline void push(int v, int l, int r) {
    if (!z[v]) return;
    if (l!=r) {
        z[v+v]+=z[v];
        z[v+v+1]+=z[v];
    }
    t[v].F+=z[v];
    z[v]=0;
}
inline void upd(int v, int l, int r, int left, int right, int val) {
    push(v,l,r);
    if (left>r || right<l) return;
    if (left<= l and r<= right) {
        z[v]+=val;
        push(v,l,r);
        return;
    }
    push(v,l,r);
    upd(v+v,l,md,left,right,val);
    upd(v+v+1,md+1,r,left,right,val);
    push(v,l,r);
    t[v]=combine(t[v+v],t[v+v+1]);
}
inline pii get(int v, int l, int r, int left, int right) {
    push(v,l,r);
    if (left>r||right<l) return {INF2,INF2};
    if (left<=l and r<=right) return t[v];
    push(v,l,r);
    return combine(get(v+v,l,md,left,right),get(v+v+1,md+1,r,left,right));
}
main() {
    file("balance");
    ios;
    cin>>n;
    fo(i,1,n,1) cin>>a[i];
    build(1,1,n);
    fo(i,1,n,1) {
        int id=get(1,1,n,1,n).S;
        a[id]=++cur;
        if (id<n) upd(1,1,n,id+1,n,-cur);
        upd(1,1,n,id,id,INF2);
    }
    fo(i,1,n,1) cout<<a[i]<<' ';
    return 0;
}
/**
0 1 1 1 10
0 0 0 0 9
1 0 0 0 0

0 0 0 0 9
1 0 0 2 7
1 0 3 2 4

1 4 3 2 5
*/
