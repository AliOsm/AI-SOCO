//g++  5.4.0

#include<bits/stdc++.h>
using namespace std;

#define ff first
#define ss second
#define int long long
#define pb push_back
#define pii pair< int,int >
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0) ;

const int mod = 1e9+7;

int binpow(int a,int b)
{
    int res = 1;
    a %= mod;
    b %= (mod-1);
    
    while( b )
    {
        if( b&1 ) res = (res*a)%mod;
        a = (a*a)%mod;
        b >>= 1;
    }
    return res;
}

bool Active(int val,int pos)
{
    return ((val>>pos)&1)?1:0 ;
}
signed main()
{
    fast;
    int x , y;
    cin >> x >> y;
    if( y%x==0 )
    {
        int z = y/x;
        
        vector<int> unique_primes;
        
        for(int i=2 ; i*i <=z ; i++ )
        {
            if( z%i == 0 )
            {
                unique_primes.pb(i);
                while( z%i == 0 )
                    z/=i;
            }
        }
        if( z>1 )
            unique_primes.pb( z );
        z = y/x;
        int ans = 0;
        int n = (int)(unique_primes.size());
       
        for(int i=0 ; i<(1<<n) ; i++ )
        {
            int have = __builtin_popcount(i);
            
            int w = 1;
            for(int j=0 ; j<n ; j++ )
            {
                if( Active(i,j) )
                    w *= unique_primes[j];
            }
            
           int nz = z/w;
           int nval = binpow( 2, nz-1 );
            
            if( have&1 ) ans -= nval;
            else         ans += nval;
            
            ans += mod;
            ans %= mod;
        }
        cout << ans << '\n';
    }
    else
        cout << "0\n";
}



