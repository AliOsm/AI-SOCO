//Pham Huu Canh
//A. Sereja and Algorithm
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define MP make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "a.inp"
#define foo "a.out"
#define MOD 1000000007

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;
#define N 100005
char s[N];
int x[N], y[N], z[N];

void input()
{
    int i, len, l, r, nq;
    int xmin, xmax;
    
    scanf("%s", s+1);
    
    len = strlen(s+1);
    repi(i, 1, len){
        x[i] = x[i-1] + (s[i] == 'x');
        y[i] = y[i-1] + (s[i] == 'y');
        z[i] = z[i-1] + (s[i] == 'z');
    }
    
    scanf("%d", &nq);
    while (nq--){
        scanf("%d %d", &l, &r);
        
        xmin = xmax = x[r] - x[l-1];
        xmax = timmax(xmax, timmax(y[r] - y[l-1], z[r] - z[l-1]));
        xmin = timmin(xmin, timmin(y[r] - y[l-1], z[r] - z[l-1]));
        
        if (r - l + 1 < 3 || xmax - xmin <= 1)
            printf("YES\n");
        else
            printf("NO\n");
    }
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}

