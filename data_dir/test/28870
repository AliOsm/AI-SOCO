#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>
#include <chrono>

using namespace std;
using ll = long long;
using ull = unsigned long long;
const int oo = numeric_limits<int>::max() / 2;
mt19937 rnd(std::chrono::steady_clock::now().time_since_epoch().count());

ll n, m;

inline long cnt(const int rem) {
  if (rem == 0) {
    return n / m;
  }
  ll k = n / m;
  ll N = k * m;
  if (n - N >= rem) {
    return k + 1;
  }
  return k;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
  cin >> n >> m;
  ll ret = 0;
  vector<int> rem1, rem2;
  for(int i = 0; i < m; ++i) {
    ll s1 = 0, s2 = 0;
    for(int j = 0; j < m; ++j) {
      if ((j * j) % m == i) {
        s1 += cnt(j);
      }
    }
    for(int j = 0; j < m; ++j) {
      if ((j * j) % m == (m - i) % m) {
        s2 += cnt(j);
      }
    }
    ret += s1 * s2;
  }
  cout << ret << endl;
	return 0;
}
