#include<bits/stdc++.h>
using namespace std;
#define int long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
int const M=2e5+10;
int ba[M],x[M],cnt=0,mo[M],n,hlp[M];
bool mark[M];
map<int,int>has;
vector<int>st;
vector<int>adj[M],adj2[M];
void dfs(int v)
{
	mark[v]=1;
	for(int i=0;i<adj[v].size();i++)
	{
		int u=adj[v][i];
		if(!mark[u])dfs(u);
	}
	st.pb(v);
}
void dfsb(int v)
{
	mo[v]=cnt;
	for(int i=0;i<adj2[v].size();i++)
	{
		int u=adj2[v][i];
		if(!mo[u])dfsb(u);
	}
}
main()
{	
	int a,b;
	cin>>n>>a>>b;
	for(int i=1;i<=n;i++)
	{
		cin>>x[i];
		has[x[i]]=i;
	}
	for(int i=1;i<=n;i++)
	{
		if(!has[a-x[i]])adj[i].pb(i+n),adj2[i+n].pb(i);
		else 
		{
			adj[i].pb(has[a-x[i]]);
			adj2[has[a-x[i]]].pb(i);
		}
		if(!has[b-x[i]])adj[i+n].pb(i),hlp[i]=1,adj2[i].pb(i+n);
		else adj[n+i].pb(n+has[b-x[i]]),adj2[n+has[b-x[i]]].pb(n+i);
		if(has[a-x[i]] && has[b-x[i]])
		{
			adj[has[a-x[i]]+n].pb(n+has[b-x[i]]);
			adj[has[b-x[i]]].pb(has[a-x[i]]);
			adj[n+has[b-x[i]]].pb(has[a-x[i]]+n);
			adj[has[a-x[i]]].pb(has[b-x[i]]);
			adj2[n+has[b-x[i]]].pb(has[a-x[i]]+n);
			adj2[has[a-x[i]]].pb(has[b-x[i]]);
			adj[has[a-x[i]]+n].pb(n+has[b-x[i]]);
			adj[has[b-x[i]]].pb(has[a-x[i]]);
		}
	}
	for(int i=1;i<=2*n;i++)
	{
		if(!mark[i])dfs(i);
	}
	reverse(st.begin(),st.end());
	for(int i=0;i<st.size();i++)
	{
		if(!mo[st[i]])
			++cnt,dfsb(st[i]);
	}
	for(int i=1;i<=n;i++)
	{
		if(mo[i]==mo[i+n])return cout<<"NO",0;
	}
	cout<<"YES"<<endl;
	for(int i=1;i<=n;i++)
	{
		if(mo[i]<mo[i+n])cout<<1<<" ";
		else cout<<0<<" ";
	}
}
