#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
using namespace std;
#define ll long long
#define MOD 998244353
ll power(ll a,ll b, ll m=MOD)
{
    ll res=1;
    while(b>0)
    {
        if(b&1)
            res=(res*a)%m;
        a=(a*a)%m;
        b>>=1;
    }
    return res;
}
ll inverse(ll a,ll m=MOD)
{
    return power(a,m-2,m);
}
#define INFl 1e18
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define vvl vector<vl>
#define ii pair<int,int>
#define pll pair<ll,ll>
#define vii vector<ii>
#define F first
#define S second
#define forl(i,n) for(int i=0;i<n;i++)
#define fore(i,n) for(int i=1;i<=n;i++)
#define rforl(i,n)  for(int i=n-1;i>=0;i--)
#define rfore(i,n)  for(int i=n;i>=1;i--)
#define INF 1100000009
#define gcd(a,b) __gcd(a,b)
#define all(x)  x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define print(x)    for(auto it=x.begin();it!=x.end();it++) cout<<*it<<' '; cout<<endl;
#define printii(x)  for(auto it=x.begin();it!=x.end();it++) cout<<it->F<<' '<<it->S<<endl;  
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
const int MAX=200005;
int bit[MAX];
int len,l,r,rev;
void add(int x,int val)
{
    x++;
    for(;x<MAX;x+=x&-x)
        bit[x]+=val;
}
int query(int x)
{
    x++;
    int sum=0;
    for(;x>0;x-=x&-x)
        sum+=bit[x];
    return sum;
}
int query(int l,int r)
{
    return query(r)-query(l-1);
}
int find(int x)
{
    return query(x,x);
}
int main()
{
    fastio;
    int n,q;
    cin>>n>>q;
    forl(i,n)   add(i,1);
    len=n,l=0,r=n-1;
    int rev=0;
    while(q--)
    {
        int op;
        cin>>op;
        if(op==1)
        {
            int p;
            cin>>p;
            if(p<=len/2)
            {
                if(!rev)
                {
                    for(int i=l,j=0;j<p;j++,i++)
                    {
                        int w=find(i);
                        add(i,-w);
                        add(l+2*p-1-j,w);
                    }
                    len-=p;
                    l+=p;
                }
                else
                {
                    for(int i=r,j=0;j<p;j++,i--)
                    {
                        int w=find(i);
                        add(i,-w);
                        add(r-2*p+j+1,w);
                    }
                    len-=p;
                    r-=p;
                }
            }
            else
            {
                p=len-p;
                if(!rev)
                {
                    for(int i=r,j=0;j<p;j++,i--)
                    {
                        int w=find(i);
                        add(i,-w);
                        add(r-2*p+j+1,w);
                    }
                    len-=p;
                    r-=p;
                    rev=1-rev;
                }
                else
                {
                    for(int i=l,j=0;j<p;j++,i++)
                    {
                        int w=find(i);
                        add(i,-w);
                        add(l+2*p-1-j,w);
                    }
                    len-=p;
                    l+=p;
                    rev=1-rev;
                }
            }
        }
        else
        {
            int L,R;
            cin>>L>>R;
            if(!rev)
            {
                cout<<query(l+L,l+R-1)<<endl;
            }
            else
            {
                cout<<query(r-R+1,r-L)<<endl;
            }
        }
    }
}