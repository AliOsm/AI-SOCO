//Link : https://codeforces.com/problemset/problem/1098/C

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define N 100005

char s[N];

int prefix[2][2][N];
int prefixUnknown[N];
pair<int,int> dp[N];

void solve() {
  int n;scanf("%d ", &n);
  scanf(" %s ", s+1);
  for(int i=1;i<=n;++i) {
    prefixUnknown[i] = prefixUnknown[i-1] + (s[i]=='?' ? 1 : 0);
  }
  for(int parity=0;parity<2;++parity) {
    for(int ch = 0;ch<2;++ch) {
      char c = char('a'+ch);
      for(int i=1;i<=n;++i) {
        prefix[parity][ch][i] = prefix[parity][ch][i-1];
        if( (i&1) == parity && (s[i] == c || s[i]=='?') ) {
          ++prefix[parity][ch][i];
        }
      }
    }
  }
  int m;
  scanf("%d ", &m);
  for(int i=1;i<=n;++i) {
    dp[i] = dp[i-1];
    if(i-m>=0) {
      pair<int,int> prev = dp[i-m];
      int add = prefixUnknown[i] - prefixUnknown[i-m];
      int st = i-m+1;
      int parity = st&1;
      if(prefix[parity][0][i] - prefix[parity][0][i-m] == (m+1)/2 &&
         prefix[parity^1][1][i] - prefix[parity^1][1][i-m] == m/2) {
           ++prev.first;
           prev.second -= add;
           dp[i] = max(dp[i],prev);
         }
    }
  }
  printf("%d\n", -dp[n].second);
}

int main() {
    //freopen("input.txt","r",stdin);
    solve();
    return 0;
}
