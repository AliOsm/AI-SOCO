#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define x first
#define y second

const int maxn = 1005;
int n;
map<pair<int,int>,int> cnt;

ll ch2(ll x) {
    return x*(x-1)/2;
}

const int eps = 1e-9;
struct Line
{
    pair<int,int> m;
    double b;
    Line(int x1, int y1, int x2, int y2) {
        int dx = x1 - x2;
        int dy = y1 - y2;
        if (dx == 0) {
            m = {1,0};
            b = x1;
        }
        else {
            if (dx < 0) {
                dx *= -1;
                dy *= -1;
            }
            int gc = __gcd(dx,dy);
            dx /= gc;
            dy /= gc;
            m = {dy,dx};
            b = y1-(double)(dy)/dx*x1;
        }
    }

    bool operator<(const Line& rhs) const {
        if (m != rhs.m) return m < rhs.m;
        return b + eps < rhs.b;
    }
};

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    int n; cin >> n;
    vector<pair<int,int>> p(n);
    for (int i = 0; i < n; i++) {
        cin >> p[i].x >> p[i].y;
    }
    set<Line> lines;
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            lines.insert(Line(p[i].x,p[i].y,p[j].x,p[j].y));    
        }
    }
    for (auto l: lines) {
        //cout << l.m.first << "/" << l.m.second << ": " << l.b << '\n';
        cnt[l.m]++;
    }
    ll ans = ch2(lines.size());
    //cout << ans << '\n';
    for (auto p: cnt) {
        //cout << p.second << '\n';
        ans -= ch2(p.second);
    }
    cout << ans << '\n';

    return 0;
}

