# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = 2 * 1000 * 1000 * 1000;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
	freopen("filename.in", "r", stdin);
	freopen("filename.out", "w", stdout);
}

ll b1, q, l, x, ans = 0;
map <ll, int> M;
int m;

int main() {
	//file_put();

	scanf("%I64d%I64d%I64d%I64d", &b1, &q, &l, &m);
	for (int i = 1; i <= m; i++) {
		scanf("%I64d", &x);
		M[x]++;
	}
	if (abs(b1) > l) {
		printf("0\n");
		return 0;
	}
	if (b1 == 0) {
		if (M[0] == 0) printf("inf\n");
		if (M[0] > 0) printf("0\n");
		return 0;
	}
	if (q == 0) {
		if (M[0] == 0) {
			printf("inf\n");
			return 0;
		}
		if (M[0] > 0) {
			if (M[b1]>0) printf("0\n");
			if (M[b1] == 0 && abs(b1) <= l) printf("1\n");
			if (M[b1] == 0 && abs(b1) > l) printf("0\n");
		}
		return 0;
	}
	if (q == 1) {
		if (M[b1] == 0 && abs(b1) <= l) printf("inf\n"); else
			printf("0\n");
		return 0;
	}
	if (q == -1) {
		if (abs(b1) > l) {
			printf("0\n");
			return 0;
		}
		int k = 2;
		k -= (M[b1] > 0) + (M[-b1] > 0);
		if (!k) {
			printf("0\n");
			return 0;
		}
		printf("inf\n");
		return 0;
	}
	ll k = b1, k1 = 0;
	for (;;k*=q) {
		if (k1 && k / q != k1) break;
		if (abs(k) > l) break;
		if (M[k] == 0) ans++;
		k1 = k;
	}
	printf("%I64d\n", ans);

	return 0;
}
