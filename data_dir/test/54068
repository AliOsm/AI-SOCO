#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <bitset>
#include <string>
using namespace std;

#define rep(i, n) f(i, 0, n - 1)
#define f(i, a, b) fd(i, a, b, 1)
#define fd(i, a, b, d) for(int i = (a); i <= (int)(b); i += (d))
#define uint64 unsigned int64
#define int64 long long

#ifndef ONLINE_JUDGE
#include <time.h>
clock_t _time;
void startProfile()
{
  _time = clock();
  printf("Begin profiling..\n...\n");
}
void stopProfile()
{
  printf("\n...\nEnd profiling. Time: %f sec.\n", (double)(clock() - _time) / CLOCKS_PER_SEC);
}
#endif

int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  startProfile();
#endif

  iostream::sync_with_stdio(false);

  int64 n, m, k;
  cin >> n >> m >> k;

  vector<int64> a(n);
  rep(i, n)
    cin >> a[i];

  vector<int64> l(m), r(m), d(m);
  rep(i, m)
    cin >> l[i] >> r[i] >> d[i];

  vector<int64> p(m + 1, 0);
  rep(i, k)
  {
    int64 x, y;
    cin >> x >> y;
    p[x - 1]++;
    p[y]--;
  }

  f(i, 1, m - 1)
    p[i] += p[i - 1];

  vector<int64> dd(n + 1, 0);
  rep(i, m)
  {
    dd[l[i] - 1] += p[i] * d[i];
    dd[r[i]] -= p[i] * d[i];
  }

  f(i, 1, n - 1)
    dd[i] += dd[i - 1];

  rep(i, n)
    cout << a[i] + dd[i] << ' ';

#ifndef ONLINE_JUDGE
  stopProfile();
#endif
  return 0;
}