#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <time.h>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <queue>
using namespace std;
set <int> banx,bany;
int x[10],y[10],n;
void ck(int p,int s,int id)
{
    if (s&1)
    {
        if (s&2) x[id]=1;
        else x[id]=n;

        if (s&4) y[id]=p;
        else y[id]=n+1-p;
    }
    else
    {
        if (s&2) x[id]=p;
        else x[id]=n+1-p;

        if (s&4) y[id]=1;
        else y[id]=n;
    }
}
bool ok(int p,int i,int j)
{
    ck(p,i,0);
    ck(p,j,1);

    for (int ii=0;ii<2;ii++)
    {
        if (x[ii]==1||x[ii]==n)
        {
            if (bany.find(y[ii])!=bany.end()) return false;
        }
        else
        {
            if (banx.find(x[ii])!=banx.end()) return false;
        }
    }

    if (i==j) return true;

    if (x[0]==x[1])
    {
        if (x[0]>1&&x[0]<n) return false;
    }
    if (y[0]==y[1])
    {
        if (y[0]>1&&y[0]<n) return false;
    }

    if (x[0]==y[1]&&y[0]==x[1]) return false;
    if (x[0]==n+1-y[1]&&y[0]==n+1-x[1]) return false;
    return true;
}
int main()
{
    int m;
    scanf("%d%d",&n,&m);
    for (int i=0;i<m;i++)
    {
        int xx,yy;
        scanf("%d%d",&xx,&yy);
        banx.insert(xx);
        bany.insert(yy);
    }
    int tot=0;
    for (int ii=2;ii<=n+1-ii;ii++)
    {
        int anss=0;
        for (int i=0;i<8;i++)
            for (int j=i+1;j<8;j++)
                for (int k=j+1;k<8;k++)
                    for (int l=k+1;l<8;l++)
                    {
                        if (ok(ii,i,i)) anss=max(anss,1);
                        if (ok(ii,i,j)) anss=max(anss,2);
                        if (ok(ii,i,j)&&ok(ii,i,k)&&ok(ii,j,k)) anss=max(anss,3);
                        if (ok(ii,i,j)&&ok(ii,i,k)&&ok(ii,i,l)&&ok(ii,j,k)&&ok(ii,j,l)&&ok(ii,k,l)) anss=max(anss,4);
                    }
        tot+=anss;
    }
    printf("%d\n",tot);
    return 0;
}
