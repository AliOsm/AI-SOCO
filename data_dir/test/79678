#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl

const int maxn = 1e6 + 5;


ll ans;
int n, x;
int a[maxn];
vector<int> v[maxn];
int prefix_max[maxn];

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

  cin>>n>>x;
  for (int i=0; i<n; i++) {
    cin>>a[i];
    v[a[i]].push_back(i);
    prefix_max[i] = a[i];
    if (i) prefix_max[i] = max(prefix_max[i], prefix_max[i-1]);
  }


  int last = n;
  int hi = x;
  for (int i=x; i>=1; i--) {
    if (v[i].empty()) {
      hi = i;
      continue;
    }
    if (v[i].back() < last) {
      last = v[i].front();
      hi = i;
    } else {
      break;
    }
  }


  last = -1;

  for (int l=1; l<=x; l++) {
    int r = max(l, // if arr is sorted, p could be less than l
		hi-1); // hi-1 must be deleted
    if (last != -1) {
      r = max(r, prefix_max[last]); // handles cases like 1 3 3 2 4 4. at 2 we must delete 3, despite 3 being sorted
    }

    ans += x-r+1;

    if (!v[l].empty()) {
      if (v[l].front() > last) {
	last = v[l].back();
      } else {
	break;
      }
    }
  }


  cout<<ans<<endl;

  return 0;
}
// don't forget to read in the input :^)
