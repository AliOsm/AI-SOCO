#include <bits/stdc++.h>
using namespace std;


const int N = 55, M = 20000 + 7;

int a[N][M], dp[N][M], pmx[N][M], smx[N][M];

int main() {
    int n, m, k; cin >> n >> m >> k;
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= m; j++) {
            cin >> a[i][j];
            a[i][j] += a[i][j - 1];
        }
    }
    for(int i = n; i >= 1; i--) {
        for(int j = 1; j + k - 1 <= m; j++) {
            int x = a[i][j + k - 1] - a[i][j - 1] + a[i + 1][j + k - 1] - a[i + 1][j - 1];
            for(int l = max(1, j - k + 1); l <= j + k - 1; l++) {
                int L = max(l, j), R = min(j + k - 1, l + k - 1);
                dp[i][j] = max(dp[i][j], x + dp[i + 1][l] - a[i + 1][R] + a[i + 1][L - 1]);
            }
            if(j >= k)
            dp[i][j] = max(dp[i][j], x + pmx[i + 1][j - k]);
            dp[i][j] = max(dp[i][j], x + smx[i + 1][j + k]);
        }
        for(int j = 1; j <= m; j++) pmx[i][j] = max(pmx[i][j - 1], dp[i][j]);
        for(int j = m; j >= 1; j--) smx[i][j] = max(smx[i][j + 1], dp[i][j]);
    }



    cout << smx[1][1] << endl;
}
