#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#pragma comment(linker, "/STACK:16777216")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pd;

template<typename T>
using kawaii_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define all(x) (x).begin(), (x).end()
//#define int ll

void FAST_IO() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifdef _offline
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    #endif // _offline
}

int a = 0, b = 0;

void solve_smaller(int from);

void solve_bigger(int from) {
    for (int i = from; i >= 0; --i) {
        cout << "? " << (a ^ (1 << i)) << ' ' << (b ^ (1 << i)) << endl;
        int y;
        cin >> y;
        if (y == 1 || y == 0) {
            cout << "? " << (a ^ (1 << i)) << ' ' << b << endl;
            cin >> y;
            if (y == 1) {
                // do nothing
            }
            else if (y == -1) {
                a ^= (1 << i);
                b ^= (1 << i);
            }
            else {
                assert(false);
            }
        }
        else {
            a ^= (1 << i);
            cout << "? " << a << ' ' << b << endl;
            int x;
            cin >> x;
            if (x == 1 || x == 0) {
                // do nothing
            }
            else {
                solve_smaller(i - 1);
                return;
            }
        }
    }
}

void solve_smaller(int from) {
    for (int i = from; i >= 0; --i) {
        cout << "? " << (a ^ (1 << i)) << ' ' << (b ^ (1 << i)) << endl;
        int y;
        cin >> y;
        if (y == 1) {
            b ^= (1 << i);
            cout << "? " << a << ' ' << b << endl;
            int x;
            cin >> x;
            if (x == -1 || x == 0) {
                // do nothing
            }
            else {
                solve_bigger(i - 1);
                return;
            }
        }
        else {
            cout << "? " << (a ^ (1 << i)) << ' ' << b << endl;
            cin >> y;
            if (y == 1) {
                // do nothing
            }
            else if (y == -1) {
                a ^= (1 << i);
                b ^= (1 << i);
            }
            else {
                assert(false);
            }
        }
    }
}

signed main() {
    FAST_IO();
    cout << "? " << 0 << ' ' << 0 << endl;
    int x;
    cin >> x;
    if (x == 1 || x == 0) {
        solve_bigger(29);
    }
    else {
        solve_smaller(29);
    }
    cout << "! " << a << ' ' << b << endl;
    return 0;
}
