#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef pair<int, int> pi;
typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;


int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
  int n;
  cin >> n;
  vector<int> ord(n);
  for (int i = 0; i<  n; i++) {
    int x;
    cin >> x;
    x--;
    ord[x] = i;
  }
  
  ordered_set prev;
  int fine = 0;
  for (int i = 0; i < n; i++) {
    int x;
    cin >> x;
    x--;
    prev.insert(ord[x]);
    if (prev.order_of_key(ord[x]) < ord[x]) fine++;
  }
  cout << fine << endl;
}

