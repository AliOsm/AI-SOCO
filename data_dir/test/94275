#include <bits/stdc++.h>

using namespace std;

const int N = 1e3 + 100;
const int MOD = 1e9 + 7;

int addmod(int a, int b) {
    int c = a + b;
    if (c >= MOD) c -= MOD;
    return c;
}

int binom[N][N];
int dp[N];

int calc(string & s, const int ones) {
    int ans = 0;
    int sz = (int)s.size();
    
    for (int i = 0, left = sz-1, toplace = ones; i < sz and toplace > 0; ++i, --left) {
        if (s[i] == '1' and toplace <= left) {
            ans = addmod(ans, binom[left][toplace]);
            --toplace;
        }
    }
    
    int sones = count(s.begin(), s.end(), '1');
    if (sones >= ones) ans = addmod(ans, 1);
    
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(false);

    binom[0][0] = 1;
    for (int n = 1; n < N; ++n) {
        binom[n][0] = 1;
        for (int k = 1; k <= n; ++k) binom[n][k] = addmod(binom[n-1][k-1], binom[n-1][k]);
    }
    
    dp[1] = 1;
    for (int i = 2; i < N; ++i) dp[i] = 1 + dp[__builtin_popcount(i)];
    
    string n; int k;
    cin >> n >> k;
    
    if (k == 0) {
        cout << "1\n";
        return 0;
    }
    
    int ans = 0;
    for (int i = 1; i <= (int)n.size(); ++i) {
        if (dp[i] != k) continue;
        
        ans = addmod(ans, calc(n, i));
    }
    if (k == 1) ans = addmod(ans, MOD-1);
    
    cout << ans << '\n';
}