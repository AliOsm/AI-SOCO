#include <bits/stdc++.h>

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define foreach(it, v) for(auto it=(v).begin(); it != (v).end(); ++it)

#define _ ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define __ freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);

#define tr(...) cout<<__FUNCTION__<<' '<<__LINE__<<" = ";trace(#__VA_ARGS__, __VA_ARGS__)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

template<typename S, typename T> 
ostream& operator<<(ostream& out,pair<S,T> const& p){out<<'('<<p.fi<<", "<<p.se<<')';return out;}

template<typename T>
ostream& operator<<(ostream& out,vector<T> const& v){
int l=v.size();for(int i=0;i<l-1;i++)out<<v[i]<<' ';if(l>0)out<<v[l-1];return out;}

template<typename T>
void trace(const char* name, T&& arg1){cout<<name<<" : "<<arg1<<endl;}

template<typename T, typename... Args>
void trace(const char* names, T&& arg1, Args&&... args){
const char* comma = strchr(names + 1, ',');cout.write(names, comma-names)<<" : "<<arg1<<" | ";trace(comma+1,args...);}

const int N = 5050;

int v1[N];
int v2[N];

int m[N][N];

vector<int> invert(vector<int> &v){
  int n = v.size();
  vector<int> p(n, 0);

  for(int i = 0; i < n; i++){
    p[v[i]] = i;
  }

  return p;
}

int main(){ _
  int n;
  cin >> n;
  
  for(int i = 0; i < n; i++){
    cout << "?" << ' ' << 0 << ' ' << i << endl;
    fflush(stdout);
    
    cin >> v1[i];
  }
  
  for(int i = 0; i < n; i++){
    cout << "?" << ' ' << i << ' ' << 0 << endl;
    fflush(stdout);
    
    cin >> v2[i];
  }
  
  for(int i = 0; i < n; i++){
    for(int j = 0; j < n; j++){
      m[i][j] = v1[0] ^ v1[j] ^ v2[i];
    }
  }
  
  int ans_cnt = 0;
  vector<int> perm;
  
  for(int i = 0; i < n; i++){
    vector<int> b(n, 0);
    for(int j = 0; j < n; j++){
      b[j] = m[i][j];
    }
    
    vector<int> cnt(n, 0);
    bool flag = true;
    for(int j = 0; j < n; j++){
      if(b[j] >= n or cnt[b[j]]){
        flag = false;
        break;
      }
      cnt[b[j]]++;
    }
    
    if(!flag) continue;
    vector<int> p = invert(b);
    
    int pos = -1;
    for(int j = 0; j < n; j++){
      if(b[j] == 0) pos = j;
    }
    
    for(int j = 0; j < n; j++){
      if(m[j][pos] != p[j]){
        flag = false;
        break;
      }
    }
    
    if(flag){
      ans_cnt++;
      perm = p;
    }
  }

  cout << "!" << endl;
  cout << ans_cnt << endl;
  for(int x : perm) cout << x << ' ';
  cout << endl;
  
  return 0;
}
