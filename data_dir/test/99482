# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define pp tuple < int , int , int >
map < pp , pair < int  , int > > h;
int a[55],b[55],c[55];
int main(void)
{
    int n;
    fi>>n;
    for (int i = 1;i <= n;++i)
        fi>>a[i]>>b[i]>>c[i];
    int mx = 1;
    int ans = -2e9;
    pair < int , int > coord;
    for (int i = 1;i <= n/2;++i)
        mx *= 3;
    for (int mask = 0;mask < mx;++mask)
    {
        int sx = 0,sy = 0,sz = 0;
        int cnt = mask;
        for (int i = 1;i <= n/2;++i)
        {
            if (cnt % 3 == 0)
                sx += a[i],sy += b[i];
            else
            if (cnt % 3 == 1)
                sx += a[i],sz += c[i];
            else
                sy += b[i],sz += c[i];
            cnt /= 3;
        }
        pp r = make_tuple(sx - sy,sy - sz,sz - sx);
        if (!h.count(r) || h[r].x < sx)
            h[r] = {sx,mask};
    }
    if (n&1) mx *= 3;
    for (int mask = 0;mask < mx;++mask)
    {
        int sx = 0,sy = 0,sz = 0;
        int cnt = mask;
        for (int i = n/2+1;i <= n;++i)
        {
            if (cnt % 3 == 0)
                sx += a[i],sy += b[i];
            else
            if (cnt % 3 == 1)
                sx += a[i],sz += c[i];
            else
                sy += b[i],sz += c[i];
            cnt /= 3;
        }
        pp r = make_tuple(sy - sx,sz - sy,sx - sz);
        if (h.count(r))
        {
            auto it = h[r];
            if (ans < it.x + sx)
                ans = it.x + sx,coord = {it.y,mask};
        }
    }
    if (ans == -2e9) return puts("Impossible") & 0;
    vector < string > us;
    for (int i = 1;i <= n/2;++i)
    {
        if (coord.x % 3 == 0)
            us.push_back("LM");
        else
        if (coord.x % 3 == 1)
            us.push_back("LW");
        else us.push_back("MW");
        coord.x /= 3;
    }
    for (int i = n/2+1;i <= n;++i)
    {
        if (coord.y % 3 == 0)
            us.push_back("LM");
        else
        if (coord.y % 3 == 1)
            us.push_back("LW");
        else us.push_back("MW");
        coord.y /= 3;
    }
    for (auto it : us)
        cout << it << '\n';
    return 0;
}
