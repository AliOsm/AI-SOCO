#include <bits/stdc++.h>
using namespace std;
#define MAX 400005
#define ll long long int
ll Ans[MAX];
ll x[MAX];
ll y[MAX];
ll Cumx[MAX];
ll Cumy[MAX];

struct info{
    ll x,y,indx;
    info(ll _x,ll _y,ll _indx){x=_x; y=_y; indx=_indx;}
    bool operator < (const info& other) const{
        if(x-y < other.x-other.y) return true;
        else if(x - y == other.x - other.y) return indx < other.indx;
        return false;
    }
};
vector< info > v;

int main(){
    int n,m;
    scanf("%d %d",&n,&m);

    for(int i=1;i<=n;i++) scanf("%lld %lld",&x[i],&y[i]);
    for(int i=1;i<=n;i++) v.push_back(info(x[i],y[i],i));

    sort(v.begin(),v.end());
    for(int i=1;i<=n;i++) Cumx[i]=Cumx[i-1]+v[i-1].x;
    for(int i=1;i<=n;i++) Cumy[i]=Cumy[i-1]+v[i-1].y;

    for(int i=1;i<=n;i++){
        auto pos = lower_bound(v.begin(),v.end(), info(x[i],y[i],i) ) - v.begin();
        Ans[i] += pos * y[i] + (n - 1 - pos) * x[i];
        Ans[i] += Cumx[pos] + (Cumy[n] - Cumy[pos+1]);
    }

    for(int i=1;i<=m;i++){
        int u,v;
        scanf("%d %d",&u,&v);

        ll val1 = x[u] + y[v];
        ll val2 = x[v] + y[u];
        ll val = min(val1,val2);

        Ans[u] -= val, Ans[v] -= val;
    }

    for(int i=1;i<=n;i++) printf("%lld ",Ans[i]);
}
