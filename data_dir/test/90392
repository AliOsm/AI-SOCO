// Why am I so dumb? :c
// chrono::system_clock::now().time_since_epoch().count()
#include<bits/stdc++.h>

#define pb push_back
#define mp make_pair

#define all(x) (x).begin(), (x).end()

#define fi first
#define se second

using namespace std;

typedef long long ll;   

const int MAXN = (int)1e5 + 5;

int cnt[26][MAXN];

string arr[MAXN];

int cur[26];

int ext[26];

int n, ans;

void calc(int p) {
    for (int l = 0, r; l < arr[p].size(); l = r) {
        r = l;

        while (r < arr[p].size() && arr[p][l] == arr[p][r]) {
            ++r;
        }

        cnt[arr[p][l] - 'a'][p] = max(cnt[arr[p][l] - 'a'][p], r - l);
    }            
}

void solve() {
    cin >> n;

    for (int i = 1; i <= n; ++i) {
        cin >> arr[i];
        calc(i);
    }

    for (int i = 0; i < 26; ++i) {
        cur[i] = cnt[i][1];
    }

    for (int i = 2; i <= n; ++i) {
        for (int j = 0; j < 26; ++j) {
            ext[j] = 0;
        }
        
        bool allEqual = 1;
        int sz = arr[i].size();

        for (int j = 1; j < sz; ++j) {
            allEqual &= (arr[i][j] == arr[i][j - 1]);
        }        

        if (allEqual) {
            char c = arr[i][0];
            ext[c - 'a'] = cur[c - 'a'] + sz * (cur[c - 'a'] + 1ll);
        }
        else {
            int pref = 1, suff = 1;

            while (arr[i][pref] == arr[i][0]) {
                ++pref;
            }

            while (arr[i][sz - suff - 1] == arr[i][sz - 1]) {
                ++suff;
            }

            ext[arr[i][0] - 'a'] = (cur[arr[i][0] - 'a'] > 0);
            ext[arr[i][sz - 1] - 'a'] = (cur[arr[i][sz - 1] - 'a'] > 0);

            ext[arr[i][0] - 'a'] += pref;
            ext[arr[i][sz - 1] - 'a'] += suff;  
        }

        for (int k = 0; k < 26; ++k) {
            if (ext[k]) {
                cur[k] = max(ext[k], cnt[k][i]);
            }
            else {
                cur[k] = max((cur[k] > 0 ? 1 : 0), cnt[k][i]);
            }
        }

        /*
        for (int k = 0; k < 26; ++k) {
            printf("%c - %d\n", (char)k + 'a', cur[k]);
        }

        system("pause");
        */
    }

    for (int i = 0; i < 26; ++i) {
        ans = max(ans, cur[i]);
    }            

    cout << ans << '\n';
}

/*
5
aaa
abba
acc
cac
aa
*/

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    int tt = 1;

    while (tt--) {
        solve();
    }

    return 0;
}