#include <bits/stdc++.h>
#define pb push_back
#define ll long long 
#define MAX(a, b, c) max(max(a, b),c)
#define MIN(a,b, c) min(min(a, b),c) 
using namespace std;

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int n, pos, l , r;
	cin>>n>>pos>>l>>r;
	int cnt=0;
	if (pos<=l){
		if (l>pos) cnt+=l-pos+1;
		else cnt+=(pos>1);
		if (r<n){
			cnt+=(r-l+1);
		}
		cout<<cnt;
		return 0;
	}
	else if (pos>=r){
		if (r<pos) cnt+=pos-r+1;
		else cnt+=(pos<n);
		if (l>1){
			cnt+=(r-l+1);
		}
		cout<<cnt; return 0;
	}
	else {
		int a=abs(pos-l), b=abs(pos-r);
		if (a<b){
			if (l>1){
				cnt+=a+1;
				if (r<n) cnt+=a;
			}
			if (r<n) cnt+=b+1;
		}
		else {
			if (r<n) {
				cnt+=b+1; 	
				if (l>1) cnt+=b;
			}
			if (l>1) cnt+=a+1;
		}
		cout<<cnt;
		return 0;
	}
}
	
/*	
	int n;
	cin>>n;
	vector<pair<int, int> >arr(n);
	for(int i=0; i<n; i++) cin>>arr[i].first>>arr[i].second;
	vector<vector<int> >dp(2, vector<int>(3));
	dp[0][0]=0, dp[0][1]=1, dp[0][2]=(arr[1].first-arr[0].first>arr[0].second || n==1);
	for(int i=1; i<n; i++ ){
		dp[1][0]=MAX(dp[0][0], dp[0][1], dp[0][2]);
		dp[1][1]=MAX(dp[0][0], dp[0][1], (arr[i-1].first+arr[i-1].second<arr[i].first-arr[i].second?dp[0][2]:-1)) +(arr[i].first-arr[i-1].first>arr[i].second);
		dp[1][2]=MAX(dp[0][0], dp[0][1], dp[0][2]) + (arr[i+1].first-arr[i].first>arr[i].second || i==n-1);
		dp[0]=dp[1];
	}
	cout<<MAX(dp[0][0], dp[0][1], dp[0][2]);
}
	
	
/*	
	int n;
	cin>>n;
	int arr[n];
	for(int i=0; i<n; i++)cin>>arr[i];
	vector<vector<int> >dp(n, vector<int>(3));
	dp[0][0]=1, dp[0][1]=!(arr[0]==1 || arr[0]==3), dp[0][2]=!(arr[0]==2 || arr[0]==3);
	for(int i=1; i<n; i++){
		dp[i][0]=MIN(dp[i-1][0], dp[i-1][1], dp[i-1][2])+1;
		dp[i][1]=MIN(dp[i-1][0], dp[i-1][2], arr[i]==0?dp[i-1][1]:INT_MAX)+!(arr[i]==1 || arr[i]==3);
		dp[i][2]=MIN(dp[i-1][0], dp[i-1][1], arr[i]==0?dp[i-1][2]:INT_MAX)+!(arr[i]==2 || arr[i]==3);
	}
	cout<<MIN(dp[n-1][0], dp[n-1][1], dp[n-1][2]);
}*/
