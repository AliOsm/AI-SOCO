#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ll long long int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=3e5+5;
ll c[M],d[M],sp[M][20],ind[M],nxt[M];
pair<ll,ll> dp[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll curr=0;
	for(ll i=1;i<=M-5;i++)
	{
		ll b=1<<(1+curr);
		if(b>=i)
			ind[i]=curr;
		if(b==i)
			curr++;
	}
	ll n,a;
	cin>>n>>a;
	for(ll i=1;i<=n;i++)
	{
		cin>>d[i]>>c[i];
	}
	for(ll i=1;i<=n;i++)
		sp[i][0]=a-c[i]+sp[i-1][0];
	for(ll p=1;p<20;p++)
	{
		for(ll i=1;i<=n;i++)
		{
			ll b=1<<(p-1);
			if(i+b<=n)
			{
				sp[i][p]=max(sp[i][p-1],sp[i+b][p-1]);
			}
		}
	}
	stack<ll> s;
	for(ll i=1;i<=n;i++)
	{
		ll t=d[i+1]-d[i];
		while(!s.empty())
		{
			ll x=s.top();
			if(d[x+1]-d[x]<t)
			{
				nxt[x]=i;
				s.pop();
				continue;
			}
			else
				break;
		}
		s.push(i);
	}
	for(ll i=1;i<=n;i++)
		if(nxt[i]==0)
			nxt[i]=n;
	ll ans=0;
	dp[n].ff=a-c[n];
	dp[n].ss=0;
	ans=max(ans,dp[n].ff);
	for(ll i=n-1;i>=1;i--)
	{
		ll st=i;
		ll en=nxt[i];
		ll len=(en-st+1);
		len=ind[len];
		ll b=1<<len;
		ll val=max(sp[st][len],sp[en-b+1][len])-sp[i-1][0];
		ll p=(d[i+1]-d[i]);
		val=val-p*p;
		pair<ll,ll> t=dp[i+1];
		if(t.ss<p)
		{
			t.ff=(t.ff+(t.ss*t.ss))-p*p;
			t.ss=p;
		}
		t.ff+=a-c[i];
		dp[i]=max(t,mp(val,p));
		dp[i]=max(dp[i],mp(a-c[i],(ll)0));
		ans=max(ans,dp[i].ff);
	}
	cout<<ans<<"\n";
	return 0;
}