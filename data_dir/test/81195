#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, m;
pii a[100100];
vector<int> g[100100];
vector<pii> v;
int ans[100100];

int main(){

    scanf("%d%d", &n, &m);
    int mn = inf;
    for (int i = 0; i < m; i++) {
        scanf("%d%d", &a[i].f, &a[i].s);
        a[i].f--;
        a[i].s--;
        g[a[i].f].pb(a[i].s);
        mn = min(mn, a[i].s - a[i].f + 1);
    }

    int cur = n;
    for (int i = n - 1; i >= 0; i--) {
        int l = i;
        sort(all(g[i]));
        forit (it, g[i]) {
            int r = *it;
            if (r < cur) {
                v.pb(mp(l, r));
                cur = r;
            }
        }
    }

    sort(all(v));

    memset(ans, -1, sizeof ans);
    int pos = -1;
    for (int i = 0; i < v.size(); i++) {
        int l = v[i].f, r = v[i].s;
        int st = 0;
        if (pos >= l) {
            l = pos + 1;
            st = (ans[pos] + 1) % mn;
        }
        while (l <= r) {
            ans[l] = st;
            st = (st + 1) % mn;
            pos = l;
            l++;
        }
    }

    printf("%d\n", mn);
    for (int i = 0; i < n; i++) {
        if (ans[i] == -1) ans[i] = 0;
        if (i) printf(" ");
        printf("%d", ans[i]);
    }
    printf("\n");

    return 0;
}
