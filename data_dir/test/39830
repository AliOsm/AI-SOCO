#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(auto it=(c).begin(); it!=(c).end(); ++it)
#define all(c) (c).begin(), (c).end()

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

const int H=17, M=1<<H;
int n,m,c;
int a[M], b[M];
int seg[M<<1]={};

void add(int a,int b,int t)
{
	a=a+M-1; b=b+M+1;
	while(a^b^1)
	{
		if(~a&1) (seg[a^1]+=t)%=c;
		if( b&1) (seg[b^1]+=t)%=c;
		a>>=1; b>>=1;
	}
}

int get(int a)
{
	int res=0;
	a+=M;
	while(a>0)
	{
		(res+=seg[a])%=c;
		a>>=1;
	}
	return res;
}

int main(void)
{
	ios::sync_with_stdio(false);
	cin>>n>>m>>c;
	rep(i,n) cin>>a[i],seg[i+M]=a[i]; rep(i,m) cin>>b[i];
	rep(i,m) add(i,i+n-m,b[i]);
	rep(i,n) cout<<get(i)<<' ';
	cout<<endl;
}
