
#include <bits/stdc++.h>
#define int long long
using namespace std;

const int N = 1e5 + 7, MOD = 1e9 + 7;

vector <int> adj[N], SCC[N];

int stk[N], d[N], l[N], t, id, Cost[N];

stack <int> s;

int dfs(int u) {
        d[u] = l[u] = stk[u] = ++t;
        s.push(u);
        for(int v: adj[u]) {
                if(!d[v]) {
                        dfs(v);
                        l[u] = min(l[u], l[v]);
                }else if(stk[v]) {
                        l[u] = min(l[u], d[v]);
                }
        }

        if(d[u] == l[u]) {
                ++id;
                while(s.top() != u) {
                        SCC[id].push_back(Cost[s.top()]);
                        stk[s.top()] = 0;
                        s.pop();
                }
                stk[s.top()] = 0;
                SCC[id].push_back(Cost[s.top()]);
                s.pop();
        }
}

int32_t main() {






        int n, m; cin >> n ;
        for(int i = 1; i <= n; i++) {
                cin >> Cost[i];
        }
        cin >> m;
        for(int i = 1; i <= m; i++) {
                int u, v; cin >> u >> v;
                adj[u].push_back(v);
        }
        for(int i = 1; i <= n; i++) {
                if(!d[i]) {
                        dfs(i);
                }
        }

        int C = 0, ans = 1;

        for(int i = 1; i <= id; i++) {
                int mn = *min_element(SCC[i].begin(), SCC[i].end()), cnt = 0;
                for(int v: SCC[i]) cnt += mn == v;
                C += mn;
                ans = (ans * cnt) % MOD;
        }

        cout << C << " " << ans << endl;

}

