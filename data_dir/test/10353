#include <bits/stdc++.h>
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
using namespace std;

const int N = 111111;
ll x[N], y[N];
ll n, px, py;

double distsq(double x1, double y1, double x2, double y2) {
    double dx = x1 - x2;
    double dy = y1 - y2;
    return dx * dx + dy * dy;
}

double dist(double x1, double y1, double x2, double y2) {
    return sqrt(distsq(x1, y1, x2, y2));
}

ll dot(ll x1, ll y1, ll x2, ll y2) {
    return x1 * x2 + y1 * y2;
}

ll dot(ll ax, ll ay, ll bx, ll by, ll cx, ll cy, ll dx, ll dy) {
    return dot(bx - ax, by - ay, dx - cx, dy - cy);
}

double distToSegment(ll ax, ll ay, ll bx, ll by) {
    double dab = distsq(ax, ay, bx, by);
    double t = max(0., min(1., (double)dot(ax, ay, px, py, ax, ay, bx, by) / dab));
    double rx = ax + t * (bx - ax);
    double ry = ay + t * (by - ay);
    return dist(px, py, rx, ry);
}

double area(double radius) {
    return 2 * acos(0) * radius * radius;
}

int main() {
    ios::sync_with_stdio(false);
    cout.precision(13);
    cin >> n >> px >> py;
    double maxr = 0, minr = 1e10;
    for(int i = 1; i <= n; i++) {
        cin >> x[i] >> y[i];
        double cd = dist(x[i], y[i], px, py);
        maxr = max(maxr, cd);
    }
    for(int i = 1; i <= n; i++) {
        int ii = i % n + 1;
        double sd = distToSegment(x[i], y[i], x[ii], y[ii]);
        minr = min(minr, sd);
    }
    double ans = area(maxr) - area(minr);
    cout << setprecision(13) << fixed << ans << endl;
    return 0;
}
