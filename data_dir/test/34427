#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = 1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = 5e2+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

struct Node { int x, y, t; } p[N*N];

int n, m, k, q;
bool a[N][N];
int pre[N][N];

// -------------------------------------------------- 函数 -------------------------------------------------- //

void Init() {
    rep(i, 0, q) scanf("%d%d%d", &p[i].x, &p[i].y, &p[i].t);
    sort(p, p + q, [&](Node a, Node b){ return a.t < b.t; });
}

bool check(int M) {
    memset(a, 0, sizeof(a));
    rep(i, 0, M+1) a[p[i].x][p[i].y] = 1;
    rep(i, 0, n+1) pre[0][i] = 0;
    rep(i, 1, n+1) rep(j, 1, m+1) {
        pre[i][j] = pre[i][j-1] + pre[i-1][j] - pre[i-1][j-1] + a[i][j];
    }
    int num = k * k;
    rep(i, 1, n-k+2) rep(j, 1, m-k+2) {
        if (pre[i+k-1][j+k-1] - pre[i+k-1][j-1] - pre[i-1][j+k-1] + pre[i-1][j-1] == num)
            return true;
    }
    return false;
}

int Solve() {
    if (q == 0) return puts("-1");
    int L = 0, R = q-1;
    while (L < R) {
        int M = L + ((R - L - 1) >> 1);
        if (check(M)) R = M; else L = M + 1;
    }
    return printf("%d\n", check(L) ? p[L].t : -1);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d%d%d", &n, &m, &k, &q)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}