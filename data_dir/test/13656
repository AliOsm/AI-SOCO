#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<double> point;
#define F first
#define S second

struct info { int x, y, d; };

int main()
{
	#ifdef DGC
		freopen("a.txt", "r", stdin);
		//freopen("b.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n;
	cin >> n;
	vector<pair<int, int>> a(n);
	vector<int> b(n);
	for (auto &i : a) cin >> i.F, i.S = &i-&a[0];
	for (auto &i : b) cin >> i;

	sort(a.begin(), a.end());
	sort(b.begin(), b.end());

	vector<info> ans;
	vector<pair<int, int>> stk;
	int p = 0;
	for (auto &i : a)
	{
		if (i.F > b[p])
		{
			if (stk.empty())
			{
				cout << "NO\n";
				return 0;
			}

			do
			{
				int d = min(b[stk.back().S] - a[stk.back().F].F, i.F - b[p]);
				ans.push_back({ a[stk.back().F].S, i.S, d });
				if ((a[stk.back().F].F += d) == b[stk.back().S]) stk.pop_back();
				i.F -= d;
			} while (!stk.empty() && i.F > b[p]);

			if (i.F != b[p])
			{
				cout << "NO\n";
				return 0;
			}

			++p;
			continue;
		}

		if (i.F != b[p])
			stk.emplace_back(&i-&a[0], p);
		++p;
	}

	if (!stk.empty())
	{
		cout << "NO\n";
		return 0;
	}

	cout << "YES\n";
	cout << ans.size() << "\n";
	for (auto &i : ans)
		cout << i.x+1 << " " << i.y+1 << " " << i.d << "\n";

	return 0;
}
