#include <bits/stdc++.h>
using namespace std;

bool chmin(double& a, double b){
    if(a > b){
        a = b;
        return true;
    }else{
        return false;
    }
}

int N, K, L;
vector<int> A(N);

pair<int, double> calc(double P){
    vector<double> dp(N+1, 1e18);
    vector<pair<int, int>> prv(N+1);
    dp[0] = 0;
    for(int i=0; i<N; i++){
        if(chmin(dp[i+1], dp[i] + A[i])) prv[i+1] = {i, 0};
        int to = min(N, i+L);
        if(chmin(dp[to], dp[i] + P)) prv[to] = {i, 1};
    }
    int pt = N, num = 0;
    while(pt > 0){
        if(prv[pt].second) num++;
        pt = prv[pt].first;
    }
    return {num, dp[N]};
}

int solve(){
    // ok : 最適解の操作回数がK以下になる
    double ok = 1e18, ng = 0;
    for(int t=0; t<100; t++){
        double mid = (ok+ng)/2;
        auto res = calc(mid);
        (res.first <= K ? ok : ng) = mid;
    }
    auto res = calc(ok);
    int ans = round(res.second - K*ok);
    return ans;
}

int main(){
    cin >> N >> K >> L;
    A.resize(N);
    string s;
    cin >> s;
    for(int i=0; i<N; i++) A[i] = (isupper(s[i]) == 0);
    int ans = N;
    for(int t=0; t<2; t++){
        ans = min(ans, solve());
        for(int i=0; i<N; i++) A[i] = 1-A[i];
    }
    cout << ans << endl;
    return 0;
}
