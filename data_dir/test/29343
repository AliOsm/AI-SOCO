// discussed with Dukkha
#include <iostream>
#include <map>

using namespace std;

int main() {
	int n, q;
	scanf("%d%d", &n, &q);
	map<int, int> mp;
	int ans = 0;
	while (q--) {
		int l, r, t;
		scanf("%d%d%d", &l, &r, &t), l--;
		int l_, r_;
		if (t == 1) {
			auto it = mp.upper_bound(l);
			if (it != mp.begin() && (r_ = (--it)->second) >= l) {
				l_ = it->first;
				ans -= r_ - l_;
				l = l_;
				r = max(r, r_);
			}
			while ((it = mp.upper_bound(l)) != mp.end() && (l_ = it->first) <= r) {
				r_ = it->second;
				ans -= r_ - l_;
				r = max(r, r_);
				mp.erase(it);
			}
			ans += r - l;
			mp[l] = r;
		} else if (t == 2) {
			r_ = l;
			auto it = mp.upper_bound(l);
			if (it != mp.begin() && (r_ = (--it)->second) > l) {
				l_ = it->first;
				if (l_ < l)
					mp[l_] = l;
				else
					mp.erase(it);
				ans -= r_ - l;
			}
			while ((it = mp.upper_bound(l)) != mp.end() && (l_ = it->first) < r) {
				r_ = it->second;
				mp.erase(it);
				ans -= r_ - l_;
			}
			if (r_ > r) {
				mp[r] = r_;
				ans += r_ - r;
			}
		}
		printf("%d\n", n - ans);
	}
	return 0;
}
