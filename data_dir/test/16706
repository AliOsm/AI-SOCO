#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define ppb pop_back
#define mp make_pair

#define pii pair <int, int>
#define pll pair <ll, ll>
#define ld long double
#define ll long long

#define bit(x) __builtin_popcountll(x)
#define all(x) x.begin(), x.end()
#define sqr(x) (x) * 1ll * (x)
#define sz size()

#define purple ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define rep(_i, _from, _to) for (int _i = _from; _i <= _to; _i++)
#define per(_i, _from, _to) for (int _i = _from; _i >= _to; _i--)

#define nl '\n'
#define ioi exit(0);

#define _4day ""

using namespace std;

const int N = 1e5 + 7, mod = 1e9 + 7, inf = 1e9 + 7;
const ll linf = (ll)1e18 + 7;
const ld eps = 1e-15, pi = 3.141592;
const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1}, dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

  int n;
  ll ans = linf;
  int a[N];
  ll s[N];

  inline void Update(pll l, pll r){
    ll sum = sqr(r.f - l.f), len = sqr(r.s - l.s);
    sum += len;
    ans = min(ans, sum);
  }
int main(){
  #ifndef _4day
    freopen (_4day".in", "r", stdin);
    freopen (_4day".out", "w", stdout);
  #endif

  scanf ("%d", &n);
  rep(i, 1, n)
    scanf ("%d", &a[i]), s[i] = s[i - 1] + a[i];

  set <int> st;
  map <int, int> pos;
  st.insert(s[1]);
  pos[s[1]] = 1;
  rep(i, 2, n){
    auto it = st.upper_bound(s[i]);
    if (it != st.begin()){
      --it;
      Update({*it, pos[*it]}, {s[i], i});
      it++;
    }
    if (it != st.end())
      Update({*it, pos[*it]}, {s[i], i});

    pos[s[i]] = i, st.insert(s[i]);
  }

  cout << ans;
  ioi
}
