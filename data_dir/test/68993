#include <bits/stdc++.h>

using namespace std;

const int LIM = 25;

map<int, int> pre = {
    { 1, -1},
    { 3, 1},
    { 7, 1},
    { 15, 5},
    { 31, 1},
    { 63, 21},
    { 127, 1},
    { 255, 85},
    { 511, 73},
    { 1023, 341},
    { 2047, 89},
    { 4095, 1365},
    { 8191, 1},
    { 16383, 5461},
    { 32767, 4681},
    { 65535, 21845},
    { 131071, 1},
    { 262143, 87381},
    { 524287, 1},
    { 1048575, 349525},
    { 2097151, 299593},
    { 4194303, 1398101},
    { 8388607, 178481},
    { 16777215, 5592405},
    { 33554431, 1082401},
};


int my_solve(int a) {
    if (pre.count(a)) {
        return pre[a];
    }
    int b = 0;
    for (int i = LIM; i >= 0; i--) {
        if (!((a >> i) & 1)) {
            int nb = (b + (1 << i));
            if (nb < a) {
                b = nb;
            }
        }
    }
    if (b == 0) {
        return 2 * a - 1;
    } else {
        return gcd(a & b, a ^ b);
    }
}

int stup(int a) {
    int ans = -1;
    for (int b = 1; b < a; b++) {
        int curr = gcd(a ^ b, a & b);
        ans = max(ans, curr);
    }
    return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

//    for (int i = 1; i <= LIM; i++) {
//        pre[(1 << i) - 1] = stup((1 << i) - 1);
//    }
//    cerr << "pre ok" << endl;
//    for (auto [f , s] : pre) {
//        cout << "{ " << f << ", " << s << "}\n";
//    }
    int q;
    cin >> q;
    while (q--) {
        int a;
        cin >> a;
        cout << my_solve(a) << '\n';
    }
    
//    srand(time(0));
//
//    while (true) {
//        int a = rand() % 1000000 + 2;
//        if (my_solve(a) != stup(a)) {
//            cout << a << endl;
//            return 0;
//        }
//    }
}
