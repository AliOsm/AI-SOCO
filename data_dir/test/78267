#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

const int maxN = 1e6 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int n;
ll arr[maxN], sm, narr[maxN];
ii aux[maxN];

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	cin >> n;
	for(int i = 0; i < n; i++) {
		cin >> arr[i];
		sm += arr[i];
	}
	vector<ll> dvs;
	for(ll i = 2; i * i <= sm; i++) {
		if(sm % i) continue;
		dvs.push_back(i);
		while(sm % i == 0) sm /= i;
	}
	if(sm > 1) dvs.push_back(sm);

	ll ans = LLONG_MAX / 3;
	for(auto dv: dvs) {
		for(int i = 0; i < n; i++)
			narr[i] = arr[i] % dv;
		int targ = 0;
		ll acu = 0;
		for(int i = 0; i < n; i++) {
			if(narr[i] == 0) continue;
			if(acu / dv != (acu + narr[i]) / dv) {
				ll snd = (acu + narr[i]) % dv;
				ll fst = narr[i] - snd;
				aux[targ++] = ii(fst, i);
				aux[targ++] = ii(snd, i);
			} else {
				aux[targ++] = ii(narr[i], i);
			}
			acu += narr[i];
		}

		ll cr = 0;
		for(int i = 0, j = 0; i < targ; i = j) {
			for(ll act = 0; j < targ && (act + aux[j].fi) <= dv; act += aux[j++].fi);
			for(int a = i, b = j - 1; a < b; ) {
				ll cnd = min(aux[a].fi, aux[b].fi);
				aux[a].fi -= cnd, aux[b].fi -= cnd;
				cr += cnd * (aux[b].se - aux[a].se);
				if(aux[a].fi == 0) a++;
				if(aux[b].fi == 0) b--;
			}
		}
		ans = min(ans, cr);
	}
	if(ans == LLONG_MAX / 3) ans = -1;
	cout << ans << '\n';
}
