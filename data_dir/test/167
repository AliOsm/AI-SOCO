#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

#ifdef _DEBUG
const int N = 310;
#else
const int N = 3000010;
#endif

const int mx = 10000000;

int n, k, a[N], dp[mx + 1];

bool check(int x)
{
	for (int i = 1; i < x; i++) dp[i] = 0;
	dp[x] = 1;
	for (int i = x + 1; i <= mx; i++)
	{
		dp[i] = max(1, dp[i / 2] + dp[(i + 1) / 2]);
	}
	int64 cur = 0;
	for (int i = 1; i <= n; i++) cur += dp[a[i]];
	return (cur >= k);
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	scanf("%d%d", &n, &k);
	for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
	int l = 0, r = 1e7;
	while (l + 1 < r)
	{
		int m = (l + r) / 2;
		if (check(m)) l = m;
		else r = m - 1;
	}
	int ans = -1;
	if (check(r)) ans = r;
	else if (check(l)) ans = l;
	if (ans == 0) ans = -1;
	cout << ans;
	return 0;
}