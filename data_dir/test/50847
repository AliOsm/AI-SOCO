//g++ -o A A.cpp

//g++ -Wl,--stack,16777216 -o A A.cpp


//#include <bits/stdc++.h>
//using namespace std;

#include <iostream>
using std::cin;
using std::cout;
using std::string;
using std::to_string; //convert number to string
using std::endl;

#include <algorithm>
using std::sort;
using std::min;
using std::max;
using std::pair;//pair <int,int> data[100];sort(data,data+100);

#include <math.h>
//sqrt(123.123)
//ceil(0.12)=1
//pow(x,2)=x^2

#include<cstdio>
//printf()

#include <map>
using std::map;
//map <string,int> x;

#include <stdlib.h>
//abs(-123);

#include <vector>
using std::vector;
//vector<int> x;
//x.push_back(0);
//x.pop_back();
//vector<int> x(10,3);   ==>   x[0]==x[1]==...==x[9]==3;
//vector<int> y(x);      ==>   y[0]==y[1]==...==y[9]==3;
//cout<<x.size();        ==>   10


#include <queue>
using std::queue;

#include <deque>
using std::deque;



#include <stack>
using std::stack;
//.push(123)
//.pop()
//.top()
//.size()
//.size()

#include <set>
using std::set;
using std::multiset;

/*
long long gcd(long long a, long long b)
{
    //O(log(max(a,b)))
    long long t;
    while(b!=0)
    {
        t=a%b;
        a=b;
        b=t;
    }
    return a;
}
*/


/*
long long C(int x,int y)
{
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer/=i;
    }
    return answer;
}
*/




/*
//C(x,y) % mod
long long C(long long x,long long y)
{
    long long mod=1000000007;
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer%=mod;
    }
    for(i=1;i<=y;i++)
    {
        while(answer%i!=0){
            answer+=mod;
        }
        answer/=i;
        answer%=mod;
    }
    return answer%mod;
}


for (i=0; i<1010; i++) {
    c[i][0]=1;
    for (j=1; j<=i; j++) c[i][j]=(c[i-1][j-1]+c[i-1][j])%md;
}
*/

/*
//must return true if first>then second
struct classcomp {
    bool operator() (const int& lhs, const int& rhs) const{
        return lhs>rhs;
    }
};
*/



/*
vector<string> permutations;
void f(string s){
    if(s.size()==4){
        permutations.push_back(s);
        return;
    }
    int n=s.size();
    
    
    f(to_string(n)+s);
    f(s+to_string(n));
    for(int i=1;i<n;i++){
        f(s.substr(0,i)+to_string(n)+s.substr(i));
    }
}
*/




int main()
{
    /*
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    */
    
    int answer=0;
    int n,x1,y1,x2,y2;
    cin>>n>>x1>>y1>>x2>>y2;
    
    int len1=0;
    int len2=0;
    
    if(y1==0){
        len1=x1;
    }else if(x1==n){
        len1=n+y1;
    }else if(y1==n){
        len1=n+n+n-x1;
    }else {
        len1=4*n-y1;
    }
    
    if(y2==0){
        len2=x2;
    }else if(x2==n){
        len2=n+y2;
    }else if(y2==n){
        len2=n+n+n-x2;
    }else {
        len2=4*n-y2;
    }
    
    //cout<<len1<<" "<<len2;
    cout<<min((len1-len2+4*n)%(4*n),(len2-len1+4*n)%(4*n));
    
    
    return 0;   
}
