#pragma GCC optimize("O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


#define ll long long
#define ld long double
#define pb push_back
#define f first
#define s second
#define y1 bbp
#define sz size()
int const N=1e6+3,inf=1e9+7,md=998244353;
ll n,qq,ans,k,m,x,y,q,a[N],dp[N][10],b[N],l,r;
vector <ll> v,ot;
string s,t;
main()
{
    srand(time(0));
//    freopen("accountant.in","r",stdin);freopen("accountant.out","w",stdout);
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin>>n;
    for (int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    for (int i=1;i<=n;i++)
    {
        cin>>b[i];
        v.pb(a[i]-b[i]);
    }
    sort(v.begin(),v.end());
    for (int i=0;i<v.sz;i++)
    {
        l=i+1,r=v.sz-1;
        if (l>r) continue;
        while(r-l>1)
        {
            int mid=(l+r)/2;
            if (v[i]+v[mid]>0) r=mid; else l=mid;
        }
//        cout<<v[i]<<" "<<l<<" "<<r<<endl;
        q=0;
        if (v[i]+v[l]>0) q=l; else
        if (v[i]+v[r]>0) q=r; else continue;
        ans+=(v.sz-q);
//        cout<<v[i]<<" "<<q<<" "<<ans<<endl;
    }
    cout<<ans;
}
