// I can't tell you what it really is,
// I can only tell you what it feels like.
#include "bits/stdc++.h"
using namespace std;
 
// #define int long long
#define F first 
#define S second
#define sz(x) ((int)x.size())
#define rep(i,a,n) for (int i = a; i <= n; ++i)
#define all(v)  v.begin(), v.end()
#define pb push_back
#define P pair < int, int >
#define E cout << '\n'

int add(int, int);
int mul(int, int);
int po(int, int);

const int mod = 1e9 + 7;
const int N = 1e5 + 5;

vector < int > primes;
vector < int > spf;

void RunLinearSieve() {
  int n = N;
  spf.assign(n + 1, 0);
  for(int i = 2; i < n; ++i) {
    if(!spf[i]) {
      spf[i] = i;
      primes.push_back(i);
    }
    for(int x : primes) {
      int calc = i * x;
      if(x > spf[i] || calc > n) {
        break;        
      }
      spf[calc] = x;
    }
  }
}

int dp[N];
 
inline void solve() {
  RunLinearSieve();
  int n, fin(1);
  spf[1] = 1;
  cin >> n;
  vector < int > v(n);
  for (int &x : v) {
    cin >> x;
  }
  for (int i : v) {
    int x = i, ans = 0;
    vector < int > temp;
    while (x != 1) {
      temp.pb(spf[x]);
      ans = max(ans, dp[spf[x]] + 1);
      int cur = spf[x];
      while (x != 1 && x % cur == 0) {
        x /= cur;
      }
    }
    for (int x : temp) {
      dp[x] = max(dp[x], ans);
    }
    fin = max(ans, fin);
  }
  cout << fin << '\n';
}
signed main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  int t = 1;
  //cin >> t; while(t--)
  solve();
  return 0;
}
inline int add(int x, int y) {
   if (x >= mod) x %= mod;
   if (y >= mod) y %= mod;
  x += y;
 return (x >= mod ? x - mod : x);
} 
inline int mul(int x, int y) {
  if (x >= mod) x %= mod;
  if (y >= mod) y %= mod;
  return (x*y) % mod;
}
int po(int x, int n) {
  int res = 1;
  for (;n > 0;) {
    if (n & 1) {
      res = mul(res, x);
    }
    x = mul(x, x);
    n /= 2;
  }
  return res;
}