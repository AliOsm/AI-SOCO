#include <bits/stdc++.h>
using namespace std;
bool ok;
vector<string>a;
int n,m,x,y,xx,yy;
bool vis[505][505];
int dx[] = {-1,0,0,1};
int dy[] = {0,-1,1,0};
bool valid(int i, int j){
    return i>-1 && j>-1 && i<n && j<m && a[i][j] == '.';
}
void dfs(int i, int j){
    vis[i][j]=1;
    for(int k=0; k<4; k++){
        int nx = i + dx[k], ny = j + dy[k];
        if(nx == x && ny == y)
            ok = 1;
        if(valid(nx,ny) && !vis[nx][ny] && a[nx][ny] == '.')
            dfs(nx,ny);
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin>>n>>m;
    a.resize(n);
    for(int i=0; i<n; i++)
        cin>>a[i];
    cin>>x>>y>>xx>>yy;
    x--,y--,xx--,yy--;
    if(a[xx][yy] == '.'){
        if(valid(xx, yy - 1)){
            vis[xx][yy - 1] = 1;
            dfs(xx,yy);
            memset(vis,0,sizeof vis);
        }
        if(valid(xx - 1, yy)){
            vis[xx - 1][yy] = 1;
            dfs(xx,yy);
            memset(vis,0,sizeof vis);
        }
        if(valid(xx, yy + 1)){
            vis[xx][yy + 1] = 1;
            dfs(xx,yy);
            memset(vis,0,sizeof vis);
        }
        if(valid(xx + 1, yy)){
            vis[xx + 1][yy] = 1;
            dfs(xx,yy);
            memset(vis,0,sizeof vis);
        }
    }
    else{
        swap(xx,x),swap(yy,y);
        dfs(xx,yy);
    }
    if(ok)
        cout<<"YES"<<endl;
    else
        cout<<"NO"<<endl;

    return 0;
}
