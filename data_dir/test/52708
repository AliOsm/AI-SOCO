
 #include "bits/stdc++.h"
 using namespace std;
 char Str[1000005];
 vector<pair<int,char> > V , copy_;

 int main(){
 	int N , i , Ans = 0;
 	scanf( "%s" , Str );
 	N = strlen( Str );
 	int Count = 1;

 	for( i = 1 ; i < N ; ++i ){
 		if( Str[i - 1] != Str[i] ){
 			V.emplace_back( make_pair( Count , Str[i - 1] ) );
 			Count = 1;
 		}		
 		else ++Count;
 	}

 	V.emplace_back( make_pair( Count , Str[N - 1] ) );

 	while( 1 ){
 		if( V.size() == 1 ) break;
 		int Temp = min( V[0].first , V[V.size() - 1].first ); 

 		for( i = 1 ; i < V.size() - 1 ; ++i ){
 			if( V[i].first & 1 ) Temp = min( Temp , ( V[i].first + 1 ) >> 1 );
 			else Temp = min( Temp , V[i].first >> 1 );
 		}	

 		Ans += Temp;
 		if( V[0].first - Temp > 0 ) copy_.emplace_back( make_pair( V[0].first - Temp , V[0].second ) );	

 		for( i = 1 ; i < V.size() - 1 ; ++i )
 			if( V[i].first - Temp * 2 > 0 ) copy_.emplace_back( make_pair( V[i].first - Temp * 2 , V[i].second) );

 		if( V[i].first - Temp > 0 ) copy_.emplace_back( make_pair( V[i].first - Temp , V[i].second) );

 		V.clear();

 		if( copy_.size() == 0 ) break;
 		Count = copy_[0].first;

 		for( i = 1 ; i < copy_.size() ; ++i ){
 			if( copy_[i].second != copy_[i - 1].second ){
 				V.emplace_back( make_pair( Count , copy_[i - 1].second ) );
 				Count = copy_[i].first;
 			}
 			else Count += copy_[i].first;
 		}

 		V.emplace_back( make_pair( Count , copy_[i - 1].second ) );
 		copy_.clear();
 	}

 	printf( "%d\n" , Ans );
 	return 0;
 }