#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
# include <math.h>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

lli n;
lli a[N];
lli dp1[N], dp2[N];
vector<pair<lli, lli> > ans;

void log_based_solution(lli x)
{
    lli wina = 0, winb = 0;
    lli idx = 1;
    bool ok = 0;
    while(idx <= n)
    {
        ok = 0;
        lli id1 = lower_bound(dp1 + 1, dp1 + 1 + n, dp1[idx - 1] + x) - dp1;
        lli id2 = lower_bound(dp2 + 1, dp2 + 1 + n, dp2[idx - 1] + x) - dp2;
        idx = min(id1, id2);
        if(idx == n + 1)
            break ;
        idx ++;
        if(a[idx - 1] == a[n]){
            wina ++;
            ok = 1;
        }
        else{
            winb  ++;
        }
    }
    if(wina > winb && ok)
    {
        ans.push_back({wina, x});
    }
}

void solve()
{
    cin>>n;
    for(int i = 1; i <= n; i ++)
        cin>>a[i];
    for(int i = 1; i <= n; i ++)
    {
        if(a[i] == 1)
            dp1[i] ++;
        else
            dp2[i] ++;
    }
    for(int i = 1;i  <= n; i ++)
    {
        dp1[i] += dp1[i - 1];
        dp2[i] += dp2[i - 1];
    }
    for(int i = 1; i <= n; i ++)
    {
        log_based_solution(i);
    }
    cout<<ans.size()<<'\n';
    sort(ans.begin(), ans.end());
    for(auto it : ans)
        cout<<it.first<<' '<<it.second<<'\n';
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
