#include <bits/stdc++.h>
 
using namespace std;
 
const int N = 5050;
 
int n, m, k, vis[N][N], col[N];
vector<pair<int, int>> edges[N];
set<int> nodes[N];
 
void dfs(int u, int c) {
	vis[u][c] = 1;
 
	for (auto& e : edges[u]) {
		int v = e.first;
		int i = e.second;
 
		if (col[i] != c || vis[v][c] == 2) {
			continue;
		}
 
		if (vis[v][c] == 1) {
			col[i] = c + 1;
			nodes[c + 1].insert(u);
		} else {
			dfs(v, c);
		}
	}
 
	vis[u][c] = 2;
}
 
void solve() {
	for (int i = 1; i <= n; ++i) {
		nodes[0].insert(i);
	}
 
	while (nodes[k].size()) {
		for (int u : nodes[k]) {
			if (vis[u][k]) {
				continue;
			}
			dfs(u, k);
		}
		k++;
	}
}
 
int main() {
	cin >> n >> m;
 
	for (int i = 0; i < m; ++i) {
		int u, v;
		scanf("%d %d", &u, &v);
		edges[u].push_back({v, i});
	}
 
	solve();
 
	printf("%d\n", k);
	
	for (int i = 0; i < m; ++i) {
		printf("%d ", col[i] + 1);
	}
 
	return 0;
}