# include <stdio.h>
# include <bits/stdc++.h>


#define _USE_MATH_DEFINES_
#define ll long long
#define ld long double
#define Accepted 0
#define pb push_back
#define mp make_pair
#define sz(x) (int)(x.size())
#define every(x) x.begin(),x.end()
#define F first
#define S second
#define For(i,x,y)  for (ll i = x; i <= y; i ++) 
#define FOr(i,x,y)  for (ll i = x; i >= y; i --)
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)
// ROAD to...                                                                                                                                                                                                                Red

using namespace std;

inline bool isvowel (char c) {
	c = tolower(c);
    if (c == 'a' || c == 'e' || c == 'i' || c == 'y' || c == 'o' || c == 'u') return 1;
    return 0;
}

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 6e5 + 123;                                          
const int M = 22;
const int pri = 997;
const int Magic = 2101;

const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, -1, 0, 1};
#define int long long
vector < int > fun (int x) {
    vector < int > d;
    for (int i = 2; i * i <= x; i ++) {
        if (x % i == 0) {
            d.pb(i);
            while (x % i == 0)
                x /= i;
        }
    }
    if (x > 1) d.pb(x);
    return d;
}

vector < pair < int, int > > calc (vector < int > d) {
    vector < pair < int, int > > g;
    for (int msk = 0; msk < (1 << sz(d)); msk ++) {
        int c = 1, t = 1;
        For (i, 0, sz(d) - 1) {
            if (msk & (1 << i)) {
                c *= d[i];
                t *= -1;
            }
        }
        g.pb(mp(c, t));
    }
    return g;
}

int cnt (int x, vector < pair < int, int > > & g) {
    ll res = 0;
    for (auto it : g) {
        res += (x / it.F) * (ll)it.S;
    }
    //cout << res << '\n';
    return res;
}

void Solve () {
    int x, p, k;
    cin >> x >> p >> k;
    if (p == 1) {
        cout << x + k << '\n';
        return ;
    }
    
    vector < int > d = fun(p);
    vector < pair < int, int > > g = calc(d);
    
    k += cnt(x, g);
    //cout << cnt(x, g) << '\n';
    int l = x + 1, r = inf, res = 0;
    while (l <= r) {
        int md = (l + r) >> 1;
        if (cnt(md, g) >= k) {
            r = md - 1;
            res = md;
        } else l = md + 1;
    }
    //cout << res << '\n';
    cout << res << '\n';
}

 main () {
    int t;
    cin >> t;
    while (t --) {
        Solve();
    }
    return Accepted;
}

// Coded By OB