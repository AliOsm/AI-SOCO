#include <functional>
#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <stdio.h>
#include <cstring>
#include <cassert>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

using namespace std;

typedef long long ll;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxN = (int)1e5 + 10;
const int INF = (int)1e9;
const int mod = (int)1e9 + 7;
const ll LLINF = (ll)1e18;

int ft[maxN];

void add(int x, int val) {
    for (; x < maxN; x |= x + 1) {
        ft[x] = max(ft[x], val);
    }
}

int sum(int x) {
    int r = 0;
    for (; x >= 0; x = (x & (x + 1)) - 1) {
        r = max(ft[x], r);
    }
    return r;
}

pair <int, int> a[maxN];
int dp[maxN];

int main() {

   // freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);

    ios_base::sync_with_stdio(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i ){
        int x;
        cin >> x;
        if (dp[x - 1] == -1) {
            dp[x] = 1;
        } else {
            dp[x] = dp[x - 1] + 1;
        }
    }
    cout << n - *max_element(dp, dp + maxN);
    return 0;
}
