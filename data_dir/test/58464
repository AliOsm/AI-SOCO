#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define REV(i,b,a) for(int i=(a);i>=(b);i--)
#define mp make_pair
#define pb push_back
#define oo (1<<30)
#define sz(v) (int)v.size()
#define all(c) (c).begin(),(c).end()
#define rall(c) (c).rbegin(),(c).rend()
#define mem(s,v) memset(s,v,sizeof(s))
#define ppc(x) __builtin_popcount((x))
#define iter(it,s) for(__typeof(s.begin())it = s.begin();it!=s.end();it++)

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<double> vd;
typedef vector<string> vs;
typedef pair<int, int> pi;
typedef vector<pi> vpi;

int dx[] = { 0, 0, 1, -1 };
int dy[] = { 1, -1, 0, 0 };

const int len = 200005;
ll cum[len];
ll memo[len][3];
int n, k;

ll rec(int idx, int cnt) {
  if (cnt == 2)
    return 0;
  if (idx >= n + 1)
    return -(1LL << 60);
  ll &res = memo[idx][cnt];
  if (res != -1)
    return res;
  res = 0;
  res = max(res, rec(idx + 1, cnt));
  res = max(res, rec(idx + k, cnt + 1) + cum[idx] - cum[idx - k]);
  return res;
}
void build(int idx, int cnt) {
  if (cnt == 2) {
    if (idx > n + 1)
      return;
    return;
  }
  if (idx >= n + 1)
    return;
  ll cur = rec(idx, cnt);
  if (cur == rec(idx + k, cnt + 1) + cum[idx] - cum[idx - k]) {
    cout << idx - k + 1 << " ";
    build(idx + k, cnt + 1);
  } else if (cur == rec(idx + 1, cnt)) {
    build(idx + 1, cnt);
  }
  return;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("test.in", "rt", stdin);
//	freopen("o.txt", "wt", stdout);
#endif
  ios::sync_with_stdio(false);
  cin >> n >> k;
  FOR (i , 1 , n + 1)
  {
    int x;
    cin >> x;
    cum[i] = cum[i - 1] + x;
//    cout << cum[i] << endl;
  }
  mem(memo, -1);
  build(k, 0);
  return 0;
}
