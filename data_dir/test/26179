
#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>
#include <numeric>
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long mod = 1000000007LL;
//const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;


int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	ll n, m; cin >> n >> m;
	vector<string> vs(n);
	for (ll i = 0; i < n; i++) cin >> vs[i];
	vector<pair<string, string>> res;
	vector<string> kai;
	multiset<string> ms;
	for (ll i = 0; i < n; i++) {
		string t = vs[i];
		reverse(t.begin(), t.end());
		auto itr = ms.find(t);
		if (itr != ms.end()) {
			ms.erase(itr);
			res.emplace_back(vs[i], t);
		}
		else {
			ms.insert(vs[i]);
		}
	}
	string ans;
	for (ll i = 0; i < res.size(); i++) {
		ans += res[i].first;
	}
	ll len = 0;
	string tmp;
	for (auto p : ms) {
		string t = p;
		reverse(t.begin(), t.end());
		if (p == t) {
			if (len < p.size()) {
				len = p.size();
				tmp = p;
			}
		}
	}
	ans += tmp;
	for (ll i = (ll)res.size() - 1; i >= 0; i--) {
		ans += res[i].second;
	}
	cout << ans.size() << "\n";
	cout << ans << endl;
	return 0;
}
