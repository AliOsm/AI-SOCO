#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int mod=998244353;
inline int add(int a,int b)
{
	a+=b;
	if(a>=mod)a-=mod;
	return a;
}
inline int dec(int a,int b)
{
	a-=b;
	if(a<0)a+=mod;
	return a;
}
inline int mult(int a,int b)
{
	ll t=1ll*a*b;
	if(t>=mod)t%=mod;
	return t;
}
inline int power(int a,int b)
{
	int out=1;
	while(b)
	{
		if(b&1)out=mult(out,a);
		a=mult(a,a);
		b>>=1;
	}
	return out;
}
int n,p[200010];
long long s[200010];
inline int lowbit(int x)
{
	return x&(-x);
}
class tree
{
	public:
		long long dat[200010];
		void modify(int p,long long v)
		{
			for(;p<=n;p+=lowbit(p))dat[p]+=v;
		}
		ll query(int p)
		{
			ll out=0;
			for(;p;p-=lowbit(p))out+=dat[p];
			return out;
		}
}T;
vector<int> ans;
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)scanf("%lld",&s[i]),T.modify(i,i);
	for(int i=n;i>=1;i--)
	{
		int l=0,r=n-1,out=-1;
		while(l<=r)
		{
			int mid=(l+r)>>1;
			if(T.query(mid)<=s[i])out=mid,l=mid+1;
			else r=mid-1;
		}
		assert(out!=-1);
		T.modify(out+1,-out-1);
		ans.push_back(out+1);
	}
	reverse(ans.begin(),ans.end());
	for(int x:ans)printf("%d ",x);
	return 0;
}