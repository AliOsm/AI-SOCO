#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <bitset>

const int kN = 100000 + 5;
std::bitset<kN> bs[26];
char s[kN], t[kN];

int main()
{
    scanf("%s", s);
    int n = strlen(s);
    for (int i = 0; i < n; ++ i)
        bs[s[i] - 'a'].set(i, 1);
    int m;
    scanf("%d", &m);
    while (m--) {
        int op;
        scanf("%d", &op);
        if (op == 1) {
            int i;
            char w[2];
            scanf("%d%s", &i, w); -- i;
            bs[s[i] - 'a'].set(i, 0);
            bs[w[0] - 'a'].set(i, 1);
            s[i] = w[0];
        } else {
            int l, r;
            scanf("%d%d%s", &l, &r, t); -- l;
            std::bitset<kN> d;
            d.flip();
            int len = strlen(t);
            if (r - l < len) {
                puts("0");
                continue;
            }
            for (int i = 0; i < len; ++ i)
                d &= bs[t[i] - 'a'] >> i;
            printf("%d\n", (d >> l).count() - (d >> r - len + 1).count());
        }
    }
}
