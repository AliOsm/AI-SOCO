#include <cstdio>
#include <cstring>
const int N = 1010;
int dp1[N][N];
int dp2[N][N];
int dp3[N][N];
int dp4[N][N];
int a[N][N];
int main() {
	int n, m;
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			scanf("%d", &a[i][j]);
		}
	}
	dp1[1][1] = a[1][1];
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			if(i + 1 <= n) {
				if(dp1[i][j] + a[i + 1][j] > dp1[i + 1][j]) {
					dp1[i + 1][j] = dp1[i][j] + a[i + 1][j];
				}
			}
			if(j + 1 <= m) {
				if(dp1[i][j] + a[i][j + 1] > dp1[i][j + 1]) {
					dp1[i][j + 1] = dp1[i][j] + a[i][j + 1];
				}
			}
		}
	}
	dp2[n][1] = a[n][1];
	for(int i = n; i >= 1; i--) {
		for(int j = 1; j <= m; j++) {
			if(i - 1 >= 1) {
				if(dp2[i][j] + a[i - 1][j] > dp2[i - 1][j]) {
					dp2[i - 1][j] = dp2[i][j] + a[i - 1][j];
				}
			}
			if(j + 1 <= m) {
				if(dp2[i][j] + a[i][j + 1] > dp2[i][j + 1]) {
					dp2[i][j + 1] = dp2[i][j] + a[i][j + 1];
				}
			}
		}
	}
	dp3[1][m] = a[1][m];
	for(int i = 1; i <= n; i++) {
		for(int j = m; j >= 1; j--) {
			if(i + 1 <= n) {
				if(dp3[i][j] + a[i + 1][j] > dp3[i + 1][j]) {
					dp3[i + 1][j] = dp3[i][j] + a[i + 1][j];
				}
			}
			if(j - 1 >= 1) {
				if(dp3[i][j] + a[i][j - 1] > dp3[i][j - 1]) {
					dp3[i][j - 1] = dp3[i][j] + a[i][j - 1];
				}
			}
		}
	}
	dp4[n][m] = a[n][m];
	for(int i = n; i >= 1; i--) {
		for(int j = m; j >= 1; j--) {
			if(i - 1 >= 1) {
				if(dp4[i][j] + a[i - 1][j] > dp4[i - 1][j]) {
					dp4[i - 1][j] = dp4[i][j] + a[i - 1][j];
				}
			}
			if(j - 1 >= 1) {
				if(dp4[i][j] + a[i][j - 1] > dp4[i][j - 1]) {
					dp4[i][j - 1] = dp4[i][j] + a[i][j - 1];
				}
			}
		}
	}
	int ret = 0;
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			if(i == 1 || i == n || j == 1 || j == m) {
				continue;
			}
			int tmp = dp1[i - 1][j] + dp4[i + 1][j] + dp3[i][j + 1] + dp2[i][j - 1];
			if(tmp > ret) {
				ret = tmp;
			}
			tmp = dp1[i][j - 1] + dp4[i][j + 1] + dp3[i - 1][j] + dp2[i + 1][j];
			if(tmp > ret) {
				ret = tmp;
			}

		}
	}
	printf("%d\n",ret);
	return 0;
}
