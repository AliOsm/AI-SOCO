#include <iostream>
#include<memory.h>
#include <map>
#include <string>
#include <iomanip>
#include <fstream>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

/*
int main()
{
	long long r[3001]={0};
	int sq[1501*1501] = {0};
	for (int i = 1; i <= 1500; i++) sq[i*i] = i;
	for (long long i = 1; i <= 1500; i++)
	{
		for (long long j = 1; j < i; j++)
		{
			long long k = i*i - j*j;
			if (sq[k] != 0 && i+j+sq[k] < 3001)
			{
				r[i+j+sq[k]] = max(r[i+j+sq[k]], i*j*sq[k]);
			}
		}
	}
	int t;
	cin>>t;
	while (t--)
	{
		int n;
		cin>>n;
		if (r[n] > 0) cout<<r[n]<<endl;
		else cout<<-1<<endl;
	}
}


int main()
{
	bool np[1000001] = {false};
	np[0] = np[1] = true;
	for (long long i = 2; i < 1000000; i++)
	{
		if (!np[i])
		{
			for (long long j = i*i; j < 1000000; j+= i)
			{
				np[j] = true;
			}
		}
	}
	long long f[1000001] = {0};
	f[0] = 0;
	for (int i = 1; i < 1000001; i++)
	{
		f[i] += f[i-1];
		if (!np[i]) f[i] += i;
	}
	int t;
	cin>>t;
	while (t--)
	{
		int n;
		cin>>n;
		cout<<f[n]<<endl;
	}
}



int main()
{
	int a[20][20] = {0};
	for (int i = 0; i < 20; i++)
	{
		for (int j = 0; j < 20; j++)
		{
			string s;
			cin>>s;
			int x = 0;
			for (int k = 0; k< s.size(); k++)
			{
				x*=10;
				x+= s[k]-'0';
			}
			a[i][j] = x;
		}
	}
	int mx =0;
	for (int i = 0; i < 20; i++)
	{
		for (int j = 0; j < 20; j++)
		{
			int x = 1;
			if (i+4 <= 20)
			{
				x= a[i][j]*a[i+1][j]*a[i+2][j]*a[i+3][j];
				mx = max(mx, x);
			}
			if (j+4 <= 20)
			{
				x= a[i][j]*a[i][j+1]*a[i][j+2]*a[i][j+3];
				mx = max(mx, x);
			}
			if (i+4 <= 20 && j+4 <= 20)
			{
				x= a[i][j]*a[i+1][j+1]*a[i+2][j+2]*a[i+3][j+3];
				mx = max(mx, x);
			}
			if (i+4<=20 && j>=3)
			{
				x= a[i][j]*a[i+1][j-1]*a[i+2][j-2]*a[i+3][j-3];
				mx = max(mx, x);
			}
		}
	}
	cout<<mx<<endl;
}


int main()
{
	int a[50000] = {0};
	int t[50000] = {0};
	a[1] = 1;
	for (int i = 2;i < 50000; i++)
	{
		int x = 0;
		for (int j = 1; j*j <= i; j++)
		{
			if (i%j==0){
				x++;
				if (j*j != i) x++;
			}
		}
		int k = i;
		while (k%2==0) {t[i]++; k/=2;}
		a[i] = x;
	}
	int b[50000]= {0};
	b[1] = 1;
	for (int i = 2; i < 50000; i++)
	{
		if (i%2==0)
		{
			b[i] = (a[i]*a[i-1]*t[i]) / (t[i]+1);
		}
		else
		{
			b[i] = (a[i]*a[i-1]*t[i-1]) / (t[i-1]+1);
		}
		b[i] = max(b[i-1], b[i]);
	}
	int T;
	cin>>T;
	while(T--)
	{
		int n;
		cin>>n;
		int * it = upper_bound(b,b+50000, n);
		long long x = (it-b);
		
		x *= (x-1ll);
		x/=2;
		cout<<x<<endl;
	}
}


string sm(string a, string b)
{
	reverse(a.begin(), a.end());
	reverse(b.begin(), b.end());
	int c = 0;
	string r = "";
	for (int i = 0; i < max(a.size(), b.size()); i++)
	{
		int x,y;
		if (a.size() <= i) x = 0;
		else x = a[i]-'0';
		if (b.size() <= i) y = 0;
		else y = b[i]-'0';
		int z = x+y+c;
		r += '0'+(z%10);
		c = z/10;
	}
	if (c > 0) r+= '0'+c;
	reverse(r.begin(), r.end());
	return r;
}
int main()
{
	int n;
	cin>>n;
	string s;
	string b;
	cin>>s;
	for (int i = 1; i < n; i++)
	{
		cin>>b;
		s = sm(s,b);
	}
	cout<<s<<endl;
	cout<<s.substr(0,10)<<endl;
}


int main()
{
	vector<short> a(5000001, 0);
	vector<int> b(5000001, 0);
	for(int i = 1; i < 5000001; i++)
	{
		long long j = i;
		int x = 0;
		while (j > 1)
		{
			if (j < i)
			{
				x += a[j];
				break;
			}
			x++;
			if (j%2==0) j>>=1;
			else j = 3*j+1;

*/

int main()
{
	int n;
	cin>>n;
	vector<long long> a(n);
	long long sm = 0;
	for (int i = 0; i < n; i++)
	{
		cin>>a[i];
		sm += a[i];
	}
	if (sm%3 == 0 && n >= 3)
	{
		long long g = sm/3;
		vector<long long> s(n);
		long long ss = 0;
		for (int i = n-1; i >=0; i--)
		{
			if (i == n-1) ss = a[i];
			else ss = a[i]+ss;
			if (ss == g) s[i] = 1;
			if (i < n-1) s[i] += s[i+1];
		}
		long long rs = 0;
		ss = a[0];
		for (int i = 1; i < n-1; i++)
		{
			if (ss == g)
			{
				rs += s[i+1];
			}
			ss += a[i];
		}
		cout<<rs<<endl;
	}
	else
		cout<<0<<endl;
}