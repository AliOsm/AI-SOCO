#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cmath>
#include <cassert>

using namespace std;

int tryI(const vector<int> &v, const vector<long long> &s, int p, int k,
         int I)
{
    long long sum;
    if (I == 0)
        sum = 0;
    else
        sum = s[I - 1];
    if (sum > p)
        return -1;

    int ans = I;

    for (int i = I + k - 1; i < v.size(); i += k)
    {
        if (sum + v[i] <= p)
        {
            sum += v[i];
            ans += k;
        }
        else
            break;
    }
    return ans;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, p, k;
        cin >> n >> p >> k;
        vector<int> v(n, 0);
        for (int i = 0; i < n; ++i)
            cin >> v[i];

        sort(v.begin(), v.end());
        vector<long long> sum(n, 0);

        sum[0] = v[0];
        for (int i = 1; i < n; ++i)
            sum[i] = sum[i - 1] + v[i];

        int ans = 0;
        for (int i = 0; i <= k; ++i)
        {
            int cur = tryI(v, sum, p, k, i);
            if (cur == -1)
                break;
            ans = max(ans, cur);
        }
        cout << ans << "\n";

    }
}
