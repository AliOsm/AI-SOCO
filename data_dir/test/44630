#include<bits/stdc++.h>
using namespace std;
//#define int long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
int const M=3e5+10;
int seg[M*4],a[M],ind[M];
void build(int l,int r,int node)
{
	if(r-l==1)
	{
		seg[node]=(ind[l]>ind[l+1]);
		return;
	}
	int mid=(l+r)/2;
	build(l,mid,node*2);
	build(mid,r,node*2+1);
	seg[node]=seg[node*2]+seg[node*2+1];
}
int get(int l,int r,int st,int en,int node)
{
	if(st<=l && r<=en)
	{
		return seg[node];
	}
	if(st>=r || l>=en)return 0;
	int mid=(l+r)/2;
	return get(l,mid,st,en,node*2)+get(mid,r,st,en,node*2+1);
}
void update(int l,int r,int id,int x,int node)
{
	if(id==0 || id==r)return;
	if(r-l==1)
	{
		seg[node]=x;
		return;
	}
	int mid=(l+r)/2;
	if(id<mid)update(l,mid,id,x,node*2);
	else update(mid,r,id,x,node*2+1);
	seg[node]=seg[node*2]+seg[node*2+1];
}
main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		ind[a[i]]=i;
	}
	build(1,n,1);
	int q;
	cin>>q;
	while(q--)
	{
		int ty,l,r;
		scanf("%d%d%d",&ty,&l,&r);
		if(ty==1)
		{
			if(l==r)
			{
				printf("1\n");
				continue;
			}
			printf("%d\n",get(1,n,l,r,1)+1);
		}
		if(ty==2)
		{
			ind[a[l]]=r;
			ind[a[r]]=l;
			swap(a[l],a[r]);
			update(1,n,a[r]-1,ind[a[r]-1]>ind[a[r]],1);
			update(1,n,a[l]-1,ind[a[l]-1]>ind[a[l]],1);
			update(1,n,a[l],ind[a[l]]>ind[a[l]+1],1);
			update(1,n,a[r],ind[a[r]]>ind[a[r]+1],1);
		}
	}
}
