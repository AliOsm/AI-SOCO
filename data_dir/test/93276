#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int N,K,D;
int a[100010];
int freq[30];
bool bad[(1<<20)];

void add(void){
    int mask = 0;
    int i;
    REP(i,K) if(freq[i] == 0) mask |= (1<<i);
    bad[mask] = true;
//  cout << mask << endl;
}

int main(void){
    int i,j,mask;
    
    cin >> N >> K >> D;
    REP(i,K){
        int sz;
        cin >> sz;
        int x;
        REP(j,sz){
            scanf("%d", &x);
            a[x-1] = i;
        }
    }
    
    REP(i,D) freq[a[i]]++;
    add();
    for(i=D;i<N;i++){
        freq[a[i]]++;
        freq[a[i-D]]--;
        add();
    }
    
    int ans = K;
    for(mask=(1<<K)-1;mask>=0;mask--){
        if(!bad[mask]){
            int cnt = 0;
            REP(i,K) if(mask&(1<<i)) cnt++;
            ans = min(ans, cnt);
        } else {
            REP(i,K) if(mask&(1<<i)) bad[mask^(1<<i)] = true;
        }
    }
    
    cout << ans << endl;
    
    return 0;
}
