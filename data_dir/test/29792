/// d.cpp

# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
const pair < int , int > DD[] = {{1,0},{1,1},{0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1}};
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < __typeof(v.x) > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vl vector < ll >
# define pll pair < ll , ll >
# define pii pair < int , int >
# define mp make_pair
# define db long double
# define fail puts("-1")
# define yes puts("YES")
# define no puts("NO")
# define PP puts("Possible")
# define II puts("Impossible")
# define vii vector < pii >
# define vll vector < ll >
# define pb push_back
# define pdd pair < db , db >
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n,m;
    fi>>n>>m;
    static int C[1 << 18][105];
    const int mod = 1e9 + 7;
    const int N = 2e5;
    const int K = 100;
    for (int i = 0;i <= N;++i)
        for (int j = 0;j <= min(i,K);++j)
            C[i][j] = (!i || !j ? 1 : C[i - 1][j] + C[i - 1][j - 1]) % mod;
    static int s[1 << 20];
    static int D[1 << 17][105];
    for (int i = 1;i <= n;++i)
        fi>>s[i];
    while (m --)
    {
        int l,r,k;
        fi>>l>>r>>k;
        k += 1;
        (D[l][k] += 1) %= mod;
        for (int i = 1;i <= k;++i)
            (D[r + 1][i] += mod - C[r - l + k - i][k - i]) %= mod;
    }
    for (int i = 1;i <= n;++i)
        for (int j = 102;j >= 0;--j)
            (D[i][j] += (j != 0) * D[i - 1][j]) %= mod,(D[i][j] += D[i][j + 1]) %= mod;
    for (int i = 1;i <= n;++i)
    {
        int ans = (s[i] + D[i][0]) % mod;
        fo << ans << " \n"[i == n];
    }
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}
