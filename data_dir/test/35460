#include <bits/stdc++.h>

using namespace std;

int pa[1000006],t[1000006];
vector<int> adj[1000006];
int st[1000006];
bool ok[1000000];
int sum;
int n;
int x,y;

int dfs(int node,int pa)
{
    int i;
    st[node]=t[node];
    int cur=-1;
    for(i=0;i<adj[node].size();i++)
    {
        if(adj[node][i]==pa)
            continue;
        int x=dfs(adj[node][i],node);
        if(cur==-1)
            cur=x;
        st[node]+=st[adj[node][i]];
    }
    if(cur==-1)
        ok[node]=1;
    if(st[node]==sum)
        return node;
    if(st[node]==sum*2&&cur!=-1)
    {
        x=node; y=cur;
    }
    return cur;
}

int main()
{
    cin >> n;
    int i;
    int root;
    for(i=1;i<=n;i++)
    {
        scanf("%d %d",&pa[i],&t[i]);
        sum+=t[i];
        if(pa[i]==0)
        { root=i; continue;}
        adj[pa[i]].push_back(i); adj[i].push_back(pa[i]);
    }
    if(sum%3)
    {
        cout << -1 << endl;
        return 0;
    }
    sum/=3;
    dfs(root,-1);
    if(x&&y)
    {
        cout << x << " " << y << endl;
        return 0;
    }
    vector<int> p;
    for(i=1;i<=n;i++)
    {
        if(i==root)
            continue;
        if(st[i]==sum&&ok[i])
            p.push_back(i);
    }
    if(p.size()<2)
    {
        cout << -1 << endl;
        return 0;
    }
    cout << p[0] << " " << p[1] << endl;
    return 0;
}
