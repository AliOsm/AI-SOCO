// I can't tell you what it really is,
// I can only tell you what it feels like.
#include "bits/stdc++.h"
using namespace std;
 
#define int long long
#define F first
#define S second
#define sz(x) ((int)x.size())
#define rep(i,a,n) for (int i = a; i <= n; ++i)
#define all(v)  v.begin(), v.end()
#define pb push_back
#define P pair < int, int >
#define E cout << '\n'

const int mod = 1e9 + 7;
const int N = (1<<22) + 5;

int a[N>>2];
int dp[N];
 
inline void solve() {
   int n;
   cin >> n;
   rep(i,1,n) {
    cin >> a[i];
    dp[a[i]] = a[i];
   }
   for (int i = 0; i < 22; ++i) {
    for (int mask=0; mask < N; ++mask) {
      if (mask & (1<<i)) {
        if(dp[mask^(1<<i)])
          dp[mask] = dp[mask^(1<<i)];        
      }
    }
   }
   // rep(i,34,100)
   // cout << dp[i] << ' ';
   // E;
   // make a tree for 7 in binary and flip bit one by one
   rep(i,1,n) {
    a[i] = ((1<<22)-1)^a[i];
    // cout << dp[a[i]] << '\n';
    if (!dp[a[i]])
      cout << "-1 ";
    else
      cout << dp[a[i]] << ' ';
   }
}
signed main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  int t = 1;
  //cin >> t; while(t--)
  solve();
  return 0;
}