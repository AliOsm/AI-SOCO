#include <bits/stdc++.h>
#define ff first
#define ss second
using namespace std;
#define MP make_pair
#define PB push_back
#define ll long long
#define int long long
#define f(i,x,n) for(int i=x;i<n;i++)
#define ld long double
int mod=1000000000000000000;
int n,m,k,q;
vector <int> gp[200005];
int b[200005];
int lim[200005];
set <int> se;
map <pair <int,int> , int> dp;
int dfs(int i,int j)
{
	if(j<0||j>100000000)
		return 1e15;
	// cout<<i<<" "<<j<<endl;
	if(lim[i]==1)
		return -1;
	if(dp.count({i,j})==1)
		return dp[{i,j}];
	dp[{i,j}]=0;
	int &an=dp[{i,j}];
	if(gp[i].size()==0&&se.count(j)==1)
	{
		return an=1+dfs(i+1,j);
	}
	else if(gp[i].size()==0)
	{
		// cout<<i<<endl;
		auto sett=se.begin();
		sett++;
		// cout<<*sett<<endl;
		return an=*sett-1+dfs(i+1,*sett)+1;
	}
	// cout<<"YAHAN"<<endl;
	int val1=abs(j-gp[i][0])+abs(gp[i][0]-gp[i][gp[i].size()-1]);
	int val2=abs(j-gp[i][gp[i].size()-1])+abs(gp[i][0]-gp[i][gp[i].size()-1]);
	auto val3=se.lower_bound(gp[i][gp[i].size()-1]);
	auto val4=se.lower_bound(gp[i][0]);
	if(lim[i+1]==1)
	{
		// cout<<val1<<" "<<val2<<endl;
		return an=min(val1,val2);
	}
	// cout<<*val3<<endl;
	// int vaa=*val3;
	// cout<<i+1<<" "<<vaa<<endl;
	// cout<<"YAHAN bhi"<<endl;
	an=abs(*val3-gp[i][gp[i].size()-1])+val1+dfs(i+1,*val3);
	an=min(an  , abs((*val4)-gp[i][0])+val2+dfs(i+1,*val4)  );
	val3--;
	val4--;
	an=min({ an,  abs(*val3-gp[i][gp[i].size()-1])+val1+dfs(i+1,*val3)  , abs(*val4-gp[i][0])+val2+dfs(i+1,*val4) } );
	return an=an+1;
}
int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin>>n>>m>>k>>q;
	f(i,0,k)
	{
		int r,c;
		cin>>r>>c;
		gp[r].push_back(c);
	}
	for(int i=200004;i>=0;i--)
	{
		if(gp[i].size()==0)
			lim[i]=1;
		else
			break;
	}
	f(i,1,200005)
		sort(gp[i].begin(),gp[i].end());
	se.insert(-mod);
	se.insert(+mod);
	f(i,0,q)
	{
		cin>>b[i];
		se.insert(b[i]);
	}
	// if(q==0&&lim[2]!=1)
	// 	cout<<
	cout<<dfs(1,1)<<endl;
	return 0;
}