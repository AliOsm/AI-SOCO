#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=2e5+50;
const int mod=1e9+7;
using namespace std;
int t,n,p,k,a[nmax],f[nmax],l,r,mid,rs,cur,i;
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>t;
	while(t--)
	{
		cin>>n>>p>>k;
		for(i=1;i<=n;i++)cin>>a[i];
		sort(a+1,a+n+1);
		for(i=1;i<=n;i++)
		{
			f[i]=a[i];
			if(i>k)f[i]+=f[i-k];
		}
		rs=0;
		for(i=0;i<=n;i++)
		{
			p-=a[i];
			if(p<0)break;
			l=1,r=(n/k)+5,cur=0;
			while(l<=r)
			{
				mid=(l+r)/2;
				if(i+mid*k>n || f[i+mid*k]-f[i]>p)r=mid-1;
				else cur=mid,l=mid+1;
			}
			rs=max(rs,i+cur*k);
		}
		cout<<rs<<'\n';
	}
	return 0;
}
