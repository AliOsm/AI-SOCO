#include <bits/stdc++.h>
using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,n,a) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll,int> pii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

template<typename T1,typename T2>
bool umin(T1 &x,const T2&y){
    if(x>y)return x=y,true;
    return false;
}
template<typename T1,typename T2>
bool umax(T1 &x,const T2&y){
    if(x<y)return x=y,true;
    return false;
}

const int maxn=(int)2e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18-1;
const ld pi=acos(-1.0);

ll a[maxn];
ld lg[maxn];

int n;
ll k,x;

void process(){
    multiset<pii> s;
    rep(i,0,n)s.insert(mp(abs(a[i]),i));
    while(k--){
        auto z=*s.begin();
        s.erase(z);
        z.fi+=x;
        s.insert(z);
    }
    for(auto z: s){
        int t=(a[z.se]>0)-(a[z.se]<0);
        if(t==0)t=1;
        a[z.se]=z.fi*t;
    }
}

int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios_base::sync_with_stdio(0);
    cin>>n>>k>>x;

    int A=0,B=0;
    int cnt=0;
    rep(i,0,n){
        cin>>a[i];
        if(a[i]<0)cnt++;
    }
    if(cnt%2==1){
        process();
    }else{
        int j=0;
        rep(i,0,n){
            if(abs(a[i])<abs(a[j]))j=i;
        }
        ll z=abs(a[j])/x+1;
        ll delta;
        if(a[j]<0)delta=z*x;
        else delta=-z*x;
        a[j]+=delta;
        if(z>k){
            a[j]-=delta;
            multiset<pii> s;
            rep(i,0,n)s.insert(mp(abs(a[i]),i));
            while(k--){
                auto z=*s.begin();
                if(z.fi==0)break;
                s.erase(z);
                z.fi-=x;
                s.insert(z);
            }
            for(auto z: s){
                int t=(a[z.se]>0)-(a[z.se]<0);
                a[z.se]=z.fi*t;
            }
        }else{
            k-=z;
            process();
        }
    }
    rep(i,0,n)cout<<a[i]<<' ';
    return 0;
}
