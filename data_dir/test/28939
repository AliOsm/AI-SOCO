#include<bits/stdc++.h>
using namespace std;
inline void read(int &x){
    register char c=getchar();
    x=0;
    for(;c<'0'||c>'9';c=getchar());
    for(;c>='0'&&c<='9';c=getchar())
        x=(x<<1)+(x<<3)+c-'0';
}
inline void read(long long &x){
    register char c=getchar();
    x=0;
    for(;c<'0'||c>'9';c=getchar());
    for(;c>='0'&&c<='9';c=getchar())
        x=(x<<1)+(x<<3)+c-'0';
}
long long a[100005],c[100005],z=0;
int b[100005],p[100005],r[100005];
int get(int x){
    if(x!=p[x])
        p[x]=get(p[x]);
    return p[x];
}
void unite(int x,int y){
    x=get(x);
    y=get(y);
    if(x!=y){
        if(r[x]==r[y])
            ++r[x];
        if(r[x]>r[y]){
            p[y]=x;
            a[x]+=a[y];
            z=max(z,a[x]);
        }
        else{
            p[x]=y;
            a[y]+=a[x];
            z=max(z,a[y]);
        }
    }
}
int main(){
    int n,i;
    read(n);
    for(i=1;i<=n;++i)
        read(a[i]);
    for(i=1;i<=n;++i)
        read(b[i]);
    for(i=n;i;--i){
        c[i]=z;
        p[b[i]]=b[i];
        z=max(z,a[b[i]]);
        if(p[b[i]-1])
            unite(b[i],b[i]-1);
        if(p[b[i]+1])
            unite(b[i],b[i]+1);
    }
    for(i=1;i<=n;++i)
        printf("%I64d\n",c[i]);
}
