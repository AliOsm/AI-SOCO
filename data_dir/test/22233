#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
const int inf_int=1000000000;
const ll inf_ll=100000000000000000;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define sp setprecision
void prin(vector<int>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<" ";
    }
}
void prin_new_line(vector<int>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
void prin(vector<ll>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<" ";
    }
}
void prin_new_line(vector<ll>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
int min(int a,int b,int c)
{
    return min(a,min(b,c));
}
ll min(ll a,ll b,ll c)
{
    return min(a,min(b,c));
}
int max(int a,int b,int c)
{
    return max(a,max(b,c));
}
ll max(ll a,ll b,ll c)
{
    return max(a,max(b,c));
}

double s_triangle(double x1,double y1,double x2,double y2,double x3,double y3)
{
    return (((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
double s_mnogou(vector<pair<double,double> >& a)
{
        double res=0;
        for(int i=1;i<a.size();i++)
        {
            res+=s_triangle(a[i].first,a[i].second,a[i-1].first,a[i-1].second,0,0);
        }
        res+=s_triangle(a[0].first,a[0].second,a[a.size()-1].first,a[a.size()-1].second,0,0);
        return res;
}

int union_segnebts(vector<pii> a)
{
    int n=a.size();
    vector<pair<int,bool> > b;
    for(int i=0;i<n;i++)
    {
        b.push_back({a[i].first,false});
        b.push_back({a[i].second,true});
    }
    sort(b.begin(),b.end());
    int result=0;
    int c=0;
    for(int i=0;i<b.size();i++)
    {
        if(i && c)
        {
            result+=b[i].first-b[i-1].first;
        }
        if(!b[i].second)
            c++;
        else
            c--;
    }
    return result;
}
void pok(vector<pii>& a)
{
    int n=a.size();
    vector<pair<pair<int,bool>,int> > b;
    for(int i=0;i<n;i++)
    {
            b.push_back({{a[i].first,false},i});
            b.push_back({{a[i].second,true},i});
    }
    sort(b.begin(),b.end());
    stack<int> ind;
    vector<bool> used(n,false);
    vector<int> ans;
    for(int i=0;i<b.size();i++)
    {
        int in=b[i].second;
        if(b[i].first.second==false)
        {
            ind.push(in);
        }
        else
        {
            if(used[in]==false)
            {
                ans.push_back(b[i].first.first);
                used[in]=true;
                while(!ind.empty())
                {
                    used[ind.top()]=true;
                    ind.pop();
                }
            }
            else
            {
                continue;
            }
        }
    }
    prin(ans);
}
ll pow(ll k)
{
    ll result=1;
    for(int i=0;i<k;i++)
    {
        result=result*10;
    }
    return result;
}
#define FILE "position"
#define debug 0
int main()
{
  //    freopen(FILE".in","r",stdin);
  //freopen(FILE".out","w",stdout);
    ios_base::sync_with_stdio(0);
     cin.tie(0);
     cout.tie(0);
     ll n,k;
     cin >> n >> k;
     ll dlina_bloka=n/k;
     ll a[dlina_bloka],b[dlina_bloka];
     for(int i=0;i<dlina_bloka;i++)
     {
         cin >> a[i];
     }
     for(int i=0;i<dlina_bloka;i++)
     {
         cin >> b[i];
     }
     ll ans[dlina_bloka];
     for(int i=0;i<n/k;i++)
     {
         ll x=1*pow(k);
         x--;
         ll ans1=x/a[i];
         ll ans2=(b[i]+1)*pow(k-1)-1;
         ll ans3=0;
         if(b[i]!=0)
         ans3=(b[i])*pow(k-1)-1;
         else
         ans3=0;
         ans2=ans2/a[i];
         ans3=ans3/a[i];
         dout << ans1<< " " << ans2 <<" "<< ans3<< endl;
         ll y=ans1-ans2+ans3;
         if(b[i]!=0)
            y++;
         ans[i]=y;
         dout << y << endl;
     }
     ll res=1;
     for(int i=0;i<n/k;i++)
     {
         ans[i]=ans[i]%1000000007;
         res=(res*ans[i])%1000000007;
     }
     cout << res;

}
