#include <string.h>
#include <algorithm>
#include <string>
#include <iostream>
#include <map>
#include <set>
#include <vector>

using namespace std;
const int maxn = 4e5+8;

int n,k;
long long a[maxn];
long long b[maxn];
long long maxb[maxn][20];
long long maxi[maxn][20];

inline void build(int len){
    for(int i=0;i<len;i++){
        maxi[i][0] = i;
        maxb[i][0] = b[i];
    }
    int seg = 32 - __builtin_clz(len);
    for(int j=1;j<seg;j++){
        for(int i=0;i<len;i++){
            if(maxb[i][j-1] < maxb[i+(1<<(j-1))][j-1]){
                maxb[i][j] = maxb[i+(1<<(j-1))][j-1];
                maxi[i][j] = maxi[i+(1<<(j-1))][j-1];
            }else{
                maxb[i][j] = maxb[i][j-1];
                maxi[i][j] = maxi[i][j-1];
            }
        }
    }
}
inline int query(int l,int r){
    int seg = 31 - __builtin_clz(r-l+1);
    if(maxb[l][seg] < maxb[r-(1<<seg)+1][seg]){
        return maxi[r-(1<<seg)+1][seg];
    }else{
        return maxi[l][seg];
    }
}

int main() {
    scanf("%d",&n);
    scanf("%d",&k);
    for(int i=0;i<n;i++){
        scanf("%I64d",&a[i]);
    }
    b[0] = 0;
    for(int i=0;i<k;i++){
        b[0] += a[i];
    }

    for(int i=1;i<n-k+1;i++){
        b[i] = b[i-1] - a[i-1] + a[i+k-1];
    }

    build(n-k+1);

    long long maxans = -1;
    int maxa,maxb;
    int ai,bi;

    for(int i=0;i<n-k-k+1;i++){
        ai = i;
        bi = query(i+k,n-k);
        if(b[ai] + b[bi] > maxans){
            maxans = b[ai] + b[bi];
            maxa = ai;
            maxb = bi;
        }
    }
    printf("%d %d\n",maxa+1,maxb+1);

    return 0;
}
