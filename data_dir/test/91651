#include <iostream>
#include <vector>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <algorithm>
#include <cassert>
#include <tuple>
#include <functional>
#include <unordered_set>
#include <unordered_map>
#include <sstream>
#include <stdio.h>


#define forn(i,n) for(int i=0;i<(int)(n); i++)
#define forsn(i,s,n) for(int i=(s);i<(int)(n); i++)
#define esta(x,v) (find((v).begin(),(v).end(),(x)) !=  (v).end())
#define index(x,v) (find((v).begin(),(v).end(),(x)) - (v).begin())
#define debug(x) cout << #x << " = "  << x << endl

typedef long long tint;
typedef unsigned long long utint;

using namespace std;

void imprimirVector (vector<int> v)
{
	if (!v.empty())
	{ 
		int p = v.size();
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int level (char q)
{
	vector<char> k1 = {'q','w','e','r','t','y','u','i','o','p'};
	vector<char> k2 = {'a','s','d','f','g','h','j','k','l',';'};
	if (esta(q,k1))
		return 0;
	else if (esta(q,k2))
		return 1;
	else
		return 2;
}

int position (char q)
{
	vector<char> k1 = {'q','w','e','r','t','y','u','i','o','p'};
	vector<char> k2 = {'a','s','d','f','g','h','j','k','l',';'};
	vector<char> k3 = {'z','x','c','v','b','n','m',',','.','/'};
	if (esta(q,k1))
		return index(q,k1);
	else if (esta(q,k2))
		return index(q,k2);
	else
		return index(q,k3);
	
}

int main()
{
	vector<string> keyboard (3);
	keyboard[0] = "qwertyuiop";
	keyboard[1] = "asdfghjkl;";
	keyboard[2] = "zxcvbnm,./";
	char shift;
	cin >> shift;
	string s;
	cin >> s;
	int largo = s.size();
	int movement = -1;
	if (shift == 'L')
		movement = 1;
	string ans = "";
	forn(i,largo)
		ans += keyboard[level(s[i])][position(s[i])+movement];
	cout << ans << endl;
	
	return 0;
}
