#include <bits/stdc++.h>
using namespace std;
typedef long long Long;

//const Long MX = ;

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cout.precision(10);
	cout << fixed;
	
	Long n;
	cin >> n;
	vector<Long> C(n,0);
	vector<Long> T(n,0);
	for(Long i = 0; i < n; i++) cin >> C[i];
	for(Long i = 0; i < n; i++) cin >> T[i];
	
	vector< pair<Long,Long> > ord;
	for(Long i = 0; i < n; i++){
		ord.push_back({C[i],T[i]});
	}
	
	sort(ord.begin(),ord.end());
	
	Long partial = 0;
	Long ans = 0;
	Long ac = 0;
	Long pos = 0;
	multiset<Long> ms;
	while(pos < n || !ms.empty()){
		if(ms.empty()){
			ac = ord[pos].first;
			while(pos < n && ac == ord[pos].first){
				ms.insert(ord[pos].second);
				partial += ord[pos].second;
				pos++;
			}
		}else{
			while(pos < n && ac == ord[pos].first){
				ms.insert(ord[pos].second);
				partial += ord[pos].second;
				pos++;
			}
		}
		ac++;
		auto it = ms.end();
		it--;
		partial -= (*it);
		ms.erase(it);
		ans += partial;
	}
	cout << ans << "\n";
	return 0;
}

