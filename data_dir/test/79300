#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
//#define int                 long long
#define ll              	long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
typedef tree<int,null_type,less<int>,
				rb_tree_tag,tree_order_statistics_node_update> statisticsTree;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=((res%p)*(x%p))%p;
		y=y>>1;
		x=((x%p)*(x%p))%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
int dp[105][60005];
int solve(int idx,int r,vector<pair<int,pair<int,int> > > &neg)
{
	if(idx==sz(neg)) return 0;
	else if(neg[idx].se.fi>r || r+neg[idx].se.se<0) return 0;
	else if(dp[idx][r]!=-1) return dp[idx][r];
	else
	{
		r=r+neg[idx].se.se;
		int tmp=0;
		for(int j=idx+1;j<sz(neg);j++)
		{
			tmp=max(tmp,solve(j,r,neg));
		}
		dp[idx][r-neg[idx].se.se]=tmp+1;
		return tmp+1;
	}
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out4.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>tests;
	Tests=tests;
	while(tests--)
	{
		int n,r;
		cin>>n>>r;
		vector<int> a(n),b(n);
		rep(i,n) cin>>a[i]>>b[i];
		vector<pair<int,int> > pos;
		vector<pair<int,pair<int,int> > > neg;
		rep(i,n)
		{
			if(b[i]>=0) pos.pb(mp(a[i],b[i]));
			else neg.pb(mp(-(a[i]+b[i]),mp(a[i],b[i])));
		}
		sort(all(pos));
		sort(all(neg));
		int cnt=0;
		rep(i,sz(pos))
		{
			if(pos[i].fi<=r)
			{
				r+=pos[i].se;
				cnt++;
			}
			else break;
		}
		int tmp=0;
		memset(dp,-1,sizeof dp);
		for(int i=0;i<sz(neg);i++)
		{
			tmp=max(tmp,solve(i,r,neg));
		}
		cnt+=tmp;
		if(cnt==n) cout<<"YES";
		else cout<<"NO";
	}
	return 0;
}