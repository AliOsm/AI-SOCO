#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("O3")
#pragma optimize("SEX_ON_THE_BEACH")
#include<bits/stdc++.h>

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;

namespace Hashes {
    const int mod197 = 1e9 + 7;
    const int mod199 = 1e9 + 9;
    const int modfft = 998244353;
    int MOD = mod197;

    template<typename T = int>
    struct Hash {
        T me, mod;

        Hash() {}
        Hash(T _me, T _mod = MOD) { me = _me, mod = _mod; if (me >= mod) me %= mod; }

        Hash operator+ (Hash to) {
            to.me += me;
            if (to.me >= to.mod)
                to.me -= to.mod;
            return to;
        }
        Hash operator- (Hash to) {
            to.me -= me;
            to.me *= -1;
            if (to.me < 0)
                to.me += to.mod;
            return to;
        }
        Hash operator* (Hash to) {
            to.me *= me;
            to.me %= to.mod;
            return to;
        }
        Hash& operator+= (Hash to) {
            me += to.me;
            if (me >= mod)
                me -= mod;
            return *this;
        }
        Hash& operator-= (Hash to) {
            me -= to.me;
            if (me < 0)
                me += mod;
            return *this;
        }
        Hash& operator*= (Hash to) {
            me *= to.me;
            me %= mod;
            return *this;
        }
        bool operator==(Hash to) {
            return me == to.me;
        }
        T operator*() {
            return me;
        }
    };
}

namespace someUsefull {
    template<typename T1, typename T2>
    inline void checkMin(T1& a, T2 b) {
        if (a > b)
            a = b;
    }

    template<typename T1, typename T2>
    inline void checkMax(T1& a, T2 b) {
        if (a < b)
            a = b;
    }
}

//name spaces
using namespace std;
using namespace Hashes;
using namespace someUsefull;
//end of name spaces

//defines
#define ff first
#define ss second
#define all(x) (x).begin(), (x).end()

#define NO cout << "NO" << '\n';
#define No cout << "No" << '\n';
#define YES cout << "YES" << '\n';
#define Yes cout << "Yes" << '\n';
//end of defines

//debug defines
#ifdef HOME
#define debug(x) cout << #x << " " << x << endl;
#define debug_p(x) cout << #x << " " << x.ff << " " << x.ss << endl;
#define debug_v(x) {cout << #x << "\t"; for (auto ioi : x) cout << ioi << "\t"; cout << endl;}
#define debug_vp(x) {cout << #x << " "; for (auto ioi : x) cout << '[' << ioi.ff << " " << ioi.ss << ']'; cout << endl;}
#define debug_v_v(x) {cout << #x << "/*\n"; for (auto ioi : x) { for (auto ioi2 : ioi) cout << ioi2 << " "; cout << '\n';} cout << "*/" << #x << endl;}
int jjj;
#define wait() cin >> jjj;
#define PO cout << "POMELO" << endl;
#define OL cout << "OLIVA" << endl;
#define gen_clock(x) ll x = clock(); cout << "Clock " << #x << " created" << endl;
#define check_clock(x) cout << "Time spent in " << #x << ": " << clock() - x << endl; x = clock();
#define reset_clock(x) x = clock();
#define say(x) cout << x << endl;
#else
#define debug(x) 0;
#define debug_p(x) 0;
#define debug_v(x) 0;
#define debug_vp(x) 0;
#define debug_v_v(x) 0;
#define wait() 0;
#define PO 0;
#define OL 0;
#define gen_clock(x) 0;
#define check_clock(x) 0;
#define reset_clock(x) 0;
#define say(x) 0;
#endif // HOME
//end of debug defines

void solve(int test) {
    int n;
    cin >> n;
    vector<ll> arr(n);
    for (int i = 0; i < n; ++i)
        cin >> arr[i];
    stack<pair<ll, ll>> was;
    vector<ll> left(n), right(n);
    for (int i = 0; i < n; ++i) {
        int mec = 1;
        if (i)
            left[i] = left[i - 1];
        while (was.size() && was.top().ss > arr[i]) {
            mec += was.top().ff;
            left[i] -= was.top().ff * was.top().ss;
            was.pop();
        }
        left[i] += arr[i] * mec;
        was.push({mec, arr[i]});
    }
    while (was.size())
        was.pop();
    for (int i = n - 1; i >= 0; --i) {
        if (i != n - 1)
            right[i] = right[i + 1];
        int mec = 1;
        while(was.size() && was.top().ss > arr[i]) {
            mec += was.top().ff;
            right[i] -= was.top().ff * was.top().ss;
            was.pop();
        }
        right[i] += arr[i] * mec;
        was.push({mec, arr[i]});
    }
    pair<ll, int> ans;
    for (int i = 0; i < n; ++i)
        checkMax(ans, pair<ll, int>{left[i] + right[i] - arr[i], i});
    vector<ll> a(n);
    a[ans.ss] = arr[ans.ss];
    for (int i = ans.ss - 1; i >= 0; --i) {
        a[i] = min(a[i + 1], arr[i]);
    }
    for (int i = ans.ss + 1; i < n; ++i)
        a[i] = min(a[i-1], arr[i]);
    for (int i : a)
        cout << i << " ";
}


signed main() {
    ios_base::sync_with_stdio(false);
    cout.tie(0);
    cin.tie(0);
    int t = 1;
    //cin >> t;
    for (int i = 0; i < t; ++i) {
        solve(i);
    }
    return 0;

}
/*

*/
