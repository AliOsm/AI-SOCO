//Link : https://codeforces.com/contest/1288/problem/D

#include <bits/stdc++.h>

using namespace std;
#define ll long long

#define N 300001
#define M 8
#define BIT (1<<M)
int ar[N][M];
int g[BIT];
void solve() {
  int n,m;scanf("%d %d ", &n,&m);
  int mini = 0;
  for(int i=1;i<=n;++i) {
    int tmp = 1e9;
    for(int j= 0;j<m;++j) {
      scanf("%d  ", &ar[i][j]);
      tmp = min(tmp,ar[i][j]);
    }
    mini = max(mini,tmp);
  }
  int l = mini ,r = 1e9,mid;
  int maxBit = (1<<m);
  while(l<r) {
    mid = (l+r+1)/2;
    memset(g,0,sizeof(g));
    for(int i=1;i<=n;++i) {
      int bit = 0;
      for(int j = 0;j<m;++j) {
        if(ar[i][j]>=mid) {
          bit |= (1<<j);
        }
      }
      g[bit] = 1;
    }
    if(g[maxBit-1]) {
      l = mid;continue;
    }
    bool isGood = false;
    for(int bit=1;bit<maxBit&&!isGood;++bit) {
      if(!g[bit]) {
        continue;
      }
      for(int jbit=bit+1;jbit<maxBit;++jbit) {
        if(g[jbit] && (bit | jbit) == maxBit-1) {
          isGood = true;
          break;
        }
      }
    }
    if(isGood) {
      l = mid;
    } else {
      r = mid-1;
    }
  }


  memset(g,0,sizeof(g));
  for(int i=1;i<=n;++i) {
    int bit = 0;
    for(int j = 0;j<m;++j) {
      if(ar[i][j]>=l) {
        bit |= (1<<j);
      }
    }
    g[bit] = i;
  }
  if(g[maxBit-1]) {
    int id = g[maxBit-1];
    printf("%d %d\n", id,id);
    return;
  }
  bool isGood = false;
  for(int bit=1;bit<maxBit&&!isGood;++bit) {
    if(!g[bit]) {
      continue;
    }
    for(int jbit=bit+1;jbit<maxBit;++jbit) {
      if(g[jbit] && (bit | jbit) == maxBit-1) {
        printf("%d %d\n", g[bit],g[jbit]);
        return;
      }
    }
  }

}
int main() {
    //freopen("input.txt","r",stdin);
    solve();
    return 0;
}
