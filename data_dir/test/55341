#pragma comment(linker, "/STACK:160777216")
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

set <int> pr[100100];
int a[100100];
int on[100100];
char s[3];
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif
	FOR(i,2,100100)
		a[i]=i;
	for (int i=2; i<100100; ++i)
		if (a[i]==i)
		{
			for (int j=i+i; j<100100; j+=i)
				a[j]=i;
		}
	int n,m;
	scanf("%d%d",&n,&m);
	FOR(i,0,m)
	{
		int v;
		scanf("%s%d",&s,&v);
		if (s[0]=='+')
		{
			if (on[v])
				printf("Already on\n");
			else
			{
				int bad=-1;
				int nv=v;
				while (nv>1)
				{
					if (pr[a[nv]].size())
					{
						bad=*pr[a[nv]].begin();
						break;
					}
					nv/=a[nv];
				}
				if (bad!=-1)
					printf("Conflict with %d\n",bad);
				else
				{
					on[v]=1;
					printf("Success\n");
					int nv=v;
					while (nv>1)
					{
						pr[a[nv]].insert(v);
						nv/=a[nv];
					}
				}
			}
		}
		else
		{
			if (on[v]==1)
			{
				on[v]=0;
				printf("Success\n");
				int nv=v;
				while (nv>1)
				{
					pr[a[nv]].erase(v);
					nv/=a[nv];
				}
			}
			else
				printf("Already off\n");
		}
	}
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
    return 0;
}