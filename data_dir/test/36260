#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
	// freopen("data.in", "rt", stdin);
	// freopen("data.out", "w", stdout);
	auto _start = chrono::high_resolution_clock::now();
#endif

	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(15);
	int n;
	cin >> n;
	vector<vector<int>> tree(n);
	for (int i = 1; i < n; i++) {
		int u, v;
		cin >> u >> v;
		u--; v--;
		tree[u].push_back(v);
		tree[v].push_back(u);
	}
	vector<int> a(n);
	for(int i = 0; i < n; i++) {
		cin >> a[i];
	}
	long long ans = 0;
	vector<long long> dp(n), pd(n);
	function<void(int, int)> dfs = [&](int u, int p) {
		for (int v : tree[u]) {
			if (v == p) continue;
			dfs(v, u);
			dp[u] = max(dp[u], dp[v]);
			pd[u] = max(pd[u], pd[v]);
		}
		long long tmp = a[u] + dp[u] - pd[u];
		tmp > 0 ? pd[u] += tmp : dp[u] -= tmp;
	};
	dfs(0, -1);
	cout << dp[0] + pd[0] << '\n';

#ifdef LOCAL_DEFINE
	auto _end = chrono::high_resolution_clock::now();
	cerr << "elapsed time: " << chrono::duration<double, milli>(_end - _start).count() << " ms\n";
#endif
	return 0;
}