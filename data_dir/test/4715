#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define vi vector<int>
#define vl vector<ll>
#define vp vector<pi>
#define vpl vector<pl>
#define pb push_back
#define INF 1000000005
#define LINF 1000000000000000005

int n,m,s[2005],t[2005],p[2005],st[2005],dp[2005];

char a[1005][1005];

vi g[2005];

int Par(int nod){
    if(p[nod]==p[p[nod]]) return p[nod];
    p[nod]=Par(p[nod]);
    return p[nod];
}

void Unite(int x, int y){
    x=Par(x); y=Par(y);
    if(st[x]<st[y]) swap(x,y);
    p[y]=x;
    if(st[x]==st[y]) st[x]++;
}

int32_t main(){
    seed_seq seq{
        (uint64_t) chrono::duration_cast<chrono::nanoseconds>(chrono::high_resolution_clock::now().time_since_epoch()).count(),
        (uint64_t) __builtin_ia32_rdtsc(),
        (uint64_t) (uintptr_t) make_unique<char>().get()
    };
    mt19937 rng(seq);
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
#ifdef LOCAL_DEFINE
    ifstream cin("input.in");
#endif
    cin >> n >> m;
    for(int i=1;i<=n+m;i++) p[i]=i;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cin >> a[i][j];
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(a[i][j]=='=') Unite(i,j+n);
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            int x=Par(i),y=Par(j+n);
            if(a[i][j]=='>') g[y].pb(x),s[x]++;
            if(a[i][j]=='<') g[x].pb(y),s[y]++;
        }
    }
    queue <int> q;
    for(int i=1;i<=n+m;i++){
        if(s[i]==0) q.push(i),dp[i]=1;
    }
    while(q.sz){
        int nod=q.front();
        q.pop();
        for(int j : g[nod]){
            s[j]--;
            if(s[j]==0) dp[j]=dp[nod]+1,q.push(j);
        }
    }
    for(int i=1;i<=n+m;i++){
        if(s[i]){
            cout << "No";
            return 0;
        }
    }
    for(int i=1;i<=n+m;i++) dp[i]=dp[Par(i)];
    cout << "Yes\n";
    for(int i=1;i<=n;i++) cout << dp[i] << ' ';
    cout << '\n';
    for(int i=n+1;i<=n+m;i++) cout << dp[i] << ' ';
    cout << '\n';
}
