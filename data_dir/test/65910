#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define pi 3.141592653589793238
// #define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int a[17][10005];
int dp[17][17][1<<17];
int mn[17][17];

signed main()
{
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);  
     cout.tie(0);   
 #ifndef ONLINE_JUDGE
    if(fopen("INPUT.txt","r"))
    {
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
    }
 #endif
 
// -------------------------------------Code starts here---------------------------------------------------------------------     

   int n,m;
   cin>>n>>m;
   for(int i=1;i<=n;i++)
      for(int j=1;j<=m;j++)
         cin>>a[i][j];
   fill_n(&mn[0][0],17*17,1e9);
   for(int i=1;i<=n;i++)
   {
      for(int j=1;j<=n;j++)
      {
         for(int k=1;k<=m;k++)
            mn[i][j]=min(mn[i][j],abs(a[i][k]-a[j][k]));
      }
   }
   int ans=0;

      for(int i=1;i<=n;i++)
      {
         for(int j=1;j<=n;j++)
         {
            for(int kk=0;kk<(1<<n);kk++)
               dp[i][j][kk]=0;
         }
      }

      for(int i=1;i<=n;i++)
      {
         dp[i][i][1<<(i-1)]=1e9;
         for(int j=0;j<(1<<n);j++)
         {
            for(int l=1;l<=n;l++)
            {
               for(int kk=1;kk<=n;kk++)
               {  
                  if(((1<<(kk-1))&j)==0)
                  {
                     int z=min(dp[i][l][j],mn[kk][l]);
                     dp[i][kk][j|(1<<(kk-1))]=max(z,dp[i][kk][j|(1<<(kk-1))]);
                  }
               }               
            }
         }
      }

      for(int i=1;i<=n;i++)
      {
         for(int j=1;j<=n;j++)
         {
               for(int k=2;k<=m;k++)
               {
                  dp[i][j][(1<<n)-1]=min(dp[i][j][(1<<n)-1],abs(a[j][k-1]-a[i][k]));
               }
               ans=max(ans,dp[i][j][(1<<n)-1]);
         }
      }

   cout<<ans;

   

// -------------------------------------Code ends here------------------------------------------------------------------
     clock_t clk;
 	clk = clock();
 
    clk = clock() - clk;
 	cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
 	return 0;
 }
 