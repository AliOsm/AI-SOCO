#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define sf(x) scanf("%d", &x);
#define sf2(x, y) scanf("%d %d", &x, &y);
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z);
#define sfll(x) scanf("%I64d", &x);
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y);
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z);
#define sfd(x) scanf("%f", &x);
#define pr(x) printf("%d ", x);

typedef long long ll;
using namespace std;
int n, m;
vector<string>a;
vector<vector<int> >vis;
int lev;
int mark(int i, int j) {
    int ret = 1;
    vis[i][j] = lev;
    for(int di = -1; di < 2; di++) {
        for(int dj = -1; dj < 2; dj++) {
            if((di || dj) && i + di >= 0 && i + di < n && j + dj >= 0 && j + dj < m && a[i + di][j + dj] == '1' && vis[i + di][j + dj] != lev) ret+=mark(i + di, j + dj);
        }
    }
    return ret;
}

vector<pair<pair<int, int>,int> >st;
bool valid(int i, int j) {
    return i >= 0 && i < n&& j >= 0 && j < m;
}

int get() {
    int ret = 0;
    for(int i = 0; i < st.size(); i++) {
        int w = 1, l = 1;
        int x = st[i].first.first, y = st[i].first.second;
        while(x + l < n && vis[x + l][y] == i + 1) l++;
        while(y + w < m && vis[x][y + w] == i + 1) w++;

        bool ok = (l>1 && w>1 && l == w && l * 4 - 4 == st[i].second);
        for(int j = 0; j < l && ok; j++) {
            if(!valid(x+l-1,y+j) || vis[x + l - 1][y + j] != i + 1 || !valid(x+j,y+l-1) || vis[x + j][y + l - 1] != i + 1) ok = 0;
        }

        ret += ok;

        w = l = 1;
        while(x + w < n && y + w < m && vis[x + w][y + w] == i + 1) w++;
        while(x + l < n && y - l >= 0 && vis[x + l][y - l] == i + 1) l++;

        ok = (l>1 && w>1 && l == w && l * 4 - 4 == st[i].second);
        for(int j = 0; j < l && ok; j++) {
            if(!valid(x + w - 1 + j, y + w - 1 - j) || vis[x + w - 1 + j][y + w - 1 - j] != i + 1 || !valid(x + l - 1 + j, y - l + 1 + j) || vis[x + l - 1 + j][y - l + 1 + j] != i + 1) ok = 0;
        }

        ret += ok;
    }
    return ret;
}

int main() {
    int t;
    sf(t);
    while(t--) {
        sf2(n, m);
        a.clear();
        a.resize(n);
        for(int i = 0; i < n; cin >> a[i++]);

        vis.clear();
        vis.resize(n, vector<int>(m, - 1));
        st.clear();
        lev = 1;
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                if(a[i][j] == '1' && vis[i][j] == -1) st.push_back({{i, j}, mark(i, j)}), lev++;
            }
        }

        cout << get() << endl;
    }
    return 0;
}