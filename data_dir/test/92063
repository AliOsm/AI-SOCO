#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long llu;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
const ll MOD = 1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;
priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v[300000];

piii vec[300000];
pii vv[300000];
pll psum[300001]; // 1-indexed
ll ans[300000];

int main() {
	int n, m;
	scanf("%d %d", &n, &m);

	for (int i = 0; i < n; i++) {
		scanf("%d %d", &vec[i].first.first, &vec[i].first.second);
		vv[i] = vec[i].first;
		vec[i].second = i;
	}

	int a, b;
	while (m--) {
		scanf("%d %d", &a, &b);
		a--; b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	sort(vec, vec + n, [](piii v1, piii v2) {
		return v1.first.first - v1.first.second < v2.first.first - v2.first.second;
	});

	for (int i = 0; i < n; i++) {
		psum[i + 1].first = psum[i].first + vec[i].first.first;
		psum[i + 1].second = psum[i].second + vec[i].first.second;
	}

	ll an = 0;
	for (int i = 0; i < n; i++) {
		an = psum[i].first;
		an += (ll)vec[i].first.second * i;

		an += psum[n].second - psum[i + 1].second;
		an += (ll)vec[i].first.first * (n - i - 1);
		for (int j = 0; j < sz(v[vec[i].second]); j++) {
			int t = v[vec[i].second][j];
			an -= min(vv[t].first + vec[i].first.second, vv[t].second + vec[i].first.first);
		}
		ans[vec[i].second] = an;
	}

	for (int i = 0; i < n; i++)
		printf("%lld ", ans[i]);
}