#include<bits/stdc++.h>

#define int long long
#define ll long long
#define pb push_back
#define F first
#define S second
#define ld  double


using namespace std;


const int MAXN = 1e5 + 10 ;

int arz[MAXN] , shib[MAXN] ;

int dq[MAXN] , s , e , ps[MAXN]  ;

int d[MAXN] , a[MAXN] , dp[111][MAXN];

int taq(int i , int j)
{
    return (arz[i]-arz[j])/(shib[j]-shib[i]);
}

void add(int i )
{
    while(e-s>1&&taq(i,dq[e-2])<taq(dq[e-1],dq[e-2]))
        e -- ;
    dq[e++] = i ;
}

int get(int x)
{
    while(e-s>1&&taq(dq[s],dq[s+1])<=x)
        s ++ ;
    return dq[s] ;
}

int32_t main()
{
    ios::sync_with_stdio(0);cin.tie(0);
    int n , m , p  ;
    cin >> n >> m >> p;
    for(int i = 1 ; i < n ; i ++ )
        cin >> d[i] , d[i] += d[i-1] ;

    int x , y ;
    for(int i = 0 ; i < m ; i ++ )
    {
        cin >> x >> y ; x -- ;
        a[i] = -d[x] + y ;
    }
    p = min(p,m);
   sort(a,a+m);
    int ss = 0 ;
    for(int i = 0 ; i < m ; i ++ )
        ss += a[i] , dp[0][i] = (i+1)*a[i] - ss , ps[i+1] = ss  ;
    for(int i = 1 ; i < p ; i ++ )
    {
        s = e = 0 ;
        arz[i-1] = -(dp[i-1][i-1] + ps[i]) ;
        shib[i-1] = (i-1);
        add(i-1);
        for(int j = i ; j < m ; j ++ )
        {
            int x = get(a[j]);
            dp[i][j] = dp[i-1][x] + (j-x)*a[j] - (ps[j+1]-ps[x+1]);
            arz[j] = -(dp[i-1][j]+ps[j+1]);
            shib[j] = j ;
            add(j);
        }
    }
    cout<<dp[p-1][m-1];




}
