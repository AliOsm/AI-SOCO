#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define ndl '\n'
#define mp make_pair
#define pb push_back
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set=tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<int,ull> piu;
typedef vector<vector<int>> matrix;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=5e5+123;
const int M=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

int z[N];

bool x[N];

void z_function(string s){
    int l=0,r=0;
    for(int i=1;i<sz(s);i++){
        if(i<=r){
            z[i]=min(r-i+1,z[i-l]);
        }
        while(i+z[i]<sz(s) && s[z[i]]==s[i+z[i]])z[i]++;
        if(i+z[i]-1>r){
            r=i+z[i]-1;
            l=i;
        }
    }
    for(int i=sz(s);i;i--){
        z[i]=z[i-1];
    }
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    string s,t;
    cin>>s>>t;
    if(sz(s)<sz(t)){
        cout<<s;
        return 0;
    }
    z_function(t);
    int ct1=count(all(t),'1'),ct0=sz(t)-ct1;
    int cs1=count(all(s),'1'),cs0=sz(s)-cs1;
    int p=-1;
    for(int i=1;i<=sz(t);i++){
        if(z[i]+i-1==sz(t)){
            p=z[i];
            break;
        }
    }
    if(p==-1){
        int i=0;
        while(i+sz(t)<=sz(s) && cs1>=ct1 && cs0>=ct0){
            cout<<t;
            cs1-=ct1;
            cs0-=ct0;
            i+=sz(t);
        }
        while(cs1--)cout<<1;
        while(cs0--)cout<<0;
        return 0;
    }
    int cf1=0,cf0=0;
    string f="";
    for(int i=p;i<sz(t);i++){
        cf1+=t[i]=='1';
        cf0+=t[i]=='0';
        f+=t[i];
    }
    //cout<<f<<endl;
    if(cs1>=ct1 && cs0>=ct0){
        cout<<t;
        cs1-=ct1;
        cs0-=ct0;
        int i=sz(t);
        while(i+sz(f)<=sz(s) && cs1>=cf1 && cs0>=cf0){
            cout<<f;
            cs1-=cf1;
            cs0-=cf0;
            i+=sz(f);
        }
        while(cs1--)cout<<1;
        while(cs0--)cout<<0;
    }
    else cout<<s;
    return 0;
}
