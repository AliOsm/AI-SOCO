/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 1e5 + 5, M = 1e6 + 5;
int n, k, t, delta, deg[N];
pair<int, int> route[M];
vector<int> adj[N];

void add(int u) {
	if (t > delta) {
		route[k] = route[k - 1];
		t = delta - deg[route[k].first];
		route[k++].second = t++;
	}
	route[k++] = {u, t++};
}

void dfs(int u, int par) {
	add(u);
	int en = t - 1;
	for (auto v: adj[u])
		if (v ^ par) {
			dfs(v, u);
			add(u);
		}
	if (en && t > en--)
		t = en, add(u);
}

void read_input() {
	cin >> n;
	for (int i = 1; i < n; i++) {
		int u, v;
		cin >> u >> v;
		deg[--u]++, deg[--v]++;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	delta = *max_element(deg, deg + n);
}

void write_output() {
	dfs(0, 0);
	cout << k << endl;
	for (int i = 0; i < k; i++)
		cout << route[i].first + 1 << ' ' << route[i].second << endl;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	read_input(), write_output();
	return 0;
}
