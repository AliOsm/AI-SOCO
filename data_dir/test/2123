#include <bits/stdc++.h>
#define base 1000000007LL
#define ll long long
#define ld double
#define X first
#define Y second
#define pb push_back
#define EPS 1e-9
#define all(a) (a).begin(), (a).end()
#define sz(a) int((a).size())
#define ms(s, n) memset(s, n, sizeof(s))
#define FOR(i,a,b) for (int i = (a); i <= (b); i++)
#define FORE(i,a,b) for (int i = (a); i >= (b); i--)
#define FORALL(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
using namespace std;
typedef pair<int, int> II;
typedef pair<II, int> III;

int n, N;
string name[110];
map<string, int> ma;
vector<string> a[110];
vector< vector<string> > res;

bool isPrefix(string &a, string &b)
{
    if (sz(b) <= sz(a)) return false;
    return a == b.substr(sz(b)-sz(a), sz(a));
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(NULL);
    //freopen("inp.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    cin >> n;
    FOR(i,1,n) {
        string s;
        cin >> s;
        if (!ma.count(s)) {
            ma[s] = ++N;
            name[N] = s;
        }
        int cs = ma[s];
        int m;
        cin >> m;
        FOR(i,1,m) {
            string s2;
            cin >> s2;
            a[cs].pb(s2);
        }
    }
    FOR(i,1,N) {
        vector<string> b;
        FOR(j,0,sz(a[i])-1) {
            bool co = true;
            FOR(k,j+1,sz(a[i])-1)
                if (a[i][j] == a[i][k]) {
                    co = false;
                    continue;
                }
            if (co) b.pb(a[i][j]);
        }
        a[i] = b;
        b.clear();
        b.pb(name[i]);
        FOR(j,0,sz(a[i])-1) {
            bool co = true;
            FOR(k,0,sz(a[i])-1)
                if (j != k) {
                    if (isPrefix(a[i][j], a[i][k])) {
                        co = false;
                        continue;
                    }
                }
            if (co) b.pb(a[i][j]);
        }
        res.pb(b);
    }
    cout << sz(res) << endl;
    FOR(i,0,sz(res)-1) {
        cout << res[i][0] << " ";
        cout << sz(res[i])-1 << " ";
        FOR(j,1,sz(res[i])-1) cout << res[i][j] << " ";
        cout << endl;
    }
    return 0;
}
