#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <queue>
#include <vector>
#define N 100020
#define K 120
using namespace std;

int a[N], d[N][K];
vector<int> e[N], v[K];
queue<int> q;

int main(void) // 986A.cpp
{
    int n, m, k, s;
    int i, j;
    int u, v;
    int x;
    long long o;

    scanf("%d %d %d %d", &n, &m, &k, &s);
    for(i = 1; i <= n; i ++)
        scanf("%d", &a[i]);
    for(i = 0; i < m; i ++)
    {
        scanf("%d %d", &u, &v);
        e[u].push_back(v);
        e[v].push_back(u);
    }

    for(i = 1; i <= n; i ++)
        ::v[a[i]].push_back(i);
    memset(d, 0x3f, sizeof d);
    for(i = 1; i <= k; i ++)
    {
        for(j = 0; j < (signed)::v[i].size(); j ++)
        {
            q.push(::v[i].at(j));
            d[::v[i].at(j)][i] = 0;
        }
        for(; !q.empty(); )
        {
            x = q.front();
            q.pop();

            for(j = 0; j < (signed)e[x].size(); j ++)
                if(d[x][i] + 1 < d[e[x].at(j)][i])
                {
                    q.push(e[x].at(j));
                    d[e[x].at(j)][i] = d[x][i] + 1;
                }
        }
    }

    for(i = 1; i <= n; i ++)
    {
        sort(d[i] + 1, d[i] + k + 1);
        for(j = 1, o = 0; j <= s; j ++)
            o += d[i][j];

        printf("%I64d ", o);
    }

    return 0;
}