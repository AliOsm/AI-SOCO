#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <immintrin.h>

#define pb push_back
#define F first
#define S second
#define ll long long
#define FILE "parking"
#define ld long double
#define endl '\n'
//#define int long long
#define pii pair <int, int>

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4")


using namespace std;
using namespace __gnu_pbds;
typedef tree <pii,null_type,less<pii>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

const int N = 1e5 + 5;
const ll mod = 1e9 + 7;
const ll mod1 = 1e9 + 9;
const int rx[8] = {1, -1, 0, 0, 1, 1, -1, -1};
const int ry[8] = {0, 0, 1, -1, 1, -1, 1, -1};
const ld pi = acos(-1.0);
const ll kek = 227;
const int B = (int)sqrt(N);

int a[N];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    srand(time(0));
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    // freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
#endif // LOCAL
   int n;
   cin >> n;
   string s;
   cin >> s;
   sort(s.begin(), s.end());
   cout << s << endl;
}
