#include<bits/stdc++.h>
using namespace std;

#define MX 1005
#define MAX 500005
int deg[MX];
bool Mark[MAX+10];

void sieve(){
    Mark[0] = 1;
    Mark[1] = 1;
    for (long long i = 2; i <= MAX; i++){
        if (!Mark[i]){
            for (long long j = i*i; j <= MAX; j += i){
                Mark[j] = 1;
            }
        }
    }
}

int main()
{
    sieve();
    int n; scanf("%d", &n);
    int edges = 0;
    vector < pair < int, int > > ans;
    for (int i = 1; i <= n; i++){
        if (i == n){
            ans.push_back(make_pair(i, 1));
            deg[i]++;
            deg[1]++;
        }
        else{
            ans.push_back(make_pair(i, i+1));
            deg[i]++;
            deg[i+1]++;
        }
        edges++;
    }

    if (Mark[edges]){
        bool prime = false;
        for (int i = 1; i <= n; i++){
            for (int j = 1; j <= n; j++){
                if (i != j && (i+1 != j && j+1 != i && i != (j+1) % n && j != (i+1) % n) && !Mark[deg[i]+1] && !Mark[deg[j]+1]){
                    deg[i]++;
                    deg[j]++;
                    edges++;
                    ans.push_back(make_pair(i, j));
                    if (!Mark[edges]){
                        prime = true;
                        break;
                    }
                }
            }
            if (prime) break;
        }
    }

    printf("%d\n", edges);
    for (int i = 0; i < edges; i++){
        printf("%d %d\n", ans[i].first, ans[i].second);
    }

    return 0;
}
