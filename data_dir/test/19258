#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define REP(i,b) for(int i=0;i<b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())

#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);
const int N = 5001;
short int dp[N][N][3];
short int n , q;
pair<short int,short int>ara[N];

short int Max(short int A,short int B)
{
    if(A > B)return A;
    else return B;
}
short int call(short int pos,short int done,short int miss)
{
    if(miss > 2)return -10000;
    if(pos == q + 1){
        if(miss == 2)return 0;
        else return -10000;
    }
    if(dp[pos][done][miss] != -1)return dp[pos][done][miss];
    short int ret = call(pos + 1,done,miss + 1);
    if(ara[pos].first > done){
        short int cc = ara[pos].second - ara[pos].first + 1;
        ret = Max(ret,cc + call(pos + 1,ara[pos].second,miss));
    }
    else if(ara[pos].second > done){
        short int cc = ara[pos].second - done;
        ret = Max(ret,ara[pos].second - done + call(pos + 1,ara[pos].second,miss));
    }else{
        ret = max(ret,call(pos + 1,done,miss));
    }
    return dp[pos][done][miss] = ret;
}
bool cmp(pair<short int,short int>a,pair<short int,short int>b)
{
    if(a.first == b.first)return a.second > b.second;
    return a.first < b.first;
}
int main()
{
    MEM(dp,-1);
    cin >> n >> q;
    for(int i = 1;i <= q;i++){
        cin >> ara[i].first >> ara[i].second;
    }
    sort(ara + 1,ara + q + 1,cmp);
    cout << call(1,0,0) << "\n";


}
