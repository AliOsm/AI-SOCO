#include <iostream>
#include <iomanip>
#include <sstream>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <climits>
#include <cctype>
#include <set>
#include <limits>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<t; i++)
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define pb push_back
#define ri(x) scanf("%d", &x)
#define rii(x,y) scanf("%d %d", &x, &y)
#define SYNC ios_base::sync_with_stdio(false)

typedef long long ll;

vector<int> p;
bool sieve[101];
void fillSieve(){
	ms(sieve,true);
	sieve[0] = sieve[1] = false;
	for(int i=2; i<101; i++){
		if(sieve[i]){
			p.pb(i);
			for(int j=i+i; j<101; j+=i)
				sieve[j] = false;
		}
	}
}

int main(){
	fillSieve();
	/*
	FOR(i,0,p.size()){
		printf("%d: %d\n",i+1, p[i]);
	}
	return 0;*/
	bool prime = true;
	char resp[10];
	FOR(i,0,4){
		printf("%d\n",p[i]*p[i]);
		fflush(stdout);
		scanf("%s",resp);
		if(resp[0] == 'y') prime = false;
	}
	if(!prime){
		printf("composite\n");
		fflush(stdout);
		return 0;
	}
	int cnt = 0;
	FOR(i,0,16){
		printf("%d\n",p[i]);
		fflush(stdout);
		scanf("%s",resp);
		if(resp[0] == 'y') cnt++;
	}
	if(cnt>=2) prime = false;
	if(!prime){
		printf("composite\n");
		fflush(stdout);
		return 0;
	}else{
		printf("prime\n");
		fflush(stdout);
		return 0;
	}


}

