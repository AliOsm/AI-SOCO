#define _CRT_SECURE_NO_DEPRECATE
#include <ctime>
#include <float.h>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <cstring>
#include <cstdio>
#include <iomanip>
using namespace std;
#define pb push_back
#define inf 1000000000
#define L(s) (int)(s).size()
#define rp(i,n) for(int (i)=0;(i)<(n);++(i))
#define C(a) memset((a),0,sizeof(a))
#define ll long long
#define all(c) (c).begin(), (c).end()
#define VI vector<int>
#define mp make_pair
#define pii pair<int,int>
#define x first
#define y second
#define uint unsigned int
#define ull unsigned ll
#define eps 1e-12
#define b(x) (1<<(x))
#define pdd pair<double, double>
#define pi 3.14159265358979323846
int cnt[111111];
int n, m;
pii pos[111111];
pair<int, pii> srt[111111];
inline void upd() {
  sort(srt, srt + m);
  for (int i = 0; i < m; ++i) {
    if (i && srt[i - 1].x == srt[i].x)
      ++cnt[srt[i].y.y];
    if (i < m - 1 && srt[i + 1].x == srt[i].x)
      ++cnt[srt[i].y.y];
  }
}
int main() {
  scanf("%d%d", &n, &m);
  for (int i = 0; i < m; ++i) {
    scanf("%d%d", &pos[i].x, &pos[i].y);
  }

  for (int i = 0; i < m; ++i) {
    srt[i] = mp(pos[i].x, mp(pos[i].y, i));
  }
  upd();

  for (int i = 0; i < m; ++i) {
    srt[i] = mp(pos[i].y, mp(pos[i].x, i));
  }
  upd();

  for (int i = 0; i < m; ++i) {
    srt[i] = mp(pos[i].x + pos[i].y, mp(pos[i].y, i));
  }
  upd();

  for (int i = 0; i < m; ++i) {
    srt[i] = mp(pos[i].x - pos[i].y, mp(pos[i].y, i));
  }
  upd();

  int ans[9];
  C(ans);
  for(int i = 0; i < m; ++i) {
    ans[cnt[i]]++;
  }
  for(int i = 0; i < 9; ++i) {
    if (i) printf(" ");
    printf("%d", ans[i]);
  }
  printf("\n");
  return 0;
}
