#pragma GCC optimize("Ofast")
#pragma GCC optimize("SEX_ON_THE_BEACH")
//	#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")
//#pragma GCC optimize("fast-math")
#define _CRT_SECURE_NO_WARNINGS
#include <set>
#include <map>
#include <deque>
#include <cmath>
#include <queue>
#include <random>
#include <cstring>
#include <bitset>
#include <time.h>
#include <string>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <iomanip>
#include <cassert>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
#define itn int
#define endl '\n'
#define mp make_pair
#define pbc push_back
#define pob pop_back()
#define empb emplace_back
#define sp system("pause")
#define queuel queue<long long>
#define matrix vector<vector<ll>>
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define pin(p) cin >> p.first >> p.second;
#define rev(v) reverse(v.begin(), v.end());
#define mx(v) max_element(v.begin(), v.end());
#define mn(v) min_element(v.begin(), v.end());
#define dig(c) (c >=' 0' && c <= '9') ? 1 : 0
#define sout(s, c) for (auto i : s) cout << i << c;
#define pout(p) cout << p.first << " " << p.second;
#define er(v, l, r) erase(v.begin() + l, v.begin() + r);
#define vin(v) for (ll i = 0; i < v.size(); ++i) cin >> v[i];
#define vout(v, c) for (int i = 0; i < v.size(); ++i) cout << v[i] << c;
#define pushi(v, a) for (int i = 0; i < a.size(); ++i) v.push_back(a[i]);
#define fastio() ios_base::sync_with_stdio(0); cout.tie(0); cin.tie(0);
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
using namespace std;
/*▄███████▀▀▀▀▀▀███████▄
░▐████▀▒ЗАПУСКАЕМ▒▀██████▄
░███▀▒▒▒▒▒ДЯДЮ▒▒▒▒▒▒▀█████
░▐██▒▒▒▒▒БОГДАНА▒▒▒▒▒████▌
░▐█▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌
░░█▒▄▀▀▀▀▀▄▒▒▄▀▀▀▀▀▄▒▐███▌
░░░▐░░░▄▄░░▌▐░░░▄▄░░▌▐███▌
░▄▀▌░░░▀▀░░▌▐░░░▀▀░░▌▒▀▒█▌
░▌▒▀▄░░░░▄▀▒▒▀▄░░░▄▀▒▒▄▀▒▌
░▀▄▐▒▀▀▀▀▒▒▒▒▒▒▀▀▀▒▒▒▒▒▒█
░░░▀▌▒▄██▄▄▄▄████▄▒▒▒▒█▀
░░░░▄█████████████  █▒▒▐▌
░░░▀███▀▀████▀█████▀▒▌
░░░░░▌▒▒▒▄▒▒▒▄▒▒▒▒▒▒▐
░░░░░▌▒▒▒▒▀▀▀▒▒▒▒▒▒▒▐*/
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
//++--++--++--++--++--++--++--++--++--+--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
const int MAXN = 20088;
const ll inf = 1000000001;
const ll INF = 2e18;
const ld EPS = 1e-7;
const ll mod = inf + 6;
const ld PI = acos(-1.0);
vector<int> mult(vector<int> a, vector<int> b)
{
	vector<int> nw(a.size());
	for (int i = 0; i < a.size(); ++i)
	{
		nw[i] = a[b[i] - 1];
	}
//	vout(nw, ' ');//	sp;
	return nw;
}
vector<int> rep(vector<int> a)
{
	vector<int> p(a.size());
	for (int i = 0; i < a.size(); ++i)
	{
		p[a[i] - 1] = i + 1;
	}
	return p;
}
vector<int> bl[500];
int kekb[(int)2e5 + 1];
signed main()
{
	fastio();
	//vector<int> aaa(6);
	//vector<int> bbb(6);
//	vin(aaa); vin(bbb);
//	mult(aaa, bbb);
	int n, m;
	scanf("%d%d", &n, &m);
	vector<int> a(n);
	vector<int> b(n);
	for (int i = 0; i < n; ++i) scanf("%d", &a[i]);
	for (int i = 0; i < n; ++i) scanf("%d", &b[i]);
	vector<int> tb = rep(a);
	b = mult(tb, b);
	for (int i = 0; i < n; ++i) kekb[i] = b[i];
	int l = 9;
	int sz = (1 << l);
	int M = (sz - 1);
	for (int i = 0; i < n; ++i)
	{
		bl[i >> l].pbc(kekb[i]);
	}
	for (auto & i : bl) sort(all(i));
	for (int i = 0; i < m; ++i)
	{
		int t;
		scanf("%d", &t);
		if (t == 1)
		{
			int l1, r1, l2, r2;
			scanf("%d%d%d%d", &l1, &r1, &l2, &r2);
			l2--; r2--;
			int ans = 0;
			
			for (int i = l2; i <= r2; ++i)
			{
				if (i && (i & M) == 0 && (i >> l) != (r2 >> l))
				{
					ans += upper_bound(all(bl[i >> l]), r1) - lower_bound(all(bl[i >> l]), l1);
					i += M;
				}
				else
				{
					ans += (kekb[i] >= l1 && kekb[i] <= r1);
				}
			}
			printf("%d\n", ans);
		}
		else
		{
			int x, y;
			scanf("%d%d", &x, &y); x--; y--;
			int bff = (x >> l), bss = (y >> l);
			int fff = kekb[x], sss = kekb[y];
			swap(kekb[x], kekb[y]);
			bl[bff].erase(find(all(bl[bff]), fff));
			bl[bff].insert(lower_bound(all(bl[bff]), sss), sss);
			bl[bss].erase(find(all(bl[bss]), sss));
			bl[bss].insert(lower_bound(all(bl[bss]), fff), fff);
		}
	}
	//sp;
}