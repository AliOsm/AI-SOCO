#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
#define dbl(k, x) fixed << setprecision(k) << (x)

template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define _upgrade ios_base::sync_with_stdio(0);
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int main()
{
    _upgrade
    
    int q; cin >> q;
    while(q--)
    {
        int n; cin >> n;
        vector < LL > v(n);
        for(int i = 0; i < n; i++)
            cin >> v[i];
        sort(all(v));
        bool can;
        bool ok = false;
        do {
            //for(auto x: v) cout << x << " "; cout << "\n";
            can = false;
            for(int i = 0; i + 1 < sz(v); i++)
            {
                if(v[i] == v[i + 1] && v[i] < 2048)
                {
                    v[i] *= 2;
                    swap(v[i + 1], v.back());
                    v.pop_back();
                    can = true;
                    break;
                }
            }
            sort(all(v));
        } while(can);
        for(int i = 0; i < sz(v); i++)
            if(v[i] == 2048) ok = true;
        cout << (ok ? "YES\n" : "NO\n");
    }

	return 0;
}