#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <vector>
using namespace std;
typedef unsigned long long LL;
const int N = 405;
int n , m;
int row[N][N] , col[N][N];
int a[N][N] , b[N][N];
char str[N][N];
int main () {
#ifndef ONLINE_JUDGE
	freopen ("input.txt" , "r" , stdin);
	// freopen ("output.txt" , "w" , stdout);
#endif
	scanf ("%d %d" , &n , &m);
	for (int i = 1 ; i <= n ; i ++) {
		scanf ("%s" , str[i] + 1);
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			row[i][j] = row[i][j - 1] + str[i][j] - '0';
		}
	}
	for (int j = 1 ; j <= m ; j ++) {
		for (int i = 1 ; i <= n ; i ++) {
			col[i][j] = col[i - 1][j] + str[i][j] - '0';
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			a[i][j] = a[i - 1][j - 1] + str[i][j] - '0';
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			b[i][j] = b[i - 1][j + 1] + str[i][j] - '0';
		}
	}
	int ans = 0;
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i - d >= 1 && j - d >= 1 ; d ++) {
				if (row[i][j] - row[i][j - d - 1]) continue;
				if (col[i][j] - col[i - d - 1][j]) continue;
				if (b[i][j - d] - b[i - d - 1][j + 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i - d >= 1 && j + d <= m ; d ++) {
				if (row[i][j + d] - row[i][j - 1]) continue;
				if (col[i][j] - col[i - d - 1][j]) continue;
				if (a[i][j + d] - a[i - d - 1][j - 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i + d <= n && j + d <= m ; d ++) {
				if (row[i][j + d] - row[i][j - 1]) continue;
				if (col[i + d][j] - col[i - 1][j]) continue;
				if (b[i + d][j] - b[i - 1][j + d + 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i + d <= n && j - d >= 1 ; d ++) {
				if (row[i][j] - row[i][j - d - 1]) continue;
				if (col[i + d][j] - col[i - 1][j]) continue;
				if (a[i + d][j] - a[i - 1][j - d - 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i - d >= 1 && j + d <= m && j - d >= 1 ; d ++) {
				if (row[i][j + d] - row[i][j - d - 1]) continue;
				if (a[i][j + d] - a[i - d - 1][j - 1]) continue;
				if (b[i][j - d] - b[i - d - 1][j + 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i + d <= n && j + d <= m && j - d >= 1 ; d ++) {
				if (row[i][j + d] - row[i][j - d - 1]) continue;
				if (a[i + d][j] - a[i - 1][j - d - 1]) continue;
				if (b[i + d][j] - b[i - 1][j + d + 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i - d >= 1 && i + d <= n && j - d >= 1 ; d ++) {
				if (col[i + d][j] - col[i - d - 1][j]) continue;
				if (a[i + d][j] - a[i - 1][j - d - 1]) continue;
				if (b[i][j - d] - b[i - d - 1][j + 1]) continue;
				ans ++;
			}
		}
	}
	for (int i = 1 ; i <= n ; i ++) {
		for (int j = 1 ; j <= m ; j ++) {
			for (int d = 1 ; i - d >= 1 && i + d <= n && j + d <= m ; d ++) {
				if (col[i + d][j] - col[i - d - 1][j]) continue;
				if (a[i][j + d] - a[i - d - 1][j - 1]) continue;
				if (b[i + d][j] - b[i - 1][j + d + 1]) continue;
				ans ++;
			}
		}
	}
	printf ("%d\n" , ans);
	return 0;
}