//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define sz(x) (int)(x).size()
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int _i = 0; _i < (n); _i++) ni(a[_i])
#define nal(a, n) for (int _i = 0; _i < (n); _i++) nl(a[_i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const ll INF = 1e16 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
int nx[MAXN][26];

void solve() {
  string s; cin >> s;
  string t; cin >> t;
  int ms = 0, mt = 0;
  int n = sz(s), m = sz(t);
  for (int i = 0; i < m; i++)
    mt |= (1<<(t[i]-'a'));
  for (int j = 0; j < 26; j++)
    nx[n][j] = -1;
  for (int i = n-1; ~i; i--) {
    ms |= (1<<(s[i]-'a'));
    for (int j = 0; j < 26; j++)
      nx[i][j] = nx[i+1][j];
    nx[i][s[i]-'a'] = i;
  }
  if ((mt & ms) != mt) {
    cout << "-1\n";
    return;
  }
  int ans = 1, cur = 0;
  for (int i = 0; i < m; i++) {
    if (nx[cur][t[i]-'a'] == -1)
      ans++, cur = 0;
    cur = nx[cur][t[i]-'a'] + 1;
  }
  cout << ans << "\n";
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int t; cin >> t; while (t--) solve();
  return 0;
}
