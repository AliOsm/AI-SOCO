#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 2e5+50;
const int oo = 1e9;
const int mod = 1e9+7;

vector<int> g[N];
int p[N],c[N],a[N];

void dfs(int u,int par){
	for(int i=0;i<g[u].size();i++){
		int v = g[u][i];
		if(v == par)continue;
		c[u]++;
		p[v] = u;
		dfs(v,u);
	}
}

int main(){
	int n;
	cin>>n;
	for(int i=0;i<n-1;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for(int i=0;i<n;i++)scanf("%d",a+i);
	if(a[0]!=1){
		puts("No");
		return 0;
	}
	dfs(1,0);
	queue<int> q;
	q.push(1);
	for(int i=1;i<n;i++){
		if(p[a[i]] != q.front()){
			puts("No");
			return 0;
		}
		if(!(--c[p[a[i]]]))q.pop();
		if(c[a[i]])q.push(a[i]);
	}
	puts("Yes");
}