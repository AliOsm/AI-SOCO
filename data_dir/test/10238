//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>

const int maxn=(int)(21);
const ll mod=(ll)(1e9+7);
int a[maxn];

ll fact[maxn];
ll dp[maxn][maxn],c[maxn][maxn];

void build()
{
    c[0][0]=1;

    for(int i=1;i<maxn;i++)
    {
        c[i][0]=1;

        for(int j=1;j<=i;j++)
        {
            c[i][j]=c[i-1][j]+c[i-1][j-1];
        }
    }
}

ll solve(vector<int> &cnt,int num)
{
   // cout<<num<<endl;

   for(int i=0;i<=10;i++)
   {
       for(int j=0;j<maxn;j++)
       {
           dp[i][j]=0;
       }
   }

   dp[0][0]=1;

    for(int i=1;i<=10;i++)
    {
        int st=(i==num)?0:cnt[i]>0?1:0,en=(i==num?cnt[i]-1:cnt[i]);

      //  cout<<i<<" "<<st<<" "<<en;

       for(int k=st;k<=en;k++)
       {
           for(int j=0;j+k<maxn;j++)
           {
               dp[i][j+k]+=(dp[i-1][j]*c[j+k][k]);
           }
       }
    }

    ll ret=0;

    for(int i=0;i<maxn;i++)
    {
        ret+=dp[10][i];
    }

    return ret;
}

int main()
{
    build();

    ios_base::sync_with_stdio(0);

    string s;cin>>s;

    int n=s.size();vector<int> cnt;

    cnt.resize(11);

    for(int i=0;i<n;i++)
    {
        cnt[s[i]-'0'+1]++;
    }

    ll res=0;

    for(int i=2;i<=10;i++)
    {
        if(cnt[i]>0)
        {
            res+=solve(cnt,i);
        }
    }

    cout<<res<<endl;return 0;
}
