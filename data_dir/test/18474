#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
 
using namespace std;
 
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

set <pnt > s1;
set <pair<pnt,int> > s2;
int main()
{
#ifdef Fcdkbear
    double beg=clock();
	freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
#endif

	int n,m,x,y;
	string s;
	cin>>n>>m>>x>>y>>s;
	int num=0;
	if (x==1)
		s[0]='D';
	if (x==n)
		s[0]='U';
	if (y==1)
		s[1]='R';
	if (y==m)
		s[1]='L';
	if (s[0]=='U')
		num+=2;
	if (s[1]=='L')
		num++;

	LL val=(n*1ll*m);
	LL tot=val/2+(val&1);
	val=((n-2)*1ll*(m-2));
	tot-=(val/2+(val&1));
	if ((x&1)!=(y&1))
		tot=n+n+m+m-4-tot;
	bool f=true;
	LL res=1;
	while (1)
	{
		s1.insert(mp(x,y));
		if (s1.size()==tot)
			break;
		if (s2.find(mp(mp(x,y),num))!=s2.end())
		{
			f=false;
			break;
		}
		s2.insert(mp(mp(x,y),num));
		int dist=1000000000;
		if ((num>>1)&1)
			dist=MIN(dist,x-1);
		else
			dist=MIN(dist,n-x);
		if ((num)&1)
			dist=MIN(dist,y-1);
		else
			dist=MIN(dist,m-y);
		if ((num>>1)&1)
			x-=dist;
		else
			x+=dist;
		if ((num)&1)
			y-=dist;
		else
			y+=dist;
		res+=dist;
		if ((x==1) || (x==n))
			num^=2;
		if ((y==1) || (y==m))
			num^=1;
	}
	if (f)
		cout<<res<<endl;
	else
		cout<<-1<<endl;
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
    return 0;
}