#include<iostream>
#include<vector>
using namespace std;
int a[1020] , num = 0;
long long d = 0 , ans;
vector <int> adj[1020];
bool mark[1020];
void DFS(int v);
int main(){
	
	int n , m , k , x , y , maxx = 0;
	cin >> n >> m >> k;
	
	for(int i = 0 ; i < k ; i++)	cin >> a[i];
	
	for(int j = 0 ; j < m ; j++){
		cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	
	for(int i = 0 ; i < k ; i++){
		num = 0;
		d = 0;
		DFS(a[i]);
		if(num){
			ans += (num*(num - 1)/2	- d/2);
		}
		if(num > maxx)	maxx = num;
	}
	
	for(int i = 1 ; i <= n ; i++){
		if(!mark[i]){
			num = 0;
			d = 0;
			DFS(i);
			ans += (num*(num - 1)/2	- d/2);
			ans += num*maxx;
			maxx += num;
		}
	}
	
	cout << ans;
	
}
void DFS(int v){
	
	mark[v] = true;
	num ++;
	d += adj[v].size();
	
	for(int i = 0 ; i < adj[v].size() ; i++){
		if(!mark[adj[v][i]]){
			DFS(adj[v][i]);
		}
	}
	
}