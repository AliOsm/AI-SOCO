#include <bits/stdc++.h>

using namespace std;
int ans=0;
vector<int> adj[1005];
int color[1005];
int ans2;
int bipartite(int s, int c = 0){
	queue<int> q;

	int u, v;
	color[s] = c;
	q.push(s);
	while(!q.empty()){
		u = q.front();
		q.pop();
		for(int i = 0; i < adj[u].size ( ); i++){
			v = adj[u][i];
			if(color[v] == -1){
				color[v] = 1 - color[u];
				q.push(v);
			}
			else {
				if (color[v] != 1-color[u])ans++;
			}
		}
	}
	return ans;

}
int main()
{
    int n,m,u,v;
    cin>>n>>m;
    for(int i=0 ;i<m;i++)
    {
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    memset(color , -1 , sizeof(color));
    for(int i=1 ;i<=n;i++)
    {
        if(color[i]==-1)
            bipartite(i);
    }
    if((n-(ans/2))&1)
       ans++;
    cout<<ans/2+ans%2;

    return 0;
}