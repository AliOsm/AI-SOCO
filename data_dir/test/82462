//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef pair<ll, ll> ii;
typedef pair<ll, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}



map<ll, ll> DP;
map<iii, ll>DP2;


ll dp(ll n){
	if(n <= 1)	return 1;
	if(DP.find(n) != DP.end())	return DP[n];
	return DP[n] = 2*dp(n/2)+1;
}

ll calc(ll n, ll l, ll r){

	if(l > r)	return 0;
	if(n == 1)	return 1;
	if(n == 0)	return 0;

	if(DP2.find(iii(n, ii(l, r))) != DP2.end())
		return DP2[iii(n, ii(l, r))];
	
	ll half = dp(n/2);
	if(r <= half)	return calc(n/2, l, r);
	if(l >= half+2)	return calc(n/2, l-half-1, r-half-1);
	if(r == half+1)	return (n%2)+calc(n/2, l, half);
	if(l == half+1)	return (n%2)+calc(n/2, 1, r-1-half);
	return DP2[iii(n, ii(l, r))] = calc(n/2, l, half) + (n%2) + calc(n/2, 1, r-(half+1));
}



int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);

    ll n, l, r;
    cin>>n>>l>>r;
    cout<<calc(n, l, r);
    return 0;
}

