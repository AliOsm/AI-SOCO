#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>

using namespace std;

typedef pair<int,int> ii;
typedef pair<long long,long long> ll;
typedef pair<long long,ll> lll;
typedef pair<int,ii> iii;
long long mod = 1000000007LL;
int n;
vector<vector<int> > adj;
vector<int> c;
vector<int> dp;
int dfs(int u,int pa){
	if(c[u]==0) dp[u]=1;
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j];
		if(v!=pa){
			dp[u]+=dfs(v,u);
		}
	}
	return dp[u];
}

vector<int> path;
int go(int u,int pa){
	int cnt = 0;
	path.push_back(u);
	cnt++;
	for(int j=0;j<(int)adj[u].size();j++){
		int v = adj[u][j];
		if(v!=pa){
			if(dp[v]!=0){
				cnt+=go(v,u);
				path.push_back(u);
				cnt++;
			}
		}
	}
	if(u!=0){
		if((c[u]+cnt)%2==0){
			path.push_back(pa);
			path.push_back(u);
			return 1;
		}else{
			return 0;
		}
	}
	cnt--;
	if((c[u]+cnt)%2==0){
		int v = adj[u][0];
		path.push_back(v);
		path.push_back(u);
		path.push_back(v);
	}
	return 0;

}
int main(){
	cin>>n;
	c.assign(n,0);
	for(int i=0;i<n;i++){
		cin>>c[i];
		if(c[i]==-1) c[i]=0;
	}
	//c[0]=1-c[0];
	adj.assign(n,vector<int>(0,0));
	for(int i=0;i<n-1;i++){
		int x,y;
		cin>>x>>y;
		x--;y--;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	dp.assign(n,0);
	dfs(0,-1);
	if(dp[0]==0){
		cout<<1<<endl;
	}else{
		go(0,-1);
		for(int i=0;i<(int)path.size();i++){
			cout<<path[i]+1<<" ";
		}
	}
	return 0;
}

