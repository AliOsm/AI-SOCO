#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

#define all(v) (v).begin(), (v).end()
using namespace std;

void solve()
{
    int no_of_elements, distance;
    cin >> no_of_elements >> distance;

    vector <int> X(no_of_elements + 1, 0);
    priority_queue <int> Q;
    for(int i = 1; i <= no_of_elements; i++)
    {
        cin >> X[i];

        Q.push(-1*X[i]);
    }

    sort(all(X));

    int explosions = 0;
    for(int i = no_of_elements; i >= 1; i--)
    {
        while(X[i] == X[i - 1])
        {
            i--;
        }


        if(X[i] - explosions*distance > 0)
        {
            explosions++;
        }
    }

    cout << explosions << "\n";
}

int main()
{
    int no_of_test_cases;
    cin >> no_of_test_cases;

    while(no_of_test_cases--)
        solve();

    return 0;
}
