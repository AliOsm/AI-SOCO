/*
ID: xildar91
PROG: humble
LANG: C++11
*/
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()

template<typename T,typename T1>
void prin(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}
/*
template<typename T,typename T1>
void prin(set<pair<T,T1> >& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout <<it->fi <<" "<<it->se<<"\n";
    }
}*/
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
        else
            cout <<"\n";
    }
}
template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}

long double s_triangle(long double x1,long double y1,long double x2,long double y2,long double x3,long double y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
bool overflow(ll a,ll b)
{
    if(a*b/b!=a)
        return true;
    return false;
}



#define x1 gfgs
#define y1 asd
#define rank asdsad
bool debug=0;
const int maxn=1e5+100;
ll mod=1e9+7;
vector<int> a;
vector<pii> t(4*maxn);
void build(int v,int tl,int tr)
{
    if(tl==tr)
        t[v]={a[tl],tl};
    else
    {
        int tm=(tl+tr)>>1;
        build(v<<1,tl,tm);
        build(v<<1|1,tm+1,tr);
        t[v]=max(t[v<<1],t[v<<1|1]);
    }
}
pii get(int v,int tl,int tr,int l,int r)
{
    if(l>r)
        return {-inf_int,-inf_int};
    if(tl==l && tr==r)
    {
        return t[v];
    }
    else
    {
        int tm=(tl+tr)>>1;
        return max(get(v<<1,tl,tm,l,min(r,tm)),get(v<<1|1,tm+1,tr,max(tm+1,l),r));
    }


}

void solve()
{
    int n;
    cin >> n;
    a.resize(n);
    for(int i=0;i<n-1;i++)
    {
        cin >> a[i];
        a[i]--;
    }
    build(1,0,n-1);
    vector<ll> dp(n);
    dp[n-1]=0;
    ll ans=0;
    for(int i=n-2;i>=0;i--)
    {
        int l=i+1,r=a[i];
        auto id=get(1,0,n-1,l,r);
        int m=id.se;
        dp[i]=dp[m]-(a[i]-m)+n-i-1;
        ans+=dp[i];
    }
    cout << ans;

}









#define FILE "bridges"
int main()
{

    //    freopen("hh.txt","r",stdin);
     //   freopen("output.txt","w",stdout);

       //  freopen(FILE".in","r",stdin);
       //  freopen(FILE".out","w",stdout);
       if(!debug)
       {
            ios_base::sync_with_stdio(0);
            cin.tie(0);
           cout.tie(0);
       }
        int t=1;
        while(t--)
            solve();
        return 0;
}
