#include <bits/stdc++.h>
using namespace std;

const int MAXVAL=10000*10000+99;
const int MX=5009;

struct my_set
{
    //bitset<MAXVAL> B;
    bool B[MAXVAL];
    vector<int> pos;
    //int size=0;

    my_set():
        pos(vector<int>())
    {
        memset(B, false, MAXVAL);
    }



    void insert(int val)
    {
        if(B[val]==false)
        {
            B[val]=true;
            //size++;
            pos.push_back(val);
        }
    }

    inline int size()
    {
        return pos.size();
    }

    void clear()
    {
        for(auto p: pos)
        {
            B[p]=false;
        }
        //size=0;
        pos.clear();
    }
};

int factor(int N)
{
    int result=1;

    for(int i=2; i*i<=N; i++)
    {
        int ctr=0;
        while(N%i==0)
        {
            N/=i;
            ctr++;
        }
        if(ctr%2==1)
        {
            result*=i;
        }
    }
    if(N!=1) result*=N;
    return result;
}

int n;
int a[MX];
//vector<int> p[MX];
int p[MX];
int ans[MX];

my_set pos, neg;

int main()
{
    cin >> n;
    for(int i=0; i<n; i++)
    {
        cin >> a[i];
        if(a[i]!=0)
        {
            p[i]=factor(abs(a[i]));
        }
    }

    for(int start=0; start<n; start++)
    {
        //set<vector<int>> pos, neg;
        //unordered_set<vector<int>> pos, neg;
        //unordered_set<int> pos, neg;
        //set<int> pos, neg;

        pos.clear();
        neg.clear();

        for(int finish=start; finish<n; finish++)
        {
            if(a[finish]>0)
            {
                pos.insert(p[finish]);
            }
            else if(a[finish]<0)
            {
                neg.insert(p[finish]);
            }

            int res=pos.size()+neg.size();
            res=max(res, 1);
            ans[res]++;

            //cout << start << ' ' << finish << endl;
            //cout << pos.size() << ' ' << neg.size() << endl;
            //cout << res << endl;
        }
    }

    for(int i=1; i<=n; i++) cout << ans[i] << ' ';

    return 0;
}
