#include<bits/stdc++.h>
#define LL long long
#define fi first
#define se second
#define mk make_pair
#define PII pair<int, int>
#define y1 skldjfskldjg
#define y2 skldfjsklejg
using namespace std;

const int N = 2e5 + 7;
const int M = 1e7 + 7;
const int inf = 0x3f3f3f3f;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1000000007;

int n, m, k, tot, deg[N], x[N], y[N], head[N];
vector<int> ans;
bool is[N];

set<PII> Set;

struct {
    int to, nx, f;
} edge[N << 1];

void add(int u, int v) {
    edge[tot].to = v;
    edge[tot].nx = head[u];
    edge[tot].f = 0;
    head[u] = tot++;
}

void del(int u) {
    Set.erase(mk(deg[u], u));
    deg[u]--;
    Set.insert(mk(deg[u], u));
}

void work() {
    while(!Set.empty() && Set.begin()->fi < k) {
        int u = Set.begin()->se;
        Set.erase(mk(deg[u], u));
        for(int i = head[u]; ~i; i = edge[i].nx) {
            int v = edge[i].to;
            if(edge[i].f || is[v]) continue;
            del(v);
        }
        is[u] = true;
    }
}

int main() {
    memset(head, -1, sizeof(head));
    scanf("%d%d%d", &n, &m, &k);
    for(int i = 0; i < m; i++) {
        scanf("%d%d", &x[i], &y[i]);
        add(x[i], y[i]); add(y[i], x[i]);
        deg[x[i]]++; deg[y[i]]++;
    }

    for(int i = 1; i <= n; i++) Set.insert(mk(deg[i], i));

    work();

    for(int i = m - 1; i >= 0; i--) {
        edge[i<<1].f = edge[i<<1|1].f = 1;
        ans.push_back(Set.size());
        int u = x[i], v = y[i];
        if(!is[u] && !is[v]) {
            del(u); del(v);
        }
        work();
    }

    reverse(ans.begin(), ans.end());
    for(int t : ans) printf("%d\n", t);
    return 0;
}

/*
*/
