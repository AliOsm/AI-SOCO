#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define oo 666666666

ll rem[5001][5001];

int main()
{
    ios::sync_with_stdio(0);cin.tie(0);
    ll n,m,T;
    cin>>n>>m>>T;
    vector<vector<pair<ll,ll>>>G(n+1);
    vector<vector<pair<ll,ll>>>R(n+1);
    vector<int>in(n+1);
    for(int j=0; j<m; j++)
    {
        int u,v,w;
        cin>>u>>v>>w;
        G[u].push_back({w,v});
        R[v].push_back({w,u});
        in[v]++;
    }

    queue<int>q;
    for(int i=2; i<=n; i++)
        if(in[i]==0)q.push(i);

    while(!q.empty())
    {
        int c = q.front();
        q.pop();
        for(auto& u : G[c])
            if(u.second!=1 && --in[u.second]==0)q.push(u.second);
    }

    rem[1][1]=T+1;
    vector<int> ats;
    q.push(1);

        while(!q.empty())
    {
        int c = q.front();

        if(c==n)
        {
            ats.push_back(n);
            int v = 1;
            for(int j=n; j>=1; j--)
                if(rem[c][j] > 0)
            {
                v=j;
                break;
            }

            while(c!=1)
            {
                for(auto&u : R[c])
                    if(rem[u.second][v-1] - u.first == rem[c][v])
                    {
                        c=u.second;
                        v--;
                        ats.push_back(c);
                        break;
                    }
            }
            reverse(ats.begin(),ats.end());
            break;
        }

        q.pop();
        for(auto& u : G[c])
            {
                for(int v = 1; v<=n; v++)
                    rem[u.second][v+1]=max(rem[u.second][v+1],rem[c][v] - u.first);

                if(--in[u.second]==0)
                    q.push(u.second);
            }
    }

    cout<<ats.size()<<"\n";
    for(int&x:ats)cout<<x<<" ";
}
