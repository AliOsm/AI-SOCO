/*
	Practice, Practice, Practice.
*/
#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353  
#define inf 1e9
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 400005
vector<int> v[mx];
int axe[mx],why[mx];
void no()
{
	cout << "NO";
	exit(0);
}
int n,d,k;
int cnt = 0;
vector<pair<int,int> > edg;
void dfs(int x,int d1,int d2,int p)
{
	if(d1 < 0 || d2 < 0)
		return ;
	while(cnt < n && d1 > 0 && d2 > 0 && v[x].size() < k)
	{
	//	cout << x << " "<<cnt+1<<endl;
		v[x].pb(++cnt);
		v[cnt].pb(x);
	}
	//cout << x << " " << d <<" " << p <<  endl; 
	for(auto i : v[x])
	{
		if(i == p)
			continue;
		if(i <= d + 1)
		{
			dfs(i,axe[i],why[i],x);
		}
		else
		dfs(i,d1 - 1,d2 - 1,x);
	//	cout << x <<" " << i << endl;
		edg.pb({i,x});
	}
}
main()
{
	fast;
	
	cin >> n >> d >> k;
	if(d > n - 1)
	{
		no();
	}
	if(n > 2 && k == 1)
	{
		no();
	}
	fl(i,1,d + 1)
	{
		v[i].pb(i+1);
		v[i+1].pb(i);
		axe[i] = i - 1;
		why[i] = d - i + 1;
	//	cout << i << " " << axe[i] << " "<< why[i] << endl;
	}
	axe[d + 1] = d;
	why[d + 1] = 0;
	cnt = d + 1;
	int cent = cnt / 2 + (cnt&1);
	dfs(cent,cent - 1,d - cent + 1,0);
	if(cnt < n)
		no();
	cout <<"YES"<<endl;
	for(auto i : edg)
	{
		cout << i.ff << " " << i.ss << endl;
 	}
}