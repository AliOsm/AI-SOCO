#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define EPS 1e-7
#define PI  3.1415926535897932384626433832795028841971693993
#define DEG_to_RAD(X)   (X * PI / 180)

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};  
//////////////////////

string s,p;
int n,m;

int a[2010];
int pd[2020][2020]; //qletra, qrmove

int func( int pos, int rem )
{
    //printf("%d %d\n",pos,rem);
    if( pos >= n ) 
    {
        if(rem) return -INF;
        else return 0;
    }

    if( pd[pos][rem] != -1 ) return pd[pos][rem];
    int ret = -INF;
    
    ret = max(ret,func(pos+1,rem));
    
    if( rem ) ret = max( ret, func(pos+1,rem-1) );

    if( rem >= (a[pos]-m) && a[pos] )
    {
        ret = max( ret, 1+func(pos+a[pos],rem-(a[pos]-m)) );
    }
    return pd[pos][rem] = ret;
}

int acha( int pos )
{
    int i = pos;
    int j = 0;
    while(j<p.size() && i<s.size())
    {
        if(s[i]==p[j]) j++;
        i++;
    }
    if(j==p.size()) return i-pos;
    else return 0;
}

int main()
{
    ios::sync_with_stdio(0);
    cin >> s >> p;
    n = s.size();
    m = p.size();
    for(int i=0;i<s.size();++i) a[i] = acha(i);
    memset(pd,-1,sizeof pd);
    for(int i=0;i<=n;++i) printf("%d ",func(0,i));
    //printf("%d\n",func(0,4));

    printf("\n");


    return 0;
}