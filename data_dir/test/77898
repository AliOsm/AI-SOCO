#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define ii pair<int,int>
#define mp make_pair
using namespace std;
#define MAX_N 105
ll mod = 1e9+7;
ll Momo;
ll bigmod(ll b,ll p ,ll m)
{
    if(p==0)
        return 1;
    if(p%2 == 0)
    {
        ll temp = bigmod(b,p/2,m);
        return (temp*temp)%m;
    }
    return (bigmod(b,p-1,m)*(b%m))%m;
}
struct Matrix
{
    ll mat[MAX_N] ;
    Matrix()
    {
        memset(mat,0,sizeof(mat));
    }
};
Matrix matMul(Matrix a , Matrix b, ll po)
{
    Matrix ans ;
    int i,j;
    for(i=0; i<MAX_N; i++)
        for(j=0; j<MAX_N; j++)
        {
            ll k = bigmod(10,po,Momo);
            k = k*i;
            k%=Momo;
            k+=j;
            k%=Momo;
            ans.mat[k] += a.mat[i]*b.mat[j];
            ans.mat[k] %= mod;
        }
    return ans;
}

ll n,b,k;
int a[200];
Matrix F[60];
int main()
{
    cin>>n>>b>>k>>Momo;
    for(int i=0; i<n; i++)
    {
        int c;
        scanf("%d",&c);
        a[c]++;
    }
    for(int i=0; i<=100; i++)
    {
        F[0].mat[i%Momo] += a[i];
    }
    Matrix ans;
    int po = 0;
    ll cnt = 1;
    for(int i=1; i<60; i++)
    {
        F[i] = matMul(F[i-1],F[i-1],cnt);
        cnt = cnt*2;
    }
    int ok = 0;
    for(int i=0; i<30; i++)
    {
        if(b & (1<<i))
        {
            if(ok)
            {
                Matrix ans2 = matMul(F[i],ans,po);
                ans = ans2;
            }
            else
            {
                ans = F[i];
            }
            ok = 1;
            po+=(1<<i);

        }
    }
    cout<<ans.mat[k];
}
