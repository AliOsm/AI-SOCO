#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 1e5 + 5;

int main() {
	ios::sync_with_stdio(false); cin.tie(nullptr);
	
	int k;
	cin >> k;

	vector< vector< pair< int, int>>> layers;
	layers.push_back({{1, 1}});

	int n = 2;
	for (int i = 0; ; i++) {
		vector< pair< int, int>> nxt;
		int m = layers[i].size();

		int sum = 0;
		for (int j = 0; j < m; j++) {
			int s = layers[i][j].first;
			sum += s;
			n++;
			nxt.push_back({s, n});
		}
		n++;
		nxt.push_back({sum, n});
		layers.push_back(nxt);

		if (sum >= k) break;
	}

	cout << n << "\n";
	vector< string> ans(n, string(n, 'N'));

	for (int i = 0; i + 1 < layers.size(); i++) {

		int z = layers[i + 1].back().second;
		for (int j = 0; j < layers[i].size(); j++) {
			int u = layers[i][j].second, v = layers[i + 1][j].second;
			ans[u - 1][v - 1] = ans[v - 1][u - 1] = 'Y';
			ans[u - 1][z - 1] = ans[z - 1][u - 1] = 'Y';
		}
	}

	for (int i = layers.back().size() - 1; i >= 0; i--) {
		int s = layers.back()[i].first, u = layers.back()[i].second;

		if (s <= k) {
			k -= s;
			ans[u - 1][1] = ans[1][u - 1] = 'Y';
		}
	}

	for (auto s : ans) cout << s << "\n";
}