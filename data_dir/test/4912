#include <bits/stdc++.h>
using namespace std;

bool straight[4][200000], from_left[4][200000], from_above[4][200000], from_below[4][200000];
void solve(){
    int N;
    string S[3];
    cin >> N >> S[1] >> S[2];
    bool straight[3][N] = {0};
    for(int i=1; i<=2; i++) for(int j=0; j<N; j++) straight[i][j] = (S[i][j] <= '2');
    for(int i=1; i<=2; i++) for(int j=0; j<=N; j++) from_left[i][j] = from_above[i][j] = from_below[i][j] = 0;
    from_left[1][0] = 1;
    for(int j=0; j<N; j++) for(int t=0; t<2; t++) for(int i=1; i<=2; i++){
        if(from_left[i][j]){
            if(straight[i][j]){
                from_left[i][j+1] = 1;
            }else{
                from_below[i-1][j] = 1;
                from_above[i+1][j] = 1;
            }
        }
        if(from_above[i][j] && !straight[i][j]) from_left[i][j+1] = 1;
        if(from_below[i][j] && !straight[i][j]) from_left[i][j+1] = 1;
    }
    cout << (from_left[2][N] ? "YES" : "NO") << endl;
}

int main(){
    int Q;
    cin >> Q;
    while(Q--) solve();
    return 0;
}
