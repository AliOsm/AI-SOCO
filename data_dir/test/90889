#include <bits/stdc++.h>
#include <map>
using namespace std;
#define ll long long
#define se second
#define fi first
#define mk(a, b) make_pair(a, b)
#define pb push_back
#define vi vector<int>
#define vvi vector<vector<int>>
#define pii pair<int, int>
#define vvpi vector<vector<pii>>
#define pli pair<ll, int>
#define INF 1 << 29
#define MOD 1000000007
#define MAX (int)1e5 + 5
#define FI freopen("i.txt", "r", stdin);
#define FO freopen("o.txt", "w", stdout);
#define edge pair<int, pair<int, int>>
/*int dx[] = {1, 0, -1, 0};
int dy[] = {0, 1, 0, -1}; // 4 Direction*/
/*int dx[]={1,1,0,-1,-1,-1,0,1};
int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction*/
/* int dx[] = { 2,1,-1,-2,-2,-1,1,2 };
int dy[] = { 1,2,2,1,-1,-2,-2,-1};//Knight Direction
*/
int n, m, k;

bool vis[26], vis2[1001];
int main() {
 
  string s1, s2;
  cin >> s1 >> s2;
  bool ans = 1;
  if (s1.size() != s2.size()) {
    cout << -1 << endl;
    return 0;
  }
  vector<pair<char, char>> v;
  for (int i = 0; i < s1.size(); i++) {
    if (vis2[i] == 1)
      continue;
    if (vis[s1[i] - 'a'] == 1)
      continue;
    if (s1[i] == s2[i]) {
      vis[s1[i] - 'a'] = 1;
      vis2[i] = 1;
    } else {
      int c = s1[i] - 'a';
      int c2 = s2[i] - 'a';
      if (vis[c] || vis[c2]) {
        ans = 0;
        break;
      }
      vis[c] = 1;
      vis[c2] = 1;
      for (int j = 0; j < s2.size(); j++) {
        if (vis2[j])
          continue;
        if (s2[j] == c + 'a') {
          vis2[j] = 1;
          s2[j] = c2 + 'a';
        } else if (s2[j] == c2 + 'a') {
          vis2[j] = 1;
          s2[j] = c + 'a';
        }
      }
      v.push_back(mk(c + 'a', c2 + 'a'));
    }
  }

  if (s1 == s2 && ans) {
    cout << v.size() << endl;
    for (int i = 0; i < v.size(); i++) {
      cout << v[i].fi << " " << v[i].se << endl;
      ;
    }
  } else {
    cout << "-1" << endl;
  }
  // system("pause");
}