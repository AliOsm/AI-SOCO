#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <cassert>
#include <ctime>


using namespace std;

#ifdef WIN32
  #define LLD "%I64d"
#else
  #define LLD "%lld"
#endif

typedef pair<int, int> pii;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<ll> vll;
typedef vector<vll> vvll;

ll rdtsc() {
  ll tmp;
  asm("rdtsc" : "=A"(tmp));
  return tmp;
}

inline int myrand() {
  return abs((rand() << 15) ^ rand());
}

inline int rnd(int x) {
  return myrand() % x;
}

#define TASKNAME "text"
#define pb push_back
#define mp make_pair
#define EPS (1e-9)
#define INF ((int)1e9)
#define sqr(x) ((x) * (x))         
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#define sz(x) ((int)(x).size())

const int maxn = 100;
long long a[maxn];

bool solve() {
  long long p, q;
  int n;
  if (scanf(LLD LLD "%d", &p, &q, &n) < 3)
    return 0;
  for (int i = 0; i < n; ++i)
    assert(scanf(LLD, &a[i]) == 1);
  
  if (n > 1 && a[n - 1] == 1)
    --n, a[n - 1] += a[n];
  for (int i = 0; i < n; ++i) {
    if (q == 0) {
      printf("NO\n");
      return 1;
    }
    long long c = p / q;
    if (c != a[i]) {
      printf("NO\n");
      return 1;
    }
    p -= q * a[i]; 
    swap(p, q);
  }
  
  printf(q ? "NO\n" : "YES\n");
  return 1;
}

int main() {
  srand(rdtsc());
#ifdef DEBUG
  freopen(TASKNAME".in", "r", stdin);
  freopen(TASKNAME".out", "w", stdout);
#endif
  
  while (1) {
    if (!solve())
      break;
    #ifdef DEBUG
      eprintf("%.18lf\n", (double)clock() / CLOCKS_PER_SEC);
    #endif
  }
  return 0;
}
