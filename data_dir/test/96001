#include<bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef vector<pair<int,int> > vp;
#define pb push_back
#define mp make_pair
#define ll long long
#define rep(i,n) for(int i=0;i<n;i++)
#define MOD 1000000007
#define N 110
int mat[N][N], A[N], B[N];
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int n,m;
	cin>>n>>m;
	for(int i=0;i<n;i++)cin>>A[i];
	for(int j=0;j<m;j++)cin>>B[j];
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			mat[i][j] = (1 << 30) - 1;
	for(int bts = 0;bts<30;bts++){
		vector<int> rws;
		vector<int> cols;	
		vector<int> rt,ct;

		for(int i=0;i<n;i++){
			if(m % 2){
				if(!(A[i] & (1<<bts)))
					rws.pb(i);
				else
					rt.pb(i);
			}
			else{
				if(A[i] & (1<<bts))
					rws.pb(i);
				else
					rt.pb(i);
			}
		}
		for(int i=0;i<m;i++){
			if(n % 2){
				if(!(B[i] & (1<<bts)))
					cols.pb(i);
				else
					rt.pb(i);
			}
			else{
				if(B[i] & (1<<bts))
					cols.pb(i);
				else
					rt.pb(i);
			}
		}
		int x = fabs((int)rws.size() - (int)cols.size());
		if(x % 2){
			cout<<"NO\n";
			return 0;
		}	
		else{
			for(int i=0;i<min(rws.size(),cols.size());i++)
				mat[rws[i]][cols[i]] = mat[rws[i]][cols[i]] ^ (1 << bts);
			if(rws.size() < cols.size()){
				for(int i=rws.size();i<cols.size();i++)
					mat[0][cols[i]] = mat[0][cols[i]] ^ (1<<bts);
			}
			else if(cols.size() < rws.size()){
				for(int i=cols.size();i<rws.size();i++)
					mat[rws[i]][0] = mat[rws[i]][0] ^ (1<<bts);
			}
		}
	}
	cout<<"YES\n";
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++)
			cout<<mat[i][j]<<" ";
		cout<<'\n';
	}


	
}