#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
const char dl='\n';
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
string s,t;
int n,m,k;
//ÏÎÄÓÌÀÉ ßÊÈÉ ÊÎÍÒÅÉÍÅÐ ÏÎÒÐ²ÁÅÍ!!!
stack<char>STACK;
deque<char>DEQUE;
queue<char>QUEUE;
////////////////////////////////////
vector<int>g[100005];
pii p[100005];
set<int>ans;
int was[100005];
void dfs(int v)
{
	if(was[v])return;
	was[v]=1;
	int sons=0,disrespect=0;
	for(auto it:g[v])
	{
		if(!was[it])
		{
			sons++;
			disrespect+=p[it].s;
			dfs(it);
		}
	}
	if(sons==disrespect&&p[v].s==1)
		ans.insert(v);
}
main()
{
	FX iOS
	int i,j; 
	cin>>n;
	int root;
	for(i=1;i<=n;++i)
	{
		cin>>p[i].f>>p[i].s;
		if(p[i].f!=-1)
		{
			g[i].pb(p[i].f);
			g[p[i].f].pb(i);
		}
		else root=i;
	}
	dfs(root);
	if(ans.size())
		for(auto it:ans)
			cout<<it<<" ";
	else
		cout<<-1;
}