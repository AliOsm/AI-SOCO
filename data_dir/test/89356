//besmellah
#include <bits/stdc++.h>
using namespace std;

const int maxn = 5e5 + 2;
int seg[4 * maxn];

void add(int id, int L, int R, int idx, int val) {
	if (idx < L || idx >= R)
		return;
	if (R == L + 1) {
		seg[id] = val;
		return;
	}
	int mid = (L + R) / 2;
	add(2 * id + 0, L, mid, idx, val);
	add(2 * id + 1, mid, R, idx, val);
	seg[id] = __gcd(seg[2 * id], seg[2 * id + 1]);
}

int get(int id, int L, int R, int l, int r, int x, bool f = 0) {
	if (r <= L || R <= l || seg[id] % x == 0)
		return 0;
	if (R == L + 1) {
		return (bool)(seg[id] % x);
	}
	int mid = (L + R) / 2;
	int a = get(2 * id + 0, L, mid, l, r, x);
	if (a >= 2)
		return 2;
	if (f & a)
		return 1;
	int b = get(2 * id + 1, mid, R, l, r, x, a);
	return a + b;
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		int tmp;
		cin >> tmp;
		add(1, 0, n, i, tmp);
	}
	int q;
	cin >> q;
	while (q--) {
		int type;
		cin >> type;
		if (type == 1) {
			int l, r, x;
			cin >> l >> r >> x;
			l--;
			if (get(1, 0, n, l, r, x) < 2)
				cout << "YES\n";
			else
				cout << "NO\n";
		}
		else {
			int l, x;
			cin >> l >> x;
			l--;
			add(1, 0, n, l, x);
		}
	}
}
