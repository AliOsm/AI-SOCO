#include<bits/stdc++.h>
using namespace std;
#define ll long long int 
#define mod 1000000007
map<ll,ll>mp;
struct vikas
{
  ll f;
  ll nxtgt;
  ll nxtgti;
  ll ans;
  ll ans1;
  ll maxi;
};
vikas a[100011];

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t,i,j,l,m,x,k,kk,n,r,y,c;
    cin>>n;
    for(i=0;i<n;i++)
    {
      cin>>a[i].f;
    }
    if(n==1||n==2)
    {
      cout<<1;
      return 0;
    }

    stack<pair<ll,ll> >s;

    s.push(make_pair(a[n-1].f,n-1));

    for(i=n-2;i>=0;i--)
    {
      pair<ll,ll>pp;
      pp=s.top();
      if(a[i].f>pp.first)
      {
        a[pp.second].nxtgt=a[i].f;
        a[pp.second].nxtgti=i;
        s.pop();
        while(1)
        {
          if(s.empty())
            break;
          pp=s.top();
          if(a[i].f>pp.first)
          {
            a[pp.second].nxtgt=a[i].f;
            a[pp.second].nxtgti=i;
            s.pop();
          }
          else
          {
            s.push(make_pair(a[i].f,i));
            break;
          }
        }
        if(s.empty())
        {
          s.push(make_pair(a[i].f,i));
        }
      }
      else
        s.push(make_pair(a[i].f,i));
    }
    while(!s.empty())
    {
      pair<ll,ll>pp;
      pp=s.top();
      a[pp.second].nxtgt=-1;
      s.pop();
    }

    a[0].maxi=a[0].f;

    for(i=1;i<n;i++)
    {
      a[i].maxi=max(a[i-1].maxi,a[i].f);
    }

    a[0].ans=1;

    for(i=1;i<n;i++)
    {
      if(a[i].f==a[i].maxi)
      {
        a[i].ans=a[i-1].ans+1;
      }
      else
        a[i].ans=a[i-1].ans;
    }

    // for(i=0;i<n;i++)
    // {
    //   cout<<a[i].ans<<" ";
    // }
    for(i=n-1;i>=0;i--)
    {
      if(a[i].nxtgt==-1&&i==(n-1))
      {
        a[i].ans1=1;
      }
      else if(a[i].nxtgt==-1)
      {
        a[i].ans1=a[i+1].ans1+1;
      }
      else
      {
        a[i].ans1=a[i+1].ans1;
      }
      if(a[i].nxtgt!=-1)
      {
        ll lp=a[i].nxtgti;
        if(a[lp].nxtgt!=-1)
          a[i].nxtgt=-1;
        else
        {
          for(x=lp-1;x>=0;x--)
          {
            if(a[i].f<a[x].f)
            {
              a[i].nxtgt=-1;
              break;
            }
          }
        }
      }
    }
    map<ll,ll>mp;

    set<pair<ll,ll> >st;

    for(i=n-1;i>=0;i--)
    {
        if(i==(n-1))
        {
          st.insert(make_pair(a[i-1].ans,-a[i].f));
          mp[a[i].nxtgt]++;
          continue;
        }
        if(i==0)
        {
          ll h1=mp[a[i].f]+a[i+1].ans1;
          st.insert(make_pair(h1,-a[i].f));
          mp[a[i].nxtgt]++;
          continue;
        }
        ll h1,h2;
        h1=a[i-1].ans+a[i+1].ans1+mp[a[i].f];
        st.insert(make_pair(h1,-a[i].f));
        mp[a[i].nxtgt]++;
    }

    set<pair<ll,ll> >::iterator it=st.end();
    it--;
    // for(it=st.begin();it!=st.end();it++)
    // {
    //   cout<<(-(*it).second)<<" "<<(*it).first<<"\n";
    // }
    cout<<(-(*it).second);
return 0;
}