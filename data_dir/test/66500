#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
#define lp(i,st,ed) for(int i=st;i<ed;i++)
#define rlp(i,ed,st) for(int i=ed;i>=st;i--)
#define pll pair<ll,ll>

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
	ll n,q;
	cin >> n >> q;
	string s[n];
	lp(i,0,n)
	{
		cin >> s[i];
	}
	ll ary[q];
	string ans;
	lp(i,0,q)
	{
		cin >> ary[i];
		ary[i]--;
	}
	ll mk[n];
	memset(mk,0,sizeof(mk));
	lp(i,0,q)
	{
		mk[ary[i]]=1;
		if(s[ary[i]].size()!=s[ary[0]].size())
		{
			cout<<"No"<<endl;
			return 0;
		}
	}
	ll len=s[ary[0]].size();
	lp(i,0,len)
	{
		char c=s[ary[0]][i];
		lp(j,1,q)
		{
			if(s[ary[j]][i]!=c)
			{
				c='?';
			}
		}
		ans+=c;
	}
	// cout<<ans<<endl;
	lp(i,0,n)
	{
		if(s[i].size()!=len||mk[i]==1)
		{
			continue;
		}
		else
		{
			ll f=0;
			lp(j,0,len)
			{
				if(s[i][j]!=ans[j]&&ans[j]!='?')
				{
					f=1;
					break;
				}
			}
			if(f==0)
			{
				cout<<"No"<<endl;
				return 0;
			}
		}
	}
	cout<<"Yes"<<endl;
	cout<<ans<<endl;
	return 0;
}