/*
Till the roof comes off, till the lights go out
Till my legs give out, canâ€™t shut my mouth.
Till the smoke clears out. Am I high? Perhaps
I'ma rip this shit till my bones collapse.
*/
#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <deque>
#include <set>
#include <stack>
#include <string.h>
#include <map>
#include <vector>
#include <queue>
#include <math.h>
#define ll long long

using namespace std;

const int N=100001;
typedef pair<long double,int>ii;

double getAngle(double x,double y){
 /// (0,0)->(x,y) && (0,0) -> (1,0)
 /*float cross =   y*1;
 float normA = sqrt(x*x+y*y);
 float normB = 1.0;
 float theta =  asin(cross/(normA*normB))*180.0/M_PI;
 if(x<0&&y>=0)
    theta=180-theta;
 if(theta<0)theta+=360.0;
 return theta;*/
 double theta = atan2(y,x)*180.0/M_PI;
 if(theta<0)theta+=360.0;
 return theta;
}
int main()
{
    //freopen("test.in","r",stdin);
    // freopen("test.out","w",stdout);
     int n;
     scanf("%d",&n);
     vector<ii>angles;
     for(int i=0;i<n;i++){
        float x,y;
        scanf("%f%f",&x,&y);//cout<<getAngle(x,y)<<' ';
        angles.push_back(ii(getAngle(x,y),i));
     }
     sort(angles.begin(),angles.end());
     angles.push_back(ii(angles[0]));
     angles[n].first+=360.0;
     long double mn=360.0;
     int a,b;
     for(int i=1;i<angles.size();i++){
           if(angles[i].first-angles[i-1].first<mn){
             mn=angles[i].first-angles[i-1].first;
             a=angles[i].second;
             b=angles[i-1].second;
           }
     }
     cout<<a+1<<' '<<b+1;
    return 0;
}
