//In The Name Of God
#include<bits/stdc++.h>

#define L ((ind)*2)
#define R ((ind)*2+1)
#define M int mid=(s+e)/2
#define CK if(s>=r or l>=e) return 
#define ll long long

using namespace std ;

const int MAXN=2e6+22;

ll n,a[MAXN],cur;
string str ;
ll seg[MAXN*4],flag[MAXN*4] ;

int get()
{
	ll res = 0;
	bool sw = true ;
	while(str[cur]!=' ')
	{
		if(str[cur]=='-')
		{
			sw = false; 
			cur++;
			continue ;
		}
		res *=10;
		res += int(str[cur]-'0');
		cur++;
	}
	cur++;
	if(!sw)
		res*=-1;
	return res ;
}

void relax(int &ind)
{
	if(flag[ind]==0)
		return ;
	ll x=flag[ind];
	flag[ind]=0;
	flag[L]+=x;
	flag[R]+=x;
	seg[L]+=x;
	seg[R]+=x;
}

void build(int ind,int s,int e)
{
	if(s==e-1)
	{
		seg[ind]=a[s];
		return;
	}
	M;
	build(L,s,mid);
	build(R,mid,e);
	seg[ind]=min(seg[L],seg[R]);
}

void add(int ind,int s,int e,int l ,int r,ll x)
{
	CK ;
	if(l<=s and e<=r)
	{
		flag[ind]+=x;
		seg[ind]+=x;
		return ;
	}
	relax(ind);
	M;
	add(L,s,mid,l,r,x);
	add(R,mid,e,l,r,x);
	seg[ind]=min(seg[L],seg[R]);
}

ll solve(int ind,int s,int e,int l,int r)
{
	CK 1e18+1;
	if(l<=s and e<=r)
		return seg[ind] ;
	relax(ind);
	M;
	return min(solve(L,s,mid,l,r),solve(R,mid,e,l,r)) ;
}

int main()
{
	ios_base::sync_with_stdio(false);
	ll q,l,r,x;
	cin >> n ;
	for(int i=0;i<n;i++)
		cin>>a[i];
	build(1,0,n);
	cin >> q ;
	cin.ignore();
	while(q--)
	{
		getline(cin,str);
		cur=0;
		str+=" ";
		l = get();
		r = get();
		if(cur==str.size())
		{
			if(l<=r)
			{
				cout << solve (1,0,n,l,r+1) << endl ;
				continue ;
			}
			cout << min(solve(1,0,n,0,r+1),solve(1,0,n,l,n)) << endl ;
		}
		else
		{
			x = get();
			if(l<=r)
				add(1,0,n,l,r+1,x);
			else
			{
				add(1,0,n,0,r+1,x);
				add(1,0,n,l,n,x);
			}
		}
	}
	return 0;
}
