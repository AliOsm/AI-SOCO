#include<bits/stdc++.h>
using namespace std;
const int MAXN=105;
int dp[105][2005],last[105][2005];
struct node
{
	int t,d,p,id;
	bool operator<(const node &a)const
	{
		return d<a.d;
	}
}sv[MAXN];
int st[MAXN],n;
vector<int> v;
bool flag=false;
void dfs(int x,int y)
{
	if(x==0)
		return ;
	dfs(last[x][y],y-sv[x].t);
	v.push_back(x);
}
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%d%d%d",&sv[i].t,&sv[i].d,&sv[i].p);
		sv[i].id=i;
	}
	sort(sv+1,sv+1+n);
	int ans=0,x=0,y=0;
	for(int i=1;i<=n;i++)
	{
		for(int k=0;k<i;k++)
		{
			for(int j=sv[i].d-sv[i].t-1;j>=0;j--)
			{
				if(dp[i][j+sv[i].t]<dp[k][j]+sv[i].p)
				{
					dp[i][j+sv[i].t]=dp[k][j]+sv[i].p;
					last[i][j+sv[i].t]=k;
					if(dp[i][j+sv[i].t]>ans)
					{
						ans=dp[i][j+sv[i].t];
						x=i;
						y=j+sv[i].t;
					}
				}
			}
		}
	}
	dfs(x,y);
	cout<<ans<<endl;
	printf("%d\n",v.size());
	for(auto i:v)
	{
		printf("%d ",sv[i].id);
	}
	printf("\n");
	return 0;
}