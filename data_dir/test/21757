#include <iostream>
#include <cstdio>
#include <cmath>
#define M_PI 3.141592653589793
using namespace std;

int main()
{
    long long x1,y1,r1, x2,y2,r2;
    cout.precision(15);
    cin >> x1 >> y1 >> r1 >> x2 >> y2 >> r2;
    x1-=x2;
    y1-=y2;
    if(r1>r2) swap(r1,r2);
    if(x1<0) x1*=-1;
    if(y1<0) y1*=-1;
    long long d2 = x1*x1+y1*y1;
    if(d2>=(r1+r2)*(r1+r2)) {cout <<0<<endl; return 0;}
    long double d = sqrt((long double)d2);
    if(d2==0 || d + r1 <=r2) {cout<<M_PI*r1*r1<<endl; return 0;}


    //r1^2 -d1^2 = h^2
    //r2^2 -d2^2 = h^2
    // d1 + d2 = d
    // d1^2 = d^2 + d2^2 - 2*d*d2
    //r1^2 - r2^2 = d1^2 - d2^2
    //r1^2 - r2^2 = d^2 + d2^2 - 2*d*d2 - d2^2
    //r1^2 - r2^2 - d^2 = -2*d*d2
    // 2*d2 = d + (r2^2-r1^2)/d
    //long double d_2 = (d2 + r2*r2 - r1*r1)/d/2;
    //long double d_1 = d - d_2;
//    long double h = sqrt(r2*r2 - d_2*d_2);
    long double alfa =  acos((d2-r1*r1+r2*r2)/d/r2/2);
    //if(alfa<0)alfa+=M_PI;
    long double beta =  acos((d2+r1*r1-r2*r2)/d/r1/2);
    //if(beta<0)beta+=M_PI;
    long double rr1 = r2*r2*(alfa - sin(alfa*2)/2);
    long double rr2 = r1*r1*(beta - sin(beta*2)/2);
    long double res = rr1+rr2;

    cout <<fixed<<res<<endl;
    //printf("%.9f\n",res);
    return 0;
}
