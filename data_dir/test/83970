
/*
СТРОИМ СТЕНУ РАБОТЯГИ!
█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
█═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═█
█═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═█
█═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═█
█═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═█
█═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═█
█═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═█
█═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═█
█═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═╩═╦═█
█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
*/
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
 
 
 
using namespace std;
 
 
 
 
#define ll long long

const int N = 1001;

int a[N][N], row[N][N], col[N][N];


int main() {
	int n, m;
	scanf("%d %d", &n, &m);
	vector< pair<int, int> > v;
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			char c;
			cin >> c;
			if (c == 'S' || c == 'T') {
				v.push_back({i, j});
			} else if (c == '*') {
				a[i][j] = 1;
			}
		}
	}
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			row[i][j] = row[i][j - 1] + a[i][j];
		}
	}
	for (int j = 1; j <= m; ++j) {
		for (int i = 1; i <= n; ++i) {
			col[i][j] = col[i - 1][j] + a[i][j];
		}
	}
	int x1 = v[0].first, y1 = v[0].second, x2 = v[1].first, y2 = v[1].second;
	if (x1 > x2) {
		swap(x1, x2);
		swap(y1, y2);
	}
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			if (i == x1) {
				if (col[x2][j] - col[x1 - 1][j] == 0) {
					if (row[x1][max(j, y1)] - row[x1][min(j, y1) - 1] == 0) {
						if (row[x2][max(j, y2)] - row[x2][min(j, y2) - 1] == 0) {
							printf("YES\n");
							return 0;
						}
					}
				}
			}
		}
	}
	if (y1 > y2) {
		swap(y1, y2);
		swap(x1, x2);
	}
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			if (j == y1) {
				if (row[i][y2] - row[i][y1 - 1] == 0) {
					if (col[max(x1, i)][y1] - col[min(x1, i) - 1][y1] == 0) {
						if (col[max(x2, i)][y2] - col[min(x2, i) - 1][y2] == 0) {
							printf("YES\n");
							return 0;
						}
					}
				}
			}
		}
	}
	printf("NO\n");
	return 0;
}



















