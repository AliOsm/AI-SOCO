#include<iostream>
#include<iomanip>
#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<queue>
#include<vector>
#include<map>
#include<cstdlib>
#include<ctime>
#include<set>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i) 
#define ford(i, n) for(int i = 1; i <= (int)(n); ++i) 
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()
#define int long long

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

const int N = 100009;
const int MOD = 1e9 + 7;
const int INF = 1e9;
const long long INF64 = 1e18;
const long double eps = 0.0000000001;

vector <int> vn[N];
li sum[N];
int a[N];
int n, m;

void main(){
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif 
    li ans = 0;
    li da = 0;
    cin >> n >> m;
    forn(i, m)
        cin >> a[i];
    forn(i, m){
        if(i && a[i] != a[i-1]){
            ans += abs(a[i]-a[i-1]);
            vn[a[i]].pb(a[i-1]);
            sum[a[i]] += abs(a[i]-a[i-1]);
        }
        if(i + 1 != m && a[i] != a[i+1]){
            vn[a[i]].pb(a[i+1]);
            sum[a[i]] += abs(a[i]-a[i+1]);
        }
    }
    
    
    forn(i, N)
        sort(all(vn[i]));
    
    ford(i, n){
        li suf = 0, pref = 0;
        forn(j, vn[i].size())
            suf += vn[i][j];

        forn(j, vn[i].size()){
            suf -= vn[i][j];
            int now = vn[i][j];
            li nda = (1ll * j * now - pref) + (suf - 1ll * (vn[i].size()-j-1) * now) - sum[i];
            da = min(da, nda);
            pref += vn[i][j];
        }
    }

    cout << ans + da;
}
