#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;

lli cnt[N];
lli steps[N];

void solve()
{
    lli n, k;
    cin>>n>>k;
    lli a[n];
    memset(cnt,0,sizeof(cnt));
    memset(steps,0,sizeof(steps));
    lli mx = -1;
    for(int i = 0; i < n; i ++)
    {
        cin>>a[i];
        mx = max(mx, a[i]);
    }
    sort(a, a + n);
    for(int i = 0; i < n; i ++){
        cnt[a[i]] ++;
        lli stp = 1;
        for(lli j = a[i]/2; j >= 1; j /= 2)
        {
            if(cnt[j] >= k){
                stp++;
                continue ;
            }
            cnt[j] ++;
            steps[j] += stp;
            stp ++;
        }
    }
    lli ans = 1e15;
    for(lli i = 1; i <= mx; i ++)
    {
        if(cnt[i] >= k)
        {
            ans = min(ans, steps[i]);
        }
    }
    cout<<ans;
    return ;
}
/*
1
1000000
1000000000
*/
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
    t = 1;
    //cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
