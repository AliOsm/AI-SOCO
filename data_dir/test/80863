#include <bits/stdc++.h>

using namespace std;

vector<pair<long long,long long> > otr;
long long k;

long long used[300005];

bool check(long long len){
    memset(used,0,sizeof(used));
    if(len==0){
        for(long long i=1; i<=k; i++)used[i]=1;
        return 1;
    }
    vector<pair<pair<long long,long long>,long long> > z;
    for(long long i=0; i<otr.size(); i++){
        if(otr[i].second-len+1>=otr[i].first){
            z.push_back({{otr[i].first,1},i+1});
            z.push_back({{otr[i].second-len+2,-1},i+1});
        }
    }

    if(z.empty())return 0;
    sort(z.begin(),z.end());
    long long pos=0;
    long long op=0;
    while(pos<z.size()){
        long long tpos=pos;
        long long cur_x=z[tpos].first.first;
        while(tpos<z.size() && z[tpos].first.first==cur_x && z[tpos].first.second==-1){
            used[z[tpos].second]=0;
            op--;
            tpos++;
        }
        while(tpos<z.size() && z[tpos].first.first==cur_x && z[tpos].first.second==1){
            used[z[tpos].second]=1;
            op++;
            tpos++;
        }
        pos=tpos;
        if(op>=k){
            return 1;
        }
    }
    return 0;
}

signed main()
{
#ifdef files
	ifstream cin("input.txt");
	ofstream cout("output.txt");
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    long long n;
    cin >> n >> k;
    otr.resize(n);
    for(long long i=0; i<n; i++){
        cin >> otr[i].first >> otr[i].second;
    }
    long long l=0, r=2000000005;
    while(l+1<r){
        long long mid=(l+r)/2;
        if(check(mid))l=mid;
        else r=mid;
    }
    if(check(r))l=r;
    check(l);
    cout << l << "\n";
    for(long long i=1; i<=n; i++)if(used[i] && (k--)>0)cout << i << " ";
}
