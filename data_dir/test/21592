#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(long long i=a;i<=b;i++)
#define fr(i,a)      for(long long i=0;i<a;i++)
#define fd(i,a,b)    for(long long i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           100000


vector<long long>vec[1010];
bool con[1010][1010];

void bfs(long long mem[],long long s){
   queue<long long>q;
   bool vst[1010];
   clr(vst);
   q.push(s);
   mem[s]=0;
   vst[s]=true;
   while(!q.empty()){
       long long cur=q.front();
       q.pop();
       long long sz=vec[cur].size();
       fr(i,sz) {
          long long nxt=vec[cur][i];
          if(vst[nxt]==false){
            vst[nxt]=true;
            mem[nxt]=mem[cur]+1;
            q.push(nxt);
          }
       }
   }
   return;
}


main(){
     long long n,m,s,t,u,v;
     clr(con);
     sfll(n,m);
     sfll(s,t);
     while(m--){
        sfll(u,v);
        con[u][v]=con[v][u]=true;
        vec[u].push_back(v);
        vec[v].push_back(u);
     }
     long long mem[2][1010];
     fi(i,1,n) mem[0][i]=mem[1][i]=mod;
     bfs(mem[0],s);
     bfs(mem[1],t);

     long long mn=mem[0][t],ans=0;

     fi(i,1,n) fi(j,i+1,n) if(con[i][j]==false){
        long long cur=min(mem[0][i]+mem[1][j],mem[1][i]+mem[0][j])+1;
        if(cur>=mn) ans++;
     }
     cout<<ans<<endl;


     return 0;
}
