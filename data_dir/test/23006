#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef pair<ll,ll> ii;
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define rrep(i,a,b) for(ll i=a;i>b;i-=1)
#define vi vector<ll>
#define vii vector<vector<ll> >
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define tr(c,i) for( typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
# define M_PI           3.14159265358979323846
ll t=1 ;
void solve()
{
    ll n ;
    cin >> n ;
    vector< ll > v( n + 1 ) , p( n + 1 ) , pre( n + 1 ) ;
    rep( i , 1 , n + 1 )
    {
        cin >> v[ i ] ;
        pre[ i ] = pre[ i - 1 ] + v[ i ] ;
    }
    rep( i , 1 , n + 1 )
        cin >> p[ i ] ;
    set< ll > s , ans ;
    map< ll , ll > present ;
    s.insert( 0 ) ;
    s.insert( n + 1 ) ;
    ans.insert( pre[n] ) ;
    present[pre[n]]++;
    rep( i , 1 , n + 1 )
    {
        s.insert( p[ i ] ) ;
        set< ll >::iterator it1 , it2 ;
        it1 = s.find( p[ i ] ) ;
        it2 = s.find( p[ i ] ) ;
        it1-- ; it2++ ;
        present[ pre[ *it2 - 1 ] - pre[ *it1 ] ]-- ;
        //cout << pre[ *it2 - 1 ] - pre[ p[ i ] ] << " " << pre[ p[ i ] - 1 ] - pre[ *it1 ] << "\n";
        ans.insert( pre[ *it2 - 1 ] - pre[ p[ i ] ] ) ;
        present[ pre[ *it2 - 1 ] - pre[ p[ i ] ] ]++ ;
        ans.insert( pre[ p[ i ] - 1 ] - pre[ *it1 ] ) ;
        present[pre[ p[ i ] - 1 ] - pre[ *it1 ]]++ ;
        it1 = ans.end() ;
        it1-- ;
        while( present[ * it1 ] == 0 )
        {
            ans.erase(*it1) ;
            it1 = ans.end() ;
            it1-- ;
        }
        cout << *it1 << "\n" ;
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve();
    return 0;
}

