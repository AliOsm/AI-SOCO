#include <iostream>
#include <vector>
#include <stack>

using namespace std;

vector<int> ll, rr;
vector<int> a;
int n;

inline void clear(stack<int>& st) {
	while(!st.empty()) {
		st.pop();
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin >> n;
	a.resize(n);
	for (int i = 0; i < n; ++i) {
		cin >> a[i];
	}
#ifdef DEBUG
	for(auto& i : a) {
		cout << i << " ";
	}
	cout << endl;
#endif
	ll.resize(n);
	rr.resize(n);

	stack<int> st;
	st.push(-1);
	for (int i = 0; i < n; ++i) {
		while(st.size() > 1 && a[st.top()] > a[i]) {
			st.pop();
		}
		ll[i] = st.top();
		st.push(i);
	}

	clear(st);
	st.push(n);
	for (int i = n - 1; i >= 0; --i) {
		while(st.size() > 1 && a[st.top()] >= a[i]) {
			st.pop();
		}
		rr[i] = st.top();
		st.push(i);
	}

#ifdef DEBUG
	cout << "left: " << endl;
	for(auto& i : ll) {
		cout << i << " ";
	}
	cout << endl;
	cout << "right: " << endl;
	for(auto& i : rr) {
		cout << i << " ";
	}
	cout << endl;
#endif
	long long s = 0;
	for (int i = 0; i < n; ++i) {
		s -= (long long)(i - ll[i]) * (rr[i] - i) * a[i];
	}

	clear(st);
	st.push(-1);
	for (int i = 0; i < n; ++i) {
		while(st.size() > 1 && a[st.top()] < a[i]) {
			st.pop();
		}
		ll[i] = st.top();
		st.push(i);
	}

	clear(st);
	st.push(n);
	for (int i = n - 1; i >= 0; --i) {
		while(st.size() > 1 && a[st.top()] <= a[i]) {
			st.pop();
		}
		rr[i] = st.top();
		st.push(i);
	}
#ifdef DEBUG
	cout << "left: " << endl;
	for(auto& i : ll) {
		cout << i << " ";
	}
	cout << endl;
	cout << "right: " << endl;
	for(auto& i : rr) {
		cout << i << " ";
	}
	cout << endl;
#endif

	for (int i = 0; i < n; ++i) {
		s += (long long)(i - ll[i]) * (rr[i] - i) * a[i];
	}

	cout << s << endl;
	return 0;
}
