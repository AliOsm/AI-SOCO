#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
int h[10010];
int dp[10010];
vector<int> b[2];
void upd(int &v, int x) {
	if (v < x) v = x;
}
int main() {
	int n, l, r, s = 0;
	scanf("%d%d%d", &n, &l, &r);
	for (int i = 0; i < n; i++) {
		scanf("%d", &h[i]);
		s += h[i];
	}
	for (int i = 0; i < n; i++) {
		int x;
		scanf("%d", &x);
		b[x].push_back(h[i]);	
	}
	l = s - l;
	r = s - r;
	swap(l, r);
	sort(b[0].begin(), b[0].end());
	sort(b[1].begin(), b[1].end());
	reverse(b[1].begin(), b[1].end());
	if (!b[1].size()) {
		puts("0");
		return 0;
	}
	for (int i = 0; i < 10010; i++) {
		dp[i] = -1001001001;
	}
	dp[0] = 0;
	for (int i = 0; i < b[0].size(); i++) {
		int x = b[0][i];
		for (int j = s; j >= x; j--) {
			upd(dp[j], dp[j-x]);
		}
	}
	for (int i = 0; i < b[1].size(); i++) {
		int x = b[1][i];
		for (int j = s; j >= x; j--) {
			upd(dp[j], dp[j-x] + (l <= j && j <= r));
		}
	}
	printf("%d\n", *max_element(dp, dp + s + 1));
	return 0;
}
