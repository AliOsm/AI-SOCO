/* ****GT_18**** */
//Motivational Source->FUHPD

#include<bits/stdc++.h>
#define	MIN(a,b,c)	min(min(a,b),c)
#define	MAX(a,b,c)	max(max(a,b),c)
#define ll          long long
#define itr         vector<ll int>::iterator
#define pb          push_back
#define mp          make_pair
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
using namespace std;
bool u[5005];
int l[5005],r[5005];
int n,a[5005],pos[5005],dp[5005],f[5005][5005];
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		cin>>n;
		rep(i,1,n+1)
		cin>>a[i];
		rep(i,1,n+1)
		{
			int cur=0;
			memset(u,0,sizeof(u));
			rep(j,i,n+1)
			{
				if(!u[a[j]])
				{
					u[a[j]]=1;
					cur^=a[j];
				}
				f[i][j]=cur;
			}
		}
		memset(u,0,sizeof(u));
		rep(i,1,n+1)
		{
			if(!u[a[i]])
			{
				u[a[i]]=1;
				pos[a[i]]=i;
			}
			l[i]=pos[a[i]];
		}
		
		memset(u,0,sizeof(u));
		for(int i=n;i>=1;i--)
		{
			if(!u[a[i]])
			{
				u[a[i]]=1;
				pos[a[i]]=i;
			}
			r[i]=pos[a[i]];
		}
		
		rep(i,0,n)
		{
			dp[i+1]=max(dp[i],dp[i+1]);
			int k=i;
			int mx=0;
			int mn=n+1;
			rep(j,i+1,n+1)
			{
				if(k<j)
				{
					k++;
					mx=max(mx,r[k]);
					mn=min(mn,l[k]);
				}
				while(k<mx)
				{
					k++;
					mx=max(mx,r[k]);
					mn=min(mn,l[k]);
				}
				if(mn<=i)
				continue;
				dp[k]=max(dp[k],dp[i]+f[i+1][k]);
			}
		}
		int ans=0;
		rep(i,1,n+1)
		ans=max(ans,dp[i]);
		cout<<ans;
	}
	return 0;
}
