#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
typedef vector<vector<ll>> mat;

const int N = 3e5 + 5;
int a[N][2] , n , m , hv[N] , c[N] , counter;

int main()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    cin >> n >> m;
    for(int i = 0 ; i < m ; i++)
        cin >> a[i][0] >> a[i][1];

    for(int i = 0 ; i < m ; i++)
        if(a[i][0] == a[0][0] || a[i][1] == a[0][0]) hv[i] = 1 , counter++;

    for(int i = 0 ; i < m ; i++)
    {
        if(!hv[i])
        {
            c[a[i][0]]++;
            c[a[i][1]]++;
        }
    }

    for(int i = 0 ; i < N ; i++)
        if(counter + c[i] == m) return cout << "YES" , 0;

    memset(c , 0 , sizeof c);
    memset(hv , 0 , sizeof hv);
    counter = 0;

    for(int i = 0 ; i < m ; i++)
        if(a[i][0] == a[0][1] || a[i][1] == a[0][1]) hv[i] = 1 , counter++;

    for(int i = 0 ; i < m ; i++)
    {
        if(!hv[i])
        {
            c[a[i][0]]++;
            c[a[i][1]]++;
        }
    }

    for(int i = 0 ; i < N ; i++)
        if(counter + c[i] == m) return cout << "YES" , 0;

    cout << "NO";

    return 0;
}
