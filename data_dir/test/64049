#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll mx1 = -1e18 , mx2 = -1e18, n , x1 , y1 , x2 , y2 , ans = 1e18;
vector <pair <int , int> > v;

ll take_dist_1(ll x , ll y)
{
    return (x - x1) * (x - x1) + (y - y1) * (y - y1);
}

ll take_dist_2(ll x , ll y)
{
    return (x - x2) * (x - x2) + (y - y2) * (y - y2);
}

bool comp(pair <int , int> a , pair <int , int> b){
    return take_dist_1(a.first , a.second) < take_dist_1(b.first , b.second);
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> x1 >> y1 >> x2 >> y2;
    for (int i = 0; i < n; i++){
        int x , y;
        cin >> x >> y;
        v.push_back({x , y});
    }
    sort(v.begin() , v.end() , comp);
    for (int i = 0; i < n; i++){
        mx1 = max(mx1 , take_dist_1(v[i].first , v[i].second));
        mx2 = 0;
        for (int j = i + 1; j < n; j++)
            mx2 = max(mx2 , take_dist_2(v[j].first , v[j].second));
        ans = min(ans , mx1 + mx2);
    }
    mx2 = 0;
    for (int i = 0; i < n; i++)
        mx2 = max(mx2 , take_dist_2(v[i].first , v[i].second));
    ans = min(ans , mx2);
    cout << ans;
}
