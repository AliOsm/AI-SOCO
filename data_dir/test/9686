#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007
#define IN freopen("nocross.in","r",stdin)
#define OUT freopen("nocross.out","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2
#define FastIO ios_base::sync_with_stdio(false); cin.tie(NULL)

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define ll long long

#define maxn 1000005

int a[35] , subsize[35] , dp[27][(1<<15)] ;

int main()
{
    int n ;

    scanf("%d",&n) ;

    for(int i=1 ; i<=n ; i++)
    {
        scanf("%d",&a[i]) ;
    }

    if( n==1 )
    {
        if( a[1]==1 ) printf("YES\n") ;
        else printf("NO\n") ;
        return 0 ;
    }

    int one = 0 ;

    for(int i=1 ; i<=n; i++)
    {
        if( a[i]==1 ) one++ ;
        if( a[i]==2 )
        {
            printf("NO\n") ;
            return 0 ;
        }
    }

    if( n - one > n/2 || n==one )
    {
        printf("NO\n") ;
        return 0 ;
    }

    for(int i=1,j=0 ; i<=n ; i++)
    {
        if( a[i]!=1 )
        {
            a[j++] = a[i] ;
        }
    }

    n -= one ;

    sort( a , a+n ) ;

  //  for(int i=0 ; i<n ; i++) printf("%d ",a[i]) ;

    dp[0][(1<<(n-1))] = 1 ;

 //   cout<<n<<one<<endl ;

    for(int i=n-1 ; i>=0 ; i--)
    {
        for(int mask = 0 ; mask<(1<<n) ; mask++ )
        {
            int fl = 0 , sum = 0  ;
            for(int j=0 ; j<n ; j++)
            {
                if( (mask&(1<<j))  )
                {
                    sum+= a[j] ;
                    if( j >= i ) fl = 1 ;
                }
            }
            if( fl ) continue ;
            if( sum > i+one ) continue ;

            int c = i + one - sum ;

          //  if( c+sum != one+i ) printf("%d %d %d\n",c,mask,i) ;

          //  cout<<c<<mask<<i<<endl ;

            for( int subMask = mask; subMask > 0; subMask = (subMask-1)&mask )
            {
                int sz = 0 , cnt=  0 ;
                for(int j=0 ; j<n ; j++)
                {
                    if( (subMask&(1<<j)) )
                    {
                        sz+= a[j] ;
                        cnt++ ;
                    }
                }

                if( sz >= a[i] || sz+c < a[i]-1 || cnt+( a[i]-1-sz ) < 2 ) continue ;
                dp[c][mask] |= dp[ c - ( a[i]-1-sz ) ][ (mask^subMask^(1<<i)) ] ;
            }

            if( c >= a[i]-1 && a[i]-1 >= 2 )
            {
                dp[c][mask] |= dp[ c-(a[i]-1) ][ (mask^(1<<i)) ] ;
            }

        }
    }

 //   DBG ;

    if( dp[one][0] ) printf("YES\n") ;
    else printf("NO\n") ;

    return 0 ;
}
