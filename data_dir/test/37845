#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;

const int MaxN = 40008, MaxP = 32, MaxC = 0x3F3F3F3F, NA = -1;
const char ans [3] [32] = {"Stas", "Masha", "Missing"};

char f [MaxN] [MaxP];
int a, b, n;

int main (void)
{
 int i, j;
 int res;
 int64 cur;
 while (scanf (" %d %d %d", &a, &b, &n) != EOF)
 {
  memset (f, 1, sizeof (f));
  assert ((MaxN & 1) == 0);
  if (n & 1)
  {
   f[MaxN - 1][1] = 1;
   f[MaxN - 2][1] = 0;
  }
  else
  {
   f[MaxN - 1][1] = 0;
   f[MaxN - 2][1] = 1;
  }
  for (i = MaxN - 2; i > 0; i--)
  {
   cur = 1;
   for (j = 1; j < MaxP; j++)
   {
    cur *= i;
    if (cur >= n)
     break;
   }
   f[i][j] = 1;
   for (j--; j > 0; j--)
    f[i][j] = !f[i][j + 1] || !f[i + 1][j];
  }
  for (j = 1; j < MaxP; j++)
   if ((1 << j) >= n)
    break;
  for (i = j; i < MaxP; i++)
   f[1][i] = 2;
  for (j--; j > 0; j--)
   if (f[2][j] == 0 || f[1][j + 1] == 0) f[1][j] = 1;
   else if (f[2][j] == 1 && f[1][j + 1] == 1) f[1][j] = 0;
   else f[1][j] = 2;
/*
  for (i = 1; i <= 10; i++)
   for (j = 1; j <= 4; j++)
    printf ("%d%c", (int) f[i][j], j < 4 ? ' ' : '\n');
*/
  res = f[a][b];
  printf ("%s\n", ans[res]);
 }
 return 0;
}
