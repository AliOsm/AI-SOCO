#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <bitset>
#include <random>
#include <cassert>

using std::ios_base;
using std::cin;
using std::cout;
using std::cerr;
using std::endl;
using std::fixed;

using std::vector;
using std::string;
using std::stack;
using std::queue;
using std::deque;
using std::map;
using std::set;
using std::unordered_map;
using std::unordered_set;
using std::bitset;

using std::tuple;
using std::make_tuple;
using std::pair;
using std::make_pair;

using std::sort;
using std::reverse;
using std::nth_element;

#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define sqr(x) ((x) * (x))

#define forn(i, n) for (int i = 0; i < (n); i++)
#define fornr(i, n) for (int i = (n) - 1; i >= 0; i--)
#define forab(i, a, b) for (int i = (a); i < (b); i++)

const int N = 200005;

int t;
int n;
string s;
char used[N];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.precision(10);
    cout << fixed;

    cin >> t;
    while (t--) {
        cin >> n >> s;
        bool ok = false;

        for (int d = '0'; d <= '9' && !ok; ++d) {
            char c = '0';

            int j = 0;
            for (int i = 0; i < n; ++i)
                if (s[i] < d)
                    j = i + 1;

            memset(used, 0, sizeof(char) * n);

            for (int i = 0; i < j; ++i) {
                if (s[i] < d && s[i] >= c) {
                    c = s[i];
                    used[i] = '1';
                }
            }
            for (int i = j; i < n; ++i) {
                if (s[i] == d) {
                    used[i] = '1';
                }
            }

            c = d;
            int m = 0;
            for (int i = 0; i < n; ++i) {
                if (used[i]) {
                    ++m;
                    continue;
                }
                if (s[i] >= c) {
                    c = s[i];
                    used[i] = '2';
                    ++m;
                    continue;
                }
            }

            ok |= m == n;
        }

        if (!ok) {
            cout << "-\n";
        } else {
            for (int i = 0; i < n; ++i)
                cout << used[i];
            cout << '\n';
        }
    }

#ifdef LOCAL
    cerr << "\n== " << 1.0 * clock() / CLOCKS_PER_SEC << " sec.\n";
#endif
    return 0;
}
