#include<bits/stdc++.h>
using namespace std;
int vis[30];
bool ans = true;
vector<int>graph[30],print;
vector<string>vec;
string str;
void dfs(int src)
{
    if(vis[src] == 1){
        ans = false;
        return;
    }
    if(vis[src] == 2){
        return;
    }
    vis[src] = 1;
    for(int x = 0;x<graph[src].size();x++)
    {
            dfs(graph[src][x]);
    }
    print.push_back(src);
    vis[src] =  2;
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0; i<n; i++)
    {
        cin>>str;
        vec.push_back(str);
    }
    for(int i=1; i<n; i++)
    {
        if(vec[i][0]!=vec[i-1][0])
            graph[vec[i-1][0] - 'a'].push_back(vec[i][0] - 'a');
        else
        {
            int ck = 0;
            int ln1 = vec[i-1].size();
            int ln2 = vec[i].size();
            int ln = min(ln1,ln2);
            for(int j=0; j<ln; j++)
            {
                if(vec[i-1][j]!=vec[i][j])
                {
                    ck = 1;
                    graph[vec[i-1][j] - 'a'].push_back(vec[i][j] - 'a');
                    break;
 
                }
            }
            if(ck == 0 && ln2<ln1)
                ans = false;
        }
    }
    for(int i=0; i<26; i++)
        if(vis[i] == 0)
            dfs(i);
    if(ans == false)
    {
        cout<<"Impossible"<<endl;
        return 0;
 
    }
    for(int i=print.size()-1;i>=0;i--)
    {
        printf("%c",print[i]+'a');
    }
    return 0;
}