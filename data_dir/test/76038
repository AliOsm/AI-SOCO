#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <sstream>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <iomanip>
#include <functional>
#include <bitset>
#include <cassert>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <memory.h>
#include <complex>
#include <numeric>
using namespace std;
#pragma comment(linker, "/STACK:256000000")
#define mp make_pair
#define pb push_back
#define all(C) (C).begin(), (C).end()
#define sz(C) (int)(C).size()
#define PRIME 1103
#define PRIME1 31415
#define INF ((1ll << 30) - 1)
#define MOD 99990001
#define FAIL ++*(int*)0
#define EPS 1e-4
template<class T> T sqr(T a) {return a * a;}
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pi64;
typedef pair<int, pii> piii;
typedef vector<int> vi;
typedef vector<int64> vi64;
typedef vector<vi64> vvi64;
typedef vector<pi64> vpi64;
typedef vector<vpi64 > vvpi64;
typedef vector<pii> vpii;
typedef vector<vector<int> > vvi;
typedef vector<vvi> vvvi;
typedef vector<vector<pair<int, int > > > vvpii;
typedef vector<vector<vector<pair<int, int > > > > vvvpii;
typedef complex<long double> cd;
//----------------------------------------------------------    
int p[100000], z[100000], n, m, k, pr;
string st;
vi ot;
void init()
{
    scanf("%d %D\n", &n, &m);
    memset(p, -1, sizeof(p));
    for (int j = 0; j < m; ++j)
    {
        char c;
        int r;
        scanf("%c %d\n", &c, &r);
        r--;
        if (c == '-')
        {
            if (p[r] == -1)
                p[r] = 1;
            z[j] = -r - 1;
        }
        else
        {
            if (p[r] == -1)
                p[r] = 0;
            z[j] = r + 1;
        }
    }
    for (int i = 0; i < n; ++i)
    {
        if (p[i] == -1)
            ot.push_back(i);
        if (p[i] == 1)
            pr++;
    }
}
void solve()
{
    int or = -1, q = 0, on = -1, spr = pr;
    for (int i = 0; i < m; ++i)
    {
        if (z[i] > 0)
        {
            if (!pr && !q)
            {   q = 1; or = z[i] - 1; on = 0;}
            pr++;
        }
        else
        {
            pr--;     
            if (!pr && !q &&  p[-z[i] - 1])
                {q = 1, or = -z[i] - 1; on = 1;}
            p[-z[i] - 1] = 0;
        }
    }
    pr = spr;
    for (int i = 0; i < m; ++i)
    {
        if (pr && !on)
            or = -1;
        if (z[i] > 0)
        {
            if (z[i] - 1 == or)
                on = 1;
            pr++;
        }
        else
        {
            if (-z[i] - 1 == or)
                on = 0;
            pr--;
        }
    }
    if (pr && !on)
        or = -1;
    for (int i = 0; i < n; ++i)
    {
        if (p[i] == 1)
            ot.push_back(i);
    }
    if (or != -1)
        ot.push_back(or);
    sort(ot.begin(), ot.end());
    printf("%d\n", ot.size());
    for (int i = 0; i < ot.size(); ++i)
        printf("%d ", ot[i] + 1);
}
int main()
{
    #ifndef ONLINE_JUDGE
         freopen ("input.txt", "r", stdin); freopen ("output.txt", "w", stdout);
    #endif
    init();
    solve();
    
    return 0;
}