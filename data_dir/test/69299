#include <bits/stdc++.h>
#include <iostream>	
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const int inf = int(2e9);
const int _inf = -inf;
const int mod = inf + 7;
const int N = 2e5 + 1;
vector<int> g[N];
bool used[N];
queue<int> q;
void dfs(int v){
		q.push(v);
			used[v] = 1;
	while(!q.empty()){
		int v = q.front();
		q.pop();
		rep(i,g[v].size()){
			if(!used[g[v][i]]){
				cout << v << " " << g[v][i] << endl;
				q.push(g[v][i]);
				used[g[v][i]] = 1;
			}
		}
	}
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int n,m;
	cin >> n >> m;
	int mx = 0;
	int ind = 0;
	rep(i, m){
		int l, r;
		cin >> l >> r;
		g[l].pb(r);
		g[r].pb(l);
		if(g[r].size() > mx)
		{
			mx = g[r].size();
			ind = r;
		}
		if(g[l].size() > mx){
			mx = g[l].size();
			ind = l;
		}
	}
	dfs(ind);
	return 0;
}