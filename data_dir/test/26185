#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cmath>
using namespace std;

#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define P_B push_back
#define F first
#define S second
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

//const int mod = 1000 * 1000 * 1000 + 7;
const int MAXN = 1000 * 100 + 10;
int p[MAXN], n, sq = 300;
pii t[MAXN];

void pre(int ind)
{
	int l = ind * sq, r = min(l + sq, n) - 1;
	ROF(i, r, l)
	{
		if(i + p[i] > r)
			t[i] = {i, 1};
		else
			t[i] = {t[i + p[i]].F, t[i + p[i]].S + 1};
	}	
}

pii get(int i)
{
	pii ans = {0, 0};
	while(i < n)
	{
		ans.S += t[i].S;
		ans.F = t[i].F;
		i = t[i].F + p[t[i].F];
	}
	return ans;
}

int main()
{
	int q;
	scanf("%d %d", &n, &q);
	FR(i, 0, n)
		scanf("%d", p + i);

	for(int i = 0; i < n; i += sq)
		pre(i / sq);
	
	while(q--)
	{
		int ty;
		scanf("%d", &ty);
		if(ty)
		{
			int a;
			scanf("%d", &a);
			pii ans = get(a - 1);
			printf("%d %d\n", ans.F + 1, ans.S);
		}
		else
		{
			int a, b;
			scanf("%d %d", &a, &b);
			a--;
			p[a] = b;
			pre(a / sq);
		}
	}
	return 0;
}

