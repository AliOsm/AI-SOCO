#include <bits/stdc++.h>
using namespace std;

struct ddt{
    int res[150];
    int sum;
    string name;
};

int n, m, a[10] = {25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
map<string, map<int,int>> res;
map<string, int> sum;
string st;

inline bool cmp1(const ddt &a, const ddt &b){
    if(a.sum == b.sum){
        for(int i = 0; i < 100; ++i){
            if(a.res[i] != b.res[i]){
                return a.res[i] > b.res[i];
            }
        }
        return true;
    }else{
        return a.sum > b.sum;
    }
}

inline bool cmp2(const ddt &a, const ddt &b){
    if(a.res[0] == b.res[0]){
        if(a.sum == b.sum){
            for(int i = 1; i < 100; ++i){
                if(a.res[i] != b.res[i]){
                    return a.res[i] > b.res[i];
                }
            }
            return true;
        }else{
            return a.sum > b.sum;
        }
    }else{
        return a.res[0] > b.res[0];
    }
}

int32_t main(){
    ios_base :: sync_with_stdio(false);
    cin >> n;
    while(n--){
        cin >> m;
        for(int i = 1; i <= m; ++i){
            cin >> st;
            ++res[st][i];
            if(i < 11)
                sum[st] += a[i - 1];
        }
    }
    vector<ddt> ans;
    for(auto &i : sum){
        ddt t;
        t.name = i.first;
        t.sum = i.second;
        for(int j = 1; j <= 100; ++j){
            t.res[j - 1] = res[i.first][j];
        }
        ans.push_back(t);
    }
    sort(ans.begin(), ans.end(), cmp1);
    cout << ans[0].name << endl;
    sort(ans.begin(), ans.end(), cmp2);
    cout << ans[0].name << endl;
}