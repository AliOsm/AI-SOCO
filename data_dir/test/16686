#include <iostream>
#include <vector>
#include <algorithm>
#include <math.h>
#include <string>
#include <map>
#include <set>

using namespace std;

typedef vector<int> vi;
typedef long long ll;

const int MODULO = 1e9 + 7;

typedef ll mod_t;

const char SPACE = ' ', ENDL = '\n';

int ri() {
	int v;
	cin >> v;
	return v;
}

ll rll() {
	ll v;
	cin >> v;
	return v;
}

vi rvi(int n) {
	vi a(n);
	for (int i = 0; i < n; ++i) cin >> a[i];
	return a;
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	int tests =
#ifdef ONLINE_JUDGED
		1;
#else
		ri();
#endif

	/*
	string
	queries
	prefix
	*/

	for (int t = 0; t < tests; ++t) {
		int n = ri();
		int k = ri();
		string s;
		cin >> s;

		string rgb = "RGB";

		int rc = 0;
		int gc = 0;
		int bc = 0;

		for (int i = 0; i < k; ++i) {
			int rn = rgb[(0 + i % 3) % 3];
			int gn = rgb[(1 + i % 3) % 3];
			int bn = rgb[(2 + i % 3) % 3];

			rc += s[i] != rn;
			gc += s[i] != gn;
			bc += s[i] != bn;
		}

		char rn = rgb[(k + 2) % 3];
		char gn = rgb[(1 + k + 2) % 3];
		char bn = rgb[(2 + k + 2) % 3];

		int ans = min(rc, min(gc, bc));
		for (int start = 1, end = start + k - 1; end < n; ++start, ++end) {
			int nr = bc - (s[start - 1] != 'B') + (s[end] != rn);
			int ng = rc - (s[start - 1] != 'R') + (s[end] != gn);
			int nb = gc - (s[start - 1] != 'G') + (s[end] != bn);

			ans = min(ans, min(nr, min(ng, nb)));
			rc = nr;
			gc = ng;
			bc = nb;
		}

		cout << ans << ENDL;
	}

	return 0;
}