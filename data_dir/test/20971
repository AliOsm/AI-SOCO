#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define fo2(i, n1, n, x) for(int i = n1; i < n; i += x)
#define foo2(i, n, n1, x) for(int i = n - 1; i >= n1; i -= x)
#define bit __builtin_popcount
#define md l + ((r - l) >> 1)
#define all(x) x.begin(),x.end()
#define ll long long
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0};
const int dy[] = {0, 0, 1, -1};
const double EPS = 1e-7;
const double PI = acos(-1.0);

bool a[1111][1111];
inline void add(int v, int u) {a[u][v] = a[v][u] = 1;}
int k;
main() {
    file("queue");
    //ios;
    cin >> k;
    vector < int > v;
    v.eb(1);
    int n = 2;
    fo(i, 0, 29, 1) {
        vector < int > b;
        for (auto & vv : v) {
            int u = ++n;
            add(vv, u);
            b.eb(u);
        }
        int u = ++n;
        b.eb(u);
        for (auto & vv : v) {
            add(u, vv);
        }
        v = b;
    }
    fo(i, 0, 29, 1) if ((k >> i) & 1) add(2, v[i + 1]);
    cout << n;
    fo(i, 1, n, 1) {
        puts("");
        fo(j, 1, n, 1) putchar(a[i][j] ? 'Y' : 'N');
    }
    return 0;
}
