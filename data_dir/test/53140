//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>

const int maxn=(int)(1e6+6);
const ll mod=(ll)(998244353);
int a[maxn],fact[maxn],inv_fact[maxn];

void print(int* x,int n)
{
    for(int i=0;i<n;i++)
    {
        cerr<<*(x+i)<<" ";
    }
}

int mul(ll a,ll b)
{
    ll ret=(a*b);

    if(ret>=mod)
    {
        ret%=mod;
    }

    return (int)ret;
}

int add(ll a,ll b)
{
    ll ret=a+b;

    if(ret>=mod)
    {
        ret%=mod;
    }

    return (int)ret;
}

int sub(ll a,ll b)
{
    ll ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return (int)ret;
}

static int poww(ll a,ll b)
{
    ll x=1,y=a;

    while(b>0)
    {
        if(b%2)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return (int)(x%mod);
}

void build()
{
    fact[0]=1;

    for(int i=1;i<maxn;i++)
    {
        fact[i]=mul(fact[i-1],i);
    }

    inv_fact[maxn-1]=poww(fact[maxn-1],mod-2);

    for(int i=maxn-2;i>=0;i--)
    {
        inv_fact[i]=mul(inv_fact[i+1],i+1);
    }
}

int C(int n,int r)
{
    if(n<r || min(n,r)<0)
    {
        return 0;
    }

    int val1=fact[n],val2=mul(inv_fact[r],inv_fact[n-r]);

    return mul(val1,val2);
}

int main()
{
    ios_base::sync_with_stdio(0);

    build();

    int n;cin>>n;

    int res=0;

    for(int i=1;i<=n;i++)
    {
        int now=mul(poww(mod-1,i+1),C(n,i));

        ll left=(n*1ll*n)-(n*i);

        int zz=mul(poww(3,i),poww(3,left));

        now=mul(now,zz);

        res=add(res,mul(2,now));
    }

    int inv=poww(3,mod-2),q=poww(inv,n),res2=0;

    for(int i=1;i<=n;i++)
    {
        int ulta=sub(mod,q);

        int now=mul(C(n,i),poww(ulta,i));

        int m=poww(3,i),yy=mul(ulta,m);

        int get=sub(poww(add(1,yy),n),1);

        int factor=mul(now,get);

        res2=add(res2,factor);

        /*
        int val=0;

        for(int j=1;j<=n;j++)
        {
            int zz=mul(poww(ulta,j),poww(3,i*1ll*j));

            int now2=mul(C(n,j),zz);

            val=add(val,now2);
        }

        res2=add(res2,mul(now,val));

         */
    }

    int pxx=poww(3,(n*1ll*n)+1),qq=mul(pxx,mod-1);

    res2=mul(res2,qq);

    res=add(res,res2);

    cout<<res<<endl;

    return 0;
}
