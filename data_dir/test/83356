#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
using namespace std;
template<class T> inline T sqr(T x) { return x * x; }
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int INF = (int)1e9;
const int maxn = (int)1e6 + 10;
const int maxm = (int)1e4 + 10;
char s[maxn],q[33];
int query[maxm],last[26],p[26];
bool cmp(int i, int j)
{
    return last[i] < last[j];
}
int main()
{
    #ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  #endif
  scanf("%s",&s);
  int n = strlen(s);
  int m;
  cin>>m;
  map<int, int> MASK;
  for(int i = 0; i < m; i++)
  {
    scanf("%s",&q);
    int l = strlen(q);
    int mask = 0;
    for(int i = 0; i < l; i++)
        mask |= (1<<(q[i] - 'a'));
    MASK[mask] = 0;
    query[i] = mask;
  }
  for(int i = 0; i < 26; i++)
    last[i] = INF;
  map<int, int>::iterator it;
  for(int i = n - 1; i >= 0; i--)
  {
        last[s[i] - 'a'] = i;
        for(int j = 0; j < 26; j++)
            p[j] = j;
        sort(p,p + 26,cmp);
        int pp = -1,mask = 0;
        if (i) pp = s[i - 1] - 'a';
        for(int j = 0; j < 26; j++)
        {
            int P = p[j];
            if (last[P] >= INF) break;
            mask |= (1<<P);
            if (i && (mask & (1<<pp))) break;
            it = MASK.find(mask);
            if (it != MASK.end()) it -> second++;
        }
  }
  for(int i = 0; i < m; i++)
    printf("%d\n",MASK[query[i]]);
  return 0;
}
