#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define ZERO (1e-10)
#define INF int(1e9+1)
#define CL(A,I) (memset(A,I,sizeof(A)))
#define DEB printf("DEB!\n");
#define D(X) cout<<"  "<<#X": "<<X<<endl;
#define EQ(A,B) (A+ZERO>B&&A-ZERO<B)
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
#define IN(n) int n;scanf("%d",&n);
#define FOR(i, m, n) for (int i(m); i < n; i++)
#define F(n) FOR(i,0,n)
#define FF(n) FOR(j,0,n)
#define FT(m, n) FOR(k, m, n)
#define aa first
#define bb second
void ga(int N,int *A){F(N)scanf("%d",A+i);}
#define SZ 10005
#define ME (SZ*4)
struct Dinic{
    int n,m,h[SZ],l[SZ],s,t,w[SZ];
    struct eg{
        int v,c,f,x;
    }e[ME];
    bool bfs(){
        static int q[SZ];
        F(n)l[i]=-1;/*CL(l,-1)*/
        int B(l[s]=0),E(1);
        q[0]=s;
        while(B<E)for(int k(q[B++]),i(h[k]);~i;i=e[i].x)
            if(e[i].f<e[i].c&&!~l[e[i].v])
                l[e[i].v]=l[k]+1,q[E++]=e[i].v;
        return ~l[t];
    }
    int dfs(int u,int f){
        if(u==t)return f;
        int mf;
        for(int i(w[u]);~i;i=e[i].x)
            if(e[i].f<e[i].c&&l[u]+1==l[e[i].v])
                if((mf=dfs(e[i].v,min(f,e[i].c-e[i].f)))>0)
                    return e[i].f+=mf,e[i^1].f-=mf,mf;
        return 0;
    }
    void ini(int N,int f,int d){n=N;s=f;t=d;m=0;F(n)h[i]=-1;}
    int ade(int u,int v,int c=1,int rc=0){
        e[m]=eg{v,c,0,h[u]};
        h[u]=m++;
        e[m]=eg{u,rc,0,h[v]};
        h[v]=m++;
        return m-2;
    }
    int mf(){
        int a(0),d;
        while(bfs()){
            memcpy(w,h,sizeof(int)*n);
            do a+=d=dfs(s,INF); while(d);
        }
        return a;
    }
}H;
#define SC (N+M) 
#define DS (SC+1)
int N,M,A[SZ],B[SZ],a,I[SZ],f[SZ],G[SZ],C[SZ];
bool ok(int t){
    H.ini(DS+1,SC,DS);
    F(M)H.ade(SC,i);
    F(N)H.ade(M+i,DS,t);
    F(M)I[i]=H.ade(i,A[i]+M),H.ade(i,B[i]+M);
    return H.mf()==M;
}
bool OK(int t){
    memcpy(G,f,sizeof(f)),CL(C,0);
    int F=0,x,O=0;
    H.ini(DS+1,SC,DS);
    F(M)H.ade(SC,i);
    F(N)H.ade(M+i,DS,t);
    while(666){
        x=0;
        F(M){
            if(C[i])continue;
            if(G[A[i]]>t&&G[B[i]]>t);//H.ade(i,A[i]+M),H.ade(i,B[i]+M),++F;
            else --G[A[i]],--G[B[i]],++C[i],x=1;
        }
        if(!x)break;
    }
    F(M)if(G[A[i]]>t&&G[B[i]]>t)H.ade(i,A[i]+M),H.ade(i,B[i]+M),++F;
    F(N)O+=G[i]>t;
    if(O*t<F)return 0;
    return H.mf()==F;
}
int bs(int B=0,int E=INF){
    int M;
    while(B<E)
        if(OK(M=(B+E)>>1))E=M;
        else B=M+1;
    return B;
}
int hup(){
    memcpy(G,f,sizeof(f)),CL(C,0);
    F(M)if(G[A[i]]<G[B[i]])++C[A[i]],--G[B[i]];
        else ++C[B[i]],--G[A[i]];
    return *max_element(C,C+N);
}
int main(void){
    scanf("%d%d",&N,&M);
    F(M)scanf("%d%d",A+i,B+i),++f[--A[i]],++f[--B[i]];
    a=bs(0,hup()),printf("%d\n",a),ok(a);
    F(M)if(!H.e[I[i]].f)printf("%d %d\n",B[i]+1,A[i]+1);
        else printf("%d %d\n",A[i]+1,B[i]+1);
    return 0;
}
