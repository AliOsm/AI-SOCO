/**
*
* Author: MARS
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair<int,int>

typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl pi = acos(-1);
const ll inf = 1LL<<30;
const dbl eps = 1e-9;
const ll mod = 1e9+7;

/** /////////// ** Code ** /////////// **/

const int N=1010;

vector<pair<int, char>>ans;
int a[N], b[N];

int main(){
    int n;
    scanf("%d",&n);
    for(int i=0 ; i<n ; i++)
        scanf("%d",&a[i]);

    int m;
    scanf("%d",&m);
    for(int i=0 ; i<m ; i++)
        scanf("%d",&b[i]);


    int j=0;
    int offs=0;

    for(int i=0 ; i<m ; i++){
        int mx=0;
        int sum=0;
        vector<ii>v;

        while(j < n && sum < b[i]){
            v.push_back({a[j], j+1});
            mx=max(mx, a[j]);
            sum+=a[j];
            j++;
        }

        if(sum != b[i]){
            printf("NO");
            return 0;
        }

        int id=-1, et=-1;
        if(v.size() == 1) continue;
        for(int k=0 ; k<v.size() ; k++){
            if(v[k].F != mx) continue;
            if(k == 0){
                if(v[k].F != v[k+1].F){
                    id=k;
                    et=k+1;
                    break;
                }
                continue;
            }
            if(k == v.size()-1){
                if(v[k].F != v[k-1].F){
                    id=k;
                    et=k-1;
                    break;
                }
                continue;
            }
            if(v[k].F != v[k+1].F || v[k].F != v[k-1].F){
                id=k;
                et = (v[k].F != v[k+1].F) ? k+1 : k-1;
                break;
            }
        }

        if(id == -1){
            printf("NO");
            return 0;
        }

        ans.push_back({v[id].S-offs, (v[et].S > v[id].S) ? 'R' : 'L'});
        int cur = min(v[et].S, v[id].S);

        for(int k=max(et, id)+1 ; k<v.size() ; k++)
            ans.push_back({cur-offs, 'R'});

        for(int k=min(et, id)-1 ; k >= 0 ; k--){
            ans.push_back({cur-offs, 'L'});
            cur--;
        }


        offs+=v.size()-1;

    }

    if(j != n){
        printf("NO");
        return 0;
    }

    printf("YES\n");
    for(auto p:ans)
        printf("%d %c\n",p.F,p.S);
}
