/*input
4
1 1 1 1
1 1 0 1
1 1 2 1
1 1 1 1
*/
#include <iostream>
#include <cstdio>
#include <vector>
#include <functional>
#include <math.h>
#include <string.h>
#include <utility>
#include <algorithm>
#include <iomanip>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <stdlib.h>
#include <list>
#include <assert.h>
#include <time.h>
#include <fstream>
#include <sstream>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define ll long long
#define N 100005
#define int long long
int a[505][505];
int n;
int sum_each = 0;
int ans = 0;
void quit() {
	cout << -1 << endl;
	exit(0);
}
signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			cin >> a[i][j];
		}
	}
	if (n == 1) {
		cout << 1 << endl;
		return 0;
	}
	for (int i = 1; i <= n; i++) {
		bool done = true;
		sum_each = 0;
		for (int j = 1; j <= n; j++) {
			if (a[i][j] == 0) {
				done = false;
				break;
			}
			else sum_each += a[i][j];
		}
		if (done) {
			break;
		}
	}
	for (int i = 1; i <= n; i++) {
		int cur = 0;
		bool need = false;
		for (int j = 1; j <= n; j++) {
			if (a[i][j] == 0) {
				need = true;
			}
			cur += a[i][j];
		}
		if (need == false && cur != sum_each) {
			quit();
		}
		else if (need) {
			int x = sum_each - cur;
			ans = x;
			if (x < 1) {
				quit();
			}
			for (int j = 1; j <= n; j++) {
				if (a[i][j] == 0) {
					a[i][j] = x;
				}
			}
		}
	}
	for (int i = 1; i <= n; i++) {
		int cur = 0;
		for (int j = 1; j <= n; j++) {
			cur += a[j][i];
		}
		if (cur != sum_each) quit();
	}
	int cur = 0;
	for (int i = 1; i <= n; i++) {
		cur += a[i][i];
	}
	if (cur != sum_each) quit();
	cur = 0;
	for (int i = 1; i <= n; i++) {
		cur += a[i][n - i + 1];
	}
	if (cur != sum_each) quit();
	cout << ans << endl;
}