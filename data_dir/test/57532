#include <bits/stdc++.h>

#define clr(x) memset((x), 0, sizeof((x)))
#define pb push_back
#define mp make_pair
#define x first
#define y second
using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> PII;


inline int nxt() {
    int a;
    scanf("%d", &a);
    return a;
}


const int N = 111;
char s[N][N];

vector <vector <int> > t;

int sum (int x, int y)
{
    int result = 0;
    for (int i = x; i >= 0; i = (i & (i+1)) - 1)
        for (int j = y; j >= 0; j = (j & (j+1)) - 1)
            result += t[i][j];
    return result;
}

void inc (int x, int y, int delta)
{
    for (int i = x; i < (int)t.size(); i = (i | (i+1)))
        for (int j = y; j < (int)t[i].size(); j = (j | (j+1)))
            t[i][j] += delta;
}

void add(int x, int y, int delta) {
    inc(0, 0, delta);
    inc(x + 1, 0, -delta);
    inc(0, y + 1, -delta);
    inc(x + 1, y + 1, delta);
}

int val(int x, int y) {
    return sum(x, y);
}


void solve() {
    int n = nxt();
    int m = nxt();
    for (int i = 0; i < n; ++i) {
        scanf("%s", s[i]);
    }
    t.assign(n + 1, vector<int>(m + 1, 0));

    int ans = 0;
    for (int i = n - 1; i >= 0; --i) {
        for (int j = m - 1; j >= 0; --j) {
            int curval = (s[i][j] == 'W' ? 1 : -1);
            int tval = val(i, j);
            if (curval == tval) continue;
            add(i, j, curval - tval);
            ++ans;
        }
    }
    cout << ans << "\n";
}

int main()
{
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
#endif // LOCAL

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    solve();

#ifdef LOCAL
    cout << "=======================\n";
    cout << "Time: " << setprecision(10) << fixed << clock() / double(CLOCKS_PER_SEC) << " sec." << endl;
#endif // LOCAL
    return 0;
}
