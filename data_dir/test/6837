#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <queue>
#define ll long long int
#define mod 1000000007
#define pii pair<int, int>
#define fr(n) for (int i = 0; i < n; i++)
#define fr1(n) for (int i = 1; i <= n; i++)
using namespace std;

int p[1003];

int root(int x) {return p[x] < 0 ? x : p[x] = root(p[x]);}

bool mer(int x, int y) {
    if ((x = root(x)) == (y = root(y))) return false;
    if (p[x] > p[y]) swap(x, y);
    p[x] += p[y];
    p[y] = x;
    return true;
}

int main() {
    ios::sync_with_stdio(false);
    fr(1003) p[i] = -1;
    int n, u, v;
    vector<int> a, b, c, d;
    cin >> n;
    fr(n - 1) {
        cin >> u >> v;
        if (!mer(u, v)) a.push_back(u), b.push_back(v);
    }
    fr1(n - 1) {
        if (mer(i, n)) c.push_back(n), d.push_back(i);
    }
    cout << a.size() << '\n';
    fr(a.size()) cout << a[i] << ' ' << b[i] << ' ' << c[i] << ' ' << d[i] << '\n';
}
