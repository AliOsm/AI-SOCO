#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <math.h>
#include <iomanip>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <sstream>
#include <random>


using namespace std;

char m[1000][1000];
int n, k;

void dfs(int i, int j) {
    if (i < 0 || j < 0 || i == n || j == k || m[i][j] == '.') {
        return;
    }

    m[i][j] = '.';
    dfs(i - 1, j);
    dfs(i + 1, j);
    dfs(i, j - 1);
    dfs(i, j + 1);
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin >> n >> k;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < k; ++j) {
            cin >> m[i][j];
        }
    }

    vector<bool> badI(n, false), badJ(k, false);
    vector<int> counterI(n, 0), counterJ(k, 0);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < k; ++j) {
            if (m[i][j] == '#') {
                ++counterI[i];
                ++counterJ[j];
            }
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < k; ++j) {
            if (counterI[i] == 0 && counterJ[j] == 0) {
                badI[i] = true;
                badJ[j] = true;
            }
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < k; ++j) {
            if (counterI[i] == 0 && counterJ[j] != 0 && !badI[i]) {
                cout << -1 << '\n';
                return 0;
            }
            if (counterI[i] != 0 && counterJ[j] == 0 && !badJ[j]) {
                cout << -1 << '\n';
                return 0;
            }
        }
    }

    for (int i = 0; i < n; ++i) {
        int last = -1;
        for (int j = 0; j < k; ++j) {
            if (m[i][j] == '#') {
                if (last != -1 && last != j - 1) {
                    cout << -1 << '\n';
                    return 0;
                }

                last = j;
            }
        }
    }

    for (int j = 0; j < k; ++j) {
        int last = -1;
        for (int i = 0; i < n; ++i) {
            if (m[i][j] == '#') {
                if (last != -1 && last != i - 1) {
                    cout << -1 << '\n';
                    return 0;
                }

                last = i;
            }
        }
    }

    int ans = 0;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < k; ++j) {
            if (m[i][j] == '#') {
                ++ans;
                dfs(i, j);
            }
        }
    }

    cout << ans << '\n';

    return 0;
}