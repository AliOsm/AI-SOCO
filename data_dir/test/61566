#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include <algorithm>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;

lli cnt[200000];
bool ok[200000];

void solve()
{
    string s, t;
    cin>>s>>t;
    lli j = 0;
    vector<lli> lx(t.size()), rx(t.size());
    for(int i = 0; i < t.size() ; i ++)
    {
        while(j < s.size() && s[j] != t[i])
            j ++;
        lx[i] = j;
        j ++;
    }
    j = s.size() - 1;
    for(int i = t.size() - 1; i >= 0; i --)
    {
        while(j >= 0 && s[j] != t[i])
            j --;
        rx[i] = j;
        j --;
    }
    lx.insert(lx.begin(), -1);
    rx.insert(rx.begin(), -1);
    lx.push_back(s.size());
    rx.push_back(s.size());
    /*
    for(auto it : lx)
        cout<<it<<' ';
    cout<<endl;
    for(auto it : rx)
        cout<<it<<' ';
    cout<<endl;
    */
    lli ans = 0;
    for(int i = 1; i <= t.size() + 1; i ++)
    {
        ans = max(ans, rx[i] - lx[i - 1] - 1);
    }
    cout<<ans;
    return ;
}
/*
10
6
10 3 2 5 7 8
*/
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
