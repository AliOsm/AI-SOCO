#pragma GCC optimize("O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


#define ll long long
#define ld long double
#define pb push_back
#define f first
#define s second
#define y1 bbp
#define sz size()
int const N=1e6+13,inf=1e9+7,md=998244353;
ll a[N],dp[N],b[N],n,m,l,r,x,y,q,qq,ans;
string s,t;
vector<int> v[N];
void dfs(int g,int pr)
{
    dp[g]=a[g];
    for (int to:v[g])
    {
        if (to==pr) continue;
        dfs(to,g);
        dp[g]+=max(0ll,dp[to]);
    }
}
void dfs1(int g,int pr)
{
    b[g]=dp[g];
    for (int to:v[g])
    {
        if (to==pr) continue;
        dp[g]-=max(0ll,dp[to]);
        dp[to]+=max(0ll,dp[g]);
        dfs1(to,g);
        dp[to]-=max(0ll,dp[g]);
        dp[g]+=max(0ll,dp[to]);

    }
}
main()
{

    srand(time(0));
//    freopen("shuffling.in","r",stdin);freopen("shuffling.out","w",stdout);
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin>>n;
    for (int i=1;i<=n;i++)
    {
        cin>>x;
        if (x==0) x=-1;
        a[i]=x;
    }
    for (int i=1;i<n;i++)
    {
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    dfs(1,0);
    dfs1(1,0);
    for (int i=1;i<=n;i++) cout<<b[i]<<" ";
}
