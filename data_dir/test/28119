#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#pragma comment(linker, "/STACK:400000000")

#define EPS 1e-9
#define INF MOD
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(it=X.begin();it!=X.end();it++)
#define iss istringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sst stringstream
#define sz(x) ((int)x.size())
#define vc vector
typedef vc<int> vi;
typedef vc<ll> vl;
typedef vc<string> vs;

int n,a[100010],apos[100010],b[100010];
int mv[100010];
multiset<int> posi,nega;
multiset<int>::ite it;

int main(){
	ios_base::sync_with_stdio(0);
	cin>>n;
	rep(i,n){
		cin>>a[i];
		a[i]--;
		apos[a[i]]=i;
	}
	rep(i,n){
		cin>>b[i];
		b[i]--;
		int dif = i - apos[b[i]];
		if(dif>0)posi.insert(dif);
		else nega.insert(-dif);
		mv[i] = apos[b[i]];
	}
	rep(ii,n){
		int erased = posi.erase(ii);
		rep(i,erased)nega.insert(-ii);
		
		int minP = INF, minN = INF;
		if(!posi.empty())minP = *posi.begin() - ii;
		if(!nega.empty())minN = *nega.begin() + ii;
		cout<<min(minP,minN)<<endl;
		
		it = nega.find(mv[ii]-ii);
		nega.erase(it);
		posi.insert(n-mv[ii]+ii);
	}
}
