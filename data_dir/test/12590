#include <iostream>

#include <set>
#include <map>
#include <deque>
#include <cmath>
#include <queue>
#include <random>
#include <cstring>
#include <bitset>
#include <time.h>
#include <string>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <iomanip>
#include <cassert>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
#define itn int

#define NIE false
#define TAK true
///#define endl '\n'
#define mp make_pair
#define pbc push_back
#define pob pop_back()
#define empb emplace_back
#define sp system("pause")
#define queuel queue<long long>
#define matrix vector<vector<ll>>
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define pin(p) cin >> p.first >> p.second;
#define rev(v) reverse(v.begin(), v.end());
#define endl '\n'
#define mx(v) max_element(v.begin(), v.end());
#define mn(v) min_element(v.begin(), v.end());
#define dig(c) (c >=' 0' && c <= '9') ? 1 : 0
#define sout(s, c) for (auto i : s) cout << i << c;
#define pout(p) cout << p.first << " " << p.second;
#define er(v, l, r) erase(v.begin() + l, v.begin() + r);
#define vin(v) for (ll i = 0; i < v.size(); ++i) cin >> v[i];
#define vout(v, c) for (int i = 0; i < v.size(); ++i) cout << v[i] << c;
#define pushi(v, a) for (int i = 0; i < a.size(); ++i) v.push_back(a[i]);
#define fastio() ios_base::sync_with_stdio(0); cout.tie(0); cin.tie(0);
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
using namespace std;
/*▄███████▀▀▀▀▀▀███████▄
░▐████▀▒ЗАПУСКАЕМ▒▀██████▄
░███▀▒▒▒▒▒ДЯДЮ▒▒▒▒▒▒▀█████
░▐██▒▒▒▒▒БОГДАНА▒▒▒▒▒████▌
░▐█▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌
░░█▒▄▀▀▀▀▀▄▒▒▄▀▀▀▀▀▄▒▐███▌
░░░▐░░░▄▄░░▌▐░░░▄▄░░▌▐███▌
░▄▀▌░░░▀▀░░▌▐░░░▀▀░░▌▒▀▒█▌
░▌▒▀▄░░░░▄▀▒▒▀▄░░░▄▀▒▒▄▀▒▌
░▀▄▐▒▀▀▀▀▒▒▒▒▒▒▀▀▀▒▒▒▒▒▒█
░░░▀▌▒▄██▄▄▄▄████▄▒▒▒▒█▀
░░░░▄█████████████  █▒▒▐▌
░░░▀███▀▀████▀█████▀▒▌
░░░░░▌▒▒▒▄▒▒▒▄▒▒▒▒▒▒▐
░░░░░▌▒▒▒▒▀▀▀▒▒▒▒▒▒▒▐*/
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
//++--++--++--++--++--++--++--++--++--+--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
const int MAXN = 300008;
const ll inf = 1000000001;
const ll INF = 2e18;
const ld EPS = 1e-7;
const ll mod = inf + 6;
const int moff = 998244353;

const int mod13 = 1000003;
const ld PI = acos(-1.0);

vector<pair<int, int>> op;
int n;
void swp(int i, int j)
{
	if (2 * abs(i - j) >= n)
	{
		op.pbc({ i,j });
		return;
	}
	if (i < n / 2 && j < n / 2)
	{
		op.pbc({ i, n - 1 });
		op.pbc({ j, n - 1 });
		op.pbc({ i, n - 1 });
	}
	else if (i >= n / 2 && j >= n / 2)
	{
		op.pbc({ 0,i });
		op.pbc({ 0,j });
		op.pbc({ 0,i });
	}
	else
	{
		if (i > j) swap(i, j);
		op.pbc({ i,n -1 });
		op.pbc({ 0,j });
		op.pbc({ 0,n - 1 });
		op.pbc({ 0,j });
		op.pbc({ i,n - 1 });
	}
}
int pos[MAXN];
signed main()
{
	fastio();
	cin >> n;
	vector<int> a(n);
	
	vin(a);
	if (n == 2)
	{
		if (is_sorted(all(a)))
		{
			cout << 0;
			return 0;
		}
		else
		{
			cout << 1 << endl << "1 2";
			return 0;
		}
	}
	priority_queue<int> s;
	for (int i = 0; i < n; ++i)
	{
		pos[a[i]] = i;
	}
	for (int i = 0; i < n; ++i)
	{
		if (i != a[i] - 1)
		{
			s.push(a[i]);
		}
	}
	while (s.size())
	{
		int x = s.top();
	
		int j = x - 1;
		if (pos[x] == j)
		{
			s.pop();
			continue;
		}
		int kek = pos[x];
		swp(kek, j);
		pos[a[x - 1]] = pos[x];
		if (pos[a[x - 1]] != a[x - 1] - 1)
		{
			s.push(a[x - 1]);
		}
		a[pos[x]] = a[x-1];
		a[x - 1] = x;
		
		pos[x] = x - 1;
		
		s.pop();
	}
	cout << op.size() << endl;
	for (auto i : op)
	{
		cout << i.first + 1 << ' ' << i.second + 1 << endl;
	}
//	sp;
}

