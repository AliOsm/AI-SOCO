#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

typedef long long ll;
typedef tree<
int,
null_type,
less < int >,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

const int maxn = (int) 3e5 + 1;
const int mod = (int) 1e9 + 7;
const double pi = acos(-1);

int n;
pair < int , int > a[maxn];
ll sum;
vector < int > v;
int main(){
    cin >> n;
    for(int i = 1; i <= n; i++){
        cin >> a[i].first;
        sum += a[i].first;
        a[i].second = i;
    }
    sort(a + 1, a + n + 1);
    for(int i = 1; i <= n; i++){
        if(i == n){
            ll cur = sum - a[i].first - a[n - 1].first;
            if(cur == a[n - 1].first){
                v.push_back(a[i].second);
            }
        }
        else {
            ll cur = sum - a[i].first - a[n].first;
            if(cur == a[n].first){
                v.push_back(a[i].second);
            }
        }
    }
    cout << v.size() << "\n";
    for(int i : v){
        cout << i << " " ;
    }
}
