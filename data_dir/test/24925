#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <cmath>
#include <ctime>
#include <map>
#include <iterator>
#include <queue>
#include <list>
#include <stack>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef list < int > :: iterator IteratorList;

const int NMax = 100011;
const int INF = (int) 1e9;
const int cntTree = 2 * 262145;
const ld eps = 1e-9;
const double PI = 3.141592653589793238462;
const int MD = (int) 1e7 + 9;

#define MIN(x,y) ((x) > (y) ? (y) : (x))
#define MAX(x,y) ((x) > (y) ? (x) : (y))
#define SQR(x) ((x) * (x))
#define ABS(x) ((x) < (0) ? (-(x)) : (x))
#define SZ(x) (int) (x).size()


int n,m,ans;
int a[101],b[101];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    cin >> n >> m;
    for (int i = 1;i <= n;i++) cin >> a[i];
    for (int i = 1;i <= m;i++) cin >> b[i];
    sort(a + 1, a + n + 1);
    sort(b + 1,b + m + 1);
    ans = a[n];
    if (ans >= b[1])
    {
        cout << -1 << endl;
        return 0;
    }
    if (2 * a[1] > ans && 2 * a[1] >= b[1])
    {
        cout << -1 << endl;
        return 0;
    }
    cout << MAX(2 * a[1],ans) << endl;
    
    
}
