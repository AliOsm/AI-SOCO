#include <iostream>
#include <queue>
#include <set>
#include <algorithm>
#include <cmath>
#include <climits>
#include <algorithm>
#include <bitset>
#include <stack>
#include <sstream>
#include <vector>
#include <string>
#include <list>
#include <map>
#define mp make_pair
#define F first
#define S second
#define DEBUG
#define ull long long
#define pii pair<int, int>
#define loop(xxx,n) for(int xxx = 0; xxx < n; xxx++)

using namespace std;





void output(vector<vector<pii>> &g) {
	loop(i, g.size()) {
		cout << i << " :";
		loop(j, g[i].size()) {
			cout << g[i][j].first << '$' << g[i][j].second << ' ';
		}
		cout << endl;
	}
}

map<string, string> parent;

void make_set(string s) {
	parent[s] = s;
}

string find_leader(string s) {
	if (parent[s] == s)
		return s;
	return find_leader(parent[s]);
}

set<string> leaves;

void union_sets(string old, string new1) {
	leaves.erase(old);
	leaves.insert(new1);
	parent[new1] = old;
}

int main() {
	int n;
	cin >> n;
	vector<pair<string, string>> v(n);
	loop(i, n) {
		cin >> v[i].first >> v[i].second;
		make_set(v[i].first);
		make_set(v[i].second);
	}


	loop(i, n) {
		string old = v[i].first;
		string new1 = v[i].second;
		union_sets(old, new1);
	}

	cout << leaves.size() << endl;
	for (set<string>::iterator it = leaves.begin(); it != leaves.end(); it++)
		cout << find_leader(*it) << ' ' << *it << endl; // Incher inch darav
	return 0;
}