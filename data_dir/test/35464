
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <cstdio>
#include <random>
#include <chrono>
#define ll long long
#define ld long double
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define int long long
using namespace std;

const int INF = 2e15;
const int MOD = 998244353;
int MB = 20;

void solve() {
	int n, m;
	cin >> n >> m;
	vector<pair<int, pair<int, int>>> edges(m);
	for (int i = 0; i < m; i++) {
		int from, to, w;
		cin >> from >> to >> w;
		from--; to--;
		edges[i] = { w, {from, to} };
	}

	sort(edges.begin(), edges.end());

	vector<int> dp(n), dp1(n);
	for (int i = 0; i < m;) {
		int left = i;
		int right = i;
		while (right < m - 1 && edges[right + 1].first == edges[right].first) {
			right++;
		}

		for (int j = left; j <= right; j++) {
			int from = edges[j].second.first;
			int to = edges[j].second.second;
			dp[to] = max(dp[to], dp1[from] + 1);
		}

		for (int j = left; j <= right; j++) {
			dp1[edges[j].second.second] = dp[edges[j].second.second];
		}
		i = right + 1;
	}

	int ans = 0;
	for (int i : dp) {
		ans = max(i, ans);
	}
	cout << ans;
}


signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}