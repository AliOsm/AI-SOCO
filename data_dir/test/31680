
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

ll N, K;
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0);
  cin >> N >> K;
  N--;
  K--;
  if ((1+K)*K/2 < N)
  {
    cout << -1 << endl;
    return 0;
  }
  if (N == 0)
  {
    cout << 0 << endl;
    return 0;
  }
  ll good = K;
  ll bad = 0;
  while (bad + 1 < good)
  {
    ll m = (good + bad) / 2;
    // (K-m+1) .. K
    ll tot = (K + (K-m+1)) * m / 2;
    if (tot >= N)
      good = m;
    else
      bad = m;
  }
  cout << good << endl;

}
