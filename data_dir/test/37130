#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll a[105];
ll sat[105][105];
ll dp[1<<20][20];
int bit(int m)
{
	int co  = 0;
	while(m){
		co++;
		m = m&(m-1);
	}
	return co;
}
int main()
{
	int n,m,k;
	cin>>n>>m>>k;
	int i;
	for(i=0;i<n;i++)
		cin>>a[i];
	int j;
	int x,y;
	ll z;
	for(i=0;i<k;i++)
	{
		cin>>x>>y>>z;
		x--;
		y--;
		sat[x][y] = z;
	//	printf("%d to %d are %d\n",x,y,z);

	}
	int total = 1<<n;
	int mask;
	ll  ans = 0;
	for(i=0;i<n;i++)
		dp[1<<i][i] = a[i];
	for(mask = 0;mask<total; mask++)
	{
		for(i=0;i<n;i++)
		{

			if(mask & (1<<i))// if ith dish is taken already
			{
				for(j=0;j<n;j++)
				{
					if( !(mask & (1<<j)))  // jth dish was not taken so we can take it before i or after i
					{
						int next = mask | (1<<j);
						dp[next][j] = max(dp[next][j], dp[mask][i] + a[j] + sat[i][j]);

					}
				}
				if(bit(mask)==m){
					ans = max(ans,dp[mask][i]);
					//printf("mask is %d and we need %d\n",mask,m);
				}
			}
			
		}

	}
cout<<ans<<endl;

}