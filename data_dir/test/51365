#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(4)
#include<bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define mem(a, b) memset(a, b, sizeof(a))
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define fopen freopen("in.txt", "r", stdin);freopen("out.txt", "w", stout);
//head

pair<LL, LL> cal(LL x, LL y, LL xx, LL yy) {
    if((xx-x+1) <= 0 || (yy-y+1) <= 0) return {0, 0};
    if(((xx-x+1)*(yy-y+1)) % 2 == 0) return {(xx-x+1)*(yy-y+1)/2, (xx-x+1)*(yy-y+1)/2};
    else {
        if((x+y)%2 == 0) return {(xx-x+1)*(yy-y+1)/2+1, (xx-x+1)*(yy-y+1)/2};
        else return {(xx-x+1)*(yy-y+1)/2, (xx-x+1)*(yy-y+1)/2+1};
    }
}
int main() {
    int t;
    LL x1, y1, x2, y2, x3, y3, x4, y4, n, m;
    scanf("%d", &t);
    while(t--) {
        scanf("%lld %lld", &n, &m);
        scanf("%lld %lld %lld %lld", &x1, &y1, &x2, &y2);
        scanf("%lld %lld %lld %lld", &x3, &y3, &x4, &y4);
        LL cnt1 = (x2 - x1 + 1) * (y2 - y1 + 1);
        LL cnt2 = (x4 - x3 + 1) * (y4 - y3 + 1);
        LL tot0 = cal(1, 1, m, n).fi;
        LL tot1 = cal(1, 1, m, n).se;
        int mxx = max(x1, x3), mxy = max(y1, y3);
        int mnx = min(x2, x4), mny = min(y2, y4);
        LL t = 1LL * (mnx - mxx + 1) * (mny - mxy + 1);
        if((mnx - mxx+1) > 0 && (mny - mxy + 1) > 0) {
            cnt1 -= t;

            tot0 -= cal(x1, y1, x2, y2).fi;
            tot1 -= cal(x1, y1, x2, y2).se;

            tot0 -= cal(x3, y3, x4, y4).fi;
            tot1 -= cal(x3, y3, x4, y4).se;

            tot0 += cal(mxx, mxy, mnx, mny).fi;
            tot1 += cal(mxx, mxy, mnx, mny).se;
        }
        else {
            tot0 -= cal(x1, y1, x2, y2).fi;
            tot1 -= cal(x1, y1, x2, y2).se;

            tot0 -= cal(x3, y3, x4, y4).fi;
            tot1 -= cal(x3, y3, x4, y4).se;
        }
        printf("%lld %lld\n", cnt1+tot0, cnt2+tot1);
    }
    return 0;
}
