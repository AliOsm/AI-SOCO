#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int n,m;
vector < int > v[300100];
multiset < int > st;
map < int , int > mp;

int main()
{
    cin >> n >> m;
    for(int i=0; i<m; i++)
    {
        int x,y;
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    for(int i=1; i<=n; i++)
    {
        sort(v[i].begin(), v[i].end());
        st.insert(v[i].size());
    }
    for(int i=1; i<=n; i++)
    {
        st.erase(st.find(v[i].size()));
        for(int j=0; j<v[i].size(); j++)
        {
            int common = upper_bound(v[v[i][j]].begin(), v[v[i][j]].end(), i) - lower_bound(v[v[i][j]].begin(), v[v[i][j]].end(), i);
            if(v[i].size() + v[v[i][j]].size() - common >=m)  return cout<<"YES",0;
            if(!mp.count(v[i][j]))  st.erase(st.find(v[v[i][j]].size())),mp[v[i][j]];
        }
        if(st.size() && v[i].size() + *st.rbegin() >=m)  return cout<<"YES",0;
        st.insert(v[i].size());
        for(int j=0; j<v[i].size(); j++)  if(mp.count(v[i][j]))  st.insert(v[v[i][j]].size()) , mp.erase(v[i][j]);
    }
    cout<<"NO";
    return 0;
}
