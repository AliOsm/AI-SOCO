#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <string.h>

using namespace std;

#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) ((int)x.size())
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)1e4 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;

set<int> mnGood, mn;
vector <pair< int, int> > g[Z];
bool ok, used[Z];

void dfs(int v) {
	used[v] = 1;
	mnGood.insert(v);
	for (int i = 0; i < sz(g[v]); ++i) {
		int to = g[v][i].fi, w = g[v][i].se;
		if (!w) mn.insert(to);
		if (used[to] || !w) continue;
		dfs(to);
	}
}

int main() {
	//files;
	SWS;
	int n, m, k, ans = 0;
	cin >> n; 
	cin >> m;
	for (int i = 0; i < m; ++i) {
		int x, y;
		cin >> x >> y;
		g[x].pb(mk(y,1));
		g[y].pb(mk(x,1));
	}
	cin >> k;
	for (int i = 0; i < k; ++i) {
		int x, y;
		cin >> x >> y;
		g[x].pb(mk(y,0));
		g[y].pb(mk(x,0));
	}
	for (int i = 1; i <= n; ++i) {
		fill(used + 1, used + 1 + n, false);
		mnGood.clear();
		mn.clear();
		dfs(i);
		ok = true;
		for (set<int>::iterator it = mn.begin(); it != mn.end(); ++it)
			if (mnGood.count(*it)) ok = false;
		if (ok) ans = max(ans, sz(mnGood));
	}
	cout << ans;
	return 0;
}