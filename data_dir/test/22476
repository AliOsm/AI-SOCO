/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)15;

// ------- 变量 ------- //

int n, m, mx, remain;
char s[N][N], ans[N][N];
int dx[][5] = {
{0, 0, 0, 1, 2},
{0, 1, 1, 1, 2},
{0, 1, 2, 2, 2},
{0, 1, 1, 1, 2}
};
int dy[][5] = {
{0, 1, 2, 1, 1},
{2, 0, 1, 2, 2},
{1, 1, 0, 1, 2},
{0, 0, 1, 2, 0}
};

// ------- 函数 ------- //

void dfs(int x, int y, int cnt) {
    if (y == m-1) { x++; y = 1; }
    if (x == n-1) {
        if (cnt > mx) {
            mx = cnt;
            rep(i, 1, n+1) strcpy(ans[i]+1, s[i]+1);
        }
        return ;
    }
    if (cnt + remain / 6 <= mx) return ;
    rep(i, 0, 4) {
        bool ok = 1;
        rep(j, 0, 5) if (s[x+dx[i][j]][y+dy[i][j]] != '.') { ok = 0; break; }
        if (!ok) continue;
        rep(j, 0, 5) s[x+dx[i][j]][y+dy[i][j]] = 'A' + cnt;
        remain -= 6;
        dfs(x, y+1, cnt+1);
        remain += 6;
        rep(j, 0, 5) s[x+dx[i][j]][y+dy[i][j]] = '.';
    }
    dfs(x, y+1, cnt);
}

void Init() {
    mx = 0;
    rep(i, 1, n+1) rep(j, 1, m+1) s[i][j] = ans[i][j] = '.';
    remain = n * m;
}

int Solve() {
    if (n < 3 || m < 3) {
        puts("0");
        rep(i, 1, n+1) {
            rep(j, 1, m+1) putchar('.');
            puts("");
        }
        return 0;
    }
    dfs(1, 1, 0);
    printf("%d\n", mx);
    rep(i, 1, n+1) puts(ans[i]+1);
}

// ------- main ------- //

int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &m)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}