#include<bits/stdc++.h>
using namespace std;
const int N = 1e5 + 10;
int s[N][3], n, a[N];
vector< pair<int, int> > ans;


int cnt(int sym, int l, int r) {
    int res = s[r][sym];
    if (l)
        res -= s[l - 1][sym];
    return res;
}


int f(int l, int r) {
    int x = cnt(1, l, r), y = cnt(2, l, r);
    return max(x, y);
}


char check(int t) {
    vector<int> win(3);

    for (int i = 0; i < n; ) {
        if (f(i, n - 1) < t)
            return false;
        int r = n - 1;
        for (int step = 1<<20; step; step /= 2) {
            if (r - step < i)
                continue;
            if (f(i, r - step) >= t)
                r -= step;
        }
        if (cnt(1, i, r) == t)
            win[1]++;
        else
            win[2]++;
        i = r + 1;
    }

    if (win[1] == win[2])
        return false;

    if (win[1] > win[2] && a[n - 1] == 2)
        return false;
    if (win[2] > win[1] && a[n - 1] == 1)
        return false;

    ans.push_back(make_pair(max(win[1], win[2]), t));
    return true;
}


main() {
#ifndef ONLINE_JUDGE
    freopen("1.txt", "r", stdin);
#endif // ONLINE_JUDGE

    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
        s[i][ a[i] ] = 1;
        if (!i)
            continue;
        s[i][1] += s[i - 1][1];
        s[i][2] += s[i - 1][2];
    }

    for (int t = 1; t <= n; t++)
        check(t);

    printf("%d\n", ans.size());
    sort(ans.begin(), ans.end());
    for (pair<int, int> i : ans)
        printf("%d %d\n", i.first, i.second);

    return 0;
}
