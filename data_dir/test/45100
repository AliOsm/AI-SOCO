#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

map<ll,ll>m;
set<ll>s;
vector<ll>v1, v2;

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	ll n;
 	cin >> n;
 	ll a[n];
 	for(int i=0;i<n;i++) cin >> a[i];
 	for(int i=0;i<n;i++) m[a[i]]++, s.insert(a[i]);
 	for(auto it : s)
 	{
 		if(m[it] > 2)
 		{
 			cout << "NO" << endl;
 			return 0;
 		}
 		else if(m[it] == 2)
 		{
 			v1.pb(it);
 			v2.pb(it);
 		}
 		else if(m[it] == 1)
 		{
 			v1.pb(it);
 		}
 	}
 	cout << "YES" << endl;
 	cout << sz(v1) << endl;
	for(int i=0;i<sz(v1);i++)
	{
		cout << v1[i] << " ";
	}
	cout << endl;
 	cout << sz(v2) << endl;
 	for(int i=sz(v2) - 1;i>=0;i--)
	{
		cout << v2[i] << " ";
	}
	cout << endl;
    return 0;
}