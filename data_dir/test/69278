#include <iostream>
#include <vector>
#include <queue>
#include <set>
#include <algorithm>
#define INT long long int
#define oo 7999999876543210000ll
#define MOD 998244353
#define endl "\n"
using namespace std;
INT T, n, m, a, b, c, p[200020], p2[200020], p3[200020], ans;
vector<INT> G[200020];
INT chk[200020], chk2[200020], chk3[200020];
vector<INT> pt[200020];
int main()
{
    ios::sync_with_stdio(false);
    cin>>T;
    while( T-- )
    {
        ans = oo;
        cin>>n>>m>>a>>b>>c;
        for(int i = 1 ; i <= n ; i++ ) G[i].resize(0), chk[i] = chk2[i] = chk3[i] = false;
        for(int i = 0 ; i < m ; i++ ) cin>>p[i];
        for(int i = 0 ; i < m ; i++ )
        {
            INT u, v;
            cin>>u>>v;
            G[u].push_back(v);
            G[v].push_back(u);
        }
        queue<INT> q;
        chk[b] = 1, q.push(b);
        while( !q.empty() )
        {
            b = q.front(), q.pop();
            for(INT v : G[b] )
                if( !chk[v] )
                    q.push(v), chk[v] = chk[b]+1;
        }
        chk2[c] = 1, q.push(c);
        while( !q.empty() )
        {
            c = q.front(), q.pop();
            for(INT v : G[c] )
                if( !chk2[v] )
                    q.push(v), chk2[v] = chk2[c]+1;
        }
        chk3[a] = 1, q.push(a);
        while( !q.empty() )
        {
            a = q.front(), q.pop();
            for(INT v : G[a] )
                if( !chk3[v] )
                    q.push(v), chk3[v] = chk3[a]+1;
        }
        sort(p, p+m);
        for(int i = 1 ; i < m ; i++ ) p[i] += p[i-1];
        for(int i = 1 ; i <= n ; i++ )
        {
            //cout<<i<<":"<<chk[i]-1<<" "<<chk2[i]-1<<" "<<chk3[i]-1<<endl;
            if( chk[i]+chk2[i]+chk3[i]-3 <= m )
            {
                if( chk[i]-2 < 0 ) ans = min( ans, (p[chk2[i]+chk3[i]-3]) );
                else ans = min( ans, p[chk[i]-2]+(p[chk[i]+chk2[i]+chk3[i]-4]) );
            }
        }
        cout<<ans<<endl;
    }
    
}