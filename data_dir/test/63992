#include<bits/stdc++.h>
#define LL long long
#define ll long long
#define fi first
#define se second
#define mk make_pair
#define PII pair<int, int>
#define y1 skldjfskldjg
#define y2 skldfjsklejg

using namespace std;

const int N = 1e5 + 7;
const int M = 1e7 + 7;
const int inf = 0x3f3f3f3f;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1000000007;

int n, a[N];
LL dp[N][2];
vector<int> edge[N];

void add(LL &a, LL b) {
    a += b; if(a >= mod) a -= mod;
}

LL fastPow(LL a, LL b) {
    LL ans = 1;
    while(b) {
        if(b & 1) ans = ans * a % mod;
        a = a * a % mod; b >>= 1;
    }
    return ans;
}

void dfs(int u) {
    if(!edge[u].size()) {
        if(a[u] == 0) dp[u][0] = 1;
        else dp[u][1] = 1;
        return;
    }
    if(a[u] == 1) {
        LL ret = 1;
        for(int v : edge[u]) {
            dfs(v);
            ret = ret * (dp[v][0] + dp[v][1]) % mod;
        }
        dp[u][1] = ret;
    } else {
        LL ret = 1;
        for(int v : edge[u]) {
            dfs(v);
            ret = ret * (dp[v][0] + dp[v][1]) % mod;
        }
        dp[u][0] = ret;

        for(int v : edge[u]) {
            LL tmp = ret * fastPow((dp[v][0] + dp[v][1]) % mod, mod - 2) % mod * dp[v][1] % mod;
            add(dp[u][1], tmp);
        }
    }
}

int main() {
    scanf("%d", &n);
    for(int i = 2; i <= n; i++) {
        int fa; scanf("%d", &fa);
        edge[fa + 1].push_back(i);
    }

    for(int i = 1; i <= n; i++) {
        scanf("%d", &a[i]);
    }

    dfs(1);
//    printf("%lld %lld\n", dp[3][0], dp[3][1]);
    printf("%lld\n", dp[1][1]);
    return 0;
}


/*
*/
