#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cmath>
#include <stdio.h>
#include <cstdio>
#include <cstdlib>
#include <memory.h>
#include <time.h>
#include <algorithm>
#include <set>
#include <iomanip>
#include <cassert>
#include <string>
#include <cstring>
using namespace std;
#define oo 2000000000
#define mod 1000000007
const int N = 300010;
int n, a, b , frq[N] , last;
bool taken[N];
vector< pair<int, int> > edges;
int main() {
	//freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
	cin >> n;
	for (int i = 0; i < n - 1; i++) {
		scanf("%d%d", &a, &b);
		if (b != n) {
			puts("NO");
			return 0;
		}
		frq[a]++;
	}
	for (int i = 1; i < n; i++) {
		if (frq[i] == 0) continue;
		frq[i]--;
		last = n;
		for (int j = i - 1; j > 0 && (frq[i] > 0); j--) {
			if (taken[j]) continue;
			frq[i]--;
			taken[j] = true;
			edges.push_back(make_pair(last, j));
			last = j;
		}
		taken[i] = true;
		if (frq[i] > 0) {
			puts("NO");
			return 0;
		}
		edges.push_back(make_pair(last, i));
	}
	if ((int)edges.size() != n - 1) {
		puts("NO");
		return 0;
	}
	puts("YES");
	for (int i = 0; i < (int)edges.size(); i++) {
		printf("%d %d\n", edges[i].first, edges[i].second);
	}
	return 0;
}