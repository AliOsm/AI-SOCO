#include <bits/stdc++.h>
#define st first
#define nd second

using namespace std;

void debug_out() { cerr << endl; }
template<class T> ostream& prnt(ostream& out, T v) { out << v.size() << '\n'; for(auto e : v) out << e << ' '; return out;}
template<class T> ostream& operator<<(ostream& out, vector <T> v) { return prnt(out, v); }
template<class T> ostream& operator<<(ostream& out, set <T> v) { return prnt(out, v); }
template<class T1, class T2> ostream& operator<<(ostream& out, map <T1, T2> v) { return prnt(out, v); }
template<class T1, class T2> ostream& operator<<(ostream& out, pair<T1, T2> p) { return out << '(' << p.st << ' ' << p.nd << ')'; }
template <typename Head, typename... Tail> void debug_out(Head H, Tail... T) { cerr << " " << H; debug_out(T...);}

#define dbg(...) cerr << #__VA_ARGS__ << " ->", debug_out(__VA_ARGS__)
#define dbg_v(x, n) do{cerr<<#x"[]: ";for(int _=0;_<n;++_)cerr<<x[_]<<" ";cerr<<'\n';}while(0)
#define dbg_ok cerr<<"OK!\n"

// const int N = ;
int n;
string s;
int main() {
	ios_base::sync_with_stdio(false);
	cin >> s >> s;
	if(s.size() % 2 == 1) return cout << ":(", 0;

	int n1 = s.size() / 2;
	int n2 = s.size() / 2;
	for(auto i : s)
		if(i == '(') n1--;
		else if(i == ')') n2--;

	if(n1 < 0 || n2 < 0) return cout << ":(", 0;

	for(auto &i : s)
		if(i == '?') {
			if(n1) i = '(', n1--;
			else i = ')', n2--;
		}
	
	int sum = 0;
	for(int i = 0; i < s.size(); i++) {
		if(s[i] == '(') sum++;
		else sum--;
		if(sum < 0 || sum == 0 && i != s.size() - 1)
			return cout << ":(" , 0;
	}
	cout << s << '\n';


}	

	