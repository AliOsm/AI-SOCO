/* 3D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 5e4+5;
char s[maxn];
int A[maxn], B[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	scanf("%s", s);
	int len = strlen(s);
	int ln = 0, tmp;
	__int64 ans = 0;
	priority_queue<pii, vpii, greater<pii> > Q;
	
	rep(i, 0, len) {
		if (s[i] == '?') {
			scanf("%d %d", &A[i], &B[i]);
			ans += B[i];
			s[i] = ')';
			Q.push(mp(A[i]-B[i], i));
		}
		
		if (s[i] == '(') {
			++ln;
		} else if (ln > 0) {
			--ln;
		} else {
			if (Q.empty()) {
				puts("-1");
				return 0;
			}
			#ifndef ONLINE_JUDGE
				tmp = Q.top().fir;
				printf("i = %d, tmp = %d\n", i, tmp);
			#endif
			ans += Q.top().fir;
			s[Q.top().sec] = '(';
			Q.pop();
			++ln;
		}
	}
	
	if (ln != 0) {
		puts("-1");
	} else {
		printf("%I64d\n", ans);
		puts(s);
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
