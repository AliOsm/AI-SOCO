#include<bits/stdc++.h>
using namespace std;
int ans = 0;


struct node{
    unordered_map<char, node*> go;
    node() {}


    void extend(char c) {
        if (go.find(c) != go.end()) {
            return;
        }

        ans++;
        go[c] = new node;
    }

    void dfs(string s = "") {
        printf("%s\n", s.c_str());

        for (auto i : go) {
            i.second->dfs(s + i.first);
        }
    }
} *root = new node;


main() {
#ifndef ONLINE_JUDGE
    freopen("1.txt", "r", stdin);
#endif // ONLINE_JUDGE

    string s, t;
    getline(cin, s);
    getline(cin, t);
    int n = s.length(), k;
    vector<char> is_bad(200);

    for (int i = 'a'; i <= 'z'; i++) {
        is_bad[i] = t[i - 'a'] == '0';
    }

    scanf("%d", &k);

    for (int i = 0; i < n; i++) {
        int bad = 0;
        node *v = root;

        for (int j = i; j < n; j++) {
            bad += is_bad[s[j]];

            if (bad > k) {
                break;
            }

            v->extend(s[j]);
            v = v->go[s[j]];
        }
    }

    //root->dfs();

    printf("%d", ans);

    return 0;
}
