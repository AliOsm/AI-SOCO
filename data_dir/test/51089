#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=3e5+5;
ll dp[M],ans=0;
std::vector<ll> vtr[M];
void dfs(ll x,ll p)
{
	ll mx=0;
	ll c=0;
	for(auto u:vtr[x])
	{
		if(u!=p)
		{
			dfs(u,x);
			mx=max(mx,dp[u]);
			c++;
		}
	}
	if(mx==0)
		c++;
	dp[x]=1+mx+c-1;
}
void solve(ll x,ll p,ll z)
{
	ll mx1=0,mx2=0;
	mx1=z;
	for(auto u:vtr[x])
	{
		if(u!=p)
		{
			if(mx1>dp[u])
			{
				mx2=max(mx2,dp[u]);
			}
			else
			{
				mx2=mx1;
				mx1=dp[u];
			}
		}
	}
	ans=max(ans,mx1+mx2+1+max(sz(vtr[x])-2,(ll)0));
	for(auto u:vtr[x])
	{
		if(u!=p)
		{
			if(mx1==dp[u])
				solve(u,x,mx2+1);
			else
				solve(u,x,mx1+1);
		}
	}
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll q;
	cin>>q;
	while(q--)
	{
		ll n;
		cin>>n;
		for(ll i=1;i<=n;i++)
			vtr[i].clear();
		for(ll i=1;i<n;i++)
		{
			ll u,v;
			cin>>u>>v;
			vtr[u].pb(v);
			vtr[v].pb(u);
		}
		dfs(1,-1);
		ans=0;
		solve(1,-1,0);
		cout<<ans<<"\n";
	}
	return 0;
}