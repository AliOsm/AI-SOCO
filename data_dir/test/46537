
#include <bits/stdc++.h>

#define forsn(i,s,n) for(tint i=(s);i<(tint)(n); i++)
#define forn(i,n) forsn(i,0,n)
#define dforn(i,n) for(tint i = tint(n)-1; i >= 0; i--)
#define debug(x) cout << #x << " = "  << x << endl

using namespace std;

typedef long long tint;

void imprimirVector (vector<tint> v)
{
	if (!v.empty())
	{ 
		tint p = tint(v.size());
		cout << "[";
		forn(i,p-1)
			cout << v[i] << ",";
		cout << v[p-1] << "]" << endl;
	}
	else
		cout << "[]" << endl;
}

int main()
{
	#ifdef ACMTUYO
		assert(freopen("entrada.in", "r", stdin));
	#endif
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	tint n;
	while (cin >> n)
	{
		vector<tint> a (2*n);
		forn(i,2*n)
			cin >> a[i];
		tint ans = 0;
		forn(i,n)
		{
			tint x = a[2*i];
			tint y = a[2*i+1];
			if (x != y)
			{
				tint mini_x = 2*n+1, mini_y = 2*n+1;
				forsn(j,2*i+2,2*n)
				{
					mini_x = min(mini_x,(a[j]==x)*(j-2*i-1) + (a[j] != x)*(2*n+1));
					mini_y = min(mini_y,(a[j]==y)*(j-2*i) + (a[j] != y)*(2*n+1));
				}
				//~ imprimirVector(a);
				//~ debug(mini_x);
				//~ debug(mini_y);
				tint r = mini_x;
				if (mini_y < mini_x)
				{
					swap(a[2*i],a[2*i+1]);
					r = mini_y-1;
					ans++;
				}
				forn(k,r)
				{
					swap(a[2*i+r-k],a[2*i+1+r-k]);
					ans++;
				}
			}
			
		}
		//~ imprimirVector(a);
		cout << ans << "\n";
	}
	
	return 0;
}



