#include<vector>
#include<iostream>
#include<algorithm>
#include<math.h>
#include<string>

typedef long long ll;
using namespace std;
typedef pair<ll, ll> pii;

#define MAX 10;

int a[303];

int main() {
//#ifdef ABABA
//	freopen("input.txt", "r", stdin);
//	//freopen("output.txt", "w", stdout);
//#endif

	string s; cin >> s;
	int k; cin >> k;

	int n = s.size();

	int cnt1 = 0, cnt2 = 0;
	for (int i = 0; i < n; i++) {
		if (s[i] == '?')
			cnt1++;
		if (s[i] == '*')
			cnt2++;
	}

	if (cnt2) {
		for (int i = 0; i < n; i++) {
			if (s[i] == '?')
				a[i] = -1;
		}

		int temp = n - 2 * cnt1;
		if (k < temp - 2 * cnt2)
			return cout << "Impossible\n", 0;

		if (temp > k) {
			int dd = temp - k;
			for (int i = 0; i < n; i++) {
				if (s[i] == '*') {
					if (dd == 1)
						a[i] = 0, dd--;
					else if (dd > 1)
						a[i] = -1, dd -= 2;
					else
						a[i] = 1;
				}
			}
		}
		else {
			bool b = false;
			for (int i = 0; i < n; i++) {
				if (s[i] == '*') {
					if (b)
						a[i] = 1;
					else {
						int dif = k - temp;
						a[i] = k - temp + 1;
						b = true;
					}
				}
			}
		}
	}
	else {
		if (k > n - cnt1)
			return cout << "Impossible\n", 0;
		if (k < n - 2 * cnt1)
			return cout << "Impossible\n", 0;

		int temp = n - cnt1 - k;
		for (int i = 0; i < n; i++) {
			if (temp == 0)
				break;

			if (s[i] == '?')
				a[i] = -1, temp--;
 		}
	}

	//int temp = n;
	//for (int i = 0; i < n; i++) {
	//	if (s[i] == '?') {
	//		if (temp <= k)
	//			a[i] = 0;
	//		else {
	//			a[i] = -1;
	//			temp--;
	//		}
	//	}
	//	if (s[i] == '*') {
	//		if (temp == k)
	//			a[i] = 0;
	//		if (temp < k) {
	//			a[i] = k - temp;
	//			temp = k;
	//		}
	//		if (temp > k) {
	//			a[i] = -1;
	//			temp--;
	//		}
	//	}
	//}

	string res;
	for (int i = 0; i < n; i++) {
		if (s[i] == '?') {
			if (a[i] == -1)
				res.pop_back();
			else
				;
		}
		else if (s[i] == '*') {
			if (a[i] == -1)
				res.pop_back();
			else if (a[i] == 0)
				;
			else
				while (a[i]--)
					res.push_back(res.back());
		}
		else
			res.push_back(s[i]);
	}

	cout << res << "\n";
	//cout << res.size() << "\n";

	//system("pause");

	return 0;
}