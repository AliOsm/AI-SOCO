#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
#define MOD 1000000007
int N , Q , T;
vi W;
vi fo[310];
int inc[310];
bool used[310];
vector<vi> pts;
int dp[100010];
int main(){
  scanf("%d%d%d" , &N , &Q , &T);
  W.resize(N);
  for(int i=0;i<N;++i)
   scanf("%d" , &W[i]);
  for(int i=0;i<Q;++i){
   int f , t;
   scanf("%d%d" , &f , &t);
   --f , --t;
   fo[f].pb(t) , ++inc[t];
                      }
  int BR = 0;
  for(int i=0;i<N;++i){
   if(used[i] || inc[i])continue;
   pts.pb( vi() );
   int pos = i; pts.back().pb(pos);
   while(sz(fo[pos])>0)
    pos = fo[pos][0] , pts.back().pb(pos);
   BR += sz(pts.back());
                      }
  if(BR != N)puts("0");
  else{
   vi neo;
   for(int i=0;i<sz(pts);++i){
    vi& buf = pts[i];
    int sum = 0;
    for(int j=0;j<sz(buf);++j){
     T -= (sz(buf) - 1 - j) * W[ buf[j] ];
     if(T < 0){
      puts("0");
      return 0;
              }
     sum += W[ buf[j] ];
     neo.pb(sum);
                              }
                             }
   dp[0] = 1;
   for(int i=0;i<sz(neo);++i)
    for(int j=neo[i];j<=T;++j){
     dp[j] += dp[j-neo[i]];
     if(dp[j] >= MOD)
      dp[j] -= MOD;
                              }
   printf("%d\n" , dp[T]);
      }
  return 0;
}
