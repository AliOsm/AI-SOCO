#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<cassert>
#include<cassert>
#include<unordered_map>
#include<unordered_set>
#include<functional>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<sstream>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<numeric>
#include<random>
#include<chrono>
#include<bitset>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define pb push_back
#define xx first
#define yy second
#define sz(x) (int)(x).size()
#define gc getchar
#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define mp make_pair

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const double PI=3.1415926535897932384626433832795;
const ll INF = 1LL<<62;
const ll MINF = -1LL<<62;

template<typename T> T getint() {
	T val=0;
	char c;
	
	bool neg=false;
	while((c=gc()) && !(c>='0' && c<='9')) {
		neg|=c=='-';
	}

	do {
		val=(val*10)+c-'0';
	} while((c=gc()) && (c>='0' && c<='9'));

	return val*(neg?-1:1);
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); uniform_int_distribution<int>(0, n-1)(rng)


int n;
struct iv {
	int l,r,ind;
};

struct ev {
	int typ,x,ind;
	bool operator<(const ev& masik) const {
		return mp(typ,x)<mp(masik.typ,masik.x);
	}
};

vector<iv> a,b;

vector<int> szomsz(vector<iv> lst) {
	vector<int> vegek, kezdok;
	for(auto i:lst) {
		vegek.pb(i.r);
		kezdok.pb(i.l);
	}
	
	sort(all(vegek));
	sort(all(kezdok));
	
	vector<int> ans(sz(lst));
	int ind=0;
	for(auto i:lst){
		auto it1=lower_bound(all(vegek), i.l);
		if(it1!=vegek.begin()) {
			ans[ind]+=prev(it1)-vegek.begin()+1;
		}
		
		auto it2=lower_bound(all(kezdok), i.r+1);
		ans[ind]+=kezdok.end()-it2;
		
		
		ind++;
	}
	
	return ans;
}

int main() {
	IO;
	cin>>n;
	a.resize(n);
	b.resize(n);
	
	for(int i=0;i<n;++i) {
		int q,w,e,r;
		cin>>q>>w>>e>>r;
		a[i]={q,w,i};
		b[i]={e,r,i};
	}
	vector<int> AA=szomsz(a);
	vector<int> BB=szomsz(b);
	
	cout<<(AA==BB?"YES":"NO")<<"\n";
/*
	for(auto i:szomsz(a)) {
		cerr<<i<<" ";
	}cerr<<"\n";
	
	for(auto i:szomsz(b)) {
		cerr<<i<<" ";
	}cerr<<"\n";
	*/
	return 0;
}
