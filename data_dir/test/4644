#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <vector>

#if LOCAL
	#define DO_NOT_SEND
#endif

typedef long long LL;

int IntMaxVal = (int) 1e20;
int IntMinVal = (int) -1e20;
LL LongMaxVal = (LL) 1e20;
LL LongMinVal = (LL) -1e20;

#define FOR(i, a, b) for(int i = a; i < b ; ++i)
#define FORD(i, a, b) for(int i = a; i >= b; --i)

template<typename T> inline void minimize(T &a, T b) { a = std::min(a, b); }
template<typename T> inline void maximize(T &a, T b) { a = std::max(a, b); }

#define all(v) v.begin(),v.end()

using namespace std;

#define endl '\n'
template<typename T> struct argument_type;
template<typename T, typename U> struct argument_type<T(U)> { typedef U type; };
#define next(t, i) argument_type<void(t)>::type i; cin >> i;
#define nextVector(t, v, size) vector< argument_type<void(t)>::type > v(size); { for (int i = 0 ; i < size ; i++) cin >> v[i]; }

#define range(name, start, count) vector<int> name(count); { for (int i = 0 ; i < count ; i++) name[i] = i + start; }

template <typename T1, typename T2> istream& operator >>(istream& is, pair<T1, T2>& s) { is >> s.first >> s.second; return is; }
template <typename T> ostream& operator << (ostream& os, const vector<T> &v) { for (int i = 0 ; i < v.size() ; i++) os << v[i] << ' '; os << endl; return os; }
template <typename T1, typename T2> ostream& operator <<(ostream& s, pair<T1, T2>& t) { s << t.first << ' ' << t.second; return s; }
template <typename T> vector<T> readVector(int n) { vector<T> res(n); for (int i = 0 ; i < n ; i++) cin >> res[i]; return res; }

void solve1(int a, double s, double &d, double &val) {
	if (a == 0) {
		d = 0;
		val = 0;
	} else {
		d = s;
		val = log(s) * a;
	}
}

double eps = 1e-15;

void solve2(int a, int b, double &d1, double &d2, double s, double &val) {
	if (a == 0) {
		d1 = 0;
		solve1(b, s, d2, val);
	} else if (b == 0) {
		solve1(a, s, d1, val);
		d2 = 0;
	} else {
		double l = 0;
		double r = s;
		FOR (i, 0, 500) {
			double v1 = l + (r - l) / 3;
			double v2 = l + 2 * (r - l) / 3;
			
			double val1;
			double val2;
			double dv;
			solve1(b, s - v1, val1, dv);
			val1 = a * log(v1) + dv;
			solve1(b, s - v2, val2, dv);
			val2 = a * log(v2) + dv;
			if (val1 > val2) r = v2;
			else l = v1;
		}
		d1 = (l + r) / 2;
		d2 = s - d1;
		val = a * log(d1) + b * log(d2);
	}
}

void solve3(int a, int b, int c, double &d1, double &d2, double &d3, int s) {
	double val;
	if (a == 0) {
		d1 = 0;
		solve2(b, c, d2, d3, s, val);
	} else if (b == 0) {
		d2 = 0;
		solve2(a, c, d1, d3, s, val);
	} else if (c == 0) {
		d3 = 0;
		solve2(a, b, d1, d2, s, val);
	} else {
		double l = 0;
		double r = s;
		
		FOR (i, 0, 500) {
			double v1 = l + (r - l) / 3;
			double v2 = l + 2 * (r - l) / 3;
			
			double val1;
			double val2;
			double dv1, dv2;
			solve2(b, c, dv1, dv2, s - v1, val1);
			solve2(b, c, dv1, dv2, s - v2, val2);
			val1 += a * log(v1);
			val2 += a * log(v2);
			
			if (val1 > val2) r = v2;
			else l = v1;
		}
		d1 = (l + r) / 2;
		solve2(b, c, d2, d3, s - d1, val);
		val += a * log(d1);
	}
}

int main() {
	srand (time(NULL));
    ios_base::sync_with_stdio(false); cin.tie(NULL);
	
	next(int, s);
	next(int, a);
	next(int, b);
	next(int, c);
	double d1, d2, d3;
	solve3(a, b, c, d1, d2, d3, s);
	if (d1 < 0) d1 = 0;
	if (d2 < 0) d2 = 0;
	if (d3 < 0) d3 = 0;
	fixed(cout);
	cout << setprecision(14) << d1 << ' ' << d2 << ' ' << d3 << endl;
}