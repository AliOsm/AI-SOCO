#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int mod = 1000007;

const int sz = 3e5 + 10;

struct node {
    int en[3];
    node *next[3];
    node() {
        for( int i=0; i<3; i++ ) next[i] = NULL, en[i] = 0;
    }
    void insert( int n, int p )  {
        if( p == -1 ) return;
        int id = n & ( 1 << p ) ? 1 : 0;
        en[id]++;
        if( next[id] == NULL ) next[id] = new node();
        next[id]->insert( n, p-1 );
    }
    void remove( int n, int p )  {
        if( p == -1 ) return;
        int id = n & ( 1 << p ) ? 1 : 0;
        en[id]--;
        if( next[id] == NULL ) return;
        next[id]->remove( n, p-1 );
    }
    int srch( int n, int p )  {
        if( p == -1 ) return 0;
        int id = n & ( 1 << p ) ? 1 : 0;
        if( next[id^1] != NULL && en[id^1] ) return next[id^1]->srch( n, p-1 ) | ( 1 << p );
        if( next[id] != NULL && en[id] ) return next[id]->srch( n, p-1 );
        return 0;
    }
    int srch2( int n, int p )  {
        if( p == -1 ) return 0;
        int id = n & ( 1 << p ) ? 1 : 0;
        if( next[id] != NULL && en[id] ) return next[id]->srch2( n, p-1 );
        if( next[id^1] != NULL && en[id^1] ) return next[id^1]->srch2( n, p-1 ) | ( 1 << p );
        return 0;
    }
    void del() {
        for( int i=0; i<3; i++ ) {
            if( next[i] != NULL ) next[i]->del();
        }
        delete this;
    }
} *root;

int ar[sz];

int main() {
        #ifdef CLown1331
                freopen("in.txt", "r", stdin);
        #endif /// CLown1331

        int n;

        while( scanf( "%d", &n ) == 1 ) {

                root = new node();

                for( int i=0; i<n; i++ ) {
                        int x;
                        scanf( "%d", &x );
                        ar[i] = x;
                }

                for( int i=0; i<n; i++ ) {
                        int x;
                        scanf( "%d", &x );
                        root->insert( x, 30 );
                }

                for( int i=0; i<n; i++ ) {
                        int x = ar[i];
                        int y = root->srch2( x, 30 );
                        printf( "%d ", y );
                        root->remove( x ^ y, 30 );
                }

                printf( "\n");

                root->del();

        }

        return 0;
}
