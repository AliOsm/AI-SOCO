#include <cstdlib>
#include <iostream>
#include <map>
#include <stdio.h>
#include <vector>
#include<bits/stdc++.h>
#include <ctype.h>
#include <list>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#define _CRT_SECURE_NO_DEPRECATE
#define INF 1000000000
#define Set(a, s) memset(a, s, sizeof (a))
#define forpos(i,j,k) for (int i=0 ; i<j ; i+=k)
#define forneg(i,j,k) for (int i=j ;i>=0 ;i-=k)
#define PI 3.14159265358979323846
#define pf printf
#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
       ( std::ostringstream() << std::dec << x ) ).str()


using namespace std;

typedef long long ll;
typedef std::pair<int,int> ii;
typedef std::pair<std::string,int> si;
typedef vector<int> vi;
typedef vector<ii> vii;

unsigned power( unsigned val, unsigned _pow=0 ) {
	if ( _pow <= 0 )
		return 1;
	return val * power( val, _pow-1 );
}


int main()
{
    int n ; scanf("%d" , &n);
    char arr1[2*n] , arr2[2*n];
    scanf("%s\n%s" , &arr1,&arr2);
    int cnt1 = 0 , cnt2 =0 , cntBelow =0;



    for(int i =0 ; i < 2*n ; ++i)
        if(arr1[i]=='1' && arr2[i]!='1')
        cnt1++;


    for(int i =0 ; i < 2*n ; ++i)
        if(arr2[i]=='1' && arr1[i]!='1')
        cnt2++;


   for(int i =0 ; i < 2*n ; ++i)
        if(arr1[i]=='1' && arr2[i] =='1')
            cntBelow++;

    cnt1+=(cntBelow&1)+(cntBelow/2);
    cnt2+= (cntBelow/2);
    if(cnt2>cnt1)cnt2--;
    if(cnt1 > cnt2)
        printf("First");
    else if(cnt2>cnt1)
        printf("Second");
    else printf("Draw");
	return 0;
}
