/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int a,b,c,M;

vector< VI > V;
VI marked;

int dfs(int u, int d)
{
	marked[u]=1;
	if(d>M)
	{
		M=d;
		c=u;
	}
	int ret=0,flag=0;
	if(u==a || u==b)
	{
		flag=1;
	}
	for(int i=0;i<V[u].size();i++)
	{
		int v=V[u][i];
		if(v==a || v==b) flag++;
		if(!marked[v] && flag!=2)
		{
			dfs(v,1+d);
		}
		if(v==a || v==b) flag--;
	}
	return 1+ret;
}

int findMin(int start, int n)
{
	c=0; M=0;
	marked.assign(n+1,0);
	dfs(start,0);
	M=0;
	marked.assign(n+1,0);
	dfs(c,0);
	return M;
}

int main()
{
	FastIO();
	int n,l1,l2,ans=0;
	cin>>n;
	V.assign(n+1,VI());
	vector< VI > edge(n+1,VI(n+1,0));
	rep1(i,n-1)
	{
		cin>>a>>b;
		V[a].pb(b);
		V[b].pb(a);
		edge[a][b]=edge[b][a]=1;
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=i+1;j<=n;j++)
		{
			if(!edge[i][j]) continue;
			a=i;
			b=j;
			l1=findMin(a,n);
			l2=findMin(b,n);
			trace4(i,j,l1,l2);
			ans=max(ans,l1*l2);
		}
	}
	cout<<ans<<endl;
	return 0;
}