#include "bits/stdc++.h"
using namespace std;
const int N=1e5+20;
int n,u,v,i,sz[N];
vector <int> adj[N];
bool vis[N];
char ans[N];

int dfs(int node,int parent=0)
{
	sz[node]=1;
	for(auto child:adj[node])
		if(child!=parent and not vis[child])
			sz[node]+=dfs(child,node);
	return sz[node];
}

int centroid(int node,int tree_size,int parent=0)
{
	for(auto child:adj[node])
		if(child!=parent and not vis[child] and sz[child]>tree_size/2)
			return centroid(child,tree_size,node);
	return node;
}

void go(int node,char ch)
{
	node=centroid(node,dfs(node));
	ans[node]=ch;
	vis[node]=true;
	
	for(auto child:adj[node])
		if(not vis[child]) go(child,ch+1);
}

int main()
{
	scanf("%d",&n);
	for(i=0;i<n-1;i++)
	{
		scanf("%d%d",&u,&v);
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	
	go(1,'A');
	for(i=1;i<=n;i++) printf("%c ",ans[i]);
}