#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define DEBUG
#ifdef DEBUG
#define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
	template <typename Arg1>
	void __f(const char* name, Arg1&& arg1){
		cerr << name << " : " << arg1 << std::endl;
	}
	template <typename Arg1, typename... Args>
	void __f(const char* names, Arg1&& arg1, Args&&... args){
		const char* comma = strchr(names + 1, ','); cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
	}
#else
#define debug(...)
#endif
#define FOR(i,a,b) 	for(int i=a;i<b;++i)
#define RFOR(i,a,b) 	for(int i=a;i>=b;--i)
#define ln 		"\n"
#define mp make_pair
#define pb push_back
#define sz(a)	ll(a.size())
#define F first
#define S second
#define all(c)	c.begin(),c.end()
#define trace(c,x) for(auto &x:c)
#define pii pair<int,int>
typedef long long ll;
typedef long double ld;
typedef	priority_queue<pii,std::vector<pii>,greater<pii> > revpr;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> pbds;
// ordered_set X
//K-th smallest
//*X.find_by_order(k-1)
//NO OF ELEMENTS < A
//X.order_of_key(A)

const int L=1e6+7;
bool xcomp(pair<pii,pii> x, pair<pii, pii>y)
{
	return x.F.F < y.F.F;
}
bool ycomp(pair<pii,pii> x, pair<pii, pii> y)
{
	return x.F.S < y.F.S;
}
bool solve(std::vector<pair<pii, pii> > v)
{
	// debug(sz(v));
	if(sz(v) == 1)return 1;
	sort(all(v), xcomp);
	// trace(v,x)debug(1,x.F.F,x.F.S,x.S.F,x.S.S);
	int r = v[0].S.F, n = sz(v);
	std::vector<pair<pii,pii> > v1, v2;
	v1.pb(v[0]);
	FOR(i,1,n)
	{
		// debug(r,v[i].F.F);
		if(r <= v[i].F.F)
		{
			FOR(j,i,n)v2.pb(v[j]);
			return (solve(v1) && solve(v2));
		}
		v1.pb(v[i]);
		r = max(r, v[i].S.F);
	}
	sort(all(v), ycomp);
	// trace(v,x)debug(2,x.F.F,x.F.S,x.S.F,x.S.S);
	v1.clear();
	v2.clear();
	v1.pb(v[0]);
	r = v[0].S.S;
	FOR(i,1,n)
	{
		// debug(r,v[i].F.S);
		if(r <= v[i].F.S)
		{
			FOR(j,i,n)v2.pb(v[j]);
			return (solve(v1) && solve(v2));
		}
		v1.pb(v[i]);
		r = max(r, v[i].S.S);
	}
	return 0;
}
int main()
{
		ios_base::sync_with_stdio(false);
	 	cin.tie(NULL);
	 	int a, b, c, d, n;
	 	cin >> n;
		std::vector<pair<pii, pii> > v;
	 	FOR(i,0,n)
	 	{
	 		cin >> a >> b >> c >> d;
	 		v.pb({{a,b},{c,d}});
	 	}
	 	if(solve(v))cout<<"YES\n";
	 	else cout<<"NO\n";
		return 0;
}