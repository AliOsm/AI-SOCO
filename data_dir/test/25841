#include <bits/stdc++.h>
#include <ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define oo       1e9
#define ll       long long
#define sc(x)    scanf("%d",&x)
#define sz(x)    (int)x.size()
#define all(x)   x.begin(),x.end()
#define rall(x)   x.rbegin(),x.rend()
#define F        first
#define S        second
#define pi       acos(-1)
#define EPS      1e-13

int n;
int p,c;
int arr[100100];
vector<pair<int,int> > adj[100100];

int cnt[100100];
int vis[100100];
int sad[100100];

int dfsCnt(int cur){
  if(vis[cur])return 0;
  vis[cur]=1;
  cnt[cur]=1;
  for(int i=0;i<sz(adj[cur]);i++){
    cnt[cur]+=dfsCnt(adj[cur][i].first);
  }
  return cnt[cur];
}

multiset<long long> st;

void solve(int cur,long long sum){
  vis[cur]=1;
  if(cur==1){
    for(int i=0;i<sz(adj[cur]);i++){
      solve(adj[cur][i].first,adj[cur][i].second);
    }
  }else{
    // check if sad
    if(sum>arr[cur]){
      sad[cur]=1;
    }else{
      long long nxt=sum-arr[cur];
      if(sz(st)>0&&st.lower_bound(nxt)!=st.begin())sad[cur]=1;
    }
    if(sad[cur])return;
    st.insert(sum);

    for(int i=0;i<sz(adj[cur]);i++){
      if(vis[adj[cur][i].first]==0)
        solve(adj[cur][i].first,sum+adj[cur][i].second);
    }

    st.erase(st.find(sum));
  }
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
#endif
  sc(n);
  for(int i=1;i<=n;i++)
    sc(arr[i]);
  for(int i=2;i<=n;i++){
    scanf("%d%d",&p,&c);
    adj[p].push_back({i,c});
    adj[i].push_back({p,c});
  }
  dfsCnt(1);
  memset(vis,0,sizeof vis);
  solve(1,0);
  int res=0;
  for(int i=1;i<=n;i++){
    if(sad[i])res+=cnt[i];
  }
  cout<<res;
}
