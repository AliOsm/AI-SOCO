#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

const int N = 100000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n;
    cin >> n;
    int a[n];
    int sq = 0;
    rep(i, 0, n)
    {
        cin >> a[i];
        int x = round(sqrt(a[i]));
        if (x * x == a[i])
            sq++;
    }
    if (sq > n / 2)
    {
        vector<int> val;
        rep(i, 0, n)
        {
            int x = round(sqrt(a[i]));
            if (x * x != a[i])
                continue;
            if (a[i] == 0)
                val.push_back(2);
            else
                val.push_back(1);
        }
        sort(val.begin(), val.end());
        ll ans = 0;
        rep(i, 0, sq - n / 2)
            ans += val[i];
        cout << ans << "\n";
    }
    else
    {
        vector<int> val;
        rep(i, 0, n)
        {
            int x = round(sqrt(a[i]));
            if (x * x == a[i])
                continue;
            if (x * x > a[i])
                x--;
            val.push_back(min(a[i] - x * x, (x + 1) * (x + 1) - a[i]));
        }
        sort(val.begin(), val.end());
        ll ans = 0;
        rep(i, 0, n / 2 - sq)
            ans += val[i];
        cout << ans << "\n";
    }
    return 0;
}
