#include <bits/stdc++.h>
using namespace std;

const int N = 4e5 + 10;

int w[N];
int fa[N][20], rec[N][20], fa2[N][20];
long long sum[N][20];

int main(){
	int q, cnt, ty, pos, ans;
	long long last, a, b;
	scanf("%d",&q);
	memset(fa, 0, sizeof(fa));
	memset(rec, -1, sizeof(rec));
	last = 0; cnt = 1;
	for (int i = 1; i <= q; i++){
		scanf("%d %I64d %I64d",&ty,&a,&b);
		a ^= last; b ^= last;
		if (ty == 1){
			cnt++;
			w[cnt] = b;
			fa[cnt][0] = a;
			rec[cnt][0] = w[a];
			sum[cnt][0] = b;
			for (int j = 1; j < 20; j++){
				fa[cnt][j] = fa[fa[cnt][j - 1]][j - 1];
				rec[cnt][j] = max(rec[cnt][j - 1], rec[fa[cnt][j - 1]][j - 1]);
			}
			pos = cnt;
			for (int j = 19; j >= 0; j--){
				if (rec[pos][j] < b) pos = fa[pos][j];
			}
			fa2[cnt][0] = fa[pos][0];
			for (int j = 1; j < 20; j++){
				fa2[cnt][j] = fa2[fa2[cnt][j - 1]][j - 1];
				sum[cnt][j] = sum[cnt][j - 1] + sum[fa2[cnt][j - 1]][j - 1];
			}
		}
		else{
			pos = a; ans = 0;
			for (int j = 19; j >= 0; j--){
				if (fa2[pos][j] && sum[pos][j] <= b){
					ans += (1 << j);
					b -= sum[pos][j];
					pos = fa2[pos][j];
				}
			}
			if (sum[pos][0] <= b) ans++;
			printf("%d\n", ans);
			last = ans;
		}
	}
	return 0;
}