#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pi;
constexpr int inf = 0x3f3f3f3f;
constexpr double EPS = 1e-15;
constexpr double PI = atan(1) * 4;

template <typename T> inline bool chmax(T& x, T y) {return x < y ? x = y, 1 : 0;}
template <typename T> inline bool chmin(T& x, T y) {return x > y ? x = y, 1 : 0;}
inline int LSB(int i) {return (i & -i);}

/*
    - Read carefully
    - Look for patterns/observations
    - Think backwards
*/

constexpr int maxn = 2e5+5;

int n, a[maxn];
priority_queue <ll, vector <ll>, greater<ll>> pq;
queue <ll> q;
ll res;

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        pq.push(a[i]);
    }

    //Didn't realize it was Huffman Coding (for 3 children)
    if (n % 2 == 0) pq.push(0);
    while (pq.size() > 1){
        ll sum = 0;
        for (int i = 0; i < 3; i++){
            sum += pq.top();
            pq.pop();
        }

        res += sum;
        pq.push(sum);
    }

    cout << res << endl;
    return 0;
}
