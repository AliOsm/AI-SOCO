// BEGIN CUT HERE

// END CUT HERE
#line 5 "main.cpp"
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <ctime>
using namespace std;
typedef  long long lld;
#define clr(x,a) memset(x,a,sizeof(x))
#define sz(x) (int)x.size()
#define see(x) cerr<<#x<<" "<<x<<endl
#define se(x) cerr<<" "<<x
#define pb push_back
#define mp make_pair
const int mod = 252;
lld dp[20][252][48];
int ID[2521];
void init()
{
    int num = 0;
    for(int i = 1; i <= 2520; i++)
    {
        if(2520%i==0)
        {
            ID[i] = num++;
        }
    }
}
int dig[20];
int gcd(int a,int b)
{
    return !b ? a : gcd(b,a%b);
}
int lcm(int a,int b)
{
    if(!a) return b;
    if(!b) return a;
    return a/gcd(a,b)*b;
}
lld dfs(int len,int premod,int prelcm,bool lim)
{
    if(len == 0) return premod % prelcm == 0;
    if(!lim && ~dp[len][premod][ID[prelcm]])  return dp[len][premod][ID[prelcm]];
    int mx = lim ? dig[len-1] : 9;
    lld ret = 0;
    for(int i = 0; i <= mx; i++)
    {
        int nextlcm = lcm(prelcm,i);
        int nowmod = premod*10+i;
        if(len > 1) nowmod = nowmod % 252;
        ret += dfs(len-1,nowmod,nextlcm,lim&&i==mx);
    }
    if(!lim) dp[len][premod][ID[prelcm]] = ret;
    return ret;
}
lld gao(lld num)
{
    int tot = 0;
    for(;num;num/=10) dig[tot++] = num%10;
    return dfs(tot,0,1,true);
}
int main()
{
    memset(dp,-1,sizeof(dp));
    init();
    int t;
    lld l,r;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%I64d%I64d",&l,&r);
        printf("%I64d\n",gao(r)-gao(l-1));
    }
    return 0;
}
