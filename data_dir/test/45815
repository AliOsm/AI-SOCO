#include <bits/stdc++.h>

using namespace std;

#define INF 123456789
string str, a, b;
int nxt1[55][26], nxt2[55][26];
int dp[1005][55][55];
bool vis[1005][55][55];

int f(int idx, int len1, int len2)
{
    if(idx == (int)str.length()) return 0;
    if(vis[idx][len1][len2]) return dp[idx][len1][len2];
    vis[idx][len1][len2] = true;
    int l = 0, r = 25;
    if(str[idx] != '*') l = str[idx]-'a', r = str[idx]-'a';
    int ret = -INF;
    for(int i=l; i<=r; i++){
        int nlen1 = nxt1[len1][i];
        int nlen2 = nxt2[len2][i];
        int sum = (nlen1 == (int)a.size()) - (nlen2 == (int)b.size()) + f(idx+1, nlen1, nlen2);
        ret = max(ret, sum);
    }
    return dp[idx][len1][len2] = ret;
}

int calc(string t)
{
    int n = (int) t.length();
    int ret = 0;
    for(int len=1; len<=n-1; len++){
        string p = t.substr(0, len);
        string q = t.substr(n-len, len);
        if(p == q) ret = len;
    }
    return ret;
}

int main()
{
    cin >> str >> a >> b;
    string cur = "";
    for(int len1=0; len1<=(int)a.length(); len1++){
        for(int j=0; j<26; j++){
            cur += (char)((int)'a'+j);
            if(len1 != (int)a.length() && (a[len1]-'a' == j) ) nxt1[len1][j] = len1+1;
            else nxt1[len1][j] = calc(cur);
            //cout << cur << " " << nxt1[len1][j] << endl;
            cur.pop_back();
        }
        //cout << endl;
        if(len1 != (int)a.length()) cur += a[len1];
    }
    cur = "";
    for(int len2=0; len2<=(int)b.length(); len2++){
        for(int j=0; j<26; j++){
            cur += (char)((int)'a'+j);
            if(len2 != (int)b.length() && (b[len2]-'a' == j) ) nxt2[len2][j] = len2+1;
            else nxt2[len2][j] = calc(cur);
            cur.pop_back();
        }
        if(len2 != (int)b.length()) cur += b[len2];
    }
    memset(vis, false, sizeof vis);
    cout << f(0, 0, 0);
}
