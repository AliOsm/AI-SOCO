#include <stdio.h>
#include <string.h>
#include <algorithm>
#define MAXN 31
#define MAX_K 51
#define INF 0x3f3f3f3f
using namespace std;

int dp[MAXN][MAXN][MAX_K];

int solve(int n, int m, int k) {
    if (k == 0 || n * m == k) {
        return 0;
    }
    if (n * m < k) {
        return INF;
    }
    if (n == 1 && m == 1) {
        return 0;
    }
    if (dp[n][m][k] != -1) {
        return dp[n][m][k];
    }

    int aux = INF;
    for (int i = 0; i <= k; i++) {
        for (int j = 1; j < n; j++) {
            aux = min(aux, m * m + solve(j, m, i) + solve(n - j, m, k - i));
        }
        for (int j = 1; j < m; j++) {
            aux = min(aux, n * n + solve(n, j, i) + solve(n, m - j, k - i));
        }
    }
    dp[n][m][k] = aux;
    return aux;
}

int main(void) {
    int t;
    int n, m, k;

    memset(dp, -1, sizeof(dp));

    scanf(" %d", &t);
    while(t--) {
        scanf(" %d %d %d", &n, &m, &k);
        int r = solve(n, m, k);
        printf("%d\n", r);
    }
    return 0;
}
