/*
digu_J - Digvijay Janartha
NIT Hamirpur - INDIA
*/

#include <bits/stdc++.h>
using namespace std;

typedef double db;
typedef long long ll;
typedef pair < ll, ll > pll;
typedef vector < ll > vll;
typedef map < ll, ll > mll;
typedef set < ll > sll;
typedef vll lnum;

#define pb push_back
#define F first
#define S second
#define debug(x) cout << (#x) << " is " << (x) << endl
#define fast_io() ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)

const ll INF = LLONG_MAX;
const ll base = 1e9;
const db PI = acos(-1);
const ll MOD = 1e9 + 7;
const ll N = 1e5 + 10;

void solve();
ll check(string a, string b);

int main() {
    fast_io();
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    solve();
    #ifndef ONLINE_JUDGE
            cout << "Time: " << (int)(clock() * 1000. / CLOCKS_PER_SEC) << "ms";
    #endif
    return 0;
}

void solve() {
    ll n;
    cin >> n;
    ll k = 2 * n - 2;
    string s[k], s1, s2;
    bool flag = false;
    for (ll i = 0; i < k; ++i) {
        cin >> s[i];
        if (flag and s[i].size() == n - 1) {
            s2 = s[i];
        } else if (s[i].size() == n - 1) {
            s1 = s[i];
            flag = true;
        }
    }
    string k1, k2;
    bool f1 = true;
    for (ll i = 1; i < n - 1; ++i) {
        if (s1[i] != s2[i - 1]) {
            f1 = false;
            break;
        }
    }
    if (f1) {
        for (ll i = 0; i < n; ++i) {
            if (i < n - 1) {
                k1 += s1[i];
            } else {
                k1 += s2[n - 2];
            }
        }
    }
    bool f2 = true;
    for (ll i = 1; i < n - 1; ++i) {
        if (s2[i] != s1[i - 1]) {
            f2 = false;
            break;
        }
    }
    if (f2) {
        for (ll i = 0; i < n; ++i) {
            if (i < n - 1) {
                k2 += s2[i];
            } else {
                k2 += s1[n - 2];
            }
        }
    }
    // debug(k1);
    // debug(k2);
    string ans;
    if (f1 and f2) {
        bool f3 = true;
        for (ll i = 0; i < k; ++i) {
            if (!check(s[i], k1)) {
                f3 = false;
                break;
            }
        }
        if (f3) {
            bool ab[n];
            fill(ab, ab + n, false);
            for (ll i = 0; i < k; ++i) {
                if (check(s[i], k1) == 1) {
                    ans += 'P';
                } else if (check(s[i], k1) == 2) {
                    ans += 'S';
                } else {
                    if (ab[s[i].size()]) {
                        ans += 'S';
                    } else {
                        ans += 'P';
                        ab[s[i].size()] = true;
                    }
                }
            }
        } else {
            bool ab[n];
            fill(ab, ab + n, false);
            for (ll i = 0; i < k; ++i) {
                if (check(s[i], k2) == 1) {
                    ans += 'P';
                } else if (check(s[i], k2) == 2) {
                    ans += 'S';
                } else {
                    if (ab[s[i].size()]) {
                        ans += 'S';
                    } else {
                        ans += 'P';
                        ab[s[i].size()] = true;
                    }
                }
            }
        }
    } else if (f1) {
        bool ab[n];
        fill(ab, ab + n, false);
        for (ll i = 0; i < k; ++i) {
            if (check(s[i], k1) == 1) {
                ans += 'P';
            } else if (check(s[i], k1) == 2) {
                ans += 'S';
            } else {
                if (ab[s[i].size()]) {
                    ans += 'S';
                } else {
                    ans += 'P';
                    ab[s[i].size()] = true;
                }
            }
        }
    } else {
        bool ab[n];
        fill(ab, ab + n, false);
        for (ll i = 0; i < k; ++i) {
            if (check(s[i], k2) == 1) {
                ans += 'P';
            } else if (check(s[i], k2) == 2) {
                ans += 'S';
            } else {
                if (ab[s[i].size()]) {
                    ans += 'S';
                } else {
                    ans += 'P';
                    ab[s[i].size()] = true;
                }
            }
        }
    }
    cout << ans << "\n";
    return;
}

ll check(string a, string b) {
    bool f1 = true, f2 = true;
    for (ll i = 0; i < b.size() - 1 and i < a.size(); ++i) {
        if (a[i] != b[i]) {
            f1 = false;
            break;
        }
    }
    ll d = b.size() - a.size();
    for (ll i = b.size() - 1; i > 0 and i >= d; --i) {
        if (b[i] != a[i - d]) {
            f2 = false;
            break;
        }
    }
    if (f1 and f2) {
        return 1729;
    } else if (f1) {
        return 1;
    } else if (f2) {
        return 2;
    } else {
        return 0;
    }
}
