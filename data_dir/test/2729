#include <iostream>
#include <vector>
using namespace std;

const int MX = 64;
const int mod = 1000000007;
long long pot[MX];

long long get_sum(long long x) {
  long long answer = 0;
  long long odd = 0;
  long long acc = 0;
  for ( int i = 0; i < MX && acc < x; ++i ) {
    if ( acc + pot[i] <= x ) {
      acc += pot[i];
      if ( !(i & 1) ) odd += pot[i];
    } else {
      if ( !(i & 1) ) odd += x - acc;
      acc += pot[i];
    }
  }
  odd %= mod;
  answer = (odd * odd) % mod;

  long long even = 0;
  acc = 0;
  for ( int i = 0; i < MX && acc < x; ++i ) {
    if ( acc + pot[i] <= x ) {
      acc += pot[i];
      if ( (i & 1) ) even += pot[i];
    } else {
      if ( (i & 1) ) even += x - acc;
      acc += pot[i];
    }
  }

  even %= mod;
  answer = (answer + (even * (even + 1)) % mod) % mod;
  return answer;

}

int main() {
  for ( int i = 0; i < MX; ++i ) {
    pot[i] = 1LL << i;
  }

  long long l, r;
  while ( cin >> l >> r ) {
    cout << (get_sum(r) - get_sum(l - 1) + mod) % mod << endl;
  }

  return 0;
}