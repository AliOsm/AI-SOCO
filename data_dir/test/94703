#include <bits/stdc++.h>
//AC
using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define form(i,a,n) for (int i=(a);i<(n);i++)
#define forn(i,a,n) for (int i=(a);i<(n);i++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const double eps = 1e-6;
const int maxn = 2e5 + 7777;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const int mod = 1e9 + 7;

ll mc[maxn];
ll lc[maxn];
ll sum[maxn];

int main() {
    srand(228228);
    fast_io;
//    input;
    int a, b, t, k;
    cin >> a >> b >> k >> t;
    a += (1e5 + 1000);
    b += (1e5 + 1000);
    int N = 2e5 + 2001;
    mc[a] = 1;
    form(i, 0, t){
        sum[0] = mc[0];
        form(j, 1, N + k + 1){
            sum[j] = sum[j - 1] + mc[j];
            sum[j] %= mod;
        }
        form(j, 0, k + 1)
            mc[j] = sum[j];
        form(j, k + 1, N){
            mc[j] = sum[j + k] - sum[j - k - 1];
            if(mc[j] < 0)
                mc[j] += mod;
            mc[j] %= mod;
        }
    }
//    cout << 1.0*clock()/CLOCKS_PER_SEC << "\n";
    form(i, max(0, -(a - b)), N)
        lc[i] = mc[i + (a - b)];
    ll ans = mc[1]*lc[0] % mod;
    sum[0] = lc[0];
    form(i, 2, N){
        sum[i - 1] = sum[i - 2] + lc[i - 1];
        sum[i - 1] %= mod;
        ans += (1ll*mc[i]*sum[i - 1]) % mod;
        ans %= mod;
    }
    cout << ans;
    return 0;
}
