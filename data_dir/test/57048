//http://codeforces.com/blog/entry/5648
#include<queue>
#include<map>
#include <string>
#include<bits/stdc++.h>
#define pi 3.141592654
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);
//#define x real()
//#define y imag()
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef complex<double> point;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<30> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//#define var(x) ((x)<<1)
//#define nvar(x) ((x)^1)
const int N=210,M=20500;

int n,m,dis[200000],vis[200000],a[200020],ck[200020];
vector<int>adj[200000];
queue<int>q;
void dfs(int u,int p)
{
    for(auto v:adj[u])
    {
        if(v==p)continue;
        dis[v]=dis[u]+1;
        dfs(v,u);
    }
}

int get(int u,int p,int e)
{
    if(u==e)
    {
        q.push(u);
        dis[u]=0;
        return 1;
    }
    for(auto v:adj[u])
    {
        if(v==p)continue;
        int f=get(v,u,e);
        if(f)
        {
            dis[u]=0;
            q.push(u);
            return f+1;
        }
    }
    return 0;
}


ll go(int u)
{
    ll sum=0;
    for(auto v:adj[u])
    {
        if(dis[v]>dis[u]+1)
        {
            dis[v]=dis[u]+1;
            ll f=go(v);
            if(f)sum+=f-dis[u];
        }
    }
    if(sum)return sum+dis[u];
    else
    {
        if(ck[u])return dis[u];
        else return 0;
    }
}
 main()
{

//cout<<Pow((ll)1000000,(ll)110);
//freopen("input.txt","r",stdin);
//freopen("output.txt","w",stdout);
//    char input[15];
//    scanf("%s", &input);  array of char
//  gets(c+1);  array of char
//printf("%s, ",name[k[i]].c_str());  printf of string
input;

cin>>n>>m;
int u,v;
forr(i,1,n-1)
{
    cin>>u>>v;
    adj[u].push_back(v);
    adj[v].push_back(u);
}
forr(i,1,m) cin>>a[i],ck[a[i]]=1;
sort(a+1,a+1+m);
dfs(a[1],-1);

int x=-1,y;
forr(i,1,m)
{
    if(dis[a[i]]>x)
    {
        y=a[i];
        x=dis[a[i]];
    }
}

memset(dis,0,sizeof dis);
dfs(y,-1);

int x2=-1,y2;
forr(i,1,m)
{
    if(dis[a[i]]>x2)
    {
        y2=a[i];
        x2=dis[a[i]];
    }
}
memset(dis,'?',sizeof dis);
int g=get(y2,-1,y);
ll ans=g-1;
while(q.size())
{
    ans+=2*go(q.front());
    q.pop();
}

cout<<min(y,y2)<<endl;
cout<<ans<<endl;
return 0;
}
