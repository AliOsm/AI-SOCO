#include<bits/stdc++.h>
using namespace std;
int n,lg2[300010],a[300010];
class ST
{
	public:
		int st[300010][19],val[300010];
		inline int cmp(int x,int y)
		{
			return (val[x]<val[y])?y:x;
		}
		void build(int* x,int len,int typ)
		{
			for(int i=1;i<=len;i++)st[i][0]=i,val[i]=typ*x[i];
			for(int j=1;j<=lg2[len];j++)
			{
				for(int i=1;i+(1<<j)-1<=len;i++)
				{
					st[i][j]=cmp(st[i][j-1],st[i+(1<<(j-1))][j-1]);
				}
			}
		}
		inline int query(int l,int r)
		{
			int p=lg2[r-l+1];
			return cmp(st[l][p],st[r-(1<<p)+1][p]);
		}
}L,R;
int l[19][300010],r[19][300010];
int main()
{
	scanf("%d",&n);
	for(int i=2;i<=3*n;i++)lg2[i]=lg2[i>>1]+1;
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		a[i+n]=a[i+2*n]=a[i];
	}
	if(n==1)
	{
		puts("0");
		return 0;
	}
	for(int i=1;i<=3*n;i++)
	{
		l[0][i]=max(1,i-a[i]);
		r[0][i]=min(3*n,i+a[i]);
	}
	L.build(l[0],3*n,-1);
	R.build(r[0],3*n,1);
	for(int i=1;i<=lg2[3*n];i++)
	{
		for(int j=1;j<=3*n;j++)
		{
			int pl=L.query(l[i-1][j],r[i-1][j]),pr=R.query(l[i-1][j],r[i-1][j]);
			l[i][j]=min(l[i-1][pl],l[i-1][pr]);
			r[i][j]=max(r[i-1][pl],r[i-1][pr]);
		}
	}
	for(int j=n+1;j<=n*2;j++)
	{
		int ans=0,tl=j,tr=j;
		for(int i=lg2[3*n];i>=0;i--)
		{
			if(max(r[i][tl],r[i][tr])-min(l[i][tl],l[i][tr])+1>=n)continue;
			int nl=L.query(l[i][tl],r[i][tr]),nr=R.query(l[i][tl],r[i][tr]);
			tl=nl,tr=nr;
			ans+=(1<<i);
		}
		printf("%d ",ans+1);
	}
	return 0;
}