#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef pair<double, double> pdd;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
int ctz(uint x) {return __builtin_ctz(x);}
int ctzll(ull x) {return __builtin_ctzll(x);}
int clz(uint x) {return __builtin_clz(x);}
int clzll(ull x) {return __builtin_clzll(x);}
int popcnt(uint x) {return __builtin_popcount(x);}
int popcntll(ull x) {return __builtin_popcountll(x);}
int bsr(uint x) {return 31^clz(x);}
int bsrll(ull x) {return 63^clzll(x);}

#define MX 1000016

bool vis[MX];
int rmx[MX];
multiset<int> v[MX];
vpii add[MX], del[MX];
//vi a[MX];

int main()
{
    canhazfast();

    int n, w;
    ll sum = 0;
    vi lst;

    cin >> n >> w;
    for (int i = 0; i < n; ++i) {
        int len;
        cin >> len;
        //a[i].resize(len);
        for (int j = 0; j < len; ++j) {
            int a;
            cin >> a;
            int jb = j, je = j+w-len+1;
            /*assert(0 <= jb);
            assert(jb < je);
            assert(je <= w);*/
            add[jb].empb(a, i);
            del[je].empb(a, i);
        }
        if (len < w) {
            /// pref 0
            add[0].empb(0, i);
            del[w-len].empb(0, i);
            /// suf 0
            add[len].empb(0, i);
            del[w].empb(0, i);
        }
    }
    for (int j = 0; j < w; ++j) {
        lst.clear();
        for (const pii &p : del[j]) {
            int x = p.fir, i = p.sec;
            v[i].erase(v[i].find(x));
            if (!vis[i]) {
                vis[i] = true;
                lst.pb(i);
            }
        }
        for (const pii &p : add[j]) {
            int x = p.fir, i = p.sec;
            v[i].insert(x);
            if (!vis[i]) {
                vis[i] = true;
                lst.pb(i);
            }
        }
        for (int i : lst) {
            sum -= rmx[i];
            rmx[i] = *v[i].rbe();
            sum += rmx[i];
            vis[i] = false;
        }
        cout << sum << ' ';
    }
    cout << '\n';

    return 0;
}
