#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(4)
#include<bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define pdd pair<long double, long double>
#define mem(a, b) memset(a, b, sizeof(a))
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define fopen freopen("in.txt", "r", stdin);freopen("out.txt", "w", stout);
//head

const int N = 1e5 + 5;
struct edge {
    int u, v, w;
}e[N];
vector<int> g[N], ans;
int in[N], topo[N], vis[N], n, m;
queue<int> q;
bool check(int x) {
    for (int i = 1; i <= n; i++) in[i] = 0, g[i].clear();
    for (int i = 1; i <= m; i++) {
        if(e[i].w > x) {
            g[e[i].u].pb(e[i].v);
            in[e[i].v]++;
        }
    }
    int cnt = 0;
    for (int i = 1; i <= n; i++) {
        if(in[i] == 0) q.push(i);
    }
    while(!q.empty()) {
        int u = q.front();
        q.pop();
        cnt++;
        for (int v : g[u]) {
            in[v]--;
            if(in[v] == 0) q.push(v);
        }
    }
    return cnt == n;
}
void solve(int x) {
    for (int i = 1; i <= n; i++) in[i] = 0, g[i].clear();
    for (int i = 1; i <= m; i++) {
        if(e[i].w > x) {
            g[e[i].u].pb(e[i].v);
            in[e[i].v]++;
        }
    }
    int cnt = 0;
    for (int i = 1; i <= n; i++) {
        if(in[i] == 0) q.push(i);
    }
    while(!q.empty()) {
        int u = q.front();
        q.pop();
        topo[u] = ++cnt;
        for (int v : g[u]) {
            in[v]--;
            if(in[v] == 0) q.push(v);
        }
    }
    for (int i = 1; i <= m; i++) {
        if(e[i].w <= x) {
            if(topo[e[i].u] > topo[e[i].v]) ans.pb(i);
        }
    }
    printf("%d\n", (int)ans.size());
    for (int t: ans) printf("%d ", t);
}
int main() {
    scanf("%d %d", &n, &m);
    for (int i = 1; i <= m; i++) scanf("%d %d %d", &e[i].u, &e[i].v, &e[i].w);
    int l = 0, r = 1e9, mid = l+r >> 1;
    while(l < r) {
        if(check(mid)) r = mid;
        else l = mid+1;
        mid = l+r >> 1;
    }
    printf("%d ", mid);
    solve(mid);
    return 0;
}
