///                                                     ببِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم
#include <bits/stdc++.h>
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define sc   scanf
#define pr   printf
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define siz  strlen
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    200256
#define M    1000000007
#define I    1000000000000000000
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define rep( a, b, c, d )  for( int a = b; a <= c; a += d )
#define rvv( a, b, c, d )  for( int a = b; a >= c; a -= d )
#define en                 printf( "\n" )
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define srtr( c )          sort( c.rbegin(), c.rend() )
#define numcounts          __builtin_popcount
#define mxx( x, y, z )     max( x, max( y, z ) )
#define mnn( x, y, z )     min( x, min( y, z ) )
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
const int dx[ ] = { 1, -1, 0, 0 };
const int dy[ ] = { 0, 0, -1, 1 };
using namespace std;
ll tests;
ll n, pos = -1, cnt, q, w;
ll t[500100];
bool ok;
void calc(string s)
{
	long long l=0,r=0;
	for(int i=1;i<s.size();i++){
		if(i<=r)t[i]=min(r-i+1,t[i-l]);
		while(i+t[i]<s.size()&&s[t[i]]==s[i+t[i]])t[i]++;
		if(i+t[i]-1>r)l=i,r=i+t[i]-1;
	}
	for(int i=0;i<s.size();i++){
        if( pos == -1 && t[ i ] == s.size() - i )pos = i;
	}
}
string asd, zxc;
void solve()
{
    cin >> asd >> zxc;
    for( char c: asd )
    {
        if( c == '1' )q ++;
        else w ++;
    }
    if( asd.size() < zxc.size() )
    {
        cout << asd;
        rt;
    }

    calc( zxc );
    if( pos == -1 )pos = zxc.size();
    for( ; cnt < asd.size(); )
    {
        for( int i = 0; i < pos && cnt < asd.size(); i ++ )
        {
            if( zxc[ i ] == '1' )q --;
            else w --;
            if( w < 0 || q < 0 )
            {
                ok = 1;
                break;
            }
            cout << zxc[ i ];
            cnt ++;
        }
        if( ok == 1 )break;
    }
    rep( i, 1, q ,1 )cout << '1';
    rep( i, 1, w, 1 )cout << '0';
}
int main()
{
    ios_base :: sync_with_stdio( 0 );
    cin.tie( 0 );
    cout.tie( 0 );
    //sc( "%I64d", &tests );
    /*cin >> tests;
    while( tests -- )*/
        solve();
}




































































