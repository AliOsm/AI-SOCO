#include<bits/stdc++.h> 
#include <bitset>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <chrono>
#include <random>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define MOD2 1000000009
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1)
#define E 998244853
#define pb push_back
#define mp make_pair
#define double long double
#define pdd pair<double,double>
#define ll long long
 
using namespace std;
//using namespace __gnu_pbds;
 
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

int arr[1001][1001];
int temp[1001][1001];
bitset<1024>selected[1000];
set<int>nos;
int label[1000001];
vector<int>pos;
int n,m;

bool check(int val)
{
	pos.clear();
	REP(i,0,n-1)
	{
		REP(j,0,m-1)
		{
			if(arr[i][j]>=val)
				temp[i][j]=1;
			else
				temp[i][j]=0;
		}
	}
	REP(i,0,n-1)
	{
		REP(j,0,n-1)
			selected[i][j]=0;
	}
	REP(j,0,m-1)
	{
		REP(i,0,n-1)
		{
			if(temp[i][j])
				pos.pb(i);
		}
		REP(i,0,pos.size()-1)
		{
			REP(k,i+1,pos.size()-1)
			{
				if(selected[pos[i]][pos[k]]==1)
					return true;
				selected[pos[i]][pos[k]]=1;
				selected[pos[k]][pos[i]]=1;
			}
		}
		pos.clear();
	}
	return false;
}



int main()
{
	IOS;
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	cin >> n >> m;
	REP(i,0,n-1)
	{
		REP(j,0,m-1)
		{
			cin >> arr[i][j];
			nos.insert(arr[i][j]);
		}
	}
	int ps=0;
	for(auto it:nos)
	{
		ps++;
		label[ps]=it;
	}
	int l=1,r=ps;
	while(l<=r)
	{
		int mid=(l+r)/2;
		if(check(label[mid]) && (mid==ps || (!check(label[mid]+1))))
		{
			cout << label[mid];
			return 0;
		}
		else if(!check(label[mid]))
			r=mid-1;
		else
			l=mid+1;
	}
}	