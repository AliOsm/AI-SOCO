#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define for1(i,n) for(int i=1;i<=(int)(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N=1e6+2;
vector<int> a[N];
int ans[N];
void dfs(int u,int p,int val)
{
      ans[u]=val;
      for(auto x:a[u])
      {
            if(x!=p)
            {
                  dfs(x,u,min(val,x));
            }
      }
}
int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      int n,q;
      cin>>n>>q;
      for(int i=0;i<n-1;i++) {
            int x,y;
            cin>>x>>y;
            a[x].pb(y);
            a[y].pb(x);
      }
      int temp,root;
      cin>>temp>>root;
      root%=n;
      root++;
      dfs(root,0,root);
      int gmin=root;
      int last=0;
      q--;
      while(q--)
      {
            int ind,x;
            cin>>ind>>x;
            x=(x+last)%n+1;
            if(ind==1)
            {
                  gmin=min(gmin,ans[x]);
            }
            else{
                  last=min(gmin,ans[x]);
                  cout<<last<<"\n";
            }
      }
}     
// I never lose. I either win or I learn