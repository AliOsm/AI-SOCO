#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define nl cout<<endl

#define pii pair<ll,ll>
#define vi  vector<ll>
#define vii vector<pii>
#define mi  map<ll,ll>
#define all(a)  (a).begin(),(a).end()

#define pb push_back
#define make make_pair
#define ff first
#define ss second
#define hell 1000000007

#define test4(x,y,z,a) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<"		a is "<<a<<endl;
#define test3(x,y,z) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<endl;
#define test2(x,y) cout<<"x is "<<x<<"		y is "<<y<<endl;
#define test1(x) cout<<"x is "<<x<<endl;
#define N 300009
ll n,m,a[N],b[N];
ll power(ll a,ll b,ll m)
{
	ll ans=1;
	while(b)
	{
		if(b&1)
			ans=(ans*a)%m;
		b/=2;
		a=(a*a)%m;
	}
	return ans;
}
bool check(ld amt)
{
	ld num=amt;
	//amt+=(ld)m;
	ld u=amt+(ld)m;ll j=0;
	rep(i,0,(2*n))
	{
		if(!(i%2))
		{
			amt-=u/a[j];
			if(amt<0)
			return false;
		}
		else
		{
			j++;
			if(j<n)
			{
				amt-=u/b[j];
				if(amt<0)
				return false;
			}
			else
			{
				j=0;
				amt-=u/b[0];
				if(amt<0)
				return false;
			}
		}
		u=m+amt;
	}
	/*rep(i,1,n+1)
	{
		if(i==1)
		{
			//test3("before takeoff ",i,amt);
			ld u=amt/(ld)a[i];
			amt-=u;
			//test3("after takeoff ",i,amt);

			if(u<0)
			return false;
		}
		else
		{
			ld u=amt/(ld)b[i];
			amt-=u;

			if(u<0)
			return false;

			u=amt/(ld)a[i];
			amt-=u;

			if(u<0)
			return false;							
		}
	}*/
	return true;
}
void solve(ld low, ld high)
{
	ld ans=-1;
	while(low<=high)
	{
		ld mid=(low+high)/(ld)2;
		//test1(mid);
		if(check(mid))
		{
			ans=mid;
			high=mid-0.000001;
		}
		else
		low=mid+0.000001;
	}
	double u=(double)(ans);
	printf("%.7f\n",u);
}
int main()
{	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
        cin>>n>>m;
	rep(i,0,n)
	cin>>a[i];
	rep(i,0,n)
	cin>>b[i];

	/*check((ld)10);	
	check((ld)9);
	check((ld)11);*/
	solve((ld)0,(ld)(hell));
}