#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;

const int MAX = 2e5 + 5;
int n;
vector<int> pos[MAX];
ii bids[MAX];

inline int total(const vector<int> &v, int p) {
	int t = 0;
	for(auto &each : v) {
		int pp = lower_bound(pos[each].begin(), pos[each].end(), p) - pos[each].begin();
		t += (int) pos[each].size() - pp;
	}
	return t;
}

inline int get(const vector<int> &v) {
	int left = 1, right = n;
	int ans = 0;
	while(left <= right) {
		int mid = (left + right) / 2;
		int val = n - mid + 1;
		if(total(v, mid) < val) {
			ans = mid;
			left = mid + 1;
		}
		else {
			right = mid - 1;
		}
	}
	return ans;
}

int main() {
	scanf("%d", &n);
	fori(i, 1, n + 1) {
		scanf("%d %d", &bids[i].first, &bids[i].second);
		pos[bids[i].first].push_back(i);
	}
	int q;
	scanf("%d", &q);
	fori(t, 1, q + 1) {
		int k;
		scanf("%d", &k);
		vector<int> guys;
		fori(i, 0, k) {
			int cur;
			scanf("%d", &cur);
			guys.push_back(cur);
		}
		int idx1 = get(guys);
		if(idx1 == 0) {
			puts("0 0");
		}
		else {
			int guy = bids[idx1].first;
			guys.push_back(guy);
			int idx2 = get(guys);
			auto it = lower_bound(pos[guy].begin(), pos[guy].end(), idx2);
			printf("%d %d\n", guy, bids[*it].second);
		}
	}

	return 0;
}

