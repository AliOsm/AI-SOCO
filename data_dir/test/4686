#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
template <typename T> inline T sqr(T t) {return t*t;}
#define pb push_back
#define mp make_pair
#define endl "\n"

inline void files(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    #ifdef _WIN32
        return;
    #endif // _WIN32
    //freopen("lca.in", "r", stdin);//freopen("output.out", "w", stdout);
}

int n, m, dp1[510][510], dp2[510][510];

char a[510][510];

int main(){
    files();
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
            cin >> a[i][j];
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++){
            dp1[i][j] += dp1[i-1][j];
            dp1[i][j] += dp1[i][j-1];
            dp1[i][j] -= dp1[i-1][j-1];
            dp2[i][j] += dp2[i-1][j];
            dp2[i][j] += dp2[i][j-1];
            dp2[i][j] -= dp2[i-1][j-1];
            if (a[i][j]=='.'&&a[i][j-1]=='.')
                dp1[i][j]++;
            if (a[i][j]=='.'&&a[i-1][j]=='.')
                dp2[i][j]++;

        }
    int q;
    cin >> q;
    while(q--){
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        cout << (dp1[c][d] + dp1[a-1][b] - dp1[c][b] - dp1[a-1][d])+(dp2[c][d] + dp2[a][b-1] - dp2[c][b-1] - dp2[a][d]) << endl;
    }
}
