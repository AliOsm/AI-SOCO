#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ull unsigned long long
#define int long long
#define iter set<int>::iterator
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=2e5+7;
const int inf=1e18+5;
const int mod=1e9+7;

int a[N];
int pref[N];
int basis[30];
int st[N];

void add_new(int x)
{
    for (int i=0;i<30;++i){
        if ((x&(1LL<<i))==0)continue;
        if (!basis[i]){
            basis[i]=x;
            break;
        }
        else {
            x^=basis[i];
        }
    }
}

main ()
{
    ios;
    st[0]=1;
    for (int i=1;i<=2e5;++i){
        st[i]=(st[i-1]*2)%mod;
    }
    int n;
    cin>>n;
    for (int i=1;i<=n;++i){
        cin>>a[i];
        pref[i]=(pref[i-1]^a[i]);
    }
    if (pref[n]==0){
        cout<<-1<<endl;
        exit(0);
    }
    for (int i=1;i<=n;++i){
        add_new(pref[i]);
    }
    int ans=0;
    for (int i=0;i<30;++i){
        if (basis[i])++ans;
    }
    cout<<ans<<endl;
}
