#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main() {
	int n;
	scanf("%d",&n);
	vector<int> v(n);
	for(int i=0;i<n;++i)
		scanf("%d",&v[i]);
	vector<int> nl(n,-1),nr(n,n);
	stack<int> s;
	for(int i=0;i<n;++i){
		while(!s.empty() && v[s.top()]>=v[i])
			s.pop();
		if(!s.empty())
			nl[i]=s.top();
		s.push(i);
	}
	while(!s.empty())
		s.pop();
	for(int i=n-1;i>=0;--i){
		while(!s.empty() && v[s.top()]>=v[i])
			s.pop();
		if(!s.empty())
			nr[i]=s.top();
		s.push(i);
	}
	vector<vector<ll> > dp(2,vector<ll>(n));
	for(int i=0;i<n;++i){
		auto &ret=dp[0];
		int prev=nl[i];
		ret[i] = (i-prev)*(ll)v[i];
		if(prev!=-1)
			ret[i]+=ret[prev];
	}
	ll res=0;
	int at;
	for(int i=n-1;i>=0;--i){
		auto &ret=dp[1];
		int next=nr[i];
		ret[i] = (next-i)*(ll)v[i];
		if(next!=n)
			ret[i]+=ret[next];
		ll cur=dp[0][i]+dp[1][i]-v[i];
		if(res<cur){
			res=cur;
			at=i;
		}
	}
	vector<int> sol(n);
	int me=v[at];
	for(int i=at;i>=0;--i){
		me=min(me,v[i]);
		sol[i]=me;
	}
	me=v[at];
	for(int i=at;i<n;++i){
		me=min(me,v[i]);
		sol[i]=me;
	}
	for(auto x:sol)
		printf("%d ",x);
	return 0;
}