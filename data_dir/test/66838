#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
using namespace std;
ll dp[500010][2], n, k, visited[500010], par[500010];
vector<pair<int, int> > graph[500010];
void getpar(int s){
	visited[s] = 1;
	for(int i = 0; i < graph[s].size(); i++){
		if(!visited[graph[s][i].first]){
			par[graph[s][i].first] = s;
			getpar(graph[s][i].first);
		}
	}
}
ll dfs(int s, int t){
	if(dp[s][t] != -1)
		return dp[s][t];
	vector<pair<ll, pair<ll, ll> > > df;
	for(int i = 0; i < graph[s].size(); i++){
		if(graph[s][i].first != par[s]){
			df.pb(mp(graph[s][i].second + dfs(graph[s][i].first, 1) - dfs(graph[s][i].first, 0), graph[s][i]));
		}	
	}
	sort(df.begin(), df.end());
	reverse(df.begin(), df.end());
	ll sumi = 0, ct = ((t == 0) ? k : k - 1), ptr = 0;

	for(ptr; ptr < min((int)df.size(), (int)ct) && df[ptr].first > 0; ptr++)
		sumi += df[ptr].second.second + dfs(df[ptr].second.first, 1);
	
	for(ptr; ptr < df.size(); ptr++)
		sumi += dfs(df[ptr].second.first, 0);
	//cerr << s << " " << t << " " << sumi << '\n';
	return dp[s][t] = sumi;
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int q;
	cin >> q;
	while(q--){
		cin >> n >> k;
		for(int i = 0; i < n; i++){
			visited[i] = 0;
			dp[i][0] = -1;
			dp[i][1] = -1;
			graph[i].clear();
			par[i] = -1;
		}
		for(int i = 0; i < n - 1; i++){
			int a, b, c;
			cin >> a >> b >> c;
			graph[a - 1].pb(mp(b - 1, c));
			graph[b - 1].pb(mp(a - 1, c));
		}
		getpar(0);
		cout << dfs(0, 0) << '\n';
	}

}