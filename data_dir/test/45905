#include <bits/stdc++.h>
using namespace std;
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)
#define ll long long

int const N = 1000;
int v[N][N], h[N][N], frv[N + 1][N + 1], frh[N + 1][N + 1];
char x[N][N + 1];
vector<pair<pair<int, int>, int> > an;

int main(){
	int n, m;
	scanf("%d%d", &n, &m);
	f(i, 0, n)scanf("%s", x[i]);
	f(i, 0, n){
		h[i][0] = 0;
		f(j, 1, m)if (x[i][j] == '*'){
			h[i][j] = max(0, h[i][j - 1] - 1);
			int l = j - h[i][j], r = j + h[i][j];
			while (l > 0 && r < m - 1 && x[i][l - 1] == '*' && x[i][r + 1] == '*')--l, ++r, ++h[i][j];
		}
	}
	f(j, 0, m){
		v[0][j] = 0;
		f(i, 1, n)if (x[i][j] == '*'){
			v[i][j] = max(0, v[i - 1][j] - 1);
			int l = i - v[i][j], r = i + v[i][j];
			while (l > 0 && r < n - 1 && x[l - 1][j] == '*' && x[r + 1][j] == '*')--l, ++r, ++v[i][j];
		}
	}
	f(i, 0, n)f(j, 0, m){
		int z = min(h[i][j], v[i][j]);
		if (z == 0)continue;
		++frh[i][j - z];
		--frh[i][j + z + 1];
		++frv[i - z][j];
		--frv[i + z + 1][j];
		an.push_back(make_pair(make_pair(i + 1, j + 1), z));
	}
	f(i, 0, n)f(j, 1, m)frh[i][j] += frh[i][j - 1];
	f(j, 0, m)f(i, 1, n)frv[i][j] += frv[i - 1][j];
	f(i, 0, n)f(j, 0, m){
		int a = x[i][j] == '*', b = frv[i][j] || frh[i][j];
		if (a ^ b) { printf("-1\n"); return 0; }
	}
	printf("%d\n", (int)an.size());
	f(i, 0, an.size())printf("%d %d %d\n", an[i].first.first, an[i].first.second, an[i].second);
}