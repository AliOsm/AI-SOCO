#include <bits/stdc++.h>
using namespace std;

//.define
//#define FILE_IN_OUT
#define RET(_x)                       return std::cout << (_x) << '\n', 0;
#define all(_obj)                     std::begin(_obj), std::end(_obj)
#define loop(_n)                      for (int i = 0; i < (_n); ++i)
#define ceilDiv(_dividend, _divider)  (((_dividend) - 1LL + (_divider)) / (_divider))
#define sz(_obj)                      static_cast<int>(std::size(_obj))
#define endl                          "\n"
template<typename Tp>
inline void outarr(Tp _array, const std::size_t _N, const char* _delim = " ") {
    Tp end = _array + _N;
    for (Tp current = _array; current != end; ++current) {
        std::cout << *current << _delim;
    }
    std::cout << '\n';
}

//.constant
using ll  = int64_t;
using pii = std::pair<int, int>;
constexpr int INF = INT_MAX;
constexpr int MOD = static_cast<const int>(1e9 + 7);

//.data
char gr[100][100];
int di[8] = {0, 1, 1,  1,  0, -1, -1, -1};
int dj[8] = {1, 1, 0, -1, -1, -1,  0,  1};

inline bool bw(int x, int r) {
    return clamp(x, 0, r - 1) == x;
}

//.code
int main() {
#ifdef FILE_IN_OUT
    std::ifstream cin ("input.txt",  std::ios::in);
    std::ofstream cout("output.txt", std::ios::out);
#else
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif

    int n, m;
    cin >> n >> m;
    loop(n) {
        for (int j = 0; j < m; ++j) {
            cin >> gr[i][j];
        }
    }
    loop(n) {
        for (int j = 0; j < m; ++j) {
            if (gr[i][j] == '.') {
                for (int u = 0; u < 8; ++u) {
                    int ni = i + di[u];
                    int nj = j + dj[u];
                    if (bw(ni, n) && bw(nj, m) && gr[ni][nj] == '*') {
                        RET("NO");
                    }
                }
            } else if (gr[i][j] != '*') {
                int k = gr[i][j] - '0';
                for (int u = 0; u < 8; ++u) {
                    int ni = i + di[u];
                    int nj = j + dj[u];
                    if (bw(ni, n) && bw(nj, m) && gr[ni][nj] == '*') {
                        --k;
                    }
                }
                if (k) {
                    RET("NO");
                }
            }
        }
    }
    cout << "YES" endl;
    
#ifdef FILE_IN_OUT
    cin.close();
    cout.close();
#endif
    return 0;
}