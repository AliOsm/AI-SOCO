#include <bits/stdc++.h>
using namespace std;

const int N = 150000 + 100;
const int M = 300 + 10;

int a[M], b[M], t[M];
int dp[M][N];

struct minq {
    deque<pair<int, int>> q;

    void add (int i, int x) {
        while (not q.empty() and x <= q.back().second) q.pop_back();
        q.emplace_back(i,x);
    }

    void rem (int k) {
        while (not q.empty() and q.front().first <= k) q.pop_front();
    }

    int getmn () {
        //always nonempty
        return q.front().second;
    }
};

int main() {
    std::ios::sync_with_stdio(false);
    
    int n,m,d;
    cin >> n >> m >> d;
    for (int i = 1; i <= m; ++i) cin >> a[i] >> b[i] >> t[i];
    
    for (int i = 1; i <= m; ++i) {
        for (int j = 1; j <= n; ++j) dp[i][j] = abs(a[i] - j);

        long long mv = (long long)d * (t[i] - t[i-1]);
        if (mv > n) mv = n;

        minq mq;
        for (int j = 1; j <= mv; ++j) mq.add(j, dp[i-1][j]);
        
        for (int j = 1; j <= n; ++j) {
            if (j + mv <= n) mq.add(j+mv, dp[i-1][j+mv]);
            dp[i][j] += mq.getmn();
            if (j - mv >= 1) mq.rem(j-mv);
        }
    }

    long long ans = 0;
    for (int i = 1; i <= m; ++i) ans += b[i];
    int mn = 1e9;
    for (int j = 1; j <= n; ++j) mn = min(mn, dp[m][j]);
    ans -= mn;

    cout << ans << '\n';

    return 0;
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp

