#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
#define S second
#define F first
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
//int GCD(ll num,ll ones) { return !ones ? num : GCD(ones,num%ones); }
//ll lcm(ll a, ll b) { return (a / GCD(a, b)) * b; }
//double Len(ll x,ll y,ll X,ll Y) { return sqrt((X-x)*(X-x)+(Y-y)*(Y-y)); }
/*ll fastP(ll b,ll p)
{
    if(p==0) return 1;
    else if(p==1) return b;
    ll a = fastP(b,p/2)%MOD;
    if(p%2) return (((a*a)%MOD)*b)%MOD;
    else return (a*a)%MOD;
}*/
//-----------------------------------
int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};
const int N = 200100;
const ll MOD = 998244353;
const double EBS = 1e-7;

string a,b,c;
int A[26],B[26],C[26],tmp[26];

int main()
{
    char s[N];
    scanf("%s",s); a = s;
    scanf("%s",s); b = s;
    scanf("%s",s); c = s;
    for(auto x:a) A[x-'a']++;
    for(auto x:b) B[x-'a']++;
    for(auto x:c) C[x-'a']++;


    int mn = oo;
    for(char x = 0;x<26;++x)
        if(B[x]) mn = min(mn,A[x]/B[x]);
    int k1 = mn,k2 = 0;

    for(int i = 0;i<=mn;++i)
    {
        int mn2 = oo;
        for(char x = 0;x<26;++x)
            if(C[x]) mn2 = min(mn2,(A[x] - i*B[x])/C[x]);
        if(i + mn2 >= k1+k2) k1 = i,k2 = mn2;
    }
    for(int i = 0;i<k1;++i) cout << b;
    for(int i = 0;i<k2;++i) cout << c;

    for(char x = 0;x<26;++x){
        A[x] -= (k1*B[x] + k2*C[x]);
        while(A[x]>0)  cout<<(char)(x+'a'),A[x]--;
    }



    return 0;
}
