#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#pragma comment(linker, "/STACK:400000000")

#define EPS 1e-9
#define INF (MOD*MOD)
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(it=X.begin();it!=X.end();it++)
#define iss istringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sh(i) (1LL<<i)
#define sst stringstream
#define sz size()
#define vi vector<int>
#define vc vector
#define vl vector<ll>
#define vs vector<string>

int n,m;
ll c[1011][1011],csumV[1011],sumV[1011],sumVd1[1011],sumVd2[1011];

#define sq(x) ((x)*(x))

int main(){
	scanf("%d %d",&n,&m);
	rep(i,n)rep(j,m){
		scanf("%d",&c[i][j]);
		csumV[j]+=c[i][j];
		sumV[j]+=c[i][j]*(sq(2+4*i)+sq(2+4*j));
		sumVd1[j]+=c[i][j]*(-32*i);
		sumVd2[j]+=c[i][j]*32;
	}
	//rep(j,m)cout<<sumV[j]<<" "<<sumVd1[j]<<" "<<sumVd2[j]<<endl;
	ll ans=INF,ay,ax;
	ll sum=0;
	rep(i,n+1){
		ll sum=0,d1=0,d2=0;
		rep(j,m){
			sum+=sumV[j];
			d1+=csumV[j]*(-32*j);
			d2+=csumV[j]*32;
		}
		//cout<<i<<": "<<sum<<" "<<d1<<" "<<d2<<endl;
		int X;
		if(d1>=0 || d2==0)X=0;
		else X=min((ll)m,(-d1+d2-1)/d2);
		ll res=sum + d1*X + d2*(X*(X-1)/2);
		if(res<ans){
			ans=res;
			ay=i,ax=X;
		}
		
		rep(j,m){
			sumV[j]+=sumVd1[j];
			sumVd1[j]+=sumVd2[j];
		}
	}
	cout<<ans<<endl<<ay<<" "<<ax;
}
