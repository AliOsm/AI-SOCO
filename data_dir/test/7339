#include<bits/stdc++.h> 
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include<complex>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1);
#define E 998244353
#define pb push_back
#define mp make_pair
#define ll long long
#define x real
#define y imag

using namespace std;

vector<int>adj[100001];
ll s[100001];
ll arr[1000001];

void dfs(int node,int lev,int par,ll prev)
{
	if(lev%2)
	{
		arr[node]=s[node]-prev;
		for(auto it:adj[node])
		{
			if(it!=par)
				dfs(it,lev+1,node,s[node]);
		}
	}
	else
	{
		if(adj[node].size()==1)
		{
			s[node]=prev;
			arr[node]=0;
			return;
		}
		else
		{
			ll val=DESPACITO;
			for(auto it:adj[node])
			{
				if(it!=par)
					val=min(val,s[it]);
			}
			arr[node]=val-prev;
			s[node]=prev+arr[node];
			for(auto it:adj[node])
			{
				if(it!=par)
					dfs(it,lev+1,node,s[node]);
			}
		}
	}

}
int main()
{
	IOS;
	int n;
	cin >> n;
	REP(i,2,n)
	{
		int x;
		cin >> x;
		adj[x].pb(i);
		adj[i].pb(x);
	}
	REP(i,1,n)
		cin >> s[i];
	dfs(1,1,-1,0);
	ll sum=0;
	REP(i,1,n)
	{
		if(arr[i]<0)
		{
			cout << -1;
			return 0;
		}
		sum+=arr[i];
	}
	cout << sum;
}