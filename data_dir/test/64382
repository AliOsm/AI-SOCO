#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 1000001;
int mx = 0;
string s;
vector<string> all, ret[N];

void split() {
  int idx = 0;
  while (idx < int(s.size())) {
    string cur = "";
    while (idx < int(s.size()) && s[idx] != ',')
      cur += s[idx++];
    all.push_back(cur), ++idx;
  }
}

int toInt(string cur) {
  stringstream ss;
  int fin;
  ss << cur, ss >> fin;
  return fin;
}

int solve(int idx, int lvl) {
  mx = max(mx, lvl);
  if (idx == int(all.size()))
    return 0;
  ret[lvl].push_back(all[idx++]);
  int sons = toInt(all[idx++]);
  while (sons--) {
    idx = solve(idx, lvl + 1);
  }
  return idx;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
#endif
  fastInOut();
  cin >> s, split();
  int idx = 0;
  while (idx < int(all.size())) {
    idx = solve(idx, 0);
  }
  cout << mx + 1 << "\n";
  for (int i = 0; i <= mx; ++i)
    for (int j = 0; j < int(ret[i].size()); ++j)
      cout << ret[i][j] << " \n"[j == int(ret[i].size()) - 1];
  return 0;
}

void fastInOut() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL), cout.tie(NULL);
}
