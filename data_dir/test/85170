#include<bits/stdc++.h>
using namespace std ;
/*#######################################################################*/
/*#######################################################################*/
/*#######################################################################*/
/*#                                                                     #*/
/*#                                                                     #*/
/*#                           MOHAMED SAMEH                             #*/
/*#                                                                     #*/
/*#                                                                     #*/
/*#                                                                     #*/
/*#######################################################################*/
/*#######################################################################*/
/*#######################################################################*/
typedef long long ll ;
typedef vector<int> V ;
typedef vector<ll > VL ;
typedef vector<pair<int,int> >VP;
typedef vector<pair<ll,ll > >VPL;
typedef map<int,int>  MP ;
typedef map<char,int>MCI;
typedef map<ll,ll >  MPL;
typedef set<int> ST ;
typedef stack<int>SK ;
typedef stack<pair<int,int > >SKP;
typedef queue <int> Q ;
typedef priority_queue<int> PQ ;
typedef deque<int> DQ;
////////////////////////////////////////////////////////////////////
#define pf push_front
#define pb push_back
#define f first
#define s second
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define M_P make_pair
//freopen("in.txt","r",stdin);
//freopen("out.txt","w",stdout);

void start ()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

}

int main ()
{
ll cost = 0 ;
int x,t;
int k ;
cin >> x ;
cin >> k ;
vector< pair <int , pair <int ,int  > > > table(x) ;

for (int i =0 ; i< x; i++){
cin >> t;
table[i].s.f = t ;
}
for (int i =0 ; i < x ;i++)
{
    cin >> t ;
    table[i].s.s = t ;
    table[i].f = table[i].s.f-table[i].s.s ;
}
sort(all(table));

for (int i =0 ;i < x ;i++)
{
    if (k>0||table[i].f<0)
    {
        if (k!=0)
        k--;
        cost+=table[i].s.f;


    }
    else{
    cost+=table[i].s.s;
    }

}
cout << cost <<"\n";

   return 0 ;
}
