//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define int long long

using namespace std ;
using pii = pair<int, int> ;

int const N = 2e5 + 10 , inf = 1e17 ;
int n , m , a[N] , dp[N] ;
vector <pii> vec[N] ;

struct node {
  	int val , mx ;
} seg[N << 2] ;

void add (int l , int r , int val , int v = 1 , int s = 0 , int e = n) {
	if (s >= r || e <= l) {
	  	return ;
	}
	if (s >= l && e <= r) {
		seg[v].val += val ;
		seg[v].mx += val ;
		return ;
	}

	int mid = (s + e) >> 1 , lc = v << 1 , rc = lc | 1 ;

	add(l , r , val , lc , s , mid) ;
	add(l , r , val , rc , mid , e) ;

	seg[v].mx = max(seg[lc].mx , seg[rc].mx) + seg[v].val ;
}

int32_t main(){
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

	cin >> n >> m ;

	for (int i = 0 ; i < n ; i ++) {
		cin >> a[i] ;
	}

	while (m --) {
		int l , r , p ;
		cin >> l >> r >> p ;
		l -- , r -- ;
		vec[l].push_back({r , p}) ;
	}

	add(0 , n , -inf) ;

	for (int i = n - 1 ; i >= 0 ; i --) {
		add(i , i + 1 , inf) ;
	  
	  	add(i , n , -a[i]) ;

		for (pii p : vec[i]) {
			add(p.first , n , p.second) ;
		}

		dp[i] = max(dp[i + 1] , seg[1].mx) ;

	  	if (i) {
		  	add(i - 1 , i , dp[i]) ;
		}
	}

	cout << dp[0] << '\n' ;
}
