#include <bits/stdc++.h>
typedef long long ll ;
using namespace std;

int n , m ;
vector < int > ve[600] ;
int memo[600][1050];


int solve(int i , int sum){

    if(i == n)
          return sum ;


    int &ret = memo[i][sum];
    if(ret != -1) return ret ;


    for(int j = 0 ; j < m ; j++){
        ret = max(ret , solve(i + 1 , sum ^ ve[i][j])) ;
    }

    return ret ;
}

vector < int > res ;
void build(int i , int sum){

     if(i == n) return ;

     int optimal = solve(i , sum) ;

     for(int j = 0 ; j < m ; j++){
          int c1 = solve(i + 1 , sum ^ ve[i][j]) ;
          if(c1 == optimal){
               res.push_back(j + 1) ;
               build(i + 1 , sum ^ ve[i][j]) ;
               break ;
          }
     }
}


int main() {
    ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

    cin >> n >> m ;

    for(int i = 0 ; i < n ; i++){
         for(int j = 0 ; j < m ; j++){
             int x ; cin >> x ;
             ve[i].push_back(x);
         }
    }

    memset(memo , -1 , sizeof memo);

    int ret = solve(0 , 0) ;
    if(ret == 0) {
          return cout << "NIE" << endl , 0 ;
    }

    cout << "TAK" << endl ;
    build(0 , 0) ;
    for(auto i : res )cout << i << " " ;




    return 0;
}
