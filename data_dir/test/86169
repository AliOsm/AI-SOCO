#include <bits/stdc++.h>
using namespace std;
using ll = long long;

const int N = 5005;
int dp[N][N];

vector<int> z_function(string s) {
    int n = (int) s.length();
    vector<int> z(n);
    for (int i = 1, l = 0, r = 0; i < n; ++i) {
        if (i <= r)
            z[i] = min (r - i + 1, z[i - l]);
        while (i + z[i] < n && s[z[i]] == s[i + z[i]])
            ++z[i];
        if (i + z[i] - 1 > r)
            l = i, r = i + z[i] - 1;
    }
    return z;
}

int u1[N], u2[N];

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    string s1, s2; cin >> s1 >> s2;
    for (int i = 0; i < s1.size(); i++) {
        string t = s1.substr(i) + "#" + s1;
        //cout << t << '\n';
        auto z = z_function(t);
        int mn = 1;
        for (int j = s1.size()-i+1; j < z.size(); j++) {
            if (j == s1.size()+1) continue;
            mn = max(mn,z[j]+1);
        }
        if (mn <= s1.size()-i) {
            u1[i] = mn;
        }
        //cout << i << ": " << u1[i] << '\n';
    }
    for (int i = 0; i < s2.size(); i++) {
        string t = s2.substr(i) + "#" + s2;
        //cout << t << '\n';
        auto z = z_function(t);
        int mn = 1;
        for (int j = s2.size()-i+1; j < z.size(); j++) {
            if (j == s2.size()+1) continue;
            mn = max(mn,z[j]+1);
        }
        if (mn <= s2.size()-i) {
            u2[i] = mn;
        }
        //cout << i << ": " << u2[i] << '\n';
    }
    for (int i = s1.size()-1; i >= 0; i--) {
        for (int j = s2.size()-1; j >= 0; j--) {
            if (s1[i] == s2[j]) {
                if (i == s1.size()-1 || j == s2.size()-1)
                    dp[i][j] = 1;
                else dp[i][j] = 1 + dp[i+1][j+1];
            }
        }
    }
    int ans = 5005;
    for (int i = 0; i < s1.size(); i++) {
        for (int j = 0; j < s2.size(); j++) {
            if (u1[i] && u2[j] && dp[i][j]) {
                if (u1[i] <= dp[i][j] && u2[j] <= dp[i][j]) {
                    //cout << i << ' ' << j << ": " << dp[i][j] << '\n';
                    ans = min(ans,max(u1[i],u2[j]));
                }
            }
        }
    }
    cout << (ans > 5000 ? -1 : ans) << '\n';
}
