#include <cstdio>
int N,K,T;
char G[200010];
int dop[22],FO[22][22];
bool has[22],IN[22];int rem[22];
int dp[1<<22];
void add(int a,int b,int mask){
  if((mask&(1<<a)) || (mask&(1<<b)))return;
  dp[mask]+=FO[a][b];
  dp[mask|(1<<a)]-=FO[a][b];
  dp[mask|(1<<b)]-=FO[a][b];
  dp[(mask|(1<<a))|(1<<b)]+=FO[a][b];
}
int main(){
  int i,j,l,B=0,CB;
  scanf("%d%d%d",&N,&K,&T);
  scanf("%s",&G);for(i=0;i<N;++i)IN[G[i]-='A']=true;
  for(i=0;i<K;++i)if(IN[i])++B;
  for(i=0;i<K;++i)scanf("%d",&dop[i]);
  for(i=0;i<K;++i)
   for(j=0;j<K;++j)scanf("%d",&FO[i][j]);
  for(i=N-1;i>=0;--i){
   for(j=0;j<K;++j)
    if(has[j])add(G[i],j,rem[j]);
   for(j=0;j<K;++j)
    if(j==G[i]){has[j]=true;rem[j]=0;}
    else if(has[j])rem[j]|=(1<<G[i]);
                     }
  for(i=K-1;i>=0;--i)
   for(j=0;j<(1<<K);++j)
    if(j&(1<<i))dp[j]+=dp[j^(1<<i)];
  int ans=0;
  for(i=0;i<(1<<K);++i){
   l=dp[i];CB=0;
   for(j=0;j<K;++j)
    if(i&(1<<j))
     if(!IN[j])break;
     else{l+=dop[j];++CB;}
   if(CB<B && j==K && l<=T)++ans;
                       }
  printf("%d\n",ans);
  return 0;
}
