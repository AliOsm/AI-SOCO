#include <bits/stdc++.h>
using namespace std;
const int N = 105;

set<int> st[N];
int par[N];

int getpar(int x) {
	if (par[x] == x)
		return x;
	return par[x] = getpar(par[x]);
}

void merge(int a, int b) {
	if (getpar(a) == getpar(b))
		return;

	par[par[a]] = par[b];
}

int main() {
	//freopen("in.txt", "rt", stdin);
	int n, m;
	scanf("%d %d", &n, &m);
	int a, b;
	for (int i = 1; i <= n; ++i) {
		par[i] = i;
	}
	while (m--) {
		scanf("%d %d", &a, &b);
		st[a].insert(b);
		st[b].insert(a);
		merge(a, b);
	}
	for (int i = 1; i <= n; ++i) {
		st[0].insert(getpar(i));
	}
	if (st[0].size() > 1) {
		puts("NO");
		return 0;
	}
	st[0].clear();
	int c = 1;
	while (c) {
		c = 0;
		for (int i = 1; i <= n; ++i) {
			if (st[i].size() == 1) {
				int v = (*st[i].begin());
				st[i].clear();
				st[v].erase(i);
				++c;
			}
		}
	}
	vector<int> vec;
	for (int i = 1; i <= n; ++i) {
		if (st[i].size() && st[i].size() == 2) {
			vec.push_back(i);
			par[i] = i;
		} else if (st[i].size()) {
			puts("NO");
			return 0;
		}
	}

	for (auto x : vec) {
		for (auto y : st[x]) {
			merge(x, y);
		}
	}
	for (auto x : vec) {
		st[0].insert(getpar(x));
	}
	if (st[0].size() == 1 && vec.size() > 2)
		puts("FHTAGN!");
	else
		puts("NO");
}
