#ifdef LOCAL_EXEC
#include "include.h"
#else
#include <bits/stdc++.h>
using namespace std;
#define trace(...)
#endif

using LL = long long;
const int N = 1e6 + 10;
int a[N];

void NO() {
	cout << "-1\n";
	exit(0);
}

LL get(int n, int k) {
	LL ans = 0;
	vector<int> idx;
	for (int i = 0; i < n; i++) {
		if (a[i] == 1) {
			idx.push_back(i);
		}

		if ((int) idx.size() == k) {
			for (int j = 0; j < k / 2; j++) {
				ans += idx[k - j - 1] - idx[j];
			}
			idx.clear();
		}
	}
	assert(idx.empty());
	return ans;
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);

	int n; cin >> n;
	int total = 0;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		assert(a[i] == 0 || a[i] == 1);
		total += a[i];
	}
	assert(total > 0);

	if (total == 1) {
		NO();
	}

	const LL INF = 1e18;
	LL ans = INF;
	bool first = true;
	for (int k = 2; k <= total; k++) {
		if (total % k == 0) {
			LL curr = get(n, k);
			if (curr < ans) {
				// assert(first);
				ans = curr;
			}
			first = false;
			// break;
		}
	}
	assert(ans < INF);
	cout << ans << endl;

	return 0;
}
