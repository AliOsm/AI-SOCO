//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod=MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n, k, DP[2][202][200*26];
ll arr[202];


int main(){
 
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin>>n>>k;
    for(int i=1;i<=n;i++)   cin>>arr[i];

    for(int j=0;j<=k;j++)
        for(int fives=0;fives<=25*n;fives++)
            DP[0][j][k] = -MOD;
    DP[0][0][0] = 0;
    for(int i=1;i<=n;i++){
        
        int nxt = (i&1), curr = 1-nxt;
        int t = 0, f = 0;
        while(arr[i] % 5 == 0){ arr[i] /= 5;    f++;    }
        while(arr[i] % 2 == 0){ arr[i] /= 2;    t++;    }
        
        for(int j=0;j<=k;j++)
            for(int fives=0;fives<=i*25;fives++)
                DP[nxt][j][fives] = -MOD;
        
        for(int j=0;j<=k;j++)
            for(int fives=0;fives<=25*(i-1);fives++){
                DP[nxt][j][fives] = max(DP[nxt][j][fives], DP[curr][j][fives]);
                DP[nxt][j+1][fives+f] = max(DP[nxt][j+1][fives+f], DP[curr][j][fives]+t);
            }

// cout<<"after i = "<<i<<", "<<nxt<<endl;
// for(int j=0;j<=k;j++){
//     for(int fives=0;fives<=3;fives++)   cout<<DP[nxt][j][fives]<<" ";cout<<endl;
// }cout<<endl;
    }


    int ans = 0;
    for(int fives=0;fives<=25*n;fives++)
        ans = max(ans, min(fives, DP[n&1][k][fives]));
    cout<<ans;
    return 0;
}
 


