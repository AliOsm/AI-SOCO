#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
 
double PI = 3.1415926535897932384626433832795;
double EPS = 1e-2;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int, int> pii;
const int MAXN = 3000100;
const int MAXC = 1e7;
const int mod = 1e9 + 7;
const int ROOT = 1734;

int64 n;
int64 k;
int64 val[MAXN];
int64 pro[MAXN];
int64 sum[MAXN];

int en = 0;
int64 ans = 0;

void solve()
{
	scanf("%lld", &n);
	for(int i = 0; i < n; ++i)
	{
		int t;
		scanf("%d", &t);
		val[t]++;
	}
	ans = n *(int64) (n - 1) / 2;
	for(int i = 1; i < ROOT; ++i)
	{
		pro[i * i] += val[i] * (int64) (val[i] - 1) / 2;
		for(int j = i + 1; j * i < MAXN; ++j)
		{
			pro[j * i] += val[i] * (int64) val[j]; 
		}
	}
	for(int i = 1; i < MAXN; ++i)
	{
		sum[i] = pro[i] + sum[i - 1];
	}
	int q;
	scanf("%d", &q);
	for(int i = 0; i < q; ++i)
	{
		int p;
		scanf("%d", &p);
		printf("%lld\n", 2 * (ans - sum[p - 1]));
	}
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	int t = 1;
	//cin >> t;
	for(int i = 0; i < t; ++i)
	{
		solve();
		//cout << endl;
	}
	
    return 0;
}   