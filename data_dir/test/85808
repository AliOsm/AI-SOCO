#include <bits/stdc++.h>
using namespace std;
using ll = long long;

ll count(ll n, ll p) {
    ll r = p;
    ll ans = 0;
    while (n/r > 0) {
        ans += n/r;
        const double mx = (double)std::numeric_limits<ll>::max();
        if ((double)(r)*p > mx) break;        
        //if (r > r*p) break; //check for overflow
        r = r * p;
    }
    return ans;
}

vector<pair<ll,ll>> facs;
void factor(ll b) {
    for (ll i = 2; i*i <= b; i++) {
        if (b % i == 0) {
            ll cnt = 0;
            while (b % i == 0) {
                cnt++;
                b /= i;
            }
            facs.push_back({i,cnt});
            factor(b);
            return;
        }
    }
    if (b > 1) {
        facs.push_back({b,1});
    }
}

int main()
{
    ll n, b; cin >> n >> b;
    //factor b
    factor(b);
    ll ans = std::numeric_limits<ll>::max(); 
    assert(!facs.empty());
    for (pair<ll,ll> j: facs) {
        //cout << j.first << ' ' << j.second << '\n';
        ll c = count(n,j.first);
        ll cnt = c/j.second;
        if (ans == -1) ans = cnt;
        else ans = min(ans,cnt);
    }
    cout << ans << '\n';
    return 0;
}

