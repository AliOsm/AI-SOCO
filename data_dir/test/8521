#include <iostream>
#include <stack>
#include <algorithm>
#include <string.h>
#include <queue>
#include <iomanip>
#include <cmath>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
#define fi first
#define se second

const int maxN = 2e5 + 9, MOD = 1e9 + 7;

struct Point{
    ll x, y;
    Point(ll x, ll y): x(x), y(y){}
    Point operator-( Point &ot){
        return Point(x - ot.x, y - ot.y);
    }
    Point operator+(const Point &ot){
        return Point(x + ot.x, y + ot.y);
    }
    ll operator%(const Point &ot){
        return x * ot.y - y * ot.x;
    }
    ll operator*(const Point &ot){
        return x * ot.x + y * ot.y;
    }
};

ll gcd(ll a, ll b){
    if(a == 0) return b;
    return gcd(b % a, a);
}

int n;
string st;
int arr[4000];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    
    cin >> n >> st;
    
    queue<int> q;
    
    for(int i = 0; i < n; i++){
        if(st[i] == '?'){
            q.push(i);
        }else{
            arr[st[i]]++;
        }
    }
    
    priority_queue<ii, vector<ii>, greater<ii>> pq;
    
    string els = "ACGT";
    
    for(char el: els){
        pq.push(ii(arr[el], el));
    }
    
    while(q.size()){
        ii cr = pq.top(); pq.pop();
        
        st[q.front()] = cr.se;
        cr.fi++;
        
        pq.push(cr);
        q.pop();
    }
    
    if(pq.top().fi * 4 != n){
        cout << "===\n"; return 0;
    }
    
    cout << st << '\n';
    
}
