#include<bits/stdc++.h>
using namespace std;
const int MOD = 1e9+7;

int sum(int a, int b) {
    return a + b >= MOD ? a + b - MOD : a + b;
}
int sub(int a, int b) {
    return a - b < 0 ? a - b + MOD : a - b;
}
int mul(int a, int b) {
    return (1LL*a*b)%MOD;
}

int pw(int a, int b) {
    if (!b) return 1;
    int r = pw(a, b/2);
    r = mul(r, r);
    if (b%2) r = mul(r, a);
    return r;
}

const int MAXN = 257;
int nCr[MAXN][MAXN];
int dp[MAXN];

int main() {
    nCr[0][0] = 1;
    for (int n = 1; n < MAXN; n++) {
        nCr[n][0] = 1;
        for (int r = 1; r <= n; r++) {
            nCr[n][r] = sum(nCr[n-1][r], nCr[n-1][r-1]);
        }
    }

    int n, k;
    cin >> n >> k;

    if (k==1) {
        cout << 1 << endl;
        return 0;
    }

    dp[1] = 1;
    for (int i = 2; i <= n; i++) {
        dp[i] = sub(pw(k, i), pw(k-1, i));
        dp[i] = pw(dp[i], n);
        for (int r = 1; r < i; r++) {
            dp[i] = sub(dp[i], mul(dp[i-r], mul(nCr[i][r], pw(k-1, r*n))));
        }
    }

    cout << dp[n] << endl;

    return 0;
}
