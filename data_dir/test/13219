#include <set>
#include <map>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cctype>
#include <cstdio>
#include <string>
#include <vector>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <iostream>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long ull;

#define Rep(i,n) for(__typeof(n) i = 0; i < (n); ++i)
#define Repd(i,n) for(__typeof(n) i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(__typeof(b) i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(__typeof(a) i = (a); i >= (b); --i)
#define Fit(i,v) for(__typeof((v).begin()) i = (v).begin(); i != (v).end(); ++i)
#define Fitd(i,v) for(__typeof((v).rbegin()) i = (v).rbegin(); i != (v).rend(); ++i)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(a) ((int)(a).size())
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define nl puts("")
#define sp printf(" ")
//#include <conio.h>

template<class F, class T> T convert(F a, int p = -1) { stringstream ss; if (p >= 0) ss << fixed << setprecision(p); ss << a; T r; ss >> r; return r; }
template<class T> void db(T a, int p = -1) { if (p >= 0) cout << fixed << setprecision(p); cout << a << " "; }
template<class T> T gcd(T a, T b) { T r; while (b != 0) { r = a % b; a = b; b = r; } return a; }
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<class T> T sqr(T x) { return x * x; }
template<class T> T cube(T x) { return x * x * x; }
template<class T> struct Triple { T x, y, z; Triple() {} Triple(T _x, T _y, T _z) : x(_x), y(_y), z(_z) {} };
template<class T> Triple<T> euclid(T a, T b) { if (b == 0) return Triple<T>(1, 0, a); Triple<T> r = euclid(b, a % b); return Triple<T>(r.y, r.x - a / b * r.y, r.z); }
template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return s == 0 ? 0 : cntbit(s >> 1) + (s & 1); }
const int bfsz = 1 << 16; char bf[bfsz + 5]; int rsz = 0;int ptr = 0;
char gc() { if (rsz <= 0) { ptr = 0; rsz = fread(bf, 1, bfsz, stdin); if (rsz <= 0) return EOF; } --rsz; return bf[ptr++]; }
void ga(char &c) { c = EOF; while (!isalpha(c)) c = gc(); }
int gs(char s[]) { int l = 0; char c = gc(); while (isspace(c)) c = gc(); while (c != EOF && !isspace(c)) { s[l++] = c; c = gc(); } s[l] = '\0'; return l; }
template<class T> bool gi(T &v) {
	v = 0; char c = gc(); while (c != EOF && c != '-' && !isdigit(c)) c = gc(); if (c == EOF) return false; bool neg = c == '-'; if (neg) c = gc();
    while (isdigit(c)) { v = v * 10 + c - '0'; c = gc(); } if (neg) v = -v; return true;
}

const double PI = 2 * acos(0);
const string months[] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
const int days[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
const int dr[] = {-1, 0, +1, 0};
const int dc[] = {0, +1, 0, -1};

const ll inf = (int)(1e9) + 5;
const ll linf = (ll)1e16 + 5;
const double eps = 1e-9;
const ll mod = 1000000007;
typedef pair<int, int> II;

#define maxn 50005

int f[105][4];
int r[1000];

int cal0(int i){
	ms(r, 0);
	if(i == 1) return 1;
	if(i >= 2) r[f[i - 2][1]] = 1;
	if(i >= 3){
		for(int j = 0; j <= i - 3; j ++){
			int xo = f[j][1] ^ f[i - j - 3][1];
			r[xo] = 1;
		}
	}
	Rep(j, 1000) if(!r[j]) return j;
}

int cal1(int i){
	if(i == 1) return 2;
	if(i == 2) return 3;
	ms(r, 0);
	r[f[0][1] ^ f[i - 2][1]] = 1;
	r[f[i - 1][1]] = 1;
	r[f[i - 2][1]] = 1;
	r[f[i - 2][2]] = 1;
	r[f[i - 2][3]] = 1;
	for(int j = 0; j <= i - 3; j++){
		int xo = f[j][1] ^ f[i - j - 3][2];
		r[xo] = 1;
		xo = f[j][1] ^ f[i - j - 3][3];
		r[xo] = 1;
	}
	Rep(j, 1000) if(!r[j]) return j;
}

int cal2(int i){
	if(i == 1) return 1;
	if(i == 2) return 0;
	ms(r, 0);
	r[f[i - 1][2]] = 1;
	r[f[i - 2][3]] = 1;
	r[1 ^ f[i - 2][2]] = 1;
	for(int j = 0; j <= i - 3; j++){
		int xo = f[j][3] ^ f[i - j - 3][3];
		r[xo] = 1;
		xo = f[j][2] ^ f[i - j - 2][3];
		r[xo] = 1;
	}
	Rep(j, 1000) if(!r[j]) return j;
}

int cal3(int i){
	if(i == 1) return 0;
	if(i == 2) return 1;
	ms(r, 0);
	r[f[i - 1][3]] = 1;
	r[f[i - 2][2]] = 1;
	r[1 ^ f[i - 2][3]] = 1;
	for(int j = 0; j <= i - 3; j ++){
		int xo = f[j][2] ^ f[i - j - 3][3];
		r[xo] = 1;
		xo = f[j][3] ^ f[i - j - 3][2];
		r[xo] = 1;
	}
	Rep(j, 1000) if(!r[j]) return j;
}

void init(){
	f[0][0] = 0; f[0][1] = 1; f[0][2] = 0; f[0][3] = 1;
	For(i, 1, 100){
		f[i][0] = cal0(i);
		f[i][1] = cal1(i);
		f[i][2] = cal2(i);
		f[i][3] = cal3(i);

	}
}

int a[105][2];
int n, m;

int main() {
//    freopen("in.txt","r",stdin);

	init();
	cin >> n >> m;
	int u, v;
	ms(a, 0);
	a[0][0] = 1;
	a[0][1] = 1;
	a[n + 1][0] = 1;
	a[n + 1][1] = 1;
	Rep(run, m){
		cin >> u >> v;
		v--;
		a[u][v] = 1;
		a[u - 1][1 - v] = 1;
		a[u][1 - v] = 1;
		a[u + 1][1 - v] = 1;
	}

	int l = 0, r;
	int XO = 0;
	for(int i = 1; i <= n + 1; i ++){
		if(a[i][0] && a[i][1]){
			r = i;
			if(l + 1 < r){
				int t1 = 0, t2 = 0;
				if(a[l + 1][0]) t1 = 1;
				if(a[l + 1][1]) t1 = 2;
				if(a[r - 1][0]) t2 = 1;
				if(a[r - 1][1]) t2 = 2;
				if(t1 == 0 && t2 == 0){
					XO ^= (f[r - l - 1][0]);
				}
				else if(t1 == 0 || t2 == 0){
					XO ^= (f[r - l - 2][1]);
				}
				else if(t1 == t2){
					if(l + 2 == r) XO ^= 1;
					else XO ^= (f[r - l - 3][2]);
				}
				else XO ^= f[r - l - 3][3];
			}
			l = r;
		}


	}
	if(XO) cout << "WIN" << endl;
	else cout << "LOSE" << endl;

    return 0;
}

