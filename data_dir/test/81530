#include<bits/stdc++.h>
using namespace std;
inline void read(int &x){
	register char c=getchar();
	x=0;
	while(c<'0'||c>'9') c=getchar();
	for(;c>='0'&&c<='9';c=getchar())
		x=(x<<1)+(x<<3)+(c-'0');
}
inline void write(int x){
	register char c[10],*p=c;
	do{
		*p++=x%10;x/=10;
	}while(x);
	while(p!=c) putchar(*--p+'0');
	putchar('\n');
}
const int N=2e5+5;
int b[N],p[N],q[N],d[N],l[N],r[N],z[N];
map<int, pair<int, int> > le, ri;
inline bool cmp(const int &x,const int &y){
	return l[x]>l[y];
}
void update(int x,int y){
    while(x<N){
		b[x]+=y;
		x+=(x&(-x));
	}
}
int query(int x){
    int y=0;
    while(x>0){
		y+=b[x];
		x-=(x&(-x));
    }
    return y;
}
int query(int x,int y){
    auto it=ri.upper_bound(y);
    return max(0,y-it->second.first)+query(it->second.second-1);
}
void ins(int x,int y,int i){
    for(auto it=le.begin();it!=le.end()&&it->first<=y;le.erase(it++)){
        y=max(y,it->second.first);
        update(it->second.second,it->first-it->second.first);
        ri.erase(it->second.first);
    }
    update(i,y-x);
    le[x]=make_pair(y,i);
    ri[y]=make_pair(x,i);
}
int main(){
	int n,m,i,j,k;
    read(n);
    for(i=1;i<=n;++i)
        read(p[i]),read(q[i]);
    read(m);
	for(i=0;i<m;++i){
		read(l[i]);
		read(r[i]);
		d[i]=i;
	}
	sort(d,d+m,cmp);
	for(i=n,j=0;i>0;--i){
		ins(p[i],p[i]+q[i],i);
		for(;j<m;++j){
			k=d[j];
			if(l[k]!=i) break;
			z[k]=p[r[k]]-p[i]-query(p[i],p[r[k]]);
		}
    }
	for(i=0;i<m;++i) write(z[i]);
}
