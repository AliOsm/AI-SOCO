#include <bits/stdc++.h>
using namespace std;

int64_t INF = 1e12;
void add(int64_t& a, int64_t b){
    a = min(INF, a+b);
}

int main(){
    int N;
    int64_t K;
    string str;
    cin >> N >> K >> str;
    vector<int> S(N);
    for(int i=0; i<N; i++) S[i] = str[i] - 'a';

    int nxt[100][26], now[26];
    for(int i=0; i<26; i++) now[i] = N;
    for(int i=N-1; i>=0; i--){
        now[S[i]] = i;
        for(int k=0; k<26; k++) nxt[i][k] = now[k];
    }

    static int64_t dp[101][102];
    dp[0][0] = 1;
    for(int i=0; i<N; i++) for(int j=0; j<N; j++){
        for(int k=0; k<26; k++) if(nxt[i][k] < N){
            add(dp[nxt[i][k]+1][j+1], dp[i][j]);
        }
    }

    static int64_t sum[101];
    for(int i=0; i<=N; i++) for(int j=0; j<=N; j++) add(sum[j], dp[i][j]);

    int64_t ans = 0;
    for(int i=N; i>=0; i--){
        int64_t use = min(K, sum[i]);
        ans += use * (N-i);
        K -= use;
    }
    if(K > 0) ans = -1;
    cout << ans << endl;
    return 0;
}
