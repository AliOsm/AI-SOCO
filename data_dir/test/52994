#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    ll a,k, o=0; cin>>a>>k;
    vec<pll> m(a);
    for(int q=0; q<a; q++) cin>>m[q].F;
    for(int q=0; q<a; q++) cin>>m[q].S;
    sort(m.begin(), m.end(), [](pll &p1, pll &p2){return p1.F-p1.S < p2.F-p2.S;});
    for(int q=0; q<k; q++) o+=m[q].F;
    ll i=k;
    for(; i<a && m[i].F-m[i].S<=0; i++) o+=m[i].F;
    for(; i<a; i++) o+=m[i].S;
    cout<<o;
}