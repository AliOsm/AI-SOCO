#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl

const int maxn = 1e6 + 5;


// <=x
int bs(vector<ll>& acc, int l, int r, int x) {
  int n = acc.size();
  assert(l<n);
  if (acc[l] > x) return -1;
  while (r - l > 1) {
    int mid = (r+l)/2;
    if (acc[mid] <= x) {
      l = mid;
    } else {
      r = mid;
    }
  }
  return l;
}

int solve() {
  int n; ll s;
  cin>>n>>s;
  vector<ll> v(n);
  ll tot = 0;
  for (int i=0; i<n; i++) {
    cin>>v[i]; tot += v[i];
  }
  vector<ll> acc = v;
  for (int i=1; i<n; i++) {
    acc[i] += acc[i-1];
  }

  if (s>=tot) return 0;
  int idx = -1;
  int ans = 0;

  for (int i=0; i<n; i++) {
    if (i==n-1) {
      ll cur = acc[i]-v[i];
      if (cur<=s) {
	if (i>ans) {
	  idx=i;
	  ans=i;
	}
      }
      break;
    }
    //ll cur = i==0 ? 0 : acc[i-1];
    ll x = s + v[i];
    int j = bs(acc, i+1, n, x);
    if (j == -1) {
      if (i > ans && acc[i-1]<=s) {
	idx = i;
	ans = i;
      }
    }
    if (j > ans) {
      idx = i;
      ans = j;
    }

  }

  return idx+1; //1-index
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

  int t;  cin>>t;
  while (t--) cout<<solve()<<"\n";
  

  return 0;
}
