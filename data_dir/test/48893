#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define lb lower_bound
#define ub upper_bound
#define all(v) (v.begin(),v.end())
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef   long long int ll;
const long long int mod=1e9+7;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,-1};
ll m,k,n;
string s1="one",s2="zero",ch="";
set< pair<ll,ll> > st;
set<ll> st1;
vector< pair<ll,ll> >vv;
vector< pair< pair <ll,ll>,ll> > vvv1;
vector< pair< pair<ll,ll> , pair<ll,ll> > > vvv;
vector<ll> v,v1;
map< pair<ll,ll>, vector< pair<ll,ll> > > mp;
map<ll,vector< pair< pair<ll,ll>,ll> > > mpx;


int main(){
In_the_name_of_allah_the_merciful

    ll i=0,x,y,j=0,z,q,nb0=0,nbp=0,nbn=0,nbmax=0,nbinf=0,nb2=0,mm=5e8,idx=0,ok=0,l,r,negatif=0,positif=0,l1,r1;
    set<  pair<ll,ll> > ::iterator it,it2;
    set<ll> ::iterator it1;
    char c;
  // freopen("a.txt","r",stdin);
   cin>>n;
   for(i=1;i<=n;i++){
      cin>>x>>y>>z;
      st.insert({x,y});
      mp[{x,y}].pb({z,i});
   }
   for(it=st.begin();it!=st.end();it++){
      pair<ll,ll> pp=(*it);
      sort(mp[pp].begin(),mp[pp].end());
      for(i=0;i<((ll)mp[pp].size()-1);i+=2){
          vv.pb({mp[pp][i].second,mp[pp][i+1].second});
      }
      if(i==((ll)mp[pp].size()-1)){
        mpx[pp.first].pb({{pp.second,mp[pp][i].first},mp[pp][i].second});
        st1.insert(pp.first);
      }
   }
   for(it1=st1.begin();it1!=st1.end();it1++){
      x=(*it1);
      sort(mpx[x].begin(),mpx[x].end());
      for(i=0;i<((ll)mpx[x].size()-1);i+=2){
         vv.pb({mpx[x][i].second,mpx[x][i+1].second});
      }
      if(i==((ll)mpx[x].size()-1)){
         vvv.pb({{x,mpx[x][i].first.first},{mpx[x][i].first.second,mpx[x][i].second}});
      }

   }
   sort(vvv.begin(),vvv.end());
   for(i=0;i<((ll)vvv.size()-1);i+=2){
      vv.pb({vvv[i].second.second,vvv[i+1].second.second});
   }
   for(i=0;i<vv.size();i++){
      cout<<vv[i].first<<" "<<vv[i].second<<endl;
   }

Alhamdulillah
 }
