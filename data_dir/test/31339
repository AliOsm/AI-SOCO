#include <bits/stdc++.h>
using namespace std;

vector<int> g[150000];
int p[160000];
int f(int a) {
  if (p[a] == a) return a;
  else return p[a] = f(p[a]);
}
class Solution {
  int n;
public:
  void run() {
    cin >> n;
    for (int i = 0; i < n; ++i) g[i].push_back(i);
    iota(p, p + n, 0);
    for (int i = 0; i < n - 1; ++i) {
      int a, b; cin >> a >> b;
      --a, --b;
      a = f(a), b = f(b);
      if (g[a].size() > g[b].size()) {
        g[a].insert(g[a].end(), g[b].begin(), g[b].end());
        p[b] = a;
      }
      else {
        g[b].insert(g[b].end(), g[a].begin(), g[a].end());
        p[a] = b;
      }
    }
    int j = f(0);
    for (int i = 0; i < n; ++i) {
      cout << g[j][i] + 1 << " \n"[i == n - 1];
    }
  }
};

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);
  Solution().run();
}
