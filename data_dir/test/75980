#include <iostream>
#include <vector>
using namespace std;

vector<int> graph[200500];
int clr[200500];
int ps1[100500];
int ps2[100500];
void dfs(int i,int cl)
{
    clr[i]=cl;
    for (int j=0;j<graph[i].size();j++)
    {
        int u=graph[i][j];
        if (0==clr[u])
        {
            dfs(u,3-cl);
        }
    }
}


int main()
{
    int n;
    cin >> n;
    for (int i=1;i<=n+n;i+=2)
    {
       int b=i;
       int c=i+1;
        graph[c].push_back(b);
        graph[b].push_back(c);
    }
    for (int i=1;i<=n;i++)
    {
        int a,b;
        cin >> a >> b;
        graph[a].push_back(b);
        graph[b].push_back(a);
        ps1[i]=a;
        ps2[i]=b;
    }
    for (int i=1;i<=n+n;i++)
    {
        if (clr[i]==0)
        {
            dfs(i,1);
        }
    }
    for (int i=1;i<=n;i++)
    {
        cout << clr[ps1[i]] << ' ' << clr[ps2[i]] << endl;
    }
    return 0;
}
