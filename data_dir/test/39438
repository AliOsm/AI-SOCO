#include<bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
using namespace std;

#define fr first
#define sc second
#define memset(X,Y) memset(X,Y,sizeof X)
#define all(X) X.begin(),X.end()
#define SZ size()
#define mp make_pair
#define pb push_back
#define Pb pop_back

template<class A, class B> ostream& operator <<(ostream &out, const pair<A, B> &p) {
    return out << "(" << p.fr << ", " << p.sc << ")";
};

template<class A> ostream& operator <<(ostream &out, const vector<A> &v) {
    out << "[";
    for(int i=0;i<(int)v.SZ;i++) {
        if(i)
            out << ", ";
        out << v[i];
    }
    return out << "]";
}

#define error(args...){vector<string> _v = split(#args,','); err(_v.begin(),args); cerr<<endl;}
vector <string> split(const string &s,char c)
{
    vector<string> v;
    stringstream ss(s);
    string x;
    while(getline(ss,x,c))
        v.emplace_back(x);
    return move(v);
}
void err(vector<string>:: iterator it) {}
template<typename T,typename ... Args>
void err(vector<string>::iterator it, T a, Args ... args)
{
    cerr << it->substr((*it)[0] == ' ',it->length())
         << " = " << a <<" " ;
    err(++it,args...);
}

template <typename T>
using order_set = tree<T, null_type, less<T>, rb_tree_tag,
      tree_order_statistics_node_update>;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
double pi = acos(-1),eps=1e-8;
const ll N = 5 * (1e5) + 10 , M = (1e6)+10 , mod = 1e9 + 7 , K = 4 * N;
ll OOL = 1e18;
ll OO = 1e9;

int n,m;
string s;
vi G[N];
vector<pii> Q[N];
int t,sz[N],st[N],en[N],ve[N],dist[N];
int dfs1(int u,int d=1){
    sz[u]=1;
    dist[u]=d;
    st[u]=t;
    ve[t++]=u;
    for(int v:G[u])
        sz[u]+=dfs1(v,d+1);
    en[u]=t;
    return sz[u];
}
int cnt[N][27];
int has[N];
int ans[N];
void dfs2(int u,int keep=1){
    int bigch=-1,mx=-1;
    for(int v:G[u])
        if(sz[v]>mx)
            bigch=v,mx=sz[v];
    for(int v:G[u])
        if(v!=bigch)
            dfs2(v,0);
    if(bigch!=-1)
        dfs2(bigch,1);
//    error(u);
    for(int v:G[u])
        if(v!=bigch)
            for(int p=st[v];p<en[v];p++){
//                error(ve[p],)
                if((++cnt[dist[ve[p]]][s[ve[p]]-'a'])%2)
                    has[dist[ve[p]]]++;
                else
                    has[dist[ve[p]]]--;
            }
    if((++cnt[dist[u]][s[u]-'a'])%2)
        has[dist[u]]++;
    else
        has[dist[u]]--;
//    cout << "@### "<<u+1 <<endl;
//    for(int i=1;i<=3;i++){
//        cout <<has[i] << " ";
//    }
//    cout << endl;
    for(int i=0;i<Q[u].SZ;i++){
//        error(u,Q[u][i].fr,has[Q[u][i].fr]);
        if(has[Q[u][i].fr]<=1)
            ans[Q[u][i].sc]=1;
    }
    if(!keep)
        for(int p=st[u];p<en[u];p++)
            if((--cnt[dist[ve[p]]][s[ve[p]]-'a'])%2)
                has[dist[ve[p]]]++;
            else
                has[dist[ve[p]]]--;

}
int main(){
    cin >> n >> m ;
    for(int i=1;i<n;i++){
        int u;
        scanf("%d",&u);
        u--;
        G[u].pb(i);
    }
    cin >> s;
    for(int i=0;i<m;i++){
        int v,h;
        scanf("%d%d",&v,&h);
        v--;
        Q[v].pb(mp(h,i));
    }
    dfs1(0);
    dfs2(0);
    for(int i=0;i<m;i++){
        if(ans[i])puts("Yes");
        else puts("No");
    }
}
/*
6 5
1 1 1 3 3
zacccd
1 1
3 3
4 1
6 1
1 2
*/
