#include <bits/stdc++.h>
using namespace std;
struct edge {
	long a,b;
};
long n,m,a=0,b=0,d[200000]={0},l[200000]={0};
edge p[300000];
bool cmp(edge a,edge b) {
	return a.a<b.a;
}
bool DFS(long s,long t) {
	if (d[s]==0) {
		d[s]=t;
		if (t==1) a++;
		else b++;
		for (long i=l[s];p[i].a==s && i<m*2;i++) {
			bool dd=DFS(p[i].b,3-t);
			if (!dd) return false;
		}
	}
	else {
		if (d[s]!=t) {
			cout << -1;
			return false;
		}
	}
	return true;
}
int main() {
	cin >> n >> m;
	for (long i=0;i<m;i++) {
		cin >> p[i*2].a >> p[i*2].b;
		p[i*2+1].b=p[i*2].a;
		p[i*2+1].a=p[i*2].b;
	}
	sort(p,p+m+m,cmp);
	for (long i=m*2-1;i>=0;i--)
		l[p[i].a]=i;
	for (long i=1;i<=n;i++)
		if (d[i]==0) {
			bool dd=DFS(i,1);
			if (!dd) return 0;
		}
	cout << a << endl;
	for (long i=1;i<=n;i++)
		if (d[i]==1) cout << i << " ";
	cout << endl << b << endl;
	for (long i=1;i<=n;i++)
		if (d[i]==2) cout << i << " ";
}
