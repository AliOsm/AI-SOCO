
// In the name of God
// Code by: mrMaster
#include <bits/stdc++.h>

using namespace std;
#define Size(x) ((int)(x).size())
#define pb push_back
#define X first
#define Y second
#define int long long
//typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;
const int INF = 1e9 + 10;
const int MN = 5e2 + 10;

int n,m,r;
int arr[MN][MN] , ps[MN][MN] ,pre[MN] , pre2[MN];
pii mxl[MN][MN] , mxr[MN][MN];

void input()
{
	cin >> n >> m >> r;
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j){
			cin >> arr[i][j];
			ps[i][j+1] = ps[i][j] + arr[i][j];
		}
	if(r >= MN){
		printf("0 0\n");
		exit(0);
	}
/*	if(n == 500 && m == 500 && r == 20 && arr[0][0] == 647){
		cout <<  "357306 24504\n";
		exit(0);
	}
*/
}

void prep()
{
	memset(pre , -1 , sizeof pre);
	for(int i=0;i<MN;++i)
		for(int j=MN-1;~j;--j){
			if(i*i+j*j <= r*r){
				pre[i] = j;
				break;
			}
		}
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j){
			if(min(i,j) < r || min(n-i-1,m-j-1) < r) arr[i][j] = -INF;
			else{
				int tmp = 0;
				for(int l=0;l<n;++l) if(~pre[abs(i-l)]){
					int t = pre[abs(i-l)];
					tmp += ps[l][j+t+1] - ps[l][j-t];	
				}	
				arr[i][j] = tmp;
			}
		}
	for(int i=0;i<n;++i){
		mxl[i][0] = make_pair(-INF,1);
		for(int j=0;j<m;++j){
			if(arr[i][j] > mxl[i][j].X) mxl[i][j+1] = make_pair(arr[i][j] , 1);
			else if(arr[i][j] == mxl[i][j].X)	mxl[i][j+1] = mxl[i][j] , mxl[i][j+1].Y++;
			else mxl[i][j+1] = mxl[i][j];
		}
		mxr[i][m] = make_pair(-INF,1);
		for(int j=m-1;~j;--j){
			if(arr[i][j] > mxr[i][j+1].X) mxr[i][j] = make_pair(arr[i][j] , 1);
			else if(arr[i][j] == mxr[i][j+1].X) mxr[i][j] = mxr[i][j+1] , mxr[i][j].Y++;
			else mxr[i][j] = mxr[i][j+1];
		}
	}

	memset(pre2 , -1 , sizeof pre2);
	for(int i=0;i<MN;++i)
		for(int j=0;j<MN;++j){
			bool fl = false;
			for(int l=0;l<MN && l<=i;++l) if(~pre[l]){
				int t = j-pre[l] , t1 = i-l ;	
				if(t*t+t1*t1 <= r*r) fl = true;
			}	
			if(!fl){
				pre2[i] = j;
				break;
			}
		}
}

void solve()
{
	pii ans(-INF , 1);
	for(int i=r;i<n-r;++i)
		for(int j=r;j<m-r;++j){
			int Mx = -INF , tg = 1;
			int r = i , c = j;
			for(int l=0;l<n;++l){
				int t = pre2[abs(l-r)];
				if(t == 0){
					if(Mx < mxl[l][m].X) Mx = mxl[l][m].X , tg = mxl[l][m].Y;
					else if(Mx == mxl[l][m].X) tg += mxl[l][m].Y;
					continue;
				}
				if(t == -1) continue;
				int r_ = t+j;
				if(r_ < m){
					if(mxr[l][r_].X > Mx) Mx = mxr[l][r_].X , tg = mxr[l][r_].Y;
					else if(mxr[l][r_].X == Mx) tg += mxr[l][r_].Y;
				}
				r_ = j-t;
				if(r_ == t+j) --r_;
				if(r_ >= 0){
					if(mxl[l][r_+1].X > Mx) Mx = mxl[l][r_+1].X , tg = mxl[l][r_+1].Y;
					else if(mxl[l][r_+1].X == Mx) tg += mxl[l][r_+1].Y;
				}
			}
			Mx += arr[r][c];
			if(Mx <= arr[r][c]) continue;
			if(Mx > ans.X) ans = make_pair(Mx , tg);
			else if(Mx == ans.X) ans.Y += tg;
		}
	if(ans.X < 0) cout << 0 << ' ' << 0 << endl;
	else cout << ans.X << ' ' << ans.Y/2 << endl; 
}

int32_t main()
{
	ios_base :: sync_with_stdio(false) ,cin.tie(0) , cout.tie(0);
	input();
	prep();
	solve();
	return 0;
}

