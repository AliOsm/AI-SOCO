#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define popcntll(x) __builtin_popcountll(x)
#define inf 0x3f3f3f3f  //integers only
#define watch(x) cout << (#x) << " is " << (x) << endl
#define isOn(S, j) (S & (1 << j))
#define setBit(S, j) (S |= (1 << j))
#define clearBit(S, j) (S &= ~(1 << j))
#define endl '\n'

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long  ll;

const double pi = acos(-1);
int dx[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dy[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};
const int N = 104;
int n , m , a[N][N] , b[N][N];


bool valid(){
    for(int i = 0 ; i < n ; ++i){
        for(int j = 0 ; j < m ; ++j){
            if(b[i][j] == 0){
                for(int k = 0 ; k < n ;++k){
                    if(a[k][j] == 1)return false;
                }

                for(int k = 0 ; k < m ;++k){
                    if(a[i][k] == 1)return false;
                }
            }
            else{
                bool ok = false;
                for(int k = 0 ; k < n ;++k){
                    if(a[k][j] == 1)ok = true;
                }

                for(int k = 0 ; k < m ;++k){
                    if(a[i][k] == 1)ok = true;
                }
                if(!ok)return false;
            }
        }
    }
    return true;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    scanf("%d %d" , &n , &m);

    for(int i = 0 ;i < n ; ++i){
        for(int j = 0 ; j < m ; ++j){
            scanf("%d" , &b[i][j]);
        }
    }

    memset(a , 0 , sizeof a);

    for(int i = 0 ; i < n ; ++i){
        for(int j = 0 ; j < m ; ++j){

            bool isONE = true;
            for(int k = 0 ; k < n ; ++k){
                if(b[k][j] == 0)isONE = false;
            }

            for(int k = 0 ; k < m ; ++k){
                if(b[i][k] == 0)isONE = false;
            }

            if(isONE){
                a[i][j] = 1;
            }
        }
    }


    if(!valid()){
        puts("NO");
        return 0;
    }

    puts("YES");

    for(int i = 0 ; i < n ; ++i){
        for(int j = 0 ; j < m ; ++j){
            printf("%d " , a[i][j]);
        }
        printf("\n");
    }
}
