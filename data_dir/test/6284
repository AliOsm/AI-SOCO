#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

const long double eps = 1e-9;

#define MOD 1000000007
#define MAX 200005

typedef complex<double> point;
const double EPS = 1e-9;

int ar[] = { 1, -1, 0, 0, 1, 1, -1, -1 };
int ac[] = { 0, 0, 1, -1, 1, -1, 1, -1 };

ll pre[5005];
vector<ll> ve;
int n, m, k;

ll dp[5005][5005];

ll calc(int l, int r) {
    if(l == 0)
        return pre[r];
    return pre[r] - pre[l - 1];
}

ll solve(int i, int cnt) {
    if(i >= n) {
        if(cnt == k)
            return 0;
        return -1e15;
    }

    ll &ret = dp[i][cnt];
    if(ret + 1)
        return ret;

    ll sol1 = solve(i + 1, cnt), sol2 = -1e15;

    if(i + m - 1 < n)
        sol2 = calc(i, i + m - 1) + solve(i + m, cnt + 1);

    return ret = max(sol1, sol2);
}

int main() {
#ifdef Adel_SaadEddin_PC
    freopen("input.txt", "r", stdin);
        // freopen("output.out", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);

    memset(dp, -1, sizeof(dp));
    cin >> n >> m >> k;

    for(int i = 0; i < n; i++) {
        ll x; cin >> x;
        ve.push_back(x);
    }

    pre[0] = ve[0];
    for(int i = 1; i < n; i++)
        pre[i] = pre[i - 1] + ve[i];

    cout << solve(0, 0) << "\n";

    return 0;
}











