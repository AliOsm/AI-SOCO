#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1 << 28;
constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/
	int kkt; scanf("%d", &kkt);
	while (kkt--) {
		int n; scanf("%d", &n);
		vector<int> a(n); for (int i = 0; i < n; i++) scanf("%d", &a[i]);
		int flag = -1;
		for (int i = 0; i < n - 1; i++) if (a[i] == a[i + 1]) flag = i;
		vector<int> res(n);
		res[0] = 0;
		for (int i = 1; i < n; i++) {
			if (a[i - 1] != a[i]) {
				res[i] = (res[i - 1] + 1) % 2;
			}
			else {
				res[i] = res[i - 1];
			}
		}
		if (res[0] == res[n - 1] && a[0] != a[n - 1]) {
			if (flag == -1) {
				res[n - 1] = 2;
			}
			else {
				res[flag + 1] = (res[flag] + 1) % 2;
				for (int j = flag + 2; j < n; j++) {
					if (a[j - 1] != a[j]) {
						res[j] = (res[j - 1] + 1) % 2;
					}
					else {
						res[j] = res[j - 1];
					}
				}
			}
		}
		cout << *max_element(res.begin(), res.end())+ 1 << "\n";
		for (int i = 0; i < n; i++) {
			cout << res[i] + 1;
			if (i == n - 1) cout << "\n";
			else cout << " ";
		}
	}
	return 0;

}