#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
using namespace std;
const int N = 1e6 + 5;
const ll inf = -1e18;
const int MOD = 1e9 + 7;

stack<ll> st;
std::vector<ll> v[N];
std::vector<ll> vv[N];
std::vector<ll> connect[N], mini;
ll a[N], mn = 1e18, pt;
bool visit[N];

void dfs(ll node){
   visit[node] = 1;
   for(auto i : v[node]){
      if(!visit[i])
         dfs(i);
   }
   st.push(node);
}

void dfs1(ll node){
   visit[node] = 1;
   connect[pt].push_back(node);
   mn = min(mn, a[node]);
   for(auto i : vv[node]){
      if(!visit[i])
         dfs1(i);
   }
}

int main(){
   fast;
   ll n, ans = 1, m, x, y, ct = 0, t, money = 0;
   cin >> n;
   for(int i = 1; i <= n; i++) 
      cin >> a[i];
   cin >> m;
   for(int i = 1; i <= m; i++){
      cin >> x >> y;
      v[x].push_back(y);
      vv[y].push_back(x);
   }
   for(int i = 1; i <= n; i++){
      if(!visit[i]){
         dfs(i);
      }
   }
   memset(visit, 0, sizeof(visit));
   while(!st.empty()){
      t = st.top();
      if(!visit[t]){
         mn = 1e18;
         dfs1(t);
         mini.push_back(mn);
         pt++;         
      }
      st.pop();
   }
   for(int i = 0; i < pt; i++){
      ct = 0;
      for(auto j : connect[i]){
         if(a[j] == mini[i])
            ct++;
      }
      money += mini[i];
      ans = (ans * ct) % MOD;
   }
   cout << money << " " << ans;



   return 0;
} 
