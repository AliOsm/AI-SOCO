
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int N, K, P[1000];
int tot = 0;
int totinv = 0;
int solve(int n)
{
  if (n == K)
  {
    tot ++;
    rep1(i,N) rep1(j,N) 
    if (i < j && P[i] > P[j])
      totinv++;
    return 0;
  }
  rep1(l,N) rep1(r,N) if (l <= r)
  {
    reverse(P+l,P+r+1);
    solve(n+1);
    reverse(P+l,P+r+1);
  }
  return 0;
}
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0);
  cin >> N >> K;
  rep1(i,N) cin >> P[i];
  solve(0);
  cout << 1.0 * totinv / tot << endl;
}
