#include <bits/stdc++.h>
#define rep(i,a,b) for(int i = (a); i <= (b); i++)
#define rng(a) a.begin(), a.end()
#define ina(n,a) cin >> n; for(int i = 1; i <= n; i++) cin >> a[i]
#define sz(x) (int)(x).size()
#define se second
#define fi first
#define prev            coyhhhhhhyoc    
#define next          sdNNNmNNNNNNNmds  
#define y0           hNNNNy_yNNNNNN_sNh
#define y1          mNNNNNdtdNNNNNNtsNNm
#define yn          mNNNNNNNNy___smNNNms
#define tm            oooooosyysooooot 
#define read               tyhyt        
#define rank              ytmNmo         
#define index              yyy
#define pb push_back
#define pcnt __builtin_popcountll
#define rrep(i,a,b) for(int i = (b); i >= (a); i--)
#define rall(x,a) for(auto x : a)
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
using namespace std;

const int N = 222222;
int a[N], has[N], h1[N], h2[N];
int n;

bool checkPerm(int p) {
    rep(i, 1, p - 1) {
        if(!h1[i]) {
            return false;
        }
    }
    rep(i, 1, n - p + 1) {
        if(!h2[i]) {
            return false;
        }
    }
    return true;
}

set<pair<int, int> > solvee() {
    int p = 0;
    fill(has + 1, has + n + 1, false);
    fill(h1 + 1, h1 + n + 1, false);
    fill(h2 + 1, h2 + n + 1, false);
    rep(i, 1, n) {
        if(has[a[i]] && !p) {
            p = i;
        } else {
            has[a[i]] = true;
        }
    }
    rep(i, 1, n) {
        if(i < p) {
            h1[a[i]] = true;
        } else {
            h2[a[i]] = true;
        }
    }
    set<pair<int, int> > ans;
    if(checkPerm(p)) {
        ans.insert({p - 1, n - p + 1});
        fill(h1 + 1, h1 + n + 1, false);
        fill(h2 + 1, h2 + n + 1, false);
        p = n - p + 2;
        rep(i, 1, n) {
            if(i < p) {
                h1[a[i]] = true;
            } else {
                h2[a[i]] = true;
            }
        }
        if(checkPerm(p)) {
            ans.insert({p - 1, n - p + 1});
        }
    }
    return ans;
}

int solve() {
    ina(n, a);
    set<pair<int, int> > ans = solvee();
    reverse(a + 1, a + n + 1);
    set<pair<int, int> > anss = solvee();
    rall(p, anss) {
        ans.insert({p.se, p.fi});
    }
    cout << sz(ans) << endl;
    rall(p, ans) {
        cout << p.fi << " " << p.se << endl;
    }
    return 0;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while(t--) {
        solve();
    }
    return 0;
}
