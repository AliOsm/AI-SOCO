#include<bits/stdc++.h>
#include<string>
using namespace std;
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define ll long long
#define pb push_back
#define MOD 998244353
#define MODE 1000000006
#define INF 1000000100
const ll INFll=1ll*INF*INF;
#define mp make_pair
const long double PI=3.141592653589793238462643383279502884197169399375105820974944;
#define rep(i,n) for (int i = 0; i < n; i++)
#define remax(a,b) a = max(a,b)
#define remin(a,b) a = min(a,b)
#define all(v) v.begin(),v.end()
#define F first
#define S second
#define mii map<int,int>
#define vi vector<int>
#define vl vector<ll>
#define vli vector<pair<ll,int>>
#define llll pair<ll,ll>
#define vll vector<llll >
#define vvl vector<vector<ll> >
#define ii pair<int,int>
#define ic pair<int,char>
#define vii vector< ii >
#define vvi vector< vector<int > >
#define vvii vector< vector<ii > >
#define vlli vector<pair<llll,int>>
#define itr :: iterator it
#define WL(t) while(t --)
#define gcd(a,b) __gcd((a),(b))
#define lcm(a,b) ((a)*(b))/gcd((a),(b))
#define print(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cout << *it << ' '; cout << endl;
#define printii(arr) for (auto it = arr.begin(); it != arr.end(); ++it) cout << it->first<<' '<<it->second << endl; cout << endl;
#define debug(x) cout << x << endl;
#define debug2(x,y) cout << x << " " << y << endl;
#define debug3(x,y,z) cout << x << " " << y << " " << z << endl;
#define LC(i) 2*(i)+1
#define RC(i) 2*(i)+2
#define MID(i,j) ((i)+(j))/2
#define disparr(arr,n) for(int i=0;i<(n);i++)   cout<<arr[i]<<' ';  cout<<endl;
#define vd vector<double>
#define ld long double
#define forn(i,n)  for(int (i)=0;(i)<(n);(i)++)
#define repe(i,n)   for(int (i)=1;(i)<=(n);(i)++)
int dp[705][705][2], G[705][705];
vi a;
int isPossible(int l,int r,int side)
{
    if(l>r) return 1;
    if(dp[l][r][side]!=-1)  return dp[l][r][side];
    if(side==0)
    {
        dp[l][r][side]=0;
        for(int i=l;i<=r;i++)
            if(G[l-1][i] && isPossible(i+1,r,0) && isPossible(l,i-1,1))
            {
                dp[l][r][side]=1;
                break;
            }
    }
    else
    {
        dp[l][r][side]=0;
        for(int i=l;i<=r;i++)
            if(G[i][r+1] && isPossible(i+1,r,0) && isPossible(l,i-1,1))
            {
                dp[l][r][side]=1;
                break;
            }
    }
    return dp[l][r][side];
}
int main()
{
    fastio;
    for(int i=0;i<705;i++)
    for(int j=0;j<705;j++)
    for(int k=0;k<2;k++)
        dp[i][j][k]=-1;
    int n;
    cin>>n;
    a.resize(n+2);
    a[0]=a[n+1]=0;
    for(int i=1;i<=n;i++)
        cin>>a[i];
    for(int i=0;i<=n+1;i++)
    for(int j=i+1;j<=n+1;j++)
    {
        if(gcd(a[i],a[j])>1)
        {
            G[i][j]=1;
            G[j][i]=1;
        }
        else
            G[i][j]=G[j][i]=0;
    }
    if(isPossible(1,n,0)||isPossible(1,n,1))
        cout<<"Yes"<<endl;
    else
        cout<<"No"<<endl;
}
