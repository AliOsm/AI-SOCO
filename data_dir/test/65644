#include<bits/stdc++.h>

using namespace std;

#define    pf               printf
#define    PF(a)            printf("%d\n",(a))
#define    PF2(a,b)         printf("%d %d\n",(a), (b))
#define    PF3(a,b,c)       printf("%d %d %d\n",(a), (b), (c))
#define    PFL(a)           printf("%lld\n",(a))
#define    PFL2(a,b)        printf("%lld %lld\n",(a), (b))
#define    PFL3(a,b,c)      printf("%lld %lld %lld\n",(a), (b), (c))
#define    get(a)           cin>>a
#define    sf               scanf
#define    SF(a)            scanf("%d",&a)
#define    SF2(a,b)         scanf("%d %d",&a, &b)
#define    SF3(a,b,c)       scanf("%d %d %d",&a, &b, &c)
#define    SFL(a)           scanf("%lld",&a)
#define    SFL2(a,b)        scanf("%lld %lld",&a, &b)
#define    SFL3(a,b,c)      scanf("%lld %lld %lld",&a, &b, &c)
#define    gl(a)            getline(cin,(a))
#define    gc()             getchar()
#define    pb               push_back
#define    m_p              make_pair
#define    pc()             printf("Case %d: ",tt++)
#define    tc()             cout<<"Case "<<tt++<<": "
#define    SZ(a)            (int)(a).size()
#define    all(a)           a.begin(),a.end()
#define    FF               first
#define    SS               second
#define    MAX              2134567891
#define    MOD              1000000007
#define    MM               100005
#define    PI               2*acos(0.0)
#define    cond(n,m)        (xx>=0 && xx<(n) && yy>=0 && yy<(m))

#define    mem(a)           memset((a),0,sizeof (a))
#define    SET(a)           memset((a),-1,sizeof (a))
#define    output           freopen("output.txt","w",stdout);
#define    input            freopen("input.txt","r",stdin);
#define    I_O              ios_base::sync_with_stdio(0); cin.tie(0)
#define    rep(a)           for(int i=0;i<(a);i++)
#define    FOR(a,b)         for(int i=(a);i<(b);i++)
#define    REP(a)           for(int j=0;j<(a);j++)
#define    rev(a)           for(int i=(a);i>=0;i--)
#define    fr(i,n)          for(int (i)=0;(i)<n;(i)++)
#define    fr1(i,n,m)       for(i=n;i<m;i++)

int dx[]  = {0, 0, 1, -1};
int dy[]  = {1, -1, 0, 0};
int dx8[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dy8[] = {1, -1, -1, 0, 1, -1, 0, 1};
int kx8[] = {1, 1, 2, 2, -1, -1, -2, -2};
int ky8[] = {2, -2, 1, -1, 2, -2, 1, -1};

typedef long long ll;
typedef unsigned long long llu;
typedef priority_queue < int > PQ;
typedef pair < int , int > pi;
typedef pair < int , pi > pii;
typedef vector < int > vi;
typedef vector < ll > vl;
typedef vector < string > vs;

/*
//FUNCTION//
ll bigmod(ll a, ll b, ll c)
{
    if(b==0)return 1%c;ll x=bigmod(a,b/2,c);x=x*x%c;
    if(b%2==1)x=x*a%c;return x;
}

ll poww(ll a, ll b)
{
    if(b==0)return 1;ll x=poww(a,b/2);x=x*x;if(b%2==1)x=x*a;return x;
}

ll mod_inverse(ll a, ll mod){return bigmod(a,mod-2,mod);}

ll LCM(ll a, ll b){ return a*b/ __gcd(a,b);}

int pr = 70000;
vi primelist;
bool a[MM];
void seive( )
{
    int i,j,k=sqrt(pr);
    a[1]=1;
    primelist.pb(2);
    for(i=4;i<=pr;i+=2)a[i]=1;
    for(i=3;i<=k;i+=2)if(!a[i])for(j=i*i;j<=pr;j+=2*i)a[j]=1;
    for(i=3;i<=pr;i+=2)if(!a[i])primelist.pb(i);
}

ll fact_divs( ll n, ll p)
{
    ll cnt=0;while(p<=n){cnt += n/p;n /= p;}return cnt;
}
struct point{double x, y;};
double area( point A, point B, point C){
return 0.5*(A.x*(B.y-C.y) - A.y*(B.x-C.x) + B.x*C.y - C.x*B.y);
}

//*/
const int M=2*MM;
vi adj[M];

int sum[M*8],prop[M*8],a[M],dt,n;
int ts[M],te[M];

void updatee(int l, int r, int k, int L, int val)
{
    if(l==r)
    {
        sum[k] = val;
        return;
    }
    int mid = (l+r)/2;
    if(mid>=L)
    {
        updatee(l,mid,k*2,L,val);
    }
    else
    {
        updatee(mid+1,r,k*2+1,L,val);
    }
    sum[k] = sum[k*2] + sum[k*2+1];
}

void propagate(int l, int r, int k)
{
    if(l!=r)
    {
        prop[2*k] ^= prop[k];
        prop[2*k+1] ^= prop[k];
    }
    if(prop[k])
    {
        sum[k] = (r-l+1) - sum[k];
    }
    prop[k] = 0;
}
void update(int l, int r, int k, int L, int R)
{
    propagate(l,r,k);
   // cout<<l<<" "<<r<<" "<<k<<endl;
    if(l>R || r<L)return;
    if(l>=L && r<=R)
    {
        prop[k] ^=1;
        propagate(l,r,k);
        return;
    }
    int mid = (l+r)/2;
    update(l,mid,k*2,L,R);
    update(mid+1,r,k*2+1,L,R);
    sum[k] = sum[k*2] + sum[k*2+1];
}
ll query(int l, int r, int k, int L, int R)
{
    propagate(l,r,k);
    if(l>R || r<L)return 0;
    if(l>=L && r<=R) return sum[k];
    int mid = (l+r)/2;
    return query(l,mid,k*2,L,R) + query(mid+1,r,k*2+1,L,R);

}
void dfs(int p, int x)
{
    ts[x] = ++dt;
    updatee(1,n,1,dt,a[x]);
    int sz = adj[x].size();
    rep(sz)
    {
        int y = adj[x][i];
        if(y==p)continue;
        dfs(x,y);
    }
    te[x] = dt;
}
int main() {

    I_O;
    cin>>n;
    int p;
    for(int i=2;i<=n;i++)
    {
        cin>>p;
        adj[p].pb(i);
        adj[i].pb(p);
    }
    rep(n)cin>>a[i+1];
    dfs(0,1);
    int m,v;
    string s;
    cin>>m;
    while(m--)
    {
        cin>>s>>v;
        if(s=="get")cout<<query(1,n,1,ts[v],te[v])<<endl;
        else update(1,n,1,ts[v],te[v]);
    }

    return 0;
}

