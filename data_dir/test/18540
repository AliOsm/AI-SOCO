#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
# include <math.h>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

lli n, s;
vector<pair<lli, lli> > v;

bool ok(lli x)
{
    lli t = 0, cst = 0;
    vector<lli> type3;
    for(int i = 0 ; i < v.size(); i ++)
    {
        if(v[i].second < x)
            cst += v[i].first;
        else if(v[i].first >= x){
            cst += v[i].first ;
            t ++;
        }
        else{
            type3.push_back(v[i].first);
        }
    }

    lli till = max(0ll, (n + 1) / 2 - t);
    if(type3.size() < till)
        return false ;
    for(int i = 0; i < type3.size(); i ++)
    {
        if(i < type3.size() - till)
            cst += type3[i];
        else
            cst += x;
    }
    if(cst <= s)
        return true ;
    else
        return false ;
}

void solve()
{
    cin>>n>>s;
    v.clear() ;
    for(int i = 0; i < n; i ++)
    {
        lli l, r;
        cin>>l>>r;
        v.push_back({l, r});
    }
    sort(v.begin(), v.end());
    lli lo = 0, hi = 1e12, ans  ;
    while(lo <= hi)
    {
        lli mid = (lo + hi) / 2;
        if(ok(mid))
        {
            ans = mid;
            lo = mid + 1;
        }
        else{
            hi = mid - 1;
        }
    }
    cout<<ans;
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t;
    t = 1;
    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
