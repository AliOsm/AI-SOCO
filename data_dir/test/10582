#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cstring>
#include <string.h>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <stdlib.h>
#include <functional>
#include <locale>
#include <cmath>
#include <math.h>

using namespace std;

#define ll  long long
#define ld long double
#define OO 100000000000000000
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844
#define fast ios_base::sync_with_stdio(0);cin.tie(0);
#define _CRT_SECURE_NO_WARNINGS
int n, m, ans, cycles, vis[110];
vector<int> graph[101];
void dfs(int node, int l=1)
{
	if (vis[node] == 1)
	{
		if (l % 2 == 0)
		{
			cycles++;
			vis[node] = 2;
		}
		return;
	}
	if (vis[node] != 0)
	{
		return;
	}
	vis[node] = l;
	for (int i = 0; i < graph[node].size(); i++)
		dfs(graph[node][i], l + 1);
}
int main()
{
	cin >> n >> m;
	int x, y;
	for (int i = 0; i < m; i++)
	{
		cin >> x >> y;
		graph[x+1].push_back(y+1);
		graph[y+1].push_back(x+1);
	}
	for (int i = 1; i <n; i++)
		dfs(i);
	cycles = cycles + (n - cycles) % 2;
	cout << cycles << endl;
	return 0;
}