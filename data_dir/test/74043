#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const uli oo=1e7+10;
vector<uli>pwr;
uli gcd(uli a,uli b){ 
  if(b==0)return a;
  return gcd(b,a%b);
}
uli fxp(uli b,uli x){
  uli a=1;
  for(;x!=0;b=min(b*b,oo),x>>=1)
    if(x&1ll)a=min(a*b,oo);  
  return a;
}
int main(){
  int n,l,r;
  cin>>n>>l>>r;
  if(n==1){
    printf("%d\n",r-l+1);
    return 0;
  }
  if(n==2){
    printf("%lld\n",1ll*(r-l+1)*(r-l));
    return 0;
  }
  for(int i=0;;i++){
    uli x=fxp(i,n-1);
    if(x>r)break;
    pwr.push_back(x);
  }
  int ans=0;
  for(uli q=1;q<uli(pwr.size());q++){
    uli d=pwr[q];
    for(uli a0=d*((l+d-1)/d);a0<=r;a0+=d){
      uli k=a0/d;
      int from=lower_bound(pwr.begin(),pwr.end(),(l+k-1)/k)-pwr.begin();
      from=max(from,int(q+1));
      int to=upper_bound(pwr.begin(),pwr.end(),r/k)-pwr.begin()-1; 
      for(uli p=from;p<=to;p++){
        if(gcd(p,q)==1){
          ans++;
        }
      }
    }
  }
  ans<<=1;
  printf("%d\n",ans);
  return 0;
}
