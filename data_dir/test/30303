#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y;
    long long z;
    bool operator <(const P&a) const{
        return z>a.z;
    }
};

struct S
{
    int x,y;
};

bool as(P a,P b)
{
    return a.x>b.x;
}

long long x,y,z,mod=1000000007;
vector<int> v[1];
int i,n,m,k,a,d,b,c;
int dx[10]={0,1,0,-1,0},dy[10]={0,0,1,0,-1};
int e;
long long o[2][2][2][51];
int l[51];
int j[51];

//set<int> s;
stack<int> s;

priority_queue<P> q;
queue<S> q1;
queue<int> q2;
map<int,int> p;
P u[2010];
//char r;
string r;

long long f(int n,int m,int c,int d)
{
    if(d>40) return 1;
    if(o[n][m][c][d]>=0) return o[n][m][c][d];
    long long x=0;
    if(c||j[d]==0)
    {
        if(l[d]) x=f(n,1,c,d+1);
        else x=f(n,m,c,d+1);
    }
    if((c||j[d]==0)&&(m||l[d]))
    {
        x+=f(1,m,c,d+1);
    }
    if(n)
    {
        if(l[d]&&j[d]==0)
        x+=f(1,1,1,d+1);
        else if(l[d]) x+=f(1,1,c,d+1);
        else if(j[d]==0) x+=f(1,m,1,d+1);
        else x+=f(1,m,c,d+1);
    }
    return o[n][m][c][d]=x;
}

int main()
{
    scanf("%d",&e);
    for(int pp=1;pp<=e;pp++)
    {
        scanf("%d %d",&a,&b);
        for(int t=40,x=a,y=b;t>0;t--,x/=2,y/=2)
            l[t]=y%2,j[t]=x%2;
        memset(o,-1,sizeof(o));
        if(!a) printf("%lld\n",f(0,0,0,1)*2-1);
        else printf("%lld\n",f(0,0,0,1)*2);
    }
}

