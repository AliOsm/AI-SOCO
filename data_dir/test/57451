#include <algorithm>
#include <vector>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <cstring>
#define pb push_back
#define mp make_pair
#define pp pair<int, int>
#define ppp pair<pp, int>
#define pp4 pair<pp, pp>
#define pp3 pair<ll, pair<int, int> > 
#define fi first
#define se second
#define N  200020
#define mod 1000000007
#define inf 2000000001
#define esp 1e-9
#define BLOCK 333
#define BITNUM 555
#define BASE 311097
typedef long long ll;
const ll oo = (ll)1e18 + 1;
using namespace std;
int nt, n;
ll s[N];

int main() {
    ios::sync_with_stdio(false);
    // freopen("in.in", "r", stdin);
  	cin >> nt;
  	while (nt--) {
  		memset(s, 0, sizeof(s));
  		int n;
  		cin >> n;
  		for (int i = 1; i <= n; i++) {
  			int x;
  			cin >> x;  			
  			s[i] = s[i - 1] + x;
  		}

  		bool could = true;

  		ll x = s[n];


  		ll min_val = x;
  		for (int i = 1; i < n; i++) {
  			if (s[i] >= min_val) {
  				could = false;
  				break;
  			}
  			min_val = min(min_val, s[i] + x);
  		}

      for (int i = 1; i < n; i++)
          if (s[n] - s[i] >= x) {
              could = false;
              break;
          }
  		if (could) cout << "YES\n";
  		else
  			cout << "NO\n";
  	}


    return 0;
}
