/**
 * @author khokharnikunj8
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class C1SkyscrapersEasyVersion {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n;
        in >> n;
        vector<int> ar(n);
        for (int i = 0; i < n; i++) in >> ar[i];
        long long ans = 0;
        int index = -1;
        for (int i = 0; i < n; i++) {
            long long left = ar[i];
            long long temp = ar[i];
            for (int j = i - 1; j >= 0; j--) {
                left = min((long long) ar[j], left);
                temp += left;
            }
            long long right = ar[i];
            for (int j = i + 1; j < n; j++) {
                right = min((long long) ar[j], right);
                temp += right;
            }
            if (temp >= ans) {
                ans = temp;
                index = i;
            }
        }
        vector<int> answer(n);
        answer[index] = ar[index];
        int left = ar[index];
        for (int j = index - 1; j >= 0; j--) {
            left = min(ar[j], left);
            answer[j] = left;
        }
        int right = ar[index];
        for (int j = index + 1; j < n; j++) {
            right = min(ar[j], right);
            answer[j] = right;
        }
        for (int i : answer) out << i << " ";


    }
};


int main() {
    C1SkyscrapersEasyVersion solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
