#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll,ll> pll;
typedef pair<pll,pll> ppll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back

const int N = 2005;
const int MOD = 1e9 + 7;
char a[N][N];
vector<ll> op[N],cl[N];
vector<pll> v;
int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    int k,n;
    cin >> n >> k;
    for(int i = 0;i < n; ++i){
        for(int j = 0;j < n; ++j){
            cin >> a[i][j];
        }
    }
    ll pl = 0;
    for(ll i = 0;i < n; ++i){
        pll p = {LLONG_MAX,LLONG_MIN};
        for(ll j = 0;j < n; ++j){
            if(a[i][j] == 'B')p.fst = min(p.fst,j);
            if(a[i][j] == 'B')p.snd = max(j,p.snd);
        }
        if(p.fst == LLONG_MAX)pl++;else{
            op[p.fst].pb(i);
            cl[p.snd].pb(i);
        }
    }
    for(ll j = 0;j < n; ++j){
        pll p = {LLONG_MAX,LLONG_MIN};
        for(ll i = 0;i < n; ++i){
            if(a[i][j] == 'B')p.fst = min(p.fst,i);
            if(a[i][j] == 'B')p.snd = max(p.snd,i);
        }
        if(p.fst == LLONG_MAX)pl++,v.pb({-1,-1});else v.pb(p);
    }
    ll ans = pl;
    int x,y;
    for(int i1 = 0;i1 + k <= n; ++i1){
        x = i1 + k;
        ll tmp = 0;
        set<ll> ops;
        for(int i = 0;i < k; ++i){
            if(i1 <= v[i].fst && v[i].snd < x)tmp++;
            for(auto &it : op[i])if(i1 <= it && it < x)ops.ins(it);
            for(auto &it : cl[i])if(i1 <= it && it < x)ops.erase(it),tmp++;
        }
        ans = max(ans,pl + tmp);
        for(int j1 = 1;j1 + k <= n; ++j1){
            y = j1 + k;
            for(auto &it : op[j1 - 1]){
                if(i1 <= it && it < x)if(ops.find(it) != ops.end())ops.erase(it);else tmp--;
            }
            for(auto &it : op[y - 1])if(i1 <= it && it < x)ops.ins(it);
            for(auto &it : cl[y - 1])if(i1 <= it && it < x)if(ops.find(it) != ops.end())ops.erase(it),tmp++;
            if(i1 <= v[j1 - 1].fst && v[j1 - 1].snd < x)tmp--;
            if(i1 <= v[y - 1].fst && v[y - 1].snd < x)tmp++;
            ans = max(ans,pl + tmp);
        }
    }
    cout << ans;
    return 0;
}



