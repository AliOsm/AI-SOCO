#include<cstdio>
#include<iostream>
#include<algorithm>

#define MAXN 100001

using namespace std;



int N,K;
int height[1000];
int test_height[1000];
int final_height[1000];
int minim_changes=10001;
int changes;
bool negative_height=false;


int main()
{

    scanf("%d%d",&N,&K);

    for(int i=0; i<N; ++i)
        scanf("%d",&height[i]);



    for(int i=0; i<N; ++i)
    {
        test_height[i]=height[i];

        for(int j=i-1; j>=0 && !negative_height; --j)
        {
            test_height[j]=test_height[j+1]-K;

            if(test_height[j]<=0)
                negative_height=true;

            if(test_height[j]!=height[j])
                ++changes;
        }

        for(int j=i+1; j<N && !negative_height; ++j)
        {
            test_height[j]=test_height[j-1]+K;

            if(test_height[j]<=0)
                negative_height=true;

            if(test_height[j]!=height[j])
                ++changes;
        }


        if(!negative_height && changes<minim_changes)
        {
            minim_changes=changes;

            for(int j=0; j<N; ++j)
                final_height[j]=test_height[j];
        }

        changes=0;
        negative_height=false;
    }


    printf("%d\n",minim_changes);

    for(int i=0; i<N; ++i)
    {
        if(final_height[i]>height[i])
        {
            printf("+ %d %d\n",i+1,final_height[i]-height[i]);
        }

        else if(final_height[i]<height[i])
        {
            printf("- %d %d\n",i+1,height[i]-final_height[i]);
        }
    }



    return 0;
}
