#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=1e5+5;
const ll M=3e5+5;
const ll mod=1e9+7;
const ll INF=1e18+5;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

inline ll mul(ll a, ll b){ return (a * 1ll * b) % mod; }
inline ll sub(ll a, ll b){ ll c = a - b; if(c < 0) c += mod; return c; }
inline ll add(ll a, ll b){ ll c = a + b; if(c > mod) c -= mod; return c; }

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}

ll n,m[N];
ll totalvalid;
vector<ll> vec[N];
ll pre[N],suf[N],mark[N],yes[N],mini[N],maxi[N];

ll valid(ll idx)
{
  pre[0]=vec[idx][0];
  suf[m[idx]-1]=vec[idx][m[idx]-1];
  for(ll j=1;j<m[idx];j++){pre[j]=min(vec[idx][j],pre[j-1]);}
  for(ll j=m[idx]-2;j>=0;j--){suf[j]=max(suf[j+1],vec[idx][j]);}
  for(ll j=0;j<m[idx]-1;j++)
  {
    ll now=pre[j],nex=suf[j+1];
    //if(idx==1){trace(j,now,nex);}
    if(now<nex){return 1;}
  }
  return 0;
}

int main()
{
  fast;
  cin>>n;
  vector<ll> ser;
  for(ll i=0;i<n;i++)
  {
    cin>>m[i];
    set<ll> xp;
    //ll mini=INF,maxi=0;
    mini[i]=INF;maxi[i]=0;
    for(ll j=0;j<m[i];j++)
    {
      ll x;
      cin>>x;
      vec[i].pb(x);
      mini[i]=min(mini[i],x);
      maxi[i]=max(maxi[i],x);
      xp.insert(x);
    }
    if(valid(i))
    {
      //trace(i);
      mark[i]=1;totalvalid++;
    }
    else
    {
      ser.pb(maxi[i]);
      ll mx=xp.size();
      if(mx>1){yes[i]=1;}
    }
  }
  ll ans=(totalvalid*n);
  //trace(totalvalid);
  sort(all(ser));
  for(ll i=0;i<n;i++)
  {
    if(mark[i]){continue;}
    ans+=totalvalid;
    ll ub=upper_bound(all(ser),mini[i])-ser.begin();
    ll inc=(n-totalvalid)-ub-(maxi[i]>mini[i]);
    ans+=inc;
    ans+=yes[i];
    //trace(i,ub,n,inc,yes[i]);
  }
  cout<<ans<<endl;
}
