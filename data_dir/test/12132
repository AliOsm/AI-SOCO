
    #include<iostream>
    #include<stdio.h>
    #include <bits/stdc++.h>
    #include <math.h>
    #include <string>
    #include <sstream>
    #include <cmath>
    #define ll long long int
    #define F first
    #define S second
    #define pb push_back
    #define ld long double
    #define pll pair<long long,long long>
#define pld pair<long double,long double>
using namespace std;
ll mod=10e9+7;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
        result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
char toalt(char c)
{
    if(c>='a' && c<='z')
        c-=32;
    else
        c+=32;
    return c;
}
ll getindex(char c)
{
        ll index;
        if(c>='a' && c<='z')
            index=c-'a';
        else
            index=c-'A'+26;

        return index;
}

int main()
{
    ll n;
    cin>>n;
    vector<ll> a(n),b(n);
    vector< pair <ll,pair<ll,ll> > > vt;
    vector<vector<ll> > v(2,vector<ll> (n));
    ll i,j;
    for(i=0;i<n;i++)
    {
        cin>>a[i]>>b[i];
        vt.pb({a[i],{0,i}});
        vt.pb({b[i],{1,i}});
    }
    sort(vt.begin(),vt.end());
    for(i=0;i<n;i++)
    {
        ll x=vt[i].S.F;
        ll y=vt[i].S.S;
        //cout<<x<<" "<<y<<"***"<<endl;
        v[x][y]=1;
    }
    ll k=n/2;
    for(i=0;i<k;i++)
    {
        v[0][i]=1;
        v[1][i]=1;
    }
    ll cnter=0;
    i=k;
    j=k;
    while(i<n && j<n && cnter<n-2*k)
    {
        if(a[i]<b[j])
        {
            v[0][i]=1;
                 i+=1;
            cnter+=1;
        }
        else 
        {
            v[1][j]=1;
            j+=1;
            cnter+=1;
        }
    }
    while(i<n && cnter<n-2*k)
    {
            v[0][i]=1;
            cnter+=1;
            i+=1;
    }
    while(j<n && cnter<n-2*k)
    {
            v[1][j]=1;
            j+=1;
            cnter+=1;
    }
    for(i=0;i<2;i++)
    {
        for(j=0;j<n;j++)
            cout<<v[i][j];
        cout<<"\n";
    }

}
