#include <bits/stdc++.h>

using namespace std;

#define pb push_back

const int mx = 1e5+5;
vector<int> ep[mx];
vector<int> op[mx];
vector<int> even;
vector<int> odd;
vector<int> rodd;
vector<int> reven;

int main()
{
    int i, j , ei , oi , n , k , p , q , num;
    scanf("%d %d %d",&n,&k,&p);
    int x = p;
    q = k-p;
    for(i = 0 ; i < n ; i++)
    {
        scanf("%d",&num);
        if(num%2)odd.pb(num);
        else even.pb(num);
    }
    ei = 0;
    oi = 0;
    int l = odd.size();
    if(q > l) return !printf("NO\n");
    for(i = 0 ; i < l ; i++)
    {
        if(q)
        {
            op[oi].pb(odd[i]);
            oi++;
            q--;
        }
        else
        {
            rodd.pb(odd[i]);
        }
    }
    l = even.size();
    for(i = 0 ; i < l ; i++)
    {
        if(p)
        {
            ep[ei].pb(even[i]);
            ei++;
            p--;
        }
        else
        {
            reven.push_back(even[i]);
        }
    }
    if(p)
    {
        odd.clear();
        l = rodd.size();
        for(i = 1 ; i < l; i++)
        {
            if(p)
            {
                ep[ei].pb(rodd[i-1]);
                ep[ei].pb(rodd[i]);
                i++;
                ei++;
                p--;
                if(p == 0)i--;
            }
            else
            {
                odd.pb(rodd[i]);
            }
        }

    }
    else
    {
        odd.clear();
        odd = rodd;
    }
    if(p)return !printf("NO\n");
    l = odd.size();
    if(l%2)return !printf("NO\n");
    printf("YES\n");
    if(x)
    {
        l = odd.size();
        for(i = 0 ; i < l ; i++)
        {
            ep[0].pb(odd[i]);
        }
        l = reven.size();
        for(i = 0 ; i < l ; i++)
        {
            ep[0].pb(reven[i]);
        }
    }
    else
    {
        l = odd.size();
        for(i = 0 ; i < l ; i++)
        {
            op[0].pb(odd[i]);
        }
        l = reven.size();
        for(i = 0 ; i < l ; i++)
        {
            op[0].pb(reven[i]);
        }
    }
    for(i = 0 ; i < x ; i++)
    {
        l = ep[i].size();
        printf("%d",l);
        for(j = 0 ; j < l ; j++)
        {
            printf(" %d",ep[i][j]);
        }
        printf("\n");
    }
    x = k-x;
    for(i = 0 ; i < x ; i++)
    {
        l = op[i].size();
        printf("%d",l);
        for(j = 0 ; j < l ; j++)
        {
            printf(" %d",op[i][j]);
        }
        printf("\n");
    }
    return 0;
}
