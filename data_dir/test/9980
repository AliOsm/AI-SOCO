#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
using namespace std;

#define x first
#define y second
#define pb push_back
#define mp make_pair

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()

#define ll long long

inline int in() {
    int re = 0;
    char ch = getchar();
    while (ch < '0' || ch > '9') ch = getchar();
    while (ch >= '0' && ch <= '9') {
        re = re * 10 + ch - '0';
        ch = getchar();
    }
    return re;
}

const int N = 1e5 + 7;

__gnu_pbds::gp_hash_table<int, int> ma[N];
int mx[N];
ll su[N];

void ad(int i, int x, int n) {
    ma[i][x] += n;
    if (ma[i][x] == mx[i]) {
        su[i] += x;
    } else {
        if (ma[i][x] >  mx[i]) {
            su[i] = x;
            mx[i] = ma[i][x];
        }
    }
}

vector<int> g[N];
int c[N], wh[N], s[N];
ll ans[N];

void dfs(int v, int p=-1) {
    wh[v] = -1;
    s[v] = 1;
    for (auto u : g[v]) {
        if (u != p) {
            dfs(u, v);
            s[v] += s[u];
            if (wh[v] == -1 || s[u] > s[wh[v]]) wh[v] = u;
        }
    }
    if (wh[v] == -1) wh[v] = v;
    wh[v] = wh[wh[v]];
    ad(wh[v], c[v], 1);
    for (auto u : g[v]) {
        if (u != p && wh[u] != wh[v]) {
            for (auto e : ma[wh[u]]) ad(wh[v], e.x, e.y);
        }
    }
    ans[v] = su[wh[v]];
}

int main() {
    int n = in();
    for (int i = 0; i < n; i++) c[i] = in();
    for (int i =0; i < n - 1; i++) {
        int v = in(), u = in();
        v--;
        u--;
        g[v].pb(u);
        g[u].pb(v);
    }
    dfs(0);
    for (int i =0; i < n; i++) cout << ans[i] << " ";
    return 0;
}
