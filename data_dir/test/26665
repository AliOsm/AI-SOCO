#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
using namespace std;


int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    int n, m, parts;
    cin >> n >> m >> parts;

    vector<int> a(n);
    for (int &x : a)
        cin >> x;

    vector<int> sa = a;
    sort(sa.rbegin(), sa.rend());

    long long sum = 0;
    for (int i = 0; i < m * parts; i++)
        sum += sa[i];
    cout << sum << "\n";

    int topVal = sa[m * parts - 1];
    int semiTopCount = count(sa.begin(), sa.begin() + m * parts, topVal);
    vector<int> pivots;

    int curTops = 0, curSemiTops = 0;
    for (int i = 0; i < n; i++) {
        if (a[i] > topVal) {
            if (curTops < m) {
                curTops++;
            } else {
                curTops = 1;
                pivots.push_back(i);
            }
        } else if (a[i] == topVal) {
            if (curSemiTops == semiTopCount)
                continue;
            curSemiTops++;
            if (curTops < m) {
                curTops++;
            } else {
                curTops = 1;
                pivots.push_back(i);
            }
        }
    }

    for (int p : pivots)
        cout << p << " ";
}