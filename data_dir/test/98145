#include <stack>
#include <cmath>
#include <map>
#include <set>
#include <vector>
#include <map>
#include <numeric>
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cassert>
#include <cstring>
#include <algorithm>
#include <ctime>
#include <stack>
#include <queue>
using namespace std;
typedef long long ll;
#define REP(i,n) for(int i=0;i<(n);i++)
const double EPS=1e-7;


const int MAXN=1000001;

int sito[MAXN];
int cnt[MAXN];

int main()
{
	for(int i=2;i*i<MAXN;i++)
		if(!sito[i])
		{
			for(int j=i*i;j<MAXN;j+=i)
				sito[j]=i;
		}
	for(int i=2;i<MAXN;i++)
		if(!sito[i])
			sito[i]=i;

	int n,k;
	scanf("%d%d",&n,&k);
	vector<int> c(n);
	REP(i,n)
//		c[i]=i+1;
		scanf("%d",&c[i]);

	sort(c.begin(), c.end());
	c.erase(unique(c.begin(), c.end()),c.end());

	REP(i,n)
	{
		int cur=c[i];
		while(cur>1)
		{
			int curcnt=0;
			int p=sito[cur];
			while(cur%p==0)
			{
				cur/=p;
				curcnt++;
			}
			cnt[p]=max(cnt[p],curcnt);
		}
	}

	bool ok=true;
	{
		int cur=k;
		while(cur>1)
		{
			int curcnt=0;
			int p=sito[cur];
			while(cur%p==0)
			{
				cur/=p;
				curcnt++;
			}
			ok&=cnt[p]>=curcnt;
		}
	}

	puts(ok?"Yes":"No");

	return 0;
}
