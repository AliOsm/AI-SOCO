#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <math.h>
#include <queue>

using namespace std;
using ll = long long;

// g++ -std=c++11 -o out sol.cc && ./out < input.txt

double EPS = 1e-8;

int main() {
  int n; cin >> n; // height
  int t; cin >> t; // time
  vector<vector<double>> tree(n);
  for(int i = 0; i < n; i++) {
    tree[i] = vector<double>(i + 1, 0);
  }
  while(t--> 0) {
    tree[0][0] += 1;
    for(int level = 0; level < n - 1; level++) {
      for(int i = 0; i < tree[level].size(); i++) {
        double moar = tree[level][i] - 1;
        if (moar <= EPS) continue;
        double half = moar / 2;
        tree[level + 1][i] += half;
        tree[level + 1][i + 1] += half;
        tree[level][i] = 1;
      }
    }
  }
  int res = 0;
  for(auto & vec : tree) for(auto & val : vec) if (val >= 1 - EPS) res++;
  cout << res << endl;
}
