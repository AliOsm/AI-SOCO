#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll mx,sum;
const int N=2e5+5;
int c[N],big[N],sz[N],cnt[N];
ll ans[N];
vector<int> adj[N];
inline void dfs(int u,int p)
{
    int mx=-1;
    sz[u]=1;
    for(auto v:adj[u])
        if(v!=p)
        {
            dfs(v,u);
            sz[u]+=sz[v];
            if(sz[v]>mx)
                mx=sz[v],big[u]=v;
        }
}
inline void increase(int x)
{
    cnt[x]++;
    if(cnt[x]>mx)
        sum=x,mx=cnt[x];
    else if(cnt[x]==mx)
        sum+=x;
}
inline void add(int u,int p,int f)
{
    if(f==1) increase(c[u]);
    else cnt[c[u]]--;
    for(auto v:adj[u])
        if(v!=p)
            add(v,u,f);
}
inline void solve(int u,int p,bool keep)
{
    for(auto v:adj[u])
        if(v!=p&&v!=big[u])
            solve(v,u,0);
    if(big[u]!=-1)
        solve(big[u],u,1);
    increase(c[u]);
    for(auto v:adj[u])
        if(v!=p&&v!=big[u])
            add(v,u,1);
    ans[u]=sum;
    if(keep==0)
    {
        add(u,p,-1);
        mx=-1;
        sum=0;
    }
}
int main()
{
    int n;
    memset(big,-1,sizeof big);
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%d",&c[i]);
    for(int i=1;i<n;i++)
    {
        int u,v;
        scanf("%d %d",&u,&v);
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs(1,1);
    solve(1,1,1);
    for(int i=1;i<=n;i++)
        printf("%lld ",ans[i]);
    return 0;
}
