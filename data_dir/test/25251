#include<bits/stdc++.h>
#define pb push_back
using namespace std;

typedef long long ll;

const int N = 1000*100 + 10;
const ll MOD = 1000*1000*1000LL + 7;

vector <int> adj1[N] , adj2[N] , cmp[N] , vc;

int a[N] , c;
bool mark1[N] , mark2[N];

void DFS1(int v){
     
     mark1[v] = 1;

     for(int u : adj1[v]){
        if(!mark1[u])
              DFS1(u);

        adj2[u].pb(v);      
     }
     
     vc.pb(v);
     return;
}

void DFS2(int v){
     
     cmp[c].pb(v);
     mark2[v] = 1;

     for(int u : adj2[v])
        if(!mark2[u])
            DFS2(u);

     adj2[v].clear();
     return;
}

int main(){

    ios_base::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
    int n , m , u , v;
    ll ans1 = 0 , ans2 = 1; 
    cin >> n;

    for(int i = 0 ; i < n ; i++)
        cin >> a[i];
    
    cin >> m;

    for(int i = 0 ; i < m ; i++){
        cin >> u >> v;
        adj1[--u].pb(--v);
    }
    
    for(int i = 0 ; i < n ; i++){
        if(!mark1[i]){
            
            DFS1(i);
            for(int j = (int) vc.size() - 1 ; j >= 0 ; j--){
                int u = vc[j];
                if(!mark2[u])
                    DFS2(u) , c++;
            }

            vc.clear();
        }
    }    

    for(int i = 0 ; i < c ; i++){
        ll minn = MOD , num = 0;
        for(int j : cmp[i])
             minn = min(minn , (ll) a[j]);
        
        for(int j : cmp[i])
             if(a[j] == minn)
                  num++;
         
        ans1 += minn , ans2 *= num , ans2 %= MOD; 
    }

    cout << ans1 << ' ' << ans2 << endl;
    return 0;
}
