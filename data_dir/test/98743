//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define int ll

#define F first
#define S second
#define _sz(x) (int)x.size()

using namespace std ;
using ll = long long ;
using ld = long double ;
using pii = pair <int , int> ;

const int N = 2e5 + 20 , mod = 998244353 ;
int n , p[N] , dp[N][2] ;
vector <int> g[N] ;

inline int pw (int a , int b) {
	int res = 1 ;

	while (b) {
		if (b & 1) res = 1ll * res * a % mod ;
		a = 1ll * a * a % mod ;
		b >>= 1 ;
	}

	return res ;
}

void dfs (int v) {
	dp[v][0] = dp[v][1] = 1 ;

	if (!_sz(g[v])) return ;

	for (int u : g[v]) {
		dfs(u) ;

		dp[v][0] = 1ll * dp[v][0] * dp[u][0] % mod ;
		dp[v][1] = 1ll * dp[v][1] * (dp[u][0] + dp[u][1]) % mod ;
	}

	dp[v][1] = (dp[v][1] + mod - dp[v][0]) % mod ;

	int val = dp[v][1] ;

	for (int u : g[v]) {
		val = (val + mod - 1ll * dp[v][0] * pw(dp[u][0] , mod - 2) % mod * dp[u][1] % mod) % mod ;	
	}

	dp[v][0] = (dp[v][0] + val) % mod ;

	return ;
}

int32_t main(){
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

	cin >> n ;
	for (int i = 1 ; i < n ; i ++) {
		cin >> p[i] ;
		p[i] -- ;
		g[p[i]].push_back(i) ;
	}

	dfs(0) ;

	cout << dp[0][0] << '\n' ;
}
