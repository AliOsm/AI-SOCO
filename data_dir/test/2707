#include <cstdio>
#include <vector>
#include <unordered_map>
#include <algorithm>
using namespace std;

typedef pair<int,int> PII;
const int INF = 1000000007;

short at[4000][4000];
short dp[4000][4000];
short pt[4000][4000];

int locate(int x, const vector<int>& u){
    return lower_bound(u.begin(),u.end(),x)-u.begin();
}

int n,x[2000],r[2000],v[2000];

void output(int i, int j){
    if(i==j) return;
    int t=pt[i][j]-1;
    if(at[i][j]) printf("%d ",at[i][j]);
    if(~t){
        output(i,v[t]);
        output(v[t],j);
    }else{
        output(i,j-1);
    }
}

int main(){
    scanf("%d",&n);
    vector<int> u,e[4000];
    for(int i=0;i<n;i++){
        scanf("%d%d",x+i,r+i);
        u.push_back(x[i]+r[i]);
        u.push_back(x[i]-r[i]);
    }
    sort(u.begin(),u.end());
    u.erase(unique(u.begin(),u.end()),u.end());
    for(int i=0;i<n;i++){
        int p=locate(x[i]-r[i],u);
        int t=locate(x[i]+r[i],u);
        e[t].push_back(i);
        at[v[i]=p][t]=i+1;
    }
    int m=u.size();
    for(int l=1;l<m;l++){
        for(int i=0;i+l<m;i++){
            int j=i+l;
            dp[i][j]=dp[i][j-1];
            pt[i][j]=0;
            for(int t:e[j]){
                int k=v[t],w=dp[i][k]+dp[k][j];
                if(k>=i && w>dp[i][j]){
                    dp[i][j]=w;
                    pt[i][j]=t+1;
                }
            }
            if(at[i][j]) dp[i][j]++;
        }
    }
    printf("%d\n",dp[0][m-1]);
    output(0,m-1);
}
