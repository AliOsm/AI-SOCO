//Caution to the wind,complete freedom
#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
#define MOD 1000000007
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define irr acos(-1.0)
#define MAX 1000003
#define MAXA 100003
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
int a[100001];
vector<int> v[100001];
ll cap[100001];
ll val[100001];
ll INF=(1ll<<60);
bool no=0;
ll prod(ll x,ll y)
{
    if(x==0||y==0)return 0;
    if(x>INF/y)
    {
        no=1;
        return INF;
    }
    return x*y;
}
ll lcm(ll x,ll y)
{
    if(x==0||y==0)return x+y;
    ll g=__gcd(x,y);
    return prod(x/g,y);
}
void dfs(int u,int p)
{
    int deg=0;
    for(int j=0;j<v[u].size();j++)
    {
        int to=v[u][j];
        if(to!=p)
        {
            deg++;
            dfs(to,u);
        }
    }
    if(deg==0)
    {
        cap[u]=a[u];
        val[u]=1;
        return ;
    }
    ll tmp=0;
    for(int j=0;j<v[u].size();j++)
    {
        int to=v[u][j];
        if(to!=p)
            tmp=lcm(tmp,val[to]);
    }
    ll tmp2=INF;
    for(int j=0;j<v[u].size();j++)
    {
        int to=v[u][j];
        if(to!=p)tmp2=min(tmp2,cap[to]/tmp*tmp);
    }
    cap[u]=prod(tmp2,deg);
    val[u]=prod(tmp,deg);
}
int main()
{
    int n,i,j;
    cin>>n;
    for(j=1;j<=n;j++)
        {cin>>a[j];}
    for(j=0;j<n-1;j++)
    {
        int x,y;
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    dfs(1,0);
    ll ans=0;
    for(j=1;j<=n;j++)ans+=a[j];
    if(!no)cout<<ans-cap[1];
    else
        cout<<ans;
  return 0;
}
