#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>

using namespace std;

typedef size_t index_t;
typedef vector< index_t > index_vector;

typedef vector< char > bool_vector;

#define forin(i,n) for (index_t (i) = 0, __size = (n); (i) < __size; ++(i))
#define all(x) (x).begin(), (x).end()

#define zero_bit(x) ((x) & 1)
#define is_even(x) (zero_bit(x) == 0)
#define is_odd(x) (zero_bit(x) == 1)

#define space ' '
#define nl '\n'
	
int read_int()
{
	int value;
	cin >> value;
	
	return value;
}

template < class T > 
void println(T value)
{
	cout << value << nl;
}

template < class T >
void print_vector(vector< T > values)
{
	forin(i, values.size())
		cout << values[i] << space;
		
	cout << nl;
}

int main()
{
	size_t n = read_int();
	
	index_vector students;
	
	if (n <= 2)
		students.push_back(0);
	else if (n == 3)
	{
		students.push_back(0);
		students.push_back(2);
	}
	else if (n == 4)
	{
		students.push_back(2);
		students.push_back(0);
		students.push_back(3);
		students.push_back(1);
	}
	else 
	{
		index_t shift = (n + 1) / 2;
		forin(i, n)
			if (is_even(i))
				students.push_back(i / 2);
			else
				students.push_back(i / 2 + shift);
	}
	
	forin(i, students.size())
		students[i]++;
	
	println(students.size());
	print_vector(students);
	
	return 0;
}