#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define y1 yy1
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x)
{
    if(x == 0)
        return "0";
    string res = "";
    while(x > 0)
    {
        res += ((x % 10) + '0');
        x /= 10;
    }
    reverse(res.begin(), res.end());
    return res;
}

ll stoim(string str)
{
    ll res = 0;
    int p = 0;
    if(str[0] == '-')
        p++;
    for(int i = p; i < str.length(); i++)
    {
        res *= 10;
        res += (str[i] - '0');
    }
    return res;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const ld eps = 1e-7;
const int maxn = 1.1e6 + 1146;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 7;

ll binpow(ll x, ll st)
{
    if(st == 0)
        return 1;
    if(st & 1)
        return binpow(x, st - 1) * x % mod;
    ll res = binpow(x, st >> 1);
    return res * res % mod;
}

bool used[4];
vector<int> a[20];
int cnt[20];
int f[4];
vector<int> g[4];

void dfs(int v)
{
    used[v] = 1;
    for(int to = 0; to < 4; to++)
    {
        if(used[to])
            continue;
        if(cnt[v * 4 + to] || cnt[to * 4 + v])
            dfs(to);
    }
}

void solve()
{
    int n;
    cin >> n;
    for(int i = 0; i < n; i++)
    {
        int c1, v, c2;
        cin >> c1 >> v >> c2;
        a[(c1 - 1) * 4 + (c2 - 1)].pb(v);
    }
    int ans = 0;
    for(int i = 0; i < 16; i++)
        sort(a[i].begin(), a[i].end());
    for(int i = 0; i < (1 << 16); i++)
    {
        int sum = 0;
        for(int j = 0; j < 16; j++)
        {
            cnt[j] = a[j].size();
            if(i & (1 << j))
                cnt[j]--;
            if(cnt[j] < 0)
                sum = -1;
        }
        if(sum == -1)
            continue;
        f[0] = f[1] = f[2] = f[3] = 0;
        for(int j = 0; j < 16; j++)
        {
            int a = j >> 2, b = j & 3;
            f[a] += cnt[j];
            f[b] += cnt[j];
        }
        int cntSt = (f[0] & 1) + (f[1] & 1) + (f[2] & 1) + (f[3] & 1);
        if(cntSt > 2)
            continue;
        used[0] = used[1] = used[2] = used[3] = 0;
        dfs(0);
        if(used[0] + used[1] + used[2] + used[3] != 4)
        {

            for(int j = 0; j < 16; j++)
            {
                if(used[j >> 2])
                    for(int k = (i >> j) & 1; k < a[j].size(); k++)
                        sum += a[j][k];
            }
            ans = max(ans, sum);
            sum = 0;
            vector<int> qw;
            for(int j = 0; j < 4; j++)
                if(!used[j])
                    qw.pb(j);
            for(int t = 0; t < qw.size(); t++)
            {
                int x = qw[t];
                used[0] = used[1] = used[2] = used[3] = 0;
                dfs(x);
                for(int j = 0; j < 16; j++)
                {
                    if(used[j >> 2])
                        for(int k = (i >> j) & 1; k < a[j].size(); k++)
                            sum += a[j][k];
                }
                ans = max(ans, sum);
                sum = 0;
                vector<int> r;
                for(int x : qw)
                    if(!used[x])
                        r.pb(x);
                qw = r;
                t = -1;
            }
            continue;
        }
        for(int j = 0; j < 16; j++)
            for(int k = (i >> j) & 1; k < a[j].size(); k++)
                sum += a[j][k];
        ans = max(ans, sum);
    }
    cout << ans;
}

int main()
{
    srand(time(0));
//    srand(228);
    fast_io;
    cin.tie(0);
    cout.tie(0);
   // input;
   // output;
   // freopen("sortland.in", "r", stdin);
   // freopen("sortland.out", "w", stdout);
//    for(int i = 0; i < 100000; i++)
//        brut();
//     int t;
//     cin >> t;
//    scanf("%d", &t);
//     int cnt = 1;
//     while(t--){
//        cout << "Case #" << cnt << ": ";
        solve();
//        brut();
//         cout << "\n";
//        puts("");
//        cnt++;
//     }
    return 0;
}
