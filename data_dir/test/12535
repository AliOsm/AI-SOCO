#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 10;
const long long INF = 1e18;

int a[N][3];
long long dp[N][4];

long long sum(int x, int l, int r){
	long long ret = 0;
	for (int i = min(l, r); i <= max(l, r); i++) ret += a[x][i];
	return ret;
}

int main(){
	int n;
	scanf("%d",&n);
	for (int j = 0; j <= 2; j++){
		for (int i = 1; i <= n; i++){
			scanf("%d",&a[i][j]);
		}
	}
	for (int i = 0; i <= n; i++){
		for (int j = 0; j <= 3; j++){
			dp[i][j] = -INF;
		}
	}
	dp[0][0] = 0;
	for (int i = 1; i <= n; i++){
		for (int j = 0; j <= 2; j++){
			for (int k = 0; k <= 2; k++){
				dp[i][j] = max(dp[i][j], dp[i - 1][k] + sum(i, j, k));
			}
		}
		dp[i][0] = max(dp[i][0], dp[i - 1][3] + sum(i, 0, 2));
		dp[i][2] = max(dp[i][2], dp[i - 1][3] + sum(i, 0, 2));
		dp[i][3] = max(dp[i - 1][0], dp[i - 1][2]) + sum(i, 0, 2);
	}
	printf("%I64d\n", dp[n][2]);
	return 0;
}