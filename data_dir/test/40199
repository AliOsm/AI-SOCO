 /// Bismillahir-Rahmanir-Rahim
#include <bits/stdc++.h>
#define        ll                              long long int
#define        FOR(x,y,z)                      for(int x=y;x<z;x++)
#define        pii                             pair<int,int>
#define        pll                             pair<ll,ll>
#define        CLR(a)                          memset(a,0,sizeof(a))
#define        SET(a)                          memset(a,-1,sizeof(a))
#define        N                               5005
#define        M                               1000000007
#define        pi                              acos(-1.0)
#define        ff                              first
#define        ss                              second
#define        pb                              push_back
#define        inf                             (int)(1.5e9)
#define        eps                             1e-9
#define        ALL(x)                          x.begin(),x.end()

using namespace std;
int dx[]={0,0,1,-1,-1,-1,1,1};
int dy[]={1,-1,0,0,-1,1,1,-1};
template < class T> inline T biton(T n,T pos){return n |((T)1<<pos);}
template < class T> inline T bitoff(T n,T pos){return n & ~((T)1<<pos);}
template < class T> inline T ison(T n,T pos){return (bool)(n & ((T)1<<pos));}
template < class T> inline T gcd(T a, T b){while(b){a%=b;swap(a,b);}return a;}
template <typename T> string NumberToString ( T Number ) { ostringstream ss; ss << Number; return ss.str(); }
inline int nxt(){int aaa;scanf("%d",&aaa);return aaa;}

inline double dxt(){double aaa;scanf("%lf",&aaa);return aaa;}
template <class T> inline T bigmod(T p,T e,T m){T ret = 1;
for(; e > 0; e >>= 1){
    if(e & 1) ret = (ret * p) % m;p = (p * p) % m;
} return (T)ret;}
#ifdef sayed
     #define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template < typename Arg1 >
    void __f(const char* name, Arg1&& arg1){
        cerr << name << " is " << arg1 << std::endl;
    }
    template < typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names+1, ',');
        cerr.write(names, comma - names) << " is " << arg1 <<" | ";
        __f(comma+1, args...);
    }
#else
    #define debug(...)
#endif
///******************************************START******************************************
int ar[N];
int dp[N][N][2];
int n;
int go(int pos,int cnt,int f) {
    if(pos<0) {
        if(cnt==0) return 0;
        return inf;
    }
    if(cnt<0) return inf;
    int &res = dp[pos][cnt][f];
    if(res!=-1) return res;
    res = inf;
    int ne;
    if(f==1) {
        ne = min(ar[pos+1],ar[pos+2]-1);
        ne = max(ne,0);
    } else {
        ne = ar[pos+1];
    }

    if(pos==0) {
        res= min(res,go(pos-1,cnt,0));
        int dan = ar[pos]-1;
        dan = max(0,ne-dan);
        res=min(res,go(pos-2,cnt-1,1)+dan);
    } else {
        res= min(res,go(pos-1,cnt,0));
        int bam = ar[pos]-1;
        bam = max(0,ar[pos-1]-bam);
        int dan = ar[pos]-1;
        dan = max(0,ne-dan);
       // if(pos==n-1) debug(dan);
        res=min(res,go(pos-2,cnt-1,1)+bam+dan);
    }
    return res;
}
int main(){
    #ifdef sayed
   // freopen("out.txt","w",stdout);
   // freopen("in.txt","r",stdin);
    #endif
    //ios_base::sync_with_stdio(false);
    //cin.tie(0);
    //debug(INT_MAX);
    n= nxt();
    for(int i =0;i<n;i++) {
        ar[i] = nxt();
    }
    SET(dp);
    vector<int> ans;
    for(int i = 1;i<=(n+1)/2;i++) {
        printf("%d ",min(go(n-1,i,0),go(n-1,i,1)));

    }
    cout<<endl;
    return 0;


}
