#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define x first
#define y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 300000 + 100;

const int oo = 1e9;

int n , m, k,cost[N];
vector< int > p[N];
vector< pii > g[N];

string res = "";
int cnt = 0;
void gen(int idx){
	if(idx == n+1){
		cnt++;
		printf("%s\n",res.c_str());
		if(cnt==k){
			exit(0);
		}
	}
	for (int i = 0; i < p[idx].size(); ++i){
		int e = p[idx][i];
		res[e] = '1';
		gen(idx+1);
		res[e] = '0';
	}
}
int main() {
	memset(cost,-1,sizeof cost);
	cin >> n >> m >> k;
	for(int i = 0 ; i < m ; ++i)
		res += '0';
	for (int i = 0; i < m; ++i){
		int u , v;
		scanf("%d%d",&u,&v);
		g[u].push_back(make_pair(v,i));
		g[v].push_back(make_pair(u,i));
	}
	queue< int > q;
	q.push(1);
	cost[1] = 0;
	while(q.size()){
		int src = q.front();
		q.pop();
		for (int i = 0; i < g[src].size(); ++i){
			int v = g[src][i].first;
			int idx = g[src][i].second;
			if(cost[v]==-1){
				cost[v] = cost[src]+1;
				q.push(v);
			}
			if(cost[v] == cost[src]+1){
				p[v].push_back(idx);
			}
		}
	}
	ll op = 1;
	for(int i = 1; i <= n ; ++i){
		if(p[i].size()==0)continue;
		op *= p[i].size();
		if(op > k)break;
	}
	printf("%lld\n",min(op,1ll*k));
	gen(2);
	return 0;
}