/*"Everything in the universe is balanced. Every disappointment
   you face in life will be balanced by something good for you!
                Keep going, never give up."						*/
#include "bits/stdc++.h"
using namespace std;

#define ll long long int
#define ld double 
#define rep(i,a,b) for(int i=a;i<=b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define deb cerr << "Line no." << __LINE__
#define nl '\n'
#define pb push_back
#define all(a) a.begin(),a.end()
#define P pair<ll,ll> 
#define F first
#define S second
const ll p_mod=9999999999999983;
const long double pi = 3.14159265358979323;
const ll N=1e6+9;
const ll mod=1e9+7;
typedef double f80;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
int rand(int l, int r){uniform_int_distribution<int> uid(l, r); return uid(rng); }
ll powerk(ll x, ll y){if(y==0)return 1;if(y==1)return x;if(y&1) return ((powerk((x*x)%mod, y/2)%mod)*x)%mod;else return powerk((x*x)%mod,y/2)%mod;}

ll n,a[N],h[N];
ll dp[N];

ll find(ll xx)
{

	if(xx>100000)return 0;
	if(dp[xx]!=-1)return dp[xx];
	ll x=-N, y=-N;
	x= xx*h[xx] + find(xx+2);
	y= find(xx+1);
	return dp[xx]= max(x,y);
}

void solve()
{    
	cin>>n;
	rep(i,1,n)cin>>a[i],h[a[i]]++;

	memset(dp,-1,sizeof dp);
	cout<<find(0);

}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    clock_t clk = clock();
    ll t=1;
    //pre();
    //cin>>t;
    while(t--)
       solve();
   cerr << endl << setprecision(10) << fixed << (double)(clock() - clk) / CLOCKS_PER_SEC;
	
}