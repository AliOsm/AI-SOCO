#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


const int INF=2e9;
int n,x,y,dq;
bool flag;
struct Node
{
	int x,y;
	char s[10];
}f[500005];
int main()

{
	scanf("%d",&n);
	flag=false;
	scanf("%d%d",&x,&y);
	for (int i=1;i<=n;++i) scanf("%s%d%d",&f[i].s,&f[i].x,&f[i].y);
	dq=0;
	for (int i=1;i<=n;++i)	if (f[i].y==y&&f[i].x<x)
	{
		if (dq==0) dq=i;
		else if (f[i].x>f[dq].x) dq=i;
	}	
	if (dq!=0&&f[dq].s[0]!='B') flag=true;
	dq=0;
	for (int i=1;i<=n;++i)	if (f[i].y==y&&f[i].x>x)
	{
		if (dq==0) dq=i;
		else if (f[i].x<f[dq].x) dq=i;
	}	
	if (dq!=0&&f[dq].s[0]!='B') flag=true;
	dq=0;
	for (int i=1;i<=n;++i)	if (f[i].x==x&&f[i].y<y)
	{
		if (dq==0) dq=i;
		else if (f[i].y>f[dq].y) dq=i;
	}	
	if (dq!=0&&f[dq].s[0]!='B') flag=true;
	dq=0;
	for (int i=1;i<=n;++i)	if (f[i].x==x&&f[i].y>y)
	{
		if (dq==0) dq=i;
		else if (f[i].y<f[dq].y) dq=i;
	}	
	if (dq!=0&&f[dq].s[0]!='B') flag=true;
	dq=0;
	for (int i=1;i<=n;++i) if (f[i].x<x&&f[i].y<y&&x-f[i].x==y-f[i].y)
	{
		if (dq==0) dq=i;
		else if (f[i].y>f[dq].y) dq=i;
	}
	if (dq!=0&&f[dq].s[0]!='R') flag=true;
	dq=0;
	for (int i=1;i<=n;++i) if (f[i].x>x&&f[i].y<y&&-x+f[i].x==y-f[i].y)
	{
		if (dq==0) dq=i;
		else if (f[i].y>f[dq].y) dq=i;
	}
	if (dq!=0&&f[dq].s[0]!='R') flag=true;
	dq=0;
	for (int i=1;i<=n;++i) if (f[i].x<x&&f[i].y>y&&x-f[i].x==-y+f[i].y)
	{
		if (dq==0) dq=i;
		else if (f[i].y<f[dq].y) dq=i;
	}
	if (dq!=0&&f[dq].s[0]!='R') flag=true;
	dq=0;
	for (int i=1;i<=n;++i) if (f[i].x>x&&f[i].y>y&&-x+f[i].x==-y+f[i].y)
	{
		if (dq==0) dq=i;
		else if (f[i].y<f[dq].y) dq=i;
	}
	if (dq!=0&&f[dq].s[0]!='R') flag=true;
	if (flag) printf("YES\n");
	else printf("NO\n");
	return 0;

}