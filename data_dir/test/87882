#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define SZ(x) ((int)((x).size()))
#define PB(x) push_back(x)
#define INF (0x3f3f3f3f)
#define MEMSET(x,v) memset(x,v,sizeof(x))

typedef long long LL;
typedef pair<int, int> PII; typedef pair<PII, int> PII2;

#define MAXN (200005)

int in[MAXN][2];
int N;

int main() {
    vector<int> v1;
    vector<int> v2;
    map<int, int> back;
    map<int, int> front;
    scanf("%d", &N);
    int a1 = 0;
    int a2 = 0;
    for (int i = 1; i <= N; i++) {
        scanf("%d %d", &in[i][0], &in[i][1]);
        back[in[i][1]] = i;
        front[in[i][0]] = i;
        if (in[i][0] == 0) a1 = i;
        if (in[i][1] == 0) a2 = i;
    }
    if (N % 2 == 0) {
        while (in[a1][1]) {
            v1.PB(in[a1][1]);
            if (front.find(in[a1][1]) == front.end()) break;
            a1 = front[in[a1][1]];
        }
        while (in[a2][0]) {
            v2.PB(in[a2][0]);
            if (back.find(in[a2][0]) == back.end()) break;
            a2 = back[in[a2][0]];
        }

        int c = 0;
        for (int i = SZ(v2) - 1; i >= 0; i--) {
            printf("%d ", v2[i]);
            if (c < SZ(v1)) printf("%d ", v1[c++]);
        }
    } else {
        for (int i = 1; i <= N; i++) {
            if (back[in[i][0]] == 0) {
                a1 = i;
            }
        }
        int x = in[a1][0];
        while (in[a1][1]) {
            v1.PB(in[a1][1]);
            if (front.find(in[a1][1]) == front.end()) break;
            a1 = front[in[a1][1]];
        }
        while (in[a2][0]) {
            v2.PB(in[a2][0]);
            if (back.find(in[a2][0]) == back.end()) break;
            a2 = back[in[a2][0]];
        }

        int c = 0;
        cout << x << " ";
        for (int i = SZ(v2) - 1; i >= 0; i--) {
            printf("%d ", v2[i]);
            if (c < SZ(v1)) printf("%d ", v1[c++]);
        }
    }
    
    
    return 0;
}
