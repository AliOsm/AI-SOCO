//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define vi vector<int>

const int maxn=(int)(1e7+7),max_size=(int)(1e6+6);
const ll mod=(ll)(998244353);
int a[max_size];
int yes[maxn],pos1[maxn],pos2[maxn];

int main()
{
    int n;scanf("%d",&n);

    fill(pos1,pos1+maxn,-1);fill(pos2,pos2+maxn,-1);

    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);

        yes[a[i]]++;

        if(pos1[a[i]]==-1)
        {
            pos1[a[i]]=i;
        }
        else
        {
            pos2[a[i]]=i;
        }
    }

    ll res=LONG_LONG_MAX;

    int ans1=-1,ans2=-1;

    for(int i=1;i<maxn;i++)
    {
        if(yes[i]>=2)
        {
            res=i;

            ans1=pos1[i];ans2=pos2[i];

            break;
        }
    }

 //   cout<<res<<endl;

    for(int i=maxn-1;i>=1;i--)
    {
        int ctr=(yes[i]?1:2);

        vector< pii > vec;

        if(yes[i])
        {
            vec.pb({i,pos1[i]});
        }

        for(int j=i+i;j<maxn && ctr>0;j+=i)
        {
            if(yes[j])
            {
                vec.pb({j,pos1[j]});

                ctr--;
            }
        }

        if(vec.size()<2)
        {
            continue;
        }

        ll curr=(vec[0].first*1ll*vec[1].first)/(i*1ll);

        if(curr<res)
        {
            res=curr;

            ans1=vec[0].second;ans2=vec[1].second;
        }
    }

    int val1=min(ans1,ans2),val2=max(ans1,ans2);

    printf("%d %d\n",(val1+1),(val2+1));

    // printf("%lld\n",res);

    return 0;
}
