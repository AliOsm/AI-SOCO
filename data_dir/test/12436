/*
ID: xildar91
PROG: humble
LANG: C++11
*/
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
        else
            cout <<"\n";
    }
}
template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}

double s_triangle(double x1,double y1,double x2,double y2,double x3,double y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
bool overflow(ll a,ll b)
{
    if(a*b/b!=a)
        return true;
    return false;
}
#define x1 gfgs
#define y1 asd
bool debug=1;
const int maxn=1e5+20;
ll mod=1e9+7;
void solve()
{
    int n,m,k;
    cin >> n >> k >> m;
    ll a[n];
    for(int i=0;i<n;i++)
    {
        cin >> a[i];
    }
    ll dp[m+1][n+1];
    ll pre[n];
    pre[0]=a[0];
    for(int i=1;i<n;i++)
    {
        pre[i]=pre[i-1]+a[i];
    }

    for(int i=0;i<m;i++)
    {
        for(int e=0;e<n;e++)
        {
            dp[i][e]=0;
        }
    }

    for(int i=0;i<n;i++)
    {
        if(i)
            dp[0][i]=dp[0][i-1];
        ll x=pre[i];
        if(i-k>=0)
        {
            x=x-pre[i-k];
        }
        dp[0][i]=max(dp[0][i],x);
       // dout<<i<<": " << dp[0][i]<<" "<<x<<" "<<pre[i]<<" "<<a[i]<<endl;

    }
    for(int j=1;j<m;j++)
    {
        for(int e=0;e<n;e++)
        {
            if(e)
                dp[j][e]=dp[j][e-1];
            ll x=pre[e];
            if(e-k>=0)
            {
                x=x-pre[e-k];
                x=x+dp[j-1][e-k];
            }
            dp[j][e]=max(dp[j][e],x);

        }
    }
    ll ans=0;
    for(int i=0;i<n;i++)
    {
        ans=max(dp[m-1][i],ans);
    }
    cout << ans;
}
#define FILE "humble"
int main()
{

       // freopen("laundro_matt.txt","r",stdin);
      //  freopen("output.txt","w",stdout);

       //  freopen(FILE".in","r",stdin);
      //  freopen(FILE".out","w",stdout);
       if(!debug)
       {
            ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }
        int t=1;
        while(t--)
            solve();
        return 0;
}
