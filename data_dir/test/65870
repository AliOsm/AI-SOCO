#include<bits/stdc++.h>
using namespace std;

#define FOR(i,ii,iii)for(int i=ii;i<iii;i++)
#define RFOR(i, init, end) for(int i = end-1; i >= init; i--)
#define OUT(a)cout<<a<<endl
#define ALL(s) s.begin(),s.end()
#define PB push_back
#define ANS(a) OUT(res.size());for(auto i:a)cout<<i<<" ";ENDL
#define PRINT(a,init,end) FOR(i,init,end) cout<<a[i]<<" ";ENDL
#define PRINTV(a) for(auto i:a)cout<<i<<" ";ENDL
#define F first
#define S second

const int N=2e5+15;
int n,k,best;
string s,t,res;
int a[N];

#define oper max
const int NEUT=0;
struct STree { // [cerrado-abierto)
	vector<int> st;int n;
	STree(int n): st(4*n+5,NEUT), n(n) {}
	void init(int k, int s, int e, int *a){
		if(s+1==e){st[k]=a[s];return;}
		int m=(s+e)/2;
		init(2*k,s,m,a);init(2*k+1,m,e,a);
		st[k]=oper(st[2*k],st[2*k+1]);
	}
	void upd(int k, int s, int e, int p, int v){
		if(s+1==e){st[k]=v;return;}
		int m=(s+e)/2;
		if(p<m)upd(2*k,s,m,p,v);
		else upd(2*k+1,m,e,p,v);
		st[k]=oper(st[2*k],st[2*k+1]);
	}
	int query(int k, int s, int e, int a, int b){
		if(s>=b||e<=a)return NEUT;
		if(s>=a&&e<=b)return st[k];
		int m=(s+e)/2;
		return oper(query(2*k,s,m,a,b),query(2*k+1,m,e,a,b));
	}
	void init(int *a){init(1,0,n,a);}
	void upd(int p, int v){upd(1,0,n,p,v);}
	int query(int a, int b){return query(1,0,n,a,b);}
}; // usage: STree st(n);st.init(x);st.upd(i,v);st.query(s,e);

int main() {
  ios::sync_with_stdio(false);
  cin>>n;
  STree st(n);
  FOR(i,0,n) {
    cin>>a[i];
    int p=upper_bound(a,a+i,(a[i]-1)/2)-a;
    int ping=st.query(p,i)+1;
    //cout<<a[i]<<":"<<ping<<" "<<p<<endl;
    st.upd(i,ping);
  }
  OUT(st.query(0,n+1));
}