#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll int
#define ld long double
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1;
string s ;
ll check( ll n , ll m ){
    ll cur = 0 ;
    char arr[n][m] ;
    rep( i , 0 , n ){
        rep( j , 0 , m ){
            arr[i][j]=s[cur];
            //cout << arr[i][j] << ' ';
            cur++;
        }
        //cout << "\n" ;
    }
    rep( j , 0 , m ){
        bool isGood = true ;
        rep( i , 0 , n )
            isGood&=(arr[i][j]=='X');
        if(isGood)return true;
    }
    return false;
}
void solve()
{
    cin >> s ;
    vector<ll> ans ;
    if(check(1,12))
        ans.pb(1);
    if(check(2,6))
        ans.pb(2);
    if(check(3,4))
        ans.pb(3);
    if(check(4,3))
        ans.pb(4);
    if(check(6,2))
        ans.pb(6);
    if(check(12,1))
        ans.pb(12);
    cout << sz(ans) << ' ';
    for(auto it : ans )
        cout << it << "x" << 12/it << " ";
    cout << "\n";
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
