

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>
#include <complex>

//#include <bits/stdc++.h>

using namespace std;


int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n , pages;
    cin >> n >> pages;
    vector < long long > cups(n);
    long long total = 0;
    for(int i = 0;i < n ; i++){
        cin >> cups[i];
        total += cups[i];
    }
    sort(cups.rbegin() , cups.rend());
    for(int i = 1; i < n ; i++){
        cups[i] += cups[i - 1];
    }
    int ans = -1;
    int low = 1;
    int high = n;
    while(low <= high){
        int i = (low + high) / 2;
//        cout << low << " " << high << " " << i << endl;
        bool ok = false;
        for(int c = i ; c <= n ; c++){
            long long d = c / i;
            long long rem = c % i;
            total = cups[c - 1];
            long long m = i - rem;
            total -= ((d * (d - 1)) / 2) * m;
            total -= ((d * (d + 1)) / 2) * rem;
            if(total >= pages){
                ok = true;
                if(ans == -1){
                    ans = i;
                }
                ans = min(ans , i);
                break;
            }
        }
        if(ok){
            high = i - 1;
        }else{
            low = i + 1;
        }
    }
    cout << ans << endl;
    return 0;
}
