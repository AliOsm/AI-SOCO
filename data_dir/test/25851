#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z } }

ll fact[19], freq[10];

vi vec;

ll solve(int idx, ll z, ll no)
{
	if (idx == 10)
	{
		ll ret = no * fact[z + no - 1];
		for (auto i : vec)
			ret /= fact[i];
		return ret;
	}

	if (freq[idx])
	{
		ll ret = 0;
		erep(i, 1, freq[idx])
		{
			if (!idx)
			{
				vec.push_back(i);
				ret += solve(idx + 1, z + i, no);
				vec.pop_back();
			}
			else
			{
				vec.push_back(i);
				ret += solve(idx + 1, z, no + i);
				vec.pop_back();
			}
		}
		return ret;
	}
	else
		return solve(idx + 1, z, no);
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	string x;
	cin >> x;
	fact[0] = 1;
	erep(i, 1, 18)
		fact[i] = fact[i - 1] * i * 1ll;
	rep(i, 0, sz(x))
		freq[x[i] - '0']++;

	cout << solve(0, 0, 0);

	return 0;
}
