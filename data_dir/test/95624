#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 100000;
int n, cnt[N];
vector<pair<int, bool> > e[N];
vector<int> ret;
bool vis[N];

int build(int u) {
   vis[u] = 1;
   for (int i = 0; i < int(e[u].size()); ++i) {
      int v = e[u][i].first;
      if (vis[v])
         continue;
      cnt[u] += (e[u][i].second + build(v));
   }
   return cnt[u];
}

void dfs(int u) {
   vis[u] = 1;
   if (cnt[u] == 0) {
      ret.push_back(u);
      return;
   }
   for (int i = 0; i < int(e[u].size()); ++i) {
      int v = e[u][i].first;
      if (vis[v] || cnt[v] + e[u][i].second == 0)
         continue;
      dfs(v);
   }
}

int main() {
#ifndef ONLINE_JUDGE
   freopen("input.txt", "rt", stdin);
#endif
   fastInOut();
   int x, y, t;
   cin >> n;
   for (int i = 0; i < n - 1; ++i) {
      cin >> x >> y >> t, --x, --y, --t;
      e[x].push_back(make_pair(y, t));
      e[y].push_back(make_pair(x, t));
   }
   build(0), memset(vis, 0, sizeof vis), dfs(0);
   if (ret[0] == 0)
      ret.pop_back();
   int sz = ret.size();
   cout << sz << "\n";
   for (int i = 0; i < sz; ++i)
      cout << ret[i] + 1 << " \n"[i == sz - 1];
   return 0;
}

void fastInOut() {
   ios_base::sync_with_stdio(0);
   cin.tie(NULL), cout.tie(NULL);
}
