#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
const int N=3005;
ll n,m,maxx,me,tot,p[N],c[N];
vector<priority_queue<pair<ll,int>> >v(N);
set<pair<ll,int> >s;
priority_queue<ll>myvec;
int main()
{
    yalla;
    cin>>n>>m;
    for(int i=0; i<n; i++)
    {
        cin>>p[i]>>c[i];
        v[p[i]].push({-c[i],i});
        if(p[i]!=1)
        {
            maxx=max(maxx,(ll)v[p[i]].size());
            s.insert({c[i],i});
        }
    }
    myvec.push(0);
    me=v[1].size();
    if(me>maxx)cout<<0,exit(0);
    ///
    while(me<=maxx)
    {
        ll tmp1=0,tmp2=0,cnt=0,flag=0,me2=me;

        for(int i=2; i<=m; i++)
            if(v[i].size()==maxx)
                tmp1+=-v[i].top().F,cnt++,flag=-v[i].top().F;
        if(me==maxx)
        {
            auto it2=s.begin();
            ll fi=(*it2).F;
            if(cnt==1&&tot-myvec.top()+flag<tot+fi)
                tot=tot-myvec.top()+flag;
            else tot+=fi;
            break;
        }
        else if(me+1==maxx)
        {
            auto it2=s.begin();
            ll fi=(*it2).F;
            it2++;
            ll se=(*it2).F;
            if(cnt==1)tot+=min(flag,fi+se);
            else tot+=fi+se;

            break;
        }
        ///
        int c=cnt+1,a=0;
        auto it=s.begin();
        while(it!=s.end())
        {
            tmp2+=(*it).F;
            c--,me2++,a++;
            if(!c||me2>maxx)break;
            it++;
        }
        ///
        if(tmp1<tmp2)
        {
            for(int i=2; i<=m; i++)
                if(v[i].size()==maxx)
                {
                    s.erase({-v[i].top().F,v[i].top().S});
                    myvec.push(v[i].top().F);
                    v[i].pop();
                }
            tot+=tmp1,me+=cnt,maxx--;
        }
        else
        {
            auto it2=s.begin();
            for(int i=0; i<a; i++)
            {
                int idx=(*it2).S;
                myvec.push((*it2).F);

                v[p[idx]].pop();
                it2++;
                s.erase(s.begin());
            }
            tot+=tmp2,me+=a;
        }

    }
    ///
    cout<<tot<<endl;
    re 0;
}