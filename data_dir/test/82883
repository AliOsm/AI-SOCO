#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll ; 
typedef long double ld ;
typedef pair<ll , ll> pll ;

const ll N = 2e5 + 30 , Mod = 1e9 + 7 ;
const ll SQ = 330 ;

int main () {
    ios::sync_with_stdio(0), cin.tie(0) ;
    ll n ;
    cin >> n ;
    string t ;
    cin >> t ;
    vector<pll> v ;
    
    ll g= 0  ,s = 0 ;
    for (int i = 0 ; i < n ; i ++) {
    	if (t[i] == 'G') g ++ ;
    	else s ++ ;
	}
	ll ans = 0 ;
	ll cnt = 0 ;
	ll cur = 0 ;
	for (int i = 0 ; i < n ; i ++) {
		if (t[i] == 'S') {
			if (!i) continue ;
			if (cnt)v.pb({i - 1 , cnt}) ;
			cnt = 0 ;
		}
		else {
			cnt ++ ; 
			ans = max(ans , cnt) ;

		}
	}
	if (t[n - 1] == 'G') v.pb({n - 1,  cnt}) ;
	if (v.size() <= 1) return cout << g , 0  ;
	for (int i = 0 ; i < v.size() ; i ++) {
		if (g > v[i].S) ans = max(ans , v[i].S + 1) ;
		else ans = max(ans ,v[i].S) ;
	}
	/*
	10
	GSSGSSSGSS
	
	*/
	for (int i = 0;  i < v.size()  ; i ++) {
		//cout << v[i].F << ' ' << v[i].S << endl;
	}
    for (int i = 0 ; i < v.size() - 1 ; i ++) {
    	ll x = v[i + 1].F - v[i + 1].S  + 1;
    	ll y = v[i].F ;
    	if (x - y > 2) continue ;
    	ans = max(ans , v[i + 1].S + v[i].S ) ;
    	if (g > v[i + 1].S + v[i].S) ans = max(ans , v[i + 1].S +v[i].S + 1 ) ;
	}
	ans = min(ans ,g);
	cout << ans ;
    return (0) ;
}
