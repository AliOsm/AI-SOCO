#include <bits/stdc++.h>
#define ll long long int
#define mod 1000000007
#define pii pair<int, int>
#define fr(n) for (int i = 0; i < n; i++)
#define fr1(n) for (int i = 1; i <= n; i++)
using namespace std;

int n, t[1050006], lb[1050006], rb[1050006];

int gcd(int x, int y) {
    while (y) {
        int z = x % y;
        x = y;
        y = z;
    }
    return x;
}

int que(int l, int r) {
    int x = 0;
    for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
        if (l & 1) x = gcd(x, t[l++]);
        if (r & 1) x = gcd(x, t[--r]);
    }
    return x;
}

int main() {
    ios::sync_with_stdio(false);
    cin >> n;
    int n0 = 1, n1 = n;
    while (n0 < n) n0 <<= 1; n = n0;
    fr(n1) cin >> t[i + n];
    fr(n) lb[i + n] = i, rb[i + n] = i + 1;
    for (int i = n - 1; i; i--) t[i] = gcd(t[i << 1], t[i << 1 | 1]), lb[i] = lb[i << 1], rb[i] = rb[i << 1 | 1];
    //fr(n + n) cout << lb[i] << ' ' << rb[i] << '\n';
    int q, o, l, r, x;
    cin >> q;
    while (q--) {
        cin >> o >> l >> r; l--;
        if (o == 1) {
            bool y = 1;
            cin >> x;
            while (l + 1 < r) {
                int m = (l + r) >> 1;
                int ql = que(l, m), qr = que(m, r);
                //cout << l << ' ' << r << ' ' << ql << ' ' << qr << '\n';
                if (ql % x && qr % x) {y = 0; break;}
                if (ql % x == 0 && qr % x == 0) break;
                if (ql % x) r = m;
                else l = m;
            }
            if (y) cout << "YES\n";
            else cout << "NO\n";
        } else {
            int l0 = l;
            for (l += n; l; l >>= 1) {
                t[l] = gcd(r, gcd(que(lb[l], l0), que(l0 + 1, rb[l])));
            }
        }
    }
}