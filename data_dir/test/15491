#include <bits/stdc++.h>


#define pb push_back
#define Mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define Sort(x) sort(all(x))
#define sz(x) x.size()
#define debug(x)  cerr << #x << " = " << x << endl
#define endl '\n'
#define sync ios::sync_with_stdio(0), cin.tie(0)
#define esp ' ' 



using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef pair<ll , ll> pll ;
typedef vector<ll> vll ;
typedef string str ;


const ll MOD = 1e9 + 7 ;
const ll MAXN = 2e5 + 30 ;
const ll MINN = 1e3 + 20 ;
const ll MOD2 = 998244353ll ;
const ll INF = 74592896151251 ;
const ld EPS = 1e-9 ;


ll gcd(ll a, ll b) { return (b ? gcd(b, a % b) : a); }
ll mod(ll n) { while(n < 0) n += MOD; return n % MOD; }
ll pow(ll a, ll b) { return (!b ? 1 : pow(a, b / 2) * pow(a, b / 2) * (b % 2 ? a : 1)) ;}

vector<pair<ll ,pll>> E ;
ll Par[MAXN];

inline ll Find (ll v) {
    if (v == Par[v]) 
        return v ;
    return (Par[v] = Find(Par[v]) ) ;
}

inline void Union (ll u , ll v) {
    
    v = Find (v) ;
    u = Find (u) ;
    if (rand() % 2) swap(u , v) ;
    if (u == v) return ;
    Par[v] = u ;
}
bool check(ll v,  ll u) {
    v = Find(v) ;
    u = Find(u) ;
    return (v == u) ;
}
int Main() {
   ll n ; cin >> n ;
   ll m ;
   for (int i = 1 ; i<= n; i ++) Par[i] = i ;
   cin >> m ;
   for (int i = 0 ; i < m ; i ++) {
       ll v , u , w ;
       cin >> v >> u >> w ;
       E.pb({w , {v , u}}) ;
   }
   sort(all(E)) ;
   ll ans = 0 ;
   ll i = 0 ; 
   while (i < m ) {
       ll j = i ;
       while (j + 1 < m and E[j].F == E[j + 1].F) j ++ ;
       ll x = 0 ;
       bool f= true ;
       ll s = 0;
       for (int k = i ; k <= j ; k ++) {
           if (! check(E[k].S.F, E[k].S.S)) s ++ ;
           //Union(E[k].S.S, E[k].S.F) ;
           f = false ;
       }
       for (int k = i ; k <= j ; k ++) {
           Union(E[k].S.S, E[k].S.F) ;
           f = false ;
       }
       if (!f or 1) ans += s ;
       i = j + 1 ;
       
   }
   cout << ans - (n - 1) ;
   
   
}

int main () {
    sync ;
    int q ;
    q = 1 ;
    while (q --) 
        Main() ;
	return 0;
}
