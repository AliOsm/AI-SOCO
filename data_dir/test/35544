#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#define _CRT_DISABLE_PERFCRIT_LOCKS

#include <iostream>
#include <cstdio>
#include <string>
#include <stdlib.h>
#include <set>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <math.h>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>	
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>

using namespace std;

//#define int long long
#define ll long long
#define ull unsigned long long
typedef int hv;
#define double long double
template <typename T>
void __read(T& a) { cin >> a; }
template <typename T, typename ... Args>
void __read(T& a, Args& ... args) { cin >> a; __read(args...); }
#define make(t, ...) t __VA_ARGS__; __read(__VA_ARGS__)
#define makev(a, n) VI a(n); FOR(n) cin >> a[i];
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
#define VI vector<int>
#define VVI vector<vector<int>>
#define PII pair<int, int>
#define PPII pair<PII, int>
#define M7 1000000007ll
#define M9 1000000009ll
#define MFFT 998244353ll 
#define outv(a) for(auto& x: a) cout << x << ' ';
mt19937 rnd(static_cast<unsigned>(chrono::steady_clock::now().time_since_epoch().count()));
#define random_shuffle(...) shuffle(__VA_ARGS__, rnd)


void Solve() {
	make(int, q);
	while (q--) {
		make(int, n);
		makev(a, n);
		//n = unique(ALL(a)) - a.begin();
		//a.resize(n);
		VI b = a;
		sort(ALL(b));
		b.resize(unique(ALL(b)) - b.begin());
		for (int i = 0; i < n; ++i) {
			a[i] = lower_bound(ALL(b), a[i]) - b.begin();
		}
		int bsz = b.size();
		vector<bool> was(bsz);
		VI lpos(bsz), rpos(bsz);
		for (int i = 0; i < n; ++i) {
			if (!was[a[i]]) {
				was[a[i]] = 1;
				lpos[a[i]] = i;
			}
		}
		was.assign(bsz, 0);
		for (int i = n - 1; i >= 0; --i) {
			if (!was[a[i]]) {
				was[a[i]] = 1;
				rpos[a[i]] = i;
			}
		}

		VI sf(bsz);
		int pos = lpos[bsz - 1], cnt = 1;
		for (int i = bsz - 2; i >= 0; --i) {
			sf[i] = sf[i + 1];
			if (rpos[i] > pos) {
				sf[i] += cnt;
				pos = lpos[i];
				cnt = 1;
			}
			else {
				pos = min(pos, lpos[i]);
				cnt++;
			}
		}

		VI pr(bsz);
		vector<bool> good(bsz);
		int mx = 0;
		for (int i = 0; i < n; ++i) {
			if (rpos[a[i]] == i) {
				if (mx <= a[i]) good[a[i]] = true;
			}
			mx = max(mx, a[i]);
		}
		pr[0] = 1 - good[0];
		for (int i = 1; i < bsz; ++i) {
			pr[i] = good[i] ? pr[i - 1] : i + 1;
		}
		int ans = min(pr[bsz - 1], sf[0]);
		for (int i = 0; i + 1 < bsz; ++i) {
			ans = min(ans, pr[i] + sf[i + 1]);
		}
		cout << ans << '\n';
	}
}

signed main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#ifdef _SUPER_DEFINE
	if (!freopen("input.txt", "r", stdin) || !freopen("output.txt", "w", stdout)) return 0;
	if (sizeof(int) != 8) cout << "NO LONG!!!\n";
	bool w_out = 0;
	while (!cin.eof()) {
		if (w_out) FOR(2) cout << endl;
		else w_out = 1;
		auto t = chrono::steady_clock::now();
		Solve();
		//cout << '\n' << chrono::duration_cast<chrono::milliseconds>(chrono::steady_clock::now() - t).count() << " mc";
		fflush(stdout);
		string s = "_";
		getline(cin, s);
		do getline(cin, s);
		while (!cin.eof() && !s.empty());
		while (isspace(cin.peek())) cin.get();
	}
#else
	Solve();
#endif
	return 0;
}