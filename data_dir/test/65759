#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())

#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);

int ara[100005];

int main()
{
    FastRead
    int t;
    cin >> t;
    while(t--){
        MEM(ara,0);
        LL n;
        cin >> n;
        vector<pair<int,int>>vec;
        string str = "1";

        LL sq = sqrt(n);
        LL threes = 0;
        for(int i = 2; ;i++){
            LL cnt = (i * (i - 1))/2;
            if(cnt <= sq){
                threes = i;
            }else{
                break;
            }
        }
        LL total = threes;
        LL pairs = (threes * (threes - 1))/2;
        LL seven = n/pairs;

        ara[threes] = seven;

        n = n - pairs * seven;

        while(n > 0){
            threes--;
            LL pairs = (threes * (threes - 1))/2;
            LL seven = n/pairs;
            if(seven == 0)continue;
            ara[threes] = seven;
            n = n - pairs * seven;
        }
        for(int i = 1;i <= total;i++){
            str += "3";
            for(int j = 1;j <= ara[i];j++)str += "7";
        }
        cout << str << "\n";
        assert(str.size() <= 1e5);
//        cout << str.size() << endl;
    }

}
