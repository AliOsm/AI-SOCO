#include <bits/stdc++.h>
#define FOR(x,n) for(int x = 0; x < n; x++)
#define ALL(a) (a).begin(), (a).end()
#define SZ(a) ((int)(a).size())
#define FIN ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
using namespace std;
typedef long long ll;

const int NUM = 5 * 1e6 + 1;
const int MXN = 3 * 1e5 + 1;
int N, M, B[MXN] = {}, C[MXN] = {};
pair<vector<int>, int> A[MXN] = {};
vector<int> edges[MXN] = {};
set<int> s[MXN] = {};

inline bool can(int u){
  for(int v : edges[u])
    if(B[v] != B[u])
      s[u].insert(B[v]);
  return SZ(s[u]) <= 2;
}

inline void solve(int u, int x=NUM, int b=0){
  if(C[B[u]] == -1){
    C[B[u]] = x;
    for(int v : edges[u])
      if(C[B[v]] == -1){
        if(b == 0){
          if(*s[u].begin() == B[v])
            solve(v, x-1, -1);
          else
            solve(v, x+1, 1);
        } else {
          solve(v, x+b, b);
        }
      }
  }
}

int main() { FIN;
  memset(C,-1,sizeof(C));
  cin >> N >> M;
  FOR(x,N) A[x+1] = {{x+1}, x+1};
  FOR(x,M){
    int u, v; cin >> u >> v;
    edges[u].push_back(v); edges[v].push_back(u);
    A[u].first.push_back(v);
    A[v].first.push_back(u);
  }
  FOR(x,N) sort(ALL(A[x+1].first));
  sort(A+1,A+N+1);

  B[1] = 0;
  int tmpcnt = 1;
  FOR(x,N-1){
    if(A[x+1].first == A[x+2].first)
      B[A[x+2].second] = B[A[x+1].second];
    else
      B[A[x+2].second] = tmpcnt++;
  }

  bool flag = 1;
  FOR(x,N) flag &= can(x+1);

  if(!flag){
    cout << "NO\n";
  } else {
    cout << "YES\n";
    solve(1);
    for(int x = 1; x <= N; x++)
      cout << C[B[x]] << " \n"[x==N];
  }
}
