#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<string.h>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)
#define eprintf(...) fprintf(stderr, __VA_ARGS__)

template<class T> inline void amin(T &x, const T &y) { if (y<x) x=y; }
template<class T> inline void amax(T &x, const T &y) { if (x<y) x=y; }
template<class Iter> void rprintf(const char *fmt, Iter begin, Iter end) {
    for (bool sp=0; begin!=end; ++begin) { if (sp) putchar(' '); else sp = true; printf(fmt, *begin); }
    putchar('\n');
}

int N;
LL S;
int A[100111];
LL B[100111];

pair<int, LL> calc(int m) {
    REP (i, N) B[i] = A[i] + (LL)(i+1) * m;
    sort(B, B+N);
    int cnt = 0;
    LL sm = 0;
    REP (i, N) {
	if (cnt == m) break;
	if (sm + B[i] <= S) {
	    sm += B[i];
	    cnt++;
	}
    }
    return make_pair(cnt, sm);
}

void MAIN() {
    scanf("%d%lld", &N, &S);
    REP (i, N) scanf("%d", A+i);

    int lo = 0, hi = N+1;
    while (hi - lo > 1) {
	int m = (hi + lo) / 2;
	pair<int, LL> p = calc(m);

	if (p.first >= m) {
	    lo = m;
	} else {
	    hi = m;
	}
    }

    pair<int, LL> p = calc(lo);
    printf("%d %lld\n", p.first, p.second);
}

int main() {
    int TC = 1;
//    scanf("%d", &TC);
    REP (tc, TC) MAIN();
    return 0;
}

