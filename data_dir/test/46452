#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

vector<vector<int> > g;

int l[100100];
int d[100100];
int cnt[211];

int main() {
#ifdef wRabbits
	freopen("in.txt", "r", stdin);
	//freopen("in.txt", "w", stdout);
	double beg = clock();
#endif

	int n;
	scanf("%d",&n);
	FOR(i,0,n)
		scanf("%d",&l[i]);
	FOR(i,0,n)
		scanf("%d",&d[i]);
	int res=1000000000;
	g.resize(100010);
	FOR(i,0,n)
	{
		cnt[d[i]]++;
		g[l[i]].push_back(d[i]);
	}
	int sum = 0;
	for (int i=100001; i>0; --i)
	{
		if (g[i].size() == 0)
			continue;
		int canHave=g[i].size() - 1;
		FOR(j,0,g[i].size())
			cnt[g[i][j]]--;
		int le=n-g[i].size();
		int del=MAX(0,le-canHave);
		int now=0;
		FOR(j,1,201)
		{
			int val=MIN(del,cnt[j]);
			now+=val*j;
			del-=val;
		}
		res=MIN(res,sum + now);
		n-=g[i].size();
		FOR(j,0,g[i].size())
			sum += g[i][j];
	}
	cout<<res<<endl;

#ifdef wRabbits
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n",
			(end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}
