#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <numeric>
#include <map>
#include <cassert>
#include <cmath>
#include <iostream>
#define REP(i,n) for(int i=0;i<(n);i++)
using namespace std;

const int INF=1000000000;

struct person
{
	int pos, l, r;
	bool operator<(const person& p)
	{
		return l+r<p.l+p.r;
	}
	bool equal(const person& p) const
	{
		return l+r==p.l+p.r;
	}
};

int main()
{
	int n;
	scanf("%d",&n);
	vector<person> p(n);
	vector<int> res(n);
	for(int i=0;i<n;i++)
		scanf("%d",&p[i].l);
	for(int i=0;i<n;i++)
		scanf("%d",&p[i].r);
	for(int i=0;i<n;i++)
		p[i].pos=i;
	sort(p.rbegin(), p.rend());

	int val=1;

	for(int i=0;i<n;)
	{
		int j=i;
		while(j<n && p[j].equal(p[i]))
			j++;
		while(i<j)
		{
			res[p[i].pos]=val;
			i++;
		}
		val++;
	}

	bool ok=true;
	for(int i=0;i<n;i++)
	{
		int c[2]={};
		for(int j=0;j<n;j++)
			if(res[j]>res[p[i].pos])
				c[j<p[i].pos?0:1]++;
		ok&=(p[i].l==c[0] && p[i].r==c[1]);
	}
	if(ok)
	{
		printf("YES\n");
		for(int i=0;i<n;i++)
			printf("%d ",res[i]);
		puts("");
	}
	else
	{
		printf("NO\n");
	}
}
