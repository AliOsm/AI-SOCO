#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0;
#define ll long long
#define ld long double

ll n, k, pow2[63];
string bin;
vector <ll> res;

bool can(ll x){
    int ret = 0;
    for(int i = 0 ; i < (int)(bin.size()) ; i++){
        if(bin[i] == '0') continue;
        if(i < x) ret++;
        else{
            if(pow2[abs(i-x)] > k) return 0;
            ret += pow2[abs(i-x)];
        }
    }
    return ret <= k;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    pow2[0] = 1;
    for(int i = 1 ; i < 63 ; i++)
        pow2[i] = pow2[i-1]*2;
    cin >> n >> k;
    ll nn = n;
    while(nn){
        bin += nn%2+'0';
        nn /= 2;
    }
    ll l = -62, r = 62;
    while(l <= r){
        ll mid = (l+r)/2;
        if(can(mid)) r = mid-1;
        else l = mid+1;
    }
    r++;
    for(int i = 0 ; i < bin.size() ; i++) if(bin[i] == '1'){
        if(i < r)
            res.push_back(i);
        else
            for(int j = 0 ; j < pow2[abs(i-r)] ; j++)
                res.push_back(r);
    }
    sort(res.rbegin(), res.rend());
    while((int)(res.size()) < k){
        int bac = res.back();
        res.pop_back();
        res.push_back(bac-1);
        res.push_back(bac-1);
    }
    if((int)(res.size()) > k) finish("No");
    cout << "Yes" << endl;
    for(ll i : res) cout << i << " ";
    cout << endl;
    return 0;
}
