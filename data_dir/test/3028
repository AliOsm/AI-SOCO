#include <bits/stdc++.h>
using namespace std;
#define mod 998244353
const int N = 200010;
int n , sum[N][4] ;
char s[N];
string cur = "ULDR";
int x , y , moves = 0;
int curx,  cury;
int main() {
	scanf("%d",&n);
	scanf("%s",s);
	for(int i=0;i<n;i++){
		if(s[i] == 'U') cury++; else if(s[i] == 'D') cury--; else if(s[i] == 'R') curx++; else curx--;
		for(int j=0;j<4;j++){
			sum[i + 1][j] = sum[i][j] + (s[i] == cur[j]);
		}
	}
	scanf("%d%d",&x,&y);
	if(curx == x && cury == y){
		cout << 0 << endl;
		return 0;
	}
	moves = abs(x) + abs(y);
	if(moves > n || (moves & 1) != (n & 1)){
		puts("-1");
		return 0;
	}
	int ans = n , low , high , mid , res ;
	for(int i=1;i<=n;i++){
		low = i , high = n , res = 2 * n;
		while(high >= low){
			mid = ((low + high) >> 1);
			curx = cury = 0;
			curx += sum[i-1][3] + sum[n][3] - sum[mid][3];
			curx -= sum[i-1][1] + sum[n][1] - sum[mid][1];
			cury += sum[i-1][0] + sum[n][0] - sum[mid][0];
			cury -= sum[i-1][2] + sum[n][2] - sum[mid][2];
			moves = abs(x - curx) + abs(y - cury);
			if(moves <= mid - i + 1){
				res = mid;
				high = mid - 1;
			}
			else
				low = mid + 1;
		}

		ans = min(ans,res - i + 1);
	}

	cout << ans << endl;
	return 0;
}