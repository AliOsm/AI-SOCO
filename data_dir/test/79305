#include <bits/stdc++.h>
using namespace std;
#define oo 1000000000
#define mod 1000000007
const int N = 300010;
int n,  frq[N] , val[N] , arr[N] , num = 0;

deque < pair<int,int> > q;

inline void add(int idx,int last){
    if(arr[idx] + last - 1 < n && arr[idx] + last - 1 >= 0) val[arr[idx] + last - 1]++;
}

inline void remove(int idx,int last){
    if(arr[idx] + last - 1 < n && arr[idx] + last - 1 >= 0) val[arr[idx] + last - 1]--;
}

int main(){
    scanf("%d",&n);
    int j = 0;
    long long ans = 0;
    for(int i = 0 ;i < n;i++){
        scanf("%d",&arr[i]);
        frq[arr[i]]++;
        if(frq[arr[i]] == 2) num++;
        while(j < i && num > 0){
            frq[arr[j]]--;
            if(frq[arr[j]] == 1) num--;
            j++;
        }
        int tmp = -1;
        while((int)q.size() > 0 && q.back().second <= j){
            tmp = q.back().first;
            remove(q.back().first , q.back().second);
            q.pop_back();
        }
        if(tmp != -1 && j <= tmp){
            q.push_back(make_pair(tmp , j));
            add(tmp , j);
        }
        tmp = i;
        while((int)q.size() > 0){
            if(arr[i] > arr[q.front().first]){
                tmp = q.front().second;
                remove(q.front().first,q.front().second);
                q.pop_front();
            }
            else
                break;
        }
        add(i , tmp);
        q.push_front(make_pair(i , tmp));
        ans += val[i];
    }
    cout << ans << endl;
    return 0;
}