#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b>a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }
const int N = 3030, M = 0, Z = 1e9 + 7, inf = 0x3f3f3f3f;
template <class T1, class T2>inline void gadd(T1 &a, T2 b) { a = (a + b) % Z; }
int a[N], b[N];
LL f[N][N];
int n;
LL solve()
{
	for (int i = 1; i <= n; ++i)
	{
		LL pre = 1e18;
		for (int j = 1; j <= n; ++j)
		{
			gmin(pre, f[i - 1][j]);
			f[i][j] = pre + abs(a[i] - b[j]);
		}
	}
	LL ans = 1e18;
	for (int i = 1; i <= n; ++i)gmin(ans, f[n][i]);
	return ans;
}
int main()
{
	while (~scanf("%d", &n))
	{
		for (int i = 1; i <= n; ++i)scanf("%d", &a[i]), a[i] -= i, b[i] = a[i];
		sort(b + 1, b + n + 1);
		LL ans = solve();
		printf("%lld\n", ans);
	}
	return 0;
}