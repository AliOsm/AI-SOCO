#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int infint = 1e9;
const ll inf = 1e18;
const int MAXN = (int)1e5 + 7;
int n, m, w[MAXN], p[MAXN], t;
set<ll> S;
void first_turn()
{	
	while(!S.empty())
	{
		//my turn
		ll mx = -1;
		for (int i = 1; i <= 2 * n; i++)
			if(S.find(i) != S.end() && (mx == -1 || w[i] > w[mx]) && p[i] != 0)
				mx = i;
		if(mx == -1)
		{
			for (int i = 1; i <= 2 * n; i++)
				if(S.find(i) != S.end() && (mx == -1 || w[i] > w[mx]))
					mx = i;
		}
		cout << mx << endl;
		S.erase(mx);
		if(S.size() == 0)
			return;
		ll T;
		cin >> T;
		S.erase(T);
	}
	return;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> n >> m;
	for (int i = 1; i <= 2 * n; i++)
		cin >> w[i];
	for (int i = 1; i <= m; i++)
	{
		int a, b;
		cin >> a >> b;
		p[a] = b, p[b] = a;
	}
	cin >> t;
	for (int i = 1; i <= 2 * n; i++)
			S.insert(i);
	if(t == 1)
	{
		first_turn();
		return 0;
	}
	else
	{
		while(!S.empty())
		{
			ll x;
			cin >> x;
			S.erase(x);
			if(p[x] != 0)
			{
				cout << p[x] << endl;
				S.erase(p[x]);
			}
			else
				break;
		}
		first_turn();
	}
}
