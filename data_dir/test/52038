#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<long long, long long> pll;
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define ub upper_bound
#define lb lower_bound
#define all(x) (x).begin(), (x).end()
#define dbg(x) cout << " -- dbg: " << (x) << "\n"
#define FastIO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
const long long INF = 2000000000LL;
const long double EPS = 1e-9;

const int N = 200000+7;
vector<ll>arr;

int main()
{
    int n;
    cin >> n;
    ll ans = -1e17;
    int mi = 0;
    ll sum = 0;
    for(int i = 0; i<n; i++){
        ll p; cin >> p; arr.pb(p);
        sum += abs(p);
        if(p < 0)mi++;
    }
    if(n == 1){
        cout << arr[0] << endl;
        return 0;
    }
    if(mi > 0 and mi < n){
        cout << sum << endl;
        return 0;
    }
    if(mi == n){
        for(int i = 0; i<n; i++){
            if( i == 0 and (arr[i]-arr[i+1])>=0 and (i+1) < n){
                ans = max(ans , sum - abs(arr[i]) - abs(arr[i+1]) + abs(arr[i]-arr[i+1]));
            }
            else if(i == (n-1) and (arr[i]-arr[i-1]) >= 0){
                ans = max(ans , sum - abs(arr[i]) - abs(arr[i-1]) + abs(arr[i] - arr[i-1]));
            }
            else{
                if(arr[i]-arr[i+1] >= 0){
                    ans = max(ans , sum - abs(arr[i]) - abs(arr[i+1]) + abs(arr[i] - arr[i+1]));
                }
                if(arr[i]-arr[i-1] >= 0){
                    ans = max(ans , sum - abs(arr[i]) - abs(arr[i-1]) + abs(arr[i] - arr[i-1]));
                }
            }
        }
        cout << ans << endl;
    }
    else if(mi == 0){
        for(int i = 0; i<n; i++){
            if( i == 0 and (arr[i]-arr[i+1])<=0 and (i+1) < n){
                ans = max(ans , sum - abs(arr[i]) - abs(arr[i+1]) + abs(arr[i] - arr[i+1]));
            }
            else if(i == (n-1) and (arr[i]-arr[i-1]) <= 0){
                ans = max(ans , sum - abs(arr[i]) - abs(arr[i-1]) + abs(arr[i] - arr[i-1]));
            }
            else{
                if(arr[i]-arr[i+1] <= 0){
                    ans = max(ans , sum - abs(arr[i]) - abs(arr[i+1]) + abs(arr[i] - arr[i+1]));
                }
                if(arr[i]-arr[i-1] <= 0){
                    ans = max(ans , sum - abs(arr[i]) - abs(arr[i-1]) + abs(arr[i] - arr[i-1]));
                }
            }
        }
        cout << ans << endl;
    }
    return 0;
}
