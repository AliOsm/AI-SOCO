//
// c.cpp
//
// Siwakorn Srisakaokul - ping128
// Written on Saturday,  7 June 2014.
//

#include <cstdio>
#include <iostream>
#include <sstream>
#include <cstdlib>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <algorithm>
#include <map>
#include <ctype.h>
#include <string.h>

#include <assert.h>

#define x first
#define y second

using namespace std;

template<class T1, class T2>
ostream& operator << (ostream &out, pair<T1, T2> pair) { return out << "(" << pair.first << ", " << pair.second << ")"; }

typedef long long LL;
typedef pair<int, int> PII;
typedef pair<PII, int> PII2;

LL ones[20];
int K;
map<LL, int> dp;

int solve(LL now) {
    if (now == 0) return 0;
    if (dp.find(now) != dp.end()) return dp[now];
    int ans = 1000000000;
    for (int i = 15; i >= 0; i--) {
        if (ones[i] == now) {
            return dp[now] = i + 1;
        }
        if (ones[i] < now) {
            LL pre = ones[i];
            LL next = ones[i + 1];
            int pc = i + 1;
            int pn = i + 2;
            for (int k = 1; ; k++) {
                if (pre * k > now) {
                    if (now - pre * (k - 1) < now)
                        ans = min(ans, pc * (k - 1) + solve(now - pre * (k - 1)));
                    if (pre * k - now < now)
                        ans = min(ans, pc * k + solve(pre * k - now));
                    break;
                }
            }
            if (next - now < now)
                ans = min(ans, pn + solve(next - now));
            break;
        }
    }
    return dp[now] = ans;
}

int main() {
    for (LL i = 0, temp = 10; i < 16; i++, temp *= 10) {
        LL x = (temp - 1) / 9;
        ones[i] = x;
    }

    LL in;
    cin >> in;
    cout << solve(in) << endl;
    return 0;
}
