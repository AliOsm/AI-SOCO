#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N = 1e5+100;
int n, a[N], b[N], dp[N][4];

int DP(int pos, int val) {
	if(pos >= n-1) return true;
	if(dp[pos][val] != -1) return dp[pos][val];

	dp[pos][val] = 0;
	for(int v = 0; v < 4; v++) {
		if((val|v) == a[pos] && (val&v) == b[pos]) 
			dp[pos][val] |= DP(pos+1, v);
	} return dp[pos][val];
}

int main() {
	memset(dp,-1,sizeof dp);
	scanf("%d", &n);
	for(int i = 0; i < n - 1; i++)
		scanf("%d", &a[i]);
	for(int i = 0; i < n - 1; i++)
		scanf("%d", &b[i]);
	for(int val = 0; val < 4; val++) {
		if(DP(0,val)) {
			puts("YES");
			printf("%d", val);
			int pos = 0;
			while(pos < n-1) {
				for(int j = 0; j < 4; j++)
					if((val|j) == a[pos] && (val&j) == b[pos] && DP(pos+1,j)) {
						pos++; val = j; break;
					}
				printf(" %d", val);
			}
			return 0;
		}
	} puts("NO");
	return 0;
}