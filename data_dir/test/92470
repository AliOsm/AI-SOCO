//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define X first
#define Y second
#define _sz(x) (int)x.size()

using namespace std ;
using ll = long long ;
using ld = long double ;
using pii = pair <int , int> ;

const int MX = 2e5 + 20 , N = 2000 + 20 , mod = 1e9 + 7;
int h , w , n ;
pii p[N] ;
int fac[MX] , inv[MX] , ans[N] ;

inline int pw (int a , int b) {
	int res = 1 ;
	while (b) {
		if (b & 1) res = 1ll * res * a % mod ;
		a = 1ll * a * a % mod ;
		b >>= 1 ;
	}
	return res ;
}

inline int C (int n , int k) {
	if (k < 0 || k > n) return 0 ;
	return 1ll * fac[n] * inv[k] % mod * inv[n - k] % mod ;
}

inline void pre () {
	fac[0] = inv[0] = 1 ;
	for (int i = 1 ; i < MX ; i ++) fac[i] = 1ll * fac[i - 1] * i % mod , inv[i] = pw(fac[i] , mod - 2) ; 
}

int main(){
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

	pre() ;
	
	cin >> h >> w >> n ;

	for (int i = 0 ; i < n ; i ++) cin >> p[i].X >> p[i].Y ;

	sort(p , p + n) ;
	p[n].X = h , p[n].Y = w ;
	n ++ ;

	for (int i = 0 ; i < n ; i ++) ans[i] = C(p[i].X + p[i].Y - 2 , p[i].X - 1) ;

	for (int i = 0 ; i < n ; i ++) {
		for (int j = i + 1 ; j < n ; j ++) {
			int dx = p[j].X - p[i].X , dy = p[j].Y - p[i].Y ;

			if (dy < 0) continue ;

			ans[j] = (ans[j] - 1ll * ans[i] * C(dx + dy , dx) % mod + mod) % mod ;
		}
	}

	cout << ans[n - 1] << '\n' ;
}
