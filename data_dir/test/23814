/*****Enigma27***/
#include<bits/stdc++.h>
#include<unordered_map>
#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pll         pair<ll,ll>
#define vll          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define hell        1000000007
#define sz(x)       (int)x.size()
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define ios        	ios_base::sync_with_stdio( );cin.tie(0);cout.tie(0);
using namespace std;
ll n,i,j,k=hell,r,l=0,ans=0,t,a[1000005],inv[1000005],x,y;
vector< ll > v;
ll expo(ll base, ll exponent, ll mod) {								//return base^exponent modulo modulus
    ll ans = 1;
    while(exponent !=0 ) {
        if((exponent&1) == 1) {
            ans = ans*base ;
            ans = ans%mod;
        }
        base = base*base;
        base %= mod;
        exponent>>= 1;
    }
    return ans%mod;
}
ll f(ll k)
{
	
	while(k>0) {
		if(k%10!=x&&k%10!=y) return false;
		k/=10; 
	}
	return true;
}
int  main()
{
	ios
	a[0]=1;
	for(i=1;i<=1000000;i++) a[i]=(i*a[i-1])%hell;
	inv[1000000]=expo(a[1000000],hell-2,hell);
	for(i=999999;i>=0;i--) inv[i]=(inv[i+1]*(i+1))%hell;
	cin>>x>>y>>n;
	ll ans=0;
	for(i=0;i<=n;i++)
	{
		if(f(i*x+(n-i)*y))
		{	
			
			ans+=(((a[n]*inv[i])%hell)*inv[n-i])%hell;
			ans%=hell;
		}
	}
	cout<<ans<<endl;
}
 