#include "bits/stdc++.h"
using namespace std;
vector<char> AlphabetOrder;
int Count[30];
char Str[105] , Array[5]; 

void FindThreePattern(){
    int Pos = -1;
    char ch;

    for( int i = 0 ; i < 26 ; ++i ){
        if( Count[i] > 0 ){ 
            AlphabetOrder.emplace_back( 'a' + i );

            if( Count[i + 1] > 0 ) Pos = i;
            else{
                if( i == 0 ) ch = 'a';
                else if( Count[i - 1] == 0 ) ch = 'a' + i;
            }
        }
    }  

    if( Pos == -1 ) return;
    else{
        AlphabetOrder.clear();
        AlphabetOrder.emplace_back( 'a' + Pos );
        AlphabetOrder.emplace_back( ch );
        AlphabetOrder.emplace_back( 'a' + ( Pos + 1 ) );
    }
}

void FindMultiPattern(){
    int i , Temp = 0;

    for( i = 0 ; i < 26 ; ++i ){
        if( Count[i] > 0 ){
            ++Temp;
            Array[Temp] = 'a' + i;

            if( Temp == 4 ){ 
                ++i;
                break;
            }
        }
    }

    AlphabetOrder.emplace_back( Array[3] );
    AlphabetOrder.emplace_back( Array[1] );
    AlphabetOrder.emplace_back( Array[4] );
    AlphabetOrder.emplace_back( Array[2] );

    int rem = i;
    Temp = 0;

    for( ; i < 26 ; ++i ){
        if( Count[i] > 0 ){
            ++Temp;
            if( Temp & 1 ) AlphabetOrder.emplace_back( 'a' + i );
        }
    }

    reverse( AlphabetOrder.begin() , AlphabetOrder.end() );

    Temp = 0;

    for( i = rem ; i < 26 ; ++i ){
        if( Count[i] > 0 ){
            ++Temp;
            if( !(Temp & 1) ) AlphabetOrder.emplace_back( 'a' + i );
        }
    }
}

void FindResultantString(){
    int i , j , k , limit;
    char ch;

    for( i = 0 , k = 0 ; i < int(AlphabetOrder.size()) ; ++i ){
        ch = AlphabetOrder[i];
        limit = Count[ch - 'a'];

        for( j = 0 ; j < limit ; ++j )
            Str[k++] = ch;
    }

    AlphabetOrder.clear();
}

bool IsPossible(){
    fill( Count , Count + 27 , 0 );
    int i , Temp = 0 , N = strlen( Str );

    for( i = 0 ; i < N ; ++i ){
        if( Count[Str[i] - 'a'] == 0 ) ++Temp;
        ++Count[Str[i] - 'a'];
    }
    
    if( Temp == 1 ) return true;
    else if( Temp == 2 ){
        for( i = 0 ; i <= 24 ; ++i ){
            if( Count[i] > 0 && Count[i + 1] > 0 ) return false;
        }

        return true;
    }
    else if( Temp == 3 ){
        for( i = 0 ; i <= 23 ; ++i ){
            if( Count[i] > 0 && Count[i + 1] > 0 && Count[i + 2] > 0 ) return false; 
        }

        FindThreePattern();
    }
    else FindMultiPattern();
    
    FindResultantString();

    return true;
}

int main(){
    int T;
    scanf( "%d" , &T );

    while( T-- ){
        scanf( "%s" , Str );
        if( IsPossible() ) printf( "%s\n" , Str );
        else puts( "No answer" );
    }

    return 0;
}