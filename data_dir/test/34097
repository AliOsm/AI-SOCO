#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(long long i=a;i<=b;i++)
#define fr(i,a)      for(long long i=0;i<a;i++)
#define fd(i,a,b)    for(long long i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           100000


long long mn=mod,mx=-mod;
long long n,x[xx+100];
long long a=0,b=0,c=0;
long long cura,curb,curc;


long long find_(long long cur){
     curb=b+(c-cur)*2;
     if(curb<0) return -1;
     cura=(n-curb-cur);
     curc=cur;
     if(cura<0) return -1;
     return min(curc,c)+min(cura,a)+min(curb,b);
}


main(){
    sfl(n);
    fi(i,1,n){
       sfl(x[i]);
       mn=min(x[i],mn);
       mx=max(x[i],mx);
    }

    if(mx-mn<2){
        cout<<n<<endl;
        fi(i,1,n) {
           pfl(x[i]);
           if(i==n) _;
           else __;
        }
        return 0;
    }



    fi(i,1,n) if(x[i]==mn) a++;
              else if(x[i]==mx) c++;
              else b++;

    long long ans=mod;
    long long ix;
    fi(i,0,n) {
       long long cur=find_(i);
       if(cur>=0){
          if(cur<ans) ans=cur,ix=i;
       }
    }
    find_(ix);
    cout<<ans<<endl;
    bool ch=false;
    while(cura){
        if(ch) __;
        pfl(mn);
        ch=true;
        cura--;
    }
    mn++;
    cura=curb;
    while(cura){
        if(ch) __;
        pfl(mn);
        ch=true;
        cura--;
    }
    mn++;
    cura=curc;
    while(cura){
        if(ch) __;
        pfl(mn);
        ch=true;
        cura--;
    }
    _;
    return 0;
}
