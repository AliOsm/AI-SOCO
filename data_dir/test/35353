#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
	freopen("in.txt", "rt", stdin);
	//freopen("out.txt", "w", stdout);
	long long _begin_time = clock();
#endif
	
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << setiosflags(ios::fixed) << setprecision(15);
	long long cnt[65];
	for(int i = 1; i < 62; i++) {
		cnt[i] = 1LL << (i - 1);
	}
	long long shift[65];
	int q;
	while(cin >> q) {
		memset(shift, 0, sizeof(shift));
		while(q--) {
			int t;
			long long x;
			cin >> t >> x;
			int lev = 64 - __builtin_clzll(x);
			if(t == 1) {
				long long k;
				cin >> k;
				k %= cnt[lev];
				if(k < 0) {
					k += cnt[lev];
				}
				shift[lev] += k;
				if(shift[lev] >= cnt[lev]) {
					shift[lev] -= cnt[lev];
				}
			} else if(t == 2) {
				long long k;
				cin >> k;
				k %= cnt[lev];
				if(k < 0) {
					k += cnt[lev];
				}
				for(int i = lev; i < 62; i++) {
					shift[i] += k;
					if(shift[i] >= cnt[i]) {
						shift[i] -= cnt[i];
					}
					k <<= 1;
				}
			} else {
				x -= (1LL << (lev - 1));
				x = (x + shift[lev]) % cnt[lev];
				for(int i = lev; i >= 1; i--) {
					long long r = x + cnt[i] - shift[i];
					if(r < 0) {
						r += cnt[i];
					} else if(r >= cnt[i]) {
						r -= cnt[i];
					}
					cout << r + cnt[i] << " \n"[i == 1];
					x >>= 1;
				}
			}
		}
	}

#ifdef LOCAL_DEFINE
	long long _end_time = clock();
	cerr << "time = " << _end_time - _begin_time << " ms" << '\n';
#endif
	return 0;
}