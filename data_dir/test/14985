#include <bits/stdc++.h>
 
#define INF (1LL << 60)
#define MAXN 100005
 
using namespace std;
 
int n;
long long dp[MAXN], a[MAXN], b[MAXN];
int Q[MAXN], l, r;
 
double m(int j, int k){
	return (dp[k] - dp[j] + .0) / (b[k] - b[j]);
}
 
int main(){
	scanf("%d", &n);
	for(int i = 1; i <= n; i++){
		scanf("%lld", &a[i]);
	}
	for(int i = 1; i <= n; i++){
		scanf("%lld", &b[i]);
	}
	
	// compute dp[1] and add index 1 to deque
	dp[1] = 0;
	l = r = 1;
	Q[1] = 1;
	
	for(int i = 2; i <= n; i++){
		// using convex hull trick!
		while(r - l >= 1 && m(Q[l], Q[l + 1]) > -a[i]){
			l++;
		}
		dp[i] = dp[Q[l]] + a[i] * b[Q[l]];
		while(r - l >= 1 && m(Q[r - 1], Q[r]) < m(Q[r], i)){
			r--;
		}
		r++;
		Q[r] = i;
	}
	printf("%lld\n", dp[n]);
	return 0;
}