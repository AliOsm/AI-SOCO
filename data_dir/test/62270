#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <deque>
#include <utility>
#include <cstring>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf
#define prev(x) (x/2)
#define left(x) (x*2)
#define right(x) (x*2+1)
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i <= end; i += move)

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

int main()
{
    string s1, s2;
    getline(cin,s1);
    getline(cin,s2);
    int st = 1;
    int a = 0, b = 0;
    int aa = 0, bb = 0;
    for (int i = s1.sz() - 1; i >= 0; --i)
    {
        if (s1[i] == '0')
            continue;
        int x = s1[i] - '0';
        a += (x * st);
        st *= 10;
    }
    st = 1;
    for (int i = s2.sz() - 1; i >= 0; --i)
    {
        if (s2[i] == '0')
            continue;
        int x = s2[i] - '0';
        b += (x * st);
        st *= 10;
    }
    st = 1;
    for (int i = 0; i < s1.sz(); i++)
    {
        int x = s1[i] - '0';
        aa *= 10;
        aa += x;
    }
    st = 1;
    for (int i = 0; i < s2.sz(); i++)
    {
        int x = s2[i] - '0';
        bb *= 10;
        bb += x;
    }
    int c = aa + bb;
    st = 1;
    int nC = 0;
    while (c)
    {
        int x = c % 10;
        c /= 10;
        if (!x)
            continue;
        nC += (x * st);
        st *= 10;
    }
    c = nC;
    if (a + b != c)
        prf("NO\n");
    else prf("YES\n");
    return 0;
}
