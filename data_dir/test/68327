//g++ -o A A.cpp

//g++ -Wl,--stack,16777216 -o A A.cpp


//#include <bits/stdc++.h>
//using namespace std;

#include <iostream>
using std::cin;
using std::cout;
using std::string;
using std::endl;

#include <algorithm>
using std::sort;
using std::min;
using std::max;
using std::pair;//pair <int,int> data[100];sort(data,data+100);

#include <math.h>
//sqrt(123.123)
//ceil(0.12)=1
//pow(x,2)=x^2

#include<cstdio>
//printf()

#include <map>
using std::map;
//map <string,int> x;

#include <stdlib.h>
//abs(-123);

#include <vector>
using std::vector;
//vector<int> x;
//x.push_back(0);
//x.pop_back();
//vector<int> x(10,3);   ==>   x[0]==x[1]==...==x[9]==3;
//vector<int> y(x);      ==>   y[0]==y[1]==...==y[9]==3;
//cout<<x.size();        ==>   10


#include <queue>
using std::queue;

#include <deque>
using std::deque;



#include <stack>
using std::stack;
//.push(123)
//.pop()
//.top()
//.size()
//.size()

#include <set>
using std::set;
using std::multiset;

/*
long long gcd(long long a, long long b)
{
    //O(log(max(a,b)))
    long long t;
    while(b!=0)
    {
        t=a%b;
        a=b;
        b=t;
    }
    return a;
}
*/

/*
long long C(int x,int y)
{
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer/=i;
    }
    return answer;
}
*/




/*
//C(x,y) % mod
long long C(long long x,long long y)
{
    long long mod=1000000007;
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer%=mod;
    }
    for(i=1;i<=y;i++)
    {
        while(answer%i!=0){
            answer+=mod;
        }
        answer/=i;
        answer%=mod;
    }
    return answer%mod;
}


for (i=0; i<1010; i++) {
    c[i][0]=1;
    for (j=1; j<=i; j++) c[i][j]=(c[i-1][j-1]+c[i-1][j])%md;
}
*/

/*
struct classcomp {
  bool operator() (const int& lhs, const int& rhs) const
  {return lhs>rhs;}
};
*/


string data[50];
int minLETTER[50]={0,};
int minSIGN[50]={0,};
int minDIGIT[50]={0,};

int f(int a,int b,int c){
    int x1=minLETTER[a]+minSIGN[b]+minDIGIT[c];
    int x2=minLETTER[a]+minSIGN[c]+minDIGIT[b];
    int x3=minLETTER[b]+minSIGN[a]+minDIGIT[c];
    int x4=minLETTER[b]+minSIGN[c]+minDIGIT[a];
    int x5=minLETTER[c]+minSIGN[b]+minDIGIT[a];
    int x6=minLETTER[c]+minSIGN[a]+minDIGIT[b];
    
    return min( min(min(x1,x2),min(x3,x4)),min(x5,x6) );
    
}

int main()
{
    int n,m;cin>>n>>m;
    

    for(int i=0;i<n;i++)cin>>data[i];
    
    for(int i=0;i<n;i++){
        vector<int> LETTER;
        vector<int> SIGN;
        vector<int> DIGIT;
        LETTER.push_back(1000);
        SIGN.push_back(1000);
        DIGIT.push_back(1000);
        for(int j=0;j<m;j++){
            if(data[i][j]>='0' && data[i][j]<='9'){
                DIGIT.push_back(min(j,m-j));
            }else if(data[i][j]>='a' && data[i][j]<='z'){
                LETTER.push_back(min(j,m-j));
            }else{
                SIGN.push_back(min(j,m-j));
            }
        }
        sort(LETTER.begin(),LETTER.end());
        sort(SIGN.begin(),SIGN.end());
        sort(DIGIT.begin(),DIGIT.end());
        
        minLETTER[i] = LETTER[0];
        minSIGN[i] = SIGN[0];
        minDIGIT[i] = DIGIT[0];
    }
    
    int answer=200;
    
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            for(int k=j+1;k<n;k++){
                answer = min(answer,f(i,j,k));
            }
        }
    }
    cout<<answer;
    
    return 0;
}


