/*-----Deep D. Savani------------
-------DAIICT,INDIA--------------
*/
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
 
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;

 
using namespace std;
 
 
long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);
void build();
ll ncr(ll n,ll r);
 
const int nax=1e6+10;
const int LG=log2(nax)+1;
vector<ll> fact(nax);
 
map<string,ll> ind; 

ll p[nax],o[nax];

ll root(ll x)
{
	return (p[x]!=0 && p[x]!=x) ? p[x]=root(p[x]) : p[x];
}

void unio(ll a,ll b)
{
	ll ra=root(a);
	ll rb=root(b);
	p[ra]=rb;
}
 
int32_t main() {
 
    FIO
    //build();
    
    ll n,m,q;
    cin>>n>>m>>q;

    for(int i=0;i<n;i++)
    {
    	string s;
    	cin>>s;
    	ind[s]=i+1;
    }
    for(int i=1;i<nax;i++)
    	p[i]=i;

    for(int i=0;i<m;i++)
    {
    	ll t;
    	cin>>t;
    	string a1,b1;
    	cin>>a1>>b1;

    	ll a=root(ind[a1]);
    	ll b=root(ind[b1]);

    	if(t==1)
    	{
    		if(o[a]==b || o[b]==a)
    		{
    			cout<<"NO"<<endl;
    			continue;
    		}
    		else
    		{
    			unio(a,b);

    			if(o[a] && o[b])
    				unio(o[a],o[b]);
    			if(o[a])
    				o[b]=root(o[a]);
    			else
    				o[a]=root(o[b]);
    		}
    	}
    	else
    	{
    		if(a==b)
    		{
    			cout<<"NO"<<endl;
    			continue;
    		}
    		else
    		{
    			if(o[a]==0)
    				o[a]=b;
    			else
    				unio(o[a],b);
    			if(o[b]==0)
    				o[b]=a;
    			else
    				unio(o[b],a);
    			o[a]=root(b);
    			o[b]=root(a);

    		}
    	}
    	cout<<"YES"<<endl;
    }

    for(int i=0;i<q;i++)
    {
    	string a1,b1;
    	cin>>a1>>b1;

    	ll a=root(ind[a1]);
    	ll b=root(ind[b1]);

    	if(a==b)
    		cout<<1<<endl;
    	else if(o[a]==b || o[b]==a)
    		cout<<2<<endl;
    	else
    		cout<<3<<endl;
    }


 
    return 0;
}
 
ll ncr(ll n,ll r)
{
    if(r>n || r<0 || n<0)
        return 0;
    ll ans=fact[n];
    ll temp=(fact[n-r]*fact[r])%mod;
    ans=(ans*inverse(temp,mod))%mod;
    return ans;
}
 
void build()
{
    fact[0]=1;
    for(ll i=1;i<nax;i++)
        fact[i]=(fact[i-1]*i)%mod;
 
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
}
 
long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;
 
    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;
 
        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
    return result;
}
 
long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}
 
void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}
 
ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}