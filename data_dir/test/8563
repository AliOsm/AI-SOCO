#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 5;

typedef long long ll;

ll n, m, k, q, d[N], ct[N * 20], rs;
ll ans[N];
pair<pair<int, int>, int> p[N];

void add(int x) {
    rs += ct[k ^ x];
    ct[x]++;
}

void del(int x) {
    ct[x]--;
    rs -= ct[k ^ x];
}

bool cmp(pair<pair<int, int>, int> a, pair<pair<int, int>, int> b) {
    if (a.first.first / q == b.first.first / q)
        return a.first.second < b.first.second;
    return a.first.first / q < b.first.first / q;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m >> k;
    q = sqrt(n);
    for (int i = 1; i <= n; i++) {
        int a;
        cin >> a;
        d[i] = d[i - 1] ^ a;
    }
    for (int i = 1; i <= m; i++) {
        cin >> p[i].first.first >> p[i].first.second;
        p[i].first.first--;
        p[i].second = i;
    }
    sort(p + 1, p + 1 + m, cmp);
    int l = 1, r = 0;
    for (int i = 1; i <= m; i++) {
        int ll = p[i].first.first, rr = p[i].first.second;
        while (l < ll) {
            del(d[l]);
            l++;
        }
        while (l > ll) {
            l--;
            add(d[l]);
        }
        while (r < rr) {
            r++;
            add(d[r]);
        }
        while (r > rr) {
            del(d[r]);
            r--;
        }
        ans[p[i].second] = rs;
    }
    for (int i = 1; i <= m; i++)
        cout << ans[i] << "\n";
}
