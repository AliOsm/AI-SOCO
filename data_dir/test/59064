#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

map<ll, int> memo, idxs;
vector<pair<pair<ll, ll>, ll> > sv;

int fnd(ll val) {
	int st = 0, ed = int(sv.size()) - 1;
	while (st < ed) {
		int md = (st + ed) / 2;
		if (sv[md].first.first <= val && sv[md].first.second >= val)
			return md;
		if (sv[md].first.first > val)
			ed = md - 1;
		else
			st = md + 1;
	}
	return st;
}

int solve(ll val) {
	if (idxs.find(val) != idxs.end())
		return idxs[val];
	int idx = fnd(val);
	return memo[val] = solve((val - sv[idx].first.first) % sv[idx].second);
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	fastInOut();
	int m, n, t;
	ll a, b;
	ll tot = 0;
	cin >> m;
	while (m--) {
		cin >> t >> a;
		if (t == 1)
			idxs[tot] = a, ++tot;
		else {
			cin >> b;
			sv.push_back(make_pair(make_pair(tot, tot + (a * b) - 1LL), a));
			tot += (a * b);
		}
	}
	cin >> n;
	for (int i = 0; i < n; ++i) {
		cin >> a, cout << solve(a - 1LL) << " \n"[i == n - 1];
	}
	return 0;
}

void fastInOut() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
