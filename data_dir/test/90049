#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell 1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
void solve()
{
    ll n , m ;
    set<ll> Deleted ;
    cin >> n >> m ;
    char a[n+1][m+1] ;
    rep( i , 1 , n + 1 )rep( j , 1 , m + 1 )cin >> a[i][j] ;
    rep( i , 1 , m + 1 )
    {
        vector<string> v , vv ;
        rep( j , 1 , n + 1 )
        {
            string ss = "" ;
            rep( k , 1 , i + 1 )
            {
                if(Deleted.find(k)==Deleted.end())
                    ss += a[j][k] ;
            }
            v.pb(ss);
            vv.pb(ss);
        }
        sort(all(v));
        bool isOk = true ;
        rep( j , 1 , n + 1 )
        {
            if(v[j-1][sz(v[j-1])-1] != a[j][i])
                isOk=false;
            //cout << v[j-1] << a[j][i] << " " ;
        }
        //cout << "isOK : " << isOk << "\n" ;
        if(isOk==false)Deleted.insert(i);
        /*for(auto it : v )
            cout << it << " " ;
        cout << "\n" ;*/
    }
    //for(auto it : Deleted )cout << it << " " ;
    cout << sz(Deleted) ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
