/*
    STARK_BOY
*/
#include <bits/stdc++.h>
#include <fstream>
using namespace std;
#define rep(i,a,b) for(ll i=a;i<b;i++)
#define repe(i,a,b) for(ll i=a;i<=b;i++)
#define bac(i,a,b) for(ll i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define F first
#define S second
typedef long long ll;
typedef vector< ll > vi;
typedef vector<pair<ll,ll> > vpii;
typedef pair<ll,ll> pii;
#define all(c) c.begin(),c.end()
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define PI           3.14159265358979323846  /* pi */
mt19937 rng32(chrono::steady_clock::now().time_since_epoch().count());
#define N 1000005
//Variables Start
ll inf=1e18,MOD=1e9+7;
//Variables End
const int nax = 5e3+5;
vector<pair<int,int>> adj[nax],rev[nax];
int dp[nax][nax],n,m,T,vis[nax][nax];

void move(){
	
	priority_queue<pair<int,pair<int,int>>> q;
	q.push(mp(0,mp(1,1)));
	dp[1][1] = 0;
	
	while(!q.empty()){
		int ver = q.top().S.F;
		int cur = q.top().S.S;
		q.pop();
		if(vis[ver][cur])continue;
		vis[ver][cur] = 1;
		//cout<<ver<<" "<<cur<<endl;
		for(auto i:adj[ver]){
			if(!vis[i.F][cur+1]){
				int val = dp[ver][cur] + i.S;
				if( dp[i.F][cur+1] > val  && val <= T){
					dp[i.F][cur+1] = val;
					q.push(mp(-val,mp(i.F,cur+1)));
				}
			}
		}
	}
}


vector<int> retrace(int val){
	vector<int> ret;ret.pb(n);
	
	int cur = n;
	while(cur!=1){
		
		for(auto i:rev[cur]){
			if(dp[i.F][val-1] + i.S == dp[cur][val]){
				cur = i.F;
				val--;
				break;
			}
		}
		ret.pb(cur);
	}
	
	reverse(all(ret));
	return ret;
}
void solve(){
	cin>>n>>m>>T;
	
	for(int i=0;i<m;i++){
		int x,y,w;
		cin>>x>>y>>w;
		adj[x].pb(mp(y,w));
		rev[y].pb(mp(x,w));
	}
	
	for(int i=0;i<=n+1;i++)for(int j=0;j<=n+1;j++)dp[i][j] = INT_MAX;
	move();
	
	int ans = 0;
	for(int i=1;i<=n;i++){
		if(dp[n][i] <= T) ans = i;
	}
	
	vector<int> out = retrace(ans);
	
	cout<<ans<<endl;
	for(auto i:out)cout<<i<<" ";
	cout<<endl;
}
int main()
{
    ios
    int ti=1;
    //cin>>ti;
    for(int i=1;i<=ti;i++)
    {
		solve();        
    }
    return 0;
        
}
