#include "bits/stdc++.h"
using namespace std;

int gcd(long long a, long long b) {
	return !b ? a : gcd(b, a % b);
}

const int N = 1e5 + 5;
const int lim = (int) 1e9;

long long block[N];
long long num[N];

int num_dig(int x) {
	int res = 0;
	while(x) {
		res++;
		x /= 10;
	}
	return res;
}

int mx;

void pre() {
	block[1] = 1;
	int val = 1;
	mx = 1;
	for(int i = 2; block[i - 1] <= lim; ++i) {
		block[i] += block[i - 1];
		val += num_dig(i);
		block[i] += val;
		mx = i;
		if(block[i] >= lim) break;
	}
	num[1] = 1;
	for(int i = 2; i <= mx; ++i) {
		num[i] = num[i - 1] + num_dig(i);
	}
}

void solve() {
	ios_base :: sync_with_stdio(false);
	cin.tie(NULL);
	pre();
	int q;
	cin >> q;
	while(q--) {
		int x;
		cin >> x;
		int which_block;
		for(int i = 1; i <= mx; ++i) {
			if(block[i] >= x) {
				which_block = i;
				break;
			}
		}
		x -= block[which_block - 1];
		int which_num;
		for(int i = 1; i <= mx; ++i) {
			if(num[i] >= x) {
				which_num = i;
				break;
			}
		}
		x -= num[which_num - 1];
		vector<int> dig;
		while(which_num > 0) {
			dig.push_back(which_num % 10);
			which_num /= 10;
		}
		reverse(dig.begin(), dig.end());
		cout << dig[x - 1] << endl;
	}
}
 
int main() {
	solve();
	return 0;  
}