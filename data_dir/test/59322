#include<bits/stdc++.h>
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FORZ(i,n) for(int i=0;i<n;i++)
#define ll long long
#define ull unsigned long long
#define pii pair<ll,ll>
#define piii pair<ll,pair<ll,ll>>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007
#define LD long double
#define bpc __builtin_popcount
#define gentum getnum
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int Tree[500004*4];
int A[500006];
pii P[500006];

void update(int l,int r,int ind,int pos)
{
    Tree[ind]=1;
    if(l==r)return;

    int m=(l+r)/2;

    if(pos<=m)update(l,m,2*ind,pos);
    else update(m+1,r,2*ind+1,pos);
}

int getbool(int l,int r,int ind,int lx,int rx)
{
    if(l==lx&&r==rx)return Tree[ind];

    int m=(l+r)/2;

    if(rx<=m)return getbool(l,m,2*ind,lx,rx);
    else if(lx>m)return getbool(m+1,r,2*ind+1,lx,rx);
    else return (getbool(l,m,2*ind,lx,m)+getbool(m+1,r,2*ind+1,m+1,rx))>=1;
}

int main()
{
    int n=getnum(),k=gentum(),d=getnum();

    for(int i=1;i<=n;i++)A[i]=gentum();

    sort(A+1,A+n+1);

    for(int i=1;i<=n;i++)
    {
        int l=upper_bound(A+1,A+n+1,A[i]+d)-A;
        P[i]=mp(i+k,l);
    }

    update(1,n+1,1,n+1);

    for(int i=n;i>=1;i--)
    {
        int x=0;
        if(P[i].ff<=P[i].ss)x=getbool(1,n+1,1,P[i].ff,P[i].ss);

        if(x)update(1,n+1,1,i);
    }

    if(getbool(1,n+1,1,1,1))printf("YES");
    else printf("NO");
} 