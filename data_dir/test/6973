/**
 *    author:  skmonir
 *    created: 18-Apr-2018 17:34:13
**/

#include <bits/stdc++.h>

using namespace std;

#define endl                '\n'
#define TN                  typename
#define mod                 1000000009LL
#define all(x)              x.begin(), x.end()
#define rall(x)             x.rbegin(), x.rend()
#define mem(x, y)           memset(x, y, sizeof x)
#define FOR(x, l, r)        for (int x = l; x <= r; ++x)
#define ROF(x, l, r)        for (int x = l; x >= r; --x)

template <TN T> inline void Int(T &n) {
    n = 0; int f = 1; register int ch = getchar();
    for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;
    for (; isdigit(ch); ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';
    n = n * f;
}

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void umax(T &a, T b) {a = a > b ? a : b;}
template <TN T, TN W> inline void Int(T &x, W &y) {Int(x), Int(y);}
template <TN T, TN W, TN Q> inline void Int(T &x, W &y, Q &z) {Int(x, y), Int(z);}

const int N = 1e5 + 7;
const int inf = 1e9 + 7;
int tests = 1, CaseNo = 0;

char s[N];

template <TN T, TN R> inline T modpow(T base, R exp) {
    base %= mod; T res = 1;
    if (base < 0) base += mod;
    if (exp < 0) exp += mod - 1;
    for (; exp > 0; exp >>= 1) {
        if (exp & 1) res = (res * base) % mod;
        base = (base * base) % mod;
    }
    return res;
}

int solve() {
    long long n, x, y; int k;
    Int(n, x, y); Int(k); scanf("%s", s);

    long long a = 0, q = (n + 1) / k;
    for (int i = 0; i < k; i++) {
        if (s[i] == '+') a += modpow(x, n - i) * modpow(y, i);
        if (s[i] == '-') a -= modpow(x, n - i) * modpow(y, i);
        a %= mod;
    }

    long long r = modpow(y, k) * modpow(x, -k) % mod;

    long long res = q;

    if (r != 1LL) res = (modpow(r, q) - 1) * modpow(r - 1, -1) % mod;

    res *= a;
    res %= mod;
    if (res < 0) res += mod;

    cout << res << endl;

    return 0;
}

int main() {
    //Int(tests);

    while (tests--) {
        //printf("Case %d: ", ++CaseNo);
        solve();
    }

    return 0;
}