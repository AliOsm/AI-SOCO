#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define N 100010
using namespace std;
typedef long long ll;
ll mod = 1000000007LL;
ll dp[N][2];
vector<int>edges[N];
int x[N];
int n;
void dfs(int u, int fa){
     if(x[u]){
              dp[u][1]=1LL;
            for(int i = 0;i<edges[u].size();++i){
                    int v = edges[u][i];
                    if(v!=fa){
                        dfs(v, u);
                        ll tmp = (dp[v][1]+dp[v][0])%mod;  
                        dp[u][1]=dp[u][1]*tmp%mod;    
                    }
            }  
     } else {
            dp[u][0]=1LL;
            for(int i=0;i<edges[u].size();++i){
                    int v = edges[u][i];
                    if(v!=fa){
                              dfs(v,u);
                              ll tmp=(dp[v][1]+dp[v][0])%mod;
                              dp[u][1]=(dp[u][1]*tmp%mod+dp[u][0]*dp[v][1]%mod)%mod;
                              dp[u][0]=dp[u][0]*tmp%mod;
                    }
            }
     }
}
int main(){
    int p;
    while(cin>>n){
        for(int i=1;i<n;++i){
                cin>>p;
                edges[p].push_back(i);
                edges[i].push_back(p);      
        }
        for(int i=0;i<n;++i){
                cin>>x[i];
        }
        memset(dp,0LL,sizeof(dp));
        dfs(0,-1);
        cout<<dp[0][1]<<endl;
    }
    return 0;
}
