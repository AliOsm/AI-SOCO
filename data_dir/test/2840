#include <iostream>
#include <bits/stdc++.h>
using namespace std;
string s;
vector<pair<int,char> >vec,tmp;
multiset<int>st;
int main()
{
    cin>>s;
    for(int i = 0 ; i<s.size() ; ++i)
    {
        int j = i;
        while(j<s.size() && s[j] == s[i]) j++;
        vec.push_back({j-i,s[i]});
        i = j-1;
    }
    int ans = 0;
    while(vec.size() > 1)
    {
        int x = 1e9;
        for(int i = 0 ; i<vec.size() ; ++i)
        {
            if(i == 0 || i==(int)vec.size()-1) x = min(x , vec[i].first);
            else x = min(x , (vec[i].first+1)/2);
        }
        ans += x;
        for(int i = 0 ; i<vec.size() ; ++i)
        {
            int y  = 0;
            if(i == 0 || i==(int)vec.size()-1) y = vec[i].first;
            else y = (vec[i].first+1)/2;
            if(y > x)
            {
                if(i == 0 || i==(int)vec.size()-1) tmp.push_back({vec[i].first-x,vec[i].second});
                else tmp.push_back({vec[i].first-2*x,vec[i].second});
            }
        }
        vec.clear();
        for(int i = 0 ; i<tmp.size() ; ++i)
        {
            int j = i , sum = 0;
            while(j<tmp.size() && tmp[j].second == tmp[i].second) sum+=tmp[j].first , j++;
            vec.push_back({sum , tmp[i].second});
            i = j-1;
        }
        tmp.clear();
    }
    cout<<ans<<endl;
    return 0;
}
