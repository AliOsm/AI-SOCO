/*
ID: Tariqul
PROG:
LANG: C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1000000001
//typedef long long Long;
typedef __int64 Long;
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; }
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; }
bool readd(double &n){ return scanf("%lf",&n) == 1; }
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }

vector<int> v,group;
int Push()
{
    int i;
    foo(i,0,group)if(group[i]){group[i]--; return i + 1; }
    return 1;
}
int main()
{
	#ifdef localhost
	freopen("E://input.txt","r",stdin);
	//freopen("E://output.txt","w",stdout);
	#endif

    int i,n,m,extra,ma,cnt = 0; cin >> n >> m; v.resize(n); extra = n % m; ma = n / m;
    group.clear(); group.resize(m,ma);
    foo(i,0,v)
    {
        cin >> v[i]; v[i]--;
        if(v[i] >= m){ if(extra){ extra--; v[i]++; } else v[i] = -1; continue; }
        if(group[v[i]])group[v[i]]--;
        else if(extra)extra--;
        else v[i] = -2;
        v[i]++;
    }

    foo(i,0,v)if(v[i] < 0)
    {
        cnt++;
        v[i] = Push();
    }

    cout << ma << " " << cnt << endl;
    cout << v[0];
    foo(i,1,v)cout << " " << v[i];
	printf("\n");
	return 0;
}
