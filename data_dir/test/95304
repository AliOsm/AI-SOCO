//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)4e3 + 3;
const ll inf = (ll)1e18;
const int infint = (int)1e9;
ll dp[301][MAXN], tmp[301][MAXN], a[301];
int main() 
{
	ll n, k;
	cin >> n >> k;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	sort(a + 1, a + n + 1);
	dp[0][0] = 1;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j <= n; j++)
			for (int q = 0; q <= k; q++)
				tmp[j][q] = 0;
		for (int j = 0; j <= i; j++)
			for (int q = 0; q <= k; q++)
			{
				ll v = dp[j][q];
				ll val = q + j * (a[i + 1] - a[i]);
				if (val > k)
					 continue;
				tmp[j][val] = (j * v % MOD + tmp[j][val]) % MOD;
				tmp[j][val] = (tmp[j][val] + v) % MOD;
				if (j > 0) 
					tmp[j - 1][val] = (tmp[j - 1][val] + j * v % MOD) % MOD;
				tmp[j + 1][val] = (tmp[j + 1][val] + v) % MOD;
			}
		for (int j = 0; j <= n; j++)
			for (int q = 0; q <= k; q++)
				dp[j][q] = tmp[j][q];
	}
	ll ans = 0;
	for (int i = 0; i <= k; i++)
		 ans = (ans+ dp[0][i]) % MOD;
	cout << ans;
}
