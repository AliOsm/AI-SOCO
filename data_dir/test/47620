#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 1e3 + 5;

int in[N][N], dat[N][N];
int ans[N];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    cin >> n;


    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cin >> in[i][j];
        }
    }

    int g = 0;
    for (int j = 2; j <= n; j++) {
        g = __gcd(g, in[1][j]);
    }


    vector< int> factors;
    for (int i = 1; i * i <= g; i++) {
        if (g % i == 0) {
            factors.push_back(i);
            factors.push_back(g / i);
        }
    }

    for (auto f : factors) {
        ans[1] = f;
        for (int j = 2; j <= n; j++) ans[j] = in[1][j] / f;

        bool ok = true;
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                if (i == j) continue;
                if (in[i][j] != ans[i] * 1LL * ans[j]) {
                    ok = false;
                    break;
                }
            }
            if (!ok) break;
        }

        if (ok) {
            for (int i = 1; i <= n; i++) cout << ans[i] << ' ';
            return 0;
        }
    }
}