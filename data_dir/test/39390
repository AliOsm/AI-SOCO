#include <sstream>
#include <fstream>
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
#include <cassert>
#include <bitset>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)

#define DEBUG1
#ifdef DEBUG
#define debug(...) fprintf(stderr, __VA_ARGS__)
#define deputs(str) fprintf(stderr, "%s\n",str)
#else
#define debug(...)
#define deputs(str)
#endif // DEBUG
typedef unsigned long long ULL;
typedef unsigned long long ull;
typedef long long LL;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=1000+7;
const double pi=acos(-1.0);
const double eps=0.0000000001;
LL gcd(LL a, LL b) {return b?gcd(b,a%b):a;}
template<typename T>inline void wt2(T x,int k=64) {ll i; rREP(i,k) debug("%d",(x>>i)&1); putchar(' ');}
template<typename T>inline void add_(T &A,int B) {A+=B; (A>=M) &&(A-=M);}
template<typename T>inline void mul_(T &A,ll B) {(A*=B)%=M;}
template<typename T>inline void mod_(T &A,ll B=M) {A%=M;}
template<typename T>inline void max_(T &A,T B) {(A<B) &&(A=B);}
template<typename T>inline void min_(T &A,T B) {(A>B) &&(A=B);}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a, T b) {
	T ret=1;
	for (; b; b>>=1ll,a=(LL)a*a%M)
		if (b&1) ret=(LL)ret*a%M;
	return ret;
}
int n,m;
char str[maxn];
int TaskA();
void Task_one() {TaskA();}
void Task_T() {int T; scanf("%d",&T); while (T--) TaskA();}
void Task_more_n() {while (~scanf("%d",&n)) TaskA();}
void Task_more_n_m() {while (~scanf("%d%d",&n,&m)) TaskA();}
void Task_more_string() {while (~scanf("%s",str)) TaskA();}

char A[maxn][maxn];
ll F[26][maxn][maxn],C[maxn][maxn];
ll B[maxn][maxn];
int X1[300007],X2[300007],Y1[300007],Y2[300007],I[300007];
int TaskA() {
	int i,j,k,T;
	scanf("%d%d%d",&n,&m,&T);
	FOR(i,1,n) scanf("%s",A[i]+1);
	C[1][1]=T;
	FOR(i,1,T){
		int x1,x2,y1,y2; char c;
		scanf("%d%d%d%d%*c%c",&x1,&y1,&x2,&y2,&c);
		X1[i]=x1; X2[i]=x2; Y1[i]=y1; Y2[i]=y2;
		x2++; y2++; c-='a'; I[i]=c;
		F[(int)c][x1][y1]++; C[x1][y1]--;
		F[(int)c][x1][y2]--; C[x1][y2]++;
		F[(int)c][x2][y1]--; C[x2][y1]++;
		F[(int)c][x2][y2]++; C[x2][y2]--;
	}
	REP(k,26) FOR(i,1,n) FOR(j,1,m) F[k][i][j]+=F[k][i-1][j]+F[k][i][j-1]-F[k][i-1][j-1];
	FOR(i,1,n) FOR(j,1,m) C[i][j]+=C[i-1][j]+C[i][j-1]-C[i-1][j-1],F[A[i][j]-'a'][i][j]+=C[i][j];
	REP(k,26) FOR(i,1,n) FOR(j,1,m) B[i][j]+=abs(k+'a'-A[i][j])*F[k][i][j];
	REP(k,26) FOR(i,1,n) FOR(j,1,m) F[k][i][j]+=F[k][i-1][j]+F[k][i][j-1]-F[k][i-1][j-1];
	FOR(i,1,n) FOR(j,1,m) B[i][j]+=B[i-1][j]+B[i][j-1]-B[i-1][j-1];
	ll ans=INFF;
	FOR(i,1,T){
		int x1,x2,y1,y2,c; c=I[i];
		x1=X1[i]; x2=X2[i]; y1=Y1[i]; y2=Y2[i];
		x1--; y1--;
		ll nowans=B[n][m]-(B[x2][y2]-B[x1][y2]-B[x2][y1]+B[x1][y1]);
		REP(k,26) nowans+=(F[k][x2][y2]-F[k][x1][y2]-F[k][x2][y1]+F[k][x1][y1])*abs(k-c);
		ans=min(ans,nowans);
	}printf("%I64d\n",ans);
	return 0;
}
void initialize() {}
int main() {
	int startTime=clock();
	//initialize
	initialize();
	debug("/--- initializeTime: %ld milliseconds ---/\n",clock()-startTime);
	Task_one();
}
/*

*/
