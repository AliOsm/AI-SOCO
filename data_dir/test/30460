#include <bits/stdc++.h>
typedef long long LL;
using namespace std;
#define rep(i,n) for(int i=0;i<n;i++)
#define repe(i,n) for(int i=1;i<=n;i++)
#define mst(A,k) memset(A,k,sizeof(A))
const int N = 500000 + 10;

int num[N];
vector<int> pos;
int main() {
	int n;
	scanf("%d", &n);
	rep(i, n) {
		scanf("%d", num + i);
	}
	int Max = 0, pre = -1;
	for(int i = 0, j; i < n; i = j) {
		j = i + 1;
		while(j < n && num[j] == num[i]) {
			j ++;
		}
		if(j == i + 1) {
			if(i > 0 && i < n - 1) 
				pos.push_back(i);
		}
	}
	//printf("%d\n", pos.size());
	for(int i = 0, j; i < pos.size(); i = j) {
		j = i + 1;
		while(j < pos.size() && pos[j] == pos[j - 1] + 1) {
			j ++;
		}
		Max = max(Max, j - i + 1 >> 1);
		if(j == i + 1) {
			num[pos[i]] ^= 1;
		} else {
			int cnt = j - i >> 1, k = i;
			while(k < i + cnt) {
				num[pos[k]] = num[pos[i] - 1]; 
				k ++;
			}
			while(k < j) {
				num[pos[k]] = num[pos[j-1] + 1];
				k ++;
			}
		}
	}
	printf("%d\n", Max);
	rep(i, n)
		printf("%d ", num[i]);
	puts("");
	return 0;
}

