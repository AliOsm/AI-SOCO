// #pragma GCC optimize("no-stack-protector")
// #pragma GCC diagnostic ignored "-W"

#include<cassert>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<ctime>
#include<algorithm>
#include<iostream>
#include<iomanip>
#include<sstream>
#include<deque>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<bitset>
#include<vector>
#include<utility>

// #include<ext/pb_ds/assoc_container.hpp>
// #include<ext/pb_ds/tree_policy.hpp>

using namespace std;
// using namespace __gnu_pbds;

#define ll long long
#define ld long double
#define X first
#define Y second
#define pb push_back
#define eb emplace_back
#define pii pair<int,int>
#define vint vector<int>
#define SS stringstream
#define PQ priority_queue
#define MS(x,v) memset((x),(v),sizeof(x))
#define RZUNI(x) sort(x.begin(),x.end()), x.resize(unique(x.begin(),x.end())-x.begin())
#define FLH fflush(stdout)
#define CPPinput ios_base::sync_with_stdio(0); cin.tie(0)
#define FIN(fname) freopen(fname,"r",stdin)
#define FOUT(fname) freopen(fname,"w",stdout)

#define tm Ovuvuevuevue
#define y1 Enyetuenwuevue
#define left Ugbemugbem
#define ws Osas
#define dec tetteterette
#define exp expexpexpexp
#define expl explexplexpl

#define YES cout<<"YES"<<endl
#define NO cout<<"NO"<<endl
#define Yes cout<<"Yes"<<endl
#define No cout<<"No"<<endl

#ifdef WEAK
#include"/home/edison/Coding/cpp/template/debug.cpp"
#define DEB(...) printf(__VA_ARGS__),fflush(stdout)
#define WHR() printf("%s: Line %d",__PRETTY_FUNCTION__,__LINE__),fflush(stdout)
#define LOG(...) printf("%s: Line %d ",__PRETTY_FUNCTION__,__LINE__),printf(__VA_ARGS__),fflush(stdout)
#define DEBUG 1
#define exit(x) cout<<"exit code "<<x<<endl, exit(0)
#else
#define PDE(...) ;
#define DEB(...) ;
#define WHR() ;
#define LOG(...) ;
#define DEBUG 0
#endif

#define lowbit(x) ((x)&(-(x)))

#if __cplusplus >= 201103L
#include<unordered_map>
#include<unordered_set>
#include<tuple>
#endif

void JIZZ(string output=""){cout<<output; exit(0);}

const ld PI=3.14159265358979323846264338327950288;
const ld eps=1e-13;
const ll mod=1e9+7;

set<int> son[200005];
int p[200005],dep[200005],deg[200005];
bitset<200005> inq,del;

void dfs(int now){
    for(int i:son[now]){
        dep[i]=dep[now]+1;
        dfs(i);
    }
}
vint ans;
void go(int now){
    if(del[now])return;
    del[now]=1;
    ans.pb(now);
    PDE(now,son[now]);
    for(int i:son[now])go(i);
}

int main(){
    CPPinput;
    int n; cin>>n;
    // if(n<=2)exit((cout<<"NO"<<endl,0));
    int root=0;
    for(int i=1;i<=n;++i){
        int pa; cin>>pa;
        p[i]=pa;
        if(pa>0)son[pa].insert(i);
        else root=i;
        ++deg[i]; ++deg[pa];
    }
    --deg[root];
    dep[root]=1;
    dfs(root);
    auto cmp=[&](const int &a,const int &b){return dep[a]<dep[b];};
    priority_queue<int,vint,decltype(cmp)> pq(cmp);
    for(int i=1;i<=n;++i){
        if(son[i].size()==0)pq.push(i);
    }
    PDE(pq);
    inq[0]=1;
    while(pq.size()){
        int now=pq.top(); pq.pop();
        PDE(pq,now,del[now],deg[now]);
        if(del[now])continue;
        if(deg[now]&1){
            int pa=p[now];
            if(inq[pa])continue;
            pq.push(pa);
            inq[pa]=1;
            continue;
        }
        // ans.pb(now);
        // del[now]=1;
        int pa=p[now];
        --deg[pa];
        son[pa].erase(now);
        if(son[pa].empty()){
            if(inq[pa]);
            else{
                pq.push(pa);
                inq[pa]=1;
            }
        }
        go(now);
    }
    PDE(ans);
    if(ans.size()!=n)exit((cout<<"NO"<<endl,0));
    cout<<"YES"<<endl;
    for(int i:ans)cout<<i<<'\n';
}