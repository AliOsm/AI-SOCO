#include<bits/stdc++.h>
#define mp make_pair
#define ll long long
#define pb push_back
#define ppb pop_back
#define mod 1000000007
#define mx 200011
#define inf 1000000009
#define ff first
#define ss second
using namespace std;
int n,m;
int treemn[5*mx],treemx[5*mx];
void build() {
    for (int i = n - 1; i > 0; --i){
        treemx[i] = max( treemx[i<<1] ,treemx[i<<1|1] );
        treemn[i] = min( treemn[i<<1] ,treemn[i<<1|1] );
    }
}
int querymn(int l,int r){
    int res1=INT_MAX;
    for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
        if (l&1) {
            res1 = min( res1 , treemn[l++] );
        }
        if (r&1) {
            res1 = min( res1 , treemn[--r] );
        }
    }
    return res1;
}
int querymx(int l,int r){
    int res1=-inf;
    for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
        if (l&1) {
            res1 = max( res1 , treemx[l++] );
        }
        if (r&1) {
            res1 = max( res1 , treemx[--r] );
        }
    }
    return res1;
}
int bin(int l,int r){
    int upper,lower,low=l,high=r;
    while(high-low>2){
        int mid=(low+high)>>1;
        if( querymx(l-1,mid)-querymn(l-1,mid)>0 ){
            high=mid;
        }
        else{
            low = mid;
        }
    }
    for(int i=high;i>=low;i--){
        if( querymx(l-1,i)==querymn(l-1,i) ){
            upper=i;
            break;
        }
        if(i==low){
            upper=i;
        }
    }
    low=l,high=r;
    while(high-low>2){
        int mid=(low+high)>>1;
        if( querymx(l-1,mid)-querymn(l-1,mid)<0 ){
            low=mid;
        }
        else{
            high = mid;
        }
    }
    for(int i=low;i<=high;i++){
        if( querymx(l-1,i)==querymn(l-1,i) ){
            lower=i;
            break;
        }
        if(i==high){
            lower=i;
        }
    }
    if(upper==lower && l==r){
        if( treemx[n+upper-1]==treemn[n+lower-1] )return 1;
        else return 0;
    }
    return max( upper-lower+1 , 0 );
}
int  main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",treemx+n+i);
    }
    for(int i=0;i<n;i++){
        scanf("%d",treemn+n+i);
    }
    build();
    ll ans=0;
    for(int i=1;i<=n;i++){
        ans += bin(i,n);
    }
    cout<<ans<<endl;
    return 0;
}
