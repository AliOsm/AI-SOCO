#include<bits/stdc++.h>
using namespace std;

#define MAX 100002

int n;
long long int s;

int lis[MAX];


long long int num(long long int deg){
	long long int cur=1;
	long long int res=n-1;
	long long int dw=1;
	long long int pat=1;
	lis[0]=1;
	while(dw&&(cur<=s)){
		pat++;
		long long int nex=min(res,dw*deg);
		res-=nex;
		dw=nex;
		lis[pat-1]=dw;
		cur+=pat*dw;
	}
	return cur;
}
vector<int> ans;
int main(){
	cin>>n;
	scanf("%lld",&s);
	int lef=1;
	int rig=n;
	if(num(1)<s){
		puts("No");
		return 0;
	}
	while(lef+1<rig){
		int mid=(lef+rig)/2;
		if(num(mid)>s){
			lef=mid;
		}
		else{
			rig=mid;
		}
	}
	int mint=lef;
	int maxt=rig;
	if(num(maxt)>s){
		puts("No");
		return 0;
	}
	if(num(mint)<=s){
		maxt=mint;
	}
	else{
		mint=maxt;
	}
	memset(lis,0,sizeof(lis));
	long long int rest=s-num(mint);
	int bc=0;
	for(int i=0;i<n;i++){
		if(lis[i]==0){
			bc=i;
			break;
		}
	}
	int cur=bc-1;
	while(rest){
		while(lis[cur]==1){
			cur--;
		}
		if(bc-cur<rest){
			rest-=(bc-cur);
			lis[bc]++;
			bc++;
			lis[cur]--;
			continue;
		}
		int go=rest+cur;
		lis[go]++;
		lis[cur]--;
		break;
	}
	int L=1;
	int R=2;
	for(int i=1;i<n;i++){
		int kill=mint;
		for(int j=0;j<lis[i];j++){
			ans.push_back(L);
			kill--;
			if(kill==0){
				L++;
				kill=mint;
			}
		}
		L=R;
		R+=lis[i];
		//cout<<L<<" "<<R<<" "<<lis[i]<<endl;
	}
	puts("Yes");
	for(int i=0;i<ans.size();i++){
		if(i){
			printf(" ");
		}
		printf("%d",ans[i]);
	}
	puts("");
	return 0;
}
