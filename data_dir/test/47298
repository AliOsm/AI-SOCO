#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))

typedef long long ll;

using namespace std;

const int maxk = 40;
int n, nh, nm, num;
unsigned long long a[maxk], dp[2][20], tavan[20], mx, jvb, b[2][20], mxb[2];
string s;
char ans[maxk];

int main()
{
    cin.tie(0);
    tavan[0] = 1;
    for (int i = 1; i < 20; i++)
        tavan[i] = tavan[i - 1] * 10;
    cin >> n >> s;
    for (int i = 0; i < 2 * n; i++)
        a[i] = (int)s[i] - 48;
    for (int i = 0; i < (1 << n); i++)
    {
        jvb = 0;
        num = i;
        nh = nm = n - 1;
        for (int j = 0; j < n; j++)
        {
            if (num & 1)
            {
                jvb += tavan[nm] * a[j];
                nm--;
            }
            else
            {
                jvb += tavan[nh] * a[j];
                nh--;
            }
            num >>= 1;
        }
        if (jvb >= dp[0][__builtin_popcount(i)])
        {
            dp[0][__builtin_popcount(i)] = jvb;
            b[0][__builtin_popcount(i)] = i;
        }
    }
    for (int i = 0; i < (1 << n); i++)
    {
        jvb = nm = nh = 0;
        num = i;
        for (int j = 0; j < n; j++)
        {
            if (num & 1)
            {
                jvb += tavan[nh] * a[2 * n - j - 1];
                nh++;
            }
            else
            {
                jvb += tavan[nm] * a[2 * n - j - 1];
                nm++;
            }
            num >>= 1;
        }
        if (jvb >= dp[1][__builtin_popcount(i)])
        {
            dp[1][__builtin_popcount(i)] = jvb;
            b[1][__builtin_popcount(i)] = i;
        }
    }
    for (int i = 0; i <= n; i++)
    {
        if (dp[0][i] + dp[1][i] >= mx)
        {
            mx = dp[0][i] + dp[1][i];
            mxb[0] = b[0][i];
            mxb[1] = b[1][i];
        }
    }
    for (int i = 0; i < n; i++)
    {
        if (mxb[0] & 1)
            ans[i] = 'M';
        else
            ans[i] = 'H';
        if (mxb[1] & 1)
            ans[2 * n - i - 1] = 'H';
        else
            ans[2 * n - i - 1] = 'M';
        mxb[0] >>= 1;
        mxb[1] >>= 1;
    }
    for (int i = 0; i < 2 * n; i++)
        cout << ans[i];
	return 0;
}
