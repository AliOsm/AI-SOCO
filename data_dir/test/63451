#include <bits/stdc++.h>
using namespace std;

struct P
{
    int x,y;
    long long z[6];
    bool operator<(const P &a)const{
        if(y!=a.y) return y>a.y;
        return x>a.x;
    }
};

vector<P> v[211111],v1;
//bitset<4001000> b;
int i,n,m,k,a,d,b,c;
int e[211111];
long long o[9][222221];
int l[222221];
int j[222221];

int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
int px[10]={-1,1,1,-1,1,1,-1,-1},py[10]={1,1,-1,-1,1,-1,1,-1};
long long mod=1000000007,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[111];
stack<int> s;
//set<int> se[33],s1;

//priority_queue<P> q;
queue<int> q;
string r;

//char r1[10],r[1];
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());

bool as(P a,P b)
{
    //if(a.x!=b.x)
    return a.x<b.x;
    //return a.x<b.x;
    //return a.y<b.y;
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();


void f(int n)
{
    for(int h=0;h<v[n].size();h++)
    if(e[v[n][h].x]<0)
    {
        e[v[n][h].x]=n;
        f(v[n][h].x);
    }
}

void g(int n)
{
    for(int h=0;h<v[n].size();h++)
    if(e[n]!=v[n][h].x)
    {
        g(v[n][h].x);
        if(v[n][h].y)
        {
            v[n][h].z[1]=1+o[1][v[n][h].x];
            v[n][h].z[3]=o[4][v[n][h].x]+o[3][v[n][h].x];
            v[n][h].z[5]=o[5][v[n][h].x]+o[2][v[n][h].x];
            o[1][n]+=1+o[1][v[n][h].x];
            o[3][n]+=o[4][v[n][h].x]+o[3][v[n][h].x];
            o[5][n]+=o[5][v[n][h].x]+o[2][v[n][h].x];
        }
        else
        {
            v[n][h].z[4]=1+o[4][v[n][h].x];
            v[n][h].z[2]=o[1][v[n][h].x]+o[2][v[n][h].x];
            v[n][h].z[5]=o[5][v[n][h].x]+o[3][v[n][h].x];
            o[4][n]+=1+o[4][v[n][h].x];
            o[2][n]+=o[1][v[n][h].x]+o[2][v[n][h].x];
            o[5][n]+=o[5][v[n][h].x]+o[3][v[n][h].x];
        }
    }
    long long y=x;
    x-=o[3][n]+o[2][n]+o[5][n]*2;
    for(int h=0;h<v[n].size();h++)
    if(e[n]!=v[n][h].x)
    {
        for(int i=1;i<6;i++)
        x-=(o[5][n]-v[n][h].z[5])*(v[n][h].z[i]);
        for(int i=1;i<6;i++)
        if(i!=4)
        x-=(o[4][n]-v[n][h].z[4])*(v[n][h].z[i]);
        for(int i=1;i<6;i++)
        //if(i!=4)
        x-=(o[3][n]-v[n][h].z[3])*(v[n][h].z[i]);
        for(int i=1;i<6;i++)
        if(i!=4)
        x-=(o[2][n]-v[n][h].z[2])*(v[n][h].z[i]);
        for(int i=1;i<6;i++)
        if(i!=3&&i!=1&&i!=4)
        x-=(o[1][n]-v[n][h].z[1])*(v[n][h].z[i]);

    }
    //printf("%d %lld\n",n,y-x);
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<a;t++)
    {
        scanf("%d %d %d",&n,&m,&i);
        v[n].push_back({m,i});
        v[m].push_back({n,i});
    }
    memset(e,-1,sizeof(e));
    e[1]=0;
    f(1);
    //puts("!");
    x=(long long)a*(a-1);
    g(1);
    printf("%lld",x);
}
