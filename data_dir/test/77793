//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}


ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int dist[2005];
set<int> edges;


int main(){

    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

    int n, k;
    scanf("%d%d", &n, &k);

    const int OFFSET = 1001;
    while(k--){
        int a;
        scanf("%d", &a);
        edges.insert(n-a);
    }

    memset(dist, -1, sizeof(dist));
    queue<int> qq;
    dist[OFFSET+0] = 0;
    qq.push(OFFSET+0);
    int ans = MOD;
    while(!qq.empty()){

        int v = qq.front();
        qq.pop();

        for(auto it : edges){
            int vv = v + it;
            if(it <= OFFSET+1000 && dist[vv] == -1){
                dist[vv] = 1 + dist[v];
                qq.push(vv);
            }
            if(vv == OFFSET)
                ans = min(ans, 1+dist[v]);
        }
    }

    if(ans == MOD)  ans = -1;
    printf("%d\n", ans);
    return 0;
}


