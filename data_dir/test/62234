#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
set<pair<int,int> >s;
vector<pair<int,int> >e;
int n, m, a, b, ans, col[10];
void dfs(int node){
    if(node > n){
        for(auto i : e){
            if(!s.count({col[i.first], col[i.second]}) && !s.count({col[i.second], col[i.first]}))
                s.insert({col[i.first], col[i.second]});
        }
        ans = max(ans, (int)s.size());
        s.clear();
        return ;
    }
    for(int i = 1; i < 7; i++){
        col[node] = i;
        dfs(node + 1);
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin >> n >> m;
    for(int i = 0; i < m; i++){
        cin >> a >> b;
        e.push_back({a,b});
    }
    dfs(1);
    cout << ans << endl;
    return 0;

}
