#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pl;

ll n;
map<ll, ll> cm;
priority_queue<pair<ll, ll>> sm;
vector<pair<ll, ll>> cards;

ll anw = 1e9;

void solve(ll color) {
    ll half = (n+1)/2;

    for (auto x: cards) {
        if (x.first == color)
            half--;
    }
    ll cnt = 0;
    for (int i = 0; i < n && half>0; i++) {
        auto x = cards[i];
        if (x.second == color && x.first != color) {
            half--;
            cnt++;
        }
    }
    if (half<=0)
        anw = min(anw, cnt);
}

int main() {ios::sync_with_stdio(0); cout.precision(10);
    cin >> n;

    cards.resize(n);

    for (int i = 0; i < n; i++) {
        cin >> cards[i].first >> cards[i].second;
        cm[cards[i].first]++;
        cm[cards[i].second]++;
    }

    for (auto x: cm) {
        sm.push(make_pair(x.second, x.first));
    }

    for (int i = 0; i < 4 && sm.size(); i++) {
        solve(sm.top().second);
        sm.pop();
    }

    if (anw == 1e9) {
        cout << -1 << endl;
    } else {
        cout << anw << endl;
    }
}
