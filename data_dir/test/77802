/* ****GT_18**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  100005

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n;
		cin>>n;
		vi a(n);
		rep(i,0,n)
		cin>>a[i];
		set<pii> k1,k2;
		ll cur=0;
		while(cur<n)
		{
			ll id=cur;
			ll len=0;
			ll num=a[cur];
			while(a[cur]==num)
				cur++,len++;
			k1.insert({-len,id});
			k2.insert({id,len});
		}
		ll ans=0;
		while(!k1.empty())
		{
			// for(auto i:k2)
			// 	cout<<i.F<<" "<<i.S<<endl;
			// cout<<endl;
			ans++;
			pii c=*k1.begin();
			auto it=k2.find({c.S,-c.F}),temp=k2.end();
			temp--;
			pii prev={-1,-1},next={-1,-1};
			if(it!=k2.begin())
			{
				it--;
				prev=*it;
				it++;
			}
			if(it!=temp)
			{
				it++;
				next=*it;
				it--;
			}
			// cout<<prev.F<<" "<<prev.S<<endl;
			// cout<<next.F<<" "<<next.S<<endl;
			k1.erase(c);
			k2.erase({c.S,-c.F});
			if(prev.F==-1||next.F==-1)
				continue;
			if(a[prev.F]==a[next.F])
			{
				k2.erase(prev);
				k2.erase(next);
				k1.erase({-prev.S,prev.F});
				k1.erase({-next.S,next.F});
				k1.insert({-(prev.S+next.S),prev.F});
				k2.insert({prev.F,(prev.S+next.S)});
			}
		}
		cout<<ans;
	}
	return 0;
}