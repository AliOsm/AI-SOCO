#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif

#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <ctime>
#include <cstdlib>
#include <list>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include<unordered_map>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
int dx8[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
int dy8[] = { -1, 1, 0, 0, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0 };
int dx[] = { 0, 0, 1, -1 };
int X[6] = { 0, 0, 0, -1, 0, 1 };
int Y[6] = { 0, 0, -1, 0, 1, 0 };
int Z[6] = { 1, -1, 0, 0, 0, 0 };

// start + (end - start) / 2;

#define OO ll(1e12)
#define MOD ll(1e9+7)
#define BASE 128LL
#define BASEINV (ll)570312504
using namespace std;

long int dp[(int)1e7 + 1][5] = { 0 };

int main() {
	int n;
	scanf("%d", &n);
	dp[0][4] = 1;
	for (int i = 1; i <= 1e7; i++) {
		for (int j = 1; j <= 4; j++) {
			for (int k = 1; k <= 4; k++) {
				if (j == k)continue;
				dp[i][j] = (1ll * dp[i][j] + dp[i - 1][k]);
				while (dp[i][j] >= MOD)dp[i][j] -= MOD;
			}
		}
	}
	printf("%ld\n", dp[n][4]);
}