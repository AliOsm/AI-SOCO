#include<bits/stdc++.h>
using namespace std;

#define endl '\n'
#define D(x) cout << #x << " = " << (x) << endl;

bool found;

void solve (vector<long long> cur, map<long long, int> v, int n) {
  if (cur.size() == n) {
    for (int i = 0; i < n; ++i) cout << cur[i] << " "; cout << endl;
    found = true;
    return;
  }

  long long last = cur[cur.size() - 1];
  long long x = last * 2;
  long long y = last / 3;
  if (v[x] > 0) {
    v[x] --;
    cur.push_back(x);
    if (v[x] == 0) v.erase(x);
    solve(cur, v, n);
    cur.pop_back();
  }

  if (v[y] > 0) {
    v[y] --;
    cur.push_back(y);
    if (v[y] == 0) v.erase(y);
    solve(cur, v, n);
    cur.pop_back();
  }
}

int main() {
  #ifdef ONLINE_JUDGE
    ios_base::sync_with_stdio(0); cin.tie(0);
  #endif

  int n;
  while (cin >> n) {
    map<long long, int> v;

    for (int i = 0; i < n; ++i) {
      long long x;
      cin >> x;
      v[x] ++;
    }

    found = false;
    for (auto i: v) {
      vector<long long> cur;
      cur.push_back(i.first);
      map<long long, int> v2 = v;
      v2[i.first] --;
      if (v2[i.first] == 0) v2.erase(i.first);
      solve(cur, v2, n);
      if (found) break;
    }
  }

  return 0;
}