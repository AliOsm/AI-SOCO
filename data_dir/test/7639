//http://codeforces.com/problemset/problem/165/B

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>

using namespace std;

#define pii pair <int, int>
#define vvi vector <int>
#define ll long long

int size_n, size_k;
int result = 2000000000;
int len = 1;
vector <long long> step(63);

bool check(ll digit);

int main()
{
	int ii;
	int left = 1, center, right;

	cin >> size_n >> size_k;

	right = size_n * 2 - 1;

	for (ii = 1, step[0] = 1; (ii < 63) && (step[ii - 1] < size_n); ii++)
		step[ii] = step[ii - 1] * size_k;

	if (((ii < 63) && (step[ii] != 0)) || (ii == 63))
		len = ii;
	else
		len = max(1, (ii - 1));

	while (right != left)
	{
		center = (left + right) / 2;

		if (check(center))
		{
			result = min(center, result);
			right = center;
			center = (left + right) / 2;
		}
		else
		{
			left = center + 1;
			center = (left + right) / 2;
		}
	}

	if (check(right))
		result = min(right, result);

	cout << result << endl;

	return 0;
}

bool check(ll digit)
{
	int ii;
	ll cur = 0;

	for (ii = 0; (ii < len) && (cur < size_n); ii++)
		cur += digit / step[ii];

	return (cur >= size_n);
}