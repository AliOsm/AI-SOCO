#include<bits/stdc++.h>

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define endl '\n'
#define MAX

typedef long long ll;
typedef pair<int,int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

double sqr(double x){
	return x * x;
}

double dist(double xo, double yo, double xi, double yi){
	return sqrt(sqr(xo - xi) + sqr(yo - yi));
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	cout << setprecision(10) << fixed;
	
	ll a, b, c;
	ll xo, yo, xi, yi;
	
	
	cin >> a >> b >> c >> xo >> yo >> xi >> yi;
	
	double ans = 1.0 * abs(xo - xi) + 1.0 * abs(yo - yi);
	
	if(b == 0 || a == 0){
		cout << ans << endl;
		return 0;
	}
	
	pair<double, double> A1 = {1.0 * xo, (-1.0 * c - 1.0 * a * xo) / (1.0 * b)};
	pair<double, double> B1 = {1.0 * xi, (-1.0 * c - 1.0 * a * xi) / (1.0 * b)};
	pair<double, double> A2 = {(-1.0 * c - 1.0 * b * yo) / (1.0 * a), yo};
	pair<double, double> B2 = {(-1.0 * c - 1.0 * b * yi) / (1.0 * a), yi};
	
	ans = min(ans, dist(A1.first, A1.second, B1.first, B1.second) + dist(xo, yo, A1.first, A1.second) + dist(xi, yi, B1.first, B1.second));
	ans = min(ans, dist(A1.first, A1.second, B2.first, B2.second) + dist(xo, yo, A1.first, A1.second) + dist(xi, yi, B2.first, B2.second));
	ans = min(ans, dist(A2.first, A2.second, B1.first, B1.second) + dist(xo, yo, A2.first, A2.second) + dist(xi, yi, B1.first, B1.second));
	ans = min(ans, dist(A2.first, A2.second, B2.first, B2.second) + dist(xo, yo, A2.first, A2.second) + dist(xi, yi, B2.first, B2.second));
	
	cout << ans << endl;

	return 0;
}

