#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
#define ld  double
#define ll long long
//#define int long long

using namespace std;

const int MAXN = 404 , MOD = 1e9 + 7 ;

int dis[MAXN][MAXN] , n  ;

vector<int> d[MAXN][MAXN];

vector<int> adj[MAXN] ;

ld p[MAXN][MAXN] , dp[MAXN];

inline ld inv(ld x)
{
    return 1 / x ;
}

vector < int > can [MAXN] ;

bool mark[MAXN][MAXN] ;

ld mx[MAXN] ;

inline ld check(int x)
{
    memset(p,0,sizeof p ) ;
    memset(mark,0,sizeof mark) ;
    for(int i = 0 ; i < n ; i ++ ) can[i].clear() ;
    for(int i = 0 ; i < n ; i ++ )
        for(auto u : d[x][i])
            for(auto v : adj[u]){
                p[i][v] += inv(d[x][i].size()*adj[u].size())  ;
                if(!mark[i][v])
                    can[i].pb(v) , mark[i][v] = 1 ;
            }

    for(int i = 0 ; d[x][i].size() ; i ++ )
    {
        dp[i] = inv(d[x][i].size()) ;
        for(int y = 0 ; y < n ; y ++ )
        {
            ld Ans = 0 ;
            vector< pair<int,ld> > v ;
            memset(mx,0,sizeof mx) ;
            for(auto u : can[i])
            {
                if(p[i][u]>mx[dis[y][u]])
                    Ans += p[i][u] - mx[dis[y][u]] , mx[dis[y][u]] = p[i][u] ;
            }

            dp[i] = max(dp[i],Ans) ;
        }
    }
    ld ans = 0 ;
    for(int i = 0 ; d[x][i].size() ; i ++ )
        ans += dp[i] * d[x][i].size() * inv(n) ;
    return ans ;

}

int32_t main()
{
    ios::sync_with_stdio(0) ; cin.tie(0) ;
    memset(dis,31,sizeof dis );
    int m ;
    cin >> n >> m ;
    for(int i = 0 ; i < n ; i ++ ) dis[i][i] = 0 ;
    for(int i = 0 ; i < m ; i ++ ) {int x , y ; cin >> x >> y , dis[y-1][x-1] = dis[--x][--y] = 1 ; adj[x].pb(y) ; adj[y].pb(x); }
    for(int k = 0 ; k < n ; k ++ ) for(int i = 0 ; i < n ; i ++ ) for(int j = 0 ; j < n ; j ++ )
        dis[i][j] = min(dis[i][j],dis[i][k]+dis[k][j]) ;
    for(int i = 0 ; i < n ; i ++  ) for(int j = 0 ; j < n ; j ++ ) d[i][dis[i][j]].pb(j) ;
    ld ans = 0 ;
    for(int i = 0 ; i < n ; i ++ )
        ans = max(ans,check(i))  ;
    cout<<fixed<<setprecision(6)<<ans<<'\n';


}
