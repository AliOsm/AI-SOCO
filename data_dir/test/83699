#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

int ask(int y1, int x1, int y2, int x2) {
  printf("? %d %d %d %d\n", y1+1, x1+1, y2, x2);
  fflush(stdout);
  int res;
  scanf("%d", &res);
  return res;
}

void answer(int y1, int x1, int y2, int x2) {
  printf("! %d %d %d %d\n", y1+1, x1+1, y2+1, x2+1);
  fflush(stdout);
}

int main() {
  int N;
  cin >> N;
  vector<int> ver(N+1);
  vector<int> hor(N+1);
  for (int i = 1; i < N; i++) {
    ver[i] = ask(0,0,N,i) % 2;
    hor[i] = ask(0,0,i,N) % 2;
  }
  int vl = -1;
  int vr = -1;
  int hl = -1;
  int hr = -1;
  for (int i = 0; i <= N; i++) if (ver[i]) vr = i;
  for (int i = N; i >= 0; i--) if (ver[i]) vl = i;
  for (int i = 0; i <= N; i++) if (hor[i]) hr = i;
  for (int i = N; i >= 0; i--) if (hor[i]) hl = i;
  if (vl != -1 && hl != -1) {
    int y[] = {hl-1, hr};
    int x[] = {vl-1, vr};
    vector<pair<int, int>> ans;
    for (int i = 0; i < 2; i++) {
      for (int j = 0; j < 2; j++) {
        if (ask(y[i], x[j], y[i]+1, x[j]+1) % 2 == 1) {
          ans.push_back({y[i], x[j]});
        }
      }
    }
    answer(ans[0].first, ans[0].second, ans[1].first, ans[1].second);
  } else if (vl != -1) {
    int l = 0;
    int r = N;
    while (r - l > 1) {
      int m = (l + r) / 2;
      if (ask(0, 0, m, vl) % 2 == 0) {
        l = m;
      } else {
        r = m;
      }
    }
    answer(l, vl - 1, l, vr);
  } else {
    int l = 0;
    int r = N;
    while (r - l > 1) {
      int m = (l + r) / 2;
      if (ask(0, 0, hl, m) % 2 == 0) {
        l = m;
      } else {
        r = m;
      }
    }
    answer(hl - 1, l, hr, l);
  }
}
