#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#include<map>
#include<iostream>
#include <cstring>
#include <iomanip>
#include <algorithm>
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);

//const double PI  = acos(-1.0);
using namespace std;
//typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef complex<double> point;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//char rv[4]={'D','R','L','U'};
const double EPS = 1e-9;
const int N = 5e5 + 9;
int n,m,ans[N];
int a[N];
ll sum;

 int main()
{
//freopen("circles.in ","r",stdin);
//freopen("circles.out","w",stdout);
//__builtin_popcount()
input
        cin>>n>>m;
        forr(i,1,m)
        {
            cin>>a[i];
            sum+=(ll)a[i];
        }
        if(sum<n)
        {
            cout<<"-1";
            return 0;
        }
        int s = 1 ;
        for(int i=1;i<=m;i++)
        {
            if(s+a[i]-1>n)
            {
                cout<<"-1";
                return 0;
            }
            ans[i]=s;
            sum-=a[i];
            s=max((ll)(s+1),(ll)n-sum+1LL);
        }
        forr(i,1,m)cout<<ans[i]<<" ";



return 0;
}
