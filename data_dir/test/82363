#include <iostream>
#include<algorithm>
#include<string>
#include<map>
#include <iterator>
#include<iomanip>
#include<vector>
#include<cmath>
#include <cstdio>
#include<queue>
#include<stack>
#include<list>
#include<stdio.h>
#include<set>
#include <functional>

#define mod 1000000007
#define mod2 30000000
#define pa(a,b) make_pair(a,b)
#define f first
#define s second
#define pb(a)  push_back(a)
#define all(a) a.begin() , a.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define LL  long long int
#define oo 1e9
#define pi 3.14159265359
#define eps  1e-9



LL maxx(LL a , LL b){ return a>b ?  a : b ;}
LL minn(LL a , LL b){ return a>b ?  b : a ;}

using namespace std;
int dx[] = {1 , 1 ,1 , 0 , 0  , -1 , -1  , -1  , 0 };
int dy[] = { -1 , 0  , 1 , 1 , -1 , 0 , 1 , -1 , 0 };
void boostIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
LL gcd(LL a, LL b) {
    return b == 0 ? a : gcd(b, a % b);
}
LL lcm(LL a , LL b )
{
    return (a*b)/gcd(a , b);
}
LL poww(LL base, LL exp){
  base %= mod;
  LL result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}
map<int , int>mp;
int main()
{
    int n , k ; cin >> n >> k ;
    vector<int>a;
    for(int i = 0 ; i < n ; i++){
        int x; cin >> x ;
        if(mp[x] == 0)
            a.pb(x) ;
        mp[x]++ ;
    }
    sort(all(a))  ;
    int ans = 0 ;
    bool vis[300300] = {0} ;
    for(int i = 0 ; i < (int)a.size() - 1 ; i++){

        if(vis[i])
            continue ;
        int take = a[i] ;

        if(a[i] < a[i + 1] && a[i] + k >= a[i + 1])
            ans = ans + mp[a[i]] ;
    }


    cout << n - ans << endl ;
}
