#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll N= 1e5 + 5;
const ll mod=1e9 + 7;
#define debug(x) cerr<<#x<<" is "<<x<<endl;

ll n,m,d,x,u,v,a,b;
set<ll> st;
vector<ll> adj[N];
void dfs(ll src,ll pr,vector<ll>&arr){
    arr[src]=arr[pr]+1;
    for(ll i=0;i<adj[src].size();i++)
        if(adj[src][i]!=pr)
            dfs(adj[src][i],src,arr);
}

set<ll> bfs(ll src){
    queue< pair<ll,ll> >q;
    vector<bool>visited(n+1,false);
    set<ll> val;
    q.push(make_pair(src,0));
    while(!q.empty()){
        ll dist = q.front().second;
        ll node = q.front().first;
        q.pop();
        visited[node]=true;
        if(dist>d)return val;
        val.insert(node);
        for(ll i=0;i<adj[node].size();i++){
            if(!visited[adj[node][i]] && !val.count(adj[node][i]))
                q.push(make_pair(adj[node][i] , dist+1));

        }
    }
    return val;
}
int main(){
    ios::sync_with_stdio(false);
    cin>>n>>m>>d;
    for(ll i=0;i<m;i++)cin>>x,st.insert(x);
    for(ll i=0;i<n-1;i++){
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    if(m==1){
        cout<<bfs(*st.begin()).size();
        return 0;
    }
    vector<ll> dist(n+1,-1);
    dfs(*st.begin(),0,dist);
    a=*st.begin();
    for(ll i=1;i<=n;i++){
        if(dist[i]>dist[a] && st.count(i))
            a=i;
       // dist[i]=-1;
    }
    for(ll i=1;i<=n;i++)dist[i]=-1;
    dfs(a,0,dist);
    b=a;
   /* cout<<a<<endl<<"SET: ";
    for(set<ll>::iterator itr=st.begin();itr!=st.end();itr++)cout<<*itr<<" ";
    cout<<endl;*/
    for(ll i=1;i<=n;i++){
       // cout<<"NODE: "<<i<<" "<<dist[i]<<endl;
        if(dist[i]>dist[b] && st.count(i))
            b=i;
       // dist[i]=-1;
    }
   // cout<<a<<" "<<b<<endl;
    set<ll> reachable_a=bfs(a);
    set<ll> reachable_b=bfs(b);
    ll ans = 0;
    for(set<ll>::iterator itr=reachable_a.begin();itr!=reachable_a.end();itr++)
        if(reachable_b.count(*itr))
            ans++;
    cout<<ans;

}


