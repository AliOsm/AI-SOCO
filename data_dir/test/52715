//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 10;

int mark[N], par[N];
vector < int > adj[N], cmp[N], a;
set < int > ver;

void dfs(int v, int id){
	mark[v] = 1;
	cmp[id].push_back(v);
	for (int u : adj[v]){
		if (!mark[u]){
			par[u] = v;
			dfs(u, id);
		}
	}
}

int main(){
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int n, m, d;
	cin >> n >> m >> d;
	for (int i = 0; i < m; i ++){
		int u, v;
		cin >> u >> v;
		if (u == 1 || v == 1)
			ver.insert(1 ^ u ^ v);
		else{
			adj[v].push_back(u);
			adj[u].push_back(v);
		}
	}
	int cnt = 0;
	for (int i = 2; i <= n; i ++)
		if (!mark[i])
			dfs(i, cnt), cnt ++;
	if (d < cnt || ver.size() < d)
		return cout << "NO", 0;
	fill(mark, mark + N, 0);
	for (int i = 0; i < cnt; i ++){
		for (int v : cmp[i]){
			if (ver.find(v) != ver.end()){
				mark[v] = 1;
				par[v] = 1;
				ver.erase(v);
				a.push_back(v);
				break;
			}
		}
	}
	mark[1] = 1;
	auto itr = ver.begin();
	for (int i = 0; i < d - cnt; i ++){
		int v = *itr;
		mark[v] = 1;
		par[v] = 1;
		itr ++;
	}
	itr = ver.begin();
	for (int i = 0; i < d - cnt; i ++){
		int v = *itr;
		dfs(v, 0);
		itr ++;
	}
	for (int v : a)
		dfs(v, 0);
	cout << "YES\n";
	for (int i = 2; i <= n; i ++)
		cout << i << ' ' << par[i] << '\n';
	return 0;
}