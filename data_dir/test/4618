#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Try different approaches
using namespace std;

long long n, l, r;

int good(long long idx, long long len, long long curr)
{
	//cout << idx << " " << len << " " << curr << "\n";
	if(len / 2 + 1 == idx)
		return curr % 2;
	else if(len == 1)
		return 1;
	else if(idx > len / 2 + 1)
		return good(idx - len / 2 - 1, len / 2, curr / 2);
	return good(idx, len / 2, curr / 2);
}

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> l >> r;

	long long temp = n;
	int x = 0;
	while(temp > 0)
	{
		temp /= 2;
		x++;
	}

	long long len = 1;
	for(int i = 0; i < x; i++)
		len *= 2;
	len--;	

	int counter = 0;
	for(long long i = l; i <= r; i++)
	{
		if(good(i, len, n) == 1)
			counter++;
	}

	cout << counter << "\n";
	return 0;
}