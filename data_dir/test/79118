#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma comment(linker, "/STACK:16777216")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pd;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define all(x) (x).begin(), (x).end()
//#define int ll

void FAST_IO() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifdef _offline
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif // _offline
}

const ll INF = 1e18;
const int MAXN = 2050;
ll a[MAXN], b[MAXN], ma[MAXN], mb[MAXN];

signed main() {
    FAST_IO();
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    for (int i = 0; i < m; ++i) {
        cin >> b[i];
    }
    ll x;
    cin >> x;
    fill(ma, ma + MAXN, INF);
    fill(mb, mb + MAXN, INF);
    for (int i = 0; i < n; ++i) {
        ll sum = 0;
        for (int j = i; j < n; ++j) {
            sum += a[j];
            ma[j - i + 1] = min(ma[j - i + 1], sum);
        }
    }
    for (int i = 0; i < m; ++i) {
        ll sum = 0;
        for (int j = i; j < m; ++j) {
            sum += b[j];
            mb[j - i + 1] = min(mb[j - i + 1], sum);
        }
    }
    int ans = 0;
    for (int a = 1; a <= n; ++a) {
        for (int b = 1; b <= m; ++b) {
            if (ma[a] * mb[b] <= x) {
                ans = max(ans, a * b);
            }
        }
    }
    cout << ans;
}
