#pragma comment(linker, "/STACK:256000000")
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<cstring>
#include<algorithm>
#include<cmath>
#include <set>
#include <queue>
#include <map>
#include <vector>
#include <unordered_map>
#include <assert.h>

using namespace std;

#define mp make_pair
#define pub push_back
#define con continue
#define forn(i, n) for (int i = 0; i < int(n); ++i)
#define fornr(i, n) for (int i = n - 1; i >= 0; --i)
#define forab(i, a, b) for (int i = (a); i <= int(b); ++i)
typedef long long ll;
typedef pair <int, int> pii;
typedef vector <int> vi;
typedef vector < pii > vii;
typedef vector < vector < int> > vvi;
typedef vector < vector < pair < int, int > > > vvii;

const int ZEROS = (int)(1E+2 * 5 + 100);
const int INF = (int)1E+9;

set <string> log_set;
int n; string lg;

void change_set(string &s) {
	forn(i, (int)s.size()) {
		if (s[i] >= 'a' && s[i] <= 'z')
			s[i] = s[i] - 'a' + 'A';

		if (s[i] == 'O')
			s[i] = '0';
		if (s[i] == 'I' || s[i] == 'L')
			s[i] = '1';

	}
}

void solve() {
	change_set(lg);
	if (!log_set.count(lg))
		cout << "Yes";
	else
		cout << "No";
}

int main() {
#ifdef  _DEBUG
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> lg >> n;
	forn(i, n) {
		string s;
		cin >> s;
		change_set(s);
		log_set.insert(s);
	}
	solve();
}
