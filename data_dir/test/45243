
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vli  = vector < li        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 2e5 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);


int n , m;

bool vis[N];
int a[N];
int ans[N];

int dfs(int u , int d){
    vis[u] = 1;
    ans[u] = d;
    if(!vis[a[u]]){
            ans[u] = max(ans[u] , dfs(a[u] , d + 1));
    }
    return ans[u];
}

void solve(int testCase){

    scanf("%d" , &n);

    for(int i = 1 ; i <= n ; i ++){
            scanf("%d" , &a[i]);
            vis[i] = 0;
            ans[i] = 0;
    }

    for(int i = 1 ; i <= n ; i ++){
            if(!vis[i]){
                    dfs(i , 1);
            }
    }

    for(int i = 1 ; i <= n ; i ++){
            printf("%d%c" , ans[i] , i == n ? '\n' : ' ');
    }

}

main(){

    int t = 1;
    scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
