//Pham Huu Canh
//C. Logo Turtle
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "c.inp"
#define foo "c.out"
#define MOD 1000000007

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;

char s[105];
bool dp[105][55][222];

void input()
{
    int i, j, k, n, len;
    int add = 101;
    
    scanf("%s %d", &s, &n);
    
    len = strlen(s);
    dp[0][0][add] = true;
    fori(i, len)
        repi(j, 0, n)
            repi(k, -100, 100)
                if (dp[i][j][k + add]){
                    if (s[i] == 'F')    dp[i+1][j][k + add + 1] = dp[i+1][j+1][-k + add] = true;
                    else dp[i+1][j][-k + add] = dp[i+1][j+1][k + add + 1] = true;
                }
    
    int res = 0;
    for (i = n; i >= 0; i -= 2)
        repi(j, -100, 100)  
            if (dp[len][i][j + add])    res = timmax(res, abs(j));
    printf("%d", res);
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
