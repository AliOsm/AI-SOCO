//**KEEP IT SHORT AND SIMPLE**

#include <bits/stdc++.h>
#define IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define REP(i,a,b) for (int i = a; i < b; i++)
#define NL '\n'
#define F first
#define S second
#define dot(a, b) (conj(a) * (b)).real()
#define cross(a, b) (conj(a)* (b)).imag()
using namespace std;
typedef long long ll;
typedef long double ld;
typedef bool bl;
typedef vector < vector<long long> > vvl;
typedef vector <long long> vll;
typedef pair <long long, long long> pll;
typedef map <long long, long long> mll;
typedef map <long long, bool> mlb;
typedef priority_queue<long long, vector<long long>, greater<long long> > minPq;
typedef tuple<ll, ll, ll> line;
typedef complex<double> point;
const double pi = 2 * acos(0.0);
int OO = 0x3f3f3f3f;
ll mp[200010];
int main()
{
    IO
    ll n;
    cin >> n;
    ll arr[n], Max = -1, elem, index = -1;
    REP(i, 0, n)
    {
        cin >> arr[i];
        mp[arr[i]]++;
        if(mp[arr[i]] > Max)
        {
            Max = mp[arr[i]];
            elem = arr[i];
            index = i;
        }
    }
    vector< pair<ll, pll> > v;
    REP(i, index + 1, n)
    {
        if(arr[i] < elem)
            v.push_back({1, {i, i - 1}});
        else if(arr[i] > elem)
            v.push_back({2, {i, i - 1}});
    }
    for(int i = index - 1;i >= 0;i--)
    {
        if(arr[i] < elem)
            v.push_back({1, {i, i + 1}});
        else if(arr[i] > elem)
            v.push_back({2, {i, i + 1}});
    }
    cout << v.size() << NL;
    REP(i, 0, v.size())
        cout << v[i].F << ' ' << v[i].S.F + 1 << ' ' << v[i].S.S + 1 << NL;
    return 0;
}
