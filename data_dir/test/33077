#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define ld long double
#define F first
#define S second 
#define int long long

using namespace std;

const int MAXN = 100 , MOD = 1e9 + 7 ;

ld p[MAXN][MAXN] ; 

ld dp[MAXN][20] ; 

ld pp[MAXN][20] ; 

int32_t main() 
{
	ios::sync_with_stdio(0) ; cin.tie(0) ; 
	int m , n  ; 
	cin >> m ; 
	n = (1<<m) ;
	ld x ;
	for(int i = 0 ; i < n ; i ++ ) for(int j = 0 ; j < n ; j ++ ) cin >> x , p[i][j] = x / 100. ; 
	for(int i = 0 ; i < n ; i ++ ) dp[i][0] = 1. , pp[i][0] = 0. ; 
	ld ans = 0. ; 
	for(int k = 1 ; k <= m ; k ++ ) 
	{

		for(int i = 0 ; i < n ; i += (1<<k))
		{
			ld mx = 0. ; 
			vector<int> v1 , v2 ; 
			for(int j = i ; j < i + (1<<k) ; j ++ ) 
			{
				if(j<i+(1<<(k-1)))
					v1.pb(j) ; 
				else 
					v2.pb(j) ;
			}

			for(auto u : v1) for(auto v : v2) dp[u][k] += dp[u][k-1] * dp[v][k-1] * p[u][v] , mx = max(mx,dp[u][k]) ; 
			for(auto u : v2) for(auto v : v1) dp[u][k] += dp[u][k-1] * dp[v][k-1] * p[u][v] , mx = max(mx,dp[u][k]) ;

			for(auto u : v1) pp[u][k] = pp[u][k-1] ; 
			for(auto u : v2) pp[u][k] = pp[u][k-1] ; 
			for(auto u : v1) for(auto v : v2) 
			{
				ld xx = pp[u][k-1] + pp[v][k-1] ; 
				for(auto mm : v2) xx += dp[u][k-1]*dp[mm][k-1]*p[u][mm]*(1<<(k-1)) ; 
				pp[u][k] = max(pp[u][k],xx) ;
			}
			for(auto u : v2) for(auto v : v1) 
			{
				ld xx = pp[u][k-1] + pp[v][k-1] ; 
				for(auto mm : v1) xx += dp[u][k-1]*dp[mm][k-1]*p[u][mm]*(1<<(k-1)) ; 
				pp[u][k] = max(pp[u][k],xx) ;
			}
		}
	}
	//for(int i = 0 ;  i < n ; i ++ ) cout << pp[i][1] << ' ' << pp[i][2] << endl ; 
	ans = 0. ; 
	for(int i = 0 ; i < n ; i ++ ) ans = max(ans,pp[i][m]) ; 
	cout << fixed << setprecision(9) << ans << endl ; 
}
