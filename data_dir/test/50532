#include<bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define ll long long
#define maxn 200005
#define fr(i,j,k) for(int i=j;i<k;i++)
#define f(n) fr(i,0,n)
#define f1(n) fr(i,1,n+1)
#define ms(i) memset(i,0,sizeof(i));
#define ms1(i) memset(i,-1,sizeof(i));
#define F first
#define S second
struct seg
{
	ll l,r;
	int idx;
};
bool cmp(seg x,seg y){
	return x.l < y.l;
}
int main(){
	int n,k;
	cin >> n >> k;
	vector<seg>v;
	f1(n){
		ll l,r;
		cin >> l >> r;
		v.pb({l,r,i});
	}
	sort(v.begin(),v.end(),cmp);
	ll l=-1e10;
	multiset<pair<ll,int> >st;
	ll ans = 0;
	f(k){
		st.insert({v[i].r,v[i].idx});
		l = max(l,v[i].l);
	}
	ans = max(st.begin()->F - l + 1,0LL);
	fr(i,k,n){
		st.erase(st.begin());
		l = max(l,v[i].l);
		st.insert({v[i].r,v[i].idx});
		ans = max(st.begin()->F - l + 1,ans);
	}
	cout << ans << endl;
	st.clear();
	ll cur = 0;
	l = -1e10;
	f(k){
		st.insert({v[i].r,v[i].idx});
		l = max(l,v[i].l);
	}
	cur = max(st.begin()->F - l + 1,0LL);
	if(cur == ans){
		for(auto i:st){
			cout<<i.S<<' ';
		}
		cout << endl;
		exit(0);
	}
	fr(i,k,n){
		st.erase(st.begin());
		l = max(l,v[i].l);
		st.insert({v[i].r,v[i].idx});
		cur = max(st.begin()->F - l + 1,0LL);
		if(cur == ans){
			for(auto j:st){
				cout<<j.S<<' ';
			}
			cout << endl;
			exit(0);
		}
	}
}