/*
    __                      _    _            __                 __
   / /_/\__        __ _    | | _| | __     _  \ \       __/\__  / /
  / /\    /       / _` |   | |/ / |/ /    (_)  | |      \    / / / 
 / / /_  _\      | (_| |   |   <|   <      _   | |      /_  _\/ /  
/_/    \/         \__,_|___|_|\_\_|\_\    (_)  | |        \/ /_/   
                      |_____|                 /_/                  

*/
#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
using namespace std;
const long double pi = 3.14159265358979323;
const double EPS = 1e-12;
const int N = 1005;
const int MOD = 998244353;

ll n, k;
ll dp[N][2 * N][2][2] ;

ll ad(ll a, ll b){
    return((a % MOD + b % MOD) % MOD);
}
ll mul(ll a, ll b){
    return(((a % MOD) * (b % MOD)) % MOD);
}

ll go(ll idx, ll a, ll b, ll ct){
	ll res = 0;
	if(idx == n + 1){
		if(ct == k) return 1;
		return 0;
	}
	if(dp[idx][ct][a][b] != -1) return dp[idx][ct][a][b];
	if(a == b){
		res = ad(res, go(idx + 1, a, b, ct));
		res = ad(res, go(idx + 1, a, b ^ 1, ct + 1));
		res = ad(res, go(idx + 1, a ^ 1, b, ct + 1));
		res = ad(res, go(idx + 1, a ^ 1, b ^ 1, ct + 1));
	}
	else{
		res = ad(res, go(idx + 1, a, b, ct));
		res = ad(res, go(idx + 1, b, a, ct + 2));
		res = ad(res, go(idx + 1, a, a, ct));
		res = ad(res, go(idx + 1, b, b, ct));
	}
	if(res < 0) cout << res << "\n";
	dp[idx][ct][a][b] = res;
	return res;
}

int main(){
	fast;
	ll ans = 0;
	memset(dp, -1, sizeof(dp));
	cin >> n >> k;
	ans = ad(ans, mul(2, go(2, 0, 0, 1)));
	ans = ad(ans, mul(2, go(2, 0, 1, 2)));
	cout << ans;
	
	return 0;
}
/*
 check for corner cases(n == 1?)
 read the highlighted part again
 check nested for loops, flags, and breaks
*/