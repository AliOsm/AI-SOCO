//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7;

int t, n, k;

int sz[N], a[N], b[N], c[N];

vector<int> g[N];

ll mn, mx;

void dfs(int v,int p = -1){
	sz[v] = 1;
	for(int id : g[v]){
		int to = a[id]^b[id]^v;
		if(to == p) continue;
		dfs(to, v);

		mn += (sz[to] % 2) * c[id];
		mx += 1ll * min(sz[to], n - sz[to]) * c[id];
		sz[v] += sz[to];
	}

}

void solve(){
	scanf("%d", &k);
	n = 2 * k;
	mn = mx = 0;
	for(int i = 1; i <= n; i++){
		g[i].clear(); 
	}
	for(int i = 1; i < n; i++){
		scanf("%d%d%d", &a[i], &b[i], &c[i]);
		g[a[i]].pb(i);
		g[b[i]].pb(i);
	}
	dfs(1);
	printf("%lld %lld\n", mn, mx);
}

int main () {
	scanf("%d", &t);
	while(t--){
		solve();
	}
 
return 0;
}