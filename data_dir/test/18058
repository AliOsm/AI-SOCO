#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
#include <utility>

using namespace std;

inline int max_first (const pair<int, int>& m, const pair<int, int>& a)
{
	return a.first > m.first;
}

inline int min_second (const pair<int, int>& a, const pair<int, int>& m)
{
	return a.second < m.second;
}

inline pair<int, int> read_pair()
{
		pair<int, int> p;
		cin >> p.first >> p.second;
		return p;
}

int main()
{
	vector<pair<int, int>> a, b;

	generate_n (back_inserter(a), *istream_iterator<int>(cin), read_pair); 

	generate_n (back_inserter(b), *istream_iterator<int>(cin), read_pair);

	int d1 = max_element (a.begin(), a.end(), max_first)->first -
		     min_element (b.begin(), b.end(), min_second)->second;

	int d2 = max_element (b.begin(), b.end(), max_first)->first -
	         min_element (a.begin(), a.end(), min_second)->second;
		
	cout << (d1 <= 0 && d2 <= 0 ? 0 : max (d1, d2));
}
