//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}

const int N = 200002;
int ans, sz, cnt_2, reach_A[N], reach_B[N], a, b, h, w;
vector<ll> arr;


void process(){

// cout<<sz<<endl;
	for(int mask=0;mask<(1<<sz);mask++){

// cout<<"\nat mask "<<mask<<endl;

		ll val1 = w, val2 = h;
		int z = 0;
		for(int i=0;i<sz;i++)
			if((mask >> i) & 1){
				if(val1 < a){
					val1 *= arr[(int)arr.size()-1-i];
					z++;
// cout<<"multiplied val1 with "<<arr[(int)arr.size()-1-i]<<endl;
				}
			}
			else{
				if(val2 < b){
					val2 *= arr[(int)arr.size()-1-i];
// cout<<"multiplied val2 with "<<arr[(int)arr.size()-1-i]<<endl;
					z++;
				}
			}

// cout<<z<<" "<<val1<<" "<<val2<<endl;

		int needed = 0;
		if(val1 < a)
			needed += reach_A[val1];
		if(val2 < b)
			needed += reach_B[val2];

// cout<<needed<<endl;

		if(needed <= cnt_2)
			ans = min(ans, z + needed);
	}
}



int main(){
 
    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

	int n;
	scanf("%d%d%d%d%d", &a, &b, &h, &w, &n);
	while(n--){
		int x;
		scanf("%d", &x);
		if(x == 2)	cnt_2++;
		else	arr.pb(x);
	}


	for(int i=1;i<=a;i++){
		ll temp = i;
		while(temp < a){
			temp *= 2;
			reach_A[i]++;
		}
	}

	for(int i=1;i<=b;i++){
		ll temp = i;
		while(temp < b){
			temp *= 2;
			reach_B[i]++;
		}
	}

	sort(arr.begin(), arr.end());

	if(h >= a && w >= b){
		printf("0\n");
		return 0;
	}

	if(h >= b && w >= a){
		printf("0\n");
		return 0;
	}

	ans = MOD;
	sz = min((int)arr.size(), 22);

	process();
	swap(h, w);
	process();

	if(ans == MOD)	ans = -1;
	printf("%d\n", ans);
    return 0;
}







