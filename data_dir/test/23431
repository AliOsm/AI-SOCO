/// In The Name Of God

#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>
#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * 1ll * (x))
#define all(x) x.begin(), x.end()

#define rep(i, l, r) for (int i = (l); i <= (r); i++)
#define per(i, l, r) for (int i = (l); i >= (r); i--)

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)10000 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

int n;
string a[N];
map <string, int> cnt, last;
void add(int id) {
	string s;
	cin >> s;
	a[id] = s;
	map <string, int> was;
	rep(i, 0, sz(s) - 1) {
		string cur;
		rep(j, i, sz(s) - 1) {
			cur += s[j];
			if (!was.count(cur)) {
				was[cur] = 1;
				cnt[cur]++;
				if (!last.count(cur)) last[cur] = id;
			}
 		}
	}
}
int main() {
	#ifdef IOI2018
		freopen ("in.txt", "r", stdin);
	#endif
	Kazakhstan
	cin >> n;
	rep(i, 1, n) {
		add(i);
	}
	int q;
	cin >> q;
	rep(i, 1, q) {
		string x;
		cin >> x;
		if (!cnt.count(x)) cout << 0 << ' ' << "-" << nl;
		else cout << cnt[x] << ' ' << a[last[x]] << nl;
	}
	ioi
}
