#include <bits/stdc++.h>
#define ff first
#define ss second
using namespace std;
#define MP make_pair
#define PB push_back
#define ll long long
#define int long long
#define f(i,x,n) for(int i=x;i<n;i++)
#define ld long double
#define mod 1000000007

#define SZ 1001
int a[1001],b[1001];
int A[SZ],sz[SZ];
void init(int n)
{
	f(i,0,n+1)
	{
		sz[i]=1;
		A[i]=i;
	}
}
int find(int i) 
{
	while (A[i] != i) 
	{
		A[i] = A[A[i]];
		i = A[i];
	}
	return i; 
} 
int _union(int xr, int yr) 
{
	xr=find(xr),yr=find(yr);
	// cout<<xr<<" "<<yr<<endl;
	if(xr==yr)
		return -1;
	if(sz[xr]<sz[yr])
	{ 
		A[xr]=A[yr];
		sz[yr]+=sz[xr];
	}
	else
	{
		A[yr]=A[xr];
		sz[xr]+=sz[yr];
	}
	return 0;
}

int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	init(1000);
	vector <pair <int,int> > ans;
	int n;
	cin>>n;
	f(i,0,n-1)
	{
		cin>>a[i]>>b[i];
		int val=_union(a[i],b[i]);
		if(val==-1)
			ans.push_back({a[i],b[i]});
	}
	vector <pair <int,int> > ans2;
	int i=find(1);
	f(j,2,n+1)
	{
		if(find(j)!=find(i))
		{
			ans2.push_back({j,i});
			_union(j,i);
		}
	}
	cout<<ans.size()<<endl;
	int nn=ans.size();
	if(nn>0)
	f(i,0,nn)
	{
		cout<<ans[i].ff<<" "<<ans[i].ss<<" "<<ans2[i].ff<<" "<<ans2[i].ss<<endl;
	}
	return 0;
}