#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>
#include <math.h>
#include <vector>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int n,l[N],r1,c1,r2,c2;
int dis[110][N];

#define pb push_back
#define sz(x) (int((x).size()))

struct data
{
	int x,y;
	data(int x,int y):x(x),y(y) {}
	data();
};

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",l+i),l[i]++;
	memset(dis,-1,sizeof(dis));
	scanf("%d%d%d%d",&r1,&c1,&r2,&c2);
	queue<data> que;
	que.push(data(r1,c1));
	dis[r1][c1]=0;
	while(sz(que))
	{
		data da=que.front();
		que.pop();
		int x=da.x,y=da.y;
		// cout<<x<<" "<<y<<" "<<dis[x][y]<<endl;
		if(x!=1)
		{
			int xx=x-1;
			int yy=y;
			if(yy>l[xx]) yy=l[xx];
			if(dis[xx][yy]==-1)
			{
				dis[xx][yy]=dis[x][y]+1;
				que.push(data(xx,yy));
			}
		}
		if(x!=n)
		{
			int xx=x+1;
			int yy=y;
			if(yy>l[xx]) yy=l[xx];
			if(dis[xx][yy]==-1)
			{
				dis[xx][yy]=dis[x][y]+1;
				que.push(data(xx,yy));
			}
		}
		if(y>1)
		{
			int xx=x;
			int yy=y-1;
			if(yy>l[xx]) yy=l[xx];
			if(dis[xx][yy]==-1)
			{
				dis[xx][yy]=dis[x][y]+1;
				que.push(data(xx,yy));
			}
		}
		if(y+1<=l[x])
		{
			int xx=x;
			int yy=y+1;
			if(yy>l[xx]) yy=l[xx];
			if(dis[xx][yy]==-1)
			{
				dis[xx][yy]=dis[x][y]+1;
				que.push(data(xx,yy));
			}
		}
	}
	cout<<dis[r2][c2]<<endl;
	return 0;
}