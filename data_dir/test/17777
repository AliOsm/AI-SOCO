#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define dbg(x) cout << #x << " " << x << endl;
const int N = 1e3 + 5;
ll dp[N][22];
int l, r;
bool vis[N][22];
ll get_max(int n, int indx) {
	if (indx > r) return -2e9;
	if (n == 0) {
		if (indx >= l) return 0;
		return -2e9;
	}
	ll &ret = dp[n][indx];
	if (vis[n][indx]) return ret;
	vis[n][indx] = 1;
	ret = -2e9;
	for (ll i = 1; i <= n; i++) {
		ll take = i * (1 << indx);
		ret = max(ret, get_max(n - i, indx + 1) + take);
	}
	return ret;

}
ll get_min(int n, int indx) {
	if (indx > r) return 2e9;
	if (n == 0) {
		if (indx >= l) return 0;
		return 2e9;
	}
	ll &ret = dp[n][indx];
	if (vis[n][indx]) return ret;
	vis[n][indx] = 1;
	ret = 2e9;
	for (ll i = 1; i <= n; i++) {
		ll take = i * (1 << indx);
		ret = min(ret, get_min(n - i, indx + 1) + take);
	}
	return ret;

}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin >> n >> l >> r;
	cout << get_min(n, 0);
	cout << " ";
	memset(vis, 0, sizeof vis);
	cout << get_max(n, 0);
	return 0;
}
