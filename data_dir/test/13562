#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <set>
#include <list>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
const ll MOD = 1e9 + 7;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v; queue<int> q; deque<int> dq;

char pre[100][10];
char now[100][10];
multiset<int> se[10];

// s, m, l
// 0, 1, 2
int main() {
	int n;
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%s", pre[i]);
		int len = strlen(pre[i]);
		if (pre[i][len - 1] == 'S') se[len].insert(0);
		if (pre[i][len - 1] == 'M') se[len].insert(1);
		if (pre[i][len - 1] == 'L') se[len].insert(2);
	}

	for (int i = 0; i < n; i++) {
		scanf("%s", pre[i]);
		int len = strlen(pre[i]);
		if (pre[i][len - 1] == 'S') {
			auto k = se[len].find(0);
			if (k != se[len].end()) se[len].erase(k);
		}
		if (pre[i][len - 1] == 'M') {
			auto k = se[len].find(1);
			if (k != se[len].end()) se[len].erase(k);
		}
		if (pre[i][len - 1] == 'L') {
			auto k = se[len].find(2);
			if (k != se[len].end()) se[len].erase(k);
		}
	}
	
	int sum = 0;
	for (int i = 0; i < 10; i++)
		sum += sz(se[i]);

	printf("%d", sum);
}