// Problem name :
// Algorithm :
// Contest/Practice : Up Solving
// Source :
// Comment :
// Date :

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<assert.h>


#define pause system("pause")
#define FOR(s,e,inc) for(int i=s;i<=e;i+=inc)
#define mod 1000000007
#define inf 1<<30
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define F first
#define S second
#define sz(x) ((int)x.size())
#define sqr(x) ( (x)* (x) )
#define eps 1e-9
#define gcd(x,y) __gcd(x,y)
#define on(x,w)  x=x|(1<<w)
#define check(x,w) (x&(1<<w))==(1<<w)?true:false
#define all(x) (x).begin(),(x).end()
#define pf printf

typedef long long ll;
typedef unsigned long long ull;

using namespace std;


template<class T>
inline T mod_v(T num)
{
    return (num%mod+mod)%mod;
}

template<class T>
inline void memset1(vector<T>&v,int s,T value)
{
    for(int i=0;i<s;i++)
        v[i]=value;
}

template<class T>
inline void memset2(vector<vector<T> >&v,int s1,int s2,T value)
{
    for(int i=0;i<s1;i++)
        for(int j=0;j<s2;j++)
            v[i][j]=value;
}


template<class T>
T fast_pow(T n , T p)
{
    if(p==1) return n;
    if(p%2)
    {
        int g=mod_v ( mod_v(n) * mod_v(fast_pow(n,p-1)) );
        return g;
    }
    else
    {
        int g=fast_pow(n,p/2);
        g=mod_v( mod_v(g) * mod_v(g) ) ;
        return g;
    }
}

template<class T>
inline T modInverse(T n)
{
    return fast_pow(n,mod-2);
}

#ifndef ONLINE_JUDGE
#  define p(x) cout<<x<<endl;
#else if
#  define print(x) 0;
#endif

//.......Code start from here ! .......

vector<vector<ll> >kp1(2009,vector<ll>(2009));
vector<vector<ll> >kp2(2009,vector<ll>(2009));
vector<vector<ll> >c(2009,vector<ll>(2009));
int n;
ll sum;

void re1(int i,int j)
{//printf("%d %d %d\n",i,j,sum);
    if(i>=n || j>=n || i<0 || j<0) return ;
    sum+=c[i][j];
    re1(i+1,j+1);
    kp1[i][j]=sum;//printf("-> %d %d %d\n",i,j,kp1[i][j]);
}

void re2(int i,int j)
{
    if(i>=n || j>=n || i<0 || j<0) return;
    sum+=c[i][j];
    re2(i+1,j-1);
    kp2[i][j]=sum;
}


int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            scanf("%I64d",&c[i][j]);
    for(int i=0;i<n;i++)
    {
        sum=0;
        re1(0,i);
        //printf("A-> %d %d %d\n",0,i,sum);
        //pause;
        sum=0;
        re2(0,i);
    }
    for(int i=1;i<n;i++)
    {
        sum=0;
        re1(i,0);
        sum=0;
        re2(i,n-1);
    }
    int x1=0,y1=0,x2=0,y2=1;
    ll ans1=0,ans2=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if((i+j)%2==0 && ans1<kp1[i][j]+kp2[i][j]-c[i][j])
            {
                ans1=kp1[i][j]+kp2[i][j]-c[i][j] ;
                x1=i,y1=j;
            }
            else if((i+j)%2==1 && ans2<kp1[i][j]+kp2[i][j]-c[i][j])
            {
                ans2=kp1[i][j]+kp2[i][j]-c[i][j] ;
                x2=i,y2=j;
            }
        }
    }
    printf("%I64d\n",ans1+ans2);
    printf("%d %d %d %d\n",x1+1,y1+1,x2+1,y2+1);
    return 0;
}


