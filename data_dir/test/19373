#include <bits/stdc++.h>

#define SZ(x) (((int)x.size()))

typedef long long ll;

using namespace std;

const int maxn = 100*1000+10, maxl = 17;
int n, dp[maxn], p[maxl], mn[maxn][maxl], a[maxn], s, L, dmn[maxn][maxl], mx[maxn][maxl], tmp = 2, tvn[maxn], l, r, mid;

int get(int x, int len)
{
	return max(mx[x - len + 1][tvn[len]], mx[x - p[tvn[len]] + 1][tvn[len]]) - min(mn[x - len + 1][tvn[len]], mn[x - p[tvn[len]] + 1][tvn[len]]);
}

int gmn(int aa, int bb)
{
	return min(dmn[aa][tvn[bb]], dmn[aa - bb + p[tvn[bb]]][tvn[bb]]);
}

void add(int x)
{
	dmn[x][0] = dp[x];
	for (int i = 1; i < maxl && x + 1 >= p[i]; i++)
		dmn[x][i] = min(dmn[x][i - 1], dmn[x - p[i - 1]][i - 1]);
}

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	memset(dp, 31, sizeof dp);
	dp[0] = 0;
	p[0] = 1;
	for (int i = 1; i < maxl; i++)
		p[i] = p[i - 1] << 1;
	for (int i = 1; i < maxn; i++)
	{
		tvn[i] = tvn[i - 1];
		if (tmp == i)
		{
			tvn[i]++;
			tmp *= 2;
		}
	}
	cin >> n >> s >> L;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i];
		mn[i][0] = mx[i][0] = a[i];
	}
	for (int i = 1; i < maxl; i++)
	{
		for (int j = 0; j + p[i] <= n; j++)
		{
			mn[j][i] = min(mn[j][i - 1], mn[j + p[i - 1]][i - 1]);
			mx[j][i] = max(mx[j][i - 1], mx[j + p[i - 1]][i - 1]);
		}
	}
	for (int i = 0; i < n; i++)
	{
		l = L - 1;
		r = i + 2;
		while (r - l > 1)
		{
			mid = (l + r) / 2;
			if (get(i, mid) <= s)
				l = mid;
			else
				r = mid;
		}
		if (l >= L)
			dp[i + 1] = 1 + gmn(i + 1 - L, l - L + 1);
		add(i + 1);
	}
	if (dp[n] > n)
		cout << -1;
	else
		cout << dp[n];
	return 0;
}
