#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

typedef long long Lint;

Lint L , R ; 
Lint dn[22][10][2];

Lint f(int k,int b,bool eq,vector<int> &v){

	Lint &rev = dn[k][b][eq];

	if(rev!=-1) return rev;
	
	int e = eq? v[k] : 9 ;
	
	rev = 0 ;
	if(k==v.size()-1){
		if(b==0) return rev=9;
		if(b<=e) return rev=1;
		return rev=0;	
	}else for(int i=0;i<=e;i++)
		rev+=f(k+1,( i && !b)? i : b ,eq && i==v[k],v);
		
	return rev;	
		
}

Lint solve(Lint k){
	
	if(k<10LL) return k;
	
	vector<int> v;
	
	while( k ){
	
		v.push_back(k%10LL);
		k/=10LL;
	
	}
	
	reverse(v.begin(),v.end());
	
	memset(dn,-1,sizeof dn);
	return f(0,0,1,v);

}

int main(){

	cin >> L >> R ; 
	
	cout << solve(R)-solve(L-1) << endl;


	return 0;

}
