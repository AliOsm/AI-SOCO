#pragma comment(linker, "/STACK:640000000")
#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

int main() {
	#ifdef LOCAL
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	
	int n; cin >> n;
	
	vector< pair<ll, ll> > v(n - 1);
	vector<ll> e;
	
	ll t,w; cin >> t >> w;
	e.pb(0);
	e.pb(t);
	
	for (int i = 0; i < n - 1; i++) {
		cin >> v[i].first >> v[i].second;
		e.pb(v[i].first);
	}
	
	sort(all(v));
	reverse(all(v));
	sort(all(e)); e.erase(unique(all(e)),e.end());
	reverse(all(e));
	multiset<ll> st,taken;
	ll sum = 0;
	int res = n;
	int cur = 0;
	int j = 0;
	
	for (int i = 0; i < sz(e); i++) {
		while(j < n - 1 && v[j].first > e[i]) {
			st.insert(v[j].second - v[j].first + 1);
			cur++;
			j++;
		}
		if (e[i] > t) continue;
		ll val = t - e[i];
		while(!taken.empty() && !st.empty() && (*taken.rbegin()) > (*st.begin())) {
			ll x = *taken.rbegin(); taken.erase(taken.find(x));
			ll y = *st.begin(); st.erase(st.begin());
			taken.insert(y);
			st.insert(x);
			sum -= x - y;
		}
		while(!st.empty() && (*st.begin()) <= val - sum) {
			sum += *st.begin();
			taken.insert(*st.begin());
			st.erase(st.begin());
			cur--;
		}
		res = min(res,cur + 1);
	}
	cout << res << endl;
	
	return 0;
}