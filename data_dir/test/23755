//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}


ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n, arr[100005], DP1[100005], DP2[100005];



int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>arr[i];
    }

    DP1[1] = 1;
    for(int i=2;i<=n;i++)
        if(arr[i] > arr[i-1])
            DP1[i] = 1+DP1[i-1];
        else
            DP1[i] = 1;

    DP2[n] = 1;
    for(int i=n-1;i>=1;i--)
        if(arr[i] < arr[i+1])
            DP2[i] = 1+DP2[i+1];
        else
            DP2[i] = 1;

    int ans = 0;
    for(int i=1;i<=n;i++)
        ans = max(ans, DP1[i]+DP2[i]-1);

    ans = max(ans, 1+DP2[2]);
    ans = max(ans, 1+DP1[n-1]);
    for(int i=2;i<=n-1;i++){
        ans = max(ans, 1+DP1[i-1]);
        ans = max(ans, 1+DP2[i+1]);
        if(arr[i+1]-arr[i-1] >= 2)
            ans = max(ans, DP1[i-1]+1+DP2[i+1]);
    }

    cout<<ans;
    return 0;
}




