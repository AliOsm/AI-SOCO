#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector> 
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x, y) memset(x, y, sizeof(x))
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b > a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b < a)a = b; }
const int N = 0, M = 0, Z = 1e9 + 7, inf = 0x3f3f3f3f;
template <class T1, class T2>inline void gadd(T1 &a, T2 b) { a = (a + b) % Z; }
int casenum, casei;
int m, n;
int s[1010];
int gcd(int x, int y)
{
	return y == 0 ? x : gcd(y, x % y);
}
int G;
bool check()
{
	for (int i = 1; i <= m; ++i)
	{
		scanf("%d", &s[i]);
		if (i == 1) G = s[i];
		else G = gcd(G, s[i]);
	}
	bool flag = 0;
	for (int i = 1; i <= m; ++i)if (s[i] == G)flag = 1;
	return flag;
}
int main()
{
	while (~scanf("%d", &m))
	{
		if (!check())puts("-1");
		else
		{
			printf("%d\n", m + m);
			for (int i = 1; i <= m; ++i)
			{
				printf("%d ", s[i]);
				printf("%d ", G);
			}
			puts("");
		}
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】
知道每个数字集合的gcd

1: 最大的gcd 和次大的gcd 一定是某个数字本身
2: 最小的gcd是所有数的gcd

【分析】


【时间复杂度&&优化】


【数据】
999999999999 9999999999998 -1

*/