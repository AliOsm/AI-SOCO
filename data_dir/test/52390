#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<cassert>
#include<iomanip>
#include<limits>

using namespace std;

#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
typedef vector<int> vi;
long long mod = 1000000007LL;
long long large = 2000000000000000000LL;


int main(){

	int n;
	cin>>n;
	vector<vector<int> > g(n,vector<int>(n,0)),g0 = g;

	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			char ch;
			cin>>ch;
			if(ch=='X') g[i][j] = 1;
		}
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			char ch;
			cin>>ch;
			if(ch=='X') g0[i][j] = 1;
		}
	}
	bool can = false;

	for(int l=0;l<4;l++){


		bool flag = true;
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(g[i][j]!=g0[i][j]){
					flag = false;
				}
			}
		}

		can = can||flag;

		flag = true;
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(g[i][j]!=g0[n-1-i][j]){
					flag = false;
				}
			}
		}
		can = can||flag;

		flag = true;
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(g[i][j]!=g0[n-1-i][n-1-j]){
					flag = false;
				}
			}
		}
		can = can||flag;

		flag = true;
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(g[i][j]!=g0[i][n-1-j]){
					flag = false;
				}
			}
		}
		can = can||flag;


		vector<vector<int> > g1 = g;
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++) g1[n-1-j][i] = g[i][j];
		}
		g = g1;
	}
	if(can){
		cout<<"Yes"<<endl;
	}else{
		cout<<"No"<<endl;
	}
    return 0;
}
