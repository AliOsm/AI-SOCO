#include <bits/stdc++.h>

using namespace std;

const int mx=(int)1e6;
bool isPrime[mx];
vector<int> primes;

void sieve(){
    memset(isPrime, true, sizeof isPrime);
    for(int i=2;i<mx;i++)
        if(isPrime[i]){
            primes.push_back(i);
            for(int j=2*i;j<mx;j+=i)
                isPrime[j]=false;
        }
}


int main(){
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);

    sieve();

    int n,m;
    cin >> n >> m;

    vector<int>::iterator it=upper_bound(primes.begin(),primes.end(),n-2);
    int w= *it;

    cout << w <<" " << w << "\n";
    w-=(n-2);
    cout << "1 2 " << w << "\n";
    for(int i=1;i<n-1;i++)
        cout << (i+1) << " " << (i+2) << " 1\n";
    m-=(n-1);

    int i=1,j=3;
    while(m--){
        cout << i <<" "<< j << " " << (int)1e9 << "\n";
        j++;
        if(j>n){
            i++;
            j=i+2;
        }
    }

    return 0;
}
