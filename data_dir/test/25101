#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define PB push_back
#define all(x) x.begin(), x.end()
#define div dv
typedef long long ll; 
typedef long double ld;
typedef pair<ll, ll> pll;

const int N = 1000 * 1000 + 10; 

ll to_add[N];
ll a[N];
ll l[N], r[N];
ll n, w;

void add_value(int l, int r, ll x)
{
	if(l >= r) return;
	to_add[l] += x;
	to_add[r] -= x;
}

void solve()
{
	cin>> n;
	for(int i = 0; i < n; i++) cin>> a[i];
	vector<int> st;
	for(int i = 0; i < n; i++) l[i] = r[i] = -1;
	for(int i = 0; i < n; i++)
	{
		while(st.size() && a[st.back()] <= a[i])
		{
			r[st.back()] = i;
			st.pop_back();
		}
		if(st.size()) l[i] = st.back();
		st.PB(i);
	}
	for(int i = 0; i < n; i++)
	{
		ll st = i;
		if(l[i] != -1) st = max(st, w - n + l[i] + 1);
		ll en = w - n + i + 1;
		if(r[i] != -1) en = min(en, r[i]);
		if(a[i] < 0)
		{
			en = min(en, n);
			st = max(st, w - n);
		}
	//	cout<< i << ' ' << st << ' ' << en << endl;
		add_value(st, en, a[i]);
	}		
}	

int32_t main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	set<pll> s;
	//cout<< s.size() << ' '<< (*s.begin()).F << endl;
	int n;
	cin>> n >> w;
	for(int i = 0; i < n; i++)
	{
		solve();
	}
	for(int i = 1; i < w; i++) to_add[i] += to_add[i - 1];
	for(int i = 0; i < w; i++) cout<< to_add[i] << ' '; 
	cout<< '\n';
}

