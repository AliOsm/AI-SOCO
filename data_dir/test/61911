#include <bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;
const int N=1e5+5;
int n;
ll ans,S[N];
pair < ll , int > Col1,Col2,M[N];
pair < pair < int , ll > , int > p[N];
vector < int  > G[N];
vector < pair < ll , int > > v[N];
main () {
	scanf("%d",&n);
	
	for (int i=1; i<=n; i++) {
		scanf("%d%d",&p[i].F.F,&p[i].F.S);
		p[i].S=i;
	}

	sort(p+1,p+n+1);
	
	int tot=0;
	p[0].F.F=-1;
	for (int i=1; i<=n; i++) {
		if (p[i].F.F!=p[i-1].F.F) tot++;
		v[tot].push_back({p[i].F.S,p[i].S});
	}
	
	for (int i=1; i<=tot; i++) 
		G[v[i].size()].push_back(i);

	for (int i=1; i<=tot; i++) {
		sort(v[i].begin(),v[i].end());
		reverse(v[i].begin(),v[i].end());
		for (int j=0; j<v[i].size(); j++) 
			S[i]+=v[i][j].F;
		
		if (M[v[i].size()].F<S[i]) {
			M[v[i].size()].F=S[i];
			M[v[i].size()].S=i;
		}	
	}
	
	for (int i=1; i<=n; i++) {
		pair < ll , int > M1,M2;
		M1.S=-1,M2.S=-1;
		for (int j=0; j<G[i].size(); j++) {
			int col=G[i][j];
			if (S[col]>M1.F) M2=M1,M1.F=S[col],M1.S=col;
				else
			if (S[col]>M2.F) M2.F=S[col],M2.S=col;
		}
		
		if (M1.S!=-1 && M2.S!=-1) {
			if (ans<M1.F+M2.F) {
				ans=max(ans,M1.F+M2.F);
				Col1.F=M1.S,Col1.S=v[M1.S].size();
				Col2.F=M2.S,Col2.S=v[M2.S].size();
			}
		}
		
		for (int j=0; j<G[i].size(); j++) {
			int col=G[i][j];
			ll s=0;
			for (int k=0; k<v[col].size(); k++) {
				int cnt=k+1;
				s+=v[col][k].F;
				if (ans<s+M[cnt-1].F && M[cnt-1].F) {
					ans=s+M[cnt-1].F;
					Col1.F=col,Col1.S=cnt;
					Col2.F=M[cnt-1].S,Col2.S=cnt-1;
				} 
			}
		}
	}
	
	printf("%lld\n",ans);	
	printf("%d\n",Col1.S+Col2.S);

	for (int i=0; i<Col2.S; i++) 
		printf("%d %d ",v[Col1.F][i].S,v[Col2.F][i].S);
	
	if (Col2.S+1==Col1.S) 
		printf("%d\n",v[Col1.F][Col1.S-1].S);
}