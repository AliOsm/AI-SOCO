#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 1200;
int C[N][N], dp[N];
int mod = 1e9 + 7;
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt","w", stdout);
    string s;
    int k;
    cin >> s;
    cin >> k;
    int n = s.length();
    C[0][0] = 1;
    for (int i = 1; i <= 1100; i++) C[i][0] = 1;
    for (int i = 1; i <= 1100; i++){
        for (int j = 1; j <= 1100; j++){
            C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;
        }
    }
    for (int i = 2; i <= 1000; i++){
        int x = i;
        int b = 0;
        while(x){
            if (x % 2) b++;
            x /= 2;
        }
        dp[i] = dp[b] + 1;
    }
    int c = 0;
    int ans = 0;
    for (int i = 0; i < n; i++){
        if (s[i] == '0') continue;
        for (int j = max(c, (int)1); j < n; j++){
            if (dp[j] == k - 1){
                ans = (ans + C[n - i - 1][j - c]) % mod;
            }
        }
        c++;
    }
    if (k == 0){
        cout << 1;
        return 0;
    }
    if (n == 1){
        cout << 0;
        return 0;
    }
    if (k == 1){
        cout << n - 1;
        return 0;
    }
    if (dp[c] == k - 1) ans = (ans + 1) % mod;
    cout << ans;
}
