#include <bits/stdc++.h>
#include <iostream>	
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const int inf = int(2e9);
const int _inf = -inf;
const int mod = inf + 7;
int product(int x) 
{ 
    int prod = 1; 
    while (x) { 
        prod *= (x % 10); 
        x /= 10; 
    } 
    return prod; 
} 
  
long long findNumber(int l, int r) 
{ 
    string a = to_string(l); 
    string b = to_string(r); 
    int ans = r; 
    for (int i = 0; i < b.size(); i++) { 
        if (b[i] == '0') 
            continue; 
        string curr = b; 
        curr[i] = ((curr[i] - '0') - 1) + '0'; 
        for (int j = i + 1; j < curr.size(); j++) 
            curr[j] = '9'; 
        int num = 0; 
        for (auto c : curr) 
            num = num * 10 + (c - '0'); 
        if (num >= l && product(ans) < product(num)) 
            ans = num; 
    } 
  
    return ans; 
} 
int main() 
{ 
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
    int l = 1, r;
    cin >> r; 
   	long long k = findNumber(l, r); 
    ll cnt = 1;
    while(k){
    	cnt *= k % 10;
    	k /= 10;
    }
    cout << cnt;
    return 0; 
} 