/* ****GT_18**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  100005

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n,sl;
		cin>>n>>sl;
		vector<pii> v1,v2;
		vi s(n),a(n),b(n);
		ll ans=0,ansa=0,ansb=0,eq=0;
		rep(i,0,n)
		{
			cin>>s[i]>>a[i]>>b[i];
			if(a[i]>b[i])
			{
				v1.pb({a[i]-b[i],i});
				ans+=a[i]*s[i];
				ansa+=s[i];
			}
			else if(a[i]<b[i])
			{
				v2.pb({b[i]-a[i],i});
				ans+=b[i]*s[i];
				ansb+=s[i];
			}
			else
			{
				ans+=s[i]*a[i];
				eq+=s[i];
			}
		}
		sort(all(v1));
		sort(all(v2));
		ansa%=sl,ansb%=sl;
		if(ansa+ansb+eq>sl)
		{
			cout<<ans;
			return 0;
		}
		ll ans1=0,ans2=0;
		rep(i,0,sz(v1))
		{
			ll cur=v1[i].S;
			if(ansa>0)
			{
				if(s[cur]<=ansa)
		        {
		        	ansa-=s[cur];
		            ans1+=(b[cur]-a[cur])*s[cur];
		        }
		        else
		        {
		            ans1+=(b[cur]-a[cur])*ansa;
		        	ansa=0;
		        }
			}
		}
		rep(i,0,sz(v2))
		{
			ll cur=v2[i].S;
			if(ansb>0)
			{
				if(s[cur]<=ansb)
		        {
		        	ansb-=s[cur];
		            ans2+=(a[cur]-b[cur])*s[cur];
		        }
		        else
		        {
		            ans2+=(a[cur]-b[cur])*ansb;
		        	ansb=0;
		        }
			}
		}
		cout<<max(ans+ans1,ans+ans2);
	}
	return 0;
}