//ITNOA
#include<bits/stdc++.h> 

using namespace std;
 
#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second
 
typedef long long ll;
typedef long double ld;


const int maxN = 200*1000 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 330;
const int maxL = 20;
const int lim = 1000*1000;

vector<int> a[maxN];
int dp[2][maxN];

void dfs(int v, int par = -1)
{
    int sum = 0;
    for(auto u : a[v])
	if(u - par)
	{
	    dfs(u,v);
	    sum += min(dp[0][u], dp[1][u]);
	}
    
    dp[0][v] = sum + 1;
    vector<int> vv;
    for(auto u : a[v])
	if(u - par)
	    vv.push_back(dp[0][u] - min(dp[0][u], dp[1][u]));

    sort(vv.begin(), vv.end());
    if(vv.size())
	dp[0][v] = min(dp[0][v], sum + vv[0]);

    if((int)vv.size() > 1)
	dp[1][v] = sum + vv[0] + vv[1] - 1;
    else
	dp[1][v] = lim;    
}

int32_t main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    int n, x, y;
    cin >> n >> x >> y;
    rep(i,0,n-1)
    {
	int v, u; cin >> v >> u;
	v --; u --;
	a[v].push_back(u);
	a[u].push_back(v);
    }
    if(x > y)
    {
	int mx =0;
	rep(i,0,n)
	    mx = max(mx, (int)a[i].size());
	if(mx == n-1) { cout << (1LL) * (n-2) * y + x << endl; return 0; }
	cout << (1LL) * (n-1) * y << endl;
	return 0;
    }

    dfs(0);
    int p = min(dp[0][0], dp[1][0]);
    cout << (1LL) * (p-1) * y + (1LL) * (n-p) * x << endl; 
    return 0;
}


