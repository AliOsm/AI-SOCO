#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using vb = vector<bool>;
using pii = pair<int, int>;
using vii = vector<pii>;
using vs = vector<string>;
#define all(x) x.begin(),x.end()
int di[] = {0, 1, 0, -1};
int dj[] = {1, 0, -1, 0};
const ll MOD = 1e9 + 7;

string num[] = {
		"1110111", "0010010", "1011101", "1011011", "0111010", "1101011", "1101111", "1010010", "1111111", "1111011"
};

inline int change(string a, string b) {
	int ret = 0;
	for (int i = 0; i < 7; ++i) {
		if (a[i] == '1' && b[i] == '0')
			return -1;
		if (a[i] == '0' && b[i] == '1')
			ret++;
	}
	return ret;
}

const int N = 2020;
int n, k;
string d[N];

int mem[N][N];
int solve(int cur, int left) {
	if (cur == n)
		return left == 0;

	int& ret = mem[cur][left];
	if (ret != -1)
		return ret;
	ret = 0;

	for (int i = 9; i >= 0; --i) {
		int ch = change(d[cur], num[i]);
		if (ch != -1 && ch <= left && solve(cur + 1, left - ch)) {
			return ret = 1;
		}
	}
	return 0;
}

string ans;
void build(int cur, int left) {
	if (cur == n) return;

	for (int i = 9; i >= 0; --i) {
		int ch = change(d[cur], num[i]);
		if (ch != -1 && ch <= left && solve(cur + 1, left - ch)) {
			ans.push_back('0' + i);
			build(cur + 1, left - ch);
			return;
		}
	}
}

int main(int argc, char **argv) {
	ios::sync_with_stdio(false), cin.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif

	memset(mem, -1, sizeof(mem));
	cin >> n >> k;
	for (int i = 0; i < n; ++i) {
		cin >> d[i];
	}

	if (solve(0, k)) {
		build(0, k);
		cout << ans << endl;
	} else {
		cout << -1 << endl;
	}
}
