#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<map>
#include<iterator>
#include<stack>
#include<string>
#include<climits>
#include<bitset>
#include<queue>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<sstream>

#define MOD 1000000007
#define ll long long int
#define vi vector<int>
#define vll vector<long long int>
#define vvi vector<vector<int> >
#define vvl vector<vector<long long int> >
#define vp vector<pair<int, int> >
#define sc(n) scanf("%d", &n)
#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)

using namespace std;

string toBin(long long int a)
{
	return bitset<64>(a).to_string();
}

void printArr(int* a, int n)
{
	for(int i = 0; i < n; i++)
		printf("%d ", a[i]);
	printf("\n");
}

string intToString (ll a)
{
	ostringstream temp;
	temp<<a;
	return temp.str();
}

ll pow(ll base, ll exponent)
{
	ll result = 1;
	while(exponent > 0)
	{
		if (exponent % 2 == 1)
			result *= base;
		exponent = exponent >> 1;
		base *= base;
	}
	return result;
}

ll powerWithMod(ll base, ll exponent, ll modulus)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if (exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent = exponent >> 1;
		base = (base * base) % modulus;
	}
	return result;
}

int main()
{
	ssync;
	int n, q;
	sc(n); sc(q);
	vi ans(n);
	int b1=0, b2=1;
	for(int i=0; i<q; i++)
	{
		int t1, x;
		sc(t1);
		if(t1 == 1)
		{
			sc(x);
			b1=(b1+x)%n;
			b2=(b2+x)%n;
		}
		else
		{
			if(b1 & 1)
				b1--;
			else
				b1++;
			if(b2 & 1)
				b2--;
			else
				b2++;

		}
	}
	if(b1<0)
		b1+=n;
	if(b2<0)
		b2+=n;
	int curr=1;
	for(int i=0; i<n/2; i++)
	{
		ans[b1] = curr;
		ans[b2] = curr+1;
		curr+=2;
		b1=(b1+2)%n;
		b2=(b2+2)%n;
	}
	for(int i=0; i<n; i++)
		printf("%d ", ans[i]);
	printf("\n");
	return 0;
}
