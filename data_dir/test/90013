#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()

template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define _upgrade ios_base::sync_with_stdio(0);
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 250007;

LL n, m, fac[N];

int main()
{
    _upgrade
    
    cin >> n >> m;

    fac[0] = 1;
    for(LL i = 1; i <= n; i++)
        fac[i] = i * fac[i - 1] % m;

    LL ans = 0;
    for(LL l = 1; l <= n; l++)
    {
        LL tmp = (n - l + 1) * (n - l + 1) % m;
        tmp = tmp * fac[l] % m * fac[n - l] % m;
        ans = (ans + tmp) % m;
    }

    cout << ans << "\n";

	return 0;
}