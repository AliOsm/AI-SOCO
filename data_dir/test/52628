#include <bits/stdc++.h>

using namespace std;

const int B = 21;
const int N = 500001;

typedef pair<int, int>ii;

int n, v[N];
vector< ii > que[N];
int ans[N];
int gauss[N], tmp[N];

inline void add(int x, int p) {
  for(int i = B - 1; i >= 0; --i) {
    if((x >> i) & 1) {
      if(!gauss[i]) {
        gauss[i] = x;
        tmp[i] = p;
        return;
      }
      else {
        if(tmp[i] < p) {
          swap(gauss[i], x);
          swap(tmp[i], p);
        }
        x ^= gauss[i];
      }
    }
  }
}

inline int solve(int p) {
  int s = 0;
  for(int i = B - 1; i >= 0; --i) if(tmp[i] >= p) s = max(s, gauss[i] ^ s);
  return s;
}

int main() {
  scanf("%d", &n);
  for(int i = 1; i <= n; ++i) {
    scanf("%d", v + i);
  }
  int q; scanf("%d", &q);
  for(int i = 1; i <= q; ++i) {
    int l, r; scanf("%d %d", &l, &r);
    que[r].push_back(ii(l, i));
  }
  for(int i = 1; i <= n; ++i) {
    add(v[i], i);
    for(int j = 0; j < que[i].size(); ++j) ans[que[i][j].second] = solve(que[i][j].first);
  }
  for(int i = 1; i <= q; ++i) printf("%d\n", ans[i]);
  return 0;
}