#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace __gnu_pbds;
using namespace std;

typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

mt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int t;
    cin>>t;
    while(t--){
        int k; cin>>k;
        int a[7];
        int sum = 0;
        for(int i=0; i<7; i++){
            cin>>a[i];
            sum+=a[i];
        }
        int sum1 = 0;
        int ans = INT_MAX;
        for(int i=6; i>=0; i--){
            int sum2 =0;
            for(int j=0; j<7; j++){

                if((k-sum1-sum2)%sum==0&&(k-sum1-sum2)>=0){
                    ans = min(ans, ((k-sum1-sum2)/sum)*7+j+(6-i));
                }
                sum2+=a[j];
                if((k-sum1-sum2)%sum==0&&(k-sum1-sum2)>=0){
                    ans = min(ans, ((k-sum1-sum2)/sum)*7+j+(6-i)+1);
                }
            }
            sum1+=a[i];
            sum2 =0;
            for(int j=0; j<7; j++){

                if((k-sum1-sum2)%sum==0&&(k-sum1-sum2)>=0){
                    ans = min(ans, ((k-sum1-sum2)/sum)*7+j+(7-i));
                }
                sum2+=a[j];
                if((k-sum1-sum2)%sum==0&&(k-sum1-sum2)>=0){
                    ans = min(ans, ((k-sum1-sum2)/sum)*7+j+(7-i)+1);
                }
            }
        }
        for(int i=0; i<7; i++){
            int sum1= 0;
            for(int j=i; j<7; j++){
                sum1+=a[j];
                if(sum1==k){
                    ans = min(ans, j-i+1);
                }
            }
        }
        cout<<ans<<'\n';
    }
    return 0;
}
