#include <bits\stdc++.h>

using namespace std;

#define forn(i, n) for (int i = 0; i < n; i++)
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define sqr(x) 1ll * (x) * (x)
#define pb push_back
#define mp make_pair

#define x1 ___x1
#define y1 ___y1
#define x2 ___x2
#define y2 ___y2

typedef long double ld;
typedef long long ll;

const int maxn = 2005;
const int inf = (int) 2e9;
const long long mod = (long long) 1e9 + 7;
const long long l_inf = (long long) 4e18;
const ld eps = 1e-8;
const ld pi = acosl(-1.0);

int n;
int x1, y1, x2, y2;
pair<int, int> f[maxn];
long long dist1[maxn], dist2[maxn];
long long ans = l_inf;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.precision(20);
	cout << fixed;

	cin >> n;
	cin >> x1 >> y1 >> x2 >> y2;
	for (int i = 0; i < n; i++) {
		cin >> f[i].first >> f[i].second;
		dist1[i] = sqr(x1 - f[i].first) + sqr(y1 - f[i].second);
		dist2[i] = sqr(x2 - f[i].first) + sqr(y2 - f[i].second);
	}

	for (int i = 0; i < n; i++) {
		long long r1 = dist1[i], r2 = 0;
		for (int j = 0; j < n; j++) {
			if (r1 < dist1[j])
				r2 = max(r2, dist2[j]);
		}
		ans = min(ans, r1 + r2);
	}
	for (int i = 0; i < n; i++) {
		long long r2 = dist2[i], r1 = 0;
		for (int j = 0; j < n; j++) {
			if (r2 < dist2[j])
				r1 = max(r1, dist1[j]);
		}
		ans = min(ans, r1 + r2);
	}

	cout << ans;

	return 0;
}
