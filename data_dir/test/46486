#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <memory.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 50;
int p[2*N];
int find(int u) {
	if (p[u] == u)
		return u;
	return p[u] = find(p[u]);
}
int main()
{
	int R, C;
	cin >> R >> C;
	vector<string> v(R);
	vector<string> g(R, string(C, '.'));
	for (int i = 0; i < R + C; ++i)
		p[i] = i;
	for (int i = 0; i < R; ++i) {
		cin >> v[i];
		for(int j=0;j<C;++j)
			if (v[i][j] == '#')
				p[find(i)] = find(j + R);
	}
	for (int i = 0; i < R + C; ++i) {
		if (p[i] == i) {
			vector<int> r, c;
			for(int j=0;j<R+C;++j)
				if (find(j) == i) {
					if (j >= R)
						c.push_back(j - R);
					else
						r.push_back(j);
				}
			for (auto y : r)
				for (auto x : c)
					g[y][x] = '#';
		}
	}
	if (g == v)
		puts("Yes");
	else
		puts("No");
	return 0;
}