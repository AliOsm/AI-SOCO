#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

vector<int> a, b;
int n;
char tmp[300300];

vector<int> read(bool is_first) {
    scanf("%s", tmp);
    int sz = strlen(tmp);
    sort(tmp, tmp + sz);
    n = sz;
    vector<int> ans(26, 0);
    if (is_first) {
        int k = (n + 1) / 2;
        for (int i = 0; i < k; i++) {
            ans[tmp[i] - 'a']++;
        }
    } else {
        int k = n / 2;
        for (int i = n - k; i < n; i++) {
            ans[tmp[i] - 'a']++;
        }
    }
    return ans;
}

int getmin(vector<int> &a) {
    for (int i = 0; i < 26; i++) {
        if (a[i]) {
            return i;
        }
    }
    return -1;
}

int getmax(vector<int> &a) {
    for (int i = 25; i >= 0; i--) {
        if (a[i]) {
            return i;
        }
    }
    return -1;
}

int main(){

    a = read(1);
    b = read(0);

    string ans = "";
    for (int i = 0; i < n; i++) ans += " ";

    int l = 0, r = n - 1;

    for (int i = 0; i < n; i++) {
        if (i % 2 == 0) {
            int c = getmin(a);
            int op = getmax(b);
            if (op == -1) {
                a[c]--;
                ans[l++] = (char)('a' + c);
            } else {
                if (c < op) {
                    ans[l++] = char('a' + c);
                    a[c]--;
                } else {
                    c = getmax(a);
                    ans[r--] = char('a' + c);
                    a[c]--;
                }
            }
        } else {
            int c = getmax(b);
            int op = getmin(a);
            if (op == -1) {
                b[c]--;
                ans[l++] = char('a' + c);
            } else {
                if (c > op) {
                    ans[l++] = char('a' + c);
                    b[c]--;
                } else {
                    c = getmin(b);
                    ans[r--] = char('a' + c);
                    b[c]--;
                }
            }
        }
    }

    for (int i = 0; i < n; i++) {
        printf("%c", ans[i]);
    }
    printf("\n");

    return 0;
}
