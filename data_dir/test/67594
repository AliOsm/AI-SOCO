#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL_CHECK
#define trace(x) cerr << #x << ": " << x << " ";
#define trnl cerr << "\n";
#else
#define trace(x) {}
#define trnl {}
#endif
typedef long long lolo;
typedef unsigned long long ulolo;
typedef pair<int, int> pii;
#define R(i,n) for(int i=0;i<(n);++i)
#define F(i,a,b) for(int i=(a);i<(b);++i)
#define FS(i,a,b,s) for(int i=(a);i<(b);i+=(s))
#define FD(i,n) for(int i=(n-1);i>=0;--i)
#define FDS(i,n,s) for(int i=(n-1);i>=0;i-=(s))
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define fi first
#define se second
#define M_PI           3.14159265358979323846

const int INF = 1e9 + 23;
const int MOD = 1e9 + 9;
const int N = 1e6 + 1;
const int NN = 1e6 + 100;

int arr[N];
bool x[NN], y[NN], ok[NN];

int main()
{
  ios_base::sync_with_stdio(0);
  int n;
  scanf("%d", &n);
  R(i, n) {
    scanf("%d", &arr[i]);
    x[arr[i]] = true;
  }
  R(i, n) {
    int now = arr[i];
    int rev = N - now;
    if (!x[rev]) {
      y[rev] = true;
      ok[now] = true;
    }
  }
  int j = 1;
  R(i, n) {
    int now = arr[i];
    if (ok[now]) continue;
    while (x[j] || x[N-j] || y[j] || y[N-j]) ++j;
    y[j] = true;
    y[N-j] = true;
    ok[now] = true;
    ok[N-now] = true;
  }
  int sz = count(y, y + N, true);
  printf("%d\n", sz);
  bool fst = true;
  R(i, N) if (y[i]) {
    if (!fst) printf(" ");
    printf("%d", i);
    fst = false;
  }
  printf("\n");
  return 0;
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp
