#include <bits/stdc++.h>
using namespace std;
const int M = 10002;
const int N = 101;
pair<int, int> memo[N][M << 1];
int n;
int a[N], b[N];
pair<int, int> dp(int i, int rem) {
	if (i == n) {
		if (rem >= M)
			return {0, 0};
		return {M, M};
	}
	pair<int, int> &ret = memo[i][rem];
	if (ret.first != -1)
		return ret;
	pair<int, int> p1 = dp(i + 1, rem - a[i]);
	pair<int, int> ret1 = {p1.first, a[i] + p1.second}; // leave

	pair<int, int> p2 = dp(i + 1, rem + b[i] - a[i]); // pick
	pair<int, int> ret2 = {p2.first + 1, p2.second};

	if ((ret1.first < ret2.first) || (ret1.first == ret2.first && ret1.second <
			ret2.second))
		return ret = ret1;
	else
		return ret = ret2;
}
int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", &a[i]);
	for (int i = 0; i < n; i++)
		scanf("%d", &b[i]);

	memset(memo, -1, sizeof memo);
	printf("%d %d\n", dp(0, M).first,  dp(0, M).second);
	return 0;
}
