#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
const int mod = (1e9) + 7;
const double eps = 1e-6;
const int siz = 5e5 + 5, siz2 = 1049659, siz3 = 5032108;
int n, arr[siz];
int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	if (n == 1) {
		printf("%d\n", arr[0]);
		return 0;
	}
	if(n == 2) {
		printf("%d\n", max(arr[0], arr[1])-min(arr[0], arr[1]));
		return 0;
	}
	ll tot = 0;
	bool pos = false, neg = false;
	for (int i = 0; i < n; i++) {
		if (arr[i] < 0) {
			neg = true;
		}
		else {
			pos = true;
		}
	}
	if (neg && pos) {
		for (int i = 0; i < n; i++) {
			tot += abs(arr[i]);
		}
		printf("%I64d\n", tot);
		return 0;
	}
	if (neg) {
		int mx = INT_MIN, ind = -1;
		for (int i = 0; i < n; i++) {
			if (arr[i] > mx) {
				mx = arr[i];
				ind = i;
			}
		}
		tot = mx;
		for (int i = 0; i < n; i++) {
			if (i == ind) {
				continue;
			}
			tot -= arr[i];
		}
		printf("%I64d\n", tot);
		return 0;
	}
	ll sum = 0;
	int mn = INT_MAX;
	for (int i = 0; i < n; i++) {
		sum += arr[i];
		mn = min(mn, arr[i]);
	}
	printf("%I64d\n", sum-mn*2);
	return 0;
}