#include <bits/stdc++.h>

using namespace std;

#define f(a, b) ((1 << (a)) * (b))

struct w {
	int l, r, c, p;
	bool operator<(const w& rhs) {
		return p < rhs.p;
	}
} x[200005];

int n, k, m;
long long ans;
pair<long long, long long> p[19][270005];
vector<int> add[1000005], sub[1000005];
int ta;

void go(int c, int d, int e) {
	if (p[c][d].first == 0)
		return;
	if (c == 0) {
		if (p[c][d].first > e)
			ans += p[c][d].second / p[c][d].first * e;
		else
			ans += p[c][d].second;
		return;
	}
	c--;
	d = d * 2 + 1;
	if (p[c][d - 1].first > e) {
		go(c, d - 1, e);
		return;
	}
	ans += p[c][d - 1].second;
	e -= p[c][d - 1].first;
	go(c, d, e);	
}

int main() {
	scanf("%d%d%d", &n, &k, &m);
	for (int i = 0; i < m; i++)
		scanf("%d%d%d%d", &x[i].l, &x[i].r, &x[i].c, &x[i].p);
	sort(x, x + m);
	for (int i = 0; i < m; i++) {
		add[x[i].l].push_back(i);
		sub[x[i].r + 1].push_back(i);
	}
	for (int i = 1; i <= n; i++) {
		for (int j : add[i]) {
			ta = j;
			for (int k = 0; k < 19; k++) {
				p[k][ta].first += x[j].c;
				p[k][ta].second += (long long)x[j].c * x[j].p;
				ta >>= 1;
			}
		}
		for (int j : sub[i]) {
			ta = j;
			for (int k = 0; k < 19; k++) {
				p[k][ta].first -= x[j].c;
				p[k][ta].second -= (long long)x[j].c * x[j].p;
				ta >>= 1;
			}
		}
		go(18, 0, k);
	}
	printf("%lld\n", ans);
	return 0;
}
