//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(1e6+6);
const ll mod=(ll)(998244353);
int a[1005][1005];
vector< pair< int, pii > > v;
int sq1=0,sq2=0,sum1=0,sum2=0,lesser=0,e_sum=0;
int e[maxn];

inline int mul(ll a,ll b)
{
    return (a*b)%mod;
}

inline int add(int a,int b)
{
    int ret=a+b;

    if(ret>=mod)
    {
        ret-=mod;
    }

    return ret;
}

inline int sub(int a,int b)
{
    int ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return ret;
}

inline int poww(ll a,ll b)
{
    int x=1,y=a;

    while(b>0)
    {
        if(b%2)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return (int)(x%mod);
}

void update(int idx,pair< int, pii > v)
{
    int i=v.first,j=v.second.first;

    sq1=add(sq1,mul(i,i));sq2=add(sq2,mul(j,j));

    sum1=add(sum1,i);sum2=add(sum2,j);

    e_sum=add(e_sum,e[idx]);

    lesser++;
}

bool func(pair< int, pii > a,pair< int, pii > b)
{
    return a.second.second<b.second.second;
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n,m;scanf("%d%d",&n,&m);

    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            scanf("%d",&a[i][j]);

            v.pb({i,{j,a[i][j]}});
        }
    }

    int r,c;scanf("%d%d",&r,&c);

    int minus_two=(int)(mod-2);

    sort(v.begin(),v.end(),func);int ptr=0;

    for(int i=0;i<v.size();i++)
    {
        while(ptr<i && v[ptr].second.second<v[i].second.second)
        {
            update(ptr,v[ptr]);ptr++;
        }

        if(lesser>0)
        {
            int prob=poww(lesser,mod-2);

            e[i]=add(e[i],sq1);e[i]=add(e[i],sq2);

            e[i]=add(e[i],e_sum);

            int curr_i=v[i].first,curr_j=v[i].second.first;

            e[i]=add(e[i],mul(lesser,mul(curr_i,curr_i)));

            e[i]=add(e[i],mul(lesser,mul(curr_j,curr_j)));

            int now1=mul(sum1,curr_i),now2=mul(sum2,curr_j);

            now1=mul(now1,minus_two);now2=mul(now2,minus_two);

            e[i]=add(e[i],add(now1,now2));

            e[i]=mul(e[i],prob);
        }

      //  cout<<v[i].first<<" "<<v[i].second.first<<" "<<v[i].second.second<<" "<<lesser<<" "<<e[i]<<endl;
    }

    int res=0;

    for(int i=0;i<v.size();i++)
    {
        if(v[i].first==r && v[i].second.first==c)
        {
            res=e[i];
        }
    }

    cout<<res<<endl;

    return 0;
}
