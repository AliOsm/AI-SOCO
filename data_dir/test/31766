#include<bits/stdc++.h>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int> >
const int INF = 1e9+7;
const int MAXN = 2e6 + 200;
const  long double eps = 1e-16;
const long double pi = acos(-1.0);
using namespace std;

int n, ind;
int a[MAXN];
minheap och;
void solve(){
    cin >> n;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        if (a[i] == -1) ind = i;
    }
    int sz = n / 2;
    int free = 0;
    long long ans = 0;
    for (int i = n; i > ind; i--){
            if (free > 0){
                och.push(a[i]);
                free--;
                continue;
            }
            free += sz - 1;
            sz /= 2;
            och.push(a[i]);
            ans += och.top();
            och.pop();
     }
     cout << ans;
}


int main() {
ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
cout.setf(ios::fixed), cout.precision(20);
 //freopen("input.in", "r", stdin);
// freopen("output.out", "w", stdout);
 int step;


	step = 1;
    for (int i = 1; i <= step; i++){
         solve();
    }
}
