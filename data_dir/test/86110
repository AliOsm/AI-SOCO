#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define PB push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define debug(x) cerr<< #x << ": " << x << endl;
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

//const int mod = 1000 * 1000 * 1000 + 7;
const int N = 10000 + 10;
vector <pii> pr, h;
int p[N], w[N];
bool mark[N];

int main()
{
	int n, m;
	cin>> n >> m;
	FR(i, 1, 2 * n + 1)
	{
		cin>> w[i];
		h.PB({w[i], i});
	}
	sort(all(h), greater <pii> ());
	FR(i, 0, m)
	{
		int a, b;
		cin>> a >> b;
		p[a] = b;
		p[b] = a;
		if(w[a] > w[b])
			pr.PB({a, b});
		else
			pr.PB({b, a});
	}
	int tr;
	cin>> tr;

	int num = 0;
	if(tr == 2)
	{
		while(num < n)
		{
			int b;
			cin>> b;
			num++;
			mark[b] = true;
			if(p[b] != 0)
			{
				cout<< p[b] << endl;
				mark[p[b]] = true;
			}
			else
				break;
		}
	}
	for(pii a: pr)
		if(!mark[a.F])
		{
			cout<< a.F << endl;
			int b;
			cin>> b;
			num++;
			mark[a.F] = true;
			mark[b] = true;
		}
	for(pii a: h)
	{
		if(!mark[a.S])
		{
			cout<< a.S << endl;
			mark[a.S] = true;
			if(num < n)
			{
				int b;
				cin>> b;
				num++;
				mark[b] = true;
			}
		}
	}
	return 0;
}

