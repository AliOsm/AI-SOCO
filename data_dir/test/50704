#include <iostream>
#include <iomanip>
#include <set>
#include <algorithm>
#include <unordered_map>
#include <assert.h>
#include <cstring>
#include <vector>
#include <cmath>
#include <queue>
#include <functional>
#include <map>

#define N 300005
#define M 1000005
#define lgN 18
#define MOD 1000000007
#define LL long long int
#define INF 1e18
using namespace std;

struct Intvl {
  int l,r,id;
}v[N];

bool cmpl(Intvl a,Intvl b) {return a.l<b.l;}

set<pair<int,int> > ss;

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);cout.tie(0);
  LL n,i,j,k,x,y;
  cin >> n >> x >> y;
  for (i=0;i<n;i++) cin >> v[i].l >> v[i].r;
  sort(v,v+n,cmpl);
  LL res=0,ans=0;
  for (i=0;i<n;i++) {
    if (ss.size()==0) {
      ss.insert({v[i].r,i});
      ans=x+y*(v[i].r*1LL-v[i].l);
      res=(res+ans)%MOD;
      continue;
    }
    auto it=ss.lower_bound({v[i].l,0});
    if (it==ss.begin()) {
      ss.insert({v[i].r,i});
      ans=x+y*(v[i].r*1LL-v[i].l);
      res=(res+ans)%MOD;
      continue;
    }
    it--;
    if ((v[i].l*1LL-it->first)*y < x) {
      ans=y*(v[i].r*1LL-it->first);
      ss.erase(it);
      ss.insert({v[i].r,i});
      res=(res+ans)%MOD;
    }
    else {
      ss.insert({v[i].r,i});
      ans=x+y*(v[i].r*1LL-v[i].l);
      res=(res+ans)%MOD;
    }
  }
  cout << res << '\n';
}
