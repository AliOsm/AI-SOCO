#include<bits/stdc++.h>
#include <chrono>
#include <ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/detail/standard_policies.hpp>

using namespace std;
using namespace std::chrono;
using namespace __gnu_pbds;

#define lli long long int
#define ulli unsigned long long int
#define Pi 3.14159265358979323846264338327950288419716939937510

typedef tree <int, null_type, less <int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef tree <int, null_type, less_equal <int>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;

/*auto start = high_resolution_clock::now();
auto stop = high_resolution_clock::now();
auto duration = duration_cast<microseconds>(stop - start);
cout<<"Taken time for encryption = "<< duration.count()<<" microseconds"<<endl<<endl;*/

int main(){
	
    ios :: sync_with_stdio(false);
   
    //ifstream cin; ofstream cout; cin.open("input.txt"); cout.open("output.txt");
    
    int t;
    
    cin>>t;
    
    while(t--){
    	
    	lli x;
    	
    	cin>>x;
    	
    	for(lli a=1; a<x; a++){
    		
    		lli b = x-a;
    		
    		lli gcd = __gcd(a,b);
    		
    		lli lcm = (a*b)/gcd;
    		
    		if(gcd+lcm == x){
    			
    			cout<<a<<" "<<b<<endl;
    			
    			break;
			}
		}
	}
}
