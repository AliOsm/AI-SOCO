#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef long double real;

#ifdef WIN32
#define INT64 "%I64d"
#define UINT64 "%I64u"
#else
#define INT64 "%lld"
#define UINT64 "%llu"
#endif

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

const int MaxN = 3009, MaxC = 0x3F3F3F3F, NA = -1;

int a [MaxN];
int k, m, n;

int main (void)
{
 int i, j;

 while (scanf (" %d %d %d", &n, &m, &k) != EOF)
 {
  memset (a, 0, sizeof (a));
  vector <int> ans;
  while (1)
  {
   for (i = 0; i < m + n; i++)
    if (a[i] < k)
     break;
   if (i == m + n)
    break;
   if (i > 0 && a[i] == 0)
    i--;
   ans.push_back (i + 1);
   for (j = 0; j < n; j++)
    a[i + j]++;
  }
  if (a[m + n] == 0)
   ans.push_back (m + n - 1 + 1);
  printf ("%d\n", (int) ans.size ());
  for (i = 0; i < (int) ans.size (); i++)
   printf ("%d%c", ans[i], "\n "[i + 1 < (int) ans.size ()]);
 }

 return 0;
}
