#include <bits/stdc++.h>
#include <climits>

using namespace std;

const int maxC = 262144;

multiset<long long> m[maxC];

int get(long long x) {
    int ans = 0;
    int p = 1;
    while (x != 0) {
        ans += ((x % 10) % 2) * p;
        x /= 10;
        p *= 2;
    }
    return ans;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    int t;

    cin >> t;
    for (int i = 0; i < t; ++i) {
        char c;
        cin >> c;
        if (c == '+') {
            long long x;
            cin >> x;
            m[get(x)].insert(x);
        }
        if (c == '-') {
            long long x;
            cin >> x;
            int id = get(x);
            m[id].erase(m[id].find(x));
        }
        if (c == '?') {
            string s;
            cin >> s;
            reverse(s.begin(), s.end());
            int p = 1, ans = 0;
            for (int i = 0; i < (int)s.size(); ++i) {
                if (s[i] == '1')
                    ans += p;
                p *= 2;
            }
            cout << m[ans].size() << '\n';
        }
    }

    return 0;
}
