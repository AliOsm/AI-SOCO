#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 1e9;
ll LINF = (ll)4e18;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("cities.in", "r", stdin);
	//freopen("cities.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	vi a(n);
	forn(i, 0, n) cin >> a[i];
	int s, f;
	cin >> s >> f;
	int len = f - s;
	int sum = 0;
	int mx = -1e9;
	forn(i, 0, len) sum += a[i];
	mx = sum;
	int ind = 0;
	int x = s;
	forn(i, 0, n) {
		sum -= a[i];
		sum += a[(i + len)%n];
		if (sum > mx) {
			mx = sum;
			ind = i + 1;
			x = s - ind;
			if (x <= 0) x += n;
		}
		else if (sum == mx) {
			ind = i + 1;
			int xx = s - ind;
			if (xx <= 0) xx += n;
			if (xx < x) x = xx;
		}
	}

	cout << x;
	return 0;
}