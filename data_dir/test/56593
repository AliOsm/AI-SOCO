#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       a*(b/gcd(a,b))
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define all(v)         v.begin(),v.end()
#define fill(a,b)      memset(a,b,sizeof a)
#define smax(a, b)     a=max(a, b)
#define smin(a, b)     a=min(a, b)
#define sqr(x)         x*x
#define cube(x)        x*x*x
#define endl           '\n'

int in() {
    int n;
    scanf("%d",&n);
    return n;
}

ll Lin() {
    ll n;
    scanf("%lld",&n);
    return n;
}

double Din() {
    double n;
    scanf("%lf",&n);
    return n;
}

const ll inf = 1e17;
const ll mod = 1e9 + 7;
const int N = 2e5 + 5;

vi vit[10];

int solve() {
    int n=in();
    for(int i=1; i<=n; i++) {
        int c;
        string s;
        cin>>c>>s;
        sort(all(s));
        if(s=="A") vit[1].pb(c);
        else if(s=="B") vit[2].pb(c);
        else if(s=="C") vit[3].pb(c);
        else if(s=="AB") vit[4].pb(c);
        else if(s=="BC") vit[5].pb(c);
        else if(s=="AC") vit[6].pb(c);
        else if(s=="ABC") vit[7].pb(c);
    }

    for(int i=1; i<=7; i++) {
        sort(all(vit[i]));
    }

    int ans=2e9;
    if(vit[7].size()>0)  smin(ans, vit[7][0]);

    if(vit[1].size()>0 && vit[2].size()>0 && vit[3].size())
        smin(ans, vit[1][0]+vit[2][0]+vit[3][0]);

    if(vit[1].size()>0 && vit[5].size()>0)
        smin(ans, vit[1][0]+vit[5][0]);

    if(vit[2].size()>0 && vit[6].size()>0)
        smin(ans, vit[2][0]+vit[6][0]);

    if(vit[3].size()>0 && vit[4].size()>0)
        smin(ans, vit[3][0]+vit[4][0]);

    if(vit[4].size()>0 && vit[5].size()>0)
        smin(ans, vit[4][0]+vit[5][0]);

    if(vit[4].size()>0 && vit[6].size()>0)
        smin(ans, vit[4][0]+vit[6][0]);

    if(vit[5].size()>0 && vit[6].size()>0)
        smin(ans, vit[5][0]+vit[6][0]);

    if(ans>=2e9) ans=-1;
    cout<<ans<<endl;

    return 0;
}

int main() {
    int test = 1;
    while(test--) {
        solve();
    }
    return 0;
}









