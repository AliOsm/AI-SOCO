//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
//#define iinf (3000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
vi v;
map <int ,ll >dp;
ll power(int a,ll b){
	ll res=1,base=a;
	while(b>0){
		if(b%2){
			res*=base;
			res%=mod;
		}
		base*=base;
		base%=mod;
		b/=2;
	}
	return res;
}
ll compute(int g){
	if(g==1){
		return 1;
	}
	if(dp.find(g)!=dp.end()){
		return dp[g];
	}
	ll val=power(2,g-1);
	int i;
	rep(i,v.size()){
		if(v[i]>=g){
			break;
		}
		if(g%v[i]==0)
			val-=compute(v[i]);
	}

	dp[g]=val;
	dp[g]%=mod;
	dp[g]+=mod;
	dp[g]%=mod;
	return dp[g];
}
int main(){
	std::ios::sync_with_stdio(false);
	int x,y,val1,i;
	//ll val;
	cin>>x>>y;
	if(y%x){
		cout<<0<<endl;
	}		
	else{
		y/=x;
		for(i=1;i*i<=y;i++){
			if(y%i==0){
				v.pb(i);
				if(y/i!=i)
				v.pb(y/i);
			}
		}
		sort(all(v));
		cout<<compute(y);
	}

} 
