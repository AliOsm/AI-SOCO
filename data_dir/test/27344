#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef    int   ll;
long long int mod=1e9+7;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=0,n,res=0,k,ans=0;
string s2,ch="",s,t,s1="";
vector< pair<string,ll> >vm;
vector< pair< pair<ll,ll>,ll > > vvv;
vector<pair< ll, ll > >vv;
vector < pair<string,ll> > vv2;
vector< ll > v[2000005];
ll a[200005],primes[2000005],b[200005],used[2000005];
set<ll> st;


int main(){
/******************************************/In_the_name_of_allah_the_merciful/****************************************************/

ll i=0,x=0,z=0,y=0,j=0,q,mx=0,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,l1,r1,d,p;
set< ll  > ::iterator it;
multiset< ll > ::iterator its;
//freopen("a.txt","r",stdin);
cin>>n;
for(i=1;i<=n;i++)cin>>a[i];

for(i=1;i<=2e6;i++){
    primes[i]=1;
    used[i]=0;
}
for(i=2;i<=2e6;i++){
    if(primes[i]){
        v[i].pb(i);
        for(j=2*i;j<=2e6;j+=i){
            v[j].pb(i);
            primes[j]=0;
        }
    }
}
for(i=2;i<=2e6;i++)st.insert(i);
ll flag=0;
for(i=1;i<=n;i++){
    it=st.begin();
    if(!flag){
        it=st.lower_bound(a[i]);
   }
    b[i]=*(it);
    y=b[i];
    if(b[i]>a[i])flag=1;
    for(k=0;k<v[y].size();k++){
        x=v[y][k];
        if(used[x])continue;
        for(j=x;j<=2e6;j+=x){
            if(st.count(j))st.erase(j);
        }
        used[x]=1;
    }
}
for(i=1;i<=n;i++)cout<<b[i]<<" ";

/*****************************************************/Alhamdulillah/**************************************************************/
 }
