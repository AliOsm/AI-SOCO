//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
int a[MAXN];
ll dp[MAXN][2];

int main() {
	int n; ni(n);
	for (int i = 0; i < n; i++) {
		ni(a[i]);
		a[i] /= abs(a[i]);
		if (i == 0) {
			dp[i][0] = a[i] > 0 ? 1 : 0; // > 0
			dp[i][1] = a[i] < 0 ? 1 : 0; // > 0
		} else {
			dp[i][0] = a[i] > 0 ? 1+dp[i-1][0] : dp[i-1][1]; // > 0
			dp[i][1] = a[i] < 0 ? 1+dp[i-1][0] : dp[i-1][1]; // > 0
		}
	}
	ll x = 0, y = 0;
	for (int i = 0; i < n; i++)
		x += dp[i][1], y += dp[i][0];
	printf("%I64d %I64d\n", x, y);
	return 0;
}
