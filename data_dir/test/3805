#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pi pair<int, int>
#define F first
#define S second
#define pb push_back
#define PI acos(-1.0)
using namespace std;
double const Eps = 1e-6;
int const N = 1e7;
ll p, q, n, Ans;
bool Sieve[N + 100];
vector<ll> Primes, Palandromic;
double Ratio;

bool Check_Pal(int Num)
{
    string s = to_string(Num);
    n = s.size();

    for (int i = 0; i < n/2; i++)
        if (s[i] != s[n-1-i])
            return false;
    return true;
}

bool Check(int x)
{
    auto NumOfPrimes = upper_bound(Primes.begin(), Primes.end(), x) - Primes.begin();
    auto NumOfPalandeomic = upper_bound(Palandromic.begin(), Palandromic.end(), x) - Palandromic.begin();

    if (p * NumOfPalandeomic >= q * NumOfPrimes)
        return true;
    return false;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    // freopen("in.in", "r", stdin);
    // freopen("out.out", "w", stdout);

    Sieve[1] = true;
    for (int i = 2; i * i <= N; i++)
        if (!Sieve[i])
            for (int j = 2 * i; j <= N; j += i)
                Sieve[j] = true;
    
    for (int i = 1; i <= N; i++){
        if (!Sieve[i]) Primes.pb(i);
        if (Check_Pal(i)) Palandromic.pb(i);
    }

    cin >> p >> q;

    for (ll i = 1; i <= N; i++)
        if (Check(i))
            Ans = max(Ans, i);

    if (!Ans) cout << "Palindromic tree is better than splay tree\n";
    else cout << Ans << '\n';
    return 0;
}
