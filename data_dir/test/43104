/* practice with Dukkha */
#include <stdio.h>
#include <string.h>

#define N	200000

int dsu[2][N], kk[2][N];

int find(int c, int i) {
	return dsu[c][i] < 0 ? i : (dsu[c][i] = find(c, dsu[c][i]));
}

void join(int c, int i, int j) {
	i = find(c, i);
	j = find(c, j);
	if (i == j)
		return;
	if (dsu[c][i] > dsu[c][j]) {
		dsu[c][i] = j;
		kk[c][j] += kk[c][i];
	} else {
		if (dsu[c][i] == dsu[c][j])
			dsu[c][i]--;
		dsu[c][j] = i;
		kk[c][i] += kk[c][j];
	}
}

int main() {
	int n, h, i, j, c;
	long long ans;

	scanf("%d", &n);
	memset(dsu[0], -1, sizeof dsu[0]);
	memset(dsu[1], -1, sizeof dsu[1]);
	for (i = 0; i < n; i++)
		kk[0][i] = kk[1][i] = 1;
	for (h = 0; h < n - 1; h++) {
		scanf("%d%d%d", &i, &j, &c), i--, j--;
		join(c, i, j);
	}
	ans = 0;
	for (i = 0; i < n; i++) {
		int r0 = find(0, i);
		int r1 = find(1, i);

		ans += (long long) kk[0][r0] * kk[1][r1] - 1;
	}
	printf("%lld\n", ans);
	return 0;
}
