#include<bits/stdc++.h>
#define GO ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
using namespace std;
typedef long long ll;
typedef vector<ll> vec;
const int Max = 3e6 + 5;
const int Mod = 1e9 + 7;

map<int, set<char>> st;
bool b[30];

int main()
{
	GO;
	int t;
	cin >> t;
	while (t--)
	{
		string s;
		st.clear();
		memset(b, 0, sizeof(b));
		cin >> s;
		for (int i = 1; i < s.size(); i++)
		{
			if (s[i] == s[i - 1])
				continue;
			st[s[i] - 'a'].insert(s[i - 1]);
			st[s[i - 1] - 'a'].insert(s[i]);
		}
		int j;
		int cnt = 0;
		for (int i = 0; i < 26; i++)
			if (st[i].size() == 1)
				j = i, cnt++;
		if (!cnt)
		{
			set<char >c;
			for (auto i : s)
				c.insert(i);
			if (c.size() == 1)
			{
				cout << "YES" << endl;
				for (int i = 0; i < 26; i++)
					cout << char('a' + i);
			}
			else cout << "NO";
			cout << endl;
			continue;
		}
		s.clear();
		bool ok = 1;
		while (st[j].size())
		{
			if (b[j] || st[j].size() > 1)
			{
				ok = 0;
				break;
			}
			b[j] = 1;
			s += 'a' + j;
			int k = *st[j].begin() - 'a';
			st[k].erase(j + 'a');
			j = k;
		}
		if (b[j])
			ok = 0;
		s += 'a' + j;
		b[j] = 1;
		if (!ok)
		{
			cout << "NO" << endl;
			continue;
		}
		for (int i = 0; i < 26; i++)
			if (!b[i])
				s += 'a' + i;
		cout << "YES" << endl;
		cout << s << endl;
	}
	return 0;
}