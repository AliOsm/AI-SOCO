#include <bits/stdc++.h>
#define int long long 
using namespace std;

const int N = 1e5 + 7;


vector <int> adj[N];


int sz[N];


int dfs(int u, int p) {
	sz[u] = 1;

	for(int v: adj[u])
		if(v != p)
			dfs(v, u),
			sz[u] += sz[v];
}

tuple <int, int, int> a[N];

int32_t main(int argc, char const *argv[]) {
	int n; cin >> n;
	for(int i = 1; i < n; i++) {
		int u, v, w; cin >> u >> v >> w;
		adj[u].push_back(v);
		adj[v].push_back(u);
		a[i] = make_tuple(u, v, w);

	}

	dfs(1, 0);


	long double sum = 0, d = n * (n - 1) * (n - 2) / 6LL;

	for(int i = 1; i < n; i++) {
		int u, v, w; tie(u, v, w) = a[i];
		if(sz[u] < sz[v]) swap(v, u);
		long double p = sz[v], q = n - sz[v];
		sum += p * q * (q - 1) * w + q * p * (p - 1) * w;
	}

	int q; cin >> q;
	while(q--) {
		int r, w; cin >> r >> w;
		int u, v, x; tie(u, v, x) = a[r];
		if(sz[u] < sz[v]) swap(v, u);
		long double p = sz[v], q = n - sz[v];
		sum -= p * q * (q - 1) * x + q * p * (p - 1) * x;
		sum += p * q * (q - 1) * w + q * p * (p - 1) * w;
		a[r] = make_tuple(u, v, w);
		cout << fixed << setprecision(10) << (long double)sum / (long double)d << endl;
	}


	return 0;
}