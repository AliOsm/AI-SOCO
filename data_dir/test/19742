
// ~/BAU/ACM-ICPC/Teams/Republic_of_Coders/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 100001;
const ll MOD = 1e9 + 7;

int n, m;
vector<set<pair<int, int> > > g;

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif

	scanf("%d%d", &n, &m);
	g.resize(n);
	for (int i = 0; i < n; i++)
		g[i].insert(make_pair(-1, 0));

	for (int i = 0, a, b, c; i < m; i++) {
		scanf("%d%d%d", &a, &b, &c);
		a--, b--;

		auto it = --g[a].lower_bound(make_pair(c, -1));
		bool flag = 1;
		if (it != g[a].end() && it->first < c) {
			pair<int, int> u = make_pair(c, it->second + 1);

			vector<pair<int, int> > tmp;
			for (auto it2 = g[b].rbegin(); it2 != g[a].rend(); it2++) {
				if (it2->first >= c && it2->second <= u.second)
					tmp.push_back(*it2);
				else if (it2->first <= c && it2->second > u.second)
					flag = 0;
				if(it2->first < c) break;
			}

			for (int i = 0; i < tmp.size(); i++)
				g[b].erase(tmp[i]);
			if (flag) g[b].insert(u);
		}
	}

	int ans = 0;
	for (int i = 0; i < n; i++) {
		auto it = --g[i].end();
		ans = max(ans, it->second);
	}

	printf("%d\n", ans);

	return 0;
}