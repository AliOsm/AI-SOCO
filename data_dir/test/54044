/*
1141C. Polycarp Restores Permutation
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const ll prime = 1e9 + 7;

#define F(i,a,b) for(ll i = (ll)(a); i <= (ll)(b); i++)
#define RF(i,a,b) for(ll i = (ll)(a); i >= (ll)(b); i--)

int main(){
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  ll n, q, p[200005] = {0}, mn = 0, diff;
  bool occur[200005] = {0};
  cin >> n;
  F(i,2,n){
    cin >> q; p[i] = p[i-1]+q;
    mn = min(mn,p[i]);
  }
  diff = 1ll-mn;
  if(abs(diff) > n){cout << -1; return 0;}
  F(i,1,n){
    p[i] += diff;
    if(occur[p[i]]){cout << -1; return 0;}
    else{occur[p[i]] = true;}
    if(p[i] > n){cout << -1; return 0;}
  }
  F(i,1,n){cout << p[i] << " ";}
  return 0;
}