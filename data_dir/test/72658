#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack> 
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 1000000 + 10000;
typedef long long LL;
const LL MOD = 1000000000 + 7;

struct unit{
    LL x,y,a,h;
};
LL h1[1001000],h2[1001000];
int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("f.in", "r", stdin); freopen("f.out", "w", stdout);
#endif
    mems(h1, -1);
    mems(h2, -1);
    LL m;
    unit u1,u2;
    cin>>m;
    cin>>u1.h>>u1.a>>u1.x>>u1.y;
    cin>>u2.h>>u2.a>>u2.x>>u2.y;
    
    LL h = u1.h;
    bool g1 = false,g2 = false;
    for(int i = 1; i <= m; ++i)
    {
        h = h * u1.x + u1.y;
        h %= m;
        if (h == u1.a) g1 = true;
    }

    h = u2.h;

    for(int i = 1; i <= m; ++i)
    {
        h = h * u2.x + u2.y;
        h %= m;
        if (h == u2.a) g2 = true;
    }

    if (!(g1 && g2))
    {
        cout<<-1;
        return 0;
    }

    LL cstart1 = -1, clen1 = 0, af1 = -1, cstart2 = -1, af2 = -1, clen2 = 0;

    h = u1.h;
    h1[u1.h] = 0;
    for(int i = 1; i <= m; ++i)
    {
        h = h * u1.x + u1.y;
        h %= m;
        if (h1[h] != -1)
        {
            if (cstart1 == -1) {cstart1 = h1[h];clen1 = i - h1[h];}
        }
        else
        {
            h1[h] = i;
        }

        if (h == u1.a && af1 == -1)
        {
            af1 = i;
        }
    }

    h = u2.h;
    h2[u2.h] = 0;
    for(int i = 1; i <= m; ++i)
    {
        h = h * u2.x + u2.y;
        h %= m;
        if (h2[h] != -1)
        {
            if (cstart2 == -1) {cstart2 = h2[h];clen2 = i - h2[h];}
        }
        else
        {
            h2[h] = i;
        }

        if (h == u2.a && af2 == -1)
        {
            af2 = i;
        }
    }

    if (cstart1 > af1 && cstart2 > af2)
    {
        if (af1 == af2)
        {
            cout<<af1;
            return 0;
        }
        else
        {
            cout<<-1;
            return 0;
        }
    }
    LL ans = 1000000000000000000;
    if (cstart1 <= af1 && cstart2 <= af2)
    {
        for(LL i = 0; i <= m; ++i)
        {
            LL val = af2 + clen2 * i - af1;
            //val %= m;
            //val += m;
            //val %= m;
            if (val >= 0 && val % clen1 == 0)
            {
                ans = min(ans, af2 + clen2 * i);
            }
        }
        for(LL i = 0; i <= m; ++i)
        {
            LL val = af1 + clen1 * i - af2;
            //val %= m;
            //val += m;
            //val %= m;
            if (val >= 0 && val % clen2 == 0)
            {
                ans = min(ans, af1 + clen1 * i);
            }
        }
    }

    if (cstart1 > af1) {swap(clen2, clen1);
        swap(af1, af2);
    }

        for(LL i = 0; i <= m; ++i)
        {
            LL val = af1 + clen1 * i;
            //val %= m;
            //val += m;
            //val %= m;
            if (val >= 0 && val == af2)
            {
                ans = min(ans, af1 + clen1 * i);
            }
        }

        if (1000000000000000000 == ans) ans = -1;
    cout<<ans;

    return 0;
}