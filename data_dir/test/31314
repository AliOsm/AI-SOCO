#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <memory.h>
#include <cmath>
#include <string>
#include <ctime>

using namespace std;
const int MOD = 1000000007;
int n, d;
int root;
int val[5005];
pair<int, int> a[5005];
bool used[5005];
vector<int> g[5005];
int ans;
int solve(int v, int p) {
    long long res = 1;
    for (int i = 0; i < (int)g[v].size(); ++i) {
        int to = g[v][i];
        if (to == p) continue;
        if (used[to] || abs(val[root] - val[to]) > d) continue;
        res = res * (1 + solve(to, v));
        res %= MOD;
    }
    return res;
}
int main() {
  //  freopen("input.txt", "r", stdin);
  // freopen("output.txt", "w", stdout);
    scanf("%d%d", &d, &n);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &a[i].first);
        a[i].second = i;
        val[i] = a[i].first;
    }
    sort(a, a + n);
    for (int i = 1; i < n; ++i) {
        int x, y;
        scanf("%d%d", &x, &y);
        x--; y--;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    memset(used, false, sizeof(used));
    for (int i = 0; i < n; ++i) {
        root = a[i].second;
        ans += solve(a[i].second, -1);
        if (ans >= MOD) ans -= MOD;
        used[a[i].second] = true;
    }
    cout << ans << endl;
    return 0;
}
