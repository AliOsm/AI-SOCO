#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int>PII;
const int MAXX = 1000;

int fr[1009];

priority_queue<PII>pq;
int n;

vector< vector<PII> >v;
void groups()
{
    for (int i = 1; i <= n/2; i++) {
        for (int j = 1; j <= n/2; j++) {
            v.emplace_back();
            v.back().emplace_back(i, j);
            v.back().emplace_back(n+1-i, j);
            v.back().emplace_back(i, n+1-j);
            v.back().emplace_back(n+1-i, n+1-j);
        }
    }
    if (n%2) {
        for (int i = 1; i <= n/2; i++) {
            v.emplace_back();
            v.back().emplace_back(n/2+1, i);
            v.back().emplace_back(n/2+1, n+1-i);
            v.emplace_back();
            v.back().emplace_back(i, n/2+1);
            v.back().emplace_back(n+1-i, n/2+1);
        }
        v.emplace_back();
        v.back().emplace_back(n/2+1, n/2+1);
    }
//    for (vector<PII>vp : v) {
//        cout << "group:";
//        for (PII p : vp) cout << " " << p.first << "," << p.second;
//        cout << endl;
//    }
}

void sorbonash()
{
    cout << "NO" << endl;
    exit(0);
}

int mat[30][30];
void boshao(int x, vector<PII>vp)
{
    for (PII p : vp) {
        mat[p.first][p.second] = x;
    }
}

void solve()
{
    for (vector<PII>vp : v) {
        PII p = pq.top(); pq.pop();
        if (p.first < vp.size()) sorbonash();
        boshao(p.second, vp);

        p.first -= vp.size();
        fr[p.second] -= vp.size();
        if (fr[p.second]) pq.emplace(p);
    }
}

int main()
{
    cin >> n;

    for (int i = 0; i < n*n; i++) {
        int x;
        cin >> x;
        fr[x]++;
    }

    for (int i = 1; i <= MAXX; i++) {
        if (fr[i]) {
            pq.emplace(fr[i], i);
        }
    }

    groups();
    solve();

    cout << "YES\n";

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cout << mat[i][j] << " ";
        }
        cout << "\n";
    }

    return 0;
}
