#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())

typedef pair<int, int> PII;

const int OFFSET = 100;
int c[200][200];
int inque[200][200];
//map<PII, int> c;
//map<PII, int> inque;
queue<int> Q;
int main(void) {
	int n,t;
	scanf("%d%d", &n, &t);
	/*PII x(0, 0);
	c[x] = n;
	if(n>=4) Q.push(x);
	inque[x] = 1;*/

	c[OFFSET][OFFSET]=n;
	if(n>=4) { Q.push(0); Q.push(0); }
	inque[OFFSET][OFFSET]=1;

	const int dx[4]={0,1,0,-1}, dy[4]={1,0,-1,0};
	while(!Q.empty()) {
		int x = Q.front(); Q.pop();
		int y = Q.front(); Q.pop();
		inque[x+OFFSET][y+OFFSET]=0;
		
		int v=c[x+OFFSET][y+OFFSET]/4;
		c[x+OFFSET][y+OFFSET] %= 4;
		for(int i=0;i<4;i++) {
			int nx=x+OFFSET+dx[i], ny=y+OFFSET+dy[i];
			c[nx][ny]+=v;

			if(c[nx][ny]>=4 && !inque[nx][ny]) {
				inque[nx][ny]=1;
				Q.push(nx-OFFSET);
				Q.push(ny-OFFSET);
			}
		}
	}
	for(int i=0;i<t;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		if(abs(x)>64||abs(y)>64) puts("0");
		else printf("%d\n", c[x+OFFSET][y+OFFSET]);
	}
	return 0;
}
