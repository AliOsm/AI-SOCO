/*
    In the name of
        "ALLAH"
    And say "AL-HAMD-U-LILLAH"
*/

#include<bits/stdc++.h>
#define   ll   long long
#define   llu  unsigned long long
#define   _    printf("\n")
int      take() {
    int n;
    scanf("%d",&n);
    return n;

}
double  ttake() {
    double n;
    scanf("%lf",&n);
    return n;
}
ll     takes() {
    ll n;
    scanf("%lld",&n);
    return n;

}

#define  Int            take()
#define  Dnt            ttake()
#define  LL             takes()
#define  done           {return 0;}
#define  fr(i,x,n,a)    for(int i=x;i<=n;i+=a)
#define  FR(a,b,x)      for(int i=(a);i<=(b);i+=(x))
#define  rfr(i,x,n,a)   for(int i=x;i>=n;i--)
int      cas;
#define  print          printf("Case %d:",++cas)
#define  vi             vector<int>
#define  vl              vector<ll>
#define  pb              push_back
#define  pii             pair<int,int>
#define  vii             vector<pii>
#define  pll             pair<ll,ll>
#define  pil             pair<int,ll>
#define  pli             pair<ll,int>
#define  mk              make_pair
#define  fill(x,v)       memset(x,v,sizeof x)

using    namespace      std;

bool     approximatelyEqual(float a, float b, float epsilon) {
    return fabs(a - b) <= ( (fabs(a) < fabs(b) ? fabs(b) : fabs(a)) * epsilon);
}

bool     essentiallyEqual(float a, float b, float epsilon) {
    return fabs(a - b) <= ( (fabs(a) > fabs(b) ? fabs(b) : fabs(a)) * epsilon);
}

bool     definitelyGreaterThan(float a, float b, float epsilon) {
    return (a - b) > ( (fabs(a) < fabs(b) ? fabs(b) : fabs(a)) * epsilon);
}

bool     definitelyLessThan(float a, float b, float epsilon) {
    return (b - a) > ( (fabs(a) < fabs(b) ? fabs(b) : fabs(a)) * epsilon);
}
#define  STR            {struct info}
#define  dbg(x)         {cout<<"ekhane"<<x<<endl;}
#define  SS             second
#define  FF             first
#define  PQ             priority_queue
#define  great          greatest
#define  less           lesser
#define  mii            map<int,int>
#define  mil            map<int,ll>
#define  mll            map<ll,ll>
#define  msb            map<string,bool>
#define  V              vector
#define  M              100005
#define  pf             printf
#define  inf            INT_MAX
//////////////////////////////////////////

int main( ){
    int n = Int , deg[ n + 1 ] , xorSum[ n + 1 ] ;
    if( n == 1 ){
            pf("0\n") ;
        done ;
    }
    vi leaf ; int len = 0 ;
    fr( i , 1 , n  , 1 ){
        deg[ i - 1 ] = Int , xorSum[ i - 1 ] = Int ;
        if( deg[ i - 1 ] == 1 ) leaf.pb( i - 1 ) , len++ ;
    }

    vii ans ;
    for( int i = 0 ; i < len ; i +=1 ){
        int u = leaf[ i ] ;
        if( deg[ u ] <=0 ) continue ;
        int sum = xorSum[ u ] ;
        ans.pb( mk( u , sum ) ) ;
        xorSum[ sum ] ^= u ;
        deg[ sum ]-- ;
        if( deg[ sum ] == 1 ){
            leaf.pb( sum ) ;
            len++ ;
        }
    }
    pf("%d\n",ans.size( ) ) ;
    len = ans.size() ;
    fr( i , 0 , len - 1  , 1 ){
        pf("%d %d\n",ans[ i ].FF , ans[ i ].SS ) ;
    }
    done ;
}
