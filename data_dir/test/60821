#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Try different approaches
using namespace std;

int n, m;
const int MAXN = 55;
string s[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	for(int i = 0; i < n; i++)
		cin >> s[i];

	int ans = 1e9;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
		{
			if(i == j)
				continue;
			for(int k = 0; k < n; k++)
			{
				if(k == i || k == j)
					continue;
				int curr = 0, counter = 1e9;
				for(int x = 0; x < m; x++)
					if(s[i][x] >= '0' && s[i][x] <= '9')
						counter = min(counter, min(x, m - x));
				if(counter == 1e9)
					continue;
				curr += counter;
				counter = 1e9;
				for(int x = 0; x < m; x++)
					if(s[j][x] >= 'a' && s[j][x] <= 'z')
						counter = min(counter, min(x, m - x));
				if(counter == 1e9)
					continue;
				curr += counter;
				counter = 1e9;
				for(int x = 0; x < m; x++)
					if(s[k][x] == '#' || s[k][x] == '*' || s[k][x] == '&')
						counter = min(counter, min(x, m - x));
				if(counter == 1e9)
					continue;
				curr += counter;
				ans = min(ans, curr);
			}
		}

	cout << ans << "\n";
	return 0;
}