//ITNOA
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <queue>
#include <fstream>
#include <cstring>
#include <cstdlib>
#include <iomanip>
#include <cmath>
#include <cassert>

using namespace std;

#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;


#define rep(i, s, e) for(int i = s; i < e; i ++)
//#define int long long
#define X first
#define Y second

typedef long long ll;
typedef long double ld;

const int maxN = 200*1000 + 5;
const int mod = 1000*1000*1000 + 7;

vector<int> g[maxN];
int dis[maxN];
void DFS(int v, int par = -1)
{
	for(int i = 0; i < g[v].size(); i ++)
	{
		int u = g[v][i];
		if(u == par)continue;
		dis[u] = dis[v] + 1;
		DFS(u,v);
	}
}


int c[maxN];
int mark[maxN];

vector<int> a[maxN];
int col[maxN];


void dfs(int v, int cr)
{
	mark[v] = 1;
	col[v] = cr;
	for(int i = 0; i < a[v].size(); i ++)
	{
		int u = a[v][i];
		if(mark[u] || c[u] != c[v]) continue;
		dfs(u, cr);
	}
}



int32_t main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	int n; cin >> n;
	for(int i = 0; i < n; i ++)
		cin >> c[i];

	for(int i = 0; i < n-1; i ++)
	{
		int v, u; cin >> v >> u; v --; u --;
		a[v].push_back(u);
		a[u].push_back(v);
	}


	int cnt = 0;
	for(int i = 0; i < n; i ++)
	{
		if(mark[i]) continue;
		dfs(i, cnt++);
	}


	for(int i = 0; i < n; i ++)
	{
		for(int j = 0; j < a[i].size(); j ++)
		{
			int u = a[i][j];
			if(col[i] != col[u])
			{
				g[col[i]].push_back(col[u]);
			}
		}
	}


	DFS(0);
	int id = max_element(dis,dis+cnt) - dis;
	memset(dis,0,sizeof dis);
	DFS(id);
	
	cout << (*max_element(dis,dis+cnt) + 1) / 2 << endl;
	return 0;
}
