//Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
#define double long double

int n,m;
int arr[200005];
vector<pair<int,int>>v;
int tablemin[200005][(int)log2(200005)+5];
int maxistore[200005];
int maxi(int start,int end)
{
    int p=log2(end-start+1);
    return max(tablemin[start][p],tablemin[end-(1<<p)+1][p]);
}
int check(int i,int j)
{
    int maxval=maxi(i,j);
    int low=0;
    int high=m-1;
    while(low<high)
    {
        int mid=(low+high)/2;
        if(v[mid].first<maxval)
            low=mid+1;
        else
            high=mid;
    }
    return maxistore[low]>=(j-i+1);
}
int dp(int pos)
{
    if(pos==n)
        return 0;
    int low=pos;
    int high=n-1;
    while(low<high)
    {
        int mid=(low+high+1)/2;
        if(!check(pos,mid))
            high=mid-1;
        else
            low=mid;
    }
    return 1+dp(low+1);
}
int32_t main()
{
    IOS;
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n;
        int maxi=0;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
            maxi=max(maxi,arr[i]);
        }
        cin>>m;
        for(int i=0;i<m;i++)
        {
            int a,b;
            cin>>a>>b;
            v.push_back({a,b});
        }
        int fl=0;
        for(int i=0;i<m;i++)
            if(v[i].first>=maxi)
                fl=1;
        if(!fl)
        {
            cout<<-1<<endl;
            for(int i=0;i<=n;i++)
                arr[i]=0;
            v.clear();
            for(int i=0;i<=n;i++)
                memset(tablemin[i],0,sizeof(tablemin[i]));
            for(int i=0;i<=m;i++)
                maxistore[i]=0;
            continue;
        }
        sort(v.begin(),v.end());
        maxistore[m-1]=v[m-1].second;
        for(int i=m-2;i>=0;i--)
            maxistore[i]=max(maxistore[i+1],v[i].second);

        for(int i=0;i<n;i++)
            tablemin[i][0]=arr[i];

        for (int j=1;(1<<j)<=n;j++) 
            for (int i=0;(i+(1<<j)-1)<n;i++)
                tablemin[i][j]=max(tablemin[i][j-1],tablemin[i+(1<<(j - 1))][j-1]);

        cout<<dp(0)<<endl;
        for(int i=0;i<=n;i++)
            arr[i]=0;
        v.clear();
        for(int i=0;i<=n;i++)
            memset(tablemin[i],0,sizeof(tablemin[i]));
        for(int i=0;i<=m;i++)
            maxistore[i]=0;
    }
}