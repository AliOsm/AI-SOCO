#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define int long long
using namespace std;
using namespace __gnu_pbds;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;


const int N=100+7;
const int inf=1e18+5;
const int mod=1e9+7;

char a[N][N];
int dp[N][2];
int ans[N];

main ()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    int n,m;
    cin>>n>>m;
    for (int i=1;i<=n;++i){
        for (int j=0;j<=m+1;++j){
            cin>>a[i][j];
        }
    }
    for (int i=0;i<=n;++i){
        dp[i][0]=inf;
        dp[i][1]=inf;
    }
    dp[n][0]=0;
    for (int i=n;i>=1;--i){
        ans[i]=inf;
        int l=m+1;
        int r=0;
        for (int j=1;j<=m;++j){
            if (a[i][j]=='1'){
                if (l==m+1){
                    l=j;
                }
                r=j;
            }
        }
        int d1=r;
        int d2=m+1-l;
        ans[i]=min(ans[i],dp[i][0]+d1);
        ans[i]=min(ans[i],dp[i][1]+d2);
        dp[i-1][0]=min(dp[i-1][0],dp[i][0]+d1*2+1);
        dp[i-1][0]=min(dp[i-1][0],dp[i][1]+m+2);
        dp[i-1][1]=min(dp[i-1][1],dp[i][1]+d2*2+1);
        dp[i-1][1]=min(dp[i-1][1],dp[i][0]+m+2);
    }
    int f=n;
    for (int i=n-1;i>=1;--i){
        for (int j=1;j<=m;++j){
            if (a[i][j]=='1'){
                f=i;
            }
        }
    }
    cout<<ans[f]<<endl;
}
