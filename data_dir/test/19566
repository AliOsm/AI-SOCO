#include <iostream>
#include <cstdio>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <cstring>
#include <fstream>
#include <memory.h>
#include <iomanip>
#include <omp.h>
#include <string>

using namespace std;

#define right asfdsg
#define left asfdsvs
#define MAXN 1000100
#define F first
#define S second
#define pb push_back
#define mp make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

vector < int > g[200500];
int n, k;
bool used[200500];
int kol[200500];
ll ans = 0;

void pre(int v, int p = 1) {
    kol[v] = used[v];
    for (auto to : g[v])
        if (to != p)
            pre(to, v),
            kol[v] += kol[to];
}

void dfs (int v, int p = 1) {
    for (auto to : g[v]) {
        if (to == p) continue;
        int le = 2 * k - kol[to];
        int ri = kol[to];
        ans += 1ll * min (le, ri);
        dfs (to, v);
    }
}


int main() {
    scanf ("%d%d", &n, &k);
    for (int i = 1; i <= k * 2; i ++) {
        int num;
        scanf ("%d", &num);
        used[num] = true;
    }
    for (int i = 1; i < n; i ++) {
        int from, to;
        scanf ("%d%d", &from, &to);
        g[ from ].push_back( to );
        g[ to ].push_back( from );
    }
    pre(1);
    dfs(1);
    cout << ans;
    return 0;
}
