#include <bits/stdc++.h>
using namespace std;
#define sc  second
#define fs  first
#define ll  long long 
#define ld  long double
#define mp  make_pair
#define pb  push_back
#define vi  vector<int>
#define vvi vector<vi >
#define all(x) x.begin(), x.end()
 
int n, q;
vi  g[300000];
int u[300000], sz[300001], c[300000], p[300000], ma[300000];
 
void dfs_(int v) {
    u[v] = 1;
    sz[v] = 1;
    for (int i = 0; i < g[v].size(); ++i) {
        int to = g[v][i];
        if (u[to] == 0) {
            dfs_(to);
            sz[v] += sz[to];
            if (sz[to] + sz[to] > sz[v])
            	ma[v] = to;
        }
    }
}
 
void dfs(int v) {
    u[v] = 1;
    int x = c[v];
    while (sz[ma[x]] * 2 > sz[v])
    	x = ma[x];
    c[v] = x;
    c[ma[v]] = c[v];
    for (int i = 0; i < g[v].size(); ++i) {
        int to = g[v][i];
        if (u[to] == 0)
            dfs(to);
    }
}
 
int main() {
    scanf("%d %d", &n, &q);
    for (int i = 0; i < n; ++i)
    	p[i] = 0;
    for (int i = 1; i < n; ++i) {
        int x; scanf("%d", &x); --x;
        g[i].pb(x); g[x].pb(i);
        p[i] = x;
    }
    sz[n] = 0;
    for (int i = 0; i < n; ++i)
    	u[i] = 0;
    for (int i = 0; i < n; ++i)
    	ma[i] = n;
    dfs_(0);
 
    for (int i = 0; i < n; ++i)
    	u[i] = 0;
    for (int i = 0; i < n; ++i)
        c[i] = i;
    dfs(0);
 
    for (int i = 0; i < q; ++i) {
        int v; scanf("%d", &v); --v;
        printf("%d\n", c[v] + 1);
    }
 
    return 0;
}