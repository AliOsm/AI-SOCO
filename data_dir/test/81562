/*input
4
3 4
1 1
2 2
3 3
1 3

3 7
1 1
1 2
1 3
2 2
3 1
3 2
3 3

1 1
1 1

2 4
1 1
1 2
2 1
2 2
*/
#include "bits/stdc++.h"
using namespace std;
vector<int> v[2000005], r[2000005];
bool seen[2000005];
void dfs(int u, vector<int> v[], deque<int>& d){
	if(seen[u]) return;
	seen[u] = 1;
	for(auto i: v[u]) dfs(i, v, d);
	d.push_front(u);
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	int T, n, m;
	for(cin >> T; T--; ){
		cin >> n >> m;
		for(int x, y; m--; ){
			cin >> x >> y;
			if(x != y){
				v[x].push_back(y+n);
				r[y+n].push_back(x);
			} else {
				v[y+n].push_back(x);
				r[x].push_back(y+n);
			}
		}
		for(int i = 1; i <= 2*n; ++i) seen[i] = 0;
		deque<int> topo;
		for(int i = 1; i <= n; ++i) dfs(i, v, topo);

		for(int i = 1; i <= 2*n; ++i) seen[i] = 0;
		deque<int> scc;
		dfs(topo[0], r, scc);
			
		if(scc.size() == 2*n){
			cout << "No\n";
		} else {
			cout << "Yes\n";
			set<int> jury;
			for(auto i:scc) if(i <= n) jury.insert(i);
			cout  << n - jury.size() << ' ' << jury.size() << '\n';
			for(int i = 1; i <= n; ++i) if(!jury.count(i))
				cout << i << ' ';
			cout << '\n';
			for(int i:jury) cout << i << ' '; cout << '\n';
		}
		for(int i = 1; i <= 2*n; ++i) {
			v[i].clear(); r[i].clear();
		}
	}
}