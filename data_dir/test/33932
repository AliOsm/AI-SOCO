#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define ull unsigned ll
#define F first                                                                                         
#define S second
#define mp make_pair
#define pb push_back
#define y1 variable
#define matrix vector<vector<double> > 

using namespace std;

const int MIN = 1e3 + 2;                                                                                                                                   
const int MXN = 1e6 + 3;
const int INF = 1e9 + 7;                                                                                                       
const int base = 1e9;
const ll LINF = 1e18 + 15;
const double EPS = 1e-12;

int n, cur1, cur2, cur;
int a[MXN];
bool u1[MXN], u2[MXN];
ll sum;
vector <int> v;
vector <int> w;

int main(){
    #ifdef Pissoir
		//freopen("input.txt", "r", stdin);                                                                                                              
		//freopen("output.txt", "w", stdout);                       
	#else
		ios_base::sync_with_stdio(0);
		cin.tie(0);             
		cout.tie(0);                                                                                         
		//freopen("twopaths.in", "r", stdin);
  		//freopen("twopaths.out", "w", stdout);			
    #endif
	cin >> n;
	for (int i = 1; i <= n; ++i){
		cin >> a[i];
	}	
	u1[1] = 1;
	v.pb(1);
	for (int i = 2; i <= n; ++i){
		if (a[i] > a[v[v.size() - 1]]){
			v.pb(i);
			u1[i] = 1;
		}
	}	
	w.pb(n);
	u2[n] = 1;
	for (int i = n - 1; i >= 1; --i){
		if (a[i] - i > a[w[w.size() - 1]] - w[w.size() - 1]){
			w.pb(i);
			u2[i] = 1;
		}
	}
	reverse(w.begin(), w.end());
	for (int i = 1; i <= n; ++i){
		int r1 = INF, r2 = INF;
		if (cur1 < v.size()) r1 = v[cur1];
		if (cur2 < w.size()) r2 = w[cur2];
		if ((r1 <= n && cur + r1 - i == a[r1]) || (r2 <= n && cur + r2 - i == a[r2])){
			cur++;
		}
		if (u1[i]) cur1++;
		if (u2[i]) cur2++;
		sum += max(0, cur - a[i] - 1);
	}
	cout << sum;
	return 0;
}