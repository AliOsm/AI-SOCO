#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <math.h>

using namespace std;

const int N = (int) 1e6 + 1;
const int md = (int) 1e9 + 7;


#define Min(x,y) ((x) > (y) ? (y) : (x))
#define Max(x,y) ((x) > (y) ? (x) : (y))
#define Sqr(x) ((x) * (x))

int a,b,n;
long long f[N];

void gcd(long long a, long long b,long long &x,long long &y)
{
    if (a == 0)
    {
        x = 0;
        y = 1;
        return;
    }
    long long x1,y1;
    gcd(b % a,a,x1,y1);
    x = y1 - (b / a) * x1;
    y = x1;
}
bool check(int s)
{
    while (s > 0)
    {
        if (s % 10 != a && s % 10 != b) return false;
        s /= 10;
    }
    return true;
}

int main()
{
  #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
   #endif
   scanf("%i%i%i",&a,&b,&n);
   f[0] = 1;
   for(int i = 1;i <= n;i++) f[i] = f[i - 1] * i % md;
   long long ans = 0;
   for (int i = 0;i <= n;i++)
   {
        long long k1 = i,k2 = n - i;
        if (check(k1 * a + k2 * b) == false) continue;
        long long x,y,a1 = f[n - i] * f[i] % md;
        gcd(a1,md,x,y);
        x = (x % md + md) % md;
    
        ans = (ans + x * f[n] % md) % md;
    }
    cout << ans << endl;
        

   

}
