#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cout << #s << " = " << s << endl
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define maxn 100010
#define INF 1e15
#define ff first
#define ss second
#define endl '\n'
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

ll pw[111];
ll arr[111], ans[111];

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int tc;
  cin >> tc;
  while (tc--) {
    ll n, k;
    cin >> n >> k;
    pw[0] = 1;
    int lim = 0;
    for (int i = 1; ; ++i) {
      pw[i] = pw[i - 1] * k;
      if (pw[i] > 10000000000000000LL || i > 60) break;
      lim++;
    }
    for (int i = 1; i <= n; ++i) cin >> arr[i];
    sort(arr + 1, arr + 1 + n);
    bool flag = 1;
    for (int i =  lim; i >= 0; --i) {
      for (int j = n; j >= 1; --j) {
        if (arr[j] - ans[j] >= pw[i]) {
          ans[j] += pw[i];
          break;
        }
      }
    }
    for (int i = 1; i <= n; ++i) {
      if (arr[i] != ans[i]) {
        flag = 0;
        break;
      }
    }
    if (flag) cout << "YES" << endl;
    else cout << "NO" << endl;
    mem(ans, 0);
  }
}



