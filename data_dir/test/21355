#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <stack>
#include <cstring>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 1010;
const int  MOD = int(1e9) + 7;

int a, b;

vector < pair < int, int > > ma, mb;

bool check(int _x1, int _y1, int _x2, int _y2,int _x3,int _y3)
{
    int a1 = _y2 - _y1, a2 = _y3 - _y1, a3 = _y3 - _y2;
    int b1 = _x1 - _x2, b2 = _x1 - _x3, b3 = _x2 - _x3;
    if (a1 * a2 + b1 * b2 != 0)
        return false;
    if (a1 != 0 && b1 != 0 && a2 != 0 && b2 != 0 && a3 != 0 && b3 != 0)
        return true;
    return false;
}

int main()
{
    scanf("%d%d", &a, &b);
    for (int i = 1; i <= 1000; ++i)
    {
        for (int j = i; j <= 1000; ++j)
        {
            if (i * i + j * j == a * a)
                ma.push_back(make_pair(i, j));
            if (i * i + j * j == b * b)
                mb.push_back(make_pair(i, j));
        }
    }
    for (int i = 0; i < ma.size(); ++i)
    {
        for (int j = 0; j < mb.size(); ++j)
        {
            if (check(0, 0, -ma[i].first, ma[i].second, mb[j].first, mb[j].second))
            {
                printf("YES\n%d %d\n%d %d\n%d %d", 0, 0, -ma[i].first, ma[i].second, mb[j].first, mb[j].second);
                return 0;
            }
            if (check(0, 0, -ma[i].second, ma[i].first, mb[j].first, mb[j].second))
            {
                printf("YES\n%d %d\n%d %d\n%d %d", 0, 0, -ma[i].second, ma[i].first, mb[j].first, mb[j].second);
                return 0;
            }
            if (check(0, 0, -ma[i].first, ma[i].second, mb[j].second, mb[j].first))
            {
                printf("YES\n%d %d\n%d %d\n%d %d", 0, 0, -ma[i].first, ma[i].second, mb[j].second, mb[j].first);
                return 0;
            }
            if (check(0, 0, -ma[i].second, ma[i].first, mb[j].second, mb[j].first))
            {
                printf("YES\n%d %d\n%d %d\n%d %d", 0, 0, -ma[i].second, ma[i].first, mb[j].second, mb[j].first);
                return 0;
            }
            if (check(0, 0, -ma[i].second, ma[i].first, mb[j].second, mb[j].first))
            {
                printf("YES\n%d %d\n%d %d\n%d %d", 0, 0, -ma[i].second, ma[i].first, mb[j].second, mb[j].first);
                return 0;
            }
        }
    }
    printf("NO");


    

    return 0;
}
