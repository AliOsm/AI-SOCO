#include <bits/stdc++.h>
         
using namespace std;
typedef long long ll;
typedef vector<ll> vl ;
typedef pair<ll,ll> pl;
         
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
#define FAST ios::sync_with_stdio(0), cin.tie(0),cout.tie(0)
         
const int MOD = 998244353 ;
const int N = 1000005;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e10;
const int K = 205;

ll n,m;
char grid[1005][1005];
bool vis2[1005][1005];  
bool ingrid(int i, int j){
    if(i<0 || i>=n || j<0 || j>=m)return 0;
    if(grid[i][j]=='.')return 0;
    if(vis2[i][j])return 0;
    return 1;
}
int dx[]={0,0,-1,1};
int dy[]={1,-1,0,0};
bool vis[1005][2];


void dfs(int i, int j){
    vis2[i][j]=1;
    for(int k=0;k<4;k++){
        int ii = i+dx[k];
        int jj =j+dy[k];
        if(ingrid(ii,jj)){
            dfs(ii,jj);
        }
    }
}

int main(){
    FAST;
    //freopen("easy.txt","r",stdin);
    cin >> n >> m;
    for(int i=0;i<n;i++){
        cin >> grid[i];
    }
    for(int i=0;i<n;i++){
        int cnt=0;
        int sum=0;
        for(int j=0;j<m;j++){
            if(grid[i][j]=='.'){
                sum=0;
                continue;
            }else{
                if(sum==0){
                    if(cnt>0){
                        cout << -1;
                        return 0;
                    }
                    sum=1;
                    cnt=1;
                }else{
                    sum++;
                }
                vis[i][0]=1;
                vis[j][1]=1;
            }
        }
    }
    //cout << "trol" << endl;
    int cnn=0;
    for(int j=0;j<m;j++){
        int cnt=0;
        int sum=0;
        for(int i=0;i<n;i++){
            if(grid[i][j]=='.'){
                sum=0;
                continue;
            }else{
                cnn++;
                if(sum==0){
                    if(cnt>0){
                        cout << -1;
                        return 0;
                    }
                    sum=1;
                    cnt=1;
                }else{
                    sum++;
                }
                vis[i][0]=1;
                vis[j][1]=1;
            }
        }
    }
    if(cnn==0){
        cout<< 0;
        return 0;
    }
    int cn1=0;
    int cn2=0;
    for(int i=0;i<n;i++){
        if(vis[i][0]==0){
            cn1++;
        }
    }
    for(int i=0;i<m;i++){
        if(vis[i][1]==0){
            cn2++;
        }
    }
    if(cn1>0  && cn2==0){
        cout << -1;
        return 0;
    }
    if(cn2>0 && cn1==0){
        cout << -1;
        return 0;
    }
    int ans=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(ingrid(i,j)){
                dfs(i,j);
                ans++;
            }
        }
    }
    cout << ans;

    
    return 0;
}