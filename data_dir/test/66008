#include<bits/stdc++.h>
#define LL long long
#define fi first
#define se second
#define mk make_pair
#define pii pair<int,int>
#define piii pair<int,pair<int,int> >

using namespace std;

LL x, y, a1, b1, a2, b2, L, R;
LL exgcd(LL a, LL b)
{
    if(b == 0){
        x = 1;
        y = 0;
        return a;
    }
    LL gcd = exgcd(b, a % b);
    LL mid = x;
    x = y;
    y = mid - a / b * y;
    return gcd;
}
int main() {
    cin >> a1 >> b1 >> a2 >> b2 >> L >> R;

    if(a1 == 0 && a2 == 0) {
        if(b1 == b2) {
            puts("1");
        } else {
            puts("0");
        }
    } else if(a1 == 0) {
        LL p = (b1 - b2) / a2;
        if(p * a2 == b1 - b2) {
            puts("1");
        } else {
            puts("0");
        }
    } else if(a2 == 0) {
        LL p = (b2 - b1) / a1;
        if(p * a1 == b2 - b1) {
            puts("1");
        } else {
            puts("0");
        }
    }
    else {
        if(b1 < b2) swap(b1, b2), swap(a1, a2);
        LL gcd = exgcd(a1, -a2);
        if((b2 - b1) % gcd != 0) {
            puts("0");
        } else {
            x *= (b2 - b1) / gcd;
            y *= (b2 - b1) / gcd;
            LL ret = -a2 / gcd;
            if(ret < 0) ret = -ret;
            x %= ret;
            if(x < 0) x += ret;
            if(b1 + x * a1 > R) {
                puts("0");
            } else {
                LL l = 0, r = 4e9 / ret, mid, ans1, ans2;
                while(l <= r) {
                    mid = l + r >> 1;
                    if(b1 + (x + ret * mid) * a1 >= L) ans1 = mid, r = mid - 1;
                    else l = mid + 1;
                }

                l = 0, r = 4e9 / ret;
                while(l <= r) {
                    mid = l + r >> 1;
                    if(b1 + (x + ret * mid) * a1 <= R) ans2 = mid, l = mid + 1;
                    else r = mid - 1;
                }

                printf("%lld\n", ans2 - ans1 + 1);
            }
        }
    }
    return 0;
}

/*
34 64314 836 5976 591751179 605203191
*/
