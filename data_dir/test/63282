#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define ff(i,s,e) for(int i=(s);i<(int)(e);i++)
#define fr(i,s,e) for(int i=(e);i-->(int)(s);)
#define FF(i,s,e) for(int i=(s);i<=(int)(e);i++)
#define Fr(i,s,e) for(int i=(e);i>=(int)(s);i--)

#define gcd(a,b) __gcd(a,b)
#define all(a) a.begin(),a.end()
#define ln putchar('\n')
#define sp putchar(' ')
using namespace __gnu_pbds;
using namespace std;

void init(int i){
#ifndef ONLINE_JUDGE
  char str[100];sprintf(str,"xx/%d.txt",i);freopen(str,"r",stdin);
#endif
}

typedef tree<int,int,less<int>,rb_tree_tag,tree_order_statistics_node_update>imap;

typedef int64_t ll;

typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef map<ll,ll> mll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<bool> vb;
typedef vector<pii> vpii;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<vi> vvi;
typedef vector<double> vd;

template<class T>inline int pr(const T&v);
template<class T, class...Args> inline int pr(const T&a,const Args (&... args));

inline int scan(int&i){return scanf("%d",&i);}
inline int scan(ll&i){return scanf("%" PRId64,&i);}
inline int scan(double&i){return scanf("%lf",&i);}
inline int scan(char&i){int c;while((c=getchar())!=EOF&&c<=' ');i=c;return c!=EOF;}
inline int scan(string&i){i.clear();int c;while((c=getchar())!=EOF&&c<=' ');while(c>' ')i+=c,c=getchar();return i.size();}
inline int scanln(string&i){i.clear();int c;while((c=getchar())!=EOF&&c<' ');while(c>=' ')i+=c,c=getchar();return i.size();}
template<class T> inline int scan(T&a){a.sc();}
template<class T, class U> inline int scan(pair<T,U>&a){scan(a.first);return scan(a.second);}

inline int pr(const int& i){printf("%d",i);}
inline int pr(const unsigned int& i){printf("%x",i);}
inline int pr(const bool i){printf("%d",i);}
inline int pr(const ll&i){printf("%" PRId64,i);}
inline int pr(const unsigned long&i){printf("%" PRId64,(ll)i);}
inline int pr(const double&i){printf("%.12f",i);}
inline int pr(const float&i){printf("%.4f",i);}
inline int pr(const char&i){putchar(i);}
inline int pr(const char*i){printf("%s",i);}
inline int pr(const string&i){for(char c:i)pr(c);}

template<class T>inline int scan(vector<T>&v){for(T&i:v)scan(i);}
template<class T>inline int pr(const vector<T>&v){if(v.empty())return 0;pr(v[0]);ff(i,1,v.size())pr(' '),pr(v[i]);}
template<class T,class U>inline int pr(const pair<T,U>&p){pr(p.first,p.second);}
template<class T>inline int prlns(const vector<T>&v){ff(i,0,v.size())pr(v[i]),pr('\n');}
template<class T, class...Args> inline int scan(T&a,Args (&... args)){return scan(a),scan(args...);}
template<class T, class...Args> inline int pr(const T&a,const Args (&... args)){pr(a),pr(' '),pr(args...);}
template<class T> inline int prln(const T&a){pr(a),ln;}
template<class T, class...Args> inline int prln(const T&a,const Args (&... args)){pr(a),sp,prln(args...);}
template<class...Args> inline int rpr(const Args (&... args)){
#ifndef ONLINE_JUDGE
  pr(args...),ln;fflush(stdout);
#endif
}
inline int gi(){int x;scan(x);return x;}
inline int gis(){int x;scan(x);return x-1;}

template<class T>inline int pr(const T&v){v.print();}

template<class T, class U> inline void smax(T&a,const U&b){if(a<b)a=b;}
template<class T, class U> inline void smin(T&a,const U&b){if(b<a)a=b;}

template<class T> T& operator +=(vector<T>&v,const T&a){v.push_back(a);return v.back();}

const int inf = ~((1<<31));
const ll LargeMod = 4611686018427388039;
const ll MOD = 1E9+7;
const ll linf = 1E17;
typedef unsigned int uint;
const ll lprime = 37ll;


struct problem {
  int n;
  vi v, dp;
  int a, b;
  int solve() {
    int cur = a - b;
    int ans = 0;
    while (cur ){
      ans++;
      cur -= dp[cur];
    }
    pr(ans);
  }
  
  int init() {
    int e = a - b + 1;
    dp.resize(e, 1);
    for (int t : v) {
      int j = t - b % t;
      if (j < t)j+=t;
      for (; j < e; j += t) {
        dp[j-1] = t - 1;
      }
      if(a % t < e)
        smax(dp.back(), a % t);
    }
    fr(i,1,e) {
      smax(dp[i-1], dp[i] - 1);
    }
  }
  
  
  int get_input() {
    scan(n);
    scan(v = vi(n), a, b);
    sort(all(v));
    int p = 0;
    int last = -1;
    for (int i : v)if (i != last && i > 2)last = v[p++] = i;
    v.resize(p);
    n = p;
  }
};

int main(){
  init(1);
  unique_ptr<problem> xx(new problem());
  xx->get_input();
  xx->init();
  xx->solve();
  return 0;
}