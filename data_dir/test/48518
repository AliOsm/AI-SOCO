#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define ll long long int
#define ld long double
#define pb push_back
#define mkp make_pair
#define pii pair<int, int> 
#define pll pair<long long int, long long int>
#define sci(x) scanf("%d", &x)
#define scl(x) scanf("%lld", &x)
#define fi first
#define sc second
#define deb 0

#define N 300000

ll A[300001], D[1000001];
ll BIT[300001];
set<ll> se;
set<ll> :: iterator it;

void init() {
	for (ll i = 1; i <= 1000000; ++i) {
		for (ll j = i; j <= 1000000; j += i) {
			D[j] += 1;
		}
	}
}

void insert(ll x, ll val) {
	for (; x <= N; x += (x&-x)) BIT[x] += val;
}

ll query(ll x) {
	ll ret = 0;
	for (; x > 0; x -= (x&-x)) ret += BIT[x];
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(false);cout.tie(0);cin.tie(0);
	init();
	ll n, m, i, j, k, x, y, z;
	cin >> n >> m;
	for (i = 1; i <= n; ++i) {
		cin >> A[i];
		insert(i, A[i]);
		if (A[i] > 2) se.insert(i);
	}
	while (m--) {
		cin >> z >> x >> y;
		if (z == 1) {
			while (x <= y) {
				it = se.lower_bound(x);
				if (it == se.end() || *it > y) break;
				k = *it;
				insert(k, -A[k]);
				A[k] = D[A[k]];
				insert(k, A[k]);
				if (A[k] <= 2) {
					se.erase(k);
				}
				x = k + 1;
			}
		} else {
			cout << query(y) - query(x-1)  << endl;
		}
	}

	return 0;
}
