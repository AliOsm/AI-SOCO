//be naame khodaa

#include <bits/stdc++.h>
#define Halt return (cout << "NO" << endl), 0;

typedef long long ll;

const int maxN = 100005;

using namespace std;

int s[2];
bool mark[maxN];
int go[maxN][2], b[maxN], deg[maxN], p[maxN];
map <int, int> ind;

bool dfs(int now, int bit)
{
	if (now == -1 || mark[now]) return true;
	mark[now] = true;
	if (go[now][bit] == -1) return false;
	b[now] = b[go[now][bit]] = bit;
	dfs(go[ go[now][bit] ][1 - bit], bit);
}

int main()
{
	int n;
	cin >> n >> s[0] >> s[1];
	for (int i = 0; i < n; i++)
	{
		cin >> p[i];
		ind[p[i]] = i;
		go[i][0] = go[i][1] = -1;
	}
	for (int i = 0; i < n; i++)
		for (int j = 0; j < 2; j++)
			if (ind.find(s[j] - p[i]) != ind.end())
			{
				go[i][j] = ind[s[j]-p[i]];
				deg[i]++;
			}

	for (int i = 0; i < n; i++)
	{
		if (mark[i]) continue;
		if (deg[i] == 0) Halt;
		if (deg[i] == 1)
		{
			int bit = (go[i][0] == -1 ? 1 : 0);
			if (!dfs(i, bit)) Halt;
		}
	}
	for (int i = 0; i < n; i++)
		if (!mark[i])
			dfs(i, 0);
	cout << "YES\n";
	for (int i = 0; i < n; i++)
		cout << b[i] << ' ';
	cout << endl;
    return 0;
}
