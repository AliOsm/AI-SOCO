
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 2e5 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);



int n;

string s[N];
bool in[30];
int   p[30];
int  sz[30];

int get(int x){ return x == p[x] ? x : p[x] = get(p[x]); }

void join(int x , int y){
    if( (x = get(x)) == (y = get(y)) )return;

    if(rand() & 1)swap(x , y);
    p[x] = y;
}

void solve(int testCase){

    scanf("%d" , &n);

    for(int i = 0 ; i < n ; i ++){
            cin >> s[i];
            for(int j = 0 ; s[i][j] ; j ++){
                    in[ int(s[i][j] - 'a') ] = 1;
            }
    }

    for(int i = 0 ; i < 26 ; i ++){
            p[i] = i;
            sz[i] = in[i];
    }

    for(int i = 0 ; i < n ; i ++){
            for(int j = 0 ; s[i][j] ; j ++){
                    join(int(s[i][0] - 'a') , int(s[i][j] - 'a'));
            }
    }

    int ans = 0;
    for(int i = 0 ; i < 26 ; i ++){
            if(p[i] == i && sz[i] > 0)ans ++;
    }

    printf("%d\n" , max(ans , 1));
}

main(){

    int t = 1;
    // scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
