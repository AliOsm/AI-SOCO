#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

using namespace std;
typedef int mt;
//#define mt int
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 1056
#define K 21
#define P 2
#define M (100001)
#define INF 100000000000000007//10000000000000007// 1e16 + 7
#define MOD 1000000007ll  //1000000007//1e9 + 7
#define EPS 1e-9
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:200000000")

mt n;
char s[2][N];
mt p[256];
bool ok = true;
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	rep(0, 2, i)
		scanf("%s", s[i]);
	n = strlen(s[0]);
	rep(0, n, i) {
		if (p[s[0][i]] != s[1][i] && p[s[0][i]] ||
			p[s[1][i]] != s[0][i] && p[s[1][i]])
			ok = false;
		p[s[0][i]] = s[1][i];
		p[s[1][i]] = s[0][i];
	}
	if (ok) {
		vector<pair<mt, mt>> v;
		rep(0, 256, i)
			if (p[i] && i != p[i])
				v.push_back({ min(i, p[i]), max(i, p[i]) });
		sort(v.begin(), v.end());
		v.resize(unique(v.begin(), v.end()) - v.begin());
		printf("%d\n", (mt)v.size());
		for (auto c : v)
			printf("%c %c\n", c.first, c.second);
		putc('\n', stdout);
	}
	else puts("-1");
	
	return 0;
}