#include<bits/stdc++.h>
#define int long long
using namespace std;


const int N = 2e5 + 5, MOD = 1e9 + 7;


int n, l, r, dp[N][3], a[3];

main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> l >> r;
    a[0] += r / 3 + 1;
    if(r - 1 >= 0){
        a[1] += (r - 1) / 3 + 1;
    }
    if(r - 2 >= 0){
        a[2] += (r - 2) / 3 + 1;
    }
    l -= 1;
    a[0] -= l / 3 + 1;
    if(l - 1 >= 0){
        a[1] -= (l - 1) / 3 + 1;
    }
    if(l - 2 >= 0){
        a[2] -= (l - 2) / 3 + 1;
    }
    dp[0][0] = 1;
    for(int i = 1; i <= n; i++){
        for(int j = 0; j < 3; j++){
            for(int k = 0; k < 3; k++){
                dp[i][(j + k) % 3] += dp[i - 1][j] * a[k] % MOD;
                dp[i][(j + k) % 3] %= MOD;
            }
        }
    }
    cout << dp[n][0];
}
