#pragma comment(linker, "/STACK:64000000")

#define _USE_MATH_DEFINES
#define _CRT_NO_DERPECATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <memory.h>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <utility>
#include <algorithm>
#include <functional>
#include <complex>
#include <random>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
#define sq(x) ((x)*(x))
#define INF ((int)(2e9))
#define LINF ((int64)(2e18))
#define EPS ((double)(1e-7))
#define MOD ((int64)(1e9 + 9))
#define y0 xdsf
const int MAXN = 1000010;
int n;
int64 p, q;
int a[2][3];
int x, y, x0, y0;
string s;
int ans = 0;
int was[1000][1000];
string pat = "LRUD";
int dx[4] = {0, 0, -1, 1};
int dy[4] = {-1, 1, 0, 0};

int ok(int tx, int ty)
{
    if(tx <= 0 || tx > x || ty <= 0 || ty > y)
        return 0;
    return 1;
}

void solve()
{
    cin >> x >> y >> x0 >> y0;
    cin >> s;
    int t = 0;
    for(int i = 0; i < s.size(); ++i)
    {
        if (was[x0][y0])
            cout << 0 << ' ';
        else
        {
            t++;
            cout << 1 << ' ';
        }
        was[x0][y0] = 1;
        
        for(int j = 0; j < 4; ++j)
        {
            if (pat[j] == s[i])
            {
                int nx = x0 + dx[j], ny = y0 + dy[j];
                if (ok(nx, ny))
                    x0 = nx, y0 = ny; 
                break;
            }
        }

    }
    cout << x * y - t;
}

int main()
{
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
#endif
    srand(1337);
    
    solve();
    return 0;
}