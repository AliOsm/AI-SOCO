#include <bits/stdc++.h>
#define int long long
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(3); srand(time(NULL))
using namespace std;

int n, sz[100010];
set <int> adj[100010];
vector <int> tr[100010];
char res[100010];

int dfs (int v, int p) {
  sz[v] = 1;
  for (auto x : adj[v]) {
    if (x == p) continue;
    sz[v] += dfs(x, v);
  }
  return sz[v];
}

int getCenter (int v, int p, int n) {
  for (auto x : adj[v]) {
    if (x == p) continue;
    if (sz[x] > n / 2) return getCenter(x, v, n);
  }
  return v;
}

int ccd (int root) {
  int center = getCenter(root, 0, dfs (root, 0));
  for (auto x : adj[center]) {
    adj[x].erase(center);
    tr[center].push_back(ccd(x));
  }
  adj[center].clear();
  return center;
}

void sol(int c, char a) {
  assert('A' <= a && a <= 'Z');
  res[c] = a;
  for (auto x : tr[c]) {
    sol(x, a + 1);
  }
}

signed main() {
  boost();
  cin >> n;
  for (int i = 1; i < n; i++) {
    int u, v;
    cin >> u >> v;
    adj[u].insert(v);
    adj[v].insert(u);
  }
  sol(ccd(1), 'A');
  for (int i = 1; i <= n; i++) cout << res[i] << " "; cout << endl;
  return 0;
}


