#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = 1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = 2e5+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

vi e[N];
struct LCA {
    int f[N][30], dep[N];
    void dfs(int u, int p, int d) { // dfs(rt, rt, 0)
        f[u][0] = p; dep[u] = d;
        rep(j, 1, 30) f[u][j] = f[f[u][j-1]][j-1];
        for (auto v : e[u]) if (v != p) dfs(v, u, d+1);
    }
    int lca(int u, int v) {
        if (dep[u] < dep[v]) swap(u, v);
        for (int i = 29, d = dep[u] - dep[v]; i >= 0; --i)
            if (d >> i & 1) u = f[u][i];
        if (u == v) return u;
        per(i, 0, 30) if (f[u][i] != f[v][i])
            u = f[u][i], v = f[v][i];
        return f[u][0];
    }
} obj;

int n, x;

// -------------------------------------------------- 函数 -------------------------------------------------- //

void Init() {
    rep(i, 0, n+1) e[i].clear();
    rep(i, 1, n) {
        int u, v;
        scanf("%d%d", &u, &v);
        e[u].pb(v);
        e[v].pb(u);
    }
    obj.dfs(1, 1, 0);
}

vi Q;
int dis[N];
void bfs(int rt, int *dis) {
    rep(i, 1, n+1) dis[i] = INF;
    dis[rt] = 0;
    Q.clear(); Q.pb(rt);
    rep(i, 0, sz(Q)) {
        int u = Q[i];
        for (auto v : e[u]) {
            if (dis[v] != INF) continue;
            dis[v] = dis[u] + 1;
            Q.pb(v);
        }
    }
}

int Solve() {
    bfs(1, dis);
    int ans = 0;
    rep(i, 2, n+1) if (sz(e[i]) == 1) {
        int f = obj.lca(i, x);
        if (f == x) {
            ans = max(ans, dis[i]);
        } else {
            if (dis[f] > dis[x] - dis[f]) ans = max(ans, dis[i]);
        }
    }
    return printf("%d\n", ans << 1);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &x)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}