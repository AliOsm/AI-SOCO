#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <bitset>
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <fstream>
#include <sstream>
#include <unordered_map>
#include <unordered_set>
#include <cassert>

using namespace std;

#define lol long long
#define endl "\n";

ifstream in("boysgirls.in");
ofstream out("boysgirls.out");

/*
#define cin in
#define cout out
/**/

int ans = 0;

int dfs(const vector<vector<int> >& g, int v, int p)
{
  vector<int> cur;
  for (auto to : g[v])
  {
    if (to == p)
      continue;

    int c = dfs(g, to, v);
    cur.push_back(c);
  }
  if (cur.size() == 0)
  {
    ans = max(ans, 1);
    return 1;
  }
  if (cur.size() == 1)
  {
    ans = max(ans, cur[0] + 1);
    return cur[0] + 1;
  }
  sort(cur.rbegin(), cur.rend());
  ans = max(ans, cur[0] + cur[1] + int(g[v].size()) - 1);
  return cur[0] + g[v].size() - 1;
}

int main() 
{
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  int t;
  cin >> t;
  while(t--)
  {
    int n;
    cin >> n;
    vector<vector<int> > g(n+1, vector<int> ());
    for (int i = 1; i < n; ++i)
    {
      int a, b;
      cin >> a >> b;
      g[a].push_back(b);
      g[b].push_back(a);
    }

    ans = 0;
    dfs(g, 1, 0);
    cout << ans << endl;
  }
}

/*
6 3 
abcbab

*/