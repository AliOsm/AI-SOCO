#include <bits/stdc++.h>
using namespace std;

typedef long long Long;
const int N = 1e5;

Long x, k, i;
vector<Long> ans;
unordered_map<Long, vector<Long>> divisors;

inline void generateDivisors(Long x) {
	if (divisors.count(x)) {
		return;
	}

	vector<Long> divs;
	for (Long i = 1; i * i <= x; ++i) {
		if (x % i == 0) {
			divs.push_back(i);

			if (i * i != x) {
				divs.push_back(x / i);
			}
		}
	}
	sort(divs.begin(), divs.end());
	divisors[x] = divs;
}

inline void solve(Long x, Long k) {
	if (ans.size() >= N) {
		return;
	}

	if (k == 0 || x == 1) {
		ans.push_back(x);
		return;
	}

	generateDivisors(x);
	auto& divs = divisors[x];

	for (auto& d : divs) {
		solve(d, k - 1);
	}
}

int main() {
	cin >> x >> k;
	solve(x, k);
	for (auto a : ans) printf("%lld ", a);
	return 0;
}