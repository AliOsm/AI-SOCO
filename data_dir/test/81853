#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 5010;

int n;
char s[MAXN][MAXN];
int p[MAXN];
int color[MAXN];
int start = -1;

bool dfs(int v) {
  color[v] = 1;
  for (int i = 0; i < n; ++i) {
    if (s[v][i] == '0') continue;
    if (color[i] == 1) {
      start = i;
      return true;
    } else if (!color[i]) {
      if (dfs(i)) {
        p[v] = i;
        return true;
      }
    }
  }
  color[v] = 2;
  return false;
}

int main() {
#ifdef LOCAL
  freopen("input.txt", "r", stdin);
#endif
  scanf("%d\n", &n);
  for (int i = 0; i < n; ++i)
    scanf("%s", s[i]);
  memset(p, 0xff, sizeof p);
  for (int i = 0; i < n; ++i) {
    if (!color[i] && dfs(i)) {
      vector<int> path;
      int v = start;
      while (v != -1) {
        path.pb(v);
        v = p[v];
      }
      while (path.size() > 3) {             
        int v1 = path[0];
        int v2 = path[(int)path.size() - 2];
        if (s[v1][v2] == '0') {
          path.pop_back();
        } else {
          printf("%d %d %d\n", v2 + 1, path.back() + 1, path[0] + 1);
          return 0;
        }
      }        
      printf("%d %d %d\n", path[0] + 1, path[1] + 1, path[2] + 1);
      return 0;
    }
  }
  puts("-1");
  return 0;
}