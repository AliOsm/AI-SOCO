#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
const char dl='\n';
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
string s,t;
ll ans;
int n,m,k;
//ÏÎÄÓÌÀÉ ßÊÈÉ ÊÎÍÒÅÉÍÅÐ ÏÎÒÐ²ÁÅÍ!!!
stack<char>STACK;
deque<char>DEQUE;
queue<char>QUEUE;
////////////////////////////////////
main()
{
	FX iOS
	int i,j; 
	cin>>n;
	int a[n],b[n],c[n];
	for(i=0;i<n;++i)cin>>a[i];
	multiset<int>seta;
	for(i=0;i<n;++i)cin>>b[i],seta.insert(b[i]);
	for(i=0;i<n;++i)
	{
		int best=n-a[i];
		if(seta.count(best))
			seta.erase(seta.find(best));
		else
		{
			auto it=seta.upper_bound(best);
			if(it==seta.end())--it;
			auto it2=seta.begin();
			auto up=*it;
			auto low=*it2;
			if(((low+a[i])%n)<((up+a[i])%n))
			{
				best=low;
				seta.erase(it2);
			}
			else
			{
				best=up;
				seta.erase(it);
			}
		}
		c[i]=(a[i]+best)%n;
		//debug(a[i],best);
		cout<<c[i]<<" ";
	}
}