#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template <class T> int size(const T &x) { return x.size(); }
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;

bool compared[120][120];

void write(vi A, vi B) {
    cout << A.size() << " ";
    cout << B.size() << " ";
    iter(it,A) cout << *it << " ";
    iter(it,B) cout << *it << " ";
    cout << endl;
}

pair<vi,vi> split(vi A) {
    vi F1,F2;
    rep(i,0,A.size()) {
        if(i < int(A.size())/2) F1.pb(A[i]);
        else F2.pb(A[i]);
    }
    if(F2.size() < F1.size()) swap(F2,F1);
    return pair<vi,vi>(F1,F2);
}


vi join(vi A, vi B) {
    vi C;
    iter(it,A) C.pb(*it);
    iter(it,B) C.pb(*it);
    return C;
}

int nm_compares(vi A, vi B) {
    int count = 0;
    rep(i,0,A.size()) {
        rep(j,0,B.size()) {
            if(!compared[A[i]][B[j]]) count++;
        }
    }
    return count;
}
void mk(vi A, vi B) {
    rep(i,0,A.size()) {
        rep(j,0,B.size()) {
            compared[A[i]][B[j]] = true;
            compared[B[j]][A[i]] = true;
        }
    }
}

int recalc(vi A, vi B, int i, int j) {
    int val = 0;
    rep(z,0,B.size()) if(!compared[A[i]][B[z]]) val--;
    rep(z,0,A.size()) if(!compared[A[z]][B[j]]) val--;
    rep(z,0,B.size()) if(!compared[B[z]][B[j]] && j != z) val++;
    rep(z,0,A.size()) if(!compared[A[i]][A[z]] && i != z) val++;
    return val;
} 

int main() {
    cin.sync_with_stdio(false);
    int t;
    cin >> t;
    rep(test,0,t) {
        int n;
        cin >> n;
        int mx = 0;
        memset(compared,0,sizeof(compared));
        vi A;
        vi B;
        rep(i,0,n) {
            if(i < n/2) A.pb(i+1);
            else B.pb(i+1);
        }
        rep(z,0,9) {
            int nm = nm_compares(A,B);
            bool found = true;
            rep(i,0,min(A.size(), B.size())) {
                int val = recalc(A,B,i,i);
                if(nm+val > nm) {
                    nm += val;
                    swap(A[i], B[i]);
                }
            }
            if(nm == 0) break;
            write(A,B);
            int ans;
            cin >> ans;
            if(ans == -1) return 0;
            mx = max(mx,ans);
            mk(A,B);
        }
        cout << -1 << " " << mx << endl;
    }
    return 0;
}


