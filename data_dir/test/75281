#include<bits/stdc++.h>

using namespace std;

#define pb push_back
const int block = 500;
const int maxi = 1e6+10;
vector<pair<pair<int,int>, int>> v[maxi];
int n,q;
long long a[maxi];
long long ans;
int cnt[maxi];
long long  rez[maxi];

void add_interval(int l, int r)
{
    for (int i=l;i<=r;i++)
    {
        ans+=a[i]*(2*cnt[a[i]] + 1);
        cnt[a[i]]++;
    }
}

void remove_interval(int l, int r)
{
    for (int i=l;i<=r;i++)
    {
        ans-=(2*cnt[a[i]] - 1)*a[i];
        cnt[a[i]]--;
    }
}

int main()
{
    cin>>n>>q;

    for (int i=1;i<=n;i++)
        scanf("%lld",&a[i]);

    for (int i=1;i<=q;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        v[x/block].pb({{y,x},i});
    }


    for (int i=0;i<=n/block;i++)
    {
        sort(v[i].begin(),v[i].end());

        for (int j=1;j<=n;j++)
            cnt[a[j]] = 0;

        int start = (i+1)*block;
        int curPoz = start;
        ans = 0;
        for (auto j:v[i])
            if (start>j.first.first)
        {
            add_interval(j.first.second, j.first.first);
            rez[j.second] = ans;
            remove_interval(j.first.second, j.first.first);
        } else
        {
             add_interval(curPoz, j.first.first);
             curPoz = j.first.first + 1;
             add_interval(j.first.second, start-1);
             rez[j.second] = ans;
             remove_interval(j.first.second, start-1);
        }
    }

    for (int i=1;i<=q;i++)
        printf("%lld\n", rez[i]);
}
