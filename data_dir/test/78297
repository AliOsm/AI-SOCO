#include <bits/stdc++.h>
using namespace std;
    
#define fastIO ios::sync_with_stdio(false);	cin.tie(NULL); cout.tie(NULL);
#define asc(s) sort(s.begin(),s.end())
#define des(s) sort(s.rbegin(),s.rend())
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define rev(v) reverse(v.begin(), v.end())
#define lower(s) transform(s.begin(), s.end(), s.begin(), ::tolower);
#define upper(s) transform(s.begin(), s.end(), s.begin(), ::toupper);
#define precision(x,p) fixed<<setprecision(p)<<x
#define mod 1000000007
#define PI 3.14159265358979
typedef long long ll;
    
vector<string> split(string s)
{
    istringstream buf(s);
    istream_iterator<string>beg(buf), end;    
    vector<string>list(beg, end);
    return list;
}
    
    
bool isvowel(char c)
{
    string s = "aeiou";
    if(find(s.begin(),s.end(), c) != s.end()) return true;
    return false; 
}

bool cmp(pair <int,int> &a, pair <int,int> &b)
{
    return a.second > b.second || (a.second==b.second && a.first>b.first);
}

int subseq(vector <int>v, int last)
{
    
    int ans = INT_MIN;
    int count = 0;

    int n = v.size();
    last%=n;
    int i=(n-last)%n;
    int end = (i-1+n)%n;
    // cout<<endl<<"Last : "<<last<<i<<end<<endl;
    while(i!=end)
    {
        if(v[i]==1) count++;

        else
        {
            ans = max(count,ans);
            count = 0;
        }

        i = (i+1)%n;
    }

    if(v[i]==1) count++;

    ans = max(ans,count);

    return ans;
}

void solve()
{
    ll n;
    cin>>n;

    ll x,y;
    cin>>x>>y;

    ll ans1 = max(abs(x-1), abs(y-1));
    ll ans2 = max(abs(n-x), abs(n-y));

    ans1 <= ans2 ? cout<<"White" : cout<<"Black";

}


int main()
{

    fastIO

    int t=1;
    // cin>>t;
    
    for(int test_case=1;test_case<=t;test_case++)
    {
        solve();
    }
        return 0;
    
}   