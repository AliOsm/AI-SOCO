#include<bits/stdc++.h>
//#define DEBUG
#define FOR(i,n) for(int i=1;i<=n;i++)
#define FORZ(i,n) for(int i=0;i<n;i++)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define piii pair<pair<int,int>,int>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007  
#define LD long long double
#define bpc __builtin_popcount
#define gentum getnum
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

char S[100004];
ll cur[30];
ll global[30];

int main()
{
    int n=getnum();

    while(n--)
    {
        gets(S+1);
        int len=strlen(S+1);

        for(int i=0;i<27;i++)cur[i]=0;

        ll count=0,c=0;
        for(int i=1;i<=len;i++)
        {
            if(S[i]!=S[i-1])count=0,c=S[i]-'a';
            count++;
            cur[c]=max(cur[c],count);
        }

        for(int i=0;i<27;i++)
        {
            if(cur[i]==len)
            {
                cur[c]=max(cur[c],(global[c]+1)*cur[c]+global[c]);
            }
        }

        ll l;
        for(l=1;S[1]==S[l];l++);
        l--;

        ll r;
        for(r=len;S[len]==S[r];r--);
        r=len-r;

        if(S[1]==S[len]&&l!=len&&global[S[1]-'a'])
        {
            int c=S[1]-'a';
            cur[c]=max(cur[c],l+r+1);
        }
        if(global[S[1]-'a'])
        {
            int c=S[1]-'a';
            cur[c]=max(cur[c],l+1);
        }
        if(global[S[len]-'a'])
        {
            int c=S[len]-'a';
            cur[c]=max(cur[c],r+1);
        }

        for(int i=0;i<27;i++)
        {
            if(cur[i])global[i]=cur[i];
            else if(global[i])global[i]=1;
        }
    }

    ll mx=0;

    for(int i=0;i<27;i++)mx=max(mx,global[i]);

    cout<<mx;
}