#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>
#include <deque>
#include <bitset>
#include <iterator>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>
#include <utility>
#include <iomanip>
#include <limits>
#include <time.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;

const int MAX = 2e5 + 5;
vector<ii> all[MAX];
int n, m;

int dis(int a, int b) {
    if(a > b) swap(a, b);
    return min(b - a, n - b + a);
}

bool exists(const vector<ii> &v, ii ele) {
    auto it = lower_bound(v.begin(), v.end(), ele);
    return it != v.end() && *it == ele;
}

int main() {
    scanf("%d %d", &n, &m);
    fori(i, 1, m + 1) {
        int a, b;
        scanf("%d %d", &a, &b);
        a--;
        b--;
        if(a > b) swap(a, b);
        all[dis(a, b)].emplace_back(a, b);
    }
    fori(i, 0, n) sort(all[i].begin(), all[i].end());
    bool ok = false;
    fori(i, 1, n) {
        if(n % i) continue;
        int k = i;
        bool deu_bom = true;
        fori(j, 0, n + 1) {
            for(auto &each : all[j]) {
                int x, y;
                tie(x, y) = each;
                ii a = ii((x + k) % n, (y + k) % n);
                ii b = ii(a.second, a.first);
                if(!exists(all[j], a) && !exists(all[j], b)) {
                    deu_bom = false;
                    break;
                }
            }
            if(!deu_bom) break;
        }
        if(deu_bom) {
            ok = true;
            break;
        }
    }
    puts(ok ? "Yes" : "No");
    return 0;
}

