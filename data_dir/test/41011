#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <string>
#include <stack>
#include <cstring>
#include <vector>
#include <algorithm>
#include <map>
#include <unordered_map>

using namespace std;

const int N = 1000010;
const int  MOD = int(1e9) + 7;

int n, m, u, v;
long long POW = 1e6 + 7;
vector < int > G[N];
long long h[N];
long long ans = 0;

void solve()
{
    for (int i = 1; i <= n; ++i)
        sort(G[i].begin(), G[i].end());
    for (int i = 1; i <= n; ++i)
    {
        long long p = 1;
        h[i] = 0;
        for (int j = 0; j < G[i].size(); ++j)
        {
            h[i] = h[i] + p * G[i][j];
            p = p * POW;
        }
    }
    sort(h + 1, h + n + 1);
    int cnt = 1;
    for (int i = 2; i <= n; ++i)
    {
        if (h[i] == h[i - 1])
            cnt++;
        else
        {
            ans += 1ll * cnt * (cnt - 1) / 2;
            cnt = 1;
        }
    }
    ans += 1ll * cnt * (cnt - 1) / 2;
}
        

int main()
{

    scanf("%d%d", &n, &m);
    for (int i = 0; i < m; ++i)
    {
        scanf("%d%d", &u, &v);
        G[u].push_back(v);
        G[v].push_back(u);
    }
    solve();
    for (int i = 1; i <= n; ++i)
        G[i].push_back(i);
    solve();
    printf("%I64d", ans);
    return 0;
}
