//besmellah
#include <bits/stdc++.h>
using namespace std;

const int maxn = 3e5 + 2, inf = 5e5;
int seg[4 * maxn], x[maxn];

void add(int id, int L, int R, int l, int r, int val){
	if (r == l)
		return;
	if (R <= l || r <= L)
		return;
	if (L >= l && R <= r){
		seg[id] = min(seg[id], val);
		return;
	}
	int mid = (L + R) / 2;
	add(2 * id, L, mid, l, r, val);
	add(2 * id + 1, mid, R, l, r, val);
}

int get(int id, int L, int R, int idx){
	if (idx < L || idx >= R)
		return inf;
	if (R == L + 1)
		return seg[id];
	int mid = (L + R) / 2;
	int x = get(2 * id, L, mid, idx), y = get(2 * id + 1, mid, R, idx);
	return min(min(x, y), seg[id]);
}

int main(){
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, m;
	cin >> n >> m;
	fill(seg, seg + 4 * n + 1, inf);
	for (int i = 0; i < m; i++){
		int l, r;
		cin >> l >> r >> x[i];
		l --;
		r --;
		x[i] --;
		add(1, 0, n, l, x[i], i);
		add(1, 0, n, x[i] + 1, r + 1, i);
	}
	for (int i = 0; i < n; i++){
		int y = get(1, 0, n, i);
		if (y == inf)
			cout << 0 << ' ';
		else
			cout << x[y] + 1 << ' ';
	}
}
