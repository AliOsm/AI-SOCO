#include<iostream>
#include<algorithm>
#include<queue>
#include<string>
#include<vector>
#include<map>
#include<list>
#include<set>
#include<cstring>
#include<ctime>
#include<cmath>
#include<limits>
#include<iterator>
#include<functional>
#include<unordered_map>
#include<stack>
#include<bitset>

#define all(v) v.begin(), v.end()
#define setv(ar, val) memset(ar, val, sizeof(ar));
#define ll long long int
#define ull unsigned long long int
#define PI 3.1415926535897932384626433832795
#pragma comment(linker, "/STACK:536870912")
#pragma warning(disable : 4996)
using namespace std;

const int N = 1005, mod = 998244353;
int a[N], dp[N][N];

void f(int &a, int b) {
	a += b;
	if (a >= mod)
		a -= mod;
}
int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int n;
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}

	dp[0][0] = 1;

	for (int i = 0; i < n; i++) {
		for (int j = 1; j <= n; j++) {
			f(dp[i + 1][j - 1], dp[i][j]);
		}
		if (a[i] > 0 && a[i] <= n) {
			f(dp[i + 1][a[i]], dp[i][0]);
		}
		for (int j = 0; j <= n; j++) {
			f(dp[i + 1][j], dp[i][j]);
		}
	}

	printf("%d\n", (mod + dp[n][0] - 1) % mod);



	




	return 0;
}