#include <bits/stdc++.h>
using namespace std;

int n, a, b;
int p[160000];
vector<int> kitten[160000];

int findSet(int i) {
	return p[i] == i ? i : p[i] = findSet(p[i]);
}

void unionSet(int i, int j) {
	int x = findSet(i);
	int y = findSet(j);

	if (kitten[x].size() < kitten[y].size()) swap(x, y);
	for (int v : kitten[y]) {
		kitten[x].push_back(v);
	}

	p[y] = x;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n;
	for (int i = 1; i <= n; i++) {
		p[i] = i;
		kitten[i].push_back(i);
	}

	while (--n) {
		cin >> a >> b;
		unionSet(a, b);
	}

	int start = findSet(1);
	for (int i = 0; i < kitten[start].size(); i++) {
		if (i) cout << ' ';
		cout << kitten[start][i];
	}
	cout << '\n';

	return 0;
}