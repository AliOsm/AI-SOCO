#include <bits/stdc++.h>
#define int long long
using namespace std;
int32_t main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int t;cin>>t;
    while(t--){
        int n;cin>>n;
        map<string,int> m,tm;
        string s[n+1];
        int fl=0;
        int c[2][2];
        vector<int> ans;
        memset(c,0,sizeof(c));
        for(int i=0;i<n;i++){
            cin>>s[i];
            string t=s[i];
            tm[s[i]]++;
            c[t[0]-'0'][t.back()-'0']++;
            string tr=t;
            reverse(tr.begin(),tr.end());
            if(tr>t)
                tr=t;
            m[tr]++;
            if(m[tr]>2)
                fl=1;
        }
        if(fl || (c[0][1]==0 && c[1][0]==0 && c[0][0] && c[1][1])){
            cout<<-1<<"\n";
            continue;
        }
        m.clear();
        int vis[n+1]={0};
        for(int i=0;i<n;i++){
            string t=s[i];
            string tr=t;
            reverse(tr.begin(),tr.end());
            if(m[t]>0){
                ans.push_back(i+1);
                vis[m[t]]=1;
                vis[i+1]=1;
            } else if(m[tr]>0){
                vis[m[tr]]=1;
                vis[i+1]=1;
            } else {
                m[t]=i+1;
            }
        }

        vector<int> cc[2][2];
        for(int i=0;i<n;i++){
            if(vis[i+1])
                continue;
            cc[s[i][0]-'0'][s[i].back()-'0'].push_back(i+1);
        }
        if(cc[0][1].size()>cc[1][0].size()){
            while(cc[0][1].size()-cc[1][0].size()>1){
                cc[1][0].push_back(1);
                ans.push_back(cc[0][1].back());
                cc[0][1].pop_back();
            }
        } else {
            while(cc[1][0].size()-cc[0][1].size()>1){
                cc[0][1].push_back(1);
                ans.push_back(cc[1][0].back());
                cc[1][0].pop_back();
            }
        }
        sort(ans.begin(),ans.end());
        cout<<ans.size()<<"\n";
        for(auto i:ans)
            cout<<i<<" ";
        cout<<"\n";
    }
    
}

