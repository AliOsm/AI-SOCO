#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define all(a) a.begin(), a.end()
#define forn(i, n) for(int i = 0; i < int(n); i++) 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.x << ", " << a.y << ")";
}

template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i) out << ", ";
		out << v[i];
	}
	return out << "]";
}

mt19937 rnd(time(NULL));

const int INF = int(1e9);
const li INF64 = li(1e18);
const int MOD = INF + 7;
const ld EPS = 1e-9;
const ld PI = acos(-1.0);

const int N = 200 * 1000 + 13;

int w, h, n;
pt a[N];

bool read () {
	if (scanf("%d%d%d", &h, &w, &n) != 3)
		return false;
	forn(i, n){
		scanf("%d%d", &a[i].x, &a[i].y);
		--a[i].x, --a[i].y;
	}
	return true;
}

vector<int> pos[N];

int p[N];
int rk[N];

int getP(int a){
	return (a == p[a] ? a : p[a] = getP(p[a]));
}

bool unite(int a, int b){
	a = getP(a);
	b = getP(b);
	
	if (a == b)
		return false;
	
	if (rk[b] > rk[a])
		swap(a, b);
	
	p[b] = a;
	rk[a] += rk[b];
	
	return true;
}

vector<int> un[N];

void solve() {
	forn(i, N) pos[i].clear();
	forn(i, n) pos[a[i].y].pb(a[i].x);
	
	forn(i, h){
		p[i] = i;
		rk[i] = 1;
	}
	
	int cnt = h;
	forn(i, w)
		forn(j, sz(pos[i]) - 1)
			cnt -= unite(pos[i][j], pos[i][j + 1]);
	
	/*forn(i, N) un[i].clear();
	
	forn(i, n)
		un[getP(a[i].x)].pb(a[i].y);
	
	forn(i, h){
		sort(all(un[i]));
		un[i].resize(unique(all(un[i])) - un[i].begin());
	}*/
	
	set<int> ys;
	forn(i, n) ys.insert(a[i].y);
	
	printf("%d\n", w - sz(ys) + cnt - 1);
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	
	int tt = clock();
	
#endif
	
	cerr.precision(15);
	cout.precision(15);
	cerr << fixed;
	cout << fixed;

	while(read()) {	
		solve();
		
#ifdef _DEBUG
	cerr << "TIME = " << clock() - tt << endl;
	tt = clock();
#endif

	}
}