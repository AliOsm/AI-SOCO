#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <cstring>
#include <unordered_map>

using namespace std;

#define ll long long
#define all(aaa) aaa.begin(), aaa.end()
#pragma warning(disable : 4996)

const int N = 20;
int a[N][N];
map<int, int> mp;

signed main() {
#ifdef HOME
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;

	for (int i = 0; i < n * n; i++) {
		int x;
		cin >> x;
		mp[x]++;
	}

	int h = n / 2;

	if (n % 2 == 0) {
		int j = 0;

		for (auto p : mp) {
			if (p.second % 4) {
				cout << "NO";
				return 0;
			}
			p.second /= 4;
			while (p.second--) {
				a[j / h][j % h] = p.first;
				j++;
			}
		}

		
	}
	else {
		int x = 0, y = 0, z = 0, j = 0;
		for (auto p : mp) {
			int k = p.second / 4;
			while (j < h * h && k--) {
				a[j / h][j % h] = p.first;
				j++;
				p.second -= 4;
			}
			k = p.second / 2;
			while (k--) {
				if (x < h) {
					a[h][x] = p.first;
					a[h][n - 1 - x] = p.first;
					x++;
				}
				else if (y < h) {
					a[y][h] = p.first;
					a[n - 1 - y][h] = p.first;
					y++;
				}
				else {
					cout << "NO";
					return 0;
				}
				p.second -= 2;
			}
			if (p.second == 1 && z != 1) {
				a[h][h] = p.first;
				z = 1;
			}
			else if (p.second) {
				cout << "NO";
				return 0;
			}
		}	
	}

	cout << "YES\n";


	for (int i = 0; i < h; i++) {
		for (int j = 0; j < h; j++) {
			a[n - 1 - i][j] = a[i][j];
			a[i][n - 1 - j] = a[i][j];
			a[n - 1 - i][n - 1 - j] = a[i][j];
		}
	}

	

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cout << a[i][j] << " ";
		}
		cout << "\n";
	}

	return 0;
}