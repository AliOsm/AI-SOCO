//#define _USE_MATH_DEFINES
//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

int get(const int x1, const int y1, const int x2, const int y2) {
    cout << "? " << x1 << ' ' << y1 << ' ' << x2 << ' ' << y2 << endl;
    int res;
    cin >> res;
    return res;
}

int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("out.txt", "w", stdout);
//    cin.tie(0);
//    cout << fixed << setprecision(20);
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;

    bool sw = false;
    vector<int> base;
    for (int i = 1; i < n; ++i) {
        int res = get(i, 1, i, n);
        if (res&1)
            base.push_back(i);
    }
    if (base.size() == 1)
        base.push_back(n);

    if (base.empty()) {
        sw = true;
        for (int i = 1; i < n; ++i) {
            int res = get(1, i, n, i);
            if (res&1)
                base.push_back(i);
        }
        if (base.size() == 1)
            base.push_back(n);
    }

    vector<pair<int,int>> ans;

    for (const int x : base) {
        int l = 1;
        int r = n;
        while (r > l) {
            int mid = (l + r) >> 1;
            int res;
            if (sw) {
                res = get(l, x, mid, x);
            } else {
                res = get(x, l, x, mid);
            }
            if (res&1)
                r = mid;
            else
                l = mid + 1;
        }
        if (sw)
            ans.emplace_back(l, x);
        else
            ans.emplace_back(x, l);
    }

    cout << "! " << ans[0].first << ' ' << ans[0].second << ' ' << ans[1].first << ' ' << ans[1].second << endl;

}
