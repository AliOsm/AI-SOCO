#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define pii pair<int, int> 
#define vi vector<int>
#define mp make_pair
#define pb push_back

const int POS = 1005;
const int DIFF = 1005;
const int CHR = 4;
const int SHIFT = 1005;
int n, k;
string s;
int dp[POS][CHR][DIFF * 2];

int main() {
	ios_base::sync_with_stdio(false);
	cin>>n>>k;
	cin>>s;
	int len = s.length();
	memset(dp, -1, sizeof(dp));
	if ((s[0] == 'W' || s[0] == '?') && (k > 1 || n == 1)) {
		dp[0][1][1 + SHIFT] = 0;
	}
	if ((s[0] == 'L' || s[0] == '?') && (k > 1 || n == 1)) {
		dp[0][2][-1 + SHIFT] = 0;
	}
	if (s[0] == 'D' || s[0] == '?') {
		dp[0][3][SHIFT] = 0;
	}
	for (int i = 1; i < s.length(); i++) {
		for (int j = 1; j < 2 * DIFF; j++) {
			if (abs(j - DIFF) >= k && i < s.length() -1) continue;
			if (s[i] == 'W' || s[i] == '?') {
				for (int k = 1; k <= 3; k++) if (dp[i-1][k][j-1] != -1) dp[i][1][j] = k;
			}
			if (s[i] == 'L' || s[i] == '?') {
				for (int k = 1; k <= 3; k++) if (dp[i-1][k][j+1] != -1) dp[i][2][j] = k;
			}
			if (s[i] == 'D' || s[i] == '?') {
				for (int k = 1; k <= 3; k++) if (dp[i-1][k][j] != -1) dp[i][3][j] = k;
			}
		}
	}
	for (int i = 1; i <= 3; i++) {
		if (dp[len - 1][i][SHIFT + k] != -1) {
			string res = "";
			int cur_diff = k + SHIFT;
			for (int j = len - 1; j >= 0; j--) {
				int prev_diff = cur_diff;
				if (i == 1) {
					res += "W";
					cur_diff--;
				}
				else if (i == 2) {
					res += "L";
					cur_diff++;
				}
				else res += "D";
				i = dp[j][i][prev_diff];
			}
			reverse(res.begin(), res.end());
			cout<<res<<endl;
			return 0;
		}
		else if (dp[len-1][i][SHIFT-k] != -1) {
			string res = "";
			int cur_diff = SHIFT - k;
			for (int j = len - 1; j >= 0; j--) {
				int prev_diff = cur_diff;
				if (i == 1) {
					res += "W";
					cur_diff--;
				}
				else if (i == 2) {
					res += "L";
					cur_diff++;
				}
				else res += "D";
				i = dp[j][i][prev_diff];
			}
			reverse(res.begin(), res.end());
			cout<<res<<endl;
			return 0;
		}
	}
	cout<<"NO\n";
	return 0;
}