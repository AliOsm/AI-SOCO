//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

const int N = 3e5 + 10;
const int L = 20;

int Min[N][L], Gcd[N][L], n;

bool check(int l, int len){
    int mn = 1e9 + 10, gc = 0;
    for (int i = 0; i < L; i ++){
        if (len >> i & 1){
            mn = min(mn, Min[l][i]);
            gc = __gcd(gc, Gcd[l][i]);
            l += 1 << i;
        }
    }
    return (mn == gc);
}

bool isVal(int len){
    for (int i = 1; i <= n - len + 1; i ++)
        if (check(i, len))
            return 1;
    return 0;
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int x;
    cin >> n;
    memset(Min, 63, sizeof Min);
    for (int i = 1; i <= n; i ++)
        cin >> x, Min[i][0] = Gcd[i][0] = x;
    for (int i = 1; i < L; i ++){
        for (int j = 1; j <= n; j ++){
            int ind = min(N - 1, j + (1 << i - 1));
            Min[j][i] = min(Min[j][i - 1], Min[ind][i - 1]);
            Gcd[j][i] = __gcd(Gcd[j][i - 1], Gcd[ind][i - 1]);
        }
    }
    int l = 1, r = n + 1;
    while (r - l > 1){
        int mid = l + r >> 1;
        if (isVal(mid))
            l = mid;
        else
            r = mid;
    }
    vector < int > ans;
    for (int i = 1; i <= n - l + 1; i ++)
        if (check(i, l))
            ans.push_back(i);
    cout << ans.size() << ' ' << l - 1 << '\n';
    for (int y : ans)
        cout << y << ' ';
    return 0;
}