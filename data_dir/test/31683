#include <bits/stdc++.h>

using namespace std;

const int MAXN=2500005;
const double pi=acos(-1.0);
typedef long long LL;
struct Node
{
    double x,y;
    Node() {}
    Node(double x,double y):x(x),y(y){}
    
    Node operator + (const Node& t) const
    {
        return Node(x+t.x,y+t.y);
    }
    Node operator - (const Node& t) const 
    {
        return Node(x-t.x,y-t.y);
    }
    Node operator * (const Node& t) const 
    {
        return Node(x*t.x-y*t.y,x*t.y+y*t.x);
    }
}x1[MAXN],x2[MAXN];
char s1[MAXN],s2[MAXN];
void prepare(Node a[],int n)
{
    int j=n/2;
    for (int i=1;i<n-1;++i)
    {
        if (i<j) swap(a[i],a[j]);
        int k=n/2;
        while (j>=k)
        {
            j-=k;
            k/=2;
        }
        if (j<k) j+=k;
    }
}

void FFT(Node a[],int n,int op)
{
    prepare(a,n);
    for (int len=2,len2=1;len<=n;len2=len,len*=2)
    {
        Node wn=Node(cos(op*2*pi/len),sin(op*2*pi/len));
        Node w=Node(1,0);
        for (int k=0;k<len2;++k,w=w*wn)
        {
            for (int i=k;i<n;i+=len)
            {
                Node dq=a[i+len2]*w;
                a[i+len2]=a[i]-dq;
                a[i]=a[i]+dq;
            }
        }
    }
    if (op==-1)
    {
        for (int i=0;i<n;++i) a[i].x/=n;
    }
}
int T,len,len1,len2,n;
const double eps=1e-7;
char s[MAXN];
LL f[MAXN];
int main()
{
	scanf("%d",&T);
	int TT=T;
	while (T--)
	{
		scanf("%d",&len);
		scanf("%s",s);
		TT--;
		len1=len;len2=len;
		n=1;
		while (n<len1+len2) n*=2;
		for (int i=0;i<len1;++i) 
			if (s[i]=='V') x1[i].x=1,x1[i].y=0;
			else x1[i].x=0,x1[i].y=0;
		for (int i=len1;i<n;++i) x1[i].x=0,x1[i].y=0;
		for (int i=0;i<len2;++i)
			if (s[len2-i-1]=='K') x2[i].x=1,x2[i].y=0;
			else x2[i].x=0,x2[i].y=0;
		for (int i=len2;i<n;++i) x2[i].x=0,x2[i].y=0;
		FFT(x1,n,1);
		FFT(x2,n,1);
		for (int i=0;i<n;++i) x1[i]=x1[i]*x2[i];
		FFT(x1,n,-1);		
		for (int i=0;i<=len;++i) f[i]=0;
		for (int i=0;i<len;++i) if (x1[i].x>1-eps) f[len-1-i]+=1;
		for (int i=0;i<len1;++i) 
			if (s[i]=='K') x1[i].x=1,x1[i].y=0;
			else x1[i].x=0,x1[i].y=0;
		for (int i=len1;i<n;++i) x1[i].x=0,x1[i].y=0;
		for (int i=0;i<len2;++i)
			if (s[len2-i-1]=='V') x2[i].x=1,x2[i].y=0;
			else x2[i].x=0,x2[i].y=0;
		for (int i=len2;i<n;++i) x2[i].x=0,x2[i].y=0;
		FFT(x1,n,1);
		FFT(x2,n,1);
		for (int i=0;i<n;++i) x1[i]=x1[i]*x2[i];
		FFT(x1,n,-1);		
		for (int i=0;i<len;++i) if (x1[i].x>1-eps) f[len-1-i]+=1;
		for (int i=1;i<=len;++i) 
			for (int j=i+i;j<=len;j+=i) f[i]+=f[j];
		int ans=0;
		for (int i=1;i<=len;++i) if (f[i]==0) ans++;
		printf("%d\n",ans);
		for (int i=1;i<=len;++i) if (f[i]==0) printf("%d ",i);
		printf("\n");
	}	
	return 0;
}