#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long

int n, dp[75][75][75][2];
bool taken[75];
string s;
vector <int> p[3];

int distance(int r){
    int ret = 0;
    for(int i = 0 ; i < r ; i++)
        ret += 1 - taken[i];
    return ret;
}
int solve(int v, int k, int x, int las){
    if(v + k + x == n) return 0;
    int &ret = dp[v][k][x][las];
    if(ret != -1) return ret;
    ret = 1e9;
    if(v < p[0].size()){
        taken[p[0][v]] = 1;
        ret = min(ret, solve(v + 1, k, x, 1) + distance(p[0][v]));
        taken[p[0][v]] = 0;
    }
    if(k < p[1].size() && las == 0){
        taken[p[1][k]] = 1;
        ret = min(ret, solve(v, k + 1, x, 0) + distance(p[1][k]));
        taken[p[1][k]] = 0;
    }
    if(x < p[2].size()){
        taken[p[2][x]] = 1;
        ret = min(ret, solve(v, k, x + 1, 0) + distance(p[2][x]));
        taken[p[2][x]] = 0;
    }
    return ret;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    memset(dp, -1, sizeof dp);
    cin >> n >> s;
    for(int i = 0 ; i < n ; i++){
        if(s[i] == 'V') p[0].push_back(i);
        else if(s[i] == 'K') p[1].push_back(i);
        else p[2].push_back(i);
    }
    cout << solve(0, 0, 0, 0) << endl;
}
