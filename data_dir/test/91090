//In the name of Allah

#include<bits/stdc++.h>

using namespace std;

const int Maxn = 500 * 1000 + 10;
int n, m, h[Maxn], stt, ftt, s[Maxn], f[Maxn];
char arr[Maxn];
vector<int> chld[Maxn], dp[Maxn], st[Maxn], ft[Maxn];

void dfs(int v)
{
    stt ++; st[h[v]].push_back(stt); s[v] = stt;
    if((int)dp[h[v]].size() == 0)
        dp[h[v]].push_back(1 << (arr[v] - '0'));
    else
        dp[h[v]].push_back(dp[h[v]].back() ^ (1 << (arr[v] - '0')));
    for(int i = 0; i < (int)chld[v].size(); i ++)
    {
        h[chld[v][i]] = h[v] + 1;
        dfs(chld[v][i]);
    }
    ftt ++; ft[h[v]].push_back(ftt); f[v] = ftt;
    return;
}

int main()
{
    cin >> n >> m;
    int p, v;
    for(int i = 1; i < n; i ++)
    {
        scanf("%d", &p);
        p --;
        chld[p].push_back(i);
    }
    while(arr[0] < 'a' || arr[0] > 'z')
        scanf("%c", &arr[0]);
    for(int i = 1; i < n; i ++)
        scanf("%c", &arr[i]);
    dfs(0);
    for(int i = 0; i < m; i ++)
    {
        scanf("%d%d", &v, &p);
        v --; p --;
        int strt = lower_bound(st[p].begin(), st[p].end(), s[v]) - st[p].begin();
        int endd = upper_bound(ft[p].begin(), ft[p].end(), f[v]) - ft[p].begin() - 1;
        if(strt < (int)st[p].size() && endd >= 0 && strt <= endd)
        {
            int num = dp[p][endd];
            if(strt > 0)
                num ^= dp[p][strt - 1];
            if(__builtin_popcount(num) < 2)
                printf("Yes\n");
            else
                printf("No\n");
        }
        else
            printf("Yes\n");
    }
    return 0;
}
