#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<li, li>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int M = 61;
const int N = 1000 * 1000 + 13;

int n;
int a[N];


bool read(){
	if(scanf("%d", &n) != 1)
		return 0;
	forn(i, n)
		scanf("%d", &a[i]);
	return 1;
}


char used[M];
int g[N];


int dfs(int k){
	set<int> cur;
	fore(i, 1, k + 1)
		if(!used[i]){
			used[i] = 1;
			int t = dfs(k - i);
			cur.insert(t);
			used[i] = 0;
		}
	/*printf("%d: ", k);
	for (auto it : cur)
		printf("%d ", it);
	printf("\n");*/
	if (cur.empty())
		return 0;
	fore(i, 1, k + 1)
		if (cur.find(i) == cur.end())
			return i;
	return 0;
}


int gr[M] = {0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10};


void solve(){
	/*n = 1;
	g[0] = 0;
	fore(i, 1, M){
		memset(used, 0, sizeof(used));
		g[i] = dfs(i);
	}
	printf("{");
	forn(i, M)
		printf("%d, ", g[i]);
	printf("}\n");
	memset(used, 0, sizeof(used));
	printf("%d\n", dfs(2));*/
	int ans = 0;
	forn(i, n)
		ans ^= gr[a[i]];
	printf(!ans ? "YES\n" : "NO\n");
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}