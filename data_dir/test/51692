#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

#define REP(i, n) for (int i = 0; i < (n); i++)

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);
  long long H;
  int N;
  cin >> H >> N;
  vector<long long> A(N);
  vector<long long> S(N + 1);
  vector<long long> M(N + 1);
  REP(i, N) {
    cin >> A[i];
    S[i + 1] = S[i] + A[i];
    M[i + 1] = min(M[i], S[i + 1]);
  }
  if (S[N] >= 0 && M[N] > -H) {
    cout << -1 << '\n';
    return 0;
  }
  if (S[N] >= 0) {
    REP(i, N) {
      H += A[i];
      if (H <= 0) {
        cout << i + 1 << '\n';
        return 0;
      }
    }
  }
  long long k = (H + -S[N] * 2) / -S[N] * N;
  for (long long i = 1LL << 60; i >= 1; i >>= 1) {
    long long x = k - i;
    if (x < 0) continue;
    long long v = (x / N) * S[N];
    v += min(M[x % N], S[x % N]);
    if (x / N >= 1) {
      v = min(v, ((x / N) - 1) * S[N] + M[N]);
    }
    if (v <= -H) {
      k -= i;
    }
  }
  cout << k << '\n';
}