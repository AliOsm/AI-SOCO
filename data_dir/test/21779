#include <bits/stdc++.h>

using namespace std;

#define mx 400005
#define int long long
#define pii pair <int, int>
#define piii pair <int, pii>
#define fi first
#define se second
#define mod 1000000007
#define inf 1e18+19
#define pb push_back
#define si(x) scanf("%lld", &x)
#define mem(ara, x) memset(ara, x, sizeof ara)
#define read() freopen("in.txt", "r", stdin)
#define write() freopen("out.txt", "w", stdout)
#define fst ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

char s[66][66];

int32_t main(){
    //read();
    fst;
    int t, cs = 1;
    si(t);
    while(t--){
        int n, m;
        si(n);
        si(m);
        //printf("%lld %lld", n, m);
        int p = 0;
        for(int i=0;i<n;i++){
            scanf("%s", s[i]);
            for(int j=0;j<m;j++){
                if(s[i][j] == 'P') p++;
            }
        }
        int ans = inf, past = 0;
        for(int i=0;i<n;i++){
            int thisr = 0, cur = 0;
            for(int j=0;j<m;j++){
                if(s[i][j] == 'P') thisr++;
            }
            for(int j=0;j<m;j++){
                int tmp = 0;
                if(s[i][j] == 'P') cur++;
                if(s[i][j] == 'A'){
                    if(thisr - cur) tmp++;
                    if(cur) tmp++;
                    if(past) tmp++;
                    if(p - past - thisr) tmp++;
                    ans = min(ans, tmp);
                }
            }
            past += thisr;
        }
        past = 0;
        for(int i=0;i<m;i++){
            int thisc = 0, cur = 0;
            for(int j=0;j<n;j++){
                if(s[j][i] == 'P') thisc++;
            }
            for(int j=0;j<n;j++){
                int tmp = 0;
                if(s[j][i] == 'P') cur++;
                if(s[j][i] == 'A'){
                    if(thisc - cur) tmp++;
                    if(cur) tmp++;
                    if(past) tmp++;
                    if(p - past - thisc) tmp++;
                    ans = min(ans, tmp);
                }
            }
            past += thisc;
        }
        if(ans != inf) printf("%lld\n", ans);
        else printf("MORTAL\n");
    }
    return 0;
}






