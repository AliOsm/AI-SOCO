// amiD
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define endl '\n'
#define Endl '\n'
#define fi first
#define ii pair<ll,ll>
#define se second
#define ld long double
#define mod 1000000007
#define popcount __builtin_popcountll
#define PI acos(-1.0)
using namespace std;


vector<int>divv;
ll n, k=2;
void solveeven(){
    vector<ll>odd;
    ll mx=0;
    for(ll i=2;i*i<=n;i++){
        if(n%i==0){
            if(i%2==0)divv.pb(i);
            if((n/i)%2==0)divv.pb(n/i);
            if(i%2==1)mx=max(mx, i);
            if((n/i)%2==1)mx=max(mx, n/i);
        }
    }
    ll t=n;
    vector<ii>amid;
    ll i=1;
    mx=n/mx;
    for(i=1;i<mx;i+=2){
        if((n/mx)*i+2>n-1){
            i-=2;
            break;
        }
    }
    amid.pb({i, mx});
    n-=i*(n/mx);
    n--;

    sort(divv.rbegin(), divv.rend());
    int sz=divv.size()-1;
    for(int i=sz;i>0;i--){
        ll x = divv[i];
        ll y = t/x;
        if(n/2<t/2)break;
        for(int j=1;j<x;j++){
            if(y*j==n-2){
                amid.pb({j, x});
                n=2;
                break;
            }
            if(y*j>n-2){
                j--;
                if(j==0)break;
                amid.pb({j, x});
                n-=(y*j);
                break;
            }
        }
        if(n==2)break;
    }
    amid.pb({n/2 , t/2});
    cout<<"YES"<<endl;
    cout<<amid.size()<<endl;
    for(int i=0;i<amid.size();i++){
        cout<<amid[i].fi<<" "<<amid[i].se<<endl;
    }
    exit(0);
}


void exgcd (ll a, ll b, ll &x, ll &y) {
	if (!b) {
		x = 1, y = 0;
		return;
	} else exgcd(b, a % b, x, y);
	ll x0 = x, y0 = y;
	x = y0, y = x0 - y0 * (a / b);
}
int main(){
    cin>>n;
    while(1){
        if(k>=n)break;
        k*=2;
    }
    if(k==n){
        cout<<"NO"<<endl;
        return 0;
    }
    // if(n%2==0)solveeven();
    for(ll i=2;i*i<=n;i++){
        if(n%i==0){
            divv.pb(i);
            if(i*i!=n)divv.pb(n/i);
        }
    }
    n--;
    int sz=divv.size();
    for(int i=0;i<sz;i++){
        for(int j=0;j<sz;j++){
            ll x=divv[i], y=divv[j], xx, yy;
            if(__gcd(x, y)!=1)continue;
            exgcd(x, y, xx, yy);
            xx*=n; yy*=n;
            cout<<"YES"<<endl;
            cout<<2<<endl;
            while(xx<=0){
                xx+=y; yy-=x;
            }
            while(yy<=0){
                yy+=x; xx-=y;
            }
            n++;
            while(xx>=n/x){
                xx-=y; yy+=x;
            }
            while(yy>=n/y){
                yy-=x; xx+=y;
            }
            cout<<xx<<" "<<n/x<<endl;
            cout<<yy<<" "<<n/y<<endl;
            return 0;
        }
    }
    cout<<"NO"<<endl;
}
