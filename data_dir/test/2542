#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int V = 4000009;
ll nm[2], bit[2][2][V];

void updateBIT(int idx1, int idx2, ll val) {
    for (int l = idx2 + 1; l <= nm[idx1]; l += l & -l)
        bit[idx1][0][l] += val * idx2, bit[idx1][1][l] += val;
}

ll queryBIT(int idx1, int idx2) {
    ll ret = 0;
    for (int l = ++idx2; l > 0; l -= l & -l)
        ret += bit[idx1][1][l] * idx2 - bit[idx1][0][l];
    return ret;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    fastInOut();
    ll w, t, x1, y1, x2, y2, v;
    cin >> nm[0] >> nm[1] >> w;
    while (w--) {
        cin >> t >> x1 >> y1 >> x2 >> y2;
        --x1, --y1;
        if (!t) {
            cin >> v;
            updateBIT(0, x1, (y2 - y1) * v);
            updateBIT(0, x2, (y1 - y2) * v);
            updateBIT(1, y1, (x2 - x1) * v);
            updateBIT(1, y2, (x1 - x2) * v);
        } else {
            --x2, --y2;
            ll part1 = queryBIT(0, x2) - queryBIT(0, x1 - 1);
            ll part2 = queryBIT(1, y1 - 1);
            ll part3 = queryBIT(1, nm[1] - 1) - queryBIT(1, y2);
            cout << part1 - part2 - part3 << "\n";
        }
    }
    return 0;
}

void fastInOut() {
    ios_base::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);
}
