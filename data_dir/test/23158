#include <functional>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cassert>
#include <numeric>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <set>
#include <map>

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0); std::cout.tie(0); std::cerr.tie(0);
    int n;
    while (std::cin >> n) {
        std::vector<int> next(1+n);
        for (int i = 1; i <= n; ++i) { std::cin >> next[i]; }
        std::vector<int> visited(1+n), lens;
        for (int u = 1; u <= n; ++u) {
            if (visited[u]) { continue; }
            visited[u] = true;
            int count = 1;
            int curr = next[u];
            while (curr != u) {
                visited[curr] = 1;
                curr = next[curr];
                count++;
            }
            lens.push_back(count);
        }
        std::sort(lens.begin(), lens.end(), std::greater<int>());
        int64_t answ = 0;
        if (lens.size() == 1u) {
            answ = 1LL * lens[0] * lens[0];
        } else {
            answ = 1LL * (lens[0] + lens[1]) * (lens[0] + lens[1]);
            for (int i = 2; i < (int)lens.size(); ++i) {
                answ += 1LL * lens[i] * lens[i];
            }
        }
        std::cout << answ << std::endl;
    }
    return 0;
}