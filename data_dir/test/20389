#pragma comment(linker, "/STACK:33554432")

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

typedef vector<int> vint;

int n, m;

int p1[1 << 9], p2[1 << 9];
int r1[1 << 9], r2[1 << 9];

int used[1 << 9];


vint G1[1 << 9];
vint G2[1 << 9];

int from[1 << 16], to[1 << 16];

int T;

void init(int * p, int * r)
{
	for(int i = 0; i < n; ++i)
	{
		p[i] = i;
		r[i] = 0;
	}
}

int find(int x, int * p)
{
	return x == p[x] ? x : p[x] = find(p[x], p);
}

void unite(int x, int y, int * p, int * r)
{
	x = find(x, p);
	y = find(y, p);
	if (x != y)
	{
		if (r[x] > r[y])
			p[y] = x;
		else
			p[x] = y;
		if (r[x] == r[y])
			++r[y];
	}
}

int L, R;

void go(int x)
{
	used[x] = T;
	for(int i = 0; i < G1[x].size(); i += 2)
	{
		if (G1[x][i] >= L)
			break;
		int to = G1[x][i + 1];
		if (used[to] != T)
			go(to);
	}
	for(int i = 0; i < G2[x].size(); i += 2)
	{
		if (G2[x][i] <= R)
			break;
		int to = G2[x][i + 1];
		if (used[to] != T)
			go(to);
	}
}


int main()
{
	scanf("%d%d", &n, &m);
	for(int i = 0; i < m; ++i)
	{
		scanf("%d%d", &from[i], &to[i]);
		from[i]--, to[i]--; 
	}
	init(p1, r1);
	init(p2, r2);
	for(int i = 0; i < m; ++i)
	{
		if (find(from[i], p1) != find(to[i], p1))
		{
			unite(from[i], to[i], p1, r1);
			G1[from[i]].push_back(i);
			G1[from[i]].push_back(to[i]);
			G1[to[i]].push_back(i);
			G1[to[i]].push_back(from[i]);
		}
		if (find(from[m - i - 1], p2) != find(to[m - i - 1], p2))
		{
			unite(from[m - i - 1], to[m - i - 1], p2, r2);
			G2[from[m - i - 1]].push_back(m - i - 1);
			G2[from[m - i - 1]].push_back(to[m - i - 1]);
			G2[to[m - i - 1]].push_back(m - i - 1);
			G2[to[m - i - 1]].push_back(from[m - i - 1]);
		}
	}
	int k;
	scanf("%d", &k);
	memset(used, 0, sizeof(used));
	for(T = 1; T <= k; ++T)
	{
		scanf("%d%d", &L, &R);
		L--, R--;
		int res = 0;
		for(int i = 0; i < n; ++i)
		{
			if (used[i] != T)
			{
				go(i);
				res++;
			}
		}
		printf("%d\n", res);
	}
	return 0;
}