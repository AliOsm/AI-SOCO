#include <iostream> 
#include <stdio.h> 
#include <algorithm> 
#include <cmath> 
#include <string> 
#include <cstring> 
#include <vector> 
#include <deque> 
#include <list> 
#include <set> 
#include <map> 
#include <ctime> 
#include <cstdlib> 
#include <queue>
#include <iomanip>
#include <functional>
#include <tuple>
using namespace std; 

typedef long long LL; 
typedef unsigned long long ULL; 
typedef short int int16; 
typedef long double ldouble; 

typedef set<int>::iterator sit;
typedef map<int,int>::iterator mit;
typedef vector<int>::iterator vit;

typedef pair < int , int > ipair;
typedef pair < LL , LL > lpair;
typedef map < int,int > imap;
typedef map < LL , LL > lmap;

template<typename X> inline X abs(const X& a) { return a < 0? -a: a; }
template<typename X> inline X sqr(const X& a) { return a * a; }
template<class T> void _R( T &x ) { cin>>x; }

void _R( int &x ) { scanf("%d",&x); }
void _R( LL &x ) { scanf("%i64d",&x); }
void _R( double &x ) { scanf("%lf",&x); }
void _R( char &x ) { scanf(" %c",&x); }
void _R( char *x ) { scanf("%s",x); }
void R() {}
template<class T, class... U> void R( T& head, U&... tail ) { _R(head); R(tail...); }


const int size = 1e5 + 2; 
const double eps = 0.0001; 
const ldouble PI = 3.1415926535897932384626433832795;
const LL  MOD = 1000000007;
const LL INF = 1LL << 60;
const LL MAX5 = 100001;
const LL MAX6 = 1000001;


#define MEMS(a,b) memset((a),(b),sizeof(a))
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define ff first
#define ss second
#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(min(a,b),min(c,d))
#define max4(a,b,c,d)   max(max(a,b),max(c,d))
#define max5(a,b,c,d,e) max(max3(a,b,c),max(d,e))
#define min5(a,b,c,d,e) min(min3(a,b,c),min(d,e))
#define max6(a,b,c,d,e,f) max(max3(a,b,c),max3(d,e,f))
#define min6(a,b,c,d,e,f) min(min3(a,b,c),min3(d,e,f))
#define all(x) (x).begin(), (x).end()
#define rep(i,a,n) for (long long i=a;i<n;++i)
#define per(i,n,a) for (long long i=n-1;i>=a;--i)
#define loopin for(int i=0;i<n;++i)cin>>a[i];
#define vout for(int i=0;i<res.size();++i)cout<<res[i];
#define reunique(v) v.resize(unique(v.begin(), v.end()) - v.begin())
void solution(); 
void include_file(); 
LL bin_search(LL left, LL right); 

int main(){ 
ios_base::sync_with_stdio(false);
//srand(time(0)); 
//include_file(); 
solution(); 
return 0; 
} 
void include_file(){ 
freopen("input.txt","r",stdin); 
freopen("output.txt","w",stdout); 
} 
inline bool isPrime(LL n) {
    for (int i = 2; i * i <= n; ++i)if (n % i == 0)return false;
    return true;
}
string ekv(string a) {
    if (a.size() & 1)return a;
    string x = ekv(a.substr(0, a.size() / 2));
    string y = ekv(a.substr(a.size() / 2));
    return min(x + y, y + x);
}
LL cubic_root(LL x) {
    LL l = 0, r = MAX6;
    while (l != r) {
        LL m = (l + r + 1) / 2;
        if (m * m * m > x)
            r = m - 1;
        else
            l = m;
    }
    return l;
}
LL gcd(LL a,LL b)
{
  if(a==0)return b;
  return gcd(b%a,a);
}
LL lcm(LL a, LL b)
{
  return a/gcd(a, b)*b;
}
vector <vector<int> > g;
int was[100];
void dfs(int v)
{
	if (was[v]) return;
	was[v]=1;
	for (int i=0;i<g[v].size();++i)
	{
		dfs(g[v][i]);
	}
}
int bfs(int s,int toto)
{	
queue<int> q;
vector<bool> used (1001);
vector<int> d (1001), p (1001);

q.push (s);
used[s] = true;
p[s] = 1;
d[s]=0;
while (!q.empty()) {
	int v = q.front();
	q.pop();
	for (size_t i=0; i<g[v].size(); ++i) {
		int to = g[v][i];
		if (!used[to]) {
			used[to] = true;
			q.push (to);
			d[to] = d[v] + 1;
			p[to] = v;
		}
	}
}

return d[toto];
}
void yes()
{
	cout<<"YES";
}
void no()
{
	cout<<"NO";
}
void dabl(double x)
{
	printf("%.10lf",x);
}
namespace bits
{
	template<typename X> inline X MAX(const X& a, const X& b) 
{ return b & ((a-b) >> 31) | a & (~(a-b) >> 31);}
template<typename X> inline X MIN(const X& a, const X& b) 
{ return a & ((a-b) >> 31) | b & (~(a-b) >> 31);}

//ïðîâåðêà íà ñòåïåíü 2
bool check2(const LL n)
{
	return 	n > 0 && (n & (n - 1));
}
//îñòàòîê îò äåëåíèÿ 2^n íà m
LL ostatok2(const LL n, const LL m)
{
	return m & (n-1);
}
template<typename X> 
void SWAP(X &a, X &b)
{
	a^=b;
	b^=a;
	a^=b;
}

size_t count_1_in_LL(unsigned long long n)
{
    std::size_t i(0);
    for (;n;++i) n&=n-1;
    return i;
}
}
///////////////////SOLUTION
bool tv1,tv2;
void solution() 
{ 
	int n;
	cin>>n;
	lpair p[n];
	rep(i,0,n)cin>>p[i].ff>>p[i].ss;
	sort(p,p+n);
	bool res=1;
	if(n>=3)
	{
	int en1=p[0].ss,en2=p[1].ss;
	for(int i=2;i<n;++i)
	{
		if(p[i].ff>en1)tv1=1;
		if(p[i].ff>en2)tv2=1;
		if(tv1)en1=p[i].ss,tv1=0;
		else if(tv2)en2=p[i].ss,tv2=0;
		else {res=0;}
	}
	}
	if(res)yes();
	else no();
}
///////////////////SOLUTION