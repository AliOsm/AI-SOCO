#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
#define pii pair<int, int>
#define endl '\n'
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int, int>
#define vpii vector<pii>
#define vvpii vector<vpii>
typedef long long ll;
typedef long double ld;
using namespace std;
template<class T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> void setmax(T& a, T b) { a = max(a, b); };
template<typename T> void setmin(T& a, T b) { a = min(a, b); };
template<typename T> bool in(T lo, T v, T hi) { return lo <= v && v <= hi; };

const int N = 2222;
int a[N], can[N][N], dp[N][N];
int n, h, l, r;


int main() {
  ios::sync_with_stdio(0);
  cin.tie(0); cout.tie(0);

  cin >> n >> h >> l >> r;
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }
  can[1][a[1]] = can[1][a[1] - 1] = 1;
  if (in(l, a[1], r)) {
    dp[1][a[1]] = 1;
  }
  if (in(l, a[1] - 1, r)) {
    dp[1][a[1] - 1] = 1;
  }
  for (int i = 2; i <= n; i++) {
    for (int j = 0; j < h; j++) {
      if (can[i - 1][j]) {
        int x = (j + a[i]) % h;
        int y = (j + a[i] - 1) % h;
        can[i][x] = 1;
        can[i][y] = 1;
        setmax(dp[i][x], dp[i - 1][j] + in(l, x, r));
        setmax(dp[i][y], dp[i - 1][j] + in(l, y, r));    
      }
    }
  }
  int ans = 0;
  for (int i = 0; i < h; i++) {
    if (can[n][i]) {
      setmax(ans, dp[n][i]);
    }
  }
  cout << ans << endl;
  return 0;
}