#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define N 500500

ll gcd(ll a, ll b)
{
    for (;;)
    {
        if (a == 0) return b;
        b %= a;
        if (b == 0) return a;
        a %= b;
    }
}

ll lcm(ll a, ll b)
{
    int temp = gcd(a, b);
    return temp ? (a / temp * b) : 0;
}

int n;
ll both;
ll x, a, y, b;
ll k;
ll p[N];

ll percent(ll x, ll per){
    return (x * per) / 100;
}

int OK(int mid){
    int i = 0;
    ll cnt = 0;
    for(int j = 1; j <= mid / both && i < n; j++, i++) cnt += percent(p[i], x + y);
    for(int j = 1; j <= mid / a && i < n; j++, i++){
        if((j * a) % both == 0){
            i--;
            continue;
        }
        cnt += percent(p[i], x);
    }
    for(int j = 1; j <= mid / b && i < n; j++, i++){
        if((j * b) % both == 0){
            i--;
            continue;
        }
        cnt += percent(p[i], y);
    }
    return (cnt >= k);
}

int main()
{
    //freopen("in.in", "r", stdin);
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    int t; cin >> t;
    while(t--) {
        cin >> n;
        for (int i = 0; i < n; i++) cin >> p[i];
        cin >> x >> a >> y >> b >> k;
        if (x < y) swap(x, y), swap(a, b);
        both = lcm(a, b);
        sort(p, p + n, greater<ll>());
        int L = 0, R = n, ans = -1;
        while (L <= R) {
            int mid = (L + R) / 2;
            if (OK(mid)) R = mid - 1, ans = mid;
            else L = mid + 1;
        }
        cout << ans << endl;
    }

    return 0;
}