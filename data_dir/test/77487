#include <bits/stdc++.h>
using namespace std;
const int N = 5005;
short dp[N][N];
struct env {
	int w, h, in;
	env(int a, int b, int c) {
		w = a, h = b, in = c;
	}
	bool operator <(const env & cmp) const {
		if (cmp.w != w) return w < cmp.w;
		return h < cmp.h;
	}
};
vector<env> v;
int n, w, h;

short calc(int in, int prev) {

	if (in == n) {
		return 0;
	}
	short &ret = dp[in][prev];
	if (ret != -1) return ret;
	ret = 0;
	ret = calc(in + 1, prev);
	if (v[in].w > v[prev].w && v[in].h > v[prev].h)
		ret = max(ret, short(calc(in + 1, in) + 1));
	return ret;
}

void print(int in, int prev) {

	if (in == n) {
		return;
	}
	short ret = dp[in][prev];
	if (ret == calc(in + 1, prev)) {
		print(in + 1, prev);
		return;
	}
	if (v[in].w > v[prev].w && v[in].h > v[prev].h
			&& ret == short(calc(in + 1, in) + 1)) {
		printf("%d ", v[in].in + 1);
		print(in + 1, in);
	}
}
int main() {

//	freopen("readin.txt", "r", stdin);

	scanf("%d%d%d", &n, &w, &h);

	for (int i = 0, a, b; i < n; i++) {
		scanf("%d%d", &a, &b);
		v.push_back(env(a, b, i));
	}
	sort(v.begin(), v.end());
	memset(dp, -1, sizeof dp);
	int ans = 0;
	for (int i = 0; i < n; i++) {
		if (v[i].w > w && v[i].h > h) {
			ans = max(ans, calc(i + 1, i) + 1);
		}
	}
	cout << ans << endl;
	if (ans) for (int i = 0; i < n; i++) {
		if (v[i].w > w && v[i].h > h && calc(i + 1, i) + 1 == ans) {
			printf("%d ", v[i].in + 1);
			print(i + 1, i);
			return 0;
		}
	}

	return 0;
}
