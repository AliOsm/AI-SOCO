#include<bits/stdc++.h>
#define si(x) scanf("%d",&x)
#define sii(x,y) scanf("%d %d",&x,&y)
#define siii(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define su(x) scanf("%u",&x)
#define sl(x) scanf("%ld",&x)
#define sli(x) scanf("%lld",&x)
#define slii(x,y) scanf("%lld %lld",&x,&y)
#define sliii(x,y,z) scanf("%lld %lld %lld",&x,&y,&z)
#define slu(x) scanf("%llu",&x)
#define sf(x) scanf("%f",&x)
#define slf(x) scanf("%lf",&x)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define pf printf
#define fpf fprintf
#define pb push_back
#define f(i,x,y,z) for(int i=x;i<y;i=i+z)
#define f1(i,x,y,z) for(int i=x;i>y;i=i-z)
#define MAX 10000000
#define pi 3.1415926535
#define mp make_pair
#define M 1000000007
#define xx first
#define yy second
#define N 500005
#define E 100005
#define vc vector
#define pq priority_queue
#define Q queue


using namespace std;

typedef long long int ll;
typedef unsigned long long int lu;

ll ar[N], tr[4*N];

ll gcd(ll a, ll b)
{
    ll t;
    ll mn = min(a,b);
    ll mx = max(a,b);
    while(mn>0){
        t = mn;
        mn = mx%mn;
        mx = t;
    }
    return mx;
}

void init(int n, int b, int e)
{
    if(b==e){
        tr[n] = ar[b];
        return;
    }
    int l, r, m;
    l = (n<<1);
    r = l+1;
    m = ((b+e)>>1);
    init(l,b,m);
    init(r,m+1,e);
    tr[n] = gcd(tr[l],tr[r]);
}

void update(int n, int b, int e, int i, ll x)
{
    if(i<b || i>e) return;
    if(b==e){
        tr[n] = x;
        return;
    }
    int l, r, m;
    l = (n<<1);
    r = l+1;
    m = ((b+e)>>1);
    update(l,b,m,i,x);
    update(r,m+1,e,i,x);
    tr[n] = gcd(tr[l],tr[r]);
}

ll query(int n, int b, int e, int i, int j, ll x)
{
    if(tr[n]%x==0) return 0;
    if(e<i || j<b) return 0;
    if(i<=b && j>=e){
        if(tr[n]%x==0) return 0;
        if(b==e) return 1;
    }
    int l, r, m;
    l = (n<<1);
    r = l+1;
    m = ((b+e)>>1);
    if(i<=b && j>=e){
        if(tr[l]%x!=0 && tr[r]%x!=0) return 2;
    }
    ///if(tr[l]%x==0) return query(r,m+1,e,i,j,x);
    ///else if(tr[r]%x==0) return query(l,b,m,i,j,x);
    return query(r,m+1,e,i,j,x) + query(l,b,m,i,j,x);
}

int main()
{
    int n, t, l, r, q;
    ll x;
    si(n);
    f(i,1,n+1,1)
    {
        sli(ar[i]);
    }
    init(1,1,n);
    si(q);
    while(q>0){
        q--;
        siii(t,l,r);
        if(t==2){
            update(1,1,n,l,r);
        }
        else{
            sli(x);
            x = query(1,1,n,l,r,x);
            if(x<2) pf("YES\n");
            else pf("NO\n");
        }
    }
    return 0;
}
