#include<bits/stdc++.h>
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
using namespace std;
const ll mod=1e9+7;         
const int N=1e3+4;
vector<int> adj[N];
void dfs(int node,int par)
{
    for(auto it:adj[node])
    if(it!=par)
    {
        printf("%d %d\n",node,it);
        dfs(it,node);
    }
}
int main()                  
{
    int n;
    scn(n);
    int fa[n+1],arr[n+1];
    memset(fa,0,sizeof(fa));
    memset(arr,0,sizeof(arr));
    rep(i,0,n-1)
    {
        int a,b;
        scn(a);scn(b);
        fa[a]++;
        if(b!=n)
        {
            printf("NO");
            return 0;
        }
    }
    vector<int> v[n+1];
    rep(i,1,n+1)
    {
        rep(j,1,i)
        if(fa[j]==0)
        v[i].pb(j);
    }
    rep(i,1,n+1)
    sort(v[i].begin(),v[i].end());
    bool mark[n+1];
    memset(mark,0,sizeof(mark));
    rep(i,1,n+1)
    if(fa[i])
    {
        int last=i,cnt=0;
        rep(j,0,v[i].size())        
        {
            if(cnt+1==fa[i])
            break;
            int x=v[i][j];
            if(mark[x])
            continue;
            mark[x]=1;
            //cout<<i<<" "<<x<<endl;
            adj[last].pb(x);
            adj[x].pb(last);
            last=x;
            cnt++;
        }
        if(cnt+1<fa[i])
        {
            printf("NO");
            return 0;
        }
        mark[last]=1;
        adj[last].pb(n);
        adj[n].pb(last);
    }
    printf("YES\n");
    dfs(n,-1);
}