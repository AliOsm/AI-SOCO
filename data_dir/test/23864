#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
#define pb push_back
#define len(a) (int)a.size()
#define all(a) (a.begin(),a.end())
#define fi first
#define sc second
#define ort(x,y) (x+y)/2
#define endl '\n'
#define FAST ios_base::sync_with_stdio(false);
#define d1(x) cerr<<#x<<":"<<x<<endl;
#define d2(x,y) cerr<<#x<<":"<<x<<" "<<#y<<":"<<y<<endl;
#define d3(x,y,z) cerr<<#x<<":"<<x<<" "<<#y<<":"<<y<<" "<<#z<<":"<<z<<endl;
#define N (int) (1e3+5)
#define inf (int) (1e7)
#define p (1000000007)
#define heap priority_queue
#define mem(a,val) memset(a,val,sizeof(a))
#define y1 asdassa
typedef long long int lli;
typedef pair<int,int> pii;
typedef pair<pair<int,int>,int> piii;
lli dp[N],n,k,ans=1,com[N][N];
lli dfs(int n)
{
	if(n==1) return 0;
	if(n==2) return 1;
	if(dp[n]!=-1) return dp[n];
	return dp[n]=((n-1)*(dfs(n-1)+dfs(n-2))%p)%p;
}
int main()
{
	mem(dp,-1);
	scanf("%lld %lld",&n,&k);
	com[0][0]=1;
	for(int i=1;i<=n;i++)
	{
		com[i][0]=1;
		for(int j=1;j<=i;j++)
			com[i][j]=com[i-1][j]+com[i-1][j-1];
	}
	for(int i=k;i>1;i--)
		ans+=dfs(i)*com[n][i];
	printf("%lld\n",ans);
}
