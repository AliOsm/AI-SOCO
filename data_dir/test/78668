#include <bits/stdc++.h>

#define rep(i, n) for (int i = 0; i < (n); i++)
#define repr(i, n) for (int i = (n) - 1; i >= 0; i--)
#define rep2(i, l, r) for (int i = (l); i < (r); i++)
#define rep2r(i, l, r) for (int i = (r) - 1; i >= (l); i--)
#define range(a) a.begin(), a.end()

using namespace std;
using ll = long long;

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);
  cout << fixed << setprecision(15);
  int N, M; cin >> N >> M;
  vector<int> X(M); rep(i, M) cin >> X[i], X[i]--;

  auto range1 = [&](int p) { return make_pair(0, p); };
  auto range2 = [&](int p) { return make_pair(p, p + 1); };
  auto range3 = [&](int p) { return make_pair(p + 1, N); };

  auto common = [&](pair<int, int> a, pair<int, int> b) {
    int l = max(a.first, b.first);
    int r = min(a.second, b.second);
    if (l > r) return make_pair(0, 0);
    return make_pair(l, r);
  };
  ll base = 0;
  vector<ll> pref(N + 1);
  for (int i = 0; i + 1 < M; i++) {
    base += abs(X[i] - X[i + 1]);
    int x = min(X[i], X[i + 1]);
    int y = max(X[i], X[i + 1]);
    auto a12 = common(range2(x), range1(y));
    auto a13 = common(range3(x), range1(y));
    auto a23 = common(range3(x), range2(y));
    pref[a12.first] += x;
    pref[a12.second] -= x;
    pref[a13.first]--;
    pref[a13.second]++;
    pref[a23.first] += 2*x+1-y;
    pref[a23.second] -= 2*x+1-y;
  }
  rep(i, N) pref[i + 1] += pref[i];
  rep(i, N) cout << base + pref[i] << " \n"[i == N - 1];
}