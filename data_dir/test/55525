#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 2e3+10 , mod = 1e9+7;

int dp[N][N][3] , ans[N][3] , a[N];

int32_t main(){
   ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
   int n;
   cin >> n;
   for(int i = 0 ; i < n ; i++){
      cin >> a[i];
      dp[i][i][a[i]] = 1;
   }
   for(int len = 2 ; len <= n ; len++){
      for(int i = 0 ; i + len <= n ; i++){
         int j = i + len - 1;
         dp[i][j][a[j]] = dp[i][j - 1][a[j]] + 1;
         dp[i][j][3 - a[j]] = dp[i][j - 1][3 - a[j]];
      }
   }
   ans[0][a[0]] = 1;
   for(int i = 1 ; i < n ; i++){
      ans[i][1] = ans[i - 1][1] + (a[i] == 1);
      if(a[i] == 2)
         ans[i][2] = max(ans[i - 1][2] , ans[i - 1][1]) + 1;
      else{
         ans[i][2] = ans[i - 1][2];
         int dp2 = 0;
         for(int j = i ; j >= 0 ; j--){
            int add1 = 0 , add2 = 0;
            if(j)
               add1 = ans[j - 1][1] , add2 = ans[j - 1][2];
            if(a[j] == 2){
               dp2 = max(dp[j + 1][i][1] , dp2) + 1;
               ans[i][2] = max(ans[i][2] , max(add2 , add1) + dp[j][i][2]);
               ans[i][2] = max(ans[i][2] , add1 + dp2);
            }
         }
      }
   }
   cout << max(ans[n - 1][1] , ans[n - 1][2]);
   return 0;
}
