/* ****revpro**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl	   '\n'
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)    
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mii	    map<ll,ll>
using namespace std;

#define N  100005
ll n,m;
string s[1000];
bool valid(ll x,ll y)
{
	if((x>=0)&&(y>=0)&&(x<n)&&(y<m))
	{
		if(s[x][y]!='T')	
			return true;	
	}
	return false;
}
int main()
{
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		cin>>n>>m;
		rep(i,0,n) cin>>s[i];
		pii e,st;
		rep(i,0,n) rep(j,0,m) {if(s[i][j]=='E') e={i,j};if(s[i][j]=='S') st={i,j};}
		ll dis[n][m];
		rep(i,0,n)
		rep(j,0,m) dis[i][j]=hell;
		dis[e.F][e.S]=0;
		queue <pii> q;
		q.push(e);
		ll x[4]={0,0,1,-1};
		ll y[4]={-1,1,0,0};
		while(!q.empty())
		{
			pii p=q.front();
			q.pop();
			rep(i,0,4)
			{
				if(valid(p.F-x[i],p.S-y[i]))
				{
					if(dis[p.F-x[i]][p.S-y[i]]>dis[p.F][p.S]+1)
					{dis[p.F-x[i]][p.S-y[i]]=dis[p.F][p.S]+1;
					q.push({p.F-x[i],p.S-y[i]});}
				}
			}
		} 
		ll ans=0;
		rep(i,0,n)
		rep(j,0,m)
		{
			if(s[i][j]>='1'&&s[i][j]<='9')
			{
				if(dis[st.F][st.S]>=dis[i][j])
					ans+=s[i][j]-'0';
			}
		}
		cout<<ans;
	}
	return 0;
}