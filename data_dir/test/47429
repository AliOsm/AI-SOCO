#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <stack>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int X,Y;
string board[5010];
short px[5010][5010],nx[5010][5010],py[5010][5010],ny[5010][5010];

void remove(int x, int y){
    int low = nx[x][y], high = px[x][y];
    if(low != -1) px[low][y] = high;
    if(high != X) nx[high][y] = low;
    low = ny[x][y], high = py[x][y];
    if(low != -1) py[x][low] = high;
    if(high != Y) ny[x][high] = low;
}

void init(void){
    int x,y;
    
    REP(x,X) REP(y,Y){
        px[x][y] = x+1; nx[x][y] = x-1;
        py[x][y] = y+1; ny[x][y] = y-1;
    }
    
    REP(x,X) REP(y,Y) if(board[x][y] == '.') remove(x,y);
}

int func(int x, int y){
    int i;
    
    for(i=1;;i++){
        remove(x,y);
        char ch = board[x][y];
        if(ch == 'U') x = nx[x][y];
        if(ch == 'D') x = px[x][y];
        if(ch == 'L') y = ny[x][y];
        if(ch == 'R') y = py[x][y];
        if(x == -1 || x == X || y == -1 || y == Y) return i;
    }
}

int main(void){
    int i,j;
    
    cin >> X >> Y;
    REP(i,X) cin >> board[i];
    
    int ans=-1,cnt=0;
    REP(i,X) REP(j,Y) if(board[i][j] != '.'){
        init();
        int tmp = func(i,j);
        if(tmp == ans) cnt++; else if(tmp > ans) {ans = tmp; cnt = 1;}
    }
    
    cout << ans << ' ' << cnt << endl;
    
    return 0;
}
