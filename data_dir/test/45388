#include <bits/stdc++.h>
#include<fstream>
#define ll long long
#define fr first
#define sc second
#define mp make_pair
#define ii pair<int,int>
#define All(v) v.begin(),v.end()
using namespace std;
string s;
int n;
int memo[101001][11][2];
int solve(int i , int sum , int ok)
{
    if(i == n)
    {
        if(sum%3 == 0 && ok)
            return 0;
        else
            return 1e9;
    }
    int &ret = memo[i][sum][ok];
    if(ret != -1)
    {
        return ret;
    }
    int x1 = 1e9 , x2 = 1e9;
    x1 = 1+solve(i+1,sum , ok);
    if(ok)
    {
        int sum2 = sum*10 + (s[i]-'0');
        sum2%=3;
        x2 = solve(i+1,sum2,1);
    }
    else
    {
        if(s[i]!='0'  || (i == n-1))
        {
            int sum2 = sum*10 + (s[i]-'0');
            sum2%=3;
            x2 = solve(i+1,sum2,1);
        }
    }
    return ret = min(x1,x2);
}


void solve2(int i , int sum , int ok)
{
    if(i == n)
    {
       return ;
    }
    int x1 = 1e9 , x2 = 1e9;
    x1 = 1+solve(i+1,sum , ok);
    if(ok)
    {
        int sum2 = sum*10 + (s[i]-'0');
        sum2%=3;
        x2 = solve(i+1,sum2,1);
    }
    else
    {
        if(s[i]!='0'  || (i == n-1))
        {
            int sum2 = sum*10 + (s[i]-'0');
            sum2%=3;
            x2 = solve(i+1,sum2,1);
        }
    }
    if(x1 == min(x1,x2))
    {
        solve2(i+1,sum,ok);
    }
    else
    {
        cout<<s[i];
        if(ok)
        {
            int sum2 = sum*10 + (s[i]-'0');
            sum2%=3;
            solve2(i+1,sum2,1);
        }
        else
        {
            if(s[i]!='0'  || (i == n-1))
            {
                int sum2 = sum*10 + (s[i]-'0');
                sum2%=3;
                solve2(i+1,sum2,1);
            }
        }
    }
}
int main()
{
    memset(memo,-1,sizeof(memo));
    cin>>s;
    n = s.length();
    int R = solve(0,0,0);
    if(R < 1e9)
    {
      solve2(0,0,0);
    }
    else
    {
        for(int i=0;i<s.length();i++)
        {
            if(s[i] == '0')
            {
                cout<<0;
                return 0;
            }
        }
        cout<<-1;
    }
}