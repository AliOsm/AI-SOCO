#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree<
pair<long long, int>,
null_type,
less< pair<long long, int> >,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

int main() {
  #ifdef LOCAL
  freopen("sol.in", "r", stdin);
  freopen("sol.out", "w+", stdout);
  #endif
  ordered_set s;
  int n;
  long long t;
  scanf("%d %lld", &n, &t);
  long long sum = 0;
  long long ans = 0;
  s.insert(make_pair(0LL, n));
  for (int i = 0; i < n; i++) {
    int a;
    scanf("%d", &a);
    sum += a;
    long long add = s.order_of_key(make_pair((long long) 1e18, -1)) - s.order_of_key(make_pair(sum - t + 1, -1));
    ans += add;
    s.insert(make_pair(sum, i));
  }
  printf("%lld\n", ans);
  return 0;
}