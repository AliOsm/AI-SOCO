//#include <unordered_set>
//#include <unordered_map> 
#include <functional>
#include <stdexcept>
#include <streambuf>
#include <exception>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <typeinfo>
#include <utility>
#include <complex>
#include <numeric>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <cstring>
#include <locale>
#include <memory>
#include <iosfwd>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <ios>
#include <new>
#include <set>
    
using namespace std;
     
#define F first
#define S second
#define lb lower_bound
#define ub upper_bound
#define pb push_back
#define pf push_front
#define ppb pop_back
#define mp make_pair
#define bbp __builtin_popcount
#define al 0x3F3F3F3F
#define sz(x) x.size()
#define all(x) x.begin(), x.end()
#define in insert
#define ppf pop_front
#define endl '\n'
#define resize(v) v.resize(unique(all(v)) - v.begin());
//#define int long long

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <int, ll> pil;
typedef pair < ll, int > pli;
typedef pair <double, double> pdd;
typedef pair <int, double> pid;
typedef pair <double, int> pdi;
typedef pair <ll, double> pld;
typedef pair <double, ll> pdl;
typedef pair <string, string> pss;    

const int mod = (int)1e9 + 7;
const int MAX_N = (int)1e5 + 123;
const int N = 1e6 + 123;                     
const int INF = al;           
const ll INFL = 3e18 + 1;
const double pi = acos(-1.0);
const double eps = 1e-9;
const int dx[] = {0, 0, 1, 0, -1};
const int dy[] = {0, 1, 0, -1, 0};
                                        
int n, cur[MAX_N], need[MAX_N], timer, tout[MAX_N], tin[MAX_N];
bool used[MAX_N];
vector <int> g[MAX_N], res;

inline void dfs2(int v) {
	tin[v] = ++ timer;
	used[v] = 1;
	for (auto to : g[v])
		if (!used[to])
			dfs2(to);
	tout[v] = ++ timer;
}

inline bool is(int a, int b) {
	return (tin[a] <= tin[b] && tout[a] >= tout[b]);
}

inline void dfs(int v, int lvl, int cnt, int cnt2) {
	used[v] = 1;
	if (lvl == 1) {
		if (cnt & 1) cur[v] ^= 1;
		if (cur[v] != need[v]) cur[v] ^= 1, res.pb(v), cnt ++;
	}                            
	else {
		if (cnt2 & 1) cur[v] ^= 1;
		if (cur[v] != need[v]) cur[v] ^= 1, res.pb(v), cnt2 ++; 
	}
	for (auto to : g[v]) {
		if (!used[to] && is(v, to))
			dfs(to, (lvl ^ 1), cnt, cnt2);
	}
	used[v] = 0;                    
}

inline int gcd(int a, int b) {
	if (!b) return a;
    return gcd(b, a % b);                  
}                                    

inline void boost() {
    ios_base :: sync_with_stdio(NULL);
    cin.tie(NULL), cout.tie(NULL);      
}

inline void Solve() {      
	boost();
	cin >> n;
	for (int i = 1, u, v; i < n; i ++) 
		cin >> u >> v, g[v].pb(u), g[u].pb(v);//, g[v].pb(u);
	for (int i = 1; i <= n; i ++)
		cin >> cur[i];
	for (int i = 1; i <= n; i ++)
		cin>> need[i];
	dfs2(1);
	memset(used, 0, sizeof(used));
	for (int i = 1; i <= n; i ++) {
		if (cur[i] != need[i])
			res.pb(i), dfs(i, 1, 1, 0);	
	}
//	for (int i = 1; i <= n; i ++) cout << cur[i] << ' ';
	cout << sz(res) << endl;
	for (auto i : res) cout << i << endl;
}
                     
main () {
//	freopen("lca.in", "r", stdin);
//	freopen("lca.out", "w", stdout);                   	
    int tt = 1;
    while (tt--) {
        Solve();
	}
}