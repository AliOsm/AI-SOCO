#include <bits/stdc++.h>
#define ll long long

using namespace std;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	string s, t;
	cin >> s >> t;
	int l = 0, r = 0, z = -1, cnt[2] = {};
	
	for (auto x: s)
		cnt[x - '0']++;
	
	ll pows[500000], mod = 1000000007, hash[500000], sum[500000];
	pows[0] = 1;
	
	for (int i = 1; i < t.size(); i++)
		pows[i] = pows[i - 1] * 53 % mod;
		
	for (int i = 0; i < t.size(); i++)
		hash[i] = pows[i] * (t[i] - '0') % mod;
	
	sum[0] = hash[0];
	
	for (int i = 1; i < t.size(); i++)
		sum[i] = (sum[i - 1] + hash[i]) % mod;
	
	for (int i = 1; i < t.size(); i++)
		if (sum[t.size() - i - 1] * pows[i] % mod == (sum[t.size() - 1] - sum[i - 1] + mod) % mod)
		{
			z = i;
			break;
		}
	
	if (z == -1)
		z = t.size();

		for (int i = 0; i < t.size() && i < s.size(); i++)
			if (cnt[t[i] - '0'])
			{
				cout << t[i];
				cnt[t[i] - '0']--;
			}
			else
			{
				cout << (t[i] == '0' ? '1' : '0');
				t[i] == '0' ? cnt[1]-- : cnt[0]--;
			}
			
		for (int i = min(t.size(), s.size()); i < s.size(); i++)
		{
			int pos = (i - t.size()) % z + t.size() - z;
			
			if (cnt[t[pos] -'0'])
			{
				cout << t[pos];
				cnt[t[pos] - '0']--;
			}
			else
			{
				cout << (t[pos] == '0' ? '1' : '0');
				t[pos] == '0' ? cnt[1]-- : cnt[0]--;
			}
		}
}