#include <bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; i++ )
#define FOR( it , A ) for( typeof A.begin() it = A.begin() ; it != A.end() ; it++ )
#define clr( t , val ) memset( t , val , sizeof(t) )

#define all(v)  v.begin() , v.end()
#define rall(v)  v.rbegin() , v.rend()
#define pb push_back

#define mp make_pair
#define fi first
#define se second

#define ones(x) __builtin_popcount(x)
#define test puts("************test************");
#define sync ios_base::sync_with_stdio(false);

#define N 100005
#define MOD 1000000007
#define INF (1<<30)
#define EPS (1e-5)

typedef long long ll;
typedef unsigned long long ull;
typedef pair< int , int > pii;
typedef pair< ll , ll > pll;
typedef vector< int > vi;
typedef vector< vi > vvi;
typedef vector< ll > vll;
typedef vector< ull > vull;

/*
void impr( vvi G , int n ){
    REP( u , n ){
        int nv = G[ u ].size();
        REP( i , nv ){
            int v = G[ u ][ i ];
            cout << u << " " << v << endl;
        }
    }
}
*/
bool f( vvi G , int n , int p ){
    
    REP( mask , 1 << n ){
        vector< pii > V;
        REP( u , n ){
            int nv = G[ u ].size();
            REP( i , nv ){
                int v = G[ u ][ i ];
                if( mask & ( 1 << u ) )
                    if( mask & ( 1 << v ) ){
                        int a = u , b = v;
                        if( a > b ) swap( a , b );
                        V.pb( mp( a , b ) );
                    }
            }
        }
        //cout << S.size() << endl;
        sort( all( V ) );
        int nV = unique( all( V ) ) - V.begin();
        if( nV > 2*ones( mask ) + p ) return 0;
    }
    return 1;
}

int main()
{
    /*for( int n = 5 ; n <= 24 ; ++n )
        for( int p = 0 ; 2*n + p <= ( n * (n - 1) )/2 ; ++p  ){
            vvi G( n );
            int num = 2*n + p , t = n , it = 0;
            while( num ){
                if( num >= t ) {
                    for( int k = it + 1 ; k < n ; ++k )
                        G[ it ].pb( k ) , G[ k ].pb( it );
                    num -= t;
                }
                it ++;
                t--;
            }
            cout << n << " " << p <<endl;
            //impr( G , n );
            puts( f( G , n , p ) ? "YES" : "NO" );
            test
        }*/
    int cases , n , p;
    while( sc( cases ) == 1 ){
        REP( tc , cases ){
            sc( n ) , sc( p );
            vvi G( n );
            int num = 2*n + p , t = n - 1 , it = 0;
            while( num ){
                if( num >= t ) {
                    //cout << t << endl;
                    //cout << n - 1 - it << endl;
                    for( int k = it + 1 ; k < n ; ++k ){
                        
                        G[ it ].pb( k ) , G[ k ].pb( it );
                    }
                    num -= t;
                }
                it ++;
                t--;
            }
            
            vector< pii > V;
            REP( u , n ){
                int nv = G[ u ].size();
                REP( i , nv ){
                    int v = G[ u ][ i ];
                    //cout << u << " " << v << endl;
                    int a = u , b = v;
                    if( a > b ) swap( a , b );
                    V.pb( mp( a + 1 , b + 1 ) );
                }
            }
            sort( all( V ) );
            int nV = unique( all( V ) ) - V.begin();
            V.resize( nV );
            REP( i , nV ) printf( "%d %d\n" , V[ i ].fi , V[ i ].se );
            //cout << f( G , n , p ) << endl;
        }
    }
}
