#include <stdio.h>
#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define sz(a) (int)a.size()
#define fi first
#define se second

using namespace std;
//using namespace __gnu_pbds;

//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

const int N = 1000000 + 239;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;

void print(vector<int> &a)
{
    for (int i : a)
        cout << i << " ";
    cout << endl;
}

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("lasers.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    int n, m, k;
    cin >> n >> m >> k;
    cout << (k + m * 2 - 1) / (m * 2) << " " << (k - (k - 1) / (m * 2) * (m * 2) + 1) / 2 << " " << (k % 2 ? 'L' : 'R') << endl;
    return 0;
}