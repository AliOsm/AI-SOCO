// In the name of God.
// You are anything and We're nothing
// Ya Ali!

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int maxn = 5e2 + 1;
int n, m, d[maxn][maxn], nxt[maxn][maxn];
bool b[maxn];
vector<int> g[maxn], cmp[maxn][maxn];
int get(vector<int> &c){
	for(int v = 0; v < n; v++)
		if(!b[v])
			c.push_back(v);
	int cen = -1;
	for(auto v : c){
		bool ok = 1;
		for(auto u : g[v]){
			if(b[u])
				continue;
			int sz = 0;
			for(auto x : c)
				sz += d[u][x] < d[v][x];
			if(!(ok &= sz <= c.size() / 2))
				break;
		}
		if(ok){
			cen = v;
			break;
		}
	}
	//cerr << cen << '\n';
	assert(cen != -1);
	vector<int> ch;
	for(auto u : g[cen]){
		if(b[u])
			continue;
		ch.push_back(u);
		int sz = 0;
		for(auto x : c)
			if(d[u][x] < d[cen][x])
				cmp[cen][u].push_back(x);
	}
	for(auto v : c)
		b[v] = 1;
	for(auto u : ch){
		for(auto x : cmp[cen][u])
			b[x] = 0;
		nxt[cen][u] = get(cmp[cen][u]);
		for(auto x : cmp[cen][u])
			b[x] = 1;
	}
	return cen;
}
char q[6];
void go(int v){
	assert(v != -1);
	printf("%d\n", v + 1);
	fflush(stdout);
	//cout << v + 1 << endl;
	scanf("%s", q);
	if(q[0] == 'F')
		return ;
	int nx;
	scanf("%d", &nx);
	//cin >> nx;
	nx--;
	go(nxt[v][nx]);
}
int main(){
	//ios::sync_with_stdio(0);// cin.tie(0);
	//cin >> n >> m;
	scanf("%d%d", &n, &m);
	memset(d, 63, sizeof d);
	memset(nxt, -1, sizeof nxt);
	for(int i = 0; i < n; i++)
		d[i][i] = 0;
	while(m--){
		int sz;
		//cin >> sz;
		scanf("%d", &sz);
		int v;
		//cin >> v;
		scanf("%d", &v);
		v--;
		while(--sz){
			int u;
			//cin >> u;
			scanf("%d", &u);
			u--;
			g[v].push_back(u);
			g[u].push_back(v);
			d[u][v] = d[v][u] = 1;
			v = u;
		}
	}
	for(int k = 0; k < n; k++)
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++)
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
	vector<int> tmp;
	for(int i = 0; i < n; i++)
		tmp.push_back(i);
	int cen = get(tmp);
	for(int t = 0; t < n; t++)
		go(cen);
}
