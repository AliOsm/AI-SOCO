#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 510000;
const long long INF = 1LL << 60;
const long long MOD = 1000000007LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

ll gcd(ll x, ll y)
{
	ll r;
	if (x < y) {
		swap(x, y);
	}
	while (y > 0) {
		r = x % y;
		x = y;
		y = r;
	}
	return x;
}

ll gcd_vec(vector<ll> &a) {
	ll res = 0;
	for (ll i = 0; i < a.size(); i++) {
		res = gcd(res, a[i]);
	}

	return res;
}
int main()
{
	ll n, k;
	scanf("%lld %lld", &n, &k);
	vector<ll> a(n);
	for (ll i = 0; i < n; i++) {
		scanf("%lld", &a[i]);
	}
	ll g = gcd_vec(a);
	g %= k;
	if (g == 0) {
		puts("1");
		puts("0");
		return 0;
	}
	set<ll> s;
	ll t = g;
	while (1) {
		if (s.find(t) != s.end()) break;
		s.insert(t);
		t += g;
		if (t >= k) t -= k;
	}
	printf("%lld\n", (ll)s.size());
	for (auto itr = s.begin(); itr != s.end(); itr++) {
		printf("%lld ", (ll)*itr);
	}
	puts("");
	return 0;
}