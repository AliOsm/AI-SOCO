#include <bits/stdc++.h>
#define MOD 1000000007

using namespace std;

const double pi = acos(-1);
const int N = 1e5 + 5;

int n, m, k, id[N], f[N], vis[N];
long long dis[N];
vector<pair<pair<int, int>, int>> adj[N];

void Dij(){
    memset(dis, -1, sizeof dis);
    fill(id, id + n + 1, k);
    priority_queue<pair<long long, int>> q;
    dis[1] = 0;
    q.push({0, 1});
    while(q.size()){
        int u = q.top().second;
        long long d = -q.top().first;
        q.pop();
        if(vis[u]) continue;
        vis[u] = 1;
        for(auto e: adj[u]){
            int v = e.first.first;
            int c = e.first.second;
            int i = e.second;
            if(dis[v] == -1 || dis[v] > d + c || (dis[v] == d + c && id[v] != k && i == k)){
                dis[v] = d + c;
                f[id[v]] = 0;
                f[i] = 1;
                id[v] = i;
                q.push({-dis[v], v});
            }
        }
    }
}

int main()
{
    scanf("%d %d %d", &n, &m, &k);
    for(int i=0; i<m; i++){
        int u, v, c;
        scanf("%d %d %d", &u, &v, &c);
        adj[u].push_back({{v, c}, k});
        adj[v].push_back({{u, c}, k});
    }
    for(int i=0; i<k; i++){
        int s, c;
        scanf("%d %d", &s, &c);
        adj[1].push_back({{s, c}, i});
        adj[s].push_back({{1, c}, i});
    }
    Dij();
    int ans = 0;
    for(int i=0; i<k; i++)
        ans += !f[i];
    printf("%d\n", ans);
    return 0;
}
