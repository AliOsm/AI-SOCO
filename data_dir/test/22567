#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 1009, OO = 1000000007;
int n, ch[N];
bool ok[N][N];
string s;
pair<int, pair<int, int> > memo[N][N];

void init() {
    memset(memo, -1, sizeof memo);
    for (int i = 1; i <= n; ++i) {
        bool cnt[26];
        memset(cnt, 0, sizeof cnt);
        for (int j = i; j <= n; ++j) {
            cnt[s[j - 1] - 'a'] = 1;
            bool ot = 0;
            for (int k = 0; k < 26; ++k)
                if (cnt[k] && j - i + 1 > ch[k])
                    ot = 1;
            if (ot)
                break;
            ok[i][j] = 1;
        }
    }
}

pair<int, pair<int, int> > solve(int idx, int lst) {
    if (idx > n)
        return make_pair(1, make_pair(0, 0));
    pair<int, pair<int, int> > &ret = memo[idx][lst];
    if (ret.first != -1)
        return ret;
    ret = make_pair(0, make_pair(0, OO));
    if (idx + 1 <= n && ok[lst + 1][idx + 1])
        ret = solve(idx + 1, lst);

    pair<int, pair<int, int> > cur = solve(idx + 1, idx);
    ret.first = (ret.first + cur.first) % OO;
    ret.second.first = max(ret.second.first, max(idx - lst, cur.second.first));
    ret.second.second = min(ret.second.second, 1 + cur.second.second);
    return ret;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    fastInOut();
    cin >> n >> s;
    for (int i = 0; i < 26; ++i)
        cin >> ch[i];
    init();
    pair<int, pair<int, int> > ret = solve(1, 0);
    cout << ret.first << "\n" << ret.second.first << "\n" << ret.second.second;
    return 0;
}

void fastInOut() {
    ios_base::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);
}
