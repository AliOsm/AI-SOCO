#include <bits/stdc++.h>
using namespace std;

int main() {
#ifdef LOCAL_DEFINE
  // freopen("data.in", "rt", stdin);
  // freopen("data.out", "w", stdout);
  auto _start = chrono::high_resolution_clock::now();
#endif
	
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(10);
	double a, b, c, x1, y1, x2, y2;
	cin >> a >> b >> c >> x1 >> y1 >> x2 >> y2;
	auto dist = [](double x1, double y1, double x2, double y2) {
		return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) *(y1 - y2));
	};
	vector<pair<double, double>> v1, v2;
	v1.emplace_back(x1, -(a * x1 + c) / b);
	v1.emplace_back(-(b * y1 + c) / a, y1);
	v2.emplace_back(x2, -(a * x2 + c) / b);
	v2.emplace_back(-(b * y2 + c) / a, y2);
	double ans = numeric_limits<double>::max();
	for(pair<double, double> p1 : v1) {
		for(pair<double, double> p2 : v2) {
			double d = dist(p1.first, p1.second, p2.first, p2.second);
			ans = min(ans, abs(x1 - p1.first) + abs(y1 - p1.second) + abs(x2 - p2.first) + abs(y2 - p2.second) + d);
		}
	}
	ans = min(ans, abs(x1 - x2) + abs(y1 - y2));
	cout << ans << '\n';

#ifdef LOCAL_DEFINE
  auto _end = chrono::high_resolution_clock::now();
  cerr << "elapsed time: " << chrono::duration<double, milli>(_end - _start).count() << " ms\n";
#endif
	return 0;
}