#include <iostream>
#include <vector>
#include <algorithm>
#include <list>
#include <set>
#include <map>
#include <cmath>
using namespace std;

char res[15][2];

map<char,vector<int> > kek;

int main()
{
    ios_base::sync_with_stdio(false);
    for (int i=0;i<14;i++)
    {
        res[i][1]=1;
    }
    int n;
    cin >> n;
    while(n--)
    {
        char c;
        int a;
        cin >> c >> a;
        for (int i=0;i<10;i++)
        {
            for (int j=0;j<2;j++)
            {
                if (c=='^')
                {
                    res[i][j]^=(bool)(a&(1<<i));
                }
                if (c=='&')
                {
                    res[i][j]&=(bool)(a&(1<<i));
                }
                if (c=='|')
                {
                    res[i][j]|=(bool)(a&(1<<i));
                }
            }
        }
    }
    for (int i=0;i<10;i++)
    {
        if (!res[i][0]&&res[i][1])
        {
            continue;
        }
        if (!res[i][0]&&!res[i][1])
        {
            kek['&'].push_back(i);
        }
        if (res[i][0]&&res[i][1])
        {
            kek['|'].push_back(i);
        }
        if (res[i][0]&&!res[i][1])
        {
            kek['^'].push_back(i);
        }
    }
    for (int j=0;j<2;j++)
    {
        for (int i=0;i<10;i++)
        {
       //     cout << (int)res[i][j] << ' ';
        }
     //   cout << endl;
    }
    cout << 3 << endl;
    int a1nd=0;
    for (auto x:kek['&'])
    {
    //    cout << x << ' ';
        a1nd|=((1<<x));
    }
    //cout << endl;
    cout << '&' << ' ' << ((~a1nd)&1023) << endl;
    int o1r=0;
    for (auto x:kek['|'])
    {
      //  cout << x << ' ';
        o1r|=(1<<x);
    }
    //cout << endl;
    cout << '|' << ' ' << o1r << endl;
    int x1or=0;
    for (auto x:kek['^'])
    {
      //  cout << x << ' ';
        x1or|=(1<<x);
    }
    //cout << endl;
    cout << '^' << ' ' << x1or << endl;
    return 0;
}
