// In the name of God.
// We're nothing and you're everything.
// Ya Ali!
 
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 2e5 + 14;
struct Dsu{
	int par[maxn];
	Dsu(){  memset(par, -1, sizeof par);  }
	Dsu& operator = (const Dsu &od){
		memcpy(par, od.par, sizeof par);
		return *this;
	}
	int root(int v){
		return par[v] < 0 ? v : par[v] = root(par[v]);
	}
	bool fri(int v, int u){
		return root(v) == root(u);
	}
	ll merge(int v, int u){
		if((v = root(v)) == (u = root(u)))
			return 0;
		ll ret = (ll) par[v] * par[u];
		par[u] += par[v];
		par[v] = u;
		return ret;
	}
}  dsu;
struct E{
	int v, u, w;
}  e[maxn];
int n, q;
ll ans[maxn];
int main(int argc, char *argv[]){
	ios::sync_with_stdio(0), cin.tie(0);
	cin >> n >> q;
	for(int i = 0; i < n - 1; i++){
		cin >> e[i].v >> e[i].u >> e[i].w;
		e[i].v--, e[i].u--;
	}
	sort(e, e + n - 1, [](E a, E b){  return a.w < b.w;  });
	for(int i = 0; i < n - 1; i++)
		ans[i + 1] = ans[i] + dsu.merge(e[i].v, e[i].u);
	while(q--){
		int w;
		cin >> w;
		if(w < e[0].w){
			cout << 0 << ' ';
			continue;
		}
		int lo = 0, hi = n - 1;
		while(hi - lo > 1){
			int mid = (lo + hi) / 2;
			(e[mid].w <= w ? lo : hi) = mid;
		}
		cout << ans[lo + 1] << ' ';
	}
	cout << '\n';
}
