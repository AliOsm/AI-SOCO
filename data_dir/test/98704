#include <iostream>
#include <fstream>
#include <iomanip>
#include <set>
#include <cstdio>
#include <cstring>
#include <stack>
#include <string>
#include <map>
#include <vector>
#include <queue>
#include <deque>
#include <algorithm>
#include <cmath>
#include <sstream>
#include <bitset>
#include <ctime>
#include <list>
using namespace std;
#define mp make_pair
#define ull unsigned long long
#define ll long long
#define mod1 (ll)1000000009
#define mod (ll)1000000007
#define inf 1500000015000000000
#define mpi acos(-1.0)
#define M_E (double)2.71828182845
#pragma comment(linker, "/STACK:1000000000")

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	//freopen("downloading.in", "r", stdin);
	//freopen("downloading.out", "w", stdout);
	int n, m, t, a, b, cu = 1, mx = 0;
	string s;
	cin >> n >> m >> t;
	vector <int> vc;
	set <pair <int, int> > se;//, vector <pair <int, int> >, greater <pair <int, int> > 
	set <pair <int, int> >::iterator it;
	for (int i = 0; i < n; ++i){
		cin >> s;
		a = (s[0] - '0') * 10 * 60 * 60 + (s[1] - '0') * 60 * 60 + (s[3] - '0') * 10 * 60 + (s[4] - '0') * 60 + (s[6] - '0') * 10 + s[7] - '0';
		while (!se.empty() && a - t >= (*se.begin()).first){
			se.erase(se.begin());
		}
		if (se.size() == m){
			//cout << pq.top().second << '\n';
			it = se.end();
			--it;
			vc.push_back((*it).second);
			b = (*it).second;
			se.erase(it);
			se.insert(mp(a, b));
		}
		else{
			vc.push_back(cu);
			//pq.push(mp(a, cu));
			se.insert(mp(a, cu));
			++cu;
		}
		mx = max(mx, (int)se.size());
	}
	if (mx != m){
		cout << "No solution\n";
		return 0;
	}
	cout << cu - 1 << endl;
	for (int i = 0; i < vc.size(); ++i)
		cout << vc[i] << '\n';
	return 0;
}