#include <bits/stdc++.h>
#define FOR(x,n) for(int x = 0; x < n; x++)
#define ALL(a) (a).begin(), (a).end()
#define SZ(a) ((int)(a).size())
using namespace std;
typedef long long ll;

const int MXFACTS = 1e6 + 1;
const ll MOD = 1e9 + 7LL;
ll facts[MXFACTS], ifacts[MXFACTS];

inline ll bE(ll b, ll e){
  ll r = 1;
  while(e)
    if(e&1) r = (r*b)%MOD, e--; else b = (b*b)%MOD, e/=2;
  return r;
}

inline ll solve(ll s, ll n){
  return (facts[s+n-1] * ((ifacts[n-1] * ifacts[s])%MOD))%MOD;
}

int main() {
  ll F, W, H; cin >> F >> W >> H;

  facts[0] = 1;
  for(ll i = 1; i < MXFACTS; i++)
    facts[i] = (i * facts[i-1])%MOD;
  FOR(x,MXFACTS)
    ifacts[x] = bE(facts[x],MOD-2LL);

  if(W == 0){
    cout << "1\n";
  } else if(F == 0){
    cout << (H < W) << "\n";
  } else {
    ll totala = 0, totalc = 0;
    for(ll w = 1; w <= W; w++){
      ll totalcmb, totalacc;
      totalcmb = solve(W-w,w);
      totalacc = W - (H+1)*w >= 0 ? solve(W - (H+1)*w, w): 0;

      //whwh & hwhw
      if(F >= w){
        totalc += ((totalcmb * 2LL)%MOD * solve(F-w,w))%MOD;
        totala += ((totalacc * 2LL)%MOD * solve(F-w,w))%MOD;
        while(totalc >= MOD) totalc -= MOD;
        while(totala >= MOD) totala -= MOD;
      }

      //whw
      if(F+1 >= w && w >= 2){
        totalc += (totalcmb * solve(F-(w-1),w-1))%MOD;
        totala += (totalacc * solve(F-(w-1),w-1))%MOD;
        while(totalc >= MOD) totalc -= MOD;
        while(totala >= MOD) totala -= MOD;
      }

      //hwhwh
      if(F-1 >= w){
        totalc += (totalcmb * solve(F-(w+1),w+1))%MOD;
        totala += (totalacc * solve(F-(w+1),w+1))%MOD;
        while(totalc >= MOD) totalc -= MOD;
        while(totala >= MOD) totala -= MOD;
      }
    }
    cout << (totala * bE(totalc, MOD-2LL))%MOD << "\n";
  }
}