#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
bool comp(pii a, pii b)
{
	return a.first < b.first;
}
int main()
{
	ios::sync_with_stdio(false);
	int k; cin >> k;
	vector<int> n(k);
	vector<vector<ll>> a(k);
	for (int i = 0; i < k; i++)
	{
		cin >> n[i];
		a[i].resize(n[i]);
		for (int j = 0; j < n[i]; j++)
			cin >> a[i][j];
	}
	bool(*comp_pt)(pii, pii) = comp;
	map<ll, set<pii, bool(*)(pii, pii)>> sumToI;
	for (int i = 0; i < k; i++)
	{
		ll allSum = 0;
		for (int j = 0; j < n[i]; j++)
			allSum += a[i][j];
		for (int j = 0; j < n[i]; j++)
		{
			ll val = allSum - a[i][j];
			if (sumToI.count(val) == 0)
				sumToI[val] = set<pii, bool(*)(pii, pii)>(comp_pt);
			sumToI[val].insert(pii(i, j));
		}
	}
	for (auto& p : sumToI)
	{
		if (p.second.size() >= 2)
		{
			cout << "YES" << endl;
			int cnt = 0;
			for (auto& p2 : p.second)
			{
				if (cnt == 2)
					break;
				cout << (p2.first + 1) << " " << (p2.second + 1) << endl;
				cnt++;
			}
			return 0;
		}
	}
	cout << "NO" << endl;
}