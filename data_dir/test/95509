
 #include "bits/stdc++.h"
 using namespace std;
 int Cost[35];
 long long Power[35];
 vector<int> V;
 pair<long long,long long> Min[35] , dp[35];

 int main(){
 	int N , i , L;	
 	scanf( "%d%d" , &N , &L );

 	for( i = 1 ; i <= N ; ++i )
 		scanf( "%d" , Cost + i );

 	Power[0] = 1;

 	for( i = 1 ; i <= 30 ; ++i )
 		Power[i] = Power[i - 1] * 2;

 	Min[N].first = 1LL * Cost[N];
 	Min[N].second = Power[N - 1];

 	for( i = N - 1 ; i >= 1 ; --i ){
 		if( Min[i + 1].first <= Cost[i] ){
 			Min[i].first = Min[i + 1].first;
 			Min[i].second = Min[i + 1].second;
 		}
 		else{
 			Min[i].first = Cost[i];
 			Min[i].second = Power[i - 1];
 		}
 	}

 	dp[1].first = Min[1].first;
 	dp[1].second = Min[1].second;

 	for( i = 2 ; i <= N ; ++i ){
 		if( dp[i - 1].second >= Power[i - 1] ){
 			if( dp[i - 1].first < Min[i].first ){
 				dp[i].first = dp[i - 1].first;
 				dp[i].second = dp[i - 1].second;
 			}
 			else if( dp[i - 1].first == Min[i].first ){
 				dp[i].first = dp[i - 1].first;
 				if( dp[i - 1].second > Min[i].second ) dp[i].second = dp[i - 1].second;
 				else dp[i].second = Min[i].second;
 			}
 			else{
 				dp[i].first = Min[i].first;
 				dp[i].second = Min[i].second;
 			}
 		} 
 		else{
 			if( dp[i - 1].first * 2 < Min[i].first ){
 				dp[i].first = dp[i - 1].first * 2;
 				dp[i].second = dp[i - 1].second * 2;
 			}
 			else if( dp[i - 1].first * 2 == Min[i].first ){
 				dp[i].first = dp[i - 1].first * 2;
 				if( dp[i - 1].second * 2 > Min[i].second ) dp[i].second = dp[i - 1].second * 2;
 				else dp[i].second =  Min[i].second; 
 			}
 			else{
 				dp[i].first = Min[i].first;
 				dp[i].second = Min[i].second;
 			}
 		}
 	}

 	for( i = N + 1 ; i <= 31 ; ++i ){
 		if( dp[i - 1].second >= Power[i - 1] ){
 			dp[i].first = dp[i - 1].first;
 			dp[i].second = dp[i - 1].second;
 		}
 		else{
 			dp[i].first = dp[i - 1].first * 2;
 			dp[i].second = dp[i - 1].second * 2;
 		}
 	}

 	int Temp = L;
 	int Count = 0;

 	while( Temp ){
 		Temp >>= 1;
 		++Count;
 	}

 	long long Ans = dp[Count + 1].first , x = 0;
 	Temp = L;
 	i = 1;
 	bool found = false;

 	while( Temp ){
 		if( (Temp&1) == 1 ){
 			if( dp[i].second > Power[i - 1] ) x = dp[i].first;
 			else{
 				if( 2 * dp[i].first < x + dp[i].first && found == true ) x = 2 * dp[i].first;
 				else x += dp[i].first;
 			}

 			found = true;
 		}
 		else if( dp[i].first < x && found == true ) x = dp[i].first;

 		++i;
 		Temp >>= 1;
 	}

 	Ans = min( Ans , x );
 	printf( "%lld\n" , Ans );
 	return 0;
 }