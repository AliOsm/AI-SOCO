#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <algorithm>
#include <cmath>
#include <functional>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
const ll MOD = 1e9 + 7;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v; queue<int> q; deque<int> dq;

int vec[200000];

int main() {
	int n, k, t = 1, l, r, mid, pre = 0, now;
	pii flag = {1e9 + 7, 1e9 + 7};
	scanf("%d", &n);
	
	for(int i = 0; i < n; i++)
		scanf("%d", &vec[i]);	
	sort(vec, vec + n);
	
	for(int i = 0; i < n; i++) {
		t = 1; pre = 1e9 + 7; now = 1e9 + 7;
		
		for(int j = 0; j < 31; j++) {
			pre = now; now = 1e9 + 7;
			l = i + 1; r = n - 1;
			
			while(l <= r) {
				mid = (l + r) / 2;
				if(vec[i] + t == vec[mid]) {now = vec[mid]; flag = {vec[i], now}; break;}
				if(vec[i] + t < vec[mid]) r = mid - 1;
				else l = mid + 1;
			}
			
			if(now <= (int)1e9 && pre <= (int)1e9) return !printf("3\n%d %d %d", vec[i], pre, now);
			t *= 2;
		}
	}
	
	if(flag.first <= 1e9) printf("2\n%d %d", flag.first, flag.second);
	else printf("1\n%d", vec[0]);
}