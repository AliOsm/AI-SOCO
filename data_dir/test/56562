#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
//#define int                 long long
#define ll                  long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000003
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
typedef tree<pair<int,int>,null_type,less<pair<int,int> >,
				rb_tree_tag,tree_order_statistics_node_update> statisticsTree;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=((res%p)*(x%p))%p;
		y=y>>1;
		x=((x%p)*(x%p))%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out4.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>tests;
	Tests=tests;
	while(tests--)
	{
		ll n,k;
		cin>>n>>k;
		if(n<64)
		{
			if(k>(1LL<<n))
			{
				cout<<1<<" "<<1;
				return 0;
			}
		}
		ll N=k-1;
		ll cnt=0;
		ll z=2;
		while(N>=z)
		{
			cnt+=(N/z);
			z*=2;
		}
		//cout<<cnt<<endl;
		ll MAGIC=power(2,cnt,hell);
		//cout<<MAGIC<<endl;
		MAGIC=power(MAGIC,hell-2,hell);
		ll NUM=1;
		ll Z=power(2,n,hell);
		if(k-1>=hell)
		{
			NUM=0;
		}
		else
		{
			for(int i=1;i<=k-1;i++)
			{
				ll TMP=Z-i;
				TMP+=hell;
				TMP%=hell;
				NUM*=TMP;
				NUM%=hell;
			}
		}
		
		ll DEN=power(Z,k-1,hell);
		
		NUM=DEN-NUM+hell;
		NUM%=hell;
		NUM*=MAGIC;
		NUM%=hell;
		DEN*=MAGIC;
		DEN%=hell;
		cout<<NUM<<" "<<DEN;
	}
	return 0;
}