#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
//#define int                 long long
#define ll              	long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007LL
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
typedef tree<int,null_type,less<int>,
				rb_tree_tag,tree_order_statistics_node_update> statisticsTree;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=(res*x)%p;
		y=y>>1;
		x=(x*x)%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
ll dp[105][105][105][4];
ll solve(int x,int st,int en,string &s,int type,vector<ll> &fib)
{
	if(dp[x][st][en][type]!=-1) return dp[x][st][en][type];
	else if(type==0)
	{
		if(x==0)
		{
			if(st==en && s[st]=='0') return 1;
			else return 0;
		}
		else if(x==1)
		{
			if(st==en && s[st]=='1') return 1;
			else return 0;
		}
		else
		{
			ll ans=0;
			ll tmp=(solve(x-1,st,en,s,0,fib)*power(2,fib[x-2],hell))%hell;
			ans+=tmp;
			tmp=(power(2,fib[x-1],hell)*solve(x-2,st,en,s,0,fib))%hell;
			ans+=tmp;
			ans%=hell;
			for(int i=st;i<en;i++)
			{
				tmp=(solve(x-1,st,i,s,2,fib)*solve(x-2,i+1,en,s,1,fib))%hell;
				ans+=tmp;
				ans%=hell;
			}
			dp[x][st][en][type]=ans;
			return ans;
		}
	}
	else if(type==1)
	{
		if(x==0)
		{
			if(st==en && s[st]=='0') return 1;
			else return 0;
		}
		else if(x==1)
		{
			if(st==en && s[st]=='1') return 1;
			else return 0;
		}
		else
		{
			ll ans=0;
			ll tmp=(solve(x-1,st,en,s,1,fib)*power(2,fib[x-2],hell))%hell;
			ans+=tmp;
			tmp=solve(x-2,st,en,s,1,fib);
			ans+=tmp;
			ans%=hell;
			for(int i=st;i<en;i++)
			{
				tmp=(solve(x-1,st,i,s,3,fib)*solve(x-2,i+1,en,s,1,fib))%hell;
				ans+=tmp;
				ans%=hell;
			}
			dp[x][st][en][type]=ans;
			return ans;
		}
	}
	else if(type==2)
	{
		if(x==0)
		{
			if(st==en && s[st]=='0') return 1;
			else return 0;
		}
		else if(x==1)
		{
			if(st==en && s[st]=='1') return 1;
			else return 0;
		}
		else
		{
			ll ans=0;
			ll tmp=solve(x-1,st,en,s,2,fib);
			ans+=tmp;
			tmp=(power(2,fib[x-1],hell)*solve(x-2,st,en,s,2,fib))%hell;
			ans+=tmp;
			ans%=hell;
			for(int i=st;i<en;i++)
			{
				tmp=(solve(x-1,st,i,s,2,fib)*solve(x-2,i+1,en,s,3,fib))%hell;
				ans+=tmp;
				ans%=hell;
			}
			dp[x][st][en][type]=ans;
			return ans;
		}
	}
	else
	{
		if(x==0)
		{
			if(st==en && s[st]=='0') return 1;
			else return 0;
		}
		else if(x==1)
		{
			if(st==en && s[st]=='1') return 1;
			else return 0;
		}
		else
		{
			ll ans=0;
			ll tmp=solve(x-1,st,en,s,3,fib);
			ans+=tmp;
			tmp=solve(x-2,st,en,s,3,fib);
			ans+=tmp;
			ans%=hell;
			for(int i=st;i<en;i++)
			{
				tmp=(solve(x-1,st,i,s,3,fib)*solve(x-2,i+1,en,s,3,fib))%hell;
				ans+=tmp;
				ans%=hell;
			}
			dp[x][st][en][type]=ans;
			return ans;
		}
	}
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out4.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>tests;
	Tests=tests;
	while(tests--)
	{
		int n,x;
		cin>>n>>x;
		string s;
		cin>>s;
		vector<ll> fib(150);
		fib[0]=1;
		fib[1]=1;
		rep(i,150-2) fib[i+2]=(fib[i+1]+fib[i])%(hell-1);
		memset(dp,-1,sizeof dp);
		ll ans=solve(x,0,n-1,s,0,fib);
		cout<<ans;
	}
	return 0;
}