#include<bits/stdc++.h>
#define P(x,y) make_pair(x,y)
using namespace std;
const int MX=(1<<20);
struct str{
    int first , second;
    str(){}
    str(int first , int second):first(first) , second(second){}
};
int cur[MX];
bool operator < ( const str A ,  const str B){
    if(A.first != B.first) return A.first < B.first;
    else return cur[A.second] > cur[B.second];
}
int n , m , ans[MX] , ada , ok[MX] , sol ;
int arr[MX];
vector < pair < int , int > > sorted;
int main(){
    scanf("%d %d",&n,&m);
    for(int j=1;j<=n;j++){
        scanf("%d",&arr[j]);
        sorted.push_back({arr[j] , j});
    }
    sort(sorted.begin() , sorted.end());
    priority_queue < str > Q;
    for(int j=1;j<=m;j++){
        int x;
        scanf("%d",&x);
        Q.push(str(x , j));
    }
    while(!Q.empty()){
        auto pp = Q.top(); Q.pop();
        int x = pp.first , idx = pp.second;
        while(!sorted.empty() && sorted.back().first > x) sorted.pop_back();
        if(sorted.back().first == x){
            ada += cur[idx];
            ans[sorted.back().second] = idx;
            //cout<<sorted.back().second<<endl;
            sorted.pop_back();
            ++sol;
            continue;
        }
        if(x == 1) break;
        ++cur[idx];
        x = (x+1)/2;
        Q.push(str(x , idx));
    }
    for(int j=1;j<=n;j++) ok[ans[j]] = 1;
    for(int j=1;j<=m;j++) if(!ok[j]) cur[j] = 0;
    cout<<sol<<' '<<ada<<endl;
    for(int j=1;j<=m;j++)
        printf("%d ",cur[j]);
    puts("");
    for(int j=1;j<=n;j++)
        printf("%d ",ans[j]);
    puts("");

}
