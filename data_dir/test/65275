#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <sstream>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
#include <random>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN = 100050;

struct Point {
	int x, y;
	Point(int x=0, int y=0):x(x), y(y){}
	void in(){
		scanf("%d %d", &x, &y);
	}
	Point operator - (Point other){ return Point(x - other.x, y - other.y); }
	ll operator * (Point other){ return (ll)x*other.y - (ll)y*other.x; }
};

int n;
Point P[MAXN];

bool in_line(Point a, Point b, Point c){
	Point p1 = b - a;
	Point p2 = c - a;
	return p1 * p2 == 0;
}

int main(){
	mt19937 rng(time(0));
	while(scanf("%d", &n) >= 1){
		forn(i, n){
			P[i].in();
		}
		if(n <= 4){
			puts("YES");
			continue;
		}
		bool ok = false;
		forn(z, 128){
			int a = rng() % n;
			int b = rng() % n;
			while(b == a) b = rng() % n;
			vector<Point> other;
			bool good = true;
			forn(i, n){
				if(i == a || i == b) continue;
				if(in_line(P[a], P[b], P[i])) continue;
				if(sz(other) < 2){ other.pb(P[i]); continue; }
				if(in_line(other[0], other[1], P[i])) continue;
				good = false;
				break;
			}
			if(good) ok = true;
		}
		printf("%s\n", ok ? "YES" : "NO");
	}
	return 0;
}
