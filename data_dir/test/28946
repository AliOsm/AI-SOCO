#include <bits/stdc++.h>

using namespace std;

typedef int64_t li;
typedef pair<li, li> pll;
#define all(x) x.begin(), x.end()
#define sz(x) x.size()

template <class T>
inline void in(T &a) {
      cin >> a;
}

template <class... Args>
inline void out(Args... args) {}

template <class Head, class... Args>
inline void out(Head head, Args... args) {
      cout << head;
      out(args...);
}    

int const N = 25;
li c[N][N];
li dp[(li)(1 << 19)][N];

li popcount(li a) {
      li s = 0;
      for (int i = 0; i < N; ++i) {
            if (a & (1LL << i))
                  s++;
      }
      return s;
}

int main() {  
      li n, m, k;
      in(n); in(m); in(k);
      vector <li> a(n);
      for (auto &i : a) in(i);

      while (k--) {
            int u, v, ce;
            in(u); in(v); in(ce);
            c[u-1][v-1] = ce;     
      }
      
      for (int i = 0; i < n; ++i) {
            dp[(1 << i)][i] = a[i];
      }

      for (int mask = 0; mask < (1 << n); mask++) {
            for (int i = 0; i < n; ++i) {
                  if (mask & (1LL << i)) {
                        for (int j = 0; j < n; ++j) {
                              if (!(mask & (1LL << j))) {
                                    dp[(mask | (1LL << j))][j] = max(dp[(mask | (1LL << j))][j], dp[mask][i] + c[i][j] + a[j]);
                              }
                        }
                  }
            }
      }
      li ans = 0;

      for (int mask = 0; mask < (1 << n); mask++) {
            if (popcount(mask) == m) {
                  for (int j = 0; j < n; ++j)
                        ans = max(ans, dp[mask][j]);
            }
      }

      out(ans, '\n');

      return 0;
}