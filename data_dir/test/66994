#include <bits/stdc++.h>
using namespace std;
typedef long long int i64;
#define SZ(v) (int((v).size()))
#define ALL(vec) (vec).begin(),(vec).end()
template<typename T> inline bool uax(T &x, T y) {return (y > x) ? x = y, true : false;}
template<typename T> inline bool uin(T &x, T y) {return (y < x) ? x = y, true : false;}
 
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); \
  stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(__attribute__((unused)) istream_iterator<string> it) {}
template<typename T,typename... Args> void err(istream_iterator<string> it, T a, Args... args) {
  cerr << *it << " =: " << a << endl; err(++it, args...); }
template<typename T1,typename T2> ostream& operator<<(ostream& os, pair<T1,T2>& buf) {
  return os << "(" << buf.first << ": " << buf.second << ")"; }
#define DefOut(Con) template<typename T>ostream&operator<<(ostream&os,Con<T>&A){ bool f = false; os << "{"; \
  for (auto &e: A) { if (f) os << ", "; os << e; f = true; } return os << "}"; }
#define DefOut2(Con) template<typename K,typename V>ostream&operator<<(ostream&os,Con<K,V>&A) \
{ bool f = false; os << "{"; for (auto &e: A) { if (f) os << ", "; os << e; f = true; } return os << "}"; }
template<typename T>ostream &operator << (ostream &os,vector<vector<T>>& A) {
  for (auto &B: A) os << '\n' << B; return os; }
DefOut(vector) DefOut(set) DefOut(multiset) DefOut2(map) 
template<typename T> void kek(T ans) {cout << ans << endl; exit(0);}
int const MOD = 1000000007;
long long const INF = 1e18;
#define PI 3.14159265358979323846
/***********************************************************************/

int32_t main() {

  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int n, m;
  cin >> n >> m;
  vector<int> a(n), b(n);
  for (int i = 0; i < n; ++i) {
    cin >> a[i] >> b[i];
  }
  vector<i64> ans(n);
  while (m--) {
    int x, y; cin >> x >> y; --x; --y;
    ans[x] -= min(a[x] + b[y], b[x] + a[y]);
    ans[y] -= min(a[x] + b[y], b[x] + a[y]);
  }
  vector<int> ids(n);
  iota(ALL(ids), 0);
  sort(ALL(ids), [&] (int i, int j) {
    return a[i] + b[j] < b[i] + a[j];
  });
  vector<i64> suf(n + 1);
  for (int i = n - 1; i >= 0; --i) {
    suf[i] = b[ids[i]];
    suf[i] += suf[i + 1];
  }
  i64 pre = 0LL;
  for (int i = 0; i < n; ++i) {
    int id = ids[i];
    ans[id] += pre + (i64) i * b[id];
    ans[id] += suf[i + 1] + (i64) (n - i - 1) * a[id];
    pre += a[id];
  }
  for (auto &z: ans) cout << z << ' ';
  
  return 0;
}
