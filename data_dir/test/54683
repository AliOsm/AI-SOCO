#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
 
// #define fisier 1
 
using namespace std;
 
typedef long long ll;
 
const int mod = 1000000007;
const double dancila = 3.14159265359; // PI 
const double eps = 1e-9;
 
int n, m, g, r;
int pz[10002];
int bst[10002][1002];
bool viz[10002][1002];
int main()
{
 
    #ifdef fisier
        ifstream f("input.in");
        ofstream g("output.out");
    #endif
 
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
	cin >> n >> m;
	for(int i = 1; i <= m; ++i)
		cin >> pz[i];
	cin >> g >> r;
	sort(pz+1, pz+m+1);
	for(int i = 1; i <= m; ++i)
		for(int j = 0; j <= g; ++j)
			bst[i][j] = 2000000001;
	bst[1][0] = 0;
	deque<pair<int, int> >s;
	s.pb({1, 0});
	while(!s.empty())
	{
		pair<int, int> x = s[0];
		int vr = bst[x.fi][x.se];
		viz[x.fi][x.se] = 0;
		s.pop_front();
		if(x.se == g)
		{
			vr += r;
			if(bst[x.fi][0] > vr)
			{
				bst[x.fi][0] = vr;
				s.pb({x.fi, 0});
			}
		}
		int pp = x.fi - 1;
		int rst = x.se + (pz[pp+1] - pz[pp]);
		if(pp >= 1 && rst <= g && vr + (pz[pp+1] - pz[pp]) < bst[pp][rst])
		{
			bst[pp][rst] = vr + (pz[pp+1] - pz[pp]);
			if(!viz[pp][rst])
			{
				viz[pp][rst] = 1;
				s.pb({pp, rst});
			}
		}
		pp = x.fi + 1;
		rst = x.se + (pz[pp] - pz[pp-1]);
		if(pp <= m && rst <= g && vr + (pz[pp] - pz[pp-1]) < bst[pp][rst])
		{
			bst[pp][rst] = vr + (pz[pp] - pz[pp-1]);
			if(!viz[pp][rst])
			{
				viz[pp][rst] = 1;
				s.pb({pp, rst});
			}
		}
	}
	int posans = 2000000001;
	for(int i = 0; i <= g; ++i)
		posans = min(posans, bst[m][i]);
	if(posans == 2000000001)
		cout << -1;
	else
		cout << posans;
    return 0;
}
