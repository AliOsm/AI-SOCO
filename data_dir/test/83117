#include <iostream>
#include <cstdio>
#include <list>
#include <cmath>
#include <algorithm>
#include <string>
#include <cstring>
#include <cstdlib>
#include <set>
#include <map>
#include <vector>
#include <deque>
#include <queue>
#include <climits>
#include <unordered_map>
#define all(v) v.begin(), v.end()
#define ll long long
#define READ(f) freopen (f, "r", stdin)
#define WRITE(f) freopen (f, "w", stdout)
#define pb push_back
#define mp make_pair
#define foreach(it, S) for(__typeof (S.begin()) it = S.begin(); it != S.end(); it++)
#define inc(i, x, n) for(int i=(int)x;i<=(int)n;i++)
#define dec(i, n, x) for(int i=(int)n;i>=(int)x;i--)
#define F first
#define S second
 
using namespace std;
 
const int MAXN = 1e6 + 256;
const int N = 1256;
const int INF = int (1e9);

int a[5][5];

void ok (int sm) {
    int cnt = 0;
    for (int i = 1; i <= 3; ++i) {
        int st = 0; 
        int x, y;
        for (int j = 1; j <= 3; ++j) {
            st += a[i][j];
            if (!a[i][j]) {
                x = i;
                y = j;
            }
        }
        if (st != sm) {
            a[x][y] = sm - st;
        }
    }
}
bool is (int sm) {
    for (int i = 1; i <= 3; ++i)
        sm -= a[i][i];
    if (sm)
        return 0;
        return 1;
}
void out () {
    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            cout << a[i][j] << ' ';
        }
        cout << "\n";
    }
}
vector < pair < int, int > > v;
bool stk[MAXN], stb[MAXN];

int main () {
    ios_base :: sync_with_stdio (false);
    #ifdef accepted
        READ(".in");
        WRITE(".out");
    #endif

    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            cin >> a[i][j];
            if (!a[i][j]) {
                v.pb (mp (i, j));
                stk[i] = 1;
                stb[j] = 1;
            }
        }
    }
    bool b = 1;
    int sm = 0;
    for (int i = 1; i <= 3; ++i) {
        int ss = 0;
        for (int j = 1; j <= 3; ++j) {
            ss += a[i][j];
        }
        sm = max (ss, sm);
    }
    sm++;
    while (sm % 3 != 0)
        sm++;
    ok (sm);
    while (!is (sm)) {
        sm++;
        a[v[0].F][v[0].S] = 0;
        a[v[1].F][v[1].S] = 0;
        a[v[2].F][v[2].S] = 0;
        //out();
        ok (sm);
    }
    out ();
    return 0;
}