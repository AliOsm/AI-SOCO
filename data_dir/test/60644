#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
 
using namespace std;
using namespace __gnu_pbds;
 
#define debug(s) cout << #s << " = " << s << endl
#define all(v) (v).begin(), (v).end()
#define mem(a,val) memset(a, val, sizeof a)
 
#define maxn 100010
#define INF 1e15
#define ff first
#define ss second
#define endl '\n'
typedef long long ll;
 
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

int n;
string str;
int dp[2 * maxn], maxdp[30];

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cin >> n;
  cin >> str;
  fill(dp, dp + n + 1, 1);
  int need = 0;
  for (int i = 0; i < n; ++i) {
    for (int j = str[i] - 'a' + 1; j < 26; ++j) {
      dp[i] = max(dp[i], maxdp[j] + 1);
    }
    maxdp[str[i] - 'a'] = max(maxdp[str[i] - 'a'], dp[i]);
  }
  for (int i = 0; i < 26; ++i) need = max(need, maxdp[i]);
  cout << need << endl;
  for (int i = 0; i < n; ++i) cout << dp[i] << " ";
  cout << endl;
}

