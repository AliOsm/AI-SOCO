//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define sz(x) (int)(x).size()
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int _i = 0; _i < (n); _i++) ni(a[_i])
#define nal(a, n) for (int _i = 0; _i < (n); _i++) nl(a[_i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
char s[MAXN];
int sm[26][MAXN];
 
int f(int l, int r, int k) {
  if (!l) return sm[k][r];
  return sm[k][r] - sm[k][l-1];
}
 
int main() {
  scanf("%s", s); int n = strlen(s);
  for (int i = 0; i < n; i++) {
    if (i) for (int j = 0; j < 26; j++)
      sm[j][i] += sm[j][i-1];
    sm[s[i]-'a'][i]++;
  }
  int q; ni(q);
  for (int i = 1; i <= q; i++) {
    int l, r; scanf("%d %d", &l, &r);
    if (r == l || s[l-1] != s[r-1]) {
      printf("Yes\n");
      continue;
    }
    int cnt = 0;
    for (int j = 0; j < 26; j++)
      if (f(l-1,r-1,j) > 0)
        cnt++;
    if (cnt >= 3) {
      printf("Yes\n");
    } else
    printf("No\n");
  }
  return 0;
}