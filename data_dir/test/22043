#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define ll long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 200001;
vector < int > g[N];
vector < pair < int, int > > q[N];
int ans[N], a[N], b[N], in[N], out[N], res[N], cnt[N], sz[N];
int T;
void predfs(int v, int p = -1){
    T++;
    in[v] = T;
    b[T] = a[v];
    for (auto u: g[v]){
        if (u == p) continue;
        predfs(u, v);
        sz[v] += sz[u];
    }
    sz[v]++;
    out[v] = T;
}
void dfs(int v, int p = -1, bool keep = 1){
    int x = -1;
    int nv = 0;
    for (auto u: g[v]){
        if (u == p) continue;
        if (sz[u] > x){
            x = sz[u];
            nv = u;
        }
    }
    for (auto u: g[v]) if (u != nv && u != p) dfs(u, v, 0);
    if (nv != 0)
        dfs(nv, v, 1);
    for (auto u: g[v]){
        if (u == p || u == nv) continue;
        for (int i = in[u]; i <= out[u]; i++){
            cnt[b[i]]++;
            res[cnt[b[i]]]++;
        }
    }
    cnt[a[v]]++;
    res[cnt[a[v]]]++;
    for (auto i: q[v]){
        ans[i.S] = res[i.F];
    }
   // cout << v << " ---- " << " " << in[v] << " " << out[v] << endl;
   // for (int i = 1; i <= 3; i++) cout << cnt[i] << " ";
   // cout << endl;
    if (keep == 0){
        for (int i = in[v]; i <= out[v]; i++){
            res[cnt[b[i]]]--;
            cnt[b[i]]--;
        }
    }
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt","w", stdout);
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i++) cin >> a[i];
    for (int i = 1; i < n; i++){
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    for (int i = 1; i <= m; i++){
        int v, x;
        cin >> v >> x;
        q[v].pb({x, i});
    }
    predfs(1);
    dfs(1);
    for (int i = 1; i <= m; i++) cout << ans[i] << " ";
}
