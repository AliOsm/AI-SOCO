#include <bits/stdc++.h>

using namespace std;

vector<long long> prime_factors(long long n) {
    vector<long long> ret;
    for (int i = 2 ;i * 1ll * i <= n ;i++) {
        while (n % i == 0) {
            ret.push_back(i);
            n /= i;
        }
    }
    if (n > 1) ret.push_back(n);
    return ret;
}

vector<int> get(long long n) {
    map<long long , int> ret;
    for (auto x : prime_factors(n))
        ret[x]++;

    vector<int> v;
    for (auto &p : ret)
        if (p.second&1)
            v.push_back(p.first);

    return v;
}

const int N = 5e3 + 5;
unsigned long long v[N];

unsigned long long mix(unsigned long long o){
    o+=0x9e3779b97f4a7c15;
    o=(o^(o>>30))*0xbf58476d1ce4e5b9;
    o=(o^(o>>27))*0x94d049bb133111eb;
    return o^(o>>31);
}

unsigned long long HASH(vector<int> a) {
    if (a.size() == 0)
        return mix(1e9);

    unsigned long long ret = mix(a[0]);
    for (int i = 1 ;i < a.size() ;i++)
        ret += mix(a[i]);

    return ret;
}

int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie();
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    int n;
    cin >> n;

    vector<int> a(n);
    map<unsigned long long , int> NEW;
    for (int i = 0 ;i < n ;i++) {
        cin >> a[i];
        v[i] = HASH(get(abs(a[i])));
        NEW[v[i]];
    }

    int nxt = 0;
    for (auto &p : NEW)
        p.second = nxt++;

    for (int i = 0 ;i < n ;i++)
        v[i] = NEW[v[i]];

    vector<int> ans(n + 1) , pos(n + 1) , neg(n + 1);
    int vid = 0;

    for (int i = 0 ;i < n ;i++) {
        ++vid;
        int unique = 0 , zeros = 0;
        for (int j = i ;j < n ;j++) {
            if (a[j] < 0) {
                if (neg[v[j]] != vid) {
                    neg[v[j]] = vid;
                    unique++;
                }
            } else if (a[j] > 0 ){
                if (pos[v[j]] != vid) {
                    pos[v[j]] = vid;
                    unique++;
                }
            } else {
                zeros++;
            }

            ans[unique + (unique == 0 && zeros != 0)]++;
        }
    }

    for (int i = 1 ;i <= n ;i++)
        cout << ans[i] << ' ';
}