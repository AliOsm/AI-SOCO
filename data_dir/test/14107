#pragma GCC optimize("O3")
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
//#define int long long
//#define d long double
#define pii pair<int,int>
#define ppp pair<pii,pii>
#define pb push_back
#define N 200003
#define inf (int)1e18
#define Arena ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
int mod=1e9+7;
map<pii,bool> pr;
map<pii,vector<pii>> g;
int x[2],y[2];

void bfs()
{
    map<pii,int> dist;  dist.clear();
    map<pii,pii> par;   par.clear();
    queue<pii> q;
    pii n={x[0],y[0]};
    q.push(n);
    dist[n]=0;
    par[n]=n;
    int k;
    
    while(!q.empty())
    {
        n=q.front();
        q.pop();
        k=dist[n];
        
        for(auto it:g[n])
        {
            if(dist.find(it)==dist.end() or dist[it]>k+1)
                dist[it]=k+1, q.push(it), par[it]=n;
        }   
    }   
    
    cout<<(dist.find({x[1],y[1]})==dist.end() ? -1:dist[{x[1],y[1]}]);
}   

signed main()
{
    Arena
    
    pr.clear();
    g.clear();
    cin>>x[0]>>y[0]>>x[1]>>y[1];
    int i,j,n,r,a,b;
    cin>>n;
    
    for(i=1;i<=n;++i)
    {
        cin>>r>>a>>b;
        j=a;
        pr[{r,j}]=1;
        if(pr.find({r-1,j})!=pr.end())
        {
            g[{r,j}].pb({r-1,j});
            g[{r-1,j}].pb({r,j});
        }   
        if(pr.find({r+1,j})!=pr.end())
        {
            g[{r,j}].pb({r+1,j});
            g[{r+1,j}].pb({r,j});
        }  
        if(pr.find({r-1,j-1})!=pr.end())
        {
            g[{r-1,j-1}].pb({r,j});
            g[{r,j}].pb({r-1,j-1});
        }   
        if(pr.find({r+1,j-1})!=pr.end())
        {
            g[{r,j}].pb({r+1,j-1});
            g[{r+1,j-1}].pb({r,j});
        }  
        if(pr.find({r-1,j+1})!=pr.end())
        {
            g[{r,j}].pb({r-1,j+1});
            g[{r-1,j+1}].pb({r,j});
        }   
        if(pr.find({r+1,j+1})!=pr.end())
        {
            g[{r,j}].pb({r+1,j+1});
            g[{r+1,j+1}].pb({r,j});
        }  
        
        for(j=a+1;j<=b;++j)
        {
            pr[{r,j}]=1;
            if(pr.find({r,j-1})!=pr.end())
            {
                g[{r,j}].pb({r,j-1});
                g[{r,j-1}].pb({r,j});
            }   
            if(pr.find({r-1,j})!=pr.end())
            {
                g[{r,j}].pb({r-1,j});
                g[{r-1,j}].pb({r,j});
            }   
            if(pr.find({r+1,j})!=pr.end())
            {
                g[{r,j}].pb({r+1,j});
                g[{r+1,j}].pb({r,j});
            } 
            if(pr.find({r-1,j-1})!=pr.end())
            {
                g[{r-1,j-1}].pb({r,j});
                g[{r,j}].pb({r-1,j-1});
            }   
            if(pr.find({r+1,j-1})!=pr.end())
            {
                g[{r,j}].pb({r+1,j-1});
                g[{r+1,j-1}].pb({r,j});
            }  
            if(pr.find({r-1,j+1})!=pr.end())
            {
                g[{r,j}].pb({r-1,j+1});
                g[{r-1,j+1}].pb({r,j});
            }   
            if(pr.find({r+1,j+1})!=pr.end())
            {
                g[{r,j}].pb({r+1,j+1});
                g[{r+1,j+1}].pb({r,j});
            }    
        }   
    }  
    bfs();
    
    
    return 0;
}
