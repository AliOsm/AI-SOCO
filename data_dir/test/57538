/**
 *    Author:  "Ashutosh Kaushik" !!
 *    AK18     you will see me in a crown -_- 
**/
#include<bits/stdc++.h>
using namespace std;
#define MOD 
#define hell 100000000000000
#define PI 3.1415926535897932384626
#define int unsigned long long int
#define fi first
#define se second
#define pq priority_queue
#define pb push_back
#define IOS ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define endl '\n'
#define ZERO(dabba) memset(dabba,-2,sizeof(dabba));
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
template<typename T> T pow(T a,T b, int m){T ans=1; while(b>0){ if(b%2==1) ans=(ans*a)%m; b/=2; a=(a*a)%m; } return ans%m; }
template<typename T> void swap(T *a,T *b){T temp = *a;*a = *b;*b = temp;return ;}
/*******************************Template ends**************************************/
int nextPowerOf2(int n) 
{ 
    int p = 1; 
    if (n && !(n & (n - 1))) 
        return n; 
  
    while (p < n)  
        p <<= 1; 
      
    return p; 
} 
void solve()
{   
    int q;
    cin>> q;
    while(q--)
    {
        int a;
        cin >> a;
        int out = nextPowerOf2(a);
        if(a == out)
        {
            cout << out + out - 1 << endl;
            continue;
        }
        if(a == out - 1)
        {
            std::vector<int> v;
            int ans = 1;
            for(int i = 2; i*i <= a; ++i)
            {
                if(a%i == 0)
                {
                    v.pb(i);
                    if(i*i != a)
                        v.pb(a/i);
                }
            }
            sort(v.begin(),v.end());
            for(auto i:v)
            {
                if(i <= a/2)
                    ans = i;
            }
            cout << ans << endl;
            continue;
        }
        cout << out -1 << endl;
    }
}
signed main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output2.txt", "w", stdout);
    #endif
    solve();
    return 0;
}