#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define clr(a,b) memset(a,b,sizeof(a))
#define all(v) ((v).begin()),((v).end())
#define read(v) freopen(v, "r", stdin)
#define write(v) freopen(v, "wt", stdout)
#define fastIO cout << fixed << setprecision(8), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
double const EPS = 1e-9, PI = acos(-1);
const int N = 1e5 + 9, M = 2e3 + 9, OO = 1e9 + 7, MOD = 1e9 + 7;
const ll inf = 1e18;

ll fib[N];

int main() {
  fastIO;
//  read("input.in");
//  write("input.in");
  string str;
  cin >> str;
  fib[0] = 1, fib[1] = 1;
  for (int i = 2; i < N; ++i) {
    fib[i] = fib[i - 1] + fib[i - 2];
    fib[i] %= MOD;
  }
  if(count(all(str), 'm') || count(all(str), 'w')) {
    cout << 0;
    return 0;
  }
  ll ans = 1;
  ll u = 0, n = 0;
  for (int i = 0; i < (int)str.size(); ++i) {
    if(str[i] == 'u') {
      if(n)
        ans = ((ans % MOD) * (fib[n] % MOD)) % MOD;
      n = 0;
      ++u;
    } else if(str[i] == 'n') {
      if(u)
        ans = ((ans % MOD) * (fib[u] % MOD)) % MOD;
      u = 0;
      ++n;
    } else {
      if(u)
        ans = ((ans % MOD) * (fib[u] % MOD)) % MOD;
      if(n)
        ans = ((ans % MOD) * (fib[n] % MOD)) % MOD;
      u = 0;
      n = 0;
    }
  }
  if(u)
    ans = ((ans % MOD) * (fib[u] % MOD)) % MOD;
  if(n)
    ans = ((ans % MOD) * (fib[n] % MOD)) % MOD;
  ans %= MOD;
  cout << ans % MOD;
  return 0;
}
