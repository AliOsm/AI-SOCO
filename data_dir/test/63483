#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <stdio.h>
#include <vector>
#include <string>
#include <memory.h>
using namespace std;
typedef long long ll;
int pos, neg;
int main(){
	string x, s;
	bool f = 1;
	s += "+";
	while (cin >> x){
		if (x == "=")
			break;
		if (x == "+"){
			++pos;
			s += "+";
		}
		else if (x == "-"){
			++neg;
			s += "-";
		}
	}
	++pos;
	int n;
	cin >> n;
	vector<int>po, ne;
	int P = pos, N = neg;
	int cur = 0;
	po.push_back(1);
	for (int i = 0; i < N; ++i)
		ne.push_back(1);
	--P;
	cur = -N - (n - 1);
	for (int i = 0; i < P; ++i)
		po.push_back(1);
	cur += P;
	for (int i = 0; i < ne.size() && cur > 0; ++i){
		int m = min(cur, n - ne[i]);
		cur -= m;
		ne[i] += m;
	}
	for (int i = 0; i < po.size() && cur < 0; ++i){
		int m = min(-cur, n - po[i]);
		cur += m;
		po[i] += m;
	}
	if (cur != 0){
		puts("Impossible");
		return 0;
	}
	puts("Possible");
	for (int i = 0, p1 = 0, p2 = 0; i < s.size(); ++i){
		if (i)
			cout << s[i] << " ";
		if (s[i] == '+')
			cout << po[p1++] << " ";
		else cout << ne[p2++] << " ";
	}
	cout << "= " << n << endl;
}