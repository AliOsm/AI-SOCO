#include<bits/stdc++.h>
using namespace std;

#ifdef WIN32
	#define lld "%I64d"
	#define llu "%I64u"
#else
	#define lld "%lld"
	#define llu "%llu"
#endif

typedef unsigned int uint;
typedef long long LL;
typedef unsigned long long ULL;
typedef double dbl;
typedef long double LD;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define pb push_back
#define mp make_pair
#define fst first
#define snd second

#define forn(i,n) for(int i=0;i<(n);++i)
#define fornr(i,n) for(int i=(n)-1;i>=0;--i)
#define forab(i,a,b) for(int i=(a);i<(b);++i)
#define forba(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define forit(i,A) for(__typeof((A).begin()) i=(A).begin();i!=(A).end();++i)
#define all(A) (A).begin(),(A).end()

const int MAX = 55;
bool b[MAX];
int z[MAX];
char s[1000];

inline void print(int x){
	if(x < 26)
		putchar('A'), putchar(x + 'a');
	else
		putchar('B'), putchar(x - 26 + 'a');
	putchar(' ');
}

int main(){
#ifdef LOCAL
	assert(freopen("test.in","r",stdin));
	assert(freopen("test.out","w",stdout));
#endif

	int N, K;
	scanf("%d%d", &N, &K);
	forn(i, N - K + 1){
		scanf("%s", s);
		b[i] = (s[0] == 'Y');
	}
	int cnt = 0;
	forn(i, N)
		if(i < K - 1)
			z[i] = cnt++;
		else if(b[i - (K - 1)])
			z[i] = cnt++;
		else
			z[i] = z[i - (K - 1)];
			
	forn(i, N)
		print(z[i]);
	puts("");

	return 0;
}
