#include<bits/stdc++.h>
using namespace std;

vector<int> v[1000000];
vector<int> order;
int x,n,y;

void dfs(int x,int p,int y)
{
    if(v[x].size()==1)
    {
        ///cout<<x<<' '<<p<<' '<<y<<endl;
        order.push_back(y);
        return;
    }
    for(int i=0;i<v[x].size();i++)
    {
        int to=v[x][i];
        if(to==p)continue;
        dfs(to,x,y+1);
    }
}

int solve(int x)
{
    order.clear();
    if(v[x].size()==1)return 1;
    for(int i=0;i<v[x].size();i++)
    {
        int to=v[x][i];
        if(to>1)dfs(to,x,1);
    }
    sort(order.begin(),order.end());
    int cur=order[0];
    ///for(int i=0;i<order.size();i++)cout<<order[i]<<' ';cout<<endl<<endl;
    for(int i=0;i<order.size();i++)
    {
        if(order[i]<cur)order[i]=cur;
        cur=order[i]+1;
    }
    return cur;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin>>n;
    for(int i=1;i<n;i++)
    {
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    int ans=0;
    for(int i=0;i<v[1].size();i++)
    {
        ans=max(ans,solve(v[1][i]));
    }
    cout<<ans<<"\n";
}
