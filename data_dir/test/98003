#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int sz = 1e5 + 10;
vector < int > G[sz];
char ans[sz];
int tr[sz], fl[sz];

void dfs( int u, int p ) {
    tr[u] = 1;
    for( int v: G[u] ) {
        if( v != p && !fl[v] ) {
            dfs( v, u );
            tr[u] += tr[v];
        }
    }
}

int centroid( int u ) {
    dfs( u, -1 );
    int ret = u;
    int found = 0, par = -1;
    while( 1 ) {
        found = 0;
        for( int v: G[ret] ) {
            if( !fl[v] && v != par && tr[v] >= ( tr[u] + 1 ) / 2 ) {
                found = 1;
                par = ret;
                ret = v;
                break;
            }
        }
        if( !found ) break;
    }
    return ret;
}

void rec( int u, char a ) {
    u = centroid( u );
    fl[u] = 1;
    ans[u] = a;
    for( int v: G[u] ) {
        if( !fl[v] ) rec( v, a + 1 );
    }
    return;
}

int main() {
    #ifdef CLown1331
        freopen( "in.txt", "r", stdin );
    #endif // CLown1331
    int n, u, v;
    while( cin >> n ) {
        for( int i=0; i<=n; i++ ) {
            G[i].clear();
            fl[i] = 0;
            tr[i] = 0;
        }
        for( int i=1; i<n; i++ ) {
            cin >> u >> v;
            G[u].push_back( v );
            G[v].push_back( u );
        }
        rec( 1, 'A' );
        for( int i=1; i<=n; i++ ) cout << ans[i] << " \n"[ i==n ];
    }
    return 0;
}
