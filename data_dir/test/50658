/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;

#define int long long
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)

const int N = 1e3+5;
int arr[N];

class BLostArray {
public:
	int n;

	bool ok(int k){
		vector<int> x(k);
		f(i, k) x[i] = arr[i+1] - arr[i];
		rep(i, k, n - 1) if(arr[i+1] - arr[i] != x[i%k]) return false;
		return true;
	}

	void solve(std::istream& in, std::ostream& out) {
		in >> n;
		arr[0] = 0;
		rep(i, 1, n) in >> arr[i];
		vector<int> res;
		rep(len, 1, n){
			if(ok(len)) res.emplace_back(len);
		}
		out << res.size() << '\n';
		for(int x: res) out << x << ' ';
	}
};


int32_t main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	BLostArray solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
