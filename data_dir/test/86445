//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
map< pii,ll>map1,map2;
ll dis[2][100005],visit[100005];
ll pre[100005];
vector <vi > adj(100005),weit(100005),vec(100005);
set< pair< ll,int> >s;
set< pair< ll,int> >::iterator it;
ll dist[100005];
int main(){
	std::ios::sync_with_stdio(false);
	ll n,m,k,u,v,x,c=0,q,i,j;
	ll p;
	cin>>n>>m>>k;
	ll val=inf;
	val*=inf;
	rep(i,n+1)
	{
		dis[1][i]=val;
	}
	rep(i,m)
	{
		cin>>u>>v>>x;
		if(u==1||v==1)
			dis[1][max(u,v)]=min(dis[1][max(u,v)],(ll)x);
		adj[u].pb(v);
		weit[u].pb(x);
		adj[v].pb(u);
		weit[v].pb(x);
	}
	rep(i,k)
	{
		cin>>u>>x;
		if(map2[mp(1,u)]!=0){
			map2[mp(1,u)]=min(map2[mp(1,u)],x);
			c++;
		}
		else
			map2[mp(1,u)]=x;
		adj[u].pb(1);
		adj[1].pb(u);
		weit[u].pb(x);
		weit[1].pb(x);
	}
	
	rep(i,n+1){
		dist[i]=val;
		pre[i]=-1;
	}
	dist[1]=0;
	f(i,1,n+1)
	{
		s.insert(mp(dist[i],i));
	}
	while(!s.empty())
	{
		it=s.begin();
		p=it->ff;
		q=it->ss;
		rep(i,adj[q].size())
		{
			if(dist[q]+weit[q][i]<dist[adj[q][i]])
			{
				s.erase(mp(dist[adj[q][i]],adj[q][i]));
				dist[adj[q][i]]=dist[q]+weit[q][i];
				s.insert(mp(dist[adj[q][i]],adj[q][i]));
			}
		}
		s.erase(it);
	}
	f(i,1,n+1)
	{
		rep(j,adj[i].size())
		{
			if(dist[i]+weit[i][j]==dist[adj[i][j]]){
				vec[adj[i][j]].pb(i);
			}
		}
	}
	f(i,2,n+1)
		sort(vec[i].begin(),vec[i].end());
	f(i,2,n+1)
	{
		if(vec[i].size()!=0&&vec[i][vec[i].size()-1]==1&&map2[mp(1,i)]<dis[1][i])
		{
			visit[i]=1;
		}	
	}
	f(i,2,n+1)
	{
		if(visit[i]==0&&map2[mp(1,i)]!=0)
			c++;
	}
	cout<<c<<endl;

} 
