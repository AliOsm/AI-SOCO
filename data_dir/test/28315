#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef vector<ll> vl ;

#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).rbegin(),(v).rend()

const int MOD = 1000000007;
const int N = 1000005;
const double PI =4*atan(1);

ll m,x,y,n,p,k;
vl adj[N];
ll a[N];
bool par[N];
bool vis[1005][1005];
bool taken[1005];
set<ll> ss;
vl vv;
ll dist[N];

void dfs(ll src){
    taken[src]=1;
    for(auto t:adj[src]){
        dfs(t);
        dist[src]=1+dist[t];
    }
}

void solve(ll pos, ll ind){
    if(ind>=k)return ;
    if( vis[pos][ind])return ;
    vis[pos][ind]=1;
    ss.insert(pos+y);
    ss.insert(pos+y+vv[ind]);
    solve(pos+vv[ind],ind+1);
    solve(pos,ind+1);
}



int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    cin >> n >> x;
    x--;
    for(int i=0;i<n;i++){
        cin >> a[i];
        if(a[i]==0)continue;
        par[a[i]-1]=1;
        adj[i].pb(a[i]-1);
    }
    for(int i=0;i<n;i++){
        if(par[i]==0){
            bool cond=taken[x];
            dfs(i);
            if(cond==taken[x]){
                vv.pb(dist[i]+1);
            }
        }

    }
    y=dist[x]+1;
    //cout << y << endl;
    k=vv.size();
    //cout <<k << endl;
    ss.insert(y);
    solve(0,0);
    for(auto t: ss){
        cout <<t<<"\n";
    }
    return 0;
}
