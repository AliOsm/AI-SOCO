#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#define N 100020
#define M 30
using namespace std;

int n;
char s[N];
int t[M][N];

inline int lowbit(const int x)
{
    return x & -x;
}

inline void update(const int x, const int p, const int v)
{
    int i;

    for(i = p; i <= n; i += lowbit(i))
        t[x][i] += v;

    return;
}

inline int query(const int x, const int p)
{
    int i;
    int o;

    for(i = p, o = 0; i; i -= lowbit(i))
        o += t[x][i];

    return o;
}

int main(void)
{
    int q;
    int i;
    int p, pos, l, r;
    char c[2];
    int o;

    scanf("%s", s + 1);
    for(i = 1, n = strlen(s + 1); i <= n; i ++)
        update(s[i] - 'a', i, 1);
    scanf("%d", &q);
    while(q --)
    {
        scanf("%d", &p);
        if(p == 1)
        {
            scanf("%d %s", &pos, c);
            update(s[pos] - 'a', pos, -1);
            update((s[pos] = c[0]) - 'a', pos, 1);
        }
        if(p == 2)
        {
            scanf("%d %d", &l, &r);
            for(i = o = 0; i < 26; i ++)
                o += query(i, l - 1) < query(i, r);
            printf("%d\n", o);
        }
    }

    return 0;
}