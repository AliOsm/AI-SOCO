#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
using namespace std;    
const int N = int(2e5) + 10, mod = int(1e9)  + 7;

int a[N],b[N],n;
int c[2*N],cn;

ll x[N],y[N];
int l[N],r[N];
int mx[4*N],my[4*N];

void build(){
	for(int i = n; i < n + n; i++){
		mx[i] = a[i - n + 1];
		my[i] = b[i - n + 1];
	}
	for(int i = n - 1; i > 0; i--){
		mx[i] = max(mx[i*2],mx[i*2+1]);
		my[i] = min(my[i*2],my[i*2+1]);
	}
}

pair <int,int> get(int l,int r){
	int x = -mod,y = mod;
	l += n - 1;
	r += n - 1;
	while(l <= r){
		if(l & 1){
			x = max(x,mx[l]);
			y = min(y,my[l]);
		}
		if(!(r & 1)){
			x = max(x,mx[r]);
			y = min(y,my[r]);
		}
		l = (l + 1) / 2;
		r = (r - 1) / 2;
	}
	return mp(x,y);
}


int main () {
	scanf("%d",&n);
	for(int i = 1; i <= n; i++) scanf("%d",&a[i]);
	for(int i = 1; i <= n; i++){
		scanf("%d",&b[i]);
	}
	build();
	ll ans = 0;
	for(int i = 1; i <= n; i++){
		int l = i - 1,r = n + 1;
		pair <int,int> p;
		while(r - l > 1){
			int mid = (r + l) / 2;
			p = get(i,mid);
			if(p.f > p.s) r = mid;
			else l = mid;
		}
		int lx = i - 1,rx = r;
		while(rx - lx > 1){
			int mid = (rx + lx) / 2;
			p = get(i,mid);
			if(p.s > p.f) lx = mid;
			else rx = mid;
		}
		ans += max(r - lx - 1,0);
	}
	cout << ans;
return 0;
}