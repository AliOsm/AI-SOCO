#include <bits/stdc++.h>
using namespace std;

const int MAXN=5e3+5;

int N, M, K, L, R, Z;
int X[MAXN];
int Y[MAXN];
int S[MAXN];
int C[MAXN];
bool B[MAXN];
vector <int> V[MAXN];
vector <int> W[MAXN];

void dfsa(int now) {
	if (B[now]) {
		return;
	}
	
	B[now]=1;
	
	for (int next : V[now]) {
		dfsa(next);
	}
	
	Z++;
	S[Z]=now;
	return;
}

void dfsb(int now) {
	if (!B[now]) {
		return;
	}
	
	B[now]=0;
	C[now]=L;
	
	for (int next : W[now]) {
		dfsb(next);
	}
	
	return;
}

int main () {
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	
	cin>>N>>M>>K;
	
	for (int i=1;i<=M;i++) {
		cin>>X[i]>>Y[i];
		V[X[i]].push_back(Y[i]);
		W[Y[i]].push_back(X[i]);
	}
	
	for (int i=1;i<=N;i++) {
		if (!B[i]) {
			dfsa(i);
		}
	}
	
	for (int i=N;i>=1;i--) {
		if (B[S[i]]) {
			L++;
			dfsb(S[i]);
		}
	}
	
	for (int i=1;i<=M;i++) {
		if (C[X[i]]!=C[Y[i]]) {
			B[C[Y[i]]]=1;
		}
	}
	
	for (int i=1;i<=L;i++) {
		if (!B[i]&&C[K]!=i) {
			R++;
		}
	}
	
	cout<<R<<'\n';
	return 0;
}
