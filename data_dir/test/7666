#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define int long long
int n,k;
int arr[100005];
pair<int,int> tree[2000005];
map<int,int>mp;
pair<int,int> query(int i,int l,int r,int l1,int r1)
{
	if(l1<=l&&r<=r1)
		return tree[i];
	if(r1<l || l1>r)
		return {-1e18,0};
	int mid=(l+r)/2;
	pair<int,int> a=query(i*2,l,mid,l1,r1);
	pair<int,int> b=query(i*2+1,mid+1,r,l1,r1);
	if(a.first>=b.first)
		return a;
	return b;
}
pair<int,int> update(int i,int l,int r,int pos,int val,int ind)
{
	if(l==r)
		return tree[i]={val,ind};
	int mid=(l+r)/2;
	if(pos<=mid)
	{
		pair<int,int> a=update(i*2,l,mid,pos,val,ind);
		if(tree[i].first<a.first)
			tree[i]=a;
	}
	else
	{
		pair<int,int> b=update(i*2+1,mid+1,r,pos,val,ind);
		if(tree[i].first<b.first)
			tree[i]=b;
	}
	return tree[i];
}
int32_t main()
{
	IOS;
	cin>>n>>k;
	set<int> hs;
	for(int i=0;i<2000005;i++)
		tree[i]={-1e18,0};
	for(int i=1;i<=n;i++)
	{
		cin>>arr[i];
		hs.insert(arr[i]);hs.insert(arr[i]-k);hs.insert(arr[i]+k);
	}
	int ct=0;
	for(int i:hs)
		mp[i]=++ct;
	pair<int,int> mark[n+1]={};
	int maxi=0;int pos=0;
	for(int i=1;i<=n;i++)
	{
		pair<int,int> val1=query(1,1,ct,1,mp[arr[i]-k]);
		pair<int,int> val2=query(1,1,ct,mp[arr[i]+k],ct);
		if(val1.first>val2.first)
			mark[i]=val1;
		else
			mark[i]=val2;

		mark[i].first=mark[i].first+1;
		if(mark[i].first<0)
			mark[i]={1,0};
		update(1,1,ct,mp[arr[i]],mark[i].first,i);
		if(maxi<mark[i].first)
		{
			maxi=mark[i].first;
			pos=i;
		}
	}
	cout<<maxi<<endl;
	vector<int> v;
	while(maxi--)
	{
		v.push_back(pos);
		pos=mark[pos].second;
	}
	reverse(v.begin(),v.end());
	for(int i:v)
		cout<<i<<" ";
}