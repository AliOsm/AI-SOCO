#include "bits/stdc++.h"

using namespace std;

#define debug(args...) fprintf(stderr, args)

#define FOR(i, a, b) for(int i = a; i <= b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)

#define pb push_back
#define sz(x) (int)(x).size()
#define all(x) x.begin(), x.end()

typedef long long ll;
typedef pair<int, int> pii;

const int maxn = 5e5 + 10;

int n, a[maxn];

int q;

int seg[4 * maxn];

void update(int idx, int i, int j, int pos, int val) {
	if(i == j) {
		seg[idx] = val;
		return;
	}

	int mid = (i + j) >> 1;
	int left = idx << 1;
	int right = left | 1;

	if(pos <= mid) update(left, i, mid, pos, val);
	else update(right, mid + 1, j, pos, val);

	seg[idx] = __gcd(seg[left], seg[right]);
}

bool ok;
int cnt = 0;

void query(int idx, int i, int j, int l, int r, int x, int in) {
	if(i > j || j < l || r < i) return;

	int mid = (i + j) >> 1;
	int left = idx << 1;
	int right = left | 1;

	if(l <= i && j <= r) {
		if(!in) {
			if(seg[idx] % x == 0) return;

			if(cnt || !ok) {
				ok = false;
				return;
			}

			++cnt;

			if(i == j) return;

			if((seg[left] % x) && (seg[right] % x)) {
				ok = false;
				return;
			}

			if(seg[left] % x)
				query(left, i, mid, l, r, x, 1);
			else 
				query(right, mid + 1, j, l, r, x, 1);
		}
		else 
			if(i != j) {
				if((seg[left] % x) && (seg[right] % x)) {
					ok = false;
					return;
				}

				if(seg[left] % x)
					query(left, i, mid, l, r, x, 1);
				else 
					query(right, mid + 1, j, l, r, x, 1);
			}

		return;
	}

	query(left, i, mid, l, r, x, in);
	query(right, mid + 1, j, l, r, x, in);
}

int main() {
	scanf("%d", &n);

	FOR(i, 1, n) {
		scanf("%d", &a[i]);
		update(1, 1, n, i, a[i]);
	}

	scanf("%d", &q);

	while(q--) {
		int type;

		scanf("%d", &type);

		if(type == 1) {
			int l, r, x;

			scanf("%d %d %d", &l, &r, &x);

			ok = true;
			cnt = 0;

			query(1, 1, n, l, r, x, 0);

			if(ok) printf("YES\n");
			else printf("NO\n");
		}	
		else {
			int i, y;

			scanf("%d %d", &i, &y);

			a[i] = y;
			update(1, 1, n, i, y);
		}
	}

	return 0;
}
