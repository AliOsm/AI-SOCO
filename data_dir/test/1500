#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef int mt;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000000007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const mt MOD = 1000000007ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;

#define N 100011
#define K 6
#define P 3
#define M (10101)

mt n, k;
char s[N];
mt u[256];
char f = 'z';
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d %d", &n, &k);
	scanf("%s", s);
	rep(0, n, i)
		u[s[i]] = true, f = min(f, s[i]);
	rep(1, 256, i)
		u[i] += u[i - 1];
	rep(n, k-1, i) s[i] = f;
	s[k] = 0;
	repde(k - 1, 0, i) {
		if (u[s[i]] == u[255]) s[i] = f;
		else {
			mt j = u[s[i]];
			while (u[s[i]] == j) ++s[i];
			break;
		}
	}
	puts(s);


	return 0;
}