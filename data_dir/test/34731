#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define u unsigned
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);
#define ones __builtin_popcount() 
#define pii pair<int,int>
#define pll pair<long long,long long>
const long double eps=0.00000001;
const long long MOD=1e9+7;
using namespace std;
ll res1,res2;
bool b1,b2;
string s;
main()
{
	FX iOS
	int i,j,n,k;
	cin>>n>>k;
	int a[n];
	for(i=0;i<n;++i)cin>>a[i];
	vector<int>ve[5];
	for(i=0;i<n;++i)
	{
		char c;
		cin>>c;
		if(c=='O')ve[0].pb(a[i]);
		else if(c=='W')ve[1].pb(a[i]);
		else ve[2].pb(a[i]);
	}
	for(i=0;i<3;++i)sort(ve[i].begin(),ve[i].end(),greater<int>());
	if(k<2||!ve[0].size())return cout<<-1,0;
	if((int)ve[0].size()+(int)ve[1].size()>=k&&ve[1].size())
	{
		b1=true;
	int ii=1,jj=1;
	res1+=ve[0][0];
	res1+=ve[1][0];
	int cnt1=2;
	while(cnt1<k)
		{
			if(ii<(int)ve[0].size())
			{
				if(jj<(int)ve[1].size())
				{
					if(ve[0][ii]>=ve[1][jj])res1+=ve[0][ii],++ii;
					else res1+=ve[1][jj],++jj;
				}
				else res1+=ve[0][ii],++ii;
			}
			else res1+=ve[1][jj],++jj;
			cnt1++;
		}	
	}
	if((int)ve[0].size()+(int)ve[2].size()>=k&&ve[2].size())
	{
	b2=true;
	int ii=1,jj=1;
	res2+=ve[0][0];
	res2+=ve[2][0];
	int cnt2=2;
	while(cnt2<k)
		{
			if(ii<(int)ve[0].size())
			{
				if(jj<(int)ve[2].size())
				{
					if(ve[0][ii]>=ve[2][jj])res2+=ve[0][ii],++ii;
					else res2+=ve[2][jj],++jj;
				}
				else res2+=ve[0][ii],++ii;
			}
			else res2+=ve[2][jj],++jj;
			cnt2++;
		}	
	}
	if(b1&&b2)cout<<max(res1,res2);
	else if(b1)cout<<res1;
	else if(b2)cout<<res2;
	else cout<<-1;
}