#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1 << 28;
//constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

void solve(int b, int w, int offset) {
	vector<int> x, y;
	for (int i = 0; w > 0; i++) {
		x.push_back(2);
		y.push_back(2 + i);
		if (i % 2 == 0) w--;
		else b--;
		if (w == 0 && b > 0) {
			x.push_back(2);
			y.push_back(2 + i + 1);
			b--;
		}
	}
	int sz = y.size();
	//cout << b << endl;
	for (int i = 0; i < sz && b > 0; i += 2) {
		b--;
		x.push_back(1);
		y.push_back(y[i]);
		if (b == 0) break;
		b--;
		x.push_back(3);
		y.push_back(y[i]);
	}
	if (b > 0) {
		b--;
		x.push_back(2);
		y.push_back(1);
	}
	if (b > 0) puts("NO");
	else {
		puts("YES");
		for (int i = 0; i < x.size(); i++) {
			printf("%d %d\n", x[i] + offset, y[i]);
		}
	}
}

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/
	int kkt; scanf("%d", &kkt);
	while (kkt--) {
		int b, w;
		scanf("%d %d", &b, &w);
		if (b < w) {
			solve(w, b, 1);
		}
		else {
			solve(b, w, 0);
		}
	}
	return 0;

}
