#pragma comment(linker, "/stack:640000000")

#include<bits/stdc++.h>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
#define ll long long int
#define scanl(a) scanf("%lld",&a)
#define scanii(a,b) scanf("%d%d",&a,&b)
#define scaniii(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scanll(a,b) scanf("%lld%lld",&a,&b)
#define scanlll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scani(a) scanf("%d",&a)
#define clr(a) memset(a,0,sizeof(a))
#define clr_(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define pii pair<int,int>
#define sqr(a) a*a
#define eps 1e-9
#define inf INT_MAX
#define pi acos(-1.0)
#define ff first
#define ss second
#define INF 1e18
#define endl '\n'
#define vsort(v) sort(v.begin(),v.end())
#define all(v) v.begin(),v.end()
#ifdef shaft
     #define debug(args...) {cerr<<"Debug: "; dbg,args; cerr<<endl;}
#else
    #define debug(args...)  // Just strip off all debug tokens
#endif

struct debugger{
    template<typename T> debugger& operator , (const T& v){
        cerr<<v<<" ";
        return *this;
    }
}dbg;
char in[110][110];
int main()
{
     ///ios_base::sync_with_stdio(0);
     ///cin.tie(0);
    #ifdef shaft
        freopen("in.txt","r",stdin);
        ///freopen("out.txt","w",stdout);
    #endif ///shaft
    int n,m;
    while(cin>>n>>m)
    {
        int leftC=m+1,rightC=0,upR=n+1,downR=0,flag=0;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                cin>>in[i][j];
                if(in[i][j]=='B'){
                    flag=1;
                    leftC=min(leftC,j);
                    rightC=max(rightC,j);
                    upR=min(upR,i);
                    downR=max(downR,i);
                }
            }
        }
        if(!flag){
            cout<<1<<endl;return 0;
        }
        int ans=0;
        for(int i=upR;i<=downR;i++)
        {
            for(int j=leftC;j<=rightC;j++)
            {
                debug(in[i][j])
                if(in[i][j]=='W')ans++;
            }
        }
        debug(ans)
        int l=rightC-leftC+1,w=downR-upR+1;
        debug(l,w)
        if(l==w)cout<<ans<<endl;
        else if(l>w){
            if(n>=l)cout<<ans+(l-w)*l<<endl;
            else cout<<-1<<endl;
        }
        else{
            if(m>=w){
                cout<<ans+(w-l)*w<<endl;
            }
            else cout<<-1<<endl;
        }
    }
    return 0;
}

