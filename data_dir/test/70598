#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <set>
#define N 520
#define M 520
using namespace std;

int a[N][M], o[N];
multiset<int> s;

int main(void)
{
    int n, m, q;
    int i, j, k;
    int x, y;
    multiset<int>::iterator p;

    scanf("%d %d %d", &n, &m, &q);
    for(i = 1; i <= n; i ++)
    {
        for(j = 1, k = 0; j <= m; j ++)
        {
            scanf("%d", &a[i][j]);
            if(a[i][j])
                ++ k;
            else
            {
                o[i] = max(o[i], k);
                k = 0;
            }
        }
        s.insert(o[i] = max(o[i], k));
    }

    for(i = 0; i < q; i ++)
    {
        scanf("%d %d", &x, &y);
        a[x][y] ^= 1;
        s.erase(s.lower_bound(o[x]));
        for(j = 1, k = o[x] = 0; j <= m; j ++)
            if(a[x][j])
                ++ k;
            else
            {
                o[x] = max(o[x], k);
                k = 0;
            }
        s.insert(o[x] = max(o[x], k));

        p = s.end();
        -- p;
        printf("%d\n", *p);
    }

    return 0;
}