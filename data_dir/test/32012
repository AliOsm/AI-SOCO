#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <deque>
#include <assert.h>
#include <ctime>
#include <bitset>
#include <numeric>
#include <complex>
using namespace std;

#define double long double
#define FOREACH(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
#define FORE(i, a, n) for (i = (a); i < (int)(n); ++i)
#define Size(n) ((int)(n).size())
#define all(n) (n).begin(), (n).end()
#define ll long long
#define pb push_back
#define error(x) cout << #x << " = " << x << endl;
#define ull unsigned long long
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pdd pair<double, double>
#define point complex<double>
//#define X real()
//#define Y imag()
#define X first
#define Y second
#define EPS 1e-9
//#define endl "\n"
#define pdd pair<double, double>
bool gt(double a, double b) { return a > b+EPS; }

string a, b;
int fa[26], fb[26];

int main() {
	ios::sync_with_stdio(false);
	cin >> a >> b;
	for (int same = min(Size(a), Size(b)); same >= 0; same--) {
		memset(fa, 0, sizeof fa);
		memset(fb, 0, sizeof fb);
		FOR(i, 0, same) fb[b[i]-'a']++;
		FOR(i, 0, Size(a)) fa[a[i]-'a']++;
		bool ok = true;
		FOR(i, 0, 26) if (fa[i] < fb[i]) ok = false; else fa[i] -= fb[i];
		if (!ok) continue;
		string tmp = b.substr(0, same);
		FOR(i, 0, 26) if (i+'a' > b[same] && fa[i] > 0) {
			fa[i]--;
			tmp += char(i+'a');
			break;
		}
		FOR(i, 0, 26) while (fa[i]--) tmp += char(i+'a');
		if (tmp > b) {
			cout << tmp << endl;
			return 0;
		}
	}
	cout << -1 << endl;
	return 0;
}

