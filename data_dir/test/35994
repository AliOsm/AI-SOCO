#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define pi 3.1415926536
ll min(ll a,ll b)
{ if(a>b) return b;
return a;
}
ll max(ll a,ll b)
{ if(a>b) return a;
return b;
}
int isprime(ll n)
{ if(n==2) return 1;
    if(n<2||n%2==0) return 0;
       for(int i=3;i*i<=n;i+=2) if(n%i==0) return 0;
    return 1;
}
ll power(ll a,ll b,ll mod)
{ ll res=1;
    while(b)
    {  if(b&1) {res=res*a;res%=mod;}
        a=a*a;a%=mod;
        b=b>>1;
    }
    return res%mod;
    
}
void bfs(ll level[],vector <int> adj[],ll n,ll visited[])
{ queue <int> q;
    q.push(1);
    visited[1]=1;
    level[1]=1;
    while(!q.empty())
    { int p=q.front();
        q.pop();
        for(int i=0;i<adj[p].size();i++)
        {  
           if(visited[adj[p][i]]==0)
           {   level[adj[p][i]]=level[p]+1; 
               q.push(adj[p][i]);
               visited[adj[p][i]]=1;
           }
            
        }
        
    }
} 
void dfs(ll x,vector <int> adj[],ll visited[])
{   
    stack <int> s;
    s.push(x);
    visited[x]=1;
          int p=s.top();
            for(int i=0;i<adj[p].size();i++)
        {     if(visited[adj[p][i]]==0)
                 dfs(adj[p][i],adj,visited);
           
        }
    s.pop();
}
ll gcd(ll a,ll b)
{ if(a==0) return b;
    return gcd(b%a,a);
}
int main()
{  
       ll n;
       cin>>n;
       ll a[n];
       for(int i=0;i<n;i++) cin>>a[i];
       sort(a,a+n);
       for(int i=n-1;i>=0;i--)
       { ll temp=sqrt(a[i]);
           if(temp*temp!=a[i]) {cout<<a[i];return 0;}
       }
       
    return 0;
}
