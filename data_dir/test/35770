#include <bits/stdc++.h>

using namespace std;
int deg[200005];
int color[200005];
struct node{
    int idx;
    int no;
};
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    vector<int>graph[n + 1];
    for(int i = 1;i < n;i++){
        int x , y;
        cin >> x >> y;
        graph[x].push_back(y);
        graph[y].push_back(x);
        deg[x]++;
        deg[y]++;
    }
    for(int i = 1;i <= n;i++)
        color[i] = -1;
    int k = 0;
    for(int i = 1;i <= n;i++)
        k = max(k, deg[i] + 1);
    cout << k << '\n';
    color[1] = 1;
    queue<node>q;
    q.push(node{1,0});
    while(!q.empty()){
        node a = q.front();
        q.pop();
        unordered_set<int>used;
        int val = 1;
        used.insert(color[a.idx]);
        used.insert(a.no);
        for(auto var : graph[a.idx]){
            //cout << var << "\n";
            if(color[var] > 0)continue;
            while(used.find(val) != used.end()){
                ++val;
            if(val > k) val -= k;
            }
            color[var] = val;
            used.insert(val);
            //cout << a.idx << " " << a.no << " " << var << " " << val << "\n";
            q.push(node{var,color[a.idx]});
        }
    }
    for(int i = 1;i <= n;i++)
        cout << color[i] << " ";
}
