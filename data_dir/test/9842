#include <bits/stdc++.h>
using namespace std;

const int M = 998244353;

signed main() {
  ios::sync_with_stdio(false);

  int N;
  cin >> N;

  vector<int> fact(N + 1);
  for (int i = fact[0] = 1; i <= N; ++i) {
    fact[i] = 1LL * fact[i - 1] * i % M;
  }

  auto powmod = [&](int n, int64_t p) {
    int r = 1;
    for (int64_t i = p; i; i >>= 1) {
      if (i & 1LL) r = 1LL * r * n % M;
      n = 1LL * n * n % M;
    }
    return r;
  };

  auto choose = [&](int n, int m) {
    return 1LL * fact[n] * powmod(fact[m], M - 2) % M * powmod(fact[n - m], M - 2) % M;
  };

  int ans = 0;
  
  for (int i = 1; i <= N; ++i) {
    (ans += 2LL * choose(N, i) * (i & 1 ? 1 : -1) * powmod(3, 1LL * N * (N - i) + i) % M) %= M;
  }

  for (int i = 0; i < N; ++i) {
    int t = powmod(1 - powmod(3, i), N) - powmod(-powmod(3, i), N);
    (ans += 3LL * choose(N, i) * (i & 1 ? 1 : -1) * t % M) %= M;
  }

  if (ans < 0) ans += M;
  cout << ans << endl;

  return 0;
}
