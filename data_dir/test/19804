#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <cstdlib>
#include <cassert>
#include <cmath>
#include <string>
#include <queue>
#include <stack>
#include <iomanip>
#include <set>
#include <deque>
#include <fstream>

using namespace std;

#define forn(i,n) for (int i = int(0); i < int(n); i++)
#define forb(i,n) for (int i = int(n-1); i >= int(0); i--)
#define for1(i,n) for (int i = int(1); i <= int(n); i++)
#define fore(i,a,n) for (int i = int(a); i < int(n); i++)

#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sz size()
#define sqr(x) ((x)*(x))
#define cube(x) ((x)*(x)*(x))
#define all(x) x.begin(), x.end()
  
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
  
const int base = 1e9;
const int maxn = 2005;
const int MAXN = 1000;
const int logn = 20;
const int inf = 2e9;
const int alpha = 26;
const int my_hash = 31;
const long long my_mod = 2674894331;
const long long l_inf = 4e18;
const long long mod = 1e9+7;
const double pi = acos(-1.0);
const double eps = 1e-9;

struct omnom {
	int t;
	int h;
	int w;
	omnom(int t, int h, int w) :
	t(t), h(h), w(w) {}
	omnom() {}
};

int n, x, ans = 0;
vector<omnom> a;
vector<char> used;

int main() {
	scanf("%d %d ", &n, &x);
	a = vector<omnom> (n);
	for (int i = 0; i < n; i++)
		scanf("%d %d %d", &a[i].t, &a[i].h, &a[i].w);
	for (int i = 0; i < 2; i++) {
		int t = i, sum = 0, h = x;
		used = vector<char> (n, 0);
		while (true) {
			int mx = 0, pos = -1;
			for (int j = 0; j < n; j++) {
				if (used[j]) continue;
				if (a[j].t == t && a[j].h <= h && a[j].w > mx) {
					mx = a[j].w;
					pos = j;
				}
			}
			if (pos == -1) break;
			sum++;
			h += a[pos].w;
			used[pos] = 1;
			t ^= 1;
		}
		ans = max(ans, sum);
	}
	printf("%d", ans);
}