#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
int inc[100010];
const ll INF = (ll)1e16;
int N , M , K;
vector< pair<pii , int> > ne , be;
vector<pii> fo[100010];
ll sp[100010];
struct compare{
  bool operator()(const int& f , const int& s){
   return mp(sp[f] , f) < mp(sp[s] , s);
                                              }
};
set<int , compare> nal;
void update(int vr , ll val){
  if(val < sp[vr])
   nal.erase(vr),
   sp[vr] = val,
   nal.insert(vr);
}
int main(){
  scanf("%d%d%d" , &N , &M , &K);
  for(int i=0;i<M;++i){
   int f , t , p;
   scanf("%d%d%d" , &f , &t , &p);
   --f , --t;
   fo[f].pb(mp(t , p));
   fo[t].pb(mp(f , p));
   ne.pb(mp(mp(f , t) , p));
                      }
  fill(sp , sp+N , INF);
  sp[0] = 0 , nal.insert(0);
  for(int i=0;i<K;++i){
   int t , p;
   scanf("%d%d" , &t , &p);
   update(t-1 , p);
   be.pb(mp(mp(0 , t-1) , p));
                      }
  while(!nal.empty()){
   int vr = *nal.begin();
   nal.erase(vr);
   for(int i=0;i<sz(fo[vr]);++i)
    update(fo[vr][i].fi , sp[vr] + fo[vr][i].se);
                     }
  for(int i=0;i<sz(ne);++i){
   int f = ne[i].fi.fi , s = ne[i].fi.se;
   int cost = ne[i].se;
   if(sp[f] + cost == sp[s]) inc[s] = 1;
   if(sp[s] + cost == sp[f]) inc[f] = 1;
                           }
  cout<<K - count(inc+1 , inc+N , 0)<<'\n';
  return 0;
}
