#include <bits/stdc++.h>

using namespace std;


//<editor-fold desc="debugger">

template <class X, class Y>
ostream & operator << (ostream & os, const pair <X, Y>& p) {
    return os << "[" << p.first << ", " << p.second << "]" ;
}

template <class Ch, class Tr, class Container>
basic_ostream <Ch, Tr> & operator << (basic_ostream <Ch, Tr> & os, const Container& x) {
    os << "{";
    bool f = 1;
    for (auto&y : x) {
        if (!f) os << ", ";
        else f = 0;
        os << y;
    }
    return os << "}";
}

struct Debug {
#ifndef ONLINE_JUDGE
    template<class T>
    Debug& operator << (const T& x) {
        cerr << x << " , ";
        return *this;
    }
    ~Debug() {cerr << endl;}
#define debug cerr << "Line(" << __LINE__ << ") : " , Debug()
#else
    template<class T>
    Debug& operator << (const T& x) {
        return *this;
    }
    #define debug Debug()
#endif
};

//</editor-fold>

int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    int n;
    cin >> n;

    vector<int> a(n);
    for (auto &x : a)
        cin >> x;

    map<int , long long> ans;

    map<int , int> cur , nxt;
    for (int x : a) {
        nxt.clear();
        for (auto &p : cur)
            nxt[__gcd(p.first , x)] += p.second;

        nxt[x]++;
        swap(nxt , cur);
        for (auto &p : cur)
            ans[p.first] += p.second;
    }

    int q;
    cin >> q;
    while (q--) {
        int x;
        cin >> x;
        cout << ans[x] << '\n';
    }
}