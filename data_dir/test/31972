#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>


template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long MOD = 1'000'000'007LL;
const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;


int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	ll n, m; scanf("%lld %lld", &n, &m);
	vector<ll> a(n); for (ll i = 0; i < n; i++) scanf("%lld", &a[i]);
	sort(a.begin(), a.end());
	ll res = 0;
	set<ll> s;
	priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<>> pq;
	for (ll i = 0; i < n; i++) {
		pq.emplace(1, a[i]);
		s.insert(a[i]);
	}
	vector<ll> ans;
	while (!pq.empty() && ans.size() < m) {
		ll d, x;
		tie(d, x) = pq.top();
		pq.pop();
		bool flag = true;
		if (s.find(x + d) == s.end()) {
			s.insert(x + d);
			res += d;
			ans.push_back(x + d);
			flag = false;
		}
		if (ans.size() == m) break;
		if (s.find(x - d) == s.end()) {
			s.insert(x - d);
			res += d;
			ans.push_back(x - d);
			flag = false;
		}
		if (!flag) {
			pq.emplace(d + 1, x);
		}
	}
	cout << res << "\n";
	for (ll i = 0; i < m; i++) {
		printf("%lld", ans[i]);
		if (i == m - 1) puts("");
		else printf(" ");
	}
	return 0;

}
