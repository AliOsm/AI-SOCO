#include <bits/stdc++.h>
using namespace std;

vector<vector<int>> e;
vector<bool> vis;

int getint()
{
    int c, v = 0;
    while (isdigit(c = getchar()))
        v = 10 * v + c - '0';
    return v;
}

bool bfs(int i)
{
    queue<pair<int, int>> q;
    vis[i] = true, q.push({i, -1});
    bool cycle = false;
    while (!q.empty()) {
        int x = q.front().first, p = q.front().second;
        q.pop();
        for (int y : e[x])
            if (!vis[y])
                vis[y] = true, q.push({y, x});
            else if (y != p)
                cycle = true;
    }
    return cycle;
}

int main()
{
    int n = getint(), m = getint(), v = 0;
    e.resize(n), vis.resize(n);
    for (int i = 0; i < m; i++) {
        int x = getint() - 1, y = getint() - 1;
        e[x].push_back(y), e[y].push_back(x);
    }
    for (int i = 0; i < n; i++)
        if (!vis[i] && !bfs(i))
            v++;
    printf("%d\n", v);
}