#include <bits/stdc++.h>
using namespace std;
#define int long long
#define valid(x,y) ((x)>=0&&(x)<n&&(y)>=0&&(y)<m)
#define debug for(int i=0;i<n;i++) cout<<s[i]<<'\n';cout<<'\n';
pair<int,int> moves[] = {{-1,0},{1,0},{0,-1},{0,1}};
string s[510];
int n,m,k;
void dfs(int x, int y)
{
    k--;
    s[x][y]='X';
    for(auto i:moves)
    {
        if(valid(x+i.first,y+i.second)&&s[x+i.first][y+i.second]=='.'&&k>0)
        {
            // cout<<k<<endl;
            dfs(x+i.first,y+i.second);
        }
    }
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    cin>>n>>m>>k;
    for(int i=0;i<n;i++) 
    {
        cin>>s[i];
        for(int j=0;j<m;j++) if(s[i][j]=='.') k--;
    }
    k=-k;
    queue<pair<int,int> > q;
    bool done = false;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(s[i][j]=='.') 
            {
                dfs(i,j);
                for(int i=0;i<n;i++)
                    for(int j=0;j<m;j++)
                        if(s[i][j]=='.') s[i][j]='X';
                        else if(s[i][j]=='X') s[i][j]='.';
                done = true;
                break;
            }
        }
        if(done) break;
    }
    for(int i=0;i<n;i++) cout<<s[i]<<'\n';
    return 0;
}