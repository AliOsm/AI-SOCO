#include <bits/stdc++.h>
#ifndef M_PI
#define M_PI 3.14159265358979323846264338327
#endif // M_PI
#define endl "\n"
#define S struct
#define X first
#define Y second
#define V vector
#ifndef __linux__
#define LLD "%I64d"
#else
#define LLD "%ll""d"
#endif
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define GET(a, n) for (int __i = 0; __i < (n); ++__i) cin >> a[__i];
#define GETM(a, n, m) for (int __i = 0; __i < (n); ++__i) for (int __j = 0; __j < m; ++__j) cin >> a[__i][__j];
#define PRINTM(a, n, m) for (int __i = 0; __i < (n); ++__i) { for (int __j = 0; __j < m; ++__j) cout << a[__i][__j] << " ";  cout << endl; };
#define PRINT(a, n) for (int __i = 0; __i < (n); ++__i) cout << a[__i] << " ";
#define IT(a) a.begin(), a.end()
#define SQR(x) (x) * (x)
#define CASE(a, s) cout << "Case #" << a << ": " << s << endl;
#define DEB(a) cout << #a << " = " << (a) << endl; cout.flush();
#define DEBA(a) for (auto __i: a) cout << __i << " "; cout << endl; cout.flush();
#define IFDEB(b, a) if (b) { cout << #a << " = " << (a) << endl; cout.flush(); }
#define YESNO(cond) cout << ((cond) ? "Yes" : "No") << endl;
#define UMAX(left, right) left = max(left, right);
#define UMIN(left, right) left = min(left, right);
using namespace std;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair <int, int> PII;
typedef pair <LL, LL> PLL;
const int MOD = 998244353;
void yes() { cout << "Yes" << endl;}
void no() { cout << "No" << endl;}
S Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;
S FAIL { FAIL () { cout << "CHANGE!!!" << endl;}};

LL pow_int(LL x, LL p)
{
    LL res = 1;
    FOR (i, 0, p) {
        res *= x;
    }
    return res;
}

LL sqrt_my(LL value, LL p)
{
    LL res = pow(value, 1.0 / p);
    while (pow_int(res, p) <= value) {
        ++res;
    }
    while (pow_int(res, p) > value) {
        --res;
    }
    if (pow_int(res, p) != value) {
        return -1;
    }
    return res;
}

int main()
{
    int n;
    cin >> n;
    map<LL, LL> cnts;
    map<LL, LL> cnts_double;
    vector<LL> v;
    vector<int> used(n, 1);
    FOR (i, 0, n) {
        LL x;
        cin >> x;
        v.push_back(x);
        LL t = sqrt_my(x, 4);
        if (t != -1) {
            cnts[t] += 4;
            continue;
        }
        t = sqrt_my(x, 3);
        if (t != -1) {
            cnts[t] += 3;
            continue;
        }
        t = sqrt_my(x, 2);
        if (t != -1) {
            cnts[t] += 2;
            continue;
        }
        used[i] = 0;
    }
    LL ans = 1;
    FOR (i, 0, n) { // n = a * b, a, b prime
        if (used[i]) {
            continue;
        }
        bool success_1 = false;
        FOR (j, 0, n) {
            if (j == i) {
                continue;
            }
            LL g = __gcd(v[i], v[j]);
            if (g != 1 && g != v[i]) {
                LL b = v[i] / g;
                ++cnts[g];
                ++cnts[b];
                success_1 = true;
                break;
            }
        }
        if (success_1) {
            continue;
        }

        ++cnts_double[v[i]];
    }
    for (auto elem: cnts) {
        ans *= elem.Y + 1;
        ans %= MOD;
    }
    for (auto elem: cnts_double) {
        FOR (i, 0, 2) {
            ans *= elem.Y + 1;
            ans %= MOD;
        }
    }
    cout << ans << endl;
    cout.flush();
}

