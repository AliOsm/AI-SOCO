#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <cassert>
#include <algorithm>
const bool debug = 0;
typedef long long ll;
int main() {
    ll k; int a, b;
    std::cin >> k >> a >> b;
    int next1[4][4], next2[4][4];
    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            scanf("%d", &next1[i][j]);
        }
    }
    for (int i = 1; i <= 3; ++i) {
        for (int j = 1; j <= 3; ++j) {
            scanf("%d", &next2[i][j]);
        }
    }
    bool flag = false;
    ll sa = 0, sb = 0;
    std::vector<int> seq_a{a}, seq_b{b};
    std::vector<ll> sum_a{0}, sum_b{0};
    while (k > 0) {
        --k;
        ll res1 = sum_a.back();
        ll res2 = sum_b.back();
        if (a == 3 && b == 2) {
            res1++; sa++;
        } else if (a == 2 && b == 1) {
            res1++; sa++;
        } else if (a == 1 && b == 3) {
            res1++; sa++;
        } else if (b == 3 && a == 2) {
            res2++; sb++;
        } else if (b == 2 && a == 1) {
            res2++; sb++;
        } else if (b == 1 && a == 3) {
            res2++; sb++;
        }
        sum_a.push_back(res1);
        sum_b.push_back(res2);
        int next_a = next1[a][b];
        int next_b = next2[a][b];
        a = next_a;
        b = next_b;
        seq_a.push_back(a);
        seq_b.push_back(b);
        if (!flag) {
            int last = (int)seq_a.size()-1;
            int j = last;
            for (int i = 0; i < last; ++i) {
                if (seq_a[i] == a && seq_b[i] == b) {
                    j = i;
                    break;
                }
            }
            if (j < last) {
                ll div = k / (last - j);
                sa += div * (sum_a[last]-sum_a[j]);
                sb += div * (sum_b[last]-sum_b[j]);
                k %= (last-j);
                flag = true;
            }
        }
        if (debug) {
            std::cout << "sa = " << sa << " sb = " << sb << std::endl;
        }
    }
    std::cout << sa << " " << sb;
    return 0;
}