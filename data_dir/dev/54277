#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;

#define endl '\n'
#define ff first
#define ss second
#define int long long
#define pb push_back
#define f(i,l,r) for(ll i=l;i<=r;i++)
#define rf(i,r,l) for(ll i=r;i>=l;i--)
#define Max 5000001
#define inf 2147483647
#define llinf 9223372036854775807
#define all(v) v.begin(),v.end()
#define bp(n) __builtin_popcountll(n)
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)

#define d0(a) cout<<a<<' ';
#define d1(a) cout<<a<<endl;
#define d2(a,b) cout<<a<<' '<<b<<endl;
#define d3(a,b,c) cout<<a<<' '<<b<<' '<<c<<endl;
#define d4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;
#define d5(a,b,c,d,e) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<endl;
#define d6(a,b,c,d,e,f) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<' '<<f<<endl;

const ll N=3e5+5,mod=1e9+7,bit=61;

ll dis[2][N],n,mx=0,m;
vector<pll> adj[N];
multiset<ll,greater<ll>>  ms;

void dfs(ll x,ll u,ll p,ll w)
{
    dis[x][u]=w;
    for(auto v:adj[u])
    {
        if(v.ff==p)
        {
            continue;
        }
        dfs(x,v.ff,u,w+v.ss);
    }
}

bool fun(ll x,ll y)
{
    return (dis[0][x]-dis[1][x]<dis[0][y]-dis[1][y]);
}

void solve()
{
    vector<ll> order;
    f(i,1,n)
    {
        order.pb(i);
        ms.insert(dis[1][i]);
    }
    sort(all(order),fun);
    ll inv[n+1];
    f(i,0,n-1)
    {
        inv[order[i]]=i;
    }
    f(i,0,n-1)
    {
        ll u=order[i];
        ms.erase(ms.find(dis[1][u]));
        for(auto v:adj[u])
        {
            if(inv[v.ff]>i)
            {
                ms.erase(ms.find(dis[1][v.ff]));
            }
        }
        if((int)ms.size()>0)
        {
            mx=max(mx,dis[0][u]+*(ms.begin()));
        }
        for(auto v:adj[u])
        {
            if(inv[v.ff]>i)
            {
                ms.insert(dis[1][v.ff]);
            }
        }
    }
}

signed main()
{
    fast;

    ll t=1;
    //cin>>t;
    while(t--)
    {
        cin>>n>>m;
        f(i,1,n-1)
        {
            ll u,v,w;
            cin>>u>>v>>w;
            adj[u].pb({v,w});
            adj[v].pb({u,w});
        }
        dfs(0,1,0,0);
        dfs(1,n,0,0);
        solve();
        f(i,1,m)
        {
            ll x;
            cin>>x;
            cout<<min(dis[0][n],mx+x)<<endl;
        }
    }
    return 0;
}
















