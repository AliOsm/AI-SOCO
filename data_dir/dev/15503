// copied by Nurstan Duisengaliev
// skatal
#include <bits/stdc++.h>
 
#define ll long long
#define all(x) x.begin(), x.end()
#define in insert
#define mp make_pair
#define F first
#define S second
#define ppf pop_front
#define pb push_back
#define ppb pop_back
#define pf push_front
#define pii pair <int, int>
#define boost() ios_base::sync_with_stdio(0), cin.tie(0)
#define sz(x) x.size()
 
using namespace std;
 
const int N = (int)2e5 + 123;
const int mod = (int)1e9 + 7;
const ll INF = (ll)1e18 + 7;
int ans[N];
int a[N];  
vector <int> v;
set <int> s;
void solve () {
	v.clear ();
	s.clear ();
	int n;
	cin >> n;
	for (int i = 1; i <= n; i ++) {
		ans[i] = 0;
		s.in (i);
	}
	for (int i = 1; i <= n; i ++) cin >> a[i];
	if (a[1] == n) {
		for (int i = n; i >= 1; i --) cout << i << " ";
		cout << endl;
		return;
	}
	if (a[n] != n) {
		cout << -1 << endl;
		return;
	}
	ans[1] = a[1];
	s.erase (a[1]);
	v.pb (1);
	for (int i = 2; i <= n; i ++) {
		if (a[i] != a[i - 1]) {
			s.erase (a[i]);
			ans[i] = a[i];
			v.pb (i);
		}
	}	
	bool check = 1;
	for (int i = 1; i < v.size(); i ++) {
		for (int j = v[i - 1] + 1; j < v[i]; j ++) {
		    int x = *s.begin();
		    s.erase (s.begin());
			if (x < a[v[i - 1]]) {
				ans[j] = x;
			}
			else {
				cout << -1 << endl;
				return;
			}
		}
	}
	for (int i = v.back () + 1; i <= n; i ++) {
		ans[i] = *s.begin();
		s.erase (s.begin());
	}
	int maxi = a[1];
	for (int i = 2; i <= n; i ++) {
		if (ans[i] == 0) {
			cout << -1 << endl;
			return;
		}
		maxi = max (maxi, ans[i]);
		if (maxi != a[i]) {
			cout << -1 << endl;
			return;
		}	
	}
	for (int i = 1; i <= n; i ++) cout << ans[i] << " " ;
	cout << endl;
}
 
main () {
//	freopen (".in", "r", stdin);
//	freopen (".out", "w", stdout);
	boost ();
	int TT;
	cin >> TT;
	while (TT --) {
		solve ();
	}
	return 0;	
}