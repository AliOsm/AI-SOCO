#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

typedef pair<int,int> PII;
typedef long long LL;
const int INF = 1000000007;
const int PRIMES = 1000050;

vector<int> pl;
int lo[PRIMES],eu[PRIMES],rv[PRIMES],is[PRIMES],cnt[PRIMES];

const vector<int>& sieve(int n){
    lo[1]=eu[1]=rv[1]=1;
    for(static int x=2;x<n;x++){
        rv[x]=rv[INF%x]*LL(INF-INF/x)%INF;
        if(!lo[x]) pl.push_back(lo[x]=x),eu[x]=x-1;
        for(size_t i=0;i<pl.size() && x*pl[i]<n;i++){
            lo[x*pl[i]]=pl[i];
            eu[x*pl[i]]=eu[x]*(pl[i]-(x%pl[i]!=0));
            if(x%pl[i]==0) break;
        }
    }
    return pl;
}

int main(){
    sieve(PRIMES);
    int a,b,c;
    scanf("%d%d%d",&a,&b,&c);
    for(int i=a;i<=b;i++) if(lo[i]==i && i>=2) is[i]=1;
    partial_sum(is+a,is+b+1,cnt+a);
    int lo=1,hi=b-a+2;
    while(lo<hi){
        int x=(lo+hi)/2,i;
        for(i=a;i<=b-x+1;i++)
            if(cnt[i+x-1]-cnt[i-1]<c) break;
        if(i<=b-x+1) lo=x+1; else hi=x;
    }
    if(lo==b-a+2) puts("-1"); else printf("%d\n",lo);
}
