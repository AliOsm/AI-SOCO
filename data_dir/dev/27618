#include<bits/stdc++.h>
using namespace std;

#define MAXN 1000001

struct node
{
    bool endmark;
    node *next[4+1];
    node()
    {
        endmark = false;
        for(int i=0;i<4;i++) next[i] = 0;
    }
}*root;

void insert(char *str,int len)
{
    node *curr = root;
    for(int i=0;i<len;i++)
    {
        int id = str[i] - 'a';
        if(curr->next[id] == 0) curr->next[id] = new node();
        curr = curr->next[id];
    }
    curr->endmark = true;
}

int search(char *str,int i,int len,int flag,node *curr)
{
   // printf("%d %c %d\n",i,str[i],flag);
    if(curr->endmark == true and i==len)
    {
        if(flag == 1) return 1;
        else return 0;
    }
    if(i >= len or flag > 1) return 0;
    int ret = 0;
    /*int id = str[i]-'a';
    if(curr->next[id] == 0)
    {
        if(flag == 0)
        {
            //curr = curr->next[id];
            //ret = max(search(str,i+1,len,1,curr->next[0]),search(str,i+1,len,1,curr->next[2]));
            for(char ch='a';ch<='c';ch++)
            {
                if(curr->next[ch-'a'] != 0) ret = max(ret,search(str,i+1,len,1,curr->next[ch-'a']));
            }
        }
        else
        {
            ret = max(ret,0);
        }
    }
    else
    {
        ret = max(ret,search(str,i+1,len,flag,curr->next[id]));
    }*/
    for(char ch='a';ch<='c';ch++)
    {
        int id=ch-'a';
        if(curr->next[id] != 0 and ch==str[i]) ret = max(ret,search(str,i+1,len,flag,curr->next[id]));
        if(curr->next[id] != 0 and ch!=str[i]) ret = max(ret,search(str,i+1,len,flag+1,curr->next[id]));
    }
    return ret;
}

void del(node *curr)
{
    for(int i=0;i<4;i++)
    {
        if(curr->next[i]) del(curr->next[i]);
    }
    delete(curr);
}

int main()
{
    int n,m; scanf("%d %d",&n,&m);
    root = new node();
    for(int i=1;i<=n;i++)
    {
        char str[6*MAXN];
        scanf("%s",str);
        insert(str,strlen(str));
    }
    for(int i=1;i<=m;i++)
    {
        char str[6*MAXN];
        scanf("%s",str);
        if(search(str,0,strlen(str),0,root) == 1) printf("YES\n");
        else printf("NO\n");
    }
    del(root);
   // main();
    return 0;
}
