#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)

typedef long long ll;
typedef unsigned long long ull;

using namespace std;

const int MAXN = 5e6 + 256;
const char nxtl = '\n';
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int n, m, a[MAXN], pos[MAXN], cnt, clr[MAXN], ptr[MAXN], res[MAXN];
bool u[MAXN];
vector < int > v[MAXN], comp[MAXN];

void dfs(int x) {
	u[x] = 1;
	clr[x] = cnt;
	comp[cnt].pb(x);
	for(auto &to : v[x]) {
		if(!u[to]) dfs(to);
	}
}

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	scanf("%d%d", &n, &m);
	rep(i, 1, n) {
		scanf("%d", a+i);
		pos[a[i]] = i;
	}
	rep(i, 1, m) {
		int x, y; scanf("%d%d", &x, &y);
		v[x].pb(y);
		v[y].pb(x);
	}
	rep(i, 1, n) {
		if(!u[i]) {
			++cnt; dfs(i);
		}
	}
	rep(i, 1, cnt) sort(all(comp[i]));
	per(i, n, 1) {
		res[comp[clr[pos[i]]][ptr[clr[pos[i]]]++]] = i;
	}
	rep(i, 1, n) printf("%d ", res[i]);
	puts("");

	return 0;
}