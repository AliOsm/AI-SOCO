#include<bits/stdc++.h>
 
using namespace std;
 
#define inf 999999999

#define ninf -999999999
 
int arr[100001],tree[300003];
 
void segment ( int n, int b, int e ){
   
    if ( b == e ){
       
        tree[n] = arr[b];
       
        return;
    }
   
    else{
       
        int left = n*2;
       
        int right = n*2 + 1;
       
        int middle = ( b + e ) / 2;
       
        segment ( left, b, middle );
       
        segment ( right, middle+1, e );
       
        tree[n]=max(tree[left],tree[right]);
    }
}
 
int query ( int n, int b, int e, int i, int j ){
   
    if ( i>e || j<b ){
       
        return ninf;
    }
   
    else if ( b>=i && e<=j ){
       
        return tree[n];
    }
   
    else{
       
        int left=n*2;
       
        int right=n*2+1;
       
        int middle=(b+e)/2;
       
        int x = query(left,b,middle,i,j);
       
        int y = query(right,middle+1,e,i,j);
       
        return max(x,y);
    }
}
 
int main(){
	
	int n;
	
	cin>>n;
	
	for(int i=1; i<=n; i+=1){
		
		cin>>arr[i];
	}
	
	segment(1,1,n);
	
	for(int i=1; i<n; i+=1){
		
		int m=query(1,1,n,i+1,n);
		
		//cout<<m<<endl;
		
		if(arr[i]>m){
			
			cout<<"0 ";
		}
		
		else{
			
			cout<<1+abs(arr[i]-m)<<" ";
		}
	}
	
	cout<<"0";
}
