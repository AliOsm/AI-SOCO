#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;

int val(vector<vector<int>> & p, int k, int lf) {
  int m = p[0].size()-2;
  int pos = 0;
  int t = 0;
  for (int i = 0; i < lf; i++) {
    int l = m+1, r = 0;
    for (int j = 1; j <= m; j++) {
      if (p[i][j] == 1) {
        l = min(l, j);
        r = max(r, j);
      }
    }

    if ((((1<<i)&k) != 0 and pos == 0) or (((1<<i)&k) == 0 and pos == 1)) {
      t += m+2;
      pos = 1- pos;
    }
    else if (pos == 0) t += 2*r+1;
    else t += 2*(m+1-l)+1;
  }
  int l = m+1, r = 0;
  for (int j = 1; j <= m; j++)
    if (p[lf][j] == 1) {
      l = min(l, j);
      r = max(r, j);
    }
  if (pos == 0) t += r;
  else t += m+1-l;
  return t;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
  
  int n, m;
  cin >> n >> m;
  vector<vector<int>> plan(n, vector<int>(m+2, 0));
  int lf = -1;
  for (int i = n-1; i >= 0; i--){
    string s;
    cin >> s;
    for (int j = 0; j<  m+2; j++) {
      plan[i][j] = s[j]-'0';
      if (plan[i][j] == 1 and lf < 0) lf = i;
    }
  }
  int k = 1<<n;
  int best = 1000000;
  if (lf < 0) best = 0;
  else {
    for (int i = 0; i < k; i++)
      best = min(best, val(plan, i, lf));
  }
  cout << best << endl;
  return 0;
}

