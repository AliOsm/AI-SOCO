#include <bits/stdc++.h>
#define all(x) x.begin(),x.end()
using namespace std;

struct IO {
  IO operator>>(int &p)const{int n=0,sign=1,a=getchar();while(a<'0'||a>'9'){ if(a=='-'){sign=-1;a=getchar();break;}a=getchar();}while(a>='0' && a<='9'){n=(n<<1)+(n<<3)+a-'0';a=getchar();}p = n*sign;return *this;}
}Cin;

const int N = 1e6+3;
int n,m,now,p[N];
bool mark[N];
vector <int> adj[N],Values[N],Indices[N];
int res[N];

void dfs(int s) {
  mark[s] = true;
  Indices[now].push_back(s);
  Values[now].push_back(p[s]);
  for (auto i : adj[s]) {
    if (!mark[i]) {
      dfs(i);
    }
  }
}

int main(){
  Cin >> n >> m;
  for (int i = 1; i <= n; i++) {
    Cin >> p[i];
  }
  while(m--) {
    int u,v;
    Cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }
  for (int i = 1; i <= n; i++) {
    if (!mark[i]) {
      now++;
      dfs(i);
      sort(all(Values[now]));
      sort(all(Indices[now]),greater<int>());
      for (int j = 0; j < Values[now].size(); j++) {
        res[Indices[now][j]] = Values[now][j];
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    printf("%d", res[i]);
    putchar(' ');
  }
}