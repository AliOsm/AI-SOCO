#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define f first
#define s second
#define bp push_back
#define pause; system("pause");
#define mp make_pair
const int N=1e3+10;
const double eps=1e-9;
const int inf=1e9;
set<int>adj[N];
int deg[N];
bool is(int x)
{
    if(x<=1) return false;
    if(x<=3) return true;
    if (!(x%2) | !(x%3)) return false;
    int s=(int)(sqrt((double)(x))+eps);
    for(int i=5 ; i<=s ; i+=6)
        if (!(x%i) || !(x%(i+2)))
            return false;

    return true;
}
int n;
vector<int>v;
main(){

    cin>>n;
    for(int i=1;i<n;i++){
        adj[i].insert(i+1);
        if(i==1 || i==n)deg[i]=1;
        else deg[i]=2;
    }
    deg[n]=1;
    for(int i=1;i<=N*10;i++)if(is(i))v.bp(i);
    int p=upper_bound(v.begin(),v.end(),n-1)-v.begin();
    int x=v[p]-n+1;
    for(int i=1;i<=n && x;i++){
        for(int j=n;j>=1 && x;j--){
            if(i==j || adj[i].count(j)>0 || adj[j].count(i)>0)continue;
            int sz1=deg[i];
            int sz2=deg[j];
            if(is(sz1+1) && is(sz2+1) ){
                --x;
                adj[i].insert(j);
                deg[i]++;
                deg[j]++;
            }
        }
    }
    int m=0;
    for(int i=1;i<=n;i++)m+=(int)adj[i].size();
    cout<<m<<endl;
    for(int i=1;i<=n;i++)for(auto x:adj[i])cout<<i<<" "<<x<<endl;

}
