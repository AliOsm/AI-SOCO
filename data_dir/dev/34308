#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <queue>
using namespace std;

#define pb push_back
#define mp make_pair
#define snuke(it,x) for (__typeof((x).begin()) it = (x).begin(); it != (x).end(); ++ it)

const int N = 101000;
int n,m;
vector<pair<int,int> > grid[N];
priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > que;

int main() {
  scanf("%d%d",&n,&m);
  for (int i = 0; i < m; ++ i) {
    int a,b;
    scanf("%d%d",&a,&b);
    grid[n-b+1].pb(mp(a,i));
  }
  vector<int> ans;
  for (int i = 1; i <= n; ++ i) {
    snuke(it,grid[i]) {
      que.push(*it);
    }
    while (!que.empty() && que.top().first<i) que.pop();
    if (!que.empty()) {
      ans.pb(que.top().second);
      que.pop();
    }
  }
  printf("%d\n",(int)ans.size());
  for (int i = 0; i < (int)ans.size(); ++ i) {
    printf("%d ",ans[i]+1);
  }
  puts("");
  return 0;
}
