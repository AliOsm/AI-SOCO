#include <bits/stdc++.h>
#ifdef DBP
#define deb(...) fprintf(stderr,__VA_ARGS__)
#else
#define deb(...) 0
#endif
#define fore(x,a,b) for(int x=a, qwerty=b; x<qwerty; x++)
#define ALL(a) (a).begin(),(a).end()
#define SZ(a) ((int)(a).size())
#define pb push_back
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define fst first
#define snd second
#define mset(a,v) memset((a),(v),sizeof(a))
using namespace std;
typedef long long ll;

const int N=1e6+5, LG=21;
int n, k, P[LG][N], dep[N], used[N];
vector<int> g[N];

void dfs(int u){
    for(int v:g[u])if(v!=P[0][u]){
        P[0][v]=u;dep[v]=dep[u]+1;
        dfs(v);
    }
}

int main(){FIN;mset(P,-1);
    cin >> n >> k;
    fore(x,0,n-1){
        int u,v; cin>>u>>v; u--; v--;
        g[u].pb(v);g[v].pb(u);
    }
    dfs(n-1);
    fore(k,1,LG)fore(u,0,n)if(P[k-1][u]!=-1)
        P[k][u]=P[k-1][P[k-1][u]];
    used[n-1]=1;k=n-k;k--;
    vector<int> ans;
    for(int x=n-2; x>=0; x--){
        if(used[x])continue;
        int a=x;
        for(int l=LG-1; l>=0; l--)if(P[l][a]>=0 && !used[P[l][a]])
            a=P[l][a];
        if(dep[x]-dep[a]+1<=k){
            a=x;
            while(!used[a])k--,used[a]=1,a=P[0][a];
        }else ans.pb(x+1);
    }
    reverse(ALL(ans));
    fore(x,0,SZ(ans))cout<<ans[x]<<" \n"[x+1==SZ(ans)];
}
