#include<iostream>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
using namespace std;
ll mod=998244353;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }

    return (result)%mod;

}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
        return false;
    return true;
}
vector<ll> v[100005];
vector<ll> visited(100005),col(100005),deg(100005);
void dfs(ll x)
{
    visited[x]=1;
    for(ll i=0;i<v[x].size();i++)
    {
        ll node=v[x][i];
        if(!visited[node])
        {
            col[node]=1-col[x];
            dfs(node);
        }
    }
}
int main()
{
 ll n;
 cin>>n;
 ll i;
 for(i=0;i<n-1;i++)
 {
     ll x,y;
     cin>>x>>y;
     v[x].pb(y);
     v[y].pb(x);
     deg[x]+=1;
     deg[y]+=1;
 }
 col[1]=0;
 dfs(1);
 ll oc=0;
 vector<ll> a;
 for(i=1;i<=n;i++)
    if(col[i]==0)
        a.pb(i);
    else
        oc+=1;
ll ans=0;
for(i=0;i<a.size();i++)
{
    ll node=a[i];
    ans+=max(0LL,oc-deg[node]);
}
cout<<ans;
}
