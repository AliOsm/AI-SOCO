#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double rl;
typedef pair<int, int> pii;

int n;
const int MX=2*100*1000+99;
int a[MX];

string solve()
{
    string result;
    int prev=0;

    //int ptr[2]={0, n-1};
    //int dir[2]={+1, -1};
    //char C[2]={'L', 'R'};
    int L=0, R=n-1;

    while(L<=R)
    {


        int l=a[L],
            r=a[R];

        //cerr << L << ' ' << R << ' ' << prev << endl;
        //cerr << l << ' ' << r << endl;

        if(l==r)
        {
            int cnt_L=0;
            {
                int p=prev;
                for(int i=L; i<=R; i++)
                {
                    if(p<a[i])
                    {
                        p=a[i];
                        cnt_L++;
                    }
                    else break;
                }
            }

            int cnt_R=0;
            {
                int p=prev;
                for(int i=R; i>=L; i--)
                {
                    if(p<a[i])
                    {
                        p=a[i];
                        cnt_R++;
                    }
                    else break;
                }
            }

            if(cnt_L>cnt_R) for(int i=0; i<cnt_L; i++) result.push_back('L');
            else            for(int i=0; i<cnt_R; i++) result.push_back('R');

            return result;
        }
        else
        {
            if(l<=prev)
            {
                while(prev<a[R] && L<=R)
                {
                    result.push_back('R');\
                    prev=a[R];
                    R--;
                }
                return result;
            }
            if(r<=prev)
            {
                while(prev<a[L] && L<=R)
                {
                    result.push_back('L');
                    prev=a[L];
                    L++;
                }
                return result;
            }

            if(l<r)
            {
                result.push_back('L');
                prev=l;
                L++;
            }
            else
            {
                result.push_back('R');
                prev=r;
                R--;
            }
        }
    }

    return result;
}

int main()
{
	//freopen("_.txt", "r", stdin);
    //ios_base::sync_with_stdio(false);
    //cin.tie(nullptr ); cout.tie(nullptr);

    cin >> n;
    for(int i=0; i<n; i++) cin >> a[i];

    string res=solve();
    cout << res.size() << endl;
    cout << res;

    return 0;
}
