///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>
#define int long long
#define mp make_pair
#define fi first
#define si second
#define M 1000009
#define fast ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
const int inf=1e18;
int n,m,k;
int s[M+2],f[M+2],idx[M+2];
vector<pair<int,int> >id;
bool cmp(pair<int,int> x,pair<int,int> y)
{
      return x.fi>y.fi;
}
bool st(int x,int y)
{
    return x>y;
}
bool chk(int x)
{
    int j=x-1,i=0,day=0;
    int cur=-1,val;
    while(1)
    {
        if(day%k==0)cur++;
        day++;
        if(i<n && j>=0)
        {
            if(f[i]<=s[j])
            {
                val=f[i];
                i++;

            }
            else
            {
                val=s[j];
                j--;
            }
        }
        else if(i<n && j<0)
        {
             val=f[i];
             i++;
        }
        else if(i>=n && j>=0)
        {
               val=s[j];
               j--;
        }
        else
        {
            return true;
        }
        if(val<cur)
        {
            return false;
        }

    }
     return true;

}
void show(int x)
{
    for(int i=0;i<x;i++)
    {
       cout<<id[i].si<<" ";
    }
    cout<<endl;
    return ;
}
main()
{
  fast
   cin>>n>>m>>k;
   for(int i=0;i<n;i++)cin>>f[i];
   sort(f,f+n);
   for(int i=0;i<m;i++)
   {
       cin>>s[i];
       id.push_back(mp(s[i],i+1));
   }
   sort(s,s+m,st);
   sort(id.begin(),id.end(),cmp);
   int lo=0,hi=m;
   if(chk(0)==false)
   {
       cout<<"-1"<<endl;
       return 0;
   }
   while(hi-lo>=2)
   {
       int mid=(lo+hi)>>1;
       if(chk(mid))
       {
           lo=mid;
       }
       else hi=mid-1;
   }
   int ans;
   for(int i=lo;i<=hi;i++)
   {
       if(chk(i))
       {
           ans=i;
       }
   }
   cout<<ans<<endl;
    show(ans);

















































    return 0;
}

