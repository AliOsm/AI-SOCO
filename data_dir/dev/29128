/**
*
* Author: Mouhanad
* Lang: GNU C++14
*
**/
#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >
typedef long long ll;
const int inf = 1<<30;
const int N =200100;
int n , a[N] , k , sz[N], dep[N], p[N], nw[N], in[N];
vector < int > adj[N] ;

void dfs ( int u , int par ) {
 sz[u] = 1;
 dep[u] = dep[par]+1 ;
 p[u] = par;
 for ( auto v : adj[u] ){
    if ( v != par ) {
        dfs(v,u);
        sz[u] += sz[v];
        in[u] ++;
    }
 }
 return;
}
int main ( ){
  scanf("%d %d",&n,&k);

  for ( int i =0 ; i < n-1 ; i++ ) {
    int u , v ; scanf("%d %d",&u,&v);
    adj[u].push_back(v);
    adj[v].push_back(u);
  }

  dfs(1,0);
  set < ii , greater <ii> > se ;
  for ( int i = 0; i <= n; i++ ) {
    if ( i > 0 &&  !in[i] ) {
            se.insert({dep[i],i});
    }
    nw[i] = dep[i];
  }
  ll sum =0 ;
  while ( k-- ) {
    int d = (*se.begin()).F ; int u = (*se.begin()).S;
    se.erase(*se.begin());
    sum += (d-1);

    dep[p[u]] -= sz[u];
    in[p[u]]--;
    if ( !in[p[u]] ) {
        se.insert({dep[p[u]],p[u]});
    }
  }
   printf("%lld\n",sum);
return 0 ;
}
