#include<bits/stdc++.h>
using namespace std;

int n,bfs_order[200001],x,y,mark[200001],rel_order[200001];
queue<int>q;
vector<int>child[200001],ans;

bool cmp(int a,int b)
{
	return rel_order[a]<rel_order[b];
}

int main()
{
	cin>>n;
	for(int i=0;i<n-1;++i)
	{
	    cin>>x>>y;
	    child[x].push_back(y);
	    child[y].push_back(x);
	}
	for(int i=0;i<n;++i)
	{
	    cin>>bfs_order[i];
	    rel_order[bfs_order[i]]=i;
	}
	
	for(int i=1;i<=n;++i)
		sort(child[i].begin(),child[i].end(),cmp);
	
	q.push(1);	
	while(!(q.empty()))
	{
		queue<int>temp;
		while(!(q.empty()))
		{
			int curr_node=q.front();
			q.pop();
			ans.push_back(curr_node);
			mark[curr_node]=1;
			for(int j=0;j<child[curr_node].size();++j)
				if(!mark[child[curr_node][j]])
					temp.push(child[curr_node][j]);
			}
		q=temp;			
	}
	
	for(int i=0;i<n;++i)
		if(bfs_order[i]!=ans[i])
			return cout<<"No",0;
	cout<<"Yes";
}