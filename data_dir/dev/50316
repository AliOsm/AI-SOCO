#include <bits/stdc++.h>
using namespace std;
int solve(int leftSlots,int timee,vector<int> myvec)
{
    sort(myvec.begin(),myvec.end());
    deque<int> ex;
    for(int i = 0;i < myvec.size();i++)
    {
        int num = myvec[i];
        for(int j = 1;j <= leftSlots;j++)
            ex.push_back(num);
    }
    int sum = 0;
    while(!ex.empty())
    {
        int top = ex.front();
        ex.pop_front();
        if(top <= timee)
        {
            sum++;
            timee -= top;
        } else {
            break;
        }
    }
    return sum;
}
int main()
{
    int n,m,k;
    cin >> n >> m >> k;
    vector<int> num(m);
    int sum = 0;
    for(int i = 0;i < m;i++)
        cin >> num[i],sum += num[i];

    int Best = 0;
    for(int i = 1;i <= n;i++)
    {
        int res = 0;
        if(k >= i * sum)
        {
            res += i*m + i;
            res += solve(n-i,k - (i * sum),num);
        }
        Best = max(Best,res);
    }
    cout << max(Best,solve(n,k,num));
}
