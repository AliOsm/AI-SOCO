#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <iomanip>
#include <cmath>
#include <algorithm>
using namespace std;

/*

*/

int main()
{
	long long kk;
	cin>>kk;
	vector<int> powers;
	int mx = 0;
	for (int i = 0; i < 32; i++)
	{
		if (((1<<i)&kk) > 0) {
			powers.push_back(i);
			mx = i;
		}
	}
	int n = 2;
	for(int i = 0; i < powers.size(); i++) n += 2*powers[i];
	int k = 2;

	vector<string> res(n+mx+5, string(n+mx+5, 'N'));
	reverse(powers.begin(), powers.end());
	
	for (int i = 0; i < powers.size(); i++)
	{
		
		if (powers[i] == 0)
		{
			res[0][n+powers[i]+1] = 'Y';
			res[n+1+powers[i]][0] = 'Y';
			break;
		}
		res[0][k] = res[k][0] = 'Y';
		res[0][k+1] = res[k+1][0] = 'Y';
		k += 2;
		for (int j = 1; j < powers[i]; j++)
		{
			res[k][k-1] = res[k-1][k] = 'Y';
			res[k][k-2] = res[k-2][k] = 'Y';
			res[k+1][k-1] = res[k-1][k+1] = 'Y';
			res[k+1][k-2] = res[k-2][k+1] = 'Y';
			k += 2;
		}
		res[k-1][n+powers[i]+1] = 'Y';
		res[n+1+powers[i]][k-1] = 'Y';
		res[k-2][n+powers[i]+1] = 'Y';
		res[n+1+powers[i]][k-2] = 'Y';

	}
	for (int i = n+1; i+1 < res.size(); i++)
	{
		res[i][i+1] = res[i+1][i] = 'Y';
	}
	int i = res.size()-1;
	res[i][1] = res[1][i] = 'Y';
	cout<<res.size()<<endl;
	for (int i = 0; i < res.size(); i++)
		cout<<res[i]<<endl;
	//system("pause");
}