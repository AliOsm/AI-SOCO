///****In the name of Allah, most Gracious, most Compassionate****//

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int, int> pii;

#define NL cout<<"\n";
#define ALL(a) a.begin(), a.end()
#define DBG(a) cout<< #a <<" --> "<<(a)<<endl;
#define FastIO ios::sync_with_stdio(false); cin.tie(nullptr);cout.tie(nullptr)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const int N=1e3+5;
const int oo=1e9+7;

bool vis[N][N] ;
int dist[N][N];
int r,c;

pii st, en ;

string s[N];
int dx  [] = { 1,0,-1,0};
int dy  [] = { 0,1,0,-1};
void bfs( pii u)
{
    dist[u.first][u.second] = 0;
    vis[u.first][u.second] = 1;
    queue<pii> q;
    q.emplace(u);
    while(!q.empty())
    {
        u = q.front();
        q.pop();
        assert(s[u.first][u.second]!='T');
        for(int i=0; i<4; i++)
        {
            pii v = { u.first + dx[i], u.second + dy[i]};
            if(v.first<0 or v.first >= r)
                continue;
            if(v.second<0 or v.second >= c)
                continue;
            if(s[v.first][v.second]=='T') continue;
            if(vis[v.first][v.second]) continue;
            vis[v.first][v.second] = 1;
            dist[v.first][v.second] = dist[u.first ] [ u.second] + 1;
            q.emplace(v);
        }
    }
}
int32_t main()
{
    FastIO;
    cin>>r>>c;
    st = {-1,-1};
    en = {-1,-1};
    for(int i=0; i<r; i++)
    {
        cin>>s[i];
        for(int j=0; j<c; j++)
            if(s[i][j] == 'S')
                st = {i, j };
            else if(s[i][j] == 'E')
                en = {i, j};
            else dist[i][j] = oo;
    }
    assert(st!=make_pair(-1,-1));
    assert(en!=make_pair(-1,-1));
    int ans=0;
    bfs(en);
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
            if(s[i][j]!='T' and s[i][j]!='S' and s[i][j]!='E') ans+= (s[i][j]-'0')*(dist[i][j] <= dist[st.first][st.second]);
    }
    cout<<ans<<"\n";
}
