#include <iostream>
#include<algorithm>
#include<string>
#include<map>
#include <iterator>
#include<iomanip>
#include <time.h>
#include<vector>
#include<cmath>
#include <cstdio>
#include<queue>
#include<unordered_map>
#include<stack>
#include<list>
#include<stdio.h>
#include<set>
#include <functional>

#define hash_mod 2305843009213717
#define mod7 1000000007
#define mod9 1000000009
#define mod2 30000000
#define pa(a,b) make_pair(a,b)
#define f first
#define s second
#define pb(a)  push_back(a)
#define all(a) a.begin() , a.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define LL  long long int
#define oo 1e9
#define pi 3.141592653589793238
#define eps  1e-6



LL maxx(LL & a , LL & b){return a>b ?  a : b;}
LL minn(LL & a , LL & b){return a>b ?  b : a;}

using namespace std;
//int dx[] = {1 , -1 , 0 , 0} ;
//int dy[] = {0 , 0 , 1 , -1} ;
void boostIO(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
LL gcd(LL a, LL b) {
    return b == 0 ? a : gcd(b, a % b);
}
int int_gcd(int a, int b){
    return b == 0 ? a : int_gcd(b, a % b);
}
LL lcm(LL a , LL b ){
    return a / gcd(a , b) * b;
}
LL poww(LL base, LL exp , LL mod){
  base %= mod;
  LL result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}
int a[200200] , fnd[1001000] ;
int main()
{
    boostIO() ;
    int n ; cin >> n ;
    LL sum = 0 ;

    for(int i = 1 ; i <= n ; i++){
        cin >> a[i] ;  sum += a[i] ;
        fnd[a[i]]++ ;
    }
    vector<int> ans ;
    for(int i = 1 ; i <= n ; i++){
        sum -= (a[i]) ; fnd[a[i]]-- ;
        if(sum % 2 == 0 && sum / 2 <= 1000000){
            if(fnd[sum / 2]){
                ans.pb(i) ;
            }
        }
        fnd[a[i]]++ ; sum += a[i] ;
    }

    cout << ans.size() << endl ;

    for(int i = 0 ; i < ans.size() ; i++){
        cout << ans[i] << " " ;
    }
}
