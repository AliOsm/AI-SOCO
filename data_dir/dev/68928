/* @nazarbek.altybay */

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <queue>
#include <cstdlib>
#include <ctime>
#include <cassert>

#define pii pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

typedef unsigned long long ull;
typedef long long ll;

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 3e5 + 7;

const int dx[] = {0, -1, 0, 1};
const int dy[] = {1, 0, -1, 0};

int n;
int p[MAXN];
int cnt[MAXN];

int bin(int x, int y) {
  int res = 1;
  while (y) {
    if (y & 1) res = (1ll * res * x) % INF;
    y >>= 1;
    x = (1ll * x * x) % INF;
  }
  return res;
}

int pf[MAXN];
int sf[MAXN];

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif

  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%d", &p[i]);
    cnt[p[i]]++;
  }
  pf[0] = 1;
  for (int i = 1; i <= 200000; i++) {
    pf[i] = (1ll * pf[i - 1] * (cnt[i] + 1)) % (INF - 1);
  }
  sf[200001] = 1;
  for (int i = 200000; i > 0; i--) {
    sf[i] = (1ll * sf[i + 1] * (cnt[i] + 1)) % (INF - 1);
  }
  ll ans = 1;
  for (int i = 2; i <= 200000; i++) {
    if (cnt[i]) {
      for (int deg = 1; deg <= cnt[i]; deg++) {
        ans *= bin(bin(i, deg), (1ll * pf[i - 1] * sf[i + 1]) % (INF - 1));
        ans %= INF;
      }
    }
  }
  cout << ans;
  return 0;
}