#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <assert.h>

#pragma comment(linker, "/stack:20000000")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef int mt;
typedef double fl;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 1000000007ll;//998244353ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

#define N 501
#define K 26
#define P 3
#define M (N * N)
#define p2(x) ((((x) * (x)) % (MOD)))
#define mxy(x, y) ((((x) * (y)) % (MOD)))
#define p2p(x) ((((x) * (x))))

mt n, dp[N][N];
char s[N];
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d\n%s", &n, s);
	rep(0, n, i) dp[i][i] = 1;
	repe(2, n, d) {
		rep(0, n - d + 1, l) {
			mt r = l + d - 1;
			dp[l][r] = dp[l][r - 1] + 1;
			rep(l, r, k) {
				dp[l][r] = min(dp[l][r], dp[l][k] + dp[k + 1][r - 1] + (s[r] != s[k]));
			}
		}
	}
	printf("%d\n", dp[0][n - 1]);

	return 0;
}