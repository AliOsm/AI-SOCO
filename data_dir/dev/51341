#include<bits/stdc++.h>
#define ll long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
using namespace std;

const ll md = 1000000007;

struct matrix{
    ll a[3][3], n, m;
    void print(){
        for (ll i = 0;i < n; ++i){
            for (ll j = 0;j < m; ++j){
                cout <<a[i][j]<<" ";
            }
            cout <<endl;
        }
    }
};

matrix operator*(matrix &a, matrix &b){
    matrix c;
    c.n = a.n;
    c.m = a.m;
    for (ll i = 0; i < c.n; ++i){
        for (ll j = 0; j < c.m; ++j){
            c.a[i][j] = 0;
        }
    }
    for (ll i = 0;i < c.n; ++i){
        for (ll j = 0;j < c.m; ++j){
            for (ll k = 0;k < a.m; ++k){
                c.a[i][j] += (a.a[i][k] * b.a[k][j]) % md;
                c.a[i][j] %= md;
            }
        }
    }
    return c;
}


matrix bin_pow(matrix a, ll n){
    matrix res;
    res.n = 3;
    res.m = 3;
    for (ll i = 0; i < 3; ++i){
        for (ll j = 0;j < 3; ++j){
            res.a[i][j] = 0;
        }
    }
    res.a[0][0] = 1;
    res.a[1][1] = 1;
    res.a[2][2] = 1;
    while (n > 0){
        if (n % 2 == 0){
            n >>= 1;
            a = a * a;
        }else{
            n--;
            res = res * a;
        }
    }
    return res;
}

ll n, m, z, l, r, t, us1[3], us2[3];
matrix ans, x, y;
pair < ll , pair < ll , ll > > a[100005];

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    cin >>n>>m;
    for (ll i = 1; i <= n; ++i){
        cin >>z>>l>>r;
        z--;
        a[++t] = mp(l, mp(z, 1));
        a[++t] = mp(r + 1, mp(z, -1));
    }
    sort(a + 1, a + t + 1);
    l = 1;
    ans.n = 1;
    ans.m = 3;
    ans.a[0][0] = 0;
    ans.a[0][1] = 1;
    ans.a[0][2] = 0;
    x.n = 3;
    x.m = 3;
    a[0].fi = 1;
    a[t + 1].fi = m + 1;
    for (ll e = 1; e <= t + 1; ++e){
        //cout <<a[e].fi<<endl;
        us2[a[e].se.fi] += a[e].se.se;
        if (e > 0 && a[e].fi != a[e - 1].fi){
            r = a[e].fi;
            for (ll i = 0; i < 3; ++i){
                for (ll j = 0; j < 3; ++j){
                    if (abs(i - j) <= 1 && us1[i] == 0 && us1[j] == 0)x.a[i][j] = 1;else x.a[i][j] = 0;
                }
            }
            if (r - 1 - l >= 0)x = bin_pow(x, r - 1 - l);
            if (r - 1 - l >= 0)ans = ans * x;
            l = r;
        }
        //ans.print();
        if (e <= t && a[e + 1].fi != a[e].fi){
            for (ll i = 0; i < 3; ++i){
                for (ll j = 0; j < 3; ++j){
                    if (abs(i - j) <= 1 && us1[i] == 0 && us2[j] == 0)x.a[i][j] = 1;else x.a[i][j] = 0;
                }
            }
            ans = ans * x;
            for (ll i = 0; i < 3; ++i){
                us1[i] = us2[i];
            }
        }
        //ans.print();
    }
    //ans.print();
    cout <<ans.a[0][1];
}
