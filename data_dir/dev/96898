#include <bits/stdc++.h>
using namespace std;

const int MAX = 205;
int n, m, ord[MAX], id[MAX], vida[MAX], a[MAX], T[MAX];

void print(int p) {
	printf("%d\n", p);
	for(int i = 1; i <= m; i++) {
		printf("%d", ord[i]);
		printf(i == m ? "\n" : " ");
	}

	exit(0);
}

int can(int x, int y) {
	if(x <= y) {
		int V = vida[x];
		for(int i = x; i <= y; i++) {
			V += a[i];

			if(V < 0)
				return 0;
		}

		return 1;
	}

	int V = vida[x];
	for(int i = x; i >= y; i--) {
		V += a[i];

		if(V < 0)
			return 0;
	}

	return 1;
}

int LeftRight(int p) {
	for(int i = 1; i <= m; i++)
		ord[i] = 0;

	for(int i = 1; i <= n; i++)
		a[i] = T[i];

	int c = 0;
	vector <int> pend;
	for(int i = p; i > 0; i--) {
		if(id[i] == 0)
			continue;

		if(can(i, p)) {
			//printf("heroe = %d\n", id[i]);
			ord[++c] = id[i];

			for(int o : pend)
				ord[++c] = o;

			pend.clear();

			for(int k = i; k <= p; k++)
				a[k] = 0;
		}

		else pend.push_back(id[i]);
	}

	if(!pend.empty())
		return 0;

	for(int i = p + 1; i <= n; i++) {
		if(id[i] == 0)
			continue;

		if(can(i, p)) {
			ord[++c] = id[i];

			for(int o : pend)
				ord[++c] = o;

			pend.clear();

			for(int k = i; k >= p; k--)
				a[k] = 0;
		}

		else pend.push_back(id[i]);
	}

	if(!pend.empty())
		return 0;

	return 1;
}

int RightLeft(int p) {
	for(int i = 1; i <= m; i++)
		ord[i] = 0;

	for(int i = 1; i <= n; i++)
		a[i] = T[i];

	int c = 0;
	vector <int> pend;

	for(int i = p; i <= n; i++) {
		if(id[i] == 0)
			continue;

		if(can(i, p)) {
			ord[++c] = id[i];

			for(int o : pend)
				ord[++c] = o;

			pend.clear();

			for(int k = i; k >= p; k--)
				a[k] = 0;
		}

		else pend.push_back(id[i]);
	}

	if(!pend.empty())
		return 0;

	for(int i = p - 1; i > 0; i--) {
		if(id[i] == 0)
			continue;

		if(can(i, p)) {
			ord[++c] = id[i];

			for(int o : pend)
				ord[++c] = o;

			pend.clear();

			for(int k = i; k <= p; k++)
				a[k] = 0;
		}

		else pend.push_back(id[i]);
	}

	if(!pend.empty())
		return 0;

	return 1;
}

int main() {
	scanf("%d%d", &n, &m);

	for(int i = 1; i <= m; i++) {
		int p, s; scanf("%d%d", &p, &s);
		id[p] = i;
		vida[p] = s;
	}

	for(int i = 1; i <= n; i++)
		scanf("%d", &T[i]);

	for(int p = 1; p <= n; p++) {
		if(LeftRight(p))
			print(p);

		if(RightLeft(p))
			print(p);
	}

	printf("-1\n");
	return 0;
}