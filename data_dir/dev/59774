//In the name of good
#include <bits/stdc++.h>
using namespace std ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define X first 
#define Y second
#define int long long 
typedef pair < int , int > pii ;
const int maxn = 1e6 + 1 ;
const int maxL = 63 ;
string s ;
map < char , int > mp ;
int ans ;

main ( ) 
{ 
  cin >> s ;
  for ( int i = 0 ; i < s . size ( ) ; i ++ )
    mp [ s [ i ] ] ++ ;
  for ( char ch = 0 ; ch <= max ( 'z' , '9' ) ; ch ++ )
    ans += mp [ch] * (mp[ch]);
  cout << ans ; 
} 

/*//In the name of good
//#include <bits/stdc++.h>
#include <iostream>
#include <vector>
using namespace std ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define X first 
#define Y second
//#define int long long 
//typedef pair < int , int > pii ;
const int maxn = 1e4 + 10 ;
long long n , mod = 1e9 + 7 ;
int a [ maxn ] , b [ maxn ] ;
vector < int > C [ maxn ] ;
long long hlp , hlp1 ;

main ( ) 
{
  cin >> n >> mod ;
  for ( int i = 0 ; i < n + 5 ; i ++ )
    C [ i ] . resize ( i + 1 ) ; 
  for ( int i = 0 ; i < n + 5 ; i ++ )
    C [ i ] [ 0 ] = 1 , C [ i ] [ i ] = 1 ;
  for ( int i = 1 ; i < n + 5 ; i ++ )
    for ( int j = 1 ; j < i ; j ++ )
      C [ i ] [ j ] = ( C [ i - 1 ] [ j - 1 ] + C [ i - 1 ] [ j ] ) % mod ;
  a [ 0 ] = b [ 0 ] = a [ 1 ] = b [ 1 ] = 1  ;
  a [ 2 ] = 1 ;
  b [ 2 ] = 1 ;
  
  for ( int i = 3 ; i <= n + 5 ; i ++ ) 
    {
      int l = 2 , r = i ;
      if ( i & 1 )
	r = i - 1 ;
      for ( ; l < r ; l += 2 , r -= 2 )
	{ 
	  hlp = C [ i - 1 ] [ l - 1 ] ;
	  hlp1 = a [ l - 2 ] ;
	  hlp *= a [ i + 1 - l ] ;
	  hlp %= mod ;
	  hlp *= hlp1 ;
	  hlp %= mod ;
	  a [ i ] = ( a [ i ] + 2 * hlp ) % mod ;
	} 
      if ( l == r )
	{ 
	  hlp = C [ i - 1 ] [ l - 1 ] ;
	  hlp1 = a [ l - 2 ] ;
	  hlp *= a [ i + 1 - l ] ;
	  hlp %= mod ;
	  hlp *= hlp1 ;
	  hlp %= mod ;
	  a [ i ] = ( a [ i ] + hlp ) % mod ;
	} 
      l = 1 ;
      r = i - 1 ;
      if ( i & 1 )
	r = i ;
      for ( ; l < r ; l += 2 , r -= 2 )
	{ 
	  hlp = C [ i - 1 ] [ l - 1 ] ;
	  hlp1 = a [ l - 2 ] ;
	  hlp *= a [ i + 1 - l ] ;
	  hlp %= mod ;
	  hlp *= hlp1 ;
	  hlp %= mod ;
	  b [ i ] = ( a [ i ] + 2 * hlp ) % mod ;
	} 
      if ( l == r )
	{ 
	  hlp = C [ i - 1 ] [ l - 1 ] ;
	  hlp1 = a [ l - 2 ] ;
	  hlp *= a [ i + 1 - l ] ;
	  hlp %= mod ;
	  hlp *= hlp1 ;
	  hlp %= mod ;
	  b [ i ] = ( a [ i ] + hlp ) % mod ;
	} 
    } 
  cout << ( a [ n ] + b [ n ] ) % mod << endl << endl ;
}
*/
