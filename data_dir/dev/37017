#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<pii, int> para;
const int inf = 1e9 + 7;
const int maxN = 1e6 + 5;

int n, k, l, r, type, arr[maxN];
int leftR[maxN], rightR[maxN];
ll cost[maxN], sum[maxN], sumSort[maxN];

int main() {
	scanf("%d",&n);
	REP(i, n) {
		scanf("%d",&arr[i]);
		leftR[i] = 1;
		rightR[i] = 1;
	}
	
	REP(i, n) {
		if (i > 0) {
			if (arr[i] > arr[i - 1])
				leftR[i] = 1 + leftR[i - 1];
		}
	}
	
	FORD(i, n - 2, 1) {
		if (arr[i] < arr[i + 1])
			rightR[i] = 1 + rightR[i + 1];
	}
	
	int ans = 0;
	REP(i, n) {
		//printf("%d %d\n",leftR[i], rightR[i]);
		ans = max(ans, leftR[i] + rightR[i] - 1);
		if (i < n - 1)
			ans = max(ans, leftR[i] + 1);
		if (i >= 1)
			ans = max(ans, rightR[i] + 1);
		if (i >= 1 && i < n - 1) {
			if (arr[i - 1] + 1 < arr[i + 1]) {
				//printf("%d %d %d\n",i,leftR[i - 1], rightR[i + 1]);
				ans = max(ans, leftR[i - 1] + 1 + rightR[i + 1]);
			}
		}
	}
	
	printf("%d",ans);
	return 0;
}
