/*
~Like a small boat
~On the ocean
~Sending big waves
~Into motion
!Like how a single word
!Can make a heart open
!I might only have one match
!But I can make an explosion
#And all those things I didn't say
#Wrecking balls inside my brain
#I will scream them loud tonight
#Can you hear my voice this time?
@This is my fight song
@Take back my life song
@Prove I'm alright song
@My power's turned on
$Starting right now I'll be strong
$I'll play my fight song
$And I don't really care if nobody else believes
$'Cause I've still got a lot of fight left in me!!!
*/

#include "bits/stdc++.h"
using namespace std;

typedef long long int ll;
const int N = 1e6+6;
vector<ll>T,P;
ll n,Arr[N],Frq[10],Prim[10];
bool vis[N];

int dfs( int pos,int root,int sum  )
{
    if( pos==n+1 )return (root>1)+sum;
    int Ret = 1e9;
    for(int i=0;i<T.size();i++)
    {
        ll now = T[i];
        if(now%Arr[pos]!=0)
            continue;
        T[i] /= Arr[pos];
        T.push_back(Arr[pos]);
        int ret = 0;
        if(i==0)ret = Frq[pos]+(!Prim[pos]);
        else ret = !Prim[pos];
        Ret = min(Ret,dfs(pos+1,root+(i==0),sum+ret));
        T[i] *= Arr[pos];
        T.pop_back();
    }
    return Ret;
}
void seive()
{
    vis[0] = vis[1] = 1;
    for(int i=4;i<N;i+=2)vis[i]=1;
    for(int i=3;i*i<=N;i+=2)
    {
        if(!vis[i])
        {
            for(int j=(i*i);j<=N;j+=(i+i))
                vis[j] = 1;
        }
    }
    P.push_back(2);
    for(int i=3;i<N;i+=2)
    {
        if(!vis[i])
            P.push_back(i);
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    seive();
    cin>>n;
    for(int i=1;i<=n;i++)
        cin>>Arr[i];
    sort(Arr+1,Arr+n+1,greater<ll>());
    for(int i=1;i<=n;i++)
    {
        ll now = Arr[i];
        for(int j=0;P[j]*P[j]<=now;j++)
        {
            int x = P[j];
            while(now%x==0)now/=x,Frq[i]++;
            if(now<P[j])break;
        }
        Frq[i] += (now>1);
        Prim[i] = (Frq[i]==1);
    }
    T.push_back(0);
    int ret = dfs(1,0,0);
    cout<<ret<< "\n";




    return 0;
}
