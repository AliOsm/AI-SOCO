#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define form(i,a,n) for (int i=(a);i<(n);i++)
#define forn(i,a,n) for (int i=(a);i<(n);i++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const double eps = 1e-7;
const int maxn = 1e6 + 777;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 7;

int cnt[maxn];
int c[maxn];
int last[maxn];
int last1[maxn];

void solve(){
    int n, k, m, a;
    cin >> n >> k >> m >> a;
    for(int i = 0; i < a; i++){
        int x;
        cin >> x;
        cnt[x]++;
        last[x] = i + 1;
    }
    int f = m - a;
    for(int i = 1; i <= n; i++){
        int cc = 0;
        for(int j = 1; j <= n; j++)
            if(cnt[j] > 0 && (cnt[i] + f < cnt[j] || cnt[i] + f == cnt[j] && (f != 0 || last[i] > last[j])) && j != i )
                cc++;
        if(cc >= k || cnt[i] + f == 0){
            cout << "3 ";
            continue;
        }
        for(int j = 1; j <= n; j++){
            c[j] = cnt[j];
            last1[j] = last[j];
        }
        for(int j = 0; j < f; j++){
            int mn = -1;
            for(int g = 1; g <= n; g++){
                if(g == i)
                    continue;
                if((cnt[i] == c[g] && last1[g] > last[i] || cnt[i] > c[g])
                    && (mn == -1 || c[mn] < c[g]))
                    mn = g;
            }
            c[mn]++;
            last1[mn] = a + j + 1;
        }
        cc = 0;
        for(int j = 1; j <= n; j++){
            if(j == i)
                continue;
            if(c[j] > 0 && c[j] > cnt[i] || (c[j] == cnt[i] && last[i] > last1[j]))
                cc++;
        }
        if(cc >= k || cnt[i] == 0){
            cout << "2 ";
            continue;
        }
        cout << "1 ";
    }
}

int main(){
//    srand(228);
    srand(time(0));
    fast_io;
//    output;
//    freopen("words.in", "r", stdin);
//    freopen("words.out", "w", stdout);
    // int t;
    // cin >> t;
//    scanf("%d", &t);
//    int cnt = 1;
    // while(t--){
//        printf("Case %d: ", cnt);
        solve();
        // cout << "\n";
//        puts("");
//        cnt++;
    // }
    return 0;
}
