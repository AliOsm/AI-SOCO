//Link : https://codeforces.com/problemset/problem/914/D

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define N 500005

int a[N];
int gcdSeg[N*4];

int gcd(int x,int y) {
  if(x==0) {return y;}
  return gcd(y%x,x);
}

void updateGcd(int pos,int l,int r,int ind) {
  if(l==r) {
    gcdSeg[pos] = a[ind];
    return;
  }
  int mid = (l+r)/2;
  if(ind<=mid) {
    updateGcd(pos*2,l,mid,ind);
  } else {
    updateGcd(pos*2+1,mid+1,r,ind);
  }
  gcdSeg[pos] = gcd(gcdSeg[pos*2],gcdSeg[pos*2+1]);
}
int queryGcd(int pos,int l,int r,int ql,int qr) {
  if(r<ql || qr<l) {
    return 0;
  }
  if(ql<=l&& r<=qr) {
    return gcdSeg[pos];
  }
  int mid = (l+r)/2;
  int x = queryGcd(pos*2,l,mid,ql,qr), y = queryGcd(pos*2+1,mid+1,r,ql,qr);
  return gcd(x,y);
}

int traverse(int pos,int l,int r,int ql,int qr,int x) {
  if(r<ql || qr<l) {
    return -1;
  }
  if(gcdSeg[pos]%x==0) {
    return -1;
  }
  if(l==r) {
    return l;
  }
  int mid = (l+r)/2;
  int ret = traverse(pos*2,l,mid,ql,qr,x);
  if(ret!=-1) {
    return ret;
  }
  return traverse(pos*2+1,mid+1,r,ql,qr,x );
}

void solve() {
  a[0] = 2e9;
  int n;scanf("%d ", &n);
  for(int i=1;i<=n;++i) {
    scanf("%d ", &a[i]);
  }
  for(int i=1;i<=n;++i) {
    updateGcd(1,1,n,i);
  }
  int q;scanf("%d ", &q);
  while(q--) {
    int type;scanf("%d ", &type);
    int l,r;scanf("%d %d ", &l,&r);
    if(type==1) {
      int x;scanf("%d ", &x);
      if(queryGcd(1,1,n,l,r)%x==0) {
        printf("YES\n");
      } else {
        int ind = traverse(1,1,n,l,r,x);
        int u = 0;
        if(l<ind) {
          u = queryGcd(1,1,n,l,ind-1);
        }
        if(ind+1<=r) {
          u = gcd(u, queryGcd(1,1,n,ind+1,r));
        }
        if(u%x==0) {
          printf("YES\n");
        } else {
          printf("NO\n");
        }
      }
    } else {
      a[l] = r;
      updateGcd(1,1,n,l);
    }
  }
}
int main() {
    //freopen("input.txt","r",stdin);
    solve();
    return 0;
}
