#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
const int mod = (int) 1e9 + 7;
long long int n , A , B , X;
typedef struct{
    long long int a;
    long long int b;
    long long int c;
    long long int d;
}matrix;
matrix multiply(matrix u , matrix v){
    matrix res;
    res.a = ((1LL * u.a%mod * v.a%mod)%mod + (1LL * u.b%mod * v.c%mod)%mod)%mod;
    res.b = ((1LL * u.a%mod * v.b%mod)%mod + 1LL * (u.b%mod * v.d%mod)%mod)%mod;
    res.c = ((1LL * u.c%mod * v.a%mod)%mod + (1LL * u.d%mod * v.c%mod)%mod)%mod;
    res.d = ((1LL * u.c%mod * v.b%mod)%mod + (1LL * u.d%mod * v.d%mod)%mod)%mod;
    if(res.a >= mod) res.a -= mod;
    if(res.b >= mod) res.b -= mod;
    if(res.c >= mod) res.c -= mod;
    if(res.d >= mod) res.d -= mod;
    return res;
}
long long int solve(long long n){
    matrix mat;
    matrix base;
    base.a = A * 1LL;
    base.b = base.d = 1LL;
    base.c = 0LL;
    mat = base;
    //cout << mat.a << " " << mat.b << " " << mat.c << " " << mat.d << endl;

    //cout << base.a << " " << base.b << " " << base.c << " " << base.d << endl;
    while(n){
        if(n % 2){
            mat = multiply(mat, base);
        }
        base = multiply(base , base);
        n /= 2LL;
    }
    //cout << mat.a << " " << mat.b << " " << mat.c << " " << mat.d << endl;
    long long ret = ( (1LL * (mat.a * X) % mod) + 1LL * (mat.b * B) % mod) % mod;
    cout << ret;
}
int main(){
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    cin >> A >> B >> n >> X;
    solve(n - 1);
    return 0;
}
