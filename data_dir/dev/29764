#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>; using vi = vector<int>;
template <class T> istream &operator>>(istream &, vector<T> &);
template <class T> ostream &operator<<(ostream &, const vector<T> &);
using ll = long long; using vll = vector<long long>;
constexpr int INF = 0x3f3f3f3f; constexpr ll BINF = 0x3f3f3f3f3f3f3f3fLL;

int solve() {
	int n, m, k; cin >> n >> m >> k;
	vi a(n); cin >> a;
	vector<pii> p(n);
	for (int i=0;i<n;i++) p[i] = {a[i], i};
	sort(p.begin(), p.end());
	reverse(p.begin(), p.end());
	vi ans; ll sum = 0;
	for (int i=0;i<m*k;i++) ans.push_back(p[i].second), sum += p[i].first;
	sort(ans.begin(), ans.end());
	cout << sum << endl;
	for (int &x : ans) x++;
	for (int i=0;i+1<k;i++) cout << ans[(i+1)*m-1] << ' ';
	cout << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	// int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}

template <class T> istream &operator>>(istream &is, vector<T> &v) {
	for (auto it=v.begin();it!=v.end();++it) is >> *it;
	return is;
}

template <class T> ostream &operator<<(ostream &os, const vector<T> &v) {
	for (auto it=v.begin();it!=v.end();) os << *it << " \n"[++it==v.end()];
	return os;
}
