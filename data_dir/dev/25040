/*  */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
int a[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n;
	__int64 tot = 0, ans, g, tmp = 0;
	
	
	scanf("%d", &n);
	rep(i, 1, n+1) {
		scanf("%d", &a[i]);
		tmp += a[i];
	}
	
	sort(a+1, a+1+n);
	
	rep(i, 2, n+1)
		tot += a[i]-a[1];
	
	ans = 0;
	rep(i, 1, n) {
		#ifndef ONLINE_JUDGE
			printf("tot = %I64d\n", tot);
		#endif
		ans += tot;
		tot -= 1LL*(a[i+1]-a[i])*(n-i);
	}
	#ifndef ONLINE_JUDGE
		printf("tot = %I64d\n", tot);
	#endif
	
	ans *= 2;
	ans += tmp;
	tot = n;
	g = __gcd(ans, tot);
	ans /= g;
	tot /= g;
	
	printf("%I64d %I64d\n", ans, tot);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
