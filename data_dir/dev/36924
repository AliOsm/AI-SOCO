#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b>a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }
const int N = 5000 + 10, M = 0, Z = 1e9 + 7, ms63 = 0x3f3f3f3f;
template <class T1, class T2>inline void gadd(T1 &a, T2 b) { a = (a + b) % Z; }
int casenum, casei;
int n;
char a[N], b[N];
int main()
{
    while(~scanf("%d", &n))
    {
        scanf("%s", a + 1);
        scanf("%s", b + 1);
        int x = 0, y = 0, z = 0, SUMb = 0;
        for(int i = 1; i <= n; ++i)
        {
            if(a[i] == '0' && b[i] == '0')
            {
                ++x;
            }
            else if(a[i] + b[i] == '0' + '1')
            {
                ++y;
                if(b[i] == '1')++SUMb;
            }
            else if(a[i] == '1' && b[i] == '1')
            {
                ++z;
                ++SUMb;
            }
        }
        vector<int>vt;
        int g = n / 2;
        for(int i = 1; i <= n; ++i)if(SUMb >= 2 && g && a[i] == '1' && b[i] == '1'&& (SUMb - 2 + x) >= min(y, g - 1))
        {
            --z;
            --g;
            SUMb -= 2;
            vt.push_back(i);
        }
        for(int i = 1; i <= n; ++i)if(SUMb && g && a[i] + b[i] == '0' + '1')
        {
            --y;
            --g;
            --SUMb;
            vt.push_back(i);
        }
        for(int i = 1; i <= n; ++i)if(g && a[i] == '0' && b[i] == '0')
        {
            --x;
            --g;
            vt.push_back(i);
        }
        if(g == 0 && SUMb == 0)
        {
            for(auto &x : vt)printf("%d ", x); puts("");
        }
        else puts("-1");
    }
	return 0;
}
