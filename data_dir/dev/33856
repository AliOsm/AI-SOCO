#include<bits/stdc++.h>
//#include<ctime>
//#include <stdlib.h>
#define time ios_base::sync_with_stdio(0);cin.tie(0);
#define dpp(arr,val) memset(arr,val,sizeof (arr))
#define ll long long
#define ull unsigned long long
#define ld long double
#define PQ priority_queue
#define pii pair<int,int>
#define pll pair<ll,ll>
#define S second
#define F first
#define MP make_pair
using namespace std;
ll M=1e9+7;
ll add(ll a,ll b)
{
    return (a%M+b%M)%M;
}
ll sub(ll a,ll b)
{
     return (a%M-b%M+M)%M;

}
ll mul(ll a,ll b)
{
    return (a%M*b%M)%M;
}
ll sumodd(ll num)
{
    return mul(num,num);
}
ll sumeven(ll num)
{
    return mul(num,num+1);
}
ll sumrange(ll st,ll en,ll num)
{
    return (num*(st+en)/2);

}
ll gcd(ll a,ll b)
{
    while(b!=0)
    {
        ll a2=a;
        a=b;
        b=a2%b;
    }
    return a;
}
ll lcm(ll a,ll b)
{
    return a/gcd(a,b)*b;
}
string makeitbinary(ll n)
{
    string s;
    while(n)
    {
        s=s+(char)((n%2)+'0');
        n/=2;
    }
    return s;
}
bool bit(int num,int i)
{
    return((num>>i)&1);
}

const int sz=1e5+10;
int cnt[sz],cntall[sz];
bool check(int i,int maxi)
{

    if (cntall[1]==i||cntall[i]==1){return 1;}
    if (cntall[1]==1&&cntall[maxi]*maxi==i-1){return 1;}
    if (cntall[maxi-1]*(maxi-1)==i-maxi&&cntall[maxi]==1){return 1;}
    return 0;
}

int main()
{
        //myf.open("file.txt");
    //freopen("task.in", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);


    int n;
    cin>>n;
    int maxi=0;
    int last=0;
    for (int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        cntall[cnt[x]]--;
        cnt[x]++;
        cntall[cnt[x]]++;
        maxi=max(maxi,cnt[x]);
        if (check(i+1,maxi))
        {
            last=i+1;
        }
     }
     cout<<last<<endl;

    return 0;
}
