#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) (((n%m) + m)%m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

const int N = 5e5 + 5;
int n;
int arr[N], nxt[N];
vi node[N];
int res;

void dfs(int v)
{
	arr[v] = res--;
	for (auto i : node[v])
		dfs(i);
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int tc;
	cin >> tc;
	while (tc--)
	{
		cin >> n;
		erep(i, 0, n)
			node[i].clear(), arr[i] = -1;
		res = n;
		rep(i, 0, n)
		{
			cin >> nxt[i];
			nxt[i]--;
			if (nxt[i] == -2)
				nxt[i] = i + 1;
			node[nxt[i]].push_back(i);
		}
		dfs(n);
		bool flag = true;
		stack<int> st;
//		erep(i, 1, n)
//			cout << arr[i] << " ";
//		cout << endl;
		rep(i, 0, n)
		{
			while (!st.empty() && arr[i] > arr[st.top()])
			{
//				cout << nxt[st.top()] << " " << st.top() << " " << i << endl;
				if (nxt[st.top()] != i)
				{
					flag = false;
					break;
				}
				st.pop();
			}
			st.push(i);
		}

		if (flag)
		{
			rep(i, 0, n)
				cout << 1 + arr[i] << " ";
		}
		else
			cout << -1;
		cout << endl;
	}

	return 0;
}
