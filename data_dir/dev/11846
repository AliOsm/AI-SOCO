#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>
#include<cassert>


using namespace std;

#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
long long mod = 1000000007LL;
long long large = 2000000000000000000LL;






int ver[] = {-1,0,1,0};
int hor[] = {0,1,0,-1};
int n,m;
vector<vector<char> > g;

bool in(int x,int y){
	return x>=0&&x<n&&y>=0&&y<m;
}

int id(char c){
	return (int)(c-'0');
}
int main(){
	vector<int> dir(4,0);
	for(int i=0;i<4;i++) dir[i] = i;

	cin>>n>>m;
	g.assign(n,vector<char>(m,' '));
	int sr,sc;
	int er,ec;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin>>g[i][j];
			if(g[i][j]=='S'){
				sr = i;
				sc = j;
			}
			if(g[i][j]=='E'){
				er = i;
				ec = j;
			}
		}
	}
	int cnt = 0;
	string t;
	cin>>t;
	do{
		int ur = sr,uc = sc;
		bool flag =  true;
		for(int i=0;i<(int)t.length();i++){
			int vr = hor[dir[id(t[i])]]+ur;
			int vc = ver[dir[id(t[i])]]+uc;
			if(in(vr,vc)){
				if(g[vr][vc]!='#'){
					ur = vr;
					uc = vc;
					if(g[ur][uc]=='E') break;
					continue;
				}
			}
			flag = false;
			break;
		}
		if(flag&&ur==er&&uc==ec) cnt++;


	}while(next_permutation(dir.begin(),dir.end()));

	cout<<cnt<<endl;


    return 0;

}
