#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<math.h>
#include<unordered_set>
#include<queue>
#include<random>
#include<ctime>
#include<unordered_map>
#include <iomanip> 
#include<iterator>
#include<bitset>
#include<string>
#include<cstring>
#pragma warning(disable : 4996)

#define ll long long
#define double long double
#define all(aaa) aaa.begin(), aaa.end()
using namespace std;

const int N = 1005;
int s[N], d[N][N], g[N][N], ct[10];
string t[N];
int dx[4] = { 0, 0, 1, -1 }, dy[4] = { -1, 1, 0, 0 };
vector<pair<int, int>> v[10];
int n, m, p;

bool f(int i, int j) {
	for (int k = 0; k < 4; k++) {
		int x = i + dx[k], y = j + dy[k];
		if (x >= 0 && x < n && y >= 0 && y < m && t[x][y] == '.' && g[x][y] == -1) {
			return true;
		}
	}
	return false;
}

signed main()
{
#ifdef HOME
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);


	memset(g, -1, sizeof(g));

	
	cin >> n >> m >> p;

	for (int i = 0; i < p; i++) {
		cin >> s[i];
	}

	for (int i = 0; i < n; i++) {
		cin >> t[i];
	}

	int z = 0;

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			char c = t[i][j];
			if (isdigit(c)) {
				c -= '1';
				ct[c]++;
				g[i][j] = 0;
				if (f(i, j)) {
					v[c].push_back({ i, j });
					z++;
				}
			}
		}
	}


	for (int i = 0; i < p && z > 0; i = (i + 1) % p) {
		queue<pair<int, int>> q;
		for (auto w : v[i]) {
			q.push(w);
			g[w.first][w.second] = 0;
		}

		z -= v[i].size();
		vector<pair<int, int>> h = v[i];
		v[i].clear();

		while (!q.empty()) {
			int x = q.front().first, y = q.front().second;
			q.pop();
			
			for (int j = 0; j < 4; j++) {
				int a = x + dx[j], b = y + dy[j];
				if (a >= 0 && a < n && b >= 0 && b < m && t[a][b] != '#' && g[a][b] == -1) {
					g[a][b] = g[x][y] + 1;
					h.push_back({ a, b });
					ct[i]++;
					if (g[a][b] < s[i])
						q.push({ a, b });
				}
			}
		}
		for (auto p : h) {
			if (f(p.first, p.second)) {
				v[i].push_back(p);
				z++;
			}
		}
	}
	
	for (int i = 0; i < p; i++)
		cout << ct[i] << " ";









	


	return 0;
}

