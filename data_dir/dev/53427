#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> // Common file
//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
//using namespace __gnu_pbds;
//typedef tree<
//        pair<int, int>, // change type
//        null_type,
//        less<pair<int, int> >, // change type
//        rb_tree_tag,
//        tree_order_statistics_node_update>
//        ordered_set;

typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define sz(x) (int)(x).size()
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(d, v) memset(d, v, sizeof(d))
#define pii pair<int, int>
const double PI = 3.14159265358979323846;
const double eps = (1e-8);


vector<int> adj[105];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
//    freopen("facebook.txt", "w", stdout);
#endif
    int n, m;
    cin >> n >> m;
    rep(i,0,m)
    {
        int x, y;
        cin >> x >> y;
        adj[x].pb(y);
        adj[y].pb(x);
    }

    int fr = 1;
    vector<vector<pii> > ans(n + 1);
    for (int i = 1; i <= n; ++i)
    {
        for (auto to : adj[i])
        {
            ans[i].pb({fr, i});
            ans[to].pb({fr, to});
            fr++;
        }
    }

    fr = 100000000;
    int fc = 100000000;
    for (int i = 1; i <= n; ++i)
    {
        if (!ans[i].empty())
        {
            cout << sz(ans[i]) << '\n';
            for (auto item : ans[i])
                cout << item.first << ' ' << item.second << '\n';
        }
        else
        {
            cout << 1 << '\n';
            cout << fr << ' ' <<  fc << '\n';
            --fr;
            --fc;
        }
    }

    return  0;

}