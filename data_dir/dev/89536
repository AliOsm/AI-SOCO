#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using PII = pair<int, int>;
using VI = vector<int>;

const int INF = 1e9 + 10;

int main() {
#ifdef LOCAL_EXEC
//	freopen("sample.in", "r", stdin);
//	freopen("sample.out", "w", stdout);
#else
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#endif

  int t; cin >> t;
  while (t--) {
    int n, m, k; cin >> n >> m >> k;
    if (k > m - 1) k = m - 1;
    vector<int> a(n);
    for (int i = 0; i < n; i++) {
      cin >> a[i];
    }
    const int left = n - m + 1;

    vector<VI> dp(n, VI(n, 0));
    for (int i = 0; i + left <= n; i++) {
      dp[i][i + left - 1] = max(a[i], a[i + left - 1]);
    }

    for (int len = left + 1; len <= n; len++) {
      for (int i = 0; i + len <= n; i++) {
        dp[i][i + len - 1] = min(
          dp[i][i + len - 2],
          dp[i + 1][i + len - 1]
        );
      }
    }

    int cur = n - k;
    int ans = 0;
    for (int i = 0; i + cur <= n; i++) {
      ans = max(ans, dp[i][i + cur - 1]);
    }

    cout << ans << '\n';
  }

  return 0;
}