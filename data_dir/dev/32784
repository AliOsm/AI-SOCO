	#include <bits/stdc++.h>
	#include<string>
	using namespace std;
	        
	    #define ll long long
	    #define do long double
	    #define ff first
	    #define ss second
	    #define FOR(a,n) for(ll ii=0;ii<n;ii++){    cin>>a[ii];}
	    #define pb push_back
	    #define mp make_pair
	    #define inf LONG_LONG_MAX
	    #define mod  998244353
	    #define FAST ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	    #define N 700010    
	ll d,x,y;

	void extendedEuclid(ll A, ll B) 
	{
	    if(B == 0) 
	    {
	         d = A;
	         x = 1;
	         y = 0;
	    }
	    else 
	    {
	        extendedEuclid(B, A%B);
	        int temp = x;
	        x = y;
	        y = temp - (A/B)*y;
	    }
	}

	ll power(ll x,ll y, ll p) 
	{ 
	    ll res = 1; 
	    x = x % p;
	    while (y > 0) 
	    {  // If y is odd, multiply x with result 
	        if (y & 1) 
	            res = (res*x) % p;
	                    
	        y = y>>1; 
	        x = (x*x) % p;   
	    } 
	    return res; 
	} 

	ll IsPrime(ll n)
	{
	    if(n==0||n==1)
	        return n;
	    if(n%2==0)
	        return (ll)2;
	    if(n%3==0)
	        return (ll)3;
	    else
	    {
	        for(ll i=5;i*i<=n;i+=6)
	        {
	            if(n%i==0)
	                return i;
	            if(n%(i+2)==0)
	                return (i+2);
	        }
	        return n;
	    }
	}
vector<string> v(1000010);

	int main()
	{
	   FAST;
	   ll n,m,k,i,j;
	   string s;
	   cin>>s;
	   map<char,bool> g;
	  	string t;
	  	cin>>t;
	  	for(i=0;i<26;i++)
	  	{
	  		if(t[i]=='1')
	  			g['a'+i]=true;
	  		else
	  			g['a' + i]=false;
	  	}
	  	cin>>k;
	  	n=s.size();
	  	vector<ll> pre(n,0);
	  	for(i=0;i<n;i++)
	  	{
	  		if(g[s[i]]==false)
	  		{
	  			if(i>0)
	  				pre[i]=pre[i-1]+1;
	  			else
	  				pre[i]=1;
	  		}
	  		else if(i>0)
	  			pre[i]=pre[i-1];
	  	}

	  	ll ans=0;
	  	set<string> ss;
	  	for(i=1;i<=n;i++)
	  	{
	  		for(j=0;j<n-i+1;j++)
	  		{
	  			ll temp=pre[i+j-1];
	  			if(j>0)
	  				temp-=pre[j-1];
	  			if(temp<=k)	
	  				ss.insert(s.substr(j,i));
	  		}
	  		ans+=ss.size();
	  		ss.clear();
	  	}
	  	cout<<ans;

	   
	}
