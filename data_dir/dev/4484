//GlebsHP problems are easy
#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=123;
int f[mx][3];
int d[mx];
int n;
int bat(int b,int i){
   if(b&(1<<i))return 1;
   return 0;
}
int solve(int i,int b){
   if(i==n)return 0;
   if(f[i][b]!=-1)return f[i][b];
   f[i][b]=solve(i+1,0)+1;
   if(bat(d[i],0)==1 && b!=1)f[i][b]=min(f[i][b],solve(i+1,1));
   if(bat(d[i],1)==1 && b!=2)f[i][b]=min(f[i][b],solve(i+1,2));
   return f[i][b];
}
int main(){
   scanf("%d",&n);
   memset(f,-1,sizeof f);
   for(int i=0;i<n;i++)scanf("%d",d+i);
   int ans=solve(0,0);
   printf("%d\n",ans);
   return 0;
}
