#include <iostream>
#include<algorithm>
#include<string>
#include<map>
#include <iterator>
#include<iomanip>
#include<vector>
#include<cmath>
#include <cstdio>
#include<queue>
#include<stack>
#include<list>
#include<stdio.h>
#include<set>
#include <functional>

#define mod 1000000007
#define mod2 30000000
#define pa(a,b) make_pair(a,b)
#define f first
#define s second
#define pb(a)  push_back(a)
#define all(a) a.begin() , a.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define LL  long long int
#define oo 1e9
#define pi 3.141592653589793238
#define eps  1e-6



LL maxx(LL a , LL b){ return a>b ?  a : b ;}
LL minn(LL a , LL b){ return a>b ?  b : a ;}

using namespace std;
int dx[] = {1 , 1 ,1 , 0 , 0  , -1 , -1  , -1  , 0 };
int dy[] = { -1 , 0  , 1 , 1 , -1 , 0 , 1 , -1 , 0 };
void boostIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
LL gcd(LL a, LL b) {
    return b == 0 ? a : gcd(b, a % b);
}
int int_gcd(int a, int b) {
    return b == 0 ? a : gcd(b, a % b);
}
LL lcm(LL a , LL b )
{
    return (a*b)/gcd(a , b);
}
LL poww(LL base, LL exp){
  base %= mod;
  LL result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}
int main()
{
    int n ; string s , t ; cin >> n  ;

    cin >> s >> t ;

    int vis[2][200] = {0} ;

    for(int i = 0 ; i < n ; i++){
        vis[0][s[i]]++ , vis[1][t[i]]++ ;
    }
    for(int i = 'a' ; i <= 'z' ; i++){
        if(vis[0][i] != vis[1][i]){
            return cout << -1 << endl  , 0 ;
        }
    }

    vector<int>ans ;

    for(int i = 0 ; i < n ; i++){
        if(s[i] != t[i]){
            for(int j = i + 1 ; j < n ; j++){
                if(s[j] == t[i]){
                    for(int k = j ; k > i ; k--){
                        ans.pb(k)  , swap(s[k] , s[k - 1]);
                    }
                    //swap(s[j] , s[i]) ;
                    break ;
                }
            }
        }
    }

    cout << ans.size() << endl ;

    for(int i = 0 ; i < ans.size() ; i++){
        cout << ans[i] << " " ;
    }
}
