#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#define int long long
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define all(x) x.begin(), x.end()
using namespace std;

const int mod = 998244353;

int n, k;
int dp[1005][5][2005];

int sol (int row, int bit, int cur) {
  if (row == n - 1) {
    if (cur == k) return 1;
    return 0;
  }
  int &ret = dp[row][bit][cur];
  if (ret != -1) return ret;
  ret = 0;
  for (int i = 0; i < 4; i++) {
    int add = 0;
    if (bit == 0) {
      if (i != 0) add = 1;
    } else if (bit == 1) {
      if (i == 2) add = 2;
    } else if (bit == 2) {
      if (i == 1) add = 2;
    } else if (bit == 3) {
      if (i != 3) add = 1;
    } else assert (0);
    ret = (ret + sol (row + 1, i, cur + add)) % mod;
  }
  return ret;
}

signed main () {
  memset (dp, -1, sizeof dp);
  scanf ("%lld%lld", &n, &k);
  int res = 0;
  for (int i = 0; i < 4; i++) {
    res = (res + sol (0, i, ((i == 0 || i == 3) ? (1) : (2)))) % mod;
  }
  printf ("%lld", res);
  return 0;
}

