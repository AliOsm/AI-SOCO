//http://codeforces.com/problemset/problem/538/B

//template by murugappan....Copied from chamow :p

#include<bits/stdc++.h>
using namespace std;

#define ll int
#define ld long double
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define priq(i,comp) priority_queue( i, vector< i >,comp)
template<class t>
t lcm(t a,t b)
{
    return ((a*b)/__gcd(a,b));
}
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

//end of template
const ll maxn=1e6+1;
vector<ll> numbers;
bool binarise(ll num)
{
    ll arr[32];
    for(ll i=(31);i>=0;i--)
    {
        arr[i]=num%2;
        num/=2;
    }
    ll val=0;
    for(ll i=0;i<32;i++)
    {
        val=val*10+arr[i];
    }
    if(val<maxn)
    {
        numbers.pb(val);
        return true;
    }
    else
        return false;
}
ll dp[64][maxn];
int main()
{
    /*
        assert(freopen("input.txt","r",stdin));
        assert(freopen("output.txt","w",stdout));
    */
    fastread;
    for(ll i=1;binarise(i);i++);
    for(ll i=1;i<maxn;i++)
        dp[0][i]=i;
    for(ll i=1;i<numbers.size();i++)
    {
        for(ll j=1;j<maxn;j++)
        {
            if(numbers[i]>j)
                dp[i][j]=dp[i-1][j];
            else
                dp[i][j]=min(dp[i-1][j],1+dp[i][j-numbers[i]]);
        }
    }
    ll n;
    cin>>n;
    ll ptr=numbers.size()-1;
    ll rem=n;
    cout<<dp[ptr][rem]<<"\n";
    while(ptr>=0 && rem>0)
    {
        while(ptr>0 && dp[ptr][rem]==dp[ptr-1][rem])
            ptr--;
        if(ptr==0)
        {
            for(ll i=0;i<rem;i++)
                cout<<1<<' ';
            rem=0;
            break;
        }
        cout<<numbers[ptr]<<' ';
        rem-=numbers[ptr];
    }
    return 0;
}

