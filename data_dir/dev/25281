#include <bits/stdc++.h>
#define ll long long int
#define f first
#define s second
#define mk make_pair
#define fastio ios_base::sync_with_stdio(0),cin.tie(0);
using namespace std;
int const MAXN=5000;
int dx[]={0,0,1,-1};
int dy[]={-1,1,0,0};
pair<int,int> v[MAXN][MAXN];
int  v2[MAXN][MAXN];
char g[MAXN][MAXN];
int n,m;
bool valid (int i,int j){
    return i>=0 && j>=0 && i<n && j<m && g[i][j]!='*';
}

int main (){
    cin>>n>>m;
    int x0,y0;
    cin>>x0>>y0;
    x0--,y0--;
    int l,r;
    cin>>l>>r;
    for (int i=0;i<n;i++){
        for (int j=0;j<m;j++)
            cin>>g[i][j];
    }
    int cnt=0;
    queue <pair<int,int>> q;
    q.push (mk(x0,y0));
    v[x0][y0]=mk(l,r);
    v2[x0][y0]=1;

    while (!q.empty()){
        auto cur = q.front();
        q.pop();
        for (int i=0;i<4;i++){
            int xx=cur.f+dx[i];
            int yy=cur.s+dy[i];
            if (!valid(xx,yy) or (v[xx][yy].f>=v[cur.f][cur.s].f && v[xx][yy].s>=v[cur.f][cur.s].s && v2[xx][yy])) continue;
            if (i==0 ){
                if (v[cur.f][cur.s].f<=0) continue;
                if ((v[xx][yy].f>=v[cur.f][cur.s].f-1 && v[xx][yy].s>=v[cur.f][cur.s].s && v2[xx][yy])) continue;
                v[xx][yy].f=max(v[xx][yy].f,v[cur.f][cur.s].f-1);
                v[xx][yy].s=max(v[xx][yy].s,v[cur.f][cur.s].s);
            }else if (i==1){
                if (v[cur.f][cur.s].s<=0) continue;
                if ( (v[xx][yy].f>=v[cur.f][cur.s].f && v[xx][yy].s>=v[cur.f][cur.s].s-1 && v2[xx][yy])) continue;
                 v[xx][yy].f=max(v[xx][yy].f,v[cur.f][cur.s].f);
                 v[xx][yy].s=max(v[xx][yy].s,v[cur.f][cur.s].s-1);
            }else {
                 v[xx][yy].f=max(v[xx][yy].f,v[cur.f][cur.s].f);
                 v[xx][yy].s=max(v[xx][yy].s,v[cur.f][cur.s].s);
            }
            v2[xx][yy]=1;
            q.push(mk(xx,yy));
        }
    }
    for (int i=0;i<n;i++){
        for (int j=0;j<m;j++)
            cnt+=(v2[i][j]>=1);
        }
    cout<<cnt;

}