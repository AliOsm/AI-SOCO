#include <bits/stdc++.h>
using namespace std;

const int N = 1e5+5;
const int M = 10;
#define ll long long
int per[M][N];

int pos[M][N];

const int mod[2]= {(int)1e9+7,(int)1e9+9};

int C;

int add(int a,int b,int m){
    return ((a + b)%m + m)%m;
}
int mul(int a,int b,int m){
    return ((ll)a*b%m + m)%m;
}

int hashing[M][2][N];

int mm[2][N];
int getNumber(int p,int bit,int i,int j){

    int cur =  add(hashing[p][bit][j] ,-mul(hashing[p][bit][i-1], mm[bit][j-i+1],mod[bit]), mod[bit]);
    return cur;
}


void solve(){
    int n,m;
    scanf("%d%d",&n,&m);
    srand(time(NULL));
    C = 10;

    mm[0][0]= mm[1][0]= 1;

    for(int i=1;i<=n;++i){
        for(int bit=0;bit<2;++bit){
            mm[bit][i]= mul(mm[bit][i-1],C,mod[bit]);
        }
    }

    for(int i=0;i<m;++i){
        for(int j=1;j<=n;++j){
            scanf("%d",&per[i][j]);
            pos[i][per[i][j]] = j;
        }
        for(int j=1;j<=n;++j){
            for(int m=0;m<2;++m)
                hashing[i][m][j] = add(mul(hashing[i][m][j-1],C,mod[m]),per[i][j],mod[m]);
        }
    }

    ll ret = 0;

    for(int i=1;i<=n;++i){
        int val = per[0][i];
        int l = 1,r = n,mid;

        for(int j=0;j<m;++j){
            r = min(r,n - pos[j][val] + 1);
        }
        while(l<r){
            mid = (l+r+1)/2;
            pair<int,int> tmp = make_pair(getNumber(0,0,i,i+mid-1),getNumber(0,1,i,i+mid-1));

            bool ok = true;
            for(int j=1;j<m;++j){
                int st = pos[j][val];
                pair<int,int> v = make_pair(getNumber(j,0,st,st+mid-1), getNumber(j,1,st,st+mid-1));
                if(v!= tmp){
                    ok = false;
                    break;
                }
            }
            if(ok){
                l = mid;
            } else {
                r = mid-1;
            }
        }
        ret += l;
    }

    cout<<ret<<'\n';
}

int main(){
    //freopen("input.txt","r",stdin);
    solve();
}