/*
OPTIMISE THIS!!!!!!!!!!!!
#include<iostream>
#include<cmath>
using namespace std;
const int N=5005;
double dp[2][N],Pt[N];
double ans,z,y,A,cc;
int pT[N];
int n,T,x,i,j,cur,par,nn;
template <class T> inline void in(T &x) {
x = 0; int f = 0; char ch = getchar();
for (; ch<'0' || ch>'9';) {if (ch=='-') f=-1; ch = getchar();}
	for (; ch>='0' && ch<='9';) x = x*10 + ch-'0', ch = getchar();
		x = f ? -x : x;
}
int main()
{
	in(n);in(T);
	for(i=0;i<n;i++)
	{
		in(x);in(pT[i]);
		Pt[i]=(double)x/100.0;
	}
	dp[0][0]=1,ans=0;
	cur=0,par=1;
	for(i=1;i<=n;i++)
	{
		cur=cur^par;
		par=cur^par;
		cur=cur^par;
		dp[cur][0]=0;
		z=1.0,cc=1.0-Pt[i-1],nn=pT[i-1];
		while(nn)
		{
			if(nn&1) z=z*cc;
			cc=cc*cc;
			nn>>=1;
		}
		if(i<n)
		{
			A=0,y=1;
			for(j=1;j<=T;j++)
			{
				if(pT[i-1]==1) dp[cur][j]=dp[par][j-1];
				else if(j<pT[i-1]) dp[cur][j]=dp[cur][j-1]+Pt[i-1]*(dp[par][j-1]-dp[cur][j-1]);
				else if(j==pT[i-1]) dp[cur][j]=dp[cur][j-1]+Pt[i-1]*(dp[par][j-1]-dp[cur][j-1])+dp[par][0]*z;
				else dp[cur][j]=dp[cur][j-1]+Pt[i-1]*(dp[par][j-1]-dp[cur][j-1])+(dp[par][j-pT[i-1]]-dp[par][j-1-pT[i-1]])*z;
			}
			for(j=T;j>=T-pT[i]+1;j--)
			{
				A+=(dp[cur][j]*y);
				y*=(1.0-Pt[i]);
			}
			ans+=(A*i);
		}
		else
		{
			A=0;
			for(j=1;j<=T;j++)
			{
				if(pT[i-1]==1) dp[cur][j]=dp[par][j-1];
				else if(j<pT[i-1]) dp[cur][j]=dp[cur][j-1]+Pt[i-1]*(dp[par][j-1]-dp[cur][j-1]);
				else if(j==pT[i-1]) dp[cur][j]=dp[cur][j-1]+Pt[i-1]*(dp[par][j-1]-dp[cur][j-1])+dp[par][0]*z;
				else dp[cur][j]=dp[cur][j-1]+Pt[i-1]*(dp[par][j-1]-dp[cur][j-1])+(dp[par][j-pT[i-1]]-dp[par][j-1-pT[i-1]])*z;
				A+=dp[cur][j];
			}
			ans+=(A*n);
		}

	}
	printf("%.10lf",ans);
	return 0;
}
*/
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <queue>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define INF 1000000000
#define FOR(i, a, b) for(int i=int(a); i<int(b); i++)
#define FORC(cont, it) for(decltype((cont).begin()) it = (cont).begin(); it != (cont).end(); it++)
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;

#define maxN 5001

int N, T, t[maxN];
double p[maxN], dp[2][maxN];

int main() {
	cout << fixed << setprecision(9);
	while (cin >> N >> T) {
		FOR(i, 0, N) {
			cin >> p[i] >> t[i];
			p[i] /= 100;
		}
		for(int i=N-1; i>=0; i--) {
			double precalc = 0;
			double ti2 = 1, ti1;
			FOR(j, 0, t[i] - 2) ti2 *= 1 - p[i];
			ti1 = ti2;
			if (t[i] >= 2) ti1 *= 1 - p[i];
			FOR(j, 1, T+1) {
				if (t[i] >= 2) {
					if (j >= t[i]) precalc -= (dp[i + 1&1][j - t[i]] + 1)*ti2 *p[i];
					precalc *= 1 - p[i];
					precalc += (dp[i + 1&1][j - 1] + 1) *p[i];
				}
				dp[i&1][j] = precalc;
				if(j>=t[i]) dp[i&1][j] += (dp[i + 1&1][j - t[i]] + 1) * ti1;
			}
		}
		cout << dp[0][T] << endl;
	}
	return 0;
}