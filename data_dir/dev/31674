#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>


using namespace std;
using namespace __gnu_pbds;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,a,n) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll>pll;
typedef vector<pii> vpii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

mt19937 gen(chrono::system_clock::now().time_since_epoch().count());

template<typename T1,typename T2>bool umin(T1 &x,const T2&y){if(x>y)return x=y,true;return false;}
template<typename T1,typename T2>bool umax(T1 &x,const T2&y){if(x<y)return x=y,true;return false;}

const int maxn=(int)3e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

char s[300][300];
int ans;
int dx[]={-1,1,0,0};
int dy[]={0,0,-1,1};

int main() {
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);

    int n, m;
    cin >> n >> m;
    int xs, ys, xf, yf;
    for(int i = 0; i < n; ++i) {
        for(int j = 0; j < m; ++j) {
            cin >> s[i][j];
            if (s[i][j] == 'S') xs = i, ys = j;
            if (s[i][j] == 'E') xf = i, yf = j;
        }
    }
    string t;
    cin >> t;
    vector <int> p(4);
    rep(i,0,4)p[i]=i;
    do{
        int k=t.length();
        bool ok = true;

        int x = xs, y = ys;
        for(int i=0;i<k;++i){
            int dir = p[t[i]-'0'];
            x += dx[dir];
            y += dy[dir];
            if (x == xf && y == yf) {
                break;
            }
            if (x < 0 || y < 0 || x >= n || y >= m || s[x][y] == '#') {
                ok = 0;
                break;
            }
        }
        if (ok && s[x][y] == 'E') {
            ans++;
        }
    }while(next_permutation(p.begin(), p.end()));
    cout << ans << endl;
    return 0;
}
