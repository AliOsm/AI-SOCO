#include <bits/stdc++.h> 
#include <bitset>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include <chrono>
#include <random>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define MOD2 1000000009
#define INF 2000000000
#define DESPACITO 1000000000000000
#define E 998244353
#define pb push_back
#define mp make_pair
#define double long double
#define pdd pair<double,double>
#define ll long long
 
using namespace std;
//using namespace __gnu_pbds;
 
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
 
map<int,map<int,set<pair<int,int>>>>pts;
map<int,multiset<pair<int,int>>>pts2;
multiset<pair<int,int>>pts3;
int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int n;
    cin >> n;
    REP(i,1,n)
    {
        int x,y,z;
        cin >> x >> y >> z;
        pts[x][y].insert(mp(z,i));
        pts2[x].insert(mp(y,i));
        pts3.insert(mp(x,i));
    }
    vector<pair<int,int>>ans;
    for(auto f:pts)
    {
        int i = f.first;
        for(auto it:pts[i])
        {
            for(auto it2 = (it.second).begin();it2 != (it.second.end());)
            {
                it2++;
                if(it2 == (it.second).end())
                    break;
                it2--;
                int u = (*it2).second;
                pts2[i].erase(mp(it.first,u));
                it2++;
                int v = (*it2).second;
                pts2[i].erase(mp(it.first,v));
                it2++;
                pts3.erase(mp(i,u));
                pts3.erase(mp(i,v));
                ans.pb(mp(u,v));
            }
        }
    }
    for(auto f:pts2)
    {
        int i = f.first;
        if(!pts2[i].empty())
        {
            for(auto it = pts2[i].begin();it != pts2[i].end();)
            {
                it++;
                if(it == pts2[i].end())
                    break;
                it--;
                int u = (*it).second;
                pts3.erase(mp(i,u));
                it++;
                int v = (*it).second;
                pts3.erase(mp(i,v));
                it++;
                ans.pb(mp(u,v));
            }
        }
    }
    if(!pts3.empty())
    {
        for(auto it = pts3.begin();it != pts3.end();)
        {
            int u = (*it).second;
            it++;
            int v = (*it).second;
            it++;
            ans.pb(mp(u,v));
        }
    }
    for(auto it:ans)
        cout << it.first << " " << it.second << "\n";
}