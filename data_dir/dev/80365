#include<bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define y0 hi1
#define y1 hi2
#define ll long long
#define mp make_pair
#define pb push_back
#define sqr(a) (a)*(a)
#define ld long double
#define all(a) (a).begin(), (a).end()

using namespace std;

const int N = 100005;

#define int ll

const int inf = 2000000000000000;

struct my
{
    int ans, lef, rig;
    int sum;
} tree[4*N], nul;

int r[4*N], q, w, n, m, nxt[N], d[N], i, sz, h[N];

my merger(my x, my y, int d)
{
    my f;
    if(x.ans==0||y.ans==0)d=0;
    f.sum = x.sum + y.sum + d;
    f.lef = max(x.lef + d + y.sum, y.lef);
    f.rig = max(y.rig + d + x.sum, x.rig);
    f.ans = max(max(x.ans, y.ans), x.lef + y.rig + d);
    return f;
}

my get(int v, int lv, int rv, int l, int r)
{
    if(l>r||lv>r||rv<l)return nul;
    if(lv>=l&&rv<=r)return tree[v];
    int mid=(lv+rv)/2;
    return merger(get(v*2, lv, mid, l, r), get(v*2+1, mid+1, rv, l, r), d[mid]);
}

main()
{
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    //freopen("1.txt","r",stdin);
    cin>>n>>m;
    nul.ans = 0;
    nul.lef = 0;
    nul.rig = 0;
    for(i=1; i<=n; i++)
        cin>>d[i];
    int o=d[n];
    d[n]=0;
    for(i=1; i<=n; i++)
        cin>>h[i];
    sz=1;while(sz<n)sz*=2;
    for(i=sz; i<sz+n; i++)
    {
        tree[i].lef = 2*h[i-sz+1];
        tree[i].rig = 2*h[i-sz+1];
        tree[i].ans = 2*h[i-sz+1];
        tree[i].sum = 0;
        r[i] = i-sz+1;
    }
    for(i=sz+n+1; i<2*sz; i++)
        tree[i]=nul;
    for(i=sz-1; i>0; i--)
    {
        tree[i] = merger(tree[i*2], tree[i*2+1], d[r[i*2]]);
        r[i] = r[i*2+1];
    }
    while(m--)
    {
        cin>>q>>w;
        if(q<=w)
        {
            int r=0;
            my f1=get(1, 1, sz, 1, q-1);
            my f2=get(1, 1, sz, w+1, n);
            //cout<<f1.ans<<" "<<f2.ans<<endl;
            if(f1.ans==-inf)r=f2.ans; else
            if(f2.ans==-inf)r=f1.ans; else r=merger(f2, f1, o).ans;
            cout<<r<<"\n";
        }else cout<<get(1, 1, sz, w+1, q-1).ans<<"\n";
    }
}
