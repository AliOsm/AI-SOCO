#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))
#define x(t) get<0>(t)
#define y(t) get<1>(t)
#define z(t) get<2>(t)

template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

typedef long long LL;
typedef tuple<int, int> T2;
typedef tuple<int, int, int> T3;

#define INF (0x3f3f3f3f)

#define MAXN (100005)

int in[MAXN];
int leftright[MAXN];
int rightleft[MAXN];
int N;

void solve(int a[], int x[]) {
    a[0] = 1;
    for (int i = 1; i < N; i++) {
        if (x[i] <= a[i - 1]) {
            a[i] = x[i];
        } else {
            a[i] = a[i - 1] + 1;
        }
    }
}

int main() {
    scanf("%d", &N);
    REP(i, N) scanf("%d", &in[i]);

    solve(leftright, in);
    reverse(in, in + N);
    solve(rightleft, in);
    reverse(rightleft, rightleft + N);
    /*
    REP(i, N) cout << leftright[i] << " ";
    cout << endl;
    REP(i, N) cout << rightleft[i] << " ";
    cout << endl;
    */
    int ans = 1;
    REP(i, N) {
        maxa(ans, min(leftright[i], rightleft[i]));
    }
    printf("%d\n", ans);
    return 0;
}
