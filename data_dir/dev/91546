#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>
#include <random>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2 * 1000 * 1000 * 1000;
ll LINF = (ll)4e18;
using namespace std;
//ll mod = 1e9 + 7;
#define M_PI       3.14159265358979323846   // pi

const int maxn = 2e5 + 5;

int cnt[maxn];

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("domino-covering-1.in", "r", stdin);
	//freopen("domino-covering-1.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	vector<int>a(n);

	for (auto &x : a) {
		cin >> x;
		cnt[x]++;
	}

	int mx = -1;

	for (int sum = 0; sum <= 2e5; sum++) {
		int now = 0;
		for (int i = 0; i < n; i++) {
			int cur = a[i];
			int need = sum - a[i];

			if (need == cur || need < 0) continue;

			if (cnt[cur] > 0 && cnt[need] > 0) {
				now++;
				cnt[cur]--;
				cnt[need]--;
			}
		}

		for (auto &x : a) {
			cnt[x] = 1;
		}
		
		if (now > mx) {
			mx = now;
		}
	}
	cout << mx;
	return 0;
}