//**KEEP IT SHORT AND SIMPLE**
#include <bits/stdc++.h>
#define IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define REP(i,a,b) for (int i = a; i < b; i++)
#define NL '\n'
#define F first
#define S second
#define dot(a, b) (conj(a) * (b)).real()
#define cross(a, b) (conj(a)* (b)).imag()
using namespace std;
typedef long long ll;
typedef long double ld;
typedef bool bl;
typedef vector < vector<long long> > vvl;
typedef vector <long long> vll;
typedef pair <long long, long long> pll;
typedef map <long long, long long> mll;
typedef map <long long, bool> mlb;
typedef priority_queue<long long, vector<long long>, greater<long long> > minPq;
typedef tuple<ll, ll, ll> line;
typedef complex<double> point;
const double pi = 2 * acos(0.0);
const int OO = 0x3f3f3f3f;
using namespace std;
int main()
{
    IO
    ll TC, n, x, y, d;
    cin >> TC;
    while(TC--)
    {
        cin >> n >> x >> y >> d;
        ll dis1 = y - 1, dis2 = n - y, Min = LONG_MAX;
        if(abs(y - x) % d == 0)
        {
            cout << abs(y - x) / d << NL;
            continue;
        }
        if(dis1 % d == 0)
        {
            dis1 = ceil((x - 1) * 1.0 / d) + dis1 / d;
            Min = min(Min, dis1);
        }
        if(dis2 % d == 0)
        {
            dis2 = ceil((n - x) * 1.0 / d) + dis2 / d;
            Min = min(Min, dis2);
        }
        cout << (Min == LONG_MAX ? -1 : Min) << NL;
    }
    return 0;
}
