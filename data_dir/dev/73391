#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <fstream>
#include <list>
#include <set>
#include <climits>
#include <map>
#include <queue>
#include <stack>
#include <complex>
#include <cmath>
#include <sstream>
#include <deque>
#include <utility>
#include <bitset>
#include <numeric>

using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define REV(i,a,b) for(int i=(a);i>=(b);i--)
#define mp make_pair
#define pb push_back
#define oo (1 << 30)
#define sz(v) (int)v.size()
#define all(c) (c).begin(),(c).end()
#define rall(c) (c).rbegin(),(c).rend()
#define mem(s,v) memset(s,v,sizeof(s))
#define MAX 1005
#define iter(it,s) for(__typeof(s.begin())it=s.begin();it!=s.end();it++)

typedef long long ll;
typedef complex<double> point;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<string> vs;
typedef pair<int, int> pi;
typedef vector<pi> vpi;
#define EPS 1e-9
#define vec(a,b) ((b)-(a))
#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define X real()
#define Y imag()

int dx[] = { 0, 0, 1, -1, 1, 1, -1, -1, 0 };
int dy[] = { 1, -1, 0, 0, -1, 1, -1, 1, 0 };

int n;
int v[100005], memo[100005][3];

int rec(int idx, int t) {
	if (idx == n)
		return 0;
	int &res = memo[idx][t];
	if (res != -1)
		return res;
	res = oo;
	if (t || idx == n - 1)
		res = min(res, rec(idx + 1, t) + (v[idx] <= 0));
	else {
		res = min(res, rec(idx + 1, 0) + (v[idx] >= 0));
		res = min(res, rec(idx + 1, 1) + (v[idx] >= 0));
	}
	return res;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("test.in", "rt", stdin);
#endif
		freopen("input.txt", "rt", stdin);
		freopen("output.txt", "wt", stdout);
	ios::sync_with_stdio(false);
	cin >> n;
	FOR (i , 0 , n)
		cin >> v[i];
	mem (memo, -1);
	cout << rec(0, 0) << endl;
	return 0;
}
