#include <bits/stdc++.h>

using namespace std;

vector <int> ans[2];

void out() {
  assert(!ans[0].empty() && !ans[1].empty());
  puts("Yes");
  printf("%d %d\n", (int)ans[0].size(), (int)ans[1].size());
  for (int i = 0; i < 2; ++i) {
    for (int e : ans[i]) {
      printf("%d ", e + 1);
    }
    putchar('\n');
  }
  exit(0);
}

const int N = 300010;

pair <int, int> a[N];
int b[2][N];
int f[2][N];

int main() {
  int n;
  int x[2];
  scanf("%d %d %d", &n, x + 0, x + 1);
  for (int i = 0; i < n; ++i) {
    scanf("%d", &a[i].first);
    a[i].second = i;
  }
  sort(a, a + n);
  reverse(a, a + n);
  ans[0].clear();
  ans[1].clear();
  for (int i = 0; i < 2; ++i) {
    for (int j = 0; j < n; ++j) {
      b[i][j] = (x[i] + a[j].first - 1) / a[j].first;
    }
    f[i][0] = (b[i][0] == 1 ? 0 : -1);
    for (int j = 1; j < n; ++j) {
      f[i][j] = f[i][j - 1];
      if (b[i][j] <= j + 1) {
        f[i][j] = j;
      }
    }
  }
  for (int s = 0; s < 2; ++s) {
    int mx = (int)-2e9;
    int p = -1;
    for (int i = n - 1; i >= 0; --i) {
      int j = i - b[s][i];
      if (j + 1 < 0) {
        continue;
      }
      if (j >= 0) {
        int k = f[1 - s][j];
        if (k != -1) {
          for (int it = j + 1; it <= i; ++it) {
            ans[s].push_back(a[it].second);
          }
          for (int it = k - b[1 - s][k] + 1; it <= k; ++it) {
            ans[1 - s].push_back(a[it].second);
          }
          out();
        }
      }
      if (mx - (i + 1) + (j + 1) >= 0) {
        for (int it = j + 1; it <= i; ++it) {
          ans[s].push_back(a[it].second);
        }
        for (int it = 0; it <= j; ++it) {
          ans[1 - s].push_back(a[it].second);
        }
        for (int it = i + 1; it <= p; ++it) {
          ans[1 - s].push_back(a[it].second);
        }
        out();
      }
      if ((i + 1) - b[1 - s][i] > mx) {
        mx = (i + 1) - b[1 - s][i];
        p = i;
      }
    }
  }
  puts("No");
}
