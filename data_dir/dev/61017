#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 10;
vector<int> graph[N];
bool vis[N];
vector<int> ve;
void dfs(int v) {
	if(vis[v]) {
		return;
	}
	vis[v] = true;
	ve.push_back(v);
	for(int u : graph[v]) {
		dfs(u);
	}
}
int deg[N];
int main() {
	int n, m;
	scanf("%d %d", &n, &m);
	for(int i = 0, u, v; i < m; i++) {
		scanf("%d %d", &u, &v);
		graph[u].push_back(v);
		graph[v].push_back(u);
		deg[u]++, deg[v]++;
	}
	int ans = 0;
	for(int i = 1; i <= n; i++) {
		ve.clear();
		dfs(i);
		if(ve.size() >= 3) {
			bool ok = 1;
			for(int e : ve) {
				if(deg[e] != 2) {
					ok = 0;
					break;
				}
			}
			if(ok) ans++;
		}
	}
	printf("%d\n", ans);
	return 0;
}