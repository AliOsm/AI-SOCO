#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PI;
int x[24],y[24],dp[1<<24],pre[1<<24];
inline int get_dist(int x,int y,int x2,int y2){
	return (x2-x)*(x2-x)+(y2-y)*(y2-y);
}
int dist0[24],dist[24][24];

int main(){
	int x0,y0,n;
	scanf("%d%d%d",&x0,&y0,&n);
	for(int i=0;i<n;i++){
		scanf("%d%d",x+i,y+i);
		dist0[i]=get_dist(x0,y0,x[i],y[i]);
		for(int j=0;j<=i;j++)
			dist[i][j]=dist[j][i]=get_dist(x[i],y[i],x[j],y[j]);
	}
	memset(dp,0x3f,sizeof dp);
	dp[(1<<n)-1]=0;
	for(int s=(1<<n)-1;s>=0;s--){
		int lowbit=-1,nxt;
		for(int i=0;i<n;i++){
			if(s&(1<<i)){
				if(lowbit==-1) lowbit=i;
				nxt=s^(1<<i);
				if(dp[nxt]>dp[s]+dist0[i]*2){
					dp[nxt]=dp[s]+dist0[i]*2;
					pre[nxt]=s;
				}
				nxt^=(1<<lowbit);
				if(dp[nxt]>dp[s]+dist0[i]+dist0[lowbit]+dist[i][lowbit]){
					dp[nxt]=dp[s]+dist0[i]+dist0[lowbit]+dist[i][lowbit];
					pre[nxt]=s;
				}
			}
		}
	}
	printf("%d\n",dp[0]);
	int s=0,limit=(1<<n)-1;
	while(s!=limit){
		int del=s^pre[s];
		s=pre[s];
		printf("0 ");
		for(int i=0;i<n;i++)
			if(del&(1<<i))
				printf("%d ",i+1);
	}
	printf("0\n");
	return 0;
}