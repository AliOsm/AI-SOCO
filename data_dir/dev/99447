#include <iostream>
#include <bits/stdc++.h>
#define ll long long

using namespace std;

char a[1010][1010];
ll dis[5][1010][1010] , Answer = 1e18,n,m;
int X[] = {1,-1,0,0};
int Y[] = {0,0,1,-1};
bool check(int i,int j){
    return (i>=1 && i<=n && j>=1 && j<=m && a[i][j] != '#');
}

void dik(int p , int i , int j){

    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            dis[p][i][j] = 1e18;
        }
    }
    dis[p][i][j] = 0;
    priority_queue < pair < ll , pair < ll , ll > > , vector < pair < ll , pair < ll , ll > > > , greater < pair < ll , pair < ll , ll > > > > Q;
    Q.push({0,{i,j}});
    while(!Q.empty()){
        pair < ll , pair < ll , ll > > x = Q.top();
        Q.pop();
        for(int i=0;i<4;i++){
            if(check(x.second.first + X[i] , x.second.second + Y[i])){
                pair < ll , ll > go;  go = {x.second.first + X[i] , x.second.second + Y[i]};
                ll cost = a[x.second.first + X[i]][x.second.second + Y[i]] == '.';
                if(dis[p][x.second.first + X[i]][x.second.second + Y[i]] <= dis[p][x.second.first][x.second.second] + cost)  continue;
                dis[p][x.second.first + X[i]][x.second.second + Y[i]] = dis[p][x.second.first][x.second.second] + cost;
                Q.push({dis[p][x.second.first + X[i]][x.second.second + Y[i]],{x.second.first + X[i],x.second.second + Y[i]}});
            }
        }
    }
}
int cnt[3];
int main()
{
    ios::sync_with_stdio(0);
    cin.tie();
    cout.tie();
    cin>>n>>m;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cin>>a[i][j];
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if('1'<=a[i][j] && a[i][j]<='3' && !cnt[a[i][j]-'0']){
                cnt[a[i][j]-'0']++;
                dik(a[i][j]-'0',i,j);
            }
        }
    }
    for(int j=1;j<=n;j++){
        for(int k=1;k<=m;k++){
            if(a[j][k] != '#')
            Answer = min(Answer , a[j][k] == '.' ? dis[1][j][k]+dis[2][j][k]+dis[3][j][k]-2 : dis[1][j][k]+dis[2][j][k]+dis[3][j][k]);
        }
    }
    Answer >= 1e18 ? cout<<"-1" : cout<<Answer;
    return 0;
}
