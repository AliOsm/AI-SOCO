#include<bits/stdc++.h>
using namespace std;
const int N = 1e5;
vector<int> a[N];
vector<pair<int, int>> req[N];
int timer, p[N], ans[N], used[N];


int findSet(int v) {
    if (used[v] != timer) {
        used[v] = timer;
        p[v] = v;
        a[v] = {v};
    }
    return p[v] == v ? v : p[v] = findSet(p[v]);
}


void join(int x, int y) {
    x = findSet(x);
    y = findSet(y);

    if (x == y) {
        return;
    }

    if (a[x].size() < a[y].size()) {
        swap(x, y);
    }

    for (int v : a[y]) {
        for (pair<int, int> i : req[v])
            if (findSet(i.first) == x) {
                ans[i.second]++;
            }
        a[x].push_back(v);
    }
    p[y] = x;
}


struct tt{
    int x, y, z;
    bool operator<(tt &a) {return z < a.z;}
};


main() {
#ifndef ONLINE_JUDGE
    freopen("1.txt", "r", stdin);
#endif // ONLINE_JUDGE

    int n, m;
    scanf("%d%d", &n, &m);

    vector<tt> e;

    while (m--) {
        int x, y, z;
        scanf("%d%d%d", &x, &y, &z);
        x--; y--; z--;
        e.push_back({x, y, z});
    }

    sort(e.begin(), e.end());

    int q;
    scanf("%d", &q);

    for (int i = 0; i < q; i++) {
        int x, y;
        scanf("%d%d", &x, &y);
        x--; y--;
        req[x].push_back({y, i});
        req[y].push_back({x, i});
    }

    for (tt i : e) {
        timer = i.z + 100;
        join(i.x, i.y);
    }

    for (int i = 0; i < q; i++) {
        printf("%d\n", ans[i]);
    }

    return 0;
}
