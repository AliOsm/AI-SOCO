#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define EPS      1e-9
#define F        first
#define S        second
#define pi       acos(-1)
#define ll       long long
#define oo       0x3f3f3f3f
#define sz(x)    (int)x.size()
#define sc(x)    scanf("%d",&x)
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()

char str[100100];
int k;

struct cmp {
  bool operator()(const pair<int, int> &a, const pair<int, int> &b) const {
    int len = min(a.S - a.F + 1, b.S - b.F + 1);
    if (str[a.F + len - 1] != str[b.F + len - 1])
      return str[a.F + len - 1] < str[b.F + len - 1];
    return (a.S - a.F < b.S - b.F);
  }
};

multiset<pair<int, int>, cmp> st;

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);
#endif
  scanf("%s%d", str, &k);
  int n = strlen(str);
  if (k > n * 1LL * (n + 1) / 2)
    return puts("No such line.");
  for (int i = 0; i < n; i++)
    st.insert(make_pair(i, i));
  while (--k) {
    pair<int, int> cur = *st.begin();
    st.erase(st.find(cur));
    if (cur.S + 1 < n)
      st.insert(make_pair(cur.F, cur.S + 1));
  }
  pair<int, int> cur = *st.begin();
  for (int i = cur.F; i <= cur.S; i++)
    printf("%c", str[i]);
}
