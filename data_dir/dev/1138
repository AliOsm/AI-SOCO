#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<queue>
#include<algorithm>
#define N 16
#define inf 1000000000
#define pb push_back
#define mp make_pair
using namespace std;
int n,m,tot;
int mat[N][N];
int d[N][N][(1<<N)+10];
bool vis[N][N][(1<<N)+10];
int dx[4] = {-1,1,0,0},dy[4] = {0,0,-1,1};
int x[N],y[N];
int sx,sy,ex,ey;
void bfs(){
     queue<pair<int, pair<int, int> > >q;
     sx = x[1];
     sy = y[1];
     int bits = 0;
     for(int i = 2;i<=tot;++i){
          int j;
          for(j = 0;j<4;++j){
                if((x[i-1]+dx[j]==x[i])&&(y[i-1]+dy[j]==y[i]))
                    break;
          }       
          bits+=(1<<(2*i-4))*j;
     }
     for(int i = 0;i<n;++i)
             for(int j = 0;j<m;++j)
                     for(int k = 0;k<(1<<N);++k)
                             d[i][j][k] = inf;
     memset(vis,false,sizeof(vis));
     d[sx][sy][bits] = 0;
     vis[sx][sy][bits] = true;
     q.push(mp(bits,mp(sx,sy)));
     while(!q.empty()){
                       pair<int, pair<int, int> >sta = q.front();
                       q.pop();
                       int bits = sta.first;
                       int hx = sta.second.first;
                       int hy = sta.second.second;
                  //     cout<<hx<<" "<<hy<<" "<<bits<<endl;
                       if((hx==ex)&&(hy==ey))break;
                       vis[hx][hy][bits] = false;
                       for(int i = 0;i<4;++i){
                               int nhx = hx+dx[i];
                               int nhy = hy+dy[i];
                               if(nhx<0||nhx>=n||nhy<0||nhy>=m)continue;
                               if(mat[nhx][nhy]==-1)continue;
                               x[1] = nhx;
                               y[1] = nhy;
                               int b = bits;
                               int j;
                               int nx = hx;
                               int ny = hy;
                               for(j = 2;j<=tot;++j){
                                     int bit = b%4;
                                     b/=4;
                                     x[j] = nx;
                                     y[j] = ny;
                                     nx = nx+dx[bit];
                                     ny = ny+dy[bit];
                               }
                          //     for(int t = 1;t<=tot;++t)cout<<x[t]<<" "<<y[t]<<endl;
                           //    if(j<=tot)continue;
                               for(j = 1;j<=tot;++j){
                                     int k;
                                     for(k = j+1;k<=tot;++k)
                                           if((x[j]==x[k])&&(y[j]==y[k]))break;
                                     if(k<=tot)break;
                               }
                               if(j<=tot)continue;
                        //       cout<<"new"<<endl;
                          /*     for(int j = 1;j<=tot;++j){
                                       cout<<x[j]<<" "<<y[j]<<endl;
                               }*/
                               int nbits = 0;
                               for(int j = 2;j<=tot;++j){
                                   int k;
                                   for(k = 0;k<4;++k)
                                         if((x[j-1]+dx[k]==x[j])&&(y[j-1]+dy[k]==y[j]))break;
                                   nbits+=(1<<(2*j-4))*k;
                               } 
                               if(d[nhx][nhy][nbits]>d[hx][hy][bits]+1){
                                    d[nhx][nhy][nbits] = d[hx][hy][bits]+1;
                                    if(!vis[nhx][nhy][nbits]){
                                        vis[nhx][nhy][nbits] = true;
                                        q.push(mp(nbits,mp(nhx,nhy)));
                                    }
                               }
                       }
     }
}
int main(){
    string s;
    while(cin>>n>>m){
                     tot = 0;
         for(int i = 0;i<n;++i){
                 cin>>s;
                 for(int j = 0;j<m;++j){
                         if(s[j]=='#')mat[i][j] = -1;
                         if(s[j]=='.')mat[i][j] = 0;
                         if(s[j]=='@'){
                                       mat[i][j] = 10;
                                       ex = i;
                                       ey = j;
                         }
                         if(s[j]-'0'>=1&&s[j]-'0'<=9){
                              tot = max(tot,s[j]-'0');
                              mat[i][j] = 0;
                              x[s[j]-'0'] = i;
                              y[s[j]-'0'] = j;
                         }
                 }
         }
         bfs();
         int ans = inf;
         for(int i = 0;i<(1<<16);++i)
                 ans = min(ans,d[ex][ey][i]);
         if(ans<inf)cout<<ans<<endl;
         else puts("-1");
    }
    return 0;
}
