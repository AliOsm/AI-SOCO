#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>
#include <random>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define pll pair<ll, ll> 
#define vi vector<int>
#define vll vector<ll>
#define vpii vector<pii>
#define vpll vector<pll>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(ll (it)=from; (it)<to; (it)++)
using namespace std;


int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("domino-covering-1.in", "r", stdin);
	//freopen("domino-covering-1.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	vvi a(n, vi(n));
	forn(i, 0, n) {
		forn(j, 0, n) cin >> a[i][j];
	}

	forn(i, 0, n) {
		forn(j, 0, n) {
			int c = a[i][j];
			if (c == 1) continue;
			bool ok = false;
			forn(k, 0, n) {
				forn(kk, 0, n) {
					if (k == j || kk == i) continue;
					int s = a[i][k] + a[kk][j];
					ok = s == c;
					if (ok) break;
				}
				if (ok) break;
			}
			if (!ok) {
				cout << "No";
				return 0;
			}
		}
	}
	cout << "Yes";
	return 0;
}