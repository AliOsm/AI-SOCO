#include<bits/stdc++.h>
using namespace std;
#define M 400005
typedef pair<int, int> pii;

int ara[M];
map<int, int> ma;
vector<pii> vec;

int main()
{
    int n;
    scanf("%d", &n);

    for(int i = 1; i <= n; i++) scanf("%d", ara+i);
    for(int i = 1; i <= n; i++) ma[ara[i]]++;
    for(pii p: ma) vec.push_back(p);

    int mx = 1, mxr = 1, mxc = 1;

    for(int i = 1; i*i <= n; i++)
    {
        int tot = 0;
        for(pii p: vec) tot += min(p.second, i);

        int c = tot/i;
        if(c < i) continue;

        if(i*c > mx) mx = i*c, mxr = i, mxc = c;
    }

    int r = mxr, c = mxc;
    vector<vector<int>> ans(r+1);
    for(int i = 1; i <= r; i++) ans[i].resize(c+1);

    vector<vector<int>> mvs = ans;

    for(int i = 1; i <= r; i++)
    {
        for(int j = 1; j <= c; j++) mvs[i][j] = (i+j-2)%c+1;
    }

    vector<int> fst, lst;

    for(pii p: vec)
    {
        int ase = min(p.second, r);

        if(ase == r) fst.push_back(p.first);
        else
        {
            for(int i = 0; i < ase; i++) lst.push_back(p.first);
        }
    }

    for(int j = 0; j < min(c, (int)fst.size()); j++)
    {
        for(int i = 1; i <= r; i++) ans[i][mvs[i][j+1]] = fst[j];
    }

    int cur = 0;
    for(int j = fst.size()+1; j <= c; j++)
    {
        for(int i = 1; i <= r; i++) ans[i][mvs[i][j]] = lst[cur++];
    }

    printf("%d\n%d %d\n", r*c, r, c);
    for(int i = 1; i <= r; i++)
    {
        for(int j = 1; j <= c; j++) printf("%d ", ans[i][j]);
        printf("\n");
    }

    return 0;
}
