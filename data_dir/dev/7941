# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=2000005; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

ll Pow(ll x,ll k,ll _p) { ll ans=1; for (;k;k>>=1,x=x*x%_p) if (k&1) (ans*=x)%=_p; return ans; } 

const int _M=N,_N=N;
template <class V>
struct FT{
	vector <V> aa; int _p,K; V w[2][_M*2+5],rev[_M*2+5],tmp;
	void Init(int _K,int p) { K=_K,_p=p; }
	void FFT(vector<V>& A,int m,int op){
		int N=1<<m; V w0=Pow(3,(_p-1)/N,_p); w[0][0]=w[1][0]=1;
		rep(i,1,N-1) w[0][i]=w[1][N-i]=(ll)w[0][i-1]*w0%_p;
		rep(i,1,N-1) rev[i]=(rev[i>>1]>>1)|(i&1)<<m-1;
		rep(i,0,N-1) if (i<rev[i]) swap(A[i],A[rev[i]]);
		for (int i=1; i<N; i<<=1)
			for (int j=0,t=N/(i<<1); j<N; j+=i<<1)
				for (int k=j,l=0; k<j+i; k++,l+=t) {
					V x=A[k],y=(ll)w[op][l]*A[k+i]%_p;
					A[k]=(x+y)%_p,A[k+i]=(x-y+_p)%_p;
				}
		if (op) { tmp=Pow(N,_p-2,_p); rep(i,0,N-1) A[i]=1ll*A[i]*tmp%_p; }
	}
	vector<V>& multiply(vector<V>& A,int kk,vector<V> *C=NULL){
		int lena=A.size(),len=1,L=0; aa=A;
		while (len<2*kk*lena) len<<=1,++L;
		aa.resize(len),FFT(aa,L,0);
		if (!C) C=&A; (*C).resize(len);
		rep(i,0,len-1) (*C)[i]=(ll)Pow(aa[i],kk,_p);
		FFT(*C,L,1); if (K<len-1) (*C).resize(K+1); return *C;
	}
};

int n,k,x; vector<ll> V,A; FT<ll> T; set<ll> S;

int main() {
    //file_put();
    
    scanf("%d%d",&n,&k),V.resize(1005);
    rep(i,1,n) scanf("%d",&x),V[x]++; A=V;
    T.Init(1000005,998244353);
    T.multiply(A,k);
    A.resize(1000008);
    rep(i,1,1000000) if (A[i]) S.insert(i);
    A=V;
    T.Init(1000005,1004535809);
    T.multiply(A,k);
    A.resize(1000005);
    rep(i,1,1000000) if (A[i]) S.insert(i);
    for (auto t:S) printf("%lld ",t);
    printf("\n");
	
    return 0;
}


