#include<bits/stdc++.h>
#define fi first
#define se second
#define FOR(a) for(int i=0;i<a;i++)
#define show(a) cout<<a<<endl;
#define show2(a,b) cout<<a<<" "<<b<<endl;
#define show3(a,b,c) cout<<a<<" "<<b<<" "<<c<<endl;
using namespace std;

typedef long long ll;
typedef pair<int,int> P;
typedef pair<P,int> LP;
const ll inf=1e18;
const int N=600;
const ll mod=1e6+3;

map<string,string>  mp;
map<string ,int>ml;
ll n,m,k,a[N][N],b[N],f[N],d[N][105];
int can[N],st[N];
bool did[N],vis[N][N];
string s[1005];
ll s1,s2,s3,s4,ans,flag,tot,t,sum,pos, cnt;

vector<int> v[N];

ll ksm(ll x,ll y)
{
    ll ans=1;
    while(y)
    {
        if(y&1) ans=ans*x%mod;
        x=x*x%mod;
        y>>=1;
    }
    return ans;
}

bool check(ll n,ll k)
{
    ll s=1;
  for(int i=1; i<=n ;i++){
    s*=2;
    if(s>=k)return false;
  }
  return true;

}

int main()
{




    cin>>n>>k;
    sum=1;
    if(check(n,k)) return cout<<1<<" "<<1,0;
    ll A,B,gcd,sum=0;
    B=ksm(2,n%(mod-1)*((k%(mod-1)-1+(mod-1))%(mod-1))%(mod-1));

    //show(B);
    for(ll i=2;i<=k-1;i*=2)
        sum+=(k-1)/i;
    gcd=ksm(2,sum%(mod-1)*(mod-2)%(mod-1));
    B=B*gcd%mod;
    //show(sum);
    if(k-1>=mod) return cout<<B<<" "<<B,0;
    A=1;
    for(ll i=1;i<=k-1;i++)
        A=A*((ksm(2,n%(mod-1))-i+mod)%mod)%mod;
    A=A*gcd%mod;
    cout<<(B-A+mod)%mod<<" "<<B<<endl;









}
