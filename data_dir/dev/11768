#include <bits/stdc++.h>
using namespace std;

vector<int> kmp(string s)
{
    int n = (int)s.length();
    vector<int> pi(n);
    for (int i = 1, j = 0; i < n; i++)
    {
        while (j > 0 && s[i] != s[j])
            j = pi[j - 1];
        if (s[i] == s[j])
            j++;
        pi[i] = j;
    }
    return pi;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    string s;
    cin >> s;
    vector<int> pi = kmp(s);
    int n = s.length();
    int ans[n + 1] = {0};
    for (int i = 0; i < n; i++)
        ans[pi[i]]++;
    for (int i = n - 1; i > 0; i--)
        ans[pi[i - 1]] += ans[i];
    for (int i = 0; i <= n; i++)
        ans[i]++;

    stack<int> idx;
    int p = n;
    while (p > 0)
    {
        idx.push(p);
        p = pi[p - 1];
    }
    cout << idx.size() << endl;
    while (!idx.empty())
    {
        cout << idx.top() << " " << ans[idx.top()] << endl;
        idx.pop();
    }
}