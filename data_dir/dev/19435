
// In The Name Of God

#include<bits/stdc++.h>
#define IOS ios::sync_with_stdio(false) 
#define rep(i,n) for(int i=0;i<(n);i++)
#define pb push_back
#define ll long long
#define int long long 

using namespace std;
const int N = 1e5+22 ;

int n,s,t,ct,m;
double w[N] ;
int lvl[N] ;
vector<int>G[N]; 
int inf = 1e9 ;

struct ed
{
	int u,v,cap,id ;
}edge[N*50];

void add(int u,int v,int cap)
{
	G[u].pb(ct) ;
	edge[ct].u=u , edge[ct].v=v , edge[ct].cap=cap , edge[ct].id = ct++ ;
	G[v].pb(ct) ;
	edge[ct].u=v , edge[ct].v=u , edge[ct].cap=0 , edge[ct].id = ct++ ;
}

bool bfs()
{
	memset(lvl,0,sizeof(lvl)) ;
	lvl[s]=1 ;
	queue<int>q ;
	q.push(s) ;
	while(q.size())
	{
		int u=q.front() ;
		q.pop() ;
		for(int i:G[u])
		{
			ed &e=edge[i] ;
			if(e.cap==0 || lvl[e.v]) continue ;
			lvl[e.v]=lvl[u]+1 ;
			q.push(e.v) ;
		}
	}
	return lvl[t] ;
}

int sendflow(int u,int flow)
{
	if(u==t) return flow ;
	for(int i:G[u])
	{
		ed &e=edge[i] ;
		if(e.cap==0 || lvl[e.v]!=lvl[u]+1) continue ;
		int cf=sendflow(e.v,min(flow,e.cap)) ;
		if(cf)
		{
			e.cap-=cf ;
			edge[e.id^1].cap+=cf;
			return cf;
		}
	}
	return 0 ;
}

int flow()
{
	int res=0,z;
	while(bfs())
	{
		while(z=sendflow(s,inf))
			res+=z;
	}
	return res;
}

int32_t main()
{IOS ;
	int x,y,ted;

	cin>>n>>m>>ted;
	s=0,t=n-1 ;
	rep(i,m) cin>>x>>y>>w[i] , x-- , y-- , add(x,y,0) ;
	
	double low=0 , high = 1e9 , mid ;
	rep(j,100)
	{
		mid=(low+high)/2;
		rep(i,m)
			edge[2*i].cap=1LL*(1.0*w[i]/mid) , edge[2*i+1].cap=0 ;

		if(flow()>=ted) low=mid;
		else high=mid;
	}

	cout<<fixed<<setprecision(6)<<low*ted<<endl;

	return 0 ;
}
