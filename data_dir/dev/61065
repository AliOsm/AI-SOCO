//In the name of God

#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
#define mp make_pair
#define int long long
const int MAXN=2e5+10;
int n,m,k,s;
int a[MAXN],b[MAXN],sp[MAXN],sd[MAXN];
pair <int,int> pa[MAXN],pb[MAXN];
vector <pair <int,int> > d,p;

void print(int x)
{
  int dollar=pa[x-1].first,pound=pb[x-1].first,dind=pa[x-1].second,pind=pb[x-1].second;
  for(int i=0;i<=min(k,(int)d.size()-1);i++)
    {
      if(k-i>p.size()-1)
	continue;
      int need=sd[i]*dollar+sp[k-i]*pound;
      if(need<=s)
	{
	  for(int j=1;j<=i;j++)
	    cout<<d[j].second+1<<" "<<dind+1<<endl;
	  for(int j=1;j<=k-i;j++)
	    cout<<p[j].second+1<<" "<<pind+1<<endl;
	  return;
	}
    }
}

bool check(int x)
{
  int dollar=pa[x-1].first,pound=pb[x-1].first;
  for(int i=0;i<=min(k,(int)d.size()-1);i++)
    {
      if(k-i>p.size()-1)
	continue;
      int need=sd[i]*dollar+sp[k-i]*pound;
      if(need<=s)
	return true;
    }
  return false;
}

main()
{
  cin>>n>>m>>k>>s;
  for(int i=0;i<n;i++)
    {
      cin>>a[i];
      if(i==0)
	pa[i].first=a[i],pa[i].second=i;
      else
	{
	  if(a[i]<pa[i-1].first)
	    pa[i].first=a[i],pa[i].second=i;
	  else
	    pa[i]=pa[i-1];
	}
    }
  for(int i=0;i<n;i++)
    {
      cin>>b[i];
      if(i==0)
	pb[i].first=b[i],pb[i].second=i;
      else
	{
	  if(b[i]<pb[i-1].first)
	    pb[i].first=b[i],pb[i].second=i;
	  else
	    pb[i]=pb[i-1];
	}
    }
  d.push_back(mp(-1,-1));
  p.push_back(mp(-1,-1));
  for(int i=0;i<m;i++)
    {
      int t,c;
      cin>>t>>c;
      if(t==1)
	d.push_back(mp(c,i));
      else
	p.push_back(mp(c,i));
    }
  sort(d.begin(),d.end());
  sort(p.begin(),p.end());
  for(int i=1;i<d.size();i++)
    sd[i]=sd[i-1]+d[i].first;
  for(int i=1;i<p.size();i++)
    sp[i]=sp[i-1]+p[i].first;
  int s=0,e=n+1;
  while(e-s>1)
    {
      int mid=(s+e)/2;
      if(check(mid))
	e=mid;
      else
	s=mid;
    }
  if(e==n+1)
    cout<<-1<<endl;
  else
    {
      cout<<e<<endl;
      print(e);
    }
  return 0;
}
