#include <bits/stdc++.h>
 
using namespace std;
vector < int > seen;
vector < int > color;
vector < vector < int > > e;
int ans = 0;
void dfs(int idx){
  int to = -1;
  seen[idx] = 1;
  for(int i = 0;i < (int)e[idx].size(); i++){
    to = e[idx][i];
    if(seen[to] && color[idx] == color[to]){
      ans++;
      return;
    }
  }
  for(int i = 0;i < (int)e[idx].size(); i++){
    to = e[idx][i];
    if(!seen[to]){
      color[to] = color[idx] ^ 1;
      dfs(to);
    }
  }
}
int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n , m;
    cin >> n >> m;
    int from , to;
    e.resize(n);
    seen.resize(n , 0);
    color.resize(n , -1);
    for(int i = 0;i < m ; i++){
      cin >> from >> to;
      from--;to--;
      e[from].push_back(to);
      e[to].push_back(from);
    }
    for(int i = 0;i < n ; i++){
      if(!seen[i]){
        dfs(i);
      }
    }
    ans += (n - ans) & 1;
    cout << ans << endl;
    return 0;
} 