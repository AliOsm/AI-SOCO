#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> pll;
typedef pair<pll,ll> plll;
typedef pair<pll,pll> ppll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back
template< typename T,typename V>ostream &operator<< (ostream &out,const pair<T,V> x){ out << "{" << x.fst << " : " << x.snd << "}"; return out;}template< typename T>ostream &operator<< (ostream &out,const set<T> x){ for(auto &it : x){ out << it << " "; } return out;}template< typename T>ostream &operator<< (ostream &out,const multiset<T> x){ for(auto &it : x){ out << it << " "; } return out;}template< typename T,typename V>ostream &operator<< (ostream &out,const map<T,V> x){ for(auto &it : x){ out << "[" << it.fst << "]" << " = " << it.snd << "\n"; } return out;}template< typename T>ostream &operator<< (ostream &out,const vector<T> x){ for(int i = 0;i < x.size() - 1; ++i){ out << x[i] << " "; } out << x.back(); return out;}template< typename T>ostream &operator<< (ostream &out,const vector<vector<T> > x){ for(int i = 0;i < x.size() - 1; ++i){ out << "[" << i << "]" << " = {" << x[i] << "}\n"; } out << "[" << x.size() - 1 << "]" << " = {" << x.back() << "}\n"; return out;}

const ll N = 1e6 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;
ll a[N];
ll pref[N];
ll sum[N];
ll n,p,k;
void solve(){
    cin >> n >> p >> k;
    for(ll i = 1;i <= n; ++i){
        cin >> a[i];
    }
    sort(a + 1,a + n + 1);
    for(ll i = 1;i < k; ++i){
        sum[i] = sum[i - 1] + a[i];
    }
    ll ans = 0;
    for(ll i = 1;i <= n; ++i){
        if(i < k)pref[i] = a[i];else pref[i] = pref[i - k] + a[i];
    }
    for(ll i = 1;i <= n; ++i){
        if(pref[i] + sum[i % k - 1] <= p)ans = i;
    }
    cout << ans;
}
main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    ll q;
    cin >> q;
    for(ll i = 0;i < q; ++i){
        solve();
        cout << "\n";
    }
    return 0;
}

