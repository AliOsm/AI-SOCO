//its not how good you are...its how good you want to be
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll  long long int
#define inf 1000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
struct matrix
{
	ll m[100][100];//m is the transformation matrix
	matrix()
	{
		for(int i=0;i<100;i++)
		{
			for(int j=0;j<100;j++)
			m[i][j]=0;
		}
	}
}mat;
matrix mul(matrix a,matrix b)
{
	matrix c;
	for(int i=0;i<100;++i)
	{
		for(int j=0;j<100;++j)
		{
			c.m[i][j]=0;
			for(int p=0;p<100;++p)
			{
				c.m[i][j]=(c.m[i][j]+a.m[i][p]*b.m[p][j])%mod;
			}
		}
	}
	return c;
}
matrix pow(matrix base, ll exponent)
{
    matrix result;
    for(int i=0;i<100;++i)result.m[i][i]=1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = mul(result , base);
        exponent = exponent >> 1;
        base = mul(base,base);
    }
    return result;
}
ll cnt[10];
int main()
{
	boost1;boost2;
	ll i,j,n,b,k,x,y,d,ans=0;
	cin>>n>>b>>k>>x;
	for(i=1;i<=n;i++)
	{
		cin>>d;
		cnt[d]++;
	}
	for(i=0;i<=x-1;i++)
	{
		for(j=0;j<=x-1;j++)
		{
			for(d=0;d<=9;d++)
			{
				if((i*10+d)%x==j)
				mat.m[i][j]+=cnt[d];
			}
		}
	}
	mat=pow(mat,b);
	cout<<mat.m[0][k]<<endl;
	return 0;
}
