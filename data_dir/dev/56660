#include <bits/stdc++.h>
using namespace std;
#define LL long long int
const int N = 105;
const LL INF = 1e16;
const int MOD = 1e9 + 7;

LL m, mat[N][N], ans[N][N], now[N][N], t[N][N];
LL n;
int main() {
		ios::sync_with_stdio(false);
		cin.tie(NULL);cout.tie(NULL);
		int i, j, k;
		cin >> n >> m;
		mat[0][0] = 1;
		mat[0][m-1] = 1;
		for (i=1;i<m;i++)
			for (j=0;j<m;j++) {
				if (j == i-1) mat[i][j] = 1;
				else mat[i][j] = 0;
			}

		if (n<m) {
			cout << "1\n";
			return 0;
		}

		for (i=0;i<m;i++)
			for (j=0;j<m;j++) {
				now[i][j] = mat[i][j];
				ans[i][j] = (i == j);
			}
		n=n-m+1;
		LL pw = 1;
		while(pw <= n) {
			if (n & pw) {
				memset(t, 0, sizeof(t));
				for (i=0;i<m;i++)
					for (j=0;j<m;j++) {
						t[i][j] = 0;
						for (k=0;k<m;k++)
							t[i][j] = (t[i][j] + (ans[i][k] * now[k][j])%MOD)%MOD;
					}
				for (i=0;i<m;i++)
					for (j=0;j<m;j++)
						ans[i][j] = t[i][j];
			}
			memset(t, 0, sizeof(t));
			for (i=0;i<m;i++)
				for (j=0;j<m;j++) {
					t[i][j] = 0;
					for (k=0;k<m;k++)
						t[i][j] = (t[i][j] + (now[i][k] * now[k][j])%MOD)%MOD;
				}
			for (i=0;i<m;i++)
				for (j=0;j<m;j++)
					now[i][j] = t[i][j];
			pw <<= 1;
		}
		LL res = 0;
		for (i=0;i<m;i++) res = (res + ans[0][i])%MOD;
		cout << res << '\n';


    return 0;
}
