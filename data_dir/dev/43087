/*
 * WATCH THIS
 */
#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include "bits/stdc++.h"

#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define F first
#define S second

using ll = long long;
using ii = pair<int, int>;

template<class C> void amin(C &a4, C b4) {
	a4 = min(a4, b4);
}
template<class C> void amax(C &a4, C b4) {
	a4 = max(a4, b4);
}

template<class T> ostream &operator<<(ostream& os, vector<T> V) {
	os << "[";
	for (auto vv : V)
		os << vv << ",";
	return os << "]";
}
template<class L, class R> ostream &operator<<(ostream &os, pair<L, R> P) {
	return os << "(" << P.first << "," << P.second << ")";
}
const int N = 2e5 + 5;
const int Mod = 1e9 + 7;
const double PI = acos(-1.0);
inline void add(int &x , int y){if((x+=y) >= Mod) x -= Mod;}
inline void mul(int &x, int y){x = 1ll * x * y % Mod;}
int dp[1005][1005];
int sv[1005];
bitset<1000> bt[55];
int main() {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif

	int m, n;

	cin >> m >> n;
	dp[0][0] = 1;
	sv[0] = 1;
	for(int i = 1; i <= m; i++)
		for(int j = 0; j <= i; j++){
			if(j)
				dp[i][j] = dp[i-1][j-1];
			add(dp[i][j], dp[i-1][j] * 1ll * j % Mod);
			add(sv[i], dp[i][j]);
		}

	for(int i = 0; i < n; i++){
		string str;
		cin >> str;
		bt[i] = bitset<1000>(str);
	}

	map<ll,int>mp;
	for(int i = 0; i < m; i++){
		ll mask = 0;
		for(int j = 0; j < n; j++){
			if(bt[j][i])
				mask |= (1ll << j);
		}
		if(mask)
			mp[mask]++;
	}

	int tot = m;
	int ans = 1;

	for(auto it : mp){
		mul(ans, sv[it.second]);
		tot -= it.second;
	}

	mul(ans, sv[tot]);

	cout << ans << '\n';




	return 0;
}
