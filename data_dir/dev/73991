#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>
#include <numeric>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1 << 28;
//constexpr long long mod = 1000000007LL;
constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

void solve() {
	int n; scanf("%d", &n);
	vector<ll> a(n); for (int i = 0; i < n; i++) scanf("%lld", &a[i]);
	sort(a.begin(), a.end());
	set<int> s;
	for (int i = 0; i < n; i++) s.emplace(a[i]);
	int mx = *s.rbegin();
	int res = mx;
	if (mx % 2 == 0 and mx % 3 == 0 and mx % 5 == 0 and s.find(mx / 2) != s.end() and s.find(mx / 3) != s.end() and s.find(mx / 5) != s.end()) {
		chmax(res, mx / 2 + mx / 3 + mx / 5);
	}
	vector<int> v;
	v.push_back(mx);
	s.erase(--s.end());
	while (!s.empty() and v.size() < 3) {
		int cur = *s.rbegin();
		s.erase(--s.end());
		bool flag = true;
		for (int i = 0; i < v.size(); i++) if (v[i] % cur == 0) flag = false;
		if (flag) v.push_back(cur);
	}
	{
		int sum = 0;
		for (int i = 0; i < v.size(); i++) sum += v[i];
		chmax(res, sum); 
	}
	printf("%d\n", res);

}

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	int kkt; scanf("%d", &kkt);
	while (kkt--) {
		solve();
	}
    return 0;
} 