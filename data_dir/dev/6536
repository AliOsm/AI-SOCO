#include<bits/stdc++.h>

using namespace std;

#define ll long long
#define X first
#define Y second
#define all(x) x.begin(), x.end()

const int MX = (int)1e5 + 10;
const int mod = (int)1e9 + 7;

void add_self(int &x, int y){x += y; if(x >= mod) x -= mod;}
void sub_self(int &x, int y){x -= y; if(x < 0) x += mod;}
void mul(int &x, int y){x = x * 1LL * y % mod;}


int main(){

    cin.tie(0); cout.tie(0);
    ios_base::sync_with_stdio(0);

    int q;
    cin >> q;

    while(q--){
        int n;
        cin >> n;
        string s, t;
        cin >> s >> t;

        int c[26] = {};
        bool ok = true;
        for(int i = 0; i < 26; ++i){
            c[i] = count(all(s), 'a' + i) + count(all(t), 'a' + i);
            ok &= c[i] % 2 == 0;
        }

        if(!ok){
            cout << "No" << "\n";
            continue;
        }

        vector<bool> vis(n, false);
        for(int i = 0; i < n; ++i){
            if(s[i] == t[i]) vis[i] = true;
        }

        vector<pair<int, int>> ops;
        int cx = 2 * n;
        while(cx--){
            vector<int> pos[26];
            for(int i = 0; i < n; ++i){
                if(!vis[i]) pos[s[i] - 'a'].push_back(i);
            }
            bool found = false;
            for(int i = 0; i < 26; ++i){
                if(pos[i].size() >= 2){
                    int x = pos[i][0];
                    int y = pos[i][1];
                    swap(s[x], t[y]);
                    ops.push_back({x + 1, y + 1});
                    vis[y] = true;
                    vis[x] = s[x] == t[x];
                    found = true;
                    break;
                }
            }

            if(!found){
                for(int i = 0; i < n; ++i){
                    if(!vis[i]){
                        swap(s[i], t[i]);
                        // vis[i] = true;
                        ops.push_back({i + 1, i + 1});
                        break;
                    }
                }
            }

            // cout << s << " " << t << endl;
            if(s == t) break;
        }

        if(s != t) cout << "No" << "\n";
        else{
            // puts("Yes");
            cout << "Yes" << "\n";
            cout << ops.size() << "\n";
            for(auto &[x, y] : ops)
                cout << x << " " << y << "\n";
        }


    }

    
    return 0;
}