// sky kaafi neeche aa gaya hai, sab choo rahe hain
// let's raise the bar now :P
#include<bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;

void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

const int N = 2e5 + 5;
vector<int> v[N];
pair<ll, int> a[N];

int p[N], sz[N];

int find(int x){
    if(x == p[x])
        return x;
    return(p[x] = find(p[x]));
}
void join(int x, int y){
    x = find(x);
    y = find(y);
    if(x == y)
        return;
    if(sz[x] > sz[y])
        swap(x, y);
    sz[y] += sz[x];
    p[x] = y;
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, m;
    cin >> n >> m;
    for(int i = 1; i <= n; i++){
        cin >> a[i].F;
        a[i].S = i;
    }
    sort(a + 1, a + n + 1);
    vector<pair<ll, pair<int, int> > > edges;
    for(int i = 2; i <= n; i++){
        edges.push_back({a[1].F + a[i].F, {a[1].S, a[i].S}});
    }
    while(m--){
        int x, y;
        ll z;
        cin >> x >> y >> z;
        edges.push_back({z, {x, y}});
    }
    for(int i = 1; i <= n; i++)
        p[i] = i, sz[i] = 1;

    sort(edges.begin(), edges.end());

    ll cost = 0;
    for(auto i : edges){
        int x = i.S.F, y = i.S.S;
        x = find(x), y = find(y);
        if(x != y)
            join(x, y), cost += i.F;
    }
    cout << cost;
return 0;
}
