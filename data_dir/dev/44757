#include <bits/stdc++.h>
using namespace std;

int v[5005], n, k;
int dp[5005][5005];

int solve(int pos, int flag){
    if(flag > k) return -1e9;
    if(pos >= n) return 0;
    if(dp[pos][flag] != -1) return dp[pos][flag];
    int res = solve(pos+1, flag);
    int j = upper_bound(v, v+n, v[pos]+5) - v;
    res = max(res, j-pos + solve(j, flag+1));
    return dp[pos][flag] = res;
}

int main(){
    memset(dp, -1, sizeof dp);
    scanf("%d %d", &n, &k);
    for(int i = 0; i < n; i++)
        scanf("%d", &v[i]);
    sort(v, v+n);
    printf("%d\n", solve(0,0));    
	return 0;
}