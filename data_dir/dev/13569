#include <bits/stdc++.h>
#define MOD ((int)1e9+7)

using namespace std;

long long getodd(long long x)
{
	return ((x%MOD)*(x%MOD))%MOD;
}

long long getsum(long long x)
{
	if(x%2==0) return (((x/2)%MOD)*((x+1)%MOD))%MOD;
	return ((x%MOD)*(((x+1)/2)%MOD))%MOD;
}

long long ans(long long x)
{
	int pw=0;
	long long cur=0;
	while(x-(1LL<<pw)>=cur) {cur+=(1LL<<pw); pw++;}
	long long ev=0,od=0;
	long long ans=0;
	for(int i=0;i<pw;i++)
	{
		if(i%2==0) od+=(1LL<<i);
		else ev+=(1LL<<i); 
	}
	if(pw%2==0) od+=x-cur;
	else ev+=x-cur;
	//cout << od << " " << ev << endl;
	long long odd=getodd(od);
	long long even=getsum(ev*2)-getodd(ev);
	return (odd+even+MOD)%MOD;
}

int main()
{
	long long l,r;
	cin >> l >> r;
	//cout << ans(r) << "\n" << ans(l-1) << endl;
	cout << (ans(r)-ans(l-1)+MOD)%MOD << endl;	
}