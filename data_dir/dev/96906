#include<bits/stdc++.h>

//#include "rubo.h"
#define MP make_pair
#define PB push_back
#define in int
#define ll long long
#define ull unsigned long long
#define vc vector
#define SQ(j) (j)*(j)
#define x first
#define y second

//#define ld long double
#define dbl  double
#define pll pair<long long,long long>
#define pii pair<int,int>
#define all(j) j.begin(), j.end()
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
//#define printf(fmt, ...) (0)
//#define HOME
//#define y0 ngacaleiebinvoaeu
//#define y1 gnarpipipaigare
#define j1 adsfndnasfafoasp

//#define printf(...) (0)
#define db(x) cout << #x << " = " << x << endl
#define dbCont(x) cout << #x << ": "; for(auto shun: x) cout << shun << ' '; cout<<endl;


using namespace std;

const int N = 1000 + 5;
const int K = 1000 + 5;


int n;
string s;

vc<string> ans;

bool cmp(string s1, string s2){
    if(s1.length() < s2.length())
        return true;
    if(s1.length() > s2.length())
        return false;

    return s1 < s2;
}

string add(string str1, string str2)
{
    // Before proceeding further, make sure length
    // of str2 is larger.
    if (str1.length() > str2.length())
        swap(str1, str2);

    // Take an empty string for storing result
    string str = "";

    // Calculate length of both string
    int n1 = str1.length(), n2 = str2.length();

    // Reverse both of strings
    reverse(str1.begin(), str1.end());
    reverse(str2.begin(), str2.end());

    int carry = 0;
    for (int i=0; i<n1; i++)
    {
        // Do school mathematics, compute sum of
        // current digits and carry
        int sum = ((str1[i]-'0')+(str2[i]-'0')+carry);
        str.push_back(sum%10 + '0');

        // Calculate carry for next step
        carry = sum/10;
    }

    // Add remaining digits of larger number
    for (int i=n1; i<n2; i++)
    {
        int sum = ((str2[i]-'0')+carry);
        str.push_back(sum%10 + '0');
        carry = sum/10;
    }

    // Add remaining carry
    if (carry)
        str.push_back(carry+'0');

    // reverse resultant string
    reverse(str.begin(), str.end());

    return str;
}

void check(int i){
    if(i < 0 || i >= n) return;

    if(s[i] == '0') return;

    string s1 = s.substr(0,i);
    string s2 = s.substr(i);

    string s3 = add(s1,s2);

    ans.push_back(s3);

}

int main() {
    cin >> n >> s;


    int mid = n/2;

    for(int i = mid-15; i <= mid+15; i++){
        check(i);
    }

    for(int i = mid; i >= 0; i--){
        if(s[i] != '0'){
            check(i);
            break;
        }
    }
    for(int i = mid; i < n; i++){
        if(s[i] != '0'){
            check(i);
            break;
        }
    }

    sort(all(ans),cmp);
    cout << *ans.begin() << endl;



    return 0;
}