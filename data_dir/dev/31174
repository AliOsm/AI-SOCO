#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long
 
const int N = 5001;
 
int n, m, k, a[N], b[N], c[N], mx[N], dp[N][N];
vector <int> v[N];
 
int solve(int ind, int w){
    if(w < 0) return -1e9;
    if(ind == n + 1) return 0;
    if(w < a[ind]) return -1e9;
    int &ret = dp[ind][w];
    if(ret != -1) return ret;
    ret = solve(ind + 1, w + b[ind]);
    int cur = 0;
    for(int i = 0 ; i < (int)v[ind].size() ; i++){
        cur += c[v[ind][i]];
        ret = max(ret, solve(ind + 1, w + b[ind] - (i + 1)) + cur);
    }
    return ret;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    memset(dp, -1, sizeof dp);
    cin >> n >> m >> k;
    for(int i = 1 ; i <= n ; i++){
        cin >> a[i] >> b[i] >> c[i];
    }
    for(int i = 0 ; i < m ; i++){
        int x, y;
        cin >> x >> y;
        mx[y] = max(mx[y], x);
    }
    for(int i = 1 ; i <= n ; i++){
        v[max(i, mx[i])].push_back(i);
    }
    for(int i = 1 ; i <= n ; i++){
        sort(v[i].begin(), v[i].end(), [&](int l, int r){
            return c[l] > c[r];
        });
    }
    int ans = solve(1, k);
    if(ans < 0) ans = -1;
    cout << ans << endl;
}
