#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define rand() (rand() << 15 | rand())
using namespace std;
//using namespace __gnu_pbds;

//template<typename T>
//using ordered_set =
//tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long  ll;
#define EPS 1e-9
#define PI acos(-1.0)

bool go(vector<int> a , int y){
   int n = (int)a.size();
   for(int i = 0 ; i < n ; ++i){
      int x = 0;
      for(int j = i ; j < n ; ++j){
         x ^= a[j];
//         cout << x << "\n";
         if(x == 0 || x == y)
            return false;
      }
   }
   return true;
}
void solve() {
   int n , x;
   cin >> n >> x;

   int bit = -1;
   for(int i = 0 ; i < 18 ; ++i){
      if(x & (1 << i))
         bit = i;
   }

   vector<int> rs;
   for(int i = 0 ; i < n ; ++i){
      if(i == bit)continue;
      rs.pb((1 << i));
      int m = (int)rs.size();
      for(int j = 0 ; j + 1 < m ; ++j)
         rs.pb(rs[j]);
   }

   cout << rs.size() << "\n";
   for(int x : rs)
      cout << x << ' ';
   cout << "\n";
}
int main() {
#ifndef ONLINE_JUDGE
   freopen("input.txt", "r", stdin);
#endif
   ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
   int t = 1;
//   cin >> t;
   while(t--){
      solve();
   }
}