///                                                     ببِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم
#include <bits/stdc++.h>
#define br   break
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define do   double
#define cr   char
#define st   string
#define sc   scanf
#define pr   printf
#define mk   make_pair
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define siz  strlen
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    200256
#define M    1000000007
#define I    1000000000000000000
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define rep( a, b, c, d )  for( int a = b; a <= c; a += d )
#define rvv( a, b, c, d )  for( int a = b; a >= c; a -= d )
#define en                 printf( "\n" )
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define srtr( c )          sort( c.rbegin(), c.rend() )
#define numcounts          __builtin_popcount
#define mxx( x, y, z )     max( x, max( y, z ) )
#define mnn( x, y, z )     min( x, min( y, z ) )
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
const int dx[ ] = { 1, -1, 0, 0 };
const int dy[ ] = { 0, 0, -1, 1 };
using namespace std;
ll tests;
ll answer, mx;
vec < vec < ll > > g;
bool u[ 105 ];
ll dfs( ll v, ll par )
{
    ll ans = 0;
    for( ll i: g[ v ] )
        if( i != par )ans = max( ans, dfs( i, v ) + 1 );
    rt ans;
}
void solve()
{
    g.clear();
    mx = 0;
    ll n;
    cin >> n;
    g.resize( n + 5 );
    rep( i, 2, n, 1 )
    {
        ll a, b;
        cin >> a >> b;
        g[ a ].pb( b );
        g[ b ].pb( a );
    }
    rep( i, 1, n, 1 )mx = max( mx, dfs( i, -1 ) );
    answer += mx;
}
int main()
{
    freopen( "input.txt", "r", stdin );
    freopen( "output.txt", "w", stdout );
    sc( "%I64d", &tests );
    while( tests -- )
        solve();
    cout << answer;
}



























