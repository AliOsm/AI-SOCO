#include <bits/stdc++.h>
#define endl '\n'

//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4")

using namespace std;
template<class T, class T2> inline void chkmax(T &x, const T2 &y) { if(x < y) x = y; }
template<class T, class T2> inline void chkmin(T &x, const T2 &y) { if(x > y) x = y; }
const int MAXN = (1 << 20);

int n, x1, x2;
pair<double, int> a[MAXN];

void read()
{
	cin >> n >> x1 >> x2;
	for(int i = 0; i < n; i++)
	{
		cin >> a[i].first;
		a[i].second = i + 1;
	}
}

int64_t x[MAXN];
int64_t pref_min[MAXN];
bool can[MAXN], suff_can[MAXN];

void solve()
{
	sort(a, a + n);
	for(int i = 0; i < n; i++)
	{
		int low = 1, high = (int)1e9, mid, ret;
		while(low <= high)
		{
			mid = (low + high) >> 1;
			double P = x2 / (double)mid;
			if(P <= a[i].first)
				high = mid - 1, ret = mid;
			else
				low = mid + 1;
		}
	
		x[i] = ret;
		pref_min[i] = x[i] + i;
		can[i] = (i + x[i] <= n);
		if(i) chkmin(pref_min[i], pref_min[i - 1]);
	}

	for(int i = n - 1; i >= 0; i--)
	{
		suff_can[i] = suff_can[i + 1];
		suff_can[i] |= can[i];
	}

	for(int c1 = 1; c1 < n; c1++)
	{
		double p = x1 / (double)c1;
		int it = lower_bound(a, a + n, make_pair(p, 0)) - a;
		
		if(it + c1 > n) continue;
		if(it == 0 || n - c1 < pref_min[it - 1]) continue;

		int po = 0;
		for(int p = 0; p < it; p++)
			if(x[p] + p <= n - c1)
			{
				po = p;
				break;
			}

		cout << "Yes" << endl;
		vector<int> l1, l2;

		for(int i = it; i < it + c1; i++) l1.push_back(a[i].second);
		for(int i = po, j = x[po]; j > 0; j--)
		{
			l2.push_back(a[i].second);
			i++;
			if(i == it) i = it + c1;
		}

		cout << l1.size() << " " << l2.size() << endl;
		for(int x: l1) cout << x << " ";
		cout << endl;
		for(int x: l2) cout << x << " ";
		cout << endl;
		return;
	}

	for(int c1 = 1; c1 < n; c1++)
	{
		double p = x1 / (double)c1;
		int it = lower_bound(a, a + n, make_pair(p, 0)) - a;
		
		if(it + c1 >= n) continue;
		if(!suff_can[it + c1]) continue;

		int po = 0;
		for(int p = it + c1; p < n; p++)
			if(can[p])
			{
				po = p;
				break;
			}

		cout << "Yes" << endl;
		vector<int> l1, l2;

		for(int i = it; i < it + c1; i++) l1.push_back(a[i].second);
		for(int i = po, j = x[po]; j > 0; j--)
		{
			l2.push_back(a[i].second);
			i++;
		}

		cout << l1.size() << " " << l2.size() << endl;
		for(int x: l1) cout << x << " ";
		cout << endl;
		for(int x: l2) cout << x << " ";
		cout << endl;
		return;
	}


	cout << "No" << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

