#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>


using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pii;
typedef pair<pii, int> para;
typedef pair<string, string> pss;
const ll inf = 1e18 + 7;
const int maxN = 2e5 + 5;

int n, m, q, p;
ll ans[3];
vi graph[maxN];

void DFS(int start, int color, int parent) {
	ans[color - 1]++;
	for (auto v : graph[start]) {
		if (v != parent) {
			DFS(v, 3 - color, start);
		}
	}
}
int main() {
	ios_base::sync_with_stdio(0);
	cin>>n;
	REP(i, n - 1) {
		int a, b;
		cin>>a>>b;
		graph[a].pb(b);
		graph[b].pb(a);
	}
	DFS(1, 1, 0);
	cout<<ans[0] * ans[1] - (n - 1);
	return 0;
}
