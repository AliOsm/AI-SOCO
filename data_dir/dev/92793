#include <bits/stdc++.h>

using namespace std;

const int inf = (int)(1e9) + 100;
const int mod = (int)(1e9) + 7;
const int N = (int)(1e5) + 100;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define ll long long
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vll vector <ll>
#define vpi vector <pii>
#define vpl vector <pll>
#define sci(a) scanf("%d", &a)
#define scii(a, b) scanf("%d%d", &a, &b)
#define scl(a) scanf("%lld", &a)
#define scll(a, b) scanf("%lld%lld", &a, &b)
#define frw(i, p, n) for(int i = p; i <= n; i++)
#define bck(i, n, p) for(int i = n; i >= p; i--)
#define mem(a) memset(a, 0, sizeof(a))

int n, m, k;
string s[55];
int used[55][55], cnt = 0, o = 0;
vector < pair <int, vector <pii> > > ans;
vector < pii> cur;

int p = 0;

void dfs(int x, int y){
	if(!(x >= 1 && x < n - 1  && y >= 1 && y < m - 1 && used[x][y] == 0 && s[x][y] == '.')) return;
	if(s[x][y] == '.' && used[x][y] == 0){
		used[x][y] = 1;
		cnt++;
		cur.pb(mp(x, y));
		dfs(x+1, y);
		dfs(x-1, y);
		dfs(x, y-1);
		dfs(x, y+1);
	}
}

void dfs1(int x, int y){
	if(!(x >= 0 && x < n   && y >= 0 && y < m && used[x][y] == 0 && s[x][y] == '.')) return;
	if(s[x][y] == '.' && used[x][y] == 0){
		used[x][y] = 1;
		dfs1(x+1, y);
		dfs1(x-1, y);
		dfs1(x, y-1);
		dfs1(x, y+1);
	}
}


int main(){
	/*ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m >> k;*/
	scanf("%d%d%d", &n, &m, &k);
	for(int	i = 0; i <  n; i++) cin >> s[i];
	for(int i = 0; i < n; i++){
		if(used[i][0] == 0 && s[i][0] == '.'){
			dfs1(i, 0);
		}
		if(used[i][m-1] == 0 && s[i][m-1] == '.'){
			dfs1(i, m-1);
		}
	}

	for(int i = 0; i < m; i++){
		if(used[0][i] == 0 && s[0][i] == '.'){
			dfs1(0, i);
		}
		if(used[n-1][i] == 0 && s[n-1][i] == '.'){
			dfs1(n-1, i);
		}
	}
	for(int i = 1; i < n - 1; i++){
		for(int j = 1; j < m - 1; j++){
			if(s[i][j] == '.' && used[i][j] == 0){
				cur.clear();
				cnt = 0;
				dfs(i, j);
				ans.pb(mp(cnt, cur));
			}
		}
	}
	sort(all(ans));
	ll res = 0;
	for(int i = 0; i < (int)ans.size() - k; i++){
		res += ans[i].ff;
		for(auto to : ans[i].ss){
			s[to.ff][to.ss] = '*';
		}	
	} 
	//cout << res << endl;
	printf("%lld\n", res);
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			cout << s[i][j];
		}
		cout << endl;
	}
	return 0;
}