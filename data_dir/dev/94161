/* 
chirag11032000
Chirag Thakur
*/

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template < typename T >
using ordered_set = tree < T, null_type, less < T >, rb_tree_tag, tree_order_statistics_node_update >;

typedef long long ll;
typedef double db;
typedef pair < int, int > pii;
typedef pair < ll, ll > pll;

#ifndef ONLINE_JUDGE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template < typename Arg1 >
void __f(const char* name, Arg1&& arg1) {
    cerr << name << " : " << arg1 << std :: endl;
}
template < typename Arg1, typename... Args >
void __f(const char* names, Arg1&& arg1, Args&&... args) {
    const char* comma = strchr(names + 1, ',');
    cerr.write(names, comma - names) << " : " << arg1 << " | ";
    __f(comma + 1, args...);
}
#else
#define trace(...)
#endif

#define pb push_back
#define fast_io() ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)

const db PI = acos(-1);
const ll MOD = 1e9 + 7, INF = LLONG_MAX;
const ll N = 3e5 + 10;

struct participant {
	ll x, y, ind;

	bool operator <(const participant &o) {
		return (x + o.y) < (o.x + y);
	}
};

participant a[N];
ll pos[N], ans[N];
pll pref[N], suff[N];

void test_case();

int main() {
	fast_io();
	test_case();
	cerr << "Time taken: " << int((clock() * 1000.) / CLOCKS_PER_SEC) << "ms\n";
	return 0;
}

void test_case() {
	ll n, m;
	cin >> n >> m;
	for (ll i = 1; i <= n; ++i) {
		a[i].ind = i;
		cin >> a[i].x >> a[i].y;
	}
	sort(a + 1, a + 1 + n);
	for (ll i = 1; i <= n; ++i) {
		pos[a[i].ind] = i;
		pref[i].first = pref[i - 1].first + a[i].x;
		pref[i].second = pref[i - 1].second + a[i].y;
	}
	for (ll i = n; i >= 1; --i) {
		suff[i].first = suff[i + 1].first + a[i].x;
		suff[i].second = suff[i + 1].second + a[i].y;
	}
	for (ll i = 1; i <= n; ++i) {
		ans[a[i].ind] = pref[i - 1].first + a[i].y * (i - 1);
		ans[a[i].ind] += a[i].x * (n - i) + suff[i + 1].second;
	}
	for (ll i = 1; i <= m; ++i) {
		ll u, v;
		cin >> u >> v;
		ll dec = min(a[pos[v]].x + a[pos[u]].y, a[pos[u]].x + a[pos[v]].y);
		ans[u] -= dec;
		ans[v] -= dec;
	}
	for (ll i = 1; i <= n; ++i) {
		cout << ans[i] << " ";
	}
	cout << "\n";
}