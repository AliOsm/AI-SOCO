#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <iomanip>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cassert>
#include <cstdlib>
#include <ctime>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define ll  long long int
#define f first
#define s second
#define pi pair<ll, ll>
#define pii pair<pi,ll>
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define fr freopen("source.txt","r",stdin),freopen("output.txt","w",stdout)
const int mod = 1e9+7;
const int mod1 = 1e9+9;

	int n,m,k;

vector<pii>G[10011];
bool ON[2011]={0};
int maxx[2011]={0};
int maxy[2011]={0};
pi a[2011][2011];
ll s[2011][2011];

bool IN(int a,int b,int x,int y){
	if(a<=x and b<=y) return 1;
	return 0;
}
bool OUT(int a,int b,int x,int y){
	if(a<=x and b<=y) return 0;
	return 1;
}
ll process(int x,int y){
	ll ans=0;
	for(int g=1;g<=k;g++){
		if(IN(G[g][0].f.f,G[g][0].f.s,x,y) and ON[g]) ans+=s[G[g][0].f.f][G[g][0].f.s];
	}
	for(int j=1;j<=y;j++){
		if(a[x][j].f!=-1){
			if(ON[a[x][j].f] and a[x][j].s!=0){
				int i = a[x][j].s;
				int g = a[x][j].f;
				if(IN(G[g][i].f.f,G[g][i].f.s,x,y) and OUT(G[g][i-1].f.f,G[g][i-1].f.s,x,y)) ans+=s[G[g][i].f.f][G[g][i].f.s];
			}
		}
		if(x+1<=n and a[x+1][j].f!=-1){
			if(ON[a[x+1][j].f] and a[x+1][j].s!=0){
				int i = a[x+1][j].s;
				int g = a[x+1][j].f;
				if(OUT(G[g][i].f.f,G[g][i].f.s,x,y) and IN(G[g][i-1].f.f,G[g][i-1].f.s,x,y)) ans-=s[G[g][i].f.f][G[g][i].f.s];
			}
		}
			
	}

	for(int j=1;j<=x;j++){
		if(j!=x and a[j][y].f!=-1){
			if(ON[a[j][y].f] and a[j][y].s!=0){
				int i = a[j][y].s;
				int g = a[j][y].f;

				if(IN(G[g][i].f.f,G[g][i].f.s,x,y) and OUT(G[g][i-1].f.f,G[g][i-1].f.s,x,y)) ans+=s[G[g][i].f.f][G[g][i].f.s];
			}
		}

		if(y+1<=m and a[j][y+1].f!=-1){
			if(ON[a[j][y+1].f] and a[j][y+1].s!=0){
				int i = a[j][y+1].s;
				int g = a[j][y+1].f;
				if(OUT(G[g][i].f.f,G[g][i].f.s,x,y) and IN(G[g][i-1].f.f,G[g][i-1].f.s,x,y)) ans-=s[G[g][i].f.f][G[g][i].f.s];
			}
		}
			
	}
	
	return ans;
}
int main(){
//	fr;
	scanf("%d%d%d",&n,&m,&k);
	rep(i,n+1){
		rep(j,m+1){
			a[i][j]=mp(-1,-1);
		}
	}
	int x,y,w,len;
	for(int g=1;g<=k;g++){
		ON[g]=1;
		scanf("%d",&len);
		for(int i=1;i<=len;i++){
			scanf("%d%d%d",&x,&y,&w);
			G[g].pb(mp(mp(x,y),w));
			a[x][y]= mp(g,i-1);
		}
		ll d=0;
		for(int j=len-1;j>=0;j--){
			d+=G[g][j].s;
			s[G[g][j].f.f ][ G[g][j].f.s] = d;
		}
	}
	int q;
	scanf("%d",&q);
	char s[20];
	int i,x1,y1,x2,y2;
	while(q--){
		scanf("%s",s);
		if(s[0]=='S'){
			scanf("%d",&i);
			ON[i]^=1;
		}
		else{
			scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
			ll ans=process(x2,y2)+process(x1-1,y1-1)-process(x2,y1-1)-process(x1-1,y2);
			printf("%lld\n",ans);
		}
	}

}