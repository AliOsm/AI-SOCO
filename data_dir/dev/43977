#include <bits/stdc++.h>
using namespace std;
// const int d[4][2] = {{0,1},{0,-1},{1,0},{-1,0}};
struct ddt{
    int x, y, r;
};

int x[2], y[2], n, ans;
vector<ddt> a;

inline bool check(const int& x, const int& y, const ddt& a){
    return (a.x - x) * (a.x - x) + (a.y - y) * (a.y - y) <= a.r * a.r;
}

int main(){
    ios_base :: sync_with_stdio(false);
    cin >> x[0] >> y[0] >> x[1] >> y[1] >> n;
    if(x[0] > x[1])
        swap(x[0], x[1]);
    if(y[0] > y[1])
        swap(y[0], y[1]);
    a.resize(n);
    for(int i = 0, x, y, r; i < n; ++i){
        cin >> a[i].x >> a[i].y >> a[i].r;
    }
    for(int i = x[0]; i <= x[1]; ++i){
        bool f[2] = {false,false};
        for(int j = 0; j < n; ++j){
            f[0] |= check(i,y[0],a[j]);
            f[1] |= check(i,y[1],a[j]);
        }
        ans += 2 - f[0] - f[1];
    }
    for(int i = y[0] + 1; i < y[1]; ++i){
        bool f[2] = {false,false};
        for(int j = 0; j < n; ++j){
            f[0] |= check(x[0],i,a[j]);
            f[1] |= check(x[1],i,a[j]);
        }
        ans += 2 - f[0] - f[1];
    }
    cout << ans;
}