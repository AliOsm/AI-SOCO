/*
 Anton Gulikov
*/
#pragma comment(linker,"/STACK:300000000")
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <string>
#include <stdlib.h>

#define gcd(a,b) __gcd((a),(b))
#define sqr(a) ((a)*(a))
#define odd(a) ((a)&1)
#define foru(i,n) for (int i=0;i<(n);i++)
#define ford(i,n) for (int i=(n)-1;i>=0;i--)
#define forab(i,l,r) for (int i=(l);i<=(r);i++)
#define forabd(i,r,l) for (int i=(r);i>=(l);i--)
#define fillchar(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define F first
#define S second
#define all(x) x.begin,x.end
#define pw2(x) (1ull<<(x))
#define mp make_pair

const long double eps=1e-20;
const long double pi=acos(-1.0);
const long long base=1000*1000*1000+7;

using namespace std;

string s;
bool len=false,f1=false,f2=false,f3=false;
vector < pair<int, int> > b;
int a[111][111];
int n,m,k;
int f[111];
bool fa[111];

int main(){
	ios_base :: sync_with_stdio(false);
	cin >> n >> m >> k;
	foru(i,n) f[i] = -1;
	foru(i,n) foru(j,m) cin >> a[i][j];
	foru(j,m){
		b.clear();
		foru(i,n) if (f[i] == -1 && a[i][j] != 0) b.pb(mp(a[i][j],i));
		if (b.size() == 0) continue;
		sort(b.begin(),b.end());		
				if (fa[b[0].F]){
			f[b[0].S] = j;
		}

		forab(i,1,b.size()-1){
			if (fa[b[i].F]){
				f[b[i].S] = j;
			}
			if (b[i].F == b[i-1].F){
				int v = b[i].S;
				int u = b[i-1].S;
				fa[b[i].F] = true;
				f[v] = j;
				f[u] = j;					
			}
		}
//		foru(i,b.size()) if (f[b[i].S] == j) fa[b[i].F] = true;
	}
	foru(i,n) cout << f[i] + 1 << endl;
}