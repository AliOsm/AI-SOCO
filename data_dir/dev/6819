




#include<bits/stdc++.h>
using namespace std;

#define LL                  long long
#define ull                 unsigned long long LL
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)
LL bigmod(LL b, LL p, LL md){if(p==0) return 1;if(p%2==1){ return ((b%md)*bigmod(b,p-1,md))%md;} else {LL y=bigmod(b,p/2,md);return (y*y)%md;}}



#define N 200005


int freq[N];

int main()
{
    string tem;
    cin>>tem;

    string str="";
    string val="";

    for(int i=0;i<tem.size();i++)
    {
        if(tem[i]=='[' || tem[i]==']' || tem[i]=='|' || tem[i]==':')
            str+=tem[i];
        if(tem[i]=='[' || tem[i]==']'  || tem[i]==':')
            val+=tem[i];
    }

    int flag=0;
    string tt="[::]";
    int id=0;

    for(int i=0;i<val.size();i++)
    {
        if(val[i]==tt[id])
        {
            id++;
        }
    }

    if(id<4)
    {
        cout<<"-1"<<endl;
        return 0;
    }

    id=0;

    int a,b;


    for(int i=0;i<str.size();i++)
    {

        if(str[i]==tt[id])
        {
            id++;

            if(id==2)
            {
                a=i;
                break;
            }
        }

    }

    id=3;


    for(int i=str.size()-1;i>=0;i--)
    {
        if(str[i]==tt[id])
        {
            id--;
            if(id==1)
            {
                b=i;
                break;
            }

        }


    }

    int cnt=4;
    for(int i=a;i<=b;i++)
    {
        if(str[i]=='|')
            cnt++;
    }
    cout<<cnt<<endl;





    return 0;
}


/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
