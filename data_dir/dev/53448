#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define MOD 1000000009
ll power(ll a,ll b, ll m=MOD)
{
    ll res=1;
    while(b>0)
    {
        if(b&1)
            res=(res*a)%m;
        a=(a*a)%m;
        b>>=1;
    }
    return res;
}
ll inverse(ll a,ll m=MOD)
{
    return power(a,m-2,m);
}
#define INFl 1e18
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define vvl vector<vl>
#define ii pair<int,int>
#define pll pair<ll,ll>
#define vii vector<ii>
#define F first
#define S second
#define forl(i,n) for(int i=0;i<n;i++)
#define fore(i,n) for(int i=1;i<=n;i++)
#define rforl(i,n)  for(int i=n-1;i>=0;i--)
#define rfore(i,n)  for(int i=n;i>=1;i--)
#define INF 1100000009
#define gcd(a,b) __gcd(a,b)
#define all(x)  x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define print(x)    for(auto it=x.begin();it!=x.end();it++) cout<<*it<<' '; cout<<endl;
#define printii(x)  for(auto it=x.begin();it!=x.end();it++) cout<<it->F<<' '<<it->S<<endl;  
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
int dp[5005][5005],cnt[5005][5005];
string s;
int n;
int func(int i,int j)
{
    if(i>j) return 0;
    if(dp[i][j]!=-1)    return dp[i][j];
    int ans=0;
    if(j-i<=3)
    {
        if(s[i]==s[j])  ans=1;
    }
    else
    {
        if(s[i]==s[j] && func(i+2,j-2)) ans=1;
    }
    dp[i][j]=ans;
    return ans;
}
string res;

void recurse(vi valid,int pos,int k)
{
    if(k<=0)    return;
    vi curr(26,0);
    for(int x:valid)
    {
        if(x+pos<n)
        {
            curr[s[x+pos]-'a']+=cnt[x][x+pos];
        }
    }
    int idx;
    int sum=0;
    forl(i,26)
    {
        sum+=curr[i];
        if(sum>=k)
        {
            idx=i;
            sum-=curr[i];
            break;
        }
    }
    res+=(char('a'+idx));
    int t=0;
    vi newv;
    for(int x:valid)
    {
        if(x+pos<n)
        {
            if(s[x+pos]-'a'==idx)
            {
                newv.pb(x);
                if(dp[x][x+pos])
                    t++;
            }
        }
    }
    recurse(newv,pos+1,k-sum-t);
}
int main()
{
    fastio;
    cin>>s;
    forl(i,5005)
    forl(j,5005)    
        dp[i][j]=-1,cnt[i][j]=0;
    n=s.length();
    forl(i,n)
    for(int j=i;j<n;j++)
    {
        func(i,j);
        if(dp[i][j]==1) 
            cnt[i][j]++;
    }
    vi a;
    forl(i,n)
    {
        a.pb(i);
        for(int j=n-1;j>=0;j--)
            cnt[i][j]+=cnt[i][j+1];
    }
    int k;
    cin>>k;
    recurse(a,0,k);
    cout<<res<<endl;
}