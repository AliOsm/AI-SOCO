#include <iostream>
#include <algorithm>
#include <string>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <ctime>
#include <cstdlib>
#include <queue>
#include <cstring>
#include <cassert>
#include <bitset>

using namespace std;

#define mp make_pair
#define f first
#define s second
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define sz(x) ((int)(x).size())
#define sqr(x) ((x)*1ll*(x))

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;

vi a(24, 0);

bool is_good(const vi &v) {
    for(int i = 0; i < 24; i += 4) {
        for(int j = i; j < i + 4; ++j) {
            if(v[j] != v[i]) {
                return 0;
            }
        }
    }
    return 1;
}

vi round(vi v) {
    vi res = v;
    
    // top
    res[0] = v[1];
    res[1] = v[3];
    res[2] = v[0];
    res[3] = v[2];
    
    // bottom
    res[8] = v[10];
    res[9] = v[8];
    res[10] = v[11];
    res[11] = v[9];
    
    for(int i = 4; i < 8; ++i)
        res[i] = v[i + 8];
    for(int i = 12; i < 16; ++i)
        res[i] = v[i + 8];
    for(int i = 16; i < 20; ++i)
        res[i] = v[i - 12];
    for(int i = 20; i < 24; ++i)
        res[i] = v[i - 4];
    return res;
}

bool check_front_left(vi v) {
    vi res = v;
    res[2] = v[16];
    res[3] = v[18];
    res[13] = v[3];
    res[15] = v[2];
    res[8] = v[13];
    res[9] = v[15];
    res[16] = v[9];
    res[18] = v[8];
    return is_good(res);
}

bool check_front_right(vi v) {
    vi res = v;
    res[16] = v[2];
    res[18] = v[3];
    res[3] = v[13];
    res[2] = v[15];
    res[13] = v[8];
    res[15] = v[9];
    res[9] = v[16];
    res[8] = v[18];
    return is_good(res);
}

bool check_top_left(vi v) {
    vi res = v;
    res[4] = v[12];
    res[5] = v[13];
    res[12] = v[20];
    res[13] = v[21];
    res[16] = v[4];
    res[17] = v[5];
    res[20] = v[16];
    res[21] = v[17];
    return is_good(res);
}

bool check_top_right(vi v) {
    vi res = v;
    res[12] = v[4];
    res[13] = v[5];
    res[20] = v[12];
    res[21] = v[13];
    res[4] = v[16];
    res[5] = v[17];
    res[16] = v[20];
    res[17] = v[21];
    return is_good(res);
}

bool check_bottom_left(vi v) {
    vi res = v;
    res[6] = v[14];
    res[7] = v[15];
    res[14] = v[22];
    res[15] = v[23];
    res[18] = v[6];
    res[19] = v[7];
    res[22] = v[18];
    res[23] = v[19];
    return is_good(res);
}

bool check_bottom_right(vi v) {
    vi res = v;
    res[14] = v[6];
    res[15] = v[7];
    res[22] = v[14];
    res[23] = v[15];
    res[6] = v[18];
    res[7] = v[19];
    res[18] = v[22];
    res[19] = v[23];
    return is_good(res);
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);
    
    for(int i = 0; i < 24; ++i) cin >> a[i];
    
    if(check_top_left(a) || check_top_right(a)
       || check_bottom_left(a) || check_bottom_right(a)) {
        cout << "YES\n";
        return 0;
    }
    for(int i = 0; i < 4; ++i) {
        if(check_front_left(a) || check_front_right(a)) {
            cout << "YES\n";
            return 0;
        }
        a = round(a);
    }
    
    cout << "NO\n";
    return 0;
}
