# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define scn(x) scanf("%I64d",&x)
# define scan(x) scanf("%d",&x)
# define print(x) printf("%d ",x)
# define prnt(x) printf("%I64d ",x);
# define eol printf("\n")
# define IOS ios_base :: sync_with_stdio(0)
# define pe "Possible"
# define ie "Impossible"
# define halt(...) {fo << (__VA_ARGS__) << '\n';exit(0);}
# define rep1(n) for (int qwerty = 1;qwerty <= n;++qwerty)
# define CF
# ifdef CF
# define DEBUG
# endif // CF
# ifdef DEBUG
# define pp(n) cerr << #n << " = " << n << '\n'
# define ppp(v) for (auto it : v) cerr << it << ' ';cerr << '\n'
# define aprint(x,y,z) for (int i = x;i <= y;++i) cerr << z[i] << ' ';cerr << '\n'
# else
# define pp(n) ;
# define ppp(v) ;
# define aprint(x,y,z);
# endif // DEBUG
# define rep(n) for (int i = 1;i <= n;++i)
const int mod = 1e9 + 7;
char c[1 << 10][1 << 10];
int main(void)
{
    # ifdef CF
    # endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int ans = 2e9 + 69;
    int n,m;
    fi>>n>>m;
    for (int i = 1;i <= n;++i)
        fi>>(c[i] + 1);
    static int L[1 << 20],R[1 << 20];
    int sum = 0;
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j)
            L[i] += c[i][j] == '*',R[j] += c[i][j] == '*';
    sum = accumulate(L+1,L+1+n,0);
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j)
            if (L[i] + R[j] - (c[i][j] == '*') == sum)
                return fo << "YES\n" << i << ' ' << j << '\n',0;
    fo << "NO\n";
    return 0;
}
