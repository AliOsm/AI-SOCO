#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;

int n;
int k;
int dp[2][5001];
int mod = 1000000007;
int a, b;


int main() {
    scanf("%d %d %d %d", &n, &a, &b, &k);
    
                    
    
    
    for(int i = 1; i <= n; i++) {
            dp[0][i] = 0;
    }
    
    dp[0][a] = 1;
    
    for(int i = 2; i <= n; i++) {
            dp[0][i] += dp[0][i - 1];
    }
    
    int curr = 1;
    int prev = 0;
    
    for(int j = 0; j < k; j++) {
            for(int i = 1; i <= n; i++) {
                    dp[curr][i] = 0;
                    if (i < b) {
                          if ((b + i) & 1) dp[curr][i] += dp[prev][(b + i) / 2];
                          else dp[curr][i] += dp[prev][(b + i) / 2 - 1];
                          dp[curr][i] -= dp[prev][i];
                          dp[curr][i] %= mod;
                          dp[curr][i] += dp[prev][i - 1];
                    } else if (i > b) {
                           dp[curr][i] += dp[prev][n];
                           dp[curr][i] -= dp[prev][i];
                           dp[curr][i] %= mod;
                           dp[curr][i] += dp[prev][i - 1];
                           dp[curr][i] %= mod;
                           if ((b + i) & 1) dp[curr][i] -= dp[prev][(b + i) / 2];
                           else dp[curr][i] -= dp[prev][(b + i) / 2];
                    } else {
                           dp[curr][i] = 0;
                    }
                    dp[curr][i] = dp[curr][i] % mod;
            }
            for(int i = 2; i <= n; i++) {
                    dp[curr][i] += dp[curr][i - 1];
                    dp[curr][i] %= mod;
            }
            swap(curr, prev);
    }
    int ans = dp[prev][n];
    
    
    printf("%d", (ans + mod) % mod);
    
    
    return 0;
}
