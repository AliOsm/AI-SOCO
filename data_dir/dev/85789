#include <iostream>
#include <stdio.h>
#include <cmath>
#include <string>

using namespace std;
const int N = 1000000;

int dp[228][228];

int main() {
    ios::sync_with_stdio(false);
//    return 0;
    int n;
    cin >> n;

    for(int i = 0; i <= 'z' - 'a'; i++) {
        for(int j = 0; j <= 'z' - 'a'; j++) {
            dp[i][j] = 0;
        }
    }

    for(int i = 0; i < n; i++) {
        string str;
        cin >> str;

        char f = str[0] - 'a'
        , l = str.back() - 'a';


        for(int j = 0; j <= 'z' - 'a'; j++) {
            if(dp[j][f] != 0)
                dp[j][l] = max(dp[j][l], dp[j][f] + (int)str.size());
        }
        dp[f][l] = max(dp[f][l], (int)str.size());
    }

    int ans = 0;
    for(int j = 0; j <= 'z' - 'a'; j++) {
        ans = max(dp[j][j], ans);
    }
//    for(int i = 0; i <= 'z' - 'a'; i++) {
//        for(int j = 0; j <= 'z' - 'a'; j++) {
//            cout << dp[i][j] << " ";
//        }
//        cout << "\n";
//    }
    cout << ans << "\n";
    return 0;
}
