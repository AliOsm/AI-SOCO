//ll n,k;
//bool solve(ll eat){
//    ll rem = (n-eat)*(n-eat+1)/2-eat;
//    return rem >= k;
//}
//void _(){
//    cin >> n >> k;
//    ll lo = 0, hi = n, mid;
//    while(lo < hi){
//        mid = (lo+hi+1)/2;
//        if(solve(mid))
//            lo = mid;
//        else
//            hi = mid-1;
//    }
//    print(lo);
//}
//
#include <iomanip>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define all(v) (v).begin(), (v).end()
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 void print(T x, string end = "\n"){
    cout << x << end;
}
ll n,k;
bool solve(ll eat){
    ll rem = (n-eat)*(n-eat+1)/2-eat;
    return rem >= k;
}
void _(){
    cin >> n >> k;
    ll lo = 0, hi = n, mid;
    while(lo < hi){
        mid = (lo+hi+1)/2;
        if(solve(mid))
            lo = mid;
        else
            hi = mid-1;
    }
    print(lo);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
