#include <bits/stdc++.h>
using namespace std;

#define LL long long

LL F[1000006];
char in[1000006];
int id1[1000006];
int id2[1000006];
int n;


void built()
{
    LL tp = 1;
    for(int i=0;i<=1000000;i++){
            F[i] = tp;
            tp *= 13;
    }
}

LL hash_me(string s)
{
    LL ret = 0;
    int siz = 5;
    for(int i=0;i<siz;i++){
            ret += s[i] * F[4 - i];
    }
    return ret;
}

void ans_me(int *a,int &x,LL val)
{
    LL hs = 0;
    for(int i=0;i<n;i++){
            if(i < 5) hs += in[i] * F[4 - i];
            else hs = hs * 13 + in[i] - in[i-5] * F[5];
            if(i >= 4){
//                    cout << "yes\n";
//                    cout << hs << endl;
                    if(hs == val) a[x++] = i;
            }
    }
}

int main()
{
    built();

    scanf("%s",in);
    n = strlen(in);
    LL hv,mt;
    hv = hash_me("heavy");
    mt = hash_me("metal");
//    cout << hv << ' ' << mt << endl;
    int n1,n2;
    n1 = n2 = 0;
    ans_me(id1,n1,hv);
    ans_me(id2,n2,mt);
//    for(int i=0;i<n1;i++) cout << id1[i] << ' '; cout << endl;
//    for(int i=0;i<n2;i++) cout << id2[i] << ' '; cout << endl;
    LL ans = 0;
    for(int i=0;i<n1;i++){
//            cout << (upper_bound(id2,id2+n2,id1[i]) - id2) << endl;
            ans += n2 - (upper_bound(id2,id2+n2,id1[i]) - id2);
    }
    cout << ans << endl;
    return 0;
}
