#pragma comment(linker, "/STACK:134217728")

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

typedef long long LL;

int n;

int a[5010];
int add[5010][5010];

int main()
{
	scanf("%d", &n);
	for(int i = 0; i < n; ++i)
		scanf("%d", &a[i]);
	int inv = 0;
	for(int i = 0; i < n; ++i)
		for(int j = i + 1; j < n; ++j)
			inv += a[i] > a[j];
	for(int i = 0; i < n; ++i)
	{
		int cur = 0;
		for(int j = i - 1; j >= 0; --j)
		{
			add[i][j] = cur;
			cur += a[j] < a[i];
			cur -= a[j] > a[i];
		}
		cur = 0;
		for(int j = i + 1; j < n; ++j)
		{
			cur += a[j] > a[i];
			cur -= a[j] < a[i];
			add[i][j] = cur;
		}
	}
	int Min = inv;
	for(int i = 0; i < n; ++i)
		for(int j = 0; j < n; ++j)
			Min = min(Min, inv + add[i][j] + add[j][i]);
	int res = 0;
	for(int i = 0; i < n; ++i)
		for(int j = i + 1; j < n; ++j)
			res += Min == inv + add[i][j] + add[j][i];
	printf("%d %d\n", Min, res);
	return 0;
}