#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define fi first
#define se second
#define pi pair<int,int>
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v));
#define forn(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define iforn(i, x, n) for( i = x; i<(ll)(n); i++)
#define rep(i, x, n) for ( i =x; i>=(ll)(n); i--)
#define irep(i, x, n) for( i =x; i>(ll)(n); i--)
using namespace std;
typedef long long  int  ll;
const long long  mod=1e9 + 7;
ll n,m,k,res=0,ans=0,sm=0,edge=-1,T;
ll a[500005],t[500005],dpt[500002]={0},bitt[2000005]={0},bitx[2000005]={0},vis[500005]={0},dp[500005],memo[500005][3];

vector<ll> fact[500005];
set< pi >st,st1,st2;
set<ll>stres;
string s,s1,s2,s3,s4;
vector<ll>v[500005],vnode,vans,v3;
vector< pi >vv,vv1,adj[500005],v1,v2;
vector< pair< int,pi> > vvv;
priority_queue <ll> q;
map<  pair<ll,ll> ,ll > mp;
set< pi > ::iterator it,it1,it2;
int voyel(char c){
	if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;
	return 0;
}
vector< pair<char ,char > > vvc;

void dfs1(ll x,ll p){
    vis[x]=1;
    if(p!=-1)dpt[x]=dpt[p]+mp[{x,p}];
    for(ll y:v[x])if(!vis[y])dfs1(y,x);
}
/******************************************/
void updatet(ll x,ll val){
  for(;x<=1000005;x+=x&-x)
         bitt[x]+=val;;
}
/******************************/
ll queryt(ll x){
	ll sum=0;
	for(;x>0;x-=x&-x){
	sum+=bitt[x];
	}
	return sum;
}
/******************************************/
void updatex(ll x,ll val){
  for(;x<=1000005;x+=x&-x)
         bitx[x]+=val;
}
/******************************/
ll queryx(ll x){
	ll sum=0;
	for(;x>0;x-=x&-x){
	sum+=bitx[x];
	}
	return sum;
}
/****************************/
ll f(ll idx,ll tt){
   ll sm=queryt(idx);
   if(sm<tt)return 0;
   else return 1;
}
/***************************/
void dfs2(ll x){
  vis[x]=1;
  ll nbx=a[x];
  ll tx=t[x];
  ll prod=nbx*tx;
  updatet(tx,prod);
  updatex(tx,nbx);
  ll idx1=-1;
  for(ll z=1000000;z>=1;z/=2){
      while(idx1+z<=1000005&&!f(idx1+z,T-dpt[x]))idx1+=z;
  }
 ll idx2=idx1+1;
 ll nbxt=queryx(idx1);
 ll trest=T-dpt[x]-queryt(idx1);
 if(queryt(idx2)>queryt(idx1))nbxt+=(trest/idx2);
 dp[x]=nbxt;
 for(ll y:v[x])if(!vis[y])dfs2(y);
  updatet(tx,-prod);
  updatex(tx,-nbx);
}
/*********************************************/

ll dfs(ll x,ll p,ll flag){
    vis[x]=1;
   // if(v[x].size()==1&&p!=-1)return dp[x];
    ll &ret=memo[x][flag];
    if(ret!=-1)return ret;
    if(!flag){
           // cout<<p<<" "<<x<<" "<<flag<<endl;
        ll mm=0;
        for(ll y:v[x]){
            if(!vis[y])mm=max(mm,dfs(y,x,1));
        }
        return ret=max(mm,dp[x]);
    }
    else{
          //  cout<<p<<" "<<x<<" "<<flag<<endl;
        ll mm=0,maxson=x;
        for(ll y:v[x]){
            if(!vis[y]){
                if(mm<=dfs(y,x,1)){
                    mm=dfs(y,x,1);
                    maxson=y;
                }
            }
        }
         mm=dp[x];
           for(ll y:v[x]){
             if(y!=p&&y!=maxson)mm=max(mm,dfs(y,x,1));
           }
        return ret=max(mm,dp[x]);
    }
}
/*********************************************/
int main(){
In_the_name_of_allah_the_merciful
	ll i=0,j=0,x,y,z=0,mx=0,nb0=0,nb=0,nbmax=0,nbinf=0,mm=5e9,idx=0,ok=0,l,r,negatif=0,positif=0,q,d;
	char c;
   //freopen("a.in","r",stdin);
    cin>>n>>T;
    for(i=1;i<=n;i++)cin>>a[i];
    for(i=1;i<=n;i++)cin>>t[i];
    for(i=2;i<=n;i++){
        cin>>x>>y;
        v[x].pb(i);
        v[i].pb(x);
        mp[{i,x}]=mp[{x,i}]=y;
    }
    memset(dpt,0,sizeof(dpt));
    memset(dp,0,sizeof(dp));
    dfs1(1,-1);
    for(i=1;i<=n;i++)dpt[i]*=2;
    memset(vis,0,sizeof(vis));
    dfs2(1);
    memset(vis,0,sizeof(vis));
    memset(memo,-1,sizeof(memo));
    res=dfs(1,-1,0);
    cout<<res;
Alhamdulillah
 }
