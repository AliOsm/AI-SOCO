#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef unsigned long long ull;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int N = 100010;
const int MX = 123456;
const int mod = (int)1e9 + 7;
const int base = 1023456789;
const ull BS1 = 10000019ULL;
const int INF = (1 << 29);

template < class T > inline void fastScan(T &x){
    register char c = getchar();
    int neg = 0; x = 0;
    for(   ; (c < 48 || c > 57) && (c != '-'); c = getchar());
    if(c == '-') { neg = 1; c = getchar(); }
    for(   ; c > 47 && c < 58; c = getchar()){
        x = (x << 1) + (x << 3) + c - 48;
    }
    if(neg) x = -x;
}

int fx[]={1,-1,0,0};
int fy[]={0,0,-1,1};

int inp[N];
int arr[N];

int main(){
    int n, k;
    fastScan(n); fastScan(k);
    for(int i = 1; i <= n; i++){
        fastScan(inp[i]);
        arr[i] = inp[i];
    }
    if(k == 1){
        sort(inp + 1, inp + n + 1);
        printf("%d\n", inp[1]);
    } else if(k == 2) {
        int ans = - 2 * 1e9;
        for(int i = n - 1; i >= 1; i--){
            arr[i] = min(arr[i], arr[i + 1]);
        }
        for(int i = 1; i < n; i++){
            ans = max(ans, inp[i]);
            ans = max(ans, arr[i + 1]);
            inp[i + 1] = min(inp[i + 1], inp[i]);
        }
        printf("%d\n", ans);
    } else {
        sort(inp + 1, inp + n + 1);
        printf("%d\n", inp[n]);
    }
}
