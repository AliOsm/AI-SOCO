#include<bits/stdc++.h>
using namespace std;
#define pii pair<int,int>
#define MAX 1005

queue<pii>Q;
int dirX[4]={1,0,-1,0};
int dirY[4]={0,1,0,-1};

string G[MAX];
int m,n;
int dist[MAX][MAX];
bool vis[MAX][MAX];
int X1,Y1,X2,Y2,k;

bool valid(int x,int y){
    if(x<0 || y<0 || x>=n || y>=m) return false;
    if(G[x][y]=='#') return false;
    return true;
}

int BFS(int ux,int uy){
    dist[ux][uy]=0;
    Q.push(make_pair(ux,uy));

    while(!Q.empty()){
        pii v=Q.front();
        int vx=v.first;
        int vy=v.second;
        Q.pop();


        for(int i=0;i<4;i++){
            for(int j=1;j<=k;j++){
                int nowX=vx+dirX[i]*j;
                int nowY=vy+dirY[i]*j;

                if(!valid(nowX,nowY)) break;
                if(vis[nowX][nowY]) continue;

                vis[nowX][nowY]=1;
                dist[nowX][nowY]=dist[vx][vy]+1;
                if(nowX==X2 && nowY==Y2) return dist[X2][Y2];

                Q.push(make_pair(nowX,nowY));
            }
        }
    }
    return -1;
}

int main(){
    scanf("%d %d %d",&n,&m,&k);
    for(int i=0;i<n;i++) cin>>G[i];
    scanf("%d %d %d %d",&X1,&Y1,&X2,&Y2);
    X1--;Y1--;X2--;Y2--;

    int ret=BFS(X1,Y1);
    if(X1==X2 && Y1==Y2) ret=0;
    cout<<ret<<endl;
}