#include<bits/stdc++.h>
using namespace std;

#define GOD ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)

#define sc(d,a) scanf("%d",&a)
#define pf(d,a) printf("%d",a)

//repetition function
#define rep(i,a,b) for(int i = int(a); i <= int(b); i++ )
#define repd(i,a,b) for(int i = int(a); i >= int(b); i-- )
#define foreach(v, c) for( typeof((c).begin()) v = (c).begin(); v != (c).end(); ++v)
#define all(a) a.begin(), a.end()
#define in(a,b) ( (a).find(b) != (a).end())
#define pb push_back
#define fill(a,v) memset(a, v, sizeof a)
#define sz(a) ((int)(a.size()))
#define mp make_pair
#define range(x,a,b) ((x)>=(a) && (x)<=(b))
#define lb lower_bound
#define ub upper_bound
#define F first
#define S second
#define nl '\n'
// Useful constants
#define INF (int)1e9
#define EPS 1e-9
// Useful hardware instructions
#define bitcount __builtin_popcount
#define gcd __gcd // greatest cmmon divisor in hardware fast
// Useful container manipulation / traversal macros
// Some common useful functions
#define checkbit(n,b) ( (n >> b) & 1)
#define UNIQUE(a) sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind) (lower_bound(all(arr),ind)-arr.begin())
typedef long long int ll;
typedef long double ld;
typedef vector<ll> vi;
typedef pair<ll, ll> pii;

const ll N=1e6+9;
const ll M=1e9+7;

set<ll> st;
map<ll,ll> mpp;
vector<ll> v1,v2;
ll a[N],b[N],h[N];


int main(){
    GOD;
    ll n,l=0,x,y,z,r;
    cin>>n>>r;
    rep(i,1,n){cin>>a[i];
    if(a[i]==1){
        l++;
        x=i-r+1;
        y=i+r-1;
        if(x<1)x=1;
        if(y>n)y=n;
        h[x]++;
        h[y+1]--;
    }

    }
    rep(i,2,N)h[i]+=h[i-1];
    ll sum=0;
    rep(i,1,n)if(h[i]==0)return cout<<-1,0;
    rep(i,1,n){
        if(a[i]==1){
             x=i-r+1;
            y=i+r-1;
            if(x<1)x=1;
            if(y>n)y=n;
            //cout<<i<<x<<y<<nl;
            ll flag=0;
            rep(j,x,y){
                if(h[j]-1==0)flag=1;
            }
            if(flag)sum++;
            else {
            	rep(j,x,y)h[j]--;
            }
        }
    }
    cout<<sum;
}
