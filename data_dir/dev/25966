#include<iostream>
#include<algorithm>
#include<queue>
#include<string>
#include<vector>
#include<map>
#include<list>
#include<set>
#include<cstring>
#include<ctime>
#include<cmath>
#include<limits>
#include<iterator>
#include<functional>
#include<unordered_map>
#include<stack>
#include<bitset>

#define all(v) v.begin(), v.end()
#define setv(ar, val) memset(ar, val, sizeof(ar));
#define ll long long int
#define ull unsigned long long int
#define PI 3.1415926535897932384626433832795
#pragma comment(linker, "/STACK:536870912")
#pragma warning(disable : 4996)
using namespace std;

const int N = 4e5 + 100;
ll ct[N], g[N], x[N], y[N], w[N];

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int n;
	scanf("%d", &n);

	int z = 0;
	for (int i = 0; i < n; i++) {
		scanf("%lld%lld", &x[i], &y[i]);
		y[i]++;
		g[z++] = x[i];
		g[z++] = y[i];
	}

	sort(g, g + z);
	z = unique(g, g + z) - g;

	for (int i = 0; i < n; i++) {
		x[i] = lower_bound(g, g + z, x[i]) - g;
		y[i] = lower_bound(g, g + z, y[i]) - g;
		w[x[i]]++;
		w[y[i]]--;
	}


	int t = 0;
	for (int i = 0; i < z - 1; i++) {
		t += w[i];
		ct[t] += g[i + 1] - g[i];
	}

	for (int i = 1; i <= n; i++)
		printf("%lld ", ct[i]);




	return 0;
}