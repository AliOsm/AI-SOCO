#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

typedef long long ll;

const int N=110;
const ll inf=0x3f3f3f3f3f3f3f3fll;

using namespace std;

int n,m,k;


ll dp[51][51][51][101];

struct data
{
	ll a,b,c;
	int id;
	bool operator < (const data &r) const {return c<r.c;}
}a[N];

ll dfs(int l,int d,int p,int c)
{
	ll &ret=dp[l][d][p][c];
	if(ret+1) return ret;
	if(d==0) return 0;
	if(l==n) return -inf;
	ll pp=a[p].a+c;ret=-inf;
	if(a[p].c<a[l].c)
	{
		if(pp+k<=a[l].b && pp+k>=a[l].a)
			ret=max(ret,dfs(l+1,d-1,l,pp+k-a[l].a)+pp+k);
		if(pp*k<=a[l].b && pp*k>=a[l].a)
			ret=max(ret,dfs(l+1,d-1,l,pp*k-a[l].a)+pp*k);
	}
	ret=max(ret,dfs(l+1,d,p,c));
	if(ret<0) ret=-inf;
	return ret;
}

void display(int l,int d,int p,int c)
{
	if(d==0) return ;
	ll pp=a[p].a+c;
	if(a[p].c<a[l].c)
	{
		if(pp+k<=a[l].b && pp+k>=a[l].a)
		{
			if(dfs(l,d,p,c)==dfs(l+1,d-1,l,pp+k-a[l].a)+pp+k)
			{
				printf("%d %I64d\n",a[l].id,pp+k);
				display(l+1,d-1,l,pp+k-a[l].a);
				return ;
			}
		}
		if(pp*k<=a[l].b && pp*k>=a[l].a)
		{
			if(dfs(l,d,p,c)==dfs(l+1,d-1,l,pp*k-a[l].a)+pp*k)
			{
				printf("%d %I64d\n",a[l].id,pp*k);
				display(l+1,d-1,l,pp*k-a[l].a);
				return ;
			}
		}
	}
	display(l+1,d,p,c);
	return ;
}
int main()
{
	scanf("%d%d%d",&m,&n,&k);
	for(int i=0;i<n;i++)
	scanf("%I64d%I64d%I64d",&a[i].a,&a[i].b,&a[i].c),a[i].id=i+1;
	sort(a,a+n);a[n].a=0;
	memset(dp,-1,sizeof(dp));
	ll ret=0;
	for(int i=0;i<n;i++)
		for(int j=0;j<=a[i].b-a[i].a;j++)
			ret=max(ret,dfs(i+1,m-1,i,j)+a[i].a+j);
	if(ret==0)
	{
		puts("NO");
		return 0;
	}
	puts("YES");
	for(int i=0;i<n;i++)
		for(int j=0;j<=a[i].b-a[i].a;j++)
		{
			if(ret!=dfs(i+1,m-1,i,j)+a[i].a+j) continue;
			printf("%d %I64d\n",a[i].id,a[i].a+j);
			display(i+1,m-1,i,j);
			return 0;
		}
	return 0;
}

