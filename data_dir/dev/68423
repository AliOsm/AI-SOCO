#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define all(a) a.begin(), a.end()
#define forn(i, n) for(int i = 0; i < int(n); i++) 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.x << ", " << a.y << ")";
}

template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i) out << ", ";
		out << v[i];
	}
	return out << "]";
}

mt19937 rnd(time(NULL));

const int INF = int(1e9);
const li INF64 = li(1e18);
const int MOD = INF + 7;
const ld EPS = 1e-9;
const ld PI = acos(-1.0);

const int N = 100 * 1000 + 13;
const int MAGIC = 500;

int d, n;
li x;

bool read () {
	if (scanf("%d%d%lld", &n, &d, &x) != 3)
		return false;
	return true;
}

int a[N], b[N], c[N];

li getNextX() {
    x = (x * 37 + 10007) % 1000000007;
    return x;
}

void initAB() {
    int i;
    for(i = 0; i < n; i = i + 1){
        a[i] = i + 1;
    }
    for(i = 0; i < n; i = i + 1){
        swap(a[i], a[getNextX() % (i + 1)]);
    }
    for(i = 0; i < n; i = i + 1){
        if (i < d)
            b[i] = 1;
        else
            b[i] = 0;
    }
    for(i = 0; i < n; i = i + 1){
        swap(b[i], b[getNextX() % (i + 1)]);
    }
}

void solve() {
	memset(c, 0, sizeof(c));
	initAB();
	
	forn(i, n){
		if (a[i] + MAGIC >= n){
			forn(j, n - i){
				if (b[j]){
					c[i + j] = max(c[i + j], a[i]);
				}
			}
		}
	}
	
	set<pt, greater<pt>> vals;
	vector<int> pos;
	
	forn(i, n){
		vals.insert(mp(a[i], i));
		if (b[i]) pos.pb(i);
		
		if (c[i] == 0){
			if (sz(vals) * 2 < sz(pos)){
				for (auto j : vals){
					if (b[i - j.y]){
						c[i] = j.x;
						break;
					}
				}
			}
			else{
				for (auto j : pos){
					c[i] = max(c[i], a[i - j]);
				}
			}
		}
	}
	
	forn(i, n)
		printf("%d\n", c[i]);
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	
	int tt = clock();
	
#endif
	
	cerr.precision(15);
	cout.precision(15);
	cerr << fixed;
	cout << fixed;

	while(read()) {	
		solve();
		
#ifdef _DEBUG
	cerr << "TIME = " << clock() - tt << endl;
	tt = clock();
#endif

	}
}