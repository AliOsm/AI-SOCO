#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
const int MAXN = 1e5+20000;
const int INF = 1e9+7;
const int base1 = 67;
const int base2 = 79;
const int MAXNk = 1e4+20;
const double eps = 1e-9;
const long long inf = 1e18;
using namespace std;

string s;
vector<set<int> > ind(27);
int q,l,r,ans,ind1;
char ch;
int main(){
	ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
	cout.setf(ios::fixed), cout.precision(8);
//	freopen("kotlin.in", "r", stdin);
//	freopen("kotlin.out", "w", stdout);
	cin>>s;
	for (int i=0; i<s.length(); i++)
	{
		ind[ s[i] - 'a' ].insert(i);
	}
	cin>>q;
	while ( q >  0 )
	{
	     q--;
		int x;
		cin>>x;
		if (x == 1)
		{
			cin>>l>>ch;
			l--;
			ind[ s[l] - 'a' ].erase(l);
			s[l] = ch;
			ind[ s[l] - 'a' ].insert(l);
		}
		else
		{
			cin>>l>>r;
			l--;
			r--;
			ans = 0;
			for (int i=0; i<26; i++) 
			{
				auto it = ind[i].lower_bound(l);
				if (it !=ind[i].end() && *it<=r) ans++;
			}
			cout<<ans<<endl;
		}
	}
	return 0;
}
