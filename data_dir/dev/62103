#include<bits/stdc++.h>
#define N 200005
using namespace std;

int n,x,y,a[N],ans[N],tut[N];
vector<int> v[N],c[N];

void dfs(int node,int ata,int dep,int gcd) {

  ans[node]=gcd;
  for(int i=0;i<c[node].size();i++) {
    int num=c[node][i];
    if(tut[num]>=dep-1) {
      ans[node]=max(ans[node],num);
    }
    tut[num]++;
  }
  for(int i=0;i<v[node].size();i++) {
    if(v[node][i]!=ata) {
      dfs(v[node][i],node,dep+1,__gcd(gcd,a[node]));
    }
  }
  for(int i=0;i<c[node].size();i++) {
    int num=c[node][i];
    tut[num]--;
  }

}

int main() {

  scanf("%d",&n);
  for(int i=1;i<=n;i++) {
    scanf("%d",&a[i]);
  }
  for(int i=2;i<=n;i++) {
    scanf("%d %d",&x,&y);
    v[x].push_back(y);
    v[y].push_back(x);
  }
  for(int i=1;i<=n;i++) {
    c[i].push_back(1);
    c[i].push_back(a[i]);
    for(int j=2;j*j<=a[i];j++) {
      if(a[i]%j==0) {
        c[i].push_back(j);
        if(j!=a[i]/j) {
          c[i].push_back(a[i]/j);
        }
      }
    }
  }
  dfs(1,0,0,0);
  for(int i=1;i<=n;i++) {
    printf("%d ",ans[i]);
  }

}
