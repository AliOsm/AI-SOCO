#include <bits/stdc++.h>

using namespace std;

#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
#define endl "\n"
typedef long long ll;
const int MAX=200005;

int n,m;
vector<string>v(1005);
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};

bool vis[1005][1005];
int ids[1005][1005];
vector<int>idd;

int id=0;

bool check(pair<int,int>nd,int i){
	if(nd.first+dx[i]>=0&&nd.first+dx[i]<n&&nd.second+dy[i]>=0&&nd.second+dy[i]<m)
		return true;
	return false;
}

int dfs(pair<int,int>nd){
	vis[nd.first][nd.second]=1;
	ids[nd.first][nd.second]=id;
	int ret=1;
	for(int i=0;i<4;i++){
		pair<int,int>child(nd.first+dx[i],nd.second+dy[i]);
		if(check(nd,i)&&v[child.first][child.second]=='.'&&!vis[child.first][child.second]){
			ret+=dfs(child);
		}
	}
	return ret%10;
}

int main(){
	ios_base::sync_with_stdio(0);
		cin.tie(0);
	cin>>n>>m;
	memset(vis,0,sizeof vis);
	for(int i=0;i<n;i++)
		cin>>v[i];
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(!vis[i][j]&&v[i][j]=='.'){
				idd.push_back(dfs({i,j}));
				id++;
			}
		}
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++)
			if(v[i][j]=='.')
				cout<<v[i][j];
			else{
				set<int>s;
				for(int k=0;k<4;k++)
					if(check({i,j},k)&&v[i+dx[k]][j+dy[k]]=='.'){
						s.insert(ids[i+dx[k]][j+dy[k]]);
					}
				int sum=1;
				for(set<int>::iterator it=s.begin();it!=s.end();it++)
					sum+=idd[*it],sum%=10;
				cout<<sum;
			}
		cout<<endl;
	}
	return 0;
}
