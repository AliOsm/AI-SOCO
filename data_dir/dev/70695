/*
 * Author    : raj1307 - Raj Singh
 * Institute : Jalpaiguri Government Engineering College
 * Date      : 22.07.19
 */

#pragma GCC optimize("O3")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
 
#include <memory.h>
#include <assert.h>
using namespace std;
 
#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define endl "\n"
#define int long long
#define pb push_back
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}

const int N = 5e5 + 5;

int n,l[100];



int cache[105][105];

int dp(int pos,int ch){


	if(pos==n-1){
		if(l[pos]==0) 
			return 0;
		else if(l[pos]==1){
			if(ch==1)
				return 0;
			else
				return 1;
		}
		else if(l[pos]==2){
			if(ch==2)
				return 0;
			else
				return 1;
		}
		else if (l[pos]==3)
				return 1;

	}
	else if(cache[pos][ch]!=-1){
		//cout<<pos<<" "<<ch<<endl;
		return cache[pos][ch];
	}

	else{
		int y;
		if(l[pos]==0)
			y=dp(pos+1,0);
		else if(l[pos]==1){
			if(ch==0)
				y=max(dp(pos+1,0),1+dp(pos+1,1));
			else if(ch==1)
				y=dp(pos+1,0);
			else if(ch==2)
				y=max(dp(pos+1,0),1+dp(pos+1,1));
			


		}
		else if(l[pos]==2){
			if(ch==0)
				y=max(dp(pos+1,0),1+dp(pos+1,2));
			else if(ch==2)
				y=dp(pos+1,0);
			else if(ch==1)
				y=max(dp(pos+1,0),1+dp(pos+1,2));
			

		}
		else if(l[pos]==3){

			if(ch==0)
				y=max(dp(pos+1,0),max(1+dp(pos+1,2),1+dp(pos+1,1)));
			else if(ch==1){
				//cout<<dp(pos+1,0)<<" "<<dp(pos+1,2);
				y=max(dp(pos+1,0),1+dp(pos+1,2));
			}
			else if(ch==2)
				y=max(dp(pos+1,0),1+dp(pos+1,1));
			


		}





		cache[pos][ch]=y;
		return cache[pos][ch];


	}


}










signed main() {
    fio;
	
	#ifndef ONLINE_JUDGE 
  
    // For getting input from input.txt file 
    	freopen("input.txt", "r", stdin); 
  
    // Printing the Output to output.txt file 
    	freopen("output.txt", "w", stdout); 
  
	#endif 
	



    	cin>>n;
    	for(int i=0;i<n;++i) cin>>l[i];

    	memset(cache,-1,sizeof(cache));
    	if(n==1){
    		if(l[0]==0)
    			cout<<1;
    		else
    			cout<<0;
    		return 0;

    	}




    	if(l[0]==0)
    		cout<<n-dp(1,0);
    	else if(l[0]==1){

    		//cout<<dp(1,0)<<" "<<dp(1,1);
    		cout<<n-max(dp(1,0),1+dp(1,1));
    	}
    	else if(l[0]==2)
    		cout<<n-max(dp(1,0),1+dp(1,2));
    	else
    		cout<<n-max(dp(1,0),max(1+dp(1,2),1+dp(1,1)));


	
	
	
	
	return 0;
}
