#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				2000000000000000100
#define PI 3.14159265
#define s second
#define f first
#define Ceil(x,y) ((x+y-1)/y)
#define EPS 1e-8
#define IO ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define LFT(x)  (x*2)
#define RGHT(x) (x*2+1)
const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
typedef unsigned int uint;
typedef long long ll;
int dX[] = {0,1,0,-1,1,1,-1,-1};
int dY[] = {1,0,-1,0,1,-1,1,-1};
string alpha = "abcdefghijklmnopqrstuvwxyz";
const int N = 1505;
int n,k,glob_idx = 1;
string str[N];
unordered_map<char,int>tr;
char tmp[50];
int tri[N*50][3];
void Add(string& s,int I){
    int idx = 0;
    for(int i = 0;i<sz(s);++i){
        if(!tri[idx][tr[s[i]]]) tri[idx][tr[s[i]]] = glob_idx++;
        idx = tri[idx][tr[s[i]]];
    }
}
bool ok['Z'];
int main()
{
#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
#endif
    int ans = 0;
    sc(n); sc(k);
    tr['S'] = 0;
    tr['E'] = 1;
    tr['T'] = 2;
    for(int i = 0;i<n;++i){
        scanf("%s",tmp),str[i] = tmp;
        Add(str[i],i);
    }


    for(int i = 0;i<n;++i)
        for(int j = i+1;j<n;++j){
            string wanted = "";
            int idx = 0;
            for(int w = 0;w<k;++w){
                if(str[i][w] == str[j][w]) wanted+=str[i][w];
                else{
                    ok['S'] = 1; ok['E'] = 1; ok['T'] = 1;
                    ok[str[i][w]] = 0; ok[str[j][w]] = 0;
                    if(ok['S']) wanted+='S';
                    if(ok['E']) wanted+='E';
                    if(ok['T']) wanted+='T';
                }
                if(!tri[idx][tr[wanted.back()]]) { wanted.pop_back(); break; }
                idx = tri[idx][tr[wanted.back()]];
            }
            ans += (sz(wanted) == k);
        }
    printf("%d\n",ans / 3);

    return 0;
}

