#include <bits/stdc++.h>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e3 + 5;
const double eps = 1e-9;
using namespace std;
char tmp[MAXN];
int sieve[MAXN], par[MAXN], cnt1[30], cnt2[MAXN];
priority_queue<pii,vii,less<pii> > p1;
priority_queue<pair<int,pii>,vector<pair<int,pii> >,less<pair<int,pii> > > p2;

int query(int x)
{
    if (x != par[x])
        return par[x] = query(par[x]);
    return par[x];
}

void join(int x, int y)
{
    x = query(x);
    y = query(y);
    if (x != y)
        par[x] = y;
}

int main()
{
    /*for (int i = 2; i * i < MAXN; i++)
        if (!sieve[i])
            for (int j = i * i; j < MAXN; j += i)
                sieve[j] = 1;*/
    for (int i = 1; i < MAXN; i++)
        par[i] = i;
    scanf("%s", tmp);
    int n = strlen(tmp);
    for (int i = 2; i <= n; i++)
    {
        int val = i;
        for (int j = 2; j * j <= i; j++)
        {
            if (val % j == 0)
                join(i, j);
            while (val % j == 0)
                val /= j;
            if (val == 1)
                break;
        }
        if (val > 1)
            join(i, val);
    }
    for (int i = 0; i < n; i++)
    {
        cnt1[tmp[i] - 'a']++;
        cnt2[query(i + 1)]++;
    }
    for (int i = 0; i < 26; i++)
        p1.push({cnt1[i], i});
    for (int i = 0; i < n; i++)
    {
        p2.push({cnt2[query(i + 1)], {query(i + 1), i}});
        tmp[i] = '#';
    }
    while (!p2.empty())
    {
        pair<int,pii> cur = p2.top();
        p2.pop();
        pii ch = p1.top();
        p1.pop();
        if (ch.fi < cur.fi)
            return !printf("NO\n");
        tmp[cur.se.se] = ch.se + 'a';
        ch.fi--;
        while (!p2.empty() && p2.top().se.fi == cur.se.fi)
        {
            pair<int,pii> nx = p2.top();
            p2.pop();
            tmp[nx.se.se] = ch.se + 'a';
            ch.fi--;
        }
        if (ch.fi != 0)
            p1.push(ch);
    }
    printf("YES\n%s", tmp);
    return 0;
}
