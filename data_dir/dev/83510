#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <queue>

using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int n, h;
	cin >> n >> h;
	vector<pair<int, int>> x(n);
	for (int i = 0; i < n; ++i)
		cin >> x[i].first >> x[i].second;
	int ans = h;
	int sum = h;
	int wind = 0;
	int r = -1;
	for (int i = 0; i < n; ++i)
	{
		if (r < i)
		{
			sum = h;
			wind = x[i].second - x[i].first;
			r = i;
		}
		while (r < n - 1 && sum > x[r + 1].first - x[r].second) {
			sum -= x[r + 1].first - x[r].second;
			wind += x[r + 1].second - x[r + 1].first;
			++r;
		}
		ans = max(ans, h + wind);
		if (i != n - 1) {
			sum += x[i + 1].first - x[i].second;
			wind -= x[i].second - x[i].first;
		}
	}

	cout << ans << '\n';

	return 0;
}
