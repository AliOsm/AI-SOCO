#include <bits/stdc++.h>
using namespace std;
#define oo 1000000010
#define mod 1000000007
const int N = 510;
string s , t;
char tmpread[N];

int n , m;

int nxt[N][26];

int best[N][N];

void read(string &s){
	scanf("%s",tmpread);
	s = (string)tmpread;
}


void solve(){
	read(s);
	read(t);
	n = (int)s.size();
	m = (int)t.size();
	for(int i = 0 ;i < 26;i++) nxt[n][i] = n;
	for(int i = n - 1;i >= 0;i--){
		for(int j = 0 ;j < 26;j++){
			nxt[i][j] = nxt[i + 1][j];
		}
		nxt[i][s[i] - 'a'] = i;
	}
	for(int last = 0 ; last < m;last++){
		for(int i = 0 ;i <= last + 1;i++){
			for(int j = last + 1;j <= m;j++){
				if(i == 0 && j == last + 1){
					best[i][j] = -1;
					continue;
				}
				best[i][j] = n;
				if(i > 0) 
					best[i][j] = min((best[i - 1][j] < n ? nxt[best[i - 1][j] + 1][t[i - 1] - 'a'] : n) , best[i][j]);
				if(j > last + 1) 
					best[i][j] = min((best[i][j - 1] < n ? nxt[best[i][j - 1] + 1][t[j - 1] - 'a'] : n) , best[i][j]);
			}
		}
		if(best[last + 1][m] < n){
			puts("YES");
			return;
		}
	}
	puts("NO");
}

int main(){
	int t;
	cin >> t;
	while(t--){
		solve();
	}
	return 0;
}