#include <bits/stdc++.h>
using namespace std;

vector<int> sieve(int n){
    vector<int> ret;
    vector<bool> is_prime(n+1);
    for(int i=2; i<=n; i++) is_prime[i] = true;
    for(int i=2; i<=n; i++){
        if(is_prime[i]){
            ret.push_back(i);
            for(int j=2*i; j<=n; j+=i) is_prime[j] = false;
        }
    }
    return ret;
}

int main(){
    int N;
    cin >> N;
    vector<int> num(N+1);
    num[1] = 1;
    bitset<500001> done;

    auto primes = sieve(N);
    for(int p : primes) for(int i=p; i<=N; i+=p) if(!done[i]){
        done[i] = 1;
        num[i/p]++;
    }

    int pt = 2, sum = 0;
    for(int ans=1; ans<=N; ans++){
        sum += num[ans];
        while(pt <= sum){
            printf("%d ", ans);
            pt++;
        }
    }
    printf("\n");
    return 0;
}
