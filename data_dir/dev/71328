#include <bits/stdc++.h>

//#include "rubo.h"
//#define mp make_pair
#define pb push_back
#define ll long long
#define ull unsigned long long
#define vc vector
//#define in ll
#define SQ(x) (x)*(x)
#define F first
#define S second
//#define ld long double
#define dbl  double
#define pll pair<ll,ll>
#define pii pair<int,int>
#define pdd pair<dbl,dbl>
#define all(x) x.begin(), x.end()
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
//#define printf(fmt, ...) (0)
//#define HOME
#define y0 ngacaleiebinvoaeu
#define y1 gnarpipipaigare
#define j1 adsfndnasfafoasp

using namespace std;

const int N = 1000005;
const int INF = 1000 * 1000 * 1000;

int t[4*N];

int n,m,k;

void update(int v, int l, int r, int pos, int add){
    if(l==r){
        t[v] += add;
    }
    else{
        int mid = (l+r)/2;
        if(pos <= mid)
            update(2*v+1,l,mid,pos,add);
        else
            update(2*v+2,mid+1,r,pos,add);
        t[v] = t[2*v+1]+t[2*v+2];
    }
}

int get(int v, int l, int r, int ql, int qr){
    if(ql <= l && r <= qr)
        return t[v];

    if(ql > r || l > qr) return 0;

    int mid = (l+r)/2;

    return
            get(2*v+1,l,mid,ql,qr)+
            get(2*v+2,mid+1,r,ql,qr);
}

int main() {
    cin >> n >> m >> k;

    loop(i,n){
        int e;
        scanf("%d",&e);

        update(0,0,N-1,e,1);
    }

    int res = 0;


    int sum = get(0,0,N-1, 1, m);
    if(sum >= k){
        for(int i = m; i >= 1; i--){
            int e = get(0,0,N-1,i,i);
            if(e == 1){
                update(0,0,N-1,i,-1);
                res++;
                sum--;
            }
            if(sum < k) break;
        }

    }

    for(int i = 1; i+m-1 <= 1000000; i++){
        sum = get(0,0,N-1, i, i+m-1);
        if(sum == k){
            update(0,0,N-1,i+m-1,-1);
            res++;
        }
    }

    cout << res << endl;
    return 0;

}
