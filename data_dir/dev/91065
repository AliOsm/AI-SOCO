#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <valarray>
#include <vector>

#define EPS 1e-9
#define INF 1070000000L
#define MOD 1000000007L
#define fir first
#define foreach(it,X) for(auto it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define mt make_tuple
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

struct timer{
	time_t start;
	timer(){start=clock();}
	~timer(){cerr<<1.*(clock()-start)/CLOCKS_PER_SEC<<" secs"<<endl;}
};

typedef istringstream iss;
typedef long long ll;
typedef pair<ll,ll> pi;
typedef stringstream sst;
typedef vector<ll> vi;

int n,m;
char c[1010][1010];
int dist[1010][1010];
int dy[]={0,1,0,-1};
int dx[]={1,0,-1,0};

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	cin>>n>>m;
	n+=2,m+=2;
	int ey,ex,sy,sx;
	rep2(i,1,n-1)rep2(j,1,m-1){
		cin>>c[i][j];
		if(c[i][j]=='E')ey=i,ex=j;
		if(c[i][j]=='S')sy=i,sx=j;
	}
	rep(i,n)rep(j,m)dist[i][j]=INF;
	dist[ey][ex]=0;
	queue<pi> Q;
	Q.push(mp(ey,ex));
	while(sz(Q)){
		pi p=Q.front();Q.pop();
		int y=p.fir,x=p.sec;
		rep(d,4){
			int ny=y+dy[d],nx=x+dx[d];
			if(!c[ny][nx] || c[ny][nx]=='T')continue;
			if(dist[ny][nx]==INF){
				dist[ny][nx]=dist[y][x]+1;
				Q.push(mp(ny,nx));
			}
		}
	}
	int ans=0;
	rep(i,n)rep(j,m)if(isdigit(c[i][j]) && dist[i][j]<=dist[sy][sx]){
		ans+=c[i][j]-'0';
	}
	cout<<ans;
}
