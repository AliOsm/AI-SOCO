/*
ID: essi
LANG: C++
TASK: .cpp
*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define sep ios::sync_with_stdio(0),cin.tie(0)
const int MXi = 1e5 + 5;
vector<int> Tree[MXi];
vector <int> seen(MXi);
int n, u, v;
double total = 0, pro = 1 ;
void BFS(int node) {

    stack<pair<int, double>> STACK;
    STACK.push({node,1});
    while (!STACK.empty()) {
        auto v = STACK.top();
        STACK.pop();
        seen[v.first] = 1;
        double ch = 0;
        for (auto adj: Tree[v.first])
            if (seen[adj] == 0)
                ++ch;
       double tmp = v.second / ch;
       for (auto adj: Tree[v.first]) 
            if (seen[adj] == 0) {
                STACK.push({adj, tmp});
                total+= tmp;
            }
    }

    
}

int main() {
    sep;
    // sum of all probability for every node 
    cin >> n;
    for (int i = 0;i < n - 1; ++i) {
        cin >> u >> v;
        Tree[u].emplace_back(v);
        Tree[v].emplace_back(u);
    }
    seen[1] = 1;
    BFS(1);
    //cout << total << " " << leaf << "\n";
    cout << fixed << setprecision(15);
    cout << total << "\n";
    return 0;
}