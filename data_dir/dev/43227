#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>

#define INF 1000000021
#define MOD 1000000007
#define pb push_back
#define sqr(a) (a)*(a)
#define M(a, b) make_pair(a,b)
#define T(a, b, c) make_pair(a, make_pair(b, c))
#define F first
#define S second
#define all(x) (x.begin(), x.end())
#define deb(x) cerr << #x << " = " << x << '\n'
#define N 222222

using namespace std;
//using namespace __gnu_pbds;

typedef long double ld;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

const ld pi = 2 * acos(0.0);
template<class T> bool umin(T& a, T b){if(a>b){a=b;return 1;}return 0;}
template<class T> bool umax(T& a, T b){if(a<b){a=b;return 1;}return 0;}
template<class T, class TT> bool pal(T a, TT n){int k=0;for(int i=0;i<=n/2;i++){if(a[i]!=a[n-i-1]){k=1;break;}}return k?0:1;}

//int month[] = {0,31,28,31,30,31,30,31,31,30,31,30,31};
ll d[N*10], c[N*10], dd[N];
int main()
{	
ios::sync_with_stdio(false);
	cin.tie(0);
	int q;
	cin >> q;
	int p = 1;
	while(p <= 10000)
	{
		c[p] = 1;
		p *= 10;
	}
	int deg = 0;
	for(int i = 1; i <= 50000; i ++)
	{
		deg += c[i];
		dd[i] = deg;
		d[i] = d[i - 1] + deg;
	}
	while(q --)
	{
		ll k;
		cin >> k;
		ll s = 0, id = 0;
		for(int i = 1; i <= 50000; i ++)
		{
			if(s + d[i] >= k)
			{
				k -= s;
				id = i;
				break;
			}
			s += d[i];
		}
		int ans = 0;
		s = 0;
		for(int i = 1; i <= id; i ++)
		{
			int x = i;
			int cnt = dd[i];
			if(s + cnt >= k)
			{
				x = i;
				k -= s;
				vi v;
				while(x > 0)
				{
					v.pb(x % 10);
					x /= 10;
				}
				reverse all(v);
				ans = v[k - 1];
				break;
			}
			s += cnt;
		}
		cout << ans << '\n';
	}





	





	getchar();
	getchar();
	return 0;
}