#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <vector>
#include <string>
#include <cstring>
#include <map>
#include <set>
#include <queue>
#include <unordered_set>
#include <ctime>

using namespace std;

const int N = 5001;

int n;
long long v[N], d[N], p[N], t[N];
vector < int > ans;
bool used[N];
queue < int > q;


int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
/*#else
    freopen(TASK".in", "r", stdin);
    freopen(TASK".out", "w", stdout);*/
#endif
    memset(used, true, sizeof(used));
    scanf("%d", &n);
    for (int i = 1; i <= n; ++i)
        scanf("%I64d%I64d%I64d", &v[i], &d[i], &p[i]);
    for (int i = 1; i <= n; ++i)
    {
        if (used[i] == true)
        {
            int c = v[i];
            for (int j = i + 1; j <= n && c > 0; ++j)
            {
                if (used[j] == true)
                {
                    p[j] -= c;
                    c--;
                }
            }
            for (int j = i + 1; j <= n; ++j)
            {
                if (used[j] == true)
                {
                    p[j] -= t[j - 1];
                    if (p[j] < 0)
                    {
                        used[j] = false;
                        t[j] += d[j];
                    }
                }
                t[j] += t[j - 1];
            }
            ans.push_back(i);
        }
        for (int j = 1; j <= n; ++j)
            t[j] = 0;
        
    }
    cout << ans.size() << endl;
    for (int i = 0; i < ans.size(); ++i)
        cout << ans[i] << " ";

    return 0;
}