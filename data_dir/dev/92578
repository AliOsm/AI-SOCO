// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 100;

int gcd(int a, int b) {
	return b == 0 ? a : gcd(b, a % b);
}

int lcm(int a, int b) {
	return a / gcd(a, b) * b;
}

int aa[N], bb[N];

int main() {
	int n; cin >> n;
	string s; cin >> s;
	int m = 1, b = 0;
	for (int i = 0; i < n; i++) {
		cin >> aa[i] >> bb[i];
		m = lcm(m, aa[i] * 2);
		b = max(b, bb[i]);
	}
	m += b;
	int ans = 0;
	for (int h = 0; h < m; h++) {
		int cnt = 0;
		for (int i = 0; i < n; i++) {
			int x = s[i] - '0';
			if (h >= bb[i])
				x ^= (h - bb[i]) / aa[i] & 1 ^ 1;
			cnt += x;
		}
		ans = max(ans, cnt);
	}
	cout << ans << '\n';
	return 0;
}
