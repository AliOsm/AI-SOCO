#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

string mapas [60];

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int t;
    cin >> t;
    while(t--){
        int r,c;
        cin >> r >> c;
        for(int i=0;i<r;i++)cin>>mapas[i];
        // find if exists
        int ans = 100;
        bool bad_ex = 0;
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(mapas[i][j]=='A'){
                    ans = min(ans,4);
                    if(i==0||j==0||i==r-1||j==c-1)ans = min(ans,3);
                }
                else{
                    bad_ex = 1;
                }
            }
        }
        if(mapas[0][0]=='A'||mapas[0][c-1]=='A'||mapas[r-1][0]=='A'||mapas[r-1][c-1]=='A'){
            ans = min(ans,2);
        }
        if(!bad_ex)ans=0;
        // find if there is whole border or line

        // border
        bool good = 1;
        for(int i=0;i<r;i++)if(mapas[i][0]=='P')good=0;
        if(good)ans=min(ans,1);
        good = 1;
        for(int i=0;i<r;i++)if(mapas[i][c-1]=='P')good=0;
        if(good)ans=min(ans,1);

        good = 1;
        for(int i=0;i<c;i++)if(mapas[0][i]=='P')good=0;
        if(good)ans=min(ans,1);
        good = 1;
        for(int i=0;i<c;i++)if(mapas[r-1][i]=='P')good=0;
        if(good)ans=min(ans,1);

        //
        for(int i=0;i<r;i++){
            good = 1;
            for(int j=0;j<c;j++){
                if(mapas[i][j]=='P')good=0;
            }
            if(good)ans=min(ans,2);
        }
        for(int i=0;i<c;i++){
            good = 1;
            for(int j=0;j<r;j++){
                if(mapas[j][i]=='P')good=0;
            }
            if(good)ans=min(ans,2);
        }
        if(ans==100)cout<<"MORTAL\n";
        else cout<<ans<<"\n";
    }


    return 0;

}
