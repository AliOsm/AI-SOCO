#include <bits/stdc++.h>
using namespace std;

const int MAX = 2e6 + 10; 
const int OO = 0x3f3f3f3f;
const double EPS = 1e-9; 

#define bug(x) cout << #x << " = " << x << '\n'
#define FOR(i, a, n) for(int i = a; i < (int)n; i++)
#define REP(i, n) FOR(i, 0, n)
#define fi first
#define se second
#define pb push_back
#define mt make_tuple
#define all(vetor) vetor.begin(), vetor.end()
#define X real()
#define Y imag()
//#define gc getchar_unlocked

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef complex<ll> Pll;
typedef complex<ld> Pld;

int n, arr[MAX], vet[MAX];

int main()
{	
    int m;
    
    scanf(" %d", &m);
    while(m--)
    {
        scanf(" %d", &n);
        REP(i, n) scanf(" %d", &arr[i]);
        sort(arr, arr + n);
        int t = 0;
        REP(i, n - 1)
            if(arr[i] == arr[i + 1])
                vet[t++] = arr[i], i++;
        ll S = vet[0] * vet[1], P2 = (vet[0] + vet[1]) * ll(vet[0] + vet[1]);
        int a = vet[0], b = vet[1];
        REP(i, t - 1)
        {
            ll s = vet[i] * vet[i + 1];
            ll p2 = (vet[i] + vet[i + 1]) * ll(vet[i] + vet[i + 1]);
            if(S * p2 < P2 * s)
            {   
                P2 = p2;
                S = s;
                a = vet[i];
                b = vet[i + 1];
            }
        }
        cout << a << ' ' << a << ' ' << b << ' ' << b << '\n';
    }
	return 0;
}