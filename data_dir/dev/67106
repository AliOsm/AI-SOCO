// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define int long long
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define inf 1e15
#define N 113
int dp[N][N][N];
int adj[N][N], col[N];
int n, m, k;

int f(int i, int prev, int beauty) {
    if(beauty > k) {
        return inf;
    }
    if(i == (n + 1)) {
        if(beauty == k) return 0;
        return inf;
    }
    if(dp[i][prev][beauty] != -1) return dp[i][prev][beauty];
    int res = inf;
    if(col[i]) {
        if(col[i] == prev) {
            res = f(i + 1, prev, beauty);
        }
        else {
            res = f(i + 1, col[i], beauty + 1);
        }
    }
    else {
        res = inf;
        for(int c = 1; c <= m; c++) {
            if(c == prev)
	            res = min(res, adj[i][c] + f(i + 1, c, beauty));
            else 
	            res = min(res, adj[i][c] + f(i + 1, c, beauty + 1));
        }
    }
    return dp[i][prev][beauty] = res;
}

int32_t main() {
    fast_io()
    
    cin >> n >> m >> k;
    memset(dp, -1, sizeof dp);
    bool ok = 1;
    for(int i = 1; i <= n; i++) {
        cin >> col[i];
        ok = (ok & (col[i] != 0));
    }
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= m; j++) {
            cin >> adj[i][j];
        }
    }
    if(ok) {
        int cnt = 1;
        for(int i = 2; i <= n; i++) {
            if(col[i] != col[i - 1])
                cnt++;
        }
        if(cnt == k) {
            cout << 0;
        }
        else {
            cout << -1;
        }
    }
    else {
        int res = inf;
        if(col[1]) {
            res = f(2, col[1], 1);
        }
        else {
            for(int i = 1; i <= m; i++) {
                res = min(res, adj[1][i] + f(2, i, 1));
            }
        }
        if(res >= inf) {
            cout << -1;
        }
        else {
            cout << res;
        }
    }

	return 0;
}
