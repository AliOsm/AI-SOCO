#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(long long i=a;i<=b;i++)
#define fr(i,a)      for(long long i=0;i<a;i++)
#define fd(i,a,b)    for(long long i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod          1000000007
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           100000

long long cnt[202][2];
long long a[202],zero=3560,n;
long long mem[202][7200];

void find_(long long x){
   long long cur=a[x];
   while((cur&1)==0) cnt[x][0]++,cur>>=1;
   while(a[x]%5==0) cnt[x][1]++,a[x]/=5;
   return;
}


main(){
    //read();
    long long mx=zero*2,nxt;
    long long k,t,f;
    sfll(n,k);
    fr(i,n) sfl(a[i]);
    fr(i,n) find_(i);
    cln(mem);
    mem[0][zero]=0;
    while(n--){
        fd(i,0,k-1) fi(j,0,mx) if(mem[i][j]!=-1){
           t=f=0;
           if(j>zero) t=j-zero;
           else f=zero-j;
           t+=cnt[n][0];
           f+=cnt[n][1];
           nxt=zero;
           if(t>f){
             nxt+=(t-f);
             if(nxt>mx) nxt=mx;
             mem[i+1][nxt]=max(mem[i+1][nxt],mem[i][j]+f);
           }
           else{
             nxt-=f-t;
             if(nxt<0) nxt=0;
             mem[i+1][nxt]=max(mem[i+1][nxt],mem[i][j]+t);
           }
        }
    }
    long long ans=0;
    fi(i,0,k) fi(j,0,mx) ans=max(ans,mem[i][j]);
    pfl(ans);_;
    return 0;
}
