#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

map<ll,ll> cnt;

map<ll,ll> multipliers;

map<pair<ll,ll>,ll> used;

ll ans;

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    ll n,k;
    cin >> n >> k;
    if(k>=35){
        for(ll i=0;i<n;i++){
            cin>>k;
            if(k==1)ans++;
        }
        cout << (ans*(ans-1) )/2;
        return 0;
    }
    // deduce numbers
    for(ll i=0;i<n;i++){
        ll x;
        cin >> x;
        ll temp = x;
        for(ll j=2;j*j<=x;j++){
            while(temp%j==0){
                multipliers[j]++;
                temp /= j;
            }
        }
        if(temp!=1)multipliers[temp]++;
        ll new_number = 1;
        for(auto j:multipliers){
            for(ll l=0;l<j.second%k;l++){
                new_number *= j.first;
            }
        }


        cnt[new_number]++;
        multipliers.clear();
    }

    for(auto i:cnt){
        multipliers.clear();
        ll temp = i.first;
        for(ll j=2;j*j<=i.first;j++){
            while(temp%j==0){
                multipliers[j]++;
                temp /= j;
            }
        }
        if(temp!=1)multipliers[temp]++;
        ll new_number = 1;
        bool bad = 0;
        for(auto j:multipliers){
            for(ll l=0;l<k-(j.second%k);l++){
                new_number *= j.first;
                if(new_number>100000){
                    bad = 1;
                    break;
                }
            }if(bad)break;
        }
        if(bad)continue;

        if(new_number == i.first){
            ans += ( (i.second)*(i.second-1) )/2;
            continue;
        }
        if(used[{new_number,i.first}])continue;
        used[{new_number,i.first}]=1;
        used[{i.first,new_number}]=1;
        ans += i.second * cnt[new_number];
    }
    cout << ans;

    return 0;
}
