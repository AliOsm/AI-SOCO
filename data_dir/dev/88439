#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;


int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.precision(20);
  int T;
  cin >> T;
  while (T--) {
    string s;
    cin >> s;
    vector<int>f(26, 0);
    for (char c: s)
      f[c-'a']++;
    vector<int> let;
    for (int i =0 ; i < 26; i++)
      if (f[i] != 0) let.push_back(i);
    int m = let.size();
    if (let.size() == 1) {
      cout << s << endl;
    }
    else if (let.size() == 2) {
      if (let[1]-let[0] != 1) {
        cout << s << endl;
      }
      else cout << "No answer" << endl;
    }
    else if (let.size() == 3) {
      if (let[1] -let[0] == 1 and let[2]-let[1] == 1) {
        cout << "No answer" << endl;
      }
      else if (let[1] -let[0] != 1) {
        for (int i = 0; i < f[let[2]]; i++)
          cout << char('a'+let[2]);
        for (int i = 0; i < f[let[0]]; i++)
          cout << char('a'+let[0]);
        for (int i = 0; i < f[let[1]]; i++)
          cout << char('a'+let[1]);
        cout << endl;
      }
      else if (let[2]-let[1] != 1) {
        for (int i = 0; i < f[let[0]]; i++)
          cout << char('a'+let[0]);
        for (int i = 0; i < f[let[2]]; i++)
          cout << char('a'+let[2]);
        for (int i = 0; i < f[let[1]]; i++)
          cout << char('a'+let[1]);
        cout << endl;
      }
    }
    else {
      for (int j = 1; j < m; j += 2) {
        for (int i = 0; i < f[let[j]]; i++)
          cout << char('a'+let[j]);
      }
      for (int j = 0; j < m; j += 2) {
        for (int i = 0; i < f[let[j]]; i++)
          cout << char('a'+let[j]);
      }
      cout << endl;
    }
  }
}

