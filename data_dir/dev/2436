#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
using namespace std;

vector <vector <int> > g;
long long dp[200005],a[200005],cur[200005],ans=-1e18;
bool used[200005];

void dfs(int v, int prev){
  used[v]=-1;
  cur[v]=a[v];
  dp[v]=-1e18;
  for (auto to: g[v]){
    if (to != prev){
      dfs(to,v);
      cur[v]+=cur[to];
      if (dp[v] != 1e18) ans=max(ans, dp[v]+dp[to]);
      dp[v]=max(dp[v],dp[to]);
    }
  }
  dp[v]=max(dp[v],cur[v]);
}

int main(){
  ios_base::sync_with_stdio(0);
  int n;
  cin>>n;
  g.resize(n+1);
  for (int i=1;i<=n;i++){
    cin>>a[i];
  }
  for (int i=0;i<n-1;i++){
    int x,y;
    cin>>x>>y;
    g[x].pb(y);
    g[y].pb(x);
  }
  dfs(1,0);
  if (ans > -1e17){
    cout<<ans<<endl;
    return 0;
  }
  cout<<"Impossible"<<endl;
}