#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define all(a) a.begin(), a.end()
#define forn(i, n) for(int i = 0; i < int(n); i++) 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.x << ", " << a.y << ")";
}

template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i) out << ", ";
		out << v[i];
	}
	return out << "]";
}

mt19937 rnd(time(NULL));

const int INF = int(1e9);
const li INF64 = li(1e18);
const int MOD = INF + 7;
const ld EPS = 1e-9;
const ld PI = acos(-1.0);

const int N = 100 * 1000 + 13;

int n, m;
vector<int> g[N];

bool read () {
	if (scanf("%d%d", &n, &m) != 2)
		return false;
	forn(i, n)
		g[i].clear();
	forn(i, m){
		int v, u;
		scanf("%d%d", &v, &u);
		--v, --u;
		g[v].pb(u);
		g[u].pb(v);
	}
	return true;
}

int p[N], rk[N];

int getp(int a){
	return (a == p[a] ? a : p[a] = getp(p[a]));
}

bool unite(int a, int b){
	a = getp(a), b = getp(b);
	if (a == b) return false;
	if (rk[a] < rk[b]) swap(a, b);
	rk[a] += rk[b];
	p[b] = a;
	return true;
}

void solve(){
	forn(i, n) p[i] = i, rk[i] = 1;
	
	vector<pt> segs;
	vector<pt> tmp;
	forn(i, n){
		sort(all(g[i]));
		g[i].insert(g[i].begin(), -1);
		g[i].insert(g[i].end(), n);
		forn(j, sz(g[i]) - 1){
			if (g[i][j] + 1 <= g[i][j + 1] - 1){
				tmp.pb(mp(i, g[i][j] + 1));
				tmp.pb(mp(i, g[i][j + 1] - 1));
				segs.pb(mp(g[i][j] + 1, g[i][j + 1] - 1));
			}
		}
	}
	
	sort(all(segs));
	int l = -1, r = -1;
	for (auto it : segs){
		if (it.x > r){
			if (r != -1){
				fore(i, l, r)
					unite(i, i + 1);
			}
			l = it.x, r = it.y;
		}
		else{
			r = max(r, it.y);
		}
	}
	if (r != -1){
		fore(i, l, r)
			unite(i, i + 1);
	}
	
	for (auto it : tmp)
		unite(it.x, it.y);
	
	int ans = 0;
	forn(v, n) for (auto u : g[v])
		ans += unite(v, u);
	
	printf("%d\n", ans);
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	
	int tt = clock();
	
#endif
	
	cerr.precision(15);
	cout.precision(15);
	cerr << fixed;
	cout << fixed;

	while(read()) {	
		solve();
		
#ifdef _DEBUG
	cerr << "TIME = " << clock() - tt << endl;
	tt = clock();
#endif

	}
}