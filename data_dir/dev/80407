#include<bits/stdc++.h>
#define REP(i,j,k) for(int i=j;i<k;++i)
#define RREP(i,j,k) for(int i=(int)j-1;i>=k;--i)
#define int long long
#define pb emplace_back
#define P pair<int,int>
#define PP pair<int,P>
#define F first
#define S second
#define ALL(x) x.begin(),x.end()
#define sz(a) (int)(a).size()
#define MX 805
#define oo 1e18
#define L d*2
#define R d*2+1
#define mid (l+r>>1)
#define Ls l,mid,i*2
#define Rs mid+1,r,i*2+1
#define MIN(x,y) (x=min(x,(y)))
#define MAX(x,y) (x=max(x,(y)))
#define mo (int)(1e9+7)
#define IOS cin.tie(0) ,cout.tie(0), cout.sync_with_stdio(0)
using namespace std;
int n,m,k,d[MX][MX];
vector<int> nv,ans;
main(){
	IOS;
	cin>>n>>m>>k;
	vector<PP> v(m);
	REP(i,0,m) cin>>v[i].S.F>>v[i].S.S>>v[i].F;
	sort(ALL(v));
	REP(i,0,min(m,k)) nv.pb(v[i].S.F), nv.pb(v[i].S.S);
	sort(ALL(nv)); nv.resize(unique(ALL(nv))-nv.begin());
	REP(i,0,sz(nv)) REP(j,0,sz(nv)) if(i!=j) d[i][j] = oo;
	REP(i,0,min(m,k)){
		int x = lower_bound(ALL(nv),v[i].S.F)-nv.begin();
		int y = lower_bound(ALL(nv),v[i].S.S)-nv.begin();
		d[x][y] = d[y][x] = min(d[x][y],v[i].F);
	}
	REP(l,0,sz(nv)) REP(i,0,sz(nv)) REP(j,0,sz(nv))
		MIN(d[i][j],d[i][l]+d[l][j]);
	REP(i,0,sz(nv))	REP(j,0,i) ans.pb(d[i][j]);
	sort(ALL(ans));
	cout<<ans[k-1];
}


