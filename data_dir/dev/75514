#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll gcd(ll a, ll b){
    if (!b)
        return a;
    return gcd(b, a%b);
}
ll lcm(ll a, ll b){
    return b / gcd(a, b)*a;
}
#define FOR(I,N) for(int(i)=0;i<int(N);++i)
int n, g[256];
int p, z;
int best;
bool vis[256][256];
void DFS(int pos, int neg){
    if (vis[pos][neg])
        return;
    vis[pos][neg] = 1;
    best = max(best, pos);
    for (int i = 0; i <= n; ++i){
        if (pos - i >= 0 && neg - (n - i) >= 0)
            DFS(pos - i + (n - i), neg + i - (n - i));
    }
}
int main(){
    cin >> n;
    FOR(0, 2 * n - 1){
        cin >> g[i];
        p += g[i]>0;
        z += !g[i];
    }
    for (int i = 0; i <= z; ++i)
        DFS(i + p, 2 * n - 1 - i - p);
    FOR(0,2*n-1)
    if (g[i] < 0)
        g[i] = -g[i];
    sort(g, g + n * 2 - 1);
    int ret = 0;
    FOR(0, 2 * n - 1){
        if (i < 2 * n - 1 - best)
            ret += -g[i];
        else ret += g[i];
    }
    cout << ret << endl; cin >> n;
}