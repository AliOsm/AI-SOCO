#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

int n, m, a[100100], add[100100], ans[100100];

int l[310], r[310];

vector <int> vec1[100100], vec2[100100];

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);

    cin >> n >> m;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        ans[i] = -1e9;
    }
    for (int i = 1; i <= m; i++){
        cin >> l[i] >> r[i];
        vec1[r[i]].push_back(l[i]);
        vec2[l[i]].push_back(r[i]);
    }
    if (n == 1)
        return cout << 0 << "\n" << 0, 0;
    int mn = 1e9;
    for (int i = 1; i <= n; i++){

        ans[i] = max(ans[i], a[i]-mn);

        for (int l : vec1[i]){
            for (int j = l; j <= i; j++){
                --add[j];
                mn = min(mn, a[j]+add[j]);
            }
        }

        mn = min(mn, a[i]+add[i]);
    }
    for (int i = 1; i <= n; i++){
        add[i] = 0;
    }

    mn = 1e9;
    for (int i = n; i >= 1; i--){
        ans[i] = max(ans[i], a[i]-mn);
        for (int r : vec2[i]){
            for (int j = i; j <= r; j++){
                --add[j];
                mn = min(mn, a[j]+add[j]);
            }
        }

        mn = min(mn, a[i]+add[i]);
    }

    int anss = -1;
    int pos = 0;

    for (int i = 1; i <= n; i++){
        if (anss < ans[i]){
            anss = ans[i];
            pos = i;
        }
    }

    cout << anss << "\n";
    vector <int > vec;
    for (int j = 1; j <= m; j++){
        if (!(l[j] <= pos && pos <= r[j])){
            vec.push_back(j);
        }
    }
    cout << vec.size() << "\n";
    for (int j = 0; j < vec.size(); j++)
        cout << vec[j] << ' ';

}
