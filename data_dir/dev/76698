#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;

#define MOD 1000000007
#define MAX 200005

bool cmp(const string &a, const string &b) {
    return a.size() < b.size();
}

bool substring(string a, string b) {
    return b.find(a) != string::npos;
}

int main() {
#ifdef  Adel_SaadEddin_PC
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif //  Adel_SaadEddin_PC

    ios_base::sync_with_stdio(false);

    int n; scanf("%d", &n);

    vector<int> ve;
    map<ll, ll> mp;
    for(int i = 0; i < n; i++) {
        int x; scanf("%d", &x);
        ve.push_back(x);
        mp[x]++;
    }

    sort(ve.begin(), ve.end());

    int mx = 0;
    vector<int> res;

    for(int i = 0; i < n; i++) {
        ll x = ve[i];

        ll po = 1;
        while(po < 1e13) {
            if(mp.count(x + po)) {
                ll y = x + po;

                if(mp.count(y + po)) {
                    ll z = y + po;

                    if(mx < mp[x] + mp[y] + mp[z]) {
                        mx = mp[x] + mp[y] + mp[z];
                        res.clear();
                        res.push_back(x);
                        res.push_back(y);
                        res.push_back(z);
                    }
                }
                else {
                    if(mx < mp[x] + mp[y]) {
                        mx = mp[x] + mp[y];
                        res.clear();

                        res.push_back(x);
                        res.push_back(y);
                    }
                }
            }
            else {
                if(mx < mp[x]) {
                    mx = mp[x];
                    res.clear();
                    res.push_back(x);
                }
            }

            po *= 2;
        }
    }

    printf("%d\n", mx);
    for(auto x : res) {
        while(mp[x]--)
            printf("%d ", x);
    }
    puts("");

    return 0;
}
