//#include <cstdio>
#include <iostream>

#include <cstring>

#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
//#include <queue>
//#include <stack>
#include <cassert>

using namespace std;

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

#define DEBUG(x) cerr << #x << ": " << x << endl

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

typedef tuple<int,int,int> III;

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(nullptr);

   int N;
   cin >> N;
   string S;
   cin >> S;

   string res;
   int cur_open[2] = {0, 0}, max_open[2] = {0, 0};
   for (char c : S) {
      if (c == '(') {
         III m = min(III(cur_open[0], max_open[0], 0),
                     III(cur_open[1], max_open[1], 1));
         int id = get<2>(m);
         res += '0' + id;
         cur_open[id]++;
         max_open[id] = max(max_open[id], cur_open[id]);
      }
      else {
         III m = max(III(cur_open[0], max_open[0], 0),
                     III(cur_open[1], max_open[1], 1));
         int id = get<2>(m);
         res += '0' + id;
         cur_open[id]--;
      }
   }

   cout << res << endl;

   return 0;
}
