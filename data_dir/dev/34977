#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef    long long  int    ll;
long long int mod=998244353;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=1e9+9,n,res,k,ans=0,nbcycle=0;
string s2="zero",ch="",s;
multiset< ll  > st;
vector< pair<string,ll> >vm;
vector< pair< ll, pair<ll,ll> > > vvv;
vector<pair<ll,ll> >vv1,vv2;
vector<ll> v,v2;
ll a[200005],combinaison[1005][1005],dp[1005];

void calc_combinaison(){
	combinaison[0][0] = 1;
	ll z=1001;
    for (ll i = 1; i <=1001; ++i) {
        combinaison[i][0] =combinaison[i][min(i,z)] = 1;
        for (ll k = 1; k<min(i,z); ++k)
             combinaison[i][k] = (combinaison[i - 1][k - 1] + combinaison[i - 1][k])%mod;
       }
   }

ll calc_combinaison1(ll j,ll k){
	return (combinaison[j][k]+mod)%mod;
}

ll solve(ll i){
    if(i>n)return 1;
    ll &ret=dp[i];
    if(ret!=-1)return ret;
    ll ans=solve(i+1)%mod;
    for(ll j=i+1;j<=n;j++){
        ll x=a[i];
        ll k=x+1;
        if(j-i+1>=k&&k>=2){
            ans+=calc_combinaison1((j-i-1),k-2)*solve(j+1)%mod;
            ans=(ans+mod)%mod;
        }
    }
    return ret=ans;
}


int main(){
In_the_name_of_allah_the_merciful

    ll i=0,x=0,y=0,j=0,z,q,nb0=0,nbp=0,nbn=0,nbmax=0,nbinf=0,mm=0,mx=0,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,l1,r1;
    set< ll > ::iterator it,it1;
    char c;
   //freopen("a.txt","r",stdin);
    cin>>n;
    for(i=1;i<=n;i++){
        cin>>a[i];
    }
    calc_combinaison();
    memset(dp,-1,sizeof(dp));
    res=solve(1);
    cout<<res-1;

Alhamdulillah
 }
