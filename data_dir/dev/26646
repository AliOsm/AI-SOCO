#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;
int use[100010];
struct node
{
    int x,id;
};
node p1[100010],p2[100010];
int sum1[100010],sum2[100010];
bool cmp(const node &x,const node &y)
{
    return x.x>y.x;
}
int main()
{
    int n,v;
    while (scanf("%d%d",&n,&v)==2)
    {
        int cnt1=0,cnt2=0;
        for (int i=0;i<n;i++)
        {
            int x,y;
            scanf("%d%d",&x,&y);
            if (x==1) {p1[cnt1].x=y; p1[cnt1].id=i+1; cnt1++;}
            else {p2[cnt2].x=y; p2[cnt2].id=i+1; cnt2++;}
        }
        sort(p1,p1+cnt1,cmp);
        sort(p2,p2+cnt2,cmp);
        sum1[0]=p1[0].x;
        for (int i=1;i<cnt1;i++)
            sum1[i]=sum1[i-1]+p1[i].x;
        sum2[0]=p2[0].x;
        for (int i=1;i<cnt2;i++)
            sum2[i]=sum2[i-1]+p2[i].x;
        int ansx=0,ansy=0,ans=0;
        for (int i=0;i<=cnt2;i++)
        {
            if (2*i>v) continue;
            int tcnt=v-2*i;
            if (tcnt>cnt1) tcnt=cnt1;
            int tans=0;
            if (i!=0) tans+=sum2[i-1];
            if (tcnt!=0) tans+=sum1[tcnt-1];
            if (tans>ans)
            {
                ans=tans;
                ansx=tcnt;
                ansy=i;
            }
        }
        printf("%d\n",ans);
        bool first=true;
        for (int i=0;i<ansx;i++)
        {
            if (!first) printf(" ");
            printf("%d",p1[i].id);
            first=false;
        }
        for (int i=0;i<ansy;i++)
        {
            if (!first) printf(" ");
            printf("%d",p2[i].id);
            first=false;
        }
        printf("\n");
    }
    return 0;
}
