//                             In The Name Of Allah
#include <bits/stdc++.h>
#define ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define ll long long
#define pb push_back
#define int long long
using namespace std;

const ll N = 1e6 + 100, OO = 1e18 + 8, M = 3e5, lg = 22;
typedef pair <int, int> pii;
int r[N], l[N], q[N], seg[N];

void shift(int c) {
	seg[2 * c] |= seg[c];
	seg[2 * c + 1] |= seg[c];
}

void upd(int c, int b, int e, int l, int r, int q) {
	if(b == l && e == r) {
		seg[c] |= q;
		return;
	}
	shift(c);
	int mid = (b + e) / 2;
	if(r <= mid)
		upd(2 * c, b, mid, l, r, q);
	else if(l >= mid)
		upd(2 * c + 1, mid, e, l, r, q);
	else {
		upd(2 * c, b, mid, l, mid, q);
		upd(2 * c + 1, mid, e, mid, r, q);
	}
	seg[c] |= seg[2 * c] & seg[2 * c + 1];
}

int get(int c, int b, int e, int l, int r) {
	if(b == l && e == r) 
		return seg[c];
	shift(c);
	int mid = (b + e) / 2;
	if(r <= mid)
		return get(2 * c, b, mid, l, r);
	if(l >= mid) 
		return get(2 * c + 1, mid, e, l, r);
	return get(2 * c, b, mid, l, mid) & get(2 * c + 1, mid, e, mid, r);
}

int32_t main() {
	use_fast;
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < m; i++) {
		cin >> l[i] >> r[i] >> q[i];
		upd(1, 0, n, l[i] - 1, r[i], q[i]);
	}
	for(int i = 0; i < m; i++) {
		if((q[i] | get(1, 0, n, l[i] - 1, r[i])) != q[i])
			return cout << "NO", 0;
	}
	cout << "YES" << endl;
	for(int i = 0; i < n; i++) {
		cout << get(1, 0, n, i, i + 1) << " ";
	}
	return 0;
}
