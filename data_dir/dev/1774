#include <bits/stdc++.h>
using namespace std;

template <typename T>
class fenwick {
public:
  vector<T> fenw;
  int n;
  fenwick(int _n) : n(_n) {
    fenw.resize(n);
  }
  void modify(int x, T v) {
    while (x < n) {
      fenw[x] += v;
      x |= (x + 1);
    }
  }
  T get(int x) {
    T v{};
    while (x >= 0) {
      v += fenw[x];
      x = (x & (x + 1)) - 1;
    }
    return v;
  }
};
int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout << fixed << setprecision(15);
	const int inf = 2e9;
	int n, k, d;
	cin >> n >> k >> d;
	vector<int> a(n);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	sort(a.begin(), a.end());
	fenwick<int> fenw(n + 1);
	vector<bool> dp(n + 1);
	dp[0] = true;
	fenw.modify(0, 1);
	int pointer = 0;
	for(int i = 0; i < n; i++) {
		while(pointer < i && a[i] - a[pointer] > d) {
			pointer++;
		}
		if(i - k + 1 < pointer) continue;
		int x = fenw.get(i - k + 1) - fenw.get(pointer - 1);
		if(x > 0) {
			dp[i + 1] = true;
			fenw.modify(i + 1, 1);
		}
	}
	cout << (dp[n] ? "YES" : "NO") << '\n';

	return 0;
}