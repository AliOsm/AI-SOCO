#include <bits/stdc++.h>
     
using namespace std;
typedef long long ll;
typedef vector<ll> vl ;
     
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
  
const int MOD = 998244353;
const int N = 1000005;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e18;
 

ll _sieve_size;bitset<10000010> bs;vl primes;
ll x;
ll tab[N];

void sieve(ll upperbound) {
    _sieve_size = upperbound + 1;bs.set();bs[0] = bs[1] = 0;
    for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) {
    for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0; primes.push_back((int)i);}
}

ll getv(ll x){
    vl v;
    ll ma=0;
    for(int i=1;i<=sqrt(x);i++){
        if(x%i)continue;
        if(bs[x/i]){
            ma=max(ma,x/i);
        }
        if(i*i!=x){
            if(bs[i])ma=max(ma,i);
        }
    }
    return ma;
}
 
int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    memset(tab,0,sizeof(tab));
    sieve(1000005);
    for(int i=0;i<primes.size();i++){
        for(int j=1;j<=1000000/primes[i];j++){
            tab[j*primes[i]]=primes[i];
        }
    }
    cin >> x;
    ll a=tab[x];
    ll ans=1e18;
    for(int i=x-a+1;i<=x;i++){
        if(bs[i])continue;
        ll z= tab[i];
        //cout << i << " " << z << endl;
        ans=min(ans,i-z+1);
    }
    cout << ans;
    return 0;
}