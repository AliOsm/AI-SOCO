#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#pragma comment(linker, "/STACK:400000000")

#define EPS 1e-9
#define INF MOD
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(it=X.begin();it!=X.end();it++)
#define iss istringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sst stringstream
#define sz(x) ((int)x.size())
#define vc vector
typedef vc<int> vi;
typedef vc<ll> vl;
typedef vc<string> vs;

int n,m;
char c[101][10010];
int dx[]={1,-1};

int main(){
	cin>>n>>m;
	gets(c[0]);
	rep(i,n){
		gets(c[i]+1);
		c[i][0]='#';
		c[i][m+1]='#';
	}
	rep(i,m+2)c[n][i]='#';
	//rep(i,n)puts(c[i]);
	int y=0,x=1,d=0; // 0-> 1<-
	ll time=0;
	while(1){
		//cout<<y<<" "<<x<<" "<<d<<" : "<<time<<endl;
		//rep(i,n)puts(c[i]);
		
		if(y==n-1){cout<<time;return 0;}
		
		int preL=-1,preR=-1;
		int sameL=0,sameR=0;
		while(1){
			
			if(d==0){
				if(preR != -1){
					time += preR - x;
					x = preR;
				}
			}
			if(d==1){
				if(preL != -1){
					time += x - preL;
					x = preL;
				}
			}
			
			while(1){
				//cout<<"Loop "<<y<<" "<<x<<" "<<d<<" : "<<time<<endl;
				if(c[y+1][x]=='.')break;
				if(c[y][x+dx[d]]=='.')x+=dx[d],time++;
				else break;
			}
			
			if(c[y+1][x]=='.'){
				y++;
				time++;
				break;
			}
			
			if(d==0){
				if(preR == x)sameR=1;
				preR = x;
			}
			else{
				if(preL == x)sameL=1;
				preL = x;
			}
			if(sameR && sameL){
				cout<<"Never";return 0;
			}
			
			if(c[y][x+dx[d]]=='#'){
				d^=1;
				time++;
			}
			if(c[y][x+dx[d]]=='+'){
				time++;
				c[y][x+dx[d]]='.';
				//cout<<"break "<<y<<" "<<x+dx[d];
				d^=1;
			}
		}
	}
}
