
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz

typedef pair<int,int>pii;
typedef long long ll;
typedef long double ld;

const int MOD = 1e9 + 7;
const int INF = 1e9 + 10;
const ll LINF = 1e17 + 10;

const int MN = 1e3 + 10;

int n,m,x,y;
int val[2][MN];
int dp[2][MN];
int ps[2][MN];

void input()
{
	char ch;
	scanf("%d %d %d %d\n" , &n , &m , &x , &y);
	for(int i=0;i<n;++i){
		for(int j=0;j<m;++j){
			scanf("%c " , &ch);
			if(ch == '#') ++val[0][j];
			else ++val[1][j];
		}	
		scanf("\n");
	}
	for(int i=0;i<m;++i){
		ps[0][i+1] = ps[0][i] + val[0][i];
		ps[1][i+1] = ps[1][i] + val[1][i];
	}
}

int sum(int id , int l , int r)
{
	return ps[id][r+1] - ps[id][l];
}

void solve()
{
	int t;
	for(int i=0;i<m;++i){
		dp[0][i+1] = dp[1][i+1] = INF;
		if(x <= i+1 && i+1 <= y) dp[0][i+1] = sum(0 , 0 , i) , dp[1][i+1] = sum(1, 0 , i);
		for(int j=i;j>=1;--j){
			if(x <= i-j+1 && i-j+1 <= y){
				dp[1][i+1] = min(dp[1][i+1] , sum(1,j,i) + dp[0][j]);
				dp[0][i+1] = min(dp[0][i+1] , sum(0,j,i) + dp[1][j]);
			}
		}
	}
	printf("%d\n" , min(dp[0][m],dp[1][m]));
}

int main()
{
	input();	
//	int l ,r ,id;
//	cin >> id >> l >> r;
//	cout << sum(id , l , r) << endl;
//	return 0;
	solve();
	return 0;
}

