#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update


#define f first
#define s second
#define pb push_back
#define mp make_pair
#define clr(dp,i) memset(dp,i,sizeof(dp))
#define opt     ios_base::sync_with_stdio(NULL);cin.tie(NULL);cout.tie(NULL);

using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less_equal<int>, rb_tree_tag,
tree_order_statistics_node_update> oset;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> pii;
const long long mod = 1e9+7;
const ld pi = 3.14159265358979323846264338327950288;
//========================================
bool check(int x)
{
	if(x == 1 || x == 2 || x == 3)
	return 1;
	for(int i=2; i * i <= x; i++)
	if(x%i == 0)
	return 0;
	return 1;
}
int main()
{
	int n;
	cin >> n;
	if(n == 2)
	cout << 1 << endl;
	else if(n%2 == 0)
	cout << 2 << endl;
	else if(check(n))
	cout << 1 << endl;
	else if(check(n-2))
	cout << 2 << endl;
	else
	cout << 3 << endl;
}