#include<bits/stdc++.h>
using namespace std;

#define x first
#define y second
#define pb push_back
#define mp make_pair

#define all(a) (a).begin(), (a).end()

#define int long long

const int N = 5e5 + 7;

pair<int, int> a[N], b[N];

vector<int> e1[N], e2[N];

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    vector<int> v;
    for (int i = 0; i < n; i++) {
        cin >> a[i].x >> a[i].y >> b[i].x >> b[i].y;
        v.pb(a[i].x);
        v.pb(a[i].y);
        v.pb(b[i].x);
        v.pb(b[i].y);
    }
    sort(all(v));
    v.erase(unique(all(v)), v.end());
    for (int i = 0; i < n; i++) {
        a[i].x = lower_bound(all(v), a[i].x) - v.begin();
        a[i].y = lower_bound(all(v), a[i].y) - v.begin();
        b[i].x = lower_bound(all(v), b[i].x) - v.begin();
        b[i].y = lower_bound(all(v), b[i].y) - v.begin();
    }
    for (int t = 0; t < 2; t++) {
        for (int i = 0; i < N; i++) {
            e1[i].clear();
            e2[i].clear();
        }
        for (int i = 0; i < n; i++) {
            e1[a[i].x].pb(i);
            e2[a[i].y].pb(i);
        }
        multiset<int> stx, sty;
        for (int i = 0; i < N; i++) {
            for (auto e : e1[i]) {
                stx.insert(b[e].x);
                sty.insert(b[e].y);
            }
            if (!stx.empty() && *stx.rbegin() > *sty.begin()) {
                cout << "NO\n";
                return 0;
            }
            for (auto e : e2[i]) {
                stx.erase(stx.find(b[e].x));
                sty.erase(sty.find(b[e].y));
            }
        }
        for (int i = 0; i < n; i++) swap(a[i], b[i]);
    }
    cout << "YES\n";
    return 0;
}
