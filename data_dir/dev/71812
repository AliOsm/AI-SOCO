#include <stdio.h>
#include <stdlib.h>

struct team {
	int solved, time;
} teams[50];

int cmp (const void *a_, const void *b_)
{
	struct team *a = (struct team *)a_;
	struct team *b = (struct team *)b_;

	if (a->solved != b->solved)
		return b->solved - a->solved;
	else
		return a->time - b->time;
}

int main()
{
	int n, k, i, cnt = 1;

	scanf ("%d %d", &n, &k);

	for (i = 0; i < n; i++)
		scanf ("%d %d", &teams[i].solved, &teams[i].time);

	qsort (teams, n, sizeof teams[0], cmp);

	i = --k - 1;
	while (i >= 0 && (teams[i].solved == teams[k].solved && teams[i].time == teams[k].time))
		i--;
	cnt += k - i - 1;

	i = k + 1;
	while (i < n && (teams[i].solved == teams[k].solved && teams[i].time == teams[k].time))
		i++;
	cnt += i - k - 1;

	printf ("%d", cnt);

	return 0;
}
