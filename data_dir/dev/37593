#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
#define MOD 1000000007
#define EPS 1e-6
#define PI 3.14159265

bool Mark[1005];

ll fastpow(ll base, int power)
{
    if(!power)
        return 1;
    ll ret = fastpow(base, power / 2);
    ret = (ret * ret) % MOD;
    if(power & 1)
        ret = (ret * base) % MOD;
    return ret;
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    ll fact[1005];
    fact[0] = 1;
    for(int i = 1; i <= 1000; i++)
    {
        fact[i] = (i * fact[i - 1]) % MOD;
    }
    int n, m;
    cin >> n >> m;
    while(m--)
    {
        int a;
        cin >> a;
        Mark[a] = true;
    }
    int counter = 0;
    for(int i = 1; i <= n; i++)
    {
        if(!Mark[i])
            counter++;
    }
    ll ans = fact[counter];
    int first = 0;
    for(int i = 1; i <= n; i++)
    {
        if(Mark[i])
        {
            first = i;
            break;
        }
    }
    ans = (ans * fastpow(fact[first - 1], MOD - 2)) % MOD;
    int last = n;
    for(int i = n; i >= 1; i--)
    {
        if(Mark[i])
        {
            last = i;
            break;
        }
    }
    ans = (ans * fastpow(fact[n - last], MOD - 2)) % MOD;
    for(int i = 1; i <= n; i++)
    {
        if(!Mark[i])
            continue;
        int next = -1;
        for(int j = i + 1; j <= n; j++)
        {
            if(Mark[j])
            {
                next = j;
                break;
            }
        }
        if(next != -1)
        {
            int len = next - i - 1;
            if(len == 0)
                continue;
            ans = (ans * fastpow(fact[len], MOD - 2)) % MOD;
            ans = (ans * fastpow(2, len - 1)) % MOD;
        }
    }
    cout << ans;
    return 0;
}
