#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define pb push_back
#define mp make_pair
#define INF 1000000000
#define eps 0.000000000001

using namespace std;

int n,H;
int best[Nmax],a[Nmax],p[10][Nmax],tip[Nmax],sol[Nmax],b[Nmax],pp[Nmax];

inline bool Cmp(const int A, const int B)
{
    return b[A] < b[B];
}

int main()
{
    int i,j,Sol=INF,maxx,poz;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n>>H;
    for(i=1;i<=n;++i)
    {
        cin>>b[i]; pp[i]=i;
    }
    sort(pp+1,pp+n+1,Cmp);
    for(i=1;i<=n;++i) a[i]=b[pp[i]];
    a[n+1]=INF;

    best[0]=min(a[1]+a[2]+H,a[2]+a[3]);
    if(min(a[1]+a[3],a[1]+a[2]+H) > min(a[1]+a[2],min(a[3]+a[4],a[1]+a[3]+H)))
    {
        best[1]=min(a[1]+a[3],a[1]+a[2]+H);
        p[1][1]=1;
    }
    else
    {
        best[1]=min(a[1]+a[2],min(a[3]+a[4],a[1]+a[3]+H));
        p[1][1]=2;
    }

    if(min(a[1]+a[2]+H,min(a[1]+a[4],a[2]+a[3])) > min(a[1]+a[2]+H,min(a[2]+a[4],a[1]+a[3])))
    {
        best[2]=min(a[1]+a[2]+H,min(a[1]+a[4],a[2]+a[3]));
        p[1][2]=1; p[2][2]=2;
    }
    else
    {
        best[2]=min(a[1]+a[2]+H,min(a[2]+a[4],a[1]+a[3]));
        p[1][2]=2; p[2][2]=1;
    }

    if(best[3] < min(a[1]+a[2]+H,min(a[1]+a[3],a[2]+a[4])))
    {
        best[3] = min(a[1]+a[2]+H,min(a[1]+a[3],a[2]+a[4]));
        p[1][3]=1; p[2][3]=2; p[3][3]=1;
    }
    if(best[3] < min(a[1]+a[2]+H,min(a[1]+a[5],a[2]+a[3])))
    {
        best[3] = min(a[1]+a[2]+H,min(a[1]+a[5],a[2]+a[3]));
        p[1][3]=1; p[2][3]=2; p[3][3]=2;
    }
    if(best[3] < min(a[1]+a[2]+H,min(a[2]+a[3],a[1]+a[4])))
    {
        best[3] = min(a[1]+a[2]+H,min(a[2]+a[3],a[1]+a[4]));
        p[1][3]=2; p[2][3]=1; p[3][3]=2;
    }
    if(best[3] < min(a[1]+a[2]+H,min(a[2]+a[5],a[1]+a[3])))
    {
        best[3] = min(a[1]+a[2]+H,min(a[2]+a[5],a[1]+a[3]));
        p[1][3]=2; p[2][3]=1; p[3][3]=1;
    }

    for(i=4;i<=n;++i)
        if(min(a[1]+a[3],min(a[2]+a[i],a[1]+a[2]+H)) > min(a[2]+a[3],min(a[1]+a[i],a[1]+a[2]+H)))
        {
            best[i]=min(a[1]+a[3],min(a[2]+a[i],a[1]+a[2]+H));
            tip[i]=1;
        }
        else
        {
            best[i]=min(a[2]+a[3],min(a[1]+a[i],a[1]+a[2]+H));
            tip[i]=2;
        }

    for(i=n-1;i;--i)
    {
        if(i<n-1) maxx=max(a[n]+a[i]+H,a[n]+a[n-1]);
        else maxx=a[n]+a[n-1]+H;
        if(Sol > maxx-best[i-1])
        {
            Sol=maxx-best[i-1]; poz=i;
        }
    }
    if(Sol >= a[n]+a[n-1]-(a[1]+a[2]))
    {
        cout<<a[n]+a[n-1]-(a[1]+a[2])<<"\n";
        for(i=1;i<=n;++i) cout<<"1 ";
        return 0;
    }
    cout<<Sol<<"\n";
    if(poz>5)
    {
        sol[pp[1]]=1; sol[pp[2]]=2;
        for(i=3;i<poz-1;++i) sol[pp[i]] = tip[poz-1];
        sol[pp[poz-1]] = 3-tip[poz-1];
    }
    else
    {
        for(i=1;i<poz;++i) sol[pp[i]] = p[i][poz-1];
    }
    sol[pp[poz]]=2;
    for(i=poz+1;i<=n;++i) sol[pp[i]]=1;
    for(i=1;i<=n;++i) cout<<sol[i]<<" ";
    return 0;
}
