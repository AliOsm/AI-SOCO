// rc.cpp
//

#include <assert.h>
#include <time.h>
#include <math.h>
#include <string.h>

#include <iterator>
#include <fstream>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <algorithm>
#include <numeric>
#include <functional>

using namespace std;

typedef unsigned char uchar;
typedef unsigned int uint;
typedef unsigned long long uint64;
typedef long long sint64;

#define PI 3.1415926535897932384626433832795
#define EPS 1E-8

string s, t;

uint ls[26],
	 lt[26],
	 us[26],
	 ut[26];

void cnt(const string& x, uint* l, uint* u)
{
	for (string::const_iterator it = x.begin(); it != x.end(); ++it)
	{
		if (*it >= 'a' && *it <= 'z')
			++l[*it - 'a'];
		else
			++u[*it - 'A'];
	}
}

uint qr(uint* a, uint* b)
{
	uint r = 0;

	for (uint i = 0; i < 26; ++i)
	{
		if (a[i] > b[i])
		{
			r += b[i];
			a[i] -= b[i];
			b[i] = 0;
		}
		else
		{
			r += a[i];
			b[i] -= a[i];
			a[i] = 0;
		}
	}
	return r;
}

int main(int argc, char* argv[])
{
	cin >> s >> t;

	cnt(s, ls, us);
	cnt(t, lt, ut);

	uint ura = qr(ls, lt) + qr(us, ut),
		opa = qr(ls, ut) + qr(us, lt);

	cout << ura << ' ' << opa << endl;

	return 0;
}
