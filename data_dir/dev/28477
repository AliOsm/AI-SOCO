#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define pi acos(-1)
#define inf 1000000007
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010

template<typename T,typename TT> 
ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> 
ostream& operator<<(ostream &s,vector<T> t){for(int i=0;i<t.size();i++)s<<t[i]<<" ";return s;}
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)
struct mat
{
    ll x[2][2];
    void init()
    {
        memset(x,0,sizeof(x));
    }
    mat operator *(const mat &a)const
    {
        mat b;
        b.init();
        for(int k=0;k<2;k++)
        for(int i=0;i<2;i++)
        for(int j=0;j<2;j++)
        b.x[i][j]=(b.x[i][j]+x[i][k]*a.x[k][j]%mod)%mod;
        return b;
    }
};
mat pow(mat a,ll n)
{
    mat b;
    b.x[0][0]=b.x[1][1]=1;
    b.x[0][1]=b.x[1][0]=0;
    while(n>0)
    {
        if(n&1)b=b*a;
        a=a*a;n>>=1;
    }
    return b;
}
int main()
{
    int i,j,k;ll n;
    while(~scanf("%I64d",&n))
    {
        mat a;
        a.x[0][0]=a.x[1][1]=3;
        a.x[0][1]=a.x[1][0]=1;
        a=pow(a,n);
        printf("%I64d\n",a.x[0][0]);
    }

}