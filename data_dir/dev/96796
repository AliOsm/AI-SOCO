#include<bits/stdc++.h>
#define ll long long
#define div dv
#define F first
#define S second
using namespace std;

const int MAXN = 1020 ;

vector < int > dp [ MAXN ]  , mark [ MAXN] ;

vector < ll > div , mn [ MAXN];


map < ll , int > ind ;

pair < ll , int >  a [ MAXN ] = {} ;

int n ;

inline int f(ll x)
{
    for(ll i = 1 ; i * i <= x ; i ++ )
    {
        if(x%i==0)
        {
            div.push_back(i);
            if(x/i!=i)
                div.push_back(x/i);
        }
    }
    sort(div.begin(),div.end());
    for(int i = 0 ; i < n ; i ++ )
        for(int j = (int)div.size()-1 ; j > -1 ; j -- )
            dp[i].push_back(0),mark[i].push_back(0) , mn[i].push_back(0);

    for(int i = 0 ; i < (int)div.size() ; i ++ )
        ind[div[i]] = i ;
}

vector < int > ans ;

ll ggg(ll x , ll y)
{
    if(y==0)
        return x ;
    return ggg(y,x%y);
}

ll gcd(ll x , ll y )
{
    if(x<y)
        swap(x,y);
    ll z ;
    while(y)
    {
        z = x ;
        x = y ; ;
        y = z%y;
    }
    return x;
}

int32_t main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    ll k ;
    cin >> n >> k  ;
    f(k);
    int m = div.size();
    ll x ;


    for(int i = 0 ; i < n ; i ++ )
        cin >> a[i].first , a[i].second = i ;

    sort(a,a+n);
     if(k==1)
        return cout<<"1\n"<<a[0].second+1,0;
    x = a[0].first;
    for(int i = 1; i < m ; i ++)
        if(x%div[i]==0)
            dp[0][i] = 2  , mark[0][i] = a[0].second + 1 , mn[0][i] = a[0].F;
    dp[0][0] = 1 ;
    for(int i = 1 ; i < n ; i ++ )
    {
        x = a[i].first;
        x = gcd(x,k);

        for(int j = 0 ; j < m ; j ++ )
        {
            dp[i][j] = dp[i-1][j] ;
            mn[i][j] = mn[i-1][j] ;
            int k = ind[div[j]/gcd(x,div[j])];
            if(dp[i-1][k])
            {
                if(dp[i][j]>dp[i-1][k]+1||!dp[i][j])
                {
                    mark[i][j] = a[i].second + 1 ;
                    dp[i][j] = dp[i-1][k] + 1 ;
                    mn[i][j] = mn[i-1][k] + a[i].F;
                }
                if(dp[i][j]==dp[i-1][k]+1&&mn[i][j]>mn[i-1][k] + a[i].F)
                {
                    mark[i][j] = a[i].second + 1 ;
                    dp[i][j] = dp[i-1][k] + 1 ;
                    mn[i][j] = mn[i-1][k] + a[i].F;
                }
            }
        }
    }
    if(dp[n-1][m-1]==0)
        return cout<<-1,0;
    int j = m - 1  ;
    for(int i = n - 1 ; i > -1  ; i -- )
    {
        if(mark[i][j])
        {
            ans.push_back(mark[i][j]);
            j = ind[div[j]/__gcd(a[i].first,div[j])];
        }
    }
    cout<<ans.size()<<'\n';
    for(auto v : ans)
        cout<<v <<' ' ;

}
