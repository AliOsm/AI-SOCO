#include <bits/stdc++.h>

using namespace std;
 
long long powq (long long a,long long b,long long n) {
  long long res = 1;
  while (b) {
      if (b % 2) res = (res * a) % n; 
      a = (a * a) % n;
      b /= 2;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL); 
  int n, p = 1e9+7;
  cin >> n;
  vector <int> a(n);
  for (int & c: a) {
    cin >> c;
    c--;
  }
  vector<bool> vis(n, false);
  vector<int> orig(n, -1); 
  long long pr = 1;
  int s = n;
  for (int i = 0; i < n; i++) {
    int j = i;
    if (!vis[j]) {
      int jor = j;
      while (!vis[j]) {
	orig[j] = jor;
	vis[j] = true;
	j = a[j];
      }
      if (orig[j] == jor) {
	int k = j;
	j = a[j];
	int cnt = 1;
	while (j != k) {
	  cnt++;
	  j = a[j];
	}
	pr = (pr * (powq(2, cnt, p) + p - 2)) % p; 
	s -= cnt;
      }
    }
  }
  pr = (pr * powq(2, s, p)) % p;
  cout << pr << endl;
      
  return 0;
}

