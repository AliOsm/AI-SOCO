// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=22;
const ll N=1e5+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define is(n) scanf("%d",&n)
#define io(n) printf("%d\n",n)
#define ls(n) scanf("%lld",&n)
#define lo(n) printf("%lld\n",n)

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

ll s[N],r[N];
pair<ll,ll> x[N];
vector<ll> vec[N],pre[N],fun[N];

int main()
{
  ll n,m;
  cin>>n>>m;
  for(ll i=1;i<=n;i++)
  {
    cin>>s[i]>>r[i];
    vec[s[i]].pb(r[i]);
  }
  for(ll i=1;i<=m;i++)
  {
    sort(all(vec[i]));
    reverse(all(vec[i]));
    x[i-1]=mp(vec[i].size(),i);
  }
  ll maxf=0;
  sort(x,x+m);
  for(ll i=1;i<=m;i++)
  {
    ll sum=0;
    for(ll j=0;j<vec[x[i-1].s].size();j++)
    {
      sum+=vec[x[i-1].s][j];
      pre[i].pb(sum);
      fun[j+1].pb(sum);
      maxf=max(maxf,j+1);
    }
  }
  ll maxi=0;
  for(ll i=1;i<=maxf;i++)
  {
    sort(all(fun[i]));
    reverse(all(fun[i]));
  }
  for(ll i=1;i<=maxf;i++)
  {
    ll sum=0;
    for(auto j:fun[i])
    {
      if(j<0){break;}
      sum+=j;
    }
    maxi=max(maxi,sum);
  }
  cout<<maxi<<endl;
}
