#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <cstring>

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long int
using namespace std;
int const INF = (1<<30);
int const MAXN = (int)1e5+100;

int n,m;
char ch[61][61];
bool a[61][61][61][61];
bool used[61][61];
int kk,cnt;

void refresh(){
	for (int i=1;i<=n;i++){
		for (int j=1;j<=m;j++)
			used[i][j] = false;
	}
}


void dfs ( int x, int y){
	used[x][y] = true;
	kk++;
	if (a[x][y][x+1][y] == 1 && !used[x+1][y]){
		dfs(x+1,y);
	}
	if (a[x][y][x][y+1] == 1 && !used[x][y+1]){
		dfs(x,y+1);
	}
	if (a[x][y][x-1][y] == 1 && !used[x-1][y]){
		dfs(x-1,y);
	}
	if (a[x][y][x][y-1] == 1 && !used[x][y-1]){
		dfs(x,y-1);
	}
}


bool checkFor0(){
	kk = 0;
	refresh();
	bool ok = false;
	for (int i=1;i<=n;i++){
		for (int j=1;j<=m;j++){
			if ( a[i][j][i][j]){
				dfs(i,j);
				ok = true;
				break;
			}
		}
		if (ok)break;
	}	
	return (kk<cnt);
}

bool checkFor1(){
	for (int i=1;i<=n;i++){
		for (int j=1;j<=m;j++){
			kk = 0;
			if ( a[i][j][i][j] ){
				refresh();
				used[i][j] = true;
				for (int k=1;k<=n;k++){
					for (int t=1;t<=m;t++){
						kk = 0;
						if 	( a[k][t][k][t] && !used[k][t] ){
							dfs(k,t);
							if (kk<cnt-1)return true;
						}
					}
				}	
			}
		}
	}	


	return false;
}


int main (){
	#ifdef LOCAL
	freopen ("input.txt","r",stdin);
	freopen ("output.txt","w",stdout);
	#endif
	cin >>n>>m;
	for (int i=1;i<=n;i++){
		for (int j =1;j<=m;j++){
			cin >>ch[i][j];
		}
	}
	cnt = 0;

	for (int i=1;i<=n;i++){
		for (int j=1;j<=m;j++){
			if ( ch[i][j] == '#'){
				int q = 0;
				a[i][j][i][j] = 1;
				if (ch[i+1][j] == '#' ){
					a[i][j][i+1][j] = true;
			    }
				if (ch[i][j+1] == '#' ){
					a[i][j][i][j+1] = true;
			    }
   				if (ch[i-1][j] == '#' ){
					a[i][j][i-1][j] = true;
			    }
				if (ch[i][j-1] == '#' ){
					a[i][j][i][j-1] = true;
			    }
			    cnt++;
			}
		}
	}
	if (checkFor0()|| cnt<=1){
		cout <<-1<<endl;
	}
	else if (checkFor1()){
		cout <<1<<endl;
	}
	else {
		if (cnt==2)
			cout <<-1;
		else
			cout <<2;
	}

	return 0;
}
