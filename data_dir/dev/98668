#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <numeric>
#include <stack>
#include <deque>
#include <memory.h>
#include <string>
#include <unordered_map>

#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<ll>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%lld", &(a))
#pragma comment (linker, "/STACK:5000000000")
typedef long long ll;
const ll mod = 1000000007;
ll Inf = (ll)2e9;
ll LINF = (ll)1e18 + 1e17;

using namespace std;


int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	vector<int> c(n + 1);
	for (int i = 1; i <= n; i++)
		cin >> c[i];
	vector<bool> used(n + 1, false), used2(n + 1, false);
	vector<bool> can(n + 1, false);
	vector<int>a(n + 1);
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	int ans = 0;
	for (int i = 1; i <= n; i++)
	{
		int pos = i;
		while (!used[pos])
		{
			used[pos] = 1;
			pos = a[pos];
		}
		if (can[pos])
		{
			int t = i;
			while (!used2[t])
			{
				used2[t] = 1;
				can[t] = 1;
				t = a[t];
			}
		}
		else
		{
			int mn = Inf;
			int t = pos;
			while (!used2[t])
			{
				used2[t] = 1;
				can[t] = 1;
				mn = min(mn, c[t]);
				t = a[t];
			}
			ans += mn;
			t = i;
			while (!used2[t])
			{
				used2[t] = 1;
				can[t] = 1;
				t = a[t];
			}
		}
	}
	cout << ans;


	return 0;
}