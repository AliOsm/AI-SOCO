/*             
"IF U BELIEVE WHY NOT!!"
                       --Cristiano Ronaldo
*/             
#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli M=100000000;   
#define INF 1000000007
#define bip(n) __builtin_popcount(n)
typedef pair<lli,lli> ll;
#define mem1(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem2(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem3(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
lli n,k,m;
lli z,q,u,l,r,ax,cx,ay,by,cy,ql,qr,d,x,y;
//unordered_map<pair<ll,lli>,lli> mp;
string s;
lli me(lli a,lli b,lli M)
{
    if(b==0)
    return 1;
    else if(b%2==0)
    return me((a*a)%M,b/2,M);
    else
    return (a%M*me((a*a)%M,(b-1)/2,M)%M)%M;
}
lli mI(lli a,lli m)
{
    return me(a,m-2,m);
}
struct edge
{
    lli first,second,third;
};
bool cmp(edge a,edge b)
{
    if(a.first==b.first)
    return a.second<b.second;
    return a.first<b.first;
}
lli vis[10000007];
lli dp[1005][1005][2];
lli dp1[1005][1005][2];
char a[1005][1005];
lli mm[10000005];
int main()
{
cin>>n>>m>>x>>y;
for(int i=1;i<=n;i++)
{
    for(int j=1;j<=m;j++)
    cin>>a[i][j];
}
for(int i=1;i<=m;i++)
{
    for(int j=1;j<=n;j++)
    {
        if(a[j][i]=='#')
        dp1[i][1][0]++;
        else
        dp1[i][1][1]++;
    }
    //cout<<dp[i][1][0]<<" "<<dp[i][1][1]<<endl;
}
mem3(dp,1e12);
dp[1][1][0]=dp1[1][1][0];
dp[1][1][1]=dp1[1][1][1];
for(int i=1;i<=m;i++)
{
    for(int j=1;j<=1002;j++)
    {
        dp[i][j][0]=min(dp[i][j][0],dp[i-1][j-1][0]+dp1[i][1][0]);
        dp[i][j][1]=min(dp[i][j][1],dp[i-1][j-1][1]+dp1[i][1][1]);
        if(j>=x&&j<=y)
        {
            dp[i][1][0]=min(dp[i][1][0],dp[i-1][j][1]+dp1[i][1][0]);
            dp[i][1][1]=min(dp[i][1][1],dp[i-1][j][0]+dp1[i][1][1]);
        }
    }
}
lli mx=1e12;
for(int j=x;j<=y;j++)
mx=min({mx,dp[m][j][0],dp[m][j][1]});
cout<<mx;
}//