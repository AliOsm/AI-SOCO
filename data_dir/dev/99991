/********************************************************
 *    #####   #    #    ##     ####    #   #    ##      *
 *    #    #  #    #   #  #   #    #    # #    #  #     *
 *    #####   ######  #    #  #          #    #    #    *
 *    #    #  #    #  ######  #  ###     #    ######    *
 *    #    #  #    #  #    #  #    #     #    #    #    *
 *    #####   #    #  #    #   ####      #    #    #    *
 ********************************************************/

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  105

ll int vis[N]={0};
vi a[N],tmp;
vector<vi> v[4];

void dfs(ll node)
{
	tmp.pb(node);
	vis[node]=1;
	for(auto i:a[node])
	if(!vis[i])
	dfs(i);
}
void p(vi z)
{
	for(auto i:z) cout<<i<<" ";
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll int n,m;
		cin>>n>>m;
		while(m--)
		{
			ll int n1,n2;
			cin>>n1>>n2;
			a[n1].pb(n2);
			a[n2].pb(n1);
		}
		for(ll int i=1;i<=n;i++)
		{
			if(!vis[i])
			{
				tmp.clear();
				dfs(i);
				if(tmp.size()>3)
				{
					cout<<-1;
					return 0;
				}
				v[tmp.size()].pb(tmp);
			}
		}
		if(v[1].size()>=v[2].size())
		{
			for(ll int i=0;i<v[3].size();i++)
			{
				p(v[3][i]);
				cout<<endl;
			}
			for(ll int i=0;i<v[2].size();i++)
			{
				p(v[2][i]);
				p(v[1][i]);
				cout<<endl;
			}
			ll int cnt=0;
			for(ll int i=v[2].size();i<v[1].size();i++)
			{
				cnt++;
				cout<<v[1][i][0]<<" ";
				if(cnt%3==0) cout<<endl;
			}
		}
		else
		{
			cout<<-1;
		}
	}
	return 0;
}