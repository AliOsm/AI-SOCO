#include<bits/stdc++.h>

using namespace std;

const int N = 300030, K = 20;

int a[N], nxt[N][K], last[K], dp[N][K];

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n, q;
	cin >> n >> q; 
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for (int bit = 0; bit < K; bit++) {
		last[bit] = n;
	}
	for (int i = n - 1; i > -1; i--) {
		for (int bit = 0; bit < K; bit++) {
			nxt[i][bit] = last[bit];
			if ((a[i] >> bit) & 1) {
				last[bit] = i;
			}
		}
	}
	for (int i = n - 1; i > -1; i--) {
		for (int bit = 0; bit < K; bit++) {
			if ((a[i] >> bit) & 1) {
				dp[i][bit] = i;
			} else {
				dp[i][bit] = n;
				for (int nbit = 0; nbit < K; nbit++) {
					if ((a[i] >> nbit) & 1) {
						if (nxt[i][nbit] != n) {
							dp[i][bit] = min(dp[i][bit], dp[nxt[i][nbit]][bit]);
						}
					}
				}
			}
		}
	}
	while (q--) {
		int x, y;
		cin >> x >> y;
		x--;
		y--;
		bool reached = false;
		for (int bit = 0; bit < K; bit++) {
			if ((a[y] >> bit) & 1) {
				if (dp[x][bit] <= y) {
					reached = true;
					break;
				}
			}
		}
		if (reached) {
			cout << "Shi\n";
		} else {
			cout << "Fou\n";
		}
	}
	return 0;
}
