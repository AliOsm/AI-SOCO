#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define pb push_back
#define mp make_pair
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

struct Trie
{
    Trie *leg[26];
    int niv;
    vector <int> red,blue;
    Trie()
    {
        for(int i=0;i<26;++i) leg[i]=0;
    }
} *R = new Trie();

char a[Nmax];
int l,aux[Nmax],n;
long long sol=0;
vector < pair <int,int> > ans;

inline void add(Trie *nod, int p, int typ, int ind, int lvl)
{
    nod->niv=lvl;
    if(p==l+1)
    {
        if(!typ) nod->red.pb(ind);
        else nod->blue.pb(ind);
        return;
    }
    if(nod->leg[a[p]-'a']==0) nod->leg[a[p]-'a'] = new Trie;
    add(nod->leg[a[p]-'a'],p+1,typ,ind,lvl+1);
}

inline void Solve(Trie *nod)
{
    int i,kkt=0;
    for(i=0;i<26;++i)
    {
        if(!nod->leg[i]) continue;
        Solve(nod->leg[i]);
        for(auto it : nod->leg[i]->blue) nod->blue.pb(it);
        for(auto it : nod->leg[i]->red) nod->red.pb(it);
    }
    for(i=0;i<nod->blue.size() && i<nod->red.size();++i)
    {
        ans.pb(mp(nod->red[i],nod->blue[i]));
        sol+=nod->niv;
    }
    if(nod->red.size()>nod->blue.size())
    {
        for(i=nod->blue.size();i<nod->red.size();++i) aux[++kkt]=nod->red[i];
        nod->blue.clear(); nod->red.clear();
        for(i=1;i<=kkt;++i) nod->red.pb(aux[i]);
    }
    else
    {
        for(i=nod->red.size();i<nod->blue.size();++i) aux[++kkt]=nod->blue[i];
        nod->blue.clear(); nod->red.clear();
        for(i=1;i<=kkt;++i) nod->blue.pb(aux[i]);
    }
}

int main()
{
    int i;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n;
    for(i=1;i<=2*n;++i)
    {
        int k;
        if(i>n) k=i-n;
        else k=i;
        cin>>(a+1); l=strlen(a+1); add(R,1,(i>n),k,0);
    }
    Solve(R);
    cout<<sol<<"\n";
    for(auto it : ans) cout<<it.first<<" "<<it.second<<"\n";
    return 0;
}
