
// ~/BAU/ACM-ICPC/Teams/Republic_of_Coders/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 200001;
const ll MOD = 1e9 + 7;

int n, a, b;
ll h[N], d[N];

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif

	scanf("%d%d%d", &n, &a, &b);
	vector<pair<ll, int> > v;
	for (int i = 0; i < n; i++) {
		scanf("%lld%lld", h + i, d + i);
		v.push_back(make_pair(h[i] - d[i], i));
	}
	sort(v.begin(), v.end());
	reverse(v.begin(), v.end());

	ll ans = 0;
	ll A = 1ll << a;
	if (b) {
		int s = min(n, b);
		ll tmp = 0;
		for (int i = 0; i < s; i++)
			tmp += max(h[v[i].second], d[v[i].second]);
		for (int i = s; i < n; i++)
			tmp += d[v[i].second];

		for (int i = 0; i < n; i++) {
			if(i<s)			
				ans = max(ans, tmp - (i < s ? max(h[v[i].second], d[v[i].second]) : d[v[i].second])
				                   + max(d[v[i].second], h[v[i].second] * A));
			else 
				ans = max(ans, tmp - (i < s ? max(h[v[i].second], d[v[i].second]) : d[v[i].second])
					+ max(d[v[i].second], h[v[i].second] * A - max(d[v[s-1].second],h[v[s-1].second]) + d[v[s-1].second]));
		}
	}
	else {
		for (int i = 0; i < n; i++)
			ans += d[v[i].second];
	}
	printf("%lld\n", ans);
	return 0;
}