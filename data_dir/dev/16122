//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")


#include<bits/stdc++.h>

using namespace std;

typedef complex<long double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back

const int maxn=(int)2e5+5;
const ll mod=(ll)(1e9+7);
ld pi=2.0*acos(0.0);
const int inf=(int)(2e9);
set<int> s1,s2;

int get(int dis,int v)
{
	int ret=(dis/v)+(dis%v==0?0:1);
	
	return ret;
}

int solve(int x1,int y1,int x2,int y2,int v)
{
	if(x1==x2)
	{
		return abs(y1-y2);
	}
	
	auto right=s1.lower_bound(y1);
	
	int ret=inf;
	
	if(right!=s1.end())
	{
		ret=min(ret,*right-y1+x2-x1+abs(*right-y2));
	}
	
	if(right!=s1.begin())
	{
		auto left=--right;
		
		//cout<<(*left)<<endl;
		
		ret=min(ret,y1-*left+x2-x1+abs(*left-y2));
	}
	
	right=s2.lower_bound(y1);
	
	if(right!=s2.end())
	{
		ret=min(ret,*right-y1+get(x2-x1,v)+abs(*right-y2));
	}
	
	if(right!=s2.begin())
	{
		auto left=--right;
		
	//	cout<<(*left)<<endl;
		
		ret=min(ret,y1-*left+get(x2-x1,v)+abs(*left-y2));
	}
	
	return ret;
}

int main()
{	
	int n,m,c1,c2,v;
	
	scanf("%d%d%d%d%d",&n,&m,&c1,&c2,&v);
	
	for(int i=0;i<c1;i++)
	{
		int x;scanf("%d",&x);
		
		s1.insert(x);
	}
	
	for(int i=0;i<c2;i++)
	{
		int x;scanf("%d",&x);
		
		s2.insert(x);
	}
	
	int q;scanf("%d",&q);
	
	while(q>0)
	{
		int x1,y1,x2,y2;
		
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		
		if(x1>x2)
		{
			swap(x1,x2);
			
			swap(y1,y2);
		}
		
		printf("%d\n",solve(x1,y1,x2,y2,v));
		
		q--;
	}
	
	return 0;
}



