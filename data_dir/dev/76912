#include<bits/stdc++.h>
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x),end(x)
#define SZ(x) ((int)(x).size())
using namespace std;
typedef long long LL;
typedef double D;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
#define rep(i, n) for(int i = 0; i < n; i ++)
#define rep1(i, a, b) for(int i = a; i < b; i ++)
#define per1(i, a, b) for(int i = a; i >= b; i --)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
const int MXN = (int)2e5 + 7;
int a[MXN], b[MXN];
LL need;
vector<LL>ans;
int main(void){
	int n; LL r; scanf("%d %lld", &n, &r);
	rep1(i, 1, n+1) scanf("%d", a + i);
	rep1(i, 1, n+1) scanf("%d", b + i);
	rep1(i, 1, n+1){
		if(b[i] < a[i]){
			puts("-1"); return 0;
		}
	}
	LL pre = 0;
	rep1(i, 1, n+1){
		LL cv = 0;
		if(b[i] >= a[i]*2){
			if(pre > a[i]) pre -= a[i];
			else pre = 0;
			continue;
		} else{
			cv = 2*a[i] - b[i];
		}
		if(cv >= pre){
			cv -= pre;
			need += (cv + r - 1) / r;
			pre = (cv + r - 1) / r * r - cv;
		} else if(pre > a[i]){
			pre -= a[i];
		} else{
			pre = 0;
		}
	}
	printf("%lld\n", need);
	if(need > (int)1e5) return 0;
	pre = 0;
	LL cur = 0;
	rep1(i, 1, n+1){
		LL cv = 0;
		if(b[i] >= a[i]*2){
			if(pre > a[i]){
				pre -= a[i];
				cur += a[i];
			}
			else{
				cur += pre;
				cur += (a[i] - pre)*2;
				pre = 0;
			}
			continue;
		} else{
			cv = 2*a[i] - b[i];
		}
		if(cv >= pre){
			cur += (a[i] - cv)*2;
			cv -= pre;
			cur += pre;
			rep(i, (cv + r - 1) / r){
				ans.pb(cur + r*i);
			}
			cur += cv;
			pre = (cv + r - 1) / r * r - cv;
		} else if(pre > a[i]){
			cur += a[i];
			pre -= a[i];
		} else{
			cur += pre;
			cur += (a[i] - pre) * 2;
			pre = 0;
		}
	}
	rep(i, need) printf("%lld%c", ans[i], " \n"[i == need - 1]);
	return 0;
}

