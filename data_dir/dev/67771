/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */


#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define int long long

using namespace std;

class DTicketGame {
public:
	void solve(std::istream& in, std::ostream& out) {
        int n; in >> n;
        string s; in >> s;
        int s1 = 0, s2 = 0, x = 0, y = 0;
        for(int i = 0; i < n; ++i) {
            if(s[i] == '?') {
                if(i < n/2) x++;
                else y++;
            }
            else {
                if(i < n/2) s1 += (s[i] - '0');
                else s2 += (s[i] - '0');
            }
        }

        if(s1 == s2) {
            if(x == y) out << "Bicarp";
            else out << "Monocarp";
            return;
        }

        if(s1 > s2) {
            if(x > y) {
                out << "Monocarp";
                return;
            }
            int extra = y - x;
            int control = extra/2;
            if(control*9 + s2 != s1) {
                out << "Monocarp";
                return;
            }
            out << "Bicarp";
            return;
        }
        else {
            if(y > x) {
                out << "Monocarp";
                return;
            }
            int extra = x - y;
            int control = extra/2;
            if(control*9 + s1 != s2) {
                out << "Monocarp";
                return;
            }
            out << "Bicarp";
            return;
        }


	}
};


int32_t main() {
	DTicketGame solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
