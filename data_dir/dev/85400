//Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
#define double long double
 
int n,m,d;
int arr[3][303];
int dp[150005];
// int dp(int pos,int ind)
// {
//     if(pos==m-1)
//         return -abs(ind-arr[pos][0]);
//     int ans=-abs(ind-arr[pos][0]);
//     int st=-1e18;
//     int steps=(arr[pos+1][2]-arr[pos][2])*d;
//     for(int i=max(1ll,ind-steps);i<=min(n,ind+steps);i++)
//         st=max(st,ans+dp(pos+1,i));
//     return st;
// }
int tablemin[(int)log2(150005)+2][150005];
int floorlog[150005];
int maxi(int start,int end)
{
    int p=floorlog[end-start+1];
    return max(tablemin[p][start],tablemin[p][end-(1<<p)+1]);
}
int32_t main()
{
    IOS;
    for(int i=0;(1<<i)<150005;i++)
    {
        for(int j=(1<<i);j<150005 && j<(1<<(i+1)); j++)
            floorlog[j]=i;
    }
    cin>>n>>m>>d;
    int sum=0;
    for(int i=0;i<m;i++)
    {
        cin>>arr[0][i]>>arr[1][i]>>arr[2][i];
        sum+=arr[1][i];
    }
    arr[2][m]=arr[2][m-1];
    for(int pos=m-1;pos>=0;pos--)
    {
        int steps=(arr[2][pos+1]-arr[2][pos])*d;
        for(int ind=1;ind<=n;ind++)
        {
            int ans=-abs(ind-arr[0][pos]);
            int maxval=maxi(max(1ll,ind-steps),min(n,ind+steps));
            dp[ind]=ans+maxval;
        }
 
        for(int i=1;i<=n;i++)
            tablemin[0][i]=dp[i];
 
        for (int j=1;(1<<j)<=n;j++) 
            for (int i=1;(i+(1<<j)-1)<=n;i++)
                tablemin[j][i]=max(tablemin[j-1][i],tablemin[j-1][i+(1<<(j - 1))]);
    }
    int maxi=-1e18;
    for(int i=1;i<=n;i++)
        maxi=max(maxi,dp[i]);
    cout<<sum+maxi;
}
