#include <stdio.h>
#include <vector>
#include <algorithm>
#include <string.h>
#define pb push_back
using namespace std;

vector<pair<int, int> > edges;

const int MAXN = 2005;
int is_prime[MAXN];
vector<int> primes;

void add_edge(int x, int y) {
    edges.pb({x, y});
}

int main(void) {
    int n;

    is_prime[0] = 1;
    is_prime[1] = 0;
    for (int i = 2; i < MAXN; i++) {
        is_prime[i] = 1;
    }
    for (int i = 2; i < MAXN; i++) {
        if (is_prime[i]) {
            primes.pb(i);
            for (int j = i + i; j < MAXN; j += i) {
                is_prime[j] = 0;
            }
        }
    }

    /*for (int i = 3; i < MAXN; i++) {
        printf("here i = %d\n", i);
        if (!solve(i)) {
            printf("bad i = %d\n", i);
            break;
        }
    } */

    scanf(" %d", &n);
    for (int i = 1; i < n; i++) {
        add_edge(i, i + 1);
    }
    add_edge(n, 1);


    int tot = n;
    for (int i = 1; i + 2 < n && !is_prime[tot]; i += 4) {
        add_edge(i, i + 2);
        tot++;
    }
    for (int i = 2; i + 2 < n && !is_prime[tot]; i += 4) {
        add_edge(i, i + 2);
        tot++;
    }
    /*if (!is_prime[tot]) {
            printf("bad n = %d\n", n);
            return 0;
    } */

    printf("%d\n", (int)edges.size());
    for (pair<int, int>& edge : edges) {
        printf("%d %d\n", edge.first, edge.second);
    }
}

