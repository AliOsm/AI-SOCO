#include<bits/stdc++.h>

using namespace std;

int main()
{
    int i,j,k,l,m,n;
    cin>>n>>m;
    vector<int>v[n+10];
    bool cat[n+1];
    memset(cat,0,sizeof(cat));
    for(i=0; i<n; i++)
    {
        cin>>k;
        cat[i+1]=k;
    }

    for(i=1; i<n; i++)
    {
        cin>>k>>l;
        v[k].push_back(l);
        v[l].push_back(k);
    }

    int visit[n+1];
    int d[n+1];
    memset(visit,0,sizeof(visit));
    memset(d,0,sizeof(d));
    queue<int>q;
    q.push(1);
    visit[1]=1;
    if(cat[1])d[1]=1;
    int ans=0;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        if(v[u].size()==1 && u!=1) ans++;
        for(i=0; i<v[u].size(); i++)
        {
            int p=v[u][i];
            if(!visit[p])
            {
                int aa=d[u]+((cat[p]==1)?1:0);
                if(aa<=m)
                    q.push(p);
                visit[p]++;
                if(cat[p])
                    d[p]=d[u]+1;
            }
        }
    }

    cout<<ans<<endl;

    return 0;
}
