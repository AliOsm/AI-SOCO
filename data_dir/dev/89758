#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;

lli n;
lli a[M], fen1[M], fen2[M];
pair<lli, lli > chng[M];

void update(lli idx, lli val)
{
    while(idx <= n)
    {
        fen1[idx] += val;
        idx += (idx) & (-idx);
    }
}
void update1(lli idx, lli val)
{
    while(idx <= n)
    {
        fen2[idx] += val;
        idx += (idx) & (-idx);
    }
}

lli query(lli idx)
{
    lli ans = 0;
    while(idx > 0)
    {
        ans += fen1[idx];
        idx -= (idx) & (-idx);
    }
    return ans;
}

lli query1(lli idx)
{
    lli ans = 0;
    while(idx > 0)
    {
        ans += fen2[idx];
        idx -= (idx) & (-idx);
    }
    return ans;
}

void solve()
{
    cin>>n;
    for(int i = 1; i <= n; i ++)
    {
        cin>>chng[i].first ;
        chng[i].second = i;
    }
    sort(chng + 1, chng + 1 + n);
    for(int i = 1; i <= n; i ++)
    {
        a[chng[i].second] = i;
    }
    lli ans = 0;
    for(int i = n; i >= 1; i --)
    {
        lli cnt = query(a[i]);
        update(a[i], 1);
        ans += query1(a[i]);
        update1(a[i], cnt);
    }
    cout<<ans;
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
