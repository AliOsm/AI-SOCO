#include <iostream>
#include <set>
#include <vector>
#include <map>
#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>
#include <complex>
#include <cmath>
#include <ctime>
using namespace std;
typedef long long Long;
int LO[70], HI[70];
int memo[70][2][2];
int taken[70][2][2];
int dp(int id,int l,int h){
	if(id == 65)return 0;
	int w = -1000000000;
	if(memo[id][l][h] != -1)return memo[id][l][h];
	for(int i = 0; i <= 1; ++i){
		if(l && LO[id] > i)continue;
		if(h && HI[id] < i)continue;
		int t = dp(id+1,l&&LO[id]==i, h&&HI[id]==i) + i;
		if(t > w){
			w = t;
			taken[id][l][h] = i;
		}
	}
	return memo[id][l][h] = w;
}

int main()
{
	int TC;
	cin >> TC;
	while(TC-->0){
		memset(memo,-1,sizeof(memo));
		Long L,H;
		cin >> L >> H;
		for(int i = 64; i >= 0; --i){
			LO[i] = L & 1; L >>= 1;
			HI[i] = H & 1; H >>= 1;
		}
//		for(int i = 0; i < 65; ++i){
//			cout << HI[i] << " ";
//		}
//		cout << endl;
		dp(0,1,1);
		Long num = 0;
		int l = 1, h = 1;
		for(int i = 0; i < 65; ++i){
			int d = taken[i][l][h];
			num = 2*num + d;
			l = l && LO[i] == d;
			h = h && HI[i] == d;
		}
		cout << num << endl;
	}
	
	
}









