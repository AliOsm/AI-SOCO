#include<bits/stdc++.h>
using namespace std;
#define MAXLog 25
#define MAX 300005
#define pii pair<int,int>
#define ll long long int

int n;
ll Ans=0;
int Par[MAX];
int Reach[MAX];
int dp[MAX][MAXLog];
vector<int>adj[MAX];
vector<pii>Update[MAX];

ll dfs1(int u,int p){
    ll mx=0;
    Par[u]=p;
    for(int i=0;i<adj[u].size();i++){
        int w=adj[u][i];
        if(w==p) continue;
        ll ret=dfs1(w,u); mx=max(mx,ret);
    }
    Ans+=mx+1;
    return mx+1;
}

void solve(int u,int p){
    for(int i=0;i<adj[u].size();i++){
        int w=adj[u][i];
        if(w==p) continue;
        solve(w,u);
    }

    dp[u][1]=n;
    for(int d=2;d<MAXLog;d++){
        vector<int>v;
        for(int i=0;i<adj[u].size();i++){
            int w=adj[u][i];
            if(w==p) continue;
            if(dp[w][d-1]) v.push_back(dp[w][d-1]);
        }
        sort(v.begin(),v.end(),greater<int>());
        int mx=0; for(int i=1;i<=v.size();i++) if(v[i-1]>=i) mx=i;
        dp[u][d]=mx;
        if(mx) Update[mx].push_back(make_pair(u,d));
    }
}

int main(){
    scanf("%d",&n);

    for(int i=1;i<n;i++){
        int u,v;
        scanf("%d %d",&u,&v);
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs1(1,0);
    solve(1,0);

    ll Add=n;
    for(int i=1;i<=n;i++) Reach[i]=1;

    for(int k=n;k>1;k--){
        for(int i=0;i<Update[k].size();i++){
            int u=Update[k][i].first;
            int d=Update[k][i].second;
            while(u && Reach[u]<d){Add+=d-Reach[u]; Reach[u]=d; u=Par[u];}
        }
        Ans+=Add;
    }
    cout<<Ans<<endl;
}
