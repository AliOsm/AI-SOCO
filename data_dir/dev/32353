#include <bits/stdc++.h>
#define int long long
using namespace std;
int read()
{
    int x;
    scanf("%I64d", &x);
    return x;
}
const int N = 812345;
int d[N];
struct abc{
    int s, id;
};
abc a[N];
bool cmp(abc a, abc b)
{
    return a.s < b.s;
}
int d1[N];
int d2[N];
main()
{
    int n, m, i, j, x, y;
    cin >> n;
    for(i = 1; i <= n; i ++)
    {
        a[i].s = read();
        a[i].id = i;
    }
    sort(a + 1, a + n + 1, cmp);
    cin >> m;
    int s1 = 0;
    int s2 = 0;
    int s3 = 0;
    for(i = 2; i <= m; i ++)
    {
        s1 += (a[i].s - a[i - 1].s) * (i - 1) * (m - i + 1);
    }
    for(i = 1; i <= m; i ++)
        d1[1] += a[i].s - a[1].s;
    for(i = n - m + 1; i <= n; i ++)
        d2[n] += a[n].s - a[i].s;
    for(i = 2; i <= n; i ++)
    {
        d1[i] = d1[i - 1];
        d1[i] -= (a[i].s - a[i - 1].s) * (m - 1);
        int id = i + m - 1;
        d1[i] += (a[id].s - a[i].s);
    }
    for(i = n - 1; i >= 1; i --)
    {
        d2[i] = d2[i + 1];
        d2[i] -= (a[i + 1].s - a[i].s) * (m - 1);
        int id = i - m + 1;
        if(id < 0)
            break;
        d2[i] += (a[i].s - a[id].s);
    }
//    for(i = 1; i <= n; i ++)
//    {
//        cout << a[i].s << " ";
//    }
//    cout << endl;
//    for(i = 1; i <= n; i ++)
//    {
//        cout << i << " " << d1[i] << " " << d2[i] << endl;
//    }
    int id = 1;
    int ans = s1;
    for(i = 2; i <= n - m + 1; i ++)
    {
        s1 -= d1[i - 1];
        s1 += d2[i + m - 1];
        if(ans > s1)
        {
            ans = s1;
            id = i;
        }
    }
    vector <int> v;
    for(i = id; i < id + m; i ++)
        v.push_back(a[i].id);
    sort(v.begin(), v.end());
    for(i = 0; i < v.size(); i ++)
    {
        cout << v[i] << " ";
    }
}
