#include <algorithm>
#include <iostream>
#include <iterator>
#include <iomanip>
#include <vector>
#include <map>
#include <set>

using namespace std;

#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile
#define firstout if (first == true) first = false; else printf(" ")

typedef long long ll;
typedef long double ld;
typedef map< int, int > mapT;
typedef pair< int, int > pairT;

bool first = true;

ll gcd(ll a, ll b)
{
    while (a != 0 && b != 0)
    {
        if (a < b) swap(a, b);
        a %= b;
    }
    return a + b;
}

string lowreg(string s)
{
    string ret;
    int len = s.length();
    for (int i = 0; i < len; i++)
        if ((int)s[i] >= (int)'A' && (int)s[i] <= (int)'Z')
            ret += (char)((int)'a' + (int)s[i] - (int)'A');
        else
            ret += s[i];
    return ret;
}

ll min(ll a, ll b)
{
    if (a <= b)
        return a;
    else
        return b;
}

ll max(ll a, ll b)
{
    if (a >= b)
        return a;
    else
        return b;
}

ll min(ll a, ll b, ll c)
{
    return(min(a, min(b, c)));
}

int main()
{
    ll k2, k3, k5, k6, sum1, sum2;
    scanf("%I64d%I64d%I64d%I64d", &k2, &k3, &k5, &k6);
    sum1 = (ll)256 * min(k2, k5, k6) + (ll)32 * max(0, min(k2 - min(k2, k5, k6), k3));
    sum2 = (ll)32 * min(k2, k3) + (ll)256 * max(0, min(k2 - min(k2, k3), min(k5, k6)));
    //printf("%I64d %I64d\n", sum1, sum2);
    printf("%I64d", max(sum1, sum2));
    return 0;
}
