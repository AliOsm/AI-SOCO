/*
 _____ _             _              _           _ 
|_   _| |__   ___   / \   _ __  ___| |__  _   _| |
  | | | '_ \ / _ \ / _ \ | '_ \/ __| '_ \| | | | |
  | | | | | |  __// ___ \| | | \__ \ | | | |_| | |
  |_| |_| |_|\___/_/   \_\_| |_|___/_| |_|\__,_|_|                                                

*/
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll,ll>
#define msi         map<string,ll>
#define mis         map<ll, string>
#define rep(i,a,b)    for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)
#define trav(a, x) 	for(auto& a : x)
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define vii         vector<pair<ll, ll>>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        998244353
#define lbnd        lower_bound
#define ubnd        upper_bound
#define max(a,b)	(a>b?a:b)
#define min(a,b)	(a<b?a:b)

/*	For Debugging	*/
#define DEBUG 		cerr<<"\n>>>I'm Here<<<\n"<<endl;
#define display(x) trav(a,x) cout<<a<<" ";cout<<endl;
#define what_is(x)  cerr << #x << " is " << x << endl;

std::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define TIME        cerr << "\nTime elapsed: " << setprecision(5) <<1000.0 * clock() / CLOCKS_PER_SEC << "ms\n";
#define DECIMAL(n)  cout << fixed ; cout << setprecision(n);
#define FAST ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace __gnu_pbds;
using namespace std;
#define PI 3.141592653589793
#define N  100005
ll add(ll a,ll b,ll mod=hell)
{
	return (a+b)%mod;
}
ll sub(ll a,ll b,ll mod=hell)
{
	return (a-b+mod)%mod;
}
ll mul(ll a,ll b,ll mod=hell)
{
	return (a*b)%mod;
}
ll expo(ll base, ll exponent, ll mod) {								//return base^exponent modulo modulus
    ll ans = 1;
    while(exponent !=0 ) {
        if((exponent&1) == 1) {
            ans = ans*base ;
            ans = ans%mod;
        }
        base = base*base;
        base %= mod;
        exponent>>= 1;
    }
    return ans%mod;
}
void solve()
{
	ll l,r,n,m;
	cin>>n>>m>>l>>r;
	if(n&1 && m&1)
	{
		cout<<expo((r-l+1)%hell,(n*m)%(hell-1),hell)<<endl;
		return;
	}
	ll num=r-l+1;
	ll even=num/2,odd=num/2;
	if(num&1)
	{
		if(l&1)
			odd++;
		else
			even++;
	}
	// what_is(abs(even-odd)%hell);
	// what_is((n*m)%(hell-1));
	// what_is(expo((abs(even-odd))%hell,(n*m)%(hell-1),hell));
	// what_is(add(expo((r-l+1)%hell,(n*m)%(hell-1),hell),(even==odd?0:expo((abs(even-odd))%hell,(n*m)%(hell-1),hell))));
	cout<<mul(add( ((r-l+1)%hell==0?0:expo((r-l+1)%hell,(n*m)%(hell-1),hell)) ,(abs(even-odd)==0 ? 0 : expo((abs(even-odd))%hell,(n*m)%(hell-1),hell)) ),expo(2,hell-2,hell) )<<endl;
	return;
}
int main()
{
	FAST
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		solve();
	}
	TIME
	return 0;
}