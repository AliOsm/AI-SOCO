/*
1119E. Pavel and Triangles
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const ll prime = 1e9 + 7;

#define F(i,a,b) for(ll i = (ll)(a); i <= (ll)(b); i++)
#define RF(i,a,b) for(ll i = (ll)(a); i >= (ll)(b); i--)

int main(){
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  
  ll n, left=0, a[300000] = {0}, sum=0, sumtemp;
  
  cin >> n;
  F(i,1,n){
    cin >> a[i];
    sumtemp = min(left,a[i]/2);
    sum += sumtemp;
    left -= sumtemp;
    a[i] -= 2*sumtemp;
    sum += a[i]/3;
    a[i]%=3;
    left += a[i];
  }
  cout << sum;
  return 0;
}