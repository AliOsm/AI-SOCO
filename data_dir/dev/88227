#pragma comment(linker,"/stack:256000000")

#include <cmath> 
#include <ctime> 
#include <iostream> 
#include <string> 
#include <vector> 
#include <algorithm> 
#include <set> 
#include <map> 
#include <cstring> 
#include <cstdlib> 
#include <queue> 
#include <cstdio> 
#include <cfloat>
#include <cassert>
#include <sstream>
#include <deque>

using namespace std; 

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++) 
#define sz(v) (int)(v).size() 
#define all(v) (v).begin(), (v).end()

const int N = 300100;

pair <int, int> a[N];
long long p[N];

int main() {
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int n;
	scanf("%d", &n);
	REP(i, n) scanf("%d", &a[i].first), a[i].second = i + 1;
	sort(a, a + n);
	REP(i, n) {
		p[i + 1] = p[i] + a[i].first;
	}
	int k;
	scanf("%d", &k);
	long long sum = 0, pr = 0;
	REP(i, k) {
		sum += i * (long long)a[i].first - pr;
		pr += a[i].first;
	}
	long long res = sum;
	int L = 0;
	for (int i = k; i < n; i++) {
		sum -= (p[i] - p[i - k + 1]);
		sum += (long long)(k - 1) * a[i - k].first;
		sum += (k - 1) * (long long)a[i].first - (p[i] - p[i - k + 1]);
		if (sum < res) {
			res = sum;
			L = i - k + 1;
		}
	}
	for (int i = L; i < L + k; i++) {
		printf("%d ", a[i].second);
	}
	return 0;
}