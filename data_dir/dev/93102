/* practice with Dukkha */
#include <stdio.h>

#define N	300000

int pp[N], ii[N], uu[N * 5], vv[N * 5], cnt;

void swap(int i, int j) {
	int p, q;

	if (i == j)
		return;
	p = pp[i], q = pp[j];
	pp[i] = q;
	pp[j] = p;
	ii[p] = j;
	ii[q] = i;
	uu[cnt] = i;
	vv[cnt] = j;
	cnt++;
}

int main() {
	int n, h, i, p;

	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		scanf("%d", &p), p--;
		pp[i] = p;
		ii[p] = i;
	}
	h = n / 2;
	for (i = 0; i < n; i++) {
		int j = ii[i];

		if (j == i)
			continue;
		if (j - i >= h)
			swap(i, j);
		else if (i >= h && j >= h) {
			swap(0, i);
			swap(0, j);
			swap(0, i);
		} else if (i < h && j < h) {
			swap(i, n - 1);
			swap(j, n - 1);
			swap(i, n - 1);
		} else {
			swap(i, n - 1);
			swap(0, n - 1);
			swap(0, j);
			swap(0, n - 1);
			swap(i, n - 1);
		}
	}
	printf("%d\n", cnt);
	for (i = 0; i < cnt; i++)
		printf("%d %d\n", uu[i] + 1, vv[i] + 1);
	return 0;
}
