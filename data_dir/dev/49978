#include <bits/stdc++.h>

using namespace std;

typedef pair<int,int> ii;
#define ll long long
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

int lis[2003][2003];
int ps1[2003];
int ps2[2003];

int main(){
	int n;
	int v[2003];
	scanf("%d",&n);
	int qt1 = 0, qt2 = 0;
	int p1 = -1;
	for(int i = 0; i < n; i++){
		scanf("%d",v+i);
		if(v[i] == 1){
			if(p1 == -1){
				p1 = i;
			}
			qt1++;
		}
		else{
			qt2++;
		}
	}
	int ans = max(qt1, qt2);
	if(p1 == -1){
		printf("%d\n",ans );
		return 0;
	}
	for(int i = 0; i < n; i++){
		if(v[i] == 1){
			int aux = 1;
			reverse(v, v + i + 1);
			for(int j = 0; j < n; j++){
				ps1[j] = v[j] == 1;
				ps2[j] = v[j] == 2;
				if(j){
					ps1[j] += ps1[j-1];
					ps2[j] += ps2[j-1];
				}
			}
			for(int j = 1; j < n; j++){
				aux = max(aux, ps1[j] + (ps2[n-1] - ps2[j-1]));
			}
			ans = max(ans, aux);
			reverse(v, v + i + 1);
		}
	}
	for(int j = 0; j < n; j++){
		ps1[j] = v[j] == 1;
		ps2[j] = v[j] == 2;
		if(j){
			ps1[j] += ps1[j-1];
			ps2[j] += ps2[j-1];
		}
	}
	for(int i = p1; i < n; i++){
		ans = max(ans, ps1[i] + (ps2[n-1] - (i ? ps2[i-1] : 0)));
	}
	for(int i = n-1; i >= 0; i--){
		int l1 = 0;
		int l2 = 0;
		lis[i][i] = 1;
		if(v[i] == 1) l1 = 1;
		for(int j = i-1; j >= 0; j--){
			lis[i][j] = lis[i][j+1];
			if(v[j] == 1){
				l1++;
				lis[i][j] = max(lis[i][j], l1);
			}
			if(v[j] == 2){
				lis[i][j]++;
			}
		}
	}

	for(int i = p1 + 1; i < n; i++){
		for(int j = i + 1; j < n; j++){
			ans = max(ans, lis[j][i] + ps1[i-1] + (ps2[n-1] - ps2[j]));
		}
	}
	printf("%d\n",ans );
}
