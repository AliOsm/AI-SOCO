#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
using namespace std;
typedef long long ll;
#define SIZE 131072
ll M[2*SIZE][5],sts[2*SIZE];
vector<char> op;vector<int> com;
int n;
map<int,int> rev;
int forw[SIZE];
// temporary
char BUF[30];
// TREE
void update(int vr){
  if(vr>=SIZE)return;
  sts[vr]=sts[2*vr]+sts[2*vr+1];
  for(int i=0;i<5;++i)M[vr][i]=M[2*vr][i];
  for(int i=0;i<5;++i)
   M[vr][(i+sts[2*vr])%5]+=M[2*vr+1][i];
}
void add(int w){
  w=rev[w];int old=w;
  w+=SIZE;
  sts[w]=1;M[w][1]=forw[old];
  w/=2;
  while(w>0){update(w);w>>=1;}
}
void rem(int w){
  w=rev[w];int old=w;
  w+=SIZE;
  sts[w]=0;M[w][1]=0;
  w/=2;
  while(w>0){update(w);w>>=1;}
}
ll get(){return M[1][3];}
int main(){
  int i,j,k,l;
  scanf("%d",&n);
  for(i=0;i<n;++i){
   scanf("%s",&BUF);
   if(BUF[0]=='s'){op.push_back('s');com.push_back(0);continue;}
   int w;scanf("%d",&w);
   if(BUF[0]=='a'){op.push_back('+');com.push_back(w);rev[w]=0;}
   else{op.push_back('-');com.push_back(w);}
                  }
  i=1;for(map<int,int>::iterator it=rev.begin();it!=rev.end();++it){it->second=i++;forw[it->second]=it->first;}
  for(i=0;i<op.size();++i){
   if(op[i]=='s')cout<<get()<<'\n';
   else if(op[i]=='+')add(com[i]);
        else rem(com[i]);
                          }
  //system("pause");
  return 0;
}
