#include <iostream>
#include <functional>
#include <algorithm>
#include <vector>
#include <queue>
#include <cstring>
using namespace std;
const int MOD = 998244353;
    string s;
    string t;
    int n, k;


int dp[3010][3010];
int getdp(int left, int right, int input)
{
    if (input == n) {
        // cout << left << ' ' << right << ' ' << endl;
        return 1;
    }
    int& res = dp[left][right];
    if (res != -1) return res;
    res = 0;
    if (left == 0 && right >= k)
    {
        res += 1;
    }
    if (right < n && (t[right] == s[input] || t[right] == '*'))
    {
        res += getdp(left, right+1, input+1);
        res %= MOD;
    }
    if (left > 0 && (t[left-1] == s[input] || t[left-1] == '*'))
    {
        res += getdp(left-1, right, input+1);
        res %= MOD;
    }
    // cout << left << ' ' << right << ' ' << input << ' ' << res << endl;
    return res;
}
int main()
{
    cin >> s;
    cin >> t;
    n = s.size();
    k = t.size();
    while (t.size() < s.size())
    {
        t.push_back('*');
    }
    memset(dp, -1, sizeof(dp));
    int ans = 0;
    for (int i = 0; i < n; ++i) {
        if (t[i] == s[0] || t[i] == '*')
        {
            ans += getdp(i, i+1, 1);
            ans %= MOD;
        }
    }
    ans *= 2;
    ans %= MOD;
    cout << ans << endl;
}
