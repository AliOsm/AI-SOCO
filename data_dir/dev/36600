#include<bits/stdc++.h>

using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/

#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second



int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
int ini() {
    int x;
    scanf("%d",&x);
    return x;
}
long long inl() {
    long long x;
    scanf("%lld",&x);
    return x;
}

const int N = (int) 2e5 + 5;
const int inf = (int) 1e9 + 7;
const double pi=2* acos(0.0);
int a[N];

int main() {

    int n,i,j;
    n=ini();
    string s;
    cin>>s;
    int c=0,res=0;
    vector<pair<int,int> >v;
    for(int i=0; s[i]; i++) {
        if(s[i]=='G') {
            c++;
            if(i==(s.size()-1)) {
                v.push_back({c,i});
            }
        } else {
            if(c!=0) {
                v.push_back({c,i});
            }
            c=0;
        }
    }

    if(v.size()==0) {
        cout<<0<<endl;
    } else if(v.size()==1) {
        cout<<v[0].first<<endl;
    } else if(v.size()==2) {
        if(s[v[0].second + 1]=='G') {
            res=max(v[1].first+v[0].first,res);
        } else {
            res=max(res,max(v[1].first+1,v[0].first+1));
        }
        cout<<res<<endl;
    } else {
        for(int i=0; i<v.size(); i++) {
            if(i==0) {
                res=max(res,v[i].first+1);
            } else {
                if(s[v[i-1].second + 1]=='G') {
                    res=max(v[i].first+v[i-1].first+1,res);
                } else {
                    res=max(res,v[i].first+1);
                }
            }
        }
        cout<<res<<endl;
    }
    return 0;
}


