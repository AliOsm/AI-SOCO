#include <bits/stdc++.h>
using namespace std;

const int maxN = 1500 + 10 , maxM = 1500 + 10;
int n,m;
string s[maxN];
pair <int,int> mark[maxN][maxM];
int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

bool dfs(int x,int y)
{
    mark[x%n][y%m] = make_pair(x,y);
    for (int i = 0 ; i < 4 ; i++)
    {
        int curX = x + dx[i] , curY = y + dy[i];
        if (s[curX%n][curY%m] == '#')
            continue;
        if (mark[curX%n][curY%m].first==0 && mark[curX%n][curY%m].second==0 && dfs(curX,curY))
            return true;
        else
        if (mark[curX%n][curY%m].first != curX || mark[curX%n][curY%m].second != curY)
            return true;
    }
    return false;
}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    int x,y;
    for (int i = 0 ; i < n ; i++)
        cin >> s[i];
    for (int i = 0 ; i < n ; i++)
        for (int j = 0 ; j < m ; j++)
            if (s[i][j] == 'S')
                x = i + n*m , y = j + n*m;
    if (dfs(x,y))
        cout << "Yes" << endl;
    else
        cout << "No" << endl;
    return 0; 
}