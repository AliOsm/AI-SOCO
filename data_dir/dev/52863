#include<bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp> 
//#include <ext/pb_ds/tree_policy.hpp>

#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define MOD 1000000007
#define DESPACITO 1000000000000000000
#define ll long long
#define pb push_back
#define mp make_pair
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)

using namespace std;

//using namespace __gnu_pbds;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int n;
    cin >> n;
    string s;
    cin >> s;
    vector<int>ans;
    int ct = 0;
    REP(i,0,n-1)
    {
        if(s[i] == 'W')
            ct++;
    }
    int ct2 = n - ct;
    if(ct%2 && ct2%2)
    {
        cout << -1;
        return 0;
    }
    if(ct%2 == 0)
    {
        REP(i,0,n-2)
        {
            if(s[i] == 'W' && s[i+1] == 'W')
            {
                ans.pb(i+1);
                s[i] = 'B';
                s[i+1] = 'B';
            }
        }
        REP(i,0,n-1)
        {
            if(s[i] == 'W')
            {
                REP(j,i+1,n-1)
                {
                    if(s[j] == 'W')
                    {
                        ans.pb(j);
                        s[j] = 'B';
                        s[j-1] = 'B';
                        break;
                    }
                    ans.pb(j);
                    swap(s[j-1],s[j]);
                }
            }
        }
    }
    else
    {
        REP(i,0,n-2)
        {
            if(s[i] == 'B' && s[i+1] == 'B')
            {
                ans.pb(i+1);
                s[i] = 'W';
                s[i+1] = 'W';
            }
        }
        REP(i,0,n-1)
        {
            if(s[i] == 'B')
            {
                REP(j,i+1,n-1)
                {
                    if(s[j] == 'B')
                    {
                        ans.pb(j);
                        s[j] = 'W';
                        s[j-1] = 'W';
                        break;
                    }
                    ans.pb(j);
                    swap(s[j-1],s[j]);
                }
            }
        }
    }
    cout << ans.size() << "\n";
    for(auto it:ans)
        cout << it << " ";
}
