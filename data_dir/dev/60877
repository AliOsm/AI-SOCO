/*input
1
3 3
1 2 3
*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
#define PI 3.14159265
#define endl '\n'
#define debug(x) cout << #x << " = " << x << endl;
#define MAX 100001

template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(ll a, ll b) {a += b; if (a < 0) a += mod; return a;}
inline int sub(ll a, ll b) {a -= b; if (a < 0) a += mod; return a;}
inline int mul(ll a, ll b) {return (a * 1ll * b) % mod;}
inline int pwr(ll x, ll y) {
    int ans = 1 % mod;
    while (y) {
        if (y & 1) ans = mul(ans, x);
        x = mul(x, x);
        y >>= 1;
    }
    return ans;
}
inline int inv(int a) {return pwr(a, mod - 2);}

int mp[10001];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m, k;
    cin >> n >> m >> k;
    vector <int> p, s, c;
    vector <PII> vec[n + 1];
    vector <PII> vv;
    int v;
    for (int i = 0; i < n; i++) {
        cin >> v;
        p.pb(v);
    }
    for (int i = 0; i < n; i++) {
        cin >> v;
        s.pb(v);
        vec[v].pb({p[i], i + 1});
    }

    for (int i = 1; i <= n; i++) {
        sort(all(vec[i]));
    }
    set <int> st;

    for (int i = 0; i < k; i++) {
        cin >> v;
        c.pb(v);
        st.insert(v);
        mp[v] = 1;
    }
    int ans = 0;
    for (int i = 1; i <= n; i++) {
        int sz = vec[i].size();
        if (sz) {
            int x = vec[i][sz - 1].second;
            //cout << i << " " << x << endl;
            vec[i].pop_back();
            if (!mp[x]) {
                mp[x] = 0;
            }
            else {
                st.erase(x);
                ans++;
            }
            //debug(ans);
        }
        if (st.empty()) {
            break;
        }
    }
    cout << k - ans << endl;
    
    return 0;
}
