#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ll long long
//increase stack size
#pragma comment(linker, "/STACK:16777216")

ll mxm() {return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a, Args... args) { return max(a,mxm(args...)); }

ll mnm() {return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a, Args... args) { return min(a,mnm(args...)); }

template<class T> ostream& operator<<(ostream& os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<"]";
}
template<class L,class R> ostream& operator<<(ostream& os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template <typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
	const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define pll pair<ll,ll>
#define ii pair<int,int>
#define vll vector<ll>
#define vii vector<ii>
#define vi vector<int>
#define vpll vector<pll>
#define vld vector<ld>
#define vvld vector<vld>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvii vector<vii>
#define I insert
#define F first
#define S second
#define pb push_back
#define endl "\n"
#define all(x)	x.begin(),x.end()

const int mod=1e9+7;
// 128 bit: __int128
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}

struct compare{
	bool operator() (const int &a,const int &b) const{
		return a>b;
	}
};

const int N = 500 + 10;

int dp[N][3], ign[3], rep[3];

bool chk(int j, int ig, int len){
	for(int i = ig + 1; i < N; i++){
		if(dp[i][j] != dp[ig + (i - 1 - ig) % len + 1 + ig][j]){
			return 0;
		}
	}
	return 1;
}

int get_val(ll i, ll j){
	if(i <= 0)
		return 0;
	if(i < N)
		return dp[i][j];
	i -= ign[j];
	return dp[ign[j] + (i - 1) % rep[j] + 1][j];
}

int mex(set<int> s){
	for(int i = 0; ; i++)
		if(s.find(i) == s.end())
			return i;
	return 0;
}

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	int t;
	cin >> t;
	while(t--){
		memset(dp, -1, sizeof(dp));
		int n, x, y, z;
		cin >> n >> x >> y >> z;
		for(int i = 1; i < N; i++){
			for(int j = 0; j < 3; j++){
				if(j == 0){
					set<int> st{get_val(i - x, 0), get_val(i - y, 1), get_val(i - z, 2)};
					dp[i][j] = mex(st);
				}
				if(j == 1){
					set<int> st{get_val(i - x, 0), get_val(i - z, 2)};
					dp[i][j] = mex(st);
				}
				if(j == 2){
					set<int> st{get_val(i - x, 0), get_val(i - y, 1)};
					dp[i][j] = mex(st);
				}
			}
		}

		for(int j = 0; j < 3; j++)
			for(int i = 0; i <= 100; i++){
				rep[j] = 0;
				for(int j1 = 1; j1 <= 100; j1++){
					if(chk(j, i, j1)){
						ign[j] = i;
						rep[j] = j1;
						break;
					}
				}
				if(rep[j] > 0)
					break;
			}
		int mx = 0;
		vll v(n);
		for(int i = 0; i < n; i++){
			cin >> v[i], mx ^= get_val(v[i], 0);
		}
		int ans = 0;
		for(ll i = 0; i < n; i++){
			int a = mx ^ get_val(v[i], 0);
			int b = get_val(v[i] - x, 0), c = get_val(v[i] - y, 1), d = get_val(v[i] - z, 2);
			ans += ((a ^ b) == 0) + ((a ^ c) == 0) + ((a ^ d) == 0);
		}
		cout << ans << endl;
	}
}