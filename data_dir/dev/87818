#include <bits\stdc++.h>
using namespace std;
typedef long long ll;
const int mod = 1e9 + 7;
const int N = 200015;
pair<ll, ll> a[N * 26];
pair<ll, ll> b[N * 26];
int n;
const ll mod1 = 1e9 + 7;
const ll mod2 = 1e9 + 9;
const ll d1 = 29;
const ll d2 = 31;
ll p1[N], p2[N];
ll pr1[N], pr2[N];
string s;
void norm(ll & cr, ll md){
    cr %= md;
    cr += md;
    cr %= md;
}
int main(){
    cin >> n;
    p1[0] = 1;
    p2[0] = 1;
    for(int i = 1; i < N; ++i){
        p1[i] = (p1[i - 1] * d1) % mod1;
        p2[i] = (p2[i - 1] * d2) % mod2;
    }
    cin >> s;
    for(int i = 0; i < n; ++i){
        pr1[i] = ((s[i] - 'a') * p1[i]) % mod1;
        pr2[i] = ((s[i] - 'a') * p2[i]) % mod2;
    }
    for(int i = 1; i < n; ++i){
        pr1[i] += pr1[i - 1];
        norm(pr1[i], mod1);
        pr2[i] += pr2[i - 1];
        norm(p2[i], mod2);
    }
    for(int i = 0; i <= n; ++i){
        for(int j = 0; j < 26; ++j){
            pair<ll, ll> cur;
            if(i > 0){
                //ll tmp = (pr1[n - 1] - pr1[i - 1]) % mod2;
                cur.first = (pr1[i - 1] + j * p1[i] + d1 * (pr1[n - 1] - pr1[i - 1])) % mod1;
            }
            else{
                cur.first = (d1 * pr1[n - 1] + j * p1[i]) % mod1;
            }
            if(i > 0){
                cur.second = (pr2[i - 1] + j * p2[i] + d2 * (pr2[n - 1] - pr2[i - 1])) % mod2;
            }
            else{
                cur.second = (d2 * pr2[n - 1] + j * p2[i]) % mod2;
            }
            norm(cur.first, mod1);
            norm(cur.second, mod2);
            a[i * 26 + j] = cur;
        }
    }


    cin >> s;
    for(int i = 0; i < n; ++i){
        pr1[i] = ((s[i] - 'a') * p1[i]) % mod1;
        pr2[i] = ((s[i] - 'a') * p2[i]) % mod2;
    }
    for(int i = 1; i < n; ++i){
        pr1[i] += pr1[i - 1];
        norm(pr1[i], mod1);
        pr2[i] += pr2[i - 1];
        norm(p2[i], mod2);
    }
    for(int i = 0; i <= n; ++i){
        for(int j = 0; j < 26; ++j){
            pair<ll, ll> cur;
            if(i > 0){
                cur.first = (pr1[i - 1] + j * p1[i] + d1 * (pr1[n - 1] - pr1[i - 1])) % mod1;
            }
            else{
                cur.first = (d1 * pr1[n - 1] + j * p1[i]) % mod1;
            }
            if(i > 0){
                cur.second = (pr2[i - 1] + j * p2[i] + d2 * (pr2[n - 1] - pr2[i - 1])) % mod2;
            }
            else{
                cur.second = (d2 * pr2[n - 1] + j * p2[i]) % mod2;
            }
            norm(cur.first, mod1);
            norm(cur.second, mod2);
            b[i * 26 + j] = cur;
        }
    }
    sort(a, a + 26 * (n + 1));
    sort(b, b + 26 * (n + 1));
    int sz = 26 * (n + 1);
    /*set<pair<ll, ll> > s;
    for(int i = 0; i < sz; ++i){
        s.insert(a[i]);
    }
    int ans = 0;
    for(int i = 0; i < sz; ++i){
        if(s.count(b[i])){
            s.erase(b[i]);
            ans++;
        }
    }
    cout << ans << endl;*/
    /*for(int i = 0; i < sz; ++i){
        cout << a[i].first << " ";
    }
    cout << endl;
    for(int i = 0; i < sz; ++i){
        cout << b[i].first << " ";
    }
    cout << endl;*/
    int ans = 0;
    int i = 0;
    int j = 0;
    while(i < sz && j < sz){
        if(a[i] == b[j]){
            ans++;
            while(i < sz - 1 && a[i] == a[i + 1]) ++i;
            ++i;
            while(j < sz - 1 && b[j] == b[j + 1]) ++j;
            ++j;
        }
        else{
            if(a[i] > b[j]){
                ++j;
            }
            else{
                ++i;
            }
        }
    }
    cout << ans << endl;
    return 0;
}
