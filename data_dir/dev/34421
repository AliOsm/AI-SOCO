#include <cstdio>
#include <vector>
#include <set>
#include <utility>
#include <cstring>
#include <algorithm>

using namespace std;

const int N = 200'009;

int k;
vector<int> g[N];
int deg[N];
int q[N];
bool was[N];
int cur;
set<pair<int, int>> s;

void del(int ver) {
  if (was[ver] || deg[ver] >= k) {
    return;
  }
  was[ver] = true;
  q[0] = ver;
  for (int qh = 0, qt = 1; qh < qt; ++qh) {
    --cur;
    int x = q[qh];
    for (int y : g[x]) {
      pair<int, int> e = {x, y};
      if (e.first > e.second) {
        swap(e.first, e.second);
      }
      if (!was[y] && s.count(e) == 0) {
        --deg[y];
        if (deg[y] < k) {
          was[y] = true;
          q[qt++] = y;
        }
      }
      s.emplace(e);
    }
  }
}

int x[N];
int y[N];
int ans[N];

int main() {
  int n, m;
  scanf("%d %d %d", &n, &m, &k);
  for (int i = 0; i < n; ++i) {
    g[i].clear();
    deg[i] = 0;
  }
  for (int i = 0; i < m; ++i) {
    scanf("%d %d", x + i, y + i);
    --x[i];
    --y[i];
    if (x[i] > y[i]) {
      swap(x[i], y[i]);
    }
    g[x[i]].push_back(y[i]);
    g[y[i]].push_back(x[i]);
    ++deg[x[i]];
    ++deg[y[i]];
  }
  memset(was, false, sizeof was);
  cur = n;
  s.clear();
  for (int i = 0; i < n; ++i) {
    del(i);
  }
  ans[m - 1] = cur;
  for (int i = m - 2; i >= 0; --i) {
    if (s.count({x[i + 1], y[i + 1]}) == 0) {
      s.emplace(x[i + 1], y[i + 1]);
      --deg[x[i + 1]];
      --deg[y[i + 1]];
      del(x[i + 1]);
      del(y[i + 1]);
    }
    ans[i] = cur;
  }
  for (int i = 0; i < m; ++i) {
    printf("%d\n", ans[i]);
  }
}
