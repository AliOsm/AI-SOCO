#include <bits/stdc++.h>
using namespace std;
//10611
map<long long,vector<long long>> childrens;
long long dp[200500][3];

void dfs(long long curr){
    if(childrens[curr].size() == 0){
        dp[curr][2] = 1;
    }else{
        dp[curr][0] = 1;
    }
    for(int i : childrens[curr]){
        dfs(i);
        dp[curr][2] = (dp[curr][2]*(dp[i][0]+dp[i][2])%998244353 + (dp[curr][1]+dp[curr][2])*(dp[i][1]+dp[i][2])%998244353)%998244353;
        dp[curr][1] = (dp[curr][1]*(dp[i][0]+dp[i][2])%998244353 + dp[curr][0]*(dp[i][1]+dp[i][2])%998244353)%998244353;
        dp[curr][0] = dp[curr][0]*(dp[i][0]+dp[i][2])%998244353;
    }
}

int main()
{
    int n,a;
    cin >> n;
    for(int i = 2 ; i <= n ; i += 1){
        cin >> a;
        childrens[a].push_back(i);
    }
    dfs(1);
    cout << (dp[1][0] + dp[1][2])%998244353;
}