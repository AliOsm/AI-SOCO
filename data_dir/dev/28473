#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 2e5 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

int BIT[26][Max], n;

void update(int idx, int val, int cur) {
        while(idx <= n) {
                BIT[cur][idx] += val;
                idx += idx & -idx;
        }
}

int query(int idx, int cur) {
        ll ret = 0;
        while(idx > 0) {
                ret += BIT[cur][idx];
                idx -= idx & -idx;
        }
        return ret;
}

int query(int l, int r, int cur) {
        return query(r, cur) - query(l - 1, cur);
}

int main() {
#ifdef Mr_Emrul
        freopen("inputf.in", "r", stdin);
#endif /// Mr_Emrul

        ios_base::sync_with_stdio(false);
        cin.tie(0);

        string str;
        cin >> str;
        n = str.size();
        int q, l, r, ty;
        char ch;
        str = "#" + str;
        for(int i = 1; i <= n; i++) {
                update(i, 1, str[i] - 'a');
        }
        cin >> q;
        while(q--) {
                cin >> ty;
                if(ty == 1) {
                        cin >> l >> ch;
                        update(l, -1, str[l] - 'a');
                        str[l] = ch;
                        update(l, 1, str[l] - 'a');
                }
                else {
                        cin >> l >> r;
                        int ans = 0;
                        for(int i = 0; i < 26; i++) {
                                ans += (bool)(query(l, r, i));
                        }
                        cout << ans << endl;
                }
        }
        return 0;
}