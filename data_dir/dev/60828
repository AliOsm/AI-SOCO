#include <bits/stdc++.h>
using namespace std;

const int mod = 1e9 + 7;
vector<int> f;
int x;

int pow10(int power) {
    if(power == 1) return 10 % x;
    int res = pow10(power / 2);
    if(power % 2 == 0)
        return (res * res) % x;
    else
        return (res * res * 10) % x;
}

vector<int> calc(int power) {
    if(power == 1) return f;
    vector<int> res1(x, 0), res2(x, 0), half;
    int powah = pow10(power / 2);
    half = calc(power / 2);
    for(int i = 0; i < x; i++)
        for(int j = 0; j < x; j++) {
            res1[(i * powah + j) % x] += ((long long)half[i] * half[j]) % mod;
            res1[(i * powah + j) % x] %= mod;
        }
    if(power % 2 == 0)
        return res1;
    for(int i = 0; i < x; i++)
        for(int j = 0; j < x; j++) {
            res2[(i * 10 + j) % x] += ((long long)res1[i] * f[j]) % mod;
            res2[(i * 10 + j) % x] %= mod;
        }
    return res2;
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n, b, k, a;
    cin >> n >> b >> k >> x;
    for(int i = 0; i < x; i++)
        f.push_back(0);
    for(int i = 0; i < n; i++) {
        cin >> a;
        f[a % x]++;
    }
    vector<int> ff = calc(b);
    cout << ff[k];
    return 0;
}
