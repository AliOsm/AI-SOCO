#include<bits/stdc++.h>
using namespace std;
const long long moda = 134232354111111;

int n, m;
int k;

char stra[2000][2000];
int vis[2000][2000][4];

int si, sj, ti, tj;

int di[] = { -1, 1, 0, 0 };
int dj[] = { 0, 0, -1, 1 };
struct pii {
	int i, j;
	int dir;
	int step;
};

int ifok(int i, int j) {
	if (i < 0)
		return 0;
	if (i >= n)
		return 0;
	if (j < 0)
		return 0;
	if (j >= m)
		return 0;
	if (stra[i][j] == '*')
		return 0;
	return 1;
}

deque<pii> deqa;

int bfs() {
	deqa.push_back( { si, sj, 0, 0 });
	deqa.push_back( { si, sj, 1, 0 });
	deqa.push_back( { si, sj, 2, 0 });
	deqa.push_back( { si, sj, 3, 0 });
	while (deqa.size()) {
		pii tp = deqa.front();
		deqa.pop_front();

		//cout << tp.i << " " << tp.j << " " << tp.dir << " " << tp.step << endl;

		if (vis[tp.i][tp.j][tp.dir] != -1) {
			continue;
		}
		vis[tp.i][tp.j][tp.dir] = tp.step;

		if (tp.i == ti && tp.j == tj) {
			return 1;
		}
		if (tp.step < 2) {
			for (int i = 0; i < 4; i++) {
				if (i != tp.dir) {
					deqa.push_back( { tp.i, tp.j, i, tp.step + 1 });
				}
			}
		}
		tp.i += di[tp.dir];
		tp.j += dj[tp.dir];
		if (ifok(tp.i, tp.j)) {
			deqa.push_back(tp);
		}
	}
	return 0;
}

int main() {
	memset(vis, -1, sizeof(vis));

	scanf("%d", &n);
	scanf("%d", &m);

	for (int i = 0; i < n; i++) {
		scanf("%s", stra[i]);
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (stra[i][j] == 'S') {
				si = i;
				sj = j;
			} else if (stra[i][j] == 'T') {
				ti = i;
				tj = j;
			}
		}
	}

	if (bfs()) {
		puts("YES");
	} else {
		puts("NO");
	}

	return 0;
}
