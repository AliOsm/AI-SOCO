#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define po pop_back
#define pb push_back
#define mk make_pair
#define lw lower_bound
#define up upper_bound
#define ff first
#define ss second
#define boost ios_base::sync_with_stdio(); cin.tie(0); cout.tie(0);
#define MOD 1000000007
#define MAX 1e18 
#define MIN -1e18
#define rep(i,a,b) for(ll i=a;i<=b;i++)
#define per(i,a,b) for(ll i=a;i>=b;i--)
#define con continue
#define pl pair<ll,ll>
#define binary_search while(l<=r)
ll a,b,c[1234567],dp[1005][1005],d[1234567],c1[1234][1234],e,n,j,i,l,r,x,y,k,ans,sz;
bool used[52345670];
ll T;
char ch[1234][1234];
vector<ll> v[1234567],v1,vv;
string s,s1[1234567];
priority_queue<ll> pq;
ll sum;
map<ll,ll> ma,m;
ll ar[1234567];
ll mod=998244353;
ll fac[1234567];
ll power(ll x,ll y){
    if(y==0)return 1;
    if(y==1)return x;
    ll res=power(x,y/2)*power(x,y/2)%MOD;
    if(y%2==1)res=res*x%MOD;
    return res;
}
int main(){
    cin>>s;
    rep(i,0,s.size()-1){
        if(s[i]=='0'||s[i]=='5'){
            ans=(ans+power(2,i))%MOD;
        }
    }
    cin>>k;
    n=s.size();
    //cout<<ans<<"\n";
    ans=(ans*((power(2,k*n)-1)%MOD*power(power(2,n)-1,MOD-2)%MOD)%MOD)%MOD;
    cout<<ans;
}