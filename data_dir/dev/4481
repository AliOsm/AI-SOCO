#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PI;
struct Status{
	int x,k,m,bit;
	Status(int _x=0,int _k=0,int _m=0,int _bit=0):x(_x),k(_k),m(_m),bit(_bit){}
	bool operator<(const Status& rhs) const{
		return k<rhs.k;
	}
} x[110];
ll dp[2][1<<20];
int main(){
	int n,m,b;
	scanf("%d%d%d",&n,&m,&b);
	int limit=1<<m;
	for(int i=1;i<=n;i++){
		scanf("%d%d%d",&x[i].x,&x[i].k,&x[i].m);
		int bit=0,item;
		for(int j=0;j<x[i].m;j++){
			scanf("%d",&item);
			bit|=(1<<(item-1));
		}
		x[i].bit=bit;
	}
	sort(x+1,x+1+n);
	ll ans=-1;
	for(int s=1;s<limit;s++)
		dp[0][s]=-1;
	for(int i=1;i<=n;i++){
		int cur=i&1,pre=~i&1;
		memcpy(dp[cur],dp[pre],sizeof dp[pre]);
		for(int s=0;s<limit;s++)
			if(dp[pre][s]!=-1 && (dp[cur][s|x[i].bit]==-1 || dp[pre][s]+x[i].x<dp[cur][s|x[i].bit]))
				dp[cur][s|x[i].bit]=dp[pre][s]+x[i].x;
		if(dp[cur][limit-1]!=-1 && (ans==-1 || ans>dp[cur][limit-1]+(ll)b*x[i].k))
			ans=dp[cur][limit-1]+(ll)b*x[i].k;
	}
	printf("%lld\n",ans);
	return 0;
}