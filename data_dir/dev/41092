#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int n,m,k;
vector<pair<pnt, pair<LL,LL> > >a;
LL dp[60][60][60][110];
char how[60][60][60][110];
char was[60][60][60][110];
LL r(int p1, int p2, int last, int what)
{
	if (p1==n)
		return 0;
	if ((p2==m) && (p1!=n))
		return -1;
	if (was[p1][p2][last][what])
		return dp[p1][p2][last][what];
	was[p1][p2][last][what]=1;
	LL res=r(p1,p2+1,last,what);
	if (a[p2].first.first>a[last].first.first)
	{
		LL was=a[last].second.first+what;
		if ((was+k>=a[p2].second.first) && (was+k<=a[p2].second.second))
		{
			LL res1=r(p1+1,p2+1,p2,was+k-a[p2].second.first);
			if ((res1!=-1) && (res1+was+k>res))
			{
				res=res1+was+k;
				how[p1][p2][last][what]=1;
			}
		}
		if ((was*k>=a[p2].second.first) && (was*k<=a[p2].second.second))
		{
			LL res1=r(p1+1,p2+1,p2,was*k-a[p2].second.first);
			if ((res1!=-1) && (res1+was*k>res))
			{
				res=res1+was*k;
				how[p1][p2][last][what]=2;
			}
		}
	}
	return dp[p1][p2][last][what]=res;
}
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif
	MEMS(dp,-1);
	scanf("%d%d%d",&n,&m,&k);
	a.resize(m);
	FOR(i,0,m)
	{
		cin>>a[i].second.first>>a[i].second.second>>a[i].first.first;
		a[i].first.second=i;
	}
	sort(a.begin(),a.end());
	LL res=-1;
	int par1,par2,par3,par4;
	FOR(i,0,a.size())
		FOR(in,0,a[i].second.second-a[i].second.first+1)
		{
			LL k=r(1,i+1,i,in);
			if (k!=-1)
			{
				if (a[i].second.first+in+k>res)
				{
					par1=1;
					par2=i+1;
					par3=i;
					par4=in;
					res=max(res,a[i].second.first+in+k);
				}
			}
		}
	if (res==-1)
		cout<<"NO"<<endl;
	else
	{
		cout<<"YES"<<endl;
		cout<<a[par3].first.second+1<<" "<<a[par3].second.first+par4<<endl;
		while ((par1<n) && (par2<m))
		{
			if (how[par1][par2][par3][par4]==0)
			{
				par2++;
			}
			else
				if (how[par1][par2][par3][par4]==1)
				{
					LL q=a[par3].second.first+par4+k;
					cout<<a[par2].first.second+1<<" "<<q<<endl;
					par1++;
					par3=par2;
					par2++;
					par4=q-a[par2-1].second.first;
				}
				else
				{
					LL q=(a[par3].second.first+par4)*k;
					cout<<a[par2].first.second+1<<" "<<q<<endl;
					par1++;
					par3=par2;
					par2++;
					par4=q-a[par2-1].second.first;
				}
		}
	}
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}