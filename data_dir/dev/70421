#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <functional> 
#include <unordered_map>
#define mp make_pair
#define pb push_back
using namespace std;
#define ll long long
ll mod = 1000000007;
//#define ld long double
const double sn = 1e-6;
int n,m;
char arr[20][110];
int dp[20][5];
int top;
pair<int, int> fl[20];
int c ;
int solve(int ro, int st) {
	int sum = (fl[ro].first!=0?(st == 0 ? fl[ro].second : m + 1 - fl[ro].first):0);
	if (top == ro)
		return sum;
	if (dp[ro][st] != -1)
		return dp[ro][st];
	int dev1 = 0, dev2 = 0;
	if (st == 0) {
		dev1 = (fl[ro].second != 0 ? fl[ro].second : 0);
		dev2 = (fl[ro].second!=0? m+1-fl[ro].second :m+1);
	}
	else {
		dev1 = (fl[ro].first != 0 ?fl[ro].first:m+1);
		dev2 = (fl[ro].first!=0?m+1-fl[ro].first:0);
	}
	return  1 +sum + min(dev1+solve(ro-1,0),dev2+solve(ro-1,1));
}
int main() {
	scanf("%d%d", &n, &m);
	top = n;
	for (int i = 0; i < n; i++)
		scanf("%s", arr[i]);
	for (int i = 0; i < n; i++) {
		bool f = false;
		for (int j = 0; j < m + 2; j++) {
			if (arr[i][j] == '1') {
				f = true;
				fl[i].second = j;
				if (fl[i].first == 0) {
					fl[i].first = j;
				}
			}
		}
		if (f && top == n) {
			top = i;
		}
	}
	for (int i = 0; i < 20; i++)
		for (int j = 0; j < 5; j++)
			dp[i][j] = -1;
	printf("%d\n", (top==n?0:solve(n-1, 0)));
	return 0;
}