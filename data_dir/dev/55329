#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

int N;
int type[100010],x[100010],len[100010],repeat[100010];
int init[100010];
ll dp[100010];

void pre(void){
    int i,j,k;
    
    dp[0] = 0;
    REP(i,N){
        if(type[i] == 1){
            dp[i+1] = dp[i] + 1;
        } else {
            dp[i+1] = dp[i] + (ll)len[i]* (ll)repeat[i];
        }
    }
    
    int n = 0;
    REP(i,N){
        if(type[i] == 1){
            init[n] = x[i];
            n++;
            if(n == 100005) return;
        } else {
            REP(j,repeat[i]) REP(k,len[i]){
                init[n] = init[k];
                n++;
                if(n == 100005) return;
            }
        }
    }
}

int group = 0;

int query(ll pos){
    int i;
    
    pos--;
    while(pos >= dp[group+1]) group++;
    
    if(type[group] == 1) return x[group];
    
    ll tmp = (pos - dp[group]) % len[group];
    return init[(int)tmp];
}

int main(void){
    int Q,i;
    
    cin >> N;
    REP(i,N){
        scanf("%d", &type[i]);
        if(type[i] == 1){
            scanf("%d", &x[i]);
        } else {
            scanf("%d%d", &len[i], &repeat[i]);
        }
    }
    
    pre();
    
    cin >> Q;
    REP(i,Q){
        ll pos;
        scanf("%I64d", &pos);
        ll ans = query(pos);
        printf("%I64d\n", ans);
        if(i == Q-1) printf("\n"); else printf(" ");
    }
    
    return 0;
}
