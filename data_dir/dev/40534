#include <bits/stdc++.h>

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//#pragma GCC optimize("Ofast")
//1.0 * clock() / CLOCKS_PER_SEC

#define fi first
#define se second
#define ll long long
#define dl double long

using namespace std;

const ll NN = 1e10 + 7;
const int N = 2e3 + 7;
const int M = 6;
const ll mod = 1e9 + 7;
const ll inf = 1e18 + 7;
const dl rf = 1e-14;
const int B = sqrt(N);

int n,k;
int d[N][N];
vector < int > v[N];

void solve1()
{
    cin >> n >> k;
    for( int i = 1; i <= n; i++ ){
        for( int j = i; j <= n; j += i ){
            v[j].push_back(i);
        }
        d[1][i] = 1;
    }
    for( int i = 2; i <= k; i++ ){
        for( int j = 1; j <= n; j++ ){
            for( auto x : v[j] ){
                d[i][j] = ( d[i][j] + d[i - 1][x] ) % mod;
            }
        }
    }
    int ans = 0;
    for( int i = 1; i <= n; i++ ){
        ans = ( ans + d[k][i] ) % mod;
    }
    cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
