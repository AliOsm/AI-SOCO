/**
  *    author:  NEZZ
 **/
 #include <bits/stdc++.h>
 #define rep(i,a,b) for (int i=a;i<b;i++)
 #define rep2(i,a,b) for (int i=a;i>=b;i--)
 #define mod 1000000007
 #define INF  0x3f3f3f3f3f3f3f3f
 #define f first
 #define s second
 #define endl '\n'
 #define ll long long
 #define ii pair <int,int>
 #define pll pair <ll,ll>
 #define vi vector <int>
 #define vl vector <ll>
 #define vvi vector < vi >
 #define vii vector < ii >
 #define vvii vector < vii>
 #define vll vector < ll >
 #define vb  vector <bool>
 #define pb push_back
 #define mk make_pair
 #define sz(a) (int)a.size()
 #define all(a) a.begin(),a.end()
 #define rall(a) a.rbegin(),a.rend()
 #define debug(x) cerr << #x << " is " << x << endl;
 #define input freopen("input","r",stdin)
 #define output freopen("output","w",stdout)
 #define fastIO ios_base::sync_with_stdio (0),cin.tie(0)

 using namespace std;
 void affiche (int t[],int n){ rep (i,0,n) cout<<t[i]<<" ";cout<<endl;}
 void afficheV (vi t){rep (i,0,sz(t))cout<<t[i]<<" ";cout<<endl;}

 int const MAXN=1e5+7;
int n,val,sum[200007],k[200007];
multiset<pair<int,int>> m[200007];
multiset<pair<int,pair<int,int>>> curentsum ;

int main(){
    scanf("%d",&n);
    for(int i = 0; i<n; i++){
           scanf("%d",k+i);
    rep(j,0,k[i]){
      cin >> val;
      m[i].insert({val, j});
      sum[i]+=val;
    }
    for(auto e: m[i]){
      curentsum .insert({sum[i]-e.first, {i,e.second}});
    }
  }
  rep(i,0,n){
    for(auto e: m[i]){
      int somme2 = sum[i]-e.first;
      auto tmp = pair<int,pair<int,int>>(somme2, pair<int,int>(i, e.second));
      curentsum .erase(tmp);
      auto ind = curentsum .lower_bound({somme2, {i+1,-1}});
      curentsum .insert(tmp);
      if(ind==curentsum .end()) continue;
      if((*ind).first!=somme2) continue;
      return 0*printf("YES\n%d %d\n%d %d", i+1, e.second+1, (*ind).second.first+1, (*ind).second.second+1);
    }
  }
  printf("NO\n");
}
