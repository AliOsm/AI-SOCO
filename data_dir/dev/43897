#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define F first
#define S second
#define mp make_pair
#define pii pair<int,int>

const int mx = 100050;
vector<int> vec[mx];
int dp[mx][2];

bool func(int idx , int pl)
{
    if(dp[idx][pl] != -1)
    {
        return dp[idx][pl];
    }
    int i , j , k , l = vec[idx].size();
    if(l == 0)
    {

        dp[idx][pl] = 0;
        return dp[idx][pl];
    }

    bool ret = 0;

    for(i = 0 ; i < l ; i++)
    {
        k = vec[idx][i];
        ret = ret | (!func(k,pl^1));
    }
    dp[idx][pl] = ret;

    return dp[idx][pl];

}

int main()
{
    int n;
    scanf("%d",&n);

    int i , j , k , p ;


    int arr[n+5];

    for(i = 1 ; i <= n ; i++)
    {
        scanf("%d",arr+i);
    }


    for(i = 1; i <= n ; i++)
    {
        p = arr[i];

        for(j = i+p ; j <= n ; j+= p)
        {
            if(arr[j] > arr[i])
            {
                vec[i].push_back(j);
            }
        }

        for(j = i-p ; j >= 1 ; j -= p)
        {
            if(arr[j] > arr[i])
            {
                vec[i].push_back(j);
            }
        }

    }


    memset(dp,-1,sizeof(dp));

    for(i = 1 ; i <= n ; i++)
    {
        if(dp[i][0] == -1)
        {
            dp[i][0] = func(i,0);
        }
        if(dp[i][1] == -1)
        {
            dp[i][1] = func(i,1);
        }
    }

    for(i = 1 ; i <= n ; i++)
    {
        if(dp[i][0] == 0) printf("B");
        else printf("A");
    }
    printf("\n");



    return 0;
}

