#include <bits/stdc++.h>
#include <map>
using namespace std;
#define ll long long
#define se second
#define fi first
#define mk(a, b) make_pair(a, b)
#define pb push_back
#define vi vector<int>
#define vvi vector<vector<int>>
#define pii pair<int, int>
#define vvpi vector<vector<pii>>
#define pli pair<ll, int>
#define INF 1 << 29
#define MOD 1000000007
#define MAX (int)1e5 + 5
#define FI freopen("i.txt", "r", stdin);
#define FO freopen("o.txt", "w", stdout);
#define edge pair<int, pair<int, int>>
/*int dx[] = {1, 0, -1, 0};
int dy[] = {0, 1, 0, -1}; // 4 Direction*/
/*int dx[]={1,1,0,-1,-1,-1,0,1};
int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction*/
/* int dx[] = { 2,1,-1,-2,-2,-1,1,2 };
int dy[] = { 1,2,2,1,-1,-2,-2,-1};//Knight Direction
*/
int n, m;
ll k;
vector<int>v2;
ll dp[(int)1e7 +5];
int mid;

bool ok(int x) {
	ll total = 0;
	memset(dp, 0, sizeof dp);
	for (int i = 0; i < n; i++) {
		dp[v2[i]]++;
	}
	
	
	for (int i = 1e7 + 2; i >=x; i--) {
		if (i / 2 >= x) {
			dp[i / 2] += dp[i];
			dp[(i + 1) / 2] += dp[i];
			dp[i] = 0;
		}
		else
			if(dp[i])
			total += dp[i];
	}
	if (total >= k)return 1;
	return 0;
}
int main() {
	scanf("%d %lld", &n, &k);
	v2.resize(n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &v2[i]);
		//v2[i] = 2097152;
	}
	int l = 0, r = 1e7 + 2, ans = 0;;
	while (l < r) {
		mid = (l + r) / 2;
		if (ok(mid)) {
			l = mid + 1;
			ans = mid;
		}
		else {
			r = mid - 1;
		}
	}
	if (ans == 0) {
		ans = -1;
		if (ok(1))ans = 1;

		cout << ans << endl;
	}
	else {
		while (ok(ans))ans++;
		ans--;
		cout << ans << endl;
	}
	// system("pause");
}