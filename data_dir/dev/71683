#include "assert.h"
#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <vector>

#if LOCAL
	#define DO_NOT_SEND
#endif

typedef long long LL;

int IntMaxVal = (int) 1e20;
int IntMinVal = (int) -1e20;
LL LongMaxVal = (LL) 1e20;
LL LongMinVal = (LL) -1e20;

#define FOR(i, a, b) for(int i = a; i < b ; ++i)
#define FORD(i, a, b) for(int i = a; i >= b; --i)

template<typename T> inline void minimize(T &a, T b) { a = std::min(a, b); }
template<typename T> inline void maximize(T &a, T b) { a = std::max(a, b); }

#define all(v) v.begin(),v.end()

using namespace std;

#define endl '\n'
template<typename T> struct argument_type;
template<typename T, typename U> struct argument_type<T(U)> { typedef U type; };
#define next(t, i) argument_type<void(t)>::type i; cin >> i;
#define nextVector(t, v, size) vector< argument_type<void(t)>::type > v(size); { for (int i = 0 ; i < size ; i++) cin >> v[i]; }

#define range(name, start, count) vector<int> name(count); { for (int i = 0 ; i < count ; i++) name[i] = i + start; }

template <typename T1, typename T2> istream& operator >>(istream& is, pair<T1, T2>& s) { is >> s.first >> s.second; return is; }
template <typename T> ostream& operator << (ostream& os, const vector<T> &v) { for (int i = 0 ; i < v.size() ; i++) os << v[i] << ' '; os << endl; return os; }
template <typename T1, typename T2> ostream& operator <<(ostream& s, pair<T1, T2>& t) { s << t.first << ' ' << t.second; return s; }
template <typename T> vector<T> readVector(int n) { vector<T> res(n); for (int i = 0 ; i < n ; i++) cin >> res[i]; return res; }

LL gcd(LL a, LL b) {
	if (b == 0) return a;
	return gcd(b, a % b);
}

int main() {
	srand (time(NULL));
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	
	next(int, n);
	next(int, m);
	
	vector<vector<LL>> w(n);
	FOR (i, 0, n) w[i] = readVector<LL>(m);
	
	LL k_gcd = 0;
	LL mn = 0;
	FOR (i, 0, n) FOR (j, 0, m) maximize(mn, w[i][j] + 1);
	
	FOR (i, 0, n - 1) FOR (j, 0, m - 1) k_gcd = gcd(k_gcd, abs(w[i + 1][j + 1] + w[i][j] - w[i][j + 1] - w[i + 1][j]));
	
	if (k_gcd != 0 && k_gcd < mn) {
		cout << "NO";
		return 0;
	}
		
	LL k = max(k_gcd, mn);
	
	vector<LL> a(n);
	FOR (i, 0, n) a[i] = (w[i][0] - w[0][0] + k) % k;
	vector<LL> b(m);
	FOR (i, 0, m) b[i] = (w[0][i] - a[0] + k) % k;
	
	FOR (i, 0, n) FOR (j, 0, m) {
		assert(w[i][j] == (a[i] + b[j]) % k);
	}
	
	cout << "YES" << endl << k << endl << a << b;
}