#include "bits/stdc++.h"
using namespace std;

using ll = long long;
using ii = pair<int, int>;

template<class C> void amin(C &a4, C b4) {
	a4 = min(a4, b4);
}
template<class C> void amax(C &a4, C b4) {
	a4 = max(a4, b4);
}

template<class T> ostream &operator<<(ostream& os, vector<T> V) {
	os << "[";
	for (auto vv : V)
		os << vv << ",";
	return os << "]";
}
template<class L, class R> ostream &operator<<(ostream &os, pair<L, R> P) {
	return os << "(" << P.first << "," << P.second << ")";
}
const int N = 1e6 + 5;
int dp[N][2], n;
char need;
string str;
int solve(int idx, bool change, int cur){
	if(cur < 0)return 0;
	if(idx == n)
		return change && (cur == 0);
	int &ret = dp[idx][change];
	if(~ret)
		return ret;
	ret = 0;
	ret += solve(idx+1,change,cur + (str[idx] == '(') - (str[idx] == ')'));
	if(str[idx] == need && !change){
		ret += solve(idx+1, 1,cur - (str[idx] == '(') + (str[idx] == ')'));
	}
	return ret;
}
int main() {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif


	cin >> n >> str;

	if(abs(count(str.begin(),str.end(), '(') - count(str.begin(),str.end(), ')')) != 2){
		cout << "0\n";
		return 0;
	}

	memset(dp,-1,sizeof dp);
	if(count(str.begin(), str.end(), ')') > count(str.begin(),str.end(),'(')){
		need = ')';
	}	else need = '(';
	cout << solve(0,0,0) << '\n';


	return 0;
}
