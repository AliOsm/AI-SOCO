#include <bits/stdc++.h>
using namespace std;
using ll = long long;

const int maxn = 1e6+6;
int n;

int getVal(int idx) {
    cout << "? " << idx << endl;
    int ai; cin >> ai;
    return ai;
}

int existsGreater(int x) {
    cout << "> " << x << endl;
    int r; cin >> r;
    return r;
}

int main()
{
    cin >> n;
    //binary search for max
    int QUERIES = 60;
    int lo = -1, hi = 1e9+1;
    while (lo + 1 < hi) {
        int m = (lo+hi)>>1;
        int i = existsGreater(m);
        if (i == 1) lo = m;
        else hi = m;
        QUERIES--;
    }
    int mx = hi;
    random_device rd;
    mt19937 g(rd());
    vector<int> v;
    for (int i = 1; i <= n; i++) v.push_back(i);
    shuffle(v.begin(),v.end(),g);
    vector<int> pts;
    while (QUERIES-- && !v.empty()) {
        int idx = v.back();
        //cout << idx << ' ';
        v.pop_back();
        int x = getVal(idx);
        pts.push_back(x);
    }
    sort(pts.begin(),pts.end());
    int gc = 0;
    for (int i = 1; i < pts.size(); i++) {
        gc = __gcd(gc,pts[i]-pts[i-1]);
    }
    int d = gc;
    int mn = mx - (n-1) * d;
    cout << "! " << mn << ' ' << d << endl;
}

