#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
int m, n, pr[20][1<<21], mem[1<<20][20];
int cnt1[22][22], cnt2[22];
char s[100010];
int dp(int x, int msk){
    if(x==m){
        return 0;
    }
    if(mem[msk][x]!=-1e9)
        return mem[msk][x];
    int res=1e9;
    for(int i=0; i<m; ++i){
        if(msk&(1<<i))
            continue;
        res=min(res, x*pr[i][msk]-x*(cnt2[i]-pr[i][msk])+dp(x+1, msk|(1<<i)));
    }
    mem[msk][x]=res;
//    cout<<msk<<" "<<x<<" "<<res<<endl;
    return res;
}
void pre(){
    int tmp;
    for(int i=0; i<n; ++i){
        if(i>0){
            if(s[i-1]!=s[i]){
                cnt1[s[i]-'a'][s[i-1]-'a']++;
                cnt2[s[i]-'a']++;
            }
        }
    }
    for(int i=n-1; i>=0; --i){
        if(i<n-1){
            if(s[i+1]!=s[i]){
                cnt2[s[i]-'a']++;
                cnt1[s[i]-'a'][s[i+1]-'a']++;
            }
        }
    }
    map<int, int> l;
    for(int i=0; i<m; ++i){
        l[1<<i]=i;
    }
    for(int i=0; i<m; ++i){
        pr[i][0]=0;
//        pr1[i][0]=0;
//        for(int j=0; j<m; ++j){
//            pr1[i][0]+=cnt2[i][j];
//        }
        for(int j=1; j<(1<<m); ++j){
            tmp=j^(j&(j-1));
//            cout<<tmp<<endl;
            pr[i][j]=pr[i][j-tmp]+cnt1[i][l[tmp]];
//            pr1[i][j]=pr1[i][j-tmp]-cnt2[i][l[tmp]];
//            cout<<i<<" "<<j<<" "<<pr[i][j]<<endl;
        }
    }
}
int main(){
    while(cin>>n>>m){
        ll ans=0;
        scanf("%s",s);
        for(int i=0; i<(1<<m); ++i){
            for(int j=0; j<m; ++j){
                mem[i][j]=-1e9;
            }
        }
        pre();
        ans=dp(0, 0);
        cout<<ans<<endl;
    }
  return 0;
}


