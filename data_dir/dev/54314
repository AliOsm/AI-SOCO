#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>

#define ll long long
#define ld long double
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const ll  Inf = 2 * 1e9;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("hard.in", "r", stdin);
	//freopen("hard.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n, m;
	cin >> n >> m;
	vector<string> a(n);
	bool fl = 0;
	forn(i, 0, n) {
		cin >> a[i];
	}
	if (n > 2) forn(i, 0, n - 1) if (a[i][0] != a[i + 1][0]) fl = 1;
	if (fl) {
		if (n % 3 != 0) {
			cout << "NO";
			return 0;
		}
		int h = n / 3;
		set<char> q;
		forn(k, 0, 3) {
			int qq = k*h;
			q.insert(a[qq][0]);
			forn(i, 0, h) {
				forn(j, 0, m) {
					if (a[qq+i][j] != a[qq][0]) {
						cout << "NO";
						return 0;
					}
				}
			}
		}
		if (q.size() < 3) {
			cout << "NO";
			return 0;
		}
	}
	else {
		if (m % 3 != 0) {
			cout << "NO";
			return 0;
		}
		int h = m / 3;
		set<char> q;
		forn(k, 0, 3) {
			int qq = k*h;
			q.insert(a[0][qq]);
			forn(i, 0, h) {
				forn(j, 0, n) {
					if (a[j][qq+i] != a[0][qq]) {
						cout << "NO";
						return 0;
					}
				}
			}
		}
		if (q.size() < 3) {
			cout << "NO";
			return 0;
		}
	}
	cout << "YES";
	return 0;
}