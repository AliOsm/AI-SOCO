#include<bits/stdc++.h>
using namespace std;
#define int long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
int const M=2e5+10;
int par[M][30];
int h[M],dp[M],dp2[M],ans[M];
vector<int>bad[M],edg[M],adj[M];
void dfs(int v,int l)
{
	h[v]=h[l]+1;
	par[v][0]=l;
	for(int i=1;i<=20;i++)
		par[v][i]=par[par[v][i-1]][i-1];
	for(int i=0;i<adj[v].size();i++)
	{
		int u=adj[v][i];
		if(u==l)
			continue;
		dfs(u,v);
	}
}
void lca(int v,int u)
{
	if(h[v]<h[u])
		swap(v,u);
	int p1=v,p2=u;
	for(int i=20;i>=0;i--)
	{
		if(h[v]-(1<<i)>=h[u])
			v=par[v][i];
	}
	if(v==u)
	{
		if(p1!=v)
			bad[p1].pb(v);
		return;
	}
	for(int i=20;i>=0;i--)
	{
		if(par[v][i]!=par[u][i])
			v=par[v][i],u=par[u][i];
	}
	v=par[v][0];
	bad[p1].pb(v);	
	bad[p2].pb(v);
}
int dfs2(int v,int l)
{
	int cnt=0;
	for(int i=0;i<adj[v].size();i++)
	{
		int u=adj[v][i];
		if(u==l)
			continue;
		dp[v]=0;
		int tmp=dfs2(u,v);
		cnt+=tmp;
		dp2[v]+=dp2[u];
		ans[edg[v][i]]=tmp+dp2[u];
	//	cout<<v<<" "<<tmp<<endl;
	}
	for(int i=0;i<bad[v].size();i++)
	{
		dp2[bad[v][i]]--;
	}
	return cnt+bad[v].size();
}
main()
{
	int n,k,a,b;
	cin>>n;
	for(int i=1;i<=n-1;i++)
		cin>>a>>b,adj[a].pb(b),adj[b].pb(a),edg[a].pb(i),edg[b].pb(i);
	dfs(1,0);
	cin>>k;
	for(int i=1;i<=k;i++)
	{
		cin>>a>>b;
		lca(a,b);
	}
	dfs2(1,0);
	for(int i=1;i<=n-1;i++)
		cout<<ans[i]<<" ";
}
