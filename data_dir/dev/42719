/* Author haleyk10198 */
/* �@��:  haleyk10198 */
#include <bits/stdc++.h>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))

using namespace std;

string itos(int x){
	stringstream ss;
	ss << x;
	return ss.str();
}

int n, q;
ll ps[200010];

pii a[200010];
vector<int> v[200010], v2;

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin >> n;
	v[0].push_back(0);
	for(int i = 1; i <= n; i++){
		cin >> a[i].first >> a[i].second;
		v[a[i].first].push_back(i);
		ps[i+1] = ps[i] + a[i].first;
	}
	cin >> q;
	for(int i = 0, k; i < q; i++){
		v2.clear();
		cin >> k;
		for(int i = 0, x; i < k; i++){
			cin >> x;
			v2.push_back(x);
		}
		{
			int l, r, res;
			ll t1;
			l = -1, r = res = n;
			while(l+1 < r){
				int mid = (l+r+1) / 2;
				t1 = ps[n+1] - ps[mid];
				bool used = false, f = false;
				int cnt = 0;
				for(auto x: v2){
					if(x == a[mid].first)
						used = true;
					int t = (v[x].size() - (lower_bound(v[x].begin(), v[x].end(), mid) - v[x].begin()));
					t1 -= 1LL * t * x;
					cnt += t;
				}
				if(not used)
					cnt += (v[a[mid].first].size() - (lower_bound(v[a[mid].first].begin(), v[a[mid].first].end(), mid) - v[a[mid].first].begin()));
				else if(mid && (n - mid + 1 - cnt)){
					t1 /= (n - mid + 1 - cnt);
					bool chk = true;
					for(auto x: v2)
						if(t1 == x)
							chk = false;
					if(chk){
						cnt += (v[t1].size() - (lower_bound(v[t1].begin(), v[t1].end(), mid) - v[t1].begin()));
						f = true;
					}
				}
				if(cnt == n - mid + 1){
					r = mid;
					if(not used)
						res = r;
					else if(f)
						res = *lower_bound(v[t1].begin(), v[t1].end(), mid);
				}
				else
					l = mid;
			}
			cout << a[res].first << ' ' << a[res].second << endl;
		}
	}
	return 0;
}

