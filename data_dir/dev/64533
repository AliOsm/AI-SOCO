#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                              \
    for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
  cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N=510;
int dp[N][N],n,x[N];
vector<ll> resp;
int main()
{
  sc(n);
  for(int i=1;i<=n;i++) for(int j=1;j<=n;j++) sc(dp[i][j]);
  for(int i=1;i<=n;i++) sc(x[i]);
  for(int k=n;k>=1;k--){
    for(int i=1;i<=n;i++){
      for(int j=1;j<=n;j++){
        dp[x[i]][x[j]]=min(dp[x[i]][x[j]],dp[x[i]][x[k]]+dp[x[k]][x[j]]);
      }
    }
    ll r=0;
    for(int i=n;i>=k;i--) for(int j=n;j>=k;j--) if(x[i]!=x[j]) r+=dp[x[i]][x[j]];
    resp.pb(r);
  }
  reverse(resp.begin(),resp.end());
  for(int i=0;i<resp.size();i++) cout<<resp[i]<<" ";
  cout<<endl;
  return 0;
}
