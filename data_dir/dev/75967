#include <bits/stdc++.h>

#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define sz size()
#define f first
#define s second
#define LL long long

using namespace std;

const int N = 2e5 + 7;
const int M = 2e5;
const int mod = 1e9 + 7;

LL bp(LL a, LL n) {
  if(n == 1) return a;
  if(n == 0) return 1;
  LL res;
  if(n & 1) {
     res = (bp(a, n - 1) * a) % mod;
  }
  else {
     res = bp(a, n / 2);
    res = (res * res) % mod;
  }
  return res;
}

pair < int, int > p[N];
int u[N], k;
LL ans = 1, l[N], r[N];

int main() { 
  ios_base::sync_with_stdio(0), cin.tie(0);
  #ifndef ONLINE_JUDGE
    freopen("in", "r", stdin);
    freopen("out", "w", stdout);
  #endif
    int n;
    cin >> n;
    for(int i = 1; i <= n; ++i) {
      int x;
      cin >> x;
      u[x]++;
    }
    p[++k] = mp(1, 0);
    for(int i = 1; i <= M; ++i) {
      if(u[i] > 0) {
        p[++k] = mp(i, u[i]);
      }
    }
    l[0] = 1, r[k + 1] = 1;
    for(int i = 1; i <= k; ++i)
      l[i] = (l[i-1] * (p[i].s + 1)) % (mod - 1);
    for(int i = k; i >= 1; --i)
      r[i] = (r[i+1] * (p[i].s + 1)) % (mod - 1);
    for(int i = 1; i <= k; ++i) {
      LL cur = 1;
      for(int j = 1; j <= p[i].s; ++j) {
        cur = (cur * p[i].f) % mod;
        ans = (ans * bp(cur, (l[i-1] * r[i+1]) % (mod - 1))) % mod;
      }
    }
    cout << ans;

  return 0;
}
