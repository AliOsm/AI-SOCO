// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 100 + 77 , L = 17;
int n , a[N] , T[N] , dp[N][1 << L] , Par[N][1 << L] , A = N * N , id = 0;
int P[L] = {2 , 3 , 5 , 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 , 41 , 43 , 47 , 53 , 59};
vector < int > V;
int main(){
   ios::sync_with_stdio(0);cin.tie(0);
   for(int i = 2;i < 60;++ i)
      for(int j = 0;j < L;++ j)
         if(i % P[j] == 0)
            T[i] |= (1 << j);
   cin >> n;
   for(int i = 1;i <= n;++ i){
      cin >> a[i];
      for(int msk = 0;msk < (1 << L);++ msk){
         dp[i][msk] = abs(a[i] - 1) + dp[i - 1][msk];
         Par[i][msk] = 1;
         for(int j = 2;j < 60;++ j)
            if((T[j] & msk) == T[j] && dp[i][msk] > dp[i - 1][msk ^ T[j]] + abs(j - a[i]))
               dp[i][msk] = dp[i - 1][msk ^ T[j]] + abs(j - a[i]) , Par[i][msk] = j;
      }
   }
   for(int msk = 0;msk < (1 << L);++ msk)
      if(A > dp[n][msk])
         A = dp[n][msk] , id = msk;

   for(int i = n;i > 0;-- i)
      V.push_back(Par[i][id]) , id = id ^ T[Par[i][id]];
   reverse(V.begin() , V.end());
   for(int x : V)
      cout << x << ' ';
   return 0;
}
