#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 105;

vector< int> conn[N];
int dist[N];

void dfs(int a, int p) {

	for (const int &b : conn[a]) {
		if (b == p) continue;
		dist[b] = dist[a] + 1;
		dfs(b, a);
	}
}

int solve() {
	int n;
	cin >> n;

	for (int i = 1; i <= n; i++) conn[i].clear();

	for (int i = 0; i < n - 1; i++) {
		int a, b;
		cin >> a >> b;
		conn[a].push_back(b);
		conn[b].push_back(a);
	}

	dist[1] = 0;
	dfs(1, -1);

	int u = 1;
	for (int i = 2; i <= n; i++) {
		if (dist[i] > dist[u]) {
			u = i;
		}
	}

	dist[u] = 0;
	dfs(u, -1);
	for (int i = 1; i <= n; i++) if (dist[i] > dist[u]) u = i;
	return dist[u];
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	ios::sync_with_stdio(false); cin.tie(nullptr);
	
	int t;
	cin >> t;

	int result = 0;
	while (t--) result += solve();

	cout << result << endl;
}