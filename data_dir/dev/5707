//bool comp(pii a, pii b){
//    return a.Y < b.Y;
//}
//void __(){
//    _(int,n);
//    _(vl,a,n);
//    map<ll,int> last;
//    last[0] = -1;
//    vpii arr;
//    rep(i,n){
//        if(i)
//            a[i] += a[i-1];
//        if(last.count(a[i]))
//            arr.pb({last[a[i]]+1,i});
//        last[a[i]] = i;
//    }
//    sort(all(arr),comp);
//    int l = 0;
//    ll ans = 0;
//    int last_start = -1;
//    rep(i,n){
//        while(l < sz(arr) && arr[l].Y <= i){
//            last_start = max(last_start,arr[l].X);
//            ++l;
//        }
//        ans += i-last_start;
//    }
//    print ans;
//}
//
#include <map>
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define REP_ZERO_INT(i,r) for(int i = 0; i < (r); ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define X first
#define Y second
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<ll> vl;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout) 
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }

    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
#define INPUT_WITHOUT_INIT(type,name) type name; cin >> name
#define _IWI(type,name,...) type name(__VA_ARGS__); cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
bool comp(pii a, pii b){
    return a.Y < b.Y;
}
void __(){
    _(int,n);
    _(vl,a,n);
    map<ll,int> last;
    last[0] = -1;
    vpii arr;
    rep(i,n){
        if(i)
            a[i] += a[i-1];
        if(last.count(a[i]))
            arr.pb({last[a[i]]+1,i});
        last[a[i]] = i;
    }
    sort(all(arr),comp);
    int l = 0;
    ll ans = 0;
    int last_start = -1;
    rep(i,n){
        while(l < sz(arr) && arr[l].Y <= i){
            last_start = max(last_start,arr[l].X);
            ++l;
        }
        ans += i-last_start;
    }
    print ans;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        __();
}

