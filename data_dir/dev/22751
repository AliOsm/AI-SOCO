#include<bits/stdc++.h>
using namespace std;


const int N = 5e5 + 5, MOD = 1e9 + 7;



int n, m, l[N], r[N], pref[N], dp[N];
vector < pair < int, int > > q[N];



int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m;
    vector < int > z;
    for(int i = 1; i <= m; i++){
        cin >> l[i] >> r[i];
        z.push_back(r[i]);
        z.push_back(r[i] - 1);
        z.push_back(l[i] - 1);
    }
    z.push_back(0);
    z.push_back(n);
    sort(z.begin(), z.end());
    z.resize(unique(z.begin(), z.end()) - z.begin());
    for(int i = 1; i <= m; i++){
        int x = lower_bound(z.begin(), z.end(), l[i] - 1) - z.begin();
        int y = lower_bound(z.begin(), z.end(), r[i]) - z.begin();
        q[y].push_back(make_pair(x, y - 1));
    }
    for(int i = 0; i < (int)z.size(); i++){
        if(z[i] == 0){
            dp[i] = 1;
            break;
        }
    }
    for(int i = 0; i < (int)z.size(); i++){
        pref[i] = (i - 1 >= 0 ? pref[i - 1] : 0);
        for(auto it : q[i]){
            dp[i] = (0ll + dp[i] + pref[it.second] - pref[it.first] + 2 * MOD) % MOD;
        }
        pref[i] = (pref[i] + dp[i]) % MOD;
    }
    cout << dp[(int)z.size() - 1];
}
