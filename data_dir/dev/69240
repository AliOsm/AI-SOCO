#include<iostream>
#include<algorithm>
#include<vector>
#include <functional>
#include<string>
#include<stdio.h>
#include<queue>
#include<map>
#include<stack>
using namespace std;
struct point
{
	int perv;
	int next;

};
int main()
{
	int n, m, k;
	scanf("%d %d %d", &n, &m, &k);
	string s,s2;
	char s1[500005];
	scanf("%s", s1);
	s = s1;
	vector<int>comp(s.size()+1);
	stack<pair<char,int> >st;
	for (int i = 0; i < s.size(); i++){
		if (st.empty())
		st.push(make_pair(s[i], i + 1));
		else if (st.top().first != s[i]){
			comp[i+1] = st.top().second;
			comp[st.top().second] = i + 1;
			st.pop();
		}
		else st.push(make_pair(s[i], i + 1));
	}
	vector<point>str(n+1);
	str[n].next = -1;
	str[1].perv = -1;
	for (int i = 1; i < n; i++){
		str[i].next = i + 1;
	}
	for (int i = 2; i <= n; i++){
		str[i].perv = i - 1;
	}
	scanf("%s", s1);
	s2 = s1;
	int curr = k;
	for (int i = 0; i < m; i++){
		if (s2[i] == 'R')curr=str[curr].next;
		if (s2[i] == 'L')curr=str[curr].perv;
		if (s2[i] == 'D'){
			if (comp[curr]>curr)curr = comp[curr];
				int a = comp[curr];
				int b = curr;
				if (str[b].next != -1){
					curr = str[b].next;
					str[curr].perv = str[a].perv;
					if (str[a].perv != -1)str[str[a].perv].next = curr;
				}
				else {
					curr = str[a].perv;
					str[curr].next = -1;
				}
			

		}
	}
	int cnt = 1;
	for (int i = n; i >= 0; i--){
		if (str[i].perv == -1){
			cnt = i-1;
			break;
		}
	}
	
	do{
		printf("%c",s[cnt]);
		cnt = str[cnt+1].next-1;

	} while (cnt != -2);
	//system("pause");
	return 0;
}