#include<bits/stdc++.h>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define rand() (rand() << 15 | rand())
using namespace std;
typedef long long  ll;
#define EPS 1e-9
#define PI acos(-1.0)
const int N = 1e5 + 4;
int n , m;
vector<int> adj[N];
int dep[N] , in[N] , a[N];
void dfs(int u , int d){
   dep[u] = d;
   for(int v : adj[u])
      dfs(v , d + 1);
}
 
bool good = true;
void solve(int u , int cur , int p){
   if((dep[a[u]] != dep[cur] && dep[a[u]] <= dep[p]))
      good = false;
   for(int v : adj[u])
      solve(v , a[u] , u);
}
 
int main() {
#ifndef ONLINE_JUDGE
   freopen("input.txt", "r", stdin); // comment this
#endif
   ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
   cin >> n >> m;
   for(int i = 0 ; i < m ; ++i){
      int p , q;
      cin >> p >> q;
      adj[p].push_back(q);
      in[q]++;
   }
   vector<int> res;
   for(int i = 1 ; i <= n ; ++i)cin >> a[i] , res.push_back(a[i]);
   for(int i = 1 ; i <= n ; ++i){
      if(in[i] == 0)
         dfs(i , 0) , solve(i , a[i] , i);
   }
 
   sort(all(res));
   res.resize(unique(all(res)) - res.begin());
 
   sort(all(res) , [&](const int a , const int b){
      return dep[a] > dep[b];
   });
 
   if(!good)
      cout << "-1\n";
   else{
      cout << (int)res.size() << "\n";
      for(int x : res)
         cout << x << "\n";
   }
}