#include<bits/stdc++.h>
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int MAXN=3e5+5;
const int MOD=1e9+7;
int dp[10][MAXN],cnt[MAXN],pool[MAXN];
void add(int &x,int y)
{
	x=(1LL*x+y+MOD)%MOD;
}
ll fac[MAXN],inv[MAXN];
ll qpow(ll a,ll b)
{
    ll ret=1;a%=MOD;
    for(ll i=b;i;i>>=1,a=a*a%MOD)
        if(i&1) ret=ret*a%MOD;
    return ret;
}
ll C(ll n,ll m)
{
    if(m>n||m<0) return 0;
    ll s1=fac[n],s2=inv[n-m]*inv[m]%MOD;
    return s1*s2%MOD;
}
void init()
{
    fac[0]=1;
    for(int i=1;i<MAXN;i++)//阶乘打表 
        fac[i]=fac[i-1]*i%MOD;
    inv[0]=1;inv[MAXN-1]=qpow(fac[MAXN-1],MOD-2);//费马小定理求逆元 
    for(int i=MAXN-2;i>=1;i--)
        inv[i]=inv[i+1]*(i+1)%MOD;
}
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int n;
	init();
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		int x;
		scanf("%d",&x);
		pool[x]++;
	}
	for(int i=1;i<MAXN;i++)
	{
		for(int j=i;j<MAXN;j+=i)
		{
			cnt[i]+=pool[j];
		}
	}
	for(int i=7;i>=1;i--)
	{
		for(int j=MAXN-1;j>=1;j--)
		{
			dp[i][j]=C(cnt[j],i);
			for(int k=j+j;k<MAXN;k+=j)
				add(dp[i][j],-dp[i][k]);
		}
	}
	for(int i=1;i<=7;i++)
		if(dp[i][1])
			return 0*printf("%d\n",i);
	puts("-1");
	return 0;
}
