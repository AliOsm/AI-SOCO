#include<bits/stdc++.h>
using namespace std;

struct node{
    char win, lose;
    int next[30];
    node() {
        for(int i = 0; i < 30; i++) next[i] = -1;
    }
    node(char win) : win(win), lose(lose^1) {
        for(int i = 0; i < 30; i++) next[i] = -1;
    }
};
vector<node> a(1, node());

void add(string s){
    for(int i = 0, v = 0; i < s.length(); i++){
        int sym = s[i]-'a';
        if(a[v].next[sym] == -1){
            a[v].next[sym] = a.size();
            a.push_back(node());
        }
        v = a[v].next[sym];
    }
}

void dfs(int v = 0){
    a[v].win = a[v].lose = false;
    char is_leaf = true;
    for(int i = 0; i < 30; i++){
        int to = a[v].next[i];
        if(to == -1) continue;
        dfs(to);
        is_leaf = false;
        if(!a[to].win) a[v].win = true;
        if(!a[to].lose) a[v].lose = true;
    }
    if(is_leaf) a[v].lose = true;
}

main(){

    int n, k;
    scanf("%d%d\n", &n, &k);
    while(n--){
        string s;
        getline(cin,s);
        add(s);
    }

    dfs();
    //printf("%d %d", a[0].win,a[0].lose);
    if(a[0].win && !a[0].lose) puts(k&1 ? "First" : "Second"); else
    if(a[0].win && a[0].lose) printf("First");
        else printf("Second");

    return 0;
}
