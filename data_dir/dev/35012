#include<bits/stdc++.h>
using namespace std;

int n,m,ans,startx,starty,endx,endy,visited[1001][1001],dir[2][4]={{1,0,-1,0},{0,1,0,-1}};
char ch[1001][1001];

void dfs(int currx,int curry,int cnt,int d)
{
    if(cnt>2 || currx<0 || curry<0 || currx>=n || curry>=m || ch[currx][curry]=='*' || ans)
        return;
    
    if(currx==endx && curry==endy)
    {
        ans=1;
        return;
    }
    
    if(visited[currx][curry]<=cnt && visited[currx][curry]!=-1) 
        return;
    visited[currx][curry]=cnt;
    
    for(int i=0;i<4;i++)
	{
		if(d==i)
		    dfs(currx+dir[0][i],curry+dir[1][i],cnt,i);
		else
		    dfs(currx+dir[0][i],curry+dir[1][i],cnt+1,i); 
	}
}
int main() 
{
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>ch[i][j];
            if(ch[i][j]=='S')
                startx=i,starty=j;
            if(ch[i][j]=='T')
                endx=i,endy=j;
        }
    }
    for(int i=0;i<4;i++)
    {
        memset(visited,-1,sizeof visited);
        dfs(startx+dir[0][i],starty+dir[1][i],0,i);
        if(ans)
            return cout<<"YES",0;
    }
    cout<<"NO";
}