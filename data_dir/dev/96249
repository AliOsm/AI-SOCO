#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) ((n%m + m) % m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

const int N = 1e3 + 5;

int w[N], memo[N][2][2][2];
string x[N];
int n;

int solve(int idx, int a, int b, int c)
{
	if (idx == n)
	{
		if (a && b && c)
			return 0;
		return 1e9;
	}

	int &ret = memo[idx][a][b][c];
	if (~ret)
		return ret;
	ret = 1e9;

	ret = min(ret, solve(idx + 1, a, b, c));
	bool aa = 0, bb = 0, cc = 0;
	for (auto c : x[idx])
		if (c == 'A')
			aa = 1;
		else if (c == 'B')
			bb = 1;
		else
			cc = 1;
	ret = min(ret, w[idx] + solve(idx + 1, a | aa, b | bb, c | cc));

	return ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;
	vi vec(n);
	rep(i, 0, n)
		cin >> vec[i];

	erep(i, 1, n)
	{
		if (n / i < 3 || n % i)
			continue;
		rep(j, 0, i)
		{
			bool flag = true;
			for (int k = j; k < n; k += i)
			{
				if (!vec[k])
				{
					flag = false;
					break;
				}
			}
			if (flag)
			{
				cout << "YES";
				return 0;
			}
		}
	}
	cout << "NO";

	return 0;
}
