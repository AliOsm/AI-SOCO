/// IN THE NAME OF GOD

///#pragma GCC optimize("Ofast")
///#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * lll * (x))
#define all(x) x.begin(), x.end()

#define rep(i, l, r) for (int i = (l); i <= (r); i++)
#define per(i, l, r) for (int i = (l); i >= (r); i--)

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)5000 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

int n, a, b;
int dp[N];
char s[N];


ull h[N], dg[N];

ull get(int l, int r) {
  return h[r + 1] - h[l] * dg[r - l + 1];
}

bool check(int p, int r) {
  int len = r - p + 1;
  rep(i, 1, p - 1) {
    if (i + len - 1 >= p) break;
    if (get(i, i + len - 1) == get(p, p + len - 1)) return 1;
  }
  return 0;
}
int main() {
  #ifdef IOI
    freopen ("in.txt", "r", stdin);
  #endif
  Kazakhstan
  cin >> n >> a >> b;
  cin >> (s + 1);

  dg[0] = 1;
  dg[1] = 997;
  rep(i, 1, n) {
    dg[i + 1] = dg[i] * 997;
    h[i + 1] = h[i] * 997 + s[i];
  }
  memset(dp, 0x3f, sizeof(dp));
  dp[0] = 0;
  rep(i, 1, n) {
    dp[i] = min(dp[i], dp[i - 1] + a);
    int l = i, r = n, res = 0;
    while (l <= r) {
      int mid = l + r >> 1;
      if (check(i, mid)) res = mid, l = mid + 1;
      else r = mid - 1;
    }
    rep(j, i, res) {
      dp[j] = min(dp[j], dp[i - 1] + b);
    }
  }
  cout << dp[n];
  ioi
}
