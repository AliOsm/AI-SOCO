#include <cstdio>
#include <utility>
#include <vector>
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 509;

int sum[N][N];

inline int get(int ra, int ca, int rb, int cb) {
  return sum[rb][cb] - sum[rb][ca - 1] - sum[ra - 1][cb] + sum[ra - 1][ca - 1];
}

char s[N];
int a[N][N];
int f[N][N][9];
vector<pair<int, int>> g[N];

const int Q = 300'009;

int ra[Q];
int ca[Q];
int rb[Q];
int cb[Q];
int ans[Q];

int main() {
  int n, m, qq;
  scanf("%d%d%d", &n, &m, &qq);
  for (int i = 0; i <= n; ++i) {
    for (int j = 0; j <= m; ++j) {
      a[i][j] = -1;
    }
  }
  for (int i = 1; i <= n; ++i) {
    scanf("%s", s + 1);
    for (int j = 1; j <= m; ++j) {
      if (s[j] == 'R') {
        a[i][j] = 0;
      } else
      if (s[j] == 'G') {
        a[i][j] = 1;
      } else
      if (s[j] == 'B') {
        a[i][j] = 2;
      } else {
        a[i][j] = 3;
      }
    }
  }
  for (int i = 0; i < qq; ++i) {
    scanf("%d%d%d%d", ra + i, ca + i, rb + i, cb + i);
  }
  for (int i = 0; i <= n; ++i) {
    for (int j = 0; j <= m; ++j) {
      for (int k = 0; k < 4; ++k) {
        f[i][j][k] = 0;
      }
    }
  }
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= m; ++j) {
      int k = a[i][j];
      f[i][j][k] = 1 + min(f[i - 1][j][k], min(f[i][j - 1][k], f[i - 1][j - 1][k]));
    }
  }
  for (int i = 0; i < N; ++i) {
    g[i].clear();
  }
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= m; ++j) {
      int k = f[i][j][2];
      if (k == 0) {
        continue;
      }
      if (f[i - k][j - k][0] >= k && f[i - k][j][1] >= k && f[i][j - k][3] >= k) {
        g[2 * k].emplace_back(i, j);
      }
    }
  }
  for (int i = 0; i < qq; ++i) {
    ans[i] = 0;
  }
  for (int i = 1; i <= n && i <= m; ++i) {
    for (int r = 0; r <= n; ++r) {
      for (int c = 0; c <= m; ++c) {
        sum[r][c] = 0;
      }
    }
    for (auto &e : g[i]) {
      sum[e.first][e.second] = 1;
    }
    for (int r = 1; r <= n; ++r) {
      for (int c = 1; c <= m; ++c) {
        sum[r][c] += sum[r - 1][c] + sum[r][c - 1] - sum[r - 1][c - 1];
      }
    }
    for (int j = 0; j < qq; ++j) {
      if (rb[j] - ra[j] + 1 < i || cb[j] - ca[j] + 1 < i) {
        continue;
      }
      if (get(ra[j] + i - 1, ca[j] + i - 1, rb[j], cb[j]) != 0) {
        ans[j] = i * i;
      }
    }
  }
  for (int i = 0; i < qq; ++i) {
    printf("%d\n", ans[i]);
  }
}
