#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define endl '\n'
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()
#define show(x) cout<<(#x)<<" is "<<(x)<<endl

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set=tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef vector<vector<int>> matrix;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=53;
const int M=1e6+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

char c[N][N];

int used[N][N],timer,n,m;

void dfs(int x,int y){
    used[x][y]=timer;
    for(int i=0;i<4;i++){
        int nx=x+dx[i];
        int ny=y+dy[i];
        if(c[nx][ny]=='#' && used[nx][ny]!=timer){
            dfs(nx,ny);
        }
    }
}

bool connected(){
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(c[i][j]=='#'){
                timer++;
                dfs(i,j);
                for(int i=1;i<=n;i++){
                    for(int j=1;j<=m;j++){
                        if(c[i][j]=='#' && used[i][j]!=timer){
                            return 0;
                        }
                    }
                }
                return 1;
            }
        }
    }
}

bool check(){
    for(int i=1;i<=n;i++) {
        for(int j=1;j<=m;j++){
            if(c[i][j]=='#'){
                c[i][j]='.';
                if(!connected()){
                    return 1;
                }
                c[i][j]='#';
            }
        }
    }
    return 0;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n>>m;
    int cnt=0;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cin>>c[i][j];
            if(c[i][j]=='#'){
                cnt++;
            }
        }
    }
    if(cnt<=2){
        cout<<-1;
        return 0;
    }
    if(check()){
        cout<<1;
        return 0;
    }
    cout<<2;
    return 0;
}
