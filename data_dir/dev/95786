/* 369C */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
vi vc[maxn];
int d[maxn];
bool bad[maxn];
bool visit[maxn];
int n;

void dfs(int u) {
	int v;
	
	visit[u] = true;
	d[u] = bad[u];
	rep(i, 0, SZ(vc[u])) {
		v = vc[u][i];
		if (!visit[v]) {
			dfs(v);
			d[u] += d[v];
		}
	}
}

void solve() {
	dfs(1);
	vi ans;
	
	rep(i, 1, n+1) {
		if (bad[i] && d[i]==1) {
			ans.pb(i);
		}
	}
	
	printf("%d\n", SZ(ans));
	rep(i, 0, SZ(ans))
		printf("%d ", ans[i]);
	putchar('\n');
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int u, v, k;
	
	memset(bad, false, sizeof(bad));
	memset(visit, false, sizeof(visit));
	scanf("%d", &n);
	rep(i, 1, n) {
		scanf("%d %d %d", &u, &v, &k);
		vc[u].pb(v);
		vc[v].pb(u);
		if (k == 2) {
			bad[u] = true;
			bad[v] = true;
		}
	}
	
	solve();
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
