#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef unsigned long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

const int N = 10000;
int n, s, a[70000];
bool use[70000];

typedef bitset<70001> B;
B dp[N];

inline const B check(int l, int r){
	B res;
	res[0] = 1;
	for(int i = l; i < r; i++) res |= res << a[i];
	return res;
}
inline bool can(int l, int r, int s){
	
	if(r - l < N){
		dp[0] = 1;
		for(int i = l, j = 0; i < r; i++, j++) dp[j + 1] = dp[j] | dp[j] << a[i];
		if(!dp[r - l][s]) return 0;
		for(int i = r - 1, j = r - l - 1; i >= l; i--, j--){
			if(s >= a[i] && dp[j][s - a[i]]){
				s -= a[i];
				use[i] = 1;
			}
		}
		return 1;
	}
	
	int m = (l + r) / 2;
	const B dp1 = check(l, m), dp2 = check(m, r);
	
	rep(i, s + 1) if(dp1[i] && dp2[s - i]){
		
		return can(l, m, i) && can(m, r, s - i);
	}
	return 0;
}

int main(){
	scanf("%d%d", &n, &s);
	
	vector<pi> v;
	rep(i, n){
		scanf("%d", a + i);
		v.pb(mp(a[i], i));
	}
	static int to[70000];
	sort(all(v));
	sort(a, a + n);
	rep(i, n) to[v[i].second] = i;
	
	if(a[n - 1] > s){
		cout << -1 << endl;
		return 0;
	}
	use[n - 1] = 1;
	s -= a[n - 1];
	int m = n - 1;
	for(; m > 0 && a[m - 1] > s; m--);
	
	if(!can(0, m, s)){
		cout << -1 << endl;
		return 0;
	}
	
	rep(ii, n){
		int i = to[ii];
		if(i && !use[i - 1]) printf("%d 1 %d\n", a[i] - a[i - 1], v[i - 1].second + 1);
		else printf("%d 0\n", a[i]);
	}
	
	return 0;
}
