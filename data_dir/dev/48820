#include <bits/stdc++.h>
#include <iostream>	
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
using namespace std;
typedef long long ll;
typedef long double ld;
const double PI = acos(-1.0);
const int inf = int(2e9);
const int _inf = -inf;
const int mod = inf + 7;
using namespace std;

const int N = 300300;
int cnt[11];
bool used[11];
void solve()
{
	int n;
	cin >> n;
	int a[n];
	int pref[n];
	rep(i, n){
		cin >> a[i];
	}
	int mx = 0;
	map<int, int> x;
	set<int> st;
	rep(i, n){
		cnt[a[i]]++;
		for(int j = 1; j <= 10; ++j){
			if(cnt[j] == 0) continue;
			x[j] = cnt[j];
			st.insert(cnt[j]);
		}
		if(st.size() == 1 && (x.begin()->S == 1 || x.size() == 1)){
			mx = i;
		}
		else if(st.size() == 2){
			int ones = 0;
			int fx = 0, fy = 0;
			auto ax = st.begin();
			auto bx = st.begin();
			bx++;
			for(auto it = x.begin(); it != x.end(); ++it){
				if(it->S == 1) ones++;
				else if(it->S == *bx) fy++;
			}
			if(ones == 1) mx = i;
			else if(fy == 1 && *bx - *ax == 1) mx = i;
		}
		x.clear();
		st.clear();
	}
	cout << mx + 1;	


}

int main()
{
	Red;
	solve();
	return 0;
}