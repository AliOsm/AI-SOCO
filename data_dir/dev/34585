#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;
typedef tree<
        pair<int, int>, // change type
        null_type,
        less<pair<int, int> >, // change type
        rb_tree_tag,
        tree_order_statistics_node_update>
        ordered_set;

typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define per(i, start, end) for(int i = (int)start-1; i >= end; --i)
#define sz(x) (int)(x).size()
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(d, v) memset(d, v, sizeof(d))
#define pii pair<int, int>
const double PI = 3.14159265358979323846;
const double eps = (1e-8);


const int MOD = 1000000007;
int cnt[100005];

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
//    freopen("facebook.txt", "w", stdout);
#endif
    int n;
    cin >> n;
    vector<int> a(n);
    rep(i,0,n)
        cin >> a[i];


    cnt[0] = 1;
    rep(i,0,n)
    {
        int x = a[i];
        vector<int> dv;
        for (int j = 1; j <= min(x/j, i + 1); ++j)
        {
            if (x%j == 0)
            {
                dv.pb(j);
                if (x/j != j && x/j <= i + 1)
                    dv.pb(x/j);
            }
        }
        sort(dv.rbegin(), dv.rend());
        rep(j,0,sz(dv))
        {
            cnt[dv[j]] += cnt[dv[j] - 1];
            cnt[dv[j]] %= MOD;
        }
    }

    int ans = 0;
    rep(i,1,100005)
    {
        ans += cnt[i];
        ans %= MOD;
    }
    cout << ans << '\n';
    return 0;
}