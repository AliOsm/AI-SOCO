 // CODED BY : Super_KAZAKH(-:  >---->  Yedige Ashirbek
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <fstream>
#include <stdio.h>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <stack>
#include <queue>
#include <climits>
#include <string>

#define pb push_back
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define ub upper_bound
#define lb lower_bound

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

inline void boost(){
    ios_base::sync_with_stdio();
    cin.tie(0);
    cout.tie(0);
}

const ll MAXN=1e5+123;
const ll inf=1e9+123;
const double pi=acos(-1);

int main(){
    boost();
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    string ss;
    cin>>ss;
    ll nb,nc,ns,ps,pc,pb,r,b=0,c=0,s=0;
    cin>>nb>>ns>>nc>>pb>>ps>>pc>>r;
    for(int i=0;i<ss.size();i++){
        if(ss[i]=='B'){
            b++;
        }
        if(ss[i]=='S'){
            s++;
        }
        if(ss[i]=='C'){
            c++;
        }
    }
    ll cntr=inf;
    if(b!=0){
        cntr=nb/b;
    }
    if(c!=0){
        cntr=min(cntr,nc/c);
    }
    if(s!=0){
        cntr=min(cntr,ns/s);
    }
    nb-=(cntr*b);
    ns-=(cntr*s);
    nc-=(cntr*c);
    if(b==0){
        nb=0;
    }
    if(c==0){
        nc=0;
    }
    if(s==0){
       ns=0;
    }
    while(1==1){
        if(ns==0 && nb==0 && nc==0){
            cntr+=r/(ps*s+pb*b+pc*c);
            cout<<cntr;
            return 0;
        }
        if(nb<b){
            r-=((b-nb)*pb);
            nb=0;
        }
        else{
            nb-=b;
        }
        if(nc<c){
            r-=((c-nc)*pc);
            nc=0;
        }
        else{
            nc-=c;
        }
        if(ns<s){
            r-=((s-ns)*ps);
            ns=0;
        }
        else{
            ns-=s;
        }
        if(r>=0){
            cntr++;
        }
        if(r<0){
            break;
        }
    }
    cout<<cntr;
    exit(0);
}
