//
//  main.cpp
//  Olympiads
//
//  Created by K0T on 17.12.15.
//  Copyright Â© 2015 K0T. All rights reserved.
//

#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <utility>
#include <iomanip>
#include <iterator>
#include <queue>
#include <ctime>
#include <set>
#include <map>

using namespace std;

#define pb push_back
#define mp make_pair
#define F first
#define S second

const int N = 100500;

int n;
int id;
long long k;
int a[N];
int pos[N];
long long fw[N];
long long psum[N];
pair<long long, int> b[N];

int getIdx(long long val) {
    int le = 0;
    int ri = n + 2;
    while (ri - le > 1) {
        int mid = (le + ri) >> 1;
        if (b[mid].F <= val) {
            le = mid;
        } else ri = mid;
    }
    return le;
}

void update(int pos) {
    while (pos <= n + 2) {
        fw[pos]++;
        pos |= (pos + 1);
    }
}

int get(int r) {
    int res = 0;
    while (r > 0) {
        res += fw[r];
        r = (r & (r + 1)) - 1;
    }
    return res;
}

bool can(long long x) {
    long long cnt = 0LL;
    for (int i = 1; i <= n + 2; i++) fw[i] = 0LL;
    update(pos[0]);
    for (int i = 1; i <= n; i++) {
        id = getIdx(psum[i] - x);
        cnt += get(id);
        update(pos[i]);
    }
    return cnt >= k;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> k;
    for (int i = 1; i <= n; i++) cin >> a[i];
    psum[0] = 0LL;
    b[1] = mp(psum[0], 0);
    for (int i = 1; i <= n; i++) {
        psum[i] = psum[i - 1] + 1LL * a[i];
        b[i + 1] = mp(psum[i], i);
    }
    sort(b + 1, b + 2 + n);
    for (int i = 1; i <= n + 1; i++) pos[b[i].S] = i;
    long long le = -1000000000000000000LL;
    long long ri = -le;
    while (ri - le > 1LL) {
        long long mid = (le + ri) / 2LL;
        if (can(mid)) {
            le = mid;
        } else ri = mid;
    }
    cout << le << endl;
    return 0;
}