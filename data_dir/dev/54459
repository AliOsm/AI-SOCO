#include<bits/stdc++.h>
#define lf double
#define ll long long
#define ull unsigned ll
#define ii pair<int,int>
#define lolo pair<ll,ll>
#define il pair<int,ll>
#define iii pair<ii,int>
#define iiii pair<ii,ii>
#define pll pair<ll,ll>
#define ld long int
#define heap priority_queue
#define mp make_pair
#define st first
#define nd second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define all(x) x.begin(),x.end()
#define len(x) strlen(x)
#define sz(x) (int) x.size()
#define orta ((bas+son)/2)
#define min3(x,y,z) min(min(x,y),z)
#define max3(x,y,z) max(max(x,y),z)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define pw(x) (1<<(x))
#define MOD 1000000007
#define inf 1000000009
#define N 100005
#define LOG 20
#define M 1000000000000000000
#define KOK 400
#define EPS 0.0000001
#define B 10
#define pw(x) (1<<(x))
#define PI 3.1415926535
#define tm nannana
using namespace std;

int tr[N],tm[N],tl[N],a[N],ok[N],yee[N],tol[N];
bool flag=true;
int n,last,df,odd;
ll ans;

void pre() {

	int now=0;

	for(;now<df;) {

		last++;

		tm[a[last]]++;
		tr[a[last]]--;

		if(tm[a[last]]>=tr[a[last]]) {

			now+=!yee[a[last]];

			yee[a[last]]=1;

		}

	}

}

void shift(int to) {

	for(;last<to;) {

		++last;
		tr[a[last]]--;
		tm[a[last]]++;

	}

}

bool check(int val) {

	if(tl[val]-tol[val]>tm[val]+tr[val]+tol[val]) return false;

	return true;

}

int main() {

	scanf("%d",&n);

	for(int i=1;i<=n;i++) {

		scanf("%d",&a[i]);

		odd-=tr[a[i]]%2;

		tr[a[i]]++;

		odd+=tr[a[i]]%2;

		df+=!ok[a[i]];

		ok[a[i]]=1;

	}

	if(odd>1) {

		printf("0");

		return 0;

	}

	for(int i=1;i<=n;i++) {

		flag&=(a[i]==a[n-i+1]);

	}

	if(flag) {

		printf("%lld",1ll*n*(n+1)/2);

		return 0;

	}

	pre();

	if(last<=n/2+odd && (!odd || (tr[a[n/2+1]]+tm[a[n/2+1]])%2)) {

		while(a[last]==a[n-last+1]) {

			tr[a[last]]++;
			tm[a[last]]--;

			tol[a[last]]++;

			last--;

		}

	}

	ans+=n-last+1;

	for(int i=1;i<=n;i++) {

		tm[a[i]]--;
		tl[a[i]]++;

		if(!check(a[i])) break ;

		if(a[i]!=a[n-i+1]) {

			shift(max(last,n-i+1));

		}

		ans+=n-last+1;

	}

	printf("%lld",ans);

}