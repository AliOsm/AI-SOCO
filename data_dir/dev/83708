#include <bits/stdc++.h>

#define all(x) (x).begin(), (x).end()

using namespace std;

using ll = long long;
using ld = long double;

const int maxn = 252;
const int inf = 1e9 + 5;
const int mod = 1e9 + 7;

int C[maxn][maxn];

int mul(int x, int y) {
  return 1LL * x * y % mod;
}

void add(int& x, int y) {
  x += y;
  if (x >= mod) x -= mod;
}

int binpow(int a, int k) {
  int res = 1;
  while (k > 0) {
    if (k & 1) res = mul(res, a);
    a = mul(a, a);
    k /= 2;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
//  freopen("input.txt", "r", stdin);

  int n, k;
  cin >> n >> k;

  if (k == 1) {
    cout << 1 << endl;
    return 0;
  }

  for (int n = 0; n < maxn; ++n) {
    C[n][0] = 1;
    for (int k = 1; k <= n; ++k) {
      C[n][k] = C[n - 1][k];
      add(C[n][k], C[n - 1][k - 1]);
    }
  }

  int ans = 0;
  for (int i = 0; i <= n; ++i) {
    for (int j = 0; j <= n; ++j) {
      int cnt = mul(C[n][i], C[n][j]);
      int a = (i + j) * n - i * j;
      int b = n * n - a;
      cnt = mul(cnt, binpow(k, b));
      cnt = mul(cnt, binpow(k - 1, a));
      if ((i + j) % 2 == 1) cnt = mod - cnt;
      add(ans, cnt);
    }
  }
  cout << ans << endl;
}