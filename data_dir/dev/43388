#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll,ll> pll;
typedef pair<pll,ll> plll;
typedef pair<pll,pll> ppll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back

const int N = 20;
const int MOD = 1e9 + 7;
ll cnt[N][N];
ll dp[(1 << N)];
int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    int n,m;
    cin >> n >> m;
    string s;
    cin >> s;
    for(int i = 1;i < n; ++i){
        cnt[s[i] - 'a'][s[i - 1] - 'a']++;
        cnt[s[i - 1] - 'a'][s[i] - 'a']++;
    }
    fill(dp,dp + (1 << m),LLONG_MAX);
    dp[0] = 0;
    for(int mask = 0;mask < (1 << N); ++mask){
        ll add = 0;
        for(int i = 0;i < m; ++i){
            if(mask & (1 << i)){
                for(int j = 0;j < m; ++j){
                    if(!(mask & (1 << j))){
                        add += cnt[i][j];
                    }
                }
            }
        }
        for(int i = 0;i < m; ++i){
            int nmask = mask | (1 << i);
            if(nmask != mask)dp[nmask] = min(dp[nmask],add + dp[mask]);
        }
    }
    cout << dp[(1 << m) - 1];
    return 0;
}
