#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;

const long double pi = acos(-1);
const double PI = acos(-1.);

#define MOD 998244353
const int N = 1e5 + 5;
const int K = 2e6 + 6;
const int Ai = 1e6 + 6;
const int LOGN = 30;

const ll mod = 997;

vector<int> pos[2];

int main() {
    ios_base::sync_with_stdio(false);

    int n; cin >> n;
    string s; cin >> s;

    for(int i = 0; i < n; i++)
        pos[s[i]-'A'].push_back(i);

    ll res = 0;
    for(int i = 0; i < n; i++) {
        int cnt = 0;
        if(s[i] == 'A') {
            auto it = lower_bound(pos[0].begin(), pos[0].end(), i) - pos[0].begin();
            if(it+1 == pos[0].size())
                continue;

            int nxt = pos[0][it+1];
            cnt = n - nxt;

            auto it1 = lower_bound(pos[1].begin(), pos[1].end(), i) - pos[1].begin();
            if(it1 != pos[1].size() && pos[1][it1] > nxt)
                cnt--;

//            cout << i+1 << " " << cnt << "\n";
        }
        else {
            auto it = lower_bound(pos[1].begin(), pos[1].end(), i) - pos[1].begin();
            if(it+1 == pos[1].size())
                continue;

            int nxt = pos[1][it+1];
            cnt = n - nxt;

            auto it1 = lower_bound(pos[0].begin(), pos[0].end(), i) - pos[0].begin();
            if(it1 != pos[0].size() && pos[0][it1] > nxt)
                cnt--;

//            cout << i+1 << " " << cnt << "\n";
        }
        res += cnt;
    }

    cout << res << "\n";

    return 0;
}
