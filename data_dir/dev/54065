#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
#define endl '\n'
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
int n,m,k,q;
int maxn=200;
main()
{
	FX iOS
	int i,j; 
	cin>>q;
	for(j=0;j<q;++j)
	{
		vector<int>pos[222];
		cin>>n;
		int a[n];
		int ans=0;
		for(i=0;i<n;++i)
		{
			cin>>a[i];
			pos[a[i]].pb(i);
			ans=max(ans,(int)pos[a[i]].size());
		}
		for(int a=1;a<=maxn;++a)
		{
			int sz=(int)pos[a].size();
			m=sz/2;
			for(int l=0;l<m;++l)
			{
				int aL=pos[a][l];
				int aR=pos[a][sz-l-1];
				int aSz=l+l+2;
				//debug("a = ",a," al = ",aL," ar = ",aR);
				for(int b=1;b<=maxn;++b)
				{
					if(a==b)continue;
					if(!pos[b].size())continue;
					auto bL=upper_bound(all(pos[b]),aL);
					if(bL==pos[b].end())continue;
					if(*bL>aR)continue;
					auto bR=upper_bound(all(pos[b]),aR);
					int bSz=bR-bL;
					ans=max(ans,aSz+bSz);
					//debug("b = ",b," bl = ",*bL," sz = ",bSz);
				}
			}
		}
		cout<<min(ans,n)<<endl;
	}
}
//0 1 2 3 4
