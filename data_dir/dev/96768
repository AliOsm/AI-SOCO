//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}


ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n, arr[100005];
ll BIT[100005], cnt[100005];


void update(int idx, int val){
    while(idx <= n){
        BIT[idx] += val;
        cnt[idx]++;
        idx += idx & (-idx);
    }
}

ll query(int idx){
    ll ans = 0;
    while(idx){
        ans += BIT[idx];
        idx -= idx & (-idx);
    }
    return ans;
}

ll query_cnt(int idx){
    ll ans = 0;
    while(idx){
        ans += cnt[idx];
        idx -= idx & (-idx);
    }
    return ans;
}


int main(){

    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

    scanf("%d", &n);
    for(int i=1;i<=n;i++){
        scanf("%d", &arr[i]);
    }

    double ans = 0.0;
    ll tot = 0;
    ll z = 1LL*n*(n+1)/2;
// cout<<z<<endl;
    for(int i=n;i>=1;i--){

        ll less = query(arr[i]-1);
        ll more = tot - less;

        double temp = 0.0;
        if(less != 0){
            temp += query_cnt(arr[i]-1) - 0.5*(1.0*i)*less/z;
        }
        if(more != 0){
            temp += 0.5*(1.0*i)*more/z;
        }
        ans += temp;

// cout<<i<<" "<<less<<" "<<more<<" "<<tot<<" so temp = "<<temp<<endl;

        tot += n-i+1;
        update(arr[i], n-i+1);
    }


    printf("%.10lf\n", ans);
    return 0;
}



