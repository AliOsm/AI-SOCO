/*input
4
1 2
2 3
3 4
6
1 2
1 3
2 4
2 5
5 6
*/
#include "bits/stdc++.h"
using namespace std;
long long sz[100005], n, CLK = 0, RES[100005];
vector<int> v[100005];

int dfs_sz(int u, int dad = 0){
	sz[u] = 1;
	for(int i: v[u]) if(i != dad){
		sz[u] += dfs_sz(i, u);
	}
	return sz[u];
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	cin >> n;
	map<pair<int,int>, int> edges;
	for(int i = 1, x, y; i < n; ++i){
		cin >> x >> y;
		v[x].push_back(y);
		v[y].push_back(x);

		edges[{x,y}] = i;
		edges[{y,x}] = i;

		RES[i] = -1;
	}

	dfs_sz(1);

	for(int i = 1; i <= n; ++i){
		if(v[i].size() > 2){
			for(auto j: v[i])
				RES[edges[{i, j}]] = CLK++;
			break;
		}
	}
	if(!CLK){
		for(int i = 1; i <= n; ++i){
			if(v[i].size() == 1){
				for(auto j: v[i]) if(RES[edges[{i, j}]] == -1)
					RES[edges[{i, j}]] = CLK++;
			}
		}
	}
	for(int i = 1; i <= n-1; ++i){
		if(RES[i] == -1) RES[i] = CLK++;
		cout << RES[i] << '\n';
	}
}