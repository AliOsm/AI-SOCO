// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=22;
const ll N=2e5+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m=mod){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

vector<ll> g[N],fin[N];
ll n,m,u,v,k,s,dis[N],a[N];

int main()
{
  cin>>n>>m>>k>>s;
  for(ll i=1;i<=n;i++){cin>>a[i];}
  while(m--)
  {
    cin>>u>>v;
    g[u].pb(v);
    g[v].pb(u);
  }
  for(ll i=1;i<=k;i++)
  {
    queue<ll> q;
    for(ll j=1;j<=n;j++)
    {
      dis[j]=INF;
      if(a[j]==i){q.push(j);dis[j]=0;}
    }
    while(q.size())
    {
      ll cur=q.front();q.pop();
      for(ll j:g[cur])
      {
        if(dis[j]==INF){dis[j]=dis[cur]+1;q.push(j);}
      }
    }
    for(ll j=1;j<=n;j++){fin[j].pb(dis[j]);}
  }
  for(ll i=1;i<=n;i++)
  {
    ll sum=0;
    sort(all(fin[i]));
    for(ll j=0;j<s;j++){sum+=fin[i][j];}
    cout<<sum<<" ";
  }
}
