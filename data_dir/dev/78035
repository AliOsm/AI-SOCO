# include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

const int maxn = 2e6 + 100;
const LL mod1 = 1e9 + 7;
const LL mod2 = 1e9 + 9;
const LL base = 43;
LL p1[maxn], p2[maxn], a[maxn];
int y[maxn];
bool dp[maxn];

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n, m;
	cin >> n >> m;
	string s; cin >> s;
	p1[0] = p2[0] = 1;
	for (int i = 1; i < maxn; i++){
		p1[i] = (p1[i - 1] * base) % mod1;
		p2[i] = (p2[i - 1] * base) % mod2;
	}
	
	for (int i = 0; i < maxn; i++)
		dp[i] = true;
	LL Hp1 = 0, Hp2 = 0, Hs1 = 0, Hs2 = 0;
	for (int i = 0; i < s.size(); i++){
		Hp1 = (Hp1 * base + (s[i] - 'a')) % mod1;
		Hp2 = (Hp2 * base + (s[i] - 'a')) % mod2;
		Hs1 = (Hs1 + p1[i] * (s[s.size()-1 -i] - 'a')) % mod1;
		Hs2 = (Hs2 + p2[i] * (s[s.size()-1 -i] - 'a')) % mod2;
		dp[i] = ((Hp1 == Hs1) && (Hp2 == Hs2));
	}
	reverse(dp, dp + s.size());

	for (int i = 0; i < m; i++)
		cin >> y[i], y[i]--, a[y[i]]++, a[y[i] + s.size()]--;

	for (int i = 1; i < n; i++)
		a[i] += a[i - 1];
	
	LL ans = 1;
	for (int i = 1; i < m; i++)
		if(y[i] - y[i - 1] < s.size() && dp[y[i] - y[i - 1]] == false)
			ans = 0;
	
	for (int i = 0; i < n; i++)
		if(a[i] == 0)
			ans = (ans * 26LL) % mod1;
	cout << ans << endl;

	return 0;
}
