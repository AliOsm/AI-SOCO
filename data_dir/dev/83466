#include <bits/stdc++.h>
using namespace std;

#define int long long
 
const int MAX = 1e6 + 10; 
const int OO = 0x3f3f3f3f;
const double EPS = 1e-9; 
const int MOD = 9901;
 
#define bug(x) cout << #x << " = " << x << '\n'
#define FOR(i, a, n) for(int i = a; i < (int)n; i++)
#define REP(i, n) FOR(i, 0, n)
#define fi first
#define se second
#define pb push_back
#define mt make_tuple
#define all(vetor) vetor.begin(), vetor.end()
#define X real()
#define Y imag()
//#define getchar getchar_unlocked
 
typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef complex<ll> Pll;
typedef complex<ld> Pld;

int k, n, aux, sum;
int arr[MAX];
set<iii> pq;
set<int> vdc;
map<int, int> mapa;

main()
{
	scanf(" %lld", &k);
	REP(i, k)
	{
		scanf(" %lld", &n);
		sum = 0;
		REP(j, n)
		{
			scanf(" %lld", &arr[j]);
			sum += arr[j];
		}
		REP(j, n)
			pq.insert({sum - arr[j] ,{i + 1, j + 1}});
	}
	for(auto it = pq.begin(); it != pq.end(); it++)
	{
		int value = it->fi;
		while(it != pq.end() and it->fi == value)
		{

			vdc.insert(it->se.fi);
			mapa[it->se.fi] = it->se.se;
			it++;
		}
		it--;
		if(vdc.size() > 1)
		{
			puts("YES");
			cout << *(vdc.begin()) <<  ' ' << mapa[*(vdc.begin())] << '\n';
			vdc.erase(*(vdc.begin()));
			cout << *(vdc.begin()) << ' ' << mapa[*(vdc.begin())] << '\n';
			return 0;
		}
		vdc.clear();
		mapa.clear();
	}
	puts("NO");
}
