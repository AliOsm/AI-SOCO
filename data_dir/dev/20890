#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int N = 100010;
map<string, int> who;
int n, m, q;

int ufds[2*N], anton[2*N];


int find(int x)
{
	if (ufds[x] == x)
		return x;
	return ufds[x] = find(ufds[x]);
}

void unio(int x, int y)
{
	ufds[find(x)] = find(y);	
}

void add_synonym(int a, int b)
{
	unio(anton[a], anton[b]);
	unio(a, b);
}

void add_antonym(int a, int b)
{
	a = find(a);
	b = find(b);
	add_synonym(anton[a], b);
	add_synonym(anton[b], a);
}

bool check_synonym(int a, int b)
{
	return find(a) == find(b);
}

bool check_antonym(int a, int b)
{
	return find(a) == find(anton[b]); //or?
}

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m >> q;
	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		who[s] = i;
		ufds[i] = i;
		anton[i] = i+n;
	}
	for (int i = n; i < 2*n; i++)
	{
		ufds[i] = i;
		anton[i] = i-n;
	}
	for (int i = 0; i < m; i++)
	{
		int t;
		cin >> t;
		string x, y;
		cin >> x >> y;
		int xx = who[x], yy = who[y];
		if (t == 1)
		{	
			if (check_antonym(xx, yy))
				cout << "NO\n";
			else
			{
				cout << "YES\n";
				add_synonym(xx, yy);
			}
		}
		else
		{
			if (check_synonym(xx, yy))
				cout << "NO\n";
			else
			{
				cout << "YES\n";
				add_antonym(xx, yy);
			}
		}
	}
	for (int i = 0; i < q; i++)
	{
		string x, y;
		cin >> x >> y;
		int xx = who[x], yy = who[y];
		int ans = 3;
		if (check_synonym(xx, yy))
			ans = 1;
		else if (check_antonym(xx, yy))
			ans = 2;
		cout << ans << '\n';
	}
	return 0;
}

