#include <bits/stdc++.h>
using namespace std;
#define oo 2000000000
#define mod 998244353 
const int N = 500010;
int n , m, q , a;
long long frq[N];
int ans[N];

vector< pair< long long , int> > v , v2;

int all = 0;

int Idx , seg[4 * N];

int update(int s,int e,int idx){
    if(s > Idx || e < Idx)
        return seg[idx];
    if(s == e)
        return seg[idx] = 1;
    return seg[idx] = update(s,((s+e) >> 1) , (idx << 1)) + update(((s+e) >> 1) + 1,e,(idx << 1) + 1);
}

int val , pre = 0;

int get(int s,int e,int idx){
    if(s == e)
        return s;
    if(pre + seg[(idx << 1)] >= val)
        return get(s,((s+e) >> 1),(idx << 1));
    pre += seg[(idx << 1)];
    return get(((s+e) >> 1) + 1,e,(idx << 1) + 1);
}


int main(){
    scanf("%d%d%d",&n,&m,&q);
    for(int i = 0 ;i < n;i++){
        scanf("%d",&a);
        frq[a]++;
    }
    for(int i = 1 ;i <= m;i++){
        v.push_back(make_pair(frq[i] , i));
    }
    sort(v.begin(),v.end());
    long long last = n + 1 , f = v[0].first , needed;
    int j = 0 ;
    while(j < (int)v.size() && v[j].first == f){
        all++;
        Idx = v[j].second;
        update(1,m,1);
        j++;
    }
    v2.resize(q);
    for(int i = 0 ;i < q;i++){
        scanf("%lld",&v2[i].first);
        v2[i].second = i;
    }
    sort(v2.begin(),v2.end());
    for(int i = 0 ;i < (int)v2.size();i++){
        while(j < (int)v.size()){
            needed = (v[j].first - f) * all;
            if(last + needed <= v2[i].first){
                Idx = v[j].second;
                update(1,m,1);
                last += needed;
                all++;
                f = v[j].first;
                j++;
            }
            else
                break;
        }
        val = ((v2[i].first - last) % all) + 1;
        pre = 0;
        ans[v2[i].second] = get(1 , m , 1);
    }
    for(int i = 0 ;i < q;i++){
        printf("%d\n",ans[i]);
    }
    return 0;
}