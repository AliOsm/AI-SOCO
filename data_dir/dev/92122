#include<bits/stdc++.h>
#define F first
#define S second
using namespace std;

typedef unsigned long long ll;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;

int mod = 998244353;

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    vi V(n), V2;
    for (int i = 0; i < n; ++i) cin >> V[i];
    V2 = V;
    map<ll, ll> M;
    for (int i = 0; i < n; ++i) {
        ll x = sqrt(V[i]);
        x = sqrt(x);
        if (x*x*x*x == V[i]) {
            V[i] = 1;
            M[x] += 4;
        }
        x++;
        if (x*x*x*x == V[i]) {
            V[i] = 1;
            M[x] += 4;
        }
    }
    for (int i = 0; i < n; ++i) {
        ll x = sqrt(V[i]);
        if (x != 1 && x*x == V[i]) {
            V[i] = 1;
            M[x] += 2;
        }
        x++;
        if (x != 1 && x*x == V[i]) {
            V[i] = 1;
            M[x] += 2;
        }

        x = cbrt(V[i]);
        if (x != 1 && x*x*x == V[i]) {
            V[i] = 1;
            M[x] += 3;
        }
        x++;
        if (x != 1 && x*x*x == V[i]) {
            V[i] = 1;
            M[x] += 3;
        }
    }
    for (int i = 0; i < n; ++i) {
        if (V[i] != 1) {
            for (int j = 0; j < n; ++j) {
                if (i == j) continue;
                ll gc = __gcd(V[i], V2[j]);
                if (gc != 1 && gc != V[i]) {
                    M[V[i]/gc]++;
                    M[gc]++;
                    V[i] = 1;
                    break;
                }
            }
            for (int j = 0; j < n; ++j) {
                if (i == j) continue;
                ll gc = __gcd(V[i], V2[j]);
                if (gc != 1) {
                    if (V[i] == gc) {
                        M[-gc]++;
                    } else {
                        M[V[i]/gc]++;
                    }
                    M[gc]++;
                    V[i] = 1;
                    break;
                }
            }
        }
    }
    ll ans = 1;
    for (auto v : M) {
        ans = (ans * (v.S + 1)) % mod;
    }
    for (int i = 0; i < n; ++i) {
        if (V[i] != 1) {
            ans = (ans * 4) % mod;
        }
    }
    cout << ans << "\n";
    return 0;
}