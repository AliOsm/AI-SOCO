//https://github.com/YazanZebak/CompetitiveProgramming/blob/master/Codeforces/CF102299-GYM-F.cpp
#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);

const double PI  = acos(-1.0);
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
typedef complex<double> point;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
const double EPS = 1e-9;
const int N = 2e5 + 9;
int n,q,a[N],b[N];
ll sum;
 int main()
{
//freopen("product.in","r",stdin);
//freopen("travel.out","w",stdout);
//__builtin_popcount()
input

    cin>>n;
    forr(i,1,n)cin>>a[i],sum+=a[i];
    cin>>q;
    map<pair<int,int>,int>ck;
    int u,t,v;
    while(q--)
    {
        cin>>u>>t>>v;
        if(ck.count({u,t}))
        {
             int x=ck[{u,t}];
             b[x]--;
             if(b[x]<a[x])sum++;
        }
        if(v)
        {
             ck[{u,t}]=v;
             b[v]++;
             if(b[v]<=a[v])sum--;
        }
        else ck.erase({u,t});

        cout<<sum<<endl;
    }



return 0;
}
