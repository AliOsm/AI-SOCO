#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
const char dl='\n';
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
int n,m,k;
ll t[4*100005],t2[4*100005];
void build (ll a[], int v, int tl, int tr) {
	if (tl == tr)
		t[v] = a[tl];
	else {
		int tm = (tl + tr) / 2;
		build (a, v*2, tl, tm);
		build (a, v*2+1, tm+1, tr);
	}
}
 
void update (int v, int tl, int tr, int l, int r, ll add) {
	if (l > r)
		return;
	if (l == tl && tr == r)
		t[v] += add;
	else {
		int tm = (tl + tr) / 2;
		update (v*2, tl, tm, l, min(r,tm), add);
		update (v*2+1, tm+1, tr, max(l,tm+1), r, add);
	}
}
 
ll get (int v, int tl, int tr, int pos) {
	if (tl == tr)
		return t[v];
	int tm = (tl + tr) / 2;
	if (pos <= tm)
		return t[v] + get (v*2, tl, tm, pos);
	else
		return t[v] + get (v*2+1, tm+1, tr, pos);
}
void update1 (int v, int tl, int tr, int l, int r, ll add) {
	if (l > r)
		return;
	if (l == tl && tr == r)
		t2[v] += add;
	else {
		int tm = (tl + tr) / 2;
		update1 (v*2, tl, tm, l, min(r,tm), add);
		update1 (v*2+1, tm+1, tr, max(l,tm+1), r, add);
	}
}
 
ll get1 (int v, int tl, int tr, int pos) {
	if (tl == tr)
		return t2[v];
	int tm = (tl + tr) / 2;
	if (pos <= tm)
		return t2[v] + get1 (v*2, tl, tm, pos);
	else
		return t2[v] + get1 (v*2+1, tm+1, tr, pos);
}
main()
{
	FX iOS
	int i,j; 
	cin>>n>>m>>k;
	ll a[n];
	for(i=0;i<n;++i)cin>>a[i];
	int l[m],r[m],x[m];
	for(i=0;i<m;++i)
	{
		cin>>l[i]>>r[i]>>x[i];	l[i]--,r[i]--;
	}
	for(i=0;i<k;++i)
	{
		int l,r;
		cin>>l>>r;--l,--r;
		update1(1,0,m-1,l,r,1);
	}
	ll b[m];
	for(i=0;i<m;++i)
		b[i]=get1(1,0,m-1,i);
	/*for(i=0;i<m;++i)
		cout<<b[i]<<" ";*/
	build(a,1,0,n-1);
	/*for(i=0;i<4*n;++i)
		cout<<t[i]<<' ';
	cout<<endl;*/
	for(i=0;i<m;++i)
	{
		//cout<<x[i]<<" "<<b[i]<<" ";
		update(1,0,n-1,l[i],r[i],((ll)(x[i]*1ll*b[i])));
	}
	cout<<endl;
	ll ans[n];
	for(i=0;i<n;++i)
		ans[i]=get(1,0,n-1,i);
	for(i=0;i<n;++i)
		cout<<ans[i]<<" ";
}