#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

/// Errichto debugger
#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename \
  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
  ris << "(" << d.first << ", " << d.second << ")";
}
sim dor(rge<c> d) {
  *this << "[";
  for (auto it = d.b; it != d.e; ++it)
    *this << ", " + 2 * (it == d.b) << *it;
  ris << "]";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "

string toBin(int x)
{
    string Ans;
    while(x > 0)
    {
        Ans = char(x % 2 + '0') + Ans;
        x /= 2;
    }
    return Ans;
}

ll SolveA(ll n)
{
    ll k = 0;
    for(ll i = 0; i < 60 && (n >= (1LL << i)); i += 2)
    {
        n -= (1LL << i);
        k += 2;
    }

    ll Ans = (1LL << k) + n;

    return Ans;
}

ll SolveB(ll n)
{
    ll k = 0;
    for(ll i = 0; i < 60 && (n >= (1LL << i)); i += 2)
    {
        n -= (1LL << i);
        k += 2;
    }

    ll Temp[] = {0, 2, 3, 1};

    ll Ans = (1LL << (k + 1));

    for(k -= 2; k >= 0; k -= 2)
    {
        ll i = 0;

        while(n >= (1LL << k))
        {
            n -= (1LL << k);
            i++;
        }

        Ans += (Temp[i] << k);
    }

    return Ans;
}

ll SolveC(ll n)
{
    return SolveA(n) ^ SolveB(n);
}

ll Solve(ll n)
{
    n--;
    if(n % 3 == 0)  return SolveA(n / 3);
    if(n % 3 == 1)  return SolveB(n / 3);
    if(n % 3 == 2)  return SolveC(n / 3);
}

int main()
{
    /*set <int> st;
    vector <int> Ans;

    while(Ans.size() < 3000)
    {
        for(int a = 1; ; a++)
        {
            if(!st.count(a))
            {
                for(int b = 1; ; b++)
                {
                    if(a != b && !st.count(b))
                    {
                        int c = a ^ b;

                        if(c == a || c == b)    continue;

                        if(c > 0 && !st.count(c))
                        {
                            debug() << imie(a) imie(b) imie(c);
                            debug() << imie(toBin(a)) imie(toBin(b)) imie(toBin(c));
                            debug() << "";

                            static ll k = 0;

                            debug() << imie(k) imie(b) imie(SolveB(k));

                            assert(a == SolveA(k));
                            assert(b == SolveB(k));
                            assert(c == SolveC(k));

                            k++;

                            st.insert(a);
                            st.insert(b);
                            st.insert(c);

                            Ans.push_back(a);
                            Ans.push_back(b);
                            Ans.push_back(c);

                            goto END;
                        }
                    }
                }
            }
        }

        END : ;
    }*/

    int T;  cin >> T;

    while(T--)
    {
        ll n;
        scanf("%I64d", &n);
        printf("%I64d\n", Solve(n));
    }
}

/**
[a: 1]  [b: 2]  [c: 3]
 [toBin(a): 1]  [toBin(b): 10]  [toBin(c): 11]

 [a: 4]  [b: 8]  [c: 12]
 [toBin(a): 100]  [toBin(b): 1000]  [toBin(c): 1100]

 [a: 5]  [b: 10]  [c: 15]
 [toBin(a): 101]  [toBin(b): 1010]  [toBin(c): 1111]

 [a: 6]  [b: 11]  [c: 13]
 [toBin(a): 110]  [toBin(b): 1011]  [toBin(c): 1101]

 [a: 7]  [b: 9]  [c: 14]
 [toBin(a): 111]  [toBin(b): 1001]  [toBin(c): 1110]

 [a: 16]  [b: 32]  [c: 48]
 [toBin(a): 10000]  [toBin(b): 100000]  [toBin(c): 110000]

 [a: 17]  [b: 34]  [c: 51]
 [toBin(a): 10001]  [toBin(b): 100010]  [toBin(c): 110011]

 [a: 18]  [b: 35]  [c: 49]
 [toBin(a): 10010]  [toBin(b): 100011]  [toBin(c): 110001]

 [a: 19]  [b: 33]  [c: 50]
 [toBin(a): 10011]  [toBin(b): 100001]  [toBin(c): 110010]

 [a: 20]  [b: 40]  [c: 60]
 [toBin(a): 10100]  [toBin(b): 101000]  [toBin(c): 111100]

 [a: 21]  [b: 42]  [c: 63]
 [toBin(a): 10101]  [toBin(b): 101010]  [toBin(c): 111111]

 [a: 22]  [b: 43]  [c: 61]
 [toBin(a): 10110]  [toBin(b): 101011]  [toBin(c): 111101]

 [a: 23]  [b: 41]  [c: 62]
 [toBin(a): 10111]  [toBin(b): 101001]  [toBin(c): 111110]

 [a: 24]  [b: 44]  [c: 52]
 [toBin(a): 11000]  [toBin(b): 101100]  [toBin(c): 110100]

 [a: 25]  [b: 46]  [c: 55]
 [toBin(a): 11001]  [toBin(b): 101110]  [toBin(c): 110111]

 [a: 26]  [b: 47]  [c: 53]
 [toBin(a): 11010]  [toBin(b): 101111]  [toBin(c): 110101]

 [a: 27]  [b: 45]  [c: 54]
 [toBin(a): 11011]  [toBin(b): 101101]  [toBin(c): 110110]

 [a: 28]  [b: 36]  [c: 56]
 [toBin(a): 11100]  [toBin(b): 100100]  [toBin(c): 111000]

 [a: 29]  [b: 38]  [c: 59]
 [toBin(a): 11101]  [toBin(b): 100110]  [toBin(c): 111011]

 [a: 30]  [b: 39]  [c: 57]
 [toBin(a): 11110]  [toBin(b): 100111]  [toBin(c): 111001]

 [a: 31]  [b: 37]  [c: 58]
 [toBin(a): 11111]  [toBin(b): 100101]  [toBin(c): 111010]

 [a: 64]  [b: 128]  [c: 192]
 [toBin(a): 1000000]  [toBin(b): 10000000]  [toBin(c): 11000000]

 [a: 65]  [b: 130]  [c: 195]
 [toBin(a): 1000001]  [toBin(b): 10000010]  [toBin(c): 11000011]

 [a: 66]  [b: 131]  [c: 193]
 [toBin(a): 1000010]  [toBin(b): 10000011]  [toBin(c): 11000001]

 [a: 67]  [b: 129]  [c: 194]
 [toBin(a): 1000011]  [toBin(b): 10000001]  [toBin(c): 11000010]

 [a: 68]  [b: 136]  [c: 204]
 [toBin(a): 1000100]  [toBin(b): 10001000]  [toBin(c): 11001100]

 [a: 69]  [b: 138]  [c: 207]
 [toBin(a): 1000101]  [toBin(b): 10001010]  [toBin(c): 11001111]

 [a: 70]  [b: 139]  [c: 205]
 [toBin(a): 1000110]  [toBin(b): 10001011]  [toBin(c): 11001101]

 [a: 71]  [b: 137]  [c: 206]
 [toBin(a): 1000111]  [toBin(b): 10001001]  [toBin(c): 11001110]

 [a: 72]  [b: 140]  [c: 196]
 [toBin(a): 1001000]  [toBin(b): 10001100]  [toBin(c): 11000100]

 [a: 73]  [b: 142]  [c: 199]
 [toBin(a): 1001001]  [toBin(b): 10001110]  [toBin(c): 11000111]

 [a: 74]  [b: 143]  [c: 197]
 [toBin(a): 1001010]  [toBin(b): 10001111]  [toBin(c): 11000101]

 [a: 75]  [b: 141]  [c: 198]
 [toBin(a): 1001011]  [toBin(b): 10001101]  [toBin(c): 11000110]

 [a: 76]  [b: 132]  [c: 200]
 [toBin(a): 1001100]  [toBin(b): 10000100]  [toBin(c): 11001000]

 [a: 77]  [b: 134]  [c: 203]
 [toBin(a): 1001101]  [toBin(b): 10000110]  [toBin(c): 11001011]

 [a: 78]  [b: 135]  [c: 201]
 [toBin(a): 1001110]  [toBin(b): 10000111]  [toBin(c): 11001001]

 [a: 79]  [b: 133]  [c: 202]
 [toBin(a): 1001111]  [toBin(b): 10000101]  [toBin(c): 11001010]

 [a: 80]  [b: 160]  [c: 240]
 [toBin(a): 1010000]  [toBin(b): 10100000]  [toBin(c): 11110000]

 [a: 81]  [b: 162]  [c: 243]
 [toBin(a): 1010001]  [toBin(b): 10100010]  [toBin(c): 11110011]

 [a: 82]  [b: 163]  [c: 241]
 [toBin(a): 1010010]  [toBin(b): 10100011]  [toBin(c): 11110001]

 [a: 83]  [b: 161]  [c: 242]
 [toBin(a): 1010011]  [toBin(b): 10100001]  [toBin(c): 11110010]

 [a: 84]  [b: 168]  [c: 252]
 [toBin(a): 1010100]  [toBin(b): 10101000]  [toBin(c): 11111100]

 [a: 85]  [b: 170]  [c: 255]
 [toBin(a): 1010101]  [toBin(b): 10101010]  [toBin(c): 11111111]

 [a: 86]  [b: 171]  [c: 253]
 [toBin(a): 1010110]  [toBin(b): 10101011]  [toBin(c): 11111101]

 [a: 87]  [b: 169]  [c: 254]
 [toBin(a): 1010111]  [toBin(b): 10101001]  [toBin(c): 11111110]

 [a: 88]  [b: 172]  [c: 244]
 [toBin(a): 1011000]  [toBin(b): 10101100]  [toBin(c): 11110100]

 [a: 89]  [b: 174]  [c: 247]
 [toBin(a): 1011001]  [toBin(b): 10101110]  [toBin(c): 11110111]

 [a: 90]  [b: 175]  [c: 245]
 [toBin(a): 1011010]  [toBin(b): 10101111]  [toBin(c): 11110101]

 [a: 91]  [b: 173]  [c: 246]
 [toBin(a): 1011011]  [toBin(b): 10101101]  [toBin(c): 11110110]

 [a: 92]  [b: 164]  [c: 248]
 [toBin(a): 1011100]  [toBin(b): 10100100]  [toBin(c): 11111000]

 [a: 93]  [b: 166]  [c: 251]
 [toBin(a): 1011101]  [toBin(b): 10100110]  [toBin(c): 11111011]

 [a: 94]  [b: 167]  [c: 249]
 [toBin(a): 1011110]  [toBin(b): 10100111]  [toBin(c): 11111001]

 [a: 95]  [b: 165]  [c: 250]
 [toBin(a): 1011111]  [toBin(b): 10100101]  [toBin(c): 11111010]

 [a: 96]  [b: 176]  [c: 208]
 [toBin(a): 1100000]  [toBin(b): 10110000]  [toBin(c): 11010000]

 [a: 97]  [b: 178]  [c: 211]
 [toBin(a): 1100001]  [toBin(b): 10110010]  [toBin(c): 11010011]

 [a: 98]  [b: 179]  [c: 209]
 [toBin(a): 1100010]  [toBin(b): 10110011]  [toBin(c): 11010001]

 [a: 99]  [b: 177]  [c: 210]
 [toBin(a): 1100011]  [toBin(b): 10110001]  [toBin(c): 11010010]

 [a: 100]  [b: 184]  [c: 220]
 [toBin(a): 1100100]  [toBin(b): 10111000]  [toBin(c): 11011100]

 [a: 101]  [b: 186]  [c: 223]
 [toBin(a): 1100101]  [toBin(b): 10111010]  [toBin(c): 11011111]

 [a: 102]  [b: 187]  [c: 221]
 [toBin(a): 1100110]  [toBin(b): 10111011]  [toBin(c): 11011101]

 [a: 103]  [b: 185]  [c: 222]
 [toBin(a): 1100111]  [toBin(b): 10111001]  [toBin(c): 11011110]

 [a: 104]  [b: 188]  [c: 212]
 [toBin(a): 1101000]  [toBin(b): 10111100]  [toBin(c): 11010100]

 [a: 105]  [b: 190]  [c: 215]
 [toBin(a): 1101001]  [toBin(b): 10111110]  [toBin(c): 11010111]

 [a: 106]  [b: 191]  [c: 213]
 [toBin(a): 1101010]  [toBin(b): 10111111]  [toBin(c): 11010101]

 [a: 107]  [b: 189]  [c: 214]
 [toBin(a): 1101011]  [toBin(b): 10111101]  [toBin(c): 11010110]

 [a: 108]  [b: 180]  [c: 216]
 [toBin(a): 1101100]  [toBin(b): 10110100]  [toBin(c): 11011000]

 [a: 109]  [b: 182]  [c: 219]
 [toBin(a): 1101101]  [toBin(b): 10110110]  [toBin(c): 11011011]

 [a: 110]  [b: 183]  [c: 217]
 [toBin(a): 1101110]  [toBin(b): 10110111]  [toBin(c): 11011001]

 [a: 111]  [b: 181]  [c: 218]
 [toBin(a): 1101111]  [toBin(b): 10110101]  [toBin(c): 11011010]

 [a: 112]  [b: 144]  [c: 224]
 [toBin(a): 1110000]  [toBin(b): 10010000]  [toBin(c): 11100000]

 [a: 113]  [b: 146]  [c: 227]
 [toBin(a): 1110001]  [toBin(b): 10010010]  [toBin(c): 11100011]

 [a: 114]  [b: 147]  [c: 225]
 [toBin(a): 1110010]  [toBin(b): 10010011]  [toBin(c): 11100001]

 [a: 115]  [b: 145]  [c: 226]
 [toBin(a): 1110011]  [toBin(b): 10010001]  [toBin(c): 11100010]

 [a: 116]  [b: 152]  [c: 236]
 [toBin(a): 1110100]  [toBin(b): 10011000]  [toBin(c): 11101100]

 [a: 117]  [b: 154]  [c: 239]
 [toBin(a): 1110101]  [toBin(b): 10011010]  [toBin(c): 11101111]

 [a: 118]  [b: 155]  [c: 237]
 [toBin(a): 1110110]  [toBin(b): 10011011]  [toBin(c): 11101101]

 [a: 119]  [b: 153]  [c: 238]
 [toBin(a): 1110111]  [toBin(b): 10011001]  [toBin(c): 11101110]

 [a: 120]  [b: 156]  [c: 228]
 [toBin(a): 1111000]  [toBin(b): 10011100]  [toBin(c): 11100100]

 [a: 121]  [b: 158]  [c: 231]
 [toBin(a): 1111001]  [toBin(b): 10011110]  [toBin(c): 11100111]

 [a: 122]  [b: 159]  [c: 229]
 [toBin(a): 1111010]  [toBin(b): 10011111]  [toBin(c): 11100101]

 [a: 123]  [b: 157]  [c: 230]
 [toBin(a): 1111011]  [toBin(b): 10011101]  [toBin(c): 11100110]

 [a: 124]  [b: 148]  [c: 232]
 [toBin(a): 1111100]  [toBin(b): 10010100]  [toBin(c): 11101000]

 [a: 125]  [b: 150]  [c: 235]
 [toBin(a): 1111101]  [toBin(b): 10010110]  [toBin(c): 11101011]

 [a: 126]  [b: 151]  [c: 233]
 [toBin(a): 1111110]  [toBin(b): 10010111]  [toBin(c): 11101001]

 [a: 127]  [b: 149]  [c: 234]
 [toBin(a): 1111111]  [toBin(b): 10010101]  [toBin(c): 11101010]

 [a: 256]  [b: 512]  [c: 768]
 [toBin(a): 100000000]  [toBin(b): 1000000000]  [toBin(c): 1100000000]

 [a: 257]  [b: 514]  [c: 771]
 [toBin(a): 100000001]  [toBin(b): 1000000010]  [toBin(c): 1100000011]

 [a: 258]  [b: 515]  [c: 769]
 [toBin(a): 100000010]  [toBin(b): 1000000011]  [toBin(c): 1100000001]

 [a: 259]  [b: 513]  [c: 770]
 [toBin(a): 100000011]  [toBin(b): 1000000001]  [toBin(c): 1100000010]

 [a: 260]  [b: 520]  [c: 780]
 [toBin(a): 100000100]  [toBin(b): 1000001000]  [toBin(c): 1100001100]

 [a: 261]  [b: 522]  [c: 783]
 [toBin(a): 100000101]  [toBin(b): 1000001010]  [toBin(c): 1100001111]

 [a: 262]  [b: 523]  [c: 781]
 [toBin(a): 100000110]  [toBin(b): 1000001011]  [toBin(c): 1100001101]

 [a: 263]  [b: 521]  [c: 782]
 [toBin(a): 100000111]  [toBin(b): 1000001001]  [toBin(c): 1100001110]

 [a: 264]  [b: 524]  [c: 772]
 [toBin(a): 100001000]  [toBin(b): 1000001100]  [toBin(c): 1100000100]

 [a: 265]  [b: 526]  [c: 775]
 [toBin(a): 100001001]  [toBin(b): 1000001110]  [toBin(c): 1100000111]

 [a: 266]  [b: 527]  [c: 773]
 [toBin(a): 100001010]  [toBin(b): 1000001111]  [toBin(c): 1100000101]

 [a: 267]  [b: 525]  [c: 774]
 [toBin(a): 100001011]  [toBin(b): 1000001101]  [toBin(c): 1100000110]

 [a: 268]  [b: 516]  [c: 776]
 [toBin(a): 100001100]  [toBin(b): 1000000100]  [toBin(c): 1100001000]

 [a: 269]  [b: 518]  [c: 779]
 [toBin(a): 100001101]  [toBin(b): 1000000110]  [toBin(c): 1100001011]

 [a: 270]  [b: 519]  [c: 777]
 [toBin(a): 100001110]  [toBin(b): 1000000111]  [toBin(c): 1100001001]


Process returned 0 (0x0)   execution time : 1.073 s
Press any key to continue.
*/
