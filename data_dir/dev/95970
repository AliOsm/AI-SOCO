#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>

using namespace std;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define all(x) (x).begin(), (x).end()
//#define int ll

const int MAXN = 1e5 + 100;
int a[MAXN];
int n;

void solve(int base) {
    set<int> setik;
    for (int i = 0; i < n; ++i) {
        if (a[i] < base) {
            setik.insert(base - a[i]);
        }
        else if (a[i] > base) {
            setik.insert(a[i] - base);
        }
    }
    if (setik.size() <= 1) {
        cout << "YES\n";
        exit(0);
    }
}

signed main() {

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifdef _offline
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif // _offline

    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    sort(a, a + n);
    solve(a[0]);
    solve(a[n - 1]);
    if ((a[0] + a[n - 1]) % 2 == 0) {
        solve((a[0] + a[n - 1]) / 2);
    }
    cout << "NO";
}
