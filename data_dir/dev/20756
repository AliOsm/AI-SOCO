/********************************************
*                                           *
*    Solved By : Bir Bahadur Khatri(B'ru)   *
*      Be Positive,be Happy.                *
*                                           *
*********************************************/
#define ff first
#define D double
#define sz size()
#define ss second
#define PB push_back
#define MP make_pair
#define SQR(n) (n*n)
#define CHR getchar()
#define NL printf("\n")
#include<bits/stdc++.h>
#define ULL unsigned LL
#define PI 2.0*acos(0.0)
#define LL long long int
#define S1(a) a=in<int>()
#define SL1(a) a=in<LL>()
#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define all(a) a.begin(),a.end()
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define S2(a,b) a=in<int>(),b=in<int>()
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define BitCnt(a) __builtin_popcountll(a)
#define MEM(a,val) memset(a,val,sizeof(a))
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define _cin ios_base::sync_with_stdio(0); cin.tie(0)
#define cp printf("***** here here here here *****\n");
#define trace1(x)                cerr << #x << ": " << x << endl;
#define InpOut freopen("A.in","r",stdin),freopen("A1.out","w",stdout)
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;
template <typename T> T in(){char ch;T n = 0;bool ng = false;while (1){ch = getchar();if (ch == '-'){ng = true;ch = getchar();break;}if (ch>='0' && ch<='9')     break;}while (1){n = n*10 + (ch - '0');ch = getchar();if (ch<'0' || ch>'9')   break;}return (ng?-n:n);}
template<typename T>inline T POW(T B,T P){ if(P==0) return 1; if(P&1) return B*POW(B,P-1);  else return SQR(POW(B,P/2));}
template<typename T>inline T Gcd(T a,T b){if(a<0)return Gcd(-a,b);if(b<0)return Gcd(a,-b);return (b==0)?a:Gcd(b,a%b);}
template<typename T>inline T Lcm(T a,T b) {if(a<0)return Lcm(-a,b);if(b<0)return Lcm(a,-b);return a*(b/Gcd(a,b));}
long long Bigmod(long long base, long long power, long long MOD){long long ret=1;while(power){if(power & 1)ret=(ret*base)%MOD;base=(base*base)%MOD;power>>=1;}return ret;}
bool isVowel(char ch){ ch=toupper(ch); if(ch=='A'||ch=='U'||ch=='I'||ch=='O'||ch=='E') return true; return false;}
template <typename T> LL isLeft(T a,T b,T c) {return(a.x-b.x)*(b.y-c.y)-(b.x-c.x)*(a.y-b.y);}
long long ModInverse(long long number, long long MOD){return Bigmod(number, MOD-2, MOD);}
bool isConst(char ch){if (isalpha(ch) && !isVowel(ch)) return true; return false;}
int toInt(string s)  { int sm; stringstream ss(s); ss>>sm; return sm; }
///**********************************************************//

#define MD1 1000000007ULL
#define MD2 1000000009ULL
#define MD3 1000000021ULL
#define BS1 10000019ULL
#define BS2 10000079ULL
#define BS3 10000103ULL
#define PUL pair<ULL,ULL>
#define PLL pair<LL,LL>
#define PII pair<int,int>

///         0123456789
#define MX  100007
#define MOD 1000000007
#define INF 2000000000
#define EPS 1e-9


/// ==========================================////

vector<int> A[MX];
vector<int> B[MX];

int isok(int n) {
    while(n){
        int tp=n%10;
        if(tp==4||tp==7) {
            n=n/10;
        }
        else return 0;
    }
    return 1;
}

int dp[MX];

int St[MX],Ed[MX],tme;
vector<int> Tree[MX*3];

int Sze[MX];


void dfs(int u,int p,int koto) {
    St[u]=++tme;
    dp[tme]=koto;
    Sze[u]=1;
    F(i,0,A[u].sz) {
        int v=A[u][i];
        if(v==p) continue;
        dfs(v,u,koto+isok(B[u][i]));
        Sze[u]+=Sze[v];
    }
    Ed[u]=tme;
}

void Build(int id,int l,int r) {
    if(l==r) {
        Tree[id].PB(dp[l]);
        return;
    }

    int mid=(l+r)/2;
    int lft=2*id;
    int rgt=lft+1;

    Build(lft,l,mid);
    Build(rgt,mid+1,r);

    int lf=0,rg=0;

    while(lf<Tree[lft].sz&&rg<Tree[rgt].sz) {
        if( Tree[lft][lf]<=Tree[rgt][rg] ) {
            Tree[id].PB(Tree[lft][lf]);
            lf++;
        }
        else {
            Tree[id].PB(Tree[rgt][rg]);
            rg++;
        }
    }

    while(lf<Tree[lft].sz) {
        Tree[id].PB( Tree[lft][lf] );
        lf++;
    }

    while(rg<Tree[rgt].sz) {
        Tree[id].PB( Tree[rgt][rg] );
        rg++;
    }
}
int val;
int Qry(int id,int l,int r,int st,int ed) {
    if(st<=l&&ed>=r) {
        int tp=upper_bound(all(Tree[id]),val)-Tree[id].begin();
        tp=Tree[id].sz-tp;
        return tp;
    }

    int mid=(l+r)/2;
    int lft=2*id;
    int rgt=lft+1;

    if(ed<=mid)         return Qry(lft,l,mid,st,ed);
    else if(st>mid)     return Qry(rgt,mid+1,r,st,ed);
    else {
                        return Qry(lft,l,mid,st,ed)+Qry(rgt,mid+1,r,st,ed);
    }
}

LL ans;

void yes(int u,int p,int pv) {

    int s=St[pv],e=Ed[pv];
    val=dp[ s ];
    LL now=tme-( Sze[pv] );

    now+=Qry(1,1,tme,s,e);
//    trace2(u,now)
    now=(now*(now-1));

    ans=(ans+now);

    F(i,0,A[u].sz) {
        int v=A[u][i];
        int k=B[u][i];
        k=isok(k);
        if(v==p) continue;
        int np=pv;
        if(k) np=v;
        yes(v,u,np);
    }
}

int main()
{
    int n;
    S1(n);

    F(i,1,n) {
        int c,a,b;
        S3(a,b,c);
        A[a].PB(b);
        B[a].PB(c);

        A[b].PB(a);
        B[b].PB(c);
    }

    dfs(1,0,0);

    Build(1,1,n);

    yes(1,0,1);

    cout<<ans<<endl;

    return 0;
}
///============= Thank You ===================///