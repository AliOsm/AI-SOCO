#include "bits/stdc++.h"
using namespace std;

long long calc(long long each, vector<int>& v, int a, int r, int m) {
    int n = v.size();
    long long lft = 0, rgt = 0;
    for(int i = 0; i < n; ++i) {
        if(v[i] < each) {
            lft += each - v[i];
        } else if(v[i] > each) {
            rgt += v[i] - each;
        }
    }
    long long common = min(lft, rgt);
    long long cur = 1LL * common * m;
    cur += 1LL * a * (lft - common) + 1LL * r * (rgt - common);

    long long cur2 = 1LL * a * lft + 1LL * r * rgt;
    return min(cur, cur2);
}

int main() {
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    int t; t = 1;
    while(t--) {
        int n, a, r, m; cin >> n >> a >> r >> m;
        vector<int> v(n);
        for(int i = 0; i < n; ++i) cin >> v[i];
        sort(v.begin(), v.end());
        vector<long long> pref(n, 0);
        pref[0] = v[0];
        for(int i = 1; i < n; ++i) {
            pref[i] = pref[i - 1] + v[i];
        }
        long long ans = (long long) 4e18;

        int lo = 0, hi = 1e9;

        while(lo <= hi) {
            int mid1 = lo + (hi - lo) / 3;
            int mid2 = lo + (hi - lo) * 2 / 3;
            long long cst1 = calc(mid1, v, a, r, m);
            long long cst2 = calc(mid2, v, a, r, m);
            if(cst1 < cst2) {
                ans = min(ans, cst1);
                hi = mid2 - 1;
            } else {
                ans = min(ans, cst2);
                lo = mid1 + 1;
            }
        }

        cout << ans << '\n';
    }
    return 0;
}