#include <bits/stdc++.h>
using namespace std;

int const LOG = 19;
int const N = 100100;

long long x[N], y[N];
int anc[LOG][N], d[N];

int turn(int a, int b, int c) {
    long long cross = (x[b] - x[a]) * (y[c] - y[b]) - (y[b] - y[a]) * (x[c] - x[b]);
    return cross > 0 ? 1 : cross < 0 ? -1 : 0;
}

int go_up(int v, int d) {
    for (int i = 0; d > 0; ++i, d /= 2) {
        if (d % 2 == 1) {
            v = anc[i][v];
        }
    }
    return v;
}

int main() {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
        scanf("%lld%lld", x + i, y + i);
    }
    static int h[N];
    int sz = 0;
    for (int i = n - 1; i >= 0; --i) {
        while (sz > 1 && turn(h[sz - 2], h[sz - 1], i) < 0)
            --sz;
        anc[0][i] = sz > 0 ? h[sz - 1] : i;
        d[i] = d[anc[0][i]] + 1;
        h[sz++] = i;
        //cerr << i + 1 << " -> " << anc[0][i] + 1 << '\n';
    }
    for (int i = 1; i < LOG; ++i) {
        for (int j = 0; j < n; ++j) {
            anc[i][j] = anc[i - 1][anc[i - 1][j]];
        }
    }
    int m;
    scanf("%d", &m);
    for (int it = 1; it <= m; ++it) {
        int a, b;
        scanf("%d%d", &a, &b);
        --a, --b;
        a = go_up(a, d[a] - d[b]);
        b = go_up(b, d[b] - d[a]);
        if (a == b) {
            cout << a + 1 << ' ';
        } else {
            for (int i = LOG - 1; i >= 0; --i) {
                if (anc[i][a] != anc[i][b]) {
                    a = anc[i][a];
                    b = anc[i][b];
                }
            }
            cout << anc[0][a] + 1 << ' ';
        }
    }
    cout << '\n';
}
