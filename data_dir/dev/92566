




#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <cstdio>

#define ll long long
#define ld long double
#define pb push_back
#define mp make_pair
#define int long long

using namespace std;

const int INF = 2e9;
const int MOD = 998244353;

vector<vector<int>> ans;
int n, k, d;
void rec(int l, int r, int day) {
	if (day > d) return;
	int d = (r - l + 1) / k + ((r - l + 1) % k == 0 ? 0 : 1);
	
	for (int i = l; i <= r; i++) {
		ans[day][i] = (ans[day - 1][i] + (i - l) / d) % k;
	}

	for (int left = l, right = l + d - 1;; left += d, right += d) {
		rec(left, min(right, r), day + 1);
		if (right >= r) break;
	}
}

void solve(){
	cin >> n >> k >> d;
	if (k >= n) {
		for (int i = 0; i < d; i++) {
			for (int j = 1; j <= n; j++) {
				cout << j << " ";
			}
			cout << '\n';
		}
		return;
	}

	if (k == 1 || pow(k, d) < n) {
		cout << -1;
		return;
	}
	
	ans.resize(d + 1, vector<int>(n));
	rec(0, n - 1, 1);

	for (int i = 1; i <= d; i++) {
		for (int j = 0; j < n; j++) {
			cout << (ans[i][j] + 1) << " ";
		}
		cout << '\n';
	}
}
signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	/*
	freopen("nenokku_easy.in", "r", stdin);
	freopen("nenokku_easy.out", "w", stdout);
	*/
	
	solve();
}