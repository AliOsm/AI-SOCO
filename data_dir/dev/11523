/*
    NO 
        TIME 
            TO 
                DIE
                    --007
                            */
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
//#include <boost/functional/hash.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef long long int lli;
#define mod 1000000007
#define OS //single input use oeis
lli INF=1e17;
lli eps=1e-8;
#define IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define sqr(x) (x) * (x)
#define bip(n) __builtin_popcountll(n)//no of ones bit in binary!!
#define bictz(n) __builtin_ctzll(n)//no of trailing zeroes in binary!!
#define biclz(n) __builtin_clzll(n)//no of leading zeroes in binary!!
#define bffs(n) __builtin_ffsll(n)//index of first one bit!!
typedef pair<lli,lli> ll;
#define mem1(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem2(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem3(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
int fmx(int x, int y) { return (((y-x)>>(31))&(x^y))^y; }
int fmi(int x, int y) { return (((y-x)>>(31))&(x^y))^x; }
typedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update> ost;
lli n,q,z,k,x,c,m;
const double pi=3.14159265358979323846;
lli add(lli a, lli b) {
 	lli res = a + b;
 
 	while (res >= mod) res -= mod;
 
 	while (res < 0) res += mod;
 
 	return res;
}
// Thi
//matrix exponentiation is associative and distributive
// lli dp[2][2000005][2];
lli a[200005];
lli vis[200005][2];
lli y[200005][2];
lli dfs(lli i,lli cnt)
{
    if(i>n||i<1)
    return 0;
    if(vis[i][cnt&1])
    {
        if(y[i][cnt&1]==0)
        return -1;
        return y[i][cnt&1];
    }
    vis[i][cnt&1]=1;
    if(cnt&1)
    {
    lli dd=dfs(i+a[i],cnt+1);
    if(dd>=0)
    y[i][cnt&1]=dd+a[i];
    else
    y[i][cnt&1]=-1;
    }
    else
    {
    lli dd=dfs(i-a[i],cnt+1);
    if(dd>=0)
    y[i][cnt&1]=dd+a[i];
    else
    y[i][cnt&1]=-1; 
    }
    // cout<<i<<" "<<y[i][cnt&1]<<"\n";
    return y[i][cnt&1];
}

int main()
{
 IO;
 OS;
 cin>>n;
 for(int i=2;i<=n;i++)
 cin>>a[i];
 
 for(int i=1;i<n;i++)
 {
    //  vis[i]=1;
     lli dd=dfs(i+1,2);
     if(dd>=0)
     cout<<dd+i<<"\n";
     else
     cout<<-1<<"\n";
 }
 
 
}