#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
const int N = 200002;
const ll MOD = 1000000007;
const double EBS = 1e-7;

int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};

//ll GCD(ll num,ll ones) { return !ones ? num : GCD(ones,num%ones); }
//ll lcm(ll a, ll b) { return (a / GCD(a, b)) * b; }
//double Len(int x,int y,int X,int Y) { return sqrt((X-x)*(X-x)+(Y-y)*(Y-y)); }
/*ll fastP(ll b,ll p)
{
    if(p==0) return 1;
    else if(p==1) return b;
    ll a = fastP(b,p/2);
    if(p%2) return (((a*a))*b);
    else return (a*a);
}*/
//----------------- ------   -------
set<int>adj[N]; vector<int>v;
int n;
bool bfs()
{
    queue<int>q; int idx = 1;
    q.push(1);
    while(!q.empty())
    {
        int cur = q.front(); q.pop();
        for(int i=0;i<sz(adj[cur]);++i)
        {
            if(adj[cur].find(v[idx])==adj[cur].end())
                return 0;
            q.push(v[idx]);
            adj[v[idx]].erase(cur);
            idx++;
        }
    }
    return 1;
}
int main()
{
#ifndef ONLINE_JUDGE
    //freopen("i.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    sc(n); int x,y;
    for(int i=1;i<n;++i)
    {
        sc(x); sc(y);
        adj[x].insert(y);
        adj[y].insert(x);
    }
    for(int i=0;i<n;++i) sc(x),v.push_back(x);

    if(v[0]!=1)
        return puts("No");
    if(bfs()) return puts("Yes");
    else return puts("No");
    return 0;
}
