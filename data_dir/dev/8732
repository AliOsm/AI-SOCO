#include <cmath>
#include <vector>
#include <iostream>
#include <limits>
#include <iostream>
#include <vector>
#include <cassert>
#include <complex>
#include <cstdio>
#include <cstring>
#include <map>
#include <cmath>
#include <set>
#include <queue>
#include <algorithm>


using namespace std;
typedef long long Long;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;

struct Point{
	int x,y;
	Point(int x,int y):x(x),y(y){}
	double sqDist(Point &P){
		return (x-P.x)*(x-P.x) + (y-P.y)*(y-P.y);
	}
};
bool valid(Point A, Point B, Point C){
	if(A.x == B.x || A.x == C.x || C.x == B.x)return false;
	if(A.y == B.y || A.y == C.y || C.y == B.y)return false;
	int ab = A.sqDist(B);
	int ac = A.sqDist(C);
	int bc = B.sqDist(C);
	vector<int > V = {ab,ac,bc};
	sort(V.begin(),V.end());
	return V[0] + V[1] == V[2];
}

void prin(Point A, Point B, Point C){
	cout << "YES" << endl;
	cout << A.x << " " << A.y << endl;
	cout << B.x << " " << B.y << endl;
	cout << C.x << " " << C.y << endl;
}

int main()
{
	int A,B;
	cin >> A >> B;
	for(int i = 1; i < A; ++i){
		int aa = i;
		int ab = sqrt(A*A-aa*aa)+1e-9;
		if(ab*ab+aa*aa == A*A){
			for(int j = 1; j < B; ++j){
				int ba = j;
				int bb = sqrt(B*B-ba*ba)+1e-9;
				if(ba*ba+bb*bb == B*B){
					Point a(0,0);
					Point b(aa,ab);
					Point c(-ba,bb);
					if(valid(a,b,c)){
						prin(a,b,c);
						return 0;
					}
				}
			}
		}
	}
	cout << "NO" << endl;
	
}

/*

3 1 2 1
4 7 52 9
7 1 2 1
3 9 52 4
1 2 3 4
5 10 7 8
1 2 3 4
5 8 7 10
34 5 6 998
4 17 77 84
34 5 6 998
4 17 77 8481


 */

