#define _USE_MATH_DEFINES
#define _CRT_NO_DERPECATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <memory.h>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <utility>
#include <algorithm>
#include <functional>
#include <complex>
 
 
using namespace std;
 
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
#define sq(x) ((x)*(x))
#define INF ((int)(2e9))
#define LINF ((int64)(2e18))
#define EPS ((double)(1e-9))
#define MOD ((int64)(1e9 + 9))
 
const int MAXN = 300001;


int n, m, k, s;
int cur[2][MAXN];
pii mn[2][MAXN];
pii gad[MAXN];
int64 qq[MAXN];
pii res[MAXN];

bool fun(int x)
{
    int mc[2] = {mn[0][x].first, mn[1][x].first};
    for(int i = 0; i < m; ++i)
    {
        qq[i] = mc[gad[i].first] * (int64) gad[i].second;   
    }
    sort(qq, qq + m);
    int64 su = 0;
    for(int i = 0; i < k; ++i)
    {
        su += qq[i];
    }
    if (su > s)
        return 0;
    return 1;
}

void solve()
{   
    cin >> n >> m >> k >> s;
    for(int i = 0; i < n; ++i)
        cin >> cur[0][i];
    for(int i = 0; i < n; ++i)
        cin >> cur[1][i];
    
    for(int i = 0; i < m; ++i)
    {
        cin >> gad[i].first >> gad[i].second;
        gad[i].first--;
    }

    for(int i = 0; i < 2; ++i)
    {
        for(int j = 0; j < n; ++j)
        {
            if (j)
                mn[i][j] = min(mn[i][j - 1], pii(cur[i][j], j));
            else
                mn[i][j] = pii(cur[i][j], j);
        }
    }
    int l = 0, r = n - 1, mid, ans = -1;
    while(l <= r)
    {
        mid = (l + r) >> 1;
        if (fun(mid))
        {
            ans = mid;
            r = mid - 1;
        }
        else
        {
            l = mid + 1;
        }
    }
    if (ans == -1)
    {
        cout << ans;
        return;
    }
    cout << ans + 1 << endl;
    int mc[2] = {mn[0][ans].first, mn[1][ans].first};
    int d[2] = {mn[0][ans].second, mn[1][ans].second};
    for(int i = 0; i < m; ++i)
        res[i] = pii(mc[gad[i].first] * gad[i].second, i);
    sort(res, res + m);

    for(int i = 0; i < k; ++i)
    {
        cout << res[i].second + 1 << ' ' << d[gad[res[i].second].first] + 1;
        cout << '\n';
    }
}
 
int main()
{
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
#endif
    int t;
     ios_base::sync_with_stdio(false); cin.tie(0);
    
    solve();
    
    return 0;
} 