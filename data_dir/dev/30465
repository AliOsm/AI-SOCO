// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=22;
const ll N=1e5+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

ll n,m;
string a,b;
set<ll> fac;

bool F(ll len)
{
	string s="\0";
	for(ll i=0;i<len;i++){s+=a[i];}
	for(ll i=0;i<n;i+=len)
	{
		string y="\0";
		ll j=i,cnt=0;
		while(j<n&&cnt<len){y+=a[j];j++;cnt++;}
		if(cnt!=len||y!=s){return false;}
	}
	for(ll i=0;i<m;i+=len)
	{
		string y="\0";
		ll j=i,cnt=0;
		while(j<m&&cnt<len){y+=b[j];j++;cnt++;}
		if(cnt!=len||y!=s){return false;}
	}
	return true;
}

void DIV(ll k)
{
  for(ll i=1;i<=sqrt(k);i++)
  {
    if(k%i==0)
    {
      if(k/i==i){fac.insert(i);}
      else{fac.insert(i);fac.insert(k/i);}
    }
  }
}

int main()
{
	OPT;
	cin>>a>>b;
	n=a.length();
	m=b.length();
	if(n>m){swap(a,b);swap(n,m);}
	DIV(n);
	ll cnt=0;
	for(auto i=fac.begin();i!=fac.end();i++)
	{
		if(F(*i)){cnt++;}
	}
	cout<<cnt<<endl;
}
