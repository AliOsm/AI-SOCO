// stay in my memory
#include <bits/stdc++.h>
//#define int long long
#define hash hashhash
#define X first
#define Y second
#define endl "\n"
#define Mp make_pair
using namespace std;
inline int in(){int32_t x ; scanf("%d",&x) ; return x ; }
inline long long lin(){long long x ; scanf("%lld",&x) ; return x ;}
char ch[4000010];
inline string get(){ scanf("%s",ch) ; return string(ch) ; }
inline void read(int *a , int n ) { for (int i = 0 ; i < n ; i ++) a[i] = in() ; }
template <class blank> inline void out(blank x) {cout << x << endl ; exit(0) ;}
template <class blank , class blank2> inline void smin(blank &a , blank2 b) {a = a <= b ? a : b ;}
template <class blank , class blank2> inline void smax(blank &a , blank2 b) {a = a >= b ? a : b ;}
typedef pair<int , int > pii;
typedef long double ld;
typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<pii> vii;
const int maxn  = 5e5 + 10;
const int maxm = 4e6 + 10;
const int maxlg = 20;
const int base = 29;
const int mod = 1e9 + 7;
const int inf = 2e18 + 10;
const double eps = 1e-9;
bool mark[maxn];
char str[2][50] = {"LEFT","RIGHT"};
int32_t main()
{
    int n = in() , k = in();
    string s = get();
    int dir = (k <= n - k ? -1 : 1);
    k --;
    int target = dir == -1 ? n - 1 : 0;
    while (true)
    {
        if (!mark[k])
            printf("PRINT %c\n",s[k]);
        mark[k] = true;
        if (k == 0) dir = 1;
        if (k == n - 1) dir = -1;
        if (k == target) break;
        printf("%s\n",str[dir == -1 ? 0 : 1]);
        k += dir;
    }
    
}
