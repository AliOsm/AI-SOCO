#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef long double real;

#ifdef WIN32
#define INT64 "%I64d"
#define UINT64 "%I64u"
#else
#define INT64 "%lld"
#define UINT64 "%llu"
#endif

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

int const MAX_N = 1000006;
int const MAX_C = 0x3F3F3F3F;
int const NA = -1;

char s [MAX_N];
bool b [MAX_N];
int n;
bool invert;

inline bool get (int i)
{
 return b[i] ^ invert;
// return b[i] ^ (invert && (i < n - 1));
}

int main (void)
{
 s[0] = '0';
 while (scanf (" %s", s + 1) != EOF)
 {
  n = strlen (s);
  s[n] = '0';
  for (int i = 0; i <= n; i++)
   b[i] = (s[i] == '1');

  invert = false;
  int res = 0;
  int pos = 0;
  while (pos < n)
  {
   if (get (pos))
   {
    invert ^= 1;
    if (!get (pos + 1))
    {
     res++;
     pos++;
    }
    else
    {
     invert ^= 1;
     res++;
     pos++;
    }
   }
   else
    pos++;
  }
  res += invert;

  printf ("%d\n", res);
 }

 return 0;
}
