#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <memory.h>
#include <set>
#include <ctime>
#include <map>
#include <cstring>
#include <iterator>
#include <queue>
#include <assert.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>

using namespace std;



#define pb push_back
#define pii pair<int, int>
#define mp make_pair
#define ull unsigned long long
#pragma comment(linker, "/STACK:64000000")
#define null NULL
#define forn(i, n) for (int i = 0; i < (n); ++i)
#define fornr(i, n) for (int i = (n); i >= 0; --i)
#define forab(i, a, b) for (int i = (a); i < (b); ++i)

typedef long double ld;
typedef pair<ld, ld> pldld;
typedef long long ll;
typedef pair<ll, ll> pll;


typedef unsigned int ui;
typedef unsigned char uc;
const int infi = 1e9 + 7;
const ll infl = 1e18 + 7;

int ar[55][55];
int used[55][55];
int dx[] = {0, 0, 1, -1};
int dy[] = {1, -1, 0, 0};
int n, m;
int flag_oc;
int check(int x, int y) {
	if (x < 0 || y < 0 || x >= n || y >= m) {
		flag_oc = 1;
		return 0;
	}
	return ar[x][y] && !used[x][y];
}

int get_size(int x, int y) {
	if (!check(x, y))
		return 0;
	used[x][y] = 1;
	int ans = 1;
	for (int i = 0; i < 4; ++i) {
		ans += get_size(x + dx[i], y + dy[i]);
	}
	return ans;
}
void paint(int x, int y) {
	if (!check(x, y))
		return;
	used[x][y] = 1;
	ar[x][y] = 0;
	forn(i, 4)
		paint(x + dx[i], y + dy[i]);
	return;
}

int main() {
	cin.sync_with_stdio(false);
	cin.tie(0);
//	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
	//freopen("ufo.in", "r", stdin);freopen("ufo.out", "w", stdout);
	int k;
	cin >> n >> m >> k;
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			char c;
			cin >> c;
			if (c == '.')
				ar[i][j] = 1;
		}
	}
	vector <pair<int, pii> > lst;
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			flag_oc = 0;
			int a = get_size(i, j);
			if (a && !flag_oc) {
				lst.push_back(mp(a, mp(i, j)));
			}
		}
	}
	int ans = 0;
	memset(used, 0, sizeof(used));
	sort(lst.begin(),lst.end());
	reverse(lst.begin(), lst.end());
	while ((int)lst.size() > k) {
		pii a = lst.back().second;
		ans += lst.back().first;
		lst.pop_back();
		paint(a.first, a.second);
	}
	cout << ans << '\n';
	for (int i = 0; i < n; ++i) {
		for (int j = 0 ; j < m; ++j)
			if (ar[i][j])
				cout << '.';
			else
				cout << '*';
		cout << '\n';
	}

	return 0;
}