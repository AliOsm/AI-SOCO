#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>

using namespace std;
using namespace __gnu_pbds;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long long long 

typedef trie<string,null_type,trie_string_access_traits<>,pat_trie_tag,trie_prefix_search_node_update> pref_trie;
typedef tree<long int,null_type,less<long int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;
typedef cc_hash_table<long int,long int, hash<long int>, equal_to<long int>, direct_mask_range_hashing<long int>, 
hash_standard_resize_policy<hash_exponential_size_policy<>, hash_load_check_resize_trigger<true>, true>> ht;


int main(){
   IOS;
 //    #ifndef ONLINE_JUDGE
 //        freopen("in.txt",  "r",  stdin);
 //        freopen("out.txt", "w", stdout);
 //    #endif
   

   long int n,m;
   cin>>n>>m;

   if(m == 0 && n == 1)
   	return cout<<"0 0",0;
   if(m == 0 || m > 9 * n)
   	return cout<<"-1 -1", 0;

   vector<long int> small(n) , large(n);
   small[n-1] = 1;
   large[0] = 1;
   m--;
   auto copy = m;

   for(long int i = 0; i < n && m; i++){
   		long int diff = min(9 - small[i],m);
   		m -= diff;
   		small[i] += diff;
   }

   for(long int i = n-1; i >= 0; i--)
   	cout<<small[i];
   cout<<" ";

   for(long int i = 0; i < n && copy; i++){
   		long int diff = min(9 - large[i],copy);
   		copy -= diff;
   		large[i] += diff;
   }

   for(long int i = 0; i < n; i++)
   	cout<<large[i];

   return 0;
}