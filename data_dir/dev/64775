#include <bits/stdc++.h>
/*
*
*
*    Author by Mouhanad
*
*/
using namespace std;
typedef long long ll;
#define F first
#define S second
#define ii pair < int , int >
int n , m , color = 0;


char grid [2005][2005];
int vis [2005][2005];
int ans [1000000];

int X [] = { 1 , -1 , 0 , 0 };
int Y [] = { 0 , 0 , 1 , -1 };


inline bool inside ( int  x , int y)
{
    return x >=0 && x < n && y >= 0 && y < m ;
}
int floodfill ( int x , int y )
{
if ( vis[x][y] == color )return 0;

vis[x][y] = color ;

ll ret = 0 ;

for ( int k = 0 ; k < 4 ; k++ )
{    int nx = x + X[k] ;
     int ny = y + Y[k] ;
    if ( inside(nx,ny))
    {
        if ( grid[nx][ny] =='*')
            ret++;
            else ret += floodfill(nx,ny);
    }
}
return ret ;
}
int main()
{
   int k ;

    scanf("%d %d %d" , &n , &m , &k);

    for ( int i = 0 ; i < n ; i++)
    {
        scanf("%s",&(grid[i]));
    }
    for ( int i = 0 ; i < n ; i++)
    {
        for ( int  j = 0 ; j < m ; j++)
        {
            if ( !vis[i][j] && grid [i][j] == '.' )
            {
                ++color;

                ans[color] = floodfill(i,j);

            }
        }
    }

    while ( k -- )
    {
        int x , y ;


     scanf("%d %d", &x , &y );
            x--,y--;
            printf("%d\n", ans[vis[x][y]] );
    }

   /* for ( int  i = 0 ; i < n ; i++)
    {
        for ( int j = 0 ; j < m ; j++)
            cout<<grid[i][j]<<" " ;
        cout<<endl;
    }*/

    return 0 ;


}
