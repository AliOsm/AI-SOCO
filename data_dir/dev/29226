//  amiD
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define endl '\n'
#define Endl '\n'
#define ii pair<ll, ll>
#define fi first
#define se second
#define ld long double
#define mod 1000000007
using namespace std;
ll a[100010];
ll n, c;
ll t[400010];
void build(int pos, int l, int r){
    if(l==r){
        t[pos]=a[l];
        return;
    }
    int md=(l+r)/2;
    build(2*pos,l,md);
    build(2*pos+1, md+1, r);
    t[pos]=min(t[2*pos], t[2*pos+1]);
}
int qst, qen;
ll q(int pos, int l, int r){
    if(qst>r || l>qen)return 1e10;
    if(qst<=l && qen>=r)return t[pos];
    int md=(l+r)/2;
    return min(q(2*pos, l, md), q(2*pos+1, md+1, r));
}
ll mn7[100010];
ll amid[100010];
ll dp[100010];
ll cal(int pos){
    if(pos+c-1>n)return 0;
    ll &ret=dp[pos];
    if(ret!=-1)return ret;
    ret++;
    ret=cal(pos+1);
    ret=max(ret, mn7[pos]+cal(pos+c));
    return ret;
}
int main(){
    cin>>n>>c;
    ll sum=0;
    ll mx=0;
    for(int i=1;i<=n;i++)cin>>a[i], sum+=a[i];
    a[n+1]=1e18;
    build(1,1,n);
    for(int i=1;i<=n;i++){
        qst=i; qen=min(n, i+c-1);
        if(i+c-1>n)mn7[i]=0;
        else mn7[i]=q(1,1,n);
        amid[i%c]+=mn7[i];
        mx=max(mx, amid[i%c]);
    }
    memset(dp,-1,sizeof dp);
    cout<<sum-cal(1)<<endl;
}
