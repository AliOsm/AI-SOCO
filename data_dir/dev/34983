#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define f first
#define s second
#define bp push_back
#define mp make_pair
const int mx=2e5+10;
const double eps=1e-9;
const int inf=1e9+1;
int a[mx];
struct trie{
    int cnt;
    trie *zero,*one;
    trie(){
        cnt=0;
        zero=one=0;
    }
};
int getcount(trie *tr){
    if(tr==0) return 0;
    return tr->cnt;
}
void add(trie *tr,int bit,int num,int counter){
    tr->cnt+=counter;
    if(bit==-1)return ;
    if(!(num&(1<<bit))){
        if(tr->zero==0)tr->zero=new trie();
        add(tr->zero,bit-1,num,counter);
    }
    else{
        if(tr->one==0)tr->one=new trie();
        add(tr->one,bit-1,num,counter);
    }
}
int countt(trie *tr,int bit,int num){
    if(tr==0)return 0;
    if(bit==-1)return 0;
    if(!(num&(1<<bit))) return getcount(tr->one)+countt(tr->zero,bit-1,num);

    else return countt(tr->one,bit-1,num);

}
pair<pair<int,int>,int> p[mx];
main(){
    int n;
    trie *root=new trie();
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        int l,r;
        scanf("%d%d",&l,&r);
        add(root,31,l+inf,1);
        p[i].f.f=r;
        p[i].f.s=l;
        p[i].s=i;
    }
    int ans[mx];
    sort(p+1,p+1+n);
    for(int i=n;i>0;i--){
        int tmp=p[i].f.s+inf;
        add(root,31,tmp,-1);
        int idx=p[i].s;
        ans[idx]=countt(root,31,tmp-1);
    }
    for(int i=1;i<=n;i++)printf("%d\n",ans[i]);
}
