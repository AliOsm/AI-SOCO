// g++ -std=c++14 -O2 -Wall -Wextra a.cpp
//In The Name Of God :
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
using namespace std ;
using namespace __gnu_pbds;
#define X first 
#define Y second
#define int long long
typedef long long ll ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define ALL(x) (x).begin(),(x).end()
#define size(x) ((int)((x).size()))
typedef pair < int , int > pii ; 
typedef pair < pii , int > pii_i ;
typedef pair < int , pii > pi_ii ;
typedef pair < pii , pii > pii_ii ;
#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%
const int maxL = 70 ;
//const int inf = 1e9+100 ;
typedef long long ll ;
int mod = 1e9+7 ;
ll mod1 = 1e9+7 ;
int inf = 5e4 ;
typedef long double ld ;
const int maxn = 5e3+100 ;
const int baze = 330 ;
#define next rerekewlrejgtlilrelfd

int dp [ maxn ] [ maxn ] ;
int n ;
char ar [ maxn ] ;
int hlp [ maxn ] ;

int32_t main ( )
{
  fast ;
  cin >> n ;
  string s  ;
  for ( int i = 1 ; i <= n ; i ++)
    {
      cin >> s ;
      ar [ i ] = s [ 0 ] ;
    }
  for ( int i = 0 ; i < maxn ; i ++) 
    dp [ n + 1 ] [ i ] = 1 ;
  for ( int i = n ; i > 0 ; i -- )
    if ( ar [ i ] == 's' )
      hlp [ i ] = i ;
    else
      hlp [ i ] = hlp [ i + 1 ] ;
  for ( int i = n ; i > 0 ; i -- )
    for ( int j = 0 ; j <= n ; j ++ )
      if ( ar [ i ] == 'f' )
	{
	  if ( j )
	    dp [ i ] [ j ] += dp [ i ] [ j - 1 ] ; 
	  dp [ i ] [ j ] += dp [ hlp [ i ] + 1 ] [ j + hlp [ i ] - i ] ;
	  dp [ i ] [ j ] %= mod ;
	}
      else
	{
	  dp [ i ] [ j ] =dp [ i + 1 ] [ j ];
	  if ( j ) 
	    dp [ i ] [j ] += dp [ i ] [ j - 1 ] ;
	  dp [ i ] [ j ] %= mod ;
	} 
  cout << dp [ 1 ] [ 0 ] << endl ;
}
