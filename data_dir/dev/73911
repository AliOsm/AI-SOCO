#include <iostream>
#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define ll long long
#define F first
#define S second
#define PI acos(-1)
#define EPS 1e-8
#define BASE 53ll
#define mod 1000000007ll
#define ld long double
#define MAX 900001
#define NIL 0
#define INF (1<<28)
#define rd(a) scanf("%d",&a);
#define lp(i,n) for(int i=0;i<n;i++)
typedef pair<int,int>ii;
typedef pair<ii,ii>quad;
typedef pair<int,ii>edge;
typedef pair<vector<int>,int>vii;
const int N=1000005;

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll fact(ll n){ll ret=1;for(int i=1;i<=n;i++)ret*=i;return ret;}
bool is_vowel(char c){if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;return 0;}
ld getDistance(ld x1,ld y1,ld x2,ld y2){return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}

string a,b,p; /// text and pattern
int z[N],n,m;/// back table , n=length(T) , m=length(P)
void kmpProcess(){/// run kmp on the pattern and itself
  z[0]=0;
  for(int i=1,k=0;i<m;i++){
    while(k>0&&p[i]!=p[k])k=z[k-1];
    if(p[k]==p[i])k++;
    z[i]=k;
  }
}
int dp[101][101][101];
int solve(int i,int j,int k){
  if(k==p.length())return -100;
  if(i==a.length()||j==b.length())return 0;
  if(dp[i][j][k]!=-1)return dp[i][j][k];
  int ret=0;
  ret=max(ret,solve(i+1,j,k));
  ret=max(ret,solve(i,j+1,k));
  if(a[i]==b[j]){
     int cur=k;
     while(cur>0&&p[cur]!=a[i])cur=z[cur-1];
     if(a[i]==p[cur])cur++;
     ret=max(ret,solve(i+1,j+1,cur)+1);
  }
  return dp[i][j][k]=ret;
}
void printo(int i,int j,int k,int sol){
  if(i==a.length()||j==b.length())return;
  if(a[i]==b[j]){
     int cur=k;
     while(cur>0&&p[cur]!=a[i])cur=z[cur-1];
     if(a[i]==p[cur])cur++;
     if(solve(i+1,j+1,cur)==sol-1){
        printf("%c",a[i]);
        printo(i+1,j+1,cur,sol-1);
        return;
     }
  }
   if(solve(i,j+1,k)==sol)printo(i,j+1,k,sol);
   else printo(i+1,j,k,sol);
}
int main()
{
   //freopen("test.in","r",stdin);
   cin>>a>>b>>p;
   m=p.length();
   kmpProcess();
   memset(dp,-1,sizeof(dp));
   if(solve(0,0,0))printo(0,0,0,solve(0,0,0));
   else printf("0");
   return 0;
}
