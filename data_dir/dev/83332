#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ll long long
#define N 200005

char s[105][105];
int n,vis[105][105],c,m;
vector<pii>v;
bool in(int x,int y){return x>=0&&x<n&&y>=0&&y<n;}
bool check(int dx,int dy){
    int ok=0;c=0;
    for(int i=0;i<v.size();i++){
        int x=v[i].x,y=v[i].y;
        int nx=x+dx,ny=y+dy;
        if(in(nx,ny)){
            if(s[nx][ny]=='.')return 0;
            if(s[nx][ny]=='o')continue;
            if(!vis[nx][ny])ok=1,c++;
        }
    }
    if(!ok)return 0;
    for(int i=0;i<v.size();i++){
        int x=v[i].x,y=v[i].y;
        int nx=x+dx,ny=y+dy;
        if(in(nx,ny)){
            if(s[nx][ny]=='x')vis[nx][ny]=1;
        }
    }
    return 1;
}
int main()
{
    int T,i,j,k;
    //clock_t start=clock();
    scanf("%d",&n);
    for(i=0;i<n;i++)scanf("%s",s[i]);
    for(i=0;i<n;i++)
        for(j=0;j<n;j++){
            if(s[i][j]=='o')v.pb(mp(i,j));
            else if(s[i][j]=='x')m++;
        }
    int rem=0;vector<pii>res;
    for(i=-n;i<=n;i++)
        for(j=-n;j<=n;j++){
            if(i==0&&j==0)continue;
            c=0;if(check(i,j)){
            res.pb(mp(i,j));
            //cerr<<i<<" "<<j<<"\n";
            rem+=c;
            if(rem==m)break;
            
            }
        }
    //DBG(rem)DBG(m)
    if(rem<m){
        puts("NO");return 0;
    }
    puts("YES");
    for(i=0;i<2*n-1;i++)
        for(j=0;j<2*n-1;j++)s[i][j]='.';
    s[n-1][n-1]='o';
    for(i=0;i<res.size();i++){
        int x=n-1+res[i].x,y=n-1+res[i].y;
        if(x>=0&&x<2*n-1&&y>=0&&y<2*n-1)s[x][y]='x';
    }
    for(i=0;i<2*n-1;i++){
        for(j=0;j<2*n-1;j++)printf("%c",s[i][j]);
            puts("");
    }
    //cout<<(clock()-start)/CLOCKS_PER_SEC*1000<<"ms\n";
    return 0;
}