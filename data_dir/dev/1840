/*
    NO 
        TIME 
            TO 
                DIE
                    --007
                            */
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
//#include <boost/functional/hash.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef long long int lli;
lli mod=998244353;
#define OS //single input use oeis
lli INF=1e17;
lli eps=1e-8;
#define IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define sqr(x) (x) * (x)
#define bip(n) __builtin_popcountll(n)//no of ones bit in binary!!
#define bictz(n) __builtin_ctzll(n)//no of trailing zeroes in binary!!
#define biclz(n) __builtin_clzll(n)//no of leading zeroes in binary!!
#define bffs(n) __builtin_ffsll(n)//index of first one bit!!
typedef pair<lli,lli> ll;
#define mem1(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem2(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem3(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
int fmx(int x, int y) { return (((y-x)>>(31))&(x^y))^y; }
int fmi(int x, int y) { return (((y-x)>>(31))&(x^y))^x; }
typedef tree<lli,null_type,less<lli>,rb_tree_tag,tree_order_statistics_node_update> ost;
lli n,z,k,x,m,d,y,q,b,c;
const double pi=3.14159265358979323846;
lli me(lli a,lli b)
{
    lli res=1;
    while(b)
    {
        if(b&1)
        res=(res%mod*a%mod)%mod;
        a=a*a;
        a%=mod;
        b=b>>1;
    }
    return res;
}
lli mI(lli a)
{
    return (me(a,mod-2)%mod+mod)%mod;
}
int main()
{
 #ifndef ONLINE_JUDGE
 freopen("input.txt", "r", stdin);
 freopen("output.txt", "w", stdout);
 #endif
 IO;
 OS;
 lli t;
 cin>>t;
 for(int i=1;i<=t;i++)
 {
    cin>>n;
    string s,s1;
    cin>>s>>s1;
    map<lli,lli> ml;
    for(int j=0;j<n;j++)
    {
        ml[s[j]]++;
    }
    for(int j=0;j<n;j++)
        ml[s1[j]]++;
    lli flag=0;
    for(auto &j: ml)
    {
        if(j.second&1)
            flag=1;
    }
    vector<ll> vv;
    if(flag)
        cout<<"No\n";
    else
        {
            cout<<"Yes\n";
            for(int j=0;j<n;j++)
            {
                if(s[j]!=s1[j])
                {
                    lli idx=-1;
                    for(int k=j+1;k<n;k++)
                    {
                        if(s1[k]==s1[j])
                            {
                                idx=k;
                                break;
                            }
                    }
                    // cout<<idx<<" "<<j<<" "<<s<<" "<<s1<<"\n";
                    if(idx<0)
                    {
                        for(int k=j+1;k<n;k++)
                        {
                            if(s[k]==s1[j])
                            {
                                idx=k;
                                break;
                            }
                        }
                        // cout<<idx<<"\n";
                        swap(s[idx],s1[j+1]);
                        swap(s[j],s1[j+1]);
                        vv.push_back({idx+1,j+2});
                        vv.push_back({j+1,j+2});
                    }
                    else
                    {
                        swap(s[j],s1[idx]);
                        vv.push_back({j+1,idx+1});
                    }
                }
            }
            cout<<vv.size()<<"\n";
            for(auto &j: vv)
                cout<<j.first<<" "<<j.second<<"\n";
        }
 }
}