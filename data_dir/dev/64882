#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<cassert>
#include<iomanip>
#include<limits>

using namespace std;

#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
typedef vector<int> vi;
long long mod = 1000000009LL;
long long large = 2000000000000000000LL;




int main(){

	int n,k;
	cin>>n>>k;
	if(k%2==0){
		cout<<"YES"<<endl;
		for(int i=0;i<n;i++) cout<<".";
		cout<<endl;
		for(int i=0;i<n;i++){
			if(i>=1&&i<=k/2) cout<<"#";
			else cout<<".";
		}
		cout<<endl;
		for(int i=0;i<n;i++){
			if(i>=1&&i<=k/2) cout<<"#";
			else cout<<".";
		}
		cout<<endl;

		for(int i=0;i<n;i++) cout<<".";
		cout<<endl;
		return 0;
	}else{
		if(k>=n-2){
			cout<<"YES"<<endl;
			for(int i=0;i<n;i++) cout<<".";
			cout<<endl;
			for(int i=0;i<n;i++){
				if(i>=1&&i<=n-2) cout<<"#";
				else cout<<".";
			}
			cout<<endl;
			k-=n-2;
			if(k==0){
				for(int i=0;i<n;i++) cout<<".";
				cout<<endl;
			}else{
				k-=2;
				for(int i=0;i<n;i++){
					if(i==1||i==n-2) cout<<"#";
					else if(i>=1&&i<=n-2&&k){
						cout<<"#";
						k--;
					}else cout<<".";
				}
				cout<<endl;
			}
			for(int i=0;i<n;i++) cout<<".";
			cout<<endl;
		}else{
			cout<<"YES"<<endl;
			for(int i=0;i<n;i++) cout<<".";
			cout<<endl;
			k--;
			k/=2;
			for(int i=0;i<n;i++){
				if(i==n/2) cout<<"#";
				else if(i>=1&&i<=n-2&&(i-1<k||n-2-i<k)) cout<<"#";
				else cout<<".";
			}
			cout<<endl;

			for(int i=0;i<n;i++) cout<<".";
			cout<<endl;
			for(int i=0;i<n;i++) cout<<".";
			cout<<endl;

		}
	}


    return 0;
}
