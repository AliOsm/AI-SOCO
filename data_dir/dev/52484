#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
#include<queue>
#include<sstream>
#include<list>
#include<bitset>
#include<ctime>
using namespace std;

typedef long long Int;
#define FOR(i,a,b) for(Int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())
const int inf = 1000000000;
const int MOD = 1000000007;
const double pi=acos(-1.0);

int n,k;
int a[1111];
bool ok;
bool z[11][11];

void Run(int pos) {
	if(pos==n+1) {
		memset(z, false, sizeof(z));
		FOR(i,2,n) z[a[i-1]][a[i]]=z[a[i]][a[i-1]]=true;
		FOR(i,1,k) FOR(j,i+1,k) if(!z[i][j]) return;
		ok=true;
		return;
	}
	FOR(i,1,k) {
		a[pos]=i;
		Run(pos+1);
	}
}

bool can(int kk, int nn) {
	n=nn;
	k=kk;
	ok=false;
	Run(1);
	return ok;
}

Int getCnt(Int k) {
	if(k%2==1) return 1+k*(k-1)/2;
	return 1+(k-1)*(k-2)/2 + (k-2)/2 + k-1;
}

int main() {
	//freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
	int n,m;
	cin>>n>>m;
	/*FOR(kk,1,10) {
		int nn=1;
		while(!can(kk, nn)) ++nn;
		cerr<<kk<<" "<<nn<<endl;
	}*/

	//FOR(i,1,6) cerr<<i<<" "<<getCnt(i)<<endl;

	vector<int>g;
	FOR(i,1,m) {
		int x,y;
		cin>>x>>y;
		g.pb(y);
	}
	sort(g.begin(), g.end());
	int k=1;
	while(k<m && getCnt(k+1)<=n) ++k;
	Int ans=0;
	for(int i=sz(g)-1; i>=sz(g)-k; --i) ans+=g[i];
	cout<<ans<<endl;
}