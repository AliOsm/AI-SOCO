#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
//#include <random>
#include <cassert>
//#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x),end(x)
#define SZ(x) ((int)(x).size())
typedef long long LL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
const int INF = (int)1e9;
const int MXN = (int)1e6 + 7;
const int mod = (int)1e9 + 7;
using namespace std;
set<int> st;
int a[MXN];
PII b[MXN];
LL ans[MXN];
int main() {
	int n, m; scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; i++) {
		st.clear();
		int k; scanf("%d", &k);
		for (int j = 1; j <= k; j++) {
			scanf("%d", a + j);
			b[j] = {a[j], j};
		}
		if (m == k) {
			for (int j = 1; j <= k; j++) {
				ans[j] += a[j];
				ans[j+1] -= a[j];
			}
			continue ;
		}
		sort(b + 1, b + k + 1);
		int h1 = m - k, h2 = k + 1;
		for (int j = k; j >= 1; j--) {
			int p = b[j].S;
			int ll = p, rr = m - (k - p);
			auto it = st.lower_bound(p);
			if (it != st.end()) rr = min(rr, *it - 1);
			if (it != st.begin()) {
				it--;
				ll = max(ll, m - (k - *it) + 1);
			}
			if (b[j].F < 0) {
				ll = max(ll, h1 + 1);
				rr = min(rr, h2 - 1);
			}
			st.insert(p);
			if (ll <= rr) {
				ans[ll] += b[j].F;
				ans[rr+1] -= b[j].F;
			}
		}
	}
	for (int i = 1; i <= m; i++) {
		ans[i] += ans[i-1];
		printf("%lld%c", ans[i], " \n"[i == m]);
	}
	return 0;
}
