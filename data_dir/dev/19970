                /*"Success isn't permanent, failure isn't fatal,
                                      it's the courage to continue that counts"*/
#include<bits/stdc++.h>
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
using namespace std;
const ll mod=1e9+7;         
const int N=2e3+4;

string cs;

int m,d;

ll dp[N][2][N];

ll rec(int ind,int flag,int rem)
{
    if(ind==cs.size())
    return (rem==0);
    
    ll &here=dp[ind][flag][rem];
    
    if(here!=-1)
    return here;
    
    int lim;
    
    if(flag)
    lim=9;
    else
    lim=cs[ind]-'0';
    
    here=0;
    
    rep(i,0,lim+1)
    {
        int hflag=flag,hrem,check=1;
        
        if(i<lim)
        hflag=1;
        
        if(ind%2==0 and i==d)
        check=0;
        
        if(ind%2==1 and i!=d)
        check=0;
        
        if(ind==0 and i==0)
        check=0;
        
        hrem=(rem*10+i)%m;
        
        if(check)
        here=(here+rec(ind+1,hflag,hrem))%mod;
    }
    
    return here;
}

ll solve(string s)
{
    cs=s;
    
    //cout<<cs<<" "<<m<<" "<<d<<endl;
    
    memset(dp,-1,sizeof(dp));
    
    ll here=rec(0,0,0);
    
    return here;
}

bool is_good(string s)
{
    bool flag=1;
    
    int rem=0;
    
    rep(i,0,s.size())
    {
        int dig=s[i]-'0';
        
        rem=(rem*10+dig)%m;
        
        if(i%2==0 and dig==d)
        flag=0;
        
        if(i%2==1 and dig!=d)
        flag=0;
    }
    
    if(rem!=0)
    flag=0;
    
    return flag;
}

int main()
{
    cin>>m>>d;
    
    string a,b,ts="";
    
    cin>>a>>b;
    
    //cout<<solve(b)<<" "<<solve(a)<<endl;
    
    ll ans=(solve(b)-solve(a)+mod)%mod;
    
    if(is_good(a))
    ans=(ans+1)%mod;
    
    lpri(ans);
    
    return 0;
}