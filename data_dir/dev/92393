#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <cstring>
#include <cctype>
#include <queue>
#include <deque>

using namespace std;

#define fi first
#define se second
#define pf push_front
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)5e5 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;
const int MOD = (int)1e9 + 7;

ll prefA[Z], prefB[Z];
int p[Z];

int main() {
	//files;
	SWS;
	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) {
		cin >> p[i];
	}
	string s;
	cin >> s;
	for (int i = 0; i < sz(s); ++i) {
		if (s[i] == 'A') {
			prefA[i+1] = p[i+1];
		} else {
			prefB[i+1] = p[i+1];
		}
	}
	for (int i = 2; i <= n; ++i) {
		prefA[i] += prefA[i-1];
		prefB[i] += prefB[i-1];
	}
	ll ans = prefB[n];
	for (int i = 1; i <= n; ++i) {
		ll cur = prefA[i] + prefB[n] - prefB[i];
		ans = max(ans, cur);
	}
	for (int i = n; i >= 1; --i) {
		ll cur = prefA[n] - prefA[i-1] + prefB[i-1];
		ans = max(ans, cur);
	}
	cout << ans;
	return 0;
}