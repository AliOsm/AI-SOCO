#include <string.h>
#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stdlib.h>    
#include <time.h> 
#include <stack>
#include <queue>
#include <set>
 
#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
 
#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf
 
#define pf printf
#define mp make_pair
 
using namespace std;
const int N = 10000010;
const int mod = 998244353;

int inf = 1000000000;

int a[N];

ll g_min(ll a, ll b) {
	if(a==-1)return b;
	return min(a,b);
}

int main() {
	int n;
	cin>>n;
	map<int,vector<int>>pos;
	int flag = 0;
	fr(i,0,n) {
		int t;
		sf("%d",&t);
		a[t]++;
		pos[t].pb(i+1);
		if(t==1)flag = 1;
	}

	ll ans = -1;
	ll ans_i, ans_j;
	for(int i = 1; i <=1e7; ++i) {
		vector<int> ft;
		for(int j = i; j <=1e7&&ft.size()<2; j+=i) {
			if(a[j]) {
				int t = a[j];
				while(t>0&&ft.size()<2) {
					ft.pb(j);
					t--;
				}
			}
		}
		if(ft.size()==2) {
			ll ret = 1ll*ft[0]/i * ft[1];
			//printf("i = %d ft[0] %d ft1 = %d ret = %d\n",i,ft[0],ft[1],ret);
			if(ans==-1 || ans > ret){
				ans = ret;
				ans_i = ft[0];
				ans_j = ft[1];
			}
			if(i==1&&flag) {
				//break;
			}
		}
	}
	int x,y;
	if(ans_i!=ans_j) {
		x = pos[ans_i][0];
		y = pos[ans_j][0];
	}
	else {
		x = pos[ans_i][0];
		y = pos[ans_i][1];
	}
	if(x>y)swap(x,y);
	printf("%d %d\n",x,y);
}

