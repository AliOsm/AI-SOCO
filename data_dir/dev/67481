#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 10007
#define sz(a) ((ll)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-12
typedef pair<int, int> II;
typedef pair<ll, ll> LL;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI (2 * acos((ld)0))
#define linf (1ll << 60)
#define y1 y32432
#define y0 y435346

#define maxn 200005

struct edge{
	int id;
	ll c;
	edge(){};
	edge(int _id, ll _c){
		id = _id; c = _c;
	}
	bool operator <(const edge &E) const{
		return c < E.c;
	}
};

int n, m, dad[maxn];
ll w[maxn], c[maxn], a[maxn];
II P[maxn];
vector<edge> V;
ll k;
vector<pair<int, ll> > res;
vector<II> VV[maxn];
bool flag[maxn];
ll f[maxn][20], dep[maxn], g[maxn][20];

int getdad(int u){
	if(dad[u] == u) return u;
	return dad[u] = getdad(dad[u]);
}

void go(int par, int u){
	dep[u] = dep[par] + 1;
	f[u][0] = par;
	Rep(i, sz(VV[u])){
		int v = VV[u][i].fi, id = VV[u][i].se;
		if(v == par) continue;
		g[v][0] = w[id];
		go(u, v);
	}
}

int findvt(){
    V.clear();
    For(i, 1, m){
    	V.pb(edge(i, w[i]));
    }
    ms(flag, 0);
    sort(all(V));
    int RR = 0;
    For(i, 1, n) dad[i] = i;

    Rep(i, sz(V)){
    	if(RR >= n - 1) break;
		int id = V[i].id;
		int u = P[id].fi, v = P[id].se;
		int pu = getdad(u), pv = getdad(v);
//		cout << u << " " << v << " " << id << " zz " << V[i].c << " " << pu << " " << pv << endl;
		if(pu == pv) continue;
		if(pu > pv) swap(pu, pv);
		dad[pv] = pu;
		flag[id] = 1;
		VV[u].pb(mp(v, id));
		VV[v].pb(mp(u, id));
    }

    ll res = 0, lonnhat = -inf;
    For(i, 1, m) if(flag[i] && a[i] > lonnhat){
    	lonnhat = a[i];
    	res = i;
    }

    ms(f, 0); ms(g, 0);
    dep[0] = 0;
    go(0, 1);

    For(i, 1, n){
//    	cout << i << " " << f[i][0] << " " << g[i][0] << endl;
    }

    For(t, 1, 19){
    	For(i, 1, n) {
    		f[i][t] = f[f[i][t - 1]][t - 1];
    		g[i][t] = max(g[i][t - 1], g[f[i][t - 1]][t - 1]);
    	}
    }


//    cout << lonnhat << endl;
    For(i, 1, m) if(!flag[i]){
    	int u = P[i].fi, v = P[i].se;
    	ll ret = 0;
    	if(dep[u] > dep[v]){
    		swap(u, v);
    	}

    	for(int t = 18; t >= 0; t--) if(dep[v] - (1 << t) >= dep[u]){
    		ret = max(ret, g[v][t]);
    		v = f[v][t];
    	}

    	for(int t = 18; t >= 0; t--){
    		if(dep[u] >= (1 << t) && f[u][t] != f[v][t]){
    			ret = max(ret, max(g[u][t], g[v][t]));
    			u = f[u][t];
    			v = f[v][t];
    		}
    	}
    	if(u != v) ret = max(ret, max(g[u][0], g[v][0]));
//    	cout << i << " " << a[i] << " " << lonnhat << " " << ret << " " << w[i] << endl;
    	if(w[i] - a[i] + lonnhat - ret < 0){
    		lonnhat = -w[i] + a[i] + ret;
    		res = i;
    	}
    }

    return res;
}

int main()
{
//	freopen("in.txt", "r", stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m;
    For(i, 1, m) cin >> w[i];
    For(i, 1, m) cin >> c[i];
    For(i, 1, m){
    	cin >> P[i].fi >> P[i].se;
    }
    cin >> k;
    For(i, 1, m){
    	a[i] = k / c[i];
    }

    int vt = findvt();
//    cout << vt << endl;
    ll RR = w[vt] - k / c[vt];

    For(i, 1, n) dad[i] = i;
    int u = P[vt].fi, v = P[vt].se;
    if(u > v) swap(u, v);
    dad[v] = u;
    res.pb(mp(vt, RR));

    Rep(i, sz(V)){
    	if(sz(res) >= n - 1) break;
    	int id = V[i].id;
    	ll C = V[i].c;
    	if(id == vt) continue;
    	int u = P[id].fi, v = P[id].se;
    	int pu = getdad(u), pv = getdad(v);
    	if(pu == pv) continue;
    	if(pu > pv) swap(pu, pv);
    	dad[pv] = pu;
    	res.pb(mp(id, C));
    	RR += C;
    }

    cout << RR << "\n";
    Rep(i, sz(res)){
    	cout << res[i].fi << " " << res[i].se << "\n";
    }


    return 0;
}
