#include<bits/stdc++.h>

using namespace std;

const int N = 50 + 7;

int n, h, m;
int val[N][N][N][N];
int dp[N][N][N];

int dfs(int l, int r, int up) {
    if(up < 0 || l > r) return 0;
    int &ans = dp[l][r][up];
    if(~ans) return ans;
    ans = dfs(l, r, up - 1);
    for(int j = l; j <= r; j++) {
        int tmp = val[l][r][j][up - 1] + up * up;
        tmp += dfs(l, j - 1, up);
        tmp += dfs(j + 1, r, up);
        ans = max(ans, tmp);
    }
    return ans;
}

int main() {
    memset(dp, -1, sizeof(dp));
    scanf("%d%d%d", &n, &h, &m);
    for(int i = 1; i <= m; i++) {
        int l, r, x, c;
        scanf("%d%d%d%d", &l, &r, &x, &c);
        for(int i = 1; i <= l; i++) {
            for(int j = r; j <= n; j++) {
                for(int k = l; k <= r; k++) {
                    val[i][j][k][x] -= c;
                }
            }
        }
    }

    for(int i = 1; i <= n; i++) {
        for(int j = i; j <= n; j++) {
            for(int k = i; k <= j; k++) {
                for(int z = 1; z <= h; z++) {
                    val[i][j][k][z] += val[i][j][k][z - 1];
                }
            }
        }
    }

    printf("%d\n", dfs(1, n, h));

    return 0;
}

/*
*/
