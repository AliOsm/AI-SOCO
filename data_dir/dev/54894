//1200D
#include <iostream>
#include <algorithm>
#include <string>
int n, k, full, a[2000][2000], ans;
std::string dat[2000];
int main ()
{
  std::cin >> n >> k;
  for (int i = 0; i < n; ++i)
    std::cin >> dat[i];
  for (int i = 0; i < n; ++i)
  {
    int min = -1, max = -1;
    for (int j = 0; j < n; ++j)
      if (dat[i][j] == 'B')
      {
        if (min == -1)
          min = j;
        max = j;
      }
    if (min == -1) { ++full; continue; }
    if (max - min >= k) continue;
    int x1 = std::max(0, max - k + 1);
    int x2 = min;
    int y1 = std::max(0, i - k + 1);
    int y2 = i;
    if (x1 <= x2 && y1 <= y2)
    {
      a[x1][y1]++;
      a[x1][y2 + 1]--;
      a[x2 + 1][y1]--;
      a[x2 + 1][y2 + 1]++;
    }
  }
  for (int i = 0; i < n; ++i)
  {
    int min = -1, max = -1;
    for (int j = 0; j < n; ++j)
      if (dat[j][i] == 'B')
      {
        if (min == -1)
          min = j;
        max = j;
      }
    if (min == -1) { ++full; continue; }
    if (max - min >= k) continue;
    int x1 = std::max (0, i - k + 1);
    int x2 = i;
    int y1 = std::max (0, max - k + 1);
    int y2 = min;
    if (x1 <= x2 && y1 <= y2)
    {
      a[x1][y1]++;
      a[x1][y2 + 1]--;
      a[x2 + 1][y1]--;
      a[x2 + 1][y2 + 1]++;
    }
  }
  for (int i = 0; i < n; ++i)
    for (int j = 0; j < n; ++j)
      a[i + 1][j] += a[i][j];
  for (int i = 0; i < n; ++i)
    for (int j = 0; j < n; ++j)
      a[i][j + 1] += a[i][j];

  for (int i = 0; i < n; ++i)
    for (int j = 0; j < n; ++j)
      ans = std::max (ans, full + a[i][j]);
  std::cout << ans;
}