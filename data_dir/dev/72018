#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int sz = 1e5 + 10;


int mat[23];
int dp[1 << 23];
int end_mask;
int n, m;

int rec( int mask = 0 ) {
    if( mask == end_mask ) return 0;
    int& ret = dp[mask];
    if( ~ret ) return ret;
    ret = 1 << 28;
    for( int i=0; i<n; i++ ) if( ( mask == 0 ) || ( mask & ( 1 << i ) ) ) {
        if( mask != ( mask | mat[i] ) ) ret = min( ret, 1 + rec( mask | mat[i] ) );
    }
    return ret;
}

void print( int mask = 0 ) {
    if( mask == end_mask ) return;
    int& ret = dp[mask];
    for( int i=0; i<n; i++ ) if( ( mask == 0 ) || ( mask & ( 1 << i ) ) ) {
        if( mask != ( mask | mat[i] ) && ret == 1 + rec( mask | mat[i] ) ) {
            cout << i + 1 << " ";
            print( mask | mat[i] );
            return;
        }
    }
}

int main() {
    #ifdef CLown1331
        freopen( "in.txt","r", stdin );
    #endif /// CLown1331
    while( cin >> n >> m ) {
        memset( mat, 0, sizeof mat );
        for( int i=0; i<=n; i++ ) mat[i] = 1 << i;
        for( int i=0; i<m; i++ ) {
            int x, y;
            cin >> x >> y;
            --x, --y;
            mat[x] |= (1 << y);
            mat[y] |= (1 << x);
        }
        end_mask = (1 << n) - 1;
        int zero = end_mask;
        for( int i=0; i<n; i++ ) zero &= mat[i];
        if( zero == end_mask ) {
            cout << "0\n";
        }
        else {
            memset( dp, -1, sizeof dp );
            cout << rec() << "\n";
            print();
            cout << "\n";
        }
        cerr << "---------------\n";
    }
    return 0;
}
