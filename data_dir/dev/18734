#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)
#define sort stable_sort
#define dbg(x) cerr << (#x) << " --> " << (x) << nxtl;


typedef long long ll;
typedef unsigned long long ull;

using namespace std;

const int MAXN = 5e5+256;
const char nxtl = '\n';
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}
#define y1 qwert
#define y2 trewq
#define x1 asdfg
#define x2 gfdsa

int n, k, id[MAXN], c[MAXN], ok[MAXN];
ll suf[MAXN], sum;

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	scanf("%d%d", &n, &k);
	rep(i, 1, n) scanf("%d", c+i);
	rep(i, 1, k) {
		scanf("%d", id+i); ok[id[i]] = 1;
		sum -= c[id[i]];
	}
	per(i, n, 1) suf[i] = suf[i+1] + c[i] * ok[i];
	ll ans = 0ll;
	rep(i, 1, n-1) {
		ans += c[i] * 1ll * c[i+1];
		sum += c[i];
	}
	sum += c[n];
	ans += c[n] * 1ll * c[1];
	// cerr << sum << nxtl << ans << nxtl;
	rep(i, 1, k) {
		int nxt = id[i] + 1;
		if(nxt > n) nxt = 1;
		int prv = id[i] - 1;
		if(prv <= 0) prv = n;
		ll num2 = (c[prv] + c[nxt]);
		if(ok[prv]) num2 -= c[prv];
		if(ok[nxt]) num2 -= c[nxt];
		ans += c[id[i]] * 1ll * (sum - num2);
		// cerr << (sum - c[prv] - c[nxt]) << ' '<< c[prv] << nxtl;
		ll num = 0;
		if(prv > id[i] && ok[prv]) num = c[prv];
		// cerr << (suf[id[i]+2] - num) << nxtl;
		ans += c[id[i]] * 1ll * (suf[id[i]+2] - num);
	}
	cout << ans << nxtl;

	return 0;
}