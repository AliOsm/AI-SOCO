		//			- -- --- ---- -----be name khoda----- ---- --- -- -			\\

#include <bits/stdc++.h>

using namespace std;

#define L first
#define R second
typedef long long ll;
const int N = 1 << 18, SG = 2 * N;

pair<int, int> range[SG];
ll mx[SG], sum[SG];

void upd(int id)
{
	mx[id] = max(mx[id * 2], mx[id * 2 + 1]);
	sum[id] = sum[id * 2] + sum[id * 2 + 1];
}

void modify(int p, int x)
{
	mx[p + N] = sum[p + N] = x;
	for(p = (p + N) / 2; p; p /= 2)
		upd(p);
}

ll get(int l, int r)
{
	ll ans = 0;
	for(l += N, r += N; l < r; l /= 2, r /= 2)
	{
		if(l % 2)
			ans += sum[l++];
		if(r % 2)
			ans += sum[--r];
	}
	return ans;
}

void work(int id, int l, int r, int mod, int sl, int sr)
{
	if(l >= sr || r <= sl)
		return;
	if(sl + 1 == sr)
	{
		mx[id] = sum[id] %= mod;
		return;
	}
	if(mx[id] < mod)
		return;
	int mid = (sl + sr) / 2;
	work(id * 2, l, r, mod, sl, mid);
	work(id * 2 + 1, l, r, mod, mid, sr);
	upd(id);
}

int main()
{
	int n,  m;
	cin >> n >> m;
	for(int i = 0; i < n; i++)
	{
		int x;
		cin >> x;
		modify(i, x);
	}
	while(m--)
	{
		int type;
		cin >> type;
		if(type == 1)
		{
			int l, r;
			cin >> l >> r;
			cout << get(--l, r) << endl;
		}
		if(type == 2)
		{
			int l, r, x;
			cin >> l >> r >> x;
			work(1, --l, r, x, 0, N);
		}
		if(type == 3)
		{
			int k, x;
			cin >> k >> x;
			modify(k - 1, x);
		}
	}
}
