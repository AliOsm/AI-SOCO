#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 100;
const int K = 256;

int process( int x, int k, map<int, int> & reach ) {
    auto [le, r] = *prev( reach.upper_bound( x ) );
    
    if (x <= r) return le;
    
    if (x <= le + k - 1) {
        reach[le] = x;
        return le;
    }
    
    int newle = max( max( 0, x - k + 1 ), r+1 );
    reach[ newle ] = x;
    return newle;
}

array<int, N> a;
map<int, int> reach;

int main()
{
    ios_base::sync_with_stdio(false);
    
    int n, k;
    cin >> n >> k;
    for ( int i = 0; i < n; ++i ) cin >> a[ i ];
    
    reach[ -K ] = -K;
    for ( int i = 0; i < n; ++i ) {
        a[ i ] = process( a[ i ], k, reach );
    }
    
    for ( int i = 0; i < n; ++i ) {
        if ( i > 0 ) cout << ' ';
        cout << a[ i ];
    }
    cout << '\n';
}