/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using pii = pair<int, int>;

#define pb push_back

constexpr auto MOD = 1000000007LL;
constexpr auto LINF = (1LL<<60);
constexpr auto INF = 2147483647LL;
constexpr auto PI = 3.1415926535897932384626433;
constexpr auto EPS = 1E-9;

template<typename T1, typename T2>
ostream& operator<<(ostream& out, const pair<T1, T2> p){
	out << p.first << ' ' << p.second;
	return out;
}

template <typename T1, typename T2>
istream& operator>>(istream& in, pair<T1, T2> &p){
	in >> p.first >> p.second;
	return in;
}

template <typename T>
istream& operator>>(istream &in, vector<T> &v){
	for(auto &x: v)
		in >> x;
	return in;
}

template <typename T>
ostream& operator<<(ostream &out, vector<T> v){
	for(int i = 0; i < v.size(); i++)
		out << v[i] << (i+1 == v.size()? '\n': ' ');
	out.flush();
	return out;
}

#if __cplusplus < 201703L
	#define mp make_pair
#endif

bitset<101> possible;

int main(){
	#ifdef LOCAL
		freopen("../input.txt","r",stdin);
//		freopen("output.txt","w",stdout);
		freopen("../debug.txt", "w", stderr);
	#endif
	ios_base::sync_with_stdio(false);

	int n; cin >> n;
	possible.set();
	for(int i = 0, x; i < n; i++){
	    cin >> x;
	    bitset<101> current;
	    current.reset();
	    for(int j = 0, y; j < x; j++){
			cin >> y;
			current.set(y);
	    }

	    possible &= current;
	}

	for(int i = 1, j = 0, cnt = possible.count(); i <= 100; i++){
		if(possible.test(i)){
			cout << i << (++j == cnt? '\n': ' ');
		}
	}

	return 0;
}
