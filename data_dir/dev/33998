// I Just Decided By The Grace Of The God Poseidon , That You're So Dead To Me I Dug A Hole For You To Lie In

#pragma GCC optimize("O3,Ofast,no-stack-protector,unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<bits/stdc++.h>
using namespace std ;

#define all(x) x.begin() , x.end()

#define _sz(x) (int)x.size()
#define F first
#define S second
#define PB push_back

#define debug(x) cerr << #x << " = " << x << "\n"

typedef long long ll ;
typedef pair<int, int> pii ;

const int MAX_N = 5 * 1000 +19 ;
const int inf = 2e9 + 19 ;

int ans[MAX_N] ;

int main() {
        ios::sync_with_stdio(false), cin.tie(0), cout.tie(0) ;
        int q ;
        cin >> q ;
        while (q --) {
                memset(ans , 0 , sizeof(ans)) ;
                string s , t ;
                cin >> s >> t ;
                if (s < t)
                        cout << s << endl ;
                else {
                        for (int i = 0 ; i < _sz(s) ; i ++)
                                for (int j = i + 1 ; j < _sz(s) ; j ++)
                                        if (s[i] > s[j])
                                                ans[i] ++ ;
                        char c ;
                        int ind = -1 ;
                        for (int i = 0 ; i < min(_sz(s) , _sz(t)) ; i ++) {
                                c = 'Z' ;
                                if (ans[i] > 0) {
                                        for (int j = i + 1 ; j < _sz(s) ; j ++)
                                                if (c >= s[j]) {
                                                        c = s[j] , ind = j ;
                                                }
                                        swap(s[i] , s[ind]) ;
                                        break ;
                                }
                        }
                        if (s >= t)
                                cout << "---" << endl ;
                        else
                                cout << s << endl ;
                }
        }
        return 0 ;
}
