#include <iostream>
#include <algorithm>
using namespace std;
int search(int n, int k, pair<int, int> *a){
	int left = 1, right = n, mid, ans = 0;
	while (right - left > 1){
		mid = (left + right) / 2;
		if (a[mid].first > k){
			right = mid;
		}
		if (k >= a[mid].first){
			left = mid;
		}
	}
	if (k >= a[left].first){
		ans = left;
	}
	if (k >= a[right].first){
		ans = right;
	}
	return ans;
}
int main(){
	int n, d;
	cin>>n>>d;
	pair<int, int> a[100002];
	long long pref[100002];
	pref[0] = 0;
	for (int i=1; i<=n; i++){
		cin>>a[i].first>>a[i].second;
	}
	sort(a, a+n+1);
	for (int i=1; i<=n; i++){
		pref[i] = pref[i-1] + (long long)a[i].second;
	}
	long long mx = 0;
	for (int i=1; i<=n; i++){
		int id = search(i, a[i].first-d, a);
		long long int cur = pref[i] - pref[id];
		mx = max(mx, cur);
	}
	cout<<mx;
}