#include <bits/stdc++.h>
using namespace std;

#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
typedef long long ll;

const int maxN = 1 << 19;

void compres(vector<int> &a) {
    int n = a.size();
    vector<pair<int,int> >b(n);
    for (int i = 0; i < n; i++) {
        b[i] = {a[i], i};
    }
    sort(all(b));
    for (int i = 0, j = 0; i < n; i++) {
        if (i && b[i].fi != b[i - 1].fi) {
            j++;
        }
        a[b[i].se] = j;
    }
}

int F[maxN];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    vector<vector<int> > a(n, vector<int>(3));
    for (auto &x : a) {
        cin >> x[0];
    }
    for (auto &x : a) {
        cin >> x[1];
    }
    for (auto &x : a) {
        cin >> x[2];
    }
    sort(all(a));
    vector<int> b(n);

    for (int i = 0; i < n; i++) {
        b[i] = a[i][1];
    }
    compres(b);
    int ans = 0;
    for (int i = n - 1; i >= 0;) {
        int j;
        for (j = i; j >= 0 && a[j][0] == a[i][0]; j--) {
            int cur = -1;
            for (int ii = n - b[j] - 1; ii >= 0; ii = ((ii & (ii + 1)) - 1)) {
                cur = max(F[ii], cur);
            }
            if (cur > a[j][2]) {
                ans++;
            }
        }
        for (j = i; j >= 0 && a[j][0] == a[i][0]; j--) {
            for (int ii = n - b[j]; ii < maxN; ii |= (ii + 1)) {
                F[ii] = max(F[ii], a[j][2]);
            }
        }
        i = j;
    }
    cout << ans << endl;
    return 0;
}
