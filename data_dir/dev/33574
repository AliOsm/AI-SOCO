#include <bits/stdc++.h>
using namespace std;

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'

typedef long long ll;

const long long inf = 2000000;

long long n, m;
long long adjmatrix1[105][105], adjmatrix2[105][105];

int main()
{
	optimize();
	cout << setprecision(10) << fixed;
	for( long long i = 0; i < 105; ++i ) {
		for( long long j = 0; j < 105; ++j ) {
			adjmatrix1[i][j] = inf;
			if(i == j) adjmatrix1[i][j] = 0;
			//if(i == j) adjmatrix2[i][j] = 1;
		}
	}
	cin >> n >> m;
	for( long long i = 0; i < m; ++i ) {
		long long u, v;
		cin >> u >> v;
		adjmatrix1[u][v] = adjmatrix2[u][v] = adjmatrix1[v][u] = adjmatrix2[v][u] = 1;
	}
	for( long long k = 1; k <= n; ++k ) {
		for( long long i = 1; i <= n; ++i ) {
			for( long long j = 1; j <= n; ++j ) {
				if( adjmatrix1[i][j] > adjmatrix1[i][k]+adjmatrix1[k][j] ) {
					adjmatrix1[i][j] = adjmatrix1[i][k]+adjmatrix1[k][j];
					adjmatrix2[i][j] = adjmatrix2[i][k]*adjmatrix2[k][j];
				}
				else if( adjmatrix1[i][j] == adjmatrix1[i][k]+adjmatrix1[k][j] ) {
					adjmatrix2[i][j] += adjmatrix2[i][k]*adjmatrix2[k][j];
				}
			}
		}
	}
	//cout << "hmm: " << adjmatrix2[1][1] << endl;
	ll sum = adjmatrix2[1][n];
	ll num = 0;
	//cout << "num: " << num << endl;
	for( long long i = 1; i <= n; ++i ) {
		if( adjmatrix1[1][i]+adjmatrix1[i][n] > adjmatrix1[1][n] ) continue;
		if( i > 1 && i < n ) num = max(num, (ll)adjmatrix2[1][i]*adjmatrix2[i][n]*2);
		else num = max(num, (ll)adjmatrix2[1][n]);
		//cout << num << endl;
	}
	//cout << sum << endl;
	double ans = (double)num/(double)sum;
	cout << ans << endl;
}
