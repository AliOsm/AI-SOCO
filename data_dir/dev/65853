#include<bits/stdc++.h>

using namespace std;
vector < int > ad[1005];
int dist[1002][1002];
bool vis[1002][1002],mp[1002][1002];

void bfs(int src)
{
    queue < int > q;
    q.push(src);
    dist[src][src]=0;
    vis[src][src]=true;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        for(int v: ad[u])
        {
            if(!vis[src][v])
            {
                dist[src][v]=dist[src][u]+1;
                q.push(v);
                vis[src][v]=true;
            }
        }
    }
}

int main()
{
    int n,m,s,t,i,j;
    scanf("%d %d %d %d",&n,&m,&s,&t);
    for(i=1; i<=m; i++)
    {
        int u,v;
        scanf("%d %d",&u,&v);
        ad[u].push_back(v);
        ad[v].push_back(u);
        mp[u][v]=true;
        mp[v][u]=true;
    }
    for(i=1; i<=n; i++)
    {
        bfs(i);
    }
    int ans=0;
    for(i=1; i<=n; i++)
    {
        for(j=i+1; j<=n; j++)
        {
            if(!mp[i][j])
            {
                if(dist[s][t]<=dist[s][i]+1+dist[j][t] && dist[s][t]<=dist[s][j]+1+dist[i][t])
                {
                    ans++;
                }
            }
        }
    }
    printf("%d\n",ans);
    return 0;


}
