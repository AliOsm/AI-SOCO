#include <bits/stdc++.h>
using namespace std;
int n,value,x,y;
const int m = 1e6 + 10;
vector<vector<int> > adj;
int a [m];
int ans [m];
int dfs(int i){
	int ans=a[i];
	for(int j=0;j<adj[i].size();j++){
		int e=adj[i][j];
		dfs(e);
		ans+=a[e];
	}
	return a[i]=ans;
}

void dfs2(int i){
	if(a[i]==value)
		ans[i]=i+1;
	int t1=-1,t2=-1;
	for(int j=0;j<adj[i].size();j++){
		int e=adj[i][j];
		dfs2(e);
		if(ans[e]!=-1){
			if(t1==-1)
				t1=ans[e];
			else
				t2=ans[e];
			ans[i]=ans[e];
		}
		if(t1!=-1 && t2!=-1){
				x=t1;
				y=t2;
			}
	}
}
int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> n;
	adj.assign(n,vector<int>());
	for(int i=0;i<n;i++)
		ans[i]=-1;
	int root=0;
	int sum=0;
	for(int i=0;i<n;i++){
		int p,t;
		cin >>p >> t;
		p--;
		a[i]=t;
		if(p==-1)
			root=i;
		else
			adj[p].push_back(i);
		sum+=t;
	}
	if(sum%3!=0)
		cout << -1;
	else{
		x=-1;
		y=-1;
		value=sum/3;
		dfs(root);
		dfs2(root);
		for(int i=0;i<n;i++){
			if(i==root)
				continue;
			for(int j=0;j<adj[i].size();j++){
				int e=adj[i][j];
				if(a[i]==2*value && ans[e]!=-1){
					x=i+1;
					y=ans[e];
				}
			}
		}
		if(x!=-1 && y!=-1)
			cout << x << " " << y << endl;
		else
			cout << -1;
	}

}
