#include <bits/stdc++.h>
#define ll  long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc second
#define fr first

using namespace std;

const int N = 5e5+100;

vector<int>p[N];

struct Hash{
    static const int NM = 2;
    vector<ll>vals;
    ll mod[NM] = {(ll)(1e9+7),(ll)(1e9+9)};
    ll base[NM] = {(ll)(1e3+9),(ll)(1e3+7)};

    Hash(vector<int>&z){

        ll pw[NM];

        for(int j=0 ;j <NM ;j++){
            vals.push_back(0);
            pw[j] = 1;
        }

        for(int i=0 ;i <z.size() ; i++){
            for(int j=0 ;j <vals.size() ; j++){
                vals[j] += (pw[j]*z[i])%mod[j];
                vals[j] %= mod[j];
                pw[j]*=base[j];
                pw[j] %= mod[j];
            }
        }
    }

    bool operator <(const Hash o)const{
        return vals < o.vals;
    }

};
ll a[N];
int main(){
    int t;
    cin>>t;
    int n,m;
    while(t--){
        scanf("%d%d",&n,&m);

        for(int i=1 ;i <=n ;i ++){
            scanf("%lld",&a[i]);
            p[i].clear();
        }
        int x,y;
        for(int i=0 ;i <m ;i ++){
            scanf("%d%d",&x,&y);
            p[y].push_back(x);
        }
        map<Hash,ll>st;
        for(int i=1; i <=n ;i ++){
            sort(p[i].begin(),p[i].end());
            if(p[i].empty())continue;
            st[Hash(p[i])] += a[i];
        }
        ll gc = 0;
        for(auto x : st){
       //     cout<<x.sc<<" ";
            gc = __gcd(gc,x.sc);
        }
        //cout<<endl;

        printf("%lld\n",gc);

    }

    return 0;
}
