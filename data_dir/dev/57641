/*
ID: xildar91
PROG: humble
LANG: C++11
*/
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
int inf_int=2e9;
ll inf_ll=2e18;
typedef pair<int,int> pii;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()
template<typename T>
void prin(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i];
        if(i<a.size()-1)
            cout<<" ";
        else
            cout <<"\n";
    }
}
template<typename T>
void prin(set<T>& a)
{
    for(auto it=a.begin();it!=a.end();it++)
    {
        cout << *it<<" ";
    }
}
template<typename T>
void prin_new_line(vector<T>& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i]<<"\n";
    }
}
template<typename T,typename T1>
void prin_new_line(vector<pair<T,T1> >& a)
{
    for(int i=0;i<a.size();i++)
    {
        cout << a[i].fi<<" "<<a[i].se<<"\n";
    }
}

int sum_vec(vector<int>& a)
{
    int s=0;
    for(int i=0;i<a.size();i++)
    {
        s+=a[i];
    }
    return s;
}
template<typename T>
T max(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=max(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(vector<T>& a)
{
    T ans=a[0];
    for(int i=1;i<a.size();i++)
    {
        ans=min(ans,a[i]);
    }
    return ans;
}
template<typename T>
T min(T a,T b,T c)
{
    return min(a,min(b,c));
}
template<typename T>
T max(T a,T b,T c)
{
    return max(a,max(b,c));
}

double s_triangle(double x1,double y1,double x2,double y2,double x3,double y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1))/2);
}
int s_triangle(int x1,int y1,int x2,int y2,int x3,int y3)
{
    return abs(((x2-x1)*(y3-y1)-(x3-x1)*(y2-y1)));
}
bool overflow(ll a,ll b)
{
    if(a*b/b!=a)
        return true;
    return false;
}
#define x1 gfgs
#define y1 asd
bool debug=0;
const int maxn=600;
const double eps=0.00000001;
vector<int> g[maxn];
bool mat[maxn][maxn];
int ans[maxn];

void solve()
{
    int n,m;
    cin >> n >> m;
    if(m==0)
    {
        if(n==1)
        {
            cout << "Yes\n";
            cout << "a";
            return;
        }
        else if(n==2)
        {
            cout << "Yes\n";
            cout << "ac";
            return;
        }
        else
        {
            cout << "No";
            return;
        }
    }
    for(int e=0;e<m;e++)
    {
          int a,b;
          cin >> a >> b;
          g[a].pb(b);
          g[b].pb(a);
          mat[a][b]=1;
          mat[b][a]=1;
    }
    int mx=-1;
    vector<int> a;
    set<int> s;
    for(int i=1;i<=n;i++)
    {
        s.insert(g[i].sz);
    }
    vector<int> raz;
    for(auto it=s.begin();it!=s.end();it++)
    {
        raz.pb(*it);
    }
    reverse(raz.begin(),raz.end());
    if(raz[0]==n-1)
    {
        for(int i=1;i<=n;i++)
        {
            if(g[i].sz==n-1)
            {
                ans[i]=2;
            }
        }

        for(int i=1;i<=n;i++)
        {
            if(g[i].sz!=n-1)
            {
                ans[i]=1;
                for(int e=1;e<=n;e++)
                {
                    if(g[e].sz!=n-1 && mat[i][e])
                    {
                        ans[e]=1;
                    }
                }
                break;
            }
        }
        for(int i=1;i<=n;i++)
        {
            if(ans[i]==0)
            {
                ans[i]=3;
            }
        }
        for(int i=1;i<=n;i++)
        {
            for(int e=1;e<=n;e++)
            {
                if(i==e)
                    continue;
                if(mat[i][e])
                {
                    if(ans[i]==ans[e] || abs(ans[i]-ans[e])==1)
                    {
                        continue;
                    }
                    else
                    {
                        cout << "No";
                        return;
                    }
                }
                else
                {
                    if(ans[i]==ans[e] || abs(ans[i]-ans[e])==1)
                    {
                        cout << "No";
                        return;
                    }
                }
            }
        }
    }
    else
    {
        ans[1]=1;
        for(int i=2;i<=n;i++)
        {
            if(mat[1][i])
            {
                ans[i]=1;
            }
            else
            {
                ans[i]=3;
            }
        }
        for(int i=1;i<=n;i++)
        {
            if(ans[i]==0)
            {
                cout << "No";return;
            }
            for(int e=1;e<=n;e++)
            {
                if(i==e)
                    continue;

                if(mat[i][e])
                {
                    if(ans[i]==ans[e])
                    {
                        continue;
                    }
                    else
                    {
                        cout << "No";
                        return;
                    }
                }
                else
                {
                    if(ans[i]==ans[e])
                    {
                        cout << "No";
                        return;
                    }
                }
            }
        }
    }

    cout << "Yes\n";
    for(int i=1;i<=n;i++)
    {
        cout << char('a'-1+ans[i]);
    }



}


#define FILE "humble"
int main()
{

       // freopen("laundro_matt.txt","r",stdin);
      //  freopen("output.txt","w",stdout);

       //  freopen(FILE".in","r",stdin);
      //  freopen(FILE".out","w",stdout);
       if(!debug)
       {
            ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }
        int t=1;
        while(t--)
            solve();
        return 0;
}
