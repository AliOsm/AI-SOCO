#pragma comment(linker, "/STACK:640000000")
#include<iostream>
#include<cstdio>
#include<cassert>
#include<cstring>
#include<ctime>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<bitset>
#include<algorithm>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

ll v[4444],d[4444],p[4444];

int main() {
    #ifdef LOCAL
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    
    int n; cin >> n;
    
    vector<int> q;
    
    for (int i = 0; i < n; i++) {
        cin >> v[i] >> d[i] >> p[i];
        q.pb(i);
    }
    
    vector<int> res;
    
    while(sz(q) > 0) {
        int cur = q[0];
        res.pb(cur);
        vector<int> nxt;
        ll val = v[cur];
        ll sub = 0;
        for (int i = 1; i < sz(q); i++) {
            int id = q[i];
            p[id] -= sub + val;
            if (p[id] < 0) {
                sub += d[id];
            } else {
                nxt.pb(id);
            }
            val--;
            if (val < 0) val = 0;
        }
        q = nxt;
    }
    
    cout << sz(res) << endl;
    
    for (int i = 0; i < sz(res); i++) {
        cout << res[i] + 1 << " ";
    }
        
    return 0;
}
