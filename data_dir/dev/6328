#include<bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define int long long int
#define ld long double
#define pb 	push_back
#define endl '\n'
#define all(x) x.begin(),x.end()
#define mod 1000000007LL
#define F first
#define S second
#define debug(x) cerr<<#x<<" = "<<x<<endl;
#define stl(it,m) for(auto it=m.begin();it!=m.end();it++)
#define speed ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
template<typename has_less>
using oset =tree<has_less,null_type,less<has_less>,rb_tree_tag,tree_order_statistics_node_update>;
const int p= 998244353;
bool prime(int x)
{
    for(int i=2;i<=sqrt(x);i++)
    if(x%i==0)return 0;
    return 1;
}
main()
{
    vector<pair<int,int>>vp;
    int n;
    cin>>n;
    if(n==1||n==2)return cout<<-1,0;
    
    int tot=0;
    int deg[n+1];
    for(int i=1;i<=n;i++)deg[i]=2;
    int sum=n;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(i+1==j||i==j||i-1==j)continue;
            if(i==n&&j==1)continue;
            if(i==1&&j==n)continue;
            if(prime(sum))break;
            if(deg[i]==2&&deg[j]==2)
            {
                deg[i]=3;deg[j]=3;
                sum++;
                vp.pb({i,j});
            }
            if(prime(sum))break;
        }
        if(prime(sum))break;
    }
    cout<<sum<<endl;
    for(int i=1;i<=n;i++)
    if(i!=n)cout<<i<<" "<<1+i<<endl;
    else cout<<i<<" "<<1<<endl;
    for(int i=0;i<vp.size();i++)cout<<vp[i].F<<" "<<vp[i].S<<endl;
}