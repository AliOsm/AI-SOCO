#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell 1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
void solve()
{
    ll n , m , x , y , sf , ss ;
    vector<ll> v1 , v2 , vv ;
    vector<vector<ll> > vec ;
    cin >> n ;
    rep( i , 0 , n )
    {
        cin >> x ;
        v1.pb(x);
        vv.pb(x);
    }
    vv.pb(0);
    vv.pb(hell+hell);
    cin >> m ;
    rep( i , 0 , m )
    {
        cin >> x ;
        v2.pb(x);
        vv.pb(x);
    }
    sort(all(v1));
    sort(all(v2));
    sort(all(vv));
    rep( i , 0 , sz(vv) )
    {
        x = upper_bound( all(v1) , vv[i] ) - v1.begin() ;
        y = upper_bound( all(v2) , vv[i] ) - v2.begin() ;
        sf = 2*x + 3*(n-x) ;
        ss = 2*y + 3*(m-y) ;
        //cout << vv[i] << " " << sf << ' ' << ss << "\n" ;
        vec.pb( {sf-ss,sf,ss} ) ;
    }
    sort(all(vec));
    reverse(all(vec));
    cout << vec[0][1] << ":" << vec[0][2] ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve();
    return 0 ;
}
