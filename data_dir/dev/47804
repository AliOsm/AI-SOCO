#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y,z;
    bool operator <(const P&a) const{
        return x<a.x;
    }
};



bool as(P a,P b)
{
    return a.x<b.x;
}

long long x,y,z,mod=998244353;
vector<int> v;
int i,n,m,k,a,d,b,c,dx[10]={1,2,2,1,-1,-2,-2,-1},dy[10]={2,1,-1,-2,-2,-1,1,2};
int e;
int o[131][111];
int l[5331];
int j[1];
int par[1];


stack<int> s;
//multiset<int> s[5111];
queue<int> q;
P u[1];
char r[1];
//string r;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p,p1;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

void f(int n,int m)
{
    for(int h=0;h<8;h++)
    {
        int x=n+dx[h],y=m+dy[h];
        if(0<min(x,y)&&max(x,y)<=a&&o[x][y]==0)
        {
            o[x][y]=3-o[n][m];
            f(x,y);
        }
    }
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;t++)
        for(int w=1;w<=a;w++)
        if(!o[t][w])
    {
        o[t][w]=1;
        f(t,w);
    }
    for(int t=1;t<=a;t++,puts(""))
        for(int w=1;w<=a;w++)
        if(o[t][w]==1) printf("W");
        else printf("B");
}
