#include <bits/stdc++.h>

#define eb emplace_back
#define pb push_back
#define ll long long
#define ld long double
#define mp make_pair
#define ull unsigned long long
#define all(s) s.begin(), s.end()
#define sz(a) (int)a.size()
const int INF = (int)1e9 + 7;
const int N = (int)11;
const int MAXN = (int)2e6 + 228;
const double eps = (double)1e-9;
const int mod = (int)1e9 + 7;

using namespace std;

int n, a[MAXN];
ll mx, pref[MAXN], suf[MAXN];
int last[MAXN], st[MAXN], r[MAXN], sz, l[MAXN];

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);

#ifdef Local
  freopen(".in", "r", stdin);
#else
  // freopen("sum.in", "r", stdin);
  // freopen("sum.out", "w", stdout);
#endif
  cin >> n;
  for (int i = 1; i <= n; ++i) cin >> a[i];
  last[n + 1] = mod;
  st[0] = n + 1;
  for (int i = n; i >= 1; --i) {
    while (sz && a[st[sz]] > a[i]) sz--;
    r[i] = st[sz];
    st[++sz] = i;
    last[i] = min(last[i + 1], a[i]);
  }
  sz = 0;
  st[sz] = 0;
  for (int i = 1; i <= n; ++i) {
    while (sz && a[st[sz]] > a[i]) sz--;
    l[i] = st[sz];
    st[++sz] = i;
    pref[i] = pref[l[i]] + (i - l[i]) * 1ll * a[i];
  }
  mx = -1;
  int pos = -1;
  for (int i = n; i >= 1; --i) {
    suf[i] = suf[r[i]] + (r[i] - i) * 1ll * a[i];
    if (mx < pref[i] + suf[i] - a[i]) {
      mx = pref[i] + suf[i] - a[i];
      pos = i;
    }
  }
  last[pos] = a[pos];
  for (int i = pos - 1; i >= 1; --i) {
    last[i] = min(last[i + 1], a[i]);
  }
  for (int i = pos + 1; i <= n; ++i) {
    last[i] = min(last[i - 1], a[i]);
  }
  for (int i = 1; i <= n; ++i) cout << last[i] << ' ';
  return 0;
}