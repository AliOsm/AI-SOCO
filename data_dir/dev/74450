#include<bits/stdc++.h>
#define fr first
#define sc second 
#define pb push_back
#define mp make_pair
const int INF = 1e9+7;
const int MAXN = 3e6 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;
int dx[] = {1 , -1 , 0 , 0};
int dy[] = {0 , 0 , 1 , -1};

queue<int>even;
queue<int>odd;
string s;
int x,y,sz;
void solve(){


	cin>>s;
	while (!odd.empty()) odd.pop();
	while (!even.empty()) even.pop();
//	cout<<s<<endl;
	for (int i=0; i<s.size(); i++){
		x = s[i] - '0';
		if (x % 2 ==0) odd.push(x);
		else
		even.push(x);
	}
	while (true){
		if (odd.empty() && even.empty()) break;
		if (odd.empty()){
			int t = even.front();
			cout<<t;
			even.pop();
		}
		else
		if (even.empty()){
			int t = odd.front();
			cout<<t;
			odd.pop();
		}
		else{
			int t = odd.front();
			int tt = even.front();
			if (t < tt){
				cout<<t;
				odd.pop();
			}  
			else{
				cout<<tt;
				even.pop();
			}
		}
	}
	
	cout<<endl;
} 
int main() {
    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
    cout.setf(ios::fixed), cout.precision(20);
 	//freopen("equal.in", "r", stdin);
	//freopen("equal.out", "w", stdout);
	int t;
	cin>>t;
	//t = 1;
	while (t > 0){
		t--;
		solve();
	}
	return 0;
}
