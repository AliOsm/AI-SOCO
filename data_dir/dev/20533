//be naame khodaa

#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <cassert>
#include <iomanip>
typedef long long ll;
const int INF = 1e9;
const int maxn = 405;

using namespace std;

int mat[maxn][maxn];
int d[maxn];

int main()
{
	ios_base::sync_with_stdio(false);
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int a, b;
		cin >> a >> b;
		a--; b--;
		mat[a][b] = mat[b][a] = 1;
	}
	int ans = -1;
	if (mat[0][n-1])
		for (int x = 0; x < n; x++)
			for (int y = 0; y < n; y++)
				mat[x][y] = !mat[x][y];
	fill(d, d + n, INF);
	d[0] = 0;
	queue <int> q;
	q.push(0);
	while (!q.empty())
	{
		int x = q.front();
		q.pop();
		if (x == n-1) return (cout << d[x] << endl), 0;
		for (int y = 0; y < n; y++)
			if (y != x && mat[x][y] && d[x] + 1 < d[y])
			{
				d[y] = d[x] + 1;
				q.push(y);
			}
	}
	cout << -1 << endl;
	return 0;
}
