#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <bitset>
#include <algorithm>
#include <complex>
#include <array>
using namespace std;
 
#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) (c).begin(), (c).end()
 
typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;
typedef vector<double> VD;
typedef vector<VD> VVD;

template<typename T> void chmin(T &a, T b) { if (a > b) a = b; }
template<typename T> void chmax(T &a, T b) { if (a < b) a = b; }

int in() { int x; scanf("%d", &x); return x; }
ll lin() { ll x; scanf("%lld", &x); return x; }

const ll INF = 1e18;

int main() {
    int n, m = 10;
    cin >> n;

    VVL dp(n + 1, VL(m, -INF));
    dp[0][0] = 0;
    REP(i,n){
        int k = in();
        VVL c(3);
        REP(j,k){
            int x = in() - 1, d = in();
            c[x].push_back(d);
        }
        REP(j,3){
            sort(ALL(c[j]));
            reverse(ALL(c[j]));
        }
        REP(j,m){
            if (dp[i][j] < 0) continue;
            REP(x1,min((int)c[0].size(), 3)+1) REP(x2,min((int)c[1].size(), 1)+1) REP(x3,min((int)c[2].size(), 1) + 1){
                int cost = x1 + 2 * x2 + 3 * x3;
                if (cost > 3) continue;
                ll sum = 0, ma = 0;
                REP(z,x1){
                    sum += c[0][z];
                    chmax(ma, c[0][z]);
                }
                REP(z,x2){
                    sum += c[1][z];
                    chmax(ma, c[1][z]);
                }
                REP(z,x3){
                    sum += c[2][z];
                    chmax(ma, c[2][z]);
                }
                int cnt = x1 + x2 + x3;
                if (j + cnt >= m) sum += ma;
                chmax(dp[i + 1][(j + cnt) % m], dp[i][j] + sum);
            }
        }
    }

    // REP(i,n+1){
    //     REP(j,m) cout << dp[i][j] << " ";
    //     cout << endl;
    // }

    ll ans = 0;
    REP(j,m) chmax(ans, dp[n][j]);
    cout << ans << endl;

    return 0;
}