/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 1e3 + 5;
int n, m, a[N][N], b[N], mx[N][N][2];

inline void readInput() {
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> a[i][j];
}

inline void solve() {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++)
			b[j] = a[i][j];
		sort(b, b + m);
		int k = unique(b, b + m) - b;
		for (int j = 0; j < m; j++) {
			mx[i][j][0] = lower_bound(b, b + k, a[i][j]) - b;
			mx[i][j][1] = k - mx[i][j][0] - 1;
		}
	}
	for (int j = 0; j < m; j++) {
		for (int i = 0; i < n; i++)
			b[i] = a[i][j];
		sort(b, b + n);
		int k = unique(b, b + n) - b;
		for (int i = 0; i < n; i++) {
			int x = lower_bound(b, b + k, a[i][j]) - b;
			mx[i][j][0] = max(mx[i][j][0], x);
			mx[i][j][1] = max(mx[i][j][1], k - x - 1);
		}
	}
}

inline void writeOutput() {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++)
			cout << mx[i][j][0] + mx[i][j][1] + 1 << ' ';
		cout << endl;
	}
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	readInput(), solve(), writeOutput();
	return 0;
}
