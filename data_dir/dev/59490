#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("diamonds.in");ofstream out("diamonds.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int SORT(str &t){
    int o = 0, a = t.size();
    for(int q=0; q<a; q++){
        for(int w=1; w<a-q; w++){
            if(t[w-1] > t[w]) swap(t[w-1], t[w]), o++;
        }
    }
    return o;
}

int main() {
    fast; FILE;
    int z; cin>>z;
    for(; z; z--){
        int a; str x,y; cin>>a>>x>>y;
        vec<int> n(26), k(26);
        for(char c : x) n[c-'a']++, k[c-'a']++;
        for(char c : y) n[c-'a']--;
        int fl = 1;
        for(int i : n) fl&=i==0;
        if(!fl){
            cout<<"NO\n";
            continue;
        }
        fl = 0;
        for(int i : k) fl |= i>1;
        if(fl){
            cout<<"YES\n";
            continue;
        }
        int k1 = SORT(x), k2 = SORT(y);
        cout<<((k1+k2)%2==0 ? "YES" : "NO")<<"\n";
    }
}