//In the name of Allah

#include <bits/stdc++.h>
using namespace std;

#define int ll

typedef long long ll;
typedef pair <int , int> pii;

const int N = 6e2+10 , mod = 1e9+7;

int a[N] , dp[N][N] , fact[N] , c[N][N] , sz[N] , gp[N];

inline void pre_calc(){
	for(int i = 0 ; i < N ; i++)
		fact[i] = i ? 1ll * fact[i - 1] * i % mod : 1;
	for(int i = 0 ; i < N ; i++)
		for(int j = i ; j < N ; j++)
			c[i][j] = i ? (c[i - 1][j - 1] + c[i][j - 1]) % mod : 1;
}

int32_t main(){
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	pre_calc();
	int n;
	cin >> n;
	for(int i = 1 ; i <= n ; i++)
		cin >> a[i];
	int cnt = 1;
	for(int i = 1 ; i <= n ; i++){
		if(gp[i])
			continue;
		gp[i] = cnt;
		sz[cnt] = 1;
		for(int j = i + 1 ; j <= n ; j++){
			int x = sqrt(1ll * a[i] * a[j]);
			if(1ll * x * x == 1ll * a[i] * a[j]){
				gp[j] = cnt;
				sz[cnt]++;
			}
		}
		cnt++;
	}
	int sum = 0;
	dp[0][0] = 1;
	for(int i = 1 ; i < cnt ; i++){
		sum += sz[i];
		for(int j = 0 ; j < sum ; j++){
			for(int k = 1 ; k <= min(sum - sz[i] + 1 , sz[i]) ; k++){
				for(int l = 0 ; l <= min(sum - sz[i] , k) ; l++){
					int X = j - sz[i] + k + l;
					if(X < 0 || sum - sz[i] + 1 - X < 0)
						continue;
					int y = 1ll * dp[i - 1][X] * c[l][X] % mod;
					y = y * c[k - l][sum - sz[i] + 1 - X] % mod;
					y = y * fact[sz[i]] % mod;
					y = y * c[k - 1][sz[i] - 1] % mod;
					(dp[i][j] += y) %= mod;
				}
			}
//			cout << i << " " << j << " " << dp[i][j] << endl;
		}
	}
	cout << dp[cnt - 1][0];
	return 0;
}

