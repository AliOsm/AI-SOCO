#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


signed main()
{
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);  
   
 #ifndef ONLINE_JUDGE
    if(fopen("INPUT.txt","r"))
    {
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
    }
 #endif

// -------------------------------------Code starts here---------------------------------------------------------------------     

   int t;
   cin>>t;
   while (t--)
   {
      int power[65]={0};
      power[0]=1;
      int n,k;
      cin>>n>>k;
      int cnt=0;
      for(int i=1;i<=60;i++)
      {
         power[i]=power[i-1]*k;
         if(power[i]>=1e16)
         {
            cnt=i;
            break;
         }
      }

      int a[n+1];
      for(int i=1;i<=n;i++)
         cin>>a[i];
      sort(a+1,a+n+1);
      int mm[65]={0};
      bool flag=true;
      for(int i=n;i>=1;i--)
      {
         int z=a[i];
         int ini=cnt;
         while (ini>=0 && z>0 && flag)
         {         
         while (z/power[ini]==0)
         {
            ini--;            
            if(ini==-1)
               break;
         }
         if(ini<0)
         {
            if(z!=0)
            {
               flag=false;
               break;
            }
         }
         int kk=z/power[ini];
         if(kk>1)
         {
            flag=false;
            break;
         }
         mm[ini]++;
         z=z%power[ini];
         ini--;
         }         
      }   

      if(!flag)
      {
         cout<<"NO\n";
      }   
      else
      {
         for(int i=0;i<=cnt;i++)
         {
            if(mm[i]>1)
            {
               flag=false;
               break;
            }
         }
         if(flag)
         {
            cout<<"YES\n";
         }
         else
         {
            cout<<"NO\n";
         }
         
      }
      
   }
   

// -------------------------------------Code ends here------------------------------------------------------------------
     clock_t clk;
 	clk = clock();
 
    clk = clock() - clk;
 	cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
 	return 0;
 }
