#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007
#define dancila 3.14159265359
#define eps 1e-9

// #define fisier 1

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    int x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
long long rand_seed()
{
    long long a = rng();
    return a;
}

int n;
pair<int, int> p[100002];

bool same(int i, int j)
{
    while(p[i].se != 0)
    {
        i = p[i].se;
        if(i == j)
            return 1;
    }
    return 0;
}
int main()
{

    #ifdef fisier
        ifstream f("input.in");
        ofstream g("output.out");
    #endif

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;
    int nrL = 0;
    for(int i = 1; i <= n; ++i)
    {
        cin >> p[i].fi >> p[i].se;
        nrL += (p[i].se == 0);
    }
    while(nrL > 1)
    {
        for(int i = 1; i <= n; ++i)
            if(p[i].se == 0)
            {
                for(int j = 1; j <= n; ++j)
                    if(j != i && p[j].fi == 0)
                    {
                        if(!same(j, i))
                        {
                            p[i].se = j;
                            p[j].fi = i;
                           // cout << "rz " << i << " " << j << '\n';
                            --nrL;
                            break;
                        }
                    }
                break;
            }
    }
    for(int i = 1; i <= n; ++i)
        cout << p[i].fi << " " << p[i].se << '\n';
    return 0;
}
