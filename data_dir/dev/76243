#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <sstream>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
#include <random>
#include <chrono>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN = 100050;

struct Op {
    int l, r, d;
    void in(){
        scanf("%d %d %d", &l, &r, &d);
        --l;
    }
};

int n, m, k, mul[MAXN];
Op op[MAXN];
ll ans[MAXN], delta[MAXN];

int main(){
    while(scanf("%d %d %d", &n, &m, &k) >= 1){
        memset(delta, 0, sizeof(delta));
        forn(i, n) scanf("%lld", &ans[i]);
        forn(i, m){
            op[i].in();
        }
        forn(i, k){
            int l, r;
            scanf("%d %d", &l, &r);
            --l;
            mul[l]++;
            mul[r]--;
        }
        ll acum = 0;
        forn(i, m){
            acum += mul[i];
            delta[op[i].l] += (ll)op[i].d*acum;
            delta[op[i].r] -= (ll)op[i].d*acum;
        }
        acum = 0; 
        forn(i, n){
            acum += delta[i];
            ans[i] += acum;
        }
        forn(i, n){
            if(i) printf(" ");
            printf("%lld", ans[i]);
        }
        puts("");
    }
    return 0;
}
