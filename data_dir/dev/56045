#include <bits/stdc++.h>

using namespace std;

typedef long long ll ;

int n , m ;
string var[5555] ;
vector < string > v[5555] ;
unordered_map < string , int > Map ;
    int c[5555] ;
int solve(int idx, int num)
{
    fill(c,c+5555,0) ;
    int cnt = 0 ;
    int t1, t2 ;
    for ( int i = 1 ; i <= n ; i++ )
    {
        if ( v[i].size() == 1 ) c[i] = v[i][0][idx] - '0' ;
        else {
            if ( v[i][0] == "?" ) t1 = num ;
            else t1 = c[Map[v[i][0]]] ;
            if ( v[i][2] == "?" ) t2 = num ;
            else t2 = c[Map[v[i][2]]] ;
            if ( v[i][1] == "XOR" ) c[i] = t1^t2 ;
            else if ( v[i][1] == "AND" ) c[i] = t1&t2 ;
            else c[i] = t1|t2 ;
            cnt += c[i] ;
        }
    }
    return cnt ;
}
int main()
{
    ios_base::sync_with_stdio(0) ;
    cin.tie(0) ;
    cin >> n >> m ;
    string waste ;
    string line ;
    string inp ;
    for ( int i = 1 ; i <= n ;i++ )
    {
        cin >> var[i] >> waste ;
        Map[var[i]] = i ;
        getline(cin,line) ;
        stringstream ss(line) ;

        while ( ss >> inp )
            v[i].push_back(inp) ;
    }
    int n1, n2 ;
    string ans ;
    ans.resize(m) ;
    string ans2 ;
    ans2.resize(m) ;
    for ( int i = 0 ; i < m ; i++ )
    {
        n1 = solve(i,0) ;
        n2 = solve(i,1) ;
        if ( n1 <= n2 )
            ans[i] = '0' ;
        else ans[i] = '1' ;
        if ( n1 >= n2 )
            ans2[i] = '0' ;
        else ans2[i] = '1' ;
    }
    cout << ans << "\n" << ans2;
    return 0;
}
