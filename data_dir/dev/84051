#include <bits/stdc++.h>
using namespace std;

#define rep(i,a,n) for (int i = a;i<=n;++i)
#define per(i,a,n) for (int i = n;i>=a;--i)
#define all(x) (x).begin(), (x).end()     
#define SZ(x) ((int)x.size())

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vi = vector<int>;
using vl = vector<ll>;

mt19937 mrand(random_device{}());
ll rnd(ll a, ll b) { return a + mrand() % (b - a + 1); }
ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }

int _;

void solve() {
      int n, m, a, b, c;
      cin >> n >> m >> a >> b >> c;
      vector<vi> g(n + 1);
      vl p(m + 1);
      rep(i, 1, m) {
            cin >> p[i];
      }
      rep(i, 1, m) {
            int u, v;
            cin >> u >> v;
            g[u].push_back(v);
            g[v].push_back(u);
      }
      sort(p.begin() + 1, p.end());
      rep(i, 1, m) p[i] += p[i - 1];
      int x[3] = { a, b, c };
      vector<vi> d(3, vector<int>(n + 1, INT_MAX));
      rep(i, 0, 2) {
            queue <int> q;
            q.push(x[i]);
            d[i][x[i]] = 0;
            while (SZ(q)) {
                  int me = q.front();
                  q.pop();
                  for (int v : g[me]) {
                        if (d[i][v] > d[i][me] + 1) {
                              d[i][v] = d[i][me] + 1;
                              q.push(v);
                        }
                  }
            }
      }
      ll ans = LLONG_MAX;
      rep(i, 1, n) {
            int id = d[0][i] + d[1][i] + d[2][i];
            if (id > m) continue;
            ans = min(ans, p[d[1][i]] + p[id]);
      }
      cout << ans << "\n";
}

int main() {
      ios::sync_with_stdio(false); cin.tie(0);
#ifdef arrias
      freopen("a.txt", "r", stdin);
#endif
      for (cin >> _; _; _--) {
            solve();
      }
      return 0;
}