#include <bits/stdc++.h>
#define SZ(x) (int)x.size()
#define X first
#define Y second
typedef long long ll;
const int SZ=1e2+5;
using namespace std;

const int n=4;
char grid[n][n];

bool isWin()
{
    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            int sum=0, r=0, c=0;
            while(i+r<n && j+c<n && grid[i+r][j+c]=='x') {
                sum++;
                r++;
            }
            if(sum>=3)
                return true;
        }
    }
    
    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            int sum=0, r=0, c=0;
            while(i+r<n && j+c<n && grid[i+r][j+c]=='x') {
                sum++;
                c++;
            }
            if(sum>=3)
                return true;
        }
    }

    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            int sum=0, r=0, c=0;
            while(i+r<n && j+c<n && grid[i+r][j+c]=='x') {
                sum++;
                r++;
                c++;
            }
            if(sum>=3)
                return true;
        }
    }

    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            int sum=0, r=0, c=0;
            while(i+r<n && j-c>=0 && grid[i+r][j-c]=='x') {
                sum++;
                r++;
                c++;
            }
            if(sum>=3)
                return true;
        }
    }
    
    return false;
}

bool canWin()
{
    for(int i=0;i<n;i++) {
        for(int j=0;j<n;j++) {
            if(grid[i][j]!='.')
                continue;
            grid[i][j]='x';
            if(isWin())
                return true;
            grid[i][j]='.';
        }
    }
    return false;
}

int main()
{
    for(int i=0;i<n;i++)
        scanf("%s",grid[i]);

    cout<<(canWin()?"YES":"NO");
}