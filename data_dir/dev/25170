#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define IO ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
const int N = 4e5 + 5, M = 2 * N + 5;

char s[N];
int n, col[N];

void check(int idx){
    bool baz = false;
    for(int i = 0 ; i < idx && baz == false; ++i)
        if(col[idx] && col[i] == col[idx] && s[i] <= 'z')baz = true;
    if(baz)exit(puts("NO"));
}

void color(int idx){
    for(int i = 0 ; i < idx ; ++i)
        if(!col[i])col[i] = (col[idx] ^ 3);
}

int getColor(int idx){
    if(col[idx])return col[idx];
    bool one = false, two = false;
    for(int i = 0 ; i < idx ; ++i)
        one |= (col[i] == 1 && s[i] <= 'z'),
        two |= (col[i] == 2 && s[i] <= 'z');
    if(one && two)exit(puts("NO"));
    return (one ? 2 : 1);
}

int main(){
    scanf("%d %s", &n, s);
    for(int j = 0 ; j < n ; ++j){
        int idx = -1;
        char mn = 'z' + 1;
        for(int i = 0 ; i < n ; ++i){
            if(s[i] > 'z')continue;
            if(s[i] < mn)
                mn = s[i], idx = i;
        }
        check(idx);
        if(!col[idx])
            col[idx] = getColor(idx);
        color(idx);
        // for(int i = 0 ; i < n ; ++i)cout << col[i] << " "; cout << endl;
        s[idx] = 'z' + 1;
    }
    puts("YES");
    for(int i = 0 ; i < n ; ++i)
        printf("%d", --col[i]);
    puts("");
}