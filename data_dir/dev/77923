#include <algorithm>
#include <iostream>

using namespace std;

const int N = 100000;

int dsu[N], cc[N];

int find(int i) {
	return dsu[i] < 0 ? i : (dsu[i] = find(dsu[i]));
}

void join(int i, int j) {
	i = find(i);
	j = find(j);
	if (i == j)
		return;
	if (dsu[i] > dsu[j]) {
		dsu[i] = j;
		cc[j] = min(cc[j], cc[i]);
	} else {
		if (dsu[i] == dsu[j])
			dsu[i]--;
		dsu[j] = i;
		cc[i] = min(cc[i], cc[j]);
	}
}

int main() {
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> cc[i];
	fill_n(dsu, n, -1);
	while (m--) {
		int i, j;
		cin >> i >> j;
		i--, j--;
		join(i, j);
	}
	long long ans = 0;
	for (int i = 0; i < n; i++)
		if (dsu[i] < 0)
			ans += cc[i];
	cout << ans << endl;
	return 0;
}
