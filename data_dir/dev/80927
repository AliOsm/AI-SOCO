using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define TR(c, it) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define debug(x) { cout << #x << " = "; cout << (x) << endl; }
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long double ld;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
typedef pair<int,II> iII;
typedef pair<II,int> IIi;
const ll INF=1000000000+7;
const double esp=1e-13;
const ld PI = acos(-1.0);

ll nhan(ll x, ll y, ll m){
    ll ans=0;
    while (y){
        if (y%2) ans=(ans+x)%m;
        x=x*2%m;
        y/=2;
    }
    return ans;
}

ll power(ll a, ll n, ll m){
    ull ans=1;
    while (n){
        if (n%2) ans=ans*a%m;
        a=a*a%m;
        n/=2;
    }
    return ans;
}

bool check(ll n){
    if (n==2) return true;
    if (n<2 || n%2==0) return false;
    ll p[3]={3,5,7};
    ll a,d;
    int r,s;
    d=n-1;
    s=0;
    while (d%2==0){
        d/=2;
        s++;
    }
    FORE(i,0,2){
        if (n==p[i]) return true;
        if (n%p[i]==0) return false;
        a=power(p[i],d,n);
        if (a!=1){
            for (r=0; r<s && a!=n-1; r++) a=a*a%n;
            if (r==s) return false;
        }
    }
    return true;
}

ll phi(ll n){
    ll ans=n;
    ll n2=(ll)sqrt(n);
    FORE(i,2,n2)
    if (n%i==0){
        while (n%i==0) n/=i;
        ans-=ans/i;
    }
    if (n>1) ans-=ans/n;
    return ans;
}

int dem;
ll x,y,l,r;
ll a[100],b[100],f[10000];

ll len(ll i, ll j, ll l, ll r){
   // i++;
   // j--;
   // cout << i << " " << j << " " << l << " " << r < "\n\n";
   // return min(j,r)-max(l,i);
    ll left, right;

    if (l<=i) left = i + 1;
    else left = l;
    if (r>=j) right = j-1;
    else right = r;

    return right-left+1;
}

int main(){
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen(".out", "w", stdout);
    ios_base::sync_with_stdio (false);
    cin.tie();
    cin >> x >> y >> l >> r;
    ll s = 1;
    int sa = 0;
    while (1){
        a[++sa] = s;
        if (s>r/x) break;
        s*=x;
    }

    s = 1;
    int sb = 0;
    while (1){
        b[++sb] = s;
        if (s>r/y) break;
        s*=y;
    }

    int dem = 0;
    FORE(i,1,sa)
    FORE(j,1,sb)
    if (a[i]+b[j]<=r){
        f[++dem] = a[i] + b[j];
    }
    sort(f+1,f+dem+1);
  //  FORE(i,1,dem) cout << f[i] << " ";cout << "\n\n";
    ll ans = 0;//max( len(f[1],f[1],l,r), len(f[1],f[dem],l,r) );
    if (f[1]<=r) ans = max(ans, f[1]-l);
    if (f[dem]>=l) ans = max(ans, r-f[dem]);
    if (f[dem]<l) ans = max(ans,r-l+1);

    FORE(i,2,dem) ans = max(ans, len(f[i-1],f[i],l,r) );
    cout << ans;
}
