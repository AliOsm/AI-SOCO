#include <bits/stdc++.h>
using namespace std;
#define pf push_front
#define pb push_back
#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)
#define rep(i,t) for (LL i=0;i<t;i++)
#define pii pair<LL,LL>
#define pi pair<int,pii>
#define X first
#define Y second  
typedef long long LL;
typedef unsigned long long int ulli;
const LL maxN=1e5+7,MOD=1e9+7,INF=1e9+7,N=5000+7;
LL n,a[12],perm[12];
vector<LL>data[4*maxN];
vector<pii>qx,qy;
pii point[maxN];
bool done;
inline int left(int x){return 2*x+1;}
inline int right(int x){return 2*x+2;}
void build(int node, int st, int en)
{
  if(en-st<2)
  {
    data[node].pb(qx[st].Y);
    return ;
  }
  int mid=(st+en)>>1;
  build(left(node),st,mid);
  build(right(node),mid,en);
  merge(data[left(node)].begin(),data[left(node)].end(),data[right(node)].begin(),data[right(node)].end(),back_inserter(data[node]));
}
LL get(int node, int st, int en, int l, int r, int low, int up)
{
  if(en<=l || r<=st)
    return 0;
  if(st>=l && en<=r)
  {return upper_bound(data[node].begin(),data[node].end(),up)-lower_bound(data[node].begin(),data[node].end(),low);}
  int mid=(st+en)>>1;
  return get(left(node),st,mid,l,r,low,up)
        +get(right(node),mid,en,l,r,low,up);
}
bool my_sort(pii a, pii b)
{return (a.Y!=b.Y) ? a.Y<b.Y : a.X<b.X;}
int counti(int id, int hx1, int hx2, int hy1, int hy2)
{
  if(id==0)
    return get(0,0,n,0,hx1+1,hy2+1,INF);
  if(id==1)
    return get(0,0,n,hx1+1,hx2+1,hy2+1,INF);
  if(id==2)
    return get(0,0,n,hx2+1,n,hy2+1,INF);
  if(id==3)
  {
    return get(0,0,n,0,hx1+1,hy1+1,hy2);
  }
  if(id==4)
  {
    return get(0,0,n,hx1+1,hx2+1,hy1+1,hy2);
  }
  if(id==6)
    return get(0,0,n,0,hx1+1,-INF,hy1);
  if(id==7)
    return get(0,0,n,hx1+1,hx2+1,-INF,hy1);
  if(id==8)
    return get(0,0,n,hx2+1,n,-INF,hy1);
}
void solve()
{
  int h1=a[perm[0]]+a[perm[3]]+a[perm[6]],h2=h1+a[perm[1]]+a[perm[4]]+a[perm[7]];
  int w1=a[perm[6]]+a[perm[7]]+a[perm[8]],w2=w1+a[perm[3]]+a[perm[4]]+a[perm[5]];
  h1--;
  h2--;
  w1--;
  w2--;
  if(qx[h1].X!=qx[h1+1].X && qx[h2].X!=qx[h2+1].X && qy[w1].Y!=qy[w1+1].Y && qy[w2].Y!=qy[w2+1].Y)
  {
    LL p1=h1,p2=h2,p3=w1,p4=w2;
    //points
    h1=qx[h1].X;
    h2=qx[h2].X;
    w1=qy[w1].Y;
    w2=qy[w2].Y;
    done=true;
    rep(i,5)
    {
      if(counti(i,p1,p2,w1,w2)!=a[perm[i]])
        {done=false;break;}
    }
    for(int i=6;i<9;i++)
    {
      if(counti(i,p1,p2,w1,w2)!=a[perm[i]])
        {done=false;break;}
    }
    if(done)
    {
      long double ans;
      ans=2*h1+1;
      cout<<fixed<<ans/2<<" ";
      ans=2*h2+1;
      cout<<fixed<<ans/2<<"\n";
      ans=2*w1+1;
      cout<<fixed<<ans/2<<" ";
      ans=2*w2+1;
      cout<<fixed<<ans/2<<"\n";
      return ;
    }
  }
}
main()  
{
  cin.tie(0),cout.tie(0),ios::sync_with_stdio(false);
  cin>>n;
  rep(i,n)
    cin>>point[i].X>>point[i].Y,qx.pb(point[i]),qy.pb(point[i]);
  sort(qx.begin(),qx.end());
  sort(qy.begin(),qy.end(),my_sort);
  build(0,0,n);
  rep(i,9)
    cin>>a[i],perm[i]=i;
  solve();
  if(done)
    return cout<<"\n",0;
  while(next_permutation(perm,perm+9))
  {
  solve();
  if(done)
   return cout<<"\n",0;
  }
  return cout<<"-1\n",0;
}