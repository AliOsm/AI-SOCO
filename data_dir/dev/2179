# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
//#define max(a,b) ((a)>(b)?(a):(b))
//#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=200005; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
	string s="/home/jslijin/jslijin/code/";
    freopen((s+"code.in").c_str(), "r", stdin);
    freopen((s+"code.out").c_str(), "w", stdout);
}

struct Seg_T{
    #define lson l,mid,rt<<1
    #define rson mid+1,r,rt<<1|1
    int n,L,R; ll s[4*N],v;
    void push_up(int rt){ s[rt]=max(s[rt<<1],s[rt<<1|1]); }
    void Init(int _n){ n=_n,fill(s,s+4*n+1,-oo); }
    void U(int l,int r,int rt){
        if (l==r) { s[rt]=v; return; }
        int mid=(l+r)>>1;
        if (L<=mid) U(lson); else U(rson);
        push_up(rt);
    }
    ll Q(int l,int r,int rt) {
        if (L<=l && r<=R) return s[rt];
        int mid=(l+r)>>1; ll ret=-oo;
        if (L<=mid) ret=max(ret,Q(lson));
        if (R>mid) ret=max(ret,Q(rson));
        return ret;
    }
    void Update(int _L,ll _v){ L=_L,v=_v; U(1,n,1); }
    ll Query(int _L,int _R) { L=_L,R=_R; return Q(1,n,1); }
};

int n,k,m,Q,b[5],x,l,r,op,y; Seg_T T[32];

ll qry(int l,int r) {
	ll ans=0,s=(1<<k)-1;
	rep(i,0,(1<<k-1)-1) ans=max(ans,T[i].Query(l,r)+T[s^i].Query(l,r));
	return ans;
}

void upd(int x,int b[]) {
	rep(i,0,(1<<k)-1) {
		y=0;
		rep(j,0,k-1) if ((i>>j)&1) y+=b[j]; else y-=b[j];
		T[i].Update(x,y);
	}
}

int main() {
    //file_put();

    scanf("%d%d",&n,&k);
    rep(i,0,(1<<k)-1) T[i].Init(n);
    rep(i,1,n) { rep(j,0,k-1) scanf("%d",&b[j]); upd(i,b); }
    scanf("%d",&Q);
    while (Q--) {
    	scanf("%d",&op);
    	if (op==1) {
    		scanf("%d",&x);
    		rep(i,0,k-1) scanf("%d",&b[i]);
    		upd(x,b);
		} else scanf("%d%d",&l,&r),printf("%lld\n",qry(l,r));
	}

    return 0;
}