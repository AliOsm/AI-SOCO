#include <bits/stdc++.h>
#define rep(i,a,b) for(int i = (a); i <= (b); i++)
#define rng(a) a.begin(), a.end()
#define ina(n,a) cin >> n; for(int i = 1; i <= n; i++) cin >> a[i]
#define sz(x) (int)(x).size()
#define se second
#define fi first
#define prev            coyhhhhhhyoc    
#define next          sdNNNmNNNNNNNmds  
#define y0           hNNNNy_yNNNNNN_sNh
#define y1          mNNNNNdtdNNNNNNtsNNm
#define yn          mNNNNNNNNy___smNNNms
#define tm            oooooosyysooooot 
#define read               tyhyt        
#define rank              ytmNmo         
#define index              yyy
#define pb push_back
#define pcnt __builtin_popcountll
#define rrep(i,a,b) for(int i = (b); i >= (a); i--)
#define rall(x,a) for(auto x : a)
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
using namespace std;

const int N = 3333;
string s;
int n, k;

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> k >> s;
    vector<vector<int> > ans;
    vector<int> pos;
    rep(i, 1, n) {
        if(s[i - 1] == 'L') {
            pos.pb(i);
        }
    }
    while(1) {
        vector<int> v, poss;
        string ss(s);
        bool found = false;
        rall(p, pos) {
            if(s[p - 1] == 'L') {
                if(p > 1 && s[p - 2] == 'R') {
                    found = true;
                    v.pb(p - 1);
                    poss.pb(p - 1);
                    swap(ss[p - 1], ss[p - 2]);
                } else {
                    poss.pb(p);
                }
            }
        }
        if(!found) {
            break;
        }
        s = ss;
        ans.pb(v);
        pos = poss;
    }
    vector<vector<int> > anss;
    rep(i, 0, sz(ans) - 1) {
        int cur = sz(anss) + sz(ans) - i;
        if(cur < k) {
            int need = k - cur;
            int split = min(sz(ans[i]) - 1, need);
            rep(j, 0, split - 1) {
                anss.pb(vector<int>(1, ans[i][j]));
            }
            anss.pb(vector<int>(ans[i].begin() + split, ans[i].end()));
        } else {
            anss.pb(ans[i]);
        }
    }
    if(sz(anss) != k) {
        cout << -1 << endl;
        return 0;
    }
    rall(v, anss) {
        cout << sz(v) << " ";
        rall(x, v) {
            cout << x << " ";
        }
        cout << endl;
    }
    return 0;
}
