#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

const int N = 26;
vector<int> g1[N], g2[N];
vector<int> marks1, marks2;

int main()
{
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  int n;
  cin >> n;
  string s1, s2;
  cin >> s1 >> s2;
  for(int i = 0; i < s1.size(); i++)
  {
    if(isalpha(s1[i]))
      g1[s1[i] - 'a'].push_back(i);
    else
      marks1.push_back(i);
  }
  for(int i = 0; i < s2.size(); i++)
  {
    if(isalpha(s2[i]))
      g2[s2[i] - 'a'].push_back(i);
    else
      marks2.push_back(i);
  }
  int pt1 = 0, pt2 = 0;
  vector<pair<int, int>> vec;
  for(int i = 0; i < 26; i++)
  {
    int have = min(g1[i].size(), g2[i].size());
    for(int j = 0; j < have; j++)
    {
      vec.push_back({g1[i][j], g2[i][j]});
    }
    while(have < g1[i].size() && pt2 < marks2.size())
    {
      vec.push_back({g1[i][have++], marks2[pt2++]});
    }
    while(have < g2[i].size() && pt1 < marks1.size())
    {
      vec.push_back({marks1[pt1++], g2[i][have++]});
    }
  }
  while (pt1 < marks1.size() && pt2 < marks2.size())
  {
    vec.push_back({marks1[pt1++], marks2[pt2++]});
  }
  cout << vec.size() << '\n';
  for(auto &cur: vec)
    cout << cur.first + 1 << ' ' << cur.second + 1 << '\n';
	return 0;
}
