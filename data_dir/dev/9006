#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template <typename T> using 	Set = tree<T, null_type,
				less<T>, rb_tree_tag,
				tree_order_statistics_node_update>;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 1e5 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

struct Node {
	int a, t, x;
} ar[Max];

unordered_map <int, Set <int>> add, rmv;

int query(int v, int cur) {
	return add[v].order_of_key(cur) - rmv[v].order_of_key(cur);
}

int main() {
#ifdef Mr_Emrul
	freopen("inputf.in", "r", stdin);
#endif /// Mr_Emrul

	int n;
	scanf("%d", &n);
	for(int i = 1; i <= n; i++) {
		scanf("%d %d %d", &ar[i].a, &ar[i].t, &ar[i].x);
		if(ar[i].a == 1) {
			add[ar[i].x].insert(ar[i].t);
		}
		else if(ar[i].a == 2) {
			rmv[ar[i].x].insert(ar[i].t);
		}
		else {
			printf("%d\n", query(ar[i].x, ar[i].t));
		}
	}
	return 0;
}