#include <bits/stdc++.h>
     
using namespace std;
typedef long long ll;
typedef vector<ll> vl ;
     
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
  
const int MOD = 998244353;
const int N = 1000005;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e18;

ll n,m,k,q;
vl b;
vl v[N];
ll ma=0;
map<pair<ll,ll>,ll >dp;
vector<pair<ll,ll> > vv;
map<pair<ll,ll>, bool > vis;

ll solve(ll id, ll pos){
    if(id>=vv.size())return 0;
    if(vis[mp(id, pos)])return dp[mp(id,pos)];
    vis[mp(id, pos)]=1;
    ll to_return =1e17;
    ll x=upper_bound(b.begin(),b.end(),vv[id].s)-b.begin();
    if(b[x]==1e18)x--;
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].s)+vv[id].s-vv[id].f+solve(id+1,vv[id].f));
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].f)+vv[id].s-vv[id].f+solve(id+1,vv[id].s));
    x=lower_bound(b.begin(),b.end(),vv[id].s)-b.begin();
    if(b[x]==1e18)x--;
    if(b[x]>vv[id].s)x--;
    if(b[x]==0)x++;
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].s)+vv[id].s-vv[id].f+solve(id+1,vv[id].f));
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].f)+vv[id].s-vv[id].f+solve(id+1,vv[id].s));
    x=upper_bound(b.begin(),b.end(),vv[id].f)-b.begin();
    if(b[x]==1e18)x--;
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].s)+vv[id].s-vv[id].f+solve(id+1,vv[id].f));
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].f)+vv[id].s-vv[id].f+solve(id+1,vv[id].s));
    x=lower_bound(b.begin(),b.end(),vv[id].f)-b.begin();
    if(b[x]==1e18)x--;
    if(b[x]>vv[id].f)x--;
    if(b[x]==0)x++;
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].s)+vv[id].s-vv[id].f+solve(id+1,vv[id].f));
    to_return = min(to_return , abs(pos-b[x])  + abs(b[x]-vv[id].f)+vv[id].s-vv[id].f+solve(id+1,vv[id].s));
    //cout << id << " " << pos << " " << to_return << endl;
    return dp[mp(id,pos)]=to_return;
}

int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    cin >> n >> m >> k >> q;
    for(int i=0;i<k;i++){
        ll l ,r;
        cin >> l >> r ;
        v[l].pb(r);
        ma=max(ma,l);
    }
    b.pb(0);
    b.pb(1e18);
    for(int i=1;i<=n;i++)sort(all(v[i]));
    for(int i=2;i<=n;i++){
        if(v[i].size()){
            vv.pb(mp(v[i][0], v[i][v[i].size()-1]));
        }
    }
    for(int i=0;i<q;i++){
        ll x;
        cin >> x;
        b.pb(x);
    }
    sort(all(b));
    ll ans = 0;
    ll x=1;
    if(v[1].size()){
        x=v[1][v[1].size()-1];
    }
    ans+=solve(0,x)+x-1+ma-1;
    cout << ans << endl;

    return 0;
}