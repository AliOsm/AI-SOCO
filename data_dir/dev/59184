#include <bits/stdc++.h>

using namespace std;

int n,m,k,s,color[100005],level[100005];

vector < int > ad[100005],color_ad[105],vv[100005];

bool vis[100005];

void bfs(int src)
{
    memset(vis, false, sizeof vis);

    queue < int > q;

    for(int i=0; i<color_ad[src].size(); i++)
    {
        q.push(color_ad[src][i]);

        vis[color_ad[src][i]]=true;

        level[color_ad[src][i]]=0;
    }

    while(!q.empty())
    {
        int u=q.front();

        q.pop();

        for(int i=0; i<ad[u].size(); i++)
        {
            int v=ad[u][i];

            if(!vis[v])
            {
                vis[v]=true;

                q.push(v);

                level[v]=level[u]+1;
            }
        }
    }

    for(int i=1; i<=n; i++)
    {
        vv[i].push_back(level[i]);
    }
}

int main()
{
    int i,j;

    scanf("%d %d %d %d",&n,&m,&k,&s);

    for(i=1; i<=n; i++)
    {
        scanf("%d",&color[i]);

        color_ad[color[i]].push_back(i);
    }

    for(i=1; i<=m; i++)
    {
        int u,v;

        scanf("%d %d",&u,&v);

        ad[u].push_back(v);

        ad[v].push_back(u);
    }

    for(i=1; i<=k; i++)
    {
        bfs(i);
    }

    for(i=1; i<=n; i++)
    {
        sort(vv[i].begin(),vv[i].end());
    }

    for(i=1; i<=n; i++)
    {
        long long int sum=0;

        for(j=0; j<s; j++)
        {
            sum+=(long long int)vv[i][j];
        }

        printf("%I64d ",sum);
    }

    printf("\n");

    return 0;

}
