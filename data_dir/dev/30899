#include <bits/stdc++.h>
 
using namespace std;
 
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define sz(x) ((int)(x).size())
#define whole(x) (x).begin(), (x).end()
 
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair < int, int > pii;
typedef pair < ll, ll > pll;
 
const int N = int(2e5) + 2;
const int LG = 20;
const ll mod = (int)1e9 + 7;
const int INF = (int)1e9 + 7;
const ll linf = 1e18; 
const ld pi = acos(-1);
const int base = 10;
const ld EPS = 1e-9;

int n, m;
vector < vector < char > > a;
vector < vector < int > > used;

void dfs (int x, int y){
    used[x][y] = 1;
    if (x + 1 <= n && a[x + 1][y] != '#' && !used[x + 1][y]) dfs(x + 1, y);
    if (y + 1 <= m && a[x][y + 1] != '#' && !used[x][y + 1]) dfs(x, y + 1);
}

void refresh (){
    for (int i = 0; i < n; ++i){
        for (int j = 0; j < m; ++j){
            used[i][j] = 0;
        }
    }
}

int main (){
    cin >> n >> m;
    a.resize(n + 2, vector < char > (m + 2));
    used.resize(n + 2, vector < int > (m + 2));
    for (int i = 0; i < n; ++i){
        for (int j = 0; j < m; ++j){
            cin >> a[i][j];
        }
    }
    if (n == 1 || m == 1){
        int ok = 1;
        for (int i = 0; i < n; ++i){
            for (int j = 0; j < m; ++j){
                if (a[i][j] == '#'){
                    ok = 0;
                }
            }
        }
        if (!ok) return cout << "0\n", 0;
        return cout << "1\n", 0;
    }
    dfs(0, 0);
    if (!used[n - 1][m - 1]) return cout << "0\n", 0;
    int x = n - 1, y = m - 1;
    while (x || y){
        if (x > 0 && a[x - 1][y] != '#' && used[x - 1][y]) --x;
        else --y;
        a[x][y] = '#';
    }
    a[0][0] = '.';
    refresh();
    dfs(0, 0);
    if (!used[n - 1][m - 1]) return cout << "1\n", 0;
    return cout << "2\n", 0;
}