    #include<bits/stdc++.h>
    #define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    #define Alhamdulillah return 0;
    #define pb push_back
    #define ins(x) insert(x)
    #define fi first
    #define se second
    #define lb lower_bound
    #define ub upper_bound
    #define all(v) (v.begin(),v.end())
    #define sz(v) ((ll)((v).size()))
    #define reset(v,val) memset(v,val,sizeof(v))
    #define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
    #define rep(i, x, n) for( i = x; i<(ll)(n); i++)
    using namespace std;
    typedef  long long int   ll;
    typedef long double ld;
    const long long int mod=1e9+7;
    ll dx[]={0,0,1,-1};
    ll dy[]={1,-1,0,-1};
    ll m,k,n,a[500005],b[500005],dp[500005];
    set<ll>st;
    string s1,s2,ch="";
    vector<ll>v,vans;
    vector< pair<ll,ll> >vv;
    vector< pair<long double,ll> > vvA,vvB;
    vector< pair< pair <ll,ll>,ll > > vvv;
    priority_queue <ll> pq;
    map<ll,ll> mp;



    int main(){
    In_the_name_of_allah_the_merciful
    	ll i=0,x,y,j=0,z=0,q,nb0=0,nb=0,nbmax=0,nbinf=0,nb2=0,mm=5e8,mx,idx=0,ok=0,l,r,negatif=0,positif=0,l1,r1;
    	set<  ll > ::iterator it,it1,it2;
    	char c;
    	 ll s,f;
       // freopen("a.txt","r",stdin);
        cin>>n>>k;
        ll res=0;
        for(i=1;i<=n;i++){
            cin>>a[i];
            if(a[i]>1)v.pb(i);}

        for(i=1;i<=n;i++){
            ll sum=0;
            ll prod=1;
            idx=lower_bound(v.begin(),v.end(),i)-v.begin();
            if(idx==v.size()){
                if(k==1)res++;
                continue;
            }
            z=v[idx];
            if(a[i]==1&&k==1)res++;
            sum=(z-i);
            nb=0;
            for(nb=1;nb<=60;nb++){
                j=idx+nb-1;
                if(j>=v.size())break;
                sum=sum+a[v[j]];
                if(prod>(2e18/a[v[j]]))break;
                prod*=a[v[j]];
                ll sm1=sum;
                ll nb1=0;
                if(j+1<v.size()){
                    sm1+=(v[j+1]-v[j]-1);
                    nb1=(v[j+1]-v[j]-1);
                }
                else {
                    sm1+=(n-v[j]);
                    nb1=(n-v[j]);
                }
                x=prod/k-sum;
                if(!(prod%k)&&x<=nb1&&x>=0){
                    res++;
                }
                sum=sm1;
            }
        }



        cout<<res;
    Alhamdulillah
     }
