//VFD
#include <bits/stdc++.h>
using namespace std;
#define pf push_front
#define pb push_back
#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)
#define rep(i,t) for (LL i=0;i<t;i++)
#define pii pair<LL,LL>
#define pi pair<pii,LL>
#define X first
#define Y second 
#define fast cin.tie(0),cout.tie(0),ios::sync_with_stdio(false) 
typedef long long LL;
const LL maxN=1e2+7,MOD=1e9+9,INF=1e9+7,N=67,sqr=383008016;
vector<LL>prime,answ;
bool vis[N];
LL n,a[maxN],dp[maxN][(1<<17)+8],res=INF,carry,par[maxN][(1<<17)+8],bin;
LL binary_represent(LL x)
{
    LL ans=0;
    rep(i,prime.size())
    {
        if(!(x%prime[i]))
            ans+=(1<<i);
    }
    return ans;
}
main()
{
    fast;
    FOR(i,2,60)
    {
        if(!vis[i])
        {
            prime.pb(i);
            for(int j=2*i;j<=60;j+=i)
                vis[j]=true;
        }
    }
    cin>>n;
    FOR(i,1,n)
        cin>>a[i];
    FOR(i,1,n)
    {
        rep(j,1<<17)
            dp[i][j]=INF;
    }
    FOR(i,1,60)
    {
        if(abs(i-a[1])<dp[1][binary_represent(i)])
            dp[1][binary_represent(i)]=abs(i-a[1]),par[1][binary_represent(i)]=i;
    }
    FOR(i,2,n)
    {
        FOR(j,1,60)
        {
            carry=binary_represent(j);
            rep(z,1<<17)
            {
                if(!(z&carry) && dp[i-1][z]+abs(j-a[i])<dp[i][z|carry])
                {
                    dp[i][z|carry]=min(dp[i][z|carry],dp[i-1][z]+abs(j-a[i]));
                    par[i][z|carry]=j;
                }
            }
        }
    }
    rep(i,1<<17)
    {
        res=min(res,dp[n][i]);
        if(res==dp[n][i])
            bin=i;
    }
    for(int i=n;i>0;i--)
    {
        answ.pb(par[i][bin]);
        bin-=binary_represent(par[i][bin]);
    }
    for(int i=n-1;i>=0;i--)
        cout<<answ[i]<<" ";
    return cout<<"\n",0;
}

