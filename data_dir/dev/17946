// upsolve with rainboy
#include <iostream>

using namespace std;

const int N = 5000;

int q0[N], q1[N], aa[N], bb[N], pp[N], pp_[N];
int n;

bool solve(int a) {
	for (int i = 0; i < n; i++) {
		int b = aa[i] ^ a;
		if (b >= n)
			return false;
		pp[bb[i] = b] = i;
	}
	for (int i = 0; i < n; i++) {
		if ((pp[i] ^ bb[i]) != q0[i])
			return false;
		if ((pp[i] ^ bb[(i + 1) % n]) != q1[i])
			return false;
	}
	for (int i = 0; i < n; i++)
		pp_[i] = pp[i];
	return true;
}

int main() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		cout << "? " << i << ' ' << i << endl;
		cin >> q0[i];
		cout << "? " << i << ' ' << (i + 1) % n << endl;
		cin >> q1[i];
	}
	aa[0] = q0[0];
	for (int i = 1; i < n; i++)
		aa[i] = aa[i - 1] ^ q0[i - 1] ^ q1[i - 1];
	int cnt = 0;
	for (int a = 0; a < n; a++)
		if (aa[a] == a && solve(a))
			cnt++;
	cout << '!' << endl;
	cout << cnt << endl;
	cout << pp_[0];
	for (int i = 1; i < n; i++)
		cout << ' ' << pp_[i];
	cout << endl;
	return 0;
}
