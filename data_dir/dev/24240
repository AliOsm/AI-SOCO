#include <bits/stdc++.h>
using namespace std;

const int MAX = 3e5 + 5;
int n, a, b, c;
char s[50];
pair <int, int> e[MAX];
vector <int> x, y;
multiset <int> st;

int main() {
	// 0, 1
	scanf("%d%d%d%d", &a, &b, &c, &n);

	for(int i = 1; i <= n; i++) {
		int c; scanf("%d%s", &c, s);

		if(s[0] == 'U')
			e[i] = { c, 0 };

		else e[i] = { c, 1 };

		st.insert(c);
	}

	sort(e + 1, e + n + 1);

	long long sol = 0;
	int res = 0;

	//for(int i = 1; i <= n; i++)
	//	printf("%d %d\n", e[i].first, e[i].second);

	for(int i = 1; i <= n; i++) {
		if(e[i].second == 0)
			x.push_back(e[i].first);

		else y.push_back(e[i].first);
	}

	int it = 0;
	while(a-- && it < (int) x.size()) {
		sol += x[it], res++;
		st.erase(st.find(x[it]));
		it++;
	}

	it = 0;

	while(b-- && it < (int) y.size()) {
		sol += y[it], res++;
		st.erase(st.find(y[it]));
		it++;
	}

	while(c-- && !st.empty()) {
		sol += *st.begin();
		res++;
		st.erase(st.begin());
	}

	printf("%d %lld\n", res, sol);
	return 0;
}