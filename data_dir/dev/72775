//Author: Vineet Shah
//IIT Indore
#include<bits/stdc++.h>
#define rep(i,start,lim) for(long long i=start;i<lim;i++)
#define repd(i,start,lim) for(long long i=start;i>=lim;i--)
#define MOD 1000000007
#define INF (lld)1e18
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define sz(a) lld((a).size())
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define br printf("\n")
#define bit(x,i) (x&(1<<i))
using namespace std;
typedef long double ldb;
typedef long long lld;
#define N 2*105*105
#define N2 305
lld a[N],lis[N],lds[N],cnt[N2],start[N],en[N],val;
struct segTree{
	lld tree[4*N2],x,y;
	void construct(lld low,lld high,lld pos)
	{	
		if(low==high)
		{
			tree[pos]=a[low];
			return;
		}
		lld mid=(high+low)/2;
		construct(low,mid,2*pos+1),construct(mid+1,high,2*pos+2);
		tree[pos]=max(tree[2*pos+1],tree[2*pos+2]);
	}
	lld query(lld low,lld high,lld pos)
	{
		if(x<=low && y>=high)
			return tree[pos];
		if(x>high||y<low)
			return 0;
		lld mid=(high+low)/2;
		return max(query(low,mid,2*pos+1),query(mid+1,high,2*pos+2));
	}
	void update(lld low,lld high,lld pos)
	{
		if(x<low||x>high) return;
		if(low==high)
		{
			tree[pos]=val;
			return;
		}
		lld mid=(low+high)/2;
		update(low,mid,2*pos+1),update(mid+1,high,2*pos+2);
		tree[pos]=max(tree[2*pos+1],tree[2*pos+2]);
	}
} st;
int main()
{
	lld n,t,ans=0;
	scan(n),scan(t);
	rep(i,1,n+1) scan(a[i]),cnt[a[i]]++;
	if(t<=2*n)
	{
		rep(i,n+1,t*n+1) a[i]=a[i-n];
		rep(i,1,t*n+1)
		{
			st.x=1,st.y=a[i];
			lis[a[i]]=st.query(1,N2,0)+1,st.x=a[i],val=lis[a[i]],st.update(1,N2,0),ans=max(ans,lis[a[i]]);
		}
		return 0*print(ans);	
	}
	rep(i,n+1,n*n+1) a[i]=a[i-n];
	rep(i,0,4*N2) st.tree[i]=0;
	rep(i,1,n*n+1)
	{
		st.x=1,st.y=a[i];
		lis[a[i]]=st.query(1,N2,0)+1,st.x=a[i],val=lis[a[i]],st.update(1,N2,0),start[i]=lis[a[i]];		
	}
	rep(i,0,4*N2) st.tree[i]=0;
	repd(i,n*n,1)
	{
		st.x=a[i],st.y=300;
		lds[a[i]]=st.query(1,N2,0)+1,st.x=a[i],val=lds[a[i]],st.update(1,N2,0),en[i]=lds[a[i]];		
	}
	rep(i,1,n+1) rep(j,1,n+1) if(a[j]>=a[i])
		ans=max(ans,start[(n-1)*n+i]+cnt[a[i]]*(t-2*n)+en[j]);
	return 0*print(ans);
}


