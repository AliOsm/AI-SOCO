#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>

using namespace std;
    
#define cerr if (false) cerr

const int MAXSZ = 1e7 + 239;

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n;
	cin >> n;
	vector<int> in(MAXSZ, -1);
	vector<string> uu(n);
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		uu[i] = s;
		int k;
		cin >> k;
		for (int j = 0; j < k; j++) {
			int x;
			cin >> x;
			x--;
			if (in[x] == -1 || (in[x] != -1 && uu[in[x]].size() < s.size())) {
				in[x] = i;
			}
		}
	}
	int sz = 0;
	for (int i = 0; i < MAXSZ; i++) {
		if (in[i] != -1) {
			sz = max(sz, i + (int)uu[in[i]].size());
		}
	}
	cerr << "exp sz " << sz << endl; 
	string res(sz, '$');
	vector<int> en(sz, - 1);
	int mxe = -1;
	int whe = -1;
	for (int i = 0; i < sz; i++) {
		if (in[i] != -1) {
			if (mxe < i + (int)uu[in[i]].size() - 1) {
				mxe = i + (int)uu[in[i]].size() - 1;
				whe = i;
			}
		}
		if (mxe < i) {
			en[i] = -1;
		} else {

			en[i] = whe;
		}
		cerr << "mxe " << mxe << endl;
	}
	for (int i = 0; i < sz; i++) {
		cerr << "rec " << i << endl;
		if (en[i] == -1) {
			res[i] = 'a';
		} else {
			cerr << "from " << uu[in[en[i]]] << endl;
			res[i] = uu[in[en[i]]][i - en[i]];
		}
		cerr << endl;
	}
	cout << res << endl;
}
/*
abacab
012345
*/