//IOI 2021
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 2 * 1000 + 17;

ll n, a, b;
double u[MAXN], p[MAXN], dp[MAXN][MAXN], cnt[MAXN][MAXN];

int calc(double x) {
	for (int i = 1; i <= n; i++) {
		dp[i][0] = dp[i - 1][0];
		cnt[i][0] = cnt[i - 1][0];
		if (u[i] > x) {
			dp[i][0] += u[i] - x;
			cnt[i][0]++;
		}
		for (int j = 1; j <= a; j++) {
			double t = 1. - (1. - p[i]) * (1. - u[i]);
			if (dp[i - 1][j] >= dp[i - 1][j - 1] + t - x) {
				if (dp[i - 1][j] >= dp[i - 1][j] + u[i] - x) {
					if (dp[i - 1][j] >= dp[i - 1][j - 1] + p[i]) {
						dp[i][j] = dp[i - 1][j];
						cnt[i][j] = cnt[i - 1][j];
					}
					else {
						dp[i][j] = dp[i - 1][j - 1] + p[i];
						cnt[i][j] = cnt[i - 1][j - 1];
					}
				}
				else {
					if (dp[i - 1][j] + u[i] - x > dp[i - 1][j - 1] + p[i]) {
						dp[i][j] = dp[i - 1][j] + u[i] - x;
						cnt[i][j] = cnt[i - 1][j] + 1;
					}
					else {
						dp[i][j] = dp[i - 1][j - 1] + p[i];
						cnt[i][j] = cnt[i - 1][j - 1];
					}
				}
			}
			else {
				if (dp[i - 1][j - 1] + t - x >= dp[i - 1][j] + u[i] - x) {
					if (dp[i - 1][j - 1] + t - x > dp[i - 1][j - 1] + p[i]) {
						dp[i][j] = dp[i - 1][j - 1] + t - x;
						cnt[i][j] = cnt[i - 1][j - 1] + 1;
					}
					else {
						dp[i][j] = dp[i - 1][j - 1] + p[i];
						cnt[i][j] = cnt[i - 1][j - 1];
					}
				}
				else {
					if (dp[i - 1][j] + u[i] - x > dp[i - 1][j - 1] + p[i]) {
						dp[i][j] = dp[i - 1][j] + u[i] - x;
						cnt[i][j] = cnt[i - 1][j] + 1;
					}
					else {
						dp[i][j] = dp[i - 1][j - 1] + p[i];
						cnt[i][j] = cnt[i - 1][j - 1];
					}
				}
			}
		}
	}
	return cnt[n][a];
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> a >> b;
	for (int i = 1; i <= n; i++)
		cin >> p[i]; //a
	for (int i = 1; i <= n; i++)
		cin >> u[i]; //b
	double l = 0, r = 1.00001;
	for (int i = 1; i <= 100; i++) {
		double mid = (l + r) / 2;
		if (calc(mid) >= b)
			l = mid;
		else
			r = mid;
	}
	calc(l);
	cout << fixed << setprecision(10) << dp[n][a] + b * l << endl;
	return 0;
}
