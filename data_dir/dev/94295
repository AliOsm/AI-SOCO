//ayoyia problems are easy
#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e6+10;
vector<pair<string,int> >ans;
int main(){
   int n,v;
   scanf("%d",&n);
   priority_queue<int>q;
   char op[25];
   for(int i=0;i<n;i++){
      scanf("%s",op);
      if(op[0]=='i'){
         scanf("%d",&v);
         q.push(-v);
         ans.push_back(pair<string,int>("insert",v));
      }
      else if(op[0]=='g'){
         scanf("%d",&v);
         while(!q.empty() && -q.top()<v){
            ans.push_back(pair<string,int>("removeMin",0));
            q.pop();
         }
         if(q.empty() || -q.top()!=v){
            ans.push_back(pair<string,int>("insert",v));
            q.push(-v);
         }
         ans.push_back(pair<string,int>("getMin",v));
      }
      else if(op[0]=='r'){
         if(q.empty())ans.push_back(pair<string,int>("insert",1));
         ans.push_back(pair<string,int>("removeMin",0));
         if(!q.empty())q.pop();
      }
   }
   printf("%d\n",int(ans.size()));
   for(pair<string,int>x:ans){
      printf("%s",x.first.c_str());
      if(x.first[0]!='r')printf(" %d",x.second);
      puts("");
   }
   return 0;
}
