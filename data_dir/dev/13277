//void __(){
//    _(int,n);
//    _(int,p);
//    _(string,s);
//    --p;
//    if(p < n-1-p)
//        while(p > 0){
//            print "LEFT";
//            --p;
//        }
//    else
//        while(p < n-1){
//            print "RIGHT";
//            ++p;
//        }
//    if(p==0)
//        rep(i,n){
//            print "PRINT",s[i];
//            if(i != n-1)
//                print "RIGHT";
//        }
//    else
//        per(i,n){
//            print "PRINT",s[i];
//            if(i != 0)
//                print "LEFT";
//
//        }
//
//
//}
//
#include <iomanip>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define REP_ZERO_INT(i,r) for(int i = 0; i < r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define PER_ZERO_INT(i,r) for(int i = r-1; i >= 0; --i)
#define GET_PER_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define per(...) GET_PER_MACRO(__VA_ARGS__,PER_ANY,PER_INT,PER_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
#define INPUT_WITHOUT_INIT(type,name) type name; cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
void __(){
    _(int,n);
    _(int,p);
    _(string,s);
    --p;
    if(p < n-1-p)
        while(p > 0){
            print "LEFT";
            --p;
        }
    else
        while(p < n-1){
            print "RIGHT";
            ++p;
        }
    if(p==0)
        rep(i,n){
            print "PRINT",s[i];
            if(i != n-1)
                print "RIGHT";
        }
    else
        per(i,n){
            print "PRINT",s[i];
            if(i != 0)
                print "LEFT";
        }
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        __();
}
