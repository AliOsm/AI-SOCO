#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include <functional>
#include <iomanip>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <hash_set>
#include <hash_map>
#include <algorithm>

//define NDEBUG
#include <cassert>

#define FILE_READER assert(freopen("input.txt", "r", stdin)); assert(freopen("output.txt", "w", stdout));
#define FAST_READER ios::sync_with_stdio(false); cin.tie(nullptr);
#define all_(v) (v).begin(), (v).end()
#define for_(i, a, b) for (int i = (a); i < (int)(b); i++)
#define ford_(i, a, b) for (int i = (a); i > (int)(b); i--)
#define foreach_(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
#define sz_(v) ((int)(v).size())
#define mp_ make_pair
#define pb_ push_back
typedef long long LL_;
typedef long double LD_;
template<class T> T sqr_(T a) {return a * a;}
template<class T> T abs_(T a) {return a > 0 ? a : -a;}
template<class T> T sgn_(T a) {return a > 0 ? 1 : (a < 0 ? -1 : 0);}

using namespace std;

const int inf = (int)1e7;

string s1, s2;
int dp[10000 + 11][30];

int main() {

#ifndef ONLINE_JUDGE 
	FILE_READER 
#endif 	
	
	FAST_READER;

	cin >> s1 >> ws >> s2;
	int n1, n2;
	n1 = s1.length(), n2 = s2.length();
	int asize = 26;
	for_(i, 0, asize) dp[n1 - 1][i] = inf;
	dp[n1 - 1][s1[n1 - 1] - 'a'] = n1 - 1;
	ford_(i, n1 - 2, -1) {
		for_(j, 0, asize) {
			dp[i][j] = dp[i + 1][j];
		}
		dp[i][s1[i] - 'a'] = i;
	}
	int amt = 0;
	int p = n1;
	for_(i, 0, n2) {
		int c = s2[i] - 'a';
		if (p >= n1 || dp[p][c] == inf) {
			if (p == 0) {
				cout << -1;
				return 0;
			}
			p = 0;
			if (dp[p][c] == inf) {
				cout << -1;
				return 0;
			}
			++amt;
		} 
		p = dp[p][c] + 1;
	}
	cout << amt;
	return 0;
}