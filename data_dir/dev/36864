#include <bits/stdc++.h>

#define LL long long
#define mk make_pair
#define pb push_back
#define fi first
#define se second

using namespace std;

long long now,cost,k,c,p;
vector < LL > q;
priority_queue < pair < LL , LL > > Q;
vector < pair < LL , LL > > st[5005];

void add(LL A,LL B)
 {
  Q.push(mk(A,B));
  now+=B; cost+=A*B;
  while (now > k)
   {
    if (Q.top().se <= now-k)
     {
      now-=Q.top().se;
      cost-=Q.top().fi*Q.top().se;
      Q.pop();
      continue;
     }
    LL A=Q.top().fi;
    LL B=Q.top().se;
    Q.pop();
    cost+=(k-now)*A;
    Q.push(mk(A,B+k-now));
    now=k;
   }
 }

LL ANS[50050],res;
LL n,m,j,a,b,w,x,y,z,i,tst,u,l;
vector < LL > g[5005];
LL f[5005];

int main()
 {
  cin>>n>>m;
  for (j=1;j<=m;j++)
   {
    cin>>a>>b;
    g[a].pb(b);
    g[b].pb(a);
   }
  cin>>w;
  for (i=1;i<=w;i++)
   cin>>x>>y>>z,st[x].pb(mk(z,y));

  cin>>tst;
  while (tst--)
   {
    cin>>c>>k>>p;
    for (i=1;i<=n;i++)
     ANS[i]=2000000000000LL,f[i]=0;
    q.clear();
    l=0;
    ANS[c]=0;
    q.pb(c);
    while (Q.size() > 0) Q.pop();
    now=0; cost=0; res=2000000000000LL;
    while (l < q.size())
     {
      u=q[l];
      l++;
      f[u]=2;
      for (i=0;i<st[u].size();i++)
       add(st[u][i].fi,st[u][i].se);
      if (now == k && cost <= p) { res=ANS[u]; break; }
      for (i=0;i<g[u].size();i++)
       if (!f[g[u][i]])
        {
         q.push_back(g[u][i]);
         f[g[u][i]]=1;
         ANS[g[u][i]]=ANS[u]+1;
        }
     }
    if (res == 2000000000000LL) res=-1;
    cout<<res<<endl;
   }
 }
