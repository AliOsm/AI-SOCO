#include <bits/stdc++.h>

using namespace std;

#define fi first
#define se second

#define pb push_back
#define sz(x) ((int)(x).size())

#define forn(i, a, b) for (int i = a; i <= b; ++i)
#define forr(i, a, b) for (int i = a; i >= b; --i)

typedef long long ll;
typedef long double ld;

const int base = 1000 * 1000 * 1000;

const int N = (int)2e5 + 2;
const int INF = (int)1e9 + 7;

const ld pi = acos(-1);
const ll linf = (ll)1e18;

typedef pair < int, int > pii;
typedef pair < ll, ll > pll;

int n;
pll a[N];
ll pr[N];
int main(){
  scanf ("%d", &n);
  forn (i, 1, n){
    scanf ("%lld", &a[i].fi);
    a[i].se = i;
  }
  sort (a + 1, a + n + 1);
  forn (i, 1, n){
    pr[i] = pr[i - 1] + a[i].fi;
  }
  ll sum = pr[n];
  vector < int > ans;
  forn (i, 1, n){
    ll last = a[i].fi;
    a[i].fi = 0;
    int l = 1, r = n;
    sum -= last;
    while (r - l > 1){
      int mid = r + l >> 1;
      if (sum - a[mid].fi > a[mid].fi){
        l = mid;
      } else {
        r = mid;
      }
    }
    if (sum - a[l].fi  == a[l].fi){
      ans.pb(a[i].se);
    }
    else if (sum - a[r].fi  == a[r].fi){
      ans.pb(a[i].se);
    }
    a[i].fi = last;
    sum += last;
  }
  printf ("%d\n", sz(ans));
  forn (i, 0, sz(ans) - 1){
    printf ("%d ", ans[i]);
  }
  return 0;
}
