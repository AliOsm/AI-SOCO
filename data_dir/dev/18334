#include <bits/stdc++.h>
using namespace std;
struct edge {
	int cost, yes, id;
	bool operator < (edge e) const {
		if(cost == e.cost) return yes > e.yes;
		return cost < e.cost;
	}
};
vector <edge> E;
int f[100010];
pair <int, int> ans[100010];

int main(int argc, char const *argv[])
{
	int n, m;
	cin >> n >> m;
	for(int i = 1; i <= m; i++) {
		int u, v;
		cin >> u >> v;
		E.push_back({u, v, i});
	}
	sort(E.begin(), E.end());
	for(int i = 1; i <= n; i++) f[i] = i+1;

	int L, R;
	int N;
	if(E[0].yes == true) {
		L = 1, R = 2;
		f[L] = R;
		N = 2;
		ans[E[0].id] = {L, R};
	} else {
		cout << -1 << endl;
		exit(0);
	}
	for(int i = 1; i < m; i++) {
		edge e = E[i];
		if(e.yes == false) {
			if(R == N) {
				L += 1;
				R = f[L] + 1; 
				f[L] = R;
			} else {
				R += 1;
				f[L] = R;
			}
			if(L > N or R > N) {
				cout << -1 << endl;
				exit(0);
			}
			ans[e.id] = {L, R};
		} else {
			ans[e.id] = {N, N+1};
			N += 1;
			L = 1;
			R = f[1];
		}
	}
	for(int i = 1; i <= m; i++) {
		cout << ans[i].first << " " << ans[i].second << endl;
	}
	return 0;
}