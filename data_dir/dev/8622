#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int,int> pii;

const int N = 1000100;
const int Mod = 1e9 + 7;

int n, k;
int a[N];
int NG[N];
int LG[N];

void add_self(int& x, int y)
{
    if((x += y) >= Mod) x -= Mod;
}

void sub_self(int& x, int y)
{
    if((x -= y) < 0)    x += Mod;
}

int add(int x, int y)
{
    return add_self(x, y), x;
}

int sub(int x, int y)
{
    return sub_self(x, y), x;
}

int mul(int x, int y)
{
    return (ll) x * y % Mod;
}

int Ways(int L, int R)
{
    int xL = (L + 1) / k;
    int yL = (L + 1) % k;

    int xR = (R + 1) / k;
    int yR = (R + 1) % k;

    int Res = 0;

    add_self(Res, mul(k, mul(xL, xR)));
    add_self(Res, mul(xL, yR));
    add_self(Res, mul(yL, xR));
    add_self(Res, min(yL, yR));

    return Res;
}

int Ways(int L1, int R1, int L2, int R2)
{
    return sub(add(Ways(R1, R2), Ways(L1 - 1, L2 - 1)),
               add(Ways(R1, L2 - 1), Ways(L1 - 1, R2)));
}

int main()
{
    cin >> n >> k;  k--;

    for(int i = 1; i <= n; i++) scanf("%d", a + i);

    stack <int> stk;

    for(int i = 1; i <= n; i++)
    {
        while(!stk.empty() && a[stk.top()] < a[i])  NG[stk.top()] = i, stk.pop();

        stk.push(i);
    }

    while(!stk.empty()) NG[stk.top()] = n + 1, stk.pop();

    for(int i = n; i >= 1; i--)
    {
        while(!stk.empty() && a[stk.top()] <= a[i]) LG[stk.top()] = i, stk.pop();

        stk.push(i);
    }

    while(!stk.empty()) LG[stk.top()] = 0, stk.pop();

    int Ans = 0;

    for(int i = 1; i <= n; i++)
    {
        add_self(Ans, mul(a[i], sub(Ways(LG[i] + 1, i, i, NG[i] - 1), 1)));
    }

    cout << Ans << endl;
}
