#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N = 30;

int L, R;

ll Dp[N][2][2][2][2];

int G(int x, int i)
{
    return (x & (1 << i)) > 0;
}

int Can(int a, int i, bool EL, bool ER)
{
    if(EL && a < G( L, i))  return false;
    if(ER && a > G( R, i))  return false;

    return true;
}

ll Rec(int i = N - 1, bool EAL = true, bool EAR = true , bool EBL = true, bool EBR = true)
{
    if(i == -1) return 1;

    ll& Res = Dp[i][EAL][EAR][EBL][EBR];

    if(Res + 1) return Res;

    Res = 0;

    for(int a = 0; a < 2; a++)
    {
        for(int b = 0; b < 2; b++)
        {
            if(!(a && b))
            {
                if(Can( a, i, EAL, EAR))
                {
                    if(Can( b, i, EBL, EBR))
                    {
                        Res += Rec( i - 1, EAL && a == G( L, i), EAR && a == G( R, i),
                                            EBL && b == G( L, i), EBR && b == G( R, i));
                    }
                }
            }
        }
    }

    return Res;
}

int main()
{
    int T;  cin >> T;

    while(T--)
    {
        memset( Dp, -1, sizeof Dp);

        scanf("%d%d", &L, &R);

        printf("%I64d\n", Rec());
    }
}
