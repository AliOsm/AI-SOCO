/*
digu_J - Digvijay Janartha
NIT Hamirpur - INDIA
*/

#include <bits/stdc++.h>
using namespace std;

typedef double db;
typedef long long ll;
typedef pair < ll, ll > pll;
typedef vector < ll > vll;
typedef map < ll, ll > mll;
typedef set < ll > sll;
typedef vll lnum;

#define pb push_back
#define F first
#define S second
#define debug(x) cout << (#x) << " is " << (x) << endl
#define fast_io() ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define in(x, n, a) for (ll i = x; i < n; ++i) cin >> a[i]

const ll INF = LLONG_MAX;
const ll base = 1e9;
const db PI = acos(-1);
const ll MOD = 1e9 + 7;
const ll N = 5e1 + 10;

ll ans[N];

void solve();
ll check(string a, string b);

int main() {
    fast_io();
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    solve();
    #ifndef ONLINE_JUDGE
            cout << "Time: " << (int)(clock() * 1000. / CLOCKS_PER_SEC) << "ms";
    #endif
    return 0;
}

void solve() {
    ll n;
    cin >> n;
    string s[n];
    in(0, n, s);
    ll k = s[0].size();
    for (ll i = 0; i < k; ++i) {
        string x = s[0];
        ll t = 0;
        for (ll j = i; j < k; ++j) {
            x[t] = s[0][j];
            ++t;
        }
        for (ll j = 0; j < i; ++j) {
            x[t] = s[0][j];
            ++t;
        }
        // debug(x);
        for (ll j = 0; j < n; ++j) {
            ll lol = check(x, s[j]);
            if (lol == -1) {
                cout << "-1\n";
                return;
            } else {
                ans[i] += lol;
                // debug(ans[i]);
            }
        }
        // cout << ans[i] << "  " << i << "\n";
    }
    sort(ans, ans + k);
    cout << ans[0] << "\n";
    return;
}

ll check(string a, string b) {
    if (a == b) {
        return 0;
    }
    ll n = a.size();
    bool wtf = false;
    ll res = INF;
    for (ll i = 0; i < n; ++i) {
        ll k = 0;
        bool flag = false;
        for (ll j = i; j < n; ++j) {
            if (a[k] != b[j]) {
                flag = true;
                break;
            } else {
                ++k;
            }
        }
        for (ll j = 0; j < i; ++j) {
            if (flag) {
                break;
            } else if (a[k] != b[j]) {
                flag = true;
                break;
            } else {
                ++k;
            }
        }
        if (!flag) {
            wtf = true;
            res = min(res, i);
        }
    }
    if (wtf) {
        return res;
    }
    return -1;
}
