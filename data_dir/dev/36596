#include <iostream>
#include <fstream>
#include <cstring>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <iterator>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=65;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

ll c[N][N];

int k;

ll get(ll x){
    ll res=0;
    int cnt=0;
    for(int i=61;i>=0;i--){
        if((1ll<<i)&x){
            if(cnt<=k){
                res+=c[i][k-cnt];
            }
            cnt++;
        }
    }
    if(cnt==k){
        res++;
    }
    return res;
}

ll calc(ll v){
    return get(v*2)-get(v);
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ll m;
    cin>>m>>k;
    for(int i=0;i<N;i++){
        c[i][i]=c[i][0]=1;
        for(int j=1;j<i;j++){
            c[i][j]=c[i-1][j]+c[i-1][j-1];
        }
    }
    ll l=1,r=1e18;
    while(l<r){
        ll mid=(l+r)/2;
        if(calc(mid)<m){
            l=mid+1;
        }
        else{
            r=mid;
        }
    }
    cout<<r;
    return 0;
}
