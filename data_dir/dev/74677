//basma taala
#include<bits/stdc++.h>
using namespace std;
vector<int> bus[1000];
vector<int> train[1000];
int q[402][402], n;
int find(vector<int> bus[])
{
	int dfs[500][2], flag[500] = {} , exe = 0, empty = 1;
	dfs[0][0] = 1;
	dfs[0][1] = 0;
	flag[1] = 1;
	while(exe < empty)
	{
		for(int i = 0; i < bus[dfs[exe][0]].size(); i++)
		{
			if(flag[bus[dfs[exe][0]][i]])
			continue;
			flag[bus[dfs[exe][0]][i]] = 1;
			dfs[empty][0] = bus[dfs[exe][0]][i];
			dfs[empty][1] = dfs[exe][1] + 1;
			empty++;
		}
		exe++;
	}
	for(int i = 0; i < empty; i++)
	{
		if(dfs[i][0] == n)
		return dfs[i][1];
	}
	return -1;
}
int main()
{
	int m;
	cin >> n >> m;
	for(int i = 0; i < m; i++)
	{
		int x, y;
		cin >> x >> y;
		train[x].push_back(y);
		train[y].push_back(x);
		q[x][y] = q[y][x] = 1;
	}
	for(int i = 1; i <= n; i++)
	for(int j = 1; j <= n; j++)
	{
		if(i == j)
		continue;
		if(!q[i][j])
		{
			bus[i].push_back(j);
			bus[j].push_back(i);
		}
	}
	int s = find(bus);
	int y = find(train);
	if(s == -1 || y == -1)
	{
		cout << -1;
	}
	else
	{
		cout << max(s, y);
	}
}