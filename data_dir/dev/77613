#include <bits/stdc++.h>
using namespace std;

// why am I so weak

const int B = 800;

int n, q;

struct fenwick_tree {
	int dat[200055];

	void add(int id, int val) {
		while (id < n) {
			dat[id] += val;
			id |= (id + 1);
		}
	}
	int get(int id) {
		int res = 0;

		while (id >= 0) {
			res += dat[id];
			id = (id & (id + 1)) - 1;
		}

		return res;
	}
}F[455];

int a[200055];

int main() {
	scanf("%d %d", &n, &q);

	for (int i = 0; i < n; i++) F[i / B].add(i, 1);
	for (int i = 0; i < n; i++) a[i] = i;

	long long res = 0ll;

	while (q--) {
		int x, y;
		scanf("%d %d", &x, &y);
		x--, y--;

		if (x == y) {
			printf("%lld\n", res);
			continue;
		}

		if (x > y) swap(x, y);

		int u = a[x], v = a[y];
		int l = x, r = y; 

		if (l / B == r / B) {
			while (l <= r) {
				if (u > a[l]) res--;
				if (u < a[l]) res++;
				if (a[l] < v) res++;
				if (a[l] > v) res--;
				l++;
			}
		} else {
			while (l % B != 0) {
				if (u > a[l]) res--;
				if (u < a[l]) res++;
				if (a[l] < v) res++;
				if (a[l] > v) res--;
				l++;
			}

			while (r % B != B - 1) {
				if (u > a[r]) res--;
				if (u < a[r]) res++;
				if (a[r] < v) res++;
				if (a[r] > v) res--;
				r--;
			}

			while (l / B <= r / B) {
				res -= 1ll * F[l / B].get(u - 1);
				res += 1ll * F[l / B].get(n - 1) - 1ll * F[l / B].get(u);
				res += 1ll * F[l / B].get(v - 1);
				res -= 1ll * F[l / B].get(n - 1) - 1ll * F[l / B].get(v);
				l += B;
			}
		}

		F[x / B].add(a[x], -1);
		F[x / B].add(a[y], 1);

		F[y / B].add(a[y], -1);
		F[y / B].add(a[x], 1);

		if (a[x] < a[y]) res--;
		if (a[x] > a[y]) res++;

		swap(a[x], a[y]);

		printf("%lld\n", res);
	}

	return 0;
}