#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <iostream>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <string>
#include <algorithm>
#include <numeric>
#include <functional>
#include <cmath>
#include <complex>
#include <memory.h>
#include <time.h>

using namespace std;

const int dx[8] = {1, 1, -1, -1, 2, 2, -2, -2};
const int dy[8] = {2, -2, 2, -2, 1, -1, 1, -1};

int u[8][8];

char buf[3];

bool bound(int x, int y)
{
	return x >= 0 && y >= 0 && x < 8 && y < 8;
}

int main()
{
	scanf("%s", buf);
	int x = buf[0] - 'a';
	int y = buf[1] - '1';
	u[x][y] = 2;
	for(int i = -8; i <= 8; ++i)
	{
		if (i == 0)
			continue;
		if (bound(x + i, y))
			u[x + i][y] = 1;
		if (bound(x, y + i))
			u[x][y + i] = 1;
	}
	scanf("%s", buf);
	x = buf[0] - 'a';
	y = buf[1] - '1';
	u[x][y] = 2;
	for(int i = 0; i < 8; ++i)
	{
		int tox = x + dx[i];
		int toy = y + dy[i];
		if (bound(tox, toy))
			u[tox][toy] = 1;
	}
	int res = 0;
	for(int i = 0; i < 8; ++i)
	{
		for(int j = 0; j < 8; ++j)
		{
			if (u[i][j])
				continue;
			int c = 1;
			for(int k = 0; k < 8; ++k)
			{
				int tox = i + dx[k];
				int toy = j + dy[k];
				if (bound(tox, toy))
					c &= u[tox][toy] != 2;
			}
			if (c)
				res++;
		}
	}
	printf("%d\n", res);
	return 0;
}