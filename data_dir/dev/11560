#include<bits/stdc++.h>
using namespace std;
int main(){
	long long n,m,c1,n1,h,i;cin>>n>>m;
	multimap<long long ,long long>num,c;
	set<pair<long long ,long long> >cost;
	set<pair<long long ,long long> >::iterator it2,it4;
	multimap<long long ,long long>::iterator it,it1,it3;
	vector<long long>ans;
	for(long long i=1;i<=n;i++){
		cin>>n1;num.insert({i,n1});
	}
	for(long long i=1;i<=n;i++){
		cin>>c1;
		c.insert({i,c1}),cost.insert({c1,i});
	}
	long long m1,res;
	for(long long j=0;j<m;j++){
	    cin>>i>>h;m1=0;
	    it=num.find(i);
	    it1=c.find(i);
	    m1+=(min(((*it).second),h))*((*it1).second);
	    if(h>(*it).second){
	    	res=h-((*it).second);
	    	((*it).second)=0;
	    	if((*it).second==0){
				it2=cost.find({(*it1).second,i});
				if(it2!=cost.end())
				cost.erase(it2);
			}it4=cost.end();
	    	for(it2=cost.begin();it2!=cost.end()&&res;it2++){
	    		it=num.find((*it2).second);
	    		m1+=(min(res,((*it).second)))*(*it2).first;
	    		long long k=(*it).second;
	    		((*it).second)-=min(res,((*it).second));
	    		if((*it).second==0)it4=it2;
	    		res-=min(res,k);
			}
			if(it4!=cost.end())it4++,
			cost.erase(cost.begin(),it4);
			if(res)ans.push_back(0);
			else ans.push_back(m1);
		}
		else{
			((*it).second)-=h;
			if((*it).second==0){
				it2=cost.find({(*it1).second,i});
				if(it2!=cost.end())
				cost.erase(it2);
			}
			ans.push_back(m1);
		}
	}
	for(long long i=0;i<ans.size();i++)cout<<ans[i]<<endl;
}