#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
#include <time.h>
using namespace std; 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 123 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
#define y1 asdf
#define y2 asdqwer
const int N = 100010;
set <pii> moon;
set <pii> :: iterator it, it1;
int n, q;
int al[26];
int main()
{
     ios_base::sync_with_stdio(false);cin.tie(0);
    #ifdef WIN32
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif

    cin >> n >> q;
    string st;
    cin >> st;
    for(int i = 0; i < n; ++i)
        moon.insert(pii(i, st[i] - 'a'));
    
    for(int i = 0; i < q; ++i)
    {
        int l, r, typ;
        cin >> l >> r >> typ;
        l--, r--;
        memset(al, 0, sizeof al);
        it = moon.upper_bound(pii(l, 30));
        it--;
        pii pr = *it;
        it++;
        int tr;
        int f = 0;
        if (it == moon.end() || (*it).first > r)
        {
            tr = r + 1;
            if ((it == moon.end() || (*it).first != r + 1) && r + 1 < n)
                moon.insert(pii(r + 1, pr.second));
            f = 1;
        }
        else
            tr = (*it).first;
        al[pr.second] += (tr - l);
        if (pr.first == l)
            moon.erase(pr);
        //cerr << pr.first << ' '  << pr.second << endl;
        
        for(; it != moon.end(); )
        {
            if(f)
                break;
            pr = *it;
            it++;
            int tr;
            if (it == moon.end() || (*it).first > r)
            {
                tr = r + 1;
                if ((it == moon.end() || (*it).first != r + 1) && r + 1 < n)
                    moon.insert(pii(r + 1, pr.second));
                f = 1;
            }
            else
                tr = (*it).first;
            al[pr.second] += tr - pr.first;
            moon.erase(pr);
            if (f)
                break;
        }

        
        if (typ)
        {
            int t = l;
            for(int i = 0; i < 26; ++i)
            {
                if (!al[i])
                    continue;
                //cerr << i << ' ' << al[i] << ' ';
                moon.insert(pii(t, i));
                t += al[i];
            }
        }
        else
        {
            int t = l;
            for(int i = 25; i >= 0; --i)
            {
                if (!al[i])
                    continue;
                //cerr << i << ' ' << al[i] << ' ';
                moon.insert(pii(t, i));
                t += al[i];
            }
        }
        /*for(it1 = moon.begin(); it1 != moon.end(); ++it1)
            cerr << (*it1).first << ' ' << (*it1).second << ' ';
        cerr << endl;*/
    }
    it = moon.begin();
    pii pr = (*it);
    it++;
    int l = 0;
    int r = 0;
    while(r != n)
    {

        if (it == moon.end())
        {
            r = n;
            while(l < r)
            {
                l++;
                cout << char (pr.second + 'a');
            }
            break;
        }
        else
            r = (*it).first;
        //cerr << l << ' ' << r << endl;
        while(l < r)
        {
            l++;
            cout << char (pr.second + 'a');
        }
        pr = *it;
        it++;
    }
} 