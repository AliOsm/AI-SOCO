#include "bits/stdc++.h"
using namespace std;
#ifdef ONLINE_JUDGE
#define trace(...)
#endif

using LL = long long;

const int N = 2002;
string grid[N];

int val[N][N];
void increment(int xlo, int xhi, int ylo, int yhi) {
	val[xlo][ylo]++;
	val[xhi + 1][ylo]--;
	val[xlo][yhi + 1]--;
	val[xhi + 1][yhi + 1]++;
}
void prefix() {
	for (int i = 1; i < N; i++) {
		for (int j = 1; j < N; j++) {
			val[i][j] += val[i - 1][j] + val[i][j - 1] - val[i - 1][j - 1];
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	int k, n; cin >> n >> k;
	for (int i = 1; i <= n; i++) {
		string s; cin >> s;
		grid[i] = "#" + s;
	}

	int w = 0;

	for (int i = 1; i <= n; i++) {
		int lo = n + 1, hi = 0;
		for (int j = 1; j <= n; j++) {
			if (grid[i][j] == 'B') {
				hi = j;
				lo = min(lo, j);
			}
		}
		if (hi - lo + 1 > k) continue;
		if (hi == 0) {
			w++;
			continue;
		}
		increment(max(1, i - k + 1), i, max(1, hi - k + 1), lo);
	}

	for (int j = 1; j <= n; j++) {
		int lo = n + 1, hi = 0;
		for (int i = 1; i <= n; i++) {
			if (grid[i][j] == 'B') {
				hi = i;
				lo = min(lo, i);
			}
		}
		if (hi - lo + 1 > k) continue;
		if (hi == 0) {
			w++;
			continue;
		}
		increment(max(1, hi - k + 1), lo, max(1, j - k + 1), j);
	}

	prefix();

	int ans = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			ans = max(ans, val[i][j]);
		}
	}
	ans += w;
	cout << ans << endl;

	return 0;
}
