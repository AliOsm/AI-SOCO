#include <iostream>
#include <vector>

using namespace std;

vector<int> gr[200500];

int f=1,mxdist=0;

int di[200500];
int par[200500];

void dfs(int u,int p=0,int d=0)
{
    di[u]=d;
    par[u]=p;
    if (d>mxdist)
    {
        mxdist=d;
        f=u;
    }
    for (auto v:gr[u])
    {
        if (p!=v)
        {
            dfs(v,u,d+1);
        }
    }
}

int main()
{
    int n;
    cin >> n;
    if (n==1)
    {
        cout << "No";
        return 0;
    }
    int k;
    cin >> k;
    for (int i=0;i<n-1;i++)
    {
        int a,b;
        cin >> a >> b;
        gr[a].push_back(b);
        gr[b].push_back(a);
    }

    dfs(1);
    mxdist=0;
    int x1=f;
    dfs(f);
    int x2=f;

    if (mxdist%2==1)
    {
        cout << "No";
        return 0;
    }

    vector<int> path;
    while(x2!=x1)
    {
        path.push_back(x2);
        x2=par[x2];
    }

    int r=path[path.size()/2];
    dfs(r);
    for (int i=1;i<=n;i++)
    {
        if (gr[i].size()==1)
        {
            if (di[i]!=k)
            {
                cout << "No";
                return 0;
            }
        }
        else
        {
            int z=gr[i].size()+(i==r);
            if (z<4)
            {
                cout << "No";
                return 0;
            }
        }
    }

    cout << "Yes";

    return 0;
}
