// rc.cpp
//

#include <assert.h>
#include <time.h>
#include <math.h>
#include <string.h>

#include <iterator>
#include <fstream>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <algorithm>
#include <numeric>
#include <functional>

using namespace std;

typedef unsigned char uchar;
typedef unsigned int uint;
typedef unsigned long long uint64;
typedef long long sint64;

#define PI 3.1415926535897932384626433832795
#define EPS 1E-8

uint q[100][100];
uint a[100];

int main(int argc, char* argv[])
{
	uint n, k;
	cin >> n >> k;

	uint mx = 0,
		mn = -1;
	for (uint i = 0; i < n; ++i)
	{
		cin >> a[i];
		if (a[i] < mn)
			mn = a[i];
		if (a[i] > mx)
			mx = a[i];
	}

	if (mx - mn > k)
		cout << "NO" << endl;
	else
	{
		uint v = a[0] / k,
			w = a[0] % k;

		for (uint i = 0; i < k && i < a[0]; ++i)
		{
			q[0][i] = v;
			if (i < w)
				++q[0][i];
		}

		bool ok = true;
		for (uint i = 1; i < n; ++i)
		{
			uint d = a[i - 1] > a[i] ? a[i - 1] - a[i] : a[i] - a[i - 1],
				s = a[i - 1] > a[i] ? -1 : 1;

			if (d > k)
			{
				ok = false;
				break;
			}

			for (uint j = 0; j < k; ++j)
				q[i][j] = q[i - 1][j];

			uint st = s == 1 ? w : w - 1;
			if (st == -1)
				st = min(k - 1, a[i - 1]);

			for (uint j = 0; j < d; ++j)
			{
				q[i][st] = q[i - 1][st] + s;

				st += s;
				if (st == -1)
					st = min(k - 1, a[i - 1]);
				else if (st >= k)
					st = 0;
			}

			v = a[i] / k;
			w = a[i] % k;
		}

		if (ok)
		{
			cout << "YES" << endl;
			for (uint i = 0; i < n; ++i)
			{
				cout << 1;
				uint ck = 0;
				--q[i][0];
				for (uint j = 1; j < a[i]; ++j)
				{
					if (!q[i][ck])
						++ck;
					cout << ' ' << ck + 1;
					--q[i][ck];
				}
				cout << endl;
			}
		}
	}

	return 0;
}
