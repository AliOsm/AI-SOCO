#include<bits/stdc++.h>
using namespace std;
typedef int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll comp=0;
set<p2> edg;
set<ll> s;
void dfs(ll i){
	vector<ll> v;
	for(auto it=s.begin();it!=s.end();it++)
	if(edg.find({i,*it})==edg.end())
	v.push_back(*it);
	for(ll j=0;j<ll(v.size());j++)
	s.erase(v[j]);
	for(ll j=0;j<ll(v.size());j++)
	dfs(v[j]);
}
void solve(){
	ll n,m,k,tot=0;
	cin>>n>>m>>k;
	for(ll i=2;i<=n;i++)
	s.insert(i);
	for(ll i=0;i<m;i++){
		ll a,b;
		cin>>a>>b;
		edg.insert({a,b});
		edg.insert({b,a});
	}
	for(ll i=2;i<=n;i++)
	if(edg.find({1,i})==edg.end())
	tot++;
	for(ll i=2;i<=n;i++)
	if(s.find(i)!=s.end()&&edg.find({1,i})==edg.end()){
		dfs(i);
		comp++;
	}
	if(!s.empty()||tot<k||comp>k)
	cout<<"impossible";
	else
	cout<<"possible";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll qc=1;
    for(ll i=1;i<=qc;i++)
    solve();
}
