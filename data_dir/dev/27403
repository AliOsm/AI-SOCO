    #include<bits/stdc++.h>
    #define pb push_back
    #define pp pop_back()
    #define mp make_pair
    #define fr first
    #define sc second
    #define sz size()
    #define smin(x,y) ((x)=min((x),(y)))
    #define smax(x,y) ((x)=max((x),(y)))
    #define all(x) x.begin(),x.end()
    #define CS ios_base::sync_with_stdio(false);
    #define show(x) cerr << #x << " is " << x <<endl;
    using namespace std;
    typedef long long ll;
    typedef pair<int,int> ii;
    typedef vector<int> vi; 
    const int M=1e5+5;
    const int Sq=300;
    int l[M],r[M],cnt[M],a[M];
    int mark[M];
    int arr[M];
    bool cmp(int x,int y){
    	if(l[x]/Sq == l[y]/Sq) return r[x]<r[y];
    	return l[x]/Sq < l[y]/Sq;
    }
    int32_t main()
    {
    	CS;
    	int n,m; cin>>n>>m;
    	for(int i=0;i<n;i++){ 
    		cin>>a[i];
    		if(a[i]>(int)(1e5)) a[i]=1e5+2;
    	}
    	for(int i=0;i<m;i++) cin>>l[i]>>r[i],l[i]--,r[i]--;
    	iota(arr,arr+m,0);
    	sort(arr,arr+m,cmp);
    	int ln=0,rn=-1;
    	int ans=0;
    	for(int i=0;i<m;i++){
    		int q = arr[i];
    		while(rn<r[q]){
    			rn++;
    			if(mark[a[rn]]==a[rn]) ans--;
    			mark[a[rn]]++;
    			if(mark[a[rn]]==a[rn]) ans++;
    		}
    		while(rn>r[q]){
    			if(mark[a[rn]]==a[rn]) ans--;
    			mark[a[rn]]--;
    			if(mark[a[rn]]==a[rn]) ans++;
    			rn--;
    		}
    		while(ln<l[q]){
    			if(mark[a[ln]]==a[ln]) ans--;
    			mark[a[ln]]--;
    			if(mark[a[ln]]==a[ln]) ans++;
    			ln++;
    		}
    		while(ln>l[q]){
    			ln--;
    			if(mark[a[ln]]==a[ln]) ans--;
    			mark[a[ln]]++;
    			if(mark[a[ln]]==a[ln]) ans++;
    		}
    		cnt[q]=ans;
    	}
    	for(int i=0;i<m;i++) cout<<cnt[i]<<'\n';
    	return 0;
    }