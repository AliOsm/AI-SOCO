// Bismillahirrahmanir Rahim
//NAMOMIZARAHID
#include<bits/stdc++.h>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<string>

#define nl printf("\n")
#define sp printf(" ")

#define rep(i,a,b) for(i=a;i<=b;i++)
#define rev(i,a,b) for(i=a;i>=b;i--)

#define fil freopen("input.txt","r",stdin)

#define pf printf
#define sf scanf


typedef long long l;
typedef unsigned long long ul;

using namespace std;

#define pi acos(-1.0)
#define mp make_pair
#define pb push_back
#define p_q priority_queue


#define dis( a ,b ) abs( a - b )
#define dis2d( x1 ,y1 ,x2 ,y2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) )
#define dis3d( x1 ,y1 ,z1 ,x2 ,y2 ,z2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) + ( z1 - z2 ) * ( z1 - z2 ) )


#define C(i) pf("Case %I64d: ",i)


typedef pair< l ,l > pll;
typedef pair< string ,l > psl;
typedef pair< l ,string > pls;
typedef pair< string ,string > pss;
typedef pair< char ,l > pcl;
typedef pair< l ,char > plc;


#define Inf 0x7f7f7f
#define Max 100000000001
#define Min -100000000001
#define mod 1000000007

#define ms0(a) memset(a,0,sizeof(a))
#define ms1(a) memset(a,1,sizeof(a))
#define ms_1(a) memset(a,-1,sizeof(a))

#define valid(nx,ny,r,c) nx>=0&&nx<=r-1 && ny>=0&&ny<=c-1



int inline in(){int x;sf("%d",&x);return x;}
l inline lin(){l x;sf("%I64d",&x);return x;}
void P(l x){pf("%I64d",x);}


l fx[]={0,0,-1,1};
l fy[]={-1,1,0,0};

/*
struct info
{
    l x,y;
    info() {};
    info(l _x, l _y) {x = _x; y = _y;};

    bool operator < (const info &p) const
    {
		if(x == p.x) return y > p.y;
		else
			return x > p.x;
    }
};
*/


/*
    rep(i,1,n)
    {
        a[i]=lin();
    }

*/

#define rng 10010

char s[rng],s1[rng];

map < l , l > a,a1;

bool thik_ase[rng];


int main()
{
    l i,j,r=0;

    //fil;
    //freopen("out.txt","w",stdout);

    sf("%s",s);
    sf("%s",s1);

    l d=strlen(s);
    l d1=strlen(s1);
    rep(i,0,d-1)
    {
        a[s[i]]++;
    }

    rep(i,0,d1-1)
    {
        a1[s1[i]]++;
    }

    bool ck=1;
    rep(i,'a','z')
    {
        if(a[i]!=a1[i])
        {
            ck=0;
            break;
        }
    }

    if(ck)
    {
        puts("array");
        return 0;
    }
    ck=1;
    rep(i,'a','z')
    {
        if(a1[i]>a[i])
        {
            ck=0;
            break;
        }
    }

    if(ck)
    {
        j=0;
        for(i=0;i<d;i++)
        {
            if(j>d1-1)break;
            if(s[i]==s1[j])
            {
                thik_ase[j]=1;
                j++;
            }
        }
        bool ok=1;
        rep(i,0,d1-1)
        {
            if(thik_ase[i]==0)
            {
                ok=0;
                break;
            }
        }
        if(ok)
        {
            puts("automaton");
            return 0;
        }
        puts("both");
        return 0;
    }
    puts("need tree");

    //sort(a+1,a+n+1)

    return 0;
}


