/*
                _                _____             _                 
     /\        (_)              / ____|           (_)                
    /  \   _ __ _ _   _ _ __   | (___   __ _ _ __  _  ___  _____   __
   / /\ \ | '__| | | | | '_ \   \___ \ / _` | '_ \| |/ _ \/ _ \ \ / /
  / ____ \| |  | | |_| | | | |  ____) | (_| | | | | |  __/  __/\ V / 
 /_/    \_\_|  | |\__,_|_| |_| |_____/ \__,_|_| |_| |\___|\___| \_/  
              _/ |                               _/ |                
             |__/                               |__/                 
*/

#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for(let(it,v.begin()); it != v.end(); it++)
#define rtr(v,it) for(let(it,v.rbegin()); it != v.rend(); it++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define ll long long int
#define pii pair<int,int>
#define vi vector<int>

using namespace std;

int main() {
    ios::sync_with_stdio(false);
    int n;
    cin>>n;
    ll a[n],m=1e18,M=-1e18,neg=0,pos=0;
    for(int i=0;i<n;i++) {
        cin>>a[i];
        m=min(m,a[i]);
        M=max(M,a[i]);
        if(a[i]<0) {
            neg+=a[i];
        } else if(a[i]>0) {
            pos+=a[i];
        }
    }
    if(n==1) {
        cout<<a[0]<<endl;
    } else if(m==0 || M==0 || (pos && neg)) {
        cout<<pos-neg<<endl;
    } else if(m>0) {
        cout<<pos-2*m<<endl;
    } else {
        cout<<2*M-neg<<endl;
    }
    return 0;
}