#include <bits/stdc++.h>
namespace myland{
	using namespace std;
	namespace _abbr{
		#define fst first
		#define sec second
		#define pb push_back
		#define each for_each
		#define _sum accumulate
		#define _1s __builtin_popcountll
		typedef unsigned int ui;
		typedef long long ll;
		typedef unsigned long long ull;
		typedef long double ld;
		typedef pair<int,int> pii;
		typedef pair<ll,ll> pll;
		const double EPS = 1e-8;
		const double PI = acos(-1.0);
		const int INF = 0x3f3f3f3f;
		const ll INFL = 0x3f3f3f3f3f3f3f3fll;
		const int MOD = 1e9+7;
	}using namespace _abbr;
	namespace _solve{
		#define MAIN int main
		#define FAST_IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
		#define GG exit(0)
		#define times(x) for(int cas=1, tms = (x);cas<=tms;cas++)
		#define CaseT int T;cin >> T;times(T)
		#define TCase int T;scanf("%d",&T);times(T)
		#define bug cerr << "!!!" << endl;
		#define bugc(_) cerr << (#_) << " = " << (_) << endl;	
	}using namespace _solve;
	namespace _calculate{
		bool odd(ll x){return x&1;}
		bool even(ll x){return (x&1)^1;}
		ll upd(ll a, ll b){return a%b?a/b+1:a/b;};
		ll random(ll a, ll b){return a+rand()*rand()%(b-a+1);};
		template<class T>T sqr(T x){return x*x;}
	}using namespace _calculate;
	namespace _simple_algo{
		#define range(a,x,y) (a+x), (a+y+1)
		#define all(x) (x).begin(),(x).end()
		#define rall(x) (x).rbegin(),(x).rend()
		#define clr(a,b) memset(a,b,sizeof(a))
		bool pal(const string& s){string t = s;reverse(all(t));return s==t;};
		inline ll rd(){
		    ll x=0,f=1;char ch=getchar();
		    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	   		while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	    	return x*f;
		}
		void read(ll& t){t=rd();}
	}using namespace _simple_algo;
}using namespace myland;

int n, m;
string s;
vector<string>ss, ts;
int cnt[200];
map<string, int>mp;

MAIN(){
	FAST_IO;
	cin >> n;
	m = 2*n-2;
	times(m){
		cin >> s;
		cnt[(int)s[0]]++;
		ss.pb(s);
	}
	for(auto s:ss) ts.pb(s);
	sort(all(ts),[](string a, string b){return a.size()>b.size();});
	string a = ts[0], b = ts[1];
	char c = char(max_element(cnt,cnt+200)-cnt);
	if(a[0]!=c) swap(a, b);
	if(a.substr(1) != b.substr(0,n-2)) swap(a, b);
	string t = a + b[b.size()-1];
	string w = "";
	for(char c:t){
		w += c;
		mp[w] = 1;
	}
	for(string s:ss){
		if(mp[s]) cout << 'P';
		else cout << 'S';
		mp[s] = 0;
	}
	GG;
}
