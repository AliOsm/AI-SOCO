# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=1500105; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

ll p;
ll mul(ll a,ll b){ return a*b-(ll)((long double)a*b/p)*p; }
ll Pow(ll a,ll b){
	ll res=1;
	for (;b;b>>=1,a=mul(a,a)) if (b&1) res=mul(res,a);
	return res;
}

struct FT{
	int rev[N],len; ll w[2][N],W[2][N],F[N],G[N]; ll p,g;
	ll mul(ll a,ll b){ return a*b-(ll)((long double)a*b/p)*p; }
	ll Pow(ll a,ll b){
		ll res=1; for (;b;b>>=1,a=mul(a,a)) if (b&1) res=mul(res,a);
		return res;
	}
	void Init(int n){
		for (len=1;len<2*n;len<<=1);len<<=1;
		ll lcm=1ll*n*len/gcd(n,len);
		p=lcm+1;
		while (p<100000) p+=lcm;
		for (;;p+=lcm){
			int chk=1;
			for (int j=2;(ll)j*j<=p&&chk;j++) if (p%j==0) chk=0;
			if (chk) break;
		}
		for (g=2;;g++){
			int chk=1;
			for (int j=2;1ll*j*j<=p-1&&chk;j++)
				if ((p-1)%j==0){
					if (Pow(g,j)==1) chk=0; else
					if (Pow(g,(p-1)/j)==1) chk=0;
				}
			if (chk) break;
		}
	}
	void preFFT(int n){
		ll w0=Pow(g,(p-1)/n); int m;
		w[0][0]=w[1][0]=1;
		rep(i,1,n-1) w[0][i]=mul(w[0][i-1],w0);
		rep(i,1,n-1) w[1][i]=w[0][n-i];
		for (m=0;(1<<m)!=n;m++);
		rev[0]=0;
		rep(i,1,n-1) rev[i]=(rev[i>>1]>>1)|(i&1)<<m-1;
	}
	void FFT(ll *A,int n,int op){
		rep(i,0,n-1) if (i<rev[i]) swap(A[i],A[rev[i]]);
		for (int i=1;i<n;i<<=1)
			for (int j=0,t=n/(i<<1);j<n;j+=i<<1)
				for (int k=j,l=0;k<j+i;k++,l+=t){
					ll x=A[k],y=mul(w[op][l],A[k+i]);
					A[k]=(x+y>=p?x+y-p:x+y);
					A[k+i]=(x-y+p>=p?x-y:x-y+p);
				}
		if (op){
			ll tmp=Pow(n,p-2);
			rep(i,0,n-1) A[i]=mul(A[i],tmp);
		}
	}
	void preDFT(int n,int op){
		ll w0=Pow(g,(p-1)/n);
		W[0][0]=W[1][0]=1;
		rep(i,1,n-1) W[0][i]=mul(W[0][i-1],w0);
		rep(i,1,n-1) W[1][i]=W[0][n-i];
		rep(i,0,2*n-1) G[2*n-1-i]=W[op][1ll*i*(i-1)/2%n];
		rep(i,2*n,len-1) G[i]=0;
		for (len=1;len<2*n;len<<=1);len<<=1;
		preFFT(len);
		FFT(G,len,0);
	}
	void DFT(ll *A,int n,int op){
		rep(i,0,n-1) F[i]=mul(A[i],W[op][(n-1ll*i*(i-1)/2%n)%n]);
		rep(i,n,len-1) F[i]=0;
		FFT(F,len,0);
		rep(i,0,len-1) F[i]=mul(F[i],G[i]);
		FFT(F,len,1);
		rep(i,0,n-1) A[i]=mul(F[2*n-1-i],W[op][(n-1ll*i*(i-1)/2%n)%n]);
		if (op){
			ll tmp=Pow(n,p-2);
			rep(i,0,n-1) A[i]=mul(A[i],tmp);
		}
	}
	void solve(ll a[],ll b[],ll c[],int n,int op) { //op=0,mul; op=1,div
		preDFT(n,0),DFT(a,n,0),DFT(b,n,0);
		rep(i,0,n-1) c[i]=op?mul(a[i],Pow(b[i],p-2)):mul(a[i],b[i]);
		preDFT(n,1),DFT(c,n,1);
	}
}; 

int n;
ll sum=0,a,b,c,v,A[N],B[N],C[N],A2[N],B2[N],C2[N],s,ans;
set <ll> S;
FT T;

int main() {
    //file_put();
    
    scanf("%d",&n);
    rep(i,0,n-1) scanf("%I64d",&B[i]);
    rep(i,0,n-1) scanf("%I64d",&C[i]);
	T.Init(n); p=T.p;
	rep(i,0,n-1) B2[i]=B[i],C2[i]=mul(C[(i+1)%n]-C[i]+p,Pow(p-2,p-2));
	reverse(B2+1,B2+n);
	T.solve(C2,B2,A2,n,1);
	rep(i,0,n-1) {
		v=(2*A2[i]<p)?A2[i]:A2[i]-p;
		if (abs(v)>100000) return 0*printf("0\n");
		A[i]=v;
	}
	a=n,c=-C[0];
	rep(i,0,n-1) b+=2*(sum-B[i]),c+=sqr(sum-B[i]),sum+=A[i];
	if (sum!=0) return 0*printf("0\n");
	if (b*b-4*a*c>=0) {
		s=floor(sqrt(b*b-4*a*c));
		if (s*s!=b*b-4*a*c) return 0*printf("0\n");
		rep(i,-1,1) if (i && (-b+i*s)%(2*a)==0) S.insert((-b+i*s)/(2*a));
	}
	printf("%d\n",S.size());
	rep_it(it,S) {
		ans=*it;
		rep(i,0,n-1) printf("%I64d ",ans),ans+=A[i];
		printf("\n");
	}
	
    return 0;
}
