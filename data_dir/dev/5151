#include <iostream>
#include <fstream>
#include <cstring>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <iterator>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=5e5+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

int sz,n,lt[N],a[N],ans[N];

pii t[6*N];

vector<pii>q[N];

void upd(int pos,int val,int v=1,int tl=1,int tr=n){
    if(tl==tr){
        t[v]={val,pos};
        return;
    }
    int tm=(tl+tr)/2;
    if(pos<=tm){
        upd(pos,val,v+v,tl,tm);
    }
    else{
        upd(pos,val,v+v+1,tm+1,tr);
    }
    t[v]=min(t[v+v],t[v+v+1]);
}

pii get(int l,int r,int v=1,int tl=1,int tr=n){
    if(tl>r || l>tr){
        return {inf,inf};
    }
    if(l<=tl && tr<=r){
        return t[v];
    }
    int tm=(tl+tr)/2;
    return min(get(l,r,v+v,tl,tm),get(l,r,v+v+1,tm+1,tr));
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>a[i];
    }
    int m,l,r;
    cin>>m;
    for(int i=1;i<=m;i++){
        cin>>l>>r;
        q[r].push_back({l,i});
    }
    for(int i=1;i<=n;i++){
        if(lt[a[i]])upd(lt[a[i]],inf);
        upd(i,lt[a[i]]);
        for(int j=0;j<q[i].size();j++){
            int l=q[i][j].x;
            int id=q[i][j].y;
            pii p=get(l,i);
            if(p.x<l){
                ans[id]=a[p.y];
            }
        }
        lt[a[i]]=i;
    }
    for(int i=1;i<=m;i++){
        cout<<ans[i]<<" ";
    }
    return 0;
}
