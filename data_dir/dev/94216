#include<bits/stdc++.h>

using namespace std;

/******************************************************************/
#define next mishaP
#define left LEVO
#define right PRAVO
#define time CHAS
#define x1 DA
#define y1 NET

#define llong long long
#define fi first
#define se second
#define elif else if
#define pb push_back
#define da true
#define net false

#define cclear cout<<flush;
#define fclear fflush(stdout);
#define files freopen("treefirstedge.in","r",stdin);freopen("treefirstedge.out","w",stdout);
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

#define yes "YES"
#define no "NO"

#define endl "\n"

/******************************************************************/

const double Pi = acos(-1);
const llong over999 = 1e14;
const double eps = 1e-9;

/*****************************************************************/


llong v[200010], c[200010];
bool used[200010], to[200010];
llong n, m, ans, x, k, y;

void dfs(int x, int col)
{
    //if(c[x]!=col)ans++;
    used[x]=true;
    if(!used[v[x]])dfs(v[x], 1-col);
}
//arr
int main() 
{
    //freopen("ragnarok.in", "r", stdin);freopen("ragnarok.out", "w", stdout);
    // fast;
    //files;
    cin >> n;
    for(int i=1;i<=n;i++)
    {
        cin >> x;
        v[i]=x;
        to[x]=true;
        //if(i==x)ans--;
    }
    int a=0, b=0;
    for(int i=1;i<=n;i++)
    {
        cin >> c[i];
        if(c[i]==1)a=1-a;
    }
    int z=0;
    if(a==0)z++;
    
    int anst=0;
    for(int i=1;i<=n;i++)
    {
        if(!to[i])
        {
            anst++;
            if(!used[i])dfs(i, c[i]), ans++;
        }
    }
    
    for(int i=1;i<=n;i++)
    {
     //   if(!to[i])
        {
            
            if(!used[i])dfs(i, c[i]), ans++;
        }
    }
    
    
    if(ans==1)ans=0;
    ans+=max(anst-ans, 0LL);
    cout << ans+z;
    return 0;
    
    
}