#include <bits/stdc++.h>
using namespace std;

const string digit[10] = {"1110111", "0010010", "1011101", "1011011", "0111010", "1101011", "1101111", "1010010", "1111111", "1111011"};

int n, k, cost[2005][10], dp[2005][2055];
string s[2005];

int calc(int id, int d) {
	int cnt = 0;
	for (int i = 0; i < 7; i++) {
		if (s[id][i] == '1' && digit[d][i] == '0') return -1;
		if (s[id][i] == '0' && digit[d][i] == '1') cnt++;
	}

	return cnt;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> k;
	for (int i = 0; i < n; i++) {
		cin >> s[i];
		
		for (int d = 0; d < 10; d++) {
			cost[i][d] = calc(i, d);
		}
	}

	memset(dp, -1, sizeof(dp));
	dp[n][k] = 0;

	for (int i = n - 1; i >= 0; i--) {
		for (int j = 0; j <= k; j++) {
			for (int d = 9; d >= 0; d--) {
				if (cost[i][d] == -1) continue;
				if (dp[i + 1][j + cost[i][d]] == -1) continue;

				dp[i][j] = d;
				break;
			}
		}
	}

	if (dp[0][0] == -1) {
		cout << -1 << '\n';
		return 0;
	}

	string ans = "";
	int cur = 0;

	for (int i = 0; i < n; i++) {
		ans += '0' + dp[i][cur];
		cur += cost[i][dp[i][cur]];
	}

	cout << ans << '\n';

	return 0;
}