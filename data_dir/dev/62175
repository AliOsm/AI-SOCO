#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

ordered_set s;

int main()
{
  int n, m;
  scanf("%d %d", &n, &m);
  int N = max(n, m);
  for (int i = 1; i*i <= N; ++i) {
    if (n % i == 0 || m % i == 0) {
      if(n % i == 0 && m % i == 0) s.insert(i);
      if (n % i == 0 && m % (n/i) == 0) s.insert(n/i);
      if (m % i == 0 && n % (m/i) == 0) s.insert(m/i);
    }
  }
  int q;
  scanf("%d", &q);
  while (q--) {
    int l, r;
    scanf("%d %d", &l, &r);
    int num = *s.find_by_order(s.order_of_key(r+1)-1);
    if (num >= l && num <= r) {
      printf("%d\n", num);
    } 
    else {
      printf("-1\n");
    }
  }
}
