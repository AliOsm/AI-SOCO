#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
ll n,m,k=(-1),lo[25],hi[25],res=pow(10,9);
vector<string> v(25);
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    cin>>n>>m;
    for(ll i=0;i<n;i++){
        cin>>v[i];
        lo[i]=m+1;
        hi[i]=0;
    }
    for(ll i=n-1;i>=0;i--){
        for(ll j=0;j<v[i].size();j++)
        if(v[i][j]=='1'){
            lo[n-i-1]=min(lo[n-i-1],j);
            hi[n-i-1]=max(hi[n-i-1],j);
        }
        if(lo[n-i-1]!=m+1)
        k=max(k,n-i-1);
    }
    k++;
    if(k==0){
        cout<<0;
        exit(0);
    }
    else if(k==1){
        cout<<hi[0];
        exit(0);
    }
    for(ll qc=0;qc<pow(2,k-1);qc++){
        vector<ll> g;
        ll l=qc;
        g.push_back(0);
        while(l>0){
            g.push_back(l%2);
            l>>=1;
        }
        while(g.size()<k)
        g.push_back(0);
        ll sum=0;
        for(ll i=1;i<k;i++){
        if(g[i]==0&&g[i-1]==0)
        sum+=2*hi[i-1]+1;
        else if(g[i]==1&&g[i-1]==0)
        sum+=m+2;
        else if(g[i]==0&&g[i-1]==1)
        sum+=m+2;
        else
        sum+=2*(m-lo[i-1]+1)+1;
        }
        if(g[k-1]==0)
        sum+=hi[k-1];
        else
        sum+=(m+1-lo[k-1]);
        res=min(res,sum);
    }
    cout<<res;
}
