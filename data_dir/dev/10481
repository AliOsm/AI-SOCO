///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define ll long long int
#define inf ( int )( 1e9 + 1e9 )
#define mxs (int)( 1e6 + 10 )
#define md  int mid = ( l + r )>>1;
#define mod (ll)(1e9)+7
//int dx[]={+1,0,+0,-1};///Four Directions
//int dy[]={+0,-1,+1,+0};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
ll t, n, m, j, ans, k,a, b, c, d, e,f ,sum , i,sz;
string s, s2, s3, s4;
ll ar [ mxs ] , ar2 [ mxs ] , ar3 [ mxs ];
ll visited [ mxs ];
vector < pair < ll , ll > >lol;
vector < pair < ll , ll > > v;
priority_queue < ll > pq;
void brainfuck();
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>n;
    for ( i = 1 ; i < n; i++ )
    {
        cin>>ar [ i ];
        ar2 [ i ] = ar [ i ] + ar2 [ i - 1 ];
        v.push_back( { ar2 [ i ] , i } );
    }
    sort( v.begin() , v.end() );
    a = 1;
    b = v [ 0 ].first;
    for ( i = 1 ; i < n - 1; i++ )
    {
        a++;
        if ( v [ i ].first - b != 1 )
        {
            c = 1;
            break;
        }
        else b = v [ i ].first;
    }
    if ( c )
    {
        e = a;
        ar2 [ 0 ] = a;
        a = 0;
        for ( i = 0 ; i < n-1; i++ )
        {
            a++;
            if ( e == a )a++;
            ar2 [ v [ i ].second ] = a;
        }
        for ( i = 1 ; i < n; i++ )
        {
            if ( ar2 [ i ] - ar2 [ i - 1 ] != ar [ i ] )
            {
                cout<<"-1";
                return;
            }
        }
        for ( i = 0; i < n; i++ )
        {
            cout<<ar2 [ i ]<<" ";
        }
    }
    else
    {
        ///Checking for 1
        a = 1;
        ar2 [ 0 ] = 1;
        for ( i = 0 ; i < n-1; i++ )
        {
            a++;
            ar2 [ v [ i ].second ] = a;
        }
        c = 0;
        for ( i = 1 ; i < n; i++ )
        {
            if ( ar2 [ i ] - ar2 [ i - 1 ] != ar [ i ] )
            {
                c = 1;
                break;
            }
        }
        if ( !c )
        {
            for ( i = 0; i < n; i++ )cout<<ar2 [ i ]<<" ";
            return;
        }
        ///Checking for n
        a = 0;
        ar2 [ 0 ] = n;
        for ( i = 0 ; i < n-1; i++ )
        {
            a++;
            ar2 [ v [ i ].second ] = a;
        }
        c = 0;
        for ( i = 1 ; i < n; i++ )
        {
            if ( ar2 [ i ] - ar2 [ i - 1 ] != ar [ i ] )
            {
                cout<<"-1";
                return;
            }
        }
        for ( i = 0; i < n; i++ )cout<<ar2 [ i ]<<" ";
    }
}
