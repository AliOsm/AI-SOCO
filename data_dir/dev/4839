#include<bits/stdc++.h> 
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define MOD2 1000000009
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1);
#define E 998244353
#define pb push_back
#define mp make_pair
#define ll long long
 
using namespace std;
//using namespace __gnu_pbds;
 
//typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;

int BIT[10001];

void upd(int idx,int val)
{
	for(;idx<=10000;idx = (idx|(idx+1)))
		BIT[idx]+=val;
}

int query(int idx)
{
	if(idx<0)
		return 0;
	int sum=0;
	for(;idx>=0;idx = (idx&(idx+1))-1)
		sum+=BIT[idx];
	return sum;
}

int main()
{
	IOS;
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	int n;
	cin >> n;
	int x1[n+1],x2[n+1],y1[n+1],y2[n+1];
	vector<int>ver2[10001];
	vector<int>hor[10001];
	REP(i,1,n)
	{
		cin >> x1[i] >>  y1[i] >>  x2[i] >>  y2[i];
		x1[i]+=5000;
		y1[i]+=5000;
		x2[i]+=5000;
		y2[i]+=5000;
		if(x1[i]>x2[i])
			swap(x1[i],x2[i]);
		if(y1[i]>y2[i])
			swap(y1[i],y2[i]);
		if(y1[i]==y2[i])
			hor[y1[i]].pb(i);
		else
			ver2[y2[i]].pb(i);
	}
	ll tot=0;
	REP(i,0,10000)
	{
		if(!hor[i].empty())
		{
			for(auto it:hor[i])
			{
				REP(j,i+1,10000)
				{
					for(auto it2:ver2[j])
					{
						if(y1[it2]<=y1[it] && (x1[it]<=x1[it2] && x1[it2]<=x2[it]))
							upd(x1[it2],1);
					}
				}
				REP(j,i+1,10000)
				{
					for(auto it2:hor[j])
					{
						ll val=query(x2[it2])-query(x1[it2]-1);
						val*=(val-1);
						val/=2;
						tot+=val;
					}
					for(auto it2:ver2[j])
					{
						if(y1[it2]<=y1[it] && (x1[it]<=x1[it2] && x1[it2]<=x2[it]))
							upd(x1[it2],-1);
					}
				}
			}
		}
	}
	cout << tot;
}