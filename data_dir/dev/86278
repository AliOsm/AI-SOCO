#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define IN freopen("nocross.in","r",stdin)
#define OUT freopen("nocross.out","w",stdout)
#define REP(i,a,b) for(i=(a) ; i<=(b) ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000000000000LL
#define i64 long long int
#define xx first
#define yy second
#define ln 17
#define off 2


using namespace __gnu_pbds;
using namespace std ;

typedef tree< int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64,i64> pii ;

const double eps = 1e-9 , pi = acos(-1.0);

#define maxn 1000005

int ans[maxn] ;
vector < pair< int ,pair<int,int> > > vp ;

int main()
{
    int t=1 , tc ;

    scanf("%d",&tc) ;

    while(t++<=tc)
    {
        int n , i ;
        scanf("%d",&n) ;

        vp.clear() ;
      //  ans.clear() ;

        for(i=1 ; i<=n ; i++)
        {
            int x , y ;
            scanf("%d %d",&x,&y) ;
            vp.pb( mp( x , mp(0,i) ) ) ;
            vp.pb( mp( y , mp(1,i) ) ) ;
        }

        sort( vp.begin() , vp.end() ) ;

        int cnt = 0 ;
        bool yes = false ;

        int started = 0 ;

        for(i=0 ; i<vp.size() ; i++)
        {
            if( vp[i].yy.xx == 0 )
            {
                if( cnt==1 ) yes = true ;
                ans[ vp[i].yy.yy ] = cnt+1 ;
                started++ ;
            }
            else{
                started-- ;
                if( started==0 )
                {
                    cnt ^= 1 ;
                }
            }
        }
        if( yes==false ) printf("-1\n") ;
        else{
            for(i=1 ; i<=n ; i++) printf("%d ",ans[i]) ;
            printf("\n") ;
        }
    }

    return 0 ;
}
