#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define ff first
#define ss second
#define mp make_pair
//#define int long long 
#define ll long long
#define mod %1000000007

vector<vector<int>> g,rg;
map<int,int> m;

int t=0;
vector<int> clr;
vector<pair<int,int>> scc;
vector<int> vis;
int m1,m2;

vector<int> component;

void dfs0(int s)
{
	t++;
	vis[s]=1;
	for(auto it:g[s])
	{
		if(!vis[it])
		{
			dfs0(it);
		}
	}
	t++;
	scc.push_back(mp(t,s));
}
void dfs1(int s,int clr)
{
	component[s] = clr;
	vis[s] = 1;
	
	for(auto it:rg[s])
	{
	
		if(!vis[it])
		{
			dfs1(it,clr);
		}
	}
}
int32_t main()
{
	IOS;
    #ifndef ONLINE_JUDGE
    freopen("int.txt", "r", stdin);
    freopen("out.txt", "w", stdout);
    #endif
    int n;
    cin>>n;
    vector<pair<int,int>> v(n);
    vector<int> a;
    vector<int> aa(n);
    vector<int> bb(n);
    for(int i = 0;i < n;i++)
    {
    	cin>>v[i].ff>>v[i].ss;
    	a.push_back(v[i].ff);
    	a.push_back(v[i].ss);
    }
    sort(a.begin(),a.end());
    int c=0;
    for(int i = 0;i < a.size();i++)
    {
    	int j;
    	for(j = i;j < a.size();j++)
    	{
    		if(a[i]==a[j])
    			;
    		else
    			break;
    	}
    	c++;
    	m[a[i]] = c;
    	
    	i = j-1;
    }
    for(int i=0;i<n;i++)
    {
    	aa[i]=m[v[i].ff];
    	bb[i]=m[v[i].ss];
    }
    g.resize(c+1);
    rg.resize(c+1);
    for(int i = 0;i < n;i++)
    {
    	g[aa[i]].push_back(bb[i]);
    	g[bb[i]].push_back(aa[i]);

    	rg[aa[i]].push_back(bb[i]);
    	rg[bb[i]].push_back(aa[i]);
    }
    vis.resize(c+1,0);
    int clr=0;
    for(int i = 1;i <= c;i++)
    {
    	if(!vis[i])
    	{
    		dfs0(i);
    	}
    }
    vis.clear();
    vis.resize(c+1,0);
    bool ch=1;
    int ans=0;
    component.resize(c+1);
    for(int i = scc.size()-1;i >= 0;i--)
    {
    	if(!vis[scc[i].ss])
    	{
    		dfs1(scc[i].ss,clr);
    		clr++;
    	}
    }
    vector<int> inc(c+1,0);
    vector<int> edges(clr);
    vector<int> vertices(clr);
    vector<pair<int,int> > mx(clr,mp(0,0));
    for(int i = 0;i < n;i++)
    {
    	int u = aa[i];
    	int vv = bb[i];
    	if(!inc[u])
    	{
    		inc[u]=1;
    		vertices[component[u]]++;
    		int comp = component[u];
    		if(mx[comp].ff<v[i].ff)
    		{
    			mx[comp].ss = mx[comp].ff;
    			mx[comp].ff = v[i].ff;
    		}
    		else
    			if(mx[comp].ss<v[i].ff)
    				mx[comp].ss = v[i].ff;
    	}
    	if(!inc[vv])
    	{
    		inc[vv] = 1;
    		vertices[component[vv]]++;
    		int comp = component[vv];
    		if(mx[comp].ff<v[i].ss)
    		{
    			mx[comp].ss = mx[comp].ff;
    			mx[comp].ff = v[i].ss;
    		}
    		else
    			if(mx[comp].ss<v[i].ss)
    				mx[comp].ss = v[i].ss;
    	}
    	edges[component[u]]++;
    }
    for(int i=0;i<clr;i++)
    {
    	if(edges[i]>vertices[i])
    		ch=0;
    	else
    		if(edges[i]==vertices[i])
    			ans = max(ans,mx[i].ff);
    		else
    			ans = max(ans,mx[i].ss);
    }
    if(ch==0)
    	cout<<-1;
    else
    	cout<<ans;
    return 0;
}