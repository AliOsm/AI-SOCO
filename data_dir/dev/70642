// Author : Mohamed Sameh
#include <bits/stdc++.h>
typedef long long ll ;
#define pb push_back
#define f first
#define s second
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define SZ(a) (int)a.size()
#define Flush fflush(stdout);
using namespace std ;
const int M =  1e7 + 9 ;
bool siev[M];
int frq[M];
vector <int> p ;
vector <int> cn ;
void SIEV ()
{
    siev[0] = siev[1] = 1 ;
    for (int i = 2; i <= M /i ; i++)
    {
        if (siev[i])continue ;
        for (int j = i*i ; j < M ;j+=i)
            siev[j] =1 ;
    }
    for (int i =2 ; i < M ;i++)if (!siev[i])p.pb(i);

    for (int i =0 ; i < SZ(p) ; i++)
    {
        int cur = 0;
        int ini = p[i];
        while (ini <= 1e7 )
        {
            cur += frq[ini];
            ini += p[i];
        }
        cn.pb(cur);
        if (i)cn[i]+=cn[i-1];
    }
}
int getl (int x )
{
    int l = 0 , r = SZ(p) -1 , m , L =-1 ;
    while (l <= r )
    {
        m = (l+r)>>1;
        if (p[m] >= x )
        {
            L = m ;
            r = m-1 ;
        }else
        l = m+1;
    }
    return L ;
}
int getr (int x)
{
    int l = 0 , r = SZ(p) -1 , m , R =-1 ;
    while (l <= r )
    {
        m = (l+r)>>1;
        if (p[m] <= x )
        {
            R = m ;
            l = m+1 ;
        }else
        r = m-1;
    }
    return R ;
}

int main()
{
    int n , m ;
    scanf ("%d" , &n );
    for (int i =0 ; i < n ;i++)
    {
        int x ;
        scanf ("%d" , &x );
        frq[x]++;
    }
    SIEV();
    scanf ("%d" , &m );
    for (int i =0 ; i < m ;i++)
    {
        int l , r;
        scanf ("%d%d", &l ,&r );
        l = getl(l);
        r = getr(r);
        int ans =0 ;
        if (l != -1 )
        {
            ans = cn[r] - (l-1 > -1 ? cn[l-1] : 0 );
        }
        printf ("%d\n" ,ans );
    }
}


