#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <set>
#include <iomanip>
#include <deque>
#include <cassert>
#include <ctime>
#include <cstring>
#include <cstdlib>
#include <chrono>
#include <ctime>
#include <random>
using namespace std;

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
typedef long long ll;
typedef long double ld;
#define INF 2001001001
#define MOD 1000000007

int N,arr[100001];
int ans[100001];
vector<pair<int,int>>v;

int gcd(int a, int b){
  return (b==0)?a:gcd(b,a%b);
}

int main()
{
  ios_base::sync_with_stdio(0);cin.tie(0);
  //freopen (".in","r",stdin);
  //freopen (".out","w",stdout);
  ld starts=clock();
  cin>>N;
  for (int i=0;i<N;i++){
    cin>>arr[i];
    v.push_back({arr[i],i});
  }
  for (;;){
    ld stops=clock();
    if ((stops-starts)/(ld)(CLOCKS_PER_SEC)>=0.45){
      cout<<"NO"<<endl;
      return 0;
    }
    shuffle(v.begin(),v.end(),rng);
    int val1=0,val2=0;
    for (int i=0;i<N;i++){
      int temp=gcd(val1,v[i].first);
      if (temp!=val1){
	ans[v[i].second]=1;
	val1=temp;
      }
      else{
	ans[v[i].second]=2;
	val2=gcd(val2,v[i].first);
      }
    }
    if (val1==1 && val2==1){
      cout<<"YES"<<endl;
      for (int i=0;i<N;i++)
	cout<<ans[i]<<' ';
      cout<<endl;
      return 0;
    }
  }
  return 0;
}
