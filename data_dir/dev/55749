#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <string.h>
#include <cstring>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <bitset>
#include <locale>
#include <iostream>
#include <cmath>
#include <iomanip>
#include <math.h>
#include <bitset>
using namespace std;


#define ll  long long
#define ld long double
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844

ll GCD(ll x, ll y) { return !y ? x : GCD(y, x % y); }
ll LCM(ll x, ll y) { return x*y / GCD(x, y); }
bool visited[1000];
int arr[1000];
int n,last;
int best1()
{
	for (int i = 0; i < n; i++)
		if (arr[i]>last && !visited[i])
		{
			visited[i] = 1;
			last = arr[i];
			return 1;
		}
		return 0;
}
void best2()
{
	for (int i = 0; i < n; i++)
		if (!visited[i])
		{
			visited[i] = 1, last = arr[i];
			break;
		}
}
int main()
{
	ios::sync_with_stdio(false);
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr), cout.tie(nullptr);
	int counter = 0;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> arr[i];
	sort(arr, arr + n);
	last=arr[0];
	visited[0] = 1;
	for (int i = 1; i < n; i++)
	{
		if (best1())
			counter++;
		else
			best2();
	}
	cout << counter << endl;
	return 0;
}