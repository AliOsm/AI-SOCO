#include<bits/stdc++.h>
#define LiangJiaJun main
using namespace std;
int n,k,q,m,a[100004];
int pa[100004],mk[100004];
int rt[100004];
vector<int>vec[100004];
vector<int>v;
int tot;
struct prt{
    int l,r,w;
}T[100004*20];
int getid(int x){
    return lower_bound(v.begin(),v.end(),x)-v.begin()+1;
}
void build(int &k,int l,int r){
     k=++tot;
     T[k].w=0;
     if(l==r)return ;
     int mid=(l+r)>>1;
     build(T[k].l,l,mid);
     build(T[k].r,mid+1,r);
}
void update(int l,int r,int &now,int last,int k){
     T[++tot]=T[last];
     now=tot;
     T[now].w++;
     if(l==r)return ;
     int mid=(l+r)>>1;
     if(k<=mid)update(l,mid,T[now].l,T[last].l,k);
     else update(mid+1,r,T[now].r,T[last].r,k);
}
int query(int l,int r,int x,int y,int k){
    if(l==r)return T[y].w-T[x].w;
    int mid=(l+r)>>1;
    if(k<=mid)return query(l,mid,T[x].l,T[y].l,k);
    else{
        int ret=0;
        ret+=T[T[y].l].w-T[T[x].l].w;
        ret+=query(mid+1,r,T[x].r,T[y].r,k);
        return ret;
    }
}
int LiangJiaJun(){
    tot=0;
    memset(rt,0,sizeof(rt));
    for(int i=0;i<=100000;i++)vec[i].clear();
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++){
        scanf("%d",&a[i]);
        vec[a[i]].push_back(i);
        mk[i]=vec[a[i]].size()-1;
    }
    for(int i=1;i<=n;i++){
        if(mk[i]>=k){
            pa[i]=vec[a[i]][mk[i]-k];
        }
        else{
            pa[i]=0;
        }
        v.push_back(pa[i]);
    }
    sort(v.begin(),v.end());
    v.erase(unique(v.begin(),v.end()),v.end());
    build(rt[0],1,n);
    for(int i=1;i<=n;i++){
        update(1,n,rt[i],rt[i-1],getid(pa[i]));
    }
    scanf("%d",&q);
    int last=0;
    while(q--){
        int l,r,k;
        scanf("%d%d",&l,&r);
        l=((l+last)%n+1);
        r=((r+last)%n+1);
        if(l>r)swap(l,r);
        k=upper_bound(v.begin(),v.end(),l-1)-v.begin();
        last=query(1,n,rt[l-1],rt[r],k);
        printf("%d\n",last);
    }
    return 0;
}
