#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

template<typename T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
#define pi pair<ll,ll>
#define __   ios_base::sync_with_stdio(0);cin.tie();cout.tie();
#define mod 1000000007
#define base 1949313259

ll Set(ll N,ll pos){ return N=N | (1LL<<pos); }
ll reset(ll N,ll pos){ return N= N & ~(1LL<<pos); }
bool check(ll N,ll pos){ return (bool)(N & (1LL<<pos)); }


ll ar[]={0,0,1,-1};
ll br[]={1,-1,0,0};

string s,s1,s2;
ll n,m;
pi arr[500010];
ll brr[500010];
vector<ll>v,v1;

map<ll,ll>mp;
ll vis[500005];

priority_queue<ll>q;
ll carry;
ll fnc(ll pos,ll index)
{
    while(pos<n && arr[pos].first==index){
        q.push(arr[pos].second);
        carry+=arr[pos].second;
        pos++;
    }
    return pos;
}

int main()
{__
        ll i,j,a,b,c,d,e,f,g,x,y,z,t,k,l;

        ll ans=0;

        cin>>n;

        for(i=0;i<n;i++){
            cin>>arr[i].first;
        }

        for(i=0;i<n;i++){
            cin>>arr[i].second;
        }

        sort(arr,arr+n);
        ll index;
        for(i=0;i<n;){
            if(q.empty()) index=arr[i].first;
            i=fnc(i,index);

            //cout<<i<<" "<<carry<<" "<<index<<endl;

                carry-=q.top();
                ans+=carry;
                index++;
                q.pop();
           // cout<<ans<<endl;
        }
        while(!q.empty()){

                carry-=q.top();
                ans+=carry;
                index++;
                q.pop();
        }
        cout<<ans<<endl;
}

