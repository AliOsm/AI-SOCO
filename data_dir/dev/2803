#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
// #define int ll
// #define endl '\n';
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define floop(i,a,b) for(int i=a;i<=b;++i)
const ll mod=1e9+7;
const int maxn=2e5+5;
int a[maxn],c[maxn],indexx[maxn];
int rem;
vector<vector<int> >ans;
int32_t main(){
	IOS;	
	int n,k;
	cin>>n>>k;
	rem=n;
	for (int i = 0; i < n; ++i)
	{
		int x;
		cin>>x;
		a[x]++;
	}
	set<int>s;
	floop(i,1,k) {
		s.insert(i),cin>>c[i];
		indexx[c[i]] = i;
	}
	for(int i=c[1];i>=0;--i){
		if(indexx[i]==0) indexx[i] = indexx[i+1];
	}
	while(rem>0){
		// cout<<rem<<" rem "<<endl;
		vector<int> v;
		vector<int>removals;
		int id=*(s.rbegin());
		while(id>=1){
			// cout<<id<<endl;
			int val = min(c[id] - (int)v.size(), a[id]);
			a[id] -= val;
			if(a[id]==0) removals.emplace_back(id); 
			for (int i = 0; i < val; ++i)
			{
				v.emplace_back(id);
			}
			int temp = indexx[(int)v.size()+1];
			// cout<<id<<" "<<temp<<endl;
			if(temp ==0 ) break;
			auto it=s.upper_bound(min(temp,id-1));
			if(it==s.begin()) break;
			it--;
			id = *it;
		}
		for(const auto &it:removals){
			s.erase(it);
		}
		rem -= v.size();
		ans.emplace_back(v);
	}
	cout<<ans.size()<<endl;
	for(const auto &it:ans){
		cout<<it.size()<<" ";
		for(const auto &j:it){
			cout<<j<<" ";
		}
		cout<<endl;
	}
	return 0;
}