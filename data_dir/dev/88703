#include <bits/stdc++.h>
     
using namespace std;
typedef long long ll;
typedef vector<ll> vl ;
     
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
  
const int MOD = 998244353;
const int N = 1000005;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e18;

ll n;
ll m;
vl adj[N];
ll w[N];
ll st;
bool vis[N];
int terja3[N];
vl v;
vl vv;
ll ans=0;
ll other=0;
bool cond=false;
void dfs(ll src, ll par){
  vis[src]=1;
  for(auto t: adj[src]){
    if(t==par)continue;
    if(vis[t])terja3[src]=1;
    else{
      dfs(t,src);
      terja3[src]=max(terja3[src],terja3[t]);
    }
  }
}

void dfs1(ll src,ll sum){
  vis[src]=1;
  if(terja3[src]==0){
    sum+=w[src];
  }
  other=max(other,sum);
  if(src==st && terja3[src]==0){
  cond=true;
  return;}
  for(auto t: adj[src]){
    if(vis[t])continue;
    dfs1(t,sum);
  }
}

void dfs3(ll src, ll sum){
  vis[src]=1;
  sum+=w[src];
  ans=max(ans,sum);
  for(auto t: adj[src]){
    if(vis[t])continue;
      dfs3(t,sum);
  }
}


int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    cin >> n;
    cin >> m;
    for(int i=0;i<n;i++){
      cin >> w[i];
    }
    for(int i=0;i<m;i++){
      ll x,y;
      cin >> x >> y;
      x--;y--;
      adj[x].pb(y);
      adj[y].pb(x);
    }
    cin >> st;
    st--;
    dfs(st,-1);
    memset(vis,0,sizeof(vis));
    for(int i=0;i<n;i++){
      vis[i]=terja3[i];
    }
    ll res=0;
    for(int i=0;i<n;i++){
      if(terja3[i]){
        //cout << i << endl;
        vv.clear();
        cond=false;
        other=0;
        dfs1(i,0);
        if(cond==false)
          v.pb(other);
        else res+=other;
      }
    }
    sort(all(v));
    reverse(all(v));
    memset(vis,0,sizeof(vis));
    dfs3(st,0);
    for(int i=0;i<min(1,v.size());i++){
      res+=v[i];
      //cout << v[i] << endl;
    }
    for(int i=0;i<n;i++){
      if(terja3[i]){
        res+=w[i];
      }
    }
    cout << max(ans,res);
    

    return 0;
}