#include<bits/stdc++.h>

using namespace std;

#define LL long long
#define DD double
#define Pb push_back
#define Bp pop_back
#define Pf push_front
#define Fp pop_front
#define Ub upper_bound
#define Lb lower_bound
#define In insert
#define All(x) x.begin(), x.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define fast ios_base::sync_with_stdio(0);cin.tie(0)
#define X first
#define Y second
#define mx1 10
#define mx2 110
#define mx3 1010
#define mx4 10010
#define mx5 100010
#define mx6 1000010

typedef vector<int> Vl;
typedef vector<DD> Vd;
typedef vector<bool> Vb;
typedef vector<Vl> VVl;
typedef pair<int, int> Pll;
typedef pair<DD, DD> Pdd;
typedef vector<Pll> Vpl;
typedef vector<Pdd> Vpd;
typedef queue<int> Ql;
typedef stack<int> Sl;
typedef deque<int> Dl;

LL _set(LL N, LL pos) {return N = N | (1 << pos);}
LL _reset(LL N, LL pos) {return N = N & ~(1 << pos);}
bool _check(LL N, LL pos) {return (bool)(N & (1 << pos));}
bool _upper(char a) {return a >= 'A' && a <= 'Z';}
bool _lower(char a) {return a >= 'a' && a <= 'z';}
bool _digit(char a) {return a >= '0' && a <= '9';}

LL dx[] = {1, -1, 0, 0, -1, -1, 1, 1};
LL dy[] = {0, 0, 1, -1, -1, 1, -1, 1};

///**************************DONE****************************///

map<string, bool> mp;

void proc(string x)
{
    string s[10], a;

    s[0] = x;
    a = x;

    swap(a[0], a[2]);
    swap(a[1], a[4]);
    swap(a[0], a[1]);

    s[2] = a;
    a = x;

    swap(a[1], a[3]);
    swap(a[0], a[5]);
    swap(a[0], a[1]);

    s[4] = a;

    for(int i = 1; i < 6; i += 2){
        a = s[i - 1];

        swap(a[0], a[1]);
        swap(a[2], a[5]);
        swap(a[3], a[4]);

        s[i] = a;
    }

    for(int i = 0; i < 6; i++){

        a = s[i];
        mp[a] = true;
        for(int j = 0; j < 3; j++){

            char c = a[2];
            a.erase(2, 1);
            a.Pb(c);
            mp[a] = true;
        }
    }
}

int main()
{
    string s;
    cin >> s;

    sort(All(s));

    int ans = 0;
    do{
        if(!mp[s])
            ans++;

        proc(s);
    }while(next_permutation(All(s)));

    cout << ans;
    return 0;
}
