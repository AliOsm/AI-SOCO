#include <map>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

map <int, int> pos, rev;
int n, a[100010], b[100010], vis[100010], cnt = 0;
vector <int> adj[100010], res[100010];

void dfs(int v) {
    vis[v] = 1;
    res[cnt].push_back(v);
    for (int i = 0; i < adj[v].size(); i++) {
        int ch = adj[v][i];
        if (vis[ch]) continue;
        dfs(ch);
    }
}

signed main() {
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        pos[a[i]] = i;
        b[i] = a[i];
    }
    sort(b, b + n);
    for (int i = 0; i < n; i++) {
        rev[b[i]] = i;
    }
    for (int i = 0; i < n; i++) {
        adj[rev[a[i]]].push_back(i);
    }
    for (int i = 0; i < n; i++) {
        if (vis[i]) continue;
        dfs(i);
        cnt += 1;
    }
    cout << cnt << endl;
    for (int i = 0; i < cnt; i++) {
        cout << res[i].size() << " ";
        for (int j = 0; j < res[i].size(); j++) {
            cout << res[i][j] + 1 << " ";
        } cout << endl;
    }
    return 0;
}
