#include <algorithm>
#include <iostream>
#include <cstdio>
#define N 100200

int n, v;
std::pair<int, int> p[2][N];
int sz[2];
int ans, r;

bool comp(std::pair<int, int> a, std::pair<int, int> b) {
    return a.first > b.first;
}

int main() {
    scanf("%d%d", &n, &v);
    for (int t, a, i = 0; i < n; ++i) {
        scanf("%d%d", &t, &a);
        p[t - 1][++sz[t - 1]].first = a;
        p[t - 1][sz[t - 1]].second = i + 1;
    }
    v = std::min(v, sz[0] + 2 * sz[1]);
    for (int t = 0; t < 2; ++t) {
        std::sort(p[t] + 1, 1 + p[t] + sz[t], comp);
        for (int i = 1; i <= sz[t]; ++i) {
            p[t][i].first += p[t][i - 1].first;
        }
    }
    for (int i = 0; i <= sz[0] && i <= v; ++i) {
        int j = std::min(sz[1], (v - i) / 2);
        int exp = p[0][i].first + p[1][j].first;
        if (ans < exp) {
            r = i;
            ans = exp;
        }
    }
    printf("%d\n", ans);
    for (int i = 1; i <= r; ++i) {
        printf("%d ", p[0][i].second);
    }
    r = (v - r) / 2;
    for (int i = 1; i <= r; ++i) {
        printf("%d ", p[1][i].second);
    }
    return 0;
}