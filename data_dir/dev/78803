#include<bits/stdc++.h>

using namespace std;
const int MAXN = 1000100;

vector<pair<int,int>> peso[MAXN] ,grafo[MAXN];

map<pair<int,int>,int> mapa;

int pai[MAXN];
int r[100100];

int low[100100],disc[100100];
bool vis[MAXN];
int tempo = 0;

void tarjan(int x,int p){
	
	vis[x] = true;
	low[x] = disc[x] = ++tempo;
	
	for(int i = 0;i < grafo[x].size();i++){
		pair<int,int> at = grafo[x][i];
		if(at.second == p) continue;
		
		if(vis[at.first] == false){
			tarjan(at.first,at.second);
			low[x] = min(low[x],low[at.first]);
			if(low[at.first] > disc[x]) r[at.second] = 1;
		}	
		else{
			low[x] = min(low[x],disc[at.first]);
		}
	}
}

int find(int x){
	if(pai[x] == x) return x;
	return pai[x] = find(pai[x]);
}

void join(int a,int b){
	pai[find(a)] = find(b);
}

int main(){
	memset(r,0,sizeof r);
	
	int n,m;
	cin >> n >> m;
	
	for(int i = 1;i <= n;i++) pai[i] = i;
	
	for(int i = 1;i <= m;i++){
		int x,y,w;
		cin >> x >> y >> w;
		peso[w].push_back({x,y});
		mapa[{x,y}] = mapa[{y,x}] = i;
	}
	
	for(int i = 1;i <= 1000000;i++){
		//cout << "| " << i << endl;
		for(int j = 0;j < peso[i].size();j++){
			pair<int,int> at = peso[i][j];
			int a = find(at.first) , b = find(at.second);
			vis[a] = false , vis[b] = false;
			int agr = mapa[{at.first,at.second}];
			
			grafo[a].push_back({b,agr}) , grafo[b].push_back({a,agr});
			
		}
		
		tempo = 0;
		
		for(int j = 0;j < peso[i].size();j++){
			pair<int,int> at = peso[i][j];
			int a = find(at.first) , b = find(at.second);

			if(a == b) r[mapa[{at.first,at.second}]] = 2;
			else if(vis[a] == false) tarjan(a,1000000); 
		}
		for(int j = 0;j < peso[i].size();j++){
			pair<int,int> at = peso[i][j];
			int a = find(at.first) , b = find(at.second);
			
			grafo[a].clear() , grafo[b].clear();
			join(a,b); 
		}
	}
	
	for(int i = 1;i <= m;i++){
		if(r[i] == 0) cout << "at least one" << endl;
		if(r[i] == 1) cout << "any" << endl;
		if(r[i] == 2) cout << "none" << endl;
	}
}
