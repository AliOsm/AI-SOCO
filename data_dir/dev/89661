#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <iomanip>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cassert>
#include <limits.h>


#define rep(i,n) for(int i=0;i<n;i++)
#define ll long long int
#define f first
#define s second
#define pi pair<ll,ll>
#define pii pair<pi,ll>

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define fr freopen("source.txt","r",stdin),freopen("output.txt","w",stdout)

#define sl(x) scanf("%lld",&x)
using namespace std;
ll a[200011];
int b[200011];

int main() {

	ll n,t,k;
	cin >> n >> t >> k;

	for(int i=1;i<=t;i++) cin >> a[i];
	
	vector<int>p;
	
	ll minleafs = 0;
	ll maxleafs = 0;
	for(int i=2;i<=t;i++) {
		minleafs+=max(0LL,a[i-1]-a[i]);
		maxleafs += a[i]-1;
	}	
	minleafs+=a[t];
	maxleafs+=a[1]-1;

	if(minleafs>k) {
		cout << -1;
		return 0;
	}
	k-=minleafs;	
	vector<int> P;
	P.pb(1);
	vector<pi>E;
	


	for(int i=1;i<=t;i++) {
		int h = E.size();
		
		int p1 = 0;
		int p2 = P.back()+1;
		
		vector<int>new_P;
		
		rep(kk,a[i]) {
			E.pb(mp(P[p1],p2));
			new_P.pb(p2);

			p1++;
			p2++;
			p1%=P.size();
		}
		if(P.size() > 1) {
			int m = min(min((ll)P.size()-1,k),a[i]-1);
			k-=m;
			for(int j=h;j<E.size();j++) {
				if(E[j].f >= P[1] and E[j].f <= P[m]) {
					E[j].f = P[0];
				}
			}
		}
		P = new_P;
	}
	if(k>0){
		cout << -1;
		return 0;
	}
	cout << n << "\n";
	rep(i,E.size()) {
		cout << E[i].f << " "<< E[i].s << "\n";
	}
}