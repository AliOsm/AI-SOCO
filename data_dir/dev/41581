#include <functional>
#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <stdio.h>
#include <cstring>
#include <cassert>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

using namespace std;

typedef long long ll;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxN = (int)1e5 + 10;
const int maxP = (int)3e5 + 10;
const int maxL = 20;
const int INF = (int)1e9;
const int mod = (int)1e9 + 7;
const ll LLINF = (ll)1e18;

int main() {

   // freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);


    string s;
    cin >> s;
    int n = s.length();
    int m;
    cin >> m;
    for (int i = 0; i < m; ++i) {
        string x = "";
        int l, r, k;
        cin >> l >> r >> k;
        --l; --r;
        k %= (r - l + 1);

        int ptr = r - k + 1;
        for (int j = 0; j < l; ++j) x += s[j];
        for (int j = ptr; j <= r; ++j) x += s[j];
        for (int j = l; j < ptr; ++j) x += s[j];
        for (int j = r + 1; j < n; ++j) x += s[j];
        assert(x.length() == n);
        s = x;
    }

    cout << s << '\n';
    return 0;
}
