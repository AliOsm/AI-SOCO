#include <bits/stdc++.h>

#pragma GCC optimize("Ofast")
#pragma GCC optimize("fast-math")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("no-stack-protector")
#pragma optimize("SEX_ON_THE_BEACH")

using namespace std;

//#define tree_prdered
#ifdef tree_prdered
    #include <ext/pb_ds/assoc_container.hpp>
    using namespace __gnu_pbds;
    using ordered_set = tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>;
#endif // tree_prdered

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

#ifdef HOME
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_p(x) cout << #x << " " << x.ff << " " << x.ss << endl;
    #define debug_v(x) cout << #x << " : "; for (auto i : x) cout << i << " "; cout << endl;
    #define debug_vp(x) cout << #x << " : "; for (auto i : x) cout << '[' << i.ff << " " << i.ss << ']'; cout << endl;
    #define PO cout << "POMELO" << endl;
    #define OL cout << "OLIVA" << endl;
#endif // HOME
#ifndef HOME
    #define debug(x) 0;
    #define debug_p(x) 0;
    #define debug_v(x) 0;
    #define debug_vp(x) 0;
    #define OL 0;
    #define PO 0;
#endif // HOME


int main()
{
    ios_base::sync_with_stdio(0);
    cout.tie(0);
    cin.tie(0);

    int n, m, k;
    cin >>n >> m >> k;
    vector<int> p(n), mo(m, -1), s(n);
    for (int i = 0; i < n; ++i)
    {
        cin >> p[i];
    }
    for (int i = 0; i < n; ++i)
    {
        cin >> s[i];
        --s[i];
        if(mo[s[i]] == -1)
            mo[s[i]] = i;
        else if (p[mo[s[i]]] < p[i])
            mo[s[i]] = i;
    }
    int cnt = 0;
    for (int i = 0; i < k; ++i)
    {
        int x;
        cin >> x;
        --x;
        ++cnt;
        if (mo[s[x]] == x)
            --cnt;
    }
    cout << cnt;
    return 0;
}
