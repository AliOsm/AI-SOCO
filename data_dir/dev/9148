#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

int m=1e9+7,f[2000005],inv[2000005],coeff[1000005];

int mul(int a,int b)
{
	ll r=a;
	r*=(ll)b;
	if(r>=m)r%=m;
	return r;
}

int add(int a,int b)
{
	a+=b;
	a%=m;
	if(a<0)a+=m;
	return a;
}

int p(int a,int b)
{
	ll r=1;
	while(b)
	{
		if(b&1)
		r=mul(r,a);
		a=mul(a,a);
		b/=2;
	}
	return r;
}

int ncr(int n,int r)
{
	if(r>n||r<0)
	return 0;
	int k=mul(inv[r],inv[n-r]);
	k=mul(f[n],k);
	return k;
}

int c[205][205];

int main()
{ios_base::sync_with_stdio(false);
int a,b,k,t;
cin>>a>>b>>k>>t;
f[0]=1;
rep(i,1,605004)
f[i]=mul(f[i-1],i);
inv[605004]=p(f[605004],m-2);
ren(i,605003,0)
inv[i]=mul(inv[i+1],(i+1));

for (int n=0; n<=204; ++n) 
{
	c[n][0] = c[n][n] = 1;
	for (int l=1; l<n; ++l)
		c[n][l] = add(c[n-1][l-1] , c[n-1][l]);
}


int lo=2*k*t+(b-a)+1,hi=6*k*t,itr=0;

rep(i,0,6*k*t)
{
	int cool=ncr(i+2*t-1,i);
	int lo1=(lo-1-i)/(2*k+1);
	lo1=max(0,lo1);
	rep(j,lo1,2*t)
	{
		if(i+j*(2*k+1)>6*k*t)
		break;
		int cc=c[2*t][j];
		if(j%2==1)
		{
			cc=-1*cc;
			cc+=m;
		}
		cc=mul(cc,cool);
		coeff[i+j*(2*k+1)]=add(coeff[i+j*(2*k+1)],cc);
	}
}


int ans=0;
rep(i,lo,hi)
{ans=add(ans,coeff[i]);}//o2(i,coeff[i]);on;}
ol(ans);
return 0;
}

