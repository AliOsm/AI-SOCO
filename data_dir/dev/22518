#include<bits/stdc++.h>
using namespace std;
 
#define pb push_back
#define ll long long
#define maxn 1000005
#define fr(i,j,k) for(int i=j;i<k;i++)
#define f(n) fr(i,0,n)
#define f1(n) fr(i,1,n+1)
#define ms(i) memset(i,0,sizeof(i));
#define ms1(i) memset(i,-1,sizeof(i));
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define pii pair<int,int>
const int mod = 1e9 + 7;
int cnt[500005];
vector<int>fac[200005];
int ex[500005];
int tot;
ll ans;
void update(vector<int>x, int d) {
    for (int i = 1 ; i < (1<<x.size()) ; i++) {
        int mul = 1;
        for (int j = 0 ; j < x.size() ; j++) {
            if (i & (1<<j)) {
                mul *= x[j];
            }
        }
        cnt[mul] += d;
    }
}
vector<int>fact(int x) {
    vector<int>ret;
    for (int i = 2 ; i <= sqrt(x) ; i++) {
        if (x % i)continue;
        ret.pb(i);
        while (x % i == 0) x /= i;
    }
    if (x > 1) {
        ret.pb(x);
    }
    return ret;
}
void ins(int x) {
    int k = tot;
    for (int i = 1 ; i < (1<<fac[x].size()) ; i++) {
        int mul = 1;
        for (int j = 0 ; j < (int)fac[x].size() ; j++) {
            if (i & (1<<j)) {
                mul *= fac[x][j];
            }
        }
        if (__builtin_popcount(i) & 1) {
            k -= cnt[mul];
        }
        else {
            k += cnt[mul];
        }
    }
    ans += k;
    update(fac[x], 1);
    tot++;
}
void era(int x) {
    update(fac[x], -1);
    tot--;
    int k = tot;
    for (int i = 1 ; i < (1<<fac[x].size()) ; i++) {
        int mul = 1;
        for (int j = 0 ; j < fac[x].size() ; j++) {
            if (i & (1<<j)) {
                mul *= fac[x][j];
            }
        }
        if (__builtin_popcount(i) & 1) {
            k -= cnt[mul];
        }
        else {
            k += cnt[mul];
        }
    }
    ans -= k;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n, m;
    cin >> n >> m;
    f1(n) {
        int x;
        cin >> x;
        fac[i] = fact(x);
    }
    f (m) {
        int x;
        cin >> x;
        if (!ex[x]) {
            ins(x);
        }
        else {
            era(x);
        }
        ex[x] ^= 1;
        cout << ans << '\n';
    }
}