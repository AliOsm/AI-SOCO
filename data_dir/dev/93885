#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <fstream>
#include <algorithm>
#include <cmath>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <iomanip>
#include <deque>
#include <list>
#include <cassert>
#include <complex>
#include <bitset>


using namespace std;
typedef long long ll;
#define int ll
typedef long double ld;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pdd;
#define mmin(a, b) a = min(a, (b))
#define ALL(a) a.begin(),a.end()
#define SZ(a) ((int)(a).size())
#define watch(x) cout << (#x) << " = " << (x) << endl;



signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);

	int n, m;
	cin >> n >> m;
	vector <string> v(n);
	for (int i = 0; i < n; i++)
	{
		cin >> v[i];
	}
	string b;
	vector <bool> used(n);
	for (int i = 0; i < m; i++)
	{
		int a;
		cin >> a;
		a--;
		used[a] = true;
		if (!i)
		{
			b = v[a];
		}
		else
		{
			if (v[a].size() != b.size())
			{
				cout << "No";
				return 0;
			}
			for (int j = 0; j < b.size(); j++)
			{
				if (b[j] != v[a][j])
					b[j] = '?';
			}
		}
	}

	for (int i = 0; i < n; i++)
	{
		if (!used[i])
		{
			if (b.size() != v[i].size())
			{
				continue;
			}
			bool fl = false;
			for (int j = 0; j < b.size(); j++)
			{
				if (v[i][j] == b[j] || b[j] == '?')
					;
				else
				{
					fl = true;
					break;
				}
			}
			if (!fl)
			{
				cout << "No";
				return 0;
			}
		}
	}


	cout << "Yes" << endl << b;



}