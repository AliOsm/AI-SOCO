//besmellah
#include <bits/stdc++.h>
using namespace std;

const int maxn = 5e5 + 5;
set <int> S;
int l[maxn], r[maxn], k = 0;
vector <int> adj[maxn];

void dfs(int v, int p = -1) {
	for (auto u: adj[v]) {
		if (u != p) {
			l[u] = *S.begin();
			S.erase(S.begin());
		}
	}
	for (int i = adj[v].size() - 1; i >= 0; i--) {
		int u = adj[v][i];
		if (u == p)
			continue;
		r[u] = k + adj[u].size();
		k = r[u];
		S.erase(r[u]);
		dfs(u, v);
	}
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int n;
	cin >> n;
	for (int i = 1; i <= 2 * n; i++)
		S.insert(i);
	for (int i = 0; i < n - 1; i++) {
		int v, u;
		cin >> v >> u;
		v--;
		u--;
		adj[v].push_back(u);
		adj[u].push_back(v);
	}
	l[0] = 1;
	r[0] = adj[0].size() + 2;
	k = r[0];
	S.erase(l[0]);
	S.erase(r[0]);
	dfs(0);
	for (int i = 0; i < n; i++) {
		cout << l[i] << ' ' << r[i] << '\n';
	}
}
