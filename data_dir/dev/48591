
#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
#include <bitset>
#include <complex>
#include <random>
#include <chrono>
#include <functional>
using namespace std;
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf INT_MAX
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pli pair<ll, int>
#define pil pair<int, ll>
#pragma GCC optimize ("O3")
//#define x first
//#define y second
const int mod = (1e9) + 7, mod2 = 998244353;
const long double eps = 1e-20;
const int siz = 1e5 + 5, siz2 = 3e5 + 5, lg = 20, block = 317, block2 = 1000, mxv = 5e5;

int n, q, arr[siz];
vector<int> dp[lg], unit[lg];

void prep() {
	dp[0] = vector<int>(n + 1);
	unit[0] = vector<int>(n + 1);
	for (int i = 1; i <= n; i++) {
		unit[0][i] = arr[i];
	}
	int p;
	for (int i = 1; (p = (1 << i)) <= n; i++) {
		dp[i] = vector<int>(n + 2 - p);
		unit[i] = vector<int>(n + 2 - p);
		for (int j = 1; j + p - 1 <= n; j++) {
			dp[i][j] = dp[i - 1][j] + dp[i - 1][j + p/2];
			unit[i][j] = unit[i - 1][j] + unit[i - 1][j + p / 2];
			if (unit[i][j] >= 10) {
				dp[i][j]++;
				unit[i][j] -= 10;
			}
		}
	}
}

int main()
{
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d", &arr[i]);
	}
	prep();
	scanf("%d", &q);
	while (q--) {
		int l, r;
		scanf("%d%d", &l, &r);
		int len = r - l + 1, p;
		for (int i = 0; ; i++) {
			if (len & (1 << i)) {
				p = i;
				break;
			}
		}
		printf("%d\n", dp[p][l]);
	}
	return 0;
}