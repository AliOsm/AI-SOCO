#include <bits\stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)

int n, q, an, F, dp[1000001];
pair<int, int> pa[1000001][20];
vector<int> tr[1000001];

void pl(int v = 1, int p = 0){
	dp[v] = dp[p] + 1;
	pa[v][0] = make_pair(p, v);
	int k = 1, z;
	while (k < 20 && (z = pa[v][k - 1].first))pa[v][k] = make_pair(pa[z][k - 1].first, min(pa[v][k - 1].second, pa[z][k - 1].second)), ++k;
	f(i, 0, tr[v].size())if (tr[v][i] != p)pl(tr[v][i], v);
}

int lca(int a, int b){
	if (dp[a] < dp[b])swap(a, b);
	int d = dp[a] - dp[b], m = n, k = 0;
	while (d){
		if (d & 1)m = min(m, pa[a][k].second), a = pa[a][k].first;
		d >>= 1;
		++k;
	}
	if (a == b)return min(m, a);
	for (int i = 19; i >= 0; --i)if (pa[a][i].first != pa[b][i].first)m = min(m, min(pa[a][i].second, pa[b][i].second)), a = pa[a][i].first, b = pa[b][i].first;
	return min(m, min(pa[a][1].second, pa[b][0].second));
}

int main(){
	scanf("%d%d", &n, &q);
	f(i, 1, n){
		int a, b;
		scanf("%d%d", &a, &b);
		tr[a].push_back(b);
		tr[b].push_back(a);
	}
	pl();
	scanf("%*d%d", &F);
	F = F % n + 1;
	an = F;
	int la = 0;
	--q;
	while (q--){
		int o, v;
		scanf("%d%d", &o, &v);
		v = (v + la) % n + 1;
		int a = lca(v, F);
		if (o == 1)an = min(an, a);
		else {
			a = min(a, an);
			printf("%d\n", a);
			la = a;
		}
	}
}