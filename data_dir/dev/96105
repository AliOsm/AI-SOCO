#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <cmath>
#include <algorithm>
#include <assert.h>
#include <memory.h>
#include <string.h>
#include <complex>
#include <queue>
#include <cstdlib>
#include <ctime>
using namespace std;

#define ll long long
#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()

char tmpstr[300300];

int main() {
	//freopen("input.txt", "rt", stdin);
	//freopen("output.txt", "wt", stdout);
	
	gets(tmpstr);
	string s(tmpstr);
	gets(tmpstr);
	string t(tmpstr);
	int n = sz(s);

	vector<char> v1;
	vector<char> v2;

	sort(s.begin(), s.end());
	sort(t.rbegin(), t.rend());

	for(int i = 0; i < (sz(s) + 1) / 2; i++) v1.pb(s[i]);
	for(int i = 0; i < sz(s) / 2; i++) v2.pb(t[i]);
	
	reverse(v1.begin(), v1.end());
	reverse(v2.begin(), v2.end());

	string res;
	for(int i = 0; i < n; i++) res += '?';

	int p1 = 0, p2 = 0;

	for(int i = 0; i < n; i++) {
		if (i % 2 == 0) { // Oleg
			if (i == n - 1) {
				res[i] = v1.back();
				v1.pop_back();
				break;
			}
			if (v1.back() >= v2.back()) {
				bool first = true;
				int p1 = 0, p2 = 0;
				for(int j = n - 1; j >= i; j--) {
					if (first) {
						res[j] = v1[p1];
						p1++;
					}
					else {
						res[j] = v2[p2];
						p2++;
					}
					first = !first;
				}
				break;
			}
			res[i] = v1.back();
			v1.pop_back();
		}
		else {
			if (i == n - 1) {
				res[i] = v2.back();
				v2.pop_back();
				break;
			}
			if (v2.back() <= v1.back()) {
				bool first = false;
				int p1 = 0, p2 = 0;
				for(int j = n - 1; j >= i; j--) {
					if (first) {
						res[j] = v1[p1];
						p1++;
					}
					else {
						res[j] = v2[p2];
						p2++;
					}
					first = !first;
				}
				break;
			}
			res[i] = v2.back();
			v2.pop_back();
		}
	}
	puts(res.c_str());
	return 0;
}