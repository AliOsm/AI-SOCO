#pragma GCC target("avx2")
#pragma GCC optimization("O3")
#pragma GCC optimization("unroll-loops")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=2e6+50;
const int mod=1e9+7;
using namespace std;
int n,m,i,a[nmax],j,t;
ll x,y,f[nmax],nr[30][30];
char c;
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>n>>m;
	for(i=1;i<=n;i++)
	{
		cin>>c;
		a[i]=c-'a';
	}
	for(i=2;i<=n;i++)
	{
		if(a[i-1]<=a[i])nr[a[i-1]][a[i]]++;
		else nr[a[i]][a[i-1]]++;
	}
	for(i=0;i<m;i++)for(j=0;j<i;j++)nr[i][j]=nr[j][i];
	for(i=1;i<(1<<m);i++)f[i]=llinf;
	for(i=0;i<(1<<m);i++)
	{
		y=__builtin_popcount(i);
		for(j=0;j<m;j++)
		{
			if(i&(1<<j))continue;
			x=f[i];
			for(t=0;t<m;t++)
			{
				if(j==t)continue;
				if(i&(1<<t))
				{
					x+=nr[j][t]*y;
				}
				else
				{
					x-=nr[j][t]*y;
				}
			}
			f[i|(1<<j)]=min(f[i|(1<<j)],x);
		}
	}
	cout<<f[(1<<m)-1]<<endl;
	return 0;
}
