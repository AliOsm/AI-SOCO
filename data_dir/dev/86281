#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()

using namespace std;

const int mod = 1000 * 1000 * 1000 + 7;
const int N = 1000 * 1000 + 10;

vector<int> adj[N], par;
int n, k;
int dp[N], cnt[N], h[N], mn[N];

void dfs(int u)
{
	if(!size(adj[u]))
	{
		mn[u] = h[u];
		return;
	}
	
	mn[u] = N;

	for(auto v : adj[u])
	{
		h[v] = h[u] + 1;
		dfs(v);
		mn[u] = min(mn[u], mn[v]);
	}
}

void gfs(int u)
{
	dp[u] = h[u];
	par.PB(u);
	
	if(mn[u]<=k)
		mn[u] = 1;
	else
	{
		if(mn[u] - k < h[u] )
			mn[u] = mn[par[mn[u]-k]];
		else
			mn[u] = u;
	}
	
	if(!size(adj[u]))
		cnt[mn[u]]++;

	for(auto v : adj[u])
		gfs(v);
	par.pop_back();
}

int kfs(int u)
{
	int mx = 0;
	for(auto v : adj[u])
		mx = max(mx, kfs(v));
	return mx + cnt[u];
}

int32_t main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin>> n >> k;
	for(int i = 2; i <= n; i++)
	{
		int p;
		cin>> p;
		adj[p].PB(i);
	}
	dfs(1);
	gfs(1);
	cout<< kfs(1) << endl;
}
