#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

struct Time
{
     int hour;
     int min;
     int time;
};

Time times[110];
int n, s;

bool compareT(const Time &a, const Time &b)
{
     return a.time < b.time;
}

Time findPos()
{
     Time curPos;
     int dist;
     curPos.time = 0;
     dist = times[0].time - curPos.time;
     if (dist >= s + 1)
          return curPos;
     
     int p = 1;
     while (p < n)
     {
          dist = times[p].time - times[p - 1].time;
          if (dist >= (2 * s + 2))
          {
               curPos.time = times[p - 1].time + 1 + s;
               return curPos;
          }
          p++;
     }
     
     curPos.time = times[n - 1].time + 1 + s;
     return curPos;
}

int main()
{
     scanf("%d%d", &n, &s);
     
     for (int i = 0 ; i < n ; i++)
     {
          scanf("%d%d", &(times[i].hour), &(times[i].min));
          times[i].time = times[i].hour * 60 + times[i].min;
     }
     
     sort(times, times + n, compareT);
     
     Time curPos = findPos();
     
     curPos.hour = curPos.time / 60;
     curPos.min = curPos.time % 60;
     printf("%d %d\n", curPos.hour, curPos.min);

     return 0;
}
