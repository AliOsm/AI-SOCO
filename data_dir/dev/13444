#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
#define dbl(k, x) fixed << setprecision(k) << (x)

template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define _upgrade ios_base::sync_with_stdio(0);
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 2e5 + 7;

int n, k, G[N];
PII T[N];

int x[N], cnt = -1;

void add_edge(int a, int b)
{
    //cerr << a << " " << b << "\n";
    if(a <= b) return;
    x[a + 1]++;
    x[b + 1]--;
}

char ans[N];

int main()
{
    _upgrade
    
    cin >> n >> k;
    for(int i = 1; i <= n; i++)
    {
        cin >> T[i].first;
        T[i].second = i;  
    }    
    //sort(T + 1, T + n + 1);
    for(int i = 1; i <= n; i++)
    {
        G[T[i].first] = i;
    }

    int last = -1;
    for(int i = 1; i <= n; i++)
    {
        int xx; cin >> xx;
        if(i > 1)
        {
            add_edge(G[last], G[xx]);
        }
        last = xx;
    }

    for(int i = 1; i <= n; i++)
    {
        x[i] += x[i - 1];
        if(x[i] == 0)
        {
            if(cnt + 1 < 26)
                cnt++;
        }
        ans[T[i].first] = cnt + 'a';
    }
    cnt++;
    if(cnt >= k)
    {
        cout << "YES\n";
        for(int i = 1; i <= n; i++)
            cout << ans[i];
        cout << "\n";
    }
    else
    {
        cout << "NO\n";
    }
    

	return 0;
}