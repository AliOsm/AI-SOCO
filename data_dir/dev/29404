#include <set>
#include <map>
#include <list>
#include <cmath>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <fstream>
#include <ctime>
#include <deque>
#include <bitset>
#include <cctype>
#include <utility>
#include <cassert>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long ull;

#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)
#define Fit(i,v) for(__typeof((v).begin()) i = (v).begin(); i != (v).end(); ++i)
#define Fitd(i,v) for(__typeof((v).rbegin()) i = (v).rbegin(); i != (v).rend(); ++i)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(a) ((int)(a).size())
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))

template<class F, class T> T convert(F a, int p = -1) { stringstream ss; if (p >= 0) ss << fixed << setprecision(p); ss << a; T r; ss >> r; return r; }
template<class T> T gcd(T a, T b) { T r; while (b != 0) { r = a % b; a = b; b = r; } return a; }
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<class T> T sqr(T x) { return x * x; }
template<class T> T cube(T x) { return x * x * x; }
template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s); }
const int bfsz = 1 << 16; char bf[bfsz + 5]; int rsz = 0;int ptr = 0;
char gc() { if (rsz <= 0) { ptr = 0; rsz = (int) fread(bf, 1, bfsz, stdin); if (rsz <= 0) return EOF; } --rsz; return bf[ptr++]; }
void ga(char &c) { c = EOF; while (!isalpha(c)) c = gc(); }
int gs(char s[]) { int l = 0; char c = gc(); while (isspace(c)) c = gc(); while (c != EOF && !isspace(c)) { s[l++] = c; c = gc(); } s[l] = '\0'; return l; }
template<class T> bool gi(T &v) {
    v = 0; char c = gc(); while (c != EOF && c != '-' && !isdigit(c)) c = gc(); if (c == EOF) return false; bool neg = c == '-'; if (neg) c = gc();
    while (isdigit(c)) { v = v * 10 + c - '0'; c = gc(); } if (neg) v = -v; return true;
}
typedef pair<int, int> II;
const ld PI = acos(-1.0);
const ld eps = 1e-9;
const int dr[] = { -1, 0, +1, 0};
const int dc[] = { 0, +1, 0, -1};
const int inf = (int) 1e9 + 5;
const ll linf = (ll) 1e16 + 5;

#define maxn 1000005

int f[maxn];
int d[maxn], r[50];

int main(){
//  freopen("in.txt", "r", stdin);
//  freopen("code.in", "r", stdin);
//  freopen("code.out", "w", stdout);
/*
    f[0] = 0;

    ll T = (1 << 29) - 1;
    Rep(i, 29){
        d[i] = T;
        for(int j = i; j < 29; j += i + 1){
            d[i] = offbit(d[i], j);
        }
    }

    For(mask, 1, (1 << 29) - 1){
        ms(r, 0);
        Rep(i, 29) if(getbit(mask, i)){
            r[f[mask & d[i]]] = 1;
        }

        for(int i = 0;;i++){
            if(!r[i]){
                f[mask] = i;
                break;
            }
        }
        if(mask % 1000000 == 0) cout << clock() << endl;
//      cout << mask << endl;
    }

    For(i, 1, 29){
        cout << "f[" << i << "] = " << (int)f[(1 << i) - 1] << ";" << endl;
    }

*/
    f[1] = 1;
    f[2] = 2;
    f[3] = 1;
    f[4] = 4;
    f[5] = 3;
    f[6] = 2;
    f[7] = 1;
    f[8] = 5;
    f[9] = 6;
    f[10] = 2;
    f[11] = 1;
    f[12] = 8;
    f[13] = 7;
    f[14] = 5;
    f[15] = 9;
    f[16] = 8;
    f[17] = 7;
    f[18] = 3;
    f[19] = 4;
    f[20] = 7;
    f[21] = 4;
    f[22] = 2;
    f[23] = 1;
    f[24] = 10;
    f[25] = 9;
    f[26] = 3;
    f[27] = 6;
    f[28] = 11;
    f[29] = 12;
    int n;
    cin >> n;
    ms(d, 0);
    int i;
    set<int> S;
    int XO = 0;
    for(i = 2; i * i <= n; i++) if(!d[i]){
        ll u = i, num = 0;
        while(u <= n){
            num++;
            if(u * u <= n)
                d[u] = 1;
            S.insert(u);
            u *= i;
        }
        XO ^= f[num];
    }
    XO ^= ((n - sz(S)) & 1);
    if(!XO){
        cout << "Petya";
    }
    else cout << "Vasya";

    return 0;

}
