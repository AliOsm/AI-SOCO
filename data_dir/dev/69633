/*****Enigma27*****/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pll         pair<ll int,ll int>
#define vll          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define x           first
#define y           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define gcd(a,b)    __gcd((a),(b))
#define lcm(a,b)    ((a)*(b)) / gcd((a),(b))
#define ios	    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
ll n,i,j,k,l,sum=0,flag=0,t,a[200005],b[200005],c[200005],ans=0,q,tim=0;
vll v[200004],vv;
void dfs(int node, int p){
    vv.pb(node);
    a[node] =tim++;
    b[node]++;
    for(auto j:v[node]){
        if(j!=p){
            dfs(j,node);
            b[node]+=b[j];
        }
    }
}
int main()
{
	ios
	cin>>n>>q;
	for(int i=2;i<=n;i++){
        cin>>j;
        v[j].pb(i);
        v[i].pb(j);
	}
	for(int i=1;i<=n;i++)sort(all(v[i]));
	dfs(1,0);
	while(q--){
        int node , k;
        cin>>node>>k;
        if(b[node]<k){
            cout<<-1<<endl;
        }
        else{
            cout<<vv[a[node]+k-1]<<endl;
        }

	}
    return 0;
}
