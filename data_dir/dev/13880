#include <bits/stdc++.h>
#include <ctime>
using namespace std;

#define space ' '
#define enter "\n"
#define fi first
#define se second
#define INF 2000000007
#define mp make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef set <int> si;
typedef map <int, int> mii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;
typedef vector <pii> vii;

template <typename T>
T sqr (T x)
{
    return x * x;
}

template <typename T>
T gcd (T a, T b)
{
    return b ? gcd(b, a % b) : a;
}

template <class T>
bool chmin (T &x, const T &y)
{
    if (y < x)
    {
        x = y;
        return true;
    }
    return false;
}

template <class T>
bool chmax (T &x, const T &y)
{
    if (x < y)
    {
        x = y;
        return true;
    }
    return false;
}


template <class P, class Q>
ostream & operator << (ostream &os, const pair <P, Q> &p)
{
    return os << '(' << p.fi << ", " << p.se << ')';
}


template <class T>
ostream & operator << (ostream &os, const vector <T> &v)
{
    os << '{';
    bool was = false;
    for (const T & x : v)
    {
        if (was)
            os << ", ";
        was = true;
        os << x;
    }
    os << '}';
    return os;
}

template <class T>
ostream & operator << (ostream &os, const set <T> &v)
{
    os << '[';
    bool was = false;
    for (const T & x : v)
    {
        if (was)
            os << ", ";
        was = true;
        os << x;
    }
    os << ']';
    return os;
}

template <class P, class Q>
ostream & operator << (ostream &os, const map <P, Q> &m)
{
    os << '<';
    bool was = false;
    for (const auto &x : m)
    {
        if (was)
            os << ", ";
        was = true;
        os << x;
    }
    os << '>';
    return os;
}

const int MAXN = (int)11111;

int dp[MAXN][3];
int a[MAXN];
int n;

int main ()
{
    //freopen("", "r", stdin); freopen("", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin >> n;
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    for (int i = 1; i <= n; i++)
    {
        dp[i][0] = max(dp[i - 1][0], max(dp[i - 1][1], dp[i - 1][2]));
        if (a[i] == 1 || a[i] == 3)
            dp[i][1] = max(dp[i - 1][0], dp[i - 1][2]) + 1;
        if (a[i] == 2 || a[i] == 3)
            dp[i][2] = max(dp[i - 1][0], dp[i - 1][1]) + 1;
    }
    cout << n - max(dp[n][0], max(dp[n][1], dp[n][2]));
}
