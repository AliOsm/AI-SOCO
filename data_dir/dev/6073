//ITNOG
#include <bits/stdc++.h>
 
using namespace std;
#define double long double

const int maxN = 5000 + 2;
const int maxL = 17 + 2;
const int mod = 1000*1000*1000 + 7;
vector< pair< pair<double, int>, pair<int, int> > > ed;
int par[maxN];
int n, m, k;

int get_par(int v)
{
    return (par[v] == -1 ? v : par[v] = get_par(par[v]));
}

bool merge(int v, int u)
{
    v = get_par(v); u = get_par(u);
    if(v == u) return false;
    par[v] = u;
    return true;
}


int check(double t)
{
    for(int i = 0; i < m; i ++)
	  if(ed[i].second.first == 0) ed[i].first.first += t;
    
    sort(ed.begin(), ed.end());

    memset(par, -1, sizeof par);
    int cnt = 0;
    for(int i = 0; i < m; i ++)
    {
	  if(merge(ed[i].second.first, ed[i].second.second) && ed[i].second.first == 0) cnt ++;
	  if(ed[i].second.first == 0) ed[i].first.first -= t;
    }
    return cnt;
}

bool checkA(double t)
{
    for(int i = 0; i < m; i ++)
	  if(ed[i].second.first == 0) ed[i].first.first += t;
    
    sort(ed.begin(), ed.end());
    
    memset(par, -1, sizeof par);
    int cnt = 0, te = 0;
    for(int i = 0; i < m; i ++)
    {
	  if(cnt == k && ed[i].second.first == 0) { ed[i].first.first -= t; continue; }
	  if(merge(ed[i].second.first, ed[i].second.second))
	  {
		te ++;
		if(ed[i].second.first == 0) cnt ++;
	  }
	  if(ed[i].second.first == 0) ed[i].first.first -= t;
    }
    if(te < n - 1) return false;
    if(cnt < k) return false;
    return true;
}

void print(double t)
{
    for(int i = 0; i < m; i ++)
	  if(ed[i].second.first == 0) ed[i].first.first += t;
    
    sort(ed.begin(), ed.end());
    
    memset(par, -1, sizeof par);
    int cnt = 0;
    cout << n - 1 << endl;
    for(int i = 0; i < m; i ++)
    {
	  if(cnt == k && ed[i].second.first == 0) continue;
	  if(merge(ed[i].second.first, ed[i].second.second))
	  {
		if(ed[i].second.first == 0) cnt ++;
		cout << ed[i].first.second + 1 << ' ';
	  }
	  if(ed[i].second.first == 0) ed[i].first.first -= t;
    }
    cout << endl;
}

main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    cin >> n >> m >> k;

    for(int i = 0; i < m; i ++)
    {
	  int v, u, w; cin >> v >> u >> w; v --; u --;
	  if(v > u) swap(v, u);
	  ed.push_back(make_pair(make_pair(w, i), make_pair(v, u)));
    }
    
    double lo = -1000*1000, hi = 1000*1000;
    for(int z = 0; z < 300; z ++)
    {
	  double mid = (hi + lo) / 2;
	  if(check(mid) == k) { lo = mid; break; }
	  if(check(mid) > k) lo = mid;
	  else hi = mid;
    }

//    cout << check(lo + 1e-18) << endl;

    if(!checkA(lo)) {  cout << -1 << endl; return 0; }

    print(lo);
    return 0;
}
