#include <iostream>
#include <set>
#include <vector>
#include <algorithm>

using namespace std;

bool solve(const vector<int>& v) {
	long long sum = 0;
	for(size_t i = 0; i < v.size(); ++i) {
		sum += v[i];
	}
	set<long long > s;
	s.insert(v[0]);
	long long p = v[0];
	for(size_t i = 1; i < v.size(); ++i) {
		p += v[i];
		if (p * 2 == sum) {
			return true;
		}
		s.insert(v[i]);
		long long suffix = sum - p;
		long long needle = p - suffix;
		if (needle % 2 != 0) {
			continue;
		}
		needle /= 2;
		if (s.count(needle)) {
			return true;
		}
	}
	return false;
}

int main() {
	ios_base::sync_with_stdio(0);
	int n;
	cin >> n;
	vector<int> a(n);
	for (int i = 0; i < n; ++i) {
		cin >> a[i];
	}

	if (solve(a)) {
		cout << "YES" << endl;
		return 0;
	}
	reverse(a.begin(), a.end());
	if (solve(a)) {
		cout << "YES" << endl;
		return 0;
	}

	cout << "NO" << endl;
	return 0;
}
