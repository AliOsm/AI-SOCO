#include <bits/stdc++.h>
using namespace std;

const int N = 500;

int q, n, num;
vector<int> vec;

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> q;
	while(q--) {
		vec.clear();
		cin >> n;
		int ans = 0;
		for (int i = 0; i < n; i++) {
			cin >> num;
			ans = max(ans, num);
			vec.push_back(num);
		}
		sort(vec.begin(), vec.end());
		vec.resize(unique(vec.begin(), vec.end()) - vec.begin());
		n = vec.size();
		for (int i = n - 1; ~i; i--) {
			int num = vec[i];
			vector<int> help;
			for (int j = i - 1; ~j && help.size() < N; j--)
				if(num % vec[j]) {
					help.push_back(vec[j]);
					ans = max(ans, num + help.back());
				}
			
			// help : nozooli
			if(help.size()) {
				ans = max(ans, num + help.back());
				ans = max(ans, num + help[0]);
				reverse(help.begin(), help.end());
				for (int j = help.size() - 1; j; j--)
					for (int k = j - 1; k >= 0; k--)
						if(help[j] % help[k]) {
							ans = max(ans, num + help[j] + help[k]);
							break;
						}
			}
		}
		cout << ans << '\n';
	}
	return 0;
}
