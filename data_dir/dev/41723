#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define F first
#define S second
#define ll long long
#define FILE "halfnice"
#define ld long double
#define endl '\n'
#define pii pair <int, int>
//#define int long long

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

using namespace std;
using namespace __gnu_pbds;

typedef tree <pii,null_type,less<pii>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

const int N = 3e5 + 5;
const ll mod = 1e9 + 7;
const ll mod1 = 1e9 + 9;
const int rx[4] = {1, -1, 0, 0};
const int ry[4] = {0, 0, 1, -1};
const ld pi = acos(-1.0);
const ll kek = 227;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    srand(5816);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    //freopen(FILE".in", "r", stdin);
    //freopen(FILE".out", "w", stdout);
#endif // LOCAL
    int a, b;
    cin >> a >> b;
    vector <int> all;
    for (int i = 1; i * i <= a; i++){
         if (a % i == 0 && b % i == 0) all.pb(i);
         if (a % i == 0 && a / i != i && b % (a / i) == 0) all.pb(a / i);
    }
    sort(all.begin(), all.end());
    int q;
    cin >> q;
    while (q--){
        int l, r;
        cin >> l >> r;
        int le = 0, ri = all.size() - 1;
        int res = -1;
        while (le <= ri){
            int mid = (le + ri) >> 1;
            if (all[mid] <= r){
                res = all[mid];
                le = mid + 1;
            } else ri = mid - 1;
        }
        if (res >= l) cout << res;
        else cout << -1;
        cout << endl;
    }
    return 0;
}
