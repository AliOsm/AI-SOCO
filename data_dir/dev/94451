#include <bits/stdc++.h>

using namespace std ;

string s , t ;
int memo[201][201] ;

int dp(int i , int j )
{
    if(j == t.size())
    {
        return int(s.size() - i);
    }
    if(i == s.size())
        return -(1 << 30) ;

    if(memo[i][j] != -1)
        return memo[i][j] ;

    int &ans = memo[i][j]= -(1 << 30) ;
    for(int nxt = i ; nxt < s.size() ; nxt++)
        if(s[nxt] == t[j])
        {
            int curr = dp(nxt + 1, j + 1) ;
            if(curr != -(1 << 30))
                ans = max(ans , max(nxt - i , curr)) ;
        }
    return ans ;
}

int main()
 {
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr);
    cin >> s >> t ;
    memset(memo , -1 , sizeof memo) ;
    int ans = dp(0 , 0);
    cout << ans << '\n' ;
    return 0 ;
}