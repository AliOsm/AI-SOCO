//#pragma GCC optimize("O3")
//#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
#define all(x) x.begin(),x.end()
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=2e5+50;
const ll mod=1e9+7;
using namespace std;
int n[5],i,j,t,p,ts;
ll x,y,z,rs;
vector<ll>vl[5],vc[5];
vector<ll>::iterator it;
vector<int>vec;
void get(int id,ll x)
{
	it=lower_bound(all(vc[id]),x);
	if(it!=vc[id].end())
	{
		vl[id].pb(*it);
		it++;
		if(it!=vc[id].end())vl[id].pb(*it);
	}
	it=lower_bound(all(vc[id]),x);
	if(it!=vc[id].begin())
	{
		it--;
		vl[id].pb(*it);
	}
}
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>ts;
	while(ts--)
	{
		for(i=1;i<=3;i++)cin>>n[i];
		for(i=1;i<=3;i++)
		{
			vc[i].clear();
			for(j=1;j<=n[i];j++)
			{
				cin>>x;
				vc[i].pb(x);
			}
			sort(all(vc[i]));
			vc[i].resize(unique(all(vc[i]))-vc[i].begin());
		}
		rs=llinf;
		for(i=1;i<=3;i++)
		{
			vec.clear();
			for(j=1;j<=3;j++)
			{
				if(i==j)continue;
				vec.pb(j);
			}
			for(t=0;t<n[i];t++)
			{
				for(j=1;j<=3;j++)vl[j].clear();
				for(j=0;j<2;j++)
				{
					get(vec[j],vc[i][t]);
				}
				for(j=0;j<2;j++)
				{
					for(p=0;p<(int)vl[vec[j]].size();p++)get(vec[j^1],vl[vec[j]][p]);
				}
				for(j=0;j<(int)vl[vec[0]].size();j++)
				{
					for(p=0;p<(int)vl[vec[1]].size();p++)
					{
						x=vc[i][t],y=vl[vec[0]][j],z=vl[vec[1]][p];
						rs=min(rs,(x-y)*(x-y)+(x-z)*(x-z)+(y-z)*(y-z));
					}
				}
			}
		}
		cout<<rs<<endl;
	}
	return 0;
}
