#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7;
const int MAX = 1e6 + 11;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-9;
const double PI = acos(-1.0);

#define int ll

int n;
ll s;
int v[N];
inline bool check(int x) {
    ll cur = 0;
    fo(i, 1, n, 1) cur += max(0ll, v[i] - 0ll - x);
    return cur >= s;
}
main() {
    file("lca");
    ios;
    cin >> n >> s;
    fo(i, 1, n, 1) cin >> v[i];
    int l = 0, r = *min_element(v + 1, v + n + 1);
    while (l <= r) check(md) ? l = md + 1 : r = md - 1;
    --l;
    cout << (!check(l) ? -1 : l);
    return 0;
}
/**

*/
