#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(VI::iterator it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

const int maxn=100050;
int n,m,k;
VI buf[maxn];
VI l,r;
int len[maxn];
int ans[maxn]={};

int tmp[maxn]={};

inline bool isin(int t,const VI &s)
{
	return binary_search(s.begin(),s.end(),t);
}

void getans()
{
	int num=1, ct=0;
	rep(i,l.size()) if(ans[l[i]]==-1)
	{
		ans[l[i]]=num;
		++ct;
		if(ct>=3) ct-=3, ++num;
	}
	rep(i,r.size())if(ans[r[i]]==-1)
	{
		ans[r[i]]=num;
		++ct;
		if(ct>=3) ct-=3, ++num;
	}
	puts("YES");
	rep(i,n) printf("%d ",ans[i]);
	puts("");
}

bool can(VI &l, VI &r,int no)
{
	bool done=false;
	tr(it,l) if((int)buf[*it].size()<=(int)r.size()-2)
	{/*
		if(n==63 && m==513)
		{
			cout<<(*it)<<endl;
			tr(iit,buf[*it]) cout<<*iit<<' '; cout<<endl;
			tr(iit,r) cout<<*iit<<' '; cout<<endl;
		}*/
		done=true;
		ans[*it]=no;
		int count=0;
		tr(iit,r) if(!isin(*iit,buf[*it]))
		{
			++count; ans[*iit]=no;
			if(count>=2) break;
		}
		break;
	}
	return done;
}

int onlynot(int a, VI &v)
{
	tr(it,v) if(!isin(*it,buf[a])) return *it;
	return -1;
}

int main(void)
{memset(ans,-1,sizeof ans);
	scanf("%d%d",&n,&m); k=n/3;
	rep(i,m)
	{
		int a,b; scanf("%d%d",&a,&b); --a; --b;
		buf[a].PB(b); buf[b].PB(a);
	}
	rep(i,m) sort(buf[i].begin(),buf[i].end());
	memset(len,-1,sizeof len);
	rep(i,n) if(len[i]<0)
	{
		len[i]=0;
		queue<int> q;
		q.push(i);
		while(!q.empty())
		{
			int x=q.front(); q.pop();
			tr(it,buf[x]) if(len[*it]<0)
			{
				len[*it]=len[x]+1;
				q.push(*it);
			}
		}
	}
	rep(i,n) if(len[i]&1) l.PB(i); else r.PB(i);
	if(l.size()%3>r.size()%3) l.swap(r);
	//if(n==63 && m==513) print(l.size()), print(r.size());
	if(l.size()%3==1)
	{
		if(!can(l,r,k)) 
		{//if(n==63 && m==513) puts("Case2");
			VI nl(l.size());
			rep(i,l.size()) nl[i]=onlynot(l[i],r);
			tr(it,nl) if(*it>=0) ++tmp[*it];
			int ct=0;
			rep(i,n) if(tmp[i]>=2) ++ct;
			if(ct<2) { puts("NO"); return 0;}
			ct=0;
			rep(i,n) if(tmp[i]>=2)
			{
				ans[i]=k-ct;
				int c=0;
				rep(j,nl.size()) if(nl[j]==i)
				{
					ans[l[j]]=k-ct;
					++c;
					if(c>=2) break;
				}
				++ct;
				if(ct>=2) break;
			}
		}
	}
	getans();
	return 0;
}