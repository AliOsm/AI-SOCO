#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cmath>
#include <string>
#include <map>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <stack>
using namespace std ;
const long long mod = 1000000007LL ;
#define par pair<long long, long long>
#define f first
#define s second

struct mat {
    long long arr[2][2] ;
    mat() {
	arr[1][1] = arr[1][0] = 1LL ;
	arr[0][0] = 0LL ;
	arr[0][1] = mod-1LL ;
    }
};

mat operator*( mat A, mat B ) {
    mat C ;
    for( int i=0; i<2; i++ ) {
	for( int j=0; j<2; j++ ) {
	    C.arr[i][j] = 0 ;
	    for( int k=0; k<2; k++ ) {
		C.arr[i][j] += A.arr[i][k]*B.arr[k][j] ;
		C.arr[i][j] %= mod ;
	    }
	}
    }
    return C ;
}

mat pot( long long N ) {
    if( N==1 ) {
	mat A ;
	return A ;
    }
    mat res = pot(N/2) ;
    res = res*res ;
    if( N%2==1LL ) {
	mat tmp ;
	res = res*tmp ;
    }
    return res ;
}

int main() {
    long long A, B ;
    long long N ;

    cin >> A >> B >> N ;
    A = (A+mod)%mod ;
    B = (B+mod)%mod ;

    if( N==1LL ) {
	cout << A << endl ;
	return 0 ;
    }
    if( N==2LL ) {
	cout << B << endl ;
	return 0 ;
    }
    N -= 2 ;

    mat K = pot(N) ;

    long long X=A, Y=B ;

    cout << ( A*K.arr[0][1] + B*K.arr[1][1] )%mod << endl ;
    
    return 0 ;
}
