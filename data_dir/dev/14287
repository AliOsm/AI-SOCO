#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0);}

int const maxn = 1300005;

int cnt[2 * maxn];

int tree[8 * maxn];

int sz = 1;

inline void build()
{
    for(int i = 0; i < maxn; ++i)
        tree[sz + i] = cnt[i];

    for(int i = sz - 1; i > 1; --i)
        tree[i] = min(tree[2 * i], tree[2 * i + 1]);
}

inline int get(int l, int r)
{
    int res = 1000000000;
    for(l += sz, r += sz; l <= r; l >>= 1, r >>= 1)
    {
        if (l&1)
            res = min(res, tree[l++]);
        if (~r&1)
            res = min(res, tree[r--]);
    }
    return res;
}

int main()
{
//    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ios_base::sync_with_stdio(false);

    int n;
    cin >> n;
    vector<pair<int,int> > a(n);
    vector<int> vals;
    for(auto& p : a)
    {
        cin >> p.first >> p.second;
        vals.push_back(p.first);
        vals.push_back(p.first + 1);
        vals.push_back(p.second);
        vals.push_back(p.second + 1);
        vals.push_back(p.first - 1);
        vals.push_back(p.second - 1);
    }
    sort(begin(vals), end(vals));
    vals.resize(unique(begin(vals), end(vals)) - begin(vals));

    for(auto& p : a)
    {
        p = {lower_bound(begin(vals), end(vals), p.first) - begin(vals),  lower_bound(begin(vals), end(vals), p.second) - begin(vals)};
        ++cnt[p.first];
        --cnt[p.second + 1];
    }
    for(int i = 1; i < maxn; ++i)
        cnt[i] += cnt[i - 1];

    while (sz < maxn) sz <<= 1;
    build();

    for(int i = 0; i < a.size(); ++i)
    {
        if (get(a[i].first, a[i].second) > 1)
            FINAL_OUT(i + 1);
    }
    FINAL_OUT(-1);
}
