#include <bits/stdc++.h>

#define ff(i,s,e) for(int i=(s);i<(int)(e);i++)
#define fr(i,s,e) for(int i=(e);i-->(int)(s);)
#define FF(i,s,e) for(int i=(s);i<=(int)(e);i++)
#define Fr(i,s,e) for(int i=(e);i>=(int)(s);i--)

#define gcd(a,b) __gcd(a,b)
#define all(a) a.begin(),a.end()
#define ln putchar('\n')
#define sp putchar(' ')

using namespace std;

void init(int i){
#ifndef ONLINE_JUDGE
  char str[100];sprintf(str,"xx/%d.txt",i);freopen(str,"r",stdin);
#endif
}

typedef long long ll;

typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef map<ll,ll> mll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<pii> vpii;
typedef vector<ll> vll;
typedef vector<vi> vvi;

template<class T>inline int pr(const T&v);
template<class T, class...Args> inline int pr(const T&a,const Args (&... args));

inline int scan(int&i){return scanf("%d",&i);}
inline int scan(ll&i){return scanf("%" PRId64,&i);}
inline int scan(double&i){return scanf("%lf",&i);}
inline int scan(char&i){int c;while((c=getchar())!=EOF&&c<=' ');i=c;return c!=EOF;}
inline int scan(string&i){int c;while((c=getchar())!=EOF&&c<=' ');while(c>' ')i+=c,c=getchar();return i.size();}
template<class T> inline int scan(T&a){a.sc();}
template<class T, class U> inline int scan(pair<T,U>&a){scan(a.first),scan(a.second);}

inline int pr(const int& i){printf("%d",i);}
inline int pr(const unsigned int& i){printf("%x",i);}
inline int pr(const bool i){printf("%d",i);}
inline int pr(const ll&i){printf("%" PRId64,i);}
inline int pr(const double&i){printf("%.12f",i);}
inline int pr(const float&i){printf("%.4f",i);}
inline int pr(const char&i){putchar(i);}
inline int pr(const char*i){printf("%s",i);}
inline int pr(const string&i){for(char c:i)pr(c);}

template<class T>inline int scan(vector<T>&v){for(T&i:v)scan(i);}
template<class T>inline int pr(const vector<T>&v){if(v.empty())return 0;pr(v[0]);ff(i,1,v.size())pr(' '),pr(v[i]);}
template<class T,class U>inline int pr(const pair<T,U>&p){pr(p.first,p.second);}
template<class T>inline int prlns(const vector<T>&v){ff(i,0,v.size())pr(v[i]),pr('\n');}
template<class T, class...Args> inline int scan(T&a,Args (&... args)){return scan(a),scan(args...);}
template<class T, class...Args> inline int pr(const T&a,const Args (&... args)){pr(a),pr(' '),pr(args...);}
template<class T> inline int prln(const T&a){pr(a),ln;}
template<class T, class...Args> inline int prln(const T&a,const Args (&... args)){pr(a),sp,prln(args...);}
template<class...Args> inline int err(const Args (&... args)){
#ifndef ONLINE_JUDGE
  pr(args...);cout<<endl;
#endif
}

template<class T>inline int pr(const T&v){v.print();}

template<class T, class U> inline void smax(T&a,const U&b){if(a<b)a=b;}
template<class T, class U> inline void smin(T&a,const U&b){if(b<a)a=b;}

template<class T> T& operator +=(vector<T>&v,const T&a){v.push_back(a);return v.back();}

const int inf = ~(1<<31);
const ll MOD = 1E9+7;
const ll linf = 1E16;


struct sumtree{
  vector<ll> v;
  int base;
  sumtree(int n,int t = 0){
    int k1=2;
    while(k1<=n)k1<<=1;
    int k2=k1<<1;
    v.resize(k2,0);
    ff(i,0,n)v[k1+i]=t;
    fr(i,2,v.size()){
      v[i/2]=v[i]+v[i-1];
      --i;
    }
    base=k1;
  }
  void put(int i, int t = 1){
    for(i+=base;i!=0;i>>=1)
        v[i]=(v[i]+t)%MOD;
  }
  void pop(int i, int t = 1){
    for(i+=base;i!=0;i>>=1)
      v[i]-=t;
  }
  int search(int x){
    int i;
    for(i = 1;i<base;){
      i<<=1;
      if(v[i]<x)x-=v[i],i++;
    }
    if(x!=v[i])return -1;
    return i-base;
  }
  int get(int i){
    int res=0;
    for(i+=base;i!=1;i>>=1)
      if(i&1)res=(res+v[i-1])%MOD;
    return res;
  }
};

struct problem{
  int n;
  vll v, ans;
  int solve(){
    sumtree t(1000001);
    for(ll i:v){
      ll r = (t.get(i+1)+1)*i%MOD;
      r-=ans[i];
      if(r<0)r+=MOD;
      t.put(i,r);
      ans[i]=(ans[i]+r)%MOD;
    }
    ll r = 0;
    for(ll i:ans){
      r = (r+i)%MOD;
    }
    pr(r);
  }
  
  void fdists(){
    
  }
  
  int init(){
    
    
  }
  
  int get_input(){
    ans.resize(1E6+1,0);
    scan(n);
    v.resize(n);
    scan(v);
  }
};


main(){
  init(3);
  problem a;
  a.get_input();
  a.init();
  a.solve();
}