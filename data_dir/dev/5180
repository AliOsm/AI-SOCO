//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e6 + 3;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
ll mod[MAXN], oc[MAXN];
ll pwr(ll a, ll b, ll p)
{
	if(b == 0)
		return 1 % p;
	if(b == 1)
		return a % p;
	ll c = pwr(a, b / 2, p);
	c = (c * c) % p;
	if(b % 2)
		c = (c * a) % p;
	return c;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	ll a, b, p, x;
	cin >> a >> b >> p >> x;
	if(a % p == 0)
	{
		if(b == 0)
			cout << x;
		else
			cout << 0;
	}
	ll md = 1;
	for (int i = 1; i < p; i++)
	{
		md = (md * a) % p;
		mod[i] = md;
	}
	ll te = x / (p - 1), first = te * (p - 1);
	ll ans = 0;
	for (int i = 1; i < p; i++)
	{
		ll cnt = mod[i];
		//(nw_mod * cnt) % p = b
		ll nw_mod = (pwr(cnt, p - 2, p) * b) % p;
		//x mod p = nw_mod      &&     x mod (p - 1) = i
		ll d = i % (p - 1);
		ll n = (d * p + (p - 1) * (p - 1) * nw_mod) % (p * (p - 1));
		ans += (first - n + p * (p - 1)) / (p * (p - 1));
	}
	for (ll i = first + 1; i <= x; i++)
	{
		ll q = i % p, md = i % (p - 1);
		if(md == 0)
			md = p - 1;
		md = mod[md];
		if((q * md) % p == b)
			ans++;	
	}
	cout << ans;
}
