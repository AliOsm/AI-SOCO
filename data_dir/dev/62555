#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 5;
int a[N] , n , A , R , M;

long long get (int h) {
    long long small = 0 , large = 0;
    for (int i = 0 ;i < n ;i++) {
        if (a[i] < h) {
            small += h - a[i];
        } else {
            large += a[i] - h;
        }
    }

    long long ret = 0;
    if (M < A + R) {
        long long mn = min(small , large);
        ret = mn * M;
        if (small < large) {
            ret += (large - mn) * R;
        } else {
            ret += (small - mn) * A;
        }

    } else {
        ret = small * A + large * R;
    }

    return ret;
}

void run() {
    cin >> n >> A >> R >> M;
    for (int i = 0 ;i < n ;i++)
        cin >> a[i];

    int l = 0 , r = 1e9;
    while (l + 3 < r) {
        int m1 = l + (r - l) / 3;
        int m2 = r - (r - l) / 3;
        long long v1 = get(m1);
        long long v2 = get(m2);
        if (v2 < v1) {
            l = m1 + 1;
        } else {
            r = m2 - 1;
        }
    }

    long long best = 1e18;
    for (int i = l ;i <= r ;i++)
        best = min(best , get(i));

    cout << best;
}

int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    int t = 1;
    while (t--)
        run();
}