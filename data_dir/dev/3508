#include<iostream>
#include<stdio.h>
#include<vector>
#include<stack>
#include<algorithm>


using namespace std;

const int maxi=1e6+5;

stack <int> s;
vector <int> v[maxi],v1[maxi],sc[maxi];
int ob[maxi],a[1000][1000],h[maxi];
int x,y,ans,n,m;

long long gcd(long long x, long long y)
{
    if (x%y==0) return y; else
        return gcd(y,x%y);
}

void redirect()
{
  for (int i=1;i<=n;i++)
    for (int j=0;j<v[i].size();j++)
     v1[v[i][j]].push_back(i);

     for (int i=1;i<=n;i++)
        ob[i]=0;
}

void dfs1(int x)
{
    ob[x]=1;

    for (int i=0;i<v[x].size();i++)
        if (ob[v[x][i]]==0)
        dfs1(v[x][i]);

     s.push(x);
}

void dfs2(int x)
{
  sc[ans].push_back(x);
  ob[x]=1;

  for (int i=0;i<v1[x].size();i++)
  if (ob[v1[x][i]]==0)
      dfs2(v1[x][i]);

}

void scc()
{
    for (int i=1;i<=n;i++)
     if (ob[i]==0) dfs1(i);

    redirect();

    while (!s.empty())
      if (ob[s.top()]==0)
       {
           ans++;
          dfs2(s.top());
          s.pop();
       } else s.pop();

    long long p=0;
    long long  p1=0;
    for (int i=1;i<=ans;i++)
      {
          p=sc[i].size();
          if (p==1 && a[sc[i][0]][sc[i][0]]!=1)
          {
              printf("-1\n");
              return;
          }
      }
   //printf("da\n");
     long long res=1;
      for (int i=1;i<=ans;i++)
      {
         p=sc[i].size();
         if (p%2==0) p/=2;
         res=(res/gcd(res,p))*p;
      }
   printf("%I64d\n",res);
}

int main()
{
    scanf("%d",&n);
    for (int i=0;i<n;i++)
    {
        cin>>y;
        if (y==i+1) a[i+1][i+1]=1;
        v[i+1].push_back(y);
    }

    scc();

    return 0;
}