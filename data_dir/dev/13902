
 #include <bits/stdc++.h>
using namespace std;

void solve(vector< pair<int, int> > &X, string B, int lo, int flag, vector<int> &dig)
{
    if(X.size() == B.size())
        return;
    
    if(lo == 1)
    {
        for(int i=9; i>=0; i--)
        {
            if(dig[i])
            {
                dig[i]--;
                X.push_back(make_pair(i, 0));
                break;
            }
        }
        
        solve(X, B, lo, flag, dig);
        return;
    }
    
    int N = X.size();
    int lim = B[N] - '0', f = 0;
    
    for(int i=lim-flag; i>=0; i--)
    {
        if(dig[i])
        {
            dig[i]--;
            X.push_back(make_pair(i, 0));
            solve(X, B, (lo|(i<lim)), 0, dig);
            return;
        }
    }
    
    if(f == 0)
    {
        dig[ X[N-1].first ]++;
        X.pop_back();
        solve(X, B, lo, 1, dig);
        return;
    }
}

int main() {
    
    string A, B;
    cin >> A >> B;
    
    if(A.size() < B.size())
    {
        sort(A.begin(), A.end());
        reverse(A.begin(), A.end());
        
        cout << A << endl;
        return 0;
    }
    
    vector<int> dig;
    
    for(int i=0; i<10; i++)
        dig.push_back(0);
    
    for(int i=0; i<A.size(); i++)
        dig[ A[i]-'0' ]++;
    
    vector< pair<int, int> > X;
    solve(X, B, 0, 0, dig);
    
    for(int i=0; i<X.size(); i++)
        cout << X[i].first;
    cout << endl;
    
    return 0;
}