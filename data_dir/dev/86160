#include<bits/stdc++.h>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<stdio.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define scanl(a) scanf("%lld",&a)
#define scanii(a,b) scanf("%d%d",&a,&b)
#define scaniii(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scanll(a,b) scanf("%lld%lld",&a,&b)
#define scanlll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scani(a) scanf("%d",&a)
#define clr(a) memset(a,0,sizeof(a))
#define clr_(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define pii pair<int,int>
#define sqr(a) a*a
#define eps 1e-9
#define inf INT_MAX
#define pi acos(-1.0)
#define ff first
#define ss second
#define INF (ll)1e18
#define m_p make_pair
#define vsort(v) sort(v.begin(),v.end())
#define all(v) v.begin(),v.end()
#define UNIQUE(X) sort(all(X)) X.resize( unique( all(X)) - X.begin() )
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
ll lcm(ll a,ll b){return (a/__gcd(a,b))*b;}
ll bigmod(ll a,ll p,ll mod){ll ans=1;while(p){if(p&1)ans=ans*a%mod;a=a*a%mod;p>>=1;}return ans;}
ll power(ll x,ll n){if(n==0)return 1;else if(n%2==0){ll y=power(x,n/2);return y*y;}else return x*power(x,n-1);}
struct point{double x,y;point(){}point(double xx,double yy){x=xx;y=yy;}};
inline double Distance(point  a,point b){return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}
#ifdef shaft
     #define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template < typename Arg1 >
    void __f(const char* name, Arg1&& arg1){
        cerr << name << " is " << arg1 << std::endl;
    }
    template < typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names+1, ',');
        cerr.write(names, comma - names) << " is " << arg1 <<endl;
        __f(comma+1, args...);
    }
#else
    #define debug(...)
#endif
const int N=(int)1e6;
const ll mod=(ll)1e9+7;
map<ull,string>mp;
ll dp[N];
char ch[N],CH[N];
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    #ifdef shaft
        freopen("in.txt","r",stdin);
        ///freopen("out.txt","w",stdout);
    #endif ///shaft
    int n ;
    scani(n);
    //cin >> n;
    string s;
    scanf("%s",ch);
    s = ch;
    int  t; scani(t);
    while(t--){
        string p;
        scanf("%s",CH);
        //cin >> p;
        p = CH;
        ull h = 0;
        for(int i = 0 ; i < p.size() ; i ++){
            h = h * 43LL + tolower(p[i]);
        }
    //    debug(h,p);
        mp[h] = p;
    }
    clr_(dp);
    dp[0] = 0;
    for(int i = 0 ; i < n ; i++){
        ull h = 0;
        for(int j = i ; j >= 0 ; j--){
            h = h * 43LL + s[j];
            if(dp[j] != -1 && mp.count(h)){
                dp[i + 1] = (ll)h;
           //     debug(i+1 ,h);
                break;
            }
        }
    }
    vector<string>v;
  //  debug(dp[30]);
    while(n){
     //   debug(n);
        ull h = (ull)dp[n];
      //  debug(h);
        v.pb(mp[h]);
       // debug(mp[h]);
        n = n - mp[h].size();
     //   break;
    }
    for(int i = v.size() - 1 ; i >= 0 ; i--){
            string p = v[i];
            for(int j = 0 ; j < p.size() ; j ++)printf("%c",p[j]);
            printf(" ");
    }
    puts("");
    return 0;
}

