#include <bits/stdc++.h>
using namespace std;

struct P
{
    int x,y;
    bool operator<(const P &a)const{
        if(y!=a.y) return y>a.y;
        return x>a.x;
    }
};

vector<int> v;
//bitset<4001000> b;
int i,n,d,m,k,a,b,c;
int e;
int o[3511111];
int l[3555551];
int j[11];

int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
int px[10]={-1,1,1,-1,1,1,-1,-1},py[10]={1,1,-1,-1,1,-1,1,-1};
long long mod=1000000007,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[3555551];
stack<int> s;
//set<int> se[33],s1;

//priority_queue<P> q;
queue<int> q;
//string r;

char r[211110],r2[1];
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());

bool as(P a,P b)
{
    //if(a.x!=b.x)
    return a.x<b.x;
    //return a.x<b.x;
    //return a.y<b.y;
}

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

long long g(int n,int m)
{
    long long x=0;
    for(;n<m;)
    {
        if(n%2) x+=l[n],x%=mod,n++;
        else if(m%2==0) x+=l[m],x%=mod,m--;
        else n/=2,m/=2;
    }
    return (x+l[n])%mod;
}

long long f(int n,int m)
{
    long long x=0;
    for(;n<m;)
    {
        if(n%2) x+=o[n],x%=mod,n++;
        else if(m%2==0) x+=o[m],x%=mod,m--;
        else n/=2,m/=2;
    }
    return (x+o[n])%mod;
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;u[t].y=t,t++)
        scanf("%d",&u[t].x);
    sort(u+1,u+a+1,as);
    for(i=1;i<a;i*=2);
    for(int t=1;t<=a;t++)
    {
        x+=(long long)u[t].y*(a-u[t].y+1)%mod*u[t].x%mod;
        if(u[t].y>1)
        x+=f(i,i+u[t].y-1)*(a-u[t].y+1)%mod*u[t].x%mod;
        if(u[t].y<a)
            x+=g(i+u[t].y,i+a-1)*u[t].y%mod*u[t].x%mod;
        x%=mod;
        o[i+u[t].y-1]+=u[t].y;
        o[i+u[t].y-1]%=mod;

        l[i+u[t].y-1]+=a+1-u[t].y;
        l[i+u[t].y-1]%=mod;
        for(int h=(i+u[t].y-1)/2;h>0;h/=2)
            l[h]=l[h*2]+l[h*2+1],l[h]%=mod,o[h]=o[h*2]+o[h*2+1],o[h]%=mod;
    }
    printf("%lld",x);
}
