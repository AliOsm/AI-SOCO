#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <unordered_map>
#include <sstream>
#include <iostream>
#include <cmath>
#include<cstring>
#include <cstdio>
#include <stack>
#include<iomanip>
#include<queue>
#include<functional>
#include<iterator>
#include<new>
#include<cstdlib>
#include<math.h>
#include<fstream>
using namespace std;
#define pi 3.141592653589793
#define ii  pair<int,int>
#define ll long long
#define p10(ans) printf("%0.10f\n", ans)
#define pr(ans) printf("%d\n", ans)
#define scc(x)  scanf("%c\n", &c)
#define pll(ans) printf("%lld\n", ans)
#define scll(x) scanf("%lld",&x)
#define scd(a)  scanf("%lf", &a)
#define sci(x)  scanf("%d",&x)
#define pc(ans)  printf("%c", ans)
#define pd(a)    printf("%lf\n", a)
#define scanfchararray(arr) scanf("%s", arr)
#define printfstring(s)    printf("%s ", s.c_str())
#define all(v)             v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)            ((int)((v).size()))
#define mod 1000000007
#define mem(arr,d) memset(arr,d,sizeof(arr))
#define inf 10000000000000000
#define ninf -10000000000000000;
#define eps 1e-7
#define nearestPowerOfTwo(S) ((int)pow(2.0, (int)((log((double)S) / log(2.0)) + 0.5)))
#define loop0(i,n) for(int i=0;i<n;++i)
#define loop1(i,n) for(int i=1;i<=n;++i)
/*ll power(ll base, ll exp) {
base %= mod;
ll result = 1;
while (exp > 0) {
if (exp & 1)
result = (result * base) % mod;
base = (base * base) % mod;
exp >>= 1;
}
return result;
}
*/
/*long long gcd(long long a, long long b)
{
if (b == 0)return a; return gcd(b, a%b);
}
long long lcm(long long a, long long b) {
return  a * b / gcd(a, b);
}
*/
map<ll, bool>mp;
int main() {
	int n;
	sci(n);
	ll sum = 0;
	for (int i = 1; i <= n; ++i) { mp[i] = 1; sum += i; }
	ll men1, men2;
	if ((sum & 1) == 0) { printf("0\n");  men1 = sum / 2; men2 = men1;}
	else { printf("1\n");  men1 = sum / 2; men2 = men1 + 1;}
	ll temp1 = 0, temp2 = 0;
	vector<int>ans;
	bool flag = false;
	for (int i = n; i >= 1; --i) {
		men1 -= i;
		ans.push_back(i);
		if (men1 == 0) { flag = true; break; }
		if (men1 < 0)break;
		mp[i] = 0;
		if (mp.count(men1) && mp[men1] == 1) { ans.push_back(men1); flag = true; break; }
	}
	if (!flag) {
		ans.clear();
		mp.clear();
		for (int i = 1; i <= n; ++i)mp[i] = 1;
		for (int i = n; i >= 1; --i) {
			men2 -= i;
			ans.push_back(i);
			if (men2 == 0)break;
			mp[i] = 0;
			if (mp.count(men2) && mp[men2] == 1) { ans.push_back(men2); flag = true; break; }
		}
	}
	printf("%d ", ans.size());
	for (int i = 0; i < ans.size(); ++i)printf("%d%c", ans[i], " \n"[i == (ans.size() - 1)]);
}
