#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				1000000000000000100
#define PI 3.14159265
#define S second
#define F first
#define Ceil(x,y) ((x+y-1)/y)
#define EPS 1e-8
#define IO ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);
typedef unsigned int uint;
typedef long long ll;
int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};
string alpha = "abcdefghijklmnopqrstuvwxyz";
const int MOD = 1000000007;
const int N = 5001000;
vector<int>pr(N,1);
vector<int>Prime;
int Big[N],frq[N];
void S()
{

    for(int i = 2;i<N;++i)
        if(pr[i])
            for(int j = i+i;j<N;j+=i)
                pr[j] = 0,Big[j] = max(Big[j],j/i);

    for(int i = 2;i<N;++i)
        if(pr[i])
            Prime.push_back(i);
}
int main()
{
    //freopen("class_treasurer.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    S();
    int n,x; sc(n);
    vector<int>v1,v2;
    for(int i = 0;i<2*n;++i){
        sc(x);  frq[x]++;
        if(pr[x]) v1.push_back(x);
        else v2.push_back(x);
    }
    sort(v2.rbegin(),v2.rend());
    sort(v1.begin(),v1.end());
    vector<int>out;

    for(auto x:v2){
        if(frq[Big[x]] && frq[x]) frq[Big[x]]--,out.push_back(x),frq[x]--;
        if(sz(out) == n) break;
    }
    for(auto x:v1){
        if(frq[Prime[x-1]] && frq[x]) frq[Prime[x-1]]--,out.push_back(x),frq[x]--;
        if(sz(out) == n) break;
    }
    for(auto x:out)
        printf("%d ",x);








    return 0;
}
