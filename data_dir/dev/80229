#include <bits/stdc++.h>

void init(int i){
#ifndef ONLINE_JUDGE
  char s[100];
  sprintf(s,"xx/%d.txt",i);
  freopen(s,"r",stdin);
#endif
}
typedef long long ll;
#define invd inline int
#define tmp template<class T> invd
#define tmp2 template<class T, class U> invd
#define ff(i,s,e) for(int i=(s);i<(e);i++)
#define fr(i,s,e) for(int i=(e-1);i>=(s);i--)
#define FF(i,s,e) for(int i=(s);i<=(e);i++)
#define Fr(i,s,e) for(int i=(e);i>=(s);i--)
#define sp putchar(' ')
#define ln putchar('\n')
#define gcd(a,b) __gcd(a,b)
#define all(a) a.begin(),a.end()
#define gi getint()
using namespace std;
typedef pair<int,int> pii;typedef pair<ll,ll> pll;
typedef basic_string<int> vi;typedef basic_string<ll> vll;typedef vector<vi> vvi;
typedef basic_string<pii> vpii;typedef basic_string<pll> vpll;
invd pr(int i){printf("%d",i);}invd pr(ll i){printf("%" PRId64,i);}invd pr(char a){putchar(a);}invd pr(string&a){printf("%s",a.c_str());}
invd pr(const char*a){printf("%s",a);}
template<class T, class...Args> invd pr(T a,Args (... args)){pr(a),sp,pr(args...);}
invd scan(int&i){scanf("%d",&i);}invd scan(ll&i){scanf("%" PRId64,&i);}invd scan(char&a){int c;while((c=getchar())<=' ');a=c;}
invd scan(string&v){int c;while((c=getchar())<=' '&&c!=EOF);for(;c!=EOF&&c>' ';c=getchar()){v+=c;}}
invd scanln(string&v){v.clear();int c=getchar();for(;c!=EOF&&c>=' ';c=getchar()){v+=c;};if(c==13)getchar();return c!=EOF;}
template<class T, class...Args> invd scan(T&a,Args (&... args)){scan(a),scan(args...);}
tmp2 smax(T&a,U b){if(a<b)a=b;}tmp2 smin(T&a,U b){if(a>b)a=b;}
template<class T> vector<T>& operator +=(vector<T>&v,const T a){v.push_back(a);}
int getint(){
  int t;scan(t);return t;
}
const int inf = ~(1<<31);
ll MOD = 1E9+7;
const ll linf = 1E16;


struct problem{
  int n, q;
  vpll v;
  
  ll que(ll a, ll b){
    pll ex1={0,-1}, ex2={0,-1};
    vll u(n+1,-linf);
    vector<bool> use(n+1,0);
    for(pll p:v){
      ll res = -linf;
      if(p.second==ex1.second)smax(res,ex2.first+ p.first*b);
      else smax(res,ex1.first+p.first*b);
      if(use[p.second])smax(res,u[p.second]+p.first*a);
      smax(u[p.second],res);
      use[p.second]=1;
      if(ex1.first<=res){
        if(ex1.second!=p.second)
          ex2=ex1;
        ex1.first=res,ex1.second=p.second;
      }
      else if(ex2.first<=res&&ex1.second!=p.second)ex2.first=res,ex2.second=p.second;
    }
    return ex1.first;
  }
  
  
  int solve(){
    ff(i,0,q){
      int a, b;scan(a,b);
      pr(que(a,b)),ln;
    }
  }
  
  
  problem(){
    scan(n,q);
    v.resize(n);
    ff(i,0,n)v[i].first=gi;
    ff(i,0,n)v[i].second=gi;
  }
  
};

main(){
  init(4);
  problem().solve();
}
