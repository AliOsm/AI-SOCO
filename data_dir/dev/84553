#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define for1(i,n) for(int i=1;i<=(int)(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=1e6+5;

int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      #endif
      int t;
      cin>>t;
      while(t--)
      {
            int n,k;
            cin>>n>>k;
            k++;
            int a[n];
            for(int i=0;i<n;i++) cin>>a[i];
            int ans=1e12;
            int pos=-1;
            for(int i=0;i<n;i++)
            {
                  // if(k%2==0)
                  // {
                        if(i+k-1<n)
                        {
                              int avg=(a[i]+a[i+k-1])/2;
                              int d1=max(abs(a[i]-avg),abs(a[i+k-1]-avg));
                              if(d1<ans)
                              {
                                    ans=d1;
                                    pos=avg;
                              }
                        }
                  // }
                  // else{
                  //       if(i+k<n)
                  //       {
                  //             int avg=(a[i]+a[i+k])/2;
                  //             int d1=min(abs(a[i]-avg),abs(a[i+k]-avg));
                  //             if(d1<ans)
                  //             {
                  //                   ans=d1;
                  //                   pos=avg;
                  //             }
                  //       }
                  // }

            }
            cout<<pos<<"\n";
      }
}     
// nothing is impossible