#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <math.h>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>

using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define lps(i, j, n)        for(int i=(j);i<(int)(n);++i)
#define lpb(i, j, n)        for(int i=(j);i>=(int)(n);--i)
#define nul                 puts("")
#define PI                  3.14159265358979323846
#define EP                  1e-7

typedef long long                   ll;
typedef long double                 LD;
typedef vector<bool>                vb;
typedef vector<int>                 vi;
typedef vector<ll>                  vl;
typedef vector<string>              vs;
typedef vector<double>              vd;
typedef vector<pair<int, int> >     vpi;
typedef vector<pair<ll, ll> >       vpl;
typedef vector<pair<string, int> >  vsi;
typedef multiset<int>               mls;
typedef vector< vi >                vvi;
typedef vector< vl >                vvl;
typedef complex<double>             point;
typedef vector<vector<int> >        vadj;

ll power(ll k, ll j)
{
	ll ret = 1;
	for (int i = 0; i < j; i++)
		ret *= k;
	return ret;
}

int main()
{

	ll n, m;
	cin >> n >> m;
	ll x, dig, q1 = n - 1;
	x = 0;
	for (int i = 0; i < n; i++, q1--){
		cin >> dig;
		x += power(m, q1)*dig;
	}
	cin >> n >> m;
	ll y = n - 1;
	y = 0; q1 = n - 1;
	for (int i = 0; i < n; i++, q1--){
		cin >> dig;
		y += power(m, q1)*dig;
	}
	if (x < y)
		cout << "<";
	else if (x > y)
		cout << ">";
	else
		cout << "=";

	//system("pause");
	return 0;
}