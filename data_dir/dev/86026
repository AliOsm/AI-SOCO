
#include<bits/stdc++.h>
using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/
#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second
#define endl           '\n';
#define what_is(x)     cerr << #x << " is " << x << endl;
///*....Debugger....*/
#define error(args...) {vector <string> _v = split(#args, ','); err(_v.begin(), args); cout << endl;}
vector <string> split(const string &s, char c) {
    vector <string> v;
    stringstream ss(s); string x;
    while (getline(ss, x, c)) v.emplace_back(x);
    return move(v);
}
void err(vector <string> :: iterator it) {}
template <typename T, typename... Args>
void err(vector <string> :: iterator it, T a, Args... args) {
    cout << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", ";
    err(++it, args...);
}
 
int ini(){int x; scanf("%d",&x);return x;}
long long inl(){ long long x;scanf("%lld",&x); return x;}
double ind(){double x; scanf("%lf",&x);return x;}
#define Iin ini();
#define Lin inl();
#define Din ind();

int set_1(int n,int pos){return n = (n | (1<<pos));}
int reset_0(int n,int pos){return n= n & ~(1<<pos);}
bool check_bit(int n,int pos){return n = n & (1<<pos);}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
const int N = (int) 1e6 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);
const double eps=1e-9;

int a[N],x;
int dp[N][4];

int cal(int val,int pos){
	if(dp[val][pos]!=-1)return dp[val][pos];
	if(val>x)return 0;
	int res=INT_MAX;
	if(a[val]==pos){
		res=min(res,cal(val+1,pos));
	}
	else{
		res=min(res,1+cal(val+1,pos));
	}

	if(pos<3){
		if(a[val]==pos+1)res=min(res,cal(val+1,pos+1));
		else{
			res=min(res,1+cal(val+1,pos+1));
		}
	}

	if(pos<2){
		if(a[val]==pos+2)res=min(res,cal(val+1,pos+2));
		else{
			res=min(res,1+cal(val+1,pos+2));
		}
	}
	return dp[val][pos]=res;
}


int main()
{
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);  
    int t=1,te=0;
    
    while(t--){
    	int k1,k2,k3;
    	cin>>k1>>k2>>k3;

    	x=k1+k2+k3;

    	for(int i=1;i<=k1;i++){
    		int val;
    		cin>>val;
    		a[val]=1;
    	}

    	for(int i=1;i<=k2;i++){
    		int val;
    		cin>>val;
    		a[val]=2;
    	}

    	for(int i=1;i<=k3;i++){
    		int val;
    		cin>>val;
    		a[val]=3;
    	}
    	memset(dp,-1,sizeof(dp));
    	cal(1,1);

    	printf("%d\n", dp[1][1]);


        //printf("Case %d: ",++te);
    }
    return 0;
}


