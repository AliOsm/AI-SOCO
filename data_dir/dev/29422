#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int arr[150003];
int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int n;
    cin>>n;
    vector<int>vec;
    for(int i=0 ; i<n; i++)
    {
        int x;
        cin>>x;
        vec.push_back(x);
    }
    sort(vec.begin(),vec.end());
    int cnt=0;
    for(int i=0 ; i<vec.size() ; i++)
    {
        if(vec[i]==1)
        {
            if(arr[1]==0)
                cnt++,arr[1]=1;
            else if(arr[2]==0)
                cnt++,arr[2]=1;
        } else
        {
            int x=vec[i];
            if(arr[x-1]==0)
            {
                cnt++;
                arr[x-1]=1;
            }
            else if(arr[x]==0)
            {
                cnt++;
                arr[x]=1;
            }
            else if(arr[x+1]==0)
            {
                cnt++;
                arr[x+1]=1;
            }
        }

    }
    cout<<cnt;


    return 0;
}
