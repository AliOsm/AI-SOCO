#include<bits/stdc++.h>
using namespace std;
#define in ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define FI freopen("fegla.in","r",stdin);
#define FO freopen("o.txt","w",stdout);
#define N 262144
#define pii pair<int,int>
#define vi vector<int>
#define ll long long
#define mod 1000000007
#define INF 1<<20
#define mk(a,b) make_pair(a,b)
//int dx[] = { 1, 0, -1, 0 };
//int dy[] = { 0, 1, 0, -1 }; // 4 Direction
// int dx[] = {1, 1, 0, -1, -1, -1, 0, 1};
// int dy[] = {0, 1, 1, 1, 0, -1, -1, -1};// 8 direction
//int dx[] = { 2,1,-1,-2,-2,-1,1,2 };
//int dy[] = { 1,2,2,1,-1,-2,-2,-1};// Knight Direction

int n, m, q;
int mx;
bool vis[2050];
int cost[2050];
int arr[2050];
int total;
int dfs(int node){
    if(node>=(1<<n))return cost[node]= arr[node];
    return cost[node]=max(dfs(node*2),dfs(node*2+1))+arr[node];

}
int main()
{
    in;
    cin>>n;
 //   cout<<(1<<n)<<" "<<(1<<(n-1))<<endl;
    for(int i=2;i<(1<<(n+1));i++){
        cin>>arr[i];
    }
   dfs(1);
    for(int i=(1<<(n+1))-1;i>=2;i--){
        if(i%2){
            int c=abs(cost[i]-cost[i-1]);
        cost[i]=cost[i-1]=max(cost[i],cost[i-1]);

        total+=c;
        }
        else {

        }
    }
    cout<<total<<endl;
}
