#include <bits/stdc++.h>

using namespace std;
const int N=100005;
const int K=105;

int a[N];

int dist[N][K];

vector<int> g[N];


signed main()
{
#ifdef files
	ifstream cin("input.txt");
	ofstream cout("output.txt");
#endif
    memset(dist,255,sizeof(dist));
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n,m,k,x;
    cin >> n >> m >> k >> x;
    for(int i=0; i<n; i++){
        cin >> a[i];
        a[i]--;
    }
    for(int i=0; i<m; i++){
        int p,q;
        cin >> p >> q;
        g[p-1].push_back(q-1);
        g[q-1].push_back(p-1);
    }
    list<int> q;
    for(int i=0; i<k; i++){
        for(int j=0; j<n; j++){
            if(a[j]==i){
                q.push_back(j);
                dist[j][i]=0;
            }
        }
        while(!q.empty()){
            int v=q.front();
            q.pop_front();
            for(int u:g[v]){
                if(dist[u][i]==-1){
                    dist[u][i]=dist[v][i]+1;
                    q.push_back(u);
                }
            }
        }
    }
    for(int i=0; i<n; i++){
        nth_element(dist[i],dist[i]+x-1,dist[i]+k);
        long long sum=0;
        for(int j=0; j<x; j++)sum+=dist[i][j];
        cout << sum << " ";
    }
}
