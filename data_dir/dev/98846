#include <iostream>     //  |-------------------------------------|
#include <cmath>        //  |Danger! Too many bags! HadronWave (c)|
#include <queue>        //  |-------------------------------------|     
#include <set>                          
#include <map>                          
#include <algorithm>
#include <vector>
#include <deque>
#include <functional>
#include <cmath>
#include <string>
#include <iomanip>
#include <cstdlib>
#include <cstdio>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int uint;

const ll mod19 = 1000000009;
const ll mod17 = 1000000007;

int n,zero,ans;
bool used[201];
vector<int> arr;

void dfs(int cur, int pos){
    used[cur] = true;
    ans = min(ans,cur);
    int k = n;
    for(int forzero = 0; forzero <= min(n,zero);++forzero){
        int totake = n-forzero;
        for(int i = 0; i <= min(totake,cur);++i){
            int n2 = totake-i;
            int neg = cur-i;
            if(n2<=pos && !used[neg + n2]){
                dfs(neg + n2,i+pos-n2);
            }
        }
    }
}


int main(){

   
    cin >> n;
    arr.resize(2*n-1);
    int pos,neg;
    pos = neg = 0;
    for(int i=0;i<2*n-1;++i){
        cin >> arr[i];
        if(arr[i]>0) ++pos;
        else if(arr[i]==0) ++zero;
        else ++neg;
        arr[i] = abs(arr[i]);
    }
    sort(arr.begin(),arr.end(),greater<int>());
    ans = neg;
    dfs(neg,pos);
    int res = 0;
    ans = 2*n-1-ans;
    for(int i=0;i<ans;++i){
        res += arr[i];
    }
    for(int i=ans;i<2*n-1;++i){
        res -= arr[i];
    }
    cout << res;
    // Goodbye and good luck!
    return 0;

}