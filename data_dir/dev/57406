#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=1e5+50;
const int mod=1e9+7;
using namespace std;
int n,m,k,i,j,t;
vector<pair<int,string> >rs,vc;
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>n>>m>>k;
	if(4*n*m-2*n-2*m<k)rc("NO");
	if(m-1)vc.pb(mkp(m-1,"R"));
	if(m-1)vc.pb(mkp(m-1,"L"));
	for(i=1;i<n;i++)
	{
		vc.pb(mkp(1,"D"));
		if(m-1)vc.pb(mkp(m-1,"RUD"));
		if(m-1)vc.pb(mkp(m-1,"L"));
	}
	if(n-1)vc.pb(mkp(n-1,"U"));
	for(i=0;i<(int)vc.size();i++)
	{
		if(vc[i].fr*(int)vc[i].sc.size()<=k)k-=vc[i].fr*(int)vc[i].sc.size(),rs.pb(vc[i]);
		else
		{
			if(!k)break;
			for(j=1;j<=vc[i].fr;j++)
			{
				if((int)vc[i].sc.size()<=k)k-=(int)vc[i].sc.size(),t=j;
				else break;
			}
			if(t)rs.pb(mkp(t,vc[i].sc));
			if(!k)break;
			rs.pb(mkp(1,""));
			for(j=0;j<k;j++)rs.back().sc+=vc[i].sc[j];
			break;
		}
	}
	cout<<"YES\n";
	cout<<(int)rs.size()<<'\n';
	for(i=0;i<(int)rs.size();i++)cout<<rs[i].fr<<" "<<rs[i].sc<<'\n';
	return 0;
}
