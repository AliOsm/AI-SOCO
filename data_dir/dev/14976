#include <bits/stdc++.h>

using namespace std;

const int inf = (int)(1e9)+100;
const int mod = (int)(1e9) + 7;
const int N = (int)(1e5) + 100;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define ll long long
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vll vector <ll>
#define vpi vector <pii>
#define vpl vector <pll>
#define sc1(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define frw(i, p, n) for(int i = p; i <= n; i++)
#define bck(i, n, p) for(int i = n; i >= p; i--)
#define mem(a) memset(a, 0, sizeof(a))

int n, m, k;

struct edge {
	int a, b, cost;
};

edge e[N];
int res = inf, sk[N];

int main(){
    cin >> n >> m >> k;
    for(int i = 0; i < m; i++){
		cin >> e[i].a >> e[i].b >> e[i].cost;    
    }
   	if(k == 0) return cout << -1, 0;
   	for(int i = 0, s; i < k; i++){
   		cin >> s;
   		sk[s] = 1;
   	}

   	for(int i = 0; i < m; i++){
   		if(sk[e[i].a] == 1 && sk[e[i].b] == 0){
   			res = min(res, e[i].cost);
   		}

   		else if(sk[e[i].a] == 0 && sk[e[i].b] == 1){
   			res = min(res, e[i].cost);
   		}
   		else continue;
   	}

   	if(res == inf) cout << -1;
   	else cout << res;
	return 0;
}
