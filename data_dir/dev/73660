#define _USE_MATH_DEFINES
#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <bitset>
#include <string>
#include <map>
#include <queue>
#include <hash_map>
#include <hash_set>
#include <cstring>
#include <climits>
using namespace std;

#define uint64 unsigned int64
#define int64 long long
#define rep(i, n) f(i, 0, n - 1)
#define f(i, a, b) fd(i, a, b, 1)
#define fd(i, a, b, d) for(int i = (a); i <= (int)(b); i += (d))

#ifndef ONLINE_JUDGE
#include <time.h>
clock_t _time;
void startProfile()
{
  _time = clock();
  printf("Begin profiling..\n...\n");
}
void stopProfile()
{
  printf("\n...\nEnd profiling. Time: %f sec.\n", (double)(clock() - _time) / CLOCKS_PER_SEC);
}
#endif

int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  startProfile();
#endif

  iostream::sync_with_stdio(false);

  int n;
  cin >> n;

  const int N = 10000000;
  vector<int> p(N + 1, true);
  p[0] = p[1] = false;

  for(int i = 2; i * i <= N; ++i)
  {
      if(p[i])
      {
          for(int j = i + i; j <= N; j += i)
          {
              p[j] = false;
          }
      }
  }

  rep(i, N)
  {
      if(p[i])
      {
          cout << i << ' ';
          --n;
          if(n == 0)
              break;
      }
  }


#ifndef ONLINE_JUDGE
  stopProfile();
#endif
  return 0;
}
