#include <bits/stdc++.h>
using namespace std;
#define pii             pair<LL , LL >
#define inf             1111111111
#define in(a)           scanf("%lld", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%lld%lld", &a, &b)
#define in3(a, b, c)    scanf("%lld%lld%lld", &a, &b, &c)
#define pn              printf("\n")
#define pr(a)           printf("%lld\n", a)
#define prs(a)          printf("%lld ", a)
#define pr2(a, b)       printf("%lld %lld\n", a, b)
#define pr3(a, b, c)    printf("%lld %lld %lld\n", a, b, c)
#define pcs(a)          printf("Case %lld: ", a)
#define mp              make_pair
#define vi              vector<LL >
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define mem(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
#define x               first
#define y               second
#define lc              (2*i)
#define rc              (2*i+1)

typedef long long LL;
//LL  dx[]={1,0,-1,0};LL dy[]={0,1,0,-1}; //4 Direction
//LL  dx[]={1,1,0,-1,-1,-1,0,1,0};LL dy[]={0,1,1,1,0,-1,-1,-1,0};//8 direction
//LL  dx[]={2,1,-1,-2,-2,-1,1,2};LL dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(LL n, LL pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//LL  on(LL n, LL pos) {return n | (1<<pos);} //typecast 1 in case of int
//LL  off(LL n, LL pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

const LL M = 100010;

LL n;

LL f(LL m)
{
    LL rem = n - m;
    LL e = rem < 2 ? 0 : (rem *(rem-1))/2;
    return min(e+m, 2*m);
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("/home/riaz/Documents/in.txt", "r", stdin);
//    freopen("/home/riaz/Documents/in.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);

    LL q, i, j, k;
    LL A[M];

    in(q);
    while (q--)
    {
        in(n);

        if (n < 6)
        {
            pr(n-1);
            continue;
        }

//        LL maxxx = 0;
//        for (LL m = 0; m < n; m++)
//        {
//            LL rem = n - m;
//            LL e = rem < 2 ? 0 : (rem *(rem-1))/2;
//
////            pr3(m, e + m, min(e+m, 2*m));
//            A[m] = min(e+m, 2*m);
//            maxxx = max(maxxx, A[m]);
//        }
//        prs(maxxx);

        LL lo = -1, hi = n;

        while (hi - lo > 1)
        {
            LL mid = (hi + lo)>>1;
            if (f(mid) > f(mid + 1))
                 hi = mid;
            else
                 lo = mid;
        }

//        LL l = 0, h = n-1;
//        while (l < h)
//        {
//            LL m = (l+h)/2;
//            LL rem = n - m;
//            LL e = rem < 2 ? 0 : (rem *(rem-1))/2;
//
//            if ((e+m)/2 < m) h = m;
//            else l = m + 1;
//        }
//
//        LL rem = n - h;
//        LL e = rem < 2 ? 0 : (rem *(rem-1))/2;

        pr(f(lo+1));
    }


return 0;
}
