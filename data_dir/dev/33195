#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>/
// #include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define mp make_pair

#define mod 1000000007LL
#define IN freopen("input.txt","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG printf("Hi\n")
#define INF 2000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2
#define SZ(z) ((int)z.size())
#define sq(x) ((x)*(x))

#define FastIO ios_base::sync_with_stdio(false); cin.tie(NULL)

#define EPS 1e-7

// using namespace __gnu_pbds;
using namespace std ;

// typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define maxn 200005

i64 s[maxn] , sum[maxn] ;
i64 tr[4*maxn] ;

void update( int cn ,int b, int e ,int idx ,i64 val )
{
    if( b>idx || e<idx ) return ;
    if( b==e )
    {
        tr[cn] += val ;
        return ;
    }
    int l = cn*2 , r = cn*2+1 , m= (b+e)/2 ;
    update(l,b,m,idx,val) ; update(r,m+1,e,idx,val) ;

    tr[cn] = tr[l] + tr[r] ;
    return ;
}

int query(int cn ,int b, int e, i64 val)
{
    if(b==e)
    {
        if( tr[cn] <= val ) return e+1 ;
        return b ;
    }

    int l = cn*2 , r = cn*2+1 , m= (b+e)/2 ;

    if( tr[l] <= val ) return query( r , m+1 , e , val - tr[l]  ) ;
    return query( l,b,m , val ) ;
}

int ans[maxn] ;

int main()
{
    int n;
    scanf("%d",&n) ;

    for(int i=1 ; i<=n ; i++)
    {
        update(1,1,n,i,i) ;
    }

    for(int i=1 ; i<=n ; i++) scanf("%lld",&s[i]) ;

    for(int i=n ; i>=1 ; i--)
    {
        ans[i] = query( 1 , 1 , n , s[i] ) ;
        update( 1 , 1 , n , ans[i] , -ans[i] ) ;
    }

    for(int i=1 ; i<=n ; i++) printf("%d ",ans[i]) ;
    printf("\n") ;

    return 0 ;
}
