#include<bits/stdc++.h>
#define xx first
#define yy second
using namespace std;
int ara[200005];
typedef pair<int, int>pi;
typedef pair<pi, int>pii;
pii qq[200005];
priority_queue<pi>pq;
int res[200005], seg[4*200005];
void update(int n, int s, int e, int indx)
{
    if(s==indx && e==indx)
    {
        seg[n]++;
        return;
    }
    if(s>indx || e<indx)
        return;
    int mid= (s+e)>>1;
    update(n*2, s, mid, indx);
    update(n*2 +1, mid+1, e, indx);
    seg[n]= seg[n*2]+seg[n*2 +1];
    return;
}
int query(int n, int s, int e, int l, int r)
{
    if(s>=l && e<=r)
        return seg[n];
    if(s>r || e<l)
        return 0;
    int mid= (s+e)>>1;
    return query(n*2, s, mid, l, r)+query(n*2 +1, mid+1, e, l, r);
}
int func(int n, int r)
{
    int lo= 1, hi= n, res= 0;
    while(lo<=hi)
    {
        int mid= (lo+hi)>>1;
        if(query(1, 1, n, 1, mid)>=r)
            res= ara[mid], hi= mid-1;
        else lo= mid+1;
    }return res;
}
int main()
{
    int n;
    scanf("%d", &n);
    for(int i=1; i<=n; i++)
        scanf("%d", &ara[i]), pq.push({ara[i], -i});
    int m, x, y;
    scanf("%d", &m);
    for(int i=0; i<m; i++)
        scanf("%d %d", &x, &y), qq[i]= {{x, y}, i};
    sort(qq, qq+m);
    int p= 0, sz= 0;
    while(!pq.empty() && p<m)
    {
        pi pp= pq.top();
        pq.pop();
        sz++;
        update(1, 1, n, -pp.yy);
        while(p<m && qq[p].xx.xx==sz)
        {
            x= func(n, qq[p].xx.yy);
            res[ qq[p].yy ]= x;
            p++;
        }
    }for(int i=0; i<m; i++)printf("%d\n", res[i]);
    return 0;
}
