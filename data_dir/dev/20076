// --------------------<optimizations>--------------------
#pragma GCC optimize("O3")

//(UNCOMMENT WHEN HAVING LOTS OF RECURSIONS)\
#pragma comment(linker, "/stack:200000000")
//(UNCOMMENT WHEN TRYING TO BRUTEFORCE WITH A LOT OF LOOPS)\
#pragma GCC optimize("unroll-loops")

// -------------------</optimizations>--------------------
#include<bits/stdc++.h>
using namespace std;
//#define int long long
#define d double
#define pii pair<int,int>
#define pb push_back
#define N 1500003
#define inf 1e18
#define Arena ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
int mod=1e9+7;
//int mod=998244353;
int cpr[N], cpd[N], prime[N];

bool ispalin(int n)
{
    vector<int> v;
    while(n)
        v.pb(n%10), n/=10;
    
    int i,sz=v.size();
    for(i=0;i<sz/2;++i)
        if(v[i]!=v[sz-i-1])
            return false;
    return true;
}   

void palin()
{
    int i;
    for(i=1;i<N;++i)
        cpd[i]=cpd[i-1]+ispalin(i);
}   

void sieve()
{
    fill(prime+2,prime+N,1);
    int i,j;
    for(i=4;i<N;i+=2)
        prime[i]=0;
    
    for(i=3;i*i<N;i+=2)
        if(prime[i])
            for(j=i*i;j<N;j+=i)
                prime[j]=0;
    
    for(i=2;i<N;++i)
        cpr[i]=cpr[i-1]+prime[i];
}   

signed main()
{
    Arena
    
    int p,q;
    cin>>p>>q;
    palin();
    sieve();
    
    int i,ans=1;
    for(i=2;i<N;++i)
        if(q*cpr[i]<=p*cpd[i])
            ans=i;
        
    cout<<ans;
    
        
    return 0;
}
