#include<bits/stdc++.h>
#define int long long
#define f first 
#define s second
using namespace std;
#define mx 200005
int bit[2][mx],a[mx];
vector<int> adj[mx],c[mx];
vector<pair<int,int>> ans;
vector<pair<pair<int,int>,int>> qi[mx];
void update(int id,int val,int x){
    while(id<mx){
        bit[x][id]+=val;
        id+=id&-id;
    }
}
int query(int id,int x){
    int sum=0;
    while(id>0){
        sum+=bit[x][id];
        id-=id&-id;
    }
    return sum;
}
void dfs(int x,int c,int pre)
{
    for(auto j:qi[x])
    {
        if(j.f.f==2)
            ans.push_back({j.s,a[x]+query(j.s,c)});
        else
        {
            update(j.s,j.f.s,c);
            update(j.s,-j.f.s,c^1);
        }
    }
    for(auto j:adj[x])
    {
        if(j!=pre)
        dfs(j,c^1,x);
    }
    for(auto j:qi[x])
    {
        if(j.f.f==1)
        {
            update(j.s,-j.f.s,c);
            update(j.s,+j.f.s,c^1);
        }
    }
    
}
int32_t main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n,m;cin>>n>>m;
    for(int i=1;i<=n;i++)
        cin>>a[i];
    for(int i=1;i<n;i++)
    {
        int x,y;cin>>x>>y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    for(int i=1;i<=m;i++)
    {
        int x,y,z;cin>>x;
        if(x==1)
        {
            cin>>y>>z;
            qi[y].push_back({{x,z},i});
        }
        else
        {
            cin>>y;
            qi[y].push_back({{x,0},i});
        }
    }
    dfs(1,0,1);
    sort(ans.begin(),ans.end());
    for(auto j:ans)
        cout<<j.s<<"\n";
    
}
 