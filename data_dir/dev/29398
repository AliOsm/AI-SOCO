/*
 _     _                             
| |__ | |__   __ _  __ _ _   _  __ _ 
| '_ \| '_ \ / _` |/ _` | | | |/ _` |
| |_) | | | | (_| | (_| | |_| | (_| |
|_.__/|_| |_|\__,_|\__, |\__, |\__,_|
                   |___/ |___/       
*/
#include<bits/stdc++.h>

#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll int,ll int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
using namespace std;

#define N  105

ll int n,m;

ll int ans[N][N];

ll int base[N][N];

ll int tmp[N][N];

void init()
{
	memset(ans,0,sizeof(ans));
	for(ll int i=1;i<=m;i++)
	{
		ans[i][i]=1;
	}
	memset(base,0,sizeof(base));
	base[1][1]=base[m][1]=1;
	for(ll int i=1;i<m;i++)
	{
		base[i][i+1]=1;
	}
}

void mul_ab()
{
	memset(tmp,0,sizeof(tmp));
	for(ll int i=1;i<=m;i++)
	{
		for(ll int j=1;j<=m;j++)
		{
			for(ll int k=1;k<=m;k++)
			{
				tmp[i][j]=(tmp[i][j]+ans[i][k]*base[k][j])%hell;
			}
		}
	}
	for(ll int i=1;i<=m;i++)
	{
		for(ll int j=1;j<=m;j++)
		{
			ans[i][j]=tmp[i][j];
		}
	}
}

void mul_bb()
{
	memset(tmp,0,sizeof(tmp));
	for(ll int i=1;i<=m;i++)
	{
		for(ll int j=1;j<=m;j++)
		{
			for(ll int k=1;k<=m;k++)
			{
				tmp[i][j]=(tmp[i][j]+base[i][k]*base[k][j])%hell;
			}
		}
	}
	for(ll int i=1;i<=m;i++)
	{
		for(ll int j=1;j<=m;j++)
		{
			base[i][j]=tmp[i][j];
		}
	}
}

int expo(ll int exponent){
    while(exponent!=0)
    {
        if(exponent&1) mul_ab();
        mul_bb();
        exponent>>=1;
    }
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		cin>>n>>m;
		init();
		expo(n);
		ll int sm=0;
		for(ll int i=1;i<=m;i++)
		{
			sm=(sm+ans[i][m])%hell;
		}
		cout<<sm;
	}
	return 0;
}