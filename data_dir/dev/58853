#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 1e5+10 , mod = 1e9+7 , P = 727 , P2 = 47;

string s[N];
vector <int> h[N] , h2[N];
int pw[10 * N] , pw2[10 * N] , H[10 * N] , H2[10 * N];

void add(int id){
   int cur = 0 , cur2 = 0;
   int n = s[id].length();
   for(int i = 0 ; i < n ; i++){
      cur = (1ll * cur * P + s[id][i]) % mod;
      h[id].push_back(cur);
      cur2 = (1ll * cur2 * P2 + s[id][i]) % mod;
      h2[id].push_back(cur2);
   }
}

int32_t main(){
   ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
   pw[0] = 1;
   for(int i = 1 ; i < 10 * N ; i++)
      pw[i] = 1ll * pw[i - 1] * P % mod;
   pw2[0] = 1;
   for(int i = 1 ; i < 10 * N ; i++)
      pw2[i] = 1ll * pw2[i - 1] * P2 % mod;
   int n;
   cin >> n;
   for(int i = 0 ; i < n ; i++){
      cin >> s[i];
      add(i);
   }
   string ans = s[0];
   for(int i = 0 ; i < s[0].length() ; i++){
      H[i] = h[0][i];
      H2[i] = h2[0][i];
   }
   for(int i = 1 ; i < n ; i++){
      int m = min((int)ans.length() , (int)s[i].length());
      for(int j = m ; j >= 0 ; j--){
         if(j == 0){
            for(int k = 0 ; k < s[i].length() ; k++){
               H[ans.length()] = (1ll * H[ans.length() - 1] * P + s[i][k]) % mod;
               H2[ans.length()] = (1ll * H2[ans.length() - 1] * P2 + s[i][k]) % mod;
               ans += s[i][k];
            }
            continue;
         }
         int x = 0 , x2 = 0;
         if(j != ans.length()){
            x = 1ll * H[ans.length() - j - 1] * pw[j] % mod;
            x2 = 1ll * H2[ans.length() - j - 1] * pw2[j] % mod;
         }
         if(h[i][j - 1] == (H[ans.length() - 1] - x + mod) % mod && h2[i][j - 1] == (H2[ans.length() - 1] - x2 + mod) % mod){
            for(int k = j ; k < s[i].length() ; k++){
               H[ans.length()] = (1ll * H[ans.length() - 1] * P + s[i][k]) % mod;
               H2[ans.length()] = (1ll * H2[ans.length() - 1] * P2 + s[i][k]) % mod;
               ans += s[i][k];
            }
            break;
         }
      }
   }
   cout << ans;
   return 0;
}
