/*
 _     _                             
| |__ | |__   __ _  __ _ _   _  __ _ 
| '_ \| '_ \ / _` |/ _` | | | |/ _` |
| |_) | | | | (_| | (_| | |_| | (_| |
|_.__/|_| |_|\__,_|\__, |\__, |\__,_|
                   |___/ |___/       
*/
#include<bits/stdc++.h>

#define ll	        long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll int,ll int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<int,int>
#define vi          vector<int>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
using namespace std;

#define N  200005

int n,m;

int k[N];

vector<pii> v;

int kc[N];

vi d[4*N];

bool check(int mid)
{
	// cout<<mid<<endl;
	int last_disc[n+1];
	memset(last_disc,0,sizeof(last_disc));
	for(auto i:v)
	{
		if(i.F<=mid) 
		{
			last_disc[i.S]=max(last_disc[i.S],i.F);
		}
	}
	for(int i=1;i<=n;i++)
	{
		if(last_disc[i]!=0) d[last_disc[i]].pb(i);
	}
	// for(ll int i=1;i<=mid;i++) cout<<last_disc[i]<<" ";cout<<endl;
	// for(ll int i=1;i<=mid;i++)
	// {
	// 	cout<<i<<" ";
	// 	for(auto it:d[i]) cout<<it<<" ";cout<<endl;
	// }
	int b=0;
	for(int i=1;i<=mid;i++)
	{
		b++;
		// cout<<i<<" "<<b<<endl;
		for(auto j:d[i])
		{
			 int tmp=min(b,kc[j]);
			// cout<<"fuck "<<tmp<<endl;
			b-=tmp;
			kc[j]-=tmp;
		}
	}
	 int sm=0;
	for( int i=1;i<=n;i++) sm+=kc[i];
	if(b>=sm*2) return 1;
	else return 0;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		cin>>n>>m;
		for( int i=1;i<=n;i++)
		{
			cin>>k[i];
		}
		for( int i=0;i<m;i++)
		{
			ll int t1,t2;
			cin>>t1>>t2;
			v.pb({t1,t2});
		}
		 int low=1,high=4*N;
		 int ans=-1;
		 // cout<<check(6);
		while(low<=high)
		{
			 int mid=(low+high)/2;
			for( int i=0;i<=mid;i++) d[i].clear();
			for(int i=1;i<=n;i++) kc[i]=k[i];
			if(check(mid))
			{
				ans=mid;
				high=mid-1;
			}
			else
			{
				low=mid+1;
			}
		}
		cout<<ans;
	}
	return 0;
}