#define _USE_MATH_DEFINES
#include<stdio.h>
#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
#include<map>
#include<set>
#include<sstream>
#include<cstring>
#include<numeric>
#include<bitset>
#include<unordered_set>
#include<unordered_map>
#include<limits.h>
#define long long long
using namespace std;

const int N = 2e5;

int a[N];

string getStr(int n) {
	string ans = "";
	while (n > 0) {
		ans += n % 10 + '0';
		n /= 10;
	}
	reverse(ans.begin(), ans.end());
	return ans;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	int n, xf, d, s;
	scanf("%d%d%d%d", &n, &xf, &s, &d);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	sort(a, a + n);
	if (a[0] - 1 < s || d < 2) {
		printf("IMPOSSIBLE");
		return 0;
	}
	vector<string> ans;
	ans.push_back("RUN ");
	ans[0] += getStr(a[0] - 1);
	int jump = 2;
	for (int i = 1; i < n; i++) {
		if (a[i] - a[i - 1] - 2 >= s) {
			ans.push_back("JUMP ");
			ans[ans.size() - 1] += getStr(jump);
			jump = 2 ;
			ans.push_back("RUN ");
			ans[ans.size() - 1] += getStr(a[i] - a[i - 1] - 2);
		}
		else {
			if (a[i] - a[i - 1] + jump > d) {
				printf("IMPOSSIBLE");
				return 0;
			}
			else {
				jump += a[i] - a[i - 1];
			}
		}
	}
	ans.push_back("JUMP ");
	ans[ans.size() - 1] += getStr(jump);
	if (a[n - 1] != xf - 1) {
		ans.push_back("RUN ");
		ans[ans.size() - 1] += getStr(xf - a[n - 1] - 1);
	}
	for (auto i : ans) {
		printf("%s\n", i.c_str());
	}
	return 0;
}