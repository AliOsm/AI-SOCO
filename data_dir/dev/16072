#include <bits/stdc++.h>
     
using namespace std;
typedef long long ll;
typedef vector<ll> vl ;
typedef pair<ll,ll> pl;
     
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
#define FAST ios::sync_with_stdio(0), cin.tie(0),cout.tie(0)
     
const int MOD = 998244353;
const int N = 200005;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e10;
const int K = 205;

ll mul(ll u , ll v, ll mod=MOD){
    return ((u%mod)*(v%mod))%mod;
}
ll add(ll u, ll v, ll mod=MOD){
    return ((u%mod)+(v%mod))%mod;
}

ll sub(ll u, ll v , ll mod=MOD){
    return ((u%mod)-(v%mod)+mod)%mod;
}

ll powe(ll u, ll v, ll mod=MOD){
    ll ans=1;
    ll acc=u;   
    while(v){
        if(v%2){
            ans=mul(ans,acc,mod);
        }
        acc = mul(acc,acc,mod);
        v/=2;
    }
    return ans;
}


ll n,m; 
string S;
string T;
ll dp[3005][3005];
ll res=0;

ll solve(ll i, ll j){
    if(i==n-1){
        if(j>=m)return 1;
        ll num = i-j;
        if(S[i]==T[j] )return 1;
        return 0 ;
    }
    if(dp[i][j]>=0)return dp[i][j];
    if(j>=m){

        return dp[i][j]=mul(2,solve(i+1,j));
    }

    ll ans=0;
    if(S[i]==T[j]){
        //cout << i << " " << j << endl;
        ans=add(ans,solve(i+1,j+1));
    }
    ll num = i-j;
    if(n-(num)-1<m){
        if(S[i]==T[n-num-1]){
            ans=add(ans,solve(i+1,j));
        }
    }else{
        ll x = solve(i+1,j);
        if(j==0)res=add(res,x);
        ans=add(ans,x);
    }
    //cout << i << " " << j <<  " " << ans << endl;
    return dp[i][j]=ans;
}



int main(){
    FAST;
    //freopen("easy.txt","r",stdin);
    memset(dp,-1,sizeof(dp));
    cin >> S ;
    cin >> T;
    n=S.size();
    m=T.size();
    reverse(all(S));
    ll ans= solve(0,0);
    ans=add(ans,res);
    ans=mul(ans,2);
    cout << ans;

    return 0;
}