#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll fastexp(ll x ,ll n)
{
    ll result =1;
    while(n>0)
    {
        if(n%2==1)
            result*=x;
        x*=x;
        n=n/2;
    }
    return result;
}

ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
bool mycomp(pll &a,pll &b)
{
    if(a.F!=b.F)
        return a.F < b.F;
    else
        return a.S < b.S;
}

void solve()
{
     ll n,k;
     cin>>n>>k;
     string s;
     cin>>s;
     sort(s.begin(),s.end());
     vector<ll> mp(26);
     ll i;
     for(i=0;i<n;i++)
          mp[s[i]-'a']+=1;
     ll c1=s[0];
     ll c2=s[n-1];
     if(mp[c1-'a']>=k)
     {
          string ns;
          ns+=c1;
          mp[c1-'a']-=k;
          if(k==n)
          {
               cout<<ns<<"\n";
               return ;
          }
          char x= s[k];
          if(x==c2)
          {
               for(i=1;i<=mp[x-'a']/k;i++)
                    ns+=x;
               ll y = mp[x-'a']%k;
               if(y)
                    ns+=x;
          }
          else 
          {
               ns+=s.substr(k);
          }
          cout<<ns<<"\n";
     }
     else 
          cout<<s[k-1]<<"\n";
          

}


int main()
{
    ios;
    ll t;
    //t=1;
    cin>>t;
    while(t--)
        solve();
}