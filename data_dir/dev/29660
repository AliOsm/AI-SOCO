#pragma GCC optimize("Ofast")
#pragma GCC target("sse4")

#include <iostream>
#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <queue>
#include <ctime>

using namespace std;

#define REP(i, n) for(int (i) = 0; (i) < (n); (i)++)
#define SZ(a) (int)(a).size()
#define ALL(a) (a).begin(), (a).end()

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int n, lim;
    cin >> n >> lim;
    vector<int> v(n);
    REP(i, n) cin >> v[i];
    double res = 0;
    REP(i, n - 2) {
        int pos = upper_bound(ALL(v), v[i] + lim) - v.begin();
        --pos;
        if (pos < i + 2) continue;
        res = max(res, 1.0 * (v[pos] - v[i + 1]) / (v[pos] - v[i]));
    }
    if (res < (1e-12)) {
        cout << -1 << endl;
    } else {
        printf("%.10lf\n", res);
    }
    return 0;
}