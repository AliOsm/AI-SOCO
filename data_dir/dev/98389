#pragma optimize("Ofast")

#include <bits/stdc++.h>

using namespace std;

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;
using si = short int;
using pii = pair<int, int>;
using pll = pair<ll, ll>;

#define all(x) (x).begin(), (x).end()
#define ff first
#define ss second

// debug defines
#ifdef HOME
    int jjj;
    #define PO cout << "Pomelo" << endl;
    #define OL cout << "Oliva" << endl;
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_p(x) cout << #x << " " << x.ff << " " << x.ss << endl;
    #define debug_v(x) cout << #x << " "; for (auto ii : x) cout << ii << " "; cout << endl;
    #define debug_vp(x) cout << #x << " "; for (auto ii : x) cout << '[' << ii.ff << " " << ii.ss << ']'; cout << endl;
    #define wait() cin >> jjj;
#else
    #define PO 0
    #define OL 0
    #define debug(x) 0
    #define debug_p(x) 0
    #define debug_vp(x) 0
    #define debug_v(x) 0
    #define debug_vp(x) 0
    #define wait() 0
#endif // HOME
// end of debug defines

int _size = 1 << 17;
vector<pair<int, pair<int, int>>> tree(2 * _size, {-1, {-1, -1}});

void upd(int v, int l, int r, int fl, int fr, pair<int, pair<int, int>> ne)
{
    if (l >= fr || fl >= r || r <= l)
        return;
    if (fl <= l && r <= fr)
    {
        tree[v] = ne;
        return;
    }
    upd(v << 1, l, (r + l) >> 1, fl, fr, ne);
    upd(v << 1 | 1, (r + l) >> 1, r, fl, fr, ne);
}

pair<int, pair<int, int>> ans(int v)
{
    pair<int, pair<int, int>> t = {-1, {-1, -1}};
    v += _size;
    while (v)
    {
        t = max(t, tree[v]);
        v >>= 1;
    }
    return t;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cout.tie(0);
    cin.tie(0);

    int n, m;
    cin >> n >> m;

    vector<int> a(n), b(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    for (int i = 0; i < n; ++i)
        cin >> b[i];

    for (int i = 0; i < m; ++i)
    {
        int type;
        cin >> type;
        if (type == 1)
        {
            int l, r, k;
            cin >> l >> r >> k;
            upd(1, 0, _size, r - 1, r + k - 1, {i, {l - 1, r - 1}});
        }
        else
        {
            int l;
            cin >> l;
            --l;
            pair<int, pair<int, int>> aa = ans(l);
            if (aa.ff == -1)
            {
                cout << b[l] << '\n';
            }
            else
            {
                cout << a[aa.ss.ff + l - aa.ss.ss] << '\n';
            }
        }
    }

}

