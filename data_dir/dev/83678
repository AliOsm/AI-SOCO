#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
//#define int long long
const ll inf = 1e18;
const int mod = 1e9 + 7;
const int N = 3e5 + 5;
int n, q;
int t[4 * N];
int add[4 * N];
void push(int v){
    if(add[v]){
        t[v + v] = add[v];
        t[v + v + 1] = add[v];
        add[v + v] = add[v];
        add[v + v + 1] = add[v];
        add[v] = 0;
    }
}
void upd(int v, int tl, int tr, int l, int r, int val){
    if(l > r) return;
    if(tl == l && tr == r){
        t[v] = val;
        add[v] = val;
    }
    else{
        int tm = (tl + tr) / 2;
        push(v);
        upd(v + v, tl, tm, l, min(r, tm), val);
        upd(v + v + 1, tm + 1, tr, max(l, tm + 1), r, val);
    }
}
int get(int v, int tl, int tr, int pos){
    if(tl == tr){
        return t[v];
    }
    else{
        int tm = (tl + tr) / 2;
        push(v);
        if(pos <= tm){
            return get(v + v, tl, tm, pos);
        }
        else{
            return get(v + v + 1, tm + 1, tr, pos);
        }
    }
}
int l[N], r[N];
int a[N];
int mvr[N];
int mvl[N];
set<int> s;
int ans[N];
signed main(){
    cin >> n >> q;
    for(int i = 0; i < n; ++i){
        cin >> a[i];
        s.insert(a[i]);
    }
    int pos = -1;
    for(int i = 0; i < n; ++i){
        if(a[i] == 0){
            pos = i;
        }
    }
    if(!s.count(q) && pos == -1){
        cout << "NO" << endl;
        return 0;
    }
    if(!s.count(q)){
        a[pos] = q;
    }
    //cout << 1 << endl;
    mvr[n - 1] = n - 1;
    for(int i = n - 2; i >= 0; --i){
        if(a[i + 1] == 0){
            mvr[i] = mvr[i + 1];
        }
        else{
            mvr[i] = i;
        }
    }
    mvl[0] = 0;
    for(int i = 1; i < n; ++i){
        if(a[i - 1] == 0){
            mvl[i] = mvl[i - 1];
        }
        else{
            mvl[i] = i;
        }
    }

    for(int i = 0; i <= q; ++i){
        l[i] = n + 1;
        r[i] = -1;
    }

    for(int i = 0; i < n; ++i){
        l[a[i]] = min(l[a[i]], mvl[i]);
        r[a[i]] = max(r[a[i]], mvr[i]);
    }
    for(int i = 1; i <= q; ++i){
        //cout << l[i] << " " << r[i] << endl;
        if(l[i] <= r[i]){
            upd(1, 0, n - 1, l[i], r[i], i);
        }
    }
    //cout << endl;
    for(int i = 0; i < n; ++i){
        ans[i] = get(1, 0, n - 1, i);
    }
    for(int i = 0; i < n; ++i){
        if(a[i] != 0 && ans[i] != a[i]){
            cout << "NO" << endl;
            return 0;
        }
    }
    cout << "YES" << endl;
    for(int i = 0; i < n; ++i){
        cout << ans[i] << " ";
    }
    cout << endl;
    return 0;
}
