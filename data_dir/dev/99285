#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b>a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }
const int N = 3e5+10, M = 0, Z = 1e9 + 7, ms63 = 0x3f3f3f3f;
int n, m;
struct A
{
	int x, y, z;
	bool operator < (const A& b)const
	{
		return z < b.z;
	}
}a[N];
int v[N];
int tmpv[N];
int main()
{
	while (~scanf("%d%d", &n,&m))
	{
		for (int i = 1; i <= m; ++i)scanf("%d%d%d", &a[i].x, &a[i].y, &a[i].z);
		sort(a + 1, a + m + 1);
		MS(v, 0);
		MS(tmpv, 0);
		int ans = 0;
		for (int i = 1; i <= m; ++i)
		{
			int j = i;
			while (j < m&&a[j + 1].z == a[i].z)++j;
			for (int k = i; k <= j; ++k)gmax(tmpv[a[k].y], v[a[k].x] + 1);
			for (int k = i; k <= j; ++k)gmax(v[a[k].y], tmpv[a[k].y]), gmax(ans, tmpv[a[k].y]);
			i = j;
		}
		printf("%d\n", ans);
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【类型】


【分析】


【时间复杂度&&优化】


【数据】


*/