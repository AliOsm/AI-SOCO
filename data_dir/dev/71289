///In the name of GOD
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll MXN = 1e5 + 10;
ll n;
ll C[MXN], Sum[MXN], Max[MXN];
vector<ll> adj[MXN];
map<ll, ll> mp[MXN];
void Add(ll x, ll id, ll t){
    mp[id][x] += t;
    if(mp[id][x] > Max[id]){
        Max[id] = mp[id][x], Sum[id] = x;
    }
    else if(mp[id][x] == Max[id]) Sum[id] += x;
}
void dfs(ll u, ll par){
    Add(C[u], u, 1);
    for(auto v : adj[u]){
        if(v == par) continue;
        dfs(v, u);
        if(mp[u].size() < mp[v].size()){
            swap(mp[u], mp[v]);
            Max[u] = Max[v], Sum[u] = Sum[v];
        }
        for(auto Pr : mp[v]){
            Add(Pr.first, u, Pr.second);
        }
        mp[v].clear();
    }
}
int main(){
    ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
    cin >> n;
    for(int i = 1; i <= n; i ++) cin >> C[i];
    for(int i = 0; i < n - 1; i ++){
        ll u, v;
        cin >> u >> v;
        adj[u].push_back(v), adj[v].push_back(u);
    }
    dfs(1, 0);
    for(int i = 1; i <= n; i ++) cout << Sum[i] << ' ';
    return 0;
}
/*!
    You are under no obligation to be the same person you were a minute ago,
    You have the right to grow !
*/
//! N.N
