   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
 #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-10)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                                
                int pr[200010];
                int inv[200010];
                
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
                
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=(pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=inv[i+1]*(i+1)%mod;
                	}
                }
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
//    mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;
      
       
       
                               //----------------kokomade tenpure------------

vector<pa> VE;
vector<int> ve;
int D=550;
bool hikaku(pa3 x,pa3 y){
	int xx=x.x/D;
	int yy=y.x/D;
	if(xx!=yy) return xx<yy;
	if(xx%2==0) return x.y<y.y;
	else return !(x.y<y.y);
}

 signed main(){
 	
 
    	       cin.tie(0);
   		ios::sync_with_stdio(false);
int n;
 	cin>>n;
 	vector<pa> han(n);
 	set<pa>se;
 	map<pa,int> ma;
 	for(int i=0;i<n;i++){
 		int w;
 		han[i].first=VE.size();
 		cin>>w;
 		vector<pa> W(w);
 		for(int j=0;j<w;j++){
 			cin>>W[j].first>>W[j].second;
 		}
 		for(int j=0;j<w;j++){
 			int dx=W[(j+1)%w].first-W[j].first;
 			int dy=W[(j+1)%w].second-W[j].second;
 			
 			if(dx==0){
 				if(dy>0)dy=1;
 				else dy=-1;
 			}
 			else if(dy==0){
 				if(dx>0)dx=1;
 				else dx=-1;
 			}
 			else{
 				int g=gcd(abs(dx),abs(dy));
 				dx/=g;
 				dy/=g;
 			}
 			VE.pb(mp(dx,dy));
 			se.insert(mp(dx,dy));
 		}
 		han[i].second=VE.size();
 	
 	}
 	int cnt=0;
 	for(auto it=se.begin();it!=se.end();it++){
 		ma[*it]=cnt;
 		cnt++;
 	}
 	for(int i=0;i<VE.size();i++){
 		ve.pb(ma[VE[i]]);
 		//cout<<ma[VE[i]]<<endl;
 	}
 	
 	int Q;
 	cin>>Q;
 	
 	vector<pa3> que;
 	for(int i=0;i<Q;i++){
 		int x,y;
 		cin>>x>>y;
 	x--,y--;
 		
 		int l=han[x].first;
 		int r=han[y].second;
 			que.pb((pa3){l,r-1,i});

 	}
 	sort(que.begin(),que.end(),hikaku);
 	
 	
 	int l=0,r=-1;
 	vector<int> ans(Q);
 	vector<int> me(300020,0);
 	cnt=0;
 	for(auto v:que){
 		while(r<v.y){
 			r++;
 			me[ve[r]]++;
 			if(me[ve[r]]==1)cnt++;
 		}
 		
 		while(l>v.x){
 			l--;
 			me[ve[l]]++;
 			if(me[ve[l]]==1)cnt++;
 		}
 		while(r>v.y){
 			me[ve[r]]--;
 			if(me[ve[r]]==0)cnt--;
 			r--;
 		}
 		
 		while(l<v.x){
 			me[ve[l]]--;
 			if(me[ve[l]]==0)cnt--;
 			l++;
 		}
 		ans[v.z]=cnt;
 	}
 	
 	for(auto v:ans)cout<<v<<endl;
 	
 	
 	return 0;

 	
 	
 }