#include <bits/stdc++.h>
using namespace std;
   
#define FilesX
   
   
#define rdi(i)                  scanf("%d", &i)
#define rdii(i, j)              scanf("%d%d", &i, &j)
#define rdc(i)                  scanf(" %c", &i)
#define rep(i, v)       for(int i=0;i<sz(v);++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)              ((v).begin()), ((v).end())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)
   
typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e9;
const ll OOL = 1e18;
   
const double EPS = (1e-7);
int dcmp(double x, double y) {  return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;   }
   
#define MOD                 1000000007
#define pb                  push_back
#define MP                  make_pair
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;
   
   
const int N = 100;
   
vector<int>prime;
bool mat[1000001]={0};
void generate_primes (int n)
{
    prime.clear();
    prime.push_back(2);
    for(int i=3;i*i<=n;i+=2)
    {
        if(mat[i]==0)
        {
            for(int j=i*i; j<n;j+=2*i)
                mat[j]=1;
        }
    }
    for(int i=3;i<=n;i+=2)
        if(!mat[i]) 
            prime.push_back(i);
}

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
   
ull power(ull a, ull b){
    if(b == 0) return 1;
    if(b == 1) return a;
    ull ans = power(a, b / 2);
    ans = ans * ans;
    if(b % 2 != 0) ans *= a;
    return ans;
}



int main()
{
#ifdef Files
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    //ios::sync_with_stdio(false);
    
    int n, k; rdii(n, k);
    int vis[300000] = {0};
    k--;
    vvi g(n, vi(n));
    int start = n * n - (n - (k + 1));
    ll ans = 0;
    lp(i, n){
        g[i][k] = start;
        ans += start;
        vis[start] = 1;
        start -= (n - k);
        if(vis[start]) start--;
    }
    int s = 1;
    lpd(i, n - 1, 0){
        lp(j, k){
            while(vis[s]) s++;
            vis[s] = 1;
            g[i][j] = s;
        }
    }
    lp(i, n){
        start = g[i][k];
        start++;
        lpi(j, k + 1, n){
            g[i][j] = start;
            start++;
        }
    }
    printf("%d\n", ans);
    lp(i, n){
        lp(j, n){
            if(j) printf(" ");
            printf("%d", g[i][j]);
        }
        printf("\n");
    }
    
    return 0;
}