//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(2e3+5);
const ll mod=(ll)(998244353);
int a[maxn];
int dp[4][maxn][maxn];
int n,k;
int trans[4][4];

inline int mul(ll a,ll b)
{
    return (a*b)%mod;
}

inline int add(int a,int b)
{
    int ret=a+b;

    if(ret>=mod)
    {
        ret-=mod;
    }

    return ret;
}

inline int sub(int a,int b)
{
    int ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return ret;
}

inline int poww(ll a,ll b)
{
    int x=1,y=a;

    while(b>0)
    {
        if(b%2)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return (int)(x%mod);
}

int solve(int last,int idx,int comps)
{
    if(idx>=n)
    {
        int now=(last==0 || last==3)?1:2;

        if(comps+now==k)
        {
            return 1;
        }

        return 0;
    }

    if(dp[last][idx][comps]!=-1)
    {
        return dp[last][idx][comps];
    }

    else
    {
        int ret=0;

        for(int i=0;i<4;i++)
        {
            int now=trans[last][i]+comps;

            ret=add(ret,solve(i,idx+1,now));
        }

        dp[last][idx][comps]=ret;

        return ret;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    cin>>n>>k;

    for(int i=0;i<4;i++)
    {
        for(int j=0;j<maxn;j++)
        {
            for(int x=0;x<maxn;x++)
            {
                dp[i][j][x]=-1;
            }
        }
    }

    trans[0][3]=1;

    trans[1][0]=1;trans[1][2]=2;trans[1][3]=1;

    trans[2][0]=1;trans[2][1]=2;trans[2][3]=1;

    trans[3][0]=1;

    int res=0;

    for(int i=0;i<4;i++)
    {
        res=add(res,solve(i,1,0));
    }

    cout<<res<<endl;

    return 0;
}
