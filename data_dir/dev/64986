#include <bits/stdc++.h>

using namespace std;

int main()
{
    int n, l, r, m, l1, r1, m1;
    long long x, k, z, ans = 0;
    cin >> n >> x >> k;
    vector <long long> b(n);
    vector <long long> a;
    vector <long long> c;
    vector <long long> sum;

    for (int i = 0; i < n; i++)
        cin >> b[i];

    sort(b.begin(), b.end());

    for (int i = 0; i < n; i++)
        if (a.size() == 0 || a[a.size()-1] != b[i])
        {
            a.push_back(b[i]);
            c.push_back(1);
        }
        else
            c[c.size()-1]++;

    sum.resize(a.size());
    sum[0] = c[0];

    for (int i = 1; i < a.size(); i++)
        sum[i] = sum[i-1]+c[i];

    for (int i = 0; i < a.size(); i++)
        if ((a[i] % x == 0) && (k == 1) || (a[i] % x) && (!k))
            ans += c[i]*c[i];

    for (int i = 0; i < a.size(); i++)
    {
        if (a[i] % x == 0)
            z = a[i];
        else
            z = a[i]/x*x+x;

        z += k*x;
        l = i;
        r = a.size();

        while (l < r-1)
        {
            m = (l+r)/2;

            if (a[m] < z)
                l = m;
            else
                r = m;
        }

        if (a[l] >= z || i == l)
            continue;

        z -= x;
        l1 = i;
        r1 = l;

        while (l1 < r1-1)
        {
            m1 = (l1+r1)/2;

            if (a[m1] < z)
                l1 = m1;
            else
                r1 = m1;
        }

        if (l < r1 || a[r1] < z || r1 == i)
            continue;

        ans += (sum[l]-sum[r1-1])*c[i];
    }

    cout << ans;
}