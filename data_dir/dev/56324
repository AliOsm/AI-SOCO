#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
#include <map>
// DON'T DIVIDE
// Try different approaches
using namespace std;

int n, k;
const int MAXN = 100005;
long long a[MAXN], pre[MAXN];
map<long long, long long> m;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> k;
	for(int i = 1; i <= n; i++)
	{
		cin >> a[i];
		pre[i] = pre[i - 1] + a[i];
	}

	long long ans = 0;
	m[0]++;
	for(int i = 1; i <= n; i++)
	{
		long long curr = 1;
		if(k == 1)
			ans += m[pre[i] - curr];
		else if(k == -1)
		{
			ans += m[pre[i] - curr];
			ans += m[pre[i] + curr];
		}
		else
		{
			while(curr <= 1e14)
			{
				ans += m[pre[i] - curr];
				curr *= k;
			}
		}
		m[pre[i]]++;
	}

	cout << ans << "\n";
	return 0;
}