#include <iostream>
#include <utility>
#include <algorithm>
#include<cmath>
#include<algorithm>
#include<vector>
#include<cstring>
#include <math.h>
#include <map>
#include <vector>
#include <iomanip>
#include <set>
#include <deque>
#define ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define ll long long
#define pb push_back
using namespace std;

const ll N = 1e7 + 9, OO = 1e18, M = 1e9 + 7;
typedef pair <int, int> pii;
ll p[N], cnt[N], ans[N];
ll num = 0;
bool a[N];

void pre() {
    int i, j;
    for(i = 2; i < N; i++) {
        if(!a[i])  
			p[num++] = i;
        for(j = 0; j < num && p[j] * i < N; j++){
            a[p[j] * i] = true;
            if (i % p[j] == 0) 
				break;
        }
    }
}

int main() {
	use_fast;
    pre();
    ll i, j, n, m, x, L, R;
    cin >> n;   
    memset(cnt, 0, sizeof(cnt));
    memset(ans, 0, sizeof(ans));
    for (i = 0; i < n; i++){
        cin >> x;
        cnt[x]++;
    }
    for (i = 0; i < num; i++)
        for (j = p[i]; j < N; j += p[i])
            ans[p[i]] += cnt[j];
    for (i = 0; i < N; i++)   
        ans[i] += ans[i - 1];
    cin >> m;
    while (m--){
        cin >> L >> R;
        R = min(R, N - 1);
        if (L > R) 
			cout << 0 << endl;
        else 
        	cout << ans[R] - ans[L - 1] << endl;
    }
    return 0;
}
