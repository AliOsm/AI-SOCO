/*******************************\
   Name:    REAJUL HAQUE REAYZ  |
   School:  COMILLA UNIVERSITY  |
            CSE (5TH BATCH)     |
********************************/
#include<bits/stdc++.h>
#define endl "\n"
#define inf 1<<30
#define pi acos(-1.0)
#define pb push_back
#define mp make_pair
#define ss stringstream
#define ll long long int
#define all(v) v.begin(), v.end()
#define mem(x,y) memset(x,y,sizeof(x))
#define bit_cnt(mask) __builtin_popcount(mask)
using namespace std;
#define MOD 1000000007
ll bigmod(ll n, ll r)
{
    if(r==0) return 1;
    if(r==1) return n;
    if(r%2==0)
    {
        ll ret = bigmod(n, r/2);
        return ((ret%MOD) * (ret%MOD)) % MOD;
    }
    else return ((n%MOD) * (bigmod(n,r-1)%MOD)) % MOD;
}
ll modinverse(ll a){return bigmod(a,MOD-2)%MOD;}
ll lcm(ll a, ll b) {a=abs(a); b=abs(b); return (a/__gcd(a,b))*b;}
ll gcd(ll a, ll b) {a=abs(a); b=abs(b); if(!b) return a; return __gcd(b,a%b);}
#define MAX 101
#define SIZE 10001

pair < int,int > p[MAX];
int n, a[MAX], b[MAX], dp[MAX][MAX][SIZE];
int solve(int index, int bottle, int sum){
    if(index==0){
        if(sum==0) return 0;
        return inf;
    }
    int &ret = dp[index][bottle][sum];
    if(ret != -1) return ret;
    ret = inf;
    ret = min(ret, solve(index-1, bottle, sum)+p[index].second);
    if(bottle) ret = min(ret, solve(index-1, bottle-1, max(sum-p[index].first,0)));
    return ret;
}
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0);
    cin>>n;
    for(int i=1; i<=n; i++) cin>>a[i];
    for(int i=1; i<=n; i++) cin>>b[i];
    int sum=0;
    for(int i=1; i<=n; i++)
    {
        p[i].first = b[i];
        p[i].second = a[i];
        sum += a[i];
    }
    sort(b+1, b+n+1);
    int temp=sum, i;
    for(i=n; i>0 and temp>0; i--){
        temp -= b[i];
    }
    int bottle=n-i;
    mem(dp,-1);
    cout<<bottle<<" "<<solve(n,bottle,sum)<<endl;
    return 0;
}
