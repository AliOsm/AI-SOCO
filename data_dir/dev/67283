#include <cstdio>
#include <set>
#include <algorithm>
using namespace std;
char s[200010];
char st[8];
set<int> v[128];
const int N = 1 << 18;
int b[N];
void add(int x, int k) {
	while (x < N) {
		b[x] += k;
		x += x & -x;
	}
}
int find(int x, int l = 1, int r = N) {
	for (int i = 0; i < 18; i++) {
		int np = (l + r) / 2;
		if (b[np] < x) {
			x -= b[np];
			l = np + 1;
		} else {
			r = np;
		}
	}
	return l;
}
int acc[N];
int main() {
	int n, m;
	scanf("%d%d", &n, &m);
	scanf("%s", s);
	for (int i = 0; i < n; i++) {
		v[s[i]].insert(i + 1);
		add(i + 1, 1);
	}
	for (int i = 0; i < m; i++) {
		int l, r;
		scanf("%d%d%s", &l, &r, st);
		char c = st[0];
		set<int> &w = v[c];
		int fl = find(l);
		int fr = find(r);
		set<int>::iterator pl = w.lower_bound(fl), it = pl;
		set<int>::iterator pr = w.upper_bound(fr);
		for (; it != pr; it++) {
			add(*it, -1);
		}
		w.erase(pl, pr);
	}
	for (int i = 1; i <= n; i++) {
		acc[i] = acc[i&(i-1)] + b[i];
	}
	for (int i = 0; i < n; i++) {
		if (acc[i+1] - acc[i]) {
			putchar(s[i]);
		}
	}
	puts("");
	return 0;
}
