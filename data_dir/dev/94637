//IOI 2021
//this will accept, By the order of the peaky fucking blinders
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN =  1000 * 1000 + 17;

int n, m;

int r[MAXN], l[MAXN], cnt;
bool mark[MAXN];
vector<int> adj[MAXN];
set<int> s;

void dfs(int v) {
	mark[v] = true;
	for (auto i : adj[v])
		if (!mark[i])
			dfs(i);
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		int tmp;
		cin >> tmp;
		cin >> r[tmp];
		l[r[tmp]] = tmp;
	}
	for (int i = 1; i <= 2 * n; i++) {
		if (!r[i])
			continue;
		if (!s.size()) {
			s.insert(r[i]);
			continue;
		}
		auto itr = s.lower_bound(i);
		while (itr != s.end() && *itr < r[i]) {
			adj[l[*itr]].pb(i);
			adj[i].pb(l[*itr]);
			m++;
			if (m > n - 1) {
				return cout << "NO" << endl, 0;
			}
			++itr;
		}
		s.insert(r[i]);
	}
	for (int i = 1; i <= 2 * n; i++)
		if (r[i] && !mark[i])
			++cnt, dfs(i);
	if (cnt == 1 && m == n - 1)
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
	return 0;
}

/*
   Don't stare at laptop more than 20 minutes, read problem again :))))
   if you got a formula check it again
   check where you have to output 0 :D
   check if your Solution need long long
   check if you need to use modulo
   you can submit now
*/
