#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z} }

const int N = 1e5 + 5;
ll col[N], sz[N], par[N], ver[N];
vvi node;

void dfs(int v, int p)
{
	ver[v] = 1;
	sz[v] = col[v];
	par[v] = p;
	for(auto i : node[v])
	{
		if (i == p)
			continue;
		dfs(i, v);
		sz[v] += sz[i];
		ver[v] += ver[i];
	}
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;
	node = vvi(n + 1);
	rep(i, 0, n-1)
	{
		int u, v;
		cin >> u >> v;
		node[u].push_back(v);
		node[v].push_back(u);
	}

	erep(i, 1, n) cin >> col[i];

	dfs(1, 0);

	erep(i, 1, n)
	{
//		cout << ver[i] << " " << col[i] << " " << sz[i] << endl;
		bool yay = true;
		for(auto j : node[i])
		{
			if (j == par[i])
			{
				ll a = ver[1] - ver[i];
				ll b = col[1];
				ll c = sz[1] - sz[i];
//				if (i == 3)
//					cout << a << " " << b << " " << c << endl;

				if (a*b != c)
					yay = false;
			}
			else
			{
				if (ver[j] * col[j] != sz[j])
					yay = false;
			}
			if (!yay)
				break;
		}
		if (yay)
		{
			cout << "YES\n";
			cout << i << endl;
			return 0;
		}
	}

	cout << "NO";
	return 0;
}
