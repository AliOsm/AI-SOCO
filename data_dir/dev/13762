#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ll long long int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
std::vector<ll> vtr[M];
ll lvl[M],sub[M],val=0,ans=0;
void dfs(ll x,ll p,ll l=0)
{
	sub[x]=1;
	lvl[x]=l;
	for(auto u:vtr[x])
	{
		if(u!=p)
		{
			dfs(u,x,l+1);
			sub[x]+=sub[u];
		}
	}
}
void solve(ll x,ll p,ll c=0)
{
	ans=max(ans,val+c);
	for(auto u:vtr[x])
	{
		if(u!=p)
			solve(u,x,c+sub[1]-sub[u]-sub[u]);
	}
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=1;i<n;i++)
	{
		ll u,v;
		cin>>u>>v;
		vtr[u].pb(v);
		vtr[v].pb(u);
	}
	dfs(1,0);
	for(ll i=1;i<=n;i++)
		val+=sub[i];
	// cout<<val<<endl;
	solve(1,0);
	cout<<ans<<"\n";
	return 0;
}