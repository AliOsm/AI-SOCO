#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 3005
#define pb push_back
#define mp make_pair
#define INF 1000000000
#define eps 0.000000000001

using namespace std;

int n,sol=INF;
int dp1[Nmax],dp2[Nmax],ans[Nmax];

struct Edge
{
    int nod,tip;
};
vector <Edge> L[Nmax];

inline void Dfs(int nod, int tata)
{
    for(auto it : L[nod])
    {
        if(it.nod==tata) continue;
        Dfs(it.nod,nod);
        dp1[nod]+=dp1[it.nod]+it.tip;
    }
    dp2[nod]=dp1[nod];
}

inline void Dfs1(int nod, int tata, int x)
{
    ans[x]=min(ans[x],dp2[nod]);
    for(auto it : L[nod])
    {
        if(it.nod==tata) continue;
        int cnod=dp2[nod],cit=dp2[it.nod];
        dp2[nod]-=dp2[it.nod]+it.tip;
        dp2[it.nod]+=dp2[nod]+(1-it.tip);
        Dfs1(it.nod,nod,x);
        dp2[nod]=cnod; dp2[it.nod]=cit;
    }
}

inline void Solve(int nod)
{
    int sum=0,min1=INF,min2=INF,val,cnt=0,i;
    for(i=1;i<=n;++i)
    {
        dp1[i]=dp2[i]=0;
        ans[i]=INF;
    }
    for(auto it : L[nod])
    {
        Dfs(it.nod,nod);
        Dfs1(it.nod,nod,it.nod);
        dp1[it.nod]+=it.tip;
        sum+=dp1[it.nod];
        ans[it.nod]+=1-it.tip;
        if(ans[it.nod]-dp1[it.nod]<min1)
        {
            min2=min1; min1=ans[it.nod]-dp1[it.nod];
        }
        else
            if(ans[it.nod]-dp1[it.nod]<min2)
                min2=ans[it.nod]-dp1[it.nod];
        val=ans[it.nod]; ++cnt;
    }
    if(cnt>1) val=sum+min1+min2;
    sol=min(sol,val);
}

int main()
{
    int i,j,x,y;
    Edge w;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n;
    for(i=1;i<n;++i)
    {
        cin>>x>>y;
        w.nod=y; w.tip=0; L[x].pb(w);
        w.nod=x; w.tip=1; L[y].pb(w);
    }
    for(i=1;i<=n;++i) Solve(i);
    cout<<sol;
    return 0;
}
