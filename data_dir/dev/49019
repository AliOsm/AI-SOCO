#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll N=2e5+5;

const ll Q=2e5+5;
const ll SZ=sqrt(N)+1;
struct data{
    ll l,r,idx;
    bool operator < (data &a){
        ll b1 = l/SZ;
        ll b2 = a.l/SZ;
        if(b1!=b2)return b1<b2;
        return (b1&1)?r<a.r:r>a.r;
    }
}qr[Q];
const ll M=1e6+5;
ll n,q,cur,a[N],ans[N],freq[M];
void add(ll x){
    cur-=freq[x]*freq[x]*x;
    freq[x]++;
    cur+=freq[x]*freq[x]*x;
}
void del(ll x){
    cur-=freq[x]*freq[x]*x;
    freq[x]--;
    cur+=freq[x]*freq[x]*x;
}
void mo_sqrt(){
    sort(qr+1,qr+q+1);
    ll l=1,r=0;
    cur=0;
    for(ll i=1;i<=q;i++){
        while(l<qr[i].l)del(a[l++]);
        while(l>qr[i].l)add(a[--l]);
        while(r<qr[i].r)add(a[++r]);
        while(r>qr[i].r)del(a[r--]);
        ans[qr[i].idx]=cur;
    }
}
int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    cin>>n>>q;
    for(ll i=1;i<=n;i++)cin>>a[i];
    for(ll i=1;i<=q;i++)cin>>qr[i].l>>qr[i].r,qr[i].idx=i;
    mo_sqrt();
    for(ll i=1;i<=q;i++)cout<<ans[i]<<"\n";
}
