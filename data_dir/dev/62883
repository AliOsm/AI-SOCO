#include<bits/stdc++.h>
#define P(x,y) make_pair(x,y)
using namespace std;
typedef long long ll;
const int MX=(1<<18) , MXL = 18 , inf = (1<<31)-1;
int n , A[MX] , B[MX] , l1[MX] , l2[MX];
set < int > S1 , S2;
int dp1[MXL][MX] , dp2[MXL][MX];
int F(int pos , int cmd){
    int cur = pos , curmx=-inf , curmn=inf;
    for(int j = MXL-1 ; j>=0 && cur<=n ; j--){
        int aa = dp1[j][cur] , bb = dp2[j][cur];
        int t1 = max(aa , curmx) , t2 = min(bb , curmn);
        if(t1 < t2 || (cmd && t1<=t2)){
            cur += (1<<j);
            curmx = t1;
            curmn = t2;
        }
    }
    cur = min(cur , n+1);
    return cur - pos;
}
int main(){
    scanf("%d",&n);
    for(int j=1;j<=n;j++) scanf("%d",&A[j]);
    for(int j=1;j<=n;j++) scanf("%d",&B[j]);
    for(int j=1;j<=n;j++){
        dp1[0][j] = A[j];
        dp2[0][j] = B[j];
    }
    for(int j = 1 ; j< MXL ; j++){
        for(int i=1;i<=n;i++){
            dp1[j][i] = dp1[j-1][i];
            dp2[j][i] = dp2[j-1][i];
            int tt = i + (1<<(j-1));
            if(tt <= n){
                dp1[j][i] = max(dp1[j][i] , dp1[j-1][tt]);
                dp2[j][i] = min(dp2[j][i] , dp2[j-1][tt]);
            }
        }
    }
    long long ans = 0;
    for(int j=1;j<=n;j++)
        ans+=F(j , 1) - F(j , 0);
    cout<<ans<<endl;

}
