#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define scanl(a) scanf("%lld",&a)
#define scanii(a,b) scanf("%d%d",&a,&b)
#define scanll(a,b) scanf("%lld%lld",&a,&b)
#define scanlll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scani(a) scanf("%d",&a)
#define clr(a) memset(a,0,sizeof(a))
#define siz 6000007
#define pii pair<int,int>
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
ll ans;
vector<int>adj[1000];
int visited[1001][1001];
int row,col;
char input[1001][1001];
void bfs(int sx,int sy)
{
    visited[sx][sy]=1;
    queue<pii>q;
    q.push(pii(sx,sy));
    while(!q.empty())
    {
        pii top=q.front();
        q.pop();
        for(int k=0;k<4;k++)
        {
            int tx=top.first+fx[k];
            int ty=top.second+fy[k];
            if(tx>=0 && tx<row && ty>=0 && ty<col)
            {
                if(visited[tx][ty]==1 || input[tx][ty]=='#')continue;
                visited[tx][ty]=1;
                q.push(pii(tx,ty));
                ans++;
            }
        }
    }
}
ll arr[10001];
ll an[1001];
int main()
{
    int n;
    scani(n);
        for(int i=0;i<n;i++)
        {
            scanl(arr[i]);
        }
        sort(arr,arr+n);
        int r=1;
        int k=n;
        for(int i=0;i<n/2;i++)
        {
            an[r]=arr[i];
            r++;
            an[r]=arr[k-1];
            r++;
            k--;
        }
        if(n%2==1)an[r]=arr[n/2];
        int f=0;
        for(int i=1;i<=n;i++)
        {
            if(i%2==1 && i!=1)
            {
                if(an[i]>an[i-1])
                {
                    f=1;
                    break;
                }
            }
            if(i%2==0)
            {
                if(an[i]<an[i-1])
                {
                    f=1;
                    break;
                }
            }
        }
        if(f==1)printf("impossible\n");
        else
        {
            for(int i=1;i<=n;i++)
            {
                printf("%lld",an[i]);
                if(i<n)printf(" ");
            }
            printf("\n");
        }

    return 0;
}
