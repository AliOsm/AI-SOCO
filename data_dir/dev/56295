#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cmath>
using namespace std;

/*
#define cin in
#define cout out
ifstream in("input.txt");
ofstream out("output.txt");
/**/

const long long MOD = 1000000007;
long long a[123456];

long long pw(long long a, long long n)
{
	if(n == 0)
		return 1;
	if(n & 1)
		return (pw(a, n-1) * a) % MOD;
	long long b = pw(a, n>>1);
	return (b * b) % MOD;
}

int gcd(int a, int b)
{
	while(a && b)
	{
		if(a >= b) a %= b;
		else b%=a;
	}
	return a + b;
}

int main()
{
	/*for(int i = 1; i <= 30; ++i)
	{
		int b = (1 << i);
		int a = b / 3;
		if(i % 2 == 0)
			++a;
		int g = gcd(a, b);
		cout << a/g << " / " << b/g << endl;
	}*/
	int n;
	cin >> n;
	bool ok = 1;
	bool ok2 = 0;
	for(int i = 1; i <= n; ++i)
	{
		cin >> a[i];
		if(a[i] % 2 == 0)
			ok2 = 1;
		if(a[i] > 1)
			ok = 0;
	}
	if(ok)
	{
		cout << "0/1\n";
		return 0;
	}

	long long p = pw(2,a[1]);
	for(int i = 2; i <= n; ++i)
	{
		p = pw(p, a[i]);
		p %= MOD;
	}
	p *= pw(2, MOD-2);
	p %= MOD;
	long long q = p;
	if(!ok2)
		q -= 1;
	else
		q += 1;
	if(q >= MOD)
		q -= MOD;
	if(q < 0)
		q += MOD;
	q *= pw(3, MOD-2);
	q %= MOD;
	cout << q << "/" << p;

	return 0;
}
