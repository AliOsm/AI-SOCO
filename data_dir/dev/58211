#include <bits/stdc++.h>

using namespace std;

const int N = 105;
int dp[N][N][N][2];
int a[N];

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0), cout.tie(0);

  int n;
  cin >> n;
  int cnt[] = {n / 2, n / 2 + n % 2};
  int tot = 0;
  for (int i = 0; i < N; ++i) {
    for (int j = 0; j < N; ++j) {
      for (int k = 0; k < N; ++k) {
        dp[i][j][k][0] = dp[i][j][k][1] = 1e9;
      }
    }
  }
  for (int i = 1; i <= n; ++i) {
    int x;
    cin >> x;
    if (x) {
      --cnt[x & 1];
    }
    a[i] = x;
  }
  dp[0][cnt[0]][cnt[1]][0] = dp[0][cnt[0]][cnt[1]][1] = 0;
  for (int i = 1; i <= n; ++i) {
    for (int j = 0; j <= cnt[0]; ++j) {
      for (int k = 0; k <= cnt[1]; ++k) {
        for (int t = 0; t < 2; ++t) {
          if (a[i]) {
            if (t == a[i] % 2) {
              dp[i][j][k][t] = min(dp[i - 1][j][k][t], dp[i - 1][j][k][t ^ 1] + 1);
            }
          } else {
            int& cur = dp[i][j][k][t];
            if (t == 0) {
              cur = min(cur, min(dp[i - 1][j + 1][k][t], dp[i - 1][j + 1][k][t ^ 1] + 1));
            } else {
              cur = min(cur, min(dp[i - 1][j][k + 1][t], dp[i - 1][j][k + 1][t ^ 1] + 1));
            }
          }
          //cout << dp[i][j][k][t] << endl;
        }
      }
    }
  }
  cout << min(dp[n][0][0][0], dp[n][0][0][1]);

  return 0;
}