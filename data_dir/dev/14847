#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 1e9;
ll LINF = (ll)4e18;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("cities.in", "r", stdin);
	//freopen("cities.out", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n, m;
	cin >> n >> m;
	vector<set<int>> gr(n);
	set<int> q;
	forn(i, 0, n) q.insert(i);
	forn(i, 0, m) {
		int u, v;
		cin >> u >> v;
		u--;
		v--;
		gr[u].insert(v);
		gr[v].insert(u);
	}
	vector<int> ans(n);
	queue<int> qu;
	int cnt = 1;
	while (q.size()!=0) {
		int v = *q.begin();
		q.erase(v);
		qu.push(v);
		ans[v] = cnt;
		while (qu.size() != 0) {
			int u = qu.front();
			qu.pop();
			vi del;
			for (auto to : q) {
				if (!gr[u].count(to)) {
					ans[to] = ans[v];
					del.push_back(to);
					qu.push(to);
				}
			}
			for (auto t : del) {
				q.erase(t);
			}
			del.clear();
		}
		cnt++;
	}
	map<int, int> res;
	forn(i, 0, n) {
		res[ans[i]]++;
	}
	cout << cnt - 1 << endl;
	vi ANS;
	for (auto to : res) {
		ANS.push_back(to.second);
	}
	sort(all(ANS));
	forn(i, 0, cnt-1) cout << ANS[i] << " ";
	return 0;
}