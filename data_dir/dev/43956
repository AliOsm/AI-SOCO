#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define Endl endl
#define mod  1000000007
#define mkp make_pair
#define pb push_back
#define cin(n) scanf("%d",&n)
#define cout(n) printf("%d ",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
#define bitget(n) __builtin_popcountll(n)
#define maxi 500111

ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
ll intpoint(ll x1, ll y1, ll x2, ll y2) { return ( __gcd(abs(x1-x2),abs(y1-y2))+1); }
bool isvalid(ll x,ll y,ll n,ll m) { return (x>=0&&x<n&&y>=0&&y<m); }
// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
// int pp = uniform_int_distribution<int>(0, kk-1)(rng);
// ---------------------///////////////---------------------------------
// ---------------------///////////////----------------------------------
// -------------/////////////////---------------------------------///////

ll dp[5011][5011];

struct gg{
	ll first;
	ll second;
};
bool fun(gg x,gg y){
	return x.first<y.first;
}

int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    ll n;

    cin>>n;
    ll ap[n+11];

    gg ap1[n+11];
    for(ll i=0;i<n;i++){
    	cin>>ap[i];
    	ap1[i].first = ap[i];
    	ap1[i].second = i;
    }

    sort(ap1,ap1+n,fun);

    ll cnt = 1;
    ap[ap1[0].second] = cnt;

    for(ll i=1;i<n;i++){
    	if(ap1[i].first==ap1[i-1].first){
    		ap[ap1[i].second] = cnt;
    	}else{
    		cnt++;
    		ap[ap1[i].second] = cnt;
    	}
    }

    // for(ll i=0;i<n;i++){
    // 	cout<<ap[i]<<" ";
    // }
    // cout<<cnt<<" ";

    for(ll i = 1;i<=cnt;i++){
    	if(i == ap[0]){
    		dp[i][0] = 0;
    	}else{
    		dp[i][0] = 1;
    	}
    }
    ll kk = 1;
    for(ll i = 1;i<n;i++){
    	if(ap[i]==ap[i-1]){
    		continue;
    	}else{
    		ap[kk++] = ap[i];
    	}
    }
    n = kk;
    ll b[n+11];
    for(ll i=0;i<n;i++){
    	b[i] = ap[i];
    }
    reverse(b,b+n);
    
    // cout<<n<<" ";

    // for(ll i=0;i<kk;i++){
    // 	cout<<ap[i]<<" ";
    // }

    for(ll i=0;i<n;i++){
    	for(ll j=0;j<n;j++){
    		if(ap[i] == b[j]){
    			if(j==0&&i==0){
    				dp[i][j] = 1;
    			}else if(j==0){
    				dp[i][j] = 1;
    			}else if(i == 0){
    				dp[i][j] = 1;
    			}else{
    				dp[i][j] = dp[i-1][j-1]+1;
    			}
    		}else{
    			if(j==0&&i==0){
    				dp[i][j] = 0;
    			}else if(j==0){
    				dp[i][j] = dp[i-1][j];
    			}else if(i == 0){
    				dp[i][j] = dp[i][j-1];
    			}else{
    				dp[i][j] = max(dp[i][j-1],dp[i-1][j]);
    			}
    		}
    	}
    }

    cout<<(n - ((dp[n-1][n-1]+1)/2));

    return 0;
}