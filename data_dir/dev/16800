#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcounll(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 200005

int n, m;
ll a[maxn], b[maxn], d[maxn];
ll F[maxn], G[maxn];
int f1[maxn * 8], f2[maxn * 8];

void init1(int l, int r, int id){
    if(l == r){
        f1[id] = l;
        return;
    }
    int mid = (l + r) >> 1;
    init1(l, mid, id + id);
    init1(mid + 1, r, id + id + 1);
    if(F[f1[id + id]] >= F[f1[id + id + 1]]) f1[id] = f1[id + id];
    else f1[id] = f1[id + id + 1];
}

void init2(int l, int r, int id){
    if(l == r){
        f2[id] = l;
        return;
    }
    int mid = (l + r) >> 1;
    init2(l, mid, id + id);
    init2(mid + 1, r, id + id + 1);
    if(G[f2[id + id]] >= G[f2[id + id + 1]]) f2[id] = f2[id + id];
    else f2[id] = f2[id + id + 1];
}

int get1(int l, int r, int id, int u, int v){
    if(u > r || v < l) return 0;
    if(u <= l && v >= r) return f1[id];
    int mid = (l + r) >> 1;
    int A = get1(l, mid, id + id, u, v);
    int B = get1(mid + 1, r, id + id + 1, u, v);
    if(F[A] >= F[B]) return A;
    else return B;
}

int get2(int l, int r, int id, int u, int v){
    if(u > r || v < l) return 0;
    if(u <= l && v >= r) return f2[id];
    int mid = (l + r) >> 1;
    int A = get2(l, mid, id + id, u, v);
    int B = get2(mid + 1, r, id + id + 1, u, v);
    if(G[A] >= G[B]) return A;
    else return B;
}

int main(){
//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m;
    For(i, 1, n) cin >> a[i];
    For(i, 1, n) cin >> b[i];
    For(i, n + 1, n + n) b[i] = b[i - n];
    d[1] = 0;
    For(i, 1, n){
        d[i + 1] = d[i] + a[i];
    }
    For(i, n + 2, n + n + 1){
        d[i] = d[i - 1] + a[i - n - 1];
    }

    F[0] = (-1ll << 60); G[0] = 0;
    For(i, 1, n + n){
        F[i] = b[i] + b[i] - d[i];
        G[i] = b[i] + b[i] + d[i];
    }

    init1(1, n + n, 1);
    init2(1, n + n, 1);

    Rep(run, m){
        int a, b;
        cin >> a >> b;
        int l, r;
        if(a > b){
            l = b + 1;
            r = a - 1;
        } else{
            l = b + 1;
            r = a + n - 1;
        }

        int u = get1(1, n + n, 1, l, r);
        int v = get2(1, n + n, 1, l, r);

//      cout << l << " " << r << " " << u<< " " << v << endl;

        ll res = 0;
        if(u == v){
            int uu, vv;
            if(u > l){
                uu = get1(1, n + n, 1, l, u - 1);
                res = max(res, F[uu] + G[v]);
            }
            if(v < r){
                vv = get2(1, n + n, 1, v + 1, r);
                res = max(res, F[u] + G[vv]);
            }

        } else res = F[u] + G[v];
        cout << res << "\n";
    }

    return 0;
}
