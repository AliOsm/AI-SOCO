#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>
#include <numeric>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 62;
constexpr int inf = 1000000007;
constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;
const long double PI = acos(-1);

using namespace std;
typedef unsigned long long ull;
typedef long long ll;


void suzuken() {
	ll n, m, a, b; cin >> n >> m >> a >> b;
	if (a * n != b * m) {
		cout << "NO" << "\n";
		return;
	}

	vector<vector<int>> vs(n, vector<int>(m));
	vector<int> cc(m), cr(n);
	for (int i = 0; i < n; i++) {
		priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<>> pq;
		for (int j = 0; j < m; j++) pq.emplace(cc[j], j);
		for (int j = 0; j < a; j++) {
			auto t = pq.top();
			pq.pop();
			if (cc[t.second] >= b) {
				cout << "NO" << "\n";
				return;
			}
		
			cc[t.second]++;
			vs[i][t.second] = 1;
		}
	}

	cout << "YES" << "\n";
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			vs[i][j];
			cout << vs[i][j];
			if (j == m - 1) cout << "\n";
		}
	}
}

int main()
{

	cin.tie(nullptr);
	ios::sync_with_stdio(false);

	int kkt; cin >> kkt;
	while (kkt--) {
		suzuken();
	}
}