#include <bits/stdc++.h>
#define ll long long
#define all(aaa) aaa.begin(), aaa.end()
using namespace std;

const int mod = 998244353;
const int N = 1e5 + 5;
ll fac[N], inv[N];

ll bp(ll a, ll p) {
    ll r = 1;
    while (p > 0) {
        if (p & 1)
            r = r * a % mod;
        p >>= 1;
        a = a * a % mod;
    }
    return r;
}

ll c(int n, int k) {
    return fac[n] * inv[k] % mod * inv[n - k] % mod;
}

ll f(int s, int p, int u) {
    if (p == 0) {
        if (s == 0)
            return 1;
        return 0;
    }
    ll a = 0;
    for (int j = 0; j <= min(p, s / u); j++) {
        a = (a + c(p, j) * c(s - j * u + p - 1, p - 1) % mod * ((j & 1) ? -1 : 1) + mod) % mod;
    }

    return a;
}

signed main()
{
#ifdef HOME
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    fac[0] = inv[0] = 1;
    for (int i = 1; i < N; i++) {
        fac[i] = fac[i - 1] * i % mod;
        inv[i] = bp(fac[i], mod - 2);
    }

    int p, s, r;
    cin >> p >> s >> r;


    if (r == 0 && s == 0) {
        cout << bp(p, mod - 2);
        return 0;
    }

    ll Q = c(s - r + p - 1, p - 1), P = 0;


    for (int i = max(r, 1); i <= s; i++) {
        for (int j = 1; j <= s / i; j++) {
            P = (P + c(p - 1, j - 1) * f(s - j * i, p - j, i) % mod * bp(j, mod - 2)) % mod;
        }
    }

    cout << P * bp(Q, mod - 2) % mod;


    return 0;
}
