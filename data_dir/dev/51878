#include <vector>
#include <list>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#define ll long long
#define MAXC 300000
using namespace std;


vector<int> edges[MAXC+2];
int B[MAXC+2];

// (a1,b1)
// (a2,b2)
//
// (ak,bk)



pair<int,int> Solve(int par,int u) {
    
    
    int total_leaves=0;
    int ans0=0;
    int ans1=10*MAXC;
    int num_c=0;
    for(int v : edges[u]) {
        if (v == par)
            continue;
        num_c++;
        pair<int,int> nxt = Solve(u,v);
        
        total_leaves += nxt.first;
        if (B[u]==0) {
            ans0+=nxt.second-1;
        } else {
            ans1=min(ans1,nxt.first-nxt.second);
        }
    }
    
    if (total_leaves == 0) {
        return {1,1};
    }
    
    if (B[u]==0) {
        return {total_leaves,ans0+1};
    } else {
        return {total_leaves,total_leaves-ans1};
    }
}


int main() {
    int n;
    cin>>n;
    for(int i=1;i<=n;i++) {
        scanf("%d",&B[i]);
        //B[i]=rand()%2;
    }
    
    for(int i=2;i<=n;i++) {
        int f;
        scanf("%d",&f);
        //f=rand()%(i-1)+1;
        edges[i].push_back(f);
        edges[f].push_back(i);
    }
    
    pair<int,int> ans = Solve(-1,1);
    
    
    cout << ans.second << endl;
    
}
