///In the name of GOD
#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll MXN = 2e5 + 10;
int power(int a, int b){
    return (!b ? 1 : (b % 2 ? a : 1) * power(a * a, b / 2));
}
ll q, n, ans = 1, t;
ll Min1[MXN], Min2[MXN];
ll A[MXN], cnt[MXN];
vector<ll> Prm;
bool mark[MXN];
int main(){
    ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
    memset(Min1, 63, sizeof Min1);
    memset(Min2, 63, sizeof Min2);
    cin >> n;
    for(int i = 1; i <= n; i ++) cin >> A[i];
    for(int i = 2; i < MXN; i ++){
        if(mark[i]) continue;
        Prm.push_back(i);
        for(int j = 1; j * i < MXN; j ++) mark[j * i] = 1;
    }
    for(int i = 1; i <= n; i ++){
        for(auto p : Prm){
            if(p * p > A[i]) break;
            if(A[i] % p > 1) continue;
            t = 0;
            cnt[p] ++;
            while(A[i] % p == 0) A[i] /= p, t ++;
            if(t < Min1[p]) Min2[p] = Min1[p], Min1[p] = t;
            else            Min2[p] = min(Min2[p], t);
        }
        if(A[i] > 1){
            t = 1, cnt[A[i]] ++;
            if(t < Min1[A[i]])      Min2[A[i]] = Min1[A[i]], Min1[A[i]] = t;
            else                    Min2[A[i]] = min(Min2[A[i]], t);
        }
    }
    for(auto p : Prm){
        if(cnt[p] == 0) continue;
        if(cnt[p] <= n - 2) Min1[p] = Min2[p] = 0;
        else if(cnt[p] == n - 1){
            t = 0;
            if(t < Min1[p]) Min2[p] = Min1[p], Min1[p] = t;
            else            Min2[p] = min(Min2[p], t);
        }
        ans *= power(p, Min2[p]);
    }
    cout << ans;
    return 0;
}
/*!
    I CHOOSE TO HAVE FAITH,
    BECAUSE WITHOUT THAT,
    I HAVE NOTHING....
    ITS THE ONLY THING THAT'S KEEPING ME GOING.
*/
//! N.N
