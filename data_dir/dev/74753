#include <iostream>
#include <cmath>

using namespace std;

typedef long long int ll;

void minimiza(int &a,int b)
{
  a=min(a,b);
}

void minimiza(ll &a,ll b)
{
  a=min(a,b);
}

const int primero=1<<17;
const int tope=1<<18;

int minimo[tope];

void inserta(int pos,int val)
{
  pos+=primero;
  minimo[pos]=val;
  while (pos>1) {
    pos/=2;
    minimo[pos]=min(minimo[2*pos],minimo[2*pos+1]);
  }
}

int minimoentre(int pos0,int pos1)
{
  pos0+=primero;
  pos1+=primero;
  if (pos0==pos1) return minimo[pos0];
  int mini=min(minimo[pos0],minimo[pos1]);
  while (pos0+1<pos1) {
    if (pos0%2==0) minimiza(mini,minimo[pos0+1]);
    pos0/=2;
    if (pos1%2==1) minimiza(mini,minimo[pos1-1]);
    pos1/=2;
  }
  return mini;
}

int n,c;
int a[tope];
ll suma[tope];
ll sol[tope];

int main()
{
  ios::sync_with_stdio(false);
  cin>>n>>c;
  for (int i=1;i<=n;i++) {
    cin>>a[i];
    inserta(i,a[i]);
    suma[i]=suma[i-1]+a[i];
  }
  for (int i=1;i<=n;i++) {
    sol[i]=sol[i-1]+a[i];
    if (i>=c) minimiza(sol[i],sol[i-c]+suma[i]-suma[i-c]-minimoentre(i-c+1,i));
  }
  cout<<sol[n]<<endl;
}
