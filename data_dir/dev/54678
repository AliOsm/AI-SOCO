#include<bits/stdc++.h>
#define y1 asdasd
#define next adasdasdasd
#define mp make_pair
#define next nastupniio

using namespace std;

multiset<int> s;
vector<int> v[1000001];
vector<int> v1[1000001];
int pref[1000001];
int suf[1000001];
int a[1000001];
int tree[1000001];
int n;

void make(int x,int l,int r)
{
    if(l==r)
    {
        tree[x]=a[l];
        return;
    }
    int u=(l+r)>>1;
    make(x+x,l,u);
    make(x+x+1,u+1,r);
    tree[x]=min(tree[x+1+x],tree[x+x]);
}

int get(int x,int l,int r,int ll,int rr)
{
    if(l>rr || r<ll)return 1000000001;
    if(l>=ll && r<=rr)return tree[x];
    int u=(l+r)/2;
    return min(get(x+x,l,u,ll,rr),get(x+x+1,u+1,r,ll,rr));
}
int sz;

set<int> ss;
vector<pair<int,int> >vv;

main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin>>n;
    ///n=200000;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
        vv.push_back(make_pair(a[i],i));
    }
    ss.insert(0);
    ss.insert(n+1);
    sort(vv.begin(),vv.end());
    int i=0;
    while(i<vv.size())
    {
        int j=i;
        while(j<vv.size() && vv[i].first==vv[j].first )
        {
            ++j;
        }
        for(int i1=i;i1<j;i1++)
        {
            set<int>::iterator it=ss.lower_bound(vv[i1].second);
            set<int>::iterator it1=it;
            --it1;
            int cur=(*it)-(*it1)-1;
            v[1].push_back(vv[i1].first);
            v1[cur+1].push_back(vv[i1].first);
            ///cout<<vv[i1].second<<' '<<cur<<endl;
        }
        for(int i1=i;i1<j;i1++)ss.insert(vv[i1].second);
        i=j;
    }
    ///for(int i=1;i<=n;i++)a[i]=1;

    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<v[i].size();j++)s.insert(-v[i][j]);
        for(int j=0;j<v1[i].size();j++)s.erase(s.lower_bound(-v1[i][j]));
        cout<<-*(s.begin())<<' ';
    }
}
