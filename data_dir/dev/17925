#include <bits/stdc++.h>
using namespace std;
#define pb  push_back
#define ll  long long
#define vi  vector<int>
#define vvi vector<vi >
#define all(x) x.begin(), x.end()

int inf = 1e8;
int n;
vi  a;

void solve() {
    cin >> n;
    a.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    int al = (1 << n) - 1;
    vector<vvi > dp(al + 1, vvi(n + 1, vi(n + 1, inf)));
    vector<vvi > pi = dp;
    vector<vvi > pm = dp;
    dp[0][0][0] = 0;
    vi sum(al + 1, 0);
    for (int ma = 0; ma <= al; ++ma) {
        for (int i = 0; i < n; ++i)
            if ((ma >> i) % 2)
                sum[ma] += a[i];
    }
    for (int ma = 0; ma < al; ++ma) {
        for (int nu = 0; nu < n; ++nu) {
            for (int in = 0; in < n; ++in) {
                if (dp[ma][nu][in] == inf) continue;
                if (in && (ma >> (in - 1)) % 2 == 0)
                    continue;
                int am = al ^ ma;
                for (int mm = am; mm; mm = (mm - 1) & am) {
                    if (sum[mm] <= dp[ma][nu][in]) continue;
                    int ii = in + 1;
                    while (ii <= n && (mm >> (ii - 1)) % 2 == 0) ++ii;
                    if (ii > n) continue;
                    if (sum[mm] >= dp[ma ^ mm][nu + 1][ii]) continue;
                    dp[ma ^ mm][nu + 1][ii] = sum[mm];
                    pi[ma ^ mm][nu + 1][ii] = in;
                    pm[ma ^ mm][nu + 1][ii] = ma;
                }
            }
        }
    }
    int NU = 0, IN, MA = al;
    for (int nu = 1; nu <= n; ++nu) {
        for (int in = 1; in <= n; ++in) {
            if (dp[al][nu][in] == inf) continue;
            if (nu > NU) {
                NU = nu;
                IN = in;
            }
        }
    }
    cout << n - NU << "\n";
    vi z, w;
    while (al) {
        int ma_ = pm[MA][NU][IN];
        int in_ = pi[MA][NU][IN];
        int nu_ = NU - 1;
        z.pb(ma_ ^ MA);
        w.pb(IN - 1);
        al ^= z.back();
        MA = ma_;
        IN = in_;
        NU = nu_;
    }
    vi I(n);
    for (int i = 0; i < n; ++i)
        I[i] = i;
    for (int e = 0; e < z.size(); ++e) {
        int ma = z[e];
        int in = w[e];
        for (int i = 0; i < n; ++i) {
            if (i == in || (ma >> i) % 2 == 0) continue;
            cout << 1 + I[i] << " " << 1 + I[in] << "\n";
            for (int j = i; j < n; ++j)
                --I[j];
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);
    int t; cin >> t;
    while (t--)
        solve();

    return 0;
}