// In the name of Allah.
// We're nothing and you're everything.
// Ya Ali!
 
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
 
const int maxn = 1e6 + 17;
int n, m, x[maxn], y[maxn], c[maxn];
ll sina[maxn << 2]; // moji segment tree style
pair<ll, int> iman[maxn << 2];
vector<int> mp;
pair<ll, int> val(int id){  return {iman[id].first + sina[id], iman[id].second};  }
void majid(int st, int en, int v, int l = 0, int r = mp.size() + 1, int id = 1){
	if(st <= l && r <= en){
		sina[id] += v;
		return ;
	}
	if(en <= l || r <= st)  return ;
	int mid = l + r >> 1;
	majid(st, en, v, l, mid, id << 1), majid(st, en, v, mid, r, id << 1 | 1);
	iman[id] = max(val(id << 1), val(id << 1 | 1));
}
void build(int l = 0, int r = mp.size() + 1, int id = 1){
	iman[id].second = l;
	if(r - l == 1)
		return ;
	int mid = (l + r) / 2;
	build(l, mid, id << 1);
	build(mid, r, id << 1 | 1);
}
vector<int> assign[maxn];
int mpp(int x){
	return lower_bound(mp.begin(), mp.end(), x) - mp.begin();
}
int main(){
	ios::sync_with_stdio(0), cin.tie(0);
	cin >> n;
	for(int i = 0; i < n; i++){
		cin >> x[i] >> y[i] >> c[i];
		mp.push_back(x[i]);
		mp.push_back(y[i]);
	}
	sort(mp.begin(), mp.end());
	mp.erase(unique(mp.begin(), mp.end()), mp.end());
	for(int i = 0; i < n; i++){
		if(x[i] < y[i])
			swap(x[i], y[i]);
		assign[mpp(x[i])].push_back(i);
	}
	build();
	ll ans = 0;
	int sx = 2e9, ex = 2e9;
	for(int i = 0; i < mp.size(); i++){
		majid(0, i, mp[i - 1] - mp[i]);
		for(auto j : assign[i])
			majid(0, mpp(y[j]) + 1, c[j]);
		if(iman[1].first > ans){
			ans = iman[1].first;
			ex = mp[i];
			sx = mp[iman[1].second];
		}
	}
	cout << ans << '\n' << sx << ' ' << sx << ' ' << ex << ' ' << ex << '\n';
}

