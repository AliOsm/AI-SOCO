#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <hash_map>
#include <map>
#include <hash_set>
#include <set>
#include <stack>
#include <algorithm>
#include <sstream>
#include <queue>
#include <math.h>
using namespace std;
typedef long long LL;
#define mems(arr, val) memset(arr, val, sizeof(arr));
#define all(A) A.begin(), A.end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define INF 2000000000
#define SIZE 1000009
#define mp(a, b) make_pair(a, b)
const int MOD = 1000000007;

int D[5005][5005];

int rec(int x, int y, vector<int> &a, vector<int> &b)
{
	if (x == 0 || y == 0) return 0;

	int result = -1;
	
	if (a[x] == b[y])
	{
		if (D[x - 1][y - 1] == -1)
		{
			D[x - 1][y - 1] = rec(x - 1, y - 1, a, b);
		}

		result = max(result, D[x - 1][y - 1] + 1);
	}
	
	if (D[x - 1][y] == -1) D[x - 1][y] = rec(x - 1, y, a, b);
	if (D[x][y - 1] == -1) D[x][y - 1] = rec(x, y - 1, a, b);
	result = max(result, D[x - 1][y]);
	result = max(result, D[x][y - 1]);
	return result;
}

int main()
{
#ifdef MY_SOL
	freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#endif
	int n,m;
	cin>>n>>m;
	vector<int> a(n + 1);
	vector<int> b;
	forn(i, 0, n)
	{
		double tmp;
		cin>>a[i + 1]>>tmp;
	}

	b = a;
	sort(all(b));

	mems(D, -1);
	cout<<n - rec(n, n, a, b);

	return 0;
}