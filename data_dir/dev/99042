//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

int const maxn = 200005;
vector<int> primes[maxn];

int a[maxn];

vector<int> gr[maxn];

int res = 0;

vector<int> dfs(const int v = 1, const int p = -1) {
    const auto& prv = primes[a[v]];
    vector<int> dpv(prv.size(), 1);
    for (const int ne : gr[v])
    if (ne != p) {
        auto dpn = dfs(ne, v);
        for (size_t i = 0; i < dpn.size(); ++i) {
            auto fit = find(begin(prv), end(prv), primes[a[ne]][i]);
            if (fit != end(prv)) {
                auto fi = fit - begin(prv);
                res = max(res, dpn[i] + dpv[fi]);
                dpv[fi] = max(dpv[fi], 1 + dpn[i]);
            }
        }
    }
    if (a[v] != 1)
        res = max(res, *max_element(begin(dpv), end(dpv)));
    return dpv;
}

int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("out.txt", "w", stdout);
//    cout << fixed << setprecision(20);
//    ios_base::sync_with_stdio(false);

    for(int i = 2; i < maxn; ++i)
    if (primes[i].empty()) {
        for(int j = i; j < maxn; j += i)
            primes[j].push_back(i);
    }


    int n;
    cin >> n;
    for(int i = 1; i <= n; ++i)
        cin >> a[i];


    for(int i = 1; i < n; ++i) {
        int x,y;
        cin >> x >> y;
        gr[x].push_back(y);
        gr[y].push_back(x);
    }

    dfs();

    cout << res << endl;
}
