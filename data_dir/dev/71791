#include <bits/stdc++.h>

using namespace std;
const int N = 1e5 + 228;


string str[N];

map<string, int> mp[N];

int main()
{
    ios::sync_with_stdio(false);

    int n;
    cin >> n;

    for(int i = 0; i < n; i++) {
        cin >> str[i];
    }

    for(int i = 0; i < n; i++) {
        string t = str[i];
        for(int j = 0; j < t.size(); j++) {
            if(mp[i].find(t) != mp[i].end())
                mp[i][t] = min(mp[i][t], j);
            else
                mp[i][t] = j;
            t = t.substr(1, string :: npos) + t[0];
//            cout << t << " ";
        }
//        cout << "\n";
    }

    int ans = int(1e9);

    for(auto it : mp[0]) {
        int t = 0;
        string str = it.first;

        for(int j = 0; j < n; j++) {
            if(mp[j].find(str) == mp[j].end()) {
                t = (int)1e9;
                break;
            } else {
                t += mp[j][str];
            }
        }
        ans = min(ans, t);
    }

    if(ans == int(1e9)) {
        cout << "-1\n";
        return 0;
    }

    cout << ans << "\n";

    return 0;
}
