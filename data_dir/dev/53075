#include <bits/stdc++.h>

#define SZ(x) (((int)x.size()))
#define all(x) (x).begin(), (x).end()

typedef long long ll;
typedef long double ld;

using namespace std;

const ll inf = 4000000000000000000;
const int maxn = 200*1000+10;
int t, nr, ng, nb, x, pr, pg, pb;
ll ans;
vector<pair<int, int>> vec;
vector<int> r, g, b;

ll calc(ll A, ll B, ll C)
{
	return (A - B) * (A - B) + (B - C) * (B - C) + (A - C) * (A - C);
}

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cin >> t;
	for (int z = 0; z < t; z++)
	{
		ans = inf;
		r.clear();
		g.clear();
		b.clear();
		vec.clear();
		pr = pg = pb = 0;
		cin >> nr >> ng >> nb;
		for (int i = 0; i < nr; i++)
		{
			cin >> x;
			vec.push_back({x, 0});
			r.push_back(x);
		}
		for (int i = 0; i < ng; i++)
		{
			cin >> x;
			vec.push_back({x, 1});
			g.push_back(x);
		}
		for (int i = 0; i < nb; i++)
		{
			cin >> x;
			vec.push_back({x, 2});
			b.push_back(x);
		}
		sort(all(r));
		sort(all(g));
		sort(all(b));
		sort(all(vec));
		for (auto &w : vec)
		{
			if (w.second == 0)
			{
				pr++;
				if (pb < nb && pg > 0)
					ans = min(ans, calc(g[pg - 1], w.first, b[pb]));
				if (pg < ng && pb > 0)
					ans = min(ans, calc(g[pg], w.first, b[pb - 1]));
			}
			else if (w.second == 1)
			{
				pg++;
				if (pr < nr && pb > 0)
					ans = min(ans, calc(b[pb - 1], w.first, r[pr]));
				if (pb < nb && pr > 0)
					ans = min(ans, calc(b[pb], w.first, r[pr - 1]));
			}
			else
			{
				pb++;
				if (pr < nr && pg > 0)
					ans = min(ans, calc(g[pg - 1], w.first, r[pr]));
				if (pg < ng && pr > 0)
					ans = min(ans, calc(g[pg], w.first, r[pr - 1]));
			}
		}
		cout << ans << endl;
	}
	return 0;
}
