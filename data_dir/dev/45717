#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
int inf_int=1e9;
ll inf_ll=1e18;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz size()


#define pi asdafasfasfasfasf
bool debug=0;
const int MAXN=1e5+10;
ull mod=1e9+7;

string a[MAXN];
int b[MAXN];
ull h[MAXN];
ull rev[MAXN];
const int p=29;
ull get_hash(string &a)
{
    ull res=0;
    ull res1=0;
    for(char c:a)
    {
        res=res*p+c-'a'+1;
        res1=(res1*p+c-'a'+1)%mod;
    }
    return res+res1;
}
ull rev_hash(string a)
{
    ull res=0;
    ull res1=0;
    for(int i=a.sz-1;i>=0;--i)
    {
        res=res*p+a[i]-'a'+1;
        res1=(res1*p+a[i]-'a'+1)%mod;
    }
    return res+res1;
}

priority_queue<pii> q[MAXN];
void solve()
{
    int n,k;
    cin >> n >> k;
    map<ull,int> mp;
    int z=1;
    for(int i=1;i<=n;++i)
    {
        cin >> a[i]>> b[i];
        h[i]=get_hash(a[i]);
        rev[i]=rev_hash(a[i]);
        if(mp[h[i]]==0)
        {
            mp[h[i]]=z++;
        }
        int ind=mp[h[i]];
        q[ind].push({b[i],i});
    }
    vector<pii> ans;
    ll s=0;
    for(int i=1;i<=n;++i)
    {
        int x=mp[h[i]];
        int y=mp[rev[i]];
        if(x==y)
        {
            while(q[x].sz>1)
            {
                pii a=q[x].top(); q[x].pop();
                pii b=q[x].top(); q[x].pop();
                if(a.fi+b.fi>0)
                {
                    s+=a.fi+b.fi;
                    ans.pb({a.se,b.se});
                }
                else
                {
                    q[x].push(a);
                    q[x].push(b);
                    break;
                }
            }
        }
        else if(x>=1 && y>=1)
        {
            while(q[x].sz>0 && q[y].sz>0)
            {
                pii a=q[x].top(); q[x].pop();
                pii b=q[y].top(); q[y].pop();
                if(a.fi+b.fi>0)
                {
                    s+=a.fi+b.fi;
                    ans.pb({a.se,b.se});
                }
                else
                {
                    q[x].push(a);
                    q[y].push(b);
                    break;
                }

            }
        }
    }
    ll ans1=s,ans2=s;
    for(int i=1;i<=n;i++)
    {
        if(h[i]==rev[i])
        {
            int x=mp[h[i]];
            if(q[x].sz>0)
            {
                pii a=q[x].top();
                ans1=max(ans1,s+a.fi);
            }
        }
    }

    for(pii a:ans)
    {
        if(b[a.fi]<0 || b[a.se]<0)
        {
            if(h[a.fi]==h[a.se])
            {
                ans2=max(ans2,s-min(b[a.fi],b[a.se]));
            }
        }
    }
    cout <<max(ans1,ans2);

}


#define FILE "key"
int main()
{
        #ifdef zxc
            freopen("input.txt","r",stdin);
       //     freopen("output.txt","w",stdout);
        #endif // zxc

    //    freopen(FILE".in","r",stdin);
   //   freopen(FILE".out","w",stdout);

       if(!debug)
       {
            ios_base::sync_with_stdio(0);
            cin.tie(0);
            cout.tie(0);
       }

        int t=1;
         while(t--)
            solve();
        return 0;
}
