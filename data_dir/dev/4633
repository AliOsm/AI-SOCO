#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define pb push_back
#define mp make_pair
#define sf(x) scanf("%d", &x);
#define sfll(x) scanf("%I64d", &x);
#define pr(x) printf("%d ", x);

typedef long long ll;
using namespace std;
vector<int>a;
bool mem[1010][11][11];
bool can(int n, int prev, int bal) {
    if(!n) return mem[n][prev][bal] = (bal != 0);
    if(mem[n][prev][bal]) return mem[n][prev][bal];

    bool ret = 0;
    for(int i = 0; i < a.size(); i++) {
        if(a[i] == prev) continue;
        if((n % 2 && bal + a[i] > 0) || (n % 2 == 0 && bal - a[i] < 0)) ret = ret || can(n - 1, a[i], n % 2 ? bal + a[i] : bal - a[i]);
    }
    return mem[n][prev][bal] = ret;
}

vector<int>res;
void get(int n, int prev, int bal) {
    if(!n) return;
    for(int i = 0; i < a.size(); i++) {
        if(mem[n - 1][a[i]][n % 2 ? bal + a[i] : bal - a[i]]) {
            res.push_back(a[i]);
            get(n - 1, a[i], n % 2 ? bal + a[i] : bal - a[i]);
            return;
        }
    }
}

int main() {
    string s;
    while(cin >> s) {
        a.clear();
        memset(mem, 0, sizeof mem);
        
        int n;
        cin >> n;
        for(int i = 0; i < s.size(); i++) if(s[i] == '1') a.push_back(i + 1);
        
        if(!can(n,0,0)) cout << "NO\n";
        else {
            get(n, 0, 0);
            cout << "YES\n";
            for(int i = 0; i < res.size(); i++) pr(res[i]);
            printf("\n");
        }
    }
    return 0;
}
