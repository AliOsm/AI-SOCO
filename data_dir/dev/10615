#include <bits/stdc++.h>

using namespace std;

const int N = 1e3 + 5 , MOD = 1e9 + 7;
int n , m;
long long f[N];
bool light[N];

long long mul(long long a , long long b) {
    return a * b % MOD;
}

long long power(long long a , long long b) {
    if (!b) return 1;
    long long r = power(a , b / 2);
    r = mul(r , r);
    if (b&1) return mul(r , a);
    return r;
}

long long mod_inv(long long x) {
    return power(x , MOD - 2);
}

long long nCr(long long n , long long r){
    return mul(f[n] , mod_inv(mul(f[n - r] , f[r])));
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    scanf("%d%d" , &n , &m);

    int x;
    for (int i = 0 ; i < m ;i++) {
        scanf("%d" , &x);
        light[x - 1] = 1;
    }

    vector<int> info;
    for (int i = 0 ;i < n ;) {
        int cur = light[i] , cnt = 0;
        while (i < n && light[i] == cur)
            cnt++ , i++;
        info.push_back(cnt);
    }

    f[0] = 1;
    for(int i = 1 ; i < N ;i++)
        f[i] = mul(f[i - 1] , i);

    int ans = 1;

    bool cur = light[0];
    int off = n - m;
    for (int i = 0 ;i < info.size() ;i++) {
        if (!cur) {
            ans = mul(ans , nCr(off , info[i]));
            if (i != 0 && i != info.size() - 1)
                ans = mul(ans , power(2 , info[i] - 1));
            off -= info[i];
        }
        cur = !cur;
    }

    printf("%d" , ans);
}