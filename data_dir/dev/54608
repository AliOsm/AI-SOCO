//ITNOA
#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define pb push_back
const long long INF=1e9+10,MAX=2100,MOD=1e9+7;
typedef long long ll;
typedef pair<ll,ll> pii;
typedef pair<pii,ll> piii;
void OUT(long double o,int x){
	 cout<<fixed<<setprecision(x)<<o;
	 return;
}
ll dp[MAX][MAX],dp1[MAX][MAX],dp2[MAX][MAX];
int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	ll m,d;
	string a,b;
	cin>>m>>d>>a>>b;
	for(int k=1;k<10;k++){
		if(k!=d){
			if(k<=int(a[0])-int('0'))
				dp1[1][k%m]++;
			if(k<int(a[0])-int('0'))
				dp2[1][k%m]++;
			dp[1][k%m]++;
		}
	}
	for(int i=2;i<=a.size();i++){
		for(int j=0;j<m;j++){
			for(int k=0;k<10;k++){
				if((k==d&&i%2==0)||(k!=d&&i%2==1)){
					if(k<int(a[i-1])-int('0')){
						dp1[i][((j*10)+k)%m]=(dp1[i][((j*10)+k)%m]+dp1[i-1][j])%MOD;
						dp2[i][((j*10)+k)%m]=(dp2[i][((j*10)+k)%m]+dp1[i-1][j])%MOD;
					}
					else if(k==int(a[i-1])-int('0')){
						dp1[i][((j*10)+k)%m]=(dp1[i][((j*10)+k)%m]+dp1[i-1][j])%MOD;
						dp2[i][((j*10)+k)%m]=(dp2[i][((j*10)+k)%m]+dp2[i-1][j])%MOD;
					}
					else{
						dp1[i][((j*10)+k)%m]=(dp1[i][((j*10)+k)%m]+dp2[i-1][j])%MOD;
						dp2[i][((j*10)+k)%m]=(dp2[i][((j*10)+k)%m]+dp2[i-1][j])%MOD;
					}
					dp[i][((j*10)+k)%m]=(dp[i][((j*10)+k)%m]+dp[i-1][j])%MOD;
				}
			}
		}
	}
	ll ans=dp2[a.size()][0];
	for(int i=0;i<=2000;i++){
		for(int j=0;j<=2000;j++)
			dp[i][j]=0,dp1[i][j]=0,dp2[i][j]=0;
	}
	for(int k=1;k<10;k++){
		if(k!=d){
			if(k<=int(b[0])-int('0'))
				dp1[1][k%m]++;
			if(k<int(b[0])-int('0'))
				dp2[1][k%m]++;
			dp[1][k%m]++;
		}
	}
	for(int i=2;i<=b.size();i++){
		for(int j=0;j<m;j++){
			for(int k=0;k<10;k++){
				if((k==d&&i%2==0)||(k!=d&&i%2==1)){
					if(k<int(b[i-1])-int('0')){
						dp1[i][((j*10)+k)%m]=(dp1[i][((j*10)+k)%m]+dp1[i-1][j])%MOD;
						dp2[i][((j*10)+k)%m]=(dp2[i][((j*10)+k)%m]+dp1[i-1][j])%MOD;
					}
					else if(k==int(b[i-1])-int('0')){
						dp1[i][((j*10)+k)%m]=(dp1[i][((j*10)+k)%m]+dp1[i-1][j])%MOD;
						dp2[i][((j*10)+k)%m]=(dp2[i][((j*10)+k)%m]+dp2[i-1][j])%MOD;
					}
					else{
						dp1[i][((j*10)+k)%m]=(dp1[i][((j*10)+k)%m]+dp2[i-1][j])%MOD;
						dp2[i][((j*10)+k)%m]=(dp2[i][((j*10)+k)%m]+dp2[i-1][j])%MOD;
					}
					dp[i][((j*10)+k)%m]=(dp[i][((j*10)+k)%m]+dp[i-1][j])%MOD;
				}
			}
		}
	}
	cout<<(dp1[b.size()][0]-ans+MOD)%MOD;
	return 0;
}
