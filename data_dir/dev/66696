/*input
5
1
3
20
38
66

*/
 
/*
                                                    ______________
                                                          |       )
                                                          |   )   /
                                                          |______/
                                                    |     |      \
                                                    |     |   )   \
                                                    |_____|_______)
 
*/
 
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <ctime>
#include <cassert>
#include <complex>
#include <string>
#include <cstring>
#include <chrono>
#include <random>
#include <queue>
#include <bitset>
#include <iomanip>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;
 
#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
const int inf = 1034567891;
const ll LL_INF = 1234567890123456789ll;
#define PI 3.14159265
#define endl '\n'
#define F first
#define S second
#define debug(x) cout << #x << " = " << x << endl;
#define TRACE
 
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cout << name << " : " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif
 
#define out(container) for (auto it : container) cout << it << " "; cout << endl;
 
 
template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(int x, int y){ x += y; if(x >= mod) x -= mod; return x;}
inline int sub(int x, int y){ x -= y; if(x < 0) x += mod; return x;}
inline int mul(int x, int y){ return (x * 1ll * y) % mod;}
inline int powr(int a, ll b){
  int x = 1 % mod;
  while(b){
    if(b & 1) x = mul(x, a);
    a = mul(a, a);
    b >>= 1;
  }
  return x;
}
inline int inv(int a){ return powr(a, mod - 2);}

ll get(ll n) {
  return n * (n + 1) / 2;
}

ll check(ll n) {
  ll l = log(n) / log(10);
  ll ans = 0, cur = 10, prev = 1;
  for (int i = 1; i <= l; i++) {
    ll x = cur - prev;
    ll y = i * get(cur - prev);
    ans += x * i * (n - cur + 1);
    ans += y;
    prev = cur;
    cur *= 10;
  }
  l++;
  ans += l * get(n - prev + 1);
  return ans;
}

ll get2(ll l) {
  ll n = powl(10, l) - 1;
  ll ans = 0, cur = 10, prev = 1;
  for (int i = 1; i <= l; i++) {
    ll x = cur - prev;
    ans += x * i;
    prev = cur;
    cur *= 10;
  }
  return ans;
}

ll get1(ll v, ll n) {
  ll d = log(v) / log(10);
  ll low = 0, high = d + 1, mid, x = 0;
  while (low <= high) {
    mid = low + (high - low) / 2;
    if (get2(mid) >= n) {
      x = mid;
      high = mid - 1;
    } else {
      low = mid + 1;
    }
  }
  n -= get2(x - 1);
  ll a = powl(10, x - 1) - 1;
  d = n / x;
  ll r = n % x;
  ll num = a + d + (r > 0);
  r = (r - 1 + x) % x;
  string str = to_string(num);
  return (str[r] - '0');
}

int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int test;
  cin >> test;
  while (test--) {
    ll n;
    cin >> n;
    ll low = 1, high = 1e9, mid, v = 0;
    while (low <= high) {
      mid = low + (high - low) / 2;
      if (check(mid) >= n) {
        v = mid;
        high = mid - 1;
      } else {
        low = mid + 1;
      }
    }
    n -= check(v - 1);
    ll ans = get1(v, n);
    cout << ans << endl;
  }

  return 0;
}