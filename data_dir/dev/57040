#include <bits/stdc++.h>
using namespace std;
 
long long check(long long a , long long b , long long c){
    return (a-c)*(a-c)+(a-b)*(a-b)+(b-c)*(b-c);
}
 
int main(){
    ios_base::sync_with_stdio(false);
    cout.tie(NULL);
    cin.tie(NULL);
    long long t;
    cin >> t;
    while(t--){
        long long r,g,b;
        cin >> r >> g >> b;
        vector<long long> rr(r),gg(g),bb(b);
        for(long long i = 0 ; i < r ; i += 1){
            cin >> rr[i];
        }
        for(long long i = 0 ; i < g ; i += 1){
            cin >> gg[i];
        }
        for(long long i = 0 ; i < b ; i += 1){
            cin >> bb[i];
        }
        long long ans = 2000000000000000000;
        sort(rr.begin(),rr.end());
        sort(gg.begin(),gg.end());
        sort(bb.begin(),bb.end());
        for(long long i = 0 ; i < r ; i += 1){
            long long a1 = rr[i];
            auto it1 = lower_bound(gg.begin(),gg.end(),a1);
            if(it1 != gg.end()){
                long long a2 = *it1;
                auto it2 = lower_bound(bb.begin(),bb.end(),a2);
                if(it2 != bb.end()){
                    long long a3 = *it2;
                    ans = min(ans,check(a1,a2,a3));
                }
                long long p2 = it2-bb.begin();
                if(p2 != 0){
                    p2 -= 1;
                    long long a3 = bb[p2];
                    ans = min(ans,check(a1,a2,a3));
                }
            }
            long long p1 = it1-gg.begin();
            if(p1 != 0){
                p1 -= 1;
                long long a2 = gg[p1];
                auto it2 = lower_bound(bb.begin(),bb.end(),a2);
                if(it2 != bb.end()){
                    long long a3 = *it2;
                    ans = min(ans,check(a1,a2,a3));
                }
                long long p2 = it2-bb.begin();
                if(p2 != 0){
                    p2 -= 1;
                    long long a3 = bb[p2];
                    ans = min(ans,check(a1,a2,a3));
                }
            }
        }
        for(long long i = 0 ; i < g ; i += 1){
            long long a1 = gg[i];
            auto it1 = lower_bound(rr.begin(),rr.end(),a1);
            if(it1 != rr.end()){
                long long a2 = *it1;
                auto it2 = lower_bound(bb.begin(),bb.end(),a2);
                if(it2 != bb.end()){
                    long long a3 = *it2;
                    ans = min(ans,check(a1,a2,a3));
                }
                long long p2 = it2-bb.begin();
                if(p2 != 0){
                    p2 -= 1;
                    long long a3 = bb[p2];
                    ans = min(ans,check(a1,a2,a3));
                }
            }
            long long p1 = it1-rr.begin();
            if(p1 != 0){
                p1 -= 1;
                long long a2 = rr[p1];
                auto it2 = lower_bound(bb.begin(),bb.end(),a2);
                if(it2 != bb.end()){
                    long long a3 = *it2;
                    ans = min(ans,check(a1,a2,a3));
                }
                long long p2 = it2-bb.begin();
                if(p2 != 0){
                    p2 -= 1;
                    long long a3 = bb[p2];
                    ans = min(ans,check(a1,a2,a3));
                }
            }
        }
        for(long long i = 0 ; i < b ; i += 1){
            long long a1 = bb[i];
            auto it1 = lower_bound(gg.begin(),gg.end(),a1);
            if(it1 != gg.end()){
                long long a2 = *it1;
                auto it2 = lower_bound(rr.begin(),rr.end(),a2);
                if(it2 != rr.end()){
                    long long a3 = *it2;
                    ans = min(ans,check(a1,a2,a3));
                }
                long long p2 = it2-rr.begin();
                if(p2 != 0){
                    p2 -= 1;
                    long long a3 = rr[p2];
                    ans = min(ans,check(a1,a2,a3));
                }
            }
            long long p1 = it1-gg.begin();
            if(p1 != 0){
                p1 -= 1;
                long long a2 = gg[p1];
                auto it2 = lower_bound(rr.begin(),rr.end(),a2);
                if(it2 != rr.end()){
                    long long a3 = *it2;
                    ans = min(ans,check(a1,a2,a3));
                }
                long long p2 = it2-rr.begin();
                if(p2 != 0){
                    p2 -= 1;
                    long long a3 = rr[p2];
                    ans = min(ans,check(a1,a2,a3));
                }
            }
        }
        cout << ans << '\n';
    }
}