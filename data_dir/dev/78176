/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
#include <bits/stdc++.h>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))

using namespace std;

string itos(int x){
	stringstream ss;
	ss << x;
	return ss.str();
}

int n, a[1000010], root, tt;
pii res;
vector<int> near[1000010];

int dfs(int now){
	vector<int> ok;
	int &sum = a[now];
	for(auto x: near[now]){
		int st = dfs(x);
		sum += a[x];
		if(st == -1)
			return -1;
		else if(st)
			ok.push_back(st);
	}
	if(ok.size() > 1){
		res = mp(*ok.begin(), *ok.rbegin());
		return -1;
	}
	if(sum == 2*tt/3 && not ok.empty() && now != root){
		res = mp(now, ok[0]);
		return -1;
	}
	if(sum == tt/3)
		return now;
	if(not ok.empty())
		return ok[0];
	return 0;
}


int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin >> n;
	for(int i = 1; i <= n; i++){
		int v;
		cin >> v >> a[i];
		if(v == 0)
			root = i;
		else
			near[v].push_back(i);
	}
	tt = accumulate(a, a+n+1, 0);
	if(tt % 3){
		cout << -1 << endl;
		return 0;
	}
	dfs(root);
	if(res == mp(0, 0))
		cout << -1 << endl;
	else
		cout << res.first << ' ' << res.second << endl;
	return 0;
}

