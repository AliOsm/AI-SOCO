#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

using namespace std;

#define int long long
#define ll long long
//#define double long double
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()

const int INF = 1e9;
const int MB = 20;
const int MOD = 998244353;

vector<vector<pair<int, int>>> g;
vector<bool> used1, used2;
int cnt1, cnt2;
vector<int> a;
void dfs(int v) {
    used1[v] = true;
    cnt1++;
    a.push_back(v);
    for (auto& p : g[v]) {
        int id = p.second;
        int u = p.first;
        if (!used2[id]) {
            used2[id] = true;
            cnt2++;
        }
        if (!used1[u]) {
            dfs(u);
        }
    }
}
void solve() {
    int n, m;
    cin >> n >> m;
    g.resize(n);
    for (int i = 0; i < m; i++) {
        int from, to;
        cin >> from >> to;
        from--; to--;
        g[from].push_back({ to, i });
        g[to].push_back({ from, i });
    }

    used1.resize(n);
    used2.resize(m);
    int ans = 0;
    for (int i = 0; i < n; i++) {
        if (!used1[i]) {
            a.clear();
            cnt1 = 0, cnt2 = 0;
            dfs(i);
            bool good = true;
            for (int j : a) if (g[j].size() != 2) good = false;
            ans += good;
        }
    }
    cout << ans;
}


signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    //int t;
    //cin >> t;
    int t = 1;
    //srand(time(0));
    while (t--) solve();
}