/// b.cpp

# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
const pair < int , int > DD[] = {{1,0},{1,1},{0,1},{-1,1},{-1,0},{-1,-1},{0,-1},{1,-1}};
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < __typeof(v.x) > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vl vector < ll >
# define pll pair < ll , ll >
# define pii pair < int , int >
# define mp make_pair
# define db long double
# define fail puts("-1")
# define yes puts("YES")
# define no puts("NO")
# define PP puts("Possible")
# define II puts("Impossible")
# define vii vector < pii >
# define vll vector < pll >
# define pb push_back
# define pdd pair < db , db >
template < class T > T smin(T &a,T b) {if (a > b) a = b;return a;}
template < class T > T smax(T &a,T b) {if (a < b) a = b;return a;}
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n,k;
    fi>>n>>k;
    auto get = [&](int xx,int yy)
    {
        if (!(1 <= xx && xx <= n) || !(1 <= yy && yy <= n))
            return -1;
        if (xx == yy)
            return 0;
        fo << "1 " << xx << ' ' << yy << '\n';
        fflush(stdout);
        string answer;
        fi>>answer;
        return (int)(answer == "NIE");
    };
    auto go = [&](int xx,int yy)
    {
        fo << "2 " << xx << ' ' << yy << '\n';
        fflush(stdout);
        exit(0);
    };
    function < int(int,int) > g = [&](int l,int r)
    {
        if (l > r)
            return -1;
        if (l == r)
            return l;
        int m = (l + r) / 2;
        if (!get(m,m + 1))
            return g(l,m);
        else
            return g(m+1,r);
    };
    int ans = g(1,n);
    int c1 = g(1,ans - 1);
    int c2 = g(ans + 1,n);
    if (c1 == -1)
        go(c2,ans);
    else
    if (c2 == -1)
        go(c1,ans);
    else
    {
        if (get(c1,c1 - 1) <= 0 && get(c1,c1 + 1) <= 0)
            go(c1,ans);
        else
            go(c2,ans);
    }
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}
