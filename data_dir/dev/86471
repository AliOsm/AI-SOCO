#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 3e5 + 17;
ull n, m, k, x, S, Ans;
pair < ull, ull > a[MaxN];
ull c[MaxN], d[MaxN];
int main ()
{
    #ifdef DEBUG
        freopen (".in", "r", stdin);
        freopen (".out", "w", stdout);
    #endif
    scanf ("%lld%lld%lld", &n, &m, &k);
    scanf ("%lld%lld", &x, &S);
    for (int i = 1; i <= m; ++ i)
        scanf ("%lld", &a[i].f);
    for (int i = 1; i <= m; ++ i)
        scanf ("%lld", &a[i].s);
    for (int i = 1; i <= k; ++ i)
        scanf ("%lld", &c[i]);
    for (int i = 1; i <= k; ++ i)
        scanf ("%lld", &d[i]);
    Ans = x * n;
    sort (a + 1, a + m + 1);
    for (int i = 0; i <= m; ++ i)
    {
        if (a[i].s <= S)
        {
            if (a[i].f)
                Ans = min (Ans, n * a[i].f);
            ull pos = (upper_bound (d + 1, d + k + 1, S - a[i].s) - d);
            pos --;
            ull ps = lower_bound (c + 1, c + k + 1, n) - c;
            pos = min (ps, pos);
//            cout << S - a[i].s << ' ' ;
//            cout << pos << endl;
            ull y = (n - c[pos]) * a[i].f;
            if (a[i].f == 0)
                y = (n - c[pos]) * x;
    //        cout << y << endl;
            Ans = min (Ans, y);
        }
    }
    cout << Ans;
    return 0;
}
