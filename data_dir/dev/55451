#include <bits/stdc++.h>
#define FOR(i, a, b) for(int i = a; i < b; ++i)
#define ROF(i, a, b) for(int i = a; i >= b; --i)
#define SZ(x) ((int)(x).size())
using namespace std;
typedef long long i64;
typedef pair<int,int> ii;

const int MAXN = 1e5 + 7;

int n;
int val[4 * MAXN], lazy[4 * MAXN];

void update(int x, int v) {
	val[x] |= v;
	lazy[x] |= v;
}

void shift(int x) {
	update(x << 1, lazy[x]);
	update(x << 1 | 1, lazy[x]);
	lazy[x] = 0;
}

int get_and(int ql, int qr, int x = 1, int xl = 0, int xr = n) {
	if (ql >= xr || qr <= xl)
		return (1 << 30) - 1;
	if (ql <= xl && qr >= xr)
		return val[x];
	shift(x);
	int xm = (xl + xr) >> 1;
	int ret = (1 << 30) - 1;
	ret &= get_and(ql, qr, x << 1, xl, xm);
	ret &= get_and(ql, qr, x << 1 | 1, xm, xr);
	return ret;
}

void modify(int ql, int qr, int qv, int x = 1, int xl = 0, int xr = n) {
	if (ql >= xr || qr <= xl)
		return;
	if (ql <= xl && qr >= xr) {
		update(x, qv);
		return;
	}
	shift(x);
	int xm = (xl + xr) >> 1;
	modify(ql, qr, qv, x << 1, xl, xm);
	modify(ql, qr, qv, x << 1 | 1, xm, xr);
	val[x] = val[x << 1] & val[x << 1 | 1];
}

int l[MAXN], r[MAXN], q[MAXN];

int32_t main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	int m;
	cin >> n >> m;
	FOR(i, 0, m) {
		cin >> l[i] >> r[i] >> q[i];
		l[i] --;
		modify(l[i], r[i], q[i]);
	}
	FOR(i, 0, m)
		if (get_and(l[i], r[i]) != q[i]) {
			cout << "NO\n";
			return 0;
		}
	cout << "YES\n";
	FOR(i, 0, n)
		cout << get_and(i, i + 1) << " ";
	cout << "\n";
}
