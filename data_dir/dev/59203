#include <bits/stdc++.h>
using namespace std;

// why am I so weak

int n, m, k;
char s[1055], t[1055];
int dp[1001][1001][11][2];

int main() {
	scanf("%d %d %d", &n, &m, &k);
	scanf("%s", s);
	scanf("%s", t);
	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			for (int l = 1; l <= k; l++) {
				if (s[i] != t[j]) {
					if (i != 0) {
						dp[i][j][l][0] = max(dp[i - 1][j][l][0], dp[i - 1][j][l][1]);
						dp[i][j][l][0] = max(dp[i][j][l][0], dp[i - 1][j][l - 1][1]);
						if (j > 0) dp[i][j][l][0] = max(dp[i][j][l][0], dp[i][j - 1][l][0]);
						dp[i][j][l][1] = 0;
					}
					continue;	
				}
				
				dp[i][j][l][0] = dp[i][j][l][1] = 1;
				
				if (i != 0 && j != 0) {
					dp[i][j][l][1] += max(dp[i - 1][j - 1][l][1], dp[i - 1][j - 1][l - 1][0]);
					dp[i][j][l][0] += max(dp[i - 1][j - 1][l][1], dp[i - 1][j - 1][l - 1][0]);
					dp[i][j][l][0] = max(dp[i][j][l][0], dp[i - 1][j][l][0]);
				}
				if (j > 0) {
					dp[i][j][l][0] = max(dp[i][j][l][0], dp[i][j - 1][l][0]);	
				}
			}
		}
	}
	
	int res = 0;
	
	for (int i = 0; i < m; i++) res = max(res, dp[n - 1][i][k][0]);
	
	printf("%d\n", res);
	
	return 0;
}

