#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000000
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcountll(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-9
typedef pair<int, int> II;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)

#define maxn 4005

int g[maxn][maxn], G[maxn][maxn];
int m;
string s;
int M = 62;

int cal(char ch){
    if(ch >= 'a' && ch <= 'z') return ch - 'a';
    if(ch >= 'A' && ch <= 'Z') return ch - 'A' + 26;
    return ch - '0' + 52;
}

char call(int x){
    if(x < 26) return x + 'a';
    if(x < 52) return x - 26 + 'A';
    return x - 52 + '0';
}

int main()
{
//  freopen("in.txt", "r", stdin);

    int n;
    n = 4000; ms(g, 0);

    cin >> m;
    Rep(run, m){
        cin >> s;
        int a = cal(s[0]), b = cal(s[1]), c = cal(s[2]);
        int A = a * M + b, B = b * M + c;
//      cout << A << " " << B << endl;
        g[A][B]++;
    }

    vector <int> deg(n);
    vector <int> degg(n);
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; ++ j)
            {
                deg[i] += g[i][j];
                degg[i] += g[j][i];
            }
    int first = 0;
    while (!deg[first]) ++first;

    int v1 = -1, v2 = -1;
    bool bad = false;
    for (int i = 0; i < n; ++ i){
        if(deg[i] - degg[i] == 1){
            if (v1 == -1)
                v1 = i;
            else bad = true;
        }
        else if(degg[i] - deg[i] == 1){
            if(v2 == -1){
                v2 = i;
            } else bad = true;
        } else if(deg[i] - degg[i] != 0){
            bad = true;
        }
    }

    if(v1 != -1) first = v1;
    stack <int> st;
    st.push(first);
    vector<int> res;
    while (! st.empty ())
    {
        int v = st.top ();
        int i;
        for (i = 0; i <n; ++ i)
            if (g[v][i])
                break;
        if (i == n)
        {
            res.push_back (v);
            st.pop();
        }
        else
        {
            --g[v][i];
            st.push(i);
        }
    }

    for (int i = 0; i <n; ++ i)
        for (int j = 0; j <n; ++j)
            if (g[i][j])
                bad = true;

    if (bad){
        cout << "NO" << endl;
    }
    else{
        cout << "YES" << endl;
//      for(int i = 0; i < (int)(res.size()); i++) cout << res[i] << " "; cout << endl;
        for(int i = (int)(res.size()) - 1 ; i >= 0; i--){
            int A = res[i];
            int B = A / M;
            cout << call(B);
            if(i == 0){
                B = A % M;
                cout << call(B);
            }
        }
    }


    return 0;
}
