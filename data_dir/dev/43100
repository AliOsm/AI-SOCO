//                             In The Name Of Allah
#include <bits/stdc++.h>
#define ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define pb push_back
#define ll long long
#define ld long double
using namespace std; 
 
const int N = 1e5 + 100, OO = 1e8 + 100, M = 1e9 + 7, P = 6151, SQ = 450, lg = 26;
typedef pair <int, int> pii;
set <int> s[N];
vector <int> t[N];
vector <pii> v[N];
map <pii, int> mp;
map <pii, bool> mb;
bool mark[N]; 
int cl = 1;

void dfs(int x) {
	mark[x] = true;
	s[x].insert(cl);
	for(auto u : t[x])
		if(!mark[u])
			dfs(u);
}
 
void GO(int x) {
	for(auto u : v[x]) {
		t[u.ff].pb(u.ss);
		t[u.ss].pb(u.ff);
	}
	for(auto u : v[x]) {
		int a1 = u.ff, a2 = u.ss;
		if(!mark[a1]) {
			dfs(a1);
			cl++;
		}
		if(!mark[a2]) {
			dfs(a2);
			cl++;
		}
	}
	for(auto u : v[x]) {
		t[u.ff].resize(0);
		t[u.ss].resize(0);
		mark[u.ff] = 0;
		mark[u.ss] = 0;
	}
}
 
int32_t main() {
	use_fast;
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < m; i++) {
		int x, y, c;
		cin >> x >> y >> c;
		v[c].pb({x, y});
	}
	for(int i = 1; i <= m; i++) 
		GO(i);
	int q;
	cin >> q;
	while(q--) {
		int x, y;
		cin >> x >> y;
		if(s[x].size() > s[y].size())
			swap(x, y);
		if(mb[{x, y}] == true) {
			cout << mp[{x, y}] << endl;
			continue;
		}
		int h = 0;
		for(auto u : s[x]) 
			if(s[y].find(u) != s[y].end())
				h++;
		mb[{x, y}] = true;
		mp[{x, y}] = h;
		cout << h << endl;
	}
	return 0;
} 
/*
be carefull :
1- if not solve after 20 min, read again twice
2- after submit read the code again
3- fun with contest
4- ... 
*/
