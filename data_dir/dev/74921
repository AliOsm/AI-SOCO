#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for(int i = x; i < (int)(n); ++i)

int const N = 100000;
int n, m, x[N + 1], vis[N + 1 << 1], vs, R = 1;
ll an[N];
vector<pair<int, int> > g[N + 1];
bool cl[N + 1];

bool odd(int v = 1, bool c = false){
	if (vis[v] == vs){
		if (cl[v] == c)return false;
		R = v;
		return true;
	}
	vis[v] = vs;
	cl[v] = c;
	f(i, 0, g[v].size()){
		int u = g[v][i].first;
		if (odd(u, !c))return true;
	}
	return false;
}

ll gr(int v = R){
	vis[v] = vs;
	ll s = 0;
	f(i, 0, g[v].size()){
		int u = g[v][i].first, id = g[v][i].second;
		if (vis[u] == vs)continue;
		ll t = gr(u);
		an[id] += t;
		s += t;
	}
	return x[v] - s;
}

ll Z;
bool go(int v = R, bool p = false){
	vis[v << 1 | p] = vs;
	if (v == R && p)return true;
	f(i, 0, g[v].size()){
		int u = g[v][i].first, id = g[v][i].second;
		if (vis[u << 1 | p ^ 1] == vs)continue;
		if (go(u, !p)){
			an[id] += p ? -Z : Z;
			return true;
		}
	}
	return false;
}

int main(){
	scanf("%d%d", &n, &m);
	f(i, 1, n + 1)scanf("%d", x + i);
	f(i, 0, m){
		int a, b;
		scanf("%d%d", &a, &b);
		g[a].push_back(make_pair(b, i));
		g[b].push_back(make_pair(a, i));
	}
	++vs;
	if (odd()){
		++vs;
		Z = gr() >> 1;
		++vs;
		go();
	}else {
		ll a = 0, b = 0;
		f(i, 1, n + 1)if (cl[i])a += x[i]; else b += x[i];
		if (a != b) { printf("NO\n"); return 0; }
		++vs;
		gr();
	}
	printf("YES\n");
	f(i, 0, m)printf("%lld\n", an[i]);
}