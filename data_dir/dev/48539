/*
10

-1 93892 25676 0 -1 -1 -1 0 -1 69926

cddddbdada
*/
#include<bits/stdc++.h>
using namespace std;
const int MX=(157);
int n , opt[2][MX] , inf = (1<<29) ;
string str;
int prof[MX] , dp[MX][MX][MX][2];
int calc(int st , int en , int add , int flag){
    if(st > en) return opt[flag][add];
    int &ret = dp[st][en][add][flag]; if(ret != -1) return ret;
    ret = 0;
    if(flag) ret = -inf;
//    cout<<st<<' '<<en<<' '<<str.size()<<endl;
    if(str[st] == str[en])
        ret = calc(st+1 , en-1 , add+min(2 , en - st + 1) , flag);
    for(int mid = st ; mid < en ; mid++){
        if(add == 0) ret = max(ret , calc(st , mid , add , flag) + calc(mid + 1 , en , add , flag));
        else ret = max(ret , max(calc(st , mid , add , flag?flag:0) + calc(mid + 1 , en , 0 , 1) , calc(st , mid , 0 , 1) + calc(mid+1 , en , add , flag?flag:0)));
    }
    return ret;
}
int main(){
    cin>>n;
    for(int j=1;j<=n;j++){
        cin>>prof[j];
        if(prof[j] == -1)
            prof[j] = -inf;
    }
    cin>>str;
    str = "#" + str;
    //cout<<str.size()<<endl;
    opt[0][1] = max(0 , prof[1]); opt[1][1] = prof[1];
    for(int j=2;j<=n;j++){
        opt[0][j] = 0 , opt[1][j] = -inf;
        int xx = 2;
        if(j%2) xx = 1;
        for(int i = j ; i >= xx ; i-=2)
            for(int k = 0 ; k < 2 ; k++)
                opt[k][j] = max(opt[k][j], prof[i] + opt[k][j-i]);
        if(prof[1] == -inf) continue;
        int aa = prof[1] * j;
        opt[0][j] = max(opt[0][j] , aa);
        opt[1][j] = max(opt[1][j] , aa);
    }
    memset(dp , -1 , sizeof(dp));
    cout<<calc(1 , n , 0 , 0)<<endl;
}
