#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define MOD 1000000007
ll power(ll a,ll b, ll m=MOD)
{
    ll res=1;
    while(b>0)
    {
        if(b&1)
            res=(res*a)%m;
        a=(a*a)%m;
        b>>=1;
    }
    return res;
}
ll inverse(ll a,ll m=MOD)
{
    return power(a,m-2,m);
}
#define INFl 1e18
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define vvl vector<vl>
#define ii pair<int,int>
#define pll pair<ll,ll>
#define vii vector<ii>
#define F first
#define S second
#define forl(i,n) for(int i=0;i<n;i++)
#define fore(i,n) for(int i=1;i<=n;i++)
#define rforl(i,n)  for(int i=n-1;i>=0;i--)
#define rfore(i,n)  for(int i=n;i>=1;i--)
#define INF 1000000009
#define gcd(a,b) __gcd(a,b)
#define all(x)  x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define print(x)    for(auto it=x.begin();it!=x.end();it++) cout<<*it<<' '; cout<<endl;
#define printii(x)  for(auto it=x.begin();it!=x.end();it++) cout<<it->F<<' '<<it->S<<'\n'; 
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
int main()
{
    ll n,m;
    cin>>n>>m;
    vi digit;
    while(n>0)
    {
        digit.pb(n%10);
        n/=10;
    }
    n=digit.size();
    int p=(1<<n);
    vvl dp(p,vl(m,0));
    dp[0][0]=1;

    forl(mask,p-1)
    {
        forl(rem,m)
        {
            if(!dp[mask][rem])  continue;
            forl(j,n)
            {
                int nmask=mask|(1<<j);
                if(mask==nmask) continue;
                if(mask==0 && !digit[j])    continue;
                int newrem=10*rem+digit[j];
                newrem%=m;
                dp[nmask][newrem]+=dp[mask][rem];
            }
        }
    }
    ll ans=dp[p-1][0];
    vi cnt(10,0);
    for(int x:digit)   cnt[x]++;
    vl fact(20,1);
    fore(i,19)  fact[i]=fact[i-1]*i;
    forl(i,10)
        ans/=fact[cnt[i]];
    cout<<ans<<endl;
}