#include <iostream>
#include <stack>
#include <set>
#include <vector>
#include <queue>
#include <map>
#include <string.h>
#include <stdio.h>
#define sf scanf
#define pf printf
#define ll long long

#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i )

using namespace std;

int n;

int a[200020], b[200020];
int k1[200020], k2[200020], k3[200020];

ll c[200020];

void add( int t, int d )
{
	++t;
	for( int i = t; i <=n; i += i & -i )
		c[i]+=d;
	//printf("add t = %d d = %d\n",t,d);
}

int sum( int t )
{
	++t;
	int ret = 0;
	for( int i = t; i > 0; i -= i & -i )
		ret += c[i];
	//printf("find t = %d ret = %d\n",t,ret);
	return ret;
}

void init()
{
	clr( c );
	for( int i = 0; i <n; ++i )
		add( i, 1 );
}


void get( int * a, int * k )
{
	init();
	set< int > ft;
	for( int i = 0; i < n; ++i )
	{
		k[i] = sum(a[i]-1);
		add( a[i], -1 );
	}
}

set< int > nima;

int find( int k )
{
	int l = -1, r = n;
	while( l + 1 < r )
	{
		int mid = ( l + r ) >> 1;
		int index = sum( mid );
		//printf("mid = %d index = %d\n",mid, index );
		if( index > k ){
			r = mid;
		}
		else
			l = mid;
	}

//	printf("fid k = %d l = %d\n",k, l);

	add( l+1, -1 );
	return l+1;
}

int ans[200020];

void solve()
{
	clr( k1 );
	clr( k2 );
	clr( k3 );

		get( a, k1 );
		get ( b, k2 );

		/*
		for( int i = n-1; i >=0 ; --i )
		{
			int t = ( k1[i] + k2[i] ) / ( n - i );
			k3[i] = ( k3[i] + k1[i] + k2[i] ) % ( n - i );
			if( t > 0 ) k3[i-1] += t;
			//printf("i = %d k3 = %d\n",i,k3[i]);
		}
		*/

		int ix=0;  
		for(int i=n-1;i>=0;i--)  
		{  
			k3[i]=(k1[i]+k2[i]+ix)%(n-i);  
			ix=(k1[i]+k2[i]+ix)/(n-i);  
		}  

		init();

		for( int i = 0; i < n; ++i )
		{
		//	printf("%d ",k3[i]);
			ans[i] = find( k3[i] );
		}
		//printf("\n");
		for( int i = 0; i < n; ++i ) printf("%d ",ans[i]);
		printf("\n");
		
}

int main()
{
	while( cin>>n )
	{
		for( int i = 0; i < n; ++i )
			sf("%d",&a[i]);
		for( int i = 0; i < n; ++ i )
			sf("%d",&b[i]);
	}

	solve();
}