#include <bits/stdc++.h>
#ifdef BUG
    #include "debug.hpp"
#else
    #define DEBUG(var)
#endif

using namespace std;
template< class T1, class T2 > inline istream &
operator>>( istream & fin, pair< T1, T2 > & pr )
{ fin >> pr.first >> pr.second; return fin; }
template< class T0, class T1, class T2 > inline istream &
operator>>( istream & fin, tuple< T0, T1, T2 > & t )
{ fin >> get<0>(t) >> get<1>(t) >> get<2>(t); return fin; }
template< class T > inline istream &
operator>>( istream & fin, vector< T > & a ) {
for(auto & u: a) fin >> u; return fin; }
template<class T, size_t n> inline istream &
operator>>( istream & fin, array<T, n> & a ) {
for(auto & u: a) fin >> u; return fin; }
/* @@@ ----------------------------------- */

long double
probA()
{
    long double a, b;
    cin >> a >> b;

    vector<long double> out;

    int64_t k1 = (a - b) / (2 * b) - 10;

    for(int64_t k = k1; k < k1 + 21; ++k)
        if(k != 0)
        {
            long double x = (a - b) / (2.0L * k);
            if(0 < x && b <= x && 2 * k * x <= a && a <= (2 * k + 1) * x)
                out.push_back(x);
        }

    DEBUG(out);

    k1 = (a + b) / (2 * b) - 10;
    for(int64_t k = k1; k < k1 + 21; ++k)
        if(k != 0)
        {
            long double x = (a + b) / (2.0L * k);
            if(0 < x && b <= x && (2 * k - 1) * x <= a && a <= 2 * k * x)
                out.push_back(x);
        }

    DEBUG(out);
    if(out.empty()) return -1;
    return * min_element(begin(out), end(out));
}

int main( const int argc, char * argv [])
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cout <<  setprecision( 15 ) << probA();

    return EXIT_SUCCESS;
}
