#include <bits/stdc++.h>
using namespace std;

#define int            long long
#define S             second
#define F             first
#define pb            push_back
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (long long)(1e18)
#define endl          '\n'
#define mp            make_pair
#define time(s)       (double(clock()-s)/double(CLOCKS_PER_SEC))
#define debug(args...)    _F(#args, args)
#define vi            std::vector<int>
#define pii           pair<int, int> 
#define vpi           vector<pii>

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

template<typename T> void _F(const char *name, T arg1){
    cerr << name << " = " << arg1 << endl;
}template<typename T, typename... Args> void _F(const char *names, T arg1, Args... args){
    const char *name = strchr(names, ',');
    cerr.write(names, name-names) << " = " << arg1 << endl;
    _F(name+2, args...);
}
template<typename T1, typename T2> istream& operator>>(istream& in, pair<T1, T2> &q){
    in >> q.F >> q.S; return in;
}template<typename T1, typename T2> ostream& operator<<(ostream& out, pair<T1, T2> &q){
    out << q.F << " " << q.S; return out;
}template< typename T1, typename T2> pair<T1, T2> operator+(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F+p2.F, p1.S+p2.S};
}template< typename T1, typename T2> pair<T1, T2> operator-(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F-p2.F, p1.S-p2.S};
}

const int N = 5e3+1;
int dp[N][N], pre[N], x[N];
deque<int>q;

void add(int i, int j){
    while(!q.empty() && dp[j][q.back()]-pre[q.back()] >= dp[j][i]-pre[i])
        q.pop_back();
    q.push_back(i);
}

void erase(int i){
    if(q.front() == i)q.pop_front();
}

int get_min(int i){
    if(q.empty())return inf;
    return dp[i][q.front()]-pre[q.front()];
}

void solve(){
    int n, m;
    cin >> n >> m;
    int pp, cc;
    for(int i = 1; i <= n; i++){
        cin >> x[i];
        dp[0][i] = inf;
    }
    sort(x+1, x+n+1);
    vpi v;
    for(int i = 1; i <= m; i++){
        cin >> pp >> cc;
        v.pb({pp, cc});
    }
    sort(all(v));
    for(int i = 1; i <= m; i++){
        int c = v[i-1].S, p = v[i-1].F;
        for(int j = 1; j <= n; j++){
            pre[j] = pre[j-1]+abs(x[j]-p);
        }
        add(0, 0);
        for(int j = 1; j <= n; j++){
            add(j, i-1);
            if(j > c)erase(j-c-1);
            dp[i][j] = get_min(i-1)+pre[j];
        }
        while(!q.empty())
            q.pop_back();
    }
    if(dp[m][n] < inf){
        cout << dp[m][n] << endl;
    }
    else{
        cout << -1 << endl;
    }
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(12);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif
    
    //cin >> t;

    for(int i = 1; i <= t; ++i){
        solve();
    }
    //cerr << time(start);
    return 0;
}