#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 
 
int mat[305][305], dp[305][305][305], n;
 
bool valid(int x, int y){return x >= 1 and x <= n and y >= 1 and y <= n;}
 
int main(){
    cin >> n;
    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= n; j++)
            cin >> mat[i][j];
    for(int i = 1; i <= n; i++) for(int j = 1; j <= n; j++)
    for(int a = 1; a <= n; a++)
        dp[i][j][a] = -1e9;
    
    dp[1][1][1] = mat[1][1];
    
    for(int x = 1; x <= n; x++) for(int y = 1; y <= n; y++)
    for(int xx = 1; xx <= n; xx++){
        int yy = x+y-xx;
        if(x+y != xx+yy) continue;
        int aux = (x == xx ? mat[x][y] : mat[x][y] + mat[xx][yy]);
        for(int d1 = 0; d1 < 2; d1++)
            for(int d2 = 0; d2 < 2; d2++){
                int x2 = x - d1, y2 = y - (!d1);
                int xx2 = xx - d2, yy2 = yy - (!d2); 
                if(valid(x2,y2) and valid(xx2,yy2))
                    dp[x][y][xx] = max(dp[x][y][xx], dp[x2][y2][xx2] + aux);
            }
            //⁽⁼⁼⁼⁸
    }
    cout << dp[n][n][n] << endl;
        
    
    return 0;
}