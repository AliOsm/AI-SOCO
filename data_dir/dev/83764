#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define abdelrahman001 ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;
using namespace std;
ll seg[6000005],n,x[1000005],y[1000005],arr[1000005];
void update(ll node,ll s,ll e,ll ind,ll val)
{
    if(s == e)
    {
        seg[node] = val;
        return;
    }
    ll mid = s + (e-s)/2;
    if(mid >= ind)
        update(node*2,s,mid,ind,val);
    else
        update(node*2+1,mid+1,e,ind,val);
    seg[node] = max(seg[node*2],seg[node*2+1]);
}
ll query(ll node,ll s,ll e,ll l,ll r)
{
    if(r < s || l > e)
        return 0;
    if(s>=l && e<=r)
        return seg[node];
    ll mid = s + (e-s)/2;
    return max(query(node*2,s,mid,l,r),query(node*2+1,mid+1,e,l,r));
}
int main()
{
    abdelrahman001
    cin >> n;
    for(int i = 0;i<n;i++)
        cin >> x[i];
    for(int i=0,x;i<n;i++)
        cin >> x,y[x] = i;
    for(int i = 0;i<n;i++)
        arr[i] = y[x[i]];
    for(int i = 0;i<n;i++)
        update(1,0,n-1,arr[i],query(1,0,n-1,arr[i],n-1)+1);
    cout << seg[1];
    return 0;
}
