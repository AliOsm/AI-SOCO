#include <bits/stdc++.h>
using namespace std;
#define endl '\n'

const int mod = 1e9 + 7;
const int N = 1010;
int dp[10][N][N];

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,m;
    cin >> n >> m;
    for(int valA = 1; valA <= n; ++valA) {
        for(int valB = valA; valB <= n; ++valB) {
            dp[0][valA][valB] = 1;
        }
    }
    //dp[0][0][0] = 1;
    for(int pos = 1; pos <= m-1; ++pos) {
        for(int valA = 1; valA <= n; ++valA) {
            for(int valB = valA; valB <= n; ++valB) {
                int &curr = dp[pos][valA][valB];
                curr += dp[pos-1][valA][valB];
                if(curr >= mod) curr -= mod;
                assert(0 <= curr && curr < mod);
            }
        }
        for(int valA = 1; valA <= n; ++valA) {
            for(int valB = valA; valB <= n; ++valB) {
                int &curr = dp[pos][valA][valB];
                curr += dp[pos][valA-1][valB];
                if(curr >= mod) curr -= mod;
                assert(0 <= curr && curr < mod);
            }
        }
        for(int valA = 1; valA <= n; ++valA) {
            for(int valB = n; valB >= valA; --valB) {
                int &curr = dp[pos][valA][valB];
                curr += dp[pos][valA][valB+1];
                if(curr >= mod) curr -= mod;
                assert(0 <= curr && curr < mod);
            }
        }
    }
    int res = 0;
    for(int valA = 1; valA <= n; ++valA) {
        for(int valB = valA; valB <= n; ++valB) {
            res += dp[m-1][valA][valB];
            if(res >= mod) res -= mod;
        }
    }
    assert(0 <= res && res < mod);
    cout << res;
}
