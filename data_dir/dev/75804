#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 100100;
const ll mod = 1000000007;

ll mpow(ll n, ll p){
	if(p == 0) return 1;
	else{
		ll aux = mpow(n, p/2);
		aux *= aux;
		aux %= mod;
		if(p%2 == 0) return aux;
		else return (n*aux)%mod;
	}
}

ll inv(ll n){
	return mpow(n, mod - 2);
}

int a[MAX], b[MAX], accA[MAX], accB[MAX];

int main(){
	int n;
	ll m; scanf("%d %lld", &n, &m);
	REP(i, n) scanf("%d", a + i + 1);
	REP(i, n) scanf("%d", b + i + 1);
	for(int i = 1; i <= n; i++){
		accA[i] = accA[i - 1];
		accB[i] = accB[i - 1];
		if(a[i] == 0) accA[i]++;
		if(b[i] == 0) accB[i]++;
	}
	int cnt = 0;
	ll ans = 0;
	for(int i = 1; i <= n; i++){
		if(a[i] != 0 && b[i] != 0 && a[i] != b[i]){
			if(a[i] > b[i]) ans += inv(mpow(m, cnt));
			break;
		}
		if(a[i] == 0 || b[i] == 0){
			ll prod = inv(mpow(m, cnt));
			if(a[i] == 0 && b[i] == 0) prod *= ((m - 1ll)*inv(2ll*m))%mod;
			else if(a[i] == 0) prod *= ((m - b[i])*inv(m))%mod;
			else if(b[i] == 0) prod *= ((a[i] - 1)*inv(m))%mod;
			prod %= mod;
			ans += prod;
			ans %= mod;
			cnt++;
		}
	}
	printf("%lld\n", ans%mod);
}