#include <bits/stdc++.h>

using namespace std;

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0), cout.tie(0);

  int n;
  cin >> n;
  vector<int> a(n);
  long long sum = 0;
  for (int i = 0; i < n; ++i) {
    cin >> a[i];
    sum += a[i];
  }
  if (sum == 1) {
    cout << -1;
    return 0;
  }
  auto check = [&](long long d) {
    int last = 0;
    long long ans = 0, cnt = 0;
    vector<int> na = a;
    for (int i = 0; i < n; ++i) {
      a[i] %= d;
    }
    for (int i = 0; i < n; ++i) {
      if (a[i]) {
        if (cnt == 0) {
          last = i;
        }
        cnt += a[i];
      }
      if (cnt >= d) {
        auto kek = a[i];
        a[i] -= cnt - d;
        cnt = 0;
        long long l = 0, r = 0;
        long long distl = 0, distr = 0, best = 1e18;
        for (int j = last; j <= i; ++j) {
          if (a[j]) {
            r += a[j];
            distr += 1ll * a[j] * (j - last);
          }
        }
        for (int j = last; j <= i; ++j) {
          if (a[j]) {
            r -= a[j];
            l += a[j];
          }
          best = min(best, distl + distr);
          distl += l;
          distr -= r;
        }
        ans += best;
        a[i] = kek - a[i];
        --i;
      }
    }
    a = na;
    return ans;
  };
  long long res = 1e18;
  for (int x = 2; 1ll * x * x <= sum; ++x) {
    if (sum % x) {
      continue;
    }
    while (sum % x == 0) {
      sum /= x;
    }
    res = min(res, check(x));
  }
  if (sum != 1) {
    res = min(res, check(sum));
  }
  cout << res;

  return 0;
}