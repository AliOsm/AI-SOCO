#include <iostream>
#include <vector>
#include <stdio.h>
#include <tuple>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <string>
#include <map>
//#include <stack>
//#include <set>
//#include <complex>
#include <bitset>

#define INF 1000000021
#define MOD 1000000007
#define p_b push_back
#define p_p pop_back
#define p_f push_front
#define sqr(a) (a)*(a)
#define f0r(i, a, b) for(int i = a; i <= b; i ++)
#define ison(s, j) (s & (1 << j))
#define stbt(s, j) (s |= (1 << j))
#define clbt(s, j) (s &= ~(1 << j))
#define r0f(i, a, b) for(int i = a; i >= b; i --)
#define all(x) (x.begin(), x.end())
#define deb(x) cerr << #x << " = " << x << '\n'
#define N 222222
using namespace std;

typedef long double ld;
typedef long long ll;
typedef tuple<int,int,int> uch_i;
typedef tuple<ll, ll, ll> uch_l;
typedef pair<int ,int> juft_i;
typedef pair<ll, ll> juft_l;
typedef map<int, int> mp_i;
typedef map<string, int> mp_s;
typedef vector<int> v_i;
typedef vector<ll> v_l;
typedef queue<int> q_i;
typedef queue<ll> q_l;
typedef priority_queue<int> pq_i;
typedef priority_queue<ll> pq_l;

const ld pi = 2 * acos(0.0);
template<class T> bool umin(T& a, T b){if(a>b){a=b; return 1;} return 0;}
template<class T> bool umax(T& a, T b){if(a<b){a=b; return 1;} return 0;}
template<class T> T gcd(T a, T b) { return b ? gcd(b, a % b) : a;}
template<class T> T lcm(T a, T b) { return a*(b / gcd(a, b)); }
template<class T, class TT>bool pal(T a, TT n){int k=0;f0r(i,0,n/2){if(a[i]!=a[n-i-1]){k=1;break;}}return k?0:1;}

//int month[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

int main()
{
	//freopen("Ganiyev.txt", "r", stdin");
	//freopen("Asadullo.txt", "w", stdout);
	//ios::sync_with_stdio(0);
	//cin.tie(0); cout.tie(0);
	int n, pos, l, r, a, b;
	cin >> n >> pos >> l >> r;/*
	f0r(i, 1, n)
	{
		if(!(l <=i && r >= i))
		{
			a = i;
			break;
		}
	}
	r0f(i, n, 1)
	{
		if(!(l <=i && r >= i))
		{
			b = i;
			break;
		}
	}                           */
	int res = 0;
	if(l == 1 && r == n)
	{
		res = 0;
	}
	else
	if(l == 1 && pos > r)
	{
		res = pos - r + 1;
	}
	else
	if(r == n && pos < l)
	{
		res = l - pos + 1;
	}
	else
	if(pos > r)
	{
		res = pos - l + 2;
	}
	else
	if(pos < l)
	{
		res = (r - pos) + 2;
	}
	else
	{
		int q = 1e9, q1 = 1e9;
		if(l != 1)
		q = pos - l + 1;
		if(r != n)
		q += r - (pos-q+1) + 1;
		if(r!=n)
		q1 = r - pos + 1;
		if(l != 1)
		q1 += (pos+q1-1) - l+1;
		res= min(q, q1);
		if(l == 1 && r == n)
			res = 0;
	}
	cout << res;/*
	l --;
	r ++;
	int ans = 0;
	int t = pos;
	while(1)
	{
		if(l == 0)
			break;
		if(pos <= l)
		{
			ans ++;
			break;
		}
		ans ++;
		pos -= a;
	}
	pos = t;
	while(1)
	{	
		if(r == n+ 1) break;
		if(pos >= r)
		{
			ans ++;
			break;
		}
		ans ++;
		pos += b;
	}
	int res = ans;
	ans = 0;
	pos = t;
	while(1)
	{
		if(r == n+ 1) break;
		if(pos >= r)
		{
			ans ++;
			break;
		}
		ans ++;
		pos += b;
	}
	pos = t;
	while(1)
	{
		if(l == 0) break;
		if(pos <= l)
		{
			ans ++;
			break;
		}
		ans ++;
		pos -= a;
	}
	res = min(res, ans);
	cout << res;*/
	getchar();
	getchar();
	return 0;
}