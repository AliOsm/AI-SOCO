#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

const int N = 500100;

int pref2[N], suff2[N], a[N], kol[N], pref1[N], n, c;

set<int> q[N];

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    cin >> n >> c;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        pref2[i] = pref2[i-1] + (a[i] == c);
    }
    for (int i = n; i >= 1; i--){
        suff2[i] = suff2[i+1] + (a[i] == c);
    }
    int ans = pref2[n];
    for (int i = 1; i <= n; i++){
        ans = max(ans, pref2[i-1]+suff2[i+1]+1);
        pref1[i] = ++kol[a[i]];
    }

    for (int i = n; i >= 1; i--){
        if (!q[a[i]].empty()){
            ans = max(ans, pref2[i-1] - pref1[i] + 1 + *prev(q[a[i]].end())  );
        }
        q[a[i]].insert(suff2[i+1]+pref1[i]);
    }
    cout << ans;

}
