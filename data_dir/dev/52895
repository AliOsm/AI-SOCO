// Author : Mohamed Sameh
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<cmath>
#include<queue>
#include<list>
#include<stack>
#include<deque>
#include <string.h>
typedef long long ll ;
#define pb push_back
#define f first
#define s second
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define SZ(a) (int)a.size()
using namespace std ;
int sum (int a[] , int d , int sz )
{
    
    int s = -1; 
    int l =0 , r = sz-1 , m; 
    while (l <= r)
    {
        m = (l+r)>>1; 
        if (a[m] <= d )
        {
            s = m; 
            l = m+1;
        }else 
            r = m-1; 
    }
    s++; 
    s = 2 * s  + (sz-s)*3 ;   
    return s ; 
}
set <int> st ; 
int a[2*(int)1e5];
int b[2*(int)1e5];
int n , m; 

int main ()
{
    scanf ("%d" , &n); 
    for (int i =0 ; i < n ;i++)
        scanf ("%d" , a+i); 
    scanf ("%d" , &m ); 
    for (int i =0 ; i < m ;i++)
        scanf ("%d" , b+i ); 
    sort (a,a+n); 
    sort(b,b+m); 
    for (int i =0 ; i < n ;i++)
    {
        st.insert(a[i]); 
        st.insert(max (a[i] , 0 )); 
        st.insert(a[i]+1); 
    }
    for (int i =0 ; i < m ;i++)
    {
        st.insert(b[i]); 
        st.insert(max (b[i] , 0 )); 
        st.insert(b[i]+1); 
    }
    st.insert(0);
    pair <int,int> mx ; 
    
    mx.f = sum (a , 0 , n);
    mx.s = sum (b , 0 , m);
    for (auto x : st )
    {
        int A = sum (a , x , n); 
        int B = sum (b , x , m); 
        if (A - B > mx.f - mx.s ||(A > mx.f && A-B == mx.f - mx.s) )
            mx.f = A , mx.s = B ; 
            
    }
    printf ("%d:%d\n" , mx.f , mx.s );
    return 0 ;
    
    
}