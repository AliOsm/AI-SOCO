#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define F first
#define S second

#define ll long long

using namespace std;

const int N = 5e5 + 5;

const ll inf = 1e18 + 7;

ll n, m, k, ans, u[N], v[N], c[N], d[N], in[N];

bool used[N];

vector < pair < ll, ll > > g[N];

set < pair < ll, ll > > st;
  
int main ()
{                           
    ios_base :: sync_with_stdio (false);
    cin >> n >> m >> k;
  for (int i = 0;i < m;i++)
  {
    cin >> u[i] >> v[i] >> c[i];
    g[u[i]].pb (mp (v[i], c[i]));
    g[v[i]].pb (mp (u[i], c[i]));
  }
  for (int i = 1;i <= n;i++)
    d[i] = inf;
  for (int i = m;i < m + k;i++)
  {
    cin >> v[i] >> c[i];
    g[1].pb (mp (v[i], c[i]));
    g[v[i]].pb (mp (1, c[i]));
  }
  d[1] = 0;
  st.insert (mp (0, 1));
  while (st.size ())
  {
    int u = st.begin () -> S;
    st.erase (st.begin ());
    if (used[u])
        continue;
    used[u] = 1;
    for (auto to : g[u])
        if (!used[to.F] && d[to.F] > d[u] + to.S)
        {
            d[to.F] = d[u] + to.S;
            st.insert (mp (d[to.F], to.F));
        }
  }               
  for (int i = 0;i < m;i++)    
  {
    if (d[u[i]] + c[i] == d[v[i]])
        in[v[i]]++;
    if (d[v[i]] + c[i] == d[u[i]])
        in[u[i]]++;
  }
  for (int i = m;i < m + k;i++) 
    if (d[v[i]] == c[i])
        if (in[v[i]])
            ans++;
        else
            in[v[i]]++;
    else
        ans++;
  cout << ans;
    return 0;
}