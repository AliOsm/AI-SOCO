#include <bits/stdc++.h>//16:32

using namespace std;
#define DIM 200009

vector<long long >a[DIM],ta[DIM];
vector<long long>tops;

long long used[DIM],dep[DIM],c[DIM];

long long i,j,k,l,n,m,timer;

void dfs1(long long v){
    used[v]=1;
    for(int i=0;i<a[v].size();i++){
        if(used[a[v][i]]==0)dfs1(a[v][i]);
    }
    tops.push_back(v);
}

void dfs2(long long v){
    used[v]=timer;
    dep[timer]=min(dep[timer],c[v]);
    //cout<<v<<endl;
    for(int i=0;i<ta[v].size();i++){
        if(used[ta[v][i]]==0){
               // cout<<v<<' '<<ta[v][i]<<endl;
                dfs2(ta[v][i]);
        }
    }
}

long long bad[DIM];

int main()
{
    cin>>n;

    for(i=1;i<=n;i++)cin>>c[i];

    for(i=1;i<=n;i++){
        cin>>k;
        a[k].push_back(i);
        ta[i].push_back(k);
    }

    memset(used,0,sizeof(used));
    for(i=1;i<=n;i++){
        if(used[i]==0)dfs1(i);
    }
    memset(used,0,sizeof(used));
    reverse(tops.begin(),tops.end());
    for(i=0;i<tops.size();i++){
        if(used[tops[i]]==0){
            timer++;
            dep[timer]=100000000000000;
            dfs2(tops[i]);
        }
    }

    for(i=1;i<=n;i++){
        for(j=0;j<a[i].size();j++){
               // cout<<used[i]<<' '<<i<<' '<<used[a[i][j]]<<' '<<a[i][j]<<endl;
            if(used[i]!=used[a[i][j]])bad[used[a[i][j]]]=1;
        }
    }
    long long res=0;
    for(i=1;i<=timer;i++){
        if(bad[i]==0)res+=dep[i];
       // cout<<i<<' '<<bad[i]<<endl;
    }
    cout<<res<<endl;
    return 0;
}
