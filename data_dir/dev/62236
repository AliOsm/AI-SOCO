#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,b) for(int i=0;i<b;i++)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())

#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);


int n;
string str[2005];
int row1[2005],col1[2005];
int row2[2005],col2[2005];
int main()
{
    FastRead
    cin >> n;
    for(int i = 0;i < n;i++)cin >> str[i];

    int cnt = 0;
    for(int j = 0;j < n - 1;j++){
        int px = j , py = n - 1;
        while(px >= 0 and py >= 0){
            int bit = str[px][py] - '0';
            if((row1[px] + col1[py]) % 2 == 1)bit = 1 - bit;

            if(bit == 1){
                row1[px]++;
                col1[py]++;
                cnt++;
            }
            px--;py--;
        }
    }
    for(int j = 0;j < n - 1;j++){
        int px = n - 1 , py = j;
        while(px >= 0 and py >= 0){
            int bit = str[px][py] - '0';
            if((row2[px] + col2[py]) % 2 == 1)bit = 1 - bit;

            if(bit == 1){
                row2[px]++;
                col2[py]++;
                cnt++;

            }
            px--;py--;
        }
    }
    for(int j = 0;j < n;j++){
        int bit = str[j][j] - '0';
        if((row1[j] + col1[j] + row2[j] + col2[j] ) % 2 == 1)bit = 1 - bit;
        if(bit == 1)cnt++;
    }
    cout << cnt << endl;



}
