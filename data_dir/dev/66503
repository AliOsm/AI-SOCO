#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
#define pii pair<int, int>
#define endl '\n'
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int, int>
#define vpii vector<pii>
#define vvpii vector<vpii>
typedef long long ll;
typedef long double ld;
using namespace std;
template<class T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> void setmax(T& a, T b) { a = max(a, b); };
template<typename T> void setmin(T& a, T b) { a = min(a, b); };



int main() {
  ios::sync_with_stdio(0);
  cin.tie(0); cout.tie(0);

  int n, m;
  cin >> n >> m;
  vvi a(n, vi(m));
  for (auto& vec : a) {
    for (auto &x : vec) {
      cin >> x;
      --x;
    }
  }

  int sum = 0;
  for (int j = 0; j < m; j++) {
    vi target(n);
    map<int, int> pos;
    for (int i = 0; i < n; i++) {
      target[i] = i * m + j;
      pos[target[i]] = i;
    }
    vi shiftcost(n, n);
    for (int i = 0; i < n; i++) {
      if (pos.count(a[i][j])) {
        int k = pos[a[i][j]];
        if (k <= i) {
          shiftcost[i - k]--;
        } else {
          shiftcost[i + n - k]--;
        }
      }
    }
    for (int i = 0; i < n; i++) {
      shiftcost[i] += i;
    }
    sum += *min_element(shiftcost.begin(), shiftcost.end());
  }
  cout << sum << endl;
  return 0;
}