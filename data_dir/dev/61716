#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;
typedef long long LL;
const int N = 2005;
int n , m , row[N][N] , col[N][N] , tot;
char str[N][N];
int main () {
    #ifndef ONLINE_JUDGE
        freopen ("input.txt" , "r" , stdin);
    #endif
    scanf ("%d %d" , &n , &m);
    int ux = n , dx = 1, ly = m , ry = 1;
    for (int i = 1 ; i <= n ; i ++) {
        scanf ("%s" , str[i] + 1);
        for (int j = 1 ; j <= m ; j ++) {
            row[i][j] = row[i][j - 1];
            if (str[i][j] == 'w') {
                tot ++;
                row[i][j] ++;
                ux = min (ux , i);ly = min (ly , j);
                dx = max (dx , i);ry = max (ry , j);
            }
        }
    }
    for (int j = 1 ; j <= m ; j ++) {
        for (int i = 1 ; i <= n ; i ++) {
            col[i][j] = col[i - 1][j];
            if (str[i][j] == 'w')
                col[i][j] ++;
        }
    }
    if (tot <= 1) {
        for (int i = 1 ; i <= n ; i ++) {
            printf ("%s\n" , str[i] + 1);
        }
        return 0;
    }
    int lim = min (n , m);
    for (int d = 2 ; d <= lim ; d ++) {
        for (int y = 1 ; y <= m ; y ++) {
            int x = ux;
            // cout << x << " " << x + d - 1 << endl;
            if (x < 1 || y < 1 || x + d - 1 > n || y + d - 1 > m) continue;
            int t = row[x][y + d - 1] - row[x][y - 1];
            t += row[x + d - 1][y + d - 1] - row[x + d - 1][y - 1];
            t += col[x + d - 2][y] - col[x][y];
            t += col[x + d - 2][y + d - 1] - col[x][y + d - 1];
            if (t == tot) {
                for (int i = x ; i <= x + d - 1 ; i ++) {
                    if (str[i][y] == '.')
                        str[i][y] = '+';
                    if (str[i][y + d - 1] == '.')
                        str[i][y + d - 1] = '+';
                }
                for (int i = y + 1 ; i < y + d - 1 ; i ++) {
                    if (str[x][i] == '.')
                        str[x][i] = '+';
                    if (str[x + d - 1][i] == '.')
                        str[x + d - 1][i] = '+';
                }
                for (int i = 1 ; i <= n ; i ++)
                    printf ("%s\n" , str[i] + 1);
                return 0;
            }
        }
    }
    for (int d = 2 ; d <= lim ; d ++) {
        for (int y = 1 ; y <= m ; y ++) {
            int x = dx - d + 1;
            if (x < 1 || y < 1 || x + d - 1 > n || y + d - 1 > m) continue;
            int t = row[x][y + d - 1] - row[x][y - 1];
            t += row[x + d - 1][y + d - 1] - row[x + d - 1][y - 1];
            t += col[x + d - 2][y] - col[x][y];
            t += col[x + d - 2][y + d - 1] - col[x][y + d - 1];
            if (t == tot) {
                for (int i = x ; i <= x + d - 1 ; i ++) {
                    if (str[i][y] == '.')
                        str[i][y] = '+';
                    if (str[i][y + d - 1] == '.')
                        str[i][y + d - 1] = '+';
                }
                for (int i = y + 1 ; i < y + d - 1 ; i ++) {
                    if (str[x][i] == '.')
                        str[x][i] = '+';
                    if (str[x + d - 1][i] == '.')
                        str[x + d - 1][i] = '+';
                }
                for (int i = 1 ; i <= n ; i ++)
                    printf ("%s\n" , str[i] + 1);
                return 0;
            }
        }
    }
    for (int d = 2 ; d <= lim ; d ++) {
        for (int x = 1 ; x <= n ; x ++) {
            int y = ly;
            if (x < 1 || y < 1 || x + d - 1 > n || y + d - 1 > m) continue;
            int t = row[x][y + d - 1] - row[x][y - 1];
            t += row[x + d - 1][y + d - 1] - row[x + d - 1][y - 1];
            t += col[x + d - 2][y] - col[x][y];
            t += col[x + d - 2][y + d - 1] - col[x][y + d - 1];
            if (t == tot) {
                for (int i = x ; i <= x + d - 1 ; i ++) {
                    if (str[i][y] == '.')
                        str[i][y] = '+';
                    if (str[i][y + d - 1] == '.')
                        str[i][y + d - 1] = '+';
                }
                for (int i = y + 1 ; i < y + d - 1 ; i ++) {
                    if (str[x][i] == '.')
                        str[x][i] = '+';
                    if (str[x + d - 1][i] == '.')
                        str[x + d - 1][i] = '+';
                }
                for (int i = 1 ; i <= n ; i ++)
                    printf ("%s\n" , str[i] + 1);
                return 0;
            }
        }
    }
    for (int d = 2 ; d <= lim ; d ++) {
        for (int x = 1 ; x <= n ; x ++) {
            int y = ry - d + 1;;
            if (x < 1 || y < 1 || x + d - 1 > n || y + d - 1 > m) continue;
            int t = row[x][y + d - 1] - row[x][y - 1];
            t += row[x + d - 1][y + d - 1] - row[x + d - 1][y - 1];
            t += col[x + d - 2][y] - col[x][y];
            t += col[x + d - 2][y + d - 1] - col[x][y + d - 1];
            if (t == tot) {
                for (int i = x ; i <= x + d - 1 ; i ++) {
                    if (str[i][y] == '.')
                        str[i][y] = '+';
                    if (str[i][y + d - 1] == '.')
                        str[i][y + d - 1] = '+';
                }
                for (int i = y + 1 ; i < y + d - 1 ; i ++) {
                    if (str[x][i] == '.')
                        str[x][i] = '+';
                    if (str[x + d - 1][i] == '.')
                        str[x + d - 1][i] = '+';
                }
                for (int i = 1 ; i <= n ; i ++)
                    printf ("%s\n" , str[i] + 1);
                return 0;
            }
        }
    }
    puts ("-1");
    return 0;
}