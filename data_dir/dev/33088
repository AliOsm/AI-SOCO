// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=2e5+4;
const ll INF=1e9;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

ll n,m,stn[N],check[N],temp[N];

void Build()
{
  ll i=1,j=0;
  while(i<m)
  {
    if(stn[i]==stn[j]){temp[i]=j+1;i++;j++;}
    else
    {
      j=max(0LL,j-1);
      j=temp[j];
      if(j==0)
      {
        if(stn[i]==stn[j]){temp[i]=j+1;i++;j++;}
        else{temp[i]=0;i++;}
      }
      else
      {
        ll ff=0;
        while(j>0)
        {
          if(stn[j]==stn[i]){temp[i]=j+1;ff=2;i++;j++;break;}
          else
          {
            j=max(0LL,j-1);
            j=temp[j];
          }
        }
        if(!ff)
        {
          if(stn[i]==stn[j]){temp[i]=j+1;i++;j++;}
          else{temp[i]=0;i++;}
        }
      }
    }
  }
}

void KMP()
{
  Build();
  ll cnt=0,j=0;
  for(ll i=0;i<n;i++)
  {
    if(check[i]==stn[j]){j++;}
    else
    {
      j=max(0LL,j-1);
      j=temp[j];
      if(j==0)
      {
        if(stn[j]==check[i]){j++;}
      }
      else
      {
        while(j>0)
        {
          if(check[i]==stn[j]){j++;break;}
          else
          {
            j=max(0LL,j-1);
            j=temp[j];
          }
        }
        if(j==0)
        {
          if(stn[j]==check[i]){j++;}
        }
      }
    }
    if(j==m){cnt++;j=temp[j-1];}
  }
  cout<<cnt<<endl;
}

int main()
{
  fast;
  cin>>n>>m;
  ll a[n],b[m];
  for(ll i=0;i<n;i++){cin>>a[i];}
  for(ll i=0;i<m;i++){cin>>b[i];}
  if(m==1){cout<<n<<endl;exit(0);}
  for(ll i=0;i<n-1;i++){check[i]=a[i]-a[i+1];}
  for(ll i=0;i<m-1;i++){stn[i]=b[i]-b[i+1];}
  n--;m--;
  KMP();
}