#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
using namespace std;

#define ll long long
const double eps = 1e-9;
const double PI = acos(-1.);
const int INF = 1000000000;

#define fr(i,n) for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

#define N 110

int n, m; 
int a[N]={0};
int dp[N][N]={0};

bool cmprS(int i, int j){
fru(k,1,m)
 if(dp[i][k]!=dp[j][k]) 
 return false;
return true;
}

bool cmprM(int i){
int l = i, r = n; 
while(l<r){
if(!cmprS(l,r)) return false;
l++;
r--;
}
return true;
}

void Run() {
    cin>>n>>m;
    int res = n;
fru(i,1,n){
 fru(j,1,m){
  cin>>dp[i][j];
 }
}

int ind = 1;
while(true){
 if(res%2!=1 && cmprM(ind)){
  ind += res/2;
  res/=2;
 }
 else 
  break;
}
cout<<res;
}

int main() {
ios_base::sync_with_stdio(0);
    Run();
    return 0;
}