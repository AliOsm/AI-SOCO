#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
ll seg[4*M],s[M];
void build(ll i,ll s,ll e)
{
	if(s==e)
	{
		seg[i]=s;
		return;
	}
	ll m=(s+e)/2;
	build(2*i,s,m);
	build(2*i+1,m+1,e);
	seg[i]=seg[2*i]+seg[2*i+1];
}
ll query(ll i,ll s,ll e,ll x)
{
	if(s==e)
		return s;
	ll m=(s+e)/2;
	if(seg[2*i]>x)
		return query(2*i,s,m,x);
	return query(2*i+1,m+1,e,x-seg[2*i]);
}
void update(ll i,ll s,ll e,ll x)
{
	seg[i]-=x;
	if(s==e)
		return;
	ll m=(s+e)/2;
	if(x<=m)
		update(2*i,s,m,x);
	else
		update(2*i+1,m+1,e,x);
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=1;i<=n;i++)
		cin>>s[i];
	build(1,1,n);
	// cout<<seg[1]<<endl;
	std::vector<ll> v;
	for(ll i=n;i>=1;i--)
	{
		ll z=query(1,1,n,s[i]);
		update(1,1,n,z);
		v.pb(z);
	}
	reverse(all(v));
	for(auto u:v)
		cout<<u<<" ";
	cout<<"\n";
	return 0;
}