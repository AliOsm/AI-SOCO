//Daniel Grzegorzewski
#include <bits/stdc++.h>
#pragma GCC optimize("O3")

#define MP make_pair
#define PB push_back
#define ST first
#define ND second
#define int long long

using namespace std;

typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VII;
typedef long long LL;

void init_ios() {
     ios_base::sync_with_stdio(0);
     cin.tie(0);
}

const int N = (int)1e5 + 10;

int n, m, cur, best, sum[N];
set<int> sub;
VI c[N];

signed main() {
  init_ios();
  cin >> n >> m;
  for (int i = 1; i <= n; ++i) {
    int s, r;
    cin >> s >> r;
    c[s].PB(r);
  }
  for (int i = 1; i <= m; ++i)
    if (c[i].size())
      sort(c[i].begin(), c[i].end());
  for (int i = 1; i <= m; ++i)
    if (c[i].size() && c[i].back() > 0) {
      cur += c[i].back();
      sub.insert(i);
      sum[i] += c[i].back();
      c[i].pop_back();
    }
  best = cur;
  while (sub.size() > 0) {
    VI wyw;
    wyw.clear();
    for (int prz: sub) {
      if (c[prz].size() == 0) {
        wyw.PB(prz);
        cur -= sum[prz];
        continue;
      }
      if (sum[prz]+c[prz].back() > 0) {
        sum[prz] += c[prz].back();
        cur += c[prz].back();
        c[prz].pop_back();
      }
      else {
        wyw.PB(prz);
        cur -= sum[prz];
      }
    }
    for (int w: wyw)
      sub.erase(w);
    best = max(best, cur);
  }
  cout<<best<<"\n";
}