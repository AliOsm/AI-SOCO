#include<bits/stdc++.h>
using namespace std;
#define ll long long int
ll dp[4009][809],nm[4009][4009],cost[4009][4009];
ll call(ll j,ll l,ll r,ll optl,ll optr)
{
    if(l>r)
    {
        return 0;
    }
    ll mid=(l+r)/2;
    ll best=999999999,temp;
    ll opt=-1,i;
    for(i=optl;i<=min(mid,optr);i++)
    {
        temp=dp[i][j-1]+cost[i+1][mid];
        if(temp<best)
        {
            best=temp;
            opt=i;
        }
        /*else if(best==temp)
        {
            opt=i;
        }*/
    }
    dp[mid][j]=best;
    call(j,l,mid-1,optl,opt);
    call(j,mid+1,r,opt,optr);
}
int main()
{
    ll a,b,c,d,e,i,j,k,l,n,m,x,y,t,p;
    char st[8050];
    scanf("%lld%lld",&n,&k);
    gets(st);
    for(i=1;i<=n;i++)
    {
        gets(st);
        for(j=1;j<=n;j++)
        {
            nm[i][j]=nm[i][j-1]+(st[(2*j)-2]-'0');
        }
        for(j=i;j<=n;j++)
        {
            nm[i][j]+=(nm[i-1][j]-nm[i][i-1]);
        }
    }
    for(i=1;i<=n;i++)
    {
       for(j=i;j<=n;j++)
       {
           cost[i][j]=nm[j][j]-nm[i-1][j];
       }
    }
    for(i=1;i<=n;i++)
    {
        dp[i][1]=cost[1][i];
    }
    for(i=2;i<=k;i++)
    {
        call(i,1,n,1,n);
    }
    printf("%lld\n",dp[n][k]);
}