#include<bits/stdc++.h>
#define int long long
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define pb push_back
#define mk make_pair
#define ld long double
#define y1 asdfghjkl
#define ufo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
using namespace std;

mt19937_64 mt_rnd_64(chrono::steady_clock::now().time_since_epoch().count());
long long rnd(long long l, long long r){
    return (mt_rnd_64() % (r-l+1)) + l;
}

const int N = 1e5 + 5;
const int inf = 1e9 + 7;

int n,ans,l,x,mini,maxi;
vector<int>v;
vector<int>w;
vector<int>g[N];

bool check(vector<int>v)
{
    int mn = inf;
    for(int i = 0;i < v.size();i++){
        if(v[i] > mn)return 1;
        mn = min(mn,v[i]);
    }
    return 0;
}

main()
{
    ufo;
    cin>>n;
    for(int i = 1;i <= n;i++){
        cin>>l;
        mini = inf;
        maxi = 0;
        for(int j = 1;j <= l;j++){
            cin>>x;
            maxi = max(maxi,x);
            mini = min(mini,x);
            g[i].pb(x);
        }
        if(check(g[i])){
            ans++;
        }
        else{
            v.pb(mini);
            w.pb(maxi);
        }
    }
    sort(v.begin(),v.end());
    sort(w.begin(),w.end());
    int pr = ans;
    ans *= 2*n;
    ans -= pr*pr;
    for(int i = 0;i < w.size();i++){
        int l=0,r=v.size()-1;
        while(r-l > 1){
            int mid = (l + r) / 2;
            if(v[mid] >= w[i])r = mid;
            else l = mid;
        }
        if(v[r] < w[i])ans += r+1;
        else if(v[l] < w[i])ans += l+1;
    }
    cout<<ans;
}
