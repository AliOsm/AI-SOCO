#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define ld long double
ll mod = 1000000007;
const double sn = 1e-9;
const ld PI = 3.141592653589793238L;

int n, m;
vector <int> adj[300005];
vector <int> s[300005];
map <int, bool> ma;
int col[300005];
bool v[300005];
int cm = INT_MIN;
bool cmp(int a, int b) {
	return col[a] < col[b];
}
void dfs(int i) {
	if (v[i])
		return;
	v[i] = true;
	vector<int> v = s[i];
	sort(v.begin(), v.end(), cmp);
	int c = 1;
	int sz = v.size();
	for (int j = 0; j < sz; j++) {
		if (col[v[j]] != INT_MAX) {
			ma[col[v[j]]] = true;
			continue;
		}
		else {
			while (ma[c])
				c++;
			col[v[j]] = c;
			ma[c] = true;
			cm = max(cm, c);
			c++;
		}
	}
	ma.clear();
	int sz2 = adj[i].size();
	for (int j = 0; j < sz2; j++)
		dfs(adj[i][j]);
}
int main() {
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++) {
		int si;
		scanf("%d", &si);
		for (int j = 0; j < si; j++) {
			int t;
			scanf("%d", &t);
			s[i].push_back(t);
		}
	}
	for (int i = 0; i < n - 1; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	for (int i = 1; i <= m; i++) {
		col[i] = INT_MAX;
	}
	dfs(1);
	printf("%d\n", max(cm, 1));
	for (int i = 1; i <= m; i++) {
		printf("%d", col[i]==INT_MAX?1:col[i]);
		if (i != m)
			printf(" ");
	}
	printf("\n");
	return 0;
}