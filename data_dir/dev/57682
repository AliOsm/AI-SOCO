#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 998244353
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.first << ", " << a.second << ")";
}

template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	for (int i = 0; i < v.size(); i++) {
        if (i) out << ", ";
		out << v[i];
	}
	return out << "]";
}

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
           return false;
        }
    }
    return true;
}

vector<ll> fact(ll n) {
    vector<ll> ans;
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            ans.push_back(i);
            while (n % i == 0) {
               n /= i;
            }
        }
    }
    if(n > 1) ans.push_back(n);
    return ans;
}

ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
      if (b&1ll) {
          res *= tp;
      }
      tp *= tp;
      b >>= 1ll;
    }
    return res;
}

ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
    return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
    cout << "YES" << endl;
    exit(0);
}

void no() {
    cout << "NO" << endl;
    exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 3000 + 5, inf = 2e9;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt(), m = nxt();
    vector<ll> mas(n);
    for (int i = 0; i < n; i++) {
        mas[i] = nxt();
    }
    sort(all(mas));
    reverse(all(mas));

    auto get = [&](ll t1, ll M) {
        ll ind = 0;
        ll ct = (n + t1) / (t1 + 1);
        for (int i = 0; i < ct && M && ind < n; i++) {
            for (int j = 0; j <= t1 && M && ind < n; j++) {
                ll t = mas[ind++] - i;
                t = max(t, 0LL);
                M -= t;
            }
        }
        return M <= 0;
    };

    ll l = 0, r = n - 1;
    while(r - l > 1) {
        ll md = (l + r) / 2;
        if (get(md, m)) r = md;
        else l = md;
    }
    if (get(l, m)) cout << l + 1;
    else if (get(r, m)) cout << r + 1;
    else cout << -1;
    return 0;
}
