#ifndef _USE_MATH_DEFINES
#define _USE_MATH_DEFINES
#include <cmath>
#endif

#include <iostream>
#include <conio.h>
#include <cstdio>
#include <cstdlib>

#include <vector>
#include <string>
#include <stack>

#include <map>
#include <algorithm>
using namespace std;

//#include <queue>
//#include <stack>
//#include <set>

#define unlli unsigned long long int

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FOR1(i,a,b) for(int i=a;i>=b;i--)

#define sc(n) scanf("%d",&n)
#define sc2(n,m) scanf("%d %d",&n,&m)
#define sc3(n,m,k) scanf("%d %d %d",&n,&m,&k)
#define scp() scanf("\n")

#define P(x) printf("%d\n",x)
#define P2(x,y) printf("%d %d\n",x,y)
#define MOD 1000000007

class name 
{
public:
    void resh();
private:
    unlli gcd(unlli x,unlli y);
    unlli kd(unlli x);
};

unlli name::gcd(unlli x,unlli y)
{
    return (y==0)?x:gcd(y,x%y);
}
unlli name::kd(unlli x)
{
    unlli k=2,q=sqrt((double)x);

    for(unlli i=2;i<q+1;i++)
        if(x%i==0)k+=2;
    if(q*q==x)k--;
    return k;
}

int main()
{   
    name A;
    A.resh();
    return 0;
}


/*
vector<int> t(400000);

void tree(vector<int> a,int tl,int tr,int v)
{
    if(tl==tr)t[v]=a[tl];
    else
    {
        int tm=(tl+tr)/2;
        tree(a,tl,tm,v*2);
        tree(a,tm+1,tr,v*2+1);
        t[v]=min(t[v*2],t[v*2+1]);
    }
}

int tree_min(int tl,int tr,int l,int r,int v)
{
    if(l>r)return 1000000001;
    if((tl==l)&&(tr==r))return t[v];    

    int tm=(tl+tr)/2;
    return min(tree_min(tl,tm,l,min(r,tm),v*2),tree_min(tm+1,tr,max(l,tm+1),r,v*2+1));
}


void tree_new(int tl,int tr,int v,int i,int x)
{
    if(tl==tr)t[v]=x;
    else
    {
        int tm=(tl+tr)/2;

        if(i<=tm) tree_new(tl,tm,v*2,i,x);
        else tree_new(tm+1,tr,v*2+1,i,x);
        t[v]=t[v*2]+t[v*2+1];
    }
}

unlli sum(int tl,int tr,int l,int r,int v)
{
    if(l>r)return 0;
    if((tl==l)&&(tr==r))return t[v];

    int tm=(tl+tr)/2;
    return sum(tl,tm,l,min(r,tm),v*2)+sum(tm+1,tr,max(l,tm+1),r,v*2+1);
}
*/

unlli dva(unlli n)
{
        if(n==0)return 1;
        else
        if(n%2) return (dva(n-1)*2)%MOD;
        else 
        {
            unlli b=dva(n>>1)%MOD;
            return (b*b)%MOD;
        }
}

void name::resh()
{
    unlli n;
    cin>>n;

    if (n==0)cout<<"1";
    else
    {
        unlli x=dva(n-1);
        //cout<<x<<endl;
        
        unlli y=((x<<1)+1)%MOD;
        x=(y*x)%MOD;
        cout<<x;
    }
}