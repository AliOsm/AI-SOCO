// Problem name :
// Algorithm : DP
// Contest/Practice : Off line practice
// Source :
// Comment :
// Date :

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<assert.h>


#define pause system("pause")
#define FOR(s,e,inc) for(int i=s;i<=e;i+=inc)
#define mod 1000000007
#define inf 1<<30
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz(x) ((int)x.size())
#define sqr(x) ( (x)* (x) )
#define eps 1e-9
#define on(x,w)  x|(1<<w)
#define check(x,w) (x&(1<<w))==(1<<w)?true:false
#define all(x) (x).begin(),(x).end()
#define pf printf
#define sf scanf

typedef long long ll;

using namespace std;


template<class T>
T mod_v(T num)
{
    return (num%mod+mod)%mod;
}

template<class T>
void memset1(vector<T>&v,int s,T value)
{
    for(int i=0;i<s;i++)
        v[i]=value;
}

template<class T>
void memset2(vector<vector<T> >&v,int s1,int s2,T value)
{
    for(int i=0;i<s1;i++)
        for(int j=0;j<s2;j++)
            v[i][j]=value;
}

template<class T>
T fast_pow(T n , T p)
{
    if(p==1) return n;
    if(p%2)
    {
        int g=mod_v ( mod_v(n) * mod_v(fast_pow(n,p-1)) );
        return g;
    }
    else
    {
        int g=fast_pow(n,p/2);
        g=mod_v( mod_v(g) * mod_v(g) ) ;
        return g;
    }
}

template<class T>
T modInverse(T n)
{
    return fast_pow(n,mod-2);
}

#ifndef ONLINE_JUDGE
#  define print(x) cout<<x<<endl;
#else if
#  define print(x) 0;
#endif

//.......Code start from here ! .......

vector<vector<ll> >dp(100005,vector<ll>(2));
vector<int>keep(100005);
string s;
int n;

ll re(int i,bool yep)
{
    if(i==n) return 0;
    else if(dp[i][yep] !=-1)return dp[i][yep] ;
    ll r1=0,r2=0;
    if(s[i]=='1')
    {
        if(yep)
        {
            r1=(ll)keep[i]+re(i+1,yep);
        }
        else
        {
            r1=(ll)keep[i]+re(i+1,yep);
            r2=re(i+1,true);
        }
    }
    else
    {
        if(yep)
        {
            r1=(ll)keep[i]+re(i+1,yep);
        }
        else
        r2=re(i+1,yep);
    }
    return dp[i][yep]=max(r1,r2);

}

int main()
{
    sf("%d",&n);
    memset2(dp,100005,2,(ll)-1);
    for(int i=0;i<n;i++)
    {
        sf("%d",&keep[i]);
    }
    reverse(keep.begin(),keep.begin()+n);
    cin>>s;
    reverse(all(s));
    pf("%I64d\n",re(0,false));
    return 0;
}
