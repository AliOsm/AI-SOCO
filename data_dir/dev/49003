#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)

int const N = 50000;
int n;

struct P{
	int x, y, z, id;
	void sc(int i) { scanf("%d%d%d", &x, &y, &z); id = i; }
}p[N];

bool SX(P const &a, P const &b) { return a.x < b.x; }
bool SY(P const &a, P const &b) { return a.y < b.y; }
bool SZ(P const &a, P const &b) { return a.z < b.z; }

void goZ(int l, int r){
	sort(p + l, p + r + 1, SZ);
	for (int i = l; i < r; i += 2)printf("%d %d\n", p[i].id, p[i + 1].id);
}

int goY(int l, int r){
	sort(p + l, p + r + 1, SY);
	vector<int> v;
	int j = 0;
	f(i, l, r + 1){
		j = i;
		while (j < r && (p[j + 1].y == p[j].y))++j;
		int sz = j - i + 1;
		goZ(i, j);
		if (sz & 1)v.push_back(j);
		i = j;
	}
	for (int i = 0; i + 1 < v.size(); i += 2)printf("%d %d\n", p[v[i]].id, p[v[i + 1]].id);
	if (v.size() & 1)return v.back();
	return -1;
}

void goX(int l = 0, int r = n - 1){
	sort(p + l, p + r + 1, SX);
	vector<int> v;
	int j = 0;
	f(i, l, r + 1){
		j = i;
		while (j < r && (p[j + 1].x == p[j].x))++j;
		int sz = j - i + 1;
		int t = goY(i, j);
		if (sz & 1)v.push_back(t);
		i = j;
	}
	for (int i = 0; i < v.size(); i += 2)printf("%d %d\n", p[v[i]].id, p[v[i + 1]].id);
}

int main(){
	scanf("%d", &n);
	f(i, 0, n)p[i].sc(i + 1);
	goX();
}