/*          (: -_-_-_- IN THE NAME OF ALLAH -_-_-_- :)          */
/*                    | S e y e d |                             */
/*                    |    3 7    |                             */
/*                   HASHEMESHOON hastam ;)                     */
/*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*/
#include <bits/stdc++.h>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <iomanip>
#include <cstdio>
#include <map>
#include <string>
#include <set>
#include <vector>
#include <stack>
#include <deque>
#include <queue>
#include <ctime>
#include <list>
#include <iterator>
#define ll int
#define ss second
#define ff first
#define pb push_back
using namespace std;
ll n,m,q,x,y,z,par[20][100100],b[100],h[100100],ta[30];
vector <ll> v[100100],p[20][100100],a;
void koch(ll xx,ll yy,ll zz){
    ll xxx=0,yyy=0;
    for(int i=0;i<10;i++){
        if(xxx==p[zz][xx].size() && yyy==p[zz][yy].size())break;
        if(xxx==p[zz][xx].size()){p[zz+1][xx].pb(p[zz][yy][yyy++]);continue;}
        if(yyy==p[zz][yy].size()){p[zz+1][xx].pb(p[zz][xx][xxx++]);continue;}
        if(p[zz][xx][xxx]>=p[zz][yy][yyy])p[zz+1][xx].pb(p[zz][yy][yyy++]);
        else p[zz+1][xx].pb(p[zz][xx][xxx++]);
    }
}
void dfs(ll xx,ll parpar,ll k){
    par[0][xx]=parpar;h[xx]=k;
    for(int i=1;i<20;i++){
        par[i][xx]=par[i-1][par[i-1][xx]];
    }
    for(int i=1;i<20;i++){
        koch(xx,par[i-1][xx],i-1);
    }
    for(int i=0;i<v[xx].size();i++){
        if(parpar!=v[xx][i]){
            dfs(v[xx][i],xx,k+1);
        }
    }
}
void koch1(ll xx,ll zz){
    ll xxx=0,yyy=0;
    for(int i=0;i<10;i++){
        if(xxx==a.size() && yyy==p[zz][xx].size())break;
        if(xxx==a.size()){b[i]=p[zz][xx][yyy++];continue;}
        if(yyy==p[zz][xx].size()){b[i]=(a[xxx++]);continue;}
        if(a[xxx]>=p[zz][xx][yyy])b[i]=(p[zz][xx][yyy++]);
        else b[i]=(a[xxx++]);
    }
    a.clear();
    for(int i=0;i<10;i++){
        if(b[i]==0)break;
        a.pb(b[i]);
        b[i]=0;
    }
}
ll ipar(ll xx,ll hh){
    for(int i=19;i>=0;i--){
        if(hh>=ta[i]){
            hh-=ta[i];
            koch1(xx,i);
            xx=par[i][xx];
        }
    }
    return xx;
}
void lca(ll xx,ll yy){
    for(int i=19;i>=0;i--){
        if(par[i][xx]!=par[i][yy]){
            koch1(xx,i);
            koch1(yy,i);
            xx=par[i][xx];
            yy=par[i][yy];
        }
    }
    if(xx==yy){
        koch1(xx,0);
        return;
    }
    else {
        koch1(xx,1);
        koch1(yy,0);
        return;
    }
}
void solve(ll xx,ll yy,ll tt){
    fill(b,b+20,0);
    a.clear();
    if(h[xx]>h[yy])swap(xx,yy);
    yy=ipar(yy,h[yy]-h[xx]);
    lca(xx,yy);z=a.size();
    cout<<min(tt,z)<<' ';
    for(int i=0;i<min(tt,z);i++){
        cout<<a[i]<<' ';
    }
    cout<<endl;
}
int main(){
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    ta[0]=1;
    for(int i=1;i<=21;i++){
        ta[i]=ta[i-1]*2;
    }
    cin>>n>>m>>q;
    for(int i=0;i<n-1;i++){
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    for(int i=0;i<m;i++){
        cin>>x;
        p[0][x].pb(i+1);
    }
    for(int i=0;i<n;i++){
        sort(p[0][i+1].begin(),p[0][i+1].end());
    }
    dfs(1,0,1);
    for(int i=0;i<q;i++){
        cin>>x>>y>>m;
        solve(x,y,m);
    }
    return 0;
}
