///Karavaev Ivan -> 1101(2) -> 13(10) -> Karavaev1101

#include <bits/stdc++.h>

using namespace std;

const int N = 3e5 + 2;

int red = 0, blue = 0;
int a[N], ans = 0;
vector < vector < int > > g;
vector < int > r(N), b(N);

void dfs(int v, int p){
    if(a[v] == 1) r[v] = 1;
    if(a[v] == 2) b[v] = 1;
    for(int i(0); i < g[v].size(); ++i){
        int to = g[v][i];
        if(to == p) continue;
        dfs(to, v);
        r[v] += r[to];
        b[v] += b[to];
    }
    if(b[v] == 0 || r[v] == 0)
        if(red - r[v] == 0 || blue - b[v] == 0)
            ++ans;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;

    for(int i(0); i < n; ++i){
        cin >> a[i];
        if(a[i] == 1) ++red;
        if(a[i] == 2) ++blue;
    }

    g.resize(n);
    for(int i(0); i < n - 1; ++i){
        int a, b;
        cin >> a >> b;
        --a; --b;
        g[a].push_back(b);
        g[b].push_back(a);
    }

    dfs(0, -1);

    cout << ans;
}
