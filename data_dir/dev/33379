#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define PP pop_back()
#define ALL(x) x.begin(),x.end()
#define st first
#define nd second
#define sz(x) (int) x.size()
#define pii pair<int,int>
#define ii int,int
#define ll long long
#define lf double
#define llu long long unsigned
#define INPUT freopen("inp.in","r",stdin);
#define OUTPUT freopen("oup.out","w",stdout);
#define sag(x) 2*x+1
#define sol(x) 2*x
#define orta ((bas+son)/2)
#define set(x,y) memset(x,y,sizeof(x))
#define MIN3(x,y,z) min(min(x,y),z)
#define MAX3(x,y,z) max(max(x,y),z)
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define ROF(i,j,k) for(int i=j;i>=k;i--)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 20000000000000
#define N 105
using namespace std;
int n,vis[256],ok[256];
char names[N][N];
vector<char> v[256],wrt;
void dfs(int node) {
    vis[node]=1;
    ok[node]=1;
    FOR(i,0,sz(v[node])-1)
        if(!vis[v[node][i]])
            dfs(v[node][i]);
        else if(ok[v[node][i]]==1) {
            printf("Impossible");
            exit(0);
        }
    ok[node]=2;
    wrt.PB(char(node));
}
int main() {
    scanf("%d",&n);
    FOR(i,1,n) {
        scanf("%s",names[i]+1);
        if(i>1) {
            int flag=0;
            int l1=strlen(names[i-1]+1);
            int l2=strlen(names[i]+1);
            FOR(j,1,min(l1,l2)) {
                if(names[i-1][j]!=names[i][j]) {
                    char c1=names[i-1][j];
                    char c2=names[i][j];
                    v[c2].PB(c1);
                    flag=1;
                    break ;
                }
            }
            if(!flag && l1>l2) {
                printf("Impossible");
                return 0;
            }
        }
    }
    FOR(i,0,25) {
        if(!vis['a'+i]) {
            dfs('a'+i);
        }
    }
    FOR(i,0,25)
        printf("%c",wrt[i]);
}
