#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sfi1(v) scanf("%d",&v)
#define sfi2(v1,v2) scanf("%d %d",&v1,&v2)
#define sfi3(v1,v2,v3) scanf("%d %d %d",&v1,&v2,&v3)
#define sfll1(v) scanf("%I64d",&v);
#define sfll2(v1,v2) scanf("%I64d %I64d",&v1,&v2)
#define sfll3(v1,v2,v3) scanf("%I64d %I64d %I64d",&v1,&v2,&v3)

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 2e5 + 5;
int v[N] , have[N] , need[N] , freq[N];
int n , cnt , holiday;

void Add(int idx){
    int cur = v[idx];
    freq[cur]++;
    if(freq[cur] == need[cur]){
        cnt++;
    }else if(freq[cur] > need[cur]){
        holiday++;
    }
}

void Remove(int idx){
    int cur = v[idx];
    //cout << cur << " " << freq[cur] << endl;
    if(freq[cur] == need[cur]){
        cnt--;
    }else if(freq[cur] > need[cur]){
        holiday--;
    }
    freq[cur]--;
}


int main()
{
    int n , m;
    sfi2(n,m);
    range(i,1,n){
        sfi1(v[i]);
        have[v[i]]++;
    }

    range(i,1,m){
        sfi1(need[i]);
        if(need[i] > have[i]){
            puts("-1");
            return 0;
        }
        cnt += (need[i] == 0);
    }

    int e = 0;
    while(cnt < m){
        e++;
        Add(e);
    }

    assert(cnt == m);
    int ans = holiday;
    range(s,2,n){
        e = max(e , s);
        Remove(s-1);
        while(cnt < m){
            e++;
            if(e > n)break;
            Add(e);
        }

        if(cnt == m)
            ans = min(ans , holiday);

        //cout << s << " " << e << " " << holiday << " " << cnt << endl;
    }

    printf("%d\n",ans);

    return 0;
}
