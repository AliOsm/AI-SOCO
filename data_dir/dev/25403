#include <bits/stdc++.h>
using namespace std;

#define fr(i,n)    for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

typedef long long   ll;
typedef long double ld;
	
const int INF = 1e9 + 10;
const int N   = 1000010;

string s;

int main() {
   ios_base::sync_with_stdio(0);
   cout.tie(0); cin.tie(0);
   
   cin >> s;
   
   int k = s.find("e") + 1;
   ll p  = 0;
   ll q  = 1;
   
   frd(i, s.size() - 1, k)
   {
      p  = (int)(s[i] - '0') * q + p;
      q *= 10;
   }
   
   s = s.substr(0, k - 1);
   
   if(s.find(".") == string::npos)
   {
	   fru(i, 1, p)
			s += "0";
   }
   else
   {
	   int ind = s.find(".");
	   int cnt = s.size() - ind - 1;
	   
	   if(p <= cnt)
	   {
		   fru(i, ind, ind + p - 1)
				swap(s[i], s[i + 1]);
				
		   if(s[s.size() - 1] == '.')
			   s = s.substr(0, s.size() - 1);
	   }
	   else
	   {
		   s.erase(s.find("."), 1);
		   fru(i, 1, p - cnt)
				s = s + "0";
	   }
   }
   
   if(s.find(".") != string::npos)
   {
	   int r = s.size() - 1;
	   while(s[r] == '0') 
		   r--;
	   s = s.substr(0, r - (s[r] == '.') + 1);
   }
   
   int l = 0;
   while(s[l] == '0')
	   l++;
   if(s[l] == '.')
	   s = "0." + s.substr(l + 1, -1);
   else
	   s = s.substr(l, - 1);
   
   if(s.size() == 0)
	   s = "0";
   
   cout << s;
   
   return 0;
}