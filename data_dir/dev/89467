//AUTHOR : TIRTH JARSANIA
//COLLEGE : DAIICT


#include<bits/stdc++.h>
using namespace std;

#define INF LONG_LONG_MAX
#define MINF LONG_LONG_MIN
#define pi acos(-1)
#define bp __builtin_popcount
#define ll long long int
#define ld long double
#define pii pair<ll,ll>
#define For(i,a,b) for(ll i=a;i<b;i++)
#define Fori(i,a,b,p) for(ll i=a;i<b;i+=p)
#define Ror(i,a,b) for(ll i=a;i>b;i--)
#define Rori(i,a,b,p) for(ll i=a;i>b;i-=p)

#define precision(x,d) cout<<fixed<<setprecision(d)<<x
#define minQueue priority_queue<ll,vector<ll>,greater<ll> > 
#define maxQueue priority_queue<ll> 

#define pb push_back
#define pf push_front
#define ff first
#define ss second
#define FILL(a,b) memset((a),(b),sizeof((a)))
#define FAST ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);srand(time(NULL))

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
  
#define os tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ofk order_of_key
#define fbo find_by_order

const ll N = 1e5 + 5;

vector< ll > ip(N) , dp(N);
queue < ll > g[N] , jt[N] ;

int main()
{
    FAST ;
    ll n ; 
    cin >> n ;
    For(i , 1, n+1 )    cin >> ip[i] , g[ip[i]].push(i);
    
    os rb;
    For(i , 1 , n+1 ) if(!g[i].empty()) rb.insert(g[i].front());
    For(i , 1 , n + 1)  jt[1].push(i);
    For(i , 1 , n+1 )
    {
        while(!jt[i].empty())
        {
            ll p = jt[i].front(); 
            jt[i].pop();
            dp[p]++;
            if(rb.size() < p+1) continue;
            auto it = rb.fbo(p);
            jt[*it].push(p);
        }
        rb.erase(i);
        g[ip[i]].pop();
        if(!g[ip[i]].empty())
            rb.insert(g[ip[i]].front());
        
    }
    
    For(i , 1, n+1)     cout << dp[i] << " " ;
}
    