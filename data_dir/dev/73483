#include<bits/stdc++.h>
using namespace std;
const int MXN = 1e5 + 10, LOG = 20;
int n, t, A[MXN], Mn[LOG][MXN], Mx[LOG][MXN];
int Min(int l, int r)
{
    int s = 0, t = 1;
    while (t * 2 <= (r - l + 1))
    {
        t *= 2;
        s ++;
    }
    return (min(Mn[s][l], Mn[s][r - (1 << s) + 1]));
}
int Max(int l, int r)
{
    int s = 0, t = 1;
    while (t * 2 <= (r - l + 1))
    {
        t *= 2;
        s ++;
    }
    return (max(Mx[s][l], Mx[s][r - (1 << s) + 1]));
}
int main()
{
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &A[i]), Mn[0][i] = Mx[0][i] = A[i];
    for (int i = 1; i < LOG; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            if (j + (1 << i) - 1 > n)
                break;
            Mn[i][j] = min(Mn[i - 1][j], Mn[i - 1][j + (1 << (i - 1))]);
            Mx[i][j] = max(Mx[i - 1][j], Mx[i - 1][j + (1 << (i - 1))]);
        }
    }
    int l = 1, r = 1, c = 0;
    while(r < n)
    {
        if (Max(l, r) <= Min(r + 1, n))
        {
            c ++;
            l = r + 1;
            r ++;
            continue;
        }
        r ++;
    }
    printf("%d", c + 1);
    return (0);
}
