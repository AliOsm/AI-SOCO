/*
Submitted With (^^) by -> Hossam ^_^
_____________________
|     ___     ___     |
|    (^_^)   (^_^)    |
|   /( | )\_/( | )\   |
|_____|_|_____|_|_____|
*/

#include <bits/stdc++.h>

using namespace std;

inline void prep()
{
    cin.tie(0);
    cin.sync_with_stdio(0);
};

#define X first
#define Y second
#define endl '\n'
#define ll long long
#define inf (0x7fffffffffffffff)
#define all(x) x.begin(), x.end()
#define debug(x) cerr << #x << " = " << (x) << "\n";
#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;

// const int mod = (int)1e9 + 7;
const int mod = 998244353;
const int MX = (int)1.5e7 + 10;

int p[MX], cnt[MX], mn[MX], non[MX];

int main()
{     
    prep();

    int n;
    cin >> n;

    p[1] = 1;

    vector<int> primes;
    for(int i = 2; i < MX; ++i){
        if(!p[i]){
            primes.push_back(i);
            for(int j = i; j < MX; j += i){
                if(!p[j]) p[j] = i;
            }
        }
    }

    fill(mn, mn + MX, MX);

    for(int i = 0; i < n; ++i){
        int x;
        cin >> x;

        while(x != 1){

            int cc = 0;
            int pp = p[x];
            while(x % pp == 0){
                cc++;
                x /= pp;
            }

            // mp[{pp, cc}]++;
            if(cc < mn[pp]){
                mn[pp] = cc;
                cnt[pp] = 0;
            }
            
            if(cc == mn[pp])
                cnt[pp]++;

            non[pp]++;
        }
    }

    int res = n;
    for(auto &x : primes){
        int sz = non[x];
        if(sz == 0) continue;

        if(sz == n){ //all numbers have this power
            res = min(res, cnt[x]);
        }
        else{
            res = min(res, n - sz);
        }
    }

    if(res == n) cout << -1 << endl;
    else cout << res << endl;

    // cout << primes.size() << endl;

    // ZXC
    return 0;
}