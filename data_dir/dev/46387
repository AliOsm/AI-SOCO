#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N = 2005;
int l[N][N] , r[N][N];
int x , y , flag;
int n , m , k , ans;
pair <int , int> ret;
inline void gao (int X , int Y) {
    if (Y < 1 || Y > m) return ;
    int d = abs (x - X) + abs (y - Y);
    if (d < ans) {
        ans = d;
        if (flag) ret = make_pair (Y , X);
        else ret = make_pair (X , Y);
    }
    else if (d == ans) {
        ans = d;
        if (flag) ret = min (ret , make_pair (Y , X));
        else ret = min (ret , make_pair (X , Y));
    }
}
inline void insert (int x , int y) {
    if (flag) swap (x , y);
    for (int i = y ; i <= m ; ++ i) {
        if (l[x][i] == y) {
            l[x][i] = l[x][y - 1];
        }
        else break;
    }
    for (int i = y ; i >= 1 ; -- i) {
        if (r[x][i] == y) {
            r[x][i] = r[x][y + 1];
        }
        else break;
    }
}
int main(){
#ifndef ONLINE_JUDGE 
    freopen ("input.txt" , "r" , stdin);
    // freopen ("output.txt" , "w" , stdout);
#endif  
    scanf ("%d %d %d" , &n , &m , &k);
    if (n > m) swap (n , m) , flag = 1;
    for (int i = 1 ; i <= n ; i ++) {
        for (int j = 1 ; j <= m ; j ++) {
            l[i][j] = r[i][j] = j;
        }
    }
    while (k --) {
        scanf ("%d %d" , &x , &y);
        if (flag) swap (x , y);
        ans = n + m;
        for (int d = 0 ; d <= ans ; ++ d) {
            if (x - d >= 1) {
                gao (x - d , l[x - d][y]);
                gao (x - d , r[x - d][y]);
            }
            if (x + d <= n) {
                gao (x + d , l[x + d][y]);
                gao (x + d , r[x + d][y]);
            }
        }
        insert (ret.first , ret.second);
        // if (flag) swap (ret.first , ret.second);
        printf ("%d %d\n" , ret.first , ret.second);
    }
    return 0;
}