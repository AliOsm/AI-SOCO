#include <iostream>
#include <cmath>

using namespace std;

typedef long long int ll;

const ll infinite=1000000000000000000LL;

void maximize(ll &a,ll b)
{
  a=max(a,b);
}

const int limit=105;

int n;
int v[limit];
ll a[limit];
ll A[limit];
ll maxsurv[2][limit][limit][limit];

int main()
{
  cin>>n;
  for (int i=1;i<=n;i++) {
    char c;
    cin>>c;
    v[i]=c-'0';
  }
  for (int i=1;i<=n;i++) {
    cin>>a[i];
    A[i]=a[i];
    for (int j=1;j<i;j++)
      maximize(A[i],A[j]+A[i-j]);
  }
  for (int d=0;d<2;d++)
    for (int i=1;i<=n;i++)
      for (int j=i;j<=n;j++)
	for (int k=1;k<=n;k++)
	  maxsurv[d][i][j][k]=-infinite;
  for (int len=1;len<=n;len++) {
    for (int i1=1;i1+len-1<=n;i1++) {
      int i2=i1+len-1;
      if (i1==i2) {
	maxsurv[0][i1][i2][0]=maxsurv[1][i1][i2][0]=A[1];
	maxsurv[v[i1]][i1][i2][1]=0;
	continue;
      }
      int c=1-v[i2];
      for (int i=i1+1;i<=i2;i++) {
	int d=i-i1;
	for (int surv=0;surv<=d;surv++) {
	  maximize(maxsurv[c][i1][i2][surv],maxsurv[c][i1][i-1][surv]+maxsurv[0][i][i2][0]);
	  if (surv==0)
	    maximize(maxsurv[v[i2]][i1][i2][surv],maxsurv[c][i1][i-1][surv]+maxsurv[0][i][i2][0]);
	}
      }
      for (int surv=0;surv<=len-1;surv++) {
	maximize(maxsurv[v[i2]][i1][i2][surv+1],maxsurv[v[i2]][i1][i2-1][surv]);
	maximize(maxsurv[c][i1][i2][0],maxsurv[v[i2]][i1][i2-1][surv]+A[surv+1]);
	maximize(maxsurv[v[i2]][i1][i2][0],maxsurv[v[i2]][i1][i2-1][surv]+A[surv+1]);
      }
    }
  }
  cout<<max(maxsurv[0][1][n][0],maxsurv[1][1][n][0])<<endl;
}
