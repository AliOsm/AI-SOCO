#include <bits/stdc++.h>

#define eb emplace_back
#define pb push_back
#define ll long long
#define ld long double
#define mp make_pair
#define ull unsigned long long
#define all(s) s.begin(), s.end()
#define sz(a) (int)a.size()
const int INF = (int)1e9 + 7;
const int N = (int)3570 + 7;
const int MAXN = (int)4e5 + 228;
const double eps = (double)1e-8;
const int mod = (int)1e9 + 7;

using namespace std;

int n, a[MAXN];

int f(vector<int> v) {
  int res = (v[0] | v[1]) - v[1];
  for (int i = 2; i < v.size(); ++i) res = (res | v[i]) - v[i];
  return res;
}
int pref[MAXN], suf[MAXN];
int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);

#ifdef Local
  freopen(".in", "r", stdin);
#else
  // freopen("sum.in", "r", stdin);
  // freopen("sum.out", "w", stdout);
#endif
  cin >> n;
  int mx = 0;
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    pref[i] = pref[i - 1] | a[i];
  }
  for (int i = n; i >= 1; --i) suf[i] = suf[i + 1] | a[i];
  for (int i = 1; i <= n; ++i) {
    mx = max(mx, a[i] - (a[i] & (pref[i - 1] | suf[i + 1])));
  }
  int id = -1;
  for (int i = 1; i <= n; ++i) {
    if (mx == a[i] - (a[i] & (pref[i - 1] | suf[i + 1]))) {
      mx = -1;
      id = i;
    }
  }
  cout << a[id] << ' ';
  for (int i = 1; i <= n; ++i) {
    if (i != id) cout << a[i] << ' ';
  }
  return 0;
}