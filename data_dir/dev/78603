#include <bits/stdc++.h>
using namespace std;
//#define ll long long int
#define m1 make_pair   
#define ll unsigned long long int

void dfs(vector<int> adj[],bool visited[],int u,int dp[])
{
    visited[u]=1;
    int mx=0;
    for(int i=0;i<adj[u].size();i++)
    if(!visited[adj[u][i]])
    {
        dfs(adj,visited,adj[u][i],dp);
        mx=max(mx,dp[adj[u][i]]);
    }
    dp[u]=mx+1;
}
struct s
{
    ll l,r;
    
};
bool compare1(s s1,s s2)
{
    if(s1.l>s2.l)
    return 1;
    else if(s1.l==s2.l)
    return (s1.r<=s2.r);
    else
    return 0;
}
bool compare2(s s1,s s2)
{
     if(s1.r<s2.r)
    return 1;
    else if(s1.r==s2.r)
    return (s1.l>=s2.l);
    else
    return 0;
}
ll find(vector<pair<ll,ll>> f1[],int j,int x)
{
    int l=0,r=f1[j].size()-1;int m;
    while(l<=r)
    {
        m=(l+r)/2;
        if(f1[j][m].first==x)
        return f1[j][m].second;
        else if(f1[j][m].first<x)
        l=m+1;
        else
        r=m-1;
    }
    return 0;
}
int main()
{
 ll n,k;
 cin>>n>>k;
 ll a[n];
 vector<ll> f[11];ll x,nd,mx=0;
 for(int i=0;i<n;i++)
 {
     cin>>a[i];
     x=a[i];
     nd=log10(x);
     nd++;
     f[nd].push_back(a[i]%k);
     mx=max(mx,nd);
     
     
 }
 for(int i=1;i<=10;i++)
 {
     sort(f[i].begin(),f[i].end());
     
 }
 vector<pair<ll,ll>> f1[11]; 

 for(int i=1;i<=10;i++)
 {
     int cnt=0;int j=0;
   //  cout<<f[i].size()<<endl;
     if(f[i].size())
     {
     for( j=0;j<(f[i].size()-1);j++)
     {
         if(f[i][j]==f[i][j+1])
         cnt++;
         else
         {
             f1[i].push_back(m1(f[i][j],cnt+1));
             cnt=0;
         }
     }
     
        //if(f[i].size()>=1)
         f1[i].push_back(m1(f[i][j],cnt+1));
     }
     
 }


 ll p,y,z,ans=0;
 for(int i=0;i<n;i++)
 {
    p=1;nd=(ll)log10(a[i])+1;
     for(int j=1;j<=10;j++)
     {
         p=p*10;
         y=p;
         y=(a[i]%k*y%k)%k;
         if(y==0)
         {
            if(nd!=j)
            {
                ans=ans+find(f1,j,0);
            }
            else
            {
                if(a[i]%k)
                {
                    ans=ans+find(f1,j,0);
                }
                else
                {
                    ans=ans+find(f1,j,0)-1;
                }
            }
         }
         else
         {
             z=k-y;
             if(nd!=j)
             {
                 ans=ans+find(f1,j,z);
             }
             else
             {
                 if(z!=(a[i]%k))
                 {
                     ans=ans+find(f1,j,z);
                 }
                 else
                 ans=ans+find(f1,j,z)-1;
             }
         }
     }
     
 }
 cout<<ans<<endl;
 
    return 0;
}