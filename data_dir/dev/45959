//tavakol bar khoda
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int MAXN = (int)1e6 + 1;
const int MOD = (int)1e9 + 7;
const int infint = (int)1e8 + 3;
const ll inf = (ll)1e18;
int n, q, fen[3][MAXN], type[MAXN];
void add(int type, int x, int val)
{
	for (; x <= n; x += x & -x)
		fen[type][x] += val;
}
int get(int type, int x)
{
	int ans = 0;
	for (; x; x -= x & -x)
		ans += fen[type][x];
	return ans;
}
int get(int type, int l, int r)
{
	int ans = get(type, r);
	if(l)
		ans -= get(type, l - 1);
	return ans;
}
void change(int i, char c)
{
	add(type[i], i, -1);
	if(c == 'R')
		add(0, i, 1), type[i] = 0;
	else
	if(c == 'P')
		add(1, i, 1), type[i] = 1;
	else
		add(2, i, 1), type[i] = 2;
}
int first(int type)
{
	int L = 0, R = n;
	while(R - L > 1)
	{
		int mid = (L + R) >> 1;
		if(get(type, mid) > 0)
			R = mid;
		else
			L = mid;
	}
	return R;
}
int last(int type)
{
	int L = 1, R = n + 1;
	while(R - L > 1)
	{
		int mid = (L + R) >> 1;
		if(get(type, mid, n) > 0)
			L = mid;
		else
			R = mid;
	}
	return L;
}
int calc()
{
	//0 : R
	//1 : P
	//2 : S
	if(get(0, n) == 0)
	{
		if(get(2, n) == 0)
			return n;
		else
			return get(2, n);
	}
	if(get(1, n) == 0)
	{
		if(get(0, n) == 0)
			return n;
		else
			return get(0, n);
	}
	if(get(2, n) == 0)
	{
		if(get(1, n) == 0)
			return n;
		else
			return get(1, n);
	}
	
	int all = n;
	int firS = first(2), firR = first(0), firP = first(1);
	int lasS = last(2), lasR = last(0), lasP = last(1);
	
	//tedad R haye bad.
	if(firP < firS)
		all -= get(0, firP, firS);
	if(lasS < lasP)
		all -= get(0, lasS, lasP);
		
	//tedad P haye bad.
	if(firS < firR)
		all -= get(1, firS, firR);
	if(lasR < lasS)
		all -= get(1, lasR, lasS);
		
	//tedad S haye bad.
	if(firR < firP)
		all -= get(2, firR, firP);
	if(lasP < lasR)
		all -= get(2, lasP, lasR);
	
	return all;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> n >> q;
	for (int i = 1; i <= n; i++)
	{
		char c;
		cin >> c;
		if(c == 'R')
			add(0, i, 1), type[i] = 0;
		else
		if(c == 'P')
			add(1, i, 1), type[i] = 1;
		else
			add(2, i, 1), type[i] = 2;
	}
	cout << calc() << "\n";
	for (int i = 0; i < q; i++)
	{
		int idx;
		char val;
		cin >> idx >> val;
		change(idx, val);
		cout << calc() << "\n";
	}
}
