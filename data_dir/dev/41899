#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define endl '\n'
typedef long long ll;
const int _N = 3e5 + 5;
const ll INF = 1e18;
const ll MOD = 1e9 + 7;

ll n, l, r, cnt = 0;
map <ll, ll> calc, dp;

ll build(ll n) {
	if (n < 2) return dp[n] = n;
	if (calc[n]) return dp[n];
	calc[n] = 1;
	dp[n] = 2LL * build(n / 2) + (n & 1);
	return dp[n];
}

ll solve(ll n, ll L, ll R) {
	if (l > R || r < L) return 0;
	if (l <= L && r >= R) return dp[n];
	ll plus = 0;
	if ((L + R) / 2 <= r && (L + R) / 2LL >= l) plus = (n & 1);
	return solve(n / 2LL, L, (L + R) / 2LL - 1) + solve(n / 2LL, (L + R) / 2LL + 1, R) + plus;
}

int main() {
	boost();
	#ifndef ONLINE_JUDGE
		freopen("in", "r", stdin);
	#endif
	cin >> n >> l >> r;
	if (n < 2) {
		if (l <= 1 && 1 <= r) cout << n << endl;
		else cout << 0 << endl;
		return 0;
	}
	ll m = n;
	while (m > 1) { cnt += 1; m /= 2ll; }
	ll sz = (1LL << (cnt + 1)) - 1;
	build(n);
	cout << solve(n, 1, sz) << endl;
	return 0;
}
