/*
 * app.cpp
 *
 *  Created on: 14.02.2015
 *      Author: Eran
 */

#include <bits/stdc++.h>
#include <ext/rope>

using namespace std;
using namespace __gnu_cxx;

const long long my_mod = 71838921858412837;

long long MOD(long long a, long long p) {
	return (a % p + p) % p;
}

long long LLMOD(long long a, long long b, long long p) {
	long long q = (long double) a * b / p;
	long long res = a * b - p * q;
	res = (res % p + p) % p;
	return res;
}

long long count_hash(const string &s) {
	long long h = 0, p = 1;
	for (int i = 0; i < int(s.size()); i++) {
		h += MOD(p * (s[i] - 'a' + 1), my_mod);
		h = MOD(h, my_mod);
		p = MOD(p * 7, my_mod);
	}
	return h;
}

int main() {
	ios::sync_with_stdio(0);
	int n, m;
	cin >> n >> m;
	set<pair<long long, int> > used;
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		long long h = count_hash(s);
		long long p = 1;
		for (int pos = 0; pos < int(s.size()); pos++) {
			for (char alpha = 'a'; alpha <= 'c'; alpha++) {
				if (s[pos] != alpha) {
					long long new_h = MOD(h - p * (s[pos] - alpha), my_mod);
					used.insert(make_pair(new_h, int(s.size())));
				}
			}
			p = MOD(p * 7, my_mod);
		}
	}
	for (int i = 0; i < m; i++) {
		string s;
		cin >> s;
		long long h = count_hash(s);
		bool check = used.find(make_pair(h, int(s.size()))) != used.end();
		printf(check ? "YES\n" : "NO\n");
	}
	return 0;
}
