#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <cmath>
#include <ctime>
#include <string>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define read freopen("C:\\Users\\USER\\Desktop\\in.txt", "r", stdin)
#define write freopen("C:\\Users\\USER\\Desktop\\out.txt", "a", stdout)
#define inf 1<<30
#define pii pair<int, int>
#define ff first
#define ss second
#define in(a) scanf("%d", &a)
#define ins(a) scanf("%s", a)
#define in2(a, b) scanf("%d%d", &a, &b)
#define in3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define pn printf("\n");
#define pcs(a) printf("Case %d: ", a)
#define pr(a) printf("%d\n", a)
#define pr(a) printf("%d\n", a)
#define prs(a) printf("%d ", a)
#define pr2(a, b) printf("%d %d\n", a, b)
#define pr3(a, b ,c) printf("%d %d %d\n", a, b, c)
#define vi vector<int>
#define msi map<string, int>
#define mii map<int, int>
#define si set<int>
#define cl clear()
#define sz size()
#define pb push_back
#define MAX(A,B) (((A)>(B))?(A):(B))
#define MIN(A,B) (((A)<(B))?(A):(B))
#define all(X) (X).begin(), (X).end ()
#define iter(it, X) for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (bool) (n & (1<<pos));}
//int on(int n, int pos) {return n | (1<<pos);}
//int off(int n, int pos) {return n & ~(1<<pos);}
//bool operator < (const data &d) const{return cost<d.cost;}
#define ext(a) {printf("%s\n", a); return 0;}
typedef long long LL;
typedef struct data sd;
void oking(char *a, char p, char q)
{
    if (p=='A')
    {
        if (q=='B') *a='C';
        else *a='B';
    }
    else if (q=='A') *a=p=='B'?'C':'B';
    else *a='A';
}
int diff(char *A, char *B)
{
    int n=strlen(A), sum=0, i;
    for (i=0; i<n; i++) if (A[i]!=B[i]) sum++;
return sum;
}
char A[1001000], temp[1001000];
int main()
{
    //use %I64d
    //read;
    int i, j, k, n, cnt=0;
    in2(n, k);
    ins(A);

    if (k>2)
    {
        for (i=0; i<n-1; i++) if (A[i]==A[i+1]) {oking(&A[i+1], A[i], A[i+2]); cnt++;}
        printf("%d\n%s\n", cnt, A);
    }
    else
    {
        for (i=0; i<n; i+=2) {temp[i]='A'; temp[i+1]='B';}
        temp[n]='\0';

        j=diff(A, temp);
        if (j<n-j) printf("%d\n%s\n", j, temp);
        else
        {
            printf("%d\n%s%c\n", n-j, temp+1, temp[n-1]=='A'?'B':'A');
        }
    }
//file?
return 0;
}
