#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
int32_t main() {
    int n, m;
    cin >> n >> m;
    vector<string> a(n);
    map<string, int> mp;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
        ++mp[a[i]];
    }
    string ans, res;
    for (auto& i : mp) {
        string j = i.first;
        reverse(j.begin(), j.end());
        if (i.first == j) {
            res = j;
            continue;
        }
        int mn = min(mp[j], i.second);
        for (int k = 0; k < mn; ++k) {
            ans += j;
        }
        mp[j] -= mn, mp[i.first] -= mn;
    }
    cout << ans.size() * 2 + res.size() << endl << ans << res;
    reverse(ans.begin(), ans.end());
    cout << ans;
}