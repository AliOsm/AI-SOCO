#include<bits/stdc++.h>

using namespace std;
const int MAXN = 200100;

#define int long long
const int INF = 0x3f3f3f3f3f3f3f3f;

int v[MAXN];
int pai[MAXN];

int find(int x){
	if(pai[x] == x) return x;
	return pai[x] = find(pai[x]);
}

void join(int a,int b){
	pai[find(a)] = find(b);
}

struct str{
	int x,y,w;
};

vector<str> aresta;

bool comp(str a,str b){
	return a.w < b.w;
}

signed main(){
	int n,t;
	cin >> n >> t;
	
	pair<int,int> m = {INF,INF}; 
	
	for(int i = 1;i <= n;i++){
		cin >> v[i];
		pai[i] = i;
		if(m.first > v[i]) m = {v[i],i}; 	
	}	
	
	for(int i = 1;i <= n;i++){
		if(i == m.second) continue;
		str k;
		k.x = i , k.y = m.second , k.w = m.first + v[i];
		aresta.push_back(k);
	}
	
	for(int i = 1;i <= t;i++){
		str k;
		cin >> k.x >> k.y >> k.w;
		aresta.push_back(k);
	}
	
	sort(aresta.begin(),aresta.end(),comp);
	
	int soma = 0;
	
	for(int i = 0;i < aresta.size();i++){
		str k = aresta[i];
		if(find(k.x) == find(k.y)) continue;
		
		join(k.x,k.y);
		soma += k.w;
	}
	
	cout << soma << endl;
}




