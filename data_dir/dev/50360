#include<bits/stdc++.h>
using namespace std;

#define VIC ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;
#define endl '\n'
#define matrix vector<vector<ll>>

const int N = 2e5 + 5;
vector<int> ve;
bool vis[N];
int v[N], cycle[N];

void getCycle(int node)
{
    if (vis[node])
        return;
    vis[node] = true;
    ve.push_back(node);
    getCycle(v[node]);
}

int main()
{
    int q, n, x;
    cin >> q;
    while (q--)
    {
        cin >> n;
        for (int i = 1; i <= n; i++)
        {
            vis[i] = false;
            cin >> x;
            v[i] = x;
        }
        for (int i = 1; i <= n; i++)
        {
            if (vis[i])
            {
                cout << cycle[i] << ' ';
                continue;
            }
            ve.clear();
            getCycle(i);
            for (auto it: ve)
                cycle[it] = ve.size();
            cout << cycle[i] << ' ';
        }
        cout << endl;
    }
    return 0;
}