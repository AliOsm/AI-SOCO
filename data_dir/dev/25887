#include <bits/stdc++.h>
using namespace std;
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
typedef long long ll;
 
const ll inf = int(1e18);
const int mod = 1e9 + 7;
const int N = 1e6 + 555;
const long double PI = acos(-1.0);

bool ok[N];
int pos[N];
void solve()
{
	int n, p;
	cin >> n >> p;
	p--;
	string s;
	cin >> s;
	vector<int> v;
	int sum = 0, ssum = 0, last = -1;
	rep(i, sz(s) / 2){
		if(s[i] != s[sz(s) - 1 - i]) {
			int mn = 1000;
			int A = s[i] - 'a', B = s[sz(s) - 1 - i] - 'a';
			if(A > B) swap(A, B);
			mn = min(B - A, A + 26 - B);
			sum += mn;
			if(last == -1) last = i, v.pb(i);
			else ssum += (i - last), last = i, v.pb(i);
		}
	}
	int l = 0, r = ssum;
	int mn = 1e9;
	for(int i = 0; i < sz(v); ++i){
		if(i) l += v[i] - v[i - 1], r -= (v[i] - v[i - 1]);
		int cur = abs(p - v[i]) + min(2 * l + r, 2 * r + l);
		int scur = abs(p - (sz(s) - 1 - v[i])) + min(2 * r + l, 2 * l + r);
		ckmin(mn, min(scur, cur));
	}
	if(mn + sum >= 1e9){
		cout << 0;
	}
	else cout << mn + sum;



}
int main()
{
	Red;
	solve();
	return 0;
}
