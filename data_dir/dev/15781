#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define min(a,b)	((a)<(b)?(a):(b))
vector<vector<ll> > perm;
void Perm(vector<ll> &a, int size, int n)
{
    if (size == 1)
    {
    	perm.push_back(a);
        return;
    }
    for (int i=0; i<size; i++)
    {
        Perm(a,size-1,n);
        if(size%2==1)
            swap(a[0],a[size-1]);
        else
            swap(a[i],a[size-1]);
    }
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	vector<vector<vector<ll> > > segs;
	for(ll i=0;i<4;i++)
	{
		vector<vector<ll> > v1;
		for(ll j=0;j<n;j++)
		{
			string s;
			cin>>s;
			vector<ll> v2;
			for(ll k=0;k<n;k++)
				v2.push_back(s[k]=='1'?1:0);
			v1.push_back(v2);
		}
		segs.push_back(v1);
	}
	vector<ll> a;a.push_back(0);a.push_back(1);a.push_back(2);a.push_back(3);
	Perm(a,4,4);
	ll ans=1e9;
	for(ll i=0;i<24;i++)
	{
		vector<vector<ll> > v;
		for(ll i1=0;i1<n;i1++)
		{
			v.push_back(segs[perm[i][0]][i1]);
			v.back().insert(v.back().end(),segs[perm[i][1]][i1].begin(),segs[perm[i][1]][i1].end());
		}
		for(ll i1=0;i1<n;i1++)
		{
			v.push_back(segs[perm[i][2]][i1]);
			v.back().insert(v.back().end(),segs[perm[i][3]][i1].begin(),segs[perm[i][3]][i1].end());
		}
		vector<vector<ll> > v111=v;
		for(ll i1=0;i1<2;i1++)
		{
			if(i1)
			{
				v=v111;
				v[0][0]=(v[0][0]?0:1);
			}
			ll ans1=0;
			if(i1)
				ans1++;
			for(ll i11=0;i11<2*n;i11++)
			{
				for(ll j1=0;j1<2*n;j1++)
				{
					if(j1==0)
					{
						if(i11>0)
						{
							ll a1=v[i11-1][j1];
							ll a2=(a1?0:1);
							if(v[i11][j1]!=a2)
							{
								ans1++;
								v[i11][j1]=a2;
							}
						}
					}
					else
					{
						ll a1=v[i11][j1-1];
						ll a2=(a1?0:1);
						if(v[i11][j1]!=a2)
						{
							ans1++;
							v[i11][j1]=a2;
						}
					}
				}
			}
			ans=min(ans,ans1);
		}
	}
	cout<<ans<<endl;
}