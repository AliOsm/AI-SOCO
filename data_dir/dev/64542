#include <bits/stdc++.h>

using namespace std;

#define int long long
#define ll long long
//#define double long double
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()

const int INF = 2e9;
const int MB = 31;
const int MOD = 1e9 + 7;

void solve() {
    int n, k;
    cin >> n >> k;
    vector<pair<int, int>> a(n + 1);
    int tot = 0;
    for (int i = 1; i <= n; i++) {
        cin >> a[i].first >> a[i].second;
        tot += a[i].first + a[i].second;
    }

    vector<vector<bool>> dp(n + 1, vector<bool>(k));
    dp[0][0] = true;

    for (int i = 1; i <= n; i++) {
        for (int j = 0; j < k; j++) {
            int d = (j + a[i].first) % k;
            dp[i][d] = dp[i][d] || dp[i - 1][j];
        }
        for (int jj = 0; jj <= min(k, a[i].first); jj++) {
            if (a[i].second < k - jj) continue;
            int one = a[i].first - jj;
            for (int j = 0; j < k; j++) {
                int d = (j + one) % k;
                dp[i][d] = dp[i][d] || dp[i - 1][j];
            }
        }
    }

    int ans = 0;
    for (int i = 0; i < k; i++) {
        if (dp[n][i]) ans = max(ans, (tot - i) / k);
    }
    cout << ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    //srand(time(0));
    //cout.precision(12);
    //cout << fixed;
    //int t;
    //cin >> t;
    int t = 1;
    while (t--) solve();
}
