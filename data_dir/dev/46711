#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <array>
#include <atomic>
#include <chrono>
#include <condition_variable>
#include <forward_list>
#include <future>
#include <initializer_list>
#include <mutex>
#include <random>
#include <ratio>
#include <regex>
#include <scoped_allocator>
#include <system_error>
#include <thread>
#include <tuple>
#include <typeindex>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>

using namespace std;

int n;
int a[2010] = {};

bool solve(int x){
    for(int i = 0; i < n; i++){
        vector<int> b;
        int lo = i, hi = i + x - 1;
        if(hi < n){
            for(int j = 0; j < n; j++){
                if(lo <= j && j <= hi) continue;
                b.push_back(a[j]);
            }
            sort(b.begin(), b.end());
            bool ok = true;
            for(int i = 1; i < b.size(); i++){
                if(b[i] == b[i-1]) ok = false;
            }
            if(ok) return true;
        }
    }
    return false;
}

int32_t main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    int lo = 0, hi = n;
    while(lo != hi){
        int mi = (lo + hi) >> 1;
        if(solve(mi)) hi = mi;
        else lo = mi + 1;
    }
    cout << lo << endl;
    return 0;
}