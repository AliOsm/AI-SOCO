#include<bits/stdc++.h>
using namespace std;
#define __ ios_base::sync_with_stdio(0); cin.tie(0);
#define endl '\n'
#define foreach(it, x) for (__typeof (x).begin() it = (x).begin(); it != (x).end(); ++it)
#define all(x) x.begin(),x.end()
#define D(x) cout << #x " = " << (x) << endl;

template <class T> string toStr(const T &x)
{ stringstream s; s << x; return s.str(); }

template <class T> int toInt(const T &x)
{ stringstream s; s << x; int r; s >> r; return r; }

int dx[8] = {-1,-1,-1,0,1,1, 1, 0};
int dy[8] = {-1, 0, 1,1,1,0,-1,-1};

int main() {
  int n, t, c;
  cin >> n >> t;

  vector<int> v(n + 1);
  v[0] = 0;

  int mm = INT_MAX;
  for (int i = 1; i <= n; ++i) {
    cin >> c;
    v[i] = v[i - 1] + c;
    mm = min(mm, c);
  }

  int acum = 0;
  int ans = (mm <= t ? 1 : 0);
  vector<int> :: iterator lw;

  for (int i = 1; i <= n; ++i) {
    lw = lower_bound(all(v), acum + t);
    if (lw != v.begin() and *lw > acum + t or lw == v.end()) lw --;
    int tot = lw - v.begin();

    ans = max(ans, tot - i + 1);
    acum = v[i];
  }

  cout << ans;
  return 0;
}