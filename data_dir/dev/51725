#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <sstream>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <iomanip>
#include <functional>
#include <bitset>
#include <cassert>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <memory.h>
#include <complex>
#include <numeric>
using namespace std;
#pragma comment(linker, "/STACK:256000000")
#define mp make_pair
#define pb push_back
#define all(C) (C).begin(), (C).end()
#define sz(C) (int)(C).size()
#define PRIME 1103
#define PRIME1 31415
#define INF ((1ll << 30) - 1)
#define MOD 99990001
#define FAIL ++*(int*)0
#define EPS 1e-6
template<class T> T sqr(T a) {return a * a;}
typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pi64;
typedef pair<int, pii> piii;
typedef vector<int> vi;
typedef vector<int64> vi64;
typedef vector<vi64> vvi64;
typedef vector<pi64> vpi64;
typedef vector<vpi64 > vvpi64;
typedef vector<pii> vpii;
typedef vector<vector<int> > vvi;
typedef vector<vvi> vvvi;
typedef vector<vector<pair<int, int > > > vvpii;
typedef vector<vector<vector<pair<int, int > > > > vvvpii;
typedef complex<long double> cd;
//----------------------------------------------------------    
int k, n1, n2, n3, t1, t2, t3, m;
priority_queue <int, vector<int>, greater<int> > q1, q2, q3;
void init()
{
    cin >> k;
    cin >> n1 >> n2 >> n3;
    cin >> t1 >> t2 >> t3;
    for (int i = 0; i < n1; ++i)
        q1.push(0);
    for (int i = 0; i < n2; ++i)
        q2.push(0);
    for (int i = 0; i  < n3; ++i)
        q3.push(0);
}
void solve()
{
    for (int i = 0; i < k; ++i)
    {
        int o1 = q1.top();
        q1.pop();
        int o2 = q2.top();
        q2.pop();
        int o3 = q3.top();
        q3.pop();
        o1 += t1; 
        if(o2 > o1)
            o1 = o2;
        o2 = max(o1, o2);
        o2 += t2;
        if (o3 > o2)
        {
            o1 += o3 - o2;
            o2 = o3;
        }
        o3 = max(o3, o2);
        o3 += t3;
        q1.push(o1);
        q2.push(o2);
        q3.push(o3);
    }
    int ot = 0;
    while(!q3.empty())
    {
        ot = max(ot, q3.top());
        q3.pop();
    }
    cout << ot;
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen ("input.txt", "r", stdin); freopen ("output.txt", "w", stdout);
    #endif
    init();
    solve();
    return 0;
}