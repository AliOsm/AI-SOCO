#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("testing.txt","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef pair<pair<i64, i64>,int> pi ;
typedef tree< pi, null_type, less<pi>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define maxn 200005

int a[maxn] ;
vector <int> lev[maxn] ;

int main()
{
    int i , j , k , l , m , n , t ;

    scanf("%d %d %d",&n,&t,&k) ;

    a[0] = 1 ;
    for(i=1 ; i<=t ; i++) scanf("%d",&a[i]) ;

    int minLeaf = 0 , mxLeaf = n-t ;

    for(i=0 ; i<=t ; i++) minLeaf += max( 0 , a[i]-a[i+1] ) ;

    if( k<minLeaf || k>mxLeaf )
    {
        printf("-1\n") ;
        return 0 ;
    }

    int curLeaf = mxLeaf ;

    int cur = 0 ;

    for(i=0 ; i<=t ; i++)
    {
        for(j=1 ; j<=a[i] ; j++) lev[i].pb( ++cur ) ;
    }

    printf("%d\n",cur) ;

    for(i=1 ; i<=t; i++)
    {
        printf("%d %d\n",lev[i-1][0],lev[i][0]) ;
        for(j=1 ; j<a[i] && j<a[i-1] && curLeaf>k ; j++ , curLeaf-- ) printf("%d %d\n",lev[i-1][j],lev[i][j]) ;
        for( ; j < a[i] ; j++) printf("%d %d\n",lev[i-1][0],lev[i][j]) ;
    }

    return 0 ;
}
