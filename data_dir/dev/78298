#include <bits/stdc++.h>
using namespace std;

int n, m;
int u[100010], v[100010], in[100010], ind[100010];

bool check() {
  int cnt = 0;
  for (int i = 1; i <= n; ++i) {
    if (!in[i]) ++cnt;
  }
  if (cnt > 1) return true;
  return false;
}

bool ok(int k) {
  vector<int> adj[100010];
  memset(ind, 0, sizeof ind);
  for (int i = 1; i <= k; ++i) {
    adj[u[i]].push_back(v[i]);
    ind[v[i]]++;
  }
  queue<int> q;
  for (int i = 1; i <= n; ++i) {
    if (!ind[i]) q.push(i);
  }
  if (q.size() > 1) return false;
  while (!q.empty()) {
    if (q.size() > 1) return false;
    int x = q.front();
    q.pop();
    for (int y: adj[x]) {
      if (!ind[y]) return false;
      ind[y]--;
      if (!ind[y]) q.push(y);
    }
  }
  return true;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  cin >> n >> m;
  for (int i = 1; i <= m; ++i) {
    cin >> u[i] >> v[i];
    in[v[i]]++;
  }
  if (check()) {
    cout << "-1" << '\n';
    return 0;
  }
  int lo = 1, hi = m, ans = -1;
  while (lo <= hi) {
    int mid = (lo + hi) >> 1;
    if (ok(mid)) {
      hi = mid - 1;
      ans = mid;
    }
    else {
      lo = mid + 1;
    } 
  }
  cout << ans << '\n';
}
