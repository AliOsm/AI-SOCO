#include <cstdio>
#include <vector>
using namespace std;
int a[100010], b[100010];
const int inf = 1 << 29;
vector<int> v[100010];
int dp[2][310];
int best[310];
inline void upd(int &t, int x) {
	if (t > x) t = x;
}
int main() {
	int n, m, s, e;
	scanf("%d%d%d%d", &n, &m, &s, &e);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	for (int j = 0; j < m; j++) {
		scanf("%d", &b[j]);
		v[b[j]].push_back(j);
	}
	dp[0][0] = 0;
	for (int j = 1; j < 310; j++) {
		best[j] = inf;
		dp[0][j] = inf;
	}
	for (int i = 0; i < n; i++) {
		int y = i & 1, z = y ^ 1;
		for (int j = 0; j < 310; j++) {
			dp[z][j] = dp[y][j];
		}
		for (int j = 0; j < 310; j++) {
			if (dp[y][j] == inf) continue;
			vector<int>::iterator p = lower_bound(v[a[i]].begin(), v[a[i]].end(), dp[y][j]);
			if (p != v[a[i]].end()) {
				upd(dp[z][j+1], (*p)+1);
			}
		}
		for (int j = 0; j < 310; j++) {
			upd(best[j], i+1+dp[z][j]);
		}
	}
	int ans = 0;
	for (int j = 0; j < 310; j++) {
		if (best[j] + j * e <= s) {
			ans = j;
		}
	}
	printf("%d\n", ans);
	return 0;
}
