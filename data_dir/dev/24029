#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second

typedef long long lli;
const lli   N = 1005 , OO =1110111110111 , mod = 1000000007 , mod2=998244353;

int n , m , sol;
int all[6][N] , aall[6][N] , vis[N] , dp[N];
vector<int> adj[N] , top;

int dfs(int x)
{
    if(vis[x])
        return dp[x];
    vis[x] = 1;
    int ret = 1;
    for(auto u : adj[x])
        ret = max(ret , 1+dfs(u) );
    return dp[x] = ret;
}

void topo(int x)
{
    if(vis[x]++)return;
    vis[x] = 1;
    for(auto u : adj[x])topo(u);
    top.push_back(x);
}

int main(){
  //  ios_base::sync_with_stdio(0);
  //  cin.tie(0);cout.tie(0);
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        for(int j=0;j<n;j++)
        {
            cin>>all[i][j];
            aall[i][ all[i][j] ] = j;
        }
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(i==j)continue;
            bool ok = 1;
            for(int k=0;k<m;k++)
            {
                if(aall[k][i] > aall[k][j])
                    ok=0;
            }
            if(ok)adj[i].push_back(j);
        }
    }
    for(int i=1;i<=n;i++)
        if(!vis[i])topo(i);
    memset(vis , 0 , sizeof vis);
    for(int i=n-1;i>=0;i--)
    {
        if(vis[ top[i] ])continue;
        sol=max(sol , dfs(top[i]) );
    }
    cout<<sol;
    return 0;
}

