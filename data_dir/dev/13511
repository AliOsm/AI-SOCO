#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <sstream>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN = 1050;
const int MOD = 998244353;

int n, A[MAXN], dp[MAXN], C[MAXN][MAXN];

void add(int &a, int b){
	a += b;
	if(a >= MOD) a -= MOD;
}

int mul(int a, int b){
	return (int) ((ll) a * b % MOD);
}

int main(){
	forn(i, MAXN){
		C[i][0] = C[i][i] = 1;
		forr(j, 1, i){
			add(C[i][j], C[i-1][j-1]);
			add(C[i][j], C[i-1][j]);
		}
	}
	
	while(scanf("%d", &n) >= 1){
		memset(dp, 0, sizeof(dp));
		
		forn(i, n){
			scanf("%d", &A[i]);
		}
		
		dp[n] = 1;
		for(int i = n - 1; i >= 0; i--){
			if(A[i] <= 0) continue;
			forr(j, i + 1, n + 1){
				int middle = j - i - 1;
				if(middle < A[i]) continue;
				add(dp[i], mul(C[middle][A[i]], dp[j]));
			}
		}
		
		int ans = 0;
		forn(i, n){
			add(ans, dp[i]);
		}
		
		printf("%d\n", ans);
	}
	return 0;
}
