#include <bits/stdc++.h>
using namespace std;

signed main() {
  ios::sync_with_stdio(false);

  int N, M;
  cin >> N >> M;

  vector<int> A(N);
  for (int i = 0; i < N; ++i) cin >> A[i];

  vector<int> C(N);
  for (int i = 0; i < N; ++i) cin >> C[i];

  set<tuple<int, int>> bag; // cost, index
  for (int i = 0; i < N; ++i) bag.emplace(C[i], i);

  for (int i = 0; i < M; ++i) {
    int T, D;
    cin >> T >> D;
    --T;
    
    int64_t ans = 0;

    if (A[T]) {
      int take = min(A[T], D);
      ans += 1LL * take * C[T];
      A[T] -= take;
      D -= take;
      if (A[T] == 0) bag.erase(bag.find(make_tuple(C[T], T)));
    }

    if (D) {
      while (bag.size() && D) {
        int c, x;
        tie(c, x) = *bag.begin();

        int take = min(A[x], D);
        ans += 1LL * take * c;
        A[x] -= take;
        D -= take;

        if (A[x] == 0) bag.erase(bag.begin());
      }
      if (D) ans = 0;
    }

    cout << ans << endl;
  }

  return 0;
}
