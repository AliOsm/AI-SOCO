#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int> ,null_type,less<pair<int,int> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
long long MOD = 1e9+7;
long long fastpow(long long x,long long k)
{

    if(!k)
        return 1;
    if(k & 1)
        return ((x * fastpow(x,k-1) % MOD) % MOD) % MOD;
    long long ans = fastpow(x,k/2);
    ans %= MOD;
    ans *= ans;
    ans %= MOD;
    return ans;
}
long long sumF(long long x)
{
    int s = 0;
    while(x)
        s += x%10,x /= 10;
    return s;
}
map<long long,int> myMap;
int main()
{
    int n;
    cin >> n;
    while(n--)
    {
        long long a,b;
        scanf("%lld %lld",&a,&b);
        long long ff = a*b;
        long long ss = cbrt((long double)ff + (long double)0.5);
        if(ss*ss*ss == ff && a % ss == 0 && b % ss == 0)
        {
            printf("Yes\n");
            continue;
        }
        printf("No\n");
    }
    return 0;
}
