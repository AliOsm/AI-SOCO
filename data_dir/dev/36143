#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long

int n, m, a[12][2001];

int mx(int col){
    int ret = 0;
    for(int i = 0 ; i < n ; i++){
        ret = max(ret, a[i][col]);
    }
    return ret;
}
int main(){
    int T;
    scanf("%d", &T);
    while(T--){
        scanf("%d %d", &n, &m);
        for(int i = 0 ; i < n ; i++){
            for(int j = 0 ; j < m ; j++){
                scanf("%d", &a[i][j]);
            }
        }
        vector <int> cols;
        for(int i = 0 ; i < m ; i++){
            cols.push_back(i);
        }
        sort(cols.begin(), cols.end(), [&](int x, int y){
            return mx(x) > mx(y);
        });
        vector <int> dp(1 << n);
        for(int col = 0 ; col < min(n, m) ; col++){
            vector <int> mx(1 << n);
            for(int mask = 0 ; mask < (1 << n) ; mask++){
                for(int h = 0 ; h < n ; h++){
                    int cur = 0;
                    for(int i = 0 ; i < n ; i++){
                        if((mask >> i) & 1){
                            cur += a[(i + h) % n][cols[col]];
                        }
                    }
                    mx[mask] = max(mx[mask], cur);
                }
            }
            vector <int> new_dp = dp;
            for(int g = 0 ; g < (1 << n) ; g++){
                for(int h = g ; h ; h = (h - 1) & g){
                    new_dp[g] = max(new_dp[g], dp[g ^ h] + mx[h]);
                }
            }
            dp = new_dp;
        }
        printf("%d\n", dp[(1 << n) - 1]);
    }
}
