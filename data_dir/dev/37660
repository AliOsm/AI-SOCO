#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <deque>
#include <iterator>
#include <bitset>
#include <assert.h>
#include <new>
#include <sstream>
/*#include <bits/stdc++.h>*/
using namespace std ;

typedef long long               ll ;
typedef long double             ld ;
typedef unsigned long long      ull ;
typedef pair<int,int>           pii ;
typedef pair<ll,ll>             pll ;
typedef vector<int>             vi ;
typedef vector<ll>              vll ;
typedef vector<vector<int>>     vvi ;

int Int(){int x ; scanf("%d",&x) ; return x ;}
ll Long(){ll x ; scanf("%lld",&x) ; return x ;}
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it) {cout << endl ;}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
    cerr << *it << " = " << a << ' ' ;
    err(++it, args...);
}

const int N         = (int)2e5 + 5 ;
const int maxN      = (int)1e6 + 6 ;
const ll Mod        = (ll)1e9 + 7 ;

#define     debug(x)    cerr << #x << " = " << x << '\n' ;
#define     rep(i,b,e)  for(__typeof(e) i = (b) ; i != (e + 1) - 2 * ((b) > (e))  ; i += 1 - 2 * ((b) > (e)))
#define     Int         Int()
#define     Long        Long()
#define     all(x)      x.begin() , x.end()
#define     sz(x)       (int)x.size()
#define     ff          first
#define     ss          second
#define     pb          push_back
#define     eb          emplace_back

int main(){
    int test = 1 , tc = 0 ;
    while(test--){
        string s ; cin >> s ;
        stack < int > st ;
        vi p(sz(s) + 1 , 0) ;
        for(int i = 0 ; s[i] ; i++){
            if(st.empty()){
                if(s[i] == '(' or s[i] == '[')st.push(i) ;
            }
            else if(s[i] == '(' or s[i] == '['){
                st.push(i) ;
            }
            else {
                if((s[st.top()] == '(' and s[i] == ')') or (s[st.top()] == '[' and s[i] == ']')){
                    //error(s[i] , i)
                    p[st.top() + 1] = p[i + 1] = 1 ;
                    st.pop() ;
                }
                else{
                    while(!st.empty())st.pop() ;
                }
            }
        }
        int i = 1 , mx = -1 ;
        string res ;
        while(i <= sz(s)){
            if(p[i] == 1){
                int sq = 0 ;
                string tmp = "" ;
                while(i <= sz(s) and p[i] == 1){
                    sq += (s[i - 1] == '[') ;
                    tmp += s[i - 1] ;
                    i++;
                }
                if(sq > mx){
                    mx = sq ;
                    res = tmp ;
                }
            }
            else i++;
        }
        if(mx == -1)mx = 0 ;
        cout << mx << '\n' << res << '\n' ;
    }
    return 0 ;
}
