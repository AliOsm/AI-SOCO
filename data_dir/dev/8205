#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <fstream>
#include <algorithm>
#include <cmath>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <stack>
#include <iomanip>
#include <deque>
#include <list>
#include <cassert>
#include <complex>
#include <bitset>


using namespace std;
typedef long long ll;
#define int ll
typedef long double ld;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pdd;
#define mmin(a, b) a = min(a, (b))
#define ALL(a) a.begin(),a.end()
#define SZ(a) ((int)(a).size())
#define watch(x) cout << (#x) << " = " << (x) << endl;




signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);

	int n;
	cin >> n;
	vector <pair <int, int> > v(n);
	for (int i = 0; i < n; i++)
	{
		cin >> v[i].first >> v[i].second;
	}
	int sum = 0;
	for (int i = 0; i < n; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			pii p1 = v[i], p2 = v[j];
			bool flag = true;
			if (p1.first > p2.first || p1.first == p2.first && i < j)
			{
				swap(p1, p2);
				flag = false;
			}
			vector <pair <int, pair <int, int> > > p(4);
			if (flag)
			{
				p[0] = { p1.first,{ -i, 1 } };
				p[1] = { p1.first + p1.second,{ -i, 2 } };
				p[2] = { p2.first,{ -j, 3 } };
				p[3] = { p2.first + p2.second,{ -j, 4 } };
			}
			else
			{
				p[0] = { p1.first,{ -j, 1 } };
				p[1] = { p1.first + p1.second,{ -j, 2 } };
				p[2] = { p2.first,{ -i, 3 } };
				p[3] = { p2.first + p2.second,{ -i, 4 } };
			}


			sort(ALL(p));

			vector <int> g(4);
			for (int h = 0; h < 4; h++)
			{
				g[h] = p[h].second.second;
			}

			if (g[0] == 1 && g[2] == 2 && g[1] == 3 && g[3] == 4 || g[0] == 2 && g[2] == 1 && g[3] == 3 && g[1] == 4)
				sum += 2;
			else if (g[0] == 1 && g[3] == 2 || g[1] == 2 && g[2] == 1 || g[1] == 1 && g[2] == 2 || g[1] == 1 && g[2] == 3 && g[3] == 2 && g[0] == 4 || g[0] == 1 && g[2] == 2 && g[3] == 3 && g[1] == 4)
				sum++;



		}
	}

	cout << sum;

}