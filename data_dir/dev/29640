#include <bits/stdc++.h>
using namespace std;

#define rep(i,a,n) for (int i = a;i<=n;++i)
#define per(i,a,n) for (int i = n;i>=a;--i)
#define all(x) (x).begin(), (x).end()     
#define SZ(x) ((int)x.size())

using ll = long long;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vi = vector<int>;
using vl = vector<ll>;

mt19937 mrand(random_device{}());
ll rnd(ll a, ll b) { return a + mrand() % (b - a + 1); }
ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }

struct fen {
      vi t;
      fen(int N) {
            t.resize(N);
      }
      void add(int i, int delta) {
            while (i < SZ(t)) {
                  t[i] += delta;
                  i |= (i + 1);
            }
      }
      int sum(int r) {
            int ret = 0;
            while (r >= 0) {
                  ret += t[r];
                  r = (r & (r + 1)) - 1;
            }
            return ret;
      }
      int sum(int l, int r) {
            return sum(r) - sum(l - 1);
      }
};

int main() {
      ios::sync_with_stdio(false); cin.tie(0);
#ifdef arrias
      freopen("a.txt", "r", stdin);
#endif
      int _;
      for (cin >> _; _; _--) {
            int n, k;
            cin >> n >> k;
            vi a(n);
            rep(i, 0, n - 1) cin >> a[i];
            int ans = INT_MAX;
            fen C(k + 1);
            map<int, vi> mp;
            rep(i, 0, n / 2 - 1) {
                  int v = n - i - 1;
                  C.add(min(a[i], a[v]), 1);
                  mp[a[i] + a[v]].push_back(min(a[i], a[v]));
            }
            rep(sum, 1, k) {
                  int cur = n / 2;
                  cur -= SZ(mp[sum]);
                  for (int j : mp[sum]) C.add(j, -1);
                  int one = C.sum(1, sum - 1);
                  int two = cur - one;
                  ans = min(ans, one + 2 * two);
                  for (int j : mp[sum]) C.add(j, 1);
            }
            C.t.assign(k + 1, 0);
            mp.clear();
            rep(i, 0, n / 2 - 1) {
                  int v = n - i - 1;
                  C.add(max(a[i], a[v]), 1);
                  mp[a[i] + a[v]].push_back(max(a[i], a[v]));
            }
            rep(sum, k + 1, 2 * k) {
                  int cur = n / 2;
                  cur -= SZ(mp[sum]);
                  for (int j : mp[sum]) C.add(j, -1);
                  int one = C.sum(sum - k, k);
                  int two = cur - one;
                  ans = min(ans, one + 2 * two);
                  for (int j : mp[sum]) C.add(j, 1);
            }
            cout << ans << "\n";
      }
      return 0;
}