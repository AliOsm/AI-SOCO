#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < int, int > ii;

const int N = 5000 + 5;

int n, p, q;
char s[N];
int lcp[N][N], can[N], dp[N];

int main() {
  scanf("%d %d %d", &n, &p, &q);
  scanf("%s", s + 1);
  for(int i = n; i >= 1; i--) {
    for(int j = n; j > i; j--) {
      if(s[i] == s[j]) {
        lcp[i][j] = lcp[i + 1][j + 1] + 1;
        can[j] = max(can[j], min(j - 1, i + lcp[i][j] - 1) - i + 1);
      }
    }
  }
  for(int i = 1; i <= n; i++) {
    // printf("can[%d] = %d\n", i, can[i]);
    dp[i] = dp[i - 1] + p;
    for(int j = 1; j <= i; j++) {
      if(j + can[j] - 1 >= i)
        dp[i] = min(dp[i], dp[j - 1] + q);
    }
  }
  printf("%d\n", dp[n]);
  return 0;
}
