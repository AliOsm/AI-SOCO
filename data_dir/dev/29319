#include <bits/stdc++.h>
#define forn(i, n) for(int i = 0; i < (int) n; ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; ++i)
#define For(i, st, en) for(int i = (int)st; i <= (int)en; ++i)
#define clr(x) memset(x, 0, sizeof(x))
#define all(x) (x).begin(),(x).end()
#define pb push_back
#define x first
#define y second
#define mp make_pair

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int, int> PII;

/**
 * The code starts here.
 */

#include <bits/stdc++.h>
#define forn(i, n) for(int i = 0; i < (int) n; ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; ++i)
#define For(i, st, en) for(int i = (int)st; i <= (int)en; ++i)
#define clr(x) memset(x, 0, sizeof(x))
#define all(x) (x).begin(),(x).end()
#define pb push_back
#define x first
#define y second
#define mp make_pair

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int, int> PII;

/**
 * The code starts here.
 */
int n, m;
string s[100];

const int N = 43;
int sum[N][N];
char dp[N][N][N][N];
int dp2[N][N][N][N];
int ans[N][N][N][N];

void calc()
{
    clr(sum);
    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            sum[i + 1][j + 1] = sum[i][j + 1] + sum[i + 1][j] - sum[i][j];
            sum[i + 1][j + 1] += (s[i][j] - '0');
        }
    }

    clr(dp);

    for (int i = 0; i < n; ++i)
    {
        for (int j = 0; j < m; ++j)
        {
            for (int k = i; k < n; ++k)
            {
                for (int l = j; l < m; ++l)
                {
                    int s = sum[k + 1][l + 1] - sum[i][l + 1] - sum[k + 1][j] + sum[i][j];
                    if (s == 0)
                        dp[i][j][k][l] = 1;
                }
            }
        }
    }
    clr(dp2);

    for (int lx = 0; lx < n; ++lx)
    {
        for (int ly = 0; ly < m; ++ly)
        {
            for (int i = lx; i < n; ++i)
            {
                for (int j = ly; j < m; ++j)
                {
                    dp2[lx + 1][ly + 1][i + 1][j + 1] = dp2[lx][ly + 1][i + 1][j + 1] +
                                                        dp2[lx + 1][ly][i + 1][j + 1] -
                                                        dp2[lx][ly][i + 1][j + 1];

                    dp2[lx + 1][ly + 1][i + 1][j + 1] += dp[i - lx][j - ly][i][j];
                }
            }
        }
    }

    clr(ans);
    for (int lx = 0; lx < n; ++lx)
    {
        for (int ly = 0; ly < m; ++ly)
        {
            for (int i = lx; i < n; ++i)
            {
                for (int j = ly; j < m; ++j)
                {
                    ans[lx + 1][ly + 1][i + 1][j + 1] = ans[lx][ly + 1][i][j + 1] +
                                                        ans[lx + 1][ly][i + 1][j] -
                                                        ans[lx][ly][i][j];

                    ans[lx + 1][ly + 1][i + 1][j + 1] += dp2[lx + 1][ly + 1][i + 1][j + 1];
                }
            }
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    int q;
    cin >> n >> m >> q;
    for (int i = 0; i < n; ++i)
        cin >> s[i];

    calc();

    for (int t = 0; t < q; ++t)
    {
        int a, b, c, d;
        cin >> a >> b >> c >> d;
        cout << ans[c - a + 1][d - b + 1][c][d] << endl;
    }
    return 0;
}
