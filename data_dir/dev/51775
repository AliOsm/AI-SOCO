#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
typedef long double ld;
typedef long long ll;

const int N = 1600;

struct Node
{
    Node* children[30];
    int cntWords;
    Node()
    {
        memset(children,NULL,sizeof children);
        cntWords = 0;
    }
};

Node* root;
char A[N];
string s,t;
int n,k,ans;

void add(int pos)
{
    int curr=0;
    Node* cur = root;
    for(int i=pos;i<n;i++)
    {
        int x = s[i] -'a';
        if(t[x]=='0')
        {
            curr++;
            if(curr>k)
                break;
        }

        cur->cntWords++;
        if(!cur->children[x])
            cur->children[x] = new Node();

        cur = cur->children[x];
    }
    cur->cntWords++;
}

void dfs(Node* cur)
{
    if( cur->cntWords>0 )
        ans++;

    for(int i=0;i<26;i++)
    {
        if( cur->children[i] )
            dfs( cur->children[i] );
    }

    return;
}

int main()
{
    root = new Node();

    scanf("%s",&A);
    s=A;
    scanf("%s%d",&A,&k);
    t=A;
    n=s.length();

    for(int i=0;i<n;i++)
        add(i);

    dfs(root);

    printf("%d",ans-1);
}
