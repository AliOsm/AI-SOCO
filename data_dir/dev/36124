#include <tuple>
#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <math.h>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>

using namespace std;

#define For(it, c)          for (__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define lps(i, j, n)        for(int i=(j);i<(int)(n);++i)
#define lpb(i, j, n)        for(int i=(j);i>=(int)(n);--i)
#define nul                 puts("")
#define PI                  3.14159265358979323846
#define EP                  1e-7
#define psh                 push_back

typedef long long                   ll;
typedef long double                 LD;
typedef vector<bool>                vb;
typedef vector<int>                 vi;
typedef vector<ll>                  vl;
typedef vector<string>              vs;
typedef vector<double>              vd;
typedef vector<pair<int, int> >     vpi;
typedef vector<pair<ll, ll> >       vpl;
typedef vector<pair<string, int> >  vsi;
typedef multiset<int>               mls;
typedef vector< vi >                vvi;
typedef vector< vl >                vvl;
typedef complex<double>             point;
typedef vector<vector<int> >        vadj;

int dx[] = { 1, -1, 0, 0, 1, -1, 1, -1 };
int dy[] = { 0, 0, -1, 1, 1, -1, -1, 1 };

int n, k;
int dp[2002][2002];
const int mod = 1e9 + 7;
int Ems(int idx, int priv)
{

	if (idx == k)
		return 1;

	int &ret = dp[idx][priv];

	if (ret != -1)
		return ret;

	ret = 0;
	for (int i = priv; i <= n; i += priv){
		ret += (Ems(idx + 1, i) % mod);
		ret %= mod;
	}

	return ret;
}


int main()
{

	cin >> n >> k;
	clr(dp, -1);
	int ans = 0;

	ans += Ems(0,1) % mod;
	ans %= mod;
	
	cout << ans << endl;



	//system("pause");
	return 0;
}