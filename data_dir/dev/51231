#include <bits/stdc++.h>
#define F first
#define S second
using namespace std;
const int N=3003,M=5005;
int n,m,L,Mid1,Mid2,R;
int D[N][N],res;
pair < int , int > M1[N][4],M2[N][4];
vector < int > v[N];
queue < int > q;
bool f[N];
void check(int x,int y) {
	int cnt1=0,cnt2=0,C=0;
	for (int i=0; i<3; i++) {
		int from=M1[x][i].S;
		if (from==x || from==y) continue;
		if (!from || D[from][x]==-1e9) continue;
		for (int j=0; j<3; j++) {
			int to=M2[y][j].S;
			if (to==x || to==y || to==from) continue;
			if (!to || D[y][to]==-1e9) continue;
			C=D[from][x]+D[x][y]+D[y][to];
			if (C>res) res=C,L=from,Mid1=x,Mid2=y,R=to;
		}
	}	
}

void Bfs(int x) {
	for (int i=1; i<=n; i++) {
		D[x][i]=-1e9;
		f[i]=0;
	}
	
	while (!q.empty()) q.pop();
	D[x][x]=0,f[x]=1;
	q.push(x);
	
	while (!q.empty()) {
		int id=q.front();
		q.pop();
		
		for (int i=0; i<v[id].size(); i++) {
			int to=v[id][i];
			if (!f[to])  {
				q.push(to);
				f[to]=1;
				D[x][to]=D[x][id]+1;
			}
		}
	}
}

main () { 
	scanf("%d%d",&n,&m);
	
	for (int i=1; i<=m; i++) {
		int a,b;
		scanf("%d%d",&a,&b);
		v[a].push_back(b);
	}
	
	for (int i=1; i<=n; i++) 
		Bfs(i);
		
	for (int x=1; x<=n; x++) {	
		for (int i=1; i<=n; i++) {
			if (D[i][x]>=M1[x][0].F) 
				M1[x][2]=M1[x][1],
					M1[x][1]=M1[x][0],
						M1[x][0].F=D[i][x],M1[x][0].S=i;
				else
			if (D[i][x]>=M1[x][1].F)
				M1[x][2]=M1[x][1],
					M1[x][1].F=D[i][x],M1[x][1].S=i;
				else
			if (D[i][x]>=M1[x][2].F)
				M1[x][2].F=D[i][x],M1[x][2].S=i;
				
			if (D[x][i]>=M2[x][0].F) 
				M2[x][2]=M2[x][1],
					M2[x][1]=M2[x][0],
						M2[x][0].F=D[x][i],M2[x][0].S=i;
				else
			if (D[x][i]>=M2[x][1].F)
				M2[x][2]=M2[x][1],
					M2[x][1].F=D[x][i],M2[x][1].S=i;
				else
			if (D[x][i]>=M2[x][2].F)
				M2[x][2].F=D[x][i],M2[x][2].S=i;	
		}
	}
	
	for (int i=1; i<=n; i++)
		for (int j=1; j<=n; j++) {
			if (i==j) continue;
			check(i,j);
			check(j,i);
		}
	
	printf("%d %d %d %d\n",L,Mid1,Mid2,R);
}