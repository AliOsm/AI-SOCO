#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int n, T[55], suf[55];
map < PII, int > mp;

int cnt(int r, int p)
{
    if(p == n + 1) return 0;
    if(mp.find({r, p}) != mp.end()) return mp[{r, p}];
    int ans = suf[p] - cnt(r ^ 1, p + 1);
    int sm = T[p];
    for(int i = p + 1; i <= n; i++)
    {
        ans = max(ans, suf[p] - cnt(r ^ 1, i + 1) - sm);
        sm += T[i];
    }
    return mp[{r, p}] = ans;
}

int main()
{
    _upgrade
    cin >> n;
    for(int i = 1; i <= n; i++)
        cin >> T[i];
    for(int i = n; i; i--)
        suf[i] = suf[i + 1] + T[i];
    int ans = cnt(0, 1);
    cout << suf[1] - ans << " " << ans << "\n";
	return 0;
}
