#include<bits/stdc++.h> 
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1);
#define E 998244353
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double

using namespace std;

int lind[501],rind[501];
int n,m,k;
vector<int>adj[501];
int mn[501][501];
int dp[501][501];

int solve(int ind,int er)
{
	if(er>k)
		return MOD;
	if(ind>n)
		return 0;
	if(dp[ind][er]!=-1)
		return dp[ind][er];
	dp[ind][er]=MOD;
	REP(u,0,adj[ind].size())
		dp[ind][er]=min(dp[ind][er],mn[ind][u]+solve(ind+1,er+(adj[ind].size()-u)));
	return dp[ind][er];
}

int main()
{
	IOS;
	cin >> n >> m >> k;
	memset(dp,-1,sizeof(dp));
	REP(i,1,n)
	{
		string s;
		cin >> s;
		REP(j,0,m-1){
			if(s[j]=='1')
				adj[i].pb(j+1);
		}
	}
	REP(i,1,n)
	{
		mn[i][0]=0;
		REP(j,1,adj[i].size())
		{
			mn[i][j]=MOD;
			REP(u,0,adj[i].size()-j)
				mn[i][j]=min(mn[i][j],adj[i][u+j-1]-adj[i][u]+1);
		}
	}
	cout << solve(1,0);
}
