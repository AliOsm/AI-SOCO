#include <bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class A>using sett=tree<A,null_type,less<A>,rb_tree_tag,tree_order_statistics_node_update>;
template<class A>using multisett=tree<A,null_type,less_equal<A>,rb_tree_tag,tree_order_statistics_node_update>;
template<class A,class B>using mapp=tree<A,B,less<A>,rb_tree_tag,tree_order_statistics_node_update>;
template<class A,class B>using multimapp=tree<A,B,less_equal<A>,rb_tree_tag,tree_order_statistics_node_update>;
template<class A>using priority_queue_min=priority_queue<A,vector<A>,greater<A> >;

#define DIM 200009
#define INF 1e11+9
#define ld long double
#define amen exit(0)
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define INF 1e11+9

long long i,j,k,l,n,m,t1,t2,t3,x,y,z;

long long a[DIM];

string s;

int main()
{
    fast;

    cin>>x>>y>>z>>t1>>t2>>t3;

    k=abs(x-y)*t1;
    l=abs(x-z)*t2+abs(y-x)*t2+t3*3;
    if(k>=l)cout<<"YES"<<endl;
    else cout<<"NO"<<endl;

    amen;
}
