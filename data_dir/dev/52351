#include <iostream>
#include <cmath>
#include <stdio.h>
#include <algorithm>
#include <vector>
using namespace std;

#define pb push_back
#define ll long long
const int MX = 1e5 + 5;
int n, v[MX];
vector<int> adj[MX];
ll res = 0;

pair<ll, ll> solve (int u, int fa) {
    ll add = 0, sub = 0;
    for (int i=0; i<adj[u].size(); i++) {
        int v = adj[u][i];
        if (v != fa) {
            pair<ll, ll> cur = solve (v, u);
            add = max(add, cur.first);
            sub = max(sub, cur.second);
        }
    }
    v[u] -= add - sub;
    if (v[u] > 0) add += v[u];
    else sub += v[u] * -1;
    return make_pair(add, sub);
}

int main () {
    ios_base::sync_with_stdio(false);
    cin>>n;
    for (int i=0; i<n-1; i++) {
        int u, v;
        cin>>u>>v;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    for (int i=1; i<=n; i++) cin>>v[i];
    pair<ll, ll> res = solve(1, -1);
    cout<<res.first + res.second<<endl;
    return 0;
}