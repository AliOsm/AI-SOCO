#include <cstdio>
#include <cstring>

#define N 20000

int n, m, s, t, ppl, maxppl, idd;
int a[N], id[N];
bool inq[N];

int toInt(int hh, int mm, int ss) {
	return hh * 3600 + mm * 60 + ss;
}

int main() {
	int hh, mm, ss, oldestId, newestId;

	scanf("%d%d%d", &n, &m, &t);
	for (int i = 0; i < n; i++) {
		scanf("%d:%d:%d", &hh, &mm, &ss);
		a[i] = toInt(hh, mm, ss);
	}

	memset(inq, false, sizeof inq);
	ppl = maxppl = 0;
	s = idd = 0;
	for (int b = 0; b < n; b++) {
		int now = a[b];
		while (s < b)
			if (a[s] + t <= now)
				s++;
			else
				break;
		if (s == b)
			ppl = 0;
		else if (b) {
			oldestId = id[s];
			newestId = id[b-1];
			ppl = newestId - oldestId + 1;
		}
		if (ppl == m)
			id[b] = idd;
		else {
			ppl++;
			id[b] = ++idd;
			if (ppl > maxppl)
				maxppl = ppl;
		}
	}

	if (maxppl == m) {
		printf("%d\n", idd);
		for (int i = 0; i < n; i++)
			printf("%d\n", id[i]);
	}
	else
		puts("No solution");

	return 0;
}