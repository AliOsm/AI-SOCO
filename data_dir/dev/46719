#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define F first
#define S second
#define sqr(x) ((x) * (x))
#define cub(x) ((x) * (x) * (x))
#define pii pair<int, int>
#define all(c) c.begin(), c.end()
#define tr(c, it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define forn(i, n) for(int i = 0; i < int(n); i++)
#define for1(i, n) for(int i = 1; i <= int(n); i++)
#define forN(i, x, n) for(int i = x; i < int(n); i++)
#define eps 1e-12
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define inf 2e15
#define sz 100100
#define mod 1000000007
 
 
#define name "input"
#define isFile 0
 
typedef long long ll;
typedef long double ld;
 
void faster(){
    ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
	if(isFile){
		freopen(name".in", "r", stdin);
		freopen(name".out", "w", stdout);
    }
}
int n, a[sz], cur, sum, ans, r;
int main()
{
	faster();
	cin >> n;
	forn(i, n){
		cin >> a[i];
		sum += a[i];
	}
	cur = sum / n;
	r = n - sum % n;
	sort(a, a + n);
	forn(i, n){
		if(i < r)
			ans += abs(cur - a[i]);
		else
			ans += abs(cur - a[i] + 1);			
	}
	cout << ans / 2;	
	return 0;		
}		