#include <bits/stdc++.h>
#define int long long
using namespace std;

typedef pair<int,int> ii;
const int MAX=3005;
int n,f[MAX][MAX],fCnt[MAX][MAX];
bool mark[MAX][MAX],markCnt[MAX][MAX];
vector<int> g[MAX];
vector<ii> E;

int cntDfs(int u,int p) {
	if(markCnt[u][p])
		return fCnt[u][p];
	markCnt[u][p]=true;
	fCnt[u][p]=1;
	for(int v:g[u]) {
		if(v==p)
			continue;
		fCnt[u][p]+=cntDfs(v,u);
	}
	return fCnt[u][p];
}

int dfs(int u,int v,int paru,int parv) {
	if(mark[u][v])
		return f[u][v];
	mark[u][v]=true;
	// Add node to u
	for(int k:g[u]) {
		if(k==paru)
			continue;
		int c1=cntDfs(k,u),c2=cntDfs(v,parv);
		f[u][v]=max(f[u][v],dfs(k,v,u,parv)+c1*c2);
	}
	// Add node to v
	for(int k:g[v]) {
		if(k==parv)
			continue;
		int c1=cntDfs(k,v),c2=cntDfs(u,paru);
		f[u][v]=max(f[u][v],dfs(u,k,paru,v)+c1*c2);
	}
	return f[u][v];
}

int32_t main() {
	ios_base::sync_with_stdio(false);
	// freopen("input","r",stdin);
	cin>>n;
	int u,v,rs=0;
	for(int i=1;i<n;i++) {
		cin>>u>>v;
		E.push_back(ii(u,v));
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for(ii edge:E)
		rs=max(rs,dfs(edge.first,edge.second,edge.second,edge.first)
			+cntDfs(edge.first,edge.second)*cntDfs(edge.second,edge.first));
	cout<<rs;
}