#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define PP pop_back()
#define ALL(x) x.begin(),x.end()
#define st first
#define nd second
#define sz(x) (int) x.size()
#define pii pair<int,int>
#define ii int,int
#define ll long long
#define MIN3(x,y,z) min(min(x,y),z)
#define MAX3(x,y,z) max(max(x,y),z)
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define FR(i,j,k) for(int i=j;i>=k;i--)
#define dbg(x) cout<<x<<endl;getchar();
#define dbgs(x) cout<<x<<" ";
#define MXN 300005
using namespace std;
int n,m,x,dp[MXN],dp2[MXN],ans[MXN],flag,arr[MXN];
vector<int> v[MXN];
int dfs(int node)
{
    int have=1,heavy=node,now=0,mx=0;
    FOR(i,0,sz(v[node])-1)
    {
        now=dfs(v[node][i]);
        have+=now;
        if(now>mx)
            mx=now,heavy=v[node][i];
    }
    dp2[node]=heavy;
    dp[node]=have;
    if(have==1)
        ans[node]=node;
    else
    {
        int fake=ans[dp2[node]];
        while(dp[node]>2*dp[fake])
            fake=arr[fake];
        ans[node]=fake;
    }
    return have;
}
int main()
{
    scanf("%d %d",&n,&m);
    FOR(i,2,n)
    {
        scanf("%d",&arr[i]);
        v[arr[i]].PB(i);
    }
    dfs(1);
    while(m--)
    {
        scanf("%d",&x);
        printf("%d\n",ans[x]);
    }
}
