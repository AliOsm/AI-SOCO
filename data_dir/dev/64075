//#include "stdc++.h"
#include <bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
//#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD = 1000000007;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
#define pi 3.141592653589793238462
#define int  long long
int dp[262146][101][2];int in[10];int a[20];int ct[10];
int count(int x)
{
    int j=1,ans=0;int i1=0;
    while(j<=x)
    {
        if(j&x)
        {
            in[a[i1]]=i1;
            ct[a[i1]]++;
            //i1++;
            ans++;
        }
        i1++;
        j=j<<1;
    }
    return ans;
}
int32_t main()
{
    IOS;
    int n,m,k=0,d;
    cin>>n>>m;
    int x=n;
   // int a[20];
    while(x>0)
    {
        d=x%10;
        a[k++]=d;
        x=x/10;
    }
        dp[0][0][0]=1;
    int cnt,pr;
    int mx=((ll)1<<k)-1,mk=((ll)1<<(k))-1,o=1;
    int pr1[20];
    pr1[0]=1;
    for(int i=1;i<=19;i++)
        pr1[i]=(pr1[i-1]%m*10%m)%m;
    map<int,int>mp;int vl;
    for(int msk=1;msk<=mx;msk++)
    {
        
        memset(in,-1,sizeof(in));
        memset(ct,0,sizeof(ct));
        cnt=count(msk);
        pr=pr1[cnt-1];
        vl=0;
        for(int i=0;i<=9;i++)
            vl=vl*10+ct[i];
        
        if(mp.find(vl)==mp.end())
        {
        for(int j=0;j<=m-1;j++)
        {
            for(int i=1;i<=9;i++)
            {
                
                if(in[i]!=-1)
                {
                    x=(i%m*pr%m)%m;
                    dp[msk][j][1]+=dp[msk^(o<<in[i])][(j-x+m)%m][0]+dp[msk^(o<<in[i])][(j-x+m)%m][1];
                }
            }
            if(in[0]!=-1)
            {
               dp[msk][j][0]=dp[msk^(o<<in[0])][j][0]+dp[msk^(o<<in[0])][j][1];
            }
            
        }
        }
        else
        {
            for(int i=0;i<m;i++)
            {dp[msk][i][0]=dp[mp[vl]][i][0];
                dp[msk][i][1]=dp[mp[vl]][i][0];
            }
        }
        mp.insert(m1(vl,msk));
    }
 
    cout<<dp[mk][0][1]<<endl;
    return 0;
    
}
