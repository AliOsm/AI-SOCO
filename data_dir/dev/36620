#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define forn() for(int i=0;i<n;i++)
#define fori(n) for(ll i=0;i<(ll)n;i++)
#define forj(n) for(ll j=0;j<(ll)n;j++)

//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int,int> pii;

const int inf = 2e9;
const double eps = 1e-4;
const int maxn = 1e6 + 500;
const int base = 1073741789;
const ll basell = 1e18 + 3;

string itosm(ll x){
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

int a[maxn];
int n, k;
int dp[10000005];

bool check(int x){
    ll cnt = 0;
    for(int i = 0; i < x; i++)
        dp[i] = 0;
    for(int i = x; i < 2*x && i < 10000005; i++)
        dp[i] = 1;
    for(int i = x*2; i < 10000005; i++)
        dp[i] = dp[i/2] + dp[(i+1)/2];
    for(int i = 0; i < n; i++){
        cnt += dp[a[i]];
    }
    if(cnt >= k)
        return 1;
    return 0;
}

int main(){
    fast_io;
    cin >> n >> k;
    ll sum = 0;
    forn(){
        cin >> a[i];
        sum+=a[i];
    }
    if(sum < k){
        cout << -1;
        return 0;
    }
    int l = 0, r = 1000*1000*10, m;
    while(l < r){
        m = (l+r)/2;
        if(check(m)){
            l = m;
            if(l == r-1){
                if(check(r))
                    l = r;
                else
                    r = l;
            }
        }
        else
            r = m - 1;
    }
    cout << l;
    return 0;
}