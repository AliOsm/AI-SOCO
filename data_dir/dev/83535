   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
 #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v==0) return b;
                                	if(b==0) return v;
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                                
                int pr[300100];
                int inv[300010];
                
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=((ll)pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=(ll)inv[i+1]*(i+1)%mod;
                	}
                }
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;

bool hikaku(pa3 x,pa3 y){
	return x.z<y.z;
}
int ans[200020];
set<int> se[30];

int solve(int y){
	for(int i=0;;i++)if(!se[y].count(i))return i;
}
signed main(){
cin.tie(0);
ios::sync_with_stdio(false);

int n;
	cin>>n;
	string s;
	cin>>s;
	
	int an=0;
	for(int i=0;i<n;i++){
		ans[i]=solve(s[i]-'a');
		for(int j=0;j<s[i]-'a';j++)se[j].insert(ans[i]);
		an=max(an,ans[i]);
	}
	//cout<<an+1<<endl;
	if(an+1>2){
		cout<<"NO"<<endl;
	}
	else {
		cout<<"YES"<<endl;
	for(int i=0;i<n;i++)cout<<ans[i];
	cout<<endl;
	}
	/*
		vector<pa3> ku(26,(pa3){inf,-inf,0});
	
	for(int i=0;i<n;i++){
		ku[s[i]-'a'].x=min(ku[s[i]-'a'].x,i);
		ku[s[i]-'a'].y=max(ku[s[i]-'a'].y,i);
		
	}
	for(int i=0;i<26;i++)ku[i].z=i;
	sort(ku.begin(),ku.end());
	while(ku.back().x==inf)ku.pop_back();
	
	int iro[30]={};
	sort(ku.begin(),ku.end(),hikaku);
	
	int ans=0;
	for(int i=0;i<ku.size();i++){
		set<int> se;
		for(int j=0;j<i;j++){
			if(ku[j].y>ku[i].x){
				se.insert(iro[ku[j].z]);
			}
		}
		for(int j=0;;j++)if(!se.count(j)){
			iro[ku[i].z]=j;
			ans=max(ans,j);
			break;
		}
	}
	
	cout<<ans+1<<endl;
	*/
	/*
	if(ans+1>2){
		cout<<
	}
	*/
	
	
	/*
	for(int i=0;i<26;i++)for(int j=i+1;j<26;j++){
		if(ku[i].first==inf) continue;
		if(ku[j].first==inf) continue;
		if(ku[i].second>ku[j].first)G[i]|=(1<<j),G[j]|=(1<<i);
	}
	for(int i=0;i<26;i++)G[i]|=(1<<i);
	
	memo[0]=1;
	for(int i=1;i<(1<<26);i++){
		if(i==(i&(-i))){
			memo[i]=2;
			continue;
		}
		int it;
		for(int j=0;;j++)if(i&(1<<j)){
			it=j;
			break;
		}
		
		
		int ii=i&((1<<26)-1-G[it]);
		memo[i]=memo[ii]+memo[i^(1<<it)];
	}
	cout<<"d"<<endl;
	for(int er=1;er<30;er++){
	int w=0;
	for(int i=0;i<(1<<26);i++){
		int e=__builtin_popcount(i);
		if(e%2)w+=inf-beki(memo[i],er,inf);
		else w+=beki(memo[i],er,inf);
		w%=inf;
	}
		if(w){
			cout<<er<<endl;
			break;
		}
	}
	*/
	
	return 0; 
 }

