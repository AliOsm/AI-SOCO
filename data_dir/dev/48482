#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<sstream>
#include<stdio.h>
#include<map>
#include<set>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll gcd(ll a, ll b){
    if (!b)
        return a;
    return gcd(b, a%b);
}
ll lcm(ll a, ll b){
    return b / gcd(a, b)*a;
}
#define FOR(I,N) for(int(i)=0;i<int(N);++i)
#define FORK(I,N,K) for(int(i)=0;i<int(N);i+=int(K))
int n;
class les{
public :
    int l, r, idx;
    les(int a, int b, int c){
        l = a; r = b;
        idx = c;
    }
    les(){
        l = r = idx = 0;
    }
    bool operator<(const les & a)const{
        if (a.l != l)
            return l < a.l;
        return r < a.r;
    }
};
les g[10000];
int main(){
    cin >> n;
    g[n + 1] = les(1 << 20, 1 << 20, 1 << 20);
    FOR(0, n)
    {
        cin >> g[i].l >> g[i].r;
        g[i].idx = i + 1;
    }
    sort(g, g + n + 1);
    vector<int>s;
    for (int i = 1; i <= n; ++i){
        bool t = 1;
        int mx = 0;
        for (int j = 1; j <= n; ++j){
            if (j == i)
                continue;
            if (mx > g[j].l)
            {
                t = 0; break;
            }
            mx = max(mx, g[j].r);
        }
        if (t)
            s.push_back(g[i].idx);
    }
    sort(s.begin(), s.end());
    cout << s.size() << endl;
    FOR(0, s.size())
        cout << s[i] << " ";
}