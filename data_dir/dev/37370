#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int N = 200 * 1000 + 20;
int n, a[N], sz, l[N], r[N], fen[N];
ll ans;
vector<int> vec;

void make_array() {
	for (int i = 0; i < n; i++) {
		vec.push_back(--l[i]);
		vec.push_back(--r[i]);
	}
	sort(vec.begin(), vec.end());
	vec.resize(unique(vec.begin(), vec.end()) - vec.begin());
	for (int i = 0; i < n; i++) {
		l[i] = lower_bound(vec.begin(), vec.end(), l[i]) - vec.begin();
		r[i] = lower_bound(vec.begin(), vec.end(), r[i]) - vec.begin();
	}
	sz = vec.size();
	iota(a, a + sz, 0);
	for (int i = 0; i < n; i++)
		swap(a[l[i]], a[r[i]]);
}

ll get(int i) {
	ll res = 0;
	for (i++; i; i ^= i & -i)
		res += fen[i];
	return res;
}

void update(int i) {
	for (i++; i <= sz; i += i & -i)
		fen[i]++;
}


int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> l[i] >> r[i];
	make_array();
	for (int i = sz - 1; ~i; i--) {
		ans += get(a[i]) + abs(vec[i] - vec[a[i]]) - abs(i - a[i]);
		update(a[i]);
	}
	return cout << ans << "\n", 0;
}
