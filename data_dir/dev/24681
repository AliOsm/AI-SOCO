#include <bits/stdc++.h>


using namespace std;

vector<long long> v;
vector<int> dp, dz;
int n, k;

bool check(long long x) {
    for (auto &it : dp)
        it = 0;
    for (auto &it : dz)
        it = 0;

    int cnt = 0;

    dp[0] = 1;
    for (int i = 1; i <= n; i++) {
        cnt += dz[i];
        dz[i] = 0;
        dp[i] = cnt > 0;
        if  (!dp[i - 1])
            continue;

        int l = i + k - 1;
        int r = upper_bound(v.begin(), v.end(), v[i] + x) - v.begin();

        if (r < l)
            continue;
        if (l <= n)
            dz[l]++;
        if (r <= n)
            dz[r]--;

        cnt += dz[i];
        dz[i] = 0;
        dp[i] = cnt > 0;

//        cout << i << " " << l << " " << r << " === " << v[i] << " " << v[i] + x << "\n";
    }

//    for (auto it : dp) {
//        cout << it << " ";
//    }
//    cout << "\n";

    return dp.back();
}

int main() {
    cin >> n >> k;

    v.resize(n + 1);
    dp.resize(n + 1);
    dz.resize(n + 1);
    for (int i = 1; i <= n; i++)
        cin >> v[i];
    v[0] = 0;
    sort(v.begin(), v.end());

    long long l = 0;
    long long r = (long long)(1e9);

    while (l < r) {
        long long c = (l + r) >> 1LL;

        if (check(c))
            r = c;
        else
            l = c + 1;
    }
//    check(19);

    cout << l << "\n";

    return 0;
}

