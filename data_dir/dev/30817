#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                              \
  for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
  cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N = 510;
int a[N], b[N];
vector<pair<int, char> > resp;
bool azedou=false;
void solve(vi &num, int j)
{
  int maximo = 0;
  int idx = 0;
  bool coco=true;
  if(num.size()==1) coco=false;
  for(int i=0;i<num.size()-1;i++)
    if(num[i]!=num[i+1]) coco=false;
  if(coco){
    azedou=true;
    return;
  }
  for (int i = 0; i < num.size(); i++) {
    if (maximo < num[i]) {
      maximo = num[i];
    }
  }
  bool dir=false;
  bool esq=false;
  for(int i=0;i<num.size()-1;i++){
    if(num[i]==maximo){
      if(num[i]>num[i+1]){
        idx=i+1;
        dir=true;
        break;
      }
    }
  }
  for(int i=num.size()-1;i>0;i--){
    if(num[i]==maximo){
      if(num[i]>num[i-1]){
        idx=i+1;
        esq=true;
        break;
      }
    }
  }
  if (esq) {
    int comeu = 0;
    while (idx != 1) {
      resp.pb(mp(idx+j, 'L'));
      idx--;
      comeu++;
    }
    while (comeu < num.size()-1) {
      resp.pb(mp(1+j, 'R'));
      comeu++;
    }
  }
  else if(dir){
    maximo=0;
    idx=0;
    for (int i = num.size()-1; i>=0; i--) {
      if (maximo < num[i]) {
        maximo = num[i];
        idx=i+1;
      }
    }
    int iter=num.size()-idx;
    while(iter--){
      resp.pb(mp(idx+j,'R'));
    }
    while(idx!=1){
      resp.pb(mp(idx+j,'L'));
      idx--;
    }
  }
}
int main()
{
  int n,m;
  sc(n);
  for (int i = 0; i < n; i++) sc(a[i]);
  sc(m);
  for (int i = 0; i < m; i++) sc(b[i]);
  int i = 0, j = 0;
  while (i < n) {
    int sum = 0;
    vi xablau;
    if(j==m){
      puts("NO");
      return 0;
    }
    while (sum < b[j]) {
      sum += a[i];
      xablau.pb(a[i]);
      i++;
    }
    if (sum != b[j]) {
      puts("NO");
      return 0;
    }
    solve(xablau,j);
    if(azedou){
      puts("NO");
      return 0;
    }
    j++;
  }
  if(j<m)
  {
    puts("NO");
    return 0;
  }
  puts("YES");
  for(int i=0;i<resp.size();i++){
    printf("%d %c\n", resp[i].first, resp[i].second);
  }
  return 0;
}
