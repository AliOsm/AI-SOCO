//Thank you for supporting FastLine, (WorldWeb or james1990), (KNaga_KZ or KNaga)

#include <bits/stdc++.h>
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define sc   scanf
#define pr   printf
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define ff   first
#define ss   second
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define ld   long double
#define pdd  pair < ld, ld >
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define rep( a, b, c, d )  for( ll a = b; a <= c; a += d )
#define rvv( a, b, c, d )  for( ll a = b; a >= c; a -= d )
#define en                 printf( "\n" )
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define srtr( c )          sort( c.rbegin(), c.rend() )
#define bitnum         __builtin_popcount
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
#define TIME() if(QQQQ)printf("My Time: %.3lfms\n", (double)clock() / CLOCKS_PER_SEC);
bool QQQQ;
#define see(x)  if(QQQQ)cout << x << " ";
#define sees(x) if(QQQQ)cout << x << endl;
#define N       2000256
#define NN      1000000
#define M       998244353
#define I       1000000000000000000
const int dx[ ] = { 1, -1, 0, 0, 1, 1, -1, -1 };
const int dy[ ] = { 0, 0, -1, 1, 1, -1, 1, -1 };
using namespace std;

ll ttt = 1;
ll n, sum, a, b, z, ans;
string s, t, ss, rrr;

void solve()
{
    cin >> n >> s;
    rrr = s[0];
    ss = s;
    ans = 1;
    for( int i = 1; i < n; i ++ )
    {
        int ok = 0;
        for( int j = i; j < n; j ++ )
        {
            if( s[j-i] > ss[j] )
            {
                ok = 3;
                break;
            }
            if(s[j-i] < ss[j] )
            {
                ok = 1;
                break;
            }
        }
        if(ok == 0 )
        {
            if((i&1)==(s.size()&1))
            {
                for( int j = 0; j < rrr.size(); j ++ )
                {
                    if( s[j+n-i] < rrr[j] )
                    {
                        ok = 1;
                        break;
                    }
                    if( s[j+n-i] > rrr[j] )
                    {
                        ok = 2;
                        break;
                    }
                }
                if(ok==2)
                {
                    s.clear();
                    for( int j = i; j < n; j ++ )
                    {
                        s = s + ss[j];
                    }
                    s += rrr;
                    ans = i + 1;
                }

            }
            else
            {
                rev(rrr);
                for( int j = 0; j < rrr.size(); j ++ )
                {
                    if( s[j+n-i] < rrr[j] )
                    {
                        ok = 1;
                        break;
                    }
                    if( s[j+n-i] > rrr[j] )
                    {
                        ok = 2;
                        break;
                    }
                }
                if(ok==2)
                {
                    s.clear();
                    for( int j = i; j < n; j ++ )
                    {
                        s = s + ss[j];
                    }
                    s += rrr;
                    ans = i + 1;
                }
                rev(rrr);
            }
        }
        if(ok == 3)
        {
            if((i&1)==(s.size()&1))
            {
                s.clear();
                for( int j = i; j < n; j ++ )
                {
                    s = s + ss[j];
                }
                s = s + rrr;
                ans = i + 1;
            }
            else
            {
                rev(rrr);
                s.clear();
                for( int j = i; j < n; j ++ )
                {
                    s = s + ss[j];
                }
                s = s + rrr;
                ans = i + 1;
                rev(rrr);
            }
        }
        rrr = rrr + ss[i];
    }

    cout << s << endl << ans << endl;
}

int main()
{
    QQQQ = 0;
    sc( "%I64d", &ttt );
    for( int i = 1; i <= ttt; i ++ )
        solve();
    TIME();
}

/*
1
156153
*/
