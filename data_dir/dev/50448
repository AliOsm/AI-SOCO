#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))

typedef long long ll;
typedef long double ld;

using namespace std;

const int maxn = 200*1000+10;
ll sum[4 * maxn][2];
int n, k, a, b, q, t, d, v, zero, one = 1, ted[maxn];

void add (int x, int &l, int &r, int &p)
{
    if (r - l == 1)
    {
        sum[x][0] = min (b, ted[p]);
        sum[x][1] = min (a, ted[p]);
        return;
    }
    int mid = (l + r) / 2;
    if (p < mid)
        add (2 * x + 1, l, mid, p);
    else
        add (2 * x + 2, mid, r, p);
    sum[x][0] = sum[2 * x + 1][0] + sum[2 * x + 2][0];
    sum[x][1] = sum[2 * x + 1][1] + sum[2 * x + 2][1];
}

ll get (int x, int &l, int &r, int ql, int &qr, int &p)
{
    if (ql >= r || l >= qr)
        return 0;
    if (ql <= l && r <= qr)
        return sum[x][p];
    int mid = (l + r) / 2;
    return get (2 * x + 1, l, mid, ql, qr, p) + get (2 * x + 2, mid, r, ql, qr, p);
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> k >> a >> b >> q;
    for (int i = 0; i < q; i++)
    {
        cin >> t;
        if (t == 1)
        {
            cin >> d >> v;
            d--;
            ted[d] += v;
            add (zero, zero, n, d);
        }
        else
        {
            cin >> d;
            d--;
            cout << get (zero, zero, n, zero, d, zero) + get (zero, zero, n, d + k, n, one) << endl;
        }
    }
	return 0;
}
