#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <numeric>
#include <stack>
#include <deque>
#include <memory.h>
#include <string>
#include <unordered_map>

#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<ll>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%I64d", &(a))
#pragma comment (linker, "/STACK:5000000000")
typedef long long ll;
const ll mod = 1000000007;
int Inf = (int)2e9;
ll LINF = (ll)1e18 + 1e17;

using namespace std;
map<int, deque<int>> dq;
bool used[200200];
int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	set<int> need;
	int n;
	memset(used, 0, sizeof(used));
	sc(n);
	fori(i, n)
		need.insert(i + 1);
	vector<int> a(n);
	fori(i, n)
	{
		sc(a[i]);
		need.erase(a[i]);
		dq[a[i]].push_back(i);
	}
	printf("%d\n", need.size());
	for (int i = 0; i < n; i++)
	{
		if (dq[a[i]].size() < 2)
		{
			continue;
		}
		int x = a[i], y = *need.begin();
		if (y < x)
		{
			a[i] = y;
			need.erase(y);
			dq[x].pop_front();
		}
		else
		{
			if (used[x])
			{
				a[i] = y;
				need.erase(y);
				int j = dq[x].front();
				dq[x].pop_front();
				dq[x].pop_front();
				dq[x].push_front(j);
			}
			else
			{
				used[x] = 1;
			}
		}
	}
	fori(i, n)
		printf("%d ", a[i]);

	return 0;
}