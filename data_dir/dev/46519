#include "bits/stdc++.h"
using namespace std;

const int N = 3e5 + 5;

void solve() {
	ios_base :: sync_with_stdio(false);
	cin.tie(NULL);
	int q;
	cin >> q;
	while(q--) {
		int n;
		cin >> n;
		vector<int> v(n);
		for(int i = 0; i < n; ++i) {
			cin >> v[i];
		}
		map < int , int > first;
		map < int , int > last;
		map < int , int > nxt;
		for(int i = 0; i < n; ++i) {
			last[v[i]] = i;
		}
		for(int i = n - 1; i >= 0; --i) {
			first[v[i]] = i;
		}
		int prev = -1;
		for(map < int , int > :: reverse_iterator it = first.rbegin(); it != first.rend(); ++it) {
			nxt[it -> first] = prev;
			prev = it -> first;
		}
		vector<int> dp(n, 0);
		for(int i = n - 1; i >= 0; --i) {
			if(first[v[i]] == i) {
				if(i == (n - 1)) {
					dp[i] = 1;
				} else {
					dp[i] = 1;
					int nxt_val = nxt[v[i]];
					if(nxt_val != -1) {
						if(first[nxt_val] > last[v[i]]) {
							dp[i] = max(dp[i], 1 + dp[first[nxt_val]]);
						}
					}
				}
			} 
		}
		int mx = 0;
		for(int i = 0; i < n; ++i) mx = max(mx, dp[i]);
		// cout << endl;
		cout << ((int) (first.size()) - mx) << endl;
	}
}
 
int main() {
	solve();
	return 0;  
}