#include <bits/stdc++.h>
using namespace std;
const int N = 300 * 1000 + 10;
int dp[N], fr[N], nd[N];
int main() {
	ios_base::sync_with_stdio (false);
	cin.tie(0);
	int q;
	cin >> q;
	while (q--) {
		int n;
		cin >> n;
		vector<int> v;
		for (int i = 0; i < n; i++) {
			int x;
			cin >> x;
			x--;
			nd[x] = i + 1;
			if (!fr[x]) {
				fr[x] = i + 1;
				v.push_back(x);
			}
		}
		sort(v.begin(), v.end());
		int sz = v.size();
		int ans = N;
		dp[sz - 1] = 1;
		for (int i = (int) v.size() - 2; i >= 0; i--) {
			dp[i] = 1;
			if (nd[v[i]] < fr[v[i + 1]])
				dp[i] += dp[i + 1];
//			cout << "i = " << i << " : " << dp[i] << endl;
		}
		for (int i = 0; i < sz; i++) {
			ans = min(ans, i + (sz - i - dp[i]));
		}
		cout << ans << "\n";
		for (int i = 0; i <= n; i++) 
			dp[i] = nd[i] = fr[i] = 0;
	}
	return 0;
}