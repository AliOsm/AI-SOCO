#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int N = 500010, A = 1000010;

int freq[A];
int freq_ac[A];
ll sum_ac[A];

int count_freq(int l, int r)
{
	r = min(r, A-1);
	if (l > r)
		return 0;
	if (l == 0)
		return freq_ac[r];
	
	return freq_ac[r] - freq_ac[l-1];
}

ll sum(int l, int r)
{
	r = min(r, A-1);
	if (l > r)
		return 0;
	if (l == 0)
		return sum_ac[r];
	return sum_ac[r] - sum_ac[l-1];
}

int main()
{
	int n, x, y;
	scanf("%d %d %d", &n, &x, &y);
	for (int i = 0; i < n; i++)
	{
		int a;
		scanf("%d", &a);
		freq[a]++;
	}

	for (int i = 1; i < A; i++)
	{
		freq_ac[i] = freq[i] + freq_ac[i-1];
		sum_ac[i] = (ll)i * freq[i] + sum_ac[i-1];
	}
	
	int max_inc = x/y;
	
	ll ans = (ll) n * x;

	for (int gcd = 2; gcd < A; gcd++)
	{
		int min_mod = max(gcd - max_inc, 1);
		int del = 0;
		ll inc = 0;
		int l = 1, r = gcd-1;
		while (l < A)
		{
			del += count_freq(l, l + min_mod-2);
			int inc_cnt = count_freq(l + min_mod - 1, r);
			ll inc_goal = (ll)inc_cnt * (r+1);
			inc += inc_goal - sum(l + min_mod-1, r);

			l += gcd;
			r += gcd;
		}
		ans = min(ans, (ll)x * del + (ll)y * inc);
	}
	printf("%lld\n", ans);
	return 0;
}


