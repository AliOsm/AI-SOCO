#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
int N;
vi in;
bool can(int how){
  vi h(how , 1000000);
  int cp = 0;
  for(int i=0;i<N;++i){
   bool place = false;
   for(int j=0;j<how;++j){
    int p = (cp + j)%how;
    if(h[p] > 0){
     place = true;
     h[p] = min(h[p] - 1 , in[i]);
     cp = (p+1)%how;
     break;
                }
                         }
   if(!place)return false;
                      }
  return true;
}
int main(){
  scanf("%d" , &N);
  in.resize(N);
  for(int i=0;i<N;++i)
   scanf("%d" , &in[i]);
  sort(all(in)) , reverse(all(in));
  for(int i=1;i<N;++i)
   if(can(i)){
    printf("%d\n" , i);
    return 0;
             }
  printf("%d\n" , N);
  return 0;
}
