#include <algorithm>
#include <iostream>
#include <cmath>
#include <fstream>
#include <vector>
#include <iomanip>
#include <string>
#include <queue>
#include <map>
#include <stack>
#include <set>
#include <memory.h>

using namespace std;

typedef long long ll;
typedef long double ld;

template <typename T>
T gcd(T a, T b) {
    while (a > 0 && b > 0) {
        if (a > b) a %= b; else b %= a;
    }
    return (a + b);
}

template <typename T>
T lcm(T a, T b) {
    return a / gcd(a, b) * b;
}

template <typename T>
bool prime(T n) {
    if (n <= 1) {
        return false;
    }
    T i = 2;
    while (i * i <= n) {
        if (n % i == 0) {
            return false;
        }
        ++i;
    }
    return true;
}

void solveTask() {
    int n, k, x;
    cin >> n >> k >> x;
    vector<ll> suff(n + 2, 0), pref(n + 2, 0), a(n + 1, 0);
    ll multiplier = 1;
    for (int i = 1; i <= k; ++i) {
        multiplier *= (ll)x;
    }
    for (int i = 1; i <= n; ++i) cin >> a[i];
    ll answer = 0;
    pref[0] = 0;
    for (int i = 1; i <= n; ++i) pref[i] = pref[i - 1] | a[i];
    suff[n + 1] = 0;
    for (int i = n; i >= 1; --i) suff[i] = suff[i + 1] | a[i];
    for (int i = 1; i <= n; ++i) {
        answer = max(answer, pref[i - 1] | suff[i + 1] | (a[i] * multiplier));
    }
    cout << answer << endl;
}

int main() {
#ifndef ONLINE_JUDGE  
    freopen("input.txt", "r", stdin);
#else
    // online submission
#endif    
    ios_base::sync_with_stdio(false);
    solveTask();
    return 0;
}