#include<bits/stdc++.h>
#define ll long long
#define inf 1000000000000000ll
#define xx     first
#define yy    second
#define pb push_back
using namespace std;
typedef pair<ll, int>pi;
priority_queue<pi>pq;
vector<int>adj[1003];
vector<ll> cst[1003];
ll dist[1003][1003];
void dijkstra1(int s)
{
    dist[s][s]= 0;
    pq.push({0, s});
    while(!pq.empty())
    {
        ll y= -pq.top().xx;
        int x= pq.top().yy;
        pq.pop();
        if(dist[s][x]!=y)continue;
        for(int i=0; i<adj[x].size(); i++)
        {
            int z= adj[x][i];
            ll c=  cst[x][i];
            if(dist[s][z]>dist[s][x]+c)
                dist[s][z]= dist[s][x]+c, pq.push({-dist[s][z], z});
        }
    }while(!pq.empty())pq.pop();
    return;
}
ll dd[1003], cc[1003];
ll val[1003];
void dijkstra2(int s, int n)
{
    pq.push({0, s});
    while(!pq.empty())
    {
        ll y= -pq.top().xx;
        int x= pq.top().yy;
        pq.pop();
        if(val[x]!=y)continue;
        for(int i=1; i<=n; i++)
        {
            if(dist[x][i]<=dd[x])
            {
                if(val[i]>cc[x]+val[x])
                    val[i]= cc[x]+val[x], pq.push({-val[i], i});
            }
        }
    }return;
}
int main()
{
    ll z;
    int n, m, s, e, x, y;
    scanf("%d %d %d %d", &n, &m, &s, &e);
    for(int i=0; i<m; i++)
    {
        scanf("%d %d %lld", &x, &y, &z);
        adj[x].pb(y);
        adj[y].pb(x);
        cst[x].pb(z);
        cst[y].pb(z);
    }
    //cerr<<"******************"<<endl;
    for(int i=1; i<=n; i++)
        for(int j=1; j<=n; j++)
            dist[i][j]= inf;
    for(int i=1; i<=n; i++)
        dijkstra1(i);
    for(int i=1; i<=n; i++)
        scanf("%lld %lld", &dd[i], &cc[i]);
    for(int i=1; i<=n; i++)
        val[i]= inf;
    val[s]= 0;
    dijkstra2(s, n);
    if(val[e]==inf)val[e]= -1;
    printf("%lld\n", val[e]);

    return 0;
}
