#pragma optimization_level 3
//#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC target("avx,avx2,fma")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("sumsqr.in");ofstream out("sumsqr.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    int z; cin>>z;
    for(; z--;){
        int a,b; cin>>a>>b;
        vec<vec<int>> m(a, vec<int>(b));
        vec<vec<pii>> st(a, vec<pii>(b));
        vec<str> mp(a);
        for(int q=0; q<a; q++){
            str t; cin>>t;
            for(int w=0; w<b; w++){
                m[q][w] = t[w]=='0';
            }
        }
        for(int q=0; q<a; q++){
            cin>>mp[q];
            for(int w=0; w<b; w++){
                char c = mp[q][w];
                if(c=='L') st[q][w] = {q, w-1};
                if(c=='R') st[q][w] = {q, w+1};
                if(c=='U') st[q][w] = {q-1, w};
                if(c=='D') st[q][w] = {q+1, w};
            }
        }
        for(int it=0; it<30; it++){
            auto nw = st;
            for(int q=0; q<a; q++){
                for(int w=0; w<b; w++){
                    nw[q][w] = st[st[q][w].F][st[q][w].S];
                }
            }
            st = nw;
        }
        vec<vec<int>> o(a, vec<int>(b));
        int ans = 0;
        set<pii> s;
        for(int q=0; q<a; q++){
            for(int w=0; w<b; w++){
                int x = st[q][w].F, y = st[q][w].S;
                s.insert({x,y});
                if(m[q][w] && !o[x][y]){
                    o[x][y] = 1;
                    ans++;
                }
            }
        }
        cout<<s.size()<<" "<<ans<<"\n";
    }
}
