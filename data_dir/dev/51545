#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007

int n, p, c;
long long two[55], dp[55][55][55][2], ans;

inline void add(long long &a, long long b) {
	a += b;
	if (a >= MOD)
		a-= MOD;
}

int main() {
	for (int i = 0; i < 55; i++)
		two[i] = (1LL << i) % MOD;
	scanf("%d%d", &n, &p);
	dp[0][0][0][0] = 1;
	for (int i = 0, ii = 1; i < n; i = ii++) {
		scanf("%d", &c);
		for (int j = 0; j <= i; j++)
			for (int k = 0; k <= i; k++)
				for (int l = 0; l < 2; l++)
					if (dp[i][j][k][l]) {
						if (c != 1)
							if (k) {
								add(dp[ii][j + 1][k][l ^ 1], dp[i][j][k][l] * two[i - 1] % MOD);
								add(dp[ii][j][k][l], dp[i][j][k][l] * two[i - 1] % MOD);
							} else
								add(dp[ii][j + 1][k][l ^ 1], dp[i][j][k][l] * two[i] % MOD);
						if (c != 0)
							if (j) {
								add(dp[ii][j][k + 1][l ^ 1], dp[i][j][k][l] * two[i - 1] % MOD);
								add(dp[ii][j][k][l], dp[i][j][k][l] * two[i - 1] % MOD);
							} else
								add(dp[ii][j][k + 1][l ^ 1], dp[i][j][k][l] * two[i] % MOD);
					}
	}
	// for (int i = 0; i <= n; i++) for (int j = 0; j <= n; j++) for (int k = 0; k <= n; k++) for (int l = 0; l < 2; l++) if (dp[i][j][k][l]) printf("dp[%d][%d][%d][%d] = %lld\n", i, j, k, l, dp[i][j][k][l]);
	for (int i = 0; i <= n; i++)
		for (int j = 0; j <= n; j++)
			add(ans, dp[n][i][j][p]);
	printf("%lld\n", ans);
	return 0;
}
