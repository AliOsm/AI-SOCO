#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define DESPACITO2 1000000000000000
#define DESPACITO 1000000000000000000
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
 
using namespace std;

bool primes[100001];
vector<int>factors[100001];

int gcd(int a,int b)
{
	if(a==0)
		return b;
	return gcd(b%a,a);
}


void Sieve()
{
	primes[1]=true;
	REP(i,2,sqrt(100000))
	{
		if(!primes[i])
		{
			for(int j=2;j*i<=100000;j++)
				primes[i*j]=true;
		}
	}
	REP(i,2,100000)
	{
		if(!primes[i])
		{
			for(int j=1;j*i<=100000;j++)
				factors[j*i].pb(i);
		}
	}
}

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
    unordered_map<int,int>x;
    unordered_map<int,int>ans;
    int n;
    cin >> n;
    int arr[n+1];
    REP(i,1,n)
    	cin >> arr[i];
    sort(arr+1,arr+n+1);
    Sieve();
    int len=0;
    for(int i=n;i>=1;i--)
    {
    	int maxim=0;
    	REP(j,0,factors[arr[i]].size()-1)
    	{
    		maxim=max(maxim,ans[x[factors[arr[i]][j]]]);
    		x[factors[arr[i]][j]]=arr[i];
    	}
    	ans[arr[i]]=1+maxim;
    	len=max(len,1+maxim);
    }
    cout << len;
}