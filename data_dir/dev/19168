/*
 * app.cpp
 *
 *  Created on: 14.02.2015
 *      Author: Eran
 */

#include <bits/stdc++.h>
#include <ext/rope>

using namespace std;
using namespace __gnu_cxx;

#define stdio true
#define input "doggy.in"
#define output "doggy.out"

const int alpha = 26;
const int maxn = 100005;
const int logn = 18;
const int inf = 1000000007;
const long long mod = 1000000007;
const long long l_inf = (long long) 4e18;
const double eps = 1e-5;

int main() {
	ios_base::sync_with_stdio(0);
	srand(time(NULL));
	cin.tie(nullptr);
	cout.precision(10);
	cout << fixed;
	if (!stdio) {
		freopen(input, "r", stdin);
		freopen(output, "w", stdout);
	}
	int N, M, T;
	scanf("%d%d%d", &N, &M, &T);
	vector<vector<int> > t(maxn);
	for (int i = 0; i < N; i++) {
		int h, m, s;
		scanf("%d%*c%d%*c%d", &h, &m, &s);
		t[60 * 60 * h + 60 * m + s].push_back(1);
	}
	vector<int> tout;
	vector<int> answer;
	int pos = 0, cnt = 0;
	bool check = false;
	for (int i = 0; i < maxn; i++) {
		while (!t[i].empty()) {
			int val = t[i].back();
			t[i].pop_back();
			if (val == 1) {
				if (cnt < M) {
					cnt++;
					pos++;
					t[i + T].push_back(-1);
					tout.push_back(i + T);
				}
				if (cnt == M) {
					check = true;
					t[tout[pos - 1]].pop_back();
					tout[pos - 1] = i + T;
					t[tout[pos - 1]].push_back(-1);
				}
				answer.push_back(pos);
			} else {
				cnt--;
			}
		}
	}
	if (check) {
		cout << pos << endl;
		for (int i = 0; i < N; i++)
			cout << answer[i] << endl;
	} else {
		cout << "No solution";
	}
	return 0;
}
