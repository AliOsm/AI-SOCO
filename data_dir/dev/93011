#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>; using vi = vector<int>;
template <class T> istream &operator>>(istream &, vector<T> &);
template <class T> ostream &operator<<(ostream &, const vector<T> &);
using ll = long long; using vll = vector<long long>;
constexpr int INF = 0x3f3f3f3f; constexpr ll BINF = 0x3f3f3f3f3f3f3f3fLL;

int solve() {
	int n; cin >> n;
	string s, t; cin >> s >> t;
	vector<vi> a(27);
	vector<vi> b(27);
	for (int i=0;i<n;i++) if (s[i] != '?') a[s[i] - 'a'].push_back(i); else a[26].push_back(i);
	for (int i=0;i<n;i++) if (t[i] != '?') b[t[i] - 'a'].push_back(i); else b[26].push_back(i);
	vector<pii> ans;
	for (int i=0;i<26;i++) {
		while (!a[i].empty() && !b[i].empty()) ans.emplace_back(a[i].back(), b[i].back()), a[i].pop_back(), b[i].pop_back();
		while (!a[i].empty() && !b[26].empty()) ans.emplace_back(a[i].back(), b[26].back()), a[i].pop_back(), b[26].pop_back();
		while (!a[26].empty() && !b[i].empty()) ans.emplace_back(a[26].back(), b[i].back()), a[26].pop_back(), b[i].pop_back();
	}
	while (!a[26].empty() && !b[26].empty()) ans.emplace_back(a[26].back(), b[26].back()), a[26].pop_back(), b[26].pop_back();
	cout << ans.size() << endl;
	for (auto [l, r] : ans)
		cout << l + 1 << ' ' << r + 1 << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	// int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}

template <class T> istream &operator>>(istream &is, vector<T> &v) {
	for (auto it=v.begin();it!=v.end();++it) is >> *it;
	return is;
}

template <class T> ostream &operator<<(ostream &os, const vector<T> &v) {
	for (auto it=v.begin();it!=v.end();) os << *it << " \n"[++it==v.end()];
	return os;
}
