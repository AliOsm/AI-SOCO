#include<bits/stdc++.h>
#define PII pair<int,int>
using namespace std;
vector<pair<int,int> >v1[100005];
int lev[100005];
bool vis[100005];
int path[100005];

void Print(int n)
{
    if(n==1)
    {
        cout<<n<<" ";
        return ;
    }
    Print(path[n]);
    cout<<n<<" ";
}

int main()
{
    int i,n,m,x,y,d;
    scanf("%d %d",&n,&m);

    for( i=1; i<=m; i++)
    {
        scanf("%d %d %d",&x,&y,&d);
        v1[x].push_back(make_pair(y,d));
        v1[y].push_back(make_pair(x,d));
    }
    for(int i=1; i<=n; i++)
    {
        lev[i]=INT_MAX;
        path[i]=-1,vis[i]=0;
    }
    priority_queue<PII,vector<PII>,greater<PII> >Q;
    Q.push(make_pair(0,1));
    lev[1]=0;
    pair<int,int>P;
  //  vector<int>ans;
    //ans.push_back(1);
    while(!Q.empty())
    {
        P=Q.top();
        Q.pop();
      //  cout<<P.second<<"ami ekhane "<<endl;
        if(vis[P.second]) continue;
        x=P.second;
        vis[x]=1;
      //     cout<<x<<endl;
        for(i=0; i<v1[x].size(); i++)
        {
            //cout<<"ekhane";
            int v=v1[x][i].first;
            y=v1[x][i].second;
            // cout<<v<<"  "<<lev[v]<<endl;
            if(!vis[v] &&lev[v]>(lev[x]+y))
            {
                lev[v]=lev[x]+y;
                Q.push(make_pair( lev[v],v));
                path[v]=x;
                //cout<<path[y]<<endl;
            }

        }
    }
//cout<<v1[5].size()<<endl;
  //  for(int i=1;i<=n;i++)
  //      cout<<path[i]<<"  ";

    if(path[n]==-1 && n!=1)
    {
        puts("-1");
        return 0;
    }
    // cout<<n<<" ";
    Print(n);
   // cout<<"5";
}
