//Pham Huu Canh
//E. Fools and Roads
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "e.inp"
#define foo "e.out"
#define MOD 1000000007
#define inf 1000111000111000111LL

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;
#define nmax 100005

int dtime, maxbit;
int par[nmax][18], tin[nmax], tout[nmax], id[nmax], add[nmax], res[nmax];
vector<II> v[nmax];

void dfs(int x, int g){
    par[x][0] = g;
    tin[x] = ++dtime;
    fore(ite, v[x]) if ((*ite).fi != g){
        id[(*ite).fi] = (*ite).se;
        dfs((*ite).fi, x);
    }
    tout[x] = dtime;
}

bool is_parent(int x, int y){
    return tin[x] <= tin[y] && tout[y] <= tout[x];
}

int LCA(int x, int y){
    if (is_parent(x, y))    return x;
    if (is_parent(y, x))    return y;
    for (int i = maxbit-1; i >= 0; i--) if (!is_parent(par[x][i], y))   x = par[x][i];
    return par[x][0];
}

int traversal(int x, int g){
    fore(ite, v[x]) if ((*ite).fi != g) add[x] += traversal((*ite).fi, x);
    res[id[x]] = add[x];
    return add[x];
}

void input()
{
    int n, i, j, x, y, nq;
    
    scanf("%d", &n);
    repi(i, 2, n){
        scanf("%d %d", &x, &y);
        v[x].pb(mp(y, i)), v[y].pb(mp(x, i));
    }
    
    dtime = 0;
    dfs(1, 1);
    
    for (maxbit = 0; 1<<maxbit <= n; maxbit++);
    for (j = 1; j < maxbit; j++)    repi(i, 1, n)   par[i][j] = par[par[i][j-1]][j-1];
    
    scanf("%d", &nq);
    while(nq--){
        scanf("%d %d", &x, &y);
        add[x]++, add[y]++, add[LCA(x, y)] -= 2;
    }
    
    traversal(1, 1);
    repi(i, 2, n)   printf("%d ", res[i]);
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
