/*
Submitted With (^^) by -> Hossam ^_^
 _____________________
|     ___     ___     |
|    (^_^)   (^_^)    |
|   /( | )\_/( | )\   |
|_____|_|_____|_|_____|
*/

#include <bits/stdc++.h>

using namespace std;

inline void prep()
{
    cin.tie(0);
    cin.sync_with_stdio(0);
}

#define X first
#define Y second
#define ll long long
#define inf (0x7fffffffffffffff)
#define all(x) x.begin(), x.end()

const int mod = (int)1e9 + 7;
const int MX = (int)1e6 + 1;

int main()
{
    prep();

    int n, k;
    cin >> n >> k;

    int p[n], t[n], io[n];
    long double res = 0.0;
    for(int i = 0; i < n; ++i){
        cin >> p[i] >> t[i];
        // res += p[i];
        io[i] = i;
    }
    sort(io, io + n, [&](int x, int y){return p[x] < p[y];});

    vector<vector<int>> v(k);
    int box_no = k - 1;
    int i = n - 1;
    while(i >= 0){

        while(i >= 0 && i >= box_no && t[io[i]] != 1) v[box_no].push_back(io[i--]);
        if(i == -1) break;

        if(i >= box_no && t[io[i]] == 1)
            v[box_no].push_back(io[i--]); //enter a stool as a minimum or whatever else necessary
            
        box_no--;

        if(box_no == -1){
            while(i >= 0) v[0].push_back(io[i--]);
            break;
        }
    }

    // cout << res << endl;
    for(auto x : v){
        bool has_coupon = false;
        for(auto y : x){
            res += p[y];
            has_coupon |= t[y] == 1;
        }
        if(has_coupon) res -= 0.5 * p[x.back()];
    }

    cout << fixed << setprecision(1) << res << endl; //haha async streams ^_^ not guaranteed :'(

    for (auto x : v){
        cout << x.size() << " ";
        for (auto y : x)
            cout << y + 1 << " ";
        cout << "\n";
    }

    return 0;
}