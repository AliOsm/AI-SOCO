//! Oos Karim Rokhsat
#include<bits/stdc++.h>
using namespace std;

typedef double                      ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 2e5 + 10;
const ll MXM = 5e2 + 10;
const ll MX5 = 5e5 + 10;
const ll MX6 = 1e6 + 10;
const ll LOG = 20;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}

ll n, Start, p1, p2, t;
ll cnt[MX5], C[MX5];
vector<ll> Ans;
set<ll> O, Q;
vector<pll> G[MX5];
bool vis[MX5];
map<pll, ll> mp;

void DFS(ll u){
    while(cnt[u] < G[u].size()){
        ll ind = cnt[u];
        ll v = G[u][ind].F, id = G[u][ind].S;
        if(!vis[id]){
            vis[id] = 1;
            C[id] = (u > MXN);
            DFS(v);
        }
        cnt[u] ++;
    }
    return;
}

int main(){
    fast_io
    //file_io
    cin >> n;
    for(int i = 0; i < n; i ++){
        ll u, v;
        cin >> u >> v;
        v += MXN;
        G[u].pb({v, i});
        G[v].pb({u, i});
        mp[{u, v}] = i;
        mp[{v, u}] = i;
        Q.insert(u);
        Q.insert(v);
    }

    for(auto u : Q){
        if(G[u].size() % 2 == 1){
            O.insert(u);
        }
    }

    ll ID = n;

    std::set<ll>::iterator itr = O.begin();

    while(itr != O.end()){
        ll u = *itr;
        itr ++;
        ll v = *itr;
        itr ++;
        G[u].pb({v, ID});
        G[v].pb({u, ID});
        ID ++;
    }

    for(auto u : Q){
        if(cnt[u] < G[u].size()){
            DFS(u);
        }
    }

    for(int i = 0; i < n; i ++) cout << (C[i] == 1 ? 'r' : 'b');

    return 0;
}

//! N.N
