#include <bits/stdc++.h>
using namespace std;

vector<vector<int>> e;
vector<bool> v;

double dfs(int n, int p, int d, double f)
{
    int nc = e[n].size() - (n != 1);
    if (nc == 0)
        return d * f;
    else {
        double v = 0.0;
        for (int c : e[n])
            if (c != p)
                v += dfs(c, n, d + 1, f / nc);
        return v;
    }
}

int main()
{
    ios::sync_with_stdio(false), cin.tie(nullptr);
    int n;
    cin >> n;
    e.resize(n + 1), v.resize(n + 1);
    for (int i = 0; i < n - 1; i++) {
        int u, v;
        cin >> u >> v;
        e[u].push_back(v), e[v].push_back(u);
    }
    cout << fixed << setprecision(10) << dfs(1, 0, 0, 1.0) << '\n';
}