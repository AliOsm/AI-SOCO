#include<bits/stdc++.h>
#define x first
#define y second
using namespace std;
const int MXN = 1e5 + 10;
int n, m, r, k, p, c, q, A[MXN], T[MXN], M[MXN], P[MXN];
vector < pair < int , int > > V[MXN];
void DFS(int v)
{
    M[v] = 1;
    for (auto X : V[v])
    {
        if (M[X.x] != 0)
        {
            if (P[X.x] ^ P[v] == X.y)
                q = 1;
            continue;
        }
        P[X.x] = P[v] ^ X.y ^ 1;
        DFS(X.x);
    }
}
int main()
{
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++)
        scanf("%d", &A[i]);
    for (int i = 1; i <= m; i++)
    {
        scanf("%d", &k);
        for (int j = 0; j < k; j++)
        {
            scanf("%d", &r);
            if (T[r] == 0)
            {
                T[r] = i;
                continue;
            }
            V[i].push_back(make_pair(T[r], A[r]));
            V[T[r]].push_back(make_pair(i, A[r]));
        }
    }
    for (int i = 1; i <= m; i++)
    {
        if (M[i] != 0)
            continue;
        DFS(i);
        if (q == 1)
            return printf("NO"), 0;
    }
    printf("YES");
    return (0);
}
