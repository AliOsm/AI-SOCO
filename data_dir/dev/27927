#include <bits/stdc++.h>

/*#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")   */


//#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
//using namespace __gnu_pbds;

#define ss second
#define ff first
#define int long long
//#define double long double
#define pb push_back

const int N = 2e6 + 51, MOD = 1e9 + 7, mod = 998244353, INF = 7e18;

mt19937 Flash_new_51(51515);

using vi = vector <int>;
using vp = vector <pair <int, int>>;

int ind[N], t[N], d[N];

void push (int v) {
    t[v * 2 + 1] += d[v];
    t[v * 2 + 2] += d[v];
    d[v * 2 + 2] += d[v];
    d[v * 2 + 1] += d[v];
    d[v] = 0;
}

void upd (int v, int l, int r, int tl, int tr, int del) {
    if (l >= tr || r <= tl) return;
    if (tl <= l && r <= tr) {
         //   cout << l << ' ' <<r << endl;
        d[v] += del;
        t[v] += del;
        return;
    }
    if (d[v] != 0) push(v);
    int m = (r + l) >> 1ll;
    upd(v * 2 + 1, l, m, tl, tr, del);
    upd(v * 2 + 2, m, r, tl, tr, del);
    t[v] = max(t[v * 2 + 2], t[v * 2 + 1]);
}

signed main() {
    #ifdef Flash
     freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        ind[x] = i + 1;
    }
    int x = n;
    for (int i = -1; i < n - 1; i++) {
        if (i == -1) {
            upd(0, 0, n + 3, 0, ind[x] + 1, 1);
            cout << x << ' ';
            continue;
        }
        int xx;
        cin >> xx;
        upd(0, 0, n + 3, 0, xx + 1, -1);
        while (true) {
            if (t[0] > 0) break;
            x--;
            upd(0, 0, n + 3, 0, ind[x] + 1, 1);
        }
        cout << x << ' ';
    }
}
