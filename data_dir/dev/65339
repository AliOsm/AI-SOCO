#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<ld,ld> pld;
typedef pair<pll,ll> plll;
typedef pair<pll,pll> ppll;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back
#define m_p make_pair
template< typename T,typename V>ostream &operator<< (ostream &out,const pair<T,V> x){ out << "{" << x.fst << " : " << x.snd << "}"; return out;}template< typename T>ostream &operator<< (ostream &out,const set<T> x){ for(auto &it : x){ out << it << " "; } return out;}template< typename T>ostream &operator<< (ostream &out,const multiset<T> x){ for(auto &it : x){ out << it << " "; } return out;}template< typename T,typename V>ostream &operator<< (ostream &out,const map<T,V> x){ for(auto &it : x){ out << "[" << it.fst << "]" << " = " << it.snd << "\n"; } return out;}template< typename T>ostream &operator<< (ostream &out,const vector<T> x){ for(int i = 0;i < x.size() - 1; ++i){ out << x[i] << " "; } out << x.back(); return out;}template< typename T>ostream &operator<< (ostream &out,const vector<vector<T> > x){ for(int i = 0;i < x.size() - 1; ++i){ out << "[" << i << "]" << " = {" << x[i] << "}\n"; } out << "[" << x.size() - 1 << "]" << " = {" << x.back() << "}\n"; return out;}

const ll N = 1e6 + 5;
const ll MOD = 1e9 + 7;
const ll INF = 1e9;

ll pw[100];

ll get(ll x,ll l,ll r,ll sz){
    if(l == r){
        return l;
    }
    sz /= 4;
    ll nx = x % sz;
    if(x < sz){
        return get(nx,l + 0 * sz,r - 3 * sz,sz);
    }
    if(x < 2 * sz){
        return get(nx,l + 2 * sz,r - 1 * sz,sz);
    }
    if(x < 3 * sz){
        return get(nx,l + 3 * sz,r - 0 * sz,sz);
    }
    if(x < 4 * sz){
        return get(nx,l + 1 * sz,r - 2 * sz,sz);
    }
}

void solve(){
    ll x;
    cin >> x;
    --x;
    ll mod = x % 3;
    x /= 3;
    ll gr = 0;
    ll lf = 0,cn = 0,rg = 0;
    for(ll i = 0; i < 100; ++i){
        if(x >= pw[i]){
            x -= pw[i];
            gr = i + 1;
        }else{
            break;
        }
    }
    lf = x + pw[gr];
    cn = get(x,0,pw[gr] - 1,pw[gr]) + 2 * pw[gr];
    rg = lf ^ cn;
    if(mod == 0)cout << lf;
    if(mod == 1)cout << cn;
    if(mod == 2)cout << rg;
}

main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    ll t;
    pw[0] = 1;
    for(ll i = 1; i < 100; ++i){
        pw[i] = pw[i - 1] * 4;
    }
    cin >> t;
    while(t--){
        solve();
        cout << "\n";
    }
    return 0;
}
