#pragma comment(linker, "/STACK:268435456")

#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>	
#include<memory.h>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cmath>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define for1(i, n) for(int i = 1; i < (int)(n); ++i)
#define forr(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = int(a); i <= int(b); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())
#define hash archash
#define next arcnext
#define link arclink
#define y0 arcy0
#define y1 arcy1
#define log2 arclog2
//#define best arcbest

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair <li, li> pt;
typedef vector <int> vi; 
typedef vector <vector <int> > vvi;
typedef vector <pair <int, int> > vpt; 

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};

const int N = int(1e5) + 9;
const int M = int(3e3) + 9;
const int LOGN = 22;
const int SQN = 350;
const int MOD = int(1e9) + 7;
const int INF = 1e9 + 100;
const li INF64 = 2e18;
const ld PI = 3.1415926535897932384626433832795;
const ld EPS = 1e-9;

struct card{
	pt s, f;
	int id;

	card() {}
	card(int sx, int sy, int fx, int fy, int num){
		s = mp(sx, sy);
		f = mp(fx, fy);
		id = num;
	}
};

int n;
card a[N];
int p[N];
int t[N * 4];

bool operator < (const card &a, const card &b){
	if(a.s.X != b.s.X)
		return a.s.X < b.s.X;
	return a.s.Y < b.s.Y;
}

int get(int v, int l, int r, int L, int R){
	if(l == L && r == R)
		return t[v];

	int m = (l + r) / 2;
	if(R <= m)
		return get(v * 2 + 1, l, m, L, R);
	if(L > m)
		return get(v * 2 + 2, m + 1, r, L, R);
	return min(get(v * 2 + 1, l, m, L, m), 
		       get(v * 2 + 2, m + 1, r, m + 1, R));
}

void upd(int v, int l, int r, int pos, int d){
	if(l == r){
		assert(l == pos);
		t[v] = d;
		return;
	}

	int m = (l + r) / 2;
	if(pos <= m)
		upd(v * 2 + 1, l, m, pos, d);
	else
		upd(v * 2 + 2, m + 1, r, pos, d);
	t[v] = min(t[v * 2 + 1], t[v * 2 + 2]);
}

int fnd(int l, int r, int d){
	if(l == r){
		int kek = get(0, 0, n - 1, l, r);
		assert(get(0, 0, n - 1, l, r) <= d);
		return l;
	}

	int m = (l + r) / 2;
	if(get(0, 0, n - 1, l, m) <= d)
		return fnd(l, m, d);

	assert(get(0, 0, n - 1, m + 1, r) <= d);
	return fnd(m + 1, r, d);
}

void build(int v, int l, int r){
	if(l == r){
		t[v] = a[l].s.Y;
		return;
	}
	int m = (l + r) / 2;
	build(v * 2 + 1, l, m);
	build(v * 2 + 2, m + 1, r);
	t[v] = min(t[v * 2 + 1], t[v * 2 + 2]);
}

void solve(){	
	scanf("%d", &n);
	forn(i, n)
		scanf("%d %d %d %d", &a[i].s.X, &a[i].s.Y, &a[i].f.X, &a[i].f.Y), a[i].id = i;
	sort(a, a + n);
	forn(i, N)
		p[i] = -2;
	build(0, 0, n - 1);

	queue <pair<int, pt> > q;
	q.push(mp(-1, mp(0, 0)));

	while(!q.empty()){
		int num = q.front().X;
		int x = q.front().Y.X, y = q.front().Y.Y;
		q.pop();
		int len = upper_bound(a, a + n, card(x, y, -1, -1, -1)) - a;
		--len;
		if(len != -1){
			//int zbs = 
			while(get(0, 0, n - 1, 0, len) <= y){
				int pos = fnd(0, len, y);
				q.push(mp(pos, mp(a[pos].f.X, a[pos].f.Y)));
				p[pos] = num;
				upd(0, 0, n - 1, pos, INF);
			}
		}
	}

	int cur = -2;
	forn(i, n)
		if(a[i].id == n - 1)
			cur = i;

	if(p[cur] == -2){
		cout << -1;
		return;
	}

	vector <int> res;
	while(cur != -1){
		res.pb(a[cur].id + 1);
		cur = p[cur];
	}

	cout << sz(res) << endl;
	forr(i, sz(res))
		cout << res[i] << ' ';
}

int main(){

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

    srand(time(NULL));
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;   
	ios_base::sync_with_stdio(0);

    solve();

    return 0;
}