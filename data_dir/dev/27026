#include <bits/stdc++.h>
using namespace std;

bool is(string s)
{
	int n = s.size();
	for(int i = 0; i < n / 2; i++)
		if(s[i] != s[n - i - 1])
			return false;
	return true;
}

int32_t main()
{
	int n, m;

	cin >> n >> m;

	multiset<string> M;
	vector<string> L, R;

	for(int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		string aux = s;
		reverse(aux.begin(), aux.end());

		auto it = M.find(aux);

		if(it != M.end())
		{
			M.erase(it);
			L.push_back(s);
			R.push_back(aux);
		}
		else
			M.insert(s);
	}
	
	string mid;
	for(auto it : M)
		if(is(it) and it.size() > mid.size())
			mid = it;

	string ans;
	for(auto it : L) ans += it;
	ans += mid;
	reverse(R.begin(), R.end());
	for(auto it : R) ans += it;
	
	cout << ans.size() << '\n';
	cout << ans << '\n';




	return 0;
}
