#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int n, m;

ll a[200005];

ll res = 0;

ll f[2000005];

int main(void) {
  #ifndef ONLINE_JUDGE
      freopen("input.txt", "rt", stdin);
      freopen("output.txt", "wt", stdout);
  #endif
  scanf("%d%d", &n, &m);
  forn(i, m){
    int x; scanf("%d%I64d", &x, a + i);
  }
  sort(a, a + m);
  reverse(a, a + m);
  int Max = 0;
  for(ll i = 1; i < 100000; ++i){
    f[i] = i * (i - 1) / 2 + (i & 1 ? 1 : i / 2);
  }
  while(f[Max] <= n){
    ++Max;
  }
  --Max;
  Max = min(Max, m);
  forn(i, Max){
    res += a[i];
  }
  cout << res << endl;
  return 0;
}
