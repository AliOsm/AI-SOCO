#include <bits/stdc++.h>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d %d", &a, &b)
#define sc3(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N = 2e5 + 10;
set<int> g[N];
set<int> jafoi;
int resp = 0;
int n, m, k;
int t[N];
void tira(int u) {
  if (t[u])
    return;
  t[u] = 1;
  queue<int> q;
  q.push(u);
  while (!q.empty()) {
    int u = q.front();
    q.pop();
    for (int v : g[u]) {
      g[v].erase(u);
      if (g[v].size() < k and !t[v]) {
        t[v] = 1;
        q.push(v);
      }
    }
    g[u].clear();
    resp--;
  }
}
vi r;
int main() {
  sc3(n, m, k);
  vii cara;
  for (int i = 0; i < m; i++) {
    int u, v;
    sc2(u, v);
    cara.pb({u, v});
    g[u].insert(v);
    g[v].insert(u);
  }
  resp = n;
  for (int i = 1; i <= n; i++) {
    if (g[i].size() < k)
      tira(i);
  }
  for (int i = m - 1; i >= 0; i--) {
    int u, v;
    u = cara[i].first;
    v = cara[i].second;
    r.pb(resp);
    if (g[u].count(v)) {
      g[u].erase(v);
      assert(g[v].count(u));
      g[v].erase(u);
      if (g[u].size() < k)
        tira(u);
      if (g[v].size() < k)
        tira(v);
    }
  }
  reverse(r.begin(), r.end());
  for (int x : r)
    pri(x);
}
