#pragma comment (linker, "/STACK:256000000")

#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
#include <random>
#include <bitset>

using namespace std;

typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
typedef double ldouble;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
typedef pair<pii, pii> piiii;

#define pb push_back
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define rand32() (((unsigned int)(rand()) << 16) | (unsigned int)(rand()))
#define rand64() (((unsigned int64)(rand32()) << 16) | (unsigned int64)(rand32()))
#define bit(mask, b) ((mask >> b) & 1)
#define biton(mask, bit) (mask | (((uint64)(1)) << bit))
#define bitoff(mask, bit) (mask & (~(((uint64)(1)) << bit)))
#define bitputon(mask, bit) (mask |= (((uint64)(1)) << bit))
#define bitputoff(mask, bit) (mask &= (~(((uint64)(1)) << bit)))
#define FAIL() (*((int*)(0)))++
#define INF ((int)(1e9) + 1337)
#define LINF ((int64)(1e18))
#define EPS (1e-7)
#define PI (3.1415926535897932384626433832795)
#define y1 yy1
#define y0 yy0
#define j0 jj0
#define MOD 1000000007LL
#define HMOD 1234567891LL

//#define HMOD ((int64)(1e18) + 3LL)
//#ifdef _MY_DEBUG
//#define HMOD 1000000007
//#endif
#define MAX 2000000000
#define HBASE 1000003
//mt19937 ggen;

const int MAXN = 2505;

int n;
int a[MAXN][MAXN];
int comp[MAXN];
int mn[MAXN];
bool r[MAXN];

void solve()
{
	scanf ("%d", &n);
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			scanf ("%d", &a[i][j]);
		}
	}
	for (int i = 1; i <= n; i++)
	{
		if (a[i][i])
		{
			printf("NOT MAGIC\n");
			return;
		}
		for (int j = 1; j < i; j++)
		{
			if (a[i][j] != a[j][i])
			{
				printf("NOT MAGIC\n");
				return;
			}
		}
	}

	for (int i = 1; i <= n; i++)
	{
		mn[i] = 1;
	}
	r[1] = true;
	a[0][0] = INF;
	for (int i = 1; i < n; i++)
	{
		int v = 0;
		for (int j = 1; j <= n; j++)
		{
			if (!r[j] && a[v][mn[v]] > a[j][mn[j]])
			{
				v = j;
			}
		}
		for (int j = 1; j <= n; j++)
		{
			if (r[j] && a[j][v] != max(a[j][mn[v]], a[v][mn[v]]))
			{
				printf("NOT MAGIC\n");
				return;
			}
		}
		r[v] = true;
		for (int j = 1; j <= n; j++)
		{
			if (!r[j] && a[j][v] < a[v][mn[v]])
			{
				mn[j] = v;
			}
		}
	}
	printf("MAGIC\n");
}

int main()
{
    //testgen2(10000, 1000, 23); return 0;
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    //stresstest(); return 0;
    srand(1313);
    //ggen = mt19937(13);
    solve();
    return 0;
}