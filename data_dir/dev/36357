//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}


ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}



int n, subsum[100005], cnt[100005];
vector<ii> adj[100005];
double DP[100005];


void dfs0(int v, int par){
	subsum[v] = 0;
	cnt[v] = 1;
	for(auto it : adj[v]){
		if(it.ff == par)	continue;
		dfs0(it.ff, v);
		subsum[v] += subsum[it.ff] + it.ss;
		cnt[v] += cnt[it.ff];
	}
}


bool comp(iii a, iii b){
	return 1LL*a.ss.ff * b.ss.ss < 1LL*b.ss.ff * a.ss.ss;
}


void dfs(int v, int par){

	vector<iii> children;
	for(auto it : adj[v]){
		if(it.ff == par)	continue;
		dfs(it.ff, v);
		children.pb({it.ff, {subsum[it.ff]+it.ss, cnt[it.ff]}});
		DP[v] += DP[it.ff];
	}

	sort(children.begin(), children.end(), comp);

// cout<<"for v = "<<v<<" children: ";for(auto it : children)	cout<<it.ff<<":"<<it.ss.ff<<":"<<it.ss.ss<<" ";cout<<endl;

	int sum = 0;
	for(auto it : children){
		int vv = it.ff;
		DP[v] += (1.0*cnt[vv]/(n-1)) * (sum + (it.ss.ff-subsum[vv]));
		sum += 2*it.ss.ff;
	}
}



int main(){

    ios_base::sync_with_stdio(0);

    cin>>n;
    int e = n-1;
    while(e--){
    	int a, b, c;
    	cin>>a>>b>>c;
    	adj[a].pb({b, c});
    	adj[b].pb({a, c});
    }

    dfs0(1, -1);
    dfs(1, -1);

// cout<<"cnt: ";for(int i=1;i<=n;i++)	cout<<cnt[i]<<" ";cout<<endl;
// cout<<"subsum: ";for(int i=1;i<=n;i++)	cout<<subsum[i]<<" ";cout<<endl;
// cout<<"DP: ";for(int i=1;i<=n;i++)	cout<<DP[i]<<" ";cout<<endl;

    cout<<fixed<<setprecision(7)<<DP[1];
    return 0;
}







