#pragma comment(linker,"/STACK:300000000")
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <string>
#include <stdlib.h>

#define gcd(a,b) __gcd((a),(b))
#define sqr(a) ((a)*(a))
#define odd(a) ((a)&1)
#define foru(i,n) for (int i=0;i<(n);i++)
#define ford(i,n) for (int i=(n)-1;i>=0;i--)
#define forab(i,l,r) for (int i=(l);i<=(r);i++)
#define forabd(i,r,l) for (int i=(r);i>=(l);i--)
#define fillchar(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define F first
#define S second
#define all(x) x.begin,x.end
#define pw2(x) (1ull<<(x))
#define mp make_pair
#define filename ""

const long double eps=1e-20;
const long double pi=acos(-1.0);
const long long inf=1000*1000*1000*1000*1000*1000;
const long long base=1000*1000*1000+7;

using namespace std;

vector <int> g1[111111];
vector <int> g2[111111];
long long a[111111];
vector <int> top;
long long ans;
long long ret;
int n,m,x,y;
bool used[111111];
int kol;
long long ko;
long long mi;

void dfs1(int v){
	used[v] = true;
	foru(i,g1[v].size()) if (!used[g1[v][i]]) dfs1(g1[v][i]);
	top.pb(v);
}

void dfs2(int v){
	used[v] = true;
	if (mi > a[v]){
		mi = a[v];
		ko = 1;
	} else if (mi == a[v]) ko++;
	foru(i,g2[v].size()) if (!used[g2[v][i]]) dfs2(g2[v][i]);
}

int main(){
	ios_base :: sync_with_stdio(false);
	cin >> n;
	foru(i,n) cin >> a[i];
	cin >> m;
	foru(i,m){
		cin >> x >> y;
		x--; y--;
		g1[x].pb(y);
		g2[y].pb(x);
	}
	foru(i,n) if (!used[i]) dfs1(i);
	reverse(top.begin(), top.end());
	foru(i,n) used[i] = false;
	ret = 1;
	ans = 0;
	foru(i,top.size()){
		int v = top[i];
		if (used[v]) continue;
		kol++;
		mi = 1000000000*1ll*10;
		ko = 1;
		dfs2(v);
		ans += mi;
		ret *= ko;
		ret %= base;
	}
	cout << ans << " " << ret << endl;
	return 0;	
}