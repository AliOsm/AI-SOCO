//Pham Huu Canh
//D. Robot Rapping Results Report
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "d.inp"
#define foo "d.out"
#define MOD 1000000007
#define inf 1000111000111000111LL

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;
#define nmax 100005

int n, ne;
VI v[nmax];
II p[nmax];
int d[nmax], q[nmax];

bool ktra(){
	int dau = 0, cuoi = 0, i;
	repi(i, 1, n)	if (d[i] == 0){
		q[++cuoi] = i;
		d[i] = -1;
	}
	
	if (cuoi != 1)	return false;
	
	while (dau < cuoi){
		int x = q[++dau];
		fore(ite, v[x]){
			int y = *ite;
			d[y]--;
			if (d[y] == 0){
				q[++cuoi] = y;
				d[y] = -1;
			}
		}
		if (cuoi - dau > 1)	return false;
	}
	return true;
}

bool solve(int giua){
	int i;
	repi(i, 1, n)	v[i].clear(), d[i] = 0;
	repi(i, 1, giua){
		int x = p[i].fi, y = p[i].se;
		v[x].pb(y);
		d[y]++;
	}
	
	return ktra();
}

void input(){
	int i, x, y;
	
	scanf("%d %d", &n, &ne);
	repi(i, 1, ne){
		scanf("%d %d", &x, &y);
		v[x].pb(y);
		p[i] = mp(x, y);
		d[y]++;
	}
	
	if (!ktra())	printf("-1");
	else{
		int dau = n - 1, cuoi = ne;
		while (dau <= cuoi){
			int giua = (dau + cuoi)>>1;
			if (solve(giua))	cuoi = giua - 1;
			else				dau = giua + 1;
		}
		
		printf("%d\n", dau);
	}
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
