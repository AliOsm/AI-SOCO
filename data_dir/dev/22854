#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;

typedef tree<int, null_type, less<int>, rb_tree_tag,
        tree_order_statistics_node_update>
        new_data_set;


#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define PSET(x,y) fixed<<setprecision(y)<<x
#define pb push_back
#define pf push_front
#define mp make_pair
#define pii pair<int,int>
#define vi vector<int>
#define vip vector<pair<int,int> >
#define ff first
#define ss second
#define int long long
#define SIZE 200010
#define mod 1000003
#define BIG 998244353
#define s(t) scanf("%d",&t)
#define p(t) printf("%d\n",t)
#define mii map<int,int>
#define MSET(table,i) memset(table, i, sizeof(table))
#define INF 1e18
#define endl '\n'
#define tc int t;cin>>t;while(t--)
#define pi  3.1415926358
#define print(x) for(auto el: x) cout<<el<<" ";cout<<endl
#define bits(x) __builtin_popcount(x)
#define minimum(a,n) min_element(a,a+n)-a
#define maximum(a,n) max_element(a,a+n)-a
#define pqbig priority_queue<int>
#define pqsmall priority_queue<int,vector<int>,greater<int> >
#define all(v) v.begin(),v.end()

#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl



int32_t main()
{
    fast;
    map<int, int> m;
    int n; cin >> n;
    int *arr = new int[n + 1];
    for (int i = 1; i <= n; i++)
    {
        cin >> arr[i];
        m[arr[i]] = i;
    }

    int cnt = 0;
    vip v;
    for (int i = 1; i <= n; i++)
    {
        if (arr[i] == i)
            continue;

        int idx_jahan_pe_req_pada_hai = m[i];
        int curidx = i;
        if ((2 * abs(idx_jahan_pe_req_pada_hai - curidx)) >= n)
        {
            cnt++;
            m[arr[curidx]] = idx_jahan_pe_req_pada_hai;
            m[curidx] = i;
            arr[idx_jahan_pe_req_pada_hai] = arr[curidx];
            arr[i] = i;
            v.pb(mp(curidx, idx_jahan_pe_req_pada_hai));
        }
        else
        {
            if (2 * abs(idx_jahan_pe_req_pada_hai - n) >= n and 2 * abs(curidx - n) >= n)
            {
                cnt += 3;
                v.pb(mp(idx_jahan_pe_req_pada_hai, n));
                v.pb(mp(n, curidx));
                v.pb(mp(idx_jahan_pe_req_pada_hai, n));
                m[arr[idx_jahan_pe_req_pada_hai]] = curidx;
                m[arr[curidx]] = idx_jahan_pe_req_pada_hai;
                arr[idx_jahan_pe_req_pada_hai] = arr[curidx];
                arr[curidx] = i;
            }
            else if (2 * abs(idx_jahan_pe_req_pada_hai - 1) >= n and 2 * abs(curidx - 1) >= n)
            {
                cnt += 3;
                v.pb(mp(idx_jahan_pe_req_pada_hai, 1));
                v.pb(mp(1, curidx));
                v.pb(mp(idx_jahan_pe_req_pada_hai, 1));
                m[arr[idx_jahan_pe_req_pada_hai]] = curidx;
                m[arr[curidx]] = idx_jahan_pe_req_pada_hai;
                arr[idx_jahan_pe_req_pada_hai] = arr[curidx];
                arr[curidx] = i;
            }
            else
            {
                cnt += 4;
                int jahan_se_karne_vaala, cur_se_karne_vaala;
                if (2 * abs(idx_jahan_pe_req_pada_hai - n) >= n)
                    jahan_se_karne_vaala = n, cur_se_karne_vaala = 1;
                else
                    jahan_se_karne_vaala = 1, cur_se_karne_vaala = n;

                v.pb(mp(idx_jahan_pe_req_pada_hai, jahan_se_karne_vaala));
                v.pb(mp(cur_se_karne_vaala, jahan_se_karne_vaala));
                v.pb(mp(cur_se_karne_vaala, curidx));
                if (jahan_se_karne_vaala == 1)
                    v.pb(mp(idx_jahan_pe_req_pada_hai, jahan_se_karne_vaala));
                else
                    v.pb(mp(1, n));

                int tmp = arr[n];
                m[arr[curidx]] = n;
                arr[n] = arr[curidx];
                m[tmp] = idx_jahan_pe_req_pada_hai;
                arr[idx_jahan_pe_req_pada_hai] = tmp;
                arr[curidx] = curidx;
                m[curidx] = curidx;
            }
        }
    }
    cout << cnt << endl;
    for (int i = 0; i < v.size(); i++)
        cout << v[i].ff << " " << v[i].ss << endl;
}