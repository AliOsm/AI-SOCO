#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>
#include <random>

using namespace std;

#define int long long

vector<int> prms(int x) {
	int wx = x;
	vector<int> ans;
	for (int i = 2; i * i <= wx; i++) {
		int cnt = 0;
		int ml = 1;
		while (x % i == 0) {
			cnt++;
			x /= i;
			ml *= i;
		}
		if (cnt) ans.push_back(ml);
	}
	if (x > 1) ans.push_back(x);
	return ans;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int x;
    cin >> x;
    auto f = prms(x);
    if (f.empty()) {
    	cout << "1 1" << endl;
    	exit(0);
    }
    int n = (int)f.size();
    int kans = x + 1;
    pair<int, int> snas = {-1, -1};
    for (int mask = 0; mask < (1 << n); mask++) {
    	int a = 1;
    	int b = 1;
    	for (int i = 0; i < n; i++) {
    		if ((mask >> i) & 1) a *= f[i];
    		else b *= f[i];
    	}
    	if (max(a, b) < kans) {
    		kans = max(a, b);
    		snas = {a, b};
    	}
    }
    cout << snas.first << ' ' << snas.second << endl;
}   