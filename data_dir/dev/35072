#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 5;

vector<int>vec;
const int mod = 1e9+7;
long long pw(long long x, long long sum) {
	long long res = 1, power = sum, val = x;
	val%=mod;
	while (power) {
		if (power & 1) {
			res *= val;
			res %= mod;
		}
		val *= val;
		val %= mod;
		power >>= 1ll;
	}
	return res;
}


int main() {

    long long x,n;
    cin>>x>>n;
    for(int i = 2 ; 1ll*i*i<=x ; ++i)
    {
        if(x%i == 0)
        {
            vec.push_back(i);
            while(x%i==0) x/=i;
        }
    }

    if(x != 1) vec.push_back(x);

    long long ans = 1;

    for(int i = 0 ; i<vec.size() ; ++i)
    {
        long long a = vec[i];
        long long b = 1;
        while(1)
        {
            if(b > n/a) break;
            b*=a;
        }
        long long sum = 0;
        while(b!=1)
        {
            long long num = n/b;
            num -= sum;
            long long m = pw(b,num);
            ans*=m;
            ans%=mod;
            sum += num;
            b/=a;
        }
    }
    cout<<ans<<endl;

    return 0;
}
