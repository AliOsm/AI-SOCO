#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define y1 asdfjgjd
#define int long long
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=1e5+7;
const int inf=1e9+5;
const int mod=1e9+7;

int ans[N];

main ()
{

    //freopen("roofs.in","r",stdin);freopen("roofs.out","w",stdout);
    ios_base::sync_with_stdio(false);cin.tie(0);
    string s;
    getline(cin,s);
    vector< int >a;
    bool cc=true;
    int n=0;
    for (int i=0;i<s.size();++i){
        if (s[i]>='0' && s[i]<='9'){
            n=n*10+(int)(s[i]-'0');
        }
        else {
            if (s[i]=='+'){
                cc=true;
            }
            else if (s[i]=='-'){
                cc=false;
            }
            if (s[i]=='?'){
                if (cc){
                    a.pb(1);
                }
                else {
                    a.pb(0);
                }
            }
        }
    }
    int k=n;
    int cnt=0;
    int cnt1=0;
    for (int i=0;i<a.size();++i){
        if (a[i]==0)++cnt1;
        else {
            ++cnt;
        }
    }
    int f=(k+n-1)/n;
    if (f>cnt || k<=0){
        cout<<"Impossible"<<endl;
        exit(0);
    }
    int gg=1;
    k+=cnt1;
    for (int j=1;j<=2000000;++j){
        if (k/cnt>0){
            if (j>n){
                cout<<"Impossible"<<endl;
                exit(0);
            }
            gg=j;
            break;
        }
        k+=cnt1;
    }
    int l=k/cnt;
    int ff=k%cnt;
    if (l==0 || l+(ff>0)>n){
        cout<<"Impossible"<<endl;
        exit(0);
    }
    for (int i=0;i<a.size();++i){
        if (a[i]==0){
            ans[i]=gg;
        }
        else {
            ans[i]=l;
            if (ff>0){
                ans[i]++;
                --ff;
            }
        }
    }
    cout<<"Possible"<<endl;
    for (int i=0;i<a.size();++i){
        if (i==0){
            cout<<ans[i];
        }
        else {
            if (a[i]==0){
                cout<<" - ";
            }
            else cout<<" + ";
            cout<<ans[i];
        }
    }
    cout<<" = "<<n<<endl;
}
