//In the name of God

#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <unordered_map>
using namespace std;
map <int,int> m;
#define f(x) ((x)&(-(x)))
#define lol long long

const int MAXN=1e5+10;
unordered_map<int,int> fen;

void add(int x,int val)
{
  int ind=x;
  while(ind<1e9+10)
    {
      fen[ind]+=val;
      ind+=f(ind);
    }
}

lol fin(int x)
{
  int ind=x;
  lol ret=0;
  while(ind)
    {
      ret+=fen[ind];
      ind-=f(ind);
    }
  //  cerr<<x<<" "<<ret<<endl;
  return ret;
}

lol invers(vector <int> v)
{
  lol ans=0;
  for(int i=v.size()-1;i>=0;i--)
    {
      int x=v[i];
      //  cerr<<"v[i]="<<x<<endl;
      ans+=fin(x);
      add(x,1);
    }
  return ans;
}

int main()
{
  int n;
  cin>>n;
  lol ans=0;
  for(int i=1;i<=n;i++)
    {
      int x,y;
      cin>>x>>y;
      if(m[x]==0)
	m[x]=x;
      if(m[y]==0)
	m[y]=y;
      swap(m[x],m[y]);
    }
  vector <int> v,s;
  for(auto x: m)
    {
      pair <int,int> p=x;
      v.push_back(p.second);
      s.push_back(p.first);
      //cerr<<p.first<<" "<<p.second<<endl;
    }
  ans+=invers(v);
  //  cerr<<"ans:"<<ans<<endl;
  for(int i=0;i<v.size();i++)
    {
      int x=v[i],pos=s[i],d=abs(x-s[i])-1;
      if(x==pos)
	continue;
      if(x>pos)
	swap(x,pos);
      int dif=lower_bound(s.begin(),s.end(),pos)-upper_bound(s.begin(),s.end(),x);
      //cerr<<dif<<endl;
      d-=dif;
      ans+=d;
    }
  cout<<ans<<endl;
  return 0;
}
