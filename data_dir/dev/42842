#include <bits/stdc++.h>
#define int long long 
using namespace std;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);
    long long powmod(long long a,long long b,long long mod) {
        if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
       
        if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
        else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
    }
    long long gcd(long long a, long long b) {
        if (a==0) return b;
        if (b==0) return a;
        if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
    }
      int prime(int p) { // 1 - простое
        for (int i=2;i*i<=p;i++) {
            if (p%i==0 && i<p) return i;  
        }
        return 1;
    }
    
     int inv(int a, int mod) {
        return powmod(a,mod-2,mod); 
    }
  int random_modul() {
    
    uniform_int_distribution <int> u1(5e8, 1e9);
    int pepega=u1(rnd); 
    while (prime(pepega)!=1) pepega=u1(rnd); 
    return pepega; 
}


    void solve () {
       
       
         /* --------- */
         
    int a,n,k,t;
    cin>>a>>n>>k>>t;
    int m[a+1];
    for (int i=0;i<a;i++) cin>>m[i];
    sort(m,m+a);
    m[a]=1000000000; 
    vector <pair<pair<int,int>,int>> lov(k);
    for (int i=0;i<k;i++) {
        cin>>lov[i].first.first>>lov[i].first.second>>lov[i].second; 
    }
    int l=0;
    int r=a;
    while (r-l>1) {
        int mid=(l+r)/2; 
        vector <pair<int,int>> cur; 
        vector <int> kek(n+2); 
        for (int i=0;i<k;i++) if (lov[i].second>m[a-mid]) {
            kek[lov[i].first.first]++; kek[lov[i].first.second+1]--; 
        }
    int time=n+1;
    for (int i=0;i<=n;i++) {
        if (i!=0) kek[i]+=kek[i-1]; 
        if (kek[i]) time+=2; 
    }
    //cout<<mid<<" "<<time<<"\n";
    if (time>t) r=mid-1; else l=mid; 
    }
    int mid=r; 
        vector <pair<int,int>> cur; 
        vector <int> kek(n+2); 
        for (int i=0;i<k;i++) if (lov[i].second>m[a-mid]) {
            kek[lov[i].first.first]++; kek[lov[i].first.second+1]--; 
        }
    int time=n+1;
    for (int i=0;i<=n;i++) {
        if (i!=0) kek[i]+=kek[i-1]; 
        if (kek[i]) time+=2; 
    }
    if (time<=t) l=mid;
    cout<<l; 
         /* --------- */  
            return;
    }
     
     
     
    signed main() {
       
       
       //  cout<<fixed<<setprecision(10); 
       
          int tututu;
          tututu=1;
          
        //cin>>tututu; // если нет запросов, то закоментить
        
          for (int qwerty=0;qwerty<tututu;qwerty++) solve();
      
       
        return 0;
    }