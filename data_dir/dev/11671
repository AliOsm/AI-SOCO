#include <bits/stdc++.h>

using namespace std;

#define DIM 200009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld lnog double
#define endl '\n'
#define fast ios_base::sync_with_stdio(false),cin.tie(0)
#define amen exit(0)

long long i,j,k,l,n,m,cnt;

vector<long long>a[DIM];

set<long long>st;

queue<long long>q;

void bfs(long long start){
	q.push(start);
	cnt++;

	st.erase(start);

	while(!q.empty()){
		long long v=q.front();
		q.pop();

		//cout<<v<<endl;
		//if(st.count(v)==0)continue;

		sort(a[v].begin(),a[v].end());
		for(int i=1;i<a[v].size();i++){
			auto it1=st.upper_bound(a[v][i-1]);
			auto it2=st.lower_bound(a[v][i]);
			if(it2==st.begin() || it1==st.end())continue;

			it2--;
			if(*it2<*it1)continue;
			it2++;

			//cout<<v<<' '<<*it1<<' '<<*it2<<' ';

			vector<long long>nums;

			for(;it1!=it2;it1++){
				q.push(*it1);
				nums.push_back(*it1);
			}

			for(auto to:nums)st.erase(to);

			it1=st.upper_bound(a[v][i-1]);
			it2=st.lower_bound(a[v][i]);
			//cout<<*it1<<' '<<*it2<<endl;
		}
	}
	//cout<<endl;
}

int main()
{
    //fast;

    cin>>n>>m;

    for(i=1;i<=m;i++){
    	cin>>k>>l;
    	a[k].push_back(l);
    	a[l].push_back(k);
    }

    for(i=1;i<=n;i++)st.insert(i),a[i].push_back(0),a[i].push_back(n+1);

//    long long cnt=0;

    for(i=1;i<=n;i++){
    	//cout<<i<<endl;
    	if(st.count(i)){
    		bfs(i);
    	}
    }

    cout<<cnt-1<<endl;

    amen;
}