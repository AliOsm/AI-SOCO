//  I can't tell you what it really is,
// I can only tell you what it feels like.
#include <bits/stdc++.h>
using namespace std;
#define fast() ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define int long long
#define pb(x)  push_back(x)
const int N = 1e5 + 10;
vector < int > povr;
int v[N];

struct own {
    int operator() (int x) const {
        x = (x ^ (x >> 30)) * UINT64_C(0xbf58476d1ce4e5b9);
        x = (x ^ (x >> 27)) * UINT64_C(0x94d049bb133111eb);
        x = x ^ (x >> 31);
        return x;
    }
};
void let(int k) {
    if(k == 1)
        povr.pb(1);
    else if(k == -1)
        povr.pb(1), povr.pb(-1);
    else{
        int cur = 1;
        while(abs(cur) <= (int)1e14){
            povr.pb(cur);
            cur *= k;
        }
    }
}
signed main(){
   fast();
   int n, k, sum(0), res(0);
    cin >> n >> k;
    for(int i = 1; i <= n; ++i)
        cin >> v[i];
    let(k);
    unordered_map<int,int, own>mp;
	   mp.reserve(1024);
  	 mp.max_load_factor(0.25);
    mp[0] = 1;    
    for(int i = 1; i <= n; ++i) {
        sum += v[i];
        for(auto i : povr)  {
        	auto it = mp.find(sum - i);
        	if(it != mp.end())
            	res += it -> second;
        }
        mp[sum] += 1;
    }
    
    cout << res;
      return 0;
          
}