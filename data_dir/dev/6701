#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cctype>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef long double ld;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef stringstream ss;

#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define endl '\n'
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(),(x).end()
#define clr(t,v) memset((t),(v),sizeof(t))

#define rep(i,n) for(int i=0,_##i=(n);i<_##i;i++)
#define dwn(i,n) for(int i=(n);--i>=0;)
#define repi(i,a) for(__typeof((a).begin()) i=(a).begin(),_##i=(a).end();i!=_##i;i++)
#define dwni(i,a) for(__typeof((a).rbegin()) i=(a).rbegin(),_##i=(a).rend();i!=_##i;i++)

const double pi=acos(-1.0),eps=1e-9;
char gc(){char c;while((c=getchar())<=' ' && c!=-1);return c;}
int gs(char*s){if(!fgets(s,999999,stdin))return -1;int l=strlen(s);while(l && (s[l-1])<=' ')s[--l]=0;return l;}

int c[100000];
int main() { //freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);
    
    vi v,a;
    int n,k;
    cin>>n>>k;
    rep(i,n) {
        int t;
        cin>>t;
        v.pb(t);
    }
    a=v;
    sort(all(a));
    a.erase(unique(all(a)),a.end());
    rep(i,n) {
        v[i]=lower_bound(all(a),v[i])-a.begin();
    }
    priority_queue<int> pq;
    rep(i,n) {
        c[v[i]]++;
        if(c[v[i]]==1) {
            pq.push(v[i]);
        }
        if(i>=k-1) {
            bool f=false;
            while(pq.size()) {
                int t=pq.top();
                if(c[t]==1) {
                    f=true;
                    cout<<a[t]<<endl;
                    break;
                }
                else {
                    pq.pop();
                }
            }
            if(!f) {
                cout<<"Nothing"<<endl;
            }
            c[v[i-k+1]]--;
            if(c[v[i-k+1]]==1) {
                pq.push(v[i-k+1]);
            }
        }
    }
}
