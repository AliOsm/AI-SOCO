#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>
#include <time.h>
#include <assert.h>
#include <map>
#include <set>
#include <vector>
#include <functional>
#include <algorithm>
#include <stack>
#include <list>
#include <queue>
#include <bitset>
#include <limits>
#include <numeric>
using namespace std;
#define sz(x) ((int)(x).size())

struct Interval {
  int left;
  int right;
  int idx;
};

const int N = 1e5 + 10;
Interval a[N];
int ans[N];

bool cmp(Interval x, Interval y) {
  return x.left < y.left;
}

void solve() {
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    scanf("%d %d", &a[i].left, &a[i].right);
    a[i].idx = i;
  }
  sort(a, a + n, cmp);
  int cur_max_right = (1 << 30);
  int ok = 0;
  for (int i = 0; i < n; i++) {
    if (a[i].left > cur_max_right) {
      ok = 1;
    }
    if (ok) ans[a[i].idx] = 1;
    else ans[a[i].idx] = 2;
    if (i == 0) cur_max_right = a[i].right;
    else cur_max_right = max(cur_max_right, a[i].right);
  }
  if (ok) {
    for (int i = 0; i < n; i++) {
      if (i > 0) printf(" ");
      printf("%d", ans[i]);
    }
    printf("\n");
  } else {
    puts("-1");
  }
}

int main() {
  int qq;
  scanf("%d", &qq);
  while (qq--) {
    solve();
  }
  return 0;
}