#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x, y) memset(x, y, sizeof(x))
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b > a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b < a)a = b; }
const int N = 1e5 + 10, M = 0, Z = 1e9 + 7, inf = 0x3f3f3f3f;
template <class T1, class T2>inline void gadd(T1 &a, T2 b) { a = (a + b) % Z; }
int casenum, casei;
int n;
int f[N];

char ans[N]; int p;
int doit(int n, char v)
{
	for (int i = 1; ; ++i)
	{
		if (f[i] > n)
		{
			for (int j = i - 1; j; --j)
			{
				ans[p++] = v;
			}
			return f[i - 1];
		}
	}
}
int main()
{
	f[0] = 0;
	for (int i = 1; i <= 1000; ++i)
	{
		f[i] = f[i - 1] + (i - 1);
	}
	while (~scanf("%d", &n))
	{
		p = 0;
		for (int v = 0; v < 26; ++v)
		{
			int m = doit(n, 'a' + v);
			n -= m;
			if (n == 0)break;
		}
		ans[p] = 0;
		puts(ans);
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【分析】


【时间复杂度&&优化】


*/