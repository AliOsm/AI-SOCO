#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<stdio.h>
#include<map>
#include<set>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll ABS(ll x){
    return x < 0 ? -x : x;
}
ll gcd(ll a, ll b){
    if (!b)
        return a;
    return gcd(b, a%b);
}
ll lcm(ll a, ll b){
    return b / gcd(a, b)*a;
}
#define FOR(I,N) for(int(i)=0;i<int(N);++i)
#define FORK(I,N,K) for(int(i)=0;i<int(N);i+=int(K))
char g[1 << 20];
int n;
bool vis[26];
int nxt[300000][26];
ll res[26], dv;
vector<int>v;
void GetAll(int last){
    for (int i = 0; i < 26; ++i)
    if (nxt[last][i]!=-1)
        v.push_back(nxt[last][i]);
}
int main(){
    scanf("%s", g);
    n = strlen(g);
    for (int i = 0; i < 26; ++i)
        nxt[n - 1][i] = -1;
    nxt[n - 1][g[n - 1] - 'a'] = n - 1;
    vis[g[n - 1] - 'a'] = 1;
    ++dv;
    for (int i = n - 2; i + 1; --i){
        for (int j = 0; j < 26; ++j)
            nxt[i][j] = nxt[i + 1][j];
        nxt[i][g[i] - 'a'] = i;
        if (!vis[g[i] - 'a'])
            ++dv;
        vis[g[i] - 'a'] = 1;
    }
    for (int i = 0; i < n; ++i){
        v.clear();
        GetAll(i);
        sort(v.begin(), v.end());
        v.push_back(n);
        int last = i, j;
        for (j = 0; j < v.size() - 1; ++j){
            //cout << v[j] << endl;
            res[j + 1] += v[j + 1] - last;
            last = v[j + 1];
        }
        //cout << res[2] << " " << res[3] << endl;
    }
    cout << dv << endl;
    for (int i = 1; i <= dv; ++i)
        cout << res[i] << endl;
    cin >> n;
}