////#if !defined(YCM) && 1
////#define _FORTIFY_SOURCE 0
//#pragma GCC optimize("O3,Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
////#endif
//#include <unistd.h>
////#pragma GCC diagnostic ignored "-Wunused-result"
////#pragma GCC diagnostic ignored "-Wunused-function"
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define ull unsigned long long int
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define pii pair<int,int>
#define EPS 1e-9
#define PI acos(-1.0)
#define ff first
#define ss second
#define INF (ll)1e18
#define ALL(v) v.begin(),v.end()
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
ll lcm(ll a,ll b){return (a/__gcd(a,b))*b;}
ll bigmod(ll a,ll p,ll mod){ll ans=1;while(p){if(p&1)ans=ans*a%mod;a=a*a%mod;p>>=1;}return ans;}
ll power(ll x,ll n){if(n==0)return 1;else if(n%2==0){ll y=power(x,n/2);return y*y;}else return x*power(x,n-1);}

#ifdef shaft
     #define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template < typename Arg1 >
    void __f(const char* name, Arg1&& arg1){
        cerr << name << " is " << arg1 << std::endl;
    }
    template < typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names+1, ',');
        cerr.write(names, comma - names) << " is " << arg1 <<endl;
        __f(comma+1, args...);
    }
#else
    #define debug(...)
#endif
const int N=(int)1e6+5;
const int inf=(int)1e9;
const int mod=(int)1e9+7;
int n, m;
int arr[100][100];
vector<int>adj,v[100];
int par[100], mark[100];
int main(){
    ios_base::sync_with_stdio(false);cout.setf(ios::fixed); cout.precision(10);cout.tie(nullptr); cin.tie(nullptr);
    #ifdef shaft
        //freopen("in.txt","r",stdin);
        //freopen("out.txt","w",stdout);
    #endif ///shaft
    int flag = 0;
    cin >> n >> m;
    for(int i = 1; i <= n; i++){
        adj.clear();
        for(int j = 1; j <= m; j++){
            char c; cin >> c;
            if(c == '#'){
                adj.pb(j);
            }
        }
        int len = (int)adj.size(), cnt = 0;
        for(int j = 0; j < len; j++){
            if(par[adj[j]] == 0) cnt += 1;
        }
        if(cnt == len){
            for(int j = 0; j < len; j++){
                int val = adj[j];
                v[i].pb(val);
                arr[i][val] = 1;
                par[val] = i;
            }
        }
        else if(cnt > 0) flag = 1;
        else{
            int id = par[adj[0]];
            CLR(mark);
            for(int j = 0; j < len; j++){
                int val = adj[j];
                mark[val] = 1;
                if(arr[id][val] == 0)flag = 1;
            }
            for(int j = 0; j < v[id].size(); j++){
                int val = v[id][j];
                if(mark[val] == 0)flag = 1;
            }
        }
       // debug(i,flag);
    }
    if(!flag) cout <<"Yes"<<endl;
    else cout <<"No"<<endl;
    return 0;
}

