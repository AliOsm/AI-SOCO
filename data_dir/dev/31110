/********************************************
*                                           *
*    Solved By : Bir Bahadur Khatri(B'ru)   *
*      Be Positive,be Happy.                *
*                                           *
*********************************************/

#define ff first
#define D double
#define sz size()
#define ss second
#define PB push_back
#define MP make_pair
#define SQR(n) (n*n)
#define CHR getchar()
#define NL printf("\n")
#include<bits/stdc++.h>
#define ULL unsigned LL
#define PI 2.0*acos(0.0)
#define LL long long int
#define S1(a) a=in<int>()
#define SL1(a) a=in<LL>()
#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define all(a) a.begin(),a.end()
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define S2(a,b) a=in<int>(),b=in<int>()
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define BitCnt(a) __builtin_popcountll(a)
#define MEM(a,val) memset(a,val,sizeof(a))
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define _cin ios_base::sync_with_stdio(0); cin.tie(0)
#define cp printf("***** here here here here *****\n");
#define trace1(x)                cerr << #x << ": " << x << endl;
#define InpOut freopen("A.in","r",stdin),freopen("A1.out","w",stdout)
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;
template <typename T> T in(){char ch;T n = 0;bool ng = false;while (1){ch = getchar();if (ch == '-'){ng = true;ch = getchar();break;}if (ch>='0' && ch<='9')     break;}while (1){n = n*10 + (ch - '0');ch = getchar();if (ch<'0' || ch>'9')   break;}return (ng?-n:n);}
template<typename T>inline T POW(T B,T P){ if(P==0) return 1; if(P&1) return B*POW(B,P-1);  else return SQR(POW(B,P/2));}
template<typename T>inline T Gcd(T a,T b){if(a<0)return Gcd(-a,b);if(b<0)return Gcd(a,-b);return (b==0)?a:Gcd(b,a%b);}
template<typename T>inline T Lcm(T a,T b) {if(a<0)return Lcm(-a,b);if(b<0)return Lcm(a,-b);return a*(b/Gcd(a,b));}
long long Bigmod(long long base, long long power, long long MOD){long long ret=1;while(power){if(power & 1)ret=(ret*base)%MOD;base=(base*base)%MOD;power>>=1;}return ret;}
bool isVowel(char ch){ ch=toupper(ch); if(ch=='A'||ch=='U'||ch=='I'||ch=='O'||ch=='E') return true; return false;}
template <typename T> LL isLeft(T a,T b,T c) {return(a.x-b.x)*(b.y-c.y)-(b.x-c.x)*(a.y-b.y);}
long long ModInverse(long long number, long long MOD){return Bigmod(number, MOD-2, MOD);}
bool isConst(char ch){if (isalpha(ch) && !isVowel(ch)) return true; return false;}
int toInt(string s)  { int sm; stringstream ss(s); ss>>sm; return sm; }
///**********************************************************//

#define MD1 1000000007ULL
#define MD2 1000000009ULL
#define MD3 1000000021ULL
#define BS1 10000019ULL
#define BS2 10000079ULL
#define BS3 10000103ULL
#define PUL pair<ULL,ULL>
#define PLL pair<LL,LL>
#define PII pair<int,int>

///         0123456789
#define MX  802
#define MOD 1000000007
#define inf 2000000000
#define EPS 1e-9


/// ==========================================////

int head[MX+10],par[MX+10];
D dis[MX+10];
bool chk[MX+10];

struct Edge {
    int u,v,cap,next;
    D cost;
    Edge() {}
    Edge(int a,int b,int c,D d,int e) {
        u=a,v=b,cap=c,cost=d,next=e;
    }
};

Edge edge[2*MX*MX];
int NE;

void init(int n){
    for(int i=0; i<=n; i++) head[i]=-1;
    NE=0;
}

void addEdge(int u,int v,int cap,D cost) {
    edge[NE]=Edge(u,v,cap,cost,head[u]);
    head[u]=NE++;
    edge[NE]=Edge(v,u,0,-cost,head[v]);
    head[v]=NE++;
}

int spfa(int src,int sink,int tot){
    queue<int>Q;
    for(int i=0; i<=tot; i++) par[i]=-1,chk[i]=false,dis[i]=inf;
    Q.push(src);
    dis[src]=0.0;
    chk[src]=true;
    while(!Q.empty()) {
        int u=Q.front();
        Q.pop();
        chk[u]=false;
        for(int i=head[u]; i!=-1; i=edge[i].next) {
            int v=edge[i].v;
            D w=edge[i].cost;
            if(edge[i].cap>0 && dis[v]>dis[u]+w) {
                dis[v]=dis[u]+w;
                par[v]=i;
                if(!chk[v]) {
                    chk[v]=true;
                    Q.push(v);
                }
            }
        }
    }
    if(par[sink]==-1) return 0;
    int cap=inf;
    for(int i=par[sink]; i!=-1; i=par[edge[i].u]) cap=min(cap,edge[i].cap);
    for(int i=par[sink]; i!=-1; i=par[edge[i].u]) edge[i].cap-=cap,edge[i^1].cap+=cap;
    return cap;
}

pair<int,D> min_cost_flow(int src,int sink,int tot) {
    D ret=0;
    int flow=0;
    while(true) {
        int cap=spfa(src,sink,tot);
        if(cap==0) break;
        flow+=cap;
        ret+=(cap*1.0*dis[sink]);
    }
    return make_pair(flow,ret);
}

PII a[MX];

D Dist(int i,int j) {
    D x=(a[i].ff-a[j].ff)*(a[i].ff-a[j].ff);
    x+=(a[i].ss-a[j].ss)*(a[i].ss-a[j].ss);
    x=sqrt(x);
    return x;
}

int main()
{
    int n;
    S1(n);

    F(i,1,n+1) {
        S2(a[i].ff,a[i].ss);
    }
    init(n*2+4);
    int src=0,des=(n*2)+1;
    F(i,1,n+1) {
        addEdge(0,i,2,0);
        addEdge(i+n,des,1,0);
    }

    F(i,1,n+1) {
        F(j,1,n+1) {
            if( a[i].ss>a[j].ss ) {
                D dst=Dist(i,j);
                addEdge(i,j+n,1,dst);
            }
        }
    }

    pair<int,D> ans=min_cost_flow(src,des,des);

    if(ans.ff!=(n-1)) {
        printf("-1\n");
    }
    else {
        printf("%.10lf\n",ans.ss);
    }
    return 0;
}
///============= Thank You ===================///
