//IOI 2021
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 5 * 100 * 1000 + 17;

int n, a[MAXN], seg[MAXN << 2], q, cnt;

void upd(int pos, int val, int v = 1, int l = 1, int r = n + 1) {
	if (pos < l || r <= pos)
		return;
	if (l + 1 == r) {
		seg[v] = val;
		return;
	}
	upd(pos, val, v << 1, l, l + r >> 1);
	upd(pos, val, v << 1 | 1, l + r >> 1, r);
	seg[v] = __gcd(seg[v << 1], seg[v << 1 | 1]);
}

void go(int v, int l, int r, int val) {
	if (cnt > 1)
		return;
	if (l + 1 == r) {
		if (seg[v] % val)
			cnt++;
		return;
	}
	if (seg[v << 1] % val && seg[v << 1 | 1] % val) {
		cnt += 2;
		return;
	}
	if (seg[v << 1] % val)
		go(v << 1, l, l + r >> 1, val);
	else
		go(v << 1 | 1, l + r >> 1, r, val);
	return;
}

bool get(int lp, int rp, int val, int v = 1, int l = 1, int r = n + 1) {
	if (cnt > 1)
		return false;
	if (rp <= l || r <= lp)
		return true;
	if (lp <= l && r <= rp) {
		if (seg[v] % val == 0)
			return true;
		else {
			if (cnt == 1) {
				cnt++;
				return false;
			}
			go(v, l, r, val);
			if (cnt > 1)
				return false;
			return true;
		}
	}
	return get(lp, rp, val, v << 1, l, l + r >> 1) && get(lp, rp, val, v << 1 | 1, l + r >> 1, r);
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i], upd(i, a[i]);
	cin >> q;
	while (q--) {
		int t;
		cin >> t;
		if (t == 1) {
			int l, r, x;
			cin >> l >> r >> x;
			r++;
			if (get(l, r, x) && cnt < 2)
				cout << "YES" << endl;
			else
				cout << "NO" << endl;
			cnt = 0;
		}
		else {
			int pos, val;
			cin >> pos >> val;
			upd(pos, val);
		}
	}
	return 0;
}
