#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sfi1(v) scanf("%d",&v)
#define sfi2(v1,v2) scanf("%d %d",&v1,&v2)
#define sfi3(v1,v2,v3) scanf("%d %d %d",&v1,&v2,&v3)
#define sfll1(v) scanf("%I64d",&v);
#define sfll2(v1,v2) scanf("%I64d %I64d",&v1,&v2)
#define sfll3(v1,v2,v3) scanf("%I64d %I64d %I64d",&v1,&v2,&v3)

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;

const int D = 1e8 + 2;
bool done[D];

bool check(vi v , int k){
    loop(i,SZ(v)){
        range(j,i+1 , SZ(v)-1){
            if(__gcd(v[i] , v[j]) != k){
                return 0;
            }
        }
    }
    return 1;
}

int main()
{

    int n , k;
    sfi2(n,k);
    vi odds;
    for(int i = 1  , j = 0; j < 3*n ;j++,i+=2){
        odds.pb(i);
    }

    printf("%d\n",odds.back()*k);
    int f = 2;
    vector<vi> ans(n);
    loop(i,SZ(odds)){
        ans[i/3].pb(odds[i]);
    }

    loop(i,n){
        ans[i].pb(f);
        while(!check(ans[i],1)){
            ans[i].pop_back();
            f += 2;
            ans[i].pb(f);
            assert(f < odds.back());
        }
        f += 2;
    }


    loop(i,n){
        assert(check(ans[i] , 1));
        loop(j,SZ(ans[i])){
            printf("%d%c",ans[i][j]*k," \n"[j == 3]);
        }
    }


    return 0;
}

