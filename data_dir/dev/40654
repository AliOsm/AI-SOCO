#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, k;
string s, c;
vector<int> pos[26];

int bs(char x, int p) {
  int l = -1;
  int r = pos[x - 'a'].size();
  while (r - l > 1) {
    int mid = (l + r) >> 1;
    if (pos[x - 'a'][mid] <= p)
      l = mid;
    else r = mid;
  }
  int res = c.length();
  if (l != -1) {
    if (r != pos[x - 'a'].size())
      res = min(abs(p - pos[x - 'a'][l]), abs(p - pos[x - 'a'][r]));
    else res = abs(p - pos[x - 'a'][l]);
  }
  else if (r != pos[x - 'a'].size())
    res = abs(p - pos[x - 'a'][r]);
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin >> n >> k;
  cin >> s;
  for (int i = 0; i < (int)s.length(); ++i)
    pos[s[i] - 'a'].push_back(i);
  for (int i = 0; i < n; ++i) {
    cin >> c;
    ll res = 0;
    for (int j = 0; j < (int)c.length(); ++j)
      res += bs(c[j], j);
    cout << res << '\n';
  }
  return 0;
}
