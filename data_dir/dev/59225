#include <iostream>
#include <algorithm>
using namespace std;
int m,s;
bool dp[110][10][1010];

void trace_max(int sum, int n)
{
   if (n == 0) return;
   bool co = false;
   int val;
   int mmin = (n==m)?1:0;
   for (int i = 9; i>=mmin ; i--)
   {
      for (int j = 9; j>=0; j--)
      if (sum-i>=0 && dp[n-1][j][sum-i])
      {
          co = true;
          cout<<i;
          val=i;
          break;
      }
      if (co) break;
   }
   trace_max(sum-val,n-1);
}

void trace_min(int sum, int n)
{
   if (n == 0) return;
   bool co = false;
   int val;
   int mmin = (n==m)?1:0;
   for (int i = mmin; i<=9; i++)
   {
      for (int j = 0; j<=9; j++)
      if (sum-i>=0 && dp[n-1][j][sum-i])
      {
          co = true;
          cout<<i;
          val = i;
          break;
      }
      if (co) break;
   }
   trace_min(sum-val,n-1);
}

int main()
{
    ios::sync_with_stdio(false);
    cin>>m>>s;
    dp[0][0][0] = true;
    for (int j = 0; j<=s; j++)
    for (int i = 1; i<m; i++)
    for (int k = 0; k <=9; k++)
    {
        dp[i][k][j] = false;
        if (j-k>=0)
        for (int kk = 0; kk<=9; kk++)
            dp[i][k][j] = (dp[i-1][kk][j-k] | dp[i][k][j]);
    }
    bool co = false;
    for (int i=1; i<=9; i++)
    for (int j = 0; j<=9; j++)
        if (dp[m-1][j][s-i] == true) co = true;
    if (m == 1 && s == 0) cout<<"0 0";
    else
    if (!co)
        cout<<"-1 -1";
    else
    {
         trace_min(s,m);
         cout<<" ";
         trace_max(s,m);
    }
    return 0;
}
