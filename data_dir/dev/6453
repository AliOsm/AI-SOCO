/* 69E */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
int a[maxn];
vi ans;

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n, k;
	int mx;
	set<int, greater<int> > st;
	mpii tb;
	mpii::iterator iter;
	
	scanf("%d %d", &n, &k);
	rep(i, 1, n+1)
		scanf("%d", &a[i]);
	
	rep(i, 1, k+1) {
		iter = tb.find(a[i]);
		if (iter == tb.end()) {
			tb[a[i]] = 1;
			st.insert(a[i]);
		} else {
			if (iter->sec == 1)
				st.erase(a[i]);
			iter->sec += 1;
		}
	}
	
	mx = SZ(st)>0 ? *st.begin() : INT_MAX;
	ans.pb(mx);
	
	int i, j;
	
	for (i=1, j=k+1; i<=n-k; ++i, ++j) {
		// decreace a[i] & increase a[j]
		iter = tb.find(a[i]);
		if (iter->sec == 1) {
			iter->sec = 0;
			st.erase(a[i]);
		} else {
			iter->sec -= 1;
			if (iter->sec == 1)
				st.insert(a[i]);
		}
		
		iter = tb.find(a[j]);
		if (iter == tb.end()) {
			tb[a[j]] = 1;
			st.insert(a[j]);
		} else if (iter->sec == 0) {
			iter->sec = 1;
			st.insert(a[j]);
		} else if (iter->sec == 1) {
			iter->sec += 1;
			st.erase(a[j]);
		} else {
			iter->sec += 1;
		}
		
		mx = SZ(st)>0 ? *st.begin() : INT_MAX;
		ans.pb(mx);
	}
	
	int sz = SZ(ans);
	rep(i, 0, sz) {
		if (ans[i] == INT_MAX)
			puts("Nothing");
		else
			printf("%d\n", ans[i]);
	}
		
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
