
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
#include <bitset>
#include <complex>
using namespace std;
#define rep(i, n) for (int (i) = 0; (i) < (n); (i) ++)
#define rep1(i, n) for (int (i) = 1; (i) <= (n); (i) ++)
#define FOR(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout<<#a<<" :";FOR(i123,x,y)cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int((x).size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

ll N, K;
void no() {
    cout << -1 << endl;
    exit(0);
}
int main() {
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  cin >> N >> K;
  if (K * (double) (1 + K) / 2 > N + 5) {
    no();
  }
  if (K * (1 + K) / 2 > N) {
    no();
  }
  vector<ll> divs;
  for (ll d = 1; d * d <= N; d++) {
    if (N % d == 0) {
      divs.pb(d);
      if (N / d != d) {
        divs.pb(N / d);
      }
    }
  }
  sort(divs.begin(), divs.end());
  reverse(divs.begin(), divs.end());
  rep(i,sz(divs)) {
    ll g = divs[i];
    double prod = 1;
    prod *= K;
    prod *= K + 1;
    prod /= 2;
    prod *= g;
    if (prod >= N + 10) {
      continue;
    }
    if (K * (1 + K) * g / 2 > N) {
      continue;
    }
    rep1(k,K-1) {
      cout << k * g << " ";
    }
    cout << N - K * (K - 1) * g / 2 << endl;
    return 0;
  }
}

