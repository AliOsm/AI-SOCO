/*             
"IF U BELIEVE WHY NOT!!"
                       --Cristiano Ronaldo
*/             
#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli M=100000000;   
#define INF 1000000007
#define bip(n) __builtin_popcount(n)
typedef pair<lli,lli> ll;
#define mem(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem1(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem2(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
lli n,k,m;
lli z,q,u,l,r,ax,cx,ay,by,cy,ql,qr,d,x,y;
//unordered_map<pair<ll,lli>,lli> mp;
string s;
lli a[500005];
lli vis[500005];
lli me(lli a,lli b,lli M)
{
    if(b==0)
    return 1;
    else if(b%2==0)
    return me((a*a)%M,b/2,M);
    else
    return (a%M*me((a*a)%M,(b-1)/2,M)%M)%M;
}
lli mI(lli a,lli m)
{
    return me(a,m-2,m);
}
lli pi[400000];
map<lli,lli> ml;
void pf(string s)
{
    pi[0]=0;
    for(int j=1;j<s.length();j++)
    {
        int i=pi[j-1];
        while(i>0&&s[j]!=s[i])
        i=pi[i-1];
        if(s[i]==s[j])
        i++;
        pi[j]=i;
        if(j<s.length()-1)
        ml[pi[j]]=1;
    }
}
struct edge
{
    lli first,second,third;
}p[400000];
bool cmp(edge a,edge b)
{
    if(a.second==b.second)
    return a.third<b.third;
    return a.second<b.second;
}
ll po[400000];
int main()
{
cin>>n>>m;
for(int i=1;i<=n;i++)
{
    cin>>p[i].first;
    po[i].first=p[i].first;
}
for(int i=1;i<=n;i++)
{
    cin>>p[i].second;
    po[i].second=p[i].second;
}
for(int i=1;i<=n;i++)
p[i].third=i;
sort(p+1,p+n+1,cmp);
queue<edge> q;
for(int i=1;i<=n;i++)
q.push(p[i]);
for(int i=1;i<=m;i++)
{
    cin>>x>>y;
    lli s=0;
    if(y>=po[x].first)
    {
        y-=po[x].first;
        s+=po[x].second*po[x].first;
        po[x].first=po[x].second=0;
        while(y>0&&q.size()>0)
        {
            lli k1=(q.front()).third;
            lli d1=min(y,po[k1].first);
            y-=d1;
            po[k1].first-=d1;
            s+=po[k1].second*d1;
            if(po[k1].first==0)
            q.pop();
        }
    }
    else
    {
        s+=po[x].second*y;
        po[x].first-=y;
        y=0;
    }
    if(y==0)
    cout<<s<<endl;
    else
    cout<<0<<endl;
}
}//