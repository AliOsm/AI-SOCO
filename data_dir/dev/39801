/// In The Name Of God

#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * (x))
#define all(x) x.begin(), x.end()

#define rep(i, l, r) for (int i = (l); i <= (r); i++)
#define per(i, l, r) for (int i = (l); i >= (r); i--)

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)5e5 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

#define x1 asdasdsadasf
#define y1 adsfasafdskjasl
#define x2 asfdsgadsjfadskfjsf
#define y2 dfadjskfhadlkjfhaldkfjhal

double dist(double x, double y, double x1, double y1) {
	return sqrt(sqr(x - x1) + sqr(y - y1));
}

double a, b, c;
double x1, y1, x2, y2;


int main() {
	#ifdef IOI2018
		freopen ("in.txt", "r", stdin);
	#endif
	Kazakhstan
	cin >> a >> b >> c;
	cin >> x1 >> y1 >> x2 >> y2;
	if (x1 == x2) cout << abs(y1 - y2), ioi
	if (y1 == y2) cout << abs(x1 - x2), ioi

	if (x1 > x2) swap(x1, x2), swap(y1, y2);
	double ans = abs(x1 - x2) + abs(y1 - y2);

	/// ax + by + c = 0

	/// y = y1 x = x2
	if (a != 0 && b != 0) {
		double cur = 0;
		/// x = (-by - c) / a
		double x = (-b * y1 - c) / a;
		/// first point x, y1
		double y = (-c - a * x2) / b;
		/// second point x2, y
		cur += abs(x - x1);
		cur += abs(y - y2);	
		cur += dist(x, y1, x2, y);
		ans = min(ans, cur);	
	}
	/// y = y1 y = y2
	/// ax + by + c = 0
	if (a != 0) {
		double cur = 0;
		/// x = (-by - c) / a
		double x = (-b * y1 - c) / a;
		/// first point x, y1
		double xp = (-b * y2 - c) / a;
		/// second point xp, y2
		cur += abs(x - x1);
		cur += abs(xp - x2);
		cur += dist(x, y1, xp, y2);
		ans = min(ans, cur);
	}

	/// x = x1 y = y2
	/// ax + by + c = 0
	if (a != 0 && b != 0) {
		double cur = 0;
		double y = (-a * x1 - c) / b;
		/// first point x1, y	
		double xp = (-b * y2 - c) / a;
		/// second point xp, y2
		cur += abs(y1 - y);
		cur += abs(xp - x2);
		cur += dist(x1, y, xp, y2);
		ans = min(ans, cur);
	}

	/// x = x1 x = x2
	/// ax + by + c = 0
	if (b != 0) {
		double cur = 0;
		double y = (-a * x1 - c) / b;
		/// first point x1, y	

		double yp = (-a * x2 - c) / b;
		/// second point x2, yp
		cur += abs(y - y1);
		cur += abs(yp - y2);
		cur += dist(x1, y, x2, yp);
		ans = min(ans, cur);
	}


	cout << setprecision(10) << fixed << ans;
	ioi
}
