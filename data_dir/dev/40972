#include <bits/stdc++.h>
using namespace std;

map<int, int> mp;

int nth_bit(int64_t num, int n){
    return (num >> n) & 1;
}

void solve(){
    int64_t N, M;
    cin >> N >> M;
    vector<int64_t> num(64);
    for(int i=0; i<M; i++){
        int a;
        cin >> a;
        num[mp[a]]++;
    }
    int64_t ans = 0;
    for(int k=0; k<=60; k++){
        if(nth_bit(N, k)){
            if(num[k]){
                num[k]--;
            }else{
                int t = k;
                while(t < 64 && num[t] == 0) t++;
                if(t == 64){
                    cout << -1 << endl;
                    return;
                }
                num[t]--;
                for(int i=k+1; i<t; i++) num[i]++;
                ans += t-k;
            }
        }
        num[k+1] += num[k]/2;
    }
    cout << ans << endl;
}

int main(){
    for(int i=0; i<30; i++) mp[1<<i] = i; 
    int T;
    cin >> T;
    while(T--) solve();
    return 0;
}
