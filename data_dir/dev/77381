#include "bits/stdc++.h"
using namespace std;
 
#define int long long

const int mod = 1e9 + 7;
const int N = 1e6 + 5; 
const int inf = 1e18 + 4;

void get(int x, vector<int> &a) {
  int cur = 1;
  a.push_back(1);
  while (cur <= inf / x) {
    cur *= x;
    a.push_back(cur);
  }
}

int solve() {
  int x, y, l, r;
  cin >> x >> y >> l >> r;
  vector<int> a, b, bad_nums;
  get(x, a);
  get(y, b);

  for (int x: a) {
    for (int y: b) {
      int sum = x + y;
      if (sum <= inf && l <= sum && sum <= r) {
        bad_nums.push_back(sum);
      }
    }
  }
  sort(bad_nums.begin(), bad_nums.end());
  bad_nums.erase(unique(bad_nums.begin(), bad_nums.end()), bad_nums.end());
  int ans = 0;
  if (!bad_nums.empty()) {
    ans = max(ans, r - bad_nums.back());
  }
  else {
    ans = r - l + 1;
  } 
  for (int i = 0; i < bad_nums.size(); ++i) {
    if (!i) {
      ans = max(ans, bad_nums[i] - l);
    }
    else {
      ans = max(ans, bad_nums[i] - bad_nums[i-1] - 1);
    }
  }
  cout << ans << '\n';
  return 0; 
}

signed main() {
  ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
  // int T = 1; cin >> T; for (int i = 1; i <= T; ++i)
  solve();
  return 0;
}
