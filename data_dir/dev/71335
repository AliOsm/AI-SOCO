#include <cstdio>
#include <algorithm>
#include <map>
#include <vector>
using namespace std;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
typedef long long ll;

pii operator+(const pii& a,const pii& b) { return pii(a.first+b.first,a.second+b.second); }
pii operator-(const pii& a,const pii& b) { return pii(a.first-b.first,a.second-b.second); }

ll productVect(const pii& a,const pii& b)
{
	ll A = a.first;
	ll B = a.second;
	ll C = b.first;
	ll D = b.second;
	return A*D-B*C;
}

bool pii_comp_x( const pii& a,const pii &b) { return a.first < b.first; }

int underChain(const vpii& chn, const pii& pnt)
{
	if (chn[0].first > pnt.first || chn.back().first < pnt.first) return 0;
	int i = lower_bound(chn.begin(),chn.end(),pnt,pii_comp_x)-chn.begin();
	if (i) --i;
	return (productVect(chn[i+1]-chn[i],pnt-chn[i]) <= 0);
}

void convex_minko_sum(const vpii& a, const vpii& b, vpii& out)
{
	out.clear();
	int i=0,j=0;
	for (int q=0;q<a.size();++q) if (a[q]<a[i]) i=q;
	for (int q=0;q<b.size();++q) if (b[q]<b[j]) j=q;
	do
	{
		out.push_back( a[i]+b[j] );
		ll pro= productVect(a[(i+1)%a.size()]-a[i], b[(j+1)%b.size()]-b[j]);
		if (pro>=0)	i=(i+1)%a.size();
		if (pro<=0)	j=(j+1)%b.size();
	}
	while ( a[i]+b[j] != out[0] );
}

int main()
{
	vpii T[5];
	for (int q=0;q<3;++q)
	{
		int sz;
		scanf("%d",&sz);
		for (int w=0;w<sz;++w)
		{
			pii u;
			scanf("%d %d",&u.first,&u.second);
			T[q].push_back(u);
		}
	}
	convex_minko_sum( T[0],T[1],T[3]);
	convex_minko_sum( T[2],T[3],T[4]);

	vpii up,down;
	for (int q=0;q<T[4].size();++q)
	{
		pii a = T[4][q];
		pii b = T[4][(q+1)%T[4].size()];
		if (a.first < b.first)
		{
			if (down.empty() || down.back()!=a) down.push_back(a);
			down.push_back(b);
		}
		if (a.first > b.first)
		{
			if (up.empty() || up.back()!=a) up.push_back(a);
			up.push_back(b);
		}
	}
	reverse(up.begin(),up.end());
	for (int q=0;q<down.size();++q) down[q].second *= -1;

	int Quest;
	scanf("%d",&Quest);
	for (int q=0;q<Quest;++q)
	{
		int a,b;
		scanf("%d %d",&a,&b); a*=3,b*=3;
		printf("%s\n",(underChain(up,pii(a,b)) && underChain(down,pii(a,-b)))?"YES":"NO");
	}

	return 0;
}
