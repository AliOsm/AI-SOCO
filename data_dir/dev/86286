#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define fr(i,n) for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

const int INF = 1e9;
const int N = 2100;

struct point {

    ll x;
    ll y;
	 int k;
    bool operator < (const point &e) const { return x < e.x; }
    
} p[N];

struct ds {
   
   ll d;
   int k;
   
   bool operator < (const ds &e) const { return d < e.d; }
} dx[N];

long long dist(ll i, ll j, ll ii, ll jj) {
   return (i - ii) * (i - ii) + (j - jj) * (j - jj);
}

int n, k, m; 
ll x, xx, y, yy;
ll dxx[N];
int chek[N];

ll max(ll x, ll y) {
   return x > y ? x : y;
}

ll min(ll x, ll y) {
   return x < y ? x : y;
}

int main() {
   ios_base::sync_with_stdio(0);
   
   cin >> n;
   cin >> x >> y;
   cin >> xx >> yy;
   
   fru(i, 1, n) 
   {
      cin >> p[i].x >> p[i].y;
      p[i].k = i;
   }
   
   fru(i, 1, n) 
      dx[i].d = dist(x, y, p[i].x, p[i].y),
      dx[i].k = i;
      
   fru(i, 1, n) 
      dxx[i] = dist(xx, yy, p[i].x, p[i].y);
   
   sort(dx + 1, dx + 1 + n);
   
   ll res = 1e18;
   
   fru(i, 0, n)
   {
      chek[dx[i].k] = 1;
      
      ll r = 0;
      
      fru(j, 1, n)
      {
         if(!chek[j])
            r = max(r, dxx[j]);
      }
      
      res = min(res, r + dx[i].d);
   }

   cout << res;
   
   return 0;
}