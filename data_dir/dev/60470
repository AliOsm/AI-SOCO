#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<queue>
#define pb push_back
using namespace std;
const int maxn=4000;
int par[maxn];
vector<int> adj[maxn];
set<int> st;
bool mark[maxn];
int n;
void p(int x,int end){
	st.insert(x);
	if(x==end)
		return;
	else
		p(par[x],end);
}
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
bool dfs(int x,int l){
	mark[x]=true;
	for(int i=0;i<adj[x].size();i++) {
		if(adj[x][i]!=l) {
			if(mark[adj[x][i]]){
				p(x,adj[x][i]);
				return true;
			}
			else{
				par[adj[x][i]]=x;
				if(dfs(adj[x][i],x))
					return true;
			}
		}
	}
	return false;
}
int main(){
	int u,v;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>u>>v;
		u--;v--;
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(0,-1);
	for(int i=0;i<n;i++){
		fill(mark,mark+maxn,false);
		queue<pair<int,int> > q;
		q.push(make_pair(i,0));
		while(!q.empty()){
			int x=q.front().first;
			int len=q.front().second;      
			q.pop();
			mark[x]=true;
			if(st.find(x)!=st.end()){
				cout<<len<<' ';
				break;
			}
			for(int i=0;i<adj[x].size();i++)
				if(!mark[adj[x][i]])
					q.push(make_pair(adj[x][i],len+1));
		}
	}
	cout<<endl;
}

