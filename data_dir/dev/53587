#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
// #define int ll
// #define endl '\n';
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define floop(i,a,b) for(int i=a;i<=b;++i)
const ll mod=1e9+7;
const int maxn=2e5+5;
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;

typedef tree<pair<ll,ll>,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
ordered_set st; 
int32_t main(){
	IOS;	
	int n;
	cin>>n;
	int a[n],b[n];
	for (int i = 0; i < n; ++i)
	{
		cin>>a[i];
	}
	for (int i = 0; i < n; ++i)
	{
		cin>>b[i];
		a[i]-=b[i];
	}
	ll ans=0;
	for(int i=n-1;i>=0;--i){
		// cout<<i<<" "<<a[i]<<" "<<st.order_of_key({a[i],-1})<<endl;
		ans+=(ll)st.order_of_key({a[i],-1});
		st.insert({-a[i],i});
	}
	cout<<ans<<endl;
	return 0;
}