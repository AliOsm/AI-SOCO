#include <bits/stdc++.h>

using namespace std;

const int MX = 4000;

int xn[MX * 2];
int f[MX * 2];

int ll[int(1e7) + 228], rr[int(1e7) + 228];

long long pw(long long a, long long b) {
    long long ans = 1;
    for(int i = 1; i <= b; i++) {
        ans *= a;
    }
    return ans;
}

int main() {
    ios::sync_with_stdio(false);
//    freopen(".in", "w", stdout);


    int n, l, r;
    cin >> n >> l >> r;


    if(n == 1) {
        cout << r - l + 1 << "\n";
        return 0;
    }

    if(n == 2) {
        cout << 1LL * (r - l + 1) * (r - l) << "\n";
        return 0;
    }

    if(n > 30) {
        cout << 0 << "\n";
        return 0;
    }

    long long ans = 0;

    n--;

    for(int i = 1; i <= r; i++) {
        if(pw(i, n) > r)
            break;
        xn[i] = pw(i, n);
    }

    for(int a = 1; a <= r; a++) {
        int L = round(.5 + exp(log(1.0 * l / a) / n) - 1e-9);
        int R = min(int(exp(log(1.0 * r / a) / n) + 1e-9), MX - 1);
        L = max(L, 1);
        ll[a] = L;
        rr[a] = R;
    }

    for(int y = 1; y < MX; y++) {
//        cout << "y " << y << "\n";
        if(xn[y] > r || xn[y] == 0)
            continue;
        for(int x = 1; x < MX; x++) {
            f[x] = 0;
            if(__gcd(x, y) != 1 || x == y)
                continue;
            f[x] = 1;
        }

        for(int x = 1; x < MX; x++)
            f[x] += f[x - 1];

//        l / a <= xn <= r / a
//        l <= a * yn <= r

        for(int a = 1; ; a++) {
//            if(y > 500)
//                cout << a << "\n";
            if(a * xn[y] > r)
                break;
            if(a * xn[y] < l)
                continue;
            int L = ll[a];
            int R = rr[a];
            L = max(L, 1);
            if(L > r)
                break;
            if(L > R)
                break;
            ans += f[R] - f[L - 1];
//            cout << a << "\n";
//            cout << "(" << xn[y] << ") " << a << " " << L << " " << R << " = " << f[R] - f[L - 1] << "\n";
//            cout << " = " << .5 + exp(log(1.0 * l / a) / n) << "\n";
        }
    }
    cout << ans << "\n";
    return 0;
}
