#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define INF (0x3f3f3f3f)

#define SZ(x) ((int)((x).size()))
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))

typedef long long LL;
typedef pair<int, int> PII; typedef pair<PII, int> PII2;

#define MAXN (200005)
#define OFFSET (200000)

int N;
vector<PII> adj[MAXN * 2]; // v, id
bool used[MAXN];
int ans[MAXN];

void dfs(int u, int color) {
    ans[adj[u].back().y] = color;
    used[adj[u].back().y] = true;
    int v = adj[u].back().x;
    adj[u].pop_back();
    while (SZ(adj[v])) {
        if (used[adj[v].back().y]) {
            adj[v].pop_back();
        } else {
            dfs(v, color ^ 1);
            break;
        }
    }
}

int main() {
    int x, y;
    scanf("%d", &N);
    REP(i, N) {
        scanf("%d %d", &x, &y);
        x--, y--;
        adj[x].PB(PII(y + OFFSET, i));
        adj[y + OFFSET].PB(PII(x, i));
    }
    REP(i, OFFSET) {
        int color = 0;
        while (SZ(adj[i])) {
            if (used[adj[i].back().y]) {
                adj[i].pop_back();
            } else {
                dfs(i, color);
                color ^= 1;
            }
        }
    }
    REP(i, N) {
        printf("%c", ans[i] == 0 ? 'r' : 'b');
    }
    return 0;
}
