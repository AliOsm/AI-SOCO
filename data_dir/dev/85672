#include <bits/stdc++.h>
using namespace std;
#define int long long
int n,m;
bool compat(pair<int,int> x,pair<int,int> y)
{
    if(y.first == x.first || y.first== x.second || y.second==x.first || y.second==x.second) return true;
    bool f1 = y.first<x.first && y.second>x.first;
    bool f2 = y.first<x.second && y.second>x.second;
    return f1==f2;
}
vector<vector<int> > adj,adjr;
vector<bool> vis;
vector<int> scc;
vector<int> vals;
stack<int> s;
vector<int> vv;
int cur;
void dfs1(int loc)
{
    vis[loc] = 1;
    for(auto &i:adj[loc])
        if(!vis[i])
            dfs1(i);
    s.push(loc);
    vv.push_back(loc);
}
void dfs2(int loc)
{
    if(vis[loc]) return;
    vis[loc] = 1;
    for(auto &i:adjr[loc])
        if(!vis[i])
            dfs2(i);
    scc[loc] = cur;
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    cin>>n>>m;
    vector<pair<int,int> > roads(m);
    string ans;
    adj.resize(2*m+10);
    adjr.resize(2*m+10);
    vis.assign(2*m+10,0);
    vals.assign(2*m+10,0);
    for(int i=0;i<m;i++)
    {
        ans.push_back('i');
        cin>>roads[i].first>>roads[i].second;
        if(roads[i].first>roads[i].second) swap(roads[i].first,roads[i].second);
    }
    for(int i=0;i<m;i++)
    {
        for(int j=i+1;j<m;j++)
        {
            if(!compat(roads[i],roads[j]))
            {
                adj[i].push_back(j+m);
                adj[j].push_back(i+m);
                adj[i+m].push_back(j);
                adj[j+m].push_back(i);
                adjr[j+m].push_back(i);
                adjr[i+m].push_back(j);
                adjr[i].push_back(j+m);
                adjr[j].push_back(i+m);
            }
        }
    }
    for(int i=0;i<2*m;i++)
        if(!vis[i])
            dfs1(i);
    vis.assign(2*m+10,0);
    scc.assign(2*m+10,0);
    cur = 1;
    while(s.size())
    {
        int now = s.top();
        s.pop();
        if(!vis[now])
        {
            dfs2(now);
            cur++;
        }
    }
    bool flag = true;
    for(int i=0;i<m;i++)
        if(scc[i] == scc[i+m])
        {
            flag = false;
            break;
        }
    if(flag)
    {
        for(int i=0;i<m;i++)
            if(scc[i]<scc[i+m])
            {
                vals[i] = 0;
                vals[i+m] = 1;
            }
            else
            {
                vals[i] = 1;
                vals[i+m] = 0;
            }
        for(int i=0;i<m;i++)
            if(vals[i]) cout<<"i";
            else cout<<"o";
    }
    else
    {
        cout<<"Impossible";
    }
    return 0;
}