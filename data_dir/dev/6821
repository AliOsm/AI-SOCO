#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll,ll> pll;
typedef pair<pll,pll> ppll;
typedef long double ld;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define fst first
#define snd second
#define ins insert
#define pb push_back

const int N = 5e5 + 5;
const int MOD = 1e9 + 7;
vector<pll> edg;
set<int> g[N];
int deg[N];
int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen(".in", "r", stdin);
    //freopen(".out", "w", stdout);
    int n,m,k;
    cin >> m >> n >> k;
    for(int i = 0;i < n; ++i){
        int u,v;
        cin >> u >> v;
        --u,--v;
        edg.pb({u,v});
        deg[u]++;
        deg[v]++;
        g[u].ins(v);
        g[v].ins(u);
    }
    set<pll> s;
    for(int i = 0;i < m; ++i){
        if(deg[i])s.ins({deg[i],i});
    }
    vector<int> ans;
    for(int i = n - 1;i >= 0; --i){
        while(!s.empty() && s.begin()->fst < k){
            int id = s.begin()->snd;
            s.erase(s.begin());
            for(auto &it : g[id]){
                if(deg[it] < k)continue;
                g[it].erase(id);
                pll f = {deg[it],it};
                s.erase(f);
                f = {--deg[it],it};
                s.ins(f);
            }
            g[id].clear();
        }
        ans.pb(s.size());
        int u = edg[i].fst,v = edg[i].snd;
        if(g[u].find(v) == g[u].end())continue;
        g[v].erase(u);
        g[u].erase(v);
        if(deg[u] >= k){
            pll f = {deg[u],u};
            s.erase(f);
            f = {--deg[u],u};
            s.ins(f);
        }
        if(deg[v] >= k){
            pll f = {deg[v],v};
            s.erase(f);
            f = {--deg[v],v};
            s.ins(f);
        }
    }
    for(int i = n - 1;i >= 0; --i)cout << ans[i] << "\n";
    return 0;
}



