#include <bits/stdc++.h>
using namespace std;

const int kMaxLength = 31;

long long f[kMaxLength + 1][2][2][2][2];

void Solve() {
    int l, r;
    cin >> l >> r;

    memset(f, 0, sizeof f);

    f[0][0][0][0][0] = 1;
    for (int i = 0; i < kMaxLength; ++i) {
        for (int x = 0; x < 2; ++x) {
            for (int y = 0; y < 2; ++y) {
                for (int a = 0; a < 2; ++a) {
                    for (int b = 0; b < 2; ++b) {
                        if (!f[i][x][y][a][b]) continue;
                        int pos = kMaxLength - i - 1;
                        int bit_l = (l >> pos) & 1;
                        int bit_r = (r >> pos) & 1;
                        int bit_first_cands[] = {0, 0, 1};
                        int bit_second_cands[] = {0, 1, 0};
                        for (int j = 0; j < 3; ++j) {
                            int first_cand = bit_first_cands[j];
                            int second_cand = bit_second_cands[j];
                            if (bit_l > first_cand && !x) continue;
                            if (bit_r < first_cand && !y) continue;
                            if (bit_l > second_cand && !a) continue;
                            if (bit_r < second_cand && !b) continue;
                            /* cout << i << endl;
                            cout << first_cand << ' ' << bit_l << endl;
                            cout << second_cand << ' ' << bit_r << endl;
                            cout << endl; */
                            f[i + 1][x | (bit_l < first_cand)][y | (bit_r > first_cand)][a | (bit_l < second_cand)][b | (bit_r > second_cand)] += f[i][x][y][a][b];
                        }
                    }
                }
            }
        }
    }

    long long result = 0;
    for (int x = 0; x < 2; ++x) {
        for (int y = 0; y < 2; ++y) {
            for (int a = 0; a < 2; ++a) {
                for (int b = 0; b < 2; ++b) {
                    result += f[kMaxLength][x][y][a][b];
                }
            }
        }
    }

    cout << result << '\n';
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int t;
    cin >> t;

    for (int i = 0; i < t; ++i) {
        Solve();
    }
}