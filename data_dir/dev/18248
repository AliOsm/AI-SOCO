#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=1e5+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
//#define int ll

#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int dp[2][269];

int32_t main()
{
    IOS

    vector<pii> v;
    int n,m,k;
    cin>>n>>m>>k;
    for (int i=1;i<=n;i++)
    {
        int l,r;
        cin>>l>>r;
        v.pb(mkp(l,i));
        v.pb(mkp(r+1,-i));
    }
    sort(all(v));

    set<int> ss;
    int last=0;
    for (int _=0;_<sz(v);_++)
    {
        memset(dp[_&1],0,sizeof(dp[_&1]));
        pii now=v[_];

        int cnt=0;
        for (int j:ss) cnt+=(j<abs(now.S));

        if (now.S>0)
        {
            for (int i=0;i<(1<<sz(ss));i++)
            {
                int newmask=0,newmask2=0;
                for (int j=sz(ss)-1;j>=sz(ss)-cnt;j--) newmask=(newmask<<1)|((i&(1<<j))>0);
                newmask=(newmask<<1);
                newmask2=(newmask|1);
                for (int j=sz(ss)-cnt-1;j>=0;j--) newmask=(newmask<<1)|((i&(1<<j))>0),newmask2=(newmask2<<1)|((i&(1<<j))>0);
                dp[_&1][newmask]=max(dp[_&1][newmask],dp[_&1^1][i]+(__builtin_popcount(i)&1 ? now.F-last : 0));
                dp[_&1][newmask2]=max(dp[_&1][newmask2],dp[_&1^1][i]+(__builtin_popcount(i)&1 ? now.F-last : 0));
            }
            ss.insert(abs(now.S));
        }
        else
        {
            now.S=-now.S;
            for (int i=0;i<(1<<sz(ss));i++)
            {
                int newmask=0;
                for (int j=sz(ss)-1;j>=sz(ss)-cnt;j--) newmask=(newmask<<1)|((i&(1<<j))>0);
                for (int j=sz(ss)-cnt-2;j>=0;j--) newmask=(newmask<<1)|((i&(1<<j))>0);
                dp[_&1][newmask]=max(dp[_&1][newmask],dp[_&1^1][i]+(__builtin_popcount(i)&1 ? now.F-last : 0));
            }
            ss.erase(abs(now.S));
        }
        last=v[_].F;
    }
    cout<<dp[(sz(v)-1)&1][0]<<endl;
}

