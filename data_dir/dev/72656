#include <bits/stdc++.h>
#define pb push_back

typedef long long ll;
typedef long double ld;

using namespace std;

struct edge{
	int to;
	int id;
	int sign;
	edge(int t, int i, int s) : to(t), id(i), sign(s) {}
};

const int N = 2e5 + 10;
int n, m;
int s[N];
vector<edge> g[N];
int flow[N];
int visited[N];

int dfs(int i){
	visited[i] = true;
	int res = s[i];
	for(edge &e : g[i]){
		if(visited[e.to]) continue;
		int rem = dfs(e.to);
		res += rem;
		flow[e.id] += e.sign * rem;
	}
	return res;
}

int main(){
	
	scanf("%d", &n);
	for(int i = 1; i <= n; i++) scanf("%d", &s[i]);
	scanf("%d", &m);
	for(int i = 1; i <= m; i++){
		int x, y;
		scanf("%d%d", &x, &y);
		g[x].emplace_back(y, i, 1);
		g[y].emplace_back(x, i, -1);
	}
	for(int i = 1; i <= n; i++){
		if(visited[i]){
			continue;
		}
		int f = dfs(i);
		if(f != 0){
			printf("Impossible\n");
			return 0;
		}
	}
	printf("Possible\n");
	for(int i = 1; i <= m; i++){
		printf("%d\n", flow[i]);
	}

	return 0;
}