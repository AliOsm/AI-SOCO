#include <set>
#include <vector>
#include <string>
#include <sstream>
#include <algorithm>
#include <ctype.h>
#include <iostream>
#include <stack>
#include <stdio.h>
#include <queue>
#include <string.h>
#include <cmath>
#include <bitset>
using namespace std;

char mmap[151][151];
int keydir[255];
int dx[4]={0,+1,0,-1};
int dy[4]={-1,0,+1,0};

char command[100001];
int main()
{
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	for(int i=0;i<n;i++)
		scanf("%s",mmap[i]);
	bitset<150*150> T,dir[4][2],E;
	keydir['U']=0;
	keydir['R']=1;
	keydir['D']=2;
	keydir['L']=3;
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
		{
			if(mmap[i][j]=='E')
				E[i*m+j]=1;
			if(mmap[i][j]!='#')
			{
				T[i*m+j]=1;
				for(int k=0;k<4;k++)
				{
					if(mmap[i+dy[k]][j+dx[k]]!='#')
						dir[k][0][i*m+j]=1;
					else
						dir[k][1][i*m+j]=1;
				}
			}
		}
//	cout<<T.to_string()<<endl;
//	cout<<"________"<<endl;
//	cout<<dir[0][0]<<endl;
//	cout<<dir[0][1]<<endl;
	{

		int i;
		scanf("%s",command);
		for( i=0;command[i]!='\0';i++)
		{
			if(T==E)
			{
				printf("%d\n",i);
				return 0;
			}
			switch(command[i])
			{
			case 'U':
				T=((T&dir[0][1])|((T&dir[0][0])>>m));
				break;
			case 'R':
				T=((T&dir[1][1])|((T&dir[1][0])<<1));
				break;
			case 'D':
				T=((T&dir[2][1])|((T&dir[2][0])<<m));
				break;
			case 'L':
				T=((T&dir[3][1])|((T&dir[3][0])>>1));
				break;
			}
//			for(int i=0;i<n;i++,putchar('\n'))
//				for(int j=0;j<m;j++)
//					cout<<T[i*m+j];
//			cout<<endl;
		}
		if(T==E)
			printf("%d\n",i);
		else
			printf("-1\n");
	}
}
