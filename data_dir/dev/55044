#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <list>
#include <fstream>
using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define sz(v)               ((int)((v).size()))
#define clr(v, d)           memset(v, d, sizeof(v))
#define MP                  make_pair
#define lpv(i, v)           for(int i=0;i<sz(v);++i)
#define lpn(i, n)           for(int i=0;i<(int)(n);++i)
#define s 	                second
#define f  	                first


typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;
typedef vector<int>                 vi;
typedef vector<ll>                  vl;

ll suf(ll a){ return (a*(a + 1)) / 2; }
const ll  OO = 1e6 + 10, S = 1e6 + 10;
vector<vector<int> >adj, can;
bool OK;

int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};

int main()
{
	ll n, m, a, b;
	while (cin >> n){
		map<int, int>L, R;
		set<int>st;
		for (int i = 0; i < n; i++){
			cin >> a >> b;
			L[a]++;	
			st.insert(a);
			if (a != b){
				R[b]++;
				st.insert(b);
			}
		}
		ll ans = INT_MAX, half = ceil(n / 2.0), in = 0;
		for (auto it : st){
			ll l = L[it], r = R[it];
			if (l + r >= half){
				ans = min(ans, max(0LL, half - l)), in = 1;
			}
		}
		if (in) cout << ans << endl;
		else cout << "-1" << endl;
	}

	return 0;
}