#include<bits/stdc++.h>
using namespace std;
#define int 				long long
#define ll                  long long
#define ld                  double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007LL
#define inf                 (ll)1e18
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
int tree[1000000];
int N=2*100000+5;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
    ll res=1;
    x=x%p;
    while(y>0)
    {
        if(y&1)
            res=((res%p)*(x%p))%p;
        y=y>>1;
        x=((x%p)*(x%p))%p;
    }
    return res;
}
ll raichu(ll x,ll y)
{
    ll res=1;
    while(y>0)
    {
        if(y&1)
            res=((res)*(x));
        y=y>>1;
        x=((x)*(x));
    }
    return res;
}
bool isprime(ll n)
{
    if(n<2) return false;
    else if(n==2) return true;
    else if(n%2==0) return false;
    else
    {
        ll z=sqrt(n);
        rep(i,z-1) if(n%(i+2)==0) return false;
        return true;
    }
}
void update(int c,int st,int en,int z)
{
	if(en<z || st>z) return;
	else if(st==en)
	{
		if(st==z) tree[c]+=1;
		return;
	}
	else
	{
		int mid=(st+en)/2;
		update(2*c+1,st,mid,z);
		update(2*c+2,mid+1,en,z);
		tree[c]=tree[2*c+1]+tree[2*c+2];
		return;
	}
}
int query(int c,int st,int en,int z)
{
	if(en<z) return 0;
	else if(st>=z) return tree[c];
	else
	{
		int mid=(st+en)/2;
		int x=query(2*c+1,st,mid,z);
		int y=query(2*c+2,mid+1,en,z);
		return x+y;
	}
}
int32_t main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin>>n;
    vi a(n+1);
    rep(i,n) cin>>a[i+1];
    priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;
    rep(i,n)
    {
    	q.push(mp(min(N-3,a[i+1]),i+1));
    }
    int in=0,ans=0;
    while(!q.empty())
    {
    	pair<int,int> z=q.top();
    	q.pop();
    	for(int i=in+1;i<=min(n,z.fi);i++)
    	{
    		update(0,0,N,min(N-3,a[i]));
    	}
    	in=min(n,z.fi);
    	ans+=query(0,0,N,z.se);
    	if(z.fi>=z.se) ans--;
    	//cout<<ans<<endl;
    }
    //rep(i,20) cout<<tree[i]<<" ";
    //cout<<endl;
    //rep(i,n) if(a[i+1]>=i+1) ans--;
    cout<<ans/2;
    return 0;
}