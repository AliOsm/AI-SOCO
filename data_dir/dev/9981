#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define Endl endl
#define mod  1000000000
#define mkp make_pair
#define pb push_back
#define sfl(n) scanf("%lld",&n)
#define pfl(n) printf("%lld ",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d\n",n)
#define MAXI (ll)1e18 //10^18
#define MINI -1000000000000000000
#define bitget(n) __builtin_popcountll(n)
ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
bool isvalid(ll x,ll y,ll n,ll m){
    return (x>=0&&x<n&&y>=0&&y<m);
}
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}

int main()

{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ll t,i,j,p,q,k,n,l,r,m,x;
    sfl(n);
    sfl(k);
    sfl(x);
    ll ap[n+11];
    ll zero = 0,neg = 0;
    ll chek = 0;
    for(i=0;i<n;i++){
      sfl(ap[i]);
      if(ap[i]==0){
        zero++;
      }else if(ap[i]<0){
        neg++;
      }
    }
    if(zero>k){
      pfl(ap[0]-(k*x));
      for(i=1;i<n;i++){
        pfl(ap[i]);
      }
      return 0;
    }else{
      if(neg%2){
        for(i=0;i<n;i++){
          if(ap[i]==0){
            ap[i] += x;
            k--;
          }
        }
      }else{
        for(i=0;i<n;i++){
          if(ap[i]==0){
            ap[i] -= x;
            k--;
            neg++;
            break;
          }
        }
        for(i=0;i<n;i++){
          if(ap[i]==0){
            ap[i] += x;
            k--;
            break;
          }
        }
      }
      if(neg%2){
        chek = 1;
      }
    }
    // cout<<k<<" ";
    ll mini = MAXI;
    if(!chek){
      for(i=0;i<n;i++){
        mini = min(mini,abs(ap[i]));
      }
      for(i=0;i<n;i++){
        if(abs(ap[i]) == mini){
          p = abs(ap[i]);
          // cout<<p<<" ";
          if(ap[i]>0){
            while(k--){
              p = p - x;
              if(p<0){
                break;
              }
            }
          }else{
            p = ap[i];
            while(k--){
              p = p + x;
              if(p>0){
                break;
              }
            }
          }
          ap[i] = p;
          break;
        }
      }
    }
    priority_queue<pair<ll,pair<ll,ll> > >pq;
    for(i=0;i<n;i++){
      if(ap[i]<0)
        pq.push(mkp(-abs(ap[i]),mkp(i,0)));
      else
        pq.push(mkp(-ap[i],mkp(i,1)));
    }
    
    while(k>0){
      k--;
      ll val = -pq.top().first;
      ll sign = pq.top().second.second;
      ll indx = pq.top().second.first;
      pq.pop();
      if(sign){
        val = val + x;
        pq.push(mkp(-val,mkp(indx,1)));
      }else{
        val = -val - x;
        pq.push(mkp(val,mkp(indx,0)));
      }
    }
    ll ans[n+11];
    while(!pq.empty()){
      if(pq.top().second.second)
        ans[pq.top().second.first] = -pq.top().first;
      else
        ans[pq.top().second.first] = pq.top().first;
      pq.pop();
    }
    for(i=0;i<n;i++){
      pfl(ans[i]);
    }
return 0;
}