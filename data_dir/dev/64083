// u wws
#include <bits/stdc++.h>

#define fi first
#define se second
#define pb push_back
#define sz(x) ((int)(x).size())
#define whole(x) (x).begin(), (x).end()

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair < int, int > pii;
typedef pair < ll, ll > pll;

const int N = (int)5e6 + 2;
const int mod = (int)1e9 + 7;
const int INF = (int)2e9 + 7;
const int LG = 20;
const ll linf = 1e17;
const ld pi = acos(-1);
const int base = 10;
const ld EPS = 1e-9;

int t, l, r, lp[N];
ll dp[N];

ll add (ll a, ll b)
{
  ll c = a + b;
  if (c >= mod) c -= mod;
  return c;
}

int main(){
  scanf ("%d %d %d", &t, &l, &r);
  for (int i = 2; i < N; ++i) lp[i] = i;
  for (ll div = 2; div < N; ++div)
  {
    if (lp[div] == div)
    {
      for (ll j = div * div; j < N; j += div) lp[j] = min(lp[div], lp[j]);
    }
  }
  for (int x = 2; x < N; ++x)
  {
    ll ans = linf;
    for (int j = x; j > 1; j /= lp[j])
    {
      ans = min(ans, 1ll * dp[x / lp[j]] + ((x * 1ll * (lp[j] - 1)) / 2ll));
    }
    dp[x] = ans;
  }
  ll cur = 1, ans = 0;
  for (int j = l; j <= r; ++j)
  {
    dp[j] = (dp[j] % mod);
    ans = add(ans, (dp[j] * cur) % mod);
    cur = (cur * t) % mod;
  }
  printf ("%lld\n", ans);
  return 0;
}
