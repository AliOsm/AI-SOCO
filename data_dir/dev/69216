#include <bits/stdc++.h>
#define int long long
#define hash hashhash
#define X first
#define Y second
#define endl "\n"
#define Mp make_pair
#define debug(x) cerr << #x << " = " << x << endl
using namespace std;
inline int in(){int32_t x ; scanf("%d",&x) ; return x ; }
inline long long lin(){long long x ; scanf("%lld",&x) ; return x ;}
char ch[4000010];
inline string get(){ scanf("%s",ch) ; return string(ch) ; }
inline void read(int *a , int n ) { for (int i = 0 ; i < n ; i ++) a[i] = in() ; }
template <class blank> inline void out(blank x) {cout << x << endl ; exit(0) ;}
template <class blank , class blank2> inline void smin(blank &a , blank2 b) {a = a <= b ? a : b ;}
template <class blank , class blank2> inline void smax(blank &a , blank2 b) {a = a >= b ? a : b ;}
typedef pair<int , int > pii;
typedef long double ld;
typedef unsigned long long ull;
typedef long long ll;
typedef vector<int> vi;
typedef vector<pii> vii;
const int maxn  = 1e6 + 10;
const int maxm = 4e6 + 10;
const int maxlg = 20;
const int base = 29;
const int mod = 1e9 + 7;
const int inf = 2e18 + 10;
const double eps = 1e-9;
int l[maxn],r[maxn];
int pref[2][maxn],suf[2][maxn];
int res;
int32_t main()
{
    int n = in();
    for (int i = 0 ; i < n ; i ++) l[i] = in() , r[i] = in();
    for (int i = 0 ; i < n ; i ++) pref[0][i] = l[i] + (i ? pref[0][i-1] : 0) , pref[1][i] = r[i] + (i ? pref[1][i-1] : 0);
    for (int i = n - 1 ; i >= 0 ; i --) suf[0][i] = l[i] + suf[0][i + 1] , suf[1][i] = r[i] + suf[1][i + 1];
    res = abs(pref[0][n-1]-pref[1][n-1]);
    int id = -1;
    for (int i = 0 ; i < n ; i ++)
    {
        int L = (i ? pref[0][i-1] : 0) + suf[0][i + 1] + r[i];
        int R = (i ? pref[1][i-1] : 0) + suf[1][i + 1] + l[i];
        if (abs(L-R) > res)
            res = abs(L-R),id = i;
    }
    cout << id + 1 << "\n";
}
