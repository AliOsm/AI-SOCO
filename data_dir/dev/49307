#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN=1000*100+9;

struct runner
{
    int pos, halffinal;
    int val;
};

bool cmp_val(const runner& A, const runner& B)
{
    return A.val<B.val;
}

bool result[2][MAXN];
runner A[2*MAXN];
int n;

int main()
{
    ios_base::sync_with_stdio(false);
    cin >> n;
    for(int i=0; i<2; i++)
    {
        memset(result[i], false, n*sizeof(bool));
        memset(result[i], true, (n/2)*sizeof(bool));
    }

    int it=0;
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<2; j++)
        {
            A[it].halffinal=j;
            A[it].pos=i;
            cin >> A[it].val;
            it++;
        }
    }

    sort(A, A+(2*n), cmp_val);
    for(int i=0; i<n; i++) result[A[i].halffinal][A[i].pos]=true;

    for(int i=0; i<2; i++)
    {
        for(int j=0; j<n; j++) cout << result[i][j];
        cout << '\n';
    }

    return 0;
}
