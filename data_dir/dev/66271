#include<bits/stdc++.h>
using namespace std;

#define endl '\n'
#define D(x) cout << #x << " = " << (x) << endl;

const int MX = 5 * 1e5 + 100;
int p[MX];
int sz[MX];

void init_set() {
  for (int i = 0; i < MX; ++i) p[i] = i, sz[i] = 1;
}

int find_set (int x) {
  return p[x] == x ? p[x] : p[x] = find_set(p[x]);
}

void join (int x, int y) {
  int a = find_set(x), b = find_set(y);
  if (a != b) {
    p[a] = b;
    sz[b] += sz[a];
  }
}

int find_size (int x) {
  return sz[find_set(x)];
}

int main() {
  ios_base::sync_with_stdio(0); cin.tie(0);
  int n, m, k, x;
  while (cin >> n >> m) {
    init_set();
    for (int i = 0; i < m; ++i) {
      cin >> k;
      int prev = -1;
      for (int j = 0; j < k; ++j) {
        cin >> x;

        if (prev != -1) {
          join(prev, x);
        }

        prev = x;
      }
    }

    for (int i = 1; i <= n; ++i) cout << find_size(i) << " "; cout << endl;
  }

  return 0;
}