#include<iostream>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }

    return (result)%mod;

}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
        return false;
    return true;
}
int main()
{
ll n;
cin>>n;
ll i;
vector<ll> v(n);
for(i=0;i<n;i++)
    cin>>v[i];
map<ll,pair<ll,pll> >mp;
for(i=0;i<n;i++)
{
    if(! mp[v[i]].first)
        mp[v[i]]={1,{i,i}};
    else
    {
        mp[v[i]].F+=1;
        mp[v[i]].S.S=i;
    }
}
ll ans=0;
pll ansp=make_pair(-1,-1);
map<ll,pair<ll,pll> >::iterator it;
for(it=mp.begin();it!=mp.end();it++)
{
    if(it->S.F > ans)
    {
        ans=it->S.F;
        ansp=it->S.S;
    }
    else if(it->S.F == ans)
    {
        ll x1=it->S.S.F;
        ll y1=it->S.S.S;
        ll x2=ansp.F;
        ll y2=ansp.S;
        if(abs(x1-y1) <abs(x2-y2))
        {
            ansp=it->S.S;
        }
        
    }
}
cout<<ansp.F + 1<<" "<<ansp.S+1;






}
