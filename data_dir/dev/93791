#include <bits/stdc++.h>
using namespace std;

int p[200001], vis[200001], n, rt, v;
set<int> vs;

void dfs(int i)
{
    if (vs.find(i) != vs.end()) {
        // cycle found
        if (!rt)
            rt = i;
        p[i] = rt, v++;
    } else if (!vis[i] && p[i] != i)
        vis[i] = true, vs.insert(i), dfs(p[i]);
}

int main()
{
    scanf("%d", &n);
    for (int i = 1; i <= n; i++) {
        scanf("%d", &p[i]);
        // eliminate multiple roots
        if (p[i] == i)
            if (!rt)
                rt = i;
            else
                p[i] = rt, v++;
    }
    // find cycles
    for (int i = 1; i <= n; i++)
        if (!vis[i])
            vs.clear(), dfs(i);
    printf("%d\n", v);
    for (int i = 1; i <= n; i++)
        printf("%d%c", p[i], i == n ? '\n' : ' ');
}