#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define x first
#define y second
#define in(n) int (n) = nxt()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef int itn;
typedef pair<int, int> PII;

int nxt() {
    int res;
    scanf("%d", &res);
    return res;
}

struct State {
    int moves;
    pair<ll, ll> st;
    State() {}
    State(int m, pair<ll, ll> s) : moves(m), st(s) {}
};

const int N = 1000010;
char s[N];

inline void solve() {
    scanf("%s", s);
    int n = strlen(s);
    int a = nxt();
    int b = nxt();
    int pwb[n];
    pwb[n - 1] = 1 % b;
    for (int i = n - 2; i >= 0; --i) {
        pwb[i] = pwb[i + 1] * 10 % b;
    }
    int pwa[n];
    pwa[0] = 1 % a;
    for (int i = 1; i < n; ++i) {
        pwa[i] = pwa[i - 1] * 10 % a;
    }

    int vala[n];
    vala[0] = (s[0] - '0') * pwa[0] % a;
    for (int i = 1; i < n; ++i) {
        vala[i] = (vala[i - 1] * 10 + (s[i] - '0')) % a;
    }
    int valb[n];
    valb[n - 1] = (s[n - 1] - '0') * pwb[n - 1] % b;
    for (int i = n - 2; i >= 0; --i) {
        valb[i] = (valb[i + 1] + (s[i] - '0') * pwb[i]) % b;
    }
    for (int i = 0; i + 1 < n; ++i) {
        if (vala[i] == 0 && valb[i + 1] == 0 && s[i + 1] != '0') {
            printf("YES\n");
            char c = s[i + 1];
            s[i + 1] = 0;
            puts(s);
            s[i + 1] = c;
            puts(s + i + 1);
            return;
        }
    }
    puts("NO");
}

int main()
{
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
#endif // LOCAL

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    solve();
    return 0;
}
