#include <bits/stdc++.h>
using namespace std;

#define fr(i,n)    for(int i=0;i<n;i++)
#define fru(i,a,b) for(int i=a;i<=b;i++)
#define frd(i,a,b) for(int i=a;i>=b;i--)

typedef long long   ll;
typedef long double ld;
	
const int INF = 2e9 + 10;
const int N   = 200010;

int n, diametr;
vector<vector<int>> vec;
int color[N], dp[N];

void dfs(int v, int pre = -1) {
   fr(i, vec[v].size())
   {
      int u = vec[v][i];
      if(u == pre)
         continue;
      
      dfs(u, v);
      diametr = max(diametr, dp[v] + dp[u] + (color[v] != color[u]));
      dp[v]   = max(dp[v],   dp[u] +         (color[v] != color[u]));
   }
}

int main() {
   ios_base::sync_with_stdio(0);
   cout.tie(0); cin.tie(0);
   
   cin >> n;
   vec.resize(n + 1);
   
   fru(i, 1, n) cin >> color[i];
   fru(i, 1, n - 1)
   {
      int v, u;
      cin >> v >> u;
      vec[u].push_back(v);
      vec[v].push_back(u);
   }
   
   dfs(1);
   cout << (diametr + 1) / 2;
   
   return 0;
}