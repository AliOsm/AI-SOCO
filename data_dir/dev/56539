//Pham Huu Canh
//D. Bag of mice
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define MP make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "d.inp"
#define foo "d.out"
#define MOD 1000000007

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;
#define nmax 1005

bool vis[2][nmax][nmax];
double dp[2][nmax][nmax];

double dfs(int w, int b, int type){
    if (w <= 0) return type ? 0 : 1;
    if (b <= 0) return type ? 1 : 0;
    if (vis[type][w][b])    return dp[type][w][b];
    vis[type][w][b] = true;
    double &res = dp[type][w][b];
    
    if (type){
        res = (double)w/(w+b);
        res += (double)b/(w+b) * dfs(w, b-1, 0);
    }
    else{
        res = (double)b/(w + b) * ((double)w/(w+b-1) * dfs(w-1, b-1, 1) + (double)(b-1)/(w+b-1) * dfs(w, b-2, 1));
    }
    return res;
}

void input()
{
    int w, b;
    scanf("%d %d", &w, &b);
    printf("%.9lf", dfs(w, b, 1));
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}

