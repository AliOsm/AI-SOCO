
#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1 << 28;
//constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

vector<int> g[200000];
int par[200000];
int d[200000];
void dfs(int cur, int pre) {
	par[cur] = pre;
	for (int next : g[cur]) {
		if (next == pre) continue;
		d[next] = d[cur] + 1;
		dfs(next, cur);
	}
}
int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	int n; scanf("%d", &n);
	for (int i = 0; i < n - 1; i++) {
		int u, v; scanf("%d %d", &u, &v);
		u--; v--;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	dfs(0, -1);
	set<pair<int, int>> s;
	for (int i = 0; i < n; i++) if (d[i] > 2) s.emplace(d[i], i);
	int res = 0;
	while (!s.empty()) {
		int cur = s.rbegin()->second;
		res++;
		auto itr = s.find(make_pair(d[par[cur]], par[cur]));
		if(itr != s.end()) s.erase(itr);
		for (int next : g[par[cur]]) {
			if (s.find(make_pair(d[next], next)) != s.end()) s.erase(s.find(make_pair(d[next], next)));
		}
	}
	printf("%d\n", res);
	return 0;
	/*
		おまじないを使ったらscanfとprintf関連注意！！！！！！！！！！！！
	*/
}