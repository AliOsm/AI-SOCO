#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>
#include <vector>
#include <cmath>
#include <map>
#include <memory.h>
#include <queue>
#include <set>
using namespace std;
const int mod = 1000000007;
const int N = 100005;
typedef long long ll;
int n, m;
int a[100][100];
int used[100][100];
void dfs(int i, int j){
    if(used[i][j]) return;
    used[i][j] = 1;
    if(a[i][j - 1]) dfs(i, j - 1);
    if(a[i][j + 1]) dfs(i, j + 1);
    if(a[i - 1][j]) dfs(i - 1, j);
    if(a[i + 1][j]) dfs(i + 1, j);
}
int main(){
    string s;
    int fl = 0;
    cin >> n >> m;
    for(int i = 1; i <= n; ++i){
        cin >> s;
        for(int j = 1; j <= m; ++j){
            if(s[j - 1] == '#'){
                a[i][j] = 1;
                fl++;
            }
        }
    }
    if(fl <= 2){
        cout << -1 << endl;
        return 0;
    }
    for(int i = 1; i <= n; ++i){
        for(int j = 1; j <= m; ++j){
            if(a[i][j]){
                memset(used, 0, sizeof(used));
                a[i][j] = 0;
                if(a[i - 1][j]) dfs(i - 1, j);
                else if(a[i + 1][j]) dfs(i + 1, j);
                else if(a[i][j - 1]) dfs(i, j - 1);
                else dfs(i, j + 1);
                for(int i = 1; i <= n; ++i){
                    for(int j = 1; j <= m; ++j){
                        if(a[i][j] > used[i][j]){
                            cout << 1 << endl;
                            return 0;
                        }
                    }
                }
                a[i][j] = 1;
            }
        }
    }
    cout << 2 << endl;
}
