#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
// #define int long long int
#define fi first
#define se second
#define pb push_back
#define all(x) x.begin(), x.end
#define fr(i, a, b) for(int i = a; i <= b; i++)
const int mod = 1e9 + 7;

const int N = 320;
int dp[2][N][N]; // dp[i][j][k] denotes that numbers till i are processed, j intervals are open and k intervals are closed
signed main(){
    // freopen("inp.txt", "r", stdin);
    int n, m, x;
    cin >> n >> m >> x;
    if(n > m) {
        cout << 0;
        return 0;
    }
    dp[0][0][0] = 1;
    int ii = 0;
    fr(i, 0, m - 1){
        fr(j, 0, n){
            fr(k, 0, n - j){
                // open and close
                int v = dp[ii][j][k];
                dp[(ii ^ 1)][j][k + 1] += v;
                dp[(ii ^ 1)][j][k + 1] %= mod;
                // open but not close
                dp[(ii ^ 1)][j + 1][k] += v;
                dp[(ii ^ 1)][j + 1][k] %= mod;
                // close but not open
                if(j > 0 && (i + 1) != x){
                    dp[(ii ^ 1)][j - 1][k + 1] += v;
                    dp[(ii ^ 1)][j - 1][k + 1] %= mod;
                }
                // neither open nor close
                if((i + 1) != x){
                    dp[(ii ^ 1)][j][k] += v;
                    dp[(ii ^ 1)][j][k] %= mod;
                }
            }
        }
        fr(j, 0, n){
            fr(k, 0, n - j)
                dp[ii][j][k] = 0;
        }
        ii ^= 1;
    }
    int ans = dp[ii][0][n];
    for(int i = 1; i <= n; i++)
        ans = (ans * (ll)i) % mod;
    cout << ans;
    return 0;
}