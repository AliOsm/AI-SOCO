#include<bits/stdc++.h>
#define int long long
#define F first.first
#define S first.second
#define T second
using namespace std;
const int M=1e5+5;
set<pair<pair<int,int>,int> > s1,s2;
int id[M];
int32_t main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n,x,d,ans=0,ia;cin>>n>>d;
    for(int i=0;i<n;i++)
    {
    	cin>>x;
    	int l=0,ind=-1;
    	pair<pair<int,int>,int> aa={{x+d,0},0};
    	if(s1.size()!=0 && (*s1.rbegin()).F>=x+d)
    	{
    		auto it=s1.lower_bound(aa);
    		ind=(*it).T;
    		l=(*it).S;
    	}
    	if(s2.size()!=0 && (*s2.begin()).F<=x-d)
    	{
    	    aa.F=x-d;
    	    auto it=s2.lower_bound(aa);
    	    if((*s2.rbegin()).F<x-d)
    	    {
    	        it=(--s2.end());
    	    }
    		if((*it).F>x-d)
    		{
    		    it--;
    		}
    		if((*it).S>l)
    		{
    			ind=(*it).T;
    			l=(*it).S;
    		}
    	}
    	aa={{x,l+1},i};
    	s1.insert(aa);
    	s2.insert(aa);
    	id[i]=ind;
    	while(*s1.begin()!=aa)
    	{
    		auto it=s1.lower_bound(aa);
    		it--;
    		if((*it).S<=aa.S)
    		{
    			s1.erase(it);
    		}
    		else
    			break;
    	}
    	if(*s1.rbegin()!=aa)
    	{
    		auto it=s1.lower_bound(aa);
    		it++;
    		if((*it).S>=aa.S)
    		{
    			s1.erase(aa);
    		}
    	}
    	while(*s2.rbegin()!=aa)
    	{
    		auto it=s2.lower_bound(aa);
    		it++;
    		if((*it).S<=aa.S)
    		{
    			s2.erase(it);
    		}
    		else
    			break;
    	}
    	if(*s2.begin()!=aa)
    	{
    		auto it=s2.lower_bound(aa);
    		it--;
    		if((*it).S>=aa.S)
    		{
    			s2.erase(aa);
    		}
    	}
    	if(l+1>ans)
    	{
    	    ia=i;
    	    ans=l+1;
    	}
    }
    vector<int> v;
    v.push_back(ia);
    while(id[ia]!=-1)
    {
        v.push_back(id[ia]);
        ia=id[ia];
    }
    cout<<ans<<"\n";
    sort(v.begin(),v.end());
    for(int i=0;i<v.size();i++)
    cout<<v[i]+1<<" ";
}