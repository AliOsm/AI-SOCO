#include <bits/stdc++.h>

using namespace std;

const int N = 500;
    
int n, g[N][N], m, d[N], dp[N];

queue < int > q;

int main()
{
  scanf("%d%d", &n, &m);
  for (int i = 0, u, v;i < m;i++)
  {
    scanf("%d%d", &u, &v);
    g[u][v] = g[v][u] = 1;
  }
  memset(d, -1, sizeof d);
  memset(dp, -1, sizeof dp);
  q.push(1);
  dp[1] = d[1] = 0;
  while(q.size())
  {
    int v = q.front(); q.pop();
    for (int i = 1;i <= n;i++)
        if (d[i] == -1 && g[v][i])
        {
            d[i] = d[v] + 1;
            q.push(i);
        }
  }
  q.push(1);
  while(q.size())
  {
    int v = q.front(); q.pop();
    for (int i = 1;i <= n;i++)
        if (dp[i] == -1 && !g[v][i])
        {
            dp[i] = dp[v] + 1;
            q.push(i);
        }
  }
  if (d[n] == -1 || dp[n] == -1) puts("-1");
  else cout << max(d[n], dp[n]);     
    return 0;
}