#include<bits/stdc++.h>
using namespace std;


const int N = 3e5 + 5;


int n, a, b, x, y, c[N];
long long s1, s2, s3;
vector < int > g[N];

void dfs(int v, int blocked, bool p, int pr = -1){
    if(p){
        c[v]++;
    }
    else if(c[v] != 2){
        if(blocked == b){
            s1++;
        }
        else{
            s3++;
        }
    }
    for(int to : g[v]){
        if(to != pr && to != blocked){
            dfs(to, blocked, p, v);
        }
    }
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> a >> b;
    for(int i = 1; i < n; i++){
        cin >> x >> y;
        g[x].push_back(y);
        g[y].push_back(x);
    }
    dfs(a, b, 1);
    dfs(b, a, 1);
    for(int i = 1; i <= n; i++){
        if(c[i] == 2){
            s2++;
        }
    }
    dfs(a, b, 0);
    dfs(b, a, 0);
    cout << 1ll * n * (n - 1) - s1 * s3;
}
/**
10 2 10
1 2
2 4
2 3
2 6
6 5
6 7
6 8
6 10
10 9
*/
