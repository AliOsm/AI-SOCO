/*
▄███████▀▀▀▀▀▀███████▄
░▐████▀▒ЗАПУСКАЕМ▒▀██████▄
░███▀▒▒▒▒▒ДЯДЮ▒▒▒▒▒▒▀█████
░▐██▒▒▒▒▒▒БОГДАНА▒▒▒▒▒████▌
░▐█▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌
░░█▒▄▀▀▀▀▀▄▒▒▄▀▀▀▀▀▄▒▐███▌
░░░▐░░░▄▄░░▌▐░░░▄▄░░▌▐███▌
░▄▀▌░░░▀▀░░▌▐░░░▀▀░░▌▒▀▒█▌
░▌▒▀▄░░░░▄▀▒▒▀▄░░░▄▀▒▒▄▀▒▌
░▀▄▐▒▀▀▀▀▒▒▒▒▒▒▀▀▀▒▒▒▒▒▒█
░░░▀▌▒▄██▄▄▄▄████▄▒▒▒▒█▀
░░░░▄██████████████▒▒▐▌
░░░▀███▀▀████▀█████▀▒▌
░░░░░▌▒▒▒▄▒▒▒▄▒▒▒▒▒▒▐
░░░░░▌▒▒▒▒▀▀▀▒▒▒▒▒▒▒▐
TAYA 
*/
#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#pragma GCC optimize("fast-math")
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
#include <random>
 
using namespace std;


#define ll long long
#define ld double
#define null NULL
#define prev prev228
#define index index228
#define left left228
#define right right228
#define hash hash228
#define firn(i, n) for (int i = 0; i < (int)n; ++i)
#define forn(i, n) for (int i = 1; i <= (int)n; ++i)
#define int long long



template<typename T> inline void uin(T &a, T b) {
	if (b < a) a = b;
}

template<typename T> inline void uax(T &a, T b) {
	if (b > a) a = b;
}

int CNT1, CNT2, x, y;


bool check(int d) {
	int cnt1 = CNT1, cnt2 = CNT2;
	cnt1 -= (d / y);
	cnt1 += d / (x * y);
	cnt2 -= (d / x);
	cnt2 += d / (x * y);
	uax(cnt1, 0LL);
	uax(cnt2, 0LL);
	int rest = d - d / x - d / y + d / (x * y);
	return cnt1 + cnt2 <= rest;
}


signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> CNT1 >> CNT2 >> x >> y;
	int l = 0, r = CNT1 + CNT2 + 3000LL * 1000LL * 1000LL;
	while (r - l > 1) {
		int m = (l + r) >> 1;
		if (check(m)) r = m;
		else l = m;
	}
	cout << r << "\n";
    return 0;
}






