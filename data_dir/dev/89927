#include<bits/stdc++.h>

#define F first
#define S second
#define ll long long
#define ull unsigned long long
#define pb push_back

using namespace std;
const int N = 101000;
int t[60][4 * N];
int T;
int n, a[N];
void build(int a[], int v, int tl, int tr){
    if (tl == tr){
        for (int i = 0; i < 60; i++)
            if (i % a[tr]) t[i][v] = 1; else t[i][v] = 2;
    } else{
        int mid = (tl + tr) >> 1;
        build(a, v + v, tl, mid);
        build(a, v + v + 1, mid + 1, tr);
        for (int i = 0; i < 60; i++){
            int x = i;
            t[i][v] = t[i][v + v];
            x = (i + t[i][v + v]) % 60;
            t[i][v] += t[x][v + v + 1];
        }
    }
}
void update(int v, int tl, int tr, int pos, int val){
    if (tl == tr){
        for (int i = 0; i < 60; i++)
            if (i % val) t[i][v] = 1; else t[i][v] = 2;
    } else{
        int mid = (tl + tr) >> 1;
        if (mid >= pos)
        update(v + v, tl, mid, pos, val); else
        update(v + v + 1, mid + 1, tr, pos, val);
        for (int i = 0; i < 60; i++){
            int x = i;
            t[i][v] = t[i][v + v];
            x = (i + t[i][v + v]) % 60;
            t[i][v] += t[x][v + v + 1];
        }
    }
}
int query(int v, int tl, int tr, int l, int r, int tt){
    if (l > r) return 0;
    if (l == tl && r == tr) return t[tt][v];
    int mid = (tr + tl) >> 1;
    int x = query(v + v, tl, mid, l, min(r, mid), tt);
    tt += x;
    int y = query(v + v + 1, mid + 1, tr, max(l, mid + 1), r, tt % 60);
    return x + y;
}
main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
   //freopen("output.txt", "w", stdout);
    cin >> n;
    for (int i = 0; i < n; i++) cin >> a[i];
    build(a, 1, 0, n - 1);
    int q;
    cin >> q;
    while(q--){
        char c;
        int x, y;
        cin >> c >> x >> y;
        --x;
        --y;
        if (c == 'C') update(1, 0, n - 1, x, y + 1); else{
            cout << query(1, 0, n - 1, x, y - 1, 0) << endl;
        }
    }
}
