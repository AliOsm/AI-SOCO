#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define ZERO (1e-10)
#define INF int(1e9+1)
#define CL(A,I) (memset(A,I,sizeof(A)))
#define DEB printf("DEB!\n");
#define D(X) cout<<"  "<<#X": "<<X<<endl;
#define EQ(A,B) (A+ZERO>B&&A-ZERO<B)
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
#define IN(n) int n;scanf("%d",&n);
#define FOR(i, m, n) for (int i(m); i < n; i++)
#define F(n) FOR(i,0,n)
#define FF(n) FOR(j,0,n)
#define FT(m, n) FOR(k, m, n)
#define aa first
#define bb second
void ga(int N,int *A){F(N)scanf("%d",A+i);}
#define MX 1000006
#define MOD (1000000007)
int f[MX]={1,1},I[MX]={1,1},J[MX]={1,1};
void pre(){FT(2,MX)f[k]=f[k-1]*ll(k)%MOD,J[k]=-MOD/ll(k)*J[MOD%k]%MOD+MOD,I[k]=ll(I[k-1])*J[k]%MOD;}
inline ll C(const int N,const int K){return N<K?1:(f[N]*ll(I[K])%MOD)*I[N-K]%MOD;}
inline ll CD(const int N,const int K){return N<K?1:(I[N]*ll(f[K])%MOD)*f[N-K]%MOD;}
char s[MX],r[MX];
int F[26],N,S;
int go(char*r){
    int S=0,R=f[N];
    CL(F,0);
    F(N)++F[s[i]-97];
    F(26)R=R*ll(I[F[i]])%MOD;
    FT(0,N){
        R=ll(R)*I[N-k]%MOD*f[N-k-1]%MOD;
        F(r[k]-97)if(F[i])S=(S+ll(R)*f[F[i]]%MOD*I[F[i]-1])%MOD;
        if(!~--F[r[k]-97])break;
        R=ll(R)*f[F[r[k]-97]+1]%MOD*I[F[r[k]-97]]%MOD;
    }
    return S;
}
int main(void){
    scanf("%s%s",s,r),N=strlen(s),pre();
    printf("%d\n",(go(r)-go(s)-1+MOD)%MOD);
    return 0;
}//Shall be O(N*|U|) now :/ Nothing changesd so TLE expected
