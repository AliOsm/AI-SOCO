#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5) + 10, mod = int(1e9)  + 7; 

int n,k,d,a[N], dp[N], us[N];
vector <pii > g[N];
int p[N];  
queue <int> q;
int ans;

int main () {
	scanf("%d%d%d",&n,&k,&d);
	for(int i = 1,x; i <= k; i++){
		scanf("%d",&x);
		a[x] = 1;
	}
	for(int i = 1,u,v; i < n; i++){
		scanf("%d%d",&u,&v);
		g[u].pb(mp(v,i));
		g[v].pb(mp(u,i));
	}
	for(int i = 1; i <= n; i++){
		dp[i] = -1;
		if(a[i]){
			dp[i] = 0;
			p[i] = i;
			q.push(i);
		}
	}
	while(!q.empty()){
		int v = q.front();
		q.pop();
		for(int i = 0; i < g[v].size(); i++){
			int to = g[v][i].f;
			if(dp[to] == -1){
			    dp[to] = dp[v] + 1;
			    p[to] = p[v];
			    q.push(to);
			}
			else{
				if(p[to] != p[v]){
					us[g[v][i].s] = 1;
				}
			}
		}
	}
	for(int i = 1; i < n; i++){
		if(us[i]) ans++;
	}
	printf("%d\n", ans);
	for(int i = 1; i < n; i++){
		if(us[i]) printf("%d ",i);
	}
	 

return 0;
}