#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
vector<int> a[200010], c[200010], v[200010];
int b[200010], d[200010], dis[200010];
int main(){
    int n, m, k;
    while(cin>>n>>m){
        ll ans=0;
        int x, y;
        for(int i=0; i<m; ++i){
            scanf("%d%d",&x,&y);
            c[x].push_back(y);
            a[y].push_back(x);
        }
        cin>>k;
        for(int i=0; i<k; ++i){
        	scanf("%d",b+i);
        }
        memset(dis, -1, sizeof dis);
        queue<pair<int, int>> q;
        q.push(mk(0, b[k-1]));
        pair<int, int> tmp;
        while(!q.empty()){
        	tmp=q.front();
        	q.pop();
        	int x=tmp.sc;
        	int cost=tmp.fs;
        	if(dis[x]!=-1)
        		continue;
        	dis[x]=cost;
        	v[cost].push_back(x);
        	for(int i=0; i<a[x].size(); ++i){
        		q.push(mk(cost+1, a[x][i]));
        	}
        }
        // for(int i=1; v[i].size()>0; ++i){
        // 	for(int j=0; j<v[i].size(); ++j){
        // 		x=v[i][j];
        // 		for(int l=0; l<c[x].size(); ++l){
        // 			if(d[c[x][l]]>1){
        // 				d[x]=2;
        // 				break;
        // 			}
        // 			if(dis[x]==dis[c[x][l]]+1){
        // 				++d[x];
        // 			}
        // 		}
        // 	}
        // }
        for(int i=1; i<=n; ++i){
        	assert(dis[i]!=-1);
        	for(int j=0; j<c[i].size(); ++j){
        		if(dis[c[i][j]]+1==dis[i]){
        			++d[i];
        		}
        	}
        }
        int mn=0, mx=0;
        for(int i=0; i<k-2; ++i){
        	int x=b[i];
        	// cout<<b[i+1]<<" "<<dis[b[i+1]]<<endl;
        	if(dis[b[i+1]]+1!=dis[x]){
        		++mn;
        		++mx;
        	}
        	else if(d[x]>1){
        		++mx;
        	}
        }
        printf("%d %d\n",mn, mx);
    }
  return 0;
}


