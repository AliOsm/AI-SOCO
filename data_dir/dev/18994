#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <unordered_map>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back

typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int N = 300010;
const ll mx = 100;
const ll INF = 4e18;

struct T {
    int a, t, i;
    T(){}
    T(int a, int t, int i) : a(a), t(t), i(i){}
    bool operator < (const T &other) const {
        return mp(t, a) < mp(other.t, other.a);
    }
};

T a[N];
int Tm;
int n, x, k;

bool check(int x) {
    int tsum = 0, cnt = 0;
    for (int i = 1; i <= n && cnt < x; i++) {
        if (a[i].a >= x) {
            tsum += a[i].t;
            cnt++;
        }
    }
    return (cnt >= x && tsum <= Tm);
}

vector <int> ans;

void restore(int x) {
    for (int i = 1; i <= n && ans.size() < x; i++) {
        if (a[i].a >= x) ans.pb(a[i].i);
    }
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
    scanf("%d%d", &n, &Tm);
    for (int i = 1; i <= n; i++) {
        scanf("%d%d", &a[i].a, &a[i].t);
        a[i].i = i;
    }
    sort(a + 1, a + n + 1);
    int L = 0, R = n;
    while (L + 1 < R) {
        int M = (L + R) / 2;
        if (check(M)) L = M;
        else R = M - 1;
    }
    if (check(R)) x = R;
    else x = L;
    restore(x);
    printf("%d\n", x);
    printf("%d\n", ans.size());
    for (int i = 0; i < ans.size(); i++) printf("%d ", ans[i]);
	return 0;
}