#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>

using namespace std;

#define int long long

void solve(int st, int en, int m, int x, int b, int &to_1, int &to_2) {
    vector<int> used(m, -1);
    for (int i = 0;    ; i++) {
        if (used[st] != -1) {
            if (used[st] <= used[en] && used[en] <= i) {
                to_1 = i - used[st];
                to_2 = used[en];
            } else {
                to_1 = -1;
                to_2 = -1;
            }
            return;
        }
        used[st] = i;
        st = (st * x + b) % m;
    }
}

void ex_gcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = a;
        y = 0;
    } else {
        //x1 * b + y1 * (a % b) == 1
        //x1 * b + y1 * (a - k * b) == 1
        //x1 * b - y1 * k * b + y1 * a == 1
        //y1 * a + b * (x1 - k * y1) == 1
        int x1, y1;
        ex_gcd(b, a % b, x1, y1);
        int k = a / b;
        x = y1;
        y = x1 - k * y1;
    }
}

void solve(int a, int f, int s, int b) {
    int rra = a;
    //a * x - f * y = s - b
    int dl = s - b;
    int g = gcd(abs(a), abs(f));
    if (dl % g != 0) {
        cout << -1 << endl;
        exit(0);
    }
    a /= g;
    f /= g;
    dl /= g;
    int x, y;
    ex_gcd(a, -f, x, y);
    x *= dl;
    y *= dl;
    while (x < 0 || y < 0) {
        x += f;
        y += a;
    }
    while (x - f >= 0 && y - a >= 0) {
        x -= f;
        y -= a;
    }
    cout << rra * x + b << endl;
} 

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

    //a * x + b = f * y + s
    //a * x - f * y = s - b
    int m;
    cin >> m;
    int a, b;
    int f, s;
    int h1, a1, x1, y1;
    int h2, a2, x2, y2;
    {
       
        cin >> h1 >> a1 >> x1 >> y1;
        solve(h1, a1, m, x1, y1, a, b);
    }
    {
        cin >> h2 >> a2 >> x2 >> y2;
        solve(h2, a2, m, x2, y2, f, s);
    }
    for (int i = 0; i < 2 * m; i++) {
        if (h1 == a1 && h2 == a2) {
            cout << i << endl;
            exit(0);
        }
        h1 = (h1 * x1 + y1) % m; 
        h2 = (h2 * x2 + y2) % m; 
    }
    if (a == -1 || f == -1) {
        cout << -1 << endl;
        exit(0);
    }
    if (s < b) {
        swap(a, f);
        swap(b, s);
    }
    // cerr << a << ' ' << b << ' ' << f << ' ' << s << endl; 
    solve(a, f, s, b);
}