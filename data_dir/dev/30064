#include<bits/stdc++.h>
#define P(x,y) make_pair(x,y)
using namespace std;
const long long MX=(1<<20);
vector < long long > v[MX];
long long cnt[MX] , n , m , P;
void dfs(long long x , long long p , long long d){
    cnt[d]++;
    for(auto nxt : v[x]){
        if(nxt == p) continue;
        dfs(nxt , x , d+1);
    }
}
int main(){
    scanf("%lld %lld %lld",&n,&m,&P);
    for(long long j=1;j<n;j++){
        long long a , b;
        scanf("%lld %lld",&a,&b);
        v[a].push_back(b);
        v[b].push_back(a);
    }
    dfs(1 , -1 , 0);
    reverse(cnt+1 , cnt+1+n);
    long long it1 = 1 , it2 = 0 , sum = 0 , budg = P , cur = 0;
    long long ans = 0;
    //for(long long j=1;j<=n;j++) cout<<cnt[j]<<' '; cout<<endl;
    while(it1 <= n){
      //      cout<<it1<<' '<<it2<<' '<<cur<<endl;
        if(it2 + 1 <= n && cnt[it2+1] * (it2 + 1 - it1) <= budg){
            budg -= cnt[it2+1] * (it2 + 1 - it1);
            sum += cnt[it2+1];
            cur += cnt[++it2];
            continue;
        }
        long long rem = budg/(it2+1-it1);
        if(it2 + 1 == n + 1) rem = 0;
        ans = max(ans , rem + cur);
        sum -= cnt[it1];
        cur -= cnt[it1++];
        budg += sum;
    }
    cout<<min(ans , m)<<endl;

}
