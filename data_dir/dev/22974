#include<bits/stdc++.h>
using namespace std;

#define MAX 200005
#define si(n) scanf("%d",&n)


bool pr[MAX];
vector<int>prime[MAX];
vector<int>gr[MAX],all[MAX];
int n,a[MAX];
int ans=0;
int vis11[MAX];
map<pair<int,int>,bool >vis;
map<pair<int,int>,int >dp;


void seive()
{
    memset(pr,true,sizeof(pr));
    pr[1]=pr[0]=false;
    for(int i=2;i<MAX;i++){
        if(!pr[i])
            continue;
        prime[i].push_back(i);
        for(int j=i*2;j<MAX;j+=i){
            prime[j].push_back(i);
            pr[j]=false;
        }
    }

}



int go(int now,int p,int g)
{
   if(vis[{now,g}])return dp[{now,g}];
   vis[{now,g}]=true;
   int ret=0;
   if(g==0){
       for(auto nowp : prime[a[now]]){
            int mx1,mx2;
            mx1=mx2=0;
            for(auto to : gr[now]){
                if(to==p)continue;
                int x=go(to,now,nowp);
                if(x>mx1){
                    mx2=mx1;
                    mx1=x;
                }
                else mx2=max(mx2,x);
            }
            ans=max(ans,mx1+mx2+1);
       }
   }
   else{
        int newg=__gcd(g,a[now]);
        if(newg==1)ret=0;
        else{
            int mx=0;
            for(auto to : gr[now]){
                if(to==p)continue;
                mx=max(mx,go(to,now,newg));
            }
            ret=mx+1;
            ans=max(ans,mx+1);
        }
   }
   if(vis11[now]==false){
       for(auto to : gr[now]){
            if(to!=p)go(to,now,0);
       }
       vis11[now]=true;
   }
   dp[{now,g}]=ret;

   return ret;
}



int main()
{
    //freopen("input.txt","r",stdin);
    int i,j;
    seive();

    si(n);
    for(i=1;i<=n;i++)si(a[i]);

    //memset(dp,-1,sizeof(dp));

    for(i=1;i<n;i++){
        int u,v;
        si(u);si(v);
        gr[u].push_back(v);
        gr[v].push_back(u);
    }

    go(1,-1,0);
    cout<<ans<<endl;

}
