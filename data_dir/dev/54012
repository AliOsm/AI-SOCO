#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

#define T (1<<17)
int tree[2*T];

int max_query(int L, int R, int id = 1, int low = 0, int high = T){
    if(L <= low && R >= high) return tree[id];
    int mid = (low + high) / 2;
    int ans = 0;
    if(L < mid) ans = max(ans, max_query(L, R, 2*id, low, mid));
    if(R > mid) ans = max(ans, max_query(L, R, 2*id+1, mid, high));
    return ans;
}

void update_query(int pos, int val){
    int id = T + pos;
    while(1){
        tree[id] = max(tree[id], val);
        id /= 2;
        if(id == 0) return;
    }
}

int N;
ll x[100010],y[100010];
map <ll, int> mx,my;
vector <pair <int, int> > v;

int main(void){
    int x2,y2,i;
    ll a,b,c,d;
    
    cin >> N;
    string s,t;
    cin >> s >> t;
    REP(i,s.length()) if(s[i] == '/') s[i] = ' ';
    REP(i,t.length()) if(t[i] == '/') t[i] = ' ';
    istringstream ss(s), tt(t);
    ss >> a >> b;
    tt >> c >> d;
    
    REP(i,N){
        scanf("%d%d", &x2, &y2);
        x[i] = b * y2 - a * x2;
        y[i] = c * x2 - d * y2;
    }
    
    REP(i,N) mx[x[i]] = my[y[i]] = 0;
    i = 0; foreach(mx,itr) {(itr->second) = i; i++;}
    i = 0; foreach(my,itr) {(itr->second) = i; i++;}
    
    REP(i,N) if(x[i] > 0 && y[i] > 0) v.push_back(make_pair(mx[x[i]],-my[y[i]]));
    sort(v.begin(),v.end());
    N = v.size();
    
    REP(i,N){
        int x = v[i].first, y = -v[i].second;
        int tmp = max_query(0, y) + 1;
        update_query(y, tmp);
    }
    
    int ans = max_query(0, T);
    cout << ans << endl;
    
    return 0;
}
