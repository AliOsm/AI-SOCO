/*######################################################
#########~~~~~####~~~~###~~##~~##~~##~~##~~##~~#########
#########~~##~~##~~##~~##~~~#~~##~~~#~~##~~##~~#########
#~~~~~~##~~~~~###~~~~~~##~~#~~~##~~#~~~##~~##~~##~~~~~~#
#########~~######~~##~~##~~##~~##~~##~~##~~##~~#########
#########~~######~~##~~##~~##~~##~~##~~###~~~~##########
######################################################*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define str string
#define rtn return
#define endl '\n'
#define xx first
#define yy second
#define pb push_back
#define db double
#define Mod 1000000007
#define inf 2e18
#define pll pair <ll, ll>
#define vi vector<ll>
#define sz size()
#define fill(a,v) memset(a,v,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define loop(i,a,b) for(ll i=a;i<b;i++)
#define rep(i,b) for(ll i=0;i<b;i++)
#define pool(i,a,b) for(ll i=b-1;i>=a;i--)
#define per(i,a) for(ll i=(a-1);i>=0;i--)
#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " = " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " = " << arg1<<" |";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

map<ll, ll> mp;
int n;
ll x, a;

int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    //start
    cin >> n;
    rep (i, n) {
        cin >> a >> x;
        mp[a] = x;
    }
    cin >> n;
    rep (i, n) {
        cin >> a >> x;
        if (mp.count(a)) {
            mp[a] = max(mp[a], x);
        } else {
            mp[a] = x;
        }
    }
    ll ans = 0;
    for (auto i : mp) ans += i.second;
    cout << ans << endl;
    rtn 0;
}
