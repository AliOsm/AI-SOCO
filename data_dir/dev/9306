#include <cstdio>
#include <cstddef>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cctype>
#include <cassert>
#include <ciso646>
#include <climits>
#include <cmath>


#include <algorithm>
#include <utility>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <deque>
#include <bitset>

using namespace std;
typedef long long ll;
typedef std::pair< int, int > pii;
typedef std::vector< int > vi;
typedef std::vector< pii > vii ;
 
#define fi first
#define se second
#define all(x)  (x).begin(), (x).end()

double const EPS = 1.0E-9 ;
int const MOD    = (int)1e9 + 7 ;

inline void  read(int&x){  scanf("%d", & ( x ) ); }
inline void read(ll&x){ scanf("%lld",&x); }
inline void read(double &x){ scanf("%lf", &x); }
template< typename ...T> void read(T&...args){  
    using swallow = int[];
    swallow w = { 0, (read(args), 0) ... } ;
}

inline ll gcd(ll x,ll y) { return y == 0 ? x : gcd(y, x%y); }
inline ll lcm(ll x, ll y){ return x == 0 && y == 0  ? 0 : x/gcd(x,y) * y; }
inline ll powmod(ll x, ll n, ll m = MOD ) {
    ll r = 1;
    while(n){
        if (n&1) r = (r*x)%m;
        x = (x*x)%m;
        n/=2;
    }
    return r;
}
int leap(int y){  return y % 4 == 0 && y% 100 != 0  || y % 400 == 0 ; }

int const month[2][12] = { 
    { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },
    { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }
};
  

/********************************************************/
const int N = 1 << 20 ;
const int M = 1 << 21 ;


int n;
int L[ N ] , v[ N ]; 
 
int solve()
{
    read(n);
    for(int i = 1; i<= n; ++i)read(L[i]);
    for(int i = 1; i<=n; ++i)v[i] = 1;
    
    int ans = 0;
    for(int i = n, kill = n; i>= 1; --i)
    {
        int j = i - L[ i ] ;
        
        if ( kill >= i )
            kill = i - 1 ;
        
        while( kill >= j && kill > 0 )
        {
            v[ kill-- ] = 0 ;
            
        }
        
        ans += v[i];
    }
    
    printf("%d\n", ans ) ;
    
    return 0;
}











int main(int argc, char * argv[] ) 
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
#endif //end online-judge    
  
    
    solve();
    return 0;
}