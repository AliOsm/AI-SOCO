#include "bits/stdc++.h"
using namespace std;
#define pb push_back
// #define int long long
typedef long long ll;
#define fi first
#define se second
#define pii pair<int,int>
#define endl '\n'
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define sz(s) (int)s.size()
#define y1 fdfbvfds
typedef long double f80;
#define all(x) x.begin(), x.end()
 
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
ll rand(ll l,ll r){
    uniform_int_distribution<ll> uid(l, r);
    return uid(rng);
}

const int mod = 1e9 + 7;
const int mod1 = 998244353;
const int B = 37;
int pwr(int a,ll b) {
    int ans = 1;
    while(b) {
        if(b & 1) {
            ans = ((ll)ans * a) % mod;
        }
        a = ((ll)a * a) % mod;
        b >>= 1;
    }
    return ans;
}

const int N = 5005;
int dp[N], pre[N];

vector<int> z_function(string s) {
    int n = (int) s.length();
    vector<int> z(n, 0);
    for (int i = 1, l = 0, r = 0; i < n; ++i) {
        if (i <= r)
            z[i] = min (r - i + 1, z[i - l]);
        while (i + z[i] < n && s[z[i]] == s[i + z[i]])
            ++z[i];
        if (i + z[i] - 1 > r)
            l = i, r = i + z[i] - 1;
    }
    return z;
}

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    int n, a, b;
    cin >> n >> a >> b;
    string s;
    cin >> s;
    dp[0] = 0;
    s = '0' + s;
    fr(i, 1, n) {
        auto z = z_function(s.substr(i, n - i + 1));
        fr(j, i, n) {
            pre[j] = max(pre[j], min(j - i, z[j - i]));
        }
    }
    fr(i, 1, n) {
        dp[i] = 1e9;
    }
    fr(i, 0, n - 1) {
        dp[i + 1] = min(dp[i + 1], dp[i] + a);
        dp[i + pre[i + 1]] = min(dp[i + pre[i + 1]], dp[i] + b);
    }
    cout << dp[n];
    return 0;
}