    #include <bits/stdc++.h>
    using namespace std;
    #define MI            1000000000
    #define clr(i, j)     memset(i, j, sizeof(i))
    #define all(v)        ((v).begin(), (v).end())
    typedef long long     ll;
    typedef long double   ld;
    typedef vector<int>   vi;

    ll power(int X, int Y)
    {
        if(Y == 0)
            return 1;
        ll temp = power(X, Y/2);
        if(Y%2 == 0)
            return temp*temp;
        else
            return temp*temp*X;
    }
    ll GM(ll L)
    {
        return L%1000000007;
    }
    int to_int(string b)
    {
        int in = 0;
        ll p = power(10 , b.size()-1);
        for(int i = 0;i<b.size();i++)
        {
            in += (b[i]-'0')*p;
            p /= 10;
        }
        return in;
    }
    int main()
    {
        int n;
        cin >> n;
        vi start, e;
        int a[n];
        string s[n];
        char f[n];
        for(int i=0; i<n; i++)
        {
            cin >> s[i] >> a[i] >> f[i];
            if(f[i] == 'Y')
            {
                if(s[i] == "<")
                    e.push_back(a[i]);
                if(s[i] == "<=")
                    e.push_back(a[i]+1);
                if(s[i] == ">")
                    start.push_back(a[i]+1);
                if(s[i] == ">=")
                    start.push_back(a[i]);
            }
            else
            {
                if(s[i] == "<")
                    start.push_back(a[i]);
                if(s[i] == "<=")
                    start.push_back(a[i]+1);
                if(s[i] == ">")
                    e.push_back(a[i]+1);
                if(s[i] == ">=")
                    e.push_back(a[i]);
            }
        }
        sort(start.begin(), start.end());
        sort(e.begin(), e.end());
        if(e.size() == 0)
            cout << start[start.size()-1] << endl;
        else if(start.size() == 0)
            cout << e[0]-1 << endl;
        else
        {
            if(start[start.size()-1] >= e[0])
                cout << "Impossible" << endl;
            else
                cout << start[start.size()-1] << endl;
        }
    }
