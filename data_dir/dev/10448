#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define pi 3.141592653589793238
// #define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;

const int sz=4e6+5;
int seg[sz];
void upd(int ver,int tl,int tr,int pos,int val)
{
	if(tl>tr)
			return ;
	else if(tl==tr)
		seg[ver]+=val;
	else
	{
		int tm=(tl+tr)/2;
		if(tm>=pos)
				upd(2*ver,tl,tm,pos,val);
		else
			upd(2*ver+1,tm+1,tr,pos,val);
		seg[ver]=seg[2*ver]+seg[2*ver+1];
	}
}

int get(int ver,int tl,int tr,int k)
{
	if(tl>tr)
			return 0;
	else if(tl==tr)
	{
		if(seg[ver])
				return 1;
		else
				return 0;
	}
	else
	{
		int tm=(tl+tr)/2;
		if(seg[2*ver]<k)
		{
			return tm-tl+1+get(2*ver+1,tm+1,tr,k-seg[2*ver]);
		}
		else
		{
			return get(2*ver,tl,tm,k);
		}
	}
}

signed main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);  
  cout.tie(0);   

  #ifndef ONLINE_JUDGE
      if(fopen("INPUT.txt","r"))
      {
      freopen ("INPUT.txt" , "r" , stdin);
      freopen ("OUTPUT.txt" , "w" , stdout);
      }
  #endif  

      int n,q;
      cin>>n>>q;
      int lim=1e6;
      int x;
      for(int i=0;i<n;i++)
      {
      	cin>>x;
      	upd(1,1,lim,x,1);
      }

      while(q--)
      {
      	cin>>x;
      	if(x>0)
      	{
      		upd(1,1,lim,x,1);
      	}
      	else
      	{
      		x=abs(x);
      		int z=get(1,1,lim,x);
      		upd(1,1,lim,z,-1);
      	}
      }
      if(seg[1]>0)
      {
      	cout<<get(1,1,lim,1);
      }
      else
      {
      	cout<<0;
      }

}