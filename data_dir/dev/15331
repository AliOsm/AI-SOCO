#include<bits/stdc++.h>
#define F first
#define S second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int , int> pii;
typedef double DB;

const int N = 100010 , SQ = 320 , L = 18;

vector <int> adj[N];
queue <int> q;

int par[N][L+3] , h[N] , d[N] , a[N] , tp[N] , n;
bool mark[N];

void DFS(int v , int p){
	
	if(v)
		h[v] = d[v] = h[p] + 1;
	
	par[v][0] = p;
	for(int i = 1 ; i < L ; i++)
		par[v][i] = par[par[v][i-1]][i-1];

	for(int u : adj[v])
	   if(u != p)
		  DFS(u , v);
	
	return;
}

void BFS(){

	while(!q.empty()){
		
		int v = q.front();
		q.pop();
	
		for(int u : adj[v]){
		   if(!mark[u]){
				q.push(u);
				mark[u] = 1;
				d[u] = min(d[u] , d[v] + 1);
		   }
		}

	}

	fill(mark , mark+n , 0);

}

int findpar(int v , int t){

	for(int i = L ; i >= 0 ; i--)
	   if((t & (1 << i)))
		  v = par[v][i];

	return v;
}

int LCA(int u , int v){
		

	if(h[u] < h[v])
	   swap(u , v);


	u = findpar(u , h[u] - h[v]);

	if(u == v)
	   return u;


	for(int i = L ; i >= 0 ; i--)
	   if(par[v][i] != par[u][i])
		  v = par[v][i] , u = par[u][i];
	
	return par[v][0];
}

int main(){

	ios_base::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	
	int m , u , v;
	cin >> n >> m;

	for(int i = 1 ; i < n ; i++){
	   cin >> u >> v;
	   adj[--u].pb(--v);
	   adj[v].pb(u);
	}
	
	DFS(0 , 0);
	
	for(int i = 0 ; i < m ; i++){

	   cin >> tp[i] >> a[i];
	   a[i]--;
	   
	   int ans = d[a[i]];

	   if(tp[i] == 2){
		  for(int j = i - (i%SQ) ; j < i ; j++){
			 if(tp[j] == 1){
				 int z = LCA(a[i] , a[j]);
				 ans = min(ans , h[a[i]] + h[a[j]] - 2*h[z]);
			 }
		  }

		  cout << ans << endl;
	   }

	   if((i+1)%SQ == 0){
		  int t = i/SQ*SQ;
		  for(int j = t ; j <= i ; j++){
			 if(tp[j] == 1){
				q.push(a[j]);
				mark[a[j]] = 1;
				d[a[j]] = 0;
			 }
		  }

		  BFS();
	   }

	}	

	return 0;
}
