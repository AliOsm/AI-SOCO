#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
bool f[M];
ll cd[M],cp[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,k;
	cin>>n>>k;
	string s;
	cin>>s;
	// ll n=sz(s);
	if(n%2==0)
	{
		bool f=0;
		for(ll i=1;i<n;i++)
		{
			if(s[i]==s[i-1])
				f=1;
		}
		if(f==0)
		{
			if(k%2)
			{
				for(ll i=0;i<n;i++)
					if(s[i]=='W')
						s[i]='B';
					else
						s[i]='W';
			}
			cout<<s<<"\n";
			return 0;
		}
	}
	for(ll i=0;i<n;i++)
	{
		ll a=(i-1+n)%n;
		ll b=(i+1)%n;
		if(s[a]==s[i] || s[b]==s[i])
			f[i]=1;
	}
	ll lst,nxt;
	for(ll i=0;i<n;i++)
		if(f[i])
			lst=i;
	for(ll i=0;i<n;i++)
	{
		if(f[i])
			lst=i;
		cd[i]=(i-lst+n)%n;
		cp[i]=lst;
	}
	for(ll i=n-1;i>=0;i--)
		if(f[i])
			nxt=i;
	for(ll i=n-1;i>=0;i--)
	{
		if(f[i])
			nxt=i;
		if(cd[i]>(nxt-i+n)%n)
		{
			cd[i]=(nxt-i+n)%n;
			cp[i]=nxt;
		}
	}
	for(ll i=0;i<n;i++)
	{
		if(f[i])
			cout<<s[i];
		else
		{
			if(cd[i]<=k)
			{
				cout<<s[cp[i]];
			}
			else
			{
				if(k%2==0)
					cout<<s[i];
				else
				{
					if(s[i]=='W')
						cout<<'B';
					else
						cout<<'W';
				}
			}
		}
	}
	cout<<"\n";
	return 0;
}