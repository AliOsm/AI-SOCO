#include <bits/stdc++.h>

using namespace std;

#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a) * (a))
#define sz(a) int(a.size())
#define all(a) a.begin(), a.end()
#define forn(i, n) for(int i = 0; i < int(n); i++) 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)

typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;

template <class A, class B> ostream& operator << (ostream& out, const pair<A, B> &a) {
	return out << "(" << a.x << ", " << a.y << ")";
}

template <class A> ostream& operator << (ostream& out, const vector<A> &v) {
	out << "[";
	forn(i, sz(v)) {
		if(i) out << ", ";
		out << v[i];
	}
	return out << "]";
}

mt19937 rnd(time(NULL));

const int INF = int(1e9);
const li INF64 = li(1e18);
const int MOD = INF + 7;
const ld EPS = 1e-9;
const ld PI = acos(-1.0);

const int N = 5000 + 7;

int n;
string s;

bool read () {
	static char buf[N];
	if (scanf("%s", buf) != 1)
		return false;
	s = buf;
	n = sz(s);
	return true;
}

int dp[N];
set<int> mex;

int calc(int len){
	len = max(len, 0);
	if (dp[len] != -1)
		return dp[len];
	vector<int> vals;
	forn(i, len)
		vals.pb(calc(i - 1) ^ calc(len - i - 2));
	sort(all(vals));
	vals.resize(unique(all(vals)) - vals.begin());
	for (auto it : vals)
		mex.erase(it);
	dp[len] = *mex.begin();
	for (auto it : vals)
		mex.insert(it);
	return dp[len];
}


void solve() {
	memset(dp, -1, sizeof(dp));
	forn(i, N) mex.insert(i);
	
	int ans = 0;
	fore(i, 1, n - 1){
		if (s[i - 1] != s[i + 1]) continue;
		int j = i;
		while (j + 1 < n - 1 && s[j] == s[j + 2]) ++j;
		ans ^= calc(j - i + 1);
		i = j;
	}
	
	if (ans == 0){
		puts("Second");
		return;
	}
	
	fore(i, 1, n - 1){
		if (s[i - 1] != s[i + 1]) continue;
		int j = i;
		while (j + 1 < n - 1 && s[j] == s[j + 2]) ++j;
		int len = j - i + 1;
		int cur = ans ^ calc(len);
		forn(k, len) if ((calc(k - 1) ^ calc(len - k - 2) ^ cur) == 0){
			printf("First\n%d\n", i + k + 1);
			return;
		}
		i = j;
	}
	
	printf("%d\n", ans);
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	
	int tt = clock();
	
#endif
	
	cerr.precision(15);
	cout.precision(15);
	cerr << fixed;
	cout << fixed;

#ifdef _DEBUG
	while(read()) {	
#else
	if(read()) {
#endif
		solve();
		
#ifdef _DEBUG
	cerr << "TIME = " << clock() - tt << endl;
	tt = clock();
#endif

	}
}