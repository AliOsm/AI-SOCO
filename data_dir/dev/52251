#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MX = 202;
const ll INF = 1000000000LL * 1000000000LL;

char s[MX];
ll dp[MX][MX];

ll calc(int len)
{
	memset(dp, 0, sizeof dp);
	if (s[0] == ')') return 0;
	
	dp[0][1] = 1;
	
	for (int i = 1; i < len; i++) {
		for (int x = 0; x < len; x++) {
			if (s[i] != '(') {
				dp[i][x] += dp[i - 1][x + 1];
			}
			if (s[i] != ')' && x) {
				dp[i][x] += dp[i - 1][x - 1];
			}
			dp[i][x] = min(dp[i][x], INF);
		}
	}
	
	return dp[len - 1][0];
}

int mn[MX];

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, m;
	ll k;
	cin >> n >> m >> k;

	for (int i = 0; i < n + m - 1; i++) {
		mn[i] = 10000000;
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int p;
			cin >> p;
			mn[i + j] = min(mn[i + j], p);
		}
	}

	for (int i = 0; i < n + m - 1; i++) {
		int x = -1;
		for (int j = 0; j < n + m - 1; j++) {
			if (!s[j] && (x == -1 || mn[j] < mn[x])) {
				x = j;
			}
		}
		
		s[x] = '(';
		ll tmp = calc(n + m - 1);
		if (tmp < k) {
			s[x] = ')';
			k -= tmp;
		}
	}
	
	for (int i = 0; i < n; i++, printf("\n")) {
		for (int j = 0; j < m; j++) {
			printf("%c", s[i + j]);
		}
	}
}
