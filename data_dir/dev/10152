#include <bits/stdc++.h>
using namespace std;

#define fi first
#define se second
#define all(x) (x).begin(), (x).end()
typedef long long ll;

const int INF = (int)1e9;

int main () {
    string s, t;
    cin >> s >> t;
    s = "##" + s;
    t = "##" + t;
    vector<vector<int> > dp(s.size() + 1, vector<int>(t.size() + 1, INF));
    dp[0][0] = 0;
    for (int i = 1; i < s.size(); i++) {
        for (int j = 1; j < t.size(); j++) {
            dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + (int)(s[i] != t[j]));
            dp[i][j] = min(dp[i][j], dp[i - 1][j] + 1);
            dp[i][j] = min(dp[i][j], dp[i][j - 1] + 1);
        }
    }
    int i = (int)s.size() - 1;
    int j = (int)t.size() - 1;
    cout << dp[i][j] << endl;
    vector<vector<string> > ans(3);
    while (min(i, j) != 0) {
        if (dp[i][j] == dp[i - 1][j - 1] + (int)(s[i] != t[j])) {
            if (s[i] != t[j]) {
                stringstream buf;
                buf << "REPLACE" << " " << j - 1 << " " << t[j];
                ans[2].push_back(buf.str());
            }
            i--, j--;
        } else if (dp[i][j] == dp[i - 1][j] + 1) {
            stringstream buf;
            buf << "DELETE" << " " << i - 1;
            ans[0].push_back(buf.str());
            i--;
        } else if (dp[i][j] == dp[i][j - 1] + 1) {
            stringstream buf;
            buf << "INSERT" << " " << j - 1 << " " << t[j];
            ans[1].push_back(buf.str());
            j--;
        }
    }
    reverse(all(ans[1]));
    for (auto v : ans) {
        for (auto x : v) {
            cout << x << endl;
        }
    }
    return 0;
}
