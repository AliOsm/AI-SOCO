#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int n;
map <int , int> from_left;
map <int , int> from_right;
int a [1000005];
int f_left [1000005];
int f_right [1000005];
int tree [1000005];
ll ans;
int getSum(int index)
{
    int sum = 0;

    index = index + 1;

    while (index>0){
        sum += tree[index];
        index -= index & (-index);
    }
    return sum;
}
void updateBIT(int index, int val)
{
    index = index + 1;

    while (index <= n){
        tree[index] += val;
        index += index & (-index);
    }
}
int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n;
    for(int i = 0 ; i < n ; i ++)cin>>a[i];

    for(int i = 0 ; i < n ; i ++){
        from_left[ a[i] ]++;
        f_left[ i ] = from_left[ a[i] ];
    }
    for(int i = n-1 ; i > 0 ; i --){
        from_right[ a[i] ]++;
        f_right[ i ] = from_right[ a[i] ];
        updateBIT( f_right[ i ] , 1);
    }
    for(int i = 0 ; i < n - 1 ; i ++){
        ans += getSum( f_left[i] - 1 );
        updateBIT( f_right[i+1] , -1 );
    }
    cout << ans;
    return 0;
}
