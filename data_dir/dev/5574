// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define ll long long int
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 2013
ld dp[N][N];
int n, T;
ld p;

ld f(int i, int t) {
    if(i == 0) {
        if(t == 0) {
            return 1.0;
        }
        return pow((1.0 - p), t);
    }
    if(t == 0) {
        if(i == 0) {
            return 1.0;
        }
        return 0.0;
    }
    ld res;
    if(dp[i][t] > -1) return dp[i][t];
    if(i == n) {
        res = f(i - 1, t - 1) * p + f(i, t - 1);
    }
    else {
        res = f(i - 1, t - 1) * p + f(i, t - 1) * (1 - p);
    }
    return dp[i][t] = res;
}

int main() {
    fast_io()
    
    cin >> n >> p >> T;
    ld res = 0.0;
    memset(dp, -1.0000, sizeof dp);
    //cout << dp[n][1];
    for(int i = 0; i <= n; i++) {
        //deb(i, f(i, T));
        res = res + 1.0 * f(i, T) * i; 
    }
    cout << fixed << setprecision(13) << res;

	return 0;
}
