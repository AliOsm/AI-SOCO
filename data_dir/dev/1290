#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

using namespace std;
int d[70][70];
int bd[70][70];
int prep[70][70][70];
int was[70][70];
int n,m,r;
set<pair<int,pnt> > se;
void dijkstra(int s)
{
	FOR(i,0,n)
		FOR(j,0,n+1)
		{
			was[i][j]=0;
			prep[s][i][j]=2000000000;
		}
	se.clear();
	se.insert(mp(0,mp(s,0)));
	prep[s][s][0]=0;
	while (se.size())
	{
		int v1=se.begin()->second.first;
		int v2=se.begin()->second.second;
		int d=se.begin()->first;
		se.erase(se.begin());
		if (v2<n)
		{
			FOR(i,0,n)
				if (prep[s][i][v2+1]>d+bd[v1][i])
				{
					se.erase(mp(prep[s][i][v2+1],mp(i,v2+1)));
					prep[s][i][v2+1]=d+bd[v1][i];
					se.insert(mp(prep[s][i][v2+1],mp(i,v2+1)));
				}
		}
	}
}
int main()
{
	//freopen("in.txt","r",stdin);
	scanf("%d%d%d",&n,&m,&r);
	FOR(i,0,n)
		FOR(j,0,n)
			bd[i][j]=2000000000;
	FOR(it,0,m)
	{
		FOR(i,0,n)
			FOR(j,0,n)
				scanf("%d",&d[i][j]);
		FOR(k,0,n)
			FOR(i,0,n)
				FOR(j,0,n)
					d[i][j]=MIN(d[i][j],d[i][k]+d[k][j]);
		FOR(i,0,n)
			FOR(j,0,n)
				bd[i][j]=MIN(bd[i][j],d[i][j]);
	}
	FOR(i,0,n)
			dijkstra(i);
	FOR(i,0,r)
	{
		int v1,v2,k;
		scanf("%d%d%d",&v1,&v2,&k);
		v1--; v2--;
		if (k>n-1)
			k=n-1;
		printf("%d\n",prep[v1][v2][k+1]);
	}
	return 0;
}