#include <bits/stdc++.h>
using namespace std;

int const N = 1e5 + 10;

int n, m, h, t;
vector <int> adj[N];

bool mrk[N];
bool used[N];

void solve ()
{
               for (int v = 1; v <= n; v++)
               {
                              //test if v can be the HEAD

                              if (adj[v].size() <= h)
                                             continue;

                              for (int i = 0; i < adj[v].size(); i++)
                              {
                                             int u = adj[v][i];
                                             mrk[u] = true;
                              }

                              for (int i = 0; i < adj[v].size(); i++)
                              {
                                             int u = adj[v][i];

                                             //test if u can be the TAIL

                                             if (adj[u].size() <= t)
                                                            continue;

                                             int free = 0;

                                             for (int j = 0; j < adj[u].size(); j++)
                                             {
                                                            int T = adj[u][j];

                                                            if (T == v)
                                                                           continue;

                                                            if (!mrk[T])
                                                                           free++;
                                             }

                                             int remain = t - free; //how many nodes we have to take from MRK

                                             if (remain <= 0 || (adj[v].size() - 1 - remain) >= h)
                                             {
                                                            //HYDRA found

                                                            cout << "YES\n";

                                                            cout << v << " " << u << '\n';

                                                            vector <int> tails, heads;

                                                            for (int k = 0; k < adj[u].size(); k++)
                                                            {
                                                                           int T = adj[u][k];

                                                                           if (!t)
                                                                                          break;

                                                                           if (T == v)
                                                                                          continue;

                                                                           if (mrk[T])
                                                                           {
                                                                                          if (remain <= 0)
                                                                                                         continue;
                                                                                          used[T] = true;
                                                                                          remain--;
                                                                           }

                                                                           tails.push_back (T);
                                                                           t--;
                                                            }

                                                            for (int k = 0; k < adj[v].size(); k++)
                                                            {
                                                                           int T = adj[v][k];

                                                                           if (!h)
                                                                                          break;

                                                                           if (T == u)
                                                                                          continue;

                                                                           if (used[T])
                                                                                          continue;

                                                                           heads.push_back (T);
                                                                           h--;
                                                            }

                                                            for (int k = 0; k < heads.size(); k++)
                                                                           cout << heads[k] << " ";
                                                            cout << '\n';

                                                            for (int k = 0; k < tails.size(); k++)
                                                                           cout << tails[k] << " ";
                                                            cout << '\n';

                                                            exit (0);
                                             }

                              }

                              for (int i = 0; i < adj[v].size(); i++)
                              {
                                             int u = adj[v][i];
                                             mrk[u] = false;
                              }

               }
}

int main ()
{
               cin.sync_with_stdio (false);
               cin.tie (0);
               cout.tie (0);

               cin >> n >> m >> h >> t;

               for (int i = 0; i < m; i++)
               {
                              int u, v;
                              cin >> u >> v;

                              adj[u].push_back (v);
                              adj[v].push_back (u);
               }

               solve();

               cout << "NO\n";
               return 0;
}