#include<bits/stdc++.h>
using namespace std;
#define M 100007
#define rt 316

int a[M];

struct data{
    int l, r, id;

    bool operator <  (const data& p ) const {
        if (l/rt == p.l/rt) return r < p.r;
        return l/rt < p.l/rt;
    }
};

data qr[M];
int c[M];

int ans[M];

int main(void)
{
    std::ios::sync_with_stdio(false);

    int n, m, i;
    cin >> n >> m;

    for (i = 1; i <= n; i++) {
        cin >> a[i];
        if (a[i] > 100000) a[i] = 0;
    }

    for (i = 0; i < m; i++) {
        qr[i].id = i;
        cin >> qr[i].l >> qr[i].r;
    }

    sort(qr, qr+m);
    int L, R, cnt = 0;
    L = 1;
    R = 0;

    for (i = 0; i < m; i++) {
        while (R < qr[i].r) {
            R++;
            if (a[R]==0) continue;
            if (c[a[R]]==a[R]) cnt--;
            c[a[R]]++;
            if (c[a[R]]==a[R]) cnt++;
        }
        while (qr[i].l < L) {
            L--;
            if (a[L]==0) continue;
            if (c[a[L]]==a[L]) cnt--;
            c[a[L]]++;
            if (c[a[L]]==a[L]) cnt++;
        }

        while (qr[i].r < R) {
            if (a[R]) {
                if (c[a[R]]==a[R]) cnt--;
                c[a[R]]--;
                if (c[a[R]]==a[R]) cnt++;
            }
            R--;
        }

        while (L < qr[i].l) {
            if (a[L]) {
                if (c[a[L]]==a[L]) cnt--;
                c[a[L]]--;
                if (c[a[L]]==a[L]) cnt++;
            }
            L++;
        }

        ans[qr[i].id] = cnt;
    }

    for (i = 0; i < m; i++) cout << ans[i] << endl;


    return 0;
}
