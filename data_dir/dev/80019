#include <bits/stdc++.h>

using namespace std ;

int n ;
long long k ;
string s ;
long long memo[101][101] ;
long long dp(int idx , int len)
{
    if(idx == n)
        return len == 0 ;
    long long &ret = memo[idx][len] ;
    if(~ret)
        return ret ;
    ret = min(1LL << 60 ,dp(idx + 1 , len)) ; // take , leave
    if(len > 0)
        ret = min(1LL << 60 , ret + dp(idx + 1 , len - 1)) ;
    int nxt = idx + 1 ;
    for(; nxt < n && s[idx] != s[nxt]; nxt++)  ;    // remove duplicate subsequence
    if(len > 0 && nxt < n)
        ret -= dp(nxt + 1, len - 1) ;
    return ret ;
}
int main()
{
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr) ;
    cin >> n >> k ;
    cin >> s ;
    memset(memo , -1 , sizeof memo) ;
    long long ans = 0 ;
    for(int len = n ; len >= 0 && k > 0; len --)
    {
        long long cnt = dp(0 , len);
        long long mn = min(cnt , k) ;
        k -= mn ;
        ans += mn * (n - len) ;
    }
    if(k > 0)
        cout << -1 << '\n' ;
    else
        cout << ans << '\n' ;
    return 0 ;
}