/* Author: Dhruv Rastogi */
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second
const long double PI = acos(-1.0);

const int N = 200005;
int a[N];  
int d[N][2];
vll adjlist[N];
int vis[N];
void solve(){  
	int n;
	cin>>n;
	memset(d,1,sizeof d);
	rep(i,0,n){
		cin>>a[i];
		if(i+a[i]<=n-1){
			adjlist[i+a[i]].pb(i);
		}
		if(i-a[i]>=0){
			adjlist[i-a[i]].pb(i);
		}
	}
	//even
	int lim=d[0][0];
	queue<int> q;
	rep(i,0,n){
		if(a[i]%2==0){
			q.push(i);
			d[i][0]=0;
			vis[i]=1;
		}
	}
	while(!q.empty()){
		int k=q.front();
		q.pop();
		for(int i:adjlist[k]){
			if(!vis[i]){
				vis[i]=1;
				q.push(i);
				d[i][0]=d[k][0]+1;
			}
		}
	}

	memset(vis,0,sizeof vis);
	rep(i,0,n){
		if(a[i]%2){
			q.push(i);
			d[i][1]=0;
			vis[i]=1;
		}
	}
	while(!q.empty()){
		int k=q.front();
		q.pop();
		for(int i:adjlist[k]){
			if(!vis[i]){
				vis[i]=1;
				q.push(i);
				d[i][1]=d[k][1]+1;
			}
		}
	}
	rep(i,0,n){
		if(d[i][1-a[i]%2]==lim){
			cout<<-1<<' ';
		}
		else cout<<d[i][1-a[i]%2]<<' ';
	}
	cout<<endl;
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}