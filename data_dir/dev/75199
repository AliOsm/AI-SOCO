#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define F first
#define S second
#define I ->
#define endl '\n'
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define mid (st + en) / 2
#define lef 2 * Node
#define rig lef + 1

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 10000 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;
int Ans [NN] ,x , n ;
bool Vis [NN] ;
set <pair<int,pair<int,int>>,greater <pair<int,pair<int,int>>>> Grid ;
int main()
{
    cin >> n ; n *= 2 ;
    forq (i , 2 , n) {
        forq (j , 1 , i - 1) {
            cin >> x ;
            Grid.insert ({x , {i , j}}) ;
        }
    }
    pair<int,int> Draft ;
    while (Grid.size()) {
        Draft = (*Grid.begin()).S ;
        Grid.erase(Grid.begin()) ;
        if (Vis [Draft.F] || Vis [Draft.S])
            continue ;
        Vis [Draft.F] = Vis [Draft.S] = 1 ;
        Ans [Draft.F] = Draft.S ;
        Ans [Draft.S] = Draft.F ;
    }
    forq (i , 1 , n)
        cout << Ans [i] << " " ;
    return 0;
}
