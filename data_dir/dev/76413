#include <bits/stdc++.h>
typedef long long ll;
using namespace std;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n, k, d;
	cin >> n >> k >> d;
	        unordered_set<int> police;
	        for (int i = 0; i < k; i++) {
	        	int x;
	        	cin >> x;
	            police.insert(x - 1);
	        }

	        vector<pair<int,int> > adjList [n];

	        for (int i = 0; i < n - 1; i++) {
	        	int u, v;
	        	cin >> u >> v;
	        	u--, v--;

	            adjList[u].push_back(make_pair(v, i + 1));
	            adjList[v].push_back(make_pair(u, i + 1));
	        }

	        queue<int> q;
	        bool visited [n];
	        for (int i = 0; i < n; i++)
	        	visited[i] = 0;

	        set<int> ss;
	        for (unordered_set<int> ::iterator it = police.begin(); it != police.end(); it++) {
	        	int city = *it;
	            q.push(city);
	            visited[city] = true;
	        }

	        int p [n];
	        for (int i = 0; i < n; i++)
	        	p[i] = -1;
	        unordered_set<int> res;
	        while (!q.empty()) {
	            int cur = q.front();q.pop();
	            for (pair<int,int> nxt : adjList[cur]) {
	                if (nxt.first != p[cur]) {
	                    if (visited[nxt.first]) {
	                        res.insert(nxt.second);
	                    }
	                    else {
	                        p[nxt.first] = cur;
	                        visited[nxt.first] = true;
	                        q.push(nxt.first);
	                    }
	                }
	            }
	        }

	        cout << (int)res.size() << "\n";
	        bool frst = true;
	        for (int i : res) {
	            if (frst) {
	                cout << i;
	                frst = false;
	            } else {
	                cout << " " << i;
	            }
	        }
	        cout << "\n";
	return 0;
}
