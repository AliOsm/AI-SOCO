#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-8

const int gox[4] = {0, 0, 1, -1};
const int goy[4] = {1, -1, 0, 0};

int n, m, k;
char mp[510][510];
bool flag[510][510];

void Dfs(int x, int y)
{
	for (int i = 0; i < 4; i++)
	{
		int xx = x + gox[i];
		int yy = y + goy[i];
		if (xx >= 0 && xx < n && yy >= 0 && yy < m &&
			mp[xx][yy] == '.' && !flag[xx][yy])
		{
			flag[xx][yy] = 1;
			Dfs(xx, yy);
		}
	}
	if (k > 0)
	{
		mp[x][y] = 'X';
		k--;
	}
}

int main()
{
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i < n; i++)
		scanf("%s", mp[i]);
	memset(flag, 0, sizeof(flag));
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (mp[i][j] == '.' && !flag[i][j])
				Dfs(i, j);
	for (int i = 0; i < n; i++)
		printf("%s\n", mp[i]);
	return 0;
}
