#include <iostream>
#include <algorithm>
using namespace std;

int N;
int L[1005];
int R[1005];
int ans[1005];
pair<int, int> C[1005];

int main()
{
    ios::sync_with_stdio(0);

    cin >> N;
    for (int i = 0; i < N; i++)
        cin >> L[i];
    for (int i = 0; i < N; i++)
        cin >> R[i];

    for (int i = 0; i < N; i++)
        C[i] = make_pair(L[i] + R[i], i);

    sort(C, C + N);
    for (int i = N - 1, cur = 1; i >= 0;)
    {
        int j = i;
        while (j >= 0 && C[i].first == C[j].first)
            j--;
        if (j + 1 != C[i].first)
        {
            cout << "NO\n";
            return 0;
        }
        for (; i > j; i--)
            ans[C[i].second] = cur;
        cur++;
    }

    for (int i = 0; i < N; i++)
    {
        int left = 0, right = 0;
        for (int j = 0; j < N; j++)
        {
            left += j < i && ans[j] > ans[i];
            right += j > i && ans[j] > ans[i];
        }
        if (left != L[i] || right != R[i])
        {
            cout << "NO\n";
            return 0;
        }
    }

    cout << "YES\n";
    for (int i = 0; i < N; i++)
        cout << ans[i] << " ";
    cout << "\n";

    return 0;
}
