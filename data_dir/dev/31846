#include <bits/stdc++.h>
using namespace std;
const int N = 1e3 + 10;
int n, m, seen[N][N], a[N][N];
vector<int> r[N];
bool isval(int x) {
	memset(seen, 0, sizeof(seen));
	for (int i = 0; i < n; i++) {
		r[i].clear();
		for (int j = 0; j < m; j++) {
			if (a[i][j] >= x)
				r[i].push_back(j);
		}
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < r[i].size(); j++) {
			for (int k = j + 1; k < r[i].size(); k++) {
				if (seen[r[i][j]][r[i][k]]) {
					return true;
				}
				seen[r[i][j]][r[i][k]]++;
			}
		}
	}
	return false;
}
int getAns() {
	int up = 1e9 + 1, dw = 0;
	while (up - dw > 1) {
		int md = (up + dw) / 2;
		if (isval(md))
			dw = md;
		else
			up = md;
	}		
	return dw;
}
int main() {
	ios_base::sync_with_stdio (false), cin.tie(0), cout.tie(0);
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> a[i][j];
	cout << getAns();
	return 0;
}
