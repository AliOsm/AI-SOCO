#include <bits/stdc++.h>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int>> pq;
vector<int> v;

char s[100001];
map<ll, int> ma;

int main() {
    int tc;
    scanf("%d", &tc);

    while (tc--) {
        int n;
        ll t;
        scanf("%d %lld", &n, &t);
        scanf("%s", s);

        ma.clear();

        ll ans = 0;
        if (t == 0) ans++;

        int cnt = 0;
        for (int i = 0; i < n; i++) {
            if (s[i] == '0') cnt++;
            else cnt--;
            ma[cnt]++;
        }

        if (cnt == 0) {
            if (ma[t]) {
                printf("-1\n");
                continue;
            }
            else {
                printf("0\n", t == 0);
                continue;
            }
        }

        if (t > 0) {
            if (cnt < 0);
            else {
                if (t > n * 2) {
                    int ob = t - n * 2;
                    ob /= cnt;
                    t -= ob * cnt;
                }
            }
        }
        else if (t < 0) {
            if (cnt > 0);
            else {
                if (t < - n * 2) {
                    int ob = abs(t) - n * 2;
                    ob /= -cnt;
                    t += ob * -cnt;
                }
            }
        }

        // printf("%d", t);
        // 유효한 게.. 그 이상인지 이하인 지 알아야 하는데.
        // 만약, cnt가 음수라면 그 위를 봐야하고.
        // cnt가 양수라면 그 아래를 봐야한다??

        for (int i = 0; i <= 6 * n; i++) {
            ans += ma[t];
            t -= cnt;
        }

        printf("%lld\n", ans);
    }
}