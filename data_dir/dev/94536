#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
typedef long long ll;
typedef long double ld;
using namespace std;

#define vi vector<int>
#define vvi vector<vi>

const int inf = 1e9 + 7;
const int P = 1010, N = 55;
char code[P], s[N], t[N];
int p, n, m;
int dp[P][N][N];

vi kmp_s, kmp_t;
vvi nxt_s, nxt_t;

void init(char a[], int n, vi& kmp, vvi& nxt) {
  kmp.assign(n + 1, 0);
  nxt.assign(n + 1, vi(26, 0));

  kmp[1] = 0;
  for (int i = 2; i <= n; i++) {
    int cur = kmp[i - 1];
    while (cur > 0 && a[cur + 1] != a[i]) cur = kmp[cur];
    if (a[cur + 1] == a[i]) cur++;
    kmp[i] = cur;
  }

  for (int i = 0; i <= n; i++) {
    for (char c = 'a'; c <= 'z'; c++) {
      int cur = i;
      while (cur > 0 && a[cur + 1] != c) cur = kmp[cur];
      if (a[cur + 1] == c) cur++;
      nxt[i][c - 'a'] = cur;
    }
  }
}

int main() {

  scanf("%s", code + 1);
  scanf("%s", s + 1);
  scanf("%s", t + 1);

  p = strlen(code + 1);
  n = strlen(s + 1);
  m = strlen(t + 1);

  init(s, n, kmp_s, nxt_s);
  init(t, m, kmp_t, nxt_t);

  for (int i = 0; i <= p; i++) {
    for (int ks = 0; ks <= n; ks++) {
      for (int kt = 0; kt <= m; kt++) {
        dp[i][ks][kt] = -inf;
      }
    }
  }
  dp[0][0][0] = 0;
  for (int i = 0; i < p; i++) {
    for (int ks = 0; ks <= n; ks++) {
      for (int kt = 0; kt <= m; kt++) {
        for (char c = 'a'; c <= 'z'; c++) {
          if (code[i + 1] == '*' || code[i + 1] == c) {
            int ns = nxt_s[ks][c - 'a'];
            int nt = nxt_t[kt][c - 'a'];
            int tmp = dp[i][ks][kt] + (ns == n) - (nt == m);
            dp[i + 1][ns][nt] = max(dp[i + 1][ns][nt], tmp);
          }
        }
      }
    }
  }

  int ans = -inf;
  for (int ks = 0; ks <= n; ks++) {
    for (int kt = 0; kt <= m; kt++) {
      ans = max(ans, dp[p][ks][kt]);
    }
  }

  cout << ans << endl;

  return 0;
}