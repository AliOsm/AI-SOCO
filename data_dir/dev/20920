#include <bits/stdc++.h>
using namespace std;

const int OFFSET = 10000000;
int f[20000000];
int f2[20000000];
int a[2005];
int b[2006];
int main()
{
	int k, n;
	scanf("%d %d", &k, &n);
	for (int i = 0; i < k; i++)
		scanf("%d", a + i);
	for (int i = 0; i < n; i++)
		scanf("%d", b + i);
	memset(f, 0, sizeof(f));
	memset(f2, 0, sizeof(f2));
	for (int i = 0; i < n; i++)
		f2[OFFSET + b[i]]++;
	set<int> pos;
	for (int i = 0; i < k; i++)
	{
		int cur = b[0];
		vector<int> torem;
		for (int j = i; j >= 0; j--)
		{
			torem.push_back(cur + OFFSET);
			f[cur + OFFSET]++;
			cur -= a[j];
		}
		int first = cur;
		cur = b[0];
		for (int j = i+1; j < k; j++)
		{
			cur += a[j];
			torem.push_back(cur + OFFSET);
			f[cur + OFFSET]++;
		}
		bool bad = false;
		for (int j = 0; j < n; j++)
			if (f[b[j] + OFFSET] < f2[b[j] + OFFSET])
				bad = true;
		if (!bad)
			pos.insert(first);
		for (int j = 0; j < torem.size(); j++)
			f[torem[j]]--;
	}
	printf("%d\n", (int)pos.size());
}