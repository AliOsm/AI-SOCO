#include<bits/stdc++.h>
using namespace std;
long long n,u,v,i,ans=INT_MIN,flag,a[200001],max_dp[200001],sum_dp[200001],visited[200001];
vector<long long>adj[200001];
void dfs_ans(long long cur,long long parent,long long maxi)
{
    if(maxi!=INT_MIN)
        ans=max(maxi+sum_dp[cur],ans);

    vector<pair<long long,long long> >adj_ans;

    for(long long j=0;j<adj[cur].size();j++)
    {
        if(adj[cur][j]!=parent)
        {
            adj_ans.push_back({max_dp[adj[cur][j]],adj[cur][j]});
            sort(adj_ans.rbegin(),adj_ans.rend());
            if(adj_ans.size()==3)
                adj_ans.pop_back();
        }
    }

    adj_ans.push_back({INT_MIN,-1});

    for(long long j=0;j<adj[cur].size();j++)
        if(adj[cur][j]!=parent)
            dfs_ans(adj[cur][j],cur,max(maxi,adj_ans[0].second==adj[cur][j]?adj_ans[1].first:adj_ans[0].first));
}

void dfs(long long x)
{
    visited[x]=1;
    max_dp[x]=INT_MIN;
    sum_dp[x]=a[x];

    for(long long j=0;j<adj[x].size();j++)
    {
        if(!visited[adj[x][j]])
        {
            dfs(adj[x][j]);
            max_dp[x]=max(max_dp[x],max_dp[adj[x][j]]);
            sum_dp[x]+=sum_dp[adj[x][j]];
        }
    }
    max_dp[x]=max(max_dp[x],sum_dp[x]);
}

int main()
{
    ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);

    cin>>n;
    for(i=1;i<=n;i++)
        cin>>a[i];

    for(i=1;i<n;i++)
    {
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
        if(adj[1].size()>=2 || (u!=1 && adj[u].size()>=3) || (v!=1 && adj[v].size()>=3))
            flag=1;
    }

    if(!flag)
        return cout<<"Impossible",0;

    max_dp[1]=INT_MIN;
    sum_dp[1]=a[1];
    visited[1]=1;

    for(i=0;i<adj[1].size();i++)
    {
        if(visited[adj[1][i]])
            continue;
        dfs(adj[1][i]);
        max_dp[1]=max(max_dp[1],max_dp[adj[1][i]]);
        sum_dp[1]+=sum_dp[adj[1][i]];
    }
    max_dp[1]=max(max_dp[1],sum_dp[1]);

    dfs_ans(1,-1,INT_MIN);

    cout<<ans;
}
