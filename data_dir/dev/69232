#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
char s[50100];
int p[110][50100];
int ba[110][50100];
char ans[110];
int L;
vector<int> b[30];
int main() {
	scanf("%s", s);
	memset(p, -1, sizeof(p));
	for (L = 0; s[L]; L++) {
		p[1][L] = L;
		if (b[s[L] - 'a'].size()) p[2][L] = b[s[L] - 'a'].back();
		b[s[L] - 'a'].push_back(L);
	}
	for (int i = 1; i < 100; i++) {
		int d = 0;
		for (int j = 1; j < L; j++) {
			int k = p[i][d], t = s[j] - 'a';
			if (k >= 0) {
				int tmp = lower_bound(b[t].begin(), b[t].end(), k) - b[t].begin();
				if (tmp) {
					p[i+2][j] = b[t][tmp-1];
					ba[i+2][j] = d;
				}
			}
			if (p[i][j] > p[i][d]) {
				d = j;
			}
		}
	}
	for (int i = 100; i >= 1; i--) {
		for (int j = 0; j < L; j++) {
			if (p[i][j] != -1) {
				int q = 0, r = i - 1;
				ans[i] = '\0';
				do {
					ans[q] = ans[r] = s[j];
					++q; --r;
					j = ba[i][j];
					i -= 2;
				} while (i > 0);
				printf("%s\n", ans);
				return 0;
			}
		}
	}
	return 0;
}
