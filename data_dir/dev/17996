#include <bits/stdc++.h>
#include <climits>

using namespace std;

const long long LONG_LONG_MAX = (long long)1e18;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n;
    cin >> n;
    vector<int> c(n);
    for (int i = 0; i < n; ++i)
        cin >> c[i];

    vector<string> s(n);
    for (int i = 0; i < n; ++i)
        cin >> s[i];

    vector<long long> dp(n), dpr(n);
    dp[0] = 0;
    dpr[0] = c[0];
    for (int i = 1; i < n; ++i) {
        string sl, slr, sn, snr;
        sl = slr = s[i - 1];
        reverse(slr.begin(), slr.end());
        sn = snr = s[i];
        reverse(snr.begin(), snr.end());
        dp[i] = dpr[i] = LONG_LONG_MAX;
        if (dp[i - 1] != LONG_LONG_MAX && sl <= sn)
            dp[i] = dp[i - 1];
        if (dpr[i - 1] != LONG_LONG_MAX && slr <= sn)
            dp[i] = min(dp[i], dpr[i - 1]);
        if (dp[i - 1] != LONG_LONG_MAX && sl <= snr)
            dpr[i] = dp[i - 1] + c[i];
        if (dpr[i - 1] != LONG_LONG_MAX && slr <= snr)
            dpr[i] = min(dpr[i], dpr[i - 1] + c[i]);
    }

    if (min(dp[n - 1], dpr[n - 1]) != LONG_LONG_MAX)
        cout << min(dp[n - 1], dpr[n - 1]);
    else
        cout << -1;

    return 0;
}
