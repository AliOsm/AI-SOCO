#include <bits/stdc++.h>

typedef unsigned long long ll ;
typedef long double ld ;
using namespace std;
vector<vector<int> > v(200045);
int cycle=0,twoedges;
set<int> curnodes;
bool visit[200045]={};
void dfs(int x,int parent)
{
    if(visit[x]==1)
    {
        cycle=1;
        return;
    }
    visit[x]=1;
    curnodes.insert(x);
    for(int i =0;i<v[x].size();i++)
    {
        if(v[x][i]!=parent)
        {
            dfs(v[x][i],x);
        }
    }
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n,m,x,y;
    cin >> n>>m;
    for(int i =0;i<m;i++)
    {
        cin >> x>>y;
        x--,y--;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    int out=0;
    for(int i =0;i<n;i++)
    {
        if(visit[i]==0)
        {
            dfs(i,i);
            twoedges=1;
            for(set<int> ::iterator it=curnodes.begin();it!=curnodes.end();it++)
            {
                if(v[*it].size()!=2)
                {
                    twoedges=0;
                }
            }
            if(twoedges&&cycle)
            {
                out++;
            }
            else if(curnodes.size()==2&&twoedges)
            {
                out++;
            }
            cycle=0;
            curnodes.clear();
        }
    }
    cout << out << endl;
    return 0;
}
