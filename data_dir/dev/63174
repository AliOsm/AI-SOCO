#include<bits/stdc++.h>
using namespace std;
int n,k;
pair<int,int> ed[100005];
vector<int> di[100005];
vector<int> v[100005];
int deg[100005];
int in[100005];
int main()
{
	scanf("%d%d",&n,&k);
	int i,x,j;
	for(i=1;i<=n;i++)
	{
		scanf("%d",&x);
		ed[i-1] = make_pair(x,i);
	}
	sort(ed,ed+n);
	int valid = 1;
	int co = 0;
//	printf("edges are\n");
//	for(i=0;i<n;i++)
//	printf("%d has %d dis\n",ed[i].second,ed[i].first);
	for(i=0;i<n;i++)
	{
		int d;
		x = ed[i].second;
		d = ed[i].first;
		if(d==0){
			if(co)
			{
				valid = 0;
				break;
			}
			co=1;
			di[0].push_back(x);
		//	printf("root is %d\n",x);
		}
		else {
			if(di[d-1].size()==0)
			{
			//	printf("%d dis was not found\n",d-1);
				valid = 0;
				break;
			}
			int l = di[d-1].size();
			
			int fo = 0;
			for(j=0;j<l;j++)
			{
				int cur = di[d-1][j];
			//	printf("%d has %d dis it has %d already\n",cur,d-1,v[cur].size());
				if(deg[cur] < k)
				{
					fo = 1;
					di[d].push_back(x);
					v[cur].push_back(x);
					deg[cur]++;
					deg[x]++;
					break;
				}
			}
			if(fo==0)
			{
			//	printf("all were full\n");
				valid = 0;
				break;
			}
		}
	}
	if(valid==0)printf("-1\n");
	else {
		int m = 0;
		for(i=1;i<=n;i++)
		m+=v[i].size();
		printf("%d\n",m);
		for(i=1;i<=n;i++)
		{
			for(j=0;j<v[i].size();j++)
			{
				printf("%d %d\n",i,v[i][j]);
			}
		}
	}
	
	return 0;
}