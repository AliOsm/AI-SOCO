#include <bits/stdc++.h>

using namespace std;

const int maxn = 1e6+5;
vector<int> adj[maxn];
int id[maxn], sum[maxn];
int n, x, root, treeSum, v1, v2;

void dfs(int s) {
    for(int v : adj[s]) dfs(v), sum[s] += sum[v];
    if(sum[s]*3 == treeSum && s != root) {
        if(!v1) v1 = s;
        else if(!v2) v2 = s;
        sum[s] = 0;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);

    cin >> n;
    for(int i = 0; i < n; i++) {
        cin >> x >> sum[i+1];
        treeSum += sum[i+1];
        adj[x].push_back(i+1);
        if(x == 0) root = i+1;
    }
    dfs(root);
    if(v1 && v2) cout << v1 << " " << v2;
    else cout << "-1";
    return 0;
}
