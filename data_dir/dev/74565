#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
const int MAXN = 1e5+20;
const int MAXNk = 1e4+20;
using namespace std;
const long long INF = 1e16;
 
int n,m,x,y;
map<pair<int,int>,int> kol;
vector<pair<int, int> >reb;
vector<int>g[MAXN];
int used[MAXN];
bool bol;
map<pair<int,int>,int>svet;
void dfs(int v)
{
	used[v] = 1;
	for (int i=0; i<g[v].size(); i++)
	{
		int to = g[v][i];
		if (!used[to]) dfs(to);
		else
		if (used[to] == 1) 
		{
			bol = true;	
			svet[{v,to}] = 2;
		}
	}
	used[v] = 2;
}
int main()
{
 
ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
//	freopen("olympiad.in", "r", stdin);
//	freopen("olympiad.out", "w", stdout);
 

	cin>>n>>m;
	for (int i=1; i<=m; i++)
	{
		cin>>x>>y;
		g[x].pb(y);
		reb.pb(mp(x,y));
	}
 	for (int i=1; i<=n; i++) 
 	{
 		if (!used[i]) dfs(i);
	 }
	 if (!bol)
	 {
	 	cout<<1<<endl;
	 	for (int i=0; i<reb.size(); i++) cout<<1<<" ";
	 	return 0;
	 }
	 cout<<2<<endl;
	 for (int i=0; i<reb.size(); i++)
	 {
	 	x = reb[i].first;
	 	y = reb[i].second;
	 	if (svet[{x,y}]==0) cout<<1<<" ";
	 	else
	 	cout<<2<<" ";
	 }
	 
}
