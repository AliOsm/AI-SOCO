#include <bits/stdc++.h>
using namespace std;

int n, m;
int mat[4][100];
int dp[100][1 << 4];

int go(int o, int bit) {
    if (o == m && bit == (1 << n) - 1) return 0;
    if (o == m) return -1e9;
    if (dp[o][bit] != -1) return dp[o][bit];

    int mav = -1e9, sum, bb, f;
    for (int i = 0; i < (1 << n); i++) {
        bb = i; sum = 0;

        for (int j = 0; j < n; j++)
            if (i & (1 << j))
                sum += mat[j][o];

        for (int j = 0; j < n; j++) {
            if (!(bb & bit))
                mav = max(mav, go(o + 1, bb | bit) + sum);

            f = bb & 1;
            bb >>= 1;
            bb |= f << (n - 1);
        }
    }

    return dp[o][bit] = mav;
}

int main() {
    int tc;
    scanf("%d", &tc);

    while (tc--) {
        memset(dp, -1, sizeof(dp));
        scanf("%d %d", &n, &m);

        for (int i = 0; i < n; i++)
            for (int j = 0; j < m; j++)
                scanf("%d", &mat[i][j]);

        printf("%d\n", go(0, 0));
    }
}