//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod=MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


const int N = 1000002;
int n, arr[N], A, cnt[N];


 
int main(){
 
    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

    scanf("%d%d", &n, &A);

    priority_queue<ii> pq;

    set<int> cols;
    for(int i=1;i<=1000*1000;i++)
    	if(i != A){
    		pq.push(ii(0, i));
    		cols.insert(i);
    	}

    int z = 0;

    for(int i=1;i<=n;i++){

    	scanf("%d", &arr[i]);
    	cnt[arr[i]]++;
    	if(arr[i] != A)
    		pq.push(ii(-cnt[arr[i]], arr[i]));
    	else
    		z++;

    	while(1){

	    	while(!pq.empty() && cnt[pq.top().ss] != -pq.top().ff)
	    		pq.pop();
	    	if(pq.empty() || -pq.top().ff >= z)	break;
	    	cols.erase(pq.top().ss);
	    	pq.pop();
    	}
    }

    // while(!pq.empty()){
    // 	if(cnt[pq.top().ss] != -pq.top().ff){
    // 		pq.pop();
    // 		continue;
    // 	}
    // 	cols.insert(pq.top().ss);
    // 	pq.pop();
    // }

    if(cols.empty())	cols.insert(-1);
    printf("%d\n", (*cols.begin()));
    return 0;
}






