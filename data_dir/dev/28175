#include <bits/stdc++.h>

using namespace std;

multiset<int> q[3];

vector<int> pos[200005];

signed main()
{
#ifdef files
	ifstream cin("input.txt");
	ofstream cout("output.txt");
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    for(int i=0; i<n; i++){
        int x;
        cin >> x;
        q[x%3].insert(x);
        pos[x].push_back(i+1);
    }
    if(q[0].find(0)==q[0].end())return cout << "Impossible", 0;
    q[0].erase(q[0].find(0));
    vector<int> v(n);
    for(int i=1; i<n; i++){
        auto it=q[(v[i-1]+1)%3].upper_bound(v[i-1]+1);
        if(it==q[(v[i-1]+1)%3].begin())return cout << "Impossible", 0;
        v[i]=*(--it);
        q[(v[i-1]+1)%3].erase(it);
    }
    cout << "Possible\n";
    for(int x:v){
        cout << pos[x].back() << " ";
        pos[x].pop_back();
    }
}
