#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cassert>
#include <ctime>
#include <deque>

using namespace std;

#define forn(i, n) for (int i = 0; i < int(n); i ++)
#define ford(i, n) for (int i = int(n) - 1; i >= 0; i --)
#define mp make_pair
#define pb push_back
#define fs first
#define sc second
#define pi 3.1415926535897932384626433832795l

typedef long long ll;
typedef long double ld;

int b[2][20100];
int *d[2];
int a[1010];
int n;
ll mod = 1000000007;

int main(){
#ifdef LOCAL
    freopen ("input.txt","rt",stdin);
//  freopen ("output.txt","wt",stdout);
#endif
    forn(i, 2)
        d[i] = b[i] + 10050;
    d[0][0] = 1;
    cin >> n;
    forn(i, n)
        scanf ("%d", &a[i]);
    ll ans = 0;
    int minn = 0, maxx = 0;
    forn(i, n){
        int v = i & 1; 
        int tek_min = 0, tek_max = 0;
        for (int j = minn; j <= maxx; ++ j){
            if (d[v][j] == 0) continue;
            (d[1 - v][j - a[i]] += d[v][j]) %= mod;
            (d[1 - v][j + a[i]] += d[v][j]) %= mod;
            tek_min = min(tek_min, j - a[i]);
            tek_max = max(tek_max, j + a[i]); 
        }
        for (int j = minn; j <= maxx; ++ j){
            d[v][j] = 0;                
        }
        minn = tek_min;
        maxx = tek_max;
        ans += d[1 - v][0];
        d[1 - v][0] ++;
    }
    cout << ans % mod << endl;
    return 0;
}
