//I_F_A
#include "bits/stdc++.h"
using namespace std;

#define N 1001

long long visited[N][N];
char arr[N][N];
long long ans[N][N];
long long n,m,q;

bool func1(long long a,long long b){
	
	if(a >= 1 && b >= 1 && a <= n && b <= m && arr[a][b] == '.' && visited[a][b] == 0LL){
		
		return true;
	}
	return false;
}

bool func2(long long a,long long b){
	
	if(a  >= 1 && b >= 1 && a <= n && b <= m && visited[a][b] == 1LL){
		
		return true;
	}
	return false;
}

void dfs1(long long i,long long j,long long &sum){
	
	visited[i][j] = 1LL;
	
	if(i - 1 >= 1 && arr[i-1][j] == '*'){
		
		sum++;
	}	
	if(i + 1 <= n && arr[i+1][j] == '*'){
		
		sum++;
	}
	if(j - 1 >= 1 && arr[i][j-1] == '*'){
		
		sum++;
	}
	if(j + 1 <= m && arr[i][j+1] == '*'){
		
		sum++;
	}
	
	if(func1(i-1,j)){
		
		dfs1(i-1,j,sum);
	}
	if(func1(i+1,j)){
		
		dfs1(i+1,j,sum);
	}
	if(func1(i,j-1)){
		
		dfs1(i,j-1,sum);
	}
	if(func1(i,j+1)){
		
		dfs1(i,j+1,sum);
	}
}

void dfs2(long long i,long long j,long long sum){
	
	visited[i][j] = 2LL;
	ans[i][j] = sum;
	
	if(func2(i-1,j)){
		
		dfs2(i-1,j,sum);
	}
	if(func2(i+1,j)){
		
		dfs2(i+1,j,sum);
	}
	if(func2(i,j-1)){
		
		dfs2(i,j-1,sum);
	}
	if(func2(i,j+1)){
		
		dfs2(i,j+1,sum);
	}
}

int main(){
	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> n >> m >> q;
	
	for(long long i=1;i<=n;i++){
		
		for(long long j=1;j<=m;j++){
			
			cin >> arr[i][j];
		}
	}
	
	for(long long i=1;i<=n;i++){
		
		for(long long j=1;j<=m;j++){
			
			if(arr[i][j] == '.' && visited[i][j] == 0LL){
				
				long long sum = 0;
				
				dfs1(i,j,sum);
				
				dfs2(i,j,sum);
			}
		}
	}
	
	while(q--){
		
		long long a,b;
		cin >> a >> b;
		
		cout << ans[a][b] << endl;
	}
}

