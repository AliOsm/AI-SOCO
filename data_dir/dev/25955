#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
#include<string>
#include<cstdio>
#include<string.h>
#include<set>
#include<map>
#include<ctime>
using namespace std;

typedef long long Int;
#define FOR(i,a,b)  for(int i=(a);i<=(b);++i)
#define sz(s) (int)(s).size()
#define mp make_pair
#define pb push_back
#define sqr(x) (x)*(x)
void assert(bool x){if(!x)throw -1;}
const int inf = 1000000000;
const int MOD = 1000000007;
const double pi = acos(-1.0);

const int N = 1000009;
string s[N+1];
int sum[N+1];
int nx[N+1][19+1];

int main()
{
	//freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
	int n,r,w;
	cin>>n>>r>>w;
	FOR(i,1,n)cin>>s[i];
	sum[0]=0;
	FOR(i,1,n)sum[i]=sum[i-1]+sz(s[i]);

	pair<int,int> best=mp(0,0);
	for(int i=n;i>=1;--i){
		if(sz(s[i])>w){
			FOR(j,0,19)nx[i][j]=0;
			continue;
		}
		int low=i,high=n;
		while(low<high){
			int mid = 1 + (low+high)/2;
			if(sz(s[i])+sum[mid]-sum[i]+mid-i <= w)low=mid;else high=mid-1;
		}
		
		nx[i][0]=high+1;
		FOR(j,1,19)nx[i][j]=nx[nx[i][j-1]][j-1];

		int cur=i,now=0;
		for(int j=19;j>=0;--j)if(now+(1<<j)<=r && nx[cur][j]>0)cur=nx[cur][j],now+=(1<<j);
		if(cur-i>best.first)best = mp(cur-i,i);
	}

	int i=best.second;
	if(i==0)return 0;
	FOR(it,1,r){
		if(i>n)break;
		int to = nx[i][0];
		if(to==0)break;
		for(int j=i;j<to;++j){
			if(j==i)cout<<s[i];else cout<<" "<<s[j];
		}
		cout<<endl;
		i = to;
	}
}  