#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll MX=30;
struct trie{
    trie *ptr[2];
    vector<ll> nodes;
    trie(){
        memset(ptr,0,sizeof(ptr));
    }
    void add(ll val,ll lvl=MX-1){
        nodes.push_back(val);
        if(lvl==-1)return;
        ll bit=(val>>lvl)&1;
        if(!ptr[bit])ptr[bit]=new trie();
        ptr[bit]->add(val,lvl-1);
    }
    ll query_min(ll val,ll lvl){
        if(lvl==-1)return 0;
        ll bit=(val>>lvl)&1;
        if(ptr[bit])return ptr[bit]->query_min(val,lvl-1);
        else return (1ll<<lvl)+ptr[1-bit]->query_min(val,lvl-1);
    }
    ll func(ll lvl=MX-1){
        if(lvl==-1)return 0;
        if(!ptr[0])return ptr[1]->func(lvl-1);
        if(!ptr[1])return ptr[0]->func(lvl-1);
        ll ans=ptr[0]->func(lvl-1)+ptr[1]->func(lvl-1);
        ll mn=(1e15);for(auto &ele:ptr[1]->nodes)mn=min(mn,(1ll<<lvl)+ptr[0]->query_min(ele,lvl-1));
        return ans+mn;
    }
}a;
int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    ll n;cin>>n;
    for(ll i=0,x;i<n;i++)cin>>x,a.add(x);
    cout<<a.func();
}

