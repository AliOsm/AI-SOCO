// Mikaeel_noob_e_sag_e

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn=1e5+10,mod=1e9+7,inf=1e9;

int n,k;

vector<pair<int,pii> > v[maxn];
vector<int> vid[maxn];

void add_edge(int a,int b,int c,int d){
    vid[a].PB(sz(v[b]));
    vid[b].PB(sz(v[a]));
    v[a].PB({b,{c, d}});
    v[b].PB({a,{0,-d}});
}

int arr[maxn],ds[maxn],par[maxn];
bool inq[maxn];

int spfa(int src,int snk){
    int L=0,R=0;
    fill(ds,ds+maxn,inf);memset(par,-1,sizeof par);memset(inq,0,sizeof inq);
    arr[R++]=src; inq[src]=1; ds[src]=0;
    while(L!=R){
	int u=arr[L++]; if(L==maxn) L=0;
	inq[u]=0;
	for(int i=0;i<sz(v[u]);i++){
	    int y=v[u][i].F,w=v[u][i].S.F,c=v[u][i].S.S;
	    if(w>0 && ds[y]>ds[u]+c){
		ds[y]=ds[u]+c,par[y]=u;
		if(!inq[y]) inq[y]=1,arr[R++]=y;
		if(R==maxn) R=0;
	    }
	}
    }
    return ds[snk];
}

int pt[maxn];

int dfs(int u,int snk,int f){
    if(u==snk) return f;
    int ans=0;
    while(pt[u]<sz(v[u])){
	int y=v[u][pt[u]].F,&w=v[u][pt[u]].S.F,&w2=v[y][vid[u][pt[u]]].S.F,c=v[u][pt[u]].S.S;
	if(w>0 && par[y]==u && ds[u]+c==ds[y]){
	    int num=dfs(y,snk,min(w,f-ans));
	    w-=num;w2+=num;ans+=num;
	}
	if(ans==f) break;
	pt[u]++;
    }
    return ans;
}

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);   
    cin>>n>>k;
    for(int i=0;i<n;i++){
	for(int j=0;j<n;j++){
	    int x;cin>>x;
	    if(x>0) add_edge(i,j,x,0),add_edge(i,j,k,1);
	}
    }
    int num=0,ans=0;
    while((num=spfa(0,n-1))<=k){
	memset(pt,0,sizeof pt);
	int f=dfs(0,n-1,inf);
	if(num!=0 && f>(k/num)){
	    f=k/num;
	    ans+=f;
	    break;
	}
	else{
	    ans+=f;
	    k-=f*num;
	}
    }
    cout<<ans<<endl;
    return 0;
}
