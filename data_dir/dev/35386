#include <bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; i++ )
#define clr( t , val ) memset( t , val , sizeof(t) )

#define all(v)  v.begin() , v.end()
#define pb push_back
#define SZ( v ) ((int)(v).size())

#define mp make_pair
#define fi first
#define se second

#define test() cerr << "hola que hace ?" << endl;
#define DEBUG(x) cerr<<#x<<"="<<x<<endl;
#define DEBUG2(x,y) cerr<<#x<<"="<<x<<" "<<#y<<"="<<y<<endl;

typedef long long ll;
typedef pair< int , int > pii;
typedef vector< int > vi;

const int MAX_N=(int)1e5;
vi vec;
vi G[MAX_N];
int init[MAX_N],goal[MAX_N];
void initGraph(int n){
	REP(i,n)G[i].clear();
}
void dfs(int u,int p,int d,bool flagOdd,bool flagEven){
	bool flag=((d&1)?flagOdd:flagEven);
	if((init[u]^flag)==goal[u]){
		for(auto v:G[u]){
			if(v==p)continue;
			dfs(v,u,d+1,flagOdd,flagEven);
		}
	}else{
		vec.pb(u);
		for(auto v:G[u]){
			if(v==p)continue;
			if(d&1)dfs(v,u,d+1,flagOdd^1,flagEven);
			else dfs(v,u,d+1,flagOdd,flagEven^1);	
		}
	}
}
int main(){
	int n;
	while(scanf("%d",&n)==1){
		initGraph(n);
		REP(i,n-1){
			int u,v;
			scanf("%d%d",&u,&v);
			u--,v--;
			G[u].pb(v);
			G[v].pb(u);
		}
		REP(i,n)scanf("%d",&init[i]);
		REP(i,n)scanf("%d",&goal[i]);
		vec.clear();
		dfs(0,-1,0,0,0);
		printf("%d\n",SZ(vec));
		REP(i,SZ(vec))printf("%d%c",vec[i]+1,(i+1==SZ(vec)?10:32));
	}
}

