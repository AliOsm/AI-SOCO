/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#include<string.h>
#define ll long long
#define pf printf
#define sf scanf
#define ff first
#define ss second
#define clr clear()
#define sz size()
#define pb push_back
#define mk make_pair
#define pi acos(-1)
#define inf 2000000000000000000
#define mod 1000000007
#define ull unsigned long long int
#define f(i,k,n) for(i=k;i<n;i++)
#define fr(i,n,k) for(i=n;i>=k;i--)
#define ent(a) scanf("%lld",&a)
#define ent2(a,b) scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a) memset(a,0,sizeof(a))
#define vec(v,s) vector<ll>v[s]
#define arr(a,s) ll a[s];
//knight and king//
int dr[]= {2,2,-2,-2,1,-1,1,-1};
int dc[]= {1,-1,1,-1,2,2,-2,-2};
int dr1[]= {0,0,1,1,1,-1,-1,-1};
int dc1[]= {1,-1,1,0,-1,0,1,-1};
int dr2[]= {0,0,1,-1};
int dc2[]= {1,-1,0,0};
////////////////////////////
using namespace std;
#define ma 10005
ll b[ma],node,p,m;
ll dp[ma][105],dp1[ma][105];
string t;
vector<ll>adj[ma];
void dfs(ll x,ll u)
{
   if(x==t.sz)return;

   if(t[x]=='(')
   {
       node++;
      b[node]=u;
     //  cout<<u<<" "<<node<<" "<<"YE"<<endl;
       adj[u].pb(node);
       dfs(x+1,node);
   }
   else if(t[x]==')')
   {
       dfs(x+1,b[u]);
   }
   else if(t[x]=='?')dfs(x+1,u);
   else
   {
       //cout<<u<<" "<<t[x]-'0'+10001<<endl;
       adj[u].pb((t[x]-'0')+10001);
       dfs(x+1,u);
   }

}

ll cal(ll x,ll y);


ll cal1(ll x,ll y)
{
    ll i;
    if(x>10000)
    {
        if(y==0)
        {
            return x-10001;
        }
        return -inf;
    }

    ll &r=dp1[x][y];
    if(r!=-1)return r;

    ll p1=adj[x][0];
    ll q1=adj[x][1];
    r=inf;

    if(p<=m)
    {
        for(i=0;i<=y;i++)
        {
            ll r1=cal1(p1,i);
            ll r2=cal(q1,y-i);
            if(r1!=-inf&&r2!=-inf)r=min(r,r1-r2);
            if(i<y)
            {
                r1=cal1(p1,i);
                r2=cal1(q1,y-i-1);
                if(r1!=-inf&&r2!=-inf)r=min(r,r1+r2);
            }
        }
    }
    else
    {
        for(i=0;i<=y;i++)
        {
            ll r1=cal1(p1,i);
            ll r2=cal1(q1,y-i);
            if(r1!=-inf&&r2!=-inf)r=min(r,r1+r2);
            if(i<y)
            {
                r1=cal1(p1,i);
                r2=cal(q1,y-i-1);
                if(r1!=-inf&&r2!=-inf)r=min(r,r1-r2);
            }
        }

    }
 //   cout<<x<<" "<<y<<" "<<r<<" "<<"Fuck"<<endl;
    return r;

}




ll cal(ll x,ll y)
{
    ll i;
    if(x>10000)
    {
        if(y==0)
        {
            return x-10001;
        }
        return -inf;
    }

    ll &r=dp[x][y];
    if(r!=-1)return r;

    ll p1=adj[x][0];
    ll q1=adj[x][1];
    r=-inf;

    if(p<=m)
    {
        for(i=0;i<=y;i++)
        {
            ll r1=cal(p1,i);
            ll r2=cal1(q1,y-i);
            if(r1!=-inf&&r2!=-inf)r=max(r,r1-r2);
            if(i<y)
            {
                r1=cal(p1,i);
                r2=cal(q1,y-i-1);
                if(r1!=-inf&&r2!=-inf)r=max(r,r1+r2);
            }
        }
    }
    else
    {
        for(i=0;i<=y;i++)
        {
            ll r1=cal(p1,i);
            ll r2=cal(q1,y-i);
            if(r1!=-inf&&r2!=-inf)r=max(r,r1+r2);
            if(i<y)
            {
                r1=cal(p1,i);
                r2=cal1(q1,y-i-1);
                if(r1!=-inf&&r2!=-inf)r=max(r,r1-r2);
            }
        }

    }
 //   cout<<x<<" "<<y<<" "<<r<<" "<<"Fuck"<<endl;
    return r;

}

int main()
{
    ll i,j;
    while(cin>>t)
    {
        cin>>p>>m;
        if(t.sz==1)
        {
            cout<<t[0]-'0'<<endl;
            continue;
        }
        node=1;
        dfs(1,1);
        memset(dp,-1,sizeof(dp));
        memset(dp1,-1,sizeof(dp1));

        ll ans=cal(1,min(p,m));

        cout<<ans<<endl;


    }
    return 0;
}
