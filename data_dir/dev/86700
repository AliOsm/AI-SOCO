#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <cstring>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ll long long
#define ull unsigned long long
#define all(aaa) aaa.begin(), aaa.end()
#pragma warning(disable : 4996)

const int N = 1e5 + 5;
int a[N];

signed main() {
#ifdef HOME
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;


	map<int, int> mp;

	int ans = 0, d = 0;

	for (int i = 0; i < n; i++) {
		int x;
		cin >> x;
		if (a[x] > 0) {
			mp[a[x]]--;
			if (mp[a[x]] == 0)
				mp.erase(a[x]);
		}
		a[x]++;
		if (a[x] == 1)
			d++;
		mp[a[x]]++;
		if (d == 1 || mp.size() == 1 && mp.begin()->first == 1 || mp.size() == 2 && 
			(mp.rbegin()->second == 1 && mp.begin()->first + 1 == mp.rbegin()->first ||
				mp.begin()->first == 1 && mp.begin()->second == 1)) {
			ans = i + 1;
		}
	}

	cout << ans;

	return 0;
}