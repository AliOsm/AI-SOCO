
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 100001;
const ll MOD = 1e9 + 7;

int n, sz[N];
vector<vector<int> > g;

void dfs1(int u, int p) {
	sz[u] = 1;
	for (int i = 0; i < g[u].size(); i++)
		if (g[u][i] != p) {
			dfs1(g[u][i], u);
			sz[u] += sz[g[u][i]];
		}
}

int dfs2(int u, int p) {
	int res = 0;
	for (int i = 0; i < g[u].size(); i++) {
		if (g[u][i] != p && sz[g[u][i]] % 2 == 0) 
			res++;
		if (g[u][i] != p)
			res += dfs2(g[u][i], u);
	}
	return res;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif

	scanf("%d", &n);

	if (n & 1) {
		puts("-1");
		return 0;
	}

	g.resize(n);
	for (int i = 1, a, b; i < n; i++) {
		scanf("%d%d", &a, &b);
		a--, b--;
		g[a].push_back(b);
		g[b].push_back(a);
	}

	dfs1(0, -1);
	printf("%d\n", dfs2(0, -1));
	return 0;
}