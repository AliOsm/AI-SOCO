#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath> 
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<assert.h>
#include<math.h>
#include<memory.h>
#include <stdlib.h>
#include<functional>
#include<sstream>	
#include<cstdio>
using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)

#define mp make_pair
#define pb push_back
#define fastIO ios::sync_with_stdio(false)
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
#define scfl(xx) scanf("%I64d",&xx)
#define All(a) a.begin(), a.end()
#define LSOne(S) (S & (-S))
#define NIL 0
#define INF (1<<28)

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef long double ld;


int dx[] = { 0, 1, 0, -1, -1, -1, 1, 1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };


int dp[200010][2];
int n;
int a[200010];
int solve(int i, int j){
	if (i == n)return j == 0;
	int &ret = dp[i][j];
	if (ret != -1)return ret;
	if (j && a[i] == 0)return 0;
	if (j){
		ret = solve(i + 1, (a[i] - 1) % 2);
	}
	else 
		ret = solve(i + 1, a[i] % 2);
	return ret;
}
int main(){
	//read; write;
	cin >> n;
	int cop = 0;
	rep(i, n){
		cin >> a[i];
		
	}
	memset(dp, -1, sizeof dp);
	solve(0, 0) ? cout << "YES" : cout << "NO";
	return 0;
}