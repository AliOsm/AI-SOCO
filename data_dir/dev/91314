#include <bits/stdc++.h>
using namespace std;
string sum(string str1, string str2) 
{ 
    // Before proceeding further, make sure length 
    // of str2 is larger. 
    if (str1.length() > str2.length()) 
        swap(str1, str2); 
  
    // Take an empty string for storing result 
    string str = ""; 
  
    // Calculate length of both string 
    int n1 = str1.length(), n2 = str2.length(); 
    int diff = n2 - n1; 
  
    // Initially take carry zero 
    int carry = 0; 
  
    // Traverse from end of both strings 
    for (int i=n1-1; i>=0; i--) 
    { 
        // Do school mathematics, compute sum of 
        // current digits and carry 
        int sum = ((str1[i]-'0') + 
                   (str2[i+diff]-'0') + 
                   carry); 
        str.push_back(sum%10 + '0'); 
        carry = sum/10; 
    } 
  
    for (int i=n2-n1-1; i>=0; i--) 
    { 
        int sum = ((str2[i]-'0')+carry); 
        str.push_back(sum%10 + '0'); 
        carry = sum/10; 
    }
    if (carry) 
        str.push_back(carry+'0');
    reverse(str.begin(), str.end());
    return str; 
}

string spc(string s , int r)
{
		string s1 = s.substr(0,r) , s2 = s.substr(r) , s3 = s.substr(0,r-1) , s4 = s.substr(r-1) ;
		string sx = sum(s1,s2) ,  sy = sum(s3,s4);
		if(sx.length()==sy.length())
				cout<< min(sum(s1,s2),sum(s3,s4)) ;
			else if(sx.length()<sy.length())
				cout << sx;
			else
				cout << sy;
		return "";
}
int main() 
{
	int n ;
	string s , s1 , s2,s3,s4;
	cin >> n >> s;
	int l = 0 , r = n ;
	for(int i = 0 ; i < n ; i++)
	{
		if(i<=(n/2) && s[i]!='0')
			l = i;
		else if(i>=(n+1)/2 && s[i]!='0')
		{
			r = i;
			break;
		}
	}
	if(n%2==1 && r==(n+1)/2 && s[r-1]!='0')
	{
		cout << spc(s,r);
	}
	else
	{
		if(n%2==0 && s[r-1]!='0')
		{
			s1 = s.substr(0,r-1) , s2 = s.substr(r-1);
			cout << sum(s1,s2);
		}
		else
		{
			s1 = s.substr(0,r) , s2 = s.substr(r), s3 = s.substr(0,l) , s4 = s.substr(l);
			string sx = sum(s1,s2),sy=sum(s3,s4);
			if(sx.length()==sy.length())
				cout<< min(sum(s1,s2),sum(s3,s4)) ;
			else if(sx.length()<sy.length())
				cout << sx;
			else
				cout << sy;
		}
	}
	return 0;
}