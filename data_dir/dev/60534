#include <bits/stdc++.h>

using namespace std;

bool passable(const vector<int> &blockers, const set<int> &edges) {
    for(int blocked : blockers){
        if(!edges.count(blocked)) return false;
    }
    return true;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    int n, m;
    cin >> n >> m;
    
    vector<int> p(n);
    for(int i = 0; i < n; i++){
        cin >> p[i];
        --p[i];
    }
    
    set<int> edges[n];
    
    for(int i = 0; i < m; i++){
        int u, v;
        cin >> u >> v;
        u--, v--;
        edges[u].insert(v);
    }
    
    vector<int> blockers = {p.back()};
    for(int i = n-2; i >= 0; i--){
        if(passable(blockers, edges[p[i]])) continue;
        blockers.push_back(p[i]);
    }
    
    cout << n - (blockers.size()) << endl;
    
    return 0;
}
