#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#include <bits/stdc++.h>

using namespace std;

using ii = pair<int,int>;
using ll = long long;

const int N = 1e6 + 5;
const int mod = 1e9 + 7;

double dp[2][705];
double vis[2][705];
int n;
double k;

double solve(int idx, int curLevel) {
	if (idx == n)
		return 0.0;
	double &ret = dp[idx&1][curLevel];
	if (vis[idx&1][curLevel])
		return ret;
	vis[idx&1][curLevel] = 1;
	ret = solve(idx + 1, curLevel)
			* (((k - 1) / k) + 1 / k * (curLevel * 1.0 / (curLevel + 1)));
	ret += 1.0 / k * (curLevel * 1ll * (curLevel + 1) / 2) * 1.0
			/ (curLevel + 1);
	if (curLevel < 700) {
		ret += solve(idx + 1, curLevel + 1) * (1 / k) * (1.0 / (curLevel + 1));
		ret += 1.0 / k * (curLevel) * (1.0 / (curLevel + 1));
	}
	return ret;
}

int main() {
	cin >> n >> k;
	for(int i = n-1; i >= 0; --i){
		memset(vis[i&1], 0, sizeof vis[i&1]);
		for(int j = 1; j <= 700; j++){
			solve(i,j);
		}
	}
	cout << fixed << setprecision(9) << solve(0,1) * k << '\n';
	return 0;
}
