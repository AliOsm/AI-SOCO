#include <bits/stdc++.h>

#define pb push_back
#define ppb pop_back
#define mp make_pair

#define ll long long
#define uns unsigned

#define F first
#define S second

#define sz(x) (int) x.size()
#define all(x) x.begin(), x.end()
#define sqr(x) ((x) * (x))

#define sf scanf
#define pf printf
#define nl '\n'
#define rt return

#define NeedForSpeed ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define Fname "segmentupdate"
#define RockyBalboa
//#define TNT

using namespace std;

typedef pair <int, int> pi;
typedef pair <ll, ll> pl;

const int N = 100007;
const int MX = 1000007;
const int MOD = 1000000007;
const int INF = 2000000007;
const long long oo = 1000000000000000007;
const double eps = 1e-9;
const int xi[4] = {-1, 0, 1, 0};
const int yj[4] = {0, 1, 0, -1};

    void IOI2017(){
    #ifdef RockyBalboa
        freopen(Fname".in", "r", stdin);
        freopen(Fname".out", "w", stdout);
    #endif
    #ifdef TNT
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    }


    int n, m, ans;
    int v[1001], sum[1001];
    vector <int> g[1001];
main(){
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        cin >> v[i];
    for (int i = 1, x, y; i <= m; i++){
        cin >> x >> y;
        g[x].pb(y);
        g[y].pb(x);
        sum[x] += v[y];
        sum[y] += v[x];
    }
    while (1){
        int mx = 0, id, ok = 0;
        for (int i = 1; i <= n; i++)
            if (v[i] > mx) mx = v[i], id = i, ok = 1;
        if (!ok) break;
        ans += sum[id];
        for (auto i : g[id]){
            sum[i] -= v[id];
        }
        v[id] = 0;
    }
    cout << ans;
    rt 0;
}
