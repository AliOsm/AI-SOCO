#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<ll>;
using vvi = vector<vi>;
using vb = vector<bool>;
using pii = pair<int, int>;
using vii = vector<pii>;
using vs = vector<string>;
#define all(x) x.begin(),x.end()
#define x first
#define y second
int di[] = {0, 1, 0, -1};
int dj[] = {1, 0, -1, 0};
char dc[] = {'R', 'D', 'L', 'U'};
char dcInv[] = {'L', 'U', 'R', 'D'};

int n;
vector<vii> g;
vs ans;
bool w = false;
vvi vis; // 0 not vis, 1 processing, 2 vis

inline bool valid(int i, int j) {
	return i >= 0 && i < n && j >= 0 && j < n;
}

void dfs(pii node, pii prnt) {
	if (vis[node.x][node.y] == 1) {
		return;
	}

	vis[node.x][node.y] = 1;

	for (int i = 0; i < 4; ++i) {
		pii nxt(node.x + di[i], node.y + dj[i]);
		if (nxt == prnt) continue;
		if (valid(nxt.x, nxt.y) &&
		    g[nxt.x][nxt.y] == g[node.x][node.y] &&
		    vis[nxt.x][nxt.y] == 0) {
			ans[nxt.x][nxt.y] = dcInv[i];
			dfs(nxt, node);
		}
	}

	vis[node.x][node.y] = 2;
}


int main(int argc, char **argv) {
//	ios::sync_with_stdio(false), cin.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif

	cin >> n;
	g.assign(n, vii(n));
	vis.assign(n, vi(n));
	ans.assign(n, string(n, '.'));
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j) {
			cin >> g[i][j].x >> g[i][j].y;
			if (g[i][j].x > 0) {
				g[i][j].x--;
				g[i][j].y--;
			}
		}
	}

	for (int i = 0; i < n && !w; ++i) {
		for (int j = 0; j < n && !w; ++j) {
			if (vis[i][j] == 0 && (g[i][j] == pii(i, j) || g[i][j] == pii(-1, -1))) {
				dfs(pii(i, j), pii(-1, -1));

				if (g[i][j] == pii(-1, -1)) {
					bool found = false;
					for (int k = 0; k < 4; ++k) {
						pii nxt(i + di[k], j + dj[k]);
						if (valid(nxt.x, nxt.y) &&
						    g[nxt.x][nxt.y] == pii(-1, -1)) {
							ans[i][j] = dc[k];
							found = true;
							break;
						}
					}
					if (!found) w = true;
				}
				else {
					ans[i][j] = 'X';
				}
			}
		}
	}

	for (int i = 0; i < n && !w; ++i) {
		for (int j = 0; j < n && !w; ++j) {
			if (vis[i][j] == 0)
				w = true;
		}
	}

	if (w) {
		cout << "INVALID" << endl;
	}
	else {
		cout << "VALID" << endl;
		for (int i = 0; i < n; ++i) {
			cout << ans[i] << endl;
		}
	}


}

