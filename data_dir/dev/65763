/*
Submitted With (^^) by -> Hossam ^_^
 _____________________
|     ___     ___     |
|    (^_^)   (^_^)    |
|   /( | )\_/( | )\   |
|_____|_|_____|_|_____|
*/

#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>

using namespace std;

inline void prep()
{
    cin.tie(0);
    cin.sync_with_stdio(0);
};

#define X first
#define Y second
// #define endl '\n'
#define ll long long
#define inf (0x7fffffffffffffff)
#define all(x) x.begin(), x.end()
#define debug(x) cerr << #x << " = " << (x) << "\n";
#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;
#define SEED (chrono::high_resolution_clock::now().time_since_epoch().count())

const int mod = (int)1e9 + 7;
// const int mod = 998244353;
const int MX = (int)1e5 + 10;

int c[MX];
vector<int> res, g[MX];

void dfs(int x, int par){
    bool ok = true;
    for(auto &y : g[x]){
        if(y == par) continue;
        ok &= c[y];
        dfs(y, x);
    }
    if(ok && c[x]) res.push_back(x);
}

int main(){

    prep();

    int n, root;
    cin >> n;
    
    for(int i = 1; i <= n; ++i){
        int x;
        cin >> x >> c[i];
        if(x == -1){
            root = i;
            continue;
        }
        g[x].push_back(i);
        g[i].push_back(x);
    }

    dfs(root, -1);

    if(res.empty()) return puts("-1"), 0;

    sort(all(res));

    for(auto &x : res) cout << x << " ";

    return 0;
}