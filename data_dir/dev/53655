#include <iostream>
#include <algorithm>
#include <utility>
#include <vector>

#define N 100010

using namespace std;

typedef pair<int, int> p;
vector<p> v;
int dp[N][2];

int main() {
	int n, a, b, pos, mn, ans;

	ios::sync_with_stdio(0);
	cin.tie(NULL);

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a >> b;
		v.push_back(make_pair(a, b));
	}

	sort(v.begin(), v.end());

	dp[0][0] = 0;
	dp[0][1] = 0;
	for (int i = 1; i < n; i++) {
		a = v[i].first;
		b = v[i].second;
		pos = lower_bound(v.begin(), v.end(), make_pair(a - b, 0)) - v.begin();
		dp[i][0] = dp[i-1][1];
		if (v[pos].first >= a - b)
			pos--;
		if (pos >= 0)
			dp[i][1] = dp[pos][1] + i - pos - 1;
		else
			dp[i][1] = i;
	}

	ans = n;
	for (int i = 0; i < n; i++) {
		mn = min(dp[i][0] + n - i, dp[i][1] + n - i - 1);
		ans = min(ans, mn);
	}

	cout << ans << endl;

	return 0;
}