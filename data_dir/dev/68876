#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>
#include <cmath>
#include <numeric>
#include <random>
#include <tuple>

using namespace std;
using ll = long long;
const int N = 1000000000;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
  int n, m;
  cin >> n >> m;
  vector<int> col(n, 0);
  for(int i = 0; i < n; ++i) {
    cin >> col[i];
  }
  col.push_back(N);
  sort(col.begin(), col.end());
  n = (int)col.size();
  vector<int> row;
  for(int i = 0; i < m; ++i) {
    int x1, x2, y;
    cin >> x1 >> x2 >> y;
    if (x1 == 1) {
      row.emplace_back(x2);
    }
  }

  sort(row.begin(), row.end());
  int ret = 0;
  int fc = col.front();
  m = (int)row.size();
  for(int i = 0; i < m; ++i) {
    if (row[i] >= fc) {
      ++ret;
    }
  }

  int j = 0;
  for(int i = 0; i + 1 < n; ++i) {
    if (i > 0 && col[i] == col[i - 1]) continue;
    while(j < m && (row[j] < col[i] || (row[j] >= col[i] && row[j] < col[i + 1]))) {
      ++j;
    }
    ret = min(ret, i + 1 + m - j);
  }
  cout << ret << endl;
	return 0;
}
