#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define sz(a) (lld)((a).size())
#define all(c) (c).begin(),(c).end()             
typedef long double ldb;
typedef long long lld;
const lld MOD = 1e9+7;
const lld INF = 1011111111;
const lld LLINF = 1000111000111000111LL;
const ldb EPS = 1e-10;
const ldb PI = 3.14159265358979323;
using namespace std;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
const lld N = 1000005;
lld ft[N];
void upd(lld x,lld val) {
    for(;x<N;x+=(x&-x)) ft[x] += val;
}
lld query(lld x) {
    lld ret = 0;
    for(;x>0;x-=(x&-x)) ret += ft[x];
    return ret;
}
lld pos[N];
int32_t main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    lld q;
    cin>>q;
    rep(iter,0,q) {
        char type;
        lld x;
        cin>>type>>x;
        if(type=='L') {
            pos[x] =  q-iter;
            upd(q - iter,1);
        }
        else if(type=='R') {
            pos[x] = q+1 + iter;
            upd(q+1 + iter,1);
        }
        else {
            lld ans1 = query(pos[x]-1);
            lld ans2 = query(N-1) - query(pos[x]);
            cout<<min(ans1,ans2)<<endl;
        }
    }
    return 0;
}