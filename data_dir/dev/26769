///** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long int
#define inf ( int  )( 1e9 + 10 )
#define mxs (int)( 1e6 + 10 )
//#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
int t, n, m, i, j, k, a, b, c, d, e, f,num,ans;
string s, s2, s3, s4;
map < string , int > mp;
map < string , int >::iterator it;
vector < string > v , v2;
void brainfuck();
void maker();
int main()
{
    //freopen("genealogy.in","r",stdin);
    //freopen("genealogy.out","w",stdout);
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>t;
    while( t-- )
    {
        v.clear();
        v2.clear();
        mp.clear();
        cin>>n;
        for ( i = 1 ; i <= n; i++ )
        {
            cin>>s;
            mp [ s ]++;
            v.push_back( s );
        }
        ans = 0;
        for ( j = 0 ; j < n; j++ )
        {
            a = mp [ v [ j ] ];
            if ( a > 1 )
            {
                s = v [ j ];
                mp [ s ]--;
                maker();
                v2.push_back( s );
            }
            else v2.push_back( v [ j ] );
        }
        cout<<ans<<"\n";
        for ( i = 0 ; i < n ; i++ )cout<<v2 [ i ]<<"\n";
    }
}
void maker()
{
    for ( i = 0 ; i < 4; i++ )
    {
        char ch = s [ i ];
        s [ i ] = '0';
        s [ i ]--;
        while( s [ i ] + 1 < '9' )
        {
            s [ i ]++;
            if ( mp.find( s ) == mp.end() )
            {
                mp [ s ] = 1;
                ans++;
                return;
            }
        }
        s [ i ] = ch;
    }
}
