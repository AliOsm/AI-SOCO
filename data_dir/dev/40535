#include <bits/stdc++.h>

using namespace std;

const int   dx[4] = {1 , 0 , -1 , 0},
            dy[4] = {0 , -1 , 0 , 1};

int n;
int x1 , y1 , x2 , y2;

vector <pair <int , int> > v1 , v2;

char a[51][51];

void dfs(int x , int y , vector <pair <int , int> > &v)
{
    v.push_back({x , y});
    for (int i = 0; i < 4; i++)
    {
        int X = x + dx[i] , Y = y + dy[i];
        if (X >= 0 && Y >= 0 && x < n && y < n && a[X][Y] == '0')
        {
            a[X][Y] = '2';
            dfs(X , Y , v);
        }
    }
}

long long d(pair <int , int> a , pair <int , int> b)
{
    return  1LL *(a.first - b.first) * (a.first - b.first) +
            1LL *(a.second - b.second) * (a.second - b.second);
}

int main()
{
#ifndef VBH
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    //freopen("" , "r" , stdin);
    //freopen("" , "w" , stdout);
#else
    freopen("input.txt" , "r" , stdin);
#endif
    cin >> n;
    cin >> x1 >> y1 >> x2 >> y2;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> a[i][j];
    x1--; x2--; y1--; y2--;
    a[x1][y1] = '2';
    dfs(x1 , y1 , v1);
    if (a[x2][y2] == '2') exit((cout << 0 , 0));
    dfs(x2 , y2 , v2);
    long long ans = 1e18;;
    for (auto u1: v1)
    {
        for (auto u2: v2)
        {

            ans = min(ans , d(u1 , u2));
        }
    }
    cout << ans;
}
