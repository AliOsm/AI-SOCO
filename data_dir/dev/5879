#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<stdio.h>
#include<map>
#include<set>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
ll gcd(ll a, ll b){
    if (!b)
        return a;
    return gcd(b, a%b);
}
ll lcm(ll a, ll b){
    return b / gcd(a, b)*a;
}
#define FOR(I,N) for(int(i)=0;i<int(N);++i)
#define FORK(I,N,K) for(int(i)=0;i<int(N);i+=int(K))

int n;
vector<pair<int, int> >sol;
vector<char> t;
int N;
bool solve(vector<int>v){
    if (v.size() == 1)
        return v[0] == 24;
    vector<int>g;
    FOR(0, v.size()){
        for (int j = i + 1; j < v.size(); ++j){
            g.clear();
            for (int k = 0; k < v.size(); ++k)
            if (k != i && k != j){
                g.push_back(v[k]);
            }
            g.push_back(v[i] + v[j]);
            sol.push_back(make_pair(v[i], v[j]));
            t.push_back('+');
            if (solve(g))
                return 1;
            sol.pop_back(); t.pop_back();
            g.pop_back();
            g.push_back(v[i] - v[j]);
            sol.push_back(make_pair(v[i], v[j]));
            t.push_back('-');
            if (solve(g))
                return 1;
            sol.pop_back(); t.pop_back();
            g.pop_back();
            g.push_back(v[j] - v[i]);
            sol.push_back(make_pair(v[j], v[i]));
            t.push_back('-');
            if (solve(g))
                return 1;
            sol.pop_back(); t.pop_back();
            g.pop_back();
            g.push_back(v[j] * v[i]);
            sol.push_back(make_pair(v[j], v[i]));
            t.push_back('*');
            if (solve(g))
                return 1;
            sol.pop_back(); t.pop_back();
        }
    }
    return 0;
}
int calc(int a, int b, char c){
    if (c == '+')
        return a + b;
    if (c == '-')
        return a - b;
    return a*b;
}
int main(){
    cin >> n;
    if (n >= 24){
        puts("YES");
        puts("3 - 2 = 1");
        puts("1 - 1 = 0");
        for (int i = 4; i <= n; ++i){
            if (i != 24)
                printf("%d * 0 = 0\n", i);
        }
        printf("%d + 0 = 24\n", 24);
    }
    else if (n <= 3){
        puts("NO");
    }
    else{
        vector<int>v;
        for (int j = 0; j < n; ++j)
            v.push_back(j + 1);
        solve(v);
        puts("YES");
        for (int j = 0; j < sol.size(); ++j)
            printf("%d %c %d = %d\n", sol[j].first, t[j], sol[j].second, calc(sol[j].first, sol[j].second, t[j]));
    }
    cin >> n;
}