#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <map>
#include <cstring>
#include <queue>
#include <deque>
using namespace std;

typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<VI> VVI;

typedef long long Long;

struct Query
{
	int d;
	string st;
};
Query all[100010];

Long P[40];
void init(){
	P[0] = 10;
	for(int i = 1; i < 40; ++i){
		P[i] = (P[i-1]*P[i-1])%1000000007;
	}
}
Long MP10(Long ex)
{
	Long ans = 1;
	for(int i = 0; i < 40; ++i){
		if((1LL<<i) & ex)
			ans = (ans * P[i]) % 1000000007;		
	}
	return ans;
}

// 10^n % M


int main()
{
	init();
	string S;
	cin >> S;
	all[0] = (Query){0 , S};
	int Q;
	cin >> Q;
	Q++;
	for(int i = 1; i < Q; ++i)
	{
		string s; cin >> s;
		int d = s[0]-'0';
		s = s.substr(3);
		all[i] = (Query){d , s};
	}
	Long HS[10] = {0,1,2,3,4,5,6,7,8,9};
	Long SZ[10] = {1,1,1,1,1,1,1,1,1,1};
	for(int i = Q-1; i >= 0; --i){
		string s = all[i].st;
		Long nh = 0 , ns = 0;
		for(int j = 0; j < s.size(); ++j){
			int d = s[j]-'0';
			nh = (nh * MP10(SZ[d]) + HS[d]) % 1000000007;
			ns = (ns + SZ[d]) % (1000000007 - 1);
		}
		HS[all[i].d] = nh;
		SZ[all[i].d] = ns;
	}
	cout << HS[0] << endl;
	
}
