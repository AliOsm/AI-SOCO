#include <bits/stdc++.h>

using namespace std;

#ifdef DGC
#include "debug.h"
#else
#define debug(...) 9715
#endif
typedef long long ll;
typedef long double ld;
typedef complex<double> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		freopen("a.in", "r", stdin);
		//freopen("b.out", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int te;
	cin >> te;
	while (te--)
	{
		string s, t;
		cin >> s >> t;

		int n = s.length(), m = t.length();
		vector<vector<int>> nxt(26, vector<int>(n+1, n));
		for (int i = n-1; i >= 0; --i)
		{
			nxt[s[i]-'a'][i] = i;
			for (int j = 0; j < 26; ++j)
				nxt[j][i] = min(nxt[j][i], nxt[j][i+1]);
		}

		int ans = 0, p = 0;
		while (p < m && ++ans)
		{
			if (nxt[t[p]-'a'][0] == n)
			{
				ans = -1;
				break;
			}

			int i = 0;
			while (p < m && nxt[t[p]-'a'][i] < n)
			{
				i = nxt[t[p]-'a'][i] + 1;
				++p;
			}
		}

		cout << ans << "\n";
	}

	return 0;
}
