//g++  5.4.0
// greedy + dp typo problem
#include<bits/stdc++.h>
using namespace std;

#define ff first
#define ss second
#define int long long
#define pb push_back
#define pii pair< int,int >
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0) ;

int dp[2][101][10001];

signed main()
{
    fast;
    memset(dp,-1,sizeof(dp));
    int n,tot=0;
    cin >> n;
    int a[n] , b[n] , c[n];
    for(int i=0 ; i<n ; i++ )  cin>>a[i] , tot += a[i];
    for(int i=0 ; i<n ; i++ )  cin>>b[i] , c[i]=b[i];
    sort( c,c+n,greater<int>() ) ;
    int mx = -1;
    int sum = 0;
    for(int i=0 ; ; i++ )
    {
        sum += c[i];
        if( sum >= tot )
        {
            mx = i+1;
            cout << mx << ' ' ;
            break;
        }
    }
    dp[1][0][0] = 0;
    for(int i=0 ; i<n ; i++ )
    {
        int cur = i&1;
        int prev = cur^1;
        for(int  j=0 ; j<=mx ; j++ )
        {
            for(int k=0 ; k<=10000 ; k++ )
            {
                dp[cur][j][k] = dp[prev][j][k];
                if( j && k >= b[i] && dp[prev][j-1][k-b[i]] != -1 )
                    dp[cur][j][k] = max( dp[cur][j][k] , dp[prev][j-1][k-b[i]] + a[i] );
            }
        }
    }
    int cur = ((n-1)&1);
    int mx2 = 0;
    for(int i=tot ; i<=10000 ; i++ ) mx2 = max( mx2 , dp[cur][mx][i] );
    cout << tot - mx2 ;   
   
}