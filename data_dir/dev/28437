#include <iostream>
#include <cmath>
#include <string>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <fstream>
#include <cassert>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <numeric>
#include <ctime>
#include <cstdlib>
#include <sstream>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define y1 stupid_y1
#define ll long long
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x)*(x))
#define sz(a) (int)a.size()
#define file "a"

const int inf = (int)1e9;
const double eps = 1e-9;
const double pi = acos(-1.0);


int n, m, c;
int a[100100], b[100100];
int T[400400];

void update(int v, int tl, int tr, int l, int r, int val){
    if ( l > tr || r < tl ) return;
    if ( l <= tl && tr <= r ){
        T[v] += val;
        if ( T[v] >= c ) T[v] -= c;
        return;
    }   
    int mid = (tl + tr)/2;
    update(2*v, tl, mid, l, r, val);
    update(2*v+1, mid + 1, tr, l, r, val);
}


void print(int v, int tl, int tr, int sum){
    sum += T[v];
    if ( sum >= c ) sum -= c;
    if ( tl == tr ){
        printf("%d ", (a[tl] + sum)%c);
        return;             
    }
    int mid = (tl + tr)/2;
    print(2*v, tl, mid, sum);
    print(2*v+1, mid+1, tr, sum);
}


int main () {
    #ifdef LOCAL
    freopen(file".in", "r", stdin);
    freopen(file".out", "w", stdout);
    #endif

    scanf("%d%d%d", &n, &m, &c);

    for (int i=0;i<n;i++) scanf("%d", &a[i]);
    for (int i=0;i<m;i++) scanf("%d", &b[i]);

    for (int j=m;j>=1;j--){
        int I = m - j;
        update(1, 0, n-1, I, I + n - m, b[I]);  
    }

    print(1, 0, n-1, 0);




    #ifdef LOCAL
    cerr << (double)clock() * 1.0 / CLOCKS_PER_SEC << endl;
    #endif

    return 0;
}
