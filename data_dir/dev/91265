#include "bits/stdc++.h"

using namespace std;

#define F first
#define S second
#define ios ios_base::sync_with_stdio(0);cin.tie(0);

typedef long long ll;


int a[10] ;

int cnt;
int chk(int sz)
{
    int tmp[10] = {} ;
    cnt = 0 ;
    while ( sz )
        ++tmp[sz%10],
        sz/=10,++cnt;
    int t = 1 ;
    for ( int i = 0 ; i< 10 ; i++ )
        if ( tmp[i] > a[i] ) return 0 ;
        else if (tmp[i] < a[i]) t = i+1 ;
    return t;
}
int main(){
    string s, t;
    cin >> s >> t ;
    for ( auto c : s ) ++a[c-'0'];
    deque < char > dq;
    for ( auto c : t ) --a[c-'0'], dq.push_back(c) ;
    int tmp ;
    for ( int i = s.size()-1 ; i ; i-- )
    {
        tmp = chk(i) ;
        if ( !tmp ) continue ;
        --tmp;
        if ( dq.front()=='0' && !tmp && i != 1) continue ;
        if ( s.size()-cnt != i ) continue ;
        bool lft=0,rit=0;
        for ( int j = 1 ; j < dq.size() ; j++ )
            if ( dq[j] > dq[0] )
                {lft = 1; break;}
            else if ( dq[j] < dq[0] )
                {rit = 1; break;}
        while ( i )
            --a[i%10],
            i/=10;
        for ( int j = 0 ; j < 10 ; j++ )
            for ( int k = 0 ; k < a[j] ; k++ )
                t.push_back(j+'0') ;
        int tmpA = 0  ;
        for ( int j = 1 ; j < 10 ; j++ ) if ( a[j] ) {tmpA=j;break;} ;
        bool bla = tmpA > 0 && (t[0] == '0' || (a[0] && t[0]-'0' >= tmpA));
        if ( bla ) --a[tmpA];
        int le = -1 ;
        for ( int j = 0 ; j <= t[0]-'0' ; j++ )
            if ( a[j] ) le = j ;
        if ( !bla )
        {
            for ( int j = 0 ; j < 10 ; j++ )
                while ( a[j]-- )
                    dq.push_back(j+'0') ;
        }
        else if ( lft )
        {
            for ( int j = t[0]-'0' ; j >= 0 ; j-- )
                while ( a[j]-- )
                    dq.push_front(j+'0') ;
            for ( int j = t[0]-'0'+1 ; j < 10 ; j++ )
                while ( a[j]-- )
                    dq.push_back(j+'0') ;
        }
        else
        {
            for ( int j = t[0]-'0'-1 ; j >= 0 ; j-- )
                while ( a[j]-- )
                    dq.push_front(j+'0') ;
            for ( int j = t[0]-'0' ; j < 10 ; j++ )
                while ( a[j]-- )
                    dq.push_back(j+'0') ;
        }
        if ( bla ) dq.push_front(tmpA+'0') ;
        string ans = "" ;
        for ( int i = 0 ; i < dq.size() ; i++ )
            ans.push_back(dq[i]) ;
        if ( t[0] == '0' ) cout << ans ;
        else cout << min (ans,t) ;
        break;
    }

    return 0;

}
