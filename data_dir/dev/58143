#include <stdio.h>
#include <string.h>
#include <vector>
#define pb push_back
#define mp make_pair
#define INF 0x3f3f3f3f
#define VI vector<int>
#define pii pair<int,int>
#define matrix vector<VI>
#define LL long long
#define MOD 1000000007
#define ULL unsigned long long
#define uedge(g,a,b) g[a].pb(b), g[b].pb(a)
#define dedge(g,a,b) g[a].pb(b)
using namespace std;
int match[30010];
VI g[30010];
bool v[30010];
int left, right;
bool matching(int cur){
	if(cur == -1) return true;
	v[cur] = true;
	for(int i = 0; i < (int)g[cur].size(); i++){
		int next = g[cur][i];
		if(v[next]) continue;
		v[next] = true;
		if(matching(match[next])){
			match[next] = cur;
			return true;
		}
	}
	return false;
}
int bpm(){
	int flow = 0;
	memset(match, -1, sizeof(match));
	for(int i = 0; i < left; i++){
		memset(v, false, sizeof(v));
		flow += matching(i);
	}
	return flow;
}
int A[110];
int n, m;
int L[30010], R[30010];
int BL[30010], BR[30010];
void f(int g, int& b, int C[], int B[], int pos){
	for(int i = 2; i * i <= g; i++){
		while(g%i == 0){
			C[b] = i; B[b] = pos; b++; g/= i;
		}
	}
	if(g > 1){
		C[b] = g;
		B[b] =pos;
		b++;
	}
}
bool P[110][110];
int main(){
	left = right = 0;
	scanf("%d %d", &n, &m);
	for(int i = 1; i <= n; i++){
		scanf("%d", &A[i]);
		if(i & 1) f(A[i], left, L, BL, i);
		else f(A[i], right, R, BR, i);
	}
	int N = max(left, right);
	for(int i = 0; i < m; i++){
		int x, y;
		scanf("%d %d", &x, &y);
		if(y & 1) swap(x, y);
		P[x][y] = true;
	}
	for(int i = 0; i < left; i++){
		for(int j = 0; j < N; j++){
			if(L[i] == R[j] && P[BL[i]][BR[j]]) g[i].pb(j+left);
		}
	}
	printf("%d\n", bpm());
	return 0;
}