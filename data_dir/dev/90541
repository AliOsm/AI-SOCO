#include <bits/stdc++.h>
using namespace std;
#define Max(a, b) (a > b ? a : b)
#define Min(a, b) (a < b ? a : b)
#define ii pair<int, int>
#define fi first
#define se second
const int MAX = 200000; //2 * 10^5
const int MOD = 1000000007; //10^9 + 7
const int OO = 0x3f3f3f3f; // 0x3f3f3f3f;

int n;
char M[55][55];
bool ans[55][55];

void lef()
{
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
			if(ans[i][j])
				for(int k = j - 1; k >= 0; k--)
				{
					if(M[i][k] != '1') break;
					ans[i][k] = true;
				}
}

void up()
{
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
			if(ans[i][j])
				for(int k = i - 1; k >= 0; k--)
				{
					if(M[k][j] != '1') break;
					ans[k][j] = true;
				}
}

int32_t main()
{
	int t;
	scanf(" %d", &t);
	while(t--)
	{
		scanf(" %d", &n);
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++)
				scanf(" %c", &M[i][j]), ans[i][j] = false;
		
		for(int j = 0; j < n; j++)
			for(int i = n - 1; i >= 0; i--)
			{
				if(M[i][j] != '1') break;
				ans[i][j] = true;
			}
			
		for(int i = 0; i < n; i++)	
			for(int j = n - 1; j >= 0; j--)
			{
				if(M[i][j] != '1') break;
				ans[i][j] = true;
			}
		
		lef();
		up();
		lef();
		up();
		lef();
		up();
		
		bool ok = true;
		
		for(int i = 0; i < n; i++)
			for(int j = 0; j < n; j++)
				if(M[i][j] == '1' and !ans[i][j])
					ok = false;
		
		puts(ok ? "YES" : "NO");
	}
	return 0;
}