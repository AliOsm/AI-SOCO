#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
const int MAXN = 3e5+20000;
const int MAXNk = 1e4+20;
const double eps = 1e-9;
const long long INF = 1e18;
using namespace std;
 

int n,ind;
long  a[MAXN],c[MAXN];
long long aa,bb,nod,y,kol,maxx;
int main()
{
	ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
//	freopen("kotlin.in", "r", stdin);
//	freopen("kotlin.out", "w", stdout);

	cin>>n;
	for (int i=1; i<=n; i++) cin>>a[i];
	
	sort(a+1,a+n+1);
	ind = 0;
	for (int i=2; i<=n; i++) if (a[i]!=a[1])
	{
		ind = i;
		break;
	}
	if (ind == 0)
	{
		cout<<"0 0"<<endl;
		return 0;
	}
	for (int i=ind; i<=n; i++) if (a[i]!=a[ind]) kol++;
	
	if (kol == 0)
	{
		cout<<ind-1<<" "<<abs(a[n] - a[1])<<endl;
		return 0;
	}
	kol = 0;
	ind = 0;
	for (int i=1; i<=n; i++)
	{
		if (a[i]>maxx) maxx = a[i];
	}
	for (int i=1; i<=n; i++) c[i] = maxx - a[i];
	maxx = c[1];
	for (int i=2; i<=n; i++)
	{
		aa = c[i];
		bb = maxx;
		while (aa>0 && bb>0)
		{
			if (aa>bb) aa%=bb;
			else
			bb%=aa;
		}
		nod = aa+bb;
		maxx = nod;
	}
	//cout<<maxx<<endl;
		nod = maxx;
		for (int i=1; i<=n; i++)
		{
		if (a[i]>maxx) maxx = a[i];
		}	
		for (int i=1; i<=n; i++)
		{
			kol = maxx-a[i];
			y+=kol/nod;
		}
		cout<<y<<" "<<nod<<endl;
	
}
