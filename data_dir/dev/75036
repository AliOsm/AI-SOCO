#include <bits/stdc++.h> 
using namespace std;

const int maxN = 7e5 + 7;
const int C = 3e5 + 7;

pair<int,int> p[maxN];

vector <int> spe[maxN];
vector <int> adj[maxN];
vector < pair<int,int> > cev;

int cnt[maxN], w[maxN], num[maxN];

main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i)
		cin >> p[i].first >> p[i].second;
	sort(p, p + n);
	for (int i = 0; i < n; ++i)
		spe[p[i].second - p[i].first + C].push_back(i);
	for (int i = 0; i < n; ++i) {
		cin >> w[i];
		cnt[w[i] + C] ++;
	}
	for (int i = n - 1; i >= 0; --i) {
		if (spe[w[i] + C].empty()) {
			cout << "NO\n";
			return 0;
		}
		num[spe[w[i] + C].back()] = i;
		spe[w[i] + C].pop_back();
	}
	for (int i = 0; i < n; ++i) {
		int pos = lower_bound( p, p + n, make_pair(p[i].first + 1, p[i].second) ) - p;
		if (pos >= 0 && pos < n && p[pos].first == p[i].first + 1 && p[pos].second == p[i].second)
			adj[i].push_back(pos);
		pos = lower_bound( p, p + n, make_pair(p[i].first, p[i].second + 1) ) - p;
		if (pos >= 0 && pos < n && p[pos].first == p[i].first && p[pos].second == p[i].second + 1)
			adj[i].push_back(pos);
	}
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < adj[i].size(); ++j) {
			int u = adj[i][j];
			if (num[u] < num[i]) {
				cout << "NO\n";
				return 0;
			}
		}
	}
	cout << "YES\n";
	for (int i = 0; i < n; ++i)
		cev.push_back( make_pair(num[i], i) );
	sort(cev.begin(), cev.end());
	for (int i = 0; i < n; ++i)
		cout << p[cev[i].second].first << " " << p[cev[i].second].second << "\n";
}
