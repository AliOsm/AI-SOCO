#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>

using namespace std;

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n, m, k;
	cin >> n >> m >> k;
	vector<pair<int, string>> ans;
	auto out = [&](int cnt, string s) {
		int rcnt = min(cnt, k / (int)s.size());
		if (rcnt > 0) {
			ans.push_back({rcnt, s});
		}
		k -= rcnt * s.size();
		if (rcnt < cnt && k <= (int)s.size()) {
			for (int i = 0; i < k; i++) {
				ans.push_back({1, string(1, s[i])});
			}
			k = 0;
		}
	};
	int can = 4 * m * n - 2 * m - 2 * n;
	if (can >= k) {
		cout << "YES\n";
		out(n - 1, "D");
		out(n - 1, "U");
		if (m > 1) out(1, "R");
		for (int i = 1; i < m; i++) {
			out(n - 1, "DLR");
			out(n - 1, "U");
			if (i + 1 < m) out(1, "R");
		}
		out(m - 1, "L");
		assert(k == 0);
		cout << ans.size() << endl;
		for (auto [f, s] : ans) {
			cout << f << ' ' << s << '\n';
		}
	} else {
		cout << "NO\n";
	}
}
