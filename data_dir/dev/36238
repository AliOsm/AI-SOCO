#include <iostream>
#include <iomanip>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <string>
#include <assert.h>
#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <bitset>
#include <deque>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <numeric>
using namespace std;

typedef long long ll;

const int N = 1e5;
int n, m, a[N], b[N], money;

ll check(int mid){
	ll need = 0;
	for (int i = 0; i < mid; ++i)
		need += b[i];
	ll res = 0, l = 0, r = mid - 1;
	while (need >= money && l < mid){
		ll add = min(a[l++], b[r--]);
		add = min(add, need - money);
		res += add;
		need -= add;
	}
	if (need > money)
		res = -1;
	return res;
}

int main(int argc, char **argv) {
//	freopen("in.txt", "r", stdin);
	scanf("%d%d%d", &n, &m, &money);
	for (int i = 0; i < n; ++i)
		scanf("%d", &a[i]);
	for (int i = 0; i < m; ++i)
		scanf("%d", &b[i]);
	sort(a, a + n);
	reverse(a, a + n);
	sort(b, b + m);
	int l = 1, r = min(n, m);
	pair<int, ll> sol(0, 0);
	while (l <= r){
		int mid = (l + r) >> 1;
		ll need = check(mid);
		if (need != -1){
			sol = make_pair(mid, need);
			l = mid + 1;
		} else
			r = mid - 1;
	}
	printf("%d %lld\n", sol.first, sol.second);
	return 0;
}