#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ll long long int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=3e5+5;
ll f[M];
ll lf=0;
std::vector<ll> vtr[M];
ll dfs(ll x)
{
	if(sz(vtr[x])==0)
	{
		lf++;
		return 1;
	}
	ll vl;
	if(f[x]==0)
		vl=0;
	else
		vl=1e9;
	for(auto u:vtr[x])
	{
		if(f[x]==0)
			vl+=dfs(u);
		else
			vl=min(vl,dfs(u));
	}
	return vl;
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=1;i<=n;i++)
		cin>>f[i];
	for(ll i=1;i<n;i++)
	{
		ll p;
		cin>>p;
		vtr[p].pb(i+1);
	}
	ll z=dfs(1);
	cout<<lf+1-z<<"\n";
	return 0;
}