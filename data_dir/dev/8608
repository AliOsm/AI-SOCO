#include<bits/stdc++.h>
#define F first
#define S second
using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
typedef vector<vvvi> vvvvi;

int n, m;
vvi mat;

vi ans;

bool solve(int k) {
    int c0 = 0, c1 = 0, c01 = 0;
    for (int i = 0; i < n; ++i) {
        int cur = 0;
        for (int j = 0; j < m; ++j) cur += (mat[i][j] & k) > 0;
        if (cur == 0) c0++;
        else if (cur == m) c1++;
        else c01++;
    }
    if (c1%2 || c01 > 0) {
        if (c1%2 == 0) c01 = 1;
        else c01 = 0;
        for (int i = 0; i < n; ++i) {
            int cur = 0;
            for (int j = 0; j < m; ++j) cur += (mat[i][j] & k) > 0;
            if (cur == 0 || cur == m) ans.push_back(1);
            else {
                for (int j = 0; j < m; ++j) {
                    if ((mat[i][j] & k) > 0 == c01) {
                        ans.push_back(j+1);
                        c01 = max(0, c01 - 1);
                        break;
                    }
                }
            }
        }
        return true;
    } else return false;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m;
    mat = vvi(n, vi(m));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) cin >> mat[i][j];
    } 
    for (int i = 1; i < 1024; i <<= 1) {
        if (solve(i)) {
            cout << "TAK\n";
            for (int j = 0; j < n; ++j) cout << ans[j] << " ";
            cout << "\n";
            return 0;
        }
    }
    cout << "NIE\n";
    return 0;
}