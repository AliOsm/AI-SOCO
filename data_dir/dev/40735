#pragma GCC optimize("O3")
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef  vector<int> vi;
typedef  pair<int,int> pii;
typedef  pair<int,string> pis;
double   pi=3.1415926535898;
#define speed      ios::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
#define lop(i,n)   for(int i=0;i<int(n);i++)
#define rep(i,a,b) for(int i=a;i<=int(b);++i)
#define rng(i,a,b) for(int i=a;i>=int(b);i--)
#define ms(x,a)    memset(x,a,sizeof(x))
#define all(x)     (x).begin(),(x).end()
#define sz(x)      int(x.size())
#define pb         push_back
#define r0         return 0;
#define CC         continue;
#define bb(x)      cerr<< x <<endl;
#define F          first
#define S          second       //  __builtin_popcount;
//freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
const ll M  = 1e9+7 ;
//const int N = 111;
const int inf = 2e9+7;
const double eps = 1e-7;
//////////////////////    Hi    ^_^  hack me if you can :P
string ys = "YES\n";
string no = "NO\n" ;

int n, a, b;
int mxs = 0;
int ans = 0;
int x[111] ;
int y[111] ;
int s[111] ;
bool ok(int i,int j)
{
    bool ok = 0;
    if (x[i]+x[j]<=a && max(y[i],y[j])<=b) ok = 1;

    if (x[i]+y[j]<=a && max(y[i],x[j])<=b) ok = 1;

    if (y[i]+x[j]<=a && max(x[i],y[j])<=b) ok = 1;

    if (y[i]+y[j]<=a && max(x[i],x[j])<=b) ok = 1;

    swap(a,b);
    if (x[i]+x[j]<=a && max(y[i],y[j])<=b) ok = 1;

    if (x[i]+y[j]<=a && max(y[i],x[j])<=b) ok = 1;

    if (y[i]+x[j]<=a && max(x[i],y[j])<=b) ok = 1;

    if (y[i]+y[j]<=a && max(x[i],x[j])<=b) ok = 1;
    swap(a,b);
    return ok;
}
int main()
{
    speed;
    cin >> n >> a >> b;
    mxs = a*b;
    rep(i,1,n)
    {
        cin >> x[i] >> y[i] ;
        s[i] = x[i]*y[i];
    }
    rep(i,1,n)
    {
        rep(j,i+1,n)
        {
            if (s[i]+s[j]<=mxs)
            {
                if (ok(i,j))
                {
                    ans = max(ans,s[i]+s[j]);
                }
            }
        }
    }
    cout << ans << endl;
    return 0;
}
