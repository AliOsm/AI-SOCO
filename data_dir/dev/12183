#define _CRT_SECURE_NO_WARNINGS
#include<bits\stdc++.h>

using namespace std;

#define Files


#define rdi(i)          scanf("%d", &i)
#define rdii(i, j)      scanf("%d%d", &i, &j)
#define rep(i, v)       for(int i=0;i<v.size();++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)          ((v).begin()), ((v).end())
#define clr(v, d)       memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e8;
const ll OOL = 1e16;
const ll MOD = 1e9 + 7;

#define pb                  push_back
#define MP                  make_pair
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
ull power(ull a, ull b){ if (b == 0) return 1; ull ans = power(a, b / 2); ans = (ans * ans) % MOD; if (b & 1) ans = (ans * a) % MOD; return ans; }
typedef pair<ll, ll > pp;



int main() {
#ifdef Filesx
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);

	vector<pair<int, pair<int, pair<int, int> > > > v(4);
	lp(i, 4){
		cin >> v[i].first >> v[i].second.first >> v[i].second.second.first >> v[i].second.second.second;
		if (v[i].first > v[i].second.second.first) swap(v[i].first, v[i].second.second.first), swap(v[i].second.first, v[i].second.second.second);
		else if (v[i].first == v[i].second.second.first && v[i].second.first > v[i].second.second.second) swap(v[i].first, v[i].second.second.first), swap(v[i].second.first, v[i].second.second.second);
		if (v[i].first == v[i].second.second.first && v[i].second.first == v[i].second.second.second) return cout << "NO" << endl, 0;
	}
	sort(all(v));

	// parallel
	if (v[0].first != v[0].second.second.first) return cout << "NO" << endl, 0;
	if (v[1].second.first != v[1].second.second.second) return cout << "NO" << endl, 0;
	if (v[2].second.first != v[2].second.second.second) return cout << "NO" << endl, 0;
	if (v[3].first != v[3].second.second.first) return cout << "NO" << endl, 0;

	// same point
	if (v[0].first != v[1].first || v[0].second.first != v[1].second.first) return cout << "NO" << endl, 0;
	if (v[0].second.second.first != v[2].first || v[0].second.second.second != v[2].second.first) return cout << "NO" << endl, 0;
	if (v[1].second.second.first != v[3].first || v[1].second.second.second != v[3].second.first) return cout << "NO" << endl, 0;
	if (v[2].second.second.first != v[3].second.second.first || v[2].second.second.second != v[3].second.second.second) return cout << "NO" << endl, 0;

	cout << "YES" << endl;

	return 0;

}