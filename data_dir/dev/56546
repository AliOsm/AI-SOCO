#include <bits/stdc++.h>

using namespace std;
int n, l, v1, v2, k;
double searchDropoff(double gone, double arrivalTime, double takeoffPlace) {
	double lower = takeoffPlace, upper = l, ret = -1;
	for (int i = 0; i < 60; ++i) {
		double dropoffPlace = (lower + upper) / 2;
		double busTime = (dropoffPlace - takeoffPlace) / v2;
		double walkTime = (l - dropoffPlace) / v1;
		if (walkTime + gone + busTime <= arrivalTime) {
			ret = dropoffPlace;
			upper = dropoffPlace;
		} else {
			lower = dropoffPlace;
		}
	}
	return ret;
}
double searchTakeoff(double walkPlace, double busPlace) {
	double lower = 0, upper = busPlace / v1, ret = -1;
	for (int i = 0; i < 60; ++i) {
		double time = (lower + upper) / 2;
		if (walkPlace + v1 * time <= busPlace - v2 * time) {
			ret = time;
			lower = time;
		} else {
			upper = time;
		}

	}
	return walkPlace + ret * v1;
}
double searchArrival() {
	double lower = 0, upper = l / (double) v1, ret = -1;
	for (int i = 0; i < 60; ++i) {
		double arrivalTime = (lower + upper) / 2;
		double timePassed = 0;
		double prev = 0;
		bool valid = true;
		for (int j = 0; j < ceil(n / (double) k); ++j) {
			double walkPlace = timePassed * v1;

			double takeoffPlace = searchTakeoff(walkPlace, prev); //walkPlace + (prev - walkPlace) / (v2 + v1);
			timePassed += (prev - takeoffPlace) / v2; // back

			double dropoffPlace = searchDropoff(timePassed, arrivalTime, takeoffPlace);

			timePassed += (dropoffPlace - takeoffPlace) / v2; // forward

			if (dropoffPlace == -1) {
				valid = false;
				break;
			}
			prev = dropoffPlace;
		}

		if (valid) {
			ret = arrivalTime;
			upper = arrivalTime;
		} else
			lower = arrivalTime;
	}

	return ret;
}


int main() {
#ifndef ONLINE_JUDGE
	freopen("C:\\Users\\Omar Mohamed\\ClionProjects\\Go\\input.in", "r", stdin);
#endif
	scanf("%d%d%d%d%d", &n, &l, &v1, &v2, &k);
	double result = searchArrival();
	printf("%.7lf", result);
	return 0;
}
