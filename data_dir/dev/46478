///God help me.
///Created by Al-amin.
///Time : 2018-07-08-21.31

#
 #include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mp make_pair
#define sz(x) (int)(x).size()
#define all(x) (x).begin(),(x).end()
#define pb push_back
#define ii pair<int,int>
#define INF 100000000
int dist[3][1005][1005],n,m;
queue<ii> q;
char grid[1005][1005];
int dirx[]={1,0,-1,0};
int diry[]={0,1,0,-1};
bool in(int x,int y) {
	if (x<0||y<0||x>=n||y>=m||grid[x][y]=='#') return 0;
	return 1;
}
void bfs(int s) {
	while(!q.empty()) q.pop();
	for (int i=0;i<n;i++) {
		for (int j=0;j<m;j++) {
			if (grid[i][j]-'1'==s) q.push(mp(i,j)),dist[s][i][j]=0;
			else dist[s][i][j]=INF;
		}
	}
	while(!q.empty()) {
		ii p=q.front();
		int x=p.first,y=p.second;
		q.pop();
		for (int i=0;i<4;i++) {
			int nx=x+dirx[i],ny=y+diry[i];
			if (in(nx,ny)) {
				int c=!(grid[x][y]>='1'&&grid[x][y]<='3');
				if (dist[s][nx][ny]>dist[s][x][y]+c) {
					dist[s][nx][ny]=dist[s][x][y]+c;
					q.push(mp(nx,ny));
				}
			}
		}
	}
}
int main() {
	scanf("%d%d",&n,&m);
	for (int i=0;i<n;i++) scanf("%s",grid[i]);
	for (int i=0;i<3;i++) bfs(i);
	int ans=INF;
	for (int i=0;i<n;i++) {
		for (int j=0;j<m;j++) {
			if (in(i,j)) {
				int c=!(grid[i][j]>='1'&&grid[i][j]<='3');
				ans=min(ans,c+dist[0][i][j]+dist[1][i][j]+dist[2][i][j]);
			}
		}
	}
	printf("%d\n", (ans>=INF)?-1:ans);
}
