/*"Everything in the universe is balanced. Every disappointment
   you face in life will be balanced by something good for you!
                Keep going, never give up."						*/
#include "bits/stdc++.h"
using namespace std;

#define ll long long int
#define rep(i,a,b) for(int i=a;i<=b;++i)
#define nl '\n'
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define pb push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
const ll p_mod=9999999999999983;
const long double pi = 3.14159265358979323;
const ll N=5e3+9;
const ll mod=1e9+7;

//ll powerk(ll x, ll y){if(y==0)return 1;if(y==1)return x;if(y&1) return ((powerk((x*x)%mod, y/2)%mod)*x)%mod;else return powerk((x*x)%mod,y/2)%mod;}

struct trie
{
	int val=0;
	trie* next[2]={NULL};
};

trie* head= new trie;

void add(ll val, ll t)
{
	ll a[36]={},p=1;
	while(val)
	{
		a[p]=val%2;
		p++;
		val/=2;
	}
	trie* temp=head;
	repd(i,35,1)
	{
		if(a[i]==1)
		{
			if(temp->next[1]==NULL)
				temp->next[1]=new trie;
			temp = temp->next[1];
			temp->val+=t;
		}
		else
		{
			if(temp->next[0]==NULL)
				temp->next[0]=new trie;
			temp = temp->next[0];
			temp->val+=t;
		}
	}
}

ll query(ll val)
{
	ll a[36]={},p=1, ans[36]={},q=1;
	while(val)
	{
		a[p]=val%2;
		p++;
		val/=2;
	}
	trie*temp= head;
	repd(i,35,1)
	{
		if(a[i]==1)
		{
			if(temp->next[0]==NULL)
			{
				ans[i]=0;
				temp = temp->next[1];
			}
			else  
			{
				
				if(temp->next[0]->val>0)
				{	ans[i]=1;
					temp = temp->next[0];
				}
				else temp=temp->next[1];
			}
		}

		else
		{
			if(temp->next[1]==NULL)
			{
				ans[i]=0;
				temp = temp->next[0];
			}
			else  
			{
				if(temp->next[1]->val>0)
				{	ans[i]=1;
					temp = temp->next[1];
				}
				else temp=temp->next[0];
			}
		}

		//cout<<temp->val;
	}
	ll pp= 1, sum=0;
	rep(i,1,35)
	{
		sum+= pp*ans[i];
		pp*=2;
	}
	return sum;
}

void solve()
{    
	ll n;
	cin>>n;
	add(0,1);
	rep(i,1,n)
	{
		char ch;
		ll x;
		cin>>ch>>x;
		if(ch=='+')
			add(x,1);
		else if(ch=='-')
			add(x,-1);
		else 
			cout<<query(x)<<nl;
	}

}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll t=1;
    //pre();
    //cin>>t;
    //if(t^1)exit(0);
    while(t--)
       solve();
}

