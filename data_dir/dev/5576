/*               ______  ______
 \      / |\   |    |    |       |    |  |   |
  \    /  | \  |    |    |____   |____|  |___|
   \  /   |  \ |    |        |   |    |  |   |
    \/    |   \|    |   _____|   |    |  |   |

  -----------IIT Indore----------*/
#include<bits/stdc++.h>
#define rep(i,start,lim) for(long long i=start;i<lim;i++)
#define repd(i,start,lim) for(long long i=start;i>=lim;i--)
#define MOD 1000000007
#define INF 1000000000000000000
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define sz(a) lld((a).size())
#define eb emplace_back
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define br printf("\n")
#define bit(x,i) (x&(1<<i))
#define TRACE
#ifdef TRACE
#define trace1(x)                cerr<<#x<<": "<<x<<endl;
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
#define N 100005
lld total,child[N],parent[N],tot=0;
set<lld> adj[N];
char ans[N];
void dfs1(lld curr,lld par)
{
	child[curr]=1,total++;
	for(auto i:adj[curr]) if(i!=par) dfs1(i,curr),child[curr]+=child[i];
}
lld dfs2(lld curr,lld par)
{
	for(auto i:adj[curr]) if(i!=par and child[i]>(total/2)) return dfs2(i,curr);
	return curr;
}
void decompose(lld curr,lld par,char c)
{
	total=0,dfs1(curr,curr);
	lld centroid=dfs2(curr,curr);
	if(par==0) par=centroid;
	parent[centroid]=par,ans[centroid]=c;
	for(auto i:adj[centroid]) adj[i].erase(centroid),decompose(i,centroid,c+1);
	adj[centroid].clear();
}
int main()
{
	lld n,x,y;
	scan(n);
	rep(i,1,n)
	{
		scan(x),scan(y);
		adj[x].insert(y),adj[y].insert(x);
	} 	
	decompose(1,0,'A');
	rep(i,1,n+1) cout<<ans[i]<<" ";
	return 0;
}


