#include<bits/stdc++.h>
using namespace std;
#define ll long long int
ll n , m , a , b , c , i , j , q , pos , rem , d , x ;
ll ar [ 200100 ] , knight [ 200100 ] , ans [ 200100 ] , sum [ 200100 ] ;
deque < ll > dq;
ll low_bound(ll low, ll high, ll e)
{
    if ( low < 0) return 0;
    if (low >= high )
    {
      if ( e <= sum[low] ) return low;
      return low+1;
    }
    ll mid = ( low+high)/2;
    if ( e > sum[mid])return low_bound(mid+1,high,e);
    return low_bound(low,mid,e);

}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin>>n>>q;
    for ( i = 1; i <= n; i++ )
    {
        cin>>knight [ i ];
        sum [ i ] = sum [ i - 1 ] + knight [ i ];
    }
    for ( i = 1; i <= q; i++ )
    {
        cin>>a;
        dq.push_back( a );
    }
    pos = 1;
    ll o_o = 1;
    while ( !dq.empty() )
    {
        a = dq.front();
        x = a;
        dq.pop_front();
        b = a + sum [ pos - 1 ] +  rem ;
        c = low_bound( pos, n, b );
        if ( c > n )c = n;
        else if ( sum [ c ] > b )c--;
        //cout<<c<<" lol "<<rem<<endl;
        a += rem;
        rem = 0;
        d = sum [ c ] - sum [pos-1];
        a -= d;
        if ( a >= 0 )
        {
            pos = c + 1;
            rem = a;
        }
        else rem = abs ( a );
        if ( pos > n )
        {
            pos = 1;
            rem  = 0;
        }
        ans [ o_o++ ] = n - pos + 1;
    }
    for ( i = 1 ; i <= q; i++ )
    {
        cout<<ans [ i ]<<"\n";
    }
    return 0;
}
