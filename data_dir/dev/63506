#include <bits/stdc++.h>
#define FOR1(x, n) for(int x = 1; x <= n; x++)
using namespace std;

int main(){
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    char tmp; 
    bool grid[502][502] = {};
    int A[502][502] = {}, h, w, q;
    cin >> h >> w;
    int B[2][502][502] = {}, C[2][502][502] = {}, D[502][502] = {};
    FOR1(x, h) FOR1(y, w){
        cin >> tmp, grid[x][y] = tmp == '.';
    }

    FOR1(x,h) FOR1(y,w){
        if(grid[x][y]){        
        A[x][y] = grid[x-1][y] + grid[x+1][y] + grid[x][y-1] + grid[x][y+1];
        B[0][x][y] = grid[x-1][y];
        B[1][x][y] = grid[x+1][y];
        C[0][x][y] = grid[x][y-1];
        C[1][x][y] = grid[x][y+1];
        }
    }

    for(int x = 0; x < 2; x++)
        for(int y = 1; y <= h; y++) for(int z = 1; z <= w; z++)
            B[x][y][z] += B[x][y][z-1];
    for(int x = 0; x < 2; x++)
        for(int y = 1; y <= w; y++) for(int z = 1; z <= h; z++)
            C[x][z][y] += C[x][z-1][y];

       
    for(int x = 1; x <= h; x++) for(int y = 1; y <= w; y++)
        D[x][y] = D[x-1][y] + D[x][y-1] + A[x][y] - D[x-1][y-1];
    cin >> q;
    for(int i = 0; i < q; i++){
        int r[2] = {}, c[2] = {};
        for(int x = 0; x < 2; x++) cin >> r[x] >> c[x];
        swap(r[0],r[1]); swap(c[0],c[1]);
        int total = D[r[0]][c[0]] - D[r[1] - 1][c[0]] - D[r[0]][c[1]-1] + D[r[1]-1][c[1]-1];
        total -= B[0][r[1]][c[0]] - B[0][r[1]][c[1]-1]; 
        total -= B[1][r[0]][c[0]] - B[1][r[0]][c[1]-1];
        total -= C[0][r[0]][c[1]] - C[0][r[1]-1][c[1]];
        total -= C[1][r[0]][c[0]] - C[1][r[1]-1][c[0]];
        cout << total / 2 << '\n';
    }
}