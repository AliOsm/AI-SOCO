/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)2e5+7;

// ------- 变量 ------- //

int n;
vector <pii> v;
ll dp[N][2];

// ------- 函数 ------- //

void Init() {
    v.clear();

    rep(i, 1, n+1) {
        int x, y; scanf("%d%d", &x, &y);
        v.pb(mp(x, y));
    }
    sort(all(v), [&](pii a, pii b){
        return max(a.fi, a.se) != max(b.fi, b.se) ? max(a.fi, a.se) < max(b.fi, b.se) :
            a.fi != b.fi ? a.fi < b.fi : a.se > b.se;
    });
}

int chg(pii a) { return max(a.fi, a.se); }
ll dis(pii a, pii b) { return 0ll + abs(a.fi - b.fi) + abs(a.se - b.se); }
ll dis1(pii a, pii b) {
    int cha = chg(b) - chg(a);
    if (a.fi == a.se) return dis(a, b);
    if (a.fi < a.se) return dis(mp(a.fi, a.se+cha), b) + cha;
    return dis(mp(a.fi+cha, a.se), b) + cha;
}

int Solve() {
    int rk = 0;
    dp[0][0] = dp[0][1] = 0;
    pii pre[2];
    pre[0] = mp(0, 0); pre[1] = mp(0, 0);
    vector <pii> tmp;
    for (auto o : v) {
//        dd(o.fi); de(o.se);
        if (tmp.empty() || chg(tmp.back()) == chg(o)) {
            tmp.pb(o);
        } else {
            /*
            de(sz(tmp));
            dd(pre[0].fi); de(pre[0].se);
            dd(pre[1].fi); de(pre[1].se);
            */

            ll sum = 0;
            rep(i, 1, sz(tmp)) sum += dis(tmp[i], tmp[i-1]);
            ++rk;
            dp[rk][0] = min(dp[rk-1][0] + dis(pre[0], tmp.back()), dp[rk-1][1] + dis(pre[1], tmp.back())) + sum;
            dp[rk][1] = min(dp[rk-1][0] + dis(pre[0], tmp[0]), dp[rk-1][1] + dis(pre[1], tmp[0])) + sum;

            pre[0] = tmp[0];
            pre[1] = tmp.back();
            tmp.clear();
            tmp.pb(o);
/*
            de(sum);
            dd(rk); dd(dp[rk][0]); de(dp[rk][1]);
            */
        }
    }
    ll sum = 0;
    rep(i, 1, sz(tmp)) sum += dis(tmp[i], tmp[i-1]);
    ++rk;
    dp[rk][0] = min(dp[rk-1][0] + dis(pre[0], tmp.back()), dp[rk-1][1] + dis(pre[1], tmp.back())) + sum;
    dp[rk][1] = min(dp[rk-1][0] + dis(pre[0], tmp[0]), dp[rk-1][1] + dis(pre[1], tmp[0])) + sum;
/*
    de(sz(tmp));
    dd(pre[0].fi); de(pre[0].se);
    dd(pre[1].fi); de(pre[1].se);
    de(sum);
    dd(rk); dd(dp[rk][0]); de(dp[rk][1]);
    dd(dis1(pre[0], tmp.back())); de(dis1(pre[1], tmp.back()));
    dd(dis1(pre[0], tmp[0])); de(dis1(pre[1], tmp[0]));
*/

    return printf("%lld\n", min(dp[rk][0], dp[rk][1]));
}

// ------- main ------- //

int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}
