#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>

#define forn(i,n) for (int i=0;i<n;i++)
#define ford(i,n) for (int i=n-1;i>=0;i--)
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define pi 3.1415926535897932

using namespace std;

int main(){
    //freopen ("input.txt","rt",stdin);
    //freopen ("output.txt","wt",stdout);
    pair < pair<int,int>, pair<int,int> > p[4];
    vector <pair<int,int>> otr1,otr2;
    bool q[4];
    bool q1[4];
    vector <int> ans;
    memset(q,false,sizeof(q));
    memset(q1,false,sizeof(q1));
    int schet=0;
    forn(i,4){
        cin >> p[i].x.x >> p[i].x.y >> p[i].y.x >> p[i].y.y;
        if ((p[i].x.x==p[i].x.y && p[i].y.x==p[i].y.y && p[i].x.x==p[i].y.x) || ((p[i].x.x!=p[i].y.x) && (p[i].x.y!=p[i].y.y))){
            printf ("NO");
            exit(0);
        }
        if (p[i].x.y==p[i].y.y){
            if (p[i].x.x>p[i].y.x) swap(p[i].x,p[i].y); 
            q[i]=true;
            ans.pb(i);
            schet++;
        }
        if (p[i].x.x==p[i].y.x)
            if (p[i].x.y>p[i].y.y) swap(p[i].x,p[i].y);
    }
    if (schet!=2){
        printf ("NO");
        exit(0);
    }
    forn(i,4)
        if (q[i]){
            otr1.pb(p[i].x);
            otr2.pb(p[i].y);
        }
    sort(otr1.begin(),otr1.end());
    sort(otr2.begin(),otr2.end());      
    if (otr1[0].x!=otr1[1].x || otr2[0].x!=otr2[1].x){
        printf ("NO");
        exit(0);
    }
    bool q2=false,q3=false;
    forn(i,4){
        if (!q[i]){
            if (!q2)
                if ((otr1[0]==p[i].x && otr1[1]==p[i].y) || (otr1[0]==p[i].y && otr1[1]==p[i].x)){
                    q2=true;   
                    continue;
                }
            if (!q3)
                if ((otr2[0]==p[i].x && otr2[1]==p[i].y) || (otr2[0]==p[i].y && otr2[1]==p[i].x))
                    q3=true;
        }
    }
    if (otr1[0].x==otr2[0].x) q2=false;
    if (q2 && q3)
        printf ("YES");
    else printf ("NO");
    return 0;
}