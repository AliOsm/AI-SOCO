#include <cstdio>
const int mod = 1000000007;
int a[1001001], b[1001001];
long long ps[1001001], hps[1001001];
int sum(int x) {
	int res = 0;
	while (x > 0) {
		res += b[x];
		x -= x & -x;
	}
	return res;
}
void add(int x) {
	while (x < 1001001) {
		b[x]++;
		x += x & -x;
	}
}
int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	ps[0] = 0, ps[1] = 1;
	for (int i = 2; i <= n; i++) {
		ps[i] = ps[i-1] * i % mod;
	}
	hps[0] = hps[1] = 0, hps[2] = 1;
	for (int i = 3; i <= n; i++) {
		hps[i] = hps[i-1] * i % mod;
	}
	long long ans = 0, s = 1;
	add(a[n-1]);
	for (int i = n-2; i >= 0; i--) {
		long long ss = sum(a[i]);
		ans += ps[n-i-1] * ((ss * (ss - 1) / 2) % mod) % mod;
		ans %= mod;
		ans += hps[n-i-1] * ((long long)(n-i-2) * (n-i-1) / 2 % mod) % mod * ss % mod;
		ans %= mod;
		ans += s * ss % mod;
		ans %= mod;
		s += ps[n-i-1] * ss % mod;
		s %= mod;
		add(a[i]);
	}
	printf("%I64d\n", ans);
	return 0;
}
