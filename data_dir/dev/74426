#include <bits/stdc++.h>
 
using namespace std;
 
#define pb push_back
#define ff first
#define ss second
 
typedef long long ll;
const ll MAXN = 1e3 + 10, inf = 1e18, mod = 1e9 + 7;
 
struct pair_hash {
	template <class T1, class T2>
		std::size_t operator () (const std::pair<T1,T2> &p) const {
			auto h1 = std::hash<T1>{}(p.first);
			auto h2 = std::hash<T2>{}(p.second);
 
			return h1 ^ h2;  
		}
};
 
ll pw(ll te, ll tee) {
	if (tee == 0)	return 1;
	ll res = pw(te, tee / 2);
	return (tee % 2 ? te * res * res : res * res);
}
 
ll n, p[MAXN][MAXN], cur[MAXN], a[MAXN], cnt, pp;
map <string, ll> mp;
map <ll, string> mp2;
vector <ll> t;
 
void Read_input() {
	cin >> n;
}
 
bool cmp(ll x, ll y) {
	return cur[x] > cur[y];
}
 
bool cp(ll x, ll y) {
	ll v, u;
	for (ll i = 1; i <= cnt; i++)
		if (p[x][i] >= pp) {
			v = i;
			break;
		}
	for (ll j = 1; j <= cnt; j++)
		if (p[y][j] >= pp) {
			u = j;
			break;
		}
	return v < u;
}
 
void Solve() {
	ll mx = -inf, f = 1;
	while (n--) {
		cnt++;
		string s;
		ll x;
		cin >> s >> x;
		if (mp.count(s) == 0)	mp[s] = f,	mp2[f] = s,	f++;
		cur[mp[s]] += x;
		for (ll i = 1; i <= f; i++)
			p[i][cnt] = p[i][cnt - 1];
		p[mp[s]][cnt] += x;
	}
	n = f - 1;
	iota(a + 1, a + n + 1, 1);
	sort(a + 1, a + n + 1, cmp);
	pp = cur[a[1]];
	for (ll i = 1; i <= n; i++)
		if (cur[a[i]] == pp)	t.pb(a[i]);
		else	break;
 
	sort(t.begin(), t.end(), cp);
	cout << mp2[t[0]];
}
 
 
int main() {
 
	ios_base::sync_with_stdio(false);	cin.tie(0);	cout.tie(0);
	//freopen("input.txt", "r", stdin),	freopen("output.txt", "w", stdout);
 
	Read_input(),	Solve();
	return 0;
}