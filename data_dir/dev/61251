#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
typedef pair<ll, ll> LL;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)
#define linf (1ll << 60)

#define maxn 155

int f[maxn][maxn * maxn], g[maxn][maxn * maxn];
int n, k, s, a[maxn];

int main()  {
//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> k >> s;
    For(i, 1, n) cin >> a[i];
    ms(f, -0x3f); ms(g, 0x3f);

    f[0][0] = 0;
    g[0][0] = 0;
    For(i, 1, k){
        int id = k - i + 1;
        for(int j = i - 1; j >= 0; j--) for(int sum = i * (i - 1) / 2; sum >= 0; sum--){
            f[j + 1][sum + i] = max(f[j + 1][sum + i], f[j][sum] + a[id]);
        }
    }

    For(i, 1, n - k){
        int id = i + k;
        for(int j = i - 1; j >= 0; j--) for(int sum = i * (i - 1) / 2; sum >= 0; sum--){
            g[j + 1][sum + i] = min(g[j + 1][sum + i], g[j][sum] + a[id]);
//          if(j == 0 && sum == 0 && i == 1) cout << g[1][1] << endl;
        }
    }

    int A = n * (n + 1) / 2;
    for(int j = 1; j <= n - k; j++) for(int sum = 1; sum <= A; sum++){
        g[j][sum] = min(g[j][sum], g[j][sum - 1]);
    }

    int RR = 0;
    For(i, 1, k) RR += a[i];
    int res = 0;
//  cout << f[1][1] << endl;
//  cout << g[1][1] << endl;
    For(j, 1, min(k, n - k)){
        For(sum, 0, A){
            int B = min(A, s + j - sum);
            res = max(res, f[j][sum] - g[j][B]);
        }
    }
    cout << RR - res << endl;

    return 0;
}
