// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 200000;

int aa[N + 2], pp[N + 2];

void solve(int i) {
	int d;
	if (i) {
		int p = pp[i];
		solve(p - 1);
		d = (aa[i] + 1) - (aa[p] - 1);
		cout << "JUMP " << d << '\n';
	}
	d = (aa[i + 1] - 1) - (aa[i] + 1);
	if (d)
		cout << "RUN " << d << '\n';
}

int main() {
	int n, m, s, d; cin >> n >> m >> s >> d;
	aa[0] = -1;
	for (int i = 1; i <= n; i++)
		cin >> aa[i];
	aa[n + 1] = m + 1;
	sort(aa, aa + n + 2);
	for (int i = 0, j = 1; i <= n; i++) {
		if (i >= j) {
			cout << "IMPOSSIBLE\n";
			return 0;
		}
		if ((aa[i + 1] - 1) - (aa[i] + 1) >= s)
			while (j <= n && (aa[j] + 1) - (aa[i + 1] - 1) <= d)
				pp[j++] = i + 1;
	}
	solve(n);
	return 0;
}
