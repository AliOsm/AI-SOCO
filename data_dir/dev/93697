//Dream your Code, Code your Dream [Siriuslight -Subham Pal]
#include<bits/stdc++.h>
#define FIO ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
using namespace std;    typedef long long ll;    typedef long double ld;

const int inf = 1e9;
const ll INF = 1e18;
const int N = 1e5+5;
ll a[N], n, sum, ans;

struct trie{
    struct trie * node[2];
    bool isend;
};

struct trie* getnode(){
    struct trie *temp = new struct trie;
    temp -> node[0] = temp -> node[1] = NULL;
    temp ->isend = false;
    return temp;
}

struct trie *head = getnode();

void insert(ll x){
    struct trie *temp = head;
    for(ll i = 40; i >= 0; i--){
        if(temp -> node[(x >> i) & 1LL]){
            temp = temp -> node[(x >> i) & 1LL];
            continue;
        }
        temp -> node[(x >> i) & 1LL] = getnode();
        temp = temp -> node[(x >> i) & 1LL];

    }
    temp -> isend = true;
}

ll calculate(ll x){
    ll res = 0;
    struct trie *temp = head;
    for(int i = 40; i >= 0; i--){
        if(!((x >> i) & 1LL)){
            if(temp -> node[1]){
                res |= (1LL << i);
                temp = temp -> node[1];
            }
            else if(temp -> node[0]){
                temp = temp -> node[0];
            }
            else{
                return res;
            }
        }
        else {
            if(temp -> node[0]){
                res |= (1LL << i);
                temp = temp -> node[0];
            }
            else if(temp -> node[1]){
                temp = temp -> node[1];
            }
            else{
                return res;
            }
        }
    }
    return res;
}

int main(){
    //FIO;
    scanf("%lld", &n);
    for(int i = 0; i < n; i++){
        scanf("%lld", a + i);
        sum ^= a[i];
    }
    ll suffix = 0;
    insert(suffix);
    for(int i = n - 1; i >= 0; i--){
        //cout << sum <<" "<<suffix <<" "<< calculate(sum)<<" ";
        ans = max(calculate(sum), ans);
        //cout << ans <<"\n";
        suffix ^= a[i];
        sum ^= a[i];
        insert(suffix);
    }
    ans = max(calculate(sum), ans);
    printf("%lld", ans);
    return 0;
}
