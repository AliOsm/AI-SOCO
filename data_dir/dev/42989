/*input
2
3 2
2 1 0 
1 2 
3 3
3 2 1 
1 2 2

*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 998244353;
#define PI 3.14159265
//#define endl '\n'
#define F first
#define S second
#define debug(x) cout << #x << " = " << x << endl;
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cout << name << " : " << arg1 << endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif


template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(int x, int y){ x += y; if(x >= mod) x -= mod; return x;}
inline int sub(int x, int y){ x -= y; if(x < 0) x += mod; return x;}
inline int mul(int x, int y){ return (x * 1ll * y) % mod;}
inline int powr(int a, ll b){
    int x = 1 % mod;
    while(b){
        if(b & 1) x = mul(x, a);
        a = mul(a, a);
        b >>= 1;
    }
    return x;
}
inline int inv(int a){ return powr(a, mod - 2);}

int askMe(int c, int d) {
  cout << "? " << c << " " << d << endl;
  int response;
  cin >> response;
  return response;
}

int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  int a = 0, b = 0, who = askMe(0, 0);
  int bit = 30;
  while (bit--) {
    int firstRes = askMe(a ^ (1 << bit), b);
    int secondRes = askMe(a, b ^ (1 << bit));
    if (firstRes == secondRes) {
      if (who == 1) {
        a ^= (1 << bit);
      }
      else {
        b ^= (1 << bit);
      }
      who = firstRes;
    }
    else if (firstRes == -1) {
      a ^= (1 << bit);
      b ^= (1 << bit);
    }
  }
  cout << "! " << a << " " << b << endl;

  return 0;
}