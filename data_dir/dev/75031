#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;
ll V[12]={1E0 -1,1E1 -1,1E2 -1,1E3 -1,1E4 -1,1E5 -1,1E6 -1,1E7 -1,1E8 -1,1E9 -1,1E10 -1};
int get_len(int w){
  int br=0;
  while(w>0){++br;w/=10;}
  return br;
}
ll solve(int f,int t,int len){
  if(get_len(f)<len){f=V[len-1]+1;}
  if(len<get_len(t))t=V[len];
  ll ret=max(f*(V[len]-f),t*(V[len]-t));
  ll M=V[len]/2;
  if(f<=M && M<=t)ret=max(ret,M*(V[len]-M));
  ++M;
  if(f<=M && M<=t)ret=max(ret,M*(V[len]-M));
  M-=2;
  if(f<=M && M<=t)ret=max(ret,M*(V[len]-M));
  return ret;
}
int main(){
  int f,t;cin>>f>>t;
  int lf=get_len(f),lt=get_len(t);
  ll ans=0;
  for(int i=lf;i<=lt;++i)ans=max(ans,solve(f,t,i));
  cout<<ans<<'\n';
  //system("pause");
  return 0;
}
