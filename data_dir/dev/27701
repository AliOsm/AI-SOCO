#include <bits/stdc++.h>
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define mt make_tuple

using namespace std;

typedef pair<int, int> ii;
typedef long long ll;

const int N = 300010, MOD = 998244353;
vector<int> g[N];
int c[N];

bool impossible = false;
int cnt[2];
void dfs(int u, int col)
{
	c[u] = col;
	cnt[col]++;
	for (int v : g[u])
	{
		if (c[v] == -1)
			dfs(v, 1 - col);
		else if (c[v] == col)
			impossible = true;
	}
}

int mul(ll a, ll b)
{
	return (a*b)%MOD;
}

int pwr[N];

int main()
{
	pwr[0] = 1;
	for (int i = 1; i < N; i++)
		pwr[i] = mul(2, pwr[i-1]);
	
	int t;
	scanf("%d", &t);

	while (t--)
	{
		int n, m;
		scanf("%d %d", &n, &m);
		for (int i = 1; i <= n; i++)
		{
			g[i].clear();
			c[i] = -1;
		}
		impossible = false;

		for (int i = 0; i < m; i++)
		{
			int u, v;
			scanf("%d %d", &u, &v);
			g[u].pb(v);
			g[v].pb(u);
		}
		
		int ans = 1;

		for (int u = 1; u <= n; u++)
		{
			if (c[u] != -1) continue;
			cnt[0] = cnt[1] = 0;
			dfs(u, 0);
			if (impossible)
			{
				ans = 0;
				break;
			}
			int cur = pwr[cnt[0]] + pwr[cnt[1]];
			cur %= MOD;
			ans = mul(ans, cur);
		}
		printf("%d\n", ans);
	}
	return 0;
}

