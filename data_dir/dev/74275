#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define ii pair<int,int>
#define mp make_pair
#define All(v) v.begin(),v.end()
using namespace std;
int ok[2000000];
ll ans[1000000];
ll b[1000000];
ll n,x,y;
ll minx;
/// Segment Tree
const int max_node = 25000000;
ll tree[max_node] ;
ll tree2[2000005];
void update(int node , int start , int _end , int idx , int val)
{
    if(start == _end)
    {
        tree[node] += val;
    }
    else
    {
        int mid = (start+_end)/2;
        if(start <= idx && idx <= mid)
        {
        update(node*2,start,mid,idx,val);
        }
        else
        {
            update(node*2+1,mid+1,_end,idx,val);
        }
        tree[node] = tree[2*node]+tree[2*node+1];
    }
 }

ll query(int node , int start , int _end, int l , int r)
{
    if(r < start || l > _end)
    {
       return 0;
    }
    if(l <= start && _end<= r)
    {
        return tree[node];
    }
    int mid = (start+_end)/2;
    ll x1 = query(2*node  ,start , mid , l , r);
    ll x2 = query(2*node+1,mid+1 ,_end , l , r);
    return (x1+x2);
}

ll query2(int l , int r)
{
    if(l == 0)
    {
        return tree2[r];
    }
    else
    {
        return tree2[r]-tree2[l-1];
    }
}

ll P;
ll solve(int id)
{
    ll res = 0;
    ll P2 = min(P , 1LL * (id-1));
    for(int i=id;i<=2 * 1e6;i+=id)
    {
        ll DS = query(1,1,2 * 1e6,i-P2,i);
        ll DS2 = 1LL * query2(i-P2,i);
        DS = DS - DS2 * i;
        DS = -DS;
        res+=(1LL * DS * x);
        if(i-id+1 <= i-P2-1)
        res+=1LL * y * query2(i-id+1,i-P2-1);
    }

    return res;
}
int main()
{
    minx= 1e18;
    cin>>n>>y>>x;
    P = y/x;
    for(int i=0;i<n;i++)
    {
        int c;
        scanf("%d",&c);
        update(1,1,2 * 1e6,c,c);
        tree2[c]++;
    }
    for(int i=0;i<=2 * 1e6;i++)
    {
        tree2[i]+=tree2[i-1];
    }
    int cnt =  0;
    for(int i=2;i<=1000000;i++)
    {
       if(ok[i] == 0)
       {
           for(int j=i*2;j<=1000000;j+=i)
            ok[j] = 1;
           minx = min(minx , solve(i));
       }
    }
    minx = min(minx , n * y);
    cout<<minx;
}
