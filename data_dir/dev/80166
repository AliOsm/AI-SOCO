#include "iostream"
#include "algorithm"
#include "vector"
#include "set"
#include "map"
#include "cstring"
#include "string"
#include "vector"
#include "cassert"
#include "queue"
#include "cstdio"
#include "cstdlib"
#include "bitset"

using namespace std;

typedef long long ll;
typedef pair < int, int > ii;

const int N = 2500 + 5;

int n;
int a[N][N];
ii b[N * N];
bitset < N > row[N], col[N];

void up(int id) {
    int i = b[id].second / n + 1;
    int j = b[id].second % n + 1;
    row[i][j] = 1;
    col[j][i] = 1;
}

void query(int id) {
    int i = b[id].second / n + 1;
    int j = b[id].second % n + 1;
    if((row[i] | col[j]) != row[i]) {
        puts("NOT MAGIC");
        exit(0);
    }
}

int main() {
    
    scanf("%d", &n);
    
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= n; j++) {
            scanf("%d", a[i] + j);
            b[(i - 1) * n + j - 1] = ii(a[i][j], (i - 1) * n + j - 1);
        }
    }
    
    for(int i = 1; i <= n; i++) {
        if(a[i][i]) {
            puts("NOT MAGIC");
            return 0;
        }
        for(int j = 1; j <= n; j++) {
            if(a[i][j] != a[j][i]) {
                puts("NOT MAGIC");
                return 0;
            }
        }
    }
    
    sort(b, b + n * n);
    
    int last = -1;
    
    for(int it = 0; it < n * n; it++) {
        up(it);
        if(it == n * n - 1 or b[it + 1].first != b[it].first) {
            for(int i = last + 1; i <= it; i++)
                query(i);
            last = it;
        }
    }
    
    puts("MAGIC");

    return 0;
    
}