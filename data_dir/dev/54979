//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7; 

int n,d[N],deg[N], ans;

vector <int> g[N];

void dfs(int v, int p = -1){
	int mx1 = 0, mx2 = 0, cnt = 0;
	for(int to : g[v]){
		if(to == p) continue;
		dfs(to, v);
		if(d[to] > mx1){
			mx2 = mx1;
			mx1 = d[to];
		}
		else mx2 = max(mx2, d[to]);
		cnt++;
	}
	d[v] = mx1 + max(cnt,1);
	ans = max(ans, mx1 + mx2 + 1 + max(cnt - 2, 0) + (p > 0));
}

void solve(){
	scanf("%d", &n);
	for(int i = 1,x,y; i < n; i++){
		scanf("%d%d", &x, &y);
		g[x].pb(y);
		g[y].pb(x);
		deg[x]++;
		deg[y]++;
	}
	ans = 0;
	dfs(1);
	printf("%d\n", ans);
	for(int i = 1; i <= n; i++) g[i].clear();
}
                  
int main () {
	int T;
	scanf("%d", &T);
	while(T--){
		solve();
	}
 
return 0;
}