#include <bits/stdc++.h>
using namespace std;
const int N = 7000 + 10, lg = 60;
long long a[N], mark[N], n;
long long b[N], ans;
map<long long, int> seen;
vector<int> db;
bool isUnd(long long x, long long y) {
	for (int j = 0; j < lg; j++) {
		if (((y >> (long long) j) & 1) && ((x >> (long long) j) & 1) == 0) 
			return false;
	}
	return true;
}
int main() {
	ios_base::sync_with_stdio (false);
	cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		seen[a[i]] = seen[a[i]] + 1;
		if (seen[a[i]] == 2) {
			db.push_back(i);
		}
	}
	for (int i = 0; i < n; i++) {
		cin >> b[i];
	}
	for (int i = 0; i < db.size(); i++) {
		long long x = a[db[i]];
		for (int j = 0; j < n; j++) {
			if (!mark[j]) {
				if (isUnd(x, a[j])) {
					mark[j] = 1;
				}
			}
		}
	}
	for (int i = 0; i < n; i++) {
		if (mark[i])
			ans += b[i];
	}
	cout << ans;
	return 0;
}
