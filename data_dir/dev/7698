#include<bits/stdc++.h>
#define lf double
#define ll long long
#define ull unsigned ll
#define ii pair<int,int>
#define il pair<int,ll>
#define iii pair<ii,int>
#define iiii pair<ii,ii>
#define pll pair<ll,ll>
#define ld long int
#define heap priority_queue
#define mp make_pair
#define st first
#define nd second
#define pb push_back
#define pp pop_back
#define all(x) x.begin(),x.end()
#define len(x) strlen(x)
#define sz(x) (int) x.size()
#define orta ((bas+son)/2)
#define min3(x,y,z) min(min(x,y),z)
#define max3(x,y,z) max(max(x,y),z)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 2000000009
#define N 405
#define LOG 21
#define K 1005
#define M 105
#define EPS 0.0000001
using namespace std; 

int n,m,x;
int dp[2][N][N];

void add(int &r,int val) {

   r=(r+val)%MOD;

}

int main() {

   scanf("%d %d %d",&n,&m,&x);

   if(n>m) {

      printf("0");
      return 0;

   }

   dp[0][0][0]=1;
   for(int i=0;i<m;i++) {

      for(int j=0;j<=n;j++) {
      
         for(int k=0;k+j<=n;k++) {

            if(k && i+1!=x) add(dp[1][j+1][k-1],dp[0][j][k]);
            add(dp[1][j][k+1],dp[0][j][k]);
            add(dp[1][j+1][k],dp[0][j][k]);
            if(i+1!=x) add(dp[1][j][k],dp[0][j][k]);

         }

      }

      for(int j=0;j<=n+1;j++) {

         for(int k=0;k+j<=n+1;k++) {

            dp[0][j][k]=dp[1][j][k];
            dp[1][j][k]=0;

         }

      }

   }

   int f=1;

   for(int i=2;i<=n;i++) f=1ll*f*i%MOD;

   printf("%d",1ll*dp[0][n][0]*f%MOD);

}
