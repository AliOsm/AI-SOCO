#include <bits/stdc++.h>
using namespace std;

const int MX=509;
int n, k;
int a[MX], b[MX];

stringstream ss;
string ans;
bool solve()
{
    int L=0;

    for(int i=0; i<k; i++)
	{
		int sa=0;
        int R=L;
        while(sa<b[i] && R<n)
		{
			sa+=a[R];
			R++;
		}

		cerr << L << ' ' << R << endl;

        if(sa!=b[i]) return false;
        int maxVal=0, cntMax=0;

        cerr << L << ' ' << R << endl;

        for(int j=L; j<R; j++)
        {
            if(a[j]>maxVal)
			{
				maxVal=a[j];
				cntMax=1;
			}
			else if(a[j]==maxVal) cntMax++;
        }

		if(R-L==1)
		{
			L=R;
			continue;
		}

        if(cntMax==R-L) return false;

        int maxPos=-1;
		bool doL=false;

		for(int j=L; j<R; j++)
		{
            if(a[j]!=maxVal) continue;
			if(L<=j-1 && a[j-1]!=maxVal)
			{
				maxPos=j;
				doL=true;
				break;
			}
			if(j+1<R && a[j+1]!=maxVal)
			{
                maxPos=j;
                doL=false;
                break;
			}
		}

		int cntL=maxPos-L, cntR=R-1-maxPos;
		int offset=i+cntL+1;

		if(doL)
		{
			for(int j=0; j<cntL; j++)
			{
                ss << offset << " L\n";
                offset-=1;
			}
			for(int j=0; j<cntR; j++)
			{
				ss << offset << " R\n";
			}
		}
		else
		{
			for(int j=0; j<cntR; j++)
			{
				ss << offset << " R\n";
			}
			for(int j=0; j<cntL; j++)
			{
                ss << offset << " L\n";
                offset-=1;
			}
		}

        L=R;
	}

	return L==n;
}

int main()
{
    scanf("%d", &n);
    for(int i=0; i<n; i++) scanf("%d", a+i);
    scanf("%d", &k);
    for(int i=0; i<k; i++) scanf("%d", b+i);

    if(solve())
	{
		cout << "YES\n";
		cout << ss.str();
	}
	else cout << "NO\n";

	return 0;
}
