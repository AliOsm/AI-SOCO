#include<bits/stdc++.h>

using namespace std;

typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<pii> vpi;
typedef map<string, int> maps;
typedef map<int, int> mapi;
typedef set<int> seti;
typedef set<string> sets;
typedef set<char> setc;


#define int long long
#define double long double
#define add push_back
#define pop pop_back
#define all(a) a.begin(), a.end()
#define sz(a) int((a).size())


void input(int *a, int size)  { for(int i = 0; i < size; ++i) cin >> a[i]; }
void output(int *a, int size) { for(int i = 0; i < size; ++i) cout << a[i] << " "; cout<<endl; }


#define repi(it, x) for(__typeof((x).begin()) it = (x).begin(); it != (x).end(); it++)
#define rep(i, a, b)  for(int i = a; i <  b; i++)
#define repn(i, a, b) for(int i = a; i <= b; i++)
#define repv(i, b, a) for(int i = b - 1; i >= a; i--)
#define _1 first
#define _2 second


const double EPS = 1e-9;
const double PI = acos(-1.);
const int MOD = 1e9 + 7;
const int MAXN = 300001;
int INF = __INT64_MAX__;
int MAX = -1e16;
int MIN = 1e16;
string YN[] = {"NO", "YES"};


template<typename T1, typename T2> T2 max(T1 a, T2 b){ T2 res = a > b ? a : b; return res; }
template<typename T1, typename T2> T2 min(T1 a, T2 b){ T2 res = a < b ? a : b; return res; }


int POW (int a, int n)
{
		int res = 1;
		while (n) {
				if (n & 1)
						res *= a;
				a *= a;
				n >>= 1;
		}
		return res;
}


string to_string(int n)
{
		stringstream ss;
		string s;
		ss << n;
		ss >> s;
		return s;
}
string to_binary(int n)
{
		string s;
		while(n) {
				if(n & 1) s += '1';
				else s += '0';
				n >>= 1;
		}
		reverse(all(s));
		return s;
}


int dx[] = { 1, 0, -1, 0, 1, 1, -1, -1 };
int dy[] = { 0, 1, 0, -1, 1, -1, 1, -1 };


int func()
{

}

mapi::iterator it1;
mapi::iterator it2;
mapi mp;

seti::iterator its;
seti st;

vi::iterator itc;
vi vc;

int n, m, cnt, res, A[MAXN], B[MAXN];
string s, t;

void solution()
{
		cin >> n;
		repn(i, 1, n){
			cin >> m;
			mp[m]++;
		}
		if(mp.size() == 2){
			it1 = mp.begin();
			it2 = ++it1;
			it1--;
			if(it1 -> _2 == it2 -> _2){
				cout << "Yes" << endl;
				cout << it1 -> _1 << " " << it2 -> _1;
			}
			else cout << "No";
		}else{
			cout << "No";
		}
}
__INT16_C() main()
{
		//ifstream fin("input.in");
		//ofstream fout("output.out");

		ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);

		int t = 1;
		// cin >> t;

		while(t--) solution();
}
