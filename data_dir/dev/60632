#include <bits/stdc++.h>
using namespace std;
vector<vector<int> > v(2000010);
int main(void)
{
	set<int> s[3];
	int n; cin >> n;
	int a[n];
	int count[n+3]; memset(count, 0, sizeof(count));
	for (int i = 0; i < n; ++i)
	{
		cin >> a[i];
		++count[a[i]];
		v[a[i]].emplace_back(i+1);
		s[a[i]%3].insert(a[i]);
	}
	int ans[n], cur = 0, flag = 0; memset(ans, -1, sizeof(ans));
	for (int i = 0; i < n; ++i)
	{
		if (count[cur] == 0)
		{
			s[cur%3].insert(cur);
			auto it = s[cur%3].find(cur);
			if (it == s[cur%3].begin())
			{
				flag = 1;
				break;
			}
			else
			{
				--it;
				s[cur%3].erase(cur);
				cur = *it;
			}
		}
		/*for (int j = 0; j < 3; ++j)
		{
			cout << j << ' ';
			for (auto it : s[j])
			{
				cout << it << ' ';
			}
			cout << endl;
		}*/
		--count[cur];
		if (count[cur] == 0)
		{
			s[cur%3].erase(cur);
		}
		int x = v[cur].size();
		ans[i] = v[cur][x-1];
		v[cur].pop_back();
		++cur;
	}
	if (flag == 1)
	{
		cout << "Impossible\n";
	}
	else
	{
		cout << "Possible\n";
		for (int i = 0; i < n; ++i)
		{
			cout << ans[i] << ' ';
		}
	}
}