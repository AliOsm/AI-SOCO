#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef long long mt;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 1000000007ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;

#define N 20
#define K 5001
#define P 18
#define M (2000111)

mt n = 14;
mt a[N], p[N];
mt answ, t;
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	rep(0, n, i)
		scanf("%lld", a + i);
	rep(0, n, i) {
		mt d = a[i] / 14, m = a[i] % 14;
		rep(1, n, j) {
			p[(i + j) % n] = a[(i + j) % n] + d;
			if (m) ++p[(i + j) % n], --m;
		}
		p[i] = d + m;
		t = 0;
		rep(0, n, j)
			t += p[j] & 1 ? 0ll : p[j];
		answ = max(answ, t);
	}
	printf("%lld\n", answ);

	return 0;
}