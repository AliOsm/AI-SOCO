#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())


#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);

const int N = 200005;
const int M = 28;
int q,id = 1;
int trie[M * N][2],mark[M * N];

void update(int v,int val)
{
    int row = 1;
    vector<int>vec;
    for(int i = M;i >= 0;i--){
        bool d = v & (1 << i);
        if(trie[row][d] == 0)trie[row][d] = ++id;
        row = trie[row][d];
        vec.push_back(row);
    }
    for(int i = 0;i < vec.size();i++)mark[vec[i]] += val;
}
int query(int v,int k)// v ^ unknown < k
{
    int ans = 0;
    int row = 1;
    for(int i = M;i >= 0;i--){
        bool d1 = v & (1 << i);
        bool d2 = k & (1 << i);
        bool d = d1 ^ d2;

        if(d2 == 1 and d1 == 0){
            ans += mark[trie[row][0]];
        }else if(d2 == 1 and d1 == 1){
            ans += mark[trie[row][1]];
        }
        if(trie[row][d] == 0)break;
        row = trie[row][d];
    }
    return ans;
}
int main()
{
    FastRead
    int q;
    cin >> q;
    while(q--){
        int tp;
        cin >> tp;
        if(tp == 1){
            int v;cin >> v;
            update(v,1);
        }else if(tp == 2){
            int v;cin >> v;
            update(v,-1);
        }else{
            int v,k;
            cin >> v >> k;
            cout << query(v,k) << "\n";
        }
    }
}
