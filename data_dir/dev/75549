#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define mp make_pair
#define pii pair<int,int>

using namespace std;

int n;
const int N = 5e3+10;
int rep[N];

vector<int>getPrimes(int mx){
    vector<int>res;
    bool pr[mx+1];
    memset(pr,0,sizeof pr);
    for(int i=2 ;i <=mx; i ++){
        if(pr[i])continue;
        for(int j=i+i ;j <=mx; j +=i)
            pr[j] = 1;
        res.push_back(i);
    }
    return res;
}

vector<short>prim[N];

void init(){
    vector<int>primes = getPrimes(N-1);

    for(int i=0 ; i<N ;i ++){
        for(int j=0 ; j < primes.size() ;  j++){
            if(primes[j]  > i)break;

            int pw = primes[j];
            while(pw <= i){
                int nm = i/pw;

                pw *= primes[j];
                while(nm--)
                    prim[i].push_back(j);
            }
        }
        reverse(prim[i].begin(),prim[i].end());
    }
}

ll dp[32684654];
int nm[32684654];

void dfs(int l,int r,int lev){
    static int in = 0;
    int ind = in;
    in++;

    for(int i = l ; i <=r ; ){
        if(lev >= prim[i].size()){
            nm[ind] += rep[i];
            i++;
            continue;
        }

        int j = i;
        for( ;  j<=r ; j++){
            if(prim[i][lev] != prim[j][lev])break;
        }
        int te = in;
        dfs(i,j-1,lev+1);
        nm[ind] += nm[te];
        dp[ind] += dp[te] + nm[te];
        i = j;
    }
}

ll res = 1e18;

void dfs1(int l,int r,int lev,ll dp1=0,int nm1=0){
    static int in = 0;
    dp1 += nm1;

    res = min(res,dp[in]+dp1);

    int ind = in;
    in++;
    for(int i = l ; i <=r ; ){
        if(lev >= prim[i].size()){
            i++;
            continue;
        }

        int j = i;
        for( ;  j<=r ; j++){
            if(prim[i][lev] != prim[j][lev])break;
        }
        int te = in;
        dfs1(i,j-1,lev+1,dp1+dp[ind] - dp[te] - nm[te],nm1+nm[ind] - nm[te]);
        i = j;
    }
}

int main(){
    cin>>n;
    int k;
    for(int i=0 ;i <n ;i ++){
        scanf("%d",&k);
        rep[k]++;
    }


    init();

    dfs(0,5e3,0);
    dfs1(0,5e3,0);
    cout<<res<<endl;

    return 0;
}
