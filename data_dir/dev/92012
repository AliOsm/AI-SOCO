#ifdef __GNUC__
#include <bits/stdc++.h>
#endif

#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>
#include <iterator>

using namespace std;



int main()
{
	vector<pair<int, int>> p(3), ans;

	for (int i = 0; i < 3; i++)
		cin >> p[i].first >> p[i].second;

	for (int i = 0; i < 3; i++) {
		for (int j = i + 1; j < 3; j++) {
			int dx = p[i].first - p[j].first, dy = p[i].second - p[j].second;
			int k = 3 - (i + j);
			ans.push_back (make_pair(p[k].first + dx, p[k].second + dy));
			ans.push_back (make_pair(p[k].first - dx, p[k].second - dy));
		}
	}

	sort (ans.begin(), ans.end());
	ans.resize (distance (ans.begin(), unique (ans.begin(), ans.end())));

	cout << ans.size() << endl;

	for_each (ans.begin(), ans.end(),
	          [](const pair<int, int>& p) { cout << p.first << " " << p.second << endl; });
}
