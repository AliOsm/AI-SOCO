#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
#define pb push_back
#define len(a) (int)a.size()
#define all(a) (a.begin(),a.end())
#define fi first
#define sc second
#define ort(x,y) (x+y)/2
#define endl '\n'
#define FAST ios_base::sync_with_stdio(false);
#define d1(x) cerr<<#x<<":"<<x<<endl;
#define d2(x,y) cerr<<#x<<":"<<x<<" "<<#y<<":"<<y<<endl;
#define d3(x,y,z) cerr<<#x<<":"<<x<<" "<<#y<<":"<<y<<" "<<#z<<":"<<z<<endl;
#define N (int) (2e5+5)
#define M (int) ()
#define inf (int) (1e7)
#define p (1000000007)
#define heap priority_queue
#define mem(a,val) memset(a,val,sizeof(a))
#define y1 asdassa
#define left ind+ind
#define right ind+ind+1
#define mid (l+r)/2
typedef long long int lli;
typedef pair<int,int> pii;
typedef pair<pii,int> piii;
long double n,r,ar[N],ar2[N];
int main()
{
	scanf("%Lf %Lf",&n,&r);
	for(int i=1;i<=n;i++)
		scanf("%Lf",&ar[i]);
	for(int i=1;i<=n;i++)
	{
		long double ans=r;
		for(int j=1;j<i;j++)
		{
			if(abs(ar[j]-ar[i])>2*r) continue;
			ans=max(ans,ar2[j]+sqrt(4*r*r-abs(ar[i]-ar[j])*abs(ar[i]-ar[j])));
		}
		ar2[i]=ans;
		printf("%Lf\n",ans);
	}
}
