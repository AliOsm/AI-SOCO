#ifndef _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_DEPRECATE

#include<bits/stdc++.h>

using namespace std;

#define all(x) x.begin(), x.end()
#define ll long long 
#define INF 1e12
#define mt(a,b,c) make_tuple(a,b,c)
ll gcd(ll a, ll b){ return !b ? a : gcd(b, a%b); }
ll lcm(ll a, ll b){ return a*(b / gcd(a, b)); }
#define ii pair<ll,ll>
#define t3 tuple<int,int,int>
#define MOD 1000000007

int main(){

#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif // !ONLINE_JUDGE

	int n; scanf("%d", &n);
	vector<ii>vec(n), ans;
	set<ii>busy;
	
	for (int i = 0; i < n; i++){
		scanf("%lld %lld", &vec[i].first, &vec[i].second);
	}
	ll x = 1;
	for (int i = 0; i < n; ++i){
		ll start = vec[i].first, end = vec[i].first + vec[i].second - 1;
		if (busy.empty()){
			busy.insert({ start, end });
			ans.push_back({ start, end });
			continue;
		}
		bool can1 = 0, G = 0;
		for (auto j : busy){
			if (j.second < start)continue;
			if (end < j.first){
				can1 = 1;
				busy.insert({ start, end });
				ans.push_back({ start, end });
			}
			G = 1;
			break;
		}
		if (!G){
			busy.insert({ start, end });
			ans.push_back({ start, end }); can1 = 1;
		}
		if (can1)continue;
		x = 1;
		for (auto j : busy){
			if (x + vec[i].second - 1 < j.first){
				busy.insert({ x, x + vec[i].second - 1 });
				ans.push_back({ x, x + vec[i].second - 1 });
				can1 = 1;
				break;
			}
			x = j.second + 1;
		}
		if (can1)continue;
		busy.insert({ x, x + vec[i].second - 1 });
		ans.push_back({ x, x + vec[i].second - 1 });
	}
	for (auto i : ans){
		printf("%lld %lld\n", i.first, i.second);
	}
	return 0;
}
#endif