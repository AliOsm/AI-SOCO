#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

const int MAX_N = 5005;

int n, m;
vector<pair<int, int>> g[MAX_N];
pair<int, int> edges[MAX_N];
int color[MAX_N];

bool findCycle(int u)
{
	color[u] = 1;
	for (auto p : g[u])
	{
		int v = p.first;
		if (color[v] == 1)
			return true;
		else if (color[v] == 0)
		{
			if (findCycle(v))
				return true;
		}
	}
	color[u] = 2;
	return false;
}

int32_t main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		int u, v;
		cin >> u >> v;
		u--; v--;
		g[u].emplace_back(v, i);
		edges[i] = { u, v };
	}

	bool haveCycles = false;
	for (int i = 0; i < n; i++)
		if (color[i] == 0 && findCycle(i))
		{
			haveCycles = true;
			break;
		}

	if (!haveCycles)
	{
		cout << "1\n";
		for (int i = 0; i < m; i++)
			cout << "1 ";
		cout << '\n';
		return 0;
	}

	cout << "2\n";
	for (int i = 0; i < m; i++)
		cout << (edges[i].first < edges[i].second ? 1 : 2) << ' ';
	cout << '\n';

	return 0;
}