#include <bits/stdc++.h>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e5 + 5;
const double eps = 1e-9;
using namespace std;
char str[MAXN];
int arr[MAXN], val[MAXN];
int ans = 0, lvl = 1, cnt = 0, nx = 1;
map<string,int> id;
vi adj[MAXN];

void dfs(int u)
{
    string cur = "";
    for (; str[lvl] != ':' && str[lvl] != '.'; lvl++)
        cur += str[lvl];
    arr[u] = id[cur] ? id[cur] : id[cur] = ++cnt;
    while (str[lvl] != '.')
    {
        adj[u].pb(++nx);
        lvl++;
        dfs(nx);
    }
    lvl++;
}

void solve(int u)
{
    ans += val[arr[u]];
    val[arr[u]]++;
    for (int v: adj[u])
        solve(v);
    val[arr[u]]--;
}

int main()
{
    scanf("%s", str + 1);
    int sz = strlen(str + 1);
    dfs(1);
    solve(1);
    pri(ans);
    return 0;
}
