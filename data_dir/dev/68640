#include <iostream>
#include <vector>
#include <cstdlib>
#include <algorithm>

using namespace std;

const int infinito=1000000000;

int n,m;
int coste[1<<22];
int conoce[30];
int anterior[1<<22];
int eleccion[1<<22];

int main()
{
  cin>>n>>m;
  for (int i=0;i<n;i++)
    conoce[i]=1<<i;
  for (int i=0;i<m;i++) {
    int u,v;
    cin>>u>>v;
    u--;
    v--;
    conoce[u]|=1<<v;
    conoce[v]|=1<<u;
  }
  for (int c=0;c<1<<n;c++)
    coste[c]=infinito;
  for (int c=1;c<1<<n;c++) {
    bool error=false;
    for (int b=0;b<n and not error;b++)
      if ((c&(1<<b)) and (conoce[b]&c)!=c)
	error=true;
    if (not error) coste[c]=0;
  }
  for (int c=1;c<(1<<n)-1;c++) {
    for (int b=0;b<n;b++) {
      if (c&(1<<b)) {
	int nextc=c|conoce[b];
	int nextcoste=coste[c]+1;
	if (nextcoste<coste[nextc]) {
	  coste[nextc]=nextcoste;
	  eleccion[nextc]=b;
	  anterior[nextc]=c;
	}
      }
    }
  }
  vector<int> sol;
  int c=(1<<n)-1;
  while (coste[c]) {
    sol.push_back(eleccion[c]+1);
    c=anterior[c];
  }
  reverse(sol.begin(),sol.end());
  cout<<int(sol.size())<<endl;
  for (int i=0;i<int(sol.size());i++) {
    if (i>0) cout<<" ";
    cout<<sol[i];
  }
  cout<<endl;
}
