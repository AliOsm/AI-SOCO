#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
using namespace std;
typedef long long ll ; 
typedef long double ld ;
typedef pair<ll , ll> pll ;

const ll N = 2e5 + 30 , Mod = 1e9 + 7 ;
const ll SQ = 330 ;

map<ll , ll> pre ;
map<ll , bool> use ;
vector<ll> Div ;
ll _sum (ll a , ll b) {
	if (a < 0) a += Mod ;
	if (b < 0) b += Mod ;
	a %= Mod ;
	b %= Mod ;
	return (a + b) % Mod ;
}
ll _sub(ll a , ll b) {
	if (a < 0) a += Mod ;
	if (b < 0) b += Mod ;
	a %= Mod ;
	b %= Mod ;
	return (a + Mod - b) % Mod ;
}
ll _mul(ll a , ll b) {
	if (a < 0) a += Mod ;
	if (b < 0) b += Mod ;
	a %= Mod ;
	b %= Mod ;
	return (a * b) % Mod ;
}
ll C2 (ll x) {
	//x %= Mod ;
	if (x % 2ll == 0ll)return (_mul(x / 2ll, x + 1ll) ) % Mod ;
	return (_mul(_mul((x + 1ll) / 2ll , 1ll) , x ) ) % Mod ;
}
ll _segment (ll l , ll r) {
	return (_sub(C2(r) , C2(l))) % Mod;
}
int main () {
    ios::sync_with_stdio(0), cin.tie(0) ;
    ll  n , m , ans ;
    cin >> n >> m ;
 
    ans = 0ll;
    for (ll i = 1 ; i  * i <= n ; i ++) {
    	if (1) {
    		Div.pb(i) ;
    		if (i * i != n) {
    			Div.pb(n / i) ;
			}
		}
	}
	//Div.pb(0ll) ;
	sort(all(Div)) ;
	Div.resize(unique(all(Div))-Div.begin());

	for (int i = 0 ; i < Div.size()  ; i ++) {
		ll d = Div[i] ;
		ans = _sum(ans , _mul(d , _segment(min(m , n / (d + 1)) , min(m , n / (d )) ))) ;
	}
	ans = _sub(_mul(n , m) , ans);
	if (ans < 0) ans += Mod ;
	cout << ans %  Mod << endl ;
    return (0) ;
}