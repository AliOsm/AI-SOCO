#include<bits/stdc++.h>
using namespace std;
 
//scanf("%I64d",&k);
//char s[100];  scanf("%s", s);
/*
//VECTOR
vector<long long> d(n);
for (int i = 0; i < n; ++i) {
	cin >> d[i];
}
sort(d.begin(), d.end());
 
vector<long long> dd;
for (int i = 0; i < n; ++i) {
    long long x;cin>>x;
	dd.push_back(i);
}
sort(dd.begin(), dd.end());
 
if(d == dd)
accumulate(d.begin(), d.begin() + 25, 0)
*/
 
/*
//SET
set<int> data;
data.insert(10);
data.insert(20);
data.insert(30);
data.insert(40);
data.insert(50);
data.erase(50);
 
cout << *data.begin();

cout<< *(data.lower_bound(25))<<"\n"; //30
cout<< *(data.upper_bound(25))<<"\n"; //30
 
cout<< *(data.lower_bound(30))<<"\n"; //30
cout<< *(data.upper_bound(30))<<"\n"; //40
 
auto it = data.lower_bound(25);
if (it != data.end() && *it <= 30){...}
 
auto it = data.begin(); 
while (it != data.end())
{
	cout << (*it) << " ";
	it++;
}
 
vector<int> DATA;
DATA.assign(data.begin(), data.end());
*/
 
//ceil,floor
 
/*
long long MOD = 1e9 + 7;
long long POWER(long long a, long long power){
    if(power == 0){
        return 1;
    }
    
    long long answer = POWER(a, power/2);
    if(power % 2 == 0){
        return answer * answer % MOD;
    }else{
         return answer * answer % MOD * a % MOD;
    }
}
*/









int main(int argc, char *argv[]){
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    
    
    int n;cin>>n;
    vector< pair<int, int> > data(n);
    
    for(int i = 1;i<=n;i++){
        int x;cin>>x;
        data[i-1] = make_pair(x, i);
    }
    sort(data.begin(), data.end());
    
    int answer = 0;
    
    for(int i = n-1;i>=0;i--){
        answer += (n - 1 - i)*data[i].first + 1;
    }
    cout<<answer<<endl;
    for(int i = n-1;i>=0;i--){
        cout<<data[i].second<<" ";
    }

	return 0;
}
 