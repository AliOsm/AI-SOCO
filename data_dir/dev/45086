#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <fstream>
#include <map>
#include <set>
#include <queue>
#include <memory.h>
#include <time.h>
#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <algorithm>
#include <cstdio>
#include <set>
#include <queue>
#include <cassert>
#include <climits>
#define sz(x) int((x).size())
#define FOR(i,a,b) for(ll(i) = (a); (i) <= (b); ++(i))
#define ROF(i,a,b) for(ll(i) = (a); (i) >= (b); --(i))
#define rep(i,n) for (int(i) = 0; (i) < (n); ++(i))
#define fe(i,a) for (ll(i) = 0; (i) < int((a).size()); ++(i))
#define C(a) memset((a),0,sizeof(a))
#define pb push_back
#define ppb pop_back
#define all(c) (c).begin(), (c).end()
#define sqr(a) (a)*(a)
#define mp(a,b) make_pair((a), (b))
#define X first
#define Y second
#define file freopen("input.txt","r",stdin)
#define file2 freopen("output.txt", "w",stdout)
#define text freopen("input.txt","r",stdin); freopen("output.txt", "w",stdout)
using namespace std;
typedef vector<int> vint;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <string>
#include <vector>
#include <climits>
#include <cassert>
#define y1 vamdlsfmvldf
using namespace std;
const ll mod = (ll)1e9 + 7;
const int INF = (int)(1e9);
const int N = 1000005;
pair<int, int> a[N];
int dop[N];
int dop1[N];
int t[N];
int sum (int r){
    int result = 0;
    for (; r >= 0; r = (r & (r+1)) - 1)
        result += t[r];
    return result;
}

void inc (int i, int delta){
    for (; i < N; i = (i | (i+1)))
        t[i] += delta;
}

int sum (int l, int r){
    return sum(r) - sum (l - 1);
}
int summa(int r){
    return sum(r + 1, N - 2);
}
int main(){
    int n;
    cin >> n;
    for(int i = 0; i < n; ++i){
        scanf("%d", &a[i].first);
        a[i].second = i;
    }
    sort(a, a + n);
    int i = 0;
    int cur = 1;
    while(i < n){
        while(i < n - 1 && a[i].first == a[i + 1].first){
            dop[a[i].second] = cur;
            ++cur;
            ++i;
        }
        dop[a[i].second] = cur;
        cur = 1;
        ++i;
    }
    i = n - 1;
    cur = 1;
    while(i >= 0){
        while(i > 0 && a[i].first == a[i - 1].first){
            dop1[a[i].second] = cur;
            ++cur;
            --i;
        }
        dop1[a[i].second] = cur;
        cur = 1;
        --i;
    }
    /*for(int i = 0; i < n; ++i){
        cout << dop[i] << " " << dop1[i] << endl;
    }*/
    inc(dop[0], 1);
    ll ans = 0;
    for(int i = 1; i < n; ++i){
        //cout << ans << endl;
        ans += summa(dop1[i]);
        inc(dop[i], 1);
    }
    cout << ans << endl;
}
