#include <bits/stdc++.h>

using namespace std;
#define ll long long int
ll n,m,w,sz=0,weight[1005],beauty[1005],dp[1005][1005];
bool vis[1005];
vector < ll > comp[1005],ad[1005];

void dfs(ll src)
{
    vis[src]=true;
    comp[sz].push_back(src);
    for(ll v: ad[src])
    {
        if(vis[v]) continue;
        dfs(v);
    }
}

ll func(ll indx, ll taken)
{
    if(indx==sz+1) return 0;
    if(dp[indx][taken]!=-1) return dp[indx][taken];
    ll sum=0,temp=0,ans=0;
    for(ll v: comp[indx])
    {
        sum+=weight[v];
        temp+=beauty[v];
        if(taken+weight[v]<=w) ans=max(ans,beauty[v]+func(indx+1,taken+weight[v]));
    }
    if(sum+taken<=w)
    {
        ans=max(ans,temp+func(indx+1,taken+sum));
    }
    ans=max(ans,func(indx+1,taken));
    return dp[indx][taken]=ans;
}


int main()
{
    ll i,j;
    scanf("%I64d %I64d %I64d",&n,&m,&w);
    for(i=1; i<=n; i++)
    {
        scanf("%I64d",&weight[i]);
    }
    for(i=1; i<=n; i++)
    {
        scanf("%I64d",&beauty[i]);
    }
    for(i=1; i<=m; i++)
    {
        ll u,v;
        scanf("%I64d %I64d",&u,&v);
        ad[u].push_back(v);
        ad[v].push_back(u);
    }
    for(i=1; i<=n; i++)
    {
        if(!vis[i])
        {
            ++sz;
            dfs(i);
        }
    }
    memset(dp, -1, sizeof dp);
    ll ans=func(1,0);
    printf("%I64d\n",ans);
    return 0;

}
