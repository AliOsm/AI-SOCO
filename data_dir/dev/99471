# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < int > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vll vector < ll >
# define pii pair < int , int >
# define mp make_pair
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n;
    IOS;
    fi>>n;
    static int p[1 << 20];
    for (int i = 1;i <= n;++i)
        fi>>p[i];
    static int f[1 << 20];
    const int mod = 1e9 + 7;
    f[0] = f[1] = 1;
    for (int i = 2;i <= n;++i)
        f[i] = (1ll * f[i - 1] * i) % mod;
    auto pow = [&](int a,int b,int mod)
    {
        int ans = 1;
        while (b)
        {
            if (b & 1)
                ans = (1ll * ans * a) % mod;
            a = (1ll * a * a) % mod;
            b /= 2;
        }
        return ans;
    };
    auto inv = [&](int N)
    {
        if (N < 2) return 0;
        int ans = f[N];
        ans = (1ll * ans * N) % mod;
        ans = (1ll * ans * (N - 1)) % mod;
        ans = (1ll * ans * pow(4,mod - 2,mod)) % mod;
        return ans;
    };
    auto Count = [&](int N,int k)
    {
        if (!k) return 0;
        int ans = 0;
        int C = (1ll * (k - 1) * k / 2) % mod;
        ans = (1ll * inv(N) * k + 1ll * f[N] * C) % mod;
        return ans;
    };
    static int t[1 << 20];
    auto U = [&](int i)
    {
        for (;i <= n;i += i&(-i))
            t[i] ++;
    };
    auto Q = [&](int i)
    {
        int ans = 0;
        for (;i;i -= i&(-i))
            ans += t[i];
        return ans;
    };
    int ans = 0;
    static int C[1 << 20];
    for (int i = 1;i <= n;++i)
    {
        ans = (ans + Count(n - i,p[i] - Q(p[i]) - 1)) % mod;
        C[i] = 1ll * (p[i] - Q(p[i]) - 1) * f[n - i] % mod;
        U(p[i]);
    }
    p(ans);
    C[n] = 1;
    for (int i = n - 1;i;--i)
        C[i] = (C[i + 1] + C[i]) % mod;
    memset(t,0,sizeof(t));
    for (int i = n;i;--i)
        ans = (ans + 1ll * C[i + 1] * Q(p[i])) % mod,U(p[i]);
    fo << ans << '\n';
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}


