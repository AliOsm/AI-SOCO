#include <bits/stdc++.h>

using namespace std;
#define ll long long
const int N = 1e5 + 5;
int a[N];

ll get(vector<int> &t, int x) {
    ll sum = 0;
    for (int i = 0; i < t.size(); i++) sum += abs(x - t[i]);
    return sum;
}

ll calc(vector<int> &vec) {
    int n = vec.size();
    ll ret = 1e15;
    for (int k = max(0, n / 2 - 1); k < min(n, n / 2 + 2); k++) {
        ret = min(ret, get(vec, vec[k]));
    }
    return ret;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin >> n;
    int sum = 0;
    for (int i = 1; i <= n; i++) cin >> a[i], sum += a[i];
    ll ans = 1e15;
    for (int i = 2; i <= sum; i++) {
        if (sum % i)continue;
        bool flag = 0;
        ll temp_res = 0;
        int indx = 1;
        while (indx <= n) {
            vector<int> nodes;
            int temp = 0;
            while (indx <= n && temp < i) {
                temp += a[indx];
                if (a[indx]) nodes.push_back(indx);
                indx++;
            }
            if (temp > 0 && temp != i) {
                flag = 1;
                break;
            }
            if (nodes.size())
                temp_res += calc(nodes);
        }
        if (!flag) ans = min(ans, temp_res);
    }
    if (ans >= 1e15) ans = -1;
    cout << ans << endl;
    return 0;
}