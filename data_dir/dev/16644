#include <algorithm>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>

using namespace std;

const int N = 100010;
const int inf = 0x3f3f3f3f;
const long long oo = 0x3f3f3f3f3f3f3f3fll;

typedef long long ll;

#define pb push_back

const double eps = 1e-11;

int n, d;
ll x, a[N], b[N];

ll getNextX() {
    x = (x * 37 + 10007) % 1000000007;
    return x;
}
void initAB() {
    for(int i = 0; i < n; i = i + 1){
        a[i] = i + 1;
    }
    for(int i = 0; i < n; i = i + 1){
        swap(a[i], a[getNextX() % (i + 1)]);
    }
    for(int i = 0; i < n; i = i + 1){
        if (i < d)
            b[i] = 1;
        else
            b[i] = 0;
    }
    for(int i = 0; i < n; i = i + 1){
        swap(b[i], b[getNextX() % (i + 1)]);
    }
}

struct Data{
	int x, id;
	Data(int x = 0, int id = 0):x(x), id(id) {}
	bool operator < (const Data &O) const{
		return x > O.x;
	}
};

ll ans[N];

int main(){
	cin >> n >> d >> x;
	initAB();
	//for(int i = 0; i < n; i++)
		//cout << a[i] << " ";
	//cout << endl;
	//for(int i = 0; i < n; i++)
		//cout << b[i] << " ";
	//cout << endl;
	vector<Data> vt;
	for(int i = 0; i < n; i++)
		vt.pb(Data(a[i], i));
	sort(vt.begin(), vt.end());
	if(d > 300){
		for(int i = 0; i < n; i++){
			for(int j = 0; j < vt.size(); j++){
				int id = vt[j].id;
				int x = vt[j].x;
				//cout << i << " " << j << " " << id << " " << x << endl;
				if(i < id) continue;
				if(b[i - id]){
					ans[i] = x;
					break;
				}
			}
		}
	}
	else{
		vector<int> B;
		for(int i = 0; i < n; i++)
			if(b[i]) B.pb(i);
		for(int i = 0; i < n; i++){
			for(int j = 0; j < B.size(); j++){
				if(B[j] > i) continue;
				ans[i] = max(ans[i], a[i - B[j]]);
			}
		}
	}
	for(int i = 0; i < n; i++)
		cout << ans[i] << endl;
	return 0;
}
