#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <bitset>
#include <regex>
#include <sstream>
#include <iterator>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cmath>
using namespace std;

#define MASK 0b011LL
#define GET(i) (1LL << (i))

#if MASK & GET(0)
template<typename T>
inline void read(T & v)
{
	for (auto & x : v)
		cin >> x;
}
#endif

#if MASK & GET(1)
template<typename T>
T nextIntLn()
{
	string tmp;
	T val;
	cin >> val;
	getline(cin, tmp);
	return val;
}
#endif 

#if MASK & GET(2)
std::vector<std::string> split(string & input, const std::string & reg)
{
	regex ws_re(reg);
	std::sregex_token_iterator first(input.begin(), input.end(), ws_re, -1), last;
	return{ first, last };
}
#endif

void solve()
{
	int n;
	cin >> n;
	vector<string> v(n);
	read(v);
	int ans = 0;
	for (char i = 'a'; i <= 'z'; ++i)
	{
		for (char j = 'a'; j <= 'z'; ++j)
		{
			int sum = 0;
			for (int u = 0; u < n; ++u)
			{
				bool is = true;
				for (int k = 0; k < v[u].size(); ++k)
				{
					if (!(v[u][k] == i || v[u][k] == j))
						is = false;
				}
				if (is)
					sum += v[u].size();
			}
			ans = max(ans, sum);
		}
	}
	cout << ans << endl;
}

int main()
{
	std::ios_base::sync_with_stdio(false);
	solve();
	return 0;
}