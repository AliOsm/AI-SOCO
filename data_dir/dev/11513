#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y,z;

    bool operator<(const P &a)const{
              return z>a.z;
    }

};

vector<int> v[5];

//bitset<4001000> b;
int a,i,b,n,d,c,m,k;

int o[222111];
int l[1111];
int j[1111];
int e;


int dx[10]={2,2,-2,-2,1,1,-1,-1},dy[10]={1,-1,1,-1,2,-2,2,-2};

//int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long mod=1000000007,mod2=1000000009,mod3=2017;
long long x,z,y;
double pi=3.14159265;
P u[1];
stack<int> s;
//set<int> s[222][22];
queue<int> q,q1;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//list<int> l;

//string r;
//char r[11111];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{
    return a.x<b.x;
}


int main()
{
    scanf("%d %d",&a,&b);
    //a=200000,b=30;
    k=(1<<b)-1;
    p[0]=1;
    for(int t=1;t<=a;t++)
    {
        //o[t]=t;
        scanf("%d",&o[t]);
        o[t]^=o[t-1];
        x=p[o[t]];
        y=p[o[t]^k];
        z+=min(x,y);
        if(x<y)
        p[o[t]]++;
        else p[o[t]^k]++,o[t]^=(k);
    }
    //printf("%lld###",z);
    printf("%lld",(long long)(a+1)*a/2-z);
}
//
