#pragma GCC optimize("O3")
#ifndef _GLIBCXX_NO_ASSERT
#include <cassert>
#endif
#include <cctype>
#include <cerrno>
#include <cfloat>
#include <ciso646>
#include <climits>
#include <clocale>
#include <cmath>
#include <csetjmp>
#include <csignal>
#include <cstdarg>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

#if __cplusplus >= 201103L
#include <ccomplex>
#include <cfenv>
#include <cinttypes>
#include <cstdbool>
#include <cstdint>
#include <ctgmath>
#include <cwchar>
#include <cwctype>
#endif

// C++
#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>

#if __cplusplus >= 201103L
#include <array>
#include <atomic>
#include <chrono>
#include <condition_variable>
#include <forward_list>
#include <future>
#include <initializer_list>
#include <mutex>
#include <random>
#include <ratio>
#include <regex>
#include <scoped_allocator>
#include <system_error>
#include <thread>
#include <tuple>
#include <typeindex>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
#endif

#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)  for(int i=a;i<b;i++)
using namespace std;

string to_string(string s) {
	return '"' + s + '"';
}

string to_string(const char* s) {
	return to_string((string) s);
}

string to_string(bool b) {
	return (b ? "true" : "false");
}

string to_string(char ch) {
	return string("'")+ch+string("'");
}

template <typename A, typename B>
string to_string(pair<A, B> p) {
	return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}

template <class InputIterator>
string to_string (InputIterator first, InputIterator last) {
  bool start = true;
  string res = "{";
  while (first!=last) {
  	if (!start) {
  		res += ", ";
  	}
  	start = false;
  	res += to_string(*first);
    ++first;
  }
  res += "}";
  return res;
}

template <typename A>
string to_string(A v) {
	bool first = true;
	string res = "{";
	for (const auto &x : v) {
		if (!first) {
			res += ", ";
		}
		first = false;
		res += to_string(x);
	}
	res += "}";
	return res;
}

void debug_out() { cerr << endl; }

template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
	cerr << " " << to_string(H);
	debug_out(T...);
}

template <typename A, typename B>
istream& operator>>(istream& input,pair<A,B>& x){
	input>>x.F>>x.S;
	return input;
}

template <typename A>
istream& operator>>(istream& input,vector<A>& x){
	for(auto& i:x)
		input>>i;
	return input;
}


#ifdef PRINTERS
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

unsigned long long binom[105][105][3];



// ways to get subset of i elements with sum of weights = j
unsigned long long dp[2][105][10005][3];
int cur=0;
int n;
int sum;
void add(int num){
	int prev=cur;
	cur^=1;
	for(int i=0;i<105;i++){
		for(int j=0;j<10005;j++){
			dp[cur][i][j][0]=dp[prev][i][j][0]+(i-1>=0 and j-num>=0?dp[prev][i-1][j-num][0]:0);
			dp[cur][i][j][1]=(dp[prev][i][j][1]+(i-1>=0 and j-num>=0?dp[prev][i-1][j-num][1]:0))%hell;
			dp[cur][i][j][2]=(dp[prev][i][j][2]+(i-1>=0 and j-num>=0?dp[prev][i-1][j-num][2]:0))%(hell+2);
		}
	}
}


void solve(){
	cin>>n;
    // n=100;
	vi x(n);
	cin>>x;
	dp[0][0][0][0]=dp[0][0][0][1]=dp[0][0][0][2]=1;
	sum=accumulate(all(x),0);
	for(auto i:x){
		add(i);
	}
	sort(all(x));
	int i=0;
	int ans=0;
	while(i<n){
		int j=i;
		int cursum=0;
		while(j<n and x[i]==x[j]){
			j++;
		}
		int k=i;
		while(k<n and x[i]==x[k]){
			cursum+=x[i];
			if(dp[cur][k-i+1][cursum][0]==binom[j-i][k-i+1][0] and dp[cur][k-i+1][cursum][1]==binom[j-i][k-i+1][1] and dp[cur][k-i+1][cursum][2]==binom[j-i][k-i+1][2]){
				int res=k-i+1;
				set<int>s;
				rep(l,0,n){
					if(l<i or l>k)s.insert(x[l]);
				}
				if(sz(s)==1)res=n;
				ans=max(ans,res);
			}
			k++;
		}
		i=j;
	}
	cout<<ans<<endl;
}

int main(){
	binom[0][0][0]=binom[0][0][1]=binom[0][0][2]=1;
	rep(i,1,105){
		binom[i][0][0]=binom[i][0][1]=binom[i][0][2]=1;
		binom[i][i][0]=binom[i][i][1]=binom[i][i][2]=1;
		rep(j,1,i){
			binom[i][j][0]=binom[i-1][j][0]+binom[i-1][j-1][0];
			binom[i][j][1]=(binom[i-1][j][1]+binom[i-1][j-1][1])%hell;
			binom[i][j][2]=(binom[i-1][j][2]+binom[i-1][j-1][2])%(hell+2);

		}
	}
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int t=1;
//	cin>>t;
	while(t--){
		solve();
	}
	return 0;
}