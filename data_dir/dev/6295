#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>

#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mod 1000000007
#define PI 3.14159265
#define pll pair<ll, ll>
using namespace std;

typedef unsigned long long ull;

bool is_prime(int n) {

    for (int i = 2; i * i <= n; ++i) {
            if (n % i == 0) {
                  return false;
            }
    }
    return true;
}

inline ll getPow(ll a,ll b){
    ll res = 1ll,tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
          /* res %= mod;*/
       }
       tp *= tp;
      /* tp %= mod;*/
       b >>= 1ll;
    }
    return res;
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

void ok() {
    puts("YES");
    exit(0);
}

void no() {
    puts("NO");
    exit(0);
}

ll xx[] = {-1, 1, 0, 0};
ll yy[] = {0, 0, -1, 1};

const int N = 1111;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    ll n = nxt(), m = nxt();
    vector<vector<ll>> mas(n, vector<ll>(m));
    for(int i = 0; i < n; i++) {
           for(int j = 0; j < m; j++) {
                  mas[i][j] = nxt();
           }
    }
    ll ans = 0ll;
    for(int i = 0; i < n; i++) {
           ll ct1 = 0ll;
           ll ct2 = 0ll;
           for(int j = 0; j < m; j++) {
                  if(mas[i][j]) ct1++;
                  else ct2++;
           }
           ans += getPow(2ll, ct1) - 1ll;
           ans += getPow(2ll, ct2) - 1ll;

    }
    for(int i = 0; i < m; i++) {
           ll ct1 = 0ll;
           ll ct2 = 0ll;
           for(int j = 0; j < n; j++) {
                  if(mas[j][i]) ct1++;
                  else ct2++;
           }
           ans += getPow(2ll, ct1) - 1ll;
           ans += getPow(2ll, ct2) - 1ll;

    }
    ans -= n * m;
    cout << ans;
    return 0;
}
