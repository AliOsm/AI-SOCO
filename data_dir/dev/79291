#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
// #define endl '\n';
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define floop(i,a,b) for(int i=a;i<=b;++i)
const ll mod=1e9+7;
const int maxn=2e5+10;
vector<pair<int,int> >a;
int visited[maxn],ans[maxn];
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
ordered_set st; 
int main(){
	IOS;
	int n;
	cin>>n;
	pair<int,int>p[n];
	for (int i = 0; i < n; ++i)
	{
		int x,y;
		cin>>x>>y;
		p[i]={x,y};
		a.emplace_back(x,i+1);
		a.emplace_back(y,-(i+1));
	}
	sort(a.begin(), a.end());
	for(auto i:a){
		int id=i.second;
		if(id>0){
			id--;
		}
		else{
			id*=-1;
			id--;
			ans[id]=st.size();
			int x=p[id].first;
			ans[id]-=st.order_of_key(x);
			st.insert(x);
		}
	}
	for (int i = 0; i < n; ++i)
	{
		cout<<ans[i]<<"\n";
	}
	return 0;
}