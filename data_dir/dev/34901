#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<61);
const int inf=(1<<30);
const int nmax=5e5+50;
const int mod=1e9+7;
using namespace std;
int n,m,i,j,t,x,mx,mx1,tim,fin[nmax],fout[nmax],in[nmax],h,cnt;
vector<int>l[nmax],a[nmax];
char c[nmax];
void dfs(int x,int p,int d)
{
    fin[x]=++tim;
    in[tim]=x;
    l[d].pb(tim);
    for(int i=0;i<a[x].size();i++)if(a[x][i]!=p)dfs(a[x][i],x,d+1);
    fout[x]=tim;
    mx=max(mx,d),mx1=max(mx1,(int)l[d].size());
}
int main()
{
    //freopen("sol.in","r",stdin);
    //freopen("sol.out","w",stdout);
    ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
    cin>>n>>m;
    for(i=2;i<=n;i++)
    {
        cin>>x;
        a[x].pb(i);
        a[i].pb(x);
    }
    for(i=1;i<=n;i++)cin>>c[i];
    dfs(1,1,1);
    int nr[mx+1][mx1+1][27];
    for(i=0;i<=mx;i++)for(j=0;j<=mx1;j++)for(t=0;t<26;t++)nr[i][j][t]=0;
    for(i=1;i<=mx;i++)
    {
        for(j=0;j<l[i].size();j++)
        {
            for(t=0;t<26;t++)if(j)nr[i][j][t]=nr[i][j-1][t];
            nr[i][j][c[in[l[i][j]]]-'a']++;
        }
    }
    while(m--)
    {
        cin>>x>>h;
        i=(lower_bound(l[h].begin(),l[h].end(),fin[x])-l[h].begin());
        j=(upper_bound(l[h].begin(),l[h].end(),fout[x])-l[h].begin())-1;
        if(i<=j && i>=0 && l[h][i]>=fin[x] && l[h][j]<=fout[x])
        {
            cnt=0;
            for(t=0;t<26;t++)
            {
                x=nr[h][j][t];
                if(i)x-=nr[h][i-1][t];
                cnt+=(x&1);
            }
            if(cnt<=1)cout<<"Yes"<<endl;
            else cout<<"No"<<endl;
        }
        else cout<<"Yes"<<endl;
    }
    return 0;
}
