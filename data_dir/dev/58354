/**
 * @author khokharnikunj8
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class AAnuHasAFunction {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n;
        in >> n;
        vector<int> ar(n);
        for (int i = 0; i < n; i++) in >> ar[i];
        vector<int> count(30, 0);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 30; j++)
                if (ar[i] & (1 << j)) count[j]++;
        }
        int max = -1;
        int idx = -1;
        for (int i = 0; i < n; i++) {
            int temp = 0;
            for (int j = 0; j < 30; j++) {
                if (count[j] == 1 && (ar[i] & (1 << j)) != 0) temp += (1 << j);
            }
            if (temp > max) {
                max = temp;
                idx = i;
            }
        }
        if (idx != -1) out << ar[idx] << " ";
        for (int i = 0; i < n; i++) if (i != idx) out << ar[i] << " ";
    }
};


int main() {
    AAnuHasAFunction solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
