#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <queue>
#include <clocale>
#include <bitset>
#include <cstring>
#include <memory.h>
#include <numeric>
#include <iomanip>
#include <stack>
#include <list>

using namespace std;

#pragma comment (linker, "/STACK:667177216")
#define ll long long
#define LL long long
#define ull unsigned long long
#define ld long double
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pb push_back
const ll mod = 1000000007;
#define INF (int)(2e9)
#define LINF (ll)(4e18)
#define forit(mas) for(auto(it)=(mas).begin();(it)!=(mas).end();(it)++)
#define pii pair<int,int>


int main() {

#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n, b;
	cin >> n >> b;
	vector<int>a(n);
	vector<int>epref(n, 0), esuf(n, 0), opref(n, 0), osuf(n, 0);
	vector<int>ans;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		epref[i] += a[i] % 2 == 0;
		opref[i] += a[i] % 2;
		if (i) {
			epref[i] += epref[i - 1];
			opref[i] += opref[i - 1];
		}
	}
	for (int i = n - 1; i >= 0; i--) {
		esuf[i] += a[i] % 2 == 0;
		osuf[i] += a[i] % 2;
		if (i + 1 < n) {
			esuf[i] += esuf[i + 1];
			osuf[i] += osuf[i + 1];
		}
	}
	for (int i = 0; i < n - 1; i++) {
		if ((epref[i] == opref[i] && (osuf[i + 1] == esuf[i + 1]))) ans.push_back(abs(a[i + 1] - a[i]));
	}
	sort(all(ans));
	int res = 0;
	for (int i = 0; i < ans.size(); i++) {
		if (b - ans[i] >= 0) {
			res++;
			b -= ans[i];
		}
		else break;
	}
	cout << res;
	return 0;
}