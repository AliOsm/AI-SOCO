#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;

typedef unsigned long long ull;

const int INF = int(1e9 + 5);

int nextInt() {
    int x = 0, p = 1;
    char c;
    do {
        c = getchar();
    } while (c<=32);
    if (c=='-') {
        p = -1;
        c = getchar();
    }
    while (c>='0' && c<='9') {
        x = x * 10 + c - '0';
        c = getchar();
    }
    return x * p;
}

const int maxn = 1<<20;

int n, m;
int x[maxn];

long long f(int xx) {
    long long res = 0;
    for (int i = 1; i<=n && x[i]<xx; i+=m) {
        res += 1LL*(xx-x[i]);
    }
    for (int i = n; i >= 1 && x[i]>xx; i-=m) {
        res += 1LL*(x[i]-xx);
    }
    return res*2LL;
}

int main()
{
    n = nextInt();
    m = nextInt();
    for (int i = 1; i <= n; i++)
        x[i] = nextInt();

    int l = -INF, r = INF;
    while (r-l>3) {
        int m1 = l+(r-l)/3;
        int m2 = r-(r-l)/3;
        if (f(m1)>f(m2)) l=m1;
        else r=m2;
    }
    long long mi = min(f(l), min(f(l+1),min(f(l+2),f(l+3))));
    cout << mi << '\n';
    return 0;
}
