#include <iostream>
#include <map>
using namespace std;

//int n;
long long int a[1000001];
int t[4000001];

long long int res=0;

int n;
int ma (int v, int tl, int tr, int l, int r)
{
    if (l > r)
        return n;
    if (l == tl && r == tr)
        return t[v];
    int tm = (tl + tr) / 2;
    int x=ma(v*2, tl, tm, l, min(r,tm));
    int y=ma(v*2+1, tm+1, tr, max(l,tm+1), r);
    if (a[x]>a[y])
    {
        return x;
    }
    else
    {
        return y;
    }
}

void build (long long int a[], int v, int tl, int tr)
{
    if (tl == tr)
        t[v]=tl;
    else
    {
        int tm = (tl + tr) / 2;
        build (a, v*2, tl, tm);
        build (a, v*2+1, tm+1, tr);
        if (a[t[v*2]]>a[t[v*2+1]])
        {
            t[v]=t[v*2];
        }
        else
        {
            t[v]=t[v*2+1];
        }
    }
}

void solve(int l,int r)
{
    if (l>r)
    {
        return;
    }
    int x=ma(1,0,n-1,l,r);
    //cout << l << ' ' << r << ' ' << x << endl;
    res+=a[x]*(x+1-l)*(r-x+1);
    //cout << ' ' << res  << endl;
    solve(l,x-1);
    solve(x+1,r);
    return;
}

int main()
{
//    int n;
    cin >> n;
    a[n]=-1e7;
    for (int i=0; i<n; i++)
    {
        scanf("%d",&a[i]);
    }
    build(a,1,0,n-1);
    solve(0,n-1);
    for (int i=0; i<n; i++)
    {
        a[i]*=-1;
    }
    build(a,1,0,n-1);
    solve(0,n-1);
    cout << res;
    return 0;
}
