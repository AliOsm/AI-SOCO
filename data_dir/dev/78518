/*
Author: Hossam Eissa

Idea:


*/
#include <bits/stdc++.h>
#include<stdio.h>
#include <map>
#include<unordered_map>
using namespace std;
#define sf(a) scanf("%d",&a)
#define sf2(a,b) scanf("%d %d",&a,&b)
#define sf3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define pf(a) printf("%d",a)
#define pf2(a,b) printf("%d %d",a,b)
#define pf3(a,b,c) printf("%d %d %d",a,b,c)
#define sfl(a) scanf("%lld",&a)
#define sfl2(a,b) scanf("%lld %lld",&a,&b)
#define sfl3(a,b,c) scanf("%lld %lld %lld",&a,&b,&c)
#define pfl(a) printf("%lld",a)
#define pfl2(a,b) printf("%lld %lld",a,b)
#define pfl3(a,b,c) printf("%lld %lld %lld",a,b,c)
#define nl printf("\n")
#define ll long long
#define se second
#define fi first
#define mk(a, b) make_pair(a, b)
#define pb push_back
#define vi vector<int>
#define vvi vector<vector<int>>
#define pii pair<int, int>
#define vvpi vector<vector<pii>>
#define pli pair<ll, int>
#define INF 2e9+5
#define MAX (int)1e6 + 5
#define FI freopen("input.txt", "r", stdin);
#define FO freopen("o.txt", "w", stdout);
#define in ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define edge pair<ll, pair<int, int>>
#define CYA  exit(0);
#define pi acos(-1);
int dx[] = { 0, 1, 0, -1 };
int dy[] = { 1, 0, -1, 0 }; // 4 Direction*/
/*int dx[]={1,1,0,-1,-1,-1,0,1};
int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction*/
/*int dx[] = { 2,1,-1,-2,-2,-1,1,2 };
int dy[] = { 1,2,2,1,-1,-2,-2,-1 };//Knight Direction*/
const int MOD = 1e9 + 7;
const int N = 1e6 + 5;
int n, m, k,a,b;
vector<ll>v;
ll d[N];
int main()
{
        in;
        cin>>a>>b>>n>>m;
        if(a>b)swap(a,b);
        if(n>m)swap(n,m);
        if(a<=n&&b<=m)
        {
            cout<<0<<endl;
            return 0;
        }
        else {
        int t;
        cin>>t;
        v.resize(t);
        for(int i=0;i<t;i++)
            cin>>v[i];
        sort(v.rbegin(),v.rend());
        d[n]=m;
        for(int i=0;i<min((int)v.size(),34);i++){
            for(int j=2e5;j>=1;j--){
                if(d[j]!=0){
                      //  cout<<i<<" "<<v[i]<<" "<<j<<" "<<d[j]<<endl;;
                        ll nn=v[i]*j;
                        if(nn>=2e5){
                       nn=2e5;
                        }
                            d[nn]=d[j];
                        d[j]*=v[i];
                        if(d[j]>=2e5)
                            d[j]=2e5;
                }
            }
            for(ll j=1;j<=2e5;j++){
                int w=min(j,d[j]);
                int h=max(j,d[j]);
                if(w>=a&&h>=b){
                    cout<<i+1<<endl;
                    return 0;
                }
            }
        }
        cout<<-1<<endl;

        }
}
