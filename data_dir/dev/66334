#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int l[100100];
int t[100100];
int cnt1[100100];
int cnt2[100100];
int ty[100100];
int a[100100];
int can[100100];
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif

	int n,m;
	scanf("%d%d",&n,&m);
	int tot1=0,tot2=0;
	FOR(i,0,n)
	{
		char c;
		int v;
		scanf("%c",&c);
		scanf("%c%d",&c,&v);
		if (c=='+')
		{
			ty[i]=1;
			tot1++;
			cnt1[v-1]++;
		}
		else
		{
			ty[i]=-1;
			tot2++;
			cnt2[v-1]++;
		}
		a[i]=v-1;
	}
	int cnt=0;
	FOR(i,0,n)
	{
		int sum=cnt1[i]+tot2-cnt2[i];
		if (sum==m)
		{
			cnt++;
			can[i]=1;
		}
	}
	FOR(i,0,n)
	{
		if (ty[i]==1)
		{
			if (can[a[i]])
				t[i]=1;
			if ((can[a[i]]==0) || (cnt>1))
				l[i]=1;
		}
		else
		{
			if ((can[a[i]]))
				l[i]=1;
			if ((can[a[i]]==0) || (cnt>1))
				t[i]=1;
		}
	}
	FOR(i,0,n)
	{
		if ((t[i]) && (!l[i]))
			printf("Truth\n");
		else
			if ((l[i]) && (!t[i]))
				printf("Lie\n");
			else
				printf("Not defined\n");
	}
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}