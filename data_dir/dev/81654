#pragma comment(linker, "/STACK:256000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <deque>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <map>
#include <set>
#include <string>
#include <queue>
#include <vector>
#include <ctime>
#include <cstring>
#include <sstream>

//#include <unordered_map>
//#include <unordered_set>


using namespace std;

//types
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<pii> vpii;


//define trick
#define VA_NUM_ARGS(...) VA_NUM_ARGS_IMPL_((0,__VA_ARGS__, 5,4,3,2,1))
#define VA_NUM_ARGS_IMPL_(tuple) VA_NUM_ARGS_IMPL tuple
#define VA_NUM_ARGS_IMPL(_0,_1,_2,_3,_4,_5,N,...) N
#define macro_dispatcher(macro, ...) macro_dispatcher_(macro, VA_NUM_ARGS(__VA_ARGS__))
#define macro_dispatcher_(macro, nargs) macro_dispatcher__(macro, nargs)
#define macro_dispatcher__(macro, nargs) macro_dispatcher___(macro, nargs)
#define macro_dispatcher___(macro, nargs) macro ## nargs

// for
#define FF(i, a, b, st) for (int i=a, e##i = b+st; i!=e##i; i+=st)
#define F(i, a, b) for (int i=a, e##i = b; i<=e##i; i++)
#define FN(i, n) F(i, 0, n-1)
#define FN1(i, n) F(i, 1, n)
#define FI(n) FN(i, n)
#define FI1(n) FN1(i, n)
#define FJ(n) FN(j, n)
#define FJ1(n) FN1(j, n)
#define RIP(i, a, b) for (int i=a, e##i = b; i>=e##i; i--)
#define RP(i, a) for (int i=a-1; i>=0; i--)

//scanf types
#define SI1(x) scanf("%d", &x)
#define SI2(x, y) scanf("%d %d", &x, &y)
#define SI3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define SI4(x, y, z, t) scanf("%d %d %d %d", &x, &y, &z, &t)
#define SI5(x, y, z, t, e) scanf("%d %d %d %d %d", &x, &y, &z, &t, &e)
#define SI(...) macro_dispatcher(SI, __VA_ARGS__)(__VA_ARGS__)
#define SD(x) scanf("%lf", &x)
#define SP(x) scanf("%d %d", &x.first, &x.second)
#define SS(x) scanf("%s", &x)
#define SA(x, n) FI(n) SI(x[i])
#define SAA(x, n, m) FI(n) FJ(m) SI(x[i][j])

#define WS(n) int n; while(SI(n) != EOF)

//scanf with def
#define DI1(a)         int a; SI(a)
#define DI2(a,b)       int a, b; SI(a, b)
#define DI3(a,b,c)     int a, b, c; SI(a, b, c)
#define DI4(a,b,c,d)   int a, b, c, d; SI(a, b, c, d)
#define DI5(a,b,c,d,e) int a, b, c, d, e; SI(a, b, c, d, e)
#define DI(...) macro_dispatcher(DI, __VA_ARGS__)(__VA_ARGS__)
#define DD(x) double x; SD(x)
#define DS(x) string x; cin>>x
#define DA(a, n) int n; SI(n); SA(a, n);
#define DA2(a, n) int n; SI(n); SAA(a, n, n)
#define DAA(a, n, m) int n, m; SI(n, m); SAA(a, n, m)
#define TESTS DI(tests); FN(test, tests)

//input & files
#define FR(x) freopen(x, "rt", stdin)
#define FW(x) freopen(x, "wt", stdout)
#define FRW(x, y) FR(x); FW(y)
#define UNSYNC() ios::sync_with_stdio(false)

//output && db
#define DBN1(a)         std::cerr<<#a<<"="<<(a)<<"\n"
#define DBN2(a,b)       std::cerr<<#a<<"="<<(a)<<", "<<#b<<"="<<(b)<<"\n"
#define DBN3(a,b,c)     std::cerr<<#a<<"="<<(a)<<", "<<#b<<"="<<(b)<<", "<<#c<<"="<<(c)<<"\n"
#define DBN4(a,b,c,d)   std::cerr<<#a<<"="<<(a)<<", "<<#b<<"="<<(b)<<", "<<#c<<"="<<(c)<<", "<<#d<<"="<<(d)<<"\n"
#define DBN5(a,b,c,d,e) std::cerr<<#a<<"="<<(a)<<", "<<#b<<"="<<(b)<<", "<<#c<<"="<<(c)<<", "<<#d<<"="<<(d)<<", "<<#e<<"="<<(e)<<"\n"
#define DBN(...) macro_dispatcher(DBN, __VA_ARGS__)(__VA_ARGS__)
#define DBA(x, n) {cout<<#x<<" = [ "; FI(n) cout<<x[i]<<((i+1==n)?" ]":", ");}
#define DBV(x) {cout<<#x<<" = [ "; int i = 0, n = x.size(); for(auto c:x) { cout<<c<<((i+1==n)?" ]":", "); i++;}}


#define PIN1(x) printf("%d\n", x)
#define PIN2(x, a) printf("%d %d\n", x, a)
#define PIN3(x, a, b) printf("%d %d %d\n", x, a, b)
#define PIN4(x, a, b, c) printf("%d %d %d %d\n", x, a, b, c)
#define PIN5(x, a, b, c, d) printf("%d %d %d %d %d\n", x, a, b, c, d)
#define PIN(...) macro_dispatcher(PIN, __VA_ARGS__)(__VA_ARGS__)

#define PI(x) printf("%d", x)
#define PIS(x) printf("%d ", x)
#define PA(x, n) {FI(n) if (i+1==n) PIN(x[i]); else PIS(x[i]);}
#define PV(x) PA(x, x.size())
#define PS(x) for (auto it: x) cout<<it<<" ";
#define PLN() putchar('\n');

#define D_EQ(l, r, p) (r-l <= p)
#define D_EQ6(l, r) D_EQ(l, r, 1e-6)
#define D_EQ9(l, r) D_EQ(l, r, 1e-9)

#define PREC(N) cout.precision(N), cout.setf(cout.fixed)


//algorithm
#define all(a) a.begin(), a.end()
#define REV(a) reverse(a.begin(), a.end())
#define REVA(a, n) reverse(a, a+n);

//consts
const int INF = 1000001000;
const int mod = 1000 * 1000 * 1000 + 7;
const int mod9 = 1000 * 1000 * 1000 + 9;
const int modr = 99990001;
const double PI = 3.1415926535897932;

//pair
#define x first
#define y second

//functions
double sqr(double x) { return x*x; };
ld sqr(ld x) { return x*x; };
ll sqr(ll x) { return x*x; };
ll sqr(int x) { return x * 1LL * x; };

ll gcd(ll a, ll b) { while (b) a %= b, swap(a, b); return a; }
ll bpm(ll a, ll n = -2, ll m = mod) { n = n >= 0 ? n : m + n; ll r = 1; while (n) { if (n & 1) r = (r*a) % m; a = (a*a) % m; n >>= 1; } return r; }
ll dist(ll x1, ll y1, ll x2, ll y2) { return sqr(x1 - x2) + sqr(y1 - y2); }


//operators
std::ostream& operator << (std::ostream& os, pii p) {
	return os << "{" << p.x << " " << p.y << "}";
}

typedef pair<pii, int> ppi;

#define SLL(x) scanf("%I64d", &x)
#define SAL(a, n) FI(n) SLL(a[i])
#define DLL(x) ll x; SLL(x);

const int N = 2000006;


vpii g[N];
int skl[N];
int main() {
	// your code goes here	
	//FR("input.txt", "output.txt");
	//UNSYNC();
	//p * (1 / (1 - s));

	DI(n, m, k);


	FI(m) {
		DI(x, y, d);
		g[x].push_back({ y, d });
		g[y].push_back({ x, d });
	}

	FI(k) {
		DI(x);
		skl[x] = 1;
	}

	int d = INF;
	FI1(n) {
		if (skl[i]) {
			for (pii p : g[i]) {
				if (!skl[p.x]) {
					d = min(d, p.y);
				}
			}
		}
	}

	cout << (d == INF ? -1 : d) << endl;

	return 0;
}