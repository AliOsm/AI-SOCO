//

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <iomanip>
#include <fstream>
#include <functional>

using namespace std;

typedef pair <int, int> pii;
typedef pair <long long, long long> pll;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

#define endl "\n"
#define mp make_pair

const int mod = 1000000007;
const int INF = 1000000000;

int n, p[100005], used[100005], can[100005];
int result = 1;
vector <int> mx;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;

    for (int i = 1; i <= n; i++) {
        cin >> p[i];

        if (mx.empty() || (p[i] > mx[0]))
            can[p[i]] = 1;

        if (!mx.empty() && (mx[0] > p[i]) && ((mx.size() == 1) || (mx[1] < p[i])))
            used[mx[0]]++;

        mx.push_back(p[i]);
        sort(mx.begin(), mx.end(), greater<int>());

        if (mx.size() > 2)
            mx.pop_back();
    }

    for (int i = 2; i <= n; i++) {
        if (used[i] - can[i] > used[result] - can[result])
            result = i;
    }

    cout << result << endl;

    return 0;
}