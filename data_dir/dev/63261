//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>


using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(3e5+5);
const ll mod=(ll)(998244353);
int a[maxn],bit[maxn];

void update(int idx,int val,int n)
{
    assert(idx!=0);

    while(idx<=n)
    {
        bit[idx]=max(bit[idx],val);idx+=idx&-idx;
    }
}

int query(int idx)
{
    int ret=0;

    while(idx>0)
    {
        ret=max(ret,bit[idx]);

        idx-=idx&-idx;
    }

    return ret;
}

int main()
{
    ios_base::sync_with_stdio(0);

    int t;cin>>t;

    while(t>0)
    {
        int n;cin>>n;

        vector<int> first(n+1,-1),last(n+1,-1);

        for(int i=1;i<=n;i++)
        {
            cin>>a[i];

            last[a[i]]=i;
        }

        for(int i=n;i>=1;i--)
        {
            first[a[i]]=i;
        }

        vector< pii > v;

        for(int i=1;i<=n;i++)
        {
            if(first[i]!=-1)
            {
                v.pb({first[i],last[i]});

               // cout<<first[i]<<" "<<last[i]<<endl;
            }
        }

        vector<int> dp(v.size());int res=1;

       dp[0]=1;

       for(int i=1;i<v.size();i++)
       {
           if(v[i-1].second<v[i].first)
           {
               dp[i]=dp[i-1]+1;
           }

           else
           {
               dp[i]=1;
           }

           res=max(res,dp[i]);
       }

       cout<<(v.size()-res)<<endl;t--;
    }

    return 0;
}
