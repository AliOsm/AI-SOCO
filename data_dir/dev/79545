#include<bits/stdc++.h>
using namespace std;

#define MOD          (ll)1e9+7
#define MAX          (ll)1e5+5
#define ll           long long
#define pii          pair<ll,ll>
#define sf(a)        scanf("%d",&a)
#define pf(a)        prllf("%d\n",a)
#define bug(a)       cerr << #a << " : " << a << endl;
#define mem(a,b)     memset(a,b,sizeof(a))
#define all(x)       x.begin(),x.end()
#define rall(x)      x.rbegin(),x.rend()
#define pb           push_back
#define F            first
#define S            second
#define Time()       cout<< "\nElapsed Time : " << (clock()*1.0) / CLOCKS_PER_SEC <<" sec"<< endl;
#define FastRead     ios_base::sync_with_stdio(false);cin.tie(NULL);

int main()
{
    FastRead

    ll n,m,cnt=0;
    cin >> n >> m;

    ll a[n+2];
    vector < ll > Mods[m+2];
    vector < pii > free;

    for(ll i=0;i<n;i++)
    {
        cin >> a[i];
        Mods[a[i]%m].push_back(i);
    }

    ll k = n/m;
    for(ll j=0;j<2*m;j++)
    {
        ll i = j%m;
        while(Mods[i].size() > k)
        {
            free.push_back(pii(i,Mods[i].back()));
            Mods[i].pop_back();
        }
        //bug(Mods[0].size())
        while(Mods[i].size() < k && free.size())
        {
            ll md = free.back().F , idx = free.back().S;
            //bug(i)
            //bug(md)
            free.pop_back();
            Mods[i].push_back(i);

            int temp , c1;
            if(i < md)
            {
                //bug(i)
                a[idx] += (m-md+i);
                c1 = m-md+i;
            }
            else
            {
                a[idx] += (i-md);
                c1 = i-md;
            }
            cnt += c1;
        }
    }
    cout << cnt << endl;
    for(ll i=0;i<n;i++)
        cout << a[i] << " ";
    cout << endl;
}
