#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define ff first
#define ss second
#define maxn 300005
#define mod 998244353
using namespace std;

vector<int> edge[maxn];
int visited[maxn], color[maxn];
ll p_pow[maxn];

void clean(int n) {
    for(int i=1; i<=n; i++)
        edge[i].clear();
    for(int i=1;i<=n;i++)color[i] = -1;
    for(int i=1;i<=n;i++)visited [i]= 0;
}

ll mul(ll x, ll y){
    ll res = (x%mod * y%mod)%mod;
    return res;
}

ll add(ll x, ll y){
    ll res = (x%mod + y%mod)%mod;
    return res;
}


ll bfs(int root) {
    ll cnt = 0, o = 0;
    queue<int> Q;
    Q.push(root);
    visited[root] = 1;
    color[root] = 0;
    cnt++;

    while(!Q.empty()) {
        int node = Q.front();
        Q.pop();
        for(auto x: edge[node]) {
            if(color[x] == color[node])
                return 0;
            if(visited[x])
                continue;
            visited[x] = 1;
            if(!color[node]) o ++;
            color[x] = 1 - color[node];
            Q.push(x);
            cnt++;
        }
    }
    //cout << cnt << endl;
    return add(p_pow[cnt-o], p_pow[o]);

}

int main() {
    p_pow[0] = 1;
    for(int i=1;i<=maxn-2;i++){
        p_pow[i] = mul(2, p_pow[i-1]);
    }
    int TC;
    scanf("%d", &TC);
    while(TC--) {
        int n, m;
        scanf("%d%d", &n, &m);
        if(n == 1){
            printf("3\n");
            continue;
        }
        clean(n);
        for(int i=0; i<m; i++) {
            int x, y;
            scanf("%d%d", &x, &y);
            edge[x].pb(y);
            edge[y].pb(x);
        }
        ll res = 1;
        for(int i=1; i<=n; i++) {
            if(visited[i])
                continue;
            res = mul(res, bfs(i));
        }//cout << "->  ";
        printf("%lld\n", res);
    }

    return 0;
}

