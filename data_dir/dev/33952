/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll          long long int
#define db          double
#define pf          printf
#define sf          scanf
#define ff          first
#define ss          second
#define clr         clear()
#define sz          size()
#define pb          push_back
#define mk          make_pair
#define pi          acos(-1)
#define inf         100000000000000000
//#define mod         1000000007
#define ull         unsigned long long int
#define f(i,k,n)    for(ll i=k;i<n;i++)
#define fr(i,n,k)   for(i=n;i>=k;i--)
#define ent(a)      scanf("%lld",&a)
#define ent2(a,b)   scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a)      memset(a,0,sizeof(a))
#define vec(v,s)    vector<ll>v[s]
#define arr(a,s)    ll a[s];
//#define check(n,pos) (n&(1<<pos))
//#define set(n,pos)  (n|(1<<pos))
//knight and king//
int dr[]= {2, 2, -2, -2, 1, -1, 1, -1};
int dc[]= {1,-1,  1, -1, 2,  2,-2, -2};
int dr1[]= {0, 0, 0, 1, 1, 1, -1, -1, -1};
int dc1[]= {-1,0, 1,-1, 0, 1, -1, 0,   1};
int dr2[]= {0, 0, 1, -1};
int dc2[]= {1,-1, 0,  0};
////////////////////////////
#define ma 1000005
using namespace std;

vector<pair<ll,ll> >adj[ma];
ll dis[ma],pa[ma],cost[ma];
vector<ll>sub[ma],sum[ma];
void dfs(ll u,ll par)
{
    ll i,j;

    ll cn=0;
    f(i,0,adj[u].sz)
    {
        ll p=adj[u][i].ff;
        ll c=adj[u][i].ss;
        if(p==par)continue;
        dis[p]=dis[u]+c;
        dfs(p,u);
        pa[p]=u;
        cost[p]=c;
        ll s=0;
        sub[u].pb(c);

        for(j=0;j<sub[p].sz;j++)
        {
            ll r=sub[p][j];
            sub[u].pb(r+c);
        }

    }
    ll s=0;

    sort(sub[u].begin(),sub[u].end());
    sum[u].pb(0);
    for(i=0;i<sub[u].sz;i++)
    {
        s+=sub[u][i];
        sum[u].pb(s);
    }

}


ll get(ll x,ll c)
{
    if(sub[x].sz==0)return 0;
    ll lo=0,hi=sub[x].sz-1,mid,ans=-1;
    while(lo<=hi)
    {
        mid=(lo+hi)>>1;
        if(sub[x][mid]<=c)
            ans=mid,lo=mid+1;
        else hi=mid-1;
    }
    return ans+1;

}






ll query(ll x,ll h)
{
    ll k=get(x,h);
    ll s=h,s1=0;
    ll h1=h;
    s+=k*h1;
    s1+=sum[x][k];
    ll d=0;


    while(x!=1)
    {
        ll u=pa[x];
        d+=cost[x];
        if(d>=h)break;
        s+=h;
        s1+=d;
        for(ll i=0;i<adj[u].sz;i++)
        {
            ll p=adj[u][i].ff;
            ll q=adj[u][i].ss;
            if(p==x||p==pa[u])continue;
            ll d1=d+q;
            if(d1>=h)break;
            ll r=get(p,h-d1);

            s1+=sum[p][r]+(r+1)*d1;
            s+=(r+1)*h;
        }
        x=u;



    }
    return s-s1;

}





int main()
{
    ll n,i,j,m,x;
    //ios_base::sync_with_stdio(0);
    //cin.tie(0);
    //cout.tie(0);
    ent2(n,m);
        for(i=1;i<n;i++)
        {
            ent(x);
            //x=1;

            ll p=(i+1)/2;
            ll p1=i+1;
           // cout<<p<<" "<<p1<<endl;



            adj[p].pb(mk(p1,x));
            adj[p1].pb(mk(p,x));
        }

        dfs(1,-1);


        while(m--)
        {
            ll x,y;
            ent2(x,y);
            ll ans=query(x,y);
            pf("%lld\n",ans);
        }



}
