#include <bits/stdc++.h>




using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;


#define int ll
#define rand shittttty_shit
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rng_64(chrono::steady_clock::now().time_since_epoch().count());


typedef pair<int, int> pii;
typedef pair<string, string> pst;
typedef pair<pii, pii> piii;
typedef vector<piii> vpii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<short> vs;
typedef vector<vs> vvs;
typedef vector<vvs> vvvs;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;
typedef vector<vvld> vvvld;
typedef vector<string> vst;
typedef vector<vst> vvst;
typedef pair<ld, ld> pld;
typedef pair<pld, pld> pldd;
typedef vector<pld> vpd;
typedef complex<double> base;


#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define my_abs(a) (((a) >= 0) ? (a) : -(a))
#define mp(a, b) make_pair(a, (b))
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define SZ(a) ((int)((a).size()))
#define MODIK(a) (a >= M ? a - M : a)
#define triple(T) tuple<T, T, T>
#define quad(T) tuple<T, T, T, T>
#define watch(x) cout << (#x) << " = " << x << endl;
#ifdef MAX_HOME
#define cerr cout
#else
#define cerr if (false) cerr
#endif


const double PI = 2 * acos(0.0);

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";

istream &operator >> (istream &in, pii &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pii &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


istream &operator >> (istream &in, pld &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pld &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


template <class T0, class T1>
inline ostream & operator << (ostream &out, pair<T0, T1> &a) {
    return out << "{" << a.first << ", " << a.second << "}";
}

template <class T0, class T1, class T2>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) << ", " << get<2>(a) << "}";
}

template <class T0, class T1, class T2, class T3>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2, T3> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) <<
               ", " << get<2>(a) << ", " <<  get<3>(a) << "}";
}

template<class T>
inline ostream & operator << (ostream &out, vector<T> &a) {
    out << "[";
    fori (i, a.size())
        out << a[i] << vector<string>{", ", "]  "}[i + 1 == a.size()];
    return out;
}


void print(int n, int k, vector<quad(int)> kek)
{
    ofstream cout("output.txt");
    cout << n << ' ' << k << '\n';
    for (auto p : kek) {
        int r, x, y, z;
        tie(r, x, y, z) = p;
        cout << x << ' ' << y << ' ' << z << ' ' << r << '\n';
    }
    cout.close();
    exit(0);
}


void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n\nTOTAL EXECUTION TIME: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
}


const int M1 = 1000000093, p1 = 27162;
const int M2 = 1000000087, p2 = 241;

const ld pi = atan2(1, 0) * 2, EPS = 1e-9;
const int pw = 10, N = 1e5 + 10, oo = 1e9 + 100, B = 316, M = 1e9 + 7;


int used[N], cnt[N];
vi vert[N];


int solution(int n, int k, vpi kek)
{
    swap(n, k);

    for (int i = 0; i < n; ++i)
        vert[kek[i].first].push_back(i),
        vert[kek[i].second].push_back(i);

    set<int> _1, _2;
    for (int i = 0; i < n; ++i)
        _2.insert(i);


    while (SZ(_1) || SZ(_2))
    {
        if (SZ(_1))
        {
            int ind = *_1.begin();
            _1.erase(_1.begin());

            if (used[kek[ind].first] && used[kek[ind].second])
                ;
            else if (!used[kek[ind].first])
            {
                used[kek[ind].first] = 1;
                cnt[ind] = 1;

                for (auto p : vert[kek[ind].first])
                    _1.insert(p),
                    _2.erase(p);

                vert[kek[ind].first].clear();
            }
            else
            {
                used[kek[ind].second] = 1;
                cnt[ind] = 1;

                for (auto p : vert[kek[ind].second])
                    _1.insert(p),
                    _2.erase(p);

                vert[kek[ind].second].clear();
            }
        }
        else
        {
            int ind = *_2.begin();
            _2.erase(_2.begin());


            assert(used[kek[ind].first] + used[kek[ind].second] != 1);

            if (used[kek[ind].first] && used[kek[ind].second])
                ;
            else
            {
                cnt[ind] = 1;

                for (auto p : vert[kek[ind].second])
                    _1.insert(p),
                            _2.erase(p);

                vert[kek[ind].second].clear();


                for (auto p : vert[kek[ind].first])
                    _1.insert(p),
                            _2.erase(p);

                vert[kek[ind].first].clear();

                used[kek[ind].first] = 1;
                used[kek[ind].second] = 1;
            }
        }
    }

    return n - count(cnt, cnt + N, 1);
}


void smain()
{
    int n, k;
    cin >> n >> k;
    vpi kek(k);

    for (int i = 0; i < k; ++i)
        cin >> kek[i];

    cout << solution(n, k, kek);
}