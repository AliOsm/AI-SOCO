#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
using namespace std;    
const int N = int(1e5) + 10, mod = int(1e9)  + 7;
int n,a[N],b[N];
vi g[N+10];

ll modpow(ll a,ll b){
	ll res = 1;
	while(b){
		if(b & 1) res = res * a % mod;
		a = a * a % mod;
		b >>= 1;
	}
	return res;
}

int main () {
	scanf("%d",&n);
	for(int i=2;i<=N;i++){
		for(int j=2*i;j<=N;j+=i) g[j].pb(i);
	}
	int mx = 0;
	for(int i=1;i<=n;i++){
		scanf("%d",&a[i]);
		mx = max(mx,a[i]);
	}
	sort(a+1,a+n+1);
	int j = n,last,r;
	for(int i=mx;i>0;i--){
		while(j > 0 && a[j] >= i) j--;
		b[i] = j + 1;		
	}
	ll ans = 1,r1,r2;
	for(int i=2;i<=mx;i++){
		last = 1;
		r1 = r2 = 1;
		for(int j=0;j<g[i].size();j++){
			r = b[g[i][j]];
			r1 = r1 * modpow(j+1,r - last) % mod;
			last = r;		
		}
		r2 = r1;
		r1 = r1 * modpow(g[i].size() + 1, n - last + 1) % mod;
		r = b[i];
		r2 = r2 * modpow(g[i].size() + 1, r - last) % mod;
		r2 = r2 * modpow(g[i].size() + 2, n + 1 - r) % mod;
		r2 = (r2 - r1 + mod) % mod;
		ans = (ans + r2) % mod;
	}
	printf("%lld",ans);
return 0;
}