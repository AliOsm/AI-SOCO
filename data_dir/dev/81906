#include <cstdio>
#include <cstring>
#include <set>
#include <string>
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <set>
#include <string>
#include <iostream>
#include <cmath>
#include <vector>
#include <map>
#include <stack>
#include <time.h>
#include <queue>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define sqr(x) ((x)*(x))
#define PB push_back
#define MP make_pair
typedef long long lld;
#define rep(i,n) for(int i=0;i<n;i++)
#define REP(i,a,b) for(int i=a;i<=b;i++)
char a[100010];
int c[100010];
const int mod = 1000000007;
lld Pow(lld a,lld b,lld c) {
    lld ans = 1;
    while(b) {
        if(b&1) ans = ans * a % c;
        b >>= 1;
        a = a * a % c;
    }
    return ans;
}
int main() {
    scanf("%s",a);
    int n = strlen(a),k;
    int cnt0 = count(a,a+n,'0');
    int cnt5 = count(a,a+n,'5');
    int cnt = 0;
    REP(i,0,n-1)
    {
        if(a[i] == '0' || a[i] == '5')
        {
            c[cnt++] = i;
        }
    }
    scanf("%d",&k);
    lld tmp1 = Pow(2,(lld)n*k,mod);
    tmp1 -= 1;
    if(tmp1 < 0) tmp1 += mod;
    lld tmp2 = Pow(2,n,mod);
    tmp2 -= 1;
    if(tmp2 < mod) tmp2 += mod;
    tmp2 = Pow(tmp2,mod-2,mod);
    lld ans = 0;
    REP(i,0,cnt-1)
    {
        ans += Pow(2,c[i],mod) * tmp1 % mod * tmp2 % mod;
        if(ans >= mod) ans -= mod;
    }
    printf("%I64d\n",ans);
    return 0;
}