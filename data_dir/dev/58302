#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for(ll i=a;i<b;i++)
#define bac(i,a,b) for(ll i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef vector< ll > vi;
typedef vector<pair<ll,ll> > vpii;
#define all(c) c.begin(),c.end()
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define INF 1000000007
#define N 100005
vpii adj[4*N];
ll i,j,k,n,q,m,d,su,ans,maxi,a,b,x,y,o,e,mini=INF,cnt,t;
bool printed=false;
void print()
{
    cout<<"YES"<<endl;
    rep(i,1,n+1)
    {
        rep(j,0,adj[i].size())
        cout<<i<<" "<<adj[i][j].first<<endl;
    }
}
void dfs(ll s,ll l)
{
    if(a==n)
    {print();
    printed=true;
    exit(0);}
    ll x=k-adj[s].size();
    if(s!=1)
    x--;
    while(x--)
    {
        if(a<n)
        {adj[s].pb(mp(a+1,l+1));
        a++;}
    }
    if(l<(d/2-1))
    rep(i,0,adj[s].size())
    {
        dfs(adj[s][i].first,adj[s][i].second);
    }
}

int main()
{
    
    ios
    int ti=1;
    //cin>>ti;
    while(ti--)
    {
        cin>>n>>d>>k;
    a=1;
    if(k==1)
    {
        if(n==2&&d==1)
        cout<<"YES"<<endl<<"1 2";
        else
        cout<<"NO";
        return 0;
    }
    if(d==1 )
    {
        if(n==2)
     {cout<<"YES"<<endl<<"1 2";return 0;}
    else
    {cout<<"NO";return 0;} 
    }
    if(d>=n)
    {cout<<"NO";return 0;}
    rep(i,0,d/2)
    {
        if(a<n){
        adj[a].pb(mp(a+1,i+1));
        a++;}
    }
    a++;
    adj[1].pb(mp(a,1));
    rep(i,1,d/2)
    {
        if(a<n){
        adj[a].pb(mp(a+1,i+1));
        a++;}
    }
    if(d%2)
    {
        t=a;
        b=k-1;
        while(b--)
        {
            if(a<n)
            {adj[t].pb(mp(a+1,d/2+1));
            a++;}
        }
    }
    if(a<=n)
    {
        dfs(1,0);
        if(!printed && d%2)
        dfs(2+d/2,0);
    }
    if(!printed)
    {
        if(a==n)
        print();
        else
        cout<<"NO";
    }
    
    }
    return 0;
}