#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <list>
#include <cassert>

using namespace std;

#define y1 roman_kaban
#define rank oryshych_konb
#define ull unsigned long long
const int mod = int(1e9) + 7;
const long long infLL = 2e18;
const int MX = 5010;

int c[MX + 2][MX + 2];
int dp[MX + 2][MX + 2];
int r[MX];

void init(){
    c[0][0] = 1;
    for(int i = 1; i < MX; i++){
        c[i][0] = 1;
    }
    for(int i = 1; i < MX; i++){
        for(int j = 1; j <= i; j++){
            c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;
        }
    }
}

int main()
{
    //cerr << (sizeof(dp) >> 20) << endl;
    init();
    //freopen("/Users/ozzy/Documents/in.txt","r", stdin);
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    string s;
    cin >> s;
    string t = "";
    t += s[0];
    for(int i = 1; i < n; i++){
        if(s[i] != s[i - 1]) t += s[i];
    }

    for(int i = 0; i < t.size(); i++){
        int curr = t[i] - 'a';
        dp[1][curr] = 1;
        for(int len = 1; len <= i; len++){
            dp[len + 1][curr] = 0;
            for(int pr = 0; pr < 26; pr++){
                if(pr != curr){
                        dp[len + 1][curr] = (dp[len + 1][curr] + dp[len][pr]) % mod;
                }
            }
        }
    }
    long long ans = 0;
    for(int i = 1; i <= t.size(); i++){
        long long r = 0;
        for(int z = 0; z < 26; z++){
            r = (r + dp[i][z]) % mod;
            //cout << dp[i][z] << ' ';
        }
        //cout << i << ' ' << r << endl;
        ans += c[n - 1][i - 1] * r;
        ans %= mod;
    }
    cout << ans << endl;
    return 0;
}

/*
    a[i] / r[i] -  a[i] / (r[i] + 1) =
    (a[i] * (r[i] + 1) - a[i] * r[i]) / ri * (ri + 1)=
    a[i] / ri / (ri + 1);

*/
