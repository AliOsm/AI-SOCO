#include<bits/stdc++.h>
using namespace std;
int a,s,d[500002][2],f[500002],g,h,j,k,l,i,n,m;
vector<int> v[500002];
struct tre{
    int val;
    int shep;
    tre *L;
    tre *R;
    tre(){
        val=0;
        shep=0;
        L=NULL;
        R=NULL;
    }
};
void shplit(tre *&it,int l,int r){
    if(!it->L) it->L=new tre();

    it->L->shep=it->shep;
    it->L->val=0;

    if(!it->R) it->R=new tre();

        it->R->shep=it->shep;
        it->R->val=0;

    it->val=(r-l)*(it->shep-1);//cout<<"%"<<it->val<<"%"<<endl;
    it->shep=0;
    return;
}

void add(tre *&it,int l,int r,int lf,int rg,int val){
    if(!it) it=new tre();
    if(l>=rg || r<=lf) return;
    if(it->shep) shplit(it,l,r);
    if(l>=lf && r<=rg) {it->shep=val;it->val=0;return;}



    if(l+1==r) return;
    add(it->L,l,(l+r)/2,lf,rg,val);
    add(it->R,(l+r)/2,r,lf,rg,val);
    if(!it->L->shep){
        it->val=it->L->val;
    } else
    it->val=(it->L->shep-1)*((l+r)/2-l);

    if(!it->R->shep){
        it->val+=it->R->val;
    } else
    it->val+=(it->R->shep-1)*(r-(l+r)/2);
    return;
}



int sum(tre *&it,int l,int r,int lf,int rg){
    if(!it) return 0;
    if(l>=rg || r<=lf) return 0;
    if(it->shep) shplit(it,l,r);
    if(l>=lf && r<=rg) return it->val;
    return sum(it->L,l,(l+r)/2,lf,rg)+sum(it->R,(l+r)/2,r,lf,rg);
}


void dfs(int idx,int par){
    j++;
    d[idx][0]=j;
    f[idx]=par;
    for(vector<int>::iterator it=v[idx].begin();it!=v[idx].end();it++){
        if(*it==par) continue;
        dfs(*it,idx);
    }
    d[idx][1]=j;
    return;
}

main(){
    cin>>n;
    tre *root=NULL;
    for(i=0;i<n-1;i++){
        scanf("%d%d",&a,&s);
        v[a].push_back(s);
        v[s].push_back(a);
    }
    add(root,1,n+1,1,n+1,2);

    dfs(1,0);
    cin>>m;
    for(i=0;i<m;i++){
        scanf("%d%d",&a,&s);
        if(a==1){
            //

            if(sum(root,1,n+1,d[s][0],d[s][1]+1)){
                add(root,1,n+1,d[f[s]][0],d[f[s]][0]+1,2);

            }
            //cout<<sum(root,1,n+1,d[f[s]][0],d[f[s]][0]+1)<<"*";
            add(root,1,n+1,d[s][0],d[s][1]+1,1);
        }
        if(a==2){
            add(root,1,n+1,d[s][0],d[s][0]+1,2);
            //cout<<sum(root,1,n+1,d[s][0],d[s][0]+1)<<"#"<<endl;
        }
        if(a==3){
            //cout<<sum(root,1,n+1,d[s][0],d[s][0]+1)<<"*";
            if(sum(root,1,n+1,d[s][0],d[s][1]+1)>0) cout<<0;
                else cout<<1;
                cout<<endl;
        }
    }

}
