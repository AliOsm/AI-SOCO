#include<bits/stdc++.h>
#define si(x) scanf("%d",&x)
#define sii(x,y) scanf("%d %d",&x,&y)
#define siii(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define su(x) scanf("%u",&x)
#define sl(x) scanf("%ld",&x)
#define sli(x) scanf("%lld",&x)
#define slii(x,y) scanf("%lld %lld",&x,&y)
#define sliii(x,y,z) scanf("%lld %lld %lld",&x,&y,&z)
#define slu(x) scanf("%llu",&x)
#define sluu(x,y) scanf("%llu %llu",&x,&y)
#define sf(x) scanf("%f",&x)
#define slf(x) scanf("%lf",&x)
#define slff(x,y) scanf("%lf %lf",&x,&y)
#define slfff(x,y,z) scanf("%lf %lf %lf",&x,&y,&z)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define pf printf
#define fpf fprintf
#define pb push_back
#define f(i,x,y,z) for(ll i=x;i<y;i=i+z)
#define f1(i,x,y,z) for(ll i=x;i>y;i=i-z)
#define MAX 10000000
#define pi 2*acos(0)
#define mp make_pair
#define M 1000000009
#define xx first
#define yy second
#define N 100005
#define E 1000000
#define vc vector
#define pq priority_queue
#define Q queue
///#define ll long long int


using namespace std;

typedef long long int ll;

typedef unsigned long long int lu;

Q < pair < int,int > > q;

int a[N];
///int tr[N*4];

/*void init(int n, int b, int e)
{
    if(b==e){
        tr[n] = b*(a[b]!=0);
        return;
    }
    int l, r, m;
    m = (b+e)>>1;
    l = (n<<1)+1;
    r = l+1;
    init(l,b,m);
    init(r,m+1,e);
    tr[n] = max(tr[l],tr[r]);
}

int getmax(int n, int b, int e, int i, int j)
{
    if(i>e || j<b) return -1;
    if(i<=b && j>=e) return tr[n];
    int l, r, m;
    m = (b+e)>>1;
    l = (n<<1)+1;
    r = l+1;
    return max(getmax(l,b,m,i,j),getmax(r,m+1,e,i,j));
}

void updatemax(int n, int b, int e, int i)
{
    if(i>e || i<b) return;
    if(b==e){
        tr[n] = 0;
        return;
    }
    int l, r, m;
    m = (b+e)>>1;
    l = (n<<1)+1;
    r = l+1;
    updatemax(l,b,m,i);
    updatemax(r,m+1,e,i);
    tr[n] = max(tr[l],tr[r]);
}*/



int main()
{
    pair < int,int > p;
    int n, l, r, x, ans, j, hol, y;
    sii(n,l);
    ///cout<<n<<endl<<l<<endl;
    n--;
    f(i,0,n,1){
        si(a[i]);
        ///cout<<a[i]<<endl;
    }
    ///init(0,0,n-1);
    ans = 0;
    f(i,0,l,1)
    {
        if(a[i]==0) continue;
        if(i+l>=n){
            ans += a[i];
            a[i] = 0;
            ///updatemax(0,0,n-1,i);
            continue;
        }
        q.push(mp(i,a[i]));
        x = a[i];
        a[i] = 0;
        while(!q.empty()){
            p = q.front();
            q.pop();
            j = p.xx;
            x = p.yy;
            ///a[j] -= gese[j];
            if(j+l>=n){
                ans += x;
                ///gese[j] = 0;
                continue;
            }
            hol = x;
            f1(h,j+l,j,1)
            {
                if(a[h]==0) continue;
                y = min(a[h],x);
                a[h] -= y;
                x -= y;
                q.push(mp(h,y));
                if(x==0) break;
            }
            ///if(gese[j]==hol) b = 1;
        }
    }
    pf("%d\n",ans);
    return 0;
}
