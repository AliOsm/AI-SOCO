//#include "stdc++.h"
#include <bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
//#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD =1000000007 ;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
#define pi 3.141592653589793238462
#define int  long long
int wt[400001],mxnext[400001],up1[400001][20],up2[400001][20],up3[400001][20],up4[400001][20];
int findnext(int u,int re)
{
    int z=0;
    for(int i=19;i>=0;i--)
    {if(up2[u][i]<re)
        {
            u=up1[u][i];
        }
        else
        {
            //cout<<u<<endl;
        z=1;
        }
    }
   // cout<<z<<endl;
    if(!z)
        return -1;
    else
        return up1[u][0];
    
}
int32_t main()
{
    IOS;
    int q1,t,p,q,r,w,y,last,ans,hypo=0,cnt=1,x,u;
    cin>>q1;
    last=0;
    wt[1]=0;
   // cout<<up1[2][1]<<endl;
    while(q1--)
    {
        cin>>t;
        if(t==1)
        {
            cin>>p>>q;
            r=p^last;
            w=q^last;
            wt[cnt+1]=w;
            up1[cnt+1][0]=r;
            up2[cnt+1][0]=wt[r];
            for(int i=1;i<20;i++)
                up1[cnt+1][i]=up1[up1[cnt+1][i-1]][i-1];
            for(int i=1;i<20;i++)
                up2[cnt+1][i]=max(up2[cnt+1][i-1],up2[up1[cnt+1][i-1]][i-1]);
            y=findnext(cnt+1,wt[cnt+1]);
            //cout<<y<<endl;
            if(y!=-1)
            {
            up3[cnt+1][0]=y;
                mxnext[cnt+1]=1+mxnext[y];
            for(int i=1;i<20;i++)
            {
                up3[cnt+1][i]=up3[up3[cnt+1][i-1]][i-1];
            }
                up4[cnt+1][0]=wt[y];
                for(int i=1;i<20;i++)
                {
                    up4[cnt+1][i]=up4[cnt+1][i-1]+up4[up3[cnt+1][i-1]][i-1];
                }
            }
            cnt++;
        }
        else
        {
            cin>>p>>q;hypo=0;
            r=p^last;
            x=q^last;
            if(x<wt[r])
                ans=0;
            else
                ans=1+mxnext[r];
            u=r;hypo=1;x=x-wt[u];
            for(int i=19;i>=0;i--)
            {
                if(up4[u][i]<=x)
                {
                    hypo+=(1<<i);
                    x-=(up4[u][i]);
                    u=up3[u][i];
                }
            }
            ans=min(ans,hypo);
            cout<<ans<<endl;
            last=ans;
        }
    }
    return 0;
}
