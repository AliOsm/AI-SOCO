#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 1e6+10 , mod = 1e9+7;

int mn[4 * N] , mx[4 * N] , flag[4 * N];

void relax(int ind){
   int x = flag[ind];
   if(!x)
      return;
   flag[ind] = 0;
   mn[2 * ind] += x;
   mx[2 * ind] += x;
   flag[2 * ind] += x;
   mn[2 * ind + 1] += x;
   mx[2 * ind + 1] += x;
   flag[2 * ind + 1] += x;
}

void add(int s , int e , int ind , int l , int r , int val){
   if(s >= r || e <= l)
      return;
   if(s >= l && e <= r){
      mn[ind] += val;
      mx[ind] += val;
      flag[ind] += val;
      return;
   }
   relax(ind);
   int mid = (s + e) / 2;
   add(s , mid , 2 * ind , l , r , val);
   add(mid , e , 2 * ind + 1 , l , r , val);
   mn[ind] = min(mn[2 * ind] , mn[2 * ind + 1]);
   mx[ind] = max(mx[2 * ind] , mx[2 * ind + 1]);
}

int32_t main(){
   ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
   int n;
   cin >> n;
   string t = "";
   for(int i = 0 ; i < n ; i++)
      t += '.';
   string s;
   cin >> s;
   int cur = 0 , sum = 0;
   for(int i = 0 ; i < n ; i++){
      if(s[i] == 'L'){
         if(cur)
            cur--;
      }
      else if(s[i] == 'R'){
         cur++;
      }
      else{
         if(t[cur] == '('){
            sum--;
            add(0 , n , 1 , cur , n , -1);
         }
         else if(t[cur] == ')'){
            sum++;
            add(0 , n , 1 , cur , n , 1);
         }
         if(s[i] == '('){
            sum++;
            add(0 , n , 1 , cur , n , 1);
         }
         else if(s[i] == ')'){
            sum--;
            add(0 , n , 1 , cur , n , -1);
         }
         t[cur] = s[i];
      }
      if(sum == 0 && mn[1] == 0)
         cout << mx[1] << " ";
      else
         cout << -1 << " ";
   }
   return 0;
}
