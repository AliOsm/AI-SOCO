#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
using namespace std;
int memo[5001][5001];
bool mark[5001][5001];
int A[5001];
int dp(int l, int r){
  if(l == r) return A[l];
  int& ans = memo[l][r];
  if(ans != -1) return ans;
  return ans = dp(l, r-1) ^ dp(l+1, r);
}
int dp2(int l, int r){
  if(l == r) return A[l];
  int& ans = memo[l][r];
  if(mark[l][r]) return ans;
  mark[l][r] = true;
  return ans = max(ans, max(dp2(l,r-1), dp2(l+1, r)));
}
int main(){
  int n;
  scanf("%d", &n);
  for(int i = 0; i < n; i++) scanf("%d", &A[i]);
  memset(memo, -1, sizeof(memo));
  dp(0, n-1);
  int q;
  scanf("%d", &q);
  while(q--){
    int l, r;
    scanf("%d %d", &l, &r);
    printf("%d\n", dp2(l-1, r-1));
  }
  return 0;
}
