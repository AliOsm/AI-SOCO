#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <iomanip>
#include <iostream>
#include <list>
#include <sstream>
#include <ctime>
#include <functional>
#include <fstream>
#include <map>
#include <stack>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <queue>
#include <tuple>
#include <fstream>
#include <numeric>
#include <regex>
#include <array>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <deque>
#include <complex>
#include <stack>



using namespace std;
typedef long long ll;


#define int ll


const int sze = 1 << 19, MOD1 = 1e9 + 447, MOD2 = 1e9 + 21, x1 = 139, INF = 1e9 + 1;


signed main()
{
	int n, k, m;
	cin >> n >> k >> m;
	vector<string> challengers(n);
	vector<int> prices(n);
	map<string, int> to;

	for (int i = 0; i < n; ++i)
	{
		string f;
		cin >> f;
		to[f] = i;
		challengers[i] = f;
	}

	for (int i = 0; i < n; ++i)
		cin >> prices[i];
	
	for (int i = 0; i < k; ++i)
	{
		int q, mn = INF;
		cin >> q;

		vector<int> test;

		for (int j = 0; j < q; ++j)
		{
			int x;
			cin >> x;
			test.push_back(x);
			mn = min(mn, prices[x - 1]);
		}

		for (int v : test)
			prices[v - 1] = mn;
	}

	int ans = 0;
	for (int i = 0; i < m; ++i)
	{
		string f;
		cin >> f;

		ans += prices[to[f]];
	}
	
	cout << ans;
	return 0;
}