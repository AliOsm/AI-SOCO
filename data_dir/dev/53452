#include<bits/stdc++.h>
#include<sstream>
#include<string>
#define lli  long long int
#define ll long long
#define ld long double
#define mod 1000000007
#define M 100006
#define pb push_back
#define ff first
#define ss second
#define all(v) v.begin(),v.end()
#define mp make_pair
#define br cout<<'\n';
#define f(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define sz(a) a.size()
#define pii pair< int,int >
#define pll pair< ll,ll >
#define vii vector<pii>
#define vii vector<pii>
#define viii vector<tri>
#define pqueue priority_queue< int >
#define flush fflush(stdout)
#define in(a,n) lli a[n];for(lli i=0;i<n;i++)cin>>a[i];
#define printv(v) for(vector<lli> :: iterator itv=v.begin();itv!=v.end();itv++)cout<<*itv<<' ';br
#define prints(s) for(set<lli> :: iterator its=s.begin();its!=s.end();its++)cout<<*its<<' ';br
#define print2(a,b) cout<<a<<' '<<b;br
#define print3(a,b,c) cout<<a<<' '<<b<<' '<<c;br
#define print4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d;br
#define sum(a,n) lli sum=0;for(lli i=0;i<n;i++)sum+=a[i];
#define check cout<<"x"<<endl;
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);
#define upper(a) transform(a.begin(),a.end(),a.begin(),::toupper);

using namespace std;

lli modexp(lli a,lli n)
{
    lli r=1;
    while(n){
        if(n&1)
            r=(r*a)%mod;
        a=(a*a)%mod;
        n>>=1;
    }
    return r;
}

vector<lli> g[M];
lli a[M], x;


lli dfs_modified(lli v, lli p)
{
    lli sum = a[v];
    rep(i, g[v].size())
    //for(auto it : g[v])
    {
        lli it = g[v][i];
        if(it == p)
            continue ;
        sum += dfs_modified(it, v);
    }
    sum = max(sum, -x);
    return sum;
}



void solve()
{

    lli n;
    cin>>n;
    in(a, n);
    vector < char > v;
    lli d = 0, x = n - 1, i = 0;
    while(i <= x)
    {
        if(a[i] > d && a[x] > d)
        {
            if(a[i] <= a[x])
            {
                v.pb('L');
                d = a[i];
                i++;
            }
            else
            {
                v.pb('R');
                d = a[x];
                x--;
            }
        }
        else if(a[i] > d)
        {
            d = a[i];
            v.pb('L');
            i++;
        }
        else if(a[x] > d)
        {
            d = a[x];
            v.pb('R');
            x--;
        }
        else
            break ;
    }
    cout<<sz(v)<<endl;
    for(auto it : v)
        cout<<it;
    return ;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
//    cin>>t;
    t=1;
    while(t--)
    {
//        fill(dsu, dsu + 2000, -1);
        solve();
    }
    return 0;
}
