//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <cstring>
#include <fstream>
#include <functional>
#include <cstdio>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
using namespace std;

#define all(S) S.begin(), S.end()
#define sortb(S) sort(S.rbegin(), S.rend())
#define sorta(S) sort(all(S))
#define mem(C, V) memset(C, V, sizeof C)
#define ssum(N) (ll)N*(N+1)/2
#define gt(S) getline(cin, S)
#define sp(N) setprecision(N)<<fixed
#define siz(S) (int)S.size()
#define rz(S, N) S.resize(N)
#define mk make_pair
#define go continue
#define rep(i, j) for (int i = 0; i < int(j); i++)
#define rrep(i, j) for (int i = (int)j - 1; i > -1; i--)
#define Rep(i, j, k) for (int i = (int)j; i < (int)k; i++)
#define RRep(i, j, k) for (int i = (int)k-1; i >= (int)j; i--)
#define srep(S) for (auto it:S)
#define getdis(xa, ya, xb, yb) double(sqrt((xa - xb)*(xa - xb) + (ya - yb)*(ya - yb)))
#define slope(xa, ya, xb, yb) double ((yb-ya)/(xb-xa))
#define pi 3.1415926535897932384626433832795
#define ex 2.7182818284
#define mod 1000000007
#define soo s(1e5+1, '9')
#define oo 2e9+1
#define Read() freopen("input.txt", "r", stdin)
#define Write() freopen("output.txt", "w", stdout)

typedef stringstream ss;
typedef string s;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vi> vii;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<ll> vll;
typedef vector<bool> vb;
typedef vector<s> vs;
typedef map<ll, ll> mll;
typedef map<int, int> mii;
typedef map<char, ll> mci;
typedef map<s, ll> msi;

int di[] = { 0, 1, 0, -1 };
int dj[] = { 1, 0, -1, 0 };
int dik[] = { 1, 1, 2, 2, -1, -1, -2, -2 };
int djk[] = { 2, -2, 1, -1, -2, 2, -1, 1 };

ll gcd(ll x, ll y){ return !y ? x : gcd(y, x%y); }

int main(){
    //ios_base::sync_with_stdio(false);
    int n, ans = 0;
    s x, y;
    int hope[26][26], a[26], b[26], idx1, idx2, xa, ya;
    mem(hope, -1), idx1 = idx2 = -1;
    cin >> n >> x >> y, mem(a, -1), mem(b, -1);
    rep(i, n) if (x[i] != y[i]){
        hope[x[i] - 'a'][y[i] - 'a'] = i;
        a[x[i] - 'a'] = b[y[i] - 'a'] = i;
    }
    rep(i, n) if (x[i] != y[i] && hope[y[i] - 'a'][x[i] - 'a'] != -1){
        xa = hope[x[i] - 'a'][y[i] - 'a'];
        ya = hope[y[i] - 'a'][x[i] - 'a'];
        swap(x[xa], x[ya]);
        idx1 = xa + 1, idx2 = ya + 1;
        break;
    }
    if (idx1 == -1) rep(i, n) if (x[i] != y[i] && b[x[i] - 'a'] != -1){
        xa = a[x[i] - 'a'], ya = b[x[i] - 'a'];
        swap(x[xa], x[ya]);
        idx1 = xa + 1, idx2 = ya + 1;
        break;
    }
    if (idx1 > idx2) swap(idx1, idx2);
    rep(i, n) ans += x[i] != y[i];
    cout << ans << endl << idx1 << " " << idx2 << endl;
    return 0;
}