#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define pi 3.141592653589793238
#define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int dp[2005][2005];
int lol[2005];

pair<int,int>parent[2005][2005];

signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);  
    cout.tie(0);   
#ifndef ONLINE_JUDGE
    if(fopen("INPUT.txt","r"))
    {
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
    }
#endif

// -------------------------------------Code starts here---------------------------------------------------------------------     

  fill_n(&dp[0][0],2005*2005,-1e15);
  int n,k;
  cin>>n>>k;
  dp[0][0]=0;
  string a[n+1];
  string digit[10]={"1110111", "0010010", "1011101", "1011011", "0111010", "1101011", "1101111", "1010010", "1111111", "1111011"};
  int mm[11]={0};
  for(int i=0;i<10;i++)
  {
    int x=1;
    for(int j=6;j>=0;j--)
    {
      if(digit[i][j]=='1')
        mm[i]+=x;
      x*=2;
    }
  }

  for(int i=1;i<=n;i++)
    cin>>a[i];
  for(int i=1;i<=n;i++)
  {
    int x=1;
    for(int j=6;j>=0;j--)
    {
      if(a[i][j]=='1')
        lol[i]+=x;
      x*=2;
    }
  }

  for(int i=1;i<=n;i++)
  {
    set<int>s;
    unordered_map<int,int>madar;
    for(int j=0;j<=k;j++)
    {
      for(int l=0;l<=9;l++)
      {
        int z=(lol[i]&mm[l]);
        if(z==lol[i])
        {
          int num1=__builtin_popcount(lol[i]);
          int num2=__builtin_popcount(mm[l]);
          if(j-(num2-num1)>=0)
          if(dp[i][j]<dp[i-1][j-(num2-num1)]*10+l)
          {
            dp[i][j]=max(dp[i][j],dp[i-1][j-(num2-num1)]*10+l);
            parent[i][j]={j-(num2-num1),l};
          }
        }
      }
    }
    for(int j=0;j<=k;j++)
    {
      if(dp[i][j]>=0)
        s.insert(dp[i][j]);
    }
    int cnt=1;
    for(auto j:s)
      madar[j]=cnt++;
    for(int j=0;j<=k;j++)
    {
      if(dp[i][j]<0)
        dp[i][j]=-1e15;
      else
        dp[i][j]=madar[dp[i][j]];
    }    
  }
  
  if(dp[n][k]<=-1e12)
    cout<<-1;
  else
  {
    int ini=n;
    int x=k;
    vector<int>vec;
    while (ini!=0)
    {
      vec.push_back(parent[ini][x].second);
      x=parent[ini][x].first;
      ini--;
    }
    reverse(vec.begin(),vec.end());
    for(auto i:vec)
      cout<<i;    
  }

// -------------------------------------Code ends here------------------------------------------------------------------
    clock_t clk;
  clk = clock();

    clk = clock() - clk;
  cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
  return 0;
}
