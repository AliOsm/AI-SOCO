#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=1e5+5;
ll cst[M][3],dp[M][4][4];
ll nxt[M][4][4],ans[M];
std::vector<ll> eu,vtr[M];
void dfs(ll x,ll p=-1)
{
	eu.pb(x);
	for(auto u:vtr[x])
	{
		if(u!=p)
		{
			dfs(u,x);
		}
	}
}
ll solve(ll x,ll y,ll z)
{
	if(x==sz(eu))
		return 0;
	if(dp[x][y][z]!=-1)
		return dp[x][y][z];
	// cout<<eu[x]<<endl;
	ll mn=1e16;
	for(ll i=1;i<=3;i++)
	{
		if(y==i || z==i)
			continue;
		ll p=cst[eu[x]][i]+solve(x+1,i,y);
		if(mn>p)
		{
			mn=p;
			nxt[x][y][z]=i;
		}
	}
	return dp[x][y][z]=mn;
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll j=1;j<=3;j++)
		for(ll i=1;i<=n;i++)
			cin>>cst[i][j];
	for(ll i=1;i<n;i++)
	{
		ll u,v;
		cin>>u>>v;
		vtr[u].pb(v);
		vtr[v].pb(u);
	}
	ll root=1;
	for(ll i=1;i<=n;i++)
	{
		if(sz(vtr[i])>=3)
		{
			cout<<"-1\n";
			return 0;
		}
		if(sz(vtr[i])==1)
		{
			root=i;
		}
	}
	memset(dp,-1,sizeof(dp));
	dfs(root);
	// for(auto u:eu)
	// 	cout<<u<<endl;
	cout<<solve(0,0,0)<<"\n";
	ll c1=0,c2=0;
	for(ll i=0;i<sz(eu);i++)
	{
		ans[eu[i]]=nxt[i][c1][c2];
		ll tp=c1;
		c1=nxt[i][c1][c2];
		c2=tp;
	}
	for(ll i=1;i<=n;i++)
		cout<<ans[i]<<" ";
	cout<<"\n";
	return 0;
}