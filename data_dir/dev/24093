# include <bits/stdc++.h>
using namespace std;
# define int long long
# define f first
# define s second
const int N = 4e5 + 10 , INF = 1e9 + 10 , mod = 1e9 + 7;
int a[N] , b[N] , k;
map < int , int > f;
int n , I;
bool check(int l , int r){
	if(l > r) return false;
	int le = 1 , ri = n , res1 = n , res2 = 1;
	while(le <= ri){
		int mi = (le + ri) >> 1;
		if(a[mi] >= l){
			ri = mi - 1;
			res1 = mi;
		}
		else{
			le = mi + 1;
		}
	}
	le = 1 , ri = n;
	while(le <= ri){
		int mi = (le + ri) >> 1;
		if(a[mi] <= r){
			le = mi + 1;
			res2 = mi;
		}
		else{
			ri = mi - 1;
		}
	}
	int raod = max(0ll , res2 - res1 + 1);
	int K = 1 , k = 0;
	while(raod > K){
		K <<= 1;
		k ++;
	}
	return k * n <= I;
}
int get(int l , int r){
	if(l > r) return 0;
	int le = 1 , ri = n , res1 = n , res2 = 1;
	while(le <= ri){
		int mi = (le + ri) >> 1;
		if(b[mi] >= l){
			ri = mi - 1;
			res1 = mi;
		}
		else{
			le = mi + 1;
		}
	}
	le = 1 , ri = n;
	while(le <= ri){
		int mi = (le + ri) >> 1;
		if(b[mi] <= r){
			le = mi + 1;
			res2 = mi;
		}
		else{
			ri = mi - 1;
		}
	}
	return n - (res2 - res1 + 1);
}
main(){
	ios::sync_with_stdio(0); cin.tie(0);
	cin >> n >> I;
	I *= 8;
	int dis = 0;
	for(int i = 1; i <= n; i ++){
		cin >> a[i];
		b[i] = a[i];
		f[a[i]] ++;
		dis += (f[a[i]] == 1);
		if(f[a[i]] > 1) a[i] = -1;
	}
	int k = 0 , K = 1;
	while(dis > K){
		K <<= 1;
		k ++;
	}
	if(n * k <= I){
		cout << "0"; return 0;
	}
	int x = 0 , res = 1e9;
	sort(a + 1 , a + n + 1);
	sort(b + 1 , b + n + 1);

	for(int i = 1; i <= n; i ++){
		if(a[i] == -1) continue;
		x = max(x , i);
		while(check(a[i] , a[x + 1]) == true){
			x ++;
		}
		res = min(res , get(a[i] , a[x]));
	}
	cout << res << "\n";
}
