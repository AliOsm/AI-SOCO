#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7; 

int n,m,q;
int a[N], b[N], pn;

ll resa, pref[N], p[N];

void go(ll resa){
	int v = lower_bound(p + 1, p + pn + 1, resa) - p;
	ll ans = 1ll * mod * mod;
	if(v <= pn && v >= 1){
		ans = min(ans, p[v] - resa);
	}
	v--;
	if(v <= pn && v >= 1){
		ans = min(ans, abs(p[v] - resa));
	}
	printf("%lld\n", ans);
}

int main () {
	scanf("%d%d%d", &n,&m,&q);
	for(int i = 1; i <= n; i++){
		scanf("%d",  &a[i]);
		if(i & 1) resa += a[i];
		else resa -= a[i];
	}
	for(int i = 1; i <= m; i++){
		scanf("%d", &b[i]);
		pref[i] = pref[i - 1];
		if(i & 1) pref[i] += b[i];
		else pref[i] -= b[i];
		if(i >= n){
			ll x = pref[i] - pref[i - n];
			if((i - n + 1) & 1) x = -x;
			p[++pn] = -x;
			//cerr << x << endl;
		}
	}
	sort(p + 1, p + pn + 1);
	go(resa);
	for(int i = 1,l,r,x; i <= q; i++){
		scanf("%d%d%d", &l,&r, &x);
	    if(l & 1){
	    	if((r - l + 1) & 1) resa += x;
	    }
	    else{
	    	if((r - l + 1) & 1) resa -= x;
	    }
	    go(resa);
	}

return 0;
}