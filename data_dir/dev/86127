#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <stdio.h>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n, m;
const int MAXN = 1005;
int a[1000005];
bool dp[MAXN][MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	for(int i = 1; i <= n; i++)
		cin >> a[i];

	if(n > m)
	{
		cout << "YES\n";
		return 0;
	}

	dp[0][0] = true;
	for(int i = 1; i <= n; i++)
		for(int j = 0; j < m; j++)
			if(dp[i - 1][j])
			{
				dp[i][(j + a[i]) % m] = true;
				if((j + a[i]) % m == 0)
				{
					cout << "YES\n";
					return 0;
				}
				dp[i][j] = true;
			}

	cout << "NO\n";

	return 0;
}
