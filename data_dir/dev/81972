#include "bits/stdc++.h"
//#include "ext/pb_ds/tree_policy.hpp"
//#include "ext/pb_ds/assoc_container.hpp"
#define PB push_back
#define PF push_front
#define LB lower_bound
#define UB upper_bound
#define fr(x) freopen(x,"r",stdin)
#define fw(x) freopen(x,"w",stdout)
#define iout(x) printf("%d\n",x)
#define lout(x) printf("%lld\n",x)
#define REP(x,l,u) for(ll x = l;x<u;x++)
#define RREP(x,l,u) for(ll x = l;x>=u;x--)
#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())
#define mst(x,a) memset(x,a,sizeof(x))
#define all(a) a.begin(),a.end()
#define PII pair<int,int>
#define PLL pair<ll,ll>
#define MP make_pair
#define sqr(x) ((x)*(x))
#define lowbit(x) (x&(-x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define se second
#define fi first
#define dbg(x) cout<<#x<<" = "<<(x)<<endl;
#define sz(x) ((int)x.size())
#define EX0 exit(0);
#define twop(x) (1LL<<x)

typedef  long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ld;
using namespace std;
const int block_size = 320;
typedef complex<ll> point;
const ll mod = 1e9+7;
const ld eps = 1e-9;
const int inf = mod;
const db PI = atan(1)*4;
template<typename T>
inline int sign(const T&a){if(a<0)return -1;if(a>0)return 1;return 0;}


template<typename T> inline void in(T &x){
    x = 0; T f = 1; char ch = getchar();
    while (!isdigit(ch)) {if (ch == '-') f = -1; ch = getchar();}
    while (isdigit(ch))  {x = x * 10 + ch - '0'; ch = getchar();}
    x *= f;
}

const int maxn = 200010;
vector<int>to[maxn];
ll val[maxn];
PLL dfs(int cur,int fa){
    vector<PLL>son;
    for(auto i:to[cur]){
        if(i!=fa)son.PB(dfs(i, cur));
    }
    PLL cnt = {0,0};
    for(auto i:son){
        cnt.fi = max(cnt.fi,i.fi);
        cnt.se = max(cnt.se,i.se);
    }
    val[cur]+=cnt.fi-cnt.se;
    if(val[cur]<0){
        return MP(abs(val[cur])+cnt.fi,cnt.se);
    }
    return MP(0+cnt.fi,cnt.se+abs(val[cur]));
}
int main(){
    int n;in(n);
    REP(i,1,n){
        int a,b;cin>>a>>b;to[a].PB(b);to[b].PB(a);
    }
    REP(i,1,n+1)in(val[i]);
    
    ll mx = 0,mn = 0;
    REP(i,2,n+1){
        mx = max(mx,val[i]);
        mn = min(mn,val[i]);
    }
    PLL ans=dfs(1, 0);
    cout<<ans.se+ans.fi;
    return 0;
}
