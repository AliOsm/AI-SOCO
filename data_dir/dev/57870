#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(__typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second
#define my_little_dodge 46
#define debug(x)  cerr<< #x <<" = "<< x<<endl;
using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
const int N=52;
int par[N][N],odp[N][N],dp[N][N],n;
int val[N][N][N][N];
int solve(int x,int xx,int y,int yy){
	int &ret=odp[y][yy];
	if(~ret)
		return ret;
	if(par[xx][yy]-par[xx][y-1]-par[x-1][yy]+par[x-1][y-1])
		ret=max(val[y][yy][x][xx],yy-y+1);	
	else
		ret=0;	
	for(int k=y;k<yy;k++)
		umin(ret,solve(x,xx,y,k)+solve(x,xx,k+1,yy));	
	return ret;	
}
int rec(int x,int y){
	int &ret=dp[x][y];
	if(~ret)
		return ret;
	memset(odp,-1,sizeof odp);
	ret=solve(x,y,1,n);
	for(int k=x;k<y;k++)
		umin(ret,rec(x,k)+rec(k+1,y));
	return ret;	
}
char tmp[N][N],arr[N][N];
int main(){
   // freopen("file.in", "r", stdin);
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    	for(int j=1;j<=n;j++)
    		scanf(" %c",&tmp[i][j]),arr[i][j]=tmp[i][j];
    int ans=INF;
    for(int t=0;t<2;t++){
	    for(int i=1;i<=n;i++)
	    	for(int j=1;j<=n;j++)
				par[i][j]=par[i-1][j]+par[i][j-1]-par[i-1][j-1]+(arr[i][j]=='#');	
	    int l,r;	
	    for(int y=1;y<=n;y++)
	    	for(int yy=y;yy<=n;yy++)
	    		for(int x=1;x<=n;x++)
					for(int xx=x;xx<=n;xx++){
						l=x;r=xx;
						while(l<=r and par[l][yy]-par[l][y-1]-par[l-1][yy]+par[l-1][y-1]==0)
							l++;
						while(r>=l and par[r][yy]-par[r][y-1]-par[r-1][yy]+par[r-1][y-1]==0)
							r--;
						val[y][yy][x][xx]=r-l+1;	
					}
	    memset(dp,-1,sizeof dp);
		umin(ans,rec(1,n));	
		for(int i=1;i<=n;i++)
			for(int j=1;j<=n;j++)
				arr[i][j]=tmp[j][i];
	}
	printf("%d\n",ans);
	return 0;
}
