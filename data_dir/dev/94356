/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN();

int a[55];

long long dp[2][55][55];

double logFac[55];

int main(){

    int n,p;
    S("%d",&n);

    logFac[0] = log(1);
    FOR(i,1,n)
        logFac[i] = logFac[i-1]+log(i);

    int sum = 0;

    REP(i,n)
    {
        S("%d",&a[i]);
        sum += a[i];
    }

    S("%d",&p);

    if(sum <= p)
    {
        P("%d",n);
        return 0;
    }

    int prev, now;

    double ans = 0.0;

    REP(l,n)
    {
        prev = 0, now = 1;

        FOR(i,0,n)
            FOR(j,0,p)
                dp[0][i][j] = dp[1][i][j] = 0;

        dp[prev][0][0] = 1;

        REP(k,n)
        {
            if(k == l) continue;

            FOR(i,0,n)
                FOR(j,0,p)
                {
                    dp[now][i][j] = dp[prev][i][j];
                    if(i-1 >= 0 && j-a[k] >= 0)
                        dp[now][i][j] += dp[prev][i-1][j-a[k]];
                }

            prev ^= 1;
            now ^= 1;
        }

        FOR(i,1,n-1)
            FOR(j,0,p)
            {
                if(j+a[l] > p && dp[prev][i][j] > 0)
                    ans += i*exp(log(dp[prev][i][j])+logFac[i]+logFac[n-1-i]-logFac[n]);
            }

    }

    P("%.10lf",ans);

}
