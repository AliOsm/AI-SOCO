#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<ll, ll>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int N = 100 * 1000 + 13;

int n, ac, d;
pt a[N];
ld t[N];


bool read(){
	if(scanf("%d%d%d", &n, &ac, &d) != 3)
		return 0;
	forn(i, n)
		scanf("%d%d", &a[i].x, &a[i].y);
	return 1;
}


void solve(){
	forn(i, n){
		ld cur = a[i].y * 1.0 / ac;
		t[i] = a[i].x;
		if (cur * cur * ac / 2 > d - EPS)
			t[i] += sqrtl(d * 2.0 / ac);
		else
			t[i] += cur + (d - cur * cur * ac / 2) / a[i].y;
		if (i && t[i] < t[i - 1])
			t[i] = t[i - 1];
		printf("%.10f\n", (double)t[i]);
	}
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}