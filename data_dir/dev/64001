#include<bits/stdc++.h>


using namespace std;

const int N = 1e6 + 2, MOD = 1e9 + 7;
#define ss second
#define ff first
//#define int long long
#define double long double

using vi = vector <int>;
using vp = vector <pair <long long, long long>>;

mt19937 Flash_new_51(515151);

int n, m, x, y;

char c[3005][3005], c1[3005][3005];
pair <int, int> mp[3005][3005];

vi dx = {0, 0, 1, -1}, dy = {1, -1, 0, 0};

int kol = 0;

void bfs ()
{
    queue <pair <int, int>> q;
    q.push({x, y});
    mp[x][y] = {x, y};
    while (!q.empty())
    {
        auto to = q.front();
        q.pop();
        for (int i = 0; i < 4; i++)
        {
            int addx = dx[i] + to.ff, addy = dy[i] + to.ss, newaddx, newaddy;
            newaddx = (addx + 1000 * n) % n, newaddy = (addy + 1000 * m) % m;
            if (c[newaddx][newaddy] == '#') continue;
            if (mp[newaddx][newaddy] != make_pair(INT_MAX, INT_MAX)) {
                if (mp[newaddx][newaddy] != make_pair(addx, addy)) {
                    cout << "Yes\n";
                    exit(0);
                }
            }
            else {
                mp[newaddx][newaddy] = make_pair(addx, addy);
                q.push({addx, addy});
            }
        }
    }
}

signed main()
{
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    cin >> n >> m;
    for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) {
            cin >> c[i][j];
            if (c[i][j] == 'S') x = i, y = j;
        }
    for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) mp[i][j] = {INT_MAX, INT_MAX};
    bfs();
    cout << "No";

}
