#include <iostream>
#include <algorithm>
#include <math.h>
#include <iomanip>
#include <vector>
#include <map>
#define ll long long
using namespace std;
 
const int N = 1e5 + 100, M = 998244353;
vector <ll int> v, v1, q;
bool mark[N];
int a[N];
char c[N];
ll int u = 0;
map <int, bool> ma;
pair <int, string> p[N];
pair <string, int> t[N];
pair <string, char> k1[N], k2[N];

int main() {
	ll int n, k;
	cin >> n;
	ll m = 2 * n - 2;
	for(int i = 0; i < m; i++) {
		cin >> p[i].second;
		string u = p[i].second;
		t[i].first = p[i].second;
		t[i].second = i;
		p[i].first = u.size();
	}
	sort(p, p + m);	
	string u = p[m - 1].second;
	string s = "";
	s += u[0];
	for(int i = 0; i < n - 1; i++) {
		u = p[m - 2].second;
		s += u[i];
	}
	u = p[m - 2].second;
	string s1 = "";
	s1 += u[0];
	for(int i = 0; i < n - 1; i++) {
		u = p[m - 1].second;
		s1 += u[i];
	}
	sort(t, t + m);
	k1[0].first = s[0];
	k1[0].second = 'P';
	for(int i = 1; i < n - 1; i++) {
		k1[i].first = k1[i - 1].first;
		k1[i].first += s[i];
		k1[i].second = 'P';
	}
	k1[n - 1].first = s[n - 1];
	k1[n - 1].second = 'S';
	ll f = 2;
	for(int i = n; i <= m; i++) {
		k1[i].first = k1[i - 1].first;
		k1[i].first += s[n - f];
		f++;
		k1[i].second = 'S';
	}
	for(int i = n - 1; i<  m; i++) {
		string u = k1[i].first;
		reverse(u.begin(), u.end());
		k1[i].first = u;
	}
	k2[0].first = s1[0];
	k2[0].second = 'P';
	for(int i = 1; i < n - 1; i++) {
		k2[i].first = k2[i - 1].first;
		k2[i].first += s1[i];
		k2[i].second = 'P';
	}
	k2[n - 1].first = s1[n - 1];
	k2[n - 1].second = 'S';
	f = 2;
	for(int i = n; i < m; i++) {
		k2[i].first = k2[i - 1].first;
		k2[i].first += s1[n - f];
		f++;
		k2[i].second = 'S';
	}
	for(int i = n - 1; i<  m; i++) {
		string u = k2[i].first;
		reverse(u.begin(), u.end());
		k2[i].first = u;
	}
	sort(k2, k2 + m);
	sort(k1, k1 + m);
	ll ans = 0;
	for(int i = 0; i < m; i++) {
		if(t[i].first == k1[i].first) {
			ans++;
		}
	}
	if(ans == m) {
		for(int i = 0; i < m ;i++) {
			c[t[i].second] = k1[i].second;
		}
		for(int i = 0; i < m; i++) {
			cout << c[i];
		}
		return 0;
	}
	for(int i = 0; i < m; i++) {
		c[t[i].second] = k2[i].second;
	}
	for(int i = 0; i < m; i++) {
		cout << c[i];
	}
	return 0;
}

