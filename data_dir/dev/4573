#include <bits/stdc++.h>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,a,n) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int,int> pii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

template<typename T1,typename T2>
bool umin(T1 &x,const T2&y){
    if(x>y)return x=y,true;
    return false;
}
template<typename T1,typename T2>
bool umax(T1 &x,const T2&y){
    if(x<y)return x=y,true;
    return false;
}

const int maxn=(int)1e6+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

char res[22][213];
pii nxt[22][123];
int main(){

   // freopen("input.txt","r",stdin);
  //  freopen("output.txt","w",stdout);

    rep(i,0,12)nxt[0][i]=mp(0,i+1); nxt[0][12]=mp(1,12);
    per(i,1,13)nxt[1][i]=mp(1,i-1); nxt[1][0]=mp(0,0);
    rep(i,0,2)rep(j,0,13)res[i][j]=' ';
    string s;
    cin>>s;

    vi was(256);
    char let;
    rep(i,0,s.length()){
        if(was[s[i]])let=s[i];
        was[s[i]]=1;
    }
    int a=-1,b=-1;
    rep(i,0,s.length()){
        if(s[i]==let){
            if(a==-1)a=i;
            else b=i;
        }
    }
    if(a+1==b){
        cout<<"Impossible\n";
        return 0;
    }
    int len=b-a-1;
    int pos=12-len/2;
    int row=0;

    int cur=a;
    rep(i,0,27){
        if(cur!=b){
            res[row][pos]=s[cur];
          //  cout<<row<<' '<<pos<<' '<<res[row][pos]<<endl;
            pii q=nxt[row][pos];
            row=q.fi,pos=q.se;
        }
        cur++;
        if(cur==27)cur=0;
    }

    rep(i,0,2){
        rep(j,0,13){
            cout<<res[i][j];
        }
        cout<<endl;
    }

    return 0;
}
