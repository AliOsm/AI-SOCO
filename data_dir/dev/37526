#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
#define MOD 998244353
#define EPS 1e-6
#define PI 3.14159265

int n;
vector<int> vec;
int Dp[1005];
int ncr[1005][1005];

int solve(int index)
{
    if(index >= n)
        return 0;
    int &ans = Dp[index];
    if(ans != -1)
        return ans;
    ans = solve(index + 1);
    if(vec[index] > 0)
    {
        for(int i = index + vec[index]; i < n; i++)
        {
            int have = (i - index);
            int ret = ((ll)(1 + solve(i + 1)) * ncr[have - 1][vec[index] - 1]) % MOD;
            ans = (ans + ret) % MOD;
        }
    }
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n;
    ncr[0][0] = 1;
    ncr[1][0] = 1;
    ncr[1][1] = 1;
    for(int i = 2; i <= 1000; i++)
    {
        ncr[i][0] = 1;
        ncr[i][i] = 1;
        for(int j = 1; j < i; j++)
        {
            ncr[i][j] = (ncr[i - 1][j] + ncr[i- 1][j - 1]) % MOD;
        }
    }
    vec.resize(n);
    for(auto &x: vec)
    {
        cin >> x;
    }
    memset(Dp, -1, sizeof Dp);
    cout << solve(0);
    return 0;
}
