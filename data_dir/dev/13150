/// PELE SAID I'M THE BEST IN THE WORLD
/// I SAY I'M THE BEST IN THE WORLD
/// THAT'S HOW YOU SHOULD DO IT.
/// NEVER LOOK AT AN OPPONENT WITH INFERIORITY!
/// John Best, Balon d'Or
#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 2000005
#define pb push_back
#define VAL 1000005
#define INF 1000000000
#define eps 0.000000000001

using namespace std;

int n,a[Nmax],MaxR[Nmax],MinR[Nmax],MaxL[Nmax],MinL[Nmax],fsum[Nmax],fdif[Nmax],v1[Nmax],l1,v2[Nmax],l2;
long long sol;

inline void Solve(int Left, int Right)
{
    if(Left>Right) return;
    if(Left==Right)
    {
        ++sol; return;
    }
    int Mid=(Left+Right)/2,i,st,dr;
    Solve(Left,Mid); Solve(Mid+1,Right);
    MinL[Mid]=MaxL[Mid]=a[Mid];
    for(i=Mid-1;i>=Left;--i)
    {
        MinL[i]=min(MinL[i+1],a[i]);
        MaxL[i]=max(MaxL[i+1],a[i]);
    }
    MinR[Mid+1]=MaxR[Mid+1]=a[Mid+1];
    for(i=Mid+2;i<=Right;++i)
    {
        MinR[i]=min(MinR[i-1],a[i]);
        MaxR[i]=max(MaxR[i-1],a[i]);
    }

    /// Min = L , Max = L
    for(i=Mid;i>=Left;--i)
    {
        int len=MaxL[i]-MinL[i];
        if(i+len<=Mid || i+len>Right) continue;
        if(MaxR[i+len]>MaxL[i] || MinR[i+len]<MinL[i]) continue;
        ++sol;
    }
    /// Min = R , Max = R
    for(i=Mid+1;i<=Right;++i)
    {
        int len=MaxR[i]-MinR[i];
        if(i-len>Mid || i-len<Left) continue;
        if(MaxL[i-len]>MaxR[i] || MinL[i-len]<MinR[i]) continue;
        ++sol;
    }

    /// Max = L , Min = R
    dr=Left-1; st=Left;
    for(i=Right;i>Mid;--i)
    {
        while(dr<Mid && MaxL[dr+1]>MaxR[i])
        {
            ++dr;
            ++fsum[MaxL[dr]+dr];
        }
        while(st<=dr && MinL[st]<MinR[i])
        {
            --fsum[MaxL[st]+st];
            ++st;
        }
        if(st>dr) continue;
        sol+=fsum[MinR[i]+i];
    }
    for(;st<=dr;++st) --fsum[MaxL[st]+st];


    /// Max = R , Min = L

    dr=Mid; st=Mid+1;
    for(i=Mid+1;i<=Right;++i)
    {
        while(st>Left && MaxL[st-1]<MaxR[i])
        {
            --st;
            ++fdif[MinL[st]-st+VAL];
        }
        while(st<=dr && MinL[dr]>MinR[i])
        {
            --fdif[MinL[dr]-dr+VAL];
            --dr;
        }
        if(st>dr) continue;
        sol+=fdif[MaxR[i]-i+VAL];
    }
    for(;st<=dr;++st) --fdif[MinL[st]-st+VAL];

}

int main()
{
    int i,x,y;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n;
    for(i=1;i<=n;++i)
    {
        cin>>x>>y;
        a[x]=y;
    }
    Solve(1,n);
    cout<<sol;
    return 0;
}
