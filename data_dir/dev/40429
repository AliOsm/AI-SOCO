#include <iostream>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <map>
#include <vector>
#include <set>
#include <iomanip>
using namespace std;
const long long MaxLL = (long long)1e18;
const int MaxInt = (int)1e9, MaxN = (int)1e5 + 228;
const long double pi = 3.14159265358979323846;

vector<pair<long double, int> > r;
long long i, j, n, m, x[MaxN], y[MaxN];

struct answer{
    long long first, second;
    long double gl = MaxInt;
} ans;

long double f(long double a){
    return acos(a);
}

long double gl(long double x, long double y){
    long double _x = 1, _y = 0;
    return (x * _x  + y * _y) / (sqrt(x * x + y * y) * sqrt(_x * _x + _y * _y));
}

int main(){
//  freopen(".in", "r", stdin);
//  freopen(".out", "w", stdout);
    cin >> n;
    for(i = 0; i < n; i++){
        cin >> x[i] >> y[i];


        r.push_back(make_pair(f(gl(x[i], y[i])), i));
        if(y[i] < 0){
            r[r.size() - 1].first = pi + (pi - r[r.size() - 1].first);
        }
    }
    sort(r.begin(), r.end());
    r.push_back(make_pair(r[0].first, r[0].second));
    for(i = 0; i < r.size() - 1; i++){
        if(ans.gl > min((long double)fabs(r[i].first - r[i + 1].first), (long double)2 * pi - fabs(r[i].first - r[i + 1].first))){
            ans.gl = min((long double)fabs(r[i].first - r[i + 1].first), (long double)2 * pi - fabs(r[i].first - r[i + 1].first));
            ans.first = r[i].second;
            ans.second = r[i + 1].second;
        }
    }
    cout << ans.first + 1 << " " << ans.second + 1 << "\n";
}