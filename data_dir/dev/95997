#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n;
const int MAXN = 200005;
int a[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 0; i < n; i++)
		cin >> a[i];

	string ans = "";
	int st = 0, en = n - 1, counter = 0, prv = 0;
	while(st <= en)
	{
		if(a[st] <= prv && a[en] <= prv)
			break;
		if((a[st] < a[en] && a[st] > prv) || (a[st] > a[en] && a[en] <= prv))
		{
			ans += 'L';
			counter++;
			prv = a[st];
			st++;
		}
		else if(a[st] != a[en])
		{
			ans += 'R';
			counter++;
			prv = a[en];
			en--;
		}
		else
		{
			int currL = 0, currR = 0, tmp = st, tmpprv = prv;
			while(st <= en && a[st] > prv)
			{
				currL++;
				prv = a[st];
				st++;
			}
			st = tmp;
			prv = tmpprv;
			while(st <= en && a[en] > prv)
			{
				currR++;
				prv = a[en];
				en--;
			}
			if(currL >= currR)
			{
				for(int i = 0; i < currL; i++)
					ans += 'L';
				counter += currL;
			}
			else
			{
				for(int i = 0; i < currR; i++)
					ans += 'R';
				counter += currR;
			}
			break;
		}
	}

	cout << counter << "\n";
	cout << ans << "\n";

	return 0;
}
