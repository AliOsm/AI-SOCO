#include <cstdio>
#include <vector>

static const int M   = 505105;
static const int MOD = 1000000000 + 7;

typedef long long ll;

struct m_int
{
    ll n;
    m_int(): n(0){}
    //implicit
    m_int(ll an) : n(  ( an % MOD + MOD) % MOD ) {}
    
    m_int& operator += (m_int o){
        n = (n + o.n ) % MOD ;
        return *this;
    }
};


m_int operator + (m_int a, m_int b)
{
    return  m_int  ( a.n + b.n ) ;
    
}

m_int operator - (m_int a, m_int b)
{
    return m_int (a.n - b.n)   ;
}

m_int operator * (m_int a, m_int b)
{
    return m_int( a.n * b.n );
}


std::vector<int> adj[M];
int par[ M ],lev[ M ];
ll v[M];
m_int e[M],o[M];
ll res, n;

m_int ans;

int dfs(int x, int depth)
{
    lev[x] = depth;
    int cno = 0;
    
    for(int c : adj[x])
    {
        if (c == par[x])continue;
        par[c] = x;
        dfs(c, depth + 1);
        if (cno > 0){
            ans = ( ans + 2 * (o[x] * e[c]  - e[x] * o[c] ) * v[x] ) ;
        }
        cno++;
        o[x] += e[c];
        e[x] += o[c];
    }
    
    o[x]  += 1;
}

int main(int argc, char * argv[] )
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif 
    scanf("%lld", &n);

	for(int i=1;i<=n;i++)
	{
        scanf("%lld", &v[i]) ;
	}
	
	for(int i=1;i<n;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	
	dfs(1, 0 ); 
	
	for(int i=1;i<=n;i++)
	{	
		if(lev[i] & 1 ) // odd
		{
            ans = ( ans + 2 * (o[i] * (e[1] - o[i] +1) - e[i] * ( o[1] - e[i] ) ) * v[i] ) ;
			//ans=(( ans + 2 * ( o[i] * ( e[ 1 ] - o[i] + 1 ) % mod - e[i] * ( o[ 1 ] - e[ i ] ) % mod  +  mod) % mod * v[i]%mod)%mod+mod )%mod;
		}
		else
		{
            ans = ( ans + 2 * ( o[i] * (o[1] - o[i] + 1) - e[i] * (e[1] - e[i] ) ) * v[i] ) ;
			//ans=((ans+2*(o[i]*(o[1]-o[i]+1)%mod - e[i]*(e[1]-e[i])%mod +mod)%mod*v[i]%mod)%mod+mod )%mod;
		}
		
		//cout<<ans<<endl;
		
		//ans=((ans-v[i])%mod+mod)%mod;
		ans = ans - v[i];
        
//		cout<<i<<" "<<ans<<endl;
		//cout<<ans<<endl;
	}
	
    printf("%lld\n", ans.n ); 
	//cout<<ans<<endl;

}