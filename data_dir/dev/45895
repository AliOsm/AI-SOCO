#include <bits/stdc++.h>

const int N = 500 + 5;
const int M = 1000 + 5;
int n,m,W[N],B[M],first[N];
std::vector<int> edges[N];
int deg[N];
int que[N];
int stack[N];


int main() {
	scanf("%d%d",&n,&m);
	for (int i = 0; i < n; ++ i) {
		scanf("%d",W+i);
		first[i] = m;
	}
	for (int i = 0; i < m; ++ i) {
		scanf("%d",B+i);
		B[i] --;
		first[B[i]] = std::min(first[B[i]],i);
	}
	for (int i = 0; i < n; ++ i) {
		for (int j = 0; j < first[i]; ++ j) {
			edges[B[j]].push_back(i);
			deg[i] ++;
		}
	}
	int qf = 0,qe = 0;
	for (int i = 0; i < n; ++ i) {
		if (deg[i] == 0)
			que[qe++] = i;
	}
	while (qf != qe) {
		int u = que[qf++];
		for (int v : edges[u]) {
			if (--deg[v] == 0)
				que[qe++] = v;
		}
	}
	for (int i = 0; i < n; ++ i)
		stack[i] = que[n-i-1];
	int answer = 0;
	for (int i = 0; i < m; ++ i) {
		int u = B[i];
		int p;
		for (p = 0; p < n; ++ p)
			if (stack[p] == u)
				break;
		for (int j = p+1; j < n; ++ j) {
			answer += W[stack[j]];
			stack[j-1] = stack[j];
		}
		stack[n-1] = u;
	}
	printf("%d\n",answer);
	return 0;
}
