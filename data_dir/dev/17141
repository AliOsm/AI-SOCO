#include <stdio.h>
#include <vector>
#include <string>
#define pb push_back
using namespace std;

const int MAX_LEN = (int)1e6 + 5;

char a[MAX_LEN];

bool solve(int max_width, int max_lines, vector<string>& words) {
    int cur_width = 0;
    int lines = 1;
    for (int i = 0; i < (int)words.size() && lines <= max_lines; i++) {
        if ((int)words[i].size() > max_width) return false;

        int next_width = cur_width + words[i].size();
        if (next_width > max_width) {
            lines++;
            i--;
            cur_width = 0;
        } else {
            cur_width = next_width;
        }
    }
    return lines <= max_lines;
}

int main(void) {
    int k;
    vector<string> words;

    scanf(" %d", &k);
    while(scanf(" %s", a) != EOF) {
        string s;

        for (int i = 0;; i++) {
            if (a[i] == '\0') {
                s += ' ';
                words.pb(s);
                break;
            }

            s += a[i];
            if (a[i] == '-') {
                words.pb(s);
                s.clear();
            }
        }
    }
    words.back().pop_back(); // remove last space from word

    int low = 1;
    int high = MAX_LEN;
    int best = -1;
    while(low <= high) {
        int mid = (low + high) / 2;
        if (solve(mid, k, words)) {
            best = mid;
            high = mid - 1;
        } else {
            low = mid + 1;
        }
    }
    printf("%d\n", best);

    return 0;
}
