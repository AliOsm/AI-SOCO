#include <bits/stdc++.h>
#define fr first
#define sc scanf
#define pf printf
#define se second
#define ll long long
#define pb push_back
#define ld long double
#define pr pair<int,int>
#define piip pair< pair<ll,ll>,ll >
#define fin(s) freopen( s, "r", stdin )
#define fout(s) freopen( s, "w", stdout )
#define TIME ios_base::sync_with_stdio(0)
using namespace std;

const ll INF = 2e18;
const ll N = 1e3 + 1;
const ll mod = 1e9 + 7;
const long double eps = 1E-7;

char x;
int cnt;
int n, m;
int a[N][N];
int l, r, mi;
vector<int>a1, a2, a3;
int ud[N][N], lr[N][N];
int tud[N][N], tlr[N][N];
bool can( int m, int i, int j )
{
    int cnt = 0;
    cnt = lr[i][j+m] - lr[i][j-m-1];
    cnt += ud[j][i+m] - ud[j][i-m-1];
    return cnt == m * 4 + 2;
}
void doit( int m, int i, int j )
{
    tlr[i][j-m] ++, tlr[i][j+m+1] --;
    tud[j][i-m] ++, tud[j][i+m+1] --;
}
int main()
{
    TIME;
    cin >> n >> m;
    for( int i = 1; i <= n; i ++ )
    {
        for( int j = 1; j <= m; j ++ )
        {
            cin >> x;
            if( x == '*' )
                a[i][j] = 1, cnt ++;
        }
    }
    for( int i = 1; i <= n; i ++ )
        for( int j = 1; j <= m; j ++ )
            lr[i][j] = lr[i][j-1] + a[i][j];
    for( int j = 1; j <= m; j ++ )
        for( int i = 1; i <= n; i ++ )
            ud[j][i] = ud[j][i-1] + a[i][j];
    for( int i = 2; i < n; i ++ )
    {
        for( int j = 2; j < m; j ++ )
        {
            if( a[i][j] + a[i+1][j] + a[i-1][j] + a[i][j+1] + a[i][j-1] != 5 )
                continue;
            l = 1, r = min( n-i, m-j );
            while( l < r )
            {
                mi = (l + r) / 2;
                if( can( mi + 1, i, j ) )
                    l = mi + 1;
                else
                    r = mi;
            }
            doit( l, i, j );
            a1.pb( i ), a2.pb( j ), a3.pb( l );
        }
    }
    for( int i = 1; i <= n; i ++ )
        for( int j = 1; j <= m; j ++ )
            a[i][j] = 0;
    for( int i = 1; i <= n; i ++ )
    {
        mi = 0;
        for( int j = 1; j <= m; j ++ )
        {
            mi += tlr[i][j];
            if( mi > 0 )
                a[i][j] = 1;
        }
    }
    for( int j = 1; j <= m; j ++ )
    {
        mi = 0;
        for( int i = 1; i <= n; i ++ )
        {
            mi += tud[j][i];
            if( mi > 0 )
                a[i][j] = 1;
        }
    }
    for( int i = 1; i <= n; i ++ )
        for( int j = 1; j <= m; j ++ )
            cnt -= a[i][j];
    if( cnt != 0 )
    {
        cout << -1;
        return 0;
    }
    cout << a1.size() << endl;
    for( int i = 0; i < a1.size(); i ++ )
        cout << a1[i] << " " << a2[i] << " " << a3[i] << endl;
}

