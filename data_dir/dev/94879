#include <cstdio>
#include <vector>
#include <string>
#include <cstring>
#include <algorithm>
using namespace std;

vector<int> calcP(const char* s, int n){
    vector<int> P(n);
    for(int x=0,y=1;y<n;y++){
        while(x && s[x]!=s[y]) x=P[x-1];
        if(s[x]==s[y]) P[y]=++x;
    }
    return P;
}

char str[100005];
string X,Y;

bool gao(){
    int l=strlen(gets(str));
    string x=str+X; x[l-1]='#';
    reverse(str,str+l);
    string y=str+Y; y[l-1]='#';
    auto u=calcP(x.c_str(),x.size());
    auto v=calcP(y.c_str(),y.size());
    for(size_t i=l;i<u.size();i++) u[i]=max(u[i-1],u[i]);
    for(size_t i=l;i<v.size();i++) v[i]=max(v[i-1],v[i]);
    for(size_t i=0;i+1<X.size();i++)
        if(u[l+i]+v[v.size()-i-2]>=l) return true;
    return false;
}

int main(){
    X=Y=gets(str);
    reverse(Y.begin(),Y.end());
    int n,ans=0;
    sscanf(gets(str),"%d",&n);
    for(int i=0;i<n;i++) if(gao()) ans++;
    printf("%d\n",ans);
}
