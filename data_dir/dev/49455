#include <bits/stdc++.h>
using namespace std;

int parse(string s) {
	int ret = 0;
	for (char c : s) ret = ret * 10 + (c - '0');
	return ret;
}

string toString(int n) {
	ostringstream s;
	s << n;
	return s.str();
}

int main() {
	const int N = 2020202;
	static int pi[N];
	vector<char> isPrime(N, true);

	for (int i = 2; i < N; i++) if (isPrime[i]) {
		pi[i] = 1;
		for (int j = i * 2; j < N; j += i) isPrime[j] = false;
	}

	static int rub[N];
	for (int i = 1; i < 10; i++) rub[i]++;
	for (int i = 1; i < 10101; i++) {
		string s = toString(i);
		string t = s;
		reverse(t.begin(), t.end());
		int m = parse(s + t);
		if (m < N) rub[m]++;
		for (char j = '0'; j <= '9'; j++) {
			int n = parse(s + j + t);
			if (n < N) rub[n]++;
		}
	}

	partial_sum(pi, pi + N, pi);
	partial_sum(rub, rub + N, rub);

	long long p, q;
	cin >> p >> q;

	int ans = 0;
	for (int i = 0; i < N; i++) {
		if (q * pi[i] <= p * rub[i]) ans = i;
	}
	cout << ans << endl;
}
