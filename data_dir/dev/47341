/*
.....   .   .   .   .
  .    . .   . .   . .
  .   .....   .   .....
  .  .     .  .  .     .
*/
#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stdio.h>
#include <cstdio>
#include <math.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <deque>
#include <random>
#include <iomanip>
#include <bitset>
 
using namespace std;
 
template<typename T> void uin(T &a, T b) {
    if (b < a) {
        a = b;
    }
}
 
template<typename T> void uax(T &a, T b) {
    if (b > a) {
        a = b;
    }
}

// #define int long long
#define left left228
#define right right228

const int maxn = 100 * 1000 + 228;

int b[maxn];

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n, m, k;
    cin >> n >> m >> k;
    for (int i = 1; i <= n; ++i) {
        cin >> b[i];
    }
    int res = b[n] - b[1] + 1;
    vector<int> kek;
    for (int i = 1; i < n; ++i) {
        kek.push_back(b[i + 1] - b[i] - 1);
    }
    sort(kek.rbegin(), kek.rend());
    for (int i = 0; i < min(k - 1, n); ++i) {
        res -= kek[i];
    }
    cout << res << '\n';
    return 0;
}




/*
2 0 3
 
 
3 1 2
1 2
 
*/