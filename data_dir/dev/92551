#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<ll, ll>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int N = 100 * 1000 + 13;

int n;
int a[N];
int cnt[N];
int used[N];


bool read(){
	if(scanf("%d", &n) != 1)
		return 0;
	forn(i, n)
		scanf("%d", &a[i]);
	return 1;
}


void sieve(int n){
	fore(i, 2, n)
		if (!used[i])
			for (int j = i; j < n; j += i)
				if (!used[j])
					used[j] = i;
}


void solve(){
	memset(used, 0, sizeof(used));
	sieve(N);
	memset(cnt, 0, sizeof(cnt));
	forn(i, n){
		int lst = -1;
		while (a[i] != 1){
			if (used[a[i]] != lst)
				cnt[used[a[i]]]++;
			lst = used[a[i]];
			a[i] /= used[a[i]];
		}
	}
	int ans = 1;
	forn(i, N)
		ans = max(ans, cnt[i]);
	printf("%d\n", ans);
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}