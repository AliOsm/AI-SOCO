#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell (ll)1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree< ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1 ;
const ll N = 100005 ;
vector<ll> v[N] , vis(N,0) ;
ll powMod( ll base , ll expo )
{
    ll ans = 1 ;
    while( expo > 0 )
    {
        if( expo & 1 )
            ans = ( ans * base ) % hell ;
        base = ( base * base ) % hell ;
        expo >>= 1 ;
    }
    return ans ;
} 
void solve()
{
    ll n , z , x , y , ans , k ;
    cin >> n >> k ;
    ans = powMod( n , k ) ;
    rep( i , 1 , n )
    {
        cin >> x >> y >> z ;
        if( z == 1 )
            continue; 
        v[x].pb(y);
        v[y].pb(x);
    }
    rep( i , 1 , n + 1 )
    {
        if( vis[i] == 0 )
        {
            stack<ll> st ;
            ll cur = 0 ;
            st.push(i);
            while( !st.empty() )
            {
                x = st.top() ;
                st.pop() ;
                if( vis[x] == 0 )
                {
                    vis[x] = 1 ;
                    cur++;
                    for(auto it : v[x] )
                        if( vis[it] == 0 )
                            st.push(it);
                }
            }
            ans = ( ans - powMod( cur , k ) ) % hell ;
			ans = ( ans + hell ) % hell ;
        } 
    }
    cout << ans << "\n" ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
