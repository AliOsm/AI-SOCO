#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define sc(a) scanf("%d", &a)

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
const ll MOD = 1000000007;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll MODulus)
{
	ll result = 1;
	base %= MODulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % MODulus;
		exponent >>= 1;
		base = (base * base) % MODulus;
	}
	return result;
}

ll gcdExtended(ll a, ll b, ll *x, ll *y)
{
	if (a == 0)
	{
		*x = 0, *y = 1;
		return b;
	}
	ll x1, y1;
	ll gcd = gcdExtended(b%a, a, &x1, &y1);
	*x = y1 - (b/a) * x1;
	*y = x1;
	return gcd;
}

ll MODInverse(ll a, ll m)
{
	ll x, y;
	ll g = gcdExtended(a, m, &x, &y);
	ll res = (x%m + m) % m;
	return res;
}

int a[12345678];
bool flag[12345678];
//pii queries[123456];

int main ()
{
	ssync;
	int n, m, x, y;
	cin >> n;
	for(int i=0; i<n; i++)
	{
		cin>>x;
		a[x]++;
	}
	fill(flag, flag+10000001, false);
	for(int i=2; i <= 10000000; i++)
	{
		if(!flag[i])
		{
			for(int j=2; i*j < 10000001; j++)
			{
				a[i]+=a[i*j];
				flag[i*j] = true;
			}
		}
		else
			a[i]=0;
		a[i]+=a[i-1];
	}
	cin >> m;
	//cout << a[1] << "\n";
	for(int i=0; i<m; i++)
	{
		cin>>x>>y;
//		cin >> queries[i].F >> queries[i].S;
	//for(int i=0; i<m; i++)
		cout << a[min(y,10000000)] - a[min(10000000,x-1)] << "\n";
	}
	return 0;
}
