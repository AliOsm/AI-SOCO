#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef double real;

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

using namespace std;

const int MaxN = 10004, NA = -1, MaxC = 0x3F3F3F3F;
const real eps = 1E-9;

bool solve (int n, real r, real s)
{
 if (n == 1)
  return r >= s;
 if (n == 2)
  return r >= s + s;

 real alpha, x1, x2, y1, y2;
 alpha = 2.0 * M_PI / n;
 x1 = r - s;
 y1 = 0.0;
 x2 = (r - s) * cos (alpha);
 y2 = (r - s) * sin (alpha);
 return hypot (y1 - y2, x1 - x2) >= s + s - eps;
}

int main (void)
{
 int n, r, s;
 while (scanf (" %d %d %d", &n, &r, &s) != EOF)
 {
  printf ("%s\n", solve (n, r, s) ? "YES" : "NO");
 }
 return 0;
}
