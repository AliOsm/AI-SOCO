#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define ll long long
#define ull  unsigned long long
#define pb push_back
#define double long double

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

const int N = 5050;
int p[N], b[N][N], a[N][N], rp[N];
int n, cnt[N], ans[N], t[N];
bool solve(int x){
    p[x] = 0;
    for (int i = 0; i < n; i++) cnt[i] = 0;
    cnt[0] = 1;
    for (int i = 0; i < n; i++){
        if (i == x) continue;
        p[i] = b[i][x];
        if (p[i] >= n) return 0;
        cnt[p[i]]++;
    }
    for (int i = 0; i < n; i++){
        if (cnt[i] != 1) return 0;
    }
    for (int i = 0; i < n; i++){
        rp[p[i]] = i;
    }
    for (int i = 0; i < n; i++){
        int x = (p[0] ^ rp[i]);
        if (x != a[0][i]) return 0;
        x = (p[i] ^ rp[0]);
        if (x != a[i][0]) return 0;
    }
    for (int i = 0; i < n; i++) ans[i] = p[i];
    return 1;
}
main()
{
    //ios_base::sync_with_stdio(false);
    //cin.tie(NULL);
    //freopen("input.txt",  "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin >> n;
    for (int i = 0; i < n; i++){
        cout << "? 0 " << i << endl;
        fflush(stdout);
        //a[0][i] = (t[0] ^ t[i]);
        cin >> a[0][i];
    }
    for (int i = 0; i < n; i++){
        cout << "? " << i << " 0" << endl;
        fflush(stdout);
        //a[i][0] = (t[0] ^ t[i]);
        cin >> a[i][0];
    }
    for (int i = 0; i < n; i++){
        for (int j = 0; j < n; j++){
            b[i][j] = (a[i][0] ^ a[j][0]);
           // cout << i << " " << j << " " << b[i][j] << " " << (t[i] ^ t[j]) << endl;
        }
    }
    int cnta = 0;
    for (int j = 0; j < n; j++){
        if (solve(j)){
            cnta++;
        }
    }
    cout << "!" << endl;
    fflush(stdout);
    cout << cnta << endl;
    fflush(stdout);
    for (int i = 0; i < n; i++){
        cout << ans[i] << " ";
    }
    cout << endl;
    fflush(stdout);
    return 0;
}
