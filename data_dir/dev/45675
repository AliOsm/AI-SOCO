#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef  vector<int> vi;
typedef  pair<int,int> pii;
typedef  pair<int,string> pis;
double   pi=3.1415926535898;
#define SPEED      ios::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
#define lop(i,n)   for(int i=0;i<int(n);i++)
#define ff(i,a,b)  for(int i=a;i<=int(b);i++)
#define fr(i,a,b)  for(int i=a;i>=int(b);i--)
#define ms(x,a)    memset(x,a,sizeof(x))
#define all(x)     (x).begin(),(x).end()
#define sz(x)      int(x.size())
#define pb         push_back
//#define x          first
//#define y          second       //  __builtin_popcount;
//freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
string ys = "YES\n";
string no = "NO\n" ;
const double EPS = 1e-6;
const int inf = 1e9+1;
const ll M  = 1e9+7 ;
const int N = 100100;
/////  for (int i= -inf ; i < inf ; i++)   Hi  :P


pair < int, int > p[300300];
int n, k;
ll ans = 0;
priority_queue < int, std::vector<int>, std::greater<int> > pq;

int main()
{
    SPEED;

    cin >> n >> k;

    ff(i,1,n)
    {
        cin >> p[i].second >> p[i].first;
    }

    sort(p+1,p+1+n);
    ll all = 0;
    for(int i=n;i>=1;i--)
    {
        all += p[i].second;
        pq.push(p[i].second);
        if (pq.size()>k)
        {
            //cout << pq.top()<<endl;;
            all -= pq.top();
            pq.pop();
        }
        ans = max(ans,1LL*p[i].first*all);
    }

    cout << ans ;


    return 0;
}
/*




*/
