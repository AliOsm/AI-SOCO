#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define MP make_pair
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define MAGIC0
mt19937 rnd(time(0)); //rnd()

typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;

const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e5 + 7;
const double PI = acos(-1.);
const double EPS = 1e-8;
const int MOD = 998244353;

int par[100005], rang[100005];
vector<PII> x[100005];

int find(int v)
{
	return par[v] == -1 ? v : par[v] = find(par[v]);
}

void unite(int a, int b)
{
	a = find(a);
	b = find(b);
	if (rang[a] < rang[b])
	{
		swap(a, b);
	}
	rang[a] += rang[b];
	par[b] = a;
}

int dist[100005];
bool was[100005];

void dfs(int v, int par)
{
	for(auto e : x[v])
	{
		int to = e.f;
		int w = e.s;
		if (to != par)
		{
			dist[to] = max(dist[v], w);
			dfs(to, v);
		}
	}
}

int main()
{
	ios_base::sync_with_stdio(0);
	int n, m, k;
	cin >> n >> m >> k;
	VI a(k);
	FOR(i, 0, k)
	{
		cin >> a[i];
	}
	set<pair<int, PII>> st;
	FOR(i, 0, m)
	{
		int u, v, w;
		cin >> u >> v >> w;
		if (u == v)
		{
			continue;
		}
		st.insert({w, {u, v}});
	}

	FILL (par, -1);
	FILL (rang, 1);
	while(!st.empty())
	{
		int w = st.begin()->f;
		int u = st.begin()->s.f;
		int v = st.begin()->s.s;
		st.erase(st.begin());
		if (find(u) != find(v))
		{
			unite(u, v);
			x[u].PB({v, w});
			x[v].PB({u, w});
		}
	}

	dfs(a[0], a[0]);
	int ans = 0;
	for(int i : a)
	{
		ans = max(ans, dist[i]);
	}

	FOR(i, 0, k)
	{
		cout << ans << " ";
	}

	return 0;
}


