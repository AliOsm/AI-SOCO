#include <iostream>
#include <cstdio>
#define Nmax 100005

using namespace std;

int aint[4*Nmax],val[Nmax];

inline void Update(int nod, int st, int dr, int x, int y)
{
    if(st==dr)
    {
        aint[nod]=y;
        return;
    }
    int mij=((st+dr)>>1);
    if(x<=mij)
        Update(2*nod,st,mij,x,y);
    else
        Update(2*nod+1,mij+1,dr,x,y);
    aint[nod]=aint[2*nod]+aint[2*nod+1];
}

inline int Query(int nod, int st, int dr, int x, int y)
{
    if(st==x && y==dr)
        return aint[nod];
    int mij=((st+dr)>>1);
    if(y<=mij)
        return Query(2*nod,st,mij,x,y);
    else
        if(x>mij)
            return Query(2*nod+1,mij+1,dr,x,y);
        else
            return Query(2*nod,st,mij,x,mij)+Query(2*nod+1,mij+1,dr,mij+1,y);
}

int main()
{
    int n,q,tip,x,y,i,Sens,Left,Right;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin>>n>>q;
    Left=0; Right=n; Sens=1;
    for(i=1;i<=n;++i)
    {
        val[i]=1;
        Update(1,1,n,i,1);
    }
    while(q--)
    {
        cin>>tip;
        if(tip==1)
        {
            cin>>x;
            if(Sens==1)
            {
                if(x<=Right-Left-x)
                {
                    x+=Left;
                    for(i=Left;i<x;++i)
                    {
                        val[2*x-i]+=val[i+1];
                        Update(1,1,n,2*x-i,val[2*x-i]);
                    }
                    Left=x;
                }
                else
                {
                    Sens=2;
                    x+=Left;
                    for(i=x+1;i<=Right;++i)
                    {
                        val[2*x-i+1]+=val[i];
                        Update(1,1,n,2*x-i+1,val[2*x-i+1]);
                    }
                    Right=x;
                }
            }
            else
            {
                if(x<=Right-Left-x)
                {
                    x=Right-x;
                    for(i=x+1;i<=Right;++i)
                    {
                        val[2*x-i+1]+=val[i];
                        Update(1,1,n,2*x-i+1,val[2*x-i+1]);
                    }
                    Right=x;
                }
                else
                {
                    x=Right-x;
                    Sens=1;
                    for(i=Left;i<x;++i)
                    {
                        val[2*x-i]+=val[i+1];
                        Update(1,1,n,2*x-i,val[2*x-i]);
                    }
                    Left=x;
                }
            }
        }
        else
        {
            cin>>x>>y;
            if(Sens==1)
            {
                x+=Left; y+=Left;
            }
            if(Sens==2)
            {
                int cx=x;
                x=Right-y; y=Right-cx;

            }
            cout<<Query(1,1,n,x+1,y)<<"\n";
            //cout<<x<<" "<<y<<"\n";
        }
    }
    return 0;
}
