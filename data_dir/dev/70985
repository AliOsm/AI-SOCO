#include <bits/stdc++.h>
using namespace std;

int n;
char s[200005];
int x, y;
int l[200005];
int r[200005];
int u[200005];
int d[200005];
int main()
{
	scanf("%d", &n);
	scanf("%s", s);
	scanf("%d %d", &x, &y);
	int mag = abs(x) + abs(y);
	if (n < mag || (n - mag) % 2 == 1)
	{
		printf("-1\n");
		return 0;
	}
	for (int i = 0; i < n; i++)
	{
		if (s[i] == 'L')
			l[i] = 1;
		else if (s[i] == 'U')
			u[i] = 1;
		else if (s[i] == 'R')
			r[i] = 1;
		else
			d[i] = 1;
		if (i)
		{
			l[i] += l[i-1];
			u[i] += u[i-1];
			d[i] += d[i-1];
			r[i] += r[i-1];
		}
	}
	int DY = u[n-1] - d[n-1];
	int DX = r[n-1] - l[n-1];
	if (DX == x && DY == y)
	{
		printf("0\n");
		return 0;
	}
	int lo, hi, md;
	lo = 1;
	hi = n;
	while (lo <= hi)
	{
		md = (lo + hi) / 2;
		bool ok = false;
		for (int i = md-1; i < n; i++)
		{
			int dd, dl, dr, du;
			dd = d[i];
			dl = l[i];
			dr = r[i];
			du = u[i];
			if (i - md >= 0)
			{
				dd -= d[i-md];
				dl -= l[i-md];
				dr -= r[i-md];
				du -= u[i-md];
			}
			int dx = dr - dl;
			int dy = du - dd;
			int nx, ny;
			nx = x - (DX - dx);
			ny = y - (DY - dy);
			int mag = abs(nx) + abs(ny);
			if (mag <= md && (md - mag)%2 == 0)
			{
				ok = true;
			}
		}
		if (ok)
			hi = md - 1;
		else
			lo = md + 1;
	}
	printf("%d\n", lo);
}