#include <bits/stdc++.h>

using namespace std;

#define all(x) begin(x), end(x)

using ll = long long;
using ld = long double;
using pii = pair<int, int>;
using vi = vector<int>;

constexpr int MAXN = 2e5 + 5;
vi divs[MAXN];

void solve() {
    int n;
    cin >> n;
    vi p(n), c(n);
    for (auto& x : p) {
        cin >> x;
        --x;
    }
    for (auto& x : c) {
        cin >> x;
        --x;
    }

    vi vis(n, false);
    vi comp;
    function<void(int)> dfs = [&](int x) -> void {
        if (vis[x]) return;
        vis[x] = true;
        comp.push_back(x);
        dfs(p[x]);
    };

    int ans = n;
    for (int i = 0; i < n; ++i) {
        if (vis[i]) continue;
        comp.clear();
        dfs(i);

        int m = comp.size();
        ans = min(ans, m);
        vi cur;
        for (int x : comp) {
            cur.push_back(c[x]);
        }
        for (int div : divs[m]) {
            for (int k = 0; k < div; ++k) {
                bool valid = true;
                for (int j = k; j < m; j += div) {
                    if (cur[j] != cur[k]) {
                        valid = false;
                    }
                }

                if (valid) {
                    ans = min(ans, div);
                }
            }
        }
    }

    cout << ans << '\n';
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

    for (int i = 1; i < MAXN; ++i) {
        for (int j = i; j < MAXN; j += i) {
            divs[j].push_back(i);
        }
    }

    int T;
    cin >> T;
    while (T-- > 0) {
        solve();
    }
 
    return 0;
}
