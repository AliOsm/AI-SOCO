#include <bits/stdc++.h>
#define fi first
#define se second
#define mp make_pair
using namespace std;
int n,tut=2,kac=1,son1,son2;
char gg[1205];
pair<int,int> p[605];
stack<pair<int,int>> s;
int main(){
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%d %d",&p[i].fi,&p[i].se);
    }
    s.push(mp(1,1));
    gg[1]='(';
    while(!s.empty()){
        int t1=s.top().fi;
        int t2=s.top().se;
        if(tut-t2>=p[t1].fi && tut-t2<=p[t1].se){
            gg[tut]=')';
            s.pop();
            tut++;
            if(s.empty()){
                kac++;
                if(kac<=n){
                    s.push(mp(kac,tut));
                    gg[tut]='(';
                    tut++;
                }
                else{
                    break;
                }
            }
        }
        else{
            kac++;
            if(kac<=n){
                s.push(mp(kac,tut));
                gg[tut]='(';
                tut++;
            }
            else{
                printf("IMPOSSIBLE\n");
                return 0;
            }
        }
    }
    for(int i=1;i<=2*n;i++){
        if(gg[i]=='(') son1++;
        else son2++;
        if(son2>son1){
            printf("IMPOSSIBLE\n");
            return 0;
        }
    }
    if(son1!=son2){
        printf("IMPOSSIBLE\n");
        return 0;
    }
    for(int i=1;i<=2*n;i++) printf("%c",gg[i]);
    return 0;
}
