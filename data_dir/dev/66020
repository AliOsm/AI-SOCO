#include <bits/stdc++.h>
using namespace std;
vector<int> a, LPD;
int n, m; 


bool all_eq(){
	for(int i=1; i<n; i++){
		if (a[i]!=a[i-1]) return false;
	}
	return true;
}

void SoE(){
	for(int i=1; i<m; i++) LPD[i]=i;
	for(int i=2; i*i<=m; i++){
		if (LPD[i]!=i) continue;
		for(int j=i*i; j<=m; j+=i) if (LPD[j]==j) LPD[j]=i;
	}
}
vector<int> cnt;
int main(){
	ios::sync_with_stdio(0);
	cin>>n; 
	a.assign(n, 0);
	for(int i=0;i<n; i++) cin>>a[i];
	if (all_eq()) return cout<<"-1"<<'\n', 0;
	int gcd=a[0];
	for(int i=1; i<n; i++) gcd=__gcd(gcd, a[i]);
	for(int i=0; i<n; i++) a[i]/=gcd, m=max(m, a[i]);
	m++;
	LPD.assign(m, 0);
	SoE();
	cnt.assign(m, 0);
	for(int i=0; i<n; i++){
		int curr=a[i];
		while(curr>1){
			cnt[LPD[curr]]++;
			int d=LPD[curr];
			while(curr%d==0) curr/=d;
		}
	}
	int maxx=0;
	for(int i=0; i<m; i++) maxx=max(maxx, cnt[i]);
	cout<<n-maxx<<'\n';
}