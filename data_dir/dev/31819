#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <unordered_map>

#define f first
#define s second

#define pb push_back
#define mp make_pair

using namespace std;

const int N = (int) 1e6 + 7;
const int MOD = (int) 1e9 + 7;

int n, vol;
int cost[N];

int main() {
  #ifdef LOCAL
  freopen("in.txt", "r", stdin);
  #endif

  ios_base::sync_with_stdio(0);
  cin.tie(0);

  cin >> n >> vol;
  for (int i = 0; i < n; i++)
    cin >> cost[i];

  for (int i = 1; i < n; i++)
    cost[i] = min(cost[i], cost[i - 1] * 2);

  int now = cost[n - 1];
  long long ans = (long long) 9e18;
  long long jb = 0;
  for (int i = n - 1; i >= 0; i--) {
    now = min(now, cost[i]);
    int cur = (1 << i);
    while (vol >= cur) {
      vol -= cur;
      jb += now;
    }
    if (!vol) ans = min(ans, jb);
    if (vol - cur <= 0)
      ans = min(ans, jb + cost[i]);
  }
  cout << ans;
  return 0;
}