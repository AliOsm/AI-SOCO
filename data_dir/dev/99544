
// Problem : F. Coprime Subsequences
// Contest : Codeforces - Educational Codeforces Round 20
// URL : https://codeforces.com/contest/803/problem/F
// Memory Limit : 256 MB
// Time Limit : 2000 ms
// Powered by CP Editor (https://github.com/cpeditor/cpeditor)

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
ordered_set;	

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const ll maxN = 1e6 + 5;
const ll MOD = 1e9 + 7;

ll pow2(ll a, ll b) {
	if (b == 0) return 1;
	if (b == 1) return a;
	ll d = pow2(a, b / 2);
	d = d * d % MOD;
	if (b % 2) return d * a % MOD;
	return d;	
}

int MAX = 1e5;
bool prime[maxN];
int divs[maxN], ile[maxN];
vi prime_divs[maxN];
bool marked[maxN];

void BFS(int st) {
	marked[st] = true;
	queue<int> Q;
	Q.push(st);
	while (!Q.empty()) {
		int u = Q.front(); Q.pop();
		for (auto x: prime_divs[u]) {
			ll p = (ll)x * u;
			if (p > MAX) break;
			if (!marked[p]) {
				marked[p] = true;
				Q.push(p);
			}
		}
	}
}

void sieve() {
	FOR(i, 2, MAX) prime[i] = true;
	FOR(i, 2, MAX) {
		for (int j = i * 2; j <= MAX; j += i) {
			ile[i] += ile[j];
		}
	}
	FOR(i, 2, MAX) {
		if (prime[i]) {
			if (ile[i]) {
				divs[i]++;
				prime_divs[i].pb(i);
			}
			for (int j = 2 * i; j <= MAX; j += i) {
				prime[j] = false;
				if(ile[i]) {
					divs[j]++;
					prime_divs[j].pb(i);
				}
			}
		}
	}
}

// sprawdz MODULO!
int main() {
    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	ll ans = (pow2(2, n) - 1 + MOD) % MOD;
	REP(i, n) {
		int a;
		cin >> a;
		ile[a]++;
	}
	ll res = 0;
	sieve();
	FOR(i, 2, MAX) {
		if (ile[i] && !marked[i]) {
			//cout << i << " " << ile[i] << endl;
			ll tmp = (pow2(2, ile[i]) - 1 + MOD) % MOD;
			if (divs[i] % 2 == 1) {
				res = (res + tmp) % MOD;
			} else {
				res = (res - tmp + MOD) % MOD;
			}
			BFS(i);
		}
	}
	//cout << res << "\n";
	cout << (ans  - res + MOD) % MOD << "\n";
	return 0;
}
 
