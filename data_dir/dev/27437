#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-9)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) {x, {y, z}}

int n, m, k, tc;
int memo[35][35][55];

int solve(int l, int w, int rem)
{
	if (!rem)
		return 0;
	if (rem < 0)
		return 1e8;
	if (memo[l][w][rem] != -1)
		return memo[l][w][rem];
	int ret = 1e8;

	rep(i, 1, w)
	{
		ret = min(ret, l * l + solve(l, i, rem));
		ret = min(ret, l * l + solve(l, w - i, rem));
		ret = min(ret, l * l + solve(l, w - i, rem - (l * i)));
		ret = min(ret, l * l + solve(l, i, rem - (l * (w - i))));
	}

	rep(i, 1, l)
	{
		ret = min(ret, w * w + solve(i, w, rem));
		ret = min(ret, w * w + solve(l - i, w, rem));
		ret = min(ret, w * w + solve(l - i, w, rem - (w * i)));
		ret = min(ret, w * w + solve(i, w, rem - (w * (l - i))));
	}

	return memo[l][w][rem] = ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	reset(memo, -1);
	cin >> tc;
	while (tc--)
	{
		cin >> n >> m >> k;
		if (n * m == k)
			cout << 0 << endl;
		else
			cout << solve(n, m, k) << endl;
	}

	return 0;
}
