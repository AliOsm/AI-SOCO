#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mk make_pair
#define ll long long
#define F first
#define S second
#define double long double
const int MX=2e5;
int N, M, k;
int arr[MX];
bool over(ll a, ll b) {
    ll c=a*b;
    if(a == 0 || b == 0) return 0;
    if(c/a == b && c/b == a) return 0;
    return 1;
}
bool IsPrime(ll n) {
    if(n == 2) return 1;
    if(n%2 == 0 || n < 2) return 0;
    for(ll i=3;i*i<=n;i+=2) if(n%i == 0) return 0;
    return 1;
}
ll Get(ll pr, ll n) {
    ll ret=0, cur=1;
    while(!over(cur, pr) && cur < n) {
        cur*=pr;
        ret+=n/cur;
    }
    return ret;
}
double Calc(ll n, ll k) {
    if(k > n) return 0;
    double ret=1;
    for(ll i=2;i<=n;i++) {
        if(!IsPrime(i)) continue;
        double num=Get(i, n)-Get(i, n-k)-Get(i, k);
        ret*=pow(1.*i, num);
    }
    return ret;
}
void solve() {
    int n, m, h;
    scanf("%d%d%d", &n, &m, &h);
    --h;
    int others=0, H=0;
    for(int i=0;i<m;i++) {
        scanf("%d", &arr[i]);
        if(i == h) {
            H=arr[i];
        }
        else {
            others+=arr[i];
        }
    }
    if(others+H < n) {
        cout<<-1<<'\n';
        return ;
    }
    double ways=Calc(others+H-1, n-1);
    double notHappy=Calc(others, n-1);
    double ans=1-notHappy/ways;
    cout<<fixed<<setprecision(6)<<ans<<'\n';
}
int main()
{
    int T=1;
//    cin>>T;
    while(T--) solve();
    return 0;
}




// freopen("in.txt", "r", stdin);
//freopen("out.txt", "w", stdout);
