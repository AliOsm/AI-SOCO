#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <unordered_set>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define endl '\n'
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const ll  Inf = 1e18;
ll LINF = (ll)2e18;
using namespace std;
ll mod = 1e9 + 7;
ll mod3 = 998244353;
ll mod2 = 1e9 + 123;
#define M_PI       3.14159265358979323846   // pi
int n;
vector<ll> a;
string s;
ll dp[100005][5];
string hard = "hard#";
ll rec(int pos, int len) {
	if (pos == n) {
		if (len < 4) return 0;
		else return 1e18;
	}
	if (len >= 4) return 1e18;
	if (dp[pos][len] != -1) return dp[pos][len];
	ll ans = 1e18;
	if (s[pos] == hard[len]) {
		ans = min(rec(pos + 1, len + 1), rec(pos + 1, len) + a[pos]);
	}
	else {
		ans = rec(pos + 1, len);
	}
	return dp[pos][len] = ans;
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("javacert.in", "r", stdin);
	//freopen("javacert.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0); cout.setf(ios::fixed); cout.precision(20);
	cin >> n;
	cin >> s;
	a.resize(n);
	forn(i, 0, n) cin >> a[i];
	memset(dp, -1, sizeof(dp));
	ll ans = rec(0, 0);
	cout << ans;
	return 0;
}