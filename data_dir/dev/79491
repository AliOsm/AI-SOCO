#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((ll)(1e18))
#define pi (2*acos(0))
#define M ((ll)(998244353))
#define NN ((ll)(305))
#define N ((int)(1e5 + 5))
#define eps 0
#define log 20


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;


typedef tree < ll,  null_type,  less < ll >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;
int  a  , b , c , d, mark, x[30];

char s[56][112];

bool vis[56][112];

bool chk(int row, int col)
{
    if(min(row,col)<0 || row>=max(b,d) || col>=a+c) return 0;
    if(!vis[row][col]) return 0;
    if(s[row][col]!='\0') return 0;
    return 1;
}

int main()
{
    int  n , col , row;

    cin>>a>>b>>c>>d>>n;

    for(int i = 0; i<b; i++){
        for(int j = 0; j<a; j++) vis[i][j] = 1;
    }


    for(int i = 0; i<d; i++){
        for(int j = 0; j<c; j++) vis[i][a+j] = 1;
    }


    for(int i = 0; i<n; i++) cin>>x[i];

    if(b<d){
        mark = a;
        col = 0;
        if(a%2==1) row = b-1;
        else row = 0;
    }
    else{
        mark = c;
        col = a+c-1;
        if(c%2==1) row = d-1;
        else row = 0;
    }

    int cur = 0;
    while(cur<n){

        while(x[cur]--){
            s[row][col] = 'a'+cur;
            if(chk(row-1,col)) row--;
            else if(chk(row+1,col)) row++;
            else if(chk(row,col+1)) col++;
            else col--;

            //cout<<row<<" "<<col<<endl;

        }
        cur++;
    }

    printf("YES\n");
    for(int i = 0; i<max(b,d); i++){
        for(int j = 0; j<a+c; j++){
            if(s[i][j]=='\0') s[i][j] = '.';
        }

        printf("%s\n",s[i]);
    }
    return 0;
}
