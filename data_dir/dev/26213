///==================================================///
///                HELLO WORLD !!                    ///
///                  IT'S ME                         ///
///               BISHAL GAUTAM                      ///
///         [ bsal.gautam16@gmail.com ]              ///
///==================================================///
#include<bits/stdc++.h>
#define PI acos(-1.0)
#define nl puts("")
#define SZ(x) x.size()
#define pb(x) push_back(x)
#define X first
#define Y second
#define pii pair<int,int>
#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define SL(a) scanf("%lld",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define all(v) v.begin(),v.end()
#define clr(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(i=a;i<=n;i++)
#define rf(i,n,a) for(i=n;i>=a;i--)
#define LB(v,k) lower_bound(v.begin(),v.end(),k)
#define _cin ios_base::sync_with_stdio(0),cin.tie(0)
#define ct(x) cerr<<__LINE__<< ":: "<<#x<<"= "<<x<<endl
#define fi(it,n) for(__typeof(n.begin()) it=n.begin();it!=n.end();it++)
using namespace std;
typedef long long ll;
/// [ LoOFF at my code below, My code is so amazing !! :P ]
/// Digit   012345678910
#define MX  1000015
#define MD  1000000007LL

vector<int>G[MX], RG[MX], C[MX], FC[MX],FG[MX], rg;
bool vis[MX];
int n, m, Cp[MX];
ll pre[MX+2];

void DFS1(int u) {
    vis[u] = 1;
    int i, sz = SZ( G[u] );
    for(i = 0; i < sz; i++) {
        int v = G[u][i];
        if(vis[v])continue;
        DFS1(v);
    }
    rg.pb(u);
}

void DFS2(int u) {
    vis[u] = 1;
    int i, sz = SZ( RG[u] );
    for(i = 0; i < sz; i++) {
        int v = RG[u][i];
        if(vis[v])continue;
        vis[v] = 1;
        DFS2(v);
    }
    Cp[u] = m;
}

vector<ll>vs;
vector<ll>vsm;
ll precal(){
    vs.pb(0);
    vsm.pb(0);
    ll sm=0;
    ll psm=0;
    for(ll i=1;;i++){
        sm=(sm+i);
        psm=(psm+sm);
        vs.pb( sm );
        vsm.pb( psm );
        if( sm>100000000LL )break;
    }
}

ll Get(ll x){
    vector<ll>:: iterator it=upper_bound( all(vs) ,x );
    it--;
    ll id=(it-vs.begin());
    ll val=vs[id];
    //cout<<x<< " => "<<val<<endl;
    //cout<<"IdL : "<<id<< " :: "<<((id+1LL)*x)<< " - "<<(vsm[id])<<endl;
    ll ans=((id+1LL)*x)-( vsm[id] );
    //cout<< "ans: "<<ans<<endl;
    return ans;
}

void Build( ) {
    int i, j, k;
    fr(i, 1, n) {
        int sz = SZ(G[i]);
        fr(j, 0, sz - 1) {
            int v = G[i][j];
            ll c = C[i][j];
            if(Cp[i] == Cp[v]) {
                pre[ Cp[i] ]+=Get( c );
                continue;
            }
            FG[ Cp[i] ].pb( Cp[v] );
            FC[ Cp[i] ].pb( c );
        }
    }
    //print_graph(FG);
}

void Find_Scc( ) {
    int i, j, k;
    fr(i, 1, n) {
        if(!vis[i]) {
            vis[i] = 1;
            DFS1(i);
        }
    }
    clr(vis);
    m = 0;
    for(i = n - 1; i >= 0; i--) {
        if(!vis[ rg[i] ]) {
            m++;
            DFS2( rg[i] );
        }
    }
    // cout << " Tot: " << m << endl;
    Build( );
}


ll dp[MX+2];
ll go(int u) {
    int sz=SZ(FG[u]);
    if(sz==0) return pre[u];
    ll &ret=dp[u];
    if(ret!=-1) return ret;
    ret=0;
    for(int i=0;i<sz;i++) {
        int v=FG[u][i];
        ll c=FC[u][i];
        ret=max(ret, c+pre[u]+go(v) );
    }
    return ret;
}

int main() {
    int tc, cs = 1, i, j, k, x, y, z;

    precal();

    //fr(i,0,25)cout<<Get(i)<<endl;
    S2(n,m);

    fr(i, 1, m) {
        S2(x, y);
        S(z);
        G[x].pb(y);
        C[x].pb(z);
        RG[y].pb(x);
    }
    S(x);

    Find_Scc( );

    ll my=Cp[x];

   // cout<< "My: "<<my<<endl;

    ll sm=pre[ my ];
    SET(dp);
    ll ans=go( my );
    printf("%lld\n",ans);

    return 0;
}
