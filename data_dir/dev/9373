#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include<ctime>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define mp make_pair
#define INF 2000000000
#define DESPACITO2 1000000000000000
#define E 998244353
#define PI acos(-1)
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
 using namespace std;

int main()
{
    //IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
    int n,m;
    scanf("%d %d\n", &n, &m);
    ll a[n+1],b[m+1];
    REP(i,1,n)
        scanf("%lld ", &a[i]);
    REP(i,1,m)
        scanf("%lld ", &b[i]);
    ll x;
    scanf("%lld", &x);
    map<ll,int>maxim;
    int ans=0;
    REP(i,1,m)
    {
        ll sum=0;
        REP(j,i,m)
        {
            sum+=b[j];
            if(sum>x)
                break;
            int val=maxim[sum];
            maxim[sum]=max(val,j-i+1);
        }
    }
    int u=0;
    for(auto it=maxim.begin();it!=maxim.end();it++)
    {
        u=max(u,(*it).second);
        (*it).second = u;
    }
    REP(i,1,n)
    {
        ll sum=0;
        REP(j,i,n)
        {
            sum+=a[j];
            if(sum>x)
                break;
            auto it=maxim.upper_bound(x/sum);
            if(it==maxim.begin())
                break;
            it--;
            if(((*it).first)*sum<=x)
                ans=max(ans,((*it).second)*(j-i+1));
        }
    }
    printf("%d",ans);
}