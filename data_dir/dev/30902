#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double f80;
#define int long long int
#define fi first
#define se second
#define pb push_back
#define IO ios :: sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define pii pair<int,int>
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define all(v) v.begin(), v.end()
#define vi vector
#define deb cout << "LOL" << endl 
const int mod = 1e9 + 7;

string s;
const int N = 105;
int dp[2][2][N][N];
int nn, n;
int go(bool b1, bool b2, int i, int j){
    if(i > nn){
        if(j == 0)
            return 0;
        if(!b1)
            return -1e9;
        return 1e9;
    }
    int &ans = dp[b1][b2][i][j];
    if(ans != -1e9)
        return ans;
    if(!b1){
        ans = -1e9;
        if(s[i] == 'F'){
            for(int k = 0; k <= j; k += 2)
                ans = max(ans, 1 - 2 * b2 + go(0, b2, i + 1, j - k));
            for(int k = 1; k <= j; k += 2)
                ans = max(ans, go(0, (b2 ^ 1), i + 1, j - k));
        }
        else{
            for(int k = 0; k <= j; k += 2){
                ans = max(ans, go(0, (b2 ^ 1), i + 1, j - k));                
            }
            for(int k = 1; k <= j; k += 2){
                ans = max(ans, 1 - 2 * b2 + go(0, b2, i + 1, j - k));                
            }
        }
    }
    else{
        ans = 1e9;
        if(s[i] == 'F'){
            for(int k = 0; k <= j; k += 2)
                ans = min(ans, 1 - 2 * b2 + go(1, b2, i + 1, j - k));
            for(int k = 1; k <= j; k += 2)
                ans = min(ans, go(1, (b2 ^ 1), i + 1, j - k));
        }
        else{
            for(int k = 0; k <= j; k += 2){
                ans = min(ans, go(1, (b2 ^ 1), i + 1, j - k));                
            }
            for(int k = 1; k <= j; k += 2){
                ans = min(ans, 1 - 2 * b2 + go(1, b2, i + 1, j - k));                
            }
        }
    }
    return ans;
    // cout << b1 << " " << b2 << " " << i << " " << j << " " << ans << endl;
}
signed main(){
    IO;
    //freopen("inp.txt", "r", stdin);
    cin >> s;
    s = '0' + s;
    nn = s.size() - 1;
    cin >> n;
    fr(i, 0, 3){
        fr(j, 0, N - 1){
            fr(k, 0, N - 1){
                dp[(i & 1)][i / 2][j][k] = -1e9;
            }
        }
    }
    cout << max(go(0, 0, 1, n), -go(1, 0, 1, n));
    return 0;
}