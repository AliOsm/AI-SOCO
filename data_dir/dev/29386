#include <bits/stdc++.h>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e2 + 5;
const double eps = 1e-9;
using namespace std;
int dp[MAXN * 10000], tmp[MAXN * 10000];
int a[MAXN], b[MAXN];

int main()
{
    int n, k;
    ni(n), ni(k);
    nai(a, n);
    nai(b, n);
    for (int i = 0; i < n; i++) b[i] *= k;
    dp[a[0] - b[0] + 100000] = a[0];
    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j < MAXN * 10000; j++)
            if (dp[j] != 0)
                tmp[j + a[i] - b[i]] = dp[j] + a[i];
        tmp[a[i] - b[i] + 100000] = max(a[i], tmp[a[i] - b[i] + 100000]);
        for (int j = 0; j < MAXN * 10000; j++)
        {
            dp[j] = max(dp[j], tmp[j]);
            tmp[j] = 0;
        }
    }
    if (dp[100000] == 0)
        dp[100000] = -1;
    pri(dp[100000]);
    return 0;
}
