//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

const int N = 10;

int adj[N + 10][N + 10], dp[(1 << N) + 10][(1 << N) + 10];

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int n, m, k;
    cin >> n >> m >> k;
    for (int i = 0; i < m; i ++){
        int u, v;
        cin >> u >> v;
        u --; v --;
        adj[u][v] = adj[v][u] = 1;
    }
    dp[0][0] = 1;
    for (int i = 0; i < n; i ++)
        dp[1 << i][1 << i] = 1;
    for (int u = 0; u < n; u ++)
        for (int v = 0; v < n; v ++)
            if (adj[u][v])
                dp[(1 << u) | (1 << v)][(1 << u) | (1 << v)] = 1;
    for (int mask = 1; mask < 1 << n; mask ++){
        if (__builtin_popcount(mask) < 3)
            continue;
        for (int sub = (mask - 1) & mask; sub; sub = (sub - 1) & mask){
            int u = __builtin_ctz(sub);
            for (int v = 0; v < n; v ++)
                if ((mask >> v & 1) && !(sub >> v & 1) && adj[u][v])
                    dp[mask][sub] += dp[mask ^ (1 << u)][sub ^ (1 << u)] + dp[mask ^ (1 << u)][sub ^ (1 << u) ^ (1 << v)];
        }
    }
    int ans = 0;
    for (int mask = 0; mask < 1 << n; mask ++)
        if (__builtin_popcount(mask) == k)
            ans += dp[(1 << n) - 1][mask];
    cout << ans;
    return 0;
}