#include <bits/stdc++.h>

using namespace std;

const int N = 2007;
vector<int> g[N];
int a[N], c[N], sz[N];

void dfs_get(int v, vector<pair<int, int>>& arr) {
  arr.emplace_back(a[v], v);
  for (int to : g[v]) {
    dfs_get(to, arr);
  }
}

void dfs(int v) {
  sz[v] = 1;
  vector<pair<int, int>> arr;
  for (int to : g[v]) {
    dfs(to);
    dfs_get(to, arr);
    sz[v] += sz[to];
  }
  if (sz[v] - 1 < c[v]) {
    cout << "NO";
    exit(0);
  }
  int t = 1;
  sort(arr.begin(), arr.end());
  for (int i = 0; i <= arr.size(); ++i) {
    if (i == c[v]) {
      a[v] = t++;
    }
    if (i < arr.size()) {
      a[arr[i].second] = t++;
    }
  }
}

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0), cout.tie(0);

  int n;
  cin >> n;
  int root = 0;
  for (int i = 0; i < n; ++i) {
    int p;
    cin >> p >> c[i];
    if (p == 0) {
      root = i;
    } else {
      g[p - 1].push_back(i);
    }
  }
  dfs(root);
  cout << "YES\n";
  for (int i = 0; i < n; ++i) {
    cout << a[i] << ' ';
  }

  return 0;
}