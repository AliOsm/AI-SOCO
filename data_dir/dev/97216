# include <iostream>
# include <map>
# include <string>
# include <vector>
# include <algorithm>

using namespace std;

const int N = 1e5 + 5;

int n;
string s[N], a, b;
char ans[N];
vector <pair <string, int> > vec1, vec2;

bool pref(string x, string y){
      for(int i = 0; i < x.size(); i ++){
            if(x[i] != y[i])
                  return false;
      }
      return true;
}
bool suff(string x, string y){
      reverse(x.begin(), x.end());
      reverse(y.begin(), y.end());
      return pref(x, y);
}

int main(){
      cin >> n;

      map <int, int> mp;

      for(int i = 1; i <= n * 2 - 2; i ++){
            cin >> s[i];
            if(s[i].size() == n - 1)
                  if(a.empty())
                        a = s[i];
                  else
                        b = s[i];
            if(mp[s[i].size()] == 0){
                  mp[s[i].size()] = 1;
                  vec1.push_back({s[i], i});
            } else {
                  vec2.push_back({s[i], i});
            }
      }

      for(int i = 0; i < vec1.size(); i ++){
            for(int j = 0; j < vec1.size(); j ++){
                  if(vec1[i].first.size() < vec1[j].first.size()){
                        swap(vec1[i], vec1[j]);
                  }
                  if(vec2[i].first.size() < vec2[j].first.size())
                        swap(vec2[i], vec2[j]);
            }
      }

      for(int i = 0; i < vec1.size(); i ++){
            if(pref(vec2[i].first, a) && suff(vec1[i].first, b)){
                  swap(vec1[i], vec2[i]);
            }
      }

      for(int i = 0; i < vec1.size(); i ++){
            if(!pref(vec1[i].first, a) || !suff(vec2[i].first, b)){
                  swap(a, b);
                  break;
            }
      }
      for(int i = 0; i < vec1.size(); i ++){
            if(pref(vec2[i].first, a) && suff(vec1[i].first, b)){
                  swap(vec1[i], vec2[i]);
            }
      }

      for(int i = 0; i < vec1.size(); i ++){
            int id = vec1[i].second;
            ans[id] = 'P';
      }
      for(int i = 0; i < vec2.size(); i ++){
            int id = vec2[i].second;
            ans[id] = 'S';
      }

      for(int i = 1; i <= n * 2 - 2; i ++){
            cout << ans[i];
      }
}
