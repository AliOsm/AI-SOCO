# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = 2 * 1000 * 1000 * 1000;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
	freopen("filename.in", "r", stdin);
	freopen("filename.out", "w", stdout);
}

ll n, l, r, ans;

int _get(ll k) {
	int ans = 0;
	while (k) {
		ans++;
		k >>= 1;
	}
	return ans;
}

ll get_ans(ll n , ll k) {
	ll ans = 0;
	int index = _get(n);
	int t = index - 1;
	while (k) {
		ans += (ll)(n >> t)*((k & 1) - ((k >> 1) & 1));
		t--;
		k >>= 1;
	}
	return ans;
}

int main() {
	//file_put();

	scanf("%I64d%I64d%I64d", &n, &l, &r);
	printf("%I64d\n", (ll)get_ans(n, r) - get_ans(n, l - 1));

	return 0;
}
