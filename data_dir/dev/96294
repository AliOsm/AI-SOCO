#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
typedef long long ll;
typedef pair<int, int> ii;

int n;
vector<tuple<int, int, int>> ev;
int ent[312345];

int main(void) {
	ios_base::sync_with_stdio(false);

	cin >> n;

	for (int i = 0; i < n; i++) {
		int a, b; cin >> a >> b;
		ev.eb(a, 0, i);
		ev.eb(b, 1, i);
		ent[i] = a;
	}

	set<ii> act;

	sort(ev.begin(), ev.end());

	for (int i = 0; i < ev.size(); i++) {
		int t, k, id; tie(t, k, id) = ev[i];

		if (k == 0) {
			act.emp(t, id);
		} else {
			vector<ii> to_erase;

			int j = i;
			while (j < ev.size()) {
				int t2, k2, id2; tie(t2, k2, id2) = ev[j];
				if (t2 != t) break;

				auto it = act.begin();

				if (act.size() and (*it).se != id2 and (*it).fi <= ent[id2]) {
					cout << id2+1 << " " << (*it).se+1 << endl;
					return 0;
				} else if (act.size() > 1) {
					it++;
					if ((*it).se != id2 and (*it).fi <= ent[id2]) {
						cout << id2+1 << " " << (*it).se+1 << endl;
						return 0;
					}
				}

				to_erase.eb(ent[id], id);
				j++;
			} j--;

			for (int k = 0; k < to_erase.size(); k++) act.erase(ii(to_erase[k].fi, to_erase[k].se));
		}
	}

	cout << "-1 -1" << endl;

	return 0;
}

