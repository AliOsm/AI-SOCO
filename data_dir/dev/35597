#include <bits/stdc++.h>
using namespace std;

int color[200005];
vector<int> X[200005];

void dfs(int i, int par, int notAllowed)
{
    int x = 1;
    int col = color[i];

    while(x==col || x==notAllowed)
        x++;

    for(int j=0; j<X[i].size(); j++)
        if(X[i][j]!=par)
        {
            color[X[i][j]] = x++;
            dfs(X[i][j], i, col);

            while(x==col || x==notAllowed)
                x++;
        }
}

int main()
{
    int N;
    scanf("%d", &N);

    for(int i=1; i<=N-1; i++)
    {
        int x, y;
        scanf("%d %d", &x, &y);

        X[x].push_back(y);
        X[y].push_back(x);
    }

    int indx = -1, ans = 0;

    for(int i=1; i<=N; i++)
        if(ans<X[i].size()+1)
        {
            ans = X[i].size() + 1;
            indx = i;
        }

    color[indx] = 1;
    dfs(indx, 0, 0);

    ans = 0;

    for(int i=1; i<=N; i++)
        ans = max(ans, color[i]);

    printf("%d\n", ans);

    for(int i=1; i<=N; i++)
        printf("%d ", color[i]);
    printf("\n");

    return 0;
}
