#include<bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
#define ll long long

ll mxm(){return LLONG_MIN;}
ll mnm(){return LLONG_MAX;}
template<typename... Args>
ll mxm(ll a,Args... args){return max(a,mxm(args...));}
template<typename... Args>
ll mnm(ll a,Args... args){return min(a,mnm(args...));}

template<class T> ostream& operator<<(ostream &os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<" ]";
}
template<class L,class R> ostream& operator<<(ostream &os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template<typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
	const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define pll pair<ll,ll>
#define ii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define vpll vector<pll>
#define vld vector<ld>
#define vvll vector<vll>
#define vvi vector<vi>
#define vvld vector<vld>
#define vvii vector<vii>
#define vvpll vector<vpll>
#define I insert
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define pb push_back
#define sz(a)	((a).size())
#define endl "\n"

int mod=1e9+7;
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}
inline void modadd(int &a,int b){a+=b;if(a>=mod)a-=mod;}
struct compare{
	bool operator() (const int &a,const int &b)const{
		return a>b;
	}
};
int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	int t;cin>>t;
	while(t--)
	{
		string s;cin>>s;
		string s1=s;sort(all(s1));
		string s2=s1;reverse(all(s2));
		if(s2==s1)cout<<-1<<endl;
		else cout<<s1<<endl;
	}
}