using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (int i=a;i<b;i++)
#define FORE(i,a,b) for (int i=a;i<=b;i++)
#define FORD(i,a,b) for (int i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

int n,x,d[100],u,du,ans;
priority_queue<II> q;

int main()
{
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen("codeforces.out", "w", stdout);
    cin >> n;
    FORE(i,1,n)
    {
        cin >> x;
        d[i]=x;
        if (i>1) q.push(II(x,i));
    }
    while (!q.empty())
    {
        II pa=q.top();
        q.pop();
        u=pa.nd;
        du=pa.st;
        if (du!=d[u]) continue;
        if (du>=d[1])
        {
            ans++;
            du--;
            d[u]--;
            d[1]++;
            if (du>0) q.push(II(du,u));
        }
        else break;
    }
    cout << ans;
}

