/*input
1
7
4


3
1 2 9
10 1 1


5
9 3 5 7 3
5 8 1 4 5

*/
#include <bits/stdc++.h>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define __builtin_popcount __builtin_popcountll
#define int long long
#define bit(x,y) ((x>>y)&1LL)
#define loop(i,l,r) for(int i=(int)l; i<=(int)r; i++)
#define rloop(i,l,r) for(int i=(int)l; i>=(int)r; i--)
const int N = 1e5 + 5;
template <class T1, class T2>
ostream &operator<<(ostream &os, const pair<T1, T2> &a) {
	return os << '(' << a.first << ", " << a.second << ')';
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a) {
	os << '[';
	for (unsigned int i = 0; i < a.size(); i++)
		os << a[i] << (i < a.size() - 1 ? ", " : "");
	os << ']';
	return os;
}

int n;
int a[3][N];
int dp[N][3];
signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	cin >> n;
	loop(i, 1, n) cin >> a[0][i];
	loop(i, 1, n) cin >> a[1][i];
	loop(i, 1, n) {
		loop(p, 0, 2) {
			loop(p2, 0, 2) {
				if (p != p2 || p == 2) {
					dp[i][p] = max(dp[i][p], dp[i - 1][p2] + a[p][i]);
				}
			}
		}
	}
	cout << max(dp[n][0], max(dp[n][1], dp[n][2])) << endl;
}