#include<bits/stdc++.h>

using namespace std;

#define FTB(i,a,b) for(LL i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(LL i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(LL i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(LL i=a,_b=b;i>_b;i--)
#define endl "\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define debug cout<<"VL\n"
#define coYES cout<<"YES\n"
#define coNO cout<<"NO\n"
#define coyes cout<<"yes\n"
#define cono cout<<"no\n"
#define coYes cout<<"Yes\n"
#define coNo cout<<"No\n"
#define PI 3.1415926535897
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define y1 aghksdmlsjdfjavljvlckdfmg
#define lamtron(n) fixed<<setprecision(n)
#define ALL(s) s.begin(),s.end()
#define ONLINE_JUDGE gshysrthrrthbd

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
template<class T> inline T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}

typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<II> VII;
typedef vector<bool> VB;

string s;
LL m;
VI kt[27];
set<LL> st;


int main(){
    ios::sync_with_stdio(false);cin.tie(0);
    #ifndef ONLINE_JUDGE
    	freopen("input.txt","r",stdin);
    	freopen("output.txt","w",stdout);
    #endif
    cin>>m>>s;
    LL n=s.size();
    FT(i,0,n){
        kt[s[i]-'a'].PB(i);
    }
    FT(c,0,26){
        bool ok=true;
        LL dem=0;
        FGB(i,n-1,m-1){
            auto z=st.lower_bound(i-m+1);
            if(z!=st.end()&&*z<=i){
                i=*z;
                continue;
            }
            auto g=lbnd(kt[c].begin(),kt[c].end(),i-m+1);
            if(g!=kt[c].end()&&*g<=i){
                i=*g;
                dem++;
            }
            else{
                ok=false;
                break;
            }
        }
        if(ok){
            FT(i,0,c) FT(j,0,kt[i].size()) cout<<char(i+'a');
            FT(i,0,dem) cout<<char(c+'a');
            return 0;
        }
        for(auto x:kt[c]) st.insert(x);
    }



	return 0;
}
