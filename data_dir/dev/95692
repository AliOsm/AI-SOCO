/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)1e6+7;

// ---------------------------------------- 变量 ---------------------------------------- //

char s[N], t[N];
int lens, lent, p[N];
bool vis[N];

// ---------------------------------------- 函数 ---------------------------------------- //

bool check(int M) {
	string tmp = "";
	memset(vis, 0, sizeof(vis));
	rep(i, 1, M+1) vis[p[i]] = 1;
	rep(i, 0, lens) if (!vis[i+1]) tmp += s[i];
	int pos = 0;
	rep(i, 0, sz(tmp)) if (pos < lent && tmp[i] == t[pos]) pos++;
	return pos == lent;
}

void Init() {
}

int Solve() {
	lens = strlen(s), lent = strlen(t);
	rep(i, 1, lens+1) scanf("%d", p+i);
	int L = 0, R = lens;
	while (L < R) {
		int M = L + ((R - L + 1) >> 1);
		if (check(M)) L = M; else R = M - 1;
	}
	return printf("%d\n", L);
}

// ---------------------------------------- main ---------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%s%s", s, t)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}