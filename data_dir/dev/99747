#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef long double real;

#ifdef WIN32
#define INT64 "%I64d"
#define UINT64 "%I64u"
#else
#define INT64 "%lld"
#define UINT64 "%llu"
#endif

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

const int MaxN = 1000006, MaxC = 0x3F3F3F3F, NA = -1;

int a [MaxN];
char s [MaxN];
int k, m, n;

int main (void)
{
 int i;
 int64 res;

 while (scanf (" %d %s", &k, s) != EOF)
 {
  n = strlen (s);
  m = 0;
  a[m++] = -1;
  for (i = 0; i < n; i++)
   if (s[i] == '1')
    a[m++] = i;
  a[m++] = n;
  res = 0;
  if (k == 0)
   for (i = 1; i < m; i++)
    res += ((int64) (a[i] - a[i - 1]) * (int64) (a[i] - a[i - 1] - 1)) >> 1;
  else
   for (i = 1; i + k < m; i++)
    res += (int64) (a[i] - a[i - 1]) * (int64) (a[i + k] - a[i + k - 1]);
  printf (INT64 "\n", res);
 }

 return 0;
}
