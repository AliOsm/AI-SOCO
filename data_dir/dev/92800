#include<bits/stdc++.h>

#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define emp What is it
#define SORRY FUL Accepted 
#define dimash the top one
#define I wish 
#define you be a little more calm
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)

using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 5e3 + 123;                                          
const int NN = 5e5 + 123;
const int PRI = 555557;
const int pri = 997;

int tests = 1;
string s, t, ts;
int d[NN], pref[NN], p[NN], n, m;
bool is[NN]; 

inline void Solve () {
	// easy
	cin >> s >> t;
	m = (int)t.size();

	t = t + '#' + s;

	n = (int)s.size(); 

	for (int i = 1; i < t.size(); i ++) {
		int j = p[i - 1];
		while (j && t[i] != t[j])
			j = p[j - 1];
		if (t[i] == t[j])
			j ++;
		p[i] = j;

		if(p[i] == m && i > m)                                    
			is[i - m - 1] = 1;
	}
	for (int i = m - 1, last = -1; i < n; i ++) {
        d[i] = d[i - 1];
        if(is[i])
        	last = i - m + 1;
        if (last != -1) {
            d[i] = (d[i] + last + 1ll) % mod;
            if (last > 0) {
            	d[i] = (d[i] + pref[last - 1]) % mod;
            }
        }
        pref[i] = (pref[i - 1] + d[i]) % mod;
    }

	cout << d[n - 1];
}


int main () {
	SpeedForce;
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);	
	// cin >> tests;
	while(tests --) {
		Solve ();
		// Ee Zadrot
	}	
}