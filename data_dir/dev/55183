#include<bits/stdc++.h>
using namespace std;

int a[1000000];
vector<int> v1,v2;
int ans;
int n;

bool is_good(int x)
{
    if(x==n || x<1)
        return true;
    if(x%2==1 && a[x]>=a[x+1])
        return false;
    if(x%2==0 && a[x]<=a[x+1])
        return false;
    return true;
}

int check(int x1,int x2)
{
    bool f=true;
    swap(a[x1],a[x2]);
    if(!is_good(x1))
        f=false;
    if(!is_good(x1-1))
        f=false;
    if(!is_good(x2-1))
        f=false;
    if(!is_good(x2))
        f=false;
    for(int i=0;i<v1.size();i++)
        if(!is_good(v1[i]))
            f=false;
    for(int i=0;i<v2.size();i++)
        if(!is_good(v2[i]))
            f=false;
    swap(a[x1],a[x2]);
    return f;
}

void solve(int x)
{
    for(int j=1;j<=n;j++)
        if(j!=x)
            ans+=check(x,j);
}

int main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);
    cin>>n;
    for(int i=1;i<=n;i++)
        cin>>a[i];
    for(int i=1;i<n;i++)
    {
        if(i%2==1 && a[i]>=a[i+1])
            v1.push_back(i);
        if(i%2==0 && a[i]<=a[i+1])
            v2.push_back(i);
    }
    if(v1.size()+v2.size()>5)
    {
        cout<<"0\n";
        return 0;
    }
    if(v1.empty())
    {
        int pos=v2[0];
        for(int i=pos;i<=pos+1;i++)
            solve(i);
        ans-=check(pos,pos+1);
    }else
    {
        int pos=v1[0];
        for(int i=pos;i<=pos+1;i++)
            solve(i);
        ans-=check(pos,pos+1);
    }
    cout<<ans<<"\n";
}
