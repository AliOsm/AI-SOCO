#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
#define F first
#define S second
#define ii pair <int,int>
#define ever (;;)

const int N = 2000100;

int n,ans[10][10],cost[10][10][10][10],curr[10];
char A[N];
string s;
queue < ii > q;

void bfs(int x,int y)
{
    for(int s=0;s<=9;s++)
    {
        memset(curr,-1,sizeof curr);
        q.push( { s , 0 } );

        while(!q.empty())
        {
            int pos = q.front().F;
            int c = q.front().S;

            q.pop();

            if(curr[(pos+x)%10]==-1)
            {
                curr[(pos+x)%10]=c+1;
                q.push({(pos+x)%10,c+1});
            }
            if(curr[(pos+y)%10]==-1)
            {
                curr[(pos+y)%10]=c+1;
                q.push({(pos+y)%10,c+1});
            }
        }

        for(int i=0;i<=9;i++)
        {
            cost[x][y][s][i] = curr[i];
            cost[y][x][s][i] = curr[i];
        }
    }
}

int main()
{
    scanf("%s",&A);
    s = A;
    n = s.length();

    for(int i=0;i<=9;i++)
        for(int j=0;j<=9;j++)
            bfs(i,j);

    for(int i=0;i<=9;i++)
        for(int j=0;j<=9;j++)
        {
            for(int k=1;k<n;k++)
            {
                if(cost[i][j][s[k-1]-'0'][s[k]-'0'] == -1)
                {
                    ans[i][j]=-1;
                    break;
                }
                ans[i][j] += cost[i][j][s[k-1]-'0'][s[k]-'0'];
            }
        }

    for(int i=0;i<=9;i++)
    {
        for(int j=0;j<=9;j++)
        {
            if(ans[i][j]==-1)
                printf("-1 ");
            else
                printf("%d ",ans[i][j]-n+1);
        }
        printf("\n");
    }
}
