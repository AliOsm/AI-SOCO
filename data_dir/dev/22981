#include <iostream>
#include <cstdio>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <queue>

using namespace std;

#define next roman_kaban

char s[10050];
int a[1200][1200];
int z[8][1200][1200];
pair<int,int> tu[1200][1200];
pair<int,int> tl[1200][1200];
pair<int,int> tdl[1200][1200];
pair<int,int> tul[1200][1200];
pair<int,int> sp[2200200];

const double ln2 = log(double(2));
const double ln3 = log(double(3));

const int mod = int(1e9) + 7;

int main()
{
    int n;
    gets(s);
    sscanf(s,"%d",&n);
    for(int i=0;i<n;i++)
    {
        gets(s);
        for(int j=0;j<n;j++)
            a[i+1][j+1] = s[j]-'0';
    }
    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
    if(a[i][j])
    {
        z[0][i][j] = z[0][i-1][j]+1;
        z[1][i][j] = z[1][i][j-1]+1;
        z[4][i][j] = z[4][i-1][j-1]+1;
        z[5][i][j] = z[5][i-1][j+1]+1;

        tu[i][j] = tu[i-1][j];
        tl[i][j] = tl[i][j-1];
        tul[i][j] = tul[i-1][j-1];
        if(a[i][j]==2)
        {
            tu[i][j].first++;
            tl[i][j].first++;
            tul[i][j].first++;
        }else
        if(a[i][j]==3)
        {
            tu[i][j].second++;
            tl[i][j].second++;
            tul[i][j].second++;
        }

    }
    for(int i=n;i>0;i--)
    for(int j=n;j>0;j--)
    if(a[i][j])
    {
        z[2][i][j] = z[2][i+1][j]+1;
        z[3][i][j] = z[3][i][j+1]+1;
        z[6][i][j] = z[6][i+1][j+1]+1;
        z[7][i][j] = z[7][i+1][j-1]+1;

        tdl[i][j] = tdl[i+1][j-1];
        if(a[i][j]==2){tdl[i][j].first++;}else
        if(a[i][j]==3){tdl[i][j].second++;}
    }
    int pos = 0;
    //long long res = 0;
    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
    if(a[i][j])
    {
        int d = 1e9;
        for(int k=0;k<4;k++)
            if(z[k][i][j]<d) d = z[k][i][j];
        d--;
        int x = tl[i][j+d].first  - tl[i][j-d-1].first  + tu[i+d][j].first  - tu[i-d-1][j].first;
        int y = tl[i][j+d].second - tl[i][j-d-1].second + tu[i+d][j].second - tu[i-d-1][j].second;
        if(a[i][j]==2) x--; else
        if(a[i][j]==3) y--;

        sp[pos++] = make_pair(x,y);

        d = 1e9;
        for(int k=4;k<8;k++)
            if(z[k][i][j]<d) d = z[k][i][j];
        d--;
        x = tdl[i-d][j+d].first  - tdl[i+d+1][j-d-1].first  + tul[i+d][j+d].first  - tul[i-d-1][j-d-1].first;
        y = tdl[i-d][j+d].second - tdl[i+d+1][j-d-1].second + tul[i+d][j+d].second - tul[i-d-1][j-d-1].second;
        if(a[i][j]==2) x--; else
        if(a[i][j]==3) y--;
        sp[pos++] = make_pair(x,y);
    }
    if(pos==0){cout <<0<<endl; return 0;}
    sort(sp,sp+pos);
    int k = 0;
    for(int i=0;i<pos;i++)
    {
        while(k>0 && sp[k-1].second<=sp[i].second) k--;
        sp[k] = sp[i]; k++;
    }
    //for(int i=0;i<k;i++)  cout <<"("<<sp[i].first<<';'<<sp[i].second<<")"<<endl;
    int ra = sp[0].first;
    int rb = sp[0].second;

    for(int i=1;i<k;i++)
    if((sp[i].first-ra)*ln2 > (rb - sp[i].second)*ln3 ) {ra = sp[i].first; rb = sp[i].second;}

    long long res = 1;
    while(ra--)
        res = (res*2)%mod;
    while(rb--)
        res = (res*3)%mod;
    cout <<res <<endl;
    return 0;
}
/*
30000000003312
0

6
-1 2 -3 4 -1 1
1 5 2 3 2

5
1 2 -5 2 1
1 1 1 2
*/
