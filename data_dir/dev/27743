#include<bits/stdc++.h>
#define MOD (ll)(1e9+7)
#define MAX (ll)(1e6+3)
#define INF (ll)(-1e9)
using namespace std;
using ll = long long;
int mult (int a, int b) {
	return (a * (1LL) * b) % MOD;
}

int add (int a, int b) {
	return (a + b) % MOD;
}
int fact[MAX], inf[MAX];
int pw (int a, int b) {	
	int res = 1;
	while (b) {
		if (b & 1) {
			res = mult (res, a);
		}	
		b >>= 1;
		a = mult (a, a);
	}
	return res;
}
void pre () {
	fact[0] = 1;
	for (int i = 1; i < MAX; i++) {
		fact[i] = mult (fact[i - 1], i);
	}
	inf[MAX -1] = pw (fact[MAX - 1], MOD - 2);
	for (int i = MAX - 2; i >= 0; i--) {
		inf[i] = mult (i + 1, inf[i + 1]);
	}
}

int comb (int a, int b) {
	return mult (fact[a], mult (inf[a - b], inf[b]));
}
bool ch (int a, int b, int n) {
	while (n) {
		if (n % 10 != a && n % 10 != b) {
			return 0;
		}
		n /= 10;
	}
	return 1;
}


int main () {
	int a, b, n, ans = 0;
	cin >> a >> b >> n;
	pre ();
	for (int i = 0; i <= n; i++) {
		if (ch (a, b, a * i + (n - i) * b)) {
			ans = add (ans , comb (n, i));
		}
	}
	cout << ans << "\n";
}
		

