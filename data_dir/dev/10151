#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    ll x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}

ll n, fact[200002], inv[200002], k, z;

ll comb(ll nn, ll k)
{
    if(nn < k)
        return 0;
    ll ans = fact[nn];
    ans = mul(ans, inv[k]);
    ans = mul(ans, inv[nn - k]);
    return ans;
}
pair<int, int> events[200002], tip[400002];
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n >> k;
    fact[0] = inv[0] = 1;
    for(int i = 1; i <= n; ++i)
    {
        fact[i] = mul(fact[i-1], i);
        inv[i] = pw(fact[i], mod - 2);
    }
    for(int i = 1; i <= n; ++i)
    {
        cin >> events[i].fi >> events[i].se;
        tip[++z] = {events[i].fi, 0};
        tip[++z] = {events[i].se, 1};
    }
    sort(tip + 1, tip + z + 1);
    int last = tip[1].fi - 1;
    ll sum = 0;
    ll countt = 0;
    int i = 1;
    for(; i <= z; )
    {
        int j = i;
        sum = add(sum, mul(add(0, tip[j].fi - 1 - last), comb(countt, k)));
        while(i <= z && tip[i].se == 0 && tip[i].fi == tip[j].fi)
            ++countt, ++i;
        sum = add(sum, mul(1, comb(countt, k)));
        while(i <= z && tip[i].fi == tip[j].fi)
            --countt, ++i;
        last = tip[j].fi;
    }
    cout << sum;
    return 0;
}
