#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

int par[25][100005],h[100005],sz[100005],ans[100005],b[100005];
string s[100005];
set<string> cnt[300005];
vii v[100005];

vector<pii> qu[100005];


void go(int at,int p,int hh)
{
	h[at]=hh;
	sz[at]=1;
	rep(i,1,24)par[i][at]=par[i-1][par[i-1][at]];
	tr(v[at],it)
	{
		int to=*it;
		if(to!=p)
		go(to,at,hh+1),sz[at]+=sz[to];
	}
}

void add(int at,int p)
{
	cnt[h[at]].insert(s[at]);
	tr(v[at],it)
	{
		int to=*it;
		if(to!=p&&!b[to])
		add(to,at);
	}
}

void rem(int at,int p)
{
	if(present(cnt[h[at]],s[at]))
	cnt[h[at]].erase(cnt[h[at]].find(s[at]));
	tr(v[at],it)
	{
		int to=*it;
		if(to!=p)
		rem(to,at);
	}
}

void dfs(int at,int p,bool kk)
{
	int big=-1,mx=-1;
	tr(v[at],it)
	{
		int to=*it;
		if(to!=p)
		{
			if(sz[to]>mx)
			{
				mx=sz[to];
				big=to;
			}
		}
	}
	tr(v[at],it)
	{
		int to=*it;
		if(to!=p&&to!=big)
		dfs(to,at,0);
	}
	if(big!=-1)
	dfs(big,at,1),b[big]=1;
	add(at,p);
	tr(qu[at],it)
	{
		ans[it->ss]=cnt[(it->ff)+h[at]].size();
	}
	b[big]=0;
	if(kk==0)
	rem(at,p);
}

int main()
{ios_base::sync_with_stdio(false);
int n;
cin>>n;
rep(i,1,n)
{
	cin>>s[i]>>par[0][i];
	if(par[0][i])
	v[par[0][i]].pb(i);
}
rep(i,1,n)
{
	if(par[0][i]==0)go(i,0,0);
}

int q;
cin>>q;

rep(ii,0,q-1)
{
	int a,b;
	cin>>a>>b;
	
	qu[a].pb(mp(b,ii));
}

rep(i,1,n)
{
	if(par[0][i]==0)dfs(i,0,0);
}

rep(i,0,q-1)
{
	ol(ans[i]);on;
}


return 0;
}

