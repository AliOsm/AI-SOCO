#include<bits/stdc++.h>
#define pb push_back
using namespace std;
const int MAXN = 3e5;
int n;
vector <int> g[MAXN];
vector <int> g_[MAXN];
bool used[MAXN];
int ans;
int ansm[MAXN];
void dfs1(int v)
{
	used[v]=true;
	for (int i=0; i<g[v].size(); i++)
	{
		int to = g[v][i];
		if (used[to] == false) dfs1(to);
	}
	for (int i=0; i<g_[v].size(); i++)
	{
		int to = g_[v][i];
		if (used[to] == false )
		{
			dfs1(to);
			ans++;
		}
	}
	
}
void dfs2(int v)
{
	used[v] = true;
	for (int i=0; i<g[v].size(); i++)
	{
		int to = g[v][i];
		if (used[to] == false )
		{
			ansm[to] = ansm[v]+1;
			dfs2(to);
		}
	}
	for (int i=0; i<g_[v].size(); i++)
	{
		int to = g_[v][i];
		if (used[to] == false)
		{
			ansm[to] = ansm[v] -1;
			dfs2(to); 
		}
	}
}
 
int main() 
{
	ios_base::sync_with_stdio(0);
 	cin>>n;
 	for (int i=1; i<n; i++)
 	{
 		int x,y;
 		cin>>x>>y;
 		g[x].pb(y);
 		g_[y].pb(x);
	}
	 
	 dfs1(1);
 	//	cout<<ans<<endl;
 	ansm[1] = ans;
 	for (int i=1; i<=n; i++) used[i] = false;
	 dfs2(1);
	 
	 int max = 300000;
	 for (int i=1; i<=n; i++) if (ansm[i]<max) max = ansm[i];
	 cout<<max<<endl;
	 for (int i=1; i<=n; i++) if (ansm[i] == max) cout<<i<<" ";
}
 