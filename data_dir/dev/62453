#include <cstdio>
#include <iostream>
#include <string>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
#include <memory.h>
#include <complex>
#include <time.h>
#pragma comment(linker, "/STACK:100000000")
using namespace std;

#define mp make_pair
#define pb push_back
#define ll long long
#define sz(x) (int)(x).size()

int gcd(int a, int b) {
    if(!a) return b;
    return gcd(b % a, a);
}
int cnt[26];

int main() {
    //freopen("input.txt","rt",stdin);
    //freopen("palindrome.in","rt",stdin);
    //freopen("palindrome.out","wt",stdout);

    int n;
    scanf("%d", &n);
    for(int i = 0; i < n; i++) scanf("%d", &cnt[i]);

    int bestval = -1;
    int besti = -1;

    for(int i = 100000; i >= 1; i--) {
        bool ok = true;
        int nechet = 0;
        for(int j = 0; j < n; j++) {
            if(cnt[j] % i != 0) {
                ok = false;
                break;
            }
            int val = cnt[j] / i;
            if(val & 1) nechet++;
        }
        if(ok && nechet <= 1) {
            if(nechet == 0) {
                if(i * 2 > bestval) bestval = i * 2, besti = i;
            }
            else {
                if(i > bestval) bestval = i, besti = i;
            }
            break;
        }
    }
    if(besti == -1) {
        printf("0\n");
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < cnt[i]; j++) {
                printf("%c", 'a' + i);
            }
        }
        return 0;
    }
    printf("%d\n", bestval);
    int i = besti;
    if(bestval != besti) {
        string res = "";
        for(int j = 0; j < n; j++) {
            for(int k = 0; k < (cnt[j] / besti) / 2; k++) {
                res += (char)('a' + j);
            }
        }
        string res2 = res;
        reverse(res2.begin(), res2.end());
        res += res2;
        string tmp = "";
        for(int x = 0; x < besti; x++) tmp += res;
        for(int j = 0; j < sz(tmp); j++) {
            printf("%c", tmp[j]);
        }
    }
    else {
        string res = "";
        for(int j = 0; j < n; j++) {
            for(int k = 0; k < (cnt[j] / besti) / 2; k++) {
                res += (char)('a' + j);
            }
        }
        string res2 = res;
        reverse(res2.begin(), res2.end());
        for(int j = 0; j < 26; j++) {
            if((cnt[j] / besti) % 2 == 1) res += (char)('a' + j);
        }
        res += res2;
        string tmp = "";
        for(int x = 0; x < besti; x++) tmp += res;
        for(int j = 0; j < sz(tmp); j++) {
            printf("%c", tmp[j]);
        }
    }




    return 0;
}