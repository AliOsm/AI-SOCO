//  Copyright Â© 2018 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 105
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

i64 Q;
i64 sum[MAX];
multiset < i64 > s;


int main()
{
    optimiza_io
    cin >> Q;
    while( Q -- )
    {
        char op;
        i64 f;
        cin >> op >> f;
        if( op == '+' )
        {
            i64 i = 0;
            while( ( 1 << ( i + 1 ) ) <= f )
                i++;
            sum[i] += f;
            s.insert( f );
        }
        else
        {
            i64 i = 0;
            while( ( 1 << ( i + 1 ) ) <= f )
                i++;
            sum[i] -= f;
            s.erase( s.find( f ) );
        }
        i64 t = s.size();
        i64 k = 0;
        i64 ant = 0;
        for( i64 i = 0; i <= 30; i ++ )
        {
            ant += sum[i]; 
            auto it = s.lower_bound( ( 1 << i ) );
            if( it == s.end() )
                continue;
            if( ( 1 << ( i + 1 ) ) <= *it )
                continue;
            if( *it > 2 * ( ant - sum[i] ) )
                k++;
        }
        cout << t - k << "\n";
        
    }
    return 0;
}

