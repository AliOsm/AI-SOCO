#include<bits/stdc++.h>
#define LL long long
#define fi first
#define se second
#define mk make_pair
#define PLL pair<LL, LL>
#define PLI pair<LL, int>
#define PII pair<int, int>
#define SZ(x) ((int)x.size())
#define ull unsigned long long
using namespace std;

const int N = 1e6 + 7;
const int inf = 0x3f3f3f3f;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1e9 + 7;
const double eps = 1e-8;

int n;
char s[N];
LL a[N];
LL dp[N][4];

int main() {
    scanf("%d", &n);
    scanf("%s", s+1);
    for(int i = 1; i <= n; i++) scanf("%lld", &a[i]);
    memset(dp, INF, sizeof(dp));
    dp[0][0] = 0;
    for(int i = 0; i < n; i++) {
        char c = s[i+1];
        for(int s = 0; s < 4; s++) {
            if(dp[i][s] >= INF) continue;
            if(s == 0 && c == 'h') {
                dp[i+1][1] = min(dp[i+1][1], dp[i][0]);
                dp[i+1][0] = min(dp[i+1][0], dp[i][0]+a[i+1]);
            } else if(s==1 && c == 'a') {
                dp[i+1][2] = min(dp[i+1][2], dp[i][1]);
                dp[i+1][1] = min(dp[i+1][1], dp[i][1]+a[i+1]);
            } else if(s==2 && c == 'r') {
                dp[i+1][3] = min(dp[i+1][3], dp[i][2]);
                dp[i+1][2] = min(dp[i+1][2], dp[i][2]+a[i+1]);
            } else if(s==3 && c == 'd') {
                dp[i+1][3] = min(dp[i+1][3], dp[i][3]+a[i+1]);
            } else {
                dp[i+1][s] = min(dp[i+1][s], dp[i][s]);
            }
        }
    }
    LL ans = INF;
    for(int i = 0; i < 4; i++)
        ans = min(ans, dp[n][i]);
    printf("%lld\n", ans);
    return 0;
}

/*
*/
