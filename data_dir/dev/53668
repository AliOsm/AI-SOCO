#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;

//#include <ext/pb_ds/tree_policy.hpp>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/rope>
//using namespace __gnu_pbds;
//using namespace __gnu_cxx;
//
//template<class T> using Tree = tree<T, null_type, less<T>, rb_t_tag,t_order_statistics_node_update>;
/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______      
 * |\  \|\  \  |\  ___ \  |\  ___ \     
 * \ \  \/  /|_\ \   __/| \ \   __/|    
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__  
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \ 
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */
const long long mod = 1000000007;
//const long long mod = 998244353;
// watch this
//using ll = long long;
//typedef long long LL
#define ll long long
#undef ll

int main(int argc, char** argv) {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
#endif
	
	int n, k;
	vector<pair<int,int>> vp;
	cin >> n >> k;
	
	vp.resize(n);
	
	for(int i = 0; i < n; i++)
		cin >> vp[i].second;
	for(int i = 0; i < n; i++)
		cin >> vp[i].first;
	
	sort(begin(vp), end(vp));
	vector<bool>vis(k);
	vector<int> notAssigned;
	
	for(int i = n-1; i >= 0; --i){
		if(vis[vp[i].second]){
			notAssigned.push_back(vp[i].first);
		}	else {
			vis[vp[i].second] = 1;
			k--;
		}
	}
	
	sort(notAssigned.begin(), notAssigned.end());
	notAssigned.resize(k);
	long long sum = 0;
	for(auto x : notAssigned)
		sum += x;
	cout << sum << '\n';
	return 0;
}
