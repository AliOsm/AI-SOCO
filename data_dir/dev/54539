#include <bits/stdc++.h>

using namespace std;

int n ;
vector < long long > p[2];
long long k;
vector < long long > bla[2] ;
long long MA = 1e18 ;
void f(int idx, bool what, long long ou)
{
    if ( idx == p[what].size() )
    {
        bla[what].push_back(ou) ;
        return ;
    }
    f(idx+1, what, ou) ;
    for ( ; ou <= MA / p[what][idx] ; )
        f(idx+1, what, ou *= p[what][idx]);
}
long long getLess( long long num )
{
    int j = 0 ;
    long long cnt = 0 ;
    for ( int i = 0 ; i < bla[0].size() ; ++i )
    {
        while ( j < bla[1].size() && bla[1][j] <= num/bla[0][i] ) ++j ;
        cnt += j ;
    }
    return cnt ;
}

int main()
{
    cin >> n;
    int x;
    for ( int i= 0 ; i < n ; ++i )
    {
        cin >> x ;
        p[i&1].push_back(x) ;
    }
    cin >> k ;
    f(0,0,1) ;
    f(0,1,1) ;
    sort(bla[0].begin(),bla[0].end(), greater < long long > ());
    sort(bla[1].begin(),bla[1].end());
    long long l = 0 , r = MA , m ;
    while ( l <= r )
    {
        m = (l+r)>>1 ;
        if ( getLess(m) < k )
            l = m+1 ;
        else r = m-1 ;
    }
    cout << l ;

    return 0 ;
}
