#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
 
using namespace std;
 
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

string s[300100];
LL p1[300100];
LL p2[300100];
LL h1[300100];
LL h2[300100];
int mod1=1000000007;
int mod2=1000000000;
char s1[300100];
vector<vector<int> > g;
int res;
LL hh1=0,hh2=0;
int sz;
int m;
void dfs(int v)
{
	FOR(i,0,g[v].size())
	{
		int to=g[v][i];
		FOR(j,0,s[to].size())
		{
			if (sz)
				h1[sz]=h1[sz-1];
			else
				h1[sz]=0;
			h1[sz]+=p1[sz]*(s[to][j]-'a'+1);
			h1[sz]%=mod1;
			if (sz)
				h2[sz]=h2[sz-1];
			else
				h2[sz]=0;
			h2[sz]+=p2[sz]*(s[to][j]-'a'+1);
			h2[sz]%=mod2;
			sz++;
			if (sz>=m)
			{
				LL k1=(hh1*p1[sz-m])%mod1;
				LL k2=(hh2*p2[sz-m])%mod2;
				LL k3=h1[sz-1];
				if (sz>m)
					k3-=h1[sz-m-1];
				if (k3<0)
					k3+=mod1;
				LL k4=h2[sz-1];
				if (sz>m)
					k4-=h2[sz-m-1];
				if (k4<0)
					k4+=mod2;
				res+=((k1==k3)&&(k2==k4));
			}
		}
		dfs(to);
		sz-=s[to].size();
	}
}
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif

	srand(time(NULL));
	p1[0]=p2[0]=1;
	mod2+=rand()%1000;
	FOR(i,1,300100)
	{
		p1[i]=p1[i-1]*29;
		p1[i]%=mod1;
		p2[i]=p2[i-1]*29;
		p2[i]%=mod2;
	}
	int n;
	scanf("%d",&n);
	g.resize(n);
	FOR(i,0,n-1)
	{
		int p;
		scanf("%d",&p);
		g[p-1].push_back(i+1);
		scanf("%s",&s1);
		s[i+1]=(string)s1;
	}
	res=0;
	scanf("%s",&s1);
	m=strlen(s1);
	FOR(i,0,m)
	{
		hh1+=p1[i]*(s1[i]-'a'+1);
		hh1%=mod1;
		hh2+=p2[i]*(s1[i]-'a'+1);
		hh2%=mod2;
	}
	sz=0;
	dfs(0);
	cout<<res<<endl;
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
    return 0;
}