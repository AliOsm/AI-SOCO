#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 1000;
const string loc[] = { "00", "01", "10", "11" };
int n, m, cnt[3], cpy[3], rems[N];
vector<int> ret[N];

bool valid(int val) {
    for (int i = 0; i < m; ++i)
        ret[i].clear(), rems[i] = val;
    for (int i = 0; i < 3; ++i)
        cpy[i] = cnt[i];
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (i < int(ret[j].size()))
                continue;
            if (!rems[j]) {
                if (!cpy[0])
                    return 0;
                else
                    ret[j].push_back(0), --cpy[0];
            } else if (cpy[2])
                ret[j].push_back(3), --cpy[2], --rems[j];
            else if (cpy[1]) {
                ret[j].push_back(1), --cpy[1], --rems[j];
                if (cpy[1] && int(ret[j].size()) + 1 <= n)
                    ret[j].push_back(2), --cpy[1];
            } else
                ret[j].push_back(0), --cpy[0];
        }
    }
    return 1;
}

int bs(int st = 0, int ed = 1e9) {
    while (st < ed) {
        int md = (st + ed) / 2;
        if (!valid(md))
            st = md + 1;
        else
            ed = md;
    }
    return st;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    fastInOut();
    string s;
    cin >> n >> m;
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j) {
            cin >> s;
            cnt[0] += (s == "00"), cnt[1] += (s == "01");
            cnt[1] += (s == "10"), cnt[2] += (s == "11");
        }
    valid(bs());
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j)
            cout << loc[ret[j][i]] << " \n"[j == m - 1];
    return 0;
}

void fastInOut() {
    ios_base::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);
}
