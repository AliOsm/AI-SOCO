#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<unordered_map>
using namespace std;
#define MAX 1002
char a[MAX];
char b[MAX];
int k;
#define MOD 1000000007
long long int dp[MAX*100][2];
string aa;
string bb;
int main(){
    scanf("%s", a);
    scanf("%s", b);
    scanf("%d", &k);
    aa = a;
    bb = b;
    long long int countt = 0;
    for (int i = 0; i < aa.size(); i++){
        if (aa == bb){
            countt++;
        }
        aa.push_back(aa.front());
        aa.erase(0, 1);
    }
    aa = a;
    dp[0][(aa==bb)] = 1LL;
    for (int i = 0; i < k; i++){
        for (int j = 0; j < 2; j++){
            if (dp[i][j]){
                for (int k = 0; k < 2; k++){
                    if (k == 0){
                        dp[i + 1][k] += dp[i][j] * (long long int)(aa.size() - countt-(long long int)(j==0));
                    }
                    else{
                        dp[i + 1][k] += dp[i][j] * (long long int)(countt - (long long int)(j==1));
                    }
                    if (dp[i + 1][k] >= MOD){
                        dp[i + 1][k] %= MOD;
                    }
                }
            }
        }
    }
    long long int ans = dp[k][1];
    printf("%I64d\n", ans);
    return 0;
}