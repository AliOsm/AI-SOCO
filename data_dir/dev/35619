#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define sync ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define endl '\n'
#define N 200005
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
lld n,a[N],log_base_2[N];
#define LOGN 20
struct SparseTable{
  lld n,m1[N][LOGN],m2[N][LOGN];
  void pre()
  {
    rep(i,2,N) log_base_2[i]=log_base_2[i>>1]+1;
    rep(i,0,n) m1[i][0]=i,m2[i][0]=i;
    for(lld j=1;(1<<j)<=n;j++) for(lld i=0;i+(1<<j)-1<n;i++) {
  
      if(a[m1[i][j-1]] < a[m1[i+(1<<(j-1))][j-1]]) m1[i][j] = m1[i][j-1];
      else m1[i][j] = m1[i+(1<<(j-1))][j-1];

      if(a[m2[i][j-1]] > a[m2[i+(1<<(j-1))][j-1]]) m2[i][j] = m2[i][j-1];
      else m2[i][j] = m2[i+(1<<(j-1))][j-1];
    }
  }
  lld getmin(lld l,lld r)
  {
    lld tmp=log_base_2[r-l+1];
    if(a[m1[l][tmp]] < a[m1[r-(1<<tmp)+1][tmp]]) return m1[l][tmp];
    else return m1[r-(1<<tmp)+1][tmp];
  }
  lld getmax(lld l,lld r)
  {
    lld tmp=log_base_2[r-l+1];
    if(a[m2[l][tmp]] > a[m2[r-(1<<tmp)+1][tmp]]) return m2[l][tmp];
    else return m2[r-(1<<tmp)+1][tmp];
  }
} st;
//Set st.n=n;
int main()
{
  sync;
  lld n,m,l,r,x;
  cin>>n>>m;
  rep(i,0,n) cin>>a[i];
  st.n=n,st.pre();
  while(m--) {
    cin>>l>>r>>x;
    --l,--r;
    lld minm_idx = st.getmin(l,r); 
    lld maxm_idx = st.getmax(l,r);

    if(a[minm_idx] == a[maxm_idx]) {
      if(a[minm_idx] != x) cout<<minm_idx+1<<endl;
      else cout<<-1<<endl;
    }
    else {
      if(a[minm_idx] == x) cout<<maxm_idx+1<<endl;
      else cout<<minm_idx+1<<endl;
    }
  }
  return 0;
}