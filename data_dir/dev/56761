#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 5e5 + 11, mod = 1e9 + 7;
const int MAX = 2e7;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-9;
const double PI = acos(-1.0);

#define int ll

int t;
inline pair<ll,ll> cnt(int x1, int y1, int x2, int y2) {
    if (x1 % 2 == y1 % 2) {
        ll al = (x2 - x1 + 1) * 1ll * (y2 - y1 + 1);
        return mp(al / 2ll + 0ll + al % 2, al / 2ll);
    } else {
        ll al = (x2 - x1 + 1) * 1ll * (y2 - y1 + 1);
        return mp(al / 2ll, al / 2ll + 0ll + al % 2);
    }
}
main() {
    file("lca");
    ios;
    cin >> t;
    while (t--) {
        ll n, m, x1, y1, x2, y2, x3, y3, x4, y4;
        cin >> n >> m >> x1 >> y1 >> x2 >> y2 >> x3 >> y3 >> x4 >> y4;
        ll white = (n * 1ll * m) / 2ll + 0ll + (n * 1ll * m) % 2;
        ll black = (n * 1ll * m) / 2ll;
        ll val = cnt(x3, y3, x4, y4).F;
        if (val >= 0) {
            black += val;
            white -= val;
        }
        val = cnt(x1, y1, x2, y2).S;
        if (val >= 0) {
            white += val;
            black -= val;
        }
        ll X1 = max(x1, x3);
        ll Y1 = max(y1, y3);
        ll X2 = min(x2, x4);
        ll Y2 = min(y2, y4);
        val = cnt(X1, Y1, X2, Y2).S;
        if (val >= 0 && X1 <= X2 && Y1 <= Y2) {
            white -= val;
            black += val;
        }
        cout << white << " " << black << "\n";
    }
    return 0;
}
/**

*/
