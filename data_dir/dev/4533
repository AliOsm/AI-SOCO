#include <bits/stdc++.h>
using namespace std;

const int inf = 1e9+7;

struct Task {
	int n, m, k;
	vector<vector<int>> g;
	vector<int> was;
	vector<int> result;

	Task(int n, int m, int k): n(n), m(m), k(k), was(n), g(n) {
		for (int i = 0; i < m; ++i) {
			int x, y;
			cin >> x >> y;
			--x; --y;
			g[x].push_back(y);
			g[y].push_back(x);
		}
	}

	void dfs(int v) {
		was[v] = 1;
		result.push_back(v+1);
		for (auto& to : g[v]) {
			if (was[to]) {
				continue;
			}
			dfs(to);
			result.push_back(v+1);
		}
	}

	void run() {
		dfs(0);
		int x = (2*n + k - 1) / k;
		int pos = 0;
		vector<int> now;
		for (int i = 0; i < k; ++i) {
			now.clear();
			int cnt = x;
			while (cnt > 0 && pos < (int)result.size()) {
				now.push_back(result[pos]);
				--cnt;
				++pos;
			}
			if (now.empty()) {
				now.push_back(1);
			}
			cout << (int)now.size() << ' ';
			for (auto& item : now) {
				cout << item << ' ';
			}
			cout << '\n';
		}	
	}
};

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);

	int t = 1;
	while (t--) {
		int n, m, k;
		cin >> n >> m >> k;
		Task a(n, m, k);
		a.run();
	}
	return 0;
}