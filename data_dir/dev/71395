#include <bits/stdc++.h>
#include <vector>
#define pb push_back
#define sc second
#define fr first
#define mk make_pair
#define ii pair<intt,intt>
typedef long long intt;
using namespace std;
vector <ii> op[100004];
intt visit[100004];
int vis[100004];
priority_queue <ii,vector <ii> ,greater <ii> > o;
void mem()
{
    int i;
    for(i=0;i<=100000;i++)
        visit[i]=1e18;
}
vector <intt> c[100004];
int bs(int node,intt g)
{
    int i;
    int st=0,en=c[node].size()-1;
    int idx=-1;
    while(st<=en)
    {
        int mid=(st+en)/2;
        if(c[node][mid]==g)
        {
            idx=mid;
            break;
        }
        else if(c[node][mid]<g)
        {
            st=mid+1;
        }
        else if(c[node][mid]>g)
        {
            en=mid-1;
        }
    }
    if(idx==-1)
        return g;

    for(i=idx;i<c[node].size();i++)
    {
        if(c[node][i]!=g)
           return g;
           g++;
    }
}
int main()
{
   int n,m;
   scanf("%d%d",&n,&m);
   int i;
   mem();
   visit[1]=0;
   for(i=0;i<m;i++)
   {
       int x,y,z;
       scanf("%d%d%d",&x,&y,&z);
       op[x].pb(mk(y,z));
       op[y].pb(mk(x,z));
   }
   for(i=1;i<=n;i++)
   {
       int ki;
       scanf("%d",&ki);
       for(int j=0;j<ki;j++)
       {
           int x;
           cin>>x;
           c[i].pb(x);
       }
       c[i].pb(1e17);
   }

    visit[1]=bs(1,0);
    o.push(mk(0,1));
   while(!o.empty())
   {
      ii f=o.top();
      o.pop();
      int nde=f.sc;
      if(vis[nde])
        continue;
      vis[nde]=1;
      intt cl=f.fr;
      if(nde==n)
        {
            cout<<visit[n];
            return 0;
        }
        visit[nde]=bs(nde,cl);
        for(i=0;i<op[nde].size();i++)
        {
            int to=op[nde][i].fr;
            intt z=op[nde][i].sc;
            if(visit[nde]+z<=visit[to])
            {
                visit[to]=visit[nde]+z;
                o.push({visit[to],to});
            }
        }


   }
 cout<<"-1";


    return 0;
}