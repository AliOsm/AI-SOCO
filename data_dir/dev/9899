# include <bits/stdc++.h>
//# pragma GCC optimize("Ofast")
# define FILE
# define fi first
# define se second
using namespace std;
 
 
int main(){
    # ifdef FILEs
        freopen( "input.txt", "r", stdin );
        freopen( "output.txt", "w", stdout );
    # endif
    ios_base::sync_with_stdio(false);

    int t;
    cin >> t;
    while( t -- ){
  		int n, d, cnt = 0;
  		cin >> n >> d;
  		for( int i = 1; i < 30; i ++ ){
  			if( n > (1<<i)-1 ){
  				cnt += min((1<<i), n - (1<<i)+1 ) * i;
  			}
  		}
  		if( cnt <= d && d <= (n-1)*n/2 ){
  			int parent[n+1] = {}, depth[n+1] = {}, child[n+1] = {};
  			for( int i = 2; i <= n; i ++ ){
  				parent[i] = i-1;
  				depth[i] = i-1;
  				child[i-1] = 1;
  			}
  			int qnt = (n-1)*n/2;
  			while( qnt > d ){
  				int v = 1;
  				for( int i = 1; i <= n; i ++ ){
  					if( depth[i] > depth[v] )v = i;
  				}
  				int to = v;
  				for( int i = 1; i <= n; i ++ ){
  					if( depth[to] > depth[i] && child[i] < 2 && qnt - (depth[v]-depth[i]-1) >= d ){
  						to = i;
  					}
  				}
  				qnt -= depth[v] - depth[to] - 1;
  				child[parent[v]]--;
  				child[to] ++;
  				parent[v] = to;
  				depth[v] = depth[to] + 1;
   			}
   			cout << "YES" << endl;
   			for( int i = 2; i <= n; i ++ ){
   				cout << parent[i] << ' ';
   			}cout << endl;
  		}
  		else{
  			cout << "NO" << endl;
  		}

  	}

    cerr << "\nTime elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s.\n";
}
 