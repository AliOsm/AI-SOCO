#include <bits/stdc++.h>
#define LL long long
#define pb push_back
#define mp make_pair
#define fi first
#define sc second
using namespace std;

int n,memo[110][55][2][2];
string s;
bool vis[110][55][2][2];

int solve(int pos, int changed, int dir, int move){
	if(vis[pos][changed][dir][move]) return memo[pos][changed][dir][move];
	if(pos==s.size()){
		if(changed%2==0){
			return 0;
		}
		else{
			if(move) return -1e9;
			else return 1e9;
		}
	}
	int ret, ret2, ret3;
	if(move) ret = -1e9;
	else ret = 1e9;
	if(s[pos]=='F'){
		if(changed) ret = solve(pos+1, changed-1, !dir, move);
		ret2 = solve(pos+1, changed, dir, move);
		if(dir!=move){
			if(move) ret2--;
			else ret2++;
		}
		else{
			if(move) ret2++;
			else ret2--;
		}
	}
	else{
		if(changed){
			ret = solve(pos+1, changed-1, dir, move);
			if(dir!=move){
				if(move) ret--;
				else ret++;
			}
			else{
				if(move) ret++;
				else ret--;
			}
		}
		ret2 = solve(pos+1, changed, !dir, move);
	}
	vis[pos][changed][dir][move] = 1;
	if(move) return memo[pos][changed][dir][move] = max(ret, ret2);
	else return memo[pos][changed][dir][move] = min(ret, ret2);
}

int main() {
	cin>>s>>n;
	int ans,ans2;
	memset(vis,0,sizeof(vis));
	ans = solve(0, n, 1, 1);
	memset(vis,0,sizeof(vis));
	ans2 = solve(0, n, 1, 0);
	cout<<max(abs(ans), abs(ans2))<<endl;
	return 0;
}