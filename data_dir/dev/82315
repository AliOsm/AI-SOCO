#include <bits/stdc++.h>
using namespace std;
#define all(v) ((v).begin()),((v).end())
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
double const EPS = 1e-12, PI = acos(-1);
const int N = 3e5 + 9, M = 1e7 + 9, OO = 1e9 + 7, MOD = 1e9 + 7, MOD2 = 998244353;
const ll INF = 2e18;

vector<int> v[26];
bool vis[26];

int main() {
	fastIO;
#ifdef LOCAL
//	freopen("input.in", "rt", stdin);
#endif
	int t;
	cin >> t;
	while(t--) {
		string s, t;
		cin >> s >> t;
		for (int i = 0; i < 26; ++i)
			v[i].clear(), vis[i] = 0;
		for (int i = 0; i < s.size(); ++i) {
			v[s[i] - 'a'].push_back(i);
			vis[s[i] - 'a'] = 1;
		}
		bool can = 1;
		for (int i = 0; i < t.size(); ++i)
			if(!vis[t[i] - 'a']) can = 0;
		if(!can) {
			cout << -1 << '\n';
			continue;
		}
		int steps = 1, cur = -1;
		for (int i = 0; i < t.size(); ++i) {
			int word = t[i] - 'a';
			if(upper_bound(v[word].begin(), v[word].end(), cur) == v[word].end()) {
				cur = v[word][0];
				++steps;
				continue;
			}
			int it = upper_bound(v[word].begin(), v[word].end(), cur) - v[word].begin();
			cur = v[word][it];
		}
		cout << steps << '\n';
	}
	return 0;
}
