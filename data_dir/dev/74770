#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define ll          long long
#define pb          push_back
#define    endl        '\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1e18
#define rep(i,a,b)    for(ll int i=a;i<b;i++)
#define repr(i,a,b) for(ll int i=a;i>b;i--) 
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define MAXN        200005
#define ordered_set tree<ll int, null_type,less<ll int>, rb_tree_tag,tree_order_statistics_node_update> 
vector <ll int> ele[101];
int main()
{
    ll int n,m;
    cin >> n >> m;
    rep(i,1,m+1)
    {
        rep(j,1,n+1)
        {
            ll int v;
            cin >> v;
            ele[j].push_back(v);
        }
    }
    ll int min1=hell;
    vector <ll int> ans;
    rep(i,1,n)
    {
        vector <pair<ll int,ll int>> ans1;
        ll int diff=0;
        rep(j,0,m)
        {
            ans1.push_back({ele[i][j]-ele[n][j],j});
            diff=diff+ele[i][j]-ele[n][j];
        }
        sort(ans1.begin(),ans1.end());
        vector <ll int> sol;
        ll int j=0;
        while(diff<0)
        {
            diff=diff-ans1[j].first;
            sol.push_back(ans1[j].second);
            j=j+1;
        }
        if (min1>j)
        {
            min1=j;
            ans.clear();
            for(auto it: sol)
            {
                ans.push_back(it);
            }
        }
    }
    cout << min1 << endl;
    for (auto v: ans)
    {
        cout << v+1 << " ";
    }
    cout << endl;
}