/**
*
* Author: Mouhanad
* Lang: GNU C++14
*
**/
#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >
typedef long long ll;
const int inf = 1<<30;
const int N =10000010;
int n , q ;
int frq[N];
ll sum[N];
ll _sieve_size;
bitset<10000010> bs;
vector<int> primes;
void sieve(ll upperbound) {
    // create list of primes in [0..upperbound]
    _sieve_size = upperbound + 1;
    bs.set();bs[0] = bs[1] = 0;
    for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) {
        for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;
        primes.push_back((int)i);
    }
}
void calc ( int x ) {
int ret = 0 ;
for ( int i = x ; i <= 10000000 ; i += x )
    ret += frq[i] ;

sum[x] += ret ;
return ;
}
int main ( ){
  sieve(10000000);
 scanf("%d",&n);
  int c ;
  for ( int i = 0 ; i < n ; i++ ) {
     scanf("%d",&c);
     frq[c]++;
  }
  for ( auto x : primes)
  calc(x);
  for ( int i = 1 ; i <= 10000000 ; i++ )
    sum[i] += sum[i-1];

  ll l , r ;
  scanf("%d",&q);
  while (q-- ){
    scanf("%lld%lld",&l ,&r);
    r = min ( r , 10000000LL);
    l = min ( l , 10000000LL);
    printf("%lld\n",sum[r]-sum[l-1]);
  }
return 0 ;
}
