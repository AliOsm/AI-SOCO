#include <bits/stdc++.h>
#define int long long
using namespace std;

const int MN = 1e2 + 7;
const int MD = 1e9 + 7;

int a[10], dp[10][10][MN], fact[MN];
bool vis[10][10][MN];

void init()
{
	fact[0] = 1;
	for (int i = 1; i < MN; ++i)
		fact[i] = (fact[i - 1] * i) % MD;
}

int wop(int x, int y)
{
	if (y == 0) return 1;
	int res = wop(x, y >> 1);
	return res * res % MD * (y & 1 ? x : 1) % MD;
}

int inv(int x)
{
	return wop(x, MD - 2);
}

int comb(int n, int k)
{
	if (n < 0 || n < k || k < 0)
		return 0;
	return fact[n] * inv(fact[n - k]) % MD * inv(fact[k]) % MD;
}

int solve(int n, int r, int d = 9)
{
	if (vis[d][r][n])
		return dp[d][r][n];
	if (d == 0)
	{
		if (a[0] - (r == 0) <= n)
			dp[0][r][n] = 1;
		else
			dp[0][r][n] = 0;
	}
	else
	{
		dp[d][r][n] = 0;
		for (int i = max(a[d] - (d == r), 0ll); i <= n; ++i)
			dp[d][r][n] = (dp[d][r][n] + comb(n, i) * solve(n - i, r, d - 1) % MD) % MD;
	}
	vis[d][r][n] = true;
	return dp[d][r][n];
}

int32_t main()
{
//	freopen("input.txt", "r", stdin);
	init();
	int n;
	cin >> n;
	for (int i = 0; i < 10; ++i)
		cin >> a[i];
	int ans = 0;
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j < 10; ++j)
			ans = (ans + solve(i - 1, j)) % MD;
	cout << ans << "\n";
}
