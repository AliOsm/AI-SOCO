#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn=4e5+7;
const int inf=INT_MAX;
const ll inff=1e18;
const ll mod=1e9+7;
#define pii pair<int,int>
#define mkp make_pair
#define F first
#define S second
#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
//#define int ll

#ifdef HNO2
#define IOS
#else
#define endl '\n'
#define IOS ios::sync_with_stdio(0); cin.tie(0);
#endif // HNO2

int w[maxn];
int p[maxn][21],rp[maxn][21];
ll maxx[maxn][21],sum[maxn][21];

int32_t main()
{
    IOS
    int q;
    int cnt=1;
    ll last=0;

    for (int i=0;i<=20;i++) p[1][i]=rp[1][i]=-1;
    maxx[1][0]=sum[1][0]=0;
    for (int i=1;i<=20;i++) maxx[1][i]=sum[1][i]=inff;

    cin>>q;
    while (q--)
    {
        int type;
        ll x,y;
        cin>>type>>x>>y;
        x^=last,y^=last;
        if (type==1)
        {
            cnt++;
            w[cnt]=y;
            p[cnt][0]=x;
            for (int i=1;i<=20;i++)
            {
                if (p[cnt][i-1]==-1) p[cnt][i]=-1;
                else p[cnt][i]=p[p[cnt][i-1]][i-1];
            }
            maxx[cnt][0]=y;
            for (int i=1;i<=20;i++)
            {
                if (p[cnt][i-1]==-1) maxx[cnt][i]=inff;
                else maxx[cnt][i]=max(maxx[cnt][i-1],maxx[p[cnt][i-1]][i-1]);
            }

            if (w[x]>=y) rp[cnt][0]=x;
            else
            {
                int tmp=x;
                for (int i=20;i>=0;i--)
                {
                    if (tmp!=-1&&maxx[tmp][i]<y)
                        tmp=p[tmp][i];
                }
                rp[cnt][0]=tmp;
            }

            for (int i=1;i<=20;i++)
            {
                if (rp[cnt][i-1]==-1) rp[cnt][i]=-1;
                else rp[cnt][i]=rp[rp[cnt][i-1]][i-1];
            }

            sum[cnt][0]=y;
            for (int i=1;i<=20;i++)
            {
                if (rp[cnt][i-1]==-1) sum[cnt][i]=inff;
                else sum[cnt][i]=min(inff,sum[cnt][i-1]+sum[rp[cnt][i-1]][i-1]);
            }
        }
        else
        {
            int ans=0;
            if (w[x]>y)
            {
                cout<<0<<endl;
                last=0;
                continue;
            }
            ll now_sum=0;
            for (int i=20;i>=0;i--)
            {
                if (x!=-1&&now_sum+sum[x][i]<=y)
                {
                    now_sum+=sum[x][i];
                    x=rp[x][i];
                    ans+=(1<<i);
                }
            }
            last=ans;
            cout<<ans<<endl;
        }
    }
}

