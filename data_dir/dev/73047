#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
#define pii pair<int, int>
#define endl '\n'
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int, int>
#define vpii vector<pii>
#define vvpii vector<vpii>
typedef long long ll;
typedef long double ld;
using namespace std;
template<class T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> void setmax(T& a, T b) { a = max(a, b); };
template<typename T> void setmin(T& a, T b) { a = min(a, b); };
template<typename T> bool in(T v, T lo, T hi) { return lo <= v && v <= hi; };

int n;
string s;

int value(char c) {
  return c == '<' ? 1 : -1;
}

void solve() {
  cin >> n;
  cin >> s;
  vi mn(n), mx(n);

  vpii groups = {{0, 0}};
  for (int i = 0; i < n - 1; i++) {
    if (groups.back().f != value(s[i])) {
      groups.pb({value(s[i]), 1});
    } else {
      groups.back().s++;
    }
  }
  groups = vpii(groups.begin() + 1, groups.end());

  {
    int ptr = n;
    for (int i = 0; i < n - 1; i++) {
      if (s[i] == '>') {
        mn[i] = ptr--;
      }
    }
    mn[n - 1] = ptr--;
    ptr = 1;
    for (int i = n - 2; i >= 0;) {
      if (s[i] == '>') {
        --i;
        continue;
      }
      int j = i;
      while (j - 1 >= 0 && s[j - 1] == '<')
        --j;

      for (int u = j; u <= i; u++) {
        mn[u] = ptr++;
      }

      i = j - 1;
    }
  }

  {
    int ptr = 1;
    for (int i = 0; i < n - 1; i++) {
      if (s[i] == '<') {
        mx[i] = ptr++;
      }
    }
    mx[n - 1] = ptr++;
    ptr = n;
    for (int i = n - 2; i >= 0;) {
      if (s[i] == '<') {
        --i;
        continue;
      }
      int j = i;
      while (j - 1 >= 0 && s[j - 1] == '>')
        --j;
      for (int u = j; u <= i; u++) {
        mx[u] = ptr--;
      }
      i = j - 1;
    }
  }


  for (int x : mn) {
    cout << x << " ";
  }
  cout << endl;
  for (int x : mx) {
    cout << x << " ";
  }
  cout << endl;
} 

int main() {
  ios::sync_with_stdio(0);
  cin.tie(0); cout.tie(0);

  int t;
  cin >> t;
  while (t--) {
    solve();
  }  

  return 0;
}