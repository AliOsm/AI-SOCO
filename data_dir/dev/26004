#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define int ll
#define endl '\n';
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define floop(i,a,b) for(int i=a;i<=b;++i)
const ll mod=1e18+7;
const int maxn=2e5+5;
int dp[110][60010];
int solve(){
	for (int i = 0; i < 110; ++i)
	{
		for (int j = 0; j < 60010; ++j)
		{
			dp[i][j]=-mod;
		}
	}
	int n,r;
	cin>>n>>r;
	int ans=0;
	vector<pair<int,int> >pos;
	vector<pair<int,pair<int,int> > >neg;
	for (int i = 0; i < n; ++i)
	{
		int x,y;
		cin>>x>>y;
		if(y>=0){
			pos.emplace_back(x,y);
		}
		else neg.push_back({-y-x,{x,y}});
	}
	sort(pos.begin(), pos.end());
	sort(neg.begin(), neg.end());
	for(auto it:pos){
		if(it.first>r) break;
		ans++;
		r+=it.second;
	}
	// cout<<ans<<" hello "<<r<<endl;
	dp[0][r]=ans;
	int tot=neg.size();
	for (int i = 0; i < tot; ++i)
	{
		int curreq=neg[i].second.first;
		// cout<<neg[i].second.first<<" "<<neg[i].second.second<<endl;
		floop(j,0,60010-1){
			if(j>=curreq and j+neg[i].second.second>=0) {
				dp[i+1][j+neg[i].second.second]=max(dp[i+1][j+neg[i].second.second], dp[i][j]+1);
				// if(dp[i][j]>=0) cout<<i<<" "<<j<<" "<<dp[i][j]+1<<endl;
			}
			dp[i+1][j]=max(dp[i+1][j],dp[i][j]);
		}
	}
	// cout<<ans<<endl;
	for (int i = 0; i < 60010; ++i)
	{
		ans=max(ans,dp[tot][i]);
	}
	// cout<<ans<<endl;
	return ans;
}
int32_t main(){
	IOS;	
	cout<<solve()<<endl;
	return 0;
}