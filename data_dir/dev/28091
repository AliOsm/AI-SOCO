#include<bits/stdc++.h>
using namespace std;
#define rep(i,a,b)          for(i=a;i<b;i++)
#define repr(i,a,b)         for(i=a;i>=b;i--)

#define LL                  long long
#define ull                 unsigned long long int
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)
#define scs(n)              scanf("%s", n)
#define pfi(n)              printf("%d\n",n)
#define pfl(n)              printf("%I64d ",n)
#define pfs(s)              printf("%s\n",s)
#define bug1		        printf("bug1")
#define	bug2			    printf("bug2")
#define	bug3		        printf("bug3")

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define ff                  first
#define ss                  second
#define mp                  make_pair
#define pp                  pair<int,int>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)

#define N 2000000


int main()
{
    LL n;
    scl(n);

    LL half=n/2+n%2;

    LL lo=1;
    LL hi=half;

    LL res=half;

    while(lo<=hi)
    {
        LL mid=(lo+hi)/2;


        LL sum=0;

        LL total=n;

        int flag=0;

        while(total)
        {
            if(total>=mid)
            {
                sum+=mid;
                total=total-mid;
            }
            else
            {
                sum+=total;
                total=0;
            }
            if(sum>=half)
            {
                flag=1;
                break;
            }
            LL ten_per=total/10;

            total=total-ten_per;

        }

        //cout<<"for"<<mid<<" "<<sum<<" "<<flag<<endl;
        if(flag==1)
        {
            res=min(res,mid);
            hi=mid-1;
        }
        else
        {
            lo=mid+1;
        }


    }
    cout<<res<<endl;




    return 0;
}

/* int dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* int dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* int dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* int dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
