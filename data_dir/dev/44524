#include <bits/stdc++.h>
using namespace std;

long double calc(int x1,int y1,int x2,int y2){
	long double z= 1;
	long double dis= (y2 - y1) * z * (y2 - y1) + (x2 - x1) * z * (x2 - x1);
	dis= sqrt(dis);
	return dis;
}

int n,mx,my;
struct point{

	int x,y,in;
	long double dis;
	point(int a,int b,int c){
		x= a,y= b,in= c;
		dis= calc(x,y,mx,my);
	}
	bool operator <(const point & s) const{
		return dis < s.dis;
	}

};

int main(){

//	freopen("readin.txt","r",stdin);

	cin >> n >> mx >> my;
	vector<point > v;
	for(int i= 1,a,b;i < n;i++){
		scanf("%d%d", &a, &b);
		v.push_back(point(a,b,i + 1));
	}
	sort(v.begin(),v.end());
	int t= 1;
	while(t < n){
		long long z= 1;
		long double m1= (my - v[0].y) * z * (mx - v[t].x);
		long double m2= (my - v[t].y) * z * (mx - v[0].x);
		if(fabs(m1 - m2) > 1e-9){
			cout << v[t].in << " ";
			cout << 1 << " ";
			cout << v[0].in << endl;
			break;
		}
		t++;
	}

	return 0;
}
