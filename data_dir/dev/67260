#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define cont continue
#define re return

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

pair < pair <int, int>, int > ans[12001];

char c[181][181];

int n, m, i, j, z, k, v1, v2, zn;

bool pole[181][181];

    int get(int x, int y, int v1, int v2)
    {
        int ans = -1;

        while (1 <= x && x <= n && 1 <= y && y <= m && c[x][y] == '*') {
            ans++;

            x += v1;

            y += v2;
        }

        re ans;
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m;

    for (i = 1; i <= n; i++)
        for (j = 1; j <= m; j++) cin >> c[i][j];

    for (i = 1; i <= n; i++)
        for (j = 1; j <= m; j++)
            if (c[i][j] == '*') {
                zn = MAXINT;

                for (v1 = -1; v1 <= 1; v1++)
                    for (v2 = -1; v2 <= 1; v2++)
                        if ((v1 != 0) + (v2 != 0) == 1) zn = min(zn, get(i, j, v1, v2));

                if (zn == 0)
                cont;

                k++;

                ans[k] = m_p(m_p(i, j), zn);

                for (z = -zn; z <= zn; z++) pole[i + z][j] = pole[i][j + z] = true;
            }

    for (i = 1; i <= n; i++)
        for (j = 1; j <= m; j++)
            if (c[i][j] == '*' && !pole[i][j]) {
                cout << "-1" << endl;

                re 0;
            }

    cout << k << endl;

    for (i = 1; i <= k; i++) cout << ans[i].fi.fi << " " << ans[i].fi.se << " " << ans[i].se << endl;

    re 0;
}
