#include <bits/stdc++.h>
#include<string>
    
using namespace std;
            
    #define ll long long
    #define do long double
    #define ff first
    #define ss second
    #define pb push_back
    #define mp make_pair
    #define inf LONG_LONG_MAX
	#define ninf LONG_LONG_MIN 
    #define mod 1000000007
    #define FAST ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
const ll N=200010;
void solve()
{
	ll n,m,i,j,k;
	cin>>n;
	ll a[n];
	for(i=0;i<n;i++)
		cin>>a[i];
	map<ll,set<ll> > v;
	vector<ll> vis(n);
	map<ll,ll> fr;
	set<pair<ll,ll> > s;
	for(i=0;i<n;i++)
	{
		v[a[i]].insert(i);
		fr[a[i]]++;
	}
	for(i=0;i<n;i++)
	{
		if(fr[a[i]]>1 && s.find({a[i],fr[a[i]]})==s.end())
			s.insert({a[i],fr[a[i]]});
	}
	set<pair<ll,ll> >::iterator itr;
	set<ll>::iterator itr1;
	while(s.size()>0)
	{	
		itr=s.begin();
		pair<ll,ll> p=*itr;
		s.erase(itr);
		ll x=p.ff;
		itr1=v[x].begin();
		ll i1=*itr1;
		v[x].erase(itr1);
		itr1=v[x].begin();
		ll i2=*itr1;
		v[x].erase(itr1);
		fr[x]-=2;
		vis[i1]=1;
		if(s.find({2*x,fr[2*x]})!=s.end())
		s.erase(s.find({2*x,fr[2*x]}));
		fr[2*x]++;
		a[i2]*=2;
		v[2*x].insert(i2);
		if(v[x].size()>1)
		{   
			s.insert({x,fr[x]});
		}
		if(v[2*x].size()>1)
		{
			s.insert({2*x,fr[2*x]});
		}
	}
	vector<ll> ans(n);
	j=0;
	for(i=0;i<n;i++)
	{
		if(!vis[i])
		{
			ans[j]=a[i];
			j++;

		}
	}
	cout<<j<<"\n";
	for(i=0;i<j;i++)
		cout<<ans[i]<<" ";




	

}

int main()
{
    FAST
    ll n,m,i,j;
    ll q=1;
    //cin>>q;
    while(q--)
    	solve();
   	

}