#include <bits/stdc++.h>

using namespace std;

int dp[501][2];
int n  , m ;
int a[500][500] ;

int solve(int row , int par , int bit)
{
    if(row == n)return par ;
    int &ret = dp[row][par] ;
    if(~ret)
        return ret;

    ret = 0 ;

    for(int col = 0 ; col < m ; col ++)
        ret |= solve(row + 1 , (par + ((a[row][col] & (1 << bit))? 1 : 0)) & 1, bit) ;

    return ret ;
}
void print(int row , int par , int bit)
{
    if(row == n) return  ;

    for(int col = 0 ; col < m ; col ++)
        if(solve(row + 1 , (par + ((a[row][col] & (1 << bit))? 1 : 0)) & 1, bit)) {
            cout << col + 1 << " ";
            print(row + 1 , (par + ((a[row][col] & (1 << bit))? 1 : 0)) & 1, bit) ;
            return;
        }

}
int main()
{
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr) ;
    cin >> n >> m ;
    for(int i = 0 ; i < n ;i++)
        for(int j = 0 ; j < m ; j++)
            cin >> a[i][j] ;

    for(int bit = 0 ; bit < 10 ; bit++)
    {
        memset(dp , -1 , sizeof dp) ;
        if(solve(0 , 0 , bit))
        {
            cout << "TAK\n" ;
            print(0 , 0 , bit) ;
            return 0;
        }
    }

    cout << "NIE" ;

    return 0;

}