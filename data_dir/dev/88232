#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

const int N = 200005;
vector <int> v[N];
int distToOne[N], subTree[N], fromOne[N], cnt = 1;

int dfs(int x)
{
    fromOne[cnt] = x;
    distToOne[x] = cnt++;
    int sz = v[x].size();
    for (int i = 0; i < sz; i++)
    {
        subTree[x] += dfs(v[x][i]);
    }
    return subTree[x] += 1;
}

int main()
{
    int n, q;
    scanf("%d %d", &n, &q);
    for (int i = 1; i < n; i++)
    {
        int p;
        scanf("%d", &p);
        v[p].push_back(i + 1);
    }
    subTree[1] = dfs(1);
    while (q--)
    {
        int u, k;
        scanf("%d %d", &u, &k);
        if (k > subTree[u])
        {
            printf("-1\n");
        }
        else
        {
            printf("%d\n", fromOne[distToOne[u] + k - 1]);
        }
    }
    return 0;
}