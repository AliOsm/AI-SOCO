#include<bits/stdc++.h>
#define ll long long
#define pii pair<ll,ll>
#define piii pair<int,pair<int,int>>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007LL
#define ld long double
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(; c<'0'||c>'9'; c=getchar())if(c=='-')sign=-1;
    for(num=0; c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

vector<int> V[1004],W[1003];
int yes[1003],done[1003],edge[1003][1003];

void dfs(int n,int p)
{
    if(done[n])return;
    done[n]=1;
    W[p].pb(n);

    for(int i=0;i<V[n].size();i++)dfs(V[n][i],p);
}

int main()
{
    int n=getnum(),m=getnum(),k=getnum();

    for(int i=1;i<=k;i++)yes[getnum()]=1;

    for(int i=1;i<=m;i++)
    {
        int x=getnum(),y=getnum();
        V[x].pb(y);
        V[y].pb(x);
        edge[x][y]=1;
        edge[y][x]=1;
    }

    for(int i=1;i<=n;i++)if(yes[i])dfs(i,i);
    int sel=0;

    for(int i=1;i<=n;i++)if(yes[i])if(W[sel].size()<W[i].size())sel=i;

    for(int i=1;i<=n;i++)
    {
        if(!done[i])W[sel].pb(i);
    }

    int ans=0;
    for(int i=1;i<=n;i++)
    {
        if(yes[i])
        {
            for(int j=0;j<W[i].size();j++)
            {
                for(int a=0;a<j;a++)
                {
                    if(!edge[W[i][j]][W[i][a]])ans++;
                }
            }
        }
    }

    cout<<ans;
}
