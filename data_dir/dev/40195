#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <hash_map>
#include <map>
#include <hash_set>
#include <unordered_map>
#include <set>
#include <stack>
#include <algorithm>
#include <sstream>

using namespace std;
typedef long long LL;
#define mems(arr, val) memset(arr, val, sizeof(arr));
#define iterat(A) A.begin(), A.end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define INF 2000000000
#define SIZE 1000009
bool erat[SIZE];


int main()
{
	//freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
	int s, k;
	cin>>s>>k;
	vector<LL> F;
	F.push_back(1);
	bool flag = true;
	for (int i = 0; i < k; ++i)
	{
		F.push_back(1 << i);
		if (F[i + 1] >= s) {flag = false; break;}
	}

	int sum = (1 << (k - 1));
	int cur_ind = k;
	while(true && flag)
	{
		sum -= (F[cur_ind - k]);
		sum += (F[cur_ind]);
		F.push_back(sum);
		cur_ind++;
		if (sum >= s) break;
	}

	vector<int> ans;
	for (int i = F.size() - 1; i >= 0; --i)
	{
		if (F[i] <= s)
		{
			s -= F[i];
			ans.push_back(F[i]);
		}
	}

	if (ans.size() == 1) ans.push_back(0);
	cout<< ans.size()<<endl;
	forn(i, 0, ans.size())
	{
		cout<<ans[i]<<" ";
	}

	return 0;
}