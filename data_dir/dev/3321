#include <iostream>
#include <fstream>
#include <string>
#include <cstring>
#include <stdio.h>
#include <iomanip>
#include <cmath>
#include <vector>
#include<cctype>
#include<algorithm>
#include<set>
#include<stack>
#include<map>
#include<stdlib.h>
#include<ctime>
#include<iterator>
#include <deque>
#include <sstream>
#include<queue>
#include<cstdlib>
#include<bitset> 

#define fn(i,n) for(int (i) = 0;(i) < (n);(i)++)
#define f1n(i,n) for(int (i) = 1;(i) <= (n);(i)++)
#define mk(f,s) make_pair((f),(s))

#define defV(dp,e) memset(dp,e,sizeof dp)

#define ri(n) scanf("%d",&n)
#define rl(n) scanf("%lld",&n)
#define rs(s) scanf("%s",s)

#define PI acos(1.0)

using namespace std;
 
typedef long long ll;
typedef pair<int ,int > pp; 

typedef vector<int  > v1;
typedef vector<ll  > vl;
typedef vector<pp  > vpp;
typedef vector<bool  > vb;
typedef vector<char > vc;
typedef vector<v1 > v2;

typedef map<int ,int > mf;
typedef map<int ,vpp > mv;
typedef map<int ,v1 > ad;

int const siz = 1e9,bound = 1e5,mod = siz+7;
ll const cnt=1e18;
/*
int ww[1001],bb[1001];
v1 adj[1001];
bool vis[1001];
vpp tot;

pp dfs(int cur){
	vis[cur]=1;
	pp ee=mk(bb[cur],ww[cur]);
	fn(i,adj[cur].size()){
		int ne=adj[cur][i];
		if(!vis[ne]){
			pp rr=dfs(ne);
			ee.first+=rr.first;
			ee.second+=rr.second;
		}
	}
	return ee;
}

*/


int aa[bound];
int nxt[101];
int vis[101];
set<int > un;
int occ[1000];
int sh[1000];
int main() {
//	freopen("o.txt","w",stdout);
//	freopen("in.txt","r",stdin);
//	ios::sync_with_stdio(0);
	int n,f=0;
	int mn=1;
	bool tt=false;
	ri(n);
	fn(i,n){
		ri(aa[i]);
		nxt[i+1]=aa[i];
//		if(i+1==aa[i])tt=true;
	}

	
	fn(i,n){
		f++;
		int tmp=nxt[i+1];
		int tr=1;
		if(tmp==i+1)tr=1;
		while(tmp!=i+1){
			if(vis[tmp]==f || tmp==nxt[tmp]){
				tr=-1;
				break;
			}

			vis[tmp]=f;
			tmp=nxt[tmp];
			tr++;
		}
		if(tr==-1){
			mn=-1;
			break;
		}
		if(tr%2==0){
			un.insert(tr/2);
		}else un.insert(tr);
	}

	if(mn==-1)puts("-1");
	else{ 
		for(set<int >::iterator it=un.begin();it!=un.end();it++){
			int cop=*it;
			defV(sh,0);
			for(int i=2;i<cop;i++){
				while(cop%i==0){
					sh[i]++;
					cop/=i;
				}
			}
			if(cop>1)sh[cop]++;
			for(int i=2;i<1000;i++)
				occ[i]=max(occ[i],sh[i]);
		}

		int ans=1;
		fn(i,1000){
			if(occ[i]!=0)
				fn(j,occ[i])ans=ans*i;
		}
		printf("%d\n",ans);
	}
	return 0;
}