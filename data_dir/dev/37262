#include<bits/stdc++.h>
using namespace std;
const int MX = (1<<20);
int arr[1<<20];
int in[MX];
int L[MX] , R[MX];
vector < int > v[MX];
int cnt =0 ,vis[MX];
int done[MX];
void dfs(int x){
    ++cnt;
    vis[x] = 1;
    for(auto nxt : v[x])
        dfs(nxt);
}
int MOD = 1e9 + 7 , n;
int pos[MX];
int main(){
    scanf("%d",&n);
    for(int j =1 ; j <= n ; j++) {
        scanf("%d %d",&L[j],&R[j]);
        in[L[j]] = 1;
        pos[L[j]] = j;
        v[R[j]].push_back(L[j]);
    }
    long long ans = 1;
    for(int j = 1 ; j <= 3 * n  ; j++){
        if(in[j] == 0 && v[j].size()){
            cnt = 0;
            dfs(j);
            ans *= cnt;
            ans %= MOD;
        }
    }
    int timer = 0;
    for(int j = 1 ; j <= n ; j++){
        if(done[j] || vis[L[j]]) continue;
        int cur = j , cycle = -1 , sz = 0 ;
        set < int > shit;
        while(1){
            if(done[cur]){
                if(shit.count(cur))
                    cycle = timer - done[cur] + 1;
                break;
            }
            shit.insert(cur);
            done[cur] = ++timer;
            ++sz;
            cur = pos[R[cur]];
        }
        if(cycle > 1 && sz > 1)
            ans *= 2;
        ans %= MOD;
    }

    cout<<ans<<endl;
}

