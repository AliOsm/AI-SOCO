#include<bits/stdc++.h>
using namespace std;

const int N = 5050;
const int MOD = 998244353;

int sum(int a, int b) {
	a += b;
	if (a < 0)
		a += MOD;
	else if (a >= MOD)
		a -= MOD;
	return a;
}
void _sum(int &a, int b) {
	a = sum(a, b);
}
int mul(int a, int b) {
	return 1LL * a * b % MOD;
}
void _mul(int &a, int b) {
	a = mul(a, b);
}
int power(int a, int b) {
	int res = 1;
	while (b) {
		if (b & 1)
			_mul(res, a);
		_mul(a, a);
		b >>= 1;
	}
	return res;
}
int inv(int x) {
	return power(x, MOD - 2);
}
int dp(int a, int b) {
	if (a > b)
		return 0;
	int A = 1, B = 1;
	for (int i = 0; i < a; i++) {
		_mul(A, b - i);
		_mul(B, i + 1);
	}
	return mul(A, inv(B));
}
int fac(int x) {
	int res = 1;
	while (x)
		_mul(res, x--);
	return res;
}

int n, m, k, ans, DP[N][N];

int main() {
	cin >> n >> m >> k;

	DP[0][0] = 1;
	for (int i = 0; i < N - 1; i++)
		for (int j = 0; j <= min(n, k); j++) {
			_sum(DP[i + 1][j], mul(DP[i][j], j));
			_sum(DP[i + 1][j + 1], mul(DP[i][j], 1));
		}
	
	for (int i = 0; i <= k; i++)
		_sum(ans, mul(mul(dp(i, n), DP[k][i]), mul(fac(i), inv(power(m, i)))));
	cout << ans;
}
