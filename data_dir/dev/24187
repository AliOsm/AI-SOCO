#include <bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("board.in");ofstream out("board.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(77);

int main(){
    ll a; cin>>a;
    vec<ll> m(a);
    set<ll> s;
    ms<ll> mul;
    ll pr = -1, mn=-1, minn=2e18, mnmas=2e18;
    for(int q=0; q<a; q++){
        cin>>m[q];
        mn = max(mn, m[q]);
        mnmas = min(mnmas, m[q]);
        s.insert(m[q]);
    }
    int sz = s.size();
    vec<ll> pref(sz-1);
    int u=0;
    for(ll i : s){
        if(u>0) mul.insert(i-pr-1);
        pr = i;
        u++;
    }
    int k; cin>>k;
    if(s.size()==1){
        for(; k>0; k--){
            ll l,r; cin>>l>>r; cout<<r-l+1<<" ";
        }
        return 0;
    }
    pref[0] = *mul.begin();
    u=0;
    map<ll, pll> mp;
    set<ll> was;
    ll mxinmul = 0;
    for(ll i : mul){
        mxinmul = max(mxinmul, i);
        minn = min(minn, i);
        if(was.count(i)==0) mp[i] = {u, u};
        else mp[i] = {mp[i].F, u};
        if(u>0) pref[u] = pref[u-1]+i;
        was.insert(i);
        u++;
    }
  //  for(ll k  : mul) cout<<k<<" "; cout<<endl;for(ll k : pref) cout<<k<<" "; cout<<endl;
    for(; k>0; k--){
        ll l,r,o=0; cin>>l>>r;
        ll d = r-l+1, mx = mn+d-1, pys=0;
        if(d-1<=minn) pys = pref[sz-2]-(d-1)*(sz-1);
        else if(d-1>=mxinmul) pys=0;
        else{
            auto it1 = mul.lower_bound(d-1);
            ll num = *it1, ps=0;
            if(was.count(d-1)==0) ps = mp[num].F-1;
            else ps = mp[num].S;
            pys = pref[sz-2]-pref[ps]-(d-1)*((sz-2)-(ps));
        }
        cout<<mx-mnmas+1-pys<<" ";
    }
}