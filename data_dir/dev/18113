#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000002;
const ll INFLL = 100000000000000000ll;
const ll MOD = 1000000007;

// ----------------------------------------------------------------------------------------------------------

ll X1, X2, X3;
int A[200005], N;

bool ok(ll d)
{
    int i = 1;

    f(times,1,3)
    {
        ll st = A[i] + d;
        ll to = st + d;
        int next = upper_bound(A+1,A+N+1,to) - A;
        if(times == 1) X1 = st;
        if(times == 2) X2 = st;
        if(times == 3) X3 = st;
        if(next > N) return true;
        i = next;
    }

    return false;
}

int main()
{
    cin >> N;
    f(i,1,N) scanf("%d", &A[i]);
    sort(A+1,A+N+1);
    f(i,1,N) A[i] *= 2;
    ll a = 0, b = 2000000000;
    while(b-a > 1)
    {
        ll p = (a+b) / 2;
        if(ok(p)) b = p;
        else a = p;
    }
    if(ok(a)) cout << setprecision(12) << fixed << (double)a/2 << "\n" << (double)X1/2 << " " << (double)X2/2 << " " << (double)X3/2;
    else if(ok(b)) cout << setprecision(12) << fixed << (double)b/2 << "\n" << (double)X1/2 << " " << (double)X2/2 << " " << (double)X3/2;
}
