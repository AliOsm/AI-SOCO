
#include <cstdio>
#include <iostream>
#include <utility>
#include <algorithm>
#include <vector>
#include <set>

// 10^9 + 7
#define P  1000000007

typedef std::vector<int> vi;

vi  prime_divisors(int n)
{
    vi result;
    result.reserve(10);
    for(int i = 2; i * i <= n; ++i)
    {
        if (n % i == 0)
        {
            result.push_back( i );
            do n /= i; while( n % i == 0 ) ;
        }
    }

    if ( n > 1 ) 
    {
        result.push_back(n);
    }
    
    return result;
}

struct legandr
{
    vi v;
    explicit legandr(const vi & v): v(v)
    {
        
    }
    
    int operator()(int x)const
    { 
        int  const n = v.size();
        int const sh = 1 << n;
        int result = 0;
    
        for(int i = 0; i < sh; ++i)
        {
            int odd = 0;
            int curr = x;
            for( int j = 0; j < n; ++j){
                int p = v[j];
                if ((i >> j) & 1){
                    curr /= p;
                    odd ^=1;
                }
            }
            if (odd)
                result -= curr;
            else
                result += curr;
        }
        
        return result;
    }
};


int solve()
{

    int t; 

    for( std::cin >> t; t > 0; --t)
    {
        int x, p, k;
        std::cin >> x >> p >> k;
       
        legandr lr( prime_divisors(p) );
        
        int xn = lr( x );
        
        int a = x + 1, b = 1 << 29;
        while( a < b )
        {
            int c = ( a + b )>>1;
            
            int cn = lr( c )  - xn;
            if (cn < k)
                a = c + 1;
            else // cn >= k
                b = c;
        }
        
        std::cout << ((a+b)>>1) << '\n';
    }
    return 0;
}
 
int main(int argc, char * argv[] )
{
    
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
   freopen("output.txt", "w", stdout);
#endif 
   ::std::ios::sync_with_stdio(false);
   ::std::cin.tie(0);
   ::std::cout.tie(0);
   
    solve();
    
    return 0;
}
 