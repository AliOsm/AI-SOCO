#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

int q,a , b , c;

const int MX = 200001;

struct node{
	int nxt[2],sz;
	node(){
		sz = 0;
		memset(nxt,-1,sizeof nxt);
	}
};

node k[2000001];

const int BITS = 30;

int cnt = 1;

void insert(int num,int val){
	int cur = 0;
	for(int i = BITS ; i >= 0 ; i--){
		bool xt = (num&(1<<i))>0;
		if(k[cur].nxt[xt] == -1)
			k[cur].nxt[xt] = cnt++;
		k[cur].sz+= val;
		//cout << xt << " " << (1<<i) << endl;
		cur = k[cur].nxt[xt];
	}
	k[cur].sz+= val;
}
int dfs(int u,int got,int bit){
	if(bit == -1)
		return 0;
	int val = 1<<bit;
	bool n = (val&b) > 0;
	bool me =(val&got) > 0;
	int ret = 0;
	if(k[u].nxt[0] != -1){
		if(!n && me){
			ret += k[k[u].nxt[0]].sz;
		}else if((!n && !me) || (n && me))
			ret += dfs(k[u].nxt[0],got,bit-1);
	}
	if(k[u].nxt[1] != -1){
		if(n && me)
			ret += k[k[u].nxt[1]].sz;
		else if((n && !me) || (!n && me))
			ret += dfs(k[u].nxt[1],got,bit-1);
	}
	return ret;
}

int main() {
	//freopen("input.txt", "r", stdin);
	scanf("%d",&q);
	for (int i = 0; i < q; ++i){
		scanf("%d%d",&a,&b);
		if(a == 1){
			insert(b,1);
		}else if(a == 2){
			insert(b,-1);
		}else{
			scanf("%d",&c);
			printf("%d\n",dfs(0,c,BITS) );
		}
	}
	return 0;
}