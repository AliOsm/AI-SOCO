#include<bits/stdc++.h>
#define CLR(a, x)           memset(a, x, sizeof(a))
#define SORT(v)             sort(v.begin(), v.end())
#define REV(v)              reverse(v.begin(), v.end())
#define ll                  long long
#define PI                  acos(-1.0)
#define pb(a)               push_back(a)
#define mp(a, b)            make_pair(a, b)

using namespace std;

int fx[] = {-1, 1, 0, 0, -1, -1, 1, 1};
int fy[] = {0, 0, -1, 1, -1, 1, -1, 1};

int n, cnt, mx=INT_MIN, r=0;
bool vis[210];

map <string, int> m;
vector <int> G[210];

void DFS(int n, int c)
{
    if (vis[n]) return;

    vis[n] = 1;
    cnt++;
    int x = G[n].size();
    for (int i=0; i<x; i++){
        int z = G[n][i];
        if (!vis[z]) DFS(z, cnt);
    }
    mx = max(mx, cnt);
    cnt = c;
}

int main()
{
    cin >> n;
    while(n--)
    {
        string a, b, c;
        cin >> a >> b >> c;
        int x = a.size();
        for (int i=0; i<x; i++)
        {
            if (isupper(a[i])) a[i] = tolower(a[i]);
        }

        x = c.size();
        for (int i=0; i<x; i++)
        {
            if (isupper(c[i])) c[i] = tolower(c[i]);
        }

        if (m[c]==0) m[c] = r++;
        if (m[a]==0) m[a] = r++;

        int u = m[c];
        int v = m[a];

        G[u].pb(v);
    }

    for (int i=0; i<r; i++){
        if (!vis[i]){
            cnt = 0;
            DFS(i, cnt);
            mx = max(mx, cnt);
        }
    }

    cout << mx << endl;
    return 0;
}

