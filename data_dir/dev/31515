#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

vector<vector<int > > g;
int a[100100];
int n, m;

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
	double beg = clock();
#endif

	scanf("%d%d", &n, &m);
	g.resize(n + 1);
	LL res = 0;
	FOR(i, 0, m)
		scanf("%d", &a[i]);
	if (m == 1)
	{
		cout << 0 << endl;
		return 0;
	}
	FOR(i, 0, m - 1)
		res += ABS(a[i + 1] - a[i]);
	LL all = res;
	FOR(i, 0, m)
	{
		if ((i) && (a[i]!=a[i-1]))
			g[a[i]].push_back(a[i - 1]);
		if ((i + 1 != m) && (a[i+1]!=a[i]))
			g[a[i]].push_back(a[i + 1]);
	}
	FOR(i, 0, n + 1)
	{
		LL now = 0;
		LL sum = 0;
		sort(g[i].begin(), g[i].end());
		FOR(j, 0, g[i].size())
		{
			now += ABS(g[i][j] - i);
			sum += g[i][j];
		}
		LL cur = 0;
		FOR(j, 0, g[i].size())
		{
			LL val = j * 1ll * g[i][j] - cur + (sum - cur - g[i][j]) - g[i][j] *  1ll * (g[i].size() - j - 1);
			cur += g[i][j];
			res = MIN(res, all - now + val);
		}
	}
	
	cout << res << endl;

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}