/*
 * app.cpp
 *
 *  Created on: 14.02.2015
 *      Author: Eran
 */

#include <bits/stdc++.h>
#include <ext/rope>

using namespace std;
using namespace __gnu_cxx;

const int maxn = 10;
const int inf = 2147483647;
const int mod = 1000000007;
const long long MAXN = 4000000000;
const long long l_inf = (long long) 4e18;
const long long my_mod = 71838921858412837;
const double pi = 3.141592653589793238463;
const double eps = 1e-10;

int n, ans = 0;
vector<pair<int, int> > coord;
vector<char> used;
vector<vector<int> > g;

void dfs(int v) {
	used[v] = 1;
	for (int i = 0; i < (int) g[v].size(); i++) {
		int to = g[v][i];
		if (used[to] == 0)
			dfs(to);
	}
}

int main() {
	ios::sync_with_stdio(0);
	cin >> n;
	coord = vector<pair<int, int> >(n);
	for (int i = 0; i < n; i++)
		cin >> coord[i].first >> coord[i].second;
	used = vector<char>(n, 0);
	g = vector<vector<int> >(n);
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			if (coord[i].first == coord[j].first
					|| coord[i].second == coord[j].second) {
				g[i].push_back(j);
				g[j].push_back(i);
			}
		}
	}
	for (int i = 0; i < n; i++) {
		if (used[i] == 0) {
			dfs(i);
			ans++;
		}
	}
	cout << ans - 1;
}
