#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;          // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = (int)1e9+7;          // inv2 = 500000004 (mod 1e9+7)
const int N = (int)4e5+7;               // (1 << [17, 18, 20, 21] ) > [1e5, 2e5, 1e6, 2e6]
 
// ------- 变量 ------- //
 
int n, p[N];
 
// ------- 函数 ------- //
 
void Init() {
    scanf("%d", &n);
    rep(i, 1, n+1) scanf("%d", p+i);
}
 
int Solve() {
 
    int tmp = 1;
    rep(i, 2, n+1) if (p[i] != p[i-1]) tmp++;
    if (tmp < 4) return puts("0 0 0");
 
    tmp = 1;
    rep(i, 2, n+1) if (p[i] != p[i-1]) {
        if (tmp < 3) tmp++;
        else {
            if (i - 1 > n / 2) return puts("0 0 0");
            else break;
        }
    }
 
    int pos;
    per(i, 1, n) if (p[i] != p[i+1]) {
        if (i <= n / 2) { pos = i; break; }
    }
 
    int g;
    rep(i, 2, n+1) if (p[i] != p[i-1]) {
        g = i - 1; break;
    }
 
    rep(i, g+1, pos) {
        if (i - g <= g) continue;
        if (pos - i <= g) break;
        if (p[i] != p[i+1]) {
            return printf("%d %d %d\n", g, i - g, pos - i);
        }
    }
 
    return puts("0 0 0");
}
 
// ------- main ------- //
 
int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
 
    //Pre();
    int t; scanf("%d", &t); while (t--) {
    //while (~scanf("", )) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}