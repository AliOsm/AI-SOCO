#include <bits/stdc++.h>

using namespace std;
const int N = 2e5 + 3;

int n, vis[N][10][10], visID, start2;
char s[N];
bool mem[N][10][10];
bool go(int i, int prv1, int prv2) {
	if (prv1 > start2)
		return false;
	if (i == n)
		return true;
	if (vis[i][prv1][prv2] == visID)
		return mem[i][prv1][prv2];
	vis[i][prv1][prv2] = visID;
	bool &ret = mem[i][prv1][prv2];
	ret = false;
	if (s[i] - '0' >= prv1)
		ret |= go(i + 1, s[i] - '0', prv2);
	if (s[i] - '0' >= prv2)
		ret |= go(i + 1, prv1, s[i] - '0');
	return ret;
}
void build(int i, int prv1, int prv2) {
	if (i == n) {
		puts("");
		return;
	}
	if (s[i] - '0' >= prv1 && go(i + 1, s[i] - '0', prv2)) {
		printf("1");
		build(i + 1, s[i] - '0', prv2);
	} else {
		printf("2");
		build(i + 1, prv1, s[i] - '0');
	}
}
int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	int t;
	scanf("%d", &t);
	while (t--) {
		scanf("%d %s", &n, s);
		bool found = false;
		for (start2 = 0; start2 <= 9; ++start2) {
			++visID;
			if (go(0, 0, start2)) {
				build(0, 0, start2);
				found = true;
				break;
			}
		}
		if (!found)
			puts("-");
	}
	return 0;
}