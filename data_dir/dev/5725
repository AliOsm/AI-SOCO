#include <bits/stdc++.h>

using namespace std;

#define DIM 300009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define endl '\n'
#define amen exit(0)
#define fast ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)

long long i,j,k,l,n,m,c,ta,tb;

struct ps{
    long long fi,se,num;
};

vector<ps>a,b;

ps p;

inline bool cmp1(ps a,ps b){
    return a.se>b.se;
}

inline bool cmp2(ps a,ps b){
    return a.fi<b.fi;
}

vector<long long>res1,res2,curr;

int main()
{
    fast;

    cin>>n;
    for(i=1;i<=n;i++){
        cin>>p.fi>>p.se;
        p.num=i;
        if(p.fi<p.se)a.push_back(p);
        else b.push_back(p);
    }

    if(a.size()!=0){
        sort(a.begin(),a.end(),cmp1);
        curr.push_back(a[0].num);
        for(i=1;i<a.size();i++){
            if(a[i].fi<a[i-1].se)curr.push_back(a[i].num);
            else{
                if(curr.size()>res1.size())swap(curr,res1);
                curr.clear();
                curr.push_back(a[i].num);
            }
        }
        if(curr.size()>res1.size())swap(curr,res1);
        curr.clear();
    }

    if(b.size()!=0){
        sort(b.begin(),b.end(),cmp2);
        curr.push_back(b[0].num);
        for(i=1;i<b.size();i++){
            if(b[i].fi>b[i-1].se)curr.push_back(b[i].num);
            else{
                if(curr.size()>res1.size())swap(curr,res1);
                curr.clear();
                curr.push_back(b[i].num);
            }
        }
        if(curr.size()>res1.size())swap(curr,res1);
        curr.clear();
    }

    cout<<max(res1.size(),res2.size())<<endl;

    if(res1.size()>res2.size()){
        for(auto to:res1)cout<<to<<' ';
        cout<<endl;
    }
    else{
        for(auto to:res2)cout<<to<<' ';
        cout<<endl;
    }

    amen;
}
