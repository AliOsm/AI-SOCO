#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PI;
const int mod=1e9+7;
mt19937 ran(time(nullptr));
int mult=max((ll)ran()%mod,1000000LL),mult2=max((ll)ran()%mod,1000010LL);
int c[300010];
char s[300010];
vector<int> g[300010];
set<PI> dic[300010];
inline void merge_set(set<PI>& a,set<PI>& b){
	if(a.size()<b.size()) a.swap(b);
	while(b.size()){
		a.insert(*b.begin());
		b.erase(b.begin());
	}
}
int maxdif=-1,cnt;
void dfs(int u,int fa,int hashVal,int hashVal2){
	hashVal=((ll)hashVal*mult+s[u])%mod;
	hashVal2=((ll)hashVal2*mult2+s[u])%mod;
	dic[u].insert(PI(hashVal,hashVal2));
	for(int v:g[u]){
		if(v==fa) continue;
		dfs(v,u,hashVal,hashVal2);
		merge_set(dic[u],dic[v]);
	}
	if((int)dic[u].size()+c[u]>maxdif){
		maxdif=(int)dic[u].size()+c[u];
		cnt=1;
	}else if((int)dic[u].size()+c[u]==maxdif){
		cnt++;
	}
}
int main(){
	int n,u,v;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",c+i);
	scanf("%s",s+1);
	for(int i=1;i<n;i++){
		scanf("%d%d",&u,&v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	dfs(1,-1,0,0);
	printf("%d\n%d\n",maxdif,cnt);
	return 0;
}