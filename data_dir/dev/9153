//be naame khodaa

#include <bits/stdc++.h>

typedef long long ll;

using namespace std;

multiset <int> s[3];
vector <int> have[200005];
int a[200005];
vector <int> v;

int main()
{
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i], a[i]++;
		have[a[i]].push_back(i+1);
		s[a[i]%3].insert(a[i]);
	}
	if (have[1].size() == 0)
		return (cout << "Impossible" << endl), 0;
	int cur = 0, chap = 0;
	while (chap < n)
	{
		int r = (cur%3+1)%3;
		auto it = s[r].upper_bound(cur+1);
		if (it == s[r].begin())
			return (cout << "Impossible" << endl), 0;
		it--;
		cur = *it;
		s[r].erase(it);
		v.push_back(cur);
		chap++;
	}
	cout << "Possible" << endl;
	for (int i = 0; i < v.size(); i++)
	{
		cout << have[v[i]].back() << ' ';
		have[v[i]].pop_back();
	}
	cout << endl;
    return 0;
}
