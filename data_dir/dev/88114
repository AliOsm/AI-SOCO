#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>
#include <functional>
#include <iterator>

using namespace std;

struct oddeven
{
	int diff;
	oddeven():diff(0) {}
	void operator() (const int &a) {
		a > 0 && (a % 2 == 1 ? diff++ : diff--);
	}
};

int main()
{
	vector<int> v;
	v.assign(++istream_iterator<int>(cin), istream_iterator<int>());
	
	oddeven nums = for_each(v.begin(), v.end(), oddeven());

	if (abs(nums.diff) <= 1)
		*ostream_iterator<int>(cout) = 0;
	else {
		sort(v.begin(),
			 copy_if(v.begin(), v.end(), v.begin(), [nums](const int &a) { return a % 2 == (nums.diff < 0 ? 0 : 1); }));
		*ostream_iterator<int>(cout) = accumulate(v.begin(), v.begin() + abs(nums.diff) - 1, 0);
	}
}
