#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <algorithm>

using namespace std;

int mz[404004];

int main()
{
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    for (int i=1;i*i<=400000;i++)
    {
        for (int j=i*i;j<=400000;j+=i)
        {
            mz[j]=max(mz[j],i);
        }
    }
    map<int,int> m;
    for (int i=0;i<n;i++)
    {
        int x;
        cin >> x;
        ++m[x];
    }

    vector<int> sz;
    vector<int> szk;
    for (auto &p:m)
        sz.push_back(p.second);
    sort(sz.begin(),sz.end());
    vector<int> k(n+1);
    int sum=0;
    long long int mi=1,ma=1;
    for (int i=1;i<=n;i++)
    {
        k[i]=sz.size()-(lower_bound(sz.begin(),sz.end(),i)-sz.begin());
        sum+=k[i];
        szk.push_back(sum);
    }
    for (int a=n;a>=1;a--)
    {
        int x=mz[a],y=a/mz[a];
        int d=upper_bound(szk.begin(),szk.end(),a-1)-szk.begin()+1;
        if (d<=x)
        {
            cout << a << endl;
            cout << x << ' ' << y << endl;
            map<int,int> ak;
            int sum=0;
            for (auto &p:m){
                ak[p.first]=min(p.second,x);
                sum+=ak[p.first];
            }
            int dif=sum-a;
            vector<pair<int,int> > vv;
            for (auto &p:ak)
            {
                if (dif&&p.second==x)
                {
                    --p.second;
                    --dif;
                }
                vv.push_back({p.second,p.first});
            }
            sort(vv.rbegin(),vv.rend());
            vector<vector<int> > ans(x,vector<int>(y,0));
            int i=0,j=0;
            for (auto &p:vv)
            {
                while(p.first--)
                {
                    ans[j][(i+j)%y]=p.second;
                    ++j;
                    if (j==x){
                        j=0;
                        ++i;
                    }
                }
            }
            for (auto &v:ans)
            {
                for (auto x:v)
                    cout << x << ' ';
                cout << endl;
            }

            return 0;
        }
    }
    return 0;
}
/*

1 2 3 4 5 6 7
5 4 4 4 3 3 2

1 2 3 4 5
5 1 2 3 4
4 5 1 2 3
3 4   1 2
        1
*/
