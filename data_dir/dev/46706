//template by murugappan....Copied from chamow :p

#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define ld long double
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define priq(i,comp) priority_queue( i, vector< i >,comp)
template<class t>
t lcm(t a,t b)
{
    return ((a*b)/__gcd(a,b));
}
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

//end of template
ll freq[10];
ll k;
string ip;
ll sum=0;

ll mysearch(ll l,ll r)
{
    if(l==r)
        return l;
    ll mid=(l+r)/2;
    ll val=0,c=0;
    for(ll i=0;i<10;i++)
    {
        if((c+freq[i])<=mid)
        {
            c+=freq[i];
            val=val+(9-i)*freq[i];
        }
        else
        {
            ll rem=(mid-c);
            val=val+(9)*rem;
            break;
        }
    }
    if(val>=sum)
    {
        return mysearch(l,mid);
    }
    else
        return mysearch(mid+1,r);
}

int main()
{
    /*
        assert(freopen("input.txt","r",stdin));
        assert(freopen("output.txt","w",stdout));
    */
    fastread;
    cin>>k;
    cin>>ip;

    for(ll i=0;i<ip.size();i++)
    {
        ll cur=ip[i]-'0';
        sum+=cur;
        freq[cur]++;
    }
    if(sum>=k)
    {
        cout<<0;
        return 0;
    }
    ll ptr=0,used=0;
    while(sum<k)
    {
        ll rem=freq[ptr];
        if(rem==0)
        {
            ptr++;
            continue;
        }
        ll ex=(9-ptr);
        ll req=(k-sum+ex-1)/ex;
        if(req>rem)
        {
            used+=rem;
            sum=sum+rem*ex;
        }
        else
        {
            used+=req;
            sum=sum+req*ex;
            break;
        }
        ptr++;
    }
    cout<<used;
    return 0;
}
