#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <fstream>
#include <cstring>
#include <map>
#include <deque>
#include <set>
#include <string>
#include <iomanip>
#include <vector>
#include <queue>
using namespace std;

#define pii pair<int, int>
#define mkp make_pair
typedef long long int ll;
typedef long double ld;




int main() {
	string a, b, c;
	cin >> a >> b >> c;
	int ma[26], mb[26], mc[26];
	for (int i = 0; i < 26; i++)
		ma[i] = mb[i] = mc[i] = 0;
	for (int i = 0; i < a.size(); i++) {
		ma[(int)(a[i] - 'a')]++;
	}
	for (int i = 0; i < b.size(); i++) {
		mb[(int)(b[i] - 'a')]++;
	}
	for (int i = 0; i < c.size(); i++) {
		mc[(int)(c[i] - 'a')]++;
	}

	int bb = 0, cc = 0;
	for (int kt = 0; kt <= a.size(); kt++) {
		int tma[26];
		for (int i = 0; i < 26; i++)
			tma[i] = ma[i];
		bool can = true;
		for (int i = 0; i < 26; i++) {
			if (tma[i] >= mb[i] * kt) {
				tma[i] -= mb[i] * kt;
			}
			else {
				can = false;
				break;
			}
		}
		if (!can) break;
		int kd = 1000000000;
		for (int i = 0; i < 26; i++) {
			if (mc[i] == 0) continue;
			kd = min(kd, tma[i] / mc[i]);
		}

		if (kd + kt > bb + cc) {
			bb = kt;
			cc = kd;
		}
	}

	for (int k = 0; k < bb; k++) {
		for (int i = 0; i < b.size(); i++) {
			ma[(int)(b[i] - 'a')]--;
			cout << b[i];
		}
	}

	for (int k = 0; k < cc; k++) {
		for (int i = 0; i < c.size(); i++) {
			ma[(int)(c[i] - 'a')]--;
			cout << c[i];
		}
	}

	for (int k = 0; k < 26; k++) {
		for (int i = 0; i < ma[k]; i++) {
			cout << (char)(k + 'a');
		}
	}
}