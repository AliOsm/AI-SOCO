#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for(auto i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end(); ++it)
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
const int INF = ~(1<<31);
#define fs first
#define sc second
#define pb push_back

const double EPS = 1e-9;
const double pi = acos(-1);
typedef unsigned long long ull;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
template <class T> T smod(T a, T b) {
    return (a % b + b) % b;
}

vi A[210];
vi P[210];

void solve() {
    rep(i,0,210) A[i].clear();
    rep(i,0,210) P[i].clear();
    int n;
    cin >> n;
    vi B(n);
    rep(i,0,n) cin >> B[i];
    rep(i,0,n) {
        A[B[i]].pb(i);
    }
    rep(i,0,210) {
        P[i].pb(0);
        rep(j,0,n) {
            int extra = 0;
            if(B[j] == i) extra = 1;
            P[i].push_back(P[i].back() + extra);
        }
    }



    int ans = 0;
    rep(i,1,201) {
        ans = max(ans, P[i][n]);


        int x = A[i].size() / 2;
        rep(j,0,x) {
            int start_pos = A[i][j]+1;
            int end_pos = A[i][A[i].size()-1-j] - 1;
            if(start_pos > end_pos) {
                ans = max(ans, (j+1)*2);
            } else {
                int best_y = 0;
                rep(z,1,201) {
                    int all_sum = P[z][end_pos+1];
                    int pre_sum = P[z][start_pos];
                    best_y = max(best_y, all_sum - pre_sum);
                }
                ans = max(ans, (j+1)*2 + best_y);
            }
        }
    }
    cout << ans << endl;
}

int main() {
    cin.sync_with_stdio(false);
    int t;
    cin >> t;
    rep(i,0,t) solve();

    return 0;
}

