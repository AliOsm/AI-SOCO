#include <bits/stdc++.h>

using namespace std;

int n, x, y;
vector<int> g[300010];
int p[300010];
int tin[300010], tout[300010], dfstimer;
int dp[300010];

void dfs(int v, int par, int d){
    tin[v] = dfstimer++;
    p[v] = par;
    for(auto to: g[v]){
        if(to != par){
            dfs(to, v, d + 1);
            dp[v] += dp[to];
        }
    }
    dp[v]++;
    tout[v] = dfstimer++;
}

bool upper(int a, int b){
    return tin[a] <= tin[b] && tout[b] <= tout[a];
}

main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> x >> y;
    for(int i = 0; i < n - 1; i++){
        int from, to;
        cin >> from >> to;
        g[from].push_back(to);
        g[to].push_back(from);
    }
    dfs(1, 1, 0);
    long long del = 0;
    if(upper(y, x)) swap(x, y);
    if(upper(x, y)){
        int sum = 1;
        for(auto to: g[x]){
            if(!upper(to, y)) sum += dp[to];
        }
        sum += n - dp[x];
        del = 1ll * dp[y] * sum;
    }
    else del = 1ll * dp[x] * dp[y];
    cout << 1ll * n * (n - 1) - del << endl;
}
