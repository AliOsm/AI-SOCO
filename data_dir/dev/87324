#include <cstdlib>
#include <iostream>
#include <map>
#include <stdio.h>
#include <vector>
#include<bits/stdc++.h>
#include <ctype.h>
#include <list>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#define _CRT_SECURE_NO_DEPRECATE
#define INF 1000000000
#define Set(a, s) memset(a, s, sizeof (a))
#define forpos(i,j,k) for (int i=0 ; i<j ; i+=k)
#define forneg(i,j,k) for (int i=j ;i>=0 ;i-=k)
#define upcase(x) transform(x.begin(), x.end(), x.begin(), ::toupper)
#define locase(x) transform(x.begin(), x.end(), x.begin(), ::tolower)
#define PI 3.14159265358979323846
#define pf printf
#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
       ( std::ostringstream() << std::dec << x ) ).str()


using namespace std;

typedef long long ll;
typedef std::pair<int,int> ii;
typedef std::pair<std::string,int> si;
typedef vector<int> vi;
typedef vector<ii> vii;

unsigned power( unsigned val, unsigned _pow=0 ) {
	if ( _pow <= 0 )
		return 1;
	return val * power( val, _pow-1 );
}


//int dx[]={-1,1,0,0,1,1,-1,-1};
//int dy[]={0,0,1,-1,1,-1,1,-1};




int main()
{
    int n ,m,k;cin>>n>>m>>k;
    int arr[m];
    forpos(i,m,1)cin>>arr[i];
    int f;cin>>f;
    int diff=0;
    int diffInt=0;
    forpos(i,m,1){
        diffInt=0;
        int z=0;
        int j=1<<z;
        while(j<=max(arr[i],f))
            {
                if(diffInt>k)break;
                else if((arr[i]&j) !=(f&j))diffInt++;
                j=1<<++z;
            }

            if(diffInt<=k)
            {
                diff++;
            }
    }
    cout<<diff<<endl;
	return 0;
}
