#include<bits/stdc++.h>
#define ll long long
#define x first
#define y second
#define int long long
#define INF (1e9)
using namespace std;
const int MAX = 1e5 + 10;
ll par[MAX] , ans[MAX] , dp[MAX], sz[MAX] , SZ=0;
pair<pair<int,int> ,pair<int,int> > e[MAX]; vector<pair<int , int> > a[MAX];
bool vis1[MAX] , vis2[MAX];

ll root(ll x){if(par[x]<0)return x;return par[x]=root(par[x]);}
void merge(ll x,ll y){x=root(x);y=root(y);par[x]=y; sz[y]+=sz[x];}

void dfs1(int v,int p=0 , int id=0){
    vis1[v]=true;
    SZ+=sz[v];
    for(auto U:a[v]){
        int u=U.first , ID=U.second;
        if(u != p)dfs1(u , v);
    }
}

void dfs2(int v,int p=0,int id=0){
    vis2[v]=true;
    dp[v]=0;
    dp[v]+=sz[v];
    for(auto U:a[v]){
        int u=U.first , ID=U.second;
        if(u != p){dfs2(u,v,ID); dp[v]+=dp[u];}
    }
    ans[id]=(ll)(SZ - dp[v])*(dp[v]);
}

main(){
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin>>n;
    for(int i=0;i<n-1;i++){
        int u,v,w; cin>>u>>v>>w;
        e[i]={{w , i+1} , {u , v}};
    }
    for(int i=1;i<=n;i++){par[i]=-i; sz[i]=1;}
    sort(e , e+n-1);
    int i=0 , j=0 , tmp=0;
    while(i < n-1){
        j = i;
        vector<int> tmp;
        while((e[j].first.first == e[i].first.first) && (j<n-1)){
            int u=e[j].second.first , v=e[j].second.second;
            a[root(v)].push_back({root(u) , e[j].x.y});
            a[root(u)].push_back({root(v) , e[j].x.y});
            tmp.push_back(root(u)); tmp.push_back(root(v));
            j++;
        }
        for(auto c:tmp){
            if(!vis1[c]){
                SZ=0;
                dfs1(c);
                dfs2(c);
            }
        }
        j = i;
        while(e[j].x.x == e[i].x.x && j<(n-1)){
            int u=e[j].y.x , v=e[j].y.y;
            a[root(v)].clear();
            a[root(u)].clear();
            dp[root(v)]=0; dp[root(u)]=0;
            vis1[root(u)]=false; vis1[root(v)]=false;
            vis2[root(u)]=false; vis2[root(v)]=false;
            merge(u , v);
            j++;
        }
        i = j;
    }
    vector<pair<int,int> > t;
    int Max=-1 , cnt=0;
    for(int i=1;i<=n-1;i++){
        t.push_back({ans[i] , i});
        if(ans[i]>Max){
            Max=ans[i]; cnt=1;
        }
        else if(ans[i]==Max)cnt++;
    }
    vector<int> pasha;
    cout<<(ll)Max*2<<" "<<cnt<<'\n';
    for(auto l:t){
        if(l.first == Max)pasha.push_back(l.second);
    }
    sort(pasha.begin() , pasha.end());
    for(auto u:pasha)cout<<u<<" ";
    
}