#include <iostream>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <algorithm>
#include <cmath>
#include <map>
#include <set>
#include <memory.h>

using namespace std;

const int MOD = 1000000007;

string sm;
int n;
string s;
string a[100005], b[100005];
long long dig[15], mult[15];

int main(){
    ios::sync_with_stdio(false);
    cin >> sm;
    cin >> n;
    getline(cin, s);
    for (int i = 0; i < n; ++i) {
        getline(cin, s);
        int pos = -1;
        for (int j = 0; j < s.size(); ++j) {
            if (s[j] == '-') {
                pos = j;
                break;
            }
        }
        for (int j = 0; j < pos; ++j) a[i] = a[i] + s[j];
        for (int j = pos + 2; j < s.size(); ++j) b[i] = b[i] + s[j];
    }
    for (int i = 0; i <= 9; ++i) {
        mult[i] = 10;
        dig[i] = i;
    }
    for (int i = n - 1; i >= 0; --i) {
        int x = a[i][0] - '0';
        long long nmult = 1;
        long long ndig = 0;
        for (int j = 0; j < b[i].size(); ++j) {
            int e = b[i][j] - '0';
            nmult = nmult * mult[e] % MOD;
            ndig = ndig * mult[e] + dig[e];
            ndig %= MOD;
        }
        dig[x] = ndig;
        mult[x] = nmult;
    }
    long long ans = 0;
    for (int i = 0; i < (int)sm.size(); ++i) {
        int e = sm[i] - '0';
        ans = ans * mult[e] + dig[e];
        ans %= MOD;
    }
    cout << ans << endl;
    return 0;
}

