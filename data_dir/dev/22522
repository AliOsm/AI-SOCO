#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ull unsigned long long
#define int long long
#define iter vector<int>::iterator
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=1e6+7;
const int inf=1e18+5;
int mod=1e9+119;

int h[N];
int p[N];

int get(int l,int r)
{
    int f=h[r];
    if (l)f-=h[l-1];
    f+=mod;
    f%=mod;
    f=(f*p[long(1e6)-l])%mod;
    return f;
}

main ()
{
    ios;
    p[0]=1;
    for (int i=1;i<=1e6;++i){
        p[i]=(p[i-1]*311)%mod;
    }
    int n;
    cin>>n;
    string ans="";
    for (int i=1;i<=n;++i){
        string s;
        cin>>s;
        int hh=0;
        int last=-1;
        for (int j=0;j<s.size();++j){
            hh+=(s[j]*p[j])%mod;
            hh%=mod;
            int h1=hh;
            h1=(h1*p[(int)1e6])%mod;
            if (j+1<=ans.size() && get((int)ans.size()-1-j,(int)ans.size()-1)==h1){
                last=j;
            }
        }
        for (int j=last+1;j<s.size();++j){
            ans+=s[j];
            int pos=(int)ans.size()-1;
            int ch=ans[pos];
            h[pos]+=(ch*p[pos])%mod;
            if (pos>0)h[pos]+=h[pos-1];
            h[pos]%=mod;
        }
    }
    cout<<ans<<endl;
}
