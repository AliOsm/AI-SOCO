#include<bits/stdc++.h>
#define REP(i,j,k) for(int i=j;i<k;++i)
#define RREP(i,j,k) for(int i=(int)j-1;i>=k;--i)
#define int long long
#define pb emplace_back
#define P pair<int,int>
#define F first
#define S second
#define ALL(x) x.begin(),x.end()
#define sz(a) (int)(a).size()
#define MX 1005
#define oo 1e18
#define L d*2
#define R (d*2+1)
#define mid (l+r>>1)
#define Ls l,mid,d*2
#define Rs mid+1,r,d*2+1
#define MIN(x,y) (x=min(x,(y)))
#define MAX(x,y) (x=max(x,(y)))
#define mo (int)(1e9+7)
#define IOS cin.tie(0) ,cout.tie(0), cout.sync_with_stdio(0)
using namespace std;
int n,x[MX][MX],y[MX][MX],a,b,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1},ok,no[MX][MX];
char ans[MX][MX],c[4]={'U','R','D','L'};
queue<P> q;
main(){
	IOS;
	cin>>n;
	REP(i,1,n+1) REP(j,1,n+1){
		cin>>x[i][j]>>y[i][j]; 
		if(x[i][j]==i && y[i][j]==j) ans[i][j] = 'X', q.push(P(i,j)), no[i][j] = 1;
		else ans[i][j] = '.';
	}
	while(sz(q)){
		a = q.front().F, b = q.front().S; q.pop();
		REP(i,0,4){
			int nx = a+dx[i], ny = b+dy[i];
			if(0<nx && nx<=n && 0<ny && ny<=n && x[nx][ny]==x[a][b] && y[nx][ny]==y[a][b] && ans[nx][ny]=='.')
				ans[nx][ny] = c[i^2], q.push(P(nx,ny)), no[nx][ny] = 1;
		}
	}
	REP(i,1,n+1) REP(j,1,n+1){
		if(x[i][j]!=-1 && ans[i][j]=='.') return cout<<"INVALID\n",0;
		if(x[i][j]==-1){
			ok = 0;
			REP(k,0,4){
				int nx = i+dx[k], ny = j+dy[k];
				if(0<nx && nx<=n && 0<ny && ny<=n && no[nx][ny]==0 && !ok)
					ans[i][j] = c[k], ok = 1;
			}
			
			if(!ok) return cout<<"INVALID\n",0;
		}
	}
	cout<<"VALID\n";
	REP(i,1,n+1){
		REP(j,1,n+1) cout<<ans[i][j];
		cout<<"\n";
	}
	
}


