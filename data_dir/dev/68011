#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP, Stack
using namespace std;

int n, m;
const int MAXN = 1000005, MOD = 1e9 + 7;
vector<int> gym[MAXN];
int g[MAXN];
long long fact[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> m;

	fact[0] = 1;
	for(int i = 1; i <= m; i++)
		fact[i] = (fact[i - 1] * i) % MOD;

	for(int i = 0; i < n; i++)
	{
		cin >> g[i];
		for(int j = 0; j < g[i]; j++)
		{
			int x;
			cin >> x;
			gym[x - 1].push_back(i);
		}
	}

	sort(gym, gym + m);	
	long long ans = 1, counter = 1;
	for(int i = 1; i < m; i++)
	{
		if(gym[i] == gym[i - 1])
			counter++;
		else
		{
			ans = (ans * fact[counter]) % MOD;
			counter = 1;
		}
	}
	ans = (ans * fact[counter]) % MOD;
	cout << ans << "\n";
	return 0;
}