#include <bits/stdc++.h>
using namespace std;

vector<int> neigh[40];
int x[40];
int y[40];

void dfs(int v, int p, int d, int l, int xx, int yy)
{
    x[v] = xx;
    y[v] = yy;

    int dd = 0;
    for (int u : neigh[v]) {
        if (u == p) continue;

        if (abs(dd - d) == 2) dd++;

        if (dd == 0)
            dfs(u, v, dd, l / 2, xx, yy + l);
        else if (dd == 1)
            dfs(u, v, dd, l / 2, xx + l, yy);
        else if (dd == 2)
            dfs(u, v, dd, l / 2, xx, yy - l);
        else
            dfs(u, v, dd, l / 2, xx - l, yy);

        dd++;
    }
}

int main()
{
    int n;
    scanf("%d", &n);

    for (int i = 0; i < n - 1; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        neigh[u].push_back(v);
        neigh[v].push_back(u);
    }

    for (int i = 1; i <= n; i++) {
        if (neigh[i].size() > 4) {
            printf("NO");
            return 0;
        }
    }

    for (int i = 0; i < neigh[1].size(); i++) {
        int xx = 0, yy = 0;
        if (i == 0) yy = (1<<n);
        else if (i == 1) xx = (1<<n);
        else if (i == 2) yy = -(1<<n);
        else if (i == 3) xx = -(1<<n);
        dfs(neigh[1][i], 1, i, (1<<(n-1)), xx, yy);
    }

    printf("YES\n");
    for (int i = 1; i <= n; i++) printf("%d %d\n", x[i], y[i]);
}
