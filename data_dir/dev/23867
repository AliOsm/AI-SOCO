#include <cstdio>

typedef long long ll;
struct color{
   ll whites, blacks;
};
color operator + (color a , color b ) { return color{ a.whites + b.whites, a.blacks + b.blacks } ; }
color operator - (color a, color b ) { return color{ a.whites - b.whites, a.blacks - b.blacks } ; } 

color  calc_color(ll x, ll y)
{
    color c;
    ll total = x * y ;
    c.whites = (total + 1 ) / 2 ;
    c.blacks = total / 2 ;
    return c;
}

color calc_color(ll ax, ll ay, ll bx, ll by)
{
    color ca = calc_color(bx, by) - calc_color(ax-1, by) - calc_color(bx, ay-1) + calc_color(ax-1,ay-1);
    return ca;
}

int main()
{
   int test = 1;scanf("%d", & test ) ;
   while(test -- ) {
      ll n, m;
      ll ax, ay, bx, by,  cx, cy, dx, dy ; 
      ll ex, ey, fx, fy;
      scanf("%lld%lld",&n,&m);
      scanf("%lld%lld%lld%lld",&ax,&ay,&bx,&by);
      scanf("%lld%lld%lld%lld", &cx,&cy, &dx, &dy);
      
      color total = calc_color(n,m);
      color wh = calc_color(ax, ay, bx, by ) ;
      color bl = calc_color(cx, cy, dx, dy ) ;
      color ans = total - wh - bl ;
      
      ll whites = (bx - ax + 1 ) * (by - ay + 1 ) ;
      ll blacks = (dx - cx + 1 ) * (dy - cy + 1 ) ;
      
      ex = (ax > cx) ? ax : cx;
      ey = (ay > cy) ? ay : cy;
      
      fx = (bx < dx ) ? bx : dx;
      fy = (by < dy ) ? by : dy;
      
      if (ex <= fx && ey <= fy ) {
         ans = ans + calc_color(ex, ey, fx, fy);
         whites -= (fx - ex + 1) *(fy - ey + 1);
      }
      
      ans = ans + color{ whites, blacks};
      
      printf("%lld %lld\n", ans.whites, ans.blacks);
   }
   
}