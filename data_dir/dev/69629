#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

using namespace std;
typedef long long mt;
//#define mt int
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 1001
#define K 5
#define M (100001)
#define INF 100000000000000007//10000000000000007// 1e16 + 7
#define MOD 1000000007ll  //1000000007//1e9 + 7
#define EPS 1e-9
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:200000000")

mt n, m;
vector<mt> g[N];

bool dfs(mt v, mt p) 
{
	mt cnt = 0;
	bool ok = true;
	for (mt to : g[v]) {
		ok &= dfs(to, v);
		if (g[to].empty()) 
			++cnt;
	}
	if (g[v].empty()) return true;
	return ok && cnt >= 3;
}

int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%lld", &n);
	mt p;
	rep(0, n - 1, i)
		scanf("%lld", &p), g[--p].push_back(i + 1);
	puts(dfs(0, 0) ? "Yes" : "No");
	return 0;
}