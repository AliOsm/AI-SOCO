/// Updated! https://www.youtube.com/watch?v=U07_n9xGIlM
#include<bits/stdc++.h>

using namespace std;
#define ll long long
#define dbug prllf("I am here\n");
#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
const ll maxn = 2e5+100;

const ll inf = 1e18;
map < ll , multiset< ll > > mp;
map < ll , ll > sum;
ll publication[maxn] , timer[maxn];

ll bin(ll lo , ll hi , ll val){
    ll ans = -1;
    while(lo <= hi){
        ll mid = (lo + hi)/2;
        if(publication[mid] > val){
            ans = mid;
            hi = mid - 1;
        }
        else lo = mid + 1;
    }
    return publication[ans];
}

int main()
{
    fast;
    ll n;
    cin >> n;
    for(ll i = 1; i<=n; i++)cin >> publication[i];
    for(ll i = 1; i<=n; i++)cin >> timer[i];
    for(ll i = 1; i<=n; i++){
        mp[publication[i]].insert(timer[i]);
        sum[publication[i]] += timer[i];
    }
    ll ans = 0;
    sort(publication+1,publication+n+1);
    ll st = -1;
    ll cur = 0;
    //dbug
    while(cur < n){
        st = bin(1,n,st);
       // dbug;
        //cout << cur << endl;
        while(1){
            //dbug
            if(mp[st].size()==1){
                cur++;
                break;
            }
            ll next = st + 1;

            multiset<ll>::iterator it = mp[st].end();
            --it;
            sum[st] -= *it;
            mp[st].erase(it);
            ans += sum[st];
            if(mp[next].size() < mp[st].size()){
                swap(mp[next],mp[st]);
                swap(sum[next],sum[st]);
            }

            for(auto v : mp[st])mp[next].insert(v);
            sum[next] += sum[st];
            st = next;
            cur++;
        }

    }

    cout << ans << endl;

}
/*



*/

