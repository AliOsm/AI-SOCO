#include <cstdio>
#include <algorithm>
using namespace std;
int sol[20], v[20], s[20];
int n,ans,a,b;

inline int getSteps(int ind, int a)
{
    return max(0,(v[ind]/a + (v[ind]%a>0)));
}

inline void getSol(int cnt)
{
    if (cnt < ans)
    {
        ans = cnt;
        for (int i = 2;i<=n-1;i++)
            sol[i] = s[i];
    }
}

inline void apply(int ind, int steps)
{
    v[ind]-=a*steps;
    v[ind-1]-=b*steps;
    v[ind+1]-=b*steps;
    s[ind]+=steps;
}


void back(int ind, int cnt)
{
    if (ind == n-1)
    {
        int steps = max( getSteps(ind,a),max( getSteps(ind+1,b) , getSteps(ind-1,b)));
        cnt += steps;
        apply(ind,steps);
        getSol(cnt);
        apply(ind,-steps);
        return;
    }

    int steps = getSteps(ind-1,b);
    apply(ind, steps);
    cnt += steps;

    int lim = getSteps(ind, a);

    for (int i = 0; i <= lim;i++)
    {
        apply(ind, i);
        cnt += i;
        back(ind+1, cnt);
        apply(ind, -i);
        cnt -= i;
    }

    apply(ind,-steps);
}


int main()
{
    //freopen("input.txt","r",stdin);
    scanf("%d%d%d",&n,&a,&b);
    for (int i=1;i<=n;i++)
    {
        scanf("%d",&v[i]);
        v[i]++;
    }
    ans = 100000000;
    back(2, 0);
    printf("%d\n",ans);
    for (int i = 2;i<n;i++)
        for (int j = 1;j<=sol[i];j++)
            printf("%d ",i);


    return 0;
}