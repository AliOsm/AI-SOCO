#include <bits/stdc++.h>

using namespace std;

const int N = 1e3, MOD = 1e9 + 7;
int a[N][N], lol, lol1;
pair <int, int > p[N];

/*void build (int v, int l, int r) {
	if (r - l == 1) {
		p[v] = {a[l], a[l]};
	}
	else {
		int m = (l + r) / 2;
		build(v * 2 + 1, l, m);
		build(v * 2 + 2, m, r);
		p[v].first = min(p[v * 2 + 1].first, p[v * 2 + 2].first);
		p[v].second = max(p[v * 2 + 1].second, p[v * 2 + 2].second);
	}
}

void sum(int v, int l, int r, int l1, int r1) {
	if (l1 <= l && r <= r1) {
		lol = min(lol, p[v].first);
		lol1 = max(lol1, p[v].second);
	}
	else {
		int m = (r + l) / 2;
		if (m <= l1) {
			sum(v * 2 + 2, m, r, l1, r1);
		}
		else {
			if (m >= r1) {
				sum(v * 2 + 1, l, m, l1, r1);
			}
			else {
				sum(v * 2 + 2, m, r, l1, r1);
				sum(v * 2 + 1, l, m, l1, r1);
			}
		}
	}
}*/
#define int long long
 main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    int x, y, z, t, t1, t2;
    cin >> x >> y >> z >> t >> t1 >> t2;
    int kek = abs(y - x) * t, kek1 = abs(z - x) * t1;
    kek1 += t2 * 3;
    kek1 += t1 * (abs(x - y));
   // cout << kek << ' ' << kek1;
    if (kek1 <= kek) {
		cout << "YES";
		return 0;
    }
    else {
		cout << "NO";
    }
}
