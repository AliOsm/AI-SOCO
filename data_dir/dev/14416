#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define F first
#define S second
#define ll long long
#define pii pair <int, int>
#define FILE "floyd_joke"
#define ld long double

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

using namespace std;
using namespace __gnu_pbds;

typedef tree <int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

const int N = 2e5 + 5;
const int mod =  1e9 + 7;

int dp[2][N];


int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    srand(time(0));
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
  //  freopen(FILE".in", "r", stdin);
//    freopen(FILE".out", "w", stdout);
#endif // LOCAL
  for (int i = 0; i < 2; i++){
      for (int j = 0; j < N; j++){
          dp[i][j] = 1e9;
        }
  }
  dp[0][0] = -1e9;
  int cnt = 0;
  int n;
  cin >> n;
  int res = 0;
  for (int i = 0; i < n; i++){
      int x;
      cin >> x;
      {
         int pos = upper_bound(dp[1], dp[1] + N, x - i + 1) - dp[1];
         res = max(res, pos);
         if (dp[1][pos] > x - i + 1) dp[1][pos] = x - i + 1;
      }
      {
          dp[1][cnt] = min(dp[1][cnt], dp[0][cnt]);
          int pos = upper_bound(dp[0], dp[0] + N, x - i) - dp[0];
          res = max(res, cnt);
          cnt = pos;
          if (dp[0][pos] > x - i) dp[0][pos] = x - i;
      }
  }
  cout << n - res - 1 << endl;
  return 0;
}