#include<bits/stdc++.h>
using namespace std;

#define endl '\n'
#define D(x) cout << #x << " = " << (x) << endl;

int count (int x, int y, map<int, vector<int>> &freq) {
  int len = 1;
  int pos = freq[x][0];

  while (true) {
    if (len % 2 != 0) {
      auto pos2 = upper_bound(freq[y].begin(), freq[y].end(), pos);
      if (pos2 == freq[y].end()) break;
      pos = *pos2;
    }
    else {
      auto pos2 = upper_bound(freq[x].begin(), freq[x].end(), pos);
      if (pos2 == freq[x].end()) break;
      pos = *pos2;
    }

    len ++;
  }

  return len;
}

int main() {
#ifdef ONLINE_JUDGE
  ios_base::sync_with_stdio(0); cin.tie(0);
#endif

  int n;
  while (cin >> n) {
    map<int, vector<int>> freq;
    vector<int> v(n);
    int ans = 0;
    for (int i = 0; i < n; ++i) {
      cin >> v[i];
      freq[v[i]].push_back(i);
      ans = max(ans, (int)freq[v[i]].size());
    }

    vector<pair<int, int>> v2;
    for (auto i: freq) {
      v2.push_back({i.second.size(), i.first});
    }

    sort(v2.begin(), v2.end());
    
    int n2 = v2.size();
    for (int i = 0; i < n2; ++i) {
      for (int j = i + 1; j < n2; ++j) {
        int x = v2[i].second;
        int y = v2[j].second;

        int a = v2[i].first;
        int b = v2[j].first;
        if (a + b < ans) break;
        
        int len1 = count(x, y, freq);
        int len2 = count(y, x, freq);
        ans = max(ans, max(len1, len2));
      }
    }

    cout << ans << endl;
  }

  return 0;
}