#include <bits/stdc++.h>
#define y0    lol
#define y1    lool
#define yn    loool
#define prev  looool
#define next  loooool
#define read  looooool
#define tm    loooooool
#define fi first
#define se second
#define pb push_back
#define sz(x) (int)(x).size()
#define pcnt __builtin_popcountll
#define rep(i,a,b) for(int i = (a); i <= (b); i++)
#define rrep(i,a,b) for(int i = (b); i >= (a); i--)
#ifdef LOCAL
#define rall(x,a) for(x : a)
#define LL "%lld"
#else
#define rall(x,a) for(auto x : a)
#define LL "%I64d"
#endif
#define rng(a) a.begin(), a.end()
#define PI 3.14159265358979323846
#define MOD 1000000007
#define endl "\n"
#define int long long
typedef long long ll;
using namespace std;

int mult(int a, int b) {
    int ans = a * b;
    return b != 0 && ans / b != a ? -1 : ans;
}

void solve() {
    int a, b, m;
    cin >> a >> b >> m;
    if(a == b) {
        cout << 1 << " " << a << endl;
        return;
    }
    rep(k, 2, 50) {
        int pk = 1LL << (k - 2);
        int mini = pk * (a + 1);
        if(mini < 0) {
            break;
        }
        int maxi = pk * (a + m);
        if(maxi < 0) maxi = b;
        if(b < mini || b > maxi) continue;
        // possible
        int q = b / pk;
        int y = b % pk;
        int x = q - a;
        vector<int> ans;
        rrep(i, 0, k - 3) {
            int ri = x + ((y & (1LL << i)) > 0);
            ans.pb(ri);
        }
        ans.pb(x);
        //reverse(rng(ans));
        int sum = a;
        cout << k << " " << a << " ";
        rep(i, 2, k) {
            int xi = sum + ans[i - 2];
            cout << xi << " ";
            sum += xi;
        }
        cout << endl;
        return;
    }
    cout << -1 << endl;
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int q;
    cin >> q;
    while(q--) {
        solve();
    }
    return 0;
}
