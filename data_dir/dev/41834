/* In The Name Of God */
#include <bits/stdc++.h>

# define xx first
# define yy second
# define pb push_back
# define pp pop_back
# define eps 1e-9

using namespace std;
typedef long long ll;
typedef pair<ll,ll> pii;
typedef vector<int> vint;
ll n,cur;
pair<pii,ll> team[300100];
bool check(ll pos){
	if(pos >= cur)
		return true;
	// multiset<ll> s;s.clear();
	priority_queue<ll> pq;
	for(int i=1 ; i<cur ; i++)
		pq.push(-1 * (team[i].xx.yy-team[i].xx.xx+1));
	ll after = cur+1;
	ll bal = team[cur].xx.xx;
	// cout<<after<<endl;
	while(true){
		while(after <= n && team[after].xx.xx > bal){
			pq.push(-1*(team[after].xx.yy-team[after].xx.xx+1));
			after++;
		}
		// cout<<bal<<' '<<<<endl;
		if(bal<0)
			return false;
		if((int)pq.size() < pos)
			return true;
		ll top = -1 * pq.top();
		pq.pop();
		bal -= top;
	}
}
bool cmp(pair<pii,ll> a , pair<pii,ll> b){
	if(a.xx.xx > b.xx.xx)
		return true;
	if(a.xx.xx < b.xx.xx)
		return false;
	if(a.yy < b.yy)
		return true;
	return false;
}
int main(){
	ios_base::sync_with_stdio (0);cin.tie(0);
	cin>>n;
	for(int i=1 ; i<=n ; i++){
		cin>>team[i].xx.xx>>team[i].xx.yy;
		team[i].yy = i;
	}	
	sort(team+1,team+n+1,cmp);
	cur = 1;
	for( ; cur<=n ; cur++)if(team[cur].yy == 1){
		break;
	}
	ll L=1 , R = n;
	while(L<R){
		ll mid = (L+R)/2;
		if(check(mid))
			R = mid;
		else
			L = mid+1;
	}
	cout<<L<<endl;
	return 0;
}
