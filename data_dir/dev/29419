#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
#define  int long long int
typedef complex<long double> cd;
const long double pi=acos(-1);
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define fi first
#define se second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)

inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD =998244353;
const ll hell=1000000007;
const int INF = 1e17;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;

typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
const int N=2e5+5;
int ans[17]={0,1,0,18,0,1800,0,670320,0,734832000,0,890786230,0,695720788,0,150347555,0};
/*
bool used[18];int cnt=0;int c[18];int n=15;bool us[18];
void dfs(int i)
{
    if(i==n+1)
    {
        cnt=(cnt+1)%hell;
        return;
    }
    for(int j=1;j<=n;j++)
    {
        if(!used[j])
        {
            //c[i]=(i+j-2)%n+1;
            if(!us[(i+j-2)%n+1])
            {
                us[(i+j-2)%n+1]=1;
                used[j]=1;
                dfs(i+1);
                used[j]=0;
                us[(i+j-2)%n+1]=0;
            }
            
        }
    }
}
void solve()
{
    dfs(1);
    
}
 */
int32_t main()
{
    IOS;
    int n;
    cin>>n;
    cout<<ans[n]<<endl;
    return 0;
}


