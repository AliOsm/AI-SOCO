#include<bits/stdc++.h>

#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define PS(a) printf("%s",a)

#define S2(a,b) scanf("%d%d",&a,&b)
#define S3(a,b,c) scanf("%d%d%d",&a,&b,&c)

#define SLL(a) scanf("%lld",&a)
#define PLL(a) printf("%lld",a)
#define SLL2(a,b) scanf("%lld%lld",&a,&b)
#define SLL3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)

#define PCASE printf("Case %d: ",kk++)
#define PCASENL printf("Case %d:\n",kk++)
#define NL puts("")

#define sz(a) ((int)a.size())
#define repv(i,a) for(int i=0;i<sz(a);i++)
#define revv(i,a) for(int i=sz(a)-1;i>=0;i--)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rev(i,a,b) for(int i=a;i>=b;i--)
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N) FOR(I,0,N)
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define countbit(x) __builtin_popcount(x)
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define pi (2.0*acos(0.0))
#define PI (2.0*acos(0.0))
#define SET(a) memset(a,-1,sizeof a)
#define CLR(a) memset(a,0,sizeof a)
#define set0(ar) memset(ar,0,sizeof ar)
#define setinf(ar) memset(ar,126,sizeof ar)
#define in(a,x,y) (a>=x && a<=y)
#define out(a,x,y) (!in(a,x,y))
#define eq(a,b) (fabs(a-b)<eps)
#define less(a,b) (a+eps<b)
#define great(a,b) (a>b+eps)
#define xx first
#define yy second
//#define root 1

#define MAX(a) (*max_element(all(a)))
#define MIN(a) (*min_element(all(a)))

#define LB(a,x) (lower_bound(all(a),x)-a.begin())
#define UB(a,x) (upper_bound(all(a),x)-a.begin())

using namespace std;
int ts,kk=1;

typedef long long ll;
typedef long long LL;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector< pii > vii;

template< class T > inline T _sq(T a) { return a * a; }
template< class T, class X > inline T _pow(T a,X y) {T z=1; rep(i,1,y){z*=a;} return z; }
template< class T > inline T _gcd(T a,T b) {a=_abs(a);b=_abs(b); if(!b) return a; return _gcd(b,a%b);}
template< class T > inline T _lcm(T a,T b) {a=_abs(a);b=_abs(b); return (a/_gcd(a,b))*b;}

template< class T > inline T _extended(T a,T b,T &x,T &y) {a=_abs(a);b=_abs(b); T g,x1,y1; if(!b) {x=1;y=0;g=a; return g;} g=_extended(b,a%b,x1,y1); x=y1; y=x1-(a/b)*y1; return g;}

template< class T, class X > inline bool getbit(T a, X i) { T t=1; return ((a&(t<<i))>0); }
template< class T, class X > inline T setbit(T a, X i) { T t=1;return (a|(t<<i)); }
template< class T, class X > inline T resetbit(T a, X i) { T t=1;return (a&(~(t<<i))); }
template< class T, class X > inline T togglebit(T a, X i) { T t=1;return (a^(t<<i)); }

template< class T,class X, class Y > inline T _bigmod(T n,X m,Y mod){ull ret=1, a = n%mod ; while(m){ if(m&1)ret=(ret*a)%mod; m>>=1; a=(a*a)%mod; }ret%=mod;return (T)ret;}
template< class T, class Y > inline T _modinv(T n,Y mod) {return _bigmod(n,mod-2,mod);}

/// //CONSTANT// ///
/// power   0123456789 ///
#define lmt 100000
#define MX (lmt + 20 )
#define MOD 1000000009
#define inf 1000000000

#define LOGMX 30
#define eps 1e-9
///===========================///

char num[MX][10];
vi val[MX];

vi func(char arr[]){

    vi v;
    int len =  strlen(arr);
    rev(i,len-1,0){

        if(arr[i]=='?') v.pb(-1);
        else v.pb(arr[i]-'0');
    }

    while(v.size()<8){
        v.pb(0);
    }



    reverse(all(v));
//    cout<<v[0]<<endl;
    return v;
}

//void print(vi v){
//
//    repv(i,v){
//        printf("%d",v[i]);
//    }cout<<endl;
//}

int main()
{
    int n;
    cin>>n;
    rep(i,1,n){
        scanf("%s",&num[i]);
        val[i] = func(num[i]);
    }

    bool chk = false;

    rep(i,0,7){
        if(chk){
            if(val[1][i]==-1) val[1][i] = 0;
        }
        else{
            if(val[1][i]==-1) val[1][i] = 1;
        }

        if(1<= val[1][i] && val[1][i]<=9) chk = true;
    }

//    cout<<val[1][0]<<endl;



    rep(i,2,n){

//        cout<<"asdf "<<i<<endl;


        if( strlen(num[i]) > strlen(num[i-1]) ){


                                bool chk = false;

                        rep(j,0,7){
                            if(chk){
                                 if(val[i][j]==-1) val[i][j] = 0;
                            }
                            else{
                                if(val[i][j]==-1) val[i][j] = 1;
                            }

                            if(1<= val[i][j] && val[i][j]<=9) chk = true;
                        }

//            cout<<"s "<<i<<endl;

        }
        else if(strlen(num[i]) < strlen(num[i-1])){
            cout<<"NO"<<endl;
            return 0;
        }
        else{


            int p  = -1;
            rep(j,0,7){
                if( val[i-1][j] > val[i][j] && val[i][j]!=-1){
                    p = j;
                    break;
                }
            }

            if(p==-1){


                bool ok = false;
                queue<int>tmp;
                rev(j,7,0){
                    if(val[i][j]==-1){
                        tmp.push(j);

                        if(ok) val[i][j] = val[i-1][j];
                        else if(val[i-1][j]!=9) val[i][j] = val[i-1][j] +1 , ok = true;
                        else {
                            val[i][j] = 0;
                        }
                    }
                    else if(val[i][j] > val[i-1][j]) {
                            while(!tmp.empty()){
                                val[i][tmp.front()] = 0;
                                tmp.pop();
                            }
                            ok = true;
                    }
                }

                if(!ok){

                    cout<<"NO"<<endl;
                    return 0;
                }
            }
            else{

//                cout<<"p is "<<p<<endl;

                rep(j,p+1,7){
                    if(-1==val[i][j]) val[i][j] = 0;
                }
//--->
                bool ok = false;
                queue<int>tmp;
                rev(j,p,0){

                    if(val[i][j]==-1){
                        tmp.push(j);

                        if(ok) val[i][j] = val[i-1][j];
                        else if(val[i-1][j]!=9) val[i][j] = val[i-1][j] +1 , ok = true;
                        else {
                            val[i][j] = 0;
                        }
                    }
                    else if( val[i][j]  > val[i-1][j] ){

                        ok = true;
                        while(!tmp.empty()){
                            val[i][ tmp.front() ] = 0;
                            tmp.pop();
                        }
                    }
                }

                if(!ok){

                    cout<<"NO"<<endl;
                    return 0;
                }
            }
        }




//        print(val[i]);
    }


//    cout<<val[1][7];
    cout<<"YES"<<endl;
    rep(i,1,n){
        bool g = false;
        repv(j,val[i]){
            if(val[i][j]) g = true;
            if(g)printf("%d",val[i][j]);
        }
        NL;
    }
    return 0;
}
