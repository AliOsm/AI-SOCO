//Caution to the wind,complete freedom
#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
#define MOD 1000000007
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define irr acos(-1.0)
#define MAX 1000003
#define MAXA 100003
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
int pref[100001];
int pref2[100001][3];
int main()
{
    string q;
    cin>>q;
    int k=q.size();
    q.insert(q.begin(),'1');
    int i,j;
    for(j=3;j<=k;j++)
    {
        string str;
        str+=q[j-2];
        str+=q[j-1];
        str+=q[j];
        pref[j]=pref[j-1];
        if(!(str=="xzy"||str=="zyx"||str=="yxz"))
            pref[j]+=1;
    }
    for(j=1;j<=k;j++)
    {
        pref2[j][0]=pref2[j-1][0];
        pref2[j][1]=pref2[j-1][1];
        pref2[j][2]=pref2[j-1][2];
        pref2[j][q[j]-'x']+=1;
    }
    int m;
    cin>>m;
    while(m--)
    {
        int l,r;
        cin>>l>>r;
        if(r-l+1<3)
            {cout<<"YES"<<endl;continue;}
        else
        {
            l+=2;
            int cnt=pref[r]-pref[l-1];
            if(cnt==0)
                cout<<"YES"<<endl;
            else
            {
              l-=2;
              int x=pref2[r][0]-pref2[l-1][0];
              int y=pref2[r][1]-pref2[l-1][1];
              int z=pref2[r][2]-pref2[l-1][2];
              if(x==0||y==0||z==0)
              {
                  cout<<"NO"<<endl;
                  continue;
              }
              int par=min(min(x,y),z);
              x-=par;
              y-=par;
              z-=par;
              if(par>=1)
              {
                  if(x>=2||y>=2||z>=2)
                  {
                      cout<<"NO"<<endl;
                  }
                  else
                    cout<<"YES"<<endl;
              }
              else
                cout<<"NO"<<endl;

            }
        }

    }
    return 0;
}
