#include<bits/stdc++.h>
using namespace std;
bool comp(pair<int,int> a,pair<int,int> b)
{
    if(a.second > b.second)
        return true;

    return false;
}
priority_queue<pair<int,int>,vector<pair<int,int> > > myQue;
map<int,int> reps;
int main()
{
    int n;
    cin >> n;
    for(int i = 0;i < n;i++)
    {
        int x;
        scanf("%d",&x);
        reps[x]++;
    }
    for(map<int,int>::iterator it = reps.begin();it != reps.end();it++)
        myQue.push(make_pair(it->second,it->first));

    vector<pair<int,pair<int,int> > > found;
    while(myQue.size() >= 3)
    {
        pair<int,int> top1 = myQue.top();
        myQue.pop();
        pair<int,int> top2 = myQue.top();
        myQue.pop();
        pair<int,int> top3 = myQue.top();
        myQue.pop();
        found.push_back(make_pair(top1.second,make_pair(top2.second,top3.second)));
        top1.first--;
        top2.first--;
        top3.first--;
        if(top1.first > 0)
            myQue.push(top1);
        if(top2.first > 0)
            myQue.push(top2);
        if(top3.first > 0)
            myQue.push(top3);
    }
    cout << found.size() << endl;
    for(int i = 0;i < (int)found.size();i++)
    {
        vector<int> num;
        num.push_back(found[i].first);
        num.push_back(found[i].second.first);
        num.push_back(found[i].second.second);
        sort(num.begin(),num.end());
        printf("%d %d %d\n",num[2],num[1],num[0]);
    }

    return 0;
}
