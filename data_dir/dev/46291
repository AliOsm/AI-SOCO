#include <bits/stdc++.h>
#define ff first
#define ss second
using namespace std;
#define MP make_pair
#define PB push_back
#define ll long long
#define int long long
#define f(i,x,n) for(int i=x;i<n;i++)
#define mod 1000000007
int a[200005];
array <int,4> mo[200005];
//int mo[200005][4];
int ans[1001005];
int swap(int &a,int &b)
{
    a^=b;
    b^=a;
    a^=b;
}
int query(int l,int in,int r,int fi)
{
    int answer=0;
    r--;
    while(r<fi)
    {
        r++;
        int val=ans[a[r]];
        answer+=((val+1)*(val+1)-val*val)*a[r];
        ans[a[r]]++;
    }
    while(r>fi)
    {
        r--;
        int val=ans[a[r+1]];
        answer-=((val)*val-(val-1)*(val-1))*a[r];
        ans[a[r+1]]--;
    }
    while(l>in)
    {
        l--;
        int val=ans[a[l]];
        answer+=((val+1)*(val+1)-val*val)*a[l];
        ans[a[l]]++;
    }
    while(l<in)
    {
        l++;
        int val=ans[a[l-1]];
        answer+=((val-1)*(val-1)-val*val)*a[l-1];
        ans[a[l-1]]--;
    }
    return answer;
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n,q;
    cin>>n>>q;
    f(i,1,n+1)
    cin>>a[i];
    f(i,0,q)
    {
        int l,r;
        cin>>l>>r;
        mo[i][0]=l;
        mo[i][1]=r;
        mo[i][2]=i;
    }
    mo[q][0]=mod;
    //cout<<"Yahan"<<endl<<flush;
    sort(&mo[0],&mo[q]);
    int st=-1,end=-1;
    for(int i=0;i<=200900;i+=450)
    {
        st=end;
        f(j,st+1,q+1)
        {
            if(mo[j][0]<i)
            st=j;
            if(mo[j][0]>=i+450)
            {
                end=j;
                break;
            }
        }
        //cout<<"Yahan"<<endl<<flush;

        st++;
        end--;
        f(i,st,end+1)
        {
            swap(mo[i][0],mo[i][1]);
        }
        sort(&mo[st],&mo[end+1]);
        f(i,st,end+1)
        {
            swap(mo[i][0],mo[i][1]);
        }
        f(i,0,1000001)
        ans[i]=0;
        int answer=0;
        int in=mo[st][0],fi=mo[st][0];
        f(i,st,end+1)
        {
            answer+=query(in,mo[i][0],fi,mo[i][1]);
            mo[i][3]=answer;
            in=mo[i][0];
            fi=mo[i][1]+1;
        }
    }
    f(i,0,q)
    {
        swap(mo[i][0],mo[i][2]);
    }
    sort(&mo[0],&mo[q]);
    f(i,0,q)
    {
        cout<<mo[i][3]<<endl;
    }
    return 0;
}
