#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define N 100005
#define M 30
#define ll long long 
#define ld long double
#define pb push_back
#define ff first
#define ss second

struct pt{
	int x, y, z, id;
};

void solve2(vector <pt> &p){
	map <int, pt> bb;
	for(auto it : p){
		bb[it.z] = it;
	}
	int c = 0;
	pt last;
	for(auto it : bb){
		if(c == 0){
			last = it.ss;
		}
		else{
			cout<<last.id<<" "<<it.ss.id<<"\n";
		}
		c = c^1;
	}
	p.clear();
	if(c == 1){
		p.pb(last);
	}
}

void solve1(vector <pt> &p){
	map <int, vector <pt> > bb;
	for(auto it : p){
		bb[it.y].pb(it); 
	}
	int c = 0;
	pt last;
	for(auto it : bb){
		solve2(it.ss);
		if(!it.ss.empty()){
			if(c == 0){
				last = it.ss[0];
			}
			else{
				cout<<last.id<<" "<<it.ss[0].id<<"\n";
			}
			c = c^1;
		}
	}
	p.clear();
	if(c == 1){
		p.pb(last);
	}
}

int main(){
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	int n, i; cin>>n;
	vector <pt> p(n);
	for(i=0; i<n; i++){
		cin>>p[i].x>>p[i].y>>p[i].z;
		p[i].id = i+1;
	}
	map <int, vector <pt> > bb;
	for(i=0; i<n; i++){
		bb[p[i].x].pb(p[i]);
	}
	int c = 0;
	pt last;
	for(auto &it : bb){
		solve1(it.ss);
		if(!it.ss.empty()){
			if(c == 0){
				last = it.ss[0];
			}
			else{
				cout<<last.id<<" "<<it.ss[0].id<<"\n";
			}
			c = c^1;
		}
	}
	return 0;
}