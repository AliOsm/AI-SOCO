#pragma comment(linker, "/STACK:167177216")

#include <stdio.h>
#include <stack>
#include <math.h>
#include <iostream>
#include <iomanip>
#include <algorithm>
#include <string.h>
#include <string>
#include <memory.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <time.h>
#include <cassert>
#include <cstring>
//#include <unordered_set>

using namespace std;

#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define X first
#define Y second

typedef long long li;
typedef long double ld;
typedef unsigned long long uli;

const int INF = 1e9;
const ld eps = 1e-9;
const li MOD = (li)(INF + 7);
const li INF64 = (li)(INF) * (li)(INF);

const int ddx[] = {-1, 1, 1, -1};
const int ddy[] = {1, 1, -1, -1};
const int dx[] = {-1, -1, 0, 1, 1, 1, 0, -1};
const int dy[] = {0, 1, 1, 1, 0, -1, -1, -1};
const int dx4[] = {-1, 0, 1, 0};
const int dy4[] = {0, 1, 0, -1};
const int dxh[] = {-1, -1, -1, 1, 1, 1, 1, -1};
const int dyh[] = {1, -1, -1, -1, -1, 1, 1, 1};
const string dirs[] = {"RIGHT", "UP", "LEFT", "DOWN"};

bool in(int i, int j, int n, int m)
{
    return i >= 1 && i <= n && j >= 1 && j <= m;
}

const int N = 1e5;

li a[N];
int n;

int main()
{
#ifdef _DEBUG || SlavaSSU || SSU#5
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    //freopen("errors.txt", "w", stderr);
#endif
    
    li n, a, b;
    cin >> n >> a >> b;
    if(a * b >= 6 * n)
    {
        cout << a * b << endl;
        cout << a << ' ' << b << endl;
        return 0;
    }

    n *= 6;

    li ans = INF64, ansa = -1, ansb = -1;

    for(li i = a; i <= a + 1000000; i++)
    {
        li j = n / i;
        while(i * j < n)
            j++;
        j = max(j, b);
        
        li cur = i * j;
        if(cur < ans)
        {
            ans = cur;
            ansa = i, ansb = j;
        }
    }

    for(li j = b; j <= b + 1000000; j++)
    {
        li i = n / j;
        while(i * j < n)
            i++;
        i = max(i, a);
        li cur = i * j;
        if(cur < ans)
        {
            ans = cur;
            ansa = i, ansb = j;
        }
    }

    cout << ans << endl;
    cout << ansa << ' ' << ansb << endl;
    return 0;
}