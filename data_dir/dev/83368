#include <bits/stdc++.h>
using namespace std;

int N, P[26], U[26];  
vector <int> children[26];
string ANS, L[105];
queue <int> cola;

int main() {
    cin >> N;

    for(int i=0;i<N;i++)
        cin >> L[i];

    for(int i=1;i<N;i++) {
        int S = min(L[i-1].size(), L[i].size());
        bool xp = false;
        for(int j=0;j<S;j++) if(L[i-1][j] != L[i][j]) {
            int u = L[i-1][j] - 'a', v = L[i][j] - 'a';
            P[v]++;
            children[u].push_back(v);     
            xp = true; 
            break;      
        }
        if(L[i] < L[i-1] && !xp) {
            cout << "Impossible" << endl;
            return 0;
        }
    }

    for(int i=0;i<26;i++) if(!P[i]) 
        cola.push(i);

    while(!cola.empty()) {
        int act = cola.front(); cola.pop();

        if(U[act]) {
            cout << "Impossible" << endl;
            return 0;
        }

        U[act] = true;
        ANS += (char)(act + 'a');

        for(int nv : children[act]) {
            P[nv]--;
            if(!P[nv]) cola.push(nv);
        }
    }

    if(ANS.size() < 26) {
        cout << "Impossible" << endl;
        return 0;
    }

    cout << ANS << endl;
}