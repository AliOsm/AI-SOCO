#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;
typedef long long       ll;
typedef long double     ld;
#define all(A)          A.begin(),A.end()
#define rall(A)         A.rbegin(),A.rend()
#define SP              setprecision
#define mem(A,B)        memset(A,B,sizeof A)
#define sorta(A)        sort(all(A))
#define sortd(A)        sort(rall(A))
#define sortf(A,F)      sort(all(A),F)
#define Get(mask,bit)   (mask&(1LL<<bit))
#define Set(mask,bit)   (mask|(1LL<<bit))
#define Reset(mask,bit) (mask&(~(1LL<<bit)))
#define Flib(mask,bit)  (mask^(1LL<<bit))
#define LowOn(mask,bit) (mask&-mask)
#define PI              (acos(0.) * 2)
#define exp             2.71828182845904523536028747135266249775724709369995
#define eps             .000000001
#define oo              1000000000
#define endl            '\n'
template <class T> inline void remax(T& A, T B){ if (A < B)A = B; }
template <class T> inline void remin(T& A, T B){ if (A > B)A = B; }
string ToString(ll num){ string ret; do{ ret += ((num % 10) + '0'); num /= 10; } while (num); reverse(all(ret)); return ret; }
ll ToNumber(string s){ ll r = 0, p = 1; for (int i = s.size() - 1; i >= 0; --i)r += (s[i] - '0') * p, p *= 10; return r; }
ll Gcd(ll a, ll b){ while (a %= b ^= a ^= b ^= a);  return b; }
ll Power(ll base, ll power){ ll ret = 1; while (power){ if (power & 1)ret *= base; power >>= 1; base *= base; } return ret; }
ll PowerMod(ll base, ll power, ll mod){ if (!power)return 1; if (power & 1)return (base * PowerMod(base, power - 1, mod)) % mod; return PowerMod((base * base) % mod, power >> 1, mod); }
int Log(ll num, ll base){ int ret = 0; while (num){ ++ret; num /= base; } return ret; }
int Count(ll mask){ int ret = 0; while (mask){ if (mask & 1)++ret; mask >>= 1; } return ret; }


int memo[10001];
int a, b;
int f(int x){
	if (!x)return 1;
	int &ret = memo[x];
	if (~ret)return ret;
	++ret;
	if (x >= a)ret |= f(x - a);
	if (x >= b)ret |= f(x - b);
	return ret;
}
inline void run(){
	int c;
	scanf("%d%d%d", &a, &b, &c);
	mem(memo, ~0);
	if (f(c))puts("Yes");
	else puts("No");
}
int main(){
	FILE *input = stdin;
	FILE *output = stdout;
#ifdef LOCAL
	input = freopen("in.in", "r", stdin);
	output = freopen("out.out", "w", stdout);
#endif
	while (!feof(input)){
		run();
#ifdef LOCAL
		puts("");
#else
		break;
#endif
	}
#ifdef LOCAL
	fprintf(output, "\n\nTime: %d ms\n", (int)(clock() * 1000. / CLOCKS_PER_SEC));
#endif
	return 0;
}