#pragma comment(linker, "/STACK:268435456")
 
#include<iostream>
#include<cstdio>
 
#include<string>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>
#include<list>
#include<bitset>
 
#include<iomanip>
#include<memory.h>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cmath>
#include<cassert>
 
using namespace std;
 
#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define for1(i, n) for(int i = 1; i < (int)(n); ++i)
#define nfor(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define fore(i, a, b) for(int i = int(a); i < int(b); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define x first
#define y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())
#define hash archash
#define next arcnext
#define link arclink
#define y0 arcy0
#define y1 arcy1
#define log2 arclog2
 
template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }
 
typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair <li, li> pt;
typedef vector <int> vi; 
typedef vector <vector <int> > vvi;
typedef vector <pair <int, int> > vpt; 
 
const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};
 
const int N = int(1e6) + 9;
const int M = int(1e3) + 9;
const int LOGN = 10;
const int SQN = 350;
const int MOD = int(1e9) + 7;
const int INF = int(1e9) + 100;
const li INF64 = 2e18;
const ld PI = ld(3.1415926535897932384626433832795);
const ld EPS = 1e-9;

struct upd{
	int id;
	int type;
	pair<li, li> d;
};

vector <upd> v;
int n, m, k;
li a[N];
pt mx[N];
vector <pair<li, pt> > sum[N];

bool cmp(const upd &a, const upd &b){
	pt aa = a.d, bb = b.d;
	aa.x -= aa.y, bb.x -= bb.y;
	assert(aa.x >= 0 && bb.x >= 0);
	return aa.x * bb.y < aa.y * bb.x;
}

void solve(){
	memset(mx, -1, sizeof mx);

	cin >> n >> m >> k;
	forn(i, n)
		cin >> a[i];
	forn(i, m){
		li t, id, d;
		cin >> t >> id >> d;
		--id;
		if(t == 1)
			mx[id] = max(mx[id], mp(d, li(i)));
		if(t == 2)
			sum[id].pb(mp(d, mp(i, 2)));
		if(t == 3){
			upd cur;
			cur.id = i;
			cur.type = 3;
			cur.d = mp(d, 1);
			v.pb(cur);
		}
	}

	forn(i, n){
		if(mx[i].x != -1 && mx[i].x > a[i])
			sum[i].pb(mp(mx[i].x - a[i], mp(mx[i].y, 1)));
		sort(all(sum[i]));
		reverse(all(sum[i]));
	}

	forn(i, n){
		forn(j, sz(sum[i])){
			upd cur;
			cur.type = sum[i][j].y.y;
			cur.id = sum[i][j].y.x;
			cur.d = mp(a[i] + sum[i][j].x, a[i]);
			a[i] += sum[i][j].x;
			v.pb(cur);
		}
	}


	sort(all(v), cmp);
	reverse(all(v));
	//forn(i, sz(v)) cout << v[i].id + 1 << " " << v[i].type << "  " << v[i].d.x << "/" << v[i].d.y << endl;cout << endl; 
	vector <int> ans;
	k = min(k, sz(v));
	forn(i, k)
		if(v[i].type == 1)
			ans.pb(v[i].id + 1);
	forn(i, k)
		if(v[i].type == 2)
			ans.pb(v[i].id + 1);
	forn(i, k)
		if(v[i].type == 3)
			ans.pb(v[i].id + 1);
	
	cout << sz(ans) << endl;
	forn(i, sz(ans))
		cout << ans[i] << ' ';

}

int main(){
#if _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	srand(time(NULL));
	cout << setprecision(10) << fixed;
	cerr << setprecision(10) << fixed;   

	solve();
 
	return 0;

}