#include<bits/stdc++.h>
using namespace std ;
#define LL long long
#define MOD 1000000007LL
#define PI acos(-1.0)


/*
// Ordered set
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template<typename T> using orderset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
//orderset<int> s ; //orderset<int>::iterator it ;
//orderset<int> X; //X.insert(1); //X.insert(2); //X.insert(4); //X.insert(8); //X.insert(16);
//cout<<*X.find_by_order(1)<<endl; // 2 //cout<<*X.find_by_order(2)<<endl; // 4 //cout<<*X.find_by_order(4)<<endl; // 16 //cout<<(end(X)==X.find_by_order(6))<<endl; // true
//cout<<X.order_of_key(-5)<<endl;  // 0 //cout<<X.order_of_key(1)<<endl;   // 0 //cout<<X.order_of_key(3)<<endl;   // 2 //cout<<X.order_of_key(4)<<endl;   // 2 //cout<<X.order_of_key(400)<<endl; // 5
*/

LL n , m ;
LL a[105] ;
LL b[105] ;
vector< LL > tmp , V[105] ;
bool ck[105] ;

void ResetAll(){
    memset( a , 0 , sizeof a ) ;
    for( int i = 1 ; i <= 100 ; i ++ ) V[i].clear() , ck[i] = 0 ;
}

void Input(){
    scanf("%lld%lld",&n,&m) ;
    for( int i = 1 ; i <= n ; i ++ ){
        scanf("%lld",&a[i]) ;
    }
    for( int i = 1 ; i <= m ; i ++ ){
        scanf("%lld",&b[i]) ;
    }
}

void DFS( LL u ){
    ck[u] = 1 ;
    tmp.push_back( a[u] ) ;
    for( auto v : V[u] ){
        if( !ck[v] ){
            DFS( v ) ;
        }
    }
}

void Calculation(){
    for( int i = 1 ; i <= m ; i ++ ){
        V[b[i]].push_back( b[i] + 1 ) ;
        V[b[i]+1].push_back( b[i] ) ;
    }
    vector< LL > store ;
    for( int i = 1 ; i <= n ; i ++ ){
        if( !ck[i] ){
            DFS( i ) ;
            if( tmp.size() ) sort( tmp.begin() , tmp.end() ) ;
            for( auto x : tmp ){
                store.push_back( x ) ;
            }
            tmp.clear() ;
        }
    }
    bool ok = 1 ;
    sort( a + 1 , a + 1 + n ) ;
    for( int i = 1 ; i <= n ; i ++ ){
        if( a[i] != store[i-1] ) ok = 0 ;
    }
    if( ok ) puts("YES") ;
    else puts("NO") ;
}

void Solve(){
    ResetAll() ;
    Input() ;
    Calculation() ;
}

int main()
{
    int q ;
    q = 1 ;
    scanf("%d",&q) ;
    while( q-- ){
        Solve() ;
    }
    return 0 ;
}
