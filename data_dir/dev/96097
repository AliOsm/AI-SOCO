#include <bits/stdc++.h>

using namespace std;
#define endl "\n"
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
typedef long long ll;
typedef unsigned long long ull;
const double PI = acos(-1);
const int mod = 1e9 + 7;
const int INF = 2e9;
const int MAX=505, N=2e5+10;

vector<vector<int>>g;
int f,b;
bool dfs(int frm,int to,int par,bool fl){
//	cerr<<frm<<" "<<to<<" "<<fl<<endl;
	if(frm==to)
		return true;
	fl|=(frm==f);
	for(int i=0;i<g[frm].size();i++){
		int ch=g[frm][i];
		if(ch==b&&fl)continue;
		if(ch!=par&&dfs(ch,to,frm,fl))
			return true;
	}
	return false;
}

int flw(int nd,int par){
	if(nd==b)
		return -INF;
	int ret=1;
	for(int i=0;i<g[nd].size();i++){
		int ch=g[nd][i];
		if(ch!=par){
			ret+=flw(ch,nd);
		}
	}
	return ret;
}

int bee(int nd,int par){
	if(nd==f)
		return -INF;
	int ret=1;
	for(int i=0;i<g[nd].size();i++){
		int ch=g[nd][i];
		if(ch!=par){
			ret+=bee(ch,nd);
		}
	}
	return ret;
}
int sz[N],par[N];
int get(int x){
	if(x==par[x])
		return x;
	return par[x]=get(par[x]);
}
bool merge(int x,int y){
	int rx=get(x);
	int ry=get(y);
	if(rx==ry)
		return false;
	if(sz[rx]>sz[ry])
		swap(rx,ry);
	sz[rx]+=sz[ry];
	par[ry]=par[rx];
	return true;
}

int main(){
//	ios_base::sync_with_stdio(0);
	cin.tie(0);
// 	srand(time(0));
	ll n;
	while(cin>>n){
		cin>>f>>b;
//		for(int i=0;i<=n;i++)sz[i]=1,par[i]=i;
//		n=rand()%10+1;
//		f=rand()%n+1;
//		b=rand()%n+1;
//		while(b==f)b=rand()%n+1;
		g.clear();
		g.resize(n+1);
		for(int i=0;i<n-1;i++){
			int u,v;
//			u=rand()%n+1;
//			v=rand()%n+1;
//			while(!merge(u,v)){
//				u=rand()%n+1;
//				v=rand()%n+1;
//			}
			cin>>u>>v;
			g[u].push_back(v);
			g[v].push_back(u);
		}
		ll cnt1=1;
		for(int i=0;i<g[f].size();i++){
			ll tmp=flw(g[f][i],f);
			cnt1+=max(tmp,0ll);
		}
//		cerr<<cnt1<<endl;
		ll cnt2=1;
		for(int i=0;i<g[b].size();i++){
			ll tmp=bee(g[b][i],b);
			cnt2+=max(tmp,0ll);
		}
		ll me=n*(n-1)-cnt1*cnt2;
		cout<<me<<endl;
//		cerr<<cnt2<<endl;

//		cout<<flw(f,-1)<<endl;
//		cerr<<"here"<<endl;
//		int ans=0;
//		for(int i=1;i<=n;i++){
//			for(int j=1;j<=n;j++){
////				cerr<<i<<" "<<j<<endl;
//				if(i!=j&&dfs(i,j,-1,f==i))
//					ans++;
////				else if(i!=j)
////					cerr<<i<<" "<<j<<endl;
////				cerr<<ans<<endl;
//			}
//		}
//		if(true){
//			cerr<<n<<" "<<f<<" "<<b<<endl;
//			for(int i=1;i<=n;i++){
//				for(int j=0;j<g[i].size();j++)
//					cerr<<i<<" "<<g[i][j]<<endl;
//			}
//			cerr<<"ME "<<me<<endl;
//			cerr<<"STRESS " <<ans<<endl;
////			return 0;
//		}
//		cout<<ans<<endl;
	}

	return 0;
}
