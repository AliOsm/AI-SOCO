#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define F first
#define S second
#define P_B push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define debug(x) cerr<< #x << ": " << x << endl;
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

const ll mod = 1000 * 1000 * 1000 + 7;
const int MAXN = 1000 * 1000 + 10;
int a[MAXN];
ll t[MAXN], dp[MAXN];

int main()
{
	int n;
	string s;
	cin>> n >> s;
	FR(i, 0, 26)
		cin>> a[i];
	ll mx = 0;
	FR(i, 0, n)
	{
		ll j = i, mn = a[s[i] - 'a'];
		dp[i] = INT_MAX;
		while(i - j + 1 <= mn && j >= 0)
		{
			t[i] = (t[i] + ((j - 1 >= 0)? t[j - 1]:1LL)) % mod;
			dp[i] = min(dp[i], ((j - 1 >= 0)? dp[j - 1]:0) + 1);
			mx = max(mx, i - j + 1);
			j--;
			if(j >= 0) mn = min((ll)a[s[j] - 'a'], mn);
		}
	}
	cout<< t[n - 1] << endl;
	cout<< mx << endl;
	cout<< dp[n - 1] << endl;
	return 0;
}

