// Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
#define double long double

int n,m;
vector<int>v[4];
vector<int>sum[4];
int32_t main()
{
    IOS; 
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        int w,c;
        cin>>w>>c;
        v[w].push_back(c);
    }
    for(int i=1;i<=3;i++)
        sort(v[i].rbegin(),v[i].rend()),sum[i].push_back(0);

    for(int i=1;i<=3;i++)
    {
        for(int j=1;j<=v[i].size();j++)
        {
            int val=sum[i].back()+v[i][j-1];
            sum[i].push_back(val);
        }
    }
    int ans=0;
    for(int i=0;i<=min(m,(int)v[3].size());i++)
    {
        int wt=m-3*i;
        if(wt<0)
            break;
        int low=0;
        int high=min((int)v[2].size(),wt/2);
        while(low<high)
        {
            int mid1=low+(high-low)/3;
            int mid2=high-(high-low)/3;

            int left1=wt-mid1*2;
            int left2=wt-mid2*2;
            int take1=min((int)v[1].size(),left1);
            int take2=min((int)v[1].size(),left2);
            int sum1=sum[2][mid1]+sum[1][take1];
            int sum2=sum[2][mid2]+sum[1][take2];
            if(sum1<sum2)
                low=mid1+1;
            else
                high=mid2-1;
        }
        int left=wt-low*2;
        int take=min((int)v[1].size(),left);
        int sum1=sum[2][low]+sum[1][take];
        ans=max(ans,sum1+sum[3][i]);
    }
    cout<<ans;
}