#include <iomanip>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <cmath>
#include <queue>
#include <bitset>
#include <string>
 
#define ll long long
#define mp make_pair
#define pb push_back
 
using namespace std;
 
const int N = 200010;


int n;
int parent[N];
vector <int> g[N];
bool used[N];
vector <int> res;

void dfs(int v, int p) {
    parent[v] = p;
    for (int u : g[v]) {
        if (u != p) {
            dfs(u, v);
        }
    }
}
 
int main() {
    scanf("%d", &n);
    for (int i = 1; i < n; i++) {
        int u, v;
        scanf("%d%d", &u, &v);
        g[u].pb(v);
        g[v].pb(u);
    }
    int deg = 0, root = -1;
    for (int i = 1; i <= n; i++) {
        if (g[i].size() > deg) {
            deg = g[i].size();
            root = i;
        }
    }
    dfs(root, -1);
    for (int i = 1; i <= n; i++) used[i] = false;
    for (int i = 1; i <= n; i++) {
        if (g[i].size() == 1 && i != root) {
            int v = i;
            bool ok = true;
            while (v != root) {
                if (used[v]) ok = false;
                used[v] = true;
                v = parent[v];
            }
            if (!ok) {
                printf("No");
                return 0;
            }
            res.pb(i);
        }
    }
    printf("Yes\n");
    printf("%d\n", res.size());
    for (int v : res) {
        printf("%d %d\n", root, v);
    }
    return 0;
}