//#pragma GCC optimize("O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4")
//#pragma gcc optimize (unroll-loops)
#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define f first
#define s second
#define y1 bbp
#define sz size()
//#define endl '\n'
using namespace std;
int const N=1e6+4,inf=1e9+7,NN=2e5+1;ll const md=inf;
char ch;
ll ans,n,q,qq,a[25][25],len[N],lk[N],l,k,m;
ll dp[N];
map<ll,ll> mp[21][21];
void dfs(int x,int y,ll xo,int kk)
{
//cout<<x<<" "<<y<<endl;
//    cout<<x<<" "<<y<<" "<<(xo^a[x][y])<<endl;
    if (kk==q)
    {
        mp[x][y][(xo^a[x][y])]++;
        return ;
    }
    if (x<n) dfs(x+1,y,(xo^a[x][y]),kk+1);
    if (y<m) dfs(x,y+1,(xo^a[x][y]),kk+1);
}
void dfs1(int x,int y,ll xo,int kk)
{
//    cout<<x<<"! "<<y<<" "<<(k^xo)<<endl;
//    cout<<x<<" "<<y<<" "<<(k^xo)<<endl;
    if (mp[x][y].count((k^xo))) ans+=mp[x][y][(k^xo)];
//    if (mp[((k^xo))][x][y]) cout<<x<<" "<<y<<" "<<mp[((k^xo))][x][y]<<endl;
    if (kk==qq) return;
    if (x>1) dfs1(x-1,y,(xo^a[x][y]),kk+1);
    if (y>1) dfs1(x,y-1,(xo^a[x][y]),kk+1);
}
main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin>>n>>m>>k;
    for (int i=1;i<=n;i++)
    {
        for (int j=1;j<=m;j++)
        {
            cin>>a[i][j];
        }
    }
    q=(n+m)/2;
    qq=(n+m+1)/2;
    dfs(1,1,0,1);
    dfs1(n,m,0,1);
    cout<<ans;
    return 0;
}