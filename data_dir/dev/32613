// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define ll long long int
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 1013
int dp[N][N];
int w[N], b[N], n, m, wt, cnt;
vi v[N], adj[N];
bool vis[N];

void dfs(int node) {
    vis[node] = 1;
    v[cnt].pb(node);
    for(auto nei: adj[node]) {
        if(!vis[nei]) {
            dfs(nei);
        }
    }
}

int main() {
    fast_io()
    
    cin >> n >> m >> wt;
    for(int i = 1; i <= n; i++) {
        cin >> w[i];
    }
    for(int i = 1; i <= n; i++) {
        cin >> b[i];
    }
    for(int i = 0; i <= wt; i++) {
        dp[0][i] = 0;
    }
    while(m--) {
        int u, v;
        cin >> u >> v;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    cnt = 0;
    for(int i = 1; i <= n; i++) {
        if(!vis[i]) {
            cnt++;
            dfs(i);
        }
    }
    for(int i = 1; i <= cnt; i++) {
        for(int j = 0; j <= wt; j++) {
            dp[i][j] = dp[i - 1][j];
            int wei = 0;
            int beu = 0;
            for(auto gr: v[i]) {
                if(w[gr] <= j) {
                    dp[i][j] = max(dp[i][j], b[gr] + dp[i - 1][j - w[gr]]);
                }
                wei += w[gr];
                beu += b[gr];
            }
            if(wei <= j) {
                dp[i][j] = max(dp[i][j], beu + dp[i - 1][j - wei]);
            }
            wei = beu = 0;
        }
    }
    cout << dp[cnt][wt];
	return 0;
}
