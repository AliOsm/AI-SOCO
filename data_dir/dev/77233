#include <bits/stdc++.h>
using namespace std;

//.define
//#define FILE_IN_OUT
#define RET(_x)                       return std::cout << (_x) << '\n', 0;
#define all(_obj)                     (_obj).begin(), (_obj).end()
#define loop(_n)                      for (int i = 0; i < (_n); ++i)
#define ceilDiv(_dividend, _divider)  (((_dividend) - 1LL + (_divider)) / (_divider))
#define sz(_obj)                      static_cast<int>((_obj).size())
#define debug(_x)                     std::cerr << (#_x) << " = " << (_x) << '\n';
#define endl                          "\n"
template<typename Tp>
inline void outarr(Tp _array, const std::size_t _N, const char* _delim = " ") {
    Tp end = std::next(_array, _N);
    for (Tp current = _array; current != end; ++current) {
        std::cout << *current << _delim;
    }
    std::cout << '\n';
}

//.constant
using ll  = int64_t;
using pii = std::pair<int, int>;
constexpr int INF = 0x3f3f3f3f;
constexpr int MOD = static_cast<const int>(1e9 + 7);

//.data
pii a1[15];
pii a2[15];

inline int good(int i1, int i2) {
    if (a1[i1].first == a2[i2].first && a1[i1].second != a2[i2].second) {
        return a1[i1].first;
    }
    if (a1[i1].first == a2[i2].second && a1[i1].second != a2[i2].first) {
        return a1[i1].first;
    }
    if (a1[i1].second == a2[i2].first && a1[i1].first != a2[i2].second) {
        return a1[i1].second;
    }
    if (a1[i1].second == a2[i2].second && a1[i1].first != a2[i2].first) {
        return a1[i1].second;
    }
    return 0;
}

struct Node {
    int r, i1, i2;
    Node(int _r, int _i1, int _i2)
        : r(_r), i1(_i1), i2(_i2)
    {
    }
};

vector<Node> gp;

//.code
int main() {
#ifdef FILE_IN_OUT
    std::ifstream cin ("input.txt",  std::ios::in);
    std::ofstream cout("output.txt", std::ios::out);
#else
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif

    int n, m;
    cin >> n >> m;
    loop(n) {
        cin >> a1[i].first >> a1[i].second;
    }
    loop(m) {
        cin >> a2[i].first >> a2[i].second;
    }
    loop(n) {
        for (int j = 0; j < m; ++j) {
            if (int r = good(i, j); r) {
                gp.emplace_back(r, i, j);
            }
        }
    }
    bool flg = true;
    for (const auto& it : gp) {
        if (gp[0].r != it.r) {
            flg = false;
            break;
        }
    }
    if (flg) {
        RET(gp[0].r);
    }
    bool fl = true;
    for (int i = 0; i < sz(gp); ++i) {
        for (int j = 0; j < sz(gp); ++j) {
            if (gp[i].i1 == gp[j].i1 && gp[i].r != gp[j].r) {
                fl = false;
                break;
            }
        }
    }
    if (fl) {
        for (int i = 0; i < sz(gp); ++i) {
            for (int j = 0; j < sz(gp); ++j) {
                if (gp[i].i2 == gp[j].i2 && gp[i].r != gp[j].r) {
                    fl = false;
                    break;
                }
            }
        }
    }
    cout << (fl ? 0 : -1) << endl;

#ifdef FILE_IN_OUT
    cin.close();
    cout.close();
#endif
    return 0;
}