#include<bits/stdc++.h> 
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1);
#define E 998244353
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double

using namespace std;

int n,q;
string s;
int dp[251][251][251];
int nxt[26][100000];
int arr[26];

int main()
{
	IOS;
	cin >> n >> q;
	cin >> s;
	REP(i,0,250)
		REP(j,0,250)
			REP(k,0,250)
				dp[i][j][k] = MOD;
	dp[0][0][0]=-1;
	int l1=0,l2=0,l3=0;
	REP(i,0,25)
		arr[i]=MOD;
	for(int i=n-1;i>=0;i--)
	{
		REP(j,0,25)
			nxt[j][i]=arr[j];
		arr[s[i]-'a']=i;
	}
	vector<char>v1,v2,v3;
    REP(t,1,q)
	{
		string u;
		if(t==1)
		    cin.ignore();
		getline(cin,u);
		char choice = u[0];
		int ind=(u[2]-'0');
		if(choice=='+')
		{
			char ch = u[4];
			if(ind==1)
			{
				v1.pb(ch);
				l1++;
				REP(j,0,l2)
				{
					REP(k,0,l3)
					{
						int x=MOD;
						if(l1==1 && j==0 && k==0)
						  x=min(x,arr[ch-'a']);
						else if(dp[l1-1][j][k]<MOD)
							x=min(x,nxt[ch-'a'][dp[l1-1][j][k]]);
						if(j && dp[l1][j-1][k]<MOD)
							x=min(x,nxt[v2[j-1]-'a'][dp[l1][j-1][k]]);
						if(k && dp[l1][j][k-1]<MOD)
							x=min(x,nxt[v3[k-1]-'a'][dp[l1][j][k-1]]);
						dp[l1][j][k]=x;
					}
				}
			}
			else if(ind==2)
			{
				v2.pb(ch);
				l2++;
				REP(j,0,l1)
				{
					REP(k,0,l3)
					{
						int x=MOD;
						if(l2==1 && j==0 && k==0)
						    x=min(x,arr[ch-'a']);
						else if(dp[j][l2-1][k]<MOD)
							x=min(x,nxt[ch-'a'][dp[j][l2-1][k]]);
						if(j && dp[j-1][l2][k]<MOD)
							x=min(x,nxt[v1[j-1]-'a'][dp[j-1][l2][k]]);
						if(k && dp[j][l2][k-1] < MOD)
							x=min(x,nxt[v3[k-1]-'a'][dp[j][l2][k-1]]);
						dp[j][l2][k]=x;
					}
				}
			}
			else
			{
				v3.pb(ch);
				l3++;
				REP(j,0,l1)
				{
					REP(k,0,l2)
					{
						int x=MOD;
						if(l3==1 && j==0 && k==0)
						    x=min(x,arr[ch-'a']);
						else if(dp[j][k][l3-1]<MOD)
							x=min(x,nxt[ch-'a'][dp[j][k][l3-1]]);
						if(j && dp[j-1][k][l3]<MOD)
							x=min(x,nxt[v1[j-1]-'a'][dp[j-1][k][l3]]);
						if(k && dp[j][k-1][l3]<MOD)
							x=min(x,nxt[v2[k-1]-'a'][dp[j][k-1][l3]]);
						dp[j][k][l3]=x;
					}
				}
			}
		}
		else
		{
			if(ind==1)
			{
				REP(i,0,l2)
					REP(j,0,l3)
						dp[l1][i][j]=MOD;
				l1--;
				v1.pop_back();
			}
			else if(ind==2)
			{
				REP(i,0,l1)
					REP(j,0,l3)
						dp[i][l2][j]=MOD;
				l2--;
				v2.pop_back();
			}
			else
			{
				REP(i,0,l1)
					REP(j,0,l2)
						dp[i][j][l3]=MOD;
				l3--;
				v3.pop_back();
			}
		}
		if(dp[l1][l2][l3]<=n)
			cout << "YES\n";
		else
			cout << "NO\n";
	}
}
