#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
#define INF 0x3f3f3f3f
typedef long long ll;
typedef pair<int, int> ii;
#define y1 hdsaiodhaosi
#define y2 jdsakldhaosi

const double eps = 1e-9;
double r, x1, y1, x2, y2;

bool check(double nx) {
	double d = sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
	double m = (y1-y2) / (x1-x2);
	double ny = y1 + m*(nx-x1);
	double dist = sqrt( (nx-x2)*(nx-x2) + (y2-ny)*(y2-ny) );

	return dist > (r+d)/2;
}

int main(void) {
	ios_base::sync_with_stdio(false);

	cout.precision(7);
	cin >> r >> x1 >> y1 >> x2 >> y2;

	double d = sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
	if (d+eps >= r) {
		cout << fixed << x1 << " " << y1 << " " << r << endl;
		return 0;
	}

	if (abs(x1-x2) <= eps) {
		if (y2 > y1)
			cout << fixed << x1 << " " << y1-(r-d)/2 << " " << (r+d)/2 << endl;
		else
			cout << fixed << x1 << " " << y1+(r-d)/2 << " " << (r+d)/2 << endl;
	} else {
		double l;
		double h;

		if (x2 > x1) {
			l = x1-r;
			h = x1;

			int gamb = 500;
			while (gamb--) {
				double mid = (l + h) / 2;
				if (!check(mid)) {
					h = mid;
				} else {
					l = mid;
				}
			}
		} else {
			l = x1;
			h = x1+r;

			int gamb = 500;
			while (gamb--) {
				double mid = (l + h) / 2;
				if (check(mid)) {
					h = mid;
				} else {
					l = mid;
				}
			}
		}


		double m = (y1-y2) / (x1-x2);
		cout << fixed << l << " " << y1 + m*(l-x1) << " " << (r+d)/2 << endl;
	}

	return 0;
}

