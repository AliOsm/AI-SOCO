/* Author haleyk10198 */
/* �@��:  haleyk10198 */
#include <iostream>
#include <fstream>
#include <sstream>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <iomanip>
#include <ctime>
#include <string>
#include <set>
#include <stack>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))
#define EXPN 1<<18

using namespace std;
using namespace __gnu_pbds;

double p[18][18];

double dp[EXPN];
int n;

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	//ios_base::sync_with_stdio(false);
	cin>>n;
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			cin>>p[i][j];
	dp[(1<<n)-1]=1.0;
	for(int mask=(1<<n)-1;mask;mask--){
		int sz=__builtin_popcount(mask);
		sz*=(sz-1);
		if(!sz)
			continue;
		for(int i=0;i<n;i++){
			if(mask&(1<<i)){
				for(int j=0;j<n;j++){
					if(mask&(1<<j)&&j!=i){
						dp[mask^(1<<i)]+=dp[mask]*p[j][i]/sz;
						dp[mask^(1<<j)]+=dp[mask]*p[i][j]/sz;
					}
				}
			}
		}
	}
	cout.setf(ios::fixed);
	cout<<setprecision(6);
	for(int i=0;i<n;i++)
		cout<<dp[1<<i]<<(i==n-1?'\n':' ');
	return 0;
}


