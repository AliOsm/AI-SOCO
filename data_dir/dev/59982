#include<bits/stdc++.h>

using namespace std;

const int maxi =1e6+10;
long long n,k;
long long cnt;
int a[2*maxi];
int c[maxi];
int ob[maxi];

void solve(int n, long long dif)
{
    int id = 1;
    for (int i=1;i<=n;i++)
    {
        int cur = n - 2*i + 1;
        if (cur <= dif)
        {
            dif -= cur;
            ob[n - i + 1] = 1;
            c[id] = n - i + 1;
            id++;
        } else
        {
            c[id] = i + dif;
            id++;
            ob[i+dif] = 1;
            break;
        }
    }


    for (int i=1;i<=n;i++)
        if (!ob[i])
        {
            c[id] = i;
            id++;
        }

    for (int i=1;i<=n;i++)
      printf("%d ",c[i]);

    printf("\n");
}
int main()
{
    cin>>n>>k;

    if (n*(n+1)>2*k) return !printf("-1\n");

    int cur = 0;
    for (int i=1;i<=n;i++){
        a[++cur] = i;
        a[++cur] = i;
    }

    sort(a+1,a+cur +1);
    reverse(a+1, a+cur+1);

    for (int i=1;i<=n;i++)
        cnt+=a[i];

   long long ans = min(cnt, k);

    printf("%lld\n",ans);

    for (int i=1;i<=n;i++)
        printf("%d ",i);
    printf("\n");

    long long dif = ans - n*(n+1)/2;

    solve(n, dif);

    return 0;
}
