#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#include <ext/numeric>
using namespace __gnu_cxx;
using namespace std;
//(≧∇≦) 私はうずまきナルトだと私は最大の火影になります！
//(≧∇≦) I'm Naruto Uzumaki and I will be the greatest Hokage!
const int OO = 0x3f3f3f3f ,N = 1e6+5 ,mod = 1e9+7 ;
const double pi = acos(-1) ,eps = 1e-9 ;
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Uzumaki_Naruto ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define power(n,k) power(n,k,mul())
typedef long long ll ;
typedef unsigned long long ull ;
//(≧∇≦) Dattebayo!
struct mul{
  ll operator()(ll a,ll b){
    return (a*b)%mod;
  }
};
int identity_element(const mul&m){
  return 1;
}
//(≧∇≦) I won't go back on my word... that is my ninja way!
int n ;
int p[N] ,c[N] ;
vector<int> adj[N] ;
vector<int> ans ;
bool vis[N] ;
int root ;
void dfs(int p,int gp){
    vis[p]=1;
    int one=c[p] ;
    for(int ch:adj[p]){
        if(ch==gp)continue;
        dfs(ch,p) ;
        one += c[ch] ;
    }
    if(adj[p].size()+1==one)ans.push_back(p);
}
int main(){
    cin>>n;
    for(int i=1;i<=n;++i){
        scanf("%d%d",p+i,c+i);
        if(p[i]==-1){
            root=i;
            continue;
        }
        adj[p[i]].push_back(i) ;
    }
    dfs(root,-1) ;
    if(!ans.size())return cout<<-1,0;
    sort(ans.begin(),ans.end());
    for(int go:ans)printf("%d ",go);
    return 0 ;
}
