#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353  
#define inf 1e9
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 1000005
bool vis[mx];
int arr[mx];
vector<int> v[mx];
vector<int> len[mx];
void dfs(int x,int d)
{
	vis[x] = 1;
	if(!vis[arr[x]])
	{
		dfs(arr[x],d + 1);
	}
	else
	{
		len[d].pb(arr[x]);
	}
}
int n;
int ans[mx];
void merge(int x,int z)
{
//	cout << x << " " << z << endl;
	int y = x;
	vector<int> temp1,temp2;
	temp1.pb(x);
	while(arr[x] != y)
	{
		temp1.pb(arr[x]);
		x = arr[x];
	}
	y = z;
	temp2.pb(z);
	while(arr[z] != y)
	{
		temp2.pb(arr[z]);
		z = arr[z];
	}
	fl(i,0,temp1.size())
	{
		ans[temp1[i]] = temp2[i];
		ans[temp2[i]] = temp1[(i + 1)%temp1.size()];
	}
}
void odd(int x)
{
	int y = x;
	vector<int> temp;
	temp.pb(y);
	while(arr[x] != y)
	{
		temp.pb(arr[x]);
		x = arr[x];
	}
	int i = 1, j = temp.size() / 2 + 1;
	int cnt = temp.size();
	int pre = y;
	cnt--;
	while(cnt--)
	{
		if(cnt&1)
		{
			ans[pre] = temp[j];
			pre = temp[j++];
		}
		else
		{		
			ans[pre] = temp[i];
			pre = temp[i++];
		} 	
	}
	ans[pre] = y;
}
main()
{
	fast;
	cin >> n;
	fl(i,1,n+1)
	{
		cin >> arr[i];
	}
	fl(i,1,n+1)
	{
		if(!vis[i])
		{
			dfs(i,1);
		}
	}
	fl(i,1,n+1)
	{
		if(i % 2 == 0 && len[i].size()%2 != 0)
		{
			cout << -1;
			return 0;
		}
	}
	fl(i,1,n+1)
	{
		if(i&1)
		{
			for(auto j : len[i])
			{
				odd(j);
			}
		}
		else
		{
			fl(j,0,len[i].size())
			{
				if(j&1)
					merge(len[i][j],len[i][j-1]);	
			}
		}	
	}
	fl(i,1,n+1)
	{
		cout << ans[i] << " ";
	}
 
}