#include <stdio.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#define pb push_back
using namespace std;

const int MAXN = (int)1e5 + 5;

vector<int> seq[MAXN];
int mini[MAXN];
int maxi[MAXN];
bool has[MAXN];

vector<pair<int, int>> small;
vector<pair<int, int>> big;

int main(void) {
    int n;
    long long ans = 0;

    scanf(" %d", &n);
    for (int i = 0; i < n; i++) {
        int l;
        scanf(" %d", &l);

        seq[i].resize(l);
        for (int j = 0; j < l; j++) scanf(" %d", &seq[i][j]);

        has[i] = false;
        mini[i] = maxi[i] = seq[i][0];
        for (int j = 1; j < l; j++) {
            if (seq[i][j] > mini[i]) has[i] = true;

            mini[i] = min(mini[i], seq[i][j]);
            maxi[i] = max(maxi[i], seq[i][j]);
        }

        small.pb({mini[i], i});
        big.pb({maxi[i], i});
    }
    sort(small.begin(), small.end());
    sort(big.begin(), big.end());

    /* printf("debug\n");
    for (int i = 0; i < n; i++) printf("%d %d\n", small[i].first, small[i].second);
    printf("big\n");
    for (int i = 0; i < n; i++) printf("%d %d\n", big[i].first, big[i].second); */

    int right = 0;
    int aux = 0;
    for (int i = 0; i < n; i++) {
        int val = small[i].first;
        int idx_left = small[i].second;

        //printf("i = %d, ans = %lld\n", i, ans);

        if (has[idx_left]) {
            ans += n - aux;
            continue;
        } else {
            while(right < n && big[right].first <= val) {
                //printf("right = %d, big = %d, val = %d\n", right, big[right].first, val);
                int idx_right = big[right].second;
                if (has[idx_right]) {
                    ans += n - i;
                    aux++;
                }
                right++;
                //printf("end right = %d\n", right);
            }
        }
        //printf("i = %d, right = %d, summing = %d\n", i, right, n - right);
        ans += n - right;
    }
    printf("%lld\n", ans);
    return 0;
}
