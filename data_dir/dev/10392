#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

#define INF (1<<29)
typedef long long ll;

int T;
string t,s;
int a[110];

map <pair <int, ll>, ll> mp;

ll func(int start, ll step){
    if(step == 0) return 0;
    if(step == 1) return a[start];
    
    pair <int, ll> st = make_pair(start, step);
    if(mp.find(st) != mp.end()) return mp[st];
    
    int i;
    for(i=60;;i--) if((1ll<<i) < step) break;
    ll ans = func(start, (1ll<<i));
    int start2 = (int)((start + ans) % T);
    ans += func(start2, step - (1ll<<i));
    return mp[st] = ans;
}

int main(void){
    int b,d,i,j,k;
    
    cin >> b >> d >> t >> s;
    
    int S = s.length(), _T = t.length();
    T = _T;
    
    REP(i,T) a[i] = INF;
    
    int start;
    REP(start,T){
        j = 0;
        REP(i,10000){
            if(t[(start+i)%T] == s[j]) j++;
            if(j == S){
                a[start] = i + 1;
                break;
            }
        }
    }
    
    if(a[0] == INF){
        cout << 0 << endl;
        return 0;
    }
    
    ll maxdist = (ll)T * (ll)b;
    ll high = maxdist+1, low = 0;
    while(high-low > 1){
        ll mid = (low + high) / 2;
        if(func(0, mid) <= maxdist) low = mid; else high = mid;
    }
    
    cout << low / d << endl;
    
    return 0;
}
