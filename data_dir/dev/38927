/////////////////////////   _LeMur_
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 1000005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

long long c;
long long hr , hb , wr , wb;

int main(){
    cin >> c >> hr >> hb >> wr >> wb;
    if(max(wr , wb) >= 10000){
        if(wr < wb){
            swap(wr , wb);
            swap(hr , hb);
        }
        long long answ = 0;
        for(long long i=0;i<=1000*1000;i++){
            long long a = c - wr * i;
            if(a < 0)break;
            long long j = a / wb;
            answ = max(answ , i * hr + j * hb);
        }
        cout << answ << endl;
        return 0;
    }
    if(hr * wb > wr * hb){
        swap(hr , hb);
        swap(wr , wb);
    }
    long long answ = 0;
    for(int i=0;i<=wb;i++){
        long long a = c - wr * i;
        if(a < 0)break;
        long long j = a / wb;
        answ = max(answ , i * hr + j * hb);
    }
    cout << answ << endl;
    return 0;
}
