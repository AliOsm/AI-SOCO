#include <bits/stdc++.h>
#define  FOR(i,x,n) for(int i=x;i<n;i++)
#define rFOR(i,x,n) for(int i=x;i>n;i--)
#define SZ(x) (int)x.size()
const int SIZE=1e3+5;
typedef long long ll;
using namespace std;

char s[SIZE];
bool Prime[SIZE];
pair<int,char> Map[SIZE];

void PrimeFactorization()
{
    FOR(i,2,SIZE)
        if(!Prime[i])
            FOR(j,i+i,SIZE)
                Prime[j]=1, j+=i-1;
}

void BuildMap(int sz)
{
    FOR(i,0,26)
        Map[i].second=(char)(i+'a');
        
    FOR(i,0,sz)
        Map[s[i]-'a'].first++;
    
    sort(Map,Map+26);
    reverse(Map,Map+26);
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL),cout.tie(NULL);
    
    scanf("%s",&s);
    int n=strlen(s);
    
    PrimeFactorization();
    BuildMap(n);
    
    int NumPrime=0;
    FOR(i,n/2+1,n+1)
        NumPrime+=(!Prime[i]);
    
    int NumEqual=n-NumPrime-1;
    
    if(NumEqual>Map[0].first)
        { printf("%s","NO"); return 0; }
    
    s[0]='.';
    FOR(i,2,n+1)
    {
        if(i>n/2 && !Prime[i]) 
            s[i-1]='.';
        else 
            s[i-1]=Map[0].second, 
            Map[0].first--;
    }
    
    int idxMap=0;
    FOR(i,0,n)
    {
        if(s[i]=='.')
        {
            while(!Map[idxMap].first) 
                idxMap++, idxMap%=26;
            s[i]=Map[idxMap].second, 
            Map[idxMap].first--;
        }
    }
    
    printf("%s%s","YES\n",s);
}