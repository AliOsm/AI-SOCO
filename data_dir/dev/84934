#include <iostream>
#include <cstdio>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <list>

using namespace std;

//int res,rres;
vector<int> r,rr,trash;
int n,m;
int color[100500];
pair<int,int> z[100500];
int visited[100500];
vector<pair<int,int> > e[100500];

void go()
{
    for(int i=0;i<m;i++)
    {
        if(color[i]==1 && visited[z[i].first]==0)
        {
            vector<int> x[2];
            list<int> st;
            int u = z[i].first;
            int v = z[i].second;
            //c[i] = 0;
            visited[u] = 1;
            visited[v] = 2;
            st.push_back(u);
            st.push_back(v);
            while(st.begin()!=st.end())
            {
                int u = st.front();
                x[visited[u]-1].push_back(u);
                st.pop_front();
                for(int j=0;j<e[u].size();j++)
                {
                    int v = e[u][j].first;
                    int edge = e[u][j].second;
                    if(visited[v]==0)
                    {
                        if(color[edge] == 0 )
                        {
                            visited[v] = visited[u];
                        }else
                            visited[v] = 3-visited[u];
                        st.push_back(v);
                    }else
                    {
                        if(visited[v] == visited[u] && color[edge]==1){r = trash; return;}else
                        if(visited[v] != visited[u] && color[edge]==0){r = trash; return;}
                        //c[edge] = 0;
                    }
                }
            }
            int ind = 0;
            if(x[0].size()>x[1].size()) ind = 1;
            for(int j=0;j<x[ind].size();j++)
                r.push_back(x[ind][j]);
        }
    }

}

int main()
{

    scanf("%d%d",&n,&m);
    trash.resize(2*n);

    for(int i=0;i<m;i++)
    {
        int u,v;
        char c;
        scanf("%d %d %c",&u,&v,&c);u--;v--;
        e[u].push_back(make_pair(v,i));
        e[v].push_back(make_pair(u,i));
        z[i] = make_pair(u,v);
        if(c=='B') color[i]=1;
    }

//    res = 1e9;
    for(int i=0;i<n;i++)
        visited[i] = 0;
    go();
    //int rres = res;
    swap(rr,r);
    //res = 1e9;
    for(int i=0;i<n;i++)
        visited[i] = 0;
    for(int i=0;i<m;i++)
        color[i] = 1 - color[i];
    go();
    if(rr.size()<r.size())
    {
        //res = rres;
        swap(rr,r);
    }

    if(r.size()>n){cout <<-1<<endl; return 0;}
    printf("%d\n",r.size());
    for(int i=r.size()-1;i>=0;i--)
        printf("%d%c",r[i]+1," \n"[i==0]);
    return 0;
}
