#include<iostream>
#include<algorithm>
#include<map>
#include<bitset>
#include<set>
#include<vector>
#include<queue>
#include<deque>
#include<stack>
#include<string>
#include<string.h>
#include<cstring>
#include<locale>
#include<cmath>
#include<math.h>
using namespace std;
#define ll  long long int
#define ld long double
int GCD(int x, int y) { return !y ? x : GCD(y, x % y); }
int LCM(int x, int y){ return x*y / GCD(x, y); }
ll ceilDivision(ll dividend, ll divisor){ return (dividend + divisor - 1) / divisor; }
bool check(pair<ll, ll> left, pair<ll, ll> right)
{
        return left.first > right.first;
}
int main()
{
    ll size, temp1, temp2, result = 0;
    cin >> size;
    vector<pair<ll, ll> >negative;
    vector<pair<ll, ll> >positive;
    for (ll i = 0; i < size; i++)
    {
        cin >> temp1 >> temp2;
        if (temp1>0)
            positive.push_back(make_pair(temp1, temp2));
        if (temp1<0)
            negative.push_back(make_pair(temp1, temp2));
    }
    sort(positive.begin(), positive.end());
    sort(negative.begin(), negative.end(),check);
    for (ll i = 0; i < min(positive.size(), negative.size()); i++)
        result += negative[i].second + positive[i].second;
    if (positive.size()>negative.size())
        result += positive[negative.size()].second;
    else if (positive.size()<negative.size())
        result += negative[positive.size()].second;
    cout << result << endl;
    return 0;
}