#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("board.in");ofstream out("board.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    ll a; cin>>a;
    vec<ll> m1(a), m2(a);
    for(int q=0; q<a; q++) cin>>m1[q];
    for(int q=0; q<a; q++) cin>>m2[q];
    vec<vec<vec<ll>>> dp(a, vec<vec<ll>>(2, vec<ll>(2)));
    dp[0][0][1] = m1[0];
    dp[0][1][1] = m2[0];
    for(int q=1; q<a; q++){
        for(int w=0; w<2; w++){
            dp[q][w][0] = max(max(dp[q-1][0][0], dp[q-1][0][1]), max(dp[q-1][1][0], dp[q-1][1][1]));
            dp[q][w][1] = (w==1 ? m2[q] : m1[q])+max(dp[q-1][w^1][1], max(dp[q-1][0][0], dp[q-1][1][0]));
        }
    }
    int q=a;
    cout<<max(max(dp[q-1][0][0], dp[q-1][0][1]), max(dp[q-1][1][0], dp[q-1][1][1]));
}