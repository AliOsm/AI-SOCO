//basma taala
//ya_hossein
#include<bits/stdc++.h>
using namespace std;
long long int ans;
long long int call(long long int x, long long int l, long long int r)
{
	long long int p;
	for(long long int i = l; i <= l + 10; i++)
	{
		p = i;
		ans = min(ans, p);
		for(long long int j = i + 1, h = 1; h < x && j <= r; h++, j++)
		{
			p = p ^ j;
			ans = min(ans, p);
		}
	}
}
long long int call1(long long int x, long long int l, long long int r)
{
	long long int p;
	for(long long int i = l; i <= l + 10; i++)
	{
		p = i;
		for(long long int j = i + 1, h = 1; h < x && j <= r; h++, j++)
		{
			p = p ^ j;
			if(p == ans)
			{
				cout << p << endl << h + 1 << endl;
				for(long long int k = i; k <= j; k++)
				{
					cout << k << ' ';
				}
				return 0;
			}
		}
	}
}
int main()
{
	long long int l, r, k;
	cin >> l >> r >> k;
	ans = l;
	if(k == 1)
	{
		cout << l << endl;
		cout << 1 << endl << l;
		return 0;
	}
	if(k == 2)
	{
		long long int ans = l;
		for(long long int f = l; f <= l + 3 && f < r; f++)
		{
			ans = min(ans, f ^ (f + 1));
		}
		if(ans == l)
		{
			cout << l << endl << 1 << endl << l;
			return 0;
		}
		for(long long int f = l; f <= l + 3 && f < r; f++)
		{
			if(ans == (f ^ (f + 1)))
			{
				cout << ans << endl;
				cout << 2 << endl;
				cout << f << ' ' << f + 1;
				return 0;
			}
		}
	}
	if(k >= 4)
	{
		{
			long long int h = r;
			int y = 0;
			while(h)
			{
				h /= 2;
				y++;
			}
			y--;
			y--;
			long long int o = 3;
			while(y--)
			{
				o = o << 1;
			}
			if(o <= r && (o ^ (o - 1)) >= l)
			{
				cout << 0 << endl;
				cout << 3 << endl << o << ' ' << o - 1 << ' ' << ((o - 1)^(o));
				return 0;
			}
			
		}
		long long int p = 2;
		while(p - 1 <= r)
		{
			p*=2;
		}
		p/=2;
		long long int j = p / 2;
		long long int h = j - 1;
		if(h >= l)
		{
			cout << 0 << endl << 3 << endl << p - 1 << ' ' << j << ' ' << j - 1;
			return 0;
		}
		call(4, l, r);
		if(ans == l)
		{
			cout << l << endl;
			cout << 1 << endl << l;
			return 0;
		}
		call1(4, l, r);
		return 0;
	}
	if(k == 3)
	{
			{
			long long int h = r;
			int y = 0;
			while(h)
			{
				h /= 2;
				y++;
			}
			y--;
			y--;
			long long int o = 3;
			while(y--)
			{
				o = o << 1;
			}
			if(o <= r && (o ^ (o - 1)) >= l)
			{
				cout << 0 << endl;
				cout << 3 << endl << o << ' ' << o - 1 << ' ' << ((o - 1)^(o));
				return 0;
			}
			
		}
		long long int p = 2;
		while(p - 1 <= r)
		{
			p*=2;
		}
		p/=2;
		long long int j = p / 2;
		long long int h = j - 1;
		if(h >= l)
		{
			cout << 0 << endl << 3 << endl << p - 1 << ' ' << j << ' ' << j - 1;
			return 0;
		}
		cout << 1 << endl << 2 << endl;
		if(l % 2 == 0)
		{
			cout << l << ' ' << l + 1;
		}
		else
		{
			cout << l + 1 << ' ' << l + 2;
		}
	}
}