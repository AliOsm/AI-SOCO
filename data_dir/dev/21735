#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};


struct P
{
    int x,y;
};
long long x,y,z,mod=1000000007;
vector<int> v,v1;

int i,n,m,k,a,d,b,c;
int e;

long long o[211111];
int l[1];
int j[1];

//stack<int> s;
//unordered_set<int> s;
queue<int> q;
P u[1];
//char r[2221][2222];
string r;
//queue<int> q;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());
bool as(P a,P b)
{
    return a.x<b.x;
}
//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();


int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;t++)
    {
        scanf("%d %d",&b,&c);
        for(int t=1;t<=b;o[t]+=o[t-1],t++)
            scanf("%lld",&o[t]);
        if(o[b]%2!=c%2)
        {
            puts("NO");
        }
        else
        {
            int i=1,k=0;
            for(int t=1;t<=b;t++)
                if(o[t]%2==i)
            {
                q.push(t);
                i=1-i;
            }
            if(q.size()<c)
            {
                puts("NO");
            }
            else
            {
                puts("YES");
                for(int t=1;t<c;t++,q.pop())
                    printf("%d ",q.front());
                printf("%d\n",b);
            }
            for(;q.size();q.pop());
        }
    }
}
