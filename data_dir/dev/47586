#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <set>
#include <iomanip>
#include <deque>
#include <cassert>
#include <ctime>
using namespace std;
#define INF 2001001001001000
#define MOD 1000000007
#define endl '\n'
typedef long long ll;
typedef long double ld;

ll a[101];
int N;
string S;
ll dp[101][101][101];

ll solve(int L, int R, int pref){
  //cout<<"SOLVE "<<L<<' '<<R<<' '<<pref<<endl;
  if (L>R)
    return 0;
  if (L==R)
    return a[pref];
  if (dp[L][R][pref]!=0)
    return dp[L][R][pref];
  dp[L][R][pref]=solve(L+1,R,1)+a[pref];
  for (int i=L+1;i<=R;i++){
    if (S[i]==S[L])
      dp[L][R][pref]=max(dp[L][R][pref],solve(L+1,i-1,1)+solve(i,R,pref+1));
  }
  //dp[L][R][pref]=max(dp[L][R][pref],a[pref]+total);
  return dp[L][R][pref];
}

int main()
{
  //ios_base::sync_with_stdio(0);cin.tie(0);
  cin>>N>>S;
  for (int i=1;i<=N;i++)
    cin>>a[i];
  cout<<solve(0,N-1,1)<<endl;
  /*
  for (int i=0;i<N;i++)
    for (int j=i;j<N;j++)
      for (int k=1;k<=N;k++)
	cout<<"DP "<<i<<' '<<j<<' '<<k<<": "<<dp[i][j][k]<<endl;
  */
  return 0;
}
