#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>

using namespace std;
 
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int,int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
vector<LL> res;
void go(int st, LL k)
{
	LL l=1,r=2000000000000000000ll;
	LL c=(1ll<<st);
	c--;
	LL ans=-1;
	while (l<=r)
	{
		LL m=(l+r)/2;
		LL now=k;
		if (now/m<c)
		{
			r=m-1;
			continue;
		}
		now-=m*c;
		now*=2;
		if (now/m>=m-1)
		{
			if (m*(m-1)==now)
			{
				ans=m;
				break;
			}
			if (m*(m-1)<now)
				l=m+1;
			else
				r=m-1;
		}
		else
			r=m-1;
	}
	if (ans!=-1)
	{
		LL val=(c+1)*ans;
		int cnt=0;
		while (val%2==0)
		{
			val/=2;
			cnt++;
		}
		if (cnt==st)
		{
			res.push_back((c+1)*ans);
		}
	}
}
int main()
{
#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	double beg=clock();
#endif

	LL k;
	cin>>k;
	FOR(i,0,65)
		go(i,k);
	if (res.size()==0)
		cout<<-1<<endl;
	else
	{
		sort(res.begin(),res.end());
		FOR(i,0,res.size())
			cout<<res[i]<<endl;
	}

#ifdef Fcdkbear
	double end=clock();
	fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}