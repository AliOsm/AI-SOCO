#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
const ll MOD = 4000000007;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll gcdExtended(ll a, ll b, ll *x, ll *y)
{
	if (a == 0)
	{
		*x = 0, *y = 1;
		return b;
	}
	ll x1, y1;
	ll gcd = gcdExtended(b%a, a, &x1, &y1);
	*x = y1 - (b/a) * x1;
	*y = x1;
	return gcd;
}

ll MODInverse(ll a, ll m)
{
	ll x, y;
	ll g = gcdExtended(a, m, &x, &y);
	ll ans = (x%m + m) % m;
	return ans;
}

int n, s, ans, lim;
int a[1234567];

int main()
{
	ssync;
	int x;
	cin >> n >> s;
	for(int i=0; i<n; i++)
	{
		cin >> x;
		if(i == s-1)
		{
			if(x!=0)
				ans++;
			a[0]++;
			continue;
		}
		else
			a[x]++;
		lim=max(lim, x);
	}
	if(lim == 0)
	{
		cout << ans+n-1 << "\n";
		return 0;
	}
	for(int i=1; i<=lim; i++)
	{
		if(a[i] == 0)
		{
			a[i]=1;
			ans++;
			if(a[0]>1)
				a[0]--;
			else
			{
				a[lim]--;
				while(!a[lim])
					lim--;
			}
		}
	}
	cout << ans+a[0]-1 << "\n";
	return 0;
}
