///****In the name of Allah, most Gracious, most Compassionate****//

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int, int> pii;

#define ALL(a) a.begin(), a.end()
#define FastIO ios::sync_with_stdio(false); cin.tie(nullptr);cout.tie(nullptr)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

#define DBG(a) cout<< #a <<" --> "<<(a)<<endl
#define NL cout<<"\n"

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const int N=3e5+5;
const int oo=1e9+7;
vector<pii> x;
double dist(int i,int j)
{
    ll xx = x[i].first - x[j].first;
    ll yy = x[i].second - x[j].second;
    return sqrtl(xx*xx + yy* yy );
}
double now(int ww,int xx, int yy, int zz)
{
    return dist(ww,xx) + dist(xx,yy) + dist(yy,zz);
}
#define forn(i,n) for(int i = 0 ; i <n; i++ )
int32_t main()
{
    FastIO;
    int n,m;
    cin>>n>>m;
    set<pii> st;
    for(int i=0;i<5;i++)
    {
        for(int j=0;j<3;j++) {
            if(i<=n and j<=m) st.insert({i,j});
            if(m-j>=0 and i<=n) st.insert({i , m-j});
            if(n-i>=0 and j<=m) st.insert({ n-i , j} ) ;
            if(m-j>=0 and n-i>=0) st.insert({ n-i ,m-j});
        }
    }
    x= vector<pii> (ALL(st));
    //for(auto i: x) cout<<i<<" "; NL;
    int ww = -1  , xx  = - 1 , yy= -1 ,zz = -1 ;
    double ans  = 0 ;
    n= x.size();
    forn(i,n)
        forn(j,n)
            forn(k,n)
                forn(l,n)
                {
                    if(i==j) continue;
                    if(i==k) continue;
                    if(i==l) continue;
                    if(k==j) continue;
                    if(l==j) continue;
                    if(l==k) continue;
                    double xxx = now(i,j,k,l);
                    if(xxx >= ans)
                    {
                        ans = xxx ;
                        ww = i , xx = j, yy = k , zz = l;
                    }
                }
    cout<<x[ww].first<<" "<<x[ww].second<<"\n";
    cout<<x[xx].first<<" "<<x[xx].second<<"\n";
    cout<<x[yy].first<<" "<<x[yy].second<<"\n";
    cout<<x[zz].first<<" "<<x[zz].second<<"\n";
}
