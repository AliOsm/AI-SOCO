#include <bits/stdc++.h>

using namespace std;
const int N = 2e5 + 9;
vector < int > adj[N];
int col[N] , l , r , n , m , k, ans , c;
bool vis[N];
map<int , int> cnt;
void dfs(int s){
    vis[s] = 1;
    c++;
   // if(adj[s].size())
    cnt[col[s]]++;
    for(int i=0;i<adj[s].size();++i){
        if(!vis[adj[s][i]]){
            dfs(adj[s][i]);
        }
    }


}
int main()
{
    cin >> n >> m >> k;
    for(int i=1;i<=n;++i)
        cin >> col[i];
    while(m--){
        cin >> l >> r;
        adj[l].push_back(r);
        adj[r].push_back(l);
    }
    int mini;
    for(int i=1;i<=n;++i){
        if(!vis[i]){
             mini = 1e9;
            if(!cnt.empty())
            cnt.clear();
            c = 0;
            dfs(i);
           // cout << i << endl;
            int sz = cnt.size();
            for(auto x : cnt){
                int a = x.first , b = x.second;
                //cout << i << " " << a << " " << b << " " ;
                if(a<=k){
                    mini = min(mini , c-b);
                }
            }
            if(mini!=1e9)
            ans+=mini;


        }

    }
    cout << ans;
    return 0;
}
