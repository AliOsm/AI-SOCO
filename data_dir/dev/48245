#include<bits/stdc++.h>

#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define emp What is it
#define SORRY FUL Accepted 
#define dimash the top one
#define I wish 
#define you be a little more calm
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)
#define int ll
using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int mxn = 1e6 + 9;
const int N = 5e3 + 123;                                          
const int NN = 5e5 + 123;
const int PRI = 555557;
const int pri = 997;

int tests = 1;
ll n, m, k, a, x[401010], ans;
bool u[401010];
ll p[401010];

bool check (int pos) {
	for (int i = 1; i <= n; i ++) p[i] = 0;
	for (int i = 1; i <= pos; i ++)
		p[x[i]] = 1;
	for (int i = 1; i <= n; i ++)
		p[i] += p[i - 1];

	int cur = 1;
	int cnt = 0;

	while(cur <= n) {
		if(cur + a - 1 <= n && p[cur + a - 1] == p[cur - 1]) {
			cnt ++;
			if(cnt == k) break;
			cur += a;		
		}
		cur ++;
	}
	

	return cnt == k;
}

inline void Solve () {
	// easy
	cin >> n >> k >> a;
	cin >> m;
	for (int i = 1; i <= m; i ++) {
		cin >> x[i];
	}

	if(check(m)) {
		cout << -1;
		exit(0);
	}

	ll l = 1, r = m;
	bool ok = 0;
	while (l <= r) {
		int mid = (l + r) / 2;
		if (!check(mid)) {
			r = mid - 1;
			ans = mid;
		} else l = mid + 1;
	}

    cout << ans;
}

 main () {
	SpeedForce;
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);	
//	cin >> tests;
	while(tests --) {
		Solve ();
		// Ee Zadrot
	}	
}