#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second

const int sz=2e5+4;
int n;
vll adjlist[sz];
int a[sz];
mll ans[sz];
int ret = 0;
void dfs(int node,int par){
	if(a[node]>1) ret=max(ret,1);
	for(int i:adjlist[node]){
		if(i!=par) dfs(i,node);
	}
	int k=a[node];
	rep(i,2,int(sqrt(a[node]))+1){
		if(k%i==0){
			ans[node][i]=1;
		}
		while(k%i==0) k/=i;
	}
	if(k>1) ans[node][k]=1;
	vll kk,pp;
	for(auto i:adjlist[node]) kk.pb(i);
	for(auto i:ans[node]) pp.pb(i.F);
	for(int i:kk){
		if(i!=par)
		for(auto j:pp){
			ret=max(ret,ans[i][j]+ans[node][j]);
			
			ans[node][j]=max(ans[node][j],ans[i][j]+1);
		}
	}
}
void solve(){  
	cin>>n;
	rep(i,1,n+1) cin>>a[i];
	rep(i,0,n-1){
		int x,y;
		cin>>x>>y;
		adjlist[x].pb(y);
		adjlist[y].pb(x);
	}  
	dfs(1,0);
	cout<<ret<<endl;
}	

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}