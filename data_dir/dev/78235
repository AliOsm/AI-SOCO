#include<bits/stdc++.h>
using namespace std;
#define m1 make_pair
#define ll long long int
/*
  CREATED BY VISHAL SOM:
  DATE:16/10/18 
     Shortest Paths   DP  BFS
*/
/*
void dfs(vector<int> adj[],bool visited[],int u)
{
    visited[u]=1;
    for(int i=0;i<adj[u].size();i++)
    {
        if(!visited[adj[u][i]])
        dfs(adj,visited,adj[u][i]);
    }
}
*/

int main()
{
 int n,m;
 cin>>n>>m;
 vector<int> adj[n+1];int u,v;
 for(int i=0;i<m;i++)
 {
   cin>>u>>v;
   adj[u].push_back(v);
 }
 int dp[n+1][n+1];
 for(int i=0;i<=n;i++)
 for(int j=0;j<=n;j++)
 dp[i][j]=0;
 for(int i=1;i<=n;i++)
 {
   dp[i][i]=0;
   bool visited[n+1]={0};
   visited[i]=1;
   queue<int>q;
   q.push(i);
   while(!q.empty())
   {
     u=q.front();
     q.pop();
     for(int j=0;j<adj[u].size();j++)
     if(!visited[adj[u][j]])
     {
       dp[i][adj[u][j]]=1+dp[i][u];
       visited[adj[u][j]]=1;
       q.push(adj[u][j]);
     }
   }
   
 }
// cout<<dp[2][1]<<endl;
// for(int i=1;i<=n;i++)
 //cout<<dp[i][1]<<" ";
 //cout<<endl;
 int ansa,ansb,ansc,ansd,mx=0;
 vector<pair<int,int>> y[n+1];vector<pair<int,int>> z[n+1];vector<int> x[n+1];
 vector<int> t[n+1];
 for(int Y=1;Y<=n;Y++)
 {
   for(int a=1;a<=n;a++)
   {
     if(Y!=a&&dp[a][Y]!=0)
     y[Y].push_back(m1(dp[a][Y],a));
     //cout<<dp[a][Y]<<endl;
   }
   //cout<<y[1][0].second<<endl;
   sort(y[Y].begin(),y[Y].end());
   reverse(y[Y].begin(),y[Y].end());
   if(y[Y].size()>4)
   y[Y].resize(4);
   for(int j=0;j<y[Y].size();j++)
   x[Y].push_back(y[Y][j].second);
   
 }
 //cout<<y[1][0].second<<endl;
// cout<<x[1][0]<<" "<<x[1][1]<<" "<<x[1][2]<<" "<<x[1][3]<<endl;
 for(int Z=1;Z<=n;Z++)
 {
   for(int t=1;t<=n;t++)
   {
     if(Z!=t&&dp[Z][t]!=0)
     z[Z].push_back(m1(dp[Z][t],t));
   }
   sort(z[Z].begin(),z[Z].end());
   reverse(z[Z].begin(),z[Z].end());
   if(z[Z].size()>4)
   z[Z].resize(4);
   for(int j=0;j<z[Z].size();j++)
   t[Z].push_back(z[Z][j].second);
 }
 for(int Y=1;Y<=n;Y++)
 {
   for(int Z=1;Z<=n;Z++)
   {
     if(dp[Y][Z]!=0)
     {
     for(int x1=0;x1<x[Y].size();x1++)
     {
       int X=x[Y][x1];
       for(int t1=0;t1<t[Z].size();t1++)
       {
         int T=t[Z][t1];
         int sum=dp[X][Y]+dp[Y][Z]+dp[Z][T];
         //if(X!=Y&&Z!=X&&X!=T)
         if(sum>mx&&dp[X][Y]&&dp[Z][T]&&X!=Z&&X!=T&&Y!=T)
         {
           ansa=X;
           ansb=Y;ansc=Z;ansd=T;
           mx=sum;
         }
       }
     }
     }
   }
 }
 //cout<<mx<<endl;
 cout<<ansa<<" "<<ansb<<" "<<ansc<<" "<<ansd<<endl;
}