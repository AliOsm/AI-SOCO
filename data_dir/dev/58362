#include <bits/stdc++.h>
using namespace std;

int A[200005], B[200005];

map<int, int> Z;
stack< pair<int, int> > X, Y;

int getLargest()
{
    while(1)
    {
        map<int, int>::iterator it = Z.end();
        it--;

        if(it->second==0)
        {
            Z.erase(it);
            continue;
        }

        it->second--;
        return it->first;
    }
}

int getSmallest()
{
    while(1)
    {
        map<int, int>::iterator it = Z.begin();

        if(it->second==0)
        {
            Z.erase(it);
            continue;
        }

        it->second--;
        return it->first;
    }
}

int main()
{
    int N, M;
    scanf("%d %d", &N, &M);

    for(int i=1; i<=N; i++)
    {
        scanf("%d", &A[i]);
        Z[ A[i] ]++;
    }

    while(M--)
    {
        int t, r;
        scanf("%d %d", &t, &r);

        while(!X.empty() && X.top().second<=r)
            X.pop();

        X.push({t, r});
    }

    X.push({0, 0});

    while(!X.empty())
    {
        Y.push(X.top());
        X.pop();
    }

    int ptr = N;

    while(ptr>Y.top().second)
    {
        B[ptr] = A[ptr];
        Z[ A[ptr] ]--;
        ptr--;
    }

    while(Y.size()>1)
    {
        pair<int, int> x = Y.top();
        Y.pop();

        int type = x.first;

        while(ptr>Y.top().second)
        {
            if(type==1)
                B[ptr--] = getLargest();
            else
                B[ptr--] = getSmallest();
        }
    }

    for(int i=1; i<=N; i++)
        printf("%d ", B[i]);
    printf("\n");

    return 0;
}
