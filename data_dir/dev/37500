
// Target Expert 

/*
 * Author    : raj1307 - Raj Singh
 * Date      : 09.10.19
 */

#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#define _CRT_SECURE_NO_WARNINGS
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <iomanip>
#include <memory.h>
#include <assert.h>
using namespace std;

//#define DEBUG
#ifdef DEBUG
#define deb(...) cerr<<"Line:"<<__LINE__<<" "; __f(#__VA_ARGS__, __VA_ARGS__)
#define debarr(a,n) cerr<<#a<<" : ";for(int i=0;i<n;i++) cerr<<a[i]<<" "; cerr<<endl;
#define debmat(mat,row,col) cerr<<#mat<<" :\n";for(int i=0;i<row;i++) {for(int j=0;j<col;j++) cerr<<mat[i][j]<<" ";cerr<<endl;}
template<typename Arg1>
void __f(const char *name, Arg1 &&arg1) {
	cerr<<name<<" : "<<arg1<<endl;
}
template<typename Arg1, typename ... Args>
void __f(const char *names, Arg1 &&arg1, Args &&... args) {
	const char *comma=strchr(names+1,',');
	cerr.write(names,comma-names)<<" : "<<arg1<<" | ";
	__f(comma+1,args...);
}

#else
#define deb(...) {}
#define debarr(a,n) {}
#define debmat(mat,row,col) {}
#define endl "\n"
#endif

#define fio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define fr(i, a, b) for(int i = (a); i < (b); ++i)
#define fb(i, b, a) for(int i = (b); i > (a); --i)
#define rep(i, a, b) for(int i = (a); i <= (b); ++i)
#define rr return 
#define pb push_back
#define sz(x) ((int)x.size())
#define int long long
typedef pair<int, int> ii;;
int max(int a,int b){if(a>b) return a; else return b;}
int min(int a,int b){if(a>b) return b; else return a;}
int gcd(int a,int b){ return (b == 0) ? a : gcd(b, a % b);}
inline int lcm(int a,int b){ return a / gcd(a, b) * b;}
inline int normalize(int x,int mod){ x %= mod; if (x < 0) x += mod; return x;}

int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};
const int mod = 1000*1000*1000+7;
const int inf = 1e18 +5;

int powm(int a, int b) {
	int res=1;
	while(b) {
		if(b&1)
			res=(res*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return res;
}


const int N = 1e5 + 5;



int n,r1,c1,r2,c2,comp[55][55];
vector<int>graph[N];
int vis[55][55];
int c=1;

bool ok(int x,int y){
     if(x > 0 and y > 0 and x <= n and y <= n and comp[x][y] == 1 and vis[x][y] == 0)return 1;
     return 0;
}


void dfs(int x,int y){
    vis[x][y] = c;
    fr(i,0,4){
        if(ok(x+dx[i],y+dy[i]))
            dfs(x+dx[i],y+dy[i]);
    }

}



void solve(){   
    
    

    cin>>n>>r1>>c1>>r2>>c2;
    fr(i,0,n){
        string s;
        cin>>s;
        fr(j,0,n)
            comp[i+1][j+1]=(s[j]=='0');
        
    }
    //cout<<r1<<" "<<r2;
    

    dfs(r1,c1);

    if(vis[r2][c2]){
        cout<<0;
        return;
    }

    ++c;
    dfs(r2,c2);


    int ans=inf;
    fr(i,1,n+1){
        fr(j,1,n+1){
            fr(k,1,n+1){
                fr(l,1,n+1){
                    if(vis[i][j]==1 and vis[k][l]==2){
                        ans=min((i-k)*(i-k)+(j-l)*(j-l),ans);
                    }
                }
            }
        }
    }
    cout<<ans;

    










    





    
}




signed main() {
	fio;
	#ifndef ONLINE_JUDGE 
    	freopen("input.txt", "r", stdin); 
    	freopen("output.txt", "w", stdout); 
    	freopen("error.txt", "w", stderr); 
	#endif 
	cout<<fixed<<setprecision(10);
	int t=1;
//b	cin>>t;
	while(t--) {
		solve();
	}

	
	return 0;
}


