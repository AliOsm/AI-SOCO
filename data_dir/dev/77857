/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>
using namespace std;

class ADistinctDigits {
public:
    bool distinct(int n) {
        set<int> seen;
        while (n > 0) {
            int last = n % 10;
            n /= 10;
            if (seen.count(last)) return false;
            seen.insert(last);
        }
        return true;
    }
	void solve(std::istream& in, std::ostream& out) {
        int l, r; in >> l >> r;
        for (int i = l; i <= r; i++) {
            if (distinct(i)) {
                out << i << endl;
                return;
            }
        }
        out << -1 << endl;
	}
};


int main() {
    std::ios_base::sync_with_stdio(false);
    ADistinctDigits solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
    in.tie(nullptr);
    solver.solve(in, out);
	return 0;
}
