#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <assert.h>
#include <fstream>
#include <iomanip>
#include <bitset>
#include <string>
#include <cstdio>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <map>

using namespace std;

const int N = 200101;

int n, m, k;
int x, s;
pair < int, int > a[N];
int c[N];
int d[N];

int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
	scanf("%d%d%d%d%d", &n, &m, &k, &x, &s);
	for (int i = 0; i < m; ++i)
		scanf("%d", &a[i].second);
	for (int i = 0; i < m; ++i)
		scanf("%d", &a[i].first);
	sort(a, a + m);
	for (int i = 0; i < k; ++i)
		scanf("%d", &c[i]);
	for (int i = 0; i < k; ++i)
		scanf("%d", &d[i]);
	long long ans = 1ll * x * n;
	for (int i = 0; i < m; ++i)
	{
		if (a[i].first <= s)
			ans = min(ans, 1ll * n * a[i].second);
	}
	for (int i = 0; i < k; ++i)
	{
		if (d[i] <= s)
			ans = min(ans, 1ll * x * (n - c[i]));
	}
	int l = 0;
	int mna = -1;
	for (int i = k - 1; i >= 0; --i)
	{
		while (l < m && a[l].first <= s - d[i])
		{
			if (mna == -1 || mna > a[l].second)
				mna = a[l].second;
			l++;
		}
		if (mna != -1)
		{
			ans = min(ans, 1ll * (n - c[i]) * mna);
		}
	}
	cout << ans << endl;
	return 0;
}