#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll, ll > pp;

int const N=5e5+10,oo=1e9;
int mod=oo+7;
ll const OO=1e18;

string ss[301],all;
int n,len[301],prf[N],pw[N],sv[301][301],vis[301][301];
vector<int > adj[301][301];
void hsh(string &s){
    int p=1;
    for(int i=0;i<(int)s.size();i++){
        pw[i]=p;
        prf[i+1]=(prf[i]+s[i]*1LL*p%mod)%mod;
        p=p*1LL*31%mod;
    }
}
bool eq(int i,int j,int l){
    if(i>j)swap(i,j);
    int diff=j-i;
    int a=prf[i+l]-prf[i],b=prf[j+l]-prf[j];
    a+=mod;
    a%=mod;
    a=a*1LL*pw[diff]%mod;
    b+=mod;
    b%=mod;
    return a==b;
}
int go(int i,int j,int b){
    vis[i][j]=1;
    int ret=len[j+i]-len[i]-j-1;
    ret*=!adj[i][j].empty()||b;
    int mx=0;
    for(auto v:adj[i][j]){
        if(!vis[v][j])mx=max(mx,go(v,j,1));
        else mx=max(sv[v][j],mx);
    }
    ret+=mx;
    return sv[i][j]=ret;
}
int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>ss[i];
        all+=ss[i];
        all+=' ';
        len[i+1]=ss[i].size()+1;
        len[i+1]+=len[i];
    }
    all.pop_back();
    hsh(all);
    for(int i=0;i<n;i++){
        for(int j=1;j<=n;j++){
            for(int k=i+j;k+j<=n;k++){
                if(len[i+j]-len[i]==len[j+k]-len[k]&&eq(len[i],len[k],len[i+j]-len[i]-1)){
                    adj[i][j].push_back(k);
                }
            }
        }
    }
    int mx=0;
    for(int i=0;i<n;i++){
        for(int j=1;j<=n;j++){
            if(!vis[i][j]){
                mx=max(mx,go(i,j,0));
            }
        }
    }
//    cout<<mx<<endl;
 //   cout<<all.size()<<endl;
    cout<<(int)all.size()-mx<<endl;
    return 0;
}

