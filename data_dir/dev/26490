//bismillahir rahmanir rahim            //Author:Fayed Anik
 
#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
 
using namespace std;
//using namespace __gnu_pbds;
 
//#define         ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define         ll                          long  long
#define         lf                          double
#define         pb(x)                       push_back(x)
#define         ull                         unsigned long long
#define         sfl(a)                      scanf("%lld",&a)
#define         sf(a)                       scanf("%d",&a)
#define         pf(a)                       printf("%d\n",a)
#define         pfl(a)                      printf("%lld\n",a)
#define         FOR(x,n)                    for(ll x=1;x<=n;++x)
#define         pii                         pair< ll , ll >
#define         mp(a,b)                     make_pair(a,b)
#define         mod                         1000000007
#define         INF                         2e18
#define         EPS                         1e-15
#define         f1                          first
#define         f2                          second
#define         all(v)                      v.begin(),v.end()
#define         PI                          acos(-1)
#define         printminusone               printf("-1\n")
#define         bug                         printf("bug")
#define         FILEIN                      freopen("in.txt","r",stdin)
#define         FILEOUT                     freopen("out.txt","w",stdout)
 
//ll SET(ll mask,ll pos){ return mask = (mask | (1ll<<pos)); }
//ll RESET(ll mask,ll pos){ return mask = mask & ~(1ll<<pos); }
//bool CHECK(ll mask,ll pos) { return (bool) (mask & (1ll<<pos)); }
//priority_queue <ll, vector<ll>, greater<ll> > pq;

#define lim 1000000+5

ll dp[lim],cums[lim],n,k;
string s;

ll dfs(ll u){
    ll &ret = dp[u];
    if( ret!=-1 ) return ret;
    ret = cums[n]-cums[u];
    ll tmp=ret;
    if(u+k<=n){
        if(s[u]!='1') tmp =1;
        else tmp = 0;
        tmp += cums[u+k-1]-cums[u];
        tmp += dfs(u+k); 
    }
    return dp[u] = min(ret,tmp);
}


int main(){
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ll tc;
    sfl(tc);
    FOR(cs,tc){
        sfl(n),sfl(k);
        cin >> s;
        s = "#" + s;
        for(ll i=1;i<=n;i++){
            dp[i]=-1;
            if(s[i]=='1'){
                cums[i]=cums[i-1]+1;
            }
            else{
                cums[i]=cums[i-1];
            }
        }
        ll ans = cums[n]-1,cnt;
        ans = max(ans,0ll);
        for(ll i=1;i<=n;i++){
            cnt = cums[i-1]+dfs(i);
            //cout << cnt << endl;
            ans = min(ans,cnt);
        }
        pfl(ans);
    }
    return 0;
}