#pragma comment(linker, "/STACK:256000000")

#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
#include <string.h>
#include <assert.h>
#include <memory.h>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <string>
#include <sstream>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <utility>
#include <algorithm>
#include <random>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
#include <complex>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
typedef pair<int64, int> pli;
typedef pair<int, int64> pil;
const int INF = (int)(1e9 + 1e5);
const int64 LINF = (int64)(2e18);
const int64 BASE = 1003;
const double EPS = 1e-9;
#define sq(x) ((x)*(x))
#define FAIL() (*(int*)(0))++
#define ASSERT(exp) {if (!(exp)) exit(0);}
#define y1 fjgjf
#ifdef _MY_DEBUG
#define I64d lld
#endif
//typedef complex<double> comp;
//const int MOD = 1000000007;

int tnum;

const int MOD = 998244353;
const int MAXN = 1000500;

int add(int a, int b) {
    a += b;
    if (a >= MOD) {
        a -= MOD;
    }
    return a;
}

int sub(int a, int b) {
    a -= b;
    if (a < 0) {
        a += MOD;
    }
    return a;
}

int mul(int a, int b){
    return int64(a) * b % MOD;
}

int n;
int f[MAXN], p[MAXN];
int ans;

void init() {
    cin >> n;
}

void solve() {
    if (n <= 2) {
        ans = f[n];
        return;
    }
    ans = add(mul(n, f[n]), 1);
    p[n] = 1;
    for (int i = n - 1; i >= 1; --i) {
        p[i] = mul(p[i + 1], i + 1);
    }
    for (int i = n; i >= 1; --i) {
        ans = sub(ans, p[i]);
    }
}

void print_answer() {
    cout << ans << endl;
}

void precalc() {
    f[0] = 1;
    for (int i = 1; i < MAXN; ++i) {
        f[i] = mul(f[i - 1], i);
    }
}

void run()
{
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(getenv("OUTPUT_PATH"), "wt", stdout);
#endif // _MY_DEBUG
    precalc();
    int t = 1; //cin >> t;
    for (tnum = 1; tnum <= t; ++tnum)
    {
        init();
        solve();
        print_answer();
    }
}

int main()
{
    srand(90);
    ios_base::sync_with_stdio(false); cin.tie(0);
    run();
    return 0;
}
