// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define int long long
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 100000
#define inf 1e17
int n, x1, x2, Y1, y2;
struct ele {
    int fi;
    int se;
    int sqdist1;
    int sqdist2;
} a[N];

int f(int sx, int sy, int dx, int dy) {
    return (((sx - dx) * (sx - dx)) + ((sy - dy) * (sy - dy)));
}

int32_t main() {
    fast_io()
    
    int x1, Y1, y2, x2, y3, x3, res = 0;
    cin >> x1 >> Y1 >> x2 >> y2 >> x3 >> y3;
    if((x1 == x2 && x2 == x3) || (Y1 == y2 && y2 == y3)) {
        cout << 1;
        return 0;
    }
    if((x1 == x2 && (y3 >= max(Y1,y2) || y3 <= min(Y1, y2))) || (Y1 == y2 && (x3 >= max(x1, x2) || x3 <= min(x1,x2))) || (x1 == x3 && (y2 >= max(Y1, y3) || y2 <= min(Y1, y3))) || (Y1 == y3 && (x2 >= max(x1,x3) || x2 <= min(x1, x3))) || (x2 == x3 && (Y1 >= max(y2, y3) || Y1 <= min(y2, y3))) || (y2 == y3 && (x1 >= max(x2, x3) || x1 <= min(x2, x3)))) {
        cout << 2;
        return 0;
    }
    cout << 3;
    return 0;
}
