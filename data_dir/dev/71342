#include<bits/stdc++.h>
using namespace std;

#define MOD          (int)1e9+7
#define MAX          (int)1e5+5
#define ll           unsigned long long
#define pii          pair<ll,ll>
#define sf(a)        scanf("%d",&a)
#define pf(a)        printf("%d\n",a)
#define bug(a)       cerr << #a << " : " << a << endl;
#define mem(a,b)     memset(a,b,sizeof(a))
#define all(x)       x.begin(),x.end()
#define rall(x)      x.rbegin(),x.rend()
#define pb           push_back
#define F            first
#define S            second
#define Time()       cout<< "\nElapsed Time : " << (clock()*1.0) / CLOCKS_PER_SEC <<" sec"<< endl;
#define FastRead     ios_base::sync_with_stdio(false);cin.tie(NULL);

vector < int > adj[MAX], ans;
bool vis[MAX];
bool flag;
int root = -1;
void DFS(int src)
{
    if(adj[src].size()>2 && root != -1)
        flag = 1;
    else if(adj[src].size()>2)
        root = src;
    vis[src] = 1;
    for(auto i : adj[src])
    {
        if(!vis[i])
            DFS(i);
    }
    if(adj[src].size() == 1)
        ans.push_back(src);
}
int main()
{
    FastRead

    int n,u,v;
    cin >> n;
    for(int i=1; i<n; i++)
    {
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    DFS(1);
    if(flag)
        cout << "No\n";
    else
    {
        cout << "Yes\n";
        int cnt = 0;
        if(root == -1)
            root = 1;
        for(auto i : ans)
        {
            if(i == root)
                cnt++;
        }
        cout << ans.size()-cnt << endl;
        for(auto i : ans)
        {
            if(root != i)
                cout << root << " " << i << endl;
        }
    }
}
