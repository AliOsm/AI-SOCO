// inplace_merge(T + beg, T + mid + 1, T + end + 1);
// unsigned Long hash[maxn],p = 999999999989; hash[0] = 1; fo(i,1,maxn)hash[i] = hash[i-1] * p;
// __builtin_popcount(n);
/*
ID: Tariqul
PROG:
LANG: C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1e9 + 10
#ifdef localhost
#define Long long long
#else
typedef __int64 Long;
#endif // localhost
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; }
#ifdef localhost
bool readl(Long &n)	{ return scanf("%lld",&n) == 1; }
#else
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; }
#endif // localhost
bool readd(double &n){ return scanf("%lf",&n) == 1; }
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }
#ifdef localhost
void Print(Long &n, bool printNewLine = true)	{ printNewLine ? printf("%lld\n",n) : printf("%lld",n);  }
#else
void Print(Long &n, bool printNewLine = true)	{ printNewLine ? printf("%I64d\n",n) :  printf("%I64d",n); }
#endif // localhost

const int maxn = 2e5 + 10;

vector<int> v;
int vis[maxn][2],prev[maxn][2];
Long ans[maxn][2];

void update(Long x, Long y, int d)
{
    //cout << "Staring...." << endl;
    while(x != 1)
    {
        d = 1 - d;
        if(y == -1)ans[x][d] = -1;
        else { ans[x][d] = y - ans[x][d];  }
        x = prev[x][d];
    }
    //cout << "Returning...." << endl;
}

Long play(Long x, Long n,int k)
{
    Long y = v[x], ox = x + v[x], cx = x,d = 1;
    if(ans[ox][d] > 0)return y + ans[ox][d];
    else if (ans[ox][d] < 0)return -1;
    vis[ox][d] = k; prev[ox][d] = cx; ans[ox][d] = y;
    vis[1][0] = vis[1][1] = k;
    while(1)
    {
        cx = ox - v[ox]; y += v[ox]; d = 0;
        if(cx < 1)
        {
            update(ox,y,d);
            return y;
        }
        else if(vis[cx][d] == k || ans[cx][d] == -1)
        {
            update(ox,-1,d);
            return -1;
        }
        else if(ans[cx][d] > 0)
        {
            update(ox,y+ans[cx][d],d);
            return y + ans[cx][d];
        }
        else
        {
            prev[cx][d] = ox; ox = cx; vis[ox][d] = k; ans[ox][d] = y;
        }

        cx = ox + v[ox]; y += v[ox]; d = 1;

        if(cx > n)
        {
            update(ox,y,d);
            return y;
        }
        else if(vis[cx][d] == k || ans[cx][d] == -1)
        {
            update(ox,-1,d);
            return -1;
        }
        else if(ans[cx][d] > 0)
        {
            update(ox,y+ans[cx][d],d);
            return y + ans[cx][d];
        }
        else
        {
            prev[cx][d] = ox; ox = cx; vis[ox][d] = k;  ans[ox][d] = y;
        }
    }

    return 0;
}


int main()
{
	#ifdef localhost
    freopen("/home/tariqul/APC/Contest/input.txt","r",stdin);
    //freopen("/home/tariqul/APC/Contest/output.txt","w",stdout);
	#else
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif

    int i,n; cin >> n; v.resize(n+1); foo(i,2,v)readn(v[i]);
    fo(i,1,n)
    {
        v[1] = i;
        //cout << "I = " << i << ", result = " << play(1,n,i) << endl;
        cout << play(1,n,i) << endl;

    }

    return 0;
}
