#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>
#include <unordered_set>
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 2000 + 17;
const int INF = 1e9 + 17;
const int MOD = 1e9 + 7;
const double eps = 1e-6;
const double pi = 3.14159265359;

int n, m, k;
int a[MaxN][MaxN];
ll d[MaxN];
int get (int pos) {
    int l = pos - k + 1;
    if (l <= 0)
        return 0;
    if (d[pos] - d[l - 1] == pos - l + 1)
        return 1;
    return 0;
}
int main() {
    #ifdef DEBUG
        freopen(".in", "r", stdin);
        freopen(".out", "w", stdout);
    #endif
c0;
    cin >> n >> m >> k;
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= m; ++ j) {
            char x;
            cin >> x;
            a[i][j] = (x == '.');
        }
    }
    ll ans = 0;
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= m; ++ j)
            d[j] = d[j - 1] + a[i][j];
        for (int j = 1; j <= m; ++ j) {
            ans += get (j);
        }
    }
    for (int j = 1; j <= m; ++ j) {
        for (int i = 1; i <= n; ++ i) {
            d[i] = d[i - 1] + a[i][j];
        }
        for (int i = 1; i <= n; ++ i) {
            ans += get (i);
        }
    }
    if (k == 1)
        ans /= 2;
    cout << ans << endl;
    return 0;
}