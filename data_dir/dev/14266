#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 100

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<int, int> pii;

vector <int> grundy ;

int lim ;

int f(int n)
{
    if( n <= lim ) return grundy[n] ;
    if( n%2==1 ) return 0 ;
    int v = f(n/2) ;
    if(v==1) return 2 ;
    else return 1 ;
}

int main()
{
    int n , k ;

    scanf("%d %d",&n,&k) ;

    if( k%2 == 0 )
    {
        for(int i=0 ; i<=2 ; i++) grundy.pb(i) ;
    }
    else{
        grundy = {0,1,0,1,2,0,2} ;
    }

    lim = (int)grundy.size() - 1 ;

    int x = 0 ;

    for(int i=1; i<=n ; i++)
    {
        int a ;
        scanf("%d",&a) ;

        if( k%2==0 )
        {
            if( a <= lim ) x ^= grundy[a] ;
            else{
                x ^= ((a&1)^1) ;
            }
        }
        else{
            x ^= f(a) ;
        }
    }


    if(x) printf("Kevin\n") ;
    else printf("Nicky\n") ;

    return 0 ;
}
