#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXN = 100005;
int N;
set<LL> in;
LL sum[MAXN];
int main() {
    scanf("%d", &N);
    REP(i, N) {
        LL a;
        scanf("%lld", &a);
        in.insert(a);
    }
    vector<LL> now(in.begin(), in.end());
    vector<LL> dis;
    for (auto x : now) {
////        cerr << x << endl;
    }
    REP(i, SZ(now) - 1) {
        dis.PB(now[i + 1] - now[i]);
    }
    dis.PB(1LL<<62);
    sort(dis.begin(), dis.end());
    sum[0] = dis[0];
    for (int i = 1; i < SZ(dis); i++) {
        sum[i] = sum[i - 1] + dis[i];
    }
    for (auto x : dis) {
////        cerr << x << endl;
    }
    int Q;
    scanf("%d", &Q);
    REP(q, Q) {
        LL l, r;
        scanf("%lld %lld", &l, &r);
//        cerr << l << "|" << r << endl;
        LL len = r - l;
        int left = 0, right = SZ(dis) - 1;
        LL num = SZ(dis);
//        cerr << SZ(dis) << endl;
//        cerr << dis[0] << " " << dis[1] << endl;
        while (left <= right) {
            int mid = (left + right) / 2;
            if (dis[mid] <= len) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
//        cerr << right << endl;
        if (right == -1) {
            printf("%lld ", num * (len + 1));
        } else {
            printf("%lld ", (num - right - 1) * (len + 1) + sum[right]);
        }
    }
    return 0;
}
