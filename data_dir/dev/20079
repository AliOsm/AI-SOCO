#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <vector>
#include <string>
#include <cstring>
#include <map>
#include <set>
#include <queue>
#include <unordered_set>


using namespace std;
const int N = 1000000;

int n;
int dp[N], c[N], a[N];

void solve(int v, int h)
{
	
	if (h == n)
	{
		dp[v] = 0;
		c[v] = 0;
		return;
	}
	solve(2 * v, h + 1); solve(2 * v + 1, h + 1);
	dp[v] = max(dp[2 * v] + a[2 * v], dp[2 * v + 1] + a[2 * v + 1]);
	c[v] = abs(dp[2 * v] + a[2 * v] - dp[2 * v + 1] - a[2 * v + 1]) + c[2 * v] + c[2 * v + 1];
	//cout << v << " " << h << " " << dp[v] << " " << c[v] << endl;

}


int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
/*#else
	freopen(TASK".in", "r", stdin);
	freopen(TASK".out", "w", stdout);*/
#endif
	cin >> n;
	for (int i = 2; i <= (1 << (n + 1)) - 1; ++i)
		scanf("%d", &a[i]);
	solve(1, 0);
	cout << c[1] << endl;
	return 0;
}
