#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<t; i++)
#define FORr(i,f,t) for(int i=f; i>t; i--)
#define ri(x) scanf("%d",&x)
#define rii(x,y) ri(x),ri(y)

typedef long long ll;

double PI = atan(1)*4;
const double EPS = 1e-6;

double norm(double be){
	if(be < -PI) be+=PI;
	if(be > PI) be-=PI;
	return be;
}

pair<double, double> f(double wx, double wy, double be, double V){
	double X[2], Y[2], vx[2], vy[2];
	if( (abs(be - PI/2) > EPS) && (abs(be + PI/2) > EPS) ){
		double tgbe = tan(be);
		double a=1+tgbe*tgbe, b=2*wx*tgbe*tgbe - 2*wy*tgbe, c=tgbe*tgbe*wx*wx - 2*tgbe*wx*wy +wy*wy - V*V;
		vx[0] = (-b + sqrt(b*b-4*a*c))/(2*a);
		vx[1] = (-b - sqrt(b*b-4*a*c))/(2*a);
		vy[0] = tgbe*(wx+vx[0]) - wy;
		vy[1] = tgbe*(wx+vx[1]) - wy;
	}else{
		vx[0] = vx[1] = -wx;
		double alv = norm(acos(-wx/V));
		vy[0] = vy[1] = V*sin(alv);
		vy[1] = -vy[0];
	}
	FOR(i,0,2) Y[i] = wy + vy[i], X[i] = wx + vx[i];

	FOR(i,0,2){
		double ber = atan2(Y[i], X[i]);
		if(abs(ber - be) <= EPS) return {X[i], Y[i]};
	}
	
	FOR(i,0,2){
		double ber = atan2(Y[i], X[i]);
		printf("%.10lf   %.10lf\n",be,ber);
	}	
	printf("\n");	
	cout << "D:" << endl;
}

double wx1, wy1, wx2, wy2, V, X1, Y1, X2, Y2, t;
int main(){
	cin >> X1 >> Y1 >> X2 >> Y2;
	cin >> V >> t;
	cin >> wx1 >> wy1 >> wx2 >> wy2;
	double al = atan2((Y2-Y1),(X2-X1));
	pair<double, double> pdd = f(wx1, wy1, al, V);
	double Vd = sqrt(pdd.first*pdd.first + pdd.second*pdd.second);
	double Dd = sqrt((X2-X1)*(X2-X1) + (Y2-Y1)*(Y2-Y1));
	if(Vd * t >= Dd){
		printf("%.15lf\n",Dd/Vd);
		return 0;
	}
	double allo = al-PI, alhi = al+PI;
	int rep = 100;
	double T;
	while(rep--){
		double al1 = (allo*2+alhi)/3, al2 = (allo+alhi*2)/3;
		pair<double, double> pos1 = f(wx1, wy1, norm(al1), V);
		pair<double, double> pos2 = f(wx1, wy1, norm(al2), V);
		pos1.first = X1+pos1.first*t;
		pos1.second = Y1+pos1.second*t;
		pos2.first = X1+pos2.first*t;
		pos2.second = Y1+pos2.second*t;
		double be1 = atan2((Y2-pos1.second),(X2-pos1.first));
		double be2 = atan2((Y2-pos2.second),(X2-pos2.first));
		pair<double, double> vc1 = f(wx2, wy2, be1, V);
		pair<double, double> vc2 = f(wx2, wy2, be2, V);
		double D1 = sqrt((X2-pos1.first)*(X2-pos1.first) + (Y2-pos1.second)*(Y2-pos1.second));
		double D2 = sqrt((X2-pos2.first)*(X2-pos2.first) + (Y2-pos2.second)*(Y2-pos2.second));
		double v1 = sqrt(vc1.first*vc1.first + vc1.second*vc1.second);
		double v2 = sqrt(vc2.first*vc2.first + vc2.second*vc2.second);
		double t1 = D1/v1, t2 = D2/v2;
		T = min(t1, t2);
		if(t1 < t2) alhi = al2;
		else allo = al1;
	}
	printf("%.15lf\n",T+t);
	
}
