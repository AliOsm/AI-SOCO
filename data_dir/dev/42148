# include <bits/stdc++.h>
 
using namespace std;
 
const int N = 55;
 
int n, pf[N][N], dp[N][N][N][N], us[N][N][N][N];
char c[N][N];
 
int get(int a, int b, int x, int y){
	return pf[x][y] - pf[a - 1][y] - pf[x][b - 1] + pf[a - 1][b - 1];
}
 
int f(int a, int b, int x, int y){
	if(a > x || b > y || get(a, b, x, y) == 0) return 0;
	if(us[a][b][x][y]) return dp[a][b][x][y];
	us[a][b][x][y] = 1;
	dp[a][b][x][y] = max(x - a + 1, y - b + 1);
	for(int i = a; i <= x; i ++){
		int &ret = dp[a][b][x][y];
		ret = min(ret, f(a, b, i, y) + f(i + 1, b, x, y));
	}
	for(int i = b; i <= y; i ++){
		int &ret = dp[a][b][x][y];
		ret = min(ret, f(a, b, x, i) + f(a, i + 1, x, y));	
	}
	return dp[a][b][x][y];
}
 
int main(){
	cin >> n;
	
	for(int i = 1; i <= n; i ++){
		for(int j = 1; j <= n; j ++){
			cin >> c[i][j];
			if(c[i][j] == '#')
				pf[i][j] ++;
			pf[i][j] += pf[i][j - 1];
		}
		for(int j = 1; j <= n; j ++)
			pf[i][j] += pf[i - 1][j];
	}
	
	cout << f(1, 1, n, n);
}
