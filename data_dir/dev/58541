#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <complex>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <numeric>
#include <math.h>

#define user spaesk
#define lli long long int
#define ld long double
#define ff first
#define ss second
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

void solve()
{
    lli n, a, b;
    cin >> n >> a >> b;

    if(min(a, b) > 1) {
        cout<<"NO\n";
        return ;
    }

    if(a == 1 and b == 1 and (n == 2 or n == 3)) {
        cout<<"NO\n";
        return ;
    }

    cout<<"YES\n";

    lli x = max(a, b);

    lli ans[n + 1][n + 1] ;
    for(int i = 1; i <= n; i ++) {
        for(int j = 1; j <= n; j ++) {
            ans[i][j] = 0;
        }
    }
    for(int i = 1; i <= n - x; i ++) {
        ans[i][i + 1] = 1;
        ans[i + 1][i] = 1;
    }

    if(b > 1) {
        for(int i = 1; i <= n; i ++) {
            for(int j = 1; j <= n; j ++) {
                if(i == j)
                    continue ;
                ans[i][j] ^= 1;
            }
        }
    }

    for(int i = 1; i <= n; i ++) {
        for(int j = 1; j <= n; j ++) {
            cout<<ans[i][j];
        }
        cout<<'\n';
    }

    cout<<"\n";
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
