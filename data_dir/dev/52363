#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

ll numc[6], val[50];

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	ll n, ans = 0;
 	cin >> n;
 	ll a[n];
 	for(int i=0;i<n;i++) cin >> a[i];
 	val[4] = 0;
 	val[8] = 1;
 	val[15] = 2;
 	val[16] = 3;
 	val[23] = 4;
 	val[42] = 5;
 	for(int i=0;i<n;i++)
 	{
 		numc[val[a[i]]]++;
 		ll flag = 0;
 		for(int j=0;j<5;j++)
 			if(numc[j] < numc[j+1])
 				flag = 1;
 		if(flag)
 		{
 			ans++;
 			numc[val[a[i]]]--;
 		}	
 	}   
 	for(int i=0;i<5;i++) ans += numc[i] - numc[5];
 	cout << ans << endl;
    return 0;
}