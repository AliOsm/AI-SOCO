#include<bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; ++i )
#define clr( t , val ) memset( t , val , sizeof( t ) ) 

#define pb push_back
#define all( v ) v.begin() , v.end()
#define SZ( v ) ((int)(v).size())

#define fi first
#define se second
#define mp make_pair

#define INF 20000000009LL

typedef pair< int , int > pii;
typedef vector< int > vi;
typedef long long ll;
typedef vector< ll > vll;
typedef vector< vll > vvll;
typedef vector< vi > vvi;
typedef vector< pii > vpii;

ll toi( string &s ){
    istringstream in( s );
    ll x;
    in >> x;
    return x;
}
bool valid( vll &v ){
    REP( i , SZ( v ) - 1 ) if( v[ i ] >= v[ i + 1 ] ) return 0;
    return 1;
}
vll get( ll n , ll X , ll Y ){
    vll v( n );
    ll lo = -n/2 , hi = lo + n - 1;
    if( X >= lo ) {
        ll dif = X - lo + 1;
        lo += dif , hi += dif;
    }
    if( hi >= Y ){
        ll dif = hi - Y + 1;
        lo -= dif , hi -= dif;
    }
    REP( i , n ) v[ i ] = lo + i;
    return v;
}
void doit( vll &v , bool &ok ){
    vll vec;
    REP( i , SZ( v ) )
        if( v[ i ] != INF ) vec.pb( v[ i ] );
    if( !valid( vec ) ) ok = 0;
    
    REP( i , SZ( v ) ){
        if( v[ i ] != INF ) continue;
        ll ind;
        for( int j = i ; j < SZ( v ) ; ++j )
            if( v[ j ] == v[ i ] ) ind = j;
            else break;
        ll valL = -INF , valR = INF;
        if( i ) valL = v[ i - 1 ];
        if( ind != SZ( v ) - 1 ) valR = v[ ind + 1 ];
        ll len = ind - i + 1;
        if( valR - valL - 1 < len ) ok = 0;
        vll vec2 = get( len , valL , valR );
        REP( j , SZ( vec2 ) ) v[ i + j ] = vec2[ j ];
        i = ind;
    }
}
int main(){
    ios_base :: sync_with_stdio( 0 );
    int n , k;
    while( cin >> n ){
        cin >> k;
        vvll v( k ) , POS( k );
        REP( i , n ){
            string s;
            cin >> s;
            ll x = INF;
            if( s != "?" ) x = toi( s );
            v[ i % k ].pb( x );
            POS[ i % k ].pb( i );
        }
        bool ok = 1;
        REP( i , k ) doit( v[ i ] , ok );
        
        if( !ok ){
            cout << "Incorrect sequence\n";
            continue;
        }
        vll vec( n );
        REP( i , k ){
            REP( j , SZ( v[ i ] ) ){
                vec[ POS[ i ][ j ] ] = v[ i ][ j ];
            }
        }
        REP( i , SZ( vec ) ) cout << vec[ i ] << char( i + 1 == SZ( vec ) ? 10 : 32 );
    }
}
