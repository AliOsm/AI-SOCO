#include <math.h>
#include <stdio.h>

#define N	100000

long long min(long long a, long long b) { return a < b ? a : b; }

long long solve(int *aa, int *bb, int n, long long d) {
	int i;
	long long sum;

	sum = 0;
	for (i = 0; i < n; i++) {
		int a = aa[i], b;

		/* a - (3b^2 + 3b + 1) < d */
		if (a - 1 < d)
			b = 0;
		else
			b = min((long long) ((-3 + sqrtl(9 + (long double) 12 * (a - d - 1))) / 6) + 1, a);
		sum += bb[i] = b;
	}
	return sum;
}

int main() {
	static int aa[N], bb[N];
	int n, i;
	long long k, lower, upper, d;

	scanf("%d%lld", &n, &k);
	for (i = 0; i < n; i++)
		scanf("%d", &aa[i]);
	lower = -4e18, upper = 1000000001;
	while (upper - lower > 1) {
		d = (lower + upper) / 2;
		if (solve(aa, bb, n, d) >= k)
			lower = d;
		else
			upper = d;
	}
	d = lower;
	k -= solve(aa, bb, n, d + 1);
	for (i = 0; i < n && k > 0; i++)
		if (k > 0 && bb[i] < aa[i] && aa[i] - (3LL * bb[i] * bb[i] + 3LL * bb[i] + 1) >= d)
			bb[i]++, k--;
	for (i = 0; i < n; i++)
		printf("%d ", bb[i]);
	printf("\n");
	return 0;
}
