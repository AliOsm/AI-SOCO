


#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <cstdio>

#define ll long long
#define ld long double
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define int long long
using namespace std;

const int INF = 1LL * 1000 * 1000 * 1000 * 1000 * 1000;
const int MOD = 998244353;

void solve() {
	int n, m;
	cin >> n >> m;
	vector<int> a(n);
	vector<int> b(m);
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for (int i = 0; i < m; i++) {
		cin >> b[i];
	}

	sort(a.begin(), a.end());
	sort(b.rbegin(), b.rend());

	vector<int> prefA(n);
	vector<int> prefB(m);

	for (int i = 1; i < n; i++) {
		prefA[i] = prefA[i - 1] + i * (a[i] - a[i - 1]);
	}
	for (int i = 1; i < m; i++) {
		prefB[i] = prefB[i - 1] + i * (b[i - 1] - b[i]);
	}

	int ans = INF;

	for (int i = 0; i < n; i++) {
		int res = prefA[i];
		
		int l = -1;
		int r = m;
		while (r - l > 1) {
			int mid = (r + l) >> 1;
			if (b[mid] >= a[i]) l = mid;
			else r = mid;
		}

		ans = min(res + (l == -1 ? 0 : prefB[l] + (b[l] - a[i]) * (l + 1)), ans);
	}

	for (int i = 0; i < m; i++) {
		int res = prefB[i];

		int l = -1;
		int r = n;
		while (r - l > 1) {
			int mid = (r + l) >> 1;
			if (a[mid] <= b[i]) l = mid;
			else r = mid;
		}

		ans = min(res + (l == -1 ? 0 : prefA[l] + (b[i] - a[l]) * (l + 1)), ans);
	}

	cout << ans;
}
signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}