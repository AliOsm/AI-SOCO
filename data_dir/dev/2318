#include <bits/stdc++.h>
using namespace std;

map< int, pair<int, set<int> >  > cnt;
vector<int> primos;

int used[100005];

int main(){
	cout.sync_with_stdio(false);
	cin.tie(NULL);

	for(int i = 2; i <= 10000; i++) if(!used[i]){
		primos.push_back(i);
		for(int j = i; j <= 10000; j+=i)
			used[j] = 1;
	}


	int n; cin >> n;
	vector<int> v;
	map<int,int> mapa;
	for(int i = 0; i < n; i++){
		int x; cin >> x;
		mapa[x] = 1;
		v.push_back(x);
	}

	if(mapa.size() == 1){
		cout << -1 << endl;
		return 0;
	}

	int g = v[0];
	for(int i = 1; i < n; i++)
		g = __gcd(g, v[i]);
	for(int i = 0; i < n; i++)
		v[i] /= g;

	for(int i = 0; i < n; i++){
		int x = v[i];
		int root = sqrt(x);
		for(int p : primos){
			if(p > root) break;
			int aux = 0;
			while(x%p == 0) x/= p, aux++;
			if(aux > 0){
				cnt[p].first++;
				cnt[p].second.insert(aux);
			}
		}
		if(x != 1){
			cnt[x].first++;
			cnt[x].second.insert(1);
		}
	}

	int mini = 1e9, maxi = 0;
	for(auto par : cnt){
		mini = min(mini, par.second.first);
		maxi = max(maxi, par.second.first);
	}

	if(maxi == n){
		if(mini == n){
			cout << 1 << endl;
			return 0;
		}
		int res = 1e9;
		for(auto par : cnt)
			if(par.second.first == n)
				res = min(res, n-(int)par.second.second.size());
		cout << res << endl;
	}
	else
		cout << n-maxi << endl;


    return 0;
}
