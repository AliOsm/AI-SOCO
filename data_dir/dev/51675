#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <unordered_map>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <iomanip>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define nl cout<<'\n'
#define ff first
#define ss second
#define READ freopen("input.txt","r",stdin);
#define WRITE    freopen("output.txt","w",stdout);
#define fill(a,x) memset(a,x,sizeof(a));
#define loop(i,x,n) for(int i=x;i<n;i++)
#define TC() ll ttwea;cin>>ttwea;while(ttwea--)
#define ll long long
#define mod 1000000007
#define vi vector<ll>
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ull unsigned long long
#define N 4000010
#define inf 10000000000000000
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
//ll dx[]={1,0,-1,0};ll dy[]={0,1,0,-1}; //4 Direction
//ll dx[]={1,1,0,-1,-1,-1,0,1};ll dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
ll gcd(ll x,ll y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
ll expo(ll n,ll m,ll p)   //MODULAR EXPONENTIATION
{
    ll r=1;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
vi a(370);
ll n;
ll dp[370][370];
ll solve(ll i,ll c)
{
	if(i==n)
		return abs(c-abs(360-c));
	if(dp[i][c]!=-1)
		return dp[i][c];
	ll ans=min(solve(i+1,a[i]+c),(solve(i+1,c)));
	dp[i][c]=ans;
	return ans;
}
int main()
{
 
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ************************/
    //ll n;
    cin>>n;
    //for(ll i=0;i<370;i++)
    	for(ll j=0;j<370;j++)
    		for(ll k=0;k<370;k++)
    			dp[j][k]=-1;
    loop(i,0,n)
    cin>>a[i];
    ll ans=inf;
    ll s=0;
    if(n==1)
    {
    	cout<<a[0];
    	return 0;
    }
    for(ll i=0;i<n;i++)
    {
    	s=0;
    	bool vis[n+1];
    	memset(vis,false,sizeof(vis));
    	s=s+a[i];
    	ll j=i+1;
    	vis[i]=true;
    	//ans=min(ans,s);
    	while(!vis[j])
    	{
    		ans=min(ans,abs(s-abs(360-s)));
    		j=j%n;
    		s+=a[j];
    		vis[j]=true;
    		j++;
    	}
    }
    cout<<ans;
} 