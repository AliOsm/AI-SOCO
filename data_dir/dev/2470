#include "bits/stdc++.h"

using namespace std;

#define debug(args...) fprintf(stderr, args)

#define FOR(i, a, b) for(int i = a; i <= b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)

#define pb push_back
#define sz(x) (int)(x).size()
#define all(x) x.begin(), x.end()

typedef long long ll;
typedef pair<int, int> pii;

int n, m, r, K;

ll X, Y;

inline ll f(ll x, ll y) {
	ll L = min(X, max(1LL, x - r + 1));
	ll R = min(Y, max(1LL, y - r + 1));
	return (min(x, X) - L + 1) * (min(y, Y) - R + 1);
}

struct pos {
	ll x, y, val;
};

inline bool operator < (pos A, pos B) {
	return (A.val > B.val) || (A.val == B.val && A.x < B.x) || (A.val == B.val && A.x == B.x && A.y < B.y);
}

set<pos> S;

int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, -1, 1};

map<pii, int> M;

double solve() {
	double total = 1.0 * (n - r + 1) * (m - r + 1);
	double sum = 0;

	X = n - r + 1;
	Y = m - r + 1;

	S.insert({(n + 1) / 2, (m + 1) / 2, f((n + 1) / 2, (m + 1) / 2)});

	M[{(n + 1) / 2, (m + 1) / 2}] = 1;

	while(K && !S.empty()) {
		ll x = S.begin()->x;
		ll y = S.begin()->y;
		ll val = S.begin()->val;

		S.erase(S.begin());

		sum += val;
		--K;

		for(int k = 0; k < 4; ++k) {
			int i = x + dx[k];
			int j = y + dy[k];

			if(i <= 0 || j <= 0 || i > n || j > m) continue;

			if(M.find({i, j}) != M.end()) continue;

			M[{i, j}] = 1;
			S.insert({i, j, f(i, j)});
		}
	}

	return sum / total;
}

int main() {
	scanf("%d %d %d %d", &n, &m, &r, &K);

	printf("%.10lf\n", solve());
	return 0;
}
