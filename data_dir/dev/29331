#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds; 
typedef long long int ll;
typedef pair<ll,ll> p2;
ll arr[200005],res[200005];
vector<p2> v;
vector<pair<ll,p2>> q;
bool comp(p2 a,p2 b){
    if(a.first>b.first||(a.first==b.first&&a.second<b.second))
    return true;
    return false;
}
bool com(pair<ll,p2> a,pair<ll,p2> b){
    return a.first<b.first;
}
typedef tree<ll, null_type, less<ll>, rb_tree_tag,tree_order_statistics_node_update>  
    ordered_set;  
int main(){
    ll n,m;
    cin>>n;
    for(ll i=0;i<n;i++){
        ll x;
        cin>>x;
        arr[i]=x;
        v.push_back({x,i});
    }
    sort(v.begin(),v.end(),comp);
    cin>>m;
    for(ll i=0;i<m;i++){
        ll k,pos;
        cin>>k>>pos;
        q.push_back({k,{pos,i}});
    }
    sort(q.begin(),q.end(),com);
    ordered_set s;
    ll t=0;
    for(ll i=0;i<m;i++){
        while(t<q[i].first){
            s.insert(v[t].second);
            t++;
        }
        res[q[i].second.second]=arr[*s.find_by_order(q[i].second.first-1)];
    }
    for(ll i=0;i<m;i++)
    cout<<res[i]<<endl;
}