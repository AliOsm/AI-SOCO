#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>


template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long MOD = 1'000'000'007LL;
const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/
	ll N; scanf("%lld", &N);
	vector<ll> a(N);
	for (ll i = 0; i < N; i++) {
		scanf("%lld", &a[i]);
	}
	vector<vector<ll>> g(N);
	sort(a.begin(), a.end());
	vector<ll> deg(N, 0);
	for (ll i = 0; i < N; i++) {
		ll t = a[i];
		if (t % 3 == 0) {
			if (binary_search(a.begin(), a.end(), t / 3)) {
				ll id = lower_bound(a.begin(), a.end(), t / 3) - a.begin();
				g[i].push_back(id);
				deg[id]++;
			}
		}
		if (t % 2 == 0) {
			if (binary_search(a.begin(), a.end(), t / 2)) {
				ll id = lower_bound(a.begin(), a.end(), t / 2) - a.begin();
				g[id].push_back(i);
				deg[i]++;
			}
		}
	}
	queue<ll> q;
	vector<ll> res;
	for (ll i = 0; i < N; i++) {
		if (deg[i] == 0) {
			res.push_back(i);
			q.push(i);
		}
	}

	while (!q.empty()) {
		ll t = q.front();
		q.pop();
		for (ll x : g[t]) {
			deg[x]--;
			if (deg[x] == 0) {
				res.push_back(x);
				q.push(x);
			}
		}
	}
	for (ll i = 0; i < res.size(); i++) {
		printf("%lld", a[res[i]]);
		if (i == (ll)res.size() - 1) puts("");
		else printf(" ");
	}
	return 0;

}
