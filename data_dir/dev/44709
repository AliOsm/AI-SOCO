#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <fstream>
#define true false
#define false true
#define endl "\n"
#define c0 ios_base :: sync_with_stdio(0); cin.tie (0);
#define s second
#define f first
#define ll long long
#define ull unsigned ll
using namespace std;

const int MaxN = 1e6 + 17;
const ll INF = 1e9 + 17;
const int MOD = 1e9 + 7;
const double eps = 1e-8;
const double pi = 3.14159265359;

pair < int, int > a[MaxN];

int n;

vector < pair < int, pair < int, int > > > ans;

int main()
{
    #ifdef DEBUG
        freopen (".in", "r", stdin);
        freopen (".out", "w", stdout);
    #endif
    scanf ("%d", &n);
    for (int i = 1; i <= n; ++ i) {
        int x;
        scanf ("%d", &x);
        a[i] = make_pair (x, i);
    }
    vector < int > v;
    for (int i = 1; i <= n; ++ i) {
        if (a[i].first == 0) {
            v.push_back (i);
        }
    }
    if (v.size() >= 2) {
        for (int j = 1; j < v.size(); ++ j) {
            int i = v[j];
            a[i].first = INF;
            ans.push_back (make_pair (1, make_pair (a[v[0]].second, a[i].second)));
        }
    }
    for (int i = 0; i < ans.size(); ++ i) {
        cout << ans[i].first << ' ' << ans[i].second.second << ' ' << ans[i].second.first << endl;
    }
    if (ans.size() == n - 1)
        return 0;
    sort (a + 1, a + n + 1);
    for (int i = n; i >= 1; -- i) {
        if (a[i].first == INF)
            n --;
    }
    int cnt = 0;
    int w = 0;
    for (int i = 1; i <= n; ++ i) {
        if (a[i].first < 0) {
            ++ cnt;
        }
        if (a[i].first == 0)
            w = i;
    }
    
    if (cnt % 2 == 0) {
        if (w == 0) {
            for (int i = 2; i <= n; ++ i) {
                cout << 1 << ' ' << a[i].second << ' ' << a[1].second << endl;
            }
        }
        else {
            cout << 2 << ' ' << a[w].second << endl;
            int x = 1;
            if (w == 1)
                ++ x;
            for (int i = 1; i <= n; ++ i) {
                if (i == w)
                    continue;
                if (i == x)
                    continue;
                cout << 1 << ' ' << a[i].second << ' ' << a[x].second << endl;
            }
        }
        exit (0);
    }
    else {
        int x = -INF, y = 0;
        for (int i = 1; i <= n; ++ i) {
            if (a[i].first < 0 && a[i].first > x) {
                y = i;
            }
        }
        if (w == 0) {
            cout << 2 << ' ' << a[y].second << endl;
        }
        else {
            cout << 1 << ' ' << a[y].second << ' ' << a[w].second << endl;
            if (n > 2)
                cout << 2 << ' ' << a[w].second << endl;
            swap (a[w], a[n]);
            n --;
        }
        w = y;
        x = 1;
        if (w == 1)
            ++ x;
        for (int i = 1; i <= n; ++ i) {
            if (i == w)
                continue;
            if (i == x)
                continue;
            cout << 1 << ' ' << a[i].second << ' ' << a[x].second << endl;
        }
    }
    return 0;
}
