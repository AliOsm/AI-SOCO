#include <bits/stdc++.h>

using namespace std;

#define mem(a,b) memset(a,b,sizeof(a))
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define REV(i,j,k) for(int i=j;i>=k;i--)
#define FORR(i,j,k,l) for(int i=j;i<=k;i+=l)
#define inf         freopen("in.txt", "r", stdin)
#define outf        freopen("out.txt", "w", stdout)
#define pf          printf
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c)    scanf("%d %d %d", &a, &b, &c)
#define clean(mat,n)   FOR(i,0,n) mat[i].clear()
#define minn          (long long)-1000000000000000000
#define maxx          (long long) 1000000000000000000
#define mod          1000000007
#define M_PI           3.14159265358979323846  /* pi */
#define LL           long long
#define NL '\n'
#define cnd tree[idx]
#define lnd (idx<<1)
#define rnd ((idx<<1)+1)
#define PB push_back
#define F first
#define S second
#define MAX 1005
#define MP make_pair
#define valid(nx,ny)  ((nx >= 0) && (nx < row) && (ny >= 0) && (ny < col))
typedef pair<int,int> pii;


int mat[MAX][MAX], maxa[MAX][MAX], mina[MAX][MAX];
int ara[MAX], n, m, lol[MAX];

int main()
{
    //inf;
    //outf;

    scanf("%d %d", &n, &m);
    FOR(i,0,n-1)
    FOR(j,0,m-1) scanf("%d", &mat[i][j]);

    FOR(i,0,n-1)
    {
        FOR(j,0,m-1) ara[j] = mat[i][j];

        int k = 0;
        sort(ara, ara + m);
        FOR(i,0,m-1)
            if(!i || lol[k - 1] != ara[i]) lol[k++] = ara[i];

        FOR(j,0,m-1)
        {
            ///cout << j << ":" << i << ' ';
            maxa[i][j] = k - (upper_bound(lol, lol + k, mat[i][j]) - lol);
            mina[i][j] = lower_bound(lol, lol + k, mat[i][j]) - lol;
            ///cout <<  mina[i][j] << ' ' << maxa[i][j] << endl;
        }
        ///cout << endl;
    }

    FOR(i,0,m-1)
    {
        FOR(j,0,n-1) ara[j] = mat[j][i];

        int k = 0;
        sort(ara, ara + n);
        FOR(i,0,n-1)
            if(!i || lol[k - 1] != ara[i]) lol[k++] = ara[i];

        FOR(j,0,n-1)
        {
            ///cout << j << ":" << i << ' ';
            int boro = k - (upper_bound(lol, lol + k, mat[j][i]) - lol);
            int choto = lower_bound(lol, lol + k, mat[j][i]) - lol;
            ///cout << choto << ' ' << boro << endl;
            maxa[j][i] = max(maxa[j][i], boro);
            mina[j][i] = max(mina[j][i], choto);
        }
        ///cout << endl;
    }

    FOR(i,0,n-1)
    {
        FOR(j,0,m-1) printf("%d ", maxa[i][j] + 1 + mina[i][j]);
        printf("\n");
    }
    return 0;
}

