#include <bits/stdc++.h>
//#include <ext/rope>

#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")

#define endl "\n"
#define fi first
#define se second
#define pb push_back
#define last(s) (s)[int((s).size())-1]
#define prelast(s) (s)[int((s).size())-2]
#define all(a) (a).begin(),(a).end()
#define elif else if
#define left asdasd
#define next zaza
#define prev azaz
#define cclear cout<<flush;
#define x0 kerker
//#define time chas
#define y0 lolik
#define kchay ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define files freopen("input.txt", "r", stdin);freopen("output.txt", "w", stdout);
#define ref svyazi
// #define int long long //
#define real nihuya
using namespace std;
//using namespace __gnu_cxx;


using llong = long long;
using ld = long double;
using itn = int;
using ii = pair<int,int>;
using ull = unsigned long long;
using psi = pair<string, int>;
using ll = pair<llong, llong>;

const llong over999 = 1e9;
const ld over999ld = 1e18+1;
const llong md = 1e9+7;
const ld EPS = 1e-2;
const ld Pi = acos(-1);
const ld nich = 0;
const llong mnogo = 300;


/**/

bool f[1010][1010];
int n, a, b;

void add(int x, int y){
    f[x][y] = true;
    f[y][x] = true;
}

bool used[1010];

void dfs(int x, int y){
    used[x] = true;
    
    for(int i = 1; i <= n; i++){
        if(used[i] || f[x][i] != y)continue;
        dfs(i, y);
    }
}

bool check(){
    int cnt = 0;
    for(int i = 1; i <= n; i++){
        if(!used[i]){
            dfs(i, 1);
            cnt++;
        }
    }
    if(cnt != a)return false;
    cnt =0 ;
    for(int i = 1; i <= n; i++){
        used[i] = false;
    }
    
    for(int i = 1; i <= n; i++){
        if(!used[i]){
            dfs(i, 0);
            cnt++;
        }
    }
    return (cnt == b);
}

int32_t main() {
    kchay;
    
    cin >> n >> a >> b;
    
    
    if(a != 1 && b != 1)return cout << "NO", 0;
    
    
    if(a == 1 && b == 1){
        
        for(int i = 1; i < n; i++){
            add(i, i+1);
        }
    } elif(a == 1){
        for(int j = 2; j <= b; j++){
            for(int i = 1; i <= n; i++){
                if(i == j)continue;
                add(j, i);
            }
        }
    } elif(b == 1) {
        for(int i = 2; i <= n-a+1; i++){
            add(1, i);
        }
    }
    
    if(!check())return cout << "NO", 0;
    cout << "YES" << endl;
    
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cout << f[i][j];
        }
        cout << endl;
    }
    
    
    
    
    return 0;
}