#include<bits/stdc++.h>

using namespace std;
const int MAXN = 110;

char v[MAXN];

int main(){
	int n;
	cin >> n;
	
	string s;
	cin >> s;
	
	bool f = true;
	
	set<int> st;
	
	for(int i = 0;i <= ((int)s.size()-1)/2;i++){
		int h = (int) s.size() - 1;
		if(s[i] == '?' && s[h-i] != '?'){
			s[i] = s[h-i] , st.insert(s[i] - 'a' + 1);  
		}
		else if(s[h-i] == '?' && s[i] != '?'){
			s[h-i] = s[i] , st.insert(s[i] - 'a' + 1);
		}
		else if(s[h-i] != '?' && s[i] != '?'){
			if(s[h-i] != s[i]) f = false;
			else st.insert(s[i] - 'a' + 1);
		}
	}
	
	if(f == false){
		cout << "IMPOSSIBLE" << endl;
		return 0;
	}
	
	int p = n;
	
	bool conf = false;
	
	for(int i = ((int)s.size()-1)/2;i >= 0;i--){
		int h = ((int)s.size() - 1);
		
		if(s[i] != '?') continue;
		
		if(conf == false)
			while(p > 1 && st.find(p) != st.end()) p--;
			
		if(st.size() == n) conf = true;
		if(conf == true) p = 1;
		
		//cout << "/ " << i << " " << p << endl;
		
		s[i] = 'a' + p - 1 , s[h - i] = 'a' + p - 1;
		st.insert(p);
		
		if(p == 1) conf = true;
	}
	
	if((int)st.size() != n){
		cout << "IMPOSSIBLE" << endl;
		return 0;
	}
	
	cout << s << endl;
}