///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>
#define int long long
#define fi first
#define si second
#define mp make_pair
#define pb push_back
#define pi pair<int,int>
#define f(l,r) for(int i=l;i<=r;i++)
#define M 100009
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
const int inf=1e18;
const int mod=1e9+7;
main()
{
  fast
  int t;
  cin>>t;
  while(t--)
  {

      int n,T,a,b;
      cin>>n>>T>>a>>b;
      pi ak[n+2];
      for(int i=1;i<=n;i++)
      {
          int typ;
          cin>>typ;
           ak[i].si=typ;
      }
      for(int i=1;i<=n;i++)
      {
          int tym;
          cin>>tym;
          ak[i].fi=tym;
      }
      sort(ak+1,ak+n+1);
      int pa[n+2];
      memset(pa,0,sizeof pa);
      for(int i=1;i<=n;i++)
      {
          pa[i]=pa[i-1];
          if(ak[i].si==0)pa[i]++;
      }
      int ans=0;
      ak[n+1].fi=T+1;
      map<int,int>akoyta;
      map<int,int>bkoyta;
      int asum=0,bsum=0;
      set<int>as,bs;
      set<int>::iterator it;
      int last=-1;
      int ag=0,bg=0;
      for(int i=n;i>=0;i--)
      {


         if(i==0)
         {
             int ex=ak[i+1].fi-1;
             int cnt=0;
             if(!as.empty() && ex>0){
             it=as.upper_bound(ex);
             if(it!=as.begin())
             {
                 it--;
                 int val=*it;
                 ex=ex-val;
                 int ok=akoyta[val];
                 cnt+=ok;
             }

             }
             if(!bs.empty() && ex>0){
             it=bs.upper_bound(ex);
             if(it!=bs.begin())
             {
                 it--;
                 int val=*it;
                 ex=ex-val;
                 int ok=bkoyta[val];
                 cnt+=ok;
             }

             }
          ans=max(ans,cnt);
          continue;

         }
         if(ak[i].si==0)ag++;
         else bg++;
          int lim=ak[i+1].fi-1;
          int lagbe=0;
          int cnt=0;
          lagbe=pa[i]*a+(i-pa[i])*b;
          if(last!=(-1) && ak[i].fi==last)
          {
              last=ak[i].fi;
                 if(ak[i].si==0)
         {
             asum+=a;
            as.insert(asum);
             akoyta[asum]=ag;
         }
         else
         {
             bsum+=b;
            bs.insert(bsum);
             bkoyta[bsum]=bg;
         }
              continue;
          }
          last=ak[i].fi;
         if(lagbe<=lim)
         {
             int ex=lim-lagbe;
             cnt=i;
             if(!as.empty() && ex>0){
             it=as.upper_bound(ex);
             if(it!=as.begin())
             {
                 it--;
                 int val=*it;
                 ex=ex-val;
                 int ok=akoyta[val];
                 cnt+=ok;
             }

             }
             if(!bs.empty() && ex>0){
             it=bs.upper_bound(ex);
             if(it!=bs.begin())
             {
                 it--;
                 int val=*it;
                 ex=ex-val;
                 int ok=bkoyta[val];
                 cnt+=ok;
             }

             }

         }
         if(ak[i].si==0)
         {
             asum+=a;
             as.insert(asum);
             akoyta[asum]=ag;
         }
         else
         {
             bsum+=b;
            bs.insert(bsum);
             bkoyta[bsum]=bg;
         }
         ans=max(ans,cnt);

      }

   cout<<ans<<endl;














  }



















































    return 0;
}
