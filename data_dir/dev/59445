#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())

#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);

const int N = 200005;
int org[N],ara[N],bara[N],cara[N];
int same[N];
int main()
{
    FastRead
    int n , k;
    cin >> n >> k;
    FOR(i,1,n){
        cin >> ara[i];
        org[ara[i]] = i;
    }
    FOR(i,1,n){
        cin >> bara[i];
        cara[i] = bara[i];
        bara[i] = org[bara[i]];
    }
    FOR(i,1,n)same[i] = i;
    int mn = 1e9;
    for(int i = n;i >= 1;i--){
        mn = min(mn,bara[i]);
        same[mn] = max(same[mn],bara[i]);
    }
    string s;
    int go = 0;
    int ch = 0;
    set<char>st;
    for(int i = 1;i <= n;i++){
        go = max(go,same[i]);
        s += char('a' + ch);
        st.insert(ch);
        if(go == i and ch + 1 < k)ch = ch + 1;
    }
    if(st.size() >= k){
        cout << "YES\n";
        string ans = s;
        for(int i = 1;i <= n;i++)ans[cara[i] - 1] = s[i - 1];
        cout << ans << "\n";
    }else{
        cout << "NO\n";
    }
}
/*
26 1
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
26 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 1

*/
