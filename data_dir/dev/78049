#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int n,m;
int vis[510][510];
int r1,c1,r2,c2;

bool valid(int x,int y)
{
    return  vis[x][y] < 3 && (x >= 1) && (y >= 1) && (x <= n) && (y <= m);
}

void dfs(int x,int y)
{
    vis[x][y]++;
    if( !valid(x,y) ) //already cracked or invalid
        return;

    
    for (int i = -1 ; i <= 1 ; i++)
        for (int j = -1 ; j <= 1 ; j++)
        {
            if (abs(i) + abs(j) == 1)
                dfs(x+i,y+j);
        }
        
    
    /*
    dfs(x+1,y);
    dfs(x-1,y);
    dfs(x,y+1);
    dfs(x,y-1);
    */
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    for (int i = 1 ; i <= n ; i++)
    {
        for (int j = 1 ; j <= m ; j++)
        {
            char c;
            cin >> c;
            if(c=='.')
                vis[i][j] = 1; //intact
            else 
                vis[i][j] = 2; //cracked
        }
    }
    cin >> r1 >> c1 >> r2 >> c2; //start,end
    vis[r1][c1] = 1; //cracked
    dfs(r1,c1);

    /*
    for (int i = 1 ; i <= n ; i++)
    {
        for (int j = 1 ; j <= m ; j++)
            cout << vis[i][j] << " ";
        cout << endl;
    }*/
    

    if (vis[r2][c2] >= 3)
        return cout << "YES" , 0;
    cout << "NO";
    return 0;
}