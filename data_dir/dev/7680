#include <bits/stdc++.h>
using namespace std;
using ll = long long;

const int maxn = 3e5+5;
int n; 
ll w[maxn];
struct Edge
{
    int to;
    ll wt;
};
vector<Edge> adj[maxn];

ll ans = 0;

ll dfs(int i, int p) {
    vector<ll> v;
    v.push_back(0);
    for (Edge e: adj[i]) if (e.to != p) {
        v.push_back(dfs(e.to,i)-e.wt);
    }
    sort(v.begin(),v.end(),greater<ll>());
    ans = max(ans,v[0]+w[i]);
    if (v.size() >= 2) ans = max(ans,v[0]+v[1]+w[i]);
    return v[0]+w[i];
}

int main() 
{
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    cin >> n;
    for (int i = 0; i < n; i++) cin >> w[i];
    for (int i = 0; i < n-1; i++) {
        int u, v; cin >> u >> v;
        ll c; cin >> c;
        --u; --v;
        adj[u].push_back({v,c});
        adj[v].push_back({u,c});
    }
    dfs(0,0);
    cout << ans << '\n';
}
