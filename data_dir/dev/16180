
/*
40 100
   1  1  1  3  3  2  2  7  7
9  11 10 10 14 14 5  5  4  4
4  4  20 20 20 20 22 27 1  28
28 28 30 30 30 32 18 37 38 39
*/

#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long int lli;
typedef pair<int,int> pii;

vector<int> v[312345];
// vector<int> cc[312345];
int dad[312345];
int sz[312345];
int mx[312345];
int cut[312345];

void dfsCount( int x )
{
	int vs = v[x].size();
	for ( int i=0 ; i<vs ; i++ )
	{
		int y = v[x][i];
		dfsCount( y );
		sz[x] += sz[y];
		mx[x] = max( mx[x] , sz[y] );
	}
	sz[x]++;
}

void dfs( int x )
{	
	int vs = v[x].size();
	// cout<<x<<" "<<vs<<"\n";
	if ( vs == 0 )
	{
		// cc[x].push_back( x );
		cut[x] = x;
		return;
	}
	
	for ( int i=0 ; i<vs ; i++ )
	{
		int y = v[x][i];
		dfs( y );
		
		if ( cut[x] == 0 ) 
		{
			int c = cut[y];
			while ( c != x )
			{
				int now = max( mx[c] , sz[x] - sz[c] );
				if ( now <= sz[x]/2 )
				{
					// cc[x].push_back( c );
					cut[x] = c;
					break;
				}
				c = dad[c];
			}
		}
	}
	
	if ( cut[x] == 0 ) cut[x] = x ; // , cc[x].push_back( x );
}

int main()
{
	int n , q;
	cin>>n>>q;
	
	for ( int i=2 ; i<=n ; i++ )
	{
		int p ; cin>>p;
		v[p].push_back( i );
		dad[i] = p;
	}
	
	/*
	for ( int i=1 ; i<=n ; i++ )
	{
		int vs = v[i].size();
		cout<<i<<" : ";
		for ( int j=0 ; j<vs ; j++ )
			cout<<v[i][j]<<" ";
		cout<<"\n";
	}*/
	
	dfsCount( 1 );
	
	
	// for ( int i=1 ; i<=n ; i++ )
		// cout<<i<<" "<<sz[i]<<" "<<mx[i]<<"\n";
	
	// cout<<"-> ";
	dfs( 1 );
	
	// for ( int i=1 ; i<=n ; i++ )
	{
		/*
		int vs = cc[i].size();
		cout<<i<<" : ";
		for ( int j=0 ; j<vs ; j++ )
			cout<<cc[i][j]<<" ";
		cout<<"\n";
		*/
		// cout<<i<<" : "<<cut[i]<<"\n";
	}
	
	for ( int i=1 ; i<=q ; i++ )
	{
		int x; cin>>x;
		cout<<cut[x]<<"\n";
	}
	
	return 0;
}