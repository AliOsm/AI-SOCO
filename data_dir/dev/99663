#include <iostream>
#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define ll long long
#define F first
#define S second
#define PI acos(-1)
#define EPS 1e-6
#define BASE 53ll
#define mod 1000000007ll
#define ld long double
#define MAX 1000000000
#define NIL 0
#define INF 1000000000
#define rd(a) scanf("%d",&a)
#define lp(i,a,n) for(int i=a;i<n;i++)
typedef pair<int,int>ii;
typedef pair<ii,ii>quad;
typedef pair<int,ii>edge;
typedef pair<vector<int>,int>vii;
const int N=200005;

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll fact(ll n){ll ret=1;for(int i=1;i<=n;i++)ret*=i;return ret;}
bool is_vowel(char c){if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;return 0;}
ld getDistance(ld x1,ld y1,ld x2,ld y2){return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}
ll power(ll base,ll p){if(p==1)return base;if(!p)return 1ll;ll ret=power(base,p/2);ret*=ret;ret%=mod;if(p&1)ret*=base;return ret%mod;}


string s;
int dp[N][2];
int solve(int idx,bool is){
  if(idx==s.length())return 0;
  if(dp[idx][is]!=-1)return dp[idx][is];
  int ret=N;
  if(is){
       ret=min(ret,solve(idx+1,0)+1);/// change it
  }
  else{
     if(idx+1==s.length())ret=solve(idx+1,0);
     else{
        ret=solve(idx+1,s[idx]==s[idx+1]);
        ret=min(ret,solve(idx+1,0)+1);
     }
  }
  return dp[idx][is]=ret;
}
char get(int idx,int last){
       char c='a';
       lp(i,0,26){
          if(i)c++;
          if(idx+1<s.length()&&c==s[idx+1])continue;
          if(i==last)continue;
          break;
       }
    return c;
}
void go(int idx,bool is,int sol,int last){
   if(idx==s.length())return;
   if(is){/// ablya zye
       char c=get(idx,last);
       printf("%c",c);
       go(idx+1,0,sol-1,c-'a');
   }
   else{
      if(idx+1==s.length()){
          printf("%c",s[idx]);
          return;
      }
      if(solve(idx+1,s[idx]==s[idx+1])==sol){
        printf("%c",s[idx]);
        go(idx+1,s[idx]==s[idx+1],sol,s[idx]-'a');
      }
      else{
        char c=get(idx,last);
        printf("%c",c);
        go(idx+1,0,sol-1,c-'a');
      }
   }
}
int main()
{
   //freopen("test.in","r",stdin);
   cin>>s;
   memset(dp,-1,sizeof(dp));
   go(0,0,solve(0,0),-1);
   return 0;
}
