#include <bits/stdc++.h>

#define pb push_back
#define pp pop_back
#define mp make_pair
#define ld long double
#define f first
#define s second
#define ll long long

using namespace std;

const int N = 1e5 + 5;

const int mod = 1e9 + 7;

void add(int &a, int b)
{
	a += b;
	if (a >= mod) a -= mod;
}

int sum(int a, int b)
{	
	add(a, b);
	return a;
}

int mult(int a, int b)
{
	return (1ll * a * b) % mod;
}

int n, a[N], T[N * 40], ans, dp[(int)1e6 + 1];

int get(int l, int r, int v = 1, int tl = 1, int tr = 1e6)
{
	if (tl > r || tr < l) return 0;
	if (l <= tl && tr <= r) return T[v];
	int tm = (tl + tr) / 2;
	return sum(get(l, r, v * 2, tl, tm), get(l, r, v * 2 + 1, tm + 1, tr));
}

void upd(int pos, int x, int v = 1, int tl = 1, int tr = 1e6)
{	
	if (tl == tr) 
	{
		T[v] = x;
		return;
	}
	int tm = (tl + tr) / 2;
	if (pos <= tm) upd(pos, x, v * 2, tl, tm);
	else upd(pos, x, v * 2 + 1, tm + 1, tr);
	T[v] = sum(T[v * 2], T[v * 2 + 1]);
}

int main()
{
  ios_base::sync_with_stdio(0);
  cin >> n;
  for (int i = 1;i <= n;i++) cin >> a[i];
  for (int i = 1;i <= n;i++) 
  {
  	dp[a[i]] = sum(mult(get(1, a[i]), a[i]), a[i]);
  	upd(a[i], dp[a[i]]);
  }
  for (int i = 1;i <= 1e6;i++) add(ans, dp[i]);
  cout << ans;
	return 0;
}