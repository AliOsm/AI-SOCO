#include <bits/stdc++.h>
#define endl '\n'
#define debug(X) cout << #X << " = " << X << endl
#define SZ(X) ((int)X.size())

using namespace std;

typedef pair<int, int> ii;

struct PT {
	int x, y, z, id;
	PT() {}
	PT(int _x, int _y, int _z, int _id) : x(_x), y(_y), z(_z), id(_id) {}
	bool operator < (const PT &o) const {
		if (x != o.x) return x < o.x;
		if (y != o.y) return y < o.y;
		if (z != o.z) return z < o.z;
		return id < o.id;
	}
};

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	#ifdef UTP
	freopen("input.txt", "r", stdin);
	#endif
	int n; cin >> n;
	vector<PT> pts(n);
	for (int i = 0; i < n; i++) {
		int x, y, z; cin >> x >> y >> z;
		pts[i] = PT(x, y, z, i);
	}
	sort(pts.begin(), pts.end());
	vector<ii> ans;
	vector<int> tmp2;
	int lx = 0, rx = 0;
	while (lx < n) {
		while (rx < n && pts[lx].x == pts[rx].x) rx++;
		vector<int> tmp1;
		int ly = lx, ry = lx;
		while (ly < rx) {
			while (ry < rx && pts[ly].y == pts[ry].y) ry++;
			for (int i = ly; i + 1 < ry; i += 2)
				ans.push_back(ii(pts[i].id, pts[i + 1].id));
			if ((ry - ly) % 2) tmp1.push_back(pts[ry - 1].id);
			ly = ry;
		}
		for (int i = 0; i + 1 < SZ(tmp1); i += 2)
			ans.push_back(ii(tmp1[i], tmp1[i + 1]));
		if (SZ(tmp1) % 2)
			tmp2.push_back(tmp1[SZ(tmp1) - 1]);
		lx = rx;
	}
	for (int i = 0; i < SZ(tmp2); i += 2) ans.push_back(ii(tmp2[i], tmp2[i + 1]));
	for (auto curr : ans) cout << curr.first + 1 << " " << curr.second + 1 << endl;
	return 0;
}
