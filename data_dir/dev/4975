#include<bits/stdc++.h>

#define F first
#define S second
#define int long long
#define ull unsigned long long
#define pb push_back

using namespace std;
const int N = 300000;
vector < int > g[N];
int b[N], a[N], c[N], d[N], s, y = 1e9, n, s1;
void dfs1(int v, int p = -1){
    int k = 1;
    int l = 0;
    for (auto u: g[v]){
        if (u == p) continue;
        dfs1(u, v);
        int x = __gcd(k, b[u]);
        k /= x;
        if (b[u] > s / k){
            cout << s;
            exit(0);
        }
        k *= b[u];
        l++;
    }
    c[v] = l;
    if (l == 0) b[v] = 1; else{
        if (l > s / k){
            cout << s;
            exit(0);
        }
        b[v] = l * k;
    }
}
void dfs2(int v, int x, int p = -1){
    for (auto u: g[v]){
        if (u == p) continue;
        dfs2(u, x / c[v], v);
    }
    if (c[v] == 0) y = min(y, a[v] / x),
    d[v] = x;
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin >> n;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        s += a[i];
    }
    for (int i = 1; i < n; i++){
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs1(1);
    dfs2(1, b[1]);
    for (int i = 1; i <= n; i++){
        s1 += y * d[i];
    }
    cout << s - s1;
}
