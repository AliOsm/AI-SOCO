#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef unsigned long long int ulli;
typedef pair<int,int> pii;
typedef priority_queue< int, vector< int >, greater< int > >  minHeap;

#define ones(x) __builtin_popcount(x)
#define onesl(x) __builtin_popcountl(x)
#define onesll(x) __builtin_popcountll(x)

#define pb push_back
#define eb emplace_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define mod 998244353
#define FastIO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

int Set(int N,int pos)
{
    return N=N | (1<<pos);
}
int reset(int N,int pos)
{
    return N = N & ~(1<<pos);
}
bool check(int N,int pos)
{
    return (bool)(N & (1<<pos));
}


inline int addmod(int x ,int y){return (x%mod + y%mod)%mod;}
inline int submod(int x ,int y){return (x%mod - y%mod + mod)%mod;}
inline int mulmod(int x ,int y){return (x%mod *1LL* y%mod)%mod;}
inline int nextSubMask(int i , int mask) {return (i-1)&mask;} /// returns next smallest submask

void we_r_done(){cout<<"NO"; exit(0);}

void debug(bool ok , string mssg)
{
    if(ok)return;
    cout<<mssg;
    exit(0);
}

int main()
{
    ///freopen("output.txt","w",stdout);
    ///freopen("input.txt","r",stdin);

    ///FastIO;

    int n;
    scn(n);

    lli fact[n+3];
    fact[0] = 1;

    for(int i=1; i<=n; i++) fact[i] = mulmod(fact[i-1],i);

    int a[n] , b[n];
    vector<lli>cnta(n+3,0) , cntb(n+3,0);
    vector<pii>vv;

    for(int i=0; i<n; i++) {
        scn2(a[i], b[i]);

        cnta[a[i]]++;
        cntb[b[i]]++;

        vv.pb({a[i],b[i]});
    }

    lli ans = fact[n];

    lli now1 = 1 , now2 = 1;

    for(int i=1; i<=n; i++){
        if(cnta[i]) now1 = mulmod(now1 , fact[cnta[i]]);
        if(cntb[i]) now2 = mulmod(now2 , fact[cntb[i]]);
    }


    ans = submod(ans,addmod(now1,now2));
//cout<<ans<<endl;
    sort(atoz(vv));

    lli cntnow =   1;
    lli c = 0;
    for(int i=1 ; i<vv.size(); i++){
        if(vv[i].se<vv[i-1].se){
            cntnow = 0;
            break;
        }
        else if(vv[i] == vv[i-1]){
            c++;
        }
        else{
            cntnow = mulmod(cntnow , fact[c+1]);
            c=0;
        }
    }
    cntnow = mulmod(cntnow , fact[c+1]);

    cout<<addmod(ans,cntnow);

    return 0;

}

///sin and cos expect input in radians not degrees. so use , sin(degrees * pi / 180)
///using bs = bitset<MX>; // how many distinct number can be form?
