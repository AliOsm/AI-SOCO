/*######################################################
#########~~~~~####~~~~###~~##~~##~~##~~##~~##~~#########
#########~~##~~##~~##~~##~~~#~~##~~~#~~##~~##~~#########
#~~~~~~##~~~~~###~~~~~~##~~#~~~##~~#~~~##~~##~~##~~~~~~#
#########~~######~~##~~##~~##~~##~~##~~##~~##~~#########
#########~~######~~##~~##~~##~~##~~##~~###~~~~##########
######################################################*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rtn return
#define endl '\n'
#define f first
#define s second
#define sz(x) (int)(x).size()
#define pb push_back
#define db long double
#define bs 1000000007
#define inf 2e18
#define eps 1e-15
#define pll pair <ll, ll>
#define vi vector<ll>
#define fill(a,v) memset(a,v,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define loop(i,a,b) for(ll i=a;i<b;i++)
#define loop1(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,b) for(ll i=0;i<b;i++)
#define pool(i,a,b) for(ll i=b-1;i>=a;i--)
#define per(i,a) for(ll i=(a-1);i>=0;i--)

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " = " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');
  cerr.write(names, comma - names) << " = " << arg1<<" |";
  __f(comma+1, args...);
}
#else
#define trace(...)
#endif

ll n;
string s;

string to_string(int n) {
  stringstream ss;
  ss << n;
  rtn ss.str();
}

int pos(ll x) {
  string t = to_string(x);
  int in = 0, in2 = 0;
  while (in < s.size() && in2 < t.size()) {
    if (s[in] == t[in2]) {
      ++in2;
    }
    ++in;
  }
  if (in2 != t.size()) rtn -1;
  rtn s.size() - t.size();
}

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  //start
  cin >> n;
  s = to_string(n);
  ll ans = inf;
  for (int i = 1; i*i <= n; i++) {
    ll what = pos(i*i);
    //cout << i * i << ' ' << what << endl;
    if (what != -1) {
      ans = min(ans, what);
    }
  }
  if (ans == inf)
    cout << -1 << endl;
  else
    cout << ans << endl;
  rtn 0;
}
