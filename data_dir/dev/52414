//#include <unordered_set>
//#include <unordered_map> 
#include <functional>
#include <stdexcept>
#include <streambuf>
#include <exception>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <typeinfo>
#include <utility>
#include <complex>
#include <numeric>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <cstring>
#include <locale>
#include <memory>
#include <iosfwd>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <ios>
#include <new>
#include <set>
    
using namespace std;
     
#define F first
#define S second
#define lb lower_bound
#define ub upper_bound
#define pb push_back
#define pf push_front
#define ppb pop_back
#define mp make_pair
#define bbp _builtin_popcount
#define al 0x3F3F3F3F
#define sz(x) x.size()
#define all(x) x.begin(), x.end()
#define in insert
#define ppf pop_front
#define endl '\n'
#define resize(v) v.resize(unique(all(v)) - v.begin());
//#define int long long

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <int, ll> pil;
typedef pair < ll, int > pli;
typedef pair <double, double> pdd;
typedef pair <int, double> pid;
typedef pair <double, int> pdi;
typedef pair <ll, double> pld;
typedef pair <double, ll> pdl;
typedef pair <string, string> pss;    

const int mod = (int)1e9 + 7;
const int MAX_N = (int)2e5 + 123;
const int N = 1e6 + 123;                     
const int INF = al;           
const ll INFL = 3e18 + 1;
const double pi = acos(-1.0);
const double eps = 1e-9;
const int dx[] = {0, 0, 1, 0, -1};
const int dy[] = {0, 1, 0, -1, 0};

int n, m, a[MAX_N], cnt[2], b[MAX_N];
set <int> s;
map <int, int> q;

inline int diff() {
	int ans = 0;
	set <int> Ss;
	map <int, int> Cnt;
	for (int i = 1; i <= n; i ++) Cnt[a[i]] ++, Ss.in(a[i]);
	for (int i = 1; i <= n; i ++) { 
		if (Ss.count(b[i])) {
			Cnt[b[i]] --;
			if (!Cnt[b[i]]) Ss.erase(b[i]);
		}
		else ans ++;
	}
	return ans;
	
}

inline int gcd(int a, int b) {
	if (!b) return a;
    return gcd(b, a % b);                  
}                                    

inline void boost() {
    ios_base :: sync_with_stdio(NULL);
    cin.tie(NULL), cout.tie(NULL);
}
    
inline void Solve() {    
    boost();
    cin >> n >> m;
    for (int i = 1; i <= n; i ++) cin >> a[i], cnt[(a[i] & 1)] ++, b[i] = a[i], q[a[i]] ++;
//    cout << cnt[0] << ' ' << cnt[1], exit(0);
    int cur = 1;
    int cur2 = 2;
    int ans = 0;
    for (int i = 1; i <= n; i ++) {         
    	if (q[a[i]] > 1) {                 
    		if (a[i] & 1) {
    			if (cnt[0] < cnt[1]) {
    				cnt[0] ++, cnt[1] --;
    				while (q[cur2] > 0) cur2 += 2;
    				if (cur2 > m) cout << -1, exit(0);
    				q[a[i]] --, q[cur2] ++;
    				a[i] = cur2;
    				cur2 += 2;
    				continue;
    			}
    			while (q[cur] > 0) cur += 2;
    			if (cur > m) cout << -1, exit(0);
    			q[a[i]] --, q[cur] ++;
    			a[i] = cur;
    			cur += 2;
    		}
    		else {
    			if (cnt[1] < cnt[0]) {
    				cnt[1] ++, cnt[0] --;
    				while (q[cur] > 0) cur += 2;
    				if (cur > m) cout << -1, exit(0);
    				q[a[i]] --, q[cur] ++;
    				a[i] = cur;
    				cur += 2;
    				continue;
    			}
    			while (q[cur2] > 0) cur2 += 2;
            	if (cur2 > m) cout << -1, exit(0);
            	q[a[i]] --, q[cur2] ++;
            	a[i] = cur2;      
            	cur2 += 2;
            }
    	}
    }
   // for (int i = 1; i <= n; i ++) cout << a[i] << ' ';
   // exit(0);
    for (int i = 1; i <= n; i ++) {
  //  	cout << cnt[0] << ' ' << cnt[1] << endl;
    	if (a[i] & 1 && cnt[0] < cnt[1]) {
    		cnt[0] ++, cnt[1] --;
    		if (cur2 > m) cout << -1, exit(0);
    		while (q[cur2] > 0) {
    			cur2 += 2;
    			if (cur2 > m) cout << -1, exit(0);
    		}
    		q[a[i]] --, q[cur2] ++;
    		a[i] = cur2;
    		cur2 += 2;
    	}                                 
    	else if (!(a[i] & 1) && cnt[1] < cnt[0]) {
    		cnt[0] --, cnt[1] ++;
    		if (cur > m) cout << -1, exit(0);
    		while (q[cur] > 0) {
    			cur += 2;
    			if (cur > m) cout << -1, exit(0);
    		}
    		q[a[i]] --, q[cur] ++;
    		a[i] = cur;
    		cur += 2;
    	}
    }
    if (cnt[0] != cnt[1]) cout << -1, exit(0);
   // for (int i = 1; i <= n; i ++) cout << a[i] << ' ';
   // exit(0);
    cout << diff() << endl;
    for (int i = 1; i <= n; i ++) cout << a[i] << ' ';
}         
                     
main () {
//	freopen("E.in", "r", stdin);
//    freopen("E.out", "w", stdout);                   	
    int tt = 1;
    while (tt--) {
        Solve();
	}
}