#include <bits/stdc++.h>

//#include "rubo.h"
//#define mp make_pair
#define pb push_back
#define ll long long
#define vc vector
#define in ll
#define SQ(x) (x)*(x)
#define F first
#define S second
#define ld long double
#define dbl long double
#define pll pair<ll,ll>
#define pii pair<int,int>
#define pdd pair<dbl,dbl>
#define all(x) x.begin(), x.end()
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
//#define printf(fmt, ...) (0)
//#define HOME
#define y0 ngacaleiebinvoaeu
#define y1 gnarpipipaigare
using namespace std;

const int MAXN = 77777;

int n;
vc<string> v;


//trie
struct vertex {
    int next[10];
    int fin = 0;

};

vertex mv() {
    vertex v;
    loop(i,10) v.next[i] = -1;
    v.fin = 0;
    return v;
}

vertex tr[1000000];
int sz = 1;

void add(string &s) {
    int v = 0;      //Current index of trie
    for (char ch : s) {
        int i = ch - '0';
        //If such vertex doesn't exist then create
        if (tr[v].next[i] == -1) {
            tr[v].next[i] = sz;
            tr[sz] = mv();
            sz++;
        }
        //arden karas gnas, go :)
        v = tr[v].next[i];
    }
    tr[v].fin ++;
}

int query(string &s) {
    int v = 0;      //Current index of trie
    for (char ch : s) {
        int i = ch - '0';
        v = tr[v].next[i];
    }
    return tr[v].fin;
}



int how_many(string &s, string &sb){
    int l = s.length();
    int sl = sb.length();
    int cnt = 0;
    for(int i = 0 ;i < l; i++){
        if(s[i] == sb[0]){
            bool eq = true;
            for(int j = 0; j < sl; j++){
                if(s[i+j] != sb[j]) {
                    eq = false;
                    break;
                }
            }
            if(eq)
                cnt++;
        }
    }

    return cnt;
}

int main() {

    tr[0] = mv();

    cin >> n;
    v.resize(n);
    loop(i,n){
        cin >> v[i];
    }

    for(string s : v){
//        printf("---papa %s\n",s.c_str());
        for(int i = 0; i < 9; i++) {
            for (int j = i; j < 9; j++) {
                string sb = s.substr(i,j-i+1);
                add(sb);
//                printf("%s\n",sb.c_str());
            }
        }
//        printf("=============\n");
    }


//    printf("\n\n\n");

    for(string s : v){
//        printf("---papa %s\n",s.c_str());
        vc<string> vs;

        for(int i = 0; i < 9; i++) {
            for (int j = i; j < 9; j++) {
                string sb = s.substr(i, j - i + 1);
//                printf("sb %s\n",sb.c_str());
                int hw = how_many(s,sb);

                int all_cnt = query(sb);
                if(all_cnt == hw){
                    vs.pb(sb);
//                    printf("can be\n");
                }
            }
        }

        int i = 0;
        int bl = -1;
        for(int j = 0; j < vs.size(); j++){
            if(bl == -1 || vs[j].length() < vs[i].length()){
                i = j;
                bl = vs[i].length();
            }
        }

        printf("%s\n",vs[i].c_str());
    }


    return 0;
}
