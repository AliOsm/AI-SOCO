//Author - Rahil Malhotra
#include <bits/stdc++.h>
using namespace std;
 
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define int long long
#define double long double

int n,m,k;
vector<int>v;
int maxi[200005];
int presum[200005];
int cache[2005];
int dp(int pos)
{
    if(pos==0)
        return 0;
    int &ans=cache[pos];
    if(ans!=-1)
        return ans;
    ans=dp(pos-1);
    for(int i=1;i<=pos;i++)
        if(maxi[i]!=0)
            ans=max(ans,dp(pos-i)+presum[pos-i+1+maxi[i]-1]-presum[pos-i]);
    return ans;
}
int32_t main()
{
    IOS;
    cin>>n>>m>>k;
    for(int i=0;i<n;i++)
    {
        int a;cin>>a;
        v.push_back(a);
    }
    v.push_back(0);
    sort(v.begin(),v.end());
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;
        maxi[a]=max(maxi[a],b);
    }
    int sum=0;
    for(int i=1;i<=k;i++)
    {
        sum+=v[i];
        presum[i]=v[i]+presum[i-1];
    }
    memset(cache,-1,sizeof(cache));
    cout<<sum-dp(k);
}