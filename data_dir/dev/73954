#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()
#define endl "\n"

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

const int MAXN = 1e5 + 5;
ll dp[MAXN], mod = 1e9 + 7, n;
string a;

ll rec(ll ind)
{
	if(ind >= n - 1) return 1;
	if(dp[ind] != -1) return dp[ind];
	ll ans = 0;
	ans = (ans + rec(ind + 1)) % mod;
	if((a[ind] == 'u' && a[ind + 1] == 'u') || (a[ind] == 'n' && a[ind + 1] == 'n')) ans = (ans + rec(ind + 2)) % mod;
	return dp[ind] = ans;
}

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	cin >> a;
 	n = a.length();
 	memset(dp, -1, sizeof(dp));
 	for(int i=0;i<n;i++)
 	{
 		if(a[i] == 'm' || a[i] == 'w')
 		{
 			cout << 0 << endl;
 			return 0;
 		}
 	}
 	cout << rec(0) << endl;
    return 0;
}