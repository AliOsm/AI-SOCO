#include <iostream>
#include <iomanip>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <ctime>
#include <cassert>
#include <complex>
#include <string>
#include <cstring>
#include <chrono>
#include <random>
#include <bitset>
using namespace std;
#define int long long
#define endl '\n'
typedef long long ll;

//the highest bits of ai have to be increasing

void solve() {
    int d,mod;
    cin >> d >> mod;
    ++d;
    int highestBit = 0;
    for(int bit = 0; bit < 31; ++bit) {
        if(d&(1LL<<bit)) highestBit = bit;
    }
    //cout << "highestBit: " << highestBit << endl;
    vector<int> dp(31,0);
    int res = 0;
    for(int bit = 0; bit <= highestBit; ++bit) {
        if(bit == highestBit) {
            dp[bit] = (d-(1<<highestBit));
        } else {
            dp[bit] = (1LL<<bit);
        }
        for(int prevBit = 0; prevBit < bit; ++prevBit) {
            if(bit == highestBit) {
                dp[bit] += (d-(1<<highestBit)) * dp[prevBit] % mod;
            } else {
                dp[bit] += (1LL<<bit) * dp[prevBit] % mod;
            }
        }
        dp[bit] %= mod;
        //cout << "bit,dp: " << bit << " " << dp[bit] << endl;
        res += dp[bit];
        res %= mod;
    }
    cout << res << endl;
}

signed main() {
    //ios::sync_with_stdio(false);
    //cin.tie(0);
    //cout.tie(0);
    int t;
    cin >> t;
    while(t--) {
        solve();
    }
}
