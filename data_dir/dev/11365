#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 1e9;
ll LINF = (ll)4e18;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("cities.in", "r", stdin);
	//freopen("cities.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n, k;
	cin >> n >> k;
	string s;
	cin >> s;
	set<char> q;
	forn(i, 0, n) {
		q.insert(s[i]);
	}
	if (k > n) {
		string ans = s;
		char c = *q.begin();
		forn(i, 0, k - n) {
			ans.push_back(c);
		}
		cout << ans;
		return 0;
	}
	char mx = *q.rbegin();
	char mn = *q.begin();
	string ans = "";
	forn(i, 0, k) ans.push_back(s[i]);
	for (int i = k - 1; i >= 0; i--) {
		if (ans[i] != mx) {
			char c = *q.upper_bound(ans[i]);
			ans[i] =c;
			forn(j, i + 1, k) ans[j] = mn;
			cout << ans;
			return 0;
		}
	}
	cout << ans;
	return 0;
}