#include<bits/stdc++.h>
#define int long long
#define _USE_MATH_DEFINES
#define ll long long
#define ins Not Needed Thing
#define ull unsigned long long
#define ld long double
#define Accepted 0
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define mp make_pair
#define sz(x) (int)(x.size())
#define all(x) x.begin(),x.end()
#define F first
#define S second
#define emp What is it
#define SORRY FUL Accepted 
#define dimash the top one
#define I wish 
#define you be a little more calm
#define SpeedForce ios_base::sync_with_stdio(0), cin.tie(0)

using namespace std;

const double eps = 0.000001;
const ld pi = acos(-1);
const int maxn = 1e7 + 9;
const int mod = 1e9 + 7;
const ll MOD = 1e18 + 9;
const ll INF = 1e18 + 123;
const int inf = 2e9 + 11;
const int minn = 1e5 + 9;
const int N = 5e3 + 123;                                          
const int NN = 2e5 + 123;
const int PRI = 555557;
const int pri = 997;

int tests = 1;
int n, m, k, a[NN];
ll cnt[NN][3], ans, p, q, r, mx, pre[NN], suf[NN];

inline void Solve () {
	cin >> n >> p >> q >> r;
	for (int i = 1; i <= n; i ++) {
	 	cin >> a[i];
	 	cnt[i][0] = a[i] * p;
	 	cnt[i][1] = a[i] * q;
	 	cnt[i][2] = a[i] * r;
	 	if(i > 1) pre[i] = max(pre[i - 1], cnt[i][0]);
	 	else pre[i] = cnt[i][0];
	}

	for (int i = n; i >= 1; i --) {
		if(i == n) suf[i] = cnt[i][2];
		else suf[i] = max(suf[i + 1], cnt[i][2]);
	}

	ll Ss = pre[1] + cnt[1][1] + suf[1];
	
	for (int i = 1; i <= n; i ++) {
		Ss = max(Ss, pre[i] + cnt[i][1] + suf[i]);
	}

	cout << Ss;
}

main () {
	SpeedForce;
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);	
	// cin >> tests;
	while(tests --) {
		Solve ();
		// Ee Zadrot
	}	
}