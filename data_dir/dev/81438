#include <bits/stdc++.h>

using namespace std;

int getSum(int l, int r, vector<int> &sum) {
    if (r < 0 || l == (int)sum.size())
        return 0;
    if (l == 0)
        return sum[r];
    else
        return sum[r] - sum[l - 1];
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n, k;

    cin >> n >> k;

    vector<int> sum(n, 0);

    string s;
    cin >> s;

    if (s[0] == '0')
        sum[0] = 1;
    for (int i = 1; i < n; ++i) {
        if (s[i] == '0')
            sum[i] = 1;
        sum[i] += sum[i - 1];
    }

    int l = 1, r = n;
    while (l <= r) {
        int z = (l + r) / 2;
        bool flag = false;
        for (int i = 0; i < n; ++i) {
            if (s[i] == '0' && getSum(max(i - z, 0), i - 1, sum) + getSum(i + 1, min(i + z, n - 1), sum) >= k)
                flag = true;
        }
        if (flag)
            r = z - 1;
        else
            l = z + 1;
    }

    cout << l;

    return 0;
}
