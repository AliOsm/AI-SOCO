//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(5e2+5);
const ll mod=(ll)(998244353);
int dp[2][maxn],pref[2][maxn];
int f[maxn],poww_2[maxn],pre[maxn];

inline int mul(ll a,ll b)
{
    return (a*b)%mod;
}

inline int add(int a,int b)
{
    int ret=a+b;

    if(ret>=mod)
    {
        ret-=mod;
    }

    return ret;
}

inline int sub(int a,int b)
{
    int ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return ret;
}

inline int poww(ll a,ll b)
{
    int x=1,y=a;

    while(b>0)
    {
        if(b%2)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return (int)(x%mod);
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);

    // O(n^2)

    int n,x;cin>>n>>x;

    poww_2[0]=1;

    for(int i=1;i<maxn;i++)
    {
        poww_2[i]=add(poww_2[i-1],poww_2[i-1]);
    }

    for(int i=1;i<=n;i++)
    {
        memset(dp,0,sizeof(dp));dp[0][0]=1;

        memset(pref,0,sizeof(pref));

        int sum[2]={1,0};int ptr=0;

        for(int j=i;j<=n;j++)
        {
            for(int k=0;k<2;k++)
            {
                int xx=sub(pref[1-k][j-1],pref[1-k][j-i]);

                dp[k][j]=add(xx,mul(sum[1-k],2));
            }

            ptr++;

            for(int k=0;k<2;k++)
            {
                sum[k]=add(mul(sum[k],2),dp[k][ptr]);

                pref[k][j]=add(pref[k][j-1],dp[k][j]);
            }
        }

        int val1=0,val0=0;

        for(int j=1;j<=n;j++)
        {
            val1=add(val1,mul(dp[1][j],poww_2[n-j]));

            val0=add(val0,mul(dp[0][j],poww_2[n-j]));
        }

        f[i]=sub(val1,val0);

        // at-least one subarray of length >=i, with equals...

      //   cout<<f[i]<<endl;
    }

    for(int i=n;i>=1;i--)
    {
        for(int j=i+1;j<=n;j++)
        {
            f[i]=sub(f[i],f[j]);
        }
    }

    for(int i=1;i<=n;i++)
    {
        pre[i]=add(pre[i-1],f[i]);
    }

    int res=0;

    for(int i=1;i<=n;i++)
    {
        int curr=max(0,(x/i)-(x%i==0?1:0));

        curr=min(curr,n);

        res=add(res,mul(f[i],pre[curr]));
    }

    res=mul(res,poww(2,mod-2));

    cout<<res<<endl;

    return 0;
}
