#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >

typedef unsigned long long ull;
typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl E = 2.71828182845904523536;
const ldbl pi = acos(-1);
const dbl eps = 1e-2;
const ll mod = 1e9+7;
const ll inf = 1LL<<30;

/** /////////// ** Code ** /////////// **/

int point[1111][11];
int ab[11],ac[11];
vector<int>good;
bool bad[1111];

bool ok(int a,int b,int c){
    memset(ab,0,sizeof ab);
    memset(ac,0,sizeof ac);

    for(int i=0 ; i<5 ; i++) ab[i]=point[b][i]-point[a][i];
    for(int i=0 ; i<5 ; i++) ac[i]=point[c][i]-point[a][i];

    int sum=0;
    for(int i=0 ; i<5 ; i++)sum+=(ab[i]*ac[i]);

    return sum > 0;
}

int main()
{
    int n; scanf("%d",&n);
    for(int i=0 ; i<n ; i++)
        for(int j=0 ; j<5 ; j++)
            scanf("%d",&point[i][j]);

    for(int i=0 ; i<n ; i++){
        bool f=1;
        for(int j=0 ; j<n && f ; j++){
            if(j == i) continue;
            for(int k=0 ; k<n && f ; k++){
                if(k == j || k == i) continue;
                if(ok(i,j,k)){
                    bad[i]=1;
                    f=0;
                }
            }
        }
    }

    for(int i=0 ; i<n ; i++) if(!bad[i]) good.push_back(i+1);

    printf("%d\n",good.size());
    for(auto p:good) printf("%d\n",p);

    return 0;
}