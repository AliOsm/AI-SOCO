///In_The_Name_Of_Allah_The_Merciful
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define setDP(arr) memset(arr,-1,sizeof arr)
#define Clear(arr) memset(arr,0,sizeof arr)
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define sz(x) ((int)(x).size())
const ll mod = 1e9+7;
bool isP(ll n){
    int d = 0;
    for(ll i = 1 ; i*i <= n ; i++){
        if (n%i == 0){
            d++;
            if (i != n/i)
                d++;
        }
    }
    return d == 2;
}
ll po(ll n , ll p){
    if (!p) return 1LL;
    ll ret = po(n,p/2LL);
    ret = (ret%mod * ret%mod)%mod;
    if (p&1LL) ret = (ret%mod * n%mod);
    return ret%mod;
}
ll solve(ll n , ll p){
    ll cr = 0;
    while(n >= p){
        cr += (n/p);
        n /= p;
    }
    return po(p,cr);
}
int main()
{
    ll x,n;
    cin >> x >> n;
    vector <ll> p;
    for(ll i = 1 ; i*i <= x ; i++){
        if (x%i == 0){
            if (isP(i)) p.pb(i);
            if (i != x/i){
                if (isP(x/i)) p.pb(x/i);
            }
        }
    }
    ll ans = 1;
    rep(i,0,sz(p))
        ans = (ans%mod * solve(n,p[i])%mod)%mod;
    cout << ans << endl;
    return 0;
}
