#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>

using namespace std;

vector<int> mn;
vector<int> mx;

int main()
{

    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    int good=0;
    for (int i=0;i<n;i++)
    {
        int k;
        cin >> k;
        int g=1e9;
        int G=-1;
        int u=0;
        for (int j=0;j<k;j++)
        {
            int i;
            cin >> i;
            if (i<g)
                g=i;
            if (i>g)
                u=1;
            if (i>G)
                G=i;
        }
        if (u)
            ++good;
        else{
            mn.push_back(g);
            mx.push_back(G);
        }
    }

    long long int ans=n*1ll*n-(n-good)*1ll*(n-good);
    sort(mn.begin(),mn.end());
    sort(mx.begin(),mx.end());
    for (auto x:mn)
    {
        ans+=mx.end()-upper_bound(mx.begin(),mx.end(),x);
    }
    cout << ans << endl;


    return 0;
}
