#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define for1(i,n) for(int i=1;i<=(int)(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N=202;

int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      int n;
      cin>>n;
      vector<pair<int,pii>> v;
      for(int i=0;i<n;i++)
      {
            int l,r;
            cin>>l>>r;
            v.pb({l,{0,i}});
            v.pb({r,{1,i}});
      }
      sort(all(v));
      set<int> s;
      int ans=0;
      for(int i=0;i<v.size();i++)
      {
            if(v[i].se.fi==0)
            {
                  s.insert(v[i].se.se);
            }
            else{
                  s.erase(v[i].se.se);
            }
            // for(auto x:s)
            // {
            //       cout<<x<<" ";
            // }
            // cout<<"\n";
            // if((int)s.size()==3) cout<<i<<" ";
            ans=max(ans,(int)s.size());
      }
      if(ans<=2)
      {
            cout<<"YES\n";
      }
      else cout<<"NO\n";
}   
// I never lose. I either win or I learn