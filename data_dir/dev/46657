    #include <bits/stdc++.h>
             
    using namespace std;
    typedef long long ll;
    typedef vector<ll> vl ;
    typedef pair<ll,ll> pl;
             
    #define mp make_pair
    #define pb push_back
    #define f first
    #define s second
    #define all(v) (v).begin(),(v).end()
    #define max(a,b) (a>b ? a : b)
    #define min(a,b) (a<b ? a : b)
    #define FAST ios::sync_with_stdio(0), cin.tie(0),cout.tie(0)
             
    const int MOD = 998244353 ;
    const int N = 2000005;
    const double PI =4*atan(1);
    const double eps = 1e-7;
    const long long oo = 1e10;
    const int K = 205;

    ll _sieve_size;bitset<10000010> bs;vl primes;
    void sieve(ll upperbound) {
      _sieve_size = upperbound + 1;bs.set();bs[0] = bs[1] = 0;
      for (ll i = 2; i <= _sieve_size; i++) if (bs[i]) {
        for (ll j = i * i; j <= _sieve_size; j += i) bs[j] = 0;primes.push_back((int)i); }
    }
    ll gcd(ll u, ll v){
        if(v==0)return u;
        return gcd(v,u%v);
    }
    ll vis[1000];
    ll t;
    ll ans;
    int main(){
        //FAST;
        //freopen("easy.txt","r",stdin);
        sieve(680);
        //cout << primes.size() << endl;
        cin >> t;
        //int cnt=0;
        //t=1;
        while(t--){
            memset(vis,0,sizeof(vis));
            for(int i=0;i<primes.size();){
                ll j=i;
                //cnt++;
                ll res=1;
                while(res*primes[j]<=1e18 && j<primes.size() && res*primes[j]>0){
                    res*=primes[j];
                    j++;
                }
                //cout <<"p ="<< primes[j] <<" "<<j<< endl;

                cout << "? " <<res << endl;
                cin >> ans;
                for(int k=i;k<j;k++){
                    if(gcd(ans,primes[k])>1){
                        vis[k]=1;
                    }
                }
                i=j;
            }//cout << cnt;
            ll div=1;
            vl v;
            for(int i=0;i<primes.size();i++){
                if(vis[i]){
                    v.pb(primes[i]);
                    if(v.size()==1)continue;
                    ll res1=1;
                    while(res1<=1e9){
                        res1*=v[0];
                    }
                    res1/=v[0];
                    ll res2 = 1;
                    while(res2<=1e9){
                        res2*=v[1];
                    }
                    res2/=v[1];
                    ll res = res2*res1;
                    cout << "? " <<res << endl;
                    cin >> ans;
                    int troll=0;
                    while(ans%v[0]==0){
                        troll++;
                        ans/=v[0];
                    }
                    int troll2=0;
                    while(ans%v[1]==0){
                        troll2++;
                        ans/=v[1];
                    }
                    div*=(troll+1)*(troll2+1);
                    v.clear();
                }
            }
            if(v.size()==1){
                ll res1=1;
                while(res1<=1e9){
                    res1*=v[0];
                }
                res1/=v[0];
                cout << "? " <<res1 << endl;
                cin >> ans;
                int troll=0;
                while(ans%v[0]==0){
                    troll++;
                    ans/=v[0];
                }
                div*=(1+troll);
            }
            if(div*2>8){
                cout << "! " << div*2 << endl;
            }else{
                cout << "! 8" << endl;
            }
        }
        return 0;
    }