#include <bits/stdc++.h>
#include <ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define oo       1e9
#define ll       long long
#define sc(x)    scanf("%d",&x)
#define sz(x)    (int)x.size()
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()
#define F        first
#define S        second
#define pi       acos(-1)
#define EPS      1e-12

int n;
int arr[1010];
int dp[1010][1010];

int solve(int lst,int i){
  if(i>=n)return arr[lst];
  int &ret=dp[lst][i];
  if(~ret)return ret;
  ret=oo;
  ret=min(ret,solve(lst,i+2)+max(arr[i],arr[i+1]));
  ret=min(ret,solve(i,i+2)+max(arr[lst],arr[i+1]));
  ret=min(ret,solve(i+1,i+2)+max(arr[lst],arr[i]));
  return ret;
}

void buildAns(int lst,int i){
  if(i>=n){
    if(lst+1<=n)
      printf("%d\n",lst+1);
    return;
  }
  int &ret=dp[lst][i];
  if(ret==solve(lst,i+2)+max(arr[i],arr[i+1])){
    printf("%d %d\n",i+1,i+2);
    buildAns(lst,i+2);
    return;
  }
  if(ret==solve(i,i+2)+max(arr[lst],arr[i+1])){
    printf("%d %d\n",lst+1,i+2);
    buildAns(i,i+2);
    return;
  }
  if(ret==solve(i+1,i+2)+max(arr[lst],arr[i])){
    printf("%d %d\n",lst+1,i+1);
    buildAns(i+1,i+2);
    return;
  }
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
#endif
  sc(n);
  for(int i=0;i<n;i++)
    sc(arr[i]);
  memset(dp,-1,sizeof dp);
  cout<<solve(0,1)<<endl;
  buildAns(0,1);
}
