/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
typedef vector<int> vi;
typedef long long int ll;
vector<vector<int>> adj;

class TaskB {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n; in>>n;
		vi arr(n);
		set<int> s;
		f(i, n){
			in>>arr[i];
			if(arr[i] == 0) s.insert(i);
		}
		f(i, n){
			if(arr[i]==0) out<<0<<" ";
			else{
				int ub=-1, lb=-1;
				auto it = s.upper_bound(i);
				if(it!=s.end()) ub = *it;
				if(it!=s.begin()){
					it--;
					lb=*it;
				}
				int res = INT_MAX;
				if(ub!=-1) res=min(res, abs(i-ub));
				if(lb!=-1) res=min(res, abs(i-lb));
				out<<res<<" ";
			}
		}


	}
    void inG(int m, istream& in){ int u,v; adj = vector<vi>(200005);f(i, m){ in>>u>>v; adj[u].push_back(v); adj[v].push_back(u); }}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
