#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;

template<typename T>
using kawaii_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
//#define int long long

void FAST_IO() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifndef _offline
    //freopen("switchlamps.in", "r", stdin);
    //freopen("switchlamps.out", "w", stdout);
    #endif
}

signed main() {
    FAST_IO();
    int n;
    cin >> n;
    vector<pii> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i].first >> a[i].second;
    }
    sort(all(a));
    a.resize(unique(all(a)) - a.begin());
    a.push_back({0, 0});
    sort(all(a));
    int ans = 1;
    for (int i = 0; i + 1 < a.size(); ++i) {
        int l1 = a[i].first, r1 = a[i + 1].first;
        int l2 = a[i].second, r2 = a[i + 1].second;
        int l = max(l1, l2);
        int r = min(r1, r2);
        if (r - l + 1 > 0) {
            ans += r - l + 1;
            if (a[i].first == a[i].second && l == a[i].first) {
                ans--;
            }
        }
    }
    cout << ans << '\n';
    return 0;       
}