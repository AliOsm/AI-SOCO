#include<cstdio>
#include<iostream>
#include<cstring>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<iomanip>
//#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1000000007
//#define mod 1000000007
//const ll inf = 100000000000000007LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010
#define gs (c<'0'||c>'9')
#define getint() ({int _=0;char c=getchar();while(gs)c=getchar();while(!gs)_=_*10+c-'0',c=getchar();_;})
#define r(x) x=getint()
//#define sqr(x) (x*x)
pii b[N];
struct node
{
    int x,y,z;
    bool operator <(const node&a)const
    {
        return x<a.x;
    }
}a[N];
int n,m,v[N],was[N],c[N];
bool cal(int x,ll s)
{
    int j=n-1;ll sum=0;int last=-1;
    for(int i=n-1;i>=0;i--)v[i]=x,c[i]=0;
    priority_queue<pii>q;
    for(int i=m-1;i>=0;i--)
    {
        if(last!=-1)
        {
            v[last]--;was[b[i].y]=last;
            if(!c[last])sum+=a[last].z,c[last]=1;
            if(v[last]==0)last=-1;
            continue;
        }
        while(j>=0&&a[j].x>=b[i].x)
        {
            q.push(mp(-a[j].z,j));j--;
        }
        if(q.empty())return 0;
        last=q.top().y;q.pop();v[last]--;was[b[i].y]=last;
        if(!c[last])sum+=a[last].z,c[last]=1;
        if(v[last]==0)last=-1;
    }
    //printf("%d %d\n",x,sum);
    return sum<=s;
}
int main() {
    int i,j,k;ll s;
    while(~scanf("%d%d%I64d",&n,&m,&s))
    {
        for(i=0;i<m;i++)scanf("%d",&b[i].x),b[i].y=i;
        sort(b,b+m);
        for(i=0;i<n;i++)scanf("%d",&a[i].x),a[i].y=i;
        for(i=0;i<n;i++)scanf("%d",&a[i].z);
        sort(a,a+n);
        int l=1,r=m,x,ans=0;
        while(l<=r)
        {
            x=(l+r)>>1;
            if(cal(x,s))r=x-1,ans=x;
            else l=x+1;
        }
        if(ans)
        {
            puts("YES");
            cal(ans,s);
            for(i=0;i<m;i++)printf("%d ",a[was[i]].y+1);
            puts("");
        }
        else puts("NO");
    }
    return 0;
}
