#include <bits/stdc++.h>

#define ll long long

using namespace std;
int dp[101][51][51];
int fr[105];
vector<int> pos[101];
bool solve(int ind, int s1, int s2) {
	if (max(s1, s2) > 50)
		return 0;
	if (ind == 101)
		return s1 == s2;

	int &ret = dp[ind][s1][s2];
	if (ret != -1)
		return ret;
	if (fr[ind] == 0)
		return ret = solve(ind + 1, s1, s2);
	ret = 0;
	if (fr[ind] > 2) {
		ret |= solve(ind + 1, s1, s2 + 1);
		ret |= solve(ind + 1, s1 + 1, s2);
		ret |= solve(ind + 1, s1, s2);
	}
	if (fr[ind] == 2) {
		ret |= solve(ind + 1, s1 + 1, s2 + 1);
		ret |= solve(ind + 1, s1, s2);
	}
	if (fr[ind] == 1) {
		ret = solve(ind + 1, s1 + 1, s2);
		ret |= solve(ind + 1, s1, s2 + 1);
	}
	return ret;
}
char out[101];
void print(int ind, int s1, int s2) {
	if (ind == 101)
		return;

	int &ret = dp[ind][s1][s2];
	if (fr[ind] == 0)
		return print(ind + 1, s1, s2);
	if (fr[ind] > 2) {
		if (ret == solve(ind + 1, s1, s2 + 1)) {
			out[pos[ind][0]] = 'B';
			for (int i = 1; i < pos[ind].size(); i++)
				out[pos[ind][i]] = 'A';
			print(ind + 1, s1, s2 + 1);
			return;
		}
		if (ret == solve(ind + 1, s1 + 1, s2)) {
			out[pos[ind][0]] = 'A';
			for (int i = 1; i < pos[ind].size(); i++)
				out[pos[ind][i]] = 'B';
			print(ind + 1, s1 + 1, s2);
			return;
		}
		if (ret == solve(ind + 1, s1, s2)) {
			for (int i = 0; i < pos[ind].size(); i++)
				out[pos[ind][i]] = 'B';
			print(ind + 1, s1, s2);
			return;
		}
	}
	if (fr[ind] == 2) {
		if (ret == solve(ind + 1, s1 + 1, s2 + 1)) {
			out[pos[ind][0]] = 'A';
			out[pos[ind][1]] = 'B';
			print(ind + 1, s1 + 1, s2 + 1);
			return;
		}
		out[pos[ind][0]] = 'A';
		out[pos[ind][1]] = 'A';
		print(ind + 1, s1, s2);
		return;
	}
	if (fr[ind] == 1) {
		if (ret == solve(ind + 1, s1 + 1, s2)) {
			out[pos[ind][0]] = 'A';
			print(ind + 1, s1 + 1, s2);
			return;
		}
		out[pos[ind][0]] = 'B';
		print(ind + 1, s1, s2 + 1);
	}
	return;

}
int main() {

	ios_base::sync_with_stdio(0);
	cin.tie(0);
	memset(dp, -1, sizeof dp);
	int n;
	cin >> n;
	for (int i = 0, a; i < n; i++) {
		cin >> a;
		pos[a].push_back(i);
		fr[a]++;
	}
	if (!solve(0, 0, 0)) {
		cout << "NO\n";
	} else {
		print(0, 0, 0);

		cout << "YES\n";
		for (int i = 0; i < n; i++)
			cout << out[i];
	}
	return 0;
}

