//

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <iomanip>
#include <fstream>

using namespace std;

typedef pair <int, int> pii;
typedef pair <long long, long long> pll;
typedef long long ll;
typedef unsigned long long ull;

#define endl "\n"
#define mp make_pair

const int mod = 1000000007;
const int INF = 1000000000;

ll n, k, bitLen = 0, curSum = 0;
map <ll, ll> bit;
string result = "No";
vector <int> res;
multiset <int> cur;

int main() {
	ll tmp;

	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> n >> k;

	for (int i = 0; i <= 63; i++) {
		if ((n >> i) & 1) {
			curSum++;
			bit[i]++;
		}
	}

	for (int bitLen = 63; (bitLen >= -63) && (curSum < k); bitLen--) {
		if ((curSum + bit[bitLen]) <= k) {
			curSum += bit[bitLen];
			bit[bitLen - 1] += bit[bitLen] * 2;
			bit[bitLen] = 0;
		}
		else
			break;
	}

	for (int i = -64; i <= 63; i++) {
		for (int j = 0; j < bit[i]; j++)
			cur.insert(i);
	}

	while (curSum < k) {
		int c = *cur.begin();
		cur.erase(cur.begin());
		cur.insert(c - 1);
		cur.insert(c - 1);
		curSum++;
	}

	if (k == curSum)
		result = "Yes";

	cout << result << endl;

	if (result == "Yes") {
		for (auto it = cur.rbegin(); it != cur.rend(); it++)
			cout << *it << " ";
	}

	return 0;
}