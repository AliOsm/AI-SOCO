//ITNOG
#include <bits/stdc++.h>

using namespace std;
//#define int long long

const int maxN = 100*1000 + 5;
const int maxL = 300 + 5;
const int mod = 1000*1000*1000;
int ans[maxN];
int len[maxN];
set<pair<int, int> > s;
main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    int l, b, f; cin >> l >> b >> f;
    int n; cin >> n;
    for(int q = 0; q < n; q ++)
    {
	  int t, x; cin >> t >> x;
	  if(t == 1)
	  {
		
		if(l + 1 < x) { ans[q] = -1; cout << -1 << endl; continue; }
		len[q] = x;
		
		if(s.size() == 0) { ans[q] = 0; cout << 0 << endl; s.insert(make_pair(0, q)); continue;}
		if(s.begin()->first >= x + f) { ans[q] = 0; cout << 0 << endl; s.insert(make_pair(0, q)); continue; }
		int ps = -1;
		for(auto it = s.begin(); it != s.end(); it ++)
		{
		    auto cur = *it;
		    auto its = it; its ++;
		    auto cure = make_pair(mod, 0);
		    if(its != s.end()) cure = *its;
//		    cout << cur.first << ' ' << cure.first << endl;
		    if(cur.first + len[cur.second] + b + x - 1 < l && cur.first + len[cur.second] + b + x + f <= cure.first)
		    {
			  ps = cur.first + len[cur.second] + b;
			  break;
		    }
		}
		ans[q] = ps; cout << ps << endl;
		if(ps > -1) s.insert(make_pair(ps, q));
	  }
	  else
	  {
		x --;
		s.erase(make_pair(ans[x], x));
	  }
    }


    return 0;
}
