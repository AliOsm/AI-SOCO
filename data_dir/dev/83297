#include <bits/stdc++.h>using namespace std;#define pf push_front#define pb push_back#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)#define rep(i,t) for (LL i=0;i<t;i++)#define pii pair<LL,LL>#define pi pair<pii,LL>#define X first#define Y second  typedef long long LL;typedef unsigned long long int ulli;const LL maxN=5e5+7,MOD=1e9+7,INF=1e10,N=5000+7;int ans,n,c,data[5*maxN],tp,x,val,dif,help;vector<int>a[maxN];bool in;int left(int x){return 2*x+1;}int right(int x){return 2*x+2;}void add(int node, int st, int en, int l, int r){  if(r<=st || en<=l)    return ;  if(st>=l && en<=r)  {    data[node]++;    return ;  }  int mid=(st+en)/2;  add(left(node),st,mid,l,r);  add(right(node),mid,en,l,r);}int get(int node, int st, int en, int ind){  if(ind<st || en<=ind)    return 0;  if(en-st<2)    return data[node];  int mid=(st+en)/2;  return data[node]+get(left(node),st,mid,ind)+get(right(node),mid,en,ind);}main(){  scanf("%d%d",&n,&c);  FOR(i,1,n)  {    scanf("%d",&x);    FOR(j,1,x)    {      scanf("%d",&val);      a[i].pb(val);    }  }  FOR(i,1,n-1)  {    in=false;    rep(j,min(a[i].size(),a[i+1].size()))    {      if(a[i][j]!=a[i+1][j])      {        in=true;        if(a[i][j]<=a[i+1][j])        {          dif=a[i+1][j]-a[i][j];          help=c-dif;          //az 1 ta help okayan          if(a[i][j]<=help)          {            add(0,0,c,0,help-a[i][j]+1);            if(a[i][j]!=1)              add(0,0,c,c-a[i][j]+1,c);          }          else            add(0,0,c,c-a[i][j]+1,c-a[i][j]+1+help);        }        else        {          help=a[i][j]-a[i+1][j];          add(0,0,c,c-a[i][j]+1,c-a[i][j]+1+help);        }      }      if(in)        break;    }    if(!in)    {      if(a[i].size()>a[i+1].size())        return cout<<"-1\n",0;      add(0,0,c,0,c);    }  }  rep(i,c)  {    if(get(0,0,c,i)==n-1)      return cout<<i<<"\n",0;  }  return cout<<"-1\n",0;}