#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define scs(a) scanf("%s", a)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                                \
    for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
    cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N = 1e6 + 10;
int a, b;
int elevaA[N], elevaB[N], prefA[N], prefB[N];
int getmod(int l, int r, bool op)
{
    if (op)
        return ( prefA[r] - ( (l) ? (prefA[l - 1] * (ll)elevaA[r - l + 1]) % a : 0) +a)%a ;
        
    return ( prefB[r] - ( (l) ? (prefB[l - 1] * (ll)elevaB[r - l + 1]) % b : 0) +b)%b ;
}
int main()
{
    string s;
    cin >> s;
    cin >> a >> b;
    elevaA[0] = 1;
    elevaB[0] = 1;
    for (int i = 1; i < N; i++) {
        elevaA[i] = (elevaA[i - 1] * 10ll) % a;
        elevaB[i] = (elevaB[i - 1] * 10ll) % b;
    }

    for (int i = 0; i < s.size(); i++) s[i] -= '0';
    prefA[0] = s[0] % a;
    prefB[0] = s[0] % b;
    for (int i = 1; i < s.size(); i++) {
        prefA[i] = (prefA[i - 1] * 10ll + s[i]) % a;
        prefB[i] = (prefB[i - 1] * 10ll + s[i]) % b;
    }
    int n = s.size();
    for (int i = 0; i < s.size() - 1; i++) {
        if (getmod(0, i, 1) == 0 and getmod(i + 1, n - 1, 0)==0 and s[i + 1] != 0) {
            cout << "YES" << endl;
            for (int j = 0; j <= i; j++) cout << char(s[j] + '0');
            cout << endl;
            for (int j = i + 1; j < n; j++) cout << char(s[j] + '0');
            cout << endl;
            return 0;
        }
    }
    cout << "NO" << endl;
    return 0;
}
