#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <cmath>
#include <bitset>
#include <set>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;

const int maxK = (int)1e6 + 5;
const int maxN = 300300;

ll result;
int n, k, a[maxN];
int suff[maxN], pref[maxN];
int cnt[maxK], cntList[maxN], cntListSize;

void rec(int L, int R) {
    if (L == R) return;
    int M = (L + R) >> 1;
    rec(L, M);
    rec(M + 1, R);

    suff[M + 1] = 0;

    for (int i = M; i >= L; i--) {
        suff[i] = max(suff[i + 1], a[i]);
    }

    pref[M] = 0;

    for (int i = M + 1; i <= R; i++) {
        pref[i] = max(pref[i - 1], a[i]);
    }

    int ptr = M;

    ll leftSum = 0;
    ll rightSum = 0;

    for (int i = M; i >= L; i--) {
        leftSum += a[i];
        while (ptr + 1 <= R && pref[ptr + 1] < suff[i]) {
            ++ptr;
            rightSum += a[ptr];
            int rr = rightSum % k;
            cnt[rr]++;
            cntList[cntListSize++] = rr;
        }
        int needRight = (suff[i] - leftSum) % k;
        if (needRight < 0) needRight += k;
        result += cnt[needRight];
    }

    while (cntListSize) {
        --cntListSize;
        cnt[cntList[cntListSize]]--;
    }

    leftSum = 0, rightSum = 0;

    ptr = M + 1;

    for (int i = M + 1; i <= R; i++) {
        rightSum += a[i];
        while (ptr - 1 >= L && suff[ptr - 1] <= pref[i]) {
            --ptr;
            leftSum += a[ptr];
            int rr = leftSum % k;
            cnt[rr]++;
            cntList[cntListSize++] = rr;
        }
        int needLeft = (pref[i] - rightSum) % k;
        if (needLeft < 0) needLeft += k;
        result += cnt[needLeft];
    }

    while (cntListSize) {
        --cntListSize;
        cnt[cntList[cntListSize]]--;
    }
}

int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    scanf("%d%d", &n, &k);

    for (int i = 1; i <= n; i++) {
        scanf("%d", a + i);
    }

    rec(1, n);

    cout << result << "\n";
}
