#pragma comment(linker, "/STACK:536870912")
#pragma warning(disable:4996)

#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<iostream>
#include<algorithm>
#include<queue>
#include<string>
#include<vector>
#include<map>
#include<list>
#include<set>
#include<cstring>
#include<ctime>
#include<cmath>
#include<limits>
#include<iterator>
#include<functional>
#include<unordered_map>
#include<stack>
#include<bitset>
#include<complex>

#define all(v) v.begin(), v.end()
#define setv(ar, val) memset(ar, val, sizeof(ar));
#define ll long long int
#define ull unsigned long long int
#define PI 3.1415926535897932384626433832795
using namespace std;

const int N = 50005, K = 505;
int dp[N][K], t[N * 2];
int n, k;
vector<int> v[N];

void pre(int node, int p) {
	dp[node][0]++;
	for (int to : v[node]) {
		if (to != p) {
			pre(to, node);
			for (int j = 1; j < K; j++)
				dp[node][j] += dp[to][j - 1];
		}
	}
}

int ans = 0, g = N;

void dfs(int node, int p) {
	ans += t[g + k];
	t[g]++;
	for (int to : v[node]) {
		if (to != p) {
			g--;
			dfs(to, node);
			g++;
			for (int j = 1; j < K; j++)
				t[g + j] += dp[to][j - 1];
		}
	}
	t[g]--;
	for (int to : v[node]) {
		if (to != p) {
			for (int j = 1; j < K; j++)
				t[g + j] -= dp[to][j - 1];
		}
	}
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	scanf("%d%d", &n, &k);

	for (int i = 0; i < n - 1; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		a--, b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	pre(0, -1);
	dfs(0, -1);
	printf("%d", ans);

	return 0;
}