#include<bits/stdc++.h>
#pragma GCC optimize ("-O3")
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define ll long long
#define int long long
#define double long double
#define pb push_back
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define diff(a,b) (a>b?a-b:b-a)
const int N=1e6+5;
void pairsort(int a[], int b[], int n){
    pair<int, int> pairt[n];
    for (int i = 0; i < n; i++) 
    {
        pairt[i].first = a[i];
        pairt[i].second = b[i];
    }
    sort(pairt, pairt + n);
    for (int i = 0; i < n; i++) 
    {
        a[i] = pairt[i].first;
        b[i] = pairt[i].second;
    }
}
int gcd(int a, int b){
    if (b == 0)
        return a;
    return gcd(b, a % b); 
}
int isPrime(int n){
    if(n < 2)
        return 0;
    if(n < 4)
        return 1;
    if(n % 2 == 0 or n % 3 == 0)
        return 0;
    for(int i = 5; i*i <= n; i += 6)
        if(n % i == 0 or n % (i+2) == 0)
            return 0;
    return 1;
}
long long C(int n, int r) {
    if(r>n-r) 
        r=n-r;
    long long ans=1;
    for(int i=1;i<=r;i++){
        ans*=n-r+i;
        ans/=i;
    }
    return ans;
}
int mod = 1e9+7;
int modexpo(int x,int p){
    int res = 1;
    x = x%mod;
    while(p){
        if(p%2)
            res = res * x;
        p >>= 1;
        x = x*x % mod;
        res %= mod;
    }
    return res;
}
int t,n1,n2,n3,r[N],g[N],b[N],p1=1,p2=1,p3=1,ans;
int func(int a,int b,int c)
{
    return (a-b)*(a-b)+(b-c)*(b-c)+(c-a)*(c-a);
}
int32_t main()
{
    IOS;
    cin>>t;
    while(t--)
    {
        cin>>n1>>n2>>n3,ans=8e18,p1=p2=p3=1;
        for(int i=1;i<=n1;i++)
            cin>>r[i];
        for(int i=1;i<=n2;i++)
            cin>>g[i];
        for(int i=1;i<=n3;i++)
            cin>>b[i];
        sort(r+1,r+n1+1),sort(g+1,g+n2+1),sort(b+1,b+n3+1);
        while(p1<=n1 and p2<=n2 and p3<=n3)
        {
            int cur=func(r[p1],g[p2],b[p3]);
            ans=min(ans,cur);
            if(p1==n1 and p2==n2 and p3==n3)
                break;
            int mi=8e18;
            if(p1<n1)
                mi=min(mi,func(r[p1+1],g[p2],b[p3]));
            if(p2<n2)
                mi=min(mi,func(r[p1],g[p2+1],b[p3]));
            if(p3<n3)
                mi=min(mi,func(r[p1],g[p2],b[p3+1]));
            if(p1<n1 and mi==func(r[p1+1],g[p2],b[p3]))
                p1++;
            else if(p2<n2 and mi==func(r[p1],g[p2+1],b[p3]))
                p2++;
            else
                p3++;
        }
        cout<<ans<<endl;
    }
    return 0;
}