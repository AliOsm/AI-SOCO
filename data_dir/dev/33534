#include<cstdio>
#include<cstring>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;
typedef __int64 lld;
lld POW[70];
lld  dp[70];
lld calc(int n)
{
    lld ans=0;
    for(int i=1;i<n;i++)if(n%i==0)
    {
        dp[i]=POW[i-1];//dp[1]=POW[0]=1 to avoid trailing zreos
        for(int j=1;j<i;j++) if(i%j==0) dp[i]-=dp[j];
        ans+=dp[i];
    }
    return ans;
}
lld gao(lld num)
{
    vector<int> DBL;
    lld ans=0,cnt=0,tmp=num;
    for(;tmp;tmp/=2)  DBL.push_back(tmp%2);
    reverse(DBL.begin(),DBL.end());
    for(int i=1;i<DBL.size();i++) ans+=calc(i);
//  printf("ans=%I64d\n",ans);
    for(int i=1;i<DBL.size();i++) if(DBL.size()%i==0)
    {
        //printf("i=%d \n",i);
        lld sum=DBL[0];
        dp[i]=0;
        for(int j=2;j<=i;j++)
        {
            if(DBL[j-1]) dp[i]+=POW[i-j];
            sum=sum*2+DBL[j-1];
        }
        lld tmp=sum;
        for(int j=1;j<DBL.size()/i;j++) sum=sum*POW[i]+tmp;
        //printf("sum=%I64d\n",sum);
        dp[i]+=(sum<=num);
        for(int j=1;j<i;j++) if(i%j==0) dp[i]-=dp[j];
        ans+=dp[i];
    }
    return ans;
}
int main()
{
    lld l,r;
    POW[0]=1;
    for(int i=1;i<70;i++) POW[i]=POW[i-1]*2;
    scanf("%I64d%I64d",&l,&r);
    printf("%I64d\n",gao(r)-gao(l-1));
    return 0;
}