#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int N;
int a[100010],b[100010];
int x[100010],y[100010];
multiset <int> s;

int query(int x){
    int ans = (1<<29);
    
//  foreach(s,itr) cout << (*itr) << ' ';
//  cout << endl;
    
    __typeof(s.begin()) itr = s.lower_bound(x);
    if(itr != s.end()){
        int y = (*itr);
        ans = min(ans,y-x);
    }
    
    if(itr != s.begin()){
        itr--;
        int y = (*itr);
        ans = min(ans,x-y);
    }
    
    return ans;
}
/*
int brute(int d){
    int ans = (1<<29);
    int i;
    REP(i,N) ans = min(ans, abs(x[i] - (y[i]-d+N)%N));
    return ans;
}
*/
int main(void){
    int i;
    
    scanf("%d",&N);
    REP(i,N) scanf("%d",&a[i]);
    REP(i,N) scanf("%d",&b[i]);
    
    REP(i,N) a[i]--;
    REP(i,N) b[i]--;
    REP(i,N) x[a[i]] = i;
    REP(i,N) y[b[i]] = i;
    
    REP(i,N) s.insert(x[i]-y[i]);
    
    REP(i,N){
        int ans = query(-i);
        printf("%d\n", ans);
        int tmp = x[b[i]] - y[b[i]];
        s.erase(s.find(tmp));
        s.insert(tmp-N);
    }
    
    return 0;
}
