#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ll long long int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=1e7+7;
ll lsp[M],phi[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n;
	cin>>n;
	for(ll i=2;i<=n;i++)
		phi[i]=i;
	ll ans=0;
	for(ll i=2;i<=n;i++)
	{
		if(phi[i]==i)
		{
			for(ll j=i;j<=n;j+=i)
			{
				phi[j]/=i;
				phi[j]*=(i-1);
				if(lsp[j]==0)
					lsp[j]=i;
			}
		}
		ans-=i-phi[i]-1;
	}
	sort(lsp+1,lsp+n+1);
	ll c=1;
	for(ll i=2;i<=n;i++)
	{
		if(2*lsp[i]>n)
			break;
		c=i;
	}
	c--;
	ans+=3*(c*(c-1))/2;
	c=n;
	for(ll i=2;i<=n;i++)
	{
		while(lsp[i]*lsp[c]>n && c>i)
			c--;
		if(c<i)
			break;
		ans-=(c-i);
	}
	cout<<ans<<"\n";
	return 0;
}