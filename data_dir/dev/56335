///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>
#define int long long
#define ll long long
#define fi first
#define si second
#define mp make_pair
#define pb push_back
#define pi pair<int,int>
#define f(i,l,r) for(int i=l;i<=r;i++)
#define M 1000009
#define clr(x) memset(x,0,sizeof(x));
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
const int inf=1e18;
const int mod=1e9+7;
#define bug(i) cout<<"ekhane ami  "<<i<<endl;
inline bool checkBit(ll n, int i) { return n&(1LL<<i); }
inline ll setBit(ll n, int i) { return n|(1LL<<i);; }
inline ll resetBit(ll n, int i) { return n&(~(1LL<<i)); }
vector<int>prime;
vector<int>pri,power;
bool sv[M+10];
void sieve()
{   prime.push_back(2);
     int i,j;
     for(i=4;i<=M;i=i+2)
    {
           sv[i]=1;
    }
    for(i=3;i*i<=M;i=i+2)
    {
        if(sv[i]==0)
        {
              for(j=i*i;j<=M;j=j+2*i)
              {
                  sv[j]=1;
              }
        }
    }
    for(i=3;i<M;i=i+2)
    {
        if(sv[i]==0)
        {
            prime.push_back(i);
        }
    }
}
 void  prime_factorization( int n)
 {
      int temp2=n,temp=0,cnt=0;
     pri.clear();
     power.clear();
      temp=sqrt(n);
    int sz=prime.size();
    for(int i=0;prime[i]<=temp && i<sz;i++)
    {    cnt=0;
        while(1)
        {   if(temp2%prime[i]==0){
            temp2=temp2/prime[i];
            cnt++;
            }
            else
            {   if(cnt>0)
                  {
                      pri.push_back(prime[i]);
                      power.push_back(cnt);
                  }
                  cnt=0;
                break;
            }
        }
        if(temp2==1){break;}
    }
     if(temp2>1)
     {

         pri.push_back(temp2);
         power.push_back(1);
     }
 }

main()
{
  fast
  sieve();
  int x;
  cin>>x;
  prime_factorization(x);
  vector<int>vec;
  int tmp;
  int sz=pri.size();
  for(int i=0;i<sz;i++)
  {
      tmp=1;
      while(power[i]--)
      {
          tmp=tmp*pri[i];
      }
     // cout<<tmp<<"#"<<endl;
      vec.pb(tmp);
  }
  sz=vec.size();
  if(sz==1)
  {
      cout<<x<<" "<<x<<endl;
      return 0;
  }
 int len=(1<<sz);
 int mn=inf,a,b;
 for(int i=0;i<len;i++)
 {
      int sa=1,sb=1;
      for(int j=0;j<sz;j++)
      {
          if(checkBit(i,j))sa*=vec[j];
          else sb=sb*vec[j];
      }
      int dif=abs(sa-sb);
      if(dif<mn)
      {
          mn=dif;
          a=sa;
          b=sb;
      }
 }
 cout<<a<<" "<<b<<endl;














































    return 0;
}

