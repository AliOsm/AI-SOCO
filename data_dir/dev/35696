#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef long double real;

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

using namespace std;

const int MaxN = 102, LET = 26, MaxL = MaxN * LET, NA = -1, MaxC = 0x3F3F3F3F;
const int MOD = 1000000007;

int f [MaxN] [MaxL];
char s [MaxN];
int n;

int main (void)
{
 int test, tests;
 int i, j, k;

 memset (f, 0, sizeof (f));
 f[0][0] = 1;
 for (i = 1; i < MaxN; i++)
  for (j = 0; j < MaxL; j++)
   for (k = 0; k < LET; k++)
   {
    if (j - k < 0)
     break;
    f[i][j] += f[i - 1][j - k];
    if (f[i][j] >= MOD)
     f[i][j] -= MOD;
   }

 scanf (" %d", &tests);
 for (test = 0; test < tests; test++)
 {
  scanf (" %s", s);
  n = strlen (s);
  k = 0;
  for (i = 0; i < n; i++)
   k += s[i] - 'a';
  printf ("%d\n", (f[n][k] + MOD - 1) % MOD);
 }

 return 0;
}
