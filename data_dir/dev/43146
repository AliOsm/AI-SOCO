#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)1e5 + 10;
int p[maxn];
LL x[maxn],y[maxn];
LL pmi[maxn],pma[maxn],smi[maxn],sma[maxn];
bool cmp(int i, int j) {
    return x[i] < x[j] || x[i] == x[j] && y[i] < y[j];
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    int n; cin >> n;
    for (int i = 0; i < n; i++) {
        int X,Y; scanf("%d%d",&X,&Y);
        x[i] = 2LL * (X + Y);
        y[i] = 2LL * (X - Y);
        p[i] = i;
    }   
    sort(p,p + n,cmp);
    for (int i = 0; i < n; i++) {
        pmi[i] = y[p[i]];
        pma[i] = y[p[i]];
        if (i != 0) {
            pmi[i] = min(pmi[i],pmi[i - 1]);
            pma[i] = max(pma[i],pma[i - 1]);
        }
    }
    for (int i = n - 1; i >= 0; i--) {
        smi[i] = y[p[i]];
        sma[i] = y[p[i]];
        if (i != n - 1) {
            smi[i] = min(smi[i],smi[i + 1]);
            sma[i] = max(sma[i],sma[i + 1]);
        }
    }
    LL l = -1;
    LL r = (LL)1e18;
    while(l < r - 1) {
        LL m = (l + r) >> 1;
        bool good = false;
        int j = 0;
        for (int i = 0; i < n; i++) {
            while(j < n && x[p[j]] - x[p[i]] <= 2 * m) j++;
            LL mi = (LL)1e18;
            LL ma = -(LL)1e18;
            if (i != 0) {
                mi = min(mi,pmi[i - 1]);
                ma = max(ma,pma[i - 1]);
            }
            if (j != n) {
                mi = min(mi,smi[j]);
                ma = max(ma,sma[j]);
            }
            if (ma - mi <= 2 * m) {
                good = true;
                break;
            }
        }
        if (good) {
            r = m;
        } else {
            l = m;
        }
    }
    cout << r / 2;
    if (r % 2 != 0) {
        cout << ".5" << endl;
    } else {
        cout << ".0" << endl;
    }
    return 0;
}
