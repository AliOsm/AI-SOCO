
#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);

const double PI  = acos(-1.0);
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
typedef complex<double> point;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
const double EPS = 1e-9;
const int N = 2e3 + 9;

int n,c[N],root,ans[N],cur=1;
vector<int>adj[N];
vector<pair<int,int>>t;
void get(int u,int s)
{
    if(u!=s)t.push_back({ans[u],u});
    for(auto v:adj[u])
        get(v,s);
}
void go(int u)
{
    for(auto v:adj[u])
        go(v);
    t.clear();
    get(u,u);
    if(c[u]>(int)t.size())
    {
        cout<<"NO"<<endl;
        exit(0);
    }
    else
    {
        if((int)t.size()==0)ans[u]=1;
        else
        {
          sort(t.begin(),t.end());
          int temp;
          if(c[u]==0)ans[u]=1;
          else{
          temp=t[c[u]-1].F+1;
          ans[u]=temp;
          }

          for(int j=c[u];j<(int)t.size();j++)
          {
              ans[t[j].S]+=2;
          }
        }

    }
}
 int main()
{
//freopen("product.in","r",stdin);
//freopen("travel.out","w",stdout);
//__builtin_popcount()
input
        cin>>n;
        int p;
        forr(i,1,n)
        {
            cin>>p>>c[i];
            if(p==0)root=i;
            else
            {
                adj[p].push_back(i);
            }
        }
     //   cout<<root<<endl;
        go(root);
        cout<<"YES"<<endl;
        forr(i,1,n)cout<<ans[i]<<" ";




return 0;
}
