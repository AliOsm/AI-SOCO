#include <stdio.h>
#include <string.h>
#include <math.h>
#include <set>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;
int g[1010][1010];
int a[10010],b[10010],c[10010];
int r[1010],n,id[1010];
bool cmp1(int x,int y)
{
    for (int i=0;i<n-1;i++)
        if (g[x][i]!=g[y][i]) return g[x][i]<g[y][i];
    return g[x][n-1]<g[y][n-1];
}
bool cmp2(int x,int y)
{
    for (int i=0;i<n-1;i++)
        if (g[i][x]!=g[i][y]) return g[i][x]>g[i][y];;
    return g[n-1][x]>g[n-1][y];
}
int main()
{
    scanf("%d",&n);
    for (int i=0;i<n-1;i++)
    {
        int u,v;
        scanf("%d%d",&u,&v);
        u--;
        v--;
        g[u][v]=1;
    }
    for (int i=0;i<n;i++)
        r[i]=id[i]=i;
    sort(r,r+n,cmp1);
    int cnt=0;
    for (int i=0;i<n;i++)
    {
        if (id[i]==r[i]) continue;
        a[cnt]=1; b[cnt]=i;
        for (int j=i+1;j<n;j++)
        {
            if (id[j]==r[i])
            {
                c[cnt++]=j;
                swap(id[i],id[j]);
                for (int k=0;k<n;k++)
                    swap(g[i][k],g[j][k]);
            }
        }
    }
    for (int i=0;i<n;i++)
        r[i]=id[i]=i;
    sort(r,r+n,cmp2);
    for (int i=0;i<n;i++)
    {
        if (id[i]==r[i]) continue;
        a[cnt]=2; b[cnt]=i;
        for (int j=i+1;j<n;j++)
        {
            if (id[j]==r[i])
            {
                c[cnt++]=j;
                swap(id[i],id[j]);
                for (int k=0;k<n;k++)
                    swap(g[k][i],g[k][j]);
            }
        }
    }
    printf("%d\n",cnt);
    for (int i=0;i<cnt;i++)
        printf("%d %d %d\n",a[i],b[i]+1,c[i]+1);
//    for (int i=0;i<n;i++)
//    {
//        for (int j=0;j<n;j++)
//            printf("%d ",g[i][j]);
//        puts("");
//    }
    return 0;
}
