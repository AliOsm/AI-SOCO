//ITNOA
#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define pb push_back
const long long INF=1e9+10,MAX=2e5+1e4,MOD=1e9+7,MAXL=25;
typedef long long ll;
typedef pair<ll,ll> pii;
typedef pair<pii,ll> piii;
void OUT(long double o,int x){
	 cout<<fixed<<setprecision(x)<<o;
	 return;
}
ll a[MAX],st[MAX],fi[MAX],ti=0,segs[4*MAX],segh[4*MAX];
pii pe[MAX];
vector<int> adj[MAX];
void dfs(int v,int p){
	ti++;
	st[v]=ti;
	for(int u:adj[v])
		if(u!=p)
			dfs(u,v);
	fi[v]=ti;
	pe[v]={st[v],v};
	return;
}
void build(int id,int b,int e){
	if(e-b==1){
		segs[id]=a[pe[b].S];
		return;
	}
	int mid=(b+e)/2;
	build(id*2,b,mid);
	build(id*2+1,mid,e);
	segs[id]=segs[id*2]+segs[id*2+1];
}
void upd(int id,int b,int e,int l,int r){
	if(r<=b||e<=l)	return;
	if(l<=b&&e<=r){
		segh[id]++;
		segs[id]=e-b-segs[id];
		return;
	}
	int mid=(b+e)/2;
	upd(2*id,b,mid,l,r);
	upd(2*id+1,mid,e,l,r);
	segs[id]=segs[2*id]+segs[2*id+1];
	if(segh[id]%2==1)
		segs[id]=e-b-segs[id];
}
ll geta(int id,int b,int e,int l,int r,int cnt){
	if(r<=b||e<=l)	return 0;
	if(l<=b&&e<=r){
		if(cnt%2==0)
			return segs[id];
		return e-b-segs[id];
	}	
	int mid=(b+e)/2;
	return geta(id*2,b,mid,l,r,cnt+segh[id])+geta(id*2+1,mid,e,l,r,cnt+segh[id]);
}
int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	ll n;
	cin>>n;
	for(int i=2;i<=n;i++){
		ll x;
		cin>>x;
		adj[x].pb(i);
		adj[i].pb(x);
	}
	for(int i=1;i<=n;i++)
		cin>>a[i];
	dfs(1,1);
	sort(pe+1,pe+n+1);
	build(1,1,n+1);
	ll m;
	cin>>m;
	for(int i=0;i<m;i++){
		string s;
		int v;
		cin>>s>>v;
		if(s=="get")
			cout<<geta(1,1,n+1,st[v],fi[v]+1,0)<<"\n";
		else
			upd(1,1,n+1,st[v],fi[v]+1);
	}
	return 0;
}
