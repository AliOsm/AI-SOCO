#include <bits/stdc++.h>

using namespace std; 	
typedef long long ll;
const int N = 1e5+50;
const int oo = 1e9;

string s;
int m[26],vis[26],r[26];
int len;
void dfs(int idx){
	vis[s[idx]-'a']=1;
	if(idx+1 >= len)return;
	/*if(m[s[idx]-'a'] != s[idx+1]-'a' && m[s[idx]-'a']!=-1 ){
		puts("NO");
		exit(0);
	}*/
	if(m[s[idx]-'a']==-1){
		if(r[s[idx+1]-'a']){
			puts("NO");
			exit(0);
		}
		r[s[idx+1]-'a']=1;
		m[s[idx]-'a'] = s[idx+1]-'a';
	}else if(m[s[idx]-'a'] != s[idx+1]-'a'){
		puts("NO");
		exit(0);
	}
	dfs(idx+1);
}
int l[26],v[26];
string f;
void build(int a){
	if(a == -1)return;
	v[a]=1;
	f+= char(a+'a');
	build(m[a]);
}
int main(){
	memset(m,-1,sizeof(m));
	int n;
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>s;
		len = s.length();
		memset(l,0,sizeof(l));
		for(int j=0;j<len;j++){
			if(l[s[j]-'a']){
				puts("NO");
				return 0;
			}
			l[s[j]-'a']++;
		}
		dfs(0);
	}
	memset(l,0,sizeof(l));
	vector<string> ans;
	for(int i=0;i<26;i++){
		if(vis[i]&&!r[i]){
			build(i);
		}
	}
	for(int i=0;i<26;i++){
		if(vis[i]&&!v[i]){
			puts("NO");
			return 0;
		}
	}
	cout << f << endl;
}