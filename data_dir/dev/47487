#define __USE_MINGW_ANSI_STDIO 0
#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define ff first
#define ss second
#define mod 998244353
#define pb push_back
#define mp make_pair
#define int long long
#define all(a) a.begin(), a.end()
#define inf (1LL<<61)
#define ull unsigned long long
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
int gcd(int x,int y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
int expo(int n,int m,int p)   //modULAR EXPONENTIATION
{
    int r=1;
    n=n%p;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
bool isPrime(int n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;
 
    // This is checked so that we can skip 
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;
 
    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;
 
    return true;
}
vector<int>adj[200005];
map<pair<int,int> , int> p;
vector<int>col(200005);
string ans(200005,'a');
bool vis[200005];
void dfs(int s,int t)
{
	//cout<<ans[0]<<ans[1]<<ans[2]<<ans[3]<<endl;
	vis[s]=true;
	for(int i=0;i<adj[s].size();i++)
	{
		int x= adj[s][i];
		//debug2(x,s);
		
		if(p.find(mp(s,x))!=p.end())
		{
			if(t==0)
			{
				ans[p[mp(s,x)]]='0';
			}
			else
			{
				ans[p[mp(s,x)]]='1';
			}
		}
		else
		{
			if(t==0)
			{
				ans[p[mp(x,s)]]='1';
			}
			else
			{
				ans[p[mp(x,s)]]='0';
			}
		}
		if(vis[x])
			continue;
		dfs(x,1-t);
	}
}
int32_t main()
{
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ***********************/   
   int n,m;
   cin>>n>>m;
   for(int i=0;i<m;i++)
   {
   	int a,b;
   	cin>>a>>b;
   	p[mp(a,b)]=i;
   //	debug3(a,b,p[mp(a,b)]);
   	//p[mp(b,a)]=i;
   	adj[a].pb(b);
   	adj[b].pb(a);
   }
   for(int i=1;i<=n;i++)
   {
   	col[i]=-1;
   }
   col[1]=1;
   queue<int>q;
   q.push(1);
   bool ok=false;
   while(q.size())
   {
   	int u= q.front();
   	q.pop();
   	for(int i=0;i<adj[u].size();i++)
   	{	
   		int x= adj[u][i];
   		if(col[x]==col[u])
   		{
   			ok=true;
   		}
   		if(col[x]==-1)
   		{
   			col[x]=1-col[u];
   			q.push(x);
   		}
   	}
   }
   if(ok)
   {
   	cout<<"NO"<<endl;
   	return 0;
   }
   cout<<"YES"<<endl;
   dfs(1,0);
   for(int i=0;i<m;i++)
   {
   	cout<<ans[i];
   }
}