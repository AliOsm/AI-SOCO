#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<unordered_map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
#include<bitset>
#include<fstream>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=9223372036854775807;
const ll mod=998244353;
ll  max3(ll  a,ll  b, ll  c)
{
    return max(c,max(a,b));
}
ll min3(ll  a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y,ll mod1)
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod1;
        y = y>>1;
        x = (x*x)%mod1;
    }
    return res;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x,ll p)
{
    return power(x,p-2,p);
}
struct point
{
    ll x;ll y;
};
ll cross(point a,point b)
{
    return a.x*b.y-b.x*a.y;
}
bool ccw1(point p1,point p2)
{
    /* point n1;n1.x=p1.x-p0.x;n1.y=p1.y-p0.y;
     point n2;n2.x=p2.x-p0.x;n2.y=p2.y-p0.y;*/
    if(cross(p1,p2)>0)
    {
        return true;
    }
    else
    {
        return false;
        //No need to worry about cross=0 case in this question;
    }
}
bool comp(point p1,point p2)
{
    if(p1.x<p2.x)
    {
        return true;
    }
    else
    {
        if(p1.x>p2.x)
        {
            return false;
        }
        else
        {
            if(p1.y<=p2.y)
            {
                return true;
            }
            return false;
        }
    }
}
long long ccw(point p1, point p2, point p3)
{
    // See 10th slides from following link for derivation
    // of the formula
    ll val = (p2.y - p1.y) * (p3.x - p2.x) -
              (p2.x - p1.x) * (p3.y - p2.y);
  
   /* if (val == 0) return 0;  // colinear
  
    return (val > 0)? 1: 2; // clock or counterclock wise*/
    return val;
}

void ccw_sort(vector<point> &v)
{
    vector<point> v1,v2;
    for(int i=0;i<v.size();i++)
    {
        if(v[i].y>0)
        {
            v1.push_back(v[i]);
        }
        else
        {
            v2.push_back(v[i]);
        }
    }
    sort(all(v1),ccw1);
    sort(all(v2),ccw1);
    for(int i=0;i<v2.size();i++)
    {
        v1.push_back(v2[i]);
    }
    v=v1;
}

void dfs(int i)
{
    
}
int main()
{
    fastio;
    int t;
    cin>>t;
    while(t--)
    {
        string str;
        cin>>str;
        int n=str.size();
        vvi adj(27);
        for(int i=0;i<26;i++)
        {
            adj[i].resize(27);
        }
        for(int i=0;i<n-1;i++)
        {
            adj[str[i]-'a'][str[i+1]-'a']=1;
            adj[str[i+1]-'a'][str[i]-'a']=1;
        }
        vi deg(27);int num1=0;int num2=0;bool c=true;
        for(int i=0;i<26;i++)
        {
            for(int j=0;j<26;j++)
            {
                deg[i]+=adj[i][j];
            }
            if(deg[i]==1)
            {
                num1++;
            }
            else
            {
                if(deg[i]==2)
                {
                    num2++;
                }
                else
                {
                    if(deg[i]>=3){
                        c=false;}
                }
            }
        }
        if(!c)
        {
            cout<<"NO"<<endl;
        }
        else
        {
            //cout<<"YES"<<endl;
            vi vis(27);vi kb;
            for(int i=0;i<26;i++)
            {
                int par=-1;
                if(!vis[i]&&deg[i]<=1)
                {
                    int cur=i;
                    while(!vis[cur]){
                        vis[cur]=1;
                         kb.pb(cur);
                    for(int j=0;j<adj[cur].size();j++)
                    {
                        if(adj[cur][j]&&!vis[j])
                        {
                            par=cur;
                            cur=j;
                            break;
                        }
                        else
                        {
                            if(adj[cur][j]&&j!=par)
                            {
                                c=false;
                                break;
                            }
                        }
                    }
                    }
                }
            }
            for(int i=0;i<26;i++)
            {
                if(!vis[i])
                {
                    c=false;
                }
            }
            if(!c)
            {
                cout<<"NO"<<endl;
            }
            else
            {
                cout<<"YES"<<endl;
                for(int i=0;i<26;i++)
                {
                    cout<<(char)(kb[i]+'a');
                }
                cout<<endl;
            }
        }
    }
}
