#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfs(x) scanf("%s", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define fst(x) cout << fixed << setprecision(x)
#define mod 1000000007
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;

vector<int> v[200005];
int a[200005], mp[200005], ind = 1, en[200005];

void solve(int x)
{
    a[ind] = x;
    mp[x] = ind++;
    for (auto it: v[x])
        solve(it);
    en[x] = ind - 1;
}

int main()
{
    ENGZ
    int n, q, x, y;
    cin >> n >> q;
    for (int i = 2; i <= n; i++)
        cin >> x, v[x].push_back(i);
    for (int i = 1; i <= n; i++)
        sort(v[i].begin(), v[i].end());
    solve(1);
    while (q--)
    {
        cin >> x >> y;
        if (mp[x] + y - 1 > en[x])
            cout << "-1\n";
        else
            cout << a[mp[x] + y - 1] << endl;
    }
    return 0;
}