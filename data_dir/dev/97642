//In the name of good
#include <bits/stdc++.h>
using namespace std ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define int unsigned long long 
#define ST setprecision ( 12 ) 
const long double pi = 3.1415926535897932384626433832795 ;
const int maxn = 200000  + 200 ;
const int maxL = 64 ;
const int mod = 1e9 + 7 ;
int n , k , x , ans , ar [ maxn ] , ans1 ;
vector < int > vc [ maxL ] ;

int solv ( int X ) 
{ 
  int ret = 0 ; 
  for ( int i = 0 ; i < maxL ; i ++ ) 
    if ( ( ( vc [ i ] . size ( ) == 1 && vc [ i ] [ 0 ] == X ) || vc [ i ] .size ( ) == 0 ) == 0 )
      ret += ( 1LL << i ) ;
  return ret ;
} 

main ( ) 
{ 
  fast ;
  cin >> n >> k >> x ;
  for ( int i = 0 ; i < n ; i ++ )
    cin >> ar [ i ] ;
  for ( int l = 0 ; l < k ; l ++ ) 
    {
      sort ( ar , ar + n ) ; 
      for ( int i = 0 ; i < maxL ; i ++ ) 
	vc [ i ] . clear ( ) ; 
      for ( int i = 0 ; i < n ; i ++ ) 
	for ( int j = 0 ; j < maxL ; j ++ ) 
	  if ( ( ar [ i ] >> j ) & 1LL ) 
	    vc [ j ] . push_back ( i ) ;
      if ( l == 0 ) 
	{ 
	  int Hlp = 1 ; 
	  for ( int i = 0 ; i < k ; i ++ ) 
	    Hlp *= x ;
	  int a = 0 , b = 0 ;
	  for ( int i = 0 ; i < n ; i ++ )
	    { 
	      int hlp = solv ( i ) | ( ar [ i ] * Hlp );
	      if ( hlp >= b ) 
		b = hlp , a = i ;
	    }
	  ans1 = b  ;
	} 
      int a = 0 , b = 0 ;
      for ( int i = 0 ; i < n ; i ++ )
	{ 
	  int hlp = solv ( i ) | ( ar [ i ] * x );
	  if ( hlp >= b ) 
	    b = hlp , a = i ;
	}
      ar [ a ] *= x ;
    }
  for ( int i = 0 ; i < n ; i ++ )
    ans |= ar [ i ] ;
  cout << max ( ans1 , ans ) ;
} 
