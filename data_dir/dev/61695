#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

const int MAX = 500500;
const ll mod = 998244353;

ll mpow(ll n, ll p) {
	if(p == 0) return 1ll;
	ll aux = mpow(n, p/2);
	aux = (aux * aux)%mod;
	if(p%2 == 1) aux = (n*aux)%mod;
	return aux;
}

ll inv(ll n) {
	n %= mod;
	return mpow(n, mod - 2);
}

ll f[MAX], f_inv[MAX];

void init() {
	f[0] = 1;
	f_inv[0] = 1;
	for(ll i = 1; i < MAX; i++) {
		f[i] = (i * f[i - 1])%mod;
		f_inv[i] = inv(f[i]);
	}
}

ll bin(int n, int k) {
	if(k < 0 || k > n) return 0;
	ll ans = (f[n]*f_inv[k])%mod;
	ans = (ans * f_inv[n - k])%mod;
	return ans;
}


int main() {
	init();
	int n, k; scanf("%d %d", &n, &k);
	int F = n - k;
	if(F < 1 || F > n) printf("%lld\n", 0ll);
	else if(F == n) {
		printf("%lld\n", f[F]);
	}
	else {
		ll ans = 0;
		for(int t = 1; t <= F; t++) {
			ll y = (mpow(t, n) * bin(F, t))%mod;
			if(F%2 != t%2) y = (mod - y)%mod;
			ans = (ans + y)%mod; 
		}
		ans = (ans * bin(n, F))%mod;
		ans = (2ll * ans)%mod;
		printf("%lld\n", ans);
	}
}