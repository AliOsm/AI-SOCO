#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int, int> pii;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define mod(n, m) (((n%m) + m)%m)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'

const int N = 1e2 + 5;
char arr[4][N][N];
int n;

int apply(int x, int y, bool black)
{
	vector<string> vec(n);
	rep(i, 0, n)
	{
		rep(j, 0, n)
			vec[i].push_back(arr[x][i][j]);
		rep(j, 0, n)
			vec[i].push_back(arr[y][i][j]);
	}
	int ret = 0;

	rep(i, 0, n)
	{
		bool turn = (i % 2 == 0 ? black : !black);
		rep(j, 0, n+n)
		{
			if (vec[i][j] - '0' != turn)
				ret++;
			turn = !turn;
		}
	}
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n;

	rep(a, 0, 4)
		rep(i, 0, n)
			rep(j, 0, n)
				cin >> arr[a][i][j];

	vi perm(4);

	rep(i, 0, 4)
		perm[i] = i;
	int mn = 1e9;
	do
	{
		int a = apply(perm[0], perm[1], 1) + apply(perm[2], perm[3], 0);
		int b = apply(perm[0], perm[1], 0) + apply(perm[2], perm[3], 1);
		mn = min(mn, min(a, b));
	} while (next_permutation(all(perm)));

	cout << mn << endl;

	return 0;
}
