#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>

#define LL long long
#define uLL unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vi vector<int>
#define vvi vector<vector<int>>
#define vLL vector<LL>
#define vs vector<string>
#define fori(n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
const LL mod = 1000000007;
int Inf = (int)1e9;
using namespace std;
int n, m;
int cnt;

pair<int, int> goodGame(int cur, int cr_hod, int cn, int cm)
{
	int c1 = 0, c2 = 0;
	int c = cnt;
	while (c--)
	{
		if (cr_hod == 1)
		{
			if (cur == 1)
			{
				if (cn > 0)
				{
					cn--;
					c1++;
				}
				else
				{
					cm--;
					c2++;
					cur = 2;
				}
			}
			else
			{
				if (cm > 0)
				{
					cm--;
					c1++;
				}
				else
				{
					cn--;
					cur = 1;
					c2++;
				}
			}
			cr_hod = 2;
		}
		else
		{
			if (cur == 1)
			{
				if (cm > 0)
				{
					cm--;
					c2++;
				}
				else
				{
					cn--;
					c1++;
					cur = 1;
				}
			}
			else
			{
				if (cn > 0)
				{
					cn--;
					c2++;
				}
				else
				{
					cm--;
					cur = 2;
					c1++;
				}
			}
			cr_hod = 1;
		}
	}
	return mp(c1, c2);
}


int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	cin >> n >> m;
	cnt = n + m - 1;
	int ans_petya = 0, ans_vasya = 0;
	pair<int, int> a = goodGame(1, 2, n - 1, m);
	pair<int, int> b = goodGame(2, 2, n, m - 1);
	if (a.first > b.first)
	{
		printf("%d %d", a.first, a.second);
	}
	else
		printf("%d %d", b.first, b.second);

	return 0;
}