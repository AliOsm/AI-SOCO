#include <string.h>
#include <stdio.h>
#include <vector>
#include <algorithm>
#define LL long long
#define VI vector<int>
#define pb push_back
using namespace std;
const LL MOD = 1000000007LL;
vector<int> g[100010];
int n, k;
LL pwr[110];
int p[100010];
int sz[100010];
bool d[100010];
int find(int x){
  if(x == p[x]) return x;
  return p[x] = find(p[x]);
}
void join(int x, int y){
  int xr = find(x), yr = find(y);
  if(xr != yr){
    sz[yr] += sz[xr];
    p[xr] = yr;
  }
}
LL fpow(LL a){
  LL e = k;
  LL x = 1, y = a;
  while(e){
    if(e&1LL) x = (x*y)%MOD;
    y = (y*y)%MOD;
    e >>= 1LL;
  }
  return x;
}
int main(){
  scanf("%d %d", &n, &k);
  for(int i = 1; i <= n; i++){
    p[i] = i;
    sz[i] = 1;
  }
  for(int i = 0; i < n - 1; i++){
    int u, v, c;
    scanf("%d %d %d", &u, &v, &c);
    if(!c) join(u, v);
  }

  LL ans = fpow(n);
  for(int i = 1; i <= n; i++){
    int xr = find(i);
    if(d[xr]) continue;
    d[xr] = true;
    ans = (ans - fpow(sz[xr]) + MOD)%MOD;
  }
  printf("%lld\n", ans);
  return 0;
}
