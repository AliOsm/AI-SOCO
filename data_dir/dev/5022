#include <bits/stdc++.h>
using namespace std;


int main(){
    ios::sync_with_stdio(0); cin.tie(0);
	int n; cin>>n; vector<int> angle(n);
	for(int i=0; i<n; i++) cin>>angle[i];
	int cc=n;
	int mi=INT_MAX;
	while(cc--){
	int sum=360, diff=360, lh=0; 
	for(int i=0; i<n; i++){
		sum-=angle[i];
		lh+=angle[i];
		if (abs(sum-lh)<diff) diff=abs(sum-lh);
	}
	int temp=angle[0];
	for(int i=0; i<n-1; i++){
		angle[i]=angle[i+1];
	}
	angle[n-1]=temp;
	mi=min(mi, diff);
	}
	cout<<mi;
}
/*	vector<string> game(10); bool ok=false;
	for(int i=0; i<10; i++) cin>>game[i];
	for(int i=0; i<10, !ok; i++){
		for(int j=0; j<10; j++){
			if (game[i][j]=='X'){
				ok=true;
				if (j+4<10){
					int cnt=0;
					for(int k=j+1; k<=j+4; k++){
						cnt+=(game[i][k]!='X' && game[i][k]=='.');
						if (cnt>1) break;
					}
					if (cnt==1) {
						cout<<"YES";
						return 0;
					}
					cnt=0;
					if (i+4<10){
						for(int k=1; k<=4; k++){
							cnt+=(game[i+k][j+k]!='X' && game[i+k][j+k]=='.');
							if (cnt>1) break;
						}
						if (cnt==1){
							cout<<"YES";
							return 0;
						}
					}
				}
				if (i+4<10){
					int cnt=0;
					for(int k=i+1; k<=i+4; k++){
						cnt+=(game[k][j]!='X' && game[k][j]=='.');
						if (cnt>1) break;
					}
					if (cnt==1) {
						cout<<"YES";
						return 0;
					}
					cnt=0;
					if (j-4>=0){
						for(int k=1; k<=4; k++){
							cnt+=(game[i+k][j-k]!='X' && game[i+k][j-k]=='.');
							if (cnt>1) break;
						}
						if (cnt==1){
							cout<<"YES";
							 return 0;
						}
					}
				}
			cout<<"NO"; return 0;
			}
		}
	}	
}*/