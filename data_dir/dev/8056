#include <bits/stdc++.h>
#define db(x) cout<<#x<<" = "<<x<<"\n"
#define fst first
#define snd second
#define fore(i,a,b) for(int i=a,ThxDem=b;i<ThxDem;++i)
#define pb push_back
#define ALL(s) s.begin(),s.end()
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define SZ(s) int(s.size())
using namespace std;
typedef long long ll;
typedef pair<int,ll> ii;

ll INF=1e18, pre[10010],nx[10010],g,re,m;

int get(int pos, int v){
	return (g+1)*pos+v;
}

int main(){FIN;
	int n; cin>>n>>m; n++;
	vector<int> a(m);
	fore(i,0,m) cin>>a[i];
	cin>>g>>re;
	sort(ALL(a));
	fore(i,0,m){
		if(i) pre[i]=a[i]-a[i-1];
		if(i+1<m) nx[i]=a[i+1]-a[i];
	}
	vector<ll> dist(get(m,0),INF);
	deque<ii> q; q.push_front({get(0,g),0});
	dist[get(0,g)]=0;
	while(SZ(q)){
		int id=q.front().fst;
		ll d=q.front().snd;
		q.pop_front();
		if(d!=dist[id])continue;
		int i=id/(g+1);
		int v=id%(g+1);
		if(nx[i]&&nx[i]<=v){
			if(v==nx[i]){
				int wh=get(i+1,g);
				if(d+1<dist[wh]) dist[wh]=d+1,q.push_back({wh,d+1});
			}
			else{
				int wh=get(i+1,v-nx[i]);
				if(d<dist[wh]) dist[wh]=d,q.push_front({wh,d});
			}
		}
		if(pre[i]&&pre[i]<=v){
			if(v==pre[i]){
				int wh=get(i-1,g);
				if(d+1<dist[wh]) dist[wh]=d+1,q.push_back({wh,d+1});
			}
			else{
				int wh=get(i-1,v-pre[i]);
				if(d<dist[wh]) dist[wh]=d,q.push_front({wh,d});
			}
		}
	}
	ll ans=INF;
	fore(i,0,m) fore(j,1,g+1) if(dist[get(i,j)]!=INF&&a.back()-a[i]<=j){
		ll now=a.back()-a[i];
		now+=dist[get(i,j)]*(g+re);
		now+=g-j;
		ans=min(ans,now);
	}
	if(ans==INF) ans=-1;
	cout<<ans<<"\n";
}