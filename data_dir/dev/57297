#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N = 300300;
int n, m , d[N] , deg[N] ;
vector< pair<int,int> >adj[N];
bool vis[N];
set<int>ans;


void dfs(int u,int p){
vis[u]=1;

for(auto s:adj[u]){
    int v = s.first;
    if( s.second == p )continue;
    if( d[v]==-1 )continue;
    if( !vis[v] )dfs(v,s.second);

    if( deg[v]%2!=d[v] && ans.find( s.second )==ans.end() ){
            deg[u]++;
            deg[v]++;
            ans.insert(s.second);
    }

}

}

int main(){

scanf("%d %d",&n,&m);
for(int i=1;i<=n;i++)scanf("%d",d+i);

for(int i=1;i<=m;i++){
    int u,v;
    scanf("%d %d",&u,&v);
    adj[u].push_back({v,i});
    adj[v].push_back({u,i});
}

for(int i=1;i<=n;i++)
    if( !vis[i] && d[i]==-1)
        dfs(i,0);

for(int i=1;i<=n;i++)
    if( !vis[i] && d[i]!=-1)
        dfs(i,0);


for(int i=1;i<=n;i++)
if( deg[i]%2!=d[i] && d[i]!=-1 ){
    printf("-1\n");
    return 0;
}

int k = ans.size();
printf("%d\n",k);
for(auto i:ans)
    printf("%d%c",i,(--k)==0?'\n':' ');

return 0;
}
