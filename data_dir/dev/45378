/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template<typename T> inline bool chkmax(T &aa, T bb) { return aa < bb ? aa = bb, true : false; }
template<typename T> inline bool chkmin(T &aa, T bb) { return aa > bb ? aa = bb, true : false; }

const ll mn=2e5+4;
const ll INF=1e18;
ll c[mn],d[mn];
ll n;
class TaskC {
public:
	void solve(std::istream& in, std::ostream& out) {
        in>>n;
        for (ll i=0;i<n;i++) in>>c[i]>>d[i];
        ll lo=-INF,hi=INF;
        ll diff=0;
        for (ll i=0;i<n;i++) {
            if (d[i]==1) {
                // x+diff>=1900. x>=1900-diff
                chkmax(lo,1900-diff);
            }
            else {
                // x+diff<=1899
                chkmin(hi,1899-diff);
            }
            //out<<diff<<" "<<lo<<" "<<hi<<endl;
            diff+=c[i];
        }
        if (lo<=hi) {
            if (hi>=INF) out<<"Infinity"<<endl;
            else out<<hi+diff<<endl;
        }
        else out<<"Impossible"<<endl;
	}
};


int main() {
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
