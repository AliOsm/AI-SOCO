#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define MAX 200005
ll arr[MAX], cnt[MAX*5], t;
ll st = 0, ed = 0;
ll tot = 0;

struct node{
    ll l, r, id;
};

bool comp(node p1, node p2)
{
    if(p1.r/t < p2.r/t) return true;
    if(p1.r/t == p2.r/t) return (p1.l < p2.l);
    return false;
}

void st_forward(ll p)
{
    for(ll i=st; i<p; i++){
        ll val = arr[i];
        cnt[val]--;
        tot = tot -  val*(2*cnt[val]+1);
    }
}

void st_backward(ll p)
{
    for(ll i=st-1; i>=p; i--){
        ll val = arr[i];
        cnt[val]++;
        tot = tot + (2*cnt[val]-1)*val;
    }
}

void ed_forward(ll p)
{
    for(ll i=ed+1; i<=p; i++){
        ll val = arr[i];
        cnt[val]++;
        tot = tot + (2*cnt[val]-1)*val;
    }
}

void ed_backward(ll p)
{
    for(ll i=ed; i>p; i--){
        ll val = arr[i];
        cnt[val]--;
        tot = tot -  val*(2*cnt[val]+1);
    }
}

int main()
{
    ll n, q;
    scanf("%lld %lld", &n, &q);
    t = sqrt(n);
    for(ll i=1; i<=n; i++) scanf("%lld", &arr[i]);
    vector<node> V;
    for(ll i=0; i<q; i++){
        ll x, y;
        scanf("%lld %lld", &x, &y);
        node temp = {x, y, i};
        V.push_back(temp);
    }
    sort(V.begin(), V.end(), comp);
    ll ans[q];
    for(ll i=0; i<q; i++){
        ll st1 = V[i].l;
        ll ed1 = V[i].r;
        if(ed1 > ed){
            ed_forward(ed1);
        }
        if(ed1 < ed){
            ed_backward(ed1);
        }
        if(st1 > st){
            st_forward(st1);
        }
        if(st1 < st){
            st_backward(st1);
        }
        ans[V[i].id] = tot;
        st = st1;
        ed = ed1;
    }
    for(ll i=0; i<q; i++){
        printf("%lld\n", ans[i]);
    }
}
