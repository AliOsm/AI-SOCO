//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7; 

int c[N], sz, cnt[N], used[N];
int t,n,m,a,b;

vector <int> g[N];

void dfs(int v){
	if(c[v] == 0) return;
	if(v != a && v != b) sz++;
	used[v] = 1;
	for(int to : g[v]){
		if(!used[to]){
			dfs(to);
		}
	}
}

void solve(){
	scanf("%d%d%d%d", &n, &m, &a, &b);
	for(int i = 1; i <= n; i++){
		c[i] = 1;
		used[i] = 0;
		g[i].clear();
	}
	for(int i = 1,u,v; i <= m; i++){
		scanf("%d%d", &u, &v);
		g[u].pb(v);
		g[v].pb(u);
	}

	c[b] = 0;
	sz = 0;
	dfs(a);
	ll res = n - 2 - sz;
	c[b] = 1, c[a] = 0;
	sz = 0;
	for(int i = 1; i <= n; i++) used[i] = 0;
	dfs(b);
	printf("%lld\n", res*(n - 2 - sz));
}

int main () {
	scanf("%d", &t);
	while(t--){
		solve();
	} 

return 0;
}