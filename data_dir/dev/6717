#include <bits/stdc++.h>

using namespace std;
int n,m;
int dp[50][2][2][2];

vector<string> vec;
int solve(int word,bool d,bool s,bool c) {
    if(d && s && c)
        return 0;
    if(word == n)
        return 1E9;

    if(dp[word][d][s][c] != -1)
        return dp[word][d][s][c];
    int ans = 1E9;
    if(vec[word][0] >= 'a' && vec[word][0] <= 'z')
        ans = solve(word+1,d,s,1);
    else if(vec[word][0] >= '0' && vec[word][0] <= '9')
        ans = solve(word+1,1,s,c);
    else
        ans = solve(word+1,d,1,c);
    for(int i = 1;i<m;i++) {
        if(vec[word][i] >= 'a' && vec[word][i] <= 'z')
            ans = min(ans,i+solve(word+1,d,s,1));
        else if(vec[word][i] >= '0' && vec[word][i] <= '9')
            ans = min(ans,i+solve(word+1,1,s,c));
        else
            ans = min(i+solve(word+1,d,1,c),ans);
    }
    int cnt = 1;
    for(int i = m-1;i>0;i--) {
        if(vec[word][i] >= 'a' && vec[word][i] <= 'z')
            ans = min(ans,cnt+solve(word+1,d,s,1));
        else if(vec[word][i] >= '0' && vec[word][i] <= '9')
            ans = min(ans,cnt+solve(word+1,1,s,c));
        else
            ans = min(cnt+solve(word+1,d,1,c),ans);
        cnt++;
    }
    return dp[word][d][s][c] = ans;

}

int main()
{
    memset(dp,-1,sizeof dp);
    ios_base::sync_with_stdio(0);
    cin>>n>>m;
    for(int i = 0;i<n;i++) {
        string s;
        cin>>s;
        vec.push_back(s);
    }
    int cntDigit = 0,cntLetters = 0,cntSymbol = 0;
    cout<<solve(0,0,0,0);
    return 0;
}
