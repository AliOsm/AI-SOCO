#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
string s1, s2;
ll n,k;
//vector <ll> dif;
ll dif = 0;
char third(char a, char b) // третий символ для a, b
{
    if (a!='z' && b!='z') return 'z';
    if (a!='y' && b!='y') return 'y';
    if (a!='t' && b!='t') return 't';
    return 'q';
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
    ios_base ::sync_with_stdio(0);
    cin.tie(0);
    ll i;
    cin>>n>>k;
    cin>>s1>>s2;
  //  cout<<s1<<" "<<s2<<endl;
    for(i=0; i<n; i++)
    {
        if (s1[i]!=s2[i])
            dif++;
    }
   // cout<<dif;
   if (dif - dif/2>k)
   {
       cout<<-1;
       return 0;
   }
    if (k >= dif)
    {
        ll must_change = k - dif;
        // заменяем must_change одинаковых на z или y, авсе разные - на третий элемент
        for(i=0; i<n; i++)
        {
            if (s1[i] == s2[i] && must_change)
            {
                if (s1[i]=='z') cout<<'y';
                else
                    cout<<'z';
                must_change--;
            }
            else
                if (s1[i]==s2[i]) cout<<s1[i];
            else
            {
                cout<<third(s1[i], s2[i]);
            }
        }
        return 0;
    }
    // допустим, есть 8 позиций отличия
    // а должно быть 5
    // следовательно, 6 отличающихся позиций образуют 3 пары.
    // В каждой паре должен быть представитель от 1 строки
    ll up = dif-k;
    ll p1=0, p2 = 0;
        for(i = 0; i<n; i++)
        {
            if (s1[i]==s2[i]) cout<<s1[i];
            else
            {
                if (p1<up)
                {
                    p1++;
                    cout<<s1[i];
                }
                else
                    if (p2<up)
                {
                    p2++;
                    cout<<s2[i];
                }
                else
                    cout<<third(s1[i], s2[i]);
            }
        }
    return 0;
}