#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <vector>

using namespace std;

#define snuke(it,x) for (__typeof((x).begin()) it = (x).begin();\
                it != (x).end(); it ++)


typedef long long lld;
const int MOD = 1e9+7,N = 1001000;
lld dp[N][3];
char s[N];

inline void add(lld &a,lld b) { a += b; if (a>=MOD) a -= MOD; }

int main() {
        scanf("%s",s);
        int len = strlen(s);
        do {
                char c = s[0];
                if (c=='0') {
                        dp[1][0] = 1;
                } else if (c=='1') {
                        dp[1][1] = 1;
                } else if (c=='2') {
                        // do nothing
                } else if (c=='*') {
                        dp[1][2] = 1;
                } else {
                        dp[1][0] = 1;
                        dp[1][1] = 1;
                        dp[1][2] = 1;
                }
        } while (false);
        for (int i = 1; i < len; i ++) {
                bool flag = s[i]=='?';
                if (flag || s[i]=='0') {
                        add(dp[i+1][0],dp[i][0]);
                }
                if (flag || s[i]=='1') {
                        add(dp[i+1][0],dp[i][2]);
                        add(dp[i+1][1],dp[i][0]);
                }
                if (flag || s[i]=='2') {
                        add(dp[i+1][1],dp[i][2]);
                }
                if (flag || s[i]=='*') {
                        add(dp[i+1][2],dp[i][1]);
                        add(dp[i+1][2],dp[i][2]);
                }
        }
        lld ans = 0;
        add(ans,dp[len][0]);
        add(ans,dp[len][2]);
        printf("%lld\n",ans);
        return 0;
}
