#include <bits/stdc++.h>

using namespace std;

const int MAX = (int)1e5 + 1 ;
const int INF = (int)1e9 ;
vector<int > adjList [MAX] ;
int a[MAX] ;
int main()
{
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr) ;
    int n , m , k , s ;
    cin >> n >> m >> k >> s ;
    for(int i = 0 ; i < n ;i++) {
        cin >> a[i];
        a[i]-- ;
    }

    while (m--)
    {
        int u , v ;
        cin >> u >> v ;
        --u , --v ;
        adjList[u].push_back(v) ;
        adjList[v].push_back(u) ;
    }
    queue<pair<int , int  > > q ;  // color , current
    int dist[k][MAX];
    for(int i = 0 ;i  < k ; i ++)
        for(int j = 0 ; j < MAX ; j++)
            dist[i][j] = INF ;

    for(int i = 0 ; i < n ; i ++)
    {
        q.push({a[i], i});
        dist[a[i]][i] = 0 ;
    }
    while (!q.empty())
    {
        pair<int , int > curr = q.front() ;
        q.pop() ;
        int u = curr.second ;
        int color = curr.first ;
        for(int v : adjList[u])
            if(dist[color][u] + 1 < dist[color][v])
            {
                dist[color][v] = dist[color][u] + 1 ;
                q.push({color , v}) ;
            }
    }
    int ans[n] ;
    for(int u = 0 ; u < n ; u++)
    {
        int temp[k] ;
        for(int i = 0 ; i < k ; i ++)
            temp[i] = dist[i][u] ;
        sort(temp , temp + k) ;
        int cnt = 0 ;
        for(int i = 0 ;i  < s ; i ++)
            cnt += temp[i] ;
        ans[u] = cnt ;
    }
    for(int x : ans)
        cout << x << ' ' ;
    cout << '\n' ;
    return 0 ;
}