#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <map>
#include <iostream>
#include <vector>
#include <set>
#include <functional>
#include <map>
#include <string> 

using namespace std;

int prime[1000];

int isprime(int n) {
	for (int d = 2; d * d <= n; ++d)
		if (n % d == 0) 
			return false;

	return true;
}

long long answer = (long long)1e18;

vector<int> divsr[1000 + 10];

int degr[100];

long long mx = (long long)1e18;

void check(int len) {
	long long mul = 1;
	bool f = true;

	for (int i = 0; i < len; ++i) {
		for (int j = 0; j < degr[i] - 1; ++j) {
			mul *= prime[i];
			if (mul > mx || mul < 0) {
				f = false;
				break;
			}
		}
		if (!f) break;
	}

	if (f && mul < answer) answer = mul;
}

void gen(int pos, int deg) {
	if (deg == 1) {
		check(pos);
		return;
	}	
	for (int i = 0; i < (int)divsr[deg].size(); ++i) {
		degr[pos] = divsr[deg][i];
		gen(pos + 1, deg / degr[pos]);
	}
}

int main() {

#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

	int len = 0;
	for (int i = 2; i < 1000; ++i)
		if (len < 100 && isprime(i))
			prime[len++] = i;

	int n;
	scanf("%d", &n);

	if (n == 1) {
		cout << 1;
		return 0;
	}

	for (int i = 2; i <= n; ++i) {
		for (int d = 2; d <= i; ++d) {
			if (i % d == 0) {
				divsr[i].push_back(d);
			}
		}
	}	
	
	for (int i = 0; i < (int)divsr[n].size(); ++i) {
		degr[0] = divsr[n][i];
		gen(1, n / degr[0]);
	}

	cout << answer;

	return 0; 
}