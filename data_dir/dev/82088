#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M = 2e5+5;
const ll mod = 998244353;
ll fact[M],ifact[M];
ll power(ll a,ll b)
{
	ll val=1;
	while(b)
	{
		if(b%2)
			val=(val*a)%mod;
		b/=2;
		a=(a*a)%mod;
	}
	return val;
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,k;
	cin>>n>>k;
	fact[0]=1;
	ifact[0]=1;
	for(ll i=1;i<M;i++)
	{
		fact[i]=(i*fact[i-1])%mod;
		ifact[i]=power(fact[i],mod-2);
	}
	if(k>=n)
	{
		cout<<"0\n";
		return 0;
	}
	if(k==0)
	{
		cout<<fact[n]<<"\n";
		return 0;
	}
	ll r = n-k;
	ll res = fact[n];
	res = (res*ifact[r])%mod;
	res = (res*ifact[n-r])%mod;
	// res contains no. of ways to choose r rows.
	ll c = (fact[r]*ifact[r-1])%mod;
	ll sn = 1;
	ll tot = 0;
	for(ll i=r;i>=1;i--)
	{
		ll x = (power(i,n));
		ll ft = (fact[r]*ifact[i])%mod;
		ft = (ft*ifact[r-i])%mod;
		x = (x*ft)%mod;
		x = (x*sn+mod)%mod;
		tot = (tot + x)%mod;
		sn = -sn;
	}
	res = (res*tot)%mod;
	res = (res*2)%mod;
	cout<<res<<"\n";
	return 0;
}