#include<bits/stdc++.h>
#define int long long int
#define ull unsigned long long int
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 1200005
#define MOD 1000000007
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define precise cout<<fixed<<setprecision(10)
using namespace std;
const double PI = atan(1.0)*4;
const int64_t INF=100000000000000003;
const int32_t LOG=21;
const int BIG=pow(2,20);
int cost[100005][4];
int deg[100005];
vector<int> v[100005];
int color[100005];
int first,second,third;
int c=0;
int tot=0;
void dfs1(int i,int u)
{
   if(c%3==0)tot+=cost[i][first];
   else if(c%3==1)tot+=cost[i][second];
   else tot+=cost[i][third];
   rep(j,0,v[i].size())
   {
      if(v[i][j]!=u)
      {
         c++;
         dfs1(v[i][j],i);
      }
   }
}
void dfs(int i,int u)
{
   if(c%3==0)color[i]=first;
   else if(c%3==1)color[i]=second;
   else color[i]=third;
   rep(j,0,v[i].size())
   {
      if(v[i][j]!=u)
      {
         c++;
         dfs(v[i][j],i);
      }
   }
}
void solve(int start,int n)
{
    int ind=0;
    int ans=INF;
    //1 2 3
    first=1,second=2,third=3;
    dfs1(start,-1);
    //cout<<"tot is "<<tot<<endl;
    if(ans>tot)
    {
      ans=tot;
      ind=1;
    }
    //1 3 2
    c=0;
    tot=0;
    first=1,second=3,third=2;
    dfs1(start,-1);
    //cout<<"tot is "<<tot<<endl;
    
    if(ans>tot)
    {
      ans=tot;
      ind=2;
    }
    // 2 1 3
    c=0;
    tot=0;
    first=2,second=1,third=3;
    dfs1(start,-1);
    //cout<<"tot is "<<tot<<endl;
    
    if(ans>tot)
    {
      ans=tot;
      ind=3;
    }
    //2 3 1
    c=0;
    tot=0;
    first=2,second=3,third=1;
    dfs1(start,-1);
    if(ans>tot)
    {
      ans=tot;
      ind=4;
    }
    //cout<<"tot is "<<tot<<endl;
    //3 1 2
    c=0;
    tot=0;
    first=3,second=1,third=2;
    dfs1(start,-1);
   // cout<<"tot is "<<tot<<endl;
    if(ans>tot)
    {
      ans=tot;
      ind=5;
    }
    //3 2 1
    c=0;
    tot=0;
    first=3,second=2,third=1;
    dfs1(start,-1);
 //   cout<<"tot is "<<tot<<endl;
    if(ans>tot)
    {
      ans=tot;
      ind=6;
    }
    cout<<ans<<endl;
    if(ind==1){first=1,second=2,third=3;}
    else if(ind==2){first=1,second=3,third=2;}
    else if(ind==3){first=2,second=1,third=3;}
    else if(ind==4){first=2,second=3,third=1;}
    else if(ind==5){first=3,second=1,third=2;}
    else if(ind==6){first=3,second=2,third=1;}
    c=0;
    dfs(start,-1);
    rep(i,1,n+1)
    {
       cout<<color[i]<<" ";    
    }
    cout<<endl;
}
int32_t main(){
       getFaster; 
       int n;
       cin>>n;
       rep(i,1,4)
       {
         rep(j,1,n+1)cin>>cost[j][i];
       }
       rep(i,0,n-1)
       {
         int x,y;
         cin>>x>>y;
         v[x].push_back(y);
         v[y].push_back(x);
         deg[x]++;
         deg[y]++;
         if(deg[x]>=3 || deg[y]>=3)
         {
          cout<<-1<<endl;
          return 0;
         } 
       }
       int start=-1;
       rep(i,1,n)
       {
           if(deg[i]==1)
           {start=i;break;}  
       }
       solve(start,n); 
       return 0;
}