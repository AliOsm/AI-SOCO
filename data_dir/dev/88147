#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
//#include <random>
#include <cassert>
//#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x),end(x)
#define SZ(x) ((int)(x).size())
typedef long long LL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
const int INF = (int)1e9;
const LL INFF = (LL)1e18;
const int MXN = (int)3e5 + 7;
const int mod = (int)1e9 + 7;
PII a[MXN];
LL m; int n;
bool sol(int val) {
	LL cnt = m;
	int num = n / 2 + 1;
	for (int i = n; i >= 1; i--) {
		if (a[i].S < val) continue ;
		if (a[i].F >= val) {
			num--;
		} else if (cnt >= val - a[i].F) {
			cnt -= val - a[i].F;
			num--;
		} else {
			return false;
		}
		if (!num) return true;
	}
	return false;
}
int main() {
	int t; scanf("%d", &t);
	while (t--) {
		scanf("%d %lld", &n, &m);
		for (int i = 1; i <= n; i++) {
			scanf("%d %d", &a[i].F, &a[i].S);
			m -= a[i].F;
		}
		sort(a + 1, a + n + 1);
		int ll = a[n/2+1].F; 
		sort(a + 1, a + n + 1, [&](PII u, PII v) {
				return u.S < v.S; });
		int rr = a[n/2+1].S;
		sort(a + 1, a + n + 1);
		int ans = ll;
		while (ll <= rr) {
			int mid = (ll + rr) >> 1;
			if (sol(mid)) {
				ll = mid + 1;
				ans = mid;
			} else {
				rr = mid - 1;
			}
		}
		printf("%d\n", ans);
	}
	return 0;
}
