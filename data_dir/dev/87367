#include <bits/stdc++.h>
using namespace std;
 
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
 
#define pb push_back
#define mp make_pair
#define cotu cout
#define itn int
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
 
typedef long long ll;
 
const int inf = int(1e9);
const int mod = inf + 7;
const int N = 1e6 + 555;
const double PI = acos(-1.0);
map<pair<int, itn>, vector<itn> > pos;
void solve()
{
	int n;
	cin >> n;
	vector<pair<int, int> > v, a, b;
	for(int i = 0; i < n; ++i){
		int x, y;
		cin >> x >> y;
		v.pb(mp(x, y));
		pos[mp(x, y)].pb(i);
	}
	sort(all(v));
	int i = 0;
	while(true){
		if(i == n) break;
		a.pb(v[i]);
		int mx = v[i].S;
		i++;
		while(i < n){
			if(v[i].F <= mx){
				mx = max(mx, v[i].S);
				a.pb(v[i]);
				i++;
			}
			else break;
		}
		if(i == n) break;
		b.pb(v[i]);
		mx = v[i].S;
		i++;
		while(i < n){
			if(v[i].F <= mx){
				mx = max(mx, v[i].S);
				b.pb(v[i]);
				i++;
			}
			else break;
		}
		if(i == n) break;
	}
	if(a.empty() || b.empty()) cout << -1;
	else{
		int res[n];
		for(int i = 0; i < sz(a); ++i){
			res[pos[a[i]].back()] = 1;
			pos[a[i]].pop_back();
		}
		for(int i = 0; i < sz(b); ++i){
			res[pos[b[i]].back()] = 2;
			pos[b[i]].pop_back();
		}
		for(int i = 0; i < n; ++i) cout << res[i] << " ";
	}
	cout << endl;
	pos.clear();
}

int main()
{
	Red;
	int T;
	cin >> T;
	while(T--)
	solve();
	return 0;
}