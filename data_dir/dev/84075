#include <bits/stdc++.h>
using namespace std;
 
template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl
 
 
 
 
typedef long long ll;
const ll mod = 1e9+7;
const int maxn = 1e6 + 5;
const ll inf = 8e18;
 
int na,nb,nc;
vector<ll> a,b,c;
 
 
ll ans;
 
 
ll compute(array<ll,3> x) {
    ll i=x[0];
    ll j=x[1];
    ll k=x[2];
    return (i-j)*(i-j) + (j-k)*(j-k) + (i-k)*(i-k);
}
 
 
void add(ll a, ll b, vector<ll>& c) {
    if (a>b) swap(a,b);
 
    //add end
    {
	auto iter = lower_bound(c.begin(), c.end(), b);
	if (iter == c.end()) iter--;
	ans = min(ans, compute({a,b,*iter}));
    }
    
    // add begin
    {
    	auto iter = lower_bound(c.begin(),c.end(),a);
    	if (iter == c.end()) --iter;
    	if (*iter > a && iter != c.begin()) --iter;
    	ans = min(ans, compute({a,b,*iter}));
    }
 
    
    // add middle
    {
	ll mid = (a+b)/2;
	auto iter = lower_bound(c.begin(),c.end(),mid);
	if (iter == c.end()) --iter;
	ans = min(ans, compute({a,b,*iter}));
	if (iter != c.begin()) --iter;
	ans = min(ans, compute({a,b,*iter}));
    }
    
}
 
void gen(vector<ll>& a,vector<ll>& b,vector<ll>& c) {
    
    for (ll x: a) {
	auto iter = lower_bound(b.begin(), b.end(), x);
	if (iter == b.end()) --iter;
	add(x,*iter,c);
	if (iter != b.begin()) --iter;
	add(x,*iter,c);
    }
}
 
ll solve() {
    a.clear(); b.clear(); c.clear();
    ans=inf;
    cin>>na>>nb>>nc;
    a.resize(na);
    b.resize(nb);
    c.resize(nc);
    for (int i=0; i<na; i++) {
	cin>>a[i];
    }
    for (int i=0; i<nb; i++) {
	cin>>b[i];
    }
    for (int i=0; i<nc; i++) {
	cin>>c[i];
    }
    sort(a.begin(),a.end());
    sort(b.begin(),b.end());
    sort(c.begin(),c.end());
 
 
    gen(a,b,c);
    gen(a,c,b);
    
    gen(b,a,c);
    gen(b,c,a);
 
    gen(c,b,a);
    gen(c,a,b);
    
    return ans;
}
 
 
int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);
 
    int t; cin>>t;
    while (t--) {
	cout<<solve()<<"\n";	
    }
  
 
    return 0;
}