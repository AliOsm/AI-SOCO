#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;

//#define PB push_back
#define PB emplace_back
#define F first
#define S second
#define MP make_pair
#define endl '\n'

const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define gcd(a,b) __gcd(a,b)
#define lcm(a,b) (a*(b/gcd(a,b)))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);

//
//debug
template<typename F,typename S>ostream&operator<<(ostream&os,const pair<F,S>&p){return os<<"("<<p.first<<", "<<p.second<<")";}
template<typename T>ostream&operator<<(ostream&os,const vector<T>&v){os<<"{";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<", ";os<<*it;}return os<<"}";}
template<typename T>ostream&operator<<(ostream&os,const set<T>&v){os<<"[";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<",";os<<*it;}return os<<"]";}
template<typename T>ostream&operator<<(ostream&os,const multiset<T>&v) {os<<"[";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<", ";os<<*it;}return os<<"]";}
template<typename F,typename S>ostream&operator<<(ostream&os,const map<F,S>&v){os<<"[";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<", ";os<<it->first<<" = "<<it->second;}return os<<"]";}
#define dbg(args...) do {cerr << #args << " : "; faltu(args); } while(0)
void faltu(){cerr << endl;}
template<typename T>void faltu(T a[],int n){for(int i=0;i<n;++i)cerr<<a[i]<<' ';cerr<<endl;}
template<typename T,typename...hello>void faltu(T arg,const hello&...rest){cerr<<arg<<' ';faltu(rest...);}
//#else
//#define dbg(args...)

ll a, b;
vi store1, store2;

int main()
{
	optimize();
	cin >> a >> b;
	ll lo = 0, hi = 1e6+5, mid;
	ll n;
	bool ok = 0;
	while( lo <= hi ) {
		mid = (lo + hi)/2;
		if( (mid*(mid+1LL))/2LL == (a+b) ) {
			ok = 1;
			n = mid;
			break;
		}
		else if( (mid*(mid+1LL))/2LL > (a+b) ) hi = mid-1;
		else lo = mid+1;
	}
	if( !ok ) n = hi;
	ll temp = a;
	for( int i = n; i >= 1; --i ) {
		if( temp-i < 0 ) {
			store2.PB(i);
			continue;
		}
		else {
			temp -= i;
			store1.PB(i);
		}
	}
	int len = store1.size();
	cout << len << endl;
	for( int i = 0; i < len; ++i ) cout << store1[i] << " ";
	cout << endl;
	len = store2.size();
	cout << len << endl;
	for( int i = 0; i < len; ++i ) cout << store2[i] << " ";
	cout << endl;
}





















