#include<bits/stdc++.h>

using namespace std;
const int MAXN = 100000;

const int INF = 0x3f3f3f3f;

#define int long long

signed main(){
	int q;
	cin >> q;
	
	while(q --){
		int n,k;
		cin >> n >> k;
		
		string s;
		cin >> s;
		
		vector<int> v;
		int resp = INF;
		
		int at = 0;
		
		for(int i = 0;i < s.size();i++){
			if(at % 3 == 0){
				if(s[i] != 'R') v.push_back(1);
				else v.push_back(0);
			}
			if(at % 3 == 1){
				if(s[i] != 'G') v.push_back(1);
				else v.push_back(0);
			}
			if(at % 3 == 2){
				if(s[i] != 'B') v.push_back(1);
				else v.push_back(0);
			}
			at ++;
		}
		
		int soma = 0;
		for(int i = 0;i < v.size();i++){
			soma += v[i];
			if(i >= k-1) resp = min(resp,soma) , soma -= v[i - (k-1)];
		}
		v.clear();
		
		at = 0;
		
		for(int i = 0;i < s.size();i++){
			if(at % 3 == 0){
				if(s[i] != 'B') v.push_back(1);
				else v.push_back(0);
			}
			if(at % 3 == 1){
				if(s[i] != 'R') v.push_back(1);
				else v.push_back(0);
			}
			if(at % 3 == 2){
				if(s[i] != 'G') v.push_back(1);
				else v.push_back(0);
			}
			at ++;
		}
		
		//for(int i = 0;i < v.size();i++) cout << "| " << v[i] << " ";
		//cout << endl;
		
		soma = 0;
		for(int i = 0;i < v.size();i++){
			soma += v[i];
			if(i >= k-1) resp = min(resp,soma) , soma -= v[i - (k-1)];
		}
		v.clear();
		
		at = 0;
		
		for(int i = 0;i < s.size();i++){
			if(at % 3 == 0){
				if(s[i] != 'G') v.push_back(1);
				else v.push_back(0);
			}
			if(at % 3 == 1){
				if(s[i] != 'B') v.push_back(1);
				else v.push_back(0);
			}
			if(at % 3 == 2){
				if(s[i] != 'R') v.push_back(1);
				else v.push_back(0);
			}
			at ++;
		}
		
		soma = 0;
		for(int i = 0;i < v.size();i++){
			soma += v[i];
			if(i >= k-1) resp = min(resp,soma) , soma -= v[i - (k-1)];
		}
		v.clear();
		
		cout << resp << endl;
	}
}