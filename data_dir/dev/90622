#include <bits/stdc++.h>
#ifndef M_PI
#define M_PI 3.14159265358979323846264338327
#endif // M_PI
#define endl "\n"
#define S struct
#define X first
#define Y second
#define V vector
#ifndef __linux__
#define LLD "%I64d"
#else
#define LLD "%ll""d"
#endif
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define GET(a, n) for (int __i = 0; __i < (n); ++__i) cin >> a[__i];
#define GETM(a, n, m) for (int __i = 0; __i < (n); ++__i) for (int __j = 0; __j < m; ++__j) cin >> a[__i][__j];
#define PRINTM(a, n, m) for (int __i = 0; __i < (n); ++__i) { for (int __j = 0; __j < m; ++__j) cout << a[__i][__j] << " ";  cout << endl; };
#define PRINT(a, n) for (int __i = 0; __i < (n); ++__i) cout << a[__i] << " ";
#define IT(a) a.begin(), a.end()
#define SQR(x) (x) * (x)
#define CASE(a, s) cout << "Case #" << a << ": " << s << endl;
#define DEB(a) cout << #a << " = " << (a) << endl; cout.flush();
#define DEBA(a) for (auto __i: a) cout << __i << " "; cout << endl; cout.flush();
#define IFDEB(b, a) if (b) { cout << #a << " = " << (a) << endl; cout.flush(); }
using namespace std;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair <int, int> PII;
typedef pair <LL, LL> PLL;
const int MOD = 1000000007;
void sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); }
S Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;
S FAIL { FAIL () { cout << "CHANGE!!!" << endl;}};

#define prev uqwioooi

S Z
{
    int add;
    int X;
    int Y;
    int operator < (const Z &a) const {
        return X < a.X;
    }
};

int n, k;

void compress_y(vector <PII> &a)
{
    map <int, int> s;
    for (auto i: a) {
        s[i.Y] = 0;
    }
    int prev = -1.5e9;
    int val = -1;
    for (auto &i: s) {
        if (i.X - k >= prev) {
            val += k;
            i.second = val;
        } else {
            val += i.X - prev;
            i.second = val;
        }
        prev = i.X;
    }
    for (auto &i: a) {
        i.Y = s[i.Y];
    }
}

int prev[30000001];
int val[30000001];

int main()
{
    scanf("%d%d", &n, &k);
    vector <PII> a(n);
    FOR (i, 0, n) {
        scanf("%d%d", &a[i].X, &a[i].Y);
    }
    compress_y(a);
    vector <LL> ans(n + 1);
    FOR (i, 0, 30000001) {
        prev[i] = INT_MIN;
    }
    vector <Z> v;
    FOR (i, 0, n) {
        v.push_back({1, (a[i].X - k + 1) << 1, a[i].Y});
        v.push_back({-1, (a[i].X << 1) + 1, a[i].Y});
    }
    sort(IT(v));
    for (auto i: v) {
        FOR (j, 0, k) {
            if (prev[i.Y - j] != INT_MIN) {
                ans[val[i.Y - j]] += ((LL)i.X - (LL)prev[i.Y - j]) / 2;
                if ((prev[i.Y - j] & 1) == 0 && (i.X & 1) == 1) {
                    ++ans[val[i.Y - j]];
                }
            }
            val[i.Y - j] += i.add;
            prev[i.Y - j] = i.X;
        }
    }
    FOR (i, 1, n + 1) {
        printf(LLD" ", ans[i]);
    }
}
