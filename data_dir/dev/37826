#include <iostream>
#include <vector>
#include <cstdio>
#include <set>
#include <queue>
using namespace std;

vector<int> answer;
int total,n;
int should_be[100005],ase[100005];

struct my{
    int value;
    set<int> children;
};

my ob[100005];

void tree_func(int node,char *str)
{
    set<int>::iterator it;
    it=ob[node].children.begin();
    queue<int> ers;
    while(it!=ob[node].children.end()){
        if(str[*it]){
            ers.push(*it);
            it++;
            continue;
        }
        str[*it]=1;
        tree_func(*it,str);
        it++;
    }
    while(!ers.empty()){
        ob[node].children.erase(ers.front());
        ers.pop();
    }
    return ;
}

void making_tree()
{
    char str[n];
    int i;
    for(i=1;i<n;i++)
        str[i]=0;
    str[0]=1;
    tree_func(0,str);
    return ;
}


void solve_it(int node,int flunk)
{
    if(ase[node]!=should_be[node] && !flunk){
        flunk=!flunk;
        total++;
        answer.push_back(node+1);
    }
    if(ase[node]==should_be[node] && flunk){
        flunk=!flunk;
        total++;
        answer.push_back(node+1);
    }
    set<int>::iterator c;
    c=ob[node].children.begin();
    while(c!=ob[node].children.end()){
        set<int>::iterator c_c;
        c_c=ob[*c].children.begin();
        while(c_c!=ob[*c].children.end()){
            solve_it(*c_c,flunk);
            c_c++;
        }
        c++;
    }
    return ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    scanf("%d",&n);
    int i;
    for(i=0;i<n-1;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        x--;
        y--;
        ob[y].children.insert(x);
        ob[x].children.insert(y);
    }
    for(i=0;i<n;i++)
        scanf("%d",&ase[i]);
    for(i=0;i<n;i++)
        scanf("%d",&should_be[i]);
    making_tree();
    total=0;
    solve_it(0,0);
    set<int>::iterator pt;
    pt=ob[0].children.begin();
    while(pt!=ob[0].children.end()){
        solve_it(*pt,0);
        pt++;
    }
    cout<<total<<endl;
    for(i=0;i<total;i++)
        cout<<answer[i]<<endl;
    return 0;
}
