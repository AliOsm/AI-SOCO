#include <bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;
int n, a[1005], dp[2][20005], offset = 10000;

int letak(int i) {
	return i + offset;
}

int add(int x, int y) {
	return (x + y) % MOD;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}

	int ans = 0;
	for (int i = 0; i < n; i++) {
		for (int sum = -10000; sum <= 10000; sum++) {
			int &cur = dp[i & 1][letak(sum)];
			cur = 0;
			
			if (sum - a[i] >= -10000) {
				cur = add(cur, dp[~i & 1][letak(sum - a[i])]);
			}

			if (sum + a[i] <= 10000) {
				cur = add(cur, dp[~i & 1][letak(sum + a[i])]);
			}
		}

		dp[i & 1][letak(a[i])] = add(dp[i & 1][letak(a[i])], 1);
		dp[i & 1][letak(-a[i])] = add(dp[i & 1][letak(-a[i])], 1);

		ans = add(ans, dp[i & 1][letak(0)]);
	}

	cout << ans << '\n';

	return 0;
}