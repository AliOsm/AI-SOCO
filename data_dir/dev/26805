#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

using namespace std;
typedef int mt;
//#define mt int
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 200101
#define K 21
#define P 2
#define M (100001)
#define INF 100000000000000007//10000000000000007// 1e16 + 7
#define MOD 1000000007ll  //1000000007//1e9 + 7
#define EPS 1e-9
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:200000000")

mt n, c;
char pc[4] = {'A', 'C', 'G', 'T'};
mt cnt[4], d[4];
char s[N];

mt fmax(void) {
	return max(max(cnt[0] + d[0], cnt[1] + d[1]),
		max(cnt[2] + d[2], cnt[3] + d[3]));
}

bool test(void) {
	bool ok = true;
	rep(0, 4, i)
		ok &= (cnt[0] + d[0]) == (cnt[i] + d[i]);
	return ok;
}

int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d", &n);
	scanf("%s", s);
	rep(0, n, i) {
		if (s[i] == '?') ++c;
		else {
			rep(0, 4, j)
				if (s[i] == pc[j]) {
					++cnt[j];
					break;
				}
		}
	}
	mt m = fmax();
	rep (0, 4, i) {
		mt x = m - (cnt[i] + d[i]);
		c -= x;
		d[i] += x;
	}
	if (c < 0 || c % 4 || !test())
		puts("===");
	else {
		c >>= 2;
		rep(0, 4, i)
			d[i] += c;
		rep(0, n, i) {
			if (s[i] == '?') {
				rep(0, 4, j)
					if (d[j]) {
						--d[j];
						s[i] = pc[j];
						break;
					}
			}
		}
		puts(s);
	}

	return 0;
}