//#include <cstdio>
#include <iostream>

#include <cstring>

#include <string>
#include <vector>
#include <algorithm>

#include <map>

using namespace std;

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> II;

llong solve(int N, llong T, vector<llong> A) {
   llong sum = 0;
   map<int,int> remA;
   REP(i, N) {
      remA[i] = A[i];
      sum += A[i];
   }

   llong res = 0;

   llong remT = T;
   llong niter = 0;
   while (!remA.empty() && remT > 0) {
      ++niter;
   //   cerr << "Iteration " << niter << endl;
   //   cerr << "remT: " << remT << endl;
   //   for (auto it : remA)
   //      cerr << it.first+1 << ',' << it.second << "  ";
   //   cerr << endl;
   //   cerr << "sum: " << sum << endl;

      llong full_circles = remT / sum;
      res += full_circles * SZ(remA);
      remT %= sum;

   //   cerr << "Full circles: " << full_circles << endl;

      VI to_delete;
      for (auto it : remA) {
         if (remT < it.second) {
            to_delete.push_back(it.first);
         }
         else {
            ++res;
            remT -= it.second;
            if (remT < it.second)
               to_delete.push_back(it.first);
         }
      }
      for (int id : to_delete) {
         sum -= remA[id];
         remA.erase(id);
      }
   }
   cerr << "niter: " << niter << endl;

   return res;
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(NULL);

   int N;
   llong T;
   cin >> N >> T;

   vector<llong> A(N);
   REP(i, N)
      cin >> A[i];

   llong res = solve(N, T, A);
   cout << res << '\n';

   return 0;
}
