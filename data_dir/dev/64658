#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define oo 666666666

int n;
vector<int>g[100005];
ll A[100005];
ll d[100005];
ll val[100005];
ll rem = 0;

void dfs(int c, int p = 0)
{
    if(g[c].size()==1 && g[c][0]==p)
    {
        d[c]=1;
        val[c]=A[c];
        return;
    }

    int k = 0;
    ll mn = LLONG_MAX;
    d[c]=1;

    for(auto&u:g[c])
        if(u!=p)
    {
        dfs(u,c);
        d[c] = d[c]/__gcd(d[c],d[u])*d[u];
        mn=min(mn,val[u]);
        k++;
    }
    d[c]=max(d[c],1LL);
    val[c] = mn/d[c]*d[c]*k;
    d[c]*=k;
}

int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin>>n;
    for(int i=1; i<=n; i++)
        cin>>A[i];

    for(int i=1; i<n; i++)
    {
        int u,v;
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1);
    cout<<accumulate(A,A+n+1,0LL) - val[1];
}
