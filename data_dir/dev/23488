#include<iostream>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
using namespace std;
ll mod=998244353;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }

    return (result)%mod;

}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
        return false;
    return true;
}
vector<ll> v[200005];
vector<ll> visited(200005,0);
vector<ll> deg(200005,0);
vector<ll> comp;
void dfs(ll x)
{
    visited[x]=1;
    comp.pb(x);
    for(ll i=0;i<v[x].size();i++)
    {
        if(!visited[v[x][i]])
        {
            dfs(v[x][i]);
        }
    }
}
bool check(ll k,ll n,ll a,ll b,ll mid)
{
    ll pd = mid*a;
    if(k-pd <=a)
        return false;
    k=k-pd;
    ll left=n-mid;
    if(k-left*b<=b)
        return false;

    return true;




}
int main()
{
 ll  n,m;
 cin>>m>>n;
 vector<vector<ll> > v(m+1,vector<ll> (n+1));
 ll i,j;
 for(i=1;i<=m;i++)
    for(j=1;j<=n;j++)
        cin>>v[i][j];
 vector< vector<ll> > ans(m+1,vector<ll> (n+1));
 for(i=1;i<=m;i++)
    ans[i][1]=ans[i-1][1]+v[i][1];
 for(i=2;i<=n;i++)
    ans[1][i]=ans[1][i-1]+v[1][i];
 for(i=2;i<=n;i++)
 {
     for(j=2;j<=m;j++)
        ans[j][i]=max(ans[j][i-1],ans[j-1][i])+v[j][i];
 }
 for(i=1;i<=m;i++)
    cout<<ans[i][n]<<" ";


}
