#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <memory.h>
#include <cstdlib>
#include <iomanip>
#include <set>
#include <map>

using namespace std;

#define pb push_back
#define mp make_pair                  
#define F first
#define S second
#define scf scanf
#define prf printf

typedef long double ld;
typedef long long ll;

int n, m;
char s[1505][1505];
bool used[1505][1505];
int X[1505][1505];
int Y[1505][1505];
int ans = 0;
int xx, yy, px, py;

inline void dfs(int x, int y) {
    xx = x, yy = y;
    while (xx <= 0)
        xx += n;
    while (yy <= 0)
        yy += m;
    px = xx % n;
    py = yy % m;
    if (!px) px = n;
    if (!py) py = m;
    if (s[px][py] == '#') return;
    if (used[px][py]) {
        if (X[px][py] != x || Y[px][py] != y)
            ans++;
        return;
    }
    used[px][py] = true;
    X[px][py] = x;
    Y[px][py] = y;
    dfs(x - 1, y);
    dfs(x, y - 1);
    dfs(x + 1, y);
    dfs(x, y + 1);
}    

int main() {
// freopen("input.txt","r",stdin);
    scf("%d%d\n", &n, &m);
    int cnt = 0;
    for (int i = 1; i <= n; i++)
        gets(s[i] + 1);
    memset(used, false, sizeof(used));
    int sx, sy;
    sx = sy = -1;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
            if (s[i][j] == 'S') {
                sx = i;
                sy = j;
               // break;
            } else if (s[i][j] == '#') cnt++;
       if (cnt == 0) {
        puts("Yes");
        return 0;}
    ans = 0;
    dfs(sx, sy);
    if (ans > 1) puts("Yes");
        else puts("No");
    return 0;
}   
    