#include <bits/stdc++.h>

using namespace std;

#define sz(a) int(a.size())

set <int> unvis;
vector <int> cn [200010];
vector <int> cc;

void dfs (int u) {
	unvis.erase(u);
	cc.push_back(u);
	if (!sz(unvis)) return;
	int v = *unvis.begin();
	while (v != -1) {
		if (!binary_search(cn[u].begin(),cn[u].end(),v)) dfs(v);
		auto it = unvis.upper_bound(v);
		if (it == unvis.end()) v = -1;
		else v = *it;
	}
}

int main () {
	int n, m;
	scanf("%d%d",&n,&m);
	while (m--) {
		int u,v;
		scanf("%d%d",&u,&v);
		u--,v--;
		cn[u].push_back(v);
		cn[v].push_back(u);
	}
	for (int i = 0; i < n; i++) sort(cn[i].begin(),cn[i].end()), unvis.insert(i);

	vector <int> ans;
	for (int i = 0; i < n; i++) {
		if (unvis.count(i)) {
			dfs(i);
			ans.push_back(sz(cc));
			cc.clear();
		}
	}
	sort(ans.begin(),ans.end());
	printf("%d\n",sz(ans));
	for (int i = 0; i < sz(ans); i++) {
		if (i) printf(" ");
		printf("%d",ans[i]);
	}
	puts("");
}
