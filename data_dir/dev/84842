#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

vector<vector<ll>> g;
vector<ll> cats, used;
ll n, m;

void find(int v, int enc) {
    if (used[v]) {
        return;
    }
    if (cats[v]) {
        enc++;
    }
    else {
        enc = 0;
    }
    //cerr << "FINDING IN " << v << " enced " << enc << endl;
    if (enc > m) {
        return;
    }
    used[v] = true;
    for (int u: g[v])
        find(u, enc);
}

int main() {
    ios::sync_with_stdio(false); cin.tie(NULL);
    cin >> n >> m;
    cats.resize(n);
    used.resize(n);
    g.resize(n);
    for (int i = 0; i < n; i++) cin >> cats[i];
    for (int i = 0; i < n-1; i++) {
        int a, b; cin >> a >> b; a--; b--;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    find(0, 0);
    int r = 0;
    for (int i = 1; i < n; i++) {
        if (g[i].size() == 1 && used[i] == true)
            r++;
    }
    cout << r << endl;
}
