#include <bits/stdc++.h>
using namespace std;

#define LSB(i) ((i) & -(i))
const int maxn = 1e5+5;

struct star{
    int x, y, c;

    star() {}
    star(int a, int b, int d){
        x = a, y = b, c = d;
    }

    bool operator <(const star& s) const{
        return (x != s.x ? x < s.x : y < s.y);
    }
} s[maxn];



int n, q, c, res[maxn], dp[105][105][15], is[105][105][15];


int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);

    cin >> n >> q >> c;
    for (int i = 0; i < n; i++){
        cin >> s[i].x >> s[i].y >> s[i].c;
        is[s[i].x][s[i].y][s[i].c]++;
    }

    for (int i = 1; i <= 100; i++){
        for (int j = 1; j <= 100; j++){
            for (int k = 0; k <= 10; k++){
                dp[i][j][k] += is[i][j][k];
                dp[i][j][k] += dp[i - 1][j][k] + dp[i][j - 1][k];
                dp[i][j][k] -= dp[i - 1][j - 1][k];
            }
        }
    }

    for (int i = 0, t, x1, y1, x2, y2; i < q; i++){
        cin >> t >> x1 >> y1 >> x2 >> y2;
        int res = 0;
        for (int j = 0; j <= 10; j++){
            res += (dp[x2][y2][j] + dp[x1 - 1][y1 - 1][j] - dp[x1 - 1][y2][j] - dp[x2][y1 - 1][j]) * ((t + j) % (c + 1));
        }

        printf("%d\n", res);
    }
    return 0;
}
