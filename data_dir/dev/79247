#include<bits/stdc++.h>
#define int long long
using namespace std;
const long long inf=1e18;
const int N=2000001;
long long dp[N];
long long dp1[N];
long long n,m,d;
int sz;
int a[N];
int b[N];
int t[N];
deque<long long> q;

main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin>>n>>m>>d;
    for(int i=1;i<=1;++i)
    {
        cin>>a[i]>>b[i]>>t[i];
        for(int j=1;j<=n;++j)
        {
            dp[j]=b[i]-abs(a[i]-j);
            dp1[j]=dp[j];
        }
    }
    for(int i=2;i<=m;++i)
    {
        cin>>a[i]>>b[i]>>t[i];
        q.clear();
        int time=t[i]-t[i-1];
        int l=1;
        int r=min(n,1+d*time);
        int ll=l;
        int rr=r;
        for(int j=l;j<=r;j++)
        {
            int kek=dp[j];
            while(!q.empty() && q.back()<kek)q.pop_back();
            q.push_back(kek);
        }
        dp1[1]=b[i]-abs(a[i]-1)+q.front();
        for(int j=2;j<=n;j++)
        {
            l=max(1ll,j-time*d);
            r=min(n,j+time*d);
            for(int i1=ll;i1<l;i1++)
            {
                int kek=dp[i1];
                if(!q.empty() && q.front()==kek)q.pop_front();
            }
            for(int i1=rr+1;i1<=r;i1++)
            {
                int kek=dp[i1];
                while(!q.empty() && q.back()<kek)q.pop_back();
                q.push_back(kek);
            }
            dp1[j]=b[i]-abs(a[i]-j)+q.front();
            ll=l;
            rr=r;
        }
        for(int j=1;j<=n;j++)dp[j]=dp1[j];

    }
    long long ans=-inf;
    for(int i=1;i<=n;i++)ans=max(ans,dp[i]);
    cout<<ans;
}
