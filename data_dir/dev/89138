#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-10

int n, a[50], b[50], c[50], d[50];
LL x;

bool check(int x) {
	if (a[0] < x) return 0;
	memset(c, 0, sizeof(c));
	memcpy(d, b, sizeof(d));
	int tmp = x;
	for (int i = 0; i < 45; i++) {
		c[i+1] += min(a[i], tmp);
		d[i] += max(0, a[i]-tmp);
		tmp = min(tmp, a[i]);
	}
	for (int i = 1; i < 45; i++)
		c[i] -= c[i+1];
	tmp = 0;
	for (int i = 45; i >= 0; i--) {
		tmp += c[i] - d[i];
		if (tmp < 0) return 0;
	}
	return 1;
}

int main() {
	memset(a, 0, sizeof(a));
	memset(b, 0, sizeof(b));
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%I64d", &x);
		LL tmp = 1, cnt = 0;
		while (tmp < x) {
			tmp <<= 1;
			cnt++;
		}
		if (tmp == x) a[cnt]++;
		else b[cnt]++;
	}
	bool flag = 0;
	for (int i = 1; i <= n; i++)
		if (check(i)) {
			printf("%d ", i);
			flag = 1;
		}
	if (!flag) printf("-1");
	printf("\n");
	return 0;
}
