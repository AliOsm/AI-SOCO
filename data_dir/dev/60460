#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
#define pb push_back
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(),(x).end()
#define FOR(it,c) for (__typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
typedef long long ll;
const int oo = (int) 1e9;
const int mod = (int) 1e9 + 7;
const double PI = acos(-1.0);

const int MAX = 3008;
int n;
string s;
int dp[MAX];

bool isVowel(char c)
{
    return (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u');
}

int solve(int i)
{
    if(i>=n) return 0;
    int& r = dp[i];
    if(r != -1) return r;
    r = oo;
    set<char> con;
    int len = 0;
    for(int j=i;j<n;j++){
        if(isVowel(s[j])){
            con.clear();
            len = 0;
        }else{
            con.insert(s[j]);
            ++len;
        }
        if(len >= 3 && sz(con) > 1)
            break;
        r = min(r, 1 + solve(j+1));
    }
    return r;
}

void trace(int i)
{
    if(i >= n) return;
    set<char> con;
    int len = 0;
    for(int j = i ; j < n ; j++){
        if(isVowel(s[j])){
            con.clear();
            len = 0;
        }else{
            con.insert(s[j]);
            ++len;
        }
        if(len >= 3 && sz(con) > 1)
            break;
        if(solve(i) == 1 + solve(j+1)){
            cout << s.substr(i,j-i+1) << " ";
            trace(j+1);
            return;
        }
    }
}

int main()
{
    cin >> s;
    n = sz(s);
    for(int i=0;i<n;i++) dp[i] = -1;
    solve(0);
    trace(0);
    return 0;
}
