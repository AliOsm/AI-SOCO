#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <math.h>
#include <set>
#include <map>
#include <queue>

using namespace std;

#define task "a"

typedef long long ll;

const int INF = (int)1e9;
const ll LINF = (ll)1e18;

#define mp make_pair
#define fi first
#define se second
#define endl '\n'

ll gcd(ll a, ll b) {
	return b == 0 ? a : gcd(b, a % b);
}

bool check(ll a) {
	while (a % 2 == 0) {
		a /= 2;
	}
	while (a % 3 == 0) {
		a /= 3;
	}
	return a == 1;
}
int cnt1[4];
int cnt2[4];

bool upd(ll a, int * cnt) {
	while (a % 2 == 0) {
		a /= 2;
		cnt[2]++;
	}
	while (a % 3 == 0) {
		a /= 3;
		cnt[3]++;
	}
}

int main() {
	//freopen(task".in", "r", stdin); freopen(task".out", "w", stdout);
	//ios_base::sync_with_stdio(0);
	ll a1, b1;
	ll a2, b2;
	cin >> a1 >> b1;
	cin >> a2 >> b2;
	ll p1 = a1 * b1;
	ll p2 = a2 * b2;
	ll nod = gcd(p1, p2);
	//cout << nod <<  " " << p1 << " " << p2 << endl;
	p1 /= nod;
	p2 /= nod;
	//cout << nod <<  " " << p1 << " " << p2 << endl;
	if (!check(p1) || !check(p2)) {
		cout << "-1" << endl;
		return 0;
	}
	upd(p1, cnt1);
	upd(p2, cnt2);
	//cout << cnt1[2] << " " << cnt1[3] << endl;
	//cout << cnt2[3] << " " << cnt2[3] << endl;
	int res = 0;
	while (cnt1[3] > cnt2[3]) {
		if (a1 % 3 == 0) {
			a1 /= 3;
			a1 *= 2;
		} else {
			b1 /= 3;
			b1 *= 2;
		}
		res++;
		cnt1[3]--;
		cnt1[2]++;
	}
	
	while (cnt1[3] < cnt2[3]) {
		if (a2 % 3 == 0) {
			a2 /= 3;
			a2 *= 2;
		} else {
			b2 /= 3;
			b2 *= 2;
		}
		res++;
		cnt2[3]--;
		cnt2[2]++;
	}
	while (cnt1[2] > cnt2[2]) {
		if (a1 % 2 == 0) {
			a1 /= 2;
		} else {
			b1 /= 2;
		}
		res++;
		cnt1[2]--;
	}
	
	while (cnt1[2] < cnt2[2]) {
		if (a2 % 2 == 0) {
			a2 /= 2;
		} else {
			b2 /= 2;
		}
		res++;
		cnt2[2]--;
	}
	cout << res << endl;
	cout << a1 << " " << b1 << endl;
	cout << a2 << " " << b2 << endl;
	return 0;
}

