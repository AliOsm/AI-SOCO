#include <cstdio>
#include <vector>
#include <cstring>
#include <map>
#include <set>
#include <iostream>
#include <algorithm>
using namespace std;

struct state
{
	int a[3];
	state(int b=0,int c=0,int d=0)
	{
		a[0]=b;
		a[1]=c;
		a[2]=d;
		sort(a,a+3);
	}
};

int arr[100000];
int main()
{
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%d",&arr[i]);
	sort(arr,arr+n);
	vector<pair<int,int> > v;
	v.push_back(make_pair(1,arr[0]));
	for(int i=1;i<n;i++)
	{
		if(arr[i]!=arr[i-1])
		{
			v.push_back(make_pair(1,arr[i]));
		}
		else
			v.back().first++;
	}
	set<pair<int,int> > m(v.begin(),v.end());
	if(m.size()<3)
	{
		printf("0\n");
		return 0;
	}
	pair<int,int> i,j,k;
	set<pair<int,int> >::iterator si,sj,sk;
	n=v.size();
	vector<state> res;
	while(m.size()>2)
	{
		si=m.end();
		si--;
		i=*si;
		sj=si;
		sj--;
		j=*sj;
		sk=sj;
		sk--;
		k=*sk;
		m.erase(i);
		m.erase(j);
		m.erase(k);
		res.push_back(state(i.second,j.second,k.second));
		i.first--;
		j.first--;
		k.first--;
		if(i.first)
			m.insert(i);
		if(j.first)
			m.insert(j);
		if(k.first)
			m.insert(k);
	}
	printf("%u\n",res.size());
	for(int i=0;i<res.size();i++)
	{
		printf("%d %d %d\n",res[i].a[2],res[i].a[1],res[i].a[0]);
	}
	return 0;
}
