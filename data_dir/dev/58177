//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)2e5 + 7;
const ll inf = (ll)1e18;
const int infint = (int)1e9;
ll a[MAXN], b[MAXN], part[MAXN];
ll sum(ll l, ll r)
{
	ll ans = part[r];
	if(l != 0)
		ans -= part[l - 1];
	return ans;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	ll cur = 0;
	ll n, q;
	cin >> n >> q;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < q; i++)
		cin >> b[i];
	part[0] = a[0];
	for (int i = 1; i < n; i++)
		part[i] = part[i - 1] + a[i];
	ll tmp = a[0];
	for (int i = 0; i < q; i++)
	{
		if(sum(cur, n - 1) + tmp - a[cur] <= b[i])
			cur = 0, tmp = a[0];
		else
		{
			ll l = cur - 1, r = n;
			if(tmp > b[i])
			{
				tmp -= b[i];
				cout << n - cur << endl;
				continue;
			}
			while(r - l > 1)
			{
				ll mid = (l + r) >> 1;
				if(sum(cur, mid) + tmp - a[cur] <= b[i])
					l = mid;
				else
					r = mid;
			}
			tmp = a[l + 1] - (b[i] - (sum(cur, l) + tmp - a[cur]));
			cur = l + 1;
		}
		cout << n - cur << "\n";
	}
}
