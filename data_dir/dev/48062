#include<bits/stdc++.h>
using namespace std;
const int mod = 1e9 + 7;
long long fact[1005], digits[1005];
string s;
int k;
int pw(int x, int y){
    if (y == 0)
        return 1;
    long long temp = pw(x, y / 2);
    if (y & 1)
        return temp * temp % mod * x % mod;
    return temp * temp % mod;
}
int com(int n, int r){
    return fact[n] * pw(fact[n - r] * fact[r] % mod, mod - 2) % mod;
}
bool ch(int n, int h){
    if (n == 1)
        return h == k ? 1 : 0;
    int b = 0;
    while(n){
        if (n % 2)
            b++;
        n /= 2;
    }
    return ch(b, h + 1);
}
int main (){
    fact[0] = 1;
    for(int i = 1 ; i <= 1000 ; i++)
        fact[i] = fact[i - 1] * i, fact[i] %= mod;
    cin >> s >> k;
    if (k == 0)
        return cout << 1,0;
    k--;
    int n = s.size();
    int z = 0;
    for(int i = 0 ; i < n ; i++){
        if (s[i] == '1'){
            int ba2e = n - 1 - i;
            for(int j = 0 ; j <= ba2e ; j++){
                digits[j + z] += com(ba2e, j);
                if (j == 1 && z == 0)
                    digits[j + z] --;
                digits[j + z] %= mod;
            }
            z++;
        }
    }
    long long ans = 0;
    for(int i = 1 ; i <= 1000 ; i++){
        ans += ch(i, 0) * digits[i] % mod;
        ans %= mod;
    }
    int cnt = 0 ;
    for(int i = 0 ; i < n ; i++){
        cnt += s[i] - '0';
    }
    if (ch(cnt, 0) && s !="1")
        ans++;
    cout << ans % mod;
    return 0;
}