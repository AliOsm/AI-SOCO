#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define INF 1000000021
#define MOD 1000000007
#define pb push_back
#define sqr(a) (a)*(a)
#define M(a, b) make_pair(a,b)
#define F first
#define S second
#define all(x) (x.begin(), x.end())
#define deb(x) cerr << #x << " = " << x << '\n'
#define N 222222

using namespace std;
using namespace __gnu_pbds;

typedef long double ld;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;

const ld pi = 2 * acos(0.0);
template<class T> bool umin(T& a, T b){if(a>b){a=b;return 1;}return 0;}
template<class T> bool umax(T& a, T b){if(a<b){a=b;return 1;}return 0;}
template<class T, class TT> bool pal(T a, TT n){int k=0;for(int i=0;i<=n/2;i++){if(a[i]!=a[n-i-1]){k=1;break;}}return k?0:1;}

//int month[] = {0,31,28,31,30,31,30,31,31,30,31,30,31};

string a[222];
map<string, int> pp, ppp;
map<string, pii> mp;
int main()
{
	int n;
	cin >> n;
	vector<string> v;
	for(int i = 1; i <= n+n-2; i ++)
	{
		cin >> a[i];
		if(a[i].size() == n - 1)
		{
			v.pb(a[i]);
		}
		pp[a[i]] ++;
		ppp[a[i]] ++;
	}
	
	//case 1
	string ans = "";
	string l = v[0][0] + v[1];
	int flag= 0;
	for(int i = 0; i < n - 1; i ++)
	{
		string pr = l.substr(0, i + 1), su = l.substr(i+1);
		if(pp[pr] > 0)
			pp[pr] --,
			mp[pr].F++;
		else
		{
			flag = 1;
			break;
		}
		if(pp[su] > 0)
			pp[su] --,
			mp[pr].S++;
		else
		{
			flag = 1;
			break;
		}
	}
	if(!flag)
	{
		for(int i = 1; i <= n+n-2; i ++)
		{
			if(mp[a[i]].F > 0)
				cout << 'P',
				mp[a[i]].F --;
			else
				cout << 'S',
				mp[a[i]].S --;
		}
		return 0 ;
	}
	mp.clear();
	l = v[1][0] + v[0];
	flag = 0;
	for(int i = 0; i < n - 1; i ++)
	{
		string pr = l.substr(0, i + 1), su = l.substr(i+1);
		if(ppp[pr] > 0)
			ppp[pr] --,
			mp[pr].F++;
		else
		{
			flag = 1;
			break;
		}
		if(ppp[su] > 0)
			ppp[su] --,
			mp[pr].S++;
		else
		{
			flag = 1;
			break;
		}
	}
	for(int i = 1; i <= n+n-2; i ++)
		{
			if(mp[a[i]].F > 0)
				cout << 'P',
				mp[a[i]].F --;
			else
				cout << 'S',
				mp[a[i]].S --;
		}	


	





	getchar();
	getchar();
	return 0;
	//ios::sync_with_stdio(false);
	//cin.tie(0);
}