//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

void solve() {
    int n;
    long long k;
    cin >> n >> k;
    string s;
    cin >> s;
    vector<int> zeros;
    for (int i = 0; i < n; ++i)
    if (s[i] == '0')
        zeros.push_back(i);

    int iz = 0;
    for (int i = 0; iz < zeros.size() && k > 0; ++iz, ++i) {
        int shift = min<long long>(k, zeros[iz] - i);
        k -= shift;
        zeros[iz] -= shift;
    }
    string ans;
    auto itz = zeros.begin();
    for (int i = 0; i < n; ++i) {
        if (itz != zeros.end() && *itz == i) {
            ans.push_back('0');
            ++itz;
        } else {
            ans.push_back('1');
        }
    }
    cout << ans << '\n';
}

int main()
{
//    freopen("in.txt","r", stdin);
//    freopen("out.txt", "w", stdout);
//    cout << fixed << setprecision(15);
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);

    int q;
    cin >> q;
    while (q--)
        solve();
}

