#include <bits/stdc++.h>
#define fst first
#define snd second
#define fore(i,a,b) for(int i=a,ThxDem=b;i<ThxDem;++i)
#define pb push_back
#define ALL(s) s.begin(),s.end()
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define SZ(n) ((int)(n).size())
using namespace std;
typedef long long ll;
typedef pair<int,int> ii;

int n, a[300000], dp[10][300000]; //quiero poner el dedo i en la posicion j

int can(int f, int pos){
  int &r = dp[f][pos];
  if(r >= 0) return r;
  if(pos == n-1) return r = 1;
  r = 0;
  if(a[pos] < a[pos+1]){
    fore(i,f+1,5){
      r |= can(i,pos+1);
    }
  }
  else if(a[pos] > a[pos+1]){
    for(int i = f-1; i >= 0; i--){
      r |= can(i,pos+1);
    }
  }
  else{
    fore(i,0,5){
      r |= (f != i && can(i,pos+1));
    }
  }
  return r;
}

vector <int> ans;

void build(int f, int pos){
  ans.pb(f);
  if(pos == n-1) return;
  if(a[pos] < a[pos+1]){
    fore(i,f+1,5){
      if(can(i,pos+1)){
        build(i,pos+1);
        return;
      }
    }
  }
  else if(a[pos] > a[pos+1]){
    for(int i = f-1; i >= 0; i--){
      if(can(i,pos+1)){
        build(i,pos+1);
        return;
      }
    }
  }
  else{
    fore(i,0,5){
      if(f != i && can(i,pos+1)){
        build(i,pos+1);
        return;
      }
    }
  }
}

int main(){FIN;
  memset(dp,-1,sizeof(dp));
  cin >> n;
  fore(i,0,n) cin >> a[i];
  int st = -1;
  fore(i,0,5){
    if(can(i,0)){
      st = i;
      break;
    }
  }
  if(st < 0){
    cout << -1 << endl;
    return 0;
  }
  build(st,0);
  for(auto x : ans) cout <<x+1 << " "; cout << endl;
}
