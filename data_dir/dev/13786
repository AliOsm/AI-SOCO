#include <bits/stdc++.h>
#define ll long long

using namespace std;

ll n, a[300000], c[300000][2], ans = 0, cntr = 0, cntb = 0;
vector <vector <ll> > e;

void DFS(ll x, ll p)
{
    for (int i = 0; i < e[x].size(); i++)
        if (e[x][i] != p)
        {
            DFS(e[x][i], x);
            c[x][0] += c[e[x][i]][0];
            c[x][1] += c[e[x][i]][1];
        }

    if (a[x] == 1)
        c[x][0]++;
    else if (a[x] == 2)
        c[x][1]++;

    for (int i = 0; i < e[x].size(); i++)
        if (e[x][i] != p)
        {
            ll lred = c[e[x][i]][0], lblue = c[e[x][i]][1], rred = cntr - lred, rblue = cntb - lblue;

            if ((!lred || !lblue) && (!rred || !rblue))
                ans++;
        }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    e.resize(n);
    ll b, d;

    for (int i = 0; i < n; i++)
    {
        cin >> a[i];

        if (a[i] == 1)
            cntr++;
        else if (a[i] == 2)
            cntb++;
    }

    for (int i = 0; i < n - 1; i++)
    {
        cin >> b >> d;
        b--;
        d--;
        e[b].push_back(d);
        e[d].push_back(b);
    }

    DFS(0, -1);
    cout << ans;
}
