// In the name of god
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <ctime>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <bitset>
#define sqr(a) ((a)*(a))
#define all(a) (a).begin(), (a).end()
using namespace std;
 
template <typename T>
T next_int() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if(ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return p * x;
}
 
string next_token() {
    char ch;
    string ans = "";
    do { ch = getchar(); } while(ch <= ' ');
    while(ch > ' ') {
        ans += ch;
        ch = getchar();
    }
    return ans;
}
 
const long long INF = (long long)1e18;
const int INFINT = (int)1e9 + 227 + 1;
const int MAXN = (int)1e6 + 227 + 1;    
const int MOD = (int)1e9 + 7;
const long double EPS = 1e-9;

long long bin_pow(long long a, long long b) {
    if(!b) return 1;
    long long ans = bin_pow(a, b / 2);
    ans = ans * ans % MOD;
    if(b % 2) ans = ans * a % MOD;
    return ans;
}

int n;
int a[MAXN];

pair<bool, pair<int, int> > f(int c) {
    for(int i = 0; i <= 2e4; i++) {
        int l = a[0] - c;
        int r = a[0] + c;
        bool ok = 1;
        for(int j = 1; j < n; j++) {
            l = max(a[j] - c, l + i);
            r = min(a[j] + c, r + i);

            ok &= (l <= r);
        }

        if(ok)
            return make_pair(1, make_pair(l - i * (n - 1), i));
    }

    return make_pair(0, make_pair(-1, -1));
}

int main() {
    // freopen(".in", "r", stdin);

    cin >> n;
    for(int i = 0; i < n; i++)
        a[i] = next_int<int>();

    sort(a, a + n);

    int l = 0;
    int r = (int)1e4;
    while(r - l > 1) {
        int c = (l + r) / 2;

        if(f(c).first)
            r = c;
        else
            l = c;
    }

    if(f(l).first) {
        cout << l << "\n";
        cout << f(l).second.first << " " << f(l).second.second << "\n";
    } else {
        cout << r << "\n";
        cout << f(r).second.first << " " << f(r).second.second << "\n";
    }
}