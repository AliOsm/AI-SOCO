#include<bits/stdc++.h>
#define MOD 1000000007
#define vll vector<ll>
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define vpll vector<pll>
using namespace std;
#define INF 100000000007
typedef long long int ll;
ll n,c;
ll arr1[100010];
ll prefixsum[100010];
ll segtree[400010];

void build(ll idx,ll left,ll right)
{
    if(left==right)
    {
        segtree[idx]=arr1[left];
        return;
    }
    ll mid=(left+right)/2;
    build(2*idx,left,mid);
    build(2*idx+1,mid+1,right);
    segtree[idx]=min(segtree[2*idx],segtree[2*idx+1]);
}

ll query(ll idx,ll left,ll right,ll low,ll high)
{
    if(left>right || left>high || right<low)
    {
        return INF;
    }
    if(low<=left && right<=high)
    {
        return segtree[idx];
    }
    ll mid,store1,store2,result;
    mid=(left+right)/2;
    store1=query(2*idx,left,mid,low,high);
    store2=query(2*idx+1,mid+1,right,low,high);
    result=min(store1,store2);
    return result;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);    
    cin>>n>>c;
    for(ll i=1;i<=n;i++)
    {
        cin>>arr1[i];
    }
    prefixsum[0]=0;
    for(ll i=1;i<=n;i++)
    {
        prefixsum[i]=prefixsum[i-1]+arr1[i];
    }
    build(1,1,n);
    ll dp[n+1];
    ll store;
    for(ll i=0;i<c;i++)
    {
        dp[i]=prefixsum[i];
    }
    for(ll i=c;i<=n;i++)
    {
        dp[i]=dp[i-1]+arr1[i];
        store=query(1,1,n,i-c+1,i);
        store=store*-1;
        store+=(dp[i-c]);
        store+=(prefixsum[i]-prefixsum[i-c]);
        dp[i]=min(dp[i],store);
    }
    cout<<dp[n];
    return 0;
}