#include <bits/stdc++.h>

//#pragma GCC optimize("Ofast")
//1.0 * clock() / CLOCKS_PER_SEC

#define fi first
#define se second
#define ll long long
#define dl double long

using namespace std;

const int NN = 1e6 + 7;
const int N = 250 + 7;
const int M = 20;
const ll mod = 1e9 + 7;
const ll inf = 1e18 + 7;
const dl rf = 1e-14;

int n,m;
int h[N];
int p[N];
int b[N];
int msk[N];
ll ans;
int cnt[N][N];
int a[N][N];

bool foo( int x )
{
    return (__builtin_popcount(x) <= 1);
}

ll fal( int l , int r )
{
    int nn = r - l + 1;
    for( int i = l; i <= r; i++ ){
        b[i - l] = h[i];
    }
    ll cnt = 0;
    vector < int > d1(nn , 0);
    vector < int > d2(nn , 0);
    for( int i = 0 , l2 = 0 , r2 = -1; i < nn; i++ ){
        int k = ( i <= r2 ? min( d1[l2 + r2 - i] , r2 - i + 1 ) : 1 );
        while( i - k >= 0 && i + k < nn && b[i - k] == b[i + k] )k++;
        d1[i] = k;
        cnt += d1[i];
        if( i + k - 1 > r2 ){
            r2 = i + k - 1;
            l2 = i - k + 1;
        }
    }
    for( int i = 0 , l2 = 0 , r2 = -1; i < nn; i++ ){
        int k = ( i <= r2 ? min( d2[l2 + r2 - i + 1] , r2 - i + 1 ) : 0 );
        while( i - k - 1 >= 0 && i + k < nn && b[i - k - 1] == b[i + k] )k++;
        d2[i] = k--;
        cnt += d2[i];
        if( i + k > r2 ){
            r2 = i + k;
            l2 = i - k - 1;
        }
    }
    return cnt;
}

void solve1()
{
    cin >> n >> m;
    for( int i = 0; i < n; i++ ){
        for( int j = 0; j < m; j++ ){
            char c;
            cin >> c;
            a[i][j] = (c - 'a');
        }
    }
    p[0] = 1;
    for( int i = 1; i < N; i++ ){
        p[i] = p[i - 1] * 1ll * 131 % mod;
    }
    for( int i = 0; i < m; i++ ){
        for( int j = 0; j < n; j++ ){
            h[j] = 0;
            msk[j] = 0;
            for( int g = 0; g < 26; g++ ){
                cnt[j][g] = 0;
            }
        }
        for( int j = i; j < m; j++ ){
            for( int g = 0; g < n; g++ ){
                int x = a[g][j];
                if( cnt[g][x] ){
                    h[g] -= cnt[g][x] * 1ll * p[x] % mod;
                    if( h[g] < 0 )h[g] += mod;
                }
                cnt[g][x] += 1;
                h[g] += cnt[g][x] * 1ll * p[x] % mod;
                if( h[g] >= mod )h[g] -= mod;
                msk[g] ^= (1 << x);
            }
            int st = 0;
            while( st < n ){
                if( !foo(msk[st]) ){
                    st += 1;
                    continue;
                }
                int st1 = st;
                while( st1 < n && foo(msk[st1]) )st1 += 1;
                ll z = fal( st , st1 - 1 );
                ans += z;
                st = st1;
            }
        }
    }
    cout << ans;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0); srand(time(0));
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
