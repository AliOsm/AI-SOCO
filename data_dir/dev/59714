#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n;
const int MAXN = 100005;
int a[MAXN];
map<int, int> occ;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 0; i < n; i++)
	{
		cin >> a[i];
		occ[a[i]]++;
	}

	long long curr = 2, ans = 0;
	for(int i = 1; i <= 30; i++)
	{
		for(int j = 0; j < n; j++)
		{
			if(2 * a[j] == curr)
				ans += occ[a[j]] - 1;
			else
				ans += occ[curr - a[j]];
		}
		curr *= 2;
	}

	cout << ans / 2 << "\n";
	return 0;
}
