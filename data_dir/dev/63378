#include <bits/stdc++.h>
#define ll long long
#define pi pair<int, int>
#define F first
#define S second
#define pb push_back
#define PI acos(-1.0)
using namespace std;
int Mod = 1e9 + 7;
int Cnt, n, m, p, Lamp[1010];
ll Fact[1010], Ans = 1, Total;
vector<ll> Range;

ll FastPower(ll a, ll b){
    if(!b)  return 1;
    ll Res = FastPower(a, b>>1);    Res = (Res*Res)%Mod;
    if(b&1) Res = (Res*a)%Mod;
    return Res;
}

ll inv(ll x, ll y){
    return (x * FastPower(y%Mod, Mod - 2)%Mod)%Mod;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

    Fact[0] = 1;
    for (int i = 1; i < 1001; i++)
        Fact[i] = ( Fact[i-1]%Mod * i%Mod )%Mod;

    cin >> n >> m;
    for (int i = 0; i < m; i++){
        cin >> p;
        Lamp[p] = 1;
    }

    if (Lamp[1]) Range.pb(0);
    for (int i = 1; i <= n; i++)
        if (!Lamp[i]) Cnt++, Total++;
        else if (Cnt){
            Range.pb(Cnt);
            Cnt = 0;
        }
    if (Cnt) Range.pb(Cnt);
    if (Lamp[n]) Range.pb(0);

    ll tmp = 1;
    for (auto i : Range){
        tmp *= Fact[i];
        tmp %= Mod;
    }

    for (int i = 1; i < Range.size() - 1; i++){
        Ans *= FastPower(2LL, Range[i] - 1);
        Ans %= Mod;
    }

    Ans *= inv(Fact[Total], tmp);

    cout << Ans%Mod << '\n';
    return 0;
}
