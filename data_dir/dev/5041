#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<li, li>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int N = 200 * 1000 + 13;

int n;
pair<int, pt> a[N];
int m;
int b[N];


bool read(){
	if(scanf("%d", &n) != 1)
		return 0;
	forn(i, n)
		scanf("%d", &a[i].x);
	forn(i, n)
		scanf("%d", &a[i].y.x);
	forn(i, n)
		scanf("%d", &a[i].y.y);
	scanf("%d", &m);
	forn(i, m)
		scanf("%d", &b[i]);
	return 1;
}


void solve(){
	set<pt> cur[3];
	
	forn(i, n){
		cur[a[i].y.x - 1].insert(mp(a[i].x, i));
		cur[a[i].y.y - 1].insert(mp(a[i].x, i));
	}
	
	forn(i, m){
		if (!cur[b[i] - 1].empty()){
			pt cr = *cur[b[i] - 1].begin();
			printf("%d ", cr.x);
			int clr = (a[cr.y].y.x == b[i] ? a[cr.y].y.y : a[cr.y].y.x) - 1;
			cur[clr].erase(cr);
			cur[b[i] - 1].erase(cr);
		}
		else{
			printf("-1 ");
		}
	}
	printf("\n");
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}