#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ll long long
#define ld long double
#define vi   vector<int>
#define pii pair<int, int>
#define ull unsigned long long
#define sz(v)  ((int)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define MEM(dp,i) memset(dp ,i, sizeof (dp))
#define repit( cont , i  ) for( auto i : cont)
#define forr(c,x,n)   for(ll c=x;c<=(ll)n; ++c )
#define forrr(c,x,n)  for(ll c=x;c>=( ll )n ;--c )
#define db(x) cout << " LOOK " <<(#x) <<" = " <<  x << '\n'
#define ICPC ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define printarr(a , l , r ) forr ( i , l , r )cout << a[i] << " ";cout<<endl;
#define printarr2(a, n , m) forr ( i , 1 , n){forr ( j , 1, m )cout << a[i][j] << " ";cout<<endl;}

//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);

int h ;
void valid ( string t   , bool f )
{
	f &= ( t.size() == h );
    for( int i = 1;  i <(int)t.size() ; i++)
    {
        if ( abs( t[i] - t[i-1] ) != 1)
            f= 0 ;
    }

    if ( f )
    {
        cout << "YES\n";
        for ( auto i : t )
            cout << i << " ";

            exit(0);
    }
    return;
}
int main()
{
    ICPC;

    int a[4] = {0};
    for (int i = 0 ; i < 4 ; i++ )
    {
        cin >> a[i];
        h += a[i];
    }


    string s[3] ;

    for ( int i = 0 ; i < 3  ; i++ )
    {
        if ( i == 1)
            continue;
        int j = i+1;
        int k = min( a[i] , a[j] ) ;
        a[i] -= k ;
        a[j] -=k ;

        while ( k-- )
        {
            s[i] += char( '0' + i );
            s[i] += char( '0' + j ) ;
        }
        if ( !i && a[i] )
        {
            s[i] += '0';
            a[i]--;
        }
        if ( i == 2 && a[j] )
        {
            s[i] = '3' + s[i];
            a[j]--;
        }

    }
    int k = min( a[1] , a[2] ) ; a[1] -= k ;a[2] -=k ;
    while ( k-- )
    {
        s[1] += char( '2') ;
        s[1] += char( '1');

    }
    string tmp = s[1];
    reverse ( all(tmp));
    valid( s[0] + s[1] + s[2] , 1 );
    valid( '1' + s[0] + s[1] + s[2] , ( a[1] != 0 ));
    valid( s[0] + '1' + s[1] + s[2] , ( a[1] != 0 ));
    valid( s[0] + s[1] + s[2] + '2' , ( a[2] != 0 ));
    valid( s[0] + s[1] + '2' + s[2] , ( a[2] != 0 ));
    cout << "NO\n";
}
