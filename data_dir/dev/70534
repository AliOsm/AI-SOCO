#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define MEMS(a,b) memset((a),(b),sizeof(a))
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define LL long long
#define U unsigned

int ans[1000010];

int main()
{
#ifdef Fcdkbear
        freopen("in.txt", "r", stdin);
        //freopen("out.txt", "w", stdout);
        double beg = clock();
#endif

        int n,q;
        scanf("%d%d",&n,&q);
        int p1 = 0;
        int p2 = 1;
        FOR(i,0,q) {
        	int t;
        	scanf("%d",&t);
        	if (t == 2) {
        		p1^=1;
        		p2^=1;
        	} else {
        		int x;
        		scanf("%d",&x);
        		p1 += x;
        		if (p1>=n)
        			p1-=n;
        		if (p1<0)
        			p1 += n;
        		p2 += x;
        		if (p2>=n)
					p2-=n;
				if (p2<0)
					p2 += n;
        	}
        }
        int d2 = p2 - 1;
        if (d2<0)
        	d2 += n;
        FOR(i,0,n) {
        	if (i&1) {
        		int who = (i+d2);
        		if (who>=n) {
        			who -= n;
        		}
        		ans[who] = i + 1;
        	} else {
        		int who = (i+p1);
				if (who>=n) {
					who -= n;
				}
				ans[who] = i + 1;
        	}
        }
        FOR(i,0,n) {
        	if (i)
        		printf(" ");
        	printf("%d",ans[i]);
        }
        printf("\n");

#ifdef Fcdkbear
        double end = clock();
        fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
        return 0;
}
