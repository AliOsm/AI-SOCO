#include <bits/stdc++.h>
#define LL long long
#define VI vector<int>
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define INF 0x3f3f3f3f
#define ULL unsigned long long
#define onbits __builtin_popcountll
using namespace std;
bool p[2000010];
void sieve(){
	int sq = (int)sqrt(2000000);
	memset(p, true, sizeof(p));
	p[0] = p[1] = false;
	for(int i = 2; i <= sq; i++){
		if(!p[i]) continue;
		for(int j = i + i; j <= 2000000; j += i) p[j] = false;
	}
}
int A[1010], n, B[1010];
int main(){
	sieve();
	scanf("%d", &n);
	for(int i = 0; i < n; i++) scanf("%d", &A[i]);
	int mx = 0;
	for(int i = 0; i < n; i++){
		if(A[i] & 1){
			if(p[A[i]]){
				if(mx == 0){
					mx = 1;
					B[0] = A[i];
				}
			}
			for(int j = 0; j < n; j++){
				if(i == j) continue;
				if(!(A[j] & 1) && p[A[i] + A[j]]){
					if(mx < 2){
						mx = 2;
						B[0] = A[i];
						B[1] = A[j];
					}
				}
			}
		}else{
			if(A[i] == 2){
				if(mx == 0){
					mx = 1;
					B[0] = 2;
				}
			}
			for(int j = 0; j < n; j++){
				if(i == j) continue;
				if((A[j] & 1) && p[A[i] + A[j]]){
					if(mx < 2){
						mx = 2;
						B[0] = A[i];
						B[1] = A[j];
					}
				}
			}
		}
	}
	int ones = 0;
	for(int i = 0; i < n; i++) ones += (A[i] == 1);
	if(mx < ones){
		mx = ones;
		for(int i = 0; i < ones; i++) B[i] = 1;
	}
	for(int i = 0; i < n && ones; i++){
		if(!(A[i] & 1) && p[A[i] +1]){
			if(mx < ones + 1){
				mx = ones + 1;
				for(int j = 0; j < ones; j++) B[j] = 1;
				B[ones] = A[i];
			}
		}
	}
	if(mx == 0){
		printf("1\n%d\n", A[0]);
	}else{
		printf("%d\n", mx);
		for(int i = 0; i < mx; i++) printf("%d ", B[i]); printf("\n");
	}
	return 0;
}