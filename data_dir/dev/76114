#include <bits/stdc++.h>
using namespace std;
#define int long long
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    int n,m;
    cin>>n;
    vector<int> v(n);
    map<int,int> idx;
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
        idx[v[i]] = i;
    }
    sort(v.begin(), v.end());
    set<pair<int,int> > s;
    multiset<int> ms;
    ms.insert(n);
    s.insert({0,n-1});
    int len = 1, ans = v[n-1]+1;
    for(int i=n-1;i>0;i--)
    {
        int &curr = idx[v[i]];
        auto it = s.upper_bound(make_pair(curr,n));
        it--;
        // cerr<<i<<" "<<it->first<<" "<<it->second<<endl;
        if(it->first == it->second)
        {
            ms.erase(ms.begin()); //1
            s.erase(it);
        }
        else
        {
            int st =it->first;
            int en = it->second;
            // if(i==n-2)
            // {
            //     cerr<<"Here"<<endl;
            //     cerr<<st<<" "<<en<<endl;
            // }
            s.erase(it);
            ms.erase(ms.find(en-st+1));
            if(st<curr)
            {
                // if(i==n-2)
                // {
                //     cerr<<st<<" "<<curr-1<<"lel\n";
                //     cerr<<curr+1<<" "<<en<<"lel\n";
                // }
                s.insert(make_pair(st,curr-1));
                ms.insert(curr-st);
            }
            if(en>curr)
            {
                s.insert(make_pair(curr+1,en));
                ms.insert(en-curr);
            }
        }
        if((*ms.begin())==(*(--ms.end()))&&len<=s.size())
        {
            // cerr<<len<<" "<<s.size()<<" "<<v[i]<<endl;
            // for(auto &i:s) cerr<<i.first<<" "<<i.second<<endl;
            len = s.size();
            ans = v[i-1]+1;
        }
    }
    cout<<ans;
    // cerr<<len;
    return 0;
}