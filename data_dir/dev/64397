#include <bits/stdc++.h>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = 1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = 1e5+7;

// -------------------------------------------------- 变量 -------------------------------------------------- //

int n;
vi e[N], vec;
bool vis[N];
int cnt;

// -------------------------------------------------- 函数 -------------------------------------------------- //

void Init() {
    vec.clear();
    memset(vis, 0, sizeof(vis));
    rep(i, 0, n+1) e[i].clear();
    rep(i, 1, n+1) {
        int p; scanf("%d", &p);
        e[i].pb(p);
    }
}

void dfs(int u) {
    vis[u] = 1; cnt++;
    for (auto v : e[u]) {
        if (!vis[v]) dfs(v);
    }
}

ll work(int x) {
    return (ll)x * (x - 1) + x;
}

int Solve() {
    rep(i, 1, n+1) if (!vis[i]) {
        cnt = 0;
        dfs(i);
        vec.pb(cnt);
    }
    sort(all(vec));
    if (sz(vec) == 1) return printf("%lld\n", work(n));
    ll ans = 0;
    ans += work(vec[sz(vec)-1] + vec[sz(vec)-2]);
    per(i, 0, sz(vec)-2) {
        ans += work(vec[i]);
    }
    return printf("%lld\n", ans);
}

// -------------------------------------------------- main -------------------------------------------------- //

int main ()
{
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d", &n)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}