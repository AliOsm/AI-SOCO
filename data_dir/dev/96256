#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;
#define Max 1000001
#define inf INT_MAX
#define llinf LONG_LONG_MAX
#define f(i,n) for(i=0;i<n;i++)
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define pb push_back
#define ff first
#define ss second
#define all(v) v.begin(),v.end()
#define bp(n) __builtin_popcount(n)
#define endl '\n'
const ll N=1e5+5,mod=31,bit=60;
bool comp(pll &a,pll &b)
{
	if(a.ss!=b.ss)
	{
		return a.ss<b.ss;
	}
	return a.ff<b.ff;
}
signed main()
{
    fast;
    ll pro=1,temp,t,i,j,l,r,n,m,x,y,z,mid,k,rem,carry=0,ind,ans=0,mx=-llinf,mn=llinf,cnt=0,curr=0,prev,next,sum=0,i1=-1,i2=-1;
	bool flag=0;
	cin>>n>>m;
	ll a[n+2];
	for(i=1;i<=n;i++)
	{
		cin>>a[i];
	}
	sort(a+1,a+n+1);
	pll v[2*n+1];
	a[0]=-2e9;
	a[n+1]=+2e9;
	for(i=1;i<=n;i++)
	{
		x=(i<<1)-1;
		v[x].ff=a[i]<<1;
		v[x].ss=(a[i]-a[i-1]-1)>>1;
		x++;
		v[x].ff=(a[i]<<1)+1;
		v[x].ss=(a[i+1]-a[i])>>1;
	}
	n<<=1;
	sort(v+1,v+n+1,comp);
	curr=1;
	vector<ll> made;
	x=1;
	while(made.size()<m)
	{
		while(v[x].ss==0)
		{
			x++;
		}
		ind=x;
		while(ind<=n and made.size()<m)
		{
			ans+=curr;
			temp=v[ind].ff>>1;
			if(v[ind].ff & 1)
			{
				temp+=curr;
			}
			else
			{
				temp-=curr;
			}
			made.pb(temp);
			v[ind].ss--;
			ind++;
		}
		curr++;
	}
	cout<<ans<<endl;
	for(auto it:made)
	{
		cout<<it<<' ';
	}
	cout<<endl;
	return 0;
}