#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef unsigned long long int ulli;
typedef pair<int,int> pii;
typedef vector<int> vec;

#define pb push_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define N 5005

vector<int>V[N],topo;
int n,m,s;
bool vis[N];

int tot=0;

void dfs(int x){
    
    if(vis[x])return;
    vis[x] = true;
    
    for(auto v : V[x]) dfs(v);
    topo.pb(x);
}

void dfs1(int x){
    
    if(!vis[x])return;
    vis[x] = false;
    
    for(auto v : V[x]) dfs1(v);
}

int main()
{
    
    scn3(n,m,s);
    
    if(m==0){
        cout<<(n-1);
        return 0;
    }
    
    for(int i=0,x,y; i<m; i++){
        scn2(x,y);
        V[x].pb(y);
    }
    
    int ans=0;
   for(int i=1; i<=n; i++){
       dfs(i);
   }
   dfs1(s);
   while(topo.size()){
       int last = topo.back();
       topo.pop_back();
       if(vis[last]){
           ans++;
           dfs1(last);
       }
   }
   
   cout<<ans;
   

    return 0;
}
