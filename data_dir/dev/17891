#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long llu;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
const ll MOD = 1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq; 

int n, m;
int cnt[5000];
int mav[5000];

int main() {
	scanf("%d %d", &n, &m);

	int a, b;
	fill(mav, mav + n, 50000);
	for (int i = 0; i < m; i++) {
		scanf("%d %d", &a, &b);
		a--; b--;
		
		cnt[a]++;
		mav[a] = min(mav[a], (b + n - a) % n);
	}

	int ans;
	for (int i = 0; i < n; i++) {
		ans = 0;
		int tim = 0;
		for (int j = i; j < n; j++) { // 종료 시점을 정확히 구할 수 있다.
			if (cnt[j] == 0) {
				tim++;
				continue;
			}
			ans = max(ans, (cnt[j] - 1) * n + mav[j] + tim);
			tim++;
		}

		for (int j = 0; j < i; j++) { // 종료 시점을 정확히 구할 수 있다.
			if (cnt[j] == 0) {
				tim++;
				continue;
			}
			ans = max(ans, (cnt[j] - 1) * n + mav[j] + tim);
			tim++;
		}

		printf("%d ", ans);
	}

}