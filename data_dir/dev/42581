#include<bits/stdc++.h>
using namespace std;
#define M            1000000007
#define int          long long 
#define D            double
#define S            second
#define F            first
#define PB           push_back
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define LB           lower_bound
#define UB           upper_bound
#define  s(c)        (int)(c.size());
typedef pair<int,int> pii;
typedef pair<int,pii> pipi;
typedef vector<vector<int> > vvi;
typedef map<int,int>  mp;
typedef priority_queue<int, vector<int>, greater<int> > pq;
const int N=3e5+1;
int r[N];
int primes[N];
int a[N];
void P(){
for(int i=2;i<=N;i++){
		if(!primes[i])//in which prime[i]==0 that number is prime;
		for(int j=2*i;j<=N;j+=i)primes[j]=i;
	}
}
int root(int x){
	return r[x]==x?x:root(r[x]);
}
void union1(int x,int y){
	x=root(x),y=root(y);
	r[x]=r[y];
}
void intialize(){
	for(int i=0;i<=N;i++);
}
void  solve(){
	int n;cin>>n;
	map<pii,int>m;
	int b[n],count=0;for(int i=0;i<n;i++)cin>>a[i];
	for(int i=0;i<n;i++)cin>>b[i];
	for(int i=0;i<n;i++){
		int x=a[i],y=b[i];
		if(x<0)x=-x;
		if(y<0)y=-y;
		if(x&&y){
			int gcd=__gcd(x,y);
			if((a[i]<0&&b[i]<0)||(a[i]>0&&b[i]>0))m[{x/gcd,y/gcd}]++;
			else{
				m[{x/gcd,-y/gcd}]++;
			}
		}
		else if(y==0&&x!=0)m[{1e10,1e10}]++;
		else if((x==0)&&(y==0))count++;
	}
	int ans=0;
	for(map<pii,int>::iterator it=m.begin();it!=m.end();it++)
	ans=max(ans,(*it).second);
	cout<<ans+count;
	
}
signed main(){   
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	int t=1;
	//cin>>t;
	while(t--){
		solve();
	}
}