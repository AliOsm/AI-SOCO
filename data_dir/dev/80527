/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <bits/stdc++.h>

using namespace std;

class K1079 {
public:
    void solve(istream& in, ostream& out) {
        int n, k;
        in >> n >> k;
        vector<int> a(n);
        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }
        int sum = accumulate(begin(a), end(a), 0);
        if (sum % k) {
            out << "No\n";
            return;
        }
        int dur = sum / k;
        vector<int> res;
        for (int cur = 0, i = 0, from = 0; i < n; ++i) {
            cur += a[i];
            if (cur == dur) {
                res.push_back(i + 1 - from);
                cur = 0;
                from = i + 1;
            } else if (cur > dur) {
                out << "No\n";
                return;
            }
        }
        out << "Yes\n";
        for (int d : res) {
            out << d << " ";
        }
        out << "\n";
    }
};

int main() {
	std::ios::sync_with_stdio(false); cin.tie(nullptr);
	K1079 solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
