#include<bits/stdc++.h>
#define ll long long
#define int long long
#define ld long double
#define pb push_back
#define F first
#define S second
using namespace std;

const int MAXN = 2222 , MOD = 1e9 + 7 ;   ;

int fact [ MAXN * 100 ] , rfact [ MAXN * 100] ;

int dp [22][MAXN] , dp2 [ MAXN ] ;

int CC [ MAXN ] [ MAXN ] ;


int tv(int x , int y)
{
    if(!y)
        return 1 ;
    int ans = tv(x,y/2);
    ans *= ans ;
    ans %= MOD ;
    if(y&1)
        ans = (ans * x) % MOD ;
    return ans ;
}

inline int C(int n , int k )
{
    int ans = (fact[n] * rfact[k]) % MOD ;
    return ans * rfact[n-k] % MOD ;
}

vector < pair < int , int > > v ;

int32_t main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    rfact[0] = fact[0] = 1 ;
    for(int i = 1 ; i < MAXN * 100 ; i ++ )
    {
        fact[i] = (fact[i-1] * i) % MOD ;
        rfact[i] = tv(fact[i],MOD-2) ;
    }
    int x , y , n , m , k , s ;
    cin >> n >> m >> k >> s ;
    for(int i = 0 ; i < k ; i ++ )
    {
        cin >> x >> y ;
        if((x==1&&y==1)||(x==n&&y==m))
            s = (s+1) / 2 ;
        else
            v.pb({x,y});
    }
    v.pb({1,1});
    v.pb({n,m});
    sort(v.begin(),v.end());
    k = (int)v.size() ;
    for(int i = 0 ; i < k ; i ++ )
        dp2[i] = C(v[i].F+v[i].S-2,v[i].F-1) ;


    for(int i = 0 ; i < 22 ; i ++ )
    {
        for(int j = 0 ; j < k ; j ++ )
        {
            dp[i][j] = dp2[j] ;
            int l = 0 ;
            for(int w = 1 ; w < j ; w ++ )
            {
                if(v[w].S>v[j].S)
                    continue ;
                dp[i][j] -= (dp[i][w]*C(v[j].F+v[j].S-v[w].F-v[w].S,v[j].F-v[w].F))% MOD ;
                if(dp[i][j]<0)
                    dp[i][j] += MOD ;
            }
            //cout << j << ' ' << dp[i][j]<<endl;
            dp2[j] -= dp[i][j] ;
            if(dp2[j]<0)
                dp2[j] += MOD ;

        }
    }
    int ans =  0 , kk = 0 ;
    for(int i = 0 ; i < 22 ; i ++ )
    {
        ans += s * dp[i][k-1] , ans %= MOD , s = (s+1)/2;
        kk += dp[i][k-1] ;
        if(kk>MOD)
            kk-=MOD;
    }
    ans += C(m+n-2,n-1) - kk ;
    if(ans<0)
        ans += MOD ;
    cout<<(ans*tv(C(m+n-2,n-1),MOD-2))%MOD;






}
