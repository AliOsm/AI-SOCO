#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 200000 + 10;
const int M = 1000000007;
const double PI = atan(1) * 4;
const int oo = 1000000000;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
#define pb push_back 
#define all(c) (c).begin(),(c).end()
int n,m,val[N],seg[4*N],lz[4*N][2],st[N],ed[N],T,l,r;
bool d[N],dp[N];
vvi v;
void fix(int u, int s, int e){
	if(s==e){
		bool f=dp[s];
		seg[u]+=lz[u][f]-lz[u][f^1];
	}
	if(s!=e){
		for(int i=0; i<2; ++i){
			lz[u*2][i]+=lz[u][i];
			lz[u*2+1][i]+=lz[u][i];
		}
	}
	lz[u][0]=lz[u][1]=0;
}
void upd(int u, int s, int e, int vl, bool f){
	fix(u,s,e);
	if(s>r || e<l)
		return;
	if(s>=l && e<=r){
		lz[u][f]=vl;
		fix(u,s,e);
		return;
	}
	upd(u*2,s,(s+e)/2,vl,f);
	upd(u*2+1,(s+e)/2+1,e,vl,f);
}
int get(int u, int s, int e){
	fix(u,s,e);
	if(s>r || e<l)
		return 0;
	if(s==e)
		return seg[u];
	return get(u*2,s,(s+e)/2)+get(u*2+1,(s+e)/2+1,e);
}
void dfs(int u, int p, bool dpth=0){
	l=r=st[u]=++T;
	d[u]=dpth;
	dp[T]=dpth;
	upd(1,1,n,val[u],dpth);
	for(int i=0; i<v[u].size(); ++i)
		if(v[u][i]!=p)
			dfs(v[u][i],u,dpth^1);
	ed[u]=T;
}
int main(){
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	cin>>n>>m;
	v.resize(n);
	for(int i=0; i<n; ++i)
		scanf("%d",&val[i]);
	for(int a,b,i=0; i<n-1; ++i){
		scanf("%d%d",&a,&b);
		--a;--b;
		v[a].pb(b);
		v[b].pb(a);
	}
	dfs(0,-1);
	for(int a,b,c,i=0; i<m; ++i){
		scanf("%d%d",&a,&b);
		--b;
		l=st[b];r=ed[b];
		if(a==1){
			scanf("%d",&c);
			upd(1,1,n,c,d[b]);
		}else{
			r=st[b];
			printf("%d\n", get(1,1,n));
		}
	}
}


