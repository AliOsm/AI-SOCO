#include <bits/stdc++.h>

using namespace std;

#define ll long long
const int N = 3e3 + 5;
ll h[N][N], g[N * N], mn[N][N];
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	ll n, m, a, b;
	ll g0, x, y, z;
	cin >> n >> m >> a >> b >> g0 >> x >> y >> z;
	g[0] = g0;
	for (int i = 1; i < N * N; i++)
		g[i] = (g[i - 1] * x + y) % z;

	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			h[i][j] = g[(i - 1) * m + j - 1];
	for (int j = 1; j <= m; j++) {
		deque<pair<int, ll> > dq;
		for (int i = n; i; i--) {
			while (dq.size() && dq.front().first - i >= a)
				dq.pop_front();
			while (dq.size() && dq.back().second > h[i][j])
				dq.pop_back();
			dq.push_back( { i, h[i][j] });
			mn[i][j] = dq.front().second;
		}
	}
	ll ans = 0;
	for (int i = 1; i <= n - a + 1; i++) {
		deque<pair<int, ll> > dq;
		for (int j = m; j >= m - b + 1; j--) {
			while (dq.size() && dq.back().second > mn[i][j])
				dq.pop_back();
			dq.push_back( { j, mn[i][j] });
		}
		ans += dq.front().second;
		for (int j = m - b; j; j--) {
			while (dq.size() && dq.front().first - j >= b)
				dq.pop_front();
			while (dq.size() && dq.back().second > mn[i][j])
				dq.pop_back();
			dq.push_back( { j, mn[i][j] });
			ans += dq.front().second;
		}
	}
	cout << ans << endl;
	return 0;
}
