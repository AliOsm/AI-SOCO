// In The Name Of God :
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
using namespace std ;
using namespace __gnu_pbds;
#define X first 
#define Y second
#define int long long 
typedef long long ll ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define ALL(x) (x).begin(),(x).end()
#define size(x) (long((x).size()))
typedef pair < int , int > pii ; 
typedef pair < pii , int > pii_i ;
typedef pair < pii , pii > pii_ii ;
#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%I64d"
const int maxL = 14 ;
const int inf = 1e9+100 ;
typedef long long ll ;
ll mod = 1e9 ;
//const int inf = 1e13 ;
typedef long double ld ;
const int maxn = 2e5 + 10 ; 
string s [ maxn ] , t [ maxn ] ;
int n , m ;

int32_t main ( )
{
  cin >> n >> m ;
  for ( int i = 0 ; i < n ; i ++ )
    cin >> s [ i ] , t [ i ] = s [ i ] ;
  for ( int cnt = 0 ; cnt < 2 ; cnt ++ )
    {
      bool flag = (n%3)==0 ;
      for ( int i = 0 ; flag && i < n ; i ++ )
	t [ i ] . resize ( unique ( ALL ( t [ i ] ) ) - t [ i ] . begin (  ) ) ,
	  flag &= ( ( size(t [ i ]) == 1 ) && ( (i==0 ) || (i==(n/3)) || (i==2*n/3) || ( t [ i ] [ 0 ] == t [ i - 1 ]  [ 0 ] ) ) ) ;
      flag = flag & ((t[0]!=t[n/3])&(t[0]!=t[2*n/3])&(t[2*n/3]!=t[n/3])) ;
      if ( flag )
	return cout << "YES" << endl , 0 ;
      for ( int i = 0 ; i < m ; i ++ )
	t [ i ] = string ( n , ' ' ) ;
      for ( int i =0 ; i  < n ; i++)
	for ( int j =0  ; j < m ; j ++)
	  t [ j ] [ i ] = s [ i ] [ j ];
      swap ( n , m ) ; 
    }
  
  cout << "NO" << endl ; 
} 
  
