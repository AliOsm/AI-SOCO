#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MX = 100005;

struct Data {
	int a;
	int b[7];
} a[MX];
bool operator< (const Data& A, const Data& B) {
	return A.a > B.a;
}

ll dp[MX][1 << 7];

int main()
{
	int n, p, k;
	ignore = scanf("%d %d %d", &n, &p, &k);
	
	for (int i = 1; i <= n; i++) {
		ignore = scanf("%d", &a[i].a);
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 0; j < p; j++) {
			ignore = scanf("%d", &a[i].b[j]);
		}
	}
	
	sort(a + 1, a + n + 1);
	
	for (int i = 1; i <= n; i++) {
		for (int msk = 0; msk < (1 << p); msk++) {
			if (__builtin_popcount(msk) > i) continue;
			
			dp[i][msk] = dp[i - 1][msk];
			
			if (__builtin_popcount(msk) < i && i - __builtin_popcount(msk) <= k) {
				dp[i][msk] = dp[i - 1][msk] + a[i].a;
			}
			
			for (int t = 0; t < p; t++) {
				if (msk & (1 << t)) {
					dp[i][msk] = max(dp[i][msk], dp[i - 1][msk ^ (1 << t)] + a[i].b[t]);
				}
			}
		}
	}
	
	printf("%lld\n", dp[n][(1 << p) - 1]);
}
