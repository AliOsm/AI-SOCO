/// إِنَّ مَعَ الْعُسْرِ يُسْرًا
/// لَا أَبْرَحُ حَتَّىٰ أَبْلُغَ

#include <bits/stdc++.h>
#include <ext/rope>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace __gnu_cxx;
using namespace __gnu_pbds;
using namespace std;
template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define LL unsigned long long
#define ll long long
#define LD double
#define HabdModeActive ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define S second
#define F first
#define PI acos(-1)
#define MAX 5000005
#define file freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);


int main() {
    HabdModeActive
    int n, m;
    cin >> n >> m;
    int arr[n], a[m], b[m];
    for (int i = 0; i < n; i++)
        cin >> arr[i];
    for (int i = 0; i < m; i++)
        cin >> a[i];

    int st = 0, en = n - 1, ans = -1;
    while (st <= en) {

        int mid = (st + en) / 2;
        bool ok = 0;
        map<int, int> mp,mo;
        for (int i = 0; i <=mid; i++) {
            if (arr[i] != 0)
                mp[arr[i]] = i;
        }
        if (mp.size() != m) {
            st = mid + 1;
            continue;
        }
        vector<pair<int, int>> vec;
        for (auto &x:mp) {
            mo[x.S+1]=x.F;
        }
        int cnt = 0;
        int sum=0;
        for(auto &x:mo)
        {
            if(x.F>a[cnt]+sum)
            {
                sum+=a[cnt]+1;
                cnt++;
            } else
                break;
        }
        if(cnt == m)
        {
            en = mid - 1;
            ans = mid +1;

        } else
            st = mid + 1;


    }
    cout<<ans;

    return 0;
}
