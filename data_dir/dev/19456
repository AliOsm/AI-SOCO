#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <sstream>
#include <iostream>
#include <cmath>
#include<cstring>
#include <cstdio>
#include <stack>
#include<iomanip>
#include<queue>
#include<functional>
#include<iterator>
#include<new>
#include<cstdlib>
using namespace std;
#define inf 100000000000000000
#define ninf -1000000000000000
#define ll long long
#define scll(x) scanf("%lld",&x);
#define sci(x)  scanf("%d",&x);
#define scc(x)  scanf("%c", &c);
#define ll long long
#define ii pair<int,int>
#define p10(ans) printf("%0.10f\n", ans);
#define pri(ans) printf("%d\n", ans);
#define prll(ans) printf("%lld\n", ans);
#define prc(ans)  printf("%c", ans);
#define pi 3.141592653589793
#define mem(arr,d)  memset(arr,d,sizeof(arr))
#define white 0
#define gray 1
#define black 2
/*long long gcd(long long a, long long b)
{
if (b == 0)return a; return gcd(b, a%b);
}
long long lcm(long long a, long long b) {
return  a * b / gcd(a, b);
}
*/
/*long long pw(long long  b, long long  p) { if (!p) return 1; long long  sq = pw(b, p / 2); sq *= sq; if (p % 2) sq *= b; return sq; }*/
int z[1000010];
vector<int>vec;
string s;
map<int, int>mp;
void zfunction() 
{
	int n = (int)s.length();
	for (int i = 1, l = 0, r = 0; i < n; i++) {
		if (i <= r)
			z[i] = min(r - i + 1, z[i - l]);
		while (i + z[i] < n && s[z[i]] == s[i + z[i]])
			++z[i];
		if (i + z[i] - 1 > r)
			l = i, r = i + z[i] - 1;
	}
}

int main() 
{
	int mnhna=-1,maxx=-100000;
	cin >> s;
	zfunction();
	for (int i = 1; i < s.size(); i++)
	{
		++mp[z[i]];
		maxx = max(maxx, z[i]);
	}
	for (int i = 1; i < s.size(); i++)
	{
		if (i + z[i] >= s.size() &&((mp[z[i]]>1)||maxx>z[i])) { mnhna = i; break; }
	}
	if (mnhna == -1) { cout << "Just a legend" << endl; }
	else cout << s.substr(mnhna, s.size() - mnhna) << endl;
	return 0;
}

