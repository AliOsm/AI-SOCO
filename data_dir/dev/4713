//#include "stdafx.h"
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <math.h>

using namespace std;

typedef long long ll;

const int NMax = 200001;

#define Min(x,y) ((x) > (y) ? (y) : (x))
#define Max(x,y) ((x) > (y) ? (x) : (y))
#define Sqr(x) ((x) * (x))
#define Abs(x) ((x) < (0) ? (-(x)) : (x))

bool dp[1000][1001];
int p1[1001],p2[1001],a[1001];
int n,x,m,ans;

void solve(int i,int s)
{
	dp[i][s] = true;
	for (int j = i + 1;j <= m;j++)
	{
		if (dp[j][s + a[j]] == false) solve(j,s + a[j]);
		if (dp[j][s] == false) solve(j,s);
	}
}

int main()
{
	#ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
	#endif
	cin >> n >> x;
	for (int i = 1;i <= n;i++) p1[i] = p2[i] = 0;
	for (int i = 1;i <= n;i++)
	{
		cin >> p1[i];
		p2[p1[i]] = i;
	}
	m = 0;
	for (int i = 1;i <= n;i++)
		if (p2[i] == 0)
		{
			int k = 0, t = i;
			bool flag = false;
			while (t != 0)
			{
				k++;
				if (t == x)
				{
					flag = true;
					ans = k;
				}
				t = p1[t];
			}
			if (flag == false) a[++m] = k;
			else ans = k - ans + 1;
		}
	solve(0,0);
	if (m == 0) cout << ans << endl;
	for (int s = 0;s <= 1000;s++)
		for (int i = 1;i <= m;i++)
			if (dp[i][s] == true)
			{
				cout << s + ans << endl;
				break;
			}
	return 0;	
}
   