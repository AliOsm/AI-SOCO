#include <iostream>
#include <cstring>
#include <string>
using namespace std;
typedef pair<int, int> pii;

pii mem[1010][1010];
string a, b;
void setmin(pii& a, pii b) {
	if (a > b) a = b;
}
int dp(int i, int j) {
	if (i == a.size() && j == b.size()) return 0;
	if (i > a.size() || j > b.size()) return 1 << 30;
	pii& res = mem[i][j];
	if (res.first != -1) return res.first;
	if (i < a.size() && j < b.size() && a[i] == b[j]) {
		res = pii(dp(i + 1, j + 1), 0);
	} else {
		res.first = 1 << 30;
		setmin(res, pii(dp(i + 1, j) + 1, 1));
		setmin(res, pii(dp(i, j + 1) + 1, 2));
		setmin(res, pii(dp(i + 1, j + 1) + 1, 3));
	}
	return res.first;
}
int main() {
	memset(mem, -1, sizeof(mem));
	cin >> a >> b;
	cout << dp(0, 0) << '\n';
	int curi = 0, curj = 0;
	int i = 1;
	while (curi != a.size() || curj != b.size()) {
		int opt = mem[curi][curj].second;
		if (opt == 0) {
			curi++;
			curj++;
			i++;
		} else if (opt == 1) {
			cout << "DELETE " << i << '\n';
			curi++;
		} else if (opt == 2) {
			cout << "INSERT " << i << ' ' << b[curj] << '\n';
			curj++;
			i++;
		} else if (opt == 3) {
			cout << "REPLACE " << i << ' ' << b[curj] << '\n';
			curi++;
			curj++;
			i++;
		}
	}
}