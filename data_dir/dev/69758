#include <bits/stdc++.h>
using namespace std;

const int MAXN = 200005;
const int modulo = 1000000007;
char st[MAXN];
int rc[MAXN];
int ans;
int f[2][MAXN];

int PowMod(int a, int b)
{
    int t = a, ret = 1;

    while(b)
    {
        if(b & 1) ret = (long long) ret * t % modulo;
        t = (long long) t * t % modulo;
        b >>= 1;
    }

    return ret;
}

int Calc(int n, int m)
{
    int ret;

    if(n < m) return 0;

    ret = (long long) f[0][n] * f[1][n - m] % modulo * f[1][m] % modulo;

    return ret;
}

int main()
{
    int n, lc = 0;

    // freopen("D:\\1.in", "r", stdin);
    // freopen("D:\\1.out", "w", stdout);

    f[0][0] = f[1][0] = 1;
    for(int i = 1; i < MAXN; ++i)
        f[0][i] = (long long) f[0][i - 1] * i % modulo, f[1][i] = (long long) f[1][i - 1] * PowMod(i, modulo - 2) % modulo;

    scanf("%s", st);

    n = strlen(st);
    for(int i = n - 1; i >= 0; --i) rc[i] = rc[i + 1] + (st[i] == ')');
    for(int i = 0; i < n; ++i)
    if(st[i] == '(')
    {
        lc++;
        ans = (ans + Calc(lc + rc[i] - 1, lc)) % modulo;
    }
    printf("%d\n", ans);

    return 0;
}
