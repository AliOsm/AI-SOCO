#include <string>
#include <sstream>
#include <cstring>
#include <sstream>
#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <fstream>
#include <ctime>
#include <cmath>
#include <math.h>
#include <set>
#include <map>
#include <list>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <stack>
using namespace std;

int gcd(int a, int b)
{
    int c;
    while(a) {
        c = a;
        a = b % a;
        b = c;
    }

    return b;
}

#define pp system("pause");
#define ct double ttme = clock()
#define p_ct cout << (clock() - ttme) / CLOCKS_PER_SEC << endl
#define all(c) (c).begin(),(c).end()
#define fft ifstream fin("input.txt"); ofstream fout("output.txt")
#define fft_c FILE *fin, *fout
#define fft_c_open fin = fopen("input.txt","r"); fout = fopen("output.txt","w")
#define fft_c_cl fclose(fin); fclose(fout)
#define pii pair<ll,ll>
#define pdd pair<double,double>
#define mkp(a,b) make_pair((a),(b))
#define pff pair<float,float>
#define piii pair<ll,pair<ll,ll>>
#define pss pair<string, string>
#define M_PI 3.14159265358979323846
#define mem0(m) memset((m), 0, sizeof(m));
#define memb(m) memset((m), false, sizeof(m));
#define memi(m) memset((m), 0, sizeof(m));
#define rep(i,n) for(i = 0; i < (int)(n); i++)
#define repi(a, n) for(int i = a; i < (int)(n); i++)
#define repp(i, a, n) for(int (i) = a; (i) < (int)(n); (i)++)
typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
const int INF = 1e8;
const int DEL = 687134561;
const long long MODULO = 1e9 + 7;
const int MAX = 1e7;
const int des = 10000;



bool glas(char ch) {
    if(tolower(ch) == 'a' || tolower(ch) == 'e' || tolower(ch) == 'i' ||
            tolower(ch) == 'o' || tolower(ch) == 'u') {
        return true;
    } else {
        return false;
    }
}

int main() {
    string s;
    cin >> s;

    ll crays[700005];
    for(int i = 0; i < 700005; i++) {
        crays[i] = -1;
    }

    ll curr = 0, maxi = -1000000;
    for(int i = 0; i < s.size(); i++) {
        if(glas(s[i])) {
            curr--;
        } else {
            curr += 2;
        }
        maxi = max(maxi, curr);
        crays[curr + 200001] = i;
    }

    for(int i = 700005 - 2; i >= 0; i--) {
        crays[i] = max(crays[i], crays[i + 1]);
    }

    ll len = -1, ans = 0;
    curr = 0;
    for(int i = 0; i < s.size(); i++) {
        if(curr <= maxi) {
            ll to = crays[curr + 200001];
            to -= i;
            to++;

            if(to > len) {
                len = to;
                ans = 1;
            } else if(to == len) {
                ans++;
            }
        }

        if(glas(s[i])) {
            curr--;
        } else {
            curr += 2;
        }
    }

    if(len <= 0 || ans <= 0) {
        cout << "No solution";
    } else {
        cout << len << " " << ans;
    }
}



















