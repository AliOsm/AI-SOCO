#include <bits/stdc++.h>

#define long long long

using namespace std;

struct FenwickTree {

    int n;
    long* ft;

    FenwickTree(int size) { n = size; ft = new long[n+1]; for(int i = 0 ; i <= n ; i++)ft[i] = 0 ;}

    long rsq(int b)
    {
        long sum = 0;
        while(b > 0) { sum += ft[b]; b -= b & -b;}
        return sum;
    }

    long rsq(int a, int b) { return rsq(b) - rsq(a-1); }

    void point_update(int k, long val)
    {
        while(k <= n) { ft[k] += val; k += k & -k; }
    }
};

int main()
{
    ios_base :: sync_with_stdio(false) , cin.tie(nullptr) , cout.tie(nullptr);

    int n , k , x;

    cin >> n >> k ;

    vector<FenwickTree > tree  ;

    for(int i = 0 ; i <= k ; i++)tree.push_back({n});

    for(int i = 0 ; i < n ;i++)
    {
        cin >> x ;

        tree[0].point_update(x , 1) ;
        for(int i = 0 ; i < k ; i ++)
            tree[i + 1].point_update(x, tree[i].rsq(1, x - 1));
     
    }

    cout << tree[k].rsq(n) ;

    return 0 ;
}