#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <memory.h>
#include <cstring>
#include <stack>
#include <unordered_set>
#include <unordered_map>
#include <iterator>
#pragma comment(linker, "/STACK:667177216")
#define ll long long
#define ull unsigned long long
#define INF 1000000007;
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define mp make_pair
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<LL>
#define vS vector<string>
#define fori(i, n) for (int(i) = 0; (i) < n; (i)++)
#define forn(it, from, to) for (int(it) = from; (it) < to; (it)++)
#define forI(tmp) for (auto(it) = (tmp).begin(); (it) != (tmp).end(); (it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scLL(a) scanf("%I64d", &(a))
#define mems(a, val) memset(a, val, sizeof(a))
typedef long long LL;
using namespace std;
const LL MOD = 1000000000 + 7;
const LL MAXN = 100000 + 100;

int main()
{
#ifdef ONLINE_JUDGE
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false);
    cin.tie(0);
   
   int n, q;
   cin>>n>>q;
   string s;
   cin>>s;
   vector<int> a(n);
   forn(i,0,n)a[i] = s[i] - '0';
   
   vector<LL> deg_2(100000 + 100), deg_2_m1(100000 + 100);
   deg_2[0] = 1;
   for(LL i = 1; i < deg_2.size(); ++i) {
   	deg_2[i] = deg_2[i - 1] * (LL)2;
   	deg_2[i] %= MOD;
   	deg_2_m1[i] = ((deg_2[i] - 1) + MOD) % MOD;
   }
   
   vector<LL> one(n + 1);
   one[0] = 0;
   for(int i = 0; i < n; ++i) {
   	one[i + 1] = one[i] + a[i];
   }
   
   forn(i,0,q) {
   	int l,r;
   	cin>>l>>r;
   	int ones = one[r] - one[l - 1];
   	LL ans = deg_2_m1[ones] + (deg_2_m1[r - l + 1 - ones] * (deg_2_m1[ones])) % MOD;
   	ans %= MOD;
   	cout<<ans<<endl;
   }
   
   
    return 0;
}