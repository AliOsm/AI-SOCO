
#include<bits/stdc++.h>

using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/

#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second

#define what_is(x)     cerr << #x << " is " << x << endl;

///*....Debugger....*/

#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it)
{
    cout << endl ;
}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args)
{
    cerr << *it << " = " << a << ' ' ;
    err(++it, args...);
}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
int ini()
{
    int x;
    scanf("%d",&x);
    return x;
}
long long inl()
{
    long long x;
    scanf("%lld",&x);
    return x;
}

const int N = (int) 1e6 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);

int ps[N];
bool compare(pair<int,int> x,pair<int,int>  y){
    if(x==y)return x.ff<y.ff;

    return x.ss<y.ss;
}
map<int,vector<pair<int,int>> >m;
int main()
{
    int n;
    cin>>n;

    for(int i=1;i<=n;i++){
        int x;
        cin>>x;
        ps[i]=ps[i-1]+x;
    }
    set<int>s;
    for(int i=1;i<=n;i++){
        for(int j=i;j<=n;j++){
          int x=ps[j]-ps[i-1];
          m[x].push_back({i,j});
          s.insert(x);
        }
    }
    vector<pair<int,int> >tem,res,rr;
    for(auto x: s){
        tem.clear();
        rr.clear();
        for(auto xx: m[x]){
            //error(xx.first,xx.ss);
            tem.push_back(xx);
        }
        sort(tem.begin(),tem.end(),compare);
        int t=0;
        for(auto xx: tem){
            if(xx.ff>t){
              rr.push_back(xx);
              t=xx.ss;
            }
        }
        if(rr.size()>res.size()){
            res=rr;
        }
    }
    cout<<res.size()<<endl;
    for(auto x:res){
        cout<<x.ff<<" "<<x.ss<<endl;
    }

    return 0;
}
