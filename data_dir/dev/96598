#include <bits/stdc++.h>

#define F first
#define S second
#define pii pair<int, int>
#define pb push_back

using namespace std;

typedef long long ll;
typedef long double ld;

const int maxN = 1100 + 10, maxM = 1e6 + 10, mod = 998244353;

int dp[maxN][maxN], a[maxM], c[maxN];
int fi[maxN], ls[maxN];

vector <int> adj[maxN];

int main() {
	int n, m; cin >> n >> m;
	for (int i=0; i<m; i++) cin >> a[i];

	int len = 0, i = 0;
	while(i < m) {
		int j = i;
		while(j < m && a[j] == a[i]) j++;
		c[len ++] = a[i];
		i = j;
	}

	m = len;

	if(m > 2 * n + 5) return cout << 0 << endl, 0;

	for (int i=0; i<=m; i++) dp[i][i] = 1;

	for (int i=0; i<m; i++) { 
		ls[c[i]] = i;
		adj[c[i]].pb(i);
	}

	for (int i=m-1; i>=0; i--)
		fi[c[i]] = i;

	for (int len=1; len<=m; len++)
		for (int l=0; l+len<=m; l++) {
			int r = l + len, mn = n + 1, p = -1;
			bool flg = true;

			for (int j=l; j<r; j++) {
				if(fi[c[j]] < l || ls[c[j]] >= r) {flg = false; break;}
				if(c[j] < mn) mn = c[j], p = j;
			}

			if(!flg) continue ;

			int L = fi[c[p]], R = ls[c[p]];
			
			ll w = 1;

			int sz = adj[mn].size();
			for (int j=0; j<sz-1; j++) {
				int x = adj[mn][j], y = adj[mn][j + 1];
				w = 1LL * w * dp[x + 1][y] % mod;
			}
			
			ll w1 = 0;
			for (int j=l; j<=L; j++)
				w1 += 1LL * dp[l][j] * dp[j][L] % mod, w1 %= mod;
			
			ll w2 = 0;
			for (int j=R; j<r; j++)
				w2 += 1LL * dp[R+1][j+1] * dp[j+1][r] % mod, w2 %= mod;

			w = 1LL * w * w1 % mod;
			w = 1LL * w * w2 % mod;

			dp[l][r] = w;

		}

	cout << dp[0][m] << endl;
}	
