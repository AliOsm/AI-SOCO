#include <iostream>
#include <cstdio>
#include <algorithm> 
#include <cstring>

using namespace std;

#define next next_

int n, k;
int q[300000];
int x[500000];
int y[500000];
int next[500000];
int pr[500000];
long long ans;

void dfs(int v, int p) {    
    for (int i = pr[v]; i ; i = next[i]) {
        if (y[i] != p) {
            dfs(y[i], v);
            q[v] += q[y[i]];
        }
    }
    if (p != 0) {
        long long toAdd = min(q[v], k + k - q[v]);
        ans += toAdd;
    }   
}

int main() {
    scanf("%d%d", &n, &k);
    for (int i = 0; i < k + k; i++) {
        int x;
        scanf("%d", &x);
        q[x]++;
    }

    for (int i = 1;i <= n - 1; i++) {
        scanf("%d%d", &x[i], &y[i]);
        x[i + n - 1] = y[i];
        y[i + n - 1] = x[i];
    }

    for (int i = 1; i <= n + n - 2; i++) {
        next[i] = pr[x[i]];
        pr[x[i]] = i;
    }

    ans = 0;

    dfs(1, 0);

    cout << ans << endl;

    return 0;
}