#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

vector<pii> vv;

vii v[100005];

int vis[100005];
ll cc=0;

void dfs(int at)
{
	cc++;
	vis[at]=1;
	tr(v[at],it)
	{
		int to=*it;
		if(vis[to]==0)dfs(to);
	}
}

int main()
{//ios_base::sync_with_stdio(false);
int n,k;
gi(n);gi(k);

int a[100005];

rep(ii,0,k-1)
{
	rep(i,0,n-1)
	{
		gi(a[i]);
	}
	rep(i,0,n-2)
	{
		vv.pb(mp(a[i],a[i+1]));
	}
}

sort(all(vv));
int sz=vv.size();

for(int i=0;i<sz;i++)
{
	pii p=vv[i];
	//o2(p.ff,p.ss);on;
	if(upper_bound(all(vv),p)-lower_bound(all(vv),p)==k)
	{
		v[p.ff].pb(p.ss);
		v[p.ss].pb(p.ff);
	}
	while(1)
	{
		if(vv[i]==p)i++;
		else break;
	}
	i--;
}

ll ans=0;

rep(i,1,n)
{
	if(!vis[i])
	{
		cc=0;
		dfs(i);
		ans+=(cc*(cc+1))/2;
	}
}
oll(ans);
return 0;
}


