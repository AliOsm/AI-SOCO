#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
using namespace std; 
#pragma comment(linker, "/STACK:256000000") 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 1103 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
int n, m;
int mas[2000][2000];
int gs[2000][2000];
int vs[2000][2000];
int64 ans = 0;
int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    scanf("%D %d\n", &n, &m);
    for(int i = 0; i < n; ++i)
    {
        for(int j = 0; j < m; ++j)
        {
            char t;
            scanf("%c", &t);
            if (t == '#')
                mas[i][j] = 1;
           // cerr << mas[i][j] << ' ';
        }
      //  cerr << endl;
        scanf("\n");
    }
    for(int i = 0; i < n; ++i)
    {
        gs[i][0] = mas[i][0];
        for(int j = 1; j < m; ++j)
            gs[i][j] = gs[i][j - 1] + mas[i][j];
       // cerr << gs[i][m - 1] << ' ';
    }
    //cerr << endl;
    for(int i = 0; i < m; ++i)
    {
        vs[0][i] = mas[0][i];
        for(int j = 1; j < n; ++j)
            vs[j][i] = vs[j - 1][i] + mas[j][i];
        //cerr << vs[n - 1][i] << ' ';
    }
    //cerr << endl;
    for(int i = 1; i < n - 1; ++i) 
        if (!gs[i][m - 1])
            ans++;
    //cerr << ans << endl;
    for(int i = 1; i < m - 1; ++i)
        if (!vs[n - 1][i])
            ans++;
    
//  cerr << ans << endl;  
    for(int i = 1; i < n - 1; ++i)
    {
        for(int j = 1; j < m - 1; ++j)
        {
            if (mas[i][j])
                continue;
            int t = 2, t1 = 2;
            if (gs[i][m - 1] - gs[i][j])
                t--;
            if (gs[i][j])
                t--;
            if (vs[i][j])
                t1--;
            if (vs[n - 1][j] - vs[i][j])
                t1--;
            ans += t * t1;
        }
    }
    
    for(int i = 1; i < n - 1; ++i)
    {
        int64 t = 0, l = 0;
        for(int j = 1; j < m - 1; ++j)
        {
            if (!mas[i][j])
            {
                if (!vs[i][j])
                    t++;
                if (!(vs[n - 1][j] - vs[i][j]))
                    t++;
                continue;
            }
            ans += t * (t - 1) / 2;
            
            for(int k = l + 1; k < j; ++k)
            {
                if (!vs[i][k] && !(vs[n - 1][k] - vs[i][k]))
                    ans--;
                if (k != l + 1)
                {
                    if (!vs[i][k] && !vs[i][k - 1])
                        ans--;
                    if (!(vs[n - 1][k] - vs[i][k]) && !(vs[n - 1][k - 1] - vs[i][k - 1]))
                        ans--;
                }
            }
            l = j;
            t = 0;
        }
        
        ans += t * (t - 1) / 2;
        for(int k = l + 1; k < m - 1; ++k)
        {
            if (!vs[i][k] && !(vs[n - 1][k] - vs[i][k]))
                ans--;
            if (k != l + 1)
            {
                if (!vs[i][k] && !vs[i][k - 1])
                    ans--;
                if (!(vs[n - 1][k] - vs[i][k]) && !(vs[n - 1][k - 1] - vs[i][k - 1]))
                    ans--;
            }
        }
    }
    
    for(int i = 1; i < m - 1; ++i)
    {
        int64 t = 0, l = 0;
        for(int j = 1; j < n - 1; ++j)
        {
            if (!mas[j][i])
            {
                if (!gs[j][i])
                    t++;
                if (!(gs[j][m - 1] - gs[j][i]))
                    t++;
                continue;
            }
            ans += t * (t - 1) / 2;
            for(int k = l + 1; k < j; ++k)
            {
                if (!gs[k][i] && !(gs[k][m - 1] - gs[k][i]))
                    ans--;
                if (k != l + 1)
                {
                    if (!gs[k][i] && !gs[k - 1][i])
                        ans--;
                    if (!(gs[k][m - 1] - gs[k][i]) && !(gs[k - 1][m - 1] - gs[k - 1][i]))
                        ans--;
                }
            }
            //cerr << t << ' ' << ans << endl;
            l = j;
            t = 0;
        }
        ans += t * (t - 1) / 2;
        for(int k = l + 1; k < n - 1; ++k)
        {
            if (!gs[k][i] && !(gs[k][m - 1] - gs[k][i]))
                ans--;
            if (k != l + 1)
            {
                if (!gs[k][i] && !gs[k - 1][i])
                    ans--;
                if (!(gs[k][m - 1] - gs[k][i]) && !(gs[k - 1][m - 1] - gs[k - 1][i]))
                    ans--;
            }
        }
        //cerr << t << ' ' << ans << endl;
    }
    cout << ans;
}