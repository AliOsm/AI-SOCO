#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int dp[100100];
int dp1[100100];
int a[100100];

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
	double beg = clock();
#endif

	int n;
	scanf("%d", &n);
	FOR(i, 0, n)
	{
		scanf("%d", &a[i]);
	}
	dp[n - 1] = 1;
	for (int i = n - 2; i >= 0; --i)
	{
		if (a[i + 1] > a[i])
			dp[i] = 1 + dp[i + 1];
		else
			dp[i] = 1;
	}
	dp1[0] = 1;
	FOR(i, 1, n)
	{
		if (a[i] > a[i - 1])
			dp1[i] = 1 + dp1[i - 1];
		else
			dp1[i] = 1;
	}
	int res = 0;
	FOR(i, 0, n)
	{
		int val = 1;
		if (i)
			val = MAX(val, 1 + dp1[i - 1]);
		if (i + 1 != n)
			val = MAX(val, 1 + dp[i + 1]);
		if ((i) && (i + 1 != n) && (a[i + 1] - a[i - 1] > 1))
			val = MAX(val, dp1[i - 1] + 1 + dp[i + 1]);
		res = MAX(res, val);
	}
	cout << res << endl;

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}