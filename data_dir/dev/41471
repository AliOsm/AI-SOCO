//**KEEP IT SHORT AND SIMPLE**
#include <bits/stdc++.h>
#define IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define REP(i,a,b) for (long long i = a; i < b; i++)
#define NL '\n'
#define F first
#define S second
#define dot(a, b) (conj(a) * (b)).real()
#define cross(a, b) (conj(a)* (b)).imag()
using namespace std;
typedef long long ll;
typedef long double ld;
typedef bool bl;
typedef vector < vector<long long> > vvl;
typedef vector <long long> vll;
typedef pair <long long, long long> pll;
typedef map <long long, long long> mll;
typedef map <long long, bool> mlb;
typedef priority_queue<long long, vector<long long>, greater<long long> > minPq;
typedef tuple<ll, ll, ll> line;
typedef complex<double> point;
const double pi = 2 * acos(0.0);
const int OO = 0x3f3f3f3f;
using namespace std;
ll found[5000010], freq[5000010];
void sieve(ll ub)
{
    for(ll i = 2;i <= ub;i++)
    {
        if(!found[i])
        {
            for(ll j = i;j <= ub;j += i)
            {
                found[j] = 1;
                ll x = j;
                while(x % i == 0)
                    x /= i, freq[j]++;
            }
        }
        freq[i] += freq[i - 1];
    }
}
int main()
{
    IO
    sieve(5000005);
    ll t, a, b;
    cin >> t;
    while(t--)
    {
        cin >> a >> b;
        cout << freq[a] - freq[b] << NL;
    }
    return 0;
}
