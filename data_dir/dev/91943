#include <bits/stdc++.h>

using namespace std;

const int N = 100005;

vector<int> adj[N];
int init[N], goal[N];
vector<int> res;

void dfs(int u, int p, int odd, int even, int level = 0) {
  int change = (init[u] ^ (level & 1 ? odd : even)) != goal[u];
  if (change) {
    res.push_back(u);
  }
  for (int v : adj[u]) {
    if (v != p) {
      dfs(v, u, change && (level & 1) ? odd ^ 1 : odd,
          change && !(level & 1) ? even ^ 1 : even, level + 1);
    }
  }
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.in", "r", stdin);
#endif
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n - 1; ++i) {
    int u, v;
    scanf("%d %d", &u, &v);
    --u, --v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }
  for (int i = 0; i < n; ++i) {
    scanf("%d", init + i);
  }
  for (int i = 0; i < n; ++i) {
    scanf("%d", goal + i);
  }
  dfs(0, -1, 0, 0);
  printf("%d\n", (int)res.size());
  for (int u : res) {
    printf("%d\n", u + 1);
  }
}
