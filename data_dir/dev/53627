#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
#define N 200010
using namespace std;
vector<int> graph[N], vals[N], valt[N];
vector<int> graph2[N];
int s, t, ct = 0;
int visited[N];
void dfs(int a){
	visited[a] = 1;
	for(auto to: graph[a]){
		if(!visited[to]){
			if(to == s){
				vals[ct].pb(a);
				continue;
			}
			if(to == t){
				valt[ct].pb(a);
				continue;
			}
			graph2[a].pb(to);
			dfs(to);
		}
	}
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		int a, b;
		cin >> a >> b;
		graph[a - 1].pb(b - 1);
		graph[b - 1].pb(a - 1);
	}
	int ds, dt;
	cin >> s >> t >> ds >> dt;
	s--;
	t--;
	for(int i = 0; i < n; i++){
		if(i != s && i != t && !visited[i]){
			dfs(i);
			ct++;
		}
	}
	int rt = ct + 1;
	for(int i = 0; i < ct; i++){
		if(vals[i].size() && !valt[i].size()){
			graph2[vals[i][0]].pb(s);
			ds--;
			rt--;
		}
		if(valt[i].size() && !vals[i].size()){
			graph2[valt[i][0]].pb(t);
			dt--;
			rt--;
		}
	}
	if(ds < 0 || dt < 0){
		cout << "No\n";
		return 0;
	}
	int mk = 0;
	for(int i = 0; i < ct; i++){
		if(vals[i].size() && valt[i].size()){
			if(ds){
				graph2[vals[i][0]].pb(s);
				ds--;
				rt--;
				if(!mk && dt){
					graph2[valt[i][0]].pb(t);
					dt--;
					rt--;
					mk = 1;
				}
			}
			else if(dt){
				graph2[valt[i][0]].pb(t);
				dt--;
				rt--;
				if(!mk && ds){
					graph2[vals[i][0]].pb(s);
					ds--;
					rt--;
					mk = 1;
				}
			}
			else{
				cout << "No\n";
				return 0;
			}
		}
	}
	if(rt > 0){
		if(ds && dt){
			graph2[s].pb(t);
		}
		else{
			cout << "No\n";
			return 0;
		}
	}
	cout << "Yes\n";
	for(int i = 0; i < n; i++){
		for(auto val: graph2[i]){
			cout << i + 1 << " " << val + 1 << '\n';
		}
	}

}