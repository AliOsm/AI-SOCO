#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define po pop_back
#define pb push_back
#define mk make_pair
#define lw lower_bound
#define up upper_bound
#define ff first
#define ss second
#define boost ios_base::sync_with_stdio(); cin.tie(0); cout.tie(0);
#define MOD 1000000009
#define MAX 1e18 
#define MIN -1e18
#define rep(i,a,b) for(ll i=a;i<=b;i++)
#define per(i,a,b) for(ll i=a;i>=b;i--)
#define con continue
#define pl pair<ll,ll>
#define binary_search while(l<=r)
ll a,b,c[1234567],dp[1005][1005],d[1234567],c1[1234][1234],e,n,j,i,l,r,x,y,k,ans,sz;
bool used[5234567];
ll T;
char ch[1234][1234];
vector<ll> v[1234567],v1;
string s,s1[1234567];
vector<pl> vv[1234567];
priority_queue<ll> pq;
ll sum;
map<ll,ll> ma,m;
ll ar[1234567];
ll mod=998244353;
ll fac[1234567];
ll pow(ll a,ll n){
    if(n == 0){
        return 1;
    }
    if(n == 1){
        return a;
    }
    ll ans = pow(a, n / 2);
    ans *= ans;
    ans %= MOD;
    if(n % 2){
        ans *= a;
    }
    return ans % MOD;
}
ll power(ll a){
    ll res = 1;
    ll base = 2;
    while(a > 0){
        if(a % 2 == 1) res = (res * base) % MOD;
        base = (base*base)%MOD;
        a /= 2;
    }
    return res;
} 
int main(){
    cin>>n>>x>>k;
    ll rep = (n/k) * (k-1);
    ll total = rep + n % k;
    if(x<=total) cout<<x;
    else{
        ll re = x - total;
        //cout<<re<<" "<<power(re+1)<<"\n";
        ll ans = ((power(re + 1) - 2) * k) % MOD + (x - k * re);
        if(ans < 0){ans = (ans + MOD) % MOD;} else ans = ans % MOD;
        cout<<ans;
    }
}