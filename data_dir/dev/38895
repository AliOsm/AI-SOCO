//Solution by Tima
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = 2000, mod = int(1e9)  + 7; 

int x[3],y[3], px, py;

vector <pair<int,int> > fans;
bool used[N][N];

void up(int x,int y){
	if(!used[x][y]){
		fans.pb(mp(x,y));
		used[x][y] = 1;
	}
}

void add(int x,int y,int a,int b){
	up(x,y);
	if(x < a){
		while(x < a){
			x++;
			up(x,y);
		}
	}
	if(x > a){
		while(x > a){
			x--;
			up(x,y);
		}
	}
	if(y < b){
		while(y < b){
			y++;
			up(x,y);
		}
	}
	if(y > b){
		while(y > b){
			y--;
			up(x,y);
		}
	}
}

int main () {
	for(int i = 0; i < 3; i++){
		cin >> x[i] >> y[i];
	}

	int ans = mod;

	for(int i = 0; i <= 1000; i++){
		for(int j = 0; j <= 1000; j++){
			int res = 0;
			for(int k = 0; k < 3; k++){
				res += abs(x[k] - i) + abs(y[k] - j) + 1;
			}	
			if(ans > res){
				ans = res;
				px = i, py = j;
			}
		}
	}


	for(int i = 0; i < 3; i++){
		add(px,py,x[i], y[i]);
	}
	cout << fans.size() << endl;
	for(int i = 0; i < fans.size(); i++){
		cout << fans[i].f << " " << fans[i].s << endl;
	}


return 0;
}