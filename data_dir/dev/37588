#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <numeric>
#include <iostream>
#include <string>
#include <set>

std::vector<std::string> query(int l, int r) {
  std::cout << "? " << l << " " << r << std::endl;
  std::vector<std::string> ret;
  int w = r - l + 1;
  for (int i = 0; i < w * (w + 1) / 2; ++i) {
    std::string s;
    std::cin >> s;
    std::sort(s.begin(), s.end());
    ret.emplace_back(std::move(s));
  }
  return ret;
}

int main() {
  int n;
  std::cin >> n;
  if (n == 1) {
    auto vec = query(1, 1);
    std::cout << "! " << vec[0] << std::endl;
    return 0;
  }
  auto q0 = query(1, n);
  auto q1 = query(2, n);
  std::multiset<std::string> set(q0.begin(), q0.end());
  for (const auto& s : q1) set.erase(set.find(s));
  std::vector<std::string> vec(set.begin(), set.end());
  std::sort(vec.begin(), vec.end(), [](const std::string& a, const std::string& b) { return a.length() < b.length(); });
  std::string result(n, '$');
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < i; ++j) vec[i].erase(std::find(vec[i].begin(), vec[i].end(), result[j]));
    result[i] = vec[i][0];
  }
  std::cout << "! " << result << std::endl;
}
