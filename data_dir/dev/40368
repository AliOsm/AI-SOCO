#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

bool solve(int n, int k){
	if(n == 0)
		return false;
	bool ans = false;
	if(n - 1 >= 0)
		ans |= !solve(n - 1, k);
	if(n - 2 >= 0)
		ans |= !solve(n - 2, k);
	if(n - k >= 0)
		ans |= !solve(n - k, k);
	return ans;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	srand(time(0));
	
	int t;
	cin >> t;
	while(t--){
		
		ll n, k;
		cin >> n >> k;
		
		if(k % 3 != 0){
			cout << (n % 3 ? "Alice" : "Bob") << endl;
			continue;
		}
		
		k -= 3;
		k++;
		
		ll lo = 1, hi = n / k + 2, pos = -1;
				
		while(lo <= hi){
			ll mid = (lo + hi) >> 1ll;
			ll last = mid * k + (mid - 1) * 3 - 1;
			last = last - k + 1;
						
			if(last <= n){
				pos = mid;
				lo = mid + 1;
			}
			else hi = mid - 1;
		}
		
		ll R = pos * k + (pos - 1) * 3 - 1;
		ll L = R - k + 1;
		
		if(n > R)
			cout << "Alice" << endl;
		else
			cout << ((n - L) % 3 ? "Alice" : "Bob") << endl;
	}

	return 0;
}
