#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 200001;
int n, k, t[N], cnt[N];
vector<int> neg, nonNeg, cpy;

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
#endif
  fastInOut();
  int nd = 0, ret = 1, lst = -1;
  cin >> n >> k;
  for (int i = 0; i < n; ++i)
    cin >> t[i], nd += (t[i] < 0);
  if (nd > k)
    return cout << "-1", 0;
  if (nd == 0)
    return cout << "0", 0;
  int idx = 0;
  while (idx < n && t[idx] >= 0)
    ++idx;
  while (idx < n) {
    int totNeg = 0, totNonNeg = 0;
    while (idx < n && t[idx] < 0)
      ++totNeg, ++idx;
    while (idx < n && t[idx] >= 0)
      ++totNonNeg, ++idx;
    neg.push_back(totNeg);
    if (totNonNeg)
      nonNeg.push_back(totNonNeg);
  }
  cpy = nonNeg, k -= nd;
  if (t[n - 1] >= 0)
    lst = cpy.back(), cpy.pop_back();
  sort(cpy.begin(), cpy.end());
  for (int i = 0; i < int(cpy.size()) && cpy[i] <= k; ++i)
    ++cnt[cpy[i]], k -= cpy[i];
  if (k >= lst)
    ++cnt[lst];
  for (int i = 0; i < int(neg.size()); ++i) {
    if (i >= int(nonNeg.size()))
      break;
    if (!cnt[nonNeg[i]])
      ret += 1 + (i + 1 < int(neg.size()));
    else
      --cnt[nonNeg[i]];
  }
  cout << ret;
  return 0;
}

void fastInOut() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL), cout.tie(NULL);
}
