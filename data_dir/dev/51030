#include <bits/stdc++.h>

using namespace std;

typedef pair < int, int > pii;
typedef long long ll;

const int N = 4e5 + 10;
const int MAXVAL = 1e7;

int n , a[N],up[2][MAXVAL+2],down[2][MAXVAL+2],freq[2][MAXVAL+2];

int fl(int bit, int val){
	return ((1<<bit)-1)&val;
}

inline int dw(int bit,int val){
	val = min(val,MAXVAL);
	return down[bit][val];
}

inline int uup(int bit,int val){
	if(val > MAXVAL)return 0;
	return up[bit][val];
}

int main() {
	cin >> n;
	for (int i = 1; i <= n; ++i){
		scanf("%d",&a[i]);
	}
	ll ans = 0;
	for(int bit = 0; (1<<bit) <= 2*MAXVAL;++bit){
		ll allFreq = 0;
		for(int i = 1; i <= n;++i){
			int filterMe = fl(bit,a[i]);
			int bitVal = ((1<<bit)&(a[i])) > 0;
			freq[bitVal][filterMe]++;
		}

		for(int it = 0;it < 2;++it){
			for(int i = MAXVAL; i > 0;--i){
				up[it][i] = freq[it][i]+up[it][i+1];
			}
			for(int i = 0; i <= MAXVAL;++i){
				down[it][i] = freq[it][i];
				if(i)down[it][i] += down[it][i-1];
			}
		}
		for(int i = 1; i <= n;++i){
			int bitVal = ((1<<bit)&(a[i])) > 0;
			int mf = fl(bit,a[i]);
			int myBitval =(1<<bit);
			int rem = myBitval - mf;

			if(bitVal == 0){
				allFreq += dw(1,rem-1);
				allFreq += uup(0,rem);
			//	cout << rem-1 << " " << rem << " "<< down[1][rem-1] << " " << up[0][rem] << endl;
			}else if(bitVal == 1){
				allFreq += dw(0,rem-1);
				allFreq += uup(1,rem);
			}
			allFreq -= ((a[i]+a[i])&(1<<bit)) > 0;
		}
		assert(allFreq%2 == 0);
		allFreq /= 2;
		if(allFreq%2 == 1){
			ans += (1<<bit);
		}

		for(int i = 1; i <= n;++i){
			int filterMe = fl(bit,a[i]);
			int bitVal = ((1<<bit)&(a[i])) > 0;
			freq[bitVal][filterMe]--;
		}

	}
	cout << ans << endl;
  return 0;
}