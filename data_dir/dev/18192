#include <bits/stdc++.h>

using namespace std;

#define DIM 300009
#define INF 3e15+9
#define amen exit(0)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);

long long i,j,k,m,nt,res,kilk,n,l;

priority_queue<pairll,vector<pairll>,greater<pairll> >q;

vector<pair<pairll,long long> >a[DIM];

set<long long>cnt;

long long vs[DIM],vis[DIM];

void dfs(long long v,long long w){
    vs[v]=1;
    for(auto to:a[v]){
        if(vs[to.fi.se]==0 && vis[to.fi.se]==w+to.fi.fi){
            cnt.insert(to.se);
            if(cnt.size()==kilk)return;
            dfs(to.fi.se,w+to.fi.fi);
            if(cnt.size()==kilk)return;
        }
    }
}

int main()
{
    fast;

    cin>>n>>m>>kilk;
    if(kilk==0)return cout<<0<<endl,0;

    for(i=1;i<=m;i++){
        cin>>k>>l>>j;
        a[k].push_back({{j,l},i});
        a[l].push_back({{j,k},i});
    }

    for(i=1;i<DIM;i++)vis[i]=INF;

    q.push({0,1});

    vis[1]=0;

    while(!q.empty()){
        long long v=q.top().se,w=q.top().fi;
        q.pop();
        if(vs[v]!=0)continue;
        vs[v]=1;
        sort(a[v].begin(),a[v].end());
        reverse(a[v].begin(),a[v].end());
        for(auto to:a[v]){
            if(w+to.fi.fi<vis[to.fi.se] && vs[to.fi.se]==0){
                vis[to.fi.se]=to.fi.fi+w;
                q.push({vis[to.fi.se],to.fi.se});
            }
        }
    }

    //for(i=1;i<=n;i++)cout<<vis[i]<<endl;

    memset(vs,0,sizeof(vs));

    dfs(1,0);

    cout<<cnt.size()<<endl;

    for(auto to:cnt)cout<<to<<' ';
    cout<<endl;

    amen;
}
