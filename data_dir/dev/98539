#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <assert.h>
#include <fstream>
#include <iomanip>
#include <bitset>
#include <string>
#include <cstdio>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <map>

using namespace std;

const int N = 61;

long long dp[N][2];
long long a, b;

int getBit(long long x, int j)
{
	if ((x & (1ll << j)))
		return 1;
	else
		return 0;
}


int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif		
	memset(dp, 0, sizeof(dp));
	scanf("%I64d%I64d", &a, &b);
	dp[60][0] = 1;
	for (int i = 59; i >= 0; --i)
	{
		int c1 = getBit(a, i);
		int c2 = getBit(b, i);
		if (c1 == 1 && c2 == 1)
		{
			dp[i][0] = 2 * dp[i + 1][0];
			dp[i][1] = 0;
		}
		if (c1 == 0 && c2 == 1)
		{
			dp[i][0] = 0;
			dp[i][1] = 2 * dp[i + 1][1];
		}
		if (c1 == 1 && c2 == 0)
		{
			dp[i][0] = 0;
			dp[i][1] = dp[i + 1][0] + dp[i + 1][1];
		}
		if (c1 == 0 && c2 == 0)
		{
			dp[i][0] = dp[i + 1][0] + dp[i + 1][1];
			dp[i][1] = 0;
		}
	}
	if (a == b)
		cout << dp[0][0] - 2;
	else
		cout << dp[0][0];

    return 0;
}