/*
 * test.cpp
 *
 *
 *      Author: Fireworks
 */

#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<iomanip>
#include<fstream>
#include<bitset>
#include<cstring>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>

using namespace std;

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
long long mod = 1000000007LL;
long long base = 37;
long long large = 1000000000000000000LL;


int main(){

	int n;
	long long m;
	cin>>n>>m;
	vector<vector<long long> > adj(4,vector<long long>(0,0));
	for(int i=0;i<n;i++){
		int w;
		long long c;
		cin>>w>>c;
		adj[w].push_back(c);
	}
	for(int i=1;i<=3;i++){
		sort(adj[i].begin(),adj[i].end());
		reverse(adj[i].begin(),adj[i].end());
	}

	vector<long long> dp(m+10,0LL);
	vector<ii> opt(m+10,ii(-1,-1));
	for(long long c=1;c<=m;c++){
		dp[c]=dp[c-1];
		opt[c]=opt[c-1];
		if(c>=1){
			ii pre = opt[c-1];
			if(pre.first+1<(int)adj[1].size()){
				long long re = dp[c-1]+adj[1][pre.first+1];
				if(dp[c]<re){
					dp[c]=re;
					pre.first++;
					opt[c]=pre;
				}
			}
		}
		if(c>=2){
			ii pre = opt[c-2];
			if(pre.second+1<(int)adj[2].size()){
				long long re = dp[c-2]+adj[2][pre.second+1];
				if(dp[c]<re){
					dp[c]=re;
					pre.second++;
					opt[c]=pre;
				}
			}
		}
	}

	vector<long long> pre = adj[3];
	for(int i=1;i<(int)pre.size();i++) pre[i]+=pre[i-1];
	long long ans = 0;
	for(int i=0;i*3<=m&&i<=(int)pre.size();i++){
		int remain = m-i*3;
		long long t = 0;
		if(i>0) t=pre[i-1];
		ans=max(ans,t+dp[remain]);
	}
	cout<<ans<<endl;



	/*int totalcase;
	int testcase=0;
	cin>>totalcase;
	ofstream out;
	out.open("result.txt");

	while(totalcase--){
		testcase++;
		out<<"Case #"<<testcase<<": ";
		cout<<testcase<<": "<<endl;

		//GOGOGO


		//END
	}
	out.close();*/

	return 0;
}
