#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end();++it)
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef long long ll;
const int INF = ~(1<<31);
const double pi = acos(-1);

ll memo[100020][3];

int n;
vi cost;
vector<string> k;

ll in = 100000000000020LL;

ll dp(int at, int sw) {
	if(at >= n) return 0;
	if(at == 0) {
		ll first = dp(at+1,0)+cost[at];
		ll second = dp(at+1,1);
		if(first < 0) return second;
		if(second < 0) return first;
		return min(first,second);
	} else {
		if(memo[at][sw] != -1) return memo[at][sw];
		ll bst = in;
		if(sw == 0) {
			// swap
			string first = k[at-1];
			reverse(first.begin(), first.end());
			string second = k[at];
			reverse(second.begin(), second.end());
			if(first <= k[at]) {
				bst = min(bst,dp(at+1,1));
			} 
			if(first <= second) {
				bst = min(bst,dp(at+1,0)+cost[at]);
			}
		} else {
			string second = k[at];
			reverse(second.begin(), second.end());
			if(k[at-1] <= k[at]) {
				bst = min(bst,dp(at+1,1));
			} 
			if(k[at-1] <= second) {
				bst = min(bst,dp(at+1,0)+cost[at]);
			}
		}

		return memo[at][sw] = bst;
	}
	
}

int main() {
	cin.sync_with_stdio(false);
	memset(memo,-1,sizeof(memo));
	cin >> n;
	rep(i,0,n) {
		int c;
		cin >> c;
		cost.push_back(c);
	}
	rep(i,0,n) {
		string s;
		cin >> s;
		k.push_back(s);
	}
	ll bst = dp(0,0);
	if(bst >= in) cout << -1 << endl;
	else cout << bst << endl;
	return 0;
}

