 /*
    __                      _    _            __                 __
   / /_/\__        __ _    | | _| | __     _  \ \       __/\__  / /
  / /\    /       / _` |   | |/ / |/ /    (_)  | |      \    / / / 
 / / /_  _\      | (_| |   |   <|   <      _   | |      /_  _\/ /  
/_/    \/         \__,_|___|_|\_\_|\_\    (_)  | |        \/ /_/   
                      |_____|                 /_/                  

*/
#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
#define ld double
using namespace std;
const int N = 1e6 + 5;
const int MOD = 1e9 + 7;

ld first[2][3], second[2][3], pt[2][2], pt1[2][2];

void calc(ld x, ld y, ld xx, ld yy, ll idx){
  first[idx][0] = y - yy;
  first[idx][1] = xx - x;
  first[idx][2] = x * yy - xx * y;
}

void calc1(ld x, ld y, ld xx, ld yy, ll idx){
  second[idx][0] = y - yy;
  second[idx][1] = xx - x;
  second[idx][2] = x * yy - xx * y;
}

ld dist(ld x, ld y, ld xx, ld yy){
  return sqrtl((xx - x) * (xx - x) + (yy - y) * (yy - y));
}

int main(){
  fast;
  ld a, b, c, x, y, xx, yy;
  cin >> a >> b >> c;
  cin >> x >> y >> xx >> yy;
  ld mx = abs(xx - x) + abs(yy - y);
  calc(x, y, x, y + 1, 0);
  calc(x, y, x + 1, y, 1);
  calc1(xx, yy, xx, yy + 1, 0);
  calc1(xx, yy, xx + 1, yy, 1);
  pt[0][1] = (a * first[0][2] - c * first[0][0]) / (b * first[0][0] - a * first[0][1]);
  pt[0][0] = (c * first[0][1] - b * first[0][2]) / (b * first[0][0] - a * first[0][1]);

  pt[1][1] = (a * first[1][2] - c * first[1][0]) / (b * first[1][0] - a * first[1][1]);
  pt[1][0] = (c * first[1][1] - b * first[1][2]) / (b * first[1][0] - a * first[1][1]);

  pt1[0][1] = (a * second[0][2] - c * second[0][0]) / (b * second[0][0] - a * second[0][1]);
  pt1[0][0] = (c * second[0][1] - b * second[0][2]) / (b * second[0][0] - a * second[0][1]);

  pt1[1][1] = (a * second[1][2] - c * second[1][0]) / (b * second[1][0] - a * second[1][1]);
  pt1[1][0] = (c * second[1][1] - b * second[1][2]) / (b * second[1][0] - a * second[1][1]);


  mx = min(mx, dist(x, y, pt[0][0], pt[0][1]) + dist(pt[0][0], pt[0][1], pt1[0][0], pt1[0][1]) + dist(pt1[0][0], pt1[0][1], xx, yy));
  mx = min(mx, dist(x, y, pt[0][0], pt[0][1]) + dist(pt[0][0], pt[0][1], pt1[1][0], pt1[1][1]) + dist(pt1[1][0], pt1[1][1], xx, yy));
  mx = min(mx, dist(x, y, pt[1][0], pt[1][1]) + dist(pt[1][0], pt[1][1], pt1[0][0], pt1[0][1]) + dist(pt1[0][0], pt1[0][1], xx, yy));
  mx = min(mx, dist(x, y, pt[1][0], pt[1][1]) + dist(pt[1][0], pt[1][1], pt1[1][0], pt1[1][1]) + dist(pt1[1][0], pt1[1][1], xx, yy));
  cout << fixed << setprecision(10) << mx;



  
  return 0;
}