#include <bits/stdc++.h>
using namespace std;

#define sz(a) int(a.size())

int main ()  {
	int n,m,cl,ce,v, q;
	scanf("%d%d%d%d%d",&n,&m,&cl,&ce,&v);

	vector <int> posL (cl), posE (ce);
	for (int &t : posL) scanf("%d",&t);
	for (int &t : posE) scanf("%d",&t);

	scanf("%d",&q);
	while (q--) {
		int x1,y1,x2,y2;
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);

		int ans = 1e9;
		if (x1 == x2) ans = abs(y1-y2);
		else {
			int pL = upper_bound(posL.begin(),posL.end(),y1)-posL.begin();
			if (pL != sz(posL)) {
				int tDis = posL[pL]-y1 + abs(x2-x1) + abs(posL[pL]-y2);
				ans = min(ans,tDis);
			}
			pL--;
			if (pL >= 0) {
				int tDis = abs(posL[pL]-y1) + abs(x2-x1) + abs(posL[pL]-y2);
				ans = min(ans,tDis);
			}
			int pE = upper_bound(posE.begin(),posE.end(),y1)-posE.begin();
			if (pE != sz(posE)) {
				int tDis = posE[pE]-y1 + int(abs(x2-x1)+v-1)/v + abs(posE[pE]-y2);
				ans = min(ans,tDis);
			}
			pE--;
			if (pE >= 0) {
				int tDis = abs(posE[pE]-y1) + int(abs(x2-x1)+v-1)/v + abs(posE[pE]-y2);
				ans = min(ans,tDis);
			}
		}
		printf("%d\n",ans);
	}

}
