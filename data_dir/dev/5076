#include<bits/stdc++.h>
using namespace std;
#define maxn 200010
#define ll long long int
#define pi pair<ll,ll>
#define pii pair<pi,ll>
#define f first
#define s second
#define rep(i,n) for(int i=0;i<n;i++)
#define pb push_back
#define maxn 501
#define MAXPOW 60
bitset<maxn>M[MAXPOW+1][2][maxn];
bitset<maxn>Mt[MAXPOW+1][2][maxn];
bool reachable[maxn+1];
bool nr[maxn+1];
int main() {

    int n,m;
    cin >> n >> m;
    int u,v,t;
    rep(i,m) {
        cin >> u >> v >> t;
        M[0][t][u].set(v);
        Mt[0][t][v].set(u);
    }
    for(int i=1;i<=MAXPOW;i++) {
        for(int t=0;t<2;t++) {
            for(int u=1;u<=n;u++) {
                for(int v=1;v<=n;v++) {
                    M[i][t][u][v] = (M[i][t][u][v] | (M[i-1][t][u]&Mt[i-1][1-t][v]).any());
                }
            }
        }
        rep(t,2) {
            for(int u=1;u<=n;u++) {
                for(int v=1;v<=n;v++) {
                    if(M[i][t][u][v]) {
                        Mt[i][t][v].set(u);
                    }
                }
            }
        }
    }
    ll ans = 0;
    int flag = 0;
    reachable[1]=1;
    for(int i=MAXPOW-1;i>=0;i--) {
        rep(j,n+1) {
            nr[j] = 0;
        }
        bool added = 0;
        for(int u=1;u<=n;u++) {
            if(reachable[u]) {
                for(int v=1;v<=n;v++) {
                    if(M[i][flag][u][v]) {
                        nr[v] = 1;
                        added = 1;
                    }
                }
            }
        }
        if(added) {
            rep(j,n+1) {
                reachable[j] = nr[j];
            }
            flag ^= 1;
            ans+=(1LL<<i);
        }
    }
    if(ans>1e18) {
        cout << -1;
        return 0;
    }
    cout << ans ;
}
