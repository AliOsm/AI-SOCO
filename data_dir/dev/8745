#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/**------------------------------------BITMASK------------------------------------------**/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/**-----------------------------------------------------------------------------------------------**/

/**-----------------------------DIRECTION_ARRAY-------------------------**/
///------FOUR_DIRECTION---------///
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


///------EIGHT_DIRECTION---------///
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/**--------------------------------------------------------------------------------------**/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}


/*****int exgcd(int A, int B, int *X, int *Y){


    int x2, y2, x1, y1, x, y, r, r1, r2, q;
    x2=1; y2=0;
    x1=0; y1=1;
    for(r2=A, r1=B; r1!=0 ; r2=r1, r1=r, x2=x1, y2=y1, x1=x, y1=y){

        q=r2/r1;
        r=r2%r1;
        x=x2-(x1*q);

        y=y2-(y1*q);
    }
    *X=x2;
    *Y=y2;
    return r2;

}******/




///-----------------------------START FROM HERE--------------------------------------///

map<ll,ll>mp, mp2;
ll arr[200005], arrr[200005];
ll brr[500005];
ll ans[200005];
set<ll>st,st3, st2;
set<ll>::iterator it;

int main(){

    int n;
    scanf("%d", &n);

    for(int i=1; i<=n; i++){

        scanf("%lld %lld", &arr[i], &arrr[i]);
        st.insert(arr[i]);
        st.insert(arrr[i]+1);
        //st2.insert(arr[i]);
        st2.insert(arr[i]);
        st2.insert(arrr[i]+1);
    }
    int mx=st.size();

    it=st.begin();
    for(int i=1; it!=st.end(); it++, i++){

        ll z=*it;
        mp[z]=i;
        mp2[i]=z;
    }
    for(int i=1; i<=n; i++){

        brr[mp[arr[i]]]++;
        brr[mp[arrr[i]+1]]--;

    }
    int z=0;

    for(int i=1; i<=mx; i++){

        z+=brr[i];
       ll k=1;
       it=st2.upper_bound(mp2[i]);
      ll pp=mp2[i]+1;
      ll zzz=-1;
      if(it!=st2.end())zzz=*it;
      if(zzz!=-1)k+=(zzz-pp);
        //cout<<i<<" "<<mp2[i]<<" "<<pp<<" "<<zzz<<" "<<z<<endl;
        ans[z]+=k;

    }
    for(int i=1; i<=n; i++)printf("%lld ", ans[i]);

}
