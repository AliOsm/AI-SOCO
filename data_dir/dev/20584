#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<map>
#include<queue>
#include<iterator>
using namespace std;
#define FOR(i,s,e) for(int i = (s); i < (e); i++)
#define FOE(i,s,e) for(int i = (s); i <= (e); i++)
#define FOD(i,s,e) for(int i = (s); i >= (e); i--)
#define CLR(a) memset(a,0,sizeof(a))
#define ll long long
#include<ctime>
#include<cmath>
#include<vector>
#include<iostream>

int n, m, x, y, z, k, w, a, b;
char s[55];
int A[55][55];
int B[55][55];

int main ()
{
	scanf("%d", &n);
	FOR(i, 0, n)
	{
		scanf("%s", s);
		FOR(j, 0, n) A[i][j] = s[j] - 48;
	}
	
	x = -1;
	
	FOR(i, 0, n) FOR(j, 0, n)
	{
		if (A[i][j] == 4) { x = i; y = j; goto iii; }
	}
	
	iii:
	
	FOD(i, n - 1, 0) FOD(j, n - 1, 0)
	{
		if (A[i][j] == 4) { a = i; b = j; goto jjj; }
	}
	
	jjj:
	
	if (x == -1) { printf("No\n"); return 0; }
	
//	printf("%d %d %d %d\n", x, y, a, b);
	
	FOE(i, x, a) FOE(j, y, b)
	{
		if (A[i][j] != 4) { printf("No\n"); return 0; }
	}
	
	if (y - 1 >= 0)
	{
		FOE(i, x, a) if (A[i][y - 1] != 2) { printf("No\n"); return 0; }
	}
	
	if (b + 1 < n)
	{
		FOE(i, x, a) if (A[i][b + 1] != 2) { printf("No\n"); return 0; }
	}
	
	if (x - 1 >= 0)
	{
		FOE(i, y, b) if (A[x - 1][i] != 2) { printf("No\n"); return 0; }
	}
	
	if (a + 1 < n)
	{
		FOE(i, y, b) if (A[a + 1][i] != 2) { printf("No\n"); return 0; }
	}
	
	if (x - 1 >= 0 && y - 1 >= 0 && A[x - 1][y - 1] != 1) { printf("No\n"); return 0; }
	if (x - 1 >= 0 && b + 1 < n && A[x - 1][b + 1] != 1) { printf("No\n"); return 0; }
	if (a + 1 < n && y - 1 >= 0 && A[a + 1][y - 1] != 1) { printf("No\n"); return 0; }
	if (a + 1 < n && b + 1 < n && A[a + 1][b + 1] != 1) { printf("No\n"); return 0; }
	
	FOR(i, 0, n) FOR(j, 0, n)
	{
		if (i >= x - 1 && i <= a + 1 && j >= y - 1 && j <= b + 1) continue;
		if (A[i][j] != 0) { printf("No\n"); return 0; }
	}
	
	printf("Yes\n");
	return 0;
}