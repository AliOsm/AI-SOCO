#include<bits/stdc++.h>
#define fi first
#define se second
#define FOR(a) for(int i=0;i<a;i++)
#define sc(a) scanf("%d",&a)
#define show(a) cout<<a<<endl;
#define show2(a,b) cout<<a<<" "<<b<<endl;
#define show3(a,b,c) cout<<a<<" "<<b<<" "<<c<<endl;
using namespace std;

typedef long long ll;
typedef pair<ll, ll> P;
typedef pair<P, int> LP;
const ll inf = 1e17 + 10;
const int N = 1e6 + 10;
const ll mod = 998244353;

map<string, int>ml;



ll b[N], vis[N], po[N], num[N], t, n, m, x, y, k, f[N];
ll ex, ey, cnt, ans, sum, flag;
ll dist[N];
ll dp[N];

vector<int> v[N];
map<int, int> mp;
P a[N];
struct node
{
	ll x,y,w;
}edge[N];
bool cmp (node a,node b)
{
	return a.w<b.w;
}
ll fid(ll x)
{
	if(f[x]==x) return x;
	else return f[x]=fid(f[x]);
}

int main()
{
	ios::sync_with_stdio ( false );
	cin.tie ( 0 );


	for(int i=1;i<=N;i++) f[i]=i;
	cin>>n>>m;
	for(int i=1;i<=n;i++)
	{
		cin>>a[i].fi;
		a[i].se=i;
	}
	sort(a+1,a+n+1);
	for(int i=2;i<=n;i++)
	{
		edge[++cnt].x=a[1].se;
		edge[cnt].y=a[i].se;
		edge[cnt].w=a[1].fi+a[i].fi;
	}
	for(int i=1;i<=m;i++)
	{
		cin>>x>>y>>k;
		edge[++cnt].x=x;
		edge[cnt].y=y;
		edge[cnt].w=k;
	}
	sort(edge+1,edge+cnt+1,cmp);

	for(int i=1;i<=cnt;i++)
	{
		if(fid(edge[i].x)!=fid(edge[i].y))
		{
			sum++;
			ans+=edge[i].w;
			f[fid(edge[i].x)]=fid(edge[i].y);
			if(sum==n-1) break;
		}
	}
	cout<<ans<<endl;

}
