/* 292D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 505;
const int maxm = 1e4+5;
int r[maxm];
int u[maxm], v[maxm];
int fa[maxn];
bool mark[maxm];

int find(int x) {
	if (x == fa[x])
		return x;
	return fa[x] = find(fa[x]);
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n, m;
	int nr = 0;
	
	scanf("%d %d", &n, &m);
	rep(i, 1, m+1) {
		scanf("%d %d", &u[i], &v[i]);
	}
	
	rep(i, 1, n+1)
		fa[i] = i;
		
	int fx, fy;
	
	rep(i, 1, m+1) {
		fx = find(u[i]);
		fy = find(v[i]);
		if (fx != fy) {
			r[nr++] = i;
			mark[i] = true;
			fa[fx] = fy;
		}
	}
	
	rep(i, 1, n+1)
		fa[i] = i;
	per(i, 1, m+1) {
		fx = find(u[i]);
		fy = find(v[i]);
		if (fx != fy) {
			if (!mark[i]) {
				r[nr++] = i;
				mark[i] = true;
			}
			fa[fx] = fy;
		}
	}
	
	int q;
	int L, R;
	int ans;
	
	
	rep(i, 1, n+1)
		fa[i] = i;
	scanf("%d", &q);
	while (q--) {
		scanf("%d %d", &L, &R);
		rep(i, 0, nr) {
			if (r[i]<L || r[i]>R) {
				fx = find(u[r[i]]);
				fy = find(v[r[i]]);
				if (fx != fy)
					fa[fx] = fy;
			}
		}
		
		ans = 0;
		rep(i, 1, n+1) {
			if (fa[i] == i)
				++ans;
			else
				fa[i] = i;
		}
		printf("%d\n", ans);
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
