//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
char str[100];
int vis[100];

int main()
{
    int n, k;
    ni(n), ni(k);
    scanf("%s", str);
    if (k > 13)
        return !printf("-1\n");
    for (int i = 0; i < n; i++)
        vis[str[i] - 'a'] = 1;
    int ans = INF;
    for (int i = 0; i < 26; i++)
    {
        int r = i, cnt = 0, sm = 0;
        while (cnt < k && r < 26)
        {
            while (r < 26 && !vis[r]) r++;
            if (r == 26) break;
            sm += r + 1;
            r += 2;
            cnt++;
        }
        if (cnt != k)
            continue;
        ans = min(ans, sm);
    }
    if (ans == INF)
        ans = -1;
    pri(ans);
    return 0;
}
