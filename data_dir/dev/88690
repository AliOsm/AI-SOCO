#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (ll)v.size()
#define UNVISITED -1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcnt(x)

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef unsigned int ui;

const double PI = acos(-1.0);

int dx[] = { 0, 0, 1, -1, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

const int MAX = 105, MAXL = 3005, MOD = 1e9 + 7;
int n, l, a[MAX], b[MAX];
ll memo[MAXL][MAX][2];

ll solve(int rl, int type, bool flipped) {
	if (rl < 0)
		return 0;
	if (rl == 0)
		return 1;
	ll &ret = memo[rl][type][flipped];
	if (~ret)
		return ret;
	ret = 0;
	for (int i = 0; i < n; ++i)
		if (type == 101) {
			ret += (solve(rl - a[i], i, 0) % MOD);
			if (a[i] != b[i])
				ret += (solve(rl - b[i], i, 1) % MOD);
			ret %= MOD;
		} else {
			if (i != type) {
				if (flipped) {
					if (a[i] == a[type])
						ret += (solve(rl - a[i], i, 0) % MOD);
					else if (b[i] == a[type])
						ret += (solve(rl - b[i], i, 1) % MOD);
					ret %= MOD;
				} else {
					if (a[i] == b[type])
						ret += (solve(rl - a[i], i, 0) % MOD);
					else if (b[i] == b[type])
						ret += (solve(rl - b[i], i, 1) % MOD);
					ret %= MOD;
				}
			}
		}
	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d%d", &n, &l);
	for (int i = 0; i < n; ++i)
		scanf("%d%d", &a[i], &b[i]);
	CLR(memo, -1);
	printf("%lld", solve(l, 101, 0) % MOD);
}

