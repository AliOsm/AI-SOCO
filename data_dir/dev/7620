#include<bits/stdc++.h>
#define P(x,y) make_pair(x,y)
using namespace std;
const int MX=300 , MXL = 19;
int n , m , prior[MX] , arr[MX];
long long dp[MX][MX];
long long K;
vector < pair < int , int > > sorted;
long long calc(int x , int sum){
    if(sum < 0) return 0;
    if(x == n + m){
        if(sum) return 0;
        else return 1;
    }
    long long &ret = dp[x][sum]; if(ret != -1) return ret;
    ret = 0;
    if(arr[x] != 0){
        ret = calc(x+1 , sum + arr[x]);
        return ret;
    }
    long long r1 = calc(x + 1 , sum - 1);
    long long r2 = calc(x+1 , sum + 1);
    if(K - r1 <= r2) ret = K;
    else ret = r1 + r2;
    return ret;
}

int main(){
    fill(prior , prior + MX , (1<<30));
    scanf("%d %d",&n,&m); cin>>K;
    for(int j=1;j<=n;j++){
        for(int i=1;i<=m;i++){
            int xx;
            scanf("%d",&xx);
            prior[j+i] = min(prior[j+i] , xx);
        }
    }
    //sorted.push_back({-1 , -1});
    for(int j=2;j<=n+m;j++)
        sorted.push_back({prior[j] , j});
    sort(sorted.begin() , sorted.end());
    memset(arr , 0 , sizeof(arr));
    for(auto pp : sorted){
        int idx = pp.second;
        --idx;
        arr[idx] = 1;
        memset(dp , -1 , sizeof(dp));
        long long theta = calc(1 , 0);
        if(theta >= K) continue;
        K -= theta;
        arr[idx] = -1;
    }
    /*for(int j=2;j<=n+m;j++)
        cout<<arr[j]<<' ';
    cout<<endl;*/
    for(int j=1;j<=n;j++){
        for(int i=1;i<=m;i++){
            if(arr[i+j-1] == 1) putchar('(');
            else putchar(')');
        }
        puts("");
    }
}
