/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskB {
private:
    int sod(int x) {
        int res = 0;
        while (x) {
            res += x % 10;
            x /= 10;
        }
        return res;
    }
public:
    void solve(istream& in, ostream& out) {
        int k;
        in >> k;
        for (int j = 0; ; ++j) {
            if (sod(j) == 10) {
                if (--k == 0) {
                    out << j << "\n";
                    return;
                }
            }
        }
    }
};


int main() {
	std::ios::sync_with_stdio(false); cin.tie(nullptr);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
