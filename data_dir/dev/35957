#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <queue>
#define pb push_back
#define mp make_pair
#define int long long
#pragma GCC optimize("O3")
long long pow(int a,int b) {
    if (b==0 || a==1) return 1;
   
    if (b%2==0) { long long k=pow(a,b/2); return (k*k); }
    else { long long k=pow(a,b/2); return k*k*a; }
}
long long powmod(long long a,long long b,long long mod) {
    if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
   
    if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
    else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
}
long long gcd(long long a, long long b) {
    if (a==0) return b;
    if (b==0) return a;
    if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
}
int prime(int p) { // 1 - простое
    for (int i=2;i*i<=p;i++) {
        if (p%i==0 && i<p) return 0;  
    }
    return 1;
}
long long sqr(long long i) {
    return i*i;
}
using namespace std;

signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
     
     /* --------- */
int a;
cin>>a;
int m[a];
for (int i=0;i<a;i++) cin>>m[i]; 
int check=1;
for (int i=0;i<a-1;i++) if (m[i+1]<m[i]) check=0; 
if (check==1) {cout<<"yes\n1 1"; return 0; }
int min=-1;
int max=0;
for (int i=0;i<a-1;i++) {if (m[i+1]<m[i]) { max=i; if (min==-1) min=i; } }
check=1; 
//cout<<min<<" "<<max; 
int m1[a]; 
vector <int> ans; 
for (int i=min;i<=max;i++) if (m[i]<=m[i+1]) check=0; 
for (int i=0;i<a;i++) {
    if (i<min || i>max+1) m1[i]=m[i]; else ans.push_back(m[i]); 
    
}
reverse(ans.begin(),ans.end()); 
for (int i=min;i<min+ans.size();i++) m1[i]=ans[i-min]; 
for (int i=0;i<a-1;i++) if (m1[i+1]<m1[i]) check=0; 
if (check==1) cout<<"yes\n"<<min+1<<" "<<max+2<<"\n"; else cout<<"no";
   /* --------- */
    return 0;
}