#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <set>
#include <algorithm>
#include <cassert>
#include <queue>
#include <map>
#include <functional>
#include <utility>
#include <iostream>
#include <string>
#include <memory>
#include <cmath>
#include <cctype>
#include <iomanip>

using namespace std;

typedef long long ll;
typedef ::std::pair<ll, ll > pll;
typedef ::std::vector< pll > vll;
typedef ::std::vector<int> vi;

#define sz(x)   ( ( int ) ( ( x ).size() ) )
#define FOR(i,a,b)   for(int i = (a), b__ = (b); i <= b__; ++i)

static constexpr size_t maxn = 1000001;

static constexpr inline ll gcd( ll x, ll y )noexcept { return y == 0 ? x : gcd(y,x%y); }
static const int MOD = 998244353;
 

int n,a,b;

int solve()
{  
    // a * u + b * v = n
    //  
    
    scanf("%d%d%d",&n,&a,&b);
    
    int u = -1, v = -1;
    for(int i = 0; i * a <= n; ++i){
        int nb = n - i * a;
        if (nb%b == 0){
            u = i;
            v = nb/b;
            break;
        }
    }
    
    // u * a + v * b = n
    if (u == -1 || v == -1){
        return puts("-1"),0;
    }
    
    int p = 0;
    
    vi ans( n ) ;
    
    for(int i = 0; i < u; ++i){
        // p  p + 1 , ... p + a - 1
        // 
        int cur = p;
        for(int j  =1 ; j< a; ++j, ++p)
            ans[p] = p + 1;
        ans[p++] = cur ;
    }
    
    for(int i = 0; i< v; ++i){
        
        int cur = p;
        for(int j = 1; j< b; ++j, ++p){
            ans[p] = p + 1;
        }
        ans[p++] = cur;
    }
    
    for(int e: ans)printf("%d ", 1 + e);
}


int main()
{
#ifndef ONLINE_JUDGE
    freopen( "input.txt", "r", stdin );
    freopen( "output.txt", "w", stdout );
#endif 
    
    ::std::ios::sync_with_stdio(false); ::std::cin.tie(0); ::std::cout.tie(0);
    
    solve();
    
}
