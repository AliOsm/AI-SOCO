/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */


#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define int long long

using namespace std;

class ADistinctDigits {
public:
    bool ok(int x) {
        set<int> s;
        while(x) {
            int d = x%10;
            if(s.find(d) != s.end()) return false;
            s.insert(d);
            x /= 10;
        }
        return true;
    }
	void solve(std::istream& in, std::ostream& out) {
        int l, r; in >> l >> r;
        int res = 0;
        for(int i = l; i <= r; ++i) {
            if(ok(i)) {
                out << i;
                return;
            }
        }
        out << -1;
	}
};


int32_t main() {
	ADistinctDigits solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
