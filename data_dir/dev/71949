#include<bits/stdc++.h>
using namespace std;
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
#define ll long long

template<class T> ostream& operator<<(ostream &os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<" ]";
}
template<class L,class R> ostream& operator<<(ostream &os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}
ll mxm(){return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a,Args... args){return max(a,mxm(args...));}
ll mnm(){return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a,Args... args){return min(a,mnm(args...));}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template<typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
		const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define vll vector<ll>
#define pll pair<ll,ll>
#define ii pair<int,int>
#define vi vector<int>
#define vpll vector<pll>
#define vii vector<ii>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvii vector<vii>
#define vld vector<ld>
#define vvld vector<vld>
#define I insert
#define F first
#define S second
#define pb push_back
#define all(x) x.begin(),x.end()
#define endl "\n"
#define siz(a)	((int)(a).size())

const int mod=1e9+7;
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}
const int N=1e3+5;
int solve(vector<ii> &v){
	int n=v.size();
	int ans=0;
	for(int i=1;i<n;i++){
		if(v[i].F==v[i-1].F)continue;
		int clen=0,j=i,mnf=1e6;
		for(;j<n;j++){
			if(v[j].F!=v[i].F)break;
			clen++;mnf=min(mnf,v[j].S);
		}
		int trav=(i-1>=0);
		if(i-1>=0)mnf=min(mnf,v[i-1].S);
		for(int k=i-2;k>=0;k--){
			if(trav==clen||v[k].F!=v[k+1].F)break;
			trav++;mnf=min(mnf,v[k].S);
		}
		int trav1=(j<n);
		if(j<n)mnf=min(mnf,v[j].S);
		j++;
		for(;j<n;j++){
			if(trav1==clen||v[j].F!=v[j-1].F)break;
			trav1++;mnf=min(mnf,v[j].S);
		}
		if(trav==clen&&trav1==clen)ans+=mnf;
	}
	return ans;
}
int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	int n,m;cin>>n>>m;
	vector<string> mat1(n);
	vvi mat(n),mxr(n,vi(m+1));
	for(int i=0;i<n;i++){
		cin>>mat1[i];
		for(int j=0;j<m;j++)
			mat[i].pb(mat1[i][j]-'a'+1);
	}
	for(int i=0;i<n;i++){
		for(int j=m-1;j>=0;j--)
			if(mat[i][j]==mat[i][j+1])
				mxr[i][j]=1+mxr[i][j+1];
			else mxr[i][j]=1;
	}
	int ans=0;
	for(int j=0;j<m;j++){
		vector<ii> v;
		for(int i=0;i<n;i++){
			v.pb({mat[i][j],mxr[i][j]});
		}
		ans+=solve(v);
	}
	cout<<ans<<endl;
}