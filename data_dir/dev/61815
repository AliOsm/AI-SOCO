#include <bits/stdc++.h>
#define MAX (ll)(2e3 + 4)
#define MOD (ll)(1e9 + 7)
#define PI (double)(3.14159265)

using namespace std;
using ll = long long;
using ld = long double;

int cc[MAX], no[MAX], va[MAX];
bool fl = 1;
vector<int> gr[MAX];

void add (int, int);
void dfs (int, int);

int dfs (int node) {
	vector<int> ve;
	for (int x : gr[node]) {
		ve.push_back (dfs (x));
		add (x, cc[node]);
		cc[node] += ve.back ();	
	}
	if (no[node] > cc[node]) {
		fl = 0;
	}
	cc[node]++;
	if (fl) {
		for (int x : gr[node]) {
			dfs (x, no[node]);
		}
		va[node] = no[node];
	}
	return cc[node];
}

void dfs (int node, int val) {
	if (va[node] >= val) {
		va[node]++;
	}
	for (int x : gr[node]) {
		dfs (x, val);
	}
}

void add (int node, int val) {
	va[node] += val;
	for (int x : gr[node]) {
		add (x, val);
	}
}

int main () {
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++) {
		int x;
		cin >> x >> no[i];
		gr[x].push_back (i);
	}
	dfs (gr[0][0]);
	if (fl) {
		cout << "YES\n";
		for (int i = 1; i <= n; i++) {
			cout << va[i] + 1 << " ";
		}
		cout << '\n';
	}
	else {
		cout << "NO\n";
	}
}
