	//     . .. ... .... ..... be name khoda ..... .... ... .. .     \\

#include <algorithm>
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cassert>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <vector>
#include <cmath>
#include <set>
#include <map>
using namespace std;

inline int in() { int x; scanf("%d", &x); return x; }
const int N = 2002;

struct Segment
{
	int l, r;
	Segment(int l, int r): l(l), r(r) { }
	bool operator <(const Segment &s) const { return (r - l != s.r - s.l ? r - l < s.r - s.l : (l < s.l)); }
};

set <Segment> s;
int n, a, b, k, res;

void add(int l, int r)
{
	if(r - l + 1 >= b)
	{
		s.insert(Segment(l, r));
		res += (r - l + 1)/b;
	}
}

int main()
{
	cin >> n >> a >> b >> k;
	string mp;
	cin >> mp;
	mp += '1';
	int las = 0;
	for(int i = 0; i <= n; i++)
		if(mp[i] == '1')
		{
			add(las, i - 1);
			las = i + 1;
		}
	assert(res >= a);
	vector <int> shots;
	while(res >= a)
	{
		Segment seg = *s.rbegin();
		s.erase(seg);
		int x = (seg.r - seg.l + 1)/b;
		shots.push_back(seg.l + b - 1);
		res -= x;
		add(seg.l + b, seg.r);
	}
	cout << shots.size() << endl;
	for(int i = 0; i < shots.size(); i++)
		cout << shots[i] + 1 << " ";
	cout << endl;
}
