//http://codeforces.com/problemset/problem/510/B

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>

using namespace std;

typedef pair <int, int> pii;
typedef pair <long long, long long> pll;
typedef vector <int> vi;
typedef long long ll;

#define endl "\n"

int n, m;
bool used[55][55];
char mp[55][55];
int dx[4] = { 1, -1, 0, 0 }, dy[4] = { 0, 0, 1, -1 };
string result = "No";

void dfs(int x, int y, int px, int py);

int main()
{
	int ii, jj;
	string str;

	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> n >> m;

	memset(used, 1, sizeof(used));

	for (ii = 1; ii <= n; ii++)
	{
		cin >> str;

		for (jj = 0; jj < m; jj++)
		{
			mp[ii][jj + 1] = str[jj];
			used[ii][jj + 1] = 0;
		}
	}

	for (ii = 1; ii <= n; ii++)
	{
		for (jj = 1; jj <= m; jj++)
		{
			if (!used[ii][jj])
				dfs(ii, jj, ii, jj);
		}
	}

	cout << result << endl;

	return 0;
}

void dfs(int x, int y, int px, int py)
{
	int ii;
	int nx, ny;
	
	if (used[x][y])
	{
		result = "Yes";

		return;
	}

	used[x][y] = 1;

	for (ii = 0; ii < 4; ii++)
	{
		nx = x + dx[ii];
		ny = y + dy[ii];

		if (((nx != px) || (ny != py)) && (mp[nx][ny] == mp[x][y]))
			dfs(nx, ny, x, y);
	}
}