#include <iostream>
#include <vector>
#include <cstdio>
#include <cmath>
#include <map>
#include <cstring>
#include <set>

using namespace std;

#define pb push_back
int color[101010], n, m, cnt = 0, used[150100], ed = 0, x[101010], y[101010];
vector <int> g[151010];
long long f = 0, s = 0, cur = 0, N;

void dfs(int v, int col = 1){
	used[v] = 1;
	color[v] = col;
	for(int i = 0; i < g[v].size(); i++){
		int to = g[v][i];
		if(!used[to]) dfs(to, 3 - col), cur++;
	}
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n;
	N = n;
	for(int i = 0; i < n - 1; i++){
		int x, y;
		cin >> x >> y;
		g[x].pb(y);
		g[y].pb(x);
	}
	dfs(1);
	for(int i = 1; i <= n; i++){
		if(color[i] == 1) f++;
		else if(color[i] == 2) s++;
	}
	cout << N*(N - 1)/2 - (f*(f - 1)/2 + s*(s - 1)/2) - cur;
	return 0;
}