/* 366C */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 105;
const int base = 100000;
const int maxm = 2*base+5;
int a[maxn], b[maxn];
int dp[maxn][maxm];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif

	int n, k, tmp;

	scanf("%d %d", &n, &k);
	rep(i, 1, n+1)
		scanf("%d", &a[i]);
	rep(i, 1, n+1) {
		scanf("%d", &b[i]);
		b[i] *= k;
	}

	rep(i, 0, maxm)
		dp[0][i] = INT_MIN;
	dp[0][base] = 0;
	rep(i, 1, n+1) {
		tmp = a[i] - b[i];
		rep(j, 0, tmp)
			dp[i][j] = dp[i-1][j];
		rep(j, tmp, maxm) {
			dp[i][j] = max(
				dp[i-1][j],	// not use this fruit
				dp[i-1][j-tmp]+a[i]
			);
		}
	}

	int ans = dp[n][base]>0 ? dp[n][base] : -1;
	printf("%d\n", ans);

	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif

	return 0;
}
