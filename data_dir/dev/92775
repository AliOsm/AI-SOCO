#include <bits/stdc++.h>

using namespace std;
const int N = 2e5 + 1;
int n, a[N], b[N];
int mn[N * 4], mx[N * 4];

void build(int l = 1, int r = n, int i = 1) {
	if (l == r) {
		mn[i] = b[r];
		mx[i] = a[r];
		return;
	}
	int mid = (l + r) / 2, li = i * 2, ri = li + 1;
	build(l, mid, li);
	build(mid + 1, r, ri);
	mn[i] = min(mn[li], mn[ri]);
	mx[i] = max(mx[li], mx[ri]);
}
pair<int, int> get(int a, int b, int l = 1, int r = n, int i = 1) {
	if (a > r || b < l)
		return {-1e9, 1e9};

	if (a <= l && r <= b)
		return {mx[i], mn[i]};
	int mid = (l + r) / 2, li = 2 * i, ri = li + 1;
	pair<int, int> left = get(a, b, l, mid, li);
	pair<int, int> right = get(a, b, mid + 1, r, ri);
	return {max(left.first, right.first), min(left.second, right.second)};
}

int getR(int l, int n, bool minR) {
	int lower = l, upper = n, ret = -1;
	while (lower <= upper) {
		int r = (lower + upper) / 2;
		pair<int, int> tmp = get(l, r);
		int maxA = tmp.first;
		int minB = tmp.second;
		if (maxA - minB <= -minR) {
			lower = r + 1;
			if (maxA - minB == 0)
				ret = r;
		} else {
			upper = r - 1;
			if (maxA - minB == 0)
				ret = r;
		}
	}
	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("C:\\Users\\Omar Mohamed\\ClionProjects\\Go\\input.in", "r", stdin);
#endif
	scanf("%d", &n);
	for (int i = 1; i <= n; ++i)
		scanf("%d", a + i);
	for (int i = 1; i <= n; ++i)
		scanf("%d", b + i);
	build();

	long long result = 0;
	for (int l = 1; l <= n; ++l) {
		int maxR = getR(l, n, false);
		if (maxR == -1)
			continue;
		int minR = getR(l, maxR, true);
		if (minR != -1)
			result += maxR - minR + 1;
	}
	printf("%I64d\n", result);
	return 0;
}

