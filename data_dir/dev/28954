/************************* In the name of Allah *************************/
#include <bits/stdc++.h>
using namespace std;

typedef long long       ll;
typedef long double     ld;
typedef string          str;

#define F               first
#define S               second
#define sep             ' '
#define endl            '\n'
#define fast_io          ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);

const ll MAXN = 1e3 + 10, INF = 1e18;
int g[MAXN][MAXN], mark[MAXN][MAXN], check[MAXN][MAXN], ans = 0, n;

void dfs(int x, int y, int cx, int cy){
    if (x == cx && y == cy){
        ans = 1;
        return ;
    }
    mark[x][y] = 1;
    for (int i = -1; i < 2; i++){
        for (int j = -1; j < 2; j++){
            if (0 < x + i && x + i <= n  && 0 < y + j && y + j <= n){
                if (!mark[x + i][y + j] && !check[x + i][y + j]){
                    dfs(x + i, y + j, cx, cy);
                }
            }
        }
    }
    return ;
}

int main(){
    fast_io;
    int ax, ay, bx, by, cx, cy;
    cin >> n >> ax >> ay >> bx >> by >> cx >> cy;
    for (int i = 0; i < MAXN; i++){
        for (int j = 0; j < MAXN; j++){
            mark[i][j] = 0;
            check[i][j] = 0;
        }
    }
    for (int i = 1; i <= n; i++){
        check[ax][i] = 1;
        check[i][ay] = 1;
    }
    for (int i = -1; i < 2; i++){
        for (int j = -1; j < 2; j++){
            check[ax + i][ay + j] = 1;
        }
    }
    int q = ax, w = ay;
    for (; q <= n && w <= n;){
        check[q][w] = 1;
        q++; w++;
    }
    q = ax, w = ay;
    for (; q > 0 && w > 0;){
        check[q][w] = 1;
        q--; w--;
    }
    dfs(bx, by, cx, cy);
    cout << (ans ? "YES" : "NO");
    return 0;
}

/*
 __  __       _         _ _  _____ _           _                __ _
|  \/  |     | |       | (_)/ ____| |         | |              / _(_)
| \  / | __ _| |__   __| |_| (___ | |__   ___ | | _____  _   _| |_ _
| |\/| |/ _` | '_ \ / _` | |\___ \| '_ \ / _ \| |/ / _ \| | | |  _| |
| |  | | (_| | | | | (_| | |____) | | | | (_) |   < (_) | |_| | | | |
|_|  |_|\__,_|_| |_|\__,_|_|_____/|_| |_|\___/|_|\_\___/ \__,_|_| |_|
*/
