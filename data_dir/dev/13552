#include <cstdio>
#include <queue>
#include <utility>
using namespace std;
char b[1010][1010];
int d[1010][1010];
int r, c;
int dy[5] = {1,-1,0,0};
int dx[5] = {0,0,-1,1};
bool inb(int y, int x) {
	return y >= 0 && y < r && x >= 0 && x < c;
}
int main() {
	scanf("%d%d", &r, &c);
	for (int i = 0; i < r; i++) scanf("%s", b[i]);
	queue<pair<int, int> > que;
	int sy, sx;
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			if (b[i][j] == 'E') {
				que.push(make_pair(i, j));
				d[i][j] = 1;
			} else if (b[i][j] == 'S') {
				sy = i, sx = j;
			}
		}
	}
	int ans = 0;
	while (que.size()) {
		int y = que.front().first, x = que.front().second;
		que.pop();
		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i], nx = x + dx[i];
			if (!inb(ny, nx)) continue;
			if (b[ny][nx] == 'T' || d[ny][nx]) continue;
			que.push(make_pair(ny, nx));
			d[ny][nx] = d[y][x] + 1;
		}
	}
	for (int i = 0; i < r; i++) {
		for (int j = 0; j < c; j++) {
			if (d[i][j] && b[i][j] >= '0' && b[i][j] <= '9' && d[i][j] <= d[sy][sx]) ans += b[i][j] - '0';
		}
	}
	printf("%d\n", ans);
	return 0;
}
