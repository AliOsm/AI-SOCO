#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("volunteers.in");ofstream out("volunteers.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    ll a,b,c; cin>>a>>b>>c;
    ll o = a/c+b/c, mn=0;
   // cout<<a/c+1+(b-(c-a%c))/c<<endl;
    if(c-a%c<=b){
        if(a/c+1+(b-(c-a%c))/c>o){
         //   cout<<"L"<<endl;
            o = a/c+1+(b-(c-a%c))/c;
            mn =c-a%c;
        }
    }
   // cout<<o<<endl;
    if(c-b%c<=a){
        if(b/c+1 + (a-(c-b%c))/c>o){
            o = b/c+1 + (a-(c-b%c))/c;
            mn = c-b%c;
        }
        else if(b/c+1 + (a-(c-b%c))/c==o) mn = min(mn, c-b%c);
    }
    cout<<o<<" "<<mn;
}