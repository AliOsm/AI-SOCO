//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define pb push_back
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)
#define ri(x) scanf("%d",&x)
#define rl(x) scanf("%lld",&x)
#define rii(x,y) ri(x), ri(y)
#define rll(x,y) rl(x), rl(y)

#define fst first
#define snd second

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int, int> ii;

const int MAXN = 1e5+5;

int a[MAXN],n,k,cnt1;
vi p, e, ce;

void add(int j){
	if(a[j]==1) cnt1++;
	FOR(i,0,p.size()){
		int aa=a[j];
		while(aa%p[i]==0){
			ce[i]++;
			aa/=p[i];
		}
	}
}

void remove(int j){
	if(a[j]==1) cnt1--;
	FOR(i,0,p.size()){
		int aa=a[j];
		while(aa%p[i]==0){
			ce[i]--;
			aa/=p[i];
		}
	}
}

bool good(){
	if(k==1) return true;
	bool ok=1;
	FOR(i,0,p.size()) if(ce[i]<e[i])ok=0;
	return ok;
}

int main(){
	rii(n,k);
	FOR(i,0,n) ri(a[i]);
	if(k>1){
		int kk=k;
		for(ll i=2; i*i<=kk; i++){
			if(kk%i==0){
				int x=p.size();
				p.pb(i);
				e.pb(0);
				while(kk%i==0){
					kk/=i;
					e[x]++;
				}
			}
		}
		if(kk!=1){
			p.pb(kk);
			e.pb(1);
		}
	}
	ce= vi(e.size(),0);
	int lo=0, hi=1;
	add(lo);
	ll ans = 0;
	if(good()) ans++;
	while(hi<n){
		add(hi++);
		while(good()&&lo+1<hi){
			remove(lo++);
			if(!good()){
				lo--;
				add(lo);
				break;
			}
		}

		if(good()) ans+=lo+1;
	}
	printf("%lld\n",ans);
}