#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef unsigned long long int ulli;
typedef pair<int,int> pii;

#define ones(x) __builtin_popcount(x)
#define onesl(x) __builtin_popcountl(x)
#define onesll(x) __builtin_popcountll(x)

#define pb push_back
#define eb emplace_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define mod 1000000007
#define FastIO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

int Set(int N,int pos)
{
    return N=N | (1<<pos);
}
int reset(int N,int pos)
{
    return N = N & ~(1<<pos);
}
bool check(int N,int pos)
{
    return (bool)(N & (1<<pos));
}

void we_r_done(){cout<<"NO"; exit(0);}

void debug(string mssg){cout<<mssg; exit(0);}

int n,m;
int a[300005];

int cost(int x , int to){

    if(to>=x)return (to-x);

    return (m-x+to);
}

bool fun(int v){

    int last = m-1;

    for(int i=n; i ; i--){

        int now = a[i]+v;
        if(now>last){
            if((now-last) <= v) now = last;
            else{
                if(now>=m){
                    now %= m;
                    if(now>last) now = last;
                }
                else now = a[i];
            }
        }

        if(now>last)return false;
        last = now;
    }

    return true;
}

int main()
{
    ///freopen("output.txt","w",stdout);
    ///freopen("input.txt","r",stdin);

    ///FastIO;
    scn2(n,m);

    for(int i=1;i<=n; i++){
        scn(a[i]);
    }

    int lo = 0 , hi = m, mid;
    int ans = hi;

    while(lo<=hi){

        mid = (lo+hi)/2;

        if(fun(mid)){
            hi = mid-1;
         //   cout<<mid<<" nnn\n";;
            ans = min(ans , mid);
        }
        else lo = mid+1;

        if(mid == lo && lo == hi)break;
    }
    cout<<ans;
    return 0;
    ///return main();
}

///sin and cos expect input in radians not degrees. so use , sin(degrees * pi / 180)
///priority_queue< int, vector< int >, greater< int > > minHeap;
///using bs = bitset<MX>; // how many distinct number can be form?
