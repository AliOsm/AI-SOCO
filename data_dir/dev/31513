#include <bits/stdc++.h>

using namespace std;

const int MaxN = 1e5 + 15;
const int MaxK = 20;
const int INF = 1e9 * 1ll * 1e9;

int a[MaxN], b[MaxN];

int A[MaxN], B[MaxN];

int d[MaxN] = {3, 1, 2, 0};

int get(int i, int j)
{
    cout << "? " << i << ' ' << j << '\n';
    fflush(stdout);
    int res = (d[i] ^ d[j]);
    cin >> res;
    return res;
}

int cnt;

vector <int> answer;

int timer;
int used[MaxN];
int n;

bool good()
{
    for(int i = 0; i < n; ++i)
        if(A[B[i]] != i)
            return false;
    ++timer;
    for(int i = 0; i < n; ++i)
    {
        if(used[A[i]] == timer)
            return false;
        used[A[i]] = timer;
    }
    ++timer;
    for(int i = 0; i < n; ++i)
    {
        if(used[B[i]] == timer)
            return false;
        used[B[i]] = timer;
    }
    return true;
}

void check(int f)
{
    for(int i = 0; i < n; ++i)
        A[i] = (a[i] ^ f);
    for(int i = 0; i < n; ++i)
        B[i] = (b[i] ^ A[0]);
    if(good())
    {
        ++cnt;
        answer.resize(n);
        for(int i = 0; i < n; ++i)
            answer[i] = A[i];
    }
}

int main()
{
//    freopen("input.txt", "r", stdin);
//    ios_base :: sync_with_stdio(false);
//    cin.tie(NULL);

    cin >> n;

    for(int i = 0; i < n; ++i)
    {
        a[i] = get(i, 0);
        b[i] = get(0, i);
    }

    for(int f = 0; f < n; ++f)
        check(f);

    cout << "!\n";
    cout << cnt << '\n';
    for(int i = 0; i < answer.size(); ++i)
        cout << answer[i] << ' ';
    cout << '\n';
    fflush(stdout);

    return 0;
}
