#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
 
double PI = 3.1415926535897932384626433832795;
double EPS = 1e-9;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int, int> pii;
const int MAXN = 1000100;
const int mod = 786433;

inline int mul(int a, int b)
{
	return (a *(int64) b) % mod;
}
 
inline int sum(int a, int b)
{
	a += b;
	if (a >= mod)
		a -= mod;
	return a;
}
 
inline int sub(int a, int b)
{
	a -= b;
	if (a < 0)
		a += mod;
	return a;
}
 

int64 n, m;
int64 pw(int64 base, int64 st)
{
	int64 res = 1;
	for(int i = 0; i < st; ++i)
	{
		res = base * res;
	}
	return res;
}


int64 fun(int64 x)
{
	int64 sum = 0;
	for(int i = 2; pw(i, 3) <= x; ++i)
	{
		sum += x / pw(i, 3); 
	}
	return sum;
}

void solve()
{
	cin >> m;
	
	int64 l = 0, r = 1e17, mid, ans = -1;
	while(l <= r)
	{
		mid = (l + r) >> 1;
		if (fun(mid) >= m)
		{
			r = mid - 1;
			ans = mid;
		}
		else
			l = mid + 1;
	}
	
	if (fun(ans) == m)
		cout << ans;
	else
		cout << -1;
}

 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	
	solve();
 
    return 0;
}   