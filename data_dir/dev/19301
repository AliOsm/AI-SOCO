#include <bits/stdc++.h>
using namespace std;

#define VIC ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfs(x) scanf("%s", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define fst(x) cout << fixed << setprecision(x)
#define mod 998244353
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;

int main()
{
	VIC
	int n, k, c = 0, dir = -1, a[5003], ans = 0, fstplace = 1;
	bool fst = true, vis[5003] = {};
	cin >> n >> k;
	if (n - k < k - 1)
		dir = 1;
	for (int i = 1; i <= n; i++)
		a[i] = 1;
	while (c < n)
	{
		if (fst)
		{
			if (k == 1)
				fstplace = 2;
			fst = false;
			a[fstplace]++;
			a[k]--;
		}
		if (!vis[k])
			ans += a[k] + 1, a[k] = min(a[k] - 1, 0);
		c += !vis[k];
		vis[k] = true;
		k += dir;
		if (k == n + 1 || k == 0)
			dir *= - 1, k += (dir * 2);

		ans++;
	}
	cout << ans;
	return 0;
}
