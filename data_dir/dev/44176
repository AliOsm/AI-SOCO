# include <bits/stdc++.h>

using namespace std;

const int N = 3e4 + 1;

int n, m, q, f[N], a[N];
vector <int> vec;
bitset <N> bit;

int main(){
      scanf("%d %d", &n, &m);

      for(int i = 1; i <= n; i ++){
            scanf("%d", a + i);
            vec.push_back(a[i]);
      }

      f[1] = f[2] = 1;

      for(int i = 3; i <= n; i ++){
            f[i] = (f[i - 1] + f[i - 2]) % m;
      }

      sort(vec.begin(), vec.end());
      vec.resize(unique(vec.begin(), vec.end()) - vec.begin());

      for(int i = 1; i <= n; i ++){
            a[i] = lower_bound(vec.begin(), vec.end(), a[i]) - vec.begin();
      }

      scanf("%d", &q);

      while(q --){
            int l, r, cn = 1;
            long long ans = 0;
            scanf("%d %d", &l, &r);
            for(int i = l; i <= r; i ++){
                  bit[a[i]] = 1;
            }
            for(int i = 0; i < vec.size(); i ++){
                  if(bit[i]){
                        ans = (ans + vec[i] *1ll* f[cn ++]) % m;
                  }
            }
            for(int i = l; i <= r; i ++){
                  bit[a[i]] = 0;
            }
            printf("%I64d\n", ans);
      }
}
