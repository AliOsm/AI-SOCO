#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <algorithm>
#include <cmath>

using namespace std;

#define forn(i,n)for(i=0;i<n;i++)
#define forc(i,c,n)for(i=c;i<=n;i++)
typedef vector<int> vei;
typedef list<int> lii;
typedef vector<long long> vel;
typedef list<long long> lil;


int main() {
	ifstream fin("input.txt");
	int i=0, j=0, k=0,n=0,m,s,d,a,prevjump=-1,curjump=0,savedjump=-1;
	cin>>n>>m>>s>>d;
	vei jump(n);
	vei run(n);
	vei prep(n);
	forn(i,n){
		cin>>prep[i];
	}
	sort(prep.begin(),prep.end());
	forn(i,n){
		curjump=prep[i];
		if(curjump - savedjump -2>=s){
			if(savedjump - prevjump + 2>d){
				cout<<"IMPOSSIBLE"<<endl;
				return 0;
			}
			run[i]=curjump - savedjump -2;
			if(savedjump!=-1)
				jump[i]=savedjump - prevjump +2; 
			prevjump = curjump;
			savedjump = prevjump;
		}
		else{
			if(savedjump ==-1){
				cout<<"IMPOSSIBLE"<<endl;
				return 0;
			}
			savedjump = curjump;
		}
	}
	if(savedjump - prevjump + 2 >d){
		cout<<"IMPOSSIBLE"<<endl;
		return 0;
	}
	forn(i,n){
		if(jump[i])
			cout<<"JUMP "<<jump[i]<<endl;
		if(run[i])
			cout<<"RUN "<<run[i]<<endl;
	}
	cout<<"JUMP "<<savedjump-prevjump+2<<endl;
	
	if(curjump+1!=m)
		cout<<"RUN "<<m-curjump -1<<endl;
	return 0;
}