///                                                     ببِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيم
#include <bits/stdc++.h>
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define sc   scanf
#define pr   printf
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define ld   long double
#define N    300256
#define M    1000000007
#define I    1000000000000000000
#define pdd  pair < ld, ld >
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define rep( a, b, c, d )  for( int a = b; a <= c; a += d )
#define rvv( a, b, c, d )  for( int a = b; a >= c; a -= d )
#define en                 printf( "\n" )
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define srtr( c )          sort( c.rbegin(), c.rend() )
#define numcounts          __builtin_popcount
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
const int dx[ ] = { 1, -1, 0, 0 };
const int dy[ ] = { 0, 0, -1, 1 };
using namespace std;
ll tests;
ll n, a[ N ], ans[ N ];
ll dfs( ll v, ll d )
{
    //cout << v << " " << ans[ v ] << endl;
    ans[ v ] = -1;
    if( a[ v ] != v && !ans[ a[ v ] ] )rt ans[ v ] = dfs( a[ v ], d + 1 );
    else ans[ v ] = d;
    rt d;
}
void solve()
{
    sc( "%I64d", &n );
    rep( i, 1, n, 1 )
    {
        sc( "%I64d", &a[ i ] );
        ans[ i ] = 0;
    }
    rep( i, 1, n, 1 )
    {
        if( ans[ i ] == 0 )
        {
            dfs( i, 1 );
        }
    }
    rep( i, 1, n, 1 )cout << ans[ i ] << " ";
    cout << endl;
}


int main()
{
    sc( "%I64d", &tests );
    while( tests -- )
        solve();

}




