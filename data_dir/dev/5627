#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

long long dp[1000005][20];
int data[20][20];
int ara[20];

#define si(a) scanf("%d",&a)

void solve(int mask)
{
    if(__builtin_popcount(mask)==1){
        dp[mask][__builtin_ctz(mask)]=0;
        return ;
    }
    if(dp[mask][__builtin_ctz(mask)]!=-1)
        return ;
    int i,j;
    for(i=0;i<20;i++){
        if(mask&(1<<i)){
            int nmask=mask&(~(1<<i));
            solve(nmask);
            dp[mask][i]=0;
            for(j=0;j<20;j++){
                if(dp[nmask][j]!=-1){
                    long long temp=data[i][j];
                    temp+=dp[nmask][j];
                    dp[mask][i]=max(dp[mask][i],temp);
                }
            }
        }
    }
    return ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    int n,m,i,k,j;
    memset(dp,-1,sizeof(dp));
    si(n);si(m);si(k);
    memset(data,0,sizeof(data));
    for(i=0;i<n;i++)
        si(ara[i]);
    for(i=0;i<k;i++){
        int a,b,x;
        si(a);si(b);si(x);
        a--;b--;
        data[a][b]=x;
    }
    int mask=(1<<n);
    long long ans=0;
    for(i=0;i<mask;i++){
        if(__builtin_popcount(i)==m){
            solve(i);
            long long temp=0;
            for(j=0;j<20;j++)
                if(i&(1<<j))
                    temp+=ara[j];
            long long tt=0;
            for(j=0;j<20;j++)
                tt=max(tt,dp[i][j]);
            ans=max(ans,temp+tt);
        }
    }
    cout<<ans<<endl;
    return 0;
}
