#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))
#define x(t) get<0>(t)
#define y(t) get<1>(t)
#define z(t) get<2>(t)

template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

typedef long long LL;
typedef tuple<int, int> T2;
typedef tuple<int, int, int> T3;

#define INF (0x3f3f3f3f)

#define MAXN (1005)

int c1[MAXN];
bool c2[MAXN];

int main() {
    int N;
    cin >> N;
    if (N == 1) {
        printf("0\n");
        return 0;
    }
    vector<int> ans;
    ans.PB(2);
    for (int i = 3; i <= N; i++) {
        MEMSET(c1, 0);
        MEMSET(c2, true);
        int x1 = 0;
        for (int a : ans) {
            if (i % a == 0) {
                x1++;
                for (int j = a; j <= i; j += a) c1[j]++;
            } else {
                for (int j = a; j <= i; j += a) c2[j] = false;
            }
        }
        int cnt = 0;
        for (int j = 1; j <= i; j++) {
            if (c1[j] == x1 && c2[j]) {
                cnt++;
            }
        }
        if (cnt > 1) {
            ans.PB(i);
        }
    }
    printf("%d\n", SZ(ans));
    for (int a : ans) printf("%d ", a);
    return 0;
}
