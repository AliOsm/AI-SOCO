#include<bits/stdc++.h>
using namespace std;
int n,k;
class node
{
    public:
        int mnv[10],mxv[10],siz;
        bool operator <(const node &t)const
        {
            for(int i=0;i<k;i++)
                if(mxv[i]>t.mnv[i])return 0;
            return 1;
        }
        node operator +(const node &t)
        {
            node out;
            for(int i=0;i<k;i++)
            {
                out.mxv[i]=max(mxv[i],t.mxv[i]);
                out.mnv[i]=min(mnv[i],t.mnv[i]);
            }
            out.siz=siz+t.siz;
            return out;
        }
}tmp;
set<node> st;
typedef set<node>::iterator it;
int main()
{
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<k;j++)
        {
            scanf("%d",&tmp.mxv[j]);
            tmp.mnv[j]=tmp.mxv[j];
        }
        tmp.siz=1;
        it l=st.lower_bound(tmp),r=st.upper_bound(tmp);
        while(l!=r)
        {
            tmp=tmp+(*l);
            l=st.erase(l);
        }
        st.insert(tmp);
        printf("%d\n",(st.rbegin())->siz);
    }
    return 0;
}