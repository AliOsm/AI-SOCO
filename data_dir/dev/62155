///https://www.youtube.com/watch?v=vOIqVQ76Iug
#include<bits/stdc++.h>

using namespace std;
#define ll long long
#define dbug prllf("I am here\n");
#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
const ll maxn = 1e6+100;

const ll inf = 1e18;
vector < ll > ans[maxn];
ll Z[maxn] , bit[maxn];
bool vis[maxn];
ll mx;

void update(ll ind , ll val){
    while(ind <= mx){bit[ind] += val ; ind += (ind & (-ind));}
}
ll query(ll ind , ll sum = 0){
    while(ind > 0){sum += bit[ind] ; ind -= (ind & (-ind));}
    return sum;
}

ll range(ll l , ll r){
    return query(r) - query(l-1);
}

int main()
{
    fast;
    ll test;
    cin >> test;
    while(test--){
        ll n , k;
        cin >> n >> k;
        string str; cin >> str;
        str = "0" + str;
        ll cur = 0;
        mx = n;
        for(ll i = 0; i<=n; i++)bit[i] = 0;

        for(ll i = 1; i<=n; i++){
            ans[i].clear();
            vis[i] = false;
            if(str[i] == '0')Z[cur++] = i;
            else{
                update(i,1);
            }
        }
        ll p = 0;
        for(ll i = 1; i<=n; i++){
            if(str[i] == '0' and vis[i] == false)p++;
            if(str[i] == '1'){
                while(p<cur){
                    ll nxt = Z[p];
                    if(range(i,nxt) <= k){
                        ans[i].push_back(0);
                        k -= range(i,nxt);
                        vis[nxt] = true;
                        p++;
                    }
                    else break;
                }
            }
        }
        for(ll i = 1; i<=n; i++){
            for(auto v : ans[i])cout << v;
            if(vis[i] == false)cout << str[i];
        }
        cout << endl;
    }



}
