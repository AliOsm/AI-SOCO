#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                              \
    for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
  cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
vector<string> tab;
int us[1010][1010];
int mv[]={1,-1,0,0};
int mh[]={0,0,1,-1};
int n,m;
bool azedou=false;
int dfs(int x, int y){
  if(us[x][y]>0) return us[x][y];
  us[x][y]=-2;
  char c=tab[x][y];
  int r=0;
  char w;
  if(c=='D') w='I';
  else if(c=='I') w='M';
  else if(c=='M') w='A';
  else if(c=='A') w='D';
  for(int i=0;i<4;i++){
    int X=x+mv[i];
    int Y=y+mh[i];
    if(X<0 or X>=n or Y<0 or Y>=m) continue;
    if(tab[X][Y]==w and us[X][Y]==-2) azedou=true;
    else if(tab[X][Y]==w) r=max(dfs(X,Y),r);
  }
  us[x][y]=r+(tab[x][y]=='A');
  return us[x][y];
}
int main()
{
  cin>>n>>m;
  for(int i=0;i<n;i++) {
    string s;
    cin>>s;
    tab.pb(s);
  }
  int resp=0;
  for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
      if(!us[i][j] and tab[i][j]=='D') resp=max(dfs(i,j),resp);
    }
  }
  if(resp==0) puts("Poor Dima!");
  else if(azedou) puts("Poor Inna!");
  else
  pri(resp);
  return 0;
}
