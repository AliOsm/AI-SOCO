/* ****GT_18**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define    endl        '\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)    for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
using namespace std;

#define N  100005

ll n,m;
vi a[N],vis(N),path,b[N];
ll dis[N][2]={0},cyc=0,par[N][2]={0};

void dfs(ll node,ll len=0,ll p=-1)
{
    vis[node]=1;
    dis[node][len]=1;
    par[node][len]=p;
    for(auto i:a[node])
        if(!dis[i][len^1])
            dfs(i,len^1,node);
        else if(vis[i])
            cyc=1;
    vis[node]=0;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int TESTS=1;
//    cin>>TESTS;
    while(TESTS--)
    {
        cin>>n>>m;
        rep(i,1,n+1)
        {
            ll c;
            cin>>c;
            while(c--)
            {
                ll x;
                cin>>x;
                a[i].pb(x);
                b[x].pb(i);
            }
        }
        ll s;
        cin>>s;
        dfs(s);
        fill(all(vis),0);
        rep(i,1,n+1)
        if(!sz(a[i])&&dis[i][1])
        {
            vi ans;
            ll cur=i,win=1;
            while(cur!=-1)
            {
                ans.pb(cur);
                cur=par[cur][win];
                win^=1;
            }
            reverse(all(ans));
            cout<<"Win\n";
            for(auto i:ans)
                cout<<i<<" ";
            return 0;
        }
        if(cyc)
            cout<<"Draw";
        else
            cout<<"Lose";
    }
    return 0;
}