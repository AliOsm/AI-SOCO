#include <iostream>
#include <fstream>
#include <cstring>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <iomanip>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <iterator>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define bit __builtin_popcount
#define all(x) x.begin(),x.end()

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

const ll INF=1e18+123;
const ld EPS=1e-9;
const int inf=1e9+123;
const int MOD=1e9+7;
const int N=1e5+123;
const int dx[]={0,0,1,-1};
const int dy[]={1,-1,0,0};

char c[N];

int main(){
	//ios_base::sync_with_stdio(0);
	//cin.tie(0);
    int n,k;
    cin>>n>>k;
    cin>>c+1;
    char m=*min_element(c+1,c+1+n);
    if(n<k){
        for(int i=1;i<=n;i++){
            cout<<c[i];
        }
        for(int i=n+1;i<=k;i++){
            cout<<m;
        }
        return 0;
    }
    set<char>s;
    for(int i=1;i<=n;i++){
        s.insert(c[i]);
    }
    string q="";
    for(int i=k;i;i--){
        set<char>::iterator j=s.upper_bound(c[i]);
        if(j!=s.end()){
            q+=*j;
            i--;
            for(;i;i--){
                q+=c[i];
            }
            break;
        }
        else{
            q+=m;
        }
    }
    reverse(all(q));
    cout<<q;
	return 0;
}
