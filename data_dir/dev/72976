#include <bits/stdc++.h>
#define int long long
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define all(x) x.begin(), x.end()
using namespace std;

int n;
int a[400010];
int cnt[22];
int cost[22][22];
int dp[1 << 22];

int solve (int bit) {
  if (20 == __builtin_popcount(bit)) return 0;
  int &ret = dp[bit];
  if (ret != -1) return ret;
  ret = LONG_LONG_MAX;
  for (int i = 0; i < 20; i++) {
    if (bit & (1 << i)) continue;
    int cur = 0;
    for (int j = 0; j < 20; j++) {
      if (i == j || bit & (1 << j)) continue;
      cur += cost[i][j];
    }
    ret = min (ret, solve (bit | (1 << i)) + cur);
  }
  return ret;
}

signed main () {
  memset (dp, -1, sizeof dp);
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
    a[i]--;
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < 20; j++) {
      cost[a[i]][j] += cnt[j];
    }
    cnt[a[i]]++;
  }
  cout << solve (0) << endl;
  return 0;
}