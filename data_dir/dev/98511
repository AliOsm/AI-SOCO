#include<bits/stdc++.h>
using namespace std;


/*
//VECTOR
vector<long long> d(n);
for (int i = 0; i < n; ++i) {
	cin >> d[i];
}
sort(d.begin(), d.end());

vector<long long> dd;
for (int i = 0; i < n; ++i) {
    long long x;cin>>x;
	dd.push_back(i);
}
sort(dd.begin(), dd.end());

if(d == dd)
accumulate(d.begin(), d.begin() + 25, 0)
*/

/*
//SET
set<int> data;
data.insert(10);
data.insert(20);
data.insert(30);
data.insert(40);
data.insert(50);
data.erase(50);


cout<< *(data.lower_bound(25))<<"\n"; //30
cout<< *(data.upper_bound(25))<<"\n"; //30

cout<< *(data.lower_bound(30))<<"\n"; //30
cout<< *(data.upper_bound(30))<<"\n"; //40

auto it = data.lower_bound(25);
if (it != data.end() && *it <= 30){...}

auto it = data.begin(); 
while (it != data.end())
{
	cout << (*it) << " ";
	it++;
}

vector<int> DATA;
DATA.assign(data.begin(), data.end());
*/

//ceil,floor

long long gcd(long long a, long long b){
    if(a<b){
        return gcd(b,a);
    }
    if(b==0){
        return a;
    }
    return gcd(b, a%b);
}


int main(int argc, char *argv[]){
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    
    int n;cin>>n;
    long long data[412345] = {0,};
    for(int i = 0;i<n;i++)cin>>data[i];
    
    
    long long x = data[0];
    for(int i = 1; i<n;i++){
        x = gcd(x, data[i]);
    }
    
    int answer = 0;
    for(int i = 1; 1LL*i*i <= x;i++){
        if(x%i == 0){
            if(1LL*i*i == x){
                answer++;
            }else{
                answer += 2;
            }
        }
    }
    cout<<answer;
    
    
	return 0;
}






