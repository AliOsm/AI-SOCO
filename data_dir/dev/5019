#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))

typedef long long ll;

using namespace std;

const int maxn = 100*1000+10, SQ = 320, maxk = 10*1000+10;
int ln[30] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777, 4444, 4447, 4474, 4477, 4744, 4747, 4774, 4777, 7444, 7447, 7474, 7477, 7744, 7747, 7774, 7777}, n, m, x, y, d, ans, tadd[SQ], ind, xl, xr, t[SQ][maxk], a[maxn];
char s[7];
bool mark[maxk];

inline void add ()
{
    ind = 0;
    for (xl = 0; xl < n; xl += SQ)
    {
        xr = min (n, xl + SQ);
        if (x <= xl && xr <= y)
            tadd[ind] += d;
        else
        {
            for (int i = max (x, xl); i < min (y, xr); i++)
            {
                t[ind][a[i]]--;
                a[i] += d;
                t[ind][a[i]]++;
            }
        }
        ind++;
    }
}

int req ()
{
    ans = ind = 0;
    for (xl = 0; xl < n; xl += SQ)
    {
        xr = min (n, xl + SQ);
        if (x <= xl && xr <= y)
        {
            for (int i = lower_bound (ln, ln + 30, tadd[ind]) - ln; i < 30; i++)
                ans += t[ind][ln[i] - tadd[ind]];
        }
        else
        {
            for (int i = max (x, xl); i < min (y, xr); i++)
            {
                if (mark[a[i] + tadd[ind]])
                    ans++;
            }
        }
        ind++;
    }
    return ans;
}

int main()
{
    for (int i = 0; i < 30; i++)
        mark[ln[i]] = 1;
    scanf ("%d %d", &n, &m);
    for (int i = 0; i < n; i++)
    {
        scanf ("%d", &a[i]);
        t[i / SQ][a[i]]++;
    }
    for (int i = 0; i < m; i++)
    {
        scanf ("%s %d %d", s, &x, &y);
        x--;
        if (s[0] == 'a')
        {
            scanf ("%d", &d);
            add ();
        }
        else
            printf ("%d\n", req ());
    }
	return 0;
}
