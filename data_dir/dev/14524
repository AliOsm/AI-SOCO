#include<iostream>
#include<map>
#include<vector>
using namespace std;
vector<vector<int> >x(1000000);
bool used[1000000];
int h[1000000];
bool exd[1000000];
int d;
void dfs(int v,int f) {
	used[v] = true;
	h[v] = f;
	bool k = 1;

	if (d == 0)
	{
		return;
	}
	for (vector<int>::iterator i = x[v].begin(); i != x[v].end(); ++i)
	{
		
		if (!used[*i] && !exd[*i])
		{
			dfs(*i,v);
		}
	}
	//if (d == 0)
	//{
	//	return;
	//}
	for (vector<int>::iterator i = x[v].begin(); i != x[v].end(); ++i)
	{
		
		if (!exd[*i])
		{
			if (!used[*i] ||( used[*i] && h[*i] == v))
			{
				k = 0;
			}
		}
	}
	//cout << "NEW  " << v << "   " << d << endl;
	if (k&&d!=0)
	{
		exd[v] = 1;
		d--;
	}
	return;
}
int main()
{
	int n, m;
	cin >> n >> m >> d;
	char a[510][510];
	int s = 0;
	int fx;
	for (int i = 2; i < n+2; i++)
	{
		for (int j = 2; j < m+2; j++)
		{
			cin >> a[i][j];
			
		}
	}
	for (int i = 2; i < n + 2; i++)
	{
		for (int j = 2; j < m + 2; j++)
		{
			if (a[i][j] == '.')
			{
				fx = s;
				if (a[i - 1][j] == '.')
				{

					x[s].push_back(s - m);
					//cout << "  a[i - 1][j]  " << s << "   " << s - m << endl;
				}
				if (a[i + 1][j] == '.')
				{
					x[s].push_back(s + m);
					//cout << "  a[i + 1][j]  " << s << "   " << s + m << endl;
			    }
				if (a[i][j - 1] == '.')
				{
					x[s].push_back(s - 1);
					//cout << "  a[i][j-1]  " << s << "   " << s - 1 << endl;
				}
				if (a[i][j + 1] == '.')
				{
					x[s].push_back(s + 1);
					//cout << "  a[i][j+1]  " << s << "   " << s + 1 << endl;
				}
			}
			s++;
		}
	}
	dfs(fx, -1);
	int y = 0;
	for (int i = 2; i < n + 2; i++)
	{
		for (int j = 2; j < m + 2; j++)
		{
			if (exd[y])
			{
				cout << "X" ;
			}
			else
			{
				cout << a[i][j];
			
			}
			y++;
		}
		cout << endl;
	}

}