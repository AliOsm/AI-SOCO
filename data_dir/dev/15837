#include <bits/stdc++.h>
using namespace std;

int vis[500010], mu[500010], pr[500010], pcnt;
int a[200010];
int res[500010];
int use[500010];

void cal() {
    mu[1] = 1;
    for (int i = 2; i <= 500000; i++) {
        if (!vis[i]) {
            pr[pcnt++] = i;
            mu[i] = -1;
        }
        for (int j = 0; j < pcnt && (long long)i * pr[j] <= 500000; j++) {
            vis[i * pr[j]] = 1;
            if (i % pr[j]) {
                mu[i * pr[j]] = -mu[i];
            } else {
                mu[i * pr[j]] = 0;
                break;
            }
        }
    }
}

int main() {
    cal();
    int n, q;
    scanf("%d%d", &n, &q);
    for (int i = 1; i <= n; i++) {
        scanf("%d", &a[i]);
    }
    long long sol = 0;
    for (int i = 0; i < q; i++) {
        int x;
        scanf("%d", &x);
        int id;
        if (use[x]) {
            id = 0;
        } else {
            id = 1;
        }
        long long tmp = 0;
        for (int j = 1; j <= a[x] / j; j++) {
            if (a[x] % j == 0) {
                int now;
                if (id == 0) {
                    res[j]--;
                    now = res[j];
                } else {
                    now = res[j];
                    res[j]++;
                }
                if (mu[j] == 0) {
                    ;
                } else if (mu[j] == -1) {
                    tmp -= now;
                } else {
                    tmp += now;
                }

                if (a[x] / j != j) {
                    int ne = a[x] / j, now;
                    if (id == 0) {
                        res[ne]--;
                        now = res[ne];
                    } else {
                        now = res[ne];
                        res[ne]++;
                    }
                    if (mu[ne] == 0) {
                        ;
                    } else if (mu[ne] == -1) {
                        tmp -= now;
                    } else {
                        tmp += now;
                    }
                }
            }

        }
        if (id == 0) {
            use[x] = 0;
        } else {
            use[x] = 1;
        }
        if (id == 1) {
            sol += tmp;
        } else {
            sol -= tmp;
        }
        printf("%I64d\n", sol);
    }
    return 0;
}