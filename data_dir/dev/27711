#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pi pair<ll,ll>

vector<ll> graph[5005];
ll par[5005];
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    ll l,r,i,j,n,m,t,d,a;

    cin>>t;

    for(ll cz=0;cz<t;cz++){
        cin>>n>>d;
        ll ans=0;

        if((n*(n-1))/2<d){cout<<"NO"<<endl; continue;}

        i=1;
        m=n;
        m--;
        while(m){
            if(m>=(1<<i)) {ans+=(i)*(1<<i);m-=(1<<i);}
            else {ans+=m*(i);m=0;}
            i++;
           // cout<<ans<<" "<<m<<endl;
        }
        //cout<<ans<<endl;
        if(ans>d){cout<<"NO"<<endl; continue; }
        //ans=(n*(n-1))/2;
        ans=0;
        cout<<"YES"<<endl;
        for(i=1;i<=n;i++) graph[i].clear();
        for(i=1;i<=n;i++) {graph[i].push_back(i);ans+=(i-1);}
        ll l=2;
        //cout<<ans<<endl;
        for(i=n;i>=1;i--){
            if(ans-(i-l)>=d){
                a=graph[i][graph[i].size()-1];
                graph[i].pop_back();
                graph[l].push_back(a);
            ans-=(i-l);
            if(graph[l].size()==(1<<(l-1))) l++;
            //cout<<i<<" "<<ans<<" "<<(i-l)<<endl;
            if(ans==d) break;
            }
            else{
                a=graph[i][graph[i].size()-1];
                graph[i].pop_back();
                graph[i-(ans-d)].push_back(a);
              //  cout<<"   "<<i-(ans-d)<<" "<<a<<endl;
                break;
            }
        }

        //for(i=1;i<=n;i++) cout<<graph[i].size()<<endl;

        for(i=2;i<=n;i++){
                //cout<<graph[i].size()<<endl;
            for(j=0;j<graph[i].size();j++){
                par[graph[i][j]]=graph[i-1][j/2];
            }
        }
        for(i=2;i<=n;i++) cout<<par[i]<<" ";
        cout<<endl;
    }
}
