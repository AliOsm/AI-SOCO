#include<bits/stdc++.h>
#define REP(i,j,k) for(int i=j;i<k;++i)
#define RREP(i,j,k) for(int i=(int)j-1;i>=k;--i)
#define int long long
#define pb emplace_back
#define P pair<int,int>
#define F first
#define S second
#define ALL(x) x.begin(),x.end()
#define sz(a) (int)(a).size()
#define MX 205
#define oo 1e18
#define L d*2
#define R (d*2+1)
#define mid (l+r>>1)
#define Ls l,mid,d*2
#define Rs mid+1,r,d*2+1
#define MIN(x,y) (x=min(x,(y)))
#define MAX(x,y) (x=max(x,(y)))
#define mo (int)(1e9+7)
#define IOS cin.tie(0) ,cout.tie(0), cout.sync_with_stdio(0)
using namespace std;
int n,k,a,b,c[MX],dp[MX][MX];
vector<int> G[MX];
void dfs(int v,int p){
	dp[v][0] = c[v];
	for(auto u:G[v]) if(u!=p) dfs(u,v), dp[v][0] += dp[u][k];
	REP(i,1,k+1){
		if(i*2<=k){
			int ma = 0,sum = 0;
			for(auto u:G[v]) if(u!=p){
				sum += dp[u][k-i];
				MAX(ma,dp[u][i-1]-dp[u][k-i]);
			}
			dp[v][i] = sum+ma;
		}
		else
			for(auto u:G[v]) if(u!=p) dp[v][i] += dp[u][i-1];
	}
	RREP(i,k,0) MAX(dp[v][i],dp[v][i+1]);
}
main(){
	IOS;
	cin>>n>>k;
	REP(i,1,n+1) cin>>c[i];
	REP(i,1,n) cin>>a>>b,G[a].pb(b),G[b].pb(a);
	dfs(1,1);
	cout<<dp[1][0];
}
