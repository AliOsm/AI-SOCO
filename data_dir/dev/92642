#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>


using namespace std;

typedef pair<int,int>   p;


set<p> xascend;
set<p> yascend;

vector<int> ans;

vector<int> xs,ys;

int per(p a,p b,p c)
{
    int mxx=max(a.first,max(b.first,c.first));
    int mnx=min(a.first,min(b.first,c.first));


    int mxy=max(a.second,max(b.second,c.second));
    int mny=min(a.second,min(b.second,c.second));

    return 2*(mxx-mnx+mxy-mny);

}

int n;

int main()
{
    ios_base::sync_with_stdio(false);

    cin >> n;
    for (int i=0; i<n; i++)
    {
        int x,y;
        cin >> x >> y;
        xs.push_back(x);
        ys.push_back(y);
        xascend.insert({x,y});
        yascend.insert({y,x});
    }
#define x xascend
#define y yascend

    int mnx=*min_element(xs.begin(),xs.end());
    int mny=*min_element(ys.begin(),ys.end());
    int mxx=*max_element(xs.begin(),xs.end());
    int mxy=*max_element(ys.begin(),ys.end());

    vector<p> xu,xd,yl,yr;
    for (int i=0;i<n;i++)
    {
        if (xs[i]==mnx){yl.push_back({xs[i],ys[i]});}
        if (xs[i]==mxx){yr.push_back({xs[i],ys[i]});}
        if (ys[i]==mny){xd.push_back({xs[i],ys[i]});}
        if (ys[i]==mxy){xu.push_back({xs[i],ys[i]});}
    }


    vector<pair<int,int> > want;
    for (auto e:yl)want.push_back(e);
    for (auto e:yr)want.push_back(e);
    for (auto e:xd)want.push_back(e);
    for (auto e:xu)want.push_back(e);


    int s=0;
    for (int i=0;i<want.size();i++)
    {
        for (int j=i+1;j<want.size();j++)
        {
            for (int k=j+1;k<want.size();k++)
            {
                s=max(s,per(want[i],want[j],want[k]));

            }
        }
    }

    for (int i=0;i<n;i++)
    {
        if (xs[i]>mnx&&ys[i]<mxy)
        {
            s=max(s,per({xs[i],ys[i]},xd[0],yr[0]));
            s=max(s,per({xs[i],ys[i]},xd[0],yr.back()));
            s=max(s,per({xs[i],ys[i]},xd.back(),yr[0]));
            s=max(s,per({xs[i],ys[i]},xd.back(),yr.back()));
        }
    }
    for (int i=0;i<n;i++)
    {
        if (xs[i]<mxx&&ys[i]<mxy)
        {
            s=max(s,per({xs[i],ys[i]},xd[0],yl[0]));
            s=max(s,per({xs[i],ys[i]},xd[0],yl.back()));
            s=max(s,per({xs[i],ys[i]},xd.back(),yl[0]));
            s=max(s,per({xs[i],ys[i]},xd.back(),yl.back()));
        }
    }

    for (int i=0;i<n;i++)
    {
        if (xs[i]>mnx&&ys[i]>mny)
        {
            s=max(s,per({xs[i],ys[i]},xu[0],yr[0]));
            s=max(s,per({xs[i],ys[i]},xu[0],yr.back()));
            s=max(s,per({xs[i],ys[i]},xu.back(),yr[0]));
            s=max(s,per({xs[i],ys[i]},xu.back(),yr.back()));
        }
    }
    for (int i=0;i<n;i++)
    {
        if (xs[i]<mxx&&ys[i]>mny)
        {
            s=max(s,per({xs[i],ys[i]},xu[0],yl[0]));
            s=max(s,per({xs[i],ys[i]},xu[0],yl.back()));
            s=max(s,per({xs[i],ys[i]},xu.back(),yl[0]));
            s=max(s,per({xs[i],ys[i]},xu.back(),yl.back()));
        }
    }


    cout << s << ' ';
    for (int i=4;i<=n;i++)
        cout << 2*(mxx+mxy-mnx-mny) << ' ';

    return 0;
}
