#include <bits/stdc++.h>
using namespace std;
#define sz(v) (int)(v).size()
#define pb push_back
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define pii pair<int,int>
#define pll pair<ll,ll>
#define fi first
#define se second
typedef long long ll;
typedef long double f80;
#define all(x) x.begin(), x.end()
#define endl '\n'

const int mod = 998244353;
int pwr(int a,int b) {
    int ans = 1;
    while(b) {
        if(b & 1) ans = (ans * 1LL * a) % mod;
        a = (a * 1LL * a) % mod;
        b >>= 1;
    }
    return ans;
}

const int N = 205;
const int M = 405;
int dp[N][N][M];
pair<pii,int> par[N][N][M];

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    string s, t;
    cin >> s >> t;
    int n = sz(s), m = sz(t);
    s = '0' + s;
    t = '0' + t;
    s += "#";
    t += "#";
    fr(i, 0, n) {
        fr(j, 0, m) {
            fr(k, 0, M - 1) {
                dp[i][j][k] = 1e9;
            }
        }
    }
    dp[0][0][0] = 0;
    fr(i, 0, n) {
        fr(j, 0, m) {
            fr(k, 0, M - 1) {
                if(dp[i][j][k] == 1e9) continue;
                if(k + 1 < M) {
                    if(dp[i + (s[i + 1] == '(')][j + (t[j + 1] == '(')][k + 1] > 1 + dp[i][j][k]) {
                        dp[i + (s[i + 1] == '(')][j + (t[j + 1] == '(')][k + 1] = 1 + dp[i][j][k];
                        par[i + (s[i + 1] == '(')][j + (t[j + 1] == '(')][k + 1] = {{i, j}, k};
                    }
                }
                if(k > 0) {
                    if(dp[i + (s[i + 1] == ')')][j + (t[j + 1] == ')')][k - 1] > 1 + dp[i][j][k]) {
                        dp[i + (s[i + 1] == ')')][j + (t[j + 1] == ')')][k - 1] = 1 + dp[i][j][k];
                        par[i + (s[i + 1] == ')')][j + (t[j + 1] == ')')][k - 1] = {{i, j}, k};
                    }
                }
            }
        }
    }
    string ans = "";
    int kk = 0;
    fr(k, 1, M - 1) {
        if(k + dp[n][m][k] < kk + dp[n][m][kk]) kk = k;
    }
    fr(i, 1, kk) {
        ans += ")";
    }
    // cout << dp[n][m][kk] << endl;
    while(n || m || kk) {
        auto x = par[n][m][kk];
        if(x.se < kk)
            ans += "(";
        else
            ans += ")";
        n = x.fi.fi, m = x.fi.se, kk = x.se;
    }
    reverse(all(ans));
    cout << ans;
    return 0;
}