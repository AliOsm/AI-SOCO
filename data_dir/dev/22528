#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md l + ((r - l) >> 1)
#define all(x) x.begin(),x.end()
#define ll long long
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0};
const int dy[] = {0, 0, 1, -1};
const double EPS = 1e-7;
const double PI = acos(-1.0);

int n, m, k;
bool us[N];
vector < pair < int, int > > g[N];
main() {
    file("queue");
    ios;
    cin >> n >> m >> k;
    fo(i, 1, m, 1) {
        int u, v, x;
        cin >> u >> v >> x;
        g[u].pb({v, x});
        g[v].pb({u, x});
    }
    priority_queue < pair < int, int > > q;
    fo(i, 1, k, 1) {
        int s, y;
        cin >> s >> y;
        q.push({-y, -s});
    }
    int ans = 0;
    q.push({0, 1});
    while (!q.empty()) {
        int dist = q.top().F;
        int v = q.top().S;
        q.pop();
        if (v < 0) {
            v *= -1;
            if (us[v]) {
                ++ans;
                continue;
            }
        }
        if (us[v]) {
            continue;
        }
        us[v] = 1;
        for (auto & to : g[v]) {
            if (!us[to.F]) {
                q.push({dist - to.S, to.F});
            }
        }
    }
    cout << ans;
    return 0;
}
