#include <bits/stdc++.h>

using namespace std;

#define sz(a) int(a.size())

int memo [5010][5010], us [5010][5010];

int n, k, M;
#define mSum(a,b) (a+b >= k ? a+b-k : a + b)

int aM [5010];

int dp (int id, int md) {
	if(md == M) return 1;
	if (id == n) return 0;
	if (memo[id][md] != -1) return memo[id][md];

	int r = 1;
	us[id][md] = dp(id+1,mSum(md,aM[id]));
	if (!us[id][md]) r = dp(id+1,md);
	return memo[id][md] = r;
}

int main () {
	memset(memo,-1,sizeof(memo));

	int v;
	cin >> n >> k >> v;

	vector <int> a (n);
	int sum = 0;
	for (int i = 0; i < n; i++) {
		scanf("%d",&a[i]);
		sum += a[i];
		aM[i] = a[i]%k;
	}

	if (sum < 1LL*v) {
		puts("NO");
		return 0;
	}

	M = v%k;

	if (!M) {
		puts("YES");

		for (int i = 1; i < n; i++) {
			if (a[i]) printf("%d %d %d\n",(a[i]+k-1)/k,i+1,1);
		}

		if (v) printf("%d %d %d\n",v/k,1,2);
		return 0;
	}

	if (!dp(0,0)) {
		puts("NO");
		return 0;
	}

	int md = 0, id = 0;
	vector <int> pos;
	while (md != M) {
		if (us[id][md]) md = mSum(md,aM[id]), pos.push_back(id);
		id++;
	}
	puts("YES");

	for (int i = 1; i < sz(pos); i++) {
		if (a[pos[i]]) printf("%d %d %d\n",(a[pos[i]]+k-1)/k,pos[i]+1,pos[0]+1);
		a[pos[0]] += a[pos[i]];
		a[pos[i]] = 0;
	}
	int nx = pos[0] > 0 ? 0 : 1;
	for (int i = 0; i < n; i++) {
		if (i == pos[0] || i == nx || !a[i]) continue;
		printf("%d %d %d\n",(a[i]+k-1)/k,i+1,nx+1);
	}

	if (v-a[pos[0]] > 0) printf("%d %d %d\n",(v-a[pos[0]])/k,nx+1,pos[0]+1);
	if (a[pos[0]]-v > 0) printf("%d %d %d\n",(a[pos[0]]-v)/k,pos[0]+1,nx+1);
}
