#pragma comment(linker, "/STACK:536870912")
#pragma warning(disable:4996)

//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<iostream>
#include<algorithm>
#include<queue>
#include<string>
#include<vector>
#include<map>
#include<list>
#include<set>
#include<cstring>
#include<ctime>
#include<cassert>
#include<cmath>
#include<limits>
#include<iterator>
#include<functional>
#include<unordered_map>
#include<unordered_set>
#include<stack>
#include<bitset>
#include<complex>

#define all(v) v.begin(), v.end()
#define setv(ar, val) memset(ar, val, sizeof(ar));
#define ll long long int
#define ld long double
#define ull unsigned long long int
#define PI 3.1415926535897932384626433832795
using namespace std;

const int N = 5005, mod = 1e9 + 7;
int t[N][N];

void add(int &a, int b) {
	ll r = (ll)a + b + mod;
	while (r >= mod)
		r -= mod;
	a = r;
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int n, a, b, k;
	scanf("%d%d%d%d", &n, &a, &b, &k);

	t[0][a]++;
	t[0][a + 1] = mod - 1;

	for (int i = 0; i <= k; i++) {
		for (int j = 1; j <= n; j++) {
			add(t[i][j], t[i][j - 1]);
			if (t[i][j]) {
				int d = abs(b - j) - 1;
				add(t[i + 1][max(1, j - d)], t[i][j]);
				add(t[i + 1][j], -t[i][j]);
				add(t[i + 1][j + 1], t[i][j]);
				add(t[i + 1][min(n, j + d) + 1], -t[i][j]);
			}
		}
	}


	int ans = 0;
	for (int j = 1; j <= n; j++)
		add(ans, t[k][j]);

	printf("%d", ans);










	return 0;
}