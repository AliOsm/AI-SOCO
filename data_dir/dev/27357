/* 4D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

typedef struct node_t {
	int w, h, i;
	node_t() {}
	node_t(int w_, int h_, int i_):
		w(w_), h(h_), i(i_) {}
	friend bool operator< (const node_t& a, const node_t& b) {
		if (a.w == b.w)
			return a.h < b.h;
		else
			return a.w < b.w;
	}
} node_t;

const int maxn = 5005;
node_t nd[maxn];
int pre[maxn];
int dp[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n, w, h;
	node_t d;
	
	scanf("%d %d %d", &n, &w, &h);
	rep(i, 1, n+1) {
		scanf("%d %d", &nd[i].w, &nd[i].h);
		nd[i].i = i;
	}
	
	sort(nd+1, nd+n+1);
	nd[0].w = w;
	nd[0].h = h;
	nd[0].i = 0;
	
	
	int i = 1, j, k, tmp, v;
	
	while (i<=n && (nd[i].w<=w || nd[i].h<=h))
		++i;
	
	if (i > n) {
		puts("0");
		return 0;
	}
	
	int mx = 1, mv = i;
	
	memset(pre, 0, sizeof(pre));
	#ifndef ONLINE_JUDGE
		printf("%d: w=%d h=%d dp[i]=1 pre[i]=%d\n",i,nd[i].w,nd[i].h,pre[i]);
	#endif
	dp[j=i++] = 1;
	while (i <= n) {
		dp[i] = nd[i].h>h ? 1:0;
		for (k=j; k<i; ++k) {
			tmp = -1;
			if (nd[i].w > nd[k].w) {
				if (nd[i].h > nd[k].h) {
					tmp = dp[k] ? dp[k]+1:-1;
					v = k;
				} else if (nd[i].h == nd[k].h) {
					tmp = dp[k];
					v = pre[k];
				}
			} else {
				if (nd[i].h >= nd[k].h) {
					tmp = dp[k];
					v = pre[k];
				}
			}
			if (tmp > dp[i]) {
				dp[i] = tmp;
				pre[i] = v;
			}
		}
		if (dp[i] > mx) {
			mx = dp[i];
			mv = i;
		}
		#ifndef ONLINE_JUDGE
			printf("%d: w=%d h=%d dp[i]=%d pre[i]=%d\n",i,nd[i].w,nd[i].h,dp[i],pre[i]);
		#endif
		++i;
	}
	
	vi ans;
	i = mv;
	while (i) {
		ans.pb(nd[i].i);
		i = pre[i];
	}
	int sz = SZ(ans);
	printf("%d\n", sz);
	for (i=sz-1; i>=0; --i)
		printf("%d ", ans[i]);
	putchar('\n');
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
