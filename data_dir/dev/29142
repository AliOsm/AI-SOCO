#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (int)v.size()
#define UNVISITED -1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcnt(x)

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef unsigned int ui;

const double PI = acos(-1.0);

int dx[] = { 0, 0, 1, -1, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0, 1, -1, 1, -1 };

const int MAX = 105, MOD = 1e9 + 7, oo = 1 << 30;
const double EPS = 1e-5;

int n, a[MAX], memo[MAX][2][2];
int solve(int idx, bool s, bool c) {
	if (idx == n)
		return 0;
	int &ret = memo[idx][s][c];
	if (~ret)
		return ret;
//	if (a[idx] == 0)
	ret = solve(idx + 1, 0, 0);
	if (a[idx] == 1) {
		if (!c)
			ret = max(ret, solve(idx + 1, 0, 1) + 1);
	}
	if (a[idx] == 2) {
		if (!s)
			ret = max(ret, solve(idx + 1, 1, 0) + 1);
	} else if (a[idx] == 3) {
		if (!c && !s)
			ret = max(ret, solve(idx + 1, 1, 1) + 1);
		if (!c)
			ret = max(ret, solve(idx + 1, 0, 1) + 1);
		if (!s)
			ret = max(ret, solve(idx + 1, 1, 0) + 1);
	}
	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%d", &a[i]);
	CLR(memo, -1);
	printf("%d", n - solve(0, 0, 0));
}

