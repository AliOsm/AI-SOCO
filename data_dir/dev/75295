#include<bits/stdc++.h> 
#include<ext/pb_ds/assoc_container.hpp> 
#include<ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define MOD 1000000007
#define INF 2000000000
#define DESPACITO 1000000000000000000
#define PI acos(-1);
#define E 998244353
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double

using namespace std;


int main()
{
	IOS;
	int n;
	cin >> n;
	ll arr[n+1];
	REP(i,1,n)
		cin >> arr[i];
	stack<ll>st;
	ll left[n+1];
	REP(i,1,n)
	{
		while(!st.empty())
		{
			if(arr[st.top()]>=arr[i])
				break;
			st.pop();
		}
		if(st.empty())
			left[i]=0;
		else
			left[i]=st.top();
		st.push(i);
	}
	while(!st.empty())
	    st.pop();
	ll right[n+1];
	for(int i=n;i>=1;i--)
	{
		while(!st.empty())
		{
			if(arr[st.top()]>arr[i])
				break;
			st.pop();
		}
		if(st.empty())
			right[i]=n+1;
		else
			right[i]=st.top();
		st.push(i);
	}
	ll bit[32];
	ll lchange[n+1];
	ll rchange[n+1];
	memset(bit,0,sizeof(bit));
	REP(i,1,n)
	{
		ll ans=0;
		REP(j,0,31)
		{
			if(arr[i]&(1LL<<j))
				bit[j]=i;
			else
				ans=max(ans,bit[j]);
		}
		lchange[i]=ans;	
	}
	REP(j,0,31)
		bit[j]=n+1;
	for(int i=n;i>=1;i--)
	{
		ll ans=n+1;
		REP(j,0,31)
		{
			if(arr[i]&(1LL<<j))
				bit[j]=i;
			else
				ans=min(ans,bit[j]);
		}
		rchange[i]=ans;
	}
	ll tot=0;
	REP(i,1,n)
	{
		tot+=max(0,lchange[i]-left[i])*max(0,right[i]-i);
		tot+=max(0,i-max(left[i],lchange[i]))*max(0,right[i]-rchange[i]);
	}
	cout << tot;
}
