#include <vector>
#include <list>
#include <unordered_map>
#include <unordered_set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <iostream>
#include <queue>

using namespace std;

string number_to_letter(int i)
{
	int k = 26, l = 1;
	i--;
	while (i >= k)
	{
		i -= k;
		k *= 26;
		l++;
	}
	
	string Answer;
	while (i > 0)
	{
		Answer.push_back(char(i % 26) + 'A');
		i = i / 26;
	}

	while (Answer.size() < l) Answer.push_back('A');
	reverse(Answer.begin(), Answer.end());
	return Answer;
}

int letter_to_number(string A)
{
	int Answer = 0;
	for(int i = 0; i < A.size() - 1; i++) A[i]++;
	for (auto a: A)
		Answer = Answer * 26 + a - 'A';

	return Answer + 1;
}

int main()
{
	int n;
	cin >> n;

	while (n--)
	{
		string S;
		cin >> S;

		string first = "";
		int i = 0;
		while (i < S.size() && S[i] > '9') first += S[i++];
		string number = "";
		while (i < S.size() && S[i] >= '0' && S[i] <= '9') number += S[i++];

		if (i == S.size())
			cout << "R" << number << "C" << letter_to_number(first) << "\n";
		else
		{
			string second = "";
			while (i < S.size() && S[i] > '9') second += S[i++];
			string secondnumber = "";
			while (i < S.size() && S[i] >= '0' && S[i] <= '9') secondnumber += S[i++];
			cout << number_to_letter(atoi(secondnumber.c_str())) << number << "\n";
		}
	}
}
