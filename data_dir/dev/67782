#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-10

const int MAXN = 200010;

int n, w, a[MAXN], b[MAXN], nxt[MAXN];

void getNext(int *s, int n) {
	nxt[0] = -1;
	int cur = 0;
	for (int i = 1; i <= n; i++, cur++) {
		if (s[i] == s[cur]) nxt[i] = nxt[cur];
		else nxt[i] = cur;
		while (cur > -1 && s[i] != s[cur]) cur = nxt[cur];
	}
}

int KMP(int *s, int n, int *t, int m) {
	getNext(s, n);
	int cnt = 0, cur = 0;
	for (int i = 0; i < m; i++, cur++) {
		while (cur > -1 && t[i] != s[cur]) cur = nxt[cur];
		if (cur == n-1) cnt++;
	}
	return cnt;
}

int main() {
	scanf("%d%d", &n, &w);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
		if (i > 0) a[i-1] -= a[i];
	}
	for (int i = 0; i < w; i++) {
		scanf("%d", &b[i]);
		if (i > 0) b[i-1] -= b[i];
	}
	if (w == 1) printf("%d\n", n);
	else printf("%d\n", KMP(b, w-1, a, n-1));
	return 0;
}
