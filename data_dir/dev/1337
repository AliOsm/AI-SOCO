#include <bits/stdc++.h>
using namespace std;
typedef pair <int,int> pi;

const int MAX=1010;
vector <pi> D;
char G[MAX][MAX];
int V[MAX][MAX];
char R[MAX*MAX*10];
int I[MAX*MAX*10];
int J[MAX*MAX*10];
int n,m;

int point(int i,int j){
	return(i*m+j);
}

void dfs(int i, int j){
	D.push_back(pi(i,j));
	if(i+1<=n && V[i+1][j]==0 && G[i+1][j]=='.'){
		V[i+1][j]=V[i][j];
		dfs(i+1,j);
	}
	if(i-1>=1 && V[i-1][j]==0 && G[i-1][j]=='.'){
		V[i-1][j]=V[i][j];
		dfs(i-1,j);
	}
	if(j+1<=m && V[i][j+1]==0 && G[i][j+1]=='.'){
		V[i][j+1]=V[i][j];
		dfs(i,j+1);
	}
	if(j-1>=1 && V[i][j-1]==0 && G[i][j-1]=='.'){
		V[i][j-1]=V[i][j];
		dfs(i,j-1);
	}
}

int main(){
	int res=0;
	scanf("%d %d",&n,&m);
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			scanf(" %c",&G[i][j]);
			if(G[i][j]=='.'){
				res++;
				I[res]=i;
				J[res]=j;
				R[res]='B';
			} 
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(V[i][j]==0 && G[i][j]=='.'){
				V[i][j]=point(i,j);
				dfs(i,j);
			}
		}
	}
	for(int i=D.size()-1;i>=0;i--){
		if(point(D[i].first,D[i].second) != V[D[i].first][D[i].second]){
			res++;
			I[res]=D[i].first;
			J[res]=D[i].second;
			R[res]='D';
			res++;
			I[res]=D[i].first;
			J[res]=D[i].second;
			R[res]='R';
		}
	}
	printf("%d\n",res);
	for(int i=1;i<=res;i++){
		printf("%c %d %d\n",R[i],I[i],J[i]);
	}
}