#include <iostream>
#include<algorithm>
#include<string>
#include<map>
#include <iterator>
#include<iomanip>
#include<vector>
#include<cmath>
#include <cstdio>
#include<queue>
#include<stack>
#include<list>
#include<stdio.h>
#include<set>
#include <functional>

#define mod 1000000007
#define mod2 30000000
#define pa(a,b) make_pair(a,b)
#define f first
#define s second
#define pb(a)  push_back(a)
#define all(a) a.begin() , a.end()
#define mem(a, b) memset(a, b, sizeof(a))
#define LL  long long int
#define oo 1e9
#define pi 3.14159265359
#define eps  1e-9



LL maxx(LL a , LL b){ return a>b ?  a : b ;}
LL minn(LL a , LL b){ return a>b ?  b : a ;}

using namespace std;
int dx[] = {1 , 1 ,1 , 0 , 0  , -1 , -1  , -1  , 0 };
int dy[] = { -1 , 0  , 1 , 1 , -1 , 0 , 1 , -1 , 0 };
void boostIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
LL gcd(LL a, LL b) {
    return b == 0 ? a : gcd(b, a % b);
}
LL lcm(LL a , LL b )
{
    return (a*b)/gcd(a , b);
}
LL poww(LL base, LL exp){
  base %= mod;
  LL result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}
bool check(string a , string b)
{
    for(int i = 0 ; i < (int)a.size() - (int)b.size() + 1 ; i++){
        string t = "" ;
        for(int j = i ; j < i + b.size() ; j++){
            t = t + a[j] ;
        }
        if(t == b)
            return 1 ;
    }
    return 0 ;
}
int main()
{
    int n ; cin >> n ;
    vector<pair<int , string>>s;

    for(int i = 0 ; i < n ; i++){
        string t ; cin >> t ;
        s.pb(pa(t.size() , t)) ;
    }
    sort(all(s)) ;

    for(int i = n - 1  ; i >= 0 ; i--){
        for(int j = i - 1 ; j >= 0 ; j--){
            if(!check(s[i].s , s[j].s))
                return cout << "NO"  , 0 ;
        }
    }

    cout << "YES" << endl ;

    for(int i = 0 ; i < s.size() ; i++)
        cout << s[i].s << endl ;

}
