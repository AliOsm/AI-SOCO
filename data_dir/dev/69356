/* Author haleyk10198 */
/* �@��:  haleyk10198 */
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))

using namespace std;
using namespace __gnu_pbds;

string itos(int x){
	stringstream ss;
	ss<<x;
	return ss.str();
}

typedef tree<pii,null_type,greater<pii>,rb_tree_tag,tree_order_statistics_node_update> order_set;

int n,d[110],res;
set<pii> s1,s2;

order_set t;

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin>>n;
	for(int i=0;i<n;i++){
		int x,y;
		cin>>x>>y;
		if(y<0)
			s2.insert(mp(x,n-i));
		else
			s1.insert(mp(x,n-i));
		t.insert(mp(x,n-i));
		d[n-i]=y;
	}
	for(auto x:s1){
		int dx=t.order_of_key(x);
		t.erase(x);
		x.first+=d[x.second];
		t.insert(x);
		dx-=t.order_of_key(x);
		res+=abs(dx);
	}
	for(set<pii>::reverse_iterator it=s2.rbegin();it!=s2.rend();it++){
		auto x=*it;
		int dx=t.order_of_key(x);
		t.erase(x);
		x.first+=d[x.second];
		t.insert(x);
		dx-=t.order_of_key(x);
		res+=abs(dx);
	}
	cout<<res<<endl;
	return 0;
}

