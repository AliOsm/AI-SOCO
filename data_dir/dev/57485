#include <bits/stdc++.h>

using namespace std;

const int MOD = (int)1e9 + 9;

long long binPow(long long a, long long b) {
	if(b == 0) {
		return 1;
	}
	long long ans = binPow(a, b / 2);
	ans = ans * ans % MOD;
	if(b % 2) {
		ans = ans * a % MOD;
	}
	return ans;
}

int main() {
    // freopen(".in", "r", stdin);
    std::ios_base::sync_with_stdio(false);

    long long n, a, b, k;
    cin >> n >> a >> b >> k;

    string s;
 	cin >> s;

 	long long ansK = 0;
 	for(int i = 0; i < k; ++i) {
 		if(s[i] == '+') {
 			(ansK += binPow(b, i) * binPow(a, n - i)) %= MOD;
 		} else {
 			(ansK -= binPow(b, i) * binPow(a, n - i)) %= MOD;
 		}
 	}

 	long long cof = binPow(b, k) * binPow(binPow(a, k), MOD - 2) % MOD;

 	int num = (n + 1) / k;

 	long long ans = (ansK - ansK * binPow(cof, num) % MOD) * binPow(1 - cof, MOD - 2);
 	if(cof == 1) {
 		ans = num * ansK % MOD;
 	}

 	cout << (ans % MOD + MOD) % MOD << "\n";
}
