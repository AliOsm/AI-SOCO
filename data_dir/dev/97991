#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
//#include <unordered_set>
//#include <unordered_map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;
#define MS0(I) memset(I, 0, sizeof(I));
#define MS1(I) memset(I, -1, sizeof(I));
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define rep1(i, s, n) for(int i = (s); i < (n); ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define DRI(A) int A; scanf("%d", &A);
#define DRII(A, B) int A, B; scanf("%d %d", &A, &B);
#define DRIII(A, B, C) int A, B, C; scanf("%d %d %d", &A, &B, &C);
#define SZ(X) ((int)X.size() )
#define MP make_pair 
#define pb push_back
#define F first
#define S second
#define ALL(I) (I).begin(), (I).end()
typedef const void CV;
typedef long long LL;
typedef unsigned long long ULL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII; 
const double eps = 1e-9;
const double PI = acos(-1);
const LL INFF = 1e18;
const int INF = 1e9;
const int mod = 1e9+7;
const int MAX = 2e3+7;
bool a[MAX][MAX];
int n;
void init(){
	char buf[200000];
	scanf("%d", &n);
	gets(buf);
	rep1(i, 1, n+1){
		gets(buf);
		int p = 0;
		rep1(j, 1, n+1){
			int v = 0;
			while(buf[p] >= '0' && buf[p] <= '9'){
				v *= 10;
				v += buf[p] - '0';
				p++;
			}
			p++;
			if(v) a[i][j] = 1;
		}
	}
}
bitset<MAX>ck;
int re[MAX<<1];
int cntp = 0;
void dfs(int u){
	ck[u] = 1;
	rep1(i, 1, n+1) if(!ck[i] && a[u][i]) dfs(i);
	re[++cntp] = u;
}
void dfs2(int u){
	ck[u] = 1;
	rep1(i, 1, n+1) if(!ck[i] && a[i][u]) dfs2(i);
}
void sol(){
	rep1(i, 1, n+1) if(!ck[i]) dfs(i);
	cntp = 0; ck.reset();
	per1(i, n, 1) if(!ck[re[i]]){
		dfs2(re[i]); cntp++;
	}
	if(cntp == 1) puts("YES");
	else puts("NO");
	return ;
}
int main(void){
	init();
	sol();
	return 0;
}
