#include <bits/stdc++.h>

using namespace std;

int W[110][110] ;
bool vis[110] ;
vector < pair < int , int > > ans ;
vector < vector < int > > v ;
void dfs(int idx )
{
    vis[idx] = 1 ;
    for ( int i = 0 ; i < v[idx].size() ; i++ )
        if ( !vis[v[idx][i]] )
            ans.push_back({idx,v[idx][i]}) ,
            dfs(v[idx][i]);
}
int main()
{
    int n ;
    cin >> n ;
    int x , y , w ;
    v.resize(n) ;
    for ( int i = 0 ; i < n ; i++ )
    {
        cin >> x >> y >> w;
        x-- ; y-- ;
        v[x].push_back(y) ;
        v[y].push_back(x) ;
        W[x][y] = w ;
    }
    dfs(0) ;
    ans.push_back({ans.back().second,ans[0].first}) ;
    int a = 0 , b = 0 ;
    for ( int i = 0 ; i < ans.size() ; i++ )
        a += W[ans[i].first][ans[i].second] ,
        b += W[ans[i].second][ans[i].first] ;
    cout << min(a,b) ;
    return 0;
}
