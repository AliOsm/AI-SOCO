#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include<unordered_set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>

#define lli long long int
#define ld long double
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e5 + 6;

void solve()
{
    lli n, d;
    cin>>n>>d;
    lli x = 0, l = 0, r;
    r = (n * (n - 1)) / 2;
    for(int i = 0; i < n; i ++) {
        for(int j = 0; j <= 20; j ++) {
            if((1 << j ) == i + 1) {
                x ++;
                break ;
            }
        }
        l += x - 1;
//        cout<<x<<endl;
    }
  //  cout<<l<<' '<<r<<endl;
    if(l <= d && r >= d) {
        ;
    }
    else {
        cout<<"NO\n";
        return ;
    }

    lli par[n + 1] = {}, vis[n + 1] = {}, dep[n + 1] ;
    x = -1;
    for(int i = 0; i < n; i ++) {
        par[i] = x ++;
    }
    x = 0;
    for(int i = 0; i < n; i ++) {
        dep[i] = x ++;
    }
    lli deg[n + 1] = {};
    for(int i = 0; i < n - 1; i ++)
        deg[i] = 1;
    while(r > d) {
        lli u = -1;
        for(int i = 0; i < n; i ++) {
            if(vis[i])
                continue ;
            if(u == -1 && deg[i] == 0) {
                u = i;
                continue ;
            }
            if(deg[i] == 0 && dep[i] < dep[u])
                u = i;
        }
        lli up2 = -1;
        for(int i = 0; i < n; i ++) {
            if(up2 == -1 && deg[i] < 2 && dep[u] - dep[i] == 2 ) {
                up2 = i;
                continue ;
            }
            if(deg[i] < 2 && dep[u] - dep[i] == 2 && dep[i] > dep[up2])
                up2 = i;
        }
        if(up2 == -1) {
            vis[u] = 1;
            continue ;
        }
        deg[par[u]] --;
        deg[up2] ++;
        dep[u] --;
        par[u] = up2;
        r --;
    }
    cout<<"YES\n";
    for(int i = 1; i < n; i ++) {
        cout<<par[i] + 1<<' ';
    }
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

//    pre();

    int t = 1;
    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
