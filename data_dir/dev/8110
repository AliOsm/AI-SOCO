#define _USE_MATH_DEFINES

#include <iostream>
#include <cstdio>
#include <string>
#include <cstdlib>
#include <set>
#include <utility>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <cmath>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>
#include <memory>

using namespace std;

//#define int long long
//region TEMPLATE
////@formatter:off
#define double long double
typedef long long ll;
typedef unsigned long long ull;
template<typename T>void __read(T &a) { cin >> a; }
template<typename T, typename ... Args> void __read(T &a, Args &... args) { cin >> a;__read(args...);}
#define make(t, ...) t __VA_ARGS__; __read(__VA_ARGS__)
#define makev(a, n) VI a(n); FOR(n) cin >> a[i];
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
typedef vector<int> VI;
typedef vector<vector<int>> VVI;
typedef pair<int, int> PII;
typedef pair<pair<int, int>, int> PPII;
constexpr ll M7 = 1000000007ll;
constexpr ll M9 = 1000000009ll;
constexpr ll MFFT = 998244353ll;
template<class T> void outv(T &a) { for (auto &x : a) cout << x << ' '; }
static mt19937 rnd(static_cast<unsigned>(chrono::steady_clock::now().time_since_epoch().count())); // NOLINT(cert-err58-cpp)
////@formatter:on
//endregion

int32_t main() {
    ios_base::sync_with_stdio(false), cin.tie(nullptr);
    make(int, n);
    vector<char> was(100'000);
    for (int i = 1; i * i <= n; ++i) {
        if (n % i == 0) {
            was[i] = 1;
        }
    }
    vector<PII> z(was.size());
    make(string, s);
    int cnt0 = 0;
    for (int i = 0; i < s.length(); ++i) {
        int sm = 0;
        for (int j = i; j < s.length(); ++j) {
            sm += s[j] - '0';
            if (sm != 0 && n % sm == 0 && was[min(sm, n / sm)]) {
                if (sm <= n / sm) {
                    z[sm].first++;
                }
                if (sm >= n / sm) {
                    z[n / sm].second++;
                }
            }
            if (sm == 0) {
                cnt0++;
            }
        }
    }
    if (n == 0) {
        cout << static_cast<ll>(s.length() + 1) * s.length() * cnt0 - static_cast<ll>(cnt0) * cnt0;
        return 0;
    }
    ll ans = 0;
    for (int i = 1; i < z.size(); ++i) {
        auto[a, b] = z[i];
        ans += static_cast<ll>(a) * b;
        if (i * i != n) {
            ans += static_cast<ll>(a) * b;
        }
    }
    cout << ans;
    return 0;
}