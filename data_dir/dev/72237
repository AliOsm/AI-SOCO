#include <bits/stdc++.h>

using namespace std;

#define all(x) x.begin(),x.end()
typedef long long ll;

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n,m,k;
	ll s;
	cin>>n>>m>>k>>s;
	//exchange rate,day
	vector<pair<ll,int>>d(n),p(n); 
	for(int i=0;i<n;i++){
		cin>>d[i].first;
		d[i].second=i+1;
		if(i&&d[i].first>d[i-1].first)
			d[i]=d[i-1];
	}
	for(int i=0;i<n;i++){
		cin>>p[i].first;
		p[i].second=i+1;
		if(i&&p[i].first>p[i-1].first)
			p[i]=p[i-1];
	}
	//type,cost
	vector<pair<ll,int>>t1,t2;
	for(int i=0;i<m;i++){
		int t,c;
		cin>>t>>c;
		if(t==1)
			t1.push_back(make_pair(c,i+1));
		else
			t2.push_back(make_pair(c,i+1));
	}
	sort(all(t1));
	sort(all(t2));
	int st=0,e=n-1;
	int ans=-1;
	vector<pair<int,int>>res;
	while(st<=e){
		int mid=(e+st)/2;
		ll tmps=s;
		int ind1=0,ind2=0;
		vector<pair<int,int>>tmp;
		int mx=0;
		for(int i=0;i<k;i++){
			if(ind1<t1.size()&&ind2<t2.size()&&t1[ind1].first*d[mid].first<=t2[ind2].first*p[mid].first)
				tmp.push_back(make_pair(t1[ind1].second,d[mid].second)),tmps-=t1[ind1++].first*d[mid].first;
			else if(ind1<t1.size()&&ind2<t2.size()&&t1[ind1].first*d[mid].first>t2[ind2].first*p[mid].first)
				tmp.push_back(make_pair(t2[ind2].second,p[mid].second)),tmps-=t2[ind2++].first*p[mid].first;
			else if(ind1<t1.size())
				tmp.push_back(make_pair(t1[ind1].second,d[mid].second)),tmps-=t1[ind1++].first*d[mid].first;
			else
				tmp.push_back(make_pair(t2[ind2].second,p[mid].second)),tmps-=t2[ind2++].first*p[mid].first;
			mx=max(mx,tmp.back().second);
		}
		if(tmps>=0){
			e=mid-1;
			res=tmp;
			ans=mx;
		}
		else
			st=mid+1;
	}
	cout<<ans<<endl;
	if(ans!=-1){
		for(int i=0;i<res.size();i++)
			cout<<res[i].first<<" "<<res[i].second<<endl;
	}
	return 0;
}
