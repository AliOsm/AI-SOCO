#include <bits/stdc++.h>
#define int long long
#define pi 3.141592653589793238462643383279502884
using namespace std;
pair<int,pair<int,int> >p[100005];

bool compare(pair<int,pair<int,int> > a,pair<int,pair<int,int> > b)
{
    long double x=a.second.first,y=b.second.first;
    long double t1=0;
    long double t2=0;
    if(a.second.second!=0)
        t1=(atan(abs(x/a.second.second)))*(180/pi);
    if(b.second.second!=0)
        t2=atan(abs(y/b.second.second))*(180/pi);

    if(a.second.second==0)
    {
        if(x>=0)
            t1=90;
        else
            t1=270;
    }
    else if(x<0 && a.second.second<0)
    {
        t1+=180;
    }
    else if(a.second.second<0)
    {
        t1=180-t1;
    }
    else if(x<0)
    {
        t1=360-t1;
    }


    if(b.second.second==0)
    {
        if(y>=0)
            t2=90;
        else
            t2=270;
    }
    else if(y<0 && b.second.second<0)
    {
        t2+=180;
    }
    else if(b.second.second<0)
    {
        t2=180-t2;
    }
    else if(y<0)
    {
        t2=360-t2;
    }

    return (t1<=t2);
}

long double solve(int i,int j)
{
    pair<int,pair<int,int> >a=p[i],b=p[j];
    long double x=a.second.first,y=b.second.first;
    long double t1=0;
    long double t2=0;
    if(a.second.second!=0)
        t1=(atan(abs(x/a.second.second)))*(180/pi);
    if(b.second.second!=0)
        t2=atan(abs(y/b.second.second))*(180/pi);

    if(a.second.second==0)
    {
        if(x>=0)
            t1=90;
        else
            t1=270;
    }
    else if(x<0 && a.second.second<0)
    {
        t1+=180;
    }
    else if(a.second.second<0)
    {
        t1=180-t1;
    }
    else if(x<0)
    {
        t1=360-t1;
    }


    if(b.second.second==0)
    {
        if(y>=0)
            t2=90;
        else
            t2=270;
    }
    else if(y<0 && b.second.second<0)
    {
        t2+=180;
    }
    else if(b.second.second<0)
    {
        t2=180-t2;
    }
    else if(y<0)
    {
        t2=360-t2;
    }
//    if(a.first==0)
//        cout<<t1<<" "<<a.first<<"\n";
//    else if(a.first==1)
//        cout<<t1<<" "<<a.first<<"\n";
//    if(b.first==2)
//        cout<<t2<<" "<<b.first<<"\n";

//    cout<<t2<<" "<<p[i].first<<"\n";
    return (t2-t1);

}


signed main()
{
    cout.precision(18);
    int n;
    cin>>n;

    for (int i = 0; i < n; ++i) {
        cin>>p[i].second.second;
        cin>>p[i].second.first;
        p[i].first=i;
    }

    sort(p,p+n,compare);

    int ind1,ind2;
    long double mn=1e9;
    for (int i = 0; i <n-1 ; ++i) {
//        cout<<p[i].first<<"\n";
        long double mm=solve(i,(i+1)%n);
        if(mm<mn)
        {
            mn=mm;
            ind1=p[i].first;
            ind2=p[(i+1)].first;
        }
    }

    if(360-solve(0,n-1)<mn)
    {
        mn=min(mn,360-solve(0,n-1));
        ind1=p[n-1].first;
        ind2=p[0].first;
    }

//    cout<<2*atan(0.1)<<"\n";
//    cout<<mn<<"\n";
    cout<<ind1+1<<" "<<ind2+1;
}