#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

ll m, n, x, y, z, ans, s, t, k;

pair < ll , ll > cars[300000];
ll stations[300000];


bool chk(ll cap)
{
    ll prev = 0;
    ll tm = 0;

    for(int i = 1; i <= k; i++){

        ll dst = stations[i] - prev;

        if(cap < dst) return false;
        ll x = cap - dst;
        x = min(x, dst);
        ll y = dst - x;
        //cout << x << ' ' << y << endl;
        ll tmp = x + 2 * y;

        tm += tmp;
        prev = stations[i];

    }

    //cout << cap << ' ' << tm ;

    if(tm <= t) return true;
    else return false;

}

int main()
{
    cin >> n >> k >> s >> t;

    for(int i = 1; i <= n; i++) scanf("%I64d %I64d", &cars[i].second, &cars[i].first);

    sort(cars + 1, cars + n + 1);

    for(int i = 1; i <= k; i++) scanf("%I64d", &stations[i]);

    stations[k + 1] = s;
    k++;

    sort(stations + 1, stations + k + 1);


    ll low = 1, high = n;

    while(low < high){

        ll mid = (low + high ) / 2;
       // cout << mid << ' ' ;

        bool c = chk(cars[mid].first);

        if(c) high = mid;
        else low = mid + 1;
        //cout << endl;
    }

    //cout << low << ' ' << high << endl;

    if(chk(cars[low].first)){
        ll ans = 1000000000000000;
        for(ll i = n ; i >= low; i--){
            ans = min(ans, cars[i].second);
        }
        cout << ans << endl;

    }
    else{
        cout << -1 << endl;
    }
    return 0;
}
