#include<bits/stdc++.h>
using namespace std;
#define C          1000000007
#define MOD           998244353
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define ppb          pop_back()
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size())
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)     (a*(b/gcd(a,b)))
#define sqr(a)       ((a) * (a))
#define optimize()   ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef pair<int,int>                         pii;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef priority_queue<int, vector<int>, greater<int> > pq;
typedef vector<int>::iterator                  vit;
typedef set<int>::iterator                     sit;
typedef map<int,int>::iterator                mit;
inline  bool checkBit(int n, int i) { return n&((int)1<<i); }
inline  int setBit(int n, int i) { return n|((int)1<<i);; }
inline  int resetBit(int n, int i) { return n&(~((int)1<<i)); }
inline  bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
inline  bool isLeapYear(int year) { return (year%400==0) || (year%4==0 && year%100!=0); }
inline  void normal(int &a) { a %= MOD; (a < 0) && (a += MOD); }
inline  int modMul(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a*b)%MOD; }
inline  int modAdd(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a+b)%MOD; }
inline  int modSub(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); a -= b; normal(a); return a; }
inline  int modPow(int b, int p) { int r = 1; while(p) { if(p&1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }
inline  int modInverse(int a) { return modPow(a, MOD-2); }
inline  int modDiv(int a,int b) { return modMul(a, modInverse(b)); }
/*const int N=5e5+1;
int prime[N];
int ans=0;
int fact(int n){
	return (n==0?1:(n*fact(n-1))%C);
}
void P(){
for(int i=2;i<=N;i++){
	    if(!prime[i]){
		for(int j=2*i;j<=N;j+=i){
		prime[j]=i;}
		}
	}
}*/
void solve(){
    int n,m;cin>>n>>m;
    string s1,s2;cin>>s1>>s2;
    int count[m]={0},ans=0,k=m-1,i=0;
    for(int i=0;i<m;i++){
    	if(s2[i]=='1'){
    		count[i]++;
		}if(i>0)count[i]+=count[i-1];
	}
	k=m-1;
	for(i=n-1;i>=max((int)0,n-m);i--,k--){
		if(s1[i]=='1'){
			ans=modAdd(ans,modMul(count[k],modPow(2,n-1-i)));
		}
	}
	cout<<ans<<endl;
}
signed main(){   
    optimize();
	int t=1;
	//P();
    //cin>>t;
	while(t--){
		solve();
	}
}