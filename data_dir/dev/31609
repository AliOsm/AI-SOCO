#include <bits/stdc++.h>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d %d", &a, &b)
#define sc3(a, b, c) scanf("%d %d %d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl;
typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N = 3e5 + 100;
int v[N], n, pari[N], soma[N], maxi[N][70];
int quantos[N][2];

int nimp = 0, npar = 0;
ll sum = 0;
ll conta(ll x) {
  int r = 0;
  while (x > 0)
    x -= x & -x, r++;
  return r;
}
int main() {
  cin >> n;
  for (int i = 1; i <= n; i++) {
    ll x;
    cin >> x;
    v[i] = conta(x);
  }
  for (int i = 1; i <= n; i++) {
    pari[i] = pari[i - 1] + (v[i] % 2);

    quantos[i][0] = quantos[i - 1][0] + (pari[i] % 2 == 0);
    quantos[i][1] = quantos[i - 1][1] + (pari[i] % 2 == 1);

    soma[i] = v[i] + soma[i - 1];
    maxi[i][0] = v[i];
    for (int j = 1; j < 70; j++)
      maxi[i][j] = max(maxi[i][j - 1], v[i + j]);
  }
  ll resp = 0;
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= 64; j++) {
      int L = i;
      int R = i + j;
      if (L <= n and R <= n) {
        if (soma[R] - soma[L - 1] - 2 * maxi[i][j] >= 0)
          if ((pari[R] - pari[L - 1]) % 2 == 0)
            resp++;
      }
    }
  for (int i = 1; i <= n; i++) {
    int prox = i + 65;
    if (prox <= n) {
      int aumenta =
          quantos[n][pari[i - 1] % 2] - quantos[prox - 1][pari[i - 1] % 2];
      resp += aumenta;
    }
  }
  cout << resp << endl;
}
