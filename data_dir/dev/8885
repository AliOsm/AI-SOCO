#include <bits/stdc++.h>
using namespace std;
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
typedef long long ll;

const int inf = int(1e9);
const int mod = inf + 7;
const int N = 5e5 + 555;
bool cantchange[N];
bool whichzero[N];
void solve()
{
	int n;
	cin >> n;
	int a[n];
	ll sum = 0;
	rep(i, n){
		double t;
		cin >> t;
		if(t == int(t)) cantchange[i] = 1;
		if(ceil(t) == 0 || floor(t) == 0){ if(t < 0) whichzero[i] = 1; 
		}
		if(t < 0)
			a[i] = ceil(t);
		else a[i] = floor(t);
		sum += a[i];
		// cout << a[i] << " ";
	}
	rep(i, n){
		if(sum == 0) break;
		if(!cantchange[i]){
			if(sum > 0){
				if(a[i] <= 0) {
					if(a[i] == 0){
						if(whichzero[i]) {
							a[i]--, sum--;
							continue;
						}
						else continue;
					}
					a[i]--, sum--;
				}
			}
			else {
				if(a[i] >= 0) {
					if(a[i] == 0){
						if(!whichzero[i]) {
							a[i]++, sum++;
							continue;
						}
						else continue;
					}
					a[i]++, sum++;
				}
			}
		}
	}
	rep(i, n) cout << a[i] << endl;


}
int main()
{
	Red;
	solve();
	return 0;
}
