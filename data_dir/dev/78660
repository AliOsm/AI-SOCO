#define _CRT_SECURE_NO_DEPRECATE
#pragma comment(linker, "/STACK:367772116")
#include <bitset>
#include <array>
#include <cstdlib>
#include <cctype>
#include <cassert>
#include <cstdio>
#include <climits>
#include <iostream>
#include <vector>
#include <set>
#include <sstream>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <stack>
#include <deque>
#include <tuple>
#include <queue>
#include <exception>
#include <functional>
#include <iomanip>
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
using namespace std;


int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);  cout.tie(NULL);
#ifndef ONLINE_JUDGE 
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else 
	//freopen("teleports.in", "r", stdin);
	//freopen("teleports.out", "w", stdout);
#endif // !ONLINE_JUDGE
	int n;
	cin >> n;
	map<int, ll> m;
	map<int, int> lenm;
	for (size_t i = 0; i < n; i++)
	{
		vector<bool>  vb(26);
		string s;
		cin >> s;
		for (size_t j = 0; j < s.size(); j++)
		{
			vb[s[j] - 'a'] = !vb[s[j] - 'a'];
		}
		int id = 0;
		int len = 0;
		for (size_t j = 0; j < 26; j++)
		{
			if (vb[j])
			{
				len++;
				id |= (1 << j);
			}
		}
		m[id]++;
		if(lenm.find(id)== lenm.end())
			lenm[id] = len;
	}
	ll ans = 0;
	for (auto it = m.begin(); it != m.end(); it++)
	{
		ans += it->second*(it->second - 1) / 2;
		if (lenm[it->first] == 1)
		{
			ans += it->second * m[0];
		}
		int curmask = it->first;
		if(curmask)
		for (int i = 0; i < 26; i++)
		{
			if (!(curmask & (1<<i)) && m.find(curmask | (1 << i))!=m.end())
			{
				ans += it->second * (m[curmask | (1 << i)]);
			}
		}
	}
	cout << ans;

}