


#include<bits/stdc++.h>
using namespace std;

#define LL                  long long
#define ull                 unsigned long long LL
#define scl(n)              scanf("%lld", &n)
#define scf(n)              scanf("%lf", &n)
#define sci(n)              scanf("%d", &n)
#define scii(n,m)           scanf("%d %d",&n,&m)
#define sciii(n,m,p)        scanf("%d %d %d",&n,&m,&p)

#define MOD                 1000000007
#define MODP                99999999999973LL
#define pb                  push_back
#define mp                  make_pair
#define pp                  pair<LL,LL>
#define memo(a,b)           memset(a,b,sizeof(a))
#define INF                 1e9
#define EPS                 1e-8
#define Pi                  acos(-1.0)
LL bigmod(LL b, LL p, LL md){if(p==0) return 1;if(p%2==1){ return ((b%md)*bigmod(b,p-1,md))%md;} else {LL y=bigmod(b,p/2,md);return (y*y)%md;}}
#define N 1000


LL powerofprime(LL n,LL k)
{
    LL cnt=0;

    while(n)
    {
        n=n/k;
        cnt+=n;
    }

    return cnt;
}


int main()
{
    LL n,b;
    cin>>n>>b;


    vector< pair<LL,LL> >p_fact;
    for(LL i=2;i*i<=b;i++)
    {
        if(b%i==0)
        {

            LL cnt=0;

            while(b%i==0)
            {
                cnt++;
                b=b/i;
            }

            if(cnt>0)
                p_fact.pb(mp(i,cnt));

        }
    }

    if(b!=1)
        p_fact.pb(mp(b,1));

    LL ans=LONG_LONG_MAX;

    for(int i=0;i<p_fact.size();i++)
    {
        ans=min(ans,powerofprime(n, p_fact[i].first )/p_fact[i].second);
    }
    cout<<ans<<endl;


    return 0;
}



/* LL dx[] = {1,-1,0,0} , dy[] = {0,0,1,-1}; */ // 4 Direction
/* LL dx[] = {1,-1,0,0,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1,1,-1}; */ // 8 Direction
/* LL dx[] = {1,-1,1,-1,2,2,-2,-2} , dy[] = {2,2,-2,-2,1,-1,1,-1}; */ // Knight Direction
/* LL dx[] = {2,-2,1,1,-1,-1} , dy[] = {0,0,1,-1,1,-1}; */ // Hexagonal Direction
