#include <bits/stdc++.h>
using namespace std;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl




typedef long long ll;
const ll mod = 1e9+7;
const int maxn = 1e5 + 5;






int n, m, k, s;
vector<int> g[maxn];
int dist[maxn][102];
int a[maxn];



void flood(int x) {
    queue<int> qq;
    for (int i=1; i<=n; i++) {
	if (x==a[i]) {
	    dist[i][x]=0;
	    qq.push(i);
	}
    }

    while (!qq.empty()) {
	int at = qq.front(); qq.pop();
	for (int to: g[at]) {
	    if (dist[to][x] == -1) {
		dist[to][x]=1+dist[at][x];
		qq.push(to);
	    }
	}
    }
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

    cin>>n>>m>>k>>s;

    for (int i=1; i<=n; i++) {
	cin>>a[i];
    }

    for (int i=0; i<m; i++) {
	int u,v; cin>>u>>v;
	g[u].push_back(v);
	g[v].push_back(u);
    }


    memset(dist,-1,sizeof(dist));

    for (int i=1; i<=k; i++) {
	flood(i);
    }


    for (int i=1; i<=n; i++) {
	vector<int> v;
	for (int j=1; j<=k; j++) {
	    if (dist[i][j]==-1) continue;
	    v.push_back(dist[i][j]);
	}
	sort(v.begin(), v.end());
	v.resize(s);
	int res = accumulate(v.begin(), v.end(), 0);
	cout<<res<<" ";
    }
    cout<<endl;

    return 0;
}
