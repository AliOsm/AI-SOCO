/*
    Author : harshit15
      Before submission
    - Fast IO
    - mx value
    - int overflow
*/
#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 1000003
#define mx  200005
#define mx2 27
#define inf 1e9
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
int arr[mx];
int n;
vector<int> g[mx];
int dis[mx];
set< pair<int, int> > setds;
void djkshtra(int V)
{
	
  
    while (!setds.empty()) 
    { 
        pair<int, int> tmp = *(setds.begin()); 
        setds.erase(setds.begin()); 
  
       
        int u = tmp.second; 
  
         
        fl(i,0,g[u].size()) 
        { 
            int v = g[u][i]; 
            int weight = 1; 
           
            if (dis[v] > dis[u] + weight) 
            {
                if (dis[v] != inf) 
                    setds.erase(setds.find(make_pair(dis[v], v))); 
                dis[v] = dis[u] + weight; 
                setds.insert(make_pair(dis[v], v)); 
            } 
        } 
    } 
}
void even()
{
	fl(i,1,n+1)
	{
		if(arr[i] & 1)continue;
		int x = arr[i];
		if(i + x <= n)
		{
			if(arr[i+x] % 2 == 1)
				dis[i] = 1;
			else g[i+x].pb(i);

		}
		if(i - x >= 1)
		{
			if(arr[i-x] % 2 == 1)
				dis[i] = 1;
			else g[i-x].pb(i);
		}
		if(dis[i] == 1)
		{
			setds.insert(make_pair(1,i));
		}

	}
	djkshtra(n);
}
void odd()
{
	fl(i,1,n+1)
	{
		if(arr[i] % 2 == 0)continue;
		int x = arr[i];
		if(i + x <= n)
		{
			if(arr[i+x] % 2 == 0)
				dis[i] = 1;
			else g[i+x].pb(i);

		}
		if(i - x >= 1)
		{
			if(arr[i-x] % 2 == 0)
				dis[i] = 1;
			else g[i-x].pb(i);
		}
		if(dis[i] == 1)
		{
			setds.insert(make_pair(1,i));
		}

	}
	djkshtra(n);
	fl(i,1,n+1)
	{
		if(dis[i] == inf)dis[i] = -1;
		cout<<dis[i]<<" ";
	}
}
main()
{
	fast;
	
	cin >> n;
	fl(i,1,n+1)
	{
		cin >> arr[i];
	}
	fl(i,1,n+1)
	{
		dis[i] = 1e9;
	}
	even();
	odd();
}