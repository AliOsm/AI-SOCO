#include <bits/stdc++.h>
long long MOD = ((1LL)<<32);
using namespace std;

string buff[1<<20] , finbuff[1<<20];

vector < int > refidx;

map < string , int > realpos;

int hh;

int isref[1<<20];


int main()
{
    #ifndef ONLINE_JUDGE
    freopen("in.in","r",stdin);
    #endif // ONLINE_JUDGE

  //  ios_base::sync_with_stdio(0);
    //cin.tie(0);cout.tie(0);
    string ans;

    string str;

    vector < string > v;

    bool phase = 0;


    string beg = string("\\") + string("begin{thebibliography}");

    //cout<<beg<<endl;

    string ct = string("\\") + string("cite{");


    string bt = string("\\") + string("bibitem{");

    int cur = 0 , incorrect = 0;

    int timer = 0;

    int oo = 0;

    while(getline(cin , str)){

        if(str.size() >= beg.size()){
          //  cout<<str.substr(0 , beg.size())<<endl;
            if(str.substr(0 , beg.size()) == beg){
                phase = 1;
                buff[timer++] = str;
                continue;
            }
        }

        if(phase == 0){
            for(int j = 0 ; j + ct.size() <= str.size() ; j++){
                if(str.substr(j , ct.size()) == ct){
                    int sz = 0 , pos = j + ct.size();
                    int l = pos;
                    while(str[pos] != '}'){
                        ++pos;
                    }
                    v.push_back(str.substr(l , pos - l));
                }
            }
            continue;

        }

        buff[timer] = str;

        if(phase == 1){
            for(int j = 0 ; j + bt.size() <= str.size() ; j++){
                if(str.substr(j , bt.size()) == bt){
                    isref[timer] = 1;
                    int sz = 0 , pos = j + bt.size();
                    int l = pos;
                    while(str[pos] != '}'){
                        ++pos;
                    }

                    string it = str.substr(l , pos - l);
                    realpos[it] = timer;

                }
            }
        }

        timer++;

    }
    int xx = 0;
    for(int j = 0 ; j < timer ; j++){
        if(!isref[j]){
            finbuff[j] = buff[j];
            continue;
        }
        if(realpos[v[xx]] != j)
            incorrect = 1;
        finbuff[j] = buff[realpos[v[xx]]];
        ++xx;
    }
    for(int j = 0 ; j < timer ; j++){
        if(j) ans += "\n";
        ans += finbuff[j];
    }

    if(incorrect) cout<<"Incorrect\n"<<ans<<endl;
    else cout<<"Correct"<<endl;

}
