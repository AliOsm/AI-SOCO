#include <bits/stdc++.h>
 
using namespace std;
 
#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<pii, int> para;
const int inf = 1e9 + 7;
const int maxN = 2e5 + 5;

int t;
string s;
int ile_zer[maxN + 10], log_val[maxN];

int log2(int index) {
	int targetlevel = 0;
	while (index >>= 1) ++targetlevel;
	return targetlevel;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin >> t;
	int k = 3;
	int pot = 8;
	int k2 = 1;
	int pot2 = 2;
	ile_zer[1] = 2;
	FOR(i, 2, maxN) {
		if (pot - k - 1 == i) {
			ile_zer[i] = k;
			k++;
			pot *= 2;
		} else ile_zer[i] = k - 1;
		if (pot2 == i) {
			
			log_val[i] = k2;
			k2++;
			
			pot2 *= 2;
		} else log_val[i] = k2 - 1;
		//cout << i << " " << log_val[i] << " " << log2(i) << endl;
	}
	REP(_, t) {
		cin >> s;
		int ans = 0, cnt = 0;
		REP(i, s.size()) {
			if (s[i] == '0') cnt++;
			else {
				ans++;
				if (cnt == 0) {
					if (i < s.size() - 1 && s[i + 1] == '0') ans++;
				} else {
					int maxim = cnt + ile_zer[cnt] + 1;
					FORD(j, maxim, 2) {
						int lg = log_val[j];
						std::string s2 = std::bitset<20>(j).to_string().substr(20 - lg, lg);
						//cout << s2 << " " << s.substr(i + 1, lg) << endl;
						if (s2 == s.substr(i + 1, lg)) ans++;
					}
					cnt = 0;
				}
			}
		}
		cout << ans << endl;
	}	
	return 0;
}
