#include"bits/stdc++.h"
using namespace std;

#define MAX 100002

int n;

vector<int> b;
vector<int> c;
vector<pair<int, int> > v;

unordered_map<int,multiset<int> > g;

vector<int> deg;
vector<int> pat;
inline void dfs(int b) {
	while (g[b].size()) {
		int go = (*g[b].begin());
		g[b].erase(g[b].begin());
		g[go].erase(g[go].find(b));
		dfs(go);
	}
	pat.push_back(b);
}

int main() {
	cin >> n;
	for (int i = 1; i < n; i++) {
		int a;
		scanf("%d", &a);
		b.push_back(a);
	}
	for (int i = 1; i < n; i++){
		int a;
		scanf("%d", &a);
		c.push_back(a);
	}
	for (int i = 0; i < b.size(); i++) {
		if (b[i] > c[i]) {
			puts("-1");
			return 0;
		}
		v.push_back(make_pair(b[i], c[i]));
	}
	for (int i = 0; i < v.size(); i++) {
		g[v[i].first].insert(v[i].second);
		g[v[i].second].insert(v[i].first);
	}
	for (auto &el : g) {
		if (el.second.size() & 1) {
			deg.push_back(el.first);
		}
	}
	if (deg.size() == 0 || deg.size() == 2) {

	}
	else {
		puts("-1");
		return 0;
	}
	if (deg.size() == 0) {
		deg.push_back(g.begin()->first);
	}
	dfs(deg[0]);
	reverse(pat.begin(), pat.end());
	if (pat.size() != n ) {
		puts("-1");
		return 0;
	}
	for (int i = 0; i < pat.size(); i++) {
		if (i)printf(" ");
		printf("%d", pat[i]);
	}
	puts("");
	return 0;
}