#include <iostream>
#include <vector>
#include <complex>
#include <map>
#include <algorithm>
#include <cassert>
#include <functional>
#include <set>

using namespace std;

typedef long long Long;
typedef vector<int> VI;
typedef vector<VI> VVI;


int main(){

    int N;
    scanf("%d", &N);
    multiset<Long> MS;
    vector<Long> V(N);
    Long sum = 0;
    for (int i = 0; i < N; ++i) {
        int n;
        scanf("%d", &n);
        MS.insert(n);
        V[i] = n;
        sum += n;
    }
    vector<int> A;
    for (int i = 0; i < N; ++i) {
        MS.erase(MS.lower_bound(V[i]));
        sum -= V[i];
        if (sum % 2 == 0 && MS.count(sum / 2)) {
            A.push_back(i);
        }
        sum += V[i];
        MS.insert(V[i]);
    }
    cout << A.size() << endl;
    for (int v : A) {
        cout << v+1 << " ";
    }
    cout << endl;




    return 0;
}
