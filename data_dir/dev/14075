#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
#define MOD 1000000007LL
ll sum[1000010];
ll _get(int pos){
  ++pos;
  if(pos == 0)return 0;
  ll ret = 0;
  for(;pos;pos -= (pos&(-pos)))
   ret = (ret + sum[pos])%MOD;
  return ret;
}
ll get(int lo , int hi){
  return _get(hi) - _get(lo-1);
}
void add(int pos , ll how){
  ++pos;
  how %= MOD;
  for(;pos<1000010;pos += (pos&(-pos)))
   sum[pos] = (sum[pos] + how)%MOD;
}
int main(){
  int N;
  scanf("%d" , &N);
  vi arr(N);
  for(int i=0;i<N;++i)
   scanf("%d" , &arr[i]);
  for(int i=0;i<N;++i){
   ll val = get(0 , arr[i]);
   add(arr[i] , ((val+1)*arr[i] - get(arr[i] , arr[i]))%MOD);
                      }
  ll ans = _get(1000005);
  if(ans < 0)ans += MOD;
  cout<<ans<<'\n';
  return 0;
}
