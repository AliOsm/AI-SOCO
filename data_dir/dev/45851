#include <cstdio>
#include <complex>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <vector>
#include <cstring>
#include <queue>
#include <ctime>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)

int nextint()
{
    int t;
    scanf("%d",&t);
    return t;
}

typedef long long ll;
const int INF=10000000;

vector<ll> interestring;

void push_interestring(ll r)
{
    ll i=r;
    ll v=1;
    for(;;)
    {
        interestring.push_back(i);
        v++;
        ll l=r/v;
        if(l>=i) break;
        i=l;
    }
    for(;i>0;i--)
        interestring.push_back(i);

}

int solve(ll n, int m)
{
    ll a[3][3];
    ll b[3][3];
    ll tmp[3][3];
    a[0][0]=a[1][1]=1;
    a[0][1]=a[1][0]=0;
    b[0][0]=1; b[0][1]=1;
    b[1][0]=1; b[1][1]=0;
    while(n)
    {
        if(n&1)
        {
            REP(i,2) REP(j,2) tmp[i][j]=0;
            REP(i,2) REP(j,2) REP(k,2)
                tmp[i][j]=(tmp[i][j]+a[i][k]*b[k][j])%m;
            REP(i,2) REP(j,2)
                    a[i][j]=tmp[i][j];
        }
        n>>=1;
        REP(i,2) REP(j,2) tmp[i][j]=0;
        REP(i,2) REP(j,2) REP(k,2)
            tmp[i][j]=(tmp[i][j]+b[i][k]*b[k][j])%m;
        REP(i,2) REP(j,2)
            b[i][j]=tmp[i][j];
    }
    return a[0][1];
}

int main()
{
    ll m;
    ll l,r;
    ll k;
    cin>>m>>l>>r>>k;
    push_interestring(r);
    push_interestring(l-1);
    sort(interestring.rbegin(),interestring.rend());
    for(int i=0;i<interestring.size();i++)
    {
        if(r/interestring[i]-(l-1)/interestring[i]>=k)
        {
            cout<<solve(interestring[i],m)<<endl;
            return 0;
        }
    }
    return 0;
}