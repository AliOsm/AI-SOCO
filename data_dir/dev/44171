#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> ii;

const int MAX = 1e3 + 5;
int ans[MAX][MAX];
int NEXT_IDX = 3;

int main() {
	int k;
	scanf("%d", &k);
	if(k == 1) {
		puts("2");
		puts("NY");
		puts("YN");
		return 0;
	}

	int msb = 31 - __builtin_clz(k);
	int sink = 2;
	int last = msb;
	ford(i, msb, 0) {
		if(k & (1 << i)) {
			int a = NEXT_IDX++;
			int b = 0;
			if(i) {
				b = NEXT_IDX++;
			}
			ans[1][a] = ans[a][1] = 1;
			if(i) {
				ans[1][b] = ans[b][1] = 1;
			}
			int need = i - 2;
			while(need >= 0) {
				int c = NEXT_IDX++, d = NEXT_IDX++;
				ans[a][c] = ans[c][a] = ans[a][d] = ans[d][a] = 1;
				ans[b][c] = ans[c][b] = ans[b][d] = ans[d][b] = 1;
				a = c, b = d;
				need--;
			}
			fori(j, 0, last - (i + !i)) {
				int new_sink = NEXT_IDX++;
				ans[sink][new_sink] = ans[new_sink][sink] = 1;
				sink = new_sink;
			}
			ans[a][sink] = ans[sink][a] = 1;
			if(i) {
				ans[b][sink] = ans[sink][b] = 1;
			}
			last = i;
		}
	}

	int n = NEXT_IDX - 1;
	printf("%d\n", n);
	fori(i, 1, n + 1) {
		fori(j, 1, n + 1) {
			if(ans[i][j]) {
				printf("Y");
			}
			else {
				printf("N");
			}
		}
		printf("\n");
	}


	return 0;
}

