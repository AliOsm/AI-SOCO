//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 300005
using namespace std;
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
typedef long long i64;

i64 K, N, men, cnt, may, acum, need, mx, extra;
i64 a[MAX];

i64 sum( i64 x )
{
    i64 tmp = 0;
    for( i64 i = 1; i <= N; i ++ )
    {
        tmp += x;
        x *= 2;
        if( tmp > K )
            return tmp;
    }
    return tmp;
}

int main()
{
    optimiza_io 
    cin >> K >> N;
    men = ( N * ( N + 1 ) ) / 2;
    cnt = 1;
    if( K < men )
    {
        cout << "NO\n";
        exit(0);
    }
    i64 ini = 1;
    i64 fin = K;
    while( ini < fin )
    {
        i64 mid = ( ini + fin ) / 2;
        if( sum( mid ) >= K )
            fin = mid;
        else
            ini = mid + 1;
    }
    a[1] = ini;
    men = a[1];
    
    for( i64 i = 2; i <= N; i ++ )
    {
        a[i] = a[i - 1] + 1;
        men += a[i];
    }
    
    need = K - men;
    mx = a[1];
    if( need < 0 )
    {
        cout << "NO\n";
        return 0;
    }
    mx = a[1] * 2;
    
    for( i64 i = 2; i <= N; i ++ )
    {        
        mx = a[i - 1] * 2;
        a[i] += acum;
        i64 loops = ( mx - a[i] );
        if( loops <= 0 )
            continue;
        i64 suma = ( N - i + 1 );
        i64 canloop = min( need / suma , loops );
        if( canloop )
        {
            need -= canloop * suma;
            acum += canloop;
            a[i] += canloop;
        }
        
    }
    
    cout << "YES\n";
    for( i64 i = 1; i <= N; i ++ )
        cout << a[i] << " ";
    return 0;
}