# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)%2)
typedef long long ll;
typedef long double ld;
const ll oo=2*1000*1000*1000;
const int _cnt=1000*1000;
const int _p=1000*1000*1000+7;
int o(int x) { return x%_p; }
ll o(ll x) { return x%_p; }
int gcd(int a,int b) { return b?gcd(b,a%b):a; }
int lcm(int a,int b) { return a/gcd(a,b)*b; }
using namespace std;

void file_put(){
	freopen("filename.in","r",stdin);
	freopen("filename.out","w",stdout);
}

string s,t,p;
int n,cnt=0; 

int main(){
	//file_put();
	
	cin>>s;
	cin.ignore();
	cin>>t;
	n=s.length();
	p="";
	for (int i=1; i<=n; i++) p=p+=' ';
	for (int i=0; i<n; i++) cnt+=(s[i]!=t[i]);
	if (cnt&1) {
		printf("impossible\n");
		return 0;
	}
	cnt/=2;
	for (int i=0; i<n; i++) {
		if (s[i]==t[i]) {
			p[i]=s[i];
			continue;
		}
		if (cnt) {
			p[i]=s[i];
			cnt--;
		} else 
			p[i]=t[i];
	}
	cout<<p<<endl;
	
	return 0;
}

