#include <cstdio>
#include <vector>
using namespace std;

class Matrix{
public:
    typedef vector<int> SEG;
    int n,m;
    vector<SEG> u;
    Matrix():n(),m(){}
    Matrix(int c):u(c,SEG(c)){for(n=m=c;c--;u[c][c]=1);}
    Matrix(int n, int m):n(n),m(m),u(n,SEG(m)){}
    SEG& operator [](int row){return u[row];}
    const SEG& operator [](int row) const{return u[row];}
    Matrix operator ~() const{
        Matrix ret(m,n);
        for(int i=0;i<m;i++) for(int j=0;j<n;j++) ret[i][j]=u[j][i];
        return ret;
    }
    Matrix operator *(const Matrix& c) const{
        if(m!=c.n) return Matrix();
        Matrix ret(n,c.m),v=~c;
        for(int i=0;i<n;i++) for(int j=i;j<c.m;j++){
            for(int k=0;k<m;k++) ret[i][j]+=u[i][k]*v[j][k];
            ret[j][i]=ret[i][j];
        }
        return ret;
    }
};

typedef long long LL;
int n,m,x,y,deg[700];

int main(){
    scanf("%d%d",&n,&m);
    Matrix a(n,n);
    for(int i=0;i<m;i++){
        scanf("%d%d",&x,&y);
        deg[--x]++;
        deg[--y]++;
        a[x][y]=a[y][x]=1;
    }
    Matrix b=a*a,c=a*b;
    c=Matrix(n,n);
    for(int i=0;i<n;i++) for(int j=i+1;j<n;j++){
        int s=0;
        for(int k=0;k<n;k++)
            if(k!=i && k!=j) s+=a[i][k]*(b[k][j]-a[i][j]);
        c[j][i]=c[i][j]=s;
    }
    long long ans=0;
    for(int i=0;i<n;i++) for(int j=0;j<n;j++)
        ans+=LL(b[i][j])*(c[i][j]-a[i][j]*(deg[i]+deg[j]-4));
    printf("%I64d\n",ans/10);
}
