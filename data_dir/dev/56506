#include <bits/stdc++.h>
using namespace std;

vector<int> e[200005];
int w[200005], high[200005], low[200005], n;

void dfs(int x) {
    if(e[x].size() == 0) {
        w[x] = 1;
        low[x] = high[x] = 0;
        return;
    }
    w[x] = 0;
    int sum = 0, minplay = 300000;
    for(int i = 0; i < e[x].size(); i++) {
        dfs(e[x][i]);
        w[x] += w[e[x][i]];
        minplay = min(minplay, low[e[x][i]]);
        sum += w[e[x][i]] - high[e[x][i]];
    }
    high[x] = w[x] - minplay - 1;
    low[x] = sum - 1;
}

int main() {
    scanf("%d", &n);
    int u, v;
    for(int i = 0; i < n - 1; i++) {
        scanf("%d %d", &u, &v);
        e[--u].push_back(--v);
    }
    dfs(0);
    printf("%d %d\n", high[0] + 1, low[0] + 1);
}
