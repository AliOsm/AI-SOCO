 /*
    __                      _    _            __                 __
   / /_/\__        __ _    | | _| | __     _  \ \       __/\__  / /
  / /\    /       / _` |   | |/ / |/ /    (_)  | |      \    / / / 
 / / /_  _\      | (_| |   |   <|   <      _   | |      /_  _\/ /  
/_/    \/         \__,_|___|_|\_\_|\_\    (_)  | |        \/ /_/   
                      |_____|                 /_/                  

*/
#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
using namespace std;
const long double pi = 3.14159265358979323;
const double EPS = 1e-12;
const int N = 1e6 + 5;
const int MOD = 1e9 + 7;

ll a[N];
map<ll, ll> lose, pos;
int main(){
    fast;
    ll n;
    cin >> n;
    for(int i = 1; i <= n; i++){
        cin >> a[i];
        pos[a[i]] = i;
    }
    lose[pos[n]] = 1;
    for(int i = n - 1; i >= 1; i--){
        ll t = pos[i];
        bool flag = 0;
        while(t > 0){
        t -= i;
        if(lose.count(t)){
            flag = 1;
            break;
         }
       }
       while(t <= n){
        t += i;
        if(lose.count(t)){
            flag = 1;
            break;
        }
       }
       if(!flag) lose[pos[i]] = 1;
    }
    for(int i = 1; i <= n; i++){
        if(lose.count(pos[a[i]])) cout << "B";
        else cout << "A";
    }
    return 0;
}
/*
 check for corner cases(n == 1?)
 read the highlighted part again
 check nested for loops, flags, and breaks
*/
