#include <list>
#include <deque>
#include <queue>
#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <functional>
#include <iomanip>
#include <vector>
#include <stack>
#include <map>
#include <set>
#include <memory>
#include <hash_map>
#include <hash_set>
#include <cmath>
#include <string>
#include <cctype>
#include <iomanip>
#include <sstream>
#include <utility>
#include <ctime>
#include <bitset>
#include <iterator>
#include <numeric>

using namespace std;

const long long mod = (long long)1e9 + 7;

long long powmod(long long base, long long power) {
    long long ret = 1;
    while(power) {
        if(power&1)ret=(ret*base)%mod;
        base=(base*base)%mod;
        power/=2;
    }
    return ret%mod;
}

long long inv(long long n) {
    return powmod(n, mod-2LL);
}

long long mul(long long a, long long b) {
    return (a * b) % mod;
}

map<int, int> mp;

void mpadd(int n) {
    if (mp.find(n)==mp.end()){
        mp[n]=0;
    }
    ++mp[n];
}

long long fact(long long lt ,long long rt) {
    long long ret = 1;
    while(lt <= rt) {
        ret = mul(ret, lt);
        ++lt;
    }
    return ret;
}

long long invfact(long long lt, long long rt) {
    long long ret = 1;
    while(lt <= rt) {
        ret = mul(ret, inv(lt));
        ++lt;
    }
    return ret;
}

int main() {

#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
        int n;
        cin >> n;

        bool flag=true;
        for (int i = 0; i < n; ++i) {
            int t;
            cin >> t;
            if (t == 1) continue;
            flag=false;
            for (int j = 2; j * j <= t; ++j) {
                while(t % j == 0) {
                    mpadd(j);
                    t/=j;
                }
            }
            if (t > 1 ) {
                mpadd(t);           
            }
        }
        if(flag) {
            cout << 1 << endl;
            return 0;
        }
        long long ans = 1, n_1=invfact(1,n-1LL),cnt=0;
        for (map<int,int>::iterator it = mp.begin(); it != mp.end(); ++it) {
            int a = it->second;
            ans=mul(ans,fact(a+1LL,a+n-1LL));
            ++cnt;
        }
        cout << mul(ans, powmod(n_1,cnt*1LL));
        return 0;

}