#include <bits/stdc++.h>
#pragma GCC optimize ("Ofast")
#pragma GCC target ("sse4")
#pragma GCC optimize("unroll-loops")
#define ll          long long
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
using namespace std;
#define MAX 10000
ll dp[1005][10005],cost[1005],birds[1005];
void divconq(int i,int jl,int jr,int kl,int kr){
    if(jl>jr)
        return;
    int jmid=(jl+jr)/2,k,mink=min(kr,jmid);
    dp[i][jmid]=-1e15;
    for(k=kl;k<=min(kr,jmid);k++)
        if(jmid-k<=birds[i] and dp[i-1][k]-cost[i]*(jmid-k)>dp[i][jmid]){
            dp[i][jmid]=dp[i-1][k]-cost[i]*(jmid-k);
            mink=k;
        }
    divconq(i,jl,jmid-1,kl,mink);
    divconq(i,jmid+1,jr,mink,kr);
}
int main()
{
	std::ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	ll w,b,x,res=0;
	int n,i,j;
	cin>>n>>w>>b>>x;
	for(i=1;i<=n;i++)
		cin>>birds[i];
	for(i=1;i<=n;i++)
		cin>>cost[i];
	for(i=0;i<=MAX;i++)
        if(i>birds[1] or i*cost[1]>w)
        	dp[1][i]=-1e15;
        else
        	dp[1][i]=w-i*cost[1];
    for(i=2;i<=n;i++){
    	for(j=0;j<=MAX;j++)
    		if(dp[i-1][j]<0)
    			dp[i-1][j]=-1e15;
    		else
    			dp[i-1][j]=min(dp[i-1][j]+x,w+b*j);
    	divconq(i,0,MAX,0,MAX);
    }
    for(i=0;i<=MAX;i++)
    	if(dp[n][i]>=0)
    		res=i;
    cout<<res;
	return 0;
}