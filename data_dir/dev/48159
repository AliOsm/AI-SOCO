#include <bits/stdc++.h>
using namespace std;

string to_string(string s) {
  return '"' + s + '"';
}

string to_string(const char* s) {
  return to_string((string) s);
}

string to_string(bool b) {
  return (b ? "true" : "false");
}

template <typename A, typename B>
string to_string(pair<A, B> p) {
  return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}

template <typename A>
string to_string(A v) {
  bool first = true;
  string res = "{";
  for (const auto &x : v) {
    if (!first) {
      res += ", ";
    }
    first = false;
    res += to_string(x);
  }
  res += "}";
  return res;
}

void debug_out() { cerr << endl; }

template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
  cerr << " " << to_string(H);
  debug_out(T...);
}

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

void test_case() {
  int b, w;
  cin >> b >> w;
  vector<pair<int, int>> res;
  int r = 2, c = 2;
  while (b > 0 && w > 0) {
    res.emplace_back(r, c);
    if (r & 1) {
      --b;
    } else {
      --w;
    }
    ++r;
  }
  if (w > 0) {
    int row = 3;
    while (row < r && w > 0) {
      res.emplace_back(row, 1);
      row += 2;
      --w;
    }
    row = 3;
    while (row < r && w > 0) {
      res.emplace_back(row, 3);
      row += 2;
      --w;
    }
    if (w > 0 && (r % 2 == 0)) {
      res.emplace_back(r, 2);
      --w;
    }
    if (w > 0) {
      cout << "NO\n";
      return;
    }
  } else if (b > 0) {
    int row = 2;
    while (row < r && b > 0) {
      res.emplace_back(row, 1);
      row += 2;
      --b;
    }
    row = 2;
    while (row < r && b > 0) {
      res.emplace_back(row, 3);
      row += 2;
      --b;
    }
    if (b > 0) {
      res.emplace_back(1, 2);
      --b;
    }
    if (b > 0 && (r % 2 == 1)) {
      res.emplace_back(r, 2);
      --b;
    }
    if (b > 0) {
      cout << "NO\n";
      return;
    }
  }
  cout << "YES\n";
  for (auto [i, j] : res) {
    cout << i << " " << j << "\n";
  }
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  int q;
  cin >> q;
  while (q--) {
    test_case();
  }
  return 0;
}
