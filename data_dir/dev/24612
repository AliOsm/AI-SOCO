#include <string.h>
#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stdlib.h>    
#include <time.h> 
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair

using namespace std;
const int N = 400000;
const int mod = 1000000007;

int n,q;
int a[N];
int rq[N][20];
int pre[N];
void init(){
	for(int i = 0; i < n; ++i) {
		rq[i][0] = a[i];
	}

	for(int i = 1; i <20; ++i) {
		for(int j = 0; j < n; ++j) {
			if(j+(1<<i)>n)break;
			int nt_idx = j+(1<<(i-1));
			rq[j][i] = min(rq[j][i-1], rq[nt_idx][i-1]);
		}
	}
}

int sh(int s, int e) {

	int len = e-s+1;
	int k = 0;
	while((1<<(k+1))<=len)k++;

	int idx = s, nt_idx = e-(1<<k)+1;
	return min(rq[idx][k],rq[nt_idx][k]);
}

int sol(){
	init();
	_clr(pre);
	fr(i,0,n) {
		if(a[i]==q+1)a[i] = 0;
		else {
			if(pre[a[i]]!=-1) {
				int min_v = sh(pre[a[i]],i);
				//printf("i = %d pre = %d min = %d\n",i,pre[a[i]],min_v);
				if(min_v < a[i]) {
					return 0;
				}
			}
			pre[a[i]]=i;
		}
	}
	int min_v = 0;
	int idx = -1;
	fr(i,0,n) {
		if(a[i]==0) {
			if(i==0) {
				a[i] = 1;
			}
			else
				a[i] = a[i-1];
			idx = i;
		}
		min_v = max(min_v,a[i]);
	}
	if(min_v!=q) {
		if(idx==-1) return 0;
		a[idx] = q;
	}
	return 1;
}

int main() {
	while(cin>>n>>q) {
		fr(i,0,n) {
			sf("%d",&a[i]);
			if(a[i]==0)a[i] = q+1;
		}
		if(sol()) {
			pf("YES\n");
			fr(i,0,n)pf("%d ",a[i]);
			pf("\n");
		}
		else {
			pf("NO\n");
		}
	}
}

