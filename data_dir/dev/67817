#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<queue>
#include<stack>
typedef long long int uli;
using namespace std;

struct ev{
    int l,r,t,idx;
    ev(){}
    ev(int l, int r, int t,int idx):l(l),r(r),t(t),idx(idx){}
    bool operator <(ev a) const{
        if(l!=a.l) return l<a.l;
        if(t!=a.t) return t<a.t;
        return r<a.r;
    }
};
const int mx = 1e5+10;
ev d[mx+mx];
int qs[mx];
int match[mx];

int main(){
//    freopen("data.in","r",stdin);
    int n,m;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d %d",&d[i].l,&d[i].r);
        d[i].idx = i;
        d[i].t = 2;
    }
    scanf("%d",&m);
    for(int i=0;i<m;i++){
        scanf("%d %d %d",&d[n+i].l,&d[n+i].r,qs+i);
        d[n+i].t = 1;
        d[n+i].idx = i;
    }
    sort(d,d+n+m);

    set<pair<int,int> >s;
    set<pair<int,int> >::iterator it;
    bool ok = true;
    memset(match,-1,sizeof match);
    for(int i=0;i<n+m && ok;i++){
        if(d[i].t==1){
            s.insert(make_pair(d[i].r,d[i].idx) );
        }
        else{
            it = s.lower_bound(make_pair(d[i].r,-1));
            if(it==s.end()) ok = false;
            else{
                match[d[i].idx] = it->second;
                qs[it->second]--;
                if(qs[it->second]==0){
                    s.erase(it);
                }
            }
        }
    }
    if(ok){
        puts("YES");
        for(int i=0;i<n;i++){
            if(i!=0)printf(" ");
            printf("%d",1+match[i]);
        }
        printf("\n");
    }
    else puts("NO");
}
