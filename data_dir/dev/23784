// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 101000 + 77;
int n , m , q , A;
int f[N] , Cf[N];
char S[N] , T[N] , P[N] , C[N];
inline int Calc(){
   memset(f , 0 , sizeof(f));
   memset(Cf , 0 , sizeof(Cf));
   int t = strlen(P + 1);
   for(int i = 2;i <= t;++ i){
      int cur = f[i - 1];
      while(cur > 0 && P[cur + 1] != P[i])
         cur = f[cur];
      if(P[cur + 1] == P[i])
         ++ cur;
      f[i] = cur;
   }
   for(int i = 2;i <= t;++ i){
      int cur = Cf[i - 1];
      while(cur > 0 && C[cur + 1] != C[i])
         cur = Cf[cur];
      if(C[cur + 1] == C[i])
         ++ cur;
      Cf[i] = cur;
   }
   for(int i = m + 2;i <= t;++ i)
      f[i] = max(f[i] , f[i - 1]) , Cf[i] = max(Cf[i] , Cf[i - 1]);
   for(int i = 1;i < n;++ i){
      int idP = i + m + 1;
      int idC = n - i + 1 + m;
      if(f[idP] + Cf[idC] >= m)
         return 1;
   }
   return 0;
}
int main(){
   scanf("%s %d" , S + 1 , & q);
   n = strlen(S + 1);
   while(q --){
      scanf("%s" , T + 1);
      m = strlen(T + 1);
      for(int i = 1;i <= m;++ i)
         P[i] = T[i] , C[i] = T[m - i + 1];
      P[m + 1] = '#';
      C[m + 1] = '#';
      for(int i = 1;i <= n;++ i)
         P[i + m + 1] = S[i] , C[i + m + 1] = S[n - i + 1];
      if(m <= 1 || m > n)
         continue ;
      A += Calc();
   }
   printf("%d\n" , A);
   return 0;
}

