/*
 * WATCH THIS
 */
#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include "bits/stdc++.h"

#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define F first
#define S second

using ll = long long;
using ii = pair<int, int>;
using db = long double;

#ifdef ONLINE_JUDGE
	#define cerr if(0)cerr
#endif

template<class C> void amin(C &a4, C b4) {
	a4 = min(a4, b4);
}
template<class C> void amax(C &a4, C b4) {
	a4 = max(a4, b4);
}

template<class T> ostream &operator<<(ostream& os, vector<T> V) {
	os << "[";
	for (auto vv : V)
		os << vv << ",";
	return os << "]";
}
template<class L, class R> ostream &operator<<(ostream &os, pair<L, R> P) {
	return os << "(" << P.first << "," << P.second << ")";
}


const int N = 5e5 + 5;
//const int MOD = 998244353;
const int MOD = 1e9 + 7;

int rotateCW(int x, int v){
	return (x + v) % 360;
}
int rotateCCW(int x, int v){
	return (x + 360 - v) % 360;
}
int neg[N], pos[N];
int main() {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif

	int n;
	cin >> n;
	int zero = 0;
	for(int i = 0; i < n; i++){
		string str;
		cin >> str;
		bool ok = true;
		int cnt = 0;
		int mxNeg = 0;
		for(auto c : str){
			if(c == '(')cnt++;
			else cnt--;
			ok &= (cnt >= 0);
			mxNeg = min(mxNeg, cnt);
		}
		if(cnt){
			if(cnt > 0 && ok)
				pos[cnt]++;
			else if(cnt < 0 && abs(mxNeg) <= abs(cnt))
				neg[-cnt]++;
		}	else {
			if(ok){
				zero++;
			}
		}
	}
	int ans = zero / 2;

	for(int i = 1; i < N; i++)
		ans += min(neg[i], pos[i]);

	cout << ans << '\n';


	return 0;
}
/*
 * GET LOST
 */
