#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int> ,null_type,less<pair<int,int> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
long long MOD = 998244353;
pair<int,int> dx[4] = {{1,0},{-1,0},{0,1},{0,-1}};
long long fastpow(long long x,long long k)
{
    if(!k)
        return 1;
    if(k & 1)
        return ((x * fastpow(x,k-1) % MOD) % MOD) % MOD;
    long long ans = fastpow(x,k/2);
    ans %= MOD;
    ans *= ans;
    ans %= MOD;
    return ans;
}
long long sumF(long long x)
{
    int s = 0;
    while(x)
        s += x%10,x /= 10;
    return s;
}
vector<int> arr[26];
int main()
{
    int n;
    string s;
    cin >> n >> s;
    for(int i = 0;i < n;i++)
        arr[s[i] - 'a'].push_back(i);
    long long ans = 0;
    for(int i = 0;i < 26;i++)
    {
        if(arr[i].size() == 0)
            continue;
        long long lF = 3e5;
        long long hF = -1;
        for(int j = 0;j < 26;j++)
        {
            if(i == j)
                continue;
            if(arr[j].size() > 0){
            lF = min(lF,1LL*arr[j][0]);
            hF = max(hF,1LL*arr[j][arr[j].size() - 1]);
            }
        }
        ans += 1LL * (n-hF) * (lF+1) - 1;
        ans %= MOD;
    }
    cout << (ans + 1) % MOD;
    return 0;
}
