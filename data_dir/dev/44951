#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int MAX = 3e3 + 5;
int bit[MAX], p[MAX];
bool visited[MAX * MAX][2];
double memo[MAX * MAX][2];
int n, needed;

void update(int idx, int val) {
	while(idx < MAX) {
		bit[idx] += val;
		idx += idx & -idx;
	}
}

int query(int idx) {
	int sum = 0;
	while(idx) {
		sum += bit[idx];
		idx -= idx & -idx;
	}
	return sum;
}

double roll(int moves, int player) {
	if(moves <= 0) {
		return 0.0;
	}
	double &ans = memo[moves][player];
	if(visited[moves][player]) {
		return ans;
	}
	visited[moves][player] = true;
	ans = 0.0;
	if(player == 0) {
		ans = roll(moves - 1, !player) + 1.0;
	}
	else {
		ans = (0.5 * roll(moves - 1, !player) + 1.5) / 0.5;
	}
	return ans;
}

int main() {
	scanf("%d", &n);
	fori(i, 1, n + 1) {
		scanf("%d", p + i);
	}
	
	ford(i, n, 1) {
		needed += query(p[i]);
		update(p[i], 1);
	}

	fori(i, 0, needed + 1) {
		roll(i, 0);
		roll(i, 1);
	}
	printf("%.15lf\n", roll(needed, 0));

	return 0;
}

