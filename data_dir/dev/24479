#include <bits/stdc++.h>
using namespace std;
#define int long long
const int N = 3601;
const int mod = 998244353;
int ncr[N][N], r[N][N], c[N][N], fact[N];
void pre() {
    ncr[0][0] = fact[0] = 1;
    for(int i=1;i<N;i++) {
        ncr[i][0] = 1;
        fact[i] = fact[i-1]*i%mod;
        for(int j=1;j<=i;j++) {
            ncr[i][j] = ncr[i-1][j]+ncr[i-1][j-1];
            if(ncr[i][j]>=mod)
                ncr[i][j] -= mod;
            // cout<<i<<" "<<j<<" "<<ncr[i][j]<<endl;
        }
    }
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    pre();
    int h,w,hh=0,ww=0,n,x1,y1,x2,y2;
    cin>>h>>w>>n;
    vector<int> markh(h+1,1),markw(w+1,1);
    markh[0] = markw[0] = 0;
    for(int i=0;i<n;i++) {
        cin>>x1>>y1>>x2>>y2;
        markh[x1] = 0;
        markh[x2] = 0;
        markw[y1] = 0;
        markw[y2] = 0;
    }
    for(int i=1;i<=h;i++) hh+=markh[i];
    for(int i=1;i<=w;i++) ww+=markw[i];
    r[0][0] = c[0][0] = 1;
    for(int i=1;i<=h;i++) {
        r[i][0] = 1;
        for(int j=1;j<=i;j++) {
            r[i][j] = r[i-1][j];
            if(markh[i]&&markh[i-1]) {
                r[i][j] += r[i-2][j-1];
                if(r[i][j]>=mod)
                    r[i][j]-=mod;
            }
        }
    }
    for(int i=1;i<=w;i++) {
        c[i][0] = 1;
        for(int j=1;j<=i;j++) {
            c[i][j] = c[i-1][j];
            if(markw[i]&&markw[i-1]) {
                c[i][j] += c[i-2][j-1];
                if(c[i][j]>=mod)
                    c[i][j]-=mod;
            }
        }
    }
    int ans = 0;
    for(int dh=0;dh<=hh && 2*dh<=ww;dh++) {
        for(int dw=0;(dh+2*dw)<=hh && (2*dh+dw)<=ww;dw++) {
            int a = r[h][dw]*ncr[hh-2*dw][dh]%mod, b = c[w][dh]*ncr[ww-2*dh][dw]%mod, c = fact[dh]*fact[dw]%mod;
            ans = (ans+((a*b%mod)*c)%mod)%mod;
        }
    }
    cout<<ans;
    return 0;
}