/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author alireza_kaviani
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define sep                         ' '
#define endl                        '\n'
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e3 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n, m, A[MAXN][MAXN], ans = INF;
vector<ll> Ans;

int main() {
    fast_io;

    cin >> n >> m;
    for (ll i = 0; i < m; i++) {
        for (ll j = 0; j < n; j++) cin >> A[i][j];
    }

    for (ll i = 0; i + 1 < n; i++) {
        vector<pll> vec;
        for (ll j = 0; j < m; j++) {
            vec.push_back({A[j][i] - A[j][n - 1], j});
        }
        sort(all(vec), greater<pll>());
        ll sum = 0;
        set<ll> st;
        for (ll j = 0; j < m; j++) st.insert(j + 1);
        for (ll j = 0; j < m; j++) {
            if (sum + vec[j].X >= 0) {
                sum += vec[j].X;
                st.erase(vec[j].Y + 1);
            }
        }
        if (st.size() < ans) {
            ans = st.size();
            Ans = vector<ll>(st.begin(), st.end());
        }
    }

    cout << ans << endl;
    for (ll j : Ans) cout << j << sep;

    return 0;
}
/*

*/
