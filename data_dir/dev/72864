// in the name of god 
//# bazi az algorithm ha be toore gheyre qabele fahmi khafanan 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
#include <bits/stdc++.h>
#include <unistd.h>
using namespace std ;
using namespace __gnu_pbds;
void operator+=(vector<int>&in1,const vector<int>&in2){for(int i=0;i<in2.size();i++)in1.push_back(in2[i]);}
#define y2 sdfklgjsdkfd
#define y1 sdfklgjsdkafd
#define L first 
#define R second
#define X first 
#define Y second
#define int long long 
typedef long long ll ;
typedef long double ld ;
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define ALL(x) (x).begin(),(x).end()
typedef pair < int , int > pii ; 
typedef pair < int , pii > pi_ii ;
typedef pair < pii , int > pii_i ;
typedef pair < pii , pii > pii_ii ;
#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%I64d"
const int maxL = 22 ;
const ll inf = 1e16 ;
const int baze = 156 ;
const int maxn = 1e5 +10 ;

string s , s1= "Bulbasaur";
int ans = 1e6 ;
map < char , int > mp0 , mp1 ;

main ( ) 
{ 
  cin >> s ;
  for ( int i = 0 ; i < s . size ( ) ; i ++ ) 
    mp0 [ s [ i ] ] ++ ;
  for ( int i = 0 ; i < s1 . size ( ) ; i ++ ) 
    mp1 [ s1 [ i ] ] ++ ;
  for ( int i = 0 ; i < s1 . size ( ) ; i ++ ) 
    ans = min ( ans , mp0 [ s1 [ i] ] / mp1 [ s1 [ i ] ] ) ; 
  cout << ans ; 
} 

/*/
int n , ar [ maxn ] , mark [ maxn ] , ans  ;
vector < int > vc [ maxn ] ; 

main ( ) 
{ 
  cin >> n; 
  for ( int i = 0 ; i < n ; i ++ ) cin >> ar [ i ] ;
  for ( int i = 1 ; i < maxn ; i ++ )
    for ( int j = i ; j < maxn ; j += i )
      vc [ j ] . push_back ( i ) ;
  for ( int i = 0 ; i < n ; i ++ )
    for ( int j = 0 ; j < vc [ ar [ i ] ] . size ( ) ; j ++ )
      mark [ vc [ ar [ i ] ] [ j ] ] ++ ;
  for ( int i = 2 ; i < maxn ; i ++ )
    ans = max ( ans , mark [ i ] )  ;
  cout << ans ;
} 
*/
