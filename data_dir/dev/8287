#include <bits/stdc++.h>
using namespace std;
#define s second
#define f first
typedef long long ll;
typedef long double ld;
const int N = 2e5+5, M = 305;
int n, m, p[N][2], r[N][2], ans, d, cur;
map<int, bool> mark[N];
pair<int, pair<int, int>> E[N];
vector<int> vec[N];
int find(int x)
{
    return (p[x][d] == x? x : p[x][d] = find(p[x][d]));
}
void Union(int x, int y)
{
    if(r[x][d] < r[y][d]) swap(y, x);
    r[x][d] += (r[x][d]==r[y][d]);
    p[y][d] = x;
}
int main()
{
    cin >> n >> m;
    for(int i=0; i<n; i++) p[i][0] = p[i][1] = i;
    for(int i=0; i<m; i++) cin >> E[i].s.f >> E[i].s.s >> E[i].f;
    sort(E, E+m);
    if(m) vec[cur].push_back(0);
    for(int i=1; i<m; i++)
    {
        if(E[i].f == E[vec[cur].back()].f) vec[cur].push_back(i);
        else vec[++cur].push_back(i);
    }
    ans = m;
    for(int i=0; i<=cur; i++)
    {
        vector<pair<int, int>> tmp;
        for(int j : vec[i])
        {
            int x = find(E[j].s.f), y = find(E[j].s.s);
            if(x == y) ans--;
        }
        for(int j : vec[i])
        {
            int x = find(E[j].s.f), y = find(E[j].s.s);
            if(x != y) ans--, Union(x, y);
        }
    }
    cout << ans << endl;
}
