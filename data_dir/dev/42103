#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define mod 998244353
#define PI 3.14159265
#define endl '\n'
#define MAX

inline int add(ll x, ll y){ x += y; if(x >= mod) x -= mod; return x;}
inline int sub(ll x, ll y){ x -= y; if(x < 0) x += mod; return x;}
inline int mul(ll x, ll y){ return (x * 1ll * y) % mod;}
inline int pwr(int a, ll b){
	int x = 1 % mod;
	while(b){
		if(b & 1) x = mul(x, a);
		a = mul(a, a);
		b >>= 1;
	}
	return x;
}
inline int inv(int a){ return pwr(a, mod - 2);}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    string str;
    cin >> str;
    vector <int> vec[27];
    char c = 'a';
    for (int i = 0; i < 26; i++) {
        int cnt = 0;
        for (int j = 0; j < n; j++) {
            if (str[j] != c) {
                if (cnt) vec[i].pb(cnt);
                cnt = 0;
            }
            cnt += (str[j] == c);
        }
        if (cnt) vec[i].pb(cnt);
        c++;
    }
    c = 'a';
    int ans = 0;
    for (int i = 0; i < 26; i++) {
        if (str[0] == c || str[n - 1] == c) {
            if (str[0] == c && str[n - 1] == c) {
                ans = add(ans, mul(vec[i][0] + 1, vec[i][(int)vec[i].size() - 1] + 1));
                ans = sub(ans, 1);
            }
            else if (str[0] == c) {
                ans = add(ans, vec[i][0] + 1);
                ans = sub(ans, 1);
            }
            else if (str[n - 1] == c) {
                ans = add(ans, vec[i][(int)vec[i].size() - 1] + 1);
                ans = sub(ans, 1);
            }
        }
        c++;
    }
    ans = add(ans, 1);
    cout << ans << endl;

    return 0;
}
