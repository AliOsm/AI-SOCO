#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

long long k, a, b;
int A[4][4], B[4][4];
vector<pair<int, int> > state;

int main()
{
	cin >> k >> a >> b;

	for(int i = 1; i <= 3; i++)
		for(int j = 1; j <= 3; j++)
			cin >> A[i][j];

	for(int i = 1; i <= 3; i++)
		for(int j = 1; j <= 3; j++)
			cin >> B[i][j];

	int x = a, y = b, stop = 0;
	bool done = false;
	while(true)
	{
		state.push_back(make_pair(x, y));
		int tempx = x, tempy = y;
		x = A[tempx][tempy];
		y = B[tempx][tempy];
		for(int i = 0; i < state.size(); i++)
			if(state[i].first == x && state[i].second == y)
			{
				stop = i;
				done = true;
				break;
			}
		if(done)
			break;
	}	

	long long ta = 0, tb = 0;
	for(int i = 0; i < state.size(); i++)
	{
		int f = state[i].first, g = state[i].second;
		if(k == 0)
			break;
		if(i < stop)
		{
			if(f == g + 1 || (f == 1 && g == 3))
				ta += 1;
			else if(g == f + 1 || (g == 1 && f == 3))
				tb += 1;
			k -= 1;
		}
		else if(f == g + 1 || (f == 1 && g == 3))
		{
			ta += k / (state.size() - stop);
			if(k % (state.size() - stop) > i - stop)
				ta += 1;
		}
		else if(g == f + 1 || (g == 1 && f == 3))
		{
			tb += k / (state.size() - stop);
			if(k % (state.size() - stop) > i - stop)
				tb += 1;
		}
	}

	cout << ta << " " << tb << "\n";
	return 0;
}
