# include <bits/stdc++.h>

using namespace std;

const int N = 5e3 + 2;

int n, a[N];
long long b[N], c[N], pref[N], mx = -1e18;
pair <int, int> d[N], e[N];

long long get(int l, int r){
      if(l == r)
            return 0;
      if(l){
            return pref[r - 1] - pref[l - 1];
      }
      return pref[r - 1];
}

int main(){
      cin >> n;

      for(int i = 0; i < n; i ++){
            cin >> a[i];
            pref[i] = (i?pref[i - 1]:0) + a[i];
      }
      pref[n] = pref[n - 1];
      for(int i = 0; i <= n; i ++)
            b[i] = c[i] = -1e18;

      for(int i = 0; i <= n; i ++){
            for(int j = i; j <= n; j ++){
                  long long ret = get(0, i) - get(i, j);
                  if(b[j] < ret){
                        b[j] = ret;
                        d[j] = {i, j};
                  }
            }
      }

      for(int i = 0; i <= n; i ++){
            for(int j = i; j <= n; j ++){
                  long long ret = b[i] + get(i, j) - get(j, n);
                  if(c[j] < ret){
                        c[j] = ret;
                        e[j] = {i, j};
                  }
                  if(mx <= c[j]){
                        mx = c[j];
                  }
            }
      }

      for(int i = 0; i <= n; i ++){
            if(c[i] == mx){
                  int aa, ab, ac;
                  ac = e[i].second;
                  ab = e[i].first;
                  aa = d[ab].first;
                  cout << aa << " " << ab << " " << ac << endl;
                  return 0;
            }
      }
}
