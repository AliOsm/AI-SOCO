using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define ii pair<ll,ll>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define rrep(c,rit) for(__typeof((c).rbegin()) rit=(c).rbegin();rit!=(c).rend();rit++)

const ll MAXN=1e5+5;
vector <ii> adj[MAXN];
vector <ll> ans;
priority_queue <ii> heap;
ll trace[MAXN],dist[MAXN],vis[MAXN];
ll n,m;

main(void)
{
    cin.sync_with_stdio(false);
    cin>>n>>m;
    for(int i=1; i<=m; i++)
    {
        ll u,v,c;
        cin>>u>>v>>c;
        adj[u].pb(ii(c,v));
        adj[v].pb(ii(c,u));
    }
    for(int i=2; i<=n; i++)dist[i]=LONG_LONG_MAX;
    heap.push(ii(dist[1],1));
    while(!heap.empty())
    {
        ii top=heap.top();
        heap.pop();
        ll u=top.sec;
        if(vis[u])continue;
        vis[u]=true;
        rep(adj[u],it)
        {
            if(dist[it->sec] > dist[u] + (it->fir))
            {
                dist[it->sec] = dist[u] + (it->fir);
                heap.push(ii(-(dist[u]+(it->fir)),(it->sec)));
                trace[it->sec]=u;
            }
        }
    }
    if(dist[n]==LONG_LONG_MAX)puts("-1"),exit(0);
    for(int v=n; v!=0; v=trace[v])ans.pb(v);
    rrep(ans,rit)cout<<(*rit)<<" ";
}
