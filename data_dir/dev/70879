#include <bits/stdc++.h>

#define pb push_back
#define all(x) (x).begin(), (x).end()

#ifdef KAZAR
  #define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
  #define eprintf(...) 0
#endif

using namespace std;

template<class T> inline void umax(T &a,T b){if(a < b) a = b;}
template<class T> inline void umin(T &a,T b){if(a > b) a = b;}
template<class T> inline T abs(T a){return a > 0 ? a : -a;}

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int inf = 1e9 + 143;
const ll longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

const int N = 1111;

int n, q;
char from[N][5];
char to[N];

int res = 0;
char s[N];

void go(int pos) {
  if (pos == n) {
    string t = s;
    while (t.size() > 1) {
      bool fnd = false;
      for (int i = 0; i < q; i++) {
        if (t[0] == from[i][0] && t[1] == from[i][1]) {
          t.erase(t.begin());
          t[0] = to[i];
          fnd = true;
          break;
        }
      }
      if (!fnd) {
        break;
      }
    }
    if (t.size() == 1 && t[0] == 'a') {
      res += 1;
    }
    return;
  }
  for (char c = 'a'; c <= 'f'; c++) {
    s[pos] = c;
    go(pos + 1);
  }
}

int main(){

#ifdef KAZAR
  freopen("f.input", "r", stdin);
  freopen("f.output", "w", stdout);
  freopen("error", "w", stderr);
#endif

  n = read();
  q = read();

  for (int i = 0; i < q; i++) {
    scanf(" %s %c", from[i], &to[i]);
  }

  go(0);

  printf("%d\n", res);

  return 0;
}
