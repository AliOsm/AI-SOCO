#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
const ll MOD = (ll)1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v;

int num[200002];

int main() {
	int n;
	scanf("%d", &n);

	int t, mav = -1;
	pii mavi = { -1, -1 };
	for (int i = 0; i < n; i++) {
		scanf("%d", &t);
		num[t]++;
	}
	
	int l = 1, sum = 0, flag = 0;
	for (int i = 1; i <= 200000; i++) {
		sum += num[i];

		if (num[i]) {
			if (mav < sum) {
				mav = sum;
				mavi = { l, i };
			}
		}

		if (num[i] < 1) {
			l = i + 1;
			sum = 0;
			flag = 0;
		}
		else if (num[i] <= 1) {
			if (flag == 0) {
				flag = 1;
				l = i;
				sum = num[i];
			}
			else {
				flag = 0;
				sum = 0;
				l = i + 1;
			}
		}
	}

	printf("%d\n", mav);
	while (num[mavi.first]--) printf("%d ", mavi.first);
	for (int i = mavi.first + 1; i <= mavi.second; i++)
		while (num[i]-- > 1) printf("%d ", i);
	for (int i = mavi.second; i >= mavi.first + 1; i--)
		printf("%d ", i);
}