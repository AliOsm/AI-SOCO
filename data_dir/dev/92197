#include <cstdio>

#include <cstring>

#include <cmath>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>

#include <set>



using namespace std;



typedef long long LL;


bool vis[205][205][205];
char s[205];
int n;
bool flag1,flag2,flag3;
void work(int a,int b,int c)
{
    if (vis[a][b][c]) return;
    vis[a][b][c]=true;
    if (a==1&&b==0&&c==0) 
    {
        flag1=true;
        return;
    }
    if (b==1&&a==0&&c==0)
    {
        flag2=true;
        return;
    }
    if (c==1&&a==0&&b==0)
    {
        flag3=true;
        return;
    }
    if (a>0&&b>0)
    {
        work(a-1,b-1,c+1);
    }
    if (a>0&&c>0)
    {
        work(a-1,b+1,c-1);
    }
    if (b>0&&c>0)
    {
        work(a+1,b-1,c-1);
    }
    if (a>1)
    {
        work(a-1,b,c);
    }
    if (b>1)
    {
        work(a,b-1,c);
    }
    if (c>1)
    {
        work(a,b,c-1);
    }
}

int main()

{
    int a,b,c;
    a=0;
    b=0;
    c=0;
    memset(vis,false,sizeof(vis));
    scanf("%d",&n);
    scanf("%s",s+1);
    for (int i=1;i<=n;++i) if (s[i]=='B') a++;
    else if (s[i]=='G') b++;
    else if (s[i]=='R') c++;
    flag1=flag2=flag3=false;
    work(a,b,c);
    if (flag1) printf("B");
    if (flag2) printf("G");
    if (flag3) printf("R");

    return 0;

}