#include <cstdio>
#include <iostream>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;

#define rep(i, n) for (int i = 0; i < (n); i++)

typedef pair<int, int> ii;

string str[2];
int dist[2][100100];

int main() {
    int n, k;
    cin >> n >> k;
    rep (i, 2) {
        cin >> str[i];
    }
    memset(dist, -1, sizeof(dist));
    queue<ii> q;
    q.push(ii(0, 0));
    dist[0][0] = 0;
    while (q.size()) {
        ii p = q.front(); q.pop();
        int a = p.first; int b = p.second;
        if (b >= n) {
            cout << "YES";
            return 0;
        }
        if (str[a][b] == 'X') continue;
        int d = dist[a][b];
        if (d > b) {
            continue;
        }
        if (dist[!a][min(b + k, n)] == -1) {
            dist[!a][min(b + k, n)] = d + 1;
            q.push(ii(!a, min(b + k, n)));
        }
        if (dist[a][b + 1] == -1) {
            dist[a][b + 1] = d + 1;
            q.push(ii(a, b + 1));
        }
        if (b && dist[a][b - 1] == -1) {
            dist[a][b - 1] = d + 1;
            q.push(ii(a, b - 1));
        }
    }
    cout << "NO";
}
