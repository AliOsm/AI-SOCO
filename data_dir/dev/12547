#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#define MAXN 210000
#define ll long long
using namespace std;

int n,q;

ll k,a,b;

ll tree1[MAXN+2];
ll tree2[MAXN+2];

ll Read1(int idx){
    ll sum = 0;
    while (idx > 0){
        sum += tree1[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
void Update1(int idx ,ll val){
    while (idx <= n){
        tree1[idx] += val;
        idx += (idx & -idx);
    }
}

ll Read2(int idx){
    ll sum = 0;
    while (idx > 0){
        sum += tree2[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
void Update2(int idx ,ll val){
    while (idx <= n){
        tree2[idx] += val;
        idx += (idx & -idx);
    }
}


ll num_orders1[MAXN+2];
ll num_orders2[MAXN+2];

int main() {
    cin>>n>>k>>a>>b>>q;
    
    
    for(int i=0;i<=n+2;i++) {
        tree1[i]=tree2[i]=0;
        num_orders1[i]=num_orders2[i]=0;
    }
    
    for(int j=1;j<=q;j++) {
        int oid;
        cin>>oid;
        
        
        if (oid==1) {
            int day;
            ll curr_orders;
            cin>>day>>curr_orders;
            
            ll prev_num_orders1 = num_orders1[day];
            ll prev_num_orders2 = num_orders2[day];
            
            num_orders1[day] = min(b, num_orders1[day]+curr_orders);
            num_orders2[day] = min(a, num_orders2[day]+curr_orders);
            
            ll delta_num_orders1 = num_orders1[day] - prev_num_orders1;
            ll delta_num_orders2 = num_orders2[day] - prev_num_orders2;
            
            if (delta_num_orders1 > 0)
                Update1(day,delta_num_orders1);
            if (delta_num_orders2 > 0)
                Update2(day,delta_num_orders2);
            
        } else {
            int day;
            cin>>day;
            
            
            // 1 to day-1
            // day to day+k-1
            // day+k to n
            
            
            ll answer = Read1(day-1) + Read2(n) - Read2(day+k-1);
            cout << answer << endl;
            
            
        }
        
    }
    
}