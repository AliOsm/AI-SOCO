#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())

typedef long long LL;
LL MOD = 1e9+7;
const int N = 1e6+5;
int n, MAXVAL = 1e6+1;
LL bit[N], sum=0;
int a[N];

LL getsum(int x) {
	LL ret=0;
	while(x>0) { ret += bit[x]; x -= x&-x; }
	return (ret%MOD+MOD)%MOD;
}

void add(int x, LL v) {
	while(x<=MAXVAL) {
		bit[x] = ((bit[x]+v)%MOD+MOD)%MOD;
		x += x&-x;
	}
}

LL getval(int x) {
	return getsum(x)-getsum(x-1);
}

LL ans=0;
int main(void) {
	scanf("%d", &n);
	for(int i=0;i<n;i++) scanf("%d", &a[i]);
	add(MAXVAL, 1);
	sum=1;
	for(int i=n-1;i>=0;i--) {
		LL t = sum - getsum(a[i]-1);
		t%=MOD; if(t<0) t+=MOD;
		t=(t*a[i])%MOD;
		
		
		//printf("sum=%I64d, t=%I64d\n", sum, t);
		LL r = getval(a[i]);
		t=((t-r)%MOD+MOD)%MOD;
		ans = (ans+t)%MOD;
		sum = (sum + t) % MOD;
		add(a[i], t);
	}
	ans=(ans+MOD)%MOD;
	printf("%I64d\n", ans);
	return 0;
}
