#include <bits/stdc++.h>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define scs(a) scanf("%s", a)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<ii> vii;
typedef vector< vii> vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N=2e5+10;
int gcd(int a, int b){
  if(b==0) return a;
  return gcd(b, a%b);
}

vi g[N];
int diretao[N], poder[N];
set<int> nervoso[N];
void dfs(int u, int last){
  diretao[u] = gcd(diretao[last],poder[u]);
  for(int v: g[u]) if(v!=last) dfs(v,u);
}
void dfs2(int u, int last){
  if(last!=u){
    for(int x: nervoso[last]) nervoso[u].insert( gcd(x,poder[u]) );
    nervoso[u].insert(diretao[last]);
  }else{
    nervoso[u].insert(0);
  }
  for(int v: g[u]){
    if(v!=last) dfs2(v,u);
  }
}

int n;
int main()
{
  sc(n);
  for(int i=1;i<=n;i++) sc(poder[i]);
  for(int i=1;i<n;i++){
    int u,v;
    sc2(u,v);
    g[u].pb(v);
    g[v].pb(u);
  }
  dfs(1,1);
  dfs2(1,1);
  for(int i=1;i<=n;i++){
    pri( max(diretao[i], *(--nervoso[i].end())) );
  }
  return 0;
}
