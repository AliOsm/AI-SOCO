#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int mod=1e9+7;
int dp[2010][1050][2],a[2010];
inline int get_mod(int x){
	return x<mod?x:x-mod;
}
int main(){
	int n,k;
	scanf("%d%d",&n,&k);
	k--;
	for(int i=1;i<=n;i++){
		scanf("%d",a+i);
		a[i]>>=1;
	}
	if(a[1]==0) dp[1][1][0]=dp[1][2][0]=1;
	else dp[1][a[1]][0]=1;
	for(int i=2;i<=n;i++){
		for(int j=0;j<(1<<k);j++){
			for(int f=0;f<2;f++){
				if(a[i]==0){
					if(j+1==(1<<k)) dp[i][0][1]=get_mod(dp[i][0][1]+dp[i-1][j][f]);
					else dp[i][j+1][f]=get_mod(dp[i][j+1][f]+dp[i-1][j][f]);
					if(j%2==0){
						if(j+2==(1<<k)) dp[i][0][1]=get_mod(dp[i][0][1]+dp[i-1][j][f]);
						else dp[i][j+2][f]=get_mod(dp[i][j+2][f]+dp[i-1][j][f]);
					}else{
						dp[i][2][f]=get_mod(dp[i][2][f]+dp[i-1][j][f]);
					}
				}else if(a[i]==1){
					if(j+1==(1<<k)) dp[i][0][1]=get_mod(dp[i][0][1]+dp[i-1][j][f]);
					else dp[i][j+1][f]=get_mod(dp[i][j+1][f]+dp[i-1][j][f]);
				}else{
					if(j%2==0){
						if(j+2==(1<<k)) dp[i][0][1]=get_mod(dp[i][0][1]+dp[i-1][j][f]);
						else dp[i][j+2][f]=get_mod(dp[i][j+2][f]+dp[i-1][j][f]);
					}else{
						dp[i][2][f]=get_mod(dp[i][2][f]+dp[i-1][j][f]);
					}
				}
			}
		}
	}
	int ans=0;
	for(int j=0;j<(1<<k);j++)
		ans=get_mod(ans+dp[n][j][1]);
	printf("%d\n",ans);
	return 0;
}