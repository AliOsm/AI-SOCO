#include<bits/stdc++.h>
using namespace std ;
#define LL long long
#define MOD 998244353LL
#define PI acos(-1.0)


/*
// Ordered set
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template<typename T> using orderset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
//orderset<int> s ; //orderset<int>::iterator it ;
//orderset<int> X; //X.insert(1); //X.insert(2); //X.insert(4); //X.insert(8); //X.insert(16);
//cout<<*X.find_by_order(1)<<endl; // 2 //cout<<*X.find_by_order(2)<<endl; // 4 //cout<<*X.find_by_order(4)<<endl; // 16 //cout<<(end(X)==X.find_by_order(6))<<endl; // true
//cout<<X.order_of_key(-5)<<endl;  // 0 //cout<<X.order_of_key(1)<<endl;   // 0 //cout<<X.order_of_key(3)<<endl;   // 2 //cout<<X.order_of_key(4)<<endl;   // 2 //cout<<X.order_of_key(400)<<endl; // 5
*/

LL n ;
LL a[100005] ;
LL U[100005] ;
LL V[100005] ;
bool Ck[100005] ;
bool ok[100005] ;
LL res[100005] ;
vector< pair< LL , LL > > store[100005] ;

void ResetAll(){

}

void Input(){
    scanf("%lld",&n) ;
    for( int i = 1 ; i < n ; i ++ ){
        scanf("%lld%lld",&U[i],&V[i]) ;
    }
}


void Calculation(){
    for( int i = 1 ; i <= n ; i ++ ){
        store[U[i]].push_back( { V[i] , i } ) ;
        store[V[i]].push_back( { U[i] , i } ) ;
    }
    for( int i = 1 ; i <= n ; i ++ ){
        if( store[i].size() >= 3 ){
            for( int j = 0 ; j < 3 ; j ++ ){
                Ck[j] = 1 ;
                res[store[i][j].second] = j ;
                ok[store[i][j].second] = 1 ;
            }
            break ;
        }
    }
    vector< LL > tmp ;
    for( int i = 1 ; i < n ; i ++ ){
        if( ok[i] == 0 ) tmp.push_back( i ) ;
    }
    for( int i = 0 ; i < n - 1 ; i ++ ){
        if( Ck[i] == 0 ){
            Ck[i] = 1 ;
            res[tmp.back()] = i ;
            tmp.pop_back() ;
        }
    }
    for( int i = 1 ; i < n ; i ++ ){
        printf("%lld\n",res[i]) ;
    }
}

void Solve(){
    ResetAll() ;
    Input() ;
    Calculation() ;
}

int main()
{
    int q ;
    q = 1 ;
    //scanf("%d",&q) ;
    while( q-- ){
        Solve() ;
    }
    return 0 ;
}
