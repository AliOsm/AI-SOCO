#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)

typedef long long ll;
typedef unsigned long long ull;

using namespace std;

const int MAXN = 5e5 + 256;
const char nxtl = '\n';
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int n, a[MAXN], sz[MAXN], ans[MAXN];
ll d[MAXN];
std::vector<pair < int, int > > v[MAXN];

void dfs(ll mx = 0, int x = 1, int pr = 0) {
	sz[x] = 1;
	for(auto &to : v[x]) {
		if(to.first == pr) continue;
		d[to.first] = d[x] + to.second;
		dfs(max(mx, d[x] + a[x]), to.first, x);
		sz[x] += sz[to.first];
	}
}
int answer;
void dfs2(ll mx = 0, int x = 1, int pr = 0) {
    // cout << x << ' '<< d[x] << ' '<< mx << nxtl;
	if(d[x] - mx > a[x]) {
		answer += sz[x];
		// cout << x << nxtl;
		return;
	}
	for(auto &to : v[x]) {
		if(to.first == pr) continue;
		dfs2(min(mx, d[x]), to.first, x);
	}
}

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	scanf("%d", &n);
	rep(i, 1, n) scanf("%d", a+i);
	rep(i, 2, n) {
		int x, y; scanf("%d%d", &x, &y);
		v[i].pb(mp(x, y));
		v[x].pb(mp(i, y));
	}
	dfs();
	dfs2();
	printf("%d\n", answer);

	return 0;
}
