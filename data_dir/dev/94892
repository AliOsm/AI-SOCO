// 15.04.2018
// 17.04.2018

/*

*/


# include <iostream>
# include <cstdio>
# include <cstring>
# include <string>
# include <cstdlib>
# include <cmath>
# include <iomanip>
# include <vector>
//                 insert, append, size
# include <stack>
//                 push, pop, top, empty
# include <queue>
//                 push, pop, front, empty
# include <map>
# include <list>
//                 push_back, begin, end
# include <algorithm>


# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define sqr(x) ( (x) * (x) )

# define isdigit(c) ( (c) >= '0' && (c) <= '9' )
# define digit(c) ( (c) - '0' )



//# define lint long long int
# define lint __int64

# define fi first
# define se second

# define x XX_
# define y YY_


using namespace std;


typedef pair <int, int> Pair;
typedef pair <int, Pair> Trio;
typedef pair <Pair, Pair> Quattro;


const int N = 200200;
const int M = 20;
const int K = 20;
const int INF = 2000000000;
const double eps = 1e-12;


int k, m, n, a, b, c, kol [N];
double d;
Pair p [N], q [N];
bool ok;
char s [M];


int GCD (int, int);


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("D.TXT", "r", stdin);
   freopen ("D.OUT", "w", stdout);
# endif

   ios_base::sync_with_stdio (0);

   cin >> n;

# ifndef ONLINE_JUDGE
   cout << "*** n = " << n << endl;
# endif

   for ( int i=0, j; i < n; i++ )
   {
      cin >> s;

# ifndef ONLINE_JUDGE
   cout << "*** < " << s << " >" << endl;
# endif

      j = 2;
      a = digit (s [1]);
      if ( isdigit (s [j]) )
         a = a*10 + digit (s [j]), j++;
      j++;
      b = digit (s [j]);
      if ( isdigit (s [j+1]) )
         b = b*10 + digit (s [j+1]), j++;
      j += 3;

      c = digit (s [j]);
      if ( isdigit (s [j+1]) )
         c = c*10 + digit (s [j+1]);

      d = (a + b) * 1.0 / c;
      p [i].fi = a + b,
      p [i].se = c;

# ifndef ONLINE_JUDGE
   cout << "*** (a+b)/c = " << a << " + " << b << " : " << c;
   cout << setiosflags (ios::fixed) << setw (11) << setprecision (6) << d << endl;
# endif
   }

   for ( int i=0; i < n; i++ )
   {
      m = GCD (p [i].fi, p [i].se);
      p [i].fi /= m, p [i].se /= m;
      q [i] = p [i];
   }

   sort (p, p+n);

   for ( int i=0; i < n; i++ )
   {
# ifndef ONLINE_JUDGE
   cout << "*** < " << p [i].fi << ", " << p [i].se << " >" << endl;
# endif
      kol [i] = upper_bound (p, p+n, q [i]) - lower_bound (p, p+n, q [i]);
   }

   for ( int i=0; i < n; i++ )
      cout << kol [i] << " ";

//   system ("pause");
   return 0;
}

int GCD (int a, int b)
{
   while ( a > 0 && b > 0 )
      if ( a > b )
         a %= b;
      else
         b %= a;
   return ( a == 0 ? b : a );
}
