#include <bits/stdc++.h>
#define ll long long
#define ull unsigned ll
#define ld long double
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define RAD 0.0174532925
#define E 2.71828182846
#define PI 3.14159265359

using namespace std;

const int MIN = 5e3 + 2;
const int MXN = 1e6 + 3;
const int INF = 1e9 + 7;
const double EPS = 1e-9;
const ll LINF = 1e18 + 15;
const ll MOD = 998244353;
    
int n, k, b;
vector <pair <int, int> > g[MXN];
int u, v;
ll ans;
bool used[MXN];

void dfs(int x){
	ans++;
	used[x] = 1;
	for (int i = 0; i < g[x].size(); ++i){
		int to = g[x][i].F;
		if (!used[to] && !g[x][i].S){
			dfs(to);
		}
	}
}

ll binpow(ll x, ll y){
	if (y == 0){
		return 1;
	}	
	else if (y % 2 == 0){
		ll sq = binpow(x, y / 2);
		return sq * sq % INF;
	}
	else {
		return binpow(x, y - 1) * x % INF;
	}
}

int main(){
	#ifdef Pissoir
		//freopen("input.txt", "r", stdin);                                                                                                              
		//freopen("input2.txt", "w", stdout);                       
	#else
		ios_base::sync_with_stdio(0);
		cin.tie(0);             
		cout.tie(0);                                                                                                                              
		//freopen("twopaths.in", "r", stdin);
  		//freopen("twopaths.out", "w", stdout);			
  	#endif
	cin >> n >> k;
	for (int i = 1; i < n; ++i){
		cin >> u >> v >> b;
		g[u].pb(mp(v, b));
		g[v].pb(mp(u, b));
	}  	
	ll res = binpow(n, k);
	for (int i = 1; i <= n; ++i){
		if (!used[i]){
			ans = 0;
			dfs(i);
			ans = binpow(ans, k);
			res -= ans;
			if (res < 0) res += INF;
		}
	}
	cout << res;
	return 0;
}