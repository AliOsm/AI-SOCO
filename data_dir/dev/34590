/* Author: Dhruv Rastogi */
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second
const long double PI = acos(-1.0);


vll v[200005],occ[200005];
int lo[200005],hi[200005];
int ans[200005];
int p[200005];
int pos[200005];

const int N = 2e5*200+5;
int BIT[N], n;
void update(int x, int delta)
{
      for(; x <= n; x += x&-x)
        BIT[x] += delta;
}
int query(int x)
{
     int sum = 0;
     for(; x > 0; x -= x&-x)
        sum += BIT[x];
     return sum;
}
void solve(){  
    int m;
    cin>>n>>m;
    rep(i,1,n+1) cin>>p[i],pos[p[i]]=i;
    rep(i,1,n+1){
        for(int j=i;j<=n;j+=i){
            v[pos[j]].pb(pos[i]);
            occ[pos[i]].pb(pos[j]);
        }
    }
    rep(i,1,n+1){
        lo[i]=hi[i-1]+1;
        hi[i]=lo[i]+sz(v[i])-1;
    }
    vector<pair<pll,int> > queries;
    rep(i,0,m){
        int l,r;
        cin>>l>>r;
        queries.pb(mp(mp(l,r),i));
        ans[i]=hi[r]-lo[l]+1;
    }
    sort(all(queries));
    int idx=0;
    for(auto i:queries){
        int l=i.F.F;
        int r=i.F.S;
        int index_query=i.S;
        while(idx<l){
            for(int i:occ[idx]){
                update(i,1);
            }
            ++idx;
        }
        ans[index_query]-=query(r)-query(l-1);
    }
    for(auto &i:queries) swap(i.F.F,i.F.S);
    sort(all(queries));
    reverse(all(queries));
    idx = n+1;
    memset(BIT,0,sizeof BIT);
    for(auto i:queries){
        int r = i.F.F;
        int l = i.F.S;
        int index_query = i.S;
        while(idx>r){
            for(int i:occ[idx]){
                update(i,1);
            }
            --idx;
        }
        ans[index_query]-=query(r)-query(l-1);
    }
    rep(i,0,m) cout<<ans[i]<<endl;
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}