/*
    Author : harshit15
    Before submission
    - Fast IO
    - mx value
    - int overflow
*/
#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define ll long long
#define endl '\n'
#define pb push_back
#define ff first
#define ss second
#define mod 998244353   
#define mx 1000005
#define mx2 65
#define int long long
#define inf 4e18
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
int add(int x,int y)
{
    if(x + y >= mod)
        return x + y - mod;
    return x + y;
}
int sub(int x,int y)
{
    if(x - y < 0)
        return x - y + mod;
    return x - y;
}
int mul(int x,int y)
{
    return 1LL * x * y % mod;
}
ll power(ll x, ll y)
{
    ll res = 1;
    while(y)
    {
        if(y&1)
            res = res * x % mod;
        y >>= 1;
        x = x*x%mod;
    }
    return res;
}
ll invmod(ll x)
{
    return power(x,mod-2);
}
vector<int> v[mx];
int h[mx];
main()
{
	fast;
	int n;
	cin >> n;
	fl(i,1,n+1)
	{
		int k;
		cin >> k;
		fl(j,1,k+1)
		{
			int x;
			cin >> x;
			v[i].pb(x);
			h[x]++;
		}
	}
	ll ans = 0;
	fl(i,1,n+1)
	{
		ll y = invmod(v[i].size());
		fl(j,0,v[i].size())
		{
			ans = add(ans,mul(y,h[v[i][j]]));
		}
	}
	ans = mul(ans,invmod(n));
	ans = mul(ans,invmod(n));
	cout<<ans;
}