// In the name of Allah the Most Merciful.

#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MAX = 1005;
int lv1[MAX+9] , lv2[MAX+9];
int n , m , s , t;
vector<int>edges[MAX+9];
bool vis[1005];

void bfs1(int s)
{
    queue<int>current;
    lv1[s] = 0;
    vis[s] = 1;

    current.push(s);

    while(!current.empty()){

        int u = current.front();
        current.pop();

        int si = edges[u].size();

        for(int i=0;i<si;i++){

            if(vis[edges[u][i]]==0){

                lv1[edges[u][i]] = lv1[u] + 1;
                vis[edges[u][i]] = 1;
                current.push(edges[u][i]);
            }
        }
    }
}

void bfs2(int s)
{
    queue<int>current;
    lv2[s] = 0;
    vis[s] = 1;

    current.push(s);

    while(!current.empty()){

        int u = current.front();
        current.pop();

        int si = edges[u].size();

        for(int i=0;i<si;i++){

            if(vis[edges[u][i]]==0){

                lv2[edges[u][i]] = lv2[u] + 1;
                vis[edges[u][i]] = 1;
                current.push(edges[u][i]);
            }
        }
    }
}

int mp[1005][1005];

int main(void)
{
    memset(lv1 , 0 , sizeof(lv1));
    memset(lv2 , 0 , sizeof(lv2));
    memset(mp , 0 , sizeof(mp));

    scanf("%d %d %d %d",&n , &m , &s , &t);

    for(int i=0;i<m;i++){

        int in1 , in2;
        scanf("%d %d",&in1 , &in2);
        edges[in1].push_back(in2);
        edges[in2].push_back(in1);
        mp[in1][in2] = 1;
        mp[in2][in1] = 1;
    }

    memset(vis , false ,sizeof(vis));
    bfs1(s);
    memset(vis , false ,sizeof(vis));
    bfs2(t);
    int temp = lv1[t];
    int counter = 0;

    for(int i=1;i<=n;i++){

        if(i==s||i==t)continue;

        if(lv1[i]==0)lv1[i] = 123456789;
        if(lv2[i]==0)lv2[i] = 123456789;
    }

    for(int i=1;i<=n;i++){

        for(int j=i+1;j<=n;j++){
            if(i==j)continue;


            int value = lv1[i]+lv2[j];
            value = min(value , lv1[j]+lv2[i]);

            if(mp[i][j]==1)continue;

            if(value+1>=temp)counter++;
        }
    }

    printf("%d\n",counter);

    return 0;
}
