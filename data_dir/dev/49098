#include <bits/stdc++.h>
#define ll  long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc second
#define fr first

using namespace std;

int n;
char s[3001000];
char res[3001000];
int sz = 0;
const int NM = 4;
ll pw[NM][1001000];

ll seed[NM]={1007,1009,109,17};
ll mod[NM]={(ll)(1e9+9),(ll)(1e9+7),(ll)(1e9+9),(ll)(1e9+7)};

struct Hash{

    vector<ll>val;

    Hash(){
        val.resize(NM,0);
    }

    void cop( Hash&z){
        for(int i=0 ;i <NM ; i++)val[i] = z.val[i];
    }


    void add(Hash pre,ll curr){
        for(int i =0 ;i <NM ;  i++){
            val[i] = pre.val[i];
            val[i] *= seed[i];
            val[i] %= mod[i];
            val[i] += curr;
            val[i] %= mod[i];
        }
    }

    void add1(Hash pre,ll curr,ll len){
        for(int i =0 ;i <NM ;  i++){
            val[i] = pre.val[i];
            val[i] += (curr*pw[i][len])%mod[i];
            val[i] %= mod[i];
        }
    }

};

void merg(){
    int m = strlen(s);
    if(!sz){
        for(int i=0 ;i <m ;i ++){
            res[sz++] = s[i];
        }
        return;
    }
    Hash pre;

    int len = 0;
    Hash pre1;
    int sta = 0;

    for(int j=0,i = sz-1 ;j <m&& i>=0 ;j ++,i--){
        Hash nw;
        nw.add(pre,s[j]);
        pre.cop(nw);
        Hash nw1;
        nw1.add1(pre1,res[i],len);
        len++;
        pre1.cop(nw1);
        if(nw.val == nw1.val){
            sta = len;
        }
    }
    for(int j=sta ; j<m ; j++){
        res[sz++] = s[j];
    }
}

int main(){
    for(int i=0 ;i <NM ; i++){
        pw[i][0] = 1;
        for(int j=1 ;j <1001000 ; j++){
            pw[i][j] = pw[i][j-1]*seed[i];
            pw[i][j] %= mod[i];
        }
    }
    cin>>n;
    for(int i=0 ;i <n ;i ++){
        scanf("%s",s);
        merg();
    }
    res[sz] = '\0';
    printf("%s",res);
    return 0;
}
