#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define nl '\n'

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

const int N=2e5+11;
const int M=1e6+11;
const int inf=1e9;
const ll INF=1e18;
const ll mod=1e9+7;
const double EPS=1e-9;

ll c[N],lvl[N];
pair<ll,ll>t[N],p[N];

int main(){
  int m;
  cin>>m;
  while(m--){
    int n;
    ll T,a,b;
    cin>>n>>T>>a>>b;
    ll c1=0,c2=0;
    for(int i=1;i<=n;i++){
      cin>>lvl[i];
      if(lvl[i])c1++;
      else c2++;
      c[i]=0;
    }
    for(int i=1;i<=n;i++){
      cin>>t[i].x;
      t[i].y=lvl[i];
    }
    sort(t+1,t+n+1);
    for(int i=1;i<=n;i++){
      c[i]=c[i-1];
      if(t[i].y)c[i]+=b;
      else c[i]+=a;
    }
    t[n+1].x=T+1;
    int j=0;
    int ans=0;
    for(int i=0;i<=n;i++){
      if(j==i){
        j=i+1;
        while(j<=n){
          if(t[j].y==1)c1--;
          else c2--;
          if(t[j].x==t[j+1].x)j++;
          else break;
        }
      }
      if(c[i]<=T&&c[i]<t[i+1].x){
        int res=i;
        ll time=t[i+1].x-c[i]-1;
        ll x=min(c2,time/a);
        res+=x;
        time-=x*a;
        x=min(c1,time/b);
        res+=x;
        time-=x*b;
        ans=max(ans,res);
      }
    }
    cout<<ans<<nl;
  }
}
