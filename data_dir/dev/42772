#include <bits/stdc++.h>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define forall(it, v) for(auto it = v.begin(); it != v.end(); ++it)
#define dforn(i, n) for(int i = ((int) n) - 1; i >= 0; i--)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define okf(x) ((x) >= 0 && (x) < n)
#define okc(x) ((x) >= 0 && (x) < m)
typedef long long ll;
const int MAXN = 64;

int n, m, si, sj, ei, ej, ans;
string grid[MAXN], s;
int dr[] = {0, 1, 0, -1};
int dc[] = {1, 0, -1, 0};

int main() {
  scanf("%d %d", &n, &m);
  forn(i, n){
    cin >> grid[i];
  }
  forn(i, n){
    forn(j, m){
      if(grid[i][j] == 'S'){
        si = i;
        sj = j;
      }
      if(grid[i][j] == 'E'){
        ei = i;
        ej = j;
      }
    }
  }
  cin >> s;
  int p[] = {0, 1, 2, 3};
  forn(z, 24){
    int pi = si;
    int pj = sj;
    forn(i, s.size()){
      int v = s[i] - '0';
      int dir = p[v];
      int p = pi + dr[dir];
      int q = pj + dc[dir];
      if(okf(p) && okc(q) && grid[p][q] != '#'){
        pi = p;
        pj = q;
        if(pi == ei && pj == ej){
          ans++;
          break;
        }
      }
      else {
        break;
      }
    }
    next_permutation(p, p + 4);
  }
  printf("%d\n", ans);
  return 0;
}
