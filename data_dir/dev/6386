#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define int long long int
#define double long double
#define pb push_back
#define endl '\n'
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define sz(a) (int)((a).size())
#define fuck() cout<<"--------"<<endl
#define see(x) cout<<#x<<" = "<<x<<endl
#define see2(x,y) cout<<#x<<" = "<<x<<"::"<<#y<<" = "<<y<<endl 
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
const int mod=1000000007;
typedef pair<int,int> pii;
const int inf=1e17;
const int N=2e5+5;
ordered_set<pii> st;
vector<pii>g[N];
int dist[N],ans[N],A[N],up[N];
void dfs(int v,int p){
	st.insert({dist[v]-A[v],v});
	up[v]=st.order_of_key({dist[v]+1,0});
	for(auto to:g[v]){
		if(to.F==p)continue;
		dist[to.F]=dist[v]+to.S;
		dfs(to.F,v);
	}
	ans[v]=st.order_of_key({dist[v]+1,0})-up[v];
}
int32_t main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);cout.tie(0);
	int n;
	cin>>n;
	for(int i=1;i<=n;i++){
		cin>>A[i];
	}
	for(int i=2;i<=n;i++){
		int par,w;
		cin>>par>>w;
		g[i].pb({par,w});
		g[par].pb({i,w});
	}
	dfs(1,0);
	for(int i=1;i<=n;i++){
		cout<<ans[i]<<' ';
	}
}