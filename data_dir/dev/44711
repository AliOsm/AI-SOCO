// In The Name Of God

#include<bits/stdc++.h>
#define rep(i,n) for(int i=0;i<(n);i++)
#define pb push_back
#define ll long long

using namespace std;
const int N = 122 ;

int n,m,k,st,en;
int dis[N][N] , ok[N][N] , alone[N][N] , dp[N][N] , t[N][N] ;
// dp[i][j] => bus i raas j alan tooshim = minimum moves to "en"
// ok[i][j] => bus i momkene biad raas j
// alone[i][j] => bus i , ras j hatman miad
// t[i][j] => bus i , tedad vertices haye ba fasele j az start bus i
vector<int>G[N] , nxt[N][N] ;
// nxt[i][j] => bus i , raas j badesh kia mian

int main()
{
	int x,y;
	
	cin>>n>>m>>st>>en;
	st-- , en-- ;
	if(st==en)
		return cout<<0,0;
	
	memset(dp,63,sizeof(dp));
	memset(dis,63,sizeof(dis));
	rep(i,n) dis[i][i]=0;
	
	rep(i,m)
	{
		cin>>x>>y; 
		x-- , y-- ;
		dis[x][y]=1;
	//	dis[y][x]=1;
		G[x].pb(y) ;
	//	G[y].pb(x) ;		
	}
	
	rep(z,n) rep(i,n) rep(j,n) dis[i][j]=min(dis[i][z]+dis[z][j],dis[i][j]); 
	
	cin>>k;
	rep(i,k)
	{
		cin>>x>>y; 
		x-- , y-- ;
		rep(j,n)
		{
			if(dis[x][j]!=dis[N-1][N-1] && dis[x][j]+dis[j][y]==dis[x][y])
				t[i][dis[x][j]]++ , ok[i][j]=1 ;
	//		cout<<dis[x][j]<<" "<<dis[j][y]<<" "<<ok[i][k]<<endl;
		}
		rep(j,n)
		{
	//		cout<<j<<" "<<ok[i][j]<<endl;
			if(ok[i][j] && dis[x][j]<N && t[i][dis[x][j]]==1)
				alone[i][j]=1;
		}
		rep(j,n)
			if(ok[i][j])	
				rep(q,G[j].size())
				{
					int z=G[j][q];
					if(ok[i][z] && dis[x][j]==dis[x][z]-1)
						nxt[i][j].pb(z);
				}
			/*
		cout<<"OK :";
		rep(j,n)
			if(ok[i][j])
				cout<<j+1<<" ";
		cout<<endl;
		cout<<"Alone :";
		rep(j,n)
			if(alone[i][j])
				cout<<j+1<<" ";
		cout<<endl;*/
	}
	/*
	rep(i,n)
	{
		cout<<i+1<<" : ";
		rep(j,k)
		{
			cout<<"{ "<<j+1<<" : ";
			rep(z,nxt[j][i].size())
				cout<<nxt[j][i][z]+1<<" ";
			cout<<" } ";
		}
		cout<<endl;
	}*/
			
	
	rep(i,k)
		dp[i][en]=0;
			
//	int ct=0;
	while(22)
	{
	//	cout<<"!"<<ct<<endl;
//		ct++;
		
		bool sw=false;
		rep(i,n)
			rep(j,k)
			{
				int tmp=dp[j][i] , mx=-1e9;
				rep(z,k)
					if(alone[z][i])
						dp[j][i]=min(dp[j][i],dp[z][i]+1);
				rep(z,nxt[j][i].size())
				{
					int u=nxt[j][i][z];
					mx=max(mx,dp[j][u]);
			//		cout<<u<<" "<<mx<<" "<<dp[j][u]<<endl;
				}
				if(mx==-1e9) mx=dp[N-1][N-1] ;
				dp[j][i]=min(dp[j][i],mx);
				sw|=(dp[j][i]<tmp);
			//	cout<<mx<<endl;
		//		cout<<"bus "<<j+1<<" | "<<"vert "<<i+1<<" : "<<dp[j][i]<<endl;
			}
		if(!sw)
			break;
	}
	
	int res=dp[N-1][N-1];
	rep(i,k)
		if(alone[i][st])
			res=min(res,dp[i][st]);
	if(res==dp[N-1][N-1])
		res=-2;
	cout<<res+1;
	
	return 0;
}
