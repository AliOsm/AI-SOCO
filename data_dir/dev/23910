#include <bits/stdc++.h>

using namespace std;

typedef long double LD;
typedef long long int LL;
typedef pair <int,int> pii;

#define L first
#define R second

const int maxn = 1e5 + 100, maxk = 110;
int n, a[maxn], h[maxk][maxn], tmp[maxk];
bool mark[maxn];
vector <int> adj[maxn];

void bfs(int c) {
    queue <int> q;
    memset (mark, false, sizeof mark);
    memset (h[c], 0, sizeof h[c]);
    for (int i = 0; i < n; i++)
        if (a[i] == c) {
            q.push(i);
            mark[i] = true;
        }
    while (q.size() > 0) {
        int v = q.front();
        q.pop();
        for (int i = 0; i < adj[v].size(); i++) {
            int u = adj[v][i];
            if (!mark[u]) {
                h[c][u] = h[c][v] + 1;
                mark[u] = true;
                q.push(u);
            }
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    int m, k, s;
    cin >> n >> m >> k >> s;
    for (int i = 0; i < n; i++)
        cin >> a[i], a[i]--;
    for (int i = 0; i < m; i++) {
        int v, u;
        cin >> v >> u;
        v--, u--;
        adj[v].push_back(u);
        adj[u].push_back(v);
    }
    for (int i = 0; i < k; i++)
        bfs(i);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < k; j++)
            tmp[j] = h[j][i];
        sort (tmp, tmp + k);
        LL ans = 0;
        for (int i = 0; i < s; i++)
            ans += tmp[i];
        cout << ans << ' ';
    }
    return 0;
}
