#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
const ll MOD = 1e9 + 7;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v[100000]; queue<pii> q; deque<int> dq;
vector<int> vv[100];
vector<int> dist[100000];

void bfs(int col) {
	while (!q.empty()) q.pop();
	for (int i = 0; i < sz(vv[col]); i++) {
		q.push({ 1, vv[col][i] });
		dist[vv[col][i]][col] = 1;
	}

	int t;
	pii tv;

	while (!q.empty()) {
		tv = q.front();
		q.pop();

		for (int i = 0; i < sz(v[tv.second]); i++) {
			t = v[tv.second][i];
			if (!dist[t][col]) {
				dist[t][col] = tv.first + 1;
				q.push({ tv.first + 1, t });
			}
		}
	}
}

int main() {
	int n, m, s, k, a, b, sum;
	scanf("%d %d %d %d", &n, &m, &s, &k);

	for (int i = 0; i < n; i++) {
		scanf("%d", &a);
		a--;
		vv[a].push_back(i);
		dist[i].resize(s);
	}

	while (m--) {
		scanf("%d %d", &a, &b);
		a--; b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	for (int i = 0; i < s; i++)
		bfs(i);

	for (int i = 0; i < n; i++) {
		sum = 0;
		nth_element(dist[i].begin(), dist[i].begin() + k, dist[i].end());
		for (int j = 0; j < k; j++)
			sum += dist[i][j] - 1;
		printf("%d ", sum);
	}
}