#include <bits/stdc++.h>
#define int long long 
using namespace std;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);
    long long powmod(long long a,long long b,long long mod) {
        if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
       
        if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
        else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
    }
    long long gcd(long long a, long long b) {
        if (a==0) return b;
        if (b==0) return a;
        if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
    }
      int prime(int p) { // 1 - простое
        for (int i=2;i*i<=p;i++) {
            if (p%i==0 && i<p) return i;  
        }
        return 1;
    }
    
     int inv(int a, int mod) {
        return powmod(a,mod-2,mod); 
    }
  int random_modul() {
    
    uniform_int_distribution <int> u1(1e9, 2e9);
    int pepega=u1(rnd); 
    while (prime(pepega)!=1) pepega=u1(rnd); 
    return pepega; 
}
 
    void solve () {
       
       
         /* --------- */
       int d;
       cin>>d;
       vector <int> del;
       for (int i=1;i*i<=d;i++) {
           if (d%i==0) {
               del.push_back(i); if (i*i!=d) del.push_back(d/i); 
           }
       }
       sort(del.begin(),del.end());
       map <int,int> primes;
       int d1=d;
       for (int i=2;i*i<=d1;i++) {
           if (d1%i==0) primes[i]=1; while (d1%i==0) d1/=i;  
       }
       
       if (d1!=1) primes[d1]=1; 
     
       
     
       vector <int> prime1;
       for (auto i:primes) {
           if (i.second==1) prime1.push_back(i.first); 
       }
        
       int q; cin>>q;
      int mod=998244353; 
      int fac[100000];
      fac[1]=1; 
      fac[0]=1; 
      for (int i=2;i<100000;i++) { fac[i]=fac[i-1]*i; fac[i]%=mod; }
       for (int i=0;i<q;i++) {
           int x,y; cin>>x>>y; int gc=gcd(x,y); 
           vector <pair<int,int>> path1;
           x/=gc; 
           for (int j=0;j<prime1.size();j++) {
               if (x%prime1[j]==0) {
                   path1.push_back({prime1[j],0});
                   while (x%prime1[j]==0) {path1[path1.size()-1].second++; x/=prime1[j]; }
               }
           }
           
           vector <pair<int,int>> path2;
           y/=gc; 
           for (int j=0;j<prime1.size();j++) {
               if (y%prime1[j]==0) {
                   path2.push_back({prime1[j],0});
                   while (y%prime1[j]==0) {path2[path2.size()-1].second++; y/=prime1[j];  }
               }
           }
           int ans1=1;
           int ans2=1; 
           int sum1=0; for (int j=0;j<path1.size();j++) sum1+=path1[j].second; 
           ans1=fac[sum1];
           for (int j=0;j<path1.size();j++) { ans1*=inv(fac[path1[j].second],mod); ans1%=mod; }
           int sum2=0; for (int j=0;j<path2.size();j++) sum2+=path2[j].second; 
           ans2=fac[sum2];
           for (int j=0;j<path2.size();j++) { ans2*=inv(fac[path2[j].second],mod); ans2%=mod; }
           cout<<(ans1*ans2)%mod<<"\n"; 
           
       }
         /* --------- */   
            return;
    }
     
     
     
    signed main() {
       ios_base::sync_with_stdio(false);
       cin.tie(0);
       cout.tie(0); 
       
       //  cout<<fixed<<setprecision(10); 
       
          int tututu;
          tututu=1;
          
       
       //cin>>tututu; // если нет запросов, то закоментить
        
          for (int qwerty=0;qwerty<tututu;qwerty++) solve();
      
       
        return 0;
    }
