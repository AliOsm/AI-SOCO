#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

int dp[1000010];

map <pair <int, ll>, pair <int, ll> > mp;

ll ten[20];

pair <int, ll> func(int pre, ll N){ // goal, step
    int i;
    
    if(N <= 0) return make_pair((int)(-N), 0ll);
    
    pair <int, ll> st = make_pair(pre, N);
    if(mp.find(st) != mp.end()) return mp[st];
    
    int a[20];
    ll x = N;
    REP(i,20){
        a[i] = (int)(x % 10);
        x /= 10;
    }
    
    int maxa = pre;
    REP(i,20) maxa = max(maxa, a[i]);
    
    if(N % 100 <= 90){
        pair <int, ll> tmp = func(pre, N - maxa);
        return make_pair(tmp.first, tmp.second + 1);
    }
    
    for(i=1;;i++) if(a[i] != 9) break;
    int e = i;
    int pre2 = pre;
    for(i=e;i<20;i++) pre2 = max(pre2, a[i]);
    
    if(N < ten[e]){
        pair <int, ll> tmp = func(pre, N - maxa);
        return make_pair(tmp.first, tmp.second + 1);
    }
    
    pair <int, ll> tmp2 = func(pre2, N % ten[e]);
    pair <int, ll> ans = func(pre, N / ten[e] * ten[e] - tmp2.first);
    ans.second += tmp2.second;
    
//  cout << pre << ' ' << N << ' ' << ans.first << ' ' << ans.second << ' ' << dp[N] << endl;
//  cout << pre2 << ' ' << N % ten[e] << endl;
    
    return mp[st] = ans;
}

int main(void){
    int i;
    
/*  for(i=1;i<=1000000;i++){
        dp[i] = (1<<29);
        int x = i;
        while(x > 0){
            dp[i] = min(dp[i], dp[i-x%10] + 1);
            x /= 10;
        }
    }
*/  
    ten[0] = 1;
    for(i=1;i<20;i++) ten[i] = ten[i-1] * 10;
    ll N;
    cin >> N;
    cout << func(0, N).second << endl;
    
//  cout << dp[(int)N] << endl;
    
    return 0;
}
