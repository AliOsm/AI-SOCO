#pragma comment (linker, "/STACK:64000000")

#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>

#define pb push_back
#define pll pair<ll, ll>
#define pii pair<int, int>
#define piiii pair<pii, pii>
#define mp make_pair
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define getbit(x, mask) (((mask) >> (x)) & 1)
#define onbit(x, mask) ((mask) | ((unsigned int)(1) << (x)))
#define offbit(x, mask) ((mask) & (~((unsigned int)(1) << (x))))
#define INF ((int)(1e9))
#define LINF ((long long)(1e18))
#define EPS (1e-8)
#define PI (3.1415926535897932384626433832795)
#define y1 asdf_1
#define y0 asdf_2
#define j0 jj0
#define MOD 1000000007
//#define HMOD 536870911
#define HMOD ((long long)(1e18) + 3LL)
#ifdef _MY_DEBUG
#define HMOD 1000000007
#endif
#define MAX 2000000000
#define HBASE 1009

typedef long long int64;
typedef unsigned long long uint64;
typedef unsigned int uint32;
typedef long double ldd;

using namespace std;

struct child
{
	int d, v, num;
	int64 p;

	child(int d, int v, int p, int num) : d(d), v(v), p(p), num(num)
	{
	}

	bool operator < (const child &c) const
	{
		return num < c.num;
	}
};

vector<child> qu, ready;
int n;

void solve()
{
	scanf ("%d", &n);
	for (int j = 1; j <= n; j++)
	{
		int v, d, p;
		scanf ("%d%d%d", &v, &d, &p);
		qu.pb(child(d, v, p, j));
	}
	reverse(qu.begin(), qu.end());
	while (!qu.empty())
	{
		ready.pb(qu.back());
		qu.pop_back();
		for (int i = 0; i < ready.back().v && (int)qu.size() - i - 1 >= 0; i++)
		{
			qu[qu.size() - i - 1].p -= (ready.back().v - i);
		}
		bool away = true;
		do
		{
			away = false;
			for (int i = qu.size() - 1; i >= 0; i--)
			{
				if (qu[i].p < 0)
				{
					away = true;
					for (int j = i - 1; j >= 0; j--)
					{
						qu[j].p -= qu[i].d;
					}
					qu.erase(qu.begin() + i, qu.begin() + i + 1);
					break;
				}
			}
		}
		while (away);
	}

	sort (ready.begin(), ready.end());
	printf ("%d\n", (int)(ready.size()));
	for (int i = 0; i < ready.size(); i++)
	{
		printf ("%d ", ready[i].num);
	}
}

#define TASK "independent"

int main()
{
	ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
	freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
	//freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
	srand(1337);
	solve();
	return 0;
}