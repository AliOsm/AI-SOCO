#include <bits/stdc++.h>
using namespace std;
int n, m, k;
int n_vis = 0;
int n_empty = 0;
bool vis[500][500];
string s[500];
int dx[4] = {-1, 1, 0, 0};
int dy[4] = {0, 0, -1, 1};
void dfs(int i, int j) {
	if(n_vis < n_empty - k) {
		n_vis += 1;
		vis[i][j] = true;
		for(int d = 0; d < 4; d++) {
			int ni = i + dx[d];
			int nj = j + dy[d];
			if(0 <= ni && ni < n 
			&& 0 <= nj && nj < m 
			&& s[ni][nj] == '.'
			&& !vis[ni][nj]) {
				dfs(ni, nj);
			}
		}
	}
}
int main() {
	cin >> n >> m >> k;
	for(int i = 0; i < n; i++) {
		cin >> s[i];
		for(int j = 0; j < m; j++) {
			if(s[i][j] == '.') {
				n_empty++;
			}
		}
	}
	memset(vis, false, sizeof vis);
	bool go = true;
	for(int i = 0; i < n && go; i++) {
		for(int j = 0; j < m && go; j++) {
			if(s[i][j] == '.') {
				dfs(i, j);
				go = false;
			}
		}
	}
	for(int i = 0; i < n; i++) {
		for(int j = 0; j < m; j++) {
			cout << (s[i][j] == '#' || vis[i][j] ? s[i][j] : 'X');
		}
		cout << endl;
	}
	return 0;
}