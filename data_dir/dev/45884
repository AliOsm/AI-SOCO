#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define for1(i,n) for(int i=1;i<=(int)(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N=202;

int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      int q;
      cin>>q;
      while(q--)
      {
            int n,k;
            cin>>n>>k;
            int a[n];
            for(int i=0;i<n;i++)
            {
                  cin>>a[i];
            }
            int mn=1e12;
            for(int i=0;i<n;i++)
            {
                  mn=min(mn,a[i]+k);
            }
            int mx=-1;
            for(int i=0;i<n;i++)
            {
                  mx=max(mx,max(a[i]-k,0LL));
            }
            bool f=true;
            for(int i=0;i<n;i++)
            {
                  if(abs(a[i]-mn)>k)
                  {
                        f=false;
                  }
            }
            if(f)
            {
                  cout<<mn<<"\n";
            }
            else{
                  f=true;
                  for(int i=0;i<n;i++)
                  {
                        if(abs(a[i]-mx)>k) f=false;
                  }
                  if(f)
                  {
                        cout<<mx<<"\n";
                  }
                  else{
                        cout<<"-1\n";
                  }
            }
      }     
}     
// I never lose. I either win or I learn