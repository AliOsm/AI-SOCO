/* practice with Dukkha */
#include <stdio.h>
#include <stdlib.h>

#define N	2000
#define M	(N * (N - 1) / 2)

int pp[N], ii[M], jj[M], m;

void swap(int i, int j) {
	int tmp;

	tmp = pp[i], pp[i] = pp[j], pp[j] = tmp;
	ii[m] = i, jj[m] = j, m++;
}

int main() {
	static int inv[N];
	int n, h, i, j, c;

	scanf("%d", &n);
	for (i = 0; i < n; i++)
		scanf("%d", &pp[i]), pp[i]--;
	for (i = 0; i < n; i++) {
		int s;

		scanf("%d", &s), s--;
		inv[s] = i;
	}
	c = 0;
	for (i = 0; i < n; i++) {
		pp[i] = inv[pp[i]];
		c += abs(pp[i] - i);
	}
	for (h = 1; h < n; h++)
		for (j = h, i = j - 1; i >= pp[j]; i--)
			if (pp[i] >= j) {
				swap(i, j);
				j = i;
			}
	printf("%d\n", c / 2);
	printf("%d\n", m);
	for (h = 0; h < m; h++)
		printf("%d %d\n", ii[h] + 1, jj[h] + 1);
	return 0;
}
