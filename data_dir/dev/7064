// CONTEST SOURCE
#include <algorithm>
#include <climits>
#include <cmath>
#include <cmath>
#include <cstdio>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <vector>
using namespace std;
#define ll long long
#define x first
#define y second
#define pii pair<int, int>
#define pdd pair<double, double>
#define L(s) (int)(s).size()
#define VI vector<int>
#define all(s) (s).begin(), (s).end()
#define pb push_back
#define mp make_pair
#define inf 1000000000
#define pi 2 * acos(0.)
int x, y, p, q, t;
inline int gcd(int x, int y) {
  while(x && y) if (x >= y) x %= y; else y %= x;
  return x + y;
}
int main() {
  scanf("%d", &t);
  while (t--) {
    scanf("%d%d%d%d", &x, &y, &p, &q);
    if (p == 0) {
      if (x == 0) { printf("0\n"); } else { printf("-1\n"); }
      continue;
    }
    if (p == q) {
      if (x == y) { printf("0\n"); } else { printf("-1\n"); }
      continue;
    }
    int g = gcd(p, q);
    p /= g;
    q /= g;
    ll low = 0, high = 2 * inf + 1;
    while(high - low > 1) {
      ll mid = (high + low) / 2;
      ll need_y = 1LL * mid * q - y;
      ll need_x = 1LL * mid * p - x;
      if (need_y >= 0 && need_x >= 0 && need_x <= need_y) {
        high = mid;
      } else {
        low = mid;
      }
    }
    printf("%I64d\n", 1LL * high * q - y);
  }
}
