#define _CRT_SECURE_NO_WARNINGS
#include<bits\stdc++.h>

using namespace std;

#define Files


#define rdi(i)          scanf("%d", &i)
#define rdii(i, j)      scanf("%d%d", &i, &j)
#define rep(i, v)       for(int i=0;i<v.size();++i)
#define lp(i, n)        for(int i=0;i<(int)(n);++i)
#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)
#define all(v)          ((v).begin()), ((v).end())
#define clr(v, d)       memset(v, d, sizeof(v))
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;
typedef unsigned long long   ull;
const ll OO = 1e8;
const ll OOL = 1e16;
const ll MOD = 1e9 + 7;
const double EPS = 1e-9;

#define pb                  push_back
#define MP                  make_pair
typedef long double       ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef pair<int, int>    pii;
typedef pair<ll, ll>      pll;
typedef vector<pair<int, int> > vii;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
typedef vector<ll>        vl;
typedef vector<vector<ll> >     vvl;
typedef vector<pair<ll, ll> >   vll;

ull gcd(ull a, ull b) { return (b == 0 ? a : gcd(b, a % b)); }
ull lcm(ull a, ull b) { return (a * (b / gcd(a, b))); }
ull power(ull a, ull b){ if (b == 0) return 1; ull ans = power(a, b / 2); ans = (ans * ans) % MOD; if (b & 1) ans = (ans * a) % MOD; return ans; }
typedef pair<ll, ll > pp;

string bad[111];
int change[111];

char upper(char c){
	if (c >= 'A' && c <= 'Z') return c;
	return 'A' + (c - 'a');
}

char lower(char c){
	if (c >= 'a' && c <= 'z') return c;
	return 'a' + (c - 'A');
}

int isUpper(char c){
	if (c >= 'A' && c <= 'Z') return 1;
	return 0;
}

int isLower(char c){
	if (c >= 'a' && c <= 'z') return 1;
	return 0;
}

int main() {
#ifdef Filesx
	freopen("in.txt", "r", stdin);
	freopen("out.txt", "w", stdout);
#endif
	ios::sync_with_stdio(0);

	int n; cin >> n;
	lp(i, n) cin >> bad[i];
	string s; cin >> s;
	char letter; cin >> letter;
	char other = 'a';
	if (letter == other) other = 'b';
	rep(i, s){
		int maxi = 0;
		lp(j, n){
			int ok = 1;
			rep(k, bad[j]){
				if (i + k >= s.size() || lower(s[i + k]) != lower(bad[j][k])){
					ok = 0;
					break;
				}
			}
			if (ok) maxi = max(maxi, (int)bad[j].size());
		}
		lp(j, maxi) change[i + j] = 1;
	}

	rep(i, s){
		if (!change[i]) continue;
		if (lower(s[i]) != lower(letter)){
			if (isLower(s[i])) s[i] = lower(letter);
			else s[i] = upper(letter);
		}
		else{
			if (isLower(s[i])) s[i] = lower(other);
			else s[i] = upper(other);
		}
	}
	cout << s << endl;

	return 0;

}