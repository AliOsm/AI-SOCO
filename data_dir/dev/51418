//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 10000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 100001

set<int>s;
vector<int>v;
int l_start[5005],l_end[5005];
ll dp[2][10005];

int closest(int x,int l,int r)
{
	if(x>=l && x<=r)
	return 0;
	if(x<l)
	return l-x;
	if(x>r)
	return x-r;
	assert(false);
}
int main()
{
	boost1;boost2;
	int i,j,n,where,init_pos,x,y,sz;
	ll mini,ans=inf;
	cin>>n>>init_pos;
	s.insert(init_pos);
	for(i=1;i<=n;i++)
	{
		cin>>l_start[i]>>l_end[i];
		s.insert(l_start[i]);
		s.insert(l_end[i]);
	}
	for(auto it:s)
	v.pb(it);
	for(i=0;i<v.size();i++)
	{
		if(v[i]==init_pos)
		{
			where=i;
			break;
		}
	}
	sz=v.size();
	for(i=0;i<=1;i++)
	{
		for(j=0;j<=sz;j++)
		dp[i][j]=inf;
	}
	dp[0][where]=0;
	for(i=1;i<=n;i++)
	{
		mini=inf;
		for(j=0;j<sz;j++)
		{
			mini=min(mini,dp[(i-1)&1][j]-v[j]);
			dp[i&1][j]=min(dp[i&1][j],mini+v[j]+closest(v[j],l_start[i],l_end[i]));
		}
		mini=inf;
		for(j=sz-1;j>=0;j--)
		{
			mini=min(mini,dp[(i-1)&1][j]+v[j]);
			dp[i&1][j]=min(dp[i&1][j],mini-v[j]+closest(v[j],l_start[i],l_end[i]));
		}
		for(j=0;j<=sz;j++)
		dp[(i-1)&1][j]=inf;
	}
	for(i=0;i<sz;i++)
	ans=min(ans,dp[n&1][i]);
	cout<<ans;
	return 0;
}
