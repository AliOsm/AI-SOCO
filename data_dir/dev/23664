#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ll long long
#define ld long double
#define vi   vector<int>
#define pii pair<int, int>
#define ull unsigned long long
#define sz(v)  ((int)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define MEM(dp,i) memset(dp ,i, sizeof (dp))
#define repit( cont , i  ) for( auto i : cont)
#define forr(c,x,n)   for(ll c=x;c<=(ll)n; ++c )
#define forrr(c,x,n)  for(ll c=x;c>=( ll )n ;--c )
#define db(x) cout << " LOOK " <<(#x) <<" = " <<  x << '\n'
#define ICPC ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define printarr(a , l , r ) forr ( i , l , r )cout << a[i] << " ";cout<<endl;
#define printarr2(a, n , m) forr ( i , 1 , n){forr ( j , 1, m )cout << a[i][j] << " ";cout<<endl;}

//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);

vector < char > v;
int r,c , k , cnt = 0 ;
char a[107][107];
bool vis[107][107];
int x  , y  , id , h  ;

bool valid ( int i , int j )
{
    return ( i < r && i >= 0 && j < c && j >= 0 && !vis[i][j]) ;
}
void dfs( int i , int j )
{
    if ( !valid(i , j )  )
        return;

    vis[i][j] = 1;

    if ( a[i][j] == 'R')
        h++;

    a[i][j] = v[id];
    if ( y && h== x+1 )
    {
        y--;
        h = 0;
        if ( id < k -1 )
            id++;
    }
    else if ( !y && h == x)
    {
        h = 0 ;
        if ( id < k- 1 )
            id++;
    }
    dfs( i , j+1 );
    dfs( i+1 , j );
    dfs( i , j-1 );
    dfs( i-1 , j );
    return;
}
int main()
{
    ICPC;
    for (char i = 'a' ; i<= 'z' ; i++)
        v.push_back(i);
    for (char i = 'A' ; i<= 'Z' ; i++)
        v.push_back(i);
    for (char i = '0' ; i<= '9' ; i++)
        v.push_back(i);
    int t;
    cin >> t;
    while ( t-- )
    {
        MEM(vis , 0 ) ;
        cnt= 0 ;
        cin >> r>>  c>> k ;
        for(int i = 0 ; i < r ; i++ )
        {
            for ( int j = 0 ; j < c; j++ )
            {
                cin >> a[i][j];
                if ( a[i][j]== 'R')
                    cnt++;
            }
        }
        x = cnt/k , y = cnt %k , id =  0,h =0 ;
        dfs( 0 ,0 );
        for ( int i = 0 ; i < r ; i++ )
        {
            for (int j = 0 ; j < c;  j++ )
                cout << a[i][j];
            cout << endl;
        }
    }
}
