#include<bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define pii pair<int,int>
#define pll pair<ll,ll>

using namespace std;

int n;
struct node{
    node*l,*r;
    int mn ,laz;
    node(){
        l = r= 0 ;
        mn = laz = 0;
    }
};

void up(node*&it){
    if(!it->l)it->l = new node();
    if(!it->r)it->r = new node();
    it->l->mn += it->laz;
    it->l->laz += it->laz;
    it->r->mn += it->laz;
    it->r->laz += it->laz;
    it->laz = 0;
}

void add(node*&it,int a,int b,int l=0,int h=1e9+2){
    if(it == 0)it = new node();
    if(a == l && b == h){
        it->laz++;
        it->mn++;
        return ;
    }
    int m = (l+h)/2;
    up(it);
    if(b <= m){
        add(it->l,a,b,l,m);
    }
    else if(a> m){
        add(it->r,a,b,m+1,h);
    }
    else{
        add(it->r,m+1,b,m+1,h);

        add(it->l,a,m,l,m);
    }
    it->mn = min(it->l->mn,it->r->mn);
}

int cal(node*&it,int a,int b,int l=0,int h=1e9+2){
    if(it == 0)return 0;
    if(a == l && b == h){
        return it->mn;
    }
    int m = (l+h)/2;
    up(it);
    if(b <= m){
        return cal(it->l,a,b,l,m);
    }
    else if(a> m){
        return cal(it->r,a,b,m+1,h);
    }
    else{
        return min(cal(it->r,m+1,b,m+1,h),cal(it->l,a,m,l,m));
    }
}

int l[1001001];
int r[1001001];

int main(){
    cin>>n;
    node*root = 0;
    for(int i=0 ;i <n ;i ++){
        scanf("%d%d",&l[i],&r[i]);
        add(root,l[i],r[i]);
    }

    for(int i=0 ;i <n ;i ++){
        if(cal(root,l[i],r[i]) >= 2){
            cout<<i+1;
            return 0;
        }
    }
    cout<<-1;
    return 0;
}
