#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

const int N = 200005;

ll x[N], y[N];
int sz, n, m, id[N];

ll D(int i, int j, int k){
	return x[i] * y[j] + x[j] * y[k] + x[k] * y[i]
	- (x[j] * y[i] + x[k] * y[j] + x[i] * y[k]);
}

vector<int> convex_hull(){
	
	sort(id, id+sz, [](int a, int b){
		if(x[a] != x[b]) return x[a] < x[b];
		return y[a] < y[b];
	});

	vector<int> low, up;

	for(int i = 0; i < sz; i++){
		int c = id[i];

		while((int)low.size() >= 2 && D(low[low.size()-2], low.back(), c) < 0)
			low.pop_back();

		low.push_back(c);
	}

	for(int i = sz-1; i >= 0; i--){
		int c = id[i];

		while((int)up.size() >= 2 && D(up[up.size()-2], up.back(), c) < 0)
			up.pop_back();

		up.push_back(c);
	}

	low.pop_back();
	up.pop_back();

	low.reserve(low.size() + up.size());
	low.insert(low.end(), up.begin(), up.end());
	
	return low;
}

int main(){

	scanf("%d", &n);

	for(int i = 0; i < n; i++)
		scanf("%lld %lld", x+i, y+i), id[i] = i;
	
	scanf("%d", &m);

	for(int i = 0; i < m; i++)
		scanf("%lld %lld", x+n+i, y+n+i), id[n+i] = i+n;

	sz = n+m;
	
	vector<int> v = convex_hull();

	sort(v.begin(), v.end());

	bool ok = 1;

	if((int)v.size() != n) ok = 0;

	for(int i = 0; i < (int)v.size(); i++)
		if(v[i] != i)
			ok = 0;
	
	printf("%s\n", ok ? "YES" : "NO");

}
