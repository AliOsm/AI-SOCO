#include <bits/stdc++.h>
using namespace std;
#define mod 998244353
#define oo 1000000010
const int N = 3010;

char tmpread[N];

void read(string &s){
	scanf("%s",tmpread);
	s = (string)tmpread;
}
int n;

int dp[N][N];

string s , t;

int solve(int l,int r,int idx){
	if(idx == -1)
		return 1;
	if(dp[idx][l] != -1)
		return dp[idx][l];
	dp[idx][l] = 0;
	if(s[idx] == t[l] || t[l] == '?')
		dp[idx][l] += solve(l + 1 , r, idx - 1);
	if(s[idx] == t[r] || t[r] == '?')
		dp[idx][l] += solve(l , r - 1, idx - 1);
	if(dp[idx][l] >= mod)
		dp[idx][l] -= mod;
	return dp[idx][l];
}

int main(){
	read(s);
	read(t);
	n = (int)s.size();
	int m = (int)t.size();
	while((int)t.size() < n) t += '?';
	memset(dp,-1,sizeof(dp));
	int ans = 0;
	for(int idx = m - 1 ; idx < n;idx++){
		ans += solve(0 , idx , idx);
		if(ans >= mod) 
			ans -= mod;
	}
	cout << ans << endl;
	return 0;
}