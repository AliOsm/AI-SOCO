#include <bits/stdc++.h>
using namespace std;
#define pf pop_front
#define pb push_back
#define ulli unsigned long long int
#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)
#define rep(i,t) for (LL i=0;i<t;i++)
#define LL __int64
#define pii pair<LL,LL>
const ulli MAX=115,N=17,inf=1e9;
bool a[MAX][MAX],v[MAX][3];
LL n,m,d[MAX][3],e[MAX],s[MAX][3],x,y,maxi;
deque<LL>q;
void BFS()
{
  LL start,now,cur;
  start=1;
  s[start][1]=1;
  q.pb(start);
  v[start][1]=true;
  while(q.size())
  {
    now=q[0];
    v[now][1]=true;
    FOR(i,1,n)
    {
      if(!v[i][1] && a[now][i])
      {
        d[i][1]=(d[now][1]+1);
        v[i][1]=true;
        q.pb(i);
      }
      else
      {
        if(v[i][1] && a[now][i] && d[i][1]+1==d[now][1])
        {
          s[now][1]+=s[i][1];
        }
      }
    }
    q.pf();
  }
  start=n;
  s[start][2]=1;
  q.pb(start);
  v[start][2]=true;
  while(q.size())
  {
    now=q[0];
    v[now][2]=true;
    FOR(i,1,n)
    {
      if(!v[i][2] && a[now][i])
      {
        d[i][2]=(d[now][2]+1);
        v[i][2]=true;
        q.pb(i);
      }
      else
      {
        if(v[i][2] && a[now][i] && d[i][2]+1==d[now][2])
        {
          s[now][2]+=s[i][2];
        }
      }
    }
    q.pf();
  }
}
int main()
{
  cin>>n>>m;
  FOR(i,1,m)
  {
    cin>>x>>y;
    a[x][y]=true;
    a[y][x]=true;
  }
  BFS();
  FOR(i,1,n)
  {
    FOR(j,1,n)
    {
      if(a[i][j])
      {
        if(d[i][1]+1+d[j][2]==d[n][1])
        {
          e[i]+=(s[i][1]*s[j][2]);
          e[j]+=(s[i][1]*s[j][2]);
        }
        else
        {
          if(d[j][1]+1+d[i][2]==d[n][1])
          {
            e[i]+=(s[j][1]*s[i][2]);
            e[j]+=(s[j][1]*s[i][2]);
          }
        }
      }
    }
  }
  FOR(i,1,n)
  {
    maxi=max(e[i]/2,maxi);
  }
  double help=maxi,op=s[n][1];
  double ans=(help/op);
  return cout<<fixed<<ans<<"\n",0;
}
