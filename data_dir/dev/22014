#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define read(x) scanf( "%lld" , &x )
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define carr( n , array ) forr(i , n) read(array[i])
#define coutarr(n , array ) cout << "\n" ; forr (i , n) printf("%lld " , array[i]) ; cout << "\n" ;
#define F first
#define S second
#define IF ->first
#define IS ->second
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define sizee(vec) (ll)vec.size()

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 4e5 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;
vector <int> number [NN] ;
set <int> test ;
int ans = -1 ;
void update () {
    if (ans == -1) {
        if (*test.begin() == 0) ans = 1 ;
        else ans = 0 ;
        return ;
    }
    while (test.size() && *test.begin() < ans)
        test.erase(test.begin()) ;
    if (!test.size()) return ;
    while (test.size() && ans == *test.begin()) {
        test.erase(test.begin()) ; ans ++ ;
    }
}
int main()
{
    int q , k , x ; cin >> q >> k ;
    while (q--) {
        scanf("%d" , &x) ;
        x %= k ;
        if (number[x].size() == 0) {
            number[x].pb(x) ;
            test.insert(x) ;
        } else {
            int flag = number[x][0] ; number[x].pop_back() ;
            number[x].pb(flag + k) ;
            test.insert(flag + k) ;
        }
        update() ;
        cout << ans << endl ;
    }
    return 0;
}
