#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
LL sum[100100];
int a[100100];
LL ans[100100];
vector<pnt > b;
vector<LL> c;
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();

#endif

	int n;
	scanf("%d",&n);
	FOR(i,0,n)
		scanf("%d",&a[i]);
	sort(a,a+n);
	int q;
	scanf("%d",&q);
	b.resize(q);
	FOR(i,0,q)
	{
		scanf("%d",&b[i].first);
		b[i].second=i;
	}
	sort(b.begin(),b.end());
	sum[0]=a[0];
	FOR(i,1,n)
		sum[i]=sum[i-1]+a[i];
	FOR(it,0,b.size())
	{
		if ((it) && (b[it].first==b[it-1].first))
		{
			ans[b[it].second]=ans[b[it-1].second];
			continue;
		}
		int k=b[it].first;
		LL res=0;
		LL c=k;
		int cnt=1;
		for (LL i=n-2; i>=0;)
		{
			LL sum1=sum[i];
			LL l=i-c;
			if (l>=0)
				sum1-=sum[l];
			res+=sum1*cnt;
			cnt++;
			i-=c;
			c*=k;
		}
		ans[b[it].second]=res;
	}
	FOR(i,0,q)
	{
		if (i)
			printf(" ");
		printf("%I64d",ans[i]);
	}
	printf("\n");
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}