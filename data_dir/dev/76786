/*
Nahid Hossain
Jahangirnagar University
Roll:54
*/
#include<bits/stdc++.h>
#define ll long long
#define pf printf
#define sf scanf
#define ff first
#define ss second
#define clr clear()
#define sz size()
#define pb push_back
#define mk make_pair
#define pi acos(-1)
#define inf 1152921504606846976
#define mod 1000000007
#define ull unsigned long long int
#define f(i,k,n) for(i=k;i<n;i++)
#define fr(i,n,k) for(i=n;i>=k;i--)
#define ent(a) scanf("%lld",&a)
#define ent2(a,b) scanf("%lld%lld",&a,&b)
#define ent3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define mem(a) memset(a,0,sizeof(a))
#define vec(v,s) vector<ll>v[s]
#define arr(a,s) ll a[s];
#define check(n,pos) (n&(1<<pos))
#define set(n,pos)  (n|(1<<pos))
//knight and king//
int dr[]={2,2,-2,-2,1,-1,1,-1};
int dc[]={1,-1,1,-1,2,2,-2,-2};
int dr1[]={0,0,1,1,1,-1,-1,-1};
int dc1[]={1,-1,1,0,-1,0,1,-1};
int dr2[]={0,0,1,-1};
int dc2[]={1,-1,0,0};
////////////////////////////
using namespace std;
int main()
{
    ll n,i,lo,hi,m,p,q,ans,max1,mid;
    while(cin>>n>>m)
    {
        pair<ll,ll>a[m+5];
        for(i=1;i<=m;i++)
            cin>>a[i].ff>>a[i].ss;
            max1=-1;
            bool f=0;
            if(a[m].ff!=n)
            {
                a[m+1].ff=n;a[m+1].ss=a[m].ss+abs(a[m].ff-a[m+1].ff);
                m++;
            }
        for(i=1;i<m;i++)
        {
            lo=0;hi=a[i+1].ff-a[i].ff+5;
            f=0;
            while(lo<=hi)
            {
                mid=(lo+hi)>>1;
                p=a[i].ss+mid;
                q=abs(a[i+1].ss-p);
                if(mid+q<=(a[i+1].ff-a[i].ff))
                    {
                        f=1;
                        max1=max(max1,p);
                        lo=mid+1;
                    }
                else
                    hi=mid-1;
            }
            //cout<<p<<endl;
            if(f==0)
            {
                break;
            }
        }
        if(f==0)
        {
            if(m==1)
            {
                p=abs(a[m].ff-1)+a[m].ss;
                cout<<p<<endl;
            }
            else
            cout<<"IMPOSSIBLE"<<endl;
        }
        else
            cout<<max1<<endl;
    }
    return 0;
}
