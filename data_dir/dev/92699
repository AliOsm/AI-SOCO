#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <random>

using namespace std;
const int N = 3e5 + 5;

int a[N];
int which[N];

void solve() {
	int n , m , d;
	cin >> n >> m >> d;
	for(int i = 1; i <= n; ++i) cin >> a[i];
	set < int > s;
	set < int > :: iterator it, tar;
	map < int , int > mp;
	for(int i = 1; i <= n; ++i) {
		s.insert(a[i]);
		mp[a[i]] = i;
	}
	int days = 0 , prev = -1;
	while(!s.empty()) {
		it = s.begin();
		tar = it;
		it++;
		which[mp[*tar]] = ++days;
		prev = *tar;
		s.erase(tar);
		while(it != s.end()) {
			it = s.upper_bound(prev + d);
			if(it != s.end()) {
				tar = it;
				it++;
				which[mp[*tar]] = days;
				prev = *tar;
				s.erase(tar);
			}
		}
	}
	cout << days << endl;
	for(int i = 1; i <= n; ++i) {
		cout << which[i] << ' ';
	}
}


int main() {
	solve();
	return 0;
}