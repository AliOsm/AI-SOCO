#include <bits/stdc++.h>
#define pii pair<int,int>
#define x first
#define y second
const int N=51;
using namespace std;
vector<int> ar[51];
int n,k;
vector<vector<int>> ans;
void check(){
    for(int i=0;i<n;i++){
        if(ar[0][i]==ar[1][i]&&ar[1][i]!=0){
            vector<int> s;
            s.push_back(ar[0][i]);
            s.push_back(1);
            s.push_back(i+1);
            ans.push_back(s);
            ar[1][i]=0;
        }
    }
    for(int i=0;i<n;i++){
        if(ar[2][i]==ar[3][i]&&ar[2][i]!=0){
            vector<int> s;
            s.push_back(ar[2][i]);
            s.push_back(4);
            s.push_back(i+1);
            ans.push_back(s);
            ar[2][i]=0;
        }
    }
}
pii next(pii cur){
    if(cur.x==1&&cur.y!=0)return {cur.x,cur.y-1};
    else if(cur.x==1)return {cur.x+1,cur.y};
    else if(cur.y==n-1)return {cur.x-1,cur.y};
    return {cur.x,cur.y+1};
}
int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    cout.tie(0);
    cin>>n>>k;
    ar[0].resize(n);
    ar[1].resize(n);
    ar[2].resize(n);
    ar[3].resize(n);
    for(int i=0;i<4;i++){
        for(int j=0;j<n;j++)
        {
            cin>>ar[i][j];
        }
    }
    check();
    int count=0;
    while(count<20000*2){
        int emptyx=-1,emptyy=-1;
        for(int i=1;i<=2;i++){
            for(int j=0;j<n;j++){
                pii nx=next({i,j});
                if(ar[nx.x][nx.y]==0&&ar[i][j]!=0){
                    emptyx=i;
                    emptyy=j;
                }
            }
        }
        int i=emptyx;
        int j=emptyy;
        if(i==-1&&j==-1)break;
        int sti=i;
        int stj=j;
        bool b=0;
        while(!(i==sti&&j==stj&&b)){
            b=1;
             pii nx=next({i,j});
             /*cout<<i<<' '<<j<<endl;
            cout<<nx.x<<' '<<nx.y<<endl;*/
             if(ar[nx.x][nx.y]==0&&
                ar[i][j]!=0){
                vector<int> s;
                s.push_back(ar[i][j]);
                s.push_back(nx.x+1);
                s.push_back(nx.y+1);
                ans.push_back(s);
                ar[nx.x][nx.y]=ar[i][j];
                ar[i][j]=0;
                i=nx.x;
                j=nx.y;
                count++;
                break;
             }
             i=nx.x;
             j=nx.y;
        }
        check();
        count++;
    }
    int b=1;
    for(int i=1;i<=2;i++){
        for(int j=0;j<n;j++){
                if(ar[i][j])b=0;
        }
    }
    if(b==0){
        cout<<-1<<endl;
        return 0;
    }
    cout<<ans.size()<<endl;
    for(auto s:ans){
        for(auto el:s){
            cout<<el<<' ';
        }
        cout<<'\n';
    }
    return 0;
}
