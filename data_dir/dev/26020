#include <bits/stdc++.h>


using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;


#define rand shittttty_shit
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rng_64(chrono::steady_clock::now().time_since_epoch().count());


typedef pair<int, int> pii;
typedef pair<string, string> pst;
typedef pair<pii, pii> piii;
typedef vector<piii> vpii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<short> vs;
typedef vector<vs> vvs;
typedef vector<vvs> vvvs;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;
typedef vector<vvld> vvvld;
typedef vector<string> vst;
typedef vector<vst> vvst;
typedef pair<ld, ld> pld;
typedef pair<pld, pld> pldd;
typedef vector<pld> vpd;
typedef complex<double> base;


#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define my_abs(a) (((a) >= 0) ? (a) : -(a))
#define mp(a, b) make_pair(a, (b))
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define SZ(a) ((int)((a).size()))
#define MODIK(a) (a >= M ? a - M : a)
#define triple(T) tuple<T, T, T>
#define quad(T) tuple<T, T, T, T>
#define watch(x) cout << (#x) << " = " << x << endl;
#ifdef MAX_HOME
#define cerr cout
#else
#define cerr if (false) cerr
#endif


const double PI = 2 * acos(0.0);

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";

istream &operator >> (istream &in, pii &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pii &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


istream &operator >> (istream &in, pld &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pld &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


template <class T0, class T1>
inline ostream & operator << (ostream &out, pair<T0, T1> &a) {
    return out << "{" << a.first << ", " << a.second << "}";
}

template <class T0, class T1, class T2>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) << ", " << get<2>(a) << "}";
}

template <class T0, class T1, class T2, class T3>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2, T3> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) <<
               ", " << get<2>(a) << ", " <<  get<3>(a) << "}";
}

template<class T>
inline ostream & operator << (ostream &out, vector<T> &a) {
    out << "[";
    fori (i, a.size())
        out << a[i] << vector<string>{", ", "]  "}[i + 1 == a.size()];
    return out;
}


void print(int a, int b, int n, vi h)
{
    ofstream cout("output.txt");
    cout << SZ(h) << ' ' << a << ' ' << b << '\n';
    for (int i = 0; i < SZ(h); ++i) {
        cout << h[i]  << ' ';
    }
    cout.close();
    exit(0);
}


inline bool break_time(ld time)
{
    return clock() > CLOCKS_PER_SEC * time;
}


ld get_rand_ld(ld l, ld r)
{
    uniform_real_distribution<double> gen(l, r);
    return gen(rng);
}


void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(13) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\nTOTAL EXECUTION TIME: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
}


const int M1 = 1000000093, p1 = 27162;
const int M2 = 1000000087, p2 = 241;


const int N = 1 << 20, M = 1e9 + 7, oo = 1e9 + 100, B = 60;
const ld EPS = 1e-9;


const int A = 26;
set<int> vertices[A];
int used[A];


bool dfs_circ(int v, int p = -1)
{
    used[v] = 1;
    bool label = 0;

    for (int u : vertices[v])
    {
        if (u == p)
            continue;

        if (used[u])
            return 1;
        else
            label = max(label, dfs_circ(u, v));
    }

    return label;
}


bool comp(int a, int b)
{
    return SZ(vertices[a]) < SZ(vertices[b]);
}


void dfs(int v)
{
    used[v] = 1;
    cout << char(v + 'a');
    for (int u : vertices[v])
    {
        if (!used[u])
            dfs(u);
    }
}


void solution()
{
    string s, t;
    cin >> s >> t;

    int l = 0;
    int n = SZ(s);

    for (int i = 0; i < n; ++i)
        if (l < SZ(t) && s[i] == t[l])
            l++;

    if (l == SZ(t))
    {
        cout << "YES\n";
        return;
    }

    int m = SZ(t);
    for (int i = 1; i < SZ(t); ++i)
    {
        string a, b;
        for (int j = 0; j < m; ++j)
            if (j < i)
                a.push_back(t[j]);
            else
                b.push_back(t[j]);


        vvi dp(n);
        for (int i = 0; i < n; ++i)
            dp[i].resize(SZ(a) + 1, -oo);

        dp[0][0] = 0;

        if (s[0] == a[0])
            dp[0][1] = 0;

        if (s[0] == b[0])
            dp[0][0] = 1;

        for (int i = 1; i < n; ++i)
            for (int j = 0; j < SZ(dp[i]); ++j)
            {
                if (dp[i - 1][j] == -oo)
                    continue;

                dp[i][j] = max(dp[i][j], dp[i - 1][j]);

                if (j != SZ(a) && s[i] == a[j])
                    dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j]);

                if (dp[i - 1][j] < SZ(b) && s[i] == b[dp[i - 1][j]])
                    dp[i][j] = max(dp[i][j], dp[i - 1][j] + 1);
            }

        for (int i = 0; i < n; ++i)
            for (int j = 0; j < SZ(dp[i]); ++j)
                if (j >= SZ(a) && dp[i][j] >= SZ(b))
                {
                    cout << "YES\n";
                    return;
                }
    }

    cout << "NO\n";
    return;
}


void smain()
{
    int t;
    cin >> t;

    while (t--)
    {
        solution();
    }
}