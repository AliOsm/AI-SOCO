#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
#define dbl(k, x) fixed << setprecision(k) << (x)

template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define _upgrade ios_base::sync_with_stdio(0);
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 1e5 + 7;

int n, m, P[N], W[N];

void solve()
{
    cin >> n >> m;
    LL ans = 0;
    int is = 0;
    for(int i = 1; i <= n; i++)
    {
        cin >> P[i];
        W[P[i]] = i;
    }

    for(int i = 1; i <= m; i++)
    {
        int x; cin >> x;
        if(is >= W[x])
        {
            ans++;
        }
        else
        {
            ans += 2 * (W[x] - i) + 1;
            is = W[x];   
        }
    }
    cout << ans << "\n";
}

int main()
{
    _upgrade
    
    int t; cin >> t;
    while(t--)
    {
        solve();
    }

	return 0;
}