#include <bits/stdc++.h>
using namespace std;
const int N = 5e3 + 10;
int ans, n, dp[N][N], a[N];
vector<int> v, rv;
int main() {
	ios_base::sync_with_stdio (false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	v.push_back(a[0]);
	for (int i = 1; i < n; i++)
		if (a[i] != a[i - 1])
			v.push_back(a[i]);
	rv = v;
	reverse(rv.begin(), rv.end());
	n = v.size();
	if (n == 1) {
		cout << 0;
		return 0;
	}
//	for (int i = 0; i < n; i++)
//		cout << v[i] << " ";
//	cout << endl;
//	for (int i = 0; i < n; i++) {
//			cout << rv[i] << " ";
//	}
//	cout << endl;
	for (int sum = 2; sum <= 2 * n; sum++) {
		for (int i = 1; i <sum; i++) {
			int j = sum - i;
			if (i > n || j > n)
				continue;
			if (v[i - 1] == rv[j - 1])
				dp[i][j] = dp[i - 1][j - 1] + 1;
			dp[i][j] = max({dp[i][j], dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]});
//			cout << "i = " << i << " j = " << j << " : " << dp[i][j] << endl;	
			if (sum == n - 1) {
				ans = max(ans, dp[i][j]);
			}
		}
	}
	cout << n - 1 - ans;
	return 0;
}
