// H
#include<bits/stdc++.h>
using namespace std ;
#define LL long long
#define mod 1000000007LL
#define PI acos(-1.0)


/*
// Ordered set
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template<typename T> using orderset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
//orderset<int> s ; //orderset<int>::iterator it ;
//orderset<int> X; //X.insert(1); //X.insert(2); //X.insert(4); //X.insert(8); //X.insert(16);
//cout<<*X.find_by_order(1)<<endl; // 2 //cout<<*X.find_by_order(2)<<endl; // 4 //cout<<*X.find_by_order(4)<<endl; // 16 //cout<<(end(X)==X.find_by_order(6))<<endl; // true
//cout<<X.order_of_key(-5)<<endl;  // 0 //cout<<X.order_of_key(1)<<endl;   // 0 //cout<<X.order_of_key(3)<<endl;   // 2 //cout<<X.order_of_key(4)<<endl;   // 2 //cout<<X.order_of_key(400)<<endl; // 5
*/

LL t , n , k ;
LL a[200005] ;
map< LL , LL > ma ;
queue< LL > q ;

void Calculation(){
    LL Sz = 0 ;
    for( int i = 1 ; i <= n ; i ++ ){
        if( ma[a[i]] ) continue ;
        if( Sz + 1 > k ){
            LL val = q.front() ;
            ma[val] = 0 ;
            q.pop() ;
            q.push( a[i] ) ;
            ma[a[i]] = 1 ;
        }
        else{
            ma[a[i]] = 1 ;
            q.push( a[i] ) ;
            Sz ++ ;
        }
    }
    n = q.size() ;
    vector< LL > V ;
    while( !q.empty() ){
        V.push_back( q.front() ) ;
        q.pop() ;
    }
    printf("%lld\n",n) ;
    for( int i = V.size() - 1 ; i >= 0 ; i -- ){
        printf("%lld ",V[i]) ;
    }
}

void Input(){
    scanf("%lld%lld",&n,&k) ;
    for( int i = 1 ; i <= n ; i ++ ){
        scanf("%lld",&a[i]) ;
    }
}

void Solve(){
    Input() ;
    Calculation() ;
}

int main()
{
    //freopen("input.txt","r",stdin) ;
    Solve() ;
    return 0 ;
}

/*
1
500 900 700 100
500 600 700 400
Y
*/
