#include<bits/stdc++.h>
#define lf double
#define ll long long
#define cc pair<char,char>
#define ull unsigned ll
#define ii pair<int,int>
#define li pair<ll,int>
#define iii pair<int,ii>
#define iiii pair<ii,ii>
#define iiii2 pair<int,iii>
#define lii pair<ll,ii>
#define lolo pair<ll,ll>
#define heap priority_queue
#define mp make_pair
#define st first
#define nd second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define all(x) x.begin(),x.end()
#define len(x) strlen(x)
#define sz(x) (int) x.size()
#define orta ((bas+son)/2)
#define min3(x,y,z) min(min(x,y),z)
#define max3(x,y,z) max(max(x,y),z)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 1050000000
#define N 500005
#define LOG 20
#define magic 100
#define KOK 250
#define EPS 0.0025
#define pw(x) (1<<(x))
#define PI 3.1415926535
using namespace std;

int n,k,d;
int f[N],to[N],Stop[N*4],Smin[N*4],Smax[N*4],a[N],tut[N];

int get(int pl) {

	int res=0;

	for(int i=pl;i>=1;i-=(i&-i)) res+=f[i];

	return res;

}

void up(int pl,int val) {

	for(int i=pl;i<=n+1;i+=(i&-i)) {

		f[i]+=val;

	}

}

void up(int node,int bas,int son,int x,int val) {

	if(bas>x || son<x) return ;

	if(bas==x && son==x) {

		Stop[node]+=val;

		if(!Stop[node]) {

			Smin[node]=inf;
			Smax[node]=-1;

		}
		else {

			Smin[node]=bas;
			Smax[node]=bas;

		}

		return ;

	}

	up(node*2,bas,orta,x,val);
	up(node*2+1,orta+1,son,x,val);

	Smin[node]=min(Smin[node*2],Smin[node*2+1]);
	Smax[node]=max(Smax[node*2],Smax[node*2+1]);

}

int main() {

	//freopen("input.txt","r",stdin);

	vector<ii> v;

	for(int i=0;i<N*4;i++) Smin[i]=inf,Smax[i]=-1;

	scanf("%d %d %d",&n,&k,&d);

	for(int i=1;i<=n;i++) {

		scanf("%d",&a[i]);

		v.pb({a[i],i});

	}

	sort(all(v));

	int cnt=0;

	for(int i=0;i<sz(v);i++) {

		++cnt;

		while(i+1<sz(v) && v[i].st==v[i+1].st) {

			a[v[i].nd]=cnt;

			i++;

		}

		a[v[i].nd]=cnt;

		tut[cnt]=v[i].st;

	}

	sort(a+1,a+1+n);

	int son=0;

	for(int i=1;i<=n;i++) {

		while(son+1<=n) {

			son++;

			up(1,1,n,a[son],1);

			if(tut[Smax[1]]-tut[Smin[1]]>d) {

				up(1,1,n,a[son],-1);

				son--;

				break ;

			}

		}

		up(1,1,n,a[i],-1);

		to[i]=son;

	}

	up(n+1,1);

	for(int i=n;i>=1;i--) {

		if(i+k-1>to[i]) continue ;

		int top=get(to[i]+1)-get(i+k-1);

		if(top>0) {

			up(i,1);

		}

	}

	if(get(1)) printf("YES");
	else printf("NO");

}