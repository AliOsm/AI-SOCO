#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ull unsigned long long
#define int long long
#define iter vector<int>::iterator
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=1e3+7;
const int inf=1e9+5;
const int mod=998244353;

int n,m;
vector< pair< int,pair<int,int> > >v;
int dp[N][N];

int st(int a,int k)
{
    int res=1;
    while(k>0){
        if (k%2==1){
            res=(res*a)%mod;
        }
        k/=2;
        a=(a*a)%mod;
    }
    return res;
}

int inv(const int& a)
{
    return st(a,mod-2);
}

int mul(const int&a,const int &b)
{
    int ans=(a*b)%mod;
    ans+=mod;
    ans%=mod;
    return ans;
}

main ()
{
    ios;
    cin>>n>>m;
    for (int i=1;i<=n;++i){
        for (int j=1;j<=m;++j){
            int x;
            cin>>x;
            v.pb({x,{i,j}});
        }
    }
    int R,C;
    cin>>R>>C;
    sort(all(v));
    int r=0;
    int sumDP=0;
    int sumx=0;
    int xsq=0;
    int sumy=0;
    int ysq=0;
    for (int l=0;l<v.size();++l){
        r=l+1;
        while(r<v.size() && v[r].ff==v[l].ff)++r;
        if (l!=0){
            int cnt=l;
            cnt=inv(cnt);
            for (int j=l;j<r;++j){
                int x=v[j].ss.ff;
                int y=v[j].ss.ss;
                dp[x][y]=(x*x+y*y)%mod;
                dp[x][y]+=mul(xsq,cnt);
                dp[x][y]+=mul(mul(-2*x,sumx),cnt);
                dp[x][y]+=mul(ysq,cnt);
                dp[x][y]+=mul(mul(-2*y,sumy),cnt);
                dp[x][y]+=mul(sumDP,cnt);
                dp[x][y]%=mod;
            }
        }
        for (int j=l;j<r;++j){
            int x=v[j].ss.ff;
            int y=v[j].ss.ss;
            sumDP+=dp[x][y];
            sumx+=x;
            sumy+=y;
            xsq+=x*x;
            ysq+=y*y;

            sumDP%=mod;
            sumx%=mod;
            sumy%=mod;
            xsq%=mod;
            ysq%=mod;
        }
        l=r-1;
    }
    cout<<dp[R][C]<<endl;
}
