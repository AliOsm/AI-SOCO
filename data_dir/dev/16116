#include <bits/stdc++.h>
#define int long long
using namespace std;
#define IOS ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
inline int in(){int32_t x ; scanf("%d",&x) ; return x ; }
inline long long lin(){long long x ; scanf("%lld",&x) ; return x ;}
const int maxn = 1e6 + 10;
int diff;

int32_t main()
{
    int n = in() , t = in();
    string a , b;
    cin >> a >> b;
    vector<int> pos;
    for (int i = 0 ; i < n ; i ++){
        diff += a[i] != b[i];
        if (a[i] != b[i]) pos.push_back(i);
    }
    for (int x = 0 ; x <= diff ; x ++)
    {
        if ((diff-x)%2 == 0 && (diff-x)/2+(n-diff+x) >= t && (diff-x)/2+x <= t)
        {
            
            string res;
            res.resize(n);
            int dist = 0;
            for (int i = 0 ; i < pos.size() ; i ++)
            {
                
                if (i < x)
                {
                    for (char ch = 'a' ; ch <= 'c' ; ch ++)
                    {
                        if (ch != a[pos[i]] && ch != b[pos[i]])
                        {
                            res[pos[i]] = ch;
                            break;
                        }
                    }
                    dist ++;
                }
                else
                {
                    if (i % 2 == 0)
                        res[pos[i]] = a[pos[i]];
                    else
                        res[pos[i]] = b[pos[i]];
                }
            }
            dist += (diff-x)/2;
            for (int i = 0 ; i < n ; i ++)
            {
                if (a[i] != b[i]) continue;
                if (dist + 1 <= t)
                {
                    for (char ch = 'a' ; ch <= 'b' ; ch ++)
                    {
                        if (ch != a[i])
                        {
                            res[i] = ch;
                        
                            break;
                        }
                    }
                    dist ++;
                }
                else
                    res[i] = a[i];
            }
            cout << res << endl;
            return 0;
        }
    }
    return cout << -1 << endl , 0;
}
