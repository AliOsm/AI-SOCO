/*** Author: Dhruv Rastogi ***/
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<ll,ll>
#define pb push_back
#define rep(i,a,b) for(ll i=a;i<b;++i)
#define repd(i,a,b) for(ll i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<ll> >
#define vll vector<ll>
#define mint map<int,int> 
#define int long long
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>

int valid[1005][1005];
int vis[1005][1005];
int ax,ay,bx,by,cx,cy;
int n;
int isvalid(int x,int y){
    if(y==ay)
        return 0;
    if(x==ax)
        return 0;
    if(x<1 || x>n || y<1 || y>n)
        return 0;
    if(abs(x-ax)==abs(y-ay))
        return 0;
    return 1;
}
void dfs(int x,int y){
    vis[x][y]=1;
    if(isvalid(x,y+1) && !vis[x][y+1]){
        dfs(x,y+1);
    }
    if(isvalid(x,y-1) && !vis[x][y-1]){
        dfs(x,y-1);
    }
    if(isvalid(x+1,y+1) && !vis[x+1][y+1]){
        dfs(x+1,y+1);
    }
    if(isvalid(x+1,y-1) && !vis[x+1][y-1]){
        dfs(x+1,y-1);
    }
    if(isvalid(x+1,y) && !vis[x+1][y]){
        dfs(x+1,y);
    }
    if(isvalid(x-1,y+1) && !vis[x-1][y+1]){
        dfs(x-1,y+1);
    }
    if(isvalid(x-1,y-1) && !vis[x-1][y-1]){
        dfs(x-1,y-1);
    }
    if(isvalid(x-1,y) && !vis[x-1][y]){
        dfs(x-1,y);
    }


}
void solve(){  
    cin>>n;
    
    cin>>ax>>ay>>bx>>by>>cx>>cy;
    dfs(bx,by);
    if(vis[cx][cy]){
        cout<<"YES";
    }
    else cout<<"NO";
    cout<<endl;



  
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}