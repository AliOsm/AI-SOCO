#include <iostream>
#include <utility>
#include <algorithm>
#include <vector>
#include <map>
#include <set>

#define N 100005

using namespace std;

typedef long long ll;
typedef pair<int, int> pt;

map<int, int> mp;
multiset<int> ms;
vector<pt> v;

int p[N], c[N];
ll a[N];

int main() {
    int n, k;
    ll sum = 0LL;
    
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> k;
    
    for (int i = 1; i <= n; i++) {
        cin >> p[i];
        mp[p[i]] = i;
    }
    for (int i = 1; i <= n; i++)
        cin >> c[i];
    
    for (int i = 1; i <= n; i++)
        v.push_back(make_pair(p[i], c[i]));
    
    sort(v.begin(), v.end());
    for (int i = 0; i < n; i++) {
        int power = v[i].first;
        int coin = v[i].second;
        int id = mp[power];
        a[id] = sum + coin;
        if (k == 0)
            sum = 0;
        else if (ms.size() < k) {
            sum += coin;
            ms.insert(coin);
        }
        else if (*ms.begin() < coin) {
            sum -= *ms.begin();
            sum += coin;
            ms.erase(ms.begin());
            ms.insert(coin);
        }
    }
    
    for (int i = 1; i <= n; i++)
        cout << a[i] << " ";
    cout << endl;
    
    return 0;
}
