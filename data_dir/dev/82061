#include "bits/stdc++.h"
using namespace std;
#ifdef ONLINE_JUDGE
#define trace(...)
#endif

using LL = long long;
using PII = pair<int, int>;
const int N = 1e5, M = 1e6 + 1;

bool vowels[255];
string words[N];
int len[N], lastv[N];
PII val[N];
bool used[N];

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	for (char ch: "aeiou") vowels[ch] = true;
	
	int n; cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> words[i];
		for (char ch: words[i]) {
			if (vowels[ch]) {
				lastv[i] = ch - 'a' + 1;
				len[i]++;
			}
		}
		val[i].first = len[i] * 100 + lastv[i];
		val[i].second = i;
	}
	sort(val, val + n);

	vector<PII> eqv, eq;
	for (int i = 1; i < n; i++) {
		if (val[i].first == val[i - 1].first) {
			int j = val[i].second, k = val[i - 1].second; 
			used[j] = used[k] = true;
			eqv.emplace_back(j, k);
			i++;
		}
	}

	int vlen = 0;
	for (int i = 0; i < n; i++) {
		if (!used[i]) {
			val[vlen++] = {len[i], i};
		}
	}
	sort(val, val + vlen);
	for (int i = 1; i < vlen; i++) {
		if (val[i].first == val[i - 1].first) {
			int j = val[i].second, k = val[i - 1].second; 
			used[j] = used[k] = true;
			eq.emplace_back(j, k);
			i++;
		}
	}
	if (eq.size() > eqv.size()) eq.resize(eqv.size());
	cout << (eq.size() + (eqv.size() - eq.size()) / 2) << endl;
	for (int i = 0; i < eq.size(); i++) {
		cout << words[eq[i].first] << ' ' << words[eqv[i].first] << '\n';
		cout << words[eq[i].second] << ' ' << words[eqv[i].second] << '\n';
	}
	for (int i = eq.size(); i + 1 < eqv.size(); i += 2) {
		cout << words[eqv[i].first] << ' ' << words[eqv[i + 1].first] << '\n';
		cout << words[eqv[i].second] << ' ' << words[eqv[i + 1].second] << '\n';
	}
	return 0;
}
