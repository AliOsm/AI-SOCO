#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define _o          printf("1\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod         1000000007
#define read()      freopen("in.txt","r",stdin)
#define write()     freopen("out.txt","w",stdout)

long long mem[45][45][45][45];
long long sum[45][45];
long long point[45][45][45][45];
char g[45][45];
long long n,m;

bool _is(long long xx,long long yy,long long x,long long y){
    long long ret=sum[x][y]+sum[xx][yy];
    ret-=sum[x][yy]+sum[xx][y];
    if(ret) return false;
    return true;
}


main(){
    long long q;
    scanf("%I64d %I64d %I64d",&n,&m,&q);
    fi(i,1,n) scanf("%s",g[i]);
    clr(sum);
    clr(mem);
    clr(point);
    fi(i,1,n) fi(j,1,m){
       sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];
       if(g[i][j-1]=='1') sum[i][j]++;
    }


    fi(i,1,n) fi(j,1,m) fd(ii,1,i) fd(jj,1,j){
       point[ii][jj][i][j]=point[ii+1][jj][i][j]+point[ii][jj+1][i][j];
       point[ii][jj][i][j]-=point[ii+1][jj+1][i][j];
       if(_is(ii-1,jj-1,i,j)) point[ii][jj][i][j]++;
    }


    fi(i,1,n) fi(j,1,m) fi(ii,i,n) fi(jj,j,m)
         mem[i][j][ii][jj]=mem[i][j][ii][jj-1]+mem[i][j][ii-1][jj]-mem[i][j][ii-1][jj-1]+point[i][j][ii][jj];

    long long a,b,x,y;

    while(q--){
        scanf("%I64d %I64d %I64d %I64d",&a,&b,&x,&y);
        printf("%I64d\n",mem[a][b][x][y]);
    }

    return 0;
}
