#include<iostream>
#include<stdio.h>
#include<cassert>
#include<cstring>
#include<time.h>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)1e4 + 10;
const LL INF = (LL)2e18;
int a[maxn],b[maxn];
LL mul(LL A, LL B) {
    if (A >= INF / B) return INF;
    return A * B;
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    int n,c; cin >> n >> c;
    if (c < n) {
        cout << 0 << endl;
        return 0;
    }
    c -= n;
    for (int i = 0; i < n; i++) {
        cin >> a[i] >> b[i];
    }
    int m = 0;
    for (int i = 0; i < n; i++) if (a[i] != 0) {
        a[m] = a[i]; b[m] = b[i]; m++;
    }
    if (m == 0) {
        if (c == 0) {
            cout << -1 << endl;
        } else {
            cout << 0 << endl;
        }
        return 0;
    }
    LL least = 0;
    for (int i = 0; i < m; i++) {
        least += a[i] / b[i];
    }
    if (least > c) {
        cout << 0 << endl;
        return 0;
    }
    LL lf = 0;
    LL rg = (LL)1e18;
    while(lf < rg - 1) {
        LL mm = (lf + rg) >> 1;
        LL sum = 0;
        for (int i = 0; i < m; i++) {
            LL mu = mul(a[i],mm);
            if (mu == INF) {
                sum = c + 1;
                break;
            }
            sum += mu / b[i];
            if (sum >= c) break;
        }
        if (sum >= c) {
            rg = mm;
        } else {
            lf = mm;
        }
    }
    LL sum = 0;
    for (int i = 0; i < m; i++) {
        sum += a[i] * rg / b[i];
    }
    if (sum > c) {
        cout << 0 << endl;
        return 0;
    }
    int res = (int)1e9 + 10;
    for (int i = 0; i < m; i++) {
        int ost = a[i] % b[i] * 1LL * (rg % b[i]) % b[i];
        res = min(res,1 + (b[i] - ost) / a[i] - ((b[i] - ost) % a[i] == 0));
    }
    cout << res << endl;
    return 0;
}
