#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int dp[51][51];

int n,m,k;

int dfs(int x,int y)
{
	int &ret=dp[x][y];
	if(x==1 && y==1) return ret=0;
	if(ret+1) return ret;
	if(x>k && y>k && !dfs(x-k,y-k)) return ret=1;
	if(x>1 && !dfs(x-1,y)) return ret=1;
	if(y>1 && !dfs(x,y-1)) return ret=1;
	return ret=0;
}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	memset(dp,-1,sizeof(dp));
	//for(int i=20;i>=1;i--,puts(""))
		//for(int j=20;j>=1;j--)
			//printf("%d ",dfs(i,j));
	int ca;
	for(scanf("%d%d",&ca,&k),k++;ca--;)
	{
		scanf("%d%d",&n,&m);
		int x=min(n,m);
		if(x%k==0) puts("+");
		else if(x/k%2==0 || k==2)
		{
			if((m^n)&1) puts("+");
			else puts("-");
		}
		else
		{
			if((m^n)&1) puts("-");
			else puts("+");
		}
	}
	return 0;
}
