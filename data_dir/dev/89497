#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int> ,null_type,less<pair<int,int> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
long long MOD = 1e9+7;
long long fastpow(long long x,long long k)
{

    if(!k)
        return 1;
    if(k & 1)
        return ((x * fastpow(x,k-1) % MOD) % MOD) % MOD;
    long long ans = fastpow(x,k/2);
    ans %= MOD;
    ans *= ans;
    ans %= MOD;
    return ans;
}
    long long n,k;
bool good(long long f)
{
    long long s = 1;
    long long toAdd = 0;
    while(f/s > 0)
        toAdd += f/s,s *= k;
    return toAdd >= n;
}
int main()
{

    cin >> n >> k;
    long long ans = (k-1)*n / k;
    while(!good(ans))
        ans++;
    cout << ans;
    return 0;
}
