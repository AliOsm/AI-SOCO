#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
typedef unsigned int uint;
#define INF 0x3f3f3f3f
#define eps 1e-10

const int MOD = 1e9+7;

int a, b, n;
LL ans, fac[1000010];

bool Check(int x) {
	while (x > 0) {
		if (x%10 != a && x%10 != b) return 0;
		x /= 10;
	}
	return 1;
}

LL Extgcd(LL a, LL b, LL &x, LL &y) {
	LL d;
	if (b != 0) {
		d = Extgcd(b, a%b, y, x);
		y -= a/b*x;
	}
	else {
		d = a;
		x = 1; y = 0;
	}
	return d;
}

LL Inverse(LL a) {
    LL x, y;
    Extgcd(a, MOD, x, y);
    return (x%MOD+MOD) % MOD;
}

LL Cal(int m, int n) {
	return fac[n] * Inverse(fac[m]) % MOD * Inverse(fac[n-m]) % MOD;
}

int main() {
	fac[0] = 1;
	for (int i = 1; i <= 1000000; i++)
		fac[i] = fac[i-1] * i % MOD;
	scanf("%d%d%d", &a, &b, &n);
	ans = 0;
	for (int i = 0; i <= n; i++)
		if (Check(a*i+b*(n-i))) ans = (ans + Cal(i, n)) % MOD;
	printf("%lld\n", ans);
	return 0;
}
