#include <bits/stdc++.h>
#define pb push_back
#define ll long long 
#define MAX(a, b, c) max(max(a, b),c)
#define MIN(a,b, c) min(min(a, b),c) 
#define mod 1000000007
using namespace std;
ll dp[2][2]={{1, 1}, {1, 0}};
ll unit[2][2]={{1, 1}, {1, 0}};
void multiply(ll a[2][2], ll b[2][2]){
	ll c[2][2];
	c[0][0]=(a[0][0]*b[0][0]+a[0][1]*b[1][0])%mod;
	c[0][1]=(a[0][0]*b[0][1]+a[0][1]*b[1][1])%mod;
	c[1][0]=(a[1][0]*b[0][0]+a[1][1]*b[1][0])%mod;
	c[1][1]=(a[1][0]*b[0][1]+a[1][1]*b[1][1])%mod;
	for (int i=0; i<2; i++){
		for(int j=0; j<2; j++) dp[i][j]=c[i][j];
	}
}

ll fib(ll n){
	if (n==1) return dp[0][0];
	
	multiply(dp, dp);
	if (n%2){
		multiply(dp, unit);
		n--;
	}
	for (int i=0; i<2; i++){
		for(int j=0; j<2; j++)unit[i][j]=dp[i][j];
	}
	return fib(n/2);
}




int main(){
	ios::sync_with_stdio(0);
	cin.tie(0); int n;
	string s;
	cin>>n>>s;
	int summ=0;
	for(int i=0; i<s.length(); i++) summ+=s[i]-'0';
	if (summ>=n) cout<<0;
	else{
		sort(s.begin(), s.end());
		int i=0;
		int cnt=0;
		while(i<s.length() && summ<n){
			summ+=(9-s[i]+'0');
			if (s[i]!='9') cnt++;
			i++;
		}
		cout<<cnt;
	}
}
	
	
	/*
	int t; ll n;
	cin>>t;
	while(t--){
		cin>>n;
		cout<<fib(n+1)<<'\n';
		for (int i=0; i<2; i++){
			for(int j=0; j<2; j++) dp[i][j]=1, unit[i][j]=1;
		}
		dp[1][1]=0; unit[1][1]=0;
	}
}

	
	
	/*string a, b;
	cin>>a>>b;
	sort(a.begin(),a.end());

	
	
	if (a.length()<b.length()){
		for(int i=a.length()-1; i>=0; i--) cout<<a[i];
		return 0;
	}
	do {
		bool ok=true;
		bool br=false;
		int i=0, j=b.length()-1;
		while(i<b.length()){
			if (a[j]<b[i]) br=true;
			if (a[j]>b[i]) ok=false; break;
			i++; j--;
		}
		
		if (br|| ok) {
			reverse(a.begin(), a.end());
			cout<<a;break;
		}
	}
	while (next_permutation(a.begin(),a.end()));
	
}
	/*
	string s;
	for(int i=a.length()-1; i>=0; i--){
		s+=a[i];
	}
	bool fine=false;
	for(int i =0; i<b.length(); i++){
		if (s[i]-'0'>b[i]-'0'){
			bool ok=false;
			for(int k=0; k<i; k++) {
				if (s[k]-'0'<b[k]-'0') {
				ok=true;break;
			}}
			if(ok) continue;
			
			for(int j=i+1; j<b.length(); j++){
				if (s[j]-'0'<=b[i]-'0'){
					ok=true;
					swap(s[i], s[j]);
					break;
				}
			}
			if (!ok){
				int t=0;
				while(b[t]==s[t]) t++;
				t--;
				while(!ok){
					
					
				for(int j=t+1; j<b.length(); j++){
					if (s[j]-'0'<s[t]-'0'){
						swap(s[t], s[j]);ok=true; break;
					}
				}
				t--;
			}
		}
	}
}
	cout<<s;
}
/*	
	while(a.length()){
		for(int i=a.length()-1; i>=0; i--){
			if (ok){
				if (a[i]-'0'<=b[j]-'0'){
					s+=a[i];
					
					ok=(a[i]-'0'==b[j]-'0');
					a.erase(i, 1);
					break;
				}
			}
			else {
				for(int i=a.length()-1; i>=0; i--) {
					s+=a[i];
				}
				cout<<s;
				return 0;
				break;
			}
			
		}
		j++;
	}
	cout<<s;
}
	
/*	
	int n;
	cin>>n;
	vector<pair<int, int> >arr(n);
	for(int i=0; i<n; i++) cin>>arr[i].first>>arr[i].second;
	vector<vector<int> >dp(2, vector<int>(3));
	dp[0][0]=0, dp[0][1]=1, dp[0][2]=(arr[1].first-arr[0].first>arr[0].second || n==1);
	for(int i=1; i<n; i++ ){
		dp[1][0]=MAX(dp[0][0], dp[0][1], dp[0][2]);
		dp[1][1]=MAX(dp[0][0], dp[0][1], (arr[i-1].first+arr[i-1].second<arr[i].first-arr[i].second?dp[0][2]:-1)) +(arr[i].first-arr[i-1].first>arr[i].second);
		dp[1][2]=MAX(dp[0][0], dp[0][1], dp[0][2]) + (arr[i+1].first-arr[i].first>arr[i].second || i==n-1);
		dp[0]=dp[1];
	}
	cout<<MAX(dp[0][0], dp[0][1], dp[0][2]);
}
	
	
/*	
	int n;
	cin>>n;
	int arr[n];
	for(int i=0; i<n; i++)cin>>arr[i];
	vector<vector<int> >dp(n, vector<int>(3));
	dp[0][0]=1, dp[0][1]=!(arr[0]==1 || arr[0]==3), dp[0][2]=!(arr[0]==2 || arr[0]==3);
	for(int i=1; i<n; i++){
		dp[i][0]=MIN(dp[i-1][0], dp[i-1][1], dp[i-1][2])+1;
		dp[i][1]=MIN(dp[i-1][0], dp[i-1][2], arr[i]==0?dp[i-1][1]:INT_MAX)+!(arr[i]==1 || arr[i]==3);
		dp[i][2]=MIN(dp[i-1][0], dp[i-1][1], arr[i]==0?dp[i-1][2]:INT_MAX)+!(arr[i]==2 || arr[i]==3);
	}
	cout<<MIN(dp[n-1][0], dp[n-1][1], dp[n-1][2]);
}*/
