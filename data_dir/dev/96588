#include <bits/stdc++.h>

using namespace std;

const int N = 1e9 + 5;

int n, g[] = {0, 1, 2, 1, 4, 3, 2, 1, 5, 6, 2, 1, 8, 7, 5, 9, 8, 7, 3, 4, 7, 4, 2, 1, 10, 9, 3, 6, 11, 12, 14};
int vis[35000], ans, tmp;
map<int, int> dp;

int solve(int mask){
    if(!mask)
        return 0;
    if(dp.count(mask))
        return dp[mask];
    dp[mask] = 0;
    set<int> s;
    for(int i = 0; i < 30; i++){
        if(!((mask >> i) & 1)) continue;
        int nm = mask;
        for(int j = i; j < 30; j += i + 1)
            if((mask >> j) & 1)
             nm ^= 1 << j;
        s.insert(solve(nm));
    }
    while(s.count(dp[mask]))
        ++dp[mask];
    return dp[mask];
}

int main()
{
    /**
    freopen("o.txt", "w", stdout);
    g[1] = 1;
    cout << "{0, 1";
    for(int i = 2; i <= 30; i++){
        g[i] = solve((1 << i) - 1);
        cout << ", " << g[i];
    }
    cout << "}";
    **/
    cin >> n;
    tmp = n;
    for(int i = 2; i * i <= n; i++){
        if(vis[i]) continue;
        int sz = 0;
        for(long long j = i; j <= n; j *= i){
            if(j * j <= n)
                vis[j] = 1;
            ++sz;
            --tmp;
        }
        ans ^= g[sz];
    }
    ans ^= tmp & 1;
    puts(ans ? "Vasya" : "Petya");
    return 0;
}
