#include <bits/stdc++.h>

using namespace std;

#define rep(i,a,n) for(int (i)=(a);(i)<(n);++(i))
#define per(i,a,n) for(int (i)=(n)-1;(i)>=(a);--(i))
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define SZ(x) (x).size()
#define all(x) (x).begin(),x.end()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<pii> vpii;

template <typename T>
T getint(){
    T x=0,p=1;
    char ch;
    do {ch=getchar();}while(ch<=' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return p==1?x:-x;
}

template <typename T1, typename T2> bool umin(T1 &x, const T2&y){if(x>y){x=y;return true;} return false;}
template <typename T1, typename T2> bool umax(T1 &x, const T2&y){if(x<y){x=y;return true;} return false;}

const int maxn=(int)1e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

bool canwin[maxn];
bool canlose[maxn];

int nxt[maxn][26];
int sz=1;

void add(string s){
    int v=1;
    rep(i,0,s.length()){
        if(nxt[v][s[i]-'a']==0)nxt[v][s[i]-'a']=++sz;
        v=nxt[v][s[i]-'a'];
    }
}

void dfs(int v){
    canwin[v]=false;
    bool any=false;
    rep(i,0,26){
        int x=nxt[v][i];
        if(x==0)continue;
        any=true;
        dfs(x);
        if(!canwin[x])canwin[v]=true;
        if(!canlose[x])canlose[v]=true;
    }
    canlose[v]|=!any;
}

int main() {

   // freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);

    int n,k;
    cin>>n>>k;
    rep(i,0,n){
        string s;
        cin>>s;
        add(s);
    }

    dfs(1);
    if(!canwin[1])cout<<"Second"<<endl;
    else if(canlose[1])cout<<"First"<<endl;
    else if(k%2==1)cout<<"First"<<endl;
    else cout<<"Second"<<endl;
    return 0;
}
