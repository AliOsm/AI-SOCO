#include <iostream>
#include <bits/stdc++.h>
using namespace std;

priority_queue <pair <long long, int>> q;
vector <pair <int, int>> adia[100010];
bool flour[100010];
long long best[100010];

int main()
{
    ios_base :: sync_with_stdio(0);
    cin.tie(0);

    int n, m, a, b, l, k, x;
    cin >> n >> m >> k;

    while (m--) {
        cin >> a >> b >> l;
        adia[a].push_back({ b, l });
        adia[b].push_back({ a, l });
    }

    while (k--) {
        cin >> x;
        flour[x] = 1;
        q.push({ 0, x });
        best[x] = -1;
    }

    while (!q.empty()) {
        x = q.top().second;
        long long c(q.top().first);
        q.pop();
        if (!flour[x]) {
            cout << -c;
            return 0;
        }
        for (auto i : adia[x]) {
            if (!best[i.first] || best[i.first] > -c + i.second) {
                best[i.first] = -c + i.second;
                q.push({ c - i.second, i.first });
            }
        }
    }

    cout << -1;
    return 0;
}
