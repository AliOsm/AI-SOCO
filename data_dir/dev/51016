#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
#include<queue>
#include<sstream>
#include<list>
#include<bitset>
#include<ctime>
#include <cstdio>
#include <memory.h>
using namespace std;
typedef long long ll;
const int inf = 1000000000;
const int mod = 1000000007;
const int N = 100005;
int a[55];
int main(){
    int n;
    ll cnt;
    cin >> n >> cnt;
    for(int i = 1; i <= n; ++i){
        a[i] = i;
    }
    int ans = 0;
    do{
        int cur_ans = 0;
        for(int i = 1; i <= n; ++i){
            for(int j = i; j <= n; ++j){
                int mn = n;
                for(int k = i; k <= j; ++k){
                    mn = min(mn, a[k]);
                }
                cur_ans += mn;
            }
        }
        ans = max(ans, cur_ans);
    }while(next_permutation(a + 1, a + n + 1));
    //for(int i = 1; i <= n; ++i) a[i] = i;
    int cn = 0;
    do{
        int cur_ans = 0;
        for(int i = 1; i <= n; ++i){
            for(int j = i; j <= n; ++j){
                int mn = n;
                for(int k = i; k <= j; ++k){
                    mn = min(mn, a[k]);
                }
                cur_ans += mn;
            }
        }
        if(cur_ans == ans) cn++;
        if(cn == cnt){
            for(int i = 1; i <= n; ++i){
                cout << a[i] << " ";
            }
            cout << endl;
            return 0;
        }
        /*if(cur_ans == ans){
            for(int i = 1; i <= n; ++i){
                cout << a[i] << " ";
            }
            cout << endl;
        }*/
    }while(next_permutation(a + 1, a + n + 1));

    return 0;
}
