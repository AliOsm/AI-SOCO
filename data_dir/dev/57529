#include <bits/stdc++.h>

using namespace std;

#define endl           '\n'
#define all(x)         x.begin(), x.end()
#define rall(x)        x.rbegin(), x.rend()
#define mem(x, y)      memset(x, y, sizeof x)

template <typename T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <typename T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <typename T> inline void umax(T &a, T b) {a = a > b ? a : b;}

const int N = (int) 1e5 + 5;
const int INF = (int) 1e9 + 7;
const long long MOD = (long long) 1e9 + 7;

double res = 0.0;
vector <int> g[N];
int nd, dis, dep[N];

void dfs(int u, int p, double pro) {
    dep[u] = dep[p] + 1;
    if (g[u].size() == 1 and p) {
        res += 1.0 * (dep[u] - 1) * pro;
        return;
    }
    int sz = g[u].size();
    if (p) sz--;
    double nextPro = pro / (1.0 * sz);
    for (int i = 0; i < g[u].size(); i++) {
        int v = g[u][i];
        if (v != p) dfs(v, u, nextPro);
    }
}

int main() {
    int n; scanf("%d", &n);
    if (n == 1) return !printf("0\n");
    for (int i = 1; i < n; i++) {
        int u, v;
        scanf("%d%d", &u, &v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dfs(1, 0, 1.0);
    printf("%.10f\n", res);
    return 0;
}