#include<bits/stdc++.h>
 
#define X first
#define Y second
#define eb push_back
#define siz(a) int(a.size())
#define endl "\n"
 
using namespace std;

#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template <typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
	const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
 
typedef long long int ll;
typedef vector < int > vi;
typedef vector < ll > vll;
 
const int mod=1e9+7;
const int maxn=1e6+5;
 
/*	finding inverse upto n
 * for i in xrange(2, N):
    ifc[i] = -(mod / i) * ifc[mod % i] % mod
 * 
*/
ll power(ll base, ll exp, ll mod){ll res = 1; while(exp){if(exp%2)res*=base;base*=base;res%=mod;base%=mod;exp/=2;}return res;}

int arr[maxn], mp[maxn];
vi v;

int main(){
	ios_base::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);
	int n;
	cin >> n;

	for(int i = 1; i<=n; i++){
		cin >> arr[i];
		mp[arr[i]] = 1;
	}

	for(int i = n;i>0; i--){
		if(!mp[i]){
			v.eb(i);
		}
	}
	int j = 0;
	int size = siz(v)-1;
	int pos = 0;
	for(int i = 1; i<=n; i++){
		if(!arr[i]){
			if(!pos){
				pos = i;
			}
			if(v[j] == i){
				if(j == size){
					swap(arr[pos], arr[i]);
					arr[pos] = v[size];
				} else {
					arr[i] = v[size];	
				}
				size--;
				
			} else{
				arr[i] = v[j];
				j++;
			}
		}
	}

	for(int i = 1; i<=n; i++){
		// assert(i != arr[i]);
		cout << arr[i] << " ";
	}

	return 0;
}
