#include <stdio.h>

int md;

int s(long long n) {
	return (n % 2 == 0 ? (n / 2 % md) * ((n + 1) % md) : (n % md) * ((n + 1) / 2 % md)) % md;
}

void solve(long long n, long long k, long long a, int *sum, int *cnt) {
	int sum0, cnt0, sum1, cnt1;

	if (k <= 0 || a <= 0)
		*sum = *cnt = 0;
	else if (k >= n) {
		if (a > n)
			a = n;
		*sum = s(a), *cnt = a % md;
	} else {
		solve((n + 1) / 2, k, (a + 1) / 2, &sum0, &cnt0);
		solve(n / 2, k - (n + 1) / 2, a / 2, &sum1, &cnt1);
		*sum = ((long long) sum0 * 2 - cnt0 + md + sum1 * 2) % md;
		*cnt = (cnt0 + cnt1) % md;
	}
}

int main() {
	long long n;
	int m;

	scanf("%lld%d%d", &n, &m, &md);
	while (m--) {
		long long l, r, a, b;
		int sum, cnt, ans;

		scanf("%lld%lld%lld%lld", &l, &r, &a, &b), l--, a--;
		ans = 0;
		solve(n, r, b, &sum, &cnt), ans = (ans + sum) % md;
		solve(n, r, a, &sum, &cnt), ans = (ans - sum + md) % md;
		solve(n, l, b, &sum, &cnt), ans = (ans - sum + md) % md;
		solve(n, l, a, &sum, &cnt), ans = (ans + sum) % md;
		printf("%d\n", ans);
	}
	return 0;
}
