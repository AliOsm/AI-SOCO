#include <bits/stdc++.h>
using namespace std;

int n, m, big = 0, small = 1e5+5, curr = 0;;
long long res = 0;
unordered_set <int> div1;
unordered_set <int> div2;
int main()
{
    cin >> n >> m;
    bool added[n+1];
    memset(added, false, sizeof(added));
    if (m == 0){
        cout << n-1 << endl;
        goto ret;
    }
    for (int i = 0; i < m; i++){
        int one, two;
        cin >> one >> two;
        if (two < one){
            int temp = one;
            one = two;
            two = temp;
        }
        div1.insert(two);
        div2.insert(one);
        added[one] = true;
        added[two] = true;
        big = max(big, one);
        small = min(small,two);
    }

    if (big > small){
        cout << 0 << endl;
        goto ret;
    }
    for (int i = 1; i < n+1; i++){
        if (!added[i]){
            if (i >= big && i <= small){
                curr ++;
                continue;
            }
        }
    }
    res += (curr+1);
    for (int i = 0; i < n+1; i++){
        if (div1.find(i) != div1.end() && div2.find(i) != div2.end()){
            cout << 0 << endl;
            goto ret;
        }
    }
    cout << res << endl;
    ret:
    return 0;
}
