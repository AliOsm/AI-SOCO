#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 5;

int n,parent[N],w[N],ans;
pair<int,int> a[N];
void make_set(int v){

    parent[v] = v;
    w[v] = 1;
}
int find_set(int v){

    if (v == parent[v]) return v;
    return parent[v] = find_set(parent[v]);
}
void union_sets(int a,int b){


    a = find_set(a);
    b = find_set(b);
    if (w[a] < w[b]) swap(a,b);
    if (a != b)
        parent[b] = a;
    w[a] += w[b];
}

int main(){



    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;

    for (int i = 1;i <= n;i++){
        cin >> a[i].first >> a[i].second;
        make_set(i);
    }
    for (int i = 1;i <= n;i++){
        for (int j = i + 1;j <= n;j++){

            if (i == j) continue;
            if (a[i].first == a[j].first || a[i].second == a[j].second)
                if (find_set(i) != find_set(j)){
                    union_sets(i,j);
                    ++ans;
                }
        }
    }
    cout << n - ans - 1;

}
