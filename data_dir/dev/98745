#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
#include<queue>
#include<sstream>
#include<list>
#include<bitset>
#include<ctime>
using namespace std;

typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())
const int inf = 1000000000;
const int MOD = 1000000007;
const double pi=acos(-1.0);

Int f[22];
int n;

Int binpw(Int x, int times) {
	Int ans=1;
	while(times) {
		if(times&1) ans=ans*x % MOD;
		x=x*x%MOD;
		times/=2;
	}
	return ans;
}

Int fact[33], ifact[33];

Int get(Int s) {
	Int ans=1;
	Int j=(s+1)%MOD;
	for(Int i=s+1; i<s+n; ++i) {
		if(i%MOD==0) return 0;
		ans=ans*j % MOD;
		++j;
	}
	ans=ans*ifact[n-1] % MOD;
	return ans;
}

int main() {
	//freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
	//freopen("magic.in","r",stdin);freopen("magic.out","w",stdout);
	fact[0]=ifact[0]=1;
	FOR(i,1,22) {
		fact[i]=i*fact[i-1] % MOD;
		ifact[i]=binpw(fact[i], MOD-2);
	}

	Int s;
	cin>>n>>s;
	FOR(i,0,n-1) cin>>f[i];

	Int ans=0;
	FOR(mask,0,(1<<n)-1) {
		int bits=0;
		int m=mask;
		while(m) {
			bits+=m%2;
			m/=2;
		}

		Int ss=s;
		FOR(i,0,n-1) if(mask&(1<<i)) ss-=f[i]+1;
		if(ss<0) continue;

		if(bits%2==0) {
			ans+=get(ss);
			if(ans>=MOD) ans-=MOD;
		}else {
			ans-=get(ss);
			if(ans<0) ans+=MOD;
		}
	}

	cout<<ans<<endl;
}