#include <functional>
#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <stdio.h>
#include <cstring>
#include <cassert>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

using namespace std;

typedef long long ll;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxN = (int)5e2 + 10;
const int INF = (int)1e9;
const int mod = (int)1e9 + 7;
const ll LLINF = (ll)1e18;

typedef vector < vector < char > > vectors;

char rev(char x) {
    if (x == '+') return '*';
    return '+';
}

vectors build(int k) {
    vectors ret(1 << k, vector <char>(1 << k, '?'));
    if (k == 0) {
        ret[0][0] = '*';
        return ret;
    }
    vectors prev = build(k - 1);
    int prevsz = (1 << k) / 2;
    for(int i = 0; i < prevsz; ++i) {
        for (int j = 0; j < prevsz; ++j) {
            ret[i][2 * j] = ret[i][2 * j + 1] = prev[i][j];
        }
    }
    for (int j = prevsz - 1; j >= 0; --j) {
        for (int i = 0; i < prevsz; ++i) {
            ret[prevsz + i][2 * j + 1] = prev[i][j];
            ret[prevsz + i][2 * j] = rev(prev[i][j]);
        }
    }
    return ret;
}

int main() {

   // freopen(".in", "r", stdin);
  //  freopen(".out", "w", stdout);

    int k;
    cin >> k;
    vectors answer = build(k);
    for (int i = 0; i < answer.size(); ++i) {
        for (int j = 0; j < answer[i].size(); ++j) {
            putchar(answer[i][j]);
        }
        putchar('\n');
    }
    return 0;
}
