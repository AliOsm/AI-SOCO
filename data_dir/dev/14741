/*
ID: hamed_51
PROG: ?
LANG: C++
*/

#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <deque>
#include <assert.h>
#include <ctime>
#include <bitset>
#include <numeric>
#include <complex>
using namespace std;

#if (_win32 || __win32__)
#define LLD "%i64d"
#else
#define LLD "%lld"
#endif

#define FOREACH(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
#define Size(n) ((int)(n).size())
#define all(n) (n).begin(), (n).end()
#define ll long long
#define pb push_back
#define error(x) cout << #x << " = " << x << endl;
#define ull unsigned long long
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pdd pair<double, double>
#define point complex<double>
//#define X real()
//#define Y imag()
#define X first
#define Y second
#define EPS 1e-13
#define endl "\n"

inline void read(register int *n) {
	register char c; *n = 0;
	do { c = getchar(); } while (c < '0' || c > '9');
	do { *n = c-'0'+*n*10; c = getchar(); } while (c >= '0' && c <= '9');
}

const int MAXN = 3*10000*10000;

bitset<MAXN/4+100> p;

int main() {
	ios::sync_with_stdio(false);
	p.set();
	for (int i = 3; i*i <= MAXN; i+=2) {
		bool bad = false;
		for (int j = 3; j <= 1000 && j < i; j += 2) if (i%j == 0) bad = true;
		if (bad) continue;
		int st = 2*i;
		while (st%4 != 1) st += i;
		int add = 4*i;
		for (int j = st; j <= MAXN; j += add)
			p[j>>2] = false;
	}
	p[0] = false;
	int L, R;
	cin >> L >> R;
	int tot = 0;
	for (int i = max(0, L/4-3); i <= (R+10)/4; i++) {
		if (p[i] && L <= 4*i+1 && 4*i+1 <= R) tot++;
		//cout << 4*i+1 << endl;
	}
	if (L <= 2 && 2 <= R) tot++;
	cout << tot << endl;
	return 0;
}
