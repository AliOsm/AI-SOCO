#include<bits/stdc++.h>

using namespace std;
#define endl "\n"
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
#define pll pair<ll,ll>
#define ff first.first
#define fs first.second
typedef long long ll;
typedef unsigned long long ull;

const ll mod = 1e16+371;
//const ll mod = 1e12+193;

const double PI = acos(-1);
const ll INF = 1e18;
const ll MAX=1e5+10, N=1e6;
//const int lim=1<<18;
//const ll mod = 100000000 ;

struct Node{
	Node*nxt[2];
	int zero,one;
	Node(){
		memset(nxt,0,sizeof nxt);
		zero=one=0;
	}
};

void insert(Node*cur,ll a){
	for(int i=31;i>=0;i--){
		if(a&(1<<i)){
														   	//			cerr<<a<<" has power of"<<i<<endl;
			if(cur->nxt[1]==NULL)
				cur->nxt[1]=new Node();
			                                                 //			cerr<<i<<" "<<cur->one<<" "<<cur->zero<<endl;
			cur->one++;
			cur=cur->nxt[1];
		}
		else{
			 	 	 	 	 	 	 	 	 	 	 	 	 //			cerr<<a<<" dont have a power of"<<i<<endl;
			if(cur->nxt[0]==NULL){
				cur->nxt[0]=new Node();
															//				cerr<<"was null"<<endl;
			}
			                                                //			cerr<<i<<" "<<cur->one<<" "<<cur->zero<<endl;
			cur->zero++;
			cur=cur->nxt[0];
		}
	}
}

ll get(Node*cur,ll a,ll k,int i){
//	cerr<<"i "<<i<<endl;
	if(i==0){
		if(k&(1<<i)){
			if(a&(1<<i))
				return cur->zero;
			return cur->one;
		}
		return cur->one+cur->zero;
	}
	ll ret=0;
	if(k&(1<<i)){
		if((a&(1<<i)) && cur->nxt[0]!=NULL){
			ret+=get(cur->nxt[0],a,k,i-1);
//			cerr<<i<<" k=1, a=1"<<endl;
		}
		else if(!(a&(1<<i)) && cur->nxt[1]!=NULL){
			ret+=get(cur->nxt[1],a,k,i-1);
//			cerr<<i<<" k=1, a=0"<<endl;
		}
//		else
//			cerr<<i<<" neither"<<endl;
	}
	else{
		if(a&(1<<i)){
//			cerr<<i<<" k=0, a=1"<<endl;
//			cerr<<"zero "<<cur->zero<<endl;
			ret+=cur->zero;
			if(cur->nxt[1]!=NULL)
				ret+=get(cur->nxt[1],a,k,i-1);
		}
		else{
			ret+=cur->one;
			if(cur->nxt[0]!=NULL)
				ret+=get(cur->nxt[0],a,k,i-1);
//			cerr<<i<<" k=0, a=0"<<endl;
		}
	}
//	cerr<<"ret "<<ret<<endl;
	return ret;
}
/*
5 5
8 4 7 4 3
Me 5
Stress 8
1 1
1 2
1 3
1 4
1 5
2 4
3 3
4 5
*/
int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
//	srand(time(0));

	int n,k;
	cin >> n >>k;
	ll ans=0;
	Node*root=new Node();
	insert(root,0);
	ll a=0;
	for(int i=0;i<n;i++){
		ll x; cin>>x;
		a^=x;
		insert(root,a);
//		cerr<<a<<endl;
		ans+=get(root,a,k,31);
//		cerr<<"ans "<<ans<<endl;
//		cerr<<"------------------------------\n\n";
	}
	cout<<ans<<endl;

	return 0;
}
