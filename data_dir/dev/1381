using namespace std;
#include<bits/stdc++.h>
#define debug(x) clog<<#x<<" = "<<x<<'\n'
#define ll long long
#define pll pair<ll,ll>
#define pii pair<int,int>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define sz(c) ((int)c.size())
#define all(c) (c).begin(),(c).end()
#define MASK(i) (1LL<<(i))
#define BIT(x,i) (((x)>>(i))&1)
#define fn "844C"  /// ___FILE_NAME_HERE___
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define __rep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)

template <class T,class U>
void maximize(T &x,U y)
{
    if(x < y)x=y;
}
template <class T,class U>
void minimize(T &x,U y)
{
    if(x > y)x=y;
}
template <class T>
T Abs(T x)
{
    return (x < 0 ? -x : x);
}
template <class T>
T safe_sqrt(T x)
{
    return sqrt(max(x,(T)0));
}
template <class T,class U,class V>
T addmod(T x,U k,V MOD)
{
    return ((x+k)%MOD + MOD)%MOD;
}
template <class T,class U,class V>
T submod(T x,U k,V MOD)
{
    return ((x-k)%MOD + MOD)%MOD;
}
template <class T,class U,class V>
T mul(T x,U y,V MOD)
{
    return (ll)x*y%MOD;
}
/*------------------------------------------END_OF_TEMPLATE------------------------------------------*/

namespace task{

const int N=1e5+5;
int a[N];
int n;
vector <int> group[N];
bool vis[N];

void solve()
{
    while(~scanf("%d",&n))
    {
        for(int i=1;i<=n;++i)
            scanf("%d",a+i);
        set <pii> st;
        for(int i=1;i<=n;++i)st.insert(mp(a[i],i));
        int k=0;
        while(!st.empty())
            a[st.begin()->sec]=++k,st.erase(st.begin());
        int cnt=0;
        for(int i=1;i<=n;++i)
        {
            if(a[i]==i)group[++cnt].pb(i);
            else if(!vis[i])
            {
                ++cnt;
                int j=i;
                while(!vis[j])
                {
                    vis[j]=true;
                    group[cnt].pb(j);
                    j=a[j];
                }
            }
        }
        printf("%d\n",cnt);
        for(int i=1;i<=cnt;++i,printf("\n"))
        {
            printf("%d ",sz(group[i]));
            for(auto u : group[i])
              printf("%d ",u);
        }
        for(int i=1;i<=cnt;++i)group[i].clear();
        memset(vis,false,sizeof(vis));
    }
}}

int main(void)
{
    #ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
    #endif // ONLINE_JUDGE
    task::solve();
}
