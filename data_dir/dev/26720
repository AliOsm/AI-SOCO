using namespace std;
#include<bits/stdc++.h>
typedef int   LL;
typedef long long   ll;
typedef   pair<LL,LL>  PII;
typedef   vector< PII > VPII;
typedef   vector<long long>   VI;
typedef   map<string,LL>  MSI;
typedef   map<LL,LL>  MII;
///Print
#define R(n)       scanf("%lld", &n)
#define P(a)  printf("%lld\n",a)
#define NL printf("\n")
#define case(no) printf("Case %lld: ",++no)
#define casenl(no) printf("Case %lld:\n",++no)
///LOOP
#define rep(x,n) for(__typeof(n) x=0;x<(n);x++)
#define reps(i,x) for(int  i=0;i<(x.size());i++)
#define repp(x,n) for(__typeof(n) x=1;x<=(n);x++)
#define FORSTL(x,n) for(__typeof(n.begin()) x=n.begin();x!=n.end();x++)
///Shortcut
#define mem(ar,value) memset(ar,value,sizeof(ar))
#define all(x) x.begin(),x.end()
#define Unique(store) store.resize(unique(store.begin(),store.end())-store.begin())
#define len(s) s.size()
#define MP make_pair
#define PB push_back
#define FF first
#define SS second
///Min AND Max
#define MIN3(a,b,c) min(a,min(b,c))
#define MAX3(a,b,c) max(a,max(b,c))
#define EPS (1e-9)
#define PI acos(-1.0)
#define isEq(a,b) (fabs((a)-(b))<eps)
#define Fast ios_base::sync_with_stdio(false); cin.tie(false);
///DEBUG
#define D(x) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
#define DD(x,y) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
#define DDD(x,y,z) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" ="<<z<<endl;

#define READ freopen("input.txt","r",stdin)
#define WRITE freopen("output.txt","w",stdout)

///Gcd and Lcm
template<class T>T gcd(T a,T b){return b == 0 ? a : gcd(b, a % b);}
template<typename T>T lcm(T a, T b) {return a / gcd(a,b) * b;}
///Bigmod && Pow
template<class T>T my_pow(T n,T p){if(p==0)return 1;T x=my_pow(n,p/2);x=(x*x);if(p&1)x=(x*n);return x;} ///n to the power p
template<class T>T big_mod(T n,T p,T m){if(p==0)return (T)1;T x=big_mod(n,p/2,m);x=(x*x)%m;if(p&1)x=(x*n)%m;return x;}
///string to int
template <class T> T extract(string s, T ret) {stringstream ss(s); ss >> ret; return ret;}///
string itos(LL n){string s;while(n){s+=(n%10+48);n/=10;}reverse(all(s));return s;}
LL stoi(string s){LL n=0;rep(i,len(s))n=n*10+(s[i]-48);return n;}
struct info{LL x,y;string yy;}arr[100005];bool com(info a,info b){return (a.x>b.x) or (a.x==b.x and a.yy<b.yy);}
LL ar[300001],tree[1200001],tree1[1200001];
LL br[300003];
LL a=0,b=0,c=0,r=0,rr=0,res=0,n,m,t=0,ks=0,w;
string  s;



void insert(LL idx,LL st,LL end)
{
    if(st==end)
    {
        tree[idx]=ar[st];  return ;
    }


    LL mid=(st+end)>>1,L=idx*2,R=L+1;
    insert(L,st,mid);
    insert(R,mid+1,end);
    tree[idx]=max(tree[L],tree[R]);


    return ;
}





LL read(LL idx,LL st,LL end,LL i,LL j)
{
    if(st==i and end ==  j)
    {
       return tree[idx];
    }


    LL mid=(st+end)>>1,L=idx*2,R=L+1;


    if(j<=mid)  return  read(L,st,mid,i,j);
   else if(i>mid)  return  read(R,mid+1,end,i,j);
   else
   {
       LL aa=read(L,st,mid,i,mid);
       LL bb=read(R,mid+1,end,mid+1,j);

         return max(aa,bb);
   }



}






void insert1(LL idx,LL st,LL end)
{
    if(st==end)
    {
        tree1[idx]=br[st];  return ;
    }


    LL mid=(st+end)>>1,L=idx*2,R=L+1;
    insert1(L,st,mid);
    insert1(R,mid+1,end);
    tree1[idx]=min(tree1[L],tree1[R]);


    return ;
}







LL read1(LL idx,LL st,LL end,LL i,LL j)
{
    if(st==i and end ==  j)
    {
       return tree1[idx];
    }


    LL mid=(st+end)>>1,L=idx*2,R=L+1;


    if(j<=mid)  return  read1(L,st,mid,i,j);
   else if(i>mid)  return  read1(R,mid+1,end,i,j);
   else
   {
       LL aa=read1(L,st,mid,i,mid);
       LL bb=read1(R,mid+1,end,mid+1,j);

         return min(aa,bb);
   }



}



int main()
{
    Fast;


    cin>>n;

    repp(i,n)  cin>>ar[i];

    repp(i,n)  cin>>br[i];

    insert(1,1,n);
    insert1(1,1,n);


    long long int ans=0;


    repp(i,n)
    {
        LL lo=i,hi=n;

        LL r=0;


        //if(ar[i]==br[i])


        if(ar[i]<=br[i])
        while(lo<=hi)
        {
            LL mid=(lo+hi)>>1;
            LL aa=read(1,1,n,i,mid);
            LL bb=read1(1,1,n,i,mid);
            if(aa<=bb)
            {
                r=max(r,mid);
                lo=mid+1;
            }
            else   hi=mid-1;
        }

        if(r)  ans+=(r-i+1);


        lo=i,hi=n;

        r=0;



         if(ar[i]<br[i])

         while(lo<=hi)
        {
            LL mid=(lo+hi)>>1;
            LL aa=read(1,1,n,i,mid);
            LL bb=read1(1,1,n,i,mid);
            if(aa<bb)
            {
                r=max(r,mid);
                lo=mid+1;
            }
            else   hi=mid-1;
        }
        if(r)  ans=ans-(r-i+1);
    }

    cout<<ans;
  //  printf("%lld\n",ans);


   return 0;

}
