//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define F first
#define S second
#define _sz(x) (int)x.size()
#define pb push_back

using namespace std ;
using ll = long long ;
using ld = long double ;
using pii = pair <int , int> ;

const int N = 3e6 + 20, mod = 998244353;
int n, a[N];

int fac[N], ifac[N];

int mx, ans;
int sum, ptr;
int cnt[N];

inline int pw (int a, int b)
{
	int res = 1;
	while (b)
	{
		if (b & 1) res = 1ll * res * a % mod;
		a = 1ll * a * a % mod;
		b >>= 1;
	}
	return res;
}

inline int C (int n, int k)
{
	if (k < 0 || k > n) return 0;
	return 1ll * fac[n] * ifac[k] % mod * ifac[n - k] % mod;
}

inline void add (int &a, int b)
{
	a += b;
	if (a >= mod) a -= mod;
}

void pre ()
{
	fac[0] = 1;
	for (int i = 1; i < N; i++)
		fac[i] = 1ll * fac[i - 1] * i % mod;
	ifac[N - 1] = pw(fac[N - 1], mod - 2);
	for (int i = N - 2; i >= 0; i--)
		ifac[i] = 1ll * ifac[i + 1] * (i + 1) % mod;
}

int main(){
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

	pre();

	cin >> n;
	for (int i = 0; i < n; i++) cin >> a[i], mx = max(mx, a[i]);
	
	sort(a, a + n);

	for (int i = 0; i <= mx; i++)
	{
		sum += cnt[i % n];

		while (ptr < n && a[ptr] < i)
		{
			ptr++;
			sum++;
			cnt[i % n]++; 
		}

		if (sum > i) break;

		add(ans, C(i - sum + n - 1, n - 1));
		add(ans, mod - C(i - sum + ptr - 1, n - 1));
	}

	cout << ans << '\n';
}
