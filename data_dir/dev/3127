#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define endl '\n'
#define pb push_back
#define ff first
#define ff first
#define ss second
#define inf 4e18
#define mod 1000000007
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 100005
#define ll long long
bool isLucky(int x)
{
    while(x)
    {
        if(x % 10 != 4 && x % 10 != 7)
            return 0;
        x /= 10;
    }
    return 1;
}
vector<pair<int,int> > v[mx];
int dp[mx],sub[mx],dp2[mx];
void dfs(int x,int p)
{
    for(auto i : v[x])
    {
        if(i.ff == p)
            continue;
        dfs(i.ff,x);
        sub[x] += sub[i.ff];
        if(i.ss == 1)
        {
            dp[x] += sub[i.ff];
        }
        else dp[x] += dp[i.ff];
    }
    sub[x]++;
}
 
int n;
ll ans = 0;
ll NP2(ll x)
{
    return x * (x - 1);
}
void dfs2(int x,int p,int  w)
{
    if(w == 1)
    {
        dp2[x] += n - sub[x];
    }
    else
    {
        dp2[x] += dp2[p] + dp[p] - dp[x];
    }
    for(auto i : v[x])
    {
        if(i.ff == p)
            continue;
        dfs2(i.ff,x,i.ss);
    }
    ans += NP2(dp[x] + dp2[x]);
}
main()
{
    fast;
    cin >> n;
    fl(i,1,n)
    {
        int x,y,w;
        cin >> x >> y >> w;
        w = isLucky(w);
        v[x].pb({y,w});
        v[y].pb({x,w});
    }
    dfs(1,0);
    dp[0] = dp[1];
    dfs2(1,0,0);
    cout << ans;
}