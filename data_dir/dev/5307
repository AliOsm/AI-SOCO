#include <bits/stdc++.h>
using namespace std;
#define pb push_back

struct Solver
{
int n, m;
const static int MX=2E5+99;

vector<vector<int>> E;
vector<bool> visited;
vector<int> comp[2];

void read_input()
{
    cin >> n >> m;

    E=vector<vector<int>>(n+1);
    visited=vector<bool>(n+1, false);

    for(int i=0; i<m; i++)
    {
        int u, v;
        cin >> u >> v;
        E[u].pb(v);
        E[v].pb(u);
    }
}

void dfs(int curr, int d=0)
{
    if(visited[curr]) return;
    visited[curr]=true;
    comp[d%2].pb(curr);

    for(int next: E[curr])
    {
        dfs(next, d+1);
    }
}

vector<int> solve()
{
    dfs(1, 0);

    vector<int>& v = comp[0].size()<comp[1].size() ? comp[0] : comp[1];
    return v;
}
};


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr); cout.tie(nullptr);

    int t;
    cin >> t;
    for(int ttt=0; ttt<t; ttt++)
    {
        Solver S;
        S.read_input();

        auto res=S.solve();
        cout << res.size() << '\n';
        for(auto aa: res) cout << aa << ' ';
        cout << '\n';
    }

    return 0;
}
