#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <memory.h>
#include <deque>
#include <iomanip>
#include <utility>
#include <string>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf       
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define print(x) prf("%d\n", x.sz()); for (int i = 0; i < x.sz(); i++) prf("%d ", x[i]);
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i != end; i += move)
#define y1 awdaklg

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

int n, m;
char s[5005][5005];
int pos[5005][5005];  

int main()
{
	scf("%d%d", &n, &m);
	For(i, n)
		scf("%s", s[i]);
	For(i, n)
	{
		int last = -1;
		For(j, m)
		{
			if (s[i][j] == '1' && last == -1)
				last = j;
			if (s[i][j] == '0')
				last = (int)-1;
			pos[j][i] = last;
		}
	}
	For(i, m)
    	sort(pos[i], pos[i] + n);
    int ans = 0;
    For(j, m)                           
    {
    	int cnt = 0;
    	For(i, n)
			if (pos[j][i] != -1)
			{
				cnt++;
				ans = max(ans, abs(j - pos[j][i] + 1) * cnt);
			}
	}
	prf("%d\n", ans);
	return 0;
}			 	