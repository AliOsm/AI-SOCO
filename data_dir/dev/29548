#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=9223372036854775807;
const ll mod=998244353;
ll  MOD(ll  a,ll  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b,ll c)
{
    return max(c,max(a,b));
}
ll min3(ll a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;//%mod;
}
ll  power1(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod;
        y = y>>1;
        x = (x*x)%mod;
    }
    return res%mod;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x)
{
    return power1(x,mod-2);
}
vvi adj;
vvi dp;
vi deg;
vi visited;
void solve(int i,int cod)
{
    if(cod==1)
    {
        
    }
}
int main()
{
    fastio;
    int n;
    cin>>n;
    string str;
    cin>>str;
    vll an(n+1);
    for(int i=1;i<=n;i++)
    {
        cin>>an[i];
    }
    vector<vector<ll>> dp(n+1);
    for(int i=0;i<=n;i++)
    {
        dp[i].resize(4);
    }
    for(int i=1;i<=n;i++)
    {
        if(str[i-1]=='h')
        {
            dp[i][0]=dp[i-1][0]+an[i];
            dp[i][1]=min(dp[i-1][1],dp[i-1][0]);
            dp[i][2]=dp[i-1][2];
            dp[i][3]=dp[i-1][3];
            continue;
        }
        if(str[i-1]=='a')
        {
            dp[i][0]=dp[i-1][0];
            dp[i][1]=dp[i-1][1]+an[i];
            dp[i][2]=min(dp[i-1][2],dp[i-1][1]);
            dp[i][3]=dp[i-1][3];
            continue;
        }
        if(str[i-1]=='r')
        {
            dp[i][0]=dp[i-1][0];
            dp[i][1]=dp[i-1][1];
            dp[i][2]=dp[i-1][2]+an[i];
            dp[i][3]=min(dp[i-1][2],dp[i-1][3]);
            continue;
        }
        if(str[i-1]=='d')
        {
            dp[i][0]=dp[i-1][0];
            dp[i][1]=dp[i-1][1];
            dp[i][2]=dp[i-1][2];
            dp[i][3]=dp[i-1][3]+an[i];
            continue;
        }
        dp[i][0]=dp[i-1][0];
        dp[i][1]=dp[i-1][1];
        dp[i][2]=dp[i-1][2];
        dp[i][3]=dp[i-1][3];
        
    }
    ll ans=INF;
    for(int j=0;j<4;j++)
    {
        ans=min(dp[n][j],ans);
    }
    cout<<ans;
}
