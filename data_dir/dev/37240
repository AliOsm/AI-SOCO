#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> ii;
#define db(x) cout<<#x<<" = "<<x<<"\n";
#define fore(i,a,b) for(int i=a,ggdem=b;i<ggdem;i++)
#define FIN ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define SZ(a) ((int)(a).size())
#define ALL(a) a.begin(),a.end()
#define mset(a,b) memset(a,b,sizeof(a));
#define pb push_back
#define fst first
#define snd second
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());


const int N=3e5+15;
int n,m,a[N],dist[N];
vector<int>g[N],rev[N];

void dijkstra(int x){
	memset(dist,-1,sizeof(dist));
	priority_queue<ii>pq;
	dist[x]=0;
  pq.push({0,x});
	while(!pq.empty()){
		ii x=pq.top();pq.pop();
		if(dist[x.snd]!=-x.fst)continue;
    for(int y:rev[x.snd]) {
			if(dist[y]<0||dist[x.snd]+1<dist[y])
				dist[y]=dist[x.snd]+1,pq.push({-dist[y],y});
		}
	}
}

int main() {FIN;
  cin>>n>>m;
  fore(i,0,m) {
    int x,y;cin>>x>>y;x--,y--;
    g[x].pb(y);
    rev[y].pb(x);
  }
  int k;cin>>k;
  fore(i,0,k)cin>>a[i],a[i]--;
  dijkstra(a[k-1]);
  int l=0,r=0;
  fore(i,0,k-1) {
    int cost=dist[a[i+1]];
    if(cost+1!=dist[a[i]])l++,r++;
    else {
      for(int x:g[a[i]])if(x!=a[i+1] && dist[x]==cost){r++;break;}
    }
  }
  // cout<<"dist: ";fore(i,0,n)cout<<dist[i]<<" ";cout<<endl;
  cout<<l<<" "<<r<<endl;
}