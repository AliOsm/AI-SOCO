#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> 
//#include <ext/pb_ds/tree_policy.hpp>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define MOD 1000000007
#define DESPACITO 1000000000000000000
#define PI acos(-1)
#define ll long long
#define pb push_back
#define mp make_pair
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define double long double
 
using namespace std;
 
//using namespace __gnu_pbds;
//typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> pbds;

map<int,vector<int>>cnt;
map<int,int>m;
int n;
int arr[400001];

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    cin >> n;
    REP(i,1,n)
    {
        cin >> arr[i];    
        m[arr[i]]++;
    }
    for(auto it:m)
        cnt[it.second].pb(it.first);
    int sum = 0;
    int maxim = 0;
    int a = 0,b = 0;
    int other = m.size();
    REP(i,1,m.size())
    {
        if(cnt.find(i) != cnt.end())
        {
            other -= cnt[i].size();
            sum += (cnt[i].size()) * i;
        }
        int val = sum + other*i;
        int tempb = val/i;
        tempb = min(tempb,m.size());
        if(tempb*i > maxim && i<=tempb)
        {
            maxim = (tempb)*i;
            a = i;
            b = tempb;
        }
    }
    int ans[a][b];
    cout << (a*b) << "\n";
    cout << a << " " << b << "\n";
    memset(ans,-1,sizeof(ans));
    int ct = 0;
    auto it = cnt.rbegin();
    int i = 0,j = 0;
    while(ct < (a*b))
    {
        int no = min((*it).first,a);
        for(auto it2:(*it).second)
        {
            int ct1 = 0;
            while(ct1 < no && ct < (a*b))
            {
                ans[i][j] = it2;
                ct1++;
                ct++;
                if(ct == (a*b))
                    break;
                while(ans[(i+1)%a][(j+1)%b] != -1)
                    i = (i+1)%a;
                i = (i+1)%a;
                j = (j+1)%b;
            }
            if(ct == (a*b))
                break;
        }
        it++;
    }
    REP(i,0,a-1)
    {
        REP(j,0,b-1)
            cout << ans[i][j] << " ";
        cout << "\n";
    }
}
