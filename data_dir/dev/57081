//#include <unordered_set>
//#include <unordered_map> 
#include <functional>
#include <stdexcept>
#include <streambuf>
#include <exception>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <typeinfo>
#include <utility>
#include <complex>
#include <numeric>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <cstring>
#include <locale>
#include <memory>
#include <iosfwd>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <ios>
#include <new>
#include <set>
    
using namespace std;
     
#define F first
#define S second
#define lb lower_bound
#define ub upper_bound
#define pb push_back
#define pf push_front
#define ppb pop_back
#define mp make_pair
#define bbp __builtin_popcount
#define al 0x3F3F3F3F
#define sz(x) x.size()
#define all(x) x.begin(), x.end()
#define in insert
#define ppf pop_front
#define endl '\n'
#define resize(v) v.resize(unique(all(v)) - v.begin());
//#define int long long

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <int, ll> pil;
typedef pair < ll, int > pli;
typedef pair <double, double> pdd;
typedef pair <int, double> pid;
typedef pair <double, int> pdi;
typedef pair <ll, double> pld;
typedef pair <double, ll> pdl;
typedef pair <string, string> pss;    

const int mod = (int)1e9 + 7;
const int MAX_N = (int)2e5 + 123;
const int N = 1e6 + 123;                     
const int INF = al;           
const ll INFL = 3e18 + 1;
const double pi = acos(-1.0);
const double eps = 1e-9;
const int dx[] = {0, 0, 1, 0, -1};
const int dy[] = {0, 1, 0, -1, 0};

int n, m, a[11], b[11], c[11], d[11], c0, d0, dp[1001];

inline int gcd(int a, int b) {
	if (!b) return a;
    return gcd(b, a % b);                                               
}                                    

inline void boost() {
    ios_base :: sync_with_stdio(NULL);
    cin.tie(NULL), cout.tie(NULL);
}                                                                       

inline void Solve() {               
	boost();   
	cin >> n >> m >> c0 >> d0;                          
	for (int i = 1; i <= m; i ++) cin >> a[i] >> b[i] >> c[i] >> d[i];
	for (int i = 1; i <= m; i ++) 
		for (int l = n; l >= 0; l --) 
			for (int j = 1; j <= a[i] / b[i]; j ++) {
				if (l + c[i] * j > n) continue;
				dp[l + c[i] * j] = max(dp[l + c[i] * j], dp[l] + d[i] * j);
			}
	for (int l = n; l >= 0; l --) {
		for (int j = 1; j <= n / c0; j ++) {
			if (l + c0 * j > n) continue;
			dp[l + c0 * j] = max(dp[l + c0 * j], dp[l] + d0 * j);
		} 	
	}
	cout << *max_element(dp + 1, dp + n + 1); 
}
main () {
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);
	int tt = 1;          
	while (tt --) {
   	Solve();
   }
}