#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define sz(a) (lld)((a).size())
#define all(c) (c).begin(),(c).end()             
typedef long double ldb;
typedef long long lld;
const lld MOD = 1e9+7;
const lld INF = 1011111111;
const lld LLINF = 1000111000111000111LL;
const ldb EPS = 1e-10;
const ldb PI = 3.14159265358979323;
using namespace std;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
const lld N = 1200005;
vector<lld> l[N];
lld a[N],mk[N];
const lld offset = 500005;
int32_t main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    lld n,c;
    cin>>n>>c;
    rep(i,1,n+1) {
        cin>>a[i];
        mk[i] = mk[i-1] + (a[i]==c);
        lld diff = a[i] - c;
        l[diff + offset].pb(i); 
    }
    lld ans = mk[n], ini = mk[n];
    rep(i,0,N) {
        if(l[i].empty()) continue;
        if(i==offset) continue;
        lld k =sz(l[i]), m = LLINF;
        rep(j,0,k) {
            m = min(m, j-1-mk[l[i][j]-1]);
            ans = max(ans, ini + j - mk[l[i][j]] - m);
        }
    }
    cout<<ans;
    return 0;
}