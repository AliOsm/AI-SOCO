#include <bits/stdc++.h>
using namespace std;

const int n_ = 30001;
int n, d;
int cnt[n_];

int memo[n_][600];
int dp (int idx, int diff) {
	int &ret = memo[idx][diff];
	if (ret != -1)
		return ret;

	diff -= 300;
	int f = cnt[idx], s = cnt[idx], t = cnt[idx];
	if (idx + d + diff - 1 > idx && idx + d + diff - 1 < n_)
		f += dp(idx + d + diff - 1, (diff - 1) + 300);
	if (idx + d + diff < n_)
		s += dp(idx + d + diff, (diff) + 300);
	if (idx + d + diff + 1 < n_)
		t += dp(idx + d + diff + 1, (diff + 1) + 300);

	return ret = max(f, max(s, t));
}
int main() {
	scanf("%d %d", &n, &d);
	for (int i = 0; i < n; i++) {
		int x;
		scanf("%d", &x);
		cnt[x]++;
	}

	memset (memo, -1, sizeof memo);
	cout << dp(d, 300);
	return 0;
}