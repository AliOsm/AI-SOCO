#include "bits/stdc++.h"
using namespace std;
#define int long long
 
int dp[20][2][2];
string digit;

int digitDP(int idx, int can, int zero)
{
	if(idx == (int)digit.size())
		return 1;
	if(~dp[idx][can][zero])
		return dp[idx][can][zero];
	int num = digit[idx] - '0', ans = 0;
	for(int i = 0; i < 10; i++)
		if(can or i <= num)
			ans = max(ans, ((zero | i) ? i : 1) * digitDP(idx + 1, can or i < num, zero or i));
	return dp[idx][can][zero] = ans;
}

int32_t main()
{
    cin >> digit;
    memset(dp, -1, sizeof(dp));	
    cout << digitDP(0, 0, 0) << '\n';

    return 0;
}