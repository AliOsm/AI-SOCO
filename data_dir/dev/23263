/********************************************
*                                           *
*    Solved By : Bir Bahadur Khatri(B'ru)   *
*      Be Positive,be Happy.                *
*                                           *
*********************************************/

#define ff first
#define ss second
#define D double
#define sz size()
#define PB push_back
#define MP make_pair
#define SQR(n) (n*n)
#define CHR getchar()
#define NL printf("\n")
#include<bits/stdc++.h>
#define ULL unsigned LL
#define PI 2.0*acos(0.0)
#define LL long long int
#define S1(a) a=in<int>()
#define SL1(a) a=in<LL>()
#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define all(a) a.begin(),a.end()
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define S2(a,b) a=in<int>(),b=in<int>()
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define BitCnt(a) __builtin_popcountll(a)
#define MEM(a,val) memset(a,val,sizeof(a))
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define _cin ios_base::sync_with_stdio(0); cin.tie(0)
#define cp printf("***** here here here here *****\n");
#define trace1(x)                cerr << #x << ": " << x << endl;
#define InpOut freopen("A.in","r",stdin),freopen("A1.out","w",stdout)
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;
template <typename T> T in(){char ch;T n = 0;bool ng = false;while (1){ch = getchar();if (ch == '-'){ng = true;ch = getchar();break;}if (ch>='0' && ch<='9')     break;}while (1){n = n*10 + (ch - '0');ch = getchar();if (ch<'0' || ch>'9')   break;}return (ng?-n:n);}
template<typename T>inline T POW(T B,T P){ if(P==0) return 1; if(P&1) return B*POW(B,P-1);  else return SQR(POW(B,P/2));}
template<typename T>inline T Gcd(T a,T b){if(a<0)return Gcd(-a,b);if(b<0)return Gcd(a,-b);return (b==0)?a:Gcd(b,a%b);}
template<typename T>inline T Lcm(T a,T b) {if(a<0)return Lcm(-a,b);if(b<0)return Lcm(a,-b);return a*(b/Gcd(a,b));}
long long Bigmod(long long base, long long power, long long MOD){long long ret=1;while(power){if(power & 1)ret=(ret*base)%MOD;base=(base*base)%MOD;power>>=1;}return ret;}
bool isVowel(char ch){ ch=toupper(ch); if(ch=='A'||ch=='U'||ch=='I'||ch=='O'||ch=='E') return true; return false;}
template <typename T> LL isLeft(T a,T b,T c) {return(a.x-b.x)*(b.y-c.y)-(b.x-c.x)*(a.y-b.y);}
long long ModInverse(long long number, long long MOD){return Bigmod(number, MOD-2, MOD);}
bool isConst(char ch){if (isalpha(ch) && !isVowel(ch)) return true; return false;}
int toInt(string s)  { int sm; stringstream ss(s); ss>>sm; return sm; }
///**********************************************************//

#define MD1 1000000007ULL
#define MD2 1000000009ULL
#define MD3 1000000021ULL
#define BS1 10000019ULL
#define BS2 10000079ULL
#define BS3 10000103ULL
#define PUL pair<ULL,ULL>
#define PII pair<int,int>

///         0123456789
#define MX  1005
#define MOD 1000000007
#define INF 2000000000
#define EPS 1e-9


/// ==========================================////

int a[MX][MX];
int Id[MX][MX];
int Id1[MX][MX];
LL n,m,k;
LL dp[MX*MX+10];
LL dp1[MX*MX+10];
int Ln;

inline int Is(int x,int y) {
    if(x>=1&&x<=n&&y>=1&&y<=m) return 0;
    return 1;
}

inline void Rec1(int x,int y) {
    if(Is(x,y)) return;
    Id1[x][y]=Ln;
    dp1[Ln++]=a[x][y];
    Rec1(x+1,y+1);
}

inline void Rec(int x,int y) {
    if(Is(x,y)) return;
    Id[x][y]=Ln;
    dp[Ln++]=a[x][y];
    Rec(x+1,y-1);
}

inline int Parbo(int x,int y) {
    if(x<k) return 0;
    if((n-x+1)<k) return 0;
    if(y<k) return 0;
    if( (m-y+1)<k ) return 0;
    return 1;
}

inline LL Mom(int x,int y) {
    LL ans=0;
    LL ln=k;

    for(int i=1;i<=k;i++) {
        int id=Id[x][y-i+1];
        LL now=0;
        now+=(dp[id]-dp[id-i]);
        id=Id1[x][y+i-1];
        now+=(dp1[id]-dp1[id-i]);
        id=Id[x+i-1][y];
        now+=(dp[id]-dp[id-i]);
        id=Id1[x+i-1][y];
        now+=(dp1[id]-dp1[id-i]);
        now-=(a[x-i+1][y]+a[x+i-1][y]+a[x][y+i-1]+a[x][y-i+1]);
        ans+=(ln*now);
        ln--;
    }
    ans+=(k*a[x][y]);
    return ans;
}

int main()
{

    SL3(n,m,k);

    F(i,1,n+1) {
        F(j,1,m+1) {
            S1(a[i][j]);
        }
    }
    Ln=1;
    F(i,1,m+1) {
        Rec(1,i);
    }
    F(i,2,n+1) {
        Rec(i,m);
    }
    Ln=1;
    R(i,n+1,1) {
        Rec1(i,1);
    }
    F(i,2,m+1) {
        Rec1(1,i);
    }


    F(i,1,Ln) dp[i]+=dp[i-1];
    F(i,1,Ln) dp1[i]+=dp1[i-1];

    LL ans=0;

    PII aa;
    int cnt=0;
    double cl=clock();
    for(int i=1;i<=n;i++) {
        F(j,1,m+1) {
            if(Parbo(i,j)) {
                LL tp=Mom(i,j);
                if(tp>=ans) {
                    ans=tp;
                    aa=MP(i,j);
                }
                double cl1=clock();
                if( ((cl1-cl)/CLOCKS_PER_SEC)>1.0 ) {
                    printf("%d %d\n",aa.ff,aa.ss);
                    exit(0);
                }
            }
        }
    }

    printf("%d %d\n",aa.ff,aa.ss);

    return 0;
}
///============= Thank You ===================///
