//easy, right?
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e5 + 7;
const int infint = (ll)1e9;
const ll inf = (ll)1e18;
const int SQR = 40;
ll fir[MAXN], last[MAXN], a[MAXN];
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < MAXN; i++)
		fir[i] = n, last[i] = 0;
	for (int i = 0; i < n; i++)
		last[a[i]] = i;
	for (int i = n - 1; i >= 0; i--)
		fir[a[i]] = i;
	ll ans = 0;
	sort(fir, fir + MAXN);
	for (int i = 0; i < MAXN; i++)
	{
		if(fir[0] < last[i])
			ans += lower_bound(fir, fir + MAXN, last[i]) - fir;
	}
	cout << ans;
}
