#include <stdio.h>
#include <algorithm>
using namespace std;
int num[100010],ans[100010],sum[100010],sg[100010];
void find(int x)
{
    int cnt=0;
    ans[x]=-1;
    for (int i=1;i<=(2*x)/i;i++)
    {
        int num1=i;
        if ((2*x)%num1!=0) continue;
        int num2=2*x/num1;
        if ((num1+num2)%2==0) continue;
        int a=(num2-num1+1)/2;
        int b=(num1+num2-1)/2;
        if (a<=0||b<=0) continue;
        if (a==b) continue;
        if (a>b) swap(a,b);
        num[cnt++]=sum[a-1]^sum[b];
        //if (x==100) printf("%d %d\n",a,b);
        if ((sum[a-1]^sum[b])==0)
        {
            if (b-a+1<ans[x]||ans[x]==-1) ans[x]=b-a+1;
        }
    }
    if (cnt==0)
    {
        sg[x]=0;
        return;
    }
    sort(num,num+cnt);
    int now=-1;
    for (int i=0;i<cnt;i++)
    {
        if (num[i]==now) continue;
        if (num[i]>now+1)
        {
            sg[x]=now+1;
            return;
        }
        else if (num[i]==now+1)
            now=num[i];
    }
    sg[x]=num[cnt-1]+1;
    return;
}
int main()
{
    sg[0]=0;
    sg[1]=0;
    sg[2]=0;
    sum[0]=sum[1]=sum[2]=0;
    for (int i=3;i<=100000;i++)
    {
        find(i);
        sum[i]=sum[i-1]^sg[i];
    }
    int n;
    while (scanf("%d",&n)==1)
    {
        if (sg[n]==0)  puts("-1");
        else printf("%d\n",ans[n]);
    }
    return 0;
}
