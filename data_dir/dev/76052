#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ll long long
//increase stack size
#pragma comment(linker, "/STACK:16777216")

ll mxm() {return LLONG_MIN;}
template<typename... Args>
ll mxm(ll a, Args... args) { return max(a,mxm(args...)); }

ll mnm() {return LLONG_MAX;}
template<typename... Args>
ll mnm(ll a, Args... args) { return min(a,mnm(args...)); }

template<class T> ostream& operator<<(ostream& os,vector<T> V){
	os<<"[ ";for(auto v:V)os<<v<<" ";return os<<"]";
}
template<class L,class R> ostream& operator<<(ostream& os,pair<L,R> P){
	return os<<"("<<P.first<<","<<P.second<<")";
}

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
template<typename Arg1>
void __f(const char* name,Arg1&& arg1){
	cout<<name<<" : "<<arg1<<endl;
}
template <typename Arg1,typename... Args>
void __f(const char* names,Arg1&& arg1,Args&&... args){
	const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<" : "<<arg1<<" | ";__f(comma+1,args...);
}
#else
#define trace(...) 1
#endif

#define ld long double
#define pll pair<ll,ll>
#define ii pair<int,int>
#define vll vector<ll>
#define vii vector<ii>
#define vi vector<int>
#define vpll vector<pll>
#define vld vector<ld>
#define vvld vector<vld>
#define vvi vector<vi>
#define vvll vector<vll>
#define vvpll vector<vpll>
#define vvii vector<vii>
#define I insert
#define F first
#define S second
#define pb push_back
#define endl "\n"
#define all(x)	x.begin(),x.end()

const int mod=1e9+7;
// 128 bit: __int128
inline int add(int a,int b){a+=b;if(a>=mod)a-=mod;return a;}
inline int sub(int a,int b){a-=b;if(a<0)a+=mod;return a;}
inline int mul(int a,int b){return (a*1ll*b)%mod;}
inline int power(int a,int b){int rt=1;while(b>0){if(b&1)rt=mul(rt,a);a=mul(a,a);b>>=1;}return rt;}
inline int inv(int a){return power(a,mod-2);}

struct compare{
	bool operator() (const int &a,const int &b) const{
		return a>b;
	}
};

const int N = 2e5 + 5;
vi c(N);
vvi divs(N);

void pre(){
	for(int i = 1; i < N; i++){
		for(int j = i; j < N; j += i)
			divs[j].pb(i);
	}
}

int getmin(vi &v){
	int ans = 1e9;
	int n = v.size();
	for(auto i : divs[n]){
		for(int j = 0; j < i; j++){
			int poss = 1, col = -1;
			for(int k = j; k < n; k += i){
				if(col == -1)
					col = c[v[k]];
				else if(c[v[k]] != col){
					poss = 0;
					break;
				}
			}
			if(poss)
				return i;
		}
	}
	return n;
}

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout<<setprecision(25);
	pre();
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		vi v(n + 1), col(n + 1);
		for(int i = 1; i <= n; i++)
			cin >> v[i];
		for(int i = 1; i <= n; i++)
			cin >> col[i], c[v[i]] = col[i];
		int mincy = 1e9;
		vi vis(n + 1);
		for(int i = 1; i <= n; i++){
			if(vis[v[i]])
				continue;
			vi cycle;
			cycle.pb(v[i]);
			int cur = v[v[i]];
			vis[v[i]] = 1;
			while(cur != v[i])
				vis[cur] = 1, cycle.pb(cur), cur = v[cur];
			mincy = min(mincy, getmin(cycle));
		}
		cout << mincy << endl;
	}			
}