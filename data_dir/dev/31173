#include<bits/stdc++.h>
using namespace std;

#define si(n) scanf("%d",&n)
#define MAX 1000006
#define f first
#define s second

int n,x,a[MAX];
vector<int>gr[MAX];
set<int>myset;
set<int>::iterator it,it2;
vector<int>v;


int main()
{
    //freopen("input.txt","r",stdin);

    int i,j;
    si(n);si(x);
    for(i=1;i<=n;i++){
        si(a[i]);
        gr[a[i]].push_back(i);
    }

    long long ans=0;
    bool flag=true;
    for(i=x;i>=1;i--){
        if(myset.size()==0){
            for(auto pos : gr[i])myset.insert(pos);
            continue;
        }
        int val=*myset.begin();
        for(auto  pos : gr[i]){
            if(val<pos){
                flag=false;
                break;
            }
        }
        if(!flag)break;
        for(auto pos : gr[i])myset.insert(pos);
    }
    int rht=max(1,i);

    flag=true;
    for(i=1;i<=x && flag;i++){
        rht=max(rht,i);
        ans+= (x-rht+1);
        for(auto pos : gr[i]){
            v.clear();
            if(myset.size()==0)continue;

            it=myset.lower_bound(pos);
            //if(*it==pos){flag=false;break;}
            it2=it;
            if(it!=myset.begin()){
                it--;
                while(1){
                    if(a[*it]>i)v.push_back(*it);
                    if(it==myset.begin() || a[*it]<=i)break;
                    it--;
                }
            }
            if(it2!=myset.end()){
                if(a[*it2]<i){
                    flag=false;
                    break;
                }
            }
            if(!flag)break;
            for(auto pp : v){
                myset.erase(pp);
                rht=max(rht,a[pp]);
            }
        }
        if(flag)for(auto pos : gr[i])myset.insert(pos);
    }

    printf("%lld\n",ans);

    return 0;

}
