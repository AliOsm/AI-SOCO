#include <bits/stdc++.h>
#define PI 3.1415926535897932384626
using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};

struct P
{

    int x,y;
    bool operator <(const P &a) const{
        if(x!=a.x) return x>a.x;
        return y<a.y;
    }


};


bool as(P a,P b)
{
    if(a.x!=b.x)
    return a.x<b.x;
    return a.y<b.y;
}


long long x,y,z,mod=1000000007;
vector<int> v,v1;
int i,n,m,k,a,d,b,c,dx[10]={1,0,-1,0},dy[10]={0,1,0,-1};
int e;
int o[844444];
int l[1111];
int par[1];
int j[1];
//stack<int> s;
set<int> s;
priority_queue<P> q,q1;
P u[111111];
char r[511][513];
//string r,r1;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p,p1;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

int f(int n,int m)
{
    int k=0;
    if(n>m) return k;
    for(;n<m;)
    {
        if(n%2) k+=o[n],n++;
        else if(m%2==0) k+=o[m],m--;
        else n/=2,m/=2;
    }
    return k+o[n];
}

int main()
{
    scanf("%d",&a);
    for(int t=1;t<=a;t++)
    {
        scanf("%d %d",&n,&m);
        u[t]={n,m};
        v.push_back(n);
        v.push_back(m);
    }
    v.push_back(-1);
    sort(v.begin(),v.end());
    v.resize(unique(v.begin(),v.end())-v.begin());
    for(int t=1;t<v.size();t++)
        p1[v[t]]=t;
    for(i=1;i<v.size();i*=2);
    for(int t=1;t<=a;t++)
    {
        if(p[u[t].x]==0) p[u[t].x]=u[t].x;
        if(p[u[t].y]==0) p[u[t].y]=u[t].y;
        swap(p[u[t].x],p[u[t].y]);
    }
    for(int t=1;t<=a;t++)
    {
        if(p[u[t].x])
        {
            q.push({p[u[t].x],u[t].x});
            p[u[t].x]=0;
        }
        if(p[u[t].y])
        {
            q.push({p[u[t].y],u[t].y});
            p[u[t].y]=0;
        }
    }
    for(;q.size();q.pop())
    {
        if(q.top().x<q.top().y)
        {
            //puts("#");
            x+=q.top().y-q.top().x-1;
            x+=f(i+p1[q.top().y]-1,i+v.size()-1);
            x-=p1[q.top().y]-p1[q.top().x]-1;
            //x-=f(i+p1[q.top().x]-1,i+p1[q.top().y]-1);
        }
        else if(q.top().x>q.top().y)
        {
            x+=q.top().x-q.top().y-1-(p1[q.top().x]-p1[q.top().y]-1-f(i+p1[q.top().y],i+p1[q.top().x]-2));
            x+=f(i+p1[q.top().x]-1,i+v.size()-1);
            //x-=-f(i+p1[q.top().x]-1,i+p1[q.top().y]-1)+(p1[q.top().x]-p1[q.top().y]);
        }
        else
        {
            x+=f(i+p1[q.top().y]-1,i+v.size()-1);
        }
        o[i+p1[q.top().y]-1]=1;
        for(int h=(i+p1[q.top().y]-1)/2;h>0;h/=2)
            o[h]=o[h*2]+o[h*2+1];
        //printf("@@%lld %d %d\n",x,q.top().x,q.top().y);
    }
    printf("%lld",x);
}
