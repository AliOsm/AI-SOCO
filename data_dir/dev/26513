#include<bits/stdc++.h>
#define MEM(dp,i) memset(dp,i,sizeof(dp))
#define pb push_back
#define F first
#define S second
using namespace std;
const int MX = 2e5+9;
const long long mod=1e9+7;
const long long inf = (1ll<<60);
typedef long long ll;
typedef pair<ll,ll> pll;
ll n,a[MX],lvl[MX],par[MX],dp[30][MX],V[30][MX],p[MX];
bool vis[MX];
vector<pll>v[MX];
void build(ll x ,ll p){
    if(vis[x])return;
    vis[x]=1;
    for(auto pp:v[x]){
        ll nxt=pp.F;
        if(nxt==p)continue;
        par[nxt]=x;
        lvl[nxt]=lvl[x]+1;
        V[0][nxt]=pp.S;
        build(nxt,x);
    }
}
void pro(ll x){
    ll Au=a[x];
    ll ver=x;
    for(int i=20;i>=0;i--){
        ll node=dp[i][x],dis=V[i][x];
        if(dis>Au)continue;
        x=node;
        Au-=dis;
    }
    p[par[x]]--;
    p[par[ver]]++;
}
ll dfs(ll x){
    ll &ret=p[x];
    for(auto pp:v[x]){
        ll nxt=pp.F;
        if(nxt==par[x])continue;
        ret+=dfs(nxt);
    }
    return ret;
}
int main(){
    scanf("%lld",&n);
    for(int i=1;i<=n;i++)scanf("%lld",&a[i]);
    for(int i=2;i<=n;i++){
        ll x,y;
        scanf("%lld%lld",&x,&y);
        v[i].pb({x,y});
        v[x].pb({i,y});
    }
    build(1,-1);
    for(int i=1;i<=n;i++)dp[0][i]=par[i];
    for(int i=1;i<=20;i++){
        for(int j=1;j<=n;j++){
            ll x=dp[i-1][j];
            dp[i][j]=dp[i-1][x];
            V[i][j]=V[i-1][j]+V[i-1][x];
        }
    }
    for(int i=1;i<=n;i++)pro(i);
    dfs(1);
    for(int i=1;i<=n;i++)printf("%lld ",p[i]);
}
