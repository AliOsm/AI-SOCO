//  Copyright Â© 2020 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<iostream>
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long ll;

int N, T;
const int MAX = 8005;
bool can[MAX];
int a[MAX];


void solve() {
    cin >> N;
    for( int i = 1; i <= N; i ++ ) 
        cin >> a[i];
    for( int i = 1; i <= N; i ++ )  {
        int sm = a[i];
        for( int j = i + 1; j <= N; j ++ ) {
            sm += a[j];
            if( sm > N )
                break;
            can[sm] = 1;
        }
    }
    int ans = 0;
    for( int i = 1; i <= N; i ++ ) 
        if( can[a[i]] )
            ans++;
    
    for( int i = 1; i <= N; i ++ )
        can[i] = false;
    
    cout << ans << "\n";
    
}

int main()
{
    optimiza_io
    cin >> T;
    while( T -- )
        solve();
    return 0;
}

// CHECAR LIMITES 