#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"

#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0);}

#define SHOW(x) std::cout << #x << " = " << x << std::endl;

inline int safe_mul(int x, int y) __attribute__ ((warn_unused_result));

int const mod = 1e9 + 7;

inline int safe_mul(const int x, const int y)
{
    return x * 1LL * y % mod;
}

inline void safe_add(int& x, const int y)
{
    x += y;
    if (x >= mod)
        x -= mod;
}

int main()
{
//    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
    ios_base::sync_with_stdio(false);

    int n;
    cin >> n;
    vector<int> pow2(n);
    pow2[0] = 1;
    for(int i = 1; i < n; ++i)
        pow2[i] = safe_mul(2, pow2[i - 1]);

    vector<int> a(n);
    for(int& x : a)
        cin >> x;

    sort(begin(a), end(a));

    vector<int> s(n + 1);
    for(int i = 0; i < n; ++i)
    {
        s[i + 1] = s[i];
        safe_add(s[i + 1], a[i]);
    }

    int ans = 0;
    for(int i = 1; i < n; ++i)
    {
        int cur = s[n];
        safe_add(cur, mod - s[n - i]);

        safe_add(cur, mod - s[i]);

        cur = safe_mul(cur, pow2[n - i - 1]);
        safe_add(ans, cur);
    }
    cout << ans << endl;
}
