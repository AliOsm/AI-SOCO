#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
#include <stack>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
using namespace std;

int n;
const int MAXN = 100005;
long long a[MAXN];
stack<int> s;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 0; i < n; i++)
		cin >> a[i];

	long long ans = 0;
	for(int i = 0; i < n; i++)
	{
		while(!s.empty())
		{
			int x = s.top();
			ans = max(ans, x ^ a[i]);
			if(s.top() < a[i])
				s.pop();
			else
				break;
		}
		s.push(a[i]);
	}

	cout << ans << "\n";
	return 0;
}