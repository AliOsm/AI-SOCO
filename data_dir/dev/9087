#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>

#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 1e9;
ll LINF = (ll)4e18;
const ll  mod = 1e9 + 7;
using namespace std;
#define M_PI       3.14159265358979323846   // pi
vi q;
void make_set(int v) {
	q[v] = v;
}

int find_set(int v) {
	if (v == q[v])
		return v;
	return q[v] = find_set(q[v]);
}

void union_sets(int a, int b) {
	a = find_set(a);
	b = find_set(b);
	if (a != b)
		q[b] = a;
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("cities.in", "r", stdin);
	//freopen("cities.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	string s1, s2;
	cin >> s1 >> s2;
	q.resize(26);
	forn(i, 0, 26) {
		make_set(i);
	}
	vector<pair<char, char>> ans;
	forn(i, 0, s1.length()) {
		if (find_set(s1[i]-'a') != find_set(s2[i]-'a')) {
			ans.push_back(mp(s1[i], s2[i]));
			union_sets(s1[i]-'a', s2[i]-'a');
		}
	}
	cout << ans.size() << endl;
	forn(i, 0, ans.size()) {
		cout << ans[i].first << " " << ans[i].second << endl;
	}
	return 0;
}