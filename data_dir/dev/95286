#include<bits/stdc++.h>
#define ll unsigned long long
#define acm ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define pb push_back
#define pf push_front
#define F first
#define S second
#define mod 1000000007
using namespace std;
const int N=1e5+5;
int n,m,x,arr[N]= {};
bool fix[N]= {};
vector<int>v;
deque<int>dq;
unordered_set<int>st;
inline bool can(int mid)
{
    dq.clear();
    st.clear();
    memset(fix,0,sizeof(fix));
    for (int i=mid; i>=0; --i)
    {
        if (!st.count(v[i])&&v[i])
            dq.pf(v[i]),fix[i]=true;
        if (v[i])
            st.insert(v[i]);
    }
    if ((int)st.size()!=m)
        return false;
    int idx=0;
    while(!dq.empty())
    {
        int cnt=0;
        while(idx<=mid&&cnt<arr[dq.front()])
        {
            if (fix[idx]&&v[idx]==dq.front())
                break;
            if (!fix[idx])
                cnt++;
            ++idx;
        }
        if (cnt!=arr[dq.front()])
            return false;
        dq.pop_front();
    }
    return true;
}
int main()
{
    acm;
    cin>>n>>m;
    for (int i=0; i<n; ++i)
    {
        cin>>x;
        v.pb(x);
    }
    for (int i=1; i<=m; ++i)
        cin>>arr[i];
    int l=1,r=n,ans=-1;
    while(l<=r)
    {
        int mid=(l+r)/2;
        if (can(mid-1))
            r=mid-1,ans=mid;
        else
            l=mid+1;
    }
    cout<<ans<<"\n";
    return 0;
}