#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-10;
const double PI = acos(-1.0);

int n, m;
bool us[4444][4444];
set < int > g[4444];
main() {
    file("queue");
    ios;
    cin >> n >> m;
    fo(i, 1, m, 1) {
        int a, b;
        cin >> a >> b;
        us[a][b] = us[b][a] = 1;
        g[a].ins(b);
        g[b].ins(a);
    }
    int ans = INF1;
    fo(i, 1, n, 1) {
        for (auto & j : g[i]) {
            for (auto & k : g[i]) {
                if (k == j) continue;
                int t = g[i].size() + g[j].size() + g[k].size() - 6;
                if (us[j][k]) ans = min(ans, t);
            }
        }
    }
    if (ans == INF1) ans = -1;
    cout << ans;
    return 0;
}
