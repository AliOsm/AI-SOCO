#include <bits/stdc++.h>
#include <ctime>
using namespace std;

#define space ' '
#define enter "\n"
#define fi first
#define se second
#define INF 2000000007
#define mp make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef set <int> si;
typedef map <int, int> mii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;
typedef vector <pii> vii;

template <typename T>
T sqr (T x) {
    return x * x;
}

template <typename T>
T gcd (T a, T b) {
    return b ? gcd(b, a % b) : a;
}

template <class T>
bool chmin (T &x, const T &y) {
    if (y < x)
    {
        x = y;
        return true;
    }
    return false;
}

template <class T>
bool chmax (T &x, const T &y) {
    if (x < y)
    {
        x = y;
        return true;
    }
    return false;
}


template <class P, class Q>
ostream & operator << (ostream &os, const pair <P, Q> &p) {
    return os << '(' << p.fi << ", " << p.se << ')';
}


template <class T>
ostream & operator << (ostream &os, const vector <T> &v) {
    os << '{';
    bool was = false;
    for (const T & x : v)
    {
        if (was)
            os << ", ";
        was = true;
        os << x;
    }
    os << '}';
    return os;
}

template <class T>
ostream & operator << (ostream &os, const set <T> &v) {
    os << '[';
    bool was = false;
    for (const T & x : v)
    {
        if (was)
            os << ", ";
        was = true;
        os << x;
    }
    os << ']';
    return os;
}

template <class P, class Q>
ostream & operator << (ostream &os, const map <P, Q> &m) {
    os << '<';
    bool was = false;
    for (const auto &x : m)
    {
        if (was)
            os << ", ";
        was = true;
        os << x;
    }
    os << '>';
    return os;
}

const int MAXN = (int)1e5 + 10;

int n, m, k;
bool have[MAXN];
vector <pii> d[MAXN];

int main () {
    //freopen("", "r", stdin); freopen("", "w", stdout);
    ios_base::sync_with_stdio(false);
	cin >> n >> m >> k;
	for (int i = 1; i <= m; i++) {
		int x, y, z;
		cin >> x >> y >> z;
		d[x].push_back(mp(y, z));
		d[y].push_back(mp(x, z));
	}
	for (int i = 1; i <= k; i++) {
		int x;
		cin >> x;
		have[x] = true;
	}
	int mi = INF;
	for (int i = 1; i <= n; i++) {
		if (have[i]) {
			for (int j = 0; j < d[i].size(); j++) {
				if (!have[d[i][j].fi])
					chmin(mi, d[i][j].se);
			}
		}
	}
	if (mi == INF)
		cout << -1;
	else
		cout << mi;
}
