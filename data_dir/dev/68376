#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <memory.h>
#include <deque>
#include <iomanip>
#include <utility>
#include <string>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf       
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define print(x) prf("%d\n", x.sz()); for (int i = 0; i < x.sz(); i++) prf("%d ", x[i]);
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i != end; i += move)

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

int n, m;
int w[100500], b[100500];
bool used[1001] = {false};

int main()
{
    scf("%d%d", &n, &m);
    For(i, n)
        scf("%d", &w[i + 1]);
    int res = 0;
    For(i, m)
        scf("%d", &b[i]);
    For(i, m)
    {
        int add = 0;
        memset(used, false, sizeof(used));
        for (int j = i - 1; j >= 0; --j)
        {
            if (b[j] == b[i])
                break;
            if (used[b[j]])
                continue;
            else
            {             
                add += w[b[j]];
                used[b[j]] = true;
            }
        }
        res += add;
    }
    prf("%d\n", res);
    return 0;
}