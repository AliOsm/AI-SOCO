#include<iostream>
#include<algorithm>
#include<map>
#include<bitset>
#include<set>
#include<vector>
#include<queue>
#include<deque>
#include<stack>
#include<string>
#include<string.h>
#include<cstring>
#include<bitset>
#include<locale>
#include<cmath>
#include<iomanip>
#include<math.h>
#include<bitset>
using namespace std;
#define ll  long long int
bool Check(ll left, ll right)
{
    return left >right;
}
int main()
{
    ll size, x, temp, counter = 0, left = 0, right = 0, answer, occurance = 0;
    bool exist = false;
    cin >> size >> x;
    vector<ll>numbers;
    for (ll i = 0; i<size; i++)
    {
        cin >> temp;
        if (temp == x)exist = true;
        numbers.push_back(temp);
    }
    if (!exist)
        numbers.push_back(x), counter++;
    sort(numbers.begin(), numbers.end());
    right = max((ll)0, (ll)numbers.size() - (upper_bound(numbers.begin(), numbers.end(), x) - numbers.begin()));
    left = max(0, (lower_bound(numbers.begin(), numbers.end(), x) - numbers.begin()));
    occurance = numbers.size() - right - left - 1;
    if (left == right || numbers[(numbers.size() + 1) / 2 - 1] == x)
        cout << counter << endl;
    else if (left>right)
        cout << counter + left - right - occurance << endl;
    else if (!((counter + right - left + size - occurance) % 2))
        cout << counter - left + right - occurance << endl;
    else
        cout << counter - left + right - 1 - occurance << endl;

    return 0;
}