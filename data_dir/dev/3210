#include <bits/stdc++.h>
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
using namespace std;

const int N = 1e6 + 9, MOD = 1e9 + 7;

int mem[N][25], pw[N];

vector<pair<int, int>> fact(int x) {
	vector<pair<int, int>> vv;
	for (int i = 2; 1ll * i * i <= x; ++i) {
		if(x % i == 0) {
			int cnt = 0;
			while(x % i == 0) {
				x /= i;
				++cnt;
			}
			vv.push_back({i, cnt});
		}
	}
	if(x > 1)
		vv.push_back({x, 1});
	return vv;
}

int mul(int x, int y) {
	return (1ll * x * y) % MOD;
}
int add(ll x, int y) {
	x += y;
	while(x >= MOD)
		x -= MOD;
	while(x < 0)
		x += MOD;
	return x;
}

int solve(int idx, int rem) {
	if(!idx || !rem)
		return (rem == 0);
	int& ret = mem[idx][rem];
	if(~ret)
		return ret;
	ret = 0;
	for (int j = 0; j <= rem; ++j)
		ret = add(ret, solve(idx - 1, rem - j));
	return ret;
}

int main() {
	fastIO;
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
#endif
	pw[0] = 1;
	for (int i = 1; i < N; ++i)
		pw[i] = mul(pw[i - 1], 2);
	int t;
	cin >> t;
	memset(mem, -1, sizeof mem);
	while(t--) {
		int x, y;
		cin >> x >> y;
		vector<pair<int, int>> vv = fact(x);
		int ans = pw[y - 1];
		for(auto it: vv)
			ans = mul(ans, solve(y, it.second));
		cout << ans << '\n';
	}
	return 0;
}

