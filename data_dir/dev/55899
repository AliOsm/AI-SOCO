#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define LOG1(a)			  cerr<< #a << " = " << (a) << "\n"
#define LOG2(a, b)		  cerr<< #a << " = " << (a) << ", " << #b << " = " << (b) << "\n"
#define endl "\n"

typedef long long int ll;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<int> vi;

const ll INF = 1e18;
const int inf = 1e9;
const int MOD = 1e9 + 7;
const int nax = 300000 + 10;

int n, arr[nax], m;
string s;
int dp[nax][30];
vi graph[nax];
int color[nax];
int mainflag = 0;

void dfs(int v)
{
    color[v] = 1;
    for(auto x: graph[v])
    {
        if(color[x] == 1) mainflag = 1;
        if(color[x] == 0) dfs(x);
    }
    color[v] = 2;
}

int solve(int v, int chval)
{
    if(dp[v][chval] != -1) return dp[v][chval];
    int val = 0;
    if(s[v] == (char)chval + 'a') val++;
    int maxi = val;
    for(auto x: graph[v])
    {
        maxi = max(maxi, val + solve(x, chval));
    }
    return dp[v][chval] = maxi;
}
int main()
{
    ios::sync_with_stdio(0);
    cin >> n >> m;
    cin >> s;
    while(m--)
    {
        int u, v;
        cin >> u >> v;
        graph[u].pb(v);
    }
    s = "#" + s;
    for(int i = 1; i <= n; i++) if(color[i] == 0) dfs(i);
    if(mainflag)
    {
        cout << -1;
        return 0;
    }
    int maxi = 0;
    memset(dp, -1, sizeof(dp));
    for(int i = 1; i <= n; i++)
    {
        maxi = max(maxi, solve(i, s[i] - 'a'));
    }
    cout << maxi;
    return 0;
}
