#include <bits/stdc++.h>
using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;



#define int ll


typedef pair<int, int> pii;
typedef pair<pii, pii> piii;
typedef vector<piii> vpii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<short> vs;
typedef vector<vs> vvs;
typedef vector<vvs> vvvs;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;
typedef vector<vvld> vvvld;
typedef vector<string> vst;
typedef vector<vst> vvst;
typedef pair<ld, ld> pld;
typedef vector<pld> vpd;
typedef complex<double> base;


#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a, b) make_pair(a, (b))
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define SZ(a) ((int)((a).size()))
#define triple(T) tuple<T, T, T>
#define quad(T) tuple<T, T, T, T>
#define watch(x) cout << (#x) << " = " << x << endl;
#ifdef MAX_HOME
#define cerr cout
#else
#define cerr if (false) cerr
#endif


const double PI = 2 * acos(0.0);

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";

istream &operator >> (istream &in, pii &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pii &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


istream &operator >> (istream &in, pld &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pld &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


template <class T0, class T1>
inline ostream & operator << (ostream &out, pair<T0, T1> &a) {
    return out << "{" << a.first << ", " << a.second << "}";
}

template <class T0, class T1, class T2>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) << ", " << get<2>(a) << "}";
}

template <class T0, class T1, class T2, class T3>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2, T3> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) <<
               ", " << get<2>(a) << ", " <<  get<3>(a) << "}";
}

template<class T>
inline ostream & operator << (ostream &out, vector<T> &a) {
    out << "[";
    fori (i, a.size())
        out << a[i] << vector<string>{", ", "]  "}[i + 1 == a.size()];
    return out;
}


void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n\nTOTAL EXECUTION TIME: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
}


const int N = 1 << 17, psze = 20, oo = 1e9 + 1e7, B = 200, M = 1e9 + 7, g = 16, A = 26;
const ld pi = 2 * atan2(1, 0), EPS = 1e-10;


int label[N];
map<pii, int> trans;
pii a, b;
ld h = oo;


bool cmp(pii a, pii b)
{
    return a.second < b.second;
}


int my_abs(int v)
{
    if (v < 0)
        return -v;
    else
        return v;
}


ld dist(pii a, pii b)
{
    return sqrt(sqr(a.first - b.first) + sqr(a.second - b.second));
}


vpi solution(vpi lel)
{
    if (SZ(lel) == 1)
        return lel;

    int m = SZ(lel) >> 1;
    vpi lel1, lel2;
    int x = lel[m].first;

    for (int i = 0; i < m; ++i)
        lel1.push_back(lel[i]);

    for (int i = m; i < SZ(lel); ++i)
        lel2.push_back(lel[i]);

    lel1 = solution(lel1);
    lel2 = solution(lel2);

    lel.resize(SZ(lel1) + SZ(lel2));
    merge(ALL(lel1), ALL(lel2), lel.begin(), cmp);
    lel1.clear();

    for (auto p : lel)
        if (my_abs(p.first - x) <= h)
            lel1.push_back(p);

    for (int i = 0; i + 1 < SZ(lel1); ++i)
        for (int j = i + 1; j < SZ(lel1); ++j)
            if (dist(lel1[i], lel1[j]) < h)
            {
                h = dist(lel1[i], lel1[j]);
                a = lel1[i], b = lel1[j];
            }

    return lel;
}


void smain()
{
    ifstream cin("input.txt");
    ofstream cout("output.txt");

    int n;
    cin >> n;

    vpi lel(n);
    for (int i = 0; i < n; ++i)
        cin >> lel[i];

    for (int i = 0; i < n; ++i)
    {
        if (lel[i].first < 0)
            lel[i].first *= -1, label[i] |= 1;

        if (lel[i].second < 0)
            lel[i].second *= -1, label[i] |= 2;

        if (trans.count(lel[i]))
        {
            cout << trans[lel[i]] + 1 << ' ' << label[trans[lel[i]]] + 1 << ' ' << i + 1 << ' ' << (label[i] ^ 3) + 1;
            return;
        }

        trans[lel[i]] = i;
    }


    stable_sort(ALL(lel));
    solution(lel);

    cout << trans[a] + 1 << ' ' << label[trans[a]] + 1 << ' '  << trans[b] + 1 << ' ' << (label[trans[b]] ^ 3) + 1;
}