#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second

using namespace std;

const int maxN = 100005;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 31;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const int MAX_INT = (1 << 31) - 1;
const double eps = 1e-6;
const double pi = atan2(0, -1);

vector<int> edge[maxN];

int used[maxN];
int used2[maxN];

int dfs(int v)
{
    if(used[v] == 2) return 1;
    if(used[v] == 1) return 0;
    used[v] = 1;

    for(int u : edge[v]) if(!dfs(u)) return 0;

    used[v] = 2;
    return 1;
}

vector<int> arr;
int dfs2(int v)
{
    used2[v] = 1;
    for(int u : edge[v]) if(!used2[u]) dfs2(u);
    arr.push_back(v);
}

int main()
{
    //freopen("in.in", "r", stdin);
    //freopen("battleship.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //int TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();

    int n, k;
    cin >> n >> k;

    vector<int> ind(k);
    for(int i = 0; i < k; i++)
    {
        cin >> ind[i];
        ind[i]--;
    }

    for(int i = 0; i < n; i++)
    {
        int t;
        cin >> t;
        for(int k = 0; k < t; k++)
        {
            int v;
            cin >> v;
            v--;

            edge[i].push_back(v);
        }
    }

    int ok = 1;
    for(int i : ind) if(!used[i]) ok &= dfs(i);

    for(int i = 0; i < n; i++) if(!used2[i]) dfs2(i);

    if(!ok) cout << -1 << endl;
    else
    {
        int cnt = 0;
        for(int i = 0; i < n; i++) if(used[i]) cnt++;
        cout << cnt << endl;
        for(int u : arr) if(used[u]) cout << u + 1 << " ";
        cout << endl;
    }


    return 0;
}
