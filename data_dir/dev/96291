#include<bits/stdc++.h>

using namespace std;

const int maxn = 100;
bool visit[maxn][maxn];
bool Vis[maxn][maxn];
string s[maxn];
int dx[] = {1,0,-1,0};
int dy[] = {0,1,0,-1};
int n;
bool val(int x , int y){
    if(x >= 0 and x < n and y >= 0 and y < n)return true;
    else return false;
}

int main()
{

    int x1 , y1 , x2 , y2;
    cin >> n;
    cin >> x1 >> y1 >> x2 >> y2;
    x1--;y1--;x2--;y2--;
    for(int i = 0; i<n; i++){
        cin >> s[i];
    }
    queue< pair < int , int > > q;
    q.push({x2,y2});
    visit[x2][y2] = true;
    while(!q.empty()){
        pair < int , int >v = q.front();
        q.pop();
        for(int i = 0; i<4; i++){
            int x = v.first + dx[i];
            int y = v.second + dy[i];
            if(val(x,y) and visit[x][y] == false and s[x][y] == '0'){
                visit[x][y] = true;
                q.push({x,y});
            }
        }
    }
    if(visit[x1][y1] == true){
        cout << 0 << endl;
        return 0;
    }
    long long ans = 1e18;
    q.push({x1,y1});
    Vis[x1][y1] = true;
    while(!q.empty()){
        pair < int , int > v = q.front();
        q.pop();
        for(int i = 0; i<4; i++){
            int x = v.first + dx[i];
            int y = v.second + dy[i];
            if(val(x,y) and Vis[x][y] == false and s[x][y] == '0'){
                Vis[x][y] = true;
                q.push({x,y});
            }
        }
    }
    for(int i = 0; i<n; i++){
        for(int j = 0; j<n; j++){
            if(Vis[i][j] == true){
                for(int k = 0; k<n; k++){
                    for(int l = 0; l<n; l++){
                        if(visit[k][l] == true){
                            long long x = abs(i-k);
                            long long y = abs(j-l);
                            long long ax = x*x + y*y;
                            ans = min(ans,ax);
                        }
                    }
                }
            }
        }
    }
    printf("%lld\n",ans);
    return 0;
}
