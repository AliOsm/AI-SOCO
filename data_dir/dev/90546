#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
vector<string> a,s;
int dp[53][53][53][53];
int num[53];
int r(int p, int v1, int v2, int v3)
{
	if (p==0)
		return 1;
	string s1=s[v1];
	string s2=s[v2];
	if (p==1)
	{
		if ((s2[0]==s1[0]) || (s2[1]==s1[1]))
			return 1;
		return 0;
	}
	string s3=s[v3];
	if (p==2)
	{
		if ((s1[0]==s2[0]) || (s1[1]==s2[1]))
		{
			if ((s1[0]==s3[0]) || (s1[1]==s3[1]))
				return 1;
			return 0;
		}
		return 0;
	}
	if (dp[p][v1][v2][v3]!=-1)
		return dp[p][v1][v2][v3];
	string s4=s[num[p-3]];
	int res=0;
	if ((s1[0]==s2[0]) || (s1[1]==s2[1]))
	{
		int v=r(p-1,v1,v3,num[p-3]);
		if (v)
			return dp[p][v1][v2][v3]=1;
	}
	if ((s1[0]==s4[0]) || (s1[1]==s4[1]))
	{
		int v=r(p-1,v2,v3,v1);
		if (v)
			return dp[p][v1][v2][v3]=1;
	}
	return dp[p][v1][v2][v3]=0;
}
int main()
{
#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
#endif
	int n;
	scanf("%d",&n);
	s.resize(n);
	a.resize(n);
	FOR(i,0,n)
	{
		cin>>s[i];
		a[i]=s[i];
	}
	sort(s.begin(),s.end());
	s.resize(unique(s.begin(),s.end())-s.begin());
	FOR(i,0,a.size())
		num[i]=lower_bound(s.begin(),s.end(),a[i])-s.begin();
	int v1=num[n-1];
	int v2=n,v3=n;
	if (n>1)
		v2=num[n-2];
	if (n>2)
		v3=num[n-3];
	MEMS(dp,-1);
	int res=r(n-1,v1,v2,v3);
	if (res)
		printf("YES\n");
	else
		printf("NO\n");
	return 0;
}