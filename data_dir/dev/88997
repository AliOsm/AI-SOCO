#include <bits/stdc++.h>
#include<string>
    
using namespace std;
            
    #define ll long long
    #define do long double
    #define ff first
    #define ss second
    #define FOR(a,n) for(ll ii=0;ii<n;ii++){    cin>>a[ii];}
    #define pb push_back
    #define mp make_pair
    #define inf LONG_LONG_MAX
    #define mod 998244353
    #define FAST ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
      
    #define EPSILON std::numeric_limits<double>::epsilon() 
 
ll d,x,y;
void extendedEuclid(ll A, ll B) 
{
    if(B == 0) 
    {
         d = A;
         x = 1;
         y = 0;
    }
    else 
    {
        extendedEuclid(B, A%B);
        int temp = x;
        x = y;
        y = temp - (A/B)*y;
    }
}
 
ll modinv(ll b,ll m)
{
    extendedEuclid(b,m);
    return (x%m + m)%m;
}
 
ll power(ll x,ll y, ll p) 
{ 
    ll res = 1; 
    x = x % p;
    while (y > 0) 
    {  // If y is odd, multiply x with result 
        if (y & 1) 
            res = (res*x) % p;
                    
        y = y>>1; 
        x = (x*x) % p;   
    } 
    return res; 
} 
 

vector<ll> fr(1000010);

int main()
{
    FAST
    ll n,m,i,j;
	cin>>n;
	vector<ll> a;
	ll cnt=0;
	ll high[n],sz[n];
	for(i=0;i<n;i++)
	{
		cin>>m;
		ll mn=inf,mx=0;
		sz[i]=m;
		for(j=0;j<m;j++)
		{
			ll k;
			cin>>k;
			if(k>mn &&  fr[i]==0)
			{
				cnt++;
				fr[i]=1;
			}
			mx=max(mx,k);
			mn=min(mn,k);
		}
		if(!fr[i])
		a.pb(mx);
		high[i]=mn;
	}
	sort(a.begin(),a.end());
	ll ans=0;
	for(i=0;i<n;i++)
	{
		if(fr[i]==1)
			ans+=n;
		else
		{
			ans+=cnt;
			ll target=high[i];
			ll x=upper_bound(a.begin(),a.end(),high[i])-a.begin();			
			x=a.size()-x;
			//cout<<x<<" "<<cnt<<" ";
			ans+=x;
			
		}
		//cout<<ans<<"\n";
	}
	cout<<ans;
 
}