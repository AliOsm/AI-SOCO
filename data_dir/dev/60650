#include<cstdio>
#include<iostream>
#include<cstring>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<iomanip>
#include<ctime>
using namespace std;
#define ll long long
//#define inf 1000000007
const ll inf = 100000000000007LL;
#define pii pair<ll,int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 2010
char s[N][N];
int main()
{
    int m,i,j,k,T,ca=0,n;
    while(~scanf("%d%d",&n,&m))
    {
        int l=m,r=-1,u=n,d=-1,num=0,f=0;
        for(i=0;i<n;i++)
        {
            scanf("%s",s[i]);
            if(f)continue;
            for(j=0;j<m;j++)
            {
                if(s[i][j]=='w')
                {
                    l=min(l,j),r=max(r,j),u=min(u,i),d=max(d,i),num++;
                }
            }
        }
        
        if(num==1)
        {
            for(i=0;i<n;i++)puts(s[i]);
            continue;
        }
        for(i=0;i<n;i++)
        {
            for(j=0;j<m;j++)
            {
                if(s[i][j]=='w')
                {
                    if(i>u&&i<d&&j>l&&j<r){f=1;break;}
                }
            }
            if(f)break;
        }
        if(f){puts("-1");continue;}
        int a[4]={0,0,0,0};
        for(i=0;i<n;i++)
        for(j=0;j<m;j++)
        if(s[i][j]=='w')
        {
            if(j==l&&i>u&&i<d)a[0]=1;
            if(j==r&&i>u&&i<d)a[1]=1;
            if(i==u&&j>l&&j<r)a[2]=1;
            if(i==d&&j>l&&j<r)a[3]=1;
        }
        int w=r-l+1,h=d-u+1;
        if(w>h)
        {
            if(w>n||(u!=d&&a[2]&&a[3])){puts("-1");continue;}
            if(u==d)
            {
                if(a[2])
                {
                    if(u+1>=w)u=u-w+1;
                    else if(n-d>=w)d=w+u-1;
                    else {puts("-1");continue;}
                }
                else 
                {
                    u-=min(u,w-h);
                    h=d-u+1;
                    if(w>h)d+=w-h;
                }
            }
            else
            {
                if(a[2])
                {
                    if(n-u<w){puts("-1");continue;}
                    d+=w-h;
                }
                else if(a[3])
                {
                    if(d+1<w){puts("-1");continue;}
                    u-=w-h;
                }
                else 
                {
                    u-=min(u,w-h);
                    h=d-u+1;
                    if(w>h)d+=min(n-d,w-h);
                }
            }
        }
        if(h>w)
        {
            if(h>m||(l!=r&&a[0]&&a[1])){puts("-1");continue;}
            if(l==r)
            {
                if(a[0])
                {
                    if(l+1>=h)l=l-h+1;
                    else if(m-r>=h)r=h+l-1;
                    else {puts("-1");continue;}
                }
                else 
                {
                    l-=min(l,h-w);
                    w=r-l+1;
                    if(w<h)r+=h-w;
                }
            }
            else
            {
                if(a[0])
                {
                    if(m-l<h){puts("-1");continue;}
                    r+=h-w;
                }
                else if(a[1])
                {
                    if(r+1<h){puts("-1");continue;}
                    l-=h-w;
                }
                else 
                {
                    l-=min(l,h-w);
                    w=r-l+1;
                    if(h>w)r+=min(m-r,h-w);
                }
            }
        }
        //printf("%d %d %d %d\n",u,d,l,r);
        for(i=0;i<n;i++)
        {
            if(i<u||i>d)puts(s[i]);
            else
            {
                for(j=0;j<m;j++)
                if(j<l||j>r)printf(".");
                else if(s[i][j]=='.'&&(j==l||j==r||i==u||i==d))printf("+");
                else if(s[i][j]=='w')printf("w");
                else printf(".");
                puts("");
            }
        }
    }
}