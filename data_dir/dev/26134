#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <string.h>
#include <cstring>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <bitset>
#include<functional>
#include <locale>
#include <cmath>
#include <iomanip>
#include <math.h>
#include <bitset>
using namespace std;
#define ll  long long
#define ld long double
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844
int GCD(int x, int y) { return !y ? x : GCD(y, x % y); }
int LCM(int x, int y){ return x*y / GCD(x, y); }
ll ceilDivision(ll dividend, ll divisor){ return (dividend + divisor - 1) / divisor; }
int main()
{
	int n, m, temp, answer=0;
	cin >> n >> m;
	vector<int>weights(n),books,read_list(m);
	vector<bool>read(n,false);
	for (int i = 0; i < n; i++)cin >> weights[i];
	for (int i = 0;i<m;i++)
	{
		cin >> read_list[i], read_list[i]--;
		if (!read[read_list[i]])
			read[read_list[i]] = true, books.push_back(read_list[i]);
	}
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < books.size(); j++)
		{
			if (read_list[i] == books[j])
			{
				for (int k = j; k > 0; k--)
					swap(books[k], books[k - 1]);
				break;
			}
			answer += weights[books[j]];
		}
	}
	cout << answer << endl;
	return 0;
}