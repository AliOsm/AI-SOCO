/*-----Deep D. Savani------------
-------DAIICT,INDIA--------------
*/
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
#define nax 1000010
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;
    
using namespace std;

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 

#define T ll  
#define ordered_set tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update> 
    
long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);



void build()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
}

vector< pair<string,ll> > s[nax];
vector<char> ans(nax);

bool check(string ss)
{
	ll n=ss.size();
	for(int l=1;l<=n-1;l++)
	{
		string temp;
		for(int i=0;i<l;i++)
			temp+=ss[i];

		//deb(temp);

		if(temp==s[l][0].ff)
		{
			ans[s[l][0].ss]='P';
			ans[s[l][1].ss]='S';

		}
		else if(temp==s[l][1].ff)
		{
			ans[s[l][0].ss]='S';
			ans[s[l][1].ss]='P';
		}
		else
			return false;
	}
	return true;
}     
    
int main(){

    build();
    ll n;
    cin>>n;

    //deb(n);
    //ans[0]='A';
    //deb(ans[0]);

    for(int i=0;i<2*(n-1);i++)
    {
    	string temp;
    	cin>>temp;
    	//deb(temp);
    	s[temp.size()].pb(mp(temp,i) );
    }
    
    string s1=s[n-1][0].ff;
    string s2=s[n-1][1].ff;

    //deb2(s1,s2);

    string g1=s1[0]+s2;
    string g2=s2[0]+s1;

    //deb2(g1,g2);
    
    if( check(g1))
    {
    	for(int i=0;i<2*(n-1);i++)
    		cout<<(char)ans[i];
    	return 0;
    }
    assert(check(g2));

    for(int i=0;i<2*(n-1);i++)
    	cout<<(char)ans[i];

	
    return 0;
}
    
        
    
long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;
    
    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;

        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
        return result;
}
    
long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}
    
void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}
    
ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}