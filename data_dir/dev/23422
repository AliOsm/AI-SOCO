#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> // Common file
//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
//using namespace __gnu_pbds;
//typedef tree<
//        pair<int, int>, // change type
//        null_type,
//        less<pair<int, int> >, // change type
//        rb_tree_tag,
//        tree_order_statistics_node_update>
//        ordered_set;
typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define sz(x) (int)(x).size()
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(d, v) memset(d, v, sizeof(d))
#define pii pair<int, int>
const double PI = 3.14159265358979323846;
const double eps = (1e-8);int dcmp(long double x, long double y)
{
    if (abs(x - y) < eps)
        return 0;
    if (x > y)
        return 1;
    return -1;
}

int N;
vector<vector<int> > g;
bool check()
{
    set<int> xors;
    for (int i = 0; i < N; ++i)
    {
        int x = 0;
        for (int j = 0; j < N; ++j)
            x ^= g[i][j];
        xors.insert(x);
        if (sz(xors) > 1)
            return 0;
    }
    for (int j = 0; j < N; ++j)
    {
        int x = 0;
        for (int i = 0; i < N; ++i)
            x ^= g[i][j];
        xors.insert(x);
        if (sz(xors) > 1)
            return 0;
    }
    return 1;
}

void print()
{
    for (int i = 0; i < N; ++i)
    {
        for (int j = 0; j < N; ++j)
            cout << g[i][j] << ' ';
        cout << '\n';
    }
//    cout << endl;
}

void draw(int sti, int stj, int stv)
{
    for (int i = sti; i < sti + 4; ++i)
    {
        for (int j = stj, k = 0; j < stj + 4; ++j, ++k)
        {
            g[i][j] = stv + 4 * k;
        }
        stv++;
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
//    freopen("facebook.txt", "w", stdout);
#endif
    cin >> N;
    g.resize(N, vector<int>(N));
    int st = 0;
    for (int i = 0; i < N; i += 4)
    {
        for (int j = 0; j < N; j += 4)
        {
            draw(i, j, st);
            st += 16;
        }
    }
//    cout << check() << endl;
    print();
    return 0;
}