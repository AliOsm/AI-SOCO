#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}



int main()
{
    ll t;
    //t=1;
    cin>>t;
    while(t--)
    {
        ll n;
        cin>>n;
        ll i;
        ll c10=0,c01=0,c11=0,c00=0;
        set<string> s10,s01;
        vector<string> v(n+1);
        for(i=1;i<=n;i++)
        {
            string s;
            cin>>s;
            if(s[0]=='1' && s.back()=='0')
            {
                c10+=1;
                s10.insert(s);
            }
            else if(s[0]=='0' && s.back()=='1')
            {
                c01+=1;
                s01.insert(s);
            }
            else if(s[0]=='0' && s.back()=='0')
                c00+=1;
            else if(s[0]=='1' && s.back()=='1')
                c11+=1;
            v[i]=s;
        }
       // cout<<c11<<c00<<"**\n";
        if(c11 && c00 && c10==0 && c01==0)
        {
            cout<<"-1\n";
            continue;
        }
        vector<ll> ans;
        if(c10>c01+1)
        {
            for(i=1;i<=n;i++)
            {
                if(v[i][0]=='1' && v[i].back()=='0')
                {
                    string ss(v[i]);
                    reverse(ss.begin(),ss.end());
                    if(s01.find(ss)==s01.end())
                        ans.pb(i);
                }
            }
        }
        if(c01>c10+1)
        {
            for(i=1;i<=n;i++)
            {
                if(v[i][0]=='0' && v[i].back()=='1')
                {
                    string ss(v[i]);
                    reverse(ss.begin(),ss.end());
                    if(s10.find(ss)==s10.end())
                        ans.pb(i);
                }
            }
        }
        ll cnt=(max(c01,c10)-min(c01,c10))/2;
        cout<<cnt<<"\n";
        for(i=0;i<cnt;i++)
            cout<<ans[i]<<" ";
        cout<<"\n";

    }
}
