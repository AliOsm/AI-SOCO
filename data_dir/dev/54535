#include <bits/stdc++.h>

#define ll long long

using namespace std;
const int N = 1e5 + 5;
vector<vector<int> > g(N);
string s[N];
int f[N];
void fail(string &p) {
	for (int i = 1, j = 0; i < p.size(); i++) {
		while (j && p[i] != p[j])
			j = f[j - 1];
		j += p[i] == p[j];
		f[i] = j;
	}

}
int ans = 0;
string p;
int dp[N][27];
int get(int i, char x) {
	int &ret = dp[i][x - 'a'];
	if (ret != -1)
		return ret;
	if (!i)
		return ret = p[i] == x;
	if (p[i] == x)
		return ret = i + 1;
	return ret = get(f[i - 1], x);
}
void dfs(int node, int j) {
	for (int i = 0; i < g[node].size(); i++) {
		int t = j;
		for (int k = 0; k < s[g[node][i]].size(); k++) {
			t = get(t, s[g[node][i]][k]);
			if (t == p.size()) {
				ans++;
				t = f[t - 1];
			}
		}
		dfs(g[node][i], t);
	}
}

int main() {

	ios_base::sync_with_stdio(0);
	cin.tie(0);
	memset(dp, -1, sizeof dp);
	int n;
	cin >> n;
	for (int i = 2, p; i <= n; i++) {
		cin >> p >> s[i];
		g[p].push_back(i);
	}
	cin >> p;
	fail(p);
	dfs(1, 0);
	cout << ans << endl;

	return 0;
}
