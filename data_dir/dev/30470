#pragma comment (linker, "/STACK:64000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
#define pb push_back
#define pll pair<ll, ll>
#define pii pair<int, int>
#define piiii pair<pii, pii>
#define mp make_pair
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define rand32() (((unsigned int)(rand()) << 16) | (unsigned int)(rand()))
#define rand64() (((unsigned int64)(rand32()) << 16) | (unsigned int64)(rand32()))
#define INF ((int)(1e9) + 1)
#define LINF ((long long)(1e15))
#define EPS (1e-9)
#define PI (3.1415926535897932384626433832795)
#define y1 asdf_1
#define y0 asdf_2
#define j0 jj0
#define MOD 1000000007
//#define HMOD 536870911
//#define HMOD ((long long)(1e18) + 3LL)
//#ifdef _MY_DEBUG
//#define HMOD 1000000007
//#endif
#define MAX 2000000000
#define HBASE 1009
 
typedef long long int64;
typedef unsigned long long uint64;
typedef long double ldd;
 
using namespace std;
 

const int MAXN = 100500;

bool b[MAXN];
int m, n, c;

void solve()
{
	scanf ("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)
	{
		scanf ("%d", &c);
		int q;
		for (int j = 1; j <= c; j++)
		{
			scanf ("%d", &q);
			b[q] = true;
		}
	}
	for (int i = 1; i <= m; i++)
	{
		if (!b[i])
		{
			printf("NO\n");
			return;
		}
	}
	printf("YES\n");
}
 
#define TASK substr
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1363);
	solve();
    return 0;
} 