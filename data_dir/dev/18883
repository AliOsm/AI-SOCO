////////////////////////////////////////////    _LeMur_
#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 1000005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int n , m;

int main(){
	mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());
    cin >> n >> m;
    int r1 = 1 , r2 = n;
    int c = 1;
    while(r1 < r2){
        int c1 , c2 , d1 , d2;
        if(c == 1){
            c1 = 1;
            d1 = 1;
            c2 = m;
            d2 = -1;
        }
        else{
            c1 = m;
            d1 = -1;
            c2 = 1;
            d2 = 1;
        }
        for(int i=1;i<=m;i++){
            printf("%d %d\n",r1,c1);
            c1 += d1;
            printf("%d %d\n",r2,c2);
            c2 += d2;
        }
        c = (c == 1) ? m : 1;
        r1++;
        r2--;
    }
    if(r1 == r2){
        int c1 , c2 , d1 , d2;
        if(c == 1){
            c1 = 1;
            d1 = 1;
            c2 = m;
            d2 = -1;
        }
        else{
            c1 = m;
            d1 = -1;
            c2 = 1;
            d2 = 1;
        }
        for(int i=1;i<=m;i++){
            if(i % 2){
                printf("%d %d\n",r1,c1);
                c1 += d1;
            }
            else{
                printf("%d %d\n",r1,c2);
                c2 += d2;
            }
        }
    }
	return 0;
}
