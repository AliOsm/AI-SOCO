#include <bits/stdc++.h>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define all(v) v.begin(),v.end()
#define boost ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;

const ll INF=1e18;
const int inf = 2e9;
const ll mod = 1e9+7;
const ld pi = acos(-1);
const int dx[4]={0,0,1,-1};
const int dy[4]={1,-1,0,0};

ll binpow(ll x,ll y){
  if(y==0)return 1;
  if(y%2==1){
    return ((binpow(x,y-1)%mod)*x)%mod;
  }
  else {
    ll z=binpow(x,y/2)%mod;
    return (z*z)%mod;
  }
}

int main(){
  ll x;
  ll n;
  cin>>x>>n;
  ll ans=1;
  vector<int>p;
  for(ll i=2;i*i<=x;i++){
    if(x%i==0){
      p.pb(i);
      while(x%i==0){
        x/=i;
      }
    }
  }
  if(x>1)p.pb(x);
  for(int i=0;i<sz(p);i++){
    ll val=1;
    int j=0;
    ll m=n;
    while(1){
      if(m>=p[i]){
        m/=p[i];
        val*=p[i];
        j++;
      }
      else break;
    }
    ll sum=0;
    for(;j>=1;j--){
      ll cnt1=n/val;
      ll cnt2=cnt1-sum;
      ans=(ans*binpow(val%mod,cnt2))%mod;
      val/=p[i];
      sum+=cnt2;
    }
  }
  cout<<ans;
}
