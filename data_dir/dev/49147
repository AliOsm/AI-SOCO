#include <iostream>
#include <bits/stdc++.h>

using namespace std;
vector < int > v[4010];


int Cycle[4010];

bool vis[4010];
int color[4010],par[4010];

void DFS(int i, int p)
{
    if(color[i] == 2)  return ;

    if(color[i]==1){

        int cur = i;
        Cycle[cur] = -1;
        while(p != cur){
            Cycle[p] = -1;
            p = par[p];
        }
        return ;
    }
    par[i] = p;
    color[i] = 1;

    for(int j=0;j<v[i].size();j++){
        if(v[i][j]==par[i])  continue;
        DFS(v[i][j] , i);
    }
    color[i] = 2;
}

int DFS2(int i){

    vis[i] = true;
    if(Cycle[i]==-1)   return 0;

    int Answer = 1e6;

    for(int j=0;j<v[i].size();j++){
        if(!vis[v[i][j]])  Answer=min(Answer , DFS2(v[i][j]) + 1);
    }
    return Answer;
}

int main()
{

    int n,x,y;
    cin>>n;
    for(int i=0; i<n; i++)
    {
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    DFS(1,1);
    for(int i=1; i<=n; i++)  {
        memset(vis,0,sizeof(vis));
        cout<<DFS2(i)<<" ";
    }
    return 0;
}
