#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define N 1010
using namespace std;
int n,k;
int pos[5][N];
vector<int>nums[N];
int dp[N];
int dfs(int number) {
    if (dp[number]!=-1){
       return dp[number];
    }
    dp[number] = 1;
    int tmp = 0;
    for (int i = 0 ; i < nums[number].size(); ++i) {
        tmp = max(tmp, dfs(nums[number][i]));
    }
    dp[number] += tmp;
    return dp[number];
}
int main(){
    int number;
    while(cin>>n>>k){
         for(int i = 0; i < k ;++i){
                 for(int j = 0;j<n;++j){
                         cin>>number;
                         pos[i][number] = j;      
                 }
         }
         for(int i = 1;i <= n;++i){
                 nums[i].clear();
                 for(int j = 1;j <= n;++j){
                         if (i==j)continue;
                         bool ok = true;
                         for(int p = 0; p < k; ++p){
                                if(pos[p][i] < pos[p][j]){
                                            ok = false;
                                } 
                         }
                         if (ok) {
                            nums[i].push_back(j);        
                         }
                 }
         }
    /*     for (int i = 1;i<=n;++i){
             cout<<i<<endl;
             for(int j = 0;j<nums[i].size();++j)
                     cout<<nums[i][j]<<" ";
             cout<<endl;
         } */
         int ans = 0;
         memset(dp,-1,sizeof(dp));
         for (int i = 1; i <= n; ++i) {
             if (dp[i]==-1) {
                dfs(i);
                ans = max(ans, dp[i]);
             }
         }
         cout<<ans<<endl;
    }
    return 0;
}
