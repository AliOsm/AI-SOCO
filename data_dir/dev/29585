#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <queue>
#include <string.h>
#include <string>
#include <set>
#include <memory.h>
using namespace std;
#define ll long double

const int N = 1e3 + 15;

int dsu[N];
int f(int x) {
	if (dsu[x] == x) {
		return x;
	}
	return dsu[x] = f(dsu[x]);
}
void merge(int x, int y) {
	x = f(x), y = f(y);
	if (x != y) {
		dsu[x] = y;
	}
}

int val[N];
void solve() {
	int n, m;
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; ++i) {
		dsu[i] = i;
	}
	vector<pair<int, int> > v;
	for (int i = 0; i < m; ++i) {
		int l, r, t;
		scanf("%d %d %d", &t, &l, &r);
		if (t == 1) {
			for (int j = l + 1; j <= r; ++j) {
				merge(l, j);
			}
		}
		else {
			v.push_back(make_pair(l, r));
		}
	}
	vector<pair<int, int> > seg;
	for (int i = 1; i <= n;) {
		int j;
		for (j = i; j <= n; ++j) {
			if (f(j) != f(i)) {
				break;
			}
		}
		seg.push_back(make_pair(i, j - 1));
		i = j;
	}
	int maxi = 0;
	for (int i = (int)seg.size() - 1; i >= 0; --i) {
		int l = seg[i].first, r = seg[i].second;
		for (int j = l; j <= r; ++j) {
			val[j] = ++maxi;
		}
	}
	for (int i = 0; i < (int)v.size(); ++i) {
		int l = v[i].first, r = v[i].second;
		bool isSorted = true;
		for (int j = l + 1; j <= r; ++j) {
			if (val[j-1] > val[j]) {
				isSorted = false;
			}
		}
		if (isSorted) {
			printf("NO\n");
			return;
		}
	}
	printf("YES\n");
	for (int i = 1; i <= n; ++i) {
		printf("%d ", val[i]);
	}
	cout << endl;
}

int main() {
	//freopen("input.txt", "r", stdin);
	solve();
}