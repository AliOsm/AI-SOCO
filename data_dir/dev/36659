#include<bits/stdc++.h>
using namespace std;

#define x first
#define y second
#define pb push_back
#define mp make_pair

#define all(a) (a).begin(), (a).end()
#define sz(a) (int) (a).size()

#define int long long

const int N = 2e5 + 5;

int n, m, k, ans[N], v[N], u[N], c[N];
set<int> g[N];
bool us[N];

void bfs(deque<int> q) {
    for (auto v : q) {
        n--;
        us[v] = 1;
    }
    while (!q.empty()) {
        int v = q.front();
        q.pop_front();
        for (auto u : g[v]) {
            c[u]--;
            if (!us[u] && c[u] < k) {
                q.pb(u);
                n--;
                us[u] = 1;
            }
        }
    }
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> m >> k;
    for (int i = 0; i < m; i++) {
        cin >> v[i] >> u[i];
        v[i]--;
        u[i]--;
        c[v[i]]++;
        c[u[i]]++;
        g[v[i]].insert(u[i]);
        g[u[i]].insert(v[i]);
    }
    deque<int> q;
    for (int i = 0; i < n; i++) {
        if (c[i] < k) q.pb(i);
    }
    bfs(q);
    for (int i = m - 1; i > -1; i--) {
        ans[i] = n;
        if (!us[u[i]]) c[v[i]]--;
        if (!us[v[i]]) c[u[i]]--;
        g[v[i]].erase(u[i]);
        g[u[i]].erase(v[i]);
        q.clear();
        if (!us[v[i]] && c[v[i]] < k) q.pb(v[i]);
        if (!us[u[i]] && c[u[i]] < k) q.pb(u[i]);
        bfs(q);
    }
    for (int i = 0; i < m; i++) cout << ans[i] << '\n';
    return 0;
}
