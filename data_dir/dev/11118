#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long ll;
typedef pair <int,int> pii;

const int maxN = 200000 + 10;
int col[maxN],n,m,k;
int l[maxN],r[maxN],num;
int comp[maxN];
vector <int> adj[maxN];

bool mark[maxN];
map <int, int> cnt[maxN];
int mx[maxN];
int ans[maxN];

void dfs(int v)
{
    mark[v] = true;
    comp[v] = num;
    cnt[num][col[v]]++;
    if (cnt[num][col[v]] > mx[num])
    {
        mx[num] = cnt[num][col[v]];
        ans[num] = col[v];
    }
    
    for (int i = 0 ; i < adj[v].size() ; i++)
    {
        int u = adj[v][i];
        if (!mark[u])
            dfs(u);
    }
}

int32_t main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
    for (int i = 0 ; i < maxN ; i++)
        mx[i] = -1;

    cin >> n >> m >> k;
    for (int i = 0 ; i < n ; i++)
        cin >> col[i];

    int res = 0;
    for (int i = 0 ; i < m ; i++)
    {
        cin >> l[i] >> r[i];
        l[i]--;
        r[i]--;
        adj[l[i]].pb(r[i]);
        adj[r[i]].pb(l[i]);
    }

    for (int i = 0 ; i < n ; i++)
        if (!mark[i])
        {
            dfs(i);
            num++;
        }

    for (int i = 0 ; i < n ; i++)
        if (col[i] != ans[ comp[i] ])
            res++;
    cout << res << endl;
    return 0;
}