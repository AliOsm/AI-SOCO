//      ——By DD_BOND

//#include<bits/stdc++.h>
#include<functional>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<climits>
#include<cstring>
#include<cstdlib>
#include<cstddef>
#include<cstdio>
#include<memory>
#include<vector>
#include<cctype>
#include<string>
#include<cmath>
#include<queue>
#include<deque>
#include<ctime>
#include<stack>
#include<map>
#include<set>

#define fi first
#define se second
#define MP make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define pi 3.1415926535898
#define lowbit(a)  (a&(-a))
#define lson l,(l+r)/2,rt<<1
#define rson (l+r)/2+1,r,rt<<1|1
#define Min(a,b,c)  min(a,min(b,c))
#define Max(a,b,c)  max(a,max(b,c))
#define debug(x)  cerr<<#x<<"="<<x<<"\n";

using namespace std;

typedef long long ll;
typedef pair<int,int> P;
typedef pair<ll,ll> Pll;
typedef unsigned long long ull;

const ll LLMAX=2e18;
const int MOD=1e9+7;
const double eps=1e-8;
const int MAXN=1e6+10;
const int hmod1=0x48E2DCE7;
const int hmod2=0x60000005;

inline ll sqr(ll x){ return x*x; }
inline int sqr(int x){ return x*x; }
inline double sqr(double x){ return x*x; }
ll __gcd(ll a,ll b){ return b==0? a: __gcd(b,a%b); }
ll qpow(ll a,ll n){ll sum=1;while(n){if(n&1)sum=sum*a%MOD;a=a*a%MOD;n>>=1;}return sum;}
inline int dcmp(double x){	if(fabs(x)<eps) return 0;	return (x>0? 1: -1); }

ll tim[26],dp[26][110][110],ans[MAXN];

int main(void)
{
	ios::sync_with_stdio(false);    cin.tie(0);   cout.tie(0);
	// freopen("/My_Mac/Resource/Project__C++/testdata.in","r",stdin);
	//freopen("/My_Mac/Resource/Project__C++/testdata.out","w",stdout);
    ll n,k,sum=0;    string s;   cin>>n>>k>>s;
    for(int i=0;i<n;i++)
        if(tim[s[i]-'a']==0){
            tim[s[i]-'a']=1;
            dp[s[i]-'a'][i][1]=1;
        }
    for(int z=2;z<=n;z++){
        for(int i=0;i<n;i++){
            memset(tim,0,sizeof(tim));
            for(int j=i+1;j<n;j++)
                if(tim[s[j]-'a']==0){
                    tim[s[j]-'a']=1;
                    dp[s[j]-'a'][j][z]+=dp[s[i]-'a'][i][z-1];
                }
        }
    }
    ans[n]=1;
    for(int i=1;i<=n;i++)
        for(int j=0;j<26;j++)
            for(int z=0;z<n;z++)
                ans[n-i]+=dp[j][z][i];
    for(int i=0;i<=n;i++)
        if(k>=ans[i])   k-=ans[i],sum+=i*ans[i];
        else{ sum+=i*k,k=0; break; }
    if(k)   cout<<-1<<endl;
    else    cout<<sum<<endl;
	return 0;
}
