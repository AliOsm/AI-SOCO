// Sakhiya07 - Yagnik Sakhiya
 
#include <bits/stdc++.h>
using namespace std;
 
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define all(x) x.begin(),x.end()
#define pll pair<ll,ll>

#define mp make_pair
#define bp __builtin_popcountll
#define MOD  1000000007
const int N = 500005;
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);srand(time(NULL));
vector<ll> v[N];
ll peo[N],cnt = 0,k,a[N],ans[N];
pair<ll,ll> dis[N];
void dfs(ll id,ll p)
{
    ll sum = peo[id],mx1 = 0,mx2 = 0;
    for(auto X:v[id])
    {
        if(X!=p)
        {
            dfs(X,id);
            if(a[X]>0 && a[X]!=k)   cnt++;
            if(a[X]>0)    
            {
                ll temp = dis[X].ff + 1;
                if(mx1<=temp)   
                {
                    mx2 = mx1;
                    mx1 = temp;
                }
                else if(mx2<temp)   mx2 = temp;
            }
            sum += a[X];
        }
    }
    a[id] = sum;
    dis[id] = {mx1,mx2};
}
void dfs1(ll id,ll p)
{
    for(auto X:v[id])
    {
        if(X!=p)
        {
            ll temp = dis[id].ff+1;
            if(dis[X].ff+1==dis[id].ff)    temp = dis[id].ss+1;
            if(a[X]==k)      temp = 0;
            if(dis[X].ff<=temp)   dis[X].ss = dis[X].ff,dis[X].ff = temp;
            else if(dis[X].ss<=temp)   dis[X].ss = temp;
            ans[X] = dis[X].ff;
            dfs1(X,id);    
        }
    }
}
void solve()
{
    ll n;
    cin >> n >> k;
    for(ll i=0,x,y;i<n-1;i++)
    {
        cin >> x >> y;
        v[x].pb(y);
        v[y].pb(x);
    }
    for(ll i=0,x;i<k;i++)
    {
        cin >> x;
        peo[x] = 1;
    }
    dfs(1,0);
    ans[1] = dis[1].ff;
    cnt *= 2;
    dfs1(1,0);
    ll maxi=-1,id=-1;
    for(ll i=1;i<=n;i++)
    {
        if(peo[i])
        {
            if(maxi<ans[i])   
            {
                maxi = ans[i];
                id = i;
            }
        }
    }
    cnt -= maxi;
    cout<<id<<"\n"<<cnt<<"\n";
}

int main()
{
    FAST;
    ll t = 1;
    //cin >> t;
    while(t--)
    {
        solve();
    }
}