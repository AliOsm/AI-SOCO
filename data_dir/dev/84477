#include<bits/stdc++.h>
using namespace std;
char s[1005][1005];
int ans[1005][1005];
int dx[4] = {1, -1, 0, 0};
int dy[4] = {0, 0, 1, -1};
int seen[1005][1005];
int id, n, m, cnt, ind;
pair<int, int> p[1000005];
void dfs(int x, int y) {
	seen[x][y] = id;
	p[ind++] = make_pair(x, y);
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (nx < 0 || nx >= n || ny < 0 || ny >= m)
			continue;
		if (s[nx][ny] == '*') {
			cnt++;
			continue;
		}
		if (seen[nx][ny] == id)
			continue;
		seen[nx][ny] = id;
		dfs(nx, ny);
	}
}

int main() {
	ios::sync_with_stdio(false);

	int q; scanf("%d%d%d", &n, &m, &q);
	for (int i = 0; i < n; i++)
		scanf("%s", s[i]);
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			ans[i][j] = -1;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (ans[i][j] == -1 && s[i][j] == '.') {
				id++;
				cnt = 0;
				ind = 0;
				dfs(i, j);
				for (int a = 0; a < ind; a++) {
					int x = p[a].first;
					int y = p[a].second;
					ans[x][y] = cnt;
				}
			}
	while (q--) {
		int x, y; scanf("%d%d", &x, &y); --x; --y;
		printf("%d\n", ans[x][y]);
	}

	return 0;
}
