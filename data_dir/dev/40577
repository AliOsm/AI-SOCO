
#include <iostream>
#include <iterator>
#include <numeric>
#include <algorithm>
#include <vector>
#include <set>

#define FOR(i, n) for(int i = 0; i < n; i++)
#define FORK(i, k, n) for(int i = k; i < n; i++)
#define FORr(i, n) for(int i = n - 1; i >= 0; i--)
#define FORKr(i, k, n) for(int i = n - 1; i >= k; i--)
#define PRINT(a, b) copy((a), (b), ostream_iterator<int>(cout, " "))
#define all(a) a.begin(), a.end()
#define in(a, b) ((b).find(a) != (b).end())
#define sz(a) ((int) (a).size())
#define Mp make_pair
#define PII pair<int, int>
#define LL long long

using namespace std;

int n;
vector<int> a;

int depth(int l, int len) {
	if(len == 1) return 1;
	int d1 = depth(l, len / 2);
	int d2 = depth(l + len / 2, len / 2);
	if(a[l + len / 2 - 1] <= a[l + len / 2] && d1 == d2 && d1 == len / 2) {
		return len;
	}else {
		return max(d1, d2);
	}
}

int main() {
	std::ios_base::sync_with_stdio(false);
	cin >> n;
	a = vector<int>(n);
	FOR(i, n) cin >> a[i];
	cout << depth(0, n) << endl;
}
