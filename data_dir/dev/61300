#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <memory.h>
#include <deque>
#include <iomanip>
#include <utility>
#include <string>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf       
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define print(x) prf("%d\n", x.sz()); for (int i = 0; i < x.sz(); i++) prf("%d ", x[i]);
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i != end; i += move)
#define y1 awdaklg

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

int n;
int a[100500];

int main()
{
    scf("%d", &n);
    For(i, n)
        scf("%d", &a[i]);
    int ans = 0;
    bool f = false;
    For(i, n)
    {
        if (a[i] == 1 && !f)
            ans++, f = true;
        else if (a[i] == 1 && f)
            ans++;
        if (a[i] == 0 && i + 1 < n && i - 1 >= 0)
            if (a[i - 1] != 1 || a[i + 1] != 1)
                if (f)
                {
                    f = false;
                    for (int j = i + 1; j < n; j++)
                        if (a[j] == 1)
                        {
                            f = true;
                            break;
                        }
                    if (f)
                        ans++;
                    f = false;
                }
       if (a[i] == 0 && i + 1 < n && i - 1 >= 0)
        if (a[i - 1] == 1 && a[i + 1] == 1) 
            ans++;
    }                              
    prf("%d\n", ans);
    return 0;
}