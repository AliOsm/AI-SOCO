#include <bits/stdc++.h>
using namespace std;
//using lint = long long;

struct P
{
    int x,y,z;

    bool operator<(const P &a)const{
              return x<a.x;
    }

};

vector<int> v[1];
//bitset<4001000> b;
int a,c,i,b,n,m,k,d;//dy[15]={0,1,0,-1,-1,1,-1,1},dx[15]={1,0,-1,0,1,1,-1,-1};//
int o[331111];
int l[1];
int j[1];
int e;
int dx[10]={0,1,0,-1,1,1,-1,-1},dy[10]={1,0,-1,0,1,-1,1,-1},dz[10]={0,0,0,0,1,-1};
long long x,y,mod=1000000007,mod2=1000000009,mod3=2017;
long long z;
double pi=3.14159265;
P u[222221];
//stack<int> s;

//set<long long> s;
queue<P> q,q1;

//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
//map<int,int> p;
//list<int> l;

//string r,r1;
//char r[1333336];
//deque<int> de;
//srand((int)time(NULL));
bool as(P a,P b)
{

    return a.x<b.x;
}




int main()
{
    scanf("%d %d %d",&a,&b,&c);
    for(int t=1;t<=a;u[t].y=t,t++)
        scanf("%d",&u[t].x);
    sort(u+1,u+1+a,as);
    for(int t=1;t<=a;t++)
    {
        if(q.size()&&q.front().x<u[t].x)
        {
            o[u[t].y]=q.front().y;
            q.push({u[t].x+c,q.front().y});
            q.pop();
        }
        else
        {
            k++;
            o[u[t].y]=k;
            q.push({u[t].x+c,k});
            //k++;

        }
    }
    printf("%d\n",k);
    for(int t=1;t<=a;t++)
        printf("%d ",o[t]);
}
//1 4 3 2 1
