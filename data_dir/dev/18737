#include "bits/stdc++.h"
using namespace std;
vector<int> Graph[200005] , Odd , Even;
bool Visited[200005];

void dfs( int root , int level ){
    if( Visited[root] ) return;
    Visited[root] = true;
    if( level & 1 ) Odd.emplace_back( root );
    else Even.emplace_back( root );

    for( int i = 0 ; i < int(Graph[root].size()) ; ++i ){
        if( Visited[Graph[root][i]] == false ) dfs( Graph[root][i] , level + 1 );
    }
}

int main(){
    int t , n , m , u , v , i;
    scanf( "%d" , &t );

    while( t-- ){
        scanf( "%d%d" , &n , &m );

        for( i = 1 ; i <= m ; ++i ){
            scanf( "%d%d" , &u , &v );
            Graph[u].emplace_back( v );
            Graph[v].emplace_back( u );
        }

        fill( Visited , Visited + n + 1 , false );
        dfs( 1 , 1 );

        if( int(Odd.size()) <= n / 2 ){
            printf( "%d\n" , int(Odd.size()) );

            for( i = 0 ; i < int(Odd.size()) ; ++i )
                printf( "%d " , Odd[i] );

            puts( "" );
        }
        else{
            printf( "%d\n" , int(Even.size()) );

            for( i = 0 ; i < int(Even.size()) ; ++i )
                printf( "%d " , Even[i] );
            
            puts( "" );
        }

        Even.clear();
        Odd.clear();

        for( i = 1 ; i <= n ; ++i )
            Graph[i].clear();
    }

    return 0;
}