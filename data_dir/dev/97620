#include <iostream>
#include <algorithm>
using namespace std;

const int INF = 1e9 + 23;
const int N = 100 + 100;

int a[N];
int mn[N][N];

int main() {
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) {
		cin >> a[i];
		++a[i];
	}
	int r1, c1, r2, c2;
	cin >> r1 >> c1 >> r2 >> c2;
	if (r1 > r2) {
		r1 = n - r1 + 1;
		r2 = n - r2 + 1;
		reverse(a+1, a+1 + n);
	}
	
	for (int i = 1; i <= n; ++i) {
		mn[i][i] = a[i];
		for (int j = i+1; j <= n; ++j) {
			mn[i][j] = min(mn[i][j-1], a[j]);
		}
	}
	
	int ans = INF;
	for (int r = 1; r <= n; ++r) {
		int rowd = abs(r - r1) + abs(r2 - r);
		int mnc = (r < r1 ? mn[r][r2] : r < r2 ? mn[r1][r2] : mn[r1][r]);
		int	nc = min(c1, mnc);
		int cold = abs(nc - c2);
		ans = min(ans, rowd + cold);
	}
	cout << ans << '\n';
	return 0;
}