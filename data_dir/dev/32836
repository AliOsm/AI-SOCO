#include <bits/stdc++.h>

using namespace std;

int power(int n , int k){
  if(k < 1){
    return k == 0 ? 1 : n;
  }
  return n * power(n , k - 1);
}
string intToString(int N){
  string ret = "";
  while(N > 0){
    int dig = N % 10;
    ret += dig + '0';
    N /= 10;
  }
  reverse(ret.begin(), ret.end());
  return ret;
}
string get(string &s){
  int ret = 0;
  int sz  = (int)s.size();
  for(int i = 0; i < sz ; i++){
    ret *= 10;
    ret += s[i] - '0';
  }
  string ret2 = "";
  ret--;
  for(int i = 0; i < 7 ; i++){
      ret2 += 'A';
    if(ret >= power(26 , i + 1)){
      ret -= power(26 , i + 1);
    }else{break;}
  }
  for(int i = 0; i < (int)ret2.size(); i++){
    int cyc = power(26 , ((int)ret2.size() - i) - 1);
    int d = ret / cyc;
    ret2[i] = 'A' + d;
    ret -= cyc * d;
  }
  return ret2;
}
string go(string &s){
  string ret = "";
  string col = "";
  string row = "";
  int sz = (int)s.size();
  for(int i = 0; i < sz ; i++){
    if(s[i] >= 'A' && s[i] <= 'Z'){
      col += s[i];
    }else{
      row += s[i];
    }
  }
  //cout << row << " " << col << endl;
  int numberOfCol = 0; 
  int colSz = (int)col.size();
  for(int i = 0; i < colSz; i++){
    int idx = col[i] - 'A';
    numberOfCol += idx * power(26 ,((colSz - i) - 1) ); 
  }
  // 0 based
  numberOfCol++;
  for(int i = 1 ; i < colSz ; i++){
    numberOfCol += power(26 , i);
  }
  ret += 'R';
  ret += row;
  ret += 'C';
  ret += intToString(numberOfCol);
  return ret;
}
string go2(string &s , int &r , int &c){
  string ret = "";
  string row = "";
  string col = "";
  int sz = (int)s.size();
  for(int i = r + 1; i < c ; i++){
    if(s[i] >= '0' && s[i] <= '9'){
      row += s[i];
    }
  }
  for(int i = c + 1; i < sz ; i++){
    if(s[i] >= '0' && s[i] <= '9'){
      col += s[i];
    }
  }
 // cout << col << " " << row << endl;
  ret = get(col) + row;
  return ret;
}

int main(){
  ios::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  int n;
  string s;
  cin >> n;
  int sz = 0;
  while(n-- > 0){
    cin >> s;
    sz = (int)s.size();
    // find R and C
    int r = - 1;
    int c = -1;
    for(int i = 0; i < sz ; i++){
      r = s[i] == 'R' ? i : r;
      c = s[i] == 'C' ? i : c;
    }
    if(r != -1 && c != -1 && r + 1 != c && r == 0 && s[1] >= '1' && s[1] <= '9'){
      cout << go2(s , r , c) << endl;
    }else{
      cout << go(s) << endl;
    }
  }
  return 0;
}
