#include <bits/stdc++.h>
#include <random>


using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;

#define int ll

typedef pair<int, int> pii;
typedef pair<pii, pii> piii;
typedef vector<piii> vpii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<short> vs;
typedef vector<vs> vvs;
typedef vector<vvs> vvvs;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;
typedef vector<vvld> vvvld;
typedef vector<string> vst;
typedef vector<vst> vvst;
typedef pair<ld, ld> pld;
typedef complex<double> base;

#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a, b) make_pair(a, (b))
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define SZ(a) ((int)((a).size()))
#define triple(T) tuple<T, T, T>
#define quad(T) tuple<T, T, T, T>
#define watch(x) cout << (#x) << " = " << x << endl;
#ifdef MAX_HOME
#define cerr cout
#else
#define cerr if (false) cerr
#endif


void err(istream_iterator<string> it) {}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
    cerr << *it << " = " << a << endl;
    err(++it, args...);
}

const double PI = 2 * acos(0.0);

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rng_64(chrono::steady_clock::now().time_since_epoch().count());

istream &operator >> (istream &in, pii &a)
{
    in >> a.first >> a.second;
    return in;
}


ostream &operator << (ostream &out, pii &a)
{
    out << a.first << ' ' << a.second;
    return out;
}


template <class T0, class T1>
inline ostream & operator << (ostream &out, pair<T0, T1> &a) {
    return out << "{" << a.first << ", " << a.second << "}";
}

template <class T0, class T1, class T2>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) << ", " << get<2>(a) << "}";
}

template <class T0, class T1, class T2, class T3>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2, T3> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) <<
               ", " << get<2>(a) << ", " <<  get<3>(a) << "}";
}

template<class T>
inline ostream & operator << (ostream &out, vector<T> &a) {
    out << "[";
    fori (i, a.size())
        out << a[i] << vector<string>{", ", "]  "}[i + 1 == a.size()];
    return out;
}


void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n\nTOTAL EXECUTION TIME: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
}


const int N = 5e5 + 10, psze = 20, A = 26, L = 1 << 17, oo = 1e12, B = 400;
const ld EPS = 1e-9;


int sparce[N][psze];


void smain()
{
    int n, m;
    cin >> n >> m;

    vpi lel(n);
    for (int i = 0; i < n; ++i)
        cin >> lel[i];

    vi mx(n);
    stable_sort(ALL(lel));

    mx[0] = lel[0].second;
    for (int i = 1; i < n; ++i)
        mx[i] = max(mx[i - 1], lel[i].second);

    for (int i = 0; i < N; ++i)
    {
        int l = -1, r = SZ(lel);
        while (r - l > 1)
        {
            int m = (l + r) >> 1;

            if (lel[m].first > i)
                r = m;
            else
                l = m;
        }

        if (l == -1 || mx[l] < i)
            sparce[i][0] = i;
        else
            sparce[i][0] = mx[l];
    }

    for (int h = 1; h < psze; ++h)
    {
        for (int i = 0; i < N; ++i)
        {
            if (sparce[i][h - 1] >= N || sparce[i][h - 1] < 0)
                sparce[i][h] = sparce[i][h - 1];
            else
                sparce[i][h] = sparce[sparce[i][h - 1]][h - 1];
        }
    }

    for (int i = 0; i < m; ++i)
    {
        int x, y;
        cin >> x >> y;

        int ans = 0;
        int label = 0;
        for (int h = psze - 1; h >= 0; --h)
        {
            if (sparce[x][h] >= y)
                label = 1;
            else
                x = sparce[x][h], ans += (1 << h);
        }

        if (label)
            cout << ans + 1 << '\n';
        else
            cout << "-1\n";
    }
}