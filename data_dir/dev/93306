#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXN = 200005;
int N, M, K;
int in[MAXN];
P2 offers[MAXN];
LL dp[MAXN];

LL sumr[MAXN];

LL sum_range(int a, int b) {
    if (a == 0)
        return sumr[b];
    return sumr[b] - sumr[a - 1];
}

int main() {
    scanf("%d %d %d", &N, &M, &K);
    REP(i, N) {
        scanf("%d", &in[i]);
    }

    sort(in, in + N);
    sumr[0] = in[0];
    for (int i = 1; i < N; i++) {
        sumr[i] = sumr[i - 1] + in[i];
    }
    REP(i, M) {
        scanf("%d %d", &offers[i].x, &offers[i].y);
    }
    REP(i, K) {
        dp[i] = 1LL<<62;
    }
    dp[K] = 0;

    for (int i = K - 1; i >= 0; i--) {
        LL sum = 0;
        for (int j = i; j < K; j++) {
            sum += in[j];
            mina(dp[i], sum + dp[j + 1]);
        }
        REP(j, M) {
            if (offers[j].x + i <= K) {
                mina(dp[i], sum_range(i + offers[j].y, i + offers[j].x - 1) + dp[offers[j].x + i]);
            }
        }
    }
    cout << dp[0] << endl;
    return 0;
}
