#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

string s1[10],s2[10],score[10];
map <string, int> mp;
string name[10];
int a[10][10];

bool better(int x, int y){ // x is better than y
    int i;
    int sx = 0, px = 0, mx = 0, sy = 0, py = 0, my = 0;
    
    REP(i,4) if(i != x){
        if(a[x][i] > a[i][x]) sx += 3; else if(a[x][i] == a[i][x]) sx++;
        px += a[x][i];
        mx += a[i][x];
    }
    
    REP(i,4) if(i != y){
        if(a[y][i] > a[i][y]) sy += 3; else if(a[y][i] == a[i][y]) sy++;
        py += a[y][i];
        my += a[i][y];
    }
    
    if(sx != sy) return (sx > sy);
    if(px - mx != py - my) return (px - mx > py - my);
    if(px != py) return (px > py);
    return (x < y);
}

bool check(int x, int y){
    int i;
    
    int b = mp["BERLAND"];
    int c;
    REP(i,4) if(i != b && a[b][i] == -1) c = i;
    a[b][c] = x; a[c][b] = y;
    
    int rank = 1;
    REP(i,4) if(i != b && better(i,b)) rank++;
    
    a[b][c] = a[c][b] = -1;
    
    return (rank <= 2);
}

int main(void){
    int d,i,j;
    
    REP(i,5) cin >> s1[i] >> s2[i] >> score[i];
    
    REP(i,5) mp[s1[i]] = mp[s2[i]] = 0;
    i = 0;
    foreach(mp,itr){
        (itr->second) = i;
        name[i] = (itr->first);
        i++;
    }
    
    REP(i,4) REP(j,4) a[i][j] = -1;
    REP(i,5){
        int x = mp[s1[i]], y = mp[s2[i]];
        REP(j,score[i].length()) if(score[i][j] == ':') score[i][j] = ' ';
        istringstream ss(score[i]);
        ss >> a[x][y] >> a[y][x];
    }
    
    for(d=1;d<100;d++) REP(i,100){
        j = i + d;
        if(check(j,i)){
            cout << j << ":" << i << endl;
            return 0;
        }
    }
    
    cout << "IMPOSSIBLE" << endl;
    
    return 0;
}
