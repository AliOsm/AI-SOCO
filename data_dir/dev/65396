#include <bits/stdc++.h>

using namespace std;

int n, m, k, path;
char grid[505][505];
bool vis[505][505];
int dx[] = {1, 0, -1, 0};
int dy[] = {0, 1, 0, -1};

bool valid(int i, int j) {
  return i >= 0 && j >= 0 && i < n && j < m && grid[i][j] == '.';
}

int cnt = 0;
void DFS(int x, int y) {
  vis[x][y] = 1;
  cnt++;
  if (path < k + cnt)
    grid[x][y] = 'X';
  for (int i = 0; i < 4; ++i) {
    if (valid(x + dx[i], y + dy[i]) && !vis[x + dx[i]][y + dy[i]]) {
      DFS(x + dx[i], y + dy[i]);
    }
  }
}

int main() {
  scanf("%d %d %d", &n, &m, &k);
  int x, y;
  bool check = 1;
  for (int i = 0; i < n; ++i) {
    char c;
    scanf("%c", &c);
    for (int j = 0; j < m; ++j) {
      scanf("%c", grid[i] + j);
      if (grid[i][j] == '.') {
        path++;
        if (check) {
          x = i;
          y = j;
          check = 0;
        }
      }
    }
  }
  DFS(x, y);
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      putchar(grid[i][j]);
    }
    putchar('\n');
  }
}

