/*input
1 1 1
937982044
179683049
1 1 821220804
*/
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define int long long
#define N 100005
#define bit(x,y) ((x>>y)&1LL)
#define show(x) cout << (#x) << ": " << x << endl;
#define ii pair<int,int>
ostream& operator << (ostream &os, vector<int>&x) {
	for (int i = 0; i < x.size(); i++) os << x[i] << sp;
	return os;
}
ostream& operator << (ostream &os, pair<int, int> x) {
	cout << x.fi << sp << x.se << sp;
	return os;
}
ostream& operator << (ostream &os, vector<pair<int, int> >&x) {
	for (int i = 0; i < x.size(); i++) os << x[i] << endl;
	return os;
}
int n, m, q;
int a[N];
int b[N];
int cursum = 0;
vector<int> sumb;

signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	cin >> n >> m >> q;
	for (int i = 1; i <= n; i++) cin >> a[i];
	for (int i = 1; i <= m; i++) cin >> b[i];
	for (int i = 1; i <= n; i++) {
		if (i % 2 == 1) cursum += a[i];
		else cursum -= a[i];
	}
	int sumeven = 0, sumodd = 0;
	for (int i = 1; i <= n - 1; i++) {
		if (i % 2 == 1) sumodd += b[i];
		else sumeven += b[i];
	}
	for (int j = 0; j <= m - n; j++) {
		if ((n + j) % 2 == 0) sumeven += b[n + j];
		else sumodd += b[n + j];
		if (j % 2 == 0) {
			int x = sumodd - sumeven;
			sumb.push_back(x);
			sumodd -= b[j + 1];
		}
		else {
			int x = sumeven - sumodd;
			sumb.push_back(x);
			sumeven -= b[j + 1];
		}
	}
	sort(sumb.begin(), sumb.end());
	for (int i = 0; i <= q; i++) {
		if (i != 0) {
			int l, r, x; cin >> l >> r >> x;
			int nl = l, nr = r;
			if (nl % 2) nl++; if (nr % 2)nr--;
			cursum -= ((nr - nl) / 2 + 1) * x;
			nl = l; nr = r;
			if (nl % 2 == 0)nl++; if (nr % 2 == 0) nr--;
			cursum += ((nr - nl) / 2 + 1) * x;
		}
		auto it = lower_bound(sumb.begin(), sumb.end(), cursum);
		int res = 1e18;
		if (it != sumb.end())
			res = min(res, abs(*it - cursum));
		it = upper_bound(sumb.begin(), sumb.end(), cursum);
		if (it != sumb.begin()) {
			it--;
			res = min(res, abs(*it - cursum));
		}
		cout << res << endl;
	}
}