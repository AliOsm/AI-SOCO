#include <bits/stdc++.h>
using namespace std;

struct data
{
    int l,r,id;
};

const int block=450;
data Q[200005];
int n,T;
int64_t a[200005],rs[200005],f[1000005];

bool cmp(data x1,data x2)
{
    if(x1.l/block==x2.l/block)
        return x1.r<x2.r;
    return x1.l/block<x2.l/block;
}

int main()
{
    //freopen("86D.INP","r",stdin);
    scanf("%d%d",&n,&T);
    for(int i=1;i<=n;i++)
        scanf("%I64d",&a[i]);
    for(int i=1;i<=T;i++)
    {
        scanf("%d%d",&Q[i].l,&Q[i].r);
        Q[i].id=i;
    }
    sort(Q+1,Q+T+1,cmp);
    int l=1,r=0;
    int64_t sum=0;
    for(int i=1;i<=T;i++)
    {
        while(r<Q[i].r)
        {
            r++;
            sum+=a[r]*(2*f[a[r]]+1);
            f[a[r]]++;
        }
        while(l>Q[i].l)
        {
            l--;
            sum+=a[l]*(2*f[a[l]]+1);
            f[a[l]]++;
        }
        while(r>Q[i].r)
        {
            sum-=a[r]*(2*f[a[r]]-1);
            f[a[r]]--;
            r--;
        }
        while(l<Q[i].l)
        {
            sum-=a[l]*(2*f[a[l]]-1);
            f[a[l]]--;
            l++;
        }
        rs[Q[i].id]=sum;
    }
    for(int i=1;i<=T;i++)
        printf("%I64d\n",rs[i]);
}
