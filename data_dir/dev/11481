#include <iostream>
#include <iomanip>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

bool check(pair<int, int> x, pair<int, int> y, vector<vector<int> >& dp1, vector<vector<int> >& dp2) {

    if (x.first == y.first) {
        if (x.second <= y.second) {
            if (y.second - dp2[y.first][y.second] + 1 <= x.second)
                return true;
        }
        else {
            if (x.second - dp2[x.first][x.second] + 1 <= y.second)
                return true;
        }
    }

    if (x.second == y.second) {
        if (x.first <= y.first) {
            if (y.first - dp1[y.first][y.second] + 1 <= x.first)
                return true;
        }
        else {
            if (x.first - dp1[x.first][x.second] + 1 <= y.first)
                return true;
        }
    }

    return false;
}


int main() {

    int n, k;
    cin >> n >> k;
    vector<vector<char> >m(n, vector<char>(k));

    vector<vector<int> > dp1(n, vector<int>(k, 0));
    vector<vector<int> > dp2(n, vector<int>(k, 0));

    pair<int, int> x, y;
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < k; ++j) {
            cin >> m[i][j];
            if (m[i][j] == 'S') {
                x = make_pair(i, j);
                m[i][j] = '.';
            }
            if (m[i][j] == 'T') {
                y = make_pair(i, j);
                m[i][j] = '.';
            }
        }

    for (int j = 0; j < k; ++j)
        if (m[0][j] == '.')
            dp1[0][j] = 1;
    for (int i = 1; i < n; ++i)
        for (int j = 0; j < k; ++j) {            
            if (m[i][j] == '.')
                dp1[i][j] = dp1[i - 1][j] + 1;
            else
                dp1[i][j] = 0;
        }

    for (int i = 0; i < n; ++i)
        if (m[i][0] == '.')
            dp2[i][0] = 1;
    for (int i = 0; i < n; ++i)
        for (int j = 1; j < k; ++j)
            if (m[i][j] == '.')
                dp2[i][j] = dp2[i][j - 1] + 1;
            else
                dp2[i][j] = 0;
    

    if (check(x, y, dp1, dp2))
    {
        cout << "YES\n";
        return 0;
    }

    for (int i = 0; i < n; ++i) {
        if (m[i][x.second] == '.' && m[i][y.second] == '.' && check(make_pair(i, x.second), x, dp1, dp2) && check(make_pair(i, y.second), y, dp1, dp2) && check(make_pair(i, x.second), make_pair(i, y.second), dp1, dp2))
        {
            cout << "YES\n";
            return 0;
        }
    }

    for (int j = 0; j < k; ++j) {
        if (m[x.first][j] == '.' && m[y.first][j] == '.' && check(make_pair(x.first, j), x, dp1, dp2) && check(make_pair(y.first, j), y, dp1, dp2) && check(make_pair(x.first, j), make_pair(y.first, j), dp1, dp2))
        {
            cout << "YES\n";
            return 0;
        }
    }

    cout << "NO\n";
    return 0;
}