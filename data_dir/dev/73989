#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 1e5 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

int u[Max];
int v[Max];
int sum[Max];
int ans;

bool vist[Max];

vector<int>G[Max];

int dfs( int src, int par ){
	vist[src] = 1;
	sum[src] = 1;
	for(int x : G[src]){
		if( x != par ){
                        sum[src] += dfs( x, src );
                        //sum[src] += sum[x];
		}
	}
	if( sum[src] % 2 == 0 ) {
                ans += sum[src] - 1;
                sum[src] = 0;
	}
	return sum[src];
}

//stack<int>st;
//
//
//void topo( int src ) {
//        vist[src] = 1;
//        for( int x : G[src] ) {
//                if( !vist[x] ) topo( x );
//        } st.push( src );
//}

int main() {
#ifdef Mr_Emrul
        freopen("inputf.in", "r", stdin);
#endif ///Mr_Emrul

        //ios_base::sync_with_stdio(false);
        //cin.tie(0);

        int n;
        cin >> n;
        int res = 0;
        if( n & 1 ) {
                res = -1;
                cout << -1 << endl;
                return 0;
        }
        int cnt = 0;
        for( int i=1; i<n; i++ ) {
                cin >> u[i] >> v[i];
                G[u[i]].push_back(v[i]);
                G[v[i]].push_back(u[i]);
        }
//        for( int i=1; i<=n; i++ ) {
//                if( !vist[i] ) topo( i );
//        }

//        for( int i=1; i<n; i++){
//                int x = n - sum[v[i]];
//                if( x & 1 ) continue;
//                if( sum[v[i]] & 1 ) continue;
//                //cout << x << " : " << sum[v[i]] << endl;
//                cnt++;
////                cnt=max(cnt);
//        }
        if( dfs( 1, -1 ) & 1 ) cout << -1 << endl;
        else {
                cout << (n-1)-sum[1]-ans << endl;
        }
        return 0;
}
