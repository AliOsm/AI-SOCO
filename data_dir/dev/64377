#include <iostream>
#include <vector>
#include <algorithm>
#include <iterator>
#include <utility>
#include <functional>

using namespace std;

ostream& operator<< (ostream &strm, const vector<pair<int, int>> &v)
{
	for (auto it = v.begin(); it != v.end(); ++it)
		strm << it->second << " ";
	return strm;
}

int main()
{
	vector<pair<int, int>> jobs;
	int n = *istream_iterator<int>(cin);

	for (int i = 0; i < n; i++)
		back_inserter(jobs) = (make_pair(*istream_iterator<int>(cin), i + 1));

	sort (jobs.begin(), jobs.end());

	//function<bool(const pair<int, int>&, const pair<int, int>&)> 
	auto eq = [] (const pair<int, int> &a, const pair<int, int> &b) {return a.first == b.first;};

	auto first = adjacent_find (jobs.begin(), jobs.end(), eq);
	if (first == jobs.end()) {
		cout << "NO";
		return 0;
	}

	auto second = adjacent_find (first + 1, jobs.end(), eq);
	if (second == jobs.end()) {
		cout << "NO";
		return 0;
	}

	cout << "YES" << endl;
	
	cout << jobs << endl;

	iter_swap (first, first + 1);
	cout << jobs << endl;

	iter_swap (second, second + 1);
	cout << jobs << endl;
}
