//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define iinf (3000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
int val1;
vi v,v1;
int a[100005],val[100005];
vector <vi  >adj(100005);
int dfs(int cur,int prev){
	int i;
	if(val[cur]==0){
		val1=a[cur];
		v1.pb(val1);
	}
	else{
		if(a[cur]!=val1&&a[cur]!=cur+1){
			cout<<-1<<endl;
			exit(0);
		}
		else if(a[cur]!=val1){
			val1=a[cur];
			v1.pb(val1);
		}
	}
	
	rep(i,adj[cur].size()){
		if(adj[cur][i]!=prev){
			dfs(adj[cur][i],cur);
			val1=a[cur];
		}
	}
	
}
int main(){
	std::ios::sync_with_stdio(false);
	int n,m,i,p,q;
	cin>>n>>m;
	rep(i,m){
		cin>>p>>q;
		p--;
		q--;
		adj[p].pb(q);
		adj[q].pb(p);
		val[q]=1;
	}
	rep(i,n){
		if(val[i]==0){
			v.pb(i);
		}
	}
	rep(i,n){
		cin>>a[i];
	}
	rep(i,v.size()){
		dfs(v[i],-1);
	}
	cout<<v1.size()<<endl;
	fd(i,v1.size()-1,0){
		cout<<v1[i]<<endl;
	}
} 
