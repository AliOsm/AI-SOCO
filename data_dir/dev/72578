/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)2e5+7;

// ------- 变量 ------- //

int n, k;
map <int, int> cnt;
vi v;
int C[N], inv[N];

// ------- 函数 ------- //

inline int add(ll a, ll b) { if ((a += b) >= MOD) a -= MOD; return a; }
inline int mul(ll a, ll b) { if ((a *= b) >= MOD) a %= MOD; return a; }

void Init() {
    memset(C, 0, sizeof(C));
    v.clear(); cnt.clear();

    C[k] = inv[1] = 1;
    rep(i, 2, N) inv[i] = mul(inv[MOD%i], MOD - MOD / i);
    rep(i, k+1, N) C[i] = mul(mul(C[i-1], i), inv[i-k]);

    rep(i, 0, n) {
        int l, r; scanf("%d%d", &l, &r);
        v.pb(l); v.pb(r+1);
        cnt[l]++;
        cnt[r+1]--;
    }
}

int Solve() {
    sort(all(v));
    int pre = -INF, num = 0, ans = 0;
    for (auto o : v) {
        if (num >= k) ans = add(ans, mul(o - pre, C[num])); 
        if (pre != o) { pre = o; num += cnt[o]; }
    }
    return printf("%d\n", ans);
}

// ------- main ------- //

int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);

    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &k)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}
