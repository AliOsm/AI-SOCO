#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <deque>
#include <utility>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define For(i,n) for (int i = 0; i < n; ++i)

typedef long long ll;

int n,m;
int x,y;
vector < int > balance, cur;
set < int > ok;
set < int > :: iterator it;

void go_down(int node, int w)
{
            while (true)
            {
                  if (!w || !ok.size())
                      break;
                  it = ok.lower_bound(node);
                  int p = *it;
                  if (p > n)
                      break;
                  if (w+cur[p]>=balance[p])
                  {
                                           w -= (balance[p]-cur[p]);
                                           cur[p] = balance[p];
                                           ok.erase(it);
                  }
                  else
                  {
                      cur[p] += w;
                      w = 0;
                  }
            }
}
                                           
int main()
{
    scanf("%d", &n);
    For(i,n)
    {
            scanf("%d", &x);
            balance.pb(x);
            cur.pb(0);
            ok.insert(i);
    }
    ok.insert(99999999);
    scanf("%d", &m);
    For(i,m)
    {
            scanf("%d", &x);
            if (x == 1)
            {
                  scanf("%d%d", &x, &y);
                  --x;
                  go_down(x,y);
            }
            else if (x == 2)
            {
                 scanf("%d", &x);
                 --x;
                 printf("%d\n",cur[x]);
            }
    }
    return 0;
}    
