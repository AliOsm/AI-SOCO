#include <iostream>
#include <vector>
#include <fstream>

using namespace std;

class Tree {

public:

    Tree* left = nullptr; // 0
    Tree* right = nullptr; // 1
    int cnt = 0;

};

Tree *tree = new Tree();

void add(int p, int c) {
    int value = 1;
    for (int i = 1; i <= 30; ++i) {
        value *= 2;
    }
    Tree *node = tree;
    for (int i = 29; i >= 0; --i) {
        value /= 2;
        int q;
        if (p >= value) {
            p -= value;
            q = 1;
        } else {
            q = 0;
        }
        if (q == 0) {
            if (node->left == nullptr) {
                node->left = new Tree();
            }
            node = node->left;
        } else {
            if (node->right == nullptr) {
                node->right = new Tree();
            }
            node = node->right;
        }
        node->cnt += c;
    }
}

int find(int a) {
    int value = 1;
    for (int i = 1; i <= 30; ++i) {
        value *= 2;
    }
    Tree *node = tree;
    int p = 0;
    for (int i = 29; i >= 0; --i) {
        value /= 2;
        int q;
        if (a >= value) {
            a -= value;
            q = 1;
        } else {
            q = 0;
        }
        if (q == 1) {
            if (node->right == nullptr || node->right->cnt == 0) {
                node = node->left;
            } else {
                node = node->right;
                p += value;
            }
        } else {
            if (node->left == nullptr || node->left->cnt == 0) {
                node = node->right;
                p += value;
            } else {
                node = node->left;
            }
        }
    }
    return p;
}

int main () {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    //ifstream cin("input.txt");
    int n;
    cin >> n;
    int a[n];
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    int p;
    for (int i = 0; i < n; ++i) {
        cin >> p;
        add(p, 1);
    }
    for (int i = 0; i < n; ++i) {
        p = find(a[i]);
        add(p, -1);
        p^=a[i];
        cout << p << " ";
    }
    cout << "\n";
    return 0;
}