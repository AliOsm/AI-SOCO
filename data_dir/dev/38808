
//     . .. ... ..... be naame khodaa ..... .... ... .. .     \\

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
#define pb push_back

inline int in(){int x, y; y = scanf("%d", &x); return x;}

const int N = 321123;

vector <int> g[N];
int dist[N], par[N];
vector <int> comp;
int d2[N];
bool mark[N];
map <pair<int, int>, int> mp;

void dfs(int v)
{
	int cnt = 0;
	mark[v] = true;
	comp.push_back(v);
	for(int u : g[v])
		if(!mark[u])
			dfs(u);
}

int have(int u, int v) { return mp[make_pair(u, v)]; }

int main()
{
	int n = in(), m = in();
	for(int i = 0; i < m; i++)
	{
		int u = in() - 1, v = in() - 1;
		g[u].push_back(v);
		g[v].push_back(u);
		mp[{u, v}] = mp[{v, u}] = 1;
	}
	queue <int> q;
	q.push(0);
	fill(dist + 1, dist + n, 1e9);
	fill(par, par + n, -1);
	while(q.size())
	{
		int v = q.front();
		q.pop();
		for(int u : g[v])
			if(dist[u] > dist[v] + 1)
			{
				dist[u] = dist[v] + 1;
				par[u] = v;
				q.push(u);
			}
	}
	if(dist[n - 1] <= 4)
	{
		cout << dist[n - 1] << endl;
		vector <int> p;
		for(int t = n - 1; t != -1; t = par[t])
			p.push_back(t);
		for(; p.size(); p.pop_back())
			cout << p.back() + 1 << " ";
		cout << endl;
		return 0;
	}
	int ki = -1;
	for(int i = 0; i < n; i++)
		if(dist[i] == 2)
			ki = i;
	if(ki != -1)
	{
		cout << 4 << endl;
		cout << "1 " << par[ki] + 1 << " " << ki + 1 << " 1 " << n << endl;
		return 0;
	}
	mark[0] = true;
	for(int i = 0; i < n; i++)
		if(dist[i] == 1 && !mark[i])
		{
			comp.clear();
			dfs(i);
			for(int u : comp)
			{
				assert(g[u].size() <= comp.size());
				if(g[u].size() < comp.size())
				{
					for(int v : g[u])
						if(v != 0)
							for(int w : g[v])
								if(u != w && 0 != w)
									if(!have(u, w))
									{
										cout << 5 << endl;
										cout << "1 " << u + 1 << " " << v + 1 << " " << w + 1 << " " << u + 1 << " " << n << endl;
										return 0;
									}
					assert(false);
				}
			}
		}
	cout << "-1\n";
}
