#include <bits/stdc++.h>
using namespace std;
int mat[1001][1001];
int dist[2][1001];
int n;
void bfs(int st,bool c){
    dist[c][st]=0;
    queue<int>q;
    q.push(st);
    while(!q.empty()){
        int u=q.front();
        q.pop();
        for(int i=1;i<=n;i++){
            if(mat[u][i]&&(dist[c][i]==-1||dist[c][i]>dist[c][u]+1)){
                dist[c][i]=dist[c][u]+1;
                q.push(i);
            }
        }
    }

}
int main()
{
    memset(dist,-1,sizeof dist);
    cin>>n;
    int m;
    cin>>m;
    int st,en;
    cin>>st>>en;
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        mat[a][b]=1;
        mat[b][a]=1;
    }
    bfs(st,0);
    bfs(en,1);
    int ans=0;
    for(int i=1;i<=n;i++){
        for(int j=i+1;j<=n;j++){
            if(mat[i][j])continue;
            if(dist[0][i]+dist[1][j]+1>=dist[0][en]&&dist[1][i]+dist[0][j]+1>=dist[0][en]){
                ans++;
            }
        }
    }
    cout<<ans<<endl;
}
