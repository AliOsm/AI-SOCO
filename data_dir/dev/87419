#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

double dp[2][2000][2000];
bool vis[2][2000][2000]={};

double Dp(int x,int a,int b)
{
	if(x<0 || a<0 || b<0) return 0;
	double &res=dp[x][a][b];
	if(vis[x][a][b]) return res;
	vis[x][a][b]=true;
	if(a==0) return res=x;
	else if(b==0) return res=1;
	if(x==0)
		return res=(double(a)+double(b)*(1-Dp(1,a,b-1)))/(a+b);
	else
	{
		double tmp=(double(a)*(1-Dp(0,a-1,b-1))+double(b-1)*(1-Dp(0,a,b-2)))/(a+b-1);
		return res=(double(a)+double(b)*tmp)/(a+b);
	}
}

int main(void)
{
	int w,b; cin>>w>>b;
	printf("%.20lf\n",Dp(0,w,b));
}