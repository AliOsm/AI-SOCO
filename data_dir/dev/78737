#include <bits/stdc++.h>

// limit
#define oo 1000000007
#define OO 1000000000000000007LL

// loop
#define fto(i, x, y) for(int i = (x); i <= (y); ++i)
#define fdto(i, x, y) for(int i = (x); i >= (y); --i)
#define ftoa(i, x, y, a) for(int i = (x); i <= (y); i += a)
#define fdtoa(i, x, y, a) for(int i = (x); i >= (y); i -= a)
#define ftoit(it, var) for (__typeof(var.begin()) it = var.begin(); it != var.end(); ++it)
#define fdtoit(rit, var) for (__typeof(var.rbegin()) rit = var.rbegin(); rit != var.rend(); ++rit)

// debug
#define debug cout << "*" << endl;
#define bug1d(a, x, y) { cout << #a << ": "; fto(_, x, y) cout << a[_] << ' '; cout << endl; }
#define bug2d(a, x, y, u, v) { cout << #a << ": " << endl; fto(i, x, y) {fto(j, u, v) cout << a[i][j] << ' '; cout << endl;}; cout << endl;}
#define bug(a) cout << #a << " = " << a << endl;
#define bug2(a, b) cout << #a << " = " << a << "; "; cout << #b << " = " << b << endl;
#define bug3(a, b, c) cout << #a << " = " << a << "; "; cout << #b << " = " << b << "; "; cout << #c << " = " << c << endl;

// operation
#define mp make_pair
#define pb push_back
#define pf push_front

// structure
#define ii pair<int, int>
#define iii pair<ii, int>
#define vi vector<int>
#define vll vector<ll>
#define vii vector<ii>

// get value
#define FF first
#define SS second

// data type
#define ll long long
#define ull unsigned long long

// function
#define lb lower_bound
#define ub upper_bound

using namespace std;

#define Pro "tmp"
#define maxN 1000007

char tmp[maxN];
int p[maxN];

int cnt[10];
int val[10];

int main() {
    #ifndef ONLINE_JUDGE
        freopen(Pro".inp", "r", stdin);
        freopen(Pro".out", "w", stdout);
    #endif // ONLINE_JUDGE

    string s;
    scanf("%s", tmp);

    s.assign(tmp);
    int n = (int)s.size();

    vi vc;
    vc.pb(1); vc.pb(6); vc.pb(8); vc.pb(9);

    p[0] = 1;
    fto (i, 1, n) p[i] = (p[i-1]*10)%7;

    string str = "";
    fto (i, 0, (int)s.size()-1) {
        bool check = 1;
        fto (j, 0, 3) {
            int j_ = vc[j];
            if (!cnt[j_] && (s[i]-'0' == j_)) {
                cnt[j_] = 1;
                check = 0;
                break;
            }
        }
        if (check) str += s[i];
    }
    sort(str.begin(), str.end());

    int sum = 0;
    fto (i, 0, (int)str.size()-1) {
        sum += (str[i]-'0')*p[i];
        sum %= 7;
    }
    reverse(str.begin(), str.end());

    do {
        int res = vc[0]*p[n-1]+vc[1]*p[n-2]+vc[2]*p[n-3]+vc[3]*p[n-4];
        val[res%7] = vc[0]*1000+vc[1]*100+vc[2]*10+vc[3];
    }
    while (next_permutation(vc.begin(), vc.end()));

    cout << val[(7-sum)%7] << str << endl;
    return 0;
}
