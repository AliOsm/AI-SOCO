#include <bits/stdc++.h>
#include <math.h>
#define fr first
#define sc scanf
#define pf printf
#define se second
#define dl double
#define ll long long
#define pb push_back
#define mk make_pair
#define pr pair<int,int>
#define piip pair< pair<ll,ll>,ll >
#define fin(s) freopen( s, "r", stdin )
#define fout(s) freopen( s, "w", stdout )
#define TIME ios_base::sync_with_stdio(0)
using namespace std;

const ll INF = 1e9;
const ll N = 3e5 + 1;
const ll mod = 1e9 + 7;
const long double eps = 1E-7;

int mx;
int t, d;
int n, k;
int l, r, m;
int x[N], y[N];
int a[25], b[25];
int main()
{
    TIME;
    cin >> n >> k;
    for( int i = 1; i <= n/2; i ++ )
    {
        cin >> a[i];
        a[i] = a[i] % k;
        mx = max( mx, a[i] );
    }
    for( int i = 1; i <= (n+1)/2; i ++ )
    {
        cin >> b[i];
        b[i] = b[i] % k;
        mx = max( mx, b[i] );
    }
    for( int i = 0; i < ( 1 << n/2 ); i ++ )
    {
        int p = 1, g = 0, h = i;
        while( h )
        {
            if( h % 2 )
                g = (g + a[p]) % k;
            h /= 2, p ++;
        }
        x[++d] = g;
    }
    for( int i = 0; i < ( 1 << (n+1)/2 ); i ++ )
    {
        int p = 1, g = 0, h = i;
        while( h )
        {
            if( h % 2 )
                g = (g + b[p]) % k;
            h /= 2, p ++;
        }
        y[++t] = g;
    }
    sort( x + 1, x + 1 + d );
    sort( y + 1, y + 1 + t );
    mx = max( mx, (a[d]+b[t]) % k );
    for( int i = 1; i <= d; i ++ )
    {
        l = 1, r = t;
        while( l < r )
        {
            m = (l + r) / 2;
            if( x[i]+y[m+1] < k )
                l = m + 1;
            else
                r = m;
        }
        mx = max( mx, x[i] + y[l] );
    }
    cout << mx << endl;
}
