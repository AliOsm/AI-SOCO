#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=10000000000;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll fastexp(ll x ,ll n)
{
    ll result =1;
    while(n>0)
    {
        if(n%2==1)
            result*=x;
        x*=x;
        n=n/2;
    }
    return result;
}

ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
bool mycomp(pll &a,pll &b)
{
    if(a.F!=b.F)
        return a.F < b.F;
    else
        return a.S < b.S;
}

void solve()
{
    ll n;
    cin>>n;
    vector<ll> v(n);
    ll g = 0;
    ll i;
    for(i=0;i<n;i++)
    {
        cin>>v[i];
        g=gcd(g,v[i]);
    }
    map<ll,ll> mp;
    if(g==1)
    {
        cout<<"1\n";
        return ;
    }
    ll x=g;
    for(i=2;i*i<=g;i++)
    {
        while(x%i==0)
        {
            mp[i]+=1;
            x=x/i;
        }
    }
    if(x!=1)
        mp[x]+=1;
    ll ans=1;
    for(auto it:mp)
        ans=ans*(it.S+1);
    cout<<ans;
}


int main()
{
    ios;
    ll t;
//    cin>>t;
    t=1;
    while(t--)
    {
        solve();
    }
}
