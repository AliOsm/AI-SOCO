#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

const int N = 1000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 31;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-12;
const double pi = atan2(0, -1);

ld intersect(ld x1, ld y1, ld x2, ld y2, ld x, ld y, ld dx, ld dy)
{
    if (y1 == y2)
    {
        if (dy == 0)
        {
            if (y != y1)
                return -1;
            else
            {
                if (x >= x1 && x <= x2)
                    return 0;
                else if (dx == 0)
                    return -1;
                else if (x < x1)
                    return (x1 - x) / dx;
                else
                    return (x - x2) / dx;
            }
        }
        else
        {
            ld t = (y1 - y) / dy;
            if (t < 0)
                return -1;
            else
            {
                x += dx * t;
                if (x >= x1 && x <= x2)
                    return t;
                else
                    return -1;
            }
        }
    }
    else if (x1 == x2)
    {
        if (dx == 0)
        {
            if (x != x1)
                return -1;
            else
            {
                if (y >= y1 && y <= y2)
                    return 0;
                else if (dy == 0)
                    return -1;
                else if (y < y1)
                    return (y1 - y) / dy;
                else
                    return (y - y2) / dy;
            }
        }
        else
        {
            ld t = (x1 - x) / dx;
            if (t < 0)
                return -1;
            else
            {
                y += dy * t;
                if (y >= y1 && y <= y2)
                    return t;
                else
                    return -1;
            }
        }
    }
}

ld check(ld x, ld y, ld dx, ld dy, ld t, ld x1, ld y1, ld x2, ld y2)
{
    if (t == -1)
        return -1;
    if (t >= eps)
    {
        ld xx = x + dx * (t - eps), yy = y + dy * (t - eps);
        if (xx > x1 && xx < x2 && yy > y1 && yy < y2)
            return t - eps;
    }
    ld xx = x + dx * (t + eps), yy = y + dy * (t + eps);
    if (xx > x1 && xx < x2 && yy > y1 && yy < y2)
        return t + eps;
    return -1;
}

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    //int TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n;
    cin >> n;
    int x1, y1, x2, y2;
    cin >> x1 >> y1 >> x2 >> y2;
    ld l = -inf, r = inf;
    rep(i, 0, n)
    {
        int x, y, dx, dy;
        cin >> x >> y >> dx >> dy;
        ld mi = inf, ma = -inf;
        if (x > x1 && x < x2 && y > y1 && y < y2)
        {
            mi = 0;
            ma = 0;
            if (dx == 0 && dy == 0)
                ma = inf;
        }
        ld t;
        t = intersect(x1, y1, x2, y1, x, y, dx, dy);
        t = check(x, y, dx, dy, t, x1, y1, x2, y2);
        if (t != -1)
        {
            mi = min(mi, t);
            ma = max(ma, t);
        }
        t = intersect(x2, y1, x2, y2, x, y, dx, dy);
        t = check(x, y, dx, dy, t, x1, y1, x2, y2);
        if (t != -1)
        {
            mi = min(mi, t);
            ma = max(ma, t);
        }
        t = intersect(x1, y2, x2, y2, x, y, dx, dy);
        t = check(x, y, dx, dy, t, x1, y1, x2, y2);
        if (t != -1)
        {
            mi = min(mi, t);
            ma = max(ma, t);
        }
        t = intersect(x1, y1, x1, y2, x, y, dx, dy);
        t = check(x, y, dx, dy, t, x1, y1, x2, y2);
        if (t != -1)
        {
            mi = min(mi, t);
            ma = max(ma, t);
        }
        l = max(l, mi);
        r = min(r, ma);
    }
    if (l <= r)
        cout << fixed << l << endl;
    else
        cout << -1 << endl;
    return 0;
}

