//ITNOG
#include<bits/stdc++.h>

using namespace std;
#define int long long
const int maxN = 100*1000 + 5;
const int mod = 1000*1000*1000 + 7;
int n, d; 
int ans;
int mark[maxN];
int c[maxN];
vector<int> a[maxN];
int dfs(int v, int ch)
{
    mark[v] = 1; int res = 1;
    for(auto u : a[v])
    {
	  if(!mark[u] && (c[u] > c[ch] || (c[u] == c[ch] && u > ch)) && c[u] - c[ch] <= d)
	  {
		res = res * dfs(u, ch) % mod;
	  }
    }
    return res + 1;
}
main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    cin >> d >> n;
    for(int i = 0; i < n; i ++)
	  cin >> c[i];
    for(int i = 1; i < n; i ++)
    {
	  int v, u; cin >> v >> u; v --; u --;
	  a[v].push_back(u);
	  a[u].push_back(v);
    }

    for(int i = 0; i < n;  i++)
    {
	  memset(mark, 0, sizeof mark);
	  ans += dfs(i, i) - 1, ans %= mod;
//	  cout << ans << endl;
    }
    cout << (ans + mod) % mod << endl;
    return 0;

}
