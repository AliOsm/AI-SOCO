#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define carr( n , array ) forr(i , n) cin >> array[i]
#define F first
#define S second
#define IF ->first
#define IS ->second
#define qqmemset(array , val) memset (array , val , sizeof(array))

const ll max9 = 10 + 1e9 ,  max6 = 10 + 1e6 , max12 = 10 + 1e12 , max15 = 10 + 1e15 ;
const ll min6 = -1 * max6 , min9 = -1 * max9 , min12 = -1 *max12 , min15 = -1 * max15 ;
const ll R = 7 + 1e9 , NN = 10 + 1e5 ;
using namespace std;

int main()
{
   // ios_base::sync_with_stdio(false); cin.tie(NULL);
    string x = "abcdefg" ;
    reverse(x.begin() + 1 , x.begin() + 3) ;
    //cout << x << endl ;
    int t ; cin >> t ;
    while(t--){
        int n , k ; cin >> n >> k ;
        string s ; cin >> s ;
        int num = 0 , i = 0 ;
        vector <int> ans ;
        while ( num + 1 < k ) {
            if (s[i] == ')') {
                for (int j = i ; j < n ; j ++) {
                    if (s[j] == '(') {
                        reverse(s.begin() + i , s.begin() + j + 1) ;
                        ans.pb(i + 1) ; ans.pb(j + 1) ;
                        break;
                    }
                }
            }
            i ++ ;
            if (s[i] == '(') {
                for (int j = i ; j < n ; j ++) {
                    if (s[j] == ')') {
                        reverse(s.begin() + i , s.begin() + j + 1) ;
                        ans.pb(i + 1) ; ans.pb(j + 1) ;
                        break;
                    }
                }
            }
            i ++ ;
            num ++ ;
        }
        if (s[i] == ')') {
            for (int j = i ; j < n ; j ++) {
                if (s[j] == '(') {
                    reverse(s.begin() + i , s.begin() + j + 1 ) ;
                    ans.pb(i + 1) ; ans.pb(j + 1) ;
                    break;
                }
            }
        }
        i ++ ;
        while (i < n - 1) {
            if (s[i] == ')') {
                for (int j = i ; j < n ; j ++) {
                    if (s[j] == '(') {
                        reverse(s.begin() + i , s.begin() + j + 1) ;
                        ans.pb(i + 1) ; ans.pb(j + 1) ;
                        break;
                    }
                }
            }
            i ++ ;
            if (s[i] == '(') {
                for (int j = i ; j < n ; j ++) {
                    if (s[j] == ')') {
                        reverse(s.begin() + i , s.begin() + 1 + j) ;
                        ans.pb(i + 1) ; ans.pb(j + 1) ;
                        break;
                    }
                }
            }
            i ++ ;
        }
        //cout << s << endl ;
        cout << ans.size() / 2<< endl ;
        if (ans.size()) {
            for (int i = 0 ; i < ans.size() ; i += 2 ) cout << ans[i] << " " << ans[i + 1] << endl ;
        }
    }
    return 0;
}
