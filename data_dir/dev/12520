#include <bits/stdc++.h>
#define int long long
using namespace std;

const int N = 2e5 + 7;

int sz[N], mx = 0, ans[N], n;

vector <int> adj[N];

int dfs(int u, int p) {
    sz[u] = 1;
    for(int v: adj[u])
        if(v != p) {
            dfs(v, u);
            ans[u] += ans[v];
            sz[u] += sz[v];
        }
    ans[u] += sz[u];
}


int DFS(int u, int p, int tmp) {
    mx = max(mx, tmp);
    for(int v: adj[u]) {
        if(v != p) {
            int lft = n - sz[v];
            DFS(v, u, tmp - sz[v] + lft);
        }
    }

}

int32_t main() {
        ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
        cin >> n;
        for(int i = 1; i < n; i++) {
            int u, v; cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        dfs(1, -1);
        DFS(1, -1, ans[1]);
        cout << mx << endl;

}
