#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define ull unsigned ll
#define mp make_pair
#define pb push_back
#define F first
#define S second

using namespace std;

const int MIN = 2e3 + 2;
const int MXN = 2e5 + 1;
const int INF = 1e9 + 7;
const ll LINF = 1e18 + 15;
const double EPS = 1e-9;
                                                                                          
int h, w, n;
pair <int, int> coor[MIN];
ll ans[MIN], bin[MXN];

ll binpow (ll x, ll y){
	if (y == 1){
		return x;
	}
	else if (y % 2){
		return binpow(x, y - 1) * x % INF;
	}
	else {
		ll z = binpow(x, y / 2);
		return z * z % INF;
	}
}

ll C (ll x, ll y){
	if (y == 0) return 1;
	return x * binpow(y, INF - 2) % INF;
}

int main(){
	/*ios_base::sync_with_stdio(0);
    cin.tie(0);                                                                                   
    cout.tie(0);*/
    //freopen ("input.txt", "r", stdin);
    //freopen ("output.txt", "w", stdout);
    bin[1] = 1;
    for (int i = 2; i < MXN; ++i){
    	bin[i] = bin[i - 1] * i % INF;
    }
	cin >> h >> w >> n;
	for (int i = 1; i <= n; ++i){
		cin >> coor[i].F >> coor[i].S;
	}
	n++;
	coor[n].F = h;
	coor[n].S = w;    
	sort (coor + 1, coor + n + 1);
	for (int i = 1; i <= n; ++i){
		ans[i] = C(bin[coor[i].F + coor[i].S - 2], bin[coor[i].F - 1] * bin[coor[i].S - 1] % INF);
		for (int j = 1; j < i; ++j){
			if (coor[j].F <= coor[i].F && coor[j].S <= coor[i].S){
				ans[i] -= (ans[j] * C(bin[coor[i].F - coor[j].F + coor[i].S - coor[j].S], bin[coor[i].F - coor[j].F] * bin[coor[i].S - coor[j].S] % INF) % INF);
				ans[i] += INF;
				ans[i] %= INF;
			}			
		}
	}
	cout << ans[n];    	
    return 0;
}
