//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)

using namespace std;
typedef long long int ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

const int nax = 1000000 + 10;

ll n, right_low[nax];
ll DP[nax], arr[nax];

int main()
{    ios_base::sync_with_stdio(0);

    cin>>n;
    for(ll i=1;i<=n;i++)
        cin>>arr[i];

    stack<ll> st;
    right_low[n] = n+1;
    st.push(n);
    for(ll i=n-1;i>=1;i--){
        while(!st.empty() && arr[st.top()] >= arr[i])
            st.pop();
        if(st.empty())  right_low[i] = n+1;
        else    right_low[i] = st.top();
        st.push(i);
    }

// for(ll i=1;i<=n;i++)   cout<<right_low[i]<<" ";cout<<endl;

    DP[n] = arr[n];
    for(ll i=n-1;i>=1;i--){
        DP[i] = (right_low[i]-i)*arr[i] + DP[right_low[i]];
    }

    ll ans = 0;
    ans = accumulate(DP+1, DP+n+1, 0LL);

    // start from here
    memset(right_low, 0, sizeof(right_low));
    memset(DP, 0, sizeof(DP));

    for(ll i=1;i<=n;i++)
        arr[i] *= -1;

    while(!st.empty())
        st.pop();

    right_low[n] = n+1;
    st.push(n);
    for(ll i=n-1;i>=1;i--){
        while(!st.empty() && arr[st.top()] >= arr[i])
            st.pop();
        if(st.empty())  right_low[i] = n+1;
        else    right_low[i] = st.top();
        st.push(i);
    }

// for(ll i=1;i<=n;i++)   cout<<right_low[i]<<" ";cout<<endl;

    DP[n] = arr[n];
    for(ll i=n-1;i>=1;i--){
        DP[i] = (right_low[i]-i)*arr[i] + DP[right_low[i]];
    }

    ans += accumulate(DP+1, DP+n+1, 0LL);


    cout<< abs(ans);
    return 0;
}
