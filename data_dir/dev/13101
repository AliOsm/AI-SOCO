#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("Ofast")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
#define int long long int
typedef complex<long double> cd;
const long double pi=acos(-1);
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;

#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))

#define fi first
#define se second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
#define setbitsll(x) __builtin_popcountll(x)
#define all(x) x.begin(),x.end()
#define pii pair<int,int>

inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p%m*p%m)%m;if(n%2) return (p%m*a%m)%m;else return p;}
const ll MOD =998244353;
const ll hell=1000000007;
const int INF = 1e16;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
template<typename T>
using ordered_set=tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

auto seed = chrono::high_resolution_clock::now().time_since_epoch().count();
std::mt19937 rng(seed);


const int N=100005;


void solve()
{
    
    int n,k;
    cin>>n>>k;
    int a[n];map<int,int> mp;
    for(int i=0;i<n;i++)
    {cin>>a[i];
        mp[a[i]]++;
    }
    auto it=mp.begin();
    while(it!=mp.end())
    {
        if(it->second>=k)
        {
            cout<<0<<endl;
            return;
        }
        it++;
    }
    sort(a,a+n);int cnt=0;vector<pair<int,int>> ve;
    for(int i=0;i<n-1;i++)
    {
        if(a[i]==a[i+1])
        {
            cnt++;
        }
        else
        {
            ve.pb(m1(a[i],cnt+1));
            cnt=0;
        }
    }
    ve.pb(m1(a[n-1],cnt+1));
    int n1=ve.size();
   
    
    int pre[n1],suff[n1];
    pre[0]=0;
    suff[n1-1]=0;
    int fe=ve[0].se;int pf[n1],sf[n1];
    int ans=INF;
    pf[0]=fe;
    for(int i=1;i<n1;i++)
    {
        int z=ve[i].fi-ve[i-1].fi;
        pre[i]=pre[i-1]+z*fe;
        fe+=ve[i].se;
        pf[i]=fe;
       
    }
    fe=ve[n1-1].se;
    sf[n1-1]=fe;
    for(int i=n1-2;i>=0;i--)
    {
        suff[i]=suff[i+1];
        int z=ve[i+1].fi-ve[i].fi;
        suff[i]+=z*fe;
        fe+=ve[i].se;
        sf[i]=fe;
    }
    
    for(int i=1;i<n1-1;i++)
    {
        ans=min(ans,pre[i]+suff[i]);
        int re=k-ve[i].se;
        int gr=ve[i].fi+1;
        int ls=ve[i].fi-1;
        int cl=pre[i-1]+(ls-ve[i-1].fi)*pf[i-1];
        int cr=suff[i+1]+(ve[i+1].fi-gr)*sf[i+1];
        ans=min(ans,pre[i]+suff[i]);
        if(k<=pf[i])
        {
        ans=min(ans,pre[i]);
            ans=min(ans,cl+re);
        }
        if(k<=sf[i])
        {
        ans=min(ans,suff[i]);
            ans=min(ans,cr+re);
        }
        ans=min(ans,cl+cr+re);
    }
    ans=min(ans,k-ve[0].se+(ve[1].fi-ve[0].fi-1)*sf[1]+suff[1]);
    ans=min(ans,k-ve[n1-1].se+(ve[n1-1].fi-1-ve[n1-2].fi)*pf[n1-2]+pre[n1-2]);
    cout<<ans<<endl;
    
}

int32_t main()
{
    IOS;
    //FILE *fin = freopen("in","r",stdin);
    //FILE *fout = freopen("out","w",stdout);
    int t;
    t=1;
   // cin>>t;
    while(t--)
    {
        solve();
    }
    return 0;
}




