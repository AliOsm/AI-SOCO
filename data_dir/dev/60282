#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <sstream>
#include <stack>
#include <cassert>
#include <ctime>
#include <cmath>
#include <queue>
#include <ctime>
#include <cassert>
#include <vector>
#include <cmath>
#include <stack>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

const int N = 100010;
const int M = 1e9 + 0.5;
const int inf = 0x3f3f3f3f;
const int mod = 1e9 + 7;
const int pi = cos(-1.0);
const ll oo = 0x3f3f3f3f3f3f3f3fll;

#define pb push_back
#define sz(x) ((x).size())

int n, m, p, q;
int P[N];
ll sum[N];

int Find(int x){
	if(P[x] != x) P[x] = Find(P[x]);
	return P[x];
}

void Unit(int a, int b, int l){
	int A = Find(a);
	int B = Find(b);
	if(A == B){
		sum[A] += l;
		if(sum[A] > M) sum[A] = M;
		return ;
	}
	P[A] = B;
	sum[B] += sum[A] + l;
	if(sum[B] > M) sum[B] = M;
}

struct Data{
	int id;
	ll k;
	Data() {}
	Data(int id, ll k): id(id), k(k) {}
	bool operator < (const Data &o) const{
		return k > o.k;
	}
};

int main(){
	scanf("%d%d%d%d", &n, &m, &p, &q);
	int a = -1, b = -1;
	for(int i = 0; i <= n; i++)
		P[i] = i, sum[i] = 0;
	for(int i = 0; i < m; i++){
		int x, y, l;
		scanf("%d%d%d", &x, &y, &l);
		Unit(x, y, l);
		a = x, b = y;
	}
	priority_queue<Data> que;
	for(int i = 1; i <= n; i++)
		if(Find(i) == i){
			que.push(Data(i, sum[i]));
		}
	if(que.size() < q || que.size() > q + p) return puts("NO"), 0;
	if(m == 0 && p > 0 && q == n) return puts("NO"), 0;
	puts("YES");
	for(int i = 0; i < p; i++){
		if(que.size() > q){
			Data u = que.top();
			que.pop();
			Data v = que.top();
			que.pop();
			ll s = min(M + 0ll, u.k + v.k + 1);
			cout << u.id << " " << v.id << endl;
			Unit(v.id, u.id, s);
			a = u.id, b = v.id;
			que.push(Data(Find(u.id), sum[Find(u.id)]));
		}
		else{
			cout << a << " " << b << endl;
			if(a == -1) while(1);
		}
	}
	return 0;
}