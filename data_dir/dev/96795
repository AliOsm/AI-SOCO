#include"bits/stdc++.h"
#include<valarray>
#include<ext/pb_ds/tree_policy.hpp>
#include<ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_pbds;

int t;

int n;
int m;



vector<vector<int> > v;

#define MAX 300002
bool use[MAX];


int dep[MAX];


/*
vector<int> ed



inline void dfs(int b,int pr=-1){
	use[b]=true;
	for(int go:v[b]){
		if(go==pr){
			continue;
		}
		if(use[go])continue;
		
	}
}
*/

int main(){
	cin>>t;
	while(t--){
		cin>>n>>m;
		for(int i=0;i<3*n;i++){
			use[i]=false;
		}
		vector<int> mat;
		set<int> unused;
		for(int i=0;i<3*n;i++){
			unused.insert(i);
		}
		for(int i=0;i<m;i++){
			int a,b;
			scanf("%d%d",&a,&b);
			a--;
			b--;
			if(use[a]==false&&use[b]==false){
				use[a]=use[b]=true;
				unused.erase(a);
				unused.erase(b);
				mat.push_back(i+1);
			}
		}
		if(mat.size()>=n){
			puts("Matching");
			mat.resize(n);
			for(int i=0;i<mat.size();i++){
				if(i)printf(" ");
				printf("%d",mat[i]);
			}
			puts("");
		}
		else{
			puts("IndSet");
			bool flag=false;
			int counter=n;
			for(int el:unused){
				if(flag)printf(" ");
				flag=true;
				printf("%d",el+1);
				counter--;
				if(counter==0)break;
			}
			puts("");
		}
	}
	
	return 0;
}
