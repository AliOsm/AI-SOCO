#pragma comment(linker, "/stack:64000000")

#include <cstdio>
#include <cstring>
#include <cctype>
#include <cmath>
#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <algorithm>

using namespace std;

#define REP(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

int lf[111][55][2];
int rg[111][55][2];
int dx[] = {-1, 1};

int main() {
#ifndef ONLINE_JUDGE
	freopen("test.in", "r", stdin);
	freopen("test.out", "w", stdout);
#endif		
	for (int i = 0; i < 111; i++) {
		for (int j = 0; j < 55; j++) {
			for (int k = 0; k < 2; k++) {
				lf[i][j][k] = 10000;
				rg[i][j][k] = -10000;
			}
		}
	}
	lf[0][0][0] = 0;
	rg[0][0][0] = 0;
	string s;
	int m;
	cin >> s >> m;	
	for (int i = 1; i <= sz(s); i++) {
		for (int j = 0; j <= m; j++) {			
			REP(k, 2) {
				if (s[i - 1] == 'F') {			
					lf[i][j][k] = min(lf[i][j][k], lf[i - 1][j][k] + dx[k]);					
					rg[i][j][k] = max(rg[i][j][k], rg[i - 1][j][k] + dx[k]);
					if (j > 0) {
						lf[i][j][k] = min(lf[i][j][k], lf[i - 1][j - 1][1 - k]);
						rg[i][j][k] = max(rg[i][j][k], rg[i - 1][j - 1][1 - k]);
					}
				} else if (s[i - 1] == 'T') {
					if (j > 0) {
						lf[i][j][k] = min(lf[i][j][k], lf[i - 1][j - 1][k] + dx[k]);					
						rg[i][j][k] = max(rg[i][j][k], rg[i - 1][j - 1][k] + dx[k]);
					}
					lf[i][j][k] = min(lf[i][j][k], lf[i - 1][j][1 - k]);
					rg[i][j][k] = max(rg[i][j][k], rg[i - 1][j][1 - k]);
				}
			}
		}
	}
	int res = 0;
	for (int j = 0; j <= m; j++) {
		if (j % 2 != m % 2) continue;
		for (int k = 0; k < 2; k++) {
			res = max(res, -lf[sz(s)][j][k]);
			res = max(res, rg[sz(s)][j][k]);
		}
	}
	cout << res;
	return 0;
}