#include<bits/stdc++.h>
using namespace std;
#define all(v) ((v).begin()),((v).end())
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
double const EPS = 1e-12, PI = acos(-1);
const int N = 1e6 + 9, M = 5e3 + 9, OO = 1e9 + 7, MOD = 1e9 + 7;
const ll inf = 1e18;

int card[N], h[N], cnt[N], n, m;
map<int, int> freq;
int total;
int mem[5005][505];

int solve(int count, int ppl) {
  if(count < 0)
    return -OO;
  if(!ppl || !count)
    return 0;
  int& ret = mem[count][ppl];
  if(~ret)
    return ret;
  ret = 0;
  for (int i = 1; i <= m; ++i)
    ret = max(ret, solve(count - i, ppl - 1) + h[i]);
  return ret;
}

int main() {
  fastIO;
#ifdef LOCAL
  freopen("input.in", "rt", stdin);
#endif
  int a;
  cin >> n >> m;
  int kk = n * m;
  for (int i = 0; i < kk; ++i) {
    cin >> card[i];
    cnt[card[i]]++;
  }
  for (int i = 0; i < n; ++i) {
    cin >> a;
    freq[a]++;
  }
  for (int i = 1; i <= m; ++i)
    cin >> h[i];
  memset(mem, -1, sizeof mem);
  for(auto it: freq) {
    total += solve(cnt[it.first], it.second);
  }
  cout << total;
  return 0;
}
