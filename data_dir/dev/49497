#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

template<typename T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
#define pi pair<ll,ll>
#define __   ios_base::sync_with_stdio(0);cin.tie();cout.tie();
#define mod 1000000007
#define base 1949313259

ll Set(ll N,ll pos){ return N=N | (1LL<<pos); }
ll reset(ll N,ll pos){ return N= N & ~(1LL<<pos); }
bool check(ll N,ll pos){ return (bool)(N & (1LL<<pos)); }


ll ar[]={0,0,1,-1};
ll br[]={1,-1,0,0};

string s,s1,s2;
ll n,m;
ll arr[500010];
ll brr[500010];
vector<ll>v,v1;

map<ll,ll>mp;
ll lft[500005];
ll rt[500005];
ll segtree[4*500050];
ll segtree1[4*500050];
void update(ll n,ll b,ll e,ll indx,ll val){
if(b>e) return ;
if(b==e&&indx==b){
    segtree[n]=val;
    return ;
}

ll mid=(b+e)/2;
if(indx<=mid) update(2*n,b,mid,indx,val);
else update(2*n+1,mid+1,e,indx,val);

segtree[n]=max(segtree[2*n],segtree[2*n+1]);
}

ll query(ll n,ll b,ll e,ll l,ll r){
if(b>e) return 0;

if(l>e||b>r) return 0;
if(l<=b&&e<=r) return segtree[n];

ll mid=(b+e)/2;

return max(query(2*n,b,mid,l,r),query(2*n+1,mid+1,e,l,r));
}


void build(ll n,ll b,ll e,ll val){
if(b>e) return ;

if(b==e){
    segtree1[n]=val;
    return ;
}
ll mid=(b+e)/2;

build(2*n,b,mid,val);
build(2*n+1,mid+1,e,val);

segtree1[n]=val;

}


void update1(ll n,ll b,ll e,ll indx,ll val){
if(b>e) return ;
if(b==e&&indx==b){
    segtree1[n]=val;
    return ;
}

ll mid=(b+e)/2;
if(indx<=mid) update1(2*n,b,mid,indx,val);
else update1(2*n+1,mid+1,e,indx,val);

segtree1[n]=min(segtree1[2*n],segtree1[2*n+1]);
}



ll query1(ll n,ll b,ll e,ll l,ll r){
if(b>e) return 10000000000000;

if(l>e||b>r) return 1000000000000;
if(l<=b&&e<=r) return segtree1[n];

ll mid=(b+e)/2;

return min(query1(2*n,b,mid,l,r),query1(2*n+1,mid+1,e,l,r));
}
int main()
{__
        ll i,j,a,b,c,d,e,f,g,x,y,z,t,k,l;

        ll ans=0;

        cin>>n;

        for(i=1;i<=n;i++){
            cin>>arr[i];
            brr[i-1]=arr[i];
        }

        sort(brr,brr+n);

        for(i=0,j=0;i<n;i++){
            if(mp[brr[i]]==0) mp[brr[i]]=++j;
        }
        ll val;
        for(i=1;i<=n;i++){
            val=mp[arr[i]];
            val=query(1,1,n,1,val);
            //cout<<val<<" "<<mp[arr[i]]<<endl;
            lft[i]=lft[val]+(i-val)*arr[i];
            update(1,1,n,mp[arr[i]],i);
            //cout<<lft[i]<<" ";
        }
        //cout<<endl;


        build(1,1,n,n+1);



        for(i=n;i>=1;i--){
            val=mp[arr[i]];
            val=query1(1,1,n,1,val);
          //  cout<<val<<" "<<mp[arr[i]]<<endl;
            rt[i]=rt[val]+(val-i)*arr[i];
            update1(1,1,n,mp[arr[i]],i);
         //   cout<<rt[i]<<endl;
        }

        ll shajib=0;
        for(i=1;i<=n;i++){
            if(ans<rt[i]+lft[i]-arr[i]){
                ans=rt[i]+lft[i]-arr[i];
                shajib=i;
            }
        }
        //cout<<shajib<<endl;
        i=shajib;

        ll mn=arr[i];
        for(j=i;j>=1;j--){
            if(arr[j]>mn) arr[j]=mn;
            mn=min(mn,arr[j]);
        }



         mn=arr[i];
        for(;i<=n;i++){
            if(arr[i]>mn) arr[i]=mn;
            mn=min(mn,arr[i]);
        }

        for(i=1;i<=n;i++){
            cout<<arr[i]<<" ";
        }
        cout<<endl;
}

