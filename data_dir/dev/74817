#include <bits/stdc++.h>
#define ll  long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define sc second
#define fr first

using namespace std;

const int N = 1e5+100;
int n;

int nm[N];
vector<int>primes[N];

int tak[N];

stack<int>st;

int dp[N];

bool chCop(int x){
    int mx = (1<<primes[x].size());
    int res = 0;
    for(int i=1 ;i <mx ;i ++){
        int r = 1;
        int vl  = -1;
        for(int j =0 ;j < primes[x].size() ; j++){
            if(!(i&(1<<j)))continue;
            r *= primes[x][j];
            vl *= -1;
        }
        res += vl*dp[r];
    }
    return res < st.size();
}

void add(int x,int vl){
    int mx = (1<<primes[x].size());
    for(int i=1 ;i <mx ;i ++){
        int r = 1;
        for(int j =0 ;j < primes[x].size() ; j++){
            if(!(i&(1<<j)))continue;
            r *= primes[x][j];
        }
        dp[r] += vl;
    }
}

bool pr[N];

int main(){
    for(int i=2 ;i <N; i++){
        if(pr[i])continue;
        for(int j=i; j < N; j+=i){
            primes[j].push_back(i);
            pr[j] = 1;
        }
    }

    cin>>n;
    int a;
    ll res =  0;
    for(int i=1 ;i <=n; i ++){
        scanf("%d",&a);
        nm[a]++;
        if(nm[a] > 1)res = max(res,(ll)a);
    }


    for(int i=N-1 ;i >=1; i --){
        int sz = 0;
        for(int j=i ;j <N ; j+=i){
            if(!nm[j])continue;
            tak[sz++] = j/i;
        }

        sort(tak,tak+sz);
        reverse(tak,tak+sz);
        for(int j=0 ;j < sz;  j++){
            ll ls = 0;
            while(!st.empty() && chCop(tak[j])){
                ls = st.top();
                add(st.top(),-1);
                st.pop();
            }
            res = max(res,ls*tak[j]*i);
            add(tak[j],1);
            st.push(tak[j]);
        }
        while(!st.empty()){
            add(st.top(),-1);
            st.pop();
        }
    }
    cout<<res<<endl;
    return 0;
}
