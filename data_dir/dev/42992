/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 5e3 + 5, H = 137, P = 1e9 + 21;
int n, a, b, h[N], pwr[N] = {1}, c[N], dp[N];
vector<int> vec[N];
string S;

inline int get_hash(int l, int r) {
	return (h[r] - 1LL * h[l] * pwr[r - l] % P + P) % P;
}

inline void readInput() {
	cin >> n >> a >> b >> S;
}

inline void solve() {
	for (int i = 0; i < n; i++) {
		pwr[i + 1] = 1LL * pwr[i] * H % P;
		h[i + 1] = (1LL * h[i] * H + S[i] - 'a' + 1) % P;
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 0; j < i; j++)
			c[i - j] = get_hash(j, i);
		for (int j = i + 1; j <= n; j++) {
			int L = i - 1, R = j;
			while (L + 1 < R) {
				int mid = L + R >> 1;
				(c[j - mid] ^ get_hash(mid, j)? L: R) = mid;
			}
			if (R < j)
				vec[j].push_back(R);
		}
	}
	for (int i = 1; i <= n; i++) {
		dp[i] = dp[i - 1] + a;
		for (auto j: vec[i])
			dp[i] = min(dp[i], dp[j] + b);
	}
	cout << dp[n] << endl;
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	readInput(), solve();
	return 0;
}
