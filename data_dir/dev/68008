#include<bits/stdc++.h>

/*
	expect problems and eat them for breakfast
*/
 
/*************************** MACROS **************************/
#define itn ints
#define ld long double
#define ll long long  
#define ull unsigned long long
#define vll vector<ll>
#define pb push_back
#define mp make_pair
#define S second
#define F first
#define loop(i,x,y) for(ll i=x;i<y;i++)
#define rloop(i,x,y) for(ll i=x;i>=y;i--)
#define W(x) while(x--)
#define pll pair< ll,ll >
#define vpll vector< pll >
#define pqll priority_queue<ll>
#define pqpll priority_queue<pll>
#define MOD 1000000007
#define MOD1 998244353
#define MIN_LL -1e18
#define MAX_LL 1e18
#define MAX_INT 1e9
#define MIN_INT -1e9
#define Line cout<<"\n**************************\n\n";


const ld pie = 3.1415926535;
 
using namespace std;

ll fpow(ll n,ll p){ll m=1;while(p){if(p%2)m*=n;p>>=1;n*=n;}return m;}
 
/*************************** VARIABLES **************************/
 
bool br1,br2,br;

char ch,ch1,ch2;

ll n,k,x,y,z,mini,maxi,l,ind,ini,sum,t,len,r,w,imini,m;

string s,s1,s2;


/**************************** FXNS ****************************/

multiset<pair<pll,ll> > st;
multiset<ll> sumst;

ll b[(int)1e6+100];
ll a[(int)1e6+100];

void solve(){


	cin>>n;

	loop(i,1,n+1){

		cin>>a[i];
		b[i] = b[i-1]+a[i];
	}

	sumst.insert(b[n]);
	st.insert(mp(mp(1,n),b[n]));

	loop(i,0,n){

		cin>>x;

		auto itr = --st.upper_bound(mp(mp(x,n),1e17));
		auto p = *itr;

		// Line;

		// for(auto i:st)cout<<i.F.F<<" "<<i.F.S<<" "<<i.S<<endl;

		// cout<<"# "<<p.F.F<<" "<<p.F.S<<" "<<p.S<<endl;

		if(x == p.F.F){

			sumst.erase(sumst.find(p.S));
			if(p.F.F+1 <= p.F.S)sumst.insert(p.S-a[x]);

			st.erase(itr);
			if(p.F.F+1 <= p.F.S)st.insert(mp(mp(p.F.F+1,p.F.S),p.S-a[x]));
		}

		else if(x == p.F.S){

			sumst.erase(sumst.find(p.S));
			if(p.F.F <= p.F.S-1)sumst.insert(p.S-a[x]);

			st.erase(itr);
			if(p.F.F <= p.F.S-1)st.insert(mp(mp(p.F.F,p.F.S-1),p.S-a[x]));
		}

		else{

			sumst.erase(sumst.find(p.S));
			sumst.insert(b[p.F.S]-b[x]);
			sumst.insert(b[x-1]-b[p.F.F-1]);

			st.erase(itr);
			st.insert(mp(mp(p.F.F,x-1),b[x-1]-b[p.F.F-1]));
			st.insert(mp(mp(x+1,p.F.S),b[p.F.S]-b[x]));

		}

		if(sumst.size())cout<<(*(--sumst.end()))<<endl;

		else cout<<"0"<<endl;
		
	}

}

/*************************** MAIN ****************************/
 
 int main(){


	/*#ifndef ONLINE_JUDGE
	        freopen("input.txt", "rt", stdin);
	        freopen("output.txt", "wt", stdout);
	#endif*/
 
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
 
    solve();

	return 0;
}
