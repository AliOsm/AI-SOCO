#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define nl cout<<endl

#define pii pair<ll,ll>
#define vi  vector<ll>
#define vii vector<pii>
#define mi  map<ll,ll>
#define all(a)  (a).begin(),(a).end()

#define pb push_back
#define make make_pair
#define ff first
#define ss second
#define hell 1000000007

#define test4(x,y,z,a) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<"		a is "<<a<<endl;
#define test3(x,y,z) cout<<"x is "<<x<<"		y is "<<y<<"		z is "<<z<<endl;
#define test2(x,y) cout<<"x is "<<x<<"		y is "<<y<<endl;
#define test1(x) cout<<"x is "<<x<<endl;
#define N 300009

ll power(ll a,ll b,ll m)
{
	ll ans=1;
	while(b)
	{
		if(b&1)
			ans=(ans*a)%m;
		b/=2;
		a=(a*a)%m;
	}
	return ans;
}
typedef struct node
{
	struct node *c[2];
	ll end=0;
}trie;
trie *root =new trie();
void insert(ll num)
{
	trie *p=root;
	for(ll i=31;i>=0;i--)
	{
		ll ind=0;
		ll u=(1LL<<i)&num;
		if(u)
		ind=1;

		if(p->c[ind] == NULL)
		p->c[ind]=new trie();
		
		p=p->c[ind];
		p->end+=1;
	}
}
ll query(ll num)
{
	trie *p=root;
	ll res=0;
	for(ll i=31;i>=0;i--)
	{
		ll ind=0;
		ll u=(1LL<<i)&num;
		if(u)
		ind=1;

		if(p->c[!ind]  && p->c[!ind]->end>0)
		{
			p=p->c[!ind];
			res=res+((1LL<<i)*(!ind));
		}
		else
		{
			p=p->c[ind];
			res=res+((1LL<<i)*(ind));
		}
	}	
	return (res^num);
}
ll deletee(ll num)
{
	trie* p=root;
	for(ll i=31;i>=0;i--)
	{
		ll ind=0;
		ll u=(1LL<<i)&num;
		if(u)
		ind=1;
		
		p=p->c[ind];
		p->end-=1;
	}
}
int main()
{	
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
        ll q;cin>>q;
	insert(0);
	while(q--)
	{
		char c;cin>>c;
		ll num;cin>>num;
		if(c=='+')
		{
			insert(num);
		}
		else if(c=='-')
		{
			deletee(num);
		}
		else
		{
			ll ans=query(num);
			cout<<ans<<endl;
		}
	}
}