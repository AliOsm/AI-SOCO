#include <iostream>
#include <stack>
#include <algorithm>
#include <string.h>
#include <queue>
#include <iomanip>
#include <cmath>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
#define fi first
#define se second

const int maxN = 2e5 + 9, MOD = 1e9 + 7;

int n, dp[maxN];
vector<int> adj[maxN];
vector<int> ans;

void dfs(int nd, int an){
    dp[nd] = 1;
    for(int sn: adj[nd]){
        if(sn == an) continue;
        dfs(sn, nd);
        dp[nd] ^= dp[sn];
    }
}

void cons(int nd, int an){
    for(int sn: adj[nd]){
        if(sn != an && dp[sn] == 0){
            cons(sn, nd);
        }
    }
    ans.push_back(nd + 1);
    for(int sn: adj[nd]){
        if(sn != an && dp[sn] == 1){
            cons(sn, nd);
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    
    cin >> n;
    
    for(int i = 0, inp; i < n; i++){
        cin >> inp;
        inp--;
        if(inp != -1){
            adj[i].push_back(inp);
            adj[inp].push_back(i);
        }
    }
    
    dfs(0, -1);
    if(dp[0] == 0){
        cout << "NO\n"; return 0;
    }
    
    dp[0] = 0;
    
    cons(0, -1);
    
    cout << "YES\n";
    for(int el: ans) cout << el << '\n';
    
}
