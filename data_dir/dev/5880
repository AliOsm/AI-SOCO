#include <bits/stdc++.h>
typedef long long ll ;
using namespace std;

int memo[2001][5] , n  ;
vector < int > ve ;


int f(int i , int cnt)
{
    if(cnt >= 5 || i >= n) return 0 ;

    int &ret = memo[i][cnt] ;

    if(ret != -1) return ret ;

    if(cnt % 2)
    {
        if(ve[i] == 1)
        {
            int c1 = f(i + 1 , cnt)  ;
            int c2 = 1 + f(i + 1 , cnt) ;
            return ret = max(c1 , c2) ;
        }
        else
        {
            int c1 = f(i + 1 , cnt) ;
            int c2 = 1 + f(i + 1 , cnt + 1) ;
            return ret = max(c1 , c2) ;
        }

    }
    else
    {
        if(ve[i] == 2)
        {
            int c1 = f(i + 1 , cnt)  ;
            int c2 = 1 + f(i + 1 , cnt) ;
            return ret = max(c1 , c2) ;
        }
        else
        {
            int c1 = f(i + 1 , cnt) ;
            int c2 = 0 ;
            if(cnt != 4 )
                c2 = 1 + f(i + 1 , cnt + 1) ;
            return ret = max(c1 , c2) ;
        }



    }
}

int main()
{
    ios::sync_with_stdio(false) ;

    cin >> n  ;

    for(int i = 0 ; i < n ; i++)
    {
        int x ;
        cin >> x;
        ve.push_back(x) ;
    }

    memset(memo , -1 , sizeof(memo));

    cout << f(0 , 1) << endl ;





    return 0;
}
