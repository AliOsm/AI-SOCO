/// You just can't beat the person who never gives up
/// ICPC next year

#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<bits/stdc++.h>
using namespace std ;
const int N = 1e5+5 ;

int n ,p ,k ,x ;
pair<int,vector<int>> all[N] ;
long long mem[N][1<<7];
bool vis[N][1<<7] ;
long long solve(int i,int mask){
    int cnt = __builtin_popcount(mask);
    if(cnt==p && i-p>=k) return 0;
    if(i==n) return -1e18 ;
    long long&ret=mem[i][mask];
    if(vis[i][mask]) return ret;
    ret = 0 ;
    vis[i][mask] = 1 ;
    if(i-cnt<k) ret = max(ret ,solve(i+1,mask)+all[i].first);
    else ret = max(ret ,solve(i+1,mask));
    if(cnt!=p){
        for(int j=0;j<p;++j){
            if((mask>>j)&1) continue ;
            ret = max(ret ,solve(i+1,mask|(1<<j)) + all[i].second[j]);
        }
    }
    return ret;
}
int main(){
    scanf("%d%d%d",&n,&p,&k);
    vector<int> emty ;
    for(int i=0;i<p;++i) emty.push_back(0);
    for(int i=0;i<n;++i){
        scanf("%d",&x);
        all[i] = {x,emty};
    }
    for(int i=0;i<n;++i) for(int j=0;j<p;++j){
        scanf("%d",&x);
        all[i].second[j] = x ;
    }
    sort(all,all+n);
    reverse(all,all+n);
    cout << solve(0,0) ;
    return 0;
}
