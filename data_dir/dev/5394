#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair

typedef pair<int, int> pii;
typedef long long ll;

const int MAXN = 200100;

int n, m, k, s;
int a[MAXN], b[MAXN];
int t[MAXN], c[MAXN];
int idxa[MAXN], idxb[MAXN];
vector<pii> ans;
int srt[MAXN];

struct cmp {
	int q;
	cmp(int q) : q(q) {}
	bool operator()(int x, int y) {
		return c[x] * 1ll * (t[x] == 1 ? a[q] : b[q]) < c[y] * 1ll * (t[y] == 1 ? a[q] : b[q]);
	}
};                      

bool can(int q) {
	ans.clear();
	ll cur = 0;
	sort(srt, srt + m, cmp(q));
	for (int i = 0; i < m; ++i) {
		if (cur + c[srt[i]] * 1ll * (t[srt[i]] == 1 ? a[q] : b[q]) <= s) {
			cur += c[srt[i]] * 1ll * (t[srt[i]] == 1 ? a[q] : b[q]);
			ans.pb(mp(srt[i] + 1, t[srt[i]] == 1 ? idxa[q] + 1 : idxb[q] + 1));
		}
	}
	if ((int)ans.size() > k) ans.resize(k);
	return (int)ans.size() == k;
}

int main() {
#ifdef LOCAL
	freopen("input.txt", "r", stdin);
#endif
	scanf("%d%d%d%d", &n, &m, &k, &s);
	for (int i = 0; i < n; ++i)
		scanf("%d", a + i);
	for (int i = 0; i < n; ++i)
		scanf("%d", b + i);
	for (int i = 0; i < m; ++i) {
		scanf("%d%d", t + i, c + i);
		srt[i] = i;
	}                       
	for (int i = 1; i < n; ++i) {
		if (a[i] < a[i - 1]) {
			idxa[i] = i;
		} else {
			a[i] = a[i - 1];
			idxa[i] = idxa[i - 1];
		}
		if (b[i] < b[i - 1]) {
			idxb[i] = i;
		} else {
			b[i] = b[i - 1];
			idxb[i] = idxb[i - 1];
		}
	}
	int l = -1;
	int r = n;
	while (r - l > 1) {
		int mid = (l + r) >> 1;
		if (can(mid))
			r = mid;
		else l = mid;
	}
	if (r == n) {
		puts("-1");
	} else {
		printf("%d\n", r + 1);
		can(r);
		for (auto it: ans) {
			printf("%d %d\n", it.first, it.second);
		}		
	}
	return 0;
}