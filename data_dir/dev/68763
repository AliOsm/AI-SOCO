//ITNOG
#include<bits/stdc++.h>
 
using namespace std;

#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;
 
#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
typedef double ld;

const int maxN = 200*1000 + 5;
const int mod = 1000*1000*1000+7;
const int base = 701;
const int maxL = 20;
typedef long long ll;
#define X first
#define Y second
string ss, t;

int hs[maxN], ht[maxN], pw[maxN];

bool solve(int l, int r, int s, int e)
{
//    cout << (ss.substr(l,r-l) == t.substr(s,e-s)) << endl;
    int len = r-l;
    if(hs[r]-hs[l]*pw[r-l] == ht[e]-ht[s]*pw[e-s]) return true;
    if(len % 2) return false;
    
//    cout << l << ' ' << r << ' ' << s << ' ' << e << endl;
    int mid = (s+e) >> 1, mi = (l+r) >> 1;

    bool fl = rand() % 2;
    
    if(fl == 0)
    {
	  bool f1 = solve(l,mi,s,mid);
	  bool f2 = 0;
	  if(f1) f2 = solve(mi,r,mid,e);
	  if(f1 && f2) return true;
	  
	  bool f3 = solve(l,mi,mid,e);
	  if(!f3) return false;
	  if(f1 || !solve(mi,r,s,mid)) return false;
	  return true;
    }
    else
    {
	  bool f1 = solve(l,mi,mid,e);
	  bool f2 = 0;
	  if(f1) f2 = solve(mi,r,s,mid);
	  if(f1 && f2) return true;
	  
	  bool f3 = solve(l,mi,s,mid);
	  if(!f3) return false;
	  if(f1 || !solve(mi,r,mid,e)) return false;
	  return true;
    }
	 
}

main()
{
    srand(time(NULL));
    ios::sync_with_stdio(0); cin.tie(0);
    cin >> ss >> t;

    pw[0] = 1;
    rep(i,1,ss.size()+1)
    {
	  hs[i] = hs[i-1]*base + ss[i-1];
	  ht[i] = ht[i-1]*base +  t[i-1];
	  pw[i] = pw[i-1] * base;
    }

    if(solve(0,ss.size(),0,ss.size())) cout << "YES" << endl;
    else cout << "NO" << endl;
    return 0;
}
