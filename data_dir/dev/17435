#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <string>
#include <cstring>
#include <map>
// DON'T DIVIDE
// Try different approaches
using namespace std;

int n, m;
map<int, long long> cost;
set<int> idx; 

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;
	for(int i = 0; i < n; i++)
	{
		int a;
		long long x;
		cin >> a >> x;
		idx.insert(a);
		cost[a] = max(cost[a], x);
	}
	cin >> m;
	for(int i = 0; i < m; i++)
	{
		int b;
		long long y;
		cin >> b >> y;
		idx.insert(b);
		cost[b] = max(cost[b], y);
	}

	long long ans = 0;
	for(set<int>::iterator it = idx.begin(); it != idx.end(); it++)
		ans += cost[*it];

	cout << ans << "\n";
	return 0;
}