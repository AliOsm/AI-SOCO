// by tmt514
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#define SZ(x) ((int)(x).size())
#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)
using namespace std;
typedef long long LL;

int g[10005];

int FIND(int x) {
  return g[x]==x? x: g[x]=FIND(g[x]);
}

void UNION(int x, int y) {
  g[FIND(x)] = FIND(y);
}

int main(void) {
  int n;
  scanf("%d", &n);
  for(int i=1;i<=n;i++)g[i] = i;
  for(int i=1;i<=n;i++) {
    int x;
    scanf("%d", &x);
    UNION(i, x);
  }
  int ans=0;
  for(int i=1;i<=n;i++) if(FIND(i)==i) ++ans;
  printf("%d\n", ans);
  return 0;
}
