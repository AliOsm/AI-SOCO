#include <algorithm>
#include <iostream>
#include <valarray>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <numeric>
#include <complex>
#include <cstdio>
#include <string>
#include <vector>
#include <bitset>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <deque>
#include <map>
#include <set>

using namespace std;

#define FOREACH(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define FOR(i, a, n) for (int i = (a); i < int(n); ++i)
#define error(x) cout << #x << " = " << (x) << endl;
#define all(n) (n).begin(), (n).end()
#define Size(n) ((int)(n).size())
#define mk make_pair
#define pb push_back
#define F first
#define S second
#define X real()
#define Y imag()

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef complex<double> point;

template <class P, class Q> void smin(P &a, Q b) { if (b < a) a = b; }
template <class P, class Q> void smax(P &a, Q b) { if (b > a) a = b; }
template <class P, class Q> bool in(const P &a, const Q &b) { return a.find(b) != a.end(); }

int n;
vector<int> v[3];

int main() {
	cin >> n;
	FOR(i, 0, n) {
		int x;
		cin >> x;
		if (x < 0) v[0].pb(x);
		else if (x == 0) v[2].pb(x);
		else if (x > 0) v[1].pb(x);
	}
	if (v[1].empty()) FOR(i, 0, 2) v[1].pb(v[0].back()), v[0].pop_back();
	if (Size(v[0])%2 == 0) v[2].pb(v[0].back()), v[0].pop_back();
	FOR(i, 0, 3) { cout << Size(v[i]); FOREACH(it, v[i]) cout << " " << *it; cout << endl; }
	return 0;
}

