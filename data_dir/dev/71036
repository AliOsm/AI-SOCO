#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
#define pii pair<int, int>
#define endl '\n'
#define vi vector<int>
#define vvi vector<vi>
#define pii pair<int, int>
#define vpii vector<pii>
typedef long long ll;
typedef long double ld;
using namespace std;
template<class T> using minheap = priority_queue<T, vector<T>, greater<T>>;

const int N = 2e5 + 10;
ll a[N];
int n, m;
ll ans[N];
vector<tuple<int, int, int>> req;
int f[N];

void add(int i) {
  for (int j = i; j < N; j += j & -j) {
    f[j]++;
  }
}

int sum(int i) {
  int s = 0;
  for (int j = i; j >= 1; j -= j & -j) {
    s += f[j];
  }
  return s;
}


int main() {
  ios::sync_with_stdio(0);
  cin.tie(0); cout.tie(0);

  cin >> n;
  for (int i = 1; i <= n; i++) {
    cin >> a[i];
  }
  cin >> m;
  for (int mm = 0; mm < m; mm++) {
    int k, pos;
    cin >> k >> pos;
    req.pb({k, pos, mm});
  }
  sort(req.begin(), req.end());

  vpii b;
  for (int i = 1; i <= n; i++) {
    b.pb({a[i], i});
  }
  sort(b.begin(), b.end(), [&](auto x, auto y) -> bool{
    if (x.f != y.f) return x.f > y.f;
    return x.s < y.s;
  });

  int sz = 0;
  for (int mm = 0; mm < m; mm++) {
    auto& [k, pos, ind] = req[mm];
    while (sz < k) {
      add(b[sz++].s);
    }
    int lo = 1, hi = n, sol = n;
    while (lo <= hi) {
      int mid = (lo + hi) / 2;
      if (sum(mid) >= pos) {
        sol = mid;
        hi = mid - 1;
      } else {
        lo = mid + 1;
      }
    }
    ans[ind] = a[sol];
  }

  for (int i = 0; i < m; i++) {
    cout << ans[i] << endl;
  }

  return 0;
}