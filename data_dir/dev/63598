//ll f(vvl arr){
//    ll min_x = -INF,min_y = -INF, max_x = INF, max_y = INF;
//    for(auto _ : arr){
//        min_x = max(min_x,_[0]);
//        min_y = max(min_y,_[1]);
//        max_x = min(max_x,_[2]);
//        max_y = min(max_y,_[3]);
//    }
//    return max(0ll,max_x-min_x)*max(0ll,max_y-min_y);
//}
//void _(){
//    vvl arr(3,vl(4));
//    cin >> arr;
//    ll ans = f({arr[0]})-f({arr[0],arr[1]})-f({arr[0],arr[2]})+f({arr[0],arr[1],arr[2]});
//    print ans==0?"NO":"YES";
//}
//
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<ll> vl;
typedef vector<vl> vvl;
const ll INF = ll(2e18) + 666;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
ll f(vvl arr){
    ll min_x = -INF,min_y = -INF, max_x = INF, max_y = INF;
    for(auto _ : arr){
        min_x = max(min_x,_[0]);
        min_y = max(min_y,_[1]);
        max_x = min(max_x,_[2]);
        max_y = min(max_y,_[3]);
    }
    return max(0ll,max_x-min_x)*max(0ll,max_y-min_y);
}
void _(){
    vvl arr(3,vl(4));
    cin >> arr;
    ll ans = f({arr[0]})-f({arr[0],arr[1]})-f({arr[0],arr[2]})+f({arr[0],arr[1],arr[2]});
    print ans==0?"NO":"YES";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
