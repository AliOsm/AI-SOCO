#include<bits/stdc++.h>
#include<map>
using namespace std;
#define ll long long
#define mk(a,b) make_pair(a,b)
//#define pb push_back
#define pii pair<int ,int >
#define pli pair<ll,int>
#define INF 1ll<<40
#define MOD 1000000007
#define MAX 1e7
#define FI freopen("in.txt","r",stdin);
#define FO freopen("out.txt","w",stdout);
#define edge pair<pair<int,int>,int>
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
ll n, m, k,q;
string s;
	int _a, _g, _c, _t,_x;
char mat[501][501];
vector<int>v;
int arr[101];
int main() {
	cin >> n>>q;
	
	int free = n;
	memset(arr, -1, sizeof arr);
	//priority_queue<pair<int, int>, vector<pii>, greater<pii> >pq;
	for (int i = 0; i < q; i++) {
	
		
		int a, b,c;
		cin >> a >> b >> c;
		for (int i = 1; i <= n; i++) {
			if (arr[i] != -1 && arr[i]<a) {
				arr[i] = -1;
				free++;
			}
		}
		if (free < b) {
			cout << -1 << endl;
		}
		else {
			ll sum = 0;
			for (int i = 1;b&& i <= n; i++) {
				if (arr[i] == -1) {
					free--;
					arr[i] = a + c - 1;
					sum += i;
					b--;
				}
			}
			cout << sum << endl;
		}
	}
	return 0;
}