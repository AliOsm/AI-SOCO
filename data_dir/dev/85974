#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll inf=(1ll<<61);
const int MX=2e5+9;
int n,m,k[MX],x,y,vis[MX],k1[MX];
vector<int>v[MX],v1[MX];
bool check(int mid){
    for(int i=1;i<=n;i++)vis[i]=-1,k[i]=k1[i];
    for(int i=1;i<=min(mid,MX-1);i++){
        for(auto pp:v[i]){
            vis[pp]=i;
        }
    }
    for(int i=1;i<=n;i++){
        if(vis[i]!=-1)v1[vis[i]].push_back(i);
    }
    int ret=0,sum=0;
    for(int i=1;i<=min(mid,MX-1);i++){
        sum++;
        for(auto pp:v1[i]){
            while(k[pp]&&sum){
                sum--;
                k[pp]--;
            }
        }
    }
    int rem=mid-min(mid,MX-1)+sum;
    for(int i=1;i<=n;i++){
        rem-=2*k[i];
    }
    for(int i=1;i<=n;i++){
        if(vis[i]!=-1)v1[vis[i]].pop_back();
    }
    if(rem<0)return 0;
    return 1;
}
int bn(int l,int r){
    int ans=1e9;
    while(l<=r){
        int mid=(l+r)/2;
        if(check(mid)){
            r=mid-1;
            ans=mid;
        }
        else l=mid+1;
    }
    return ans;
}
int main(){
    cin>>n>>m;
    for(int i=1;i<=n;i++)scanf("%d",&k[i]),k1[i]=k[i];
    for(int i=0;i<m;i++){
        scanf("%d%d",&x,&y);
        v[x].push_back(y);
    }
    cout<<bn(1,5e5)<<endl;
}
