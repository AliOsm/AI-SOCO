// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 100000 + 77;
int n , t , tim = 1 , P[N] , C[N] , T[N];
bool Pr;
void dfs(int v , bool d = 0){
   C[v] = tim;
   ++ T[C[v]];
   if(Pr)
      printf("%d %d\n" , v , d ? t : P[t]);
   if(C[P[v]])
      return ;
   dfs(P[v] , d ^ 1);
}
int main(){
   scanf("%d" , & n);
   for(int i = 1;i <= n;++ i)
      scanf("%d" , & P[i]) , (P[i] == i ? t = i : 0);
   if(t){
      printf("YES\n");
      for(int i = 1;i <= n;++ i)
         if(i != t)
            printf("%d %d\n" , i , t);
      return 0;
   }
   for(int i = 1;i <= n;++ i)
      if(i == P[P[i]])
         t = i;
   if(t == 0)
      return ! printf("NO");
   dfs(t);
   ++ tim;
   for(int i = 1;i <= n;++ i){
      if(C[i])
         continue ;
      dfs(i);
      ++ tim;
   }
   for(int i = 1;i <= n;++ i)
      if(T[i] & 1)
         return ! printf("NO");
   printf("YES\n");
   printf("%d %d\n" , t , P[t]);
   memset(C , 0 , sizeof(C));
   C[t] = C[P[t]] = 1;
   tim = 2;
   Pr = 1;
   for(int i = 1;i <= n;++ i){
      if(C[i])
         continue ;
      dfs(i);
      ++ tim;
   }
   return 0;
}
