#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath>
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<math.h>
#include<sstream>	
#include<cstdio>
using namespace std;

const double EPS = 1e-7;
const double PI = acos(-1.0);
const double ZERO = 0;
const double DOUBLE_MAX = 1/ZERO;
typedef complex<double> point;
#define X real()
#define Y imag()
#define rad(p) (atan2((p.Y),(p.X)))
#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define length(a) hypot((a).X,(a).Y)
#define normalize(p) ((p)/length(p))
#define rotate(p,origin,ang) (((p)-(origin))*exp(point(0,(ang)))+(origin))
#define collinear(a,b,c) ( fabs( cross((a)-(b),(c)-(b))) < EPS)
#define bisector(a,b) (((a)+(b))/2.0) // return the mid point
#define polar(r,theta) (point((r),0)*exp(point(0,(theta))))

#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define inf (0x7fffffff)
#define mp make_pair
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
typedef  long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef   double ld;

int main(){
	//read;
	int n,m;
	cin>>n>>m;
	rep(i,n){
		if(i%2==0){ rep(j,m) cout<<"#"; }
		else if ( (i/2)%2==0) { rep(j,m-1) cout<<"."; cout<<"#"; }
		else {  cout<<"#"; rep(j,m-1) cout<<"."; }
		cout<<endl;
	}
	return 0;
}