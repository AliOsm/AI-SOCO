#include <cassert>
#include <cstdio>
#include <cstring>

int const MAX_N =    1000006;
int const MOD   = 1000000007;

char s [MAX_N];
int t [MAX_N];
int f [MAX_N] [4];

int main (void)
{
	while (scanf (" %s", s) > 0)
	{
		int n = strlen (s);
		for (int i = 0; i < n; i++)
		{
			switch (s[i])
			{
				case '0': t[i] = 0; break;
				case '1': t[i] = 1; break;
				case '2': t[i] = 2; break;
				case '*': t[i] = 3; break;
				case '?': t[i] = 4; break;
				default: assert (false); break;
			}
		}
		bool ok = (t[0] != 2);
		if (t[0] < 3)
		{
			t[0]++;
		}
		ok &= (t[n - 1] != 2);
		if (t[n - 1] < 3)
		{
			t[n - 1]++;
		}
#ifdef DEBUG
		printf ("%d %d\n", t[0], t[n - 1]);
#endif
		t[n] = 3;
		n++;

		memset (f, 0, sizeof (f));
		f[0][3] = 1;
		for (int i = 0; i < n; i++)
		{
			for (int u = 0; u < 4; u++)
			{
				for (int v = 0; v < 4; v++)
				{
					if (t[i] != 4 && t[i] != v)
					{
						continue;
					}
					if ((u == 0 && v >= 2) ||
					    (u == 1 && v < 3) ||
					    (u == 2) ||
					    (u == 3 && v == 0))
					{
						continue;
					}
					int w = v - (u == 3 && v != 3);
					assert (w >= 0);
					f[i + 1][w] += f[i][u];
					if (f[i + 1][w] >= MOD)
					{
						f[i + 1][w] -= MOD;
					}
#ifdef DEBUG
					printf ("u = %d, v = %d: "
					        "f[%d][%d] = %d\n",
					        u, v, i + 1, w, f[i + 1][w]);
#endif
				}
			}
		}

		int res = f[n][3] * ok;
		if (res >= MOD)
		{
			res -= MOD;
		}
		printf ("%d\n", res);
	}
	return 0;
}
