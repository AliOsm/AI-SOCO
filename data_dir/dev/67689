#include <bits/stdc++.h>
using namespace std;

const int MAXN = 1e6 + 10;

int n, a[MAXN], r[MAXN];
int id, fen[MAXN], cnt[MAXN];
vector<int> tmp;

void update(int id, int val) {
	for (int i = id; i <= n; i += i & -i) {
		fen[i] += val;
	}
}

int query(int id) {
	int res = 0;
	for (int i = id; i >= 1; i -= i & -i) {
		res += fen[i];
	}
	return res;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n;
	for (int i = 1; i <= n; i++) {
		cin >> a[i];
		tmp.push_back(a[i]);
	}

	sort(tmp.begin(), tmp.end());
	vector<int>::iterator it = unique(tmp.begin(), tmp.end());
	tmp.resize(it - tmp.begin());

	for (int i = 1; i <= n; i++) {
		a[i] = lower_bound(tmp.begin(), tmp.end(), a[i]) - tmp.begin();
	}

	for (int i = n; i >= 1; i--) {
		cnt[a[i]]++;
		r[i] = cnt[a[i]];

		update(r[i], 1);
	}

	long long ans = 0;
	memset(cnt, 0, sizeof(cnt));
	for (int i = 1; i <= n; i++) {
		update(r[i], -1);

		cnt[a[i]]++;
		ans += query(cnt[a[i]] - 1);
	}

	cout << ans << '\n';

	return 0;
}