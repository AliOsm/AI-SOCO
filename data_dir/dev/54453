#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 7;

int parent[N], sz[N];

int fset(int v){
    if(v == parent[v]){
        return v;
    }
    else{
        return parent[v] = fset(parent[v]);
    }
}

bool usets(int x, int y){
    x = fset(x);
    y = fset(y);
    if(x != y){
        if(sz[x] > sz[y]){
            swap(x, y);
        }
        sz[y] += sz[x];
        parent[x] = y;
        return true;
    }
    return false;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m;
    cin >> n >> m;

    map < int, vector < pair < int, int > > > v;
    for(int i = 0; i < m; ++i){
        int a, b, c;
        cin >> a >> b >> c;
        v[c].push_back({a - 1, b - 1});
    }

    for(int i = 0; i < n; ++i){
        sz[i] = 1;
        parent[i] = i;
    }

    int ans = 0;

    for(auto it = v.begin(); it != v.end(); ++it){
        int cnt = 0;
        for(auto to : it -> second){
            cnt += fset(to.first) != fset(to.second);
        }
        for(auto to : it -> second){
            cnt -= usets(to.first, to.second);
        }
        ans += cnt;
    }

    cout << ans;
}
