#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
#define pll pair<ll, ll>
const int mod = (1e9) + 7;
const double eps = 1e-6;
const int siz = 1e5 + 5, siz2 = 1049659, siz3 = 5032108;
int n, arr[siz], ac[siz], bc[siz], sc[3];
vector<pii> ans;
int main()
{
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d", &arr[i]);
		ac[i] = (arr[i] == 1) + ac[i - 1];
		bc[i] = (arr[i] == 2) + bc[i - 1];
	}
	for (int t = 1; t <= n; t++) {
		int cur = 1;
		while (true) {
			int ind = min(lower_bound(ac + cur, ac+n+1, ac[cur-1]+t)-ac, lower_bound(bc + cur, bc + n + 1, bc[cur - 1] + t) - bc);
			if (ind == n + 1) {
				break;
			}
			sc[arr[ind]]++;
			cur = ind + 1;
			if (cur == n + 1) {
				if (sc[arr[ind]] > sc[((arr[ind] - 1) ^ 1) + 1]) {
					ans.push_back({sc[arr[ind]], t});
				}
				break;
			}
		}
		sc[1] = sc[2] = 0;
	}
	sort(ans.begin(), ans.end());
	int sz = ans.size();
	printf("%d\n", sz);
	for (int i = 0; i < sz; i++) {
		printf("%d %d\n", ans[i].first, ans[i].second);
	}
	return 0;
}