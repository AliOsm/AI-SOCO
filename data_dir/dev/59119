#include <cstdio>
#include <iostream>
#include <cstring>
using namespace std;
int n,i,j,k,tot,size[701],f[701][701][51],root[701],next[1401],point[1401],o[51],w[2];
bool vis[701];

void connect(int u,int v)
{
     point[++tot]=v;
     next[tot]=root[u];
     root[u]=tot;
}

void max(int a[],int b[])
{
     if (b[0]>a[0])
        for (int i=0;i<=b[0];i++) a[i]=b[i];
     if (a[0]!=b[0]) return ;
     for (i=a[0];i>=1;i--)
         if (a[i]>b[i]) return ;
         else
         if (a[i]<b[i])
         {
            for (j=i;j>=1;j--) a[j]=b[j];
            return ;
         }
}

void mul(int ans[],int a[],int b[])
{
     memset(ans,0,sizeof(o));
     int i,j,k;
     if (a[0]==0 || b[0]==0) return ;
     for (i=1;i<=a[0];i++)
         for (j=1;j<=b[0];j++)
             ans[i+j-1]+=a[i]*b[j];
     ans[0]=a[0]+b[0]-1;
     for (i=1;i<=ans[0] || ans[i]!=0;i++)
         ans[i+1]+=ans[i]/10000,ans[i]%=10000;
     ans[0]=i-1;
}

void dfs(int now)
{
     vis[now]=true;
     size[now]=1;
     f[now][1][0]=f[now][1][1]=1;
     int i=root[now];
     while (i)
     {
           if (!vis[point[i]])
           {
              dfs(point[i]);
              for (int j=size[now];j>=1;j--)
                  for (int k=size[point[i]];k>=0;k--)
                  {
                      mul(o,f[now][j],f[point[i]][k]);
                      max(f[now][j+k],o);
                  }
              size[now]+=size[point[i]];
           }
           i=next[i];
     }
     for (i=1;i<=size[now];i++)
         w[0]=1,w[1]=i,mul(o,f[now][i],w),max(f[now][0],o);
}

void print(int x)
{
     printf("%d%d%d%d",x/1000%10,x/100%10,x/10%10,x%10);
}

int main()
{
    scanf("%d",&n);
    for (i=1;i<n;i++)
        scanf("%d%d",&j,&k),connect(j,k),connect(k,j);
    dfs(1);
    cout << f[1][0][f[1][0][0]];
    for (i=f[1][0][0]-1;i>=1;i--) print(f[1][0][i]);
    cout << endl;
    return 0;
}