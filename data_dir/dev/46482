#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define ll long long
#define maxn 400005
#define fr(i,j,k) for(int i=j;i<k;i++)
#define f(n) fr(i,0,n)
#define f1(n) fr(i,1,n+1)
#define ms(i) memset(i,0,sizeof(i));
const ll mod=1e9+7;
int d[200005];
struct e
{
	int x,y,w;
};
bool cmp(e x,e y){
	return x.w < y.w;
}
int fi(int x){
	return d[x] == x ? d[x] : d[x] = fi(d[x]);
}
int main(){
	ios_base::sync_with_stdio(false);
	int n,m;
	while(cin >> n >> m){
		vector<e>e;
		f(m){
			int add1,add2,add3;
			cin >> add1 >> add2 >> add3;
			e.pb({add1,add2,add3});
		}
		f1(n){
			d[i] = i;
		}
		sort(e.begin(),e.end(),cmp);
		int need = n-1;
		int ans = 0;
		int last = 0;
		for(int i=1;i<m;i++){
			if(e[i].w==e[last].w){
				continue;
			}
			else{
				for(int j = last;j < i ; j++){
					int x = fi(e[j].x);
					int y = fi(e[j].y);
					if(x != y){
						ans++;
					}
				}
				for(int j = last ; j < i ; j++){
					int x = fi(e[j].x);
					int y = fi(e[j].y);
					if(x != y){
						d[x] = y;
					}
				}
				last = i;
			}
		}
		for(int j = last;j < m ; j++){
			int x = fi(e[j].x);
			int y = fi(e[j].y);
			if(x != y){
				ans++;
			}
		}
		cout << ans - need << endl;
	}
}