#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pii pair<ll,ll>
#define piii pair<ll,pair<ll,ll>>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007
#define LD long double
#define bpc __builtin_popcount
#define gentum getnum
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int yes[10];

int main()
{
    ll n=getnum();


    ll p=1e9*1e3;    
    int done=0;
/*    
    while(p>0)
    {
        if((n/p)%10==0)
        {
            if(done)break;
        }
        else
        {
            done=1;
            yes[(n/p)%10]=1;
        }
        p/=10;
    }
*/
    int ans=199,check=-1;
    for(ll i=1;i<=100000;i++)
    {
        ll x=i*i;
        ll p=1e9*1e3;
        int pos=1;
        
        while(p>0)
        {
            if((x/p)%10==0);
            else 
            {
                //if(!yes[(x/p)%10])pos=0;
                break;
            }
            p/=10;
        }
        if(pos)
        {
            ll q=1e9*1e3;
            done=0;
            int localans=0;
            while(q>0)
            {
                if(p>0&&(n/q)%10==(x/p)%10)
                {
                    p/=10;
                    done=1;
                }
                else if((n/q)%10==0)
                {
                    if(done)localans++;
                }
                else
                {
                    done=1;
                    localans++;
                }
                q/=10;
            }
            if(p==0)
            {
                if(ans>localans)check=x;
                ans=min(ans,localans);
            }
        }
    }

    if(ans==199)printf("-1\n");
    else cout<<ans<<endl;
}