#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <algorithm>
#include <cmath>
#include <queue>
#include <iterator>
#include <functional>
#include <numeric>
using namespace std;

#define ll long long
#define forn(i,n)for(i=0;i<n;i++)
#define forc(i,c,n)for(i=c;i<=n;i++)
typedef list<ll> LST;
typedef vector<ll> VEC;
typedef map<ll, ll> MAP;

int main() {
	ifstream fin("Text.txt");
	ios_base::sync_with_stdio(false); cin.tie(0);

	ll i, j, q;
	ll n, m, p, k, t;
	ll a, b, c, d;
	ll y, z;
	ll x = 0;
	ll one = 1, zero = 0;
	ll ans = 1000000000000;
	ll l, r;
	ll mod = 1000000007;
	string s1,s2,st1, st2, st3;
	char ch1, ch2, ch3;
	
	ll mtc,tans;

	cin >> n;
	vector<string>vcs(n);
	forn(i, n) {
		cin >> vcs[i];
	}
	forn(y, n) {
		vector<int>vc(n);
		s1=vcs[y];
		c = s1.length();
		forn(i, n) {
			s2=vcs[i];
			j = 0;
			q = 0;
			k = 0;
			mtc = 0;
			while (true) {
				if (s1[j] == s2[q%c]) {
					j++;
					q++;
					mtc++;
				}
				else {
					k++;
					q = k;
					j = 0;
					mtc = 0;
				}
				if (mtc == c) {
					vc[i] = q - j;
					break;
				}
				if (k >= c) {
					cout << -1 << endl;
					return 0;
				}

			}
		}
		forn(i, n) {
			tans = 0;
			forn(j, n) {
				if (vc[j] >= vc[i])
					tans += vc[j] - vc[i];
				else
					tans += c - (vc[i] - vc[j]);
			}
			ans = min(ans, tans);
		}
	}
	cout << ans << endl;
	return 0;
	return 0;
}