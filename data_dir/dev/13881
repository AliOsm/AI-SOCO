#include<bits/stdc++.h>
#define mp make_pair

using namespace std;

bool vis[1005][1005];
pair<int,int> par[1005][1005];
int r[1005][1005];
string s[1005];

void dfs(int i,int j,int n,int m,int x,int y)
{
  vis[i][j]=true;

  if(i+1<n && s[i+1][j]=='.' && !vis[i+1][j])
  {
    par[i+1][j]=par[x][y];
    r[x][y]+=r[i+1][j];
    dfs(i+1,j,n,m,x,y);
  }
  if(i-1>=0 && s[i-1][j]=='.' && !vis[i-1][j])
  {
    par[i-1][j]=par[x][y];
    r[x][y]+=r[i-1][j];
    dfs(i-1,j,n,m,x,y);
  }
  if(j+1<m && s[i][j+1]=='.' && !vis[i][j+1])
  {
    par[i][j+1]=par[x][y];
    r[x][y]+=r[i][j+1];
    dfs(i,j+1,n,m,x,y);
  }
  if(j-1>=0 && s[i][j-1]=='.' && !vis[i][j-1])
  {
    par[i][j-1]=par[x][y];
    r[x][y]+=r[i][j-1];
    dfs(i,j-1,n,m,x,y);
  }
}


int main()
{
  int n,m;
  scanf("%d %d",&n,&m);

  for(int i=0; i<n; i++)
  {
    for(int j=0; j<m; j++)
      r[i][j]=1,par[i][j]=mp(i,j);
  }

  for(int i=0; i<n; i++)
    cin>>s[i];

  for(int i=0; i<n; i++)
  {
    for(int k=0; k<m; k++)
    {
      if(!vis[i][k] && s[i][k]=='.')
        dfs(i,k,n,m,i,k);
    }
  }

  for(int i=0; i<n; i++)
  {
    for(int k=0; k<m; k++)
    {
      if(s[i][k]=='.')
        printf(".");
      else
      {
        set<pair<int,int> >s1;
        if(i-1>=0 && s[i-1][k]=='.') s1.insert(par[i-1][k]);
        if(i+1<n && s[i+1][k]=='.') s1.insert(par[i+1][k]);
        if(k+1<m && s[i][k+1]=='.' ) s1.insert(par[i][k+1]);
        if(k-1>=0 && s[i][k-1]=='.') s1.insert(par[i][k-1]);
        set<pair<int,int> >::iterator it=s1.begin();
        int sum=0;

        for(; it!=s1.end(); it++)
        {
          int i=it->first,j=it->second;
          sum+=r[par[i][j].first][par[i][j].second];
        }
        sum++;
        printf("%d",(sum%10));
      }
    }
    printf("\n");
  }

  return 0;
}
