#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <map>
#include <iostream>
#include <vector>
#include <set>
#include <functional>
#include <map>
#include <string> 
#include <stack>

using namespace std;

int n, m, k;
map<string, pair<int, int> > mp;
string tab[33][33];

void add(int a, int b, string name) {
	for (int i = a; i <= n; ++i) {
		for (int j = i == a ? b : 1; j <= m; ++j) {
			if (tab[i][j].length() == 0) {
				tab[i][j] = name;
				mp[name] = make_pair(i, j);
				return;
			}
		}
	}
}

int main() {

//#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
//#endif

	cin >> n >> m >> k;

	for (int i = 0; i <= n; ++i) {
		for (int j = 0; j <= m; ++j) {
			tab[i][j].clear();
		}
	}

	char str[100];
	string name;
	gets(str);
	while (k-- > 0) {
		gets(str);
		int len = strlen(str);
		name.clear();
		if (str[0] == '+') {
			int p = 3;
			int ic = 0;
			while ('0' <= str[p] && str[p] <= '9') {
				ic = ic * 10 + str[p] - '0';
				++p;
			}
			++p;
			int jc = 0;
			while ('0' <= str[p] && str[p] <= '9') {
				jc = jc * 10 + str[p] - '0';
				++p;
			}
			++p;

			for (int i = p; i < len; ++i) name.push_back(str[i]);

			add(ic, jc, name);

		} else {
			for (int i = 3; i < len; ++i) name.push_back(str[i]);
			if (mp.find(name) == mp.end()) {
				printf("-1 -1\n");	
			} else {
				pair<int, int> pos = mp[name];
				printf("%d %d\n", pos.first, pos.second);
				tab[pos.first][pos.second].clear();
				mp.erase(name);
			}
		}
	}

	return 0; 
}