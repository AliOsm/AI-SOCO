#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
#define ll long long

using namespace std;

const ll inf=1e18;
const int mod=1e9+7;

int used[100005],n,k;
vector <vector <pair <int,int> > > g;
ll dp[100005],sum[100005];

void dfs(int v,int prev) {
    used[v] = 1;
    vector <int> sonsval;
    for (int i=0; i<g[v].size(); i++) {
        int to = g[v][i].F, val = g[v][i].S;
        if (used[to]) continue;
        dfs(to,v);
        sonsval.pb(sum[to]+val);
    }
    int sz = sonsval.size();
    sort(sonsval.rbegin(),sonsval.rend());
    for (int i=0; i<min(k-1,sz); i++) {
        sum[v]+=sonsval[i];
    }
    for (int i=0; i<g[v].size(); i++) {
        ll to = g[v][i].F, val = g[v][i].S;
        ll add = sum[v];
        if (to == prev) continue;
        if (sz > 0 && k >= 2 && sonsval[min(sz - 1,k - 2)] <= sum[to] + val) {
            add += dp[to] - sum[to];
            if (k - 1 < sz) add += sonsval[k - 1];
        } else {
            add += val + dp[to];
        }
        dp[v] = max(dp[v],add);
    }
}

int main() {
    ios_base::sync_with_stdio(0);
   // freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);
    cin >> n >> k;
    g.resize(n);
    for (int i=0; i<n-1; i++) {
        int x,y,val;
        cin >> x >> y >> val;
        g[x].pb({y,val});
        g[y].pb({x,val});
    }
    dfs(0,-1);
    //for (int i=0; i<n; i++) {
   //     cout << dp[i] << endl;
   // }
    cout << dp[0] << endl;
}

