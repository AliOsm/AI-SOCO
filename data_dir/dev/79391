#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <utility>
using namespace std;
#define REP(I,N) for (I=0;I<N;I++)
#define rREP(I,N) for (I=N-1;I>=0;I--)
#define rep(I,S,N) for (I=S;I<N;I++)
#define rrep(I,S,N) for (I=N-1;I>=S;I--)
#define FOR(I,S,N) for (I=S;I<=N;I++)
#define rFOR(I,S,N) for (I=N;I>=S;I--)
typedef unsigned long long ULL;
typedef long long LL;
const int INF=0x3f3f3f3f;
const LL INFF=0x3f3f3f3f3f3f3f3fll;
const LL M=1e9+7;
const LL maxn=1e6+7;
const double eps=0.00000001;
LL gcd(LL a,LL b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<typename T>inline T powMM(T a,T b){T ret=1;for (;b;b>>=1ll,a=1ll*a*a%M) if (b&1) ret=1ll*ret*a%M;return ret;}

int n,m;
int i,j,k;
char a[maxn],ans[maxn];
bool f[maxn],g[maxn];//f[i]:could
int main(){
    scanf("%s",a);
    n=strlen(a);
    while ((2<<m)<=n) m++;
    REP(i,(1<<m)) f[i]=1;
    REP(i,n-(1<<m)+1){
        ans[i]='z'+1;
        REP(j,(1<<m)) if (f[j]) ans[i]=min(ans[i],a[i+j]);
        REP(j,(1<<m)) g[j]=f[j]&(a[i+j]==ans[i]);
        REP(j,(1<<m)) if (g[j]) REP(k,m) g[j|(1<<k)]=1;
        REP(j,(1<<m)) f[j]&=g[j];
//        REP(j,(1<<m)) if (f[j]) printf("%d ",j);puts("");
    }ans[n-(1<<m)+1]=0;
    puts(ans);
}
/*
ababa
*/
