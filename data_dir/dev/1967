#include<bits/stdc++.h>
#define F first
#define S second
#define PB push_back
#define LB lower_bound
#define UB upper_bound
#define SP fixed << setprecision(10)
#define ER(x) cout << #x << " = " << x << endl;
#define int long long
using namespace std;
const int N = 200100;
int a[N] , deg[N] , b[N];
set < pair <int , int> > st;
vector <int> adj[N];
main(){

	ios_base::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	
	int n , m , sum = 0 , s , mx = 0 , u , v;
	
	cin >> n >> m;

	for(int i = 0 ; i < n ; i++){
		cin >> a[i];
	}
	
	for(int i = 0 ; i < m ; i++){
		cin >> u >> v;
		deg[--u] += 1;
		deg[--v] += 1;
		adj[v].PB(u);
		adj[u].PB(v);
	}
	
	cin >> s;
	s--;

	for(int i = 0 ; i < n ; i++){
		if(i != s)
			st.insert({deg[i] , i});
	}
	
	while(st.size() && (*st.begin()).F == 1){
		auto u = *st.begin();
		st.erase(u);

		for(auto v : adj[u.S]){
			if(!deg[v])
				b[u.S] = max(b[v] , b[u.S]);
			else if(v != s){
				st.erase({deg[v] , v});
				deg[v]--;
				st.insert({deg[v] , v});
			}
		}

		b[u.S] += a[u.S];
		a[u.S] = 0;
		deg[u.S] = 0;

	}
	
	for(int i = 0 ; i < n ; i++){
		sum += a[i];
		mx = max(mx , b[i]);
	}
	
	cout << sum + mx << endl;

	return 0;
}
