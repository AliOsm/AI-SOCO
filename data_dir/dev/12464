#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string>
#include<math.h>
#include<queue>
#include<stack>
#include<sstream>
#include<stdio.h>
#include<map>
#include<set>
#include<memory.h>
#include<algorithm>
#include<vector>
#include<time.h>
using namespace std;
typedef long long ll;
int n, a, b, c;
bool dp[300][300][300];
int main(){
    cin >> n;
    if (n == 1)
    {
        cin>>a;
        if(a)
        puts("BitLGM");
        else puts("BitAryo");
        return 0;
    }
    if (n == 2){
        cin >> a >> b;
        
        memset(dp[0], 0, sizeof(dp[0]));
        for (int i = 0; i <= a; ++i)
        for (int j = 0; j <= b; ++j)
        if (!dp[0][i][j]){
            int m = max(i, j);
            for (int l = 1; l + m < 300; ++l)
                dp[0][i + l][j + l] = 1;
            for (int l = i + 1; l < 300; ++l)
                dp[0][l][j] = 1;
            for (int l = j + 1; l < 300; ++l)
                dp[0][i][l] = 1;
        }
        if (dp[0][a][b])
            puts("BitLGM");
        else puts("BitAryo");
    }
    else{
        cin >> a >> b >> c;
        memset(dp, 0, sizeof(dp));
        for (int i = 0; i <= a;++i)
        for (int j = 0; j <= b;++j)
        for (int k = 0; k <= c;++k)
        if (!dp[i][j][k]){
            int m = max(max(i, j), k);
            for (int l = 1; l + m < 300; ++l)
                dp[i + l][j + l][k + l] = 1;
            for (int l = i + 1; l < 300; ++l)
                dp[l][j][k] = 1;
            for (int l = j + 1; l < 300; ++l)
                dp[i][l][k] = 1;
            for (int l = k + 1; l < 300; ++l)
                dp[i][j][l] = 1;
        }
        if (dp[a][b][c])
            puts("BitLGM");
        else puts("BitAryo");
    }
}