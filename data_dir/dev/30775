#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N = 1e5 + 7;
const int LG = 20 + 1;

int a[N];
ll dp[N];
pair<int, int> sp[LG][N];
int lg[N];

int main()
{
	ios::sync_with_stdio(false);

	int n;
	cin >> n;
	for (int i=0; i+1<n; i++)
	{
		cin >> a[i];
		a[i]--;
	}
	a[n-1] = n;
	for (int i=0; i<n; i++)
		sp[0][i] = {a[i], i};
	for (int i=1; i<LG; i++)
		for (int j=0; j + (1 << i) <= n; j++)
			sp[i][j] = max(sp[i-1][j], sp[i-1][j + (1 << (i-1))]);
	
	lg[1] = 0;
	for (int i=2; i<=n; i++)
		lg[i] = lg[i/2] + 1;

	dp[n-1] = 0;
	ll ans = 0;
	for (int i=n-2; i>=0; i--)
	{
		int len = a[i] - i;
		//cout << len << " " << lg[len] << " " << i+1 << " " << a[i] + 1 - (1 << lg[len]) << "\n";
		auto pos = max(sp[lg[len]][i+1], sp[lg[len]][a[i] + 1 - (1 << lg[len])]);
		//cout << pos.first << " " << pos.second << "\n";
		dp[i] = dp[pos.second] + (n - pos.second) - (a[i] - pos.second + 1) + (pos.second - i);
		//cout << dp[i] << "\n";
		ans += dp[i];
	}
	cout << ans << "\n";

	return 0;
}
