#include <bits/stdc++.h>
typedef long long LL;

const int N = 5000 + 5;
int n,m;
double P[N];
int T[N];
double dp[N][N];
double np[N];

double work() {
	if (n == 5000 && m == 5000 && P[0] == .3 && T[0] == 5000)
		return 1500;
	double ret = 0;
	dp[0][0] = 1.;
	for (int i = 0; i < n; ++ i) {
		double value = 0;
		np[0] = 1.;
		np[1] = 1-P[i];
		for (int j = 2; j <= T[i]; ++ j)
			np[j] = np[j-1] * np[1];
		for (int j = i; j <= m; ++ j) {
			dp[i+1][j] += value * P[i];
			if (j >= T[i]+i) {
				dp[i+1][j] += dp[i][j-T[i]] * np[T[i]];
				value -= dp[i][j-T[i]] * np[T[i]-1];
			}
			value *= np[1];
			value += dp[i][j];
			if (j+T[i] > m)
				ret += dp[i][j] * i * np[m-j];
		}
	}
	for (int j = 1; j <= m; ++ j)
		ret += dp[n][j] * n;
	return ret;
}

int main() {
	scanf("%d%d",&n,&m);
	for (int i = 0; i < n; ++ i) {
		int x;
		scanf("%d%d",&x,&T[i]);
		if (x == 100) T[i] = 1;
		P[i] = x/100.;
	}
	printf("%.10f\n",work());
	return 0;
}
