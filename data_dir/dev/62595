#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second

 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};	
//////////////////////


const int N = 200100;

struct BIT
{
	ll bit[N];
	BIT(){ memset(bit,0,sizeof bit); }
	void update( int x, ll val )
	{
		x+=2; 
		while(x<N){ bit[x]+=val; x+=LSONE(x); }
	}
	ll query( int x )
	{
		x+=2; ll ret = 0;
		while(x){ret+=bit[x]; x-=LSONE(x);}
		return ret;
	}
};

int n;
BIT bt1,bt2,bt3;
int v1[N],v2[N];
int f1[N],f2[N];
int slv[N];


int main()
{
	//ios::sync_with_stdio(0);	
	bt1 = BIT();
	bt2 = BIT();
	bt3 = BIT();

	scanf("%d",&n);
	for(int i=0;i<n;++i) scanf("%d",v1+i);
	for(int i=0;i<n;++i) scanf("%d",v2+i);

	for(int i=n-1;i>=0;--i)
	{
		f1[i] = bt1.query(v1[i]-1)%(n-i);
		bt1.update(v1[i],1);
	}
	
	debug("Fatoradic 1 = ");
	for(int i=0;i<n;++i) debug("%d ",f1[i]);
	debug("\n");


	for(int i=n-1;i>=0;--i)
	{
		f2[i] = bt2.query(v2[i]-1)%(n-i);
		bt2.update(v2[i],1);
	}

	debug("Fatoradic 2 = ");
	for(int i=0;i<n;++i) debug("%d ",f2[i]);
	debug("\nSolver = ");

	for(int i=0;i<n;++i)
	{
		slv[i] = (f1[i]+f2[i]);
		debug("%d ",slv[i]);
	}
	debug("\n");

	int cc = 1;
	for(int i=n-1;i>=0;--i)
	{
		if( slv[i] >= cc ) slv[i]-=cc, slv[i-1]++;
		cc++;
	}

	debug("Soma = ");
	for(int i=0;i<n;++i){ slv[i]%(n-i); debug("%d ",slv[i]%(n-i)); bt3.update(i+1,1); }
	debug("\n");
	
	for(int i=0;i<n;++i)
	{
		int lo = 0, hi = N-1;
		while( hi-lo > 1 )
		{
			int m = (lo+hi)>>1;
			if( bt3.query(m) <= slv[i] ) lo = m;
			else hi = m;
		}
		if( bt3.query(hi) >= slv[i] ) lo = hi;
		printf("%d ",lo-1);
		bt3.update(lo,-1);
	}
	printf("\n");


	return 0;
}