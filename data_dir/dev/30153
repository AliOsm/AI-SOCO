#include<bits/stdc++.h>
using namespace std;
#define MOD          998244353
#define C            1000000007
#define int           long long 
#define D             double
#define S             second
#define F             first
#define pb            push_back
#define ff            fflush(stdout)
#define ppb           pop_back()
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend()
#define SORT(v)       sort(ALL(v))  
#define lb            lower_bound
#define ub            upper_bound
#define si(c)         (int)((c).size())
#define L(c)           si(c)-1
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)      (a*(b/gcd(a,b)))
#define sqr(a)        ((a) * (a))
#define optimize()    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define accuracy      cout << fixed << setprecision(18);
#define inf           2e9
#define pow2(n)       ((int)1<<n)
typedef pair<int,int>                         pii;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef map<string,int>                       msi;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;
typedef vector<int>::iterator                  vit;
typedef set<int>::iterator                     sit;
typedef map<int,int >::iterator                mit;
inline  bool checkBit(int n, int i) { return n&((int)1<<i); }
inline  int setBit(int n, int i) { return n|((int)1<<i);; }
inline  int resetBit(int n, int i) { return n&(~((int)1<<i)); }
inline  bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
inline  bool isLeapYear(int year) { return (year%400==0) || (year%4==0 && year%100!=0); }
inline  void normal(int &a) { a = (a+MOD)%MOD; }
inline  int modMul(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a*b)%MOD; }
inline  int modAdd(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a+b)%MOD; }
inline  int modSub(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); a -= b; normal(a); return a; }
inline  int modPow(int b, int p) { int r = 1; while(p) { if(p&1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }
inline  int modInv(int a) { return modPow(a, MOD-2); }
inline  int modDiv(int a,int b) { return modMul(a, modInv(b)); }
inline  int fact(int r){ int ans=1;while(r)ans=modMul(ans,r),r--;return ans; }
inline  int invfact(int r){int ans=1;while(r)ans=modMul(ans,modInv(r)),r--; return ans;}
int cost[27][27],n,c,ans;
string s1,s2,s;
char c1,c2;
int ctoi(char c3){
	return (c3-'a');
}
void solve(){
	cin>>s1>>s2;
	cin>>n;
	for(int i=0;i<27;i++){
		for(int j=0;j<27;j++){
			if(i!=j)cost[i][j]=inf;
		}
	}
	for(int i=0;i<n;i++){
		cin>>c1>>c2>>c;
		cost[ctoi(c1)][ctoi(c2)]=min(cost[ctoi(c1)][ctoi(c2)],c);
	}
	if(si(s1)!=si(s2)){
		cout<<"-1"<<endl;return;
	}
	for(int k=0;k<26;k++){
		for(int i=0;i<26;i++){
			for(int j=0;j<26;j++){
				cost[i][j]=min(cost[i][j],cost[i][k]+cost[k][j]);
			}
		}
	}
	for(int i=0;i<si(s1);i++){
		int temp=inf;
		for(int j=0;j<26;j++){
			if(cost[ctoi(s1[i])][j]+cost[ctoi(s2[i])][j]<temp){
				c=j;
				temp=cost[ctoi(s1[i])][j]+cost[ctoi(s2[i])][j];
			}
		}
		ans+=temp;
		s.pb('a'+c);
	}
	if(ans<inf){
		cout<<ans<<endl;
		cout<<s<<endl;
	}
	else cout<<"-1"<<endl;
}
signed main(){   
    optimize();
	int t=1;
	//cin>>t;
	while(t--){
		solve();
	}
}