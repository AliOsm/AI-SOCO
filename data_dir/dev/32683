// We only fail when we stop trying
#include <bits/stdc++.h>
#define X first
#define Y second
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long ll;
const int mod = (int) 1e9 + 7;
const int oo = (int) 1e9;

const int N = 1e5+5;

int n, m;
ll h[N], p[N];

bool check(ll t)
{
  int cur = 0;
  for(int i = 0 ; i < n && cur < m ; i++){
    if(p[cur] < h[i]){
      ll left = h[i] - p[cur];
      if(left > t)
        return false;
      int j = cur;
      for( ; j < m ; j++){
        ll need = p[j] <= h[i] ? left : p[j] - p[cur] + min(p[j] - h[i], h[i] - p[cur]);
        if(need > t)
          break;
      }
      cur = j;
    }else{
      int idx = lower_bound(p, p+m, h[i] + t + 1) - p;
      cur = max(cur, idx);
    }
  }
  return cur >= m;
}

int main()
{
  scanf("%d%d", &n, &m);
  for(int i = 0 ; i < n ; i++)
    scanf("%lld", &h[i]);
  for(int i = 0 ; i < m ; i++)
    scanf("%lld", &p[i]);
  ll l = 0, r = 1e18, ans = 0;
  while(l <= r){
    ll mid = (l+r)/2;
    if(check(mid)){
      ans = mid;
      r = mid - 1;
    }else{
      l = mid + 1;
    }
  }
  printf("%lld\n", ans);
  return 0;
}
