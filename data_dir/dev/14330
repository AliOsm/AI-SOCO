#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector < int > vi;
const int N = 2e5 + 5;

int n, mn = 1e5 + 5 , mnV = 0;
ll cost[N];
vi adj[N] , adj2[N] , s;
bool vis[N] , vis2[N];
int p[N];

void dfs(int u)
{
    vis2[u] = 1;
    for(auto v : adj2[u])
        if(!vis2[v])
            dfs(v);
}

void get(int u , int v)
{
    while( 1 )
    {
        if(cost[u] < mn)
        {
            mn = cost[u];
            mnV = u;
        }
        if(u == v)break;
        u = p[u];
    }
}

void dfs1(int u)
{
    vis[u] = 1;
    for(auto v : adj[u])
    {
        if(!vis[v])
        {
            p[v] = u;
            dfs1(v);
        }
        else {
            p[v] = u;
            get(u , v);
        }
    }

}


main()
{
    scanf("%d" , &n);

    for(int i = 1; i <= n ; i ++)
        scanf("%lld" , &cost[i]);

    int v;
    for(int u = 1 ; u <= n ; u ++)
    {
        scanf("%d" , &v);
        adj[u].push_back(v);
        adj2[u].push_back(v);
        adj2[v].push_back(u);
    }

    for(int i = 0 ; i < N ; i ++)p[i] = 1;
    ll ans = 0ll;
    for(int i = 1 ; i <= n ; i ++)
    {
        if(!vis2[i])
        {
            mn = 1e5 + 5;
            dfs1(i);
            ans += mn*1ll;
            dfs( mnV );
        }
    }

    printf("%lld\n" , ans);
}
