#include <bits/stdc++.h>

using namespace std;

#define long long long
#define INF (long) 1e18
#define MOD ((long) 1e9 + 7)
#define pll pair<long, long>
#define pb push_back
#define pf push_front
#define FOR(i, a, b) \
  for (long i = a; i < (long) b; i++)
#define REP(i, n) FOR(i, 0, n)
#define SORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr < b.atr; });
#define UNSORT(v, atr) \
  sort(v.begin(), v.end(), \
    [](auto &a, auto &b) { return a.atr > b.atr; });
#define PRINTV(v) \
  if (not v.empty()) { \
    printf("%.15f", v[0]); \
    for (long _i = 1; _i < (long) v.size(); _i++) { \
      printf(" %.15f", v[_i]); \
    } \
    printf("\n"); \
  }

vector<long> gera_primos(long n)
{
  vector<long> primos;
  vector<bool> crivo(n);
  primos.pb(2);
  for (long i = 3; i <= n; i += 2) {
    if (crivo[i]) continue;
    primos.pb(i);
    for (long j = i; j <= n; j += i) {
      crivo[j] = true;
    }
  }
  return primos;
}

struct Link
{
  long from, to, d;
};

struct Node
{
  long id, ord, altura = -1, total, ouro;
  bool visitado, red;
  long n;
  vector<Link> out;

  Node() {
    static long i = 0;
    id = i++;
  }
};

int main()
{
  //ios_base::sync_with_stdio(false);

  long a, b, c;
  cin >> a >> b >> c;

  if ((b > a and c < 0) or (a > b and c > 0)) {
    puts("NO");
    return 0;
  }
  if (c == 0) {
    if (a == b) puts("YES");
    else puts("NO");
    return 0;
  }
  if ((b - a) % c == 0) puts("YES");
  else puts("NO");
}
