#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define ll long long
#define sz(s) int(s.size())
#define ull unsigned long long    
#define all(s) s.begin(),s.end()
#define only_cin ios_base::sync_with_stdio(0);cin.tie(0)

using namespace std;

const int MAXN = 1e5 + 256;
const char nxt = '\n';
inline void in (string Q) {Q += ".in";freopen (Q.c_str(), "r", stdin);}
inline void out (string Q) {Q += ".out";freopen (Q.c_str(), "w", stdout);}
inline void open_file (string Q) {in (Q);out (Q);}

int n, cnt[MAXN], suff[MAXN], kol[MAXN];
pair < int, int > D[MAXN];

int main () {
	only_cin;
	#ifdef accepted
		in ("");
	#endif
	if (0)
		open_file ("");

	cin >> n;

	for (int i = 1; i <= n; ++i) {
		cin >> D[i].first;
		kol[D[i].first]++;
	}
	for (int j = 1; j <= n; ++j) {
		cin >> D[j].second;
	}
	sort (D + 1, D + 1 + n);
	for (int i = n; i >= 1; --i) {
		suff[i] += suff[i + 1] + D[i].second;
	}
	/*for (int i = 1; i <= n; ++i) {
		cout << D[i].first << ' ' << D[i].second << nxt;
	}
	cout << nxt;*/
	int ans = INT_MAX;
	vector < int > V;
	for (int i = 1; i <= n; ++i) {
		if (D[i].first == D[i + 1].first) {
		    V.pb (D[i].second);
			continue;
		}
		int x = D[i].first, cur = 0, del = i - kol[x] * 2 + 1;
		cur += suff[i + 1];
		//cout << del << ' ';
		for (int need = 1; need <= 200; ++need) {
			if (del <= 0)
				break;
			if (!cnt[need])
				continue;
			if (del - cnt[need] <= 0) {
				cur += del * need;
				break;
			}
			del -= cnt[need];
			cur += need * cnt[need];
		}
		ans = min (ans, cur);
		//cout << cur << ' ' << D[i].first << nxt;
		cnt[D[i].second]++;
		while (!V.empty ()) {
			cnt[V.back ()]++;
			V.pop_back ();
		}
	}
	cout << ans;

    return 0;
}