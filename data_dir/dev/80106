#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)    for(int i=a;i<=b;i++)
#define fr(i,a)      for(int i=0;i<a;i++)
#define fd(i,a,b)    for(int i=b;i>=a;i--)
#define clr(x)       memset(x,0,sizeof(x))
#define cln(x)       memset(x,-1,sizeof(x))
#define __           printf(" ")
#define _            printf("\n")
#define _o           printf("1\n")
#define stree        long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define snode        long long s,long long e,long long node
#define slft         s,mid,lft
#define srht         mid+1,e,rht
#define sin()        if(S<=s&&e<=E)
#define sout()       if(S>e||s>E)
#define mod          1000000000
#define read()       freopen("in.txt","r",stdin)
#define write()      freopen("out.txt","w",stdout)
#define sfl(x)       scanf("%I64d",&x)
#define sfll(x,y)    scanf("%I64d %I64d",&x,&y)
#define sflll(x,y,z) scanf("%I64d %I64d %I64d",&x,&y,&z)
#define pfl(x)       printf("%I64d",x)
#define pfll(x,y)    printf("%I64d %I64d",x,y)
#define pflll(x,y,z) printf("%I64d %I64d %I64d",x,y,z)
#define xx           100000

typedef long long ll;
typedef pair<long long,long long> pll;


long long ans[1000];
string s;
long long len=s.size();

bool find_(){
   fi(i,1,len-1) if(s[i]!=s[i-1]) return false;
   return true;
}

long long find2(int ch){
   long long ret=0;
   fr(i,len) if(ch!=int(s[i])) return ret;
             else ret++;
   return ret;
}

long long find3(int ch){
   long long ret=0;
   fd(i,0,len-1) if(ch!=int(s[i])) return ret;
             else ret++;
   return ret;
}

long long find4(int ch){
   long long ret=0,cur=0;
   fr(i,len) if(int(ch)!=s[i]) {
      ret=max(cur,ret);
      cur=0;
   }
   else cur++;
   ret=max(ret,cur);
   return ret;
}


main(){
    clr(ans);
    long long n;
    cin>>n;
    while(n--){
        cin>>s;
        len=s.size();

        if(find_()){
           int c=int(s[0]);
           ans[c]+=(ans[c]+1)*len;
           if(ans[c]>mod) ans[c]=mod;
           fi(i,int('a'),int('z')) if(int(c)!=int(i)) ans[i]=(ans[i]!=0);
        }
        else{
            fi(i,int('a'),int('z')){
                long long x=find2(i)+find3(i);
                if(ans[i]) ans[i]=x+1;
                else ans[i]=0;

                x=find4(i);
                ans[i]=max(x,ans[i]);
                if(ans[i]>mod) ans[i]=mod;
            }
        }
    }



    long long aa=0;
    fi(i,int('a'),int('z')) {
        aa=max(aa,ans[i]);
    }
    cout<<aa<<endl;

    return 0;
}
