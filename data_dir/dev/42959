#include<bits/stdc++.h>
#define int long long
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define pb push_back
#define mk make_pair
#define ld long double
#define y1 asdfghjkl
#define ufo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
using namespace std;

mt19937_64 mt_rnd_64(chrono::steady_clock::now().time_since_epoch().count());
long long rnd(long long l, long long r){
    return (mt_rnd_64() % (r-l+1)) + l;
}

const int N = 2 * 1e5 + 5;
const int inf = 1e9 + 7;

int n;
vector<int>g[N];
vector<int>o,e;
int d[N];
int a[N];
bool used[N];

void bfs(vector<int>st,vector<int>fn)
{
    for(int i = 1;i <= n;i++){
        d[i] = inf;
        used[i] = 0;
    }
    deque<int>q;
    for(int i = 0;i < st.size();i++){
        q.pb(st[i]);
        used[st[i]] = 1;
        d[st[i]] = 0;
    }
    while(q.size()){
        int v = q.front();
        q.pop_front();
        for(int i = 0;i < g[v].size();i++){
            int to = g[v][i];
            if(!used[to]){
                d[to] = d[v] + 1;
                used[to] = 1;
                q.pb(to);
            }
        }
    }
    for(int i = 0;i < fn.size();i++)(d[fn[i]] == inf) ? (a[fn[i]] = -1) : (a[fn[i]] = d[fn[i]]);
}

main()
{
    ufo;
    cin>>n;
    for(int i = 1;i <= n;i++){
        cin>>a[i];
        (a[i] % 2) ? (o.pb(i)) : (e.pb(i));
    }
    for(int i = 1;i <= n;i++){
        if(i > a[i])g[i-a[i]].pb(i);
        if(i + a[i] <= n)g[i+a[i]].pb(i);
    }
    bfs(o,e);
    bfs(e,o);
    for(int i = 1;i <= n;i++)
        cout<<a[i]<<' ';
}
