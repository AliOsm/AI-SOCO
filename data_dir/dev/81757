#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> pi;
constexpr int inf = 0x3f3f3f3f;
constexpr double EPS = 1e-30;
constexpr double PI = atan(1) * 4;

template <class T> inline void chmax(T& x, T y) {if (x < y) x = y;}
template <class T> inline void chmin(T& x, T y) {if (x > y) x = y;}
inline int LSB(int i) {return (i & -i);}

struct RandomHeap{
    RandomHeap *l, *r;
    int val;

    RandomHeap(){
        val = 0;
        l = r = nullptr;
    }

    RandomHeap(int x):val(x){
        l = r = nullptr;
    }
} *heap[1005];

int n, m, a[1005], res;

RandomHeap* combine(RandomHeap* t1, RandomHeap* t2){
    if (!t1 || !t2) return t1 ? t1 : t2;
    if (t1->val > t2->val) swap(t1, t2);
    if (rand() & 1) swap(t1->l, t1->r);
    t1->l = combine(t1->l, t2);
    return t1;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);

    cin >> n >> m;
    for (int i = 1, b; i <= m; i++){
        cin >> b;
        a[b]++;
    }

    for (int i = 1; i <= n; i++){
        heap[i] = new RandomHeap(a[i]);
    }

    RandomHeap* root = heap[1];

    for (int i = 2; i <= n; i++){
        root = combine(root, heap[i]);
    }

    cout << root->val << endl;
    return 0;
}
