#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <sstream>
#include <iostream>
#include <cmath>
#include<cstring>
#include <cstdio>
#include <stack>
#include<iomanip>
#include<queue>
#include<functional>
#include<iterator>
using namespace std;
#define inf 100000000
#define ninf -10000000000000000
#define ll long long
#define ii pair<int,pair<int,int>>
/*long long gcd(long long a, long long b)
{
	if (b == 0)return a; return gcd(b, a%b);
}
long long lcm(long long a, long long b) {
	return  a * b / gcd(a, b);
}
*/
/*string getbinary(int x)
{
	string ss="";
	stack<int>s;
	while (x != 0) { s.push(x % 2); x /= 2;}
	while (!s.empty()) { ss += to_0string(s.top()); s.pop();}
	return ss;
}
*/
int main()
{
	int n, m,cnt=0,maxx=-1,n1,m1,i=0;
	bool exit = true;
	cin >> n >> m;
	n1 = n, m1 = m;
	while (1)
	{
		if (n > m&&n >= 2 && m >= 1) { n -= 2; m -= 1; cnt++;}
		else if (m >= n&&m >= 2 && n >= 1) { m -= 2; n -= 1; cnt++;}
		else break;
	}
	if (n >= 2 && m >= 1 || n >= 1 && m >= 2)cnt++;
	maxx = max(maxx, cnt);
	cnt = 0;
	/*while (1)
	{
		if ((i & 1) == 0) { if (n1 - 2 >= 0 && m1- 1 >= 0) { exit = false; n1 -= 2; m1 -= 1; cnt++; } }
		else if ((i & 1) == 1) { if (m1 - 2 >= 0 && n1 - 1 >= 0) { exit = false; m1 -= 2; n1 -= 1; cnt++; } }
		if (exit)break;
		i++; exit = true;
	}
	if (n1 >= 2 && m1 >= 1 || n1 >= 1 && m1 >= 2)cnt++;
	maxx = max(maxx, cnt);*/
	cout << maxx << endl;
	return 0;
}



