#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0; i < n; i++)
#define pii pair<int, int>
typedef unsigned long long LL;

const int N = 1e5 + 5;
LL n, v[N], t[N], acc[N], ans[N];
LL tree[4 * N];

void modify(int l, int r, LL value) {
    for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
        if (l&1) tree[l++] += value;
        if (r&1) tree[--r] += value;
    }
}

LL query(int p) {
    LL res = 0;
    for (p += n; p > 0; p >>= 1) res += tree[p];
    return res;
}

int main() 
{
#ifdef DEBUG
    freopen("in.txt", "r", stdin);
#endif
    ios_base::sync_with_stdio(false);
    cin >> n;
    loop(i, n) cin >> v[i];
    loop(i, n) cin >> t[i];
    acc[0] = t[0];
    loop(i, n - 1) acc[i + 1] = acc[i] + t[i + 1];
    loop(i, n) {
        int oth;
        if (i) oth = lower_bound(acc + i, acc + n, v[i] + acc[i - 1]) - acc;
        else oth = lower_bound(acc + i, acc + n, v[i]) - acc;
        modify(i, oth, 1);
        ans[oth] += v[i];
        if (oth - 1 >= 0) {
            ans[oth] -= acc[oth - 1];
            if (i - 1 >= 0) ans[oth] += acc[i - 1];
        }
    }
    loop(i, n) cout << ans[i] + query(i) * t[i] << " ";
    cout << endl;
    return 0;
} 
