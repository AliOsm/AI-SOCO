   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
 #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                                
                int pr[1001010];
                int inv[1001010];
                
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=(pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=inv[i+1]*(i+1)%mod;
                	}
                }
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;
      
       
       
                               //----------------kokomade tenpure------------

vector<int> G[1500000][10];
bool vis[1500000]={};
int depth[1500000]={};
int ans[100020];
stack<pa3> st;
int n;
void dfs(int  &cnt){
	if(st.size()==0) return;
	
	pa3 z=st.top();
	st.pop();
	vector<pa3> ve;
	if(vis[z.x]==0)ve.pb(z),vis[z.x]=1;
	int mem=z.z;
	while(st.size()>0 && st.top().z==mem){
		z=st.top();
		st.pop();
		if(vis[z.x]) continue;
		ve.pb(z);
		vis[z.x]=1;
	}
//	for(auto z:ve) cout<<z.x<<" "<<z.y<<endl;
	for(auto z:ve)if(z.x<=n){
		ans[z.x]=z.y;
	}
	if(ve.size()==0) return;
/*
	cout<<"==="<<endl;
	for(auto v:ve){
		cout<<v.x<<" ";
	}
	cout<<endl;
*/
	int de=depth[ve[0].x]+1;
	int ima=ve[0].y;
	for(int i=0;i<10;i++){
		bool bo=0;
		for(auto z:ve){
			for(auto v:G[z.x][i])if(depth[v]==de && vis[v]==0){
				st.push((pa3){v,(ima*10+i)%inf,cnt}),bo=1;
				
			}
		}
		if(!bo) continue;
		cnt++;
		dfs(cnt);
	}
	
}

 signed main(){
 	
 
   cin.tie(0);
	ios::sync_with_stdio(false);
	
int m;
cin>>n>>m;

 	
 	int cnt=n+1;
 	
 	for(int i=1;i<=m;i++){
 		string s=itos(i);
 		int l=s.length();
 		
 		int y,yy;
 		cin>>y>>yy;
 		if(l==1){
 			G[y][i].pb(yy);
 			G[yy][i].pb(y);
 		}
 		else{
 			for(int i=0;i<l;i++){
 				if(i==0){
 					G[y][s[0]-'0'].pb(cnt);
 					cnt++;
 				}
 				else if(i==l-1){
 					G[cnt-1][s[i]-'0'].pb(yy);
 				}
 				else{
 					G[cnt-1][s[i]-'0'].pb(cnt);
 					cnt++;
 				}
 			}
 			
 			for(int i=0;i<l;i++){
 				if(i==0){
 					G[yy][s[i]-'0'].pb((cnt));
 					cnt++;
 				}
 				else if(i==l-1){
 					G[cnt-1][s[i]-'0'].pb(y);
 				}
 				else{
					G[cnt-1][s[i]-'0'].pb(cnt);
 					cnt++;
 				}
 			}
 		}
 	}
 	
 //	for(int i=1;i<cnt;i++)for(int j=0;j<10;j++)for(auto v:G[i][j])cout<<i<<" "<<v<<" "<<j<<endl;
 	
 	queue<pa> qu;
 	
 	
 		qu.push(mp(1,0));
 	
 	while(qu.size()){
 		pa z=qu.front();
 		qu.pop();
 		if(vis[z.first]) continue;
 		vis[z.first]=1;
 		depth[z.first]=z.second;

 		for(int i=0;i<10;i++)for(auto v:G[z.first][i])if(vis[v]==0)qu.push((pa){v,z.second+1});
 	}
 	//for(int i=1;i<cnt;i++)cout<<"sss "<<i<<" "<<depth[i]<<endl;
 	
 	for(int i=1;i<cnt;i++)vis[i]=0;
 		st.push((pa3){1,0,1});
 	int f=2;
 	dfs(f);
 	for(int i=2;i<=n;i++)cout<<ans[i]<<"\n";
 	return 0;
 
 }
 