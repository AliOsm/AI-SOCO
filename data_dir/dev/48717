#include <bits/stdc++.h>
#define N 102
#define mod 1000000007
#define LL long long

using namespace std;
//#define ll  int
//
//vector<vector<ll> >bit2;
//vector<ll>bit1;
//vector<ll>v[100001];
//ll branch[100001],depth[100001],maxi,n;
//
//void dfs(ll cur,ll par,ll ht,ll id)
//{
//	branch[cur]=id;
//	depth[cur]=ht;
//	maxi=max(maxi,ht);
//	for(ll i=0;i<v[cur].size();i++)
//	{
//		ll x=v[cur][i];
//		if(x==par)
//		continue;
//		dfs(x,cur,ht+1,id);
//	}
//}
//
//void update(vector<int>& t,ll ind,ll val)
//{
//	while(ind<t.size())
//	{
//		t[ind]+=val;
//		ind+=(ind&-ind);
//	}
//}
//
//ll query(vector<ll>&t,ll ind)
//{
//	ll ans=0;
//	while(ind>0)
//	{
//		ans+=t[ind];
//		ind-=(ind&-ind);
//	}
//	return ans;
//}


int main()
{
	int i,j,m,n,t,p,q;
	cin>>n;
	map<int,int>mymap;
	for(i=0;i<(n*n);i++){
        cin>>p;
        mymap[p]++;
	}
	j=0;
	int ara[n];
	map<int,int>::iterator it;


	while(j<n){
        it=mymap.end();
        --it;
        p=it->first;
        cout<<p<<" ";

        mymap[p]--;
        if(mymap[p]==0){
            it=mymap.find(p);
            mymap.erase(it);
        }

        for(i=0;i<j;i++){
            q=__gcd(ara[i],p);
            mymap[q]-=2;
            if(mymap[q]==0){
                it=mymap.find(q);
                mymap.erase(it);
            }
        }
        ara[j++] = p;
	}
	return 0;
}
