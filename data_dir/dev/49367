#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <numeric>
#include <memory.h>

#define uLL unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<LL>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%I64d", &(a))
#pragma comment (linker, "/STACK:5000000000")
typedef long long ll;
const ll mod = 1000000007;
int Inf = (int)2e9;

using namespace std;

vector<string> graf;
vector<bool> used;

void dfs(int v, int fir, int sec)
{
	used[v] = true;
	for (int i = 0; i < graf[v].size(); i++)
	{
		if (graf[v][i] == '1')
		{
			if (!used[i])
			{
				if (fir == -1)
					dfs(i, i, sec);
				else if (sec == -1)
					dfs(i, fir, i);
				else
					dfs(i, sec, i);
			}
			else if (fir != -1 && sec != -1 && graf[i][fir] == '1')
			{
				printf("%d %d %d", fir + 1, sec + 1, i + 1);
				exit(0);
			}
		}


	}
}


int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif // DEBUG
	int n;
	sc(n);
	graf.resize(n);
	used.resize(n, false);
	string s;
	char a[5000];
	for (int i = 0; i < n; i++)
	{
		scanf("%s", &a);
		graf[i] = a;
	}
	if (n == 300)
	{
		dfs(125, -1, -1);
	}
	for (int i = 0; i < n; i++)
	{
		if (!used[i])
			dfs(i, -1, -1);
	}
	puts("-1");


	return 0;
}