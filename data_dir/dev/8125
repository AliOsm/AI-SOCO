#include <bits/stdc++.h>

char sr[100010][10];
bool dfs(int i, char cur[], char pre[], int larger) {
	if(cur[i] == 0)		return larger == 1;	
	if(cur[i] == '?') {
		if(larger == 1) {
			cur[i] = i == 0 ? '1': '0';
			if(dfs(i + 1, cur, pre, larger))
				return true;
			cur[i] = '?';
			return false;
		} else {
			for(cur[i] = pre[i]; cur[i] <= '9'; cur[i] ++) 
				if(dfs(i + 1, cur, pre, cur[i] > pre[i]))
					return true;
			cur[i] = '?';
			return false;
		}
	} else if(larger == 0) {
		if(cur[i] < pre[i])
			return false;
		else if(cur[i] > pre[i])
			larger = 1;
	}
	return dfs(i + 1, cur, pre, larger);
}
int main() {
	int N, cur = 0, ans = 1;
	scanf("%d", &N);
	for(int i = 0; i < N; i ++) {
		scanf("%s", sr[i]);
		if(ans == -1)		continue;
		if(i == 0) {
			for(int j = 0; sr[i][j]; j ++) {
				if(j == 0 && sr[i][j] == '?')
					sr[i][j] = '1';
				else if(sr[i][j] == '?')
					sr[i][j] = '0';
			}
		} else {
			int lx = strlen(sr[i]) - strlen(sr[i - 1]);
			if(lx < 0 || !dfs(0, sr[i], sr[i - 1], lx > 0))	
				ans = -1;
		}
	}
	if(~ans) {
		puts("YES");
		for(int i = 0; i < N; i ++)
			printf("%s\n", sr[i]);
	} else
		puts("NO");
	return 0;
}

