#include <bits/stdc++.h>
#define LL long long
#define pb push_back
#define mp make_pair
#define fi first
#define sc second
using namespace std;

bool cmp(pair<LL, LL> x, pair<LL, LL> y){
	return x.fi>y.fi;
}

LL n,m,o,cj,cm,mx,idx,ans[100100],b[100100],suffixSum[100100];
pair<LL,LL> a[100100];

LL bs2(LL l, LL r, LL target){
	if(l>r) return n;
	LL mid = (l+r)/2;
	if(a[mid].fi<target) return min(mid, bs2(l, mid-1, target));
	return bs2(mid+1, r, target);
}

bool can(LL mid){
	LL pos = bs2(0, n-1, mid);
	//cout<<mid<<" "<<pos<<endl;
	if(m >= mid*(n-pos) - suffixSum[pos]) return true;
	return false;
}

LL bs(LL l, LL r){
	if(l>r) return -1;
	LL mid = (l+r)/2;
	if(can(mid)) return max(mid, bs(mid+1, r));
	return bs(l, mid-1);
}

int main() {
	scanf("%lld %lld %lld %lld %lld",&n,&o,&cj,&cm,&m);
	LL initM = m;
	for(int i=0;i<n;i++){
		scanf("%lld",&a[i].fi);
		a[i].sc = i;
	}
	sort(a,a+n,cmp);
	for(int i=n-1;i>=0;i--){
		if(i<n-1) suffixSum[i] = suffixSum[i+1];
		suffixSum[i] += a[i].fi;
		b[i] = a[i].fi;
	}
	for(int i=0;i<=n;i++){
		LL temp = bs(0, o);
		//cout<<i<<" "<<temp*cm+i*cj<<" "<<mx<<" "<<temp<<endl;
		if(temp*cm + i*cj > mx){
			mx = temp*cm + i*cj;
			idx = i;
		}
		if(i==n) break;
		m -= (o-a[i].fi);
		if(m<0) break;
		a[i].fi = o;
	}
	m = initM;
	for(int i=0;i<n;i++) a[i].fi = b[i];
	for(int i=0;i<idx;i++){
		m -= (o-a[i].fi);
		a[i].fi = o;
	}
	LL temp = bs(0, o);
	
	for(int i=0;i<n;i++){
		a[i].fi = max(a[i].fi, temp);
		ans[a[i].sc] = a[i].fi;
	}
	printf("%lld\n", mx);
	for(int i=0;i<n;i++) printf("%lld ", ans[i]);
	return 0;
}