#include <bits/stdc++.h>

using namespace std;
int a[1000005],fl[1000005];
vector<int> v[1000005];
vector<int> col[1000005],values[1000005];
void bfs(int cur, int color)
    {
    fl[cur] = color;
    queue<int> q;
    q.push(cur);
    while(!q.empty())
        {
        cur = q.front();
        col[color].push_back(cur);
        values[color].push_back(a[cur]);
        q.pop();
        int i,l,x;
        l = v[cur].size();
        for(i=0;i<l;i++)
            {
            x = v[cur][i];
            if(fl[x] ==0)
                {
                fl[x] = color;
                q.push(x);
            }
        }
    }
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int n,i,x,y,j,m;
    scanf("%d%d",&n,&m);
    for(i=1;i<=n;i++)scanf("%d",&a[i]);
    
    for(i=1;i<=m;i++)
        {
        scanf("%d%d",&x,&y);
        v[x].push_back(y);
        v[y].push_back(x);
    }
    int color=1;
    for(i=1;i<=n;i++)
        {
        if(fl[i]==0)
            {
            bfs(i,color);
            color++;
        }
    }
  //  printf("colorwise\n");
    for(i=1;i<color;i++)
        {
       // printf("of color %d\n",i);
        sort(values[i].begin(),values[i].end());
        reverse(values[i].begin(),values[i].end());
        sort(col[i].begin(),col[i].end());
        for(j=0;j<col[i].size();j++)
            a[col[i][j]] = values[i][j];
    }
    for(i=1;i<=n;i++)
        printf("%d ",a[i]);
    return 0;
}
