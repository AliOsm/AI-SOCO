#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define sz(a) (lld)((a).size())
#define all(c) (c).begin(),(c).end()             
typedef long double ldb;
typedef long long lld;
const lld MOD = 1e9+7;
const lld INF = 1011111111;
const lld LLINF = 1000111000111000111LL;
const ldb EPS = 1e-10;
const ldb PI = 3.14159265358979323;
using namespace std;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
const lld N = 1000005;

int32_t main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    lld n;
    string s;
    cin>>n;
    map<lld,lld> m;
    rep(i,1,n+1) {
        cin>>s;
        stack<char> stk;
        for(auto i:s) {
            if(i == '(') {
                stk.push(i);
            }
            else {
                if(stk.empty()) {
                    stk.push(i);
                }
                else {
                    if(stk.top() == '(') {
                        stk.pop();
                    }
                    else {
                        stk.push(i);
                    }
                }
            }
        }
        lld cnt1 = 0, cnt2 = 0;
        while(!stk.empty()) {
            char curr = stk.top();
            stk.pop();
            if(curr == '(') cnt1++;
            else cnt2++;
        }
        if(cnt1 > 0 and cnt2 > 0) continue;
        else m[cnt1-cnt2]++;
    }
    lld ans = 0;
    for(auto i:m) {
        if(i.f == 0) {
            ans += i.s;
        }
        else {
            ans += min(m[i.f],m[-i.f]);
        }
    }
    cout<<(ans/2);
    return 0;
}