#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef pair<double, double> pdd;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
int ctz(uint x) {return __builtin_ctz(x);}
int ctzll(ull x) {return __builtin_ctzll(x);}
int clz(uint x) {return __builtin_clz(x);}
int clzll(ull x) {return __builtin_clzll(x);}
int popcnt(uint x) {return __builtin_popcount(x);}
int popcntll(ull x) {return __builtin_popcountll(x);}
int bsr(uint x) {return 31^clz(x);}
int bsrll(ull x) {return 63^clzll(x);}

#define N 200016

int p[N], q[N];
int ctree[N];
ll stree[N];

void put(int x, int n)
{
    for (int i = x; i <= n; i += i&-i) {
        stree[i] += x;
        ++ctree[i];
    }
}

int getcnt(int i)
{
    int res = 0;
    for (; i; i -= i&-i) res += ctree[i];
    return res;
}

ll getsum(int i)
{
    ll res = 0;
    for (; i; i -= i&-i) res += stree[i];
    return res;
}

int main()
{
    canhazfast();

    int n;
    ll invcnt = 0;
    priority_queue<int> lo;
    priority_queue<int, vi, greater<int>> hi;

    cin >> n;
    for (int i = 1; i <= n; ++i) {
        cin >> p[i];
        q[p[i]] = i;
    }
    for (int k = 1; k <= n; ++k) {
        //cerr << "k = " << k << '\n';
        int h = k/2;
        int x = q[k];
        int mid;
        ll cost;

        put(x, n);
        invcnt += k-getcnt(x);
        //cerr << "  invcnt = " << invcnt << '\n';
        if (lo.size() && x > lo.top()) hi.push(x);
        else lo.push(x);
        if (lo.size() > hi.size()+1) {
            hi.push(lo.top());
            lo.pop();
        } else if (hi.size() > lo.size()) {
            lo.push(hi.top());
            hi.pop();
        }
        mid = k%2 ? lo.top() : (lo.top()+hi.top())/2;
        //cerr << "  mid = " << mid << '\n';
        cost = getsum(n)-2*getsum(mid)-(ll)h*h;
        if (k%2) cost += mid-h;
        //cerr << "  cost = " << cost << '\n';
        cout << cost+invcnt << '\n';
    }

    return 0;
}
