#include<bits/stdc++.h>
using namespace std;
const int N = 40004, K = 55;
int n, k, A[N], M[N], dp[K][N], LZ[N * 4], MX[N * 4];
inline void Shift(int id, int lc, int rc)
{
    LZ[lc] += LZ[id]; MX[lc] += LZ[id];
    LZ[rc] += LZ[id]; MX[rc] += LZ[id];
    LZ[id] = 0;
}
void Add(int le, int ri, int val, int id = 1, int l = 0, int r = n + 1)
{
    if (ri <= l || r <= le)
        return ;
    if (le <= l && r <= ri)
    {
        LZ[id] += val;
        MX[id] += val;
        return ;
    }
    int lc = id + id, rc = lc + 1;
    Shift(id, lc, rc);
    Add(le, ri, val, lc, l, l + r >> 1);
    Add(le, ri, val, rc, l + r >> 1, r);
    MX[id] = max(MX[lc], MX[rc]);
}
int main()
{
    scanf("%d%d", &n, &k);
    for (int i = 1; i <= n; i++)
        scanf("%d", &A[i]);
    for (int j = 1; j <= k; j++)
    {
        memset(M, 0, sizeof(M));
        memset(LZ, 0, sizeof(LZ));
        memset(MX, 0, sizeof(MX));
        for (int i = 1; i <= n; i++)
        {
            Add(M[A[i]], i, 1);
            dp[j][i] = MX[1]; M[A[i]] = i;
            Add(i, i + 1, dp[j - 1][i]);
        }
    }
    return !printf("%d", dp[k][n]);
}
