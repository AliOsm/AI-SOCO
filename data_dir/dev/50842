
// In the name of God

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MN = 1e6 + 10 , INF = 1e9 + 10;

int n;
ll ans = 0;
int Mx[MN] , Mn[MN] , arr[MN];

void solve(int b,int e)
{
	if(e - b == 1) return;
	
	int mid = b+e>>1;

	
	Mn[mid] = INF;
	for(int i=mid-1;i>=b;--i) Mn[i] = min(Mn[i+1] , arr[i]);
	Mx[mid] = -INF;
	for(int i=mid-1;i>=b;--i) Mx[i] = max(Mx[i+1] , arr[i]);
		
	int sv = Mn[mid-1];
	Mn[mid-1] = INF;
	for(int i=mid;i<e;++i) Mn[i] = min(Mn[i-1] , arr[i]);
	Mn[mid-1] = sv;
	sv = Mx[mid-1];
	Mx[mid-1] = -INF;
	for(int i=mid;i<e;++i) Mx[i] = max(Mx[i-1] , arr[i]);
	Mx[mid-1] = sv;
	
	int L = mid-1 , R = mid-1;
	ll cur = 0;
	int cur_mn = INF , cur_mx = -INF;
	for(int i=mid;i<e;++i){
		int sv = cur_mn;
		cur_mn = min(cur_mn , arr[i]);
		cur = cur + 1ll*(-sv+cur_mn)*(mid-1-R);
		cur_mx = max(cur_mx , arr[i]);
		while(b <= L && Mx[L] <= cur_mx) cur += Mn[L--];
		while(L < R && Mn[R] > cur_mn) cur = cur - Mn[R--] + cur_mn; 
		ans += 1ll*(mid-1-L)*cur_mx - cur;
	}
	
	cur = 0 , L = mid , R = mid;
	cur_mn = INF , cur_mx = -INF;
	for(int i=mid-1;i>=b;--i){
		int sv = cur_mn;
		cur_mn = min(cur_mn , arr[i]);
		cur = cur + 1ll*(-sv+cur_mn)*(L-mid);
		cur_mx = max(cur_mx , arr[i]);
		while(R < e && Mx[R] < cur_mx) cur += Mn[R++];
		while(L < R && Mn[L] > cur_mn) cur = cur - Mn[L++] + cur_mn;
		ans += 1ll * (R - mid) * cur_mx - cur;
	}
	solve(b , mid) , solve(mid , e);
}

int main()
{
	ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	cin >> n;
	for(int i=0;i<n;++i) cin >> arr[i];
	solve(0 , n);
	cout << ans << '\n';
	return 0;	
}

