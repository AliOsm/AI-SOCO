//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define int long long

using namespace std ;
using pii = pair<int , int> ;

int const N = 1e6 + 10 ;
int n , m , dp[N] , sm ;
vector <int> vec[5] ;
set <pii> st1 , st2 , wh ;

int32_t main(){
	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

	cin >> n >> m ;
	for (int i = 0 ; i < n ; i ++) {
		int w , c ;
		cin >> w >> c ;
		vec[w - 1].push_back(c) ;
		
		if (w == 1) {
			st1.insert({c , i}) ;
		}
		if (w == 2) {
			st2.insert({c , i}) ;
		}
	}

	for (int i = 0 ; i < 5 ; i ++) {
		sort(vec[i].begin() , vec[i].end()) ; // , greater<int>()) ;
	}

	int c = 0 ;
	for (int i = 1 ; i < N ; i ++) {
		dp[i] = dp[i - 1] ;
		
		int val1 = -1 , val2 = -1 ;

		if (st1.size()) {
			val1 = st1.rbegin() -> first ;
		}
		if (st2.size() && wh.size()) {
			val2 = (st2.rbegin() -> first) - (wh.begin() -> first) ;
		}

		if (val1 < 0 && val2 < 0) {
			if (c <= i - 2 && st2.size()) {
				sm += (st2.rbegin() -> first) ;
				st2.erase(--(st2.end())) ;
				c += 2 ;
			}

			dp[i] = sm ;

			continue ;
		}

		if (val1 > val2) {
		//	if (!st1.size()) {
		//		cout << "NOO\n" ;
		//		return 0 ;
		//	}	

			sm += val1 ;

			pii tmp = *st1.rbegin() ;
			wh.insert(tmp) ;
			st1.erase(tmp) ;

			c ++ ;
		}
		else {
		//	if (!st2.size() || !wh.size()) {
		//		cout << "NOO\n" ;
		//		return 0 ;
		//	}

			sm += val2 ;
			st1.insert(*wh.begin()) ;
			wh.erase(wh.begin()) ;
		
			pii tmp = *st2.rbegin() ;
			st2.erase(tmp) ;	

			c ++;
		}

		dp[i] = sm ;
	}

	int ans = dp[m] ;

	sm = 0 ;

	for (int i = 0 ; ((int)vec[2].size()) && ((i + 1) * 3 <= m) ; i ++) {
	//	if (!vec[2].size() || m - (i + 1) * 3 < 0) {
	//		cout << "NOOO\n" ;
	//		return 0 ;
	//	}
		
		sm += vec[2].back() ;
		vec[2].pop_back() ;
		ans = max(ans , sm + dp[m - (i + 1) * 3]) ;
	}

	cout << ans << '\n' ;
}
