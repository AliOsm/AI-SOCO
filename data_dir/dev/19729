#include<bits/stdc++.h>
#define FIO ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
using namespace std;
typedef long long ll;
typedef long double ld;
const ll inf = 1e9, N = 2e5+5;
const ll INF = 1e18, MOD = 1e9+7;
ll powmod(ll a,ll b,ll m=MOD){ll r=1;while(b>0){if(b&1)r=r*a%m;a=a*a%m;b>>=1;}return r;}
ll power(ll a,ll b){ll r=1;while(b>0){if(b&1)r=r*a;a=a*a;b>>=1;}return r;}
ll gcd(ll a,ll b){if(!b)return a;return gcd(b,a%b);}

ll n, a[N], T[N][35];
vector <ll> v[N];
ll ans[N];

ll query(ll l, ll r){
    ll j = log2(r - l + 1);
    return min(T[l][j], T[r - (1 << j) + 1][j]);
}

int main(){
    FIO;
    cout << setprecision(10) << fixed;
    cin >> n;
    for(int i = 1; i <= n; ++i){
        cin >> a[i];
    }

    for(int i = 1; i <= n; ++i){
        T[i][0] = a[i];
    }

    for(int j = 1; j <= 20; ++j){
        for(int i = 1; i + (1LL << (j - 1)) <= n; ++i){
            T[i][j] = min(T[i][j - 1], T[i + (1 << (j - 1))][j - 1]);
        }
    }

    for(int i = 1; i <= n; ++i){
        ll low = 1, high = i, gotl(-1);
        while(low <= high){
            ll mid = low + high >> 1;
            if(query(mid, i) >= a[i]){
                high = mid - 1;
                gotl = mid;
            }
            else{
                low = mid + 1;
            }
        }

        ll gotr(-1);
        low = i, high = n;
        while(low <= high){
            ll mid = low + high >> 1;
            if(query(i, mid) >= a[i]){
                low = mid + 1;
                gotr = mid;
            }
            else{
                high = mid - 1;
            }
        }
        ans[gotr - gotl + 1] = max(ans[gotr - gotl + 1], a[i]);
    }

    for(int i = n - 1; i >= 1; --i){
        ans[i] = max(ans[i + 1], ans[i]);
    }
    for(int i = 1; i <= n; ++i){
        cout << ans[i] <<" ";
    }
    return 0;
}
