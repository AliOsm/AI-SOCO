#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define piii pair<ll,pair<int,int>>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define SIZE 10000002
#define MOD 1000000007
#define LD long double
using namespace std;

inline ll getnum()
{
    char c = getchar();
    ll num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

ll sum[1000004];
ll cnt[1000004];
int prime[80002];
bool notprime[1000002];

ll bigmod(ll a,ll p)
{
    ll ans=1;

    while(p>0)
    {
        if(p&1)ans=(ans*a)%MOD;
        a=(a*a)%MOD;
        p=p>>1;
    }

    return ans;
}

int main()
{
    int ind=0;
    for(int i=2,S=1000000;i<=S;i++)
    {
        if(notprime[i]==false)prime[++ind]=i;
        for(int j=1;j<=ind;j++)
        {
            int x=i*prime[j];
            if(x>S)break;
            notprime[x]=true;
            if(i%prime[j]==0)break;
        }
    }

    int n=getnum();

    for(int i=1;i<=n;i++)
    {
        int x=getnum();
        for(int j=1;j*j<=x;j++)
        {
            if(x%j==0)
            {
                sum[j]++;
                if(x/j!=j)sum[x/j]++;
            }
        }
    }

    ll ans=0;

    for(int i=1000000;i>=2;i--)
    {
        if(sum[i])
        {
            ll x=sum[i];
            ll y=(bigmod(2LL,x-1)*x)%MOD;
            if(y<0)y+=MOD;
            cnt[i]=cnt[i]+y;
            if(cnt[i]>=MOD)cnt[i]-=MOD;

            for(int j=2;j*j<=i;j++)
            {
                if(i%j==0)
                {
                    cnt[j]=cnt[j]-cnt[i];
                    if(cnt[j]<0)cnt[j]+=MOD;
                    if(i/j!=j)
                    {
                        cnt[i/j]=cnt[i/j]-cnt[i];
                        if(cnt[i/j]<0)cnt[i/j]+=MOD;
                    }
                }
            }
        }
        ans=(ans+cnt[i]*i)%MOD;
    }
    cout<<ans;
}
