#include <bits/stdc++.h>
using namespace std;

void dfs( vector< int > &p, int lb, int rb, int k ){ // [ lb, rb ]
  if( lb > rb ) return;
  if( lb == rb ){
    p[ lb ] = 1 + k * 2;
    return;
  }
  dfs( p, lb + 2, rb - 2, k + 1 );
  int n = rb - lb + 1;
  p[ lb + 1 ] = 1 + k * 2;
  p[ lb ] = n - 1 + k * 2;
  p[ rb - 1 ] = n + k * 2;
  p[ rb ] = 2 + k * 2;
}

signed main(){
  ios::sync_with_stdio( 0 );
  int n; cin >> n;
  if( n % 4 == 2 or n % 4 == 3 ){
    cout << -1 << endl;
    exit( 0 );
  } else{
    vector< int > p( n + 1 );
    dfs( p, 1, n, 0 );
    for( int i = 1; i <= n; ++i ){
      cout << p[ i ] << " \n"[ i == n ];
    }
  }
  return 0;
}
