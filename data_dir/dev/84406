#include<bits/stdc++.h>
#define pb push_back
typedef long long ll;
using namespace std;
const int N = 1e5 + 10 , S = 333 , INF = 1e9;
int a[N] , cnt[S][N] , last ;
deque<int> d[S];

main(){
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    int n; cin>>n;
    d[0].push_back(-INF);
    for(int i=1;i<=n;i++)cin>>a[i];
    for(int i=1;i<=n;i++){
        int ind = i/S;
        cnt[ind][a[i]]++;
        d[ind].pb(a[i]);
    }

    int q; cin>>q;
    while(q--){
        int type; cin>>type;
        if(type == 1){
            int l , r; cin>>l>>r;
            l = (l + last - 1)%n + 1;
            r = (r + last - 1)%n + 1;
            if(l > r)swap(l , r);

            int indr = r/S ; int xr = r - indr * S;

			auto it = d[indr].begin() + xr;


			int x = *it;
			cnt[indr][x]--;
			d[indr].erase(it);

            int indl = l/S ;
            int xl = l - indl * S;


			d[indl].insert(d[indl].begin()+ xl , x);
			cnt[indl][x]++;


			for(int i = indl ; i < indr ; i++){
				d[i+1].push_front(d[i].back());
				cnt[i+1][d[i].back()]++;

				cnt[i][d[i].back()]--;
				d[i].pop_back();
			}
        }else{
            int l ,r ,k; cin>>l>>r>>k;
            l=(l + last-1)%n + 1;
            r=(r + last-1)%n + 1;
            k=(k + last-1)%n + 1;
            if(l > r) swap(l , r);

			int indl = l/S , indr = r/S , i = indl * S;

			int ans = 0;

			for(auto it = d[indl].begin() ; it != d[indl].end() ; it++ , i++){
				if(i >= l && i <= r)
					if((*it) == k)ans++;
			}
			if(indl == indr){
				cout << ans << '\n';
				last = ans;
				continue;
			}

			for(int i = indl+1 ; i < indr ; i++)
				ans+=cnt[i][k];

			i = indr * S;
			for(auto it = d[indr].begin() ; it != d[indr].end() ; it++ , i++){
				if(i >= l && i <= r)
					if((*it) == k)ans++;
			}
			cout << ans << '\n';
			last = ans;
        }
    }
}
