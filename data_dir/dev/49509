#include <bits/stdc++.h>
using namespace std;

#define			ll			long long int
#define         IO          ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define			pb			push_back
#define			pii			pair<int, int>
#define			ff			first
#define			ss			second
#define			mk			make_pair

struct data
{
	char ch;
	int ind;
};

bool cmp(char a, char b)
{
	if (a == '?' && b >= 'a' && b <= 'z')	return 0;
	if (b == '?' && a >= 'a' && a <= 'z')	return 1;
	return a < b;
}

bool compare(data a, data b)
{
	if (a.ch == '?' && b.ch >= 'a' && b.ch <= 'z')	return 0;
	if (b.ch == '?' && a.ch >= 'a' && a.ch <= 'z')	return 1;
	return a.ch < b.ch;
}

int main( )
{
	IO
	int n, i, j, k, l, r, x, y, s1, s2;
	string left, right;
	vector<data> v1, v2;
	data tmp;
	vector<pii> pp;
	
	cin >> n;
	cin >> left >> right;
	
	for (i = 0; i < n; i++)
	{
		tmp.ind = i + 1;
		tmp.ch = left[i];
		v1.pb(tmp);
		
		tmp.ind = i + 1;
		tmp.ch = right[i];
		v2.pb(tmp);
	}
	
	
	sort(v1.begin( ), v1.end( ), compare);
	sort(v2.begin( ), v2.end( ), compare);
	
	
	s1 = s2 = n + 1;
	for (i = 0; i < n; i++)
	{
		if (v1[i].ch == '?')
		{
			s1 = i;
			break;
		}
	}
	for (i = 0; i < n; i++)
	{
		if (v2[i].ch == '?')
		{
			s2 = i;
			break;
		}
	}
	
	for (i = 0, j = 0; i < n && j < n; )
	{
		if (v1[i].ch == v2[j].ch)
		{
			pp.pb(mk(v1[i].ind, v2[j].ind));
			v1[i].ind = -1;
			v2[j].ind = -1;
			i++, j++;
		}
		else if (v1[i].ch < v2[j].ch)
		{
			i++;
		}
		else 
		{
			j++;
		}
	}
	
	for (i = 0, j = s2; i < n && j < n; i++)
	{
		if (v1[i].ind > 0)	
		{
			pp.pb(mk(v1[i].ind, v2[j].ind));
			v1[i].ind = -1;
			v2[j].ind = -1;
			j++;
		}
	}
	
	for (i = 0, j = s1; i < n && j < n; )
	{
		if (v2[i].ind > 0)
		{
			if (v1[j].ind > 0)
			{
				pp.pb(mk(v1[j].ind, v2[i].ind));
				v1[j].ind = -1;
				v2[i].ind = -1;
				j++;
				i++;
			}
			else 
			{
				j++;
			}
		}
		else i++;
	}
	
	cout << pp.size( ) << "\n";
	
	for (i = 0; i < pp.size( ); i++)
	{
		cout << pp[i].ff << " " << pp[i].ss << "\n";
	}
	
	return 0;
}