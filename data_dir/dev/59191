#include <bits/stdc++.h>
#define ll long long

using namespace std;

ll cnt, t = 1, v[1000][1000], n, m;
char c[1000][1000];

void DFS(ll x, ll y)
{
	v[x][y] = t;
	
	if (x)
	{
		if (c[x - 1][y] == '*')
			cnt++;
		else if (!v[x - 1][y])
			DFS(x - 1, y);
	}
	
	if (x < n - 1)
	{
		if (c[x + 1][y] == '*')
			cnt++;
		else if (!v[x + 1][y])
			DFS(x + 1, y);
	}
	
	if (y)
	{
		if (c[x][y - 1] == '*')
			cnt++;
		else if (!v[x][y - 1])
			DFS(x, y - 1);
	}
	
	if (y < m - 1)
	{
		if (c[x][y + 1] == '*')
			cnt++;
		else if (!v[x][y + 1])
			DFS(x, y + 1);
	}
}

int main()
{
	ll k, x, y;
	cin >> n >> m >> k;
	vector <ll> g;
	
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> c[i][j];
			
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (c[i][j] == '.' && !v[i][j])
			{
				cnt = 0;
				DFS(i, j);
				t++;
				g.push_back(cnt);
			}
			
	for (int i = 0; i < k; i++)
	{
		cin >> x >> y;
		x--;
		y--;
		cout << g[v[x][y] - 1] << endl;
	}
}