//ITNOA
#include<bits/stdc++.h> 
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
using namespace __gnu_pbds;

typedef tree< int , null_type, less<int >, rb_tree_tag, tree_order_statistics_node_update> oset;


#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second

typedef long long ll;
typedef long double ld;

const int maxN = 3000 + 7;
const int maxM = 100*1000 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 500;
const int maxL = 20;

int l[maxN][maxN], r[maxN][maxN];
char a[maxN][maxN];


int32_t main()
{
//    ios::sync_with_stdio(0); cin.tie(0);
    int n,m; scanf("%d%d", &n, &m);
    rep(i,0,n)
	scanf("%s", a[i]);

    rep(i,0,n) rep(j,0,m)
    {
	if(a[i][j] == '.') continue;
	l[i][j] = 1;
	if(j) l[i][j] += l[i][j-1];
    }

    rep(i,0,n)
	for(int j = m-1; j >= 0; j --)
	{
	    if(a[i][j] == '.') continue;
	    r[i][j] = 1 + r[i][j+1];
	}

    ll ans = 0;
    
    rep(i,0,n+m-1)
    {
	int st = max(i-(m-1),0);
	int en = i - st;
	set<pair<int,int> > s;
	oset tt;
	while(st < n && en >= 0)
	{
	    
	    if(a[st][en] == '.')
	    {
		s.clear();
		tt.clear();
		st ++; en --;
		continue;
	    }

	    s.insert({st+l[st][en],st});
	    tt.insert(st);
	    while(s.size() && s.begin()->X == st)
	    {
		tt.erase(s.begin()->Y);
		s.erase(*s.begin());
	    }
	    ans += tt.size() - tt.order_of_key(st - r[st][en] + 1);
	    st ++; en --;
	}
    }

    printf("%I64d\n", ans);
    return 0;
}
