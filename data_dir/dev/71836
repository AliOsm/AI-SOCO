#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
#define N 100005
const int MOD = 1e9 + 7;

int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};

//ll GCD(ll num,ll ones) { return !ones ? num : GCD(ones,num%ones); }
//ll lcm(ll a, ll b) { return (a / GCD(a, b)) * b; }
//double Len(int x,int y,int X,int Y) { return sqrt((X-x)*(X-x)+(Y-y)*(Y-y)); }
/*int fastpower(int a,int x)
{
    if(x == 1) return a;
    if (x==0) return 1;
    int p = fastpower(a,x/2);
    if(x%2) return ((p%m)*(p%m)*(a%m))%m;
s}*/
//----------------------- ------------------------
ll dp[N][3],n,val[3],a[N];
bool v[N][3];
ll solve(int idx,int ordr)
{
    if(ordr == 3) return 0;
    if(idx == n) return -OO;

    if(v[idx][ordr]) return dp[idx][ordr];
    v[idx][ordr] = 1;

    return dp[idx][ordr] = max(max(solve(idx+1,ordr+1)+val[ordr]*1LL*a[idx],solve(idx,ordr+1)+val[ordr]*1LL*a[idx]),solve(idx+1,ordr));
}

int main()
{
#ifndef ONLINE_JUDGE
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif
    sc(n); for(int i=0;i<3;++i) scl(val[i]);
    for(int i=0;i<n;++i) scl(a[i]);
    mem(dp,-1);
    printf("%lld",solve(0,0));

    return 0;
}