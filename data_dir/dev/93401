#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
using namespace std;
 
#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) c.begin(), c.end()
 
typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;

ll const mod = 1e9 + 7;

ll add(ll x, ll y){
    return (x+y)%mod;
}

ll mul(ll x, ll y){
    return (x%mod)*(y%mod)%mod;
}

ll powll(ll x, ll y){
    ll res = 1LL;
    while(y){
        if (y & 1LL)
            res *= x;
        res %= mod;
        x = (x*x) % mod;
        y >>= 1LL;
    }
    return res;
}

ll divll(ll x, ll y){
    return (x * powll(y,mod-2)) % mod;
}

ll naive(VL a){
    int x = 1;
    while (a.size() > 1){
        int n = a.size();
        VL b(a);
        a.resize(n-1);
        REP(i,n-1){
            a[i] = (b[i] + x * b[i+1] + mod) % mod;
            x *= -1;
        }
    }
    return a[0];
}

int main() {
    int n;
    cin >> n;
    VL a(n);
    REP(i,n) scanf("%lld", &a[i]);

    if (n == 1){
        cout << a[0] << endl;
        return 0;
    }

    if (n % 2 == 1){
        VI b(n-1);
        REP(i,n-1){
            if (i % 2 == 0) b[i] = a[i] + a[i+1];
            else b[i] = (a[i] - a[i+1] + mod) % mod;
        }

        a.resize(n-1);
        REP(i,n-1) a[i] = b[i];
    }

    ll ans1 = 0, ans2 = 0, m = n/2, c = 1;
    REP(i,m){
        ans1 = add(ans1, mul(a[2*i], c));
        ans2 = add(ans2, mul(a[2*i+1], c));
        c = mul(c, m-1-i);
        c = divll(c, i+1);
    }

    ll s = n * (n-1) / 2 - 1;

    if (s % 2 == 0) cout << (ans1 + ans2) % mod << endl;
    else cout << (ans1 - ans2 + mod) % mod << endl;

    return 0;
}