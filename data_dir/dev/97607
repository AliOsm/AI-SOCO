#include <iostream>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <algorithm>
#include <map>
#include <vector>
#include <cstdio>
#include <cmath>

using namespace std;

int n,i;
int ans,st;
int t[500000];
string S;
string s[500000];
int next[500000];
int pr[500000];
int q[500000];
long long w[500000];
long long ww[500000];
long long p[500000];
long long pp[500000];
long long md = 1000000007;
long long md2 = 1000000009;
long long ha;
long long ha2;
long long p1;
long long p2;
long long c;

long long q1,e1;
long long q2,e2;

void dfs(int v){
     int i;
     for (i=0;i<s[v].size();i++){
         st++;
         p[st] = (p[st-1]*29)%md;
         pp[st] = (pp[st-1]*29)%md2;
                  
         q[st] = s[v][i]-'a'+1;
         
         w[st] = (w[st-1]+q[st]*p[st])%md;
         ww[st] = (ww[st-1]+q[st]*pp[st])%md2;         
         
         if (st>=S.size()){
            q1 = (w[st]-w[st-S.size()]+md)%md;
            q2 = (ww[st]-ww[st-S.size()]+md2)%md2;            
            
            e1 = (ha*p[st-S.size()])%md;
            e2 = (ha2*pp[st-S.size()])%md2;            
            
            if ((e1 == q1) && (e2 == q2)){
               ans++;
            }
         }
     }
     
     i = pr[v];
     while (i){
           dfs(i);
           i = next[i];
     }
     
     st -= s[v].size();
}

int main(){    
    cin >> n;
    for (i=2;i<=n;i++){
        cin >> t[i] >> s[i];
        next[i] = pr[t[i]];
        pr[t[i]] = i;
    }
    
    cin >> S;
    ha = 0;
    ha2 = 0;
    p1 = 1;
    p2 = 1;
    
    for (i=0;i<S.size();i++){
        p1 = (p1*29)%md;
        p2 = (p2*29)%md2;        
        c = S[i]-'a'+1;
        ha = (ha+c*p1)%md;
        ha2 = (ha2+c*p2)%md2;
    }
    
    p[0] = 1;
    pp[0] = 1;
    
    dfs(1);
    
    cout << ans << endl;
    
//    system("pause");
        
    return 0;
}
