#include <bits/stdc++.h>
using namespace std;
#define eb emplace_back
#define emp emplace
#define fi first
#define se second
typedef long long ll;
typedef pair<int, int> ii;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

const int N = 151234;

string s;
int dp[N][3][3];

int go(int i, int one, int two) {
	if (i == s.size()) return 0;

	int& ret = dp[i][one][two];
	if (ret != -1) return ret;
	ret = go(i+1, one, two)+1;

	if (s[i] == 't') {
		ret = min(ret, go(i+1, 0, 1));
	} else if (s[i] == 'w' and two == 1) {
		ret = min(ret, go(i+1, 0, 2));
	} else if (s[i] == 'o' and two != 2) {
		ret = min(ret, go(i+1, 1, 0));
	} else if (s[i] == 'n' and one == 1) {
		ret = min(ret, go(i+1, 2, 0));
	} else {
		if (!((s[i] == 'e' and one == 2) or (s[i] == 'o' and two == 2))) {
			ret = min(ret, go(i+1, 0, 0));
		}
	}

	return ret;
}

void print(int i, int one, int two) {
	if (i == s.size()) return;

	int r1 = dp[i+1][one][two]+1;

	if (s[i] == 't') {
		int r2 = dp[i+1][0][1];
		if (r1 < r2) {
			cout << i+1 << " ";
			print(i+1, one, two);
		} else {
			print(i+1, 0, 1);
		}
	} else if (s[i] == 'w' and two == 1) {
		int r2 = dp[i+1][0][2];
		if (r1 < r2) {
			cout << i+1 << " ";
			print(i+1, one, two);
		} else {
			print(i+1, 0, 2);
		}
	} else if (s[i] == 'o' and two != 2) {
		int r2 = dp[i+1][1][0];
		if (r1 < r2) {
			cout << i+1 << " ";
			print(i+1, one, two);
		} else {
			print(i+1, 1, 0);
		}
	} else if (s[i] == 'n' and one == 1) {
		int r2 = dp[i+1][2][0];
		if (r1 < r2) {
			cout << i+1 << " ";
			print(i+1, one, two);
		} else {
			print(i+1, 2, 0);
		}
	} else {
		if (!((s[i] == 'e' and one == 2) or (s[i] == 'o' and two == 2))) {
			int r2 = dp[i+1][0][0];
			if (r1 < r2) {
				cout << i+1 << " ";
				print(i+1, one, two);
			} else {
				print(i+1, 0, 0);
			}
		} else {
			cout << i+1 << " ";
			print(i+1, one, two);
		}
	}
}

int main(void) {
	ios_base::sync_with_stdio(false); cin.tie(0);

	int t; cin >> t;

	while (t--) {
		cin >> s;

		for (int i = 0; i <= s.size(); i++) {
			for (int j = 0; j < 3; j++) {
				for (int k = 0; k < 3; k++) {
					dp[i][j][k] = -1;
				}
			}
		}

		cout << go(0, 0, 0) << "\n";
		print(0, 0, 0);
		cout << "\n";
	}

	return 0;
}

