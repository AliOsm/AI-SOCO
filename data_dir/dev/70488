/*          (: -_-_-_- IN THE NAME OF ALLAH -_-_-_- :)          */
/*                    | S e y e d |                             */
/*                    |    3 7    |                             */
/*                   HASHEMESHOON hastam ;)                     */
/*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*//*/
#include <bits/stdc++.h>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <iomanip>
#include <cstdio>
#include <map>
#include <string>
#include <set>
#include <vector>
#include <stack>
#include <deque>
#include <queue>
#include <ctime>
#include <list>
#include <iterator>
#define ll long long
#define ss second
#define ff first
#define pb push_back
using namespace std;
ll n,m,k,ans,col[400100],st[400100],ft[400100],a[400100],seg[1600100],lazy[1600100],x,y,z,t;
vector <ll> v[400100];
void dfs(ll xx,ll par){
    st[xx]=t++;
    a[t-1]=xx;
    for(int i=0;i<v[xx].size();i++)if(v[xx][i]!=par)dfs(v[xx][i],xx);
    ft[xx]=t;
}
void bld(ll pos,ll bb,ll ee){
    ll mid=(bb+ee)/2,l=pos*2,r=l+1;
    if(ee-bb<=1){
        seg[pos]=1ll <<col[a[bb]];
        return;
    }
    bld(l,bb,mid);
    bld(r,mid,ee);
    seg[pos]=seg[l] | seg[r];
}
void shift(ll pos){
    if(lazy[pos]==0)return;
    lazy[pos*2]=lazy[pos*2+1]=lazy[pos];
    seg[pos*2]=seg[pos*2+1]=lazy[pos];
    lazy[pos]=0;
}
ll get(ll pos,ll bb,ll ee,ll bx,ll ex){
    ll mid=(bb+ee)/2,l=pos*2,r=l+1;
    if(ex-bx==ee-bb)return seg[pos];
    shift(pos);
    if(ex<=mid)return get(l,bb,mid,bx,ex);
    if(bx>=mid)return get(r,mid,ee,bx,ex);
    return (get(l,bb,mid,bx,mid) | get(r,mid,ee,mid,ex));
}
void up(ll pos,ll bb,ll ee,ll bx,ll ex,ll val){
    ll mid=(bb+ee)/2,l=pos*2,r=l+1;
    if(ee-bb==ex-bx){
        seg[pos]=lazy[pos]=val;
        return;
    }
    shift(pos);
    if(ex<=mid)up(l,bb,mid,bx,ex,val);
    else if(bx>=mid)up(r,mid,ee,bx,ex,val);
    else {
        up(l,bb,mid,bx,mid,val);
        up(r,mid,ee,mid,ex,val);
    }
    seg[pos]=seg[l] | seg[r];
}
int main(){
    ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	cin>>n>>m;
	for(int i=0;i<n;i++){
        cin>>col[i];
        col[i]--;
	}
	for(int i=0;i<n-1;i++){
        cin>>x>>y;
        v[x-1].pb(y-1);
        v[y-1].pb(x-1);
	}
	dfs(0,-1);
	bld(1,0,n);
	for(int i=0;i<m;i++){
        cin>>z;
        if(z==1){
            cin>>x>>y;
            up(1,0,n,st[x-1],ft[x-1],1ll<<(y-1));
        }
        else {
            cin>>x;
            x--;
            cout<<__builtin_popcountll(get(1,0,n,st[x],ft[x]))<<endl;
        }
	}
	return 0;
}
