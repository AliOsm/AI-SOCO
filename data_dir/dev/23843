#include <vector>
#include <list>
#include <map>
#include <unordered_set>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <tuple>
#include <set>
#include <iostream>
#define MODD 1000000007
#define MAXN 100000
#define ll long long

using namespace std;


/*
ll Solve(int st,int en) {
    
    if (en-st+1==3) {
        return (ll)st*(ll)(st+1)*(ll)(st+2);
    }
    
    // st,st+1,st+2,..,en-2,en-1,en
    // st,st+1 and en
    ll ret=0;
    ret=min(Prod(st,st+1,en)+Solve(st+1,en),
            Prod(st,en,en-1)+Solve(st,en-1));
    
    
    for(int mid=st+2;mid<=en-1;mid++) {
        ll curr = Solve(st,mid)
    }
    
    
}
 */


ll Solve(const vector<int>& ids) {
    if (ids.size()==3) {
        return (ll)ids[0]*(ll)ids[1]*(ll)ids[2];
    }
    ll ans=(1ll<<60);
    for(int i=2;i<=ids.size()-2;i++) {
        // 1 to i and i to ids.size()-1
        
        vector<int> F;
        F.push_back(ids[0]);
        for(int j=1;j<=i;j++)
            F.push_back(ids[j]);
        
        vector<int> S;
        S.push_back(ids[0]);
        for(int j=i;j<ids.size();j++) {
            S.push_back(ids[j]);
        }
        
        ans = min(ans, Solve(F)+Solve(S));
    }
    return ans;
    
}

int main() {
    int n;
    cin>>n;
    ll ans=0;
    for(int k=1;k<=n-2;k++)
        ans+=(ll)(k+2)*(ll)(k+1);
    cout << ans << endl;
    return 0;
    
    vector<int> ids;
    for(int i=1;i<=n;i++)
        ids.push_back(i);
    cout << Solve(ids) << endl;
    
}
