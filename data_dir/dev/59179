#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll fastexp(ll x ,ll n)
{
    ll result =1;
    while(n>0)
    {
        if(n%2==1)
            result*=x;
        x*=x;
        n=n/2;
    }
    return result;
}

ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
bool mycomp(pll &a,pll &b)
{
    if(a.F!=b.F)
        return a.F < b.F;
    else
        return a.S < b.S;
}
ll N=10000000;
vector<ll> minp(10000005,0);
void seive()
{
     ll i,j;
     for(i=2;i*i<=N;i++)
     {
          if(minp[i]==0)
          {
               for(j=i*i;j<=N;j+=i)
                    if(minp[j]==0)
                         minp[j]=i;
          }
     }
     
     for(i=2;i<=N;i++)
          if(minp[i]==0)
               minp[i]=i;
}
vector<ll> f(N+1);
void solve()
{
     seive();
     ll n;
     cin>>n;
     vector<ll> v(n+1,0);
     ll i,j;
     set<ll> st;
     for(i=1;i<=n;i++)
          cin>>v[i];
     for(i=1;i<=n;i++)
     {
          ll x =v[i];
          while(x!=1)
          {
               ll y =minp[x];
               f[y]+=1;
               while(x%y==0)
                    x/=y;
          }
     }
     for(i=1;i<=N;i++)
          f[i]+=f[i-1];
     ll m;
     cin>>m;
     while(m--)
     {
          ll l,r;
          cin>>l>>r;
          if(l>N)
               cout<<"0\n";
          else 
          {
               r=min(r,N);
               ll ans=f[r]-f[l-1];
               cout<<ans<<"\n";
          }
     }
     
     
}
     


int main()
{
    ios;
    ll t;
    t=1;

    while(t--)
        solve();
}