#include <bits/stdc++.h>
using namespace std;
const int N = 4e5 + 5;
int dp[20][N],q,cnt = 2,len[N],id;
long long ans[N],w[N];
void fix(int u){
	for(int i = 1;i < 20;i++)
		if(dp[i - 1][u] != -1)
			dp[i][u] = dp[i - 1][dp[i - 1][u]];
}
int query(int u,long long mx){
	int ret = 0,cur = u;
	for(int i = 19;i + 1;i--){
		int temp = dp[i][cur];
		if(!temp)continue;
		if(ans[u] - ans[temp] <= mx){
			ret = len[u] - len[temp];
			cur = dp[i][cur];
		}
	}
	while(cur && ans[u] - ans[dp[0][cur]] <= mx){
			ret = len[u] - len[cur];
			cur = dp[0][cur];
		}
	return len[u] - len[cur];
}
int get(int at,long long W){
	if(w[at] >= W)return at;
	for(int i = 19;i + 1;i--)
		if(dp[i][at] && w[dp[i][at]] < W)at = dp[i][at];
	at = dp[0][at];
	if(ans[dp[0][at]] < W && w[dp[0][at]] >= W)at = dp[0][at];
	return ans[at] < W ? 0 : at;
}
int main(){
// 	freopen("readin.txt","r",stdin);
	scanf("%d",&q);
	long long last = 0,t,R,W;
	len[1] = 1;
	while(q--){
		scanf("%lld%lld%lld",&t,&R,&W);
		R^=last;
		W^=last;
		if(t == 1){
			w[cnt] = W;
			id = dp[0][cnt] = get(R,W);
			ans[cnt] = ans[id] + W;
			len[cnt] = len[id] + 1;
			fix(cnt);
			cnt++;
		}
		else {
			last = query(R,W);
			printf("%lld\n",last);
		}
	} 
}