#include <bits/stdc++.h>

using namespace std;

const int N = 2500;

int n;

struct point 
{
	int x, y;
	int id;
} f, s, p[N];

vector < point > a, b;

long long ans = 1e18;

bool used[N];

long long dist(point a, point b)
{
	return 1ll * (a.x - b.x) * (a.x - b.x) + 1ll * (a.y - b.y) * (a.y - b.y);
}

bool cmp1(point a, point b)
{
	return dist(f, a) < dist(f, b);
}

bool cmp2(point a, point b)
{
	return dist(s, a) < dist(s, b);
}

long long Sq(long long x)
{
	long long xx = (long long)sqrt(x);
	if (xx * xx < x) xx++;
	return xx;
}

void go()
{
	long long ff = 0;
	for (auto it : a)
		if (used[it.id])
			ff = dist(f, it);
	long long tmp = ff;
	ff = 0;
	for (auto it : b)
		if (!used[it.id])	
			ff = dist(s, it);
	tmp += ff;
	ans = min(ans, tmp);
}

int main()
{ 
	scanf("%d%d%d%d%d", &n, &f.x, &f.y, &s.x, &s.y);
	for (int i = 1;i <= n;i++)
	{
		scanf("%d%d", &p[i].x, &p[i].y); p[i].id = i;
		a.push_back(p[i]);
		b.push_back(p[i]);
	}	
	sort(a.begin(), a.end(), &cmp1);
	sort(b.begin(), b.end(), &cmp2);
	for (auto it : a)
	{
		go();
		used[it.id] = 1;
		go();
	}
	cout << ans;
	return 0;
}