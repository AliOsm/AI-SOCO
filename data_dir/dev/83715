#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()     
#define SZ(x) ((int)x.size())
#define mp make_pair

typedef long long ll;

mt19937 mrand(random_device{}());
ll rnd(ll a, ll b) { return a + mrand() % (b - a + 1); }
ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }

const int N = 1e5 + 13;
vector <int> a[N];
int n;
int cur;
int head;
int mx;
pair <int, int> ans[N*4];

void dfs(int u, int p, int need) {
      ans[head++] = mp(u, cur);
      vector <int> sons;
      for (int i : a[u]) {
            if (i == p) continue;
            sons.push_back(i);
      }

      int ptr = 0;

      for (int i : sons) {
            if (cur == mx) {
                  int alive = SZ(sons) - ptr;
                  ans[head++] = mp(u, need - alive);
                  cur = need - alive;
            }
            int nxt = cur;
            cur++;
            ptr++;
            dfs(i, u, nxt);
            ans[head++] = mp(u, cur);
      }

      if (u == 1) return;

      if (cur > need) {
            ans[head++] = mp(u, need);
            cur = need;
      }

      cur++;
            
}

int main() {
      ios::sync_with_stdio(0);

#ifdef J
      freopen("a.txt", "r", stdin);
#endif

      cin >> n;

      if (n == 1) {
            cout << 1 << "\n";
            cout << 1 << " " << 0;
            return 0;
      }
      
      for (int i = 0; i < n - 1; ++i) {
            int u, v;
            cin >> u >> v;
            a[u].push_back(v);
            a[v].push_back(u);
      }

      for (int i = 1; i <= n; ++i) {
            mx = max(mx, SZ(a[i]));
      }

      dfs(1, -1, -1);

      cout << head << "\n";

      for (int i = 0; i < head; ++i) {
            cout << ans[i].first << " " << ans[i].second << "\n";
      }

      return 0;
}