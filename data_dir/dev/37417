#include<bits/stdc++.h>
using namespace std;

#define REP(i , n) for(int i = 0 ; i < n ; ++i)
#define clr(t , val) memset(t , val , sizeof(t))

#define mp make_pair
#define fi first
#define se second

#define pb push_back
#define SZ(v) ((int)(v).size())
#define all(v) v.begin() , v.end()

typedef long long ll;
typedef vector<int> vi;

const int N = 1e5 + 5;
char S[N + 5];
vi AC[N + 5];
int n;
bool f(int L , int R , int pos){
	REP(k,52) {
		if(!AC[n][k]) continue;
		if(AC[pos + 1][k] - AC[L][k] == 0) return 0;
	}
	return 1;
}
int solve(int L , int R){
	if( !f(L,R,R) ) return INT_MAX;
	if( f(L,R,L) ) return 1;
	int lo = L , hi = R;
	while(hi - lo > 1){
		int med = (lo + hi) >> 1;
		if( f(L,R,med) ) hi = med;
		else lo = med;
	}
	return hi - L + 1;
}
int main(){
	while( scanf("%d%s" , &n , S) == 2 ){
		REP(i , n)
			if(S[ i ] >= 'a' && S[ i ] <= 'z') S[ i ] -= 'a';
			else S[ i ] -= 'A' , S[ i ] += 26;
		REP(i , n + 1) AC[i] = vi(52 , 0);
		REP(i , n){
			REP(k , 52)
				AC[i + 1][ k ] = AC[ i ][ k ] + (S[i] == k);
		}
		int ans = INT_MAX;
		REP(i , n)
			ans = min(ans , solve(i , n - 1));
		printf("%d\n" , ans);
	}
}
