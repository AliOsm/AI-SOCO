///Foxi_Doree
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define gcd __gcd
#define time { ios::sync_with_stdio(0); ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); srand(time(0)); }

using namespace std;
using namespace __gnu_pbds;

//ifstream in("stdin.txt");
//ofstream out("stdout.txt");
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair < ll, ll > pll;
typedef pair < double, double > pdd;
typedef vector < ll > vll;
typedef set < ll > sll;
/*
    find_by_order()
    order_of_key()
*/
typedef tree <
ll, null_type,
less < ll >, rb_tree_tag,
tree_order_statistics_node_update > set_t;
const ll inf = 998244353, oo = 1e6 + 2, o = 4e5 + 2;
const ld E = 0.000001;

bool check(ll n, ll k)
{
    bool f = false;
    if((n & (n - 1)) == 0) {
        f = true;
    }
    if(k == 0 && n == 0) return true;
    if(k == 1 && f == false) return false;
    if(k > n || k == 0) return false;
    return true;
}

int main()
{
    time

    ll n, k, i;

    cin >> n >> k;

    vll ans; i = 35;
    bool access = false;
    while(i >= 0) {
        ll to = pow(2, i);
        if(to > n) {
            --i;
            continue;
        }
        if(check(n - to, k - 1) == true) {
            ans.pb(to);
            n -= to;
            --k;
            if(k == 0 || n == 0) {
                access = true;
                break;
            }
        }
        else {
            --i;
        }
    }
    if(access == false) {
        cout << "NO";
        return 0;
    }
    cout << "YES" << endl;
    for(i = 0; i < ans.size(); ++i) {
        cout << ans[i] << ' ';
    }
}
