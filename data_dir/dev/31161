#include<stdio.h>
#include<iostream>
#include<string.h>
#include<ctype.h>
#include<math.h>
#include<map>
#include<set>
#include<vector>
#include<queue>
#include<functional>
#include<string>
#include<algorithm>
#include<time.h>
void fre(){freopen("c://test//input.in","r",stdin);freopen("c://test//output.out","w",stdout);}
template <class T> inline void scand(T &x){char c;x=0;while((c=getchar())<'0');while(c>='0'&&c<='9')x=x*10+(c-48),c=getchar();}
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned int UI;
template <class T> inline void gmax(T &a,T b){if(b>a)a=b;}
template <class T> inline void gmin(T &a,T b){if(b<a)a=b;}
using namespace std;
const int N=105,M=0,Z=1e9+7,maxint=2147483647,ms31=522133279,ms63=1061109567,ms127=2139062143;
const double eps=1e-8,PI=acos(-1.0);//.0
map<int,int>mop;
struct A
{
	int x,v;
}a[N];
bool cmp(A a,A b)
{
	return a.x<b.x;
}
int n,i;
int main()
{
	while(~scanf("%d",&n))
	{
		for(i=1;i<=n;i++)
		{
			scanf("%d%d",&a[i].x,&a[i].v);
		}
		sort(a+1,a+n+1,cmp);

		int pl=0,pr=n+1;
		for(i=1;i<=n;i++)
		{
			if(a[i].x>0)
			{
				if(pr==n+1)pr=i;//最左的pr
			}
			else pl=i;//最右的pl
		}
		int ans=0;
		int tmp=0;
		while(1)
		{
			if(pr>n)break;
			tmp+=a[pr].v;pr++;

			if(pl<1)break;
			tmp+=a[pl].v;pl--;
		}
		gmax(ans,tmp);
		while(1)
		{
			if(pl<1)break;
			tmp+=a[pl].v;pl--;

			if(pr>n)break;
			tmp+=a[pr].v;pr++;
		}
		gmax(ans,tmp);
		printf("%d\n",ans);
	}
	return 0;
}
/*
【题意】
n个苹果树
xi,ai

【类型】


【分析】


【时间复杂度&&优化】


【trick】


【数据】


*/