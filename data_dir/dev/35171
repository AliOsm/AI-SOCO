#include<bits/stdc++.h>
#define F first
#define S second
#define mp make_pair
#define pb push_back
using namespace std;
const int N = 1000*200 + 5;
int a[N] , r[N] , n , l[N];
bool flag;
vector <pair <int , int> > d;
pair <int , int> num[N];

void solve(){
	
	d.pb(mp(a[0] , 0));

	if(!flag)
		r[0] = 1;
	else
		l[0] = 1;
		
	for(int i = 1 ; i < n ; i++){
	
		int sz = (int) d.size() - 1;
		
		while(!d.empty() && a[i] < d[sz].F){
			
			if(sz){
				if(!flag)
					r[d[sz-1].S]+= r[d[sz].S];
				else	
					l[d[sz-1].S]+= l[d[sz].S];
			}
					
			d.pop_back();
			sz--;
			
		}
		
		d.pb(mp(a[i] , i));
		
		if(!flag)
			r[i]++;
		else
			l[i]++;	
	}
	
	int sz = (int) d.size() - 1;
	
	while(!d.empty()){
		
		if(sz){
			
			if(!flag)
				r[d[sz-1].S]+= r[d[sz].S];
			else
				l[d[sz-1].S]+= l[d[sz].S];
				
		}
		
		d.pop_back();
		sz--;	
	}

}

int main(){
	
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);	
	
	
	cin >> n;
	
	for(int i = 0 ; i < n ; i++)
		cin >> a[i];
	
	solve();	
	
	reverse(a , a+n);
	reverse(r , r+n);
	
	flag = 1;
	
	solve();
	
	for(int i = 0 ; i < n ; i++)
		num[i] = mp(a[i] , r[i]+l[i] - 1);
	
	sort(num , num+n);
	reverse(num , num+n);
	
	int pt = 0 , t = 1 , s = 1;
	
	while(s <= n){
		for(int i = t ; i <= num[pt].S && s <= n; i++){
			cout << num[pt].F << " ";
			s++;
		}
		
		t = max(num[pt].S + 1 , t);
		pt++;
	}	
	
}