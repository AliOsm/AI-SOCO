//Pham Huu Canh
//C. Bath Queue
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "c.inp"
#define foo "c.out"
#define MOD 1000000007

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;

ll c[60][60];
double dp[60][60][60], prob[60];
int a[60];

void input()
{
    int n, nr, i, j;
    int was, curmax, now;
    
    scanf("%d %d", &n, &nr);
    fori(i, nr) scanf("%d", &a[i]);
    
    c[0][0] = 1;
    repi(i, 1, n){
        c[i][0] = 1;
        repi(j, 1, i)   c[i][j] = c[i-1][j-1] + c[i-1][j];
    }
    
    prob[0] = 1.0;
    repi(i, 1, n)   prob[i] = prob[i-1] / nr;
    
    dp[0][0][0] = 1.0;
    fori(i, nr)
        repi(was, 0, n)
            repi(curmax, 0, n)
                for (now = 0; was + now <= n; now++){
                    int newmax = timmax(curmax, now / a[i] + (now % a[i] ? 1 : 0));
                    dp[i+1][was + now][newmax] += dp[i][was][curmax] * c[n - was][now] * prob[now];
                }
    
    double res = 0.0;
    repi(curmax, 0, n)  res += dp[nr][n][curmax] * (double)curmax;
    printf("%.15lf", res);
    
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
