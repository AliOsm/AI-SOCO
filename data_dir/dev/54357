#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 10;

int n, m;
vector<int> g[N];
int x[N], y[N];
int bl[N], vis[N];
int id;
int sz[N], edges[N];

void dfs(int v) {
  vis[v] = id;
  for (int i = 0; i < g[v].size(); ++i) {
    int ii = g[v][i];
    bl[ii] = id;
    int u = x[ii] + y[ii] - v;
    if (vis[u] != id) {
      dfs(u);
    }
  }
}

int main() {
  scanf("%d%d", &n, &m);
  for (int i = 0; i < m; ++i) {
    scanf("%d%d", x + i, y + i);
    g[x[i]].push_back(i);
    g[y[i]].push_back(i);
  }
  int cnt = 0;
  for (int i = 1; i <= n; ++i) {
    if (!vis[i]) {
      ++id;
      dfs(i);
    }
  }
  for (int i = 1; i <= n; ++i) {
    sz[vis[i]]++;
  }
  for (int i = 0; i < m; ++i) {
    edges[bl[i]]++;
  }
  for (int i = 1; i <= id; ++i) {
    cnt += (sz[i] > edges[i]) ? 1 : 0;
  }
  printf("%d\n", cnt);
  return 0;
}
