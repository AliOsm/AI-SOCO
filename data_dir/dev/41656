#include<bits/stdc++.h>
#include<ext/numeric>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (int)v.size()
#define WHITE -1
#define GREY   0
#define BLACK  1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcount(x)
#define MP make_pair

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef unsigned int ui;

const double PI = acos(-1.0);

int dx[] = { -1, 0, 1, 0, -1, -1, 1, 1 };
int dy[] = { 0, -1, 0, 1, 1, -1, 1, -1 };

const int MAX = 1e5 + 5, MOD = 1e9 + 7, oo = (1ll << 31) - 1;
const ll OO = 1ll << 60;
const double EPS = 1e-5;

int n, x, y, w, tot, mx;
vii adjList[MAX];

void input() {
	scanf("%d", &n);
	for (int i = 0; i < n - 1; ++i) {
		scanf("%d%d%d", &x, &y, &w);
		tot += w;
		adjList[x].push_back(ii(y, w));
		adjList[y].push_back(ii(x, w));
	}
}

void dfs(int u, int par, int c) {
	bool leaf = 1;
	int siz = sz(adjList[u]);
	for (int i = 0; i < siz; ++i)
		if (adjList[u][i].first != par) {
			leaf = 0;
			dfs(adjList[u][i].first, u, c + adjList[u][i].second);
		}
	if (leaf)
		mx = max(mx, c);
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
#endif
	input();
	dfs(1, -1, 0);
	printf("%lld\n", tot * 2ll - mx);
}
