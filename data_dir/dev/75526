//In the name of God

#include <iostream>
#include <algorithm>
#include <set>
using namespace std;
#define mp make_pair
const int MAXN=1e5+10;
int win,lose;
int p[3][MAXN],m[3][MAXN],a[MAXN],n;
set <pair <int,int> > ans;

int calc(int ind,int g)
{

  int t=p[win][ind],s=0,lw=0,ww=0;
  if(g==1)
    ww=1,t=p[win][ind],s++;
  else
    lw=1,t=p[lose][ind];
  int x=p[win][ind],y=p[lose][ind];
  while(ind<n)
    {
      int ind1=m[lose][y+t],ind2=m[win][x+t];
      if(ind1==0 and ind2==0)
	return -1;
      if(ind2!=0 and (ind1>ind2 or ind1==0))
	{
	  s++;
	  x=p[win][ind2];
	  y=p[lose][ind2];
	  ind=ind2;
	  ww++;
	}
      else if(ind1!=0 and (ind1<ind2 or ind2==0))
	{
	  x=p[win][ind1];
	  y=p[lose][ind1];
	  ind=ind1;
	  lw++;
	}
      else
	return -1;
    }
  if(ww>lw)
    return s;
  return -1;
}

int main()
{
  int last=0;
  cin>>n;
  for(int i=1;i<=n;i++)
    cin>>a[i],last=a[i];
  //reverse(a+1,a+1+n);
  for(int i=1;i<=n;i++)
    {
      int x=a[i];
      p[1][i]+=p[1][i-1];
      p[2][i]+=p[2][i-1];
      p[x][i]++;
      m[x][p[x][i]]=i;
    }
  win=last,lose=3-last;
  int lw=0,ww=0;
  for(int i=1;i<=n;i++)
    {
      if(p[win][i]>p[lose][i] and a[i]==win)
	{
	  int g=calc(i,1);
	  if(g!=-1)
	    ans.insert(mp(g,p[win][i]));
	  //	    cout<<p[win][i]<<" "<<g<<endl;
	}
    }
  for(int i=1;i<=n;i++)
    if(p[win][i]<p[lose][i] and a[i]==lose)
      {
	int g=calc(i,2);
	if(g!=-1)
	  ans.insert(mp(g,p[lose][i]));
	//cout<<p[lose][i]<<" "<<g<<endl;
      }
  cout<<ans.size()<<endl;
  if(!ans.empty())
    {
      set <pair <int,int> >::iterator it=ans.begin();
      while(it!=ans.end())
	{
	  cout<<(*it).first<<" "<<(*it).second<<endl;
	  it++;
	}
    }
  return 0;
}
