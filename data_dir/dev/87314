#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using OS = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long

const int N = 1e5 + 5;
ll n, k, m, tk, a[N], lst = -1, no[N];
set<pair<ll, int>> se;

int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    cin >> n >> k;
    m = n;
    for (int i = 0; i < n; i++) cin >> a[i], se.insert({a[i], i});

    while (se.size()) {
        if (se.begin()->first == lst) {
            no[se.begin()->second] = 1;
            se.erase(se.begin());
            n--;
            continue;
        }
        if ((se.begin()->first - tk) * n > k) break;
        lst = se.begin()->first;
        k -= (se.begin()->first - tk) * n;
        tk = se.begin()->first;
        no[se.begin()->second] = 1;
        n--;
        se.erase(se.begin());
    }

    if (n) {
        ll sub = k / n;
        tk += sub;
        k %= n;
        deque<int> q;
        for (int i = 0; i < m; i++) a[i] -= tk;

        for (int i = 0; i < m; i++) if (!no[i]) q.push_back(i + 1);
        while (q.size() && k) {
            if (a[q.front() - 1] > 1) {
                q.push_back(q.front());
                q.pop_front();
            } else q.pop_front();
            k--;
        }

        while (q.size()) cout << q.front() << " ", q.pop_front();

    } else if (!k) return 0;
    else cout << -1;

    return 0;
}