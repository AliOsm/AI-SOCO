#include<bits/stdc++.h>
using namespace std;

struct point{
    double x,y;
    point(){x=y=0.0;}
    point(double _x,double _y):x(_x),y(_y){}
};
vector<point>p;
struct vec{
    double x,y;
    vec(double _x,double _y):x(_x),y(_y){}
};
vec toVec(point a,point b){
    return vec(b.x-a.x,b.y-a.y);
}
vec scale(vec v,double s){
    return vec(v.x*s,v.y*s);
}
double dot(vec a,vec b){
    return (a.x*b.x+a.y*b.y);
}
double norm_sq(vec v){
    return v.x*v.x+v.y*v.y;
}
point translate(point p,vec v){
    return point(p.x+v.x,p.y+v.y);
}
double dist(point p1,point p2){
    return hypot(p1.x-p2.x,p1.y-p2.y);
}
double dist_to_line(point p,point a,point b,point &c){
    vec ap=toVec(a,p),ab=toVec(a,b);
    double u=dot(ap,ab)/norm_sq(ab);
    c=translate(a,scale(ab,u));
    return dist(p,c);
}
int main(){
    int n,i;
    double x,y,ans=1e9;
    scanf("%d",&n);
    for(i=0;i<n;i++){
        cin>>x>>y;
        p.push_back(point(x,y));
    }
    p.push_back(p[0]);
    p.push_back(p[1]);
    point c;
    for(i=0;i<n;i++){
        ans=min(ans,dist_to_line(p[i+1],p[i],p[i+2],c)*0.5);
    }
    printf("%0.8f\n",ans);
    return 0;
}
