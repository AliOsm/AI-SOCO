#include <iostream>
#include <cstdio>
#include <map>
#include <cstring>
#include <string>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <set>

using namespace std;

int X[1000000];
int Y[1000000];
int Next[1000000];
int Pr[1000000];
vector<int> q[310000];
string s;
set<int> av;
int mx;
int col[310000];

void go(int v, int p) {
    for (int i = 0; i < q[v].size(); i++) {
        if (col[q[v][i]]) {
            av.erase(col[q[v][i]]);
        }
    }
    for (int i = 0; i < q[v].size(); i++) {
        if (!col[q[v][i]]) {
            col[q[v][i]] = *av.begin();
            av.erase(col[q[v][i]]);
            mx = max(mx, col[q[v][i]]);
        }
    }
    for (int i = 0; i < q[v].size(); i++) {        
        av.insert(col[q[v][i]]);        
    }
    for (int i = Pr[v]; i; i = Next[i]) {
        if (Y[i] != p) {
            go(Y[i], v);
        }
    }
}
int main() {
    ios_base::sync_with_stdio(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
    int n, m;
	cin >> n >> m;
    for (int i = 1; i <= n; i++) {
        int s;
        cin >> s;
        while (s) {
            s--;
            int x;
            cin >> x;
            q[i].push_back(x);
        }        
    }
    for (int i = 1; i <= m; i++) {
        av.insert(i);
    }
    for (int i = 1; i < n; i++) {
        cin >> X[i] >> Y[i];
        X[i + n- 1] = Y[i];
        Y[i + n - 1] = X[i];
    }
    for (int i =1 ; i <= n + n - 2; i++) {
        Next[i] = Pr[X[i]];
        Pr[X[i]] = i;
    }
    go(1, 0);
    if (mx == 0) {
        mx = 1;
    }
    cout << mx << endl;    
    for (int i = 1; i <= m; i++) {
        if (col[i] == 0) {
            col[i] = 1;
        }
        cout << col[i];
        if (i < m) {
            cout << " ";
        }
    }
    cout << endl;
	return 0;
}