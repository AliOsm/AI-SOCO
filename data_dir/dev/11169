#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define cont continue
#define re return

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

vector <int> v[351];

char cn;

int a[351], b[351], c[351], ans[351], n, i, j, k;

bool pole[351];

    void dfs(int nom)
    {
        int i;

        pole[nom] = true;

        k++;

        b[k] = nom;

        c[k] = a[nom];

        for (i = 0; i < v[nom].size(); i++)
            if (!pole[v[nom][i]]) dfs(v[nom][i]);
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    for (i = 1; i <= n; i++) cin >> a[i];

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++) {
            cin >> cn;

            if (cn == '1') {
                v[i].p_b(j);

                v[j].p_b(i);
            }
        }

    for (i = 1; i <= n; i++)
        if (!pole[i]) {
            k = 0;

            dfs(i);

            sort(b + 1, b + 1 + k);

            sort(c + 1, c + 1 + k);

            for (j = 1; j <= k; j++) ans[b[j]] = c[j];
        }

    for (i = 1; i <= n; i++) cout << ans[i] << " ";

    cout << endl;

    re 0;
}
