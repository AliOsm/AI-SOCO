///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define ll long long int
#define inf ( int )( 1e9 )
#define mxs (int)( 1e6 + 10 )
#define md  int mid = ( l + r )>>1;
#define mod (ll)(1e9)+7
//int dx[]={+1,0,+0,-1};///Four Directions
//int dy[]={+0,-1,+1,+0};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
ll t, n, m, j, ans, k,a, b, c, d, e,f ,sum , i,sz,row,col;
string s, s2, s3, s4;
vector < int > v;
vector < int > graph [ mxs ];
int ar [ mxs ] , ar2 [ mxs ] ;
int level [ mxs ];
void brainfuck();
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>n;
    m = ( n * ( n + 1 ) ) / 2;
    a = m;
    if ( m&1 )m = m / 2 + 1;
    else m /= 2;
    v.push_back( n );
    m -= n;
    n--;
    while( m > 0 )
    {
        if ( m - n >= 0 )
        {
            m -= n;
            v.push_back( n );
            n--;
        }
        else n--;
    }
    for ( i = 0 ; i < v.size(); i++ )
    {
        ans += v [ i ];
    }
    a -= ans;
    cout<<abs(a - ans)<<"\n";
    cout<<v.size();
    for ( i = 0 ; i < v.size(); i++ )cout<<" "<<v [ i ];
}
