#include <stdio.h>
#include <vector>
#include <algorithm>

struct T{
	long long s;
	
	long long cost;
	
	long long ind;
};

long long m[11];

int main() {
   	long long n, k;
   	scanf("%lld %lld", &n, &k);
	std::vector <T> v(n);
   	for(int i = 0; i < n; i++){
   		scanf("%lld", &v[i].s);
   		v[i].ind = i;
	}
	for(int i = 0; i < n; i++){
   		scanf("%lld", &v[i].cost);
	}
	std::sort(v.begin(), v.end(), [](const T &left, const T &right){
		return left.s < right.s;
	});
	int last = -1;
	for(int i = 0; i < n; i++){
//	    printf("%d %d\n", v[i].s, v[i].cost);
		long long res = 0;
		long long mx = INT_MIN, t = -1, ind;
		for(int j = 0; j < k; j++){
			if(m[j] < last){
				if(last - m[j] > mx){
				    mx = last - m[j];
				    t = m[j];
				    ind = j;
				}
			}
			res += m[j];
		}
		long long t1 = v[i].cost;
		if(t == -1) v[i].cost = res + v[i].cost;//printf("%d ", res + v[i].cost);
		else{
		    //printf("%d ", res + (last - t) + v[i].cost);
		    m[ind] = last;
		    v[i].cost = res + (last - t) + v[i].cost;
		}
		last = t1;
	}
	std::sort(v.begin(), v.end(), [](const T &left, const T &right){
		return left.ind < right.ind;
	});
	for(int i = 0; i < n; i++){
   		printf("%lld ", v[i].cost);
	}
    return 0;
}