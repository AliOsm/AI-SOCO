#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

ll k, a = 0, b = 0;
int alice[3][3], bob[3][3];
bool used[3][3];

void game(int p, int q)
{
	if(p != q)
	{
		if((p == 0 && q == 2) || (p == 1 && q == 0) || (p == 2 && q == 1))
		{
			++a;
		} else
		{
			++b;
		}
	}
}

int main (int argc, char *argv[])
{
	int p, q;
	scanf("%lld%d%d", &k, &p, &q);
	--p; --q;
	for(int i = 0; i < 3; ++i)
	{
		for(int j = 0; j < 3; ++j)
		{
			scanf("%d", &alice[i][j]);
			--alice[i][j];
		}
	}
	for(int i = 0; i < 3; ++i)
	{
		for(int j = 0; j < 3; ++j)
		{
			scanf("%d", &bob[i][j]);
			--bob[i][j];
		}	
	}
	memset(used, false, sizeof(used));
	ll cur = 0;
	while(k > 0 && !used[p][q])
	{
		used[p][q] = true;
		game(p, q);
		--k;
		int pp = alice[p][q],
			qq = bob[p][q];
		p = pp;
		q = qq;
	}
	ll ap = a,
		bp = b;
	a = 0;
	b = 0;
	memset(used, false, sizeof(used));
	while(k > 0 && !used[p][q])
	{
		used[p][q] = true;
		game(p, q);
		++cur;
		int pp = alice[p][q],
			qq = bob[p][q];
		p = pp;
		q = qq;
	}
	if(k > 0)
	{
		a *= k / cur;
		b *= k / cur;
		k %= cur;
	}
	while(k--)
	{
		game(p, q);
		int pp = alice[p][q],
			qq = bob[p][q];
		p = pp;
		q = qq;
	}
	a += ap;
	b += bp;
	printf("%lld %lld", a, b);

	return 0;
}

