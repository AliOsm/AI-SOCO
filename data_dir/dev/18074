#include <bits/stdc++.h>
using namespace std;

vector<int> g[100005];
int vis[100005];
int cat[100005];
int in[100005];
int n, m, c = 0;

void dfs(int u, int p, int cnt, int sig)
{
	vis[u] = 1;
	if (in[u] == 1 && u != 1 && sig == 1)	c++;
	int i, v;
	for (i = 0; i < (int) g[u].size( ); i++)
	{
		v = g[u][i];
		if (vis[v] == 0)
		{
			if (p == 1 && cat[v] == 1)
			{
				cnt++;
				if (cnt > m)
				{
					cnt--;
					continue;
				}
				dfs(v, cat[v], cnt, sig);
				cnt--;
				continue;
			}
			else if (cat[v] == 1)
			{
				dfs(v, cat[v], 1, sig);
			}
			else
			{
				dfs(v, cat[v], 0, sig);
			}
		}
	}
}

int main( )
{
	int i, j, k;
	cin >> n >> m;
	for (i = 1; i <= n; i++)
		cin >> cat[i];
	for (i = 1; i < n; i++)
	{
		cin >> j >> k;
		in[j]++;
		in[k]++;
		g[j].push_back(k);
		g[k].push_back(j);
	}
	dfs(1, cat[1], cat[1], 1);
	cout << c << "\n";
	return 0;
}