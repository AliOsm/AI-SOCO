#include <bits/stdc++.h>

using namespace std;
using ll = long long;

const int MAXN = 3005;
vector <int> a[MAXN]; 
int potato[MAXN];
int skok[MAXN];
vector <int> cur, cyc;

void findo(int u, int prepod = 1) {
    potato[u] = 1;
    cur.push_back(u);
    for (int v : a[u]) {
        if (v == prepod)
            continue;
        if (potato[v] == 1) {
            vector <int> zuzu;
            for (auto nash = find(cur.begin(), cur.end(), v); nash != cur.end(); ++nash)
                zuzu.push_back(*nash);
            cyc = zuzu;
        }
        else if (potato[v] == 0) {
            findo(v, u);
        }
    }
    cur.pop_back();
    potato[u] = 2;
}

void get_funny_mouse() {
    fill(skok, skok + MAXN, 1e9);
    queue <int> och;
    for (int v : cyc) {
        skok[v] = 0;
        och.push(v);
    }
    while (!och.empty()) {
        int stanc = och.front();
        och.pop();
        for (int st2 : a[stanc]) {
            if (skok[st2] > skok[stanc] + 1) {
                skok[st2] = skok[stanc] + 1;
                och.push(st2);
            }
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        int u, v;
        cin >> u >> v;
        a[u].push_back(v);
        a[v].push_back(u);
    }
    findo(1);
    get_funny_mouse();
    for (int i = 1; i <= n; ++i) {
        cout << skok[i] << ' ';
    }
    return 0;
}