#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define re return
#define ll long long
#define ull unsigned ll
#define ld long double
#define s second
#define f first
#define S second
#define F first
#define pi acosl(-1)
#define oo (int)1e9
#define OO 1e18
#define EPS 1e-9
#define Endl '\n'
#define all(v) (v).begin(),(v).end()
#define FX(n) fixed<<setprecision(n)
#define mm(o,k) memset(o,k,sizeof o)
#define IO ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
const int N = 1e8 + 5, M = 2 * N + 5;
int n, m;
bool ok;
vector<string> a;
map<pair<int, int >, pair<int, int> > par;
void dfs(int i, int j){
    if(i == n - 1 && j == m - 1)
        re ok = true, void();
    if(i + 1 < n && a[i + 1][j] == '.' && par.find(make_pair(i + 1, j)) == par.end()){
        par[make_pair(i + 1, j)] = make_pair(i, j);
        dfs(i + 1, j);
    }
    if(j + 1 < m && a[i][j + 1] == '.' && par.find(make_pair(i, j + 1)) == par.end()){
        par[make_pair(i, j + 1)] = make_pair(i, j);
        dfs(i, j + 1);
    }
}
int main()
{
    IO;

    cin >> n >> m;
    string s;
    for(int i = 0 ; i < n ; ++i){
        cin >> s;
        a.emplace_back(s);
    }
    dfs(0, 0);
    if(!ok)exit(puts("0"));
    int x = n - 1, y = m - 1;
    while(true){
        if(!x && !y)break;
        pair<int, int> p = par[make_pair(x, y)];
        x = p.f;
        y = p.s;
        a[x][y] = '#';
    }
    a[0][0] = '.';
    // for(int i = 0 ; i < n ; ++i)
    // cout << a[i] << endl;
    // cout << a[0][0] << endl;
    ok = false;
    par.clear();
    dfs(0, 0);
    // cout << ok << endl;
    if(!ok)exit(puts("1"));
    puts("2");
    re 0;
}