#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
const int inf_int=1e9+100;
const ll inf_ll=1e16;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef long double dbl;
#define pb push_back
const double pi=3.1415926535898;
#define dout if(debug) cout
#define fi first
#define se second
#define sp setprecision
#define sz(a) (int(a.size()))
#define all(a) a.begin(),a.end()
bool debug = 0;
const int MAXN = 1e5+100;
const int LOG = 20;
const ll mod =998244353;
const int MX = 1e5+100;

int dis[510][510];
int arr[510];
void floyd(int n){
    for(int k=1;k<=n;++k){
        for(int i=1;i<=n;++i){
            for(int e=1;e<=n;++e){
                dis[i][e] = min(dis[i][e],dis[i][k] + dis[k][e]);
            }
        }
    }
}

vector<pii> go[MX];
vector<int> g[510];
int best_v[MX];

int top = 1;
int get_new(){
    assert(top < MX);
    return top++;
}


void main_fun(vector<int>& a,int pos){
    if(a.size()==1){
        best_v[pos] = a[0];
        return;
    }
    int mn = inf_int;
    int ver = -1;
    for(int v:a){
        int cur_max = 0;
        for(int nxt : a){
            if(dis[v][nxt]==1){
                int cnt = 0;
                for(int other:a){
                    if(dis[nxt][other] < dis[v][other]){
                        cnt++;
                    }
                }
                cur_max = max(cur_max, cnt);
            }
        }
        if(mn > cur_max){
            mn = cur_max;
            ver = v;
        }
    }
    best_v[pos] = ver;
    int v = ver;
    dout <<"HERE "<<endl;
    for(int x:a){
        dout << x <<"  ";
    }
    dout << endl;
    dout <<"best "<<ver<<" - "<<mn<<endl;
    for(int nxt : a){
        if(dis[v][nxt]==1){
            vector<int> all;
            for(int other : a){
                if(dis[nxt][other] < dis[v][other]){
                    all.pb(other);
                }
            }
            int to = get_new();
            go[pos].pb({nxt,to});
            main_fun(all,to);
        }
    }


}
void solve(){
    int n;
    cin >> n;
    int k;
    cin >> k;
    for(int i=1;i<=500;++i){
        for(int e=1;e<=500;++e){
            dis[i][e] = inf_int;
        }
        dis[i][i] = 0;
    }

    for(int i=1;i<=k;++i){
        int m;
        cin >> m;
        for(int e=1;e<=m;++e){
            cin >> arr[e];
            if(e>1){
                dis[arr[e]][arr[e-1]] = 1;
                dis[arr[e-1]][arr[e]] = 1;
            }
        }
    }
    floyd(n);

    vector<int> all;
    for(int i=1;i<=n;++i){
        all.pb(i);
    }
    main_fun(all,0);

    for(int i=1;i<=n;++i){
        int cur = 0;

        while(true){
            cout << best_v[cur]<<endl;
            string x;
            cin >> x;
            if(x == "FOUND"){
                break;
            }
            int to;
            cin >> to;
            bool flag = 0;
            for(pii x:go[cur]){
                if(x.fi == to){
                    cur = x.se;
                    flag = 1;
                    break;
                }
            }
            assert(flag);
        }
    }



}

signed main()
{
        #ifdef zxc
            debug = 1;
          // freopen("input.txt","r",stdin);
            //freopen("output1.txt","w",stdout);
        #else
        #endif //zxc
        ios_base::sync_with_stdio(0);
        cin.tie(0); cout.tie(0);
        cout.setf(ios::fixed);
        cout.precision(20);
        int t = 1;
        while(t--)
            solve();
}
