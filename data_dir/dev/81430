#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int t;
	cin >> t;
	
	while(t--){
		int n;
		cin >> n;
		
		vector<int> v(2 * n + 5);
		vector<bool> used(2 * n + 5);
		vector<int> nums;
		
		
		for(int i = 1, pos = 1; i <= n; i++, pos += 2){
			int x;
			cin >> x;
			nums.push_back(x);
			v[pos] = x;
			used[x] = true;
		}
		
		bool ok = true;
		
		for(int i = 1; i <= 2 * n; i += 2){
			int val = v[i];
			
			bool found = false;
			for(int j = val + 1; j <= 2 * n; j++){
				if(!used[j]){
					found = true;
					used[j] = true;
					v[i + 1] = j;
					break;
				}
			}
			
			if(!found){
				ok = false;
				break;
			}
			
		}
		
		if(!ok){
			cout << -1 << endl;
		}
		else{
			for(int i = 1; i <= 2 * n; i++)
				cout << v[i] << " \n"[i == 2 * n];
		}
		
	}

	return 0;
}
