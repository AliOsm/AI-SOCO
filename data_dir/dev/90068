#include <bits/stdc++.h>

using namespace std;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n , m;
    cin >> n >> m;
    vector < vector < int > > graph(n);
    int a , b;
    for(int i = 0; i < m ; i++){
      cin >> a >> b;
      a--;b--;
      graph[a].push_back(b);
      graph[b].push_back(a);
    }
    vector < bool > was(n);
    int cc = 0;
    // from , idx , p
    vector < pair < int , pair < int , int > > > q;
    for(int i = 0; i < n; i++){
      if(!was[i]){
        q.push_back({i , {0 , -1}});
        bool bad = false;
        while(!q.empty()){
          int from = q.back().first;
          int idx = q.back().second.first;
          int p = q.back().second.second;
          q.pop_back();
          if((int)graph[from].size() != 2){
            bad = true;
          }
          was[from] = true;
          while(idx < (int)graph[from].size()){
            int to = graph[from][idx++];
            if(!was[to]){
             // cout << from << " " << to << endl;
              q.push_back({ from , {idx , p} });
              q.push_back({ to , {0 , from} });
              break;
            }else{
              if(to == p){continue;}
              if(to != i && from != i){
                //cout << from << " " << to << " " << i << " " << p << endl;
                bad = true;
              }
            }
          }
        }
        cc += !bad ? 1 : 0;
      }
    }
    cout << cc << endl;
    return 0;
}