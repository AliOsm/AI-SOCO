#include<bits/stdc++.h>
using namespace std;
#define ll long long int
bool vis[350];
vector<ll>prime;
ll pfact[70],l,k;
vector<ll>vec[100009];
class node
{
public:
    ll cnt;
    node *next[35];
    node()
    {
        cnt=0;
        for(ll i=0; i<35; i++)
        {
            next[i]=NULL;
        }
    }
}*root,*proot[100009];

void insert_(node* curr)
{
    ll i,a;
    for(i=0; i<l; i++)
    {
        a=pfact[i];
        if(curr->next[a]==NULL)
        {
            curr->next[a]=new node();
        }
        curr=curr->next[a];
        curr->cnt++;

    }
}
ll search_(node *curr)
{
    ll a,i;
    for(i=0; i<l; i++)
    {
        a=(k-pfact[i]);
        if(a==k)
            a=0;
        if(curr->next[a]==NULL)
        {
            return 0;
        }
        curr=curr->next[a];
    }
    return curr->cnt;
}
int main()
{
    ll a,b,c,d,e,i,j,n,m,x,y,t,p;
    a=316;
    b=17;
    prime.push_back(2);
    memset(vis,true,sizeof(vis));
    for(i=3; i<=b; i+=2)
    {
        if(vis[i])
        {
            for(j=i*i; j<=a; j+=(i+i))
            {
                vis[j]=false;
            }
        }
    }
    for(i=3; i<=a; i+=2)
    {
        if(vis[i])
        {
            prime.push_back(i);
        }
    }
    l=prime.size();
    scanf("%lld%lld",&n,&k);
    if(k>33)
    {
        x=0;
        for(i=0; i<n; i++)
        {
            scanf("%lld",&a);
            if(a==1)
            {
                x++;
            }
        }
        x=x*(x-1);
        x=x/2;
        printf("%lld\n",x);
        return 0;
    }
    root=new node();
    x=0;
    for(i=0; i<n; i++)
    {
        scanf("%lld",&a);
        b=a;
        for(j=0; j<l; j++)
        {
            c=0;
            p=prime[j];
            if(a%p==0)
            {
                while(a%p==0)
                {
                    c++;
                    a=a/p;
                }
            }
            pfact[j]=c%k;
        }
        if(a==1)
        {
            c=search_(root);
            x+=c;
            insert_(root);
        }
        else
        {
            vec[a].push_back(b);
        }
    }
    if(k==2)
    {
    for(i=1; i<=100000; i++)
    {
        if(vec[i].size()>1)
        {
            m=vec[i].size();
            proot[i]=new node();

            for(d=0;d<m;d++)
            {
                a=vec[i][d];
                for(j=0; j<l; j++)
                {
                    c=0;
                    p=prime[j];
                    if(a%p==0)
                    {
                        while(a%p==0)
                        {
                            c++;
                            a=a/p;
                        }
                    }
                    pfact[j]=c%k;
                }
                c=search_(proot[i]);
                x+=c;
                insert_(proot[i]);
            }
        }
    }
    }
    printf("%lld\n",x);
}
