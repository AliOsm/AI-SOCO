#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define int long long int
#define pb push_back
#define fi first
#define se second
#define fr(i, a, b) for(int i = a; i <= b; i++)
#define all(x) x.begin(), x.end()
#define IO ios :: sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define pii pair<int,int>
const int mod = 1e9 + 7;
typedef long double f80;
#define endl '\n'
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

const int N = 1e5 + 5;
vector<int> pos[N];
int a[N], b[N];
void solve(){
    int n;
    cin >> n;
    fr(i, 1, n){
        cin >> a[i];
        pos[n - a[i]].pb(i);
    }
    fr(i, 1, n){
        int nn = pos[i].size();
        if(nn % i != 0){
            cout << "Impossible" << endl;
            return;
        }
    }
    int cc = 0;
    fr(i, 1, n){
        int nn = pos[i].size();
        for(int j = 0; j < nn; j++){
            if(j % i == 0) cc++;
            b[pos[i][j]] = cc;
        }
    }
    cout << "Possible" << endl;
    fr(i, 1, n)
        cout << b[i] << " ";
}
signed main(){
    IO;
    #ifdef LOCAL
        freopen("inp.txt", "r", stdin);
        // freopen("out.txt", "w", stdout);
    #endif
    clock_t clk = clock();
    int t = 1;
    // cin >> t;
    fr(i, 1, t)
        solve();
    cerr << endl << (double)(clock() - clk) / CLOCKS_PER_SEC;
    return 0;
}