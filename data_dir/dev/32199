// Author : Mohamed Sameh
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<cmath>
#include<queue>
#include<list>
#include<stack>
#include<deque>
#include <string.h>
typedef long long ll ;
#define pb push_back
#define f first
#define s second
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define SZ(a) (int)a.size()
using namespace std ;
int n , k , a, b ; 
map <int , int> pos ; 
vector <int> ave ; 
int sum (int low , int high )
{
    int l =0 , r = SZ(ave) - 1, m , ans = -1 ;
    while (l <= r )
    {
        m = (l+r)>>1; 
        if (ave[m] >= low )
        {
            if (ave[m] <= high)
            ans = m ; 
            r = m-1; 
        }else 
            l = m+1;
    }
    if (ans == -1 )return 0; 
    l = ans , r = SZ(ave)-1 ; 
    int ans1 = ans ; 
    while (l <= r )
    {
        m = (l+r)>>1; 
        if (ave[m] <= high )
        {
            ans1 = m; 
            l = m+1;
        }else 
            r = m-1; 
    }
    return ans1 - ans + 1 ; 
}
ll solve (int l , int r )
{
    int av = sum (l , r); 
    if (r - l + 1 >= 2 )
    {
        int m = (l+r)>>1; 
        ll cur = 0 ;
        if (av)
        {
            cur =1LL* b * av * (r-l+1) ;
        }else 
            return a ; 
        return min ( cur , solve (l , m )+ 
        solve (m+1 ,r));
        
    }
    if (av)
        return 1LL*b*av*(r-l+1); 
    return a ; 
    
}
int main ()
{
    scanf ("%d%d%d%d" , &n ,&k , &a ,&b ); 
    for (int i =0 ; i < k ;i++)
    {
        int t ; 
        scanf ("%d" ,&t ); 
        pos [t]++; 
        ave.pb(t); 
    }
    sort(all(ave)); 
    printf ("%lld\n" , solve (1 , (1 << n))); 
    
    return 0;
}