#include <bits/stdc++.h>
#define y0    lol
#define y1    lool
#define yn    loool
#define prev  looool
#define next  loooool
#define read  looooool
#define tm    loooooool
#define fi first
#define se second
#define pb push_back
#define sz(x) (int)(x).size()
#define pcnt __builtin_popcountll
#define rep(i,a,b) for(int i = (a); i <= (b); i++)
#define rrep(i,a,b) for(int i = (b); i >= (a); i--)
#ifdef LOCAL
#define rall(x,a) for(x : a)
#define LL "%lld"
#else
#define rall(x,a) for(auto x : a)
#define LL "%I64d"
#endif
#define rng(a) a.begin(), a.end()
#define PI 3.14159265358979323846
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
using namespace std;

const int N = 333333;
int col[N], mini[N], maxi[N];
int n;

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> n;
    fill(mini, mini + n + 1, 1e6);
    fill(maxi, maxi + n + 1, -1e6);
    rep(i, 1, n) {
        cin >> col[i];
        mini[col[i]] = min(mini[col[i]], i);
        maxi[col[i]] = max(maxi[col[i]], i);
    }
    multiset<int> minis, maxis;
    rep(c, 1, n) {
        if(mini[c] == 1e6) continue;
        minis.insert(mini[c]);
        maxis.insert(maxi[c]);
    }
    int ans = 0;
    rep(c, 1, n) {
        if(mini[c] == 1e6) continue;
        int l1 = mini[c], r1 = maxi[c];
        minis.erase(minis.find(l1));
        maxis.erase(maxis.find(r1));
        int l2 = *(minis.begin());
        int r2 = *(maxis.rbegin());
        ans = max(ans, abs(l2 - r1));
        ans = max(ans, abs(l1 - r2));
        minis.insert(l1);
        maxis.insert(r1);
    }
    cout << ans << endl;
    return 0;
}
