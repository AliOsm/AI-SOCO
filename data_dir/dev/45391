#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXN = 2e5+5;

int N;
LL sum;
int in[MAXN];
LL sub_sum[MAXN];
LL sum_value[MAXN];

vector<int> adj[MAXN];
LL ans;

LL dfs(int at, int par) {
    sub_sum[at] = in[at];
    for (int v : adj[at]) {
        if (v != par) {
            sum_value[at] += dfs(v, at);
            sub_sum[at] += sub_sum[v];
        }
    }
    sum_value[at] += sub_sum[at] - in[at];
    return sum_value[at];
}

void dfs2(int at, int par, LL cur_value) {
    maxa(ans, cur_value);
    for (int v : adj[at]) {
        if (v != par) {
            dfs2(v, at, cur_value - sub_sum[v] + (sum - sub_sum[v]));
        }
    }
}

int main() {
    scanf("%d", &N);
    REP(i, N) {
        scanf("%d", &in[i]);
        sum += in[i];
    }
    REP(i, N - 1) {
        int u, v;
        scanf("%d %d", &u, &v);
        u--, v--;
        adj[u].PB(v);
        adj[v].PB(u);
    }
    LL cur = dfs(0, -1);
    ans = cur;
    dfs2(0, -1, cur);
    cout << ans << endl;
    return 0;
}
