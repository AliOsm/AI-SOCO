// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 100000;

int aa[N], dd[N + 1], n;

void update(int l, int r, int a) {
	if (l < r)
		dd[l] += a, dd[r] -= a;
	else {
		dd[l] += a, dd[n] -= a;
		dd[0] += a, dd[r] -= a;
	}
}

int main() {
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> aa[i];
	int s, f; cin >> s >> f, s--, f--;
	for (int i = 0; i < n; i++) {
		int l = (s - i + n) % n, r = (f - i + n) % n;
		update(l, r, aa[i]);
	}
	int i_ = 0;
	for (int i = 1; i < n; i++) {
		dd[i] += dd[i - 1];
		if (dd[i_] < dd[i])
			i_ = i;
	}
	cout << i_ + 1 << '\n';
	return 0;
}
