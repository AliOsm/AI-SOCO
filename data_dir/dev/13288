#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <numeric>
#include <stack>
#include <deque>
#include <memory.h>
#include <string>
#include <unordered_map>

#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<ll>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%I64d", &(a))
#pragma comment (linker, "/STACK:5000000000")
typedef long long ll;
const ll mod = 1000000007;
int Inf = (int)2e9;
ll LINF = (ll)1e18 + 1e17;

using namespace std;
string for_ans = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";

void solve()
{
	int r, c, k;
	cin >> r >> c >> k;
	vector<string> a(r), ans(r);
	int cnt = 0;
	fori(i, r)
	{
		cin >> a[i];
		fori(j, c)
		{
			if (a[i][j] == 'R')
				cnt++;
		}
	}
	vector<int> need(k);
	int ost = cnt % k;
	fori(i, ost)
	{
		need[i] = cnt / k + 1;
	}
	for (int i = ost; i < k; i++)
	{
		need[i] = cnt / k;
	}

	int cur = 0;
	int c_cur = 0;
	for (int i = 0; i < r; i++)
	{
		string s = "";
		if (i & 1)
		{
			for (int j = c - 1; j >= 0; j--)
			{
				s.push_back(for_ans[cur]);
				if (a[i][j] == 'R')
				{
					c_cur++;
					if (c_cur == need[cur])
					{
						cur++;
						c_cur = 0;
					}
					if (cur == k)
						cur--;
				}
			}
			reverse(all(s));
		}
		else
		{
			fori(j, c)
			{
				s.push_back(for_ans[cur]);
				if (a[i][j] == 'R')
				{
					c_cur++;
					if (c_cur == need[cur])
					{
						cur++;
						c_cur = 0;
					}
					if (cur == k)
						cur--;
				}
			}
		}
		ans[i] = s;
	}
	fori(I, r)
	{
		cout << ans[I] << endl;
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	int t;
	cin >> t;
	while (t--)
	{
		solve();
	}


	return 0;
}