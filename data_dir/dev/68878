#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <fstream>
#include <list>
#include <set>
#include <climits>
#include <map>
#include <queue>
#include <stack>
#include <complex>
#include <cmath>
#include <sstream>
#include <deque>
#include <utility>
#include <bitset>
#include <numeric>

using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define REV(i,a,b) for(int i=(a);i>=(b);i--)
#define mp make_pair
#define pb push_back
#define oo (1 << 30)
#define sz(v) (int)v.size()
#define all(c) (c).begin(),(c).end()
#define rall(c) (c).rbegin(),(c).rend()
#define mem(s,v) memset(s,v,sizeof(s))
#define MAX 1005
#define iter(it,s) for(__typeof(s.begin())it=s.begin();it!=s.end();it++)

typedef long long ll;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<string> vs;
typedef pair<int, int> pi;
typedef vector<pi> vpi;

int dx[] = { 0, 0, 1, -1, 1, 1, -1, -1, 0 };
int dy[] = { 1, -1, 0, 0, -1, 1, -1, 1, 0 };

ll cum[100005];
vi v;
int k;

bool gd(int cur, int idx) {
	ll r = (cur - idx) * (ll)v[cur];
	return r - (cum[cur] - cum[idx]) <= k;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("test.in", "rt", stdin);
#endif
	ios::sync_with_stdio(false);
	int n;
	while (cin >> n >> k && n) {
		v.clear();
		v.resize(n);
		FOR (i , 0 , n)
			cin >> v[i];
		sort(all(v));
		FOR (i , 0 , n)
			cum[i + 1] = cum[i] + v[i];
		int res = 0, idx = -1;
		FOR (i , 0 , n) {
			int st = 0, end = i, mid, c = -1;
			while (st <= end) {
				mid = st + (end - st) / 2;
				if (gd(i, mid))
					c = i - mid + 1, end = mid - 1;
				else
					st = mid + 1;
			}
			if (c > res)
				res = c, idx = i;
		}
		cout << res << " " << v[idx] << endl;
	}
	return 0;
}
