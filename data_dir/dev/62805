#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<string>
#include<set>
#include<map>
#include<cmath>
#include<memory.h>
using namespace std;
typedef long long ll;

const int N = 1e6+6;

int t[2][N],d;

void ff(int*t,int i){
    i+=d;
    t[i] = 1;
    for(i>>=1;i;i>>=1) t[i]=t[i*2]+t[i*2+1];
}

int inf;
int getk(int*t,int k){
    if(t[1]<k) return inf;
    int i = 1;
    for(;;){
        if(i*2>=d*2) break;
        if(t[i*2]>=k) i*=2;
        else{
            k-=t[i*2];
            i=i*2+1;
        }
    }
    return i-d;
}
int sum(int *t, int i, int j){
    int s=0;
    for(i+=d,j+=d; i<=j; ++i>>=1, --j>>=1){
        if(i&1) s+=t[i];
        if(~j&1) s+=t[j];
    }
    return s;
}


int main(){
   // freopen("input.txt","r",stdin);// freopen("output.txt","w",stdout);
    
    int n, m;
    
    scanf("%d",&n);
    for(d=2;d<n;d<<=1);
    inf = n;
    for(int i=0;i<n;++i){
        int x;
        scanf("%d",&x);
        --x;
        ff(t[x],i);
    }
    
    
    vector<pair<int,int> > v;
    ll ans = 0;
    for(int T=1;T<=n;++T){
        int c0 = 0, c1 = 0;
        int p0 = 0, p1 = 0;
        int ls = -1;
        int i = 0;
        bool ok = true;
        for(;;){
            int i0 = getk(t[0], p0+T);
            int i1 = getk(t[1], p1+T);
            if(i0==n && i1==n){
                ok = false;
                break;
            }
            if(i0<i1){
                ++c0;
                ls = 0;
                p0+=T;
                p1+=sum(t[1], i, i0);
                i = i0+1;
            }else{
                ++c1;
                ls = 1;
                p1+=T;
                p0+=sum(t[0], i, i1);
                i = i1+1;
            }
            if(i==n) break;
        }
        if(!ok) continue;
        if(c0==c1) continue;
        if(c0>c1 && ls==1) continue;
        if(c0<c1 && ls==0) continue;
        v.push_back({max(c1,c0),T});
    }
    
    printf("%d\n",v.size());
    sort(v.begin(),v.end());
    for(int i=0;i<v.size();++i) printf("%d %d\n",v[i].first,v[i].second);
    
    
    return 0;
}

