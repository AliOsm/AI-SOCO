//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC opatimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

using Thr = array<int,3>;

int main() {
//    freopen("in.txt","r", stdin);
//    cout << fixed << setprecision(15);
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);

    Thr k;
    for (int& x : k)
        cin >> x;

    int n = k[0] + k[1] + k[2];

    vector<int> a(n);
    for (int j = 0; j < 3; ++j) {
        for (int i = 0; i < k[j]; ++i) {
            int x;
            cin >> x;
            a[x-1]=j;
        }
    }

    int const inf = 100000000;
    vector<Thr> dp(n+1, Thr{inf,inf,inf});
    dp[0][0] = 0;
    for (int i = 0; i < n; ++i) {
        for (int p = 0; p < 3; ++p)
        for (int ne = p; ne < 3; ++ne) {
            dp[i+1][ne] = min(dp[i+1][ne], dp[i][p] + (a[i] != ne));
        }
    }

    cout << *min_element(dp.back().begin(), dp.back().end());

}
