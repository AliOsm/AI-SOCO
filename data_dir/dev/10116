#include <bits/stdc++.h>

using namespace std;

int n, q, x[500005], ans[500005];
vector<pair<int, pair<int, int>>> v[500005];
vector<int> vl[500005], vr[500005];
int ta, tb, tc, td, te;

void addd(vector<int>& a, int b) {
	for (int i : a)
		if ((i ^ b) < b)
			b ^= i;
	if (b) {
		vector<int>::iterator it = a.begin();
		while (it != a.end() && b < *it)
			it++;
		a.insert(it, b);
	}
}

vector<int> add(vector<int> a, int b) {
	addd(a, b);
	return a;
}

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", x + i);
	scanf("%d", &q);
	for (int i = 0; i < q; i++) {
		scanf("%d%d", &ta, &tb);
		ta--;
		tc = INT_MAX;
		td = 0;
		while (1) {
			te = tc ^ ((1 << (td + 1)) - 1);
			if ((ta & te) == (tb & te))
				break;
			td++;
		}
		tc = (ta & te) | (1 << td);
		// printf("tc = %d\n", tc);
		v[tc].emplace_back(i, make_pair(ta, tb));
	}
	for (int i = 0; i <= n; i++)
		if (!v[i].empty()) {
			ta = INT_MAX;
			tb = INT_MIN;
			for (auto& p : v[i]) {
				ta = min(ta, p.second.first);
				tb = max(tb, p.second.second);
			}
			vl[i].clear();
			vr[i].clear();
			for (int j = i - 1; j >= ta; j--)
				vl[j] = add(vl[j + 1], x[j]);
			for (int j = i + 1; j <= tb; j++)
				vr[j] = add(vr[j - 1], x[j - 1]);
			for (auto& p : v[i]) {
				ta = 0;
				tb = 0;
				tc = 0;
				auto va = vl[p.second.first];
				auto& vb = vr[p.second.second];
				// printf("A %d: ", p.second.first); for (int j : va) printf("%d ", j); puts("");
				// printf("B %d: ", p.second.second); for (int j : vb) printf("%d ", j); puts("");
				for (int j : vb)
					addd(va, j);
				for (int j : va)
					if ((j ^ tc) > tc)
						tc ^= j;
				ans[p.first] = tc;
			}
		}
	for (int i = 0; i < q; i++)
		printf("%d\n", ans[i]);
	return 0;
}
