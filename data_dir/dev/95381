#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <list>
#include <cassert>

using namespace std;


#ifndef M_PI
    const double M_PI = acos(-1.0);
#endif // M_PI

#define y1 roman_kaban
#define rank oryshych_konb
#define ull unsigned long long
const int mod = int(1e9) + 7;
//const long long infLL = 1e15;
//const int MX2 = 10100500; //  e7
const int MX = 200500; //       e6

vector<int> e[MX];
bool visited[MX];

int main()
{

    //freopen("/Users/ozzy/Downloads/sets/rocks02.in","r", stdin);
    ios_base::sync_with_stdio(false);
    int n, m;
    cin >> n >> m;
    for(int i = 0; i < m; i++){
        int u, v;
        cin >> u >> v;
        e[u].push_back(v);
        e[v].push_back(u);
    }

    for(int i = 1; i <= n; i++){
        if(visited[i]) continue;
        vector<int> sp;
        int cnt = 0;
        sp.push_back(i);
        visited[i] = true;
        for(int i = 0; i < sp.size(); i++){
            int u = sp[i];
            for(int j = 0; j < e[u].size(); j++){
                int v = e[u][j];
                if(!visited[v]){
                    sp.push_back(v);
                    //cerr << v << endl;
                    visited[v] = true;
                }
            }
            cnt += e[u].size();
        }
        //cerr << sp.size() << endl;
        long long s = sp.size();
        s *= sp.size() - 1;
        //cerr << s << ' ' << cnt << endl;
        if(s != cnt) {cout << "NO\n"; return 0;}

    }
    cout << "YES\n";
    return 0;
}




