#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
using namespace std;
vector<vector<int> > pos;
vector<int> cur, graph[1010];
vector<int> check;
int visited[1010], mk[10][10];
int n, ct = 0;;
void dfs(int s){
	visited[s] = 1;
	for(int i = 0; i < graph[s].size(); i++){
		int x = graph[s][i];
		int a = min(check[s], check[x]);
		int b = max(check[s], check[x]);
		if(!mk[a][b]){
			mk[a][b] = 1;
			ct++;
		}
		if(!visited[x])
			dfs(x);
	}
}
void genperm(int a){
	if(a == n){
		pos.pb(cur);
		return;
	}
	for(int i = 1; i <= 6; i++){
		cur.pb(i);
		genperm(a + 1);
		cur.pop_back();
	}
	
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int  m;
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		int a, b;
		cin >> a >> b;
		graph[a - 1].pb(b - 1);
	}
	genperm(0);
	int maxi = 0;
	for(int i = 0; i < pos.size(); i++){
		check = pos[i];
		memset(mk, 0, sizeof(mk));
		memset(visited, 0, sizeof(visited));
		ct = 0;
		for(int j = 0; j < n; j++){
			if(!visited[j])
				dfs(j);
		}
		maxi = max(maxi, ct);
	}
	cout << maxi << '\n';

}