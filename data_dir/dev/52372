#include <bits/stdc++.h>
using namespace std;

struct data
{
    int u,v,w;
};

typedef pair<int,int> ii;
data a[1000005];
int n,m,start,Com=0,Count=0,Num[1000005],Low[1000005],Pre[1000005];
int64_t C[1000005],F[1000005];
bool Free[1000005];
vector<int> g[1000005];
vector<ii> g1[1000005];
stack<int> S;
map<ii,bool> Edge;

void ReadInt(int &number)
{
    bool negative=false;
    register int c;
    number=0;
    c=getchar();
    if(c == '-')
    {
        negative=true;
        c=getchar();
    }
    for (;(c>47&&c<58);c=getchar())
        number=number*10+c-48;
    if (negative) number*=-1;
}

void DFS(int u)
{
    S.push(u);
    Num[u]=++Count;
    Low[u]=Count;
    for(int i=0;i<g[u].size();i++)
    {
        int v=g[u][i];
        if(Num[v]==0)
        {
            DFS(v);
            Low[u]=min(Low[u],Low[v]);
        }
        else
            Low[u]=min(Low[u],Num[v]);
    }
    if(Num[u]==Low[u])
    {
        Com++;
        int v;
        do
        {
            v=S.top();
            S.pop();
            Num[v]=1e9;
            Low[v]=1e9;
            Pre[v]=Com;
        }while(u!=v);
    }
}

int64_t Sum(int64_t w)
{
    double denta=8*w+1;
    double x=(-1+sqrt(denta))/2.0;
    int64_t rs=x;
    return w*(rs+1)-rs*(rs+1)*(rs+2)/6;
}

int64_t f(int u)
{
    if(Free[u]==true)
        return F[u];
    Free[u]=true;
    for(int i=0;i<g1[u].size();i++)
        F[u]=max(F[u],int64_t(f(g1[u][i].first)+g1[u][i].second));
    F[u]+=C[u];
    return F[u];
}

int main()
{
    ios_base::sync_with_stdio(false);
    //freopen("894E.INP","r",stdin);
    ReadInt(n);
    ReadInt(m);
    for(int i=1;i<=m;i++)
    {
        ReadInt(a[i].u);
        ReadInt(a[i].v);
        ReadInt(a[i].w);
        g[a[i].u].push_back(a[i].v);
    }
    ReadInt(start);
    for(int i=1;i<=n;i++)
        if(Num[i]==0)
            DFS(i);
    for(int i=1;i<=m;i++)
        if(Pre[a[i].u]==Pre[a[i].v])
            C[Pre[a[i].u]]+=Sum(a[i].w);
        else
            g1[Pre[a[i].u]].push_back(ii(Pre[a[i].v],a[i].w));
    cout<<f(Pre[start]);
}
