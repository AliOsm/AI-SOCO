// In the name of god
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <assert.h>
#include <ctime>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <bitset>
#define sqr(a) ((a)*(a))
#define all(a) (a).begin(), (a).end()
using namespace std;
 
template <typename T>
T next_int() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if(ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return p * x;
}
 
string next_token() {
    char ch;
    string ans = "";
    do { ch = getchar(); } while(ch <= ' ');
    while(ch > ' ') {
        ans += ch;
        ch = getchar();
    }
    return ans;
}
 
const long long INF = (long long)1e18;
const int INFINT = (int)1e9 + 227 + 1;
const int MAXN = (int)1e6 + 227 + 1;    
const int MOD = (int)1e9 + 7;
const long double EPS = 1e-9;

long long bin_pow(long long a, long long b) {
    if(!b) return 1;
    long long ans = bin_pow(a, b / 2);
    ans = ans * ans;
    if(b % 2) ans = ans * a;
    return ans;
}

int main() {
    // freopen(".in", "r", stdin);

    int n = 4;
    vector<bool> l(n), s(n), r(n), p(n);

    for(int i = 0; i < n; i++) {
        l[i] = next_int<int>();
        s[i] = next_int<int>();
        r[i] = next_int<int>();
        p[i] = next_int<int>();
    }

    for(int i = 0; i < n; i++) {
        if(l[i] && p[(i - 1 + 4) % 4]) {
            puts("YES");
            return 0;
        }
        if(s[i] && p[(i + 2) % 4]) {
            puts("YES");
            return 0;
        }
        if(r[i] && p[(i + 1) % 4]) {
            puts("YES");
            return 0;
        }
        if((l[i] || r[i] || s[i]) && p[i]) {
            puts("YES");
            return 0;
        }
    }

    puts("NO");
}
