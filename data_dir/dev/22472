#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<pii, int> para;
const int inf = 1e9 + 7;
const int maxN = 1e6 + 5;

int n, m, size;
pii tree[maxN];


void build() {
	FORD(i, size - 1, 1) {
		pii left = tree[2 * i];
		pii right = tree[2 * i + 1];
		if (left.nd == 0)
			tree[i].st = (left.st | right.st);
		else
			tree[i].st = (left.st ^ right.st);
		tree[i].nd = (1 - left.nd);
	}
}

void update(int pos, int val) {
	pos += size;
	tree[pos].st = val;
	pos /= 2;
	while (pos > 0) {
		if (tree[2 * pos].nd == 0) {
			tree[pos].st = (tree[2 * pos].st | tree[2 * pos + 1].st);
		} else {
			tree[pos].st = (tree[2 * pos].st ^ tree[2 * pos + 1].st);
		}
		pos /= 2;
	}
}
int main() {
	ios_base::sync_with_stdio(0);
	cin>>n>>m;
	size = 1<<n;
	REP(i, size) {
		cin>>tree[i + size].st;
		tree[i + size].nd = 0;
	}
	build();
	int pos, val;
	while (m--) {
		cin>>pos>>val;
		update(pos - 1, val);
		cout<<tree[1].st<<endl;
	}
	return 0;
}
