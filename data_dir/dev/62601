#include<bits/stdc++.h>
using namespace std; 
#define ll long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
#define ld long double
int const M=2e5+10,M2=1e5+10,mod=1e9+7,inf=1e9+10;
bool mark[M];
queue<int>q;
int ans[M],b[M],a[M],deg[M],cnt,m,n,k;
vector<int>adj[M];
void relax()
{
	while(q.size())
	{
		cnt--;
		int v=q.front();
		q.pop();
		for(int j=0;j<adj[v].size();j++)
		{
			int u=adj[v][j];
			if(!mark[u])deg[u]--;
			if(!mark[u] && deg[u]<k)q.push(u),mark[u]=1;
		}
	}
}
int32_t main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cin>>n>>m>>k;
	cnt=n;
	for(int i=1;i<=m;i++)cin>>a[i]>>b[i],deg[a[i]]++,deg[b[i]]++,adj[a[i]].pb(b[i]),adj[b[i]].pb(a[i]);
	for(int i=1;i<=n;i++)
	{
		if(deg[i]<k)q.push(i),mark[i]=1;
	}
	relax();
	ans[m]=cnt;
	for(int i=m;i>=2;i--)
	{
		if(!mark[a[i]] && !mark[b[i]])
		{
			deg[a[i]]--;
			deg[b[i]]--;
			if(deg[a[i]]<k)q.push(a[i]),mark[a[i]]=1;
			if(deg[b[i]]<k)q.push(b[i]),mark[b[i]]=1;
			adj[a[i]].pop_back();
			adj[b[i]].pop_back();
			relax();
		}
		else adj[a[i]].pop_back(),adj[b[i]].pop_back();
		ans[i-1]=cnt;
	}
	for(int i=1;i<=m;i++)cout<<ans[i]<<"\n";
}	
