// If you are going to try, go all the way otherwise don't even start!
#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef long long int ll;
typedef vector< pair<int, int> > vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long int> vll;
typedef pair<int, int> pii;

const ll INF = 1e18;
const int inf = 1e9;
const int MOD = 1e9 + 7;
const int nax = 1000000 + 10;

int n, arr[nax];
string s[nax];

int main()
{
    ios::sync_with_stdio(0);
    int m;
    vi idx;
    cin >> n >> m;
    for(int i = 1; i <= n; i++) cin >> s[i];
    for(int i = 1; i <= m; i++)
    {
        int num; cin >> num;
        idx.pb(num);
    }
    sort(idx.begin(), idx.end());
    int f = 0;
    int len = (int) s[idx[0]].length();
    for(auto x: idx)
    {
        int lenx = (int) s[x].length();
        if(lenx != len)
            f = 1;
    }
    string ans = "";
    for(int i = 0; i < len; i++)
    {
        set<char> set1;
        for(auto x: idx)
        {
            set1.insert(s[x][i]);
        }
        if((int) set1.size() == 1)
        {
            ans += *(set1.begin());
        }
        else
        {
            ans += '?';
        }
    }
    //cout << ans << endl;
    for(int i = 1; i <= n; i++)
    {
        if(binary_search(idx.begin(), idx.end(), i) == true) continue;

        int lenx = s[i].length();
        if(lenx != len) continue;
        // now if matching make f = 1;

        int f1 = 0;
        for(int j = 0; j < len; j++)
        {
            if(ans[j] == '?') continue;
            if(ans[j] != s[i][j]) f1 = 1;
        }
        if(f1 == 0) f = 1;
    }
    if(f == 1) cout << "No";
    else
        {
            cout << "Yes" << endl;
            cout << ans;
        }
    return 0;
}
