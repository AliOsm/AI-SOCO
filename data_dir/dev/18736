#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;

const int MAXN = 2000005;
int N;
ll X, Y;
int occ[MAXN];
ll sum[MAXN];
bool com[MAXN];

int main()
{
    ios::sync_with_stdio(0);

    cin >> N >> X >> Y;
    for (int i = 0, a; i < N; i++)
    {
        cin >> a;
        occ[a]++;
        sum[a] += a;
    }
    for (int i = 2; i < MAXN; i++)
    {
        occ[i] += occ[i - 1];
        sum[i] += sum[i - 1];
    }

    for (int i = 2; i < MAXN; i++)
        if (!com[i])
            for (int j = 2*i; j < MAXN; j += i)
                com[j] = true;

    int d = (X + Y - 1)/Y;
    ll best = 1LL<<60;
    for (int i = 2; i < MAXN; i++)
        if (!com[i])
        {
            ll cur = 0;
            for (int j = i; j < MAXN; j += i)
            {
                int idx = max(j - i, j - d);
                int cnt = occ[j] - occ[idx];
                cur += ((ll)cnt*j - (sum[j] - sum[idx]))*Y;
                cur += (occ[idx] - occ[j - i])*X;
            }
            best = min(best, cur);
        }

    cout << best << "\n";

    return 0;
}
