#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
template <typename T> inline T sqr(T t) {return t*t;}
#define pb push_back
#define mp make_pair
#define endl "\n"

inline void files(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    #ifdef _WIN32
        return;
    #endif // _WIN32
    //freopen("lca.in", "r", stdin);//freopen("output.out", "w", stdout);
}

map<char, int> mp1;

string ss, s;

int n;

int main(){
    //files();
    cin >> n;
    cin >> ss;
    for (int i = 0; i < ss.size(); i++){
        mp1[ss[i]]++;
    }
    for (map<char, int>::iterator it = mp1.begin(); it != mp1.end(); it++)
        s += it->first;
    if (s.size()==3)
        cout << s; else
    if (s.size()==2){
        if (mp1[s[0]]>=2&&mp1[s[1]]>=2)
            cout << "BGR"; else
        if (mp1[s[0]]>=2&&mp1[s[1]]==1){
            char c1, c2;
            c1 = s[1];
            if (mp1['B']==0)
                c2 = 'B';
            if (mp1['G']==0)
                c2 = 'G';
            if (mp1['R']==0)
                c2 = 'R';
            if (c1 > c2)
                swap(c1, c2);
            cout << c1 << c2;
        } else
        if (mp1[s[1]]>=2&&mp1[s[0]]==1){
            char c1, c2;
            c1 = s[0];
            if (mp1['B']==0)
                c2 = 'B';
            if (mp1['G']==0)
                c2 = 'G';
            if (mp1['R']==0)
                c2 = 'R';
            if (c1 > c2)
                swap(c1, c2);
            cout << c1 << c2;
        } else{
            char c2;
            if (mp1['B']==0)
                c2 = 'B';
            if (mp1['G']==0)
                c2 = 'G';
            if (mp1['R']==0)
                c2 = 'R';
            cout << c2;
        }
    } else
    cout << s;
}
