#include <bits/stdc++.h>

#ifdef NJUDGE
#include "igba.h"
#endif
using namespace std;

const int MAXN = 100100, MAXA = 100100;
int n, a[MAXN], lissz, mx[MAXN][2];
stack<int> s;
map<pair<int, int>, int> cnt;

struct Bit
{
	int v[MAXA], m = 1;
	Bit()
	{
		memset(v, 0, sizeof v);
	}
	void set(int idx, int val)
	{
		idx++;
		for(; 0 < idx && idx < MAXN; idx += (m * (idx & -idx)))
			v[idx] = max(v[idx], val);
	}
	int get(int idx)
	{
		idx++;
		int ans = 0;
		for(; 0 < idx && idx < MAXN; idx -= (m * (idx & -idx)))
			ans = max(ans, v[idx]);
		return ans;
	}
	void clear()
	{
		memset(v, 0, sizeof v);
	}
} b;

int main()
{
	scanf("%d", &n);
	for(int i = 1, aux; i <= n; ++i)
	{
		scanf("%d", &a[i]);
		aux = b.get(a[i] - 1), b.set(a[i], aux + 1), mx[i][0] = aux + 1;
	}
	lissz = b.get(MAXA - 2), b.m = -1, b.clear();
	for(int i = n, aux; i >= 1; --i)
	{
		aux = b.get(a[i] + 1), b.set(a[i], aux + 1), mx[i][1] = aux + 1;
		cnt[{mx[i][0], mx[i][1]}]++;
	}
	for(int i = 1; i <= n; ++i)
	{
		if(mx[i][0] + mx[i][1] - 1 != lissz)
		{
			printf("1");
			continue;
		}
		printf(cnt[{mx[i][0], mx[i][1]}] == 1 ? "3" : "2");
	}

}