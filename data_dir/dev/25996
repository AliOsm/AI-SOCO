#include <bits/stdc++.h>
using namespace std;

int done[300005];

struct node {

    int sum;
    struct node *left;
    struct node *right;

} *trie;

void insertTrie(int num, int lvl, struct node *ptr)
{
    if(lvl < 0)
        return;

    int curr = (num&(1<<lvl));

    if(curr)
    {
        if(!(ptr->right))
        {
            struct node *tmp = (struct node *)malloc(sizeof(struct node));
            tmp->sum = 0, tmp->left = tmp->right = NULL;
            ptr->right = tmp;
        }

        ptr->right->sum++;
        insertTrie(num, lvl-1, ptr->right);
    }
    else
    {
        if(!(ptr->left))
        {
            struct node *tmp = (struct node *)malloc(sizeof(struct node));
            tmp->sum = 0, tmp->left = tmp->right = NULL;
            ptr->left = tmp;
        }

        ptr->left->sum++;
        insertTrie(num, lvl-1, ptr->left);
    }
}

int solve(int x, int lvl, struct node *ptr)
{
    if(lvl < 0)
        return 0;

    if(ptr == NULL)
        return solve(x, lvl-1, ptr);

    if((x&(1<<lvl))==0)
    {
        if(!(ptr->left))
            return solve(x, lvl-1, ptr->left);

        int tmpx = (ptr->left->sum);

        if(tmpx == (1<<lvl))
            return (1<<lvl) + solve(x, lvl-1, ptr->right);
        else
            return solve(x, lvl-1, ptr->left);
    }
    else
    {
        if(!(ptr->right))
            return solve(x, lvl-1, ptr->right);

        int tmpx = (ptr->right->sum);

        if(tmpx == (1<<lvl))
            return (1<<lvl) + solve(x, lvl-1, ptr->left);
        else
            return solve(x, lvl-1, ptr->right);
    }
}

int main()
{
    int N, Q;
    scanf("%d %d", &N, &Q);

    trie = (struct node *)malloc(sizeof(struct node));
    trie->sum = 0, trie->left = trie->right = NULL;

    for(int i=1; i<=N; i++)
    {
        int x;
        scanf("%d", &x);

        if(done[x])
            continue;

        done[x] = 1;
        insertTrie(x, 21, trie);
    }

    int z = 0;

    while(Q--)
    {
        int x;
        scanf("%d", &x);

        z ^= x;
        printf("%d\n", solve(z, 21, trie));
    }

    return 0;
}
