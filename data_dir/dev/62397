#include<bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef long double ld;

const int mod = 1e9 + 7;
int dp[64];

int solve2(int number)
{
    int &ret = dp[number];
    if(~ret)
      return ret;
    ret = 0;
    for(int i = 0; i < 64; i++)
    {
      for(int j = 0; j < 64; j++)
      {
        if((i & j) == number)
          ret++;
      }
    }
    return ret;
}

string s;

int get_idx(char c)
{
  if(c >= '0' && c <= '9')
    return c - '0';
  else if(c >= 'A' && c <= 'Z')
    return c - 'A' + 10;
  else if(c >= 'a' && c <= 'z')
    return c - 'a' + 36;
  else if(c == '-')
    return 62;
  else
    return 63;
}
int solve(int idx)
{
  if(idx == s.size())
    return 1;
  return (1ll * solve2(get_idx(s[idx])) * solve(idx + 1)) % mod;
}
int main()
{
    // ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    #ifdef ONLINE_JUDGE
    // freopen("", "r", stdin);
    // freopen("", "w", stdout);
    #endif
    cin >> s;
    memset(dp, -1, sizeof dp);
    cout << solve(0);
    return 0;
}
