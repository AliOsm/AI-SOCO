#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#define ni(n) scanf("%d", &(n))
#define pri(n) printf("%d\n", (n))
#define pii pair<int, int>
#define vi vector<int>
#define pb push_back
#define fi first
#define se second
using namespace std;
const int MAXN = 2e5 + 1;
map<int,pii> dp[MAXN];
int a[MAXN];
bool isPr[MAXN];
vi adj[MAXN];
int ans = 1;

void f(int j, int u, int v) {
    if (dp[u][j].fi != 1) {
        if (dp[v][j].fi + 1 > dp[u][j].fi)
            dp[u][j].se = dp[u][j].fi;
        else if (dp[v][j].fi + 1 > dp[u][j].se)
            dp[u][j].se = dp[v][j].fi + 1;
    }
    dp[u][j].fi = max(dp[u][j].fi, dp[v][j].fi + 1);
    //printf("%d %d %d %d %d\n", u, v, j, dp[u][j], dp2[u][j]);
    ans = max(ans, max(dp[u][j].fi + dp[u][j].se - 1, dp[u][j].fi));
}

void dfs(int u, int p) {
    for (int v: adj[u]) {
        if (v == p)
            continue;
        dfs(v, u);
        for (int i = 1; i * i <= a[u]; i++) {
            if (isPr[i] || a[v] % i != 0 || a[u] % i != 0)
                continue;
            if (i != 1)
                f(i, u, v);
            if (i * i != a[u] && a[u] != i)
                f(a[u] / i, u, v);
        }
    }
}

int main()
{
    for (int i = 2; i * i < MAXN; i++) {
        if (isPr[i])
            continue;
        for (int j = i * i; j < MAXN; j += i)
            isPr[j] = 1;
    }
    int n;
    ni(n);
    int fl = 0;
    for (int i = 0; i < n; i++) {
        ni(a[i]);
        fl = max(a[i], fl);
        for (int j = 1; j * j <= a[i]; j++) {
            if (isPr[j] || a[i] % j != 0)
                continue;
            /*if (j != 1)
                di[i].pb(j);
            if (j * j != a[i] && a[i] != 1)
                di[i].pb(a[i] / j);*/
            if (j != 1)
                dp[i][j] = {1, 0};
            if (a[i] != j)
                dp[i][a[i] / j] = {1, 0};
        }
    }
    for (int i = 1; i < n; i++) {
        int u, v;
        ni(u), ni(v);
        u--, v--;
        adj[u].pb(v);
        adj[v].pb(u);
    }
    if (fl == 1)
        return !pri(0);
    dfs(0, -1);
    pri(ans);
    return 0;
}
