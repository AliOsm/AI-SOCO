
// ~/RedLink/Developers/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>
#include <assert.h>
#include <complex>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

const int N = 200005, M = 505;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;
const double PI = acos(-1.0);

int n,a,b;
char s[N];
ll dp[N][3];

ll calc(int i,int h) {
    if(i==n)
        return 0;
    ll &r = dp[i][h];
    if(r!=-1)
        return r;
    if(s[i]=='1' || (i+1<n && s[i+1]=='1')) {
        if(h==2) r = 2ll * b + a + calc(i+1, 2);
        else r = 2ll * b + 2ll * a + calc(i+1, 2);
    } else {
        if(i==n-1) return (h==2 ? 2ll * a + b + calc(i+1, 1) : 1ll * a + b + calc(i+1, 1));
        if(h==2) r = min(2ll * b + a + calc(i+1, 2), 2ll * a  + b + calc(i+1, 1));
        else r = min(1ll * a + b + calc(i+1, 1), 2ll * a + 2ll * b + calc(i+1, 2));
    }
    return r;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    int tc;
    scanf("%d",&tc);
    while(tc--) {
        scanf("%d%d%d",&n,&a,&b);
        scanf("%s",s);
        memset(dp,-1,sizeof dp);
        ll ans = calc(0, 1) + b;
        printf("%lld\n", ans);
    }
    return 0;
}