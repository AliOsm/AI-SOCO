
#include <bits/stdc++.h>
using namespace std;

string grid[2005];
int n, m;
int vis[2005][2005];

bool okay(int x, int y) {
    if (x < 0 or x > n-2) return 0;
    if (y < 0 or y > m-2) return 0;
    int c = 0;
    c += (grid[x][y] == '*');
    c += (grid[x][y+1] == '*');
    c += (grid[x+1][y] == '*');
    c += (grid[x+1][y+1] == '*');
    return c == 1;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m;
    for(int i = 0; i < n; i++) {
        cin >> grid[i];
    }
    queue <pair<int,int>> que;
    for(int i = 0; i < n-1; i++) {
        for(int j = 0; j < m-1; j++) {
            if (okay(i, j)) {
                vis[i][j] = 1;
                que.push({i, j});
            }
        }
    }
    while(que.size()) {
        pair<int, int> P = que.front();
        que.pop();
        int x = P.first, y = P.second;
        grid[x][y] = '.';
        grid[x+1][y] = '.';
        grid[x][y+1] = '.';
        grid[x+1][y+1] = '.';
        for(int k = -2; k <= 2; k++) {
            for(int l = -2; l <= 2; l++) {
                if (okay(x-k, y-l)) {
                    if (vis[x-k][y-l] == 0) {
                        vis[x-k][y-l] = 1;
                        que.push({x-k, y-l});
                    }
                }
            }
        }
    }

    for(int i = 0; i < n; i++) {
        cout << grid[i] << "\n";
    }
}
