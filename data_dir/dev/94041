#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <iomanip>
#include <list>
#include <sstream>
#include <ctime>
#include <functional>
#include <fstream>
#include <map>
#include <stack>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <queue>
#include <tuple>
#include <fstream>
#include <numeric>
#include <regex>
#include <array>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <deque>
#include <complex>
#include <stack>


using namespace std;
typedef long long ll;
#define int ll

int const sze = 1 << 10, MOD = 1e9 + 9, x = 119;


signed main()
{
	ios::sync_with_stdio(false);
	
	int n;
	cin >> n;
	n++;

	vector<int> heights(n);
	for (int i = 0; i < n; ++i)
		cin >> heights[i];

	int label = 0;

	for (int i = 0; i < n; ++i)
		if (i && heights[i] > 1 && heights[i - 1] > 1)
			label = i;

	vector<int> cnt(n);
	cnt[0] = heights[0];

	for (int i = 1; i < n; ++i)
		cnt[i] = cnt[i - 1] + heights[i];

	if (!label)
		cout << "perfect\n";
	else
	{
		cout << "ambiguous\n";
		int previous = 0;

		for (int i = 0; i < n; i++)
		{
			if (!i)
				cout << "0 ";
			else
				for (int j = 0; j < heights[i]; ++j)
					cout << cnt[i - 1] << ' ';
		}

		cout << '\n';

		for (int i = 0; i < n; i++)
		{
			if (!i)
			{
				cout << "0 ";
				continue;
			}

			if (i == label)
			{
				for (int j = 0; j < heights[i]; ++j)
					if (j & 1)
						cout << cnt[i - 1] << ' ';
					else
						cout << cnt[i - 1] - 1 << ' ';
			}
			else
				for (int j = 0; j < heights[i]; ++j)
					cout << cnt[i - 1] << ' ';
		}

		cout << '\n';

	}

	return 0;
}