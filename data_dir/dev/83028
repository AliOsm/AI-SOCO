//In the name of God

#include <iostream>
#include <cstdlib>
#include <algorithm>
#include <deque>
#include <set>
#include <cmath>
#include <cstring>
using namespace std;
#define mp make_pair
#define lol long long
#define id(i) ((i)/sq)
const int MAXN=1e5+10,MAXS=320;
int sq,cnt[MAXS][MAXN];
deque <int> a[MAXS];

void shift(int l,int r)
{
  int id1=id(l),id2=id(r),ind1=l%sq,ind2=r%sq;
  int tmp=a[id2][ind2];
  a[id2].erase(a[id2].begin()+ind2);
  a[id1].insert(a[id1].begin()+ind1,tmp);
  cnt[id2][tmp]--;
  cnt[id1][tmp]++;
  for(int i=id1+1;i<=id2;i++)
    {
      tmp=a[i-1].back();
      a[i-1].pop_back();
      a[i].push_front(tmp);
      cnt[i-1][tmp]--;
      cnt[i][tmp]++;
    }
}

int calc(int l,int r,int k)
{
  int id1=id(l),id2=id(r),ind1=l%sq,ind2=r%sq;
  int ret=0;
  if(id1==id2)
    {
      for(int i=ind1;i<=ind2;i++)
	if(a[id1][i]==k)
	  ret++;
      return ret;
    }
  for(int i=ind1;i<a[id1].size();i++)
    if(a[id1][i]==k)
      ret++;
  for(int i=0;i<=ind2;i++)
    if(a[id2][i]==k)
      ret++;
  for(int i=id1+1;i<id2;i++)
    ret+=cnt[i][k];
  return ret;
}

int main()
{
  ios::sync_with_stdio(false);
  int n,q;
  cin>>n;
  sq=sqrt(n);
  for(int i=0;i<n;i++)
    {
      int x;
      cin>>x;
      a[id(i)].push_back(x);
      cnt[id(i)][x]++;
    }
  cin>>q;
  int ans=0;
  for(int i=0;i<q;i++)
    {
      int t,l,r;
      cin>>t>>l>>r;
      l=((l+ans-1)%n)+1;
      r=((r+ans-1)%n)+1;
      l--;
      r--;
      if(l>r)
	swap(l,r);
      if(t==1)
	shift(l,r);
      else
	{
	  int k;
	  cin>>k;
	  k=((k+ans-1)%n)+1;
	  ans=calc(l,r,k);
	  cout<<ans<<endl;
	}
    }
  return 0;
}
