#include <bits\stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vi> vvi;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<bool> vb;
typedef vector<string> vs;
const int MOD = 1e9 + 7;
const int di[] = { -1,0,1,0,1,-1,1,-1 };
const int dj[] = { 0,1,0,-1,1,-1,-1,1 };

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	ll b, q, l, m; cin >> b >> q >> l >> m;
	vll bad(m);
	for (int i = 0; i < m; i++)
		cin >> bad[i];
	sort(bad.begin(), bad.end());
	map<int, bool> vis;
	ll r = 0;
	bool inf = false;
	while (abs(b) <= l && binary_search(bad.begin(), bad.end(), b)) {
		b = b * q;
		if (vis[b]) {
			cout << 0 << endl;
			return 0;
		}
		vis[b] = true;
	}
	bool end = false;
	while (!inf && abs(b) <= l && !end) {
		r++;
		vis[b] = true;
		b = b * q;
		if (vis[b] && !binary_search(bad.begin(), bad.end(), b)) {
			inf = true;
			break;
		}
		while (abs(b) <= l && binary_search(bad.begin(), bad.end(), b)) {
			b = b * q;
			if (vis[b]) {
				inf = !binary_search(bad.begin(), bad.end(), b);
				end = true;
				break;
			}
			vis[b] = true;
		}
	}
	if (inf)
		cout << "inf" << endl;
	else
		cout << r << endl;
	//cin.ignore(), cin.get();
}
