/////////////////////////   _LeMur_
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 200005;
const int inf = 1000 * 1000 * 1000;
const int mod = 998244353;

int n;
int p[N];

set <int> q;
int cnt[N];

int main(){
    cin >> n;

    for(int i=1;i<=n;i++){
        q.insert(i);
    }

    for(int i=1;i<n;i++){
        scanf("%d",&p[i]);

        cnt[ p[i] ]++;
        q.erase(p[i]);
    }

    cout << p[1] << endl;
    vector < pair<int,int> > answ;

    for(int i=n-1;i>=1;i--){
        answ.push_back(make_pair(p[i] , *q.begin()));

        q.erase(q.begin());
        --cnt[ p[i] ];

        if(cnt[ p[i] ] == 0) q.insert(p[i]);
    }

    for(int i=(int)answ.size()-1;i>=0;i--){
        printf("%d %d\n",answ[i].first,answ[i].second);
    }
    return 0;
}
