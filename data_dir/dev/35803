#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int N = 1005;

int dp[N][N];

pair<pair<int,char> ,pair<int,int> >out[N][N];

int solveDp(string &s,string &t,int x,int y){
    if(x== s.size() && y== t.size()){
        return 0;
    }
    int &ret= dp[x][y];
    if(ret != -1) {
        return ret;
    }
    ret = 1e9;
    //Replcae
    if(s.size()!=x && t.size() != y){
        if(s[x] ==t[y]) {
            out[x][y] = make_pair(make_pair(0,0), make_pair(x+1,y+1));
            ret = min(ret, solveDp(s,t,x+1,y+1));
        } else {
            out[x][y] = make_pair(make_pair(1,t[y]), make_pair(x+1,y+1));
            ret = min(ret, 1 + solveDp(s,t,x+1,y+1));
        }
    }
    //Insert
    if(t.size()!= y){
        int tmp = 1 + solveDp(s,t,x,y+1);
        pair<pair<int,char> ,pair<int,int> > g = make_pair(make_pair(2,t[y]), make_pair(x,y+1));
        if(ret>tmp){
            ret = tmp;
            out[x][y] = g;
        }
    }
    //Delete
    if(s.size() != x){
        int tmp = 1 + solveDp(s,t,x+1,y);
        pair<pair<int,char> ,pair<int,int> > g = make_pair(make_pair(3,0), make_pair(x+1,y));
        if(ret>tmp){
            ret = tmp;
            out[x][y] = g;
        }
    }
    return ret;
}
void solve() {
    string s,t;
    cin>>s>>t;
    memset(dp,-1,sizeof(dp));
    printf("%d\n", solveDp(s,t,0,0));
    int x = 0,y = 0;
    int pos = 1;
    while(x<s.size() || y<t.size()){
        pair<pair<int,char> ,pair<int,int> > g = out[x][y];
        int op = g.first.first;
        char c = g.first.second;
        if(op==1){
            printf("REPLACE %d %c\n",pos,c);
        } else if(op==2){
            printf("INSERT %d %c\n",pos,c);
        } else if(op==3){
            printf("DELETE %d\n",pos);
            --pos;
        }
        ++pos;
        x = g.second.first;
        y = g.second.second;
    }
}
int main(){
    //freopen("input.txt","r",stdin);
    solve();
}