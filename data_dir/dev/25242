#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>
#include <cstdio>
#include <map>
#include <unordered_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <unordered_set>
#include <stack> 
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
#define sz(a) (int)a.size()
#define pb push_back
const int MAXN = 2 * 1000 * 100 + 10;
const double EPS = 1e-9;
typedef long long LL;
const LL MOD = 1000 * 1000 * 1000 + 7;

int gcd(int a, int b) {
	if (a == 0) return b;
	return gcd(b%a, a);
}

int main(int argc, char* argv[]) {

#ifdef _DEBUG
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
	//freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	//freopen("data.in", "r", stdin); freopen("data.out", "w", stdout);
#endif
	ios::sync_with_stdio(0);
	int n, k;
	cin >> n >> k;
	vector<int> a(n);
	forn(i, 0, n)cin >> a[i];
	sort(all(a));

	int gc = a[0];
	for (int i = 1; i < n; ++i) {
		if (a[i] == a[i - 1]) continue;
		if ((a[i] - a[i - 1]) % k != 0) {
			cout << -1;
			return 0;
		}
	}

	LL ans = 0;
	for (int i = 1; i < n; ++i) {
		ans += (LL)((a[i] - a[0]) / k);
	}

	cout << ans;



	return 0;
}