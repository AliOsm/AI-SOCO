#include <bits/stdc++.h>

#define pb push_back
#define all(x) (x).begin(), (x).end()

#ifdef KAZAR
  #define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
  #define eprintf(...) 0
#endif

using namespace std;

template<class T> inline void umax(T &a,T b){if(a < b) a = b;}
template<class T> inline void umin(T &a,T b){if(a > b) a = b;}
template<class T> inline T abs(T a){return a > 0 ? a : -a;}

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;

const int inf = 1e9 + 143;
const ll longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

const int N = 1e5 + 100;

ii es[N];
int cost[N], use[N], ord[N];
int cnt[N];

int main(){

#ifdef KAZAR
  freopen("f.input","r",stdin);
  freopen("f.output","w",stdout);
  freopen("error","w",stderr);
#endif

  int n = read();
  int m = read();
  for (int i = 0; i < m; i++) {
    cost[i] = read();
    use[i] = read();
    ord[i] = i;
  }

  sort(ord, ord + m, [&](int a,int b){
    if (cost[a] == cost[b]) {
      return use[a] > use[b];
    }
    return cost[a] < cost[b];
  });

  int ptr = 3;
  int cn = 1;
  for (int it = 0; it < m; it++) {
    int i = ord[it];
    if (use[i] == 1) {
      es[i] = {cn, cn + 1};
      cn++;
    } else {
      ll eleft = ll(cn) * (cn - 1) / 2 - it;
      if (eleft > 0) {
        while (ptr <= cn && cnt[ptr] == ptr - 2) {
          ptr++;
        }
        assert(ptr <= cn);
        cnt[ptr]++;
        es[i] = {cnt[ptr], ptr};
      } else {
        puts("-1");
        return 0;
      }
    }
  }
  for (int i = 0; i < m; i++) {
    printf("%d %d\n", es[i].first, es[i].second);
  }

  return 0;
}

