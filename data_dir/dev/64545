#include <iostream>
#include <cmath>
#include <algorithm>
#include <fstream>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <deque>
#include <list>
using namespace std;

#define space " "
#define enter endl
#define True 1
#define False 0
#define ex exit(0)
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define input(s)\
    freopen(s,"r",stdin)
#define output(s)\
    freopen(s,"w",stdout)
#define INF 2000000007
#define LINF 40000000000000000007

typedef long long LL;
typedef unsigned long long ULL;
typedef double DB;
typedef long double LDB;

const int MAXN=100500;

int n,ma,col=0,x,y,flag1,flag2;
int part1,part2;
pair<int,int> a[MAXN],ans[MAXN];

int bin(int z,int x)
{
    int r=n;
    int l=z;
    while (r-l>1)
    {
        int md=(l+r)/2;
        if (a[md].fi-a[z].fi<x && a[md].se-a[z].se<x)
            l=md;
        else
            r=md;
    }
    if (a[r].fi-a[z].fi<x && a[r].se-a[z].se<x)
        return n+1;
    return r;
}

int main()
{
    cin >> n;
    int x;
    for (int i=1; i<=n; i++)
    {
        scanf("%d",&x);
        a[i]=mp(a[i-1].fi+(x==1),a[i-1].se+(x==2));
    }
    ma=max(a[n].fi,a[n].se);
    if (a[n].fi!=a[n].se)
    {
        if (ma==a[n].fi)
            if (a[n].fi!=a[n-1].fi)
                ans[++col]=mp(ma,1);
        if (ma==a[n].se)
            if (a[n].se!=a[n-1].se)
                ans[++col]=mp(ma,1);
    }

    for (int i=2; i<=ma; i++)
    {
        int l=0;
        part1=part2=flag1=flag2=0;
        while (l<n)
        {
            int ll=bin(l,i);
            if (a[ll].fi-a[l].fi==i)
            {
                flag1=1;
                flag2=0;
                part1++;
            }
            else
            {
                flag1=0;
                flag2=1;
                part2++;
            }
            l=ll;
        }
        if (l<=n && part1!=part2)
        {
            if (part1>part2 && flag1)
                ans[++col]=mp(part1,i);
            else
                if (part2>part1 && flag2)
                {
                    ans[++col]=mp(part2,i);
                }
        }
    }
    cout << col << enter;
    sort(ans+1,ans+col+1);
    for (int i=1; i<=col; i++)
        printf("%d %d\n",ans[i].fi,ans[i].se);
}
