#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <algorithm>
#include <cmath>
#include <set>

using namespace std;

long long dp[1234][12345];
int c[1234];
int cc[1234];
long long cost[1234];

int main()
{
    long long n, w, b, x;
    cin >> n >> w >> b >> x;
    for(int i = 1; i <= n; ++i)
    {
        cin >> c[i];
        cc[i] = c[i] + cc[i-1];
    }

    for(int i = 1; i <= n; ++i)
        cin >> cost[i];
    for(int i = 1; i <= n; ++i)
        for(int j = 0; j <= cc[n]; ++j)
            dp[i][j] = -1;

    dp[1][0] = w;

    long long ans = 0;
    for(int i = 1; i <= c[1]; ++i) {
        if (w >= cost[1] * i) {
            dp[1][i] = w - cost[1] * i;
            ans = i;
        }
        else
            break;

    }
    for(int i = 2; i <= n; ++i)
    {
        for(int j = 0; j <= cc[i]; ++j)
        {
            for (int k = 0; k <= c[i] && k <= j; ++k)
            {
                if (dp[i-1][j-k] != -1)
                {
                    long long curMana = dp[i-1][j-k];
                    long long maxMana = w + b*(j-k);
                    curMana += x;
                    if (curMana > maxMana)
                        curMana = maxMana;
                    if (curMana >= cost[i] * k) {
                        dp[i][j] = max(dp[i][j], curMana - cost[i] * k);
                        ans = max(ans, 1ll * j);
                    }
                }
            }
        }
    }
    cout << ans << endl;
}

