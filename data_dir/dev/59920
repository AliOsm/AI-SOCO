#include<bits/stdc++.h>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define all(v) v.begin(),v.end()
#define boost ios_base::sync_with_stdio(0),cin.tie(0),cout.tie()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;

const ll INF = 1e18;
const int inf = INT_MAX;
const int mod = 1e9+7;
const int pi = acos(-1);
const int dx[8] = {0, 0, 1, -1, 1, 1, -1, -1};
const int dy[8] = {1, -1, 0, 0, 1, -1, 1, -1};
const int N = 2e5+5;
const int MAXN = 4e6+1;

/*int main(){
	int t;
	cin>>t;
	while(t--){
		int n,x,y,d;
		cin>>n>>x>>y>>d;
		if(abs(x-y)%d==0)cout<<abs(x-y)/d;
		else{
				ll ans1=INF,ans2=INF;
				if((y-1)%d==0)ans1=abs(x-1)/d+(abs(x-1)%d>0)+(y-1)/d;
				if((n-y)%d==0)ans2=abs(n-x)/d+(abs(x-n)%d>0)+(n-y)/d;
				if(min(ans1,ans2)==INF)cout<<"-1";
				else cout<<min(ans1,ans2);
			
			cout<<endl;
		}
	}
}*/
vector<int>g[N];
int d[N];
int main()
{
	int n,m;
	cin>>n>>m;
	for(int i=1;i<=n;i++){
		int r,s;
		cin>>r>>s;
		g[r].pb(s);
	}
	for(int i=1;i<=m;i++){
		sort(all(g[i]));
		reverse(all(g[i]));
		int sum=0;
		for(int j=0;j<sz(g[i]);j++){
			sum+=g[i][j];
			if(sum>0)d[j+1]+=sum;
		}
	}
	int ans=0;
	for(int i=1;i<=n;i++){
		ans=max(ans,d[i]);
	}
	cout<<ans;
	
}
