#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef long double real;

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

using namespace std;

const int MaxN = 102, NA = -1, MaxC = 0x3F3F3F3F;

int a [MaxN] [MaxN];
bool b [MaxN];
int m, n;
bool ok;

void recur (int v)
{
 if (b[v])
  return;
 b[v] = true;
 int i;
 for (i = 0; i < n; i++)
  if (a[v][i])
   recur (i);
}

int main (void)
{
 int i, j, k;

 while (scanf (" %d %d", &n, &m) != EOF)
 {
  memset (a, 0, sizeof (a));
  for (i = 0; i < m; i++)
  {
   scanf (" %d %d", &j, &k);
   j--;
   k--;
   a[j][k] = a[k][j] = true;
  }

  ok = (m == n);
  if (ok)
  {
   memset (b, 0, sizeof (b));
   recur (0);
   for (i = 0; i < n; i++)
    if (!b[i])
     ok = false;
  }

  if (ok)
   printf ("FHTAGN!\n");
  else
   printf ("NO\n");
 }

 return 0;
}
