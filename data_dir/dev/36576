#include <bits/stdc++.h>
#define all(x) begin(x), end(x)
#define sz(x) int(x.size())
#define pb push_back

using namespace std;
using ll = long long int;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

const int MOD = 1e9 + 7;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t; cin >> t;
	while (t--) {
		int sz[3];
		vector<int> v[3];
		for (int i = 0; i < 3; ++i) {
			cin >> sz[i];
			v[i].assign(sz[i], 0);
		}
		for (int i = 0; i < 3; ++i) {
			for (int j = 0; j < sz[i]; ++j)
				cin >> v[i][j];
			sort(all(v[i]));
		}
		ll ans = 4e18 + 5;
		for (int i = 0; i < 3; ++i) {
			for (int j = 0; j < sz[i]; ++j) {
				int x = v[i][j];
				int p1 = (i+1)%3, p2 = (i+2)%3;
				ll cur = ans;
				if (x <= v[p1].back() and x >= v[p2][0]) {
					int y = *lower_bound(all(v[p1]), x);
					int z = *(upper_bound(all(v[p2]), x) - 1);
					cur = min(cur, 1LL*(x-y)*(x-y) + 1LL*(y-z)*(y-z) + 1LL*(x-z)*(x-z));
				}
				if (x <= v[p2].back() and x >= v[p1][0]) {
					int y = *lower_bound(all(v[p2]), x);
					int z = *(upper_bound(all(v[p1]), x) - 1);
					cur = min(cur, 1LL*(x-y)*(x-y) + 1LL*(y-z)*(y-z) + 1LL*(x-z)*(x-z));
				}
				ans = min(ans, cur);
			}
		}
		cout << ans << '\n';
	}
}