/**
*
* Author: MARC
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >

typedef unsigned long long ull;
typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl pi = 3.1415926535897932385;
const ldbl E = 2.71828182845904523536;
const dbl eps = 1e-9;
const ll mod = 1e9+7;
const ll inf = 1<<30;

/** /////////// ** Code ** /////////// **/

const int N=200200;
ll a[N] , sum[N];
ll mem[N][3];
bool path[N][3];
int n,k;

ll dp(int i,int cnt){

    if(i > n+1) return -inf;
    if(cnt == 2) return 0LL;
    if(i == n+1) return -inf;

    ll &ret=mem[i][cnt];
    if(ret != -1) return ret;

    ll path1=sum[i+k]-sum[i]+dp(i+k,cnt+1);
    ll path2=dp(i+1,cnt);
    if(path1 >= path2 ){
        ret=path1;
        path[i+k][cnt+1]=1;
    }
    else ret=path2;

    return ret;

}

ii getpath(){
    ii ans;
    int i=0 , cnt=0;

    while(i<=(n-k)){
        if(path[i+k][cnt+1]){
            if(cnt == 0) ans.F=i+1;
            if(cnt == 1) ans.S=i+1;

            cnt++;
            if(cnt == 2) break;

            i+=k;
        }

        else i++;
    }

    return ans;

}

int main()
{
    scanf("%d%d",&n,&k);
    for(int i=1 ; i<=n ; i++) scanf("%d",&a[i]);
    for(int i=1 ; i<=n ; i++) sum[i]=a[i]+sum[i-1];

    memset(mem,-1,sizeof mem); dp(0,0);
    printf("%d %d",getpath().F,getpath().S);


    return 0;
}
