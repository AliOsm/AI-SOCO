#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ull unsigned long long
#define endl '\n'
#define int long long
#define iter vector<int>::iterator
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=3e5+7;
const int inf=1e18+5;
const int mod=998244353;

pair<int,int>a[N];
int f[N];

bool cmp1(pair<int,int>a,pair<int,int>b)
{
    return a.ff<b.ff;
}

bool cmp2(pair<int,int>a,pair<int,int>b)
{
    return a.ss<b.ss;
}

bool cmp3(pair<int,int>a,pair<int,int>b)
{
    if (a.ff<b.ff)return true;
    else if (a.ff>b.ff)return false;
    else {
        return a.ss<b.ss;
    }
}

main ()
{
    ios;
    int n;
    cin>>n;
    f[0]=1;
    for (int i=1;i<=n;++i){
        f[i]=(f[i-1]*i)%mod;
    }
    for (int i=1;i<=n;++i){
        cin>>a[i].ff>>a[i].ss;
    }
    sort(a+1,a+n+1,cmp1);
    int kol=1;
    for (int i=1;i<=n;++i){
        int r=i;
        while(a[r+1].ff==a[i].ff){
            ++r;
        }
        kol=(kol*f[r-i+1])%mod;
        i=r;
    }
    int kol1=1;
    sort(a+1,a+n+1,cmp2);
    for (int i=1;i<=n;++i){
        int r=i;
        while(a[r+1].ss==a[i].ss){
            ++r;
        }
        kol1=(kol1*f[r-i+1])%mod;
        i=r;
    }
    sort(a+1,a+n+1,cmp3);
    int kol2=1;
    for (int i=1;i<n;++i){
        if (a[i+1].ff<a[i].ff || a[i+1].ss<a[i].ss){
            kol2=0;
            break;
        }
    }
    for (int i=1;i<=n;++i){
        int r=i;
        while(a[r+1].ff==a[i].ff && a[r+1].ss==a[i].ss){
            ++r;
        }
        kol2=(kol2*f[r-i+1])%mod;
        i=r;
    }
    int ans=kol+kol1-kol2;
    ans+=mod;
    ans%=mod;
    ans=f[n]-ans;
    ans+=mod;
    ans%=mod;
    cout<<ans<<endl;
}
