#include <bits/stdc++.h>

typedef long long ll ;

using namespace std;
int cu1[150005],cu2[150005],n;
int BS(int ss,int cur)
{
    int e=n,sum1,sum2,mid,s=ss;
    //cout << s << " " << e << " s e "<< endl;
    while(s<=e)
    {
        mid=(s+e)/2;
        sum1=cu1[mid]-cu1[ss-1];
        sum2=cu2[mid]-cu2[ss-1];
        if(sum1<cur&&sum2<cur)
            s=mid+1;
        else
            e=mid-1;
    }
    return s;
}
int check(int points)
{
    int start=1;
    int sum1=0,sum2=0,x ;
    //cout << points << endl;
    int lastwin=-1;
    while(start!=n+1)
    {
        x=BS(start,points);
        // cout << x << " " << start << endl;
        if(cu1[x]-cu1[start-1]!=points&&cu2[x]-cu2[start-1]!=points)
            break;
        if(cu1[x]-cu1[start-1]>cu2[x]-cu2[start-1])
            sum1++,lastwin=1;
        else
            sum2++,lastwin=2;
        start=x+1;
        //cout << start << endl;
    }
    //cout << start << " ----- " << endl;
    if(start!=n+1)
        return -1;
    if(lastwin==1&&sum1>sum2)
    return sum1;
    if(lastwin==2&&sum2>sum1)
    return sum2;
        return -1;
}
int main()
{
    std::cin.tie(0);
    std::ios::sync_with_stdio(false);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int x;
    cin >> n;
    for(int i =0; i<n; i++)
    {
        cin >> x;
        x--;
        cu1[i+1]+=cu1[i]+(!x);
        cu2[i+1]+=cu2[i]+(x);
    }
    for(int i=n; i<n+1000; i++)
    {
        cu1[i+1]+=cu1[i];
        cu2[i+1]+=cu2[i];
    }
    int sum1=0,sum2=0;
    set<pair<int,int> > out;
    for(int i =0; i<n; i++)
    {
        if(cu1[i+1]-cu1[i]==1)
            sum1++;
        else
            sum2++;
        if(sum1!=sum2)
        {
            int r=check(max(sum1,sum2));
            if(r!=-1)
            {
                out.insert({r,max(sum1,sum2)});
            }
        }
    }
    cout << out.size() << endl;
    for(auto i:out)
    {
        cout <<i.first << " " << i.second << endl;
    }
    return 0;
}
