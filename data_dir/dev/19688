#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define wtf(s) freopen((s), "w", stdout)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define rff(s) freopen((s), "r", stdin)
#define sfl(x) scanf("%I64d" , &x)
#define sfi(x) scanf("%d" , &x)
#define sfd(x) scanf("%lf", &x)
#define sfc(x) scanf("%c", &x)
#define mod 1000000007
#define pi (2*acos(0))
typedef long long ll;
#define endl '\n'

int n, a[100005];
bool vis[10][100005];
vector<int> ans, v;

void solve(int num, int idx)
{
    if (idx == n - 1)
    {
        ans = v;
        return;
    }
    if (a[idx + 1] == a[idx])
    {
        for (int i = 1; i < 6 && ans.empty(); i++)
            if (i != num && !vis[i][idx + 1])
                v.push_back(i), vis[i][idx + 1] = true, solve(i, idx + 1),
                v.pop_back();
    }
    if (a[idx + 1] > a[idx])
    {
        for (int i = num + 1; i < 6 && ans.empty(); i++)
            if (i != num && !vis[i][idx + 1])
                v.push_back(i), vis[i][idx + 1] = true, solve(i, idx + 1),
                v.pop_back();
    }
    if (a[idx + 1] < a[idx])
    {
        for (int i = num - 1; i != 0 && ans.empty(); i--)
            if (i != num && !vis[i][idx + 1])
                v.push_back(i), vis[i][idx + 1] = true, solve(i, idx + 1),
                v.pop_back();
    }
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 1; i < 6 && ans.empty(); i++)
        vis[i][0] = true, v.push_back(i), solve(i, 0), v.pop_back();
    if (ans.empty())
        cout << -1;
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i] << ' ';
    return 0;
}