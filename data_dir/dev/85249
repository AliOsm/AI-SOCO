#include <iostream>
#include <algorithm>

using namespace std;

const int M = 101;
const int S = 901;

int vs[M];
int memo[M][S];
int m, s;

bool solve(int idx, int cs, int f)
{
	if(cs < 0) return false;
	if(cs > s) return false;
	if(idx == m)
	{
		if(cs != s) return false;
		for(int i = 0; i < m; i++)
		{
			cout << vs[i];
		}
		return true;
	}
	if(memo[idx][cs] != -1) return memo[idx][cs] == 1;
	if(f == 0)
	{
		for(int i = (idx == 0 && m != 1 ? 1:0); i < 10; i++)
		{
			vs[idx] = i;
			if(solve(idx+1, cs+i, f)) return true;
		}
	}
	else
	{
		for(int i = 9; i >= (idx == 0  && m != 1 ? 1:0); i--)
		{
			vs[idx] = i;
			if(solve(idx+1, cs+i, f)) return true;
		}
	}
	memo[idx][cs] = 0;
	return false;
}

int main()
{
	 cin >> m >> s;
	 for(int* a : memo) fill(a, a+S, -1);
	 fill(vs, vs+M, -1);
	 if(!solve(0, 0, 0)) cout << "-1";
	 cout << " ";
	 if(!solve(0, 0, 1)) cout << "-1";
	 cout << endl;
}