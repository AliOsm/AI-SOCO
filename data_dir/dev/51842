#pragma GCC optimize("O3")

#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES
#include <iostream>
#include <vector>
#include <algorithm>
#include <stack>
#include <string>
#include <assert.h>
#include <queue>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <random>
#include <cmath>
#include <chrono>

#define ll long long
#define ld long double
#define pb push_back
#define eb emplace_back
//#define int long long
using namespace std;

const int INF = 2e9;
const int MOD = 1e9 + 7;
const int MB = 20;

vector<vector<int>> g;
vector<int> a;

void dfs(int v, int p = 0, int h = 0) {
	if (g[v].size() == 1) a.pb(h);
	for (int u : g[v]) {
		if (u != p) {
			dfs(u, v, h + 1);
		}
	}
}


int go(int v) {
	a.clear();
	dfs(v);
	sort(a.begin(), a.end());
	for (int i = 1; i < a.size(); i++) {
		a[i] = max(a[i - 1] + 1, a[i]);
	}
	return a.back();
}

void solve() {
	int n;
	cin >> n;
	g.resize(n);
	for (int i = 0; i < n - 1; i++) {
		int x, y;
		cin >> x >> y;
		x--; y--;
		g[x].pb(y);
		g[y].pb(x);
	}

	int ans = 0;
	for (int u : g[0]) {
		ans = max(ans, go(u));
	}
	cout << ans + 1;
}

signed main() {
	/*
	freopen("search.in", "r", stdin);
	freopen("search.out", "w", stdout);
	*/
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cout.precision(12);
	solve();
}