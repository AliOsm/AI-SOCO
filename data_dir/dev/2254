#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

vector<string> arr;
set<string> myset, T, total;
map<string,int> freq;

string task(string s) {
    string ans = s.substr(1,s.size()-1) + s[0];
    return ans;
}

int main()
{
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    for(int i=0;i<n;i++) {
        string s;
        cin >> s;
        arr.push_back(s);
        sort(s.begin(),s.end());
        myset.insert(s);
    }
    if(myset.size()!=1) {
        printf("-1\n");
        return 0;
    }
    for(int i=0;i<arr.size();i++) {
        T.insert(arr[i]);
        total.insert(arr[i]);
        string temp = arr[i];
        for(int j=0;j<arr[i].size()-1;j++) {
            temp = task(temp);
            T.insert(temp);
            total.insert(temp);
        }
        for(auto d : T) {
            freq[d]++;
        }
        T.clear();
    }
    int ans = 1e9;
    for(auto i : total) {
        int cnt = 0;
        int valid = 0;
        if(freq[i]==n) {
            //cout << i << endl;
            for(int j=0;j<arr.size();j++) {
                if(arr[j]==i) {
                    valid++;
                    continue;
                }
                string temp = arr[j];
                for(int d=0;d<arr[j].size()-1;d++) {
                    temp = task(temp);
                    if(i==temp) {
                        valid++;
                        cnt += d+1;
                        break;
                    }
                }
            }
        }
        if(valid==n)ans = min(cnt,ans);
    }
    if(ans!=1e9)printf("%d\n",ans);
    else printf("-1\n");
}
