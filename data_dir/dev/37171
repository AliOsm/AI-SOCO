/*
ye mera template hai
apna khud likho bc :P
*/

/*
Author : Sarvagya Agarwal
*/

#include<bits/stdc++.h>
using namespace std;

//defines
#define openin freopen("input.txt","r",stdin)
#define openout freopen("output.txt","w",stdout)
#define fast ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define int long long
#define mod 1000000007
#define rep(i,a,n) for(__typeof(n) i=a;i<=n;++i)
#define all(c) (c).begin(),(c).end()
#define ff first
#define ss second
#define pb push_back
#define mp make_pair

int power(int a , int b)
{
    int res = 1 ;
    while(b)
    {
        if(b%2) {
            res = (res * a)%mod ;
        }
        b/=2 ;
        a = (a*a)%mod ;
    }
    return res ;
}

//debug
#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
		cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
		const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif
int n ;
double A,B ;
vector<double> a,b ;
double calc()
{
    double res = 0 , abhi = 0 ;
    rep(i,0,n-1) {
        abhi += b[i] ;
        if(res < abhi)res=abhi ;
        if(abhi<0)abhi=0;
    }
    return res ;
}
void check(double x)
{
    b.resize(n) ;
    rep(i,0,n-1) {
        b[i] = a[i]-x ;
    }
    A = calc() ;
    rep(i,0,n-1) {
        b[i] *= -1 ;
    }
    B = calc() ;
    return ;
}
int32_t main()
{
    fast;
    cin >> n ;
    a.resize(n) ;
    rep(i,0,n-1) cin >> a[i] ;
    double l = *min_element(all(a));
    double r = *max_element(all(a)) ;
    double m ;
    rep(i,1,50)
    {
        m = (l+r)/2 ;
        check(m) ;
        //trace(l,r,m,A,B);
        if(A>B)l=m;
        else r=m;
    }
    m = (l+r)/2 ;
    check(m) ;
    cout << fixed << setprecision(12) << max(A,B) << '\n';
    return 0;
}
