#include <bits/stdc++.h>
using namespace std;

const int N = int(1e4) + 5;

char s[N];

vector<string> ans;
map<string, bool> mp;

int main (int argc, char *argv[])
{
	scanf("%s", s);
	int n = int(strlen(s));
	vector<char> dp2(n, false), dp3(n, false);
	for(int i = n - 1; i > 4; --i) {
		if(i + 1 < n) {
			if(i + 2 == n) {
				string y;
				y += s[i];
				y += s[i + 1];
				ans.push_back(y);
				mp[y] = true;
				dp2[i] = true;
			} else if(dp3[i + 2]) {
				string y;
				y += s[i];
				y += s[i + 1];
				if(!mp[y]) {
					ans.push_back(y);
				}
				mp[y] = true;
				dp2[i] = true;
			} else if(dp2[i + 2] && (s[i] != s[i + 2] || s[i + 1] != s[i + 3])) {
				string y;
				y += s[i];
				y += s[i + 1];
				if(!mp[y]) {
					ans.push_back(y);
				}
				mp[y] = true;
				dp2[i] = true;
			}
		}
		if(i + 2 < n) {
			if(i + 3 == n) {
				string y;
				y += s[i];
				y += s[i + 1];
				y += s[i + 2];
				ans.push_back(y);
				mp[y] = true;
				dp3[i] = true;
			} else if(dp2[i + 3]) {
				string y;
				y += s[i];
				y += s[i + 1];
				y += s[i + 2];
				if(!mp[y]) {
					ans.push_back(y);
				}
				mp[y] = true;
				dp3[i] = true;
			} else if(dp3[i + 3] && (s[i] != s[i + 3] || s[i + 1] != s[i + 4] || s[i + 2] != s[i + 5])) {
				string y;
				y += s[i];
				y += s[i + 1];
				y += s[i + 2];
				if(!mp[y]) {
					ans.push_back(y);
				}
				mp[y] = true;
				dp3[i] = true;
			}
		}
	}

	printf("%d\n", int(ans.size()));
	sort(ans.begin(), ans.end());
	for(int i = 0; i < ans.size(); ++i) {
		printf("%s\n", ans[i].c_str());
	}

	return 0;
}

