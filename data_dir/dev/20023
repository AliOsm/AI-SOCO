#include <iostream>
#include <cstring>
#include <algorithm>
#include <cstdio>
#include <ctime>
#include <vector>
#include <fstream>
#include <sstream>
#include <queue>
#include <cmath>
using namespace std;
#define VI vector<int>
#define L(s) (int)((s).size())
#define pb push_back
#define pii pair<int, int>
#define mp make_pair
#define x first
#define y second
#define inf 1000000000
#define N 111111
#define all(s) (s).begin(), (s).end()
#define ll long long
#define pdd pair<double, double>
int is_pr[111111];
VI ways[111111][5];
int t, n, p;
int a[5][5];
int ans;
void go(int lev) {
	int val = 0;
	for(int i = 0; i < lev; ++i) val = val * 10 + a[lev][i];
	if (lev == n - 1) {
			ans += L(ways[val][1]);
			return;
		}
	for(int pos = 0; pos < L(ways[val][n - lev]); ++pos) {
		int who = ways[val][n - lev][pos];
		for(int i = n - 1; i >= 0; --i) {
			a[lev][i] = a[i][lev] = who % 10; who /= 10;
		}
		go(lev + 1);
	}
}
int main() {
	for(int i = 2; i < 100000; ++i) is_pr[i] = 1;
	for(int i = 2; i * i < 100000; ++i) {
		if (is_pr[i]) {
			for(int j = i * i; j < 100000; j += i) {
				is_pr[j] = 0;
			}
		}
	}
	for(int i = 0; i < 100000; ++i) {
		if (is_pr[i]) {
			ways[i][0].pb(i);
		}
	}
	int mul = 1;
	for(int add = 1; add < 5; ++add) {
		mul *= 10;
		for(int st = 0; st * mul < 100000; ++st) {
			for(int let = 0; let < 10; ++let) {
				for(int j = 0; j < L(ways[st * 10 + let][add - 1]); ++j) {
						ways[st][add].pb(ways[st * 10 + let][add - 1][j]);
				}
			}
		}
	}
	cin >> t;
	while(t--) {
		int x;
		cin >> x;
		n = 0;
		while(x) {
			a[0][n++] = x % 10; x /= 10;
		}
		reverse(a[0], a[0] + n);
		for(int i = 0; i < n; ++i) {
			a[i][0] = a[0][i];
		}
		ans = 0;
		go(1);
		cout << ans << endl;
	}
	return 0;
}
