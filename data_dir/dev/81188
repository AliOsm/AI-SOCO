#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};
//////////////////////

/*
  Author: Junior Andrade
*/ 

void arquivo() {
  freopen("","r",stdin);
  freopen("","w",stdout);
}

const int N = 200200;

int n, k, a, b, q;
ii tr[4 * N];
ll vet[N];

ii join(ii a, ii b) {
  return ii(a.F + b.F, a.S + b.S);
}

void update(int no, int l, int r, int i, ll val) {
  if(l == r) {
    vet[i] += val;
    tr[no] = ii(min((ll)a, vet[i]), min((ll)b, vet[i]));
    return;
  }
  int nxt = (no << 1), mid = (l + r) >> 1;
  if(i <= mid) update(nxt, l, mid, i, val);
  else update(nxt + 1, mid + 1, r, i, val);
  tr[no] = join(tr[nxt], tr[nxt + 1]);
}

ii query(int no, int l, int r, int i, int j) {
  if(r < i || l > j) return ii(0, 0);
  if(l >= i && r <= j ) return tr[no];
  int nxt = (no << 1), mid = (l + r) >> 1;
  return join(query(nxt, l, mid, i, j), query(nxt + 1, mid + 1, r, i, j));
}

void upd(int x, ll v) {
  x--;
  update(1, 0, n - 1, x, v);
}


ll que(int p) {
  p--;
  int l = p, r = p + k - 1;
  ll p1 = query(1, 0, n - 1, 0, l - 1).S;
  ll p2 = query(1, 0, n - 1, r + 1, n - 1).F;
  return p1 + p2;
}

int main() {
  scanf("%d %d %d %d %d", &n, &k, &a, &b, &q);

  while(q--) {
    int op; scanf("%d", &op);
    if(op == 1) {
      int a, b; scanf("%d %d", &a, &b);
      upd(a, b);
    }
    else{ 
      int x; scanf("%d", &x);
      printf("%lld\n", que(x));
    }
  }
  return 0;
}