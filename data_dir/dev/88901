#include <bits/stdc++.h>
using namespace std;
#define ll  long long
#define pb  push_back
#define vi  vector<int>
#define vvi vector<vi >
#define all(x) x.begin(), x.end()
 
ll  mod = 998244353;
int n, m, k, res = 0;
vi  a, ind;
vvi dp;
 
void add(int& x, int y) {
    x += y;
    if (x >= mod)
        x -= mod;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin >> n >> k;
    a.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    sort(all(a));
 
    if (k == 2) {
        for (int i = 0; i < n; ++i)
            for (int j = 0; j < i; ++j)
                add(res, a[i] - a[j]);
        cout << res;
        return 0;
    }
 
    ind.assign(100005, -1);
    for (int i = 0; i < n; ++i)
        ind[a[i]] = i;
    for (int i = 1; i < ind.size(); ++i)
        if (ind[i] == -1)
            ind[i] = ind[i - 1];
 
    m = 100000 / (k - 1) + 5;
    dp.assign(n, vi(m, 1));
    for (int num = 2; num <= k; ++num) {
        for (int j = 0; j < m; ++j)
            for (int i = 1; i < n; ++i)
                add(dp[i][j], dp[i - 1][j]);
        for (int j = 0; j < m; ++j)
            for (int i = n - 1; i >= 0; --i)
                dp[i][j] = (a[i] - j < a[0] ? 0 : dp[ind[a[i] - j]][j]);
    }
    for (int i = 0; i < n; ++i)
        for (int j = 0; j + 1 < m; ++j)
            add(res, (j * (dp[i][j] + mod - dp[i][j + 1])) % mod);
    cout << res;
 
    return 0;
}