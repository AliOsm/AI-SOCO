#include <bits/stdc++.h>
using namespace std;
const int SIZE = 1e6 + 10;


class Solution{
  typedef long long LL;
  vector<vector<pair<int, LL>>> g;
  vector<LL> w;
  LL ans = 0;
  int n;
  LL dfs(int u, int p = -1) {
    LL ma[2] = {0};
    for (auto T: g[u]) {
      int v; LL t; tie(v, t) = T;
      if (v == p) continue;
      LL ch = dfs(v, u) - t;
      if (ma[0] < ch) tie(ma[0], ma[1]) = make_pair(ch, ma[0]);
      else ma[1] = max(ma[1], ch);
    }
    ans = max(ans, ma[0] + ma[1] + w[u]);
    return ma[0] + w[u];
  }
public:
  void run() {
    cin >> n;
    w.resize(n);
    g.resize(n);
    for (int i = 0; i < n; ++i) cin >> w[i];
    for (int i = 0; i < n - 1; ++i) {
      int u, v, c; cin >> u >> v >> c;
      --u, --v;
      g[u].emplace_back(v, c), g[v].emplace_back(u, c);
    }
    dfs(0);
    cout << ans << '\n';
  }
};

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);
  Solution().run();
}
