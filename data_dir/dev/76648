#include <iostream>

#include <vector>

using namespace std;

typedef pair<int,int> II;
typedef vector<II> VII;
typedef vector<VII> VVII;

int R, C, K;

void add(VVII& res, II p) {
   if (res.size() == K) {
      res.back().push_back(p);
      return;
   }
   if (res.back().size() >= 2)
      res.push_back( VII() );
   res.back().push_back(p);
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(NULL);

   cin >> R >> C >> K;

   VVII res;
   res.push_back(VII());

   int r = 0, c = 1;
   int d = -1;

   while (true) {
   //   cerr << "(" << r << "," << c << ")   d=" << d << endl;
      if (c == 1) {
         if (d < 0) {
            d = -d;
            ++r;
            if (r > R) break;
            add(res, II(r, c));
            continue;
         }
      }
      else if (c == C) {
         if (d > 0) {
            d = -d;
            ++r;
            if (r > R) break;
            add(res, II(r, c));
            continue;
         }
      }
      c += d;
      add(res, II(r, c));
   }
   
   for (int k = 0; k < res.size(); ++k) {
      cout << res[k].size();
      for (int j = 0; j < res[k].size(); ++j) {
         cout << ' ' << res[k][j].first << ' ' << res[k][j].second;
      }
      cout << "\n";
   }

   return 0;
}
