#include <bits/stdc++.h>
#define int long long

using namespace std;

const int N = 18;
const int M = 100;

int dp[(1 << N)][M];
int p10[18];
vector <int> dig;

main()
{
	int n, m;
	cin >> n >> m;
	p10[0] = 1;
	for (int i = 1; i < 18; ++i)
		p10[i] = p10[i - 1] * 10 % m;
	int nd = 0;
	while (n)
	{
		dig.push_back(n % 10);
		n /= 10;
		nd ++;
	}
	dp[0][0] = 1;
	for (int mask = 1; mask < (1 << nd); ++mask)
		for (int k = 0; k < m; ++k)
		{
			bool mark[10] = {0};
			int cd = __builtin_popcount(mask);
			for (int i = 0; i < nd; ++i)
				if ((mask & (1 << i)) && (cd > 1 || dig[i] != 0) && !mark[dig[i]])
				{
					mark[dig[i]] = true;
					int nmask = (mask ^ (1 << i));
					int nk = (k + p10[nd - cd] * dig[i]) % m;
					dp[mask][k] += dp[nmask][nk];
				}
		}
	cout << dp[(1 << nd) - 1][0] << "\n";
}
