
 #include "bits/stdc++.h"
using namespace std;

#define ios ios_base::sync_with_stdio(0); cin.tie(0);
#define FOR(i,a,b) for(int i = a; i < b; i++)
#define pb push_back

typedef long long ll;
typedef long double db;
typedef pair<ll,ll> ii;

const int N = 1e5+5;
const ll Limit = 1500000ll * 1500000;
const int mod = 1e9 + 7;
const db eps = 1e-7;

int n;
vector<ii>vp;
ll getLen(ll x, ll y){
    return x * x + y * y;
}
struct V{
  int x, y;
  char idx, tp;

  bool operator < (V & o)const{
    return getLen(x,y) < getLen(o.x,o.y);
  }

};

vector<V>dp[N];
int main(){
  scanf("%d", &n);
  vp.resize(n);

  FOR(i,0,n)
    scanf("%lld%lld", &vp[i].first, &vp[i].second);

  V zero ;
  zero.x = zero.y = zero.tp = zero.idx = 0;

  dp[0].pb(zero);

  FOR(i,0,n){
    sort(dp[i].begin(),dp[i].end());
    vector<V>tmp;
    tmp.pb(dp[i][0]);
    FOR(j,1,dp[i].size()){
      if(dp[i][j].x == tmp.back().x && dp[i][j].y == tmp.back().y)continue;
      tmp.push_back(dp[i][j]);
    }
    dp[i]=tmp;
    dp[i].resize(min((int)dp[i].size(),50));

    FOR(j,0,dp[i].size()){
      V nxt = dp[i][j];
      nxt.x += vp[i].first;
      nxt.y += vp[i].second;
      nxt.idx = j;
      nxt.tp = 1;
      dp[i+1].pb(nxt);
      nxt = dp[i][j];
      nxt.x -= vp[i].first;
      nxt.y -= vp[i].second;
      nxt.idx = j;
      nxt.tp = -1;
      dp[i+1].pb(nxt);
    }
  }
  sort(dp[n].begin(), dp[n].end());
  vector<int>ans;
  int idx = 0;
  for(int i = n; i > 0; i--){
    ans.pb(dp[i][idx].tp);
    idx = dp[i][idx].idx;
  }
  reverse(ans.begin(),ans.end());

  FOR(i,0,n)
    printf("%d ", ans[i]);

  return 0;
}
