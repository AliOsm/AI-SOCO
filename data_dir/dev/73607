#include <bits/stdc++.h>
using namespace std;
int n;
map<int,vector<int> > at;
vector<int> mp;
int BIT[200001];
void add(int idx,int val){
	while(idx<=n){
		BIT[idx]+=val;
		idx+=idx&-idx;
	}
}
int get(int idx){
	int ret=0;
	while(idx){
		ret+=BIT[idx];
		idx-=idx&-idx;
	}
	return ret;
}
int main() {
	scanf("%d",&n);
	for(int i=0,x,y;i<n;++i){
		scanf("%d%d",&x,&y);
		at[y].push_back(x);
		mp.push_back(x);
	}
	sort(mp.begin(),mp.end());
	mp.resize(unique(mp.begin(),mp.end())-mp.begin());
	for(auto &x:at){
		for(auto &y:x.second)
			y=lower_bound(mp.begin(),mp.end(),y)-mp.begin()+1;
		sort(x.second.begin(),x.second.end());
	}
	long long res=0;
	for(auto it=at.rbegin();it!=at.rend();++it){
		auto &v=it->second;
		for(auto &x:v){
			int g=get(x)-get(x-1);
			if(g==0)
				add(x,1);
		}
		int cur=get(n);
		res+=(long long)cur*(cur+1)/2;
		int last=1;
		v.push_back(n+1);
		for(auto &x:v){
			if(last<=x-1){
				int g=get(x-1)-get(last-1);
				res-=(long long)g*(g+1)/2;
			}
			last=x+1;
		}
	}
	printf("%lld\n",res);
	return 0;
}