#include <bits/stdc++.h>

using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    int n, u = 0, max_buy = -1, min_sell = -1, zbeg = 0, zend;
    long long ans = 1, fin = 0;
    map <int, int> type;
    cin >> n;
    vector <pair <string, int> > opp(n);
    priority_queue <int> mxby;
    priority_queue <int, vector <int>, greater <int> > mnsl;

    for (int i = 0; i < n; i++)
        cin >> opp[i].first >> opp[i].second;

    while (zbeg < n)
    {
        zend = zbeg;
        fin = 0;

        while (zend < n && opp[zend].first == "ADD")
        {
            if (max_buy >= 0 && opp[zend].second <= max_buy)
            {
                type[opp[zend].second] = 1;
                mxby.push(opp[zend].second);
            }
            else if (min_sell >= 0 && opp[zend].second >= min_sell)
            {
                mnsl.push(opp[zend].second);
                type[opp[zend].second] = 2;
            }
            else
                fin++;

            zend++;
        }

        if (zend == n)
            break;

        if (type[opp[zend].second] == 1 && opp[zend].second < max_buy || type[opp[zend].second] == 2 && opp[zend].second > min_sell)
        {
            cout << 0;
            return 0;
        }

        if (type[opp[zend].second] == 1)
        {
            mxby.pop();

            if (mxby.size() == 0)
                max_buy = -1;
            else
                max_buy = mxby.top();
        }
        else if (type[opp[zend].second] == 2)
        {
            mnsl.pop();

            if (mnsl.size() == 0)
                min_sell = -1;
            else
                min_sell = mnsl.top();
        }

        int divid = opp[zend].second;

        if (type[divid] == 0)
        {
            u++;
            fin--;
        }

        for (int i = zbeg; i < zend; i++)
            if (!type[opp[i].second])
            {
                if (opp[i].second > divid)
                {
                    if (min_sell == -1 || opp[i].second < min_sell)
                        min_sell = opp[i].second;

                    mnsl.push(opp[i].second);
                    type[opp[i].second] = 2;
                    fin--;
                }
                else if (opp[i].second < divid)
                {
                    if (max_buy == -1 || opp[i].second > max_buy)
                        max_buy = opp[i].second;

                    mxby.push(opp[i].second);
                    fin--;
                    type[opp[i].second] = 1;
                }
            }

        zbeg = zend+1;
    }

    for (int i = 0; i < u; i++)
        ans = ans * (long long)2 % (long long)1000000007;

    ans = ans * (fin+1) % (long long)1000000007;

    cout << ans;
}
