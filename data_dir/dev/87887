#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <string>
using namespace std;
const int maxn=200010;
int T,n,t;
long long dp[2][12],k,ans,a[5][5],b[5][5];
struct da{int c;long long v;}q[maxn];
bool cmp(da aa,da bb)
{
	if (aa.v==bb.v) return aa.c<bb.c;
	return aa.v>bb.v;
}
int main()
{
	scanf("%d",&T); memset(dp[t],-1,sizeof dp[t]); dp[t][0]=0;
	while (T--)
	{
		scanf("%d",&n); for (int i=1;i<=n;i++) scanf("%d%lld",&q[i].c,&q[i].v);
		memset(a,-1,sizeof a); memset(b,-1,sizeof b);  a[0][0]=0; b[0][0]=0;
		t^=1; memset(dp[t],-1,sizeof dp[t]); sort(q+1,q+n+1,cmp);
		for (int i=1;i<=n;i++)
		 for (int j=3-q[i].c;j>=0;j--)
		  for (int k=0;k<3;k++)
		  {
		 	if (a[k][j]!=-1)
		 	{
		 		if (j==0) a[k+1][j+q[i].c]=max(a[k+1][j+q[i].c],a[k][j]+2ll*q[i].v);
		 		else a[k+1][j+q[i].c]=max(a[k+1][j+q[i].c],a[k][j]+q[i].v);
		 	}
		 	if (b[k][j]!=-1) b[k+1][j+q[i].c]=max(b[k+1][j+q[i].c],b[k][j]+q[i].v);
		  }
		for (int i=0;i<=9;i++)
		 for (int j=0;j<=3;j++)
		  for (int k=0;k<=3;k++)
		  if (dp[t^1][i]!=-1)
		  {
		  	  if (i+j>=10 && a[j][k]!=-1) dp[t][(i+j)%10]=max(dp[t][(i+j)%10],dp[t^1][i]+a[j][k]);
		   	   else if (b[j][k]!=-1) dp[t][(i+j)%10]=max(dp[t][(i+j)%10],dp[t^1][i]+b[j][k]);
		  }
	}
	for (int i=0;i<10;i++) ans=max(ans,dp[t][i]);
	printf("%lld\n",ans);
return 0;
}