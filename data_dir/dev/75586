#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <iomanip>
#include <ctime>
using namespace std;

template <typename T>
T next_int() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int max_n = (int)2e3 + 228;
const int max_int = (int)1e9 + 228;
const int MOD = (int)1e9 + 7;

int i, j, n, m, k;
string a;
long long ans, dp[max_n][max_n];

int main() {
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);

	cin >> n >> m;
	cin >> a;

	int mn = 0;
	for(i = 0; i < m; i++) {
		if(a[i] == '(') k++; else k--;
		mn = min(mn, k);
	}

	dp[0][0] = 1;
	for(i = 0; i <= n - m; i++) {
		for(j = 0; j < max_n; j++) {
			if(j + 1 < max_n) dp[i + 1][j + 1] = (dp[i + 1][j + 1] + dp[i][j]) % MOD;
			if(j) dp[i + 1][j - 1] = (dp[i + 1][j - 1] + dp[i][j]) % MOD;
		}
	}

	for(i = 0; i <= n - m; i++) {
		for(j = -mn; j <= i; j++) {
			if(k + j <= n - m - i) ans = (ans + dp[i][j] * dp[n - m - i][k + j]) % MOD;
		}
	}

	cout << ans << "\n";
}
