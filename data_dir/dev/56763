#include <iostream>
#include <string>
using namespace std;

long long modpow(long long a, long long b, long long m) {
	long long p = 1, q = a;
	for (int i = 0; i < 64; i++) {
		if ((b / (1LL << i)) % 2 == 1) { p *= q; p %= m; }
		q *= q; q %= m;
	}
	return p;
}
long long Div(long long a, long long b, long long m) {
	return (a*modpow(b, m - 2, m)) % m;
}

long long N, A, B, K, R, sum, mod = 1000000009; string S;

int main() {
	cin >> N >> A >> B >> K >> S; R = (N + 1) / K;

	long long ret = 0;

	for (int i = 0; i < S.size(); i++) {
		long long V = 1; if (S[i] == '-') V = -1;
		long long sum = V*modpow(A, N - i, mod)*modpow(B, i, mod); sum += mod*mod; sum %= mod;

		long long G = Div(modpow(B, K, mod), modpow(A, K, mod), mod);
		if (G == 1) {
			ret += (sum*R) % mod; ret %= mod;
			continue;
		}
		long long I = Div((modpow(G, R, mod) + mod - 1) % mod, (G + mod - 1) % mod, mod);
		ret += (sum*I) % mod; ret %= mod;
	}
	cout << ret << endl;
	return 0;
}