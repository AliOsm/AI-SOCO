#include <bits/stdc++.h>
#define pb push_back
using namespace std;

const int mx = 200111;
const int mod = 1000000007;


int n;
struct node{
    int t,d,p,id;
    node(){}
    node(int a,int b,int c,int d){
        t = a;
        d = b;
        p = c;
        id = d;
    }
};
bool cmp(node p,node q){
    if( p.d == q.d ){
        return p.t<q.t;
    }
    return p.d<q.d;
}
node vec[200];
int m;
int dp[200][2000];
int call(int id,int val){
    if(id==m)return dp[id][val]=0;
    if(dp[id][val]!=-1)return dp[id][val];
    int res = 0;
    if(val+vec[id].t<vec[id].d){
        res = max( res , vec[id].p+call(id+1,val+vec[id].t) );
    }
    res = max( res , call(id+1,val) );
    return dp[id][val]=res;
}
vector<int>rem;
void path(int id,int val,int value){
    if(id==m){
        return;
    }

    if( val+vec[id].t<vec[id].d ){
        if( dp[id+1][ val+vec[id].t ]+vec[id].p==value ){
            rem.pb( vec[id].id );
            path( id+1 , val+vec[id].t , value-vec[id].p );
        }
        else{
            path( id+1 , val , value );
        }
    }
    else{
        path( id+1 , val , value );
    }
}
int main(){
   // freopen("in.txt","r",stdin);
//    freopen("in.txt","w",stdout);
    cin>>n;
    int j = 0;
    for(int i=1;i<=n;i++){
        int a,b,c;
        scanf("%d%d%d",&a,&b,&c);
        if(a>=b)continue;
        vec[m].t = a;
        vec[m].d = b;
        vec[m].p = c;
        vec[m++].id= i;
    }

    sort(vec,vec+m,cmp);
//    for(int i=0;i<m;i++){
//        cout<<vec[i].t<<" "<<vec[i].d<<" "<<vec[i].p<<" "<<vec[i].id<<endl;
//    }
    memset(dp,-1,sizeof(dp));
    int ret = call(0,0);
    cout<<ret<<endl;
    path(0,0,ret);
    cout<<rem.size()<<endl;
    for(int v:rem){
        cout<<v<<" ";
    }
    cout<<endl;
    return 0;
}

