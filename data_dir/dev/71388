#include <bits/stdc++.h>
#define ll long long
#define IO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
using namespace std;
const int N = 4e5 + 50;
int mx[N][22], pth[N][22], lvl[N];
ll sum[N][22];
int newPar(int u, int w)
{
	for (int i = 21; i >= 0; i--)
		if (pth[u][i] && mx[u][i] < w)
			u = pth[u][i];
	if (mx[u][0] >= w)
		return u;
	return pth[u][0];
}
void add(int u, int par, ll w)
{
	par = newPar(par, w);
//	cerr << "# " << u << " " << par << '\n';
	lvl[u] = 1 + lvl[par];
	pth[u][0] = par;
	mx[u][0] = w;
	sum[u][0] = w;
	for (int i = 1; i < 22; i++)
	{
		int v = pth[u][i - 1];
		pth[u][i] = pth[v][i - 1];
		mx[u][i] = max(mx[v][i - 1], mx[u][i - 1]);
		sum[u][i] = sum[v][i - 1] + sum[u][i - 1];
	}
}
int get(int u, ll w)
{
	int res = 0;
	for (int i = 21; i >= 0; i--)
	{
		if (lvl[u] >= (1 << i) && sum[u][i] <= w)
		{
			w -= sum[u][i];
			res += (1 << i);
			u = pth[u][i];
		}
	}
	return res;
}
int main()
{
	IO;
	lvl[1] = 1;
	ll qq, t, r, w, last = 0, p, q, cnt = 1;
	cin >> qq;
	while (qq--)
	{
		cin >> t >> p >> q;
		r = (p ^ last);
		w = (q ^ last);
		if (t == 1)
			add(++cnt, r, w);
		else
		{
			last = get(r, w);
			cout << last << '\n';
		}
	}
}
