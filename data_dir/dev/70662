// start of CP 2.0
#include <bits/stdc++.h>
 
//____By:sirjan13____
 
#define ll long long int
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll
 
inline int sbt(int x){return __builtin_popcount(x);}
 
using namespace std;
 
#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 1003 
int dp[N][N][2];
 
void pprint(int i, int j, int k) {
    if(i == 1 && j == 1) return;
    if(i > 1 && j > 1) {
        if(dp[i - 1][j][k] < dp[i][j - 1][k]) {
            pprint(i - 1, j, k);
            cout << 'D';
        }
        else {
            pprint(i, j - 1, k);
            cout << 'R';
        }
    }
    else if(i > 1) {
        pprint(i - 1, j, k);
        cout << 'D';
    }
    else if(j > 1) {
        pprint(i, j - 1, k);
        cout << 'R';
    }
}
 
int main() {
    fast_io()
    
    int n;
    pi poszero = mp(-1, -1);
    cin >> n; 
    bool zero = 0;
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= n; j++) {
            int x;
            cin >> x;
            if(!x) {
                zero = 1;
                poszero = mp(i, j);
            }
            while(x && !(x % 2)) {
                dp[i][j][0]++;
                x /= 2;
            }
            while(x && !(x % 5)) {
                dp[i][j][1]++;
                x /= 5; 
            }
            for(int k = 0; k < 2; k++) {
                if(i > 1 && j > 1) {
                    dp[i][j][k] += min(dp[i - 1][j][k], dp[i][j - 1][k]);
                }
                else if(i > 1) {
                    dp[i][j][k] += dp[i - 1][j][k];
                }
                else if(j > 1) {
                    dp[i][j][k] += dp[i][j - 1][k];
                }
            }
        }
    }
    
    int res = min(dp[n][n][0], dp[n][n][1]);
    if(zero && res) {
        cout << 1 << endl;
        for(int i = 1; i < poszero.fi; i++) {
            cout << 'D';
        }
        for(int j = 1; j < n; j++) {
            cout << 'R';
        }
        for(int i = poszero.fi; i < n; i++) {
            cout << 'D';
        }
        exit(0);
    }
    cout << res << endl;
    if(dp[n][n][0] == res) {
        pprint(n, n, 0);
    }
    else {
        pprint(n, n, 1);
    }
    
	return 0;
}
