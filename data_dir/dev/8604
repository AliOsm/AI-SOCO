#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-8

int n, m, k, u, v, fa1, fa2;
int a[10010], b[10010], fa[10010], num[10010];
bool flag[10010];

int getFa(int x) {
	if (fa[x] == x) return x;
	return fa[x] = getFa(fa[x]);
}

int main() {
	memset(flag, 0, sizeof(flag));
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 1; i <= n; i++) {
		fa[i] = i;
		num[i] = 1;
	}
	for (int i = 0; i < k; i++)
		scanf("%d", &a[i]);
	for (int i = 0; i < m; i++) {
		scanf("%d%d", &u, &v);
		fa1 = getFa(u);
		fa2 = getFa(v);
		if (fa1 != fa2) {
			num[fa2] += num[fa1];
			fa[fa1] = fa2;
		}
	}
	for (int i = 0; i < k; i++) {
		b[i] = num[getFa(a[i])];
		flag[getFa(a[i])] = 1;
	}
	sort(b, b+k);
	for (int i = 1; i <= n; i++)
		if (!flag[getFa(i)]) {
			b[k-1] += num[getFa(i)];
			flag[getFa(i)] = 1;
		}
	int ans = -m;
	for (int i = 0; i < k; i++)
		ans += b[i] * (b[i]-1) / 2;
	printf("%d\n", ans);
	return 0;
}
