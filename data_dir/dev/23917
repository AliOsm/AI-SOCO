/* practice with Dukkha */
#include <stdio.h>

#define M	1000000
#define W	1000000
#define INF	0x3f3f3f3f

int aa[W], bb[W];

void solve(int m, int w) {
	static int qq[W];
	int head, cnt, k, j;

	k = w - m + 1, head = cnt = 0;
	for (j = 0; j < w; j++) {
		int a;

		if (j < m) {
			while (cnt && aa[qq[head + cnt - 1]] <= aa[j])
				cnt--;
			qq[head + cnt++] = j;
		}
		while (cnt && qq[head] <= j - k)
			head++, cnt--;
		a = aa[qq[head]];
		if ((j >= m || j < w - m) && a < 0)
			a = 0;
		bb[j] = a;
	}
}

int main() {
	static long long ss[W];
	int n, w, j;

	scanf("%d%d", &n, &w);
	while (n--) {
		int m;

		scanf("%d", &m);
		for (j = 0; j < m; j++)
			scanf("%d", &aa[j]);
		if (m + m <= w) {
			solve(m, m + m);
			for (j = m + m - 1; j > 0; j--)
				bb[j] -= bb[j - 1];
			for (j = 0; j < m; j++)
				ss[j] += bb[j];
			for (j = m + 1; j < m + m; j++)
				ss[w - m - m + j] += bb[j];
		} else {
			solve(m, w);
			for (j = w - 1; j > 0; j--)
				bb[j] -= bb[j - 1];
			for (j = 0; j < w; j++)
				ss[j] += bb[j];
		}
	}
	printf("%lld", ss[0]);
	for (j = 1; j < w; j++)
		printf(" %lld", ss[j] += ss[j - 1]);
	printf("\n");
	return 0;
}
