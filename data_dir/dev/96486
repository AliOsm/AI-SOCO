//      ——By DD_BOND

#include<bits/stdc++.h>

#define fi first
#define se second
#define MP make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define pi 3.1415926535898
#define lowbit(a)  (a&(-a))
#define lson l,(l+r)/2,rt<<1
#define rson (l+r)/2+1,r,rt<<1|1
#define Min(a,b,c)  min(a,min(b,c))
#define Max(a,b,c)  max(a,max(b,c))
#define debug(x)  cerr<<#x<<"="<<x<<"\n";

//#pragma GCC optimize(3)
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

using namespace std;

typedef long long ll;
typedef pair<int,int> P;
typedef pair<ll,ll> Pll;
typedef unsigned long long ull;

const int seed=131;
const ll LLMAX=2e18;
const int MOD=1e9+7;
const double eps=1e-8;
const int MAXN=1e6+10;
const int hmod1=0x48E2DCE7;
const int hmod2=0x60000005;

inline ll sqr(ll x){ return x*x; }
inline int sqr(int x){ return x*x; }
inline double sqr(double x){ return x*x; }
ll gcd(ll a,ll b){ return b==0? a: gcd(b,a%b); }
ll exgcd(ll a,ll b,ll &x,ll &y){ ll d; (b==0? (x=1,y=0,d=a): (d=exgcd(b,a%b,y,x),y-=a/b*x)); return d; }
ll qpow(ll a,ll n){ll sum=1;while(n){if(n&1)sum=sum*a%MOD;a=a*a%MOD;n>>=1;}return sum;}
inline int dcmp(double x){  if(fabs(x)<eps) return 0;   return (x>0? 1: -1); }

vector<int>G[MAXN];
vector<pair<vector<int>,int> >query[MAXN];
int deep[MAXN],ans[MAXN],vis[MAXN],par[MAXN];

void dfs(int u,int fa){
	par[u]=fa;
	deep[u]=deep[fa]+1;
	for(int i=0;i<(int)G[u].size();i++){
		int v=G[u][i];
		if(v!=fa)	dfs(v,u);
	}
}

void solve(int u,int fa){
	vis[u]=1;
	for(int i=0;i<(int)query[u].size();i++){
		int f=1;
		for(int j=0;j<(int)query[u][i].fi.size();j++){
			int cur=query[u][i].fi[j];
			if(!vis[cur]&&!vis[par[cur]])	f=0;
		}
		ans[query[u][i].se]=f;
	}
	for(int i=0;i<(int)G[u].size();i++){
		int v=G[u][i];
		if(v!=fa)	solve(v,u);
	}
	vis[u]=0;
}

int main(void)
{
    ios::sync_with_stdio(false);    cin.tie(0);   cout.tie(0);   
    //freopen("/Users/dd_bond/My_Mac/Resource/Project__C++/testdata.in","r",stdin);
    //freopen("/Users/dd_bond/My_Mac/Resource/Project__C++/testdata.out","w",stdout);
 	int n,m;	cin>>n>>m;
 	for(int i=1;i<n;i++){
 		int u,v;	cin>>u>>v;
 		G[u].pb(v),G[v].pb(u);
 	}
 	dfs(1,0);
 	for(int i=0;i<m;i++){
 		int k,u=0;	cin>>k;
 		vector<int>st;
 		for(int j=0;j<k;j++){
 			int v;	cin>>v;		st.pb(v);
 			if(deep[u]<deep[v])	u=v;
 		}
 		query[u].pb(MP(st,i));
 	}
 	solve(1,0);
 	for(int i=0;i<m;i++)	cout<<(ans[i]?"YES":"NO")<<endl;
    return 0;
}