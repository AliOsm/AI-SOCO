#include<bits/stdc++.h>
using namespace std;
map<int, int>mp;
int main()
{
    mp[3]= 1;
    mp[7]= 1;
    mp[15]= 5;
    mp[31]= 1;
    mp[63]= 21;
    mp[127]= 1;
    mp[255]= 85;
    mp[511]= 73;
    mp[1023]= 341;
    mp[2047]= 89;
    mp[4095]= 1365;
    mp[8191]= 1;
    mp[16383]= 5461;
    mp[32767]= 4681;
    mp[65535]= 21845;
    mp[131071]= 1;
    mp[262143]= 87381;
    mp[524287]= 1;
    mp[1048575]= 349525;
    mp[2097151]= 299593;
    mp[4194303]= 1398101;
    mp[8388607]= 178481;
    mp[16777215]= 5592405;
    mp[33554431]= 1082401;
    int q, n;
    scanf("%d", &q);
    while(q--)
    {
        scanf("%d", &n);
        if(mp[n])
        {
            printf("%d\n", mp[n]);
            continue;
        }
        bool f= 0;
        for(int i=2; i<=25 && !f; i++)
        {
            int m= (1<<(i)) -1;
            if(n==m)
            {
                f= 1;
                int mx= -1;
                for(int j=1; j<n; j++)
                    mx= max(__gcd(j&n, j^n), mx);
                mp[n]= mx;
                printf("%d\n", mx);
                break;
            }
        }
        if(!f)
        {
            int strt;
            for(int i=25; i>=0; i--)
            {
                if(n&(1<<(i)))
                {
                    strt= i;
                    break;
                }
            }
            int res= 0;
            for(int i=strt; i>=0; i--)
            {
                if(!(n&(1<<(i))))
                    res|= (1<<(i));
            }
            mp[n]= __gcd(n^res, n&res);
            printf("%d\n", __gcd(n^res, n&res));
        }
    }

    return 0;
}
