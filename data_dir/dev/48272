#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define fi first
#define se second

const int maxN = 1 << 18;

vector<int> a[maxN];
int p[maxN];

int findSet(int v) {
    if (v < 0 || a[v].size()) {
        return v;
    }
    return p[v] = findSet(p[v]);
}

int main() {
    for (int i = 0; i < maxN; i++) {
        p[i] = i - 3;
    }
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) {
        int x;
        cin >> x;
        a[x].push_back(i);
    }
    vector<int> ans;
    int cur = 0;
    for (int i = 0; i < n; i++) {
        cur = findSet(cur);
        if (cur < 0 || a[cur].size() == 0) {
            cout << "Impossible" << endl;
            return 0;
        }
        ans.push_back(a[cur].back());
        a[cur].pop_back();
        cur++;
    }
    cout << "Possible" << endl;

    for (auto x : ans) {
        cout << x << " ";
    }
    cout << endl;
    return 0;
}
