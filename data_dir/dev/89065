#include<iostream>
#include<cstdio>

#include<string>
#include<vector>
#include<set>
#include<map>
#include<unordered_map>
#include<queue>
#include<deque>
#include<stack>

#include<iomanip>
#include<algorithm>
#include<cstring>
#include<ctime>
#include<cassert>

using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); ++i)
#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define sz(v) (int)(v.size())

template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }

typedef long long li;
typedef unsigned long long uli;
typedef long double ld;
typedef pair<int, int> pt;

const int N = 509;
const int logN = 20;
const int sqrN = 450;
const int MOD = 100000;
const int INF = 1e9;
const li INF64 = 1e18;
const ld PI = 3.1415926535897932384626433832795;
const ld eps = 1e-9;

int dx[] = {0, 0, -1, 1};
int dy[] = {-1, 1, 0, 0};

int n, m;
char a[N][N];
int dp[N][29][29];
pt  p[N][29][29];// крa пер
int dd[N][29][29];


int main(){
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
     
    srand(time(NULL));
    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;  
    
    
    cin >> n >> m;
    forn(i, n)
            scanf("%s", &a[i]);

    
    for(int i = 0; i < n; ++i)
        forn(c1, 26)
            forn(c2, 26){
                forn(j, m){
                    if(a[i][j] - 'a' != c1 && !(j & 1))
                        ++dd[i][c1][c2];
                    if(a[i][j] - 'a' != c2 && j & 1)
                        ++dd[i][c1][c2];
                }
            }

    forn(i, 26)
        forn(j, 26)
            dp[0][i][j] = (i == j? INF : dd[0][i][j]);

    for(int i = 1; i < n; ++i)
        forn(c1, 26)
            forn(c2, 26){
                dp[i][c1][c2] = INF;
                forn(cc1, 26)
                    forn(cc2, 26)
                        if(dp[i][c1][c2] > dp[i - 1][cc1][cc2] + dd[i][c1][c2] && c1 != cc1 && c2 != cc2 && cc1 != cc2 && c1 != c2){
                            dp[i][c1][c2] = dp[i - 1][cc1][cc2] + dd[i][c1][c2];
                            p[i][c1][c2] = mp(cc1, cc2);
                        }
            }
    
    pt cur = mp(0, 0);
    forn(i, 26)
        forn(j, 26)
            if(dp[n - 1][i][j] < dp[n - 1][cur.X][cur.Y])
                cur = mp(i, j);

    cout << dp[n - 1][cur.X][cur.Y] << endl;
    for(int i = n - 1; i >= 0; --i){
        forn(j, m)
            a[i][j] = (j & 1? char(cur.Y + 'a') : char(cur.X + 'a'));
        cur = p[i][cur.X][cur.Y];
    }

    forn(i, n){
        forn(j, m)
            cout << a[i][j];
        cout << endl;
    }
    return 0;
}