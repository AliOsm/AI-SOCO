#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

int N;
int in[305];

bool check(LL x) {
    REP(i, N) {
        if (x % in[i]) {
            return false;
        }
    }

    LL cnt = 1;
    for (int i = 2; 1LL * i * i <= x; i++) {
        if (x % i == 0) {
            int temp = 1;
            while (x % i == 0) {
                x /= i;
                temp++;
            }
            cnt *= temp;
        }
    }
    if (x > 1) cnt *= 2;
    cnt -= 2;
    return cnt == N;
}

bool is_prime(int x) {
    for (int i = 2; i * i <= x; i++)
        if (x % i == 0) return false;
    return true;
}

void solve_test() {
    cin >> N;
    REP(i, N) cin >> in[i];
    sort(in, in + N);
    if (N == 1) {
        if (is_prime(in[0])) {
            cout << 1LL * in[0] * in[0] << endl;
        } else {
            cout << -1 << endl;
        }
    } else {
        if (check(1LL * in[0] * in[N - 1])) {
            cout << 1LL * in[0] * in[N - 1] << endl;
        } else {
            cout << -1 << endl;
        }
    }
}

int main() {
    int Test;
    cin >> Test;
    REP(t, Test) {
        solve_test();
    }

    return 0;
}
