#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define x first
#define y second
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define PI (atan(1)*4)
#define mp make_pair
using namespace std;
const int maxn = 2e5 + 7;
int imp[maxn], len[maxn];
set<int> adjlist[maxn];
vector< pair<int, int> > v;
int ans[maxn], curval = 0, done[maxn];

int n, m, k;

void solve(int cur) {
	if (done[cur] == 1 || imp[cur] == 0)
		return;
	queue<int> q;
	q.push(cur);
	imp[cur] = 0;
	done[cur] = 1;
	len[cur] = -10;
	while (!q.empty()) {
		int cur = q.front();
		q.pop();
		curval--;
		for (auto u : adjlist[cur]) {
			int nxt = u;
			len[nxt]--;
			adjlist[nxt].erase(cur);
			if (done[nxt] == 1 || imp[nxt] == 0 || len[nxt] >= k)
				continue;
			q.push(nxt);
			done[nxt] = 1;
			imp[nxt] = 0;
			len[nxt] = -10;

		}
	}
}

int main()
{
	fastread;
	cin >> n >> m >> k;
	v.resize(m);
	curval = n;
	for (int i = 1; i <= n; i++)
		imp[i] = 1;
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		v[i] = {x, y};
		adjlist[x].insert(y);
		adjlist[y].insert(x);
		len[x]++;
		len[y]++;
	}
	for (int i = 1; i <= n; i++) {
		if (len[i] < k)
			solve(i);
	}
	ans[m] = curval;
	for (int i = m - 1; i > 0; i--) {
		int x = v[i].x, y = v[i].y;
		adjlist[x].erase(y);
		adjlist[y].erase(x);
		if (imp[x])
			len[y]--;
		if (imp[y])
			len[x]--;
		if (len[y] < k)
			solve(y);
		if (len[x] < k)
			solve(x);
		ans[i] = curval;

	}
	for (int i = 1; i <= m; i++)
		cout << ans[i] << '\n';
	return 0;
}