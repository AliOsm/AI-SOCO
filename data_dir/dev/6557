#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e5 + 5;

#define dbg(a) cout << "-> " << __LINE__ << ": " << #a << " = " << a << endl

struct hash_pair { 
    template <class T1, class T2> 
    size_t operator()(const pair<T1, T2>& p) const
    { 
        auto hash1 = hash<T1>{}(p.first); 
        auto hash2 = hash<T2>{}(p.second); 
        return hash1 ^ hash2; 
    } 
}; 

bool vis[MAX];
set<int> st;
unordered_map<pair<int, int>, bool, hash_pair> mp;

void dfs (int u) {
    vis[u] = true;
    st.erase(u);
    int p = 0;
    while (true) {
        auto it = st.upper_bound(p);
        if (it == st.end()) {
            break;
        }
        int v = *it;
        if (mp.find({u, v}) == mp.end()) {
            dfs(v);
        }
        p = v;
    }
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);
    for (int i = 0; i < m; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        --u, --v;
        mp[{u, v}] = mp[{v, u}] = true;
    }
    for (int i = 0; i < n; i++) {
        st.insert(i);
    }
    int ans = -1;
    for (int i = 0; i < n; i++) {
        if (!vis[i]) {
            dfs(i);
            ++ans;
        }
    }
    printf("%d\n", ans);
    return 0;
}

