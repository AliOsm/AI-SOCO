#include <bits/stdc++.h>
using namespace std;

#define VIC ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;
#define matrix vector<vector<ll>>

const int N = 1e3 + 2;

int main()
{
    VIC
    pair<int, int> a, b;
    int x, cnta[N], cntb[N], mini = 0, maxi = 0, y;
    cin >> a.first >> b.first >> a.second >> b.second >> x;
    y = x;
    for (int i = 0; i < a.first; i++)
        cnta[i] = a.second;
    for (int j = 0; j < b.first; j++)
        cntb[j] = b.second;
    for (int i = 0; i < a.first && x > 0; i++)
    {
        int g = min(cnta[i] - 1, x);
        x -= g;
        cnta[i] -= g;
    }
    for (int i = 0; i < b.first && x > 0; i++)
    {
        int g = min(cntb[i] - 1, x);
        x -= g;
        cntb[i] -= g;
    }
    for (int i = 0; i < a.first && x > 0; i++)
        if (cnta[i] > 0)
            cnta[i]--, x--;
    for (int i = 0; i < b.first && x > 0; i++)
        if (cntb[i] > 0)
            cntb[i]--, x--;
    for (int i = 0; i < a.first; i++)
        mini += cnta[i] == 0;
    for (int i = 0; i < b.first; i++)
        mini += cntb[i] == 0;
    for (int i = 0; i < a.first; i++)
        cnta[i] = a.second;
    for (int j = 0; j < b.first; j++)
        cntb[j] = b.second;
    x = y;
    if (b.second < a.second)
    {
        for (int i = 0; i < b.first; i++)
        {
            if (x < cntb[i])
                break;
            x -= cntb[i];
            maxi++;
        }
        for (int i = 0; i < a.first; i++)
        {
            if (x < cnta[i])
                break;
            x -= cnta[i];
            maxi++;
        }
    }
    else
    {
        for (int i = 0; i < a.first; i++)
        {
            if (x < cnta[i])
                break;
            x -= cnta[i];
            maxi++;
        }
        for (int i = 0; i < b.first; i++)
        {
            if (x < cntb[i])
                break;
            x -= cntb[i];
            maxi++;
        }
    }
    cout << mini << ' ' << maxi;
    return 0;
}