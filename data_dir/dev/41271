#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <bitset>
#include <string>
#include <vector>
#include <algorithm>
#include <ctime>
#include <queue>
#include <cstring>
#include <set>
#include <map>
#include <sstream>
#include <cmath>
#include <fstream>
#include <list>
using namespace std;
#define rp(i,n) for(int (i)=0;(i)<(n);++(i))
#define pb push_back
#define L(s) (int)s.size()
#define mp make_pair
#define pii pair<int,int>
#define x first 
#define y second
#define inf 1000000000
#define VI vector<int>
#define ll long long
#define all(s) (s).begin(),(s).end()
#define C(u) memset((u),0,sizeof((u)))
#define ull unsigned ll
int a[111];
int n,w,cur,sum;
int main()
{
	cin>>n>>w;
	rp(i,n)
	{
		cin>>a[i];
		sum+=a[i];
	}
	if (w<=0||w>sum)
	{
		cout<<"No\n";
		return 0;
	}
	if (n==1)
	{
		if (w!=sum)
			cout<<"No\n";
		else
		{
			cout<<"Yes\n";
			rp(i,2*sum)
				cout<<1<<" ";
			cout<<endl;
		}
		return 0;
	}
	if (w==1 && *min_element(a,a+n)>1)
	{
		cout<<"No\n";
		return 0;
	}
	cout<<"Yes\n";
	if (w<*min_element(a,a+n))
	{
		int pos=min_element(a,a+n)-a;
		int ot=0; if (ot==pos) ++ot;
		cout<<ot+1<<" ";
		while(a[pos]+1>w)
		{
			cout<<pos+1<<" "<<pos+1<<" ";
			a[pos]--;
		}
		cout<<ot+1<<" ";
		a[ot]--;
		cout<<pos+1<<" ";
		while(1)
		{
			int j=0;
			while(j<n&&!(a[j]&&j!=pos))
				++j;
			if (j==n)
				break;
			cout<<j+1<<" "<<j+1<<" ";
			a[j]--;
		}
		cout<<pos+1<<" ";
		a[pos]--;
		while(a[pos])
		{
			cout<<pos+1<<" "<<pos+1<<" ";
			a[pos]--;
		}
		cout<<endl;
		return 0;
	}
	int pos=min_element(a,a+n)-a;
	int cnt=a[pos]-1;
	rp(i,cnt)
	{
		cout<<pos+1<<" "<<pos+1<<" ";
		a[pos]--;
		w--;
	}
	while(w>1)
	{
		int j=0;
		while(!(a[j]&&j!=pos))
			++j;
		cout<<j+1<<" "<<j+1<<" ";
		a[j]--;
		w--;
	}
	cout<<pos+1<<" ";
	while(1)
	{
		int j=0;
		while(j<n&&!(a[j]&&j!=pos))
			++j;
		if (j==n)
			break;
		cout<<j+1<<" "<<j+1<<" ";
		a[j]--;
	}
	cout<<pos+1<<endl;
	/*DO NOT DELETE THIS*/
	return 0;
}
