// KALAM
#include<bits/stdc++.h>

using namespace std;

const int N = 200000 + 77;
int n , m , P[N] , S[N] , A[N];
bool M[N];
vector < pair < int , int > > a[N];
void dfs(int v){
	M[v] = 1;
	for(auto x : a[v]){
		int u = x.first , id = x.second;
		if(M[u]){continue;}
		dfs(u);
		if(id < 0){A[- id] += - S[u];S[v] += S[u];}
		else{A[id] += S[u];S[v] += S[u];}
		S[u] = 0;
	}
}
int main(){
	scanf("%d" , & n);
	for(int i = 1;i <= n;i++){scanf("%d" , & S[i]);}
	scanf("%d" , & m);
	for(int i = 1;i <= m;i++){
		int v , u;scanf("%d %d" , & v , & u);
		a[v].push_back(make_pair(u , i));
		a[u].push_back(make_pair(v , - i));
	}
	for(int i = 1;i <= n;i++){
		if(M[i]){continue;}
		dfs(i);
		if(S[i] != 0){return ! printf("Impossible\n");}
	}
	printf("Possible\n");
	for(int i = 1;i <= m;i++){
		printf("%d\n" , A[i]);
	}
   return 0;
}