

// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

inline int in() {int a;scanf("%d",&a);return a;}
#define pb push_back
#define blz __builtin_clz
#define btz __builtin_ctz
#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define Size(x) ((x).size())
#define X first
#define Y second
#define endl "\n"

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 10;
const int MN = 1e5 + 10;

ll mx[MN];
ll sm , ans;
vector<pii>adj[MN];
int n;

void input()
{
	cin >> n;
	for(int i=0;i<n-1;++i){
		int a,b,c;
		cin >> a >> b >> c;
		--a,--b;
		sm += c;
		adj[a].pb(pii(b, c)) , adj[b].pb(pii(a,c));
	}
//	cout << sm << endl;
}

void dfs(int s,int pr)
{
	ll mx1=0,mx2=0,deg=0;
	for(int i=0;i<Size(adj[s]);++i){
		int v = adj[s][i].X , w = adj[s][i].Y;
		if(v == pr) continue;
		dfs(v,s);
		mx[s] = max(mx[s] , w+mx[v]);
		++deg;
		ans = max(ans , mx[s]);
	}
}

int main()
{
	boost;
	input();
	dfs(0 , -1);
	cout << 2ll*sm-mx[0] << endl;
	return 0;	
}
