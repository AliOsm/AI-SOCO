#include <bits/stdc++.h>
#include <stdio.h>
#include <cstdio>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
 
#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)
#define dbg(x) cerr << (#x) << " --> " << (x) << nxtl;
#define onlycin ios_base::sync_with_stdio(false); cin.tie(0) 
using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;
typedef double ld;
typedef tree<
pair < int, int >,
null_type,
less< pair < int, int > >,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
// find_by_order() order_of_key()
const int MAXN = (int)5e5+228;
const char nxtl = '\n';
const int mod = (int)1e9+9;
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int n, t[MAXN], dp[MAXN];

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	onlycin;
	cin >> n;
	rep(i,1,n) cin >> t[i];
	dp[1] = 20;
	cout << 20 << nxtl;
	rep(i,1,n-1) {
		dp[i+1] = dp[i]+20;
		int id = upper_bound(t+1,t+1+n,t[i+1]-90)-t;
		updmin(dp[i+1],dp[id-1]+50);
		id = upper_bound(t+1,t+1+n,t[i+1]-1440)-t;
		updmin(dp[i+1],dp[id-1]+120);
		cerr << dp[i+1] << nxtl;
		cout << dp[i+1]-dp[i] << nxtl;
	}

	return 0;
}