#include<bits/stdc++.h>
#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define dbg(...) do{cerr<<__LINE__<<": ";dbgprint(#__VA_ARGS__, __VA_ARGS__);}while(0);

using namespace std;

namespace std{template<class S,class T>struct hash<pair<S,T>>{size_t operator()(const pair<S,T>&p)const{return ((size_t)1e9+7)*hash<S>()(p.first)+hash<T>()(p.second);}};template<class T>struct hash<vector<T>>{size_t operator()(const vector<T> &v)const{size_t h=0;for(auto i : v)h=h*((size_t)1e9+7)+hash<T>()(i)+1;return h;}};}
template<class T>ostream& operator<<(ostream &os, const vector<T> &v){os<<"[ ";rep(i,v.size())os<<v[i]<<(i==v.size()-1?" ]":", ");return os;}template<class T>ostream& operator<<(ostream &os,const set<T> &v){os<<"{ "; for(const auto &i:v)os<<i<<", ";return os<<"}";}
template<class T,class U>ostream& operator<<(ostream &os,const map<T,U> &v){os<<"{";for(const auto &i:v)os<<" "<<i.first<<": "<<i.second<<",";return os<<"}";}template<class T,class U>ostream& operator<<(ostream &os,const pair<T,U> &p){return os<<"("<<p.first<<", "<<p.second<<")";}
void dbgprint(const string &fmt){cerr<<endl;}template<class H,class... T>void dbgprint(const string &fmt,const H &h,const T&... r){cerr<<fmt.substr(0,fmt.find(","))<<"= "<<h<<" ";dbgprint(fmt.substr(fmt.find(",")+1),r...);}
typedef long long ll;typedef vector<int> vi;typedef pair<int,int> pi;const int inf = (int)1e9;const double INF = 1e12, EPS = 1e-9;

int main(){
	cin.tie(0); cin.sync_with_stdio(0);
	
	map<char, char> p, q;
	p['A'] = 'A';
	p['b'] = 'd';
	p['H'] = 'H';
	p['I'] = 'I';
	p['M'] = 'M';
	p['o'] = 'o';
	p['O'] = 'O';
	p['p'] = 'q';
	p['T'] = 'T';
	p['U'] = 'U';
	p['v'] = 'v';
	p['V'] = 'V';
	p['w'] = 'w';
	p['W'] = 'W';
	p['X'] = 'X';
	p['x'] = 'x';
	p['Y'] = 'Y';
	
	if(0){
		p['m'] = 'm';
		p['n'] = 'n';
		p['u'] = 'u';
		p['i'] = 'i';
		p['l'] = 'l';
	}
	
	for(auto i : p){
		q[i.first]  = i.second;
		q[i.second] = i.first;
	}
	
	string s; cin >> s;
	bool ok = 1;
	rep(i, s.size()){
		if(s[i] != q[s[s.size() - 1 - i]]) ok = 0;
	}
	cout << (ok ? "TAK" : "NIE") << endl;
	
	
	return 0;
}