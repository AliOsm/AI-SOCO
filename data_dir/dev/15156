#include<bits/stdc++.h>
using namespace std;
long long a,b,c,d,i,e,f,g,n,m,k,l,t,x,y,z,ans,C[200005];
vector <long long> v[200005];
pair < pair < long long , long long > , long long > B[200005];
pair <long long,long long> D[200005];
void dfs(long long x,long long y,long long z) {
			B[x].first.first=z;
			B[x].second=x;

			for(long long i=0;i<v[x].size();i++) {
				if(v[x][i]==y) continue;
				dfs(v[x][i],x,z+1);
				B[x].first.second+=B[v[x][i]].first.second;
			}
			B[x].first.second--;
}
void dfs1(long long x,long long y,long long z) {
	if(C[x]==1) ans+=z;
	else z++;
	for(long long i=0;i<v[x].size();i++) {
		if(v[x][i]==y) continue;
		dfs1(v[x][i],x,z);
	}
}
int main() {
           cin>>n>>m;
           for(long long i=1;i<n;i++) {
        		cin>>a>>b;
        		v[a].push_back(b);
        		v[b].push_back(a);
		   }
		   dfs(1,0,1);
		   for(long long i=1;i<=n;i++) {
		   		D[i].second=i;
		   		D[i].first=B[i].first.first+B[i].first.second;
		   		//cout<<B[i].first.first<<"-"<<B[i].first.second<<" "<<D[i].first<<endl;
			}
		   sort(D+1,D+1+n);
		   for(long long i=n;i>=n-m+1;i--) {
		   		C[D[i].second]=1;
		   }

		   dfs1(1,0,0);
		   cout<<ans;
}