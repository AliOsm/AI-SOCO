#include<bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N=1e6;
ll n,k,a,b,q;

struct node
{
    ll f=0,s=0;
};

node st[N];

void update(int l,int r,int low,int high,int pos,int d)
{
    if(low>r || high<l)
        return;
    if(low==high)
    {
        st[pos].f+=d;
        st[pos].s+=d;
        st[pos].f=min(st[pos].f,a);
        st[pos].s=min(st[pos].s,b);
        return;
    }
    int mid=(low+high)/2;
    update(l,r,low,mid,2*pos+1,d);
    update(l,r,mid+1,high,2*pos+2,d);
    st[pos].f=st[2*pos+1].f+st[2*pos+2].f;
    st[pos].s=st[2*pos+1].s+st[2*pos+2].s;
}

ll get(int l,int r,int low,int high,int pos,bool check)
{
    if(low>r || high<l)
        return 0;
    if(low>=l && high<=r)
    {
        if(!check)
            return st[pos].s;
        else
            return st[pos].f;
    }
    ll mid=(low+high)/2;
    return (get(l,r,mid+1,high,2*pos+2,check)+get(l,r,low,mid,2*pos+1,check));
}

int main()
{
    cin>>n>>k>>a>>b>>q;
    while(q--)
    {
        ll t;
        cin>>t;
        if(t==1)
        {
            ll d,ai;
            cin>>d>>ai;
            d--;
            update(d,d,0,n-1,0,ai);
        }
        else
        {
            ll p;
            cin>>p;
            p--;
            cout<<get(0,p-1,0,n-1,0,0)+get(p+k,n-1,0,n-1,0,1)<<endl;
        }
    }
    return 0;
}
