#include<stdio.h>
#include<algorithm>

using namespace std;
#define N 10010
#define inf 1000000000

char mp[110][N];
int cur[N], sum[N];

int n, m;
void find(int i, int st) {
	cur[st] = 0;
	for(int j = (st + 1) % m; j != st; j = (j + 1) % m) {
		if(mp[i][j] == '1')
			cur[j] = 0;
		else
			cur[j] = cur[(j - 1 + m) % m] + 1;
	}
	for(int j = (st - 1 + m) % m; j != st; j = (j - 1 + m) % m) {
		if(mp[i][j] == '1')
			cur[j] = 0;
		else
			cur[j] = min(cur[j], cur[(j + 1) % m] + 1);
	}
}
int main() {
	int ans = 0;
	scanf("%d%d", &n, &m);
	for(int i = 0; i < n; i ++) {
		bool flag = false;
		scanf("%s", mp[i]);
		for(int j = 0; j < m; j ++) {
			if(mp[i][j] == '1')
				flag = true;
		}
		if(flag == false) {
			ans = -1;
		}
	}
	if(ans == -1)		return puts("-1"), 0;
	for(int i = 0; i < n; i ++) {
		int j;
		for(j = 0; j < m && mp[i][j] == '0'; j ++);
		find(i, j);
		for(j = 0; j < m; j ++)		sum[j] += cur[j];
	}
	ans = inf;
	for(int j = 0; j < m; j ++)
		ans = min(sum[j], ans);
	printf("%d\n", ans);
	return 0;
}

