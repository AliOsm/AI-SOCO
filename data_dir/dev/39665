#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll N=1e5+5;
bool lucky(ll n){
    string s=to_string(n);
    for(auto &ch:s)if(ch!='4' && ch!='7')return 0;
    return 1;
}
ll par[N],siz[N];
ll dsu_parent(ll node){
    if(node==par[node])return node;
    return par[node]=dsu_parent(par[node]);
}
void dsu_union(ll a,ll b){
    a=dsu_parent(a);
    b=dsu_parent(b);
    if(a==b)return;
    if(siz[a]<siz[b])swap(a,b);
    par[b]=a;
    siz[a]+=siz[b];
}
int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    ll n;cin>>n;
    for(ll i=1;i<=n;i++)par[i]=i,siz[i]=1;
    for(ll i=0;i<n-1;i++){
        ll u,v,w;cin>>u>>v>>w;
        if(lucky(w))continue;
        dsu_union(u,v);
    }
    ll ans=0;
    for(ll val,i=1;i<=n;i++){
        val=n - siz[dsu_parent(i)];
        ans+=(val*(val-1));
    }
    cout<<ans;
}
