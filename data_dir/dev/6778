#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using OS = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long

int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    int n;
    cin >> n;
    while (n--) {
        string s;
        cin >> s;

        if (s[0] == 'R' && s[1] >= '0' && s[1] <= '9' && s.find('C') != -1) {
            int i = 1;
            while (s[i] >= '0' && s[i] <= '9') i++;
            int x = 0;
            for (int j = i + 1; j < s.size(); j++) {
                x *= 10;
                x += (s[j] - '0');
            }
            string o;
            while (x) {
                if(x % 26) {
                    o += (x % 26 - 1 + 'A');
                } else {
                    o += 'Z';
                    x--;
                }
                x /= 26;
            }
            reverse(o.begin(), o.end());
            cout << o << s.substr(1, i - 1) << '\n';

        } else {
            int i = 0;
            while (s[i] >= 'A' && s[i] <= 'Z') i++;

            cout << "R" << s.substr(i) << "C";
            int x = 0, b = 1;
            for (int j = i - 1; j >= 0; j--) {
                x += (s[j] - 'A' + 1) * b;
                b *= 26;
            }
            cout << x << '\n';
        }
    }

    return 0;
}
