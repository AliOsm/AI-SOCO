#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>


using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pii;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const int maxN = 2e5 + 5;

int n, arr[maxN];
pii pref[maxN], suf[maxN];

int main() {
	ios_base::sync_with_stdio(0);
	cin>>n;
	REP(i, n) cin>>arr[i];
	
	pref[0] = pii(0, arr[0]);
	RI(i, n - 1) {
		pii p = pref[i - 1];
		if (p.nd >= arr[i]) {
			p.st += (p.nd - arr[i] + 1);
			p.nd = p.nd + 1;
		} else {
			p.nd = arr[i];
		}
		pref[i] = p;
		//cout<<pref[i].st<<" "<<pref[i].nd<<endl;
	}
	suf[n - 1] = pii(0, arr[n - 1]);
	FORD(i, n - 2, 0) {
		pii p = suf[i + 1];
		if (p.nd >= arr[i]) {
			p.st += (-arr[i] +p.nd + 1);
			p.nd = p.nd + 1;
		} else p.nd = arr[i];
		suf[i] = p;
		//cout<<suf[i].st<<" "<<suf[i].nd<<endl;
	}
	ll ans = inf;
	REP(i, n) {
		int x = min(suf[i].nd, pref[i].nd);
		//cout<<i<<" "<<suf[i].st + pref[i].st - (x - arr[i])<<endl;
		ans = min(ans, (ll)suf[i].st + pref[i].st - (x - arr[i]));
	}
	cout<<max(ans, 0LL)<<endl;
	return 0;
}
