#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

int lst[26],nxt[26][200005],dp[255][255][255],n,q;
string s;
string s1[4];

int main()
{ios_base::sync_with_stdio(false);
cin>>n>>q;
cin>>s;
rep(i,0,25)lst[i]=2e5;
rep(i,0,25)rep(j,0,200004)nxt[i][j]=2e5;
ren(i,n,1)
{
	rep(j,0,25)nxt[j][i]=lst[j];
	lst[s[i-1]-'a']=i;
}

rep(i,0,25)nxt[i][0]=lst[i];

rep(i,0,254)rep(j,0,254)rep(k,0,254)dp[i][j][k]=2e5;

dp[0][0][0]=0;
//ol(nxt[2][0]);on;
rep(ii,0,q-1)
{
	char qq,c;
	int x;
	cin>>qq>>x;
	int c1[4]={0};
	rep(i,1,3)c1[i]=s1[i].length();
	if(qq=='+')
	{
		cin>>c;
		if(x==1)
		{
			rep(i,0,c1[2])
			{
				rep(j,0,c1[3])
				{
					int kk=nxt[c-'a'][dp[c1[1]][i][j]];
					if(i)kk=min(kk,nxt[s1[2][i-1]-'a'][dp[c1[1]+1][i-1][j]]);
					if(j)kk=min(kk,nxt[s1[3][j-1]-'a'][dp[c1[1]+1][i][j-1]]);
					dp[c1[1]+1][i][j]=kk;
				}
			}
		}
		else if(x==2)
		{
			rep(i,0,c1[1])
			{
				rep(j,0,c1[3])
				{
					int kk=nxt[c-'a'][dp[i][c1[2]][j]];
					//if(ii==3){ol(kk);on;}
					if(i)kk=min(kk,nxt[s1[1][i-1]-'a'][dp[i-1][c1[2]+1][j]]);
					//if(ii==3){ol(kk);on;}
					if(j)kk=min(kk,nxt[s1[3][j-1]-'a'][dp[i][c1[2]+1][j-1]]);
					//if(ii==3){ol(kk);on;}
//					if(ii==3)
//					{
//						o2(i,j);os;ol(kk);on;
//					}
					dp[i][c1[2]+1][j]=kk;
				}
			}
		}
		else
		{
			rep(i,0,c1[1])
			{
				rep(j,0,c1[2])
				{
					int kk=nxt[c-'a'][dp[i][j][c1[3]]];
					if(i)kk=min(kk,nxt[s1[1][i-1]-'a'][dp[i-1][j][c1[3]+1]]);
					if(j)kk=min(kk,nxt[s1[2][j-1]-'a'][dp[i][j-1][c1[3]+1]]);
					dp[i][j][c1[3]+1]=kk;
				}
			}
		}
		s1[x]+=c;
	}
	else
	{
		if(x==1)
		{
			rep(i,0,c1[2])
			{
				rep(j,0,c1[3])
				dp[c1[1]][i][j]=2e5;
			}
		}
		else if(x==2)
		{
			rep(i,0,c1[1])
			{
				rep(j,0,c1[3])
				dp[i][c1[2]][j]=2e5;
			}
		}
		else
		{
			rep(i,0,c1[1])
			{
				rep(j,0,c1[2])
				dp[i][j][c1[3]]=2e5;
			}
		}
		s1[x].pop_back();
	}
//	rep(i,1,3)
//	{
//		ol(s1[i]);os;
//	}
//	os;
	int kk=dp[s1[1].length()][s1[2].length()][s1[3].length()];
//	ol(kk);on;
	if(kk<=n)
	{
		ol("YES\n");
	}
	else
	{
		ol("NO\n");
	}
}

return 0;
}


