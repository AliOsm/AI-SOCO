#include <bits/stdc++.h>
using namespace std;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl




typedef long long ll;
const ll mod = 1e9+7;
const int maxn = 1e6 + 5;



int n, m;
string s;
vector<int> g[maxn];
bool viz[maxn], act[maxn];
int indeg[maxn];
map<char,int> mp[maxn];

void dfs(int at) {
    viz[at]=true;
    act[at]=true;
    for (int to: g[at]) {
	if (act[to]) out(-1);
	if (viz[to]) continue;
	dfs(to);
    }
    act[at]=false;
}

void check_loop() {
    for (int i=0; i<n; i++) {
	if (!viz[i]) dfs(i);
    }
}


int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);
    cin>>n>>m;
    cin>>s;
    for (int i=0; i<m; i++) {
	int u,v; cin>>u>>v;
	--u; --v;
	indeg[v]++;
	g[u].push_back(v);
    }

    check_loop();

    for (int i=0; i<n; i++) {
	mp[i][s[i]]=1;
    }

    queue<int> qq;
    for (int i=0; i<n; i++) {
	if (indeg[i]==0) qq.push(i);
    }

    while (!qq.empty()) {
	int at = qq.front(); qq.pop();
	for (int to: g[at]) {
	    for (auto p: mp[at]) {
		mp[to][p.first]=max(mp[to][p.first], mp[at][p.first]+(s[to]==p.first));
	    }
	    if (--indeg[to] == 0) {
		qq.push(to);
	    }
	}
    }


    int res = 0;
    for (int i=0; i<n; i++) {
	for (auto p: mp[i]) {
	    res = max(res, p.second);
	}
    }

    cout<<res<<endl;
    return 0;
}
