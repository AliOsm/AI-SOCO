#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
#define F first
#define S second
#define sqr(x) ((x) * (x))
#define cub(x) ((x) * (x) * (x))
#define pii pair<int, int>
#define all(c) c.begin(), c.end()
#define tr(c, it) for(decltype (c.begin()) it = c.begin(); it != c.end(); it++)
#define forn(i, n) for(int i = 0; i < int(n); i++)
#define for1(i, n) for(int i = 1; i <= int(n); i++)
#define forN(i, x, n) for(int i = x; i < int(n); i++)
#define eps 1e-12
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define inf 2e9
#define sz 200100
#define M 1000000007
  

#define name "input"
#define isFile 0
 
typedef long long ll;
typedef long double ld;
 
void faster(){
	ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
	if(isFile){
		freopen(name".in", "r", stdin);
		freopen(name".out", "w", stdout);
    }
}
string s;
int main()
{
	faster();	
	int t, n, a;
	vector<int> ans;
	cin >> t;
	while(t--){
		ans.clear();
		cin >> s;
		n = s.size();
		forn(i, n)
			if(s[i] == 'o'){
				if((i + 2 < n && s[i + 1] == 'n' && s[i + 2] == 'e') && (i - 2 >= 0 && s[i - 1] == 'w' && s[i - 2] == 't'))
					ans.pb(i + 1);
				else
				if(i + 2 < n && s[i + 1] == 'n' && s[i + 2] == 'e')
					ans.pb(i + 2);	
				else
				if(i - 2 >= 0 && s[i - 1] == 'w' && s[i - 2] == 't')
					ans.pb(i);
			}
		cout << ans.size() << endl;
		forn(i, ans.size())
			cout << ans[i] << ' ';
		cout << endl;	
	}
 	return 0;					
}	