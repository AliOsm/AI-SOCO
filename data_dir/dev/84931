//be naame khodaa

#include <bits/stdc++.h>
#define pie pair <int, int> 

typedef long long ll;

using namespace std;

int seg[400005], prog[400005];
int l[100005], r[100005], q[100005];
int n, m;

void shift(int x)
{
	if (prog[x])
	{
		seg[2*x] |= prog[x];
		seg[2*x+1] |= prog[x];
		prog[2*x] |= prog[x];
		prog[2*x+1] |= prog[x];
		prog[x] = 0;
	}
}

int AND(int l, int r, int s=0, int e=n, int x=1)
{
	if (l <= s && e <= r)
		return seg[x];
	shift(x);
	int mid = (s + e)/2, ans = -1;
	if (l < mid)
		ans = AND(l, r, s, mid, 2*x);
	if (r > mid)
	{
		int k = AND(l, r, mid, e, 2*x+1);
		if (ans == -1) ans = k;
		else ans = ans&k;
	}
	return ans;
}

void OR(int l, int r, int q, int s=0, int e=n, int x=1)
{
	if (l <= s && e <= r)
	{
		prog[x] |= q;
		seg[x] |= q;
		return;
	}
	shift(x);
	int mid = (s + e)/2;
	if (l < mid)
		OR(l, r, q, s, mid, 2*x);
	if (r > mid)
		OR(l, r, q, mid, e, 2*x+1);
	seg[x] = seg[2*x] & seg[2*x+1];
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> l[i] >> r[i] >> q[i];
		l[i]--;
		OR(l[i], r[i], q[i]);
	}
	for (int i = 0; i < m; i++)
		if (AND(l[i], r[i]) != q[i])
			return (cout << "NO\n"), 0;
	cout << "YES\n";
	for (int i = 0; i < n; i++)
		cout << AND(i, i+1) << ' ';
	cout << endl;
    return 0;
}
