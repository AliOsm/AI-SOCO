#include <bits/stdc++.h>
using namespace std;
#define ll          long long
#define MOD         1000000007
#define ll          long long
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define endl        '\n'
int A[200005];
map<int,stack<int>> res;
map<int,int> mp;
priority_queue<pii> odd,even;
int getnext(int n)
{
    while(true)
    {
        if(!mp[n])
            break;
        n+=2;
    }
    return n;
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int n,m,i,nxt1=1,nxt2=2,ch=0,c1=0,c2=0;
    pii tmp;
    cin>>n>>m;
    for(i=0;i<n;i++)
    {
        cin>>A[i];
        mp[A[i]]++;
    }
    for(auto it=mp.begin();it!=mp.end();it++)
        if(it->F%2)
        {
            odd.push({it->S,it->F});
            c1+=it->S;
        }
        else
        {
            even.push({it->S,it->F});
            c2+=it->S;
        }
    while(c1>c2)
    {
        tmp=odd.top();
        odd.pop();
        tmp.F--;
        mp[tmp.S]--;
        c1--;
        if(tmp.F)
            odd.push(tmp);
        nxt2=getnext(nxt2);
        if(nxt2>m)
        {
            cout<<"-1";
            return 0;
        }
        res[tmp.S].push(nxt2);
        ch++;
        c2++;
        even.push({1,nxt2});
        mp[nxt2]++;
    }
    while(c1<c2)
    {
        tmp=even.top();
        even.pop();
        tmp.F--;
        mp[tmp.S]--;
        c2--;
        if(tmp.F)
            even.push(tmp);
        nxt1=getnext(nxt1);
        if(nxt1>m)
        {
            cout<<"-1";
            return 0;
        }
        res[tmp.S].push(nxt1);
        ch++;
        c1++;
        odd.push({1,nxt1});
        mp[nxt1]++;
    }
    while(true)
    {
        tmp=odd.top();
        if(tmp.F==1)
            break;
        odd.pop();
        tmp.F--;
        mp[tmp.S]--;
        odd.push(tmp);
        nxt1=getnext(nxt1);
        if(nxt1>m)
        {
            cout<<"-1";
            return 0;
        }
        res[tmp.S].push(nxt1);
        ch++;
        odd.push({1,nxt1});
        mp[nxt1]++;
    }
    while(true)
    {
        tmp=even.top();
        if(tmp.F==1)
            break;
        even.pop();
        tmp.F--;
        mp[tmp.S]--;
        even.push(tmp);
        nxt2=getnext(nxt2);
        if(nxt2>m)
        {
            cout<<"-1";
            return 0;
        }
        res[tmp.S].push(nxt2);
        ch++;
        even.push({1,nxt2});
        mp[nxt2]++;
    }
    cout<<ch<<endl;
    for(i=0;i<n;i++)
        if(res[A[i]].empty())
            cout<<A[i]<<" ";
        else
        {
            cout<<res[A[i]].top()<<" ";
            res[A[i]].pop();
        }
    return 0;
}
