#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
#define int long long
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define PI 3.14159265358979323846
const int MOD = 1e9 + 7 ;
const int EPS = 1e-9;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N=501010;
// int ask(int i,int j)
// {
//       cout<<"? "<<i<<" "<<j<<endl;
//       int x;
//       cin>>x;
//       return x;
// }
vector<int> a[N];
bool vis[N];
int cnt=0;
int c[N];
int cn=0;
void dfs(int x)
{
      if(vis[x]) return;
      c[x]=cnt;
      cn++;
      vis[x]=true;
      for(auto y:a[x])
      {
            dfs(y);
      }
}
int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      #endif
      int n,m;
      cin>>n>>m;
      for(int i=0;i<m;i++)
      {
            int k;
            cin>>k;
            int p[k];
            for(int j=0;j<k;j++)
            {
                  cin>>p[j];
            }
            for(int j=0;j<k-1;j++)
            {
                  a[p[j]].pb(p[j+1]);
                  a[p[j+1]].pb(p[j]);
            }
      }
      int b[n+1];
      for(int i=1;i<=n;i++)
      {
            if(!vis[i])
            {
                  cn=0;
                  dfs(i);
                  b[cnt]=cn;
                  cnt++;
            }
      }
      for(int i=1;i<=n;i++)
      {
            cout<<b[c[i]]<<" ";
      }
     //  int a[6]={4,8,15,16,23,42};
     //  map<int,pair<int,int>> ma;
     //  map<int,int> mp;
     //  map<int,int> moo;
     //  for(int i=0;i<6;i++)
     //  {
     //        mp[a[i]]++;
     //        for(int j=i+1;j<6;j++)
     //        {
     //              //cout<<a[i]*a[j]<<"\n";
     //              ma[a[i]*a[j]]={a[i],a[j]};
     //              moo[a[i]*a[j]]++;
     //        }
     //  }
     //  vector<int> ans;
     //  int b[4];
     //  b[0]=ask(1,2);
     //  b[1]=ask(2,3);
     //  b[2]=ask(3,4);
     //  b[3]=ask(4,5);
     //  //for(auto x:b) cout<<x<<" ";
     //  //return 0;
     //  int foo1=ma[b[0]].fi;
     //  int foo2=ma[b[0]].se;
     // // cout<<foo1<<" "<<foo2<<"\n";
     //  bool f=false;
     //  if(b[1]%foo1==0)
     //  {     
     //        ans.pb(foo2);
     //        ans.pb(foo1);
     //        int k1=b[1]/foo1;
     //        int k2=b[2]/k1;
     //        int k3=b[3]/k2;
     //        if(b[1]%foo1!=0||b[2]%k1!=0||b[3]%k2!=0||mp[k1]==0||mp[k2]==0||mp[k3]==0)
     //        {
     //              f=true;
     //        }
     //        ans.pb(k1);
     //        ans.pb(k2);
     //        ans.pb(k3);
     //  }
     //  else{
     //        ans.pb(foo1);
     //        ans.pb(foo2);
     //        int k1=b[1]/foo2;
     //        int k2=b[2]/k1;
     //        int k3=b[3]/k2;
     //        ans.pb(k1);
     //        ans.pb(k2);
     //        ans.pb(k3);
     //  }
     //  if(f)
     //  {
     //        ans.clear();
     //        ans.pb(foo1);
     //        ans.pb(foo2);
     //        int k1=b[1]/foo2;
     //        int k2=b[2]/k1;
     //        int k3=b[3]/k2;
     //        ans.pb(k1);
     //        ans.pb(k2);
     //        ans.pb(k3);
     //  }
     //  map<int,int> mo;
     //  for(auto x:ans)
     //  {
     //        mo[x]++;
     //  }
     //  for(int i=0;i<6;i++)
     //  {
     //        if(mo[a[i]]==0)
     //        {
     //              ans.pb(a[i]);
     //              break;
     //        }
     //  }
     //  cout<<"!"<<" ";
     //  for(auto x:ans)
     //  {
     //        cout<<x<<" ";
     //  }
     //  cout<<endl;

}  