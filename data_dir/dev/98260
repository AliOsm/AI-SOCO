/* *
 * We can brute force the number for one row and then from that we know every column and from them we know every other row too, so the number of times we pressed a row determines every other pressing. Complexity is 500*N*M
 * */
#include<bits/stdc++.h>
using namespace std;
int t[101][101];
int p[101][101];
int main() {
	int n,m;
	cin>>n>>m;
	for(int i=0;i<n;++i) {
		for(int j=0;j<m;++j) {
			cin>>t[i][j];
		}
	}
	
	bool van=false;int ans=-1;
	vector<int> ax, ay;
	vector<int> x(n), y(m);
	for(int k=0;k<=500;++k) {
		bool ok=true;
		int cans=k;
		
		x[0]=k;
		
		for(int j=0;j<m;++j) {
			y[j]=t[0][j]-x[0];
			ok&=y[j]>=0;
			cans+=y[j];
		}
		for(int i=1;i<n;++i) {
			x[i]=t[i][0]-y[0];
			ok&=x[i]>=0;
			cans+=x[i];
		}
		
		for(int i=0;i<n;++i) {
			for(int j=0;j<m;++j) {
				ok&=t[i][j]==x[i]+y[j];
			}
		}
		//cerr<<k<<": "<<ok<<" "<<cans<<"\n";
		if(ok) {
			if(van) {
				if(ans>cans) {
					ans=cans;
					ax=x;
					ay=y;
				}
			}
			else {
				van=true;
				ans=cans;
				ax=x;
				ay=y;
			}
		}
	}
	
	cout<<ans<<"\n";
	if(ans!=-1) {
		for(int i=0;i<n;++i) {
			while(ax[i]>0) {
				cout<<"row "<<i+1<<"\n";
				ax[i]--;
			}
		}
		for(int i=0;i<m;++i) {
			while(ay[i]>0) {
				cout<<"col "<<i+1<<"\n";
				ay[i]--;
			}
		}
	}
	return 0;
}
