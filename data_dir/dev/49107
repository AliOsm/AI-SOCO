#include <bits/stdc++.h>
 
#define rep(i, n)      for (int i = 0; i < (n); i++)
#define repr(i, n)     for (int i = (n) - 1; i >= 0; i--)
#define repe(i, l, r)  for (int i = (l); i < (r); i++)
#define reper(i, l, r) for (int i = (r) - 1; i >= (l); i--)
#define repi(i, l, r)  for (int i = (l); i <= (r); i++)
#define repir(i, l, r) for (int i = (r); i >= (l); i--)
#define range(a) a.begin(), a.end()
void init_io() { std::cin.tie(nullptr); std::ios::sync_with_stdio(false); std::cout << std::fixed << std::setprecision(15); }
 
using namespace std;
using ll = long long;

int main() { init_io();
  ll N, M, D; cin >> N >> M >> D;
  vector<ll> C(M); rep(i, M) cin >> C[i];
  ll sum = 0;
  vector<ll> X(M);
  rep(i, M) {
    X[i] = sum + (D - 1);
    sum += (D - 1) + C[i];
  }
  if (X[M - 1] + C[M - 1] > N) {
    X[M - 1] = N - C[M - 1];
  }
  repr(i, M - 1) {
    if (X[i] + C[i] > X[i + 1]) {
      X[i] = X[i + 1] - C[i];
    }
  }
  sum += D - 1;
  if (sum < N) {
    cout << "NO" << endl;
  } else {
    cout << "YES" << endl;
    vector<int> ans(N);
    rep(i, M) {
      rep(j, C[i]) ans[X[i] + j] = i + 1;
    }
    rep(i, N) cout << ans[i] << " \n"[i == N - 1];
  }
}
