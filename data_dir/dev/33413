////#if !defined(YCM) && 1
////#define _FORTIFY_SOURCE 0
//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
////#pragma GCC target("avx")
//////#pragma GCC optimize ("O3")
//////#pragma GCC target ("sse4")
////#include <stdio.h>
////#endif
//#include <unistd.h>
////#pragma GCC diagnostic ignored "-Wunused-result"
////#pragma GCC diagnostic ignored "-Wunused-function"
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define ull unsigned long long int
#define clr(a) memset(a,0,sizeof(a))
#define clr_(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define pii pair<int,int>
#define eps 1e-9
#define inf INT_MAX
#define pi acos(-1.0)
#define ff first
#define ss second
#define INF (ll)1e18
#define m_p make_pair
#define all(v) v.begin(),v.end()
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
ll lcm(ll a,ll b){return (a/__gcd(a,b))*b;}
ll bigmod(ll a,ll p,ll mod){ll ans=1;while(p){if(p&1)ans=ans*a%mod;a=a*a%mod;p>>=1;}return ans;}
ll power(ll x,ll n){if(n==0)return 1;else if(n%2==0){ll y=power(x,n/2);return y*y;}else return x*power(x,n-1);}

#ifdef shaft
     #define debug(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template < typename Arg1 >
    void __f(const char* name, Arg1&& arg1){
        cerr << name << " is " << arg1 << std::endl;
    }
    template < typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names+1, ',');
        cerr.write(names, comma - names) << " is " << arg1 <<endl;
        __f(comma+1, args...);
    }
#else
    #define debug(...)
#endif
const int N=(int)1e6+5;
const int mod=(int)1e9+7;
int n;
ll arr[N],cum[N];
double ans;
double func(int m){
    if(m > n) return -1.0;
    double temp = cum[m-1]+(double)arr[n];
    temp = (double)arr[n]-temp/(double)m;
    return temp;
}
void query(){
    int lo = 1, hi = n;
    double res = -1.0;
    while(lo <= hi){
        int mid = (lo+hi)/2;
        double p1 = func(mid), p2 = func(mid+1);
        debug(p1,p2,mid);
        if(p1 > p2){
            res = p1;
            hi = mid-1;
        }
        else{
            res = p2;
            lo = mid+1;
        }
    }
    ans = max(ans,res);
}
int main()
{
    ios_base::sync_with_stdio(false); cout.setf(ios::fixed); cout.precision(10); cout.tie(nullptr); cin.tie(nullptr);
    #ifdef shaft
        freopen("in.txt","r",stdin);
        //freopen("out.txt","w",stdout);
    #endif ///shaft
    int q;
    cin >> q;
    int flag = 0;
    while(q--){
        int typ;
        cin >> typ;
        if(typ == 1){
            ll x;cin >> x;
            arr[++n] = x;
            cum[n] = cum[n-1]+arr[n];
            flag = 0;
        }
        else{
            if(!flag)query(), flag = 1;
            cout << ans << endl;
        }
    }
    return 0;
}



