#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
#include <unordered_map>
#include <unordered_set>

using namespace std;
void Emsawy(){
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
}
#define V vector
#define MP make_pair
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) memset(v, d, sizeof(v))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sfll(x) scanf("%I64d", &x)
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y)
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z)
typedef long long ll;
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
ll suf(ll x) { return (x * (x + 1)) / 2; }
V<V<pair<int, int> > > adj;
const ll mod = 1e9 + 7, oo = 1e9;
ll n, m, c[300000], d[300000];
bool impo = 0;
ll valid(ll mid){
	for (int i = 0; i < n; i++){
		if (mid < 1900 && d[i] == 1) return 1;
		if (mid >= 1900 && d[i] == 2) return 2;
		mid += c[i];
	}
	return 0;
}
ll go(ll mid){
	for (int i = 0; i < n; i++){
		mid += c[i];
	}
	return mid;
}
int main()
{
	Emsawy();
	while (cin >> n){
		for (int i = 0; i < n; i++)
			sfll2(c[i], d[i]);

		ll s = -1e9, e = 1e9, res = -1;
		while (s <= e){
			ll mid = (s + e) / 2;
			ll me = valid(mid);
			if (me == 0) s = mid + 1, res = mid;
			else if (me == 2) e = mid - 1;
			else if (me == 1) s = mid + 1;
		}
		if (res == 1e9 || res == -1e9) cout << "Infinity" << endl;
		else if (valid(res) == 0) cout << go(res) << endl;
		else cout << "Impossible" << endl;

	}
	return 0;
}