#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC optimize(3)
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC target("sse3","sse2","sse")
#pragma GCC target("avx","sse4","sse4.1","sse4.2","ssse3")
#pragma GCC target("f16c")
#pragma GCC optimize("inline","fast-math","unroll-loops","no-stack-protector")
#pragma GCC diagnostic error "-fwhole-program"
#pragma GCC diagnostic error "-fcse-skip-blocks"
#pragma GCC diagnostic error "-funsafe-loop-optimizations"
#pragma GCC diagnostic error "-std=c++14"
#include "bits/stdc++.h"
//#include "ext/pb_ds/tree_policy.hpp"
//#include "ext/pb_ds/assoc_container.hpp"
#define PB push_back
#define PF push_front
#define LB lower_bound
#define UB upper_bound
#define fr(x) freopen(x,"r",stdin)
#define fw(x) freopen(x,"w",stdout)
#define iout(x) printf("%d\n",x)
#define lout(x) printf("%lld\n",x)
#define REP(x,l,u) for(ll x = l;x<u;x++)
#define RREP(x,l,u) for(ll x = l;x>=u;x--)
#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())
#define mst(x,a) memset(x,a,sizeof(x))
#define all(a) a.begin(),a.end()
#define PII pair<int,int>
#define PLL pair<ll,ll>
#define MP make_pair
#define sqr(x) ((x)*(x))
#define lowbit(x) (x&(-x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define se second
#define fi first
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl;
#define sz(x) ((int)x.size())
#define EX0 exit(0);

typedef  long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ld;
using namespace std;
typedef vector<ll> VLL;
typedef vector<int> VI;
const int block_size = 320;
typedef complex<ll> point;
const ll mod = 1e9+7;
const ll inf = 1e9+7;
const ld eps = 1e-9;
const db PI = atan(1)*4;
template<typename T>
inline int sign(const T&a) {
    if(a<0)return -1;
    if(a>0)return 1;
    return 0;
}

template<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}
template<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}

template<typename T> inline void in(T &x) {
    x = 0;
    T f = 1;
    char ch = getchar();
    while (!isdigit(ch)) {
        if (ch == '-') f = -1;
        ch = getchar();
    }
    while (isdigit(ch))  {
        x = x * 10 + ch - '0';
        ch = getchar();
    }
    x *= f;
}

ll twop(int x) {
    return 1LL<<x;
}

template<typename A,typename B > inline void in(A&x,B&y) {
    in(x);
    in(y);
}
template<typename A,typename B,typename C>inline void in(A&x,B&y,C&z) {
    in(x);
    in(y);
    in(z);
}
template<typename A,typename B,typename C,typename D> inline void in(A&x,B&y,C&z,D&d) {
    in(x);
    in(y);
    in(z);
    in(d);
}

namespace SOLVE {
    void main(){
    }
}


int main() {
#ifndef ONLINE_JUDGE
    fr("/Users/zhangqingchuan/Desktop/cp/cp/input.txt");
    fw("/Users/zhangqingchuan/Desktop/cp/cp/output.txt");
#endif
    
    
    
    
    map<int, int>cnt[3];
    string s[3];
    ll len,rounds,mx[3] = {0,0,0};
    cin>>rounds;
    REP(i,0,3)cin>>s[i];
    REP(i,0,3){
        for(auto ch:s[i]){cnt[i][ch]++;};
    }
    REP(i,0,3){
        REP(j,'a','z'+1){
            if(cnt[i][j]+rounds<=sz(s[i])){
                upmax(mx[i], cnt[i][j]+rounds);
                dbg(cnt[i][j]+rounds);
            }else{
                if(rounds > 1){
                    upmax(mx[i], sz(s[i]));
                    dbg((char)j);
                }else{
                    upmax(mx[i], sz(s[i])-1);
                    dbg((char)j);
                    dbg(sz(s[i])-1);
                }
            }
            dbg(mx[0]);
            dbg((char)j);
        }
        dbg(mx[0]);
        REP(j,'A','Z'+1){
            if(cnt[i][j]+rounds<=sz(s[i])){
                upmax(mx[i], cnt[i][j]+rounds);
            }else{
                if(rounds > 1){
                    upmax(mx[i], sz(s[i]));
                }else{
                    upmax(mx[i], sz(s[i])-1);
                }
            }
        }
    }
    
    std::vector<pair<ll,string>>v;
    v.PB(MP(mx[0],"Kuro"));
    v.PB(MP(mx[1],"Shiro"));
    v.PB(MP(mx[2],"Katie"));
    REP(i,0,3)dbg(mx[i]);
    sort(all(v));
    if(v[2].fi == v[1].fi){
        cout<<"Draw";
    }else{
        cout<<v.back().se;
    }
    
    
    SOLVE::main();
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    return 0;
}
