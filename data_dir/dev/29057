#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second

const int N=3010;
vll a(N);
int vis[N];

int idx=0;
vll cycles[N];

bool cmp(vll a,vll b){
	return *min_element(all(a))<*min_element(all(b));
}

void dfs(int node){
	cycles[idx].pb(node);
	vis[node]=1;
	if(!vis[a[node]]){
		dfs(a[node]);
	}
}
int ans=hell;
int mn=-1;
void dfs2(int node){
	if(node>mn){

		ans=min(node,ans);
	}
	vis[node]=1;
	if(!vis[a[node]]){
		dfs2(a[node]);
	}
}

void solve(){  
	int n;
	cin>>n;
	rep(i,1,n+1){
		cin>>a[i];
	}  
	rep(i,1,n+1){
		if(!vis[i]){
			dfs(i);
			++idx;
		}
	}
	int k;
	cin>>k;
	cout<<(int)abs((n-idx-k))<<endl;
	if(k<n-idx){
		int i=1;
		while(k<n-idx){
			
			if(a[i]!=i){
				memset(vis,0,sizeof vis);
				ans=hell;
				mn=i;
				dfs2(i);
				swap(a[i],a[ans]);
				cout<<i<<' '<<ans<<endl;
				++k;
			}
			else{
				++i;
			}
		}
		cout<<endl;
	}
	else if(k>n-idx){
		sort(cycles,cycles+idx,cmp);
		rep(j,1,k-n+idx+1){
			cout<<1<<' '<<*min_element(all(cycles[j]))<<' ';
		}
		cout<<endl;
	}
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}