#include<iostream>
#include<string>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<vector>
#include<cstring>
#include<algorithm>
using namespace std;
#define rep(i,n) for(int i=0;i<n;i++)
#define REP(i,a,b) for(int i=a;i<=b;i++)
const int inf = ~0u>>2;
const int N = 5010;
int dp[2][N];
const int mod = 1000000007;
long long two[66];
int main() {
    long long n;
    scanf("%I64d",&n);
    two[0] = 1;
    for(int i = 1; i <= 62; i++) two[i] = two[i-1] * 2;
    vector<long long> ret;
    double s = sqrt(2.0*n);
    long long down = (long long)s - 10;
    if(down < 0) down = 0;
    long long up = (long long)s + 10;
    for(long long i = down; i <= up; i++) {
        if(i*(i-1) == n * 2 && (i&1)) ret.push_back(i);
    }
//    cout<<n*2<<endl;
    //  2828427122
    for(int p = 1; p <= 61; p++) {
        long long con = two[p] - 1;
        con = con * 2 - 1;
      //  if(p == 1) cout<<con<<endl;
        long long l = 1 ,r = min((n*2/con) + 1 , 2000000000LL);
      //  if(p == 1) cout<<l<<" "<<r<<endl;
        while(l <= r) {
            long long mid = (l + r) >> 1;
            if(mid*mid + con * mid == n * 2 ) {
                if(mid&1){
                //  cout<<p<<" "<<mid<<endl;
                    ret.push_back(two[p]*mid);
                }
                break;
            }
            if(mid*mid + con * mid > n * 2) {
                r = mid - 1;
            } else l = mid + 1;
        }
    }
    if(ret.size() == 0){
        puts("-1");
    }else {
        sort(ret.begin(),ret.end());
        int tot = unique(ret.begin(),ret.end()) - ret.begin();
        for(int i = 0; i < tot; i++) printf("%I64d\n",ret[i]);
    }
    return 0;
}
