#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define PB push_back
#define MP make_pair

#define rep(i,n) for(int i=0;i<(n);++i)
#define REP(i,n) for(int i=1;i<=(n);++i)
#define FOR(i,l,h) for(int i=(l);i<=(h);++i)
#define FORD(i,h,l) for(int i=(h);i>=(l);--i)
#define print(expr) cout<<(#expr)<<" : "<<(expr)<<endl
#define tr(it,c) for(VI::iterator it=(c).begin(); it!=(c).end(); ++it)

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long int64;
typedef pair<int,int> pii;

char buf[2000][2000];

VI edge[3000];
bool vis[3000]={};
int num[3000]={};

int main(void)
{
	int n,m; cin>>n>>m;
	rep(i,n) cin>>buf[i];
	rep(i,n) rep(j,m) if(buf[i][j]=='#')
	{
		edge[i].PB(j+n); edge[j+n].PB(i);
	}
	queue<int> q;
	q.push(n-1); vis[n-1]=true;
	while(!q.empty())
	{
		int x=q.front(); q.pop();
		tr(it,edge[x]) if(!vis[*it])
		{
			vis[*it]=true;
			num[*it]=num[x]+1;
			q.push(*it);
		}
	}
	if(!vis[0]) cout<<-1<<endl;
	else cout<<num[0]<<endl;
}