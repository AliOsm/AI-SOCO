//ll f(vl &arr, int p){
//    return arr[p-1]+arr[p+1]-arr[p];
//}
//int n;
//void fix(vl &arr){
//    vl ans;
//    for(int i = 1; i < n; ++i)
//        ans.pb(arr[i]-arr[i-1]);
//    sort(all(ans));
//    arr = ans;
//}
//string _(){
//    cin >> n;
//    vl a(n),b(n);
//    cin >> a >> b;
//    if(a[0] != b[0]) return "No";
//    if(a[n-1] != b[n-1]) return "No";
//    if(n == 3)
//        return "Yes";
//    fix(a);
//    fix(b);
//    if(a == b)
//        return "Yes";
//    return "No";
//}
#include <iomanip>
#include <algorithm>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define all(v) (v).begin(), (v).end()
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<ll> vl;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T b, T e, istream& stream = cin){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
ll f(vl &arr, int p){
    return arr[p-1]+arr[p+1]-arr[p];
}
int n;
void fix(vl &arr){
    vl ans;
    for(int i = 1; i < n; ++i)
        ans.pb(arr[i]-arr[i-1]);
    sort(all(ans));
    arr = ans;
}
string _(){
    cin >> n;
    vl a(n),b(n);
    cin >> a >> b;
    if(a[0] != b[0]) return "No";
    if(a[n-1] != b[n-1]) return "No";
    if(n == 3)
        return "Yes";
    fix(a);
    fix(b);
    if(a == b)
        return "Yes";
    return "No";
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        cout << _() << '\n';
    }
