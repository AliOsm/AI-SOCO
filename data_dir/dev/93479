#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int main()
{
    _upgrade
    LL n, k, s;
    cin >> n >> k >> s;
    if((n - 1) * k < s || s < k)
    {
        cout << "NO\n";
        return 0;
    }
    cout << "YES\n";
    LL p = 1;
    while(k > 0)
    {
        if(s - (n - 1) >= k - 1)
        {
            p = (p == 1 ? n : 1);
            cout << p << " ";
            s -= (n - 1);
        }
        else
        {
            if(k != 1)
            {
                p += (p == 1 || p == n - 1 ? 1 : -1);
                cout << p << " ";
                s--;
            }
            else
            {
                if(p == 1 || p == 2) p += s;
                else p -= s;
                cout << p << " ";
            }
        }
        k--;
    }
	return 0;
}
