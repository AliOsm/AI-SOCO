/**
 * @author khokharnikunj8
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class ACoder {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n;
        in >> n;
        vector<vector<int>> ans(n, vector<int>(n, 0));
        int temp = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                bool flag = true;
                if (i - 1 >= 0 && ans[i - 1][j] == 1)flag = false;
                if (j - 1 >= 0 && ans[i][j - 1] == 1)flag = false;
                if (flag) {
                    ans[i][j] = 1;
                    temp++;
                }
            }
        }
        out << temp << "\n";
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (ans[i][j] == 1) out << "C";
                else out << ".";
            }
            out << "\n";
        }

    }
};


int main() {
    ACoder solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
