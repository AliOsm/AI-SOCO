#include <iostream>
#include <algorithm>
#include <vector>
#include <string.h>
#include <cmath>
#include <math.h>
#include <ctime>
#include <cstring>
#include <sstream>
#include <array>
#include <tuple>
#include <set>
#include <iterator>
#include <cstdio>
#include <string>
#include <valarray>
#include <utility>
#include <iomanip>
#include <list>
#include <numeric>
#include <regex>
#include <map>
#include <queue>
#include <deque>
#include <unordered_map>

using namespace std;

#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define ll long long
#define PI 3.1415926535
#define pb push_back
#define ins insert
#define mp make_pair
#define lb(v,x) lower_bound(all(v),x)
#define ub(v,x) upper_bound(all(v),x)
#define ff first
#define Ln length
#define ss second
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define sz(a) (ll)a.size()
#define fill(x,y) memset(x,y,sizeof(x))
#define all(x) (x).begin(), (x).end()
#define MOD 1000000007;
#define forn(i, a, b) for(ll int i = (a); i <= (b); ++i)
const ll N = 2e5 + 7;
ll power(ll x,ll y){ll res=1;x=x;while(y>0){if(y&1)res=(res*x);y=y>>1;x=(x*x);}return res;}
ll ncr(ll n,ll r){ll res=1;if(r>n)return 0;if(r>n-r)r=n-r;for(ll i=0;i<r;i++){res*=(n-i);res/=(i+1);}return res;}
template <typename T> T gcd(T a,T b) { if(a==0) return b; return gcd(b%a,a); }
// always use 1ll*ans2 to avoid signed integer overflow;
// in max,min fxs they have to be of same type like ll,ll or int,int;
ll x;
ll lcm(ll a, ll b){
    return a / gcd(a, b) * b;}
int main()
{
    IOS;
    cin >> x;
    ll ans;
    for(ll i = 1 ; i * i <= x ; i++){
        if(x % i == 0 && lcm(i, x / i) == x){
            ans = i;
        }
    }
    cout << ans << " " << x / ans << endl;
    return 0; 
}
