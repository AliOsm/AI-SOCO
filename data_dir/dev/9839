#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
std::vector< pair<ll,ll> > fn,fm,fk;
int main()
{
	//ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,m,k,i,j;
	cin>>n>>m>>k;
	if((2*n*m)%k)
	{
		cout<<"NO\n";
		return 0;
	}
	ll tmp=n;
	for(i=2;i<=sqrt(n);i++)
	{
		while(tmp%i==0)
		{
			fn.pb(mp(i,0));
			tmp=tmp/i;
		}
	}
	if(tmp>1)
		fn.pb(mp(tmp,0));
	tmp=m;
	for(i=2;i<=sqrt(m);i++)
	{
		while(tmp%i==0)
		{
			fm.pb(mp(i,0));
				tmp=tmp/i;
		}
	}
	if(tmp>1)
		fm.pb(mp(tmp,0));
	tmp=k;
	for(i=2;i<=sqrt(k);i++)
	{
		while(tmp%i==0)
		{
			fk.pb(mp(i,0));
			tmp=tmp/i;
		}
	}
	if(tmp>1)
		fk.pb(mp(tmp,0));
	ll ln=fn.size(),lm=fm.size(),lk=fk.size();
	j=0;
	for(i=0;i<lk;i++)
	{
		while(j<ln)
		{
			if(fk[i].ff==fn[j].ff)
			{
				fn[j].ss=1;
				fk[i].ss=1;
				j++;
				break;
			}
			if(fk[i].ff>fn[j].ff)
				j++;
			if(fk[i].ff<fn[j].ff)
				break;
		}
	}
	j=0;
	for(i=0;i<lk;i++)
	{
		if(fk[i].ss==1)
			continue;
		while(j<lm)
		{
			if(fk[i].ff==fm[j].ff)
			{
				fm[j].ss=1;
				fk[i].ss=1;
				j++;
				break;
			}
			if(fk[i].ff>fm[j].ff)
				j++;
			if(fk[i].ff<fm[j].ff)
				break;
		}
	}
	bool f=0;
	for(i=0;i<lk;i++)
	{
		if(fk[i].ff==2 && fk[i].ss==0)
		{
			f=1;
			break;
		}
	}
	ll x=1,y=1;
	for(i=0;i<ln;i++)
		if(fn[i].ss==0)
			x=x*fn[i].ff;
	for(i=0;i<lm;i++)
		if(fm[i].ss==0)
			y=y*fm[i].ff;
	if(f==0)
	{
		if(2*x<=n)
			x=x*2;
		else
			y=y*2;
	}
	if(x<=n && y<=m)
	{
		cout<<"YES\n";
		cout<<"0 0"<<endl;
		cout<<x<<" 0"<<endl;
		cout<<"0 "<<y<<endl;
	}
	else
		cout<<"NO"<<endl;
	return 0;
}