/*
▄███████▀▀▀▀▀▀███████▄
░▐████▀▒ЗАПУСКАЕМ▒▀██████▄
░███▀▒▒▒▒▒ДЯДЮ▒▒▒▒▒▒▀█████
░▐██▒▒▒▒▒▒БОГДАНА▒▒▒▒▒████▌
░▐█▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌
░░█▒▄▀▀▀▀▀▄▒▒▄▀▀▀▀▀▄▒▐███▌
░░░▐░░░▄▄░░▌▐░░░▄▄░░▌▐███▌
░▄▀▌░░░▀▀░░▌▐░░░▀▀░░▌▒▀▒█▌
░▌▒▀▄░░░░▄▀▒▒▀▄░░░▄▀▒▒▄▀▒▌
░▀▄▐▒▀▀▀▀▒▒▒▒▒▒▀▀▀▒▒▒▒▒▒█
░░░▀▌▒▄██▄▄▄▄████▄▒▒▒▒█▀
░░░░▄██████████████▒▒▐▌
░░░▀███▀▀████▀█████▀▒▌
░░░░░▌▒▒▒▄▒▒▒▄▒▒▒▒▒▒▐
░░░░░▌▒▒▒▒▀▀▀▒▒▒▒▒▒▒▐
TAYA
AYAT
YATA
ATAY
*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <cstdio>
#include <stdio.h>
#include <iomanip>
#include <math.h>
#include <cmath>
#include <queue>
#include <deque>
#include <sstream>

using namespace std;

#define ll long long
#define forn(i, n) for (int i = 1; i <= (int)n; ++i)
#define next next228
#define prev prev228
#define index index228
#define left left228
#define right right228
#define count count228
#define int long long

template<typename T> void uin(T &a, T b) {
	if (b < a) {
		a = b;
	}
}

template<typename T> void uax(T &a, T b) {
	if (b > a) {
		a = b;
	}
}

const int maxn = 505, INF = 2000LL * 1000LL * 1000LL * 1000LL * 1000LL * 1000LL + 1000000228LL;

const int mod = 998244353;

void mul(int &a, int b) {
	a *= b;

	if (a >= mod) a %= mod;
}

bool prime(int n) {
	if (n == 1) return 0;
	int i = 2;
	while (i * i <= n) {
		if (n % i == 0) return 0;
		++i;
	}
	return 1;
}

int n;

int a[maxn];

map<int, int> cnt;

map<int, int> lp;

bool pr[2000 * 1000 + 228];

vector<int> prs;

int gcd(int a, int b) {
	if (b == 0) return a;
	return gcd(b, a % b);
}

void SET(int p) {
	lp[p] = p;
	int d = p;
	int cnt = 1;
	while (1) {
		if (d <= INF / p) {
			d *= p;
			++cnt;
			lp[d] = p;
		} else break;
	}
}

void precalc() {
	memset(pr, 1, sizeof(pr));
	pr[0] = pr[1] = 0;
	for (int i = 2; i <= 2000 * 1000 + 228; ++i) {
		if (pr[i]) {
			prs.push_back(i);
			SET(i);
			for (int j = i * i; j <= 2000 * 1000 + 228; j += i) {
				pr[j] = 0;
			}
		}
	}
}

void solve() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;
	vector<int> ddop;
	precalc();
	set<int> susp;
	forn(i, n) {
		cin >> a[i];
		int sq = (int)sqrt(a[i]);
		if (sq * sq == a[i] && prime(sq)) {
			cnt[sq] += 2;
			susp.insert(sq);
		} else if (lp[a[i]]) {
			int p = lp[a[i]];
			susp.insert(p);
			int cont = 0;
			while (a[i] > 1) {
				a[i] /= p;
				++cont;
			}
			cnt[p] += cont;
		} else {
			ddop.push_back(a[i]);
		}
	}
	for (int i = 0; i < (int)ddop.size(); ++i) {
		for (int j = 0; j < (int)ddop.size(); ++j) {
			if (ddop[i] == ddop[j]) continue;
			int p = gcd(ddop[i], ddop[j]);
			if (p > 1) {
				susp.insert(p);
				susp.insert(ddop[i] / p);
				susp.insert(ddop[j] / p);
			}
		}
	}
	for (int iter = 0; iter < (int)ddop.size() + 228; ++iter) {
		int _sz = (int)susp.size();
		for (int x : ddop) {
			for (int i : susp) {
				if (x % i == 0) {
					susp.insert(x / i);
				}
			}
		}
		if ((int)susp.size() == _sz) break;
	}
	vector<int> dop;
	int res = 1;
	vector<int> lol;
	map<int, int> count;
	for (int x : ddop) {
		bool ok = 1;
		for (int i : susp) {
			if (x % i == 0) {
				ok = 0;
				++cnt[i];
			}
		}
		if (ok) {
			lol.push_back(x);
			++count[x];
		}
	}
	for (auto p : count) {
		if (p.second >= 1) {
			mul(res, (p.second + 1) * (p.second + 1));
		}
	}
	for (auto p : cnt) {
		mul(res, p.second + 1);
	}
	cout << res << endl;
}

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	// freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w", stdout);
	solve();
	return 0;
}