#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=4e5+5;
const ll M=3e5+5;
const ll mod=998244353;
const ll INF=1e18+5;
const double PI = 3.14159265;

inline ll mul(ll a, ll b){ return (a * 1ll * b) % mod; }
inline ll sub(ll a, ll b){ ll c = a - b; if(c < 0) c += mod; return c; }
inline ll add(ll a, ll b){ ll c = a + b; if(c >= mod) c -= mod; return c; }

#define f first
#define s second
#define pii pair<ll,ll>
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define printclock cerr<<"Time : "<<1000*(ld)clock()/(ld)CLOCKS_PER_SEC<<"ms\n";
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}

ll cnt[N];

int main()
{
  fast;
  ll t;
  cin>>t;
  while(t--)
  {
    ll n,k;
    cin>>n>>k;
    ll ans=INF,a[n];
    for(ll i=0;i<=2*k;i++){cnt[i]=0;}
    for(ll i=0;i<n;i++){cin>>a[i];}
    for(ll i=0;i<n/2;i++)
    {
      ll mini=min(a[i],a[n-i-1]);
      ll maxi=max(a[i],a[n-i-1]);
      ll sum=mini+maxi;
      ll l=2,r=mini;
      if(l<=r){cnt[l]+=2;cnt[r+1]-=2;}
      l=mini+1;r=sum-1;
      if(l<=r){cnt[l]+=1;cnt[r+1]-=1;}
      l=sum+1;r=maxi+k;
      if(l<=r){cnt[l]+=1;cnt[r+1]-=1;}
      l=maxi+k+1;r=2*k;
      if(l<=r){cnt[l]+=2;cnt[r+1]-=2;}
    }
    for(ll i=1;i<=2*k;i++){cnt[i]+=cnt[i-1];}
    for(ll i=2;i<=2*k;i++){ans=min(ans,cnt[i]);}
    cout<<ans<<endl;
  }
}