#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int,int> pii;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;

//#define PB push_back
#define PB emplace_back
#define F first
#define S second
#define MP make_pair
#define endl '\n'

const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define gcd(a,b) __gcd(a,b)
#define lcm(a,b) (a*(b/gcd(a,b)))

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);

//
//debug
template < typename F, typename S >ostream& operator << ( ostream& os, const pair< F, S > & p ) {return os << "(" << p.first << ", " << p.second << ")";}
template < typename T >ostream &operator << ( ostream & os, const vector< T > &v ) {os << "{";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << ", ";os << *it;}return os << "}";}
template < typename T >ostream &operator << ( ostream & os, const set< T > &v ) {os << "[";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << ", ";os << *it;}return os << "]";}
template < typename T >ostream &operator << ( ostream & os, const multiset< T > &v ) {os << "[";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << ", ";os << *it;}return os << "]";}
template < typename F, typename S >ostream &operator << ( ostream & os, const map< F, S > &v ) {os << "[";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << ", ";os << it -> first << " = " << it -> second ;}return os << "]";}
#define dbg(args...) do {cerr << #args << " : "; faltu(args); } while(0)
clock_t tStart = clock();
#define timeStamp dbg("Execution Time: ", (double)(clock() - tStart)/CLOCKS_PER_SEC)
void faltu () {cerr << endl;}
template <typename T>void faltu( T a[], int n ) {for(int i = 0; i < n; ++i) cerr << a[i] << ' ';cerr << endl;}
template <typename T, typename ... hello>void faltu( T arg, const hello &... rest) {cerr << arg << ' ';faltu(rest...);}
//#else
//#define dbg(args...)

inline bool checkBit(ll n, int i) { return n&(1LL<<i); }
inline ll setBit(ll n, int i) { return n|(1LL<<i);; }
inline ll resetBit(ll n, int i) { return n&(~(1LL<<i)); }

const int mx = 1e5+5;
int n;
ll a[mx];
ll total, pre, suf;
int trie[5000006][2];
int nxt = 1;

void add(ll num)
{
	int node = 0;
	for( int i = 41; i >= 0; --i ) {
		int bit = 0;
		if( checkBit(num, i) ) bit = 1;
		if( trie[node][bit] == -1 ) trie[node][bit] = nxt++;
		node = trie[node][bit];
	}
}

ll query(ll num)
{
	//dbg(num);
	ll ans = 0;
	int node = 0;
	for( int i = 41; i >= 0; --i ) {
		int bit = 0;
		if( checkBit(num, i) ) bit = 1;
		if( trie[node][bit^1] != -1 ) {
			ans = setBit(ans, i);
			node = trie[node][bit^1];
			//dbg(-1, i);
		}
		else {
			//dbg(-2, i);
			//if( bit ) ans = setBit(ans, i);
			node = trie[node][bit];
		}
		//dbg(bit);
		//dbg(ans);
	}
	//dbg(ans);
	return ans;
}

int main()
{
	optimize();
	mem(trie, -1);
	cin >> n;
	for( int i = 1; i <= n; ++i ) {
		cin >> a[i];
		total ^= a[i];
	}
	ll ans = 0;
	pre = total;
	//suff = 0 ^ 1 ^ 2;
	//dbg(pre, suf);
	for( int i = n+1; i >= 1; --i ) {
		pre ^= a[i];
		suf ^= a[i];
		//dbg(pre, suf);
		//add(total^pre);
		add(suf);
		ans = max(ans, query(pre));
	}
	cout << ans;
}






















