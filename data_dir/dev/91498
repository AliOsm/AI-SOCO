#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define fr(i,j,k) for(int i=j;i<k;i++)
#define f(n) fr(i,0,n)
#define f1(n) fr(i,1,n+1)
#define ms(i) memset(i,-1,sizeof(i));
#define pb push_back
const ll mod=998244353;
string cal(string s1,string s2){
	string ret;
	reverse(s1.begin(),s1.end());
	reverse(s2.begin(),s2.end());
	if(s1.size()<s2.size()){
		swap(s1,s2);
	}
	int c=0;
	for(int i=0;i<s2.size();i++){
		int now=s1[i]-'0'+s2[i]-'0'+c;
		ret += '0'+(now%10);
		c = now/10;
	}
	for(int i=s2.size();i<s1.size();i++){
		int now=s1[i]-'0'+c;
		ret += '0'+(now%10);
		c = now/10;
	}
	if(c){
		ret+='1';
	}
	reverse(ret.begin(),ret.end());
	return ret;

}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	string ss,rr;
	int n,m;
	while(cin >> n >> m){
		int dp[n+5][m+5]={};
		string ss[n+5];
		f1(n){
			string s;
			cin >> s;
			ss[i]=" "+s;
			dp[i][1]=1;
			for(int j=1;j<m;j++){
				if(s[j]==s[j-1]){
					dp[i][j+1]=dp[i][j]+1;
				}
				else{
					dp[i][j+1]=1;
				}
			}
		}
		ll ans = 0;
		f1(n){
			fr(j,1,m+1){
				int len=1;
				for(int k=i-1;k>=1;k--){
					if(ss[k][j]==ss[k+1][j]){
						len++;
					}
					else{
						break;
					}
				}
				if(len*3>i)continue;
				int f=0;
				for(int k=i-len-1;k>i-2*len;k--){
					if(ss[k][j]!=ss[k+1][j])f=1;
				}
				if(f)continue;
				if(ss[i-len*2][j]==ss[i-len][j])continue;
				for(int k=i-len*2-1;k>i-3*len;k--){
					if(ss[k][j]!=ss[k+1][j])f=1;
				}
				if(f)continue;
				int mi=1e9;
				if(!f){
					for(int k=i;k>i-3*len;k--){
						mi=min(mi,dp[k][j]);
					}
				}
				ans += mi;
			}
		}
		cout << ans << endl;
	}
}