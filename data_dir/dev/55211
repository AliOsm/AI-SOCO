/**
*
* Author: MARS
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair<int,int>

typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl pi = acos(-1);
const ll inf = 1LL<<30;
const dbl eps = 1e-9;
const ll mod = 1e9+7;

/** /////////// ** Code ** /////////// **/

const int N=60;
int mem[N][N][N];
ll sum[N];
ll a[N];
ll ans;
int n,k;

bool dp(int i,int lst,int k){
    if(k < 0) return 0;
    if(i == n+1)
        return ((k == 1) && (((sum[n]-sum[lst])&ans) == ans));

    int &ret=mem[i][lst][k];
    if(ret != -1)
        return ret;

    if(((sum[i]-sum[lst])&ans) == ans)
        return ret=dp(i+1, i, k-1)|dp(i+1, lst, k);
    else return ret=dp(i+1, lst, k);
}

int main(){
    scanf("%d%d",&n,&k);
    for(int i=1 ; i<=n ; i++)
        scanf("%lld",&a[i]);


    for(int i=1 ; i<=n ; i++)
        sum[i]=sum[i-1]+a[i];


    for(int bt=N ; bt>=0 ; bt--){
        ans^=(1LL<<bt);
        memset(mem, -1, sizeof mem);
        if(!dp(1,0,k)) ans^=(1LL<<bt);
    }


    printf("%lld",ans);
}
