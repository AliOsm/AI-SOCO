#include <bits/stdc++.h>

using namespace std ;

#define MAX 2000005

bool isComposite [MAX + 1];

vector<int > primeDiv [MAX + 1] ;

set<int > goodElements ;

void primeFactors()
{
    memset(isComposite , 0 , MAX + 1) ;
    isComposite[0] = isComposite[1] = 1 ;

    for(int i = 2 ; i <= MAX ; i++) {
        if (!isComposite[i]) {
            primeDiv[i].push_back(i);
             for (int j = 2 * i; j  <= MAX; j += i)
             {
                  isComposite[j] = true;
                   primeDiv[j].push_back(i);
             }
        }
        goodElements.insert(i);
    }

}

int main()
{
    ios_base :: sync_with_stdio(false) ;
    cin.tie(nullptr);

    int n  ;
    cin >> n  ;

    primeFactors() ;
    int a[n] ;

    bool first = 0 ;

    bool vis [MAX + 1] ;
    memset(vis , 0 , MAX + 1);

    for(int i = 0 ; i < n ;i++)
    {
        cin >> a[i] ;

        if(!first)
        {
            int x = *goodElements.lower_bound(a[i]);

            if(x != a[i])
                first = 1 ;

            a[i] = x ;
        }
        else
            a[i] = *goodElements.begin();

        for(int x : primeDiv[a[i]])
        {
            for(int j = x ; j <= MAX  ; j+= x)
            {
                if(!vis[j])
                {
                    goodElements.erase(j);
                    vis[j] = 1;
                }
            }
        }


    }


    for(int i = 0 ; i < n ;i++)
        cout << a[i] << ' ';



    return  0 ;


}
