#include <bits/stdc++.h>
 
using namespace std;
const int MAXN = 2 * 100100;
int n, a[MAXN], ans[MAXN], accg[MAXN], dv[1010], dvsz = 0, cnt[1010];
vector<int> g[MAXN];
 
void dfs(int v, int p = -1)
{
	for(int i = dvsz - 1; i >= 0; --i)
	{
		cnt[i] += (a[v] % dv[i] != 0);
		if(cnt[i] < 2)
			ans[v] = max(ans[v], dv[i]);
	}
 
	for(const int& u : g[v])
		if(u != p)
		{
			accg[u] = __gcd(accg[v], a[u]);
			ans[u] = accg[u];
			dfs(u, v);
		}
 
	for(int i = dvsz - 1; i >= 0; --i)
		cnt[i] -= (a[v] % dv[i] != 0);
}
 
int main()
{
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i)
		scanf("%d", &a[i]);
	for(int i = 1; i * i <= a[1]; ++i)
		if(a[1] % i == 0)
			dv[dvsz++] = i, dv[dvsz++] = a[1] / i;
	dvsz = unique(dv, dv + dvsz) - dv;
	for(int i = 1, u, v; i <= n - 1; ++i)
		scanf("%d %d", &u, &v), g[u].push_back(v), g[v].push_back(u);
	dfs(1);
	for(int i = 1; i <= n; ++i)
		printf("%d ", ans[i]);
}