#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <unordered_map>
#include <cassert>
#include <iostream>
#include <iomanip>    
#include <cstring>
#include <cmath>
#include <functional>
#include <utility>

#define pb push_back
#define all(x) (x).begin(), (x).end()
#define eprintf(...) fprintf(stderr,__VA_ARGS__)
#define rep(i, n) for (int (i) = 0; (i) < (n); (i)++)
#define forn(i, n) for (int (i) = 1; (i) <= (n); (i)++)

using namespace std;

template<class T> inline void umax(T &a,T b){if(a < b) a = b;}
template<class T> inline void umin(T &a,T b){if(a > b) a = b;}
template<class T> inline T abs(T a){return a > 0 ? a : -a;}

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int inf = 1e9 + 143;
const ll longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

const int N = 1e5 + 100;

int color[N];

int main() {
	color[1] = 1;
	for (int d = 2; d < N; d++) {
		if (color[d]) {
			continue;
		}
		for (int x = d + d; x < N; x += d) {
			color[x] = 1;
		}
	}
	int n = read();
	if (n < 3) {
		printf("1\n");
		forn(i, n) {
			printf("1 ");
		}
		return 0;
	}
	printf("2\n");
	for (int i = 1; i <= n; i++) {
		printf("%d ", color[i + 1] + 1);
	}
	return 0;     
}