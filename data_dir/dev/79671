using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define pii pair <int,int>
#define pll pair <ll,ll>
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define sz(c) ((c).size())
#define all(c) (c).begin(),(c).end()
#define fn "test"   ///____FILE_NAME_HERE_____
#define MASK(i) ((1LL)<<(i))
#define BIT(x,i) (((x)>>(i))&1)
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define rrep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)

template <class T,class U> void maximize(T &x,U y)
{
    if(x < y)x=y;
}
template <class T,class U> void minimize(T &x,U y)
{
    if(x > y)x=y;
}
template <class T> T Abs(T x)
{
    return (x < (T)0 ? -x : x);
}
template <class T> T safe_sqrt(T x)
{
    return sqrt(max((T)0,x));
}
template <class T,class U,class V> T addmod(T x,U k,V mod)
{
    return ((x + k)%mod + mod) % mod;
}
template <class T,class U,class V> T submod(T x,U k,V mod)
{
    return ((x - k)%mod + mod) % mod;
}
template <class T,class U,class V> T mulmod(T x,U k,V mod)
{
    return (ll)x*k%mod;
}

/*------------------------------------------END_OF_TEMPLATE------------------------------------------*/

namespace task{

void solve()
{
    int n,k;
    cin>>n>>k;
    if(!k)cout<<n,exit(0);
    if(n == 1)
    {
        cout<<1;
        for(int i=1;i<=k;++i)cout<<0;

    }
    else
    {
        vector <pii> vec;
        for(int i=2;i*i<=n;++i)
        {
            if(n % i)continue;
            int cnt=0;
            while(!(n % i))
                n/=i,++cnt;
            vec.pb(mp(i,cnt));
        }
        if(n > 1)vec.pb(mp(n,1));
        int m5=0,m2=0;
        rep(vec,it)
        if(it->fir==5)m5=it->sec;
        else if(it->fir==2)m2=it->sec;
        if(m5 < k)m5+=k - m5;
        if(m2 < k)m2+=k - m2;
        ll ans=1;
        rep(vec,it)
        {
            if(it -> fir != 5 and it->fir!=2)
                for(int i=1;i<=it->sec;++i)
                  ans*=(it->fir);
        }
        for(int i=1;i<=m2;++i)
                  ans*=(2ll);
        for(int i=1;i<=m5;++i)
                  ans*=(5ll);
        cout<<ans;
    }
}}

int main(void)
{
    #ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
    #endif // ONLINE_JUDGE
    task::solve();
}
