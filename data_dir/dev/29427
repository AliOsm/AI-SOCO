#include <bits/stdc++.h>
using namespace std;
typedef  long long ll;
typedef unsigned long long ull;
#define pb push_back
#define fi first
#define se second
#define sp setprecision
#define sz size()

const int MAXN=2e5+1000;

#define rank asdfaasgkasg

vector<int> g[MAXN];
int parent[MAXN];
int lvl[MAXN];
/*
    lvl[i] should be -1
*/
int dfs(int v,int &center,int p,int siz)
{
    int sum=1;
    for(int to:g[v])
    {
        if(lvl[to]==-1 && to!=p)
        {
            sum+=dfs(to,center,v,siz);
        }
    }
    if(center==-1 && (2*sum>=siz || p==-1))
       {
           center=v;
       }
        return sum;
}
void centroid(int v,int siz,int last=0,int level=0)
{
    int center=-1;
    dfs(v,center,-1,siz);
    parent[center]=last;
    lvl[center]=level;
    for(int to:g[center])
    {
        if(lvl[to]==-1)
        {
            centroid(to,siz/2,center,level+1);
        }
    }
}
/*
    centroid(1,n);
*/
int up[MAXN][20];
int tin[MAXN],tout[MAXN],timer;
int h[MAXN];
void dfs2(int v,int p)
{
    tin[v]=++timer;
    up[v][0]=p;
    for(int i=1;i<=19;++i)
    {
        up[v][i]=up[up[v][i-1]][i-1];
    }
    for(int to:g[v])
    {
        if(to!=p)
        {
            h[to]=h[v]+1;
            dfs2(to,v);
        }

    }
    tout[v]=timer;
}
inline bool is_upper(int a,int b)
{
    return tin[a]<=tin[b] && tout[a]>=tout[b];
}
int lca(int a,int b)
{
    if(is_upper(a,b))
        return a;
    if(is_upper(b,a))
        return b;
    for(int i=19;i>=0;--i)
    {
        if(!is_upper(up[a][i],b))
            a=up[a][i];
    }
    return up[a][0];
}

inline int dis(int a,int b)
{
    return h[a]+h[b]-2*h[lca(a,b)];
}
int ans[MAXN];
void update(int v)
{
    int p=v;
    while(p)
    {
        ans[p]=min(ans[p],dis(v,p));
        p=parent[p];
    }
}
int get(int v)
{
    int res=1e9;
    int p=v;
    while(p)
    {
        res=min(res,dis(v,p)+ans[p]);
        p=parent[p];
    }
    return res;
}
void solve()
{
    int n,m;
    cin >> n >> m;
    for(int i=1;i<=n-1;++i)
    {
        int a,b;
        cin >> a >>  b;
        g[a].pb(b);
        g[b].pb(a);
    }
    for(int i=1;i<=n;++i)
    {
        lvl[i]=-1;
        ans[i]=1e9;
    }
    centroid(1,n);
    dfs2(1,1);
    update(1);
    for(int i=1;i<=m;++i)
    {
        int t,x;
        cin >> t >> x;
        if(t==1)
        {
            update(x);
        }
        else
        {
            cout << get(x)<<"\n";
        }
    }
}
#define FILE "key"

int main()
{
        #ifdef zxc
            freopen("input.txt","r",stdin);
         //   freopen("output.txt","w",stdout);
        #endif // zxc

        int t=1;
         while(t--)
            solve();
        return 0;
}
