#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < int, int > ii;

const int N = 1e5 + 5;

int n;
ll a[N], b[N], pre[N];
ll A, cf, cm, m;

ll f(ll mn, ll n) {
	int id = lower_bound(a + 1, a + n + 1, mn) - a - 1;
	return mn * id - pre[id];
}

int main() {

	scanf("%d %lld %lld %lld %lld", &n, &A, &cf, &cm, &m);

	for(int i = 1; i <= n; i++) {
		scanf("%lld", a + i);
		b[i] = a[i];
	}

	sort(a + 1, a + n + 1);

	for(int i = 1; i <= n; i++) {
		pre[i] = pre[i - 1] + a[i];
	}

	a[n + 1] = 1e18;

	ll ans = 0, mn = 0, mx = 0, cnt = 0;

	for(int i = 0; i <= n; i++) {
		if(m < 0)
			break;
		ll l = 0, r = A;
		while(l + 1 < r) {
			ll mid = (l + r) >> 1;
			if(f(mid, n - i) <= m)
				l = mid;
			else
				r = mid - 1;
		}
		if(f(r, n - i) <= m)
			l = r;
		ll res = i * cf + l * cm;
		if(res >= ans) {
			ans = res;
			mn = l;
			mx = a[n - i + 1];
			cnt = i;
		}
		m -= A - a[n - i];
	}

	printf("%lld\n", ans);

	for(int i = 1; i <= n; i++) {
		if(b[i] >= mx and cnt) {
			b[i] = A;
			cnt--;
		}
		else {
			b[i] = max(b[i], mn);
		}
		printf("%lld ", b[i]);
	}

	puts("");

	return 0;

}
