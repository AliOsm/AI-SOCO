/* Road to Nutella Grandmaster */

#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <cassert>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <unordered_map>

#define f first
#define s second

#define pb push_back
#define mp make_pair

using namespace std;

typedef pair<int, int> pii;
typedef long long ll;

const int MAXN = (int) 2e5 + 7;
const int MOD = (int) 1e9 + 7;

int n, m;
vector<int> g[MAXN];

int color[MAXN];
vector<int> ans[3];

void dfs(int v) {
  ans[color[v]].pb(v);
  for (auto to : g[v]) {
    if (!color[to]) {
      color[to] = 3 - color[v];
      dfs(to);
    } else if (color[to] == color[v]) {
      cout << -1;
      exit(0);
    }
  }
}

int main() {
  #ifdef LOCAL
  freopen("in", "r", stdin);
  #endif

  scanf("%d%d", &n, &m);
  for (int i = 1; i <= m; i++) {
    int u, v;
    scanf("%d%d", &u, &v);
    g[u].pb(v);
    g[v].pb(u);
  }
  for (int i = 1; i <= n; i++) {
    if (!color[i]) {
      color[i] = 1;
      dfs(i);
    }
  }
  for (int c = 1; c < 3; c++) {
    printf("%d\n", ans[c].size());
    for (auto it : ans[c])
      printf("%d ", it);
    puts("");
  }
  return 0;
}
