#include <cstdio>
#include <cstdint>
#include <array>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <cassert>
#include <memory>
#include <utility>
#include <cstddef>
#include <iterator>

#pragma comment(linker, "/stack:20000000")

using namespace std;
using mt = int32_t;
using fl = double;

template<typename T>
constexpr mt infValue = std::numeric_limits<T>::max() - 1000;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(mt i = a; i < (b); ++i)
#define repe(a, b, i) for(mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(mt i = a; i > (b); --i)
#define repde(a, b, i) for(mt i = a; i >= (b); --i)

constexpr mt INF = infValue<mt>;
constexpr int64_t MOD = 1000000007ll;
constexpr double EPS = 1e-6;
constexpr mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

constexpr auto N = 100001;
constexpr auto K = 2;
constexpr auto P = 19;
constexpr auto M = 100111;

char s[N];
mt a = -1, b = -1, n;
int main(void) {
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%s", s);
	n = strlen(s);
	rep(1, n, i) {
		if (s[i] == 'B' && s[i - 1] == 'A') a = a == -1 ? i++ : a;
	}
	rep(1, n, i) {
		if (s[i] == 'A' && s[i - 1] == 'B' && abs(i - a) > 1) b = b == -1 ? i++ : b;
	}
	if (a == -1 || b == -1) {
		a = -1, b = -1;
		rep(1, n, i) {
			if (s[i] == 'A' && s[i - 1] == 'B') b = b == -1 ? i++ : b;
		}
		rep(1, n, i) {
			if (s[i] == 'B' && s[i - 1] == 'A' && abs(i - b) > 1) a = a == -1 ? i++ : a;
		}
	}
	puts(a != -1 && b != -1 ? "YES" : "NO");

	return 0;
}