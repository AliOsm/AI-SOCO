//Pham Huu Canh
//C. Divisible by Seven
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "c.inp"
#define foo "c.out"
#define MOD 1000000007
#define inf 1000111000111000111LL

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;

int d[11];
char s[1000005];

void input()
{
    int i, j, len, rem, r;
    
    scanf("%s", &s);
    len = strlen(s);
    fori(i, len)    d[s[i] - '0']++;
    
    s[0] = 1, s[1] = 6, s[2] = 8, s[3] = 9;
    d[1]--, d[6]--, d[8]--, d[9]--;
    
    len = 4;
    rem = 0;
    int p = 1;
    fori(i, 10) ford(j, d[i])   s[len++] = i + '0', rem = (rem * 10 + i) % 7, p = (p * 10) % 7;
    
    do{
        r = ((s[3] * p) % 7 + (s[2] * p * 10) % 7 + (s[1] * p * 100) % 7 + (s[0] * p * 1000) % 7) % 7;
        if ((r + rem) % 7 == 0){
            fori(i, 4)  s[i] += '0';    s[len] = 0;
            printf("%s", s);
            return;
        }
    }while (next_permutation(s, s + 4));
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
