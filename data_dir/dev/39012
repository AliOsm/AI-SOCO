#include<bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>pbds;
//#pragma comment(linker, "/stack:200000000")
#define mod ( ll  ) ( 998244353 )  //( 1e9 + 7 )
#define ll long long int
#define inf ( ll  )( 1e9 + 10 )
#define mxs (int)( 1e6 + 10 )
//#define md  int mid = ( l + r )>>1;
//int dx[]={+1,-1,+0,+0};///Four Directions
//int dy[]={+0,+0,+1,-1};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
ll n , m , cases , t ;
string  ss , s , s2 , s3 , s4 ;
vector < ll > v;
vector < ll >::iterator it , it2;
int ar [ mxs ] , ar2 [ mxs ];
void brainfuck();
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>t;
    while( t-- )
    {
        cin>>n>>s;
        s2 = s3 = "";
        int marker = 0;
        for ( int i = 0 ; i < n; i++ )
        {
            if ( !marker )
            {
                if ( s [ i ] == '0' )
                {
                    s2 += "0";
                    s3 += "0";
                }
                else if ( s [ i ] == '1' )
                {
                    s2 += "1";
                    s3 += "0";
                    marker = 1;
                }
                else if ( s [ i ] == '2' )
                {
                    s2 += "1";
                    s3 += "1";
                }
            }
            else
            {
                s2 += "0";
                s3 += s [ i ];
            }
        }
        cout<<s2<<"\n"<<s3<<"\n";
    }
}
