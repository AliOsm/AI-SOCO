#include <iostream>
#include <algorithm>
using namespace std;

struct mystruct{
    int x,y;
};

bool operator<(mystruct ob1,mystruct ob2)
{
    return ob1.x<ob2.x;
}

void rotating(mystruct ob[],int first,int total)
{
    mystruct temp;
    int i;
    temp.x=ob[first].x;
    temp.y=ob[first].y;
    for(i=first;i<first+total-1;i++){
        ob[i].x=ob[i+1].x;
        ob[i].y=ob[i+1].y;
    }
    ob[first+total-1].x=temp.x;
    ob[first+total-1].y=temp.y;
    return ;
}

int main()
{
    int n,i;
    cin>>n;
    int ara[2010];
    for(i=0;i<2010;i++)
        ara[i]=0;
    mystruct ob[n];
    for(i=0;i<n;i++){
        cin>>ob[i].x;
        ob[i].y=i+1;
        ara[ob[i].x]++;
    }
    sort(ob,ob+n);
    int count_2=0,count_more_position=-1,count_2_position[2];
    for(i=0;i<2010;i++){
        if(!ara[i] || ara[i]==1)
            continue;
        if(ara[i]==2){
            if(count_2<2)
                count_2_position[count_2]=i;
            count_2++;
        }
        else{
            count_more_position=i;
        }
    }
    if(count_2<2 && count_more_position==-1){
        cout<<"NO"<<endl;
        return 0;
    }
    cout<<"YES"<<endl;
    if(count_2>=2){
        for(i=0;i<n;i++)
            cout<<ob[i].y<<" ";
        cout<<endl;
        for(i=0;i<n;i++){
            if(ob[i].x==count_2_position[0])
                break;
        }
        rotating(ob,i,ara[count_2_position[0]]);
        for(i=0;i<n;i++)
            cout<<ob[i].y<<" ";
        cout<<endl;
        for(i=0;i<n;i++){
            if(ob[i].x==count_2_position[0])
                break;
        }
        rotating(ob,i,ara[count_2_position[0]]);
        for(i=0;i<n;i++){
            if(ob[i].x==count_2_position[1])
                break;
        }
        rotating(ob,i,ara[count_2_position[1]]);
        for(i=0;i<n;i++)
            cout<<ob[i].y<<" ";
        cout<<endl;
        return 0;
    }
    else{
        for(i=0;i<n;i++){
            if(ob[i].x==count_more_position)
                break;
        }
        count_2_position[0]=i;
        for(count_2=0;count_2<3;count_2++){
            for(i=0;i<n;i++)
                cout<<ob[i].y<<" ";
            cout<<endl;
            rotating(ob,count_2_position[0],ara[count_more_position]);
        }
    }
    return 0;
}
