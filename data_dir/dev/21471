#include "bits/stdc++.h"
using namespace std;
typedef long long LL;

const int N = 1000;
vector<int> adj[N];
int comp[N], dis[N];

void dfs(int u, int cid) {
  if (comp[u] > 0) return;
  comp[u] = cid;
  for (int v: adj[u]) dfs(v, cid);
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL);
  int n, m; cin >> n >> m;
  for (int i = 0; i < m; i++) {
    int u, v; cin >> u >> v;
    adj[u - 1].push_back(v - 1);
    adj[v - 1].push_back(u - 1);
  }

  map<int, int> len;
  for (int u = 0, c = 0; u < n; u++) {
    if (comp[u] == 0) dfs(u, ++c);

    fill(dis, dis + n, N + 1);
    dis[u] = 0;
    queue<int> q;
    q.push(u);

    int diam = 0;

    while (!q.empty()) {
      int v = q.front(); q.pop();
      diam = max(diam, dis[v]);

      for (int w: adj[v]) {
        if (dis[w] == dis[v]) {
          cout << "-1\n";
          return 0;
        }
        if (dis[w] > dis[v] + 1) {
          dis[w] = dis[v] + 1;
          q.push(w);
        }
      }
    }

    len[comp[u]] = max(len[comp[u]], diam);
  }

  int ans = 0;
  for (auto& e: len) ans += e.second;
  cout << ans << endl;

  return 0;
}
