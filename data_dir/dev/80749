#include <bits/stdc++.h>
using namespace std;

const int N = 50 + 10;
bool mark[N];
vector<int> adj[N];

void dfs(int root) {
    mark[root] = true;
    for (int i = 0; i < adj[root].size(); i++)
        if(!mark[adj[root][i]])
            dfs(adj[root][i]);
}

int main() {
    int n, m, u, v;
    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> u >> v;
        u--;
        v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    long long cnt = 0;
    for (int i = 0; i < n; i++)
        if(!mark[i]) {
            cnt++;
            dfs(i);
        }
    long long ans = pow(2, n - cnt);
    cout << ans << endl;
}
