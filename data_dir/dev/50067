#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define mt make_tuple
#define DEBUG 1
#define cerr if (DEBUG) cerr
#define fprintf if (DEBUG) fprintf
#define local freopen("in.txt","r",stdin);
#define test cerr<<"hi\n";
#define tr(x) cerr<<#x" "<<x<<'\n';
#define fi first
#define se second
#define HH1 402653189
#define HH2 1610612741
#define INF 0x3f3f3f3f
#define tii tuple<int,int,int>
#define npos string::npos

using namespace std;

#define MOD 1000000007LL
#define MAXN 200005

char a[55][55];
int ps[55][55];
int dp[55][55][55][55];
int n;

int ask(int x1, int y1, int x2, int y2) {
	return ps[x2][y2] - ps[x2][y1] - ps[x1][y2] + ps[x1][y1];
}

int dpf(int x1, int y1, int x2, int y2) {
	if (ask(x1, y1, x2, y2) == 0) return 0;
	int& ret = dp[x1][x2][y1][y2];
	if (ret != -1) return ret;
	
	ret = max(x2 - x1, y2 - y1);
	
	// cut horizontally
	for (int i = x1 + 1; i < x2; i++) {
		ret = min(ret, dpf(x1, y1, i, y2) + dpf(i, y1, x2, y2));
	}
	
	// cut vertically
	for (int i = y1 + 1; i < y2; i++) {
		ret = min(ret, dpf(x1, y1, x2, i) + dpf(x1, i, x2, y2));
	}
	
	return ret;
}

int main() {
	ios_base::sync_with_stdio(0); cin.tie(0);
	
	memset(dp, -1, sizeof(dp));
	
	cin >> n;
	for (int i = 0; i < n; i++)
	for (int j = 0; j < n; j++) cin >> a[i][j];
	
	for (int i = 1; i <= n; i++)
	for (int j = 1; j <= n; j++) {
		ps[i][j] = ps[i - 1][j] + ps[i][j - 1] - ps[i - 1][j - 1] + (a[i - 1][j - 1] == '#');
	}
	
	cout << dpf(0, 0, n, n) << '\n';
}
