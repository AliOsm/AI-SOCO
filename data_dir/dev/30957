//#include "stdc++.h"
#include <bits/stdc++.h>
#include<iostream>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <ll, int> pli;
typedef pair <db, db> pdd;
typedef vector<int> vi;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
//#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll hell =1000000007 ;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
#define pi 3.141592653589793238462
#define int  long long
ldb dp[1001][1001];
int calculate(int r)
{
    if(r==0)
        return 0;
    int d[50];int k=0;int ans=0,x=r;
    while(x>0)
    {
        d[k]=x%10;
        k++;
        x=x/10;
    }
    for(int i=1;i<k;i++)
    {
        ans=ans+pow((ll)10,i-1);
    }
    if(d[k-1]!=1)
    {
        ans=ans+pow((ll)10,k-1);
    }
    else
    {
        ans=ans+r-pow((ll)10,k-1)+1;
    }
    //cout<<r<<" "<<ans<<endl;
    return ans;
}
int32_t main()
{
    IOS;
    int n;
    cin>>n;
    int l[n+1],r[n+1];ldb z1[n+1],x1[n+1];int y,x,z;
    for(int i=1;i<=n;i++)
    cin>>l[i]>>r[i];
    for(int i=1;i<=n;i++)
    {
     x=calculate(r[i])-calculate(l[i]-1);
        //cout<<x<<endl;
     z=(r[i]-l[i]+1)-x;
    z1[i]=(double)z/(r[i]-l[i]+1);
    x1[i]=(double)x/(r[i]-l[i]+1);
    }
    int k;
    cin>>k;
    y=ceil((double)(k*n)/100);
    dp[0][0]=1;
    ldb ans=0.0;
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<=i;j++)
        {
            dp[i][j]=dp[i-1][j]*z1[i];
            if(j)
            dp[i][j]+=(dp[i-1][j-1]*x1[i]);
        }
    }
               for(int i=y;i<=n;i++)
               ans=ans+dp[n][i];
    cout<<setprecision(20);
               cout<<ans<<endl;
    return 0;
}
