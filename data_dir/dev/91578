#include <bits/stdc++.h>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl

using namespace std;
typedef long long  ll;
const int N = 1e5 + 4;

int p[N];
ll s[N] , a[N];
vector<int> adj[N];

void dfs(int node , int par , ll v){

    if(v > s[node]){
        cout << -1 << '\n';
        exit(0);
    }
    a[node] = s[node] - v;
    for(int child : adj[node]){
        if(child == par)
            continue;
        dfs(child , node , s[node]);
    }
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r" , stdin);
#endif
    ios::sync_with_stdio() , cin.tie(0) , cout.tie();
    int n;
    cin >> n;
    for(int i = 2 ; i <= n ; ++i){
        cin >> p[i];
        adj[p[i]].pb(i);
        adj[i].pb(p[i]);
    }

    for(int i = 1 ; i <= n ; ++i)
        cin >> s[i];

    for(int i = 1 ; i <= n ; ++i){
        if(s[i] == -1){
            s[i] = LLONG_MAX;
            if(adj[i].size() == 1)s[i] = s[p[i]];
            for(int child : adj[i]){
                if(child == p[i])continue;
                s[i] = min(s[i] , s[child]);
            }
        }
    }

    dfs(1 , 1 , 0);
    cout << 1ll * accumulate(a + 1 , a + n + 1 , 0ll) << '\n';
}
