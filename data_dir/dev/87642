//set<int> undecided,buy,sell;
//void no(){
//	cout << "0\n";
//	exit(0);
//}
//int _(){//ot
//	int n;
//	cin >> n;
//	buy.insert(-MOD);
//	sell.insert(MOD);
//	ll ans = 1;
//	for(int i = 0; i < n; ++i){
//		string type;
//		int x;
//		cin >> type >> x;
//		if(type == "ADD"){
//			if(x <= (*--buy.end()))
//				buy.insert(x);
//			else if(x >= (*sell.begin()))
//				sell.insert(x);
//			else
//				undecided.insert(x);
//		}
//		else{
//			if(x < (*--buy.end()))
//				no();
//			if(x > (*sell.begin()))
//				no();
//			if(buy.count(x)){
//				buy.erase(x);
//			}
//			else if(sell.count(x)){
//				sell.erase(x);
//			}
//			else{
//				assert(undecided.count(x));
//				ans = ans*2 % MOD;
//			}
//			for(int y : undecided)
//				if(y < x)
//					buy.insert(y);
//				else if(y > x)
//					sell.insert(y);
//			undecided.clear();
//		}
//	}
//	if(undecided.size()){
//		ans = ll(ans)*(undecided.size()+1)%MOD;
//	}
//	return ans;
//}
//
// ================================================ 
// ^^^	ABOVE is what I wrote in my editor	^^^
// ------------------------------------------------ 
// vvv	BELOW is automatically generated 	vvv
// ================================================ 
#include <set>
#include <iomanip>
#include <algorithm> 
#include <cassert>
#include <vector>
#include <iostream>
#define all(v) (v).begin(),(v).end()
using namespace std;
typedef long long ll;
template<typename IT>
ostream &print(IT b, IT e, string sep = " ", ostream &stream = cout){
	for(IT it = b; it != e; ++it){
		stream << *it;
		if(it+1 != e) stream << sep;
	} 
	return stream;
}
template<typename IT> istream &read(IT b, IT e, istream &stream = cin){
	for(IT it = b; it != e; ++it) stream >> *it; return stream;
}
template<typename T> ostream &operator<<(ostream &stream, vector<T> &t){
	return print(all(t)," ",stream);
}
template<typename T> ostream &operator<<(ostream &stream, vector<T> &&t){
	return print(all(t)," ",stream);
}
template<typename T> istream &operator>>(istream &stream, vector<T> &t){
	return read(all(t),stream);
}
template <typename T> 
void print(T x){
	cout << x << '\n';
}
template <typename T> 
void print(vector<vector<T> > arr){
	for(int i = 0; i < arr.size(); ++i){
		cout << "[" << arr[i] << "]";
		if(i+1 < arr.size())
			cout << ", ";
	}
	cout << '\n';
}
template<typename T>
T _();
const ll INF = ll(2e18)+666;
int MOD = 1e9+7;
const int N = 5e5+5;
set<int> undecided,buy,sell;
void no(){
	cout << "0\n";
	exit(0);
}
int _(){//ot
	int n;
	cin >> n;
	buy.insert(-MOD);
	sell.insert(MOD);
	ll ans = 1;
	for(int i = 0; i < n; ++i){
		string type;
		int x;
		cin >> type >> x;
		if(type == "ADD"){
			if(x <= (*--buy.end()))
				buy.insert(x);
			else if(x >= (*sell.begin()))
				sell.insert(x);
			else
				undecided.insert(x);
		}
		else{
			if(x < (*--buy.end()))
				no();
			if(x > (*sell.begin()))
				no();
			if(buy.count(x)){
				buy.erase(x);
			}
			else if(sell.count(x)){
				sell.erase(x);
			}
			else{
				assert(undecided.count(x));
				ans = ans*2 % MOD;
			}
			for(int y : undecided)
				if(y < x)
					buy.insert(y);
				else if(y > x)
					sell.insert(y);
			undecided.clear();
		}
	}
	if(undecided.size()){
		ans = ll(ans)*(undecided.size()+1)%MOD;
	}
	return ans;
}

int main(){
	ios_base::sync_with_stdio(false); cin.tie(0);
	cout << fixed << setprecision(12);
	cout << _() << '\n';
}
