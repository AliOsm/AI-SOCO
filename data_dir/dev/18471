#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back
#define rep(i,x,n) for(int i=x;i<n;i++)
#define repn(i,n,x) for(int i=n;i>=x;i--)
#define repe(i,x,n) for(int i=x;i<=n;i++)
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(),x.rend()
#define PI 3.1415926536
#define mod 1000003
#define F first
#define S second
#define INF 1e11+20

typedef long long ll;
typedef unsigned long long ull;


ll mystol(string s)
{
    ll n=0;
    ll t=1;
    repn(i,s.length()-1,0)
    {
        n+=((int)(s[i])*t);
        t*=10;
    }
    return n;
}

int myfind(string s)
{
    rep(i,0,s.length())
    {
        if(s[i]!='0')
            return i;
    }
    return -1;
}

string numconv(string n,int n1,int n2)
{
    rep(i,0,n.length())
    {
        if(n[i]=='0')n[i]=(char)n1;
        else n[i]=(char)n2;
    }
    return n;
}

ll mypow(ll n,ll p)
{
    if(p==0)
    return 1;
    if(p==1)
    return n;
    
    ll res=mypow(n,p/2);
    res*=res;
    if(p%2==1)
    res*=n;
    return res;
}

int main()
{
     ll m;
     while(cin>>m)
     {
         int digits=log10(m)+1;
         ll limit=mypow(2,digits+1);
         ll tmpn=1;
         set<ll> s;
         while(tmpn<=limit)
         {
             bitset<10> num(tmpn);
             string tmps=num.to_string();
             int f=myfind(tmps);
             if(f!=-1)tmps.erase(0,f);

             repe(i,0,9)
             {
                 repe(j,0,9)
                 {
                     string t=numconv(tmps,i,j);
                     ll ans=mystol(t);
                     if(ans<=m)s.insert(ans);
                     t=numconv(tmps,j,i);
                     ans=mystol(t);
                     if(0<ans&&ans<=m)s.insert(ans);
                 }
             }

             tmpn++;
         }

         cout<<s.size()-1<<endl;
     }

    return 0;
}
