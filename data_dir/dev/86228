/* 1C */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const double PI = acos(-1.0);
const double eps = 1e-4;

double gcd(double x, double y) {
	while (fabs(x)>eps && fabs(y)>eps) {
		if (x > y)
			x -= floor(x / y) * y;
		else
			y -= floor(y / x) * x;
	}
	
	return x + y;
}

double dis(double x1, double y1, double x2, double y2) {
	return sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2));
}

double ang(double a, double b, double c) {
	return acos((a*a+b*b-c*c)/(2*a*b));
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	double x1, x2, x3;
	double y1, y2, y3;
	
	cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;
	
	double a = dis(x2, y2, x3, y3);
	double b = dis(x1, y1, x3, y3);
	double c = dis(x1, y1, x2, y2);
	double an = ang(b, c, a);
	double bn = ang(a, c, b);
	double cn = ang(a, b, c);
	double p = (a+b+c) / 2.0;
	double s = sqrt(p * (p-a) * (p-b) * (p-c));
	double r = (a * b * c) / (4 * s);
	double n = PI / gcd(an, gcd(bn, cn));
	double ans = 0.5 * r * r * sin(2*PI/n) * n;
	
	cout << fixed << setprecision(7) << ans << endl;
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
