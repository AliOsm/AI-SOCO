	/*If you are slow ,try hard and become fast 
		If you are making mistakes , learn from them and correct them
			If you are weak in something , do practice and become good at it
	*/
/* Don't do just for the sake ... learn from it , that is more important */
 
//Don't Think Just Do It!!
//Apna Time Aayega!!!
//MSD
//Don't say "mere saath h kyun ??" !!
 
#include <bits/stdc++.h>
using namespace std;
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
long double pi = 3.14159265358979323;
 
const double EPS = 1e-12;
const int N = 2e5 + 5;
const int mod = 1e9 + 7;
 
ll dp[3][N]; 
string s = "RGB", s1 = "GBR" , s2 = "BRG"; 
//firstly starting from generating the strings starting from R , G,B ;
void pre()
{
	ll val = N/3;
	
	while(val--)
	{
		s += "RGB";
		s1 += "GBR";
		s2 += "BRG";
	}
}
//there will be only 3 cases at every point i.e R , G ,B;
void pres(string &t)
{
	for(int i = 0 ; i < t.size() ; i++ )
	{
		dp[0][i+1] = dp[0][i] + (t[i] != s[i]);
		dp[1][i+1] = dp[1][i] + (t[i] != s1[i]);
		dp[2][i+1] = dp[2][i] + (t[i] != s2[i]); 
	}
} 
ll ans(ll n , ll k)
{
	ll Ans = 1e9;
	for(int i = k ; i  <= n ; i++ )
	{
		for(int j = 0 ; j < 3 ; j++ )
			Ans = min(Ans,dp[j][i] - dp[j][i-k]);
	}
	return Ans;
}
int main()
{
    fast;
    pre();
    ll q;
    cin >> q;
    while(q--)
    {
    	ll n, k;
    	cin >> n >> k ;
    	string t;
    	cin >> t ;
    	pres(t);
    	cout << ans(n,k) << "\n";
 
    }
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
    
    return 0;
    
}