#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 10;

int n, k, t[N];

int sgn(int x) {
  if (x >= 0) return 1;
  return -1;
}

int main() {
  scanf("%d%d", &n, &k);
  for (int i = 0; i < n; ++i) scanf("%d", t + i);
  int c = 0;
  for (int i = 0; i < n; ++i) {
    if (t[i] < 0) c++;
  }
  if (c > k) {
    puts("-1");
    return 0;
  }
  vector<pair<int, int> > v;
  for (int i = 0; i < n; ++i) {
    if (v.empty() || v.back().first != sgn(t[i])) {
      v.push_back(make_pair(sgn(t[i]), 1));
    } else {
      v.back().second++;
    }
  }
  if (v[0].first == 1) {
    v.erase(v.begin());
  }
  int t = v.size();
  vector<int> seg;
  for (int i = 0; i < (int)v.size() - 1; ++i) {
    if (v[i].first == 1) {
      seg.push_back(v[i].second);
    }
  }
  sort(seg.begin(), seg.end());
  int left = k - c;
  int ss = 0;
  int c2 = 0;
  for (int i = 0; i < (int)seg.size(); ++i) {
    if (ss + seg[i] <= left) {
      ss += seg[i];
      ++c2;
    } else break;
  }
  int ans1 = t - c2 * 2;
  int ans2 = n * 2;
  if (!v.empty() && v.back().first == 1) {
    if (v.back().second <= left) {
      ss = v.back().second;
      --t;
      c2 = 0;
      for (int i = 0; i < seg.size(); ++i) {
        if (ss + seg[i] <= left) {
          ss += seg[i];
          ++c2;
        } else break;
      }
      ans2 = min(ans2, t - c2 * 2);
    }
  }
  printf("%d\n", min(ans1, ans2));
  return 0;
}
