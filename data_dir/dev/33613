		//			- -- --- ---- -----be name khoda----- ---- --- -- -			\\

#include <bits/stdc++.h>
using namespace std;

const long long INF = 1e17 + 1;
const int N = 20002;

struct Edge{
	int u, w, ind;
	Edge(int u, int w, int ind): w(w), u(u), ind(ind) {}
	Edge(int u, int w): u(u), w(w), ind(-1) {}
};

int ans[N], l[N], r[N], n, m, k;
vector <long long> d1, d2;
vector <Edge> g[N];

struct cmp{
	bool operator ()(int l, int r) { return (d1[l] != d1[r] ? d1[l] < d1[r] : l < r); }
};

set <int, cmp> s;

void dj(int st)
{
	d1.clear();
	s.clear();
	d1.insert(d1.begin(), n, INF);
	d1[st] = 0;
	for(int i = 0; i < n; i++)
		s.insert(i);
	while(s.size())
	{
		int v = *s.begin();
		s.erase(s.begin());
		for(auto e : g[v])
		{
			long long d = d1[v] + e.w;
			int u = e.u;
			if(d < d1[u])
			{
				s.erase(u);
				d1[u] = d;
				s.insert(u);
			}
		}
	}
}

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	cin >> n >> m >> k;
	int me, him, her;
	cin >> me >> him >> her;
	me--;
	him--;
	her--;
	for(int i = 0; i < m; i++)
	{
		int u, v, w;
		cin >> u >> v >> w;
		g[u - 1].push_back(Edge(v - 1, w));
	}
	for(int i = 0; i < k; i++)
	{
		int u, v;
		cin >> u >> v >> l[i] >> r[i];
		g[u - 1].push_back(Edge(v - 1, r[i], i));
		ans[i] = r[i];
	}
	bool done = 0;
	while(!done)
	{
		done = 1;
		dj(me);
		d2.swap(d1);
		dj(him);
		if(d1[her] > d2[her])
			break;
		for(int v = 0; v < n; v++)
			if(d2[v] < d1[v])
				for(Edge &e : g[v])
					if(e.ind != -1 && e.w != l[e.ind])
					{
						done = 0;
						e.w = l[e.ind];
						ans[e.ind] = e.w;
					}
	}
	if(d1[her] < d2[her])
		cout << "LOSE\n";
	else
	{
		if(d1[her] > d2[her])
			cout << "WIN\n";
		else
			cout << "DRAW\n";
		for(int i = 0; i < k; i++)
			cout << ans[i] << " ";
		cout << endl;
	}
}
