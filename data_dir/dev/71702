#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
using namespace std;
ll inv[21][21], A[400010];
ll pref[21][400010];
vector<int> occ[21];
int n;
ll dp[(1 << 20) + 10];
ll fun(int mask){
	if(mask == 0){
		return 0;
	}
	if(dp[mask] != -1)
		return dp[mask];
	ll mini = 1e18;
	for(int i = 0; i < 20; i++){
		if((mask & (1 << i))){
			ll cur = 0;
			for(int j = 0; j < 20; j++){
				if(j != i && (mask & (1 << j))){
					cur += inv[i + 1][j + 1];
				}
			}
			mini = min(mini, cur + fun(mask ^ (1 << i)));
		}
	}
	return dp[mask] = mini;
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n;
	for(int i = 1; i <= n; i++){
		cin >> A[i];
		occ[A[i]].pb(i);
		pref[A[i]][i]++;
	}
	for(int i = 1; i <= 20; i++){
		for(int j = 2; j <= n; j++){
			pref[i][j] += pref[i][j - 1];
		}
	}
	for(int i = 1; i <= 20; i++){
		for(int j = 1; j <= 20; j++){
			if(i == j)continue;
			for(int k = 0; k < occ[i].size(); k++){
				inv[i][j] += pref[j][occ[i][k]];
			}
		}
	}
	memset(dp, -1, sizeof(dp));
	cout << fun((1 << 20) - 1) << '\n';

}