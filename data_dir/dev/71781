#include<bits/stdc++.h>
using namespace std;
const int N= 5 * 1e5 + 5;
vector<pair<int,pair<int,int > > > v;
vector<vector<int > > g;
vector<int > fans;
vector<vector<int > > ans;
set<int > s;
int par[N];

int findpar(int u){

	if(par[u] == u)
		return u;
	else
		return par[u]= findpar(par[u]);
}

int main(){

//	freopen("readin.txt","r",stdin);

	int n,m;
	scanf("%d%d", &n, &m);
	g.resize(n);
	ans.resize(n);
	int cmp= n;
	for(int i= 0;i < n;i++){
		par[i]= i;
		s.insert(i);
	}
	for(int i= 0,a,b;i < m;i++){
		scanf("%d%d", &a, &b);
		a--,b--;
		g[a].push_back(b);
		swap(a,b);
		g[a].push_back(b);
		int pa= findpar(a);
		int pb= findpar(b);
		if(pa != pb){
			par[pa]= pb;
			cmp--;
		}
	}
	if(cmp > 1){
		printf("1\n%d ",n);
		for(int i= 1;i <= n;i++){
			printf("%d ",i);
		}
		return 0;
	}

	for(int i= 0;i < n;i++){
		int l,r;
		if( !g[i].size())
			continue;
		sort(g[i].begin(),g[i].end());
		if(g[i][0] != 0){
			l= 0,r= g[i][0] - 1;
			v.push_back(make_pair(l,make_pair(r,i)));
		}
		if(g[i].back() != n - 1){
			l= g[i].back() + 1,r= n - 1;
			v.push_back(make_pair(l,make_pair(r,i)));
		}
		for(int j= 1;j < g[i].size();j++){
			int l= g[i][j - 1] + 1;
			int r= g[i][j] - 1;
			if(r >= l)
				v.push_back(make_pair(l,make_pair(r,i)));
		}
	}
	for(int i= 0;i < n;i++)
		par[i]= i;
	int pa,pb;
	for(int i= 0;i < v.size();i++){
		int l= v[i].first;
		int r= v[i].second.first;
		int x= v[i].second.second;
		pa= findpar(x);
		pb= findpar(l);
		if(pa != pb)
			par[pb]= pa;
		set<int >::iterator it= s.upper_bound(l);
		while(it != s.end() && *it <= r){
			int temp= *it;
			int pb= findpar(temp);
			if(pa != pb)
				par[pb]= pa;
			set<int >::iterator del= it;
			it++;
			s.erase(del);
		}
	}
	for(int i= 0;i < n;i++){
		int a= findpar(i);
		ans[a].push_back(i);
	}
	for(int i= 0;i < n;i++){
		if(ans[i].size())
			fans.push_back(i);
	}
	printf("%d\n",fans.size());
	for(int i= 0;i < fans.size();i++){
		printf("%d ",ans[fans[i]].size());
		for(int j= 0;j < ans[fans[i]].size();j++){
			printf("%d ",ans[fans[i]][j] + 1);
		}
		puts("");
	}
	return 0;
}
