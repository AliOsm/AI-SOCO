
//The two most powerful warriors are patience and time
//Let The Fun Begin
#include<bits/stdc++.h>
using namespace std;

#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define nl "\n"
#define pp pair < ll , ll > 
#define sz(x) (ll)x.size()
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
long double pi = 3.14159265358979323;
 
const double EPS = 1e-12;
const int N = 1e6 + 5;
const int mod = 1e9 + 7;
 
 
 
 
int main()
{
    fast;
    ll n;
    cin >> n ;
    ll a[n+1];
    ll sum =  0;
    multiset < ll > s , rs;
    //set < ll > rs;
    for(int i = 1 ; i <= n ; i++ ){
        cin >> a[i];
        sum += a[i];
        rs.insert(a[i]);
    }
    

    ll pref[n+1] =  {};
    ll suf[n+1] = {};
    for(int i = 1 ; i <= n ; i++ ){
        pref[i] = pref[i-1] + a[i];
    }
    suf[n] = a[n];
    for(int i = n - 1; i > 0 ; i--){
        suf[i] = suf[i+1] + a[i];
    }

   /* set < ll > s;
    set < ll > rs;*/
   /* s.insert(a[1]);
    rs.erase(rs.find(a[1]));    */
    int flag = 0 ;
    //for(auto it : rs)cout << it << " ";
    for(int i = 1 ; i <= n ; i++ ){
        /*cout << i << ":";
        for(auto it : rs)cout << it << " ";
            cout << "\n";*/

        //cout << a[i] << " ";
        ll diff = abs(pref[i-1] - suf[i]);
        if(diff == 0){
            flag =  1;
            break;
        }
        if(diff % 2 == 0){
            //cout << i << " " << diff << "\n";
            diff = diff/2;
            if(pref[i-1] > suf[i]){
                //Don't know why am I doing this
                if(s.find(diff) != s.end()){
                    flag = 1;
                    break;
                }
            }
            else{
                 if(rs.find(diff) != rs.end()){
                    flag = 1;
                    break;
                }
            }

        }
      
/*        cout << i << ":";
        for(auto it : rs)cout << it << " ";
            cout << "\n";*/
        s.insert(a[i]);
        rs.erase(rs.find(a[i]));
        /*for(auto it : rs)cout << it << " ";
            cout << "\n";*/
        if(flag){
            break;
        }
    }

    if(flag){
        cout << "YES";
    }
    else
        cout << "NO";

   

    





















    
    return 0;
    
}