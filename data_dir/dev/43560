#include <bits/stdc++.h>

using namespace std;

string s ;
set < string > A ;
int n ;
bool vis[10010][10] ;
bool Map[10010][10] ;
bool f(int idx , int last)
{
    if ( idx == n ) return 1;
    if ( idx > n ) return 0 ;
    if ( vis[idx][last] ) return Map[idx][last] ;
    bool ans = 0 , ans2 = 0 ;
    if ( last == 0 )
    {
        ans |= f(idx+2,2) ;
        ans2 |= ans ;
        if ( ans ) {
            A.insert(s.substr(idx,2)) ;
        }
        ans = 0 ;
        ans |= f(idx+3,3) ;
        if ( ans ) {
                A.insert(s.substr(idx,3)) ;
        }
        ans2 |= ans ;
    }
    else
    {
        if ( last == 2 )
        {
            if ( idx+2 <= n && s.substr(idx-2,2) == s.substr(idx,2) ) ;
            else
                ans |= f(idx+2,2) ;
            if ( ans )
            {
                A.insert(s.substr(idx,2)) ;
            }
            ans2 |= ans ;
            ans = 0 ;
            ans |= f(idx+3,3) ;
            ans2 |= ans ;
            if ( ans )
            {
                A.insert(s.substr(idx,3)) ;
            }
        }
        else
        {
            if ( idx+3 <= n && s.substr(idx-3,3) == s.substr(idx,3) ) ;
            else
                ans |= f(idx+3,3) ;
            ans2 |= ans ;
            if ( ans )
            {
                A.insert(s.substr(idx,3)) ;
            }
            ans = 0 ;
            ans |= f(idx+2,2) ;
            ans2 |= ans ;
            if ( ans )
            {
                A.insert(s.substr(idx,2)) ;
            }
        }
    }
    Map[idx][last] = ans2 ;
    vis[idx][last] = 1 ;
    return ans2 ;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> s ;
    n = s.size() ;
    for ( int i = 5 ; i < n ; i++ )
        f(i,0) ;
    cout << A.size() << "\n";
    set < string > ::iterator it ;
    for ( it = A.begin() ; it != A.end() ; it++ )
        cout << *it << "\n";
    return 0;
}
