#include<stdio.h>
#include<vector>
#include<algorithm>
#include<queue>
#include <string>
#include<bits/stdc++.h>
using namespace std;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef bitset<19> mask;
//int x4[4]={1,0,0,-1};
string s;
int a[300000],ans,f,mem[100010][2][10];
int dp(int i=1,int k=0,int v=0)
{
    if(i>s.size()){
        if(v%3==0)
        return 0;
        else
        return -1e8;
    }
    int&ret=mem[i][k][v];
    if(~ret)return ret;
    int c1=0,c2=0;
    if(k==0)
    {
        if(a[i]>0)
            c1=dp(i+1,1,(v+a[i])%3)+1;
        c2=dp(i+1,k,v);
        return ret=max(c1,c2);
    }
    else
    {
        c1=dp(i+1,k,(v+a[i])%3)+1;
        c2=dp(i+1,k,v);
        return ret=max(c1,c2);
    }
}


void dp2(int i=1,int k=0,int v=0)
{
    if(i>s.size())
        return;
    if(k==0)
    {
        if(dp(i,k,v)==dp(i+1,1,(v+a[i])%3)+1)
            {
                cout<<a[i];
                dp2(i+1,1,(v+a[i])%3);
            }
            else
         dp2(i+1,k,v);
    }
    else
    {
        if(dp(i,k,v)==dp(i+1,k,(v+a[i])%3)+1)
            {
                cout<<a[i];
                dp2(i+1,k,(v+a[i])%3);
            }
            else
         dp2(i+1,k,v);
    }
}


int main()
{
//freopen("hotel.in","r",stdin);
//freopen("math.in","w",stdout);
//printf("%s %.4f\n",k.c_str(),g);
cin>>s;
for(int i=0;i<s.size();i++)
{
  a[i+1]=s[i]-'0';
  if(s[i]=='0')
    f=1;
}
memset(mem,-1,sizeof mem);
ans=dp();
if(ans==0&&f==0)
    cout<<"-1";
else if(ans==0&&f==1)
    cout<<"0";
else
{
    dp2();
}
 return 0;
}
