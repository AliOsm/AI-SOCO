/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class ALongBeautifulInteger {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n, k;
        string s;
        in >> n >> k >> s;

        out << n << endl;

        int p = min(k, (int) s.length());

        for (; p < s.length(); ++p) {
            if (s[p] != s[p - k])
                break;
        }

        if (p == s.length()) {
            out << s << endl;
            return;
        }

        if (s[p] <= s[p - k]) {
            for (int i = p; i < (int) s.length(); ++i) {
                s[i] = s[i - k];
            }

            out << s << endl;
        } else {
            int p = k - 1;
            while (s[p] == '9') {
                s[p] = '0';
                p--;
            }
            s[p]++;
            for (int i = k; i < (int) s.length(); ++i) {
                s[i] = s[i - k];
            }
            out << s << endl;
        }
    }
};


int main() {
    ALongBeautifulInteger solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
