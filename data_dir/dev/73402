#include<bits/stdc++.h>

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define endl '\n'
#define MAX

typedef long long ll;
typedef pair<int,int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

vector<int> zfunction(const string &s)
{
	int n = s.length();

	vector<int> z(n, n);

	for (int i = 1, g = 0, f; i < n; ++i)
		if (i < g && z[i - f] != g - i)
			z[i] = min(z[i - f], g - i);
		else
		{
			for (g = max(g, f = i); g < n && s[g] == s[g - f]; ++g);
			z[i] = g - f;
		}

	return z;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	string s;
	cin >> s;
	int n = s.size();
	vector<int> z = zfunction(s);
	vector<int> dp(n + 1);
	
	for(int i = 0; i < (int)z.size(); i++)
		dp[z[i]]++;
		
	for(int i = n - 1; i >= 1; i--)
		dp[i] += dp[i + 1];
	
	vector<pii> ans;
	
	
	for(int i = 0; i < n; i++)
		if(i + z[i] == n)
			ans.push_back({z[i], dp[z[i]]});


	sort(ans.begin(), ans.end());
	cout << ans.size() << endl;
	for(auto &p : ans)
		cout << p.first << " " << p.second << endl;

	return 0;
}