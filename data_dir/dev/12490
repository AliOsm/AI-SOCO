#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 100;

int a[N];
int n;
vector<long long> primes;

long long median(vector<pair<int,int>> &v, long long sz) {
    long long kth = sz/2 + 1;
    int med = -1;
    for(int i = 0; i < v.size(); i++) {
        if(v[i].second < kth) kth -= v[i].second;
        else {
            med = v[i].first;
            break;
        }
    }
    long long ret = 0;
    for(int i = 0; i < v.size(); i++) {
        ret += 1ll*abs(med-v[i].first)*v[i].second;
    }
    return ret;
}

long long solve(long long buck) {
    long long cnt = 0;
    long long ans = 0;
    vector<pair<int,int>> cur_buck;
    for(int i = 1; i <= n; i++) {
        if(cnt + a[i] < buck) {
            cur_buck.push_back({i, a[i]});
            cnt += a[i];
        }
        else {
            cur_buck.push_back({i, buck - cnt});
            long long c = median(cur_buck, buck);
            ans += c;
            int rem = a[i] - (buck - cnt);
            rem %= buck;
            cur_buck.clear();
            cur_buck.push_back({i, rem});
            cnt = rem;
        }
    }
    return ans;
}

int main() {
    // freopen("in.txt", "r", stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n;
    long long sum = 0;
    long long tsum;
    for(int i = 1; i <= n; i++) {
        cin >> a[i];
        sum += a[i];
    }
    tsum = sum;

    if(sum == 1) {
        cout << -1 << endl;
        return 0;
    }

    for(long long i = 2; i*i <= sum; i++) {
        if(sum % i == 0) {
            primes.push_back(i);
            while(sum % i == 0) sum /= i;
        }
    }

    if(sum > 1) primes.push_back(sum);

    long long ans = 1e18;
    for(int i = 0; i < primes.size(); i++) {
        ans = min(ans, solve(primes[i]));
    }
    cout << ans << endl;
    return 0;
}

