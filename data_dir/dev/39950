#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <cassert>
using namespace std;

typedef long long ll;

int n, m;
const int maxn = 1e2+1;
vector<int> g[maxn];
int deg[maxn];

int main()
{
  scanf("%d %d", &n, &m);
  memset(deg, 0, sizeof(deg));
  for (int i = 0; i < m; ++i)
    {
      int u, v;
      scanf("%d %d", &u, &v);
      g[u].push_back(v);
      g[v].push_back(u);
      ++deg[u];
      ++deg[v];
    }
  int ans = 0;
  for (ans = 0; ;++ans)
    {
      queue<int> q;
      for (int i = 1; i <= n; ++i)
	{
	  if (deg[i] == 1)
	    {
	      q.push(i);
	    }
	}
      if (q.empty())
	break;
      while (!q.empty())
	{
	  int cur = q.front();
	  q.pop();
	  deg[cur] = 0;
	  for (int i = 0; i < g[cur].size(); ++i)
	    {
	      deg[g[cur][i]] -= 1;
	    }
	}
    }
  printf("%d\n", ans);
}
