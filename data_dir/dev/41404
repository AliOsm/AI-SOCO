/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
vector<set<int>> color;
int col[100005];
class ProblemDColorfulGraph {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int n, m; in>>n>>m;
		color = vector<set<int>>(100005);
		set<int> s;
		for(int i = 0; i<n; ++i){
			in>>col[i+1];
			s.insert(col[i+1]);
		}
		for(int i = 0; i<m; ++i){
			int u, v; in>>u>>v;
			if(col[u]==col[v]) continue;
			color[col[u]].insert(col[v]);
			color[col[v]].insert(col[u]);
		}
		int res = INT_MAX, ma = INT_MIN;
		for(int i: s){
			if((int)color[i].size()==ma) res = min(res, i);
			if((int)color[i].size()>ma){
				ma = color[i].size();
				res = i;
			}
		}
		out<<res;
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ProblemDColorfulGraph solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
