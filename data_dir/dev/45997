#include <bits/stdc++.h>

using namespace std;
const int N=2e5+5;
int all;
pair<int,int> p[N];
vector< pair<int,int> >adj[N];
bool vis[N],mark[N];
void dfs(int u,int cnt,int cntr)
{
    vis[u]=1;
    for(auto v:adj[u])
    {
        if(!vis[v.first])
        {
            if(v.second==0) dfs(v.first,cnt+1,cntr);
            else
            {
                all++;
                dfs(v.first,cnt,cntr+1);
            }
        }
    }
    p[u]={cnt,cntr};
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n;
    cin>>n;
    for(int i=1;i<n;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back({v,0});
        adj[v].push_back({u,1});
        mark[v]=1;
    }
    for(int i=1;i<=n;i++)
    {
        if(!mark[i])
        {
            dfs(i,0,0);
            break;
        }
    }
    int mn=all;
    for(int i=1;i<=n;i++)
    {
        mn=min(mn,all+p[i].first-p[i].second);
    }
    cout<<mn<<endl;
    for(int i=1;i<=n;i++)
    {
        if(mn==all+p[i].first-p[i].second)
        {
            cout<<i<<" ";
        }
    }
    cout<<endl;
    return 0;
}
