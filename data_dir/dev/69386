#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfl(x) scanf("%I64d" , &x)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfc(x) scanf("%c", &x)
#define mod 1000000007
#define pi (2*acos(0))
typedef long long ll;
#define endl '\n'
//freopen("cubes.in", "r", stdin);

int main()
{
    map<string, int> mp;
    string s;
    int n, x, ans = 100000000;
    mp["A"] = 100000000;
    mp["B"] = 100000000;
    mp["C"] = 100000000;
    mp["AB"] = 100000000;
    mp["AC"] = 100000000;
    mp["BC"] = 100000000;
    mp["ABC"] = 100000000;
    cin >> n;
    while (n--)
        cin >> x >> s, sort(s.begin(), s.end()), mp[s] = min(mp[s], x);
    ans = min(ans, mp["A"] + mp["B"] + mp["C"]);
    ans = min(ans, mp["A"] + mp["BC"]);
    ans = min(ans, mp["AB"] + mp["C"]);
    ans = min(ans, mp["AC"] + mp["B"]);
    ans = min(ans, mp["AB"] + mp["BC"]);
    ans = min(ans, mp["AC"] + mp["BC"]);
    ans = min(ans, mp["AC"] + mp["AB"]);
    ans = min(ans, mp["ABC"]);
    if (ans > 300000)
        cout << -1;
    else
        cout << ans;
    return 0;
}