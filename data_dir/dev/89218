#include<bits/stdc++.h>
using namespace std;
#define ll long long int
typedef pair< ll , ll > ii ;
#define pb push_back
#define mp make_pair
#define se second
#define fi first
ll n;
ll a[200100];
vector<pair<ll,ll> >g[200100];
bool used[200100];
vector<ll>ss;
ll ww[200100];
ll pos;
bool solve(int tt)
{
  //  cout<<pos<<" "<<ss[tt]<<"  "<<ww[pos]<<" "<<ww[ss[tt]]<<endl;

    if(ww[pos]-ww[ss[tt]]<=a[pos])return 1;
    return 0;
}
ll binsear(int mm,int mmax)
{
    if(mm==mmax)
    {
        if(solve(mm))
            return mm;
            return -1;
    }
    else if(mm==mmax-1)
    {
        if(solve(mm))
        {
            return mm;
        }
        if(solve(mmax))
            return mmax;
        return -1;
    }
    ll mid=(mm+mmax)/2;
    if(solve(mid))return binsear(mm,mid);
    return binsear(mid+1,mmax);

}
ll xx[200100];
void dfs(int v,ll tot)
{
    //cout<<v<<endl;
    pos=v;
    ww[v]=tot;
    used[v]=1;
    if(ss.size()!=0)
    {
        ll k=binsear(0,ss.size()-1);
       // cout<<v<<" "<<k<<endl;
        if(k!=-1)
        {
            xx[ss[ss.size()-1]]+=1;
            if(k!=0)
            {
                xx[ss[k-1]]-=1;
            }
        }
    }
    ss.pb(v);
    for(int i=0;i<g[v].size();i++)
    {
        ll to=g[v][i].first;
        ll len=g[v][i].second;
        if(!used[to])
        {
            dfs(to,tot+len);
        }
    }
    if(!ss.empty())
        ss.erase(ss.end()-1);
}
ll sol[200100];
ll ddfs(int v)
{
  used[v]=1;
  ll k=xx[v];
    for(int i=0;i<g[v].size();i++)
    {
        ll to=g[v][i].first;
        if(!used[to])
        {
            k+=ddfs(to);
        }
    }
    sol[v]=k;
    return k;
}
int main()
{
    ios::sync_with_stdio(false);
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    for(int i=2;i<=n;i++)
    {
        ll a,b;
        cin>>a>>b;
        g[a].pb(mp(i,b));
       // g[i].pb(mp(a,b));
    }
    vector<ll>x;
    dfs(1,0);
    memset(used,0,sizeof used);
    ddfs(1);
    for(int i=1;i<=n;i++)
    {
        cout<<sol[i]<<" ";
    }
    return 0;

}
