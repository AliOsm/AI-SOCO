#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

#define SZ(x) (int) (x).size() 

typedef long long ll; 

const int N = 100010;
int n;
int a[N], min_left[N], min_right[N], max_left[N], max_right[N];
bool flag = false;

int main()
{
    scanf("%d", &n);
    for (int i = 1; i <= n; ++i)
        scanf("%d", &a[i]);
    min_left[1] = 1;
    max_left[1] = 1;
    min_left[0] = max_left[0] = 0;
    for (int i = 2; i <= n; ++i)
    {
        min_left[i] = min_left[i - 1];
        max_left[i] = max_left[i - 1];
        if (a[i] > a[max_left[i]]) max_left[i] = i;
        if (a[i] < a[min_left[i]]) min_left[i] = i;
    }
    min_right[n] = n;
    max_right[n] =  n;
    max_right[n + 1] = min_right[n + 1] = n + 1;
    for (int i = n - 1; i > 0; --i)
    {
       min_right[i] = min_right[i + 1];
       max_right[i] = max_right[i + 1];
       if (a[i] > a[max_right[i]]) max_right[i] = i;
       if (a[i] < a[min_right[i]]) min_right[i] = i;
    }
    for (int i = 1; i <= n && !flag; ++i)
    {
        if (min_left[i - 1] != 0 && a[i] > a[min_left[i - 1]] && min_right[i + 1] != n + 1 && a[i] > a[min_right[i + 1]])
        {
            printf("3\n%d %d %d", min_left[i - 1], i, min_right[i + 1]);
            flag = true;
        }
        if (max_left[i - 1] != 0 && a[i] < a[max_left[i - 1]] && max_right[i + 1] != n + 1 && a[i] < a[max_right[i + 1]])
        {
            printf("3\n%d %d %d", max_left[i - 1], i, max_right[i + 1]);
            flag = true;
        }
    }
    if (!flag) printf("0");    
    return 0;
}
