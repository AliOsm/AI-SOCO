//io
#include <iostream>
#include <cstdio>
#include <cstdlib>
//data structure
#include <vector>
#include <cstring>
#include <string>
#include <queue>
#include <deque>
#include <stack>
#include <set>
#include <map>
#include <utility>
//algorithm
#include <algorithm>
#include <cmath>
//debug
#include <cassert>

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> l4;

const int maxn = 1e6+1;
char s[maxn], t[maxn], a[maxn];

int scnt[300]={0}, tcnt[300]={0};

inline void getcnt(const char *s, int *cnt)
{
  int len = strlen(s);
  for (int i = 0; i < len; ++i)
    cnt[s[i]] += 1;
}
int main()
{
  scanf("%s %s", s, t);
  getcnt(s, scnt);
  getcnt(t, tcnt);
  int k = 1e9;
  for (char c = 'a'; c <= 'z'; ++c)
    if (tcnt[c])
      k = min(k, scnt[c]/tcnt[c]);
  for (char c = 'a'; c <= 'z'; ++c)
    scnt[c] -= k*tcnt[c];
  int cur = 0;
  int n = strlen(s);
  int m = strlen(t);
  for (char c = 'a'; c <= 'z' && cur < n;)
    {
      while (scnt[c] < tcnt[c] && cur < n)
	{
	  if (s[cur] == '?')
	    {
	      s[cur] = c;
	      scnt[c] += 1;
	    }
	  ++cur;
	}
      scnt[c] -= tcnt[c];
      if (c == 'z')
	{
	  c = 'a';
	}
      else 
	{
	  c += 1;
	}
    }
  puts(s);
}
