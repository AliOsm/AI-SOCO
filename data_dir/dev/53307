#include <bits/stdc++.h>
using namespace std;
using ll = long long;

vector<size_t> prefix(string s) {
  size_t n = s.size();
  vector<size_t> p(n, 0);
  for(size_t i = 1; i < n; ++i) {
    size_t j = p[i - 1];
    while(j > 0 && s[i] != s[j]) {
      j = p[j - 1]; 
    }
    if (s[i] == s[j]) {
      ++j;
    }
    p[i] = j;
  }
  return p;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(nullptr);
  cout.tie(nullptr);
  string s, t;
  cin >> s >> t;
  int so = 0, sz = 0, to = 0, tz = 0;
  for(size_t i = 0; i < s.size(); ++i) {
    if (s[i] == '1') {
      ++so;
    } else {
      ++sz;
    }
  }
  for(size_t i = 0; i < t.size(); ++i) {
    if (t[i] == '1') {
      ++to;
    } else {
      ++tz;
    }
  } 

  if (so >= to && sz >= tz) {
    cout << t;
    so -= to;
    sz -= tz;
  }

  vector<size_t> p = prefix(t);
  // cout << "prefix" << endl;
  // for(auto i : p) {
  //   cout << i << " ";
  // }
  // cout << endl;
  size_t pos = p[t.size() - 1];
  to = 0; tz = 0;
  for(size_t i = pos; i < t.size(); ++i) {
    if (t[i] == '1') {
      ++to;
    } else {
      ++tz;
    }
  }

  while(so >= to && sz >= tz) {
    so -= to;
    sz -= tz;
    for(size_t j = pos; j < t.size(); ++j) {
      cout << t[j];
    }
  }
  while(so-- > 0) {
    cout << 1;
  }
  while(sz-- > 0) {
    cout << 0;
  }
  cout << endl;
  return 0;
}
