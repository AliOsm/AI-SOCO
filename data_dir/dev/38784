#include<bits/stdc++.h>
#define ll int
#define f first
#define s second
#define pb push_back
using namespace std;
string s,c,d;
map<pair<ll,ll>,ll>cur;
vector<ll>v[2000005],g[2000005];
set<ll>f[2000005];
set<ll>::iterator it;
map<string,ll>mp;
vector<pair<ll,ll> > ne;
ll q,h1,h2,mn;
int main(){
	
	ios::sync_with_stdio(false);
	
	
    cin >> s >> q;

    for(int i=0; i<s.size(); i++){
        string s1 = "";
        ll k = 1;
        for(int j=i; j<min((ll)s.size(),i+4); j++){
            s1 += s[j];
            k = 29 * k + (int)(s[j]-'a' + 1);
            mp[s1] = k;
            f[k].insert(i);
            v[k].pb(i);
            g[k].pb((ll)s1.size());
        }
    }
    while(q--){
        cin >> c >> d;
        ll h1=mp[c],h2=mp[d];
        if(cur[{h1,h2}]){
            cout << cur[{h1,h2}] << endl;
            continue;
        }
        if((ll)v[mp[c]].size() * (ll)v[mp[d]].size() == 0){
            cout << -1 << endl;
            continue;
        }
        if(v[h2].size() < v[h1].size())swap(c,d),swap(h1,h2);

        mn = 1000005;
        for(int i=0; i<v[h1].size(); i++){
            if((*f[h2].begin()) <= v[h1][i]){
            	it = f[h2].upper_bound(v[h1][i]);
            	it--;
            	mn = min(mn,max(v[h1][i]+(ll)c.size()-1,(*it) + (ll)d.size() - 1) - min(v[h1][i],(*it)) +1);
            }
            if((*f[h2].rbegin()) >= v[h1][i]){
            	it = f[h2].lower_bound(v[h1][i]);
            	mn = min(mn,max(v[h1][i]+(ll)c.size()-1,(*it) + (ll)d.size() - 1) - min(v[h1][i],(*it)) + 1);
            }
        }
        cur[{h1,h2}] = mn,cur[{h2,h1}] = mn;
        cout << mn << endl;
    }
    
    

    return 0;
}