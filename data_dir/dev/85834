#ifdef __APPLE__
#include <iostream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cctype>
#include <stack>
#include <list>
#include <queue>
#include <map>
#include <sstream>
#include <cmath>
#include <limits>
#include <vector>
#include <algorithm>
#include <iomanip>
#include <bitset>
#include <utility>
#include <set>
#include <numeric>
FILE *fin = freopen("./in.txt","r",stdin);
FILE *fout = freopen("./out.txt","w",stdout);
#else
#include<bits/stdc++.h>
#endif

using namespace std;

typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vi> vvi;

#define lli long long int
#define ulli unsigned long long int

#define rep(lo,hi) for(lli i=lo;i<hi;i++)
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define cases int t;  cin>>t;   while(t--)
#define all(a) a.begin(),a.end()
#define sz(a) (int)(a.size())
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define loop(i,a,b) for(int i=a; i<b; i++)
#define check(a,n) loop(i,0,n) cout<<int(a[i])<<" "; cout<<endl;

int gcd(int a, int b) {return b==0?a:gcd(b,a%b);}
int lcm(int a, int b) {return a*(b/gcd(a,b));}
lli power(lli x,  lli y)
{
    lli res = 1;     

    while (y > 0)
    {
        if (y & 1)
            res = res*x;

        // n must be even now
        y = y>>1; // y = y/2
        x = x*x;  // Change x to x^2
    }
    return res;
}
#define INF 1000000000  //(10^9)
#define MOD 1000000007  //(10^9+7)
#define N (int)2e5+10
int main() {
    ios_base::sync_with_stdio(0);
    lli n,k,q;
    cin>>n>>k>>q;
    vi a(N,0),d(N,0);
    loop(i,0,n) {
        int a,b;cin>>a>>b;
        d[a]++;
        d[b+1]--;
    }
    
    rep(1,N) {
        d[i] +=d[i-1];
        if(d[i]>=k) a[i] = a[i-1]+1;
        else a[i] = a[i-1];
        // cout<<i<<" "<<a[i]<<endl;
    }

    // cout<<"q = "<<q<<endl;
    loop(i,0,q) {
        int l,r;cin>>l>>r;
        cout<<a[r]-a[l-1]<<endl;
    }
}
