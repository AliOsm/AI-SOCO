#include <bits/stdc++.h>
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
using namespace std;

const int N = 1e5 + 9;
int arr[N], dp[N];

int main() {
	fastIO;
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
#endif
	int t;
	cin >> t;
	while(t--) {
		int n;
		cin >> n;
		for (int i = 1; i <= n; ++i)
			cin >> arr[i], dp[i] = 1;
		for (int k = n; k >= 1; --k) {
			vector<int> vv;
			for (int j = 1; (ll)j * j <= k; ++j) {
				if(j * j == k) {
					if(k % j == 0) {
						vv.push_back(j);
					}
				} else if(k % j == 0)
					vv.push_back(j), vv.push_back(k / j);
			}
			sort(vv.begin(), vv.end(), greater<int>());
			for(auto it: vv) {
				int can = arr[k] > arr[it];
				if(can)
					dp[it] = max(dp[it], dp[k] + can);
			}
		}
		int ans = 1;
		for (int i = 1; i <= n; ++i)
			ans = max(ans, dp[i]);
		cout << ans << '\n';
	}
	return 0;
}
