#include<bits/stdc++.h>
typedef long long ll;
const int N = 3 * 1e5 + 10;
using namespace std;

vector<pair<int , string> > a[N];
int f[N] , Ans = 0 , m , n;
int match[30][N]; string t;


void dfs(int v,int curr,int p=0){
    int tmpcurr = curr;
    for(auto X : a[v]){
        int u = X.first; string q = X.second;
        if(u == p)continue;
        tmpcurr = curr;
        int Q = q.length();
        for(int i=0;i<Q;i++){
            tmpcurr = match[(int)(q[i] - 'a')][tmpcurr + 1];
            if(tmpcurr == m){Ans++; tmpcurr = f[tmpcurr];}
        }
        dfs(u , tmpcurr , v);
    }
}

int main(){
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin>>n;
    for(int i=2;i<=n;i++){
        int v; cin>>v;
        string x; cin>>x;
        a[v].push_back({i , x});
        a[i].push_back({v , x});
    }

    //PreProccess On T;
    cin>>t;
    m = t.length();
    int curr = 0;
    for(int i=1;i<m;i++){
        while(curr > 0 && t[i] != t[curr])curr = f[curr];
        if(t[i] == t[curr])curr++;
        f[i + 1]=curr;
    }
    curr = 0;
    for(int i=0;i<m;i++){
        for(int j=0;j<26;j++){
            curr = i;
            char e = (char)('a' + j);
            if(t[i] == e)match[j][i + 1] = curr + 1;
            else match[j][i + 1] = match[j][f[curr] + 1];
        }
    }
    dfs(1 , 0);
    cout<<Ans<<'\n';
}
