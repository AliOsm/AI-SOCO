#include<bits/stdc++.h>
#define N 205
#define int long long
#define pb push_back
#define x first
#define y second
#define all(v) v.begin(),v.end()
using namespace std;
int t,n;
int ar[N];
vector< set< int > > br;
vector< int > cl;
set<set<int>>w;
int fr[N];
int mat[N][N];
set< int >s,q;
int vis[N];
int a;
signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    cin>>t;
    while(t--){
        vector< int > o;
        int n; cin>>n;
        br.clear();
        w.clear();
        br.resize(n);
        cl.clear();
        q.clear(),s.clear();
        for(int i=0;i<=n;i++)
            fr[i] = 0,vis[i] = 0;;
        for(int i=0;i<=n;i++){
            for(int j=0;j<=n;j++){
                mat[i][j] = 0;
            }
        }
        for(int i=0;i<n-1;i++){
            int k; cin>>k;
            for(int j=0;j<k;j++){
                cin>>a;
                fr[a]++;
                br[i].insert(a);
            }
            w.insert(br[i]);
            for(auto j: br[i]){
                for(auto l : br[i]){
                    mat[j][l] = 1;
                    mat[l][j] = 1;
                }
            }
        }
        
        vector< int > ans;
        for(int i=1;i<=n;i++){
            q.clear();
            ans.clear();
            ans.pb(i);
            int pr = i;
            s.clear();
            s.insert(i);
            while(1){
            for(int j=0;j<=n;j++)
                fr[j] = 0;
            for(int j=0;j<n-1;j++){
                if(br[j].find(pr)==br[j].end())continue;
                for(auto j:br[j]){
                    fr[j]++;
                }
            }
            int in = pr;
            for(int j=1;j<=n;j++){
                if(s.find(j)!=s.end())continue;
             if(mat[pr][j]){
                 if(in==pr)in = j;
                 else if(fr[in]<fr[j])in = j;
             } 
            }
            if(in==pr){
                break;
            }
          //  vis[i] = 1; 
            for(int j=1;j<=n;j++){
                if(s.find(j)!=s.end())continue;
                if(mat[pr][j]&&fr[j]==fr[in]){
                    pr = j; ans.pb(j);
                    s.insert(j);
               //     vis[j] = 1;
                }
            }
            }
            int co = ans.size();
            int fl = 0;
          //  cout<<i<<" ";
           // for(auto j : ans)
          //      cout<<j<<" ";
          //  cout<<"\n";
            for(int i=0;i<n-1;i++){
                int r = 0;
             for(auto j: br[i]){
                 if(s.find(j)!=s.end())r++;
             }
             if(r==0||r==co||r==br[i].size())continue;
             fl = 1; break;
            }
            int dr[n+1]={0};
            for(int i=0;i<ans.size();i++)
                dr[ans[i]] = i;
            for(int i=0;i<n-1;i++){
                  int r = 0;
             for(auto j: br[i]){
                 if(s.find(j)!=s.end())r++;
             }
             if(r==0||r==co)continue;
             for(auto j: br[i]){
                 for(auto k:br[i]){
                     if(((int)br[i].size())<(abs(dr[j]-dr[k]+1))){
                         fl = 1;
                     }
                 }
                 if(fl)break;
             }
            }
            int k = 0;
            if(ans.size()<n)continue;
            if(!fl){
                
                for(int i=1;i<ans.size();i++){
                    set< int > r; int g = 0;
                    for(int j=i;j>=0;j--){
                        r.insert(ans[j]);
                        if(w.find(r)!=w.end()){
                            g = 1; break ;
                        }
                    }
                    if(g==0)k=1;
                }
                if(k==0){
                    for(auto j:ans)
                        cout<<j<<" ";
                    cout<<"\n";
                    break;
                }
                reverse(all(ans));
                for(int i=1;i<ans.size();i++){
                    set< int > r; int g = 0;
                    for(int j=i;j>=0;j--){
                        r.insert(ans[j]);
                        if(w.find(r)!=w.end()){
                            g = 1; break ;
                        }
                    }
                    if(g==0)k=2;
                }
                if(k==1){
                    k= 0;
                    for(auto j:ans)
                        cout<<j<<" ";
                    cout<<"\n";
                    break;
                }
            }
        }
       
    }
   
    return 0;
}
