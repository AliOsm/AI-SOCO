#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define F first
#define S second
#define P_B push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define debug(x) cerr<< #x << ": " << x << endl;
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

//const int mod = 1000 * 1000 * 1000 + 7;
const int MAXN = 100 * 1000 + 10, SQ = 300;
int a[MAXN];
int t[MAXN][SQ + 30];
int w[MAXN][SQ + 30];

int main()
{
	int n, q;
	scanf("%d", &n);
	FR(i, 0, n)
		scanf("%d", a + i);


	FR(j, 1, SQ)
		ROF(i, n - 1, 0)
		{
			if(i + a[i] + j >= n)
			{
				t[i][j] = 1;
				w[i][j] = n;
				continue;
			}
			t[i][j] = 1 + t[i + a[i] + j][j];
			w[i][j] = w[i + a[i] + j][j];
		}

	scanf("%d", &q);
	while(q--)
	{
		int p, k;
		scanf("%d %d", &p, &k);
		p--;
		int ans = 0;
		if(k >= SQ)
		{
			while(p < n)
				p += a[p] + k, ans++;
		}
		else
			ans = t[p][k];
		printf("%d\n", ans);
	}

	return 0;
}

