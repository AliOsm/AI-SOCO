#include<bits/stdc++.h>
using namespace std;

#define si(n) scanf("%d",&n)
#define MAX 200005

int n,m;
set<int>even,odd,peven,podd;

int arr[MAX];


int main()
{
    //freopen("input.txt","r",stdin);
    int i,j;
    si(n);si(m);
    for(i=1;i<=n;i++){
        si(arr[i]);
        if(arr[i]%2)odd.insert(arr[i]);
        else even.insert(arr[i]);
    }
    while(odd.size()>(n/2))odd.erase(odd.begin());
    while(even.size()>(n/2))even.erase(even.begin());

    for(auto x : even)peven.insert(x);
    for(auto x : odd)podd.insert(x);
    even.clear();
    odd.clear();

     int ans=0;

    for(i=1;i<=m && (odd.size()+podd.size())<(n/2);i+=2){
        if(podd.find(i)!=podd.end())continue;
        odd.insert(i);
        ans++;
    }

    if((odd.size()+podd.size())<(n/2))return cout<<-1<<endl,0;

    for(i=2;i<=m && (even.size()+peven.size())<(n/2);i+=2){
        if(peven.find(i)!=peven.end())continue;
        even.insert(i);
        ans++;
    }

    if((even.size()+peven.size())<(n/2))return cout<<-1<<endl,0;


    printf("%d\n",ans);

    for(i=1;i<=n;i++){
        if(peven.size() && peven.find(arr[i])!=peven.end()){
            printf("%d ",arr[i]);
            peven.erase(arr[i]);
        }
        else if(podd.size() && podd.find(arr[i])!=podd.end()){
            printf("%d ",arr[i]);
            podd.erase(arr[i]);
        }
        else{
            if(even.size()){
                printf("%d ",*even.begin());
                even.erase(even.begin());
            }
            else{
                printf("%d ",*odd.begin());
                odd.erase(odd.begin());
            }
        }
    }
    printf("\n");

    return 0;
}
