/*  */
#include <iostream>
#include <sstream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <bitset>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1
#define getBits(x)		__builtin_popcount(x)
#define getBitIdx(x)	__builtin_ffs(x)

typedef long long LL;
const int maxn = 1e4+5;
int n, w, v, u;
pair<LL,LL> p[maxn];

void solve() {
	bool f1 = false, f2 = false;
	double mn = 1e20, mx = -1e20;
	
	rep(i, 0, n) {
		LL a = p[i].fir*u - p[i].sec*v;
		if (a < 0) {
			f1 = true;
		}
		if (a > 0) {
			f2 = true;
		}
		mn = min(mn, a*1.0/u);
		mx = max(mx, a*1.0/u);
	}
	
	if (f1 && f2)
		printf("%.12lf\n", w*1.0/u+mx/v);
	else
		printf("%.12lf\n", w*1.0/u);
}

int main() {
	cin.tie(0);
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	scanf("%d %d %d %d", &n, &w, &v, &u);
	rep(i, 0, n) {
		scanf("%I64d %I64d", &p[i].fir, &p[i].sec);
	}
	solve();
	
	#ifndef ONLINE_JUDGE
		printf("time = %ldms.\n", clock());
	#endif
	
	return 0;
}
