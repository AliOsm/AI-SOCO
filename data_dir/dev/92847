#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 1e6 + 123;

int n, balance;
vector < int > A, B, C;
long long answer;

int main() {

	ios_base::sync_with_stdio(0);
	
	cin >> n;
	for (int i = 1;i <= n;i++) {
		string type;
		int influence;
		cin >> type >> influence;
		
		if (type == "11") {
			balance++;
			answer += influence;
		}
		if (type == "01") {
			A.push_back(influence);
		}
		if (type == "10") {
			B.push_back(influence);
		}
		if (type == "00") {
			C.push_back(influence);
		}
	}
	
	sort(A.begin(), A.end());
	sort(B.begin(), B.end());
	while(A.size() && B.size()) {
		answer += A.back();
		answer += B.back();
		A.pop_back();
		B.pop_back();
	}
	
	if (A.empty()) swap(A, B);
	while(A.size()) {
		C.push_back(A.back());
		A.pop_back();
	}
	
	sort(C.begin(), C.end());
	while(balance && !C.empty()) {
		answer += C.back();
		C.pop_back();
		balance--;
	}
	
	cout << answer << endl;		 
	return 0;
}