//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 300005
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

i64 Q, N, idx, ans;
i64 mn[MAX];
i64 mx[MAX];
i64 a[MAX];
i64 dp[MAX];
map < i64 , i64 > mp;

int main()
{
    optimiza_io
    cin >> Q;
    while( Q -- ) {
        cin >> N;
        set < i64 > s;
        for( i64 i = 1; i <= N; i ++ ) {
            cin >> a[i];
            s.insert( a[i] );
        }
            
        idx = 0;
        for( auto v : s ) {
            mp[v] = ++idx;
            mn[idx] = N + 1;
            mx[idx] = -1;
        }
        
        ans = N;
        for( i64 i = 1; i <= N; i ++ ) {
            a[i] = mp[a[i]];
            mn[a[i]] = min( mn[a[i]] , i );
            mx[a[i]] = max( mx[a[i]] , i );
        }
        
        mn[idx + 1] = -1;
        
        for( i64 i = idx; i >= 1; i -- ) {
            if( mx[i] < mn[i + 1] )
                dp[i] = dp[i + 1];
            else
                dp[i] = i;
            ans = min( ans , i - 1 + ( idx - dp[i] ) );
        }
        cout << ans << "\n";
    }
    return 0;
}