#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long

const int N = 100001;

int m, dp[N], mod = 1e9 + 7;
vector <int> d[N];

int powlog(int a, int b){
    if(b == 0) return 1;
    int ret = powlog(a, b / 2);
    if(b % 2) return 1LL * ret * ret % mod * a % mod;
    return 1LL * ret * ret % mod;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    for(int i = 1 ; i < N ; i++)
        for(int j = i ; j < N ; j += i)
            d[j].push_back(i);
    cin >> m;
    for(int i = 2 ; i <= m ; i++){
        int n = d[i].size();
        vector <int> c(n);
        int sum = m;
        int s = 0;
        for(int j = n - 1 ; j >= 0 ; j--){
            c[j] = m / d[i][j];
            for(int k = j + 1 ; k < n ; k++)
                if(d[i][k] % d[i][j] == 0) c[j] -= c[k];
            if(d[i][j] != i) sum = (sum + 1LL * c[j] * dp[d[i][j]] % mod) % mod;
            else s = c[j];
        }
        dp[i] = 1LL * sum * powlog(m - s, mod - 2) % mod;
    }
    int ans = m;
    for(int i = 1 ; i <= m ; i++)
        ans = (ans + dp[i]) % mod;
    ans = 1LL * ans * powlog(m, mod - 2) % mod;
    cout << ans << endl;
}
