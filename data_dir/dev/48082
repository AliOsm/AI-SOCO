#include<bits/stdc++.h>
using namespace std;

#define MOD           1000000007/*998244353*/
#define pi            acos(-1)
#define int           long long 
#define D             double
#define S             second
#define F             first
#define pb            push_back
#define ff            fflush(stdout)
#define ppb           pop_back
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define ub            upper_bound
#define si(c)         (int)((c).size())
#define L(c)           c[si(c)-1]
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)      (a*(b/gcd(a,b)))  
#define accuracy      cout << fixed << setprecision(18);
#define inf           (int)9e18
#define pow(i,n)      (int)pow((int)i,n)
#define err           cerr<<"move"<<'\n';
#define print         cout<<"move"<<'\n';
#define en            '\n'

void solve(){
    int r,b,k;
    cin>>r>>b>>k;
    if((b%r==0||r%b==0)&&max(b,r)/min(r,b)-1>=k){
         cout<<"REBEL"<<endl;
         return;
    }
    else if(b%r==0||r%b==0){
         cout<<"OBEY"<<endl;
         return;
    }
    else{
         int mx=max(b,r),mn=min(b,r);
         int gc=gcd(mx,mn);
         int ans=(mx-gc)/mn;
        // cout<<gc<<endl;
         ans++;
         if(ans>=((mx-gc)%mn==0?k+1:k)){
              cout<<"REBEL"<<endl;
         }
         else cout<<"OBEY"<<endl;
    }
    
}

 
signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);    
    int t=1;
    clock_t start, end; 
    start = clock(); 
    accuracy;

    cin>>t;

    while(t--){
        solve();
    }

    end = clock();
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC); 
    //cerr<<time_taken;
}