#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define pb push_back
#define mp makes_pair
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

int n,A,B;
int aint1[4*Nmax],aint2[4*Nmax],val[Nmax];

inline void Update1(int nod, int st, int dr, int p, int x)
{
    if(st==dr)
    {
        aint1[nod]=min(x,A);
        return;
    }
    int mij=((st+dr)>>1);
    if(p<=mij)
        Update1(2*nod,st,mij,p,x);
    else
        Update1(2*nod+1,mij+1,dr,p,x);
    aint1[nod]=aint1[2*nod]+aint1[2*nod+1];
}

inline void Update2(int nod, int st, int dr, int p, int x)
{
    if(st==dr)
    {
        aint2[nod]=min(x,B);
        return;
    }
    int mij=((st+dr)>>1);
    if(p<=mij)
        Update2(2*nod,st,mij,p,x);
    else
        Update2(2*nod+1,mij+1,dr,p,x);
    aint2[nod]=aint2[2*nod]+aint2[2*nod+1];
}

inline int Query1(int nod, int st, int dr, int x, int y)
{
    if(x>y) return 0;
    if(st==x && y==dr)
        return aint1[nod];
    int mij=((st+dr)>>1);
    if(y<=mij)
        return Query1(2*nod,st,mij,x,y);
    else
        if(x>mij)
            return Query1(2*nod+1,mij+1,dr,x,y);
        else
            return Query1(2*nod,st,mij,x,mij)+Query1(2*nod+1,mij+1,dr,mij+1,y);
}

inline int Query2(int nod, int st, int dr, int x, int y)
{
    if(x>y) return 0;
    if(st==x && y==dr)
        return aint2[nod];
    int mij=((st+dr)>>1);
    if(y<=mij)
        return Query2(2*nod,st,mij,x,y);
    else
        if(x>mij)
            return Query2(2*nod+1,mij+1,dr,x,y);
        else
            return Query2(2*nod,st,mij,x,mij)+Query2(2*nod+1,mij+1,dr,mij+1,y);
}

int main()
{
    int i,j,tip,x,y,k,q;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n>>k>>A>>B>>q;
    while(q--)
    {
        cin>>tip;
        if(tip==2)
        {
            cin>>x;
            cout<<Query2(1,1,n,1,x-1)+Query1(1,1,n,x+k,n)<<"\n";
        }
        else
        {
            cin>>x>>y;
            val[x]+=y;
            Update1(1,1,n,x,val[x]);
            Update2(1,1,n,x,val[x]);
        }
    }
    return 0;
}
