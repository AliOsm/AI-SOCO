/*
 _____ _             _              _           _ 
|_   _| |__   ___   / \   _ __  ___| |__  _   _| |
  | | | '_ \ / _ \ / _ \ | '_ \/ __| '_ \| | | | |
  | | | | | |  __// ___ \| | | \__ \ | | | |_| | |
  |_| |_| |_|\___/_/   \_\_| |_|___/_| |_|\__,_|_|                                                

*/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll int,ll int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define rep(i,a,b)    for(ll int i=a;i<b;i++)
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define vii         vector<pair<ll int, ll int>>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define hell2       1000000021
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
#define time        cerr << "\nTime elapsed: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";
using namespace std;
#define N  500005
ll modi[N],modi2[N],HASH,HASH2,pdp[N],pdp2[N];
ll expo(ll base, ll exponent, ll mod) {								//return base^exponent modulo modulus
    ll ans = 1;
    while(exponent !=0 ) {
        if((exponent&1) == 1) {
            ans = ans*base ;
            ans = ans%mod;
        }
        base = base*base;
        base %= mod;
        exponent>>= 1;
    }
    return ans%mod;
}
ll modInv(ll a, ll m) {                        //return modulo inverse of a w.r.t. m
 	return expo(a,m-2,m);
}
void solve()
{
	HASH=937;
	HASH2=991;
	ll pw=1;
	string s,t;
	cin>>s>>t;
	ll n=t.length();
	ll m=s.length();
	rep(i,0,n+1)
	{
		pdp[i]=pw;
		modi[i]=modInv(pw,hell);
		pw=(pw*HASH)%hell;
	}
	pw=1;
	rep(i,0,n+1)
	{
		pdp2[i]=pw;
		modi2[i]=modInv(pw,hell2);
		pw=(pw*HASH2)%hell2;
	}
	if(n>m)
	{
		cout<<s;
		return;
	}
	vi v(n+1,0),v2(n+1,0);
	rep(i,0,n)
	{
		v[i+1]=((t[i]-'a'+1)*pdp[i])%hell;
	}
	rep(i,0,n)
	{
		v2[i+1]=((t[i]-'a'+1)*pdp2[i])%hell2;
	}
	rep(i,1,n+1)
		v[i]=(v[i]+v[i-1])%hell;
	rep(i,1,n+1)
		v2[i]=(v2[i]+v2[i-1])%hell2;
	ll ind=-1;
	rep(i,2,n+1)
    {
        ll vl=(((v[n]-v[i-1]+hell)%hell)*modi[i-1])%hell;
        ll vl2=(((v2[n]-v2[i-1]+hell2)%hell2)*modi2[i-1])%hell2;
    	ll pvl=(((v[n-i+1]-v[0]+hell)%hell)*modi[0])%hell;
        ll pvl2=(((v2[n-i+1]-v2[0]+hell2)%hell2)*modi2[0])%hell2;
        if(vl==pvl && vl2==pvl2)
        {
        	ind=i;
        	break;
        }
    }
    if(ind==-1)
    	ind=n;
    else
    	ind--;
    ll a=0,b=0,c=0,a1,b1,c1;
    rep(i,0,n)
    {
    	if(t[i]=='1')
    	{
    		b++;
    		if(i<=ind-1)
    			c++;
    	}
    }
    rep(i,0,m)
    {
    	if(s[i]=='1')
    		a++;
    }
    a1=m-a;
    b1=n-b;
    c1=ind-c;
    if(a1<b1 || a<b)
    {
    	cout<<s;
    	return ;
    }
    ll ps;
    cerr<<ind<<endl;
    cerr<<a<<" "<<b<<" "<<c<<" "<<a1<<" "<<b1<<" "<<c1<<endl;
    if(c!=0 && c1!=0)
    {
		ps=min((a-b)/c,(a1-b1)/c1);
    }
    else if(c==0)
    	ps=(a1-b1)/c1;
    else if(c1==0)
    	ps=(a-b)/c;
    rep(i,0,ps)
    {
    	cout<<t.substr(0,ind);
    }
    cout<<t;
    if(a-b-ps*c>0)
    {
    	rep(i,0,a-b-ps*c)
    	cout<<'1';
    }
    if(a1-b1-ps*c1>0)
    {
    	rep(i,0,a1-b1-ps*c1)
    	cout<<'0';
    }
	return;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		solve();
	}
	time
	return 0;
}