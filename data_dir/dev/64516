#include <bits/stdc++.h>
#define pb push_back

using namespace std;
using ll = long long int;
const int MOD = 1e9 + 7;

void solve()
{
	int n, x; cin >> n >> x;
	ll a[n];
	ll maxsub[n], store[n], dp[n][2];
	for (int i = 0; i < n; ++i)
	{
		cin >> a[i];
		maxsub[i] = max(0LL, a[i]);
		if (i) maxsub[i] = max(0LL, a[i] + maxsub[i-1]);
	}
	ll pref = 0, M = 0;
	ll ans[n] = {0};
	for (int i = 0; i < n; ++i)
	{
		pref += a[i];
		if (i == 0)
		{
			dp[i][0] = max(0LL, a[i]);
			dp[i][1] = max(0LL, 1LL*x*a[i]);

		}
		else
		{
			dp[i][0] = max(0LL,maxsub[i]);

			dp[i][1] = max(0LL, 1LL*x*a[i]);
			dp[i][1] = max(dp[i][1], 1LL*x*a[i] + max(dp[i-1][1], dp[i-1][0]));
		}
		store[i] = dp[i][1] - pref;

		ans[i] = dp[i][1];
		ans[i] = max(ans[i], dp[i][0]);

		ans[i] = max(ans[i], pref + M);
		M = max(store[i], M);
	}
	cout << *max_element(ans, ans+n);
}

//  ---------------------Template---------------------------
void InputSetup()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	#ifdef LOCAL
	freopen("in", "r", stdin);
	freopen("out", "w", stdout);
	#endif
}

int main(void)
{
	auto start = chrono::high_resolution_clock::now();

	InputSetup();
	solve();

	auto finish = chrono::high_resolution_clock::now();
	cerr << "Time elapsed: " << (chrono::duration<long double>(finish-start)).count() << "s\n";
}
//  ---------------------Template---------------------------