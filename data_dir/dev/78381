#include <bits/stdc++.h>
#define MOD ((int)1e9+7)

using namespace std;

struct matrix
{
	vector<vector<long long> > v;
	int n,m;
	matrix(int n,int m):n(n),m(m),v(vector<vector<long long> >(n))
	{
		for(int i=0;i<n;i++)
			v[i]=vector<long long>(m,0);
	}
	const matrix operator *(const matrix& other)
	{
		matrix res(n,other.m);
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<other.m;j++)
			{
				res.v[i][j]=0;
				for(int k=0;k<other.n;k++)
				{
					res.v[i][j]+=(v[i][k]%(MOD-1))*(other.v[k][j]%(MOD-1));
					res.v[i][j]%=(MOD-1);
				}
			}
		}
		return res;
	}
};

matrix poww(matrix b,long long p)
{
	if(p==1)
		return b;
	matrix res=poww(b*b,p/2);
	if(p%2)
		res=res*b;
	return res;
}

long long poww(long long a,long long b)
{
	if(b==0) return 1;
	a%=MOD;
	if(b%2) return (poww(a,b-1)*a)%MOD;
	return poww((a*a)%MOD,b/2)%MOD;
}

long long f(int x)
{
	if(x<=3) return 0;
	return (2*x-6)+f(x-1)+f(x-2)+f(x-3);
}

int main()
{
	long long n,a,b,c,d;
	cin >> n >> a >> b >> c >> d;
	matrix cc(6,1);
	       //      6 x 1
	cc.v={{0},{0},{0},{6},{4},{1}};
	matrix cv(6,6);
	cv.v[0]={1,1,1,-1,2,0};
	for(int i=1;i<6;i++)
		cv.v[i][i-(i<=2?1:0)]=1;
	cv.v[4][5]=1;
	
	matrix av(3,3);
	av.v[0]={1,1,1};
	av.v[1]={1,0,0};
	av.v[2]={0,1,0};
	av=poww(av,n-3);
	cv=poww(cv,n-3);
	cc=cv*cc;

	long long dp=poww(d%MOD,cc.v[0][0]);
	matrix fa(3,1),fb(3,1),fc(3,1);
	fa.v[2][0]=1; fb.v[1][0]=1; fc.v[0][0]=1;//={0,0,1};
	fa=av*fa; fb=av*fb; fc=av*fc;
	//cout << f(n) << " " << fa.v[0][0] << " " << fb.v[0][0] << " " << fc.v[0][0] << " " << cc.v[0][0] << endl;
	long long ap=poww(a%MOD,fa.v[0][0]);
	long long bp=poww(b%MOD,fb.v[0][0]);
	long long cp=poww(c%MOD,fc.v[0][0]);
	long long ans=((((((dp*ap)%MOD)*bp)%MOD)*cp)%MOD);
	cout << ans << endl;
}