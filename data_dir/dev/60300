#include <bits/stdc++.h>
using namespace std;

using ll = long long;
const int sz = 3e5 + 10;
const int mod = 1000007;

string s;
set < int > G[2];
vector < int > A[sz];

int main() {
        #ifdef CLown1331
                freopen("in.txt", "r", stdin);
        #endif /// CLown1331

        while( cin >> s ) {

                G[0].clear();

                G[1].clear();

                for( int i=0; i<sz; i++ ) A[i].clear();

                for( int i=0; i<s.size(); i++ ) {
                        char c = s[i];
                        G[c - '0'].insert( i + 1 );
                }

                int ans = 0;

                while( !( G[0].empty() && G[1].empty() ) ) {
                        int hand = 0;
                        for( int i=0; ; i++ ) {
                                int x = i & 1;
                                if( x == 0 ) {
                                        if( G[x].empty() || G[x].lower_bound( hand ) == G[x].end() ) {
                                                ans = -1;
                                                break;
                                        }
                                }
                                else if( x == 1 ) {
                                        if( G[x].empty() || G[x].lower_bound( hand ) == G[x].end() ) {
                                                break;
                                        }
                                }
                                hand = *G[x].lower_bound( hand );
                                A[ans].push_back( hand );
                                G[x].erase( hand );
                        }
                        if( ans == -1 ) break;
                        ans++;
                }

                cout << ans << "\n";

                if( ans != -1 ) {
                        for( int i=0; i<ans; i++ ) {
                                printf( "%d", (int)(A[i].size()) );
                                for( const int &x: A[i] ) printf( " %d", x ); printf( "\n" );
                        }
                }

                cerr << "----------\n";

        }

        return 0;
}
