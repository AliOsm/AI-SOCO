//bool ok = true;
//void _set(vvi &grid, int r, int c, int val){
//    if(!(grid[r][c] == -1 || grid[r][c] == val))
//        ok = false;
//    grid[r][c] = val;
//}
//void __(){
//    int h,w;
//    cin >> h >> w;
//    vvi grid(h+1,vi(w+1,-1));
//    _(vi,r,h);
//    _(vi,c,w);
//    rep(i,h){
//        rep(j,r[i])
//            _set(grid,i,j,0);
//        _set(grid,i,r[i],1);
//    }
//    rep(j,w){
//        rep(i,c[j])
//            _set(grid,i,j,0);
//        _set(grid,c[j],j,1);
//    }
//    ll ans = 1;
//    rep(i,h)
//        rep(j,w)
//            if(grid[i][j] == -1){
//                ans *= 2;
//                if(ans >= MOD)
//                    ans -= MOD;
//            }
//    print ok ? ans : 0;
//}
//
#include <iomanip>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define REP_ZERO_INT(i,r) for(int i = 0; i < (r); ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
const ll MOD = 1e9 + 7;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout) 
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }

    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
#define _IWI(type,name,...) type name(__VA_ARGS__); cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
bool ok = true;
void _set(vvi &grid, int r, int c, int val){
    if(!(grid[r][c] == -1 || grid[r][c] == val))
        ok = false;
    grid[r][c] = val;
}
void __(){
    int h,w;
    cin >> h >> w;
    vvi grid(h+1,vi(w+1,-1));
    _(vi,r,h);
    _(vi,c,w);
    rep(i,h){
        rep(j,r[i])
            _set(grid,i,j,0);
        _set(grid,i,r[i],1);
    }
    rep(j,w){
        rep(i,c[j])
            _set(grid,i,j,0);
        _set(grid,c[j],j,1);
    }
    ll ans = 1;
    rep(i,h)
        rep(j,w)
            if(grid[i][j] == -1){
                ans *= 2;
                if(ans >= MOD)
                    ans -= MOD;
            }
    print ok ? ans : 0;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        __();
}

