//
// Created by anand-jaisingh on 1/10/19.
//

//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >
const int maxn=(int)(1e5+5);
const ll mod=(ll)(1e9+7);
vector<int> al[maxn];

ll add(ll a,ll b)
{
    ll ret=a+b;

    if(ret>=mod)
    {
        ret-=mod;
    }

    return ret;
}

ll sub(ll a,ll b)
{
    ll ret=a-b;

    if(ret<0)
    {
        ret+=mod;
    }

    return ret;
}

ll mul(ll a,ll b)
{
    a%=mod;b%=mod;

    ll ret=(a*b)%mod;

    return ret;
}

ll poww(ll a,ll b)
{
    ll x=1,y=a%mod;

    while(b>0)
    {
        if(b%2==1)
        {
            x=mul(x,y);
        }

        y=mul(y,y);b/=2;
    }

    return x;
}

bool check(ll now,ll p,ll n)
{
    return p<=(n/now);
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);

    ll x,n;cin>>x>>n;

    vector< ll > p;

    for(ll i=2;i*i<=x;i++)
    {
        int ctr=0;

        while(x%i==0)
        {
            x/=i;

            ctr++;
        }

        if(ctr>0)
        {
            p.pb(i);
        }
    }

    if(x>1)
    {
        p.pb(x);
    }

    ll res=1;

    for(int i=0;i<p.size();i++)
    {
        ll now=1;vector< ll > v;

        while(true)
        {
            v.pb(n/now);

            if(!check(now,p[i],n))
            {
                break;
            }

            now*=p[i];
        }

        for(int j=v.size()-1;j>=0;j--)
        {
            for(int k=j+1;k<v.size();k++)
            {
                v[j]-=v[k];
            }
        }

        now=1;

        for(int j=0;j<v.size();j++)
        {
            res=mul(res,poww(now,v[j]));

            now*=p[i];
        }
    }

    cout<<res<<endl;

    return 0;
}
