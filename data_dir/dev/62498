#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define Ldouble long double
#define PI 3.1415926535897932384626

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

using namespace std;

#define mod 1000000007
#define OS 10000

int n, s[1005], cur;
int dp[20005], dp2[20005], sum1[20005], sum2[20005];

void f(int &x, int y){
	x += y;
	if(x >= mod) x -= mod;
	return;
}

int solve(int l, int r){
	if(l >= r) return 0;
	int m = (l + r) >> 1;
	int cur = solve(l, m) + solve(m + 1, r);
	
	FI(i, 0, 2 * OS) sum1[i] = sum2[i] = 0;
	
	//left
	FI(i, 0, 2 * OS) dp[i] = 0;
	dp[OS] = 1;
	
	FD(i, m, l){
		FI(j, 0, 2 * OS) dp2[j] = dp[j], dp[j] = 0;
		FI(j, 0, 2 * OS) if(dp2[j]){
			f(dp[j + s[i]], dp2[j]);
			f(dp[j - s[i]], dp2[j]);
		}
		FI(j, 0, 2 * OS) f(sum1[j], dp[j]);
	}
	
	//right
	FI(i, 0, 2 * OS) dp[i] = 0;
	dp[OS] = 1;
	
	FI(i, m + 1, r){
		FI(j, 0, 2 * OS) dp2[j] = dp[j], dp[j] = 0;
		FI(j, 0, 2 * OS) if(dp2[j]){
			f(dp[j + s[i]], dp2[j]);
			f(dp[j - s[i]], dp2[j]);
		}
		FI(j, 0, 2 * OS) f(sum2[j], dp[j]);
	}
	
	FI(i, 0, 2 * OS) cur = (cur + 1LL * sum1[i] * sum2[2 * OS - i]) % mod;
	return cur;
}

int main(){
	scanf("%d", &n);
	FI(i, 1, n) scanf("%d", &s[i]);
	printf("%d\n", solve(1, n));
	return 0;
}