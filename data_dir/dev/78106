#include<bits/stdc++.h>
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int , int> pii;

const int N = 1000*100 + 100;
vector < int > adj[2][N] , vc;
vector < pii >edge;
queue <int> q;
bool mark[N];

void BFS(int v){

	q.push(v);
	vc.pb(v);
	
	mark[v] = 1;

	while(!q.empty()){
	   
	   int x = q.front();
	   q.pop();

	   for(int u : adj[0][x])
		  if(!mark[u]){
			 mark[u] = 1;
			 q.push(u);
			 vc.pb(u);
		  }		  
	}
	
	return;
}

bool adjcnt(int u , int v){

	for(int i = 0 ; i < 2 ; i++)
	   for(int x : adj[i][u])
		  if(x == v)
			 return 1;

	return (u == v);
}

void add(int u , int v){
	
	adj[1][u].pb(v);
	adj[1][v].pb(u);
	
	edge.pb(mp(u , v));
	return;

}

int main(){
     
    ios_base::sync_with_stdio(0) , cin.tie(0) , cout.tie(0); 
        
	int n , m , u , v;
	cin >> n >> m;

	for(int i = 0 ; i < m ; i++){
	   cin >> u >> v;
	   u-- , v--;
	   adj[0][u].pb(v) , adj[0][v].pb(u);
	}
	
	if(n < 7){
		
		int P = 1 << ((n-1)*n/2);

		for(int i = 0 ; i < P ; i++){
			
			int t = 0;
			bool flag = 1;	
			for(int j = 0 ; j < n ; j++)
			   for(int k = j+1 ; k < n ; k++){
				  if((1 << t) & i)
						if(!adjcnt(j , k))
						   add(j , k);
				  
				  t++;
			   }
			
			for(int i = 0 ; i < n ; i++)
			   if(adj[1][i].size() > 2)
				  flag = 0;

			if(edge.size() >= m && flag){
			   for(auto u : edge)
				  cout << u.F + 1 << " " << u.S + 1 << endl;
				
				return 0;
			}
			
			for(int i = 0 ; i < n ; i++)
			   adj[1][i].clear();
			
			edge.clear();
		}

		cout << "-1" << endl;
		return 0;
	}
	
	for(int i = 0 ; i < n ; i++)
	   if(!mark[i])
		  BFS(i);
	
	for(int i = 0 ; i < m ; i++)
	   cout << vc[i] + 1 << " " << vc[(i + 3) % n] + 1 << endl;	

	return 0;
}
