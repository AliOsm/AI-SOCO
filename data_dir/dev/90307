#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
#define F first
#define S second
#define ii pair <int,int>
#define ever (;;)

const int N = 2050;

bool pr[N];
int n;
vector <int> v;
vector <ii> edges;

void seive()
{
    memset(pr,1,sizeof pr);
    pr[0] = pr[1] = 0;
    for(int i=2;i*i<=2040;i++)
        if(pr[i])
            for(int j=i*i;j<=2040;j+=i)
                pr[j] = 0;

    for(int i=0;i<=2040;i++)
        if(pr[i])
            v.push_back(i);
}

int main()
{
    seive();
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        if(i==n)
            edges.push_back( { 1 , n } );
        else
            edges.push_back( { i , i+1 } );

    int sz = *lower_bound(v.begin(),v.end(),n) - n;

    if(sz)
    {
        for(int i=1;i<=n;i++)
        {
            if(i%4==3 || i%4==0)
                continue;
            edges.push_back( { i , i+2 } );

            sz--;
            if(!sz)
                break;
        }
    }

    sz = (int)(edges.size());
    printf("%d\n",sz);
    for(auto x:edges)
        printf("%d %d\n",x.F,x.S);
}
