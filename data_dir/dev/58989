#include<bits/stdc++.h>
#include<cmath>
using namespace std;
#define ll long long
#define F first
#define S second
#define pb push_back
#define mp make_pair
const double PI = acos(-1.0), EPS = 1e-9;
const int MX=1*1e6+10;
int N, M, k;
char s[MX];
int p[MX];
int arr[MX];
int f(int x)
{
    if(x == p[x]) return x;
    return p[x]=f(p[x]);
}
int lf[MX], rt[MX];
int sz[MX];
void un(int x, int y)
{
    x=f(x);
    y=f(y);
    if(x == y) return;
    if(x > y) swap(x, y);
    p[y]=x;
    //while(DQ[y].size()) DQ[x].push_back(DQ[y].front()), DQ[y].pop_front();
    sz[x]+=sz[y];
}
vector<int> last, now;
int vis[MX];
int main()
{
    scanf("%s", s);
    N=strlen(s);
    for(int i=1; i<=N; i++)
        arr[i]=s[i-1]-'a';
    for(int i=0; i<=N; i++) p[i]=i,lf[i]=i-1, rt[i]=i+1, sz[i]=1;
    for(int i=2; i<=N; i++) if(arr[i] == arr[i-1]) un(i, i-1);
    for(int i=1; i<=N; i++)
    {
        /// cout<<f(i)<<" ";
        if(vis[f(i)]) continue;
        last.push_back(f(i));
        vis[f(i)]=1;
    }
    int ans=0;
    while(last.size())
    {
        if(last.size() <= 1) break;
        ++ans;
        for(int i=0; i<last.size(); i++)
        {
            last[i]=f(last[i]);
            int L=(i > 0 ? f(last[i-1]) : -1);
            int R=(i != last.size()-1 ? f(last[i+1]) : -1);
            if(L != -1) --sz[last[i]];
            if(R != -1 && sz[last[i]]) --sz[last[i]];
            if(sz[last[i]]) now.push_back(last[i]);
        }
        last.clear();
        for(int i=1; i<now.size(); i++)
        {
            now[i]=f(now[i]);
            now[i-1]=f(now[i-1]);
            if(arr[now[i]] == arr[now[i-1]])
            {
                un(now[i], now[i-1]);
                last.push_back(f(now[i]));
            }
            else
            {
                last.push_back(now[i]);
                last.push_back(now[i-1]);
            }
        }
        sort(last.begin(), last.end());
        last.resize(unique(last.begin(), last.end())-last.begin());
        now.clear();
    }
    cout<<ans;
    return 0;
}
