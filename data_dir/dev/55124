#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <sstream>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN = 100005;

int TC, n;
vector<ii> dp[MAXN];
vector<int> V;
vector<ll> tri;
bitset<MAXN> blocked;
set<int> S;

int main(){
  forn(i, MAXN){
    tri.pb((ll)i*(i+1)/2);
  }
  
  scanf("%d", &TC);
  forn(tc, TC){
    scanf("%d", &n);
    V.resize(n); S.clear();
    forn(i, n){
      scanf("%d", &V[i]);
      --V[i];
      S.insert(i);
    }
    
    vector<vector<int>> ans;
    
    while(sz(V)){
      forn(i, sz(V)+1) dp[i].clear();
      dp[0].pb({-1, -1}); forr(i, 1, sz(V)+1) dp[i].pb({MAXN, -1});
      int l = 1;
      int k = lower_bound(tri.begin(), tri.end(), sz(V)) - tri.begin();
      forn(i, sz(V)){
        int a = -1;
        int b = sz(V)+1;
        while(b - a > 1){
          int c = a + (b - a) / 2;
          if(dp[c].back().fst < V[i]){
            a = c;
          } else {
            b = c;
          }
        }
        dp[a+1].pb({V[i], i});
        l = max(l, a+1);
      }
      if(l >= k){
        //~ printf("tomar lis\n");
        // tomar lis
        vector<int> lis; lis.pb(dp[l].back().snd);
        while(--l){
          int p = sz(dp[l]) - 1;
          while(dp[l][p].snd > lis.back()) p--;
          lis.pb(dp[l][p].snd);
        }
        vector<int> W;
        blocked = 0;
        forn(i, sz(lis)) blocked[lis[i]] = 1;
        forn(i, sz(V)) if(!blocked[i]) W.pb(V[i]);
        forn(i, sz(lis)) lis[i] = V[lis[i]];
        reverse(lis.begin(), lis.end());
        ans.pb(lis);
        V = W;
      } else {
        //~ printf("tomar ldss\n");
        // tomar ldss
        forr(i, 1, l+1){
          vector<int> c;
          forr(j, 1, sz(dp[i])) c.pb(dp[i][j].fst);
          ans.pb(c);
        }
        break;
      }
    }
    
    printf("%d\n", sz(ans));
    for(auto W : ans){
      printf("%d", sz(W));
      for(auto w : W) printf(" %d", w+1);
      puts("");
    }
  }
  return 0;
}
