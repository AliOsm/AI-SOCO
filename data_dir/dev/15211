#include <bits/stdc++.h>

#ifdef NJUDGE
#include "igba.h"
#endif

using namespace std;

const int MAXN = 550;
int n, nxt[MAXN], last[26], memo[MAXN][MAXN];
char s[MAXN];

int solve(int beg, int end)
{
	if(beg == end)
		return 1;
	if(memo[beg][end] != -1)
		return memo[beg][end];
	// if(nxt[beg] > end)
		// return memo[beg][end] = solve(beg + 1, end) + 1;
	int ans = solve(beg + 1, end) + 1, aux = beg;
	while(nxt[aux] <= end)
	{
		aux = nxt[aux];
		ans = min(ans, solve(beg + 1, aux - 1) + solve(aux, end));
	}
	return memo[beg][end] = ans;
}

int main()
{
	memset(memo, -1, sizeof memo);
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i)
	{
		scanf(" %c", &s[i]);
		if(s[i] == s[i - 1])
			i--, n--;
	}
	for(int i = 0; i < 26; ++i)
		last[i] = n + 1;
	for(int i = n; i >= 1; --i)
	{
		nxt[i] = last[s[i] - 'a'];
		last[s[i] - 'a'] = i;
	}
	printf("%d\n", solve(1, n));
}