//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, greater<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e6 + 7;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
ll a[MAXN], seg[4 * MAXN];
ll sum(ll node, ll st, ll en, ll l, ll r)
{
	if(st >= r || l >= en)
		return 0;
	if(l <= st && en <= r)
		return seg[node];
	ll mid = (st + en) >> 1;
	return (sum(node << 1, st, mid, l, r) + sum(node << 1 | 1, mid, en, l, r)) % MOD;
}
void upd(ll node, ll st, ll en, ll idx, ll val)
{
	if(en - st < 2)
	{
		seg[node] = val;
		return;
	}
	ll mid = (st + en) >> 1;
	if(st <= idx && idx < mid)
		upd(node << 1, st, mid, idx, val);
	else
		upd(node << 1 | 1, mid, en, idx, val);
	seg[node] = (seg[node << 1] + seg[node << 1 | 1]) % MOD;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	ll n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = n - 1; i >= 0; i--)
	{
		ll cnt = sum(1, 0, MAXN, a[i], MAXN);
		cnt = (cnt * a[i]) % MOD, cnt = (cnt + a[i]) % MOD;
		upd(1, 0, MAXN, a[i], cnt);
	}
	cout << sum(1, 0, MAXN, 0, MAXN);
}
