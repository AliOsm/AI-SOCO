#include <bits/stdc++.h>

#define ss second
#define ff first
#define pb push_back
#define faster ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define error(args...) {string _s=#args;replace(_s.begin(),_s.end(),',',' ');stringstream _ss(_s);istream_iterator<string> _it(_ss);err(_it,args);}

using namespace std;

void err(istream_iterator<string> it){}
template <typename S37,typename... Args>
void err(istream_iterator<string> it,S37 a,Args... args){cerr<<*it<<" = "<<a<<endl;err(++it,args...);}

typedef long long ll;
typedef long double ld;

const long long N=200100,mod=1e9+7,mod2=1e9+9,mod3=998244353,sq=450,base=37,lg=25,inf=1e18+10,del=79589;

ll n,m,x,y,z,w,X,Y,Z,W,t,k,b,h[N],dp[N];

pair <ll,pair<ll,ll> > p[N];
vector <pair<ll,ll> > v[N];
vector <ll> ans,g;
void dfs(ll x,ll kk=0){
    dp[x]=kk;
    h[x]=1;
    for(int i=0;i<v[x].size();i++)
        if(h[v[x][i].ff]==0 && dp[v[x][i].ff]>kk+v[x][i].ss)dfs(v[x][i].ff,kk+v[x][i].ss);
    h[x]=0;
}
int main(){
    faster;
    cin>>n>>m>>k;
    for(int i=0;i<m;i++)cin>>p[i].ss.ff>>p[i].ss.ss>>p[i].ff;
    sort(p,p+m);
    for(int i=0;i<min(m,k);i++){
        v[p[i].ss.ff].pb({p[i].ss.ss,p[i].ff});
        v[p[i].ss.ss].pb({p[i].ss.ff,p[i].ff});
    }
    for(int i=1;i<=n;i++)if(v[i].size()!=0)g.pb(i);
    for(int i=0;i<g.size();i++){
        for(int j=0;j<g.size();j++)dp[g[j]]=inf;
        dfs(g[i]);
        for(int j=i+1;j<g.size();j++)ans.pb(dp[g[j]]);
    }
    sort(ans.begin(),ans.end());
    cout<<ans[k-1];
    return 0;
}
/// Home Sweet Home!
