// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define ll long long int
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif

int main() {
    fast_io()
    
    int n, m;
    cin >> n >> m;
    int deg[n + 13], cnt2 = 0;
    memset(deg, 0, sizeof deg);
    int fl = 0;
    for(int i = 1; i <= m; i++) {
        int u, v;
        cin >> u >> v;
        deg[u]++;
        deg[v]++;
    }
    for(int i = 1; i <= n; i++) {
        if(deg[i] == n - 1) {
            fl = i;
        }
    }
    if(fl) {
        if(m == n - 1) {
            for(int i = 1; i <= n; i++) {
                if(i == fl) continue;
                if(deg[i] != 1) {
                    fl = 0;
                    break;
                }
            }
            if(fl) {
                cout << "star topology";
                return 0;
            }
        }
    }
    cnt2 = 0;
    for(int i = 1; i <= n; i++) {
        cnt2 += (deg[i] == 2);
    }
    if(cnt2 == n && m== n) {
        cout<<"ring topology";
        return 0;
    }
    if(cnt2 == n - 2 && m == n - 1) {
        cout << "bus topology";
        return 0;
    }
	cout<<"unknown topology";
	return 0;
}
