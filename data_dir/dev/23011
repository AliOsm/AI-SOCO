#include <iostream>
#include <set>
using namespace std;

multiset<int>unused,sold;

long long ans=0;

int main()
{
  ios_base::sync_with_stdio(0);cin.tie(0);
  int N;
  cin>>N;
  for (int i=0;i<N;i++){
    int X;
    cin>>X;
    if (unused.empty() && sold.empty())
      unused.insert(X);
    else if (unused.empty()){
      int Y=*sold.begin();
      if (Y<X){
	sold.erase(sold.find(Y));
	unused.insert(Y);
	sold.insert(X);
	ans+=X-Y;
      }
      else
	unused.insert(X);
    }
    else if (sold.empty()){
      int Y=*unused.begin();
      if (Y<X){
	unused.erase(unused.find(Y));
	sold.insert(X);
	ans+=X-Y;
      }
      else
	unused.insert(X);
    }
    else{
      int Y=min(*unused.begin(),*sold.begin());
      if (Y<X){
	if (Y==*unused.begin()){
	  unused.erase(unused.find(Y));
	  sold.insert(X);
	  ans+=X-Y;
	}
	else{
	  sold.erase(sold.find(Y));
	  unused.insert(Y);
	  sold.insert(X);
	  ans+=X-Y;
	}
      }
      else
	unused.insert(X);
    }
  }
  cout<<ans<<endl;
  return 0;
}
