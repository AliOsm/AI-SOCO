#include <iostream>
#include <iomanip>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long int64;
typedef pair<int64, int64> ii;

vector<int64> v;
void gen(int64 a, int d) {
	if (d > 10) return;
	v.push_back(a);
	gen(a * 10 + 4, d + 1);
	gen(a * 10 + 7, d + 1);
}
int64 len(ii a) {
	return a.second - a.first + 1;
}
int64 inter(ii a, ii b) {
	return max(min(a.second, b.second) - max(a.first, b.first) + 1, 0LL);
}
int main() {
	gen(0, 0);
	sort(v.begin(), v.end());
	ii a, b;
	int k;
	cin >> a.first >> a.second >> b.first >> b.second >> k;
	int64 cnt = 0;
	for (int i = 0; i + k + 1 < v.size(); ++i) {
		ii left(v[i] + 1, v[i + 1]), right(v[i + k], v[i + k + 1] - 1);
		cnt += inter(left, a) * inter(right, b) +
			inter(right, a) * inter(left, b);
		if (right.first == left.second) {
			ii pt(left.second, left.second);
			if (inter(pt, a) && inter(pt, b)) {
				--cnt;
			}
		}
	}
	cout << fixed << setprecision(12) << double(cnt) / len(a) / len(b);
}
