#include<bits/stdc++.h>
using namespace std;

#define scl(x) scanf("%lld",&x)
#define sc(x)  scanf("%d",&x)
#define ll long long
#define lop(i,n) for(int i=0;i<n;++i)
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;

int sI(int id){
	return (id/3)*4;
}
int sJ(int id){
	return (id%3)*4;
}

int adjMat[10][10];
int n,done[10],compId[10],Id;
vector<int> topo;
int vis[10];
void dfs(int cur){
	if(vis[compId[cur]]++)return;
	for(int i=0;i<n;i++)
		if(adjMat[cur][i])
			dfs(i);
	topo.push_back(compId[cur]);
}
int layerId[10],sz[10];

char grid[17][11][11];

int main(){
#ifndef ONLINE_JUDGE
	freopen("i.txt","r",stdin);
#endif
	sc(n);
	lop(i,n)lop(j,n)sc(adjMat[i][j]);
	lop(i,n)adjMat[i][i]=1;
	lop(i,n)lop(j,n)lop(k,n)
			adjMat[j][k]|=(adjMat[j][i]&&adjMat[i][k]);
	lop(i,n){
		if(done[i])continue;
		compId[i]=Id;
		for(int j=i+1;j<n;j++)
			if(adjMat[i][j]&&adjMat[j][i]){
				compId[j]=Id;
				done[j]=1;
			}
		Id++;
	}
	memset(grid,'.',sizeof grid);
	for(int i=0;i<n;i++)
		dfs(i);
	reverse(topo.begin(),topo.end());
	for(int i=0;i<topo.size();i++)
		layerId[topo[i]]=16-i*2;


	lop(i,n){
		int cId=compId[i];
		int lId=layerId[cId];
		int si=sI(cId);
		int sj=sJ(cId);
		int di=sz[cId]/3;
		int dj=sz[cId]%3;
		grid[lId][si+di][sj+dj]='0'+i+1;
		sz[cId]++;
	}
	for(int layer = 1;layer<17;layer+=2){
		lop(i,11)lop(j,11)grid[layer][i][j]='#';
		for(int i=1;i<11;i+=4)
			for(int j=1;j<11;j+=4)
				grid[layer][i][j]='.';
	}

	for(int i=0;i<Id;i++)
		if(layerId[i])
			grid[layerId[i]-1][sI(i)+1][sJ(i)+1]='#';

	lop(i,n)lop(j,n){
		if(adjMat[i][j])continue;
		int c1=compId[i];
		int c2=compId[j];
		int layer = layerId[c1];
		int si=sI(c2);
		int sj=sJ(c2);
		for(int a=0;a<3;a++)
			for(int b=0;b<3;b++)
				if(a!=1 || b!=1)
					grid[layer][si+a][sj+b]='#';
	}
	cout<<11<<" "<<11<<" "<<17<<endl;
	for(int layer=16;layer>=0;layer--){
		for(int i=0;i<11;i++){
			for(int j=0;j<11;j++)
				printf("%c",grid[layer][i][j]);
			cout<<endl;
		}
		cout<<endl;
	}
}
