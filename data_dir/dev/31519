#define __USE_MINGW_ANSI_STDIO 0
#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define INF (1LL<<59)
#define ff first
#define ss second
#define mod 998244353
#define pb push_back
#define mp make_pair
#define int long long
#define all(a) a.begin(), a.end()
#define inf (1LL<<61)
#define ull unsigned long long
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
int gcd(int x,int y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
int expo(int n,int m,int p)   //modULAR EXPONENTIATION
{
    int r=1;
    n=n%p;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
bool isPrime(int n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;
 
    // This is checked so that we can skip 
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;
 
    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;
 
    return true;
}
int32_t main()
{
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif 
   /********************* Code starts here ***********************/   
   int t;
   cin>>t;
   while(t--)
   {
   	int n,k;
   	cin>>n>>k;
   	int a[n+1][4],b[n+1][4],c[n+1][4];
   	string s;
   	cin>>s;
   	memset(a,0,sizeof(a));
   	memset(b,0,sizeof(b));
   	memset(c,0,sizeof(c));
   	for(int i=0;i<n;i++)
   	{
   		for(int j=0;j<3;j++)
   		{
   			a[i+1][j]=a[i][j];
   			b[i+1][j]=b[i][j];
   			c[i+1][j]=c[i][j];
   		}
   		if(s[i]=='R')
   		{
   			a[i+1][(i+1)%3]++;
   		}
   		if(s[i]=='G')
   		{
   			b[i+1][(i+1)%3]++;
   		}
   		if(s[i]=='B')
   		{
   			c[i+1][(i+1)%3]++;
   		}
   	}
   	int ans=inf;
   	for(int i=0;i<n;i++)
   	{
   		if(i+k>n)
   			continue;
   		int f=0;
   		if(k>=3&&i+k<=n)
   		{
   			int rR=k/3,tf1=0;
   			if(k%3)
   				rR++;
   			int pR=a[i+k][(i+1)%3]-a[i][(i+1)%3];
   			int rG=k/3;
   			if(k%3==2)
   				rG++;
   			int pG=b[i+k][(i+2)%3]-b[i][(i+2)%3];
   			int rB=k/3;
   			int pB=c[i+k][(i+3)%3]-c[i][(i+3)%3];
   			tf1=rR+rB+rG-pR-pB-pG;
   			int rG2=k/3,tf2=0;
   			if(k%3)
   				rG2++;
   			int pG2=b[i+k][(i+1)%3]-b[i][(i+1)%3];
   			int rB2=k/3;
   			if(k%3==2)
   				rB2++;
   			int pB2=c[i+k][(i+2)%3]-c[i][(i+2)%3];
   			int rR2=k/3;
   			int pR2=a[i+k][(i+3)%3]-a[i][(i+3)%3];
   			tf2=rR2+rB2+rG2-pR2-pB2-pG2;
   			int rB3=k/3,tf3=0;
   			if(k%3)
   				rB3++;
   			int pB3=c[i+k][(i+1)%3]-c[i][(i+1)%3];
   			int rR3=k/3;
   			if(k%3==2)
   				rR3++;
   			int pR3=a[i+k][(i+2)%3]-a[i][(i+2)%3];
   			int rG3=k/3;
   			int pG3=b[i+k][(i+3)%3]-b[i][(i+3)%3];
   			tf3=rR3+rB3+rG3-pR3-pB3-pG3;
   			f=min(tf1,min(tf2,tf3));
   		}
   		if(k==2)
   		{
   			if(i+1<n)
   			{
   				if(s[i]=='R'&&s[i+1]=='G')
   					ans=0;
   				else if(s[i]=='G'&&s[i+1]=='B')
   					ans=0;
   				else if(s[i]=='B'&&s[i+1]=='R')
   					ans=0;
   				else
   					f=1;
   			}
   		}
   		//cout<<f<<endl;
   		ans=min(ans,f);
   	}
   	cout<<ans<<endl;
   }
}        