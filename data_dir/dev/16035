#include <iostream>
#include <vector>
using namespace std;
int n, k, cnt = 0;
const int LEN = 14, MAX_N = 16385;

int kar[MAX_N];
void rec(int mask, int ind, int on) {
    if (on == k) {
        if (kar[mask] == 0) cnt++;
        kar[mask] = 1;
        return;
    }
    for (int i = ind; i < LEN && LEN - i + on >= k; i++) {
        rec( mask | (1 << i), i + 1, on + 1);
        if (LEN - i + on > k) rec(mask, i + 1, on);
    }
}
void found() {
    rec(0, 0, 0);
}

int main() {
    ios::sync_with_stdio(0);
    cin >> n >> k;
    found();
    vector<int> a(cnt);
    cnt = 0;
    for (int i = 0; i < MAX_N; i++) {
        if (kar[i]) {
            a[cnt++] = i;
        }
        kar[i] = 0;
    }
    int cur;
    long long ans = 0;
    while (n--) {
        cin >> cur;
        for (int i = 0; i < cnt; i++) {
            ans += kar[cur ^ a[i]];
        }
        kar[cur]++;
    }
    cout << ans;
}
