#include <bits/stdc++.h>

using namespace std;

int n, k;
int m[100000], a[100000], rez = 0, ans;

void dfs(int l, int r, int ans)
{
    int z = a[l];
    for (int i = l; i <= r; ++i)
        z = max(z, a[i]);
    rez += ans - z;
    if (l == r)
        return ;
    dfs(l, (l + r) / 2, z);
    dfs((l + r) / 2 + 1, r, z);
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> n;
    k = 1;
    for (int i = 0; i < n + 1; ++i)
        k *= 2;
    for (int i = 2; i <= k - 1; ++i)
        cin >> m[i];
    for (int i = 2; i <= k - 1; ++i)
        a[i] = m[i] + a[i / 2];
    ans = a[k / 2];
    for (int i = k / 2; i <= k - 1; ++i)
        ans = max(ans, a[i]);
    dfs(k / 2, k / 2 + k / 4 - 1, ans);
    dfs(k / 2 + k / 4, k - 1, ans);
    cout << rez << '\n';
    return 0;
}
