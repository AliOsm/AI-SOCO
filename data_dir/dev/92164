#pragma comment(linker, "/STACK:256000000")

#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <iomanip>
#include <fstream>
#include <string.h>
#include <math.h>
#include <time.h>
#include <assert.h>
#include <memory.h>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <utility>
#include <algorithm>
#include <random>
#include <unordered_map>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
const int INF = (int)(1e9 + 1337);
const int64 LINF = (int64)(2e18);
const double EPS = 1e-11;
#define sq(x) ((x)*(x))


const int MAXN = 300100;

int n, t;
string st;
int mas[MAXN], pos;
void solve()
{
	cin >> n >> t;
	cin >> st;
	n = 0;
	for(int i = 0; i < st.size(); ++i)
	{
		if (st[i] == '.')
		{
			pos = n;
			continue;
		}
		mas[n++] = st[i] - '0';
	}
	int from = n - 1;
	for(int i = pos - 1; i < n - 1; ++i)
	{
		if (mas[i + 1] >= 5)
		{
			mas[i]++;
			t--;
			from = i;
			break;
		}
	}
	for(int i = from - 1; i >= pos - 1; --i)
	{
		if (!t)
			break;
		if (mas[i + 1] < 5)
			break;
		mas[i]++;
		from = i;
		t--;
	}
	for(int i = from; i > 0; --i)
	{
		if (mas[i] == 10)
		{
			mas[i] = 0;
			mas[i - 1]++;
		}
	}
	for(int i = 0; i < pos; ++i)
		cout << mas[i];
	if (pos <= from)
	{
		cout << '.';
		for(int i = pos; i <= from; ++i)
			cout << mas[i];
	}
}

int main()
{
#ifdef _MY_DEBUG
	freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
#endif
	srand(1337);
	
	int ts = 1;
	//cin >> ts;
	for(int i = 0; i < ts; ++i)
		solve();
	
	return 0;
}