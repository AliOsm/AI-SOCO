#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int t;
	cin >> t;
	
	while(t--){
		int n;
		cin >> n;
		
		vector<ll> v(n);
		for(int i = 0; i < n; i++)
			cin >> v[i];
		
		int lo = -1, hi = -1;
		
		for(int i = 0; i + 1 < n; i++){
			if(abs(v[i] - v[i + 1]) > 1){
				lo = i + 1;
				hi = i + 2;
				break;
			}
		}
		
		if(lo == -1)
			cout << "NO" << endl;
		else{
			cout << "YES" << endl;
			cout << lo << " " << hi << endl;
		}
	}

	return 0;
}
