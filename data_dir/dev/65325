/**
 * @author khokharnikunj8
 */

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

class BHomecoming {
public:
    void solve(std::istream &in, std::ostream &out) {
        int a, b, p;
        in >> a >> b >> p;
        string s;
        in >> s;
        vector<pair<int, int>> vc;
        for (int i = 0; i < s.length() - 1;) {
            int j = i;
            while (j < s.length() - 1 && s[j] == s[i]) j++;
            vc.push_back({s[i] - 'A', i});
            i = j;
        }
        int last = s.length();
        for (int i = vc.size() - 1; i >= 0; i--) {
            if (vc[i].first == 0) {
                if (p >= a) p -= a;
                else {
                    out << last << "\n";
                    return;
                }
            } else {
                if (p >= b) p -= b;
                else {
                    out << last << "\n";
                    return;
                }
            }
            last = vc[i].second + 1;
        }
        out << last << "\n";

    }
};


int main() {
    BHomecoming solver;
    std::ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    int n;
    in >> n;
    for (int i = 0; i < n; ++i) {
        solver.solve(in, out);
    }

    return 0;
}
