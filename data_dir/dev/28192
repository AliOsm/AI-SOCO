#include <bits/stdc++.h>

using namespace std;
const int N = 101;
int n;
struct item {
    int val, burn, save, ind;

    bool operator < (const item & a) const {
        return burn < a.burn;
    }

};
item arr[N];
int dp[N][N*N];
vector <int> items;

int solve(int i, int currTime) {
    if(i == n)
        return dp[i][currTime] = 0;
    if(dp[i][currTime] != -1)
        return dp[i][currTime];
    int ans = solve(i+1,currTime);
    if(currTime + arr[i].save < arr[i].burn)
        ans = max(ans,arr[i].val + solve(i+1,currTime+arr[i].save));
    return dp[i][currTime] = ans;
}

void getItems(int i, int currTime) {
    if(i == n)
        return;
    if(dp[i][currTime] == dp[i+1][currTime]) {
        getItems(i+1,currTime);
    } else {
        items.push_back(arr[i].ind+1);
        getItems(i+1,currTime+arr[i].save);
    }
}


int main()
{
    scanf("%d",&n);
    for(int i= 0;i<n;i++) {
        scanf("%d%d%d",&arr[i].save,&arr[i].burn,&arr[i].val);
        arr[i].ind = i;
    }
    sort(arr,arr+n);
    memset(dp,-1,sizeof dp);
    printf("%d\n",solve(0,0));
    getItems(0,0);
    printf("%d\n",items.size());
    for(int i : items)
        printf("%d ",i);

    return 0;
}
