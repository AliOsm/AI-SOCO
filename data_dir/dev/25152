#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <cstring>
#include <cassert>
#include <memory>
#include <chrono>
#include <cstdio>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include <set>
#include <map>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,n,a) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxn=(int)3e5+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

int m,k;
ll n;

struct mat{
    ll c[52][52];
    friend mat operator *(const mat&a,const mat&b){
        mat ret;
        rep(i,0,m)rep(j,0,m){
            ret.c[i][j]=0;
            rep(k,0,m){
                ret.c[i][j]+=a.c[i][k]*b.c[k][j];
                ret.c[i][j]%=mod;
            }
        }
        return ret;
    }
};

int get(char c){
    if('a'<=c&&c<='z')return c-'a';
    return 26+c-'A';
}

int main() {

   // freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);

    cin>>n>>m>>k;

    mat base;
    rep(i,0,m)rep(j,0,m)base.c[i][j]=1;
    rep(i,0,k){
        char a,b;
        cin>>a>>b;
        base.c[get(a)][get(b)]=0;
    }
    mat ret;
    rep(i,0,m)rep(j,0,m)ret.c[i][j]=(i==j);
    n--;
    while(n){
        if(n&1)ret=ret*base;
        base=base*base;
        n/=2;
    }
    ll res=0;
    rep(i,0,m)rep(j,0,m)res+=ret.c[i][j];
    cout<<res%mod<<endl;
    return 0;
}
