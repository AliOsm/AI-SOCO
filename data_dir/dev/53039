#include <iostream>

using namespace std;

int p[505], pp[10005][505], ss[10005][505], x[10005], y[10005];

int findParent(int n) {
  if (p[n] == n)
    return n;
  return p[n] = findParent(p[n]);
}

int main(int argc, char** argv) {
  int n, m, k, l, r, cnt;
  ios::sync_with_stdio(0);
  cin >> n >> m;
  for (int i = 1; i <= n; i++)
    p[i] = pp[0][i] = i;
  for (int i = 1; i <= m; i++) {
    cin >> x[i] >> y[i];
    if (findParent(x[i]) != findParent(y[i]))
      p[p[x[i]]] = p[y[i]];
    for (int j = 1; j <= n; j++)
      pp[i][j] = p[j];
  }
  for (int i = 1; i <= n; i++)
    p[i] = ss[m+1][i] = i;
  for (int i = m; i; i--) {
    if (findParent(x[i]) != findParent(y[i]))
      p[p[x[i]]] = p[y[i]];
    for (int j = 1; j <= n; j++)
      ss[i][j] = p[j];
  }
  cin >> k;
  while (k--) {
    cin >> l >> r;
    for (int i = 1; i <= n; i++)
      p[i] = pp[l-1][i];
    for (int i = 1; i <= n; i++)
      if (findParent(i) != findParent(ss[r+1][i]))
        p[p[i]] = p[ss[r+1][i]];
    cnt = 0;
    for (int i = 1; i <= n; i++)
      if (p[i] == i)
        cnt++;
    cout << cnt << endl;
  }
  return 0;
}