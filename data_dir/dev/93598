#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.1415926535897
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

int x[100100];
int y[100100];

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
	double beg = clock();
#endif

	int n, m;
	scanf("%d%d", &n, &m);
	FOR(i, 0, m)
	{
		scanf("%d%d", &x[i], &y[i]);
	}
	FOR(i, 0, m - 1)
	{
		int dy = ABS(y[i + 1] - y[i]);
		int dx = ABS(x[i + 1] - x[i]);
		if (dy > dx)
		{
			printf("IMPOSSIBLE\n");
			return 0;
		}
	}
	int res = y[0] + x[0] - 1;
	res = MAX(res, y[m - 1] + n - x[m - 1]);
	FOR(i, 0, m - 1)
	{
		int val = x[i + 1] - x[i] + y[i]+y[i+1];
		res = MAX(res, val / 2);
	}
	cout << res << endl;

#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}