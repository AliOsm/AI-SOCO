//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 1000001

vector<ll>v[maxn];
vector<ll>o;
ll size[maxn],node[maxn],index1[maxn],ind[maxn];

void dfs(int cur)
{
    o.pb(cur);
    size[cur]=1;
    for(ll i=0;i<v[cur].size();i++)
    {
        dfs(v[cur][i]);
        size[cur]+=size[v[cur][i]];
    }    
}
int main()
{
    boost1;boost2;
    ll i,j,n,q,x,y;
    cin>>n>>q;
    for(i=2;i<=n;i++)
    {
        cin>>x;
        v[x].pb(i);
    }
    for(i=1;i<=q;i++)
    cin>>node[i]>>index1[i];
    for(i=1;i<=n;i++)
    sort(all(v[i]));
    o.pb(-1);
    dfs(1);
    for(i=1;i<=n;i++)
    ind[o[i]]=i;
    for(i=1;i<=q;i++)
    {
        if(size[node[i]]<index1[i])
        {
            cout<<"-1"<<endl;
            continue;
        }
        cout<<o[ind[node[i]]+index1[i]-1]<<endl;
    }
    return 0;
}
