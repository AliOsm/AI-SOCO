#include <bits/stdc++.h>
using namespace std;

long long ans = 0;
long long C2(long long a) {
  return a * (a - 1) / 2;
}


int main () {
  ios_base::sync_with_stdio(false); cin.tie(0);
  int t; cin >> t;
  while (t--) {
    int n, m; cin >> n >> m;
    vector<vector<int>> g(n);
    for (int i = 0; i < m; ++i) {
      int a, b; cin >> a >> b;
      --a, --b;
      g[a].push_back(b);
      g[b].push_back(a);
    }
    vector<int> vis(n, -1);
    function<void(int, int)> dfs = [&](int u, int c) {
      vis[u] = c;
      for (int v : g[u]) if (vis[v] == -1) {
        vis[v] = !c;
        dfs(v, !c);
      }
    };
    dfs(0, 0);
    vector<int> ans;
    int a = count(vis.begin(), vis.end(), 1) <= n / 2;
    for (int i = 0; i < n; ++i) if (vis[i] == a) ans.push_back(i + 1);
    cout << ans.size() << '\n';
    for (int i = 0; i < ans.size(); ++i) {
      cout << ans[i] << " \n"[i == ans.size() - 1];
    }
  }
}

