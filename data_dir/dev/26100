#include <bits/stdc++.h>

using namespace std;

const int MAX = 300010;

vector <int> a[5];
long long sum[5][MAX];
int last1[MAX];
int last3[MAX];

int main() {
  int n, m;
  scanf("%d %d", &n, &m);
  for (int i = 0; i <= 3; ++i) {
    a[i].clear();
  }
  for (int i = 0; i < n; ++i) {
    int w, v;
    scanf("%d %d", &w, &v);
    a[w].push_back(v);
  }
  for (int i = 1; i <= 3; ++i) {
    sort(a[i].begin(), a[i].end());
    reverse(a[i].begin(), a[i].end());
  }
  for (int i = 1; i <= 3; ++i) {
    sum[i][0] = 0;
    for (int j = 0; j < (int)a[i].size(); ++j) {
      sum[i][j + 1] = sum[i][j] + a[i][j];
    }
  }
  {
    int i1 = 0;
    int i3 = 0;
    int j = 0;
    while (j < MAX) {
      last1[j] = i1;
      last3[j] = i3;
      int ni1 = min((int)a[1].size(), i1 + 3);
      int ni3 = min((int)a[3].size(), i3 + 1);
      if (sum[1][ni1] - sum[1][i1] > sum[3][ni3] - sum[3][i3]) {
        i1 = ni1;
      } else {
        i3 = ni3;
      }
      ++j;
    }
  }
  long long ans = 0;
  for (int i2 = 0; i2 <= (int)a[2].size(); ++i2) {
    int nm = m - i2 * 2;
    if (nm < 0) {
      continue;
    }
    int r = nm / 3;
    int i1 = last1[r];
    int i3 = last3[r];
    for (int d1 = -10; d1 <= 10; ++d1) {
      int ni1 = i1 + d1;
      if (ni1 < 0 || ni1 >= (int)a[1].size() + 1) {
        continue;
      }
      int nnm = nm - ni1;
      if (nnm < 0) {
        continue;
      }
      for (int d3 = -10; d3 <= 10; ++d3) {
        int ni3 = i3 + d3;
        if (ni3 < 0 || ni3 >= (int)a[3].size() + 1) {
          continue;
        }
        if (nnm - ni3 * 3 >= 0) {
          long long cur = sum[1][ni1] + sum[2][i2] + sum[3][ni3];
          if (cur > ans) {
            ans = cur;
          }
        }
      }
    }
  }
  printf("%lld", ans);
}