#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()
#define endl "\n"

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

 	ll t;
 	cin >> t;
 	while(t--)
 	{
 		ll st, in, ex;
 		cin >> st >> in >> ex;
 		if(st > in + ex) 
 		{	
 			cout << ex + 1 << endl;
 			continue;
 		}	
 		ll val = (in + ex - st) / 2 + 1;
 		val = max(val, 0ll);
 		if(val > ex) cout << 0 << endl;
 		else cout << ex - val + 1 << endl;
 		
 	}   
    return 0;
}