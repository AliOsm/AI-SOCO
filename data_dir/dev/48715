#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

const int N = 300100;

int n, k;

pair<int, int> a[N];

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    cin >> n >> k;

    ll ans = 0;
    for (int i = 1; i <= n; i++){
        cin >> a[i].second >> a[i].first;
    }
    multiset<int> q;
    multiset<int> q2;
    sort(a+1, a+n+1);
    ll sum = 0;
    for (int i = 1; i <= n; i++){
        if (q.size() < k){
            q.insert(a[i].second);
            sum += a[i].second;
        } else
        if (*q.begin() < a[i].second){
            sum -= *q.begin();
            q2.insert(*q.begin());
            q.erase(q.begin());
            q.insert(a[i].second);
            sum += a[i].second;
        } else
            q2.insert(a[i].second);
    }
    for (int i = 1; i <= n; i++){
        ans = max(ans, sum*a[i].first);
        if (q2.find(a[i].second) == q2.end()){
            q.erase(q.find(a[i].second));
            sum -= a[i].second;
        } else {
            q2.erase(q2.find(a[i].second));
        }
        while(q.size() < k && !q2.empty()){
            q.insert(*prev(q2.end()));
            sum += *prev(q2.end());
            q2.erase(prev(q2.end()));
        }
    }
    cout << ans;

}
