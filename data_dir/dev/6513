#include<bits/stdc++.h>
using namespace std;

const int N = 100 + 20, inf = 100000;
int a[N], dp[N][N][N][2];

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    int ans = 0, cnt = 0, tmp[] = {n / 2, (n + 1) / 2};
    for (int i = 0; i < n; i++)
        if (a[i])
            tmp[a[i] % 2]--;
    for (int i = 0; i < n; i++) {
        cnt += (a[i] == 0);
        for (int j = 0; j <= n; j++)
            for (int k = 0; k <= n; k++) 
                if (j <= tmp[0] && k <= tmp[1] && j + k == cnt) {
                    if (a[i]) {
                        dp[i][j][k][a[i] % 2] = (i? min(dp[i - 1][j][k][a[i] % 2], dp[i - 1][j][k][1 - a[i] % 2] + 1): 0);
                        dp[i][j][k][1 - a[i] % 2] = inf;
                    }
                    else {
                        dp[i][j][k][0] = (j? (i? min(dp[i - 1][j - 1][k][1] + 1, dp[i - 1][j - 1][k][0]): 0): inf);
                        dp[i][j][k][1] = (k? (i? min(dp[i - 1][j][k - 1][0] + 1, dp[i - 1][j][k - 1][1]): 0): inf);
                    }
                }
    }
    return cout << min(dp[n - 1][tmp[0]][tmp[1]][0], dp[n - 1][tmp[0]][tmp[1]][1]) << "\n", 0;
}