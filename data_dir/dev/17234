#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MAXN=150000+999;
const int MAXM=300+99;
int n, m, d;

int a[MAXM], t[MAXM];

ll dp[MAXN];
ll newdp[MAXN];

deque<tuple<ll, ll> > D;
void add_elem(ll val, ll pos)
{
    while(!D.empty() && get<0>(D.back())>=val ) D.pop_back();
    D.push_back(tuple<ll,ll>(val, pos));
}

ll solve()
{
    for(int x=1; x<=n; x++) dp[x]=abs(x-a[m]);

    for(int i=m-1; i>=1; i--)
    {
        ll delta=(t[i+1]-t[i])*1LL*d;
        D.clear();

        for(ll x=1; x<=min(1+delta, (ll)n); x++)
        {
            add_elem(dp[x], x);
        }

        for(ll x=1; x<=n; x++)
        {
            if(x+delta<=(ll)n)
            {
                add_elem(dp[x+delta], x+delta);
            }

            while(get<1>(D.front())<x-delta) D.pop_front();
            newdp[x]=get<0>(D.front())+abs(x-a[i]);
        }

        for(int x=1; x<=n; x++) dp[x]=newdp[x];
    }

    ll res=dp[1];
    for(int x=1; x<=n; x++) res=min(res, dp[x]);
    return res;
}

int main()
{
    //freopen("output.txt", "w", stdout);
    scanf("%d %d %d", &n, &m, &d);

    ll res=0;

    for(int i=1; i<=m; i++)
    {
        int b;
        scanf("%d %d %d", &a[i], &b, &t[i]);
        res+=b;
    }

    res-=solve();
    cout << res;

    return 0;
}
