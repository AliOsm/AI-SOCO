#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <string.h>
#include <cstring>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <bitset>
#include <locale>
#include <iostream>
#include <cmath>
#include <climits>
#include <iomanip>
#include <math.h>
#include <bitset>
#include <limits.h>
#include <limits>


using namespace std;

#define ll  long long
#define ld  long double
#define oo LLONG_MAX

ll GCD(ll x, ll y) { return !y ? x : GCD(y, x % y); }
ll LCM(ll x, ll y) { return x*y / GCD(x, y); }

#define PI   3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384
int n, m, k;
vector<int>arr;
bool check(int right,int left)
{
	return left < right;
}
bool can(int j)
{
	if (!j)
		return m <= k;
	return (arr[j-1] - (j - 1) + k - 1 >= m);
}
int main()
{
	ios::sync_with_stdio(false);
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr), cout.tie(nullptr);

	//freopen("output.txt", "w", stdout);
	//freopen("input.txt", "r", stdin);
	cin >> n >> m >> k;
	arr.resize(n);
	for (int i = 0; i < n; i++)
		cin >> arr[i];
	sort(arr.begin(), arr.end(),check);
	for (int i = 1; i < n; i++)
		arr[i] += arr[i - 1];
	for (int i = 0; i <= n; i++)
	if (can(i))
	{
		cout << i << endl;
		return 0;
	}
	cout << -1 << endl;
	return 0;
}