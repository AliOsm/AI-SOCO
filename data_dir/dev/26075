#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

const int maxn = 11;
const int maxm = 11;
const int maxk = 1001;
const int oo = 1000000000;

int n, m, k, w;
int dis[maxk][maxk];
int sid[maxk];
int par[maxk];

char pam[maxk][maxn][maxm];

bool vis[maxk];

set < pair<int,int> > tes;

void ignore()
{
	char c;
	scanf("%c", &c);
}

int MST()
{
	int ret = 0;
	for (int i = 1; i <= k; ++i)
	{
		sid[i] = oo;
		tes.insert({sid[i], i});
	}
	while (!tes.empty())
	{
		int x = tes.begin()->second;
		vis[x] = true;
		tes.erase(tes.begin());
		if (sid[x] == oo)
		{
			sid[x] = 0;
			ret += n * m;
		}
		else
			ret += dis[x][par[x]];
		for (int i = 1; i <= k; ++i)
			if (!vis[i] && dis[x][i] < n * m && dis[x][i] < sid[i])
			{
				par[i] = x;
				tes.erase({sid[i], i});
				sid[i] = dis[x][i];
				tes.insert({sid[i], i});
			}
	}
	return ret;
}

void dfs(int v)
{
	if (par[v] != 0 && !vis[par[v]])
		dfs(par[v]);
	printf("%d %d\n", v, par[v]);
	vis[v] = true;
}

int main()
{
	scanf("%d %d %d %d", &n, &m, &k, &w);
	ignore();
	for (int i = 1; i <= k; ++i)
		for (int p = 1; p <= n; ++p)
		{
			for (int q = 1; q <= m; ++q)
				scanf("%c", &pam[i][p][q]);
			ignore();
		}
	for (int i = 1; i <= k; ++i)
		for (int j = 1; j <= k; ++j)
		{
			for (int p = 1; p <= n; ++p)
				for (int q = 1; q <= m; ++q)
					dis[i][j] += (pam[i][p][q] != pam[j][p][q]);
			dis[i][j] *= w;
		}
	printf("%d\n", MST());
	memset(vis, 0, sizeof vis);
	for (int i = 1; i <= k; ++i)
		if (!vis[i])
			dfs(i);
	return 0;
}
