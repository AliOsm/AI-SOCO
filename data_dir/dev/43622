
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vli  = vector < li        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 2e5 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);

int n , c;
ll dp[N];
ll  a[N];

void solve(int testCase){

    scanf("%d %d" , &n , &c);

    multiset < ll > ms;
    ll sum = 0;
    ms.insert(0);
    for(int i = 1 ; i <= n ; i ++) {
            scanf("%lld" , &a[i]);
            sum += a[i];
            ms.insert(a[i]);

            if(i - c >= 0) {
                    ms.erase(ms.find(a[i - c]));
                    dp[i] = max(dp[i - 1] , dp[i - c] + (*(ms.begin())));
            }
    }

    printf("%lld\n" , sum - dp[n]);
}

main(){

    int t = 1;
    // scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
