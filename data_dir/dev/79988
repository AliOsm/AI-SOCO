#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll N=5e5+5,mod=1e9+7;
ll ans,n,a[N],fenwick[N];
map<ll,ll> mp;
ll query(ll node){
    ll ans=0;
    while(node>0){
        ans+=fenwick[node];
        if(ans>=mod)ans-=mod;
        node-=node&(-node);
    }
    return ans;
}
void upd(ll node,ll val){
    while(node<N){
        fenwick[node]+=val;
        if(fenwick[node]>=mod)fenwick[node]-=mod;
        node+=node&(-node);
    }
}
int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    cin>>n;
    for(ll i=1;i<=n;i++)cin>>a[i];
    for(ll i=1;i<=n;i++)ans+=((a[i]*i)%mod*(n-i+1))%mod,ans%=mod;
    set<ll> st;for(ll i=1;i<=n;i++)st.insert(a[i]);
    ll cnt=0;for(auto &ele:st)mp[ele]=++cnt;
    for(ll i=1;i<=n;i++){
        ll val=(a[i]*(n-i+1))%mod;
        val=(val*query(mp[a[i]]-1))%mod;
        upd(mp[a[i]],i);
        ans+=val;
        if(ans>=mod)ans-=mod;
    }
    for(ll i=0;i<N;i++)fenwick[i]=0;
    for(ll i=n;i>=1;i--){
        ll val=(a[i]*i)%mod;
        val=(val*query(mp[a[i]]-1))%mod;
        upd(mp[a[i]],n-i+1);
        ans+=val;
        if(ans>=mod)ans-=mod;
    }
    cout<<ans;
}

