# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
//const int _p = 1007;
ll o(ll x) { return x%_p; }
//int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
ll lcm(ll a, ll b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
} 

ll m,h[2],a[2],x[2],y[2],t[5],k[5],q[2];
ll p[2][1000105];
int M[10000005];

long long exGcd(long long a,long long b,long long &x,long long &y){ 
    if(0==b) {
        x=1;y=0;return a; 
    }
    long long gcd=exGcd(b,a%b,y,x); 
    y-=a/b*x;   return gcd;
}

void bat(int e){
	memset(M,0,sizeof(M));
	while (1){
		t[e]++;
		//cout<<t[e]<<endl;
		p[e][t[e]]=((ll)h[e]*x[e]+y[e])%m;
		if (M[p[e][t[e]]]) {
			q[e]=M[p[e][t[e]]];
			t[e]--;
			break;	
		}
		h[e]=((ll)h[e]*x[e]+y[e])%m;
		M[p[e][t[e]]]=t[e];
	}
	//for (int i=1; i<=t[e]; i++) printf("p[%d]=%I64d\n",i,p[e][i]);
	k[e]=-1;
	for (int i=1; i<=t[e]; i++)
		if (p[e][i]==a[e]) {
			k[e]=i;
			return ;
		}
}

long long Rem(long long n[],long long a[],int num){
    long long n1=n[0],a1=a[0],n2,a2,k1,k2,x0,gcd,c;
    for(int i=1;i<num;i++){
        n2=n[i],a2=a[i];
        c=a2-a1;
        gcd=exGcd(n1,n2,k1,k2);//????n1*k1+n2*k2=gcd(n1,n2) 
        x0=c/gcd*k1;//n1*x0+n2*(c/gcd*k2)=c  PS:k1/gcd*c????
        ll t=n2/gcd; 
        x0=(x0%t+t)%t;//??n1*x0+n2*y=c??x0????��?? 
        a1+=n1*x0;
        n1=n2/gcd*n1; 
    }
    return a1;
}

int main() {
    //file_put();
    
    scanf("%I64d",&m);
    for (int i=0; i<=1; i++) scanf("%I64d%I64d%I64d%I64d",&h[i],&a[i],&x[i],&y[i]);
    if (h[0]==a[0] && h[1]==a[1]) return 0*printf("0\n");
    for (int i=0; i<=1; i++) bat(i);
    if (k[0]==-1 || k[1]==-1) {
    	printf("-1\n");
    	return 0;
	}
	t[2]=t[0];
	k[2]=k[0];
	//cout<<Rem(t,k,2)<<endl;
	/*for (int i=1; i<=max(t[0],t[1]); i++)
		if (a[0]==p[0][i] || a[1]==p[1][i]){
			return 0*printf("%d\n",i);
		}
	if (k[0]<=t[0] || k[1] <= t[1]) return 0*printf("%d\n",-1);
	k[0]-=(q[0]-1);
	k[1]-=(q[1]-1);
	t[0]=t[0]-q[0]+1;
	t[1]=t[1]-q[1]+1;
	if ((k[1]-k[0]) % gcd(t[0],t[1])!=0) return 0*printf("%d\n",-1);;
	cout<<Rem(t,k,2)<<endl;*/
	t[0]=t[0]-q[0]+1;
	t[1]=t[1]-q[1]+1;
	/*cout<<q[0]<<" "<<q[1]<<endl;
	cout<<t[0]<<" "<<t[1]<<endl;
	cout<<k[0]<<" "<<k[1]<<endl;*/
	if (t[0]+q[0]<t[1]+q[1]) {
		for (int i=t[0]+q[0]; i<=t[1]+q[1]; i++) p[0][i]=p[0][i-t[0]];
	} else{
		for (int i=t[1]+q[1]; i<=t[0]+q[0]; i++) p[1][i]=p[1][i-t[1]];
	}
	for (int i=1; i<=max(q[0],q[1]); i++) 
		if (p[0][i]==a[0] && p[1][i]==a[1])
			return 0*printf("%d\n",i);
	if (k[0]<q[0] || k[1]<q[1]) return 0*printf("%d\n",-1);
	ll xx=k[0]%t[0],yy=k[1]%t[1];
	if ((k[1]-k[0]) % gcd(t[0],t[1])!=0) return 0*printf("%d\n",-1);;
	ll ans=Rem(t,k,2);
	if (ans<k[0] || ans<k[1]) ans+=lcm(t[0],t[1]);
	cout<<ans<<endl;

    return 0;
}
