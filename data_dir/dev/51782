/* Author: Dhruv Rastogi */
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second
const long double PI = acos(-1.0);

array<int,3> a[80];
int dp[80][80];
int par[80][80];

void solve(){  
    int n,k;
    cin>>n>>k;
    rep(i,0,n){
        cin>>a[i][1]>>a[i][0];
        a[i][2]=i+1;
    }
    memset(dp,0,sizeof dp);
    sort(a,a+n);
    rep(i,0,n){
        rep(j,0,k+1){
            if(j>i) continue;
            //not take
            if(dp[i+1][j]<dp[i][j]+(k-1)*a[i][0]){
                dp[i+1][j] = dp[i][j]+(k-1)*a[i][0];
                par[i+1][j] = j;
            }
            //take
            if(j!=k and dp[i+1][j+1]<dp[i][j]+a[i][1]+j*a[i][0]){
                dp[i+1][j+1]=dp[i][j]+a[i][1]+j*a[i][0];
                par[i+1][j+1]=j;
            }
        }
    }
    vector<int> taken;
    vector<int> not_taken;
    int cur=k;
    repd(i,n,1){
        if(cur-par[i][cur]==1){
            taken.pb(a[i-1][2]);
        }
        else{
            not_taken.pb(a[i-1][2]);
        }
        cur=par[i][cur];
    }
    reverse(all(taken));
    for(int i:not_taken){
        int idx = taken.size() - 1;
        taken.insert(taken.begin()+idx,i);
        ++idx;
        taken.insert(taken.begin()+idx,-i);
    }
    cout<<sz(taken)<<endl;
    for(int i:taken){
        cout<<i<<' ';
    }
    cout<<endl;
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}