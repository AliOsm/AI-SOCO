#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <algorithm>
#include <cmath>
#include <sstream>
#include <set>
#include <map>

using namespace std;

const int N = (1e6) + 100;

int lp[N+1];
vector<int> pr;

int dp[N+1];

int main()
{
	int n;
	cin >> n;

	for (int i=2; i<=N; ++i) {
		if (lp[i] == 0) {
			lp[i] = i;
			pr.push_back (i);
		}
		for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)
			lp[i * pr[j]] = pr[j];
	}
	dp[1] = 1;
	for(int i = 2; i < N; ++i) 
	{
		dp[i] = 1e9;
		int I = i;
		if (lp[i] == i){

			dp[i] = i;
			continue;
		}
		while(I != 1)
		{
			int cur = lp[I];
			dp[i] = min(i - cur + 1, dp[i]);
			I /= cur;
		}
	}

	int nn = n;
	int t = dp[n];
	int ans = 1e9;
	for(int i = t; i <= n; ++i)
		ans = min(ans, dp[i]);
	cout << ans;
}


/*

*/