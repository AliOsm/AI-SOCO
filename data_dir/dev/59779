#include <bits/stdc++.h> 
using namespace std;
#define rep(i, a, b) for(int i = a; i < (b); ++i)
#define trav(a, x) for(auto& a : x)
#define sz(x) (int)(x).size()
typedef vector<int> vi;
#define ll long long 
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
const int MOD = 1e9+7;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=5002;
struct node{
  // int cnt=0;
  vector<int> v;
  node* next[2];
  node()
  {
    next[0]=next[1]=NULL;
  }
};
node* root;
void add(int x,int ind)
{
  node* curr=root;
  for(int i=40;i>=0;i--)
  {
    int bit=((x>>i)&1LL);
    if(!curr->next[bit]) curr->next[bit]=new node();
    // curr->next[bit]->cnt++;
    // cout<<bit<<" ";
    // if(bit==1&&i==40) cout<<"#";
    // if(curr->next[bit]==root) cout<<"*";
    // if(root->next[1]) cout<<"*",cout<<i<<" ";
    curr->next[bit]->v.pb(ind);
    curr=curr->next[bit];
  }
  // if(root->next[1]) cout<<"*";
  // cout<<"\n";
}
int get(int y,int ind)
{
  node *curr=root;
  int ans=0;
  for(int i=40;i>=0;i--)
  {
    int bit=((y>>i)&1L);
    int select=-1;
    int ok[2]={0},ok2[2]={0};
    for(int j=0;j<2;j++) if(curr->next[j]) ok[j]=1;
    for(int j=0;j<2;j++)
    {
      if(!ok[j]) continue;
      auto x=upper_bound(all(curr->next[j]->v),ind-1);
      if(x!=curr->next[j]->v.begin()) ok2[j]=1;
    } 
    if(ok[1-bit]&&ok2[1-bit])
    {
      select=1-bit;
    }
    else select=bit;
    // if(!ok[select]){
    //   cout<<i<<"*";
    // }
    ans+=(select?(1LL<<i):0);
    // cout<<select<<" ";
    curr=curr->next[select];
    // cout<<ok[0]<<" "<<ok[1]<<" ";
    // if(curr->next[1]) cout<<"*";
    // break;
  }
  return ans;
}
int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      root = new node();
      int n;
      cin>>n;
      int a[n+1]={0};
      for(int i=1;i<=n;i++) cin>>a[i];
      int s=0;
      add(0,0);
      for(int i=1;i<=n;i++)
      {
        s^=a[i];
        // cout<<s<<" ";
        add(s,i);
        // if(root->next[1]) cout<<"*";
      }
      int ans=0;
      int lol=0;
      ans=max(ans,get(0,n+1));
      for(int i=n;i>=1;i--)
      {
        lol^=a[i];
        int orz=get(lol,i);
        // cout<<orz<<" ";
        ans=max(ans,orz^lol);
        // break;
      }
      cout<<ans<<"\n";
}
// I never lose. I either win or I learn