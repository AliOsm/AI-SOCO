//#pragma GCC optimize ("Ofast")
//#pragma GCC optimize ("unroll-loops")
//#pragma GCC target("avx,avx2,fma")

#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//#include <ext/rope>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;
//using namespace __gnu_pbds;
//using namespace __gnu_cxx;

//#define int ll

using ll = long long;
using pii = pair<int,int>;
using pll = pair<ll,ll>;
using vi = vector<int>;



const int N = 2e5 + 11, mod = 1e9 + 7, mod2 = 998244353;
const int MAX = 1e6 + 11;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const double INF3 = 1e8 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-4;
const double PI = acos(-1.0);


//template<typename T> using ordered_set = tree <T, null_type, less <T>, rb_tree_tag, tree_order_statistics_node_update>;
template<typename T1, typename T2> inline void chmin(T1 &a, T2 b) { if (a > b) a = b; }
template<typename T1, typename T2> inline void chmax(T1 &a, T2 b) { if (a < b) a = b; }


mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());


int n,a[333][333],dp[333][333][2];
main() {
  file("help");
  ios;
  cin>>n;
  fo(i,1,n,1) fo(j,1,n,1) cin>>a[i][j],dp[i][j][0]=dp[i][j][1]=-INF1;
  dp[1][1][0]=a[1][1];
  fo(i, 2, n + n - 1, 1) {
    int ch=i&1;
    ch^=1;
    fo(x1, 1, min(n,i-1), 1) {
      fo(x2, 1, min(n,i - 1), 1) {
        fo(k1,0,1,1) {
          fo(k2, 0, 1, 1) {
            int X1 = x1 + k1;
            int X2 = x2 + k2;
            int Y1 = i - X1 + 1;
            int Y2 = i - X2 + 1;
            chmax(dp[X1][X2][ch], dp[x1][x2][1-ch] + a[Y1][X1] + a[Y2][X2] - (X1 == X2 and Y1 == Y2 ? a[Y1][X1] : 0));
          }
        }
        dp[x1][x2][1-ch]=-INF1;
      }
    }
  }
  cout<<dp[n][n][0];
  return 0;
}
/**

*/
