#include<bits/stdc++.h>
using namespace std;
const int N = 1e3 + 100;
int l, r, le, ri, k, n = 1, A[N];
long long res;
void Make(int len)
{
    for (int i = 0; i < (1 << len); i++, n ++)
        for (int j = len - 1; j >= 0; j--)
        {
            A[n] *= 10;
            if (i & (1 << j))
                A[n] += 7;
            else
                A[n] += 4;
        }
}
int get(int a, int b, int c, int d)
{
    return (max(min(b, d) - max(a, c) + 1, 0));
}
int main()
{
    scanf("%d%d%d%d%d", &l, &r, &le, &ri, &k);
    for (int i = 1; i <= 9; i++)
        Make(i);
    A[n] = 1e9;
    for (int i = 1; i <= n - k; i++)
    {
        res += 1ll * get(A[i - 1] + 1, A[i], l, r) * get(A[i + k - 1], A[i + k] - 1, le, ri);
        res += 1ll * get(A[i - 1] + 1, A[i], le, ri) * get(A[i + k - 1], A[i + k] - 1, l, r);
        if (k == 1 && get(l, r, A[i], A[i]) && get(le, ri, A[i], A[i]))
            res --;
    }
    cout << setprecision(15) << fixed << (long double)res / (1ll * (r - l + 1) * (ri - le + 1));
    return (0);
}
