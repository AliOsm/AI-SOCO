#include <bits/stdc++.h>
using namespace std;

typedef long long i64;
i64 a[1000010], b[1000010];
bool found[1000010];
pair <int, int> suma[1000010];

int main()
{
    /*ofstream out("input.in");
    for (int i(1); i <= 1000000 + 2; i++)
        out << 1000000 << ' ';*/

    //freopen("input.in", "r", stdin);
    int n;
    scanf("%d", &n);

    for (int i(1); i <= n; i++) {
        scanf("%i64d", &a[i]);
        a[i] += a[i - 1];
    }
    for (int i(1); i <= n; i++) {
        scanf("%i64d", &b[i]);
        b[i] += b[i - 1];
    }



    for (int i(0); i <= n; i++) {
        int p = upper_bound(b, b + n + 1, a[i]) - b - 1;
        if (a[i] - b[p] >= n) {
            cout << "Here " << i << ' ' << p << '\n';
            cout << a[i] << ' ' << b[p] << '\n';
            cout << *upper_bound(b, b + n + 1, a[i]);
            return 0;
        }
        if (found[a[i] - b[p]]) {
            int st = suma[a[i] - b[p]].first, dr = i;
            printf("%d\n", dr - st);
            for (int q(st + 1); q <= dr; q++)
                printf("%d ", q);
            st = suma[a[i] - b[p]].second, dr = p;
            printf("\n%d\n", dr - st);
            for (int q(st + 1); q <= dr; q++)
                printf("%d ", q);
            return 0;
        }
        found[a[i] - b[p]] = 1;
        suma[a[i] - b[p]] = { i, p };
    }
    cout << b[1] << ' ' << b[2] << ' ' << b[3] << '\n';
    assert(0);
    return 0;
}
