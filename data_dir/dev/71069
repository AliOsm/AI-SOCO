#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <queue>
#define pb push_back
#define mp make_pair
#define int long long
#pragma GCC optimize("O3")
 const long long mod1=998244353;
    const long long mod2=1000000007;
long long pow(int a,int b) {
    if (b==0 || a==1) return 1;
   
    if (b%2==0) { long long k=pow(a,b/2); return (k*k); }
    else { long long k=pow(a,b/2); return k*k*a; }
}
long long powmod(long long a,long long b,long long mod) {
    if (b==0 || a==1)  {if (mod==1) return 0; else return 1; }
   
    if (b%2==0) { long long k=powmod(a,b/2,mod); return (k*k)%mod; }
    else {long long k=powmod(a,b/2,mod); return ( (k*k) %mod *a)% mod; }
}
long long gcd(long long a, long long b) {
    if (a==0) return b;
    if (b==0) return a;
    if (a>b) return gcd(a%b,b); else return gcd(b%a,a);
}
int prime(int p) { // 1 - простое
    for (int i=2;i*i<=p;i++) {
        if (p%i==0 && i<p) return 0;  
    }
    return 1;
}
long long sqr(long long i) {
    return i*i;
}
using namespace std;
 
int prefix_function (string s) {
	int n = (int) s.length();
	vector<int> pi (n);
	for (int i=1; i<n; ++i) {
		int j = pi[i-1];
		while (j > 0 && s[i] != s[j])
			j = pi[j-1];
		if (s[i] == s[j])  ++j;
		pi[i] = j;
	}
	return pi[n-1];
}
signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
     
     /* --------- */  
     
string s1,s2;
int ch1=0,ch0=0;
int qq1=0,qq0=0; 
cin>>s1>>s2;
for (int i=0;i<s1.size();i++) if (s1[i]=='0') ch0++; else ch1++; 
for (int i=0;i<s2.size();i++) if (s2[i]=='0') qq0++; else qq1++;
if (ch0<qq0 || ch1<qq1) {cout<<s1; return 0; }
int ans=1; 
int tt1=0; 
string cur=s2;
tt1=prefix_function(s2);

if (tt1==s2.size()) tt1--; 
ch0-=qq0;
ch1-=qq1; 

for (int i=0;i<tt1;i++) if (s2[i]=='0') qq0--; else qq1--; 
while (ch0>=qq0 && ch1>=qq1) {ans++; ch0-=qq0; ch1-=qq1; } 
cout<<s2;
for (int i=0;i<ans-1;i++) {for (int j=tt1;j<s2.size();j++) cout<<s2[j]; } 
for (int i=0;i<ch1;i++) cout<<"1"; 
for (int i=0;i<ch0;i++) cout<<"0"; 
   /* --------- */
    return 0;
}