#include <bits/stdc++.h>

#define pb push_back
#define pp pop_back
#define mp make_pair
#define ld long double
#define f first
#define s second
#define ll long long

using namespace std;

const int N = 2e5 + 5;

const int mod = 1e9 + 7;

void add(int &a, int b)
{
  a += b;
  if (a >= mod) a -= mod;
}

int sum(int a, int b)
{	
  add(a, b);
  return a;
}

int mult(int a, int b)
{
  return (1ll * a * b) % mod;
}

int n, a[N], cnt;

vector < int > g[N], ans;

void dfs(int v = 1, int p = -1)
{
  ans.pb(v);
  int last = -1;
  for (auto to : g[v])
  {
    if (to != p)
    {
      a[to] ^= 1;
      dfs(to, v);
      a[v] ^= 1;
      ans.pb(v);
      last = to;
    }
  }
//  cout << "v = " << v << " a[v] = " << a[v] << " last = " << last << endl;
  if (a[v] == 0)
  { 
    if (p != -1)
    {
      a[p] ^= 1;
      ans.pb(p);
      ans.pb(v);
      a[v] ^= 1;
    }
    else
    {
      ans.pb(last);
      ans.pb(v);
      ans.pb(last);
      a[v] ^= 1;
    }
  }
}

int main()
{
  ios_base::sync_with_stdio(0);
	
  clock_t start = clock();

  cin >> n;
  for (int i = 1;i <= n;i++) 
  {
    cin >> a[i];
    a[i] = (a[i] == 1 ? 1 : 0);
    if (a[i] == 0) cnt++;
  }
  if (!cnt)
  {
    cout << 1 << endl;
    return 0;
  }
  for (int i = 1, u, v;i < n;i++)
  {
    cin >> u >> v;
    g[u].pb(v);
    g[v].pb(u);
  }
  dfs();
  for (auto i : ans) cout << i << " ";
  cout << endl;
  double duration = ((double) clock() - start) / (double) CLOCKS_PER_SEC;
//  cout << "Time: " << fixed << setprecision(10) << duration << endl;
	
  return 0;
}