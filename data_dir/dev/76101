// in the name of Allah

#include <bits/stdc++.h>
using namespace std;

#define endl '\n'
#define pb push_back
#define ll long long
#define double long double
#define sz(x) ((int) (x.size()))
#define all(x) (x).begin(), (x).end()

#define fr first
#define se second

const ll mod = 998244353;

inline ll add(ll a, ll b) {
	a += b;
	if(a >= mod) return a - mod;
	return a;
}

inline ll mul(ll a, ll b) {
	a *= b;
	if(a >= mod) return a % mod;
	return a;
}

inline ll power(ll a, ll b) {
	ll p = 1;
	while(b) {
		if(b&1) p = mul(p, a);
		a = mul(a, a);
		b /= 2;
	}
	return p;
}

const int N = 2e3 + 5;

char a[N][N];
int s[N][N];

int tr[N];
int tc[N];

int row[N][N];
int col[N][N];

int get(int x, int y, int p, int q) {
	return s[p][q] - s[x-1][q] - s[p][y-1] + s[x-1][y-1];
}

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);

	int n, k;
	cin >> n >> k;
	memset(s, 0, sizeof s);
	for(int i=1; i<=n; i++) {
		int sum = 0;
		for(int j=1; j<=n; j++) {
			cin >> a[i][j];
			sum += (a[i][j] == 'B');
			s[i][j] = s[i-1][j] + sum;
		}
	}

	for(int i=1; i<=n; i++) {
		if(s[i][n] - s[i-1][n] == 0) tr[i] = 1;
		if(s[n][i] - s[n][i-1] == 0) tc[i] = 1;
		tr[i] += tr[i-1];
		tc[i] += tc[i-1];
	}

	for(int i=1; i<=n; i++) {
		for(int j=1; j<=n-k+1; j++) {
			if(get(i, j, i, j+k-1) == s[i][n] - s[i-1][n]) {
				row[i][j] = 1;
			}
		}
	}
	for(int j=1; j<=n; j++) {
		for(int i=1; i<=n-k+1; i++) {
			if(get(i, j, i+k-1, j) == s[n][j] - s[n][j-1]) {
				col[i][j] = 1;
			}
		}
	}
	for(int i=1; i<=n; i++) {
		for(int j=1; j<=n; j++) {
			row[i][j] += row[i-1][j];
			col[i][j] += col[i][j-1];
		}
	}


	int ans = 0;
	for(int i=1; i<=n-k+1; i++) {
		for(int j=1; j<=n-k+1; j++) {
			int res = 0;
			res += row[i+k-1][j] - row[i-1][j] + col[i][j+k-1] - col[i][j-1];
			res += tr[i-1] + tr[n] - tr[i+k-1];
			res += tc[j-1] + tc[n] - tc[j+k-1];
			ans = max(ans, res);
		}
	}
	cout << ans << endl;

	return 0;
}