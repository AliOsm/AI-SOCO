#include <bits/stdc++.h>

using namespace std;

const int N = 1234567;

char s[N];
int mx;
vector<int> g[N];
vector<int> depth[N];
int ptr;
vector<string> vw;
vector<int> vn;

bool num(char *s) {
  for (int i = 0; s[i]; i++) {
    if (s[i] < '0' || s[i] > '9') return false;
  }
  return true;
}

void dfs(int &ptr, int d = 1) {
  depth[d].push_back(ptr);
  mx = max(mx, d);
  int m = vn[ptr];
  for (int i = 0; i < m; i++) {
    ptr++;
    dfs(ptr, d + 1);
  }
}

int main() {
  scanf("%s", s);
  char *token = strtok(s, ",");
  while (token) {
    if (num(token)) vn.push_back(stoi(string(token)));
    else vw.push_back(string(token));
    token = strtok(NULL, ",");
  }
  int n = (int) vw.size();
  while (ptr < n) {
    depth[0].push_back(ptr);
    int m = vn[ptr];
    for (int i = 0; i < m; i++) {
      ptr++;
      dfs(ptr);
    }
    ptr++;
  }   
  mx++;
  printf("%d\n", mx);
  for (int i = 0; i < mx; i++) {
    for (auto it : depth[i]) {
      printf("%s ", vw[it].c_str());
    }
    puts("");
  }
  return 0;
}