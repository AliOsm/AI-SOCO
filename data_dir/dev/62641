#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfc(x) scanf("%c", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define mod 1000000007
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;

ll p[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 41}, n, ans = LONG_LONG_MAX;
map<int, int> mp;
map<pair<ll, int>, bool> vis;
void solve(int beg, ll x, int y)
{
    if (y > n || vis[{x, y}] || beg == 12 || x < 0)
        return;
    if (y == n)
    {
        if (x < ans)
            ans = x;
        return;
    }
    vis[{x, y}] = true;
    for (int i = 0; i <= mp[beg]; i++)
        solve(beg + 1, x * pow(p[beg], i), y * (i + 1));
}

int main()
{
    mp[0] = 61;
    mp[1] = 35;
    mp[2] = 26;
    mp[3] = 21;
    mp[4] = 17;
    mp[5] = 16;
    mp[6] = 15;
    mp[7] = 14;
    mp[8] = 13;
    mp[9] = 11;
    cin >> n;
    solve(0, 1, 1);
    cout << ans;
    return 0;
}