
 #include <iostream>
 #include <algorithm>
 using namespace std;
 int Array[20]; 

 int Rotate( int low , int high ){
     for( int i = high ; i > low ; --i )
         swap(Array[i] , Array[i - 1] );
    
    return high - low;
 }

 int Find_Swap_Count(int Num,int start,int length){
    int i , pos = -1;
    int Count = 0;    

    if( Array[length - 2] == 0 ){
        for( i = length - 2 ; i >= start ; --i ){
            if( Array[i] != 0 ){
                pos = i;
                break; 
            }
        }
    }

    for( i = start ; i < length ; ++i ){
        if( Array[i] == Num ){
            if( i == length - 1 ){
                if( Array[length - 2] == 0 ){
                    if( pos == -1 ) return -1;
                    else Count += Rotate(pos,length - 2);
                }

                Count += Rotate(start,length - 1);    
            }
            else Count += Rotate( start , i );

            break;
        }
    }

    if( i == length ) return -1;
    return Count;
 }

 int Set_Array(long long N){
    int length = 0;

    while(N){
        Array[length] = N % 10;
        ++length;
        N = N / 10;
    }

    return length;
 }

 int main(){
    long long N;
    int Ans = 100;
    scanf("%lld" , &N );
    
    if( N == 2 ){
        if( N % 25 == 0 ) puts( "0" );
        else puts( "-1" );
        return 0;
    }

    if( N % 25 == 0 ){
        puts( "0" );
        return 0;
    }

    int length = Set_Array(N);
    int x , y;

    x = Find_Swap_Count(0,0,length);
    if( x == -1 ) Set_Array(N);
    else{
        y = Find_Swap_Count(0,1,length);
        if( y != -1 ) Ans = min( Ans , x + y );
        Set_Array(N);
    } 

    x = Find_Swap_Count(0,0,length);
    if( x == -1 ) Set_Array(N);
    else{
        y = Find_Swap_Count(5,1,length);
        if( y != -1 ) Ans = min( Ans , x + y );
        Set_Array(N);
    }

    x = Find_Swap_Count(5,0,length);
    if( x == -1 ) Set_Array(N);
    else{
        y = Find_Swap_Count(2,1,length);
        if( y != -1 ) Ans = min( Ans , x + y );
        Set_Array(N);
    }

    x = Find_Swap_Count(5,0,length);
    if( x == -1 ) Set_Array(N);
    else{
        y = Find_Swap_Count(7,1,length);
        if( y != -1 ) Ans = min( Ans , x + y );
        Set_Array(N);
    }

    if( Ans == 100 ) puts( "-1" );
    else printf( "%d\n" , Ans );
    return 0;
 }