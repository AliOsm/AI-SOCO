//██████╗ ██╗   ██╗██╗      ██████╗ ███████╗
//██╔══██╗██║   ██║██║      ██╔══██╗██╔════╝
//██████╔╝██║   ██║██║█████╗██║  ██║█████╗
//██╔══██╗██║   ██║██║╚════╝██║  ██║██╔══╝
//██║  ██║╚██████╔╝██║      ██████╔╝███████╗
//╚═╝  ╚═╝ ╚═════╝ ╚═╝      ╚═════╝ ╚══════╝

#include <bits/stdc++.h>


// #pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
using namespace std;

#define fst first
#define snd second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back

#define all(v) (v).begin(), (v).end()
#define sz(v) ((int)(v).size())
#define sqr(x) ((x) * (x))

typedef long long ll;
typedef  double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector<int> vi;

#define next ajksdslk
#define prev aklsfjk

mt19937_64 mt_rand(chrono::system_clock::now().time_since_epoch().count());

template<typename T1, typename T2> inline bool upmax(T1& a, T2 b) { return (a < b ? (a = b, true) : false); }
template<typename T1, typename T2> inline bool upmin(T1& a, T2 b) { return (b < a ? (a = b, true) : false); }

const int maxn = (int) 5e6 + 100;
const int maxlog = 21;
const int base = 998244353;
const ld eps = (ld) 1e-9;
const ld PI = acos(-1.);
//const int pp = 41;
const int inf = 2e9;
const ll llinf = 1e18;

int a[maxn];
int le[maxn], ri[maxn], d[maxn];
int f[maxn];


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
#ifdef LOCAL
  freopen ("input.txt", "r", stdin);
#endif

  for (int r = 1; r < 100; r ++) {
    for (int b = r + 1; b < 100; b ++) {
      vector<int> kek;
      for (int i = 0; i < 10000; i ++) {
        if (i % b == 0) kek.pb(0);
        else if (i % r == 0) kek.pb(1);
      }
      int cnt = (b - 1) / r;
      if (b % r && (b - gcd(b, r)) % r) cnt ++;
      int mx = 0;
      for (int i = 0; i < sz(kek); i ++) {
        if (kek[i] == 0) {
          for (int j = i + 1; j < sz(kek); j ++) {
            if (kek[j] == 0) {
              upmax(mx, j - i - 1);


              i = j - 1;
              break;
            }
          }
        }
      }
      if (mx != cnt) {

          cout << r << " " << b << "\n";
          for (int k = 0; k < min(sz(kek), 100); k ++) {
            cout << kek[k];
          }
          exit(229);

      }

    }
  }

  int t; cin >> t;
  while (t --) {
    int r, b, k;
    cin >> r >> b >> k;
    if (r > b) swap(r, b);
    if (r == b) {
      cout << "OBEY\n";
      continue;
    }

    int cnt = (b - 1) / r;
    if (b % r && (b - gcd(b, r)) % r) cnt ++;
    if (cnt >= k) {
      cout << "REBEL\n";
    } else cout << "OBEY\n";

  }

  return 0;
}