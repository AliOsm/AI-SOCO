#include<bits/stdc++.h>

using namespace std;

bool vis[305],seg[305][305];
vector<int>ans;
int n;

bool dfs(int x,int tar)
{
    if(x==tar)
    {
        return true;
    }
    vis[x]=1;
    int i=0;

    for(i=1; i<=n; i++)
    {
        if(!vis[i] && seg[x][i])
        {
            if(dfs(i,tar))
            {
                seg[x][i]=0;
                ans.push_back(i);
                break;
            }
        }
    }
    return i<=n;
}

int main()
{
    int r1,r2,u,v;
    scanf("%d",&n);
    for(int i=1; i<=n-1; i++)
    {
        scanf("%d %d",&u,&v);
        seg[u][v]=seg[v][u]=1;
    }
    vector<int>leaf;
    leaf.push_back(1);
    while(scanf("%d",&v)==1)
    {
        leaf.push_back(v);
    }
    leaf.push_back(1);

    for(int i=1; i<leaf.size(); i++)
    {
        memset(vis,0,sizeof vis);
        if(!dfs(leaf[i],leaf[i-1]))
            break;
    }
    ans.push_back(1);
    if(ans.size()==2*n-1)
    {
        for(int i=0; i<ans.size(); i++)
            printf("%d ",ans[i]);
    }
    else printf("-1\n");

    return 0;
}


