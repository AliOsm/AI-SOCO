#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const int N = 200010;

int n , x,a,b,p[N],depth[N],mx[N];
vector<int> adj[N];

void dfs(int u , int parent){
	p[u] = parent;
	mx[u] = 1;
	for (int i = 0; i < adj[u].size(); ++i){
		int v = adj[u][i];
		if(v == parent)
			continue;
		depth[v] = depth[u] + 1;
		dfs(v,u);
		mx[u] = max(mx[v]+1,mx[u]);
	}
}

int main(){
//	freopen("input.txt","r",stdin);
	scanf("%d%d",&n,&x);
	for (int i = 0; i < n-1; ++i){
		scanf("%d%d",&a,&b);
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	dfs(1,-1);
	int cur = x;
	int best = 0;
	while(cur != -1){
		int need = depth[x] - depth[cur];
		int him = depth[cur];
		if(him <= need)
			break;
		int newDepth = depth[cur] + mx[cur] - 1;
		best = max(best,newDepth*2);
		cur = p[cur];
	}	
	cout << best << endl;
	return 0;
}




