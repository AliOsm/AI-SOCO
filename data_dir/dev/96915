#include <bits/stdc++.h>
#define LL long long
#define mk make_pair
#define fi first
#define se second

void inpLL(LL & n)
 {
  n=0;int cx=getchar();
  while (!(cx >= '0' && cx <= '9')) cx=getchar();
  while ((cx >= '0' && cx <= '9')) n=(n<<3LL)+(n<<1LL)+cx-'0',cx=getchar();
 }

using namespace std;

pair < pair < LL , LL > , LL > P[100020];
pair < pair < LL , LL > , LL > D[100020];
LL x,y,X,Y,n,k,i;
long long A,B,ans;
bool f[100020];

main()
 {
   cin>>n>>k;
   for (i=1;i<=n;i++)
   {
    inpLL(x); inpLL(y); inpLL(X); inpLL(Y);
    x+=X;
    y+=Y;
    P[i].fi=mk(x,y);
    P[i].se=i;
    D[i].fi=mk(y,x);
    D[i].se=i;
   }
  sort(P+1,P+n+1);
  sort(D+1,D+n+1);
   A=(P[n].fi.fi-P[1].fi.fi+1)/2;
   B=(D[n].fi.fi-D[1].fi.fi+1)/2;
   A=max(A,1LL);
   B=max(B,1LL);
   ans=A*B;

  for (LL i=0;i<=k;i++)
   for (LL j=n+1;j>=n-k+1;j--)
    for (LL I=0;I<=k;I++)
     for (LL J=n+1;J>=n-k+1;J--)
      {
       LL now=0;
       for (LL pp=1;pp<=i;pp++)
       {
        if (f[P[pp].se]) continue;
        f[P[pp].se]=1;
        now++;
       }
       for (LL pp=n;pp>=j;pp--)
       {
        if (f[P[pp].se]) continue;
        f[P[pp].se]=1;
        now++;
       }
       for (LL pp=1;pp<=I;pp++)
       {
        if (f[D[pp].se]) continue;
        f[D[pp].se]=1;
        now++;
       }
       for (LL pp=n;pp>=J;pp--)
       {
        if (f[D[pp].se]) continue;
        f[D[pp].se]=1;
        now++;
       }
      if (now <= k)
      {
       A=(P[j-1].fi.fi-P[i+1].fi.fi+1)/2;
       B=(D[J-1].fi.fi-D[I+1].fi.fi+1)/2;
       A=max(A,1LL);
       B=max(B,1LL);
       ans=min(ans,A*B);
      }

       for (LL pp=1;pp<=i;pp++)
        f[P[pp].se]=0;
       for (LL pp=n;pp>=j;pp--)
        f[P[pp].se]=0;
       for (LL pp=1;pp<=I;pp++)
        f[D[pp].se]=0;
       for (LL pp=n;pp>=J;pp--)
        f[D[pp].se]=0;
       }

  cout<<ans<<endl;
 }