/**/
#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define For(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
#define all(v) v.begin(),v.end()
#define V vector
typedef long long ll;
/***********************************************/
/* Dear GCC compiler:
 * I've wasted time reading the problem and trying to figure out the solution
 * If there's any syntax error and you've any suggestion, please fix it yourself.
 * I hope my code compile and get accepted. KEE O.o
 *      ____________
 *     /         __ \
 *    /   __    |  | \
 *   /   |__|   |  |  \
 *  (           |__|   )
 *   \                /
 *    \      ___     /
 *     \____________/
 */
const ll mod = 1000000007;
struct point{
    int x,y;
    int dif(point a){
        return abs(a.x - x) * abs(a.x - x) + abs(a.y - y) * abs(a.y - y) ;
    }
    point(int _x,int _y){
        x = _x;
        y = _y;
    }
    bool operator==(point a){
        return a.x == x && a.y == y;
    }
};
void con(V<ll>&a,V<point>&points){
    a[0] = points[0].dif(points[1]);
    a[1] = points[1].dif(points[2]);
    a[2] = points[2].dif(points[0]);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    V<point> points;
    int x,y;
    For(i,0,3){
        cin>>x>>y;
        points.pb(point(x,y));
    }
    V<ll> a(3);
    con(a,points);
    sort(all(a));
    if(a[2] == a[1] + a[0]){
        cout<<"RIGHT";
        return 0;
    }
    For(i,0,3){
        points[i].x++;
        if(!(points[0] == points[1] || points[1] == points[2] || points[2] == points[0]) ){
            con(a,points);
            sort(all(a));
            if(a[2] == a[1] + a[0]){
                cout<<"ALMOST";
                return 0;
            }
        }
        points[i].x-=2;
        if(!(points[0] == points[1] || points[1] == points[2] || points[2] == points[0]) ){
            con(a,points);
            sort(all(a));
            if(a[2] == a[1] + a[0]){
                cout<<"ALMOST";
                return 0;
            }
        }
        points[i].x++;
        points[i].y++;
        if(!(points[0] == points[1] || points[1] == points[2] || points[2] == points[0]) ){
            con(a,points);
            sort(all(a));
            if(a[2] == a[1] + a[0]){
                cout<<"ALMOST";
                return 0;
            }
        }
        points[i].y-=2;
        if(!(points[0] == points[1] || points[1] == points[2] || points[2] == points[0]) ){
            con(a,points);
            sort(all(a));
            if(a[2] == a[1] + a[0]){
                cout<<"ALMOST";
                return 0;
            }
        }
        points[i].y++;
    }
    cout<<"NEITHER";
    return 0;
}
/**/
