#include<bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define all(a) a.begin(),a.end()
#define sqr(a) ((a)*(a))
#define endl '\n'
using namespace std;
const int inf=1e9+3;

int t,n,m,k,g,g1,g2,cost;
int dp[31][31][51];

main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    n=30;
    m=30;
    for(int i=1;i<=n;++i)
    {
        for(int j=1;j<=m;++j)
        {
            g=min(i*j,50);
            for(int k=1;k<=g;++k)
            {
                dp[i][j][k]=inf;
            }
            if(g==i*j)dp[i][j][g]=0;
        }
    }
    for(int i=1;i<=n;++i)
    {
        for(int j=1;j<=m;++j)
        {
            g=min(i*j,50);
            for(int v=1;v<i;++v)
            {
                g1=v*j;
                g1=min(g1,50);
                g2=(i-v)*j;
                g2=min(g2,50);

                cost=j*j;

                for(int v1=0;v1<=g1;++v1)
                {
                    for(int v2=0;v2<=g2;++v2)
                    {

                        if(v1+v2>g)continue;
                        dp[i][j][v1+v2]=
                        min(dp[i][j][v1+v2],
                        dp[v][j][v1]+dp[i-v][j][v2]+cost);
                    }
                }
            }

            for(int v=1;v<j;++v)
            {
                g1=v*i;
                g1=min(g1,50);
                g2=(j-v)*i;
                g2=min(g2,50);

                cost=i*i;

                for(int v1=0;v1<=g1;++v1)
                {
                    for(int v2=0;v2<=g2;++v2)
                    {
                        if(v1+v2>g)continue;
                        dp[i][j][v1+v2]=
                        min(dp[i][j][v1+v2],
                        dp[i][v][v1]+dp[j-v][i][v2]+cost);
                    }
                }
            }
        }
    }
    cin>>t;
    while(t--)
    {
        cin>>n>>m>>k;
        cout<<dp[n][m][k]<<endl;
    }
}
