#include <bits/stdc++.h>

#define ld long double
#define ll long long
#define sz size()
#define all(xx) xx.begin(),xx.end()
#define pb push_back
#define in insert
#define er erase
#define S second
#define F first
#define pii pair <int, int>
#define to_be continue
#define mp make_pair
#define stop exit (0)
#define fname ""
#define speed ios_base::sync_with_stdio(0);cin.tie(0)
#define input freopen (fname".in", "r", stdin)
#define output freopen (fname".out", "w", stdout)
#define int ll
#define N 1003000

using namespace std;

const int inf = 1e9 + 123;
const ll INF = 1e18 + 123;
const double pi = acos (-1.0);
const ld eps = 1e-3;

int n, a[N], ans;
vector <int> t[N * 4];

void build (int v, int tl, int tr)
{
	if (tl == tr)
	{
		t[v].pb (a[tl]);
		return;
	}
	int tm = (tl + tr) >> 1;
	build (v << 1, tl, tm);
	build ((v << 1) + 1, tm + 1, tr);
	t[v].resize (tr - tl + 1);
	merge (all (t[v << 1]), all (t[(v << 1) + 1]), t[v].begin ());
}

int get (int v, int tl, int tr, int l, int r, int x)
{
	if (tl > r || tr < l)
		return 0;
	if (tl >= l && tr <= r)
		return upper_bound (all (t[v]), x) - t[v].begin ();
	int tm = (tl + tr) >> 1;
	return (get (v << 1, tl, tm, l, r, x) + get ((v << 1) + 1, tm + 1, tr, l, r, x));
}

main ()
{
	speed;
	cin >> n;
	for (int i = 1; i <= n; i ++)
		cin >> a[i];
   	build (1, 1, n);
   	for (int i = 2; i < n; i ++)
   	{
   		int l = i - get (1, 1, n, 1, i, a[i]);
   		int r = get (1, 1, n, i + 1, n, a[i]);
   		ans += l * r;
   	}
   	cout << ans;
}
//Coded by A....