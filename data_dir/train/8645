//void _(){
//    string s;
//    cin >> s;
//    int vert = 0, hor = 0;
//    for(char c : s){
//        if(c == '1'){
//            cout << 1 << ' ' << (hor%2)*2+1 << '\n';
//            ++hor;
//        }
//        else{
//            cout << 2 << ' ' << (vert%4)+1 << '\n';
//            ++vert;
//        }
//    }
//}
//
// ================================================ 
// ^^^	ABOVE is what I wrote in my editor	^^^
// ------------------------------------------------ 
// vvv	BELOW is automatically generated 	vvv
// ================================================ 
#include <iomanip>
#include <vector>
#include <iostream>
#include <string>
using namespace std;
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
template <typename T>
T _();
template <typename IT>
ostream& print(IT b, IT e, string sep = " ", ostream& stream = cout){
    for(IT it = b; it != e; ++it){
        stream << *it;
        if(it + 1 != e)
            stream << sep;
    }
    return stream;
}
template <typename IT>
istream& read(IT b, IT e, istream& stream = cin){
    for(IT it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
template <typename T>
ostream& operator<<(ostream& stream, vector<T>& t){
    return print(all(t), " ", stream);
}
template <typename T>
ostream& operator<<(ostream& stream, vector<T>&& t){
    return print(all(t), " ", stream);
}
template <typename T>
istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
template <typename T>
void print(T x, string end = "\n"){
    cout << x << end;
}
template <typename t>
void print(vector<t> arr, string sep = " "){
    if(arr.empty()){
        return;
    }
    print(arr.begin(), arr.end(), sep);
    cout << '\n';
}
template <typename T>
void print(vector<vector<T>> arr){
    for(int i = 0; i < sz(arr); ++i){
        cout << "[" << arr[i] << "]";
        if(i + 1 < sz(arr))
            cout << ", ";
    }
    cout << '\n';
}
void _(){
    string s;
    cin >> s;
    int vert = 0, hor = 0;
    for(char c : s){
        if(c == '1'){
            cout << 1 << ' ' << (hor%2)*2+1 << '\n';
            ++hor;
        }
        else{
            cout << 2 << ' ' << (vert%4)+1 << '\n';
            ++vert;
        }
    }
}

int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
