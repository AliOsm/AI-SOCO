// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define ll long long int
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 113
int n, a[N];
map<vs, bool> vis;

bool ok(string s, string r) {
    return ( (s[0] == r[0]) || (s[1] == r[1]) );
}

void f(vs &a) {
    vis[a] = true;
    if(a.size() == 1) {
        cout << "YES";
        exit(0);
    }
    if(a.size() > 1 && ok(a[a.size() - 1], a[a.size() - 2])) {
        vs b;
        b = a;
        b[a.size() - 2] = b[a.size() - 1];
        b.pop_back();
        if(!vis[b])
            f(b);
    }
    if(a.size() > 3 && ok(a[a.size() - 1], a[a.size() - 4])) {
        vs b;
        b = a;
        b[a.size() - 4] = b[a.size() - 1];
        b.pop_back();
        if(!vis[b])
            f(b);
    }
}

int main() {
    fast_io()
    
    cin >> n;
    vs a;
    for(int i = 0; i < n; i++) {
        string s;
        cin >> s;
        a.pb(s);
    }
    f(a);
    cout << "NO";
    return 0;
}
