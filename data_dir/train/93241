#include <bits/stdc++.h>

using namespace std;

const int N = 26;
vector<int> adj[N] ;
vector<long long> cum_max[N] , cum_min[N];

int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.in", "r", stdin);
#endif
    int n;
    string a , b;
    cin >> n >> a >> b;

    long long all = 0;
    for (int i = 0 ;i < b.size() ;i++) {
        a[i] -= 'A';
        b[i] -= 'A';
        adj[b[i]].push_back(i);
        all += (n - i + 0ll) * (n - i);
    }


    for (int c = 0 ;c < 26 ;c++) {
        vector<int> &v = adj[c];
        if (!v.size()) continue;
        cum_max[c] = cum_min[c] = vector<long long>(v.size());
        cum_max[c][v.size() - 1] = n - v.back();
        cum_min[c][0] = v[0] + 1;
        for (int i = (int)v.size() - 2 ;i >= 0 ;i--)
            cum_max[c][i] = n - v[i] + cum_max[c][i + 1];
        for (int i = 1 ;i < v.size() ;i++)
            cum_min[c][i] = cum_min[c][i - 1] + v[i] + 1;
    }

    double exp = 0;
    for (int i = 0 ;i < n ;i++) {
        vector<int> &v = adj[a[i]];
        int p = lower_bound(v.begin() , v.end() , i) - v.begin();
        long long ways = 0;
        if (p < v.size())
            ways = (i + 1) * cum_max[a[i]][p];

        if (p != 0)
            ways += (n - i) * cum_min[a[i]][p - 1];

        exp += 1.0 * ways / all;
    }

    printf("%.7f" , exp);
}