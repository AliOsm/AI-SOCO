/* 96B */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

bool judge(__int64 x) {
	int n4, n7;
	int k;
	
	n4 = n7 = 0;
	
	while (x) {
		k = x%10;
		if (k == 4)
			++n4;
		else
			++n7;
		x /= 10;
	}
	
	return n4==n7;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int psz = 0, sz;
	__int64 x;
	vector<__int64> vc, vc1;
	vector<__int64>::iterator iter;
	
	vc.pb(4);
	vc.pb(7);
	rep(i, 0, 8) {
		sz = SZ(vc);
		rep(j, psz, sz) {
			x = vc[j];
			vc.pb(x*10+4);
			vc.pb(x*10+7);
		}
		psz = sz;
	}
	vc.pb(4444477777LL);
	sz = SZ(vc);
	#ifndef ONLINE_JUDGE
		printf("sz = %d, vc[-1] = %I64d\n", sz, vc[sz-1]);
	#endif
	
	rep(i, 0, sz) {
		if (judge(vc[i]))
			vc1.pb(vc[i]);
	}
	
	sz = SZ(vc1);
	#ifndef ONLINE_JUDGE
		printf("sz = %d, vc1[-1] = %I64d\n", sz, vc1[sz-1]);
	#endif
	cin >> x;
	iter = lower_bound(vc1.begin(), vc1.end(), x);
	cout << *iter << endl;
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
