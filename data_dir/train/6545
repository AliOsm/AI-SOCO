#include <bits/stdc++.h>
#define ll long long

using namespace std;

const ll N = 55;
const ll K = 61;

ll n;
ll a[N];
ll p[N];
ll Dp[N][N];

bool Rec(ll i,ll k,ll Mask)
{
    if(k < 0)       return false;
    if(i == n+1)    return k == 0;

    if(Dp[i][k]+1)  return Dp[i][k];

    bool Res = false;

    for(ll j = i; j <= n; ++j)
    {
        ll Sum = p[j] - p[i-1];

        if((Sum|Mask) == Sum)   Res |= Rec(j+1,k-1,Mask);
    }

    return Dp[i][k] = Res;
}

int main()
{
    ll k;   cin >> n >> k;

    for(ll i = 1; i <= n; i++)  scanf("%I64d",a+i) , p[i] = a[i] + p[i-1];

    ll Mask = 0;

    /// Build The Answer form MSB to LSB
    for(ll bit = K - 1; ~bit; --bit)
    {
        memset(Dp,-1,sizeof(Dp));

        if(Rec(1,k,Mask|(1LL<<bit)))    Mask |= (1LL<<bit);
    }

    cout << Mask << endl;
}
