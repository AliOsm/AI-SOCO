#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define point complex<double>
#define polygon vector<point>
#define X real()
#define Y imag()
#define cross(a, b) ((conj(a)*(b)).Y)
#define vect(a,b) ((b)-(a))
using namespace std;
struct pnt{
    ld x, y;
    void get(){
        cin >> x >> y;
    }
}p;
struct rectangle{
    pnt lb, tr;
    void get(){
        lb.get();
        tr.get();
    }
}w,b1,b2;
bool in(pnt a){
    if(a.x >= b1.lb.x && a.x <= b1.tr.x && a.y >= b1.lb.y && a.y <= b1.tr.y)
        return 1;
    if(a.x >= b2.lb.x && a.x <= b2.tr.x && a.y >= b2.lb.y && a.y <= b2.tr.y)
        return 1;
    return 0;
}
int main()
{
    ios::sync_with_stdio(0);
    w.get();
    b1.get();
    b2.get();
    bool ok = 0;
    for(ld i = w.lb.x + 0.5; i <= w.tr.x; i+= 1){
        p.x = i;
        p.y = w.lb.y;
        ok |= !in(p);
        p.y = w.tr.y;
        ok |= !in(p); 
    }
    for(ld i = w.lb.y + 0.5; i <= w.tr.y; i+= 1){
        p.y = i;
        p.x = w.lb.x;
        ok |= !in(p);
        p.x = w.tr.x;
        ok |= !in(p);
    }
    if(ok)
        cout << "YES" << endl;
    else
        cout << "NO" << endl;
    return 0;
}
