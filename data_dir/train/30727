#include <bits/stdc++.h>

using namespace std;

int n, e[100100];
string s[100100];

long long dp[100100][3];

int check(string l, string r) {
	for(int i = 0; i < min(r.size(), l.size()); i++){
		if(l[i] < r[i])	return 0;
		if(l[i] > r[i]) return 1;
	}
	return l.size() >= r.size();
}

string rev(string x){
	string y = "";
	for (int i = x.size() - 1; i >= 0; i--)
		y += x[i];
	return y;
}


int main(){
	cin >> n;
	for(int i = 0; i < n; i++) cin >> e[i];
	for(int i = 0; i < n; i++) cin >> s[i];
	for(int i = 0; i <= 100010; i++) dp[i][0] = dp[i][1] = 1e18;
	dp[0][0] = 0;
	dp[0][1] = e[0];
	for(int i = 1; i < n; i++){
		if(check(s[i], s[i-1]) && dp[i-1][0] < dp[i][0]){
			dp[i][0] = dp[i-1][0];
		}

		if(check(s[i], rev(s[i-1])) && dp[i-1][1] < dp[i][0]){
			dp[i][0] = dp[i-1][1];
		}
		if(check(rev(s[i]), s[i - 1]) && dp[i - 1][0] + e[i] < dp[i][1]){
			dp[i][1] = dp[i - 1][0] + e[i];
	  	}
		if(check(rev(s[i]), rev(s[i - 1])) && dp[i - 1][1] + e[i] < dp[i][1]){
			dp[i][1] = dp[i - 1][1] + e[i];
	  	}
	}

	if (dp[n - 1][0] == 1e18 && dp[n - 1][1] == 1e18){
		cout << -1 << endl;
		return 0;
	}
	cout << min(dp[n - 1][0], dp[n - 1][1]) << endl;
   
}