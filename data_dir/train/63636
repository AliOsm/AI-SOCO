#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define PP pop_back()
#define ALL(x) x.begin(),x.end()
#define st first
#define nd second
#define sz(x) (int) x.size()
#define pii pair<int,int>
#define ii int,int
#define ll long long
#define llu long long unsigned
#define INPUT freopen("inp.in","r",stdin);
#define OUTPUT freopen("oup.out","w",stdout);
#define sag(x) 2*x+1
#define sol(x) 2*x
#define orta ((bas+son)/2)
#define MIN3(x,y,z) min(min(x,y),z)
#define MAX3(x,y,z) max(max(x,y),z)
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define ROF(i,j,k) for(int i=j;i>=k;i--)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 1000000000000000000
#define N 1000005
using namespace std;
int q,c;
ll n1,n2,cost;
map< pair<ll,ll>,ll > mp;
ll mx(ll x,ll y){return x>y?x:y;}
int main() {
    scanf("%d",&q);
    while(q--) {
        scanf("%d %lld %lld",&c,&n1,&n2);
        if(c==1) {
            scanf("%lld",&cost);
            while(n1!=n2) {
                if(n1>n2) {
                    mp[MP(n1/2,n1)]+=cost;
                    n1/=2;
                }
                else {
                    mp[MP(n2/2,n2)]+=cost;
                    n2/=2;
                }
            }
        }
        else {
            ll cev=0;
            while(n1!=n2) {
                if(n1>n2) {
                    cev+=mx(mp[MP(n1,n1/2)],mp[MP(n1/2,n1)]);
                    n1/=2;
                }
                else {
                    cev+=mx(mp[MP(n2,n2/2)],mp[MP(n2/2,n2)]);
                    n2/=2;
                }
            }
            printf("%lld\n",cev);
        }
    }
}
