using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define pr pair<ll,ll>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define sz(c) ((int)c.size())
#define all(c) (c).begin(),(c).end()
#define fn "339D"  /// ___FILE_NAME_HERE___
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define __rep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)
#define ford(i,a,b) for(int i=a;i<=b;i++)
#define __ford(i,a,b) for(int i=a;i>=b;i--)

const int MAXN=(1<<18);
int a[MAXN];
int n,q;
struct segment_tree
{
    vector <int> tree;
    segment_tree()
    {
        tree.resize(4*MAXN,0);
    }
    void updateNode(int idx,int deep,int node=1,int l=1,int r=(1<<n))
    {
        if(l > r or r < idx or l > idx)return ;
        if(l==r)return (void)(tree[node]=a[idx]);
        int mid=(l+r)>>1;
        updateNode(idx,deep+1,node<<1,l,mid);
        updateNode(idx,deep+1,node<<1|1,mid+1,r);
        tree[node]=(deep&1 ? tree[node<<1]|tree[node<<1|1] : tree[node<<1]^tree[node<<1|1]);
    }
};
segment_tree st;

int main(void)
{
    #ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
    #endif // ONLINE_JUDGE
    scanf("%d%d",&n,&q);
    for(int i=1;i<=(1<<n);i++)scanf("%d",&a[i]);
    for(int i=1;i<=(1<<n);i++)st.updateNode(i,(n&1 ? 1 : 0));
    while(q--)
    {
        int b,p;
        scanf("%d%d",&p,&b);
        a[p]=b;
        st.updateNode(p,(n&1 ? 1 : 0));
        printf("%d\n",st.tree[1]);
    }
}
