#include <bits/stdc++.h>
using namespace std;
#define int long long
#define endl '\n'
typedef long long ll;

int queryArea(int i, int j, int k) {
    cout << "1 " << i << " " << j << " " << k << '\n';
    cout << flush;
    int res;
    cin >> res;
    return res;
}

bool queryCross(int i, int j, int k) {
    cout << "2 " << i << " " << j << " " << k << '\n';
    cout << flush;
    int res;
    cin >> res;
    return res==1;
}

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
    const int pivot = 1;
    int other = 2;
    for(int i=3;i<=n;++i){
        bool better = queryCross(pivot, other, i);
        if(better) {
            other = i;
        }
    }
    vector<pair<int, int>> areas;
    for(int i=2;i<=n;++i){
        if(i == other) continue;
        areas.push_back({queryArea(pivot, other, i), i});
    }
    sort(areas.begin(), areas.end());
    deque<int> res;
    res.push_back(pivot);
    res.push_back(other);
    for(auto &p : areas) {
        if(p == areas.back()) break;
        bool sign = queryCross(pivot, areas.back().second, p.second);
        if(sign) res.push_back(p.second);
        else res.push_front(p.second);
    }
    res.push_back(areas.back().second);
    reverse(res.begin(), res.end());
    cout << "0 ";
    int i=0;
    for(i=0;i<n;++i){
        if(res[i] == 1) break;
    }
    for(int j=0;j<n;++j){
        cout << res[i] << " ";
        i = (i+1)%n;
    }
}
