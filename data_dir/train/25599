//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

using namespace std;

int const N = 3e5 + 10 , base = 721 ;
int n , a[N] ;
int pw[N] ;
bool fl ;

struct node {
  	int sz , hsh1 , hsh2 ;

	node() : sz(0) , hsh1(0) , hsh2(0) {}
} seg[N << 2] ;

inline node merge (node a , node b) {
	node ret ;

	ret.sz = a.sz + b.sz ;

	ret.hsh1 = pw[b.sz] * a.hsh1 + b.hsh1 ;
	ret.hsh2 = pw[a.sz] * b.hsh2 + a.hsh2 ;

	return ret ;
}

void add (int idx , int v = 1 , int s = 0 , int e = n) {
	seg[v].sz = e - s ;
  	
  	if (s + 1 == e) {
		seg[v].hsh1 = seg[v].hsh2 = 1 ;
		return ;
	}

	int mid = (s + e) >> 1 , lc = v << 1 , rc = lc | 1 ;

	if (idx < mid) {
		add(idx , lc , s , mid) ;
	}
	else {
		add(idx , rc , mid , e) ;
	}

	seg[v] = merge(seg[lc] , seg[rc]) ;

	return ;
}

node get (int l , int r , int v = 1 , int s = 0 , int e = n) {
  	node ret ; 

	if (s >= r || e <= l) {
		return ret ;
	}
	if (s >= l && e <= r) {
		return seg[v] ;
	}

	int mid = (s + e) >> 1 , lc = v << 1 , rc = lc | 1 ;

	ret = merge(get(l , r , lc , s , mid) , get(l , r , rc , mid , e)) ;

	return ret ;
}

int main(){
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

	for (int i = pw[0] = 1 ; i < N ; i ++) {
		pw[i] = pw[i - 1] * base ;
	}

	cin >> n ;

	for (int i = 0 ; i < n ; i ++) {
		cin >> a[i] ;
		a[i] -- ;
	}

	for (int i = 0 ; i < n ; i ++) {
		add(a[i]) ;

		int d = min(a[i] - 0 , n - 1 - a[i]) ;
	
		node g1 = get(a[i] - d , a[i]) , g2 = get(a[i] + 1 , a[i] + d + 1) ;

		fl |= g1.hsh1 != g2.hsh2 ;
	}

	if (fl) {
		cout << "YES\n" ;
	}
	else {
	  	cout << "NO\n" ;
	}
}
