#include<bits/stdc++.h>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
using namespace std;
const int N = 60;
bool mp[N][N] , vis[N][N];
int cnt = 0 , sz[N * N] , c[N][N] , n , m , k , ans;
string s[N];
int dx[4] = {0 , 0 , 1 , -1} , dy[4] = {1 , -1 , 0 , 0};
vector<pii > SIZ; set<int> q;

void dfs(int x,int y,int g){
    sz[g]++;
    c[x][y] = g;
    vis[x][y] = true;
    for(int i=0;i<4;i++){
        int nx = x + dx[i] , ny = y + dy[i];
        if(nx < 0 || ny < 0 || nx > n + 1 || ny > m + 1)continue;
        if(!mp[nx][ny])continue;
        if(!vis[nx][ny])dfs(nx , ny , g);
    }
}

int main(){
    cin>>n>>m>>k;
    for(int i=1;i<=n;i++){
        cin>>s[i];
        for(int j=m;j>0;j--)s[i][j] = s[i][j-1];
        for(int j=1;j<=m;j++){mp[i][j] = (s[i][j] == '.');}
        s[i][0] = 0;
    }
    for(int j = 0; j<=m+1 ; j++){mp[0][j] = true; mp[n + 1][j] = true;}
    for(int i=0; i<=n+1 ;i++){mp[i][0] = true; mp[i][m + 1] = true;}
    for(int i=0;i<=n+1;i++){
        for(int j=0;j<=m+1;j++){
            if(vis[i][j] || !mp[i][j])continue;
            dfs(i , j , cnt);
            cnt++;
        }
    }
    for(int i=0;i<=n+1;i++){
        for(int j=0;j<=m+1;j++){
            if(!mp[i][j])continue;
        }
    }
    for(int i=1;i<cnt;i++)SIZ.pb({sz[i] , i});
    sort(SIZ.begin() , SIZ.end());
    int need = cnt - 1 - k ;
    for(int i=0;i<need;i++){
        auto X = SIZ[i];
        ans += X.F;
        q.insert(SIZ[i].S);
    }
    cout<<ans<<'\n';
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(q.find(c[i][j]) == q.end()){cout<<s[i][j]; continue;}
            cout<<'*';
        }cout<<'\n';
    }
}
