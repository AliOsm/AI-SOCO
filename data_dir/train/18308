
#include <random>
#include <chrono>
#include <functional>
#include <utility>
#include <iomanip>
#include <iostream>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>

std::vector<int64_t> w;
std::vector<int64_t> c;
int n;

int64_t solve(int64_t L) {
    if (L == 0) {
        return 0;
    }
    if (L > w[n - 1]) {
        return c[n - 1] + solve(L - w[n - 1]);
    }
    for (int i = 0; i < n; ++i) {
        if (L == w[i]) {
            return c[i];
        }
    }
    int i = 0;
    while (w[i] < L) {
        ++i;
    }
    return std::min(c[i], c[i - 1] + solve(L - w[i - 1]));
}

int main() {

    int64_t L;
    std::cin >> n >> L;
    w.resize(n);
    c.resize(n);
    w[0] = 1;
    for (int i = 1; i < n; ++i) {
        w[i] = w[i - 1] * 2;
    }
    for (int i = 0; i < n; ++i) {
        std::cin >> c[i];
    }
    for (int i = 1; i < n; ++i) {
        for (int j = 0; j < i; ++j) {
            c[j] = std::min(c[j], c[i]);
        }
        c[i] = std::min(c[i], c[i - 1] * 2);
    }
    int64_t answer = 0;
    if (L > w[n - 1]) {
        answer += c[n - 1] * (L / w[n - 1]);
        L %= w[n - 1];
    }
    answer += solve(L);
    std::cout << answer;
    return 0;
}