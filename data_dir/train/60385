#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define ll long long
#define all(x) x.begin(), x.end()
#define debug(x) cerr << #x << " = " << (x) << " ";
#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;

const int mod = (int)1e9 + 7;

int n, m;
int a[1001], b[1001];

bool can(double x){

	double sub = (m + x) / a[0];
	x -= sub;
	if(x <= 0) return 0;

	for(int i = 1; i < n; ++i){
		sub = (m + x) / b[i];
		x -= sub;
		sub = (m + x) / a[i];
		x -= sub;
		if(x <= 0) return 0;
	}

	sub = (m + x) / b[0];
	x -= sub;

	return x >= 0.0;
}

int main ()
{

	cin.tie(0);
	cin.sync_with_stdio(0);

	// #ifdef Cyborg1o1
	// 	freopen("input.txt", "r", stdin);
	// 	freopen("output.txt", "w", stdout);
	// #endif

	
	cin >> n >> m;

	for(int i = 0; i < n; ++i) cin >> a[i];
	for(int i = 0; i < n; ++i) cin >> b[i];

	double l = 0, r = 2e9;
	for(int itr = 0; itr < 100; ++itr){
		double x = (l + r) / 2;
		if(can(x)) r = x;
		else l = x;
	}

	double res = (l + r) / 2.0;

	cout << fixed << setprecision(10) << (res == 2e9 ? -1 : res) << endl;

	// ZXC
	return 0;
}