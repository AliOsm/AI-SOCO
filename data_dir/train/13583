#include<bits/stdc++.h>
using namespace std;

#define ll long long

bool check(string s){
    int x = 0, y = 0;
    for(auto c : s) (c == '4') ? x++ : y++;
    return x == y;
}

bool lex(string s, string n){
    for (int i = 0; i < s.size(); i++){
        if (s[i] < n[i]) return true;
        if (s[i] > n[i]) return false;
    }
    return true;
}

string do_it(string r, int nf, int ns){
    for (int i = 0; i < nf; i++) r += '4';
    for (int i = 0; i < ns; i++) r += '7';
    return r;
}

string solve(string s){
    int N = s.size();
    string res = "";
    if (N & 1){
        int need = (N + 1) / 2;
        res = do_it(res, need, need);
    }
    else{
        int four = N / 2, seven = N / 2;
        for (int i = 0; i < N; i++){
            if (s[i] == '4'){
                if (four) res += s[i], four--;
                else{
                    res = do_it(res, four, seven);
                    break;
                }
            }
            else if (s[i] == '7'){
                if (seven) res += s[i], seven--;
                else{
                    res = do_it(res, four, seven);
                    break;
                }
            }
            else{
                if (s[i] < '4'){
                    res = do_it(res, four, seven);
                    break;
                }
                else if (s[i] < '7' && seven){
                    res += '7', seven--;
                    res = do_it(res, four, seven);
                    break;
                }
                else{
                    for (int x = i-1; x >= 0; x--){
                        if (s[x] < '7'){
                            res[x] = '7', four++, seven--;
                            break;
                        }
                    }
                    res = do_it(res, four, seven);
                    break;
                }
            }
        }
        if (!lex(s, res)){
            int ls = -1, lf = -1;
            for (int i = N - 1; i >= 0; i--){
                if (res[i] == '4' && ls != -1){
                    lf = i;
                    break;
                }
                if (res[i] == '7' && ls == -1) ls = i;
            }
            if (ls > -1 && lf > -1){
                swap(res[ls], res[lf]);
                four = N / 2, seven = N / 2;
                string tmp = "";
                for (int i = 0; i <= lf; i++){
                    if (res[i] == '4') tmp += '4', four--;
                    if (res[i] == '7') tmp += '7', seven--;
                }
                res = do_it(tmp, four, seven);
            }
        }
        if (!check(res) || !lex(s, res)) res = do_it("", (N+2) / 2, (N+2) / 2);
    }
    return res;
}

int main()
{
    string s; cin >> s;
    cout << solve(s) << "\n";
    return 0;
}
