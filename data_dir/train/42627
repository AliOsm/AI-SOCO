#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=402;
ll nxt[M][30];
ll dp[M][M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll test;
	cin>>test;
	while(test--)
	{
		string s,t;
		cin>>s>>t;
		ll n=sz(s),m=sz(t);
		for(ll i=0;i<26;i++)
			nxt[n][i]=-1;
		for(ll i=n-1;i>=0;i--)
		{
			for(ll j=0;j<26;j++)
				nxt[i][j]=nxt[i+1][j];
			nxt[i][s[i]-'a']=i+1;
		}
		bool flag=0;
		for(ll len=1;len<=m;len++)
		{
			dp[0][0]=0;
			ll l1=len,l2=m-len;
			for(ll i=0;i<=l1;i++)
			{
				for(ll j=0;j<=l2;j++)
				{
					if(i+j==0)
						continue;
					dp[i][j]=-1;
					if(i>0)
					{
						ll c=dp[i-1][j];
						if(c!=-1)
						{
							ll tt=nxt[c][t[i-1]-'a'];
							if(tt!=-1)
								dp[i][j]=tt;
						}
					}
					if(j>0)
					{
						ll c=dp[i][j-1];
						if(c!=-1)
						{
							ll tt=nxt[c][t[j-1+l1]-'a'];
							if(tt!=-1)
							{
								if(dp[i][j]==-1 || dp[i][j]>tt)
									dp[i][j]=tt;
							}
						}
					}
				}
			}
			if(dp[l1][l2]!=-1)
			{
				flag=1;
				cout<<"YES\n";
				break;
			}
		}
		if(flag==0)
			cout<<"NO\n";
	}
	return 0;
}