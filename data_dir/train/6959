#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>
#include <numeric>
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long mod = 1000000007LL;
//const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/
	ll t; scanf("%lld", &t);
	while (t--) {
		ll n; scanf("%lld", &n);
		ll res = -1;
		vector<ll> a(n); for (ll i = 0; i < n; i++) scanf("%lld", &a[i]);
		for (ll i = 0; i < n; i++) {
			if (a[i] == -1) {
				if (i != 0) res = a[i - 1];
				else res = a[i + 1];
			}
		}
		ll left = -1;
		ll right = 1000005000;
		while (right - left > 1) {
			ll mid = (left + right) >> 1;
			ll l = 0;
			ll r = INF;
			ll sa = -INF;
			for (ll i = 0; i < n - 1; i++) {
				if (a[i] == -1 && a[i+1] == -1) {
					chmax(sa, 0LL);
				}
				else if (a[i] == -1) {
					chmax(l, a[i + 1] - mid);
					chmin(r, llabs(a[i + 1] + mid));
				}
				else if (a[i + 1] == -1) {
					chmax(l, a[i] - mid);
					chmin(r, llabs(a[i] + mid));
				}
				else {
					chmax(sa, llabs(a[i + 1] - a[i]));
				}
			}
			//cout << mid << " " << l << " " << r << endl;
			if (l <= r && sa <= mid) {
				right = mid;
				res = l;
			}
			else {
				left = mid;
			}
		}
		printf("%lld %lld\n", right, res);
	}
	return 0;
}
