#include <bits/stdc++.h>
#define int long long
using namespace std;


const int N = 2e5 + 7;

vector <int> adj[N];

int cnt[N];

pair <long long, int> dp[N];


void dfs(int u, int p) {
    if(!cnt[u]) return;
    long long ans = 1; --cnt[u];
    vector <pair <int, int> > t;
    for(int v: adj[u]) if(v != p) {
        dfs(v, u);
        t.push_back(dp[v]);
    }
    sort(t.begin(), t.end(), greater <pair <int, int> > ());
    for(auto x: t) {
        if(cnt[u] && x.first) {
            cnt[u]--;
            ans += x.first + 1;
        }
    }
    for(auto x: t) {
        int y = min(cnt[u], x.second);
        ans += 2 * y;
        cnt[u] -= y;
    }
    //cout << u << " " << ans << endl;
    dp[u] = make_pair(ans, cnt[u]);
}

int32_t main() {
    ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n; cin >> n;
    for(int i = 1; i <= n; i++) cin >> cnt[i];
    for(int i = 1; i < n; i++) {
        int u, v; cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    int a; cin >> a; ++cnt[a];
    dfs(a, 0);
    cout << dp[a].first - 1 << endl;

}
