#include <bits/stdc++.h>
#define ALL(a) (a).begin(), (a).end()
#define SZ(a) ((int)(a).size())
#define FIN ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define pb push_back
#define fore(i,a,b) for(int i = a; i < b; i++)
using namespace std;
typedef long long ll;

const int MXN = 50001;
int N, start, X;
int V[MXN], nxt[MXN];
int used_question=0, lt_idx=-1;

#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

ordered_set<int> os;

int main(){
  srand(clock()); 
  cin >> N >> start >> X;
  fore(x,1,N+1) os.insert(x);

  cout << "? " << start << endl;
  int vi, nxti;
  cin >> vi >> nxti;
  V[start]=vi; nxt[start]=nxti;
  os.erase(start); os.erase(nxti);

  if(vi >= X){
    cout << "! " << vi << endl;
    return 0;
  }

  lt_idx = start;
  used_question++;
  fore(q,0,1000){
    if(os.empty())break;
    int i=*os.find_by_order((rand() + rand()<<15)%os.size());
    cout << "? " << i << endl;
    cin >> vi >> nxti;
    os.erase(i); os.erase(nxti);
    V[i]=vi; nxt[i] = nxti;
    if(vi<X&&vi>V[lt_idx])lt_idx=i;
  }
  used_question+=1000;

  while(nxt[lt_idx] != -1){
    cout << "? " << nxt[lt_idx] << endl;
    cin >> vi >> nxti;
    V[nxt[lt_idx]]=vi;
    nxt[nxt[lt_idx]]=nxti;

    if(vi<X) lt_idx=nxt[lt_idx];
    else break;
  }

  if(nxt[lt_idx]==-1){
    cout << "! -1\n";
  }else
    cout << "! " << V[nxt[lt_idx]] << endl;
}