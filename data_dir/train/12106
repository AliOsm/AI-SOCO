#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pf push_front
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("board.in");ofstream out("board.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main() {
    fast;
    int a,k; cin>>a>>k;
    vec<int> m(a);
    for(int q=0; q<a; q++) cin>>m[q];
    deque<int> d;
    set<int> s;
    for(int q=0; q<a; q++){
        int c = m[q];
        if(s.count(c)) continue;
        if(d.size()==k) s.erase(d.back()), d.pop_back();
        d.push_front(c);
        s.insert(c);
    }
    cout<<d.size()<<"\n";
    for(int i : d) cout<<i<<" ";
}