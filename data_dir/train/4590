#include<bits/stdc++.h>
using namespace std;
#define ll long long int  
#define mod 1000000007
#define mod1 998244353
#define mkp make_pair
#define scl(n) scanf("%lld",&n)
#define pfl(n) printf("%lld\n",n)
#define sc(n) scanf("%ld",&n)
#define pf(n) printf("%ld\n",n)
// ll dx[] = {1,1,0,-1,-1,-1,0,1};
// ll dy[] = {0,-1,-1,-1,0,1,1,1};
// bool isvalid(ll x,ll y,ll n,ll m){
//     return (x>=0&&x<n&&y>=0&&y<m);
// }
// ll pow2[33];
// ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
// return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
// }}
// ---------------------->>>>>>>>>>>>>-------------------------------
// ---------------------->>>>>>>>>>>>>-------------------------------
// ---------------------->>>>>>>>>>>>>-------------------------------
// ---------------------->>>>>>>>>>>>>-------------------------------
vector<ll>v[200011];
ll ans[200111];
ll visited[200011];
ll par[200011];
ll ok = 1;
void dfs1(ll s){
    queue<ll>q;
    q.push(s);
    ll  k=1;
    while(!q.empty()){

        ll p = q.front();
        visited[p] = 1;
        q.pop();
        for(ll i=0;i<v[p].size();i++){
            if(visited[v[p][i]]){
                continue;
            }
            if(binary_search(v[p].begin(),v[p].end(),ans[k])){
                q.push(ans[k]);
                k++;
            }else{
                ok = 0;
                return ;
            }
        }
    }
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // pow2[0] = 1;
    // for(ll ip=1;ip<33;ip++){
    //   pow2[ip] = pow2[ip-1]*2;
    // }
    ll t,i,j,l,m,n,q,r,k;
    cin>>n;
    for(i=1;i<n;i++){
        cin>>l>>r;
        v[l].push_back(r);
        v[r].push_back(l);
    }
    for(i=1;i<=n;i++){
        sort(v[i].begin(),v[i].end());
    }
    // ll ans[n+11];
    for(i=0;i<n;i++){
        cin>>ans[i];
        if(ans[0]!=1){
            cout<<"NO";
            return 0;
        }
    }
    dfs1(1);
    if(ok){
        cout<<"YES";
    }else{
        cout<<"NO";
    }
return 0;
}