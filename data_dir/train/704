#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%Ld"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
#include <utility>
#include <cassert>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
#define MAX 1000010
int N , K , UP , ANS = 1;
vi in;
int _fg[MAX];
int fg(int w){
  if(w >= MAX)return sz(in);
  return _fg[w];
}
int main(){
  scanf("%d%d" , &N , &K);
  in.resize(N);
  for(int i=0;i<N;++i)
   scanf("%d" , &in[i]);
  sort(all(in));
  for(int i=1;i<MAX;++i)
   _fg[i] = lower_bound(all(in) , i) - in.begin();
  UP = in[0];
  for(int i=2;i<=UP;++i){
   bool OK = true;
   for(int j=i;;j += i){
    int ng = fg(j+i);
    int prev = ng - 1;
    if(prev >= 0 && in[prev] - j > K){
     OK = false;
     break;
                                     }
    if(ng >= sz(in))break;
                       }
   if(OK)relaxMax(ANS , i);
                        }
  cout<<ANS<<'\n';
  return 0;
}
