#include <bits/stdc++.h>
using namespace std;

#define trace(x) cerr << #x << ": " << x << " ";
#define trnl cerr << "\n";
typedef long long lolo;
typedef unsigned long long ulolo;
typedef pair<int, int> pii;
#define R(i,n) for(int i=0;i<(n);++i)
#define F(i,a,b) for(int i=(a);i<(b);++i)
#define FS(i,a,b,s) for(int i=(a);i<(b);i+=(s))
#define FD(i,n) for(int i=(n-1);i>=0;--i)
#define FDS(i,n,s) for(int i=(n-1);i>=0;i-=(s))
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define fi first
#define se second
#define M_PI           3.14159265358979323846

const int INF = 1e9 + 23;
const int MOD = 1e9 + 7;
const int N = 2e3 + 10;

void add(int &a, int b) {
  a = a + b;
  if (a > MOD) a -= MOD;
}

void mul(int &a, int b) {
  lolo c = a * 1LL * b;
  if (c > MOD) c %= MOD;
  a = c;
}

pii vals[N];
vector<int> gr[N];
int d, n;

void read() {
  cin >> d >> n;
  int a;
  R(i, n) {
    cin >> a;
    vals[i] = {a, i};
  }
  int x, y;
  R(_, n-1) {
    cin >> x >> y;
    --x, --y;
    gr[x].push_back(y);
    gr[y].push_back(x);
  }
}

int dfs(pii rval, int v, int fr) {
  int ret = 1;
  for (auto u : gr[v]) {
    if (u == fr) continue;
    if (vals[u] > rval) continue;
    if (vals[u].fi < rval.fi - d) continue;
    int cur = 1;
    add(cur, dfs(rval, u, v)); 
    mul(ret, cur);
  }
  return ret;
}

int solve() {
  int order[N];
  R(i, n) order[i] = i;
  sort(order, order + n,
      [](int a, int b) {
        return vals[a] < vals[b];
      }
  );
  int ans = 0;
  R(i, n) {
    int k = order[i];
    int cur = dfs(vals[k], k, -1);
    add(ans, cur);
  }
  return ans;
}

int main()
{
  ios_base::sync_with_stdio(0);
  read();
  int ans = solve();
  cout << ans << "\n";
  return 0;
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp
