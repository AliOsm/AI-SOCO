#include <bits/stdc++.h> 
using namespace std;
#define popCnt(x) (__builtin_popcountll(x))
typedef long long Long;

const int MOD = round(1e9 + 7);
const int N = 2e5 + 5;

Long fact[N];

void Init() {
  fact[0] = 1;
  for (int i = 1; i < N; ++i) {
    fact[i] = i * fact[i - 1] % MOD;
  }
}

int Power(int b, int p) {
  if (p == 0) return 1;
  int res = Power(b, p / 2);
  res = 1LL * res * res % MOD;
  if (p & 1) {
    res = 1LL * res * b % MOD;
  }
  return res;
}

int GetInv(int x) {
  return Power(x, MOD - 2);
}

int nCr(int n, int r) {
  if (r < 0 || n < 0 || r > n) return 0;
  int res = fact[n];
  res = 1LL * res * GetInv(fact[r]) % MOD;
  res = 1LL * res * GetInv(fact[n - r]) % MOD;
  return res;
}

int F(int n, int m) {
  if (n < 0 || m <= 0) return 0;

  return nCr(n + m, m - 1);
}

int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#ifdef Local
  freopen("test.in", "r", stdin);
#endif

  Init();

  string s;
  cin >> s;

  int cnt_opening = 0;
  int cnt_closing = count(s.begin(), s.end(), ')');

  int res = 0;

  for (char c : s) {
    if (c == '(') {
      ++cnt_opening;
      res = (res + F(cnt_opening - 1, cnt_closing)) % MOD;
    } else {
      --cnt_closing;
    }
  }

  cout << res << '\n';

}
