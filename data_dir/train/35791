#include <iostream>
#include <string>
#include <vector>
#include <hash_map>
#include <hash_set>
#include <algorithm>
#include <queue>
#include <sstream>
#include <iterator>
#include <set>
#include <map>
using namespace std;
typedef long long LL;
#define mems(mas, val) memset(mas, val, sizeof(mas))
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define mp(a,b) make_pair(a, b)
int const SIZE = 200005;

int parent[SIZE];
int type[SIZE];
bool alive[SIZE];
int DNA[SIZE];


int convert(int n, int p)
{
	int ans = 0;
	while(n > 0)
	{
		n /= p;
		ans++;
	}
	return ans;
}

int convtodec(int n, int p)
{
	int curdeg = 1;
	int ans = 0;
	while (n > 0)
	{
		ans += curdeg * (n % 10);
		n /= 10;
		curdeg *= p;
	}

	return ans;
}

int main()
{

#ifdef MY_SOL
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif

	int a,b;
	cin>>a>>b;
	int newa = a, newb = b;
	int c = a + b;
	int maxdig = -1;
	while(a > 0)
	{
		maxdig = max(a % 10, maxdig);
		a /= 10;
	}
	while(b > 0)
	{
		maxdig = max(b % 10, maxdig);
		b /= 10;
	}
	newa = convtodec(newa, maxdig + 1);
	newb = convtodec(newb, maxdig + 1);
	cout<<convert(newa + newb, maxdig + 1);

    return 0;
}