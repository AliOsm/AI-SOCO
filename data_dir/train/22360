#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define ll long long
#define mp make_pair
#define f first
#define s second
#define pii pair < int, int >
#define pll pair < ll, ll >
#define all(s) s.begin(), s.end()
#define sz(s) (int) s.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define vi vector < int >

const int inf = (int)1e9;
const int mod = (int) 1e9 + 7;

int n;
long long a[505][505];
long long main_sum;

void check_rows(){
    for (int i=0;i<n;i++){
        ll sum = 0;
        for (int j=0;j<n;j++){
            sum += a[i][j];
        }
        if (sum != main_sum){
            cout <<-1<<endl;
            exit(0);
        }
    }
}

void check_cols(){
    for (int j=0;j<n;j++){
        ll sum = 0;
        for (int i=0;i<n;i++){
            sum += a[i][j];
        }
        if (sum != main_sum){
            cout <<-1<<endl;
            exit(0);
        }
    }
}

void check_main_diag(){
    ll sum = 0;
    for (int i=0;i<n;i++){
        sum += a[i][i];
    }
    if (sum != main_sum){
        cout <<-1<<endl;
        exit(0);
    }
}

void check_inv_diag(){
    ll sum = 0;
    for (int i=0;i<n;i++){
        sum += a[i][n-1-i];
    }
    if (sum != main_sum){
        cout <<-1<<endl;
        exit(0);
    }
}

int main () {
    scanf("%d", &n);
    if (n == 1){
        cout <<1<<endl;
        return 0;
    }

    for (int i=0;i<n;i++){
        bool has_zero = false;
        ll sum = 0;
        for (int j=0;j<n;j++){
            cin >>a[i][j];
            has_zero |= (a[i][j] == 0);
            sum += a[i][j];
        }
        if (!has_zero){
            main_sum = sum;
        }
    }
    ll ans = 0;
    for (int i=0;i<n;i++){
        ll sum = 0;
        for (int j=0;j<n;j++) sum += a[i][j];
        for (int j=0;j<n;j++){
            if (a[i][j] == 0) {
                a[i][j] = main_sum - sum;
                ans = a[i][j];
                if (a[i][j] <= 0){
                    cout <<-1<<endl;
                    return 0;
                }
                break;
            }
        }
    }

    check_rows();
    check_cols();
    check_main_diag();
    check_inv_diag();

    cout <<ans<<endl;


    return 0;
}



