#include <bits/stdc++.h>
#define F first
#define S second
using namespace std;
typedef long long ll;
typedef pair<ll, ll>pll;
int n, m;
ll dp[1 << 19][20];
bool adj[20][20];
ll getBit(ll num, ll idx)
{
    return (((num >> idx) & 1LL) == 1);
}
ll setBit(ll num, ll idx)
{
	return (num | (1LL<<idx));
}
ll solve(int msk, int last_node)
{
    if(~dp[msk][last_node]) return dp[msk][last_node];
    int start_node = -1, have = 0;
    for(int i = 0;i < n;++i)
    {
        if(getBit(msk, i) && start_node == -1)
            start_node = i, ++have;
        else if(getBit(msk, i))
            ++have;
    }
    ll ret = (have > 2 && adj[start_node][last_node]);
    for(int i = start_node + 1;i < n;++i)
        if(adj[last_node][i] && !getBit(msk, i))
            ret += solve(setBit(msk, i), i);
    return dp[msk][last_node] = ret;
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    memset(dp, -1, sizeof dp);
    while(m--)
    {
        int u, v;
        cin >> u >> v;
        --u, --v;
        adj[u][v] = adj[v][u] = 1;
    }
    ll ans = 0;
    for(int i = 0;i < n;++i)
        ans += solve(setBit(0, i), i) >> 1;
    cout << ans;
    return 0;
}
