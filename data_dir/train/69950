#include <bits/stdc++.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define ll long long 
#define endl '\n'
#define pi 3.14159265
int main()
{
    IOS;	
    ll n,m,k;
    cin>>n>>m>>k;
    vector<ll> v[n+1];
    for(ll i=1;i<=n;i++)
    {
    	for(ll j=0;j<m;j++)
    	{
    		ll x;
    		cin>>x;
    		v[i].push_back(x);
    	}
    }
    ll l=1;
    ll r=1;
    vector<multiset<ll> > s(m);
    for(ll i=1;i<=1;i++)
    {
    	for(ll j=0;j<m;j++)
    		s[j].insert(v[i][j]);
    }
    ll ans=0;
    vector<ll> a;
    for(ll i=0;i<m;i++)
    	a.push_back(0);
    while(l<=n&&r<=n)
    {
    	ll req=0;
    	for(ll i=0;i<m;i++)
    	{
    		auto it=s[i].end();
    		it--;
    		req+=*it;
    	}
    	if(req<=k)
    	{
    		if(ans<r-l+1)
    		{
    			ans=r-l+1;
    			a.clear();
    			for(ll i=0;i<m;i++)
		    	{
		    		auto it=s[i].end();
		    		it--;
		    		req+=*it;
		    		a.push_back(*it);
		    	}
    		}
    		r++;
    		if(r==n+1)
    			break;
    		for(ll i=0;i<m;i++)
    			s[i].insert(v[r][i]);
    		continue;
    	}
    	if(l==r)
    	{
    		l++;
    		r++;
    		if(r==n+1)
    			break;
    		for(ll i=0;i<m;i++)
	    		s[i].clear();
	    	for(ll i=0;i<m;i++)
	    		s[i].insert(v[l][i]);
    		continue;
    	}
    	l++;
    	for(ll i=0;i<m;i++)
    	{
    		auto it=s[i].lower_bound(v[l-1][i]);
    		s[i].erase(it);
    	}
    }
    //trace1(ans);
    for(ll i=0;i<m;i++)
    	cout<<a[i]<<" ";
}   