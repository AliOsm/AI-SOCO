#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define ii pair<ll,ll>
#define mp make_pair
using namespace std;
ll f[4000005];
int n,k;
ll mod = 1e9+7;
ll bigmod(ll b,ll p ,ll m)
{
    if(p==0)
        return 1;
    if(p%2 == 0)
    {
        ll temp = bigmod(b,p/2,m);
        return (temp*temp)%m;
    }
    return (bigmod(b,p-1,m)*(b%m))%m;
}
ll InverseEuler(ll n, ll MOD)
{
    return bigmod(n,MOD-2,MOD);
}
ll c(ll n, ll r, ll MOD)
{

    return (f[n]*((InverseEuler(f[r], MOD) * InverseEuler(f[n-r], MOD)) % MOD)) % MOD;
}
ii a[300005];
ll pre[4000005];
ll F[4000005];
int main()
{
    f[0] = 1;
    f[1] = 1;
    for(ll i=2;i<4000005;i++)
    {
        f[i] = f[i-1]*i;
        f[i]%=mod;
    }
    cin>>n>>k;
    set < int > s;
    for(int i=0;i<n;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        a[i] = mp(x,y);
        s.insert(x);
        s.insert(y);
        s.insert(x-1);
        s.insert(y-1);
    }
    int cnt = 1;
    map < int , int > my;
    map < int , int > my2;
    for(auto x : s)
    {
        F[cnt] = x;
        my[x] = cnt;
        cnt++;
    }
    for(int i=0;i<n;i++)
    {
        int L = my[a[i].fr];
        int R = my[a[i].sc];
        pre[L]++;
        pre[R+1]--;
    }
    ll res = 0;
    for(int i=1;i<=cnt;i++)
    {
        pre[i]+=pre[i-1];
        if(pre[i] >= k)
        {
            ll dis = F[i]-F[i-1];
            ll sum = c(pre[i],k,mod);
            res += sum * dis;
            res %=mod;
        }
    }
    cout<<res<<endl;
}
