#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const LL MOD = 998244353;
const LL MAX = 1000000;

LL powMod(LL a, LL b)
{
    if(b==0) return 1;
    LL r = powMod(a, b/2);
    r = (r*r)%MOD;
    if (b%2) r = (r*a)%MOD;
    return r;
}

LL fct[MAX+7];
LL inv[MAX+7];

LL nCr(LL n, LL r)
{
    return ( ( (fct[n]*inv[r])%MOD )*inv[n-r] ) % MOD;
}

LL dp[MAX+7];

int main()
{
    LL n;
    cin >> n;

    fct[0] = inv[0] = 1;

    for (LL i = 1; i <= n; i++) {
        fct[i] = (i*fct[i-1])%MOD;
    }
    inv[n] = powMod(fct[n], MOD-2);

    for (LL i = n-1; i > 0; i--) {
        inv[i] = (inv[i+1]*(i+1))%MOD;
    }

    LL ans = powMod(3, n)-3;
    ans = powMod(ans, n);

    dp[n+1] = 0;
    for (LL i = n; i > 0; i--) {
        LL tm = (powMod(3, i)-3)*powMod(3, n*(n-i));
        tm %= MOD;
        tm += (3*powMod( (powMod(3, n-i)-1) , n))%MOD;
        tm *= nCr(n, i);
        tm -= dp[i+1];
        tm %= MOD;
        //dp[i] = (dp[i+1]+tm)%MOD;
        dp[i] = tm;
        //cout << "dp[" << i << "] = " << dp[i] << endl;
    }

    ans -= dp[1];

    ans = powMod(3, n*n)-ans;

    ans %= MOD;
    ans += MOD;
    ans %= MOD;


    cout << ans << endl;

    return 0;
}

