//============================================================================
// Name        : hoba.cpp :)
// Author      : (O_O Diab) (Why_not) (el 3AQ)
// Version     :
// Copyright   : please, Don't touch me :(
// Description : problem in C++
// MAIN IDEA   :
//============================================================================
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define ll long long
#define rw freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
#define pb push_back
#define F first
#define S second
#define pf push_front
#define lp(i,a,b) for (int i=a;i<=(int)b;++i)
#define lp2(i,a,b) for (int i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define p(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vl vector<ll>
#define vii vector<pii>
#define vll vector<pll>
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define EPS 1e-6
// to convert string to number use int a = stoi(string);
// to convert number to string use string s = to_string(int);
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define clr(c,x) memset(c,x,sizeof(c));
using namespace __gnu_pbds;
using namespace std;
const ll INFL = 0x3f3f3f3f3f3f3f3fLL;
const int dx[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
const int N = 2e5 + 5, mod = (int) 1e9 + 7, INF = 0x3f3f3f3f;
//vector<pair<int, char>> nums;
//string s, ss;
//set<string> st;
//int k, n, ans = 0;
//bool is = false;
//inline void bk(int idx, int len) {
//	if (idx >= (int) nums.size()) {
//		if (s.size() < len) {
//			return;
//		}
//		if (st.count(s))
//			return;
//		ans += (n - s.size());
//		st.insert(s);
//		if ((int) st.size() >= k) {
//			cout << ans << "\n";
//			exit(0);
//		}
//		return;
//	}
//	lp2(i,nums[idx].F,1)
//		s.pb(nums[idx].S);
//	lp2(i,nums[idx].F,1)
//	{
//		bk(idx + 1, len);
//		s.pop_back();
//	}
//	bk(idx + 1, len);
//}
int main() {
#ifdef ONLINE_JUDGE
	FAST
#endif
//	int cnt = 1;
//	cin >> n >> k >> ss;
//	lp(i,1,n-1)
//	{
//		if (ss[i] == ss[i - 1]) {
//			cnt++;
//		} else {
//			nums.pb( { cnt, ss[i - 1] });
//			cnt = 1;
//		}
//	}
//	nums.pb( { cnt, ss[n - 1] });
//	lp2(t,n,0)
//	{
//		
//		bk(0, t);
//	}
//	f(-1);
	int n;
	cin >> n;
	lp(i,n,n+5000)
	{
		string s = to_string(i);
		int sum = 0;
		for (auto u : s) {
			sum += (u - '0');
		}
		if (sum % 4 == 0)
			f(s);
	}
	return 0;
}