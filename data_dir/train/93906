#include<bits/stdc++.h>
using namespace std;

#define VIC ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define pi (2 * acos(0))
typedef long double ld;
typedef long long ll;
#define endl '\n'
#define matrix vector<vector<ll>>
const int N = 1e6 + 5, mod = 1e9 + 7;

char a[N];
int c[N];

pair<int, int> query(int n)
{
    int pre = 0;
    pair<int, int> ans = {0, 1};
    for (int i = 1; i <= n; i++)
    {
        c[i] = c[i - 1];
        if (a[i] == ')')
            c[i]--;
        else
            c[i]++;
        if (c[i] == 0)
        {
            if (i - pre > ans.first)
                ans = {i - pre, 1};
            else if (i - pre == ans.first)
                ans.second++;
        }
        if (c[i] < 0)
            c[i] = 0, pre = i;
    }
    for (int i = 1; i <= n; i++)
        c[i] = 0;
    pair<int, int> ans2;
    pre = n + 1;
    for (int i = n; i >= 1; i--)
    {
        c[i] = c[i + 1];
        if (a[i] == ')')
            c[i]--;
        else
            c[i]++;
        if (c[i] == 0)
        {
            if (pre - i > ans2.first)
                ans2 = {pre - i, 1};
            else if (pre - i == ans2.first)
                ans2.second++;
        }
        if (c[i] > 0)
            c[i] = 0, pre = i;
    }
    if (ans2.first > ans.first)
        ans = ans2;
    return ans;
}

int main()
{
    VIC
    string s;
    cin >> s;
    for (int i = 1; i <= s.size(); i++)
        a[i] = s[i - 1];
    pair<int, int> ans = query(s.size());
    cout << ans.first << ' ' << ans.second;
    return 0;
}