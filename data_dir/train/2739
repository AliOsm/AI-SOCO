//In the name of Allah

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

#define int ll

const int N = 2e5+10 , mod = 998244353;

int dp[20][1 << 11] , k , t[20][1 << 11] , pw[20] , dp2[20][1 << 11] , t2[20][1 << 11];

string s(ll x){
	string st = "";
	while(x){
		st += char('0' + (x % 10));
		x /= 10;
	}
	reverse(st.begin() , st.end());
	return st;
}

int get(string st){
   if(st == "")
      return 0;
//	cout << st << endl;
	int nw = 0 , m = st.length() , ret = 0 , smn = 0;
	for(int j = 1 ; j < m ; j++)
      for(int i = 0 ; i < (1 << 10) ; i++)
         if(__builtin_popcount(i) <= k)
            (ret += dp2[j][i]) %= mod;
	for(int i = 0 ; i < m ; i++){
		smn = 10ll * smn % mod;
		for(int j = 0 ; j < st[i] - '0' ; j++){
         if(i == 0 && j == 0)
            continue;
			int nww = nw | (1 << j);
			for(int p = 0 ; p < (1 << 10) ; p++){
				if(__builtin_popcount(p) > k || (p & nww) != nww)
					continue;
				for(int msk = p ; ; msk = ((msk - 1) & p)){
					if((msk | nww) != p){
						if(msk == 0)
                     break;
                  else
                     continue;
					}
//					if(msk == 1 && j == 1)
//						cout << t[m - i - 1][msk] << endl;
					ret += dp[m - i - 1][msk];
					ret += 1ll * t[m - i - 1][msk] * (smn + j) % mod * pw[m - i - 1] % mod;
//					cout << ret << " " << msk << endl;
					ret %= mod;
					//cout << p << " " << msk << " " << ret << endl;
					if(!msk)
						break;
				}
			}
		}
		smn += st[i] - '0';
		nw |= (1 << (st[i] - '0'));
	}
//	cout << ret << " " << smn << endl;
	if(__builtin_popcount(nw) <= k)
		ret += smn;
	ret %= mod;
	return ret;
}

int32_t main(){
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	ll l , r;
	cin >> l >> r >> k;
	pw[0] = 1;
	for(int i = 1 ; i < 20 ; i++)
		pw[i] = 10ll * pw[i - 1] % mod;
	t[0][0] = 1;
	for(int i = 1 ; i < 19 ; i++)
		for(int j = 1 ; j < (1 << 10) ; j++){
			for(int p = 0 ; p < 10 ; p++){
				if(!((1 << p) & j))
					continue;
				t[i][j] += t[i - 1][j];
				t[i][j] %= mod;
				t[i][j] += t[i - 1][j ^ (1 << p)];
				t[i][j] %= mod;
				if(t[i - 1][j])
					dp[i][j] += (10ll * dp[i - 1][j] % mod + 1ll * p * t[i - 1][j] % mod) % mod;
				dp[i][j] %= mod;
				if(t[i - 1][j ^ (1 << p)])
					dp[i][j] += (10ll * dp[i - 1][j ^ (1 << p)] % mod + 1ll * p * t[i - 1][j ^ (1 << p)] % mod) % mod;
				dp[i][j] %= mod;
			}
		}
   t2[0][0] = 1;
	for(int i = 1 ; i < 19 ; i++)
		for(int j = 2 ; j < (1 << 10) ; j++){
			for(int p = 0 ; p < 10 ; p++){
				if(!((1 << p) & j))
					continue;
				t2[i][j] += t2[i - 1][j];
				t2[i][j] %= mod;
				t2[i][j] += t2[i - 1][j ^ (1 << p)];
				t2[i][j] %= mod;
				if(t[i - 1][j])
					dp2[i][j] += (10ll * dp2[i - 1][j] % mod + 1ll * p * t2[i - 1][j] % mod) % mod;
				dp2[i][j] %= mod;
				if(t2[i - 1][j ^ (1 << p)])
					dp2[i][j] += (10ll * dp2[i - 1][j ^ (1 << p)] % mod + 1ll * p * t2[i - 1][j ^ (1 << p)] % mod) % mod;
				dp2[i][j] %= mod;
			}
		}
//	cout << dp[1][1 << 9] << endl;
	//for(int i = 2 ; i <= 2345 ; i++){
		//if(get(s(i)) - get(s(i - 1)) != i)
         //cout << i << endl;
		//cout << i << " " << get(s(i)) << endl;
	//}
	int ret = get(s(r)) - get(s(l - 1));
	ret %= mod;
	ret += mod;
	ret %= mod;
	cout << ret;
	return 0;
}
