#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const int M=1e5+5;
int a[M][6],ind[M];
int sp[6][M][20];
int query(int tp,int st,int en)
{
	int len=(en-st+1);
	len=ind[len];
	int b=1<<len;
	int val=max(sp[tp][st][len],sp[tp][en-b+1][len]);
	return val;
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	int curr=0;
	for(int i=1;i<M;i++)
	{
		int b=1<<(1+curr);
		if(b>=i)
			ind[i]=curr;
		if(b==i)
			curr++;
	}
	int n,m,k;
	cin>>n>>m>>k;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cin>>a[i][j];
		}
	}
	for(int tp=1;tp<=m;tp++)
	{
		for(int i=1;i<=n;i++)
			sp[tp][i][0]=a[i][tp];
		for(int p=1;p<20;p++)
		{
			for(int i=1;i<=n;i++)
			{
				int b=1<<(p-1);
				if(i+b<=n)
				{
					sp[tp][i][p]=max(sp[tp][i][p-1],sp[tp][i+b][p-1]);
				}
			}
		}
	}
	bool f=0;
	for(int i=1;i<=n;i++)
	{
		int s=0;
		for(int j=1;j<=m;j++)
		{
			s+=a[i][j];
		}
		if(s<=k)
			f=1;
	}
	if(f==0)
	{
		for(int i=1;i<=m;i++)
			cout<<"0 ";
		cout<<"\n";
		return 0;
	}
	int l=1,r=n,p=-1;
	while(l<r)
	{
		int mid=(l+r)/2;
		if(mid==p)
			mid++;
		p=mid;
		bool f=0;
		for(int i=1;i<=n-p+1;i++)
		{
			int s=0;
			for(int j=1;j<=m;j++)
			{
				s+=query(j,i,i+p-1);
			}
			if(s<=k)
				f=1;
		}
		if(f==0)
			r=mid-1;
		else
			l=mid;
	}
	for(int i=1;i<=n-l+1;i++)
	{
		int s=0;
		for(int j=1;j<=m;j++)
			s+=query(j,i,i+l-1);
		if(s<=k)
		{
			for(int j=1;j<=m;j++)
				cout<<query(j,i,i+l-1)<<" ";
			cout<<"\n";
			return 0;
		}
	}
	return 0;
}