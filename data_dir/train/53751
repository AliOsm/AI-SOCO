#include <bits/stdc++.h>

using namespace std;

#define ll long long

const int N = 1e6+15,M = 29;


int ar[N];

int cc[M],num[N][M],v[M];

bool can(int len,int n,int k){
    ll ret=0;
    int a,b,w;
    for(int i=0;i<n&&ret<k;++i){
        if(ar[i]<len)break;

        int cur = 0,j;

        for(j=1;j<M;++j){
            if(num[i][j]==0)break;
            assert(v[j]!=0);
            int u = ar[i]/v[j];
            if(u<len)break;
        }
        ret += cc[j-1];
        cur = ar[i]/v[j-1] +1;
        w = cc[j-1]-num[i][j-1];

        if(cur/2>=len){
            ret +=w;
        }
    }
    if(ret>=k)return 1;
    return 0;
}
    
int main(){
    cc[0]= 1;v[0]= 1;
    for(int i=1;i<M;++i)cc[i]= cc[i-1]*2,v[i]= v[i-1]*2;
    //freopen("input.txt","r",stdin);
    int n,k;
    scanf("%d%d",&n,&k);

    for(int i=0;i<n;++i){
        scanf("%d",&ar[i]);
    }
    sort(ar,ar+n,greater<int>());
    for(int i=0;i<n;++i){
        num[i][0]= 1;
        for(int j=1;j<M;++j){
            if(v[j]>ar[i])break;
            assert(v[j]!=0);
            int sm = ar[i]/v[j];
            sm*= v[j];
            num[i][j]= cc[j]-(ar[i]-sm);
        }
    }
    int l=0,r = 1e7,mid;

    while(l<r){
        mid = (l+r+1)/2;

        if(can(mid,n,k)){
            l = mid;
        }
        else{
            r= mid-1;
        }
    }
    if(l==0)l = -1;

    cout<<l<<endl;

    return 0;
}