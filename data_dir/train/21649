#include<bits/stdc++.h>

using namespace std;
#define ll long long int

ll mod=1e9+7,cnt=0;
vector < ll > ad[100005];
bool vis[100005];

int bigmod ( ll b, ll p)
{
    if ( p == 0 ) return 1LL%mod;
    if ( p % 2 == 0 )
    {
        ll y = bigmod ( b, p / 2);
        return ( y * y ) % mod;
    }
    else
    {
        return ( b * bigmod ( b, p - 1) ) % mod;
    }
}

void dfs(ll src)
{
    vis[src]=true;
    cnt++;
    for(ll v: ad[src])
    {
        if(vis[v]) continue;
        dfs(v);
    }
}

int main()
{
    ll n,k,i,j;
    scanf("%I64d %I64d",&n,&k);
    for(i=1; i<=n-1; i++)
    {
        ll u,v,w;
        scanf("%I64d %I64d %I64d",&u,&v,&w);
        if(w) continue;
        ad[u].push_back(v);
        ad[v].push_back(u);
    }
    ll ans=bigmod(n,k);
    for(i=1; i<=n; i++)
    {
        if(!vis[i])
        {
            dfs(i);
            ll temp=bigmod(cnt,k);
            ans=((ans%mod)-(temp%mod))%mod;
            if(ans<0) ans+=mod;
            cnt=0;
        }
    }
    printf("%I64d\n",ans);
    return 0;
}
