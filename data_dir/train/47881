#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
 
double PI = 3.1415926535897932384626433832795;
long double EPS = 1e-12;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
const int MOD = 1e9 + 7;
const int BASE = 1327; 
typedef pair<int, int> pii;
const int MAXN = 100100;

int n, w, v, u;
struct pn
{
	int x, y;
	pn()
	{
	}
	pn(int x, int y): x(x), y(y)
	{
	}

	bool operator < (const pn oth) const
	{
		if (y < oth.y)
			return true;
		if (y == oth.y)
			if (x > oth.x)
				return true;
		return false;
	}
};

pn mas[MAXN];

void solve()
{
	cin >> n >> w >> v >> u;
	
	cout.precision(7);
	for(int i = 0; i < n; ++i)
	{
		cin >> mas[i].x >> mas[i].y;
	}
	sort(mas, mas + n);

	int flag = 0;
	double ans = 0;
	int px = 0, nx = 0;

	for(int i = 0; i < n; ++i)
	{
		if (mas[i].x <= 0)
		{
			nx = 1;
			continue;
		}
		px = 1;
		if (mas[i].y *(int64) v > mas[i].x *(int64) u)
		{
			flag = 1;
			break;
		}
	}
	if (!flag && !(nx && px))
	{
		cout << fixed << w / (double) u;
		return;
	}

	double cur = 0;
	double ct = 0;
	double tim = 0;
	for(int i = 0; i < n; ++i)
	{
		if (mas[i].x <= 0)
			continue;
		
		ct = mas[i].x /(double) v;
		ct -= tim;
		ct = max(0.0, ct);
		tim += ct;
		cur += ct * u;
			
		cur = min((double)mas[i].y, cur);
		
	}
	tim += ((double)w - cur) /(double) u;
	cout << fixed << tim;
}

 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	int t = 1;
	//cin >> t;
	
	for(int i = 0; i < t; ++i)
	{
		solve();
	}
	
    return 0;
}   