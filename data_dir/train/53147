#include<bits/stdc++.h>
#define INF 1000000007
#define PB push_back
#define MP make_pair
using namespace std;
typedef long long int ll;
typedef long double ld;
list<ll> g[10007];
/*ll primes[1000007];

void seive()
{int i,j;
  primes[1]=1;
  for(i=2;i<1000007;i++)
	 if(primes[i]==0)
		 for(j=i*2;j<1000007;j+=i)
			 primes[j]=1;

}

*/
bool visit[10007];
void dfs(ll x)
{ visit[x]=1;
  for(list<ll>::iterator it=g[x].begin();it!=g[x].end();++it)
	 if(!visit[*it])
		 dfs(*it);
}
int main()
{ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
 /*freopen("input.txt", "r", stdin);
 freopen("output.txt", "w", stdout);
 */
 ll n,i,j,m,ctr=0,x,k,l,t;
 string s;
 cin>>n>>t;
 vector<ll> v[n+1];
 for(i=1;i<=n;i++)
 {
 	cin>>m;
 	for(j=0;j<m;j++)
 	{
 		cin>>x;
 		v[i].push_back(x);
	 }
 }
 
 for(i=1;i<=n;i++)
 {
 	for(j=0;j<v[i].size();j++)
 	{
 		for(k=1;k<=n;k++)
 		{
 			for(l=0;l<v[k].size();l++)
 			{
 				if(v[i][j]==v[k][l])
 				{
 					g[i].push_back(k);
 					g[k].push_back(i);
				 }
			 }
		 }
	 }
 }
 bool f=0;
 for(i=1;i<=n;i++)
 
 {
   if(v[i].size()==0)
 		ctr++;
 		
   if(!visit[i] && v[i].size()!=0)
 	dfs(i),ctr++,f=1;
 	
 }
 if(f==1)
 cout<<ctr-1;
 else
 cout<<ctr;
return 0;
}

