#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 10;

int n;
int np[N];
vector<int> tmp;
vector<int> plist;
int f[N];
vector<pair<int, int> > ans;

int main() {
  scanf("%d", &n);
  np[1] = 1;
  for (int i = 2; i <= n; ++i) {
    if (!np[i]) {
      plist.push_back(i);
      for (int j = i * 2; j <= n; j += i) {
        np[j] = 1;
      }
    }
  }
  for (int i = (int)plist.size() - 1; i >= 0; --i) {
    int p = plist[i];
    tmp.clear();
    if (p * 2 > n)
      continue;
    for (int j = p; j <= n; j += p) {
      if (!f[j]) {
        f[j] = 1;
        tmp.push_back(j);
      }
    }
    if (tmp.size() & 1) {
      f[tmp[1]] = 0;
      ans.push_back(make_pair(tmp[0], tmp[2]));
      for (int j = 3; j < tmp.size(); j += 2) {
        ans.push_back(make_pair(tmp[j], tmp[j + 1]));
      }
    }
    else {
      for (int j = 0; j < tmp.size(); j += 2) {
        ans.push_back(make_pair(tmp[j], tmp[j + 1]));
      }
    }
  }
  printf("%d\n", ans.size());
  for (int i = 0; i < ans.size(); ++i) {
    printf("%d %d\n", ans[i].first, ans[i].second);
  }
  return 0;
}
