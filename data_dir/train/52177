#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				2000000000000000100
#define PI 3.14159265
#define S second
#define F first
#define Ceil(x,y) ((x+y-1)/y)
#define EPS 1e-8
#define IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
typedef unsigned int uint;
typedef long long ll;
int dX[] = {0,0,1,-1,0};
int dY[] = {1,-1,0,0,0};
string alpha = "abcdefghijklmnopqrstuvwxyz";
const int MOD = 1000000007;
const int N = 100100;

int ans[N],SQRT,n,arr[N],l[N],r[N],mp[N]; bool vis[N];
vector<int>dv[N];
void add(int x)
{
    for(auto d:dv[x]) mp[d]++;
}
void rem(int x)
{
    for(auto d:dv[x]) mp[d]--;
}
void calc(int x)
{
    if(vis[x]) return;
    for(int i = 1;i*i<=x;++i){
        if(x%i == 0){
            dv[x].push_back(i);
            if(i!=x/i) dv[x].push_back(x/i);
        }
    }
    vis[x] = 1;
}
bool cmp(int i,int j)
{
    if(l[i]/SQRT != l[j]/SQRT) return l[i] < l[j];
    return r[i] < r[j];
}
int main()
{
#ifndef ONLINE_JUDGE
    freopen("in.txt","r",stdin);
#else
    //freopen("journey.in","r",stdin);
    //freopen("journey.out","w",stdout);
#endif
    sc(n); SQRT = sqrt(n)+1;
    vector<int>ind;
    for(int i = 1;i<=n;++i){
        int x,y; sc(x); sc(y);
        l[i] = i-y; r[i] = i-1;
        arr[i] = x; ind.push_back(i);
        calc(x);
    }
    sort(ind.begin(),ind.end(),cmp);
    int L = 0,R = -1;
    for(int i=0;i<n;++i)
    {
        int ll = l[ind[i]], rr = r[ind[i]];
        int out = 0;
        if(ll <= rr){
            while(L>ll) add(arr[--L]);
            while(R<rr) add(arr[++R]);
            while(L<ll) rem(arr[L++]);
            while(R>rr) rem(arr[R--]);
            for(auto d:dv[arr[rr+1]]) out+=(mp[d] == 0);
        }
        else out = sz(dv[arr[rr+1]]);
        ans[ind[i]] = out;
    }
    for(int i = 1;i<=n;++i)
        printf("%d\n",ans[i]);







    return 0;
}

