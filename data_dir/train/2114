#include <bits/stdc++.h>

using namespace std;
int m,n;
const int N=4005,mod=1e9+7;
int dp[N][N][2];
int val[N];
int solve(int i,int cnt,int f)
{
    if(cnt<0) return 0;
    if(i==n-m)
    {
        int ret=0;
        if(cnt==0&&f) ret=1;
        if(f==0&&val[cnt]==0) ret=1;
        return ret;
    }
    int &ret=dp[i][cnt][f];
    if(~ret) return ret;
    ret=solve(i+1,cnt+1,f);
    ret=(ret+solve(i+1,cnt-1,f))%mod;
    if(f==0) ret=(ret+solve(i,val[cnt],1))%mod;
    //cout<<i<<" "<<cnt<<" "<<f<<" "<<ret<<endl;
    return ret;

}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    memset(dp,-1,sizeof dp);
    string s;
    cin>>n>>m;
    cin>>s;
    for(int cur=0;cur<=2001;cur++)
    {
        int t=cur;
        for(int i=0;i<s.size();i++)
        {
            if(s[i]=='(') t++;
            else t--;
            if(t<0)
            {
                val[cur]=-1;
                break;
            }
        }
        if(val[cur]!=-1) val[cur]=t;
    }
    if(n-m==0&&val[0]==0) cout<<1<<endl;
    else if(n-m==0) cout<<0<<endl;
    else cout<<solve(0,0,0)<<endl;
    return 0;
}
