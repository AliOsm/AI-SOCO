#include<bits/stdc++.h>
using namespace std;

const int N= 200*1000+11;
int n,m;
int deg[N];
bool used[N];
vector<int >comp;
vector<int >graph[N];
void DFS(int n)
{
    used[n]=true;
    comp.push_back( n);
    for(int i=0;i<graph[n].size();i++)
    {
       if(used[ graph[n][i] ]==false) DFS( graph[n][i]);
    }
}
int main()
{
   cin >>n>>m;
   for(int i=0;i<m;i++)
   {
       int x,y;
       cin >>x>>y;
       graph[x].push_back(y);
       graph[y].push_back(x);
       deg[x]++;
       deg[y]++;
   }

   int ans=0;
   for(int i=0;i<n;i++)
   {
       if(used[i]==0)
       {
           comp.clear();
           DFS(i);
           bool ok=true;
           for(auto u:comp)
           {
               if(deg[u]!=2) ok=false;
           }
           if(ok)  ans++;
       }
   }

   cout <<ans <<endl;
}
