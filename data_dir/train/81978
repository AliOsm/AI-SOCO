#include <cstdio>
#include <cstring>
#include <utility>
#include <algorithm>
using namespace std;

int dp[42][64][64];

int main(){
    int n,m;
    scanf("%d%d",&n,&m);
    if(n>m) swap(n,m);
    int mask=(1<<n)-1;
    memset(dp,63,sizeof(dp));
    dp[0][mask][0]=0;
    for(int i=1;i<=m+1;i++){
        for(int x=0;x<=mask;x++)
        for(int y=0;y<=mask;y++)
        for(int z=0;z<=mask;z++){
            bool v[10]={};
            for(int k=0;k<n;k++){
                if(x&1<<k) v[k+1]=true;
                if(y&1<<k) v[k]=v[k+1]=v[k+2]=true;
                if(z&1<<k) v[k+1]=true;
            }
            if(count(v+1,v+n+1,false)==0)
                dp[i][y][z]=min(dp[i][y][z],dp[i-1][x][y]+__builtin_popcount(z));
        }
    }
    int ans=0;
    for(int i=0;i<=mask;i++) ans=max(ans,n*m-dp[m+1][i][0]);
    printf("%d\n",ans);
}
