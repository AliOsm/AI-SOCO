#include<bits/stdc++.h>

using namespace std;
const int MAXN = 200100;

#define int long long

int v[MAXN];
int pre[MAXN] , pos[MAXN];
int q[MAXN] , qp[MAXN];

signed main(){
	memset(q,0,sizeof q);
	memset(qp,0,sizeof qp);
	
	int n,k;
	cin >> n >> k;
	
	for(int i = 1;i <= n;i++) cin >> v[i];
	sort(v + 1,v + n + 1);
	v[0] = 0;
	v[n + 1] = 0; 
	
	int soma = 0;
	for(int i = 1;i <= n;i++){
		if(v[i] != v[i - 1]){
			//if(i == 5) cout << "A " << v[i] << " " << q[i - 1] << " " << v[i - 1] << endl;
			soma += q[i - 1];
			soma += (i - 1) * (v[i] - v[i - 1] - 1);
			q[i] = i - 1;
		}
		else q[i] = q[i - 1];
		pre[i] = soma;
		//cout << "| " << i << " " << soma << endl; 
	}
	
	soma = 0;
	
	for(int i = n;i >= 1;i--){
		if(v[i] != v[i + 1]){
			//if(i == 5) cout << "A " << v[i] << " " << q[i - 1] << " " << v[i - 1] << endl;
			soma += qp[i + 1];
			soma += (n - i) * (v[i + 1] - v[i] - 1);
			qp[i] = n - i;
		}
		else qp[i] = qp[i + 1];
		pos[i] = soma;
		//cout << "| " << i << " " << soma << endl; 
	}
	
	int resp = -1;
	
	for(int i = 1;i <= n;i++){
		int res = -1;
		if(i >= k){
			int h = i - q[i];
			
			if(h >= k) res = 0;
			else res = pre[i] + k - h;
		}
		if(n - i + 1 >= k){
			int h = n - i + 1 - qp[i];
			
			if(h >= k) res = 0;
			else if(res == -1) res = pos[i] + k - h;
			else res = min(res,pos[i] + k - h);
		}
		
		int h = n - qp[i] - q[i];
		
		//cout << "/ " << i << " " << h << endl;
		
		if(res == -1) res = pos[i] + pre[i] + max(k - h,(long long)0);
		else res = min(res,pos[i] + pre[i] + max(k - h,(long long)0));
		
		if(resp == -1) resp = res;
		else resp = min(resp,res);
	}
	
	cout << resp << endl;
	
}