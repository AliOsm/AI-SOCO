#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define mkp make_pair
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
#define all(x) x.begin(),x.end()
typedef long long ll;
typedef long double ld;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<62);
const int inf=(1<<30);
const int nmax=1e5+50;
const ll mod=1e9+7;
using namespace std;
ll n,r,a,m,ad,re,cur,rs,h[nmax],mv,x,sz,i,mid,sm;
multiset<ll>s;
int main()
{
	//freopen("sol.in","r",stdin);
	//freopen("sol.out","w",stdout);
	//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
	ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>n>>a>>r>>m;
	for(i=1;i<=n;i++)cin>>h[i],sm+=h[i];
	m=min(m,a+r);
	re=sm%n;
	ad=n-re;
	cur=ad*a;
	mid=sm/n+1;
	for(i=1;i<=n;i++)
	{
		if(h[i]>mid)
		{
			mv+=h[i]-mid;
			s.in(h[i]);
		}
	}
	cur+=mv*m;
	while(!s.empty())
	{
		x=*s.begin();
		sz=(int)s.size();
		while(!s.empty() && (*s.begin())==x)s.er(s.begin());
		if(a*n-sz*m<0)
		{
			cur+=(x-mid)*(a*n-sz*m);
			mid=x;
		}
		else break;
	}
	rs=cur,cur=re*r,mid=sm/n,s.clear(),mv=0;
	for(i=1;i<=n;i++)
	{
		if(h[i]<mid)
		{
			mv+=mid-h[i];
			s.in(h[i]);
		}
	}
	cur+=mv*m;
	while(!s.empty())
	{
		x=*(--s.end());
		sz=(int)s.size();
		while(!s.empty() && (*(--s.end()))==x)s.er(--s.end());
		if(r*n-sz*m<0)
		{
			cur+=(mid-x)*(r*n-sz*m);
			mid=x;
		}
		else break;
	}
	rs=min(rs,cur);
	cout<<rs<<endl;
	return 0;
}
