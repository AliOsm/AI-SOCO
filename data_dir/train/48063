#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

struct Query {
	int l, r, w, s, v;
};
bool operator< (Query& a, Query& b) {
	return a.r - a.l < b.r - b.l;
}

int dp[505][1005];
int f[1005];

vector<int> ind[1005];

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0), cout.tie(0);

	int n, s_init;
	cin >> n >> s_init;

	vector<Query> V;

	for (int i = 0; i < n; i++) {
		int l, r, w, s, v;
		cin >> l >> r >> w >> s >> v;
		V.push_back(Query{l, r, w, s, v});
	}
	V.push_back(Query{0, 2*n, 0, 0, 0});
	sort(V.begin(), V.end());

	for (int cur = 0; cur < (int)V.size(); cur++) {

		for (int s = 0; s <= 1000; s++) {
			f[V[cur].r + 1] = 0;
			for (int i = V[cur].r; i >= V[cur].l; i--) {
				f[i] = f[i + 1];
				for (int j : ind[i]) {
					if (V[j].r > V[cur].r || V[j].w > s) continue;
					int ss = min(V[j].s, s - V[j].w);
					f[i] = max(f[i], dp[j][ss] + f[V[j].r]);
				}
			}
			
			dp[cur][s] = f[V[cur].l] + V[cur].v;
		}

		ind[V[cur].l].push_back(cur);
	}
	
	cout << dp[n][s_init] << "\n";
}
