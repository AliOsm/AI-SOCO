#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
//#include <random>
#include <cassert>
//#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x),end(x)
#define SZ(x) ((int)(x).size())
typedef long long LL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
const int INF = (int)1e9;
const LL INFF = (LL)1e18;
const int MXN = (int)1e6 + 7;
const int mod = (int)1e9 + 7;
LL mypow(LL v, LL t) {
	LL res = 1;
	while (t) {
		if (t & 1) res = res*v%mod;
		v = v*v%mod;
		t >>= 1;
	}
	return res;
}
int main() {
	LL v, n; scanf("%lld %lld", &v, &n);
	int h = sqrt(v);
	LL ans = 1;
	vector<int> st;
	for (int i = 2; i <= h; i++) {
		if (v % i == 0) {
			st.pb(i);
			while (v % i == 0) v /= i;
		}
	}
	if (v != 1) st.pb(v);
	for (int x : st) {
		LL val = x;
		LL cv = 1;
		LL num = 0;
		while (true) {
			if (cv*1.0*val > INFF + 5) break ;
			cv *= val;
			if (cv > n) break ;
			num = (num + n / cv) % (mod - 1);
		}
		ans = ans*mypow(val, num)%mod;
	}
	printf("%lld\n", ans);
	return 0;
}
