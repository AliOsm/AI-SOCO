#include <bits/stdc++.h>

using namespace std;

#define ll long long
#define pii pair < int, int >
#define fr first
#define sc second

const int N = (int)2e5 + 7;

ll dp[N];
pii ar[N];
int n;
int pr[N], isend[N], asd[N];

ll dist(int i, int j) {
	return abs(ar[i].fr - ar[j].fr) + abs(ar[i].sc - ar[j].sc);
}

main() {
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d %d", &ar[i].fr, &ar[i].sc);
	}
	sort(ar + 1, ar + n + 1, [&](pii &A, pii &B) {
		if (max(A.fr, A.sc) == max(B.fr, B.sc)) {
			if (A.fr == B.fr) {
				return A.sc > B.sc;
			}
			return A.fr < B.fr;
		}
		return max(A.fr, A.sc) < max(B.fr, B.sc);
	});             
	int last = 1;
	for (int i = 1; i <= n; i++) {
		if (max(ar[i].fr, ar[i].sc) != max(ar[i - 1].fr, ar[i - 1].sc)) {
			asd[last] = i - 1;
			last = i;
			isend[i - 1] = 1;
		}
		pr[i] = last;
	}
	isend[n] = 1;
	asd[last] = n;
	for (int i = 1; i <= n; i++) {
		if (pr[i] == i || isend[i]) {
			if (pr[i] == i) {
				dp[i] = min(dp[pr[pr[i] - 1]] + dist(pr[pr[i] - 1], asd[i]) + dist(asd[i], pr[i]), dp[pr[i] - 1] + dist(asd[i], pr[i] - 1) + dist(asd[i], i));
			} 
			if (isend[i]) {
				dp[i] = min(dp[pr[pr[i] - 1]] + dist(pr[i], pr[pr[i] - 1]) + dist(pr[i], i), dp[pr[i] - 1] + dist(pr[i], pr[i] - 1) + dist(pr[i], i));
			}
		}
	}
	cout << min(dp[n], dp[pr[n]]);
}

