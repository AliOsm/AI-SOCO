#pragma comment(linker, "/STACK:64000000")
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

char tmp[200200];
string a, b;
int cnt[2][200200];

int main(){

    scanf("%s\n", tmp);
    a = tmp;
    scanf("%s", tmp);
    b = tmp;

    for (int i = 0; i < b.size(); i++) {
        cnt[b[i] - '0'][i] = 1;
        if (i) {
            for (int j = 0; j < 2; j++) cnt[j][i] += cnt[j][i - 1];
        }
    }

    ll ans = 0;
    for (int i = 0; i < a.size(); i++) {
        int c = a[i] - '0';
        c ^= 1;
        int l = i, r = (int)b.size() - ((int)a.size() - i);
        if (l <= r) {
            ans += cnt[c][r];
            if (l) ans -= cnt[c][l - 1];
        }
    }

    cout << ans << endl;

    return 0;
}
