#include <iomanip>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <cmath>
#include <queue>
#include <bitset>
#include <string>
 
#define ll long long
#define mp make_pair
#define pb push_back
 
using namespace std;
 
const int N = 300010;
const int MOD = 1e9+7;


int n, m;
int a[N], c[N], t[N], d[N];
set <pair<int, int> > q;

int main() {
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
    for (int i = 1; i <= n; i++) scanf("%d", &c[i]);
    for (int i = 1; i <= m; i++) scanf("%d%d", &t[i], &d[i]);
    for (int i = 1; i <= n; i++) {
        q.insert(mp(c[i], i));
    }
    for (int i = 1; i <= m; i++) {
        ll ans = 0;
        if (a[t[i]] >= d[i]) {
            a[t[i]] -= d[i];
            ans += 1ll * c[t[i]] * d[i];
            if (a[t[i]] == 0) q.erase(mp(c[t[i]], t[i]));
        }
        else {
            d[i] -= a[t[i]];
            ans += 1ll * c[t[i]] * a[t[i]];
            a[t[i]] = 0;
            q.erase(mp(c[t[i]], t[i]));
            while (q.size() > 0 && d[i] > 0) {
                int j = (*q.begin()).second;
                if (a[j] >= d[i]) {
                    ans += 1ll * c[j] * d[i];
                    a[j] -= d[i];
                    if (a[j] == 0) q.erase(q.begin());
                    d[i] = 0;
                }
                else {
                    ans += 1ll * c[j] * a[j];
                    d[i] -= a[j];
                    a[j] = 0;
                    q.erase(q.begin());
                }
            }
            if (d[i] > 0) ans = 0;
        }
        printf("%I64d\n", ans);
    }
	return 0;
}