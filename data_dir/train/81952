
#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);

const double PI  = acos(-1.0);
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
typedef complex<double> point;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
const double EPS = 1e-9;
const int N = 2e5 + 9;

int a[N],n,p,k;
ll sum[N],v[N];
 int main()
{
//freopen("product.in","r",stdin);
//freopen("travel.out","w",stdout);
//__builtin_popcount()
input

int t;
        cin>>t;
        while(t--)
        {
            cin>>n>>p>>k;
            forr(i,1,n)cin>>a[i],v[i]=0;
            sort(a+1,a+1+n);
            forr(i,1,n)sum[i]=a[i]+sum[i-1];
            forr(i,k,n)
            {
                v[i]=a[i]+v[i-k];
            }
            ll ans=0;
            forr(i,1,n)
            {
              //  cout<<v[i]<<endl;
                if(v[i]+sum[i%k]<=p)ans=i;
            }
            cout<<ans<<endl;

        }






return 0;
}
