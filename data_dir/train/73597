#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <list>
#include <set>
#include <algorithm>
#include <cmath>
#include <queue>
#include <iterator>
#include <functional>
#include <numeric>
#include <cmath>
#include <stack>
#include <limits>

using namespace std;

#define ll long long
#define f0(i,n)for(i=0;i<n;i++)
#define f1(i,n)for(i=1;i<=n;i++)
#define fc(i,c,n)for(i=c;i<=n;i++)
#define f0r(i,n)for(i=n-1;i>=0;i--)
#define f1r(i,n)for(i=n;i>0;i--)
#define fcr(i,c,n)for(i=n;i>=c;i--)
#define IO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

typedef list<ll> LST;
typedef vector<ll> VEC;
typedef map<ll, ll> MAP;

long long i, j, q, u;

int main() {
	IO;
	//ifstream cin("In.txt");
	ll n, x, mod = 1, fc = 0, cur = 0, fcc = 1;
	string stmt, op, val;
	mod <<= 32;
	cin >> n;

	list<string> st;
	stack<ll> stt;
	f0(i, n) {
		cin >> op;
		if (op == "add") {
			st.push_back(op);
		}
		else if (op == "for") {
			cin >> x;
			st.push_back(op+to_string(x));
		}
		else {
			if (st.back().substr(0,3) == "for")
				st.pop_back();
			else
				st.push_back(op);
		}
	}

	for(auto it: st) {
		op = it;
		if (op == "add") {
			cur += fcc;
			if (cur >= mod) {
				cout << "OVERFLOW!!!" << endl;
				return 0;
			}
		}
		else if(op=="end"){
			fcc /= x;
			stt.pop();
			if(stt.size())
			x = stt.top();
		}
		else {
			x = stol(op.substr(3));
			fcc *= x;
			stt.push(x);
			if (fcc >= mod) {
				cout << "OVERFLOW!!!" << endl;
				return 0;
			}
		}
	}
	cout << cur << endl;
	return 0;
}