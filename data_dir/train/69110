/*  */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const double eps = 1e-13;
const int maxn = 1005;
double dp[maxn][maxn];
const int INF = 1e4;
__int64 tot = 0;

double dfs(int w, int b) {
	if (w <= 0)
		return 0.;
	if (b <= 0)
		return 1.;
	
	if (dp[w][b] > -1.0)
		return dp[w][b];
	
	#ifndef ONLINE_JUDGE
	// if (tot >= INF)
		// return 1.0;
	// ++tot;
	// printf("%I64d: %d %d %.2lf\n", tot, w, b, dp[w][b]);
	#endif
	
	double &ret = dp[w][b];
	ret = 1.0 * w / (w+b);
	double f = 1.0 * b / (w+b);
	--b;
	
	// dragon take black
	f *= 1.0 * b / (w+b);
	--b;
	
	if (f > eps) {
		double p1 = dfs(w, b-1) * (1.0 * b / (b+w));
		double p2 = dfs(w-1, b) * (1.0 * w / (b+w));
		ret += f * (p1 + p2);
	}
	
	return ret;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	// memset(dp, 0, sizeof(dp));
	int w, b;
	
	cin >> w >> b;
	
	rep(i, 0, maxn) {
		rep(j, 0, maxn) {
			dp[i][j] = -1.0;
		}
	}
	
	double ans = dfs(w, b);
	
	printf("%.12lf\n", ans);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
