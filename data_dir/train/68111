#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n;
	cin >> n;
	vector<int> v(n);
	int s1 = 0, s2 = 0;
	for(int i = 0; i < n; i++){
		cin >> v[i];
		if(v[i] & 1)
			s1++;
		else
			s2++;
	}
	
	if(s1 != 0 && s2 != 0)
		sort(v.begin(), v.end());
	
	for(int i = 0; i < n; i++)
		cout << v[i] << " \n"[i + 1 == n];
		
	return 0;
}
