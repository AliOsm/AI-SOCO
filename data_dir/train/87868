#include<bits/stdc++.h>

using namespace std;

const int MaxN = 5e2 + 22;
const int INF = 1e9 + 7;

int n, m, k;
int dp[MaxN][MaxN];
int cnt[MaxN];
int b[MaxN][MaxN];

int main()
{
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n >> m >> k;

    for(int i = 1; i <= n; ++i)
        for(int j = 0; j <= k; ++j)
            dp[i][j] = INF;

    for(int i = 1; i <= n; ++i)
    {
        for(int j = 1; j <= m; ++j)
        {
            char q;
            cin >> q;
            b[i][j] = q - '0' + b[i][j - 1];
        }

        for(int j = 0; j <= k; ++j)
            cnt[j] = INF;

        for(int l = 1; l <= m; ++l)
            if(b[i][l] != b[i][l - 1])
                for(int r = l; r <= m; ++r)
                    if(b[i][r] != b[i][r - 1])
                    {
                        int k = b[i][m] - (b[i][r] - b[i][l - 1]);
                        cnt[k] = min(cnt[k], r - l + 1);
                    }

        cnt[b[i][m]] = 0;

        for(int p = 0; p <= k; ++p)
            for(int q = 0; q + p <= k; ++q)
                dp[i][q + p] = min(dp[i][q + p], dp[i - 1][p] + cnt[q]);
    }

    int ans = INF;
    for(int i = 0; i <= k; ++i)
        ans = min(ans, dp[n][i]);

    cout << ans << '\n';

    return 0;
}
