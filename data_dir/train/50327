//TOPIC : SPARSH TABLE AND SIMPLE DP LOGIC

#include<bits/stdc++.h>
using namespace std;

const int N = 3e5+10;
const int LOG = log2(N) + 2;

int dp[N][LOG];
vector<int> g[N];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    
    int n,q;
    cin >> n >> q;
    
    int a[n+1];
    for(int i = 1; i <= n ; i++ ) cin >> a[i];
    for(int i = 0; i < LOG; i++ )
    {
        int p = n+5;
        for(int j = n  ; j > 0 ; j-- )
        {
            if( (a[j] & (1<<i) ) > 0)
        {
               // cout << j << " " << i << endl;
               g[j].push_back(p), p = j;
            }
        }
    }for(int j = 0 ; j < LOG ; j++ ) dp[n+5][j] = n+5;
    for(int j = n ; j > 0 ; j-- )    
    {
        for(int i = 0; i < LOG; i++ )
        {
            if( (a[j] & 1<<i) > 0)
                dp[j][i] = j;
            else
            {
                dp[j][i] = n+5;
                for(auto it : g[j] )
                {
                    dp[j][i] = min(dp[j][i] , dp[it][i] );
                }
                //cout << dp[j][i] << "  "<< j << " " << i << endl;
            }
        }
    }
               
  
              
               while(q--)
               {
                   int x , y;
                   cin >> x >> y;
                   //cout << x <<" "<<y<<endl;
                   bool f = 0;
                   for(int i =0;i < LOG; i++)
                       if( (a[y] & 1<<i)>0 && dp[x][i] <= y) 
                           f = 1;
                   if(f) cout << "Shi\n";
                       else cout << "Fou\n";
               }
}