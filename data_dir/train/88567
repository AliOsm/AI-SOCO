#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define R cin>>
#define Z class
#define ll long long
#define ln cout<<'\n'
#define in(a) insert(a)
#define pb(a) push_back(a)
#define pd(a) printf("%.10f\n",a)
#define mem(a) memset(a,0,sizeof(a))
#define all(c) (c).begin(),(c).end()
#define iter(c) __typeof((c).begin())
#define rrep(i,n) for(ll i=(ll)(n)-1;i>=0;i--)
#define REP(i,m,n) for(ll i=(ll)(m);i<(ll)(n);i++)
#define rep(i,n) REP(i,0,n)
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
template<Z A>void pr(A a){cout<<a;ln;}
template<Z A,Z B>void pr(A a,B b){cout<<a<<' ';pr(b);}
template<Z A,Z B,Z C>void pr(A a,B b,C c){cout<<a<<' ';pr(b,c);}
template<Z A,Z B,Z C,Z D>void pr(A a,B b,C c,D d){cout<<a<<' ';pr(b,c,d);}
template<Z A>void PR(A a,ll n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}
ll check(ll n,ll m,ll x,ll y){return x>=0&&x<n&&y>=0&&y<m;}
const ll MAX=1e9+7,MAXL=1LL<<61,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<ll,ll> P;

void Main() {
  ll n;
  string s;
  cin >> n >> s;
  int l=-1,r=n;
  while(l+1<r) {
    ll m=(l+r)/2;
    stack<int> st;
    string t="";
    rep(i,n) {
      if(s[i]=='(') {
        if(st.size()<m) st.push(i);
        else t+=s[i];
      } else {
        if(!st.size()) t+=s[i];
        else st.pop();
      }
    }
    if(st.size()) l=m;
    else {
      bool f=1;
      rep(i,t.size()) {
        if(t[i]=='(') {
          if(st.size()>m) {
            f=0;
            break;
          }
          st.push(i);
        } else {
          if(!st.size()) {
            f=0;
            break;
          } else st.pop();
        }
      }
      if(st.size()) f=0;
      if(f) r=m;
      else l=m;
    }
  }
  string ans="";
  stack<int> st;
  set<int> se;
  rep(i,n) {
    if(s[i]=='(') {
      if(st.size()<r) st.push(i);
      else se.in(i);
    } else {
      if(!st.size()) se.in(i);
      else st.pop();
    }
  }
  rep(i,n) {
    if(se.count(i)) ans+="1";
    else ans+="0";
  }
  pr(ans);
}

int main(){ios::sync_with_stdio(0);cin.tie(0);Main();return 0;}
