/* @nazarbek.altybay */

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>

#define pii pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 2e6 + 7;

int n;
int a[1010];
int dp[1010][1010];

int main() {
  #ifdef LOCAL
    freopen("in", "r", stdin);
  #endif

  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%d", &a[i]);
  }
  for (int len = 1; len <= n; len++) {
    for (int l = 1; l <= n - len + 1; l++) {
      int r = l + len - 1;
      if (len == 1)
        dp[l][r] = 1;
      else {
        dp[l][r] = INF;
        for (int ptr = 1; l + ptr - 1 <= r - ptr + 1; ptr++) {
          if (a[l + ptr - 1] != a[r - ptr + 1])
            break;
          dp[l][r] = min(dp[l][r], max(1, dp[l + ptr][r - ptr]));
        }
        for (int mid = l; mid < r; mid++)
          dp[l][r] = min(dp[l][r], dp[l][mid] + dp[mid + 1][r]);
      }
    }
  }
  cout << dp[1][n];
  return 0;
}