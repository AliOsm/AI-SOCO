#include <iostream>
#include <cmath>
using namespace std;
int n, ASz, BSz;
bool flag = false;
int A[110];
int B[110];
int C[110];
int D[110];
int lcs[15][15];
int LCS(){
	for (int i=1; i<=13; i++){
		C[i] = D[i] = 0;
	}
	for (int i=0; i<=13; i++){
		for (int j=0; j<=13; j++){
			lcs[i][j] = 0;
		}
	}
	int ASzTemp = ASz;
	int BSzTemp = BSz;
	for (int i=1; i<=ASz; i++){
		C[i] = A[i];
	}
	for (int i=1; i<=BSz; i++){
		D[i] = B[i];
	}
	if (BSz > ASz){
		for (int i=1; i<=max(ASz, BSz); i++){
			swap(C[i], D[i]);
		}
		swap(ASzTemp, BSzTemp);
	}
	int m = ASzTemp;
	int n = BSzTemp;
	for (int j=0; j<=n; j++){
		lcs[0][j] = 0;
		lcs[1][j] = 0;
	}
	for (int i=1; i<=m; i++){
		lcs[1][0] = 0;
		for (int j=1; j<=n; j++){
			lcs[0][j] = lcs[1][j];
			if (C[i] == D[j]){
				lcs[1][j] = lcs[0][j-1] + 1;
			}
			else{
				if (lcs[0][j] >= lcs[1][j-1]){
					lcs[1][j] = lcs[0][j];
				}
				else{
					lcs[1][j] = lcs[1][j-1];
				}
			}
		}
	}
	return lcs[1][n];
}
int main(){
	cin>>n;
	int temp = n;
	int sz = 0;
	while (temp > 0){
		A[++sz] = temp % 10;
		temp = temp / 10;
	}
	ASz = sz;
	for (int i=1; i<=sz/2; i++){
		swap(A[i], A[sz-i+1]);
	}
	int ans = 1e9;
	for (int i=1; i*i<=n; i++){
		temp = i*i;
		BSz = 0;
		for (int j=1; j<=12; j++){
			B[j] = 0;
		}
		while (temp > 0){
			B[++BSz] = temp % 10;
			temp = temp / 10;
		}
		for (int j=1; j<=BSz/2; j++){
			swap(B[j], B[BSz-j+1]);
		}
		int now = LCS();
		if (now == BSz){
			flag = true;
			ans = min(ans, sz - now);
		}
	}
	if (flag == false){
		cout<<-1;
		return 0;
	}
	cout<<ans;
}