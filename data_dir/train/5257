#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 103;

int n;
LL T[N];
vector < LL > G[N];

int main()
{
    _upgrade
    cin >> n;
    for(int i = 0; i < n; i++)
    {
        cin >> T[i];
        int k = 0;
        LL tmp = T[i];
        while(tmp % 3 == 0)
            tmp /= 3, k++;
        G[k].push_back(T[i]);
    }
    for(int i = 100; i >= 0; i--)
    {
        sort(all(G[i]));
        for(auto e: G[i])
            cout << e << " ";
    }
    cout << "\n";
	return 0;
}
