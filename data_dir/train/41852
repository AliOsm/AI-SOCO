#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<li, li>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;


const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int N = 1000 + 7;

int n;
int a[N];
int b[N];


bool read(){
	if(scanf("%d", &n) != 1)
		return 0;
	forn(i, n){
		scanf("%d", &a[i]);
		--a[i];
	}
	forn(i, n){
		scanf("%d", &b[i]);
		--b[i];
	}
	return 1;
}


char used[N];


void solve(){
	memset(used, 0, sizeof(used));
	int pos = -1;
	forn(i, n)
		if (used[a[i]])
			pos = i;
		else
			used[a[i]] = 1;
	
	pt r = mp(-1, -1);
	forn(i, n)
		if (a[i] == a[pos]){
			if (r.x == -1)
				r.x = i;
			else
				r.y = i;
		}
	
	int num = -1;
	forn(j, n)
		if (!used[j]){
			num = j;
			break;
		}
	
	a[r.x] = num;
	int cnt = 0;
	forn(i, n)
		cnt += (a[i] != b[i]);
	if (cnt == 1){
		forn(i, n)
			printf("%d ", a[i] + 1);
		printf("\n");
		return;
	}
	
	swap(a[r.x], a[r.y]);
	
	cnt = 0;
	forn(i, n)
		cnt += (a[i] != b[i]);
	if (cnt == 1){
		forn(i, n)
			printf("%d ", a[i] + 1);
		printf("\n");
		return;
	}
}


int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}