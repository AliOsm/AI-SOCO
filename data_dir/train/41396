#include <bits/stdc++.h>
#define rep(i,a,b) for(int i = (a); i <= (b); i++)
#define rng(a) a.begin(), a.end()
#define ina(n,a) cin >> n; for(int i = 1; i <= n; i++) cin >> a[i]
#define sz(x) (int)(x).size()
#define se second
#define fi first
#define prev            coyhhhhhhyoc    
#define next          sdNNNmNNNNNNNmds  
#define y0           hNNNNy_yNNNNNN_sNh
#define y1          mNNNNNdtdNNNNNNtsNNm
#define yn          mNNNNNNNNy___smNNNms
#define tm            oooooosyysooooot 
#define read               tyhyt        
#define rank              ytmNmo         
#define index              yyy
#define pb push_back
#define pcnt __builtin_popcountll
#define rrep(i,a,b) for(int i = (b); i >= (a); i--)
#define rall(x,a) for(auto x : a)
#define MOD 1000000007
#define endl "\n"
#define int long long
typedef long long ll;
using namespace std;

const int N = 222222;
int x[N], ans[N], cnt[N];
vector<int> neis[N];
int n, m;

inline int getPos(int i, int j) {
    return i == j ? 1 : j + (j < i);
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin >> n;
    ina(m, x);
    rep(j, 1, m - 1) {
        ans[1] += abs(getPos(1, x[j]) - getPos(1, x[j + 1]));
        int lo = min(x[j], x[j + 1]);
        int hi = x[j] + x[j + 1] - lo;
        if(lo != hi) {
            neis[lo].pb(hi);
            neis[hi].pb(lo);
            cnt[lo + 1]++;
            cnt[hi]--;
        }
    }
    rep(i, 1, n) {
        cnt[i] += cnt[i - 1];
    }
    rep(i, 2, n) {
        ans[i] = ans[1] - cnt[i];
        rall(nei, neis[i]) {
            ans[i] -= abs(i - nei);
            ans[i] += getPos(i, nei) - 1;
        }
    }
    rep(i, 1, n) {
        cout << ans[i] << " ";
    }
    cout << endl;
    return 0;
}
