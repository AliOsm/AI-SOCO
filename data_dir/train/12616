#include <bits/stdc++.h>
using namespace std;

const int maxn = 1e5+5;

int n, x[maxn], h[maxn], dp[maxn][3];

int mmax(int a, int b, int c){
    int mx = a;
    if (b > mx) mx = b;
    if (c > mx) mx = c;
    return mx;
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; i++) cin >> x[i] >> h[i];
    x[n] = 2e9+5;

    dp[0][0] = 1;
    dp[0][1] = 0;
    if (x[1] - x[0] > h[0]) dp[0][2] = 1;
    for (int i = 1; i < n; i++){
        if (x[i] - x[i - 1] > h[i]){
            if (x[i - 1] + h[i - 1] < x[i] - h[i]) dp[i][0] = mmax(dp[i - 1][0], dp[i - 1][1], dp[i - 1][2]);
            else dp[i][0] = max(dp[i - 1][0], dp[i - 1][1]);
            dp[i][0]++;
        }

        dp[i][1] = mmax(dp[i - 1][0], dp[i - 1][1], dp[i - 1][2]);
        if (x[i] + h[i] < x[i + 1]) dp[i][2] = dp[i][1] + 1;
    }

    cout << mmax(dp[n - 1][0], dp[n - 1][1], dp[n - 1][2]) << endl;
    return 0;
}
