#include<bits/stdc++.h>
using namespace std;
int dp[2][1009][52][52];
int n , P , L , is1[1009] , is2[1009];
int main(){
    cin>>n>>P>>L;
    int oo = n / L;
    if(n % L) oo++;
    oo *= 2;
    P = min(P , oo);
    int aa; cin>>aa; while(aa--){ int x; cin>>x; is1[x] = 1;}
    cin>>aa; while(aa--){ int x; cin>>x; is2[x] = 1;}
    bool cur = 0;
    int ans = 0;
    for(int pos = n ; pos ; pos--){
        for(int rem = P ; rem >= 0 ; rem--){
            for(int l1 = 1 ; l1 <= L  ; l1++){
                for(int l2 = 1 ; l2 <= L ; l2++){
                    dp[cur][rem][l1][l2] = dp[cur^1][rem][min(L , l1+1)][min(L , l2+1)];
                    //assert(l1 <= L && l2 <= L);
                    if( (l1 != L  && is1[pos]) || (l2 != L  && is2[pos]) )
                        ++dp[cur][rem][l1][l2];
                    int theta = 0;
                    if(rem){
                        if(is1[pos])
                            theta = max(theta , dp[cur^1][rem-1][1][min(L , l2+1)] + 1);
                        if(is2[pos])
                            theta = max(theta , dp[cur^1][rem-1][min(L , l1+1)][1] + 1);
                    }
                    dp[cur][rem][l1][l2] = max(dp[cur][rem][l1][l2] , theta);
                }
            }
        }
        cur ^= 1;
    }
    cur ^= 1;
    for(int j = 0 ; j <= P ; j++) ans = max(ans , dp[cur][j][L][L]);
    cout<<ans<<endl;
}
