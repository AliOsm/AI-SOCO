// Coached by Dukkha
#include <algorithm>
#include <iostream>
#include <cstring>

using namespace std;

const int N = 5000;

char aa[N + 1], bb[N + 1];

bool pal(char *s, int n) {
	for (int i = 0, j = n - 1; i < j; i++, j--)
		if (s[i] != s[j])
			return false;
	return true;
}

int main() {
	int t; scanf("%d", &t);
	while (t--) {
		scanf("%s", aa);
		int n = strlen(aa);
		if (pal(aa, n)) {
			printf("%s\n", aa);
			continue;
		}
		int i = 0, j = n - 1;
		while (i < j && aa[i] == aa[j])
			i++, j--;
		int m = 0;
		for (int h = i; h <= j; h++)
			bb[m++] = aa[h];
		int x = m;
		while (x > 1 && !pal(bb, x))
			x--;
		int y = m;
		while (y > 1 && !pal(bb + m - y, y))
			y--;
		aa[i] = 0;
		printf("%s", aa);
		if (x >= y) {
			bb[x] = 0;
			printf("%s", bb);
		} else
			printf("%s", bb + m - y);
		printf("%s\n", aa + j + 1);
		fill_n(bb, m, 0);
	}
	return 0;
}
