#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
#define int long long
using namespace std;
signed main()
{
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);  
 #ifndef ONLINE_JUDGE
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
 #endif


// -------------------------------------Code starts here--------------------------------------------------------------------- 

    int n,k;
    cin>>n>>k;

    int a[n+1];
    for(int i=1;i<=n;i++)
        cin>>a[i];
    set<int>s;
    map<int,int>div;
    for(int i=2;i*i<=k;i++)
    {
        int cnt=0;  
        while (k%i==0)
        {
            k/=i;
            cnt++;
        }
        if(cnt>0)
        {
            div[i]=cnt;
            s.insert(i);
        }
    }    

    if(k!=1)
    {
        div[k]++;
        s.insert(k);
    }
    int sz=s.size();
    int z[sz+1]={0};
    vector<int>ss;
    int ini=0;
    for(auto i:s)
    {
        ss.push_back(i);
        z[ini++]=div[i];
    }

    int mm[n+1][sz+1]={};
    for(int i=1;i<=n;i++)
    {
        int z=a[i];
        int ind=0;
        for(auto j:s)
        {
            int cnt=0;
            while (z%j==0)
            {
                z/=j;
                cnt++;
            }
            mm[i][ind]=cnt+mm[i-1][ind];
            ind++;
        }
    }

    int res=0;
    for(int i=1;i<=n;i++)
    {
        int l=i,r=n;
        int ans=n+1;
        while (l<=r)
        {
            int mid=l+(r-l)/2;
            bool flag=true;
            for(int j=0;j<sz;j++)
            {
                if(mm[mid][j]-mm[i-1][j]<z[j])
                    flag=false;
            }
            if(flag)
            {
                ans=min(ans,mid);
                r=mid-1;
            }
            else
            {
                l=mid+1;
            }
        }
        res+=n+1-ans;
    }    
    cout<<res;

// -------------------------------------Code ends here------------------------------------------------------
     clock_t clk;
 	clk = clock();
 
     clk = clock() - clk;
 	cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
 	return 0;
 }