#include<bits/stdc++.h>

#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define PS(a) printf("%s",a)

#define S2(a,b) scanf("%d%d",&a,&b)
#define S3(a,b,c) scanf("%d%d%d",&a,&b,&c)

#define SLL(a) scanf("%lld",&a)
#define PLL(a) printf("%lld",a)
#define SLL2(a,b) scanf("%lld%lld",&a,&b)
#define SLL3(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)

#define PCASE printf("Case %d: ",kk++)
#define PCASENL printf("Case %d:\n",kk++)
#define NL puts("")

//topcoder
#define sz(a) ((int)a.size())
#define repv(i,a) for(int i=0;i<sz(a);i++)
#define revv(i,a) for(int i=sz(a)-1;i>=0;i--)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rev(i,a,b) for(int i=a;i>=b;i--)
#define countbit(x) __builtin_popcount(x)
#define SET(a) memset(a,-1,sizeof a)
#define CLR(a) memset(a,0,sizeof a)
#define all(a) a.begin(),a.end()
#define pb(a) push_back(a)


#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N) FOR(I,0,N)
#define rall(a) a.rbegin(),a.rend()
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)
#define pi (2.0*acos(0.0))
#define PI (2.0*acos(0.0))

#define set0(ar) memset(ar,0,sizeof ar)
#define setinf(ar) memset(ar,126,sizeof ar)
#define in(a,x,y) (a>=x && a<=y)
#define out(a,x,y) (!in(a,x,y))
#define eq(a,b) (fabs(a-b)<eps)
#define less(a,b) (a+eps<b)
#define great(a,b) (a>b+eps)
#define xx first
#define yy second
//#define root 1

#define MAX(a) (*max_element(all(a)))
#define MIN(a) (*min_element(all(a)))

#define LB(a,x) (lower_bound(all(a),x)-a.begin())
#define UB(a,x) (upper_bound(all(a),x)-a.begin())

using namespace std;
int ts,kk=1;

typedef long long ll;
typedef long long LL;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector< pii > vii;

template< class T > inline T _sq(T a) { return a * a; }
template< class T, class X > inline T _pow(T a,X y) {T z=1; rep(i,1,y){z*=a;} return z; }
template< class T > inline T _gcd(T a,T b) {a=_abs(a);b=_abs(b); if(!b) return a; return _gcd(b,a%b);}
template< class T > inline T _lcm(T a,T b) {a=_abs(a);b=_abs(b); return (a/_gcd(a,b))*b;}

template< class T > inline T _extended(T a,T b,T &x,T &y) {a=_abs(a);b=_abs(b); T g,x1,y1; if(!b) {x=1;y=0;g=a; return g;} g=_extended(b,a%b,x1,y1); x=y1; y=x1-(a/b)*y1; return g;}

template< class T, class X > inline bool getbit(T a, X i) { T t=1; return ((a&(t<<i))>0); }
template< class T, class X > inline T setbit(T a, X i) { T t=1;return (a|(t<<i)); }
template< class T, class X > inline T resetbit(T a, X i) { T t=1;return (a&(~(t<<i))); }
template< class T, class X > inline T togglebit(T a, X i) { T t=1;return (a^(t<<i)); }
//
template< class T,class X, class Y > inline T _bigmod(T n,X m,Y mod){ull ret=1, a = n%mod ; while(m){ if(m&1)ret=(ret*a)%mod; m>>=1; a=(a*a)%mod; }ret%=mod;return (T)ret;}
template< class T, class Y > inline T _modinv(T n,Y mod) {return _bigmod(n,mod-2,mod);}

/// //CONSTANT// ///
/// power   0123456789 ///
#define lmt 100000
#define MX (lmt + 20 )
#define ten 10000000000LL
#define MOD 100000007
#define inf 1000000000000000000LL

#define LOGMX 30
#define eps 1e-9
///===========================///

int t[5010];
double dp[5010][5010],p[5010],fail[5010];
bool vis[5010][5010];
int T , n ;

double go(int pos,int lft){

    if(lft<0 || pos > n) return 0.0;

    if(vis[pos][lft]) return dp[pos][lft];
       vis[pos][lft] = true;

    double &ret = dp[pos][lft];

                     ret = 0;
                     ret += (1.0-p[pos])*go(pos,lft-1);
    if(lft>=1)       ret += (1+go(pos+1,lft-1))*p[pos];
    if(lft>=t[pos])  ret += (1+go(pos+1,lft-t[pos]))*fail[pos];

    if(lft>=t[pos]+1)ret -= (1+go(pos+1,lft-t[pos]-1))*p[pos]*fail[pos];
    if(lft>=t[pos]+1)ret -= (1+go(pos+1,lft-t[pos]-1))*(1.00-p[pos])*fail[pos];

    return ret;
}

int main(){

    cin>>n>>T;
    for(int i=1;i<=n;i++){
        cin>>p[i]>>t[i]; p[i]/= 100.00;
        fail[i] = pow(1.00-p[i],t[i]);
    }


    CLR(vis);
    cout<<setprecision(6)<<fixed<<go(1,T)<<endl;

    return 0;
}
