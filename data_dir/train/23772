#include<bits/stdc++.h>
using namespace std;
const long long MX=(1<<17) ;
typedef long long ll;
vector < pair < int , int > > occ[MX];
int n , MAX , SZ[MX];
vector < int > fact[MX];
int hashy[100] , toto;
pair < int , int > cnt[MX];
bool canadd(int X , int Y){
    bool ok = 1;
    for(auto pp : fact[X])
        ok &= (cnt[pp].second == 0 || cnt[pp].first == (Y%pp));
    return ok;
}
void add(int X , int Y){
    for(auto pp : fact[X]){
        cnt[pp].second++;
        cnt[pp].first = Y%pp;
    }
}
void rem(int X , int Y){
    for(auto pp : fact[X])
        cnt[pp].second--;
}
int solve(vector < pair < int , int > > &v){
    for(int j=1;j<=50;j++) cnt[j].second = 0;
    int it1 = 0 , it2 = -1 , ans = 0;
    int sz = v.size();
    if(sz == 0) return 0;
    while(1){
        ans = max(ans , it2 - it1 + 1);
        if(it2 + 1 == sz) break;
        bool ok = 1;
        if(it2 >= it1)
            if(v[it2+1].first != v[it2].first + 1)
                ok = 0;
        if(ok) ok &= canadd(SZ[v[it2+1].first] , v[it2+1].second);
        if(ok){
            ++it2;
            add(SZ[v[it2].first] , v[it2].second);
            continue;
        }
        rem(SZ[v[it1].first] , v[it1].second);
        it1++;
    }
    return ans;
}
int main(){

    scanf("%d %d",&n,&MAX);
    for(int j=1;j<=40;j++){
        int x = j;
        for(int i = 1 ; i<=j;i++){
            if(x%i == 0) fact[j].push_back(i);
        }
    }
    for(int j=1;j<=n;j++){
        scanf("%d",&SZ[j]);
        for(int i=1;i<=SZ[j];i++){
            int x;
            scanf("%d",&x);
            occ[x].push_back({j , i-1});
        }
    }
    for(int j=1;j<=MAX;j++)
        printf("%d\n",solve(occ[j]));
}
