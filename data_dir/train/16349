#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <bitset>
#include <utility>
#include <assert.h>
using namespace std;
#define rank rankk
#define mp make_pair
#define pb push_back
#define xo(a,b) ((b)&1?(a):0)
#define tm tmp
//#define LL ll
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef long long ll;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;
const int INF=0x3f3f3f3f;
const ll INFF=0x3f3f3f3f3f3f3f3fll;
const int MAX=1e6+5;
//const ll MAXN=2e8;
//const int MAX_N=MAX;
const ll MOD=1e9+7;
//const long double pi=acos(-1.0);
const long double eps=1e-9;
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
template<typename T>inline T abs(T a) {return a>0?a:-a;}
template<class T> inline
void read(T& num) {
    bool start=false,neg=false;
    char c;
    num=0;
    while((c=getchar())!=EOF) {
        if(c=='-') start=neg=true;
        else if(c>='0' && c<='9') {
            start=true;
            num=num*10+c-'0';
        } else if(start) break;
    }
    if(neg) num=-num;
}
inline ll powMM(ll a,ll b,ll M){
    ll ret=1;
    a%=M;
//    b%=M;
    while (b){
        if (b&1) ret=ret*a%M;
        b>>=1;
        a=a*a%M;
    }
    return ret;
}
void open()
{
//    freopen("1009.in","r",stdin);
    freopen("out.txt","w",stdout);
}
int n;
ll lp[MAX],rp[MAX],a[MAX],num1[MAX],num2[MAX];
ll da;
int main()
{
    ios::sync_with_stdio(false);
    cin>>n;
    for(int i=1;i<=n;i++)
        cin>>a[i];
    da=a[1];
    lp[1]=0;num1[1]=a[1];
    for(int i=2;i<=n;i++)
    {
        if(a[i]>da)
        {
            da=a[i];lp[i]=lp[i-1];num1[i]=a[i];
        }
        else
        {
            num1[i]=da+1;lp[i]=lp[i-1]+num1[i]-a[i];++da;
        }
    }
    da=a[n];
    rp[n]=0;num2[n]=a[n];
    for(int i=n-1;i>=1;i--)
    {
        if(a[i]>da)
        {
            da=a[i];rp[i]=rp[i+1];num2[i]=a[i];
        }
        else
        {
            num2[i]=da+1LL;rp[i]=rp[i+1]+num2[i]-a[i];++da;
        }
    }
    ll an=INFF;
    for(int i=0;i<=n;i++)
    {
        if(num1[i]!=num2[i+1])
            an=min(an,lp[i]+rp[i+1]);
        else
            an=min(an,lp[i]+rp[i+1]+1LL);
        }

    cout<<an<<"\n";
    return 0;
}

/*
1000000000
*/
