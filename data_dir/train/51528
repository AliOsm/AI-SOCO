#include <set>
#include <map>
#include <list>
#include <cmath>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <iostream>
#include <algorithm>
#include <tuple>
#define MAXMAG 2250000000000ll
#define MAXN 111111
#define ll long long

using namespace std;


ll GetMag(pair<ll,ll> xy) {
    return xy.first*xy.first+xy.second*xy.second;
}

pair<ll,ll> Add(pair<ll,ll> p1, pair<ll,ll> p2, int sgn) {
    pair<ll,ll> ret = p1;
    ret.first += p2.first * sgn;
    ret.second += p2.second * sgn;
    return ret;
}


int ans[MAXN+2];

void Solve(const vector<pair<ll,ll>>& XY) {
    
    
    vector<pair<ll,int>> mag_id;
    int n=XY.size();
    for(int i=0;i<n;i++) {
        mag_id.push_back({-GetMag(XY[i]),i});
    }
    
    
    sort(mag_id.begin(),mag_id.end());
    
    
    pair<ll,ll> curr = {0ll,0ll};
    
    
    for(int i=0;i<n;i++) {
        ans[i]=0;
    }
    
    for(int i=0;i<n;i++) {
        
        int id = mag_id[i].second;
        
        
        pair<ll,ll> n1 = Add(curr, XY[id], -1);
        pair<ll,ll> n2 = Add(curr, XY[id], +1);
        
        
        if (GetMag(n1) < GetMag(n2)) {
            ans[id]=-1;
            curr = n1;
        } else {
            ans[id]=1;
            curr = n2;
        }
        
    }
    
    while (GetMag(curr) > MAXMAG) {
        for(int i=0;i<n;i++) {
            if (GetMag(curr) <= MAXMAG)
                break;
            pair<ll,ll> nxt = Add(curr, XY[i], -2*ans[i]);
            
            if (GetMag(nxt) < GetMag(curr)) {
                ans[i]=-ans[i];
                curr = nxt;
            }
            
        }
        
    }
    
}

vector<pair<ll,ll>> XY;


bool SolveRandom(const vector<pair<ll,ll>>& XY) {
    int n=XY.size();
    for(int iters=0;iters<10;iters++) {
        pair<ll,ll> curr = {0ll,0ll};

        for(int i=0;i<n;i++) {
            ans[i]=(rand()%2?-1:1);
            curr = Add(curr, XY[i], ans[i]);
        }
        
        if (GetMag(curr) <= MAXMAG)
            return true;
    }
    
    return false;
    
}

int main() {
    int n;
    cin>>n;
    for(int i=0;i<n;i++) {
        pair<ll,ll> xy;
        cin>>xy.first>>xy.second;
        //xy.first = rand()%2000001-1000000;
        //xy.second = rand()%2000001-1000000;
        XY.push_back(xy);
    }
    
    
    if (SolveRandom(XY)) {
        for(int i=0;i<n;i++)
            printf("%d ",ans[i]);
        cout << endl;
        return 0;
    }
    
    
    Solve(XY);
    
    for(int i=0;i<n;i++)
        printf("%d ",ans[i]);
    cout << endl;
    
    
    
}
