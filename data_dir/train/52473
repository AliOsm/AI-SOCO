#include <bits/stdc++.h>
#define MAXN ((int)1e5 + 1)
using namespace std;
int n, m;
bool vis[MAXN] = {}, hasCycle;
vector<int> edges[MAXN] = {};

void dfs(int u, int p){
    vis[u] = true;
    for(int v : edges[u]){
        if(v != p){
            if(vis[v] == true) hasCycle = true;
            else dfs(v,u);
        }
    }
}

int main(){
    cin >> n >> m;
    for(int x = 0; x < m; x++){
        int a,b; cin >> a >> b;
        edges[a].push_back(b); edges[b].push_back(a);
    }
    
    int cnt = 0;
    for(int x = 1; x <= n; x++){
        if(!vis[x]){
            hasCycle = false;
            dfs(x,-1);
            cnt += !hasCycle;
        }
    }

    cout << cnt << '\n';
}