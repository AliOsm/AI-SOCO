#include <iostream>
#include <cstdio>
#include <map>
#include <cstring>
#include <string>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <set>

using namespace std;

int n;
int a[5555];
bool W[2][100][320000];
int Q[2][100][320000];
int sz1[1000];
int sz2[1000];

int get(int l, int r, int k, int w) {    
    int L = l - sz1[k - 1];
    int R = r - sz2[k - 1];
    /*if (R < L - k - k) {
        cout << L - k - 1 - R << endl;
    }*/
    int V = L * 4 * (k + 2) + R - (L - k - k);
    /*if (V > 320000) {
        cout << V << endl;
    }*/
    /*cout << k << " " << l << " " << r << " " << V << endl;
    cout << L << " " << R << endl;*/
    if (W[w][k][V]) {
        return Q[w][k][V];
    }
    W[w][k][V] = true;    
    if (w == 0) {
        int opt = -1000000000;
        if (l + r + k > n) {
            opt = a[l] - (a[n] - a[n - r]);
        } else {
            opt = get(l + k, r, k, 1);
            if (l + r + k < n) {
                opt = max(opt, get(l + k + 1, r, k + 1, 1));
            }
        }
        Q[w][k][V] = opt;    
        return opt;
    } else {
        int opt = 1000000000;
        if (l + r + k > n) {
            opt = a[l] - (a[n] - a[n - r]);
        } else {
            opt = get(l, r + k, k, 0);
            if (l + r + k < n) {
                opt = min(opt, get(l, r + k + 1, k + 1, 0));
            }
        }
        Q[w][k][V] = opt;   
        return opt;
    }
}

int main() {
	ios_base::sync_with_stdio(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);    
	cin >> n;
    sz1[1] = 1;
    sz2[1] = 0;
    for (int k = 2; k <= 100; k++) {
        if (k % 2 == 1) {
            sz1[k] = sz1[k - 2] + k;
            sz2[k] = sz2[k - 1];
        } else {
            sz1[k] = sz1[k - 1];
            sz2[k] = sz2[k - 2] + k;
        }
    }

    /*int ans = 0;
    for (int k = 1; k <= 100; k++) {        
        int sz1 = 0;
        for (int i = 1; i <= k; i += 2) {
            sz1 += i;
        } 
        int sz2 = 0;
        for (int i = 2; i <= k; i += 2) {
            sz2 += i;
        }
        for (int i = sz1; i <= n; i++) {
            for (int j = sz2; j <= n; j++) {
                if (i + j <= n && abs(i - j) <= k + 1) {
                    ans++;
                }
            }
        }
        cout << ans << endl;
        ans = 0;
    }
    cout << ans << endl;*/
    
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        //a[i] = rand() % 10000 - 5000;
        a[i] += a[i - 1];
    }
    cout << get(0, 0, 1, 0) << endl;
	return 0;
}