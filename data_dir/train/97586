#include <bits/stdc++.h>
using namespace std;
//#define ll long long int
#define m1 make_pair
#define ll long long int

void dfs(vector<int> adj[],bool visited[],int u,int dp[])
{
    visited[u]=1;
    int mx=0;
    for(int i=0;i<adj[u].size();i++)
    if(!visited[adj[u][i]])
    {
        dfs(adj,visited,adj[u][i],dp);
        mx=max(mx,dp[adj[u][i]]);
    }
    dp[u]=mx+1;
}
struct s
{
    ll l,r;

};
bool compare1(s s1,s s2)
{
    if(s1.l>s2.l)
    return 1;
    else if(s1.l==s2.l)
    return (s1.r<=s2.r);
    else
    return 0;
}
ll gcd(ll a,ll b)
{
    if(a==0)
    return b;
    else
    return gcd(b%a,a);
}
int main()
{

int n,m,x,y;
cin>>n>>m>>x>>y;
string s[n];
for(int i=0;i<n;i++)
cin>>s[i];
pair<ll,ll> prefix[m];
for(int i=0;i<m;i++)
{prefix[i].first=0;prefix[i].second=0;}
for(int i=0;i<m;i++)
{
    for(int j=0;j<n;j++)
    {
        if(s[j][i]=='.')
        prefix[i].second++;
        else
        prefix[i].first++;
    }
}
for(int i=1;i<m;i++)
{
    prefix[i].first+=prefix[i-1].first;
    prefix[i].second+=prefix[i-1].second;
}
ll dp[2][m+1];
dp[0][0]=0;dp[1][0]=0;
for(int i=1;i<=m;i++)
{
    //dp[0][i];
    dp[0][i]=10000000000000;dp[1][i]=100000000000;
    for(int a=x;a<=min(i,y);a++)
    {
        dp[0][i]=min(dp[0][i],dp[1][i-a]+prefix[i-1].first-((a<=i-1)?prefix[i-a-1].first:0));
        dp[1][i]=min(dp[1][i],dp[0][i-a]+prefix[i-1].second-((a<=i-1)?prefix[i-a-1].second:0));
    }
}
cout<<min(dp[0][m],dp[1][m]);
    return 0;
}