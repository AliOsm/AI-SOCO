#include <iostream>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <map>
#include <set>
#include <vector>
#include <cstdio>
#include <cmath>
#include <iomanip>

using namespace std;

int k,i,q[10000],j, ost;

int dp[1000000], d[1000000];

long long ans, have, need, a, b;

int count(int x, int y)
{
    int i,j;
    
    for (i=0;i<=x;i++)
        d[i] = 1000000;
    d[x] = 0;
    /*
    999999999999999999
    1000000000000000000
    15
    */
//    cout <<x << " " << y << endl;
    for (i=x;i>0;i--)
    {
        for (j=2;j<=k;j++)
            if (d[i]+1<d[i-i%j])    d[i-i%j] = d[i]+1;
        if (d[i]+1<d[i-1]) d[i-1] = d[i]+1;
    }
    return d[y];
}

int gcd(int x, int y)
{
    while ((x>0) && (y>0))
          if (x>y) x %= y; else y %= x;
    return x+y;
}

int main()
{
    cin >> a >> b >> k;
    ost = 1;
    for (i=2;i<=k;i++)
    {
        ost = ost*i/gcd(ost,i);
    }
    
    for (i=0;i<ost;i++)    
    {
        dp[i] = 1000000;
    }
    dp[ost-1] = 0;
    for (i=ost-1;i>0;i--)
    {
        for (j=2;j<=k;j++)
            if (dp[i]+1<dp[i-i%j])
               dp[i-i%j] = dp[i]+1;
        if (dp[i]+1<dp[i-1]) dp[i-1] = dp[i]+1;
    }
    
    if (a/ost == b/ost)
    {
              cout << count(a%ost,b%ost) << endl;              
    } else
    {
          ans = count(a%ost,0);
          a = a-a%ost;
          have = a/ost - b/ost;
          ans = ans + have;
          need = dp[0];
          ans = ans + (have - 1)*need;
          ans = ans + count(ost-1,b%ost);
          cout << ans << endl;
    }
//    system("pause");
    return 0;
}
