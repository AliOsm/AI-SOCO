#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
 
//#include <random>
 
using namespace std;
 
 
double PI = 3.1415926535897932384626433832795;
double EPS = 1e-2;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
 
typedef pair<int, int> pii;
const int MAXN = 105;
const int MAXC = 1e7;
const int mod = 1e6 + 3;
const int ROOT = 555;

int n, m;
vector < vector < int > > gr; 
vector < vector < int > > gr1;

int64 ans = 0;
int temp[MAXN][MAXN];
int c, h, w;
int mat[MAXN][MAXN];
int res[MAXN][MAXN];

inline int mul(int a, int b)
{
	if (a < 0)
		a += mod;
	if (b < 0)
		b += mod;
	return (a *(int64) b) % mod;
}
 
inline int sum(int a, int b)
{
	a += b;
	if (a >= mod)
		a -= mod;
	return a;
}
 
inline int sub(int a, int b)
{
	a -= b;
	if (a < 0)
		a += mod;
	return a;
}

void pw(int c)
{
	while(c)
	{
		if (c & 1)
		{
			memset(temp, 0, sizeof temp);
			for(int i = 0; i <= w; ++i)
			{
				for(int j = 0; j <= w; ++j)
				{
					for(int k = 0; k <= w; ++k)
					{
						temp[i][j] = sum(temp[i][j], mul(res[i][k], mat[k][j]));
					}
				}
			}
			for(int i = 0; i <= w; ++i)
				for(int j = 0; j <= w; ++j)
					res[i][j] = temp[i][j];

		}
		memset(temp, 0, sizeof temp);
		for(int i = 0; i <= w; ++i)
			{
				for(int j = 0; j <= w; ++j)
				{
					for(int k = 0; k <= w; ++k)
					{
						temp[i][j] = sum(temp[i][j], mul(mat[i][k], mat[k][j]));
					}
				}
			}
		for(int i = 0; i <= w; ++i)
			for(int j = 0; j <= w; ++j)
				mat[i][j] = temp[i][j];
		c >>= 1;
	}
}

void solve()
{
	
	cin >> c >> w >> h;
	for(int i = 0; i <= w; ++i)
		res[i][i] = 1;
	for(int i = 0; i < w; ++i)
		mat[i + 1][i] = h;
	for(int i = 0; i <= w; ++i)
		mat[0][i] = 1;
	pw(c);
	int ans = 0;
	for(int i = 0; i <= w; ++i)
	{
		ans = sum(ans, res[i][0]);
	}
	cout << ans;
}
 
 
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	
	int t = 1;
	
	for(int i = 0; i < t; ++i)
	{
		solve();
		//cout << endl;
	}
	
    return 0;
}   