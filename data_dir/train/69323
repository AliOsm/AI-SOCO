# include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair < int, int > pii;

const int inf = (int)1e9 + 7;
const int N = (int)1e5 + 7;

int n;
int p[71], id[71], sz;
int a[N];
int d[(1 << 23)], nd[(1 << 23)], cnt[(1 << 23)];
int f[N], rf[N];

int bpow(int x, int y){
  if(!y){
    return 1;
  }
  int z = bpow(x, y / 2);
  z = z * 1ll * z % inf;
  if(y & 1){
    z = z * 1ll * x % inf;
  }
  return z;
}

int cnk(int n, int k){
  return (f[n] * 1ll * rf[n - k] % inf) * rf[k] % inf;
}

int main(){
  scanf("%d", &n);
  f[0] = 1;
  for(int i = 1; i <= n; ++i){
    f[i] = f[i - 1] * 1ll * i % inf;
  }
  rf[n] = bpow(f[n], inf - 2);
  for(int i = n - 1; i >= 0; --i){
    rf[i] = rf[i + 1] * 1ll * (i + 1) % inf;
  }
  for(int i = 2; i <= 70; ++i){
    int ok = 1;
    for(int j = 2; j < i; ++j){
      if(i % j == 0){
        ok = 0;
      }
    }
    if(ok){
      p[++sz] = i;
      id[i] = sz;
    }
  }
  set < int > s;
  for(int i = 1; i <= n; ++i){
    int x;
    scanf("%d", &x);
    for(int j = 1; j <= sz; ++j){
      while(x % p[j] == 0){
        a[i] ^= (1 << (j - 1));
        x /= p[j];
      }
    }
    s.insert(a[i]);
    cnt[a[i]]++;
  }
  d[0] = 1;
  for(int i : s){
    int ways = 0;
    int ways2 = 0;
    for(int j = 1; j <= cnt[i]; j += 2){
      ways = ways + cnk(cnt[i], j);
      ways %= inf;
    }
    for(int j = 0; j <= cnt[i]; j += 2){
      ways2 = ways2 + cnk(cnt[i], j);
      ways2 %= inf;
    }
    for(int j = 0; j < (1 << sz); ++j){
      (nd[j] += (d[j] * 1ll * ways % inf)) %= inf;
      (nd[j ^ i] += (d[j] * 1ll * ways % inf)) %= inf;
    }
    for(int j = 0; j < (1 << sz); ++j){
      d[j] = nd[j];
      nd[j] = 0;
    }
  }
  printf("%d\n", (d[0] - 1 + inf) % inf);
  return 0;
}
