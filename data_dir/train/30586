#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define ll long long
#define sz(s) int(s.size())
#define ull unsigned long long
#define all(s) s.begin(),s.end()

using namespace std;

const int MAXN = 2e5 + 256;
const char nxt = '\n';
inline bool Pal (const string& s) {
	return equal(s.begin(), s.end(), s.rbegin());
}
int n, t, cnt;
string s, k;
char ans[MAXN];
vector < int > pos;
char doit (char x, char y) {
	if (y < x)
		swap (x, y);
	char cur = x;
	while (cur == x || cur == y) {
		cur++;
		if (cur > 'z')
			cur = 'a';
	}
	return cur;
}
void print () {
	for (int i = 0; i < n; ++i)
		cout << ans[i];
	exit (0);
}

int main () {
	ios_base::sync_with_stdio(0);cin.tie(0);
	#ifdef accepted
		freopen (".in", "r", stdin);
		freopen (".out", "w", stdout);
	#endif
	cin >> n >> t;
	cin >> s >> k;
	int need = n - t;
	for (int i = 0; i < n; ++i) {
		if (s[i] == k[i]) {
			cnt++;
			pos.pb (i);
			//ans[i] = s[i];
		}
		//else
		ans[i] = doit (s[i], k[i]);
	}
	if (need <= cnt) {
		for (int i = 0; i < need; ++i) {
			ans[pos[i]] = s[pos[i]];
		}
		print ();
	}
	for (auto &to : pos)
		ans[to] = s[to];
	need -= cnt;
	if (!need)
		print ();
	int need2 = need;
	for (int i = 0; i < n; ++i) {
		if (s[i] == k[i])
			continue;
		if (need)
			ans[i] = s[i], need--;
		else if (need2)
			ans[i] = k[i], need2--;
	}
	if (need || need2) {
		cout << "-1";
		return 0;
	}
	print ();
	return 0;
}