#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair< ll, ll > ii;
typedef vector< ll > vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s))
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {-1,0,1,0};
int dy[] = {0,1,0,-1};
//////////////////////

const int N = 3030;

ll pd[N];
int n;
ll a[N], b[N], c[N];
ll ca[N], cb[N], cc[N];

ll getB(int l, int r) {
  if(l > r) return 0;
  return cb[r] - cb[l - 1];
}

ll getC(int l, int r) {
  if(l > r) return 0;
  return cc[r] - cc[l - 1];
}

ll func(int pos) {
  if(pos >= n + 1) return 0;
  if(pd[pos] != -1) return pd[pos];
  ll ret = func(pos + 1) + ((pos == 1) ? a[pos] : b[pos]);
  for(int i = pos + 1; i <= n; ++i) {
    ll ot = (pos == 1) ? b[pos] : c[pos];
    ll sb = getB(pos + 1, i - 1);
    ll sc = a[i];
    ret = max(ret, ot + sb + sc + func(i + 1));
  }
  return pd[pos] = ret;
}

int main() {
  scanf("%d", &n);
  for(int i = 1; i <= n; ++i) scanf("%lld", a + i), ca[i] = ca[i - 1] + a[i];
  for(int i = 1; i <= n; ++i) scanf("%lld", b + i), cb[i] = cb[i - 1] + b[i];
  for(int i = 1; i <= n; ++i) scanf("%lld", c + i), cc[i] = cc[i - 1] + c[i];
  memset(pd, -1, sizeof pd);
  printf("%lld\n", func(1));

  return 0;
}