#include<bits/stdc++.h>
using namespace std;
const int MAX=3e3+9;
int n,ans=1e9,r[MAX];
vector<pair<int,int> > g[MAX];
int dfs(int v,int p)
{
	for (auto u:g[v])
		if (u.first!=p)
			r[v]+=dfs(u.first,v)+u.second;
	return r[v];
}
int dfs2(int v,int p)
{
	int ans=r[v];
	for (auto u:g[v]) 
		if (u.first!=p)
			r[u.first]=r[v]+(u.second?-1:+1),ans=min(ans,dfs2(u.first,v));
	return ans;
}
int main()
{
	cin>>n;
	for (int i=1,v,u;i<n;i++) cin>>v>>u,v--,u--,g[v].push_back({u,0}),g[u].push_back({v,1});
	for (int i=0;i<n;i++)
		for (auto j:g[i])
			memset(r,0,sizeof r),dfs(i,j.first),dfs(j.first,i),ans=min(ans,dfs2(i,j.first)+dfs2(j.first,i));
	cout<<(ans==1e9?0:ans);
}
