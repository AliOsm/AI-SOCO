#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <cmath>
#include <memory.h>
using namespace std;
typedef long long ll;

const int N = 1111;
const int T = 111;
const int A = 4;

int mod = 1e9+9;

#define link ololink
int tn = 1, to[T][A];
int link[T], par[T], fc[T];
bool en[T];
int len[T], lln[T];

int code(int x){
    if(x=='A') return 0;
    if(x=='C') return 1;
    if(x=='G') return 2;
    if(x=='T') return 3;
    return -1;
}

void adds(char *s){
    int v = 0;
    for(int i=0;s[i];++i){
        int c = code(s[i]);
        if(!to[v][c]){
            to[v][c] = tn;
            par[tn] = v;
            fc[tn] = c;
            len[tn] = len[v] + 1;
            ++tn;
        }
        v = to[v][c];
    }
    en[v] = true;
}

int _link(int v){
    if(v==0) return -1;
    if(link[v]!=-1) return link[v];
    int x = v, p = par[v];
    p = _link(p);
    int c = fc[v];
    for(;;){
        if(p==-1){
            link[v] = 0;
            break;
        }
        if(to[p][c]){
            link[v] = to[p][c];
            break;
        }
        p = _link(p);
    }
    return link[v];
}

int _au[T][A];
int au(int v, int c){
    if(v==-1) return 0;
    if(_au[v][c]==-1) _au[v][c] = to[v][c] ? to[v][c] : au(link[v], c);
    return _au[v][c];
}

char z[111];

int dp[N][T][11];

int main(){
    //freopen("input.txt","r",stdin);// freopen("output.txt","w",stdout);
    
    int n, m;
    
    cin>>n>>m;
    for(int i=0;i<m;++i){
        cin>>z;
        adds(z);
    }
    
    memset(link, -1, sizeof link);
    memset(_au, -1, sizeof _au);
    for(int i=0;i<tn;++i) link[i] = _link(i);
    for(int i=0;i<tn;++i){
        for(int v=i;v;v=link[v]) if(en[v]){
            lln[i] = len[v];
            break;
        }
    }
    //for(int i=0;i<tn;++i) cout<<link[i]<<' '; cout<<endl;
    //for(int i=0;i<tn;++i) cout<<lln[i]<<' '; cout<<endl;
    
    dp[0][0][0] = 1;
    
    for(int l=0;l<=n;++l)
    for(int v=0;v<tn;++v)
    for(int s=0;s<11;++s) if(dp[l][v][s]){
            //cout<<l<<' '<<v<<' '<<s<<": "<<dp[l][v][s]<<endl;
            if(l==n) continue;
        for(int c=0;c<A;++c){
            int t = au(v, c);
            if(t==0) continue;
            int s2 = s+1;
            if(lln[t]>=s2) s2=0;
            //cout<<"-->"<<c<<' '<<t<<' '<<s2<<endl;
            if(s2<11){
                dp[l+1][t][s2] = (dp[l+1][t][s2]+dp[l][v][s])%mod;
            }
        }
    }
    
    int ans = 0;
    for(int i=0;i<tn;++i) 
    ans = (dp[n][i][0]+ans)%mod;
    
    
    cout<<ans<<endl;
    
    
    
    return 0;
}

