//#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 2e18 + 7;
const long long mod = 1e9 + 7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (int (i)=0; (i)<(n); ++(i))
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int n, a[500005];
int prv[500005], nxt[500005];
bool used[500005];
int q[500005], sz;

void add(int pos){
  if(used[pos]) return;
  if(a[prv[pos]] >= a[pos] && a[nxt[pos]] >= a[pos]){
    used[pos] = true;
    q[sz++] = pos;
  }
}

int main(void){
  #ifdef nobik
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
  #endif
  scanf("%d", &n);
  for(int i = 1; i <= n; ++i){
    scanf("%d", a + i);
    prv[i] = i - 1;
    nxt[i] = i + 1;
  }
  nxt[0] = 1;
  prv[n + 1] = n;
  for(int i = 1; i <= n; ++i){
    add(i);
  }
  ll res = 0;
  forn(i, sz){
    int pos = q[i];
    res += min(a[prv[pos]], a[nxt[pos]]);
    nxt[prv[pos]] = nxt[pos];
    prv[nxt[pos]] = prv[pos];
    add(prv[pos]);
    add(nxt[pos]);
  }
  int pos = nxt[0];
  while(pos != n + 1){
    res += min(a[prv[pos]], a[nxt[pos]]);
    pos = nxt[pos];
  }
  cout << res << "\n";
  return 0;
}
