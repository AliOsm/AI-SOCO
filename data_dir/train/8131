#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pb push_back
#define __   ios_base::sync_with_stdio(0);cin.tie();cout.tie();
//#define for(i,a,b) for(i=a;i<=b;i++)
#define mem(arr) memset(arr,0,sizeof(arr));

ll ar[]={0,0,1,-1};
ll br[]={1,-1,0,0};

string s[1000];
ll n,m;
ll col[500000];
ll row[500000];

int main()
{__
        ll i,j;
        cin>>n>>m;
        ll ans1,ans2,chk,r=-1,c=-1;
        for(i=0;i<n;i++){
            cin>>s[i];
        ll ans=0;
        for(j=0;j<m;j++){
            if(s[i][j]=='*') ans++;
        }
        row[i]=ans;
        if(row[i]==3) r=i;
        if(row[i]==1) ans1=i+1;
        }


        for(i=0;i<m;i++){
                ll ans=0;
            for(j=0;j<n;j++){
                if(s[j][i]=='*') ans++;
            }
            col[i]=ans;
            if(col[i]==3) c=i;
            if(col[i]==1) ans2=i+1;
        }

        if(c==-1&&r==-1){
            cout<<ans1<<" "<<ans2<<endl;
        }
        else{
            if(r==-1){
                    chk=0;
                for(i=0;i<n;i++){
                    if(s[i][c]=='*') chk=1;
            if(chk==1&&s[i][c]=='.'){
                cout<<i+1<<" "<<c+1<<endl;
                return 0;
            }
                }

                chk=0;
                    for(i=n-1;i>=0;i--){
                    if(s[i][c]=='*') chk=1;
            if(chk==1&&s[i][c]=='.'){
                cout<<i+1<<" "<<c+1<<endl;
                return 0;
            }
                }
            }



             else{
                    chk=0;
                for(i=0;i<m;i++){
                    if(s[r][i]=='*') chk=1;
            if(chk==1&&s[r][i]=='.'){
                cout<<r+1<<" "<<i+1<<endl;
                return 0;
            }
                }

                chk=0;
                    for(i=m-1;i>=0;i--){
                    if(s[r][i]=='*') chk=1;
            if(chk==1&&s[r][i]=='.'){
                cout<<r+1<<" "<<i+1<<endl;
                return 0;
            }
                }
            }
        }
}
