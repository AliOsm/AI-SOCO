#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

string str[3];
ll dp[70][4];
int arr[205];
int l1 , l2;
void make_str(ll num , int idx)
{
    int k;
    str[idx].clear();
    while(num)
    {
        k = num%2;
        num = num/2;
        char ch = k + '0';
        str[idx].push_back(ch);
    }
    reverse(str[idx].begin(),str[idx].end());

}
void func2(int n)
{
    if(n == 0)return;

    arr[n]++;
    if(n%2)func2(n-1);
    else func2(n/2);
}

ll func(int i , int k)
{
    if(i >= l1)
    {
        //cout << "hi" << endl;
        return 1LL;
    }

    if(dp[i][k] != -1)return dp[i][k];
    ll ans = 0;
    int d1 , d2;
    d1 = str[0][i]-'0';

   // cout << i << " " << k << " " << l2 << endl;

    if(i < l2)
    {

         d2 = str[1][i]-'0';
         if(d1 == d2)
         {
            ans += func(i+1,k);
         }
         else if(d1 > d2)
         {
            ans += func(i+1,0);
         }
         else
         {
            if(k == 0)
            {
                ans += func(i+1,0);
            }
            else
            {
                //cout << d1 << " " << d2 << endl;
            }
         }
    }
    else
    {

        if(k == 1)
        {
            if(d1 == 1)
            {
                ans += func(i+1,k);
                ans += func(i+1,0);
            }
            else
            {
                ans += func(i+1,k);
            }
        }
        else ans += 2LL*func(i+1,k);

    }


    return dp[i][k] = ans;
}

int main()
{


    ll n , k , lo , hi , mid , here , now , num ,ans = 0 , ext;
    scanf("%lld %lld",&n,&k);
    int dis;

    make_str(n,0);

    lo = 1;
    hi = n/2LL;
    l1 = str[0].length();
    while(lo <= hi)
    {
        mid = (lo+hi)/2;
        now = mid*2;

        make_str(now,1);
        l2 = str[1].length();
        l1 = str[0].length();
        dis = l1-l2;
        //cout << l1 << " " << l2 << " " << dis << endl;
        ext = 1LL<<dis;
        ext--;
        memset(dp,-1,sizeof(dp));
        here = func(0,1)+ext;

        //cout << func(0,1) << " " << ext << endl;

        now++;
        make_str(now,1);
        l1 = str[0].length();
        l2 = str[1].length();
        dis = l1-l2;
        ext = 1LL<<dis;
        ext--;

        memset(dp,-1,sizeof(dp));
        here += func(0,1)+ext;

        //cout << func(0,1) << " " << ext << endl;

        //cout << now-1 << " " << here << endl;

        if(here >= k)
        {
            ans = max(ans,now-1);
            lo = mid+1;
        }
        else
        {
            hi = mid-1;
        }

    }
    lo = 0;
    hi = (n-1LL)/2LL;

    while(lo <= hi)
    {
        mid = (lo+hi)/2;
        now = mid*2LL + 1LL;

        make_str(now,1);
        l2 = str[1].length();
        l1 = str[0].length();
        dis = l1-l2;
        ext = 1LL<<dis;
        ext--;

        memset(dp,-1,sizeof(dp));
        ll here = func(0,1)+ext;

       // cout << now << " " << here << endl;

        if(here >= k)
        {
            ans = max(ans,now);
            lo = mid+1;
        }
        else
        {
            hi = mid-1;
        }
    }

    printf("%lld\n",ans);

    return 0;
}
