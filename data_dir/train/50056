#include<bits/stdc++.h>
using namespace std;

char MM[1005][1005];
int book[1005][1005][4]={0};
int N,M,X,Y,x,y,ans=-1;
struct node
{
	int x,y,s,n;
};
queue<node> Q;

char change(char c)
{
	switch(c)
	{
		case '+':return '+';
		case '-':return '|';
		case '|':return '-';
		case '<':return '^';
		case '^':return '>';
		case '>':return 'v';
		case 'v':return '<';
		case 'L':return 'U';
		case 'U':return 'R';
		case 'R':return 'D';
		case 'D':return 'L';
	}
}

void L(char c,char C,node n,node tt)
{
	if((c=='+'||c=='-'||c=='<'||c=='R'||c=='U'||c=='D')&&(C=='+'||C=='-'||C=='>'||C=='L'||C=='U'||C=='D'))
	{
		if(tt.s<book[tt.x][tt.y][tt.n]||!book[tt.x][tt.y][tt.n])
		{
			book[tt.x][tt.y][tt.n]=tt.s;
			Q.push(tt);
		}
	}
}

void R(char c,char C,node n,node tt)
{
	if((c=='+'||c=='-'||c=='>'||c=='L'||c=='U'||c=='D')&&(C=='+'||C=='-'||C=='<'||C=='R'||C=='U'||C=='D'))
	{
		if(tt.s<book[tt.x][tt.y][tt.n]||!book[tt.x][tt.y][tt.n])
		{
			book[tt.x][tt.y][tt.n]=tt.s;
			Q.push(tt);
		}
	}
}

void U(char c,char C,node n,node tt)
{
	if((c=='+'||c=='|'||c=='^'||c=='L'||c=='R'||c=='D')&&(C=='+'||C=='|'||C=='v'||C=='L'||C=='R'||C=='U'))
	{
		if(tt.s<book[tt.x][tt.y][tt.n]||!book[tt.x][tt.y][tt.n])
		{
			book[tt.x][tt.y][tt.n]=tt.s;
			Q.push(tt);
		}
	}
}

void D(char c,char C,node n,node tt)
{
	if((c=='+'||c=='|'||c=='v'||c=='L'||c=='R'||c=='U')&&(C=='+'||C=='|'||C=='^'||C=='L'||C=='R'||C=='D'))
	{
		if(tt.s<book[tt.x][tt.y][tt.n]||!book[tt.x][tt.y][tt.n])
		{
			book[tt.x][tt.y][tt.n]=tt.s;
			Q.push(tt);
		}
	}
}

void bfs(node s)
{
	int i;
	char c,CU,CD,CL,CR;
	node t,tt;
	Q.push(s);
	while(!Q.empty())
	{
		t=Q.front();
		Q.pop();
		if(t.s>=ans&&ans!=-1)
		{
			continue;
		}
		if(MM[t.x][t.y]=='*')
		{
			continue;
		}
		if(t.x==X&&t.y==Y)
		{
			ans=t.s;
			continue;
		}
		if(t.s+1<book[t.x][t.y][(t.n+1)%4]||!book[t.x][t.y][(t.n+1)%4])
		{
			book[t.x][t.y][(t.n+1)%4]=t.s+1;
			tt.x=t.x,tt.y=t.y;
			tt.s=t.s+1;
			tt.n=(t.n+1)%4;
			Q.push(tt);
		}
		c=MM[t.x][t.y];
		if(t.y-1>=0)CL=MM[t.x][t.y-1];
		if(t.y+1<M)CR=MM[t.x][t.y+1];
		if(t.x+1<N)CD=MM[t.x+1][t.y];
		if(t.x-1>=0)CU=MM[t.x-1][t.y];
		for(i=0;i<t.n;i++)
		{
			c=change(c);
			CL=change(CL);
			CD=change(CD);
			CU=change(CU);
			CR=change(CR);
		}
		tt.x=t.x,tt.y=t.y-1;
		if(tt.x>=0&&tt.x<N&&tt.y>=0&&tt.y<M)
		{
			tt.n=t.n,tt.s=t.s+1;
			L(c,CL,t,tt);
		}
		tt.x=t.x,tt.y=t.y+1;
		if(tt.x>=0&&tt.x<N&&tt.y>=0&&tt.y<M)
		{
			tt.n=t.n,tt.s=t.s+1;	
			R(c,CR,t,tt);
		}
		tt.x=t.x-1,tt.y=t.y;
		if(tt.x>=0&&tt.x<N&&tt.y>=0&&tt.y<M)
		{
			tt.n=t.n,tt.s=t.s+1;
			U(c,CU,t,tt);
		}
		tt.x=t.x+1,tt.y=t.y;
		if(tt.x>=0&&tt.x<N&&tt.y>=0&&tt.y<M)
		{
			tt.n=t.n,tt.s=t.s+1;
			D(c,CD,t,tt);
		}
	}
}

int main()
{
	int i;
	memset(book,0,sizeof(book));
	memset(MM,0,sizeof(MM));
	scanf("%d%d",&N,&M);
	for(i=0;i<N;i++)
	{
		scanf("%s",MM[i]);
	}
	node S;
	scanf("%d%d",&S.x,&S.y);
	scanf("%d%d",&X,&Y);
	S.x--,S.y--,X--,Y--;
	S.s=S.n=0;
	bfs(S);
	printf("%d\n",ans);
}