#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define fs first
#define se second
#define pi 2*acos(0)
#define PI 3.14159265358979323846264338

typedef long long ll;
typedef unsigned long long ull;
typedef pair < int , int > pii;
typedef pair < ll , ll > pll;
const int N = 100010;
const int MX = 123456;
const int mod = (int)1e9 + 7;
const int base = 1023456789;
const ull BS1 = 10000019ULL;
const int INF = (1 << 29);

template < class T > inline void fastScan(T &x){
    register char c = getchar();
    int neg = 0; x = 0;
    for(   ; (c < 48 || c > 57) && (c != '-'); c = getchar());
    if(c == '-') { neg = 1; c = getchar(); }
    for(   ; c > 47 && c < 58; c = getchar()){
        x = (x << 1) + (x << 3) + c - 48;
    }
    if(neg) x = -x;
}

int fx[]={1,-1,0,0};
int fy[]={0,0,-1,1};

int arr[10][1000006];
int dp[1000006];

int go(int x){
    if(x < 10) return x;
    if(dp[x] != -1) return dp[x];
    int gun = 1;
    while(x > 0){
        int y = x % 10;
        x /= 10;
        if(y != 0) gun *= y;
    }
    return dp[x] = go(gun);
}

int main(){
    memset(dp, -1, sizeof dp);
    for(int i = 1; i < 1000006; i++){
        dp[i] = go(i);
    }
    for(int i = 1; i < 1000006; i++){
        if(dp[i] < 10){
            arr[dp[i]][i] = 1;
        }
    }
    for(int i = 1; i <= 9; i++){
        for(int j = 1; j < 1000005; j++){
            arr[i][j] += arr[i][j - 1];
        }
    }
    int q; fastScan(q);
    while(q--){
        int l, r, k;
        fastScan(l); fastScan(r); fastScan(k);
        printf("%d\n", arr[k][r] - arr[k][l - 1]);
    }
    return 0;
}
