#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class NotebookInfo
{
public:
  int num;
  int hdd;
  int ram;
  int speed;
  int cost;
  bool operator< (NotebookInfo& other)
  {
    return (speed < other.speed && ram < other.ram && hdd < other.hdd);
  }
  NotebookInfo(int num, int speed, int ram, int hdd, int cost)
    :num(num), speed(speed), ram(ram), hdd(hdd), cost(cost)
  { }
};

bool compare (NotebookInfo& a, NotebookInfo& b) 
{
  return a.cost < b.cost;
}

int main()
{
#ifndef ONLINE_JUDGE
  freopen("input.txt", "rt", stdin);
  freopen("output.txt", "wt", stdout);
#endif

  int n;
  cin >> n;

  vector<NotebookInfo> notebooks;
  for(int i = 0; i < n; i++)
  {
    int speed, ram, hdd, cost;
    cin >> speed >> ram >> hdd >> cost;
    notebooks.push_back(NotebookInfo(i + 1, speed, ram, hdd, cost));
  }

  sort(notebooks.begin(), notebooks.end(), compare);

  int i;
  for(i = 0; i < n; i++)
  {
    bool deprecated = false;
    for(int j = 0; j < n && !deprecated; j++)
    {
      if(j != i && notebooks[i] < notebooks[j])
        deprecated = true;
    }
    if(!deprecated)
      break;
  }
  cout << notebooks[i].num;
  
  return 0;
}