#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <bitset>
#include <algorithm>
#include <complex>
using namespace std;
 
#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) (c).begin(), (c).end()
 
typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;

int in() { int x; scanf("%d", &x); return x; }
ll lin() { ll x; scanf("%lld", &x); return x; }

int main() {
    int n;
    string s;
    cin >> n >> s;

    string rgb = "RGB";

    VVI dp(n, VI(3, 1e9)), back(n, VI(3));
    REP(j,3) dp[0][j] = (s[0] != rgb[j]);

    REP(i,n-1) REP(j,3) REP(k,3){
        if (j == k) continue;
        int tmp = dp[i][j] + (s[i + 1] != rgb[k]);
        if (dp[i + 1][k] > tmp){
            dp[i + 1][k] = tmp;
            back[i + 1][k] = j;
        }
    }

    int mn = 1e9, x;
    string ans;
    REP(j,3){
        if (dp[n - 1][j] < mn){
            mn = dp[n - 1][j];
            x = j;
        }
    }

    FORR(i,n-1,0){
        ans = rgb[x] + ans;
        x = back[i][x];
    }

    cout << mn << endl << ans << endl;

    return 0;
}
