#include<bits/stdc++.h>

#define x first
#define y second
#define pb push_back
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define all(v) v.begin(),v.end()
#define boost ios_base::sync_with_stdio(0),cin.tie(0),cout.tie()

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;

const ll INF = 1e18;
const int inf = INT_MAX;
const ll mod = 1e9 + 7;
const int pi = acos(-1);
const int dx[4] = {0, 0, 1, -1};
const int dy[4] = {1, -1, 0, 0};
const char dir[4] = {'R', 'L', 'D', 'U'};
const int N = 1e5 + 5;

map < pii, int > used, g;
map < pii, char> ch;

int main(){
	string s;
	cin >> s;
	int a = 1, b = 1;
	for(int i = 0; i < sz(s); i++){
		if(s[i] == 'R')b++;
		if(s[i] == 'L')b--;
		if(s[i] == 'U')a--;
		if(s[i] == 'D')a++;
		used[mp(a, b)] = 1;
	}
	int c = a, d = b;
	a = 1, b = 1;
	queue < pii > q;
	q.push(mp(a, b));
	
	while(!q.empty()){
		int x = q.front().first, y = q.front().second;
		q.pop();
		for(int i = 0; i < 4; i++){
			int nx = x + dx[i];
			int ny = y + dy[i];
			if(!used[mp(nx, ny)] || g[mp(nx, ny)] )continue;
			q.push(mp(nx, ny));
			g[mp(nx, ny)] = g[mp(x, y)] + 1;
		} 
	}
	if(g[mp(c, d)] == sz(s))cout << "OK";
	else cout << "BUG";
}
