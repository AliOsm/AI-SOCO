#include <algorithm>
#include <iostream>
#include <cmath>
#include <fstream>
#include <vector>
#include <iomanip>
#include <string>
#include <queue>
#include <cstring>
#include <map>
#include <stack>
#include <set>
#include <memory.h>

using namespace std;

typedef long long ll;
typedef long double ld;

template <typename T>
T gcd(T a, T b) {
    while (a > 0 && b > 0) {
        if (a > b) a %= b; else b %= a;
    }
    return (a + b);
}

template <typename T>
T lcm(T a, T b) {
    return a / gcd(a, b) * b;
}

template <typename T>
bool prime(T n) {
    if (n <= 1) {
        return false;
    }
    T i = 2;
    while (i * i <= n) {
        if (n % i == 0) {
            return false;
        }
        ++i;
    }
    return true;
}

map<ll, ll> mp;

ll get(ll n) {
    if (mp.count(n)) {
        return mp[n];
    }
    if (n == 1) {
        mp[n] = 1;
        return 1;
    }
    mp[n] = get(n / 2) * 2 + 1;
    return mp[n];
}

ll getValue(ll n, ll index) {
    ll curCount = get(n);
    ll le = curCount / 2, ri = curCount / 2, mi = 1;
    if (index <= le) {
        return getValue(n / 2, index);
    }
    if (index == le + 1) {
        return n % 2;
    }
    index -= le + 1;
    return getValue(n / 2, index);
}

void solveTask() {
    ll n, l, r;
    cin >> n >> l >> r;
    ll curCount = get(n);
    int ans = 0;
    for (ll i = l; i <= r; ++i) {
        if (getValue(n, i) == 1) {
            ++ans;
        }
    }
    cout << ans << endl;
}

int main() {
#ifndef ONLINE_JUDGE  
    freopen("input.txt", "r", stdin);
#else
    // online submission
#endif    
    ios_base::sync_with_stdio(false);
    solveTask();
    return 0;
}