#include <bits/stdc++.h>
using namespace std;
#define sc(x)            scanf("%d",&x)
#define scc(x)           scanf("%c",&x)
#define scl(x)           scanf("%lld",&x)
#define sz(v)	     	(v.size())
#define mem(v, d)		memset(v, d, sizeof(v))
#define oo				2000000100
#define OO				4000000000000000100
#define PI 3.14159265
#define S second
#define F first
typedef unsigned int uint;
typedef long long ll;
//-----------------------------------------------------
//int GCD(ll num,ll ones) { return !ones ? num : GCD(ones,num%ones); }
//ll lcm(ll a, ll b) { return (a / GCD(a, b)) * b; }
//double Len(ll x,ll y,ll X,ll Y) { return sqrt((X-x)*(X-x)+(Y-y)*(Y-y)); }
/*ll fastP(ll b,ll p)
{
    if(p==0) return 1;
    else if(p==1) return b;
    ll a = fastP(b,p/2)%MOD;
    if(p%2) return (((a*a)%MOD)*b)%MOD;
    else return (a*a)%MOD;
}*/
//-----------------------------------
int dX[] = {0,0,1,-1};
int dY[] = {1,-1,0,0};
const int N = 20100;
const ll MOD = 998244353;
const double EBS = 1e-7;

int main()
{
    int x = 1;
    vector<int>pw;
    for(int i = 1;i<=26;++i) pw.push_back(x),x<<=1;
    int q; sc(q);
    while(q--)
    {
        sc(x);
        int ret = *lower_bound(pw.begin(),pw.end(),x);
        if(x+1 == ret)
        {
            int out = 1;
            for(int i = 2;i*i<=x;++i)
                if(x%i==0) out = max(out,__gcd(i,x^i)),out = max(out,__gcd(x/i,x^(x/i)));
            printf("%d\n",out);

        }
        else printf("%d\n",*lower_bound(pw.begin(),pw.end(),x+1)-1);
    }






    return 0;
}
