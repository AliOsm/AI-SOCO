#include <bits/stdc++.h>
#include <ctime>

using namespace std;

#define space ' '
#define enter "\n"
#define fi first
#define se second
#define mp make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef set <int> si;
typedef map <int, int> mii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;
typedef vector <pii> vii;

template <typename T>
T sqr (T x) {
	return x * x;
}

template <typename T>
T gcd (T a, T b) {
	return b ? gcd(b, a % b) : a;
}

template <class T>
T chmin (T & x, const T & y) {
	if (y < x)
		return x = y;
	return x;
}

template <class T>
T chmax (T & x, const T & y) {
	if (x < y)
		return x = y;
	return x;
}


template <class P, class Q>
ostream & operator << (ostream & os, const pair <P, Q> & p) {
	return os << '(' << p.fi << ", " << p.se << ')';
}


template <class T>
ostream & operator << (ostream & os, const vector <T> & v) {
	os << '{';
	bool was = false;
	for (const T & x : v) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << '}';
	return os;
}

template <class T>
ostream & operator << (ostream & os, const set <T> & v) {
	os << '[';
	bool was = false;
	for (const T & x : v) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << ']';
	return os;
}

template <class P, class Q>
ostream & operator << (ostream & os, const map <P, Q> & m) {
	os << '<';
	bool was = false;
	for (const auto & x : m) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << '>';
	return os;
}

const ll INF = (int) 2e9;

const int MAXN = (int) 2e5 + 10;

int n;
int c[MAXN], d[MAXN];
bool ex = false;

int f (int start) {
	for (int i = 1; i <= n; i++) {
		if (start >= 1900 && d[i] == 2)
			return 1;
		if (start < 1900 && d[i] == 1)
			return -1;
		start += c[i];
	}
	return 0;
}

int main () {
	ios_base::sync_with_stdio(false);
	cin >> n;
	int dif = 0;
	for (int i = 1; i <= n; i++) {
		cin >> c[i] >> d[i];
		dif += c[i];
		if (d[i] == 2)
			ex = true;
	}
	if (!ex) {
		cout << "Infinity";
		return 0;
	}
	int l = -1e8, r = 1e8;
	while (r - l > 1) {
		int md = (l + r) >> 1;
		if (f(md) <= 0)
			l = md;
		else
			r = md;
	}
	if (f(l) == 0) {
		cout << l + dif;
	}
	else
		cout << "Impossible";
}
