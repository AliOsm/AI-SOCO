// In the name of Allah.
// We're nothing and you're everything.
// Ya Ali!
 
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_pbds;
tree<int, null_type, less<int>, rb_tree_tag,tree_order_statistics_node_update> os;
typedef long long ll;

const int maxn = 2e5 + 14;
int n, p[maxn], where[maxn];

auto cp = os.begin();
int cl, cr;
ll sl, sr;
ll ans(){
	return sl + sr - cl * ll(cl + 1) / 2 - cr * ll(cr + 1) / 2;
}
void add(int x){
	int i = where[x];
	if(i < *cp)
		cl++, sl += *cp - i;
	else
		cr++, sr += i - *cp;
}
int main(){
	ios::sync_with_stdio(0), cin.tie(0);
	cin >> n;
	for(int i = 0; i < n; i++){
		cin >> p[i];
		p[i]--;
		where[ p[i] ] = i;
	}
	ll per = 0;
	os.insert(where[0]);
	cp = os.begin();
	cout << "0\n";
	for(int x = 1; x < n; x++){
			per += os.size() - os.order_of_key(where[x]);
			os.insert(where[x]);
			add(x);
			// cerr << *cp << ' ' << sl << ' ' << sr << ' ' << cl << ' ' << cr << " = " << ans() << '\n';
			if(cl < cr - 1){
				cl++;
				sl += cl * ll(*next(cp) - *cp);
				sr -= cr * ll(*next(cp) - *cp);
				cr--;
				cp++;
			}
			else if(cr < cl){
				cr++;
				sr += cr * ll(*cp - *prev(cp));
				cerr << cr * ll(*cp - *prev(cp)) << '\n';
				sl -= cl * ll(*cp - *prev(cp));
				cl--;
				cp--;
			}
			// cerr << *cp << ' ' << sl << ' ' << sr << ' ' << cl << ' ' << cr << " = " << ans() << '\n';
			cout << ans() + per << '\n';
	}
	cout << '\n';
}
