#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 1e2+10 , mod = 1e9+7;

ll dp[N][N][N][2];
int a[N];
vector <int> can[N][N][2];
string s;
int n;

void calc(int l , int r , int t , int tp){
   ll ret = -1;
   if(r == l){
      if(t == 0){
         ret = a[1];
      }
      else if(tp + '0' == s[l] && t == 1){
         ret = 0;
      }
      dp[l][r][t][tp] = ret;
      if(ret != -1)
         can[l][r][tp].push_back(t);
      return;
   }
   for(int i = l ; i < r ; i++){
      for(int x : can[l][i][tp]){
         if(x > t)
            continue;
         if(dp[i + 1][r][t - x][tp] >= 0)
            ret = max(ret , dp[i + 1][r][t - x][tp] + dp[l][i][x][tp]);
      }
   }
   dp[l][r][t][tp] = max(dp[l][r][t][tp] , ret);
   if(dp[l][r][t][tp] != -1){
      can[l][r][tp].push_back(t);
      dp[l][r][0][1 - tp] = max(dp[l][r][0][1 - tp] , ret + a[t]);
   }
}

int main(){
   ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
   cin >> n;
   cin >> s;
   memset(dp , -1 , sizeof(dp));
   for(int i = 1 ; i <= n ; i++)
      cin >> a[i];
   ll ans = 0;
   for(int l = 1 ; l <= n ; l++){
      for(int i = 0 ; i + l <= n ; i++){
         int j = i + l - 1;
         for(int k = l ; k >= 0 ; k--){
            for(int tp = 0 ; tp < 2 ; tp++){
               calc(i , j , k , tp);
               //if(dp[i][j][k][tp] != -1)
                  //cout << i << " " << j << " " << k << " " << tp << " " << dp[i][j][k][tp] << endl;
               if(l == n && dp[i][j][k][tp] != -1)
                  ans = max(ans , dp[i][j][k][tp] + a[k]);
            }
         }
      }
   }
   cout << ans;
   return 0;
}
