#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
typedef long long int64;
const int inf=0x7FFFFFFF;
#define show(x) cout << x << endl
#define rep(i,n) for(int i=0;i<n;i++)
#define mset(a,i) memset(a,i,sizeof(a))
#define PB(i) push_back(i)

using namespace std;
#define MAX_N 100010
int a[MAX_N];
int64 l[MAX_N], r[MAX_N], odd[MAX_N];
int main() {
	int N;
	scanf("%d", &N);
	for(int i = 2; i <= N; i ++)
		scanf("%d", a + i);
	l[1] = 0;
	for(int i = 2; i <= N; i ++) 
		if(a[i] < 2)
			l[i] = 0;
		else
			l[i] = l[i - 1] + a[i] / 2 * 2;
	r[N] = 0;
	for(int i = N - 1; i; i --)
		if(a[i + 1] < 2)
			r[i] = 0;
		else
			r[i] = r[i + 1] + a[i + 1] / 2 * 2;
	odd[1] = 0;
	for(int i = 2; i <= N; i ++) {
		odd[i] = odd[i - 1] + a[i];
		if(a[i] % 2 == 0)
			odd[i] --;
	}
	int64 best = -1e16, ans = 0;
	for(int j = 1; j <= N; j ++) {
		if(l[j] - odd[j] > best) {
			best = l[j] - odd[j];
		}
		ans = max(ans, best + r[j] + odd[j]);
	}
	cout << ans << endl;
	return 0;
}

