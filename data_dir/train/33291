#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>
#include <time.h>
#include <assert.h>
#include <map>
#include <set>
#include <vector>
#include <functional>
#include <algorithm>
#include <stack>
#include <list>
#include <queue>
#include <bitset>
#include <limits>
#include <numeric>
using namespace std;
#define sz(x) ((int)(x).size())

char a[205];

int main() {
  int k;
  scanf("%s", a);
  scanf("%d", &k);
  int n = strlen(a);
  int latins = 0;
  for (int i = 0; i < n; i++) {
    if (a[i] != '*' && a[i] != '?') latins++;
  }
  if (latins == k) {
    for (int i = 0; i < n; i++) {
      if (a[i] != '*' && a[i] != '?') printf("%c", a[i]);
    }
  } else if (latins > k) {
    int need_remove = latins - k;
    for (int i = 0; i < n; i++) {
      if (need_remove > 0) {
        if (a[i] == '*' || a[i] == '?') {
          a[i - 1] = '*';
          need_remove--;
        }
      }
    }
    if (need_remove == 0) {
      for (int i = 0; i < n; i++) {
        if (a[i] != '*' && a[i] != '?') printf("%c", a[i]);
      }
    } else {
      printf("Impossible");
    }
  } else {
    int ada_bintang = 0;
    for (int i = 0; i < n; i++) {
      if (a[i] == '*') {
        ada_bintang = 1;
      }
    }
    if (ada_bintang) {
      int udah = 0;
      for (int i = 0; i < n; i++) {
        if (a[i] != '*' && a[i] != '?') printf("%c", a[i]);
        if (a[i] == '*' && udah == 0) {
          for (int j = 0; j < k - latins; j++) printf("%c", a[i - 1]);
          udah = 1;
        }
      }
    } else {
      printf("Impossible");
    }
  }
  printf("\n");
  return 0;
}