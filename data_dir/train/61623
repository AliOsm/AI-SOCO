#include <bits/stdc++.h>
     
using namespace std;
typedef long long ll;
typedef vector<ll> vl ;
typedef pair<ll,ll> pl;
     
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()
#define max(a,b) (a>b ? a : b)
#define min(a,b) (a<b ? a : b)
#define FAST ios::sync_with_stdio(0), cin.tie(0),cout.tie(0)
     
const int MOD = 7+(ll)1e9;
const int N = 1000105;
const double PI =4*atan(1);
const double eps = 1e-7;
const long long oo = 1e10;
const int MAXN = 100500;

ll mul(ll u , ll v, ll mod){
    return ((u%mod)*(v%mod))%mod;
}
void add(ll & u, ll & v, ll mod){
    u+=v;
    if(u>=mod)u-=mod;
}

ll sub(ll u, ll v , ll mod){
    return ((u%mod)-(v%mod)+mod)%mod;
}

ll r,g;
ll x,y,tot;
ll dp[2][200020];
int pos;

int main(){
    FAST;
    //freopen("easy.txt","r",stdin);
    cin >> r >> g;
    tot=r+g;
    x = 1;
    while(1){
        y=x+1;
        if(y*(y+1)/2>tot){
            break;
        }
        x=y;
    }
    ll z = r+g-x*(x+1)/2;
    ll ans=0;
    r=min(r,g);
    dp[0][0]=1;
    for(int i=1;i<=x;i++){
        pos = i&1;
        for(int j=0;j<=r;j++){
            dp[pos][j]=dp[1-pos][j];
            if(j>=i)
            add(dp[pos][j],dp[pos^1][j-i],MOD);
        }
    }
    for(int i=0;i<=z;i++){
        if(r>=i)
        add(ans,dp[x&1][r-i],MOD);
    }
    cout << ans;
    return 0;
}