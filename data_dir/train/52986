/**
 *    author:  skmonir
 *    created: 13-May-2018 17:14:39
**/

#include <bits/stdc++.h>

using namespace std;

#define endl                '\n'
#define TN                  typename
#define mod                 1000000007LL
#define all(x)              x.begin(), x.end()
#define rall(x)             x.rbegin(), x.rend()
#define mem(x, y)           memset(x, y, sizeof x)
#define FOR(x, l, r)        for (int x = l; x <= r; ++x)
#define ROF(x, l, r)        for (int x = l; x >= r; --x)

template <TN T> inline void Int(T &n) {
    n = 0; int f = 1; register int ch = getchar();
    for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;
    for (; isdigit(ch); ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';
    n = n * f;
}

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void umax(T &a, T b) {a = a > b ? a : b;}
template <TN T, TN W> inline void Int(T &x, W &y) {Int(x), Int(y);}
template <TN T, TN W, TN Q> inline void Int(T &x, W &y, Q &z) {Int(x, y), Int(z);}

const int N = 1e5 + 7;
const int inf = 1e9 + 7;

int a[N], b[N], s[] = {1, 0, -1};

int solve() {
    int n; Int(n);
    FOR (i, 1, n) Int(a[i]);

    if (n == 1 or n == 2) return printf("0\n");

    int res = inf;
    FOR (i, 0, 2) FOR (j, 0, 2) {
        FOR (k, 1, n) b[k] = a[k];

        b[1] += s[i], b[2] += s[j];
        int tmp = abs(s[i]) + abs(s[j]), foo = 1, diff = b[2] - b[1];

        FOR (k, 3, n) {
            int need = b[k - 1] + diff - b[k];
            if (abs(need) > 1) foo = 0;
            tmp += abs(need);
            b[k] = b[k - 1] + diff;
        }
        if (foo) umin(res, tmp);
    }

    printf("%d\n", res == inf ? -1 : res);

    return 0;
}

int main() {
    int tests = 1, CaseNo = 0; //Int(tests);
    while (tests--) {
        //printf("Case %d: ", ++CaseNo);
        solve();
    }
    return 0;
}