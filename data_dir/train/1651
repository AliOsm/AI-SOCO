// O O O O O O O O O O O O O O O OO O OO O OO O O O TTCH O TTTCH O TTTCH O O O O
#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx")
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stdio.h>
#include <cstdio>
#include <math.h>
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
#include <deque>
// #include <random>
#include <iomanip>
#include <bitset>
#include <cassert>
 
using namespace std;

#define int long long
#define y1 y11
#define left left228
#define right right228
#define list list228
#define all(v) v.begin(), v.end()
#define tm tm228
 
 
 
template<typename T> void uin(T &a, T b) {
    if (b < a) a = b;
}
template<typename T> void uax(T &a, T b) {
    if (b > a) a = b;
}

int d[1000], h[1000];

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin >> t;
    while(t--) {
        int n, x;
        cin >> n >> x;
        int md = 0;
        int dd = 0;
        for (int i = 1; i <= n; ++i) {
            cin >> d[i] >> h[i];
            uax(md, d[i] - h[i]);
            uax(dd, d[i]);
        }
        if (md == 0 && x > dd) {
            cout << -1 << '\n';
            continue;
        }
        if (x <= dd) cout << 1 << '\n';
        else cout << max(1LL, 1 + (x - dd + md - 1) / md) << '\n';
    }
    return 0;
}
// RU_023
 
/*


5 3
2 1 2
3 0 2 3
3 0 1 4
2 1 4
2 2 3

5 3
3 1 2 4
1 0
1 0
0
1 0


*/