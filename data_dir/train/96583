using namespace std;
#include <bits/stdc++.h>
typedef unsigned long long ll;
#define pll pair <ll,ll>
#define pii pair <ll,ll>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define MASK(i) ((1LL)<<(i))
#define BIT(x,i) (((x)>>(i))&1)
#define all(c) (c).begin(),(c).end()
#define sz(c) (c).size()
#define fn "test"    ///FILE_NAME_HERE
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define rrep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();++it)

template <class T,class U>
void maximize(T &x,U y)
{
    if(x < y)x=y;
}
template <class T,class U>
void minimize(T &x,U y)
{
    if(x > y)x=y;
}
template <class T>
T Abs(T x)
{
    return (x < (T)0 ? -x : x);
}
template <class T,class U,class V>
T addmod(T x,U y,V mod)
{
    return ((x + y)%mod + mod)%mod;
}
template <class T,class U,class V>
T submod(T x,U y,V mod)
{
    return ((x - y)%mod + mod)%mod;
}
template <class T,class U,class V>
T mulmod(T x,U y,V mod)
{
    return (ll)x*y%mod;
}
///---------------------------------------------------------END_TEMPLATE-------------------------------------------------------///

namespace task{

const int N=1e3+33;
const int tx[]={0,-1,0,1};
const int ty[]={-1,0,1,0};
char a[N][N];
bool vis[N][N],ok[N][N][4];
int index[N][N],cnt[N*N];
int n,m,qu,com_idx=0;

bool insize(int u,int v)
{
    return 1 <= u and u <= n and 1 <= v and v <= m;
}

queue <pii> q;
void bfs(int u,int v)
{
    vis[u][v]=true;
    q.push(mp(u,v));
    for(;sz(q);q.pop())
    {
        pii top = q.front();
        u=top.fir,v=top.sec;
        index[u][v] = com_idx;
        for(int i=0;i < 4;++i)
        {
            int ux = u + tx[i];
            int vy = v + ty[i];
            if(!insize(ux,vy))continue;
            if(a[ux][vy] == '.')
            {
                if(!vis[ux][vy])
                  vis[ux][vy] = true,q.push(mp(ux,vy));
            }
            else cnt[com_idx]++;
        }
    }
}

void solve()
{
    cin>>n>>m>>qu;
    for(int i=1;i<=n;++i)
        for(int j=1;j<=m;++j)
          cin>>a[i][j];
    for(int i=1;i<=n;++i)
        for(int j=1;j<=m;++j)
          if(a[i][j] == '.' and !vis[i][j])
            ++com_idx,bfs(i,j);
    while(qu--)
    {
        int u,v;
        cin>>u>>v;
        cout<<cnt[index[u][v]]<<'\n';
    }
}}

int main(void)
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    #ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
    #endif // ONLINE_JUDGE
    task::solve();
}
