#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)

int const N = 1000;
int n, m, pa[N * N];
char g[N][N + 1];

int P(int v) { return pa[v] == -1 ? v : pa[v] = P(pa[v]); }
void no() { printf("-1\n"); exit(0); }
void J(int a, int b){
	a = P(a), b = P(b);
	if (a != b)pa[b] = a;
}

int main(){
	scanf("%d%d", &n, &m);
	f(i, 0, n)scanf("%s", g[i]);
	f(i, 0, n){
		int a = 0, b = m - 1;
		while (a < m && g[i][a] == '.')++a;
		while (b >= 0 && g[i][b] == '.')--b;
		if (a == m)continue;
		f(j, a + 1, b)if (g[i][j] == '.')no();
	}
	f(j, 0, m){
		int a = 0, b = n - 1;
		while (a < n && g[a][j] == '.')++a;
		while (b >= 0 && g[b][j] == '.')--b;
		if (a == n)continue;
		f(i, a + 1, b)if (g[i][j] == '.')no();
	}
	
	bool emi = false, emj = false;
	f(i, 0, n){
		bool em = true;
		f(j, 0, m)if (g[i][j] == '#')em = false;
		if (em)emi = true;
	}
	f(j, 0, m){
		bool em = true;
		f(i, 0, n)if (g[i][j] == '#')em = false;
		if (em)emj = true;
	}
	if (emi ^ emj)no();
	
	int nm = n * m;
	f(i, 0, nm)pa[i] = -1;
	f(i, 0, n)f(j, 1, m)if (g[i][j] == g[i][j - 1] && g[i][j] == '#')J(i * m + j, i * m + j - 1);
	f(i, 1, n)f(j, 0, m)if (g[i][j] == g[i - 1][j] && g[i][j] == '#')J(i * m + j, (i - 1) * m + j);
	set<int> st;
	f(i, 0, n)f(j, 0, m)if (g[i][j] == '#')st.insert(P(i * m + j));
	printf("%d\n", (int)st.size());
}