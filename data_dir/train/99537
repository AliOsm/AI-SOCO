/* Author: Dhruv Rastogi */
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second
const long double PI = acos(-1.0);

void solve(){  
	int a,b;
	cin>>a>>b;
	string s;
	cin>>s;
	s+='X';
	vll v;
	int rl=0;
	rep(i,0,sz(s)){
		if(s[i]=='X'){
			if(rl!=0){
				v.pb(rl);
				rl=0;
			}
		}
		else ++rl;
	}			  
	rep(i,0,sz(v)){
		if(v[i]>=b and v[i]<a){
			cout<<"NO"<<endl;
			return;
		}
	}
	vll useful;
	multiset<int> ms;
	rep(i,0,sz(v)){
		if(v[i]>=a){
			useful.pb(v[i]);
			ms.insert(v[i]);
		}
	}
	rep(i,0,sz(useful)){
		rep(j,0,useful[i]-a+1){
			int c1=j;
			int c2=useful[i]-(j+a);
			ms.erase(ms.find(useful[i]));
			int f=1;
			if((c1>=b and c1<a) or (c2>=b and c2<a)) f=0;
			if(c1>=a){
				ms.insert(c1);
			}
			if(c2>=a){
				ms.insert(c2);
			}
			if(sz(ms) and *ms.rbegin()>=2*b) f=0;
			if(sz(ms)%2) f=0;
			if(f){
				cout<<"YES"<<endl;
				return;
			}

			if(ms.find(c1)!=ms.end()){
				ms.erase(ms.find(c1));
			}
			if(ms.find(c2)!=ms.end()){
				ms.erase(ms.find(c2));
			}
			ms.insert(useful[i]);
		}
	}
	cout<<"NO"<<endl;
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}