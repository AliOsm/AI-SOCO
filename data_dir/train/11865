#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>
#include<cassert>
#include<iomanip>
#include<limits>

using namespace std;

#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
typedef vector<int> vi;
long long mod = 1000000007LL;
long long large = 2000000000000000000LL;



int main(){


	int n,l,r;
	cin>>n>>l>>r;
	vector<int> a(n,0);
	for(int i=0;i<n;i++) scanf("%d",&a[i]);
	vector<int> b(n,0);
	for(int i=0;i<n;i++) cin>>b[i];
	vector<int> c,d;
	for(int i=0;i<n;i++){
		if(b[i]) c.push_back(a[i]);
		else d.push_back(a[i]);
	}
	sort(c.begin(),c.end());
	if((int)c.size()==0){
		cout<<0<<endl;
		return 0;
	}
	int sum = 0;
	for(int i=0;i<n;i++) sum+=a[i];
	reverse(c.begin(),c.end());
	int m = (int)c.size();
	for(int i=0;i<(int)c.size();i++) d.push_back(c[i]);
	vector<int> dp(10001,-2100000000);
	dp[0] = 0;
	for(int j=0;j<n;j++){
		for(int i=10000;i>=0;i--){
			if(i+d[j]<=10000) dp[i+d[j]] = max(dp[i+d[j]],dp[i]+(j>=n-m)*(i+d[j]>=sum-r&&i+d[j]<=sum-l));
		}
	}
	int ans = 0;

	for(int i=max(sum-r,0);i<=min(sum-l,10000);i++) ans = max(ans,dp[i]);
	cout<<ans<<endl;


    return 0;
}