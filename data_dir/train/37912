#include<bits/stdc++.h>
#define LL long long
#define fi first
#define se second
#define mk make_pair
#define PII pair<int, int>
#define PLI pair<LL, int>
#define ull unsigned long long
using namespace std;

const int N = 4e5 + 7;
const int inf = 0x3f3f3f3f;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1e9 + 7;

int n, m, k, base = 100000;
LL ans[N];

struct Point {
    int x, y;
} a[N];

set<int> U[N], D[N];

int main() {
    memset(ans, -1, sizeof(ans));
    scanf("%d%d%d", &n, &m, &k);
    for(int i = 1; i <= k; i++) {
        scanf("%d%d", &a[i].x, &a[i].y);
        U[a[i].y-a[i].x+base].insert(i);
        D[a[i].y+a[i].x+base].insert(i);
    }
    int x = 0, y = 0, op = 0;
    LL T = 0;
    while(!(x == 0 && y == m) && !(x == n && y == 0) && !(x == n && y == m)) {
        if(op == 0) {
            int p = y - x + base;
            for(int t : U[p]) {
                ans[t] = T + abs(a[t].x - x);
                D[a[t].y+a[t].x+base].erase(t);
            }
            U[p].clear();
            int val = min(n - x, m - y);
            x += val;
            y += val;
            T += val;
            if(x == n) op = 1;
            else op = 3;
        } else if(op == 1) {
            int p = y + x + base;
            for(int t : D[p]) {
                ans[t] = T + abs(a[t].x - x);
                U[a[t].y-a[t].x+base].erase(t);
            }
            D[p].clear();
            int val = min(x, m - y);
            x -= val;
            y += val;
            T += val;
            if(x == 0) op = 0;
            else op = 2;
        } else if(op == 2) {
            int p = y - x + base;
            for(int t : U[p]) {
                ans[t] = T + abs(a[t].x - x);
                D[a[t].y+a[t].x+base].erase(t);
            }
            U[p].clear();
            int val = min(x, y);
            x -= val;
            y -= val;
            T += val;
            if(x == 0) op = 3;
            else op = 1;
        } else {
            int p = y + x + base;
            for(int t : D[p]) {
                ans[t] = T + abs(a[t].x - x);
                U[a[t].y-a[t].x+base].erase(t);
            }
            D[p].clear();
            int val = min(y, n - x);
            x += val;
            y -= val;
            T += val;
            if(x == n) op = 2;
            else op = 0;
        }
    }
    for(int i = 1; i <= k; i++) printf("%lld\n", ans[i]);
    puts("");
    return 0;
}

/*
*/
