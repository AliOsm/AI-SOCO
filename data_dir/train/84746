
  #include "bits/stdc++.h"
  using namespace std;
  int N , k , Array[300005] , dp[300005];

  int binary_search( int low , int high , int key ){
    int middle = ( low + high ) >> 1;

    if( low >= high )
      return low;
    else if( Array[middle] >= key )
      return binary_search( low , middle - 1 , key );
    else
      return binary_search( middle + 1 , high , key );    
 }

  bool Check( int Ans ){
    int i , index , limit = 2 * k - 1; 
    fill( dp , dp + N + 1 , 0 );
    
    if( Array[k] - Array[1] <= Ans )
      dp[k] = 1;

   //  for( i = k ; i <= limit ; ++i ){
   //    if( Array[i] - Array[1] > Ans )
   //      dp[i] = dp[i-1];
   //    else
   //      dp[i] = dp[i-1] + 1;
   // }

    for( i = k + 1 ; i <= N ; ++i ){
      if( Array[i] - Array[i-k+1] > Ans ){
        dp[i] = dp[i-1];
        continue;
     }

      index = binary_search( 1 , i - k + 1 , Array[i] - Ans );

      if( Array[index] < Array[i] - Ans )
        ++index;
      
      if( index == 1 ){
        dp[i] = 1 + dp[i-1];
        continue;
     }

      index = max( index , k + 1 );

      if( dp[i-k] - dp[index-2] > 0 )
        dp[i] = dp[i-1] + 1;
      else
        dp[i] = dp[i-1]; 
   }

    if( dp[N] - dp[N-1] > 0 )
      return 1;
    else
      return 0; 
 }

  int main(){
   int i , start , end , middle; 
   scanf( "%d%d" , &N , &k );

   for( i = 1 ; i <= N ; ++i )
   	 scanf( "%d" , Array + i );
  
   sort( Array + 1  , Array + N + 1 );
   start = 0;
   end = 1000000000;
  
   while( start < end ){
    middle = ( start + end ) >> 1;

    if( Check(middle) )
     end = middle - 1;
    else
     start = middle + 1;  
  }
   
   if( Check(start) )
     printf( "%d\n" , start );
   else
     printf( "%d\n" , start + 1 );

   return 0; 
 }