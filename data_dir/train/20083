#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

typedef long long int64;
typedef double real;

const int MaxN = 1000006, MaxC = 0x3F3F3F3F, NA = -1;

int p [MaxN], q [MaxN], r [MaxN], s [MaxN], t [MaxN];
int k, n;

int main (void)
{
 int i, lo, me, hi;
 while (scanf (" %d", &n) != EOF)
 {
  for (i = 1; i <= n; i++)
   scanf (" %d", &p[i]);
  for (i = 1; i <= n; i++)
   scanf (" %d", &q[i]);
  for (i = 1; i <= n; i++)
   t[p[i]] = i;
  for (i = 1; i <= n; i++)
   r[i] = t[q[i]];
  for (i = 1; i <= n; i++)
   s[i] = 0;
  k = 0;
  for (i = 1; i <= n; i++)
  {
   lo = 1;
   hi = n;
   while (lo < hi)
   {
    me = (lo + hi) >> 1;
    if (s[me] > r[i])
     lo = me + 1;
    else
     hi = me;
   }
   s[lo] = r[i];
   if (k < lo)
    k++;
  }
  printf ("%d\n", k);
 }
 return 0;
}
