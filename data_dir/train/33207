/*
 * Code be weshen zyk :'(
 * I won't surrender quietly
 */
#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma comment(linker, "/STACK:1024000000,1024000000")

#include <bits/stdc++.h>

#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

template<class T> using orderd_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define S second
#define F first
#define pb push_back

using ii = pair<int, int>;
using ll = long long;
using db = long double;

const int N = 2e5 + 5, K = 205, MOD = 998244353;
const ll MX = 1e15;
const int blkSz = 320;
vector<pair<int,int>> arr;
vector<int> a;
bool ok[N];
int main() {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#endif

	int n, m, k;
	cin >> n >> m >> k;
	a.resize(n);
	for(int i = 0; i < n; i++){
		cin >> a[i];
		arr.pb({a[i], i});
	}

	sort(arr.rbegin(), arr.rend());
	ll ans = 0;
	for(int i = 0; i < m * k; i++){
		ok[arr[i].S] = 1;
		ans += arr[i].F;
	}
	int cur = 0;
	vector<int> v;
	v.pb(0);
	for(int i = 0; i < n; i++){
		v.back()++;
		cur += ok[i];
		if(cur == m){
			if(v.size() == k - 1)break;
			cur = 0;
			v.pb(v.back());
		}
	}

	cout << ans << '\n';
	for(auto x : v)
		cout << x << ' ';


	return 0;
}