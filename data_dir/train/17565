#include <bits/stdc++.h>

using namespace std;


//<editor-fold desc="debugger">

template <class X, class Y>
ostream & operator << (ostream & os, const pair <X, Y>& p) {
    return os << "[" << p.first << ", " << p.second << "]" ;
}

template <class Ch, class Tr, class Container>
basic_ostream <Ch, Tr> & operator << (basic_ostream <Ch, Tr> & os, const Container& x) {
    os << "{";
    bool f = 1;
    for (auto&y : x) {
        if (!f) os << ", ";
        else f = 0;
        os << y;
    }
    return os << "}";
}

struct Debug {
#ifndef ONLINE_JUDGE
    template<class T>
    Debug& operator << (const T& x) {
        cerr << x << " , ";
        return *this;
    }
    ~Debug() {cerr << endl;}
#define debug cerr << "Line(" << __LINE__ << ") : " , Debug()
#else
    template<class T>
    Debug& operator << (const T& x) {
        return *this;
    }
    #define debug Debug()
#endif
};

//</editor-fold>

void run() {
    string s;
    cin >> s;

    int ones = count(s.begin() , s.end() , '0');
    int zeros = count(s.begin() , s.end() , '1');

    if (!ones || !zeros) {
        cout << s << '\n';
        return;
    }

    for (int i = 0 ;i < s.size() ;i++)
        cout << "10";

    cout << '\n';
}


int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    int t;
    cin >> t;

    while (t--)
        run();
}