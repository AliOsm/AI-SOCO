
#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1 << 28;
constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;


vector<pair<ll, ll>> RLE(vector<ll> & s) {
	ll cnt = 0;
	vector<pair<ll, ll>> res;
	for (ll i = 0; i < s.size(); i++) {
		cnt++;
		if (i == (ll)s.size() - 1) {
			res.push_back(make_pair(s[i], cnt));
			break;
		}
		if (s[i] != s[i + 1]) {
			res.push_back(make_pair(s[i], cnt));
			cnt = 0;
		}
	}
	return res;
}

ll cnt(ll r, vector<pair<ll, ll>>& vp) {
	ll res = 0;
	for (auto p : vp) {
		if (p.first == 0) continue;
		res += max(0LL, p.second - r + 1);
	}
	return res;
}
int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/
	ll n, m, k; scanf("%lld %lld %lld", &n, &m, &k);
	vector<ll> a(n); for (ll i = 0; i < n; i++) scanf("%lld", &a[i]);
	vector<ll> b(m); for (ll i = 0; i < m; i++) scanf("%lld", &b[i]);
	vector<pair<ll, ll>> va = RLE(a);
	vector<pair<ll, ll>> vb = RLE(b);
	ll res = 0;
	for (ll i = 1; i * i <= k; i++) {
		if (k % i != 0) continue;
		if (i * i == k) {
			ll cnt1 = 0;
			ll cnt2 = 0;
			cnt1 = cnt(i, va);
			cnt2 = cnt(k / i, vb);
			res += cnt1 * cnt2;
		}
		else {
			ll cnt1 = 0;
			ll cnt2 = 0;
			cnt1 = cnt(i, va);
			cnt2 = cnt(k/i, vb);
			res += cnt1 * cnt2;
			cnt1 = cnt(k / i, va);
			cnt2 = cnt(i, vb);
			res += cnt1 * cnt2;
			//cout << i << " " << cnt1 << " " << cnt2 << endl;
		}
	}

	cout << res << endl;
	return 0;
	/*
		おまじないを使ったらscanfとprintf関連注意！！！！！！！！！！！！
	*/
}