#include <bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef vector<vector<ll>> matrix;


template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl

const int maxn = 101;
const ll mod = 1e9 + 7;


matrix mul(matrix a, matrix b) {
  int n = a.size();
  matrix res = vector<vector<ll>>(n, vector<ll>(n, 0));

  for (int i=0; i<n; i++) {
    for (int j=0; j<n; j++) {
      for (int k=0; k<n; k++) {
	res[i][j] += a[i][k]*b[k][j]%mod;
	res[i][j] %= mod;
      }
    }
  }
  
  return res;
}


matrix pw(matrix mat, ll k) {
  if (k == 1) return mat;

  matrix res = pw(mul(mat,mat), k/2);
  if (k%2) res = mul(res, mat);
  return res;
}

int n; ll k;

ll a[maxn];

int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);
  cin>>n>>k;

  for (int i=0; i<n; i++) {
    cin>>a[i];  
  }

  if (k == 1) out(n);

  

  matrix mat(n, vector<ll>(n, 0));
  for (int i=0; i<n; i++) {
    for (int j=0; j<n; j++) {
      mat[i][j] = (__builtin_popcountll(a[i]^a[j])%3 == 0);
    }
  }


  k--;
  assert(k>=1);
  mat=pw(mat,k);

  ll res = 0;
  for (int i=0; i<n; i++) {
    for (int j=0; j<n; j++) {
      res += mat[i][j];
      res %= mod;
    }
  }

  res = ((res%mod)+mod)%mod;
  cout<<res<<endl;

  return 0;
}
// don't forget to read in the input :^)
