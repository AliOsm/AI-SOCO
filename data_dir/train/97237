/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")

#include <bits/stdc++.h>
using namespace std;

/* see https://github.com/pllk/cphb/
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
typedef tree<int,null_type,less<int>,rb_tree_tag,
    tree_order_statistics_node_update> indexed_set;
 **/

typedef long long ll;
#define fori(n) for(ll i=0; i<(n); i++)

//typedef __int128 lll;
typedef pair<int, int> pii;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<vll> vvll;

void solve() {
    int n, k;
    cin>>n>>k;
    string s;
    cin>>s;

//    string rgba[]= { "RGB", "GBR", "BRG" };
    string rgb="RGB";
    ll ans=1e9;
//    for(string rgb : rgba) {

        vvll dp(3, vll(n+1));
        for(int i=0; i<n; i++) {
            for(int j=0; j<3; j++) {
                dp[j][i+1]=!(s[i]==rgb[(i%3+j)%3]);
                dp[j][i+1]+=dp[j][i];
            }
        }

        for(int i=k; i<=n; i++) {
            for(int j=0; j<3; j++) {
                ans=min(ans, dp[j][i]-dp[j][i-k]);
            }
        }
 //   }
    cout<<ans<<endl;
}

int main() {
    cin.tie(nullptr);
    std::ios::sync_with_stdio(false);
    int t;
    cin>>t;
    while(t--)
        solve();

}

