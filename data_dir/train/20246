#include<bits/stdc++.h>
using namespace std;
long long a, b;

long long yin[2000008];
long long nyin[2000008];

int cnt = 0;
int main() {
	scanf("%I64d", &a);
	scanf("%I64d", &b);

	int cnt = 0;
	for (long long i = 2; i * i <= a; i++) {
		if (a % i == 0) {
			yin[cnt++] = i;
			yin[cnt++] = a / i;
//			if (i == b || a / i == b) {
//				flag0 = 1;
//			}
		}
	}
	yin[cnt++] = a;
//	yin[cnt++] = 0;
	sort(yin, yin + cnt);
	cnt = unique(yin, yin + cnt) - yin;
//

//	for (int i = 0; i < cnt; i++) {
//		cout << yin[i] << " ";
//	}
//	cout << endl;

//
//	long long ansa = 0;
//
////	int i = 0;
////	if (flag0 == 0) {
////		while (yin[i] >= b)
////			i++;
////	}
//
////	long long g = __gcd(a, b);
////	long long r;
////	for (; i < cnt; i++) {
////		if (yin[i] < b) {
////			g = __gcd(a, b);
////			r = (b - yin[i]) / g;
////			ansa += r;
////			b -= r * g;
////			if (b > yin[i]) {
////				b -= g;
////				ansa++;
////			}
////		}
////	}
//
//
//	long long g;
//	while (1) {
//		for (int i = cnt - 1; i >= 0; i--) {
//			if (yin[i] > b) {
//				cnt--;
//			} else {
//				break;
//			}
//		}
//
//		long long maxa = 0;
////		long long r;
//
//		for (int i = 0; i < cnt; i++) {
//			nyin[i] = b / yin[i] * yin[i];
//			maxa = max(maxa, nyin[i]);
//		}
//
//
//		if (maxa == b) {
//			g = __gcd(a, b);
//			ansa++;
//			b -= g;
//			continue;
//		}
//	}

	long long ansa = 0;
	long long g;
	long long r;
	while (b) {
		for (int i = cnt - 1; i >= 0; i--) {
			if (yin[i] > b) {
				cnt--;
			} else {
				break;
			}
		}

		g = __gcd(a, b);
		if (g != 1ll) {
			a /= g;
			b /= g;

			for (int i = cnt - 1; i >= 0; i--) {
				if (yin[i] % g) {
					yin[i] = -1;
					cnt--;
				} else {
					yin[i] /= g;
				}
			}

			for (int ia = 0, ib = 0; ia < cnt; ia++, ib++) {
				while (yin[ib] == -1) {
					ib++;
				}
				yin[ia] = yin[ib];
			}
		}

		long long maxa = 0;

		for (int i = cnt - 1; i >= 0; i--) {
			if (yin[i] == 1)
				continue;
			r = b / yin[i] * yin[i];
			if (r == b)
				r -= yin[i];
			maxa = max(maxa, r);
		}

		ansa += b - maxa;
		b = maxa;
		//cout << cnt << " " << yin[0] << " " << yin[1] << " " << b << endl;
		if (cnt == 1 && yin[0] == 1) {
			ansa += b;
			break;
		}
	}

	printf("%I64d", ansa);

	return 0;
}
