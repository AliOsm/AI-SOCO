#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <bitset>
#include <map>

using namespace std;

vector<int> v[19];
int X[19];

vector<int> basis(vector<int> v,int x){
    vector<int> ans;
    bitset<262145> B;
    B[0]=1;
    for (auto y:v){
        if (!B[y]){
            ans.push_back(y);
            for (int i=0;i<(1<<x);i++){
                if (B[i]){
                    B[i^y]=1;
                }
            }
        }
    }
    if (ans.size()<x)
        ans.clear();
    return ans;
}



int main()
{
    int n;
    cin >> n;
    for (int i=0;i<n;i++){
        int x;
        cin >> x;
        for (int j=32-__builtin_clz(x);j<=18;j++){
            v[j].push_back(x);
            X[j]^=x;
        }
    }
    for (int x=18;x>=1;x--){
        if (v[x].size()>=x){
            auto b=basis(v[x],x);
            if (b.empty())
                continue;
            cout << x << endl;
            vector<int> v((1<<x)-1);
            for (int j=0;j<x;j++)
                for (int i=(1<<j)-1;i<(1<<x)-1;i+=(1<<j)){
                    v[i]=b[j];
                }
            int X=0;
            cout << X << ' ';
            for (auto y:v)
                cout << (X^=y) << ' ';

            return 0;
        }
    }
    cout << 0 << endl;
    cout << 0 << endl;
    return 0;
}
