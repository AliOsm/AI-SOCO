/* 464B */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

bool flag = false;
int P[8][3];
__int64 V[8][3];
int a[4], m;

void dfs(int t) {
	if (t == 8) {
		__int64 tmp, mn, l = -1;
		
		rep(i, 0, 8) {
			mn = LLONG_MAX;
			m = 0;
			rep(j, 0, 8) {
				if (i == j)
					continue;
				tmp = 0;
				rep(k, 0, 3) {
					V[j][k] = P[j][k] - P[i][k];
					tmp += V[j][k] * V[j][k];
				}
				if (tmp < mn) {
					mn = tmp;
					m = 0;
					a[m++] = j;
				} else if (tmp == mn) {
					a[m++] = j;
				}
			}
			if (m!=3 || mn==0)
				return ;
			if (l>0 && mn!=l)
				return ;
			// check length equal
			l = mn;
			// check vertical
			int j, k;
			
			j = a[0]; k = a[1];
			if (V[j][0]*V[k][0]+V[j][1]*V[k][1]+V[j][2]*V[k][2] != 0)
				return ;
			j = a[1]; k = a[2];
			if (V[j][0]*V[k][0]+V[j][1]*V[k][1]+V[j][2]*V[k][2] != 0)
				return ;
			j = a[2]; k = a[0];
			if (V[j][0]*V[k][0]+V[j][1]*V[k][1]+V[j][2]*V[k][2] != 0)
				return ;
		}
		flag = true;
		return ;
	}
	
	sort(P[t], P[t]+3);
	do {
		dfs(t+1);
		if (flag)
			return ;
	} while (next_permutation(P[t], P[t]+3));
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	rep(i, 0, 8)
		scanf("%d %d %d", &P[i][0], &P[i][1], &P[i][2]);
		
	dfs(0);
	
	if (flag) {
		puts("YES");
		rep(i, 0, 8)
			printf("%d %d %d\n", P[i][0], P[i][1], P[i][2]);
	} else {
		puts("NO");
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
