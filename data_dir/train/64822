#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> p3l;
typedef pair<char, ll> pcl;
typedef vector<char> vc;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<p3l> vp3l;
typedef vector<vll> vvll;
typedef vector<ld> vld;

#define fan(i, a, n) for(ll i=a; i<n; ++i)
#define boost ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0)
#define fna(i, n, a) for(ll i=n-1; i>=a; --i)
#define fit(it, fst) for(auto &it:fst)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define pb push_back
#define rs resize
#define endl "\n"
#define fst first
#define snd second
#define sz size
#define ins insert
#define mp make_pair
#define ce cout << "\n"

ld sqr(ld a) {
  return a * a;
}
//#define dbg(fst)
//
//vector<vector<int>> dfsv;
//vector<char> used;
//void dfs(int n){
//    used[n]=true;
//    fit(it,dfsv[n]){
//        if(!used[*it])dfs(*it);
//    }
//}
//ll phi(ll fst){
//    ll result = fst;
//    for(ll i=2;i*i<=fst;i++){
//        if(fst%i==0){
//            while(fst%i==0){
//                fst/=i;
//            }
//            result -= result/i;
//        }
//    }
//    if (fst > 1)
//        result -= result / fst;
//    return result;
//}
//ld gcd(ld a, ld b) {
//  if (b == 0)
//    return a;
//  else
//    return gcd(b, fmod(a, b));
//}
//ll m = 998244353;
//ll mulmod(ll a,ll b) {
//  a %= m;
//  if (b == 0)return 1;
//  if (b % 2 == 0) {
//    return mulmod((a * a) % m, b / 2) % m;
//  } else {
//    return (a * mulmod((a * a) % m, b / 2) % m) % m;
//  }
//}
ll n,X,Y,d;
string s;

void upd(pll &pos, char mv, int d){
	if(mv == 'U')
		pos.second += d;
	if(mv == 'D')
		pos.second -= d;
	if(mv == 'L')
		pos.first -= d;
	if(mv == 'R')
		pos.first += d;
}

bool can(pair<int, int> u, pair<int, int> v, int len){
	int d = abs(u.first - v.first) + abs(u.second - v.second);
	if(d % 2 != len % 2) return false;
	return len >= d;
}

bool ok(int len){
    pll curr = {0,0};
    fan(i,len,n){
        upd(curr,s[i],1);
    }
    ll l =0,r = len;
    while(true){
        if(can(curr,{X,Y},len))return true;

        if(r == n)break;
        upd(curr, s[l++], 1);
        upd(curr, s[r++], -1);
    }

    return false;

}

int main(){
    boost;

    cin >> n >> s >> X >> Y;
    ll d = abs(X) + abs(Y);
    if(d > n || (d%2)!=(n%2)){cout << -1;return 0;}

    ll l =  -1,r = n;
    while(r - l > 1){
        ll m = (l+r) >> 1;
        if(ok(m)){
            r = m;
        }else{
            l = m;
        }
    }

    cout << r;


    return 0;
}
