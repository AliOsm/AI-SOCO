#include <bits/stdc++.h>
using namespace std;

int tc, m, cnt[70], need[70];
long long n, a, total;

int power(long long num) {
	int k = 0;
	while (num > 1) {
		k++;
		num /= 2;
	}

	return k;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> tc;
	while (tc--) {
		cin >> n >> m;
		memset(need, 0, sizeof(need));
		memset(cnt, 0, sizeof(cnt));
		total = 0;

		for (int i = 0; i <= 60; i++) {
			need[i] = ((n & (1LL << i)) != 0);
		}

		for (int i = 0; i < m; i++) {
			cin >> a;
			cnt[power(a)]++;
			total += a;
		}

		if (total < n) {
			cout << -1 << '\n';
			continue;
		}

		int ans = 0;
		for (int i = 0; i < 63; i++) {
			if (need[i] > cnt[i]) {
				for (int j = i + 1; j < 63; j++) {
					if (cnt[j]) {
						cnt[j]--;
						for (int k = j - 1; k >= i; k--) {
							cnt[k]++;
							ans++;
						}

						cnt[i]++;
						break;
					}
				}
			}

			int kasih = max(0, (cnt[i] - need[i]) / 2);
			cnt[i + 1] += kasih;
			cnt[i] -= kasih * 2;
		}

		int butuh = -1;
		for (int i = 0; i < 63; i++) {
			if (cnt[i] > need[i] && butuh != -1) {
				ans += i - butuh;
				butuh = -1;
			} else if (cnt[i] < need[i] && butuh == -1) {
				butuh = i;
			}
		}

		cout << ans << '\n';
	}

	return 0;
}