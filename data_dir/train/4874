#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define abdelrahman010 ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;
using namespace std;
const int N = 1e5 + 5;

int n , m , vis[105];
string s[105];
int main()
{
	abdelrahman010
	cin >> n >> m;
	for(int i = 0;i < n;i++)
		cin >> s[i];
	int mx = -1 , ind1 , ind2;
	string pa = "";
	for(int i = 0;i < n;i++)
		for(int j = 0;j < n;j++)
			if(i != j)
			{
				string tmp = s[i] + s[j];
				string tmp1 = tmp;
				reverse(tmp1.begin() , tmp1.end());
				if(tmp == tmp1 && tmp.size() > mx)
					mx = tmp.size() , ind1 = i , ind2 = j , pa = tmp;
			}
	if(~mx)
		vis[ind1] = 1 , vis[ind2] = 1;
	vector<string>v , vv;
	for(int i = 0;i < n;i++)
		if(!vis[i])
			for(int j = 0;j < n;j++)
				if(i != j && !vis[j])
				{
					string tmp = s[j];
					reverse(tmp.begin() , tmp.end());
					if(tmp == s[i])
					{
						v.push_back(s[i]) , vv.push_back(s[j]) , vis[i] = 1 , vis[j] = 1;
						break;
					}
				}
	int mx1 = -1;
	for(int i = 0;i < n;i++)
		if(!vis[i])
		{
			string tmp = s[i];
			string tmp1 = tmp;
			reverse(tmp1.begin() , tmp1.end());
			int f = tmp.size();
			if(tmp == tmp1 && f > mx1)
				mx1 = f , ind1 = i;
		}
	if(mx1 > mx)
		v.push_back(s[ind1]);
	else if(mx > mx1)
		v.push_back(pa);
	int cnt = 0;
	for(auto i:v)
		cnt += i.size();
	for(auto i:vv)
		cnt += i.size();
	cout << cnt << endl;
	for(auto i:v)
		cout << i;
	reverse(vv.begin() , vv.end());
	for(auto i:vv)
		cout << i;
	return 0;
}
