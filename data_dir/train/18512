#include <bits/stdc++.h>

using namespace std;

int gcd(int aa , int bb){
  while(aa && bb){
    if(aa > bb){
      aa %= bb;
    }else{
      bb %= aa;
    }
  }
  return aa + bb;
}
void go(vector < int > &a, int & ans){
  int sz = (int)a.size();
  for(int i = 0 ; i < sz - 1; i++){
    int g = gcd(a[i] , a[i + 1]);
    if(g == 1){
      ans += a[i] != 1;
      a[i] = 1;
      ans += a[i + 1] != 1;
      a[i + 1] = 1;
    }
  }
}
bool allAreOne(vector < int > &a){
  int sz = (int)a.size();
  for(int i = 0 ; i < sz ; i++){
    if(a[i] != 1){
      return false;
    }
  }
  return true;
}
int main(){
  ios::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  //freopen("revive.in","r",stdin);
// freopen("in.txt","r",stdin);
//  freopen("out.txt","w",stdout);
  int n;
  cin >> n;
  vector < int > a(n);
  int one = 0;
  for(int i = 0 ; i < n ; i++){
    cin >> a[i];
    one += a[i] == 1;
  }
  if(allAreOne(a)){
    cout << "0" << endl;
    return 0;
  }
  int gcdForAll = a[0];
  for(int i = 1; i < n ; i++){
    gcdForAll = gcd(gcdForAll , a[i]);
  }
  if(gcdForAll != 1){
    cout << "-1" << endl;
    return 0;
  }
  int ans = 0;
  for(int i = 0 ; one && i < n ; i++){
    go(a , ans);
  }
  if(allAreOne(a)){
    cout << ans << endl;
    return 0;
  }
  int st = -1;
  int ed = 0;
  int len = n;
  for(int i = 0 ; i < n ; i++){
   int g = a[i];
    for(int j = i + 1 ; j < n ; j++){
      g = gcd(g , a[j]);
     if(g == 1){
       if(j - i < len){
         ed = j; len = j - i; st = i;
       }
     }
    }
  }
  ans = len + (n - 1 - ed) + ed; 
  cout << ans << endl;
  return 0;
}