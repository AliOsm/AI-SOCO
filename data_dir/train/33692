#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
//#define  int long long int
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll hell =1000000007;
const ll Hell=998244353;
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;

typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
const int N=10000001;
int spf[N],u[N];ll g[N];ll sm[N];int32_t main()
{
    IOS;
    int n;
    cin>>n;
    int a[n];
    for(int i=1;i<N;i++)
    {spf[i]=i;
        u[i]=1;
        g[i]=0;
    }
    for(int i=2;i<N;i++)
        if(spf[i]==i)
        {
            for(int j=i;j<N;j+=i)
            { u[j]=(-u[j]);
                if(spf[j]==j)
                    spf[j]=i;
                if(!(j%(i*i)))
                    u[j]=0;
            }
        }
    for(int i=0;i<n;i++)
    {cin>>a[i];
        g[a[i]]++;
    }
    ll ansi=0;
    for(int i=2;i<N;i++)
    {
        for(int j=2*i;j<N;j+=i)
            g[i]+=g[j];
        g[i]=power(2,g[i],hell)-1;
        g[i]=u[i]*g[i];
        ansi=(ansi+g[i]+hell)%hell;
    }
    ansi=hell-ansi;
    ll ans=0,x;int sp,z;
    for(int i=0;i<n;i++)
    {
        x=a[i];vi v;
        while(x>1)
        {
            sp=spf[x];z=0;
            while(!(x%sp))
            {
                z=1;
                x=x/sp;
            }
            if(z)
                v.pb(sp);
        }
        int k=v.size();int in=0;x=0;
        for(int j=1;j<(1<<k);j++)
        {
            int l=1;int pr=1;in=0;
            while(l<=j)
            {
                if(l&j)
                    pr=pr*v[in];
                in++;
                l=l<<1;
            }
            x=(x+g[pr]+hell)%hell;
        }
        x=(x+ansi+hell)%hell;
        ans=(ans+x)%hell;
    }
    cout<<ans<<endl;
    return 0;
}
