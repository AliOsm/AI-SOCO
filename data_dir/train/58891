#include <bits/stdc++.h>

using namespace std;

const int N = 10;

int n, m, out, vis[N][N];
vector<int> ord, edges[N];

int calc() {
	int ret = 0;
	
	memset(vis, 0, sizeof(vis));

	for (int u = 1; u <= n; ++u) {
		for (int v : edges[u]) {
			int a = min(ord[u], ord[v]);
			int b = max(ord[u], ord[v]);

			if (vis[a][b]++) {
				continue;
			}

			ret++;
		}
	}

	return ret;
}

int main() {
	cin >> n >> m;

	for (int i = 0; i < m; ++i) {
		int u, v;
		cin >> u >> v;
		edges[u].push_back(v);
	}

	for (int i = 1; i <= 6; ++i) {
		ord.push_back(i);
		ord.push_back(i);
	}

	do {
		out = max(out, calc());
	} while (out < m && next_permutation(ord.begin(), ord.end()));

	cout << out;

	return 0;
}