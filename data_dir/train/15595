// Why am I so dumb? :c
// chrono::system_clock::now().time_since_epoch().count()

//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define mp make_pair

#define all(x) (x).begin(), (x).end()

#define fi first
#define se second

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;   
typedef pair<int, int> pii;
template<typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

const int MAXN = (int)1e5 + 5;

pii pos[MAXN];

int arr[MAXN];

int n, k, ans;

bool can(int a, int b) {
    if (b < 1 || b > n) {
        return 0;
    }    

    if (pos[a].fi == -1 || pos[b].fi == -1) {
        return 1;
    }

    return pos[a].fi > pos[b].se;            
}

void solve() {
    scanf("%d %d", &n, &k);

    for (int i = 1; i <= n; ++i) {
        pos[i] = mp(-1, -1);
    }

    for (int i = 1; i <= k; ++i) {
        scanf("%d", &arr[i]);

        if (pos[arr[i]].fi == -1) {
            pos[arr[i]].fi = i;
        }

        pos[arr[i]].se = i;
    }

    for (int i = 1; i <= n; ++i) {
        ans += can(i, i - 1);
        ans += can(i, i);
        ans += can(i, i + 1);            
    }

    printf("%d\n", ans);
}

int main() {
    int tt = 1;

    while (tt--) {
        solve();
    }

    return 0;
}
