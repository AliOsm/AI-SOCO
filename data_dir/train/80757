#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<61);
const int inf=(1<<30);
const int nmax=3e5+50;
const int mod=1e9+7;
using namespace std;
int n,m,u,v,i,j;
ll x[nmax],y[nmax],ans[nmax],px[nmax],sy[nmax];
pair<ll,int>p[nmax];
vector<int>a[nmax];
int main()
{
    //freopen("sol.in","r",stdin);
    //freopen("sol.out","w",stdout);
    ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
    cin>>n>>m;
    for(i=1;i<=n;i++)
    {
    	cin>>x[i]>>y[i];
    	p[i]={x[i]-y[i],i};
	}
	while(m--)
	{
		cin>>u>>v;
		a[u].pb(v);
		a[v].pb(u);
	}
	sort(p+1,p+n+1);
	for(i=1;i<=n;i++)px[i]=px[i-1]+x[p[i].sc];
	for(i=n;i>=1;i--)sy[i]=sy[i+1]+y[p[i].sc];
	for(i=1;i<=n;i++)
	{
		ans[p[i].sc]=px[i-1]+1LL*(i-1)*y[p[i].sc]+sy[i+1]+1LL*(n-i)*x[p[i].sc];
		for(j=0;j<a[p[i].sc].size();j++)
		{
			if(x[a[p[i].sc][j]]-y[a[p[i].sc][j]]<=x[p[i].sc]-y[p[i].sc])ans[p[i].sc]+=-x[a[p[i].sc][j]]-y[p[i].sc];
			else ans[p[i].sc]+=-y[a[p[i].sc][j]]-x[p[i].sc];
		}
	}
	for(i=1;i<=n;i++)cout<<ans[i]<<" ";
	cout<<endl;
    return 0;
}
