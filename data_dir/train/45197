//  Copyright Â© 2019 Diego Garcia Rodriguez del Campo. All rights reserved.
#include<bits/stdc++.h>
#define MAX 200005
#define INF 1e18
#define optimiza_io cin.tie(0); ios_base::sync_with_stdio(0);
using namespace std;
typedef long long i64;

i64 N, B;
vector < i64 > cnt;
vector < i64 > dv;

int main()
{
    optimiza_io
    cin >> N >> B;
    for( i64 i = 2; i <= sqrt( B ); i ++ )
        if( B % i == 0 )
        {
            dv.push_back( i );
            cnt.push_back( 1 );
            B /= i;
            while( B % i == 0 )
            {
                B /= i;
                cnt[cnt.size() - 1]++;
            }
        }
        
    i64 ans = INF;
    if( B > 1 )
    {
        dv.push_back( B );
        cnt.push_back( 1 );
    }
    for( i64 i = 0; i < dv.size(); i ++ )
    {
        i64 divi = dv[i];
        i64 tmp = 0;
        while( divi <= N )
        {
            tmp += N / divi;
            if( LLONG_MAX / dv[i] < divi )
                break;
            divi *= dv[i];
        }
        ans = min( ans , tmp / cnt[i] );
    }
    
    cout << ans;
    return 0;
}

