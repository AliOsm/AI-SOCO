#define _CRT_SECURE_NO_WARNINGS
#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

#ifdef _DEBUG
const int N = 2000010;
#else
const int N = 2000010;
#endif

const int MOD = 1e9+7;

int n, cnt[N];
string s;

int get(char c)
{
	if (c >= '0' && c <= '9') return c - '0';
	if (c >= 'A' && c <= 'Z') return c - 'A' + 10;
	if (c >= 'a' && c <= 'z') return c - 'a' + 36;
	if (c == '-') return 62;
	if (c == '_') return 63;
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	cin >> s;
	n = s.length();
	for (int i = 0; i < 64; i++)
		for (int j = 0; j < 64; j++)
			cnt[i & j]++;
	int ans = 1;
	for (int i = 0; i < n; i++)
	{
		int a = get(s[i]);
		ans = (1ll * ans * cnt[a]) % MOD;
	}
	cout << ans;
	return 0;
}