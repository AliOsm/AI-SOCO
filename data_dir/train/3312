#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1e9+7;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result =(result * base) % modulus;
		exponent >>= 1;
		base =(base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

void stringToUpper(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::toupper);
}

void stringToLower(string& strToConvert)
{
	transform(strToConvert.begin(), strToConvert.end(), strToConvert.begin(), ::tolower);
}

int n, k, ans=1e9;
vector<string> a;

int get(string permute, string num)
{
	vector<pair<char, char>> temp(k);
	for(int i=0; i<k; i++)
		temp[i] = mp(permute[i], num[i]);
	sort(temp.begin(), temp.end());
	string ans(k, '0');
	for(int i=0; i<k; i++)
		ans[i] = temp[i].S;
	return stoi(ans);
}

int main()
{
	ssync;
	cin >> n >> k;
	a.resize(n);
	for(int i=0; i<n; i++)
		cin >> a[i];
	string per(k, '0');
	for(int i=0; i<k; i++)
		per[i] = '0'+i+1;
	do
	{
		int currmin = 1e9;
		int currmax = 0;
		for(int i=0; i<n; i++)
		{
			int x = get(per, a[i]);
			currmin = min(currmin, x);
			currmax = max(currmax, x);
		}
		ans = min(ans, currmax - currmin);
	}while(next_permutation(per.begin(), per.end()));
	cout << ans << "\n";
	return 0;
}
