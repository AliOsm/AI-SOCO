#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>
#include <stack>

using namespace std;

#define FTB(i,a,b) for(LL i=a;i<=b;i++)
#define FT(i,a,b) for(LL i=a;i<b;i++)
#define FGB(i,a,b) for(LL i=a;i>=b;i--)
#define FG(i,a,b) for(LL i=a;i>b;i--)
#define endl "\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define debug cout<<"VL\n";
#define PI 3.1415926535897
#define lbnd(dau,cuoi,giatri) lower_bound(dau,cuoi,giatri)
#define ubnd(dau,cuoi,giatri) upper_bound(dau,cuoi,giatri)
typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<II> VII;
typedef vector<bool> VB;



LL n,m;
char s[1004][1004],z[1004][1004];
LL hi[1004][1004],a[]={-1,-1,-1,0,1,1,1,0},b[]={-1,0,1,1,1,0,-1,-1},c[]={1,1,1,0,-1,-1,-1,0},d[]={1,0,-1,-1,-1,0,1,1};




int main(){
    ios::sync_with_stdio(false);cin.tie(0);
//	freopen("input.txt","r",stdin);
//  freopen("output.txt","w",stdout);
    cin>>n>>m;
    FTB(i,0,n+1) FTB(j,0,m+1) s[i][j]='.';
    FTB(i,1,n) FTB(j,1,m){
        cin>>s[i][j];
    }
    FTB(i,1,n){
        FTB(j,1,m){
            if(s[i][j]=='#'){
                bool kt;
                FT(l,0,8) {
                    kt=true;
                    FT(v,0,8){
                        LL x=i+a[v]+c[l],y=j+b[v]+d[l];
                        if(x<1||x>n||y<1||y>m||s[x][y]!='#'){
                            kt=false;
                            break;
                        }
                    }
                    if(kt==true) break;
                }
                if(kt==false){
                    cout<<"NO";
                    return 0;
                }

            }
        }
    }
    cout<<"YES";



	return 0;
}



