#include <bits/stdc++.h>
using namespace std;
typedef long long Long;

const int N = 1e6;

vector<string> nodes_in_level[N];

int main() {
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#ifdef Local
  freopen("test.in", "r", stdin);
#endif

  string s;
  cin >> s;

  replace(s.begin(), s.end(), ',', ' ');
  stringstream ss;
  ss << s;

  int depth = 1;
  int mx_depth = 1;
  stack<int> children_st;
  children_st.push(N);

  while (ss >> s) {
    while (--children_st.top() < 0) {
      children_st.pop();
    }
    mx_depth = max(mx_depth, (int)children_st.size());
    nodes_in_level[children_st.size()].push_back(s);
    int children;
    ss >> children;
    if (children != 0) {
      children_st.push(children);
    }
  }

  cout << mx_depth << endl;

  for (int i = 1; i <= mx_depth; ++i) {
    for (string& s : nodes_in_level[i]) {
      cout << s << ' ';
    }
    cout << '\n';
  }
}
