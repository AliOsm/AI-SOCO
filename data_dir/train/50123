#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define sz( s ) int( s.size() )
#define pb emplace_back
#define mp make_pair
#define hell 998244353
#define F first
#define S second
ll t=1 ;
void solve()
{
    int n , g , ans = 0 ;
    set<int> s ;
    cin >> n ;
    vector<int> v( n + 1 ) ;
    rep( i , 1 , n + 1 )
    {
        cin >> v[ i ] ;
        if( v[ i ] % 2 == 1 )
            s.insert( i ) ;
        if( i == 1 )
            g = v[ i ] ;
        else
            g = __gcd( v[ i ] , g ) ;
    }
    if( g > 1 )
    {
        cout << "YES\n0";
    }
    else
    {
        while( sz( s ) > 0 )
        {
            auto it = s.begin() ;
            if( *it == n )
            {
                int x = v[ n ] , y = v[ n - 1 ] ;
                v[ n ] = x + y ;
                v[ n - 1 ] = x - y ;
                ans++;
                if( v[ n ] % 2 == 1 )
                    s.insert( n ) ;
                else if( s.find( n ) != s.end() && v[n]%2 == 0 )
                    s.erase( n ) ;
                if( v[ n - 1 ] % 2 == 1 )
                    s.insert( n - 1 ) ;
                else if( s.find( n - 1 ) != s.end() && v[n-1]%2 == 0 )
                    s.erase( n - 1 ) ;
            }
            else
            {
                int z = *it ;
                int x = v[ z ] , y = v[ z + 1 ] ;
                v[ z ] = x - y ;
                v[ z + 1 ] = x + y ;
                ans++;
                if( v[ z ] % 2 == 1 )
                    s.insert( z ) ;
                else if( s.find( z ) != s.end() && v[z] % 2 == 0 )
                {
                    s.erase( z ) ;
                    //cout << "z = " << z << "\n" ;
                }
                if( v[ z + 1 ] % 2 == 1 )
                    s.insert( z + 1 ) ;
                else if( s.find( z + 1 ) != s.end() && v[z+1] % 2 == 0 )
                    s.erase( z + 1 ) ;
            }
        }
        cout << "YES\n" << ans ;
    }
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
