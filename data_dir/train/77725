#include<bits/stdc++.h>
using namespace std;
set < pair < int, int > > edges;
set < int > unvis_nodes;
int n,m;
bool vis[200005];
int cnt = 0 ;
int main()
{
    scanf("%d%d",&n,&m);
    for(int i = 0 ; i<m ; i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        edges.insert({x,y});
        edges.insert({y,x});
    }
    for(int i = 1; i <=n ; i++)
        unvis_nodes.insert(i);
    vector < int > v;
    for(int i =1 ; i <=n ; i++)
    {

        if (!vis[i])
        {
            queue< int > q;
            q.push(i);
            unvis_nodes.erase(i);
            while(!q.empty())
            {
                int node=q.front();
                q.pop();
                cnt++;
                vector < int > del;
                for(auto it : unvis_nodes)
                {
                    int n_node=it;
                    if (vis[n_node])continue;
                    if (edges.find({node,n_node})!= edges.end())continue;
                    vis[n_node]=1;
                    del.push_back(n_node);
                    q.push(n_node);
                }
                for(int i = 0 ; i <del.size() ; i++)
                    unvis_nodes.erase(del[i]);
            }
            v.push_back(cnt);
            cnt=0;
        }
    }
    sort(v.begin(),v.end());
    printf("%d\n",v.size());
    for(int i = 0; i <v.size() ; i++)
        printf("%d ",v[i]);

    return 0;
}
