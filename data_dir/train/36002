#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cassert>
using namespace std;

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define each(i,c) for(__typeof(c.begin()) i=c.begin();i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef pair<int,int> pi;
typedef long long ll;
const int inf=(int)1e9;
const double EPS=1e-9, INF=1e12;

int n;
int row[1000], col[1000], a[1000][1000];
vector<vi> ans;
void push(int a, int b, int c){
	vi v;
	v.pb(a); v.pb(b); v.pb(c);
	ans.pb(v);
}
int main(){
	cin >> n;
	rep(i, n - 1){
		int y, x;
		cin >> y >> x;
		x--; y--;
		a[y][x] = 1;
		row[y]++;
		col[x]++;
	}
	for(int it = n - 1; it > 0; it--){
		rep(i, it) if(col[i] == 0){
			rep(j, it + 1) swap(a[j][it], a[j][i]);
			swap(col[it], col[i]);
			push(1, i, it);
			break;
		}
		rep(i, it) if(row[i]){
			rep(j, it){
				swap(a[i][j], a[it][j]);
				if(a[it][j]) col[j]--;
			}
			swap(row[i], row[it]);
			push(0, i, it);
			break;
		}
	}
	cout << ans.size() << endl;
	rep(i, ans.size()) rep(j, 3) cout << ans[i][j] + 1 << (j==2?"\n":" ");
	
	return 0;
}
