#include <bits/stdc++.h>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define all(v) v.begin(),v.end()

#define boost ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;

const ll INF=1e18;
const ll inf=1e9;
const ld eps=1e-7;
const ld pi=acos(-1);
const int dx[8]={0,0 ,1,-1,1,1,-1,-1};
const int dy[8]={1,-1,0,0,1,-1,1,-1};
const int N=3e5+11;
const int M=121111;
const int mod1=998244353;
const int mod2=1e9+7;

int c1[N],c2[N];

int main(){
  int n;
  cin>>n;
  string s;
  cin>>s;
  int a=-1,b=-1;
  for(int i=n;i>=1;i--){
    c1[i]=a;
    c2[i]=b;
    if(s[i-1]=='A'){
      a=i;
    }
    else{
      b=i;
    }
  }
  ll ans=0;
  for(int i=1;i<=n;i++){
    if(s[i-1]=='A'){
      if(c1[i]==-1)continue;
      else{
        if(c2[i]==-1){
          ans+=n-i;
        }
        else{
          int j=c1[i],k=c2[i];
          if(j<k){
            ans+=k-i-1;
            if(c1[k]==-1){
              if(c2[k]==-1)continue;
              ans+=n-k;
            }
            else{
              if(c2[k]==-1)ans+=n-c1[k]+1;
              else ans+=n-min(c2[k],c1[k])+1;
            }
          }
          else{
            ans+=n-j+1;
          }
        }
      }
    }
    else{
      if(c2[i]==-1)continue;
      else{
        if(c1[i]==-1){
          ans+=n-i;
        }
        else{
          int j=c2[i],k=c1[i];
          if(j<k){
            ans+=k-i-1;
            if(c2[k]==-1){
              if(c1[k]==-1)continue;
              ans+=n-k;
            }
            else{
              if(c1[k]==-1)ans+=n-c2[k]+1;
              else ans+=n-min(c2[k],c1[k])+1;
            }
          }
          else{
            ans+=n-j+1;
          }
        }
      }
    }
  }
  cout<<ans;
}
