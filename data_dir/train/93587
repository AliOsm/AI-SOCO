#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int LOGN = 21;
const int N = 100011;
const int MOD = 1000000007;

int n , k , a,b,st[N],ed[N];

vector<int> adj[N];
vector<pii> v[N];

int dsu[N],cnt=1;
ll BIT[N];

void add(int idx,ll val){
	while(idx < N){
		BIT[idx] = (BIT[idx] + val)%MOD;
		idx += (idx & -idx);
	}
}
ll get(int idx){
	ll ans = 0;
	while(idx){
		ans = (ans + BIT[idx])%MOD;
		idx -= (idx & -idx);
	}
	return ans;
}
void add(int l , int r , ll val){
	add(l,val);
	add(r+1,-val);
}
int find(int u){
	return dsu[u] == u ? u : dsu[u] = find(dsu[u]);
}
void dfs(int u){
	st[u] = cnt++;
	for (int i = 0; i < adj[u].size(); ++i){
		dfs(adj[u][i]);
	}
	ed[u] = cnt-1;
}

ll fn = 0;

int main() {
//	freopen("input.txt", "r", stdin);
	memset(st,-1,sizeof st);
	scanf("%d",&n);
	for(int i = 1 ; i <= n ; i++)dsu[i] = i;
	for (int i = 1 ; i <= n; ++i){
		scanf("%d",&k);
		for(int j = 0 ; j < k ; j++){
			scanf("%d%d",&a,&b);
			v[i].push_back(make_pair(a,b));
			adj[i].push_back(find(a));
			dsu[find(a)] = i;
		}
	}
	for(int i=1;i <= n ; i++){
		if(find(i) == i){
			dfs(i);
		}
	}
	for(int i = 1 ; i <= n ; i++)dsu[i] = i;
	for (int i = 1 ; i <= n; ++i){
		for(int j = 0 ; j < v[i].size();++j){
			a = v[i][j].first;
			b = v[i][j].second;
			ll curW = (get(st[a]) + b)%MOD;
			fn = (fn + curW)%MOD;
			while(fn < 0)
				fn += MOD;
			add(st[find(a)],ed[find(a)],curW);
			dsu[find(a)] = i;
		}
	}
	printf("%lld\n",fn );
	return 0;
}