#include <bits/stdc++.h>
#define ll long long int
#define mod 1000000007
#define pii pair<int, int>
#define fr(n) for (int i = 0; i < n; i++)
#define fr1(n) for (int i = 1; i <= n; i++)
using namespace std;

int d[1003][1003], s[1003][9], e[256][9];

int main() {
    ios::sync_with_stdio(false);
    int n, a[1003] = {}, p[8] = {1, 2, 3, 4, 5, 6, 7, 8}, z = 0;
    fr(256) for (int j = 0; j < 8; j++) if (i & (1 << j)) e[i][j + 1] = 1;
    cin >> n;
    fr1(n) cin >> a[i];
    fr1(n + 1) {
        d[i][0] = 1003;
        int c = 0;
        for (int j = i; j <= n; j++) if (a[i] == a[j]) {
            d[i][++c] = j;
        }
        for (int j = c + 1; j <= 1002; j++) d[i][j] = 1003;
    }
    fr(n + 2) {
        for (int j = i; j <= n; j++) if (!s[i][a[j]]) s[i][a[j]] = j;
        for (int j = 0; j <= 8; j++) if (!s[i][j]) s[i][j] = n + 1;
    }
    fr1(8) if (s[0][i] != n + 1) z++;
    for (int q = 0; q < 40320; q++) {
        for (int b = 0; b < 255; b++) {
            int l = 0, r = 128;
            while (l + 1 < r) {
                int m = (l + r) >> 1, c = 0;
                fr(8) {
                    c = s[c][p[i]];
                    c = d[c][m + e[b][p[i]]];
                    if (c == 1003) break;
                }
                if (c == 1003) r = m;
                else l = m;
            }
            if (l) z = max(z, l * 8 + __builtin_popcount(b));
        }
        next_permutation(p, p + 8);
    }
    cout << z;
}
