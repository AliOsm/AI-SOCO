//prince0fcrows
#include <bits/stdc++.h>
#define mx 300005
#define mod 1000000007

using namespace std;
int ara[mx], ara2[mx];
int cnt[mx*30][3], trie[mx*30][3], nodeno;


int Set(int N,int pos){return N=N | (1<<pos);}
int reset(int N,int pos){return N= N & ~(1<<pos);}
bool check(int N,int pos){return (bool)(N & (1<<pos));}

void initrie(){
    memset(trie, -1, sizeof trie);
    memset(cnt, 0, sizeof cnt);
    nodeno = 1;
}

void insrt(int a){
    int curr = 0;
    for(int i=29;i>=0;i--){
        int b = check(a, i);
        cnt[curr][b]++;
        if(trie[curr][b]==-1){
            trie[curr][b] = nodeno++;
        }
        curr = trie[curr][b];
    }
}

int query(int a){
    int curr = 0;
    int ret = 0;
    for(int i=29;i>=0;i--){
        int b = check(a, i);
        if(!cnt[curr][b]){
            cnt[curr][1-b]--;
            ret += (1<<i)*(1-b);
            curr = trie[curr][1-b];
        }
        else{
            cnt[curr][b]--;
            ret += (1<<i)*(b);
            curr = trie[curr][b];
        }
    }
    return ret;
}

int32_t main(){
    //freopen("in.txt", "r", stdin);
    int k, i, j, t, n, a, b, m;
    while(cin >> n){
        initrie();
        for(i=1;i<=n;i++){
            cin >> ara[i];
        }
        for(i=1;i<=n;i++){
            cin >> ara2[i];
            insrt(ara2[i]);
        }
        for(i=1;i<=n;i++){
            a = query(ara[i]);
            a ^= ara[i];
            cout << a << " ";
        }
        cout << endl;
    }
    return 0;
}










