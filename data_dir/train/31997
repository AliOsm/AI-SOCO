#include <bits/stdc++.h>
using namespace std;

typedef long long Long;

const int N = 62;

int Q, T;
Long x, k, l, r, idx, lvl, shifts[N];

Long getLevel(Long u) {
	Long res = 0;
	while (u > 1) {
		res++;
		u >>= 1;
	}
	return res;
}

void solve(Long u) {
	while (lvl > 0) {
		printf("%lld ", u);

		l = (1LL << lvl);
		idx = u - l;
		idx = (((idx + shifts[lvl]) % l) + l) % l;
		u = idx + l;

		lvl--;
		u >>= 1;

		l = (1LL << lvl);
		idx = u - l;
		idx = (((idx - shifts[lvl]) % l) + l) % l;
		u = idx + l;
	}

	printf("1\n");
}

int main() {
	cin >> Q;

	while (Q--) {
		scanf("%d %lld", &T, &x);

		lvl = getLevel(x);

		if (T == 1) {
			scanf("%lld", &k);
			shifts[lvl] = (shifts[lvl] + k) % (1LL << lvl);
		}
		else if (T == 2) {
			scanf("%lld", &k);

			k %= (1LL << lvl);

			while (lvl < N) {
				shifts[lvl] = (shifts[lvl] + k) % (1LL << lvl);
				k *= 2LL;
				lvl++;
			}
		}
		else {
			solve(x);
		}
	}
	
	return 0;
}