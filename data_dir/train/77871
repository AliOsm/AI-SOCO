#include <bits/stdc++.h>
using namespace std;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long long long 

void DFS(vector<vector<long int>> &g, long int x, long int y, vector<vector<bool>> &visited, pair<long int,long int> &last, long int &n, long int &m){
	last.first = x;
	last.second = y;
	visited[x][y] = true;

	long int newX, newY;

	if(g[x][y] == 1){
		newX = x - 1;
		newY = y + 1;
	}
	else if(g[x][y] == 2){
		newX = x + 1;
		newY = y + 1;
	}
	else if(g[x][y] == 3){
		newX = x - 1;
		newY = y - 1;
	}
	else{
		newX = x + 1;
		newY = y - 1;
	}


	if(!(newX < 0 || newX >= n || visited[newX][y]))
		DFS(g,newX,y,visited,last,n,m);

	if(!(newY < 0 || newY >= m || visited[x][newY]))
		DFS(g,x,newY,visited,last,n,m);
}

int main(){
   IOS;

   long int n,m;
   cin>>n>>m;

   string a,b;
   cin>>a>>b;

   // cout<<a<<" "<<b<<endl;
   vector<vector<long int>> g(n,vector<long int>(m)),revg(n,vector<long int>(m));

   for(long int i = 0; i < n; i++){
   	for(long int j = 0; j < m; j++){
   		if(a[i] == '>' && b[j] == '^'){
   			g[i][j] = 1;
   			revg[i][j] = 4;
   		}
   		else if(a[i] == '>' && b[j] == 'v'){
   			g[i][j] = 2;
   			revg[i][j] = 3;
   		}
   		else if(a[i] == '<' && b[j] == '^'){
   			g[i][j] = 3;
   			revg[i][j] = 2;
   		}
   		else{
   			g[i][j] = 4;
   			revg[i][j] = 1;
   		}
   	}
   }
   pair<long int,long int> last = {0,0};
   vector<vector<bool>> visited(n,vector<bool>(m));

   DFS(g,0,0,visited,last,n,m);

   for(long int i = 0; i < n; i++){
   	for(long int j = 0; j < m; j++){
   		if(visited[i][j])
   			visited[i][j] = false;
   		else
   			return cout<<"NO",0;
   	}
   }

   DFS(revg,0,0,visited,last,n,m);


   for(long int i = 0; i < n; i++){
   	for(long int j = 0; j < m; j++){
   		if(visited[i][j])
   			visited[i][j] = false;
   		else
   			return cout<<"NO",0;
   	}
   }	


   cout<<"YES";   
   return 0;
}