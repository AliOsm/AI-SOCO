#include<bits/stdc++.h>
using namespace std;
vector<int>graph[100005];

int g[100005];
int h[1000005];
int f[100005];
int visit[100005];
int c=1;

int imp=0;

void dfs(int node,int p)
{
    visit[node]=1;
    g[node]=c;
    for(auto i:graph[node])
    {
        if(!visit[i])
        {
            dfs(i,node);
            if(f[node]!=f[i])
                imp=1;
        }
    }
}

int main()
{
    int n;
    cin>>n;

    for(int i=1;i<=n;i++)
    {
        cin>>f[i];
        graph[i].push_back(f[i]);
        graph[f[i]].push_back(i);
    }

    for(int i=1;i<=n;i++)
    {
        if(!visit[i])
        {
            dfs(i,-1);
            h[c]=f[i];
            c++;
            if(imp)
            {
                cout<<"-1";
                return 0;
            }
        }
    }

    cout<<c-1<<"\n";
    for(int i=1;i<=n;i++)
        cout<<g[i]<<" ";
    cout<<"\n";
    for(int i=1;i<c;i++)
        cout<<h[i]<<" ";





    return 0;


}