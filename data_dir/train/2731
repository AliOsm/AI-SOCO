#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define pi 3.141592653589793
using namespace std;

#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")


bool tab[300000][20];
inline bool q(int l, int r) {
    int j = log2(r - l + 1);
    int here = tab[l][j] && tab[r - (1 << j) + 1][j];
    return here;
}


void f() {
    int n;
    cin >> n;
    bool vis[n + 1];
    int a[n + 1], fir[n + 1], last[n + 1];
    memset(fir, -1, sizeof fir);
    memset(last, -1, sizeof last);
    memset(vis, false, sizeof vis);
    set<int> st;

    for (int i = 1; i < n + 1; i++) {
        cin >> a[i];
        st.insert(a[i]);
        if (fir[a[i]] == -1) fir[a[i]] = i;
        last[a[i]] = i;
    }

    vector<int> b;
    for (int e : st) {
        b.pb(e);
    }

    int m = b.size();
    for (int i = 0; i < m; i++) tab[i][0] = true;
    for (int j = 1; j < 20; j++) {
        for (int i = 0; i + (1 << j) - 1 < m; i++) {
            int mid = i + (1 << (j - 1)) - 1;
            tab[i][j] = tab[i][j - 1] &&  tab[mid + 1][j - 1] && (last[b[mid]] < fir[b[mid + 1]]);
        }
    }

    int ans = n - 1;
    for (int i = 0; i < m; i++) {
        int h = 0;;
        int l = 0, r = i, mid, ind = -1;
        while (l <= r) {
            mid = (l + r) / 2;
            if (q(mid, i)) {
                ind = mid;
                r = mid - 1;
            }
            else {
                l = mid + 1;
            }
        }

        h += ind;
        l = i, r = m - 1;
        while (l <= r) {
            mid = (l + r) / 2;
            if (q(i, mid)) {
                ind = mid;
                l = mid + 1;
            }
            else {
                r = mid - 1;
            }
        }
        h += m - 1 - ind;
        ans = min(ans, h);
    }

    cout << ans;
}


int main() {
//    cout << fixed << setprecision(10);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int q;
    cin >> q;
    while (q--) {
        f();
        cout << '\n';
    }

}