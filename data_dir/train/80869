#include <bits/stdc++.h>
#define F first
#define S second
#define ll long long
#define pb push_back
#define mp make_pair
using namespace std;
const int MX=4*1e6+100;
const long long INF = 1e18;
int N, M;
pair<ll, pair<int, int> > allA[MX], allB[MX];
ll sumA=0, sumB=0;
ll a[2222], b[2222];
int main()
{
    scanf("%d", &N); for(int i=0;i<N;i++) {cin>>a[i];   sumA+=a[i];}
    scanf("%d", &M); for(int j=0;j<M;j++) {cin>>b[j];   sumB+=b[j];}
    ll diff0=abs(sumA-sumB), diff1=1e18, diff2=1e18, c=-1, d=-1, e=-1, f=-1, g=-1, w=-1;
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<M;j++)
        {
            ll sa=sumA, sb=sumB;
            sa-=a[i];
            sa+=b[j];
            sb+=a[i];
            sb-=b[j];
            if(abs(sa-sb) <= diff1)
            {
                diff1=abs(sa-sb);
                c=i+1;
                d=j+1;
            }
        }
    }
    int sza=0, szb=0;
    for(int i=0;i<N;i++) for(int j=i+1;j<N;j++) if(i != j) allA[sza++]=mp(a[i] + a[j], mp(i+1, j+1));
    for(int i=0;i<M;i++) for(int j=i+1;j<M;j++) if(i != j) allB[szb++]=mp(b[i] + b[j], mp(i+1, j+1));
    sort(allA, allA+sza);   sort(allB, allB+szb);
   // for(int i=0;i<sza;i++) cout<<allA[i].F<<" "; cout<<endl;
  //  for(int i=0;i<szb;i++) cout<<allB[i].F<<" "; cout<<endl;
    for(int i=0;i<sza;i++)
    {
        ll aim=allA[i].F;
        if(sumA - sumB > 0) aim-=(diff0 / 2);
        else aim+=(diff0 / 2);
      ///  if(allA[i].F == 7) cout<<aim<<"\n";
     //   int idxL=lower_bound(allB, allB+szb, mp(aim, mp(-1, -1)))-allB;
        int lo=0, hi=szb-1, mid, idxL=szb, idxR=szb;
        while(lo <= hi)
        {
            mid=(lo + hi)/2;
            if(allB[mid].F <= aim) idxL=mid, lo=mid+1;
            else hi=mid-1;
        }
        lo=0, hi=szb-1;
        while(lo <= hi)
        {
            mid=(lo+hi)/2;
            if(allB[mid].F >= aim) idxR=mid, hi=mid-1;
            else lo=mid+1;
        }
        int bestidx=-1;
        if(idxL == szb) bestidx=idxR;
        if(idxR == szb) bestidx=idxL;
        if(idxL != szb && idxR != szb)
        {
            if(abs(allB[idxL].F - aim) > abs(allB[idxR].F - aim))
                bestidx=idxR;
            else bestidx=idxL;
        }
        if(bestidx == -1 || bestidx == szb) continue;
        ll sa=sumA, sb=sumB;
        sa+=allB[bestidx].F;
        sa-=allA[i].F;
        sb+=allA[i].F;
        sb-=allB[bestidx].F;
        if(abs(sa-sb) < diff2)
        {
            diff2=abs(sa-sb);
            e=allA[i].S.F;
            f=allB[bestidx].S.F;
            g=allA[i].S.S;
            w=allB[bestidx].S.S;
        }
    }
   /// cout<<diff0<<" "<<diff1<<" "<<diff2<<"\n";
    if(diff0 <= diff1 && diff0 <= diff2)
        cout<<diff0<<"\n0";
    else if(diff1 <= diff0 && diff1 <= diff2)
        cout<<diff1<<"\n1\n"<<c<<" "<<d<<"\n";
    else cout<<diff2<<"\n2\n"<<e<<" "<<f<<"\n"<<g<<" "<<w<<"\n";
    return 0;
}
