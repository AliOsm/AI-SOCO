#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.141592654
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<21> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
int n,a[1000010],ck[1000010],c,p[1000010];
vector<int>ans;
int main()
{

//cout<<Pow((ll)1000000,(ll)110);a
//freopen("bye.in","r",stdin);
//freopen("math.in","w",stdout);
//    char input[15];
//    scanf("%s", &input);  array of char
//  gets(c+1);  array of char
scanf("%d",&n);
forr(i,1,n)
scanf("%d",&a[i]),ck[a[i]]=1;

forr(i,1,n)
{
  if(p[a[i]])continue;
  int g=1e6-a[i]+1;
  if(ck[g])c++,p[g]=1;
  else ans.push_back(g);
}

forr(i,1,1e6)
{
    if(c==0)break;
    if(ck[i]==0&&ck[1000000-i+1]==0)
    {
        ans.push_back(i);
        ans.push_back(1e6-i+1);
        c--;
    }
}
printf("%d\n",ans.size());
forr(i,0,ans.size()-1)
printf("%d ",ans[i]);



return 0;
}
