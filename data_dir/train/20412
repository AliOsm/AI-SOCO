#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define forn() for(int i=0;i<n;i++)
#define fori(n) for(ll i=0;i<(ll)n;i++)
#define forj(n) for(ll j=0;j<(ll)n;j++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int,int> pii;

const int inf = 2009000999;
const double eps = 1e-3;
const int maxn = 1e6 + 55;
const int maxk = 55;
const int base = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

int a[maxn];
ll t[maxn*4];

ll sum(int v, int l, int r, int tl, int tr){
    if(tl > tr)
        return 0;
    if(tl == l && tr == r)
        return t[v];
    int c = (l + r)/2;
    return sum(2*v, l, c, tl, min(tr, c)) + sum(v*2 + 1, c + 1, r, max(c + 1, tl), tr);
}

void add(int v, int l, int r, int x){
    if(l == r){
        t[v]++;
        return;
    }
    int c = (l + r)/2;
    if(x <= c)
        add(2*v, l, c, x);
    else
        add(2*v + 1, c + 1, r, x);
    t[v] = t[2*v] + t[v*2 + 1];
}

int main(){
    fast_io;
    ll n, k;
    cin >> n >> k;
    int i = 0;
    ll ans = 1;
    for(int j = 0; j < n; j++){
        if(j + 1 == n)
            j = n - 1;
        if(k < 1.0*n/2)
            if(i + k > n ){
                ans += (1 + sum(1, 0, n, i + 1, n) + sum(1, 0, n, 0, i + k - n));
            }
            else{
                ans += (1 + sum(1, 0, n, i + 1, (i + k)));
            }
        else
            if(i + k > n){
                ans += (1 + sum(1, 0, n, i + k - n, i - 1));
            }
            else{
                if(i + k == n)
                    ans += (1 + sum(1, 0, n, 1, i - 1) + sum(1, 0, n, i + k, n));
                else
                    ans += (1 + sum(1, 0, n, 0, i - 1) + sum(1, 0, n, i + k, n));
            }
        add(1, 0, n, i);
        a[i]++;
        add(1, 0, n, (i + k)%n);
        a[(i + k)%n]++;
        cout << ans << " ";
        i += k;
        i %= n;
    }
//    cout << ans << " " << i;
    return 0;
}
