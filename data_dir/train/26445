#include<bits/stdc++.h>
     
using namespace std;
     
#define DIM 200009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define amen exit(0)
#define endl '\n'
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define MODULO 1000000007
 
long long i,j,k,l,n,m,sum,c,r,b,t;
 
long long a[DIM],dp[DIM],mn[DIM];
 
struct seg{
	long long l,r,d;
};
 
vector<seg>s;
 
struct dot{
	long long t,x;
};
 
inline bool cmp(dot a,dot b){
	if(a.x!=b.x)return a.x<b.x;
	return a.t>b.t;
}
 
vector<dot>sc;
 
bool can(long long x){
	if(x==0)return true;
	long long mini=a[x];
 
	for(int i=1;i<=n;i++)mn[i]=INF,dp[i]=INF;
	dp[0]=0;
	
	sc.clear();
 
	for(auto to:s){
		if(to.d>mini){
			sc.push_back({1,to.l});
			sc.push_back({-1,to.r});
		}
	}
 
	if(sc.size()==0)return (n+1)<=t;
 
	sort(sc.begin(),sc.end(),cmp);
	long long cnt=0,res=n+1,c=1,kilk=0,lastx=sc[0].x;
	for(int i=1;i<sc.size();i++){
		if(c==0)lastx=sc[i].x;
		c+=sc[i].t;
		if(c==0)res+=2*(sc[i].x-lastx+1);
	}
 
	return res<=t;
}
 
int main()
{
    fast;
 
    cin>>m>>n>>k>>t;
    for(i=1;i<=m;i++)cin>>a[i];
 
    for(i=1;i<=n;i++)mn[i]=INF;
 
    sort(a+1,a+1+m);
	reverse(a+1,a+1+m);
 
	for(i=1;i<=k;i++){
		cin>>l>>r>>j;
		s.push_back({l,r,j});
	}
 
	l=0;
	r=m;
	while(l<r){
		long long mid=(l+r+1)/2;
		if(can(mid))l=mid;
		else r=mid-1;
	}
 
	cout<<l<<endl;
 
    amen;
}