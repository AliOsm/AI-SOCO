#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
#define dbs(x) cerr << x << endl
#define imprime(x, Y)                              \
  for (int X = 0; X < Y; X++) cerr << x[X] << " "; \
  cerr << endl;
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vector<ii> > vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
map<string, int> mapa;
const int N = 1000010;
vector<string> level[N];
string s;
int leitura(int i, int l)
{
  string aux;
  while (s[i] != ',') {
    aux.pb(s[i]);
    i++;
  }
  i++;
  int num = 0;
  while (s[i] != ',' and i < s.size()) {
    num = num * 10 + s[i] - '0';
    i++;
  }
  i++;
  for (int j = 0; j < num; j++) i = leitura(i, l+1);
  level[l].pb(aux);
  return i;
}
int main()
{
  BUFF;
  cin >> s;
  for (int i = 0; i<s.size();) {
    string aux;
    while (s[i] != ',') {
      aux.pb(s[i]);
      i++;
    }
    i++;
    int num = 0;
    while (s[i] != ',' and i < s.size()) {
      num = num * 10 + s[i] - '0';
      i++;
    }
    i++;
    for (int j = 0; j < num; j++) {
      i = leitura(i, 1);
    }
    level[0].pb(aux);
  }
  int resp = 0;
  for (int i = 0; i < N; i++)
    if (level[i].size() > 0) resp = i + 1;
  cout << resp << endl;
  for (int i =0; i < N; i++) {
    if (level[i].size() == 0) {
      break;
    }
    int j;
    for(j=0;j<level[i].size()-1;j++) cout<<level[i][j]<<" ";
    cout<<level[i][j]<<endl;
  }
  return 0;
}
