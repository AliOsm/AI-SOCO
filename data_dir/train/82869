//#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 2e18 + 7;
const long long mod = 1e9 + 7;
const double eps = 1e-9;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i, n) for (int (i)=0; (i)<(n); ++(i))
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

char s[100005];
set<pair<int, int> > S;
ll res = 0;

int main(void){
  #ifdef nobik
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
  #endif
  gets(s);
  int diff = 0;
  for(int i = 0; s[i]; ++i){
    if(s[i] == '(') ++diff; else
    if(s[i] == ')') --diff; else {
      --diff;
      s[i] = ')';
      int x, y; scanf("%d %d", &x, &y);
      S.insert(mp(x - y, i));
      res += y;
    }
    if(diff < 0){
      if(S.empty()){
        puts("-1");
        exit(0);
      }
      res += (*S.begin()).F;
      diff += 2;
      s[(*S.begin()).S] = '(';
      S.erase(S.begin());
    }
  }
  if(diff != 0) res = -1;
  cout << res << "\n";
  if(res != -1){
    puts(s);
  }
  return 0;
}
