#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
#define pll pair<ll, ll>
const int mod = (1e9) + 7;
const double eps = 1e-6;
const int siz = 2e5 + 5, siz2 = 1049659, siz3 = 5032108;
int n, c[1005];
vector<int> adj, wait, tree;
int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n-1; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		c[a]++;
		c[b]++;
	}
	int cumu = 0;
	for (int i = 1; i < n; i++) {
		if (c[i] + cumu > i) {
			printf("NO\n");
			return 0;
		}
		if (c[i] == 0) {
			wait.push_back(i);
		}
		else {
			cumu += c[i];
			tree.push_back(i);
			int co = 0;
			while (co < c[i] - 1) {
				tree.push_back(wait.back());
				wait.pop_back();
				co++;
			}
		}
	}
	tree.push_back(n);
	printf("YES\n");
	for (int i = 0; i < n - 1; i++) {
		printf("%d %d\n", tree[i], tree[i+1]);
	}
	return 0;
}
