#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef vector<ll> vl ;

#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).begin(),(v).end()

const int MOD = 1000000007;
const int N = 1000005;
const double PI =4*atan(1);

ll m,x,y,n,p,k;
char a[N];
ll res=0;
vl adj[N];
ll ind1[N];
ll ind[N];
ll dp[N];
ll vis[N];
bool cond;

void bfs(ll c){
    queue<ll> q;
    for(int i=0;i<n;i++){
        if(ind[i]==0){
            q.push(i);
            if((a[i]-'a')==c)dp[i]=1;
        }
    }
    ll ras;
    while(!q.empty()){
        ras=q.front();
        q.pop();
        //cout << ras <<" " << dp[ras][1] <<" " << dp[ras][2]<< endl;
        for(auto t: adj[ras]){
            ind[t]--;
            x=((a[t]-'a')==c);
            dp[t]=max(dp[t],dp[ras]);
            if(ind[t]==0){
                dp[t]+=x;
                q.push(t);
            }
        }
    }
    for(int i=0;i<n;i++){
        res=max(res,dp[i]);
        if(ind[i]!=0){
            cond=false;
        }
    }
}

int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    cin >> n >> m;
    for(int i=0;i<n;i++){
        cin >> a[i];
    }
    for(int i=0;i<m;i++){
        cin >> x >> y;
        x--;y--;
        adj[x].pb(y);
        ind1[y]++;
    }
    ll ans=0;
    for(int i=0;i<26;i++){
        for(int j=0;j<n;j++){
            vis[j]=0;
            ind[j]=ind1[j];
            dp[j]=0;
        }
        cond=true;
        res=0;
        bfs(i);
        if(cond){
            ans=max(ans,res);
        }else{
            cout << -1;
            return 0;
        }
    }
    cout << ans;

    return 0;
}