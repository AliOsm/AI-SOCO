#include <bits/stdc++.h>
using namespace std;
struct Point{
    int x, y, z, id;
    Point() {}
    Point(int _x, int _y, int _z, int _id) {x = _x; y = _y; z = _z; id = _id;}
    bool operator < (const Point& o) const{
        if(x < o.x) return true;
        if(x == o.x){
            if(y < o.y) return true;
            else if(y == o.y) return z < o.z;
        }
        return false;
    }
};

vector<Point> vec;
vector<int> Y;
vector<int> X;

int main(){
    int n;
    scanf("%d",&n);

    for(int i=1; i<=n; i++){
        int x, y, z;
        scanf("%d %d %d",&x, &y, &z);
        vec.push_back(Point(x,y,z,i));
    }
    sort(vec.begin(), vec.end());

    for(int i=0;i<n;i++){
        if(i < n-1 && vec[i].x == vec[i+1].x && vec[i].y == vec[i+1].y){
            printf("%d %d\n",vec[i].id, vec[i+1].id);
            i++;

            if(i == n - 1 || vec[i].x != vec[i+1].x){
                if(Y.size() > 0) X.push_back(Y[0]), Y.pop_back();
                if(X.size() == 2) {printf("%d %d\n",X[0], X[1]); X.clear();}
            }
        }
        else{
            if(i < n - 1 && vec[i].x == vec[i+1].x){
                Y.push_back(vec[i].id);
                if(Y.size() == 2) {printf("%d %d\n",Y[0], Y[1]); Y.clear();}
            }
            else{
                if(Y.size() == 0) X.push_back(vec[i].id);
                else{
                    Y.push_back(vec[i].id);
                    if(Y.size() == 2) {printf("%d %d\n",Y[0], Y[1]); Y.clear();}
                }
                if(X.size() == 2) {printf("%d %d\n",X[0], X[1]); X.clear();}
            }
        }
    }
}
