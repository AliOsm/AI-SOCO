/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 6e3 + 5;
int n, T, r[N], st[N], V[N];
int mx[N][2], lca[N][N];
vector<int> adj[N];

void dfs(int u, int par) {
	V[st[u] = T++] = u;
	for (int v: adj[u])
		if (v ^ par) {
			dfs(v, u);
			for (int j = st[v]; j < T; j++) {
				if (r[u] ^ r[V[j]]) {
					bool b = r[u] < r[V[j]];
					mx[u][b] = max(mx[u][b], mx[V[j]][b]);
				}
				for (int k = st[u]; k < st[v]; k++)
					lca[V[j]][V[k]] = lca[V[k]][V[j]] = u;
			}
		}
	mx[u][0]++, mx[u][1]++;
}

int main() {
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> r[i];
	for (int i = 1; i < n; i++) {
		int u, v;
		cin >> u >> v;
		adj[--u].push_back(--v);
		adj[v].push_back(u);
	}
	dfs(0, 0);
	int ans = 0;
	for (int u = 0; u < n; u++) {
		ans = max(ans, max(mx[u][0], mx[u][1]));
		for (int v = 0; v < n; v++) {
			int x = lca[u][v];
			if (r[u] < r[v] && x ^ u && x ^ v)
				ans = max(ans, mx[u][0] + mx[v][1] + (r[u] < r[x] && r[x] < r[v]));
		}
	}
	cout << ans;
}
