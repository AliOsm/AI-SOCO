//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <stdlib.h>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int, int> ii;

void fastIO() {
	std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
}

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define FORE(i,c) for(auto i = (c).begin(); i != (c).end(); i++)
#define pb push_back
#define all(obj) obj.begin(), obj.end()
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)

#define fst first
#define snd second

template<typename T, typename U> inline void mnze(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void mxze(T &x, U y) { if(x < y) x = y; }

void _scan( int &x ) { scanf("%d",&x); }
void _scan( long long &x ) { scanf("%lld",&x); }
void _scan( double &x ) { scanf("%lf",&x); }
void _scan( char &x ) { scanf(" %c",&x); }
void _scan( char *x ) { scanf("%s",x); }
void scan() {}
template<typename T, typename... U>
void scan( T& head, U&... tail ) { _scan(head); scan(tail...);}

template<typename T> void _dbg(const char* sdbg, T h) { cerr<<sdbg<<"="<<h<<"\n"; }
template<typename T, typename... U> void _dbg(const char* sdbg, T h, U... t) {
	while(*sdbg != ',')cerr<<*sdbg++;
	cerr<<"="<<h<<","; _dbg(sdbg+1, t...);
}

#ifdef LOCAL
#define debug(...) _dbg(#__VA_ARGS__, __VA_ARGS__)
#define debugv(x) {{cerr <<#x <<" = "; FORE(_i, (x)) cerr <<*_i <<", "; cerr <<"\n"; }}
#define debuga(x, sz) {{cerr <<#x <<" = "; FOR(_i, 0, sz) cerr << x[_i] <<", "; cerr <<"\n"; }}
#else
#define debug(...) (__VA_ARGS__)
#define debugv(x)
#define debuga(x, sz)
#define cerr if(0)cout
#endif

///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

const int MAXMSK = (1<<12) + 10;

int to_int(string s){
	int ret = 0;
	FOR(i,0,s.length()){
		if(s[i]=='1') ret+=(1<<i);
	}
	return ret;
}

int n, q, m, MSK;
int w[20];

int val[MAXMSK];
int cnt[MAXMSK];
int ans[MAXMSK][102];

int main(){
	scan(n,m,q);
	FOR(i,0,n) scan(w[i]);
	FOR(msk,0,1<<n){
		FOR(i,0,n) if(msk & (1<<i)) val[msk] += w[i];
	}
	char tmp[15];
	FOR(i,0,m){
		scan(tmp);
		int s = to_int(tmp);
		cnt[s]++;
	}
	MSK = (1<<n) - 1;
	FOR(t,0,1<<n){
		FOR(s,0,1<<n){
			if(cnt[s]==0) continue;
			int st = ~(t^s);
			st = st & MSK;
			ans[t][min(val[st],101)] += cnt[s];
		}
		FOR(k,1,101) ans[t][k] += ans[t][k-1];
	}
	FOR(i,0,q){
		int k;
		scan(tmp, k);
		int t = to_int(tmp);
		printf("%d\n",ans[t][k]);
	}
}
