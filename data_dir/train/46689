#include <bits/stdc++.h>
using namespace std;

vector <int> solve(vector <int> & v)
{
    if (v.size() <= 2) {
        int elem = -1e9;
        bool ok = 1;
        for (auto i : v) {
            if (i == 0)
                continue;
            if (abs(i) > 1 || elem != -1e9)
                ok = 0;
            elem = i;
        }
        if (ok) {
            if (elem == -1e9)
                return { };
            return { elem };
        }
    }
    bool impar(0);
    for (auto i : v)
        if (i % 2 == 1 || i % 2 == -1)
            impar = 1;
    if (!impar) {
        for (auto & i : v)
            i /= 2;
        v.resize(unique(v.begin(), v.end()) - v.begin());
        auto q = solve(v);
        for (auto & i : q)
            i *= 2;
        return q;
    }

    vector <int> q = v;
    for (auto & i : q)
        i = ((i % 2 != 0) ? (i + 1) / 2 : i / 2);
    q.resize(unique(q.begin(), q.end()) - q.begin());

    vector <int> ans1 = solve(q);
    for (auto & i : ans1)
        i *= 2;
    ans1.push_back(-1);

    q = v;
    for (auto & i : q)
        i = ((i % 2 != 0) ? (i - 1) / 2 : i / 2);
    q.resize(unique(q.begin(), q.end()) - q.begin());

    vector <int> ans2 = solve(q);
    for (auto & i : ans2)
        i *= 2;
    ans2.push_back(1);

    if (ans1.size() <= ans2.size())
        return ans1;
    return ans2;
}

int main()
{
    vector <int> v;
    int n;
    cin >> n;
    v.resize(n);

    for (auto & i : v)
        cin >> i;

    sort(v.begin(), v.end());

    auto ans = solve(v);

    cout << ans.size() << '\n';

    for (auto i : ans)
        cout << i << ' ';
    return 0;
}
