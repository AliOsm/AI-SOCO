/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
#include <bits/stdc++.h>

#define MOD 1000000007
#define LINF (1LL<<60)
#define INF 2147483647
#define PI 3.1415926535897932384626433
#define ll long long
#define pii pair<int,int>
#define mp(x,y) make_pair((x),(y))
#define pb(x) push_back((x))

using namespace std;

string itos(int x){
	stringstream ss;
	ss << x;
	return ss.str();
}

int n, x[1010], y[1010], r[1010], ord[1010];
set<int> v;
vector<int> e[1010];

double res, dp[3][1010];
/*
0: idle idle
1: occu idle 
2: occu occu
*/

void dfs(int now){
	double x1, x2;
	x1 = x2 = 0;
	for(auto x: e[now]){
		dfs(x);
		dp[0][now] += dp[1][x];
		dp[2][now] += dp[1][x];
		x1 += dp[2][x];
		x2 += dp[0][x];
	}
	x1 -= PI*r[now]*r[now];
	x2 += PI*r[now]*r[now];
	dp[1][now] = max(x1, x2);
	dp[0][now] -= PI*r[now]*r[now];
	dp[2][now] += PI*r[now]*r[now];
	
}

int main(){
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> x[i] >> y[i] >> r[i];
	iota(ord, ord+n, 0);
	sort(ord, ord+n, [&](int x, int y){return r[x] < r[y];});
	for(int i = 0; i < n; i++){
		int j = ord[i];
		vector<int> d;
		for(auto a: v)
			if(x[j]-r[j] <= x[a]-r[a] && x[j]+r[j] >= x[a]+r[a] && y[j]-r[j] <= y[a]-r[a] && y[j]+r[j] >= y[a]+r[a])
				d.pb(a), e[j].pb(a);
		for(auto x: d)
			v.erase(x);
		v.insert(j);		
	}
	for(auto x: v)
		dfs(x), res += max(dp[0][x], max(dp[1][x], dp[2][x]));
	cout << fixed << setprecision(12) << res << endl;
	return 0;
}

