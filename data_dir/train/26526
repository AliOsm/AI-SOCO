#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int MAXN = 200100;

vector<bool> ok(vector<int> v)
{
    int mx = 0;
    int uniq = true;
    bool f[MAXN] = {0};
    int i = 0;
    vector<bool> res;
    for (int a : v)
    {
        mx = max(a, mx);
        if (f[a]) uniq = false;
        f[a] = true;
        ++i;
        res.push_back(mx == i && uniq);
    }
    return res;
}

int main()
{
    int n;
    cin >> n;
    for (int tn = 1; tn <= n; ++tn)
    {
        int k;
        cin >> k;
        vector<int> v;
        for (int i = 0; i < k; ++i)
        {
            int a;
            cin >> a;
            v.push_back(a);
        }
        auto a = ok(v);
        reverse(v.begin(), v.end());
        auto b = ok(v);
        reverse(b.begin(), b.end());
        int f = 0;
        for (int i = 0; i+1 < k; ++i)
        {
            if (a[i] && b[i+1])
            {
                f++;
            }
        }
        cout << f << '\n';
        for (int i = 0; i+1 < k; ++i)
        {
            if (a[i] && b[i+1])
            {
                cout << i+1 << ' ' << k-i-1 << '\n';
            }
        }
    }

}