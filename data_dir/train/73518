//nagashbek599327235




#include <bits/stdc++.h>
#define br  break
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define un   unsigned
#define do   double
#define cr   char
#define st   string
#define sc   scanf
#define pr   printf
#define mk   make_pair
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define ff   first
#define ss   second
#define vec  vector
#define gcd  __gcd
#define pi   acos( -1 )
#define ll   long long
#define N    100005
#define M    100000000
#define I    1000000000000000000
#define en                 printf( "\n" )
#define sqr( a )           ( ( a ) * ( a ) )
#define all( c )           ( c ).begin(), ( c ).end()
#define rev( c )           reverse( all( c ) )
#define srt( c )           sort( all( c ) )
#define mxx( x, y, z )     max( x, max( y, z ) )
#define mnn( x, y, z )     min( x, min( y, z ) )
#define mxn( x, y, z )     max( x, min( y, z ) )
#define mnx( x, y, z )     min( x, max( y, z ) )
#define dist( x, y, z, c ) sqrt( sqr( x - z ) + sqr( y - c ) )
#define speed              ios_base::sync_with_stdio( 0 ), cin.tie( 0 ), cout.tie( 0 )
#define toprun             ios_base::sync_with_stdio( 0 ), cin.tie( 0 )
using namespace std;
ll n, m, k, c;
bool u[ 505 ][ 505 ];
vector < pair < ll, ll > > v;
void dfs( ll i, ll j ){
    u[ i ][ j ] = 1;
    v.push_back( make_pair( i, j ) );
    if( !u[ i ][ j + 1 ] )dfs( i, j + 1 );
    else if( !u[ i ][ j - 1 ] )dfs( i, j - 1 );
    else if( !u[ i + 1 ][ j ] )dfs( i + 1, j );
}
int main()
{
    speed;
    cin >> n >> m >> k;
    for( int i = 0; i <= max( n, m ); i ++ )
    {
        u[ i ][ 0 ] = 1;
        u[ 0 ][ i ] = 1;
        u[ n + 1 ][ i ] = 1;
        u[ i ][ m + 1 ] = 1;
    }

    dfs( 1, 1 );
    c = 0;
    while( k > 1 )
    {
        cout << "2 " << v[ c ].first << " " << v[ c ].second << " " << v[ c + 1 ].first << " " << v[ c + 1 ].second << endl;
        k --;
        c += 2;
    }
    cout << v.size() - c << " ";
    for( ; c < v.size(); c ++  )
    {
        cout << v[ c ].first << " " << v[ c ].second << " ";
    }
}























