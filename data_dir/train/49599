#include<bits/stdc++.h>
#define endl "\n"
using namespace std;
const int MAXN = 1e5+5;
const int MOD = 1e9+7;
const int INF = 2e9;
pair<int,int> suff[MAXN];
int N = 0, K = 0;
int L_ans = 0, R_ans = 0;
char arr[MAXN];

void all_a(int l_edge, int r_edge, int K){

    for(int i=l_edge;i<=r_edge;i++){
        int L = i, R = r_edge, id = i - 1;

        while(L <= R){
            int mid = (L + R) >> 1;

            if(suff[mid].second - suff[i-1].second > K)
                R = mid - 1;
            else
                id = mid, L = mid + 1;

        }

        L_ans = max(L_ans,id - i + 1);
    }

}

void all_b(int l_edge, int r_edge, int K){

    for(int i=l_edge;i<=r_edge;i++){
        int L = i, R = r_edge, id = i - 1;

        while(L <= R){
            int mid = (L+R) >> 1;

            if(suff[mid].first - suff[i-1].first > K)
                R = mid - 1;
            else
                L = mid + 1, id = mid;

        }

        R_ans = max(R_ans,id - i + 1);
    }

}

int main(){

    scanf("%i%i",&N,&K);
    scanf("%s",arr);

    for(int i=0;i<N;i++){
        suff[i+1].first = suff[i].first + (arr[i] == 'a');
        suff[i+1].second = suff[i].second + (arr[i] == 'b');
    }

    all_a(1,N,K);
    all_b(1,N,K);

    printf("%i",max(L_ans,R_ans));
    return 0;
}