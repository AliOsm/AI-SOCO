#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long
#define FOR(i, j, k) for (int i = j; i < (int)k; i++)

const int V = (int)3e5;
const int N = (1 << 19);
const int mod = (int)1e9 + 7;
int sumK[N << 1];
int sumX[N << 1];
vector<int> g[V];
int inTime[V], outTime[V], lvl[V];
int curTime = 1;
int n;

void dfs(int u)
{
    inTime[u] = curTime++;
    for (int v : g[u])
    {
        lvl[v] = lvl[u] + 1;
        dfs(v);
    }
    outTime[u] = curTime - 1;
}

void update(int p, int s, int e, int i, int j, int l, int x, int k)
{
    if (e < i || s > j)
        return;
    if (s >= i && e <= j)
    {
        sumK[p] += k;
        sumK[p] %= mod;
        sumX[p] += (x + (int)(1ll * k * l % mod)) % mod;
        sumX[p] %= mod;
        return;
    }
    update(p << 1, s, (s + e) / 2, i, j, l, x, k);
    update(p << 1 | 1, (s + e) / 2 + 1, e, i, j, l, x, k);
}

int query(int p, int s, int e, int u, int l)
{
    if (e < u || s > u)
        return 0;
    int ans = (sumX[p] + (int)((-1ll * l * sumK[p]) % mod)) % mod;
    if (s < e)
    {
        ans = (ans + query(p << 1, s, (s + e) / 2, u, l)) % mod;
        ans = (ans + query(p << 1 | 1, (s + e) / 2 + 1, e, u, l)) % mod;
    }
    return (ans + mod) % mod;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    FOR(i, 1, n)
    {
        int p;
        cin >> p;
        g[--p].push_back(i);
    }
    dfs(0);
    int q;
    cin >> q;
    while (q--)
    {
        int t;
        cin >> t;
        if (t == 1)
        {
            int v, x, k;
            cin >> v >> x >> k;
            v--;
            update(1, 1, N, inTime[v], outTime[v], lvl[v], x, k);
        }
        else
        {
            int v;
            cin >> v;
            v--;
            cout << query(1, 1, N, inTime[v], lvl[v]) << endl;
        }
    }
}