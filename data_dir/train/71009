#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
ll MOD(ll a, ll b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll max3(ll a,ll b, ll c)
{
    return max(c,max(a,b));
}
ll min3(ll a,ll b,ll c)
{
    return min(a,min(b,c));
}
ll power(ll x,ll y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;
}
ll logg(ll a)
{
    ll x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll gcd(ll a,ll  b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
int abso(int x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll a,ll b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
int main()
{
    fastio;
    int n,m;
    cin>>n>>m;
    vector<vector<int>> adj(n+1);
    for(int i=0;i<m;i++)
    {
        int x,y;
        cin>>x>>y;
        if(x>y)
        {
            adj[y].pb(x);
        }
        else
        {
            adj[x].pb(y);
        }
    }
    vector<vector<pair<int,int>>> ans(n+1);
    
    for(int i=1;i<=n;i++)
    {
        
        ans[i].pb(mp(n*i+i,i));
        for(int j=0;j<adj[i].size();j++)
        {
            int x=i;
            int y=adj[i][j];
            ans[x].pb(mp(n*x+y,x));
            ans[y].pb(mp(n*x+y,y));
            
        }
    }
    for(int i=1;i<=n;i++)
    {
        cout<<ans[i].size()<<endl;
        for(int j=0;j<ans[i].size();j++)
        {
            cout<<ans[i][j].f<<' '<<ans[i][j].s<<endl;
        }
    }
    
}
