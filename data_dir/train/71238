#include <bits/stdc++.h>

using namespace std;

typedef long double LD;
typedef long long int LL;
typedef pair <int,int> pii;

#define L first
#define R second

const int maxn = 1000;
bool mt[maxn][maxn], mark[maxn];
int n;

void dfs(int v,bool flag) {
    mark[v] = true;
    for (int i = 0; i < n; i++)
        if (!mark[i] && mt[v][i] == flag)
            dfs(i, flag);
}

int main() {
    ios_base::sync_with_stdio(false);
    int a, b;
    cin >> n >> a >> b;
    if (a > 1 && b > 1) {
        cout << "NO\n";
        return 0;
    }
    bool Mark = true;
    if (a == 1)
        Mark = false, swap(a, b);

    for (int i = a; i < n; i++)
        mt[i][i - 1] = mt[i - 1][i] = 1;

    int ca = 0;
    for (int i = 0; i < n; i++)
        if (!mark[i])
            dfs(i, 1), ca++;
    memset (mark, false, sizeof mark);
    int cb = 0;
    for (int i = 0; i < n; i++)
        if (!mark[i])
            dfs(i, 0), cb++;
    if (ca != a || cb != b) {
        cout << "NO\n";
        return 0;
    }
    cout << "YES\n";
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (i == j)
                cout << "0";
            else
                cout << (mt[i][j] == Mark);
        }
        cout << "\n";
    }
    return 0;
}

