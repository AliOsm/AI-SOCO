#include <iostream>
#include <map>

using namespace std;

int n,*c,t,now_t=0,i,f=1;
long *k;
long long *p;
unsigned long long ans=0,now=0;
multimap<int,int> num;

int main()
{
	cin >> n;
	c = new int[n];
	k = new long[n];
	for (i=0;i<n;++i)
	{
		cin >> k[i] >> c[i];
		num.insert(make_pair(c[i],i));
	}
	cin >> t;
	p = new long long[t];
	for (i=0;i<t;++i)
		cin >> p[i];
	multimap<int,int>::iterator iter=num.begin();
	while (iter!=num.end())
	{
		while (1)
		{
			if (now_t < t)
			{
				if (p[now_t] > now + k[iter->second])
				{
					ans += (unsigned long long)k[iter->second]*(unsigned long long)f*(unsigned long long)c[iter->second];
					now += k[iter->second];
					break;
				}
				else
				{
					ans += (unsigned long long)(p[now_t]-now)*(unsigned long long)(f++)*(unsigned long long)c[iter->second];
					k[iter->second] -= p[now_t] - now;
					now = p[now_t++];
				}
			}
			else
			{
				ans += (unsigned long long)(k[iter->second])*(unsigned long long)f*(unsigned long long)c[iter->second];
				break;
			}
		}
		++iter;
	}
	delete[] c;
	delete[] k;
	delete[] p;
	cout << ans;
	return 0;
}