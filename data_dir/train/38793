#include <iostream>
#include <algorithm>
#include <math.h>
#include <string>
#include <set>

using namespace std;

const int INF = -1e9;
const int sze = 2 * 1e5 + 5;
int cnt[sze] = {0};
char s[sze] = "eiouaEOIUA\0";
set <char> vowels;

int write(int length);




int main()
{
	for (int i = 0; i < strlen(s); i++)
		vowels.insert(s[i]);

	cin >> s;
	for (int i = 0; i < strlen(s); i++)
		if (vowels.find(s[i]) != vowels.end())
			cnt[i + 1] = cnt[i] - 1;
		else
			cnt[i + 1] = cnt[i] + 2;

	int n = strlen(s) + 1;
	int k = int(pow(n, 0.5));

	int *mx;
	mx = new int[n / k + 1];

	for (int i = 0; i < n / k + 1; i++)
		mx[i] = INF;

	for (int i = 0; i < n; i++)
		mx[i / k] = max(mx[i / k], cnt[i]);


	int ans = 0;
	for (int j = 1; j <= n; j++)
		for (int i = n / k; i >= 0; i--)
			if (j / k == i)
			{
				for (int z = min(n - 1, (i + 1) * k - 1); z >= j; z--)
					if (cnt[z] >= cnt[j - 1])
					{
						ans = max(ans, z - j + 1);
						break;
					}
			}
			else if (mx[i] >= cnt[j - 1])
				for (int z = min(n - 1, (i + 1) * k - 1); z >= i * k; z--)
					if (cnt[z] >= cnt[j - 1])
					{
						ans = max(ans, z - j + 1);
						break;
					}

	if (ans)
	{
		cout << ans << ' ';
		write(ans);
	}
	else
		cout << "No solution";

	return 0;
}


int write(int length)
{
    int cntv = 0;
	int cntc = 0;
    int cnt = 0;
    
    for (int i = 0; i < length; i++)
        if (vowels.find(s[i]) != vowels.end())
            cntv += 1;
        else
            cntc += 1;

    if (cntc * 2 >= cntv)
        cnt += 1;
    
    for (int i = length; i < strlen(s); i++)
	{
        if (vowels.find(s[i - length]) != vowels.end())
            cntv -= 1;
        else
            cntc -= 1;
        
        if (vowels.find(s[i]) != vowels.end())
            cntv += 1;
        else
            cntc += 1;     
    
        if (cntc * 2 >= cntv)
            cnt += 1;
	}

	cout << cnt;
        
	return 0;
}