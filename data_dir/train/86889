#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
using namespace std;

double dp[10000][1001];
int k, q;
double eps = 1e-7;

double solve(int day, int currK) {
	if (currK == k) return 1;
	else if (day == 0) return 0;
	else if (dp[day][currK] > -0.5) return dp[day][currK];
	else {
		return dp[day][currK] = (((double) k - currK) / k) * solve(day - 1, currK + 1) + ((double) currK) / k * solve(day - 1, currK);
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	for (int i = 0; i < 10000; i++) {
		for (int j = 0; j <= 1000; j++) {
			dp[i][j] = -1;
		}
	}
	
	cin >> k >> q;
	for (int i = 0; i < q; i++) {
		int p;
		cin >> p;
		for (int i = 1; i < 10000; i++) {
			double currP = solve(i, 0);
			if (currP >= (p - eps) / 2000) {
				cout << i << "\n";
				break;
			}
		}
	} 
	
	return 0;
}