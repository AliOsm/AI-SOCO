#include <bits/stdc++.h>
using namespace std;

//.define
//#define FILE_IN_OUT
#define RET(_x)                       return std::cout << (_x) << '\n', 0;
#define all(_obj)                     (_obj).begin(), (_obj).end()
#define loop(_n)                      for (int i = 0; i < (_n); ++i)
#define ceilDiv(_dividend, _divider)  (((_dividend) - 1LL + (_divider)) / (_divider))
#define has(_obj, _val)               ((_obj).find((_val)) != (_obj).end())
#define sz(_obj)                      static_cast<int>((_obj).size())
#define debug(_x)                     std::cerr << (#_x) << " = " << (_x) << '\n';
#define endl                          "\n"
template<typename Tp>
inline void outarr(Tp _array, const std::size_t _N, const char* _delim = " ") {
    Tp end = std::next(_array, _N);
    for (Tp current = _array; current != end; ++current) {
        std::cout << *current << _delim;
    }
    std::cout << '\n';
}

//.constant
using ll  = int64_t;
using pii = std::pair<int, int>;
constexpr int INF = 0x3f3f3f3f;
constexpr int MOD = static_cast<const int>(1e9 + 7);

//.data
string a, b;
map<char, int> cnt;

//.code
int main() {
#ifdef FILE_IN_OUT
    std::ifstream cin ("input.txt",  std::ios::in);
    std::ofstream cout("output.txt", std::ios::out);
#else
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif

    int n;
    cin >> n >> a >> b;
    int ans = 0;
    loop(n >> 1) {
        ++cnt[a[i]];
        ++cnt[a[n - i - 1]];
        ++cnt[b[i]];
        ++cnt[b[n - i - 1]];
        switch (sz(cnt)) {
            case 2: {
                if (cnt[a[i]] & 1) {
                    ++ans;
                }
                break;
            }
            case 3: {
                if (a[i] == a[n - i - 1]) {
                    ans += 2;
                } else {
                    ++ans;
                }
                break;
            }
            case 4: {
                ans += 2;
                break;
            }
        }
        cnt.clear();
    }
    if (n & 1) {
        if (a[n >> 1] != b[n >> 1]) {
            ++ans;
        }
    }
    cout << ans << endl;

#ifdef FILE_IN_OUT
    cin.close();
    cout.close();
#endif
    return 0;
}