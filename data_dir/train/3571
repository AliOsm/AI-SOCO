#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath>
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<math.h>
#include<sstream>	
#include<cstdio>
using namespace std;

const double EPS = 1e-7;
const double PI = acos(-1.0);
const double ZERO = 0;
const double DOUBLE_MAX = 1/ZERO;
typedef complex<double> point;
#define X real()
#define Y imag()
#define rad(p) (atan2((p.Y),(p.X)))
#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define length(a) hypot((a).X,(a).Y)
#define normalize(p) ((p)/length(p))
#define rotate(p,origin,ang) (((p)-(origin))*exp(point(0,(ang)))+(origin))
#define collinear(a,b,c) ( fabs( cross((a)-(b),(c)-(b))) < EPS)
#define bisector(a,b) (((a)+(b))/2.0) // return the mid point
#define polar(r,theta) (point((r),0)*exp(point(0,(theta))))

#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define inf (0x7fffffff)
#define mp make_pair
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
typedef  long long ll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef   double ld;

vector<pair<int,ii> > b,s;
int main(){
	//read;
	int n,S;
	cin>>n>>S;
	char c;
	int p,q;
	rep(j,n){
		cin>>c>>p>>q;
		if( c=='B'){
			bool ok=0;
			rep(i,b.size())if(b[i].first==p) { ok=1 ; b[i].second.first+=q;break;}
			if(!ok)b.push_back(mp(p,mp(q,j)));
		}
		else {
			bool ok=0;
			rep(i,s.size())if(s[i].first==p) { ok=1 ; s[i].second.first+=q;break;}
			if(!ok)s.push_back(mp(p,mp(q,j)));
		}
	}
	sort(b.begin(),b.end());
	sort(s.begin(),s.end());
	vector<ii> v;
	for(int i=0;i<S && i<s.size(); i++)v.push_back(mp(s[i].second.second , i));
	sort(v.begin(),v.end());
	//rep(i,v.size())cout<<"S "<<s[ v[i].second ].first << " "<< s[ v[i].second].second.first<<endl;
	v=vector<ii> ();
	for(int i=0;i<S && i<s.size(); i++)  v.push_back(mp(s[i].first,s[i].second.first));//cout<<"S "<<s[i].first<<" "<<s[i].second.first<<endl;
	sort(v.begin(),v.end());
	for(int i=v.size()-1;i>=0;i--) cout<<"S "<<v[i].first<< " "<<v[i].second<<endl;
	//for(int i=b.size()-1 , k=S ; i>=0 && k ; k-- , i--) v.push_back(mp(b[i].second.second , i ));
	//if(v.size()==  S){ 
//		for(int i=b.size()-S-1 ; i>=0; i--)if(b[i].first == b[b.size()-S].first ) v.push_back(mp(b[i].second.second , i ));
	//}
	//sort(v.begin(),v.end());
	//for(int i=0;i<v.size() && i< S ;i++) cout<<"B "<<b[v[i].second].first<<" "<<b[v[i].second].second.first<<endl;
	for(int i=b.size()-1 , k=S ; i>=0 && k ; k-- , i--) cout<<"B "<<b[i].first<<" "<<b[i].second.first<<endl;
}