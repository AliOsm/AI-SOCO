#include<bits/stdc++.h> 
#include<unordered_map>
using namespace std;
typedef long long ll;
const int Max = 2e5 + 5, Mod = 1e9 + 7;

int n;
bool taken[Max];
struct point
{
	int x, y, z, idx;
	bool operator<(point& a)
	{
		if (x != a.x)
			return x < a.x;
		if (y != a.y)
			return y < a.y;
		return z < a.z;
	}
};
vector<point> p, temp;
int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		point a;
		cin >> a.x >> a.y >> a.z;
		a.idx = i;
		p.push_back(a);
	}
	sort(p.begin(), p.end());
	for (int i = 1; i < n; i++)
	{
		point& a = p[i];
		point& b = p[i - 1];
		if (a.idx == -1 || b.idx == -1)
			continue;
		if (a.x == b.x && a.y == b.y)
		{
			cout << a.idx << ' ' << b.idx << '\n';
			a.idx = b.idx = -1;
		}
	}
	for (auto i : p)
		if (i.idx != -1)
			temp.push_back(i);
	p = temp;
	temp.clear();
	n = p.size();
	for (int i = 1; i < n; i++)
	{
		point& a = p[i];
		point& b = p[i - 1];
		if (a.idx == -1 || b.idx == -1)
			continue;
		if (a.x == b.x)
		{
			cout << a.idx << ' ' << b.idx << '\n';
			a.idx = b.idx = -1;
		}
	}
	for (auto i : p)
		if (i.idx != -1)
			temp.push_back(i);
	p = temp;
	n = p.size();
	temp.clear();
	for (int i = 1; i < n; i++)
	{
		point& a = p[i];
		point& b = p[i - 1];
		if (a.idx == -1 || b.idx == -1)
			continue;
		cout << a.idx << ' ' << b.idx << '\n';
		a.idx = b.idx = -1;
	}

	return 0;
}