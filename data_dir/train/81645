#include <bits/stdc++.h>


using namespace std;

const int maxn = 1e6 + 10;

pair < int, int > a[maxn];
pair < int, int > b[maxn];

long long suma = 0;
long long sumb = 0;

int p1 = 1;
int p2 = 1;

int n = 0;

vector < pair < int, pair <int, int> > > tmp;

void solve() {
    sort(tmp.begin(), tmp.end());
    for (int i = 0; i < tmp.size() - 1; i++) {
        if (tmp[i].first == tmp[i + 1].first) {
            int l1 = min(tmp[i].second.first, tmp[i + 1].second.first);
            int r1 = max(tmp[i].second.first, tmp[i + 1].second.first);
            int l2 = min(tmp[i].second.second, tmp[i + 1].second.second);
            int r2 = max(tmp[i].second.second, tmp[i + 1].second.second);
            printf("%d\n", r1 - l1);
            for (int j = l1 + 1; j <= r1; j++)
                printf("%d ", a[j].second - 1);
            printf("\n");
            printf("%d\n", r2 - l2);
            for (int j = l2 + 1; j <= r2; j++)
                printf("%d ", b[j].second - 1);
            exit(0);
        }
    }
}

void check() {
    if (suma - sumb >= 0 && suma - sumb < n) {
        tmp.push_back({suma - sumb, {p1 - 1, p2 - 1}});
    }
    if (tmp.size() >= n) {
        solve();
    }
}

map < int, int> pos;


int main() {

    scanf("%d", &n);

    tmp.push_back({0, {0, 0}});

    for (int i = 1; i <= n; i++) {
        scanf("%d", &a[i].first);
        a[i].second = i + 1;
        pos[a[i].first] = i;
    }

    for (int i = 1; i <= n; i++) {
        scanf("%d", &b[i].first);
        b[i].second = i + 1;
        if (pos[b[i].first] != 0) {
            cout << 1 << endl;
            cout << pos[b[i].first] << endl;
            cout << 1 << endl;
            cout << i << endl;
            return 0;
        }
    }

    sort(a + 1, a + n + 1);
    reverse(a + 1, a + n + 1);
    sort(b + 1, b + n + 1);
    reverse(b + 1, b + 1 + n);


    while (p1 <= n || p2 <= n) {
        if (suma - sumb < 0) {
            if (p1 <= n) {
                suma += a[p1].first;
                p1++;
                check();
                continue;
            }
            if (p2 <= n) {
                sumb += b[p2].first;
                p2++;
                continue;
            }
        }
        if (suma - sumb >= n) {
            if (p2 <= n) {
                sumb += b[p2].first;
                p2++;
                check();
                continue;
            }
            if (p1 <= n) {
                suma += a[p1].first;
                p1++;
                continue;
            }
        }
        if (p1 <= n && p2 <= n) {
            if (a[p1].first < b[p2].first) {
                suma += a[p1].first;
                p1++;
                check();
                continue;
            } else {
                sumb += b[p2].first;
                p2++;
                check();
                continue;
            }
        }
        if (p1 <= n) {
            suma += a[p1].first;
            p1++;
            check();
            continue;
        }
        if (p2 <= n) {
            sumb += b[p2].first;
            p2++;
            check();
            continue;
        }
    }
    solve();
}