#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N = 2e3+10;

int n, m, p[N];
struct data{
	int a, b;
	bool operator<(data o) const {
		return p[a] - p[b] > p[o.a] - p[o.b];
	}
}arr[N];

int must[N], taken[N];
void my(int prev) {
	if(prev != -1 && must[prev] != -1) {
		if(taken[must[prev]]) goto did;
		printf("%d\n", must[prev]); fflush(stdout);
		taken[must[prev]] = 1;
		return;
	}
	did:
	for(int i = 0; i < m; i++) {
		if(!taken[arr[i].b]) {
			printf("%d\n", arr[i].b); fflush(stdout);
			taken[arr[i].b] = 1;
			return;
		}
	}
	int mx = -1, pos;
	for(int i = 1; i <= n + n; i++) {
		if(!taken[i] && p[i] > mx)
			mx = p[i], pos = i;
	}
	printf("%d\n", pos); fflush(stdout);
	taken[pos] = 1;
}

int com() {
	int x;
	scanf("%d", &x);
	taken[x] = 1;
	return x;
}

int main() {
	memset(must,-1,sizeof must);
	scanf("%d %d", &n, &m);
	for(int i = 1; i <= n + n; i++) {
		scanf("%d", &p[i]);
	}
	for(int i = 0; i < m; i++) {
		int a, b; scanf("%d %d", &a, &b);
		if(p[a] > p[b]) arr[i] = {b,a};
		else arr[i] = {a,b};
		must[a] = b;
		must[b] = a;
	}
	sort(arr,arr+m);

	int who; scanf("%d", &who);
	if(who == 1) {
		int prev = -1;
		for(int i = 0; i < n; i++) {
			my(prev);
			prev = com();
		}
	} else {
		int prev = -1;
		for(int i = 0; i < n; i++) {
			prev = com();
			my(prev);
		}
	}

	return 0;
}