#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))
#define INF 30000

using namespace std;

const int maxn = 2*1000+10;
long long int n, k, s, f, mid, arr[maxn], dp[maxn];

long long int ABS (long long int a)
{
    if (a < 0)
        return -a;
    return a;
}

bool t (long long int m)
{
    if (k >= n-1)
        return 1;
    for (long long int i = 1; i < n; i++)
    {
        dp[(int)i] = i;
        for (long long int j = i-1; j >= 0; j--)
        {
            if (ABS(arr[(int)i]-arr[(int)j]) <= (i-j)*m)
                dp[(int)i] = min(dp[(int)i], dp[(int)j]+i-j-1);
        }
        if (dp[(int)i] + n - 1 - i <= k)
            return 1;
    }
    return 0;
}

int main()
{
    cin >> n >> k;
    for (int i = 0; i < n; i++)
        cin >> arr[i];
    s = -1;
    f = 2*1000*1000*1000;
    while (f - s > 1)
    {
        mid = (s + f) / 2;
        if (t(mid))
            f = mid;
        else
            s = mid;
    }
    cout << f;
    return 0;
}