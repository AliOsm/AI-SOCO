#include <bits/stdc++.h>
#define ff first
#define ss second
using namespace std;
#define MP make_pair
#define PB push_back
#define ll long long
#define int long long
#define f(i,x,n) for(int i=x;i<n;i++)
#define ld long double
#define mod 1000000007

int a[2001][2001];
priority_queue <array <int,3>,vector <array <int,3> >, greater <array <int,3> >  > pq;
vector <int> gp[2001];

#define SZ 2001
int A[SZ],sz[SZ];
void init(int n)
{
	f(i,0,n+1)
	{
		sz[i]=1;
		A[i]=i;
	}
}
int find(int i) 
{
	while (A[i] != i) 
	{
		A[i] = A[A[i]];
		i = A[i];
	}
	return i; 
} 
int _union(int xr, int yr) 
{ 
	xr=find(xr),yr=find(yr);
	if(xr==yr)
		return -1;
	if(sz[xr] < sz[yr])
	{ 
		A[xr] = A[yr]; 
		sz[yr] += sz[xr]; 
	}
	else
	{
		A[yr] = A[xr]; 
		sz[xr] += sz[yr]; 
	}
	return 0;
}
int flag=0;
int dfs(int i,int j,int par,int dist)
{
	if(a[i][j]!=dist||a[j][i]!=dist)
	{
		// cout<<i<<" "<<j<<" "<<par<<" "<<dist<<endl;
		flag=1;
		return 0;
	}
	if(i!=j&&dist==0)
	{
		flag=1;
		return 0;
	}
	for(int k: gp[j])
	{
		if(k!=par)
		{
			dfs(i,k,j,dist+a[j][k]);
		}
	}
	return 0;
}

int32_t main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	init(2000);
	int n;
	cin>>n;
	f(i,1,n+1)
		f(j,1,n+1)
			cin>>a[i][j];
	f(i,1,n+1)
		f(j,1,n+1)
		{
			if(i==j&&a[i][j]!=0)
			{
				cout<<"NO"<<endl;
				return 0;
			}
			else if(a[i][j]!=a[j][i])
			{
				cout<<"NO"<<endl;
				return 0;
			}
		}
	f(i,1,n+1)
	{
		f(j,i+1,n+1)
		{
			pq.push({a[i][j],i,j});
		}
	}
	while(!pq.empty())
	{
		auto tp=pq.top();
		pq.pop();
		if(_union(tp[1],tp[2])==0)
		{
			gp[tp[1]].push_back(tp[2]);
			gp[tp[2]].push_back(tp[1]);
		}
	}
	// f(i,1,n+1)
	// {
	// 	for(int j: gp[i])
	// 	{
	// 		cout<<j<<" ";
	// 	}
	// 	cout<<endl;
	// }
	f(i,1,n+1)
	{
		dfs(i,i,0,0);
	}
	if(flag==1)
	{
		cout<<"NO"<<endl;
	}
	else
	{
		cout<<"YES"<<endl;
	}
	return 0;
}