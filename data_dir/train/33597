#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
#define ii pair<int,int>
#define ll long long
#define pll pair<ll,ll>
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define iiordered_set tree<pll, null_type,less<pll>, rb_tree_tag,tree_order_statistics_node_update>
using namespace std;
#define MOD 1000000007
ll power(ll a,ll b, ll m=MOD)
{
	a%=MOD;
    ll res=1;
    while(b>0)
    {
        if(b&1)
            res=(res*a)%m;
        a=(a*a)%m;
        b>>=1;
    }
    return res%m;
}
ll inverse(ll a,ll m=MOD)
{
	a%=MOD;
    return power(a,m-2,m);
}
#define INFl 1e18
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define vvl vector<vl>
#define vii vector<ii>
#define vvii vector<vii>
#define F first
#define S second
#define forl(i,n) for(int i=0;i<n;i++)
#define fore(i,n) for(int i=1;i<=n;i++)
#define rforl(i,n)  for(int i=n-1;i>=0;i--)
#define rfore(i,n)  for(int i=n;i>=1;i--)
#define CASE(t) cout<<"Case #"<<(t)<<": ";
#define INF 1100000009
#define gcd(a,b) __gcd(a,b)
#define all(x)  x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define print(x)    for(auto it=x.begin();it!=x.end();it++) cout<<*it<<' '; cout<<endl;
#define printii(x)  for(auto it=x.begin();it!=x.end();it++) cout<<it->F<<' '<<it->S<<endl;  
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
const int maxn=200005;
ll f[maxn],invf[maxn];
void precalc()
{
    f[0]=1;
    for(int i=1;i<maxn;i++)
        f[i]=(f[i-1]*i)%MOD;
    for(int i=0;i<maxn;i++)
        invf[i]=power(f[i],MOD-2);
}
ll nCr(int n,int r)
{
    if(n<r || n<0)
        return 0;
    ll res=f[n]*invf[n-r];
    res%=MOD;
    res*=invf[r];
    res%=MOD;
    return res;
}
int main()
{
	precalc();
	int n,k;
	cin>>n>>k;
	if(k==1)
	{
		cout<<1<<endl;
		return 0;
	}
	ll sum=0;
	for(int i=0;i<=n;i++)
	{
		ll temp=nCr(n,i)*power(k-1,n*i)%MOD;
		temp=temp*power(((MOD+(power(k,n-i)-power(k-1,n-i))%MOD)%MOD),n)%MOD;
		sum=(sum+(i%2?-temp:temp))%MOD;
		if(sum<0)	sum+=MOD;
	}
	cout<<sum<<endl;
}