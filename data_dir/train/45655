/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef pair<int, int> pi;
class ProblemDPairOfLines {
public:
	vector<pi> P;
	bool colinear(pi a, pi b, pi c){
		return 1LL*(b.first-a.first)*(b.second-c.second) == 1LL*(b.first-c.first)*(b.second-a.second);
	}
	bool wow(pi a, pi b){
		vector<pi> others;
		for(auto x: P) if(!colinear(a, b, x)) others.push_back(x);
		for(int i = 2; i<others.size(); ++i) if(!colinear(others[0], others[1], others[i])) return false;
		return true;
	}
	void solve(std::istream& in, std::ostream& out) {
        int n; in>>n;
		for(int i = 0; i<n; ++i){
			int x, y; in>>x>>y;
			P.emplace_back(x, y);
		}
		if(n<=4){
			out<<"YES";
			return;
		}
		if(wow(P[0], P[1]) or wow(P[0], P[2]) or wow(P[1], P[2])) out<<"YES";
		else out<<"NO";
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ProblemDPairOfLines solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
