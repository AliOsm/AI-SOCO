#include <bits/stdc++.h>

using namespace std;

#define endl           '\n'
#define LL             long long
#define ULL            unsigned long long
#define all(x)         x.begin(), x.end()

const LL MOD = 1000000007;
const LL LINF = 0x3f3f3f3f3f3f3f3fLL;
const int INF = 0x3f3f3f3f;
const int N = 1e5 + 5;

int a[N];

int main() {
    int n, k;
    scanf("%d%d", &n, &k);
    for (int i = 0; i < n; i++) scanf("%d", a + i);
    int best = 1, from = 0;
    for (int i = 1, need = a[0] + k; i < n; i++) {
        if (a[i] == need) best++;
        need += k;
    }
    for (int i = 1; i < n; i++) {
        if (a[i] <= k * i) continue;
        int cc = 1, need = a[i] + k;
        for (int j = i + 1; j < n; j++, need += k) {
            if (a[j] == need) cc++;
        }
        if (best < cc) best = cc, from = i;
    }
    printf("%d\n", n - best);
    int need = a[from] + k;
    for (int i = from + 1; i < n; i++) {
        if (a[i] > need) {
            printf("- %d %d\n", i + 1, a[i] - need);
        } else if (a[i] < need) {
            printf("+ %d %d\n", i + 1, need - a[i]);
        }
        need += k;
    }
    need = a[from] - k;
    for (int i = from - 1; i >= 0; i--) {
        if (a[i] > need) {
            printf("- %d %d\n", i + 1, a[i] - need);
        } else if (a[i] < need) {
            printf("+ %d %d\n", i + 1, need - a[i]);
        }
        need -= k;
    }
    return 0;
}