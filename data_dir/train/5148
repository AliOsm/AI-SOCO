#include <bits/stdc++.h>
#define ll long long
#define fr first
#define sc second
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll,ll>

using namespace std;

const int N = 2e5+100;

int a[N];

pii sor[N];

int le[N],ri[N];

int mx[N*4];
int laz[N*4];

void up(int p){
    if(!laz[p])return;
    mx[2*p] += laz[p];
    laz[2*p] += laz[p];
    mx[2*p+1] += laz[p];
    laz[2*p+1] += laz[p];
    laz[p] = 0;
}
int n;

void add(int a,int b,int x,int l=1,int h=n,int p = 1){
    if(a == l &&b == h){
        mx[p] += x;
        laz[p] += x;
        return;
    }
    int m = (l+h)/2;
    up(p);
    if(b <= m){
        add(a,b,x,l,m,2*p);
    }
    else if(a > m){
        add(a,b,x,m+1,h,2*p+1);
    }
    else{
        add(m+1,b,x,m+1,h,2*p+1);
        add(a,m,x,l,m,2*p);
    }
    mx[p] = max(mx[2*p],mx[2*p+1]);
}


int cal(int in,int l=1,int h=n,int p = 1){
    if(l == h){
        return mx[p];
    }
    int m = (l+h)/2;
    up(p);
    if(in <= m)
        return cal(in,l,m,2*p);
    return cal(in,m+1,h,2*p+1);
}

int main(){

    cin>>n;
    for(int i=1; i <=n ;i++){
        scanf("%d",&a[i]);
        sor[i] = {a[i],i};
    }

    sort(sor+1,sor+1+n);
    set<int>inds;
    set<int>::iterator it;
    inds.insert(sor[1].sc);
    for(int i=2 ;i <=n ;i ++){
        it = inds.lower_bound(sor[i].sc);

        if(it == inds.end())
            ri[sor[i].sc] = *inds.begin();
        else
            ri[sor[i].sc] = *it;

        if(it == inds.begin())
            le[sor[i].sc] = *(--inds.end());
        else
            le[sor[i].sc] = *(--it);

        inds.insert(sor[i].sc);
    }

    for(int i=1 ;i <=n ;i ++){
        int st = 1,en = n;
        if(a[i]-1 && le[i] < i)st = le[i]+1;
        if(a[i]-1 && ri[i] > i)en = ri[i]-1;
        if(en >= st)
            add(st,en,1);
    }
    pii res = {mx[1],0};
   /* for(int j=1 ;j <=n ;j ++){
        cout<<cal(j)<<" ";
    }
    cout<<endl;*/
    for(int i=1 ; i<=n ;i ++){


        if(a[i] == 1)continue;
        if(i < ri[i])
            add(i,ri[i]-1,-1);
        else{
            add(i,n,-1);
            if(ri[i] > 1)
                add(1,ri[i]-1,-1);
        }

        int vl = cal(le[i]);
        add(i,i,vl-cal(i));
        if(le[i] < i){
            add(le[i]+1,i,1);
        }
        else{
            if(le[i]+1 < n)
                add(le[i]+1,n,1);
            add(1,i,1);
        }
        res = min(res,{mx[1],i});
       /* for(int j=1 ;j <=n ;j ++){
            cout<<cal(j)<<" ";
        }
        cout<<endl;*/
    }
    cout<<res.fr<<" "<<res.sc<<endl;
    return 0;
}
