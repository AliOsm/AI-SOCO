#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const ll N=2e5 + 5;
const ll mod=1e9 + 7;
#define debug(x) cerr<<#x<<" is "<<x<<endl;
ll n,u,v,arr[N],ans[N],cnt[N];
vector<ll> adj[N] , fact[N];
void add(ll x,ll c){
    for(ll i=0;i<fact[x].size();i++)cnt[fact[x][i]]+=c;
}
ll solve(ll x,ll req){
    ll res=0;
    for(ll i=0;i<fact[x].size();i++)
        if(cnt[fact[x][i]]>=req)
            res = max(res,fact[x][i]);
    return res;
}
void dfs(ll src,ll h,ll pr){
    add(arr[src],1);
    if(pr==-1)
        ans[src]=arr[src];
    else
        ans[src]=max( solve(arr[src],h-1),solve(arr[pr],h-1) );

    for(ll i=0;i<adj[src].size();i++)
        if(adj[src][i]!=pr)
            dfs(adj[src][i],h+1,src);
    add(arr[src],-1);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin>>n;
    for(ll i=1;i<=n;i++)cin>>arr[i];
    for(ll i=0;i<n-1;i++){
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for(ll i=1;i<N;i++)
        for(ll j=i;j<N;j+=i)
        fact[j].push_back(i);
    dfs(1,1,-1);
    for(ll i=1;i<=n;i++)cout<<ans[i]<<" ";
}
