/*input
1
3 3
1 2 3

*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
#define PI 3.14159265
#define endl '\n'
#define debug(x) cout << #x << " = " << x << endl;
#define MAX 100001

template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(ll a, ll b) {a += b; if (a < 0) a += mod; return a;}
inline int sub(ll a, ll b) {a -= b; if (a < 0) a += mod; return a;}
inline int mul(ll a, ll b) {return (a * 1ll * b) % mod;}
inline int pwr(ll x, ll y) {
    int ans = 1 % mod;
    while (y) {
        if (y & 1) ans = mul(ans, x);
        x = mul(x, x);
        y >>= 1;
    }
    return ans;
}
inline int inv(int a) {return pwr(a, mod - 2);}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    string str1, str2;
    cin >> str1 >> str2;
    map <char, vector <int> > mp1, mp2;
    for (int i = 0; i < n; i++) {
        mp1[str1[i]].pb(i + 1);
    }
    for (int i = 0; i < n; i++) {
        mp2[str2[i]].pb(i + 1);
    }
    vector <PII> ans;
    vector <int> done1(n + 1, 0), done2(n + 1, 0);
    for (char c = 'a'; c <= 'z'; c++) {
        int m = min(mp1[c].size(), mp2[c].size());
        for (int j = 0; j < m; j++) {
            ans.pb({mp1[c][j], mp2[c][j]});
            done1[mp1[c][j]] = 1;
            done2[mp2[c][j]] = 1;
        }
    }
    int question_mark = mp2['?'].size();
    for (int i = 0; i < n; i++) {
        if (question_mark && !done1[i + 1] && str1[i] >= 'a' && str1[i] <= 'z') {
            ans.pb({i + 1, mp2['?'][question_mark - 1]});
            done1[i + 1] = 1;
            done2[mp2['?'][question_mark - 1]] = 1;
            question_mark--;
        }
    }
    int qm = question_mark;
    question_mark = mp1['?'].size();
    for (int i = 0; i < n; i++) {
        if (question_mark && !done2[i + 1] && str2[i] >= 'a' && str2[i] <= 'z') {
            ans.pb({mp1['?'][question_mark - 1], i + 1});
            done2[i + 1] = 1;
            done1[mp1['?'][question_mark - 1]] = 1;
            question_mark--;
        }
    }
    qm -= 1;
    question_mark -= 1;
    while (qm >= 0 && question_mark >= 0) {
        ans.pb({mp1['?'][question_mark--], mp2['?'][qm--]});
    }
    cout << ans.size() << endl;
    for (auto it : ans) {
        cout << it.first << " " << it.second << endl;
    }

    return 0;
}