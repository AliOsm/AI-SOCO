#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define oo 1234567890

map<int,int>bad,cache;
int a[5005];
int beauty[5005];
int gcd[5005];
int dp[5005][5005];
int n,m;

int f(int s)
{
    if(cache.count(s))return cache[s];
    int originalS = s;

    int res = 0;
    for(int d=2; d*d<=s; d++)
        while(s%d==0)
        {
            res+=(bad.count(d) ? -1 : 1);
            s/=d;
        }

    if(s > 1)res+=(bad.count(s) ? -1 : 1);

    return cache[originalS]=res;
}

int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin>>n>>m;

    for(int i=1; i<=n; i++)
        cin>>a[i];

    for(int j=1,x; j<=m; j++)
        cin>>x,bad[x]=1;

    for(int i=1; i<=n; i++)
        {
            beauty[i]=f(a[i]) + beauty[i-1];
            gcd[i]=(i==1 ? a[i] : __gcd(gcd[i-1],a[i]));
        }

    for(int i=0; i<=n+1; i++)
    for(int j=0; j<=n+1; j++)
        dp[i][j]=-oo;

    dp[n+1][n+1]=beauty[n];
    int ats = beauty[n];

    for(int i=n; i>=1; i--)
        for(int j=n+1; j>i; j--)
        {
            dp[i][j]=dp[i+1][j];
            dp[i][i]=max(dp[i][i], dp[i+1][j] - i*(f(gcd[i]) - (j==n+1 ? 0 : f(gcd[j]))));
            ats=max(ats,max(dp[i][j],dp[i][i]));
        }

    cout<<ats;
}
