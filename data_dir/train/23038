#pragma GCC optimize("O2")
#include <bits/stdc++.h>
using namespace std;
typedef long long                   ll;
typedef long double                 ld;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<double,double>         pdd;
typedef pair<ld,ld>                 pld;
typedef pair<string , string>       pss;
#define ts(x)                       to_string(x)
#define ti(x)                       stoi(x)
#define all(x)                      (x).begin(),(x).end()
#define F                           first
#define S                           second
#define Mp                          make_pair
#define tab                         '\t'
#define sep                         ' '
#define mine(v)                     *min_element(all(v))
#define maxe(v)                     *max_element(all(v))
#define error(x)                    cerr << #x << " = " << x << endl
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define file_io                     freopen("in.txt" , "r+" , stdin) ; freopen("out.txt" , "w+" , stdout);
#define SIZE(x)                     (int)x.size()
#define endl                        "\n"
inline ll input(){ll n; cin >> n ; return n;}
string base2(ll n){string a = "";while(n >= 2){a += (char)(n % 2 + '0');n /= 2;}a += (char)(n + '0');reverse(all(a));return a;}

const int MAXN = 500 + 10;
const int MOD = 1e9 + 7;
const int MOD2 = 998244353;
const ll INF = 8e18;

ll pw(ll a , ll b)  { return (!b ? 1 : (b & 1 ? (a * pw(a * a % MOD, b / 2)) % MOD : pw(a * a % MOD, b / 2))); }

bool M[MAXN][MAXN];

ll n, light[MAXN][MAXN], mark[MAXN][MAXN], mark2[MAXN][MAXN];

vector<pii> g[MAXN][MAXN];

set<ll> H[MAXN], V[MAXN];

string ans;

bool check(ll x, ll y){
    if(1 <= x && x <= n && 1 <= y && y <= n) return 1;
    return 0;
}

void DFS(int x, int y){
    mark[x][y] = 1;
    if(!light[x][y]){
        light[x][y] = 1;
        ans += "1";
        V[x].insert(y);
        H[y].insert(x);
    }
    std::set<ll>::iterator itr = H[y].begin();
    if(check(x - 1, y) && !mark[x - 1][y] && itr != H[y].end() && *itr <= x - 1){
        ans += 'U';
        DFS(x - 1, y);
        ans += '2';
        V[x - 1].erase(y);
        H[y].erase(x - 1);
        ans += 'D';
    }
    itr = H[y].end();itr --;
    if(check(x + 1, y) && !mark[x + 1][y] && itr != H[y].end() && *itr >= x + 1){
        ans += 'D';
        DFS(x + 1, y);
        ans += '2';
        V[x + 1].erase(y);
        H[y].erase(x + 1);
        ans += 'U';
    }
    itr = V[x].begin();
    if(check(x, y - 1) && !mark[x][y - 1] && itr != V[x].end() && *itr <= y - 1){
        ans += 'L';
        DFS(x, y - 1);
        ans += '2';
        V[x].erase(y - 1);
        H[y - 1].erase(x);
        ans += 'R';
    }
    itr = V[x].end();itr --;
    if(check(x, y + 1) && !mark[x][y + 1] && itr != V[x].end() && *itr >= y + 1){
        ans += 'R';
        DFS(x, y + 1);
        ans += '2';
        V[x].erase(y + 1);
        H[y + 1].erase(x);
        ans += 'L';
    }

    return;
}

int main(){
    fast_io;
    //cout << fixed << setprecision(15);
    //scanf("%d %d %f %lld %s %c", &x);
    //printf("%d %d %f %lld %s %c", x);
    ll x, y;
    cin >> n >> x >> y;
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            cin >> M[i][j];
            light[i][j] = M[i][j];
            if(M[i][j]){
                V[i].insert(j);
                H[j].insert(i);
            }
        }
    }

    DFS(x, y);

    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= n; j++){
            if(!mark[i][j] && M[i][j]){
                return cout << "NO", 0;
            }
        }
    }
    cout << "YES" << endl;
    cout << ans << 2;

    return 0;
}


