#include <bits/stdc++.h>

using namespace std;

const int MAX = 55 ;

int n , m ;

long double dp[MAX][MAX][MAX] ;

int arr[MAX] ;

int vis[MAX][MAX][MAX] ;

long long C[MAX][MAX];
void nCr()
{
    C[0][0] = 1 ;
    for(int i = 0 ; i < MAX ; i++)
    {
        for(int j = 0 ; j <= i ; j++)
        {
            if(i == 0 && j == 0)
                continue;
            long long x = 0 , y = 0 ;
            x = C[i-1][j] ;
            if(j > 0)
                y = C[i-1][j-1] ;
            C[i][j] = x + y ;
        }
    }
}

long double solve(int idx , int rem , int MX)
{
    if(idx == m)
    {
        if(rem == 0)
            return (MX * 1.000) ;
        else
            return 0.00 ;
    }
    long double &ret = dp[idx][rem][MX] ;
    if(ret == ret)
        return ret ;
    ret = 0.00 ;
    long double p = 1.00 ;
    for(int i = 0 ; i <= rem ; ++i)
    {
        int now = (i + arr[idx] - 1) / arr[idx] ;
        ret += (C[rem][i] * 1.00) * p * solve(idx+1 , rem - i , max(MX , now)) ;
        p /= (m * 1.00) ;
    }
    return ret ;
}

int main()
{
    nCr() ;
    memset(dp , -1 , sizeof(dp)) ;
    cin>>n>>m ;
    for(int i = 0 ; i < m ; ++i)
        cin>>arr[i] ;
    return cout<<fixed<<setprecision(12)<<solve(0 , n , 0)<<"\n" , 0 ;
}
