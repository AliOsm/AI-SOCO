#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair <int, int> pii;
 
const int N = 2e5 + 10, mod = 1e8;


void solve() {
	int n, T, a, b;
	cin >> n >> T >> a >> b;
	vector <pii> p(n + 1);
    vector <int> type(n);
    int cntA = 0, cntB = 0;
    for (int i = 0; i < n; i++) {
        cin >> type[i];
        if (type[i])
            cntB++;
        else
            cntA++;
    }
	for (int i = 0; i < n; i++) {
        ll t;
        cin >> t;
        p[i] = {t, type[i]};
    }
    p[n] = {T + 1, 0};
    sort(p.begin(), p.end());
    ll cnt1 = 0, cnt2 = 0;
    ll ans = 0;
	for (int i = 0; i <= n; i++) {
	    ll need = cnt1 * a + cnt2 * b;
	    ll can = p[i].first - need - 1;
	    if (can >= 0) {
	        ll can0 = min((cntA - cnt1), can / a);
	        can -= can0 * a;
	        ll can1 = min((cntB - cnt2), can / b);
	        ans = max(ans, cnt1 + cnt2 + can0 + can1);
	    }
	    int j = i;
	    while (j < (int)p.size() && p[j].first == p[i].first) {
	    	if (p[j].second)
	            cnt2++;
	        else
	            cnt1++;
	        j++;
	    }
        i = j - 1;
    }
	cout << ans << "\n";
}

int main() {
	ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	int tc;
	cin >> tc;
	while(tc--)
		solve();
}
