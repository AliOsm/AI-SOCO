//marico el que lo lea
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <stdlib.h>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<int, int> ii;

void fastIO() {
	std::ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
}

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define FORE(i,c) for(auto i = (c).begin(); i != (c).end(); i++)
#define pb push_back
#define all(obj) obj.begin(), obj.end()
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)

#define fst first
#define snd second

template<typename T, typename U> inline void mnze(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void mxze(T &x, U y) { if(x < y) x = y; }

void _scan( int &x ) { scanf("%d",&x); }
void _scan( long long &x ) { scanf("%lld",&x); }
void _scan( double &x ) { scanf("%lf",&x); }
void _scan( char &x ) { scanf(" %c",&x); }
void _scan( char *x ) { scanf("%s",x); }
void scan() {}
template<typename T, typename... U>
void scan( T& head, U&... tail ) { _scan(head); scan(tail...);}

template<typename T> void _dbg(const char* sdbg, T h) { cerr<<sdbg<<"="<<h<<"\n"; }
template<typename T, typename... U> void _dbg(const char* sdbg, T h, U... t) {
	while(*sdbg != ',')cerr<<*sdbg++; cerr<<"="<<h<<","; _dbg(sdbg+1, t...);
}

#ifdef LOCAL
#define debug(...) _dbg(#__VA_ARGS__, __VA_ARGS__)
#define debugv(x) {{cerr <<#x <<" = "; FORE(_i, (x)) cerr <<*_i <<", "; cerr <<"\n"; }}
#define debuga(x, sz) {{cerr <<#x <<" = "; FOR(_i, 0, sz) cerr << x[_i] <<", "; cerr <<"\n"; }}
#else
#define debug(...) (__VA_ARGS__)
#define debugv(x)
#define debuga(x, sz)
#define cerr if(0)cout
#endif

///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////

const int MAXN = 1e5+5;

bool good[30];

int n, m;
char s[MAXN], t[MAXN];

int star;
bool ok;

int go(){
	FOR(i,0,star){
		if(s[i]=='?'){
			if(!good[t[i]-'a']) ok=false;
		}else{
			if(s[i]!=t[i]) ok=false;
		}
	}
	return star-1;
}


int main(){
	scan(s);
	n = strlen(s);
	FOR(i,0,n) good[s[i]-'a']=1;

	scan(s);
	n = strlen(s);
	star = -1;
	FOR(i,0,n) if(s[i]=='*') star = i;

	int q; scan(q);
	while(q--){
		scan(t); m = strlen(t);
		ok = true;
		if(star==-1){
			if(n!=m){
				ok = false;
			}else{
				FOR(i,0,n){
					if(s[i]=='?'){
						if(!good[t[i]-'a']) ok=false;
					}else{
						if(t[i]!=s[i]) ok=false;
					}
				}
			}
		}else{
			if(n-1 > m) ok=false;
			else{
				int l=go();
				reverse(s,s+n);
				reverse(t,t+m);
				star = n-1-star;

				int r=m-1-go();
				reverse(s,s+n);
				reverse(t,t+m);
				star = n-1-star;
				int goodcnt = 0;
				FOR(i,l+1,r) goodcnt += good[t[i]-'a'];
				if(goodcnt) ok=false;
			}
		}
		printf(ok?"YES\n":"NO\n");

	}
}