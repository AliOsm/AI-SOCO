#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
 
#define F first
#define S second
#define sqr(x) ((x) * (x))
#define cub(x) ((x) * (x) * (x))
#define pii pair<int, int>
#define all(c) c.begin(), c.end()
#define tr(c, it) for(decltype (c.begin()) it = c.begin(); it != c.end(); it++)
#define forn(i, n) for(int i = 0; i < int(n); i++)
#define for1(i, n) for(int i = 1; i <= int(n); i++)
#define forN(i, x, n) for(int i = x; i < int(n); i++)
#define eps 1e-12
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ins insert
#define inf 2e9
#define sz 100100
#define M 1000000007
  
 
#define name "input"
#define isFile 0
 
typedef long long ll;
typedef long double ld;
 
void faster(){
//	ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
	if(isFile){
		freopen(name".in", "r", stdin);
		freopen(name".out", "w", stdout);
    }
}
int n, m, u, v, d;
ll w[sz];
vector< pair< ll, pair <int, int> > > ans;
vector<int> x, y;
int main()
{
	faster();
	scanf("%d %d", &n, &m);
	forn(i, m){
		scanf("%d %d %d", &u, &v, &d);
		w[u] -= d;
		w[v] += d;
	}
	for1(i, n){
		if(w[i] > 0)
			x.pb(i);
		if(w[i] < 0){
			y.pb(i);
			w[i] = -w[i];
		}
	}	
	int j = 0;	
	for(int i = 0; i < x.size(); ){
		u = x[i], v = y[j];
		if(w[u] >= w[v]){
			ans.pb( { w[v], {v, u} } );
			w[u] -= w[v];
			w[v] = 0; 
			if(!w[u])
				i++;
			j++;
		}
		else{
			ans.pb( { w[u], {v, u} } );
			w[v] -= w[u];
			i++;
		}
	}
	printf("%d\n", (int) ans.size());
	forn(i, ans.size())
		printf("%d %d %lld\n", ans[i].S.F, ans[i].S.S, ans[i].F);
 	return 0;					
}	