#include <bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 
#define ll long long int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=1e5+5,mod=998244353;
ll a[M],dp[M][102],cs[M],nx[M][102],F[M];
std::vector<ll> v[M];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,k,L;
	cin>>n>>k>>L;
	for(ll i=1;i<=n;i++)
		cin>>a[i];
	for(ll i=1;i<=k;i++)
		F[i]=n+1;
	for(ll i=n;i>=1;i--)
	{
		if(a[i]!=-1)
			for(ll j=1;j<=k;j++)
				if(j!=a[i])
					F[j]=i;				
		for(ll j=1;j<=k;j++)
			nx[i][j]=F[j];
	}
	for(ll i=n;i>=1;i--)
	{
		if(a[i]!=-1)
		{
			ll z=min(nx[i][a[i]]+1,i+L);
			dp[i][a[i]]=(cs[i+1]-cs[z]+mod)%mod;
			dp[i][a[i]]=(dp[i][a[i]]-(dp[i+1][a[i]]-dp[z][a[i]])+mod)%mod;
			if(z-1>n)
				dp[i][a[i]]=(dp[i][a[i]]+1)%mod;
		}
		else
		{
			for(ll j=1;j<=k;j++)
			{
				ll z=min(nx[i][j]+1,i+L);
				dp[i][j]=(cs[i+1]-cs[z]+mod)%mod;
				dp[i][j]=(dp[i][j]-(dp[i+1][j]-dp[z][j])+mod)%mod;
				if(z-1>n)
					dp[i][j]=(dp[i][j]+1)%mod;
			}
		}
		for(ll j=1;j<=k;j++)
		{
			dp[i][j]=(dp[i][j]+dp[i+1][j])%mod;
			cs[i]=(cs[i]+dp[i][j])%mod;
		}
	}
	ll ans=0;
	if(a[1]==-1)
	{
		for(ll i=1;i<=k;i++)
			ans=(ans+dp[1][i]-dp[2][i]+mod)%mod;
	}
	else
		ans=(dp[1][a[1]]-dp[2][a[1]]+mod)%mod;
	cout<<ans<<"\n";
	return 0;
}