
// In the name of God

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define Size(x) ((int)(x).size())
typedef long long ll;
typedef pair<int,int>pii;
typedef long double ld;
const int INF = 1e9 + 10 , MN = 3e5 + 10;

int n , m, pl[MN] , col[MN];
vector<int>vec[MN] , adj[MN] , rev[MN] , topol;
bool mk[MN];

int Not(const int &a){
	if(a >= m) return a - m;
	return a + m;
}

void add_clause(int x,int y){
	adj[Not(x)].pb(y) , rev[y].pb(Not(x));
	adj[Not(y)].pb(x) , rev[x].pb(Not(y));
}

void dfs(int s){
	mk[s] = true;
	for(auto v:adj[s]) if(!mk[v]) dfs(v);
	topol.pb(s);
}
void sfd(int s,int c){
	mk[s] = true;
	col[s]= c;
	for(auto v:rev[s]) if(!mk[v]) sfd(v , c);

}

void solve(){
	for(int i=0;i<m + m;++i)
		if(!mk[i]) dfs(i);	
	
	reverse(topol.begin() , topol.end());
	memset(mk , 0 , sizeof mk);
	int cmp = 0 , cnt = 0;
	for(auto v:topol){
		pl[v] = cnt++;
		if(!mk[v]) sfd(v , cmp++);
	}

	for(int i=0;i<m;++i) if(col[i] == col[Not(i)]){
		cout << "No\n";
		exit(0);
	}

	cout << "Yes\n";
	vector<int>Ans;
	for(int i=0;i<m;++i){
		if(pl[i] > pl[Not(i)]) Ans.pb(i); 
	}
	sort(Ans.begin() , Ans.end());
	cout << Size(Ans) << '\n';
	for(auto x:Ans) cout << x+1 << ' ';
	cout << '\n';
}
int main(){
	ios_base::sync_with_stdio(false) , cin.tie(0) , cout.tie(0);
	cin >> n >> m;
	for(int i=0;i<n;++i){
		int len;
		cin>>len;
		while(len--){
			int x;cin>>x;
			vec[i].pb(x-1);
		}

		if(i){
			bool fl = false ;
			for(int j=0;j<Size(vec[i-1]) && j<Size(vec[i]);++j){
				if(vec[i-1][j] != vec[i][j]){
					int x = vec[i-1][j] , y = vec[i][j];
					if(x > y){
						add_clause(x , x);
						add_clause(Not(y) , Not(y));
					}else{
						add_clause(Not(y) , x);
					}
					fl = true;
					break;
				}
			}
			if(!fl && Size(vec[i-1]) > Size(vec[i])){
				cout << "No\n";
				exit(0);
			}	
		}
	}
	solve();
	return 0;
}

