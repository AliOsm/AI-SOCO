#include <bits/stdc++.h>
#define int long long
using namespace std;
#define IOS ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
inline int in(){int32_t x ; scanf("%d",&x) ; return x ; }
inline long long lin(){long long x ; scanf("%lld",&x) ; return x ;}
const int maxn = 1e6 + 10;
int a[maxn];
int n , k;

int pref[maxn];
inline int get_interval(int l , int r)
{
    if (l > r) return 0;
    return pref[r] - (l >= k ? pref[l - k ] : 0);
    
}
int res = 1e18;
int32_t main()
{
    n = in() , k = in();
    for (int i = 0 ; i < n ; i ++) a[i] = in();
    for (int i = 0 ; i < n ; i ++) pref[i] = a[i] + (i - k >= 0 ? pref[i - k ] : 0);
    int id;
    for (int start = 0 ; start < n ; start ++)
    {
        int need = (n - start + k - 1)/k;
        int en = (need-1)*k + start;
        int nxt = (en+k)%n;
        int sums = get_interval(start, en);
        if (nxt < start){
            need = (start-nxt+k-1)/k;
            en = (need-1)*k + nxt;
            sums += get_interval(nxt,en);
        }
        if (sums < res) id = start + 1;
        res = min(res,sums);
        
    }
    cout << id << endl;
}
