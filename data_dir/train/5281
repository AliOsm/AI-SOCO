/*
 _     _                             
| |__ | |__   __ _  __ _ _   _  __ _ 
| '_ \| '_ \ / _` |/ _` | | | |/ _` |
| |_) | | | | (_| | (_| | |_| | (_| |
|_.__/|_| |_|\__,_|\__, |\__, |\__,_|
                   |___/ |___/       
*/
#include<bits/stdc++.h>


#define int          long long
#define pb          push_back
#define ppb         pop_back
#define BigInt      __int128
#define endl        '\n'
#define mii         map<ll int,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define sim         template < class c
#define ris         return * this
#define dor         > debug & operator <<
#define eni(x)      sim > typename \
  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {

using namespace std;

sim > struct rge {c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug 
{
	~debug() 
	{ 
		cerr<<endl; 
	}
	eni(!=) cerr << boolalpha << i; ris; }
	eni(==) ris << range(begin(i), end(i)); }
	sim, class b dor(pair < b, c > d) 
	{
		ris << "(" << d.first << ", " << d.second << ")";
	}
	sim dor(rge<c> d) 
	{
	  	*this << "[";
	  	for (auto it = d.b; it != d.e; ++it)
	    	*this << ", " + 2 * (it == d.b) << *it;
	  	ris << "]";
	}
};
#define fuck(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "

#define N  1005

char arr[N][N];

int dist[N][N];

bool vis[N][N];

int col[N][N];

signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
	// cin>>TESTS;
	while(TESTS--)
	{
		int n,m,t;
		cin>>n>>m>>t;
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<=m;j++)
			{
				cin>>arr[i][j];
			}
		}
		queue<pair<int,int>> q;
		for(int i=1;i<=n;i++)
		{
			for(int j=1;j<=m;j++)
			{
				bool fnd=0;
				if(i+1<=n && arr[i+1][j]==arr[i][j]) fnd=1; 
				if(i-1>=1 && arr[i-1][j]==arr[i][j]) fnd=1; 
				if(j+1<=m && arr[i][j+1]==arr[i][j]) fnd=1; 
				if(j-1>=1 && arr[i][j-1]==arr[i][j]) fnd=1; 
				if(fnd)
				{
					dist[i][j]=0;
					q.push({i,j});
					col[i][j]=arr[i][j]-'0';
					vis[i][j]=1;
				}
			}
		}
		while(!q.empty())
		{
			int i=q.front().F;
			int j=q.front().S;
			// cout<<i<<" "<<j<<endl ;
			q.pop();
			if(i+1<=n && !vis[i+1][j]) 
			{
				dist[i+1][j]=1+dist[i][j];
				vis[i+1][j]=1;
				col[i+1][j]=col[i][j];
				q.push({i+1,j});
			} 
			if(i-1>=1 && !vis[i-1][j]) 
			{
				dist[i-1][j]=1+dist[i][j];
				vis[i-1][j]=1;
				col[i-1][j]=col[i][j];
				q.push({i-1,j});
			} 
			if(j+1<=m && !vis[i][j+1]) 
			{
				dist[i][j+1]=1+dist[i][j];
				vis[i][j+1]=1;
				col[i][j+1]=col[i][j];
				q.push({i,j+1});
			} 
			if(j-1>=1 && !vis[i][j-1]) 
			{
				dist[i][j-1]=1+dist[i][j];
				vis[i][j-1]=1;
				col[i][j-1]=col[i][j];
				q.push({i,j-1});
			}
		}
		while(t--)
		{
			int i,j,p;
			cin>>i>>j>>p;
			if(!vis[i][j]) cout<<arr[i][j]<<endl;
			else
			{
				if(p<dist[i][j])
				{
					cout<<arr[i][j]<<endl;
				}
				else
				{
					cout<<(col[i][j]+p)%2<<endl;
				}
			}
		}
		// for(int i=1;i<=n;i++)
		// {
		// 	for(int j=1;j<=n;j++)
		// 	{
		// 		cout<<vis[i][j];
		// 	}
		// 	cout<<endl;
		// }
		// cout<<"erfv";
		// cout<<endl;
		// for(int i=1;i<=n;i++)
		// {
		// 	for(int j=1;j<=n;j++)
		// 	{
		// 		cout<<dist[i][j];
		// 	}
		// 	cout<<endl;
		// }
	}
	return 0;
}