#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long

const int N = 32;
ll n, m, x, y;
ll dx[] = {0, 1, 0, -1};
ll dy[] = {1, 0, -1, 0};
vector<vector<int>> v(N);
pair<ll, ll> out[N];

void dfs(int u, int p, ll x, ll y, int itr, ll d)
{
    out[u] = {x, y};
    for (auto i : v[u])
        if (i != p)
        {
            dfs(i, u, x + d * dx[itr], y + d * dy[itr], (itr + 3) % 4, d / 3);
            itr = (itr + 1) % 4;
        }
}

int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    cin >> n;
    for (int i = 0; i < n - 1; i++)
    {
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
        if (v[x].size() > 4 || v[y].size() > 4)
            return cout << "NO", 0;
    }
    cout << "YES\n";
    dfs(1, 0, 0, 0, 0, 1e17);
    for (int i = 1; i <= n; i++) cout << out[i].first << " " << out[i].second << '\n';

    return 0;
}