#include <iostream>
#include <cassert>
#include <vector>
#include <queue>
typedef long long ll;
ll solve(const std::vector<ll>& a) {
    std::priority_queue<ll> queue;
    for (auto &it : a) { queue.push(-it); }
    ll res = 0;
    while (queue.size() > 1u) {
        assert(queue.size() >= 3u);
        ll fi = -queue.top(); queue.pop();
        ll se = -queue.top(); queue.pop();
        ll th = -queue.top(); queue.pop();
        res += fi + se + th;
        queue.push(-(fi+se+th));
    }
    return res;
}
int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0); std::cout.tie(0); std::cerr.tie(0);
    int n;
    while (std::cin >> n) {
        std::vector<ll> a(n + 1 - (n % 2));
        for (int i = 0; i < n; ++i) { std::cin >> a[i]; }
        std::cout << solve(a) << std::endl;
    }
    return 0;
}