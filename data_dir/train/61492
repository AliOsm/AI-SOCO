#include<bits/stdc++.h>

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define endl '\n'
#define MAX

typedef long long ll;
typedef pair<int,int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;


int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	ll k;
	cin >> k;
	
	vector<vector<int>> up(40);
	vector<vector<int>> down(40);
	
	up[0].push_back(1);
	down[39].push_back(2);
	
	int id = 3;
	for(int i = 1; i < 40; i++){
		up[i].push_back(id++);
		up[i].push_back(id++);
	}
	
	for(int i = 0; i < 39; i++)
		down[i].push_back(id++);
	
	vector<pii> edges;
	
	for(ll i = 0; i < 40; i++)
		if(k & (1LL << i)){
			for(auto &x : up[i])
				for(auto &y : down[i])
					edges.push_back({x, y});
		}
	
	for(int i = 0; i < 39; i++){
		for(auto &x : up[i])
			for(auto &y : up[i + 1])
				edges.push_back({x, y});
		for(auto &x : down[i])
			for(auto &y : down[i + 1])
				edges.push_back({x, y});
	}
	
	vector<vector<char>> G(id + 5, vector<char>(id + 5, 'N'));
	
	for(auto &p : edges){
		G[p.first][p.second] = 'Y';
		G[p.second][p.first] = 'Y';
	}
	
	cout << id - 1 << endl;
	
	for(int i = 1; i < id; i++){
		for(int j = 1; j < id; j++)
			cout << G[i][j];
		cout << endl;
	}

	return 0;
}