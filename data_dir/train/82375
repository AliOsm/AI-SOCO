#include <stdio.h>
#include <bits/stdc++.h>

#define ll long long
#define ld long double

using namespace std;

const ll inf = (ll)1e9;
const ll MOD = (ll)1e9 + 7;
const ld pi = atan2(0, -1);
const ll N = 1000000;

int main()
{
    //freopen("parking.in", "r", stdin);
    //freopen("parking.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    ll n;
    cin >> n;
    ll b[n], c[n], sum = 0;
    for (ll i = 0; i < n; i++)
    {
        cin >> b[i];
        sum += b[i];
    }
    for (ll i = 0; i < n; i++)
    {
        cin >> c[i];
        sum += c[i];
    }
    if (sum % (n * 2))
    {
        cout << -1;
        return 0;
    }
    ll S = sum / (n * 2);
    ll a[n];
    for (ll i = 0; i < n; i++)
    {
        if ((b[i] + c[i] - S) % n)
        {
            cout << -1;
            return 0;
        }
        a[i] = (b[i] + c[i] - S) / n;
    }
    ll bits[31];
    for (ll i = 0; i < 31; i++)
        bits[i] = 0;
    for (ll i = 0; i < n; i++)
        for (ll j = 0; j < 31; j++)
            if ((a[i] >> j) & 1)
                bits[j]++;
    for (ll i = 0; i < n; i++)
    {
        ll res = 0;
        for (ll j = 0; j < 31; j++)
            if ((a[i] >> j) & 1)
                res += bits[j] * (1 << j);
        if (res != b[i])
        {
            cout << -1;
            return 0;
        }
    }
    for (ll i = 0; i < n; i++)
    {
        ll res = 0;
        for (ll j = 0; j < 31; j++)
            if ((a[i] >> j) & 1)
                res += n * (1 << j);
            else
                res += bits[j] * (1 << j);
        if (res != c[i])
        {
            cout << -1;
            return 0;
        }
    }
    for (ll i : a)
        cout << i << " ";
    return 0;
}