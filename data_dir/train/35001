#include <iostream>
#include <algorithm>
using namespace std;

const long long N = 2e6+5;
long long n;
long long a[N];
long long cnt[N];
long long p, ans;

long long pow(long long a, long long b){
    if(!b) return 1;
    if(b&1) return pow(a,b/2)*pow(a,b/2)*a;
     return pow(a,b/2)*pow(a,b/2);
}
int main(){
    cin >> n;
    for(int i = 1; i <= n; i++){
        scanf("%I64d", a + i);
    }
    sort(a + 1, a + n + 1);
    long long t = 1;
    if(n == 1){
        p = 0;
    }
    else{
        for(long long i = 1;  ; i++){
            t *= 4;
            if(t == n){
                p = i;
                break;
            }
        }
    }

    for(long long i = 1; i <= p + 1; i++){
        for(long long j = n; j >= 1; j -= pow(4,i-1)){
            cnt[j]++;
        }
    }
    sort(cnt + 1, cnt + 1 + n);
    for(long long i = 1; i <= n; i++){
        ans += a[i]*cnt[i];
    }
    printf("%I64d", ans);

}
