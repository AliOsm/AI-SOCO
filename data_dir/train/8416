#include<bits/stdc++.h>
using namespace std;
const int mx = 100005;
long long dp[mx][12];
int arr[mx];
const int N = mx;  // limit for array size
int n = mx;  // array size
long long t[12][2 * N];

void modify(int p, long long value,int x) {  // add value at position p
  for (t[x][p += n] += value; p > 1; p >>= 1) t[x][p>>1] = t[x][p] + t[x][p^1];
}

long long query(int l, int r,int x) {  // sum on interval [l, r)
  long long res = 0;
  for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
    if (l&1) res += t[x][l++];
    if (r&1) res += t[x][--r];
  }
  return res;
}
int main()
{
    int n,k;
    cin >> n >> k;
    for(int i = 1 ; i <= n;i++)
    {
        cin >> arr[i];
    }
    dp[0][0] = 1;
    modify(0,1,0);
    for(int i = 1 ; i <= n;i++)
    {
        for(int j = 1; j <= 11; j++)
        {
            dp[i][j] = query(0,arr[i]+1,j-1);
        //    cout<<dp[i][j]<< " ";
        }
       // cout<<endl;
        for(int j = 1; j <= 11; j++)
        {
           modify(arr[i],dp[i][j],j);
        }
    }
    long long ans = 0;
    for(int i = 1 ; i <= n;i++)
    {
        ans += dp[i][k+1];
    }
    cout<<ans;
    
    
    
}