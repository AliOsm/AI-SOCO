#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll,ll> pii;
#define FOR(i,ii,iii)for(ll i=ii;i<iii;i++)
#define RFOR(i,ii,iii)for(ll i=iii-1;i>=ii;i--)
#define OUT(a)cout<<a<<endl
#define ALL(s) s.begin(),s.end()
#define PB push_back
#define ANS(a) OUT(res.size());for(auto i:a)cout<<i<<" ";ENDL
#define PRINT(a,init,end) FOR(i,init,end) cout<<a[i]<<" ";ENDL
#define PRINTV(a) for(auto i:a)cout<<i<<" ";ENDL
#define F first
#define S second

const ll N=1e5+15;
const ll MOD=1e9+7;
ll n,q,l,r;
string s;

#define oper(a,b) a+b
const ll NEUT=0;

ll qpow(ll base,ll exp) { // base^exp in O(log(n))
	ll result=1;
	while (exp) {
		if (exp&1)result=(result*base)%MOD;
		exp>>=1;
		base=(base*base)%MOD;
	}
	return result%MOD;
}

struct STree { // [cerrado-abierto)
	vector<ll> st;ll n;
	STree(ll n): st(4*n+5,NEUT), n(n) {}
	void upd(ll k, ll s, ll e, ll p, ll v){
		if(s+1==e){st[k]=v;return;}
		ll m=(s+e)/2;
		if(p<m)upd(2*k,s,m,p,v);
		else upd(2*k+1,m,e,p,v);
		st[k]=oper(st[2*k],st[2*k+1]);
	}
	ll query(ll k, ll s, ll e, ll a, ll b){
		if(s>=b||e<=a)return NEUT;
		if(s>=a&&e<=b)return st[k];
		ll m=(s+e)/2;
		return oper(query(2*k,s,m,a,b),query(2*k+1,m,e,a,b));
	}
	void upd(ll p, ll v){upd(1,0,n,p,v);}
	ll query(ll a, ll b){return query(1,0,n,a,b);}
}; // usage: STree st(n);st.upd(i,v);st.query(s,e);


int main() {
  ios::sync_with_stdio(false);
  cin>>n>>q>>s;
  STree st(N);
  FOR(i,0,n)st.upd(i,s[i]=='1');
  while(q--) {
    cin>>l>>r;
    ll o=st.query(l-1,r);
    ll k=r-l+1;
    //cout<<k<<" "<<(qpow(2,k)-1)<<" "<<(qpow(2,k-o)-1)<<endl;
    ll res=((qpow(2,k)-1)+MOD-(qpow(2,k-o)-1))%MOD;
    cout<<res<<"\n";
  }
}