		//			- -- --- ---- -----be name khoda----- ---- --- -- -			\\

#include <bits/stdc++.h>

using namespace std;

const int N = 22 + 1;

#define next maskhareee
#define min(a, b) ((a) < (b) ? (a) : (b))
#define check(a, b) (((b) >= 0) && ((a) >> (b) & 1))
#define check2(a, b) (((a) >> (b) & 1))
#define msb mmssb[m]
#define chi int

int next[N][N], dp[1 << N], n, mmssb[1 << N], a[N], ans;

int solve(int m)
{
	if(dp[m])
		return dp[m];
	if(!m)
		return n + 1;
	int best = n + 1, dm = m & (~(1 << msb)) | (1 << msb - 1);
	for(int i = 0; i < msb; ++i)
		if(next[msb][i] >= 0)
		{
			int k = solve(dm | (1 << i) | (1 << next[msb][i]));
			if(k < __builtin_popcount(m))
				best = min(best, __builtin_popcount(m));
			else
				best = min(best, k);
		}
	return dp[m] = best;
}

main()
{
	cin >> n;
	for(int i = 0; i < n; ++i)
		cin >> a[i];

	for(int i = 0; i < n; ++i)
	{
		fill(next[i], next[i] + n, -1);
		for(int j = 0; j < i; ++j)
			for(int k = 0; k < i; ++k)
				if(a[j] + a[k] == a[i])
					next[i][j] = k;
	}

	for(int i = 0; i < n; ++i)
		mmssb[1 << i] = i;
	for(chi i = 2; i < (1 << n); ++i)
		if(!mmssb[i])
			mmssb[i] = mmssb[i - 1];

	ans = n + 1;
	dp[1] = 1;
	ans = solve(1 << n - 1);
	if(ans <= n)
		cout << ans << endl;
	else
		cout << -1 << endl;
}
