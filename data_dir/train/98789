#include<bits/stdc++.h>

#define F first
#define S second
#define int long long
#define ull unsigned long long
#define pb push_back

using namespace std;
const int N = 3000000;
int n, m;
int ans;
const int base = 3123473;
int mod = 1e9 + 7;
vector < pair < char, int > > a, b;
int ha[N], hb[N];
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin >> n >> m;
    char p = '?';
    int l = 0;
    for (int i = 0; i < n; i++){
        string s;
        cin >> s;
        string t = s.substr(s.length() - 2, 2);
        s = s.substr(0, s.length() - 2);
        int x = atoll(s.c_str());
        char c = t[1];
        if (c == p){
            l += x;
        } else{
            if (l > 0){
                a.pb({p, l});
                ha[a.size()] = (ha[a.size() - 1] * base + (1000002 * (p - 'a' + 1) + l)) % mod;
            }
            l = x;
            p = c;
        }
    }
    a.pb({p, l});
    ha[a.size()] = (ha[a.size() - 1] * base + (1000002 * (p - 'a' + 1) + l)) % mod;
    p = '?';
    l = 0;
    for (int i = 0; i < m; i++){
        string s;
        cin >> s;
        string t = s.substr(s.length() - 2, 2);
        s = s.substr(0, s.length() - 2);
        int x = atoll(s.c_str());
        char c = t[1];
        if (c == p){
            l += x;
        } else{
            if (l > 0){
                b.pb({p, l});
                hb[b.size()] = (hb[b.size() - 1] * base + (1000002 * (p - 'a' + 1) + l)) % mod;
            }
            l = x;
            p = c;
        }
    }
    b.pb({p, l});
    hb[b.size()] = (hb[b.size() - 1] * base + (1000002 * (p - 'a' + 1) + l)) % mod;
    if (b.size() == 1){
        for (int i = 0; i < a.size(); i++){
            if (a[i].F == b[0].F){
                ans += max((int) 0, a[i].S - b[0].S + 1);
            }
        }
        cout << ans;
        return 0;
    }
    int f1 = 1;
    int f2 = 1;
    for (int i = 0; i < b.size(); i++){
        if (i > 1) f2 = f2 * base % mod;
    }
    if (a.size() < b.size()){
        cout << 0;
        return 0;
    }
    for (int i = 0; i < a.size() - b.size() + 1; i++){
        if (a[i].F == b[0].F && a[i + b.size() - 1].F == b[b.size() - 1].F && a[i].S >= b[0].S && a[i + b.size() - 1].S >= b[b.size() - 1].S){
            int h1 = (ha[i + b.size() - 1] - ha[i + 1] * f2 % mod + mod) % mod;
            int h2 = (hb[b.size() - 1] - hb[1] * f2 % mod + mod) % mod;
            if (h1 == h2) ans++;
        }
    }
    cout << ans;
}
