#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

using namespace std;

typedef double real;

const int MaxN = 10004;
const real MaxC = 1E10;

real a, v, l, d, w;

void dist (real & dr, real & vr, real v0, real t0)
{
 real t;
 t = (v - v0) / a;
 if (t > t0) t = t0;
 vr = v0 + a * t;
 dr = v0 * t + a * t * t * 0.5;
 dr += v * (t0 - t);
}

int main (void)
{
 real s1, s2, s3, v1, v2, v3;
 real tlo, tme, thi, res;
 int i;
 while (scanf (" %lf %lf %lf %lf %lf", &a, &v, &l, &d, &w) != EOF)
 {
  w = min (w, v);
  // d = a * t * t * 0.5
  // d / a = 0.5 * t * t
  // t = sqrt (d * 2.0 / a)
  w = min (w, a * sqrt (d * 2.0 / a));
//  printf ("w = %.10lf\n", w);

  tlo = 0.0;
  thi = MaxC;
  for (i = 0; i < 200; i++)
  {
   tme = (tlo + thi) * 0.5;
   dist (s1, v1, 0.0, tme);
   if (s1 > d) {thi = tme; continue;}
   if (v1 < w) {tlo = tme; continue;}
   dist (s2, v2, w, (v1 - w) / a);
   if (s1 + s2 > d) thi = tme;
               else tlo = tme;
//   if (v2 < v1) thi = tme;
//           else tlo = tme;
//   printf ("%.10lf %.10lf %.10lf %.10lf\n", s1, v1, s2, v2);
  }
  dist (s1, v1, 0.0, tlo);
  res = tlo + (v1 - w) / a;
//  printf ("%.10lf\n", tlo);

  tlo = 0.0;
  thi = MaxC;
  for (i = 0; i < 200; i++)
  {
   tme = (tlo + thi) * 0.5;
   dist (s3, v3, w, tme);
   if (s3 > l - d) thi = tme;
              else tlo = tme;
  }
//  printf ("%.10lf\n", tlo);

  printf ("%.10lf\n", res + tlo);
 }
 return 0;
}
