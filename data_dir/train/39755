#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <math.h>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <numeric>
#include <stack>
#include <deque>
#include <memory.h>
#include <string>
#include <regex>
#include <unordered_map>

#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<ll>
#define vS vector<string>
#define fori(i, n) for(int (i)=0; (i)<n; (i)++)
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
#define forI(tmp) for(auto(it)=(tmp).begin();(it)!=(tmp).end();(it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scc(a) scanf("%I64d", &(a))
#pragma comment (linker, "/STACK:9999999999")
#define Inf 2e9
typedef long long ll;
typedef long long LL;
const ll mod = 998244353;

using namespace std;

bool check(string &x, vector<int>&cnt, string t)
{
	string a = x;
	for (int i = 25; i >= 0; i--)
	{
		fori(j, cnt[i])
			a.push_back((char)(i + 'a'));
	}
	return (a > t);
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	string s, t;
	cin >> s;
	cin >> t;
	vector<int> cnt(26, 0);
	fori(i, s.length())
	{
		cnt[s[i] - 'a']++;
	}
	sort(rall(s));
	if (s <= t)
	{
		cout << -1;
		return 0;
	}
	string ans = "";
	for (int i = 0; i < s.length(); i++)
	{
		if (i >= t.length())
		{
			fori(j, 26)
			{
				fori(k, cnt[j])
				{
					ans.push_back((char)(j + 'a'));
				}
			}
			cout << ans;
			exit(0);
		}
		int x = t[i] - 'a';
		string tmp = ans;
		if (cnt[x])
		{
			tmp.push_back((char)(x + 'a'));
			cnt[x]--;
			if (check(tmp, cnt, t))
			{
				ans.push_back((char)(x + 'a'));
				continue;
			}
			else
			{
				cnt[x] ++;
				tmp.pop_back();
				for (int j = x + 1;; j++)
				{
					if (cnt[j])
					{
						ans.push_back((char)(j + 'a'));
						cnt[j]--;
						break;
					}
				}
				fori(j, 26)
				{
					fori(k, cnt[j])
					{
						ans.push_back((char)(j + 'a'));
					}
				}
				cout << ans;
				exit(0);
			}
		}
		else
		{
			for (int j = x + 1;; j++)
			{
				if (cnt[j])
				{
					ans.push_back((char)(j + 'a'));
					cnt[j]--;
					break;
				}
			}
			fori(j, 26)
			{
				fori(k, cnt[j])
				{
					ans.push_back((char)(j + 'a'));
				}
			}
			cout << ans;
			exit(0);
		}
	}

	return 0;
}