#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int a, g, c, t;
const int Q = 1e5+1;
int server[101], ans[Q];
struct task
{
	int t, k, idx;
	bool type;
	bool operator < (const task &tmp) const
	{
		if(t != tmp.t)
		return t < tmp.t;
		return type > tmp.type;
	}
};
int main()
{
	int n, q;
	cin >> n >> q;
	task a[q];
	multiset<task> s;
	for(int i=0; i<q; i++)
	{
		int t, k, d;
		cin >> t >> k >> d;
		s.insert({t, k, i+1, 0});
		s.insert({t+d, k, i+1, 1});
	}
	int cur = n;
	memset(ans, -1, sizeof ans);
	for(auto i : s)
	{
		if(i.type == 0)
		{
			if(cur >= i.k)
			{
				cur -= i.k;
				int tmp = i.k;
				ll cnt = 0;
				for(int j=0; j<n && tmp; j++)
				{
					if(!server[j]) server[j] = i.idx, tmp--, cnt += (j+1);
				}
				ans[i.idx-1] = cnt;
			}
		}
		else if(ans[i.idx-1] != -1)
		{
			cur += i.k;
			for(int j=0; j<n; j++)
			{
				if(server[j] == i.idx) server[j] = 0;
			}
		}
	}
	for(int i=0; i<q; i++) cout << ans[i] << endl;

}
