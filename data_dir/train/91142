#include<bits/stdc++.h>
#define fi first
#define se second
#define log2(a) log(n)/log(2)
#define show(a) cout<<a<<endl;
#define show2(a,b) cout<<a<<" "<<b<<endl;
#define show3(a,b,c) cout<<a<<" "<<b<<" "<<c<<endl;
#define tim printf("Time cost : %lf s\n",(double)clock()/CLOCKS_PER_SEC);
using namespace std;

typedef long long ll;
typedef long long LL;
typedef pair<int, int> P;
typedef pair<P, ll> LP;
const ll inf = 1e18;
const int N = 1e6 + 10;
const ll mod = 1e9 + 7;
const int base = 131;
const double pi = acos ( -1 );
const double eps = 1e-8;
inline ll ksm(ll a,ll b){ll ans=1;while(b){if(b&1)ans=ans*a%mod;a=a*a%mod,b>>=1;}return ans;}
#define a(i,j) a[(i-1)*m+(j)]
#define b(i,j) b[(i-1)*m+(j)]

ll  vis[N],num[N];
ll n, m,  k, x, y, z;
ll a[N], b[N],c[N];
ll cx, cy, cnt, ans, sum, flag, t, ff,q;

struct node
{
	ll to,w;
}no[N];
vector<node> v[N],res;

unordered_map<int, int> mp;
set<string> st;
ll dis[N];

ll mi=inf;
void dfs(int x,int fa,ll mi)
{
//	show3(" x:",x,fa);
//	show2(dis[x],a[x]);
	if(dis[x]>a[x]) return ;
	ans++;
	mi=min(mi,num[x]);
	for(node nx:v[x])
	{
		int to=nx.to;
		int w=nx.w;
		if(to==fa) continue;
		num[to]=num[x]+w;
		dis[to]=max(dis[to],num[to]-mi);
		dfs(to,x,mi);
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>a[i];
		dis[i]=-inf;
	}
	for(int i=2;i<=n;i++)
	{
		cin>>x>>k;
		v[x].push_back(node{i,k});
		v[i].push_back(node{x,k});
	}


	dfs(1,-1,0);
//	for(int i=1;i<=n;i++)
//		show3(i,dp[i],num[i])
	cout<<n-ans<<endl;




}
