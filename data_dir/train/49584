#include <bits/stdc++.h>
using namespace std;

typedef complex<long long> P;
long long cross(P a, P b) { return imag(conj(a) * b); }

P inputP() {
	long long x, y;
	scanf("%lld %lld", &x, &y);
	return P(x, y);
}

int main() {
	int n;
	cin >> n;

	vector<P> ps(n);
	for (int i = 0; i < n; i++) ps[i] = inputP();

	long long S = 0;
	for (int i = 0; i < n; i++) {
		int j = (i + 1) % n;
		S += cross(ps[i], ps[j]);
	}

	int ans = 0;
	for (int i = 0; i < n - 1; i++) {
		int j = (i + 1) % n;
		int k = (i + 2) % n;
		if (cross(ps[j] - ps[i], ps[k] - ps[j]) > 0) {
			if (S < 0) ans++;
		} else {
			if (S > 0) ans++;
		}
	}
	cout << ans << endl;
}