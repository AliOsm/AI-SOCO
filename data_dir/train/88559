#include "bits/stdc++.h"
using namespace std;
const int MAX = 100;

bool np[MAX];
int mob[MAX];

void mobius()
{
	for(int i = 1; i < MAX; i++)
		mob[i] = 1;
	for(int i = 2; i < MAX; i++)
	{
		if(np[i]) continue;
		for(int j = i; j < MAX; j += i)
		{
			np[j] = true;
			mob[j] *= -1;
			if((j / i) % i == 0)
				mob[j] = 0;
		}
	}
}
 
inline long long solve(long long n)
{
	long long cnt = 0;
	for(long long i = 2; i < 62; i++)
	{
		if(!mob[i]) continue;
		long long raiz = round(pow(n, 1.0 / i)); 
		while(pow((long double)raiz, i) > (long double)n) raiz--;
		while(pow((long double)raiz + 1, i) < (long double)n) raiz++;
		raiz--;
		cnt += -1LL * mob[i] * raiz;
	}
	return n - cnt;
}

int main()
{
	mobius();
	long long n;
	int q;
	scanf(" %d", &q);
	while(q--)
	{
		scanf(" %lld", &n);
		printf("%lld\n", solve(n) - 1);
 	}   
	return 0;
}