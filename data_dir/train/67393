#include <bits/stdc++.h>
#define ll long long


using namespace std;

int dp[2][100000], dp1[2][100000];
bool used[100000];
int n;
string s;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin >> n >> s;
    if (s[0] == '1')
        dp[1][0] = 1;
    else
        dp[0][0] = 1;

    if (s[n - 1] == '0')
        dp1[1][n - 1] = 1;
    else
        dp1[0][n - 1] = 1;
    used[n - 1] = false;
    for (int i = n - 2; i >= 0; --i) {
        if (s[i] == s[i + 1])
            used[i] = true;
        else
            used[i] = used[i + 1];
        if (s[i] == '0') {
            dp1[1][i] = dp1[0][i + 1] + 1;
            dp1[0][i] = dp1[0][i + 1];
        } else {
            dp1[0][i] = dp1[1][i + 1] + 1;
            dp1[1][i] = dp1[1][i + 1];
        }
    }

    for (int i = 1; i < n; ++i) {
        if (s[i] == '1') {
            dp[1][i] = dp[0][i - 1] + 1;
            dp[0][i] = dp[0][i - 1];
        } else {
            dp[0][i] = dp[1][i - 1] + 1;
            dp[1][i] = dp[1][i - 1];
        }
    }

    int ans = max(dp[0][n - 1], dp[1][n - 1]);
    for (int i = 0; i < n - 1; ++i) {
        int perhAns = max(dp[0][i] + dp1[1][i + 1] + used[i + 1], dp[1][i] + dp1[0][i + 1] + used[i + 1]);
        ans = max(ans, perhAns);
    }

    cout << ans << '\n';

    return 0;
}
