// Bismillahirrahmanir Rahim
#include<bits/stdc++.h>
#define nl printf("\n")
#define sp printf(" ")
#define rep(i,a,b) for(i=a;i<=b;i++)
#define rev(i,a,b) for(i=a;i>=b;i--)
#define fil freopen("input.txt","r",stdin)
#define pf printf
#define sf scanf
using namespace std;

typedef long long l;
typedef unsigned long long ul;

// Ordered set> Finding nth position element in a set in logn complexity
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template<typename T> using orderset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
//*X.find_by_order(1)
//X.order_of_key(-5)

#define pi acos(-1.0)
#define mp make_pair
#define pb push_back
#define p_q priority_queue

int inline in()
{
    int x;
    sf("%d",&x);
    return x;
}
l inline lin()
{
    l x;
    sf("%lld",&x);
    return x;
}
void P(l x)
{
    pf("%lld",x);
}
void Pi(int x)
{
    pf("%d",x);
}

#define C(i) pf("Case %lld: ",i)
#define Ci(i) pf("Case %d: ",i)

typedef pair< l,l > pll;
typedef pair< string,l > psl;
typedef pair< l,string > pls;
typedef pair< string,string > pss;
typedef pair< char,l > pcl;
typedef pair< l,char > plc;

#define Inf 0x7f7f7f
#define Max 200000001
#define Min -100000000001
#define mod 1000000007

#define ms0(a) memset(a,0,sizeof(a))
#define ms1(a) memset(a,1,sizeof(a))
#define ms_1(a) memset(a,-1,sizeof(a))
#define DBG pf("I am here\n")

#define dis( a ,b ) abs( a - b )
#define dis2d( x1 ,y1 ,x2 ,y2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) )
#define dis3d( x1 ,y1 ,z1 ,x2 ,y2 ,z2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) + ( z1 - z2 ) * ( z1 - z2 ) )

#define valid(nx,ny,r,c) nx>=1&&nx<=r && ny>=1&&ny<=c

#define ck_bt( v , p ) ( ( v >> p ) & 1 )

char tochar( int x )
{
    return x + '0' ;
}

int toint( char x )
{
    return x - '0' ;
}

l fx[]= {0,0,-1,1,-1,-1,1,1};
l fy[]= {-1,1,0,0,-1,1,-1,1};

l dx[]= {0,0,-1,1};
l dy[]= {-1,1,0,0};

l  n, m ;
l a[100010] ;
int main()
{

    l i, j, k ;

    n = lin() ;

    if( !( n % 2 ) && n != 2 )
    {
        puts("YES") ;
        return 0 ;
    }
    puts("NO") ;

    return 0;
}
