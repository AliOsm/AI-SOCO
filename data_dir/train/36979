#include <bits/stdc++.h>

using namespace std;

int n, lg[100005], h[100005];
bool g[100005];
vector<int> v[100005];

void dfs1(int a, int b) {
	h[a] = 0;
	lg[a] = 0;
	g[a] = 0;
	for (int i : v[a])
		if (i != b) {
			dfs1(i, a);
			if (h[i] > h[a]) {
				h[a] = h[i];
				lg[a] = i;
			}
		}
	h[a]++;
	for (int i : v[a])
		if (i != b) {
			if (g[i]) {
				g[a] = 1;
				break;
			}
			if (i == lg[a])
				continue;
			int ta = lg[a];
			int tb = i;
			while (ta && tb)
				if (v[ta].size() != v[tb].size()) {
					g[a] = 1;
					break;
				} else {
					ta = lg[ta];
					tb = lg[tb];
				}
			if (g[a])
				break;
		}
}

void check(int a) {
	// printf("check(a=%d)\n", a);
	dfs1(a, 0);
	if (!g[a]) {
		printf("%d\n", a);
		exit(0);
	}
}

int dfs2(int a, int b) {
	int re = a;
	h[a] = 0;
	for (int i : v[a])
		if (i != b) {
			int ret = dfs2(i, a);
			if (h[i] > h[a]) {
				h[a] = h[i];
				re = ret;
			}
		}
	h[a]++;
	return re;
}

void dfs3(int a, int b) {
	if (!b)
		h[a] = 0;
	for (int i : v[a])
		if (i != b) {
			h[i] = h[a] + 1;
			dfs3(i, a);
		}
}

int main() {
	scanf("%d", &n);
	for (int i = 1; i < n; i++) {
		int ta, tb;
		scanf("%d%d", &ta, &tb);
		v[ta].push_back(tb);
		v[tb].push_back(ta);
	}
	int ta = dfs2(1, 0);
	int tb = dfs2(ta, 0);
	int tc = tb;
	while (h[tc] != (h[ta] + h[tb]) / 2)
		for (int i : v[tc])
			if (h[i] > h[tc]) {
				tc = i;
				break;
			}
	for (int i : {ta, tb, tc})
		check(i);
	dfs3(tc, 0);
	for (int i = 1; i <= n; i++)
		if (v[i].size() == 1 && h[i] < h[ta])
			ta = i;
	check(ta);
	puts("-1");
}
