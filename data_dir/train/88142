#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 5;

int n;
vector<int> g[N];
long long ans, s[N], a[N];
void no (){
    cout << -1 << '\n';
    exit (0);
}
void dfs (int v, int pred = 0, int h = 1){
    if (h % 2 && s[v] == -1 || s[v] != -1 && s[pred] > s[v]) no ();
    long long mn = 1e18;
    if ((int)g[v].size() == 0 && h % 2 == 0){
        a[v] = 0;
        return;
    }
    if (!(h % 2)){
        for (int i = 0; i < (int)g[v].size(); ++i){
            int to = g[v][i];
            mn = min (mn, s[to] - s[pred]);
        }
        a[v] = mn;
        s[v] = s[pred] + a[v];
    }
    else a[v] = s[v] - s[pred];
    if (a[v] < 0) no ();
    for (int i = 0; i < (int)g[v].size(); ++i){
        int to = g[v][i];
        dfs (to, v, h + 1);
    }
}

int main(){


    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin >> n;
    memset (a, -1, sizeof (a));
    for (int i = 2; i <= n; ++i){
        int v;
        cin >> v;
        g[v].push_back(i);
    }
    for (int i = 1; i <= n; ++i) cin >> s[i];
    dfs (1);
    for (int i = 1; i <= n; ++i) ans += a[i];
    cout << ans;


}
