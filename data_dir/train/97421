#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define MOD 1000000007
#define PI 3.14159265
#define endl '\n'
#define MAX 1000001


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n , m , l;
    cin >> n >> m >> l;
    vector <ll> vec;
    ll v;
    int g = 0;
    for (int i = 0; i < n; i++) {
        cin >> v;
        vec.pb(v);
        if (v > l) {
            g++;
            for (int j = i + 1; j < n; j++) {
                cin >> v;
                vec.pb(v);
                i = j;
                if (v <= l) {
                    break;
                }
            }
        }
    }

    int q;
    for (int i = 0; i < m; i++) {
        cin >> q;
        if (!q) {
            cout << g << endl;
        }
        else {
            ll a , b;
            cin >> a >> b;
            a--;
            vec[a] += b;
            if (n == 1 && vec[0] - b <= l && vec[0] > l) {
                g++;
            }
            else {
                if (vec[a] - b <= l && vec[a] > l) {
                    if (a == 0 && vec[1] <= l) {
                        g++;
                    }
                    else if (a == n - 1 && vec[n - 2] <= l) {
                        g++;
                    }
                    else if (vec[a - 1] <= l && vec[a + 1] <= l) {
                        g++;
                    }
                    else if (a == 0 && vec[1] > l) {
                        continue;
                    }
                    else if (a == n - 1 && vec[n - 2] > l) {
                        continue;
                    }
                    else if (vec[a - 1] > l && vec[a + 1] > l) {
                        g--;
                    }
                }
            }
        }
    }

    return 0;
}
