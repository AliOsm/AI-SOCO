#include<bits/stdc++.h>
using namespace std;
#define ll int
#define ull unsigned long long int
#define Endl endl
#define mod  1000000007
#define mkp make_pair
#define pb push_back
#define cin(n) scanf("%d",&n)
#define cout(n) printf("%d ",n)
#define sf(n) scanf("%d",&n)
#define pf(n) printf("%d ",n)
#define bitget(n) __builtin_popcountll(n)
ll dx[] = {1,1,0,-1,-1,-1,0,1};
ll dy[] = {0,-1,-1,-1,0,1,1,1};
ll dxx[] = {1,-1,0,0};
ll dyy[] = {0,0,-1,1};
ll modexpo(ll x,ll y){if(y==0)return 1;if(y%2){ll viky=modexpo(x,y/2);
return (((x*viky)%mod)*viky)%mod;}else{ll viky=modexpo(x,y/2);return (viky*viky)%mod;
}}
ll intpoint(ll x1, ll y1, ll x2, ll y2) { return ( __gcd(abs(x1-x2),abs(y1-y2))+1); }
bool isvalid(ll x,ll y,ll n,ll m) { return (x>=0&&x<n&&y>=0&&y<m); }
// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
// int pp = uniform_int_distribution<int>(0, kk-1)(rng);
// ---------------------///////////////---------------------------------
// ---------------------///////////////----------------------------------
// -------------/////////////////---------------------------------///////



int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    
	ll n,m;
	// cin>>n>>m;
	cin(n);
	cin(m);

	vector<pair<ll,ll> >st;

	for(ll i=0;i<m;i++){
		ll l,r;
		// cin>>l>>r;
		cin(l);
		cin(r);
		l--;
		r--;
		st.push_back({min(l,r),max(l,r)});
	}	

	sort(st.begin(),st.end());
	ll ok = 1;
	vector<ll>ans;
	
	for(int i=1;i<n;i++){
		if(n%i == 0){
			ans.push_back(i);
		}
	}

	for(auto i:ans){

		vector<pair<ll,ll> >st1;
		ok = 1;
		for(auto x:st){
			ll val = (x.first + i)%n;
			ll val1 = (x.second + i)%n;
			// cout<<val<<" "<<val1<<"\n";
			st1.push_back({min(val,val1),max(val,val1)});
		}
		
		sort(st1.begin(),st1.end());
		ll cnt = 0;
		for(auto x:st){
			// cout<<(*xp).first<<" "<<(*xp).second<<"\n";
			if(st1[cnt].first == x.first && st1[cnt].second == x.second){
				cnt++;
				continue;
			}
			ok = 0;
			break;
		}
		if(ok){
			printf("Yes");
			return 0;
		}

	}
	printf("No\n");
	return 0;
}