#include <stdio.h>
#include <math.h>
#include <string.h>
#include <limits.h>
#include <stdlib.h>
#include <algorithm>
#include <iostream>
#include <utility>
#include <vector>
#include <string>
#include <map>
#include <queue>
using namespace std;

#define long long long
#define fi first
#define se second
typedef pair<int,int> ii;
typedef vector<long> vl;
typedef vector<vl> vvl;

const long MOD = 1e9+7;
long n, m;
vvl M, I, mat;

void print(vvl v)
{
	for(auto i : v)
		for(int it = 0; it < i.size(); it++)
			printf("%lld%c", i[it], (it == i.size()-1)? '\n' : ' ');

}

void init()
{
	M.assign(m, vl(1,1) );
	I.assign(m, vl(m,0));
	mat = I;
	for(int i = 0; i < m; i++)
		I[i][i] = 1;
	mat[0][0] = mat[0][m-1] = 1;
	for(int i = 1; i < m; i++)
		mat[i][i-1] = 1;
}

vvl operator* (vvl A, vvl B)
{
	vvl C(m, vl(A[0].size(), 0));
	for(int i = 0; i < B.size(); i++)
	{
		for(int j = 0; j < A[0].size(); j++)
		{
			for(int k = 0; k < A.size(); k++)
			{
				C[i][j] = (C[i][j] + (B[i][k]*A[k][j]))%MOD;
			}
		}
	}

	return C;
}

vvl pwr(vvl A, long b)
{
	if(b == 0) return I;
	else if(b == 2) return A*A;
	else if(b&1) return pwr(A,b-1)*A;
	else return pwr(pwr(A,b/2),2);
}

int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	scanf("%lld %lld", &n, &m);
	init();
	
	M = (M * pwr(mat,n));
	printf("%lld\n", M[m-1][0]);
}








