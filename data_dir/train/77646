#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const ll M=2e5+5;
std::vector<ll> vtr[M];
ll dp[M][3];
void solve(ll x,ll p = -1)
{
	for(auto u:vtr[x])
	{
		if(u!=p)
			solve(u,x);
	}
	if(sz(vtr[x])==1 && p!=-1)
	{
		dp[x][0]=0;
		dp[x][1]=1;
		return;
	}
	ll sum = 0;
	for(auto u:vtr[x])
		if(u!=p)
			sum = sum+dp[u][1];
	std::vector<ll> v;
	for(auto u:vtr[x])
	{
		if(u!=p)
		{
			v.pb(dp[u][0]-dp[u][1]);
		}
	}
	sort(all(v));
	dp[x][0]=sum;
	dp[x][1]=1+sum;
	dp[x][0]+=v[0];
	dp[x][1]+=v[0];
	if(sz(v)>1)
		dp[x][1]+=v[1];
}
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,x,y;
	cin>>n>>x>>y;
	for(ll i=1;i<n;i++)
	{
		ll u,v;
		cin>>u>>v;
		vtr[u].pb(v);
		vtr[v].pb(u);
	}
	solve(1);
	if(x<y)
	{
		dp[1][1]--;
		cout<<dp[1][1]*y+(n-1-dp[1][1])*x<<"\n";
		return 0;
	}
	bool f=0;
	for(ll i=1;i<=n;i++)
		if(sz(vtr[i])==n-1)
			f=1;
	if(f==0)
		cout<<(n-1)*y<<"\n";
	else
		cout<<(n-2)*y+x<<"\n";
	return 0;
}