#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <memory.h>
#include <deque>
#include <iomanip>
#include <utility>
#include <string>
#include <ext/rope>
#include <iterator>
 
using namespace std;
using namespace __gnu_cxx;
 
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf       
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define y1 eslgkdnhkgsjkdrn
#define print(x) prf("%d\n", x.sz()); for (int i = 0; i < x.sz(); i++) prf("%d ", x[i]);
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i != end; i += move)
 
typedef long long ll;
 
const ll base = 1000000007LL;
const ll INF = 10000000000000LL;

char s[100500];


inline int makeMod(int a, int b)
{
    a += b;
    a += b;
    a %= b;
    return a;
}

inline int makeReverse(int code)
{       
    int res = 0;
    For(bit, 8)
        if ((code & (1 << bit)) != 0)
            res += (1 << (7 - bit));
    return res;
}

int main()
{
    gets(s);
    int prev = 0;
    int len = strlen(s);
    for (int i = 0; i < len; i++)
    {
        int code = (int)(s[i]);
        code = makeReverse(code);
        int newPrev = code;
        int res = (prev - newPrev);
        res = makeMod(res, 256);
        prev = newPrev;
        prf("%d\n", res);
    }
    return 0;
}   