#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


int main() {
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

   int t;
   cin>>t;
   while(t--)
   {
       int n;
       cin>>n;
       vector<int>vec;
       queue<int>q1,q2;
       for(int i=0 ; i<n; i++)
       {
           int x;
           cin>>x;
           q1.push(x);
           q2.push(x);
       }
       while(q1.front()!=1)
       {
           int x=q1.front();
           q1.pop();
           q1.push(x);
       }
       while(q2.front()!=n)
       {
           int x=q2.front();
           q2.pop();
           q2.push(x);
       }
       bool ok=0;
       for(int i=1 ; i<=n; i++)
       {
           if(q1.front()!=i)
               break;
           if(q1.front()==n)
               ok=1;
           q1.pop();
       }
       for(int i=n ; i>=1 ; i--)
       {
           if(q2.front()!=i)
               break;
           if(q2.front()==1)
               ok=1;
           q2.pop();
       }
       if(ok)
           cout<<"YES"<<endl;
       else
           cout<<"NO"<<endl;



   }

    return 0;
}
