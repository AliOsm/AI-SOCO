#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2e9;
ll LINF = (ll)4e18;
using namespace std;
//ll mod = 1e9 + 7;
#define M_PI       3.14159265358979323846   // pi

ll f(ll i, ll k) {
	ll r = k * (k + 1) / 2 - 1;
	ll l = max(0LL, (k - i) * (k - i + 1) / 2 - 1);
	return r - l - i + 1;
}

int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("domino-covering-1.in", "r", stdin);
	//freopen("domino-covering-1.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	ll n, k;
	cin >> n >> k;
	if (n == 1) {
		cout << 0;
		return 0;
	}
	ll ans = 0;
	while (n > 0 && k > 1) {
		ll l = 1, r = k - 1;
		while (l < r) {
			ll m = (l + r) / 2 + 1;
			ll cur = f(m, k);
			if (cur > n) r = m - 1;
			else l = m;
		}
		ll x = f(l, k) - (ans > 0);
		if (x <= n) {
			n -= x;
			ans += l;
			k -= l;
		}
		else k = min(k - 1, n + 1);
	}
	if (n > 0) ans = -1;
	cout << ans;
	return 0;
}