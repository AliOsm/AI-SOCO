#define __USE_MINGW_ANSI_STDIO 0
#include <bits/stdc++.h>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl '\n'
#define ff first
#define ss second
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define int long long
#define all(a) a.begin(), a.end()
#define inf (1LL<<61)
#define ull unsigned long long
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
int gcd(int x,int y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
int expo(int n,int m,int p)   //modULAR EXPONENTIATION
{
    int r=1;
    n=n%p;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
bool isPrime(int n)
{
    // Corner cases
    if (n <= 1)  return false;
    if (n <= 3)  return true;
 
    // This is checked so that we can skip 
    // middle five numbers in below loop
    if (n%2 == 0 || n%3 == 0) return false;
 
    for (int i=5; i*i<=n; i=i+6)
        if (n%i == 0 || n%(i+2) == 0)
           return false;
 
    return true;
}
bool comp(pair<int,pair<int,int> >&a,pair<int,pair<int,int> >&b)
{
	if(a.ss.ff==b.ss.ff)
		return a.ff<b.ff;
	return a.ss.ff<b.ss.ff;
}
int n,k,a,b;
int solve(int x)
{
	//cout<<x<<endl;
	if(x==k)
	{
		int y=a*(x-1);
		return min(y,b);
	}
	else if(x%k==0)
	{
		int ne=x/k;
		return min(b,a*(x-x/k))+solve(x/k);
	}
	else if(x<k)
	{
		int y=(x-1)*a;
		return y;
	}
	else
	{
		int y=a*(x-(x/k)*k),z=(x/k)*k;
		return y+solve(z);
	}
}
int32_t main()
{
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ***********************/
   cin>>n>>k>>a>>b;
   if(n==1)
   {
   	cout<<0;
   	return 0;
   }
   if(k==1)
   {
   	int x=a*(n-1);
   	cout<<x<<endl;
   	return 0;
   }
   if(n<k)
   {
   	cout<<(n-1)*a<<endl;
   	return 0;
   }
   /*int ans=0;
   if(n%k!=0)
   {
   	ans=ans+(n-(n/k)*k)*a;
   }*/
   cout<<solve(n);
} 
