#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <array>
#include <atomic>
#include <chrono>
#include <condition_variable>
#include <forward_list>
#include <future>
#include <initializer_list>
#include <mutex>
#include <random>
#include <ratio>
#include <regex>
#include <scoped_allocator>
#include <system_error>
#include <thread>
#include <tuple>
#include <typeindex>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>

using namespace std;

#define int long long

int a[300010], b[300010];
int n;
int d[3][300010];

void solve(){
    cin >> n;
    for(int i = 0; i < n; i++){
        cin >> a[i] >> b[i];
    }
    for(int i = 0; i < 3; i++){
        for(int j = 0; j < n; j++){
            d[i][j] = 1e18;
        }
    }
    for(int i = 0; i < 3; i++) d[i][0] = i*b[0];
    for(int i = 1; i < n; i++){
        for(int j = 0; j < 3; j++){
            for(int k = 0; k < 3; k++){
                int sz_prev = a[i-1] + j;
                int sz_cur = a[i] + k;
                if(sz_prev != sz_cur){
                    d[k][i] = min(d[k][i], d[j][i-1] + b[i]*k);
                }
            }
        }
    }
    int mn = 1e18;
    for(int i = 0; i < 3; i++){
        mn = min(mn, d[i][n-1]);
    }
    cout << mn << '\n';
}

int32_t main()
{
    //freopen("1.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(false);
    int q;
    cin >> q;
    while(q--){
        solve();
    }
    return 0;
}