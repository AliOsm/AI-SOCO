#define _USE_MATH_DEFINES
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef complex<double> point;

void fastInOut();

const int N = 100001, M = 201;
const ll oo = 1e18;
int n, d[N], w[N], curIdx[N];
vector<int> in[N], out[N];
ll memo[N][M];

void build() {
	set<pair<pair<int, int>, int> > st;
	for (int i = 0; i < n; ++i) {
		for (auto idx : in[i])
			st.insert(make_pair(make_pair(w[idx], d[idx]), idx));
		if (st.empty())
			curIdx[i] = -1;
		else
			curIdx[i] = (*st.rbegin()).second;
		for (auto idx : out[i])
			st.erase(make_pair(make_pair(w[idx], d[idx]), idx));
	}
}

ll solve(int idx, int rem) {
	if (idx == n)
		return 0;
	ll &ret = memo[idx][rem];
	if (ret != -1)
		return ret;
	ret = oo;
	if (rem)
		ret = min(ret, solve(idx + 1, rem - 1));
	if (curIdx[idx] == -1)
		ret = min(ret, solve(idx + 1, rem));
	else
		ret = min(ret, w[curIdx[idx]] + solve(d[curIdx[idx]] + 1, rem));
	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	fastInOut();
	int m, k, s, t;
	memset(memo, -1, sizeof memo);
	cin >> n >> m >> k;
	for (int i = 0; i < k; ++i) {
		cin >> s >> t >> d[i] >> w[i], --s, --t, --d[i];
		in[s].push_back(i), out[t].push_back(i);
	}
	build(), cout << solve(0, m);
	return 0;
}

void fastInOut() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
