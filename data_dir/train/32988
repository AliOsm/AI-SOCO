#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <cmath>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <functional>
#include <cstring>
using namespace std;

int dist(int x1, int y1, int x2, int y2)
{
	return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);
}

int main(void)
{
	int qa, qb;
	cin >> qa >> qb;
	if (qa > qb)
		swap(qa, qb);
	map<int, vector<pair<int, int> > > q;
	for (int n = 1; n * n < 2000; ++n)
	{
		for (int m = n + 1; m * m < 2000; ++m)
		{
			int a = m * m - n * n;
			int b = 2 * n * m;
			int c = m *m + n * n;
			for (int k = 1; c * k < 2000; ++k)
			{
				q[c*k].push_back({ a*k, b*k });
				q[c*k].push_back({ b*k, a*k });
			}
		}
	}

	if (!q.count(qa) && !q.count(qb))
	{
		cout << "NO";
		return 0;
	}

	for (int i = 0; i < q[qa].size(); ++i)
	{
		for (int j = 0; j < q[qb].size(); ++j)
		{
			if (dist(q[qa][i].first, q[qa][i].second, -q[qb][j].first, q[qb][j].second) == qa * qa + qb * qb)
			{
				if (q[qa][i].second == q[qb][j].second)
					continue;

				cout << "YES" << endl;
				cout << "0 0" << endl;
				cout << q[qa][i].first << " " << q[qa][i].second << endl;
				cout << -q[qb][j].first << " " << q[qb][j].second << endl;
				return 0;
			}
		}
	}	
	cout << "NO";
	return 0;
}