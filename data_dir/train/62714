#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-12;
const double PI = acos(-1.0);

int n, c[N], s[N];
vector < int > weight[5], id[5];
main() {
    file("queue");
    ios;
    cin >> n;
    fo(i, 1, n, 1) {
        int x, y;
        cin >> x >> y;
        weight[x].eb(y);
        id[x].eb(i);
    }
    int cur1 = 0, cur2 = 0;
    fo(i, 1, n - 1, 1) {
        int w = min(weight[0][cur1], weight[1][cur2]);
        cout << id[0][cur1] << " " << id[1][cur2] << " " << w << "\n";
        weight[0][cur1] -= w;
        weight[1][cur2] -= w;
        if (cur1 < id[0].size() - 1 && weight[0][cur1] == 0) ++cur1;
        else ++cur2;
    }
    return 0;
}
