
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

inline int in() {int x; scanf("%d",&x); return x;}
#define debug(x) cerr << #x << '=' << (x) << endl
#define FOR(i,j,k) for(int i=j;i<k;++i)
#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz
#define Size(x) ((int)(x).size())
#define endl '\n'
#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define pb push_back
#define X first
#define Y second

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 100;
const int MN = 5e5 + 10;

vector<int>adj[MN];
int n,m;
int root[MN];
int ans[MN] , tmp[MN];
bool mk[MN];
set<int>S;
int sz1;
set<int> :: iterator it;
//
int q[MN];
int L , R;
//
void input()
{
	n = in() , m = in();
	for(int i=0;i<m;++i){
		int a,b;
		a = in() , b = in();
		--a,--b;
		adj[a].pb(b) , adj[b].pb(a);
	}
}

void bfs(int s)
{
	mk[s] = true;
	q[L] = s  , R = L+1;
	set<int>S1;
	while(L < R){
		int v = q[L++];
		mk[v] = true;
		ans[sz1++] = v;
		S1 = S;
		for(int i=0;i<Size(adj[v]);++i) S1.erase(adj[v][i]);
		for(it=S1.begin();it!=S1.end();++it)
			S.erase(*it);
		while(S1.size()){
			q[R++] = *S1.begin();
			S1.erase(S1.begin());
		}
	}
}

int main()
{
//	boost;
	input();
	int counter = 0;
	for(int i=0;i<n;++i) S.insert(i);
	for(int i=0;i<n;++i)
		if(!mk[i]){
			S.erase(i);
			int sv = sz1;
			bfs(i);
			tmp[sv] = sz1-sv;
			++counter;
		}
	printf("%d\n" , counter);
	int p = 0;
	tmp[n] = -1;
	while(p < n){
		printf("%d " , tmp[p]);
		while(p < n && !tmp[p+1]) printf("%d " , ans[p]+1) , ++p;
		printf("%d\n" , ans[p]+1);
		++p;
	}
	return 0;
}

//
