
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <array>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
#include <bitset>
#include <complex>
using namespace std;
#define rep(i, n) for (int (i) = 0; (i) < (n); (i) ++)
#define rep1(i, n) for (int (i) = 1; (i) <= (n); (i) ++)
#define FOR(i, a, b) for (int (i) = (a); (i) <= (b); (i)++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout<<#a<<" :";FOR(i123,x,y)cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int((x).size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int N, M;
vector<int> A[100100];
ll cursum[100100];
int main() {
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0); cin.tie(0);
  cin >> N >> M;
  set<int> subjects;
  for (int i = 1; i <= N; i++) {
    int s, r;
    cin >> s >> r;
    subjects.insert(s);
    A[s].push_back(r);
  }
  for (int s : subjects) {
    sort(A[s].begin(), A[s].end());
  }
  ll ans = 0;
  ll cur = 0;
  for (int teamsize = 1; teamsize <= N; teamsize++) {
    ll curans = 0;
    vector<int> del;
    for (int s : subjects) {
      if (sz(A[s]) > 0) {
        cursum[s] += A[s].back();
        if (cursum[s] > 0) {
          curans += cursum[s];
        } else {
          del.push_back(s);
        }
      }
    }
    ans = max(ans, curans);
    for (int s : subjects) {
      if (sz(A[s]) > 0) {
        A[s].pop_back();
        if (sz(A[s]) == 0) {
          del.push_back(s);
        }
      }
    }
    for (int s : del) {
      subjects.erase(s);
    }
  }
  cout << ans << endl;
}

