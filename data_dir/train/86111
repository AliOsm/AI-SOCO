//#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma comment(linker, "/STACK:16777216")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef complex<double> num;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define all(x) (x).begin(), (x).end()
//#define int ll

void FAST_IO() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifdef _offline
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif // _offline
}

const int MAXN = 10;
int sum[MAXN];
int n, a, b, ans = INT_MAX;

void search(int d) {
    if (d > 6) {
        int cur = 0;
        for (int i = 1; i <= 6; ++i) {
            if (sum[i] > 0) {
                if (sum[i] > n) {
                    cur = INT_MAX;
                    break;
                }
                cur++;
            }
        }
        ans = min(ans, cur);
        return;
    }
    for (int i = 1; i <= 6; ++i) {
        sum[i] += (d <= 4 ? a : b);
        search(d + 1);
        sum[i] -= (d <= 4 ? a : b);
    }
}

signed main() {
    FAST_IO();
    cin >> n >> a >> b;
    search(1);
    cout << ans;
}
