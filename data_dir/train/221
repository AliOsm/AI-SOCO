#include <bits/stdc++.h>
using namespace std;

typedef pair <int, int> P;

const int N = 2e5 + 10;

int p[N];
map <int, vector <P> > sav;
vector <P> vec;

int find(int x){
	return x == p[x] ? x : p[x] = find(p[x]);
}

void unite(int x, int y){
	int fx = find(x), fy = find(y);
	if (fx == fy) return;
	p[fy] = fx;
}

int same(int x, int y){
	return find(x) == find(y);
}

int main(){
	int n, m, u, v, w, ans;
	scanf("%d %d",&n,&m);
	for (int i = 1; i <= m; i++){
		scanf("%d %d %d",&u,&v,&w);
		if (!sav.count(w)) sav.insert(make_pair(w, vec));
		sav[w].emplace_back(u, v);
	}
	for (int i = 1; i <= n; i++) p[i] = i;
	ans = 0;
	for (auto& it : sav){
		vec.clear();
		for (auto p : it.second){
			if (same(p.first, p.second)) continue;
			vec.push_back(p);
		}
		for (auto p : vec){
			if (same(p.first, p.second)) ans++;
			unite(p.first, p.second);
		}
	}
	printf("%d\n", ans);
	return 0;
}