#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4")
 
#include <bits/stdc++.h>
 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/detail/standard_policies.hpp>
 
#define pb push_back
#define F first
#define S second
#define ll long long
#define ld long double
#define pii pair < int, int >
 
using namespace std;
using namespace __gnu_pbds;
 
template <typename T>
using ordered_set = tree <T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
 
mt19937 gen(chrono::system_clock::now().time_since_epoch().count());
 
const int N = 2e5 + 7;
const ll M = 1e9 + 7;
const ll M2 = 1e9 + 9;
const int mod = 998244353;
const int rx[8] = {1, 1, -1, -1, -2, -2, 2, 2};
const int ry[8] = {-2, 2, -2, 2, 1, -1, 1, -1};
const ld eps = 1e-7;
const double pi = acos(-1.0);
const int SX[4] = {0, 0, -1, 1};
const int SY[4] = {1, -1, 0, 0};
 
int n, k;
vector < vector < pii > > all_1(N);
vector < vector < pii > > all_2(N);
 
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    srand(time(0));
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
 //   freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
#endif
    cin >> n >> k;
    for (int i = 0;i < n; ++i){
        int l, r;
        cin >> l >> r;
        all_1[l].pb({r, i});
        all_2[r + 1].pb({r, i});
    }
    set < pii > st;
    vector < int > ans;
    for (int i = 1;i <= 2e5; ++i){
            for (auto to : all_1[i])st.insert(to);
            for (auto to : all_2[i])st.erase(to);
            while(st.size() > k){
                ans.pb((*--st.end()).S);
                st.erase(*st.rbegin());
            }
    }
    cout << ans.size() << endl;
    for (auto to : ans)cout << to + 1 << " ";
    return 0;
}