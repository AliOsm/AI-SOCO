
#include<bits/stdc++.h>
using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/
#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second
#define endl           '\n';
#define what_is(x)     cerr << #x << " is " << x << endl;
///*....Debugger....*/
#define error(args...) {vector <string> _v = split(#args, ','); err(_v.begin(), args); cout << endl;}
vector <string> split(const string &s, char c) {
    vector <string> v;
    stringstream ss(s); string x;
    while (getline(ss, x, c)) v.emplace_back(x);
    return move(v);
}
void err(vector <string> :: iterator it) {}
template <typename T, typename... Args>
void err(vector <string> :: iterator it, T a, Args... args) {
    cout << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", ";
    err(++it, args...);
}
 
int ini(){int x; scanf("%d",&x);return x;}
long long inl(){ long long x;scanf("%lld",&x); return x;}
double ind(){double x; scanf("%lf",&x);return x;}
#define Iin ini();
#define Lin inl();
#define Din ind();

int set_1(int n,int pos){return n = (n | (1<<pos));}
int reset_0(int n,int pos){return n= n & ~(1<<pos);}
bool check_bit(int n,int pos){return n = n & (1<<pos);}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
const int N = (int) 1e6 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);
const double eps=1e-9;

bool dp[N][4];
int n,a[4];
std::vector<int> res;

void call(int pos,int v){
    if(pos==n){
        printf("YES\n");
        for(auto x: res)printf("%d ", x);
        exit(0);
    }
    if(dp[pos][v])return;

    dp[pos][v]=true;

    if(v+1<=3 and a[v+1]>0){
        res.push_back(v+1);
        a[v+1]--;
        call(pos+1,v+1);
        a[v+1]++;
        res.pop_back();
    }
    if(v-1>=0 and a[v-1]>0){
        res.push_back(v-1);
        a[v-1]--;
        call(pos+1,v-1);
        a[v-1]++;
        res.pop_back();
    }
}

int main()
{
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);  
    int t=1,te=0;
    
    while(t--){
        for(int i=0;i<4;i++){
            cin>>a[i];
            n+=a[i];
        }
        for(int i=0;i<4;i++){
              memset(dp,false,sizeof(dp));
              call(0,i);
        }

        printf("NO\n");
      
        //printf("Case %d: ",++te);
    }
    return 0;
}


