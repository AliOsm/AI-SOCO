#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <deque>
#include <iterator>
#include <bitset>
#include <assert.h>
#include <new>
#include <sstream>
/*#include <bits/stdc++.h>*/
using namespace std ;

typedef long long               ll ;
typedef long double             ld ;
typedef unsigned long long      ull ;
typedef pair<int,int>           pii ;
typedef pair<ll,ll>             pll ;
typedef vector<int>             vi ;
typedef vector<ll>              vll ;
typedef vector<vector<int>>     vvi ;

int Int(){int x ; scanf("%d",&x) ; return x ;}
ll Long(){ll x ; scanf("%lld",&x) ; return x ;}
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it) {cout << endl ;}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
    cerr << *it << " = " << a << ' ' ;
    err(++it, args...);
}

const int N         = (int)2e5 + 5 ;
const int maxN      = (int)1e6 + 6 ;
const ll Mod        = (ll)1e9 + 7 ;

#define     debug(x)    cerr << #x << " = " << x << '\n' ;
#define     rep(i,b,e)  for(__typeof(e) i = (b) ; i != (e + 1) - 2 * ((b) > (e))  ; i += 1 - 2 * ((b) > (e)))
#define     Int         Int()
#define     Long        Long()
#define     all(x)      x.begin() , x.end()
#define     sz(x)       (int)x.size()
#define     ff          first
#define     ss          second
#define     pb          push_back
#define     eb          emplace_back

int m , d ;
string l , r ;
ll dp[2005][2005][2][2] ;

ll call(int pos , int mod , int f1 , int f2){
	if(pos == sz(r)){
		return mod == 0 ;
	}
	ll &ret = dp[pos][mod][f1][f2] ;
	if(ret > -1)return ret ;
	ret = 0 ;
	int lo , hi ;
	if(f1)lo = l[pos] - '0' ;
	else lo = 0 ;
	if(f2)hi = r[pos] - '0' ;
	else hi = 9 ;
	if(pos % 2){
		if(d >= lo and d <= hi)ret += call(pos + 1 , (mod * 10 + d) % m , f1 and d == lo , f2 and d == hi) ;
		ret %= Mod ;
	}
	else{
		for(int i = lo ; i <= hi ; i++){
			if(i == d)continue ;
			ret += call(pos + 1 , (mod * 10 + i) % m , f1 and i == lo , f2 and i == hi) ;
			ret %= Mod ;
		}
	}
	return ret ;
}

int main(){
    int test = 1 , tc = 0 ;
    while(test--){
        m = Int , d = Int ;
        cin >> l >> r ;
        memset(dp , -1 , sizeof dp) ;
		ll res = call(0, 0, 1, 1) ;
        if(res < 0)res += Mod ;
        cout << res << '\n' ;
    }
    return 0 ;
}
