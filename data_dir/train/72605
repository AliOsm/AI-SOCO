
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  1000000007
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
int n,x[105],y[105],a,b,ans;
int rim1x,rim1y;
int main()
{
    yalla;
    cin>>n>>a>>b;
    for(int i=0; i<n; i++)cin>>x[i]>>y[i];
    ///
    for(int i=0; i<n; i++)
    {
       for(int j=0; j<n; j++)
        { if(i!=j)
          {int eq=x[i]*y[i]+x[j]*y[j];
          if(x[i]<=a&&y[i]<=b)
           {///i1(y1,y2)
             rim1x=a-x[i],rim1y=b;
              if(x[j]<=rim1x&&y[j]<=rim1y)
                ans=max(ans,eq);
              if(y[j]<=rim1x&&x[j]<=rim1y)
                ans=max(ans,eq);
               ////
             rim1x=a,rim1y=b-y[i];
              if(x[j]<=rim1x&&y[j]<=rim1y)
                ans=max(ans,eq);
              if(y[j]<=rim1x&&x[j]<=rim1y)
                ans=max(ans,eq);
           }
           if(y[i]<=a&&x[i]<=b)
           {///i2(y1,y2)
            rim1x=a-y[i],rim1y=b;
              if(x[j]<=rim1x&&y[j]<=rim1y)
                ans=max(ans,eq);
              if(y[j]<=rim1x&&x[j]<=rim1y)
                ans=max(ans,eq);
              ///
            rim1x=a,rim1y=b-x[i];
              if(x[j]<=rim1x&&y[j]<=rim1y)
                ans=max(ans,eq);
              if(y[j]<=rim1x&&x[j]<=rim1y)
                ans=max(ans,eq);
            }
          }
        }
    }
    cout<<ans<<endl;
    re 0;
}