#include <bits/stdc++.h>
#include<string.h>
using namespace std;
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define Max(x,y,z) max(x,max(y,z))
#define Min(x,y,z) min(x,min(y,z))
#define fr(i,s,e) for(i=s;i<e;i++)
#define rf(i,s,e) for(i=s-1;i>=e;i--)
#define pb push_back
#define eb emblace_back
#define mp make_pair
#define ff first
#define ss second
#define int long long
#define ll long long
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define vl vector<long long>
 
#define vi vector<int> 
#define vii vector< vector<int> >
#define vll vector< vector<long long> >
#define vpi vector< pair<int,int> >   
#define vpl vector< pair<ll,ll> >   
#define viii vector< vector<vector<int> > >
typedef pair<pair<int, int>,int> P;
#define mod %1000000007
#define pi 3.14159265358979323846//20 decimals
#define ld long double

bool less_vectors(const vector<int>& a,const vector<int>& b) 
{
  return a.size() < b.size();
}
#define N 2000005
bool comp(pair<int,int> p1,pair<int,int> p2)
{
    if(p1.ff!=p2.ff)
        return p1.ff<p2.ff;
    else
        return p1.ss<p2.ss;
}

int32_t main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    freopen("int.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif
    int n;
    cin>>n;
    map<int,int> m;
    for(int i=1;i<=50000;i++)
        m[i*i]=1;
    queue<int> q;
    bool ch=0;
    q.push(n);
    map<int,int> vis;
    vis[n]=1;
    int cnt=0;
    int ans=0;
    while(!q.empty())
    {
        int d=q.front();
       // trace2(d,vis[d]);
        if(m[d])
        {
            ans=vis[d]-1;
            ch=1;
            break;
        }
        q.pop();
        int k=d;
        int u=1;
        int rev=0;
        int pr=-1;
        while(d>0)
        {
            int r=d%10;
            //trace3(d/10,u,rev);
            int num=(d/10)*u+rev;
            rev=r*(u)+rev;
            
            //trace1(u);
            if(d<10 && pr==0)
                break;
            if(vis[num]==0)
            {
                vis[num]=vis[k]+1;
              // trace2(num,vis[num]);
                q.push(num);
                cnt++;
            }
            pr=r;
            d/=10;
            u*=10;
        }
    }
    //trace1(cnt);
    if(ch)
        cout<<ans;
    else
        cout<<-1;
    return 0;
}
