#include <bits/stdc++.h>//Nurstan
using namespace std;

inline void boost(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
}
vector <char> x;
int main(){
	boost();
	char l;
	cin >> l;
	string n;
	cin >> n;
	x.push_back('q');
	x.push_back('w');
	x.push_back('e');
	x.push_back('r');
	x.push_back('t');
	x.push_back('y');
	x.push_back('u');
	x.push_back('i');
	x.push_back('o');
	x.push_back('p');
	x.push_back('a');
	x.push_back('s');
	x.push_back('d');
	x.push_back('f');
	x.push_back('g');
	x.push_back('h');
	x.push_back('j');
	x.push_back('k');
	x.push_back('l');
	x.push_back(';');
	x.push_back('z');
	x.push_back('x');
	x.push_back('c');
	x.push_back('v');
	x.push_back('b');
	x.push_back('n');
	x.push_back('m');
	x.push_back(',');
	x.push_back('.');
	x.push_back('/');	
	if(l == 'R'){
		for(int i = 0; i < n.size();  i ++){
			for(int j = 0; j < x.size(); j ++){
				if(n[i] == x[j]){
					cout << x[j - 1];
				break;
				}
			}
		}
	}
	if(l == 'L'){
		for(int i = 0; i < n.size();  i ++){
			for(int j = 0; j < x.size(); j ++){
				if(n[i] == x[j]){
					cout << x[j + 1];
				break;
				}
			}
		}
	}
}
