#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
typedef vector<vector<ll> > mat;

int wu[(1<<12)]={0},a[15];

vector<pii> qu[(1<<12)];

int cnt[(1<<12)];

int ans[1000005];

int main()
{//ios_base::sync_with_stdio(false);
int n,m,q;
gi(n);gi(m);gi(q);

rep(i,0,n-1)gi(a[i]);

rep(msk,0,(1<<n)-1)
{
	rep(i,0,n-1)
	{
		if(msk&(1<<i))
		wu[msk]+=a[i];
	}
}

rep(i,0,m-1)
{
	ll s;
	scanf("%lld",&s);
	int kk=0;
	rep(ii,0,n-1)
	{
		if(s%10)
		kk+=(1<<(n-1-ii));
		s/=10;
	}
	cnt[kk]++;
}

rep(i,0,q-1)
{
	ll s;
	int k;
	scanf("%lld %d",&s,&k);
	int kk=0;
	rep(ii,0,n-1)
	{
		if(s%10)
		kk+=(1<<(n-1-ii));
		s/=10;
	}
	qu[kk].pb(mp(k,i));
}

rep(msk,0,(1<<n)-1)
{
	int cc[2005]={0};
	rep(m1,0,(1<<n)-1)
	{
		int xx=(m1^msk);
		xx=(1<<n)-xx-1;
		rep(i,1,cnt[m1])
		cc[(wu[xx])]++;
	}
	rep(i,1,2004)
	{
		cc[i]+=cc[i-1];
	}
	tr(qu[msk],it)
	{
		int id=it->ss,k=it->ff;
		ans[id]=cc[k];
	}
}

rep(i,0,q-1)
{
	printf("%d\n",ans[i]);
}

return 0;
}

