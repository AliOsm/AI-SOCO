#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;

#define endl '\n'
#define ff first
#define ss second
#define sz(v) (int)v.size()
#define int long long
#define pb push_back
#define f(i,l,r) for(ll i=l;i<=r;i++)
#define rf(i,r,l) for(ll i=r;i>=l;i--)
#define Max 5000001
#define inf 2147483647
#define llinf 9223372036854775807
#define all(v) v.begin(),v.end()
#define bp(n) __builtin_popcountll(n)
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)

#define d0(a) cout<<a<<' ';
#define d1(a) cout<<a<<endl;
#define d2(a,b) cout<<a<<' '<<b<<endl;
#define d3(a,b,c) cout<<a<<' '<<b<<' '<<c<<endl;
#define d4(a,b,c,d) cout<<a<<' '<<b<<' '<<c<<' '<<d<<endl;
#define d5(a,b,c,d,e) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<endl;
#define d6(a,b,c,d,e,f) cout<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<e<<' '<<f<<endl;

const ll N=1e5+5,mod=1e9+7,bit=63;


signed main()
{
    fast;

    vector<ll> pos,neg;
    ll prev=1;
    char ch='a';
    ll id=1;
    while(ch!='=')
    {
        cin>>ch;
        if(prev==1)
        {
            pos.pb(id);
        }
        else
        {
            neg.pb(id);
        }
        id++;
        cin>>ch;
        if(ch=='-')
        {
            prev=-1;
        }
        else
        {
            prev=1;
        }
    }
    ll n;
    cin>>n;
    ll mx=sz(pos)*n-sz(neg);
    ll mn=sz(pos)-n*sz(neg);
    if(n>mx or n<mn)
    {
        cout<<"Impossible\n";
        exit(0);
    }
    ll ans[id];
    ll sum=0;
    f(i,1,id-1)
    {
        if(binary_search(all(pos),i))
        {
            ans[i]=n;
            sum+=n;
        }
        else
        {
            sum-=1;
            ans[i]=1;
        }
    }
    for(auto x:pos)
    {
        // -n + my + sum >= n;
        ll my=min(max(1ll,n+n-sum),n);
        sum-=ans[x];
        ans[x]=my;
        sum+=ans[x];
    }
    for(auto x:neg)  // At this stage sum>=n
    {
        // 1-my+sum >= n
        ll my=max(1ll,min(1+sum-n,n));
        sum+=ans[x];
        ans[x]=my;
        sum-=ans[x];
    }
    cout<<"Possible\n";
    f(i,1,id-1)
    {
        if(binary_search(all(pos),i))
        {
            if(i!=1)
            {
                cout<<"+ ";
            }
            cout<<ans[i]<<' ';
        }
        else
        {
            cout<<"- ";
            cout<<ans[i]<<' ';
        }
    }
    cout<<"= ";
    cout<<n<<endl;
    return 0;
}
















