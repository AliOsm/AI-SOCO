#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"

#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0);}

inline int safe_mul(int x, int y) __attribute__ ((warn_unused_result));

int const maxn = 3000005;

int cnt[maxn];
int sumcnt[maxn];

long long ans[maxn];

int main()
{
//    freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
   // ios_base::sync_with_stdio(false);

    int n;
    cin >> n;
    for(int i = 0; i < n; ++i)
    {
        int cur;
        scanf("%d", &cur);
        ++cnt[cur];
    }

    long long veryAns = 0;

    for(int i = maxn - 2; i >= 0; --i)
        sumcnt[i] = sumcnt[i + 1] + cnt[i];

    for(int i = maxn - 1; i >= 2; --i)
    {
       int d = (maxn + i - 1) / i;
       veryAns += d > i ? sumcnt[d] * 1LL * cnt[i] : (sumcnt[d] - 1) * 1LL * cnt[i];
    }


    for(int i = 1; i < maxn; ++i)
    {
        if (cnt[i] > 0)
        {
            long long koef = cnt[i];
            --cnt[i];
            for(int d = 1, j = i; j < maxn; j += i, ++d)
                ans[j] += cnt[d] * koef;
            ++cnt[i];
        }
    }

    for(int i = maxn - 2; i >= 0; --i)
        ans[i] += ans[i + 1];

    int m;
    cin >> m;
    for(int i = 0; i < m; ++i)
    {
        int cur;
        scanf("%d", &cur);
        printf("%I64d\n", veryAns + ans[cur]);
       // cin >> cur;
        //cout << veryAns + ans[cur] << '\n';
    }
}

