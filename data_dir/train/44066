#include <bits/stdc++.h>
#define ff first
#define ss second
#define pii pair < ll , ll  >
#define psi pair < string , ll  >
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define fast_input ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define FILL_1(a) memset(a,-1,sizeof(a))
#define FILL_0(a) memset(a,0,sizeof(a))

using namespace std;
typedef long long ll;
const ll inf= 1e9+7;
/// code starts here


#include <bits/stdc++.h>
using namespace std;

// limit for array size
const ll N = 100000+5;

ll n;
vector < ll > divisor[1000006];

ll pre()
{
    for(ll i=1;i<=N ;i++)
    {
        for(ll j=i;j<=1e6;j+=i)
            divisor[j].push_back(i);
    }
}
ll ans=0;
ll w[N];
void add(ll x)
{
    for(ll j=divisor[x].size()-1;j>=0;j--)
    {
        w[divisor[x][j]]=(w[divisor[x][j]] + w[divisor[x][j]-1]) % inf;
        //ans+=w[divisor[x][j]];
        if(j==0) w[1]++;
        //ans %=inf;
    }
}


// driver program to test the above function
int main()
{
    fast_input;

    pre();
    ll n;
    cin>>n;
    ll a;
    for(ll i=0;i<n;i++)
    {
        cin>>a;
        add(a);
    }
    for(ll i=0;i<N;i++)
    {
        ans=(ans+w[i])%inf;
    }
    cout<<ans<<endl;
    return 0;

}
