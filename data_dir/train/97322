#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define endl '\n'
#define all(a) a.begin(),a.end()
#define int long long
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

struct super_hash
{
    size_t operator ()(unsigned long long x)const
    {
        static const unsigned long long f=rnd();
        return f^x;
    }
};

const int N=2e5+5;
const int inf=1e9;
const int mod=1e9+7;

int x[N];

main ()
{
    int n,m;
    cin>>n>>m;
    for (int i=1;i<=n;++i){
        cin>>x[i];
    }
    sort(x+1,x+n+1);
    vector<int>b;
    for (int i=1;i<=m;++i){
        int x1,x2,y;
        cin>>x1>>x2>>y;
        if (x1==1){
            b.pb(x2);
        }
    }
    sort(all(b));
    int ans=inf;
    x[n+1]=inf;
    int j=0;
    for (int i=0;i<=n;++i){
        int f=x[i+1];
        while(j<b.size() && b[j]<f)++j;
        int k;
        if (j==b.size())k=0;
        else {
            k=b.size()-j;
        }
        ans=min(ans,i+k);
    }
    cout<<ans<<endl;
}
