#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
using namespace std;

#define ll long long
#define MP make_pair
const int mod = 1e9 + 7;

vector<int> a(111111);
vector<pair<int,int> > G[1111111];

int dfs(int v, int p, ll s) {
    if (a[v] < s) {
        return 0;
    }
    if (s < 0) {
        s = 0;
    }
    int ans = 1;
    for (int i = 0; i < G[v].size(); ++i) {
        pair<int, int> q = G[v][i];
        if (q.first != p) {
            ans += dfs(q.first, v, s + q.second);
        }
    }
    return ans;
}

int main()
{
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w+", stdout);

    int n = 0;
    cin >> n;

    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
    }

    for (int i = 2; i <= n; ++i) {
        int p = 0;
        int c = 0;

        cin >> p >> c;
        G[i].push_back(MP(p, c));
        G[p].push_back(MP(i, c));
    }
    cout << n - dfs(1, -1, 0) << endl;


    return 0;
}
