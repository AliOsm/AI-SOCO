#include <bits/stdc++.h>
#define fr first
#define sc scanf
#define pf printf
#define se second
#define sq(x) x * x
#define ll long long
#define pb push_back
#define mk make_pair
#define ld long double
#define pr pair<int,int>
#define sz(s) int(s.size())
#define piip pair< pair<ll,ll>,ll >
#define fin(s) freopen( s, "r", stdin )
#define fout(s) freopen( s, "w", stdout )
#define TIME ios_base::sync_with_stdio(0)
using namespace std;

const ll INF = 1e18;
const ll N = 3e5 + 2;
const ll mod = 1e9 + 7;
const long double eps = 1E-7;

int n, m, p, l, r, pk, mi, a[N], b[N], c[N], d[N];
int main()
{
    TIME;
    //fin( "numbers.in" );
    //fout( "numbers.out" );
    cin >> n >> m;
    for( int i = 1; i <= n; i ++ )
        cin >> a[i];
    for( int i = 1; i <= m; i ++ )
        cin >> b[i] >> c[i];
    vector<pr>V; mi = m;
    V.pb( { b[m], c[m] } );
    for( int i = m-1; i >= 1; i -- )
        if( c[i] > c[mi] )
            mi = i, V.pb( { b[i], c[i] } );
    r = pk = V.back().se;
    l = 1, p = V.back().fr;
    sort( a + 1, a + pk + 1 );
    for( int i = pk+1; i <= n; i ++ )
        d[i] = a[i];
    if( p == 2 )
        reverse( a + 1, a + pk + 1 );
    for( int i = sz(V)-1; i >= 1; i -- )
    {
        auto x = V[i], y = V[i-1];
        for( int j = x.se; j > y.se; j -- )
        {
            if( p == x.fr )
                d[j] = a[r --];
            else
                d[j] = a[l ++];
        }
    }
    for( int i = V[0].se; i >= 1; i -- )
    {
        if( p == V[0].fr )
            d[i] = a[r --];
        else
            d[i] = a[l ++];
    }
    for( int i = 1; i <= n; i ++ )
        cout << d[i] << " ";
}
