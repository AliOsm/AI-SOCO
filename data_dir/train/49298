#include <string.h>
#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <stdlib.h>

using namespace std;

const int N = 2000010;

int n, a[N], b[N];

typedef long long ll;

ll dfs(int l, int r){

	cout << l << " " << r << endl;
	for(int i = l; i < r; i++)
		cout << a[i] << " ";
	cout << endl;
	int m = 0;
	for(int i = l; i < r; i++)
		m = max(m, a[i]);
	ll sum = 0;
	sum += m;
	int x = r - l;
	if(x == 1) return sum;
	x /= 4;
	int y = 1;
	for(int i = 1; i * i <= n; i++){
		if(i * i == r - l)
			y = i;
	}
	int cnt1 = l;
	int cnt2 = l + x;
	int cnt3 = l + x + x;
	int cnt4 = l + x + x + x;
	for(int i = 0; i < y; i++)
		for(int j = 0; j < y; j++)
			if(i < y / 2 && j < y / 2)
				b[cnt1++] = a[l + i * y + j];
			else if(i < y / 2 && j >= y / 2)
				b[cnt2++] = a[l + i * y + j];
			else if(i >= y / 2 && j < y / 2)
				b[cnt3++] = a[l + i * y + j];
			else b[cnt4++] = a[l + i * y + j];
	for(int i = l; i < r; i++)
		a[i] = b[i];
	sum += dfs(l, l + x);
	sum += dfs(l + x, l + x + x);
	sum += dfs(l + x + x, l + x + x + x);
	sum += dfs(l + x + x + x, l + x + x + x + x);
	return sum;
}

int main(){
	scanf("%d", &n);
	for(int i = 0; i < n; i++)
		scanf("%d", &a[i]);
	sort(a, a + n);
	reverse(a, a + n);
	ll sum = 0;
	int l = 1;
	while(l <= n){
		for(int i = 0; i < l; i++)
			sum += a[i];
		l *= 4;
	}
	cout << sum << endl;
	return 0;
}
