#include <bits/stdc++.h>
using namespace std;

const int MAXN = 5005;
int c[MAXN], d[MAXN];
long long f[2][MAXN][MAXN], t[MAXN];
int sz[MAXN];
vector<int> g[MAXN];

void DFS(int u)
{
    sz[u] = 1;
    f[0][u][1] = c[u];
    f[1][u][1] = c[u] - d[u];

    for(auto &v : g[u])
    {
        DFS(v);
        for(int i = 0; i <= sz[u]; ++i)
            t[i] = f[0][u][i];
        for(int i = 0; i <= sz[u]; ++i)
            for(int j = 0; j <= sz[v]; ++j)
                f[0][u][i + j] = min(f[0][u][i + j], t[i] + f[0][v][j]);
        for(int i = 0; i <= sz[u]; ++i)
            t[i] = f[1][u][i];
        for(int i = 1; i <= sz[u]; ++i)
            for(int j = 0; j <= sz[v]; ++j)
                f[1][u][i + j] = min(f[1][u][i + j], t[i] + min(f[0][v][j], f[1][v][j]));

        sz[u] += sz[v];
    }

    return;
}

int main()
{
    int n, m, ans = 0;

    // freopen("D:\\1.in", "r", stdin);
    // freopen("D:\\1.out", "w", stdout);

    scanf("%d%d", &n, &m);
    scanf("%d%d", &c[1], &d[1]);
    for(int i = 2, p; i <= n; ++i)
        scanf("%d%d%d", &c[i], &d[i], &p), g[p].push_back(i);

    for(int i = 0; i < 2; ++i)
        for(int j = 1; j <= n; ++j)
            for(int k = 1; k <= n; ++k)
                f[i][j][k] = LLONG_MAX;

    DFS(1);
    for(int i = 0; i <= n; ++i)
        for(int j = 0; j < 2; ++j)
            if(f[j][1][i] <= m)
                ans = max(ans, i);

    printf("%d\n", ans);

    return 0;
}
