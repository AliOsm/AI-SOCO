//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(1e5+5);
const ll mod=(ll)(1e9+7);
int a[maxn];
ld x[maxn],y[maxn];

ld dis(ld x1,ld y1,ld x2,ld y2)
{
    return hypot(x1-x2,y1-y2);
}

bool check(ld mid,int n,ld sign)
{
    ld left=LONG_LONG_MIN,right=LONG_LONG_MAX,y1=mid*sign;

    for(int i=0;i<n;i++)
    {
        ld curr_dis=(y1-y[i])*(y1-y[i]);

        ld now=(mid*mid)-curr_dis;

        if(now<0)
        {
            return false;
        }

        now=sqrt(now);

        left=max(left,-now+x[i]);

        right=min(right,now+x[i]);
    }

    return left<=right;
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);

    int n;cin>>n;

    ld max_y=LONG_LONG_MIN,min_y=LONG_LONG_MAX;

    for(int i=0;i<n;i++)
    {
        cin>>x[i]>>y[i];

        max_y=max(max_y,y[i]);

        min_y=min(min_y,y[i]);
    }

    if(max_y>0 && min_y<0)
    {
        cout<<(-1)<<endl;

        return 0;
    }

    int sign=max_y>0?1:-1,iter=200;

    ld low=0,high=1e14+100;

    while(iter>0)
    {
        ld mid=(low+high)*(0.5);

        if(check(mid,n,sign))
        {
            high=mid;
        }
        else
        {
            low=mid;
        }

        iter--;
    }

    cout<<fixed<<setprecision(15)<<low<<endl;

    return 0;
}
