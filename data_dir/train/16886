#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define INF 2000000000
#define DESPACITO2 1000000000000000
#define DESPACITO 1000000000000000000
#define MOD 1000000007
#define ll long long
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define ii pair<int,int>
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define REP(i,a,b) for(int i=int(a);i<=int(b);i++)
#define TRvi(c,it) for(vi::iterator it=(c).begin();it!=(c).end();it++)
#define TRvii(c,it) for(vii::iterator it=(c).begin();it!=(c).end();it++)
#define TRmsi(c,it) for(msi::iterator it=(c).begin();it!=(c).end();it++)
 
 
using namespace std;

int n,k1,k2;
int s1[7001];
int s2[7001];
int dp[2][7001];

int dfs(int node,int turn,int ct)
{
	if(node>n)
		node-=n;
	if(node==1)
		return 0;
	if(dp[turn][node]!=-1)
		return dp[turn][node];
	if(ct>2*n)
		return 1;
	int x=3;
	if(turn==0)
	{
		REP(i,1,k1)
		{
			int val=dfs(node+s1[i],1,ct+1);
			x=min(x,val);
		}
	}
	else
	{
		REP(i,1,k2)
		{
			int val=dfs(node+s2[i],0,ct+1);
			x=min(x,val);

		}
	}
	dp[turn][node]=2-x;
	return dp[turn][node];
}

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
        // for getting input from input.txt
        freopen("input.txt", "r", stdin);
        // for writing output to output.txt
        freopen("output.txt", "w", stdout);
    #endif
    cin >> n;
    cin >> k1;
    REP(i,1,k1)
    	cin >> s1[i];
    sort(s1+1,s1+k1+1);
    cin >> k2;
    REP(i,1,k2)
    	cin >> s2[i];
    sort(s2+1,s2+k2+1);
    REP(i,0,1)
    {
    	REP(j,1,n)
    		dp[i][j]=-1;
    }
    REP(i,1,k1)
    	dp[0][n+1-s1[i]]=2;
    REP(i,1,k2)
    	dp[1][n+1-s2[i]]=2;
    REP(i,2,n)
    {
    	int val=dfs(i,0,1);
    	/*if(val==2)
    		cout << "Win ";
    	else if(val==0)
    		cout << "Lose ";
    	else
    		cout << "Loop ";*/
    }
    //cout << "\n";
    REP(i,2,n)
    {
    	int val=dfs(i,1,1);
    	/*if(val==2)
    		cout << "Win ";
    	else if(val==0)
    		cout << "Lose ";
    	else
    		cout << "Loop ";*/
    }
    REP(i,2,n)
    {
    	int val=dfs(i,0,1);
    	if(val==1)
    		dp[0][i]=-1;
    	val=dfs(i,1,1);
    	if(val==1)
    		dp[1][i]=-1;
    }
    REP(i,2,n)
    {
    	int val=dfs(i,0,1);
    	if(val==2)
    		cout << "Win ";
    	else if(val==0)
    		cout << "Lose ";
    	else
    		cout << "Loop ";
    }
    cout << "\n";
    REP(i,2,n)
    {
    	int val=dfs(i,1,1);
    	if(val==2)
    		cout << "Win ";
    	else if(val==0)
    		cout << "Lose ";
    	else
    		cout << "Loop ";
    }
}