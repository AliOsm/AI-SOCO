#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 50000;
map < int, int > t;
const int mod = 1e9 + 7;
int a[N];
int f(int x){
    if (x == 0) return 1;
    return f(x - 1) * x % mod;
}
int binpow(int x, int y){
    int res = 1;
    while(y){
        if (y % 2) res = res * x % mod;
        x = x * x % mod;
        y /= 2;
    }
    return res;
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n, s;
    cin >> n >> s;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        a[i]++;
    }
    if (n == 1){
        if (a[1] > s) cout << 1; else cout << 0;
        return 0;
    }
    int zz = binpow(f(n - 1), mod - 2);
    for (int j = 0; j < (1LL << n); j++){
        int x = 0;
        int y = 0;
        for (int i = 0; i < n; i++){
            if (j & (1LL << i)) x += a[i + 1]; else y++;
        }
        if (y % 2) t[x]--; else t[x]++;
    }
    int ans = 0;
    for (auto i: t){
        if (i.F - n < s) continue;
        int x = i.F - n - s + 1;
        x %= mod;
        int y = x;
        for (int j = 1; j < n - 1; j++)
            y = y * (x + j) % mod;
        y = y * zz % mod;
        ans = (ans + i.S * y % mod + mod) % mod;
    }
    cout << ans;
}
