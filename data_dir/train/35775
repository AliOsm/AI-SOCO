#include <iostream>

using namespace std;

int m;
long long n, mod;

long long Sum(long long val) {
	if (val % 2) {
		return (val + 1) / 2 % mod * (val % mod) % mod;
	}
	return val / 2 % mod * ((val + 1) % mod) % mod;
}

long long arifm(long long len, long long f, long long step, long long l, long long r) {
	long long v1, v2;	
	if (l < f) {
		v1 = 0;
	} else {
		v1 = (l - f) / step;
		while (f + v1 * step < l) {
			v1++;
		}		
	}
	if (r > f + len * step) {
		v2 = len;
	} else {
		v2 = (r - f) / step;
	}
	len = v2 - v1 + 1;
	long long rez = (f % mod) * (len % mod) % mod;
	long long sum = ((Sum(v2) - Sum(v1 - 1) + mod) * (step % mod) + rez) % mod;		
	return sum;
}

long long count(long long l, long long r, long long d, long long step, long long ll, long long rr, long long u, long long v) {
	if (r < ll || rr < l) {
		return 0;
	}
	if (v < d || d + step * (r - l) < u) {
		return 0;
	}
	if (ll <= l && r <= rr) {
		return arifm(r - l, d, step, u, v);
	}
	long long m = (l + r) / 2;
	return (count(l, m, d, step * 2, ll, rr, u, v) +
			count(m + 1, r, d + step, step * 2, ll, rr, u, v)) % mod;
	
}

int main() {
	ios_base::sync_with_stdio(0);
	cin >> n >> m >> mod;
	for (;m;m--) {
		long long l, r, u, v;
		cin >> l >> r >> u >> v;		
		long long ans = count(1, n, 1, 1, l, r, u, v);
		cout << ans << endl;
	}
	
	return 0;
}