#include<iostream>
#include<cstdlib>
#include<vector>
#include<climits>
#include<cctype>
#include<map>
#include<list>
#include<cstdio>
#include<algorithm>
#include<memory.h>
#include<cmath>
#include<queue>
#include<fstream>
#include<sstream>
#include<set>
#include<iomanip>
#include<bitset>
#include<ctime>
#define L long long int
#define LD long double
#define pi 3.141592653589793238462643383
#define M 1000000007

using namespace std;

int e1[100005],e2[100005],p[100005];
vector<int> g[100005];

void dfs(int v,int pa)
{
     p[v]=pa;
     for(int i=0;i<g[v].size();i++)
     {
                               if(g[v][i]!=pa)
                               {
                                              dfs(g[v][i],v);
                               }
     }
}
             
int main()
{
    int n,i,j;
    while(cin>>n)
    {
              for(i=0;i<n-1;i++)
              cin>>e1[i]>>e2[i];
              
              cout<<n-1<<"\n";
              
              //for(i=0;i<n-1;i++)
              //cout<<"2 "<<e1[i]<<" "<<e2[i]<<"\n";
              
              vector<int> v;
              for(i=0;i<n-1;i++)
              {
                                if(e1[i]==1)
                                {
                                              v.push_back(e2[i]-1);
                                              //h[e2[i]-1].push_back(e2[i]-1);
                                              //h[e2[i]-1].push_back(1);
                                              //p[e2[i]-1]=-1;
                                              continue;
                                }
                                else if(e2[i]==1)
                                {
                                              v.push_back(e1[i]-1);
                                              //h[e1[i]-1].push_back(e1[i]-1);
                                              //h[e1[i]-1].push_back(1);
                                              //p[e1[i]-1]=-1;
                                              continue;
                                }
                                else
                                {
                                              g[e1[i]-1].push_back(e2[i]-1);
                                              g[e2[i]-1].push_back(e1[i]-1);
                                }
              }
              //cout<<v.size()<<".\n";
              for(i=0;i<v.size();i++)
              dfs(v[i],-1);
              if(v.size()>=2)
              {
                             for(i=0;i<v.size()-1;i++)
                             {
                                                      g[v[i]].push_back(v[i+1]);
                                                      g[v[i+1]].push_back(v[i]);
                             }
              }
              for(i=1;i<n;i++)
              {
                              if(p[i]==-1)
                              cout<<"2 "<<i+1<<" 1\n";
                              else
                              cout<<"2 "<<i+1<<" "<<p[i]+1<<"\n";
              }
              for(i=1;i<=n;i++)
              {
                              for(j=0;j<g[i].size();j++)
                              {
                                                        if(i<g[i][j])
                                                        cout<<i<<" "<<g[i][j]<<"\n";
                              }
              }
                              
    }
    return 0;
}
