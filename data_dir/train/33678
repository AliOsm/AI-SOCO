#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <map>
#include <memory.h>
#include <cassert>
#include <set>
using namespace std;
#define ll long long
//#define ll long long
const ll N = 3e5 + 10;
const ll inf = 1e12;
int n, h;
int a[N];
int main(){
    ios_base::sync_with_stdio(false); cin.tie(); cout.tie();
    cin >> n >> h;
    for(int i = 0; i < n; ++i){
        cin >> a[i];
    }
    for(int k = n; k >= 0; --k){
        vector<int> vec(k);
        for(int i = 0; i < k; ++i){
            vec[i] = a[i];
        }
        sort(vec.begin(), vec.end());
        int curSum = 0;
        for(int i = 0; i < k; i += 2){
            int val = vec[i];
            if(i + 1 < k) val = max(val, vec[i + 1]);
            curSum += val;
            if(curSum > h) break;
        }
        if(curSum <= h){
            cout << k << endl;
            return 0;
        }
        curSum = 0;
        for(int i = k - 1; i >= 0; i -= 2){
            int val = vec[i];
            curSum += val;
            if(curSum > h) break;
        }
        if(curSum <= h){
            cout << k << endl;
            return 0;
        }
    }
    return 0;
}
