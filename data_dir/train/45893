#include <bits/stdc++.h>
using namespace std;

int n, m;
int a[1005][1005];
vector<int> R[1005], C[1005];
int ans[1005][1005];
int main() {
	ios::sync_with_stdio(0);
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++) {
			cin >> a[i][j];
			R[i].push_back(a[i][j]);
			C[j].push_back(a[i][j]);
		}
	for (int i = 0; i < n; i++) {
		sort(R[i].begin(), R[i].end());
		R[i].erase(unique(R[i].begin(), R[i].end()), R[i].end());
	}
	for (int j = 0; j < m; j++) {
		sort(C[j].begin(), C[j].end());
		C[j].erase(unique(C[j].begin(), C[j].end()), C[j].end());
	}

	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++) {
			int x = a[i][j];
			int v1 = lower_bound(R[i].begin(), R[i].end(), x) - R[i].begin();
			int v2 = lower_bound(C[j].begin(), C[j].end(), x) - C[j].begin();
			int v = max(v1, v2) + 1;
			int w1 = lower_bound(R[i].begin(), R[i].end(), x + 1)
					- R[i].begin();
			int w2 = lower_bound(C[j].begin(), C[j].end(), x + 1)
					- C[j].begin();
			w1 = R[i].size() - w1;
			w2 = C[j].size() - w2;
//			cout << x << ": " << v1 << " " << v2 << " " << w1 << " " << w2
//					<< " " << max(w1, w2) + v << endl;
			ans[i][j] = max(w1, w2) + v;
		}
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			printf("%d%c", ans[i][j], j == m - 1 ? '\n' : ' ');
	return 0;
}
