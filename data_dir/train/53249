#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <iostream>
#include <set>
#include <map>
#include <vector>
#include <string>
using namespace std;

#define mp make_pair
#define pb push_back
#define snuke(it,x) for (__typeof((x).begin()) it = (x).begin(); it != (x).end(); it ++)
typedef long long lld;
typedef pair<int,int> PII;

const int N = 101000;

vector<PII> dot;
vector<int> xx[N],yy[N];
set<PII> Set;
int n;

int worky(int x,int y) {
        int ret = 0;
        snuke(it,yy[y]) {
                int d = x - *it;
                ret += (Set.count(mp(x,y-d)) && Set.count(mp(x-d,y-d)));
        }
        return ret;
}
int workx(int x,int y) {
        int ret = 0;
        snuke(it,xx[x]) {
                int d = y - *it;
                ret += (Set.count(mp(x-d,y)) && Set.count(mp(x-d,y-d)));
        }
        return ret;
}
int main() {
        scanf("%d",&n);
        for (int i = 0; i < n; i ++) {
                int a,b;
                scanf("%d%d",&a,&b);
                dot.pb(mp(b,a));
        }
        sort(dot.begin(),dot.end());
        int ans = 0;
        for (int i = 0; i < n; i ++) {
                int y = dot[i].first;
                int x = dot[i].second;
                if (xx[x].size() > yy[y].size()) {
                        ans += worky(x,y);
                } else {
                        ans += workx(x,y);
                }
                xx[x].pb(y);
                yy[y].pb(x);
                Set.insert(mp(x,y));
        }
        printf("%d\n",ans);
        return 0;
}
