#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>
#include <time.h>
#include <stdbool.h>
// const int dx[] = {0, 1, 0, -1};
// const int dy[] = {1, 0, -1, 0};
// const int dx[] = {-1, -1, -1, 0, 0, 1, 1, 1};
// const int dy[] = {-1, 0, 1, -1, 1, -1, 0, 1};
// const int dx[] = {2, 2, -2, -2, 1, 1, -1, -1};
// const int dy[] = {-1, 1, 1, -1, 2, -2, 2, -2};
#define pf printf
#define sf scanf
#define fr(i,a,b) for((i)=(a);i<(int)(b);(i)++)
#define frr(i,a,b) for((i)=(a);i>=(int)(b);(i)--)
#define ln puts("")
#define mems(a) memset((a),0,sizeof(a))
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
int on_bit(int x, int pos) {x |= (1 << pos); return x;}
int off_bit(int x, int pos) {x &= ~(1 << pos); return x;}
bool is_on_bit(int x, int pos) {return ((x & (1 << pos)) != 0);}
int flip_bit(int x, int pos) {x ^= (1 << pos); return x;}
int lsb(int x) {return x & (-x);}
int on_bit_all(int x, int pos) {x = (1 << pos)-1; return x;}
const double EPS = 1e-9;
const double PI = 2*acos(0.0);
const int INF = 0x3f3f3f3f;
const ll LLINF = 1e18;
const int MOD = 1e9+7;
int add(ll a, ll b){return ((a%MOD)+(b%MOD))%MOD;}
int sub(ll a, ll b){return ((a%MOD)-(b%MOD))%MOD;}
int mult(ll a, ll b){return ((a%MOD)*(b%MOD))%MOD;}
ll gcd(ll a, ll b) {return b?gcd(b,a%b):a;}

#define N 111
int n,r,k;
int f[N][N];
int d[N][N];
int t[N][N];

void fw(){
	int i,j,x;
	fr(i,1,n+1)fr(j,1,n+1)
		if(t[i][j]<k)
			f[i][j]=d[i][j];
	fr(x,1,n+1){
		fr(i,1,n+1){
			fr(j,1,n+1){
				if(t[i][x]+t[x][j]<=k){
					if(f[i][x]+d[x][j]<f[i][j]){
						f[i][j]=f[i][x]+d[x][j];
						t[i][j]=t[i][x]+t[x][j];
					}
					// f[i][j]=min(f[i][j],f[i][x]+d[x][j]);
					// t[i][j]=min(t[i][j],t[i][x]+t[])
				}
					
					// f[i][j]=d[i][k]+d[k][j];
			}
		}
	}
	puts(">>>>>>>>>>>>>>.");
	fr(i,1,n+1){
		fr(j,1,n+1){
			if(f[i][j]==INF)putchar('-');
			else pf("%d",f[i][j]);
			putchar(',');
			if(t[i][j]==INF)putchar('-');
			else pf("%d",t[i][j]);
			putchar(' ');
			// pf(", ",t[i][j]);

		}
		ln;
	}
	puts(">>>>>>>>>>>>>>.");
}

int main(){
	ll x,y,z;
	sf("%lld%lld%lld",&x,&y,&z);
	ll res = (x/z + (x%z!=0))*(y/z+(y%z!=0));
	pf("%lld\n", res);
	return 0;
	int T,i,j;
	sf("%d",&T);
	while(T--){
		sf("%d%d%d",&k,&n,&r);
		fr(i,0,N-3)fr(j,0,N-3){f[i][j]=INF;d[i][j]=INF;t[i][j]=INF;}
		fr(i,0,r){
			int src,dst,len,cost;
			sf("%d%d%d%d",&src,&dst,&len,&cost);
			d[src][dst]=len;
			t[src][dst]=cost;
		}
		fw();
		pf("res %d\n",f[1][n]);
	}
	return 0;
}