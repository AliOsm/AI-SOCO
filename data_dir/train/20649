#include <bits/stdc++.h>

using namespace std;

typedef pair <int,int> pii;

#define L first
#define R second

const int maxn = 1100;
char a[maxn][maxn];
queue <pii> q;
int n, m, h[maxn][maxn];
bool mark[maxn][maxn];

void bfs(int x,int y) {
	q.push({x, y});
	while (q.size() > 0) {
		x = q.front().L, y = q.front().R;
		q.pop();
		if (x + 1 < n && !mark[x + 1][y] && a[x + 1][y] != 'T') {
			q.push({x + 1, y});
			mark[x + 1][y] = true;
			h[x + 1][y] = h[x][y] + 1;
		}
		if (x - 1 >= 0 && !mark[x - 1][y] && a[x - 1][y] != 'T') {
			q.push({x - 1, y});
			mark[x - 1][y] = true;
			h[x - 1][y] = h[x][y] + 1;
		}
		if (y + 1 < m && !mark[x][y + 1] && a[x][y + 1] != 'T') {
			q.push({x, y + 1});
			mark[x][y + 1] = true;
			h[x][y + 1] = h[x][y] + 1;
		}
		if (y - 1 >= 0 && !mark[x][y - 1] && a[x][y - 1] != 'T') {
			q.push({x, y - 1});
			mark[x][y - 1] = true;
			h[x][y - 1] = h[x][y] + 1;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cin >> n >> m;
	int x, y, X, Y;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++) {
			cin >> a[i][j];
			if (a[i][j] == 'E')
				x = i, y = j;
			if (a[i][j] == 'S')
				X = i, Y = j;
		}
	bfs(x, y);
	int ans = 0;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if ('0' <= a[i][j] && a[i][j] <= '9' && mark[i][j] && h[i][j] <= h[X][Y])
				ans += a[i][j] - '0';

	cout << ans << endl;
	return 0;
}