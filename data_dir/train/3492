#include "omp.h"
#include <iostream>
#include <iomanip>
#include <string>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <vector>
#include <cassert>
#include <fstream>
#include <algorithm>
#include <list>
#include <random>
#include <ctime>
#include <random>
#include <bitset>
#include <unordered_set>
#include <cassert>
#include <list>
#include <functional>


using namespace std;


typedef long double ld;
typedef long long ll;


const int sze = 1000, INF = 1e7;
const ll eps = 15e5;

int used[sze];


signed main()
{
	int n;
	cin >> n;

	vector<int> values(2 * n);
	for (int i = 0; i < 2 * n; ++i)
		cin >> values[i];

	int ans = 0;
	for (int i = 0; i < 2 * n; i += 2)
	{
		for (int j = i + 1; j < 2 * n; j++)
		{
			if (values[i] == values[j])
			{
				for (int z = j; z - 1 > i; --z)
				{
					swap(values[z], values[z - 1]);
					ans++;
				}
				break;
			}
		}
	}

	cout << ans;
	return 0;
}