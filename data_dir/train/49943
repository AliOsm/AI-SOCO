#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define int long long int
using namespace std;
class dsu
{
    public:
    int arr[200001];
    void init();
    int sz[200001];
    void unite(int x,int y);
    int root(int x);
};
void dsu :: init()
{
    for(int i=1;i<=200000;i++)
    {
        arr[i] = i;
        sz[i]=1;
    }
}
int dsu :: root(int x)
{
    while(x!=arr[x])
        x = arr[x];
    return x;
}
void dsu :: unite(int x,int y)
{
    int rx = root(x);
    int ry = root(y);
    if(sz[rx]<=sz[ry])
    {
        arr[rx] = ry;
        sz[ry]+=sz[rx];
    }
    else
    {
        arr[ry] = rx;
        sz[rx]+=sz[ry];
    }
}
signed main()
{
    fast;
    int n;
    cin>>n;
    dsu d0,d1;
    d0.init();
    d1.init();
    for(int i=1;i<=n-1;i++)
    {
        int u,v,t;
        cin>>u>>v>>t;
        if(t==1)
        {
            if(d1.root(u)!=d1.root(v))
                d1.unite(u,v);
        }
        else 
        {   
           if(d0.root(u)!=d0.root(v))
                d0.unite(u,v);
        }
    }
    int ans = 0;
    int vis0[n+1]={};
    int vis1[n+1]={};
    for(int i=1;i<=n;i++)
    {
        int rt = d0.root(i);
        if(!vis0[rt])
        {
            vis0[rt] = 1;
            ans += (d0.sz[rt]*(d0.sz[rt]-1));
        }
        rt = d1.root(i);
        if(!vis1[rt])
        {
            vis1[rt] = 1;
            ans += (d1.sz[rt]*(d1.sz[rt]-1));
        }
        ans += (d0.sz[d0.root(i)]-1)*(d1.sz[d1.root(i)]-1);
    }
    cout<<ans;
}