#include <bits/stdc++.h>

using namespace std;

const int N = 3003;

vector<pair<int, int>> g[N];
int n;

int prec(int u, int p){
	int ans = 0;
	int v, c;
	for(auto x : g[u]){
		tie(v, c) = x;	
		if(v == p) continue;
		ans += c + prec(v, u);
	}
	return ans;
}

vector<int> vet;
int corte;
int sum, one, zero;

int dfs(int u, int p){

	int v, c;

	int antigo = corte;
	int asum = sum, aone = one, azero = zero;

	int ans = 0;
	for(auto x : g[u]){
		tie(v, c) = x;
		if(v == p) continue;
		vet.push_back(c);

		if(c == 0){
			zero++;
			sum++;
		}
		else{
			one++;
		}

		// se muda pro fim
		if(one < sum){
			sum = one;
			zero = 0;
			corte = vet.size()-1;
		}

	
		//printf("%d -> %d (%d) => %d %d\n", u, v, c, sum, one);
		ans = max(ans, one - sum);

		ans = max(ans, dfs(v, u));

		vet.pop_back();
		corte = antigo;
		sum = asum, one = aone, zero = azero;
	}
	return ans;
}

int main(){

	scanf("%d", &n);

	for(int i = 1; i < n; i++){
		int a, b;
		scanf("%d %d", &a, &b);
		g[a].emplace_back(b, 0);
		g[b].emplace_back(a, 1);
	}

	int ans = 1e9;
	for(int u = 1; u <= n; u++){
		int tmp = prec(u, u);
		corte = 0;
		vet.clear();
		//printf(">>%d %d\n", u, tmp);
		tmp -= dfs(u, u);
		ans = min(ans, tmp);
		//printf(">>%d %d\n", u, tmp);
	}

	printf("%d\n", ans);
}
