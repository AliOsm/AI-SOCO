#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000002;
const ll INFLL = 100000000000000000ll;
const ll MOD = 1000003;

// ----------------------------------------------------------------------------------------------------------

int N, L[1005], R[1005], Q;

int main()
{
    cin >> N >> Q;
    int lo = N+5, hi = -3;
    f(i,1,Q)
    {
        int x;
        string s;
        f(i,1,3) cin >> s;
        if(s == "left")
        {
            cin >> s >> x;
            L[x-1]++;
            lo = min(lo,x);
        }
        else
        {
            cin >> s >> x;
            R[x+1]++;
            hi = max(hi,x);
        }
    }

    if(hi >= lo+1)
    {
        cout << -1;
        return 0;
    }

    f(i,1,N) R[i] += R[i-1];
    fd(i,N,1) L[i] += L[i+1];
    int ans = 0;
    f(i,1,N) if(L[i]+R[i] == Q) ans++;
    if(ans == 0) cout << -1;
    else cout << ans;
}
