#include<bits/stdc++.h>
#define f first
#define s second
using namespace std;
char a[501][501],Ans[501][501],fix[501][501],fixx[501][501];
int k,n,m,sz,answ;
bool ans = true;
vector<pair<int,pair<int,int>>> v;
void dfs(int x, int y)
{
        if(x < 1 || y < 1 || x > n || y > m || fix[x][y] || a[x][y] != '.') return;
        if(a[x][y] == '.' && (x <= 1 || y <= 1 || x >= n || y >= m)) { ans = false; return; }
        fix[x][y] = 1;
        sz ++;
        dfs(x,y+1);
        dfs(x,y-1);
        dfs(x+1,y);
        dfs(x-1,y);
}
void dfs2(int x, int y)
{
        if(fixx[x][y] || a[x][y] != '.') return;
        Ans[x][y] = '*';
        fixx[x][y] = 1;
        dfs2(x,y+1);
        dfs2(x,y-1);
        dfs2(x+1,y);
        dfs2(x-1,y);
}
int main()
{
        cin >> n >> m >> k;
        for(int i=1; i<=n; i++)
        {
                for(int j=1; j<=m; j++)
                {
                        cin >> a[i][j]; Ans[i][j] = a[i][j];
                }
        }
        for(int i=1; i<=n; i++)
        {
                for(int j=1; j<=m; j++)
                {
                        if(a[i][j] == '.' && !fix[i][j]) 
                        {
                                sz = 0;
                                ans = true;
                                dfs(i,j);
                                pair<int,pair<int,int>> g;
                                g.f = sz;
                                g.s.f = i;
                                g.s.s = j;
                                //cout << ans << endl << g.f << " " << g.s.f << " " << g.s.s << endl;
                                if(ans == true) v.push_back(g);
                        }
                }
        }
        sort(v.begin(),v.end());
        int vx = v.size(), i = 0;
        while(vx > k)
        {
                //cout << v[i].f << endl;
                 //cout << v[i].s.f << " " << v[i].s.s << endl;
                 dfs2(v[i].s.f,v[i].s.s);
                 vx --; i ++;
                 answ += v[i-1].f;
        }
        cout << answ << endl;
        for(int i=1; i<=n; i++)
        {
                for(int j=1; j<=m; j++)
                {
                        cout << Ans[i][j];
                }
                cout << endl;
        }
}