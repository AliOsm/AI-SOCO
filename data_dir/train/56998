//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

#include <stdio.h>
#include <bits/stdc++.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

inline void setmin(int &x, int y) { if (y < x) x = y; }
inline void setmax(int &x, int y) { if (y > x) x = y; }
inline void setmin(ll &x, ll y) { if (y < x) x = y; }
inline void setmax(ll &x, ll y) { if (y > x) x = y; }

const int N = 1000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

char ans[N][N];

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    cout << fixed;
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n, a, b;
    cin >> n >> a >> b;
    rep(i, 0, n)
        rep(j, 0, n)
            ans[i][j] = '0';
    if (a > 1 && b > 1 || (n == 2 || n == 3) && a == 1 && b == 1)
    {
        cout << "NO\n";
        return 0;
    }
    if (a == 1 && b == 1)
    {
        rep(i, 0, n - 1)
            ans[i][i + 1] = ans[i + 1][i] = '1';
        cout << "YES\n";
        rep(i, 0, n)
        {
            rep(j, 0, n)
                cout << ans[i][j];
            cout << "\n";
        }
        return 0;
    }
    bool rev = false;
    if (a == 1)
    {
        rev = true;
        swap(a, b);
    }
    a = n - (a - 1);
    rep(i, 0, a)
        rep(j, 0, a)
            if (i != j)
                ans[i][j] = '1';
    if (rev)
        rep(i, 0, n)
            rep(j, 0, n)
                if (i != j)
                {
                    if (ans[i][j] == '0')
                        ans[i][j] = '1';
                    else
                        ans[i][j] = '0';
                }
    cout << "YES\n";
    rep(i, 0, n)
    {
        rep(j, 0, n)
            cout << ans[i][j];
        cout << "\n";
    }
    return 0;
}