#include<bits/stdc++.h>

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define sc(a) scanf("%d", &a)

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
const ll MOD = 1000000007;
const long double PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll MODulus)
{
	ll ansult = 1;
	base %= MODulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			ansult = (ansult * base) % MODulus;
		exponent >>= 1;
		base = (base * base) % MODulus;
	}
	return ansult;
}

ll gcdExtended(ll a, ll b, ll *x, ll *y)
{
	cout << a << " " << b << " " << *x << " " << *y << "\n";
	if (a == 0)
	{
		*x = 0, *y = 1;
		return b;
	}
	ll x1, y1;
	ll gcd = gcdExtended(b%a, a, &x1, &y1);
	*x = y1 - (b/a) * x1;
	*y = x1;
	cout << "AFTER " << a << " " << b << " " << *x << " " << *y << "\n";
	return gcd;
}

ll MODInverse(ll a, ll m)
{
	ll x, y;
	ll g = gcdExtended(a, m, &x, &y);
	cout << g << " " << x << " " << y << "\n";
	ll ans = (x%m + m) % m;
	return ans;
}

using namespace std;

pii a[123456];

int main()
{
	ssync;
	int n, k;
	cin>>n>>k;
	if(k < n/2 || (n == 1 && k > 0))
	{
		cout << "-1\n";
		return 0;
	}
	if(n == 1 && k == 0)
	{
		cout << 1 << " ";
		return 0;
	}
	int rem = k - (n-2)/2;
	cout << rem << " " << 2*rem << " ";
	for(int i = 2*rem + 1; i < 2*rem + n - 1; i++)
		cout << i << " ";
	cout << "\n";
	return 0;
}
