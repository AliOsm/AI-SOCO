#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MX=109 , inf = (1<<30);
pair < int , int > dp[2][MX*MX];
int A[MX] , B[MX] , n;
pair < pair < int , int > , int > arr[MX];
int main(){
    cin>>n;
    int ss = 0;
    for(int j=1;j<=n;j++) {
        cin>>A[j];
        ss += A[j];
    }
    for(int j=1;j<=n;j++) cin>>B[j];
    for(int j=1;j<=n;j++)
        arr[j] = { {B[j] , A[j]} , j};
    sort(arr+1 , arr+1+n);
    for(int j=1;j<=n;j++){
        A[j] = arr[j].first.second;
        B[j] = arr[j].first.first;
    }
     for(int i=0;i<MX*MX;i++) dp[0][i] = dp[1][i] = {inf , inf};
    dp[0][0]={0,0};
    bool cur = 0;
   // for(int j=1;j<=n;j++) cout<<A[j]<<' '<<B[j]<<endl;
    for(int bottle = 1 ; bottle<=n ; bottle++){
        cur ^= 1;
        for(int water = 0 ; water <= ss ; water++){
            dp[cur][water] = dp[cur^1][water];
            for(int how = 1 ; how <= min(water , B[bottle]) ; how++){
                int cost = max(0 , how - A[bottle]);
                dp[cur][water] = min(dp[cur][water] , {dp[cur^1][water - how].first + 1 , dp[cur^1][water-how].second + cost});
            }
        }
     //   cout<<bottle<<' '<<dp[cur][2][ss]<<' '<<dp[cur][1][6]<<endl;
    }
    cout<<dp[cur][ss].first<<' '<<dp[cur][ss].second<<endl;
}
