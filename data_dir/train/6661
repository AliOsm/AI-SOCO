// Aggressive Play

#include<bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;

void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

const int N = 3e5 + 5;
ll a[N];
int p[N];
vector<int> prime;
void seive(){
    p[1] = 1;
    for(int i = 2; i < N; i++){
        if(!p[i]){
            prime.push_back(i);
            for(int j = i + i; j < N; j += i)
                p[j] = 1;
        }
    }
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    ll n, k;
    cin >> n >> k;
    seive();
    vector<pair<int, int> > v;
    for(auto i : prime){
        if(n % i == 0){
            int cnt = 0;
            while(n > 0 && n % i == 0){
                n /= i;
                cnt++;
            }
            v.push_back({i, cnt});
        }
    }
    if(n > 1){
        v.push_back({n, 1});
    }
    if((int)v.size() > k){
        while((int)v.size() > k){
            pair<int, int> ff = v.back(); v.pop_back();
            pair<int, int> ss = v.back(); v.pop_back();
            v.push_back({powl(ff.F, ff.S) * powl(ss.F, ss.S), 1});
        }
    }
    int T = 0;
    //debug(v);
    for(auto i : v){
        for(int j = 0; j < i.second; j++){
            a[T++] = i.first;
        }
    }
    if(T < k)
        return cout << -1, 0;
    for(int i = 0; i < k - 1; i++){
        cout << a[i] << " ";
    }
    ll yo = 1;
    for(int i = k - 1; i < T; i++)
        yo *= a[i];
    cout << yo;
return 0;
}
