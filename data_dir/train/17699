#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define f first
#define bp push_back
#define mp make_pair
const int mx=1e7+10;
const double eps=1e-9;
const int inf=1e9;
vector<int>v;
const int mod=1e9+7;
int a,b;
inline bool dig(int x){
    while(x){
        if(x%10!=a && x%10!=b)return 0;
        x/=10;
    }
    return 1;
}
long long POW_M(long long a,long long p,long long m){
    if(p == 0) return 1;
    if(p == 1) return a%m;
    long long x=POW_M(a,p/2,m);
    if( p%2 == 0) return ((x%m)*x)%m;
    return (((x%m) *x%m)*a)%m;
}
long long Cnr_M(long long n,long long r)
{
    r=min(r,n-r);
    long long ans1=1,ans2=1;
    for(long long i=1 ; i<=r ; i++){
        ans2*=i;
        ans1*=n--;
        ans2%=mod;
        ans1%=mod;
    }
    return (ans1*POW_M(ans2,mod-2,mod))%mod;
}
set<int>s;
main(){
    int n;
    scanf("%d%d%d",&a,&b,&n);
    for(int i=1;i<mx;i++){
        if(dig(i))v.bp(i);
    }
    ll ans=0;
    for(auto vec:v){
        int x=(vec-(n*b))/(a-b);
        int y=n-x;
        if(x+y==n && x>-1 && y>-1 && a*x+b*y==vec){
                s.insert(x);
        }
    }
    for(auto x:s){
        ans+=Cnr_M(n,x);
        ans%=mod;
    }
    printf("%lld",ans);
}