#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>

#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e5 + 6;

void solve()
{
    lli n, m;
    cin>>n>>m;
    lli a[n];
    vector<lli> b;
    map<lli, lli> dis;
    queue<lli> q;
    for(int i = 0; i < n; i ++) {
        cin>>a[i];
        dis[a[i]] = 0;
        q.push(a[i]);
    }
    lli ans = 0;
    while(!q.empty() && b.size() < m) {
        lli x = q.front() ;
        q.pop();
        lli now = x - 1;
        if(dis.count(now)) ;
        else {
            dis[now] = dis[x] + 1;
            ans += dis[now];
            q.push(now);
            b.push_back(now);
            if(b.size() == m)
                break ;
        }
        now = x + 1;
        if(dis.count(now)) ;
        else {
            dis[now] = dis[x] + 1;
            ans += dis[now];
            q.push(now);
            b.push_back(now);
            if(b.size() == m)
                break ;
        }
    }
    cout<<ans<<'\n';
    for(auto it : b)cout<<it<<' ';
    cout<<'\n';
    return ;
}

/*
*/
;
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);

    int t = 1;
 //   cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
