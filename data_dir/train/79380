#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 100100;
const int MAXM = 2 * MAXN;

int n;
int to[MAXM], nxt[MAXM], head[MAXN], E;
char s[MAXN];
int sz[MAXN];

void addEdge(int a, int b) {
  to[E] = b; nxt[E] = head[a]; head[a] = E++;
  to[E] = a; nxt[E] = head[b]; head[b] = E++;
}

void calcSz(int v, int p = -1) {
  sz[v] = 1;
  for (int id = head[v]; ~id; id = nxt[id]) {
    if (to[id] != p && !s[to[id]]) {
      calcSz(to[id], v);
      sz[v] += sz[to[id]];
    }
  }
}

int findCentroid(int v, int total, int p = -1) {
  for (int id = head[v]; ~id; id = nxt[id]) {
    if (to[id] != p && !s[to[id]] && total < 2 * sz[to[id]]) {
      return findCentroid(to[id], total, v);
    }
  }
  return v;
}

void buildCentroid(int v, int dep = 0) {
  calcSz(v);
  int centroid = findCentroid(v, sz[v]);
  s[centroid] = 'A' + dep;
  for (int id = head[centroid]; ~id; id = nxt[id]) {
    if (!s[to[id]]) {
      buildCentroid(to[id], dep + 1);
    }
  }
}

int main() {
#ifdef LOCAL
  freopen("input.txt", "r", stdin);
#endif
  scanf("%d", &n);
  memset(head, 0xff, sizeof head);
  for (int i = 1, a, b; i < n; ++i) {
    scanf("%d%d", &a, &b);
    addEdge(a, b);
  }
  buildCentroid(1);
  for (int i = 1; i <= n; ++i) {
    putchar(s[i]);
    if (i != n) putchar(' ');
  }
  return 0;
}