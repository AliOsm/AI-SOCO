#include <iostream>
#include <cstdio>
#include <sstream>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <vector>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define cont continue
#define re return

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

int a[120001], b[120001], n, m, i, x1, y1, x2, y2, k1, k2, v, q, l, r, mid, nom, ans;

    int Abs(int a)
    {
        re (a < 0 ? -a : a);
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n >> m >> k1 >> k2 >> v;

    for (i = 1; i <= k1; i++) cin >> a[i];

    for (i = 1; i <= k2; i++) cin >> b[i];

    cin >> q;

    while (q--) {
        cin >> x1 >> y1 >> x2 >> y2;

        if (x1 > x2) {
            swap(x1, x2);

            swap(y1, y2);
        }

        if (x1 == x2) {
            cout << Abs(y1 - y2) << endl;

            cont;
        }

        l = 1;

        r = k1;

        nom = 0;

        while (l <= r) {
            mid = (l + r) / 2;

            if (a[mid] < y1) {
                l = mid + 1;

                nom = mid;
            }
            else r = mid - 1;
        }

        ans = MAXINT;

        if (nom >= 1)
        ans = min(ans, Abs(y1 - a[nom]) + (x2 - x1) + Abs(a[nom] - y2));

        if (nom + 1 <= k1)
        ans = min(ans, Abs(y1 - a[nom + 1]) + (x2 - x1) + Abs(a[nom + 1] - y2));

        l = 1;

        r = k2;

        nom = 0;

        while (l <= r) {
            mid = (l + r) / 2;

            if (b[mid] < y1) {
                l = mid + 1;

                nom = mid;
            }
            else r = mid - 1;
        }

        if (nom >= 1)
        ans = min(ans, Abs(y1 - b[nom]) + ((x2 - x1) + v - 1) / v + Abs(b[nom] - y2));

        if (nom + 1 <= k2)
        ans = min(ans, Abs(y1 - b[nom + 1]) + ((x2 - x1) + v - 1) / v + Abs(b[nom + 1] - y2));

        cout << ans << endl;
    }

    re 0;
}
