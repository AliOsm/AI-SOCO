#include<bits/stdc++.h>

using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int m, k, n, s;
    cin >> m >> k >> n >> s;
    vector<int> a(m);
    int mx = 0;
    for (int i = 0; i < m; i++) {
        cin >> a[i];
        mx = max(mx, a[i]);
        a[i]--;
    }
    vector<int> b(s);
    for (int i = 0; i < s; i++) {
        cin >> b[i];
        mx = max(mx, b[i]);
        b[i]--;
    }
    vector<int> cnt(mx, 0);
    int zero = mx;
    for (int i = 0; i < s; i++) {
        cnt[b[i]]--;
        if (cnt[b[i]] == -1) {
            zero--;
        }
    }
    vector<int> ptr(m);
    ptr[0] = -1;
    while (ptr[0] + 1 < m && (ptr[0] + 1 < k || zero != mx)) {
        cnt[a[ptr[0] + 1]]++;
        if (cnt[a[ptr[0] + 1]] == 0) {
            zero++;
        }
        ptr[0]++;
    }
    if (ptr[0] + 1 < k || zero != mx) {
        ptr[0] = m;
    }
    for (int i = 1; i < m; i++) {
        cnt[a[i - 1]]--;
        if (cnt[a[i - 1]] == -1) {
            zero--;
        }
        ptr[i] = ptr[i - 1];
        if (ptr[i] == m) {
            continue;
        }
        while (ptr[i] + 1 < m && (ptr[i] - i + 1 < k || zero != mx)) {
            cnt[a[ptr[i] + 1]]++;
            if (cnt[a[ptr[i] + 1]] == 0) {
                zero++;
            }
            ptr[i]++;
        }
        if (ptr[i] - i + 1 < k || zero != mx) {
            ptr[i] = m;
        }
    }
    for (int i = 0; i < m; i++) {
        if (ptr[i] != m) {
            int need = ptr[i] - i + 1 - k + i % k;
            if (m - need < n * k) {
                continue;
            }
            vector<int> who;
            for (int j = 0; j < i % k; j++) {
                who.push_back(j);
            }
            for (int j = 0; j < mx; j++) {
                cnt[j] = 0;
            }
            for (int j = 0; j < s; j++) {
                cnt[b[j]]--;
            }
            set<int> B;
            for (int j = i; j <= ptr[i]; j++) {
                if (cnt[a[j]] < 0) {
                    cnt[a[j]]++;
                    B.insert(j);
                }
            }
            for (int j = i; j <= ptr[i]; j++) {
                if (B.find(j) == B.end() && (int)B.size() < k) {
                    B.insert(j);
                }
            }
            for (int j = i; j <= ptr[i]; j++) {
                if (B.find(j) == B.end()) {
                    who.push_back(j + 1);
                }
            }
            cout << who.size() << endl;
            for (int j = 0; j < (int)who.size(); j++) {
                cout << who[j] << " ";
            }
            return 0;
        }
    }
    cout << "-1\n";
    return 0;
}
