#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;
#define F first
#define S second
#define ii pair <int,int>
#define ever (;;)

const int N = 1000100;

int a,b,c,d,n,ans[N],cnt=1;

bool inline ok(int x) { return c-x == d || c-x-1 == d; }

bool check()
{
    for(int i=2;i<=n;i++)
        if( abs(ans[i]-ans[i-1]) != 1 )
            return 0;

    return 1;
}

int main()
{
    scanf("%d%d%d%d",&a,&b,&c,&d);

    if( !a && !b && c+1 == d )
    {
        printf("YES\n");
        bool q = 1;
        while( c+d > 0 )
        {
            if( q )
            {
                printf("3 ");
                d--;
            }
            else
            {
                printf("2 ");
                c--;
            }

            q ^= 1;
        }

        return 0;
    }

    if( !a && b+d+1 == c && b && d )
    {
        printf("YES\n");
        bool q = 1;
        while(b+c+d>0)
        {
            if( q )
            {
                printf("2 ");
                c--;
            }
            else
            {
                if(b)
                {
                    printf("1 ");
                    b--;
                }
                else
                {
                    printf("3 ");
                    d--;
                }
            }

            q ^= 1;
        }

        return 0;
    }

    if( c == b+1 && !a && !d )
    {
        printf("YES\n");
        bool q = 1;
        while(c+b>0)
        {
            if( q )
            {
                printf("2 ");
                c--;
            }
            else
            {
                printf("1 ");
                b--;
            }

            q ^= 1;
        }

        return 0;
    }

    n = a+b+c+d;

    if( a > b+2 || d > c+2 )
    {
        printf("NO\n");
        return 0;
    }

    if( !ok(b-a) && !ok(b-a-1) )
    {
        printf("NO\n");
        return 0;
    }

    bool q = ok(b-a);
    while(a>0)
    {
        if(q)
        {
            ans[cnt++] = 0;
            a--;
        }
        else
        {
            ans[cnt++] = 1;
            b--;
        }

        q ^= 1;
    }

    q = 1;
    while(b>0)
    {
        if(q)
        {
            ans[cnt++] = 1;
            b--;
        }
        else
        {
            ans[cnt++] = 2;
            c--;
        }

        q ^= 1;
    }

    q = 1;
    while(c>0)
    {
        if(q)
        {
            ans[cnt++] = 2;
            c--;
        }
        else
        {
            ans[cnt++] = 3;
            d--;
        }

        q ^= 1;
    }

    if( d > 0 )
    {
        ans[cnt++] = 3;
        d--;
    }

    if( !check() )
    {
        printf("NO\n");
        return 0;
    }

    printf("YES\n");
    for(int i=1;i<=n;i++)
        printf("%d ",ans[i]);
}
