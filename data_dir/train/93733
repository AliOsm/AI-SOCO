#include <bits/stdc++.h>
using namespace std;

struct SegNode
{
	int minv, maxv, dt;
	SegNode *left, *right;
};

const int MAXN = 100005;
const int MAXS = 305;
int a[MAXN], s[MAXS][2];
SegNode *root;
vector<int> v, lv[MAXN], rv[MAXN];

SegNode* build(int l, int r)
{
	SegNode *u = new SegNode();
	int mid = (l + r) >> 1;

	u->dt = 0;
	if(l == r)
		u->minv = u->maxv = a[r], u->left = u->right = NULL;
	else
		u->left = build(l, mid), u->right = build(mid + 1, r),
		u->minv = min(u->left->minv, u->right->minv),
		u->maxv = max(u->left->maxv, u->right->maxv);

	return u;
}

void update(SegNode *u, int l, int r, int ql, int qr, int val)
{
	int mid = (l + r) >> 1;

	if(u->dt)
	{
		u->minv += u->dt; u->maxv += u->dt;
		if(l != r)
			u->left->dt += u->dt, u->right->dt += u->dt;
		u->dt = 0;
	}

	if(l == ql && r == qr)
	{
		u->dt += val;
		return;
	}
	else if(qr <= mid)
		update(u->left, l, mid, ql, qr, val);
	else if(mid + 1 <= ql)
		update(u->right, mid + 1, r, ql, qr, val);
	else
		update(u->left, l, mid, ql, mid, val),
		update(u->right, mid + 1, r, mid + 1, qr, val);
	
	u->minv = min(u->left->minv + u->left->dt, u->right->minv + u->right->dt);
	u->maxv = max(u->left->maxv + u->left->dt, u->right->maxv + u->right->dt);

	return;
}

int main()
{
	int n, m, ansmax = -1, ansk;
	
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= n; ++i)
		scanf("%d", &a[i]);
	root = build(1, n);
	for(int i = 1; i <= m; ++i)
		scanf("%d%d", &s[i][0], &s[i][1]),
		lv[s[i][0]].push_back(i), rv[s[i][1]].push_back(i),
		update(root, 1, n, s[i][0], s[i][1], -1);
	for(int i = 1; i <= n; ++i)
	{
		int maxv, minv;
		pair<int, int> p;

		for(auto &j : lv[i])
			update(root, 1, n, s[j][0], s[j][1], 1);
	
		maxv = root->maxv + root->dt; minv = root->minv + root->dt;

		for(auto &j : rv[i])
			update(root, 1, n, s[j][0], s[j][1], -1);

		if(maxv != a[i])
			continue;
		if(maxv - minv > ansmax)
			ansmax = maxv - minv, ansk = i;
	}
	printf("%d\n", ansmax);
	for(int i = 1; i <= m; ++i)
		if(s[i][0] > ansk || s[i][1] < ansk)
			v.push_back(i);
	printf("%d\n", (int)v.size());
	for(auto &x : v)
		printf("%d ", x);
	printf("\n");

	return 0;
}
