/*
    U FAIL U IMPROVE,
                     U SKIP U LOSE!!
                                    */
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef long long int lli;
lli M=1e9+9;   
#define INF 100000000
#define sqr(x) (x) * (x)
#define bip(n) __builtin_popcount(n)//no of ones bit in binary!!
#define bictz(n) __builtin_ctz(n)//no of trailing zeroes in binary!!
#define biclz(n) __builtin_clz(n)//no of leading zeroes in binary!!
#define bffs(n) __builtin_ffs(n)//index of first one bit!!
typedef pair<lli,lli> ll;
#define mem1(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem2(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem3(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
typedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update> ost;
lli n,k,m,t,q,z;
//unordered_map<pair<ll,lli>,lli> mp;
lli me(lli a,lli b,lli M)
{
    if(b==0)
    return 1;
    else if(b%2==0)
    return me((a*a)%M,b/2,M);
    else
    return (a%M*me((a*a)%M,(b-1)/2,M)%M)%M;
}
lli mI(lli a,lli m)
{
    return me(a,m-2,m);
}
vector<int> pf(string s) {
    int n = (int)s.length();
    vector<int> pi(n);
    for (int i = 1; i < n; i++) {
        int j = pi[i-1];
        while (j > 0 && s[i] != s[j])
            j = pi[j-1];
        if (s[i] == s[j])
            j++;
        pi[i] = j;
    }
    return pi;
}
//lli vis[305][305];
//lli a[500005];
//lli good[5005][5005];
//string s;
int fl;
lli x[13],y[13];
map<lli,lli> vis;
//map<lli,lli> ml;
//vector<ll> v[2000005];
map<lli,lli> ps;
//lli a,b;
map<ll,lli> mkp;
lli mx=0;
lli ff=0;
lli p[1000005];
lli a[1000005];
lli dd[1000005];
unordered_map<lli,lli> mm,mm1,mm2;
struct edge
{
    lli x,y,a,b;
};
vector<edge> vv;
bool cmp(edge a1,edge b1)
{
    if(a1.a==b1.a)
    return a1.b>b1.b;
    return a1.a>b1.a;
}
edge e[105][5];
vector<lli> v[12];
struct Point { 
    int x, y; 
};
lli mji=1e18;
map<pair<set<lli>,lli>,lli> ddp;
lli mjx=-1e18;
set<lli> v1;
void solve(lli cnt)
{
    if(ddp[{v1,cnt}])
    return;
    ddp[{v1,cnt}]=1;
    if(cnt>7)
    return;
    for(int j=1;j<=7;j++)
    {
    if(vis[j]==0&&mm2[j])
    {
    v1.insert(j);
    vis[j]=1;
    //cout<<j<<" ";
    int f=0;
    for(auto &is :mm)
    {
        lli i=is.first;
        for(int k=0;k<v[i].size();k++)
        {
            if(v[i][k]==j)
            mm1[i]--;
        }
        if(mm1[i]==mm[i])
        {
            
        }
        else
        f=-1;
    }
    //cout<<f<<endl;
    if(f==0)
    {
        mjx=max(mjx,cnt);
            mji=min(mji,cnt);
            for(auto &is :mm)
    {
        lli i=is.first;
        for(int k=0;k<v[i].size();k++)
        {
            if(v[i][k]==j)
            mm1[i]++;
        }
    }
    v1.erase(j);
        return;
    }
    
    solve(cnt+1);
    v1.erase(j);
    vis[j]=0;
    for(auto &is :mm)
    {
        lli i=is.first;
        for(int k=0;k<v[i].size();k++)
        {
            if(v[i][k]==j)
            mm1[i]++;
        }
    }
    }
    }
}
lli mi=1e18;
int main()
{
lli x;
cin>>n;
lli ll=1e18;
lli ll1=1e18;
for(int i=1;i<=n;i++)
{
    cin>>x;
    if(x==1)
    ll=i;
    else
    ll1=i;
}
cout<<min(ll,ll1);
}