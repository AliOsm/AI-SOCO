#include<bits/stdc++.h>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
const int N = 1100000;
int n, p1, p2, a[N], dp[N], pdp[N], sdp[N], ans1[N], ans2[N];
int ans = 1e18;
void f(vector < int > &v, int x){
    for (int i = 2; i * i <= x; i++){
        if (x % i == 0){
            v.pb(i);
            while(x % i == 0) x /= i;
        }
    }
    if (x > 1) v.pb(x);
}
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin >> n >> p1 >> p2;
    for (int i = 1; i <= n; i++){
       cin >> a[i];
    }
    vector < int > div;
    f(div, a[1]);
    f(div, a[1] - 1);
    f(div, a[1] + 1);
    f(div, a[n]);
    f(div, a[n] - 1);
    f(div, a[n] + 1);
    for (auto x: div){
        memset(pdp, 0, sizeof(pdp));
        memset(sdp, 0, sizeof(sdp));
        memset(ans1, 0, sizeof(ans1));
        memset(ans2, 0, sizeof(ans2));
        for (int i = 1; i <= n; i++){
            if (pdp[i - 1] == 1e17){
                pdp[i] = pdp[i - 1];
            } else{
                if (a[i] % x == 0) pdp[i] = pdp[i - 1]; else
                if ((a[i] + 1) % x == 0 || (a[i] - 1) % x == 0) pdp[i] = pdp[i - 1] + p2;
                else pdp[i] = 1e17;
            }
            ans1[i] = min(ans1[i - 1] + p1, pdp[i]);
            if (i == n) ans1[i] = pdp[i];
        }
        for (int i = n; i >= 1; i--){
            if (sdp[i - 1] == 1e17){
                sdp[i] = sdp[i + 1];
                continue;
            } else{
                if (a[i] % x == 0) sdp[i] = sdp[i + 1]; else
                if ((a[i] + 1) % x == 0 || (a[i] - 1) % x == 0) sdp[i] = sdp[i + 1] + p2;
                else sdp[i] = 1e17;
            }
            ans2[i] = min(ans2[i + 1] + p1, sdp[i]);
            if (i == 1) ans2[i] = sdp[i];
        }
        for (int i = 0; i <= n; i++){
            ans = min(ans, pdp[i] + ans2[i + 1]);
            ans = min(ans, sdp[i + 1] + ans1[i]);
        }
    }
    cout << ans;
}
