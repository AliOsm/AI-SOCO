#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <string>
#include <vector>
#include <set>
#include <cstring>
#include <cstdlib>
#include <map>
#include <ctime>
#include <queue>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it ++)
#define forn(i, l, r) for(int i = l; i < r; i ++)
#define pii pair <int, int>
#define vi vector <int>
#define N 1005
#define y1 stupid_cmath
#define sz(a) (int)a.size()
#define ll long long
#define all(a) a.begin(), a.end()

const int inf = (int)1e9;
const int mod = (int)1e9 + 7;
const double pi = acos(-1.0);
const double eps = 1e-9;
const int maxn = (int)1e5 + 11;

int main () {

    #ifdef LOCAL
    freopen("a.in", "r", stdin);
    freopen("a.out", "w", stdout);
    #endif

    int n, m;
    scanf("%d%d", &n, &m);

    vector < pii > a(n);
    for (int i=0;i<n;i++){
        scanf("%d", &a[i].f);
        a[i].s = i;
    }
    sort(a.begin(), a.end());

    vector < int > ans(n, 0);
    bool cur = 0;
    for (int i=0;i<sz(a);i++){
        ans[a[i].s] = cur;
        cur ^= 1;
    }
    forit(it, ans){
        printf("%d ", *it);
    }
    


    #ifdef LOCAL
    cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;
    #endif

    return 0;
}




