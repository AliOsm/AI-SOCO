/*  ** **##_REVPRO_##** ** */
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
using namespace std;
ll add(ll a,ll b,ll mod)
{
	return ((a%mod)+(b%mod))%mod;
}
ll sub(ll a,ll b,ll mod)
{
	return ((a%mod)+(b%mod)+mod)%mod;
}
ll mul(ll a,ll b,ll mod)
{
	return ((a%mod)*(b%mod))%mod;
}
ll expo(ll base, ll exponent, ll mod) {								//return base^exponent modulo modulus
    ll ans = 1;
    while(exponent !=0 ) {
        if((exponent&1) == 1) {
            ans = ans*base ;
            ans = ans%mod;
        }
        base = base*base;
        base %= mod;
        exponent>>= 1;
    }
    return ans%mod;
}
#define N  100005

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		string s;
		cin>>s;
		ll a=0,b=0;
		ll n=s.length();
		ll ans=0;
		ll i=0;
		while((i<n)&&(s[i]=='b'))
					i++;
		for(;i<n;)
		{
			while((i<n)&&(s[i]=='a'))
			{
				i++;a++;
			}
			while((i<n)&&(s[i]=='b'))
				{b++;i++;}
			ans=add(ans,mul(b,sub(expo(2,a,hell),-1,hell),hell),hell);
			b=0;
		}
		cout<<ans;
	}
	return 0;
}