#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long

const int N = 2e5 + 5;
int n , m , x , dp[N] , par[N];
vector<vector<int>> v(N);
bool no[N];

ll EEA(ll a , ll b , ll &x , ll &y)
{
    if(a < 0)
    {
        ll r = EEA(-a , b , x , y);
        x *= -1;
        return r;
    }

    if(b < 0)
    {
        ll r = EEA(a , -b , x , y);
        y *= -1;
        return r;
    }

    if(b == 0)
    {
        x  = 1 , y = 0;
        return a;
    }
    ll g = EEA(b , a % b , y , x);
    y -= (a / b) * x;
    return g;
}


int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    cin >> n >> m;
    for(int i = 0 ; i < n ; i++) cin >> x , no[x] = 1;

    for(int i = 1 ; i < m ; i++)
        if(!no[i])
            v[__gcd(i , m)].push_back(i);

    for(int i = 1 ; i < m ; i++)
    {
        dp[i] += v[i].size();
        for(int j = i + i ; j < m ; j += i)
            if(dp[i] > dp[j])
            {
                dp[j] = dp[i];
                par[j] = i;
            }
    }

    int out = max_element(dp , dp + m) - dp;
    cout << dp[out] + !no[0] << '\n';

    vector<int> ans;
    for( ; out ; out = par[out])
        for(auto i : v[out])
            ans.push_back(i);

    int b4 = 1;
    for(int i = ans.size() - 1 ; i >= 0 ; i--)
    {
        ll g , x , y;
        g = EEA(b4 , m , x , y);
        cout << ((x * 1ll * ans[i] / g % m) + m) % m << " ";
        b4 = ans[i];
    }

    if(!no[0]) cout << 0;

    return 0;
}
