#include <bits/stdc++.h>
using namespace std;
char board[8][8];
vector<pair<int,int> > StP;
bool visited[8][8][128];
void dfs(int x,int y,int countt,vector<pair<int,int> > a)
{
    if(countt > 127)
        return;
    if(visited[x][y][countt])
        return;

    visited[x][y][countt] = true;
    if(x == 0 && y == 7)
    {
        cout << "WIN";
        exit(0);
    }
    if(countt >= 1){
    for(int i = 0;i < a.size();i++)
    {
        a[i].first++;
        if(a[i].first == x && a[i].second == y)
            return;
    }
    }
    char extraBoard[8][8];
    memset(extraBoard,'.',sizeof extraBoard);
    for(int i = 0;i < a.size();i++)
    {
        if(a[i].first <= 7)
            extraBoard[a[i].first][a[i].second] = 'S';
    }
    extraBoard[x][y] = 'M';
    /*for(int i = 0;i < 8;i++)
    {
        for(int j = 0;j < 8;j++)
            cout << extraBoard[i][j];
        cout << endl;
    }*/
    for(int i = -1;i <= 1;i++)
    {
        for(int j = -1;j <= 1;j++)
        {
            int newX = x + i;
            int newY = y + j;
            if(newX >= 0 && newX <= 7 && newY >= 0 && newY <= 7 && extraBoard[newX][newY] != 'S')
                dfs(x + i,y + j,countt + 1,a);

        }

    }
}
int main()
{
    for(int i = 0;i < 8;i++)
    {
        for(int j = 0;j < 8;j++)
        {
            cin >> board[i][j];
            if(board[i][j] == 'S')
                StP.push_back({i,j});
        }
    }

    dfs(7,0,0,StP);
    cout << "LOSE";
    return 0;
}
