#define _CRT_SECURE_NO_WARNINGS
#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define ll long long
#define mp make_pair
#define pb push_back

typedef pair<int, int> pii;

const double INF = 4e18;

#ifdef _DEBUG
const int N = 100;
#else
const int N = 310000;
#endif

struct T {
    int a, b;
    T(){}
    T(int a, int b) : a(a), b(b){}
    bool operator < (const T &other) const {
        return (1ll * a * other.b > 1ll * b * other.a);
    }
};


int n;
T a[N];

ll calc(const string &s) {
    int cnt = 0;
    ll res = 0;
    for (int i = 0; i < s.length(); i++) {
        if (s[i] == 's') cnt++;
        if (s[i] == 'h') res += cnt;
    }
    return res;
}

T getcnt(const string &s) {
    T res = T(0, 0);
    for (int i = 0; i < s.length(); i++) {
        if (s[i] == 's') res.a++;
        if (s[i] == 'h') res.b++;
    }
    return res;
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif  
    cin >> n;
    ll ans = 0;
    for (int i = 1; i <= n; i++) {
        string s;
        cin >> s;
        ans += calc(s);
        a[i] = getcnt(s);
    }
    sort(a + 1, a + n + 1);
    int cnt = 0;
    for (int i = 1; i <= n; i++) {
        ans += 1ll * cnt * a[i].b;
        cnt += a[i].a;
    }
    cout << ans;
	return 0;
}