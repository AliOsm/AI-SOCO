#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

int n, m, dsu[200100];

vector <pair<int, pair<int, int> > > vec;

int dsu_get(int v){
    if (v == dsu[v])
        return v;
    return dsu[v] = dsu_get(dsu[v]);
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);

    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        dsu[i] = i;
    for (int i = 1; i <= m; i++){
        int u, v, w;
        cin >> u >> v >> w;
        vec.push_back({w, {u, v}});
    }
    sort(vec.begin(), vec.end());
    int ans = 0;
    for (int i = 0; i < m; i++){
        int j = i-1;
        int kolGood = 0;
        while(j+1 < m && vec[j+1].first == vec[i].first){
            ++j;
            int u = dsu_get(vec[j].second.first), v = dsu_get(vec[j].second.second);
            if (u != v){
                ++kolGood;
            }
        }
        for (int k = i; k <= j; k++){
            int u = dsu_get(vec[k].second.first), v = dsu_get(vec[k].second.second);
            if (u != v){
                --kolGood;
                dsu[v] = u;
            }
        }
        ans += kolGood;
        i = j;

    }
    cout << ans;

}
