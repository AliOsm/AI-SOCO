#include <stdio.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
#include <stack>
#include <queue>
#include <set>
#include <list>
#include <bitset>
#include <array>

using namespace std;

#define fi first	
#define se second
#define long long long
typedef pair<int,int> ii;

const long MOD = 1e9+7;

int n;
long k; 
long arr[103];
long dp[103][103][150];
long val[140];
map<long,int> mp;
vector<int> vec[103];

long f(int u, int v, int k)
{
	if(val[k] == 0) return u == v;
	else if(dp[u][v][k] != -1) return dp[u][v][k];
	else
	{
		long res = 0;
		if(val[k]&1)
		{
			for(int m : vec[v])
				res = (res+f(u,m,k+1))%MOD;
		}
		else
		{
			for(int i = 1; i <= n; i++)
				res = ((res) + (f(u,i,k+1)*f(i,v,k+1))%MOD )%MOD;
		}
		return dp[u][v][k] = res;
	}
}
int bit(long x) { return (x == 0)? 0 : bit(x/2)+(x&1); }

int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	memset(dp, -1, sizeof dp);

	scanf("%d %lld", &n, &k);
	for(int i = 1; i <= n; i++)
	{
		scanf("%lld", &arr[i]);
		for(int j = 1; j <= i; j++)
		{
			if(bit(arr[i]^arr[j])%3 == 0)
			{
				// printf("%d %d\n", i, j);
				if(i!=j)
				{
					vec[i].push_back(j);
					vec[j].push_back(i);
				}
				else
					vec[i].push_back(i);
			}
		}
	}
	k--;
	long temp = k;
	int idx = 0;
	while(temp)
	{
		mp[temp] = idx;
		val[idx++] = temp;
		if(temp&1)
			temp -= 1;
		else
			temp /= 2;
	}
	// for(int i = 0; i <= idx; i++) printf("%d %lld\n", i, val[i]);
	// for(int i = 1; i <= n; i++)
	// 	for(int j = 1; j <= n; j++)
	// 		printf("%d %d %lld\n", i, j, f(i,j,0));
	
	long res = 0;
	for(int i = 1; i <= n; i++)
		for(int j = 1; j <= n; j++)
			res = (res+f(i,j,0))%MOD;
	printf("%lld\n", res);

}









