//#include <cstdio>
#include <iostream>

#include <cstring>

#include <string>
#include <vector>
#include <algorithm>

using namespace std;

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

struct Segment {
   int L, R;
};

#define MAXN 200004
int N, H;
Segment segm[MAXN];

llong solve() {
   vector<llong> PS_segm(N+1);
   FOR(i, 1, N) {
      PS_segm[i] = PS_segm[i-1] + segm[i-1].R - segm[i-1].L;
   }

   VI gaps;
   gaps.push_back(0);
   FOR(i, 1, N-1)
      gaps.push_back( segm[i].L - segm[i-1].R );
   gaps.push_back(H+1);

   vector<llong> PS_gaps(gaps.size());
   FOR(i, 1, SZ(gaps)-1)
      PS_gaps[i] = PS_gaps[i-1] + gaps[i];


   llong res = 0;
   REP(i, N) {
      int R = lower_bound(PS_gaps.begin(), PS_gaps.end(), H + PS_gaps[i]) - PS_gaps.begin();
      llong len = PS_segm[R];
      len -= PS_segm[i];
      llong cur = len + H;
   // cerr << "i:" << i << " R:" << R << " len:" << len << " cur:" << cur << endl;
      res = max(res, cur);
   }
   return res;
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(NULL);

   cin >> N >> H;
   REP(i, N)
      cin >> segm[i].L >> segm[i].R;

   llong res = solve();
   cout << res << endl;

   return 0;
}
