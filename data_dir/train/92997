#include<bits/stdc++.h>

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;

#define endl '\n'
#define MAX

typedef long long ll;
typedef pair<int,int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

const int maxn = 2e5 + 5;

int t[maxn][26];
int idx = 1;

bool win[maxn], lose[maxn];

void insert(string s){
	int node = 0;
	for(int i = 0; i < (int)s.size(); i++){
		if(t[node][s[i] - 'a'] == 0)
			t[node][s[i] - 'a'] = idx++;
		node = t[node][s[i] - 'a'];
	}
}

void dfs(int node){
	int child = 0;
	
	for(int i = 0; i < 26; i++)
		if(t[node][i])
			child++;
	
	if(child == 0){
		win[node] = false;
		lose[node] = true;
		return;
	}
	
	for(int i = 0; i < 26; i++){
		if(t[node][i]){
			dfs(t[node][i]);
			win[node] |= !win[t[node][i]];
			lose[node] |= !lose[t[node][i]];
		}
	}
}

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n, k;
	cin >> n >> k;
	
	k %= 2;
	
	for(int i = 0; i < n; i++){
		string s;
		cin >> s;
		insert(s);
	}
	
	dfs(0);
	
	if(!win[0])
		cout << "Second" << endl;
	else if(win[0] && lose[0])
		cout << "First" << endl;
	else if(k == 1)
		cout << "First" << endl;
	else
		cout << "Second" << endl;

	return 0;
}