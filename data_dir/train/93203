#include <bits/stdc++.h>
#define re return
#define ull unsigned long long
#define ll long long
#define ld long double
#define oo 1e9
#define pi 3.1415926536
#define OO 1e18
#define EPS 1e-7
#define FX(n) fixed<<setprecision(n)
#define mm(o,k) memset(o,k,sizeof o)
#define ICPC ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
int n,l,r,x,t,m;
ll ans;
int arr[500005][22];
ll tree[500005][22],lazy[500005][22];
void build(int i,int l,int r,int T){
    if(l==r){
        tree[i][T]=arr[l][T];
        re;
    }
    int mid=(l+r)/2;
    build(i*2,l,mid,T);
    build(i*2+1,mid+1,r,T);
    tree[i][T]=tree[i*2][T]+tree[i*2+1][T];
}
void propagate(int i,int l,int r,int T){
    if(!lazy[i][T])re;
    tree[i][T]=(r-l+1)-tree[i][T];
    lazy[i][T]=0;
    if(l==r)re;
    lazy[i*2][T]^=1;
    lazy[i*2+1][T]^=1;
}
void update(int i,int l,int r,int a,int b,int T){
    propagate(i,l,r,T);
    if(l>b||r<a)re;
    if(l>=a&&r<=b){
        lazy[i][T]^=1;
        propagate(i,l,r,T);
        re;
    }
    int mid=(l+r)/2;
    update(i*2,l,mid,a,b,T);
    update(i*2+1,mid+1,r,a,b,T);
    tree[i][T]=tree[i*2][T]+tree[i*2+1][T];
}
ll sum(int i,int l,int r,int a,int b,int T){
    propagate(i,l,r,T);
    if(l>b||r<a)re 0;
    if(l>=a&&r<=b)re tree[i][T];
    int mid=(l+r)/2;
    re sum(i*2,l,mid,a,b,T)+sum(i*2+1,mid+1,r,a,b,T);
}
int main(){
    ICPC;
    cin >> n;
    for(int i=0;i<n;++i){
        cin>>x;
        for(int j=21;j>=0;--j)
            if(x>=(1<<j))
                x-=(1<<j),arr[i][j]=1;
    }
    for(int i=0;i<22;++i)
        build(1,0,n-1,i);
    cin >> m;
    while(m--){
        cin >> t;
        if(t==1){
            cin >> l >> r;
            --l,--r;
            ans=0;
            for(int i=21;i>=0;--i)
                ans+=(sum(1,0,n-1,l,r,i)*(1LL<<i));
            cout<<ans<<"\n";
        }
        else{
            cin >> l >> r >> x;
            --l,--r;
            for(int i=21;i>=0;--i)
                if(x>=1<<i)
                    x-=(1<<i),update(1,0,n-1,l,r,i);
        }
    }
    re 0;
}