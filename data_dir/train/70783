#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cmath>
#include <bitset>
#include <string>
#include <map>
#include <queue>
#include <hash_map>
#include <hash_set>
#include <cstring>
#include <climits>
#include <sstream>
using namespace std;

#define uint64 unsigned int64
#define int64 long long
#define rep(i, n) f(i, 0, (n) - 1)
#define f(i, a, b) fd(i, (a), (b), 1)
#define fd(i, a, b, d) for(int i = (a); i <= (int)(b); i += (d))

struct point
{
  int x;
  int y;
};

bool compare(const point& p1, const point& p2)
{
  return abs(p1.x) + abs(p1.y) < abs(p2.x) + abs(p2.y);
}

int main()
{
  int n;
  scanf("%d\n", &n);

  vector<point> bombs(n);
  rep(i, n)
    scanf("%d %d \n", &bombs[i].x, &bombs[i].y);

  sort(bombs.begin(), bombs.end(), compare);

  int commandCount = 0;
  rep(i, n)
  {
    if(bombs[i].x == 0 || bombs[i].y == 0)
      commandCount += 4;
    else
      commandCount += 6;
  }

  printf("%d\n", commandCount);

  vector<string> commands;
  rep(i, n)
  {
    int x = bombs[i].x;
    int y = bombs[i].y;
    if(x != 0)
      printf("1 %d %c\n", abs(x), (x < 0 ? 'L' : 'R'));
    if(y != 0)
      printf("1 %d %c\n", abs(y), (y < 0 ? 'D' : 'U'));
    printf("2\n");
    if(y != 0)
      printf("1 %d %c\n", abs(y), (y < 0 ? 'U' : 'D'));
    if(x != 0)
      printf("1 %d %c\n", abs(x), (x < 0 ? 'R' : 'L'));
    printf("3\n");
  }

  return 0;
}
