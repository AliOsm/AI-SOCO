#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

const ll MOD = 1e9 + 7;
const int N = 1e5 + 7;
const int M = 22;

int a[N], o[N][M], sz[N], need[N][M], lead[N][M];
vector<int> v;

int main()
{
    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);


    int n;
    cin >> n;

    int odd = MOD;
    for (int i=0; i<n; i++)
    {
        cin >> a[i];
        int t = a[i];
        int cnt = 0;
        while (t)
            t >>= 1, cnt++;

        sz[i] = cnt;
        int l = 0;
        int nd = 0;
        int pos = 0;
        t = a[i];

        while(t)
        {
            o[i][cnt] = t;
            need[i][cnt] = nd;
            lead[i][cnt] = l;
            cnt--;
            pos++;
            if (t & 1)
            {
                nd = pos;
                l = 0;
            }
            else
            {
                l++;
            }
            t >>= 1;
        }
    }

    int ans = MOD;

    for (int i=1; i<M; i++)
    {
        bool flag = o[0][i] != 0;
        int cnt = need[0][i];
        for (int j=1; j<n; j++)
        {
            cnt += need[j][i];
            if (o[j][i] != o[0][i] || o[j][i] == 0)
                flag = 0;
        }
        if (flag)
        {
            int p = MOD;
            for (int j=0; j<M; j++)
            {
                int out = 0;
                for (int k=0; k<n; k++)
                    out += abs(lead[k][i] - j);
                p = min(p, out);
            }
            //cout << i << " " << cnt << " " << p << "\n";
            ans = min(ans, p + cnt);
        }
    }

    cout << ans << "\n";
    return 0;
}
