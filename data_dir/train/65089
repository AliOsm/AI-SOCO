#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>  
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
using namespace std;
 
typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

int n,a[500005],v[500005]={0};

int main()
{ios_base::sync_with_stdio(false);

cin>>n;
rep(i,1,n)cin>>a[i];
rep(i,2,n-1)
if(a[i]!=a[i-1]&&a[i]!=a[i+1])
v[i]=1;
int c=0,mx=0;
rep(i,1,n)
{
    if(v[i])
    c++;
    else
    c=0;
    mx=max(c,mx);
}
ol(mx/2+mx%2);

rep(i,1,n)
{
    if(v[i])
    {
        int len=0;
        while(v[i+len])
        len++;
        if(len%2)
        {
            rep(j,i,i+len-1)
            a[j]=a[i-1];
        }
        else
        {
            rep(j,i,i+len/2-1)
            a[j]=a[i-1];
            rep(j,i+len/2,i+len-1)
            a[j]=a[i+len];
        }
        i=i+len-1;
        
    }
    
}
on;
rep(i,1,n)
{
        ol(a[i]);os;
}
return 0;
}