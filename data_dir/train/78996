#include <bits/stdc++.h>

using namespace std;
vector<int>vec[100005];
int cnt[100005];

void dfs(int idx, int parent, int level){
    for(auto child : vec[idx]){
        if(child == parent)continue;
        dfs(child, idx, level + 1);
    }
    cnt[level]++;
}

int main()
{
    int n;
    cin >> n;
    for(int i = 1;i < n;i++){
        int a, b;
        cin >> a >> b;
        vec[a].push_back(b);
        vec[b].push_back(a);
    }
    dfs(1, -1, 1);
    long long ans = 0;
    long long temp1 = 0, temp0 = 0;
    for(int i = 1;i <= 100000;i++){
        if(i % 2 == 0){
            ans += cnt[i]*1LL*temp1;
            temp0 += cnt[i];
        }
        else{
            ans += cnt[i]*1LL*temp0;
            temp1 += cnt[i];
        }
    }
    cout << ans - (n - 1);
}
