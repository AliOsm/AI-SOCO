#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef pair<i64, i64> pi ;
typedef tree< pi, null_type, less<pi>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define maxn 1005

i64 n , m ;

pi f( i64 x1, i64 y1, i64 x2, i64 y2 )
{
  //  printf("------------%lld %lld %lld %lld\n",x1,y1,x2,y2) ;
    if( ( (y2-y1+1)*(x2-x1+1) )%2==0 ) return mp( ( (y2-y1+1)*(x2-x1+1) )/2 , ( (y2-y1+1)*(x2-x1+1) )/2 ) ;
    if( (x1+y1)%2==0 ) return mp( ( (y2-y1+1)*(x2-x1+1) +1 )/2 , ((y2-y1+1)*(x2-x1+1) )/2 )  ;
    else return mp( ( (y2-y1+1)*(x2-x1+1) )/2 , ((y2-y1+1)*(x2-x1+1)+1 )/2 )  ; ;
}

pi g( i64 x1 ,i64 x2 , i64 x3 ,i64 x4 )
{
    return mp( max( x1,x3 ) , min( x2,x4 ) ) ;
}

int main()
{
    i64 i , j , k, q , l , r ;

    scanf("%lld",&q) ;

    for(i=1 ; i<=q ; i++)
    {
        scanf("%lld %lld",&m,&n) ;

        pi res = f(1LL,1LL,m,n) ;
        i64 w = res.xx , b = res.yy ;
  //      printf("-------%lld %lld\n",w,b) ;
        pi p1 , p2 , p3 , p4 ;
        scanf("%lld %lld %lld %lld",&p1.xx,&p1.yy,&p2.xx,&p2.yy) ;

        pi res1 = f(p1.xx,p1.yy,p2.xx,p2.yy) ;

        w -= res1.xx ; b -= res1.yy ;
        w += ( p2.xx-p1.xx+1 )*( p2.yy-p1.yy+1 ) ;

        scanf("%lld %lld %lld %lld",&p3.xx,&p3.yy,&p4.xx,&p4.yy) ;

        pi res2 = f(p3.xx,p3.yy,p4.xx,p4.yy) ;
        w -= res2.xx ; b -= res2.yy ;
        b += ( p4.xx-p3.xx+1LL )*( p4.yy-p3.yy+1LL ) ;

  //      printf("%lld %lld\n",w,b) ;

        pi p5 , p6 ;

        p5.xx = g( p1.xx,p2.xx,p3.xx,p4.xx ).xx ; p6.xx = g( p1.xx,p2.xx,p3.xx,p4.xx ).yy ;
        p5.yy = g( p1.yy,p2.yy,p3.yy,p4.yy ).xx ; p6.yy = g( p1.yy,p2.yy,p3.yy,p4.yy ).yy ;

        if( p6.xx >= p5.xx && p6.yy >= p5.yy )
        {
            pi res3 = f(p5.xx,p5.yy,p6.xx,p6.yy) ;
            w += res3.xx ; b += res3.yy ;
            w -= ( p6.xx-p5.xx+1 )*( p6.yy-p5.yy+1 ) ;
        }

        printf("%lld %lld\n",w,b) ;
    }

    return 0 ;
}
