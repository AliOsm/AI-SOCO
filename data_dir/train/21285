#include <bits/stdc++.h>

#define fi first
#define se second
#define pb push_back

using namespace std;

pair < pair < int , int > , int > P[102];
int pl1[102],pl2[102],ans,xr[102],l,i,j,n,f[102],tmp,now[102];
vector < int > g[102],nxt;

void dfs()
 {
  if (l == nxt.size()) return;
  tmp++;
  int u=nxt[l];
  now[tmp]=u;
  l++;
  for (int i=0;i<g[u].size();i++)
   {
    xr[g[u][i]]--;
    if (!xr[g[u][i]]) nxt.pb(g[u][i]);
   }
  dfs();
 }

int main()
 {
  cin>>n;
  for (i=1;i<=n;i++)
   cin>>P[i].fi.fi>>P[i].se,P[i].fi.se=-i;
  for (i=1;i<=n;i++)
   for (j=1;j<=n;j++)
    if (i != j && P[i].fi > P[j].fi)
     {
      if (make_pair(P[i].fi.fi+P[i].se,P[i].fi.se) < make_pair(P[j].fi.fi+P[j].se,P[j].fi.se)) continue;
      if (make_pair(P[i].fi.fi+P[i].se,P[i].fi.se) < P[j].fi) { g[-P[i].fi.se].pb(-P[j].fi.se); xr[-P[j].fi.se]++; }
      if (make_pair(P[j].fi.fi+P[j].se,P[j].fi.se) > P[i].fi) { g[-P[j].fi.se].pb(-P[i].fi.se); xr[-P[i].fi.se]++; }
     }
  for (i=1;i<=n;i++)
    if (!xr[i]) nxt.pb(i);
  dfs();
  for (int jk=1;jk<=n;jk++)
   {
    sort(P+1,P+n+1);
    reverse(P+1,P+n+1);
    for (i=1;i<=n;i++)
     pl1[i]=P[i].fi.se;
    for (j=n;j>=1;j--)
    if (P[j].fi.se == -now[jk]) {P[j].fi.fi+=P[j].se; break; }
    sort(P+1,P+n+1);
    reverse(P+1,P+n+1);
    for (i=1;i<=n;i++)
     pl2[i]=P[i].fi.se;
    for (i=1;i<=n;i++)
     for (j=i+1;j<=n;j++)
      if (pl1[i] == pl2[j]) ans+=j-i;
   }
  cout<<ans<<endl;
 }
