#include <iostream>
#include <ctime>
#include <iomanip>
#include <vector>
#include <map>
#include <algorithm>
#include <string>
#include <cmath>
#include <set>
#include <unordered_set>
#include <unordered_map>
#include <chrono>
#include <stack>
#include <cassert>
#include <queue>
#include <deque>
#include <climits>
#include <cstring>
#include <random>
#include <bitset>

using namespace std;

bool check(int mid, int n, int m, int k, const vector<int> &a) {
    vector<int> cur;
    for (int i = n - 1, uu = 0; i >= 0 && uu < mid; i--, uu++) {
        cur.push_back(a[i]);
    }
    reverse(cur.begin(), cur.end());
    int pnt = 0;
    for (int i = 0; i < m; i++) {
        int left = k;
        while (pnt < (int)cur.size() && cur[pnt] <= left) {
            left -= cur[pnt];
            pnt++;
        }
    }
    return pnt == (int)cur.size();
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    
    #ifdef LOCAL
    assert(freopen("input.txt", "r", stdin));
    assert(freopen("output.txt", "w", stdout));
    #endif
    
    int n, m, k;
    cin >> n >> m >> k;
    vector<int> a(n);
    for (auto &t : a) {
        cin >> t;
    }
    int l = 0;
    int r = n + 1;
    while (r - l > 1) {
        int mid = (r + l) / 2;
        if (check(mid, n, m, k, a)) {
            l = mid;
        } else {
            r = mid;
        }
    }
    cout << l << '\n';
//    cout << check(4, n, m, k, a);
}
