//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)

using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 


int r, c, arr[102][102], rowadd[102], coladd[102];


int solve(int add){

    memset(rowadd, 0, sizeof(rowadd));
    memset(coladd, 0, sizeof(coladd));

    rowadd[1] = add;
    int sum = add;
    for(int j=1;j<=c;j++){
        coladd[j] = arr[1][j] - rowadd[1];
        sum += coladd[j];
    }
    for(int i=2;i<=r;i++){
        rowadd[i] = arr[i][1] - coladd[1];
        sum += rowadd[i];
    }

    for(int i=1;i<=r;i++)
        for(int j=1;j<=c;j++){
            if(rowadd[i] < 0 || coladd[j] < 0)  return MOD;
            if(rowadd[i]+coladd[j] != arr[i][j])    return MOD;
        }

    return sum;
}


int main(){
 
    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

    scanf("%d%d", &r, &c);
    for(int i=1;i<=r;i++)
        for(int j=1;j<=c;j++)
            scanf("%d", &arr[i][j]);

    int add = -1, ans = MOD;
    for(int a=0;a<=arr[1][1];a++){
        int moves = solve(a);
        if(moves < ans){
            ans = moves;
            add = a;
        }
    }

    if(add == -1){
        printf("-1\n");
        return 0;
    }

    printf("%d\n", solve(add));
    for(int i=1;i<=r;i++)
        while(rowadd[i]--)
            printf("row %d\n", i);
    for(int j=1;j<=c;j++)
        while(coladd[j]--)
            printf("col %d\n", j);
    return 0;
}
