#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<unordered_map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
#include<bitset>
#include<fstream>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=9223372036854775807;
const ll mod=998244353;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b, ll  c)
{
    return max(c,max(a,b));
}
ll min3(ll  a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y,ll mod1)
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod1;
        y = y>>1;
        x = (x*x)%mod1;
    }
    return res;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x,ll p)
{
    return power(x,p-2,p);
}
struct point
{
    ll x;ll y;
};
ll cross(point a,point b)
{
    return a.x*b.y-b.x*a.y;
}
bool ccw(point p1,point p2)
{
    /* point n1;n1.x=p1.x-p0.x;n1.y=p1.y-p0.y;
     point n2;n2.x=p2.x-p0.x;n2.y=p2.y-p0.y;*/
    if(cross(p1,p2)>0)
    {
        return true;
    }
    else
    {
        return false;
        //No need to worry about cross=0 case in this question;
    }
}
void ccw_sort(vector<point> &v)
{
    vector<point> v1,v2;
    for(int i=0;i<v.size();i++)
    {
        if(v[i].y>0)
        {
            v1.push_back(v[i]);
        }
        else
        {
            v2.push_back(v[i]);
        }
    }
    sort(all(v1),ccw);
    sort(all(v2),ccw);
    for(int i=0;i<v2.size();i++)
    {
        v1.push_back(v2[i]);
    }
    v=v1;
}
ll n,m,k;
vi vis;
vvi adj;
vll dp1,dp2;
vi col;int bip=1;
void dfs(int i,int c)
{
    vis[i]=1;
    col[i]=c;
    for(int j=1;j<=n;j++)
    {
        if(!vis[j]&&adj[i][j]==1)
        {
            dfs(j,1-c);
        }
        else
        {
            if(adj[i][j]==1&&col[i]==col[j])
            {
                bip=-1;
            }
        }
    }
}
int main()
{
    fastio;
    cin>>n>>m;
    vis.resize(n+1);
    col.resize(n+1);
    adj.resize(n+1);
    for(int i=1;i<=n;i++)
    {
        adj[i].resize(n+1);
    }
    vi deg(n+1);ll iso=0;
    for(int i=0;i<m;i++)
    {
        int u,v;
        cin>>u>>v;
        deg[u]++;deg[v]++;
        adj[u][v]=1;
        adj[v][u]=1;
    }
    for(int i=1;i<=n;i++)
    {
        if(deg[i]==0)
        {
            iso+=1;
        }
    }/*
    auto adj2=adj;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(deg[i]!=0&&deg[j]!=0&&adj[i][j]==1)
            {
                adj2[g[i]][g[j]]=adj2[g[j]][g[i]]=1;
            }
        }
    }
    adj=adj2;*/
    ll num=0;
    //n-=iso;
    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
        {
            dfs(i,0);
            num++;
        }
    }
    ll ans=((ll)1<<(ll)n);
    ans-=((ll)1<<(ll)(num));
    if(bip!=-1)
    {
        ans+=((ll)1<<(ll)(num));
    }
    k=n/2;
    dp1.resize((ll)1<<(ll)k);
    dp2.resize((ll)1<<(ll)(n-k));
    dp1[0]=1;
    dp2[0]=1;
    for(int i=1;i<((ll)1<<(ll)k);i++)
    {
        int ind=0;
        for(int j=0;j<k;j++)
        {
            if(i&((ll)1<<(ll)j))
            {
                ind=j;
                break;
            }
        }
        dp1[i]=dp1[i^((ll)1<<((ll)ind))];
        for(int j=1;j<=k;j++)
        {
            if(adj[ind+1][j]&&((i&((ll)1<<(ll)(j-1)))>0))
            {
                dp1[i]=0;
            }
        }
    }
    for(int i=1;i<((ll)1<<(ll)(n-k));i++)
    {
        int ind=0;
        for(int j=0;j<(n-k);j++)
        {
            if(i&(1<<j))
            {
                ind=j;
                break;
            }
        }
        dp2[i]=dp2[i^((ll)1<<((ll)ind))];
        for(int j=k+1;j<=n;j++)
        {
            if(adj[ind+k+1][j]&&((i&((ll)1<<((ll)j-k-1)))>0))
            {
                dp2[i]=0;
            }
        }
    }
    for(int i = 0;i < (n-k); ++i) {for(int mask = 0; mask < ((ll)1<<(ll)(n-k)); ++mask){
        if(mask & (ll)(1<<(ll)i)){
            dp2[mask] += dp2[mask^(1<<(ll)i)];}}
    }
    for(int i=0;i<(ll)(1<<(ll)(k));i++)
    {
        ll msk=((ll)1<<(ll)(n-k))-1;
        for(int m=0;m<k;m++)
        {
            if((((ll)1<<(ll)m)&(i))>0)
            {
                for(int j=k+1;j<=n;j++)
                {
                    if(adj[m+1][j]==1)
                    {
                        msk=(msk|((ll)1<<(ll)(j-k-1)));
                        msk=(msk^((ll)1<<(ll)(j-k-1)));
                    }
                }
            }
        }
        ans=ans-2*dp2[msk]*dp1[i];
    }
    if(m!=0){
    cout<<(ans)+((ll)1<<((ll)iso+1))<<endl;
    }
    else
    {
        cout<<0<<endl;
    }
}
