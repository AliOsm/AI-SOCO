#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>
#include<cassert>
#include<iomanip>
#include<limits>

using namespace std;

//#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
int mod = 1000000007LL;
long long large = 2000000000000000000LL;




vector<vector<ii> > adj;


int dp[101][101][2][26];

int f(int x,int y,int t,int l){
	if(dp[x][y][t][l]!=-1) return dp[x][y][t][l];
	if(t==0){
		dp[x][y][t][l] = 0;
		for(int j=0;j<(int)adj[x].size();j++){
			int v = adj[x][j].first;
			int z = adj[x][j].second;
			if(z<l) continue;
			if(f(v,y,1-t,z)==0){
				dp[x][y][t][l]=1;
				break;
			}
		}
	}else{
		dp[x][y][t][l] = 0;
		for(int j=0;j<(int)adj[y].size();j++){
			int v = adj[y][j].first;
			int z = adj[y][j].second;
			if(z<l) continue;
			if(f(x,v,1-t,z)==0){
				dp[x][y][t][l] = 1;
				break;
			}
		}
	}
	return dp[x][y][t][l];
}
int main(){

	int n;
	cin>>n;
	adj.assign(n,vector<ii>());
	int m;
	cin>>m;
	for(int i=0;i<m;i++){
		int x,y;
		cin>>x>>y;
		char z;
		cin>>z;
		x--;y--;
		adj[x].push_back(ii(y,(int)(z-'a')));
	}

	for(int i=0;i<100;i++){
		for(int j=0;j<100;j++){
			for(int k=0;k<26;k++){
				dp[i][j][0][k] = dp[i][j][1][k] = -1;
			}
		}
	}

	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			if(f(i,j,0,0)==1){
				cout<<'A';
			}else{
				cout<<'B';
			}
		}
		cout<<endl;
	}


    return 0;
}
