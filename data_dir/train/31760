/* ****Enigma27**** */
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse2")
#include<bits/stdc++.h>
#define int			long long 
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pll         pair<ll int,ll int>
#define vll          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define rep(i,a,b)   for(ll i=a;ia<b;i++)
#define gcd(a,b)    __gcd((a),(b))
#define lcm(a,b)    ((a)*(b)) / gcd((a),(b))
#define ios	    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
int n,i,j,k,l,sum=0,flag=0,ans=0,m, visited[200]={0},inc[200]={0};
string s[105];
map<char,vector<char> > v;
queue<char> q;
queue<char> st;
signed main()
{	
	ios
	cin>>n;
	for(i=0;i<n;i++){
		cin>>s[i];
		if(i!=0){
			bool flag=false;
			for(j=0;j<min(s[i-1].size(),s[i].size());j++){
				if(s[i-1][j]!=s[i][j]){
					v[s[i-1][j]].pb(s[i][j]);
					inc[s[i][j]]++;
					flag=true;
					break;
				}
			}
			if(!flag&&s[i-1].size()>s[i].size()){
				cout<<"Impossible\n";
				return 0;
			}
		}
	}
	for(char c='a';c<='z';c++) if(inc[c]==0) q.push(c);
	while(!q.empty()){
		char c=q.front();
		//cout<<c<<endl;
		q.pop();
		st.push(c);
		for(auto j:v[c]){
			inc[j]--;
			if(inc[j]==0)q.push(j);
		}
	}
	if(st.size()<26) cout<<"Impossible\n";
	else{
		while(!st.empty()){
			cout<<st.front();
			st.pop();
		}
	}
	return 0;
}