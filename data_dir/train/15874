/***from dust i have come, dust i will be***/

#include<bits/stdc++.h>

typedef long long int ll;
typedef unsigned long long int ull;

#define dbg printf("in\n");
#define nl printf("\n");
#define N 100100

#define sf(n) scanf("%d", &n)
#define sff(n, m) scanf("%d%d",&n,&m)
#define sfl(n) scanf("%I64d", &n)
#define sffl(n, m) scanf("%I64d%I64d",&n,&m)

#define pf(n) printf("%d",n)
#define pff(n, m) printf("%d %d",n,m)
#define pffl(n, m) printf("%I64d %I64d",n,m)
#define pfl(n) printf("%I64d",n)
#define pfs(s) printf("%s",s)

#define pb push_back
#define pp pair<int,int>

using namespace std;

bool vis[N];

bool cmp(pp a, pp b) {
    if (a.first == b.first)
        return a.second > b.second;

    return a.first < b.first;
}

int main() {
    //freopen("in.txt", "r", stdin);

    int i, j, k;
    int n, m;
    vector<int> vec;

    sff(n, k);

    pp a[n];
    memset(vis, 0, sizeof(vis));

    for (i = 0; i < n; i++)
        sf(a[i].first), vis[a[i].first] = true;

    for (i = 0; i < n; i++)
        sf(a[i].second);

    int cnt = 0;
    for (i = 1; i <= k; i++) {
        if (!vis[i])
            cnt++;
    }

    sort(a, a + n, cmp);

    memset(vis, 0, sizeof(vis));
    for (i = 0; i < n; i++) {
        if (vis[a[i].first])
            vec.pb(a[i].second);
        else
            vis[a[i].first] = true;
    }

    sort(vec.begin(), vec.end());

    ll ans = 0;
    for (i = 0; i < cnt; i++)
        ans += (ll) vec[i];

    pfl(ans);

    return 0;
}