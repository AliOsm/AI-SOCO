#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;

const int maxN = 2e5 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;
int resp[maxN], n, arr[maxN], T[maxN << 1];
int maxInc[maxN], maxDec[maxN];

inline int mmin(int &a, int &b) {
	if(a == -1) return b;
	if(b == -1) return a;
	if(arr[a] > arr[b]) return a;
	if(arr[a] == arr[b] && a > b) return a;
	return b;
}

int query(int l, int r) {
	int ret = -1;
	for(l += n, r += n; l < r; l >>= 1, r >>= 1) {
		if(l & 1) ret = mmin(T[l++], ret);
		if(r & 1) ret = mmin(T[--r], ret);
	}
	return ret;
}

void no() {
	cout << "NO\n";
	exit(0);
}

void solve(int l, int r, int incV, int decV) {
	if(l >= r) return;
	int mi = query(l, r);
	LOG << "iteration " << l << ' ' << r << ' ' << mi << '\n';
	if(maxInc[l] + 1 < mi && maxDec[mi + 1] + 1 < r) no();
	if(maxInc[l] + 1 >= mi && (maxDec[mi + 1] + 1 < r || (arr[mi] > decV && (l == mi || arr[l] > incV)))) {
		resp[mi] = 1;
		solve(mi + 1, r, (mi == l)? incV: arr[mi - 1], decV);
	} else {
		for(int i = mi + 1; i < r; i++)
			resp[i] = 1;
		solve(l, mi, incV, (mi + 1 == r)? decV: arr[mi + 1]);
	}
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	srand(time(0));
	cin >> n;
	memset(arr, -1, sizeof arr);
	for(int i = 0; i < n; i++) {
		cin >> arr[i];
		T[i + n] = i;
	}
	maxInc[n] = maxDec[n] = n;
	for(int i = n - 1; i >= 0; i--) {
		if(i + 1 < n && arr[i] < arr[i + 1]) {
			maxInc[i] = maxInc[i + 1];
		} else {
			maxInc[i] = i;
		}
		if(i + 1 < n && arr[i] > arr[i + 1]) {
			maxDec[i] = maxDec[i + 1];
		} else {
			maxDec[i] = i;
		}
	}
	LOG << "wacha la inc\n";
	for(int i = 0; i < n; i++) LOG << maxInc[i] << ' ';LOG << '\n';
	LOG << "wacha la dec\n";
	for(int i = 0; i < n; i++) LOG << maxDec[i] << ' ';LOG << '\n';
	for(int i = n - 1; i >= 0; i--)
		T[i] = mmin(T[i << 1], T[i << 1 | 1]);	
	solve(0, n, -1, -1);
	int decrPrv = MOD, incrPrv = -1;
	LOG << "prev info\n";
	for(int i = 0; i < n; i++) LOG << resp[i] << ' '; LOG << '\n';
	for(int i = 0; i < n; i++) {
		if(resp[i] == 0) {
			if(!(incrPrv < arr[i])) no();
			incrPrv = arr[i];
		} else {
			if(!(decrPrv > arr[i])) no();
			decrPrv = arr[i];
		}
	}
	cout << "YES\n";
	for (int i = 0; i < n; i++) cout << resp[i] << ' '; cout << '\n';
	LOG << "the increasing sequence\n";
	for(int i = 0; i < n; i++) 
		if(!resp[i])
			LOG << i << ' '; LOG << '\n';
	LOG << "the decreasing sequence\n";
	for(int i = 0; i < n; i++) 
		if(resp[i])
			LOG << i << ' '; LOG << '\n';
			
			
}
