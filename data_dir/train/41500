#include <bits/stdc++.h>
using namespace std;

#define MI            1000000000
#define clr(i, j)     memset(i, j, sizeof(i))
typedef long long     ll;
typedef long double   ld;
typedef vector<int>   vi;
typedef pair<int, int> pii;
ll power(int X, int Y)
{
    if(Y == 0)
        return 1;
    ll temp = power(X, Y/2);
    if(Y%2 == 0)
        return temp*temp;
    else
        return temp*temp*X;
}
int to_int(string X)
{
    int in = 0;
    ll p = power(10 , X.size()-1);
    for(int i = 0;i<X.size();i++)
{
    in += (X[i]-'0')*p;
    p /= 10;
}
    return in;
}
int n;
bool b[2001][2001];
bool vis[2001];
vector<int> adj[2001];
int dfs(int i)
{
    int ret = 0;
    for(int k = 0; k<adj[i].size(); k++)
        ret = max(ret, dfs(adj[i][k])+1);

    return ret;
}
int main()
{
    cin >> n;
    int a[n];
    for(int i=0; i<n; i++)
    {
        cin >> a[i];
        if(a[i] != -1)
            adj[a[i]-1].push_back(i);
    }
    /*
    for(int i=0; i<n; i++)
    {
            cout << i << " |";
        for(int j=0; j<adj[i].size(); j++)
            cout << adj[i][j] << " ";
        cout << endl;
    }

    cout << "..................." << endl;
    */
    int m = 0;
    vector<int> v;
    for(int i=0; i<n; i++)
        if(adj[i].size() != 0)
            v.push_back(i);

    for(int i=0; i<v.size(); i++)
        m = max(m, dfs(v[i]));

    cout << m+1 << endl;

}
