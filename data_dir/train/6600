#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <array>
#include <bitset>
#include <complex>
using namespace std;

#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) (c).begin(), (c).end()

typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;

int in() { int x; scanf("%d", &x); return x; }
ll lin() { ll x; scanf("%lld", &x); return x; }

ll solve1(ll n, ll r, ll k){
    ll ret = -1;
    for (ll x = 0; x <= n; x++) {
        ll ymin = max(0LL, x - n + r - 1);
        ll ymax = min(x, r);
        if (k - r - ymin < 0) continue;
        ll tmin = max(0LL, k - r - ymax);
        ll tmax = k - r - ymin;
        ll m = n + x;
        // cout << ymin << " " << ymax << " "  << tmin << " " << tmax << endl;
        if (tmin % m == 0 || (tmin / m < tmax / m)) ret = x;
    }
    return ret;
}

ll solve2(ll n, ll r, ll k){
    ll ret = -1;
    for (ll p = 0; n * p <= k; p++){
        ll t = k - n * p - r;
        if (t < 0) continue;
        ll ok = 0, ng = n + 1;
        while (ng - ok > 1){
            ll x = (ok + ng) / 2;
            ll ymin = max(0LL, x - n + r - 1);
            if (p * x + ymin > t) ng = x;
            else ok = x;
        }
        for (ll x = ok; x >= max(0LL, ok - 3); x--){
            ll ymin = max(0LL, x - n + r - 1);
            ll ymax = min(x, r);
            if (p * x + ymin <= t && p * x + ymax >= t){
                ret = max(ret, x);
                break;
            }
        }
    }
    return ret;
}

int main() {
    ll n, l, r, k;
    cin >> n >> l >> r >> k;
    r = (r - l + n) % n;
    r++;

    ll ans;
    if (n < 1e7){
        ans = solve1(n, r, k);
    }else{
        ans = solve2(n, r, k);
    }
    cout << ans << endl;

    return 0;
}