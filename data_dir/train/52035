//http://codeforces.com/contest/828/problem/B

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>

using namespace std;

typedef pair <int, int> pii;
typedef pair <long long, long long> pll;
typedef vector <int> vi;
typedef long long ll;

#define endl "\n"

const int mod = 1e9 + 7;

int n, m, black = 0, black1 = 0, sum[105][105];
string str[105];
int result;

bool check(int x, int y, int len);

int main() {
	int dl, dr, du, dd;

	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin >> n >> m;

	for (int i = 1; i <= n; i++) {
		cin >> str[i];

		str[i] = " " + str[i];

		for (int j = 1; j <= m; j++) {
			if (str[i][j] == 'B') {
				black++;
				sum[i][j]++;
			}
		}
	}
	
	dl = m;
	dr = 1;
	du = n;
	dd = 1;

	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			if (str[i][j] == 'B') {
				dl = min(dl, j);
				dr = max(dr, j);
				du = min(du, i);
				dd = max(du, i);
			}
		}
	}

	if (dl > dr)
		swap(dl, dr);

	if (du > dd)
		swap(du, dd);

	int t1 = dd - du, t2 = dr - dl;

	while ((t1 < t2) && (du > 1)) {
		du--;
		t1++;
	}

	while ((t1 < t2) && (dd < n)) {
		dd++;
		t1++;
	}

	while ((t2 < t1) && (dl > 1)) {
		dl--;
		t2++;
	}

	while ((t2 < t1) && (dr < m)) {
		dr++;
		t2++;
	}

	if ((dr - dl) != (dd - du))
		result = -1;
	else {
		for (int i = du; i <= dd; i++) {
			for (int j = dl; j <= dr; j++) {
				if (str[i][j] == 'W')
					result++;
			}
		}
	}

	if (black == 0)
		result = 1;

	cout << result << endl;

	return 0;
}

bool check(int x, int y, int len) {
	if ((sum[x + len][y + len] - sum[x - 1][y + len] - sum[x + len][y - 1] + sum[x - 1][y - 1]) == ((len + 1) * (len + 1)))
		return 1;

	return 0;
}