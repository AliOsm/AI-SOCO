#include <bits/stdc++.h>
#define fr first
#define sc scanf
#define pf printf
#define se second
#define ll long long
#define pb push_back
#define mk make_pair
#define ld long double
#define pr pair<ll,ll>
#define sz(s) int(s.size())
#define piip pair< pair<ll,ll>,ll >
#define fin(xs) freopen( s, "r", stdin )
#define fout(s) freopen( s, "w", stdout )
#define TIME ios_base::sync_with_stdio(0)
using namespace std;

const ll INF = 1e9;
const ll N = 1e5 + 1;
const ll mod = 1e9 + 7;
const long double eps = 1E-7;

int n, m, k, l, r, ans, a[N], d[N], an[N];
vector<pair<int,pair<int,pair<int,int>>>>V;
int main()
{
    TIME;
    cin >> n >> m;
    for( int i = 0; i < n; i ++ )
    {
        cin >> a[i];
        if( a[i] > n )
            a[i] = 0;
    }
    k = 1.514 * sqrt( n ) + 1;
    for( int i = 0; i < m; i ++ )
    {
        cin >> l >> r;
        l --, r --;
        V.pb( { l/k, { r, { l, i } } } );
    }
    sort( V.begin(), V.end() );
    l = r = 0, d[a[0]] ++, ans = a[0] == 1;
    for( auto k: V )
    {
        while( r < k.se.fr )
        {
            if( !a[++r] )
                continue;
            if( ++ d[a[r]] == a[r] + 1 )
                ans --;
            if( d[a[r]] == a[r] )
                ans ++;
        }
        while( r > k.se.fr )
        {
            if( !a[r-1] )
            {
                r --;
                continue;
            }
            if( -- d[a[r]] == a[r] - 1 )
                ans --;
            if( d[a[r]] == a[r--] )
                ans ++;
        }
        while( l > k.se.se.fr )
        {
            if( !a[--l] )
                continue;
            if( ++ d[a[l]] == a[l] + 1 )
                ans --;
            if( d[a[l]] == a[l] )
                ans ++;
        }
        while( l < k.se.se.fr )
        {
            if( !a[l+1] )
            {
                l ++;
                continue;
            }
            if( -- d[a[l]] == a[l] - 1 )
                ans --;
            if( d[a[l]] == a[l++] )
                ans ++;
        }
        an[k.se.se.se] = ans;
    }
    for( int i = 0; i < m; i ++ )
        cout << an[i] << endl;
}
