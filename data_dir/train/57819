#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
const int INF = 1e9+7;
const int MAXN = 2e3 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;
/*
void qsort(int first, int last){
	int l,r,c,x;
	if (first < last) {
		x = a[ (first + last) / 2];
		l = first;
		r = last;
		while (l <= r){
			while (a[l] < x) l++;
			while (a[r] > x) r--;
			if (l <=r ){
				c = a[l];
				a[l] = a[r];
				a[r] = c;
				l++;
				r--;
			}
 		}
 		qsort(first , r);
 		qsort(l , last);
	}
}
*/

int n;
int a[400][400];
bool bol;
int p,kol;
void solve() {
	cin>>n;
	kol = 1;
	p = n*n;
	bol = false;
	for (int j=1; j<=n; j++){
		if (!bol){
			for (int i=1; i<=n; i++) {
				a[i][j] = p;
				p--;
			}
			bol = true;
		}
		else
		{
			for (int i=n; i>=1; i--){
				a[i][j] = p;
				p--;
			}
			bol = false;
		}
		
	}	
	for (int i=1; i<=n; i++){
		for (int j=1; j<=n; j++)  cout<<a[i][j]<<" ";
		cout<<endl;
	}
}
 

int main() {
    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
    cout.setf(ios::fixed), cout.precision(20);
//  freopen("kotlin.in", "r", stdin);
//	freopen("kotlin.out", "w", stdout);
	int t;
	t = 1;
	while (t > 0){
	t--;
    solve();
    }
	return 0;
}
