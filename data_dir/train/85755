#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define cont continue
#define re return

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

int a[120001], que[12000001][4], n, i, x1, y1, x2, y2, x, y, step, queB, queE;

bool pole[101][100002], finish;

    void add(int x, int y, int step)
    {
        if ((pole[x][y]) || (finish))
        re;

        que[queE][1] = x;

        que[queE][2] = y;

        que[queE][3] = step;

        queE++;

        finish = ((x == x2) && (y == y2));

        pole[x][y] = true;
    }

int main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    for (i = 1; i <= n; i++) {
        cin >> a[i];

        a[i]++;
    }

    cin >> x1 >> y1 >> x2 >> y2;

    queE = 1;

    add(x1, y1, 0);

    while (queB < queE - 1) {
        queB++;

        x = que[queB][1];

        y = que[queB][2];

        step = que[queB][3];

        if (y + 1 <= a[x])
        add(x, y + 1, step + 1);

        if (y - 1 >= 1)
        add(x, y - 1, step + 1);

        if (x > 1)
        add(x - 1, min(y, a[x - 1]), step + 1);

        if (x < n)
        add(x + 1, min(y, a[x + 1]), step + 1);
    }

    cout << que[queE - 1][3] << endl;

    re 0;
}
