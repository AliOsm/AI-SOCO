#include <bits/stdc++.h>
using namespace std;

int col[300010], flag[300010];
vector<int> ice[300010];
vector<int> edge[300010];
int dfn;
void dfs(int u, int f) {
    for(int ic : ice[u]) {
         if(col[ic]) {
             flag[col[ic]] = dfn;
         }
    }
    int cur = 1;
    for(int ic : ice[u]) {
        if(!col[ic]) {
            while(flag[cur] == dfn) cur++;
            col[ic] = cur;
            cur++;
        }
    }
    dfn++;
    for(int v : edge[u]) {
        if(v != f) {
            dfs(v, u);
        }
    }
}

int main() {
    int n, m, s;
    scanf("%d%d", &n, &m);
    int ret = 1;
    for(int i = 1; i <= n; i++) {
        scanf("%d", &s);
        ret = max(ret, s);
        int t;
        for(int j = 0; j < s; j++) {
            scanf("%d", &t);
            ice[i].push_back(t);
        }
    }
    int u, v;
    for(int i = 1; i < n; i++) {
        scanf("%d%d",&u,&v);
        edge[u].push_back(v);
        edge[v].push_back(u);
    }
    dfn = 1;
    dfs(1, -1);
    printf("%d\n", ret);
    for(int i = 1; i <= m; i++) {
        if(!col[i]) col[i] = 1;
        printf("%d ", col[i]);
    }
    return 0;
}
