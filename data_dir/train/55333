//ITNOA
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <queue>
#include <fstream>
#include <cstring>
#include <cstdlib>
#include <iomanip>
#include <cassert>

using namespace std;

#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;


#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second

typedef long long ll;
typedef long double ld;

const int maxN = 1000 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 500;
const int maxL = 20;

ll gcd(ll x, ll y) {
	if(y == 0) return x;
	return gcd(y, x % y);
}

ll get(ll x, ll y) {
	if(x > y)
		return 0;
	return (y / x) * x;
}

ll solve(ll a, ll b) {
	if(b % a == 0) 
		return 0;
	
	ll gc = gcd(a, b);
	a /= gc;
	b /= gc;

	if (b > 1000*1000) {
		if(a >= b) {
			ll ans = 0;
			for(ll i = 1; i * i <= a; i ++) 
				if(a % i == 0) {
					if(i > 1)	
						ans = max(ans, get(i, b) * gc);
					ans = max(ans, get(a / i, b) * gc);
				}
			return ans;
		}
		else
			return ((b / a) * a + solve(a, b % a)) * gc;
	}
	else {
		for(int i = b; i >= 2; i --) {
			if(gcd(a, i) > 1)
				return i * gc;
		}
		return 0;
	}
}

int32_t main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	ll a, b; cin >> a >> b;

	ll ans = 0;
	while(b > 0) {
		ll nex = solve(a, b);
		ll gc = gcd(a, b);
		//assert(nex % gc == 0);
		ans += (b - nex) / gc;
		b = nex;
	}

	cout << ans << endl;
	return 0;
}
