/* 215D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
int n, m;
int t, T, x, c;
// int t[maxn];
// int T[maxn];
// int x[maxn];
// int c[maxn];

__int64 calc() {
	__int64 ret;
	
	if (t+n <= T) {
		ret = c;
		return ret;
	}
	
	if (t >= T) {
		ret = c + 1LL * n * x;
		return ret;
	}
	
	int l = 1;
	int d = T - t;
	int r = (n+d-1)/d;
	__int64 tmp;
	
	tmp = 1LL * r * c;
	ret = tmp;
	--r;
	
	tmp = 1LL * d * x;
	if (c >= tmp) {
		tmp = c + 1LL * n * x;
		ret = min(ret, tmp);
		return ret;
	}
	
	if (l < r)
		return ret;
	
	tmp = 1LL * r * c;
	n -= (r-1)*d;
	if (n > d)
		tmp += 1LL * n * x;
	ret = min(ret, tmp);
	
	return ret;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	__int64 ans = 0, tmp;
	
	scanf("%d %d", &m, &n);
	rep(i, 1, m+1) {
		scanf("%d %d %d %d", &t, &T, &x, &c);
		tmp = calc();
		ans += tmp;
		#ifndef ONLINE_JUDGE
			printf("%d: %I64d\n", i, tmp);
		#endif
	}
	printf("%I64d\n", ans);
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
