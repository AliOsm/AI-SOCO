#include <bits/stdc++.h>
using namespace std;

const int MAXN = 36;
int a[MAXN];
set<int> sa, sb;
int m;
int ans;

void DFS(int k, int n, int cur, set<int> &s)
{
    s.insert(cur);
    if(k == n)
        return;

    DFS(k + 1, n, cur, s);
    DFS(k + 1, n, (cur + a[k]) % m, s);

    return;
}

int main()
{
    int n;

    // freopen("D:\\1.in", "r", stdin);
    // freopen("D:\\1.out", "w", stdout);

    scanf("%d%d", &n, &m);
    for(int i = 0; i < n; ++i)
        scanf("%d", &a[i]);
    DFS(0, n / 2, 0, sa);
    DFS(n / 2, n, 0, sb);
    for(auto &x : sa)
    {
        set<int>::iterator iter = sb.upper_bound(m - 1 - x);
        if(iter == sb.begin())
            continue;
        --iter;
        ans = max(ans, x + *iter);
    }
    printf("%d\n", ans);

    return 0;
}
