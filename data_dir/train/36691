#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(int i=a;i<b;i++)
using namespace std;

void solve(){
	int n,w,h;
	cin>>n>>w>>h;
	vector<pair<pii,int>>temp(n);
	rep(i,0,n)cin>>temp[i].F.F>>temp[i].F.S,temp[i].S=i+1;
	sort(all(temp));
	vector<pair<pii,int>>x;
	rep(i,0,n){
		if(temp[i].F.F>w && temp[i].F.S>h)x.pb(temp[i]);
	}
	n=sz(x);
	vector<pii>dp(n);
	rep(i,0,n){
		int ans=0;
		rep(j,0,i){
			if(x[j].F.F<x[i].F.F && x[j].F.S<x[i].F.S && ans<dp[j].F){
				ans=dp[j].F;
				dp[i].S=j;
			}
		}
		dp[i].F=ans+1;
	}
	int ans=0;
	int idx=-1;
	rep(i,0,n){
		if(ans<dp[i].F){
			ans=dp[i].F;
			idx=i;
		}
	}
	cout<<ans<<endl;
	stack<int>anss;
	rep(i,0,ans){
		anss.push(x[idx].S);
		idx=dp[idx].S;
	}
	while(!anss.empty())cout<<anss.top()<<" ",anss.pop();
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int t=1;
//	cin>>t;
	while(t--){
		solve();
	}
	return 0;
}