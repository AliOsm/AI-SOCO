/* 350B */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
using namespace std;
#pragma comment(linker,"/STACK:102400000,1024000")

#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
int to[maxn];
int d[maxn];
bool mark[maxn];
bool visit[maxn];
int deep[maxn];
int fa[maxn];
vi vc;

void dfs(int u, int p) {
	if (deep[u] >= deep[p]+1)
		return ;
	
	visit[u] = true;
	fa[u] = p;
	deep[u] = deep[p] + 1;
	
	if (mark[u])
		return ;
	
	int v = to[u];
	if (visit[v])
		return ;
	if (d[v] == 1) {
		dfs(v, u);
	} else if (mark[v]) {
		dfs(v, u);
	}
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	memset(d, 0, sizeof(d));
	int n, x;
	
	scanf("%d", &n);
	rep(i, 1, n+1) {
		scanf("%d", &x);
		mark[i] = x;
		if (x) {
			vc.pb(i);
			deep[i] = 1;
			fa[i] = 0;
		}
	}
	rep(i, 1, n+1) {
		scanf("%d", &x);
		++d[x];
		to[x] = i;
		if (i == x)
			d[x] = 2;
	}
	
	int ans = 0, u;
	
	deep[0] = 0;
	rep(i, 1, n+1) {
		if (d[i] == 1) {
			memset(visit, false, sizeof(visit));
			dfs(i, 0);
		}
	}
	
	rep(i, 0, SZ(vc)) {
		x = vc[i];
		if (deep[x] > ans) {
			ans = deep[x];
			u = x;
		}
	}
	
	int m = 0;
	while (u) {
		to[m++] = u;
		u = fa[u];
	}
	
	printf("%d\n", m);
	per(i, 0, m)
		printf("%d ", to[i]);
	putchar('\n');
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}