#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 20;
int n, m, k, s;
vector <int> in;

int dis[N][105];
vector <int> a[N];

void bfs(int t) {
      queue <int> d;
      for (int i = 1; i <= n; ++i) {
            if (in[i] == t) {
                  d.push(i);
                  dis[i][t] = 0;
            }
      }
      while (!d.empty()) {
            int fr = d.front();
            d.pop();
            for (auto i : a[fr]) {
                  if (dis[i][t] > dis[fr][t] + 1) {
                        dis[i][t] = dis[fr][t] + 1;
                        d.push(i);
                  }
            }
      }
}

int main() {
      fill_n(&dis[0][0], N * 105, INT_MAX);
      cin >> n >> m >> k >> s;
      in.resize(n + 1);
      for (int i = 1; i <= n; ++i) {
            cin >> in[i];
      }
      while (m--) {
            int u, v;
            cin >> u >> v;
            a[u].push_back(v);
            a[v].push_back(u);
      }
      for (int i = 1; i <= k; ++i) {
            bfs(i);
      }
      for (int i = 1; i <= n; ++i) {
            int ans = 0;
            sort(dis[i] + 1, dis[i] + k + 1);
            for (int j = 1; j <= s; ++j) ans += dis[i][j];
            cout << ans << endl;
      }
      return 0;
}