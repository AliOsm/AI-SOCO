#include <bits/stdc++.h>
using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,a,n) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef pair<int,int> pii;

template<typename T>
T getint() {
    T x=0,p=1;
    char ch;
    do{ch=getchar();}while(ch <= ' ');
    if(ch=='-')p=-1,ch=getchar();
    while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();
    return x*p;
}

template<typename T1,typename T2>
bool umin(T1 &x,const T2&y){
    if(x>y)return x=y,true;
    return false;
}
template<typename T1,typename T2>
bool umax(T1 &x,const T2&y){
    if(x<y)return x=y,true;
    return false;
}

const int maxn=(int)1e6+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18-1;
const ld pi=acos(-1.0);

ll d[maxn];
ll d2[maxn];
ll Dx[maxn];
ll D2x[maxn];
ll Dy[maxn];
ll D2y[maxn];
int offset=100010;

int x=0,y=0;
int dx=1,dy=1;
int n,m;

int makemove(int &nx,int &ny,int &ndx,int &ndy){
    int xx,yy;
    if(dx==1)xx=n-x;
    else xx=x;
    if(dy==1)yy=m-y;
    else yy=y;
    int len=min(xx,yy);
    //cout<<len<<endl;
    nx=x+dx*len;
    ny=y+dy*len;
  //  cout<<nx<<' '<<ny<<endl;

    ndx=dx;ndy=dy;
    if(nx==0||nx==n)ndx*=-1;
    if(ny==0||ny==m)ndy*=-1;
    return len;
}

ll get(ll x, ll y){
    int q=x-y+offset;
    if(d[q]==-1)return llinf;

    int xx,yy;
    if(Dx[q]==-1)xx=n-x;
    else xx=x;
    if(Dy[q]==-1)yy=m-y;
    else yy=y;
    int len=min(xx,yy);

    return d[q]+len;
}
ll get2(ll x, ll y){
    int q=x+y+offset;
    if(d2[q]==-1)return llinf;


    int xx,yy;
    if(D2x[q]==-1)xx=n-x;
    else xx=x;
    if(D2y[q]==-1)yy=m-y;
    else yy=y;
    int len=min(xx,yy);

    return d2[q]+len;
}

int main() {

 //   freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);
    ios_base::sync_with_stdio(0);
    memset(d,-1,sizeof d);
    memset(d2,-1,sizeof d2);
    int k;
    cin>>n>>m>>k;
    ll len=0;
    while(true){
        if(dx*dy==1)d[x-y+offset]=len,Dx[x-y+offset]=dx,Dy[x-y+offset]=dy;
        if(dx*dy==-1)d2[x+y+offset]=len,D2x[x+y+offset]=dx,D2y[x+y+offset]=dy;
        int nx,ny,ndx,ndy;
        len+=makemove(nx,ny,ndx,ndy);
        x=nx,y=ny,dx=ndx,dy=ndy;
        int A=(x==0||x==n);
        int B=(y==0||y==m);
        if(A&&B)break;
    }
    while(k--){
        int x,y;
        cin>>x>>y;
        ll val=get(x,y);
        ll val2=get2(x,y);
        val=min(val,val2);
        if(val==llinf)val=-1;
        cout<<val<<'\n';

    }

    return 0;

}
