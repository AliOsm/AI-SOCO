#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
#define sc(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define sc3(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define scs(a) scanf("%s", a)
#define pri(x) printf("%d\n", x)
#define prie(x) printf("%d ", x)
#define mp make_pair
#define pb push_back
#define BUFF ios::sync_with_stdio(false);
#define db(x) cerr << #x << " == " << x << endl
typedef long long int ll;
typedef long double ld;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<ii> vii;
typedef vector< vii> vvii;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3fll;
const ld pi = acos(-1);
const int MOD = 1e9 + 7;
const int N=3e5+10;
vi g[N];
int us[N];
map<ii,int> ed;
int coco=-1;
int last=0;
int d[N];
vi res;
int dfs(int u){
	us[u]=1;
	int atual=(d[u]==1);
	int ret=atual;
	for(int v: g[u])
		if(!us[v]){ 
			int tem_lixo=dfs(v);
			if(tem_lixo){
				int x=u;
				int y=v;
				if(x>y) swap(x,y);
				res.pb(ed[mp(x,y)]);
			}
			if(tem_lixo and atual) atual=0;
			else if(tem_lixo and atual==0) atual=1;
		}
	return atual;
}
int main()
{
	int n,m;
	sc2(n,m);
	int sujo=0;
	for(int i=1;i<=n;i++){
		sc(d[i]);
		if(d[i]==1) sujo++;
	}
	for(int i=1;i<=m;i++){
		int u,v;
		sc2(u,v);
		if(u>v) swap(u,v);
		g[u].pb(v);
		g[v].pb(u);
		ed[mp(u,v)]=i;
	}
	if(sujo%2){
		for(int i=1;i<=n;i++) if(d[i]==-1) {
			d[i]=1;
			sujo++;
			break;
		}
	}
	if(sujo%2){
		pri(-1);
	}else{
		dfs(1);
		pri((int)res.size());
		for(int x: res) prie(x);
		cout<<endl;
	}
	return 0;
}
