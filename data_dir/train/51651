#include <iostream>
#include <stdio.h>
#include <string>
#include <cstring>
#include <queue>
#include <cmath>
#include <map>
#include <set>
#include <algorithm>
#include <functional>
#include <iomanip>
#include <vector>
#include <stack>
using namespace std;
typedef unsigned long long ull;
typedef long long mt;
typedef int mti;
typedef double mdt;

#define p2(x) (x)*(x)
#define p3(x) (p2(x))*(x)
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)
#define sortAllVec(a) sort(a.begin(), a.end())
inline void read_string_to_vector(vector<string> &vec)
{
	string str;
	getline(cin, str);
	vec.push_back(str);
}

template<typename T>
inline void read_digit_to_vector(vector<T> &vec)
{
	T t;
	cin >> t;
	vec.push_back(t);
}

//template<typename T>
//inline T gcd(T a, T b)
//{
//	return b ? gcd(b, a % b) : a;
//}
//
//template<typename T>
//inline T gcdExt(T a, T b, T &x, T &y)
//{
//	if (b)
//	{
//		T xs, ys;
//		T g = gcdExt(b, a % b, xs, ys);
//
//		x = ys;
//		y = xs - (a / b) * ys;
//
//		return g;
//	}
//	else
//	{
//		x = 1;
//		y = 0;
//		return a;
//	}
//}


#define mendl "\n"
#define N 100001//10000001
#define M N*N//(1<<19) + 100 10000001
#define P 2
#define K 32
#define MOD ((1LL << 30) + 1LL)//1000000007LL//1000000007LL  
#define MOD1 1000000000000007LL//1000000007LL  
#define INF 100000000000001LL//14
#define msq(px) (p2(px.first) + p2(px.second)) 
#define PI 3.141592653589793238462643383279 
#define EPS 1e-5


#define Mod(a) ((a) % MOD)
//rgby = 1111
//rgb = 1110 -> y = 0001
//rgy = 1101
mt n;
mt d, p;
char s[N];
bool ok = true;
int main()
{
#ifdef _DEBUG	
	freopen("in.txt", "r", stdin);
#endif
	//std::ios::sync_with_stdio(false);
	scanf("%lld", &n);
	while (n--)
	{
		scanf("%lld %s", &d, s);
		if (s[0] == 'S')
			p += d;
		else if (s[0] == 'N')
			p -= d;
		else if (p == 0 || p == 20000)
			ok = false;
		if (p < 0 || p > 20000)
			ok = false;
	}
	puts(!p && ok ? "Yes" : "No");
	return 0;
}