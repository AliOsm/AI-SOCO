#include<bits/stdc++.h>

using namespace std;

vector<string>s;
vector<pair<string,int>>ident;
int n;
char a , b;
string big1 , big2;

void posible(string big){
    vector<string>ok;
    string com = "";
    vector<string>pref;
    vector<string>suf;
    for(int i = 0; i<big.size()-1; i++){
        com += big[i];
        ok.push_back(com);
        pref.push_back(com);
    }
    com = "";
    for(int i = big.size()-1; i>0; i--){
        com = big[i] + com;
        ok.push_back(com);
        suf.push_back(com);
    }
    sort(ok.begin(),ok.end());
    char res[500];
    if(ok == s){
        int cur = 0;
        sort(pref.begin(),pref.end());
        string cut = pref[cur++];
        for(int i = 0; i<500; i++)res[i] = 'S';
        for(auto v : pref){
            for(auto hm : ident){
                if(v == hm.first and res[hm.second] != 'P'){res[hm.second] = 'P';break;}
            }
        }
        for(int i = 1; i<=2*n-2; i++){
            cout << res[i];
        }
        exit(0);
    }
}

int main()
{
    cin >> n;
    int flag = 0, flg = 0;
    for(int i = 1; i<=2*n-2; i++){
        string ss;
        cin >> ss;
        s.push_back(ss);
        ident.push_back({ss,i});
        if(ss.size() == (n-1) and flag == 0)big1 = ss , flag = 1;
        else if(ss.size() == (n-1))big2 = ss;
        if(ss.size() == 1 and flg == 0)a = ss[0] , flg = 1;
        else if(ss.size() == 1)b = ss[0];
    }
    sort(s.begin(),s.end());
    string big3 = big1;
    posible(big1+a);
    posible(big1+b);
    posible(a+big1);
    posible(b+big1);
    posible(big2+a);
    posible(big2+b);
    posible(a+big2);
    posible(b+big2);
    return 0;
}
