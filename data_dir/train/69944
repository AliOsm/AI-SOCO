#include <cstdio>
#include <iostream>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>

using namespace std;

#define inf (ll)1e15
#define ll long long
#define all(x) x.begin(), x.end()
#define x first
#define y second

typedef pair<int, int> Point;

const int mod = (int) 1e9 + 7;
const int mod2 = 998244353;

int main(){

    cin.tie(0);
    cin.sync_with_stdio(0);

    #ifdef Cyborg101
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif

    int n;
    cin >> n;

    if(n == 1){
    	cout << 1 << endl;
    	return 0;
    }

    int x[n], h[n];
    for(int i = 0; i < n; ++i){
    	cin >> x[i] >> h[i];
    }
 
 	// int greedyL = 2;
 	// bool prev_right = 0;

  //   for(int i = 1; i < n - 1; ++i){

  //   	if(!prev_right && x[i] - h[i] > x[i - 1]){
  //   		greedyL++;
  //   		prev_right = 0;
  //   	}
  //   	else if(prev_right && x[i] - h[i] > x[i - 1] + h[i - 1]){
  //   		greedyL++;
  //   		prev_right = 0;
  //   	}
  //   	else if(x[i] + h[i] < x[i + 1]){
  //   		greedyL++;
  //   		prev_right = 1;
  //   	}
  //   	else
  //   		prev_right = 0;
  //   }

    int greedyR = 2;
 	bool prev_left = 0;

    for(int i = n - 2; i >= 1; --i){

    	if(!prev_left && x[i] + h[i] < x[i + 1]){
    		greedyR++;
    		prev_left = 0;
    	}
    	else if(prev_left && x[i] + h[i] < x[i + 1] - h[i + 1]){
    		greedyR++;
    		prev_left = 0;
    	}
    	else if(x[i] - h[i] > x[i - 1]){
    		greedyR++;
    		prev_left = 1;
    	}
    	else
    		prev_left = 0;
    }
    
    // cout << max(greedyL, greedyR) << endl;

    cout << greedyR << endl;

    return 0;
}