#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define F first
#define S second
#define P_B push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define debug(x) cerr<< #x << ": " << x << endl;
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

//const int mod = 1000 * 1000 * 1000 + 7;
const int MAXN = 1000 * 1000 + 10;
ll dp[MAXN], t[MAXN];

int main()
{
	int n;
	cin>> n;
	FR(i, 0, n)
		cin>> t[i];

	pii p[3] = {{0, 20}, {90, 50}, {1440, 120}};
	ll lst = 0;
	FR(i, 0, n)
	{
		dp[i] = 1LL * LONG_MAX;
		FR(j, 0, 3)
		{
			int ind = lower_bound(t, t + i, t[i] - p[j].F + 1) - t - 1;
			ll new_dp = ((ind >= 0)? dp[ind]:0) + p[j].S;
			dp[i] = min(dp[i], new_dp);
		}
		cout<< dp[i] - lst << endl;
		lst = dp[i];
	}

	return 0;
}

