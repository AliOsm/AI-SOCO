#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> ii;

ll fat[200005], inv[200005], dp[5005];
ll mod = 1e9+7;

ll modpow(ll b, ll e){
    if(b == 0 || e == 0) return 1LL;
    if(e == 1) return (b%mod);
    ll res = modpow(b, e/2);
    res = res * res % mod;
    if(e%2 == 1)
        res = res * (b%mod) % mod;
    return res;
    
}

ll get(ll aa, ll bb, ll xx, ll yy){
    ll hor = abs(aa-xx), ver = abs(bb-yy);
    ll down = inv[hor] * inv[ver] % mod;
    ll up = fat[hor+ver] * down % mod;
    return up;
}

int main(){
    
    fat[0] = 1;
    inv[0] = 1;
    for(int i = 1; i <= 2e5; i++){
        fat[i] = (fat[i-1] * i)%mod;
        inv[i] = modpow(fat[i], mod-2);
    }
    
    ll n, m, k; cin >> n >> m >> k;
    vector<ii> vec;
    for(int i = 0; i < k; i++){
        ll x, y; cin >> x >> y;
        vec.emplace_back(x, y);
    }
    vec.emplace_back(n, m);
    k++;    
    sort(vec.begin(), vec.end());
    for(int i = 0; i < k; i++)
        dp[i] = get(1, 1, vec[i].first, vec[i].second);
    for(int i = 0; i < k; i++)
        for(int j = 0; j < i; j++){
            ll a = vec[i].first, b = vec[i].second;
            ll x = vec[j].first, y = vec[j].second;
            if(x <= a and y <= b){
                ll aux = dp[j] * get(a, b, x, y) % mod;
                dp[i] = (dp[i] - aux + mod) % mod;
            }
        }
    cout << dp[k-1] << endl;
    return 0;
}