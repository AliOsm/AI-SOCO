#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
void cyclic_roll(char& a, char& b, char& c, char& d)
{
	char temp = a;
	a = b;
	b = c;
	c = d;
	d = temp;
}
int main()
{
	ios::sync_with_stdio(false);
	int n; cin >> n;
	vector<string> firstMap(n);
	vector<string> secondMap(n);
	for (int y = 0; y < n; y++)
		cin >> firstMap[y];
	for (int y = 0; y < n; y++)
		cin >> secondMap[y];
	bool result = false;
	for (int t = 0; t < 4; t++)
	{
		bool res = true;
		for (int y = 0; y < n; y++)
			for (int x = 0; x < n; x++)
				res &= firstMap[y][x] == secondMap[y][x];
		result |= res;
		res = true;
		for (int y = 0; y < n; y++)
			for (int x = 0; x < n; x++)
				res &= firstMap[y][x] == secondMap[y][n - 1 - x];
		result |= res;
		res = true;
		for (int y = 0; y < n; y++)
			for (int x = 0; x < n; x++)
				res &= firstMap[y][x] == secondMap[n - 1 - y][x];
		result |= res;
		for (int i = 0; i < n / 2; i++)
			for (int j = 0; j < (n+1) / 2; j++)
				cyclic_roll(secondMap[i][j], secondMap[n - 1 - j][i], secondMap[n - 1 - i][n - 1 - j], secondMap[j][n - 1 - i]);
	}
	cout << (result ? "Yes" : "No") << endl;
}