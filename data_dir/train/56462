#include<bits/stdc++.h>
#define MOD 1000000007
#define MOD2 1000000006
#define TEMPMOD1 998244353
#define TEMPMOD2 998244352
#define INF 1000000000000000007
#define NEGINF -1000000000000000007
#define vll vector<ll> 
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define plll pair<pll,ll>
#define vpll vector<pll>
using namespace std;
typedef long long int ll;

vector<ll> minstore;
vector<ll> maxstore;

void minimise()
{
    char ch;
    vector<ll> store;
    ll size=minstore.size();
    if(size%2==1)
    {
        store.push_back(minstore[size-1]);
        size--;
    }
    for(ll i=0;i<size;i+=2)
    {
        cout<<"? "<<minstore[i]<<" "<<minstore[i+1]<<endl;
        cin>>ch;
        if(ch=='>')
        {
            store.push_back(minstore[i+1]);
        }
        else
        {
            store.push_back(minstore[i]);
        }
    }
    minstore=store;
}

void maximise()
{
    char ch;
    vector<ll> store;
    ll size=maxstore.size();
    if(size%2==1)
    {
        store.push_back(maxstore[size-1]);
        size--;
    }
    for(ll i=0;i<size;i+=2)
    {
        cout<<"? "<<maxstore[i]<<" "<<maxstore[i+1]<<endl;
        cin>>ch;
        if(ch=='>')
        {
            store.push_back(maxstore[i]);
        }
        else
        {
            store.push_back(maxstore[i+1]);
        }
    }
    maxstore=store;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    ll t,n;
    char ch;
    cin>>t;
    while(t--)
    {
        minstore.clear();
        maxstore.clear();
        cin>>n;
        ll abcdef=n;
        abcdef-=(n%2);
        if(n%2==1)
        {
            minstore.push_back(n);
            maxstore.push_back(n);
        }    
        for(ll i=1;i<abcdef;i+=2)
        {
            cout<<"? "<<i<<" "<<i+1<<endl;
            cin>>ch;
            if(ch=='<')
            {
                minstore.push_back(i);
                maxstore.push_back(i+1);
            }
            else
            {
                minstore.push_back(i+1);
                maxstore.push_back(i);
            }
        }
        while(minstore.size()>1)
        {
            minimise();
        }
        while(maxstore.size()>1)
        {
            maximise();
        }
        cout<<"! "<<minstore[0]<<" "<<maxstore[0]<<endl;
    }
    return 0;
}