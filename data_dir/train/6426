#include<iostream>
#include<sstream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cassert>
#include<complex>
#define rep(i,n) for(int i=0;i<(int)n;i++)
#define each(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)
#define all(c) (c).begin(), (c).end()
#define pb push_back
#define mp make_pair
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl
using namespace std;

typedef vector<int> vi;
typedef pair<int, int> pi;
typedef long long ll;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

const int MX = 300010;
int bit[MX];
void add(int i, int x){
	for(; i < MX; i += i & -i) bit[i] += x;
}
int sum(int i){
	int res = 0;
	for(; i; i -= i & -i) res += bit[i];
	return res;
}

int n, q, a[MX], p[MX];
void fix(int x, int sig){
	if(x <= 0 || x > n) return;
	x = a[x - 1];
	if(x < n && p[x] > p[x + 1]) add(x, sig);
}
void pfix(int x, int sig){
	if(x <= 0 || x > n) return;
	x = a[x - 1] - 1;
	if(x > 0 && p[x] > p[x + 1]) add(x, sig);
}

int main(){
	scanf("%d", &n);
	rep(i, n){
		scanf("%d", a + i);
		p[a[i]] = i;
	}
	rep(i, n) fix(i + 1, 1);
	
	scanf("%d", &q);
	while(q--){
		int t, x, y;
		scanf("%d%d%d", &t, &x, &y);
		if(t == 1){
			printf("%d\n", sum(y - 1) - sum(x - 1) + 1);
		}
		else{
			fix(x, -1); if(a[x - 1] != a[y - 1] + 1) pfix(x, -1);
			fix(y, -1); if(a[x - 1] != a[y - 1] - 1) pfix(y, -1);
			swap(a[x - 1], a[y - 1]);
			p[a[x - 1]] = x - 1;
			p[a[y - 1]] = y - 1;
			fix(x, 1); if(a[x - 1] != a[y - 1] + 1) pfix(x, 1);
			fix(y, 1); if(a[x - 1] != a[y - 1] - 1) pfix(y, 1);
			/*
			rep(i, n) cerr<<a[i]<<(i==n-1?"\n":" ");
			rep(i, n - 1) cerr<<sum(i+1) - sum(i)<<(i==n-2?"\n":" ");
			*/
		}
	}
  return 0;
}
