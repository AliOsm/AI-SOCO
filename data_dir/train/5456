#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> // Common file
//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
//using namespace __gnu_pbds;
//typedef tree<
//        pair<int, int>, // change type
//        null_type,
//        less<pair<int, int> >, // change type
//        rb_tree_tag,
//        tree_order_statistics_node_update>
//        ordered_set;

typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define sz(x) (int)(x).size()
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(d, v) memset(d, v, sizeof(d))
#define pii pair<int, int>
const double PI = 3.14159265358979323846;
const double eps = (1e-8);

const int MAX_N = 1000005;
int mem[MAX_N][6][6];
int cnt[MAX_N];
int n, m;
int solve(int i, int a, int b)
{
    if (i == m + 1)
        return 0;
    int &ret = mem[i][a][b];
    if (~ret)
        return ret;
    ret = INT_MIN;
    for (int lv = 0; lv <= min(5, cnt[i]); ++lv)
    {
        int t = (cnt[i] - lv)/3, tRem = (cnt[i] - lv)%3, take = min(tRem, min(a, b));
        ret = max(ret, t + take + solve(i + 1, b - take, lv));
        ret = max(ret, t + solve(i + 1, b , lv));
    }
    return ret;
}



int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
//    freopen("facebook.txt", "w", stdout);
#endif
    clr(mem, -1);
    cin >> n >> m;
    rep(i,0,n)
    {
        int x;
        cin >> x;
        cnt[x]++;
    }
    cout << solve(1, 0, 0) << '\n';
    return 0;
}