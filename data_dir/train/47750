#include<bits/stdc++.h>
#define N 100005
#define MOD 1000000007
using namespace std;

int n,m,k;
long long dp[4][4][N],inc;

int main() {
	scanf("%d %d %d",&m,&n,&k);
	int yon=0,x=0,y=0,p=0;
	long long adim=1;
	while(1) {
		if((x==0 && y==m) || (x==n && (y==0 || y==m))) {
			break ;
		}
		if(p==0 || p==2) dp[yon][p][y]=adim;
		else dp[yon][p][x]=adim;
		if(yon==0) {
			inc=min(n-x,m-y);
			x+=inc;y+=inc;
			if(x==n) {
				yon=3;
				p=2;
			}
			else {
				yon=1;
				p=1;
			}
		}
		else if(yon==1) {
			inc=min(n-x,y);
			x+=inc;y-=inc;
			if(x==n) {
				yon=2;
				p=2;
			}
			else {
				yon=0;
				p=3;
			}
		}
		else if(yon==2) {
			inc=min(x,y);
			x-=inc;y-=inc;
			if(x==0) {
				yon=1;
				p=0;
			}
			else {
				yon=3;
				p=3;
			}
		}
		else {
			inc=min(x,m-y);
			x-=inc;y+=inc;
			if(x==0) {
				yon=0;
				p=0;
			}
			else {
				yon=2;
				p=1;
			}
		}
		adim+=inc;
	}	
	while(k--) {
		scanf("%d %d",&y,&x);
		long long ans=1e18;
		inc=min(n-x,m-y);
			if(x+inc==n) {
				if(dp[2][2][y+inc]) {
					ans=min(ans,dp[2][2][y+inc]+inc);
				}
			}
			else {
				if(dp[2][1][x+inc]) {
					ans=min(ans,dp[2][1][x+inc]+inc);				
				}
			}
		inc=min(n-x,y);
			if(x+inc==n) {
				if(dp[3][2][y-inc]) {
					ans=min(ans,dp[3][2][y-inc]+inc);
				}
			}
			else {
				if(dp[3][3][x+inc]) {
					ans=min(ans,dp[3][3][x+inc]+inc);
				}
			}
		inc=min(x,y);
		if(inc==x) {
			if(dp[0][0][y-inc]) {
				ans=min(ans,dp[0][0][y-inc]+inc);
			}
		}
		if(inc==y) {
			if(dp[0][3][x-inc]) {
				ans=min(ans,dp[0][3][x-inc]+inc);
			}
		}
		inc=min(x,m-y);
			if(inc==x) {
				if(dp[1][0][y+inc]) {
					ans=min(ans,dp[1][0][y+inc]+inc);
				}
			}
			else {
				if(dp[1][1][x-inc]) {
					ans=min(ans,dp[1][1][x-inc]+inc);
				}
			}
		if(ans==1e18) ans=0;
		printf("%lld\n",ans-1);
	}
}
