#include<cstdio>
#include<iostream>
#include<vector>
using namespace std;
int const MAX=2000*100+10;
int wall[MAX*10];
string x[3];
int d[MAX*100];
int q[MAX*100];
vector<int>adj[MAX];
int n,k;
int const inf=1000*1000*1000+10;
void fadj(int i){
	if(i-1>=1 && wall[i-1]=='-')
		adj[i].push_back(i-1);
	if(i+1==n+1)
		adj[i].push_back(2*n+1);
	 else if(wall[i+1]=='-')
		adj[i].push_back(i+1);
	 if(i<=n && (i+n+k)>2*n){
		adj[i].push_back(i+n+k);
		return;
	}
	 if(wall[i+n+k]=='-'){
		adj[i].push_back(i+n+k);
		return;
	}
	 if(i+k>2*n){
		adj[i].push_back(i+k);
		return;
	}
 	 if(wall[i-n+k]=='-'){
		adj[i].push_back(i-n+k);
	}
}
int main(){
	cin>>n>>k;
	cin>>x[0]>>x[1];
	for(int i=1;i<=n;i++){
		wall[i]=x[0][i-1];
		wall[n+i]=x[1][i-1];
	}
	for(int i=1;i<=2*n;i++){
		fadj(i);
	}
	int s=0;
	int e=1;
	d[1]=0;
	q[0]=1;
	for(int i=2;i<=2*n+k;i++)
		d[i]=inf;
	while(e>s){
		int v=q[s++];
		for(int i=0;i<adj[v].size();i++){
			if(adj[v][i]>2*n){
				cout<<"YES";
				return 0;
			}
			int t;
			if(adj[v][i]%n==0){
				t=n;
			}
			else{
				t=adj[v][i]%n;
			}
			if(d[adj[v][i]]>d[v]+1 && t>d[v]+1)
				d[adj[v][i]]=d[v]+1,q[e++]=adj[v][i];
			}
	}
	cout<<"NO";
}