#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i=0;i<n;i++)
#define  ll long long int
#define pi pair<ll,ll>
#define pii pair<ll,pi>
#define f first
#define s second
#define pb push_back

#define VI vector<int>
vector<ll>g[4];
bool func(pii a,pii b) {
    if(a.f != b.f) return a.f > b.f;
    return a.s < b.s;
}
ll dp[300011];
pi pt[300011];

int main() {

    int n,m,w,c;
    cin >> n >> m;
    rep(i,n) {
        cin >> w >> c;
        g[w].pb(c);
    }
    vector<pii>v;
    for(int i=1;i<=3;i++) {
        sort(g[i].begin(),g[i].end());
        reverse(g[i].begin(),g[i].end());
    }
    pt[0] = {-1,-1};
    for(int i=1;i<=m;i++) {
        if(pt[i-1].f+1 < g[1].size())
            dp[i] = dp[i-1] + g[1][pt[i-1].f+1] , pt[i]=pt[i-1],pt[i].f++;
        if(i-2>=0 and pt[i-2].s+1 < g[2].size() and dp[i] < dp[i-2]+g[2][pt[i-2].s+1] ) {
            dp[i] = dp[i-2]+g[2][pt[i-2].s+1];
            pt[i] = pt[i-2];
            pt[i].s++;
        }
        if(dp[i]==0) {
            dp[i] = max((i-1>=0?dp[i-1]:0),(i-2>=0?dp[i-2]:0));
            pt[i] = {n+1,n+1};
        }
    }

    ll ans = 0;
    ll cur = 0;
    for(int i=0;i<=g[3].size();i++) {
        ll rem = m-3*i;
        if(rem < 0) break;
        ans = max(ans,dp[rem]+cur);
        if(rem-1) {
            ans = max(ans,dp[rem-1]+cur);
        }
        if(i!=g[3].size())
            cur+=g[3][i];
    }
    cout << ans;
}
