#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sqr(x) (x) * (x)
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)1e5 + 10;
int next[maxn],cl[maxn];
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	memset(next,-1,sizeof(next));
	string s;
	cin>>s;
	int n = sz(s);
	int m;
	cin>>m;
	vector<string> v(m);
	for(int i = 0; i < m; i++)
		cin>>v[i];
	for(int i = 0; i < n; i++)
		for(int j = 0; j < m; j++)
		{
			if (i + sz(v[j]) > n) continue;
			bool ok = true;
			for(int k = 0; k < sz(v[j]); k++)
				if (s[i + k] != v[j][k])
					ok = false;
			if (ok) next[i] = next[i] == -1 ? i + sz(v[j]) - 1 : min(next[i],i + sz(v[j]) - 1);
		}
	int last = n;	
	for(int i = n - 1; i >= 0; i--)
	{
		if (next[i] != -1) last = min(last,next[i]);
		cl[i] = last;
	}
	int best = 0,pos = 0;
	for(int i = 0; i < n; i++)
		if (cl[i] - i > best)
		{
			best = cl[i] - i;
			pos = i;
		}
	cout<<best<<" "<<pos<<endl;	
	return 0;
}
