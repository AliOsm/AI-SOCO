#include <bits/stdc++.h>
using namespace std;
#define mod 998244353
#define oo 2000000000
const int N = 100010;
int u , v , w , dsu[N] , n , m , x[N] , k , sz[N] , val[N];

bool good[N];

int Find(int u){
	return (u == dsu[u] ? u : dsu[u] = Find(dsu[u]));
}

int tmpres = 0;


vector< pair<int , pair<int,int> > > v1 , v2;

int main(){
   	scanf("%d%d%d",&n,&m,&k);
   	for(int i=0;i<k;i++){
   		scanf("%d",&x[i]);
   		good[x[i]] = true;
   	}
   	for(int i = 1;i<=n;i++)
   		dsu[i] = i;
   	for(int i=0;i<m;i++){
   		scanf("%d%d%d",&u,&v,&w);
   		v1.push_back(make_pair(w,make_pair(u,v)));
   	}
   	sort(v1.begin(),v1.end());
   	for(int i=0;i<(int)v1.size();i++){
   		u = Find(v1[i].second.first);
   		v = Find(v1[i].second.second);
   		if(u == v) continue;
   		v2.push_back(v1[i]);
   		dsu[u] = v;
   	}
   	for(int i = 1;i<=n;i++){
   		dsu[i] = i;
   	}
   	int ans = 0;
   	for(int i=0;i<(int)v2.size();i++){
   		u = Find(v2[i].second.first);
   		v = Find(v2[i].second.second);
   		if(good[u] && good[v]){
   			good[u] = true;
   			ans = v2[i].first;
   			dsu[v] = u;
   		}
   		else if(good[u] || good[v]){
   			good[u] = true;
   			dsu[v] = u;
   		}
   		else{
   		    dsu[v] = u;
   		}
   	}
   	for(int i=0;i<k;i++){
   		printf("%d ",ans);
   	}
   	puts("");
    return 0;
}