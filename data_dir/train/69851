#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 100;

int n, a[N];
string s;

void L() {s.push_back('L');}
void R() {s.push_back('R');}

void solve(int l, int r, int last = 0) { // []
	if(a[l] < a[r] && a[l] > last) {
		L();
		solve(l + 1, r, a[l]);
		return;
	}
	else if(a[r] < a[l] && a[r] > last) {
		R();
		solve(l, r - 1, a[r]);
		return;
	}
	if(max(a[l], a[r]) <= last)
		return;
	int help = last, cnt = 0;
	for (int i = l; i <= r; i++)
		if(a[i] <= help)
			break;
		else
			cnt++, help = a[i];
	help = last;
	for (int i = r; i >= l; i--)
		if(a[i] <= help)
			break;
		else
			cnt--, help = a[i];
	if(cnt >= 0) {
		while(l <= r && a[l] > last)
			L(), last = a[l++];
	}
	else {
		while(r >= l && a[r] > last)
			R(), last = a[r--];
	}
}			

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	solve(0, n - 1);
	cout << s.size() << '\n' << s;
	return 0;
}
