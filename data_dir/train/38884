#include <bits/stdc++.h>
using namespace std;

const int N = 2002, mod = 1e9 + 7;

int dp0[N][N], dp1[N][N], mn, cnt;


int f(int len, int c) {
	if(c > 2000) return 0;
	if(len == 0) return c == 0;
	if(~dp0[len][c]) return dp0[len][c];
	int res = f(len - 1, c + 1);
	if(c) res += f(len - 1, c - 1);
	return dp0[len][c] = res % mod;
}

int r(int len, int c) {
	int res = 0;
	if(~dp1[len][c]) return dp1[len][c];
	if(mn + c >= 0) res = f(len, c + cnt);
	if(len && c) res += r(len - 1, c - 1);
	res %= mod;
	if(len)	res += r(len - 1, c + 1);
	return dp1[len][c] = res % mod;
}

int main() {
	
	int n, m; string str; cin >> n >> m >> str;
	for(int i = 0; i < m; i++) {
		cnt += str[i] == '(';
		cnt -= str[i] == ')';
		mn = min(mn, cnt);
	}
	memset(dp0, -1, sizeof dp0);
	memset(dp1, -1, sizeof dp1);
	cout << r(n - m, 0) << endl;
	
	
}
