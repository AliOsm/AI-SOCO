#include<algorithm>
#include<iostream>
#include<numeric>
#include<iomanip>
#include<cassert>
#include<chrono>
#include<string>
#include<vector>
#include<random>
#include<cmath>
#include<ctime>
#include<deque>
#include<queue>
#include<set>
#include<map>

using namespace std;

int check(string s) {
	int n = (int)s.size();
	string f1 = "";
	for (int i = 0; i < n; i++) {
		if (i % 3 == 0) f1 += "R";
		if (i % 3 == 1) f1 += "G";
		if (i % 3 == 2) f1 += "B";
	}
	string f2 = "";
	for (int i = 0; i < n; i++) {
		if (i % 3 == 0) f2 += "G";
		if (i % 3 == 1) f2 += "B";
		if (i % 3 == 2) f2 += "R";
	}
	string f3 = "";
	for (int i = 0; i < n; i++) {
		if (i % 3 == 0) f3 += "B";
		if (i % 3 == 1) f3 += "R";
		if (i % 3 == 2) f3 += "G";
	}
	int a1 = 0, a2 = 0, a3 = 0;
	for (int i = 0; i < n; i++) {
		if (s[i] != f1[i]) a1++;
		if (s[i] != f2[i]) a2++;
		if (s[i] != f3[i]) a3++;
	}
	return min(a1, min(a2, a3));
}

void solve() {
	int n, k;
	cin >> n >> k;
	string s;
	cin >> s;
	int ans = 1000000000;
	for (int i = 0; i < n - k + 1; i++) {
		string t = "";
		for (int j = 0; j < k; j++) {
			t += s[i + j];
		}
		ans = min(ans, check(t));
	}
	cout << ans << '\n';
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int q;
	cin >> q;
	for (int qq = 0; qq < q; qq++) {
		solve();
	}
	return 0;
}
