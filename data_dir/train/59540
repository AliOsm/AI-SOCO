
#include <iostream>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j1234 = n; (i) < j1234; (i) ++)
#define rep1(i, n) for (int (i) = 1, j1234 = n; (i) <= j1234; (i) ++)
#define For(i, a, b) for (int (i) = (a), ub1234=b; (i) <= ub1234; (i) ++)
#define db(x) {if(debug){cout << #x << " = " << (x) << endl;}}
#define dba(a, x, y) {if(debug){cout << #a << " :";For(i, (x), (y))cout<<" "<<(a)[(i)];cout<<endl;}}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define endl '\n'
#define ll long long
#define ld long double
#define pi 3.1415926535897932384626433832795028
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const int output_precision = 15;
const bool debug = true;
// const ll MOD = ;

int N, M;
ll row[1111], col[1111];
inline ll f (ll x) { return x * x; }
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(output_precision); cout << fixed;
  cout.tie(0);
  cin >> N >> M;
  rep1(i,N) rep1(j,M)
  {
    ll foo;
    cin >> foo;
    row[i] += foo;
    col[j] += foo;
  }
  ll bestx = -1, besty = -1;
  int x, y;
  rep(i,N+1)
  {
    ll cur = 0;
    for (int j = 1; j <= i; j++)
      cur += f(2 + 4 * (i - j)) * row[j];
    for (int j = i+1; j <= N; j++)
      cur += f(2 + 4 * (j - i - 1)) * row[j];
    if (bestx == -1 || bestx > cur)
    {
      bestx = cur;
      x = i;
    }
  }
  rep(i,M+1)
  {
    ll cur = 0;
    for (int j = 1; j <= i; j++)
      cur += f(2 + 4 * (i - j)) * col[j];
    for (int j = i+1; j <= M; j++)
      cur += f(2 + 4 * (j - i -1)) * col[j];
    if (besty == -1 || besty > cur)
    {
      besty = cur;
      y = i;
    }
  }
  cout << bestx + besty << endl;
  cout << x << " " << y << endl;
}
