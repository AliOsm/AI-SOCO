// They can't break me, as long as I know who I am...

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn = 1e5 + 10, mod = 1e9 + 7;
const ll inf = 1e18;

pii p[maxn];
int n;

void check(){
    vector<int> v[2];
    for(int i = 0; i < n; i++)
	v[(p[i].F ^ p[i].S)&1].PB(i);
    if(!v[0].empty() && !v[1].empty()){
	cout << sz(v[0]) <<"\n";
	for(int x : v[0])
	    cout << x + 1 << " ";
	cout<<"\n";
	exit(0);
    }    
}
void check2(){
    vector<int> v[2];
    for(int i = 0; i < n; i++)
	v[p[i].F & 1].PB(i);
    if(!v[0].empty() && !v[1].empty()){
	cout << sz(v[0]) <<"\n";
	for(int x : v[0])
	    cout << x + 1 << " ";
	cout<<"\n";
	exit(0);
    }    
}

int main(){
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie();

    cin >> n;
    for(int i = 0; i < n; i++){
	cin >> p[i].F >> p[i].S;
	if(p[i].F < 0)
	    p[i].F = (1<<25) + p[i].F;
	if(p[i].S < 0)
	    p[i].S = (1<<25) + p[i].S;
    }
    while(true){
	check();
	if((p[0].F + p[1].F) &1){
	    if(p[0].F & 1)
		for(int i = 0; i < n; i++)
		    p[i].F--;
	    else
		for(int i = 0; i < n; i++)
		    p[i].S--;
	}
	check2();
	if(p[0].F & 1){
	    for(int i = 0; i < n; i++)
		p[i].F--, p[i].S--;
	}
	for(int i = 0; i < n; i++)
	    p[i].F>>=1, p[i].S>>=1;
    }
    return 0;
}
// #pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
