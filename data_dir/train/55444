#include <bits/stdc++.h>

using namespace std;

int n, m, ct;
vector <string> vec;
map <string, bool> used, us;
string a[1005], b[1005];

main()
{
    cin >> n >> m;
    for (int i=1;i<=n;i++)
    {
        cin >> a[i];
        us[a[i]]=1;
    }
    for (int i=1;i<=m;i++)
    {
        cin >> b[i];
        if (us[b[i]]==1)
        {
            ct++;
        }
    }
    if (ct%2==0)
    {
        if (n>m)
            cout << "YES";
        else
            cout << "NO";
    }
    else
    {
        m--;
        if (n>m)
            cout << "YES";
        else
            cout << "NO";
    }
    /*for (int i=1;;i++)
    {
        if (i%2==1)
        {
            int u=0;
            for (int j=0;j<vec.size();j++)
            {
                if (!used[vec[j]])
                {
                    used[vec[j]]=1;
                    u=1;
                    break;
                }
            }
            if (u)
                continue;
            for (int j=1;j<=n;j++)
            {
                if (!used[a[j]])
                {
                    used[a[j]]=1;
                    u=1;
                    break;
                }
            }
            if (!u)
            {
                cout << "NO";
                return 0;
            }
        }
        else
        {
            int u=0;
            for (int j=0;j<vec.size();j++)
            {
                if (!used[vec[j]])
                {
                    used[vec[j]]=1;
                    u=1;
                    break;
                }
            }
            if (u)
                continue;
            for (int j=1;j<=m;j++)
            {
                if (!used[b[j]])
                {
                    used[b[j]]=1;
                    u=1;
                    break;
                }
            }
            if (!u)
            {
                cout << "YES";
                return 0;
            }
        }
    }*/
    return 0;
}
