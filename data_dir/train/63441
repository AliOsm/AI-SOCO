#define  _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<map>
#include<cmath>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<cmath> 
#include<stack>
#include<math.h>
#include<set>
#include<string>
#include<cstring>
#include<queue>
#include<complex>	
#include<math.h>
#include<memory.h>
#include<sstream>	
#include<cstdio>
using namespace std;

#define PI acos(-1.0)
#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define INF (0x7fffffff)
#define mp make_pair
#define fastIO ios::sync_with_stdio(false)
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
#define All(a) a.begin(), a.end()

typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef long double ld;


int n;
int a[100001];
vi v[100001];
bool prime[100001];
vi p;
int dp[100001];
void init(){
	memset(prime, 1, sizeof prime);
	prime[0] = prime[1] = 0;
	for (ll i = 2; i < 100001; i ++)
	if (prime[i]){
		p.push_back(i);
		for (ll j = i*i; j < 100001; j += i) prime[j] = 0;
	}
}
int f(int x){
	if (dp[x] != -1)return dp[x];
	int res = 1;
	int y = 0;
	int xx = x;
	while (x!=1){
		if (x%p[y] == 0 && p[y] != xx)
		{
			int i = lower_bound(All(v[p[y]]), xx) - v[p[y]].begin();
			if(i)res = max(res, 1 + f(v[p[y]][i - 1]));
		}
		while (x && x%p[y] == 0) x /= p[y];
		y++;
	}
	return dp[xx]=res;
}
int main(){	
	
	init();
	memset(dp, -1, sizeof dp);
	scf(n);
	int x;
	rep(i, n){
		scf(a[i]);
		x = a[i];
		int y = 0;
		while (x!=1){
			if (x%p[y] == 0)v[p[y]].push_back(a[i]);
			while (x && x%p[y] == 0) x /= p[y];
			y++;
		}
	}
	int res = 1;
	rep(i, n){
		res = max(res, f(a[i]));
	}
	cout << res << endl;
	return 0;
}