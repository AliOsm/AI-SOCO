#include <bits/stdc++.h>
using namespace std;
#define ll long long int

int main() {
    ll n;
    cin>>n;

    pair<ll,ll> edge;
    vector<ll> child;
    vector<vector<ll>> graph(n+1, child);

    for(ll i=0;i<n-1;++i){
        cin>>edge.first>>edge.second;
        graph[edge.first].emplace_back(edge.second);
        graph[edge.second].emplace_back(edge.first);
    }
    
    ll color[2] = {0,0}; // first for set U and second for set V
    //DFS
    unordered_map<ll, ll> seen;
    vector<ll> color_ver(n+1);
    stack<ll> STACK;
    STACK.push(1);
    seen[1] = 1;
    color_ver[1] = 0;
    ++color[0];
    while(!STACK.empty()){
        ll ver = STACK.top();
        STACK.pop();
        for(auto child: graph[ver]){
            if(seen.count(child)==0){
                STACK.push(child);
                seen[child] = 1;
                color_ver[child] = color_ver[ver]^1;
                ++color[color_ver[child]];
            }
        }
    }
    //cout<<color[0]<<"  "<<color[1]<<"\n";
    cout<<color[0]*color[1]-(n-1)<<"\n";

    return 0;
}
