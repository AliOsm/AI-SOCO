/** 
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define endl "\n"
#define fori(n) for(ll i=0; i<(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cinll(l) ll l; cin>>l;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinall(a, n) vll a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }

typedef pair<int, int> pii;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;

void solve() {
    cins(s);
    vector<pii> pos;

    int ones=0;
    int cnt=0;
    for(size_t i=0; i<s.size(); i++) {
        if(s[i]=='1')
            ones++;

        if(s[i]=='0')
            cnt++;
        else {
            pos.push_back({ cnt, i });
            cnt=0;
        }
    }

    sort(pos.begin(), pos.end());

    int ans=ones;

    int firstPos=0;
    for(int i=2; i<=s.size(); i++) {
        string bin="";
        int x=i;
        while(x) {
            bin=bin+((x&1)?"1":"0");
            x/=2;
        }
        reverse(bin.begin(), bin.end());

        int ledZero=i-bin.size();
        while(firstPos<pos.size() && pos[firstPos].first<ledZero)
            firstPos++;

        if(firstPos==pos.size())
            break;

        for(int k=firstPos; k<pos.size(); k++) {
            int match=true;
            for(int j=1; j<bin.size(); j++) {
                if(pos[k].second+j>=s.size() || bin[j]!=s[pos[k].second+j]) {
                    match=false;
                    break;
                }
            }
            if(match) {
//cout<<"dbg match, bin="<<bin<<" pos="<<pos[k].second<<" leading="<<ledZero<<endl;
                ans++;
            }
        }
    }
    cout<<ans<<endl;

}

int main() {
cin.tie(nullptr);
std::ios::sync_with_stdio(false);
    cini(t);
    while(t--)
        solve();
}

