#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007
#define dancila 3.14159265359
#define eps 1e-9

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    ll x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}
int n;
string s;
int aintmin[4000002], lazy[4000002], aintmax[4000002], sm[4000002];
int prv[1000002], sst = 0;
void upd(int nod, int st, int dr, int poz, int val)
{
    if(st == dr)
    {
        aintmin[nod] += val;
        aintmax[nod] += val;
        sm[nod] += val;
        return;
    }
    int mid = (st + dr) / 2;
    if(poz <= mid)
        upd(nod << 1, st, mid, poz, val);
    else
        upd(nod << 1|1, mid+1, dr, poz, val);
    aintmin[nod] = min(aintmin[nod << 1], sm[nod << 1] + aintmin[nod << 1|1]);
    aintmax[nod] = max(aintmax[nod << 1], sm[nod << 1] + aintmax[nod << 1|1]);
    sm[nod] = sm[nod << 1] + sm[nod << 1|1];
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n;
    cin >> s;
    int poz = 1;
    for(int i = 0; i < n; ++i)
    {
        if(s[i] == 'R')
            ++poz;
        else
            if(s[i] == 'L')
                poz = max(poz - 1, 1);
            else
            {
                int val = 0;
                if(s[i] == '(')
                    val = 1;
                else
                    if(s[i] == ')')
                        val = -1;
                sst += val - prv[poz];
                upd(1, 1, n, poz, val - prv[poz]);
                prv[poz] = val;
            }
        pair<int, int> qx = {aintmin[1], aintmax[1]};
        if(qx.first == 0 && sst == 0)
            cout << qx.second << " ";
        else
            cout << -1 << " ";
    }
    return 0;
}
