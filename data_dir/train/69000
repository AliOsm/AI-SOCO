#include <bits/stdc++.h>
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define pb push_back
#define endl '\n'
#define MOD 1000000007

using namespace std;
typedef long long int ll;

bool adj[1010][1010];

int main(void)
{
	#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
	#endif
	fast;
	ll k; cin >> k;
	vector<vector<int>> bins(110);
	int curbin = 0;
	bins[0].pb(1);
	bins[101].pb(2);
	for (int i = 3; i <= 1000; ++i)
		bins[(i-3)/10 + 1].push_back(i);
	ll connections = k;
	int nextbin = 1;
	ll pcount = 1;
	int len = 1, curlen = 1;
	while (connections)
	{
		if (pcount*10 <= connections)
		{
			pcount *= 10;
			for (auto x1 : bins[curbin])
				for (auto x2 : bins[nextbin])
					adj[x1][x2] = adj[x2][x1] = 1;
			curbin = nextbin;
			++nextbin;
			++curlen;
			continue;
		}
		ll save = pcount;
		pcount = 0;
		++curlen;
		for (auto x1 : bins[nextbin])
		{
			if (pcount + save > connections) break;
			pcount += save;
			for (auto x2 : bins[curbin])
				adj[x1][x2] = adj[x2][x1] = 1;
		}
		connections -= pcount;
		len = max(len, curlen);
		while (curlen < len)
		{
			for (int i = 0; i < 10; ++i)
				for (int j = 0; j < 10; ++j)
					adj[bins[nextbin][i]][bins[nextbin+1][0]] = adj[bins[nextbin+1][0]][bins[nextbin][i]] = 1;
			++curlen;
			++nextbin;
		}
		for (int i = 0; i < 10; ++i)
			adj[bins[nextbin][i]][2] = adj[2][bins[nextbin][i]] = 1;
		++nextbin;
		curbin = 0;
		pcount = 1;
		curlen = 1;
		// cout << curlen << '\n';
	}
	cout << 1000 << '\n';
	for (int i = 1; i <= 1000; ++i)
	{
		for (int j = 1; j <= 1000; ++j)
		{
			// if (adj[i][j] and i < j) cout << i << ' ' << j << '\n';
			if (adj[i][j]) cout << 'Y';
			else cout << 'N';
		}
		cout << '\n';
	}
}