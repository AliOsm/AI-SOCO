/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Harshad
 */

#include <bits/stdc++.h>

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define int long long

using namespace __gnu_pbds;
using namespace std;

template <typename T>
using ordered_set =
    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

class AAlexAndARhombus {
public:
	void solve(std::istream& in, std::ostream& out) {
        int n; in >> n;
        int res = 1, three_sided = 1, two_sided = 0;
        for(int i = 2; i <= n; ++i) {
            res += (4*three_sided + 4* two_sided);
            ++two_sided;
        }
        out << res;
	}
};


int32_t main() {
	AAlexAndARhombus solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
