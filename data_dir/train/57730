/*
ID:
PROB: skidesign
LANG: C++
*/
#include <bits/stdc++.h>
#define ll long long int
#define mp make_pair
#define ld long double
#define pb push_back
#define endl '\n'
#define mod 1000000009
#define INF 10000000000000
#define PI acos(-1.0)
using namespace std;
ll prime[1<<20];    int numofprimes;
ll gcd(ll a, ll b) { return (b == 0 ? a : gcd(b, a % b)); }
ll lcm(ll a, ll b) { return (a * (b / gcd(a, b))); }
ll POWER(ll x,ll y, ll m){
    if(y==0) return 1;
    if(y%2==0) { ll temp= POWER(x,y/2,m);   temp*=temp; temp%=m;	return temp;	}
    ll temp= POWER(x,y-1,m);    temp*=x;	temp%=m;	return temp;
}
void runEratosthenesSieve(int upperBound){
      int upperBoundSquareRoot = (int)sqrt((double)upperBound);
      bool *isComposite = new bool[upperBound + 1];
      memset(isComposite, 0, sizeof(bool) * (upperBound + 1));
      for (int m = 2; m <= upperBoundSquareRoot; m++) {
            if (!isComposite[m]) {
                  prime[numofprimes++]=m;
                  for (int k = m * m; k <= upperBound; k += m)
                        isComposite[k] = true;
            }
      }
      for (int m = upperBoundSquareRoot+1; m <= upperBound; m++)
            if (!isComposite[m])
                  prime[numofprimes++];
}
char ch[1005][1005];
bool vis[100010];
int main(){
    //ifstream fin("ali");
    //ofstream fout("skidesign.out");
    int n,m;
    cin>>n>>m;
    int ans=0;
    for(int i=0;i<n;i++){
        int s=0,g=0;
        vector<int>ss;
        vector<int>gg;
        for(int j=0;j<m;j++){
            cin>>ch[i][j];
            if(ch[i][j]=='S')s=j+1;
            if(ch[i][j]=='G')g=j+1;
        }

            if(s-g<=0){
                //cout<<s<<" "<<g<<endl;
                cout<<-1<<endl;
                return 0;
            }
            if(!vis[s-g]){
                ans++;
                vis[s-g]=true;
            }

    }
    cout<<ans<<endl;
}
