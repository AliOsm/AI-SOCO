//platypus179 problems are very easy
#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=3e5+10;
vector<int>g[mx];
int sz[mx];
set<pair<int,int> >seto;
int ans[mx];
void dfs(int u){
   sz[u]=1;
   for(int v:g[u]){
      dfs(v);
      sz[u]+=sz[v];
   }
}
void go(int u){
   seto.insert({sz[u],u});
   int maxi=0;
   for(int v:g[u]){
      go(v);
      maxi=max(maxi,sz[v]);
   }
   int from=maxi+maxi, to=sz[u]+sz[u];
   auto it=seto.lower_bound({from,-1});
   for(;it!=seto.end() && it->first<=to;){
      ans[it->second]=u;
      auto nit=it;
      nit++;
      seto.erase(it);
      it=nit;
   }
}
int main(){
   int n,q,pi;
   scanf("%d %d",&n,&q);
   for(int i=2;i<=n;i++){
      scanf("%d",&pi);
      g[pi-1].push_back(i-1);
   }
   dfs(0);
   go(0);
   for(int i=0;i<q;i++){
      scanf("%d",&pi);
      printf("%d\n",ans[pi-1]+1);
   }
   return 0;
}
