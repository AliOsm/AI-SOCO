#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 1e5 + 5;
constexpr int INF = 1e9;

int f(string s, char c1, char c2) {
	int n = s.size();
	int p = -1;

	int res = 0;

	for (int i = n - 1; i >= 0; i--) {
		if (s[i] == c2) {
			p = i;
			break;
		}
	}

	if (p == -1) return INF;

	while (p != n - 1) {
		swap(s[p], s[p + 1]);
		res++;
		p++;
	}

	p = -1;
	for (int i = n - 2; i >= 0; i--) {
		if (s[i] == c1) {
			p = i;
			break;
		}
	}

	if (p == -1) return INF;

	while (p != n - 2) {
		swap(s[p], s[p + 1]);
		res++;
		p++;
	}

	if (s[0] == '0') {
		p = -1;
		for (int i = 0; i < n - 2; i++) {
			if (s[i] != '0') {
				p = i;
				break;
			}
		}
		if (p == -1) return INF;
		res += p;
	}

	return res;
}

int main() {
	ios::sync_with_stdio(false); cin.tie(nullptr);
	
	string s;
	cin >> s;

	int res = f(s, '0', '0');
	res = min(res, f(s, '2', '5'));
	res = min(res, f(s, '5', '0'));
	res = min(res, f(s, '7', '5'));

	if (res == INF) cout << "-1\n";
	else cout << res << "\n";
}