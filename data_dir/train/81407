#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <string>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
using namespace std;

int e1[400000];
int e2[400000];
vector<vector<int> > edges;
vector<int> stack;
vector<int> tour;

int main()
{
	int N,M;
	cin >> N >> M;
	for(int i=0;i<N;i++)
		edges.push_back(vector<int>());
	int a,b;
	for(int i=0;i<M;i++)
	{
		cin >> a >> b;
		a--,b--;
		if(a>b) swap(a,b);
		edges[a].push_back(i);
		edges[b].push_back(i);
		e1[i] = a;
		e2[i] = b;
	}
	int iPrev = -1;
	for(int i=0;i<N;i++)
	{
		if(!(edges[i].size()%2)) continue;
		if(iPrev == -1)
			iPrev = i;
		else
		{
			e1[M] = iPrev;
			e2[M] = i;
			edges[iPrev].push_back(M);
			edges[i].push_back(M);
			M++;
			iPrev = -1;
		}
	}
	stack.push_back(0);
	int cur,eid,nxt;
	while(stack.size()>0)
	{
		cur = stack.back();
		if(edges[cur].size() == 0)
		{
			tour.push_back(cur);
			stack.pop_back();
		}
		else
		{
			eid = edges[cur].back();
			if(cur == e1[eid]) nxt = e2[eid];
			else nxt = e1[eid];
			if(nxt != -1)
			{
				e1[eid] = e2[eid] = -1;
				stack.push_back(nxt);
			}
			edges[cur].pop_back();
		}
	}
	if(M%2)
	{
		tour.push_back(0);
		M++;
	}
	cout << M << "\n";
	for(int i=0;i<M;i++)
	{
		if(i%2)
			cout << tour[i]+1 << " " << tour[(i+1)%M]+1 << "\n";
		else
			cout << tour[(i+1)%M]+1 << " " << tour[i]+1 << "\n";
	}
	return 0;
}