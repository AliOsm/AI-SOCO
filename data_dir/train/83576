#include <bits/stdc++.h>
using namespace std;

#define N 100010
string str, s;
string st = "\\begin{thebibliography}{99}";
string ed = "\\end{thebibliography}";
map <string, int> mp;
int cnt, now; bool same;
string res[N]; 

int getid(string s)
{
	if (mp.find(s) == mp.end()) mp[s] = ++cnt;
	return mp[s];
}

void work()
{
	int len = str.size();
	string tmp = ""; bool add = 0;
	for (int i = 0; i < len; ++i)
	{
		if (str[i] == '{') add = 1;
		else if (str[i] == '}')
		{
			getid(tmp);
			tmp = "";
			add = 0; 
		}
		else if (add) tmp += str[i];
	} 
}

void add()
{
	int len = s.size();
	string tmp = ""; bool add = 0;
	for (int i = 0; i < len; ++i)
	{
		if (s[i] == '{') add = 1;
		else if (s[i] == '}')
		{
			++now;
			int id = getid(tmp);
			if (id != now) same = false;
			res[id] = s;
			return; 
		} 
		else if (add)
			tmp += s[i];
	} 
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0); 
	cnt = 0; now = 0;
	bool start = 0;
	same = true;
	str = "";   
	while (getline(cin, s))
	{
		if (s == "") continue;
		if (s == st) 
		{
			start = 1;
			work();
			continue;
		}
		if (s == ed) 
		{
			if (same)
			{
				cout << "Correct\n";
				return 0;
			}
			cout << "Incorrect\n";  
			cout << st << "\n";
			for (int i = 1; i <= cnt; ++i)
				cout << res[i] << "\n";
			cout << ed << "\n";
		} 
		if (start)
			add();
		else
			str += s;
	} 
	return 0;
}
