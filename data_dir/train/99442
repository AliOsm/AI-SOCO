#include <bits/stdc++.h>

#define F first
#define S second

#define pb push_back
#define mp make_pair

using namespace std;

const int MXN = (int) 3e6 + 7;
const int INF = (int) 1e9 + 7;

int n;
int a[MXN], b[MXN], t[MXN], cnt[MXN];

void upd(int pos) {
    while (pos <= n+10) {
        t[pos]++;
        pos |= (pos + 1);
    }
}

int get(int pos) {
    int res = 0;
    for (int i = pos; i >= 0; i &= (i + 1), i--)
        res += t[i];

    return res;
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &a[i]), a[i]++;

    for (int i = 1; i <= n; i++)
        scanf("%d", &b[i]), b[i]++;

    for (int i = 1; i <= n; i++) {
        cnt[i] += a[i] - 1 - get(a[i] - 1);
        upd(a[i]);
    }

    memset(t, 0, sizeof t);
    for (int i = 1; i <= n; i++) {
        cnt[i] += (b[i] - 1) - get(b[i] - 1);
        upd(b[i]);
    }
    for (int i = n; i >= 1; i--) {
        int cur = n - i + 1;
        while (cnt[i] >= cur) {
            cnt[i - 1]++;
            cnt[i] -= cur;
        }
    }
    memset(t, 0, sizeof t);
    set<int> s;
    for (int i = 1; i <= n+5; i++)
        s.insert(i);

    for (int i = 1; i <= n; i++) {
        int lo = 1, hi = n;
        while (hi - lo > 1) {
            int m = (lo + hi) / 2;
            if (m - get(m - 1) - 1 >= cnt[i]) hi = m;
            else lo = m;
        }
        if (lo - get(lo - 1) - 1 == cnt[i]) hi = lo;
        set<int>::iterator it = s.lower_bound(hi);
        printf("%d ", (*it) - 1);
        upd(*it);
        s.erase(*it);

    }
    return 0;
}//
