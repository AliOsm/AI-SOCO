#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 500010;
pair < int, int > h1[N], h2[N];
pair < int, int > f[N];
const int base = 2142;
const int mod1 = 1e9 + 7;
const int mod2 = 1e9 + 9;
int b[N];
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    string s1, s2;
    cin >> s1 >> s2;
    int l1 = s1.length();
    int l2 = s2.length();
    vector < vector < int > > dp;
    for (int i = 0; i < l1 + 10; i++){
        vector < int > a;
        for (int j = 0; j <= l2 + 10; j++){
            a.pb(-1e9);
        }
        dp.pb(a);
    }
    f[0].F = 1;
    f[0].S = 1;
    for (int i = 1; i < l2; i++){
        h1[i].F = (h1[i - 1].F * base + s2[i - 1]) % mod1;
        h1[i].S = (h1[i - 1].S * base + s2[i - 1]) % mod2;
        f[i].F = f[i - 1].F * base % mod1;
        f[i].S = f[i - 1].S * base % mod2;
        h2[i].F = (h2[i - 1].F + f[i - 1].F * s2[l2 - i]) % mod1;
        h2[i].S = (h2[i - 1].S + f[i - 1].S * s2[l2 - i]) % mod2;
        if (h1[i] == h2[i]){
            b[i] = 1;
        }
    }
    dp[0][0] = 0;
    int ans = 0;
    for (int i = 1; i <= l1; i++){
        ans = max(ans, dp[i - 1][l2] + 1);
        dp[i][0] = ans;
        for (int j = 1; j <= l2; j++){
            if (s1[i - 1] == '?') dp[i][j] = dp[i - 1][j - 1]; else
            if (s1[i - 1] != s2[j - 1]) dp[i][j] = -1e9; else dp[i][j] = dp[i - 1][j - 1];
        }
        int t = dp[i][l2] + 1;
        ans = max(ans, t);
        for (int j = 1; j <= l2; j++){
            if (b[j])
                dp[i][j] = max(dp[i][j], t);
            ans = max(ans, dp[i][j]);
        }
        dp[i][0] = ans;
    }
    cout << ans;
}
