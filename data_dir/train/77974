#include "bits/stdc++.h"
using namespace std;
int Array[500005] , Heights[500005];
long long Prefix[500005] , Suffix[500005];
stack<pair<int,int> > S;

void FillPrefix( int N ){ 
    int i , index;
    Prefix[0] = 0LL;

    for( i = 1 ; i <= N ; ++i ){  
        while( !S.empty() && (S.top()).first >= Array[i] )  
            S.pop(); 
   
        if( S.empty() ) Prefix[i] = Array[i] * 1LL * i;
        else{ 
            index = (S.top()).second;
            Prefix[i] = Prefix[index] + ( i - index ) * 1LL * Array[i];
        }

        S.push( make_pair( Array[i] , i ) ); 
    } 

    while( !S.empty() )
        S.pop();
} 

void FillSuffix( int N ){ 
    int i , index;
    Suffix[N + 1] = 0LL;

    for( i = N ; i >= 1 ; --i ){  
        while( !S.empty() && (S.top()).first >= Array[i] )  
            S.pop(); 
   
        if( S.empty() ) Suffix[i] = Array[i] * 1LL * ( N - i + 1 );
        else{ 
            index = (S.top()).second;
            Suffix[i] = Suffix[index] + ( index - i ) * 1LL * Array[i];
        }

        S.push( make_pair( Array[i] , i ) ); 
    } 

    while( !S.empty() )
        S.pop();
} 

void FormHeights( int N ){
    FillPrefix( N );
    FillSuffix( N );
    int i , index = 1;

    for( i = 2 ; i <= N ; ++i ){
        if( Suffix[i] + Prefix[i] - Array[i] > Suffix[index] + Prefix[index] - Array[index] ) index = i;
    }  

    Heights[index] = Array[index];

    for( i = index - 1 ; i >= 1 ; --i )
        Heights[i] = min( Heights[i + 1] , Array[i] );

    for( i = index + 1 ; i <= N ; ++i )
        Heights[i] = min( Heights[i - 1] , Array[i] );
}

int main(){
    int N , i;
    scanf( "%d" , &N );

    for( i = 1 ; i <= N ; ++i )
        scanf( "%d" , Array + i );
    
    FormHeights( N );

    for( i = 1 ; i <= N ; ++i )
        printf( "%d " , Heights[i] );
    
    puts( "" );
    return 0;
}