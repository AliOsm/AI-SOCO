#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define Ldouble long double
#define PI 3.1415926535897932384626

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

#define INF (1LL << 60)

using namespace std;

int n, cost[100005], len;
LL dp[2][100005];

char s[100005], t[100005], u[100005];
vector<char> v[100005];

int main(){
	scanf("%d", &n);
	FI(i, 1, n) scanf("%d", &cost[i]);
	
	FI(i, 1, n){
		scanf("\n%s", s);
		len = strlen(s);
		FI(j, 0, len - 1) v[i].push_back(s[j]);
	}
	dp[0][1] = 0;
	dp[1][1] = cost[1];
	FI(i, 2, n){
		dp[0][i] = dp[1][i] = INF;
		int len = v[i].size();
		int plen = v[i-1].size();
		//normal
		FI(j, 0, len - 1) s[j] = v[i][j];
		s[len] = 0;
		
		FI(j, 0, plen - 1) t[j] = v[i-1][j];
		t[plen] = 0;
		if(strcmp(s, t) >= 0) dp[0][i] = min(dp[0][i], dp[0][i-1]);
		
		FI(j, 0, plen - 1) t[j] = v[i-1][plen - 1 - j];
		t[plen] = 0;
		if(strcmp(s, t) >= 0) dp[0][i] = min(dp[0][i], dp[1][i-1]);
		
		//reversed
		FI(j, 0, len - 1) s[j] = v[i][len - 1 - j];
		s[len] = 0;
		
		FI(j, 0, plen - 1) t[j] = v[i-1][j];
		t[plen] = 0;
		if(strcmp(s, t) >= 0) dp[1][i] = min(dp[1][i], dp[0][i-1] + cost[i]);
		
		FI(j, 0, plen - 1) t[j] = v[i-1][plen - 1 - j];
		t[plen] = 0;
		if(strcmp(s, t) >= 0) dp[1][i] = min(dp[1][i], dp[1][i-1] + cost[i]);
	}
	
	LL ans = min(dp[0][n], dp[1][n]);
	if(ans == INF) ans = -1;
	printf("%lld\n", ans);
	return 0;
}