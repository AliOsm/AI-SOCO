#include <bits/stdc++.h>

using namespace std;

const int K=62;

const int V=K*K;

string alphabet="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

int numof[300];

int get_vertex(char a, char b){
    return K*numof[a]+numof[b];
}

vector<int> g[V];

int in[V], out[V];

signed main()
{
#ifdef files
	ifstream cin("input.txt");
	ofstream cout("output.txt");
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    for(int i=0; i<alphabet.size(); i++)numof[(int)alphabet[i]]=i;
    int n;
    cin >> n;
    for(int i=0; i<n; i++){
        string s;
        cin >> s;
        int a=get_vertex(s[0],s[1]), b=get_vertex(s[1],s[2]);
        g[a].push_back(b);
        out[a]++;
        in[b]++;
    }
    int start=-1, finish=-1;
    for(int i=0; i<V; i++){
        if(in[i]!=out[i]){
            if(in[i]+1==out[i]){
                if(start==-1)start=i;
                else return cout << "NO", 0;
            }
            else if(out[i]+1==in[i]){
                if(finish==-1)finish=i;
                else return cout << "NO", 0;
            }
            else return cout << "NO", 0;
        }
    }
    if(start==-1){
        for(int i=0; i<V; i++){
            if(out[i]){
                start=i;
                break;
            }
        }
    }
    vector<int> q;
    q.push_back(start);
    vector<int> ans;
    while(!q.empty()){
        int v=q.back();
        q.pop_back();
        while(!g[v].empty()){
            q.push_back(v);
            int u=g[v].back();
            g[v].pop_back();
            v=u;
        }
        ans.push_back(v);
    }
    for(int i=0; i<V; i++){
        if(g[i].size())return cout << "NO", 0;
    }
    cout << "YES\n";
    reverse(ans.begin(),ans.end());
    cout << alphabet[ans[0]/K];
    for(int i=0; i<ans.size(); i++)cout << alphabet[ans[i]%K];
}
