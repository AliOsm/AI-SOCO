#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define ll long long
#define mp make_pair
#define f first
#define s second
#define pii pair < int, int >
#define pll pair < ll, ll >
#define all(s) s.begin(), s.end()
#define sz(s) (int) s.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define vi vector < int >

const int inf = (int)1e9;
const int mod = (int) 1e9 + 7;
int n, m;
int a[55][55], b[55][55];

void impossible(){
    cout <<"Impossible"<<endl;
    exit(0);
}

int main () {
    scanf("%d%d", &n, &m);

    for (int i=0;i<n;i++) {
        for (int j=0;j<m;j++) {
            scanf("%d", &a[i][j]);
        }
    }

    for (int i=0;i<n;i++) {
        for (int j=0;j<m;j++) {
            scanf("%d", &b[i][j]);
        }
    }

    for (int i=0;i<n;i++) {
        for (int j=0;j<m;j++) {
            swap(a[i][j], b[i][j]);
            bool ok = false;
            if (i > 0 && a[i][j] <= a[i-1][j]) {
                ok = true;
            }
            if (j > 0 && a[i][j] <= a[i][j-1]) {
                ok = true;
            }

            if (i > 0 && b[i][j] <= b[i-1][j]) {
                ok = true;
            }
            if (j > 0 && b[i][j] <= b[i][j-1]) {
                ok = true;
            }
            bool ok1 = ok;
            swap(a[i][j], b[i][j]);
            ok = false;
            if (i > 0 && a[i][j] <= a[i-1][j]) {
                ok = true;
            }
            if (j > 0 && a[i][j] <= a[i][j-1]) {
                ok = true;
            }

            if (i > 0 && b[i][j] <= b[i-1][j]) {
                ok = true;
            }
            if (j > 0 && b[i][j] <= b[i][j-1]) {
                ok = true;
            }
            bool ok2 = ok;

            if (!ok1 && !ok2){
                if (a[i][j] > b[i][j]){
                    swap(a[i][j], b[i][j]);
                }
            }

            if (!ok1){
                swap(a[i][j], b[i][j]);
            }
        }
    }


    for (int i=0;i<n;i++){
        for (int j=0;j<m;j++){
            if (i > 0 && a[i][j] <= a[i-1][j]) {
                impossible();
            }
            if (j > 0 && a[i][j] <= a[i][j-1]) {
                impossible();
            }

            if (i > 0 && b[i][j] <= b[i-1][j]) {
                impossible();
            }
            if (j > 0 && b[i][j] <= b[i][j-1]) {
                impossible();
            }
        }
    }

    cout <<"Possible"<<endl;

    return 0;
}
