#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <ctime>
#include <cstdlib>
#include <list>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;

int dx[] = { 1, 0, -1, 0 };
int dy[] = { 0, 1, 0, -1 };

// start + (end - start) / 2;
/*
long long power(long long b, long long Pow){
if (b == 0) return 0;
else if (Pow == 1) return b;
else if (Pow % 2  == 0.0) return power(b*b, Pow / 2);
else return b*power(b*b, Pow / 2);
}*/
/*
int gcd(int a, int b){
if (b == 0)
return a;
return gcd(b, a % b);
}
*/
bool can(int x, int y, int a1, int b1, int a2, int b2){
    if (max(a1, a2) <= x){
        if (max(b1, b2) <= y){
            if (a1 + a2 <= x)
                return true;
        }
    }
    return false;
}
int main() {
    cin.tie(0);
    std::ios::sync_with_stdio(false);
    int x, y;
    cin >> x >> y;
    int a1, a2, b1, b2;
    cin >> a1 >> b1 >> a2 >> b2;
    if (can(x, y, a1, b1, a2, b2)){
        cout << "YES\n";
    }
    else if (can(x, y, a1, b1, b2, a2)){
        cout << "YES\n";
    }
    else if (can(x, y, b1, a1, b2, a2)){
        cout << "YES\n";
    }
    else if (can(x, y, b1, a1, a2, b2)){
        cout << "YES\n";
    }
    else if (can(y, x, a1, b1, a2, b2)){
        cout << "YES\n";
    }
    else if (can(y, x, a1, b1, b2, a2)){
        cout << "YES\n";
    }
    else if (can(y, x, b1, a1, b2, a2)){
        cout << "YES\n";
    }
    else if (can(y, x, b1, a1, a2, b2)){
        cout << "YES\n";
    }
    else {
        cout << "NO\n";
    }
}