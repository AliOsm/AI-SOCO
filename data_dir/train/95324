#include <bits/stdc++.h>
using namespace std;
const int MaxN = 4e5 + 17;
const int INF = 1e9 + 17;
int a[MaxN], n, k = 1, l, r, L, x;
int d[25][MaxN], p[MaxN], u[MaxN];
pair < int, int > b[MaxN];
void build (int v, int l, int r)
{
	for (int i = 2; i < MaxN; ++ i)
		p[i] = p[i / 2] + 1;
	for (int i = 1; i <= n; ++ i)
		d[0][i] = a[i];
	for (int k = 1; k <= p[n]; ++ k)
		for (int i = 1; i <= n; ++ i)
			d[k][i] = min (d[k - 1][i], d[k - 1][i + (1 << (k - 1))]);
}
int Get (int l, int r)
{
	int k = p[r - l + 1];
	return min (d[k][l], d[k][r - (1 << k) + 1]);
}
int main()
{ 
    #ifndef ONLINE_JUDGE 
        freopen(".in", "r", stdin); 
    #endif 
  	scanf ("%d", &n);
  	for (int i = 1; i <= n; ++ i)
  		scanf ("%d", a + i), b[i] = make_pair (a[i], i);
 	sort (b + 1, b + n + 1);
  	build (1, 1, n);
  	for (int i = n; i >= 1; -- i)
  	{
  		l = 1, r = b[i].second, x = b[i].first;
  		while (l < r)
  		{
  			int m = (l + r) >> 1;
  			if (Get (m, b[i].second) == x)
  				r = m;
  			else
  				l = m + 1;
  		}
  		L = l;
  		if (Get (L, b[i].second) == x && L > 1)
  			L --;
  		if (Get (L, b[i].second) != x && L < b[i].second)
  			L ++;
  		l = b[i].second;
  		r = n;
  		while (l < r)
  		{
  			int m = (l + r) >> 1;
  			if (Get (b[i].second, m) == x)
  				l = m + 1;
  			else
  				r = m;
  		}
  		l = L;
  		if (Get (b[i].second, r) == x && r < n)
  			r ++;
  		if (Get (b[i].second, r) != x && r > b[i].second)
  			r --;
//  		cout << l << ' ' << r << ' ' << x << ' ' << Get (1, 1, n, l, r) << endl;
  		for (; k <= (r - l + 1); ++ k)
  			u[k] = x;
/*  		for (int i = 1; i <= (r - l + 1); ++ i)
  			u[i] = max (u[i], x);*/
  	}
  	for (int i = 1; i <= n; ++ i)
    	printf ("%d ", u[i]);
    return 0; 
}