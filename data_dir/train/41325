// Charan Sriramula

#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=2e5+4;
const ll INF=1e9;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

ll n,m,a[N],b[N];

ll F(ll val)
{
  ll sum=0;
  for(ll i=0;i<n;i++)
  {
    if(a[i]>val){continue;}
    sum+=(val-a[i]);
  }
  for(ll i=0;i<m;i++)
  {
    if(b[i]<val){continue;}
    sum+=(b[i]-val);
  }
  return sum;
}

int main()
{
  fast;
  cin>>n>>m;
  ll low=1,high=INF,mini;
  for(ll i=0;i<n;i++){cin>>a[i];}
  for(ll i=0;i<m;i++){cin>>b[i];}
  while(low+5<=high)
  {
    ll x=(2*low+high)/3;
    ll y=(low+2*high)/3;
    ll costx=F(x);
    ll costy=F(y);
    //mini=min(mini,min(costx,costy));
    if(costx>=costy){low=x;}
    else{high=y;}
  }
  mini=F(low);
  for(ll i=low;i<=high;i++){mini=min(mini,F(i));}
  cout<<mini<<endl;
}
