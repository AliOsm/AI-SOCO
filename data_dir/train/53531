#include "bits/stdc++.h"

using namespace std;
using LL = long long;

constexpr int N = 1e5 + 5;

int have[26][26];

void foo(string s) {
	set< char> st;
	for (char c : s) st.insert(c);
	if (st.size() > 2) return;

	if (st.size() == 1) {
		int x = *st.begin() - 'a';

		for (int i = x; i < 26; i++) have[x][i] += s.size();
		for (int i = 0; i < x; i++) have[i][x] += s.size();
	}
	else {
		int x = *st.begin() - 'a';
		int y = *next(st.begin()) - 'a';
		if (x > y) swap(x, y);
		have[x][y] += s.size();
	}
}

int main() {
	ios::sync_with_stdio(false); cin.tie(nullptr);
	
	int n;
	cin >> n;


	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		foo(s);
	}

	int res = 0;
	for (int i = 0; i < 26; i++) {
		for (int j = i; j < 26; j++) {
			res = max(res, have[i][j]);
		}
	}


	cout << res << endl;
}