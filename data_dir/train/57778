#include <bits/stdc++.h>
using namespace std;

const int N = int(1e5) + 5;

char s[N];
vector<int> pi;
vector<pair<int, int> > ans;
vector<vector<int> > g;
int n;

vector<int> cnt, sum;

void dfs(int v)
{
	for(int i = 0; i < g[v].size(); ++i)
	{
		int to = g[v][i];
		dfs(to);
		cnt[v]++;
		sum[v] += sum[to];
	}
	//cout << v << " " << cnt[v] << endl;
	sum[v] += cnt[v];
}

int main (int argc, char *argv[])
{
	scanf("%s", s);
	n = int(strlen(s));
	pi.resize(n);
	g.resize(n + 1);
	pi[0] = 0;
	g[0].push_back(1);
	for(int i = 1; i < n; ++i)
	{
		int j = pi[i - 1];
		while(j > 0 && s[i] != s[j])
		{
			j = pi[j - 1];
		}
		if(s[i] == s[j])
		{
			++j;
		}
		pi[i] = j;
		g[j].push_back(i + 1);
	}
	cnt.resize(n + 1, 0);
	sum.resize(n + 1, 0);
	dfs(0);
	ans.push_back(make_pair(n, 1));
	for(int i = n - 1; i > 0; i = pi[i] - 1)
	{
		int j = pi[i];
		if(j > 0)
		{
			ans.push_back(make_pair(j, sum[j] + 1));
		}
	}
	reverse(ans.begin(), ans.end());
	printf("%d\n", int(ans.size()));
	for(int i = 0; i < ans.size(); ++i)
	{
		printf("%d %d\n", ans[i].first, ans[i].second);
	}

	return 0;
}

