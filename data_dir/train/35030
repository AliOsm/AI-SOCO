#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1 , k ;
bool check( vector<pair<ll,ll> >& vv , ll x )
{
    ll c = 0 ;
    rep( i , 0 , sz(vv) )
        c += vv[i].F / x ;
    if( c >= k )
        return true ;
    else
        return false ;
}
ll calc( vector<pair<ll,ll> >& vv )
{
    ll lo = 1 , hi = 2000005 , mid ;
    while( lo < hi )
    {
        mid = ( lo + hi ) / 2 ;
       /* if( check( vv , mid ) )
              cout << "mid = " << mid << "\n" ;*/
         if( check( vv , mid + 1 ) )
            lo = mid + 1 ;
        else if( check( vv , mid ) == false )
            hi = mid - 1 ;
        else
            return mid ;
    }
    if( check(vv,lo+1) )return lo+1 ;
    else
       return lo ;
}
void solve()
{
    ll n ;
    cin >> n >> k ;
//cout << "k = " << k << "\n " ;
    vector<ll> cnt( 200005 , 0 ) , v( n ) ;
    rep( i , 0 , n )
    {
        cin >> v[i] ;
        cnt[v[i]]++;
    }
    vector<pair<ll,ll> > vv ;
    rep( i , 1 , 200001 )
    {
        if( cnt[i] > 0 )
            vv.pb( {cnt[i],i});
    }
    sort( all(vv));
    vector<ll> ans ;
    reverse(all(vv));
    ll cnt1 = calc( vv ) ;
//cout << "cnt1 = " << cnt1 << "\n" ;
    rep( i , 0 , sz(vv) )
    {
        rep( j , 0 , vv[i].F / cnt1 )
{/*cout << vv[i].S << "  " << "\n" ;*/
            ans.pb( vv[i].S ) ;}
    }
    rep( i , 0 , k )
        cout << ans[i] << " " ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
   // cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
