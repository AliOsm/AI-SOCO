/*input

4 5 1 1 2
1 3 5 7
1 2 3 9 10

2 2 4 4 2
1 10
10 20


4 3 2 3 1
1 999999998 999999999 1000000000
3 4 1000000000



*/
#include <bits/stdc++.h>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define __builtin_popcount __builtin_popcountll
#define int long long
#define bit(x,y) ((x>>y)&1LL)
#define loop(i,l,r) for(int i=(int)l; i<=(int)r; i++)
#define rloop(i,l,r) for(int i=(int)l; i>=(int)r; i--)
//const int N=;
template <class T1, class T2>
ostream &operator<<(ostream &os, const pair<T1, T2> &a) {
	return os << '(' << a.first << ", " << a.second << ')';
}
template <class T>
ostream &operator<<(ostream &os, const vector<T> &a) {
	os << '[';
	for (unsigned int i = 0; i < a.size(); i++)
		os << a[i] << (i < a.size() - 1 ? ", " : "");
	os << ']';
	return os;
}

int n, m, cancle, ta, tb;
vector<int> a, b;

int cal(int P) {
	if (P == -1) {
		if (a[0] + ta <= b.back()) return 0;
		cout << -1 << endl;
		exit(0);
	}
	// for (auto it : a) if (it + ta <= b[P]) totalA++;
	int ret = 1e9; int it = 0;
	int curAns = P + 1;
	ret = min(curAns, ret);
	// cout << a[0] + ta << sp << b[0] << endl;
	loop(i, 0, P) {
		// open i
		curAns--;
		while (it < a.size() && a[it] + ta <= b[i]) {
			curAns++;
			it++;
		}
		// cout << i << sp << curAns << sp << it << endl;
		ret = min(curAns, ret);
	}
	return ret;
}

signed main() {
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	cin >> n >> m >> ta >> tb >> cancle;
	loop(i, 1, n) {
		int t; cin >> t; a.push_back(t);
	}
	loop(i, 1, m) {
		int t; cin >> t; b.push_back(t);
	}
	int l = -1, r = b.size() - 1; // time of last flight from B . ans must +tb
	while (l != r) {
		int mid = (l + r + 1) / 2;
		if (cal(mid) <= cancle) l = mid;
		else r = mid - 1;
	}
	if (l == (b.size() - 1)) cout << -1 << endl;
	else cout << b[l + 1] + tb << endl;
}