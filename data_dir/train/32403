#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<pii, int> para;
const int inf = 1e9 + 7;
const int maxN = 1e6 + 5;

int n, gas, len, tim;
int cost[maxN], fuel[maxN], stat[maxN];

bool ok(int fuel) {
	//cout<<fuel<<endl;
	int ans = 0;
	RI(i, gas + 1) {
		int diff = stat[i] - stat[i - 1];
		if (diff > fuel)
			return false;
		ans += 2 * (diff) - min((fuel - diff), diff);
		//cout<<diff<<" "<<ans<<endl;
	}
	return ans <= tim;
}

int bins(int high) {
	int l = 1;
	int r = high;
	while (l < r) {
		int mid = (l + r) / 2;
		if (ok(mid))
			r = mid;
		else
			l = mid + 1;
	}
	//cout<<"Bins : " << l<< " "<< ok(l) << endl;
	if (ok(l)) return l;
	return inf;
}

int main() {
	scanf("%d%d%d%d",&n, &gas, &len, &tim);
	int maxim = 0;
	REP(i, n) {
		scanf("%d%d",&cost[i], &fuel[i]);
		maxi(maxim, fuel[i]);
	}
	stat[0] = 0;
	RI(i, gas) {
		scanf("%d",&stat[i]);
	}
	stat[gas + 1] = len;
	sort(stat, stat + gas + 2);
	int x = bins(maxim);
	int ans = inf;
	REP(i, n) {
		if (x <= fuel[i])
			mini(ans, cost[i]);
	}
	if (ans == inf) printf("-1");
	else
	printf("%d",ans);
	return 0;
}
