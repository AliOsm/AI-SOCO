#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long long long 

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << endl;
        //use cerr if u want to display at the bottom
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define trace(...)
#endif

typedef trie<string,null_type,trie_string_access_traits<>,pat_trie_tag,trie_prefix_search_node_update> pref_trie;
typedef tree<long int,null_type,less<long int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;
typedef cc_hash_table<long int,long int, hash<long int>, equal_to<long int>, direct_mask_range_hashing<long int>, 
hash_standard_resize_policy<hash_exponential_size_policy<>, hash_load_check_resize_trigger<true>, true>> ht;

#define N 5001
#define mod 998244353
long int factorial[N+1];
long int inv[N+1];
 
long int powMod(long int x,long int n){
  long int result = 1;
  while(n > 0){
    if(n % 2 == 1)
      result=(result*x)%mod;

      x=(x*x)%mod;
      n=n/2;
  }
  return result;
}
 
void fact(){
  
  factorial[0]=1;
  
  for(long int i = 1;i <= N; i++)
    factorial[i]=(factorial[i-1] * i) % mod;
 
  inv[N] = powMod(factorial[N],mod-2);
  for(long int i = N - 1 ;i >= 0; i--)
      inv[i] = ( inv[i+1] * (i+1) ) % mod;

}
 
long int ncr(long int n,long int r){
  
  long int up = factorial[n];
  long int down = (inv[n - r] * inv[r]) % mod;
  long int ans=(up * down) % mod;
  return ans;
}

long int solve(long int a,long int b){
  long int ans = 0;
  for(long int i = 0; i <= min(a,b); i++){
    ans = (ans + (ncr(a,i) * ncr(b,i)) % mod * factorial[i]) % mod;
  }
  
  return ans;
}

int main(){
   IOS;
 //    #ifndef ONLINE_JUDGE
 //        freopen("in.txt",  "r",  stdin);
 //        freopen("out.txt", "w", stdout);
 //    #endif
    fact();

    long int a,b,c;
    cin>>a>>b>>c;
    cout<<(((solve(a,b) * solve(b,c)) % mod) * solve(a,c)) % mod;

   return 0;
}