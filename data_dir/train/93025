#include <bits/stdc++.h>
using namespace std;
mt19937 rng(std::chrono::system_clock::now().time_since_epoch().count());
const int N = 2e5;
int n,m,p[N],w[N],in[N],out[N],sz[N],rem,p1[N],s;
long long cost[N];
bool vis[N];
vector<int>g[N],v[N],comps[N];
int get(int u){return u == p[u] ? u : p[u] = get(p[u]);}
void dfs(int u,int p1){
	in[u] = out[u] = rem++;
	for(auto i : g[u]){
		if(in[i] != -1 && i != p1)out[u] = min(out[u],in[i]);
		else if(in[i] == -1){
			dfs(i,u);
			if(out[i] <= in[u]){
				sz[get(u)]+=sz[get(i)];
				p[get(i)] = get(u);
			}
			out[u] = min(out[u],out[i]);
		}
	}
}
long long find1(int u){
	vis[u] = 1;
	long long mx = 0;
	for(auto i : v[u])
		if(!vis[i]){
			long long temp = find1(i);
			mx = max(mx,temp);
		}
	return mx + cost[u];
}
int main(){
// 	freopen("input.txt","r",stdin);
	scanf("%d%d",&n,&m);
	memset(in,-1,sizeof in);
	memset(vis,0,sizeof vis);
	for(int i = 0;i < n;i++)p[i] = i,sz[i] = 1;
	for(int i = 0;i < n;i++)scanf("%d",w + i);
	for(int i = 0,a,b;i < m;i++){
		scanf("%d%d",&a,&b);
		g[--a].push_back(--b);
		g[b].push_back(a);
	}
	scanf("%d",&s);
	dfs(s - 1,-1);
	vector<int>temp;
	for(int i = 0;i < n;i++)
		if(sz[i] > 1)temp.push_back(i);
	if(get(s - 1) == s -1 )temp.push_back(s - 1);
	for(int i = 0;i + 1 < temp.size();i++)
		g[temp[i]].push_back(temp[i + 1]),
		g[temp[i + 1]].push_back(temp[i]);
	memset(in,-1,sizeof in);
	memset(vis,0,sizeof vis);
	for(int i = 0;i < n;i++)p[i] = i,sz[i] = 1;
	dfs(s - 1,-1);
	for(int i = 0;i < n;i++)cost[get(i)]+=w[i];
	for(int i = 0;i < n;i++)
		for(auto j : g[i])
			if(get(j) != get(i))
				v[get(j)].push_back(get(i)),
				v[get(i)].push_back(get(j));
	memset(vis,0,sizeof vis);
	printf("%lld\n",find1(get(s - 1)));
}