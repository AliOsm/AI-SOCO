#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
#include <ext/pb_ds/detail/standard_policies.hpp>

using namespace __gnu_pbds;
using namespace std;

typedef long long int lli;
typedef pair<int,int> pii;
typedef vector<int> vec;

#define ones(x) __builtin_popcount(x)
#define onesl(x) __builtin_popcountl(x)
#define onesll(x) __builtin_popcountll(x)

#define pb push_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define mod 1000000007

int Set(int N,int pos){return N=N | (1<<pos);}
int reset(int N,int pos){return N= N & ~(1<<pos);}
bool check(int N,int pos){return (bool)(N & (1<<pos));}

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

/**
    ordered_set X;

    X.insert(1);
    X.insert(2);
    X.insert(4);
    X.insert(8);
    X.insert(16);

    cout<<*X.find_by_order(1)<<endl; // 2
    cout<<*X.find_by_order(2)<<endl; // 4
    cout<<*X.find_by_order(4)<<endl; // 16
    cout<<(end(X)==X.find_by_order(6))<<endl; // true

    cout<<X.order_of_key(-5)<<endl;  // 0
    cout<<X.order_of_key(1)<<endl;   // 0
    cout<<X.order_of_key(3)<<endl;   // 2
    cout<<X.order_of_key(4)<<endl;   // 2
    cout<<X.order_of_key(400)<<endl; // 5
*/
struct state{

    int remainder , sum;
    string num;

    state(int r , int s , string n){
        remainder = r;
        sum = s;
        num = n;
    }
};

bool vis[5001][5001];

int main()
{
    /// oi shalarputera,
            ///ei problem e dp diya korle ki korti???
            /// dp[pos][sum][remainder] ...ei pos max koto hoibo janos ?? janos na...taile baler dp bad
            ///0->9 order e nile minimize kora niya chinta nai , 1st time pailei oitai ans
            /// BAL...ei easy idea contest e mathay ase na ken tor??....Bal codaiso sara jibon??

    int d,s;
    scn2(d,s);

    queue<state>Q;
    Q.push(state(0,0,""));
    vis[0][0] = true;

    while(Q.empty() == false){

        state now = Q.front();
        Q.pop();

        if(now.remainder == 0 && now.sum == s){
            cout<<now.num;
            return 0;
        }

        for(int i=0; i<=9; i++){

            int rem = (now.remainder*10 + i)%d;
            int sum = now.sum + i;

            if(sum<=s && vis[rem][sum] == false){ ///VOXOD sum<=s check kor
                vis[rem][sum] = true;
                char c = (char)(i+'0');
                Q.push(state(rem,sum,now.num + c));
            }
        }
    }

    cout<<-1;

    return 0;
}
