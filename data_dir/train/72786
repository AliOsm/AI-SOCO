#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())
typedef long long LL;

const int N = 600005;
int a[N][2], t[N];
int m = 0, n, w;
int srt[N];
int orig[N];
int c[N];
char cc[N];

bool cmp(int x, int y) {
  return a[x][0]+a[x][1] < a[y][0]+a[y][1];
}

int main(void) {
  scanf("%d%d", &n, &w);
  for(int i=0;i<n;i++) {
    int x, y;
    scanf("%d%d", &x, &y);
    if(y-x >= x) {
      a[m][0] = a[m][1] = x; orig[m] = i; t[m++] = 1;
      a[m][0] = a[m][1] = y-x; orig[m] = i; t[m++] = 1;
    } else {
      a[m][0] = x;
      a[m][1] = y-x;
      orig[m] = i;
      t[m++] = 2;
    }
  }
  for(int i=0;i<m;i++) srt[i] = i;
  sort(srt, srt+m, cmp);
  LL ans = 0;
  for(int ii=0;ii<m && w>0;ii++) {
    int i = srt[ii];
    if(t[i] == 1) {
      ans += a[i][0];
      c[orig[i]]++;
      w--;
      continue;
    }
    if(w>1) {
      ans += a[i][0] + a[i][1];
      c[orig[i]]+=2;
      w-=2;
      continue;
    }
    int sml = a[i][0], lrg = 0, smll = orig[i], lrgg = -1;
    for(int jj=ii+1;jj<m;jj++) if(sml > a[srt[jj]][0]) {
      sml = a[srt[jj]][0];
      smll = orig[srt[jj]];
    }
    for(int jj=ii-1;jj>=0;jj--) {
      int v = (t[srt[jj]]==2? a[srt[jj]][1] : a[srt[jj]][0]);
      if(v > lrg) {
        lrgg = orig[srt[jj]];
        lrg = v;
      }
    }
    if(sml < a[i][0]+a[i][1]-lrg) {
      ans += sml;
      c[smll]++;
    } else {
      ans += a[i][0]+a[i][1]-lrg;
      c[lrgg]--;
      c[orig[i]] += 2;
    }
    w=0;
  }
  printf("%I64d\n", ans);
  for(int i=0;i<n;i++) cc[i] = '0' + c[i];
  puts(cc);
  return 0;
}
