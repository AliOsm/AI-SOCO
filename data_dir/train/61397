#include <bits/stdc++.h>
////#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
#define ook order_of_key
#define fbk find_by_order
#define pb push_back
#define mp make_pair
#define intl long long
#define maxn 100005
#define ff first
#define ss second
#define bug printf ("bug\n")
#define sz(a) ((int)a.size())
#define set0(a) memset ((a), 0 , sizeof(a))
#define set1(a) memset((a),-1,sizeof (a))
#define si(a) scanf("%d" , &a)
#define sl(a) scanf("%lld" , &a)
#define sii(a,b) scanf("%d %d" , &a , &b)
#define sll(a,b) scanf("%lld %lld" , &a , &b)
#define FOR(i,a,b) for(intl i = (a) ; i <= (b) ; i++)
#define IN freopen("in.txt" , "r" , stdin)
#define OUT freopen("output2.txt" , "w" , stdout)
#define whats(x) printf ("x : %d\n" , x)


using namespace std ;
//using namespace __gnu_pbds;

typedef pair <int,int> pii ;
typedef pair <intl,intl> pll ;
//typedef tree < pii, null_type ,less<pii>,rb_tree_tag,tree_order_statistics_node_update > ordered_set;

/***************************************************************************************************/


const int N = 1e6 + 5 , md = 1e9 + 7 ;
char str[2005][2005] ;
int  n , m , k ;

int main () {
    cin >> n >> m >> k ;
    for (int i = 0; i < n ; i++) scanf ("%s" , str[i]) ;
    if (k == 1) {
        int cnt= 0 ;
        for (int i = 0 ; i < n ; i++) {
            for (int j = 0 ; j < m ; j++) {
                cnt += (str[i][j] == '.') ;
            }
        }
        cout << cnt << endl;
    }
    else {
        int cnt = 0 ;
        for (int i = 0 ; i < n  ; i++) {
            int x = 0 ;
            for (int j = 0 ; j < m ; j++) {
                if (str[i][j] == '.') {
                    x++ ;
                    if (x >= k) cnt++ ;
                }
                else {
                    x = 0 ;
                }
            }
        }

        for (int i = 0 ; i < m ; i++) {
            int x = 0 ;
            for (int j = 0 ; j < n ; j++) {
                if (str[j][i] == '.') {
                    x++ ;
                    if (x >= k) cnt++ ;
                }
                else {
                    x = 0 ;
                }
            }
        }

        cout << cnt << endl ;
    }
}

