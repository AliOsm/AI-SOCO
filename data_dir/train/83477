#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define clr(i, j)   memset(i, j, sizeof i)
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull ;
typedef pair<int,int>   pii;
int n, m, dp[100001], vis[100001][2], s;
vector<int> adj[100001];
stack<int> st;
int dfs(int i, int cur)
{
    vis[i][cur] = 1;
    int ret = 0;
    //cout << i+1 << " " << cur << endl;
    if(adj[i].size() == 0 && cur == 0)
    {
        cout << "Win" << endl;
        st.push(i+1);
        return 1;
    }
    for(int j=0; j<adj[i].size(); j++)
    {
        int node = adj[i][j];
        if(!vis[node][!cur])
        {
            ret = dfs(node, !cur);
            if(ret == 1)
            {
                st.push(i+1);
                return 1;
            }
        }
    }
    vis[i][cur] = 2;
    return 0;
}
bool cycle(int v, bool turn)
{
	if(vis[v][0])
		return vis[v][0] == 1;

	vis[v][0] = 1;

	for(int i=0; i<adj[v].size(); i++)
	{
		if (cycle(adj[v][i], !turn))
			return true;
	}

	vis[v][0] = 2;
	return false;
}
int main()
{
    cin >> n >> m;
    for(int i=0; i<n; i++)
    {
        int x;
        cin >> x;
        for(int j=0; j<x; j++)
        {
            int y;
            cin >> y;
            adj[i].pb(y-1);
        }
    }
    cin >> s;
    //cout << endl;
    //cout << cycle(s-1) << endl << "..........\n";
    if(dfs(s-1, 1))
    {
        while(st.size())
            cout << st.top() << " ", st.pop();
    }
    else
    {
        clr(vis, 0);
        if(cycle(s-1, 0))
            cout << "Draw" << endl;
        else
            cout << "Lose" << endl;
    }
}
