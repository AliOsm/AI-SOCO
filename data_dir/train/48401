#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cmath>
#include <vector>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define pb push_back
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, N) memset(obj, val, sizeof(obj[0])*N)
#define ri(x) scanf("%d",&x)
#define rii(x,y) ri(x), ri(y)

typedef long long ll;
typedef vector<int> vi;

struct edge{
	int to, cost;
};

const int MAXN = 1e5+5;

int N, M, K;
bool k[MAXN];
vector<edge> G[MAXN];

int main(){
	rii(N, M); ri(K);
	FOR(i,0,M){
		int u, v, cost; rii(u,v); ri(cost); u--; v--;
		G[u].pb({v,cost});
		G[v].pb({u,cost});
	}
	FOR(i,0,K){
		int v; ri(v); v--;
		k[v] = true;
	}
	int ans=-1;
	FOR(v,0,N) if(k[v]){
		FOR(i,0,G[v].size()){
			int u=G[v][i].to, cost=G[v][i].cost;
			if(!k[u] && (ans==-1 || ans > cost)) ans = cost;
		}
	}
	printf("%d\n",ans);
}
