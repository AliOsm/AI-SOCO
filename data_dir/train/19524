#include <bits/stdc++.h>

using namespace std;

const long long maxi=1e6;

int bit[maxi+5];
map <long long, int> mp;

int  calc(long long x)
{
    int  u=0;
    for (long long i=x;i>0;i-=(i&(-i)))
     u=max(u, bit[i]);
  return u;
}

void update(long long x, int y)
{
   for (long long i=x;i<maxi;i+=(i&(-i)))
    bit[i]=max(bit[i],y);
}

int n,dp[1000000],d[maxi];
long long x,w;
pair<long long, long long> a[1000000];
int main()
{
    scanf("%d",&n);

    int q=0;
    for (int i=1;i<=n;i++)
    {
        scanf("%I64d%I64d",&x,&w);
        a[i]=make_pair(x,w);
        q++;
        d[q]=x-w;
        q++;
        d[q]=x+w;
    }
   sort(d+1,d+q+1);
int p=1;
   for (int i=1;i<=q;i++)
    if (i==1 || d[i]!=d[i-1])
   {
       mp[d[i]]=p;
       p++;
   }
  sort(a+1,a+n+1);


 int ans=1;
  for (int i=1;i<=n;i++)
  {
     dp[i]=calc(mp[a[i].first-a[i].second])+1;
     update(mp[a[i].first+a[i].second],dp[i]);
    // printf("%d ",dp[i]);
  }
//  printf("\n");
  for (int i=1;i<=n;i++)
    ans=max(ans,dp[i]);
   printf("%d\n",ans);
    return 0;
}
