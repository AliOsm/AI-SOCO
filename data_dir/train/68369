#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const int N = 100001;
int n, m, wish[N], to[N], lvl[N], par[N];
vector<int> sons[N];

void dfs(int u, int p, int l) {
	lvl[u] = l, to[u] = p;
	for (int v : sons[u])
		if (v != par[u])
			dfs(v, wish[u] == wish[v] ? p : v, l + 1);
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	fastInOut();
	memset(par, -1, sizeof par), wish[0] = -1;
	int u, v;
	cin >> n >> m;
	for (int i = 0; i < m; ++i) {
		cin >> u >> v;
		par[v] = u, sons[u].push_back(v);
	}
	for (int i = 1; i <= n; ++i)
		cin >> wish[i];
	for (int i = 1; i <= n; ++i)
		if (par[i] == -1)
			sons[0].push_back(i);
	dfs(0, 0, 0);
	for (int i = 1; i <= n; ++i)
		if (wish[i] != to[i]) {
			cout << "-1\n";
			return 0;
		}
	set<pair<int, int> > ret;
	for (int i = 1; i <= n; ++i)
		ret.insert(make_pair(-lvl[wish[i]], wish[i]));
	cout << ret.size() << "\n";
	for (pair<int, int> cur : ret)
		cout << cur.second << "\n";
	return 0;
}

void fastInOut() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
