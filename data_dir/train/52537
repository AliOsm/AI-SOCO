#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z} }

int a[401][401], b[401][401];

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n, m;
	cin >> n >> m;
	erep(i, 1, n)
	{
		erep(j, 1, n)
			a[i][j] = 1e5;
		a[i][i] = 0;
	}

	vii edge;
	while (m--)
	{
		int u, v;
		cin >> u >> v;
		edge.push_back({u, v});
		a[u][v] = a[v][u] = 1;
	}
	erep(k, 1, n)
		erep(i, 1, n)
			erep(j, 1, n)
				a[i][j] = min(a[i][j], a[i][k] + a[k][j]);

	erep(i, 1, n)
	{
		erep(j, 1, n)
		{
			b[i][j] = 1;
		}
		b[i][i] = 0;
	}

	for(auto i : edge) b[i.first][i.second] = b[i.second][i.first] = 1e5;

	erep(k, 1, n)
		erep(i, 1, n)
			erep(j, 1, n)
			{
				if ((b[i][k] + b[k][j] < b[i][j]) && (b[i][k] + b[k][j] != a[i][j]))
					b[i][j] = min(b[i][j], b[i][k] + b[k][j]);
			}

//	erep(i, 1, n)
//	{
//		erep(j, 1, n) cout << b[i][j] << " ";
//		cout << endl;
//	}

	cout << (max(b[1][n], a[1][n]) == 1e5 ? -1 : max(b[1][n], a[1][n]));

	return 0;
}
