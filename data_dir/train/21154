#include <bits/stdc++.h>
using namespace std;
typedef long long Long;

const Long MX = 3001;
const Long MOD = 998244353;

Long memo[MX][MX];
bool used[MX][MX];
string S, T;
Long n, m;

Long dp(Long pos, Long ini){
	if(ini == 0 && ini + pos >= m) return n - pos + 1;
	if(used[pos][ini]) return memo[pos][ini];
	used[pos][ini] = true;
	Long ans = 0;
	if((m <= ini + pos && ini + pos < n) || (ini + pos < m && S[pos] == T[ini + pos])){
		ans += dp(pos + 1,ini);
	}
	if((0 <= ini - 1 && ini - 1 < m && S[pos] == T[ini - 1]) || (ini - 1 >= m)){
		ans += dp(pos + 1,ini - 1);
	}
	ans %= MOD;
	memo[pos][ini] = ans;
	return ans;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cout.precision(10);
	cout << fixed;

	cin >> S >> T;
	n = S.size();
	m = T.size();
	
	Long ans = 0;
	Long aux = 0;
	for(Long i = 0; i < n; i++){
		if(i < m){
			if(S[0] == T[i]){
				aux = dp(1,i);
			}else{
				aux = 0;
			}
		}else{
			aux = dp(1,i);
		}
		ans += aux + aux;
		ans %= MOD;
	}
	cout << ans << "\n";
	return 0;
}
