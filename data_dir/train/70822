#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const long double pi = acos(-1);
const double PI = acos(-1.);

#define MOD 1000000007

const int N = 2e5 + 5;
const int K = 2e2 + 2;
const int Ai = 2e5 + 5;
const int LOGN = 30;

int a[N];
int pre[N];
vector<pii> hero;
int m;

bool ok(int mid, int x) {
    if(hero[mid].first >= x)
        return true;
    return false;
}

int bs(int x) {
    int st = 0, en = m;

    while(st < en) {
        int mid = (st + en) / 2;

        if(ok(mid, x))
            st = mid + 1;
        else
            en = mid;
    }

    return --st;
}

int main() {
    ios_base::sync_with_stdio(false);

    int T; cin >> T;

    while(T--) {
        hero.clear();
        int n; cin >> n;

        vector<int> mons;
        for(int i = 0; i < n; i++) {
            int x; cin >> x;
            mons.push_back(x);
        }

        cin >> m;

        for(int i = 0; i < m; i++) {
            int p, s; cin >> p >> s;
            hero.push_back(pii(s, p));
        }

        sort(hero.rbegin(), hero.rend());

        pre[0] = hero[0].second;
        for(int i = 1; i < m; i++)
            pre[i] = max(pre[i - 1], hero[i].second);

        int cnt = 0;
        int mx = 0;
        int res = 0;

        bool b = true;
        for(int i = 0; i < n; i++) {
            if(!b) break;

            cnt++;
            mx = max(mx, mons[i]);

            auto it = bs(cnt);

//            cout << i+1 << ": " << it+1 << " " << cnt << " " << hero[it].first << " " << hero[it].second << "\n";

            if(it == -1 || it == m || pre[it] < mx) {
                if(cnt == 1) {
                    b = false;
                    break;
                }

                cnt = 0;
                mx = 0;
                res++;
                i--;
                continue;
            }
        }

        if(cnt != 0)
            res++;

        if(!b)
            res = -1;

        cout << res << '\n';
    }

    return 0;
}

