#include<bits/stdc++.h>
using namespace std;

#define ll long long

vector<vector<int>> lk,group,lunguage;
int n,m,k,lan,ans=0,flag=0;
vector<bool> visit;

void BFS(ll n){

    queue<ll> Q;

    Q.push(n);

    visit[n]=1;


    while(!Q.empty())
    {
        ll p=Q.front();
        Q.pop();

        for(ll i=0;i<group[p].size();i++)
        {
            ll q=group[p][i];
            if(visit[q]==0)
            {
                Q.push(q);
                visit[q]=1;
            }
        }
    }

}

int main()
{
    cin>>n>>m;
    
    group.assign(n+1,vector<int>());
    lunguage.assign(n+1,vector<int>(m+1,0));
    
    for(int i=1;i<=n;i++)
    {
        cin>>k;
        if(k>0)
        {
            flag=1;
        }
        for(int j=1;j<=k;j++)
        {
            cin>>lan;
            lunguage[i][lan]=1;
        }
    }
    
    int j;
    for(int i=1;i<=m;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(lunguage[j][i]==1)
            {
                break;
            }
        }
        for(int k=j+1;k<=n;k++)
        {
            if(lunguage[k][i]==1)
            {
                group[j].push_back(k);
                group[k].push_back(j);
            }
        }
    }
    
    visit.assign(n+1,0);
    
    for(int i=1;i<=n;i++)
    {
        if(!visit[i])
        {
            BFS(i);
            ans++;
        }
    }
    
    if(flag)
    {
        cout<<ans-1;
    }
    else
    {
        cout<<n;
    }
    
}