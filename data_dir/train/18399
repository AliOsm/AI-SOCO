#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef double rl;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define pb push_back
#define mp make_pair

#if 1
#define dbg(x) cerr << #x << ": " << (x) << endl;
#else
#define dbg(x)
#endif // 1

int n;
const int MX=2*100*1000+99;
string s[MX];

bool visited[MX];
int get_id_str(int idx){return idx;}
int get_id_char(int idx) {return n+idx;}
const int ALPHA=26;
vector<int> E[MX];

void dfs(int curr)
{
    if(visited[curr]) return;
    visited[curr]=true;
    for(int next: E[curr]) dfs(next);
}

int solve()
{
    for(int i=0; i<n; i++)
    {
        int cnt[ALPHA]={0};
        for(char c: s[i]) cnt[c-'a']++;
        for(int c=0; c<ALPHA; c++)
        {
            if(cnt[c]==0) continue;
            int a=get_id_str(i), b=get_id_char(c);
            E[a].pb(b);
            E[b].pb(a);
        }
    }

    int result=0;
    for(int i=0; i<n; i++)
    {
        if(!visited[i])
        {
            result++;
            dfs(i);
        }
    }
    return result;
}

int main()
{
    //freopen("D.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //ios_base::sync_with_stdio(false);
    //cin.tie(nullptr); cout.tie(nullptr);
    cin >> n;
    for(int i=0; i<n; i++) cin >> s[i];
    cout << solve();
    return 0;
}
