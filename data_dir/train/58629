#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;

#define FOR(i,a,b) 	for(ll i=a;i<b;++i)
#define RFOR(i,a,b) 	for(ll i=a;i>=b;--i)
#define ln 		"\n"
#define mp make_pair
#define pb push_back
#define sz(a)	ll(a.size())
#define F first
#define S second
#define all(c)	c.begin(),c.end()
#define trace(c,x) for(auto &x:c)
#define pii pair<ll,ll>
typedef long long ll;
typedef long double ld;
typedef	priority_queue<pii,std::vector<pii>,greater<pii> > revpr;

typedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update> pbds;
// ordered_set X
//K-th smallest
//*X.find_by_order(k-1)
//NO OF ELEMENTS < A
//X.order_of_key(A)

const ll L=1e6+7;
ll a[L];
map<ll,ll> counter;
ll fastexpo(ll x,ll y,ll m)
{
	ll temp=1;
	while(y>0)
	{
		if(y&1)temp = ((temp%m)*(x%m))%m;
		x = ((x%m)*(x%m))%m;
		y>>=1;
	}return temp;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll n,k;
	cin >> n >> k;
	FOR(i,0,n)
	{
		cin >> a[i];
		counter[a[i]]++;
	}
	ll cur, tmp;std::vector<pii> v;
	trace(counter, x)
	{
		v.pb(mp(x.S,x.F));
	}
	sort(all(v));
	k = (n+1)/2;
	RFOR(i,sz(v)-1,0)
	{
		cur = v[i].F;
		// cout<<v[i].F<<" "<<v[i].S<<endl;
		tmp = min(k,cur/2);
		v[i].F -= (tmp*2);
		counter[v[i].S] = v[i].F;
		k -= tmp;
	}
	ll ans = 0;
	// ci
	trace(counter, x)
	{
		ans += x.S;
		// cout<<x.F<<" "<<x.S<<endl;
	}
	ans -= (k);
	cout<<n-ans;
	return 0;
}