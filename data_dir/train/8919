#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define scanl(a) scanf("%lld",&a)
#define scanii(a,b) scanf("%d%d",&a,&b)
#define scaniii(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scanll(a,b) scanf("%lld%lld",&a,&b)
#define scanlll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scani(a) scanf("%d",&a)
#define clr(a) memset(a,0,sizeof(a))
#define clr_(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define siz 1001
#define pii pair<int,int>
#define sqr(a) a*a
#define eps 1e-9
#define inf 1e9
#define pi acos(-1.0)
#define x first
#define y second
#define INF 1e18
#define dbug(x) cout<<x<<" "
ll power(ll x,ll n)
{
    ///complexity O(logn)
    if(n==0)return 1;
    else if(n%2==0)
    {
        ll y=power(x,n/2);
        return y*y;
    }
    else
        return x*power(x,n-1);
}
int strTOint(string s)
{
    stringstream ss;
    int x;
    ss<<s;
    ss>>x;
    return x;
}
double geo_dist(int a,int b,int c,int d)
{
    double dd=(double)(a-c)*(a-c)+(b-d)*(b-d);
    double r=sqrt(dd)+eps;
    return r;
}
ll bigmod(ll a,ll p,ll m)
{
    if(p==0)return 1%m;
    if(p%2==0)
    {
        ll y=bigmod(a,p/2,m);
        return (y*y)%m;
    }
    else
    {
        return (a*bigmod(a,p-1,m))%m;
    }
}
ll x,y,d,g;
void ext_gcd(ll a,ll b)
{
    if(b==0)
    {
        x=1;y=0;d=a;return;
    }
    ext_gcd(b,a%b);
    ll x1=y;
    ll y1=x-(a/b)*y;
    x=x1;
    y=y1;
}
ll modInv (ll a,ll m ) {

    ///if m prime
    ///ll x = bigmod( a, m - 2, m ); ///(ax)%m = 1
   /// i m not prime;
    ext_gcd( a, m);
    ///Process x so that it is between 0 and m-1
    x %= m;
    if ( x < 0 ) x += m;
    return x;
}
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
///FOR KNIGHT MOVE
///int fx[]={2,1,-1,-2,-2,-1,1,2};
///int fy[]={1,2,2,1,-1,-2,-2,-1};
map<string,int>mp;
vector<pii>adj[1000];
vector<int>v;
int ara[100000];
int main()
{
    ///freopen("in.txt","r",stdin);
    ///freopen("out.txt","w",stdout);
    int n;
    scani(n);
    int sum=0;
    for(int i=0;i<n;i++)
    {
        scani(ara[i]);
        sum+=ara[i];
    }
    int avg=sum/n;
    int rem=sum%n;
    int need[100001];
    sort(ara,ara+n);
    for(int i=0;i<n;i++)
    {
        need[i]=avg;
    }
    for(int i=n-1;i>=0;i--)
    {
        if(rem==0)break;
        need[i]++;
        rem--;
    }
    int choto=0;
    for(int i=0;i<n;i++)
    {
        if(ara[i]>need[i])choto+=(ara[i]-need[i]);
    }

    printf("%d\n",choto);

    return 0;
}
