#include <iostream>
#include <bits/stdc++.h>

using namespace std;
int dp[5010][2550][2], n, a[5010];
const int Inf = 1e9;

int Rec(int i, int build, bool changed)
{

    if(i >= n)   return (build == 0 ? 0 : Inf);

    if(dp[i][build][changed] != -1)  return dp[i][build][changed];

    int Res = Inf , e = a[i - 1];
    if(changed)  e = a[i - 2] - 1;
    Res = min(Res, Rec(i + 1, build, false));
    if(i == 0)
    {
        if(a[i] > a[i + 1] && build) Res = min(Res, Rec(i + 2, build - 1, false));
        if(a[i] <= a[i + 1] && build)  Res = min(Res, (a[i + 1] - a[i] + 1) + Rec(i + 2, build - 1, true));
    }
    if(i > 0 && i < n - 1)
    {
        if(a[i] <= a[i + 1] && a[i] <= e && build)  Res = min(Res, (a[i+1] -a[i] + 1) + (e - a[i] + 1) + Rec(i + 2, build - 1, true));
        else if(a[i] <= a[i + 1] && build)  Res = min(Res, (a[i + 1] - a[i] + 1) + Rec(i + 2, build - 1, true));
        else if(a[i] <= e && build)   Res = min(Res, (e -a[i] + 1) + Rec(i + 2, build - 1, false));
        else if(a[i] > e  && a[i] > a[i + 1] && build)  Res = min(Res, Rec(i + 2, build - 1, false));
    }
    if(i == n - 1)
    {
        if(a[i] > e && build)  Res = min(Res , Rec(i + 1 , build - 1 , false));
        if(a[i] <= e && build)  Res = min(Res , (e - a[i] + 1) + Rec(i + 1 , build - 1 , false));
    }
    return dp[i][build][changed] = Res;

}

int main()
{
    memset(dp, -1, sizeof(dp));
    cin >> n;
    for(int i=0; i<n; i++)  cin >> a[i];
    if(n == 1)  return cout << 0 , 0;
    for(int i=1; i<=(n + 1)/2; i++)  cout << Rec(0, i, 0) << " ";
    return 0;
}
