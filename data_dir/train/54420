#include <cstdio>
#include <algorithm>
#include <string>

char buf[1001000];
int y[1000100];

int main() {
	int n, m;
	scanf("%d%d%s", &n, &m, buf);
	std::string p(buf);
	int len = p.length();
	for (int i = 0; i < m; ++i) {
		scanf("%d", y + i);
		--y[i];
	}
	std::string s(n, '!');
	int cnt = n;
	for (int last = -1, i = 0; i < m; ++i) {
		int j = std::max(y[i], last + 1);
		for (; j < y[i] + len; ++j) {
			s[j] = p[j - y[i]];
			--cnt;
			last = j;
		}
	}
	int * z = new int[n + 1 + len];
	z[0] = 0;
	p += "#" + s;
	for (int l = 0, r = 0, i = 1; i < len + 1 + n; ++i) {
		z[i] = 0;
		if (i <= r) {
			z[i] = std::min(z[i - l], r - i + 1);
		}
		while (i + z[i] < len + 1 + n && p[i + z[i]] == p[z[i]]) {
			++z[i];
		}
		if (i + z[i] - 1 > r) {
			l = i;
			r = i + z[i] - 1;
		}
	}
	z += len + 1;
	int ans = 1;
	for (int i = 0; i < m; ++i) {
		if (z[y[i]] != len) {
			ans = 0;
		}
	}
	while (cnt--) {
		ans = 1LL * ans * 26 % 1000000007;
	}
	printf("%d\n", ans);
}
