#include <bits/stdc++.h>
 
using namespace std;
 
typedef double db;
typedef long long ll;
typedef pair<db, db> pdd;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef unsigned long long ull;
 
#define F          first
#define S          second
#define pnl        printf("\n")
#define sz(x)      (int)x.size()
#define sf(x)      scanf("%d",&x)
#define pf(x)      printf("%d\n",x)
#define all(x)     x.begin(),x.end()
#define rall(x)    x.rbegin(),x.rend()
#define rep(i, n)  for(int i = 0; i < n; ++i)
 
const db eps = 1e-9;
const db pi = acos(-1);
const int INF = 0x3f3f3f3f;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1000 * 1000 * 1000 + 7;
 
int n, a[404];
int frq[1010];
int mat[22][22];

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n * n; ++i) 
		scanf("%d", &a[i]), frq[a[i]]++;
	for (int i = 0; i < n / 2; ++i)
			for (int j = 0; j < n / 2; ++j) {
				int x = -1;
				for (int k = 0; k < n * n; ++k)
					if (frq[a[k]] >= 4) x = a[k];
				if (x == -1) return !printf("NO\n");
				mat[i][j] = mat[i][n - j - 1] = x;
				mat[n - i - 1][j] = mat[n - i - 1][n - j - 1] = x;
				frq[x] -= 4;
			}

	if (n % 2 == 1) {
		int oddCnt = 0;
		for (int i = 1; i <= 1000; ++i) {
			if (frq[i] % 2) {
				mat[n / 2][n / 2] = i;
				++oddCnt;
				frq[i]--;
			}
		}
		if (oddCnt > 1) return !printf("NO\n");
		for (int i = 0; i < n / 2; ++i) {
			int x = -1;
			for (int j = 1; j <= 1000; ++j)
				if (frq[j]) x = j;
			mat[i][n / 2] = mat[n - i - 1][n / 2] = x;
			frq[x] -= 2;
		}
		for (int i = 0; i < n / 2; ++i) {
			int x = -1;
			for (int j = 1; j <= 1000; ++j)
				if (frq[j]) x = j;
			mat[n / 2][i] = mat[n / 2][n - i - 1] = x;
			frq[x] -= 2;
		}
		
	}
	printf("YES\n");
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
			printf("%d%c", mat[i][j], " \n"[j==n-1]);
	return 0;
}







