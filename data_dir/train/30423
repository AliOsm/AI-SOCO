#include <bits/stdc++.h>
#include <ctime>

using namespace std;

#define space ' '
#define enter "\n"
#define fi first
#define se second
#define mp make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef set <int> si;
typedef map <int, int> mii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;
typedef vector <pii> vii;

template <typename T>
T sqr (T x) {
	return x * x;
}

template <typename T>
T gcd (T a, T b) {
	return b ? gcd(b, a % b) : a;
}

template <class T>
T chmin (T & x, const T & y) {
	if (y < x)
		return x = y;
	return x;
}

template <class T>
T chmax (T & x, const T & y) {
	if (x < y)
		return x = y;
	return x;
}


template <class P, class Q>
ostream & operator << (ostream & os, const pair <P, Q> & p) {
	return os << '(' << p.fi << ", " << p.se << ')';
}


template <class T>
ostream & operator << (ostream & os, const vector <T> & v) {
	os << '{';
	bool was = false;
	for (const T & x : v) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << '}';
	return os;
}

template <class T>
ostream & operator << (ostream & os, const set <T> & v) {
	os << '[';
	bool was = false;
	for (const T & x : v) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << ']';
	return os;
}

template <class P, class Q>
ostream & operator << (ostream & os, const map <P, Q> & m) {
	os << '<';
	bool was = false;
	for (const auto & x : m) {
		if (was)
			os << ", ";
		was = true;
		os << x;
	}
	os << '>';
	return os;
}

const ll INF = (int) 2e9;
const int MAXN = (int) 1e5 + 10;

int n, m, k, T = -1;
int c[MAXN];
bool capital[MAXN], us[MAXN];
vi d[MAXN];
ll ans;
ll cnt[MAXN], sz[MAXN];
ll sumCnt, sumSz;

void dfs (int x, int st) {
	us[x] = true;
	cnt[st] += d[x].size();
	sz[st]++;
	for (auto to : d[x]) {
		if (!us[to])
			dfs(to, st);
	}
}

int main () {
	ios_base::sync_with_stdio(false);
	cin >> n >> m >> k;
	for (int i = 1; i <= k; i++) {
		cin >> c[i];
		capital[c[i]] = true;
	}
	for (int i = 1; i <= m; i++) {
		int x, y;
		cin >> x >> y;
		d[x].push_back(y);
		d[y].push_back(x);
	}
	int ma = -1;
	for (int i = 1; i <= k; i++) {
		dfs(c[i], i);
		cnt[i] /= 2;
		chmax(ma, (int) sz[i]);
		sumSz += sz[i];
		sumCnt += cnt[i];
	}
	for (int i = 1; i <= k; i++) {
		if (sz[i] == ma) {
			sz[i] += n - sumSz;
			cnt[i] += m - sumCnt;
			break;
		}
	}
	for (int i = 1; i <= k; i++) {
		ans += sz[i] * (sz[i] - 1) / 2 - cnt[i];
	}
	cout << ans;
}
