#include<bits/stdc++.h>

using namespace std;

//#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
long long mod = 1000000007LL;
long long large = 2000000000000000000LL;



vector<vector<int> > r;

int f(char c){
	return (int)(c-'a');
}

int dp[260][260][260];
vector<vector<int> > b;
int n,q;

int get(int x,int y,int z){

	if(dp[x][y][z]!=-1) return dp[x][y][z];

	dp[x][y][z] = n+1;
	if(x) dp[x][y][z] = min(dp[x][y][z],b[get(x-1,y,z)][r[0][x-1]]);
	if(y) dp[x][y][z] = min(dp[x][y][z],b[get(x,y-1,z)][r[1][y-1]]);
	if(z) dp[x][y][z] = min(dp[x][y][z],b[get(x,y,z-1)][r[2][z-1]]);

	return dp[x][y][z];
}
int main(){

	cin>>n>>q;

	string s;
	cin>>s;

	vector<int> a(n,0);
	for(int i=0;i<n;i++) a[i] = (int)(s[i]-'a');

	b.assign(n+2,vector<int>(26,n+1));

	for(int i=n-1;i>=0;i--){
		b[i] = b[i+1];
		b[i][a[i]] = i+1;
	}

	r.assign(3,vector<int>());

	for(int i=0;i<260;i++)
		for(int j=0;j<260;j++)
			for(int k=0;k<260;k++) dp[i][j][k] = -1;
	dp[0][0][0] = 0;

	while(q--){
		char ty;
		int p;
		char ch;
		cin>>ty>>p;

		int v = -1;

		p--;

		if(ty=='+'){
			cin>>ch;
			v = f(ch);
		}

		int re = -1;
		if(ty=='+'){
			r[p].push_back(v);
			re = get((int)r[0].size(),(int)r[1].size(),(int)r[2].size());
		}else{
			int sz = (int)r[p].size();
			if(p==0){
				for(int j=0;j<=(int)r[1].size();j++){
					for(int k=0;k<=(int)r[2].size();k++){
						dp[sz][j][k] = -1;
					}
				}
			}
			if(p==1){
				for(int j=0;j<=(int)r[0].size();j++){
					for(int k=0;k<=(int)r[2].size();k++){
						dp[j][sz][k] = -1;
					}
				}
			}
			if(p==2){
				for(int j=0;j<=(int)r[0].size();j++){
					for(int k=0;k<=(int)r[1].size();k++){
						dp[j][k][sz] = -1;
					}
				}
			}
			r[p].pop_back();
			re = get((int)r[0].size(),(int)r[1].size(),(int)r[2].size());
		}
		if(re==n+1) cout<<"NO"<<endl;
		else cout<<"YES"<<endl;
		//cout<<re<<endl;

	}








	return 0;
}
