#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef long long int ll;
typedef vector< pair<int, int> > vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long int> vll;
typedef pair<int, int> pii;

const ll INF = 1e18;
const ll inf = 1e9;
const ll MOD = 1e11 + 7;
const ll nax = 5000 + 10;

unordered_set<ll> set1;
const ll prime = 263;

ll givemehash(string s)
{
    ll has = 0;
    ll len = s.length();
    ll power = 1;
    for(ll i = 0 ; i < len; i++)
    {
        ll toadd = ((s[i]) * power) % MOD;
        has = (has % MOD + toadd) % MOD;
        power = (power % MOD * prime) % MOD;
    }
    return has;
}
int main()
{
    ios::sync_with_stdio(0);
    ll n, m;
    cin >> n >> m;
    for(ll i = 1; i <= n; i++)
    {
        string s;
        cin >> s;
        set1.insert(givemehash(s));
    }
    while(m--)
    {
        string s;
        cin >> s;
        ll len = s.length();
        ll has = givemehash(s);
        ll power = 1;
        ll flag = 0;
        for(ll i = 0; i < len; i++)
        {
            // Let's try to change this to other letters;
            for(ll j = 'a'; j <= 'c'; j++)
            {
                char ch = (char)j;
                if(ch == s[i]) continue;
                ll newhas = has;
                ll toadd = ((ch - s[i]) * power) % MOD;
                newhas = (newhas % MOD + toadd) % MOD;
                if(newhas < 0) newhas += MOD;
                if(set1.find(newhas) != set1.end())
                {
                    flag = 1;
                    break;
                }
            }
            power = (power % MOD * prime) % MOD;
            if(flag == 1)
            {
                cout << "YES" << endl;
                break;
            }
        }
        if(flag == 0)
            cout << "NO" << endl;
    }
    return 0;
}
