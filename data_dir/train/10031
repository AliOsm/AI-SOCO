#include<bits/stdc++.h>
#define pi 3.1415926535897932384626
using namespace std;
      
struct P{
  int x,y;
  bool operator < (const P &a )const{
    //if(y!=a.y)
    return y<a.y;
  };
};

int a,b,c,d,i,k,n,m,e,dx[10]={1,0,-1,0,1,1,-1,-1},dy[10]={0,1,0,-1,1,-1,1,-1};
int o[2001][1101];
int l[1111][1111];
int j[1];

long long x,y,z,mod=1000000007;
//string r,r1;
char r[1113][1111];

P u[1];
queue<int> q;
set<int> s[2];
//stack<int> s;
map<int,int> p[2];
vector<int> v[1];

bool as(P a,P b)
{
  //if(a.x==b.x)
  return a.y>b.y;
}

void f(int n,int m)
{
  if(r[n][m]!='#') return;
  l[n][m]=1;
  for(int h=0;h<4;h++)
    if(l[n+dx[h]][m+dy[h]]==0)
    f(n+dx[h],m+dy[h]);
}

int main()
{
  scanf("%d %d",&a,&b);
  for(int t=1;t<=a;t++)
  scanf("%s",r[t]+1);
  for(int t=1;t<=a;t++)
  {
    for(int w=1;w<=b;w++)
      if(r[t][w]=='#')
      { o[t][w]=1;
      c++;
        break;
        //c++;
      }
  }
  
  for(int w=1;w<=b;w++)
  for(int t=1;t<=a;t++)
  if(r[t][w]=='#')
  { o[t][w]=1;
    d++;
    break;
    
  }
  if((c==a&&d<b)||(c<a&&d==b))
  {
    puts("-1");
    return 0;
  }
  //for(int t=1;t<=a;t++,puts(""))
  //for(int w=1;w<=b;w++)
  //  printf("%d ",o[t][w]);
  for(int t=1;t<=a;t++)
  for(int w=1;w<=b;w++)
  if(o[t][w])
  {
    //int i=0;
    for(int x=t,y=w,i=0;x<=a;x++)
    if(r[x][y]=='.'&&i==0) i=1;
    else if(r[x][y]=='#'&&i==1)
    {
      puts("-1");
      return 0;
    }
  
    for(int x=t,y=w,i=0;x;x--)
    if(r[x][y]=='.'&&i==0) i=1;
    else if(r[x][y]=='#'&&i==1)
    {
      puts("-1");
      return 0;
    }
    for(int x=t,y=w,i=0;y<=b;y++)
    if(r[x][y]=='.'&&i==0) i=1;
    else if(r[x][y]=='#'&&i==1)
    {
      puts("-1");
      return 0;
    }
    for(int x=t,y=w,i=0;y;y--)
    if(r[x][y]=='.'&&i==0) i=1;
    else if(r[x][y]=='#'&&i==1)
    {
      puts("-1");
      return 0;
    }
  }
  for(int t=1;t<=a;t++)
  for(int w=1;w<=b;w++)
    if(r[t][w]=='#'&&l[t][w]==0)
    {
    k++;
    f(t,w);
  }
  printf("%d",k);
}

