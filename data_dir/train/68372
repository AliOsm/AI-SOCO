//In The Name of Allah
#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 10;
const int M = 77777 + 10;

int mark[N], cnt[N], dp[M], l[M], sz;
vector < int > adj[N];
vector < pair < int , int > > vec;

void dfs(int v){
    mark[v] = 1;
    sz ++;
    for (int u : adj[v])
        if (!mark[u])
            dfs(u);
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < m; i ++){
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for (int i = 1; i <= n; i ++){
        if (!mark[i]){
            sz = 0;
            dfs(i);
            cnt[sz] ++;
        }
    }
    for (int i = 1; i < N; i ++){
        int t = 1;
        while (t <= cnt[i])
            vec.push_back(make_pair(t * i, t)), cnt[i] -= t, t *= 2;
        if (cnt[i])
            vec.push_back(make_pair(cnt[i] * i, cnt[i]));
    }
    fill(dp, dp + M, N);
    dp[0] = 0;
    for (auto p : vec)
        for (int i = M - 1; i >= p.first; i --)
            dp[i] = min(dp[i], dp[i - p.first] + p.second);
    int ans = N;
    l[0] = 1;
    for (int i = 1; i < M; i ++){
        l[i] = l[i / 10] && (i % 10 == 4 || i % 10 == 7);
        if (l[i])
            ans = min(ans, dp[i]);
    }
    cout << (ans == N ? -1 : ans - 1);
    return 0;
}