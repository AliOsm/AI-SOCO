#include<bits/stdc++.h>
using namespace std;

const int N = 5e4 + 10;
int a[3][N], tmp[N];

vector<pair<int, int> > ans;

bool cmp(int x, int y) {
    if (a[0][x] < a[0][y])
        return true;
    else if (a[0][x] > a[0][y])
        return false;
    else {
        if (a[1][x] < a[1][y])
            return true;
        else if (a[1][x] > a[1][y])
            return false;
        else {
            if (a[2][x] < a[2][y])
                return true;
            else
                return false;
        }
    }
}

void findAns(int st, int en, int lev) {
    if (lev == 3)
        return;
    vector<int> v;
    int cnt = 1;
    for (int i = st + 1; i < en; i++) {
        if (a[lev][tmp[i]] != a[lev][tmp[i - 1]]) {
            if (cnt > 1)
                findAns(i - cnt, i, lev + 1);
            if (cnt % 2 == 1)
                v.push_back(tmp[i - 1]);
            cnt = 1;
        }
        else
            cnt++;
    }
    if (cnt > 1)
        findAns(en - cnt, en, lev + 1);
    if (cnt % 2 == 1)
        v.push_back(tmp[en - 1]);
    for (int i = 0; i < (int)v.size() - 1; i += 2)
        ans.push_back({v[i], v[i + 1]});
    if (v.size() % 2 == 1)
        tmp[en - 1] = v[v.size() - 1];
}

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < 3; j++)
            cin >> a[j][i];
    for (int i = 0; i < n; i++)
        tmp[i] = i;
    sort(tmp, tmp + n, cmp);
    findAns(0, n, 0);
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i].first + 1 << " " << ans[i].second + 1 << "\n";
    return 0;
}
