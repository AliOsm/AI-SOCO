//void _(){
//    int n;
//    cin >> n;
//    vs arr(n);
//    cin >> arr;
//    set<string> seen;
//    for(string s : arr){
//        if(seen.count(s))
//            print("YES");
//        else
//            print("NO");
//        seen.insert(s);
//    }
//}
//
#include <set>
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<string> vs;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
T1 void print(T x, string end = "\n"){
    cout << x << end;
}
void _(){
    int n;
    cin >> n;
    vs arr(n);
    cin >> arr;
    set<string> seen;
    for(string s : arr){
        if(seen.count(s))
            print("YES");
        else
            print("NO");
        seen.insert(s);
    }
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        _();
}
