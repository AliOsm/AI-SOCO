/* 258B */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1


const int mod = 1000000007;
__int64 dp[15][2][15];
int a[15];
__int64 ans = 0;
__int64 cnt[15];

void init() {
	int jj;
	
	dp[0][0][0] = 1;
	rep(i, 0, 10) {
		rep(j, 0, 11) {
			if (dp[i][0][j] > 0) {
				rep(k, 0, a[i]) {
					jj = j + (k==4 || k==7);
					dp[i+1][1][jj] = (dp[i+1][1][jj] + dp[i][0][j]) % mod;
				}
				jj = j + (a[i]==4 || a[i]==7);
				dp[i+1][0][jj] = (dp[i+1][0][jj] + dp[i][0][j]) % mod;
			}
		}
		
		rep(j, 0, 11) {
			if (dp[i][1][j] > 0) {
				dp[i+1][1][j] = (dp[i+1][1][j] + dp[i][1][j]*8) % mod;
				dp[i+1][1][j+1] = (dp[i+1][1][j+1] + dp[i][1][j]*2) % mod;
			}
		}
	}
	
	rep(i, 0, 11)
		cnt[i] = dp[10][1][i];
	cnt[0] = (cnt[0]-1 + mod) % mod;
	
	#ifndef ONLINE_JUDGE
	rep(i, 0, 11)
		printf("%d ", cnt[i]);
	putchar('\n');
	#endif
}

void dfs(int d, int delta, __int64 res) {
	if (d == 7) {
		if (delta > 0) {
			ans = (ans + res) % mod;
		}
		return ;
	}
	
	__int64 tmp;
	
	rep(i, 0, 11) {
		if (cnt[i] > 0) {
			tmp = res * cnt[i] % mod;
			--cnt[i];
			if (d == 0) {
				dfs(d+1, i, tmp);
			} else {
				dfs(d+1, delta-i, tmp);
			}
			++cnt[i];
		}
	}
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int m;
	
	cin >> m;
	++m;
	
	int tmp = m;
	rep(i, 0, 10) {
		a[i] = tmp % 10;
		tmp /= 10;
	}
	reverse(a, a+10);
	
	init();
	dfs(0, 0, 1);
	
	cout << ans << endl;
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
