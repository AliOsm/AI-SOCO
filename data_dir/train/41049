// by tmt514
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#define SZ(x) ((int)(x).size())
#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)
using namespace std;
typedef long long LL;

vector<pair<int, int>> wires;
int main(void) {
  int n, k;
  scanf("%d%d", &n, &k);
  int rem = k, nl = 1, nr = k;
  int dist = 0;

  while (nr < n) {
    if (nr == n-1) {
      // happy
      for(int i=nl;i<=nr;i++) {
        wires.push_back({i, n});
      }
      nl = nr = n;
      rem = 1;
      dist += 2;
      break;
    }
    if (nr == n-2) {
      // happy
      for(int i=nl;i<nr;i++) {
        wires.push_back({i, n-1});
      }
      wires.push_back({nr, n});
      wires.push_back({n-1, n});
      nl = n-1; nr = n; rem = 1;
      dist += 3;
      break;
    }
    if (n-nr-1 <= rem) {
      int j=nl;
      for(int i=nr+1;i<=n-1;i++) {
        wires.push_back({i, j});
        ++j;
      }
      while(j<=nr) {
        wires.push_back({j, n-1});
        ++j;
      }
      nl = nr+1;
      nr = n-1;
      rem = nr-nl+1;
      dist += 2;
      continue;
    }
    if (n-nr-1 > rem) {
      for(int i=nl;i<=nr;i++) {
        wires.push_back({i, nr+1+(i-nl)});
      }
      nl = nr+1;
      nr = nr+rem;
      dist += 2;
      continue;
    }
  }
  printf("%d\n", dist);
  for(auto &&x : wires) {
    printf("%d %d\n", x.first, x.second);
  }
  return 0;
}
