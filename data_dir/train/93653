#include <bits/stdc++.h>
using namespace std;

//.define
// #define FILE_IN_OUT
#define RET(_x)                       return cout << (_x) << '\n', 0;
#define all(_obj)                     (_obj).begin(), (_obj).end()
#define loop(_n)                      for (int i = 0; i < (_n); ++i)
#define CeilDiv(_dividend, _divider)  (((_dividend) - 1LL + (_divider)) / (_divider))
#define sz(_obj)                      static_cast<int>((_obj).size())
#ifdef SHJ_LOCAL
#define debug(_x)                     std::cerr << (#_x) << " = " << (_x) << '\n' << std::flush;
#else
#define debug(_x)                     {}
#endif
#define endl "\n"
template<typename Tp>
inline void outarr(Tp _begin, Tp _end, const char* _delim = " ") {
    for (Tp current = _begin; current != _end; ++current) {
        std::cout << *current << _delim;
    }
    std::cout << '\n';
}

//.constant
using ll  = long long;
using pii = std::pair<int, int>;
constexpr int INF = 0x3f3f3f3f;
constexpr int MOD = static_cast<const int>(1e9 + 7);

//.data
constexpr int MAXN = 200000;

int cnt[MAXN + 1];
int arr[MAXN];

void Add(int x) {
    int i = 1;
    for (; i * i < x; ++i) {
        if (x % i == 0) {
            ++cnt[i];
            ++cnt[x / i];
        }
    }
    if (i * i == x) {
        ++cnt[i];
    }
}

void Del(int x) {
    for (int i = 1; i * i <= x; ++i) {
        if (x % i == 0) {
            cnt[i] = 0;
            cnt[x / i] = 0;
        }
    }
}

//.code
int main() {
#ifdef FILE_IN_OUT
    std::ifstream cin ("input.txt",  std::ios::in);
    std::ofstream cout("output.txt", std::ios::out);
#else
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif

    int n;
    cin >> n;
    int g = 0;
    loop(n) {
        cin >> arr[i];
        g = gcd(arr[i], g);
    }
    loop(n) {
        arr[i] /= g;
        Add(arr[i]);
    }
    ll ans = g;
    for (int i = MAXN; i > 1; --i) {
        if (cnt[i] == n - 1) {
            debug(i);
            ans *= i;
            Del(i);
        }
    }
    cout << ans << endl;

#ifdef FILE_IN_OUT
    cin.close();
    cout.close();
#endif
    return 0;
}