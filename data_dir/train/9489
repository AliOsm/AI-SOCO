#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

int n, dsu[100100], m, l;
ll a[100100];

ll ans = 0;

int dsu_get(int v){
    if (v == dsu[v])
        return v;
    return dsu[v] = dsu_get(dsu[v]);
}

void dsu_unite(int a, int b){
    a = dsu_get(a);
    b = dsu_get(b);
    if (a == b)
        return;
    --ans;
    dsu[b] = a;
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

    cin >> n >> m >> l;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        dsu[i] = i;
        if (a[i] > l){
            if (a[i-1] <= l)
                ++ans;
        }
    }
    for (int i = 1; i <= m; i++){
        int type;
        cin >> type;
        if (type == 0)
            cout << ans << "\n";
        else {
            int pos, x;
            cin >> pos >> x;
            a[pos] += x;
            if (a[pos]-x <= l && a[pos] > l){
                ++ans;
                if (a[pos-1] > l)
                    dsu_unite(pos-1, pos);
                if (a[pos+1] > l)
                    dsu_unite(pos, pos+1);
            }
        }
    }

}
