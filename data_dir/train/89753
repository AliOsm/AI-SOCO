#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int MD = 1000000007;
void add(ll& a, ll b) {
	a = (a + b) % MD;
}

struct Event {
	Event(int p, int len, int s) : p(p), len(len), s(s) {}
	int p, len;
	int s;
};
bool operator< (Event a, Event b) {
	if (a.p == b.p) {
		return a.s < b.s;
	}
	return a.p < b.p;
}

int main()
{
	int n, x, y;
	ignore = scanf("%d %d %d", &n, &x, &y);
	
	vector<Event> ev;
	
	for (int i = 0; i < n; i++) {
		int l, r;
		ignore = scanf("%d %d", &l, &r);
		
		ev.emplace_back(l, r - l, 1);
		ev.emplace_back(r + 1, 0, -1);
	}
	
	sort(ev.begin(), ev.end());
	
	vector<int> d;
	ll ans = 0;
	
	for (Event& e : ev) {
		if (e.s == -1) {
			d.push_back(e.p);
		}
		else {
			if (d.empty() || y * 1LL * (e.p - d.back() + 1) > x) {
				add(ans, x);
			}
			else {
				add(ans, y * 1LL * (e.p - d.back() + 1));
			}
			add(ans, e.len * 1LL * y);
			if (!d.empty()) d.pop_back();
		}
	}
	
	cout << ans;
}
