#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <cstring>
#include <iterator>
#include <fstream>
using namespace std;

#define pb push_back
#define rs resize
#define mp make_pair
#define inf 1e9
#define pi 3.1415926535897932384626433832795
#define sz(a) (int)(a).size()
#define Sort(a) sort((a).begin(), (a).end())
#define Reverse(a) reverse((a).begin(), (a).end())
#define sf scanf
#define pf printf
#define ms(a, x) memset((a), (x), sizeof(a))
#pragma comment(linker, "/STACK:200000000")
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <vvi> vvvi;
typedef vector <vvvi> vvvvi;
typedef vector <bool> vb;
typedef vector <vb> vvb;
typedef vector <vvb> vvvb;
typedef vector <vvvb> vvvvb;
typedef long long ll;
typedef vector <ll> vl;
typedef vector <vl> vvl;
typedef vector <vvl> vvvl;
typedef vector <vvvl> vvvvl;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <vii> vvii;
typedef pair <int, ll> il;
typedef vector <il> vil;
typedef vector <vil> vvil;
typedef pair <ll, int> li;
typedef vector <li> vli;
typedef vector <vli> vvli;
typedef set <int> si;
typedef set <li> sli;
typedef set <il> sil;
typedef vector <string> vs;
typedef vector <vs> vvs;
typedef vector <vvs> vvvs;
typedef map <string, int> msi;
typedef map <char, int> mci;
typedef pair <ll, ll> pll;

int main() {
    int n, m, k;
    scanf("%d%d%d", &n, &m, &k);
    vl a(n);
    for (int i = 0; i < n; ++i) {
        scanf("%I64d", &a[i]);
    }
    vl l(m), r(m), d(m);
    for (int i = 0; i < m; ++i) {
        sf("%I64d%I64d%I64d", &l[i], &r[i], &d[i]);
        --l[i], --r[i];
    }
    vl x(k), y(k);
    for (int i = 0; i < k; ++i) {
        sf("%I64d%I64d", &x[i], &y[i]);
        --x[i], --y[i];
    }
    vl number(m);
    vector <pair <int, ll> > b;
    for (int i = 0; i < k; ++i) {
        b.pb({ x[i], 1 });
        b.pb({ y[i] + 1, -1 });
    }
    Sort(b);
    int cur = 0;
    ll diff = 0;
    for (int i = 0; i < m; ++i) {
        while (cur < sz(b) && b[cur].first == i) {
            diff += b[cur].second;
            ++cur;
        }
        number[i] = diff;
    }
    b.clear();
    for (int i = 0; i < m; ++i) {
        b.pb({ l[i], number[i] * d[i] });
        b.pb({ r[i] + 1, -number[i] * d[i] });
    }
    Sort(b);
    diff = 0;
    cur = 0;
    for (int i = 0; i < n; ++i) {
        while (cur < sz(b) && b[cur].first == i) {
            diff += b[cur].second;
            ++cur;
        }
        a[i] += diff;
    }
    for (int i = 0; i < n; ++i) {
        pf("%I64d ", a[i]);
    }
}//