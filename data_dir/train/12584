#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<unordered_map>
#include<unordered_set>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#include<cassert>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define reps(X,S,Y) for (int (X) = S;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y)-1;(X) >=0;--(X))
#define rreps(X,S,Y) for (int (X) = (Y)-1;(X) >= (S);--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define peat(X,Y) for (;(X) < (Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()
#define eb emplace_back
#define UNIQUE(X) (X).erase(unique(all(X)),(X).end())
#define Endl endl

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> using vv=vector<vector<T>>;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}
template<class T> inline bool MX(T &l,const T &r){return l<r?l=r,1:0;}
template<class T> inline bool MN(T &l,const T &r){return l>r?l=r,1:0;}
#define out(args...){vector<string> a_r_g_s=s_p_l_i_t(#args, ','); e_r_r(a_r_g_s.begin(), args); }
vector<string> s_p_l_i_t(const string &s, char c){vector<string> v;int d=0,f=0;string t;for(char c:s){if(!d&&c==',')v.pb(t),t="";else t+=c;if(c=='\"'||c=='\'')f^=1;if(!f&&c=='(')++d;if(!f&&c==')')--d;}v.pb(t);return move(v);}
void e_r_r(vector<string>::iterator it) {}
template<typename T, typename... Args> void e_r_r(vector<string>::iterator it, T a, Args... args){ if(*it==" 1"||*it=="1") cerr<<endl; else cerr << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", "; e_r_r(++it, args...);}
const ll MOD=1e9+7;

const int MAX_P=1123456;
int prime[MAX_P];

void Fact(int n,map<ll,ll> &re){
  while(prime[n]){
    ++re[prime[n]];
    n/=prime[n];
  }
  if(n>1) ++re[n];
}

void pre(){
  int i,j,k;
  for(i=2;i<MAX_P;i++){
    if(prime[i]==0)
      for(ll j=1ll*i*i;j<MAX_P;j+=i)
        prime[j]=i;
  }
}

map<pair<pll,ll>,ll> memo;

ll dfs(vector<pll> &ps,int i,ll x){
  //out(ps,i,x,1);
  if(ps.size()==i) return x>=0;
  ll re=dfs(ps,i+1,x);
  rep(_,ps[i].Y){
    x/=ps[i].X;
    if(!x) break;
    re+=dfs(ps,i+1,x);
  }
  return re;
}

ll dfs2(vector<pll> &ps,int i,ll x){
  if(ps.size()==i){
    if(!x) return 0;
    ll re=0;
    int n=ps.size();
    rep(i,1<<n){
      ll t=x;
      rep(j,n)if(i>>j&1) t/=ps[j].X;
      re+=(__builtin_popcount(i)%2?-t:t);
    }
    //out(x,re,1);
    return re;
  }
  ll re=dfs2(ps,i+1,x);
  rep(_,ps[i].Y){
    x/=ps[i].X;
    if(!x) break;
    re+=dfs2(ps,i+1,x);
  }
  return re;
}

int main(){
  pre();
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int T;
  cin>>T;
  while(T--){
    map<ll,ll> xs,ys,ss;
    ll X=1,Y=1,S=1;
    rep(i,3){ ll t; cin>>t; X*=t; Fact(t,xs);}
    rep(i,3){ ll t; cin>>t; Y*=t; Fact(t,ys);}
    rep(i,3){ ll t; cin>>t; S*=t; Fact(t,ss);}
    S*=2; ++ss[2];
    if(memo.count(make_pair(pll(X,Y),S))){
      cout<<memo[make_pair(pll(X,Y),S)]<<endl;
    }
    // for(pll p:xs) cout<<p;cout<<endl;
    // for(pll p:ys) cout<<p;cout<<endl;
    // for(pll p:ss) cout<<p;cout<<endl;
    ll &re=memo[make_pair(pll(X,Y),S)];
    vector<pll> ps(all(ss));
    reverse(all(ps));
    re+=dfs(ps,0,X);
    map<ll,ll> ts;
    for(pll p:xs){
      if(ss[p.X]<p.Y) ts[p.X]=ss[p.X];
    }
    vector<pll> tv(all(ts));
    //out(re,tv,1);
    re+=dfs2(tv,0,Y);
    cout<<re<<endl;
  }
  return 0;
}
