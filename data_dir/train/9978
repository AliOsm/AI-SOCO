#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(3e2+3)
int U[N][N],D[N][N],R[N][N],L[N][N],a[N][N];
void solve(){
    int n,m,t,ta,td,tf;
    scanf("%d%d%d%d%d%d",&n,&m,&t,&tf,&ta,&td);
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            scanf("%d",&a[i][j]);
        }
    }
    for(int i=1;i<=m;i++){
        for(int j=n-1;j>=1;j--){
            if(a[j][i]>a[j+1][i]){
               U[j][i]=U[j+1][i]+ta;
            }
            if(a[j][i]<a[j+1][i]){
               U[j][i]=U[j+1][i]+td;
            }
            if(a[j][i]==a[j+1][i]){
               U[j][i]=U[j+1][i]+tf;
            }
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=m-1;j>=1;j--){
            if(a[i][j]>a[i][j+1]){
               R[i][j]=R[i][j+1]+ta;
            }
            if(a[i][j]<a[i][j+1]){
               R[i][j]=R[i][j+1]+td;
            }
            if(a[i][j]==a[i][j+1]){
               R[i][j]=R[i][j+1]+tf;
            }
        }
    }
    for(int i=1;i<=m;i++){
        for(int j=2;j<=n;j++){
            if(a[j][i]>a[j-1][i]){
               D[j][i]=D[j-1][i]+ta;
            }
            if(a[j][i]<a[j-1][i]){
               D[j][i]=D[j-1][i]+td;
            }
            if(a[j][i]==a[j-1][i]){
               D[j][i]=D[j-1][i]+tf;
            }
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=2;j<=m;j++){
            if(a[i][j]>a[i][j-1]){
               L[i][j]=L[i][j-1]+ta;
            }
            if(a[i][j]<a[i][j-1]){
               L[i][j]=L[i][j-1]+td;
            }
            if(a[i][j]==a[i][j-1]){
               L[i][j]=L[i][j-1]+tf;
            }
        }
    }
    int ans=1e9,i1,j1,i2,j2;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            for(int I=i+2;I<=n;I++){
                int u=U[i][j]-U[I][j];
                int lo=j+2,hi=m;
                if(lo>m)
                    continue;
                while(hi-lo>1){
                    int mid=(lo+hi+1)>>1;
                    int l=L[i][mid]-L[i][j];
                    int r=R[I][j]-R[I][mid];
                    int d=D[I][mid]-D[i][mid];
                    if(u+l+r+d<t){
                        lo=mid;
                    }
                    else
                        hi=mid;
                }
                int l=L[i][lo]-L[i][j];
                int r=R[I][j]-R[I][lo];
                int d=D[I][lo]-D[i][lo];
                if(abs(u+l+r+d-t)<ans){
                    ans=abs(u+l+r+d-t);
                    i1=i;
                    j1=j;
                    i2=I;
                    j2=lo;
                }
                l=L[i][hi]-L[i][j];
                r=R[I][j]-R[I][hi];
                d=D[I][hi]-D[i][hi];
                if(abs(u+l+r+d-t)<ans){
                    ans=abs(u+l+r+d-t);
                    i1=i;
                    j1=j;
                    i2=I;
                    j2=hi;
                }
            }
        }
    }
    printf("%d %d %d %d",i1,j1,i2,j2);
}
int main(){
//   ios_base::sync_with_stdio(false);
    int t=1;
   // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
