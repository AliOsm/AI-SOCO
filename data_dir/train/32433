// KALAM
# include<bits/stdc++.h>

using namespace std;

const int N = 5000 + 77;
int n , k , a[N] , dp[N][N][2];
int main() {
   memset(dp , 60 , sizeof dp);
   scanf("%d" , & n);
   k = (n + 1) / 2;
   for(int i = 1;i <= n;++ i) scanf("%d" , a + i);
   dp[0][0][0] = 0;
   dp[1][0][0] = dp[1][1][1] = 0;
   for(int i = 2;i <= n;++ i) {
      dp[i][0][0] = 0;
      int t = (i + 1) / 2;
      for(int j = 1;j <= t;++ j) {
         dp[i][j][0] = min(dp[i - 1][j][0] , dp[i - 1][j][1] + max(a[i] - a[i - 1] + 1 , 0));
         int x = dp[i - 2][j - 1][0] + max(a[i - 1] - a[i] + 1 , 0);
         int y = dp[i - 2][j - 1][1];
         y += max(a[i - 1] - min(a[i] , a[i - 2]) + 1 , 0);
         dp[i][j][1] = min(x , y);
      }
   }
   for(int i = 1;i <= k;++ i)
      printf("%d " , min(dp[n][i][0] , dp[n][i][1]));
   return 0;
}
