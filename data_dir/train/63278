#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md l + ((r - l) >> 1)
#define all(x) x.begin(),x.end()
#define ll long long
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 4e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0};
const int dy[] = {0, 0, 1, -1};
const double EPS = 1e-9;
const double PI = acos(-1.0);

int n, d, k, deg[N];
vector < pair < int, int > > ans;
main() {
    file("queue");
    ios;
    /**
    3 3
    2 4
    4 4
    */
    cin >> n >> d >> k;
    if (n < d + 1) return !(cout << "NO");
    fo(i, 1, d, 1) {
        ans.pb({i, i + 1});
        deg[i]++;
        deg[i + 1]++;
        if (deg[i] > k || deg[i + 1] > k) return !(cout << "NO");
    }
    set < pair < int, int > > st;
    fo(i, 2, d, 1) st.ins(mp(max(d - i + 2, i), i));
    fo(i, d + 2, n, 1) {
        while (!st.empty() && deg[st.begin()->S] == k) st.erase(st.begin());
        if (st.empty() || st.begin()->F == d + 1) return !(cout << "NO");
        ans.pb({i, st.begin()->S});
        deg[i]++;
        deg[st.begin()->S]++;
        st.ins(mp(st.begin()->F + 1, i));
    }
    cout << "YES\n";
    for (auto & it : ans) cout << it.F << " " << it.S << "\n";
    return 0;
}
