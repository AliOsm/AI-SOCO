#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.14159265
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<8> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
ll n,a[100100],sum1[100100],sum2[100100];
multiset<ll>s1,s2;
int main()
{

//cout<<Pow((ll)1000000,(ll)110);
//freopen("hotel.in","r",stdin);
//freopen("math.in","w",stdout);
//    char input[15];
//    scanf("%s", &input);
cin>>n;
forr(i,1,n)
{
    cin>>a[i];
    sum1[i]=a[i]+sum1[i-1];

}
if(n==1||sum1[n]%2==1)
{
    cout<<"NO";
    return 0;
}
forr(i,0,n)
{
    auto it1=lower_bound(sum1+i+1,sum1+n+1,sum1[n]/2+a[i]);
    if(*it1==sum1[n]/2+a[i])
    {
        cout<<"YES";
        return 0;
    }
}
reverse(a+1,a+1+n);
forr(i,1,n)
    sum2[i]=a[i]+sum2[i-1];

forr(i,0,n)
{
    auto it1=lower_bound(sum2+i+1,sum2+n+1,sum2[n]/2+a[i]);
    if(*it1==sum2[n]/2+a[i])
    {
        cout<<"YES";
        return 0;
    }
}
cout<<"NO";
 return 0;
}
