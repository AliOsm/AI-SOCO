#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

const int N = 5005;
vector<int> candies[N];

int main()
{
    ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
    int n, m;
    cin >> n >> m;
    int Max = 0, ans = 0;
    for(int i = 0; i < m; i++)
    {
        int a, b;
        cin >> a >> b;
        candies[a].push_back(b);
        Max = max(Max, (int)candies[a].size());
    }
    ans = (Max - 1) * n;
    for(int start = 1; start <= n; start++)
    {
        int add = 0;
        for(int i = 1; i <= n; i++)
        {
            if(candies[i].size() == Max)
            {
                int c = INT_MAX;
                int to1;
                if(i >= start)
                    to1 = i - start;
                else
                    to1 = n - start + i;
                for(auto &cur: candies[i])
                {
                    int to2;
                    if(cur > i)
                        to2 = cur - i;
                    else
                        to2 = n - i + cur;
                    c = min(c, to1 + to2);
                }
                add = max(add, c);
            }
            else if(candies[i].size() == Max - 1 && Max - 1 != 0)
            {
                int c = INT_MAX;
                int to1;
                if(i >= start)
                    to1 = i - start;
                else
                    to1 = n - start + i;
                for(auto &cur: candies[i])
                {
                    int to2;
                    if(cur > i)
                        to2 = cur - i;
                    else
                        to2 = n - i + cur;
                    c = min(c, to1 + to2);
                }
                c = (Max - 2) * n + c;
                if(c >= ans)
                    add = max(add, c - ans);
            }
        }
        cout << ans + add << ' ';
    }
    return 0;
}
