#define _CRT_SECURE_NO_DEPRECATE
#define _USE_MATH_DEFINES
#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <memory.h>
#include <set>
#include <ctime>
#include <map>
#include <cstring>
#include <iterator>
#include <queue>
#include <assert.h>
#include <bitset>
#include <complex>
#include <unordered_map>
#include <unordered_set>
#include <functional>

//#pragma comment(linker, "/STACK:512000000")

using namespace std;

#define pb emplace_back
#define mp make_pair
#define all(a) (a).begin(), (a).end()
#define forn(i, n) for (int i = 0; i < (n); ++i)
#define forab(i, a, b) for (int i = (a); i < (b); ++i)

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const int infi = 1e9 + 7;
const ll infl = (ll)1e18 + (ll)7;

const ll mod = 1e9 + 7;
ll dp[200500][3];

int32_t main() {
    cin.sync_with_stdio(false);
    cin.tie(0);
    //srand(time(NULL));
   // freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("customs.in", "r", stdin); freopen("customs.out", "w", stdout);
    int n, l, r;
    cin >> n >> l >> r;
    --l;
    ll c0, c1, c2;
    c0 = r / 3 - l / 3;
    c1 = (r + 2) / 3 - (l + 2) / 3;
    c2 = (r + 1) / 3 - (l + 1) / 3;
    dp[0][0] = 1;
    forn(i, n) {
        dp[i + 1][0] = (dp[i][0] * c0 + dp[i][1] * c2 + dp[i][2] * c1) % mod;
        dp[i + 1][1] = (dp[i][0] * c1 + dp[i][1] * c0 + dp[i][2] * c2) % mod;
        dp[i + 1][2] = (dp[i][0] * c2 + dp[i][1] * c1 + dp[i][2] * c0) % mod;
    }
    cout << dp[n][0] << '\n';

    return 0;
}