#include <string.h>
#include <assert.h>
#include <cassert>
#include <unordered_map>

#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
#include <cassert>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair
#define N 400000

const int mod = 998244353;

using namespace std;

int a[N];
int f[N],ti[N];

int get_diff(const string& c) {
    cout<<c<<endl;
    fflush(stdout);
    int ret;
    cin>>ret;
    return ret;
}
int main() {
    string s;
    for(int i = 0; i < 300; ++i){
        s+='a';
    }
    int n_a = 300-get_diff(s);
    s="";
    for(int i = 0; i <300; ++i) {
        s+='b';
    }
    int n_b = 300-get_diff(s);

    int n = n_a+n_b;
    if(n_a==0) {
        string ans;
        for(int i = 0; i < n_b; ++i) {
            ans += 'b';
        }
        cout<<ans<<endl;
    }
    else if(n_b==0) {
        string ans;
        for(int i = 0; i < n_a; ++i) {
            ans += 'a';
        }
        cout<<ans<<endl;
    }
    else {
        int tot = n_a;
        s="";
        for(int i = 0; i < n; ++i) s+= 'b';
        string ans = s;

        for(int i = 0;i < n-1; ++i) {
            s[i] = 'a';
            int ret = get_diff(s);
            s[i] = 'b';
            if(ret<n_a) {
                ans[i] = 'a';
                tot--;
            }
            else {
                ans[i] = 'b';
            }
        }
        //printf("tot = %d\n",tot);
        if(tot>0) {
            ans[n-1] = 'a';
        }
        cout<<ans<<endl;
    }
}