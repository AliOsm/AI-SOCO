#include<bits/stdc++.h>
using namespace std;
const int MAX=4e5+9;
int n,sz[MAX],par[MAX],ans[MAX];
vector<int> g[MAX],pre[MAX],suf[MAX],root;
void dfs(int v,int p=-1)
{
	sz[v]=1,par[v]=p;
	for (auto u:g[v]) if (u!=p) dfs(u,v),sz[v]+=sz[u];
}
void calc(int v,int p=-1)
{
	sz[v]=1;
	pre[v].resize(g[v].size()),suf[v].resize(g[v].size());
	for (int i=0;i<g[v].size();i++)
	{	
		pre[v][i]=i?pre[v][i-1]:0;
		int u=g[v][i];
		if (u!=p) 
		{	
			calc(u,v);
			pre[v][i]=max(pre[v][i],sz[u]);
			sz[v]+=sz[u];
		}
	}
	for (int i=(int)g[v].size()-1;i>=0;i--)
	{
		suf[v][i]=i+1<g[v].size()?suf[v][i+1]:0;
		int u=g[v][i];
		if (u!=p) suf[v][i]=max(suf[v][i],sz[u]);
	}
}
void check(int v,int s=0,int p=-1)
{
	if ((n-sz[v]-s)*2<=n) ans[v]=true;
	for (int i=0;i<g[v].size();i++)
	{
		int u=g[v][i];
		if (u!=p) check(u,max(s,max((i?pre[v][i-1]:0),(i+1<g[v].size()?suf[v][i+1]:0))),v);
	}
}
int main()
{
	ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);
	cin>>n;
	for (int i=1,v,u;i<n;i++) cin>>v>>u,v--,u--,g[v].push_back(u),g[u].push_back(v);
	dfs(0);
	for (int i=0;i<n;i++)
		if (2*(n-sz[i])<=n)
		{
			bool flg=1;
			for (auto u:g[i]) if (u!=par[i] && sz[u]*2>n) flg=0;
			if (flg) ans[i]=true,root.push_back(i);
		}
	for (auto i:root)
		calc(i),check(i);
	for (int i=0;i<n;i++) cout<<ans[i]<<' ';
	return 0;
}
