//const int N = 2e5+5;
//int a[N], ans[N], sub[N];
//vi adj[N];
//void solve1(int u, int p){
//    sub[u] = a[u];
//    for(int v : adj[u]){
//        if(v == p) continue;
//        solve1(v,u);
//        sub[u] += max(0,sub[v]);
//    }
//    ans[u] = sub[u];
//}
//void solve2(int u, int p){
//    for(int v : adj[u]){
//        if(v == p) continue;
//        if(sub[v] >= 0)
//            ans[v] = max(ans[v],ans[u]);
//        else
//            ans[v] = max(ans[v],ans[u]-1);
//        solve2(v,u);
//    }
//}
//void __(){
//    _(int,n);
//    rep(i,1,n){
//        cin >> a[i];
//        if(a[i] == 0)
//            a[i] = -1;
//    }
//    rep(i,n-1){
//        _(int,u);
//        _(int,v);
//        adj[u].pb(v);
//        adj[v].pb(u);
//    }
//    solve1(1,-1);
//    solve2(1,-1);
//    print vi(ans+1,ans+n+1);
//}
//
//
#include <iomanip>
#include <algorithm>
#include <cassert>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define REP_INT(i,l,r) for(int i = l; i <= r; ++i)
#define REP_ZERO_INT(i,r) for(int i = 0; i < r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT,REP_ZERO_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
struct _print {
    string sep,end;
    bool space;
    ostream &stream;
    _print(string _sep=" ",string _end="\n",
            ostream &_stream = cout)
        : sep(_sep),end(_end),space(false),
            stream(_stream) {}
    ~_print() { stream << end; }
    template <typename T>
        _print &operator , (const T &t) {
            if (space) stream << sep;
            space = true;
            stream << t;
            return *this;
        }
};
#define print _print(),
T1 ostream& operator<<(ostream& stream, const vector<T>& t){
    for(int i = 0; i < sz(t); ++i){
        stream << t[i];
        if(i+1 < sz(t))
            stream << ' ';
    }
    return stream;
}
#define INPUT_WITHOUT_INIT(type,name) type name; cin >> name
#define GET_INPUT_MACRO(_1,_2,_3,_4,_5,_6,_7,_8,NAME,...) NAME
#define _(...) GET_INPUT_MACRO(__VA_ARGS__,_IWI,_IWI,_IWI,_IWI,_IWI,_IWI,INPUT_WITHOUT_INIT)(__VA_ARGS__)
const int N = 2e5+5;
int a[N], ans[N], sub[N];
vi adj[N];
void solve1(int u, int p){
    sub[u] = a[u];
    for(int v : adj[u]){
        if(v == p) continue;
        solve1(v,u);
        sub[u] += max(0,sub[v]);
    }
    ans[u] = sub[u];
}
void solve2(int u, int p){
    for(int v : adj[u]){
        if(v == p) continue;
        if(sub[v] >= 0)
            ans[v] = max(ans[v],ans[u]);
        else
            ans[v] = max(ans[v],ans[u]-1);
        solve2(v,u);
    }
}
void __(){
    _(int,n);
    rep(i,1,n){
        cin >> a[i];
        if(a[i] == 0)
            a[i] = -1;
    }
    rep(i,n-1){
        _(int,u);
        _(int,v);
        adj[u].pb(v);
        adj[v].pb(u);
    }
    solve1(1,-1);
    solve2(1,-1);
    print vi(ans+1,ans+n+1);
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        __();
}
