#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
const int lol = 54321;
const int mods[] = {1000002277 , 1000005971 , 1000000223 , 1000001413 , 1000004497 , 1000009573 , 1000000349 , 1000005997 , 1000003577 , 1000007257 , 1000002449 , 1000006583 , 1000007479 , 1000000021 , 1000009259 , 1000005827 , 1000008277 , 1000007741 , 1000003337 , 1000002457 , 1000003163 , 1000006751 , 1000008719 , 1000002989 , 1000007513 , 1000004023 , 1000000459 , 1000005731 , 1000002161 , 1000004567 , 1000007321 , 1000008811 , 1000005647 , 1000005953 , 1000008223 , 1000002431 , 1000007089 , 1000008593 , 1000004263 , 1000005823 , 1000001351 , 1000004791 , 1000008403 , 1000001621 , 1000005361 , 1000003777 , 1000002187 , 1000000007 , 1000006717 , 1000005547 , 1000009289 , 1000003579 , 1000003559 , 1000000891 , 1000008101 , 1000004321 , 1000009279 , 1000004927 , 1000005449 , 1000009399 , 1000004627 , 1000003379 , 1000009063 , 1000004777 , 1000009081 , 1000009183 , 1000003843 , 1000005451 , 1000009667 , 1000003853 , 1000006837 , 1000007023 , 1000005233 , 1000008181 , 1000007003 , 1000004717 , 1000002361 , 1000001857 , 1000000993 , 1000001273 , 1000002803 , 1000003987 , 1000001371 , 1000009867 , 1000009099 , 1000007389 , 1000005029 , 1000008109 , 1000003469 , 1000001531 , 1000006981 , 1000003283 , 1000009457 , 1000009757 , 1000006957 , 1000008679 , 1000006313 , 1000006127 , 1000002727 , 1000008419 , 1000004381 , 1000003951 , 1000001021 , 1000007633 , 1000005847 , 1000005053 , 1000003663 , 1000002571 , 1000009441 , 1000003871 , 1000009739 , 1000008311 , 1000000241 , 1000002043 , 1000004893 , 1000004977 , 1000003253 , 1000004867 , 1000003709 , 1000005469 , 1000000607 , 1000004507 , 1000003513 , 1000003373 , 1000003793 , 1000004693 , 1000001617 , 1000001759 , 1000003013 , 1000003241 , 1000007417 , 1000008257 , 1000009301 , 1000005737 , 1000000861 , 1000008617 , 1000000289 , 1000000427 , 1000000513 , 1000000637 , 1000008671 , 1000005203 , 1000000711 , 1000006571 , 1000005527 , 1000004119 , 1000007887 , 1000009133 , 1000004891 , 1000007191 , 1000009679 , 1000004611 , 1000006961 , 1000002631 , 1000001917 , 1000005763 , 1000005631 , 1000004449 , 1000009531 , 1000003273 , 1000008937 , 1000008487 , 1000004459 , 1000001447 , 1000001699 , 1000003931 , 1000000097 , 1000004771 , 1000000181 , 1000001269 , 1000003769 , 1000008899 , 1000002821 , 1000002823 , 1000009559 , 1000009469 , 1000005959 , 1000005407 , 1000000453 , 1000009519 , 1000005791 , 1000005067 , 1000009733 , 1000008343 , 1000000919 , 1000007453 , 1000006697 , 1000008127 , 1000007707 , 1000006193 , 1000001677 , 1000003471 , 1000004233 , 1000002149 , 1000007557 , 1000001539 , 1000001501 , 1000003621 , 1000005973 , 1000004581 , 1000004633 , 1000002581 , 1000009421 , 1000004207 , 1000009711 , 1000004699 , 1000003751 , 1000009321 , 1000004569 , 1000002359 , 1000009541 , 1000005437 , 1000000933 , 1000007209 , 1000002307 , 1000003267 , 1000006307 , 1000007027 , 1000002089 , 1000002827 , 1000006607 , 1000006379 , 1000005991 , 1000000663 , 1000006223 , 1000001237 , 1000007347 , 1000009331 , 1000001819 , 1000006541 , 1000006781 , 1000009631 , 1000000103 , 1000003009 , 1000006421 , 1000005287 , 1000007719 , 1000007923 , 1000001927 , 1000007651 , 1000000271 , 1000003891 , 1000003051 , 1000006393 , 1000006229 , 1000004933 , 1000005353 , 1000008397 , 1000001203 , 1000004807 , 1000009403 , 1000006459 , 1000005341 , 1000002139 , 1000002499 , 1000001393 , 1000004869 , 1000001053 , 1000002193 , 1000007243 , 1000007237 , 1000008649 , 1000001791 , 1000001801 , 1000007537 , 1000002239 , 1000003967 , 1000006901 , 1000000033 , 1000008173 , 1000005491 , 1000005541 , 1000005103 , 1000003309 , 1000003747 , 1000009093 , 1000000439 , 1000000297 , 1000008089 , 1000005863 , 1000007467 , 1000007653 , 1000001647 , 1000001333 , 1000006093 , 1000002937 , 1000001969 , 1000006177 , 1000003111 , 1000009363 , 1000008313 , 1000000409 , 1000001137 , 1000006417 , 1000005403 , 1000005899 , 1000007873};
int n , k;
int arr[N];
char str[10];
int qcnt = 0;
int turn = 0;
inline int add(int a , int b , int mod){
	return (a + b < mod) ? (a + b) : (a + b - mod); 
}
inline int mult(int a , int b , int mod){
	return (1LL * a * b) % mod;
}
inline int fix(int num , int mod){
	return ((num % mod) + mod) % mod;
}
int main(){
	scanf("%d %d" , &n , &k);
	for(int i = 0 ; i <= n ; ++i){
		scanf("%s" , str);
		if(str[0] == '?'){
			arr[i] = lol;
			++qcnt;
		}
		else{
			arr[i] = 0;
			int j = 0;
			int mul = 1;
			if(str[0] == '-'){
				j = 1;
				mul = -1;
			}
			for(; str[j] ; ++j){
				arr[i] *= 10;
				arr[i] += str[j] - '0';
			}
			arr[i] *= mul;
			turn ^= 1;
		}
	}
	if(k == 0){
		if(arr[0] == 0){
			cout << "Yes\n";
			return 0;
		}
		if(arr[0] != lol){
			cout << "No\n";
			return 0;
		}
		if(turn == 0){
			cout << "No\n";
			return 0;
		}
		if(turn == 1){
			cout << "Yes\n";
			return 0;
		}
	}
	if(!qcnt){
		int sz = sizeof(mods) / sizeof(mods[0]);
		int sum[sz];
		int pw[sz];
		for(int i = 0 ; i < sz ; ++i){
			pw[i] = 1;
		}
		memset(sum , 0 , sizeof(sum));
		for(int i = 0 ; i <= n ; ++i){
			for(int j = 0 ; j < sz ; ++j){
				sum[j] = add(sum[j] , mult(fix(arr[i] , mods[j]) , pw[j] , mods[j]) , mods[j]);
				pw[j] = mult(pw[j] , fix(k , mods[j]) , mods[j]);
			}
		}
		int tot = 1;
		for(int j = 0 ; j < sz ; ++j){
			if(sum[j] != 0){
				tot = 0;
				break;
			}
		}
		if(tot){
			long long num = 0;
			for(int i = n ; i >= 0 ; --i){
				num *= k;
				num += arr[i];
			}
			if(num == 0){
				cout << "Yes\n";
			}
			else{
				cout << "No";
			}
		}
		else{
			cout << "No\n";
		}
		return 0;
	}
	for(int i = 0 ; i < qcnt - 1 ; ++i){
		turn ^= 1;
	}
	if(turn == 1){
		cout << "Yes\n";
	}
	else{
		cout << "No\n";
	}
}