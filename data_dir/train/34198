#include<bits/stdc++.h>
#define ll long long
#define f first
#define s second
#define pb push_back
using namespace std;
ll n,k,m1 = 1013,m2 = 1000000007,pw[1000005],pown=1,timer,ind,cur,l,r,hsh[2000005],cursz;
string s[100005];
ll t[7000005];
vector<ll>h[100005];
long long poow(long long base, long long power) {
    long long result = 1;
    while(power > 0) {
        if(power % 2 == 1) {
            result = (result*base) % m2;
        }
        base = (base * base) % m2;
        power = power / 2;
    }
    return result;
}

int main(){
    ios::sync_with_stdio(false);
    cin >> n;
    pw[0] = 1;
    for(int i=1; i<=1000000; i++){
        pw[i] = (pw[i - 1] * m1) % m2;
    }
    
    for(int i=1; i<=n; i++){
        cin >> s[i];
        for(int j=0; j<s[i].size(); j++){
            if(!j)h[i].pb((ll)(s[i][j]));
            else h[i].pb((h[i][j -1] + (ll)(s[i][j]) * pw[j]) % m2);
        }
    }
    
    for(int i=1; i<=n; i++){
        cur = 0;
        for(int j=0; j<s[i].size(); j++){
            if(j + 1 > cursz)break;
            ll z = (hsh[cursz] - hsh[cursz - j - 1] + m2) * poow(pw[cursz - j - 1] , m2 - 2);
            z %= m2;
            if(z == h[i][j]){
                cur = j + 1;
            }
        }
        for(int j=cur; j<s[i].size(); j++){
            cout << s[i][j];
            cursz++;
            hsh[cursz] = (ll)(s[i][j]) * pw[cursz - 1] + hsh[cursz - 1];
            hsh[cursz] %= m2;
        }
    }
    
    
    
    return 0;
}
