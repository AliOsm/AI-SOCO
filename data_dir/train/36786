#include<bits/stdc++.h>
using namespace std;

#define N 100100
int m, n, a[N], ans, b[N];

bool can(int tot, int cur, int st, int d){
	for(int i = st; i < n; i ++){
		if(cur >= a[i]){
			cur = a[i] + d + 1;
		}
		else{
			int id = i;
			if(a[i] > cur + d){ return 0; }
			if( i < n - 1 && a[i + 1] <= cur + d && a[i+1] != a[i] + 1){
				cur = a[i] + d + 1;
				i ++;
			}
			else{
				cur = a[i] + 1;
			}
		}
	}
	return cur >= a[n] - tot;
}

bool OK(int d){
	if(a[1] > a[0] + 2 * d + 1) return false;
	if(a[1] < a[0] + d){
		if(can(d - a[1] + a[0], a[0] + d + 1, 2, d)) return true;
	}
	if(can(0, a[0] + d + 1, 1, d)) return true;
	return false;
}

int main(){
//	freopen("e.in", "r", stdin);
	srand(time(NULL));
	scanf("%d %d", &m, &n);

	for(int i = 0; i < n; i ++) scanf("%d", b + i);

	int ii = rand() % n;

	for(int i = 0; i < n; i ++){
		a[i] = b[(i + ii) % n];
		if(i > 0 && a[i] < a[i-1]) a[i] += m;
	} a[n] = a[0] + m;
  // for(int i = 0; i <= n; i ++) printf("%d ", a[i]); puts("");
	int st = -1, en = m, mid;
	while(st < en - 1){
		mid = st + en >> 1;
		if(OK(mid)) en = mid;
		else st = mid;
	}
	ans = en;
	reverse(a, a + n + 1);
	for(int i = 0; i <= n; i ++) a[i] = -a[i];
	st = -1, en = m;
	while(st < en - 1){
		mid = st + en >> 1;
		if(OK(mid)) en = mid;
		else st = mid;
	}
	ans = min(en, ans);
	cout << ans << endl;
}
