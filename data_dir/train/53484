//Solution by Tima
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 9;

int n,a,b,k;
char c[N];
int s[N];

ll modpow(ll a,ll b){
	ll res = 1;
	while(b){
		if(b & 1) res = res * a % mod;
		a = a * a % mod;
		b >>= 1;
	}
	return res;
}

int main () {
	scanf("%d%d%d%d", &n, &a, &b, &k);
	scanf("\n%s",c);
	for(int i = 0; i < k; i++){
	    if(c[i] == '+') s[i] = 1;
	   	else s[i] = -1;
	}
	ll cur = 0;
	swap(a,b);
	for(int i = 0; i < k; i++){
		cur = (cur + (modpow(a,i) * modpow(b, n - i) * s[i] % mod) + mod) % mod;
	}
	int m = (n + 1) / k;
	ll x = modpow(a,k) * modpow(modpow(b, k), mod - 2) % mod,res;
	if(x == 1){
		res = m;
	}
	else res = (modpow(x, m) - 1 + mod) % mod * modpow(x - 1, mod - 2) % mod;
	printf("%lld", res * cur % mod);

return 0;
}