#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pb push_back
int in(){int32_t x ; scanf("%d",&x) ;  return x ;}
inline long long lin() {long long x ; scanf("%lld",&x) ; return x ;}
const int maxn = 1e6 + 10;
const int mod = 1e9 + 7;
const int MAX_VAL = 1e18 + 10;
vector<int> poss[2],primes[2];
int k;
inline void recursion(vector<int> &primes , int mul , int cur , vector<int> &poss)
{
    if (cur >= primes.size()){
        poss.push_back(mul);
        return;
    }
    recursion(primes, mul, cur+1, poss);
    while (mul <= MAX_VAL/primes[cur]){
        mul *= primes[cur];
        recursion(primes,mul,cur+1,poss);
    }
}

inline bool can(int x)
{
    int cur = (int)poss[0].size() - 1;
    int ret = 0;
    for (int pt = 0 ; pt < poss[1].size() ; pt ++)
    {
        while (cur >= 0 && poss[1][pt] > x/poss[0][cur]) cur --;
        ret += cur + 1;
        
    }
    return ret >= k;
}
int32_t main()
{
    int n = in();
    for (int i = 0 ; i < n ; i++) primes[i&1].push_back(in());
    for (int i = 0 ; i < 2 ; i ++){
        recursion(primes[i],1,0,poss[i]);
        sort(poss[i].begin(),poss[i].end());
    }
    k = lin();
    int low = 0 , hi = 1e18 ;
    while(low + 1 < hi)
    {
        int mid = (low + hi) >> 1;
        if (can(mid)) hi = mid;
        else low = mid;
    }
    cout << hi << endl;
}
