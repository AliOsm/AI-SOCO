#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5) + 10, inf = int(1e9)  + 7;

int n,a[N], d[N], mx[N], ans = inf;
multiset <int> st;
vi g[N];

int main () {
	scanf("%d",&n);
	for(int i = 1; i <= n; i++){
		scanf("%d",&a[i]);
		st.insert(a[i]);
	}
	for(int i = 1,u,v; i < n; i++){
		scanf("%d%d",&u,&v);
		g[u].pb(v);
		g[v].pb(u);
	}
	for(int i = 1; i <= n; i++){
		int cur = a[i];
		int v = i;
		st.erase(st.find(a[i]));
		for(int j = 0; j < g[v].size(); j++){
			int to = g[v][j];
			cur = max(cur, a[to] + 1);
			st.erase(st.find(a[to]));
		}
		if(st.size() > 0){
			cur = max(cur, (*st.rbegin()) + 2);
		}
		for(int j = 0; j < g[v].size(); j++){
			int to = g[v][j];
			st.insert(a[to]);
		}
		st.insert(a[i]);
		ans = min(ans,cur);
	}
	printf("%d", ans);
return 0;
}