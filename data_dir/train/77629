#include <bits/stdc++.h>
using namespace std;
#define ll long long
vector <ll> zpr(200500);
vector <pair <ll,ll> > car(200500);
bool cmp(pair <ll,ll> A, pair <ll,ll> B)
{
    if (A.second<B.second) return true;
    if (A.second>B.second) return false;
    return A.first<B.first;
}
ll n,k,s,t;
bool can(ll x) // может ли добраться вовремя, используя бак вместимостью x
{
    ll i, cur = 0;
    for(i = 1; i<=k+1; i++)
    {
        if (zpr[i]-zpr[i-1]>x) return false;
        ll dist = zpr[i] - zpr[i-1];
        if (dist*2<=x) cur+=dist;
        else
        {
            cur+=(dist*2-(x - dist));
        }
    }
    if (cur<=t) return true;
    else return false;
}
ll bin_search(ll levy, ll pravy)
{
    if (pravy-levy == 1)
    {
        return pravy;
    }
    else
    {
        ll mid  = (pravy+levy) / 2;
        if (can(mid)) return bin_search(levy, mid);
        else return bin_search(mid, pravy);
    }
}
int main()
{
  //  freopen("input.txt","r",stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n>>k>>s>>t;
    ll i;
    for(i=0; i<n; i++)
        cin>>car[i].first>>car[i].second;
        sort(car.begin(), car.begin()+n, cmp);
        /*
        for(i=0; i<n; i++)
            cout<<car[i].first<<" "<<car[i].second<<endl;
            */
        for(i=1; i<=k; i++)
            cin>>zpr[i];
            zpr[0] = 0;
            zpr[k+1] = s;
            sort(zpr.begin(), zpr.begin()+k+2);
            ll least = bin_search(0,1000000000000);
        //    cout<<least;
            ll min_cost = 1000000000000;
            for(i=0; i<n; i++)
            {
        if (car[i].second>=least)
            min_cost = min(min_cost, car[i].first);
            }
        if (min_cost == 1000000000000)
            cout<<-1;
        else
            cout<<min_cost;
    return 0;
}
