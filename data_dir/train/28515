#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll N=1e3+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m=mod){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

ll dp[N];
vector<ll> seg[4*N];

void build(ll low,ll high,ll pos)
{
  if(low==high)
  {
    seg[pos].pb(dp[low]);
    return;
  }
  ll mid=(low+high)/2;
  build(low,mid,2*pos+1);
  build(mid+1,high,2*pos+2);
  merge(all(seg[2*pos+1]),all(seg[2*pos+2]),back_inserter(seg[pos]));
}

ll query(ll low,ll high,ll qlow,ll qhigh,ll pos,ll val)
{
  if(qlow>high||qhigh<low){return 0;}
  if(qlow<=low&&qhigh>=high)
  {
    ll ub=upper_bound(all(seg[pos]),val)-seg[pos].begin();
    return ub;
  }
  ll mid=(low+high)/2;
  return query(low,mid,qlow,qhigh,2*pos+1,val)+query(mid+1,high,qlow,qhigh,2*pos+2,val);
}

int main()
{
  ll n,m,q,l,r;
  string s,t;
  cin>>n>>m>>q;
  cin>>s>>t;
  for(ll i=0;i<n;i++){dp[i]=INF;}
  for(ll i=0;i<n;i++)
  {
    if(s[i]==t[0])
    {
      ll z=0,ff=0,last=-1;
      string k="\0";
      for(ll j=i;j<n;j++)
      {
        if(s[j]==t[z]){k+=s[j];}
        else{break;}
        last=j;
        z++;
        if(z==m){ff=2;break;}
      }
      if(ff){dp[i]=last;}
    }
  }
  build(0,n-1,0);
  while(q--)
  {
    cin>>l>>r;
    l--;r--;
    cout<<query(0,n-1,l,r,0,r)<<endl;
  }
}
