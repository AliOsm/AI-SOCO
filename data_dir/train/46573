#include <bits/stdc++.h>
#define LL long long
using namespace std;

const int N = 1000+7;

int a[N][N];

vector<int> rows[N];
vector<int> columns[N];

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n, m;
    cin>>n>>m;

    for (int i=0; i<n; i++)
        for (int j=0; j<m; j++) {
            cin>>a[i][j];
            rows[i].push_back(a[i][j]);
            columns[j].push_back(a[i][j]);
        }

    for (int i=0; i<n; i++) {
        sort(rows[i].begin(), rows[i].end());
        rows[i].erase(unique(rows[i].begin(), rows[i].end()), rows[i].end());
    }

    for (int i=0; i<m; i++) {
        sort(columns[i].begin(), columns[i].end());
        columns[i].erase(unique(columns[i].begin(), columns[i].end()), columns[i].end());
    }
//
//    for (int i=0; i<m; i++) {
//        for (int x: columns[i])   cout<<x<<" ";
//        cout<<endl;
//    }

    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            int l1 = lower_bound(rows[i].begin(), rows[i].end(), a[i][j]) - rows[i].begin();
            int l2 = lower_bound(columns[j].begin(), columns[j].end(), a[i][j]) - columns[j].begin();

            int h1 = rows[i].size() - (upper_bound(rows[i].begin(), rows[i].end(), a[i][j]) - rows[i].begin());
            int h2 = columns[j].size() - (upper_bound(columns[j].begin(), columns[j].end(), a[i][j]) - columns[j].begin());
//            cout<<"--->"<<i<<" "<<j<<" "<<l1<<" "<<h1<<" "<<l2<<" "<<h2<<" ";
            cout<<max(l1, l2) + 1 + max(h1,h2)<<" ";
//            cout<<endl;
        }
        cout<<"\n";
    }

}


