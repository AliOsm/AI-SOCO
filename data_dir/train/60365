#include <bits/stdc++.h>

const double eps = 1e-20;
const double Inf = 1e30;
double A[4];

bool check(double range) {
    double l = Inf,r = -Inf;
    for (int mask = 0; mask < 1 << 4; ++ mask) {
        double B[4];
        for (int i = 0; i < 4; ++ i) {
            if (mask >> i & 1)
                B[i] = A[i] + range;
            else
                B[i] = A[i] - range;
        }
        double tmp = B[0] * B[3] - B[1] * B[2];
        l = std::min(l,tmp);
        r = std::max(r,tmp);
    }
    if (l < eps && r > -eps)
        return true;
    return false;
}

double work() {
    double l = 0;
    double r = std::max(std::max(std::abs(A[0]),std::abs(A[1])),
        std::max(std::abs(A[2]),std::abs(A[3])));
    int step = 500;
    while (step --) {
        double mid = (l + r) / 2;
        if (check(mid)) {
            r = mid;
        } else {
            l = mid;
        }
    }
    return r;
}

int main() {
    scanf("%lf%lf%lf%lf",A + 0,A + 1,A + 2,A + 3);
    printf("%.13f\n",work());
}