#include <iostream>
#include <stdio.h>
#include <bits/stdc++.h>
#include <math.h>
#include <string>
#include <sstream>
#define ll long long
#define F first
#define S second
#define pb push_back
#define ld long double
#define pll pair<long long,long long>
#define pld pair<long double,long double>
#define ios     ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
using namespace std;
ll mod=1000000007;
ll gcd (ll a,ll b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}
ll modularExp(ll x,ll n,ll mod)
{
    ll result=1;
    while(n>0)
    {
        if(n%2==1)
            result=(result*x)%mod;
        x=((x%mod)*(x%mod))%mod;
        n=n/2;
    }
    return (result)%mod;
}
bool isPrime(ll n)
{
    for(ll i=2;i*i<=n;i++)
        if(n%i==0)
            return false;
    return true;
}
ll n;
vector<ll> cnt(3);
ll nb,ns,nc;
ll cb,cs,cc;
ll r;
bool check(ll x)
{
    ll reqb,reqs,reqc;
    reqb=x*cnt[0];
    reqs=x*cnt[1];
    reqc=x*cnt[2];
    ll cost=cb*max(0LL,reqb-nb)+cs*max(0LL,reqs-ns)+cc*max(0LL,reqc-nc);
    if(cost<=r)
        return true;
    else 
        return false;
}

int main()
{
    ios;
    string s;
    cin>>s;
    cin>>nb>>ns>>nc;
    cin>>cb>>cs>>cc;
    cin>>r;
    ll n=s.length();
    ll i;
    for(i=0;i<n;i++)
    {
        if(s[i]=='B')
            cnt[0]+=1;
        else if(s[i]=='S')
            cnt[1]+=1;
        else 
            cnt[2]+=1;
    }
   // cout<<cnt[0]<<" "<<cnt[1]<<" "<<cnt[2]<<"**\n";
    ll l=0;
    ll r=1e15;
    while(r-l>1)
    {
       // cout<<l<<"**"<<r<<"\n";
        ll mid=(l+r)/2;
        if(check(mid))
            l=mid;
        else
            r=mid-1;
    }
    if(check(r))
    cout<<r;
    else 
    cout<<l;
    
    
    
    
    
    
    
    
}
