#include <bits/stdc++.h>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define forall(it, v) for(auto it = v.begin(); it != v.end(); ++it)
#define dforn(i, n) for(int i = ((int) n) - 1; i >= 0; i--)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
typedef long long ll;
const int MAXN = 200050;

int h, C[MAXN], n;
bool tmp, ok;
int ind, A[MAXN], B[MAXN], l1, l2;

void createNormal(){
  int p = 0;
  l1 = 0;
  forn(i, h + 1){
    forn(j, C[i]){
      A[p++] = l1;
    }
    l1 = p;
  }
}

void createAmorfo(){
  int p = 0;
  l1 = l2 = 0;
  forn(i, h + 1){
    forn(j, C[i]){
      if(ind == i && j == C[i] - 1){
        B[p++] = l2;
      }
      else {
        B[p++] = l1;
      }
    }
    l1 = p;
    l2 = p - 1;
  }
}

int main() {
  scanf("%d", &h);
  forn(i, h + 1){
    scanf("%d", &C[i]); n += C[i];
    if(ok) continue;
    if(C[i] > 1){
      if(tmp){
        ok = true;
        ind = i;
      }
      else    tmp = true;
    }
    else {
      tmp = false;
    }
  }
  if(!ok){
    printf("perfect\n");
    return 0;
  }
  createNormal();
  createAmorfo();
  printf("ambiguous\n");
  forn(i, n){
    if(i) printf(" ");
    printf("%d", A[i]);
  }
  puts("");
  forn(i, n){
    if(i) printf(" ");
    printf("%d", B[i]);
  }
  puts("");
  return 0;
}
