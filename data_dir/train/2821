#include<bits/stdc++.h>

using namespace std;

using ll = long long int;
using ull = unsigned long long int;
using dd = double;
using ldd = long double;

#define ff first
#define ss second
#define all(x) (x).begin(), (x).end()

//debug defines
#ifdef HOME
    #define debug(x) cout << #x << " " << x << endl;
    #define debug_p(x) cout << #x << " " << x.ff << " " << x.ss << endl;
    #define debug_v(x) cout << #x << " "; for (auto ioi : x) cout << ioi << " "; cout << endl;
    #define debug_vp(x) cout << #x << " "; for (auto ioi : x) cout << '[' << ioi.ff << " " << ioi.ss << ']'; cout << endl;
    int jjj;
    #define wait() cin >> jjj;
    #define PO cout << "POMELO" << endl;
    #define OL cout << "OLIVA" << endl;
    #define gen_clock(x) ll x = clock();
    #define check_clock(x) cout << "Time spend: " << clock() - x << endl; x = clock();
#else
    #define debug(x) 0;
    #define debug_p(x) 0;
    #define debug_v(x) 0;
    #define debug_vp(x) 0;
    #define wait() 0;
    #define PO 0;
    #define OL 0;
    #define gen_clock(x) 0;
    #define check_clock(x) 0;
#endif // HOME
//end of debug defines

void solve() {
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        ll a, b;
        cin >> a >> b;
        if ( a > b)
            swap(a, b);
        ll d = b - a;
        a -= d;
        b -= 2 * d;
        if (a < 0 || b < 0) {
            cout << "NO" << '\n';
            continue;
        } else if (a == 0 || b == 0) {
            if (a != 0 || b != 0) {
                cout << "NO" << '\n';
                continue;
            }
            cout << "YES" << '\n';
            continue;
        } else {
            if (a % 3 == 0 && b % 3 == 0) {
                cout << "YES" << '\n';
            } else {
                cout << "NO" << '\n';
            }
        }
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int t;
    t = 1;
   // cin >> t;
    for (int i = 0; i < t; ++i)
        solve();
    return 0;
}
/*
*/

