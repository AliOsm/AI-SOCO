#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int n;
vector<ll> arr, last, ans;

void check(int num) {
	vector<ll> mn(n);
	for(int i = n - 1; i >= 0; --i) {
		mn[i] = last[i];
		if(i < n - 1) {
			mn[i] = min(mn[i], mn[i + 1]);
		}
	}
	ll cur = 0,
		best_ans = ll(1e15);
	for(int i = 0; i < n; ++i) {
		best_ans = min(best_ans, -min(cur, mn[i] - arr[i]));
		cur = min(cur, last[i]);
	}
	cur = 0;
	for(int i = 0; i < n; ++i) {
		if(-min(cur, mn[i] - arr[i]) == best_ans) {
			arr[i] = 0;
			break;
		}
		cur = min(cur, last[i]);
	}
	for(int i = 0; i < n; ++i) {
		last[i] = arr[i];
		if(i) {
			last[i] += last[i - 1];
		}
	}
	ans[num] = best_ans;
}

int main (int argc, char *argv[])
{
	int m;
	scanf("%d%d", &n, &m);
	arr.resize(n);
	for(int i = 0; i < n; ++i) {
		scanf("%lld", &arr[i]);
	}
	last.resize(n);
	ans.resize(n + 1, 0);
	for(int i = 0; i < n; ++i) {
		last[i] = arr[i];
		if(i) {
			last[i] += last[i - 1];
		}
		ans[0] = max(ans[0], -last[i]);
	}
	for(int j = 1; j <= n; ++j) {
		check(j);
	}
	while(m--) {
		ll b;
		scanf("%lld", &b);
		int l = 0,
			r = n;
		while(l != r) {
			int mid = (l + r) >> 1;
			if(ans[mid] <= b) {
				r = mid;
			} else {
				l = mid + 1;
			}
		}
		printf("%d\n", l);
	}

	return 0;
}

