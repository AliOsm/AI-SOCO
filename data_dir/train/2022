#include <iostream>
#include <map>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <vector>
#include <cstring>
#include <cstdlib>

#define mp make_pair
#define pb push_back
#define ppb pop_back
#define X first
#define Y second

using namespace std;

#define next next_

long long md = 1000000007;

int dp[1001][1001][50];

int C[3000][3000];

int ii, ll, jj;

long long fa[3000];

int main(){
   int T;
   
   dp[0][0][0] = 1;
   
   for (int i = 1; i <= 1000; i++){
       for (int last = 1; last <= i; last++){
           for (int j = 1; j < 50; j++){
               dp[i][last][j] = dp[i][last - 1][j];
               ii = i - last;
               ll = last - 1;
               if (ii < ll) ll = ii;
               jj = j - 1;
               dp[i][last][j] += dp[ii][ll][jj];
               
               if (dp[i][last][j] >= md) dp[i][last][j] -= md;
           }
       }
   }
   
   for (int i = 0; i < 3000; i++){
       C[i][0] = 1;
       for (int j = 1; j <= i; j++){
           C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]);
           if (C[i][j] >= md) C[i][j] -= md;
       }
   }   
   fa[0] = 1;
   for (int i = 1; i <= 1000; i++){
        fa[i] = (fa[i - 1] * i) % md;
   }
   for (cin >> T; T--;){
       int n, k;
       scanf("%d%d",&n,&k);
       if (k * (k - 1) / 2 > n){
             printf("0\n");
             continue;
          }
       
       int ans = 0;
       for (int s = 1; s <= n; s++){
           ans = (((long long)dp[s][s][k]) * C[n + k - s][k] % md * fa[k] + ans) % md;
  //         cout << s << " " << dp[s][s][k] << endl;
       }
       
       printf("%d\n", ans);
   }
//   system("pause");
   
   return 0;
}
