/*==============================================*\
ID:          shahidul_brur

Name:     Md. Shahidul Islam
Study:      CSE, BRUR
Address:  Rangpur, Bangladesh

 mail: shahidul.cse.brur@gmail.com
 FB  : fb.com/shahidul.brur
 Blog: shahidul-brur.blogspot.com(in Bengali),
       shahidul-brur-en.blogspot.com(in English)
\*===============================================*/
#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> // Common file
//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;

//#pragma GCC optimize("O3")
//#pragma GCC optimize("unroll-loops")
//#pragma GCC target("avx,avx2,fma")

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef pair<ll, int> li;
typedef pair<int, ll> il;
typedef vector<ii> vii;
typedef vector<il> vil;
typedef vector<li> vli;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define sz size()
#define all(a)  a.begin(), a.end()
#define mem(a, b)     memset(a, b, sizeof(a))
#define f0(i,b) for(int i=0;i<(b);i++)
#define f1(i,b) for(int i=1;i<=(b);i++)
#define f2(i,a,b) for(int i=(a);i<=(b);i++)
#define fr(i,b,a) for(int i=(b);i>=(a);i--)
#define rep(i,a,b,c) for(int i=(a);i!=(b);i+=(c))

int dx8[] = {0, 0, 1, 1, 1, -1, -1, -1};
int dy8[] = {1,-1, 1, -1, 0, 0, -1, 1};
int dx4[] = {0, 0, 1, -1};
int dy4[] = {1, -1, 0, 0};

const double pi = acos(-1.0);
const double eps = 1e-6;
const int mod = (int)1e9+7;
const int maxn = (int)1e6+5;
const int logn = 20;
int cnt[maxn], mn[maxn], cnt_s[maxn];
bool same[maxn];
int main()
{
    ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n;
    cin>>n;
    f1(i,n)
    {
        int l; cin>>l;
        mn[i] = INT_MAX;
        int mx = 0, sm=0;
        int p;
        f1(j,l)
        {
            int x; cin>>x;
            if(j>1 && x>p) same[i]=1;
            p=x;
            mn[i] = min(mn[i], x);
            mx = max(mx, x);
        }
        cnt[mx]++;
        if(same[i]) cnt_s[mx]++;
    }
    f1(i,1000000)
    {
        cnt_s[i]+=cnt_s[i-1];
    }
    ll res = 0LL;
    fr(i,1000002,0) cnt[i]+=cnt[i+1];
    f1(i,n)
    {
        if(same[i]) res+=n;
        else {
                res+=cnt[mn[i]+1];
                res+=cnt_s[mn[i]];
        }
//        if(same[i]){
//            res+=cnt[cnt[mn[i]+1]]-1;
//        }
//        else res+=cnt[mn[i]+1];
    }
    cout << res;
    return 0;
}

