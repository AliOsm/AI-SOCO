#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define MP make_pair
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < b; ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define MAGIC0
mt19937 rnd(time(0)); //rnd()

typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e5 + 7;
const double PI = acos(-1.);
const double EPS = 1e-8;
const int MOD = 1000 * 1000 * 1000 + 7;

int x[1005][1005];
set<int> rowV[1005], colV[1005];
VI row[1005], col[1005];

map<int, PII> r[1005], c[1005];

int main()
{
//	ios_base::sync_with_stdio(0);
	int n, m;
	cin >> n >> m;
	FOR(i, 1, n + 1)
	{
		FOR(j, 1, m + 1)
		{
			scanf("%d", &x[i][j]);
			rowV[i].insert(x[i][j]);
		}

		int cnt = 0;
		for(auto el : rowV[i])
		{
			r[i][el] = MP(cnt, SZ(rowV[i]) - cnt - 1);
			++cnt;
		}
	}

	FOR(i, 1, m + 1)
	{
		FOR(j, 1, n + 1)
		{
			colV[i].insert(x[j][i]);
		}
		int cnt = 0;
		for(auto el : colV[i])
		{
			c[i][el] = MP(cnt, SZ(colV[i]) - cnt - 1);
			++cnt;
		}
	}

	FOR(i, 1, n + 1)
	{
		FOR(j, 1, m + 1)
		{
//			cout << c[j][x[i][j]].f << ' ' << r[i][x[i][j]].f << ' ' << c[j][x[i][j]].s << ' ' << r[i][x[i][j]].s << endl;
			int a = max(c[j][x[i][j]].f, r[i][x[i][j]].f);
			int b = max(c[j][x[i][j]].s, r[i][x[i][j]].s);
			printf("%d ", a + b + 1);
		}
		printf("\n");
	}

	return 0;
}
