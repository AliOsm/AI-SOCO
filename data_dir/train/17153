#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>
 
using namespace std;

#define int long long

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    
   	int n, c;
   	cin >> n >> c;
   	n--;
   	vector<int> a(n);
   	vector<int> b(n);
   	for (auto &t : a) {
   		cin >> t;
   	}
   	for (auto &t : b) {
   		cin >> t;
   	}
   	//dp[i] = min(dp[j] + psa[i] - psa[j]) = psa[i] + min(dp[j] - psa[j])
   	vector<int> psa(n + 1);
   	for (int i = 0; i < n; i++) {
   		psa[i + 1] = a[i] + psa[i];
   	}
   	vector<int> psb(n + 1);
   	for (int i = 0; i < n; i++) {
   		psb[i + 1] = b[i] + psb[i];
   	}
   	vector<int> dp(n + 1);
   	set<int> s1, s2;
   	s1.insert(dp[0] - psa[0]);
   	s2.insert(dp[0] - psb[0]);
   	for (int i = 1; i <= n; i++) {
   		dp[i] = *(s1.begin()) + psa[i];
   		dp[i] = min(dp[i], *s2.begin() + psb[i] + c);
   		s1.insert(dp[i] - psa[i]);
   		s2.insert(dp[i] - psb[i]);
   	}
   	for (auto t : dp) {
   		cout << t << ' ';
   	}
   	cout << endl;
}