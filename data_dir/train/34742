#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define double long double
ll n, k;
    ll v = 0;
map < ll, vector <ll> > a;
vector <ll> b(100500, 0), pref(100500, 0);
vector <ll> p(52, 1);
ll bin_search(ll num, ll levy, ll pravy, ll key)// сколько позиций в массиве num таких, что < key
{
    if (a[num].size()==0) return 0;
    if (key<a[num][0]) return 0;
    ll t = a[num].size();
    if (key>=a[num][t - 1]) return t;
    if (pravy - levy == 1) return pravy;
    else
    {
        ll mid = (pravy + levy) / 2;
        if (a[num][mid] > key) return bin_search(num, levy, mid, key);
        else
            return bin_search(num, mid, pravy, key);
    }
}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin>>n>>k;
    ll i,j;
    a[0].push_back(0);
    for(i = 1; i<=n; i++)
    {
        cin>>b[i];
        pref[i] = pref[i - 1] + b[i];
        a[ pref[i] ].push_back(i);
    }
    /*
    cout<<"www"<<endl;
    for(i=0; i<a[6].size(); i++)
    {
        cout<<a[6][i]<<" ";
    }
    cout<<endl;
    cout<<bin_search(6, 0, a[2].size(), 2);
    */
    if (k!=1 && k!=-1)
    {
    p[0] = 1;
    for(i = 1; i<=55; i++)
    {
        v++;
        p[i] = p[i - 1] * k;
        if (p[i]>1e14) break;
    }
    }
    if (k == 1)
    {
        p[0] = 1;
        v = 0;
    }
    if (k == -1)
    {
        p[0] = -1;
        p[1] = 1;
        v = 1;
    }
    ll ans = 0;
    //cout<<"v = "<<v<<endl;
        for(i = 1; i<=n; i++) // отрезок будет заканчиваться в  i позиции
        {
            //cout<<"last = "<<i<<endl;
            for(j=0; j<=v; j++) // степень будет равна j
            {
                ll qqq = pref[i] - p[j];
                ll vvv = a[qqq].size();
            ans += bin_search(qqq, 0, vvv-1, i );
                //cout<<"power = "<<j<<"  rez = "<<ans<<endl;
            }

        }
    cout<<ans;
    return 0;
}

