
#include <bits/stdc++.h>
#define lli long long int
using namespace std;

int dp[5005][5005];		// dp[i][j] = in row i -> how many consecutive 1 exist started from j'th col
						// row -> 0 1 1 1 0 1 1 0 1
						// dp  -> 0 3 2 1 0 2 1 0 1

int main()
{
	ios_base::sync_with_stdio(false);
	
	int n,m;
	cin>>n>>m;
	string s[5005];
	
	for (int i=0 ; i<n ; i++) cin>>s[i];
	
	for (int i=0 ; i<n; i++)
	{
		dp[i][m-1] = s[i][m-1] == '1';
		for (int j=m-2 ; j>=0 ; j--)
			dp[i][j] = s[i][j]=='1' ? dp[i][j+1]+1 : 0;
	}
	
	int ans = 0;
	for (int j=0 ; j<m ; j++)		// suppose j'th col is our left edge
	{
		int c[5005] = {};
		for (int i=0 ; i<n; i++)	// collect number of consecutive 1s started from this col for each row
			c[ dp[i][j] ]++;
		
		// rearrange rows by decreasing c[]
		// something like this :
		/*
			1111		
			1111        t=2 , k=4
			111			t=3 , k=3
			1
			1			t=5 , k=1
		*/
		int t = 0;
		for (int k=m ; k>0 ; k--)
		{
			t += c[k];
			ans = max(ans , k*t);
		}
	}
	
	cout<<ans;
	
	return 0;
}