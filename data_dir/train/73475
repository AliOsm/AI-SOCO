#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <cassert>
#include <ctime>


using namespace std;

#ifdef WIN32
    #define LLD "%I64d"
#else
    #define LLD "%lld"
#endif

typedef pair<int, int> pii;
typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef vector<ll> vll;
typedef vector<vll> vvll;

ll rdtsc() {
    ll tmp;
    asm("rdtsc" : "=A"(tmp));
    return tmp;
}

#define TASKNAME "text"
#define pb push_back
#define mp make_pair
#define EPS (1e-9)
#define INF ((int)1e9)
#define sqr(x) ((x) * (x))         
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#define sz(x) ((int)(x).size())

inline int gcd(int a, int b) {
	return b ? gcd(b, a % b) : a;
}

int main() {
	srand(rdtsc());
#ifdef DEBUG
	freopen(TASKNAME".in", "r", stdin);
	freopen(TASKNAME".out", "w", stdout);
#endif
	
	int h, w, y, x, a, b;
	while (scanf("%d%d%d%d%d%d", &h, &w, &y, &x, &a, &b) >= 1) {
		int d = gcd(a, b);
		a /= d, b /= d;

		int k = min(h / a, w / b);
		a *= k, b *= k;
		eprintf("%d %d\n", a, b);
		int y1 = y - (a + 1) / 2, x1 = x - (b + 1) / 2;
		y1 = max(y1, 0);
		x1 = max(x1, 0);
		y1 = min(y1, h - a);
		x1 = min(x1, w - b);
		printf("%d %d %d %d\n", y1, x1, y1 + a, x1 + b);
		//break;                              
	}
	return 0;
}
