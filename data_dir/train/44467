//ITNOA
#include<bits/stdc++.h> 

using namespace std;

#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second

typedef long long ll;
typedef long double ld;

const int maxN = 50 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 330;
const int maxL = 302;

int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};

char a[maxN][maxN];
int sx, sy, tx, ty;
int mark[26], cnt;
string res;
int n, m, k;

int dis[maxN][maxN];
pair<int,int> q[2500];
bool is_ok(int x, int y)
{
    if(x < 0 || y < 0 || n <= x || m <= y) return false;
    return true;
}
pair<int,int> par[maxN][maxN];
int proi[maxN][maxN];

bool cmp(const pair<int,int> &p, const pair<int,int> &q)
{
    if(a[p.X][p.Y] != a[q.X][q.Y]) return (a[p.X][p.Y] < a[q.X][q.Y]);

    pair<int,int> pp = par[p.X][p.Y], qq = par[q.X][q.Y];
    return (proi[pp.X][pp.Y] < proi[qq.X][qq.Y]);
}

string ss;
void solve(int x, int y)
{
    if(x == tx && y == ty) return;
    if(x != sx || y != sy) ss += a[x][y];
    solve(par[x][y].X, par[x][y].Y);
}

void check()
{
    memset(dis,0,sizeof dis);
    memset(proi,0,sizeof proi);
    memset(par,-1,sizeof par);
    
    dis[tx][ty] = 1;
    int st=0,en=0;
    q[en++] = {tx,ty};
    
    while(st < en)
    {
	if(st && dis[q[st].X][q[st].Y] > dis[q[st-1].X][q[st-1].Y])
	{
	    sort(q+st,q+en,cmp);
	    int cnt = 0;
	    rep(i,st+1,en)
	    {
		if(cmp(q[i-1], q[i])) cnt ++;
		proi[q[i].X][q[i].Y] = cnt;
	    }
	}
	
	int x = q[st].X, y = q[st].Y; st ++;
	if(make_pair(x,y) == make_pair(sx, sy)) break;
	
	rep(i,0,4)
	{
	    int v = x+dx[i], u = y+dy[i];
	    if(is_ok(v,u) && dis[v][u] == 0 && (a[v][u] == 'S' || mark[a[v][u]-'a'] == 1))
	    {
		dis[v][u] = dis[x][y]+1;
		q[en++] = {v,u};				
		par[v][u] = {x,y};
	    }
	}
    }
    if(dis[sx][sy] == 0) return;
    if(dis[sx][sy]-2 > (int)res.size()) return;

    ss = ""; solve(sx,sy);
    if(dis[sx][sy]-2 < (int)res.size())
	res = ss;
    else
	res = min(res, ss);
}

void bt(int t)
{
    if(t == 26) return;
    if(cnt < k)
    {
	mark[t] = 1; cnt ++;
	check(); bt(t+1);
	mark[t] = 0; cnt --;
    }
    bt(t+1);    
}

int32_t main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    cin >> n >> m >> k;
    rep(i,0,n) rep(j,0,m)
    {
	cin >> a[i][j];
	if(a[i][j] == 'S')
	    sx = i, sy = j;
	if(a[i][j] == 'T')
	    tx = i, ty = j;
    }

    res = string(3000, 'z');
    bt(0);
    if(res.size() == 3000) { cout << -1 << endl; return 0; }
    cout << res << endl;
    return 0;    
}
