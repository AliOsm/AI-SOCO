
 #include "bits/stdc++.h"
 using namespace std;
 int N , block;
 vector<int> V(200005) , Array(200005);
 vector<int>::iterator it;

 int query( int index ){
 	int Count = 0 , x , i , pos , end;
 	if( Array[index] <= index + 1 ) return 0;
 	if( Array[index] >= N ) x = N - 1;
 	else x = Array[index] - 1;
 	pos = index / block;
 	end = x / block;

 	for( i = pos + 1 ; i < end ; ++i ){
 		it = lower_bound( V.begin() + i * block , V.begin() + (i+1) * block , index + 1 );
 		if( *it < index + 1 ) continue;
 		Count += (V.begin() + (i + 1) * block) - it;
 	}

 	if( pos == end ){
 		for( i = index + 1 ; i <= x ; ++i )
 			if( Array[i] > index ) ++Count;

 		return Count;
 	}

 	int limit = (pos + 1) * block;

 	for( i = index + 1 ; i < limit ; ++i )
 		if( Array[i] > index ) ++Count;
 	for( i = end * block ; i <= x ; ++i )
 		if( Array[i] > index ) ++Count;

 	return Count;
 } 

 int main(){
 	int i;
 	long long Ans = 0;
 	scanf( "%d" , &N );
 	block = sqrt( N );

 	for( i = 0 ; i < N ; ++i ){
 		scanf( "%d" , &Array[i] );
 		V[i] = Array[i];
 	}

 	for( i = 0 ; i < N ; i += block ){
 		if( i + block > N ) sort( V.begin() + i , V.begin() + N );
 		else sort( V.begin() + i , V.begin() + i + block );
 	}

 	for( i = 0 ; i < N ; ++i )
 		Ans = Ans + query( i );

 	printf( "%lld\n" , Ans );
 	return 0;
 }
