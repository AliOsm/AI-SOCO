// 15.08.2016   367 B
//

/*

B. ���������� �������
����������� �� ������� �� ����   2 �������
������� ������� ����� ����� �������� ����� ������, ������� ��� ����� ����� ��������� � �����-������ ����.
��� � ��� ������������, ������� ����� ����� ������� "������", ������� �������� � n ��������� ��������� ������.
��������, ��� � i-� �������� ������� ������� ����� xi �����.
������� ��������� �������� ���� ������� ������ �������� ������� �� ���������� q ����.
�� �����, ��� � i-� ���� � ���� � ����� ����� mi �����, � ������ �� ����� ��� ������� �� ���� ������,
� ����� ���������� ��������� �� ������ ������ ���� ��������� ������.
������� ������
� ������ ������ ������� ������ ���������� ����� ����� n (1 <= n <= 100 000) -���������� ��������� � ������, ��������� ������� ������� �������.
�� ������ ������ ������� ������ ���������� n ����� xi (1 <= xi <= 100 000) - ���� �� ���� ������� ������� � i-� ��������.
� ������� ������ ������� ������ ���������� ����� q (1 <= q <= 100 000) -���������� ����, � ������� ������� ������� ��������� �������� �������.
� ��������� q ������� ������� ������ ���������� ����� ����� mi (1 <= mi <= 10^9) - ���������� �����, ������� ���� � ������� � i-� ����.
�������� ������
�������� q ����� �����, i-� �� ������� ������ ��������� ���������� ���������, � ������� ������� ����� ������ ���� ��������� �������� ������� � ���� i.
������
������� ������
5
3 10 8 6 11
4
1
10
3
11
�������� ������
0
4
1
5
����������
� ������ ������� �� � ����� �������� ������� �� ������ �����.
�� ������ ������� ������� ������ �����, ����� ������ ������� � ��������� ��� �������� 1, 2, 3 � 4.
� ������� ������� ������� ������ �����, ����� ������ ������� � �������� ��� ������� 1.
� � ��������� ������� ������� ����� ������ ���� ������� � ����� ��������.

*/


# include <iostream>
# include <iomanip>
# include <cmath>
# include <cstring>
# include <cstdio>
# include <cstdlib>



//# include <iostream>

//# include <set>

// set <type> S;
//
// void erase (type)
// void insert (type)
// void clear ()
// valtype * find (type)


//# include <map>

// map <keytype, valtype> M;
//
// void erase (keytype)
// void insert (keytype)
// void clear ()
// valtype * find (keytype)


//# include <queue>

// queue <type> Q;
// priority_queue <type> PQ;

// void erase (type) ???
// void push (type)
// type top ()       type front ()
//                   type back ()
// void pop ()
// bool empty ()
// int size ()



//# include <stack>

// stack <type> st;
//
// type top ()
// void push (type)
// void pop ()
// bool empty ()
// int size ()



# include <vector>

// vector <type> v;
//
// int size ()
// resize (int)
// void clear ()
// void push_back (type)
// void insert (int, type)


// pair <int, int> p;
//
// p.first
// p.second
// p = make_pair (int, int);



# include <algorithm>


using namespace std;



# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define imax(x,y) ( (x) < (y) ? (y) : (x) )
# define imin(x,y) ( (x) > (y) ? (y) : (x) )
# define sqr(x) ((x)*(x))

# define isalpha(c) ( (c) >= 'a' && (c) <= 'z' )
# define isAlpha(c) ( (c) >= 'A' && (c) <= 'Z' )

# define isdigit(c) ( (c) >= '0' && (c) <= '9' )
# define digit(c) ( (c) - '0' )

# define alpha(c) ( isalpha (c) ? (c) : ( isAlpha (c) ? (c) - 'A' + 'a' : (c) ) )
# define Alpha(c) ( isAlpha (c) ? (c) : ( isalpha (c) ? (c) - 'a' + 'A' : (c) ) )

//# define alpha(c) ( (c) - 'A' + 'a' )
//# define Alpha(c) ( (c) - 'a' + 'A' )

# define NUM(r,c) ( ((r) << 8) + (c) )
# define ROW(n) ( (n) >> 8 )
# define COL(n) ( (n) & 0XFF )

# define CHECK(r,c) ( (r) >= 0 && (r) < n && (c) >= 0 && (c) < m )


# define between(a,b,c) ( (a) > (b) && (a) < (c) )
# define Between(a,b,c) ( (a) >= (b) && (a) <= (c) )




# define x  X
# define y  Y
# define x1 X1
# define y1 Y1
# define x2 X2
# define y2 Y2


typedef pair <int, int>          Pair;
typedef long long int            Long;
typedef unsigned int             uint;
typedef unsigned long long int   ULong;
typedef unsigned char            uchar;
//typedef char [21]                TName;
//typedef pair <char [21], char [21]>      TPair;


struct Point
{
/*
   int x, y;
   void Input () { scanf ("%d %d", &x, &y); }
   void Print () { printf ("x=%d y=%d\n", x, y); }
   double Dist (Point p) { return sqrt ((double)(sqr (x-p.x) + sqr (y-p.y))); }
   int Dist2 (Point p) { return (sqr (x-p.x) + sqr (y-p.y)); }
*/
   double x, y;
   void Input () { scanf ("%lf %lf", &x, &y); }
   void Print () { printf ("x=%10.3lf y=%10.3lf\n", x, y); }
   double Dist (Point p) { return sqrt (sqr (x-p.x) + sqr (y-p.y)); }
};

struct Line
{
/*
   int A, B, C;
   void Create (Point a, Point b) { A = b.y - a.y, B = a.x - b.x, C = -A*a.x - B*a.y; }
   double Dist (Point p) { return fabs ((double)(A*p.x+B*p.y+C))/sqrt ((double)(A*A + B*B)); }
   void Print () { printf ("A=%d B=%d C=%d\n", A, B, C); }
*/
   double A, B, C;
   void Create (Point a, Point b) { A = b.y - a.y, B = a.x - b.x, C = -A*a.x - B*a.y; }
   double Dist (Point p) { return fabs ((A*p.x+B*p.y+C)/sqrt (A*A + B*B)); }
   void Print () { printf ("A=%10.3lf B=%10.3lf C=%10.3lf\n", A, B, C); }
};



//+++++++++++++++++++++++++++++++++++++++++++++
/*
// ������� ���� ����� !!!
//
//
//
//
//
//
//
//
*/
//+++++++++++++++++++++++++++++++++++++++++++++




const int N = 104000;
const int K = 21;
const int M = 100000;
const int INF = 2000000000;

//const double eps = 1e-7;
//const double PI = 3.14159265358979323846 ;

int n, m, k, q;   //l, x, y;
bool ok;
//int min1, max1, min2, max2, min3, max3;
//int k1, k2, k3;
int a [N], b;

//int c [N];

//int a [N], h [N];

//bool mark [N];
//int a [N][N];
//int a [N];

//bool mark [N][N];

//char s [N][K], ss, tt;

//char s [N];

//int len [4], mini, maxi;
//__int64 d;

//int dr [] = {-1, 0, 1,  0};
//int dc [] = { 0, 1, 0, -1};
//int dr [] = {-2, -1, 1, 2,  2,  1, -1, -2};
//int dc [] = { 1,  2, 2, 1, -1, -2, -2, -1};
//int q [M], qlen [M], qe;
//int p [N], kp;
//double d;
// double a, b, c;


void PrintData (int par=0);
void Input ();
void Output ();
void Main ();
void Init ();
int Find (char * s);

/*
void Primes ();
int BinSearch (int * b, int n, int x);
void BFS (int num);
void BFS ();
void Temp ();
void Swap (int & a, int & b);
bool mystrcmp (char *, char *);
Long combination (int n, int k);
*/


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("B.TXT", "r", stdin);
   freopen ("B.OUT", "w", stdout);
# endif


# ifndef ONLINE_JUDGE
   int nnn;
   scanf ("%d\n", &nnn);
   for ( int iii=1; iii <= nnn; iii++ )
   {
      ok = false;
/*
      for ( i=0; i < N; i++ )
         mark [i] = false;
*/
//      memset (a, -1, sizeof (a));
//      memset (h, 0, sizeof (h));
//      memset (kol, 0, sizeof (kol));

      printf ("\n\n\nSAMPLE %d\n", iii);
# endif



//+++++++++++++++++++++++++++++++++++++++++++++
//
// ��������� ������������� ���������� ����� !!!
//
//+++++++++++++++++++++++++++++++++++++++++++++

      Init ();


      Input ();

      Main ();

      Output ();

# ifndef ONLINE_JUDGE
   }
# endif

   return 0;
}

void Init ()
{
   n = 0, m = 0, k = 0;

/*
   a = 0, b = 0;
   l = 0;
   d = 0;
*/
}

void Main ()
{
   sort (a, a+n);

   for ( int i=0; i < q; i++ )
   {
      scanf ("%d", &m);
      int k = upper_bound (a, a+n, m) - a;
      printf ("%d\n", k);
   }

# ifndef ONLINE_JUDGE
//   PrintData (1);
# endif
}

void Input ()
{
//   ios_base::sync_with_stdio (0);

   scanf ("%d", &n);
   for ( int i=0; i < n; i++ )
      scanf ("%d", &a [i]);
   scanf ("%d", &q);

//   scanf ("%d %d %d %d %d %d", &min1, &max1, &min2, &max2, &min3, &max3);


//   int i, j;

//   cin >> n;

//   scanf ("%d %d\n", &k, &d);

//   scanf ("%d %d", &n, &m);
//   scanf ("%d %d", &n, &k);
//   scanf ("%lf %lf\n", &a, &b);

//   scanf ("%s", s);
//   gets (s);
//   len = strlen (s);

/*
   for ( int i=0; i < 4; i++ )
   {
      scanf ("%s\n", s [i]);
      len [i] = strlen (s [i]) - 2;
   }
*/

/*
   for ( int j, i=0; i < n; i++ )
      for ( j=0; j < m; j++ )
         scanf ("%d", &a [i][j]);
*/

/*
   scanf ("%d\n", &m);
   for ( int i=1; i <= m; i++ )
   {
      scanf ("%d", &c [i]);
      b += c [i];
   }

   scanf ("%d %d", &x, &y);
*/

# ifndef ONLINE_JUDGE
//   PrintData ();
# endif
}

void Output ()
{

//   printf ("%d %d %d", k1, k2, k3);


//   cout << m;
//   printf ("%I64d", k);
/*
   if ( ok )
      printf ("Yes\n");
   else
      printf ("No\n");
*/
/*
   if ( ok )
      printf ("YES");
   else
      printf ("NO");
*/

//   printf ("%d", m);

/*
   if ( ok1 && ! ok2 || ! ok1 && ok2 )
      if ( ok1 )
         printf ("%c", 'A'+mini);
      else
         printf ("%c", 'A'+maxi);
   else
      printf ("C");
*/


}

/*
int Find (char * s)
{
   for ( int i=0; i < kol; i++ )
	   if ( strcmp (names [i], s) == 0 )
		   return i;
   strcpy (names [kol], s);
   kol++;
	return kol-1;
}
*/

void PrintData (int par)
{
   printf ("\n");
   if ( par == 0 )
   {
//      printf ("m=%d\n", m);
//      printf ("x=%d y=%d\n", x, y);
//      printf ("<%s> len=%d\n", s, len);
/*
   for ( int j, i=0; i < 4; i++ )
      printf ("<%s>\n", s [i]);
*/
/*
      for ( int j, i=0; i < n; i++ )
      {
         for ( j=0; j < m; j++ )
            printf ("%d", a [i][j]);
         printf ("\n");
      }
*/

//      printf ("<%s> n=%d\n", s, n);
/*
      for ( int i=0, n2=n+n; i < n2; i++ )
         printf ("%d %d\n", i, a [i]);

      printf ("\nkol=%d\n", kol);
      for ( int i=0; i < kol; i++ )
         printf ("%d %s\n", i, names [i]);
*/
   }
   else
   {
/*
      printf ("k=%d m=%d\n", k, m);
      for ( int i=0; i < k; i++ )
         printf ("%c", s [i]);
      printf ("\n");
*/
   }
}

/*

bool mystrcmp (char * tt, char * ss)
{
   for ( ; * tt && * ss; tt++, ss++ )
      if ( * tt != * ss )
         return false;
   return true;
}

void BFS ()
{
   q [0] = NUM (rs, cs), qlen [0] = 0, qe = 1; mark [rs][cs] = true;
   for ( int i=0, j, qu, rr, cc, rn, cn, len; i < qe; i++ )
   {
      qu = q [i], rr = ROW (qu), cc = COL (qu), len = qlen [i]+1;
      for ( j=0; j < 8; j++ )
      {
         rn = rr + dr [j], cn = cc + dc [j];
         if ( rn == rf && cn == cf )
            { ok = true; m = len; return; }
         if ( CHECK (rn, cn) && ! mark [rn][cn] )
            mark [rn][cn] = true, qlen [qe] = len, q [qe++] = NUM (rn, cn);
      }
   }
}

void BFS (int num)
{
   q [0] = num, qe = 1; mark [num] = true;
   for ( int i=0, j, qu; i < qe; i++ )
   {
      qu = q [i];
      for ( j=0; j < n; j++ )
         if ( e [qu][j] && ! mark [j] )
            mark [j] = true, q [qe++] = j;
   }
}

void Swap (int & a, int & b)
{
   int c = a;
   a = b, b = c;
}

void Temp ()
{
   vector <int> v;

// ������� ����� ������� n � ��������� �������
// ��� ��������������� ������� �� � ��������� � �����

   for ( int i=0, x; i < n; i++ )
   {
      scanf ("%d", &x);
      v.push_back (x);
//      v [i] = i;
   }

// ����������

   sort (v.begin (), v.end ());

}


void Primes ()   // calculate primes
{
   int i, j, k, ki, pj;
   bool ok;

   p [0] = 2, p [1] = 3, p [2] = 5, p [3] = 7, p [4] = 11, p [5] = 13;
   p [6] = 17, p [7] = 19, p [8] = 23, p [9] = 29, p [10] = 31;
   p [11] = 37, p [12] = 41, p [13] = 43, p [14] = 47, p [15] = 53;
   p [16] = 59, p [17] = 61, p [18] = 67, p [19] = 71, p [20] = 73;
   p [21] = 79, p [22] = 83, p [23] = 89, p [24] = 97, p [25] = 101;

   for ( i=26; i < N; i++ )
   {
      for ( k=p [i-1]+2; ; k+=2 )
      {
         ki = (int) sqrt ((double) k) + 2;
         for ( ok=true, j=0; pj = p [j], pj < ki; j++ )           // ??? p [j] < ki ???
            if ( k % pj == 0 )
               { ok = false; break;}
         if ( ok ) break;
      }
      p [i] = k;
   }
   kp = i;
}

int BinSearch (int * b, int n, int x)
{
   int l=0, r=n-1, m;
   if ( x < b [0] ) return -1;
   if ( x > b [n-1] ) return n;

   while ( l < r-1 )
   {
      m = (l + r) / 2;
      if ( x == b [m] ) return m;
      if ( x < b [m] )
         r = m;
      else
         l = m;
   }
   if ( x == b [l] ) return l;
   if ( x == b [r] ) return r;
   return -2;
}

Long combination (int n, int k)
{
   Long m=1;

   if ( n-k < k )
      k = n-k;

   for ( int i=1, j=n-k+1; i <= k; i++, j++ )
      m *= j, m /= i;

   return m;
}

*/
