#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef vector<vs> vvs;
typedef vector<ll> vll;
typedef vector<vll> vvl;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;
const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

int n, a[1234];
vvi dp(512, vi(512, -1));

int calc(int x, int y)
{
	if(dp[x][y] != -1)
		return dp[x][y];
	if(x > y)
	{
		dp[x][y] = 0;
		return 0;
	}
	if(x == y)
	{
		dp[x][y] = 1;
		return 1;
	}
	int ans = 1 + calc(x+1, y);
	if(a[x] == a[x+1])
		ans = min(ans, 1 + calc(x+2, y));
	for(int i=x+2; i<=y; i++)
	{
		if(a[i] == a[x])
			ans = min(ans, calc(x+1,i-1) + calc(i+1, y));
	}
	dp[x][y] = ans;
	return ans;
}

int main()
{
	ssync;
	cin >> n;
	for(int i=1; i<=n; i++)
		cin >> a[i];
	cout << calc(1,n) << "\n";
	return 0;
}
