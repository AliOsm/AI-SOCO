#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define pb push_back
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

int n,x[Nmax],y[Nmax],U[3*Nmax],L[3*Nmax],infU[3*Nmax],infL[3*Nmax],Q,v[Nmax];
char tip[Nmax];
unordered_map <int,int> Norm,Val,H;

inline void Upd(int aint[], int inf[], int nod, int st, int dr, int x, int y, int val)
{
    if(x==st && dr==y)
    {
        //cout<<nod<<"\n";
        aint[nod]=max(aint[nod],val);
        inf[nod]=max(inf[nod],val);
        return;
    }
    int mij=((st+dr)>>1);

    aint[2*nod]=max(aint[2*nod],inf[nod]);
    aint[2*nod+1]=max(aint[2*nod+1],inf[nod]);
    inf[2*nod]=max(inf[2*nod],inf[nod]);
    inf[2*nod+1]=max(inf[2*nod+1],inf[nod]);

    if(y<=mij) Upd(aint,inf,2*nod,st,mij,x,y,val);
    else
        if(x>mij) Upd(aint,inf,2*nod+1,mij+1,dr,x,y,val);
        else
        {
            Upd(aint,inf,2*nod,st,mij,x,mij,val);
            Upd(aint,inf,2*nod+1,mij+1,dr,mij+1,y,val);
        }
    aint[nod]=max(aint[2*nod],aint[2*nod+1]);
}

inline int Qry(int aint[], int inf[], int nod, int st, int dr, int x, int y)
{
    //cout<<nod<<"\n";
    if(x==st && dr==y)
    {

        return aint[nod];
    }

    int mij=((st+dr)>>1);

    aint[2*nod]=max(aint[2*nod],inf[nod]);
    aint[2*nod+1]=max(aint[2*nod+1],inf[nod]);
    inf[2*nod]=max(inf[2*nod],inf[nod]);
    inf[2*nod+1]=max(inf[2*nod+1],inf[nod]);

    if(y<=mij) return Qry(aint,inf,2*nod,st,mij,x,y);
    else
        if(x>mij) return Qry(aint,inf,2*nod+1,mij+1,dr,x,y);
        else
            return max(Qry(aint,inf,2*nod,st,mij,x,mij),Qry(aint,inf,2*nod+1,mij+1,dr,mij+1,y));
}

int main()
{
    int i,j,l=0;
    multiset <int> ::iterator it;
    long long sol=0;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n>>Q;
    for(i=1;i<=Q;++i)
    {
        cin>>y[i]>>x[i]>>tip[i];
        v[++l]=x[i];
        v[++l]=n+1-y[i];
    }
    v[++l]=0; v[++l]=n;
    sort(v+1,v+l+1);
    Norm[v[1]]=1; Val[1]=v[1];
    for(i=2;i<=l;++i)
    {
        Norm[v[i]]=Norm[v[i-1]];
        if(v[i]>v[i-1]) ++Norm[v[i]];
        Val[Norm[v[i]]]=v[i];
    }
    int cn=n;
    n=Norm[n];
    for(i=1;i<=Q;++i)
    {
        if(H[x[i]])
        {
            cout<<"0\n";
            continue;
        }
        if(tip[i]=='U')
        {
            int lim=Qry(U,infU,1,1,n,Norm[x[i]],Norm[x[i]]);
            cout<<x[i]-lim<<"\n";
            //cout<<Norm[lim]<<" "<<Norm[x[i]]<<" "<<y[i]<<"\n";
            Upd(L,infL,1,1,n,Norm[lim],Norm[x[i]],y[i]);
        }
        else
        {
            int lim=Qry(L,infL,1,1,n,Norm[x[i]],Norm[x[i]]);
            cout<<y[i]-lim<<"\n";
            //cout<<Norm[x[i]]<<" "<<lim<<"\n";
            Upd(U,infU,1,1,n,Norm[x[i]],Norm[min(cn+1-lim,cn)],x[i]);
        }
        H[x[i]]=1;
    }
    return 0;
}
