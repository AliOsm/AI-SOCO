#include <bits/stdc++.h>
using namespace std;

typedef pair <int, int> P;

const int N = 2100000;

int a[N];
P rec[N];

void update(int state, int pos){
	if (pos == rec[state].first || pos == rec[state].second) return;
	if (pos > rec[state].first){
		rec[state].second = rec[state].first;
		rec[state].first = pos;
	}
	else if (pos > rec[state].second) rec[state].second = pos;
}

int main(){
	int n, ans;
	scanf("%d",&n);
	for (int i = 0; i < (1 << 21); i++) rec[i].first = rec[i].second = -1;
	for (int i = 1; i <= n; i++){
		scanf("%d",&a[i]);
		update(a[i], i);
	}
	for (int i = 0; i < 21; i++){
		for (int j = 0; j < (1 << 21); j++){
			if (j & (1 << i)){
				if (~rec[j].first) update(j ^ (1 << i), rec[j].first);
				if (~rec[j].second) update(j ^ (1 << i), rec[j].second);
			}
		}
	}
	ans = 0;
	for (int i = 1, now; i <= n - 2; i++){
		now = 0;
		for (int j = 20; ~j; j--){
			if (a[i] & (1 << j)) continue;
			if (rec[now ^ (1 << j)].second > i) now += (1 << j);
		}
		ans = max(ans, a[i] + now);
	}
	printf("%d\n", ans);
	return 0;
}