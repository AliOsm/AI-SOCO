#pragma comment(linker, "/STACK:67108864")
#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <string>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>
#include <memory.h>

#define y1 sdasfdsdfgsdfsdfsfs
#define y2 sfdlkkgjdflkjglkdfj

using namespace std;

typedef long long LL;

int n, m;

int A[555][555];
vector<int> G[555];
vector<int> Gt[555];
int color[555];

int go(int x, int c = 0)
{
	color[x] = c;
	for (int i = 0; i < G[x].size(); ++i)
	{
		int to = G[x][i];
		if (color[to] == color[x])
			return 1;
		if (color[to] != 1)
			continue;
		if (go(to, 2 - c))
			return 1;
	}
	for (int i = 0; i < Gt[x].size(); ++i)
	{
		int to = Gt[x][i];
		if (G[to].size() == 0)
			continue;
		if (color[to] == 2 - color[x])
			return 1;
		if (color[to] != 1)
			continue;
		if (go(to, c))
			return 1;
	}
	return 0;
}

int main()
{
	scanf("%d%d", &n, &m);
	while (m-- > 0)
	{
		int u, v;
		scanf("%d%d", &u, &v);
		u--, v--;
		A[u][v] = 1;
		A[v][u] = 1;
	}
	for (int i = 0; i < n; ++i)
	{
		for (int j = 0; j < n; ++j)
		{
			if (i == j)
				continue;
			if (!A[i][j])
				G[i].push_back(j);
			else
				Gt[i].push_back(j);
		}
	}
	for (int i = 0; i < n; ++i)
		color[i] = 1;
	for (int i = 0; i < n; ++i)
	{
		if (color[i] != 1)
			continue;
		if (G[i].size() == 0)
			continue;
		if (go(i))
		{
			printf("No\n");
			return 0;
		}
	}
	printf("Yes\n");
	for (int i = 0; i < n; ++i)
		printf("%c", 'a' + color[i]);
	printf("\n");
	return 0;
}