// Task-ID: 1373
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <iomanip>
#include <cstdio>
#include <vector>
#include <string>
#include <stack>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <map>
#include <set>

#define For(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
#define FOR(i,a) For(i,1,a)
#define Ford(i,a,b) for(int (i)=(a);(i)>=(b);(i)--)
#define Rep(i,a,b) for(int (i)=(a);(i)<(b);(i)++)
#define REP(i,a) Rep(i,0,a)
#define type(x) __typeof(x.begin())
#define foreach(it,x) for(__typeof(x.begin()) it = x.begin() ; it!=x.end() ; it++ )

#define NEW(x,n) (x*)calloc(n,sizeof(x))
#define fill(x,y) memset(x,y,sizeof x)
#define all(x) x.begin(),x.end()
#define two(x) (1LL<<(x))
#define fi first
#define se second
#define gcd __gcd
#define pb push_back
#define mp make_pair

#ifdef KAZAR
    #define eprintf(...) fprintf(stderr, __VA_ARGS__)
	#define dbg(x) cerr<<#x<<":"<<(x)<<endl
	#define dg(x) cerr<<#x<<":"<<(x)<<' '
#else
    #define eprintf(...) 0
	#define dbg(x) 0
	#define dg(x) 0
#endif

using namespace std;

typedef long long Lint;
typedef long double ld;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int inf = 1e9+5143;
const Lint Linf = 1e18+5413;
const double eps = 1e-10;
const double pi = acos(-1);

template<class T> inline void umax(T &a,T b){if(a<b) a = b ; }
template<class T> inline void umin(T &a,T b){if(a>b) a = b ; }
template<class T> inline T abs(T a){return a>0 ? a : -a;}
template<class T> inline T lcm(T a,T b){
	return a/gcd(a,b)*b;
}

inline int read(){
	int res = 0LL ;int neg ;
	while(1){
		char ch = getchar();
		if(ch>='0' && ch<='9' || ch=='-'){
			if(ch=='-') neg = -1;
			else neg = 1 , res = ch-'0';
			break;
		}
	}
	while(1){
		char ch = getchar();
		if(ch>='0' && ch<='9') res*=10 , res+=ch-'0';
		else break;
	}
	return res*neg;
}

const int N = 671717;
const int K = 631717;

struct data{
    int l , r , t ,where , is_bus;
    friend bool operator < (const data &a,const data &b){
        if(a.l == b.l) return a.is_bus > b.is_bus;
        return a.l < b.l;
    }
};

vector<data> ar;

int answer[N];
vi vals;

set<ii> kd[N * 5];

void modify(int k,int b,int e,int x,ii val){
    if(b > x || e < x) return;
    kd[k].insert(val);
    if(b == e) return;
    modify(k + k,b,(b+e)/2,x,val);
    modify(k + k + 1,(b+e)/2+1,e,x,val);
}

ii get(int k,int b,int e,int x1,int x2,int t){
    if(b > x2 || e < x1) return ii(inf,inf);
    if(b >= x1 && e <= x2){
        type(kd[k]) it = kd[k].lower_bound(ii(t,0));
        if(it == kd[k].end()) return ii(inf,inf);
        return *it;
    }
    ii ll = get(k + k,b,(b+e)/2,x1,x2,t);
    ii rr = get(k + k + 1,(b+e)/2+1,e,x1,x2,t);
    return min(ll,rr);
}

void put(int x,int id,int t){
    eprintf("putting => x : %d id : %d t : %d\n",x,id,t);
    int nx = lower_bound(all(vals),x) - vals.begin() + 1;
    modify(1,1,K,nx,ii(t,id));
}

ii get(int x,int t){
    eprintf("geting => x : %d t : %d\n",x,t);
    int nx = lower_bound(all(vals),x) - vals.begin() + 1;
    return get(1,1,K,nx,K,t);
}

int main(){

#ifdef KAZAR
	freopen("f.input","r",stdin);
	freopen("f.output","w",stdout);
	freopen("error","w",stderr);
#endif

    int n = read();
    int m = read();

    FOR(i,n){
        int l = read();
        int r = read();
        int t = read();
        ar.pb((data){l,r,t,i,1});
        vals.pb(l);
        vals.pb(r);
    }

    FOR(i,m){
        int l = read();
        int r = read();
        int t = read();
        ar.pb((data){l,r,t,i,0});
        vals.pb(l);
        vals.pb(r);
    }

    sort(all(ar));

    sort(all(vals));
    vals.resize(unique(all(vals)) - vals.begin());

    REP(i,ar.size()){
        if(ar[i].is_bus){
            put(ar[i].r,ar[i].where,ar[i].t);
        }else{
            ii temp = get(ar[i].r,ar[i].t);
            if(temp.fi != inf){
                answer[ar[i].where] = temp.se;
            }else{
                answer[ar[i].where] = -1;
            }
        }
    }

    FOR(i,m) printf("%d ",answer[i]);

    return 0;
}
