// Bismillahirrahmanir Rahim
#include<bits/stdc++.h>
#define nl printf("\n")
#define sp printf(" ")
#define rep(i,a,b) for(i=a;i<=b;i++)
#define rev(i,a,b) for(i=a;i>=b;i--)
#define filr freopen("input.txt","r",stdin)
#define filw freopen("output.txt","w",stdout)
#define pf printf
#define sf scanf
using namespace std;

typedef long long l;
typedef unsigned long long ul;

//// Ordered set> Finding nth position element in a set in logn complexity
//#include <ext/pb_ds/assoc_container.hpp>
//using namespace __gnu_pbds;
//template<typename T> using orderset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
////*X.find_by_order(1)
////X.order_of_key(-5)
template<class T> string convert(T _input) { stringstream blah; blah << _input; return blah.str(); }

#define pi acos(-1.0)
#define mp make_pair
#define pb push_back
#define p_q priority_queue
#define mod 1000000007

int inline in(){int x;sf("%d",&x);return x;}
l inline lin(){l x;sf("%lld",&x);return x;}
void P(l x){pf("%lld",x);}
void Pi(int x){pf("%d",x);}


#define C(i) pf("Case %lld: ",i)
#define Ci(i) pf("Case %d: ",i)

#define Inf 0x7f7f7f
#define mod 1000000007

#define ms(a,b) memset(a,b,sizeof(a))
#define DBG pf("I am here\n")

#define dis( a ,b ) abs( a - b )
#define dis2d( x1 ,y1 ,x2 ,y2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) )
#define dis3d( x1 ,y1 ,z1 ,x2 ,y2 ,z2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) + ( z1 - z2 ) * ( z1 - z2 ) )

#define valid(nx,ny,r,c) nx>=1&&nx<=r && ny>=1&&ny<=c

#define ck_bt( v , p ) ( ( v >> p ) & 1 )

char tochar( int x ){return x + '0' ;}
int toint( char x ){return x - '0' ;}
l s2l( string SS ) { l d = SS.size() , i ; l tot = 0 ; for (i = 0; i < d ; i++) { tot = tot * 10 + SS[i] - '0'; } return tot ; }

//template<typename T> T bigmod(T a, T b){ T x = 1, y = a%MOD; while(b > 0) { if(b%2 == 1) { x = prod(x, y, MOD); } y = prod(y,y, MOD); b /= (l)2; } return x; }
//template <typename T> T MODINVERSE(T a) { return bigmod(a, MOD-2); }
l bm(l b, l p) { l namira; if(p==0)return 1; if(p%2==0) { namira=bm(b,p/2); return ((namira%mod)*(namira%mod))%mod; } else { return ((b%mod)*(bm(b,p-1)%mod))%mod; } }

l minv( l a ) { return bm( a , mod - 2 ) ; }



l fx[]= {0,0,-1,1,-1,-1,1,1};
l fy[]= {-1,1,0,0,-1,1,-1,1};

l dx[]= {0,0,-1,1};
l dy[]= {-1,1,0,0};

int n , m ;

l a[200010] ;

char s[100010] ;

l A , B ;

bool F( l state )
{
    bool res = 0 ;
    l baki = -1 ;
    if( 2 * B <= n )
        baki = n - 2 * B ;
    if( baki != -1 )
    {
        //if( state == 4 ) DBG;
        l d1 = baki / A ;
        d1 += ( n / A ) ;
        if( d1 >= 4 && state == 2 ) res = 1 ;
        d1 += n / A ;
        if( d1 >= 4 && state == 3 ) res = 1 ;
        d1 += ( n / A ) ;
        if( d1 >= 4 && state == 4 ) res = 1 ;
        d1 += ( n / A ) ;
        if( d1 >= 4 && state == 5 ) res = 1 ;

    }
    baki = n - B ;
    l d1 = 0 ;
    d1 += 2 * ( baki / A ) ;
    if( d1 >= 4 ) res = 1 ;
    if( state == 2 ) return res ;
    d1 += ( n / A ) ;
    if( d1 >= 4 ) res = 1 ;
    if( state == 3 ) return res ;
    d1 += ( n / A ) ;
    if( d1 >= 4 ) res = 1 ;
    if( state == 4 ) return res ;
    d1 += ( n / A ) ;
    if( d1 >= 4 ) res = 1 ;
    if( state == 5 ) return res ;

}

int main()
{

    l i , j , k , i1 , i2 , i3 , i4 , i5 ;

    n = lin() ;
    A = lin() ;
    B = lin() ;

    if( 4 * A + 2 * B <= n )
    {
        puts("1") ;
    }
    else if( F( 2 ) )
    {
        puts("2") ;
    }
    else if( F( 3 ) )
    {
        puts("3") ;
    }
    else if( F( 4 ) )
    {
        puts("4") ;
    }
    else if( F( 5 ) )
    {
        puts("5") ;
    }
    else
    {
        puts("6") ;
    }

    return 0;
}
