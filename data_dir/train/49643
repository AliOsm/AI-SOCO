#include <bits/stdc++.h>

using namespace std;

#define mem(a,b) memset(a,b,sizeof(a))
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define REV(i,j,k) for(int i=j;i>=k;i--)
#define FORR(i,j,k,l) for(int i=j;i<=k;i+=l)
#define inf         freopen("in.txt", "r", stdin)
#define outf        freopen("out.txt", "w", stdout)
#define pf          printf
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c)    scanf("%d %d %d", &a, &b, &c)
#define clean(mat,n)   FOR(i,0,n) mat[i].clear()
#define minn          (long long)-1000000000000000000
#define maxx          (long long) 1000000000000000000
#define mod          998244353
#define M_PI           3.14159265358979323846  /* pi */
#define LL           long long
#define NL '\n'
#define cnd tree[idx]
#define lnd (idx<<1)
#define rnd ((idx<<1)+1)
#define PB push_back
#define F first
#define S second
#define MAX 200010
#define MP make_pair
#define valid(nx,ny)  ((nx >= 0) && (nx < row) && (ny >= 0) && (ny < col))
typedef pair<int,int> PR;

LL ty[MAX], cnt[2], chi[MAX];
LL ans[MAX], val[MAX];
vector<LL> mat[MAX];

void dfs(LL p,LL pa)
{
    cnt[ ty[p] ]++;

    for(auto x : mat[p])
    {
        if(x == pa) continue;

        ty[x] = ty[p]^1;
        dfs(x, p);
        chi[p] += (chi[x] + 1);
        val[p] += val[x];
    }

    val[p] += chi[p];
}

void rec(LL p,LL pa)
{
    LL org = val[p], coco = chi[p], a, b;
    ans[p] = val[p] + cnt[ ty[p]^1 ];

    for(auto x : mat[p])
    {
        if(x == pa) continue;
        a = val[x]; b = chi[x];

        val[p] -= val[x];
        val[p] -= (chi[x] + 1);
        chi[p] -= (chi[x] + 1);

        val[x] += val[p];
        val[x] += (chi[p] + 1);
        chi[x] += (chi[p] + 1);

        rec(x, p);

        val[p] = org; chi[p] = coco;
        val[x] = a; chi[x] = b;
    }
}

int main()
{
    ios::sync_with_stdio(false);
    //inf;
    //outf;
    LL n, a, b;
    LL prin = 0;

    cin >> n;
    FOR(i,1,n-1)
    {
        cin >> a >> b;
        mat[a].PB( b );
        mat[b].PB( a );
    }

    dfs(1, 1);
    rec(1, 1);

    FOR(i,1,n) prin += (ans[i]>>1);///cout << ans[i] << ' ';

    cout << (prin>>1) << endl;

    return 0;
}
