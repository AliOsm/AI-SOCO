#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
//#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=1000000000000000000;
const ll mod=1000000007;
const ll p=1009;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
int  max3(int  a,int  b, int  c)
{
    return max(c,max(a,b));
}
int  min3(int  a,int  b,int  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod;
        y = y>>1;
        x = (x*x)%mod;
    }
    return res%mod;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x)
{
    return power(x,mod-2);
}
int main()
{
    fastio;
    string str;string tar;
    cin>>str>>tar;
    ll numzero=0;
    ll numone=0;
    ll zeropos=-1;
    ll onepos=-1;
    for(int i=0;i<str.length();i++)
    {
        if(str[i]=='1')
        {
            numone++;
            if(onepos==-1)
            {
                onepos=i;
                
            }
            else
            {
                
            }
        }
        else
        {
            numzero++;
            if(zeropos==-1)
            {
                zeropos=i;
            }
            else
            {
                
            }
        }
    }
    ll ans=0;
    
    vll hsh(tar.length(),0);
    int n=tar.length();
    hsh[0]=tar[0]%mod;
    for(int i=1;i<tar.length();i++)
    {
        hsh[i]=(hsh[i-1]+(tar[i]*power(p,i))%mod)%mod;
    }
    if(numone!=0&&numzero!=0)
    {
    
    for(ll j=1;j<tar.length();j++)
    {
        if((tar.length()-numzero*j)>0&&((tar.length()-numzero*j))%numone==0)
        {
            ll sz1=j;
            ll sz2=(tar.length()-numzero*j)/numone;
            ll h1=hsh[sz2*zeropos+sz1-1];
            if((sz2*zeropos-1)>=0)
            {
                h1-=hsh[sz2*zeropos-1];
                if(h1<0)
                {
                    h1+=mod;
                    h1=h1%mod;
                }
            }
            h1=(h1*modinv(power(p,sz2*zeropos)))%mod;
            ll h2=hsh[sz1*onepos+sz2-1];
            if((sz1*onepos-1)>=0)
            {
                h2-=hsh[sz1*onepos-1];
                if(h2<0)
                {
                    h2+=mod;
                    h2=h2%mod;
                }
            }
            h2=(h2*modinv(power(p,sz1*onepos)))%mod;
            if(h1==h2)
            {
                continue;
            }
            ll h=0;
            ll ind =0;
            for(int i=0;i<str.length();i++)
            {
                if(str[i]=='0')
                {
                    h=(h+(h1*power(p,ind))%mod)%mod;
                    ind=ind+sz1;
                }
                else
                {
                    h=(h+(h2*power(p,ind))%mod)%mod;
                    ind=ind+sz2;
                }
            }
            if(h==hsh[tar.length()-1])
            {
                ans++;
            }
        }
    }
    }
    else
    {
        if(numone==0)
        {
            if(tar.length()%numzero!=0)
            {
                ans=0;
            }
            else
            {
                
                ll sz1=(ll)tar.length()/numzero;
                ll h1=hsh[sz1-1];
                ll h=0;
                ll ind=0;
                for(int i=0;i<str.length();i++)
                {
                    if(str[i]=='0')
                    {
                        h=(h+(h1*power(p,ind))%mod)%mod;
                        ind=ind+sz1;
                    }
                }
                if(h==hsh[tar.length()-1])
                {
                    ans++;
                }
            }
        }
        else
        {
            if(tar.length()%numone!=0)
            {
                ans=0;
            }
            else
            {
                
                ll sz1=(ll)tar.length()/numone;
                ll h1=hsh[sz1-1];
                ll h=0;
                ll ind=0;
                for(int i=0;i<str.length();i++)
                {
                    if(str[i]=='1')
                    {
                        h=(h+(h1*power(p,ind))%mod)%mod;
                        ind=ind+sz1;
                    }
                }
                if(h==hsh[tar.length()-1])
                {
                    ans++;
                }
            }
        }
    }
    cout<<ans;
}

