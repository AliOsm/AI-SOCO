#include <bits/stdc++.h>
//#include <ext/rope>

#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")

#define endl "\n"
#define fi first
#define se second
#define pb push_back
#define last(s) (s)[(int)((s).size())-1]
#define prelast(s) (s)[(int)((s).size())-2]
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define elif else if
#define left asdasd
#define next zaza
//#define prev azaz
#define cclear cout<<flush;
#define x0 kerker
//#define time chas
#define y0 lolik
#define x1 ashkjl
#define y1 fakakaka
#define y2 ololol
#define x2 jejejejej
#define kchay ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define files freopen("sequence.in", "r", stdin);freopen("sequence.out", "w", stdout);
#define ref svyazi
#define int long long
#define lint __int128
#define ii pair<int, int>
#define llong long long
#define ld long double
#define list spisok
#define tm kozerog

const ld eps = 1e-9;
const ld Pi = acos(-1);
const int md = (1e9+7);
const int fakmd = 998244353;
// const int mod = (1 << 30) + 1;

using namespace std;
//using namespace __gnu_cxx;

/*

*/

int n, a[300100], nep, ans;
bool used[300100];
int32_t main() {
    kchay;
    
    
    cin >> n;
    
    for(int i = 1; i <= n; i++) {
        cin >> a[i];
    }
    int cnt = 0;
    for(int i = n; i >= 1; i--) {
        cnt += a[i] / 2;
        if((a[i] & 1)) {
            if(cnt > nep)nep++;
            a[i]--;
        }
        a[i] /= 2;
    }
    // cout << nep << endl;
    // for(int i = 1; i <= n; i++) {
    //     cout << a[i] << " ";
    // }
    // cout << endl;
    
    int it = 1;
    // return 0;
    for(int i = n; i >= 1; i--) {
        int cur = min(a[i], nep);
        nep -= cur;
        a[i] -= cur;
        ans += cur;
        while(a[i] && it <= i) {
            if(it != i) {
                nep = min(a[it], (a[i] + 1) / 2);
                a[it] -= nep;
                if(!a[it])it++;
                nep *= 2;
                cur = min(a[i], nep);
                ans += cur;
                a[i] -= cur;
                nep -= cur;
            }  else {
                a[i] *= 2;
                ans += a[i] / 3;
                a[i] = 0;
                // int l = 0, r = a[i];
                // while(r - l > 0) {
                //     int mid = (l + r + 1) / 2;
                //     if(a[i] - mid >= mid * 2)l = mid; else r = mid - 1;
                // }
                // nep = l;
                // a[i] -= l;
                // nep *= 2;
                // cur = min(a[i], nep);
                // ans += cur;
                // a[i] -= cur;
                // nep -= cur;
                it++;
            }
        }
    }
    
    
    cout << ans;
    return 0;
}

/*
That's how you lose 
That's how you lose
See the star lights over the trees, amen
That's how you make a ghost
Watch how you break things you learn the most
Something about the one that negates hope
Marauder chained of no real code
*/