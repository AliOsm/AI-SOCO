#pragma comment(linker, "/STATK:134217728")

#include <cstdio>
#include <iostream>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <string>
#include <algorithm>
#include <numeric>
#include <functional>
#include <cmath>
#include <complex>
#include <memory.h>
#include <time.h>

using namespace std;

typedef long long LL;

int h, q;

struct P
{
	LL pos;
	int open;
	int yes;
	P() {}
};

bool operator<(const P & a, const P & b)
{
	return a.pos == b.pos ? a.open > b.open : a.pos < b.pos;
}

vector<P> a;

int main()
{
	scanf("%d%d", &h, &q);

	int cnt = 1;

	while (q --> 0)
	{
		int i, ans;
		LL L, R;
		scanf("%d%I64d%I64d%d", &i, &L, &R, &ans); 

		L <<= h - i;
		R <<= h - i;

		R |= (1LL << (h - i)) - 1;

		P from, to;
		from.open = 1;
		from.pos = L;
		from.yes = ans;
		to.open = -1;
		to.pos = R + 1;
		to.yes = ans;

		a.push_back(from);
		a.push_back(to);

		cnt += ans;
	}

	P from;
	from.open = 1;
	from.pos = 1LL << (h - 1);
	from.yes = 1;
	P to;
	to.open = -1;
	to.pos = 1LL << h;
	to.yes = 1;

	a.push_back(from);
	a.push_back(to);

	sort(a.begin(), a.end());

	int A = 0, B = 0;
	int i = 0;
	int last = 0;

	LL res = -1;
	int amb = 0;

	while (i < a.size())
	{
		while (i < a.size() && (i == last || a[i].pos == a[i - 1].pos))
		{
			if (a[i].yes)
				A += a[i].open;
			else
				B += a[i].open;
			i++;
		}

		if (B == 0 && A == cnt)
		{
			if (a[i].pos - a[i - 1].pos > 1)
				amb = 1;
			else
			{
				if (res != -1)
					amb = 1;
				res = a[i - 1].pos;
			}
		}

		last = i;
	}

	if (amb)
		printf("Data not sufficient!\n");
	else if (res == -1)
		printf("Game cheated!\n");
	else
		printf("%I64d\n", res);
	return 0;
}