#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES

#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <random>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
typedef pair<int64, int> pli;
typedef pair<double, double> pdd;

const int INF = (int)(1e9+1e5);
const int64 LINF = (int64)(4e18);
const double EPS = 1e-10;
const int MOD = (int)1e9 + 7;
#define sq(x) ((x)*(x))
#define FAIL() ((*(int*)0)++)
#define y0 y00

const int MAXN = 400100;
pii st[MAXN];
vector < vector < pii >> tim;
int ans[MAXN];
int n;
void solve()
{
    tim.clear();
    tim.resize(6000);
    cin >> n;
    memset(ans, 0, sizeof ans);
    for (int i = 0; i < n; ++i)
    {
        cin >> st[i].first >> st[i].second;
    }

    for (int i = 0; i < n; ++i)
    {
        tim[st[i].first].push_back(pii(i, st[i].second));
    }
    for (int i = 0; i < 6000; ++i)
    {
        if (tim[i].size())
        {
            sort(tim[i].begin(), tim[i].end());
            ans[tim[i][0].first] = i;
     //       cerr << ans[tim[i][0].first] << ' ';
            for (int j = 1; j < (int)tim[i].size(); ++j)
            {
                if (tim[i][j].second > i)
                    tim[i + 1].push_back(tim[i][j]);
            }
        }
    }
    for(int i = 0; i < n; ++i)
    {
        cout << ans[i] << ' ';
    }
    cout << '\n';
}

int main()
{
    //srand(time(0)); testgen(10, 5, 30);

#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#endif
    ios_base::sync_with_stdio(false); cin.tie(0);
    int t;
    cin >> t;
    for (int i = 0; i < t; ++i)
    {
        solve();
    }

    return 0;
}