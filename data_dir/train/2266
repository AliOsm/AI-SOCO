/**************************************************************
    Problem: ????
    User: Big_Red_Dates
    Language: GNU_C++11
    Result: Accepted
    Time:0 ms
    Memory:0 kb
    length:0 kb
    score: inf
****************************************************************/
//CLOCKS_PER_SEC
using namespace std;
#include<bitset>
#include<deque>
#include<stdint.h>
#include<set>
#include<stack>
#include<cmath>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<iomanip>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<cstring>
#include<ctime>
#include<map>
#define sqr(x) (x)*(x)
//#define sort stable_sort
#define ll long long
#define mk make_pair
#define pb push_back
#define in insert
#define mtr(x,y,z) mk(mk(x,y),z)
#define fi first
#define se second
#define lch(x) ((x)<<1)
#define rch(x) (((x)<<1)|1)
#define all(x) (x).begin(),(x).end()
#define titose CLOCKS_PER_SEC
#define fpi(x) freopen(x,"r",stdin);
#define fpo(x) freopen(x,"w",stdout);
#define fprio fpi("in.txt");fpo("out.txt");
#define fast ios_base::sync_with_stdio(false);
inline void read(int &x){int v=0,f=1;char c=getchar();while (!isdigit(c)&&c!='-') c=getchar();if (c=='-') f=-1; else v=v*10+c-'0';while (isdigit(c=getchar())) v=v*10+c-'0';x=v*f;}
inline void read(ll &x){ll v=0ll,f=1ll;char c=getchar();while (!isdigit(c)&&c!='-') c=getchar();if (c=='-') f=-1; else v=v*10+c-'0';while (isdigit(c=getchar())) v=v*10+c-'0';x=v*f;}
inline void readc(char &x){char c;while ((c=getchar())==' '||c=='\n');x=c;}
inline void writes(string s){puts(s.c_str());}
inline void writeln(){writes("");}
inline void writei(int x){if (x<0){putchar('-');x=abs(x);}if (!x) putchar('0');char a[25];int top=0;while (x){a[++top]=(x%10)+'0';x/=10;}while (top){putchar(a[top]);top--;}}
inline void writell(ll x){if (x<0){putchar('-');x=abs(x);}if (!x) putchar('0');char a[25];int top=0;while (x){a[++top]=(x%10)+'0';x/=10;}while (top){putchar(a[top]);top--;}}
#define pii pair<int,int>
#define pll pair<ll,ll>
#define vi vector<int>
#define vl vector<ll>
#define si set<int>
#define sl set<ll>
#define mii map<int,int>
#define mll map<ll,ll>
#define msi map<string,int>
#define msl map<string,ll>
#define piii pair<int,pii >
#define piipi pair<pii,int>
#define plll pair<ll,pll >
#define pllpl pair<pll,ll>
#define pqi priority_queue<int>
#define pql priority_queue<ll>
#define npqi priority_queue<int,vector<int>,greater<int> >
#define npql priority_queue<ll,vector<ll>,greater<ll> >
#define forup(i,csc,lys) for ((i)=(csc);(i)<=(lys);(i)++)
#define fordo(i,csc,lys) for ((i)=(csc);(i)>=(lys);(i)--)
#define rep(i,x) forup ((i),1,(x))
#define repd(i,x) fordo ((i),(x),1)
#define itr iterator
#define lyscsc(itcalc,c) for(__typeof((c).begin()) itcalc=(c).begin();itcalc!=(c).end();itcalc++)
#define NO {cout<<"NO";return 0;}
#define YES {cout<<"YES";return 0;}
#define y0 y000000000000000000000000000
#define y1 y111111111111111111111111111
#define j0 j000000000000000000000000000
#define j1 j111111111111111111111111111
#define cl0(a) memset((a),(0),(sizeof((a))))
#define clz(a) memset((a),(0x16),(sizeof((a))))
#define clf(a) memset((a),(-(0x16)),(sizeof((a))))
#define inf 0x3bbbbbbb
#define lnf 0x1bbbbbbbbbbbbbbbll
#define sqrt divi
#define p2(i) (1ll<<(i))
#define readi read
#define readll read
/*************************************************/
int n,m,i,j,dis[1000005],sz[20005],fa[20005],tp[20005],dfn[20005],mp[20005],son[20005],dep[20005],ti,s=0,t=1000001,cnt,tot,vis[1000005],te[20005];
vector<int> e[1000005],s1,s2;
vector<pair<int,int> > e1[20005];
vector<int>::iterator cur[1000005];
struct ii
{
	int y,z,id;
}ee[10000005];
void add(int x,int y,int z,int id=0)
{
//	cerr<<x<<' '<<y<<' '<<z<<' '<<id<<endl;
	tot++;
	ee[tot*2-2]=(ii){y,z,id};
	ee[tot*2-1]=(ii){x,0,id};
	e[x].pb(tot*2-2);
	e[y].pb(tot*2-1);
}
void build(int x,int l,int r)
{
	if (l==r){
		add(x+n,mp[l],inf);
		return;
	}
	int mid=(l+r)/2; 
	build(x*2,l,mid);
	build(x*2+1,mid+1,r);
	add(x+n,x*2+n,inf);
	add(x+n,x*2+1+n,inf);
}
void dfs1(int x,int p)
{
	fa[x]=p;sz[x]=1;
	lyscsc(it,e1[x]) if (it->fi!=p){
		dep[it->fi]=dep[x]+1;te[it->fi]=it->se;dfs1(it->fi,x);
		sz[x]+=sz[it->fi];
		if (son[x]==0||sz[it->fi]>sz[son[x]]) son[x]=it->fi;
	}
}
void dfs2(int x,int t)
{
	tp[x]=t;dfn[x]=++ti;mp[ti]=x;
	if (son[x]) dfs2(son[x],t);
	lyscsc(it,e1[x]) if (it->fi!=fa[x]&&it->fi!=son[x]){
		dfs2(it->fi,it->fi);
	}
}
void update(int x,int l,int r,int ql,int qr,int id)
{
	if (l>=ql&&r<=qr){
		add(t-id,x+n,inf);
		return;
	}
	int mid=(l+r)/2;
	if (ql<=mid) update(x*2,l,mid,ql,qr,id);
	if (qr>mid) update(x*2+1,mid+1,r,ql,qr,id);
}
void upd(int x,int y,int id)
{
	while (tp[x]!=tp[y]){
		if (dep[tp[x]]<dep[tp[y]]) swap(x,y);
		update(1,1,n,dfn[tp[x]],dfn[x],id);
		x=fa[tp[x]];
	}
	if (dfn[x]!=dfn[y]) update(1,1,n,min(dfn[x],dfn[y])+1,max(dfn[x],dfn[y]),id);
}
bool bfs(int s,int t)
{
	queue<int> qx;
	clz(dis);
	dis[s]=0;
	qx.push(s);
	while (!qx.empty())
	{
		int x=qx.front();
		qx.pop();
		lyscsc(it,e[x])
		{
			if (ee[*it].z)
			{
				int y=ee[*it].y,z=dis[x]+1;
				if (dis[y]>z)
				{
					dis[y]=z;
					qx.push(y);
				}
			}
		}
	}
	return dis[t]<dis[t+1]; 
}
int dfs(int x,int tt,int flw)
{
	if (!flw||x==tt) return flw;
	if (vis[x]!=ti){
		vis[x]=ti;
		cur[x]=e[x].begin();
	}
	int ans=0;
	for (vector<int>::itr it=cur[x];it!=e[x].end();it++) if (dis[ee[*it].y]==dis[x]+1){
		int t=dfs(ee[*it].y,tt,min(flw,ee[*it].z));
		ans+=t;flw-=t;ee[*it].z-=t;ee[(*it)^1].z+=t;
		if (ee[*it].z==0) cur[x]=it;
		if (!flw) break;
	}else cur[x]=it;
	if (flw) dis[x]=-1;
	return ans;
}
int dinic(int s,int t)
{
	int ans=0;ti=0;
	while (bfs(s,t))
	{
		ti++;
		ans+=dfs(s,t,inf);
	}
	return ans;
}
void lys_fil(int x)
{
	if (vis[x]) return;
	vis[x]=1;
	lyscsc(it,e[x]) if (ee[*it].z) lys_fil(ee[*it].y); 
}
int main()
{
	read(n);read(m);
	rep(i,n-1)
	{
		int x,y;read(x);read(y);
		e1[x].pb(mk(y,i));e1[y].pb(mk(x,i));
	}
	dfs1(1,0);
	dfs2(1,1);
	rep(i,n-1) add(i+1,t,1,te[i+1]);
	rep(i,m) add(s,t-i,1,-i);
	build(1,1,n);
	cnt=n;
	rep(i,m)
	{
		int x,y;read(x);read(y);
		upd(x,y,i);
	}
	printf("%d\n",dinic(s,t));
	memset(vis,0,sizeof(vis));
	lys_fil(s);
	rep(i,n-1) if (vis[i+1]) s1.pb(te[i+1]);
	rep(i,m) if (!vis[t-i]) s2.pb(i);
	writei(s2.size()); 
	lyscsc(it,s2) printf(" %d",*it);writeln();
	writei(s1.size()); 
	lyscsc(it,s1) printf(" %d",*it);writeln();
	return 0;
}