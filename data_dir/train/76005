#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
#include<bitset>
#include<fstream>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
//#define mod 1000000007
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=9223372036854775807;
const ll mod=998244353;
int  MOD(int  a, int  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b, ll  c)
{
    return max(c,max(a,b));
}
ll min3(ll  a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y,ll mod1)
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod1;
        y = y>>1;
        x = (x*x)%mod1;
    }
    return res;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x,ll p)
{
    return power(x,p-2,p);
}
int main()
{
    ll n,k;
    cin>>n>>k;
    string str;
    cin>>str;
    vector<vll> dp(n);
    for(ll i=0;i<n;i++)
    {
        dp[i].resize(n+1);
    }
    for(ll i=0;i<n;i++)
    {
        dp[i][0]=1;
        for(ll j=1;j<=min((ll)i+1,n);j++)
        {
            if(i>0){
                dp[i][j]=dp[i-1][j]+dp[i-1][j-1];
            }
            else
            {
                if(j==1){
                    dp[i][j]=1;
                }
                else
                {
                    if(j==0){
                        dp[i][j]=1;}
                }
            }
            int ind=-1;
            for(ll l=0;l<i;l++)
            {
                if(str[l]==str[i])
                {
                    ind=l;
                }
            }
            if(ind!=-1){
                if(ind>0){
                dp[i][j]-=dp[ind-1][j-1];
                }
                else
                {
                    if(j-1==0)
                    {
                        dp[i][j]--;
                    }
                }
            }
            dp[i][j]=min(dp[i][j],k);
        }
    }
    ll ans=0;
    ll rem=0;
    for(ll j=n;j>=0;j--)
    {
        ans+=min(k-rem,dp[n-1][j])*(n-j);
        rem+=min(k-rem,dp[n-1][j]);
    }
    if(rem==k){
        cout<<ans;}
    else
    {
        cout<<-1;
    }
}
