///****In the name of Allah, most Gracious, most Compassionate****//

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int, int> pii;

#define NL cout<<"\n";
#define ALL(a) a.begin(), a.end()
#define DBG(a) cout<< #a <<" --> "<<(a)<<endl;
#define FastIO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const int N=3e5+5;
const int oo=1e9+7;
int p[N];
int total_leaf[N];
int cnt_col[N];
int ans[N];

vector<int > g[N];

int dfs(int u,int p = -1)
{
    if(g[u].size()==1 and p!=-1 or g[u].size()==0 and p==-1)
    {
        total_leaf[u]=1;
    }
    else
        for(int v: g[u])
            if(v!=p)
                total_leaf[u]+=dfs(v, u);
    return total_leaf[u];
}

int32_t main()
{
    FastIO;
    int n;
    cin>>n;
    for(int i=2; i<=n; i++)
    {
        cin>>p[i];
        g[p[i]].push_back(i);
        g[i].push_back(p[i]);
    }
    dfs(1);
    for(int i=1; i<=n; i++)
    {
        cnt_col[total_leaf[i]]++;
    }
    int up=0;
    int total =0;
    for(int i=1; i<=n; i++)
    {
        total+=cnt_col[i];
        while(total>up)
        {
            ans[++up] = i;
        }
    }
    for(int i=1; i<=n; i++)
        cout<<ans[i]<<" ";
    NL;
}
