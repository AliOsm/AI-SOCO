#include<bits/stdc++.h>
#define int long long 
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define pb push_back
#define all(a) a.begin(),a.end()
#define ld long double
#define ub upper_bound
#define lb lower_bound
#define pii pair<int,int>
using namespace std;
set<int> adj[26];
int vis[26];
int flag = 0;
void dfs(int src,int p){
    vis[src] = 1;
    for(auto it:adj[src]){
        if(!vis[it])
            dfs(it,src);
        else if(it!=p){
            flag = 1;
        }
    }
}
void dfs2(int src){
    vis[src] = 1;
    char ch = src+'a';
    cout<<ch<<"";
    for(auto it:adj[src]){
        if(!vis[it])
            dfs2(it);
    }
}
signed main(){
    fast;
    int t;
    cin>>t;
    while(t--){
        string s;
        cin>>s;
        int n = s.size();
        for(int i=0;i<26;i++){
            adj[i].clear();
            vis[i] = 0;
        }
        for(int i=1;i<n;i++){
            int u = s[i]-'a';
            int v = s[i-1]-'a';
            adj[u].insert(v);
            adj[v].insert(u);
        }
        int bb = 1;
        for(int i=0;i<26;i++){
            if(!vis[i]){
                flag = 0;
                dfs(i,-1);
                if(flag){
                    bb = 0;
                    break;
                }
            }
        }   
        if(bb == 0){
            cout<<"NO\n";
        }
        else{
            int ff = 1;
            for(int i=0;i<26;i++){
                vis[i] = 0;
                if(adj[i].size()>2){
                    ff = 0;
                    break;
                }
            }
            if(ff == 0){
                cout<<"NO\n";
                continue;
            }
            cout<<"YES\n";
            for(int i=0;i<26;i++){
                if(!vis[i] && (int)adj[i].size() == 1){
                    dfs2(i);
                }
            }
            for(int i=0;i<26;i++){
                if(!vis[i])
                    dfs2(i);
            }
            cout<<"\n";
        }
    }

}   