//1100D
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
using namespace std;

//#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);


int x[667], y[667], X, Y, a[1007][1007], st[4], mn;
bool ok = false;
void getinfo() {
	int k, b, c;
	cin >> k >> b >> c;
	if (k <= 0) exit(0);
	a[x[k]][y[k]] = 0;
	x[k] = b;
	y[k] = c;
	a[x[k]][y[k]] = 1;
}

void putinfo() {
	cout << x[0] << " " << y[0] << endl;
	cout.flush();
	fflush(stdout);
}

int checkSZ(int X, int Y) {
	int SZ = 0;
	for (int i = 1; i < 500; ++i) {
		for (int j = 1; j < 500; ++j) {
			int X0 = x[0] + X * i;
			int Y0 = y[0] + Y * j;
			SZ += a[X0][Y0];
		}
	}
	return SZ;
}

void check(int X, int Y) {
	for (int i = 1; i < 500; ++i) {
		if (a[x[0] + X][y[0] + Y] == 1) {
			X = 0;
		}
		x[0] += X;
		y[0] += Y;
		putinfo();
		getinfo();
	}
}

int main() {
	//IOS;
	cin >> x[0] >> y[0];
	for (int i = 1; i < 667; ++i) {
		cin >> x[i] >> y[i];
		a[x[i]][y[i]] = 1;
	}
	while (x[0] != 500 || y[0] != 500) {
		if (x[0] != 500)
			X = (500 - x[0]) / abs(500 - x[0]);
		else X = 0;
		if (y[0] != 500)
			Y = (500 - y[0]) / abs(500 - y[0]);
		else Y = 0;
		if (a[x[0] + X][y[0] + Y] == 1) {
			X = 0;
		}
		x[0] += X;
		y[0] += Y;
		putinfo();
		getinfo();
	}
	st[0] = checkSZ(1, 1);
	st[1] = checkSZ(1, -1);
	st[2] = checkSZ(-1, 1);
	st[3] = checkSZ(-1, -1);
	mn = min(st[0], min(st[1], min(st[2], st[3])));

	if (st[0] == mn)	check(-1, -1);
	if (st[1] == mn)	check(-1, 1);
	if (st[2] == mn)	check(1, -1);
	if (st[3] == mn)	check(1, 1);

	return 0;
}