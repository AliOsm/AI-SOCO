#include<bits/stdc++.h>
#define LL long long
#define fi first
#define se second
#define mk make_pair
#define PII pair<int, int>
#define y1 skldjfskldjg
#define y2 skldfjsklejg
using namespace std;

const int N = 2e5 + 7;
const int M = 1e7 + 7;
const int inf = 0x3f3f3f3f;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1000000007;

int n, a[N], depth[N], b[N], c[N], tot;
vector<PII> edge[N];
bool vis[N];
int main() {
    scanf("%d", &n);
    for(int i = 1; i < n; i++) {
        int u, v;
        scanf("%d%d", &u, &v);
        edge[u].push_back(mk(0, v));
        edge[v].push_back(mk(0, u));
    }
    for(int i = 1; i <= n; i++) {
        scanf("%d", &a[i]);
        b[a[i]] = i;
    }

    if(a[1] != 1) {
        puts("No");
        return 0;
    }

    for(int i = 1; i <= n; i++) {
        for(int j = 0; j < edge[i].size(); j++) {
            edge[i][j].fi = b[edge[i][j].se];
        }
        sort(edge[i].begin(), edge[i].end());
    }

    queue<int> que;
    que.push(1); vis[1] = true;
    while(!que.empty()) {
        int u = que.front(); que.pop();
        c[++tot] = u;
        for(PII v : edge[u]) {
            if(vis[v.se]) continue;
            vis[v.se] = true;
            que.push(v.se);
        }
    }

    for(int i = 1; i <= n; i++) {
        if(c[i] != a[i]) {
            puts("No");
            return 0;
        }
    }
    puts("Yes");
    return 0;
}

/*
*/
