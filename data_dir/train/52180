#include<stdio.h>
#include<algorithm>
using namespace std;
#define inf 100000000
#define N 24
int f[(1<<N) + 1];
int pa[(1<<N) + 1];
int dis[30];
int sto[70];
int p[30];
int x[30], y[30];

int abs(int xx){if(xx < 0)return -xx; return xx;}
int D(int i, int j){
    int dx = x[i] - x[j], dy = y[i] - y[j];
    return dx * dx + dy * dy;
}
int main(){
    int  n, xx, yy;
    //freopen("D.in","r",stdin);
    scanf("%d%d", &xx, &yy);
    scanf("%d", &n);
    x[n] = xx, y[n] = yy;
    for(int i = 0; i < n; i ++)scanf("%d%d", &x[i], &y[i]),dis[i] = D(n,i);
    f[0] = 0;
    for(int i = 1; i < (1<<n); i ++){
        f[i] = inf;
        int cnt = 0;
        for(int t = 0; t < n; t ++)if((1<<t) & i)p[cnt ++] = t;
        for(int k = 1; k < cnt; k ++){
            int ii = i - (1<<p[0]) - (1<<p[k]);
            int tmp = f[ii] + dis[p[0]] + dis[p[k]] + D(p[0], p[k]);
            f[i] = min(tmp, f[i]);
            if(f[i] == tmp)pa[i] = ii;
        }
        for(int j = 0; j < cnt; j ++){
            int ii = i - (1<<p[j]);
            int tmp = f[ii] + 2 * dis[p[j]];
            f[i] = min(tmp, f[i]);
            if(f[i] == tmp)pa[i] = ii;
        }
    }
    int po = -1;
    int t = 0;
    int nnn = (1<<n) - 1;
    printf("%d\n", f[(1<<n) - 1]);
    sto[t ++] = 0;
    while(1){
        if(!nnn)break;
        int nn = pa[nnn];
        int dif = nnn - nn;
        for(int i = 0; i < n; i ++)if((1<<i) & dif)sto[t ++] = i + 1;
        sto[t ++] = 0;
        nnn = nn;
    }
    for(int i = t - 1; i >= 0;  i --)printf("%d ", sto[i]);
    puts("");
}
