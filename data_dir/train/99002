#include<bits/stdc++.h>
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int MAXN=1e5+5;
const int INF=0x3f3f3f3f;
struct node
{
	int x[4],y[4];
}s[MAXN];
struct Node
{
	int x,y,id;
	Node(int _x=0,int _y=0,int _id=0):x(_x),y(_y),id(_id){}
	bool operator < (const Node &o)const
	{
		if(x!=o.x) return x<o.x;
		if(y!=o.y) return y<o.y;
		return id<o.id;
	}
};
bool solve(set<Node> A[4])
{
	if(A[0].size()==1) return true;
	int n=A[0].size();
	int mx[4]={-INF,-INF,-INF,-INF};
	set<Node>:: iterator it[4],pt;
	for(int i=0;i<4;i++) it[i]=A[i].begin();
	for(int i=1;i<n;i++)
	{
		for(int j=0;j<4;j++)
		{
			mx[j]=max(mx[j],it[j]->y);
			it[j]++;
			if(it[j]->x>=mx[j])
			{
				set<Node> B[4];
			   	for(pt=A[j].begin();pt!=it[j];pt++) 
				{ 
					int id=pt->id;
					for(int k=0;k<4;k++)
					{
						Node tmp=Node(s[id].x[k],s[id].y[k],id);
						B[k].insert(tmp);
					}
				}
				for(int k=0;k<4;k++)
					for(auto v:B[k])
						A[k].erase(v);
				return solve(B)&&solve(A);
			}
		}
	}
	return false;
}
set<Node> A[4];
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		int x1,y1,x2,y2;
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		s[i].x[0]=x1,s[i].y[0]=x2;
		A[0].insert(Node(x1,x2,i));
		s[i].x[1]=-x2,s[i].y[1]=-x1;
		A[1].insert(Node(-x2,-x1,i));
		s[i].x[2]=y1,s[i].y[2]=y2;
		A[2].insert(Node(y1,y2,i));
		s[i].x[3]=-y2,s[i].y[3]=-y1;
		A[3].insert(Node(-y2,-y1,i));
	}
	if(solve(A)) puts("YES");
	else puts("NO");
	return 0;
}
