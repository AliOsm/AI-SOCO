#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
typedef tree<ii,null_type,less<ii>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;

bool ok(string &s, int x) {
	set<int> vis, right;
	int n=s.size();
	for (int i=0; i<n; i++)
		if(s[i]=='R')
			right.insert(i);
	queue<int> q; q.push(-1); vis.insert(-1);
	while(!q.empty()) {
		int cur=q.front(); q.pop();
		int lim=cur+x;
		if(lim>=n)
			return true;
		set<int> rem;
		for (auto nxt : right) {
			if(nxt>lim)
				break;
			q.push(nxt); rem.insert(nxt);
			//right.erase(nxt);
		}
		for (auto x : rem)
			right.erase(x);
	}
	return false;
}

int eval(string &s) {
	int low=1, high=s.size()+1, mid;
	while(low<high) {
		mid=(low+high)/2;
		if(ok(s,mid)) high=mid;
		else low=mid+1;
	}
	return low;
}

int main() {
	cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(0);
	int t; cin>>t;
	while(t--) {
		string s; cin>>s;
		cout<<eval(s)<<"\n";
	}
	return 0;
}
