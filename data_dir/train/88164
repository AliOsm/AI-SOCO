#include <iostream>
#include <cstdio>
#include <algorithm>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <cstring>
#include <fstream>
#include <memory.h>
#include <iomanip>
#include <bitset>
#include <fstream>
#include <string>
#include <list>
#include <unordered_map>
#include <cfloat>

using namespace std;

#define right asfdsg
#define left asfdsvs
#define pb emplace_back
#define F first
#define S second
#define mp make_pair
#define x1 _xxx1
#define y1 _yyy1

#define forn(i, n) for(int i = 0 ; (i) < (n) ; ++i)

typedef  long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef std::pair < int, int > pii;
typedef std::pair < ll, ll > pll;
typedef std::vector < std::vector < ld > > vld;

const int INF = (int) 2e9 + 7;
const ld EPS = (ld) 1e-5;
const int BASE = (int) 1e9 + 7;
const int MAXN = 200500;
const ll INFLL = (ll) 4e18;

int a, b, f, k;

void check(int cur) {
    if (cur < 0) {
        cout << -1;
        exit(0);
    }
}

int main() {
    scanf ("%d%d%d%d", &a, &b, &f, &k);
    if (b < f || a - f > b) {
        cout << -1;
        return 0;
    }
    int ans = 0;
    int cur = b;
    for (int i = 1; i <= k; i ++) {
        if (i & 1) {
            if (cur >= 2 * a - f || (i == k && cur >= a)) {
                cur -= a;
                check(cur);
            }
            else {
                cur -= f;
                check(cur);
                cur = b;
                cur -= a - f;
                check(cur);
                ans ++;
            }
        }
        else {
            if (cur >= a + f || (i == k && cur >= a)) {
                cur -= a;
                check(cur);
            }
            else {
                cur -= a - f;
                check(cur);
                cur = b;
                cur -= f;
                check(cur);
                ans ++;
            }
        }
    }
    cout << ans;
    return 0;
}
