#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define sz(v) (int)v.size()
#define up_b upper_bound
#define low_b lower_bound
#define nl '\n'

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef long double ld;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

const int N=4e5+11;
const int M=2e6+11;
const int W=1e3+11;
const int inf=1e9;
const ll INF=1e18;
const ll mod=1e9+7;
const ld EPS=1e-9;

struct tour{
  int x,y,z;
};

vector<tour>ans;
vector<int>g[N];
int used[N],tin[N],timer;

bool dfs(int v,int p){
  tin[v]=++timer;
  used[v]=1;
  vector<int>vec;
  for(int i=0;i<sz(g[v]);i++){
    int to=g[v][i];
    if(to==p)continue;
    if(!used[to]){
      if(!dfs(to,v)){
        vec.pb(to);
      }
    }
    else{
      if(tin[to]<tin[v]){
        vec.pb(to);
      }
    }
  }
  int st=sz(vec)%2;
  if(st==1){
    if(p){
      ans.pb({p,v,vec[0]});
    }
  }
  for(int i=st;i<sz(vec);i+=2){
    ans.pb({vec[i],v,vec[i+1]});
  }
  return st;
}

int main(){
  ios_base::sync_with_stdio(0);
  cin.tie(0),cout.tie(0);
  int n,m;
  cin>>n>>m;
  for(int i=1;i<=m;i++){
    int u,v;
    cin>>u>>v;
    g[u].pb(v);
    g[v].pb(u);
  }
  for(int i=1;i<=n;i++){
    if(!used[i]){
      dfs(i,0);
    }
  }
  cout<<sz(ans)<<nl;
  for(int i=0;i<sz(ans);i++){
    cout<<ans[i].x<<" "<<ans[i].y<<" "<<ans[i].z<<nl;
  }
}
