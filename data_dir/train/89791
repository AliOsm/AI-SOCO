#include <bits/stdc++.h>
using namespace std;

int n;
int a[5010], dp[5010][5010], tb[5010][5010];

int solve (int l, int r) {
  if (l > r) return INT_MIN;
  if (dp[l][r] != -1) return dp[l][r];
  return dp[l][r] = max (tb[l][r], max(solve (l + 1, r), solve (l, r - 1)));
}

signed main () {
  cin >> n;
  for (int i = 1; i <= n; i++) cin >> a[i];
  for (int i = 1; i <= n; i++) {
    tb[i][i] = a[i];
    tb[i][i + 1] = a[i] ^ a[i + 1];
  }
  for (int i = 2; i <= n; i++) {
    for (int j = 1; j <= n; j++) {
      tb[j][j + i] = tb[j][j + i - 1] ^ tb[j + 1][j + i];
    }
  }
  memset (dp, -1, sizeof dp);
  solve (1, n);
  int q;
  cin >> q;
  while (q--) {
    int l, r;
    cin >> l >> r;
    cout << dp[l][r] << endl;
  }
	return 0;
}
