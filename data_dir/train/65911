#define _USE_MATH_DEFINES

#include <iostream>
#include <cstdio>
#include <memory>
#include <string>
#include <cstdlib>
#include <set>
#include <utility>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <cmath>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>
#include <memory>

using namespace std;

#define int long long
//region TEMPLATE
////@formatter:off
#define double long double
typedef long long ll;
typedef unsigned long long ull;
template<typename T>void __read(T &a) { cin >> a; }
template<typename T, typename ... Args> void __read(T &a, Args &... args) { cin >> a;__read(args...);}
#define make(t, ...) t __VA_ARGS__; __read(__VA_ARGS__)
#define makev(a, n) VI a(n); FOR(n) cin >> a[i]
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
typedef vector<int> VI;
typedef vector<vector<int>> VVI;
typedef pair<int, int> PII;
typedef pair<pair<int, int>, int> PPII;
constexpr ll M7 = 1000000007ll;
constexpr ll M9 = 1000000009ll;
constexpr ll MFFT = 998244353ll;
template<class T> void outv(T &a) { for (auto &x : a) cout << x << ' '; }
static mt19937 rnd(static_cast<unsigned>(chrono::steady_clock::now().time_since_epoch().count())); // NOLINT(cert-err58-cpp)
auto __fast_io__ = (ios_base::sync_with_stdio(false), cin.tie(nullptr)); // NOLINT(cert-err58-cpp,cppcoreguidelines-interfaces-global-init)
////@formatter:on
//endregion

VVI ft;

void xor_val(int x, int y, int val) {
    for (int i = x; i < ft.size(); i |= i + 1) {
        for (int j = y; j < ft[i].size(); j |= j + 1) {
            ft[i][j] ^= val;
        }
    }
}

int get_val(int x, int y) {
    int res = 0;
    for (int i = x; i >= 0; i = (i & (i + 1)) - 1) {
        for (int j = y; j >= 0; j = (j & (j + 1)) - 1) {
            res ^= ft[i][j];
        }
    }
    return res;
}


int32_t main() {
    make(int, n, m, q);
    ft.assign(n + 1, VI(m + 1));
    map<tuple<int, int, int, int>, int> a;
    mt19937_64 r(chrono::steady_clock::now().time_since_epoch().count());
    while (q--) {
        make(int, t, x1, y1, x2, y2);
        x1--, y1--;
        if (t == 1) {
            int g = r();
            xor_val(x2, y2, g);
            xor_val(x1, y2, g);
            xor_val(x2, y1, g);
            xor_val(x1, y1, g);
            a[{x1, y1, x2, y2}] = g;
        }
        if (t == 2) {
            auto it = a.find({x1, y1, x2, y2});
            int g = it->second;
            xor_val(x2, y2, g);
            xor_val(x1, y2, g);
            xor_val(x2, y1, g);
            xor_val(x1, y1, g);
            a.erase(it);
        }
        if (t == 3) {
            x2--, y2--;
            cout << (get_val(x1, y1) == get_val(x2, y2) ? "Yes\n" : "No\n");
        }
    }

    return 0;
}