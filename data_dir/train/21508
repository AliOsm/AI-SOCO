// I can't tell you what it really is,
// I can only tell you what it feels like.
#include "bits/stdc++.h"
using namespace std;
 
#define int long long
#define F first
#define S second
#define sz(x) ((int)x.size())
#define rep(i,a,n) for (int i = a; i <= n; ++i)
#define all(v)  v.begin(), v.end()
#define pb push_back
#define P pair < int, int >
#define E cout << '\n'
 
#define reno(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it) {}
 
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
  cout << *it << " = " << a << ' ';
  err(++it, args...);
}
const int mod = 1e9 + 7;
const int N = 2e5 + 5;

int a[N], idx[N];
int pre[N];

inline void solve() {
  int n;
  memset(pre, -1, sizeof(pre));
  cin >> n;
  rep(i,1,n) {
    cin >> a[i];
  }   
  int q, x = -1;
  cin >> q;
  rep(i,1,q) {
    int c, pos, val;
    cin >> c;
    if (c == 1) {
      cin >> pos >> val;
      a[pos] = val;
      idx[pos] = i;
    }
    else {
      cin >> val;
      pre[i] = val;      
      x = max(x, val);
    }
  }
  for (int i = q - 1; i > 0; --i) {
    if (pre[i] == -1) {
      pre[i] = pre[i+1];
    }
    else {
      pre[i] = max(pre[i], pre[i+1]);
    }
  }
  // /*/*cout << idx[1] << '\n';
  /*rep(i,1,n) {
    cout << pre[i] << ' ';
  }E;*/
  rep(i,1,n) {
    // cout << idx[i] << ' ';
    if (idx[i] == 0) {
      a[i] = max(x, a[i]);
    }
    else {
      if (pre[idx[i]] != -1) {     
        a[i] = max(a[i], pre[idx[i]]);
      }
    }
    cout << a[i] << ' ';//  E;  
  }
}
signed main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  int t = 1;
  //cin >> t; while(t--)
  solve();
  return 0;
}