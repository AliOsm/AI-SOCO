#include <iostream>
#include <cstring>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <vector>
#include <cstdio>
#include <ctime>
#include <queue>
using namespace std;
#define ll long long
#define VI vector<int>
#define inf 1000000000
#define L(s) ((int)(s).size())
#define x first 
#define y second
#define pii pair<int, int>
#define mp make_pair
#define pb push_back
#define all(s) (s).begin(), (s).end()
int c[5][5], n;
int main() {
	cin >> n;
	for(int i = 0; i < n; ++i) {
		char ch; cin >> ch;
		int row;
		if (ch == 'R') row = 0; else
			if (ch == 'G') row = 1; else
				if (ch == 'B') row = 2; else
					if (ch == 'Y') row = 3; else
						if (ch == 'W') row = 4;
		int col; cin >> col; --col;
		c[row][col]++;
	}
	int ans = 10;
	for(int colmask = 0; colmask < (1 << 5); ++colmask) {
		for(int digmask = 0; digmask < (1 << 5); ++digmask) {
			int bitc = 0;
			for(int i = 0; i < 5; ++i) if (colmask & (1 << i)) ++bitc;
			for(int i = 0; i < 5; ++i) if (digmask & (1 << i)) ++bitc;
			if (bitc >= ans) continue;
			bool good = 1;
			for(int r1 = 0; r1 < 5; ++r1)
				for(int c1 = 0; c1 < 5; ++c1)
					if (c[r1][c1])
						for(int r2 = 0; r2 < 5; ++r2)
							for(int c2 = 0; c2 < 5; ++c2)
								if (c[r2][c2] && mp(r1, c1) != mp(r2, c2)) {
									bool diff = 0;
									if (r1 != r2 && ((colmask & (1 << r1)) || (colmask & (1 << r2)))) diff = 1;
									if (c1 != c2 && ((digmask & (1 << c1)) || (digmask & (1 << c2)))) diff = 1;
									if (!diff) good = 0;
								}
			if (good) ans = bitc;
		}
	}
	cout << ans << endl;
}
	