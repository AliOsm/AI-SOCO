#include <bits/stdc++.h>
using namespace std;

bool chmax(int64_t& a, int64_t b){
    if(a < b){
        a = b;
        return true;
    }else{
        return false;
    }
}

int main(){
    int N;
    cin >> N;
    vector<pair<int, int>> A(N);
    for(int i=0; i<N; i++){
        int a;
        cin >> a;
        A[i] = {a, i};
    }
    sort(A.begin(), A.end());
    A.push_back(A.back());

    vector<int64_t> dp(N+1, -1e18), prv(N+1);
    dp[0] = 0;
    for(int i=0; i<N; i++){
        for(int j=3; j<=5; j++) if(i+j <= N && chmax(dp[i+j], dp[i] + A[i+j].first - A[i+j-1].first)) prv[i+j] = i;
    }
    bitset<200001> divided;
    int pos = prv[N];
    while(pos > 0){
        divided[pos] = 1;
        pos = prv[pos];
    }
    
    int64_t ans = A[N-1].first - A[0].first - dp[N];
    vector<int> vans(N);
    int num = 1;
    for(int i=0; i<N; i++){
        if(divided[i]) num++;
        vans[A[i].second] = num;
    }
    cout << ans << " " << num << endl;
    for(int i=0; i<N; i++) cout << vans[i] << " \n"[i==N-1];
    return 0;
}
