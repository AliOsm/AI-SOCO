#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;

const ll MOD = 1e9+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
    ll result = 1;
    base %= modulus;
    while(exponent > 0)
    {
        if(exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent >>= 1;
        base = (base * base) % modulus;
    }
    return result;
}

ll modInverse(ll a, ll m = MOD)
{
    return powerWithMod(a, m-2, m);
}

template<typename T>
void term(T x)
{
    cout << x << "\n";
    exit(0);
}

constexpr int N=2e5, LIM=2750131;
int n, p[LIM+1];
vector<int> prime{-1}, ans;
multiset<int> a;

void fillconn()
{
    for(int i=2; i<=LIM; i++)
    {
        if(p[i] == 0)
        {
            prime.push_back(i);
        }
        for(int j=2;i*j<=LIM;j++)
            p[i*j]=i;
    }
}

int main()
{
    ssync;
    fillconn();
    cin >> n;
    for(int i=0; i<2*n; i++)
    {
        int x;
        cin >> x;
        a.insert(x);
    }
    while(not a.empty())
    {
        auto curr = *(a.rbegin());
        auto it = std::lower_bound(prime.begin(), prime.end(), curr);
        if(it != prime.end() and *it == curr)
        {
            auto torem = it - prime.begin();
            a.erase(a.find(torem));
            ans.push_back(torem);
        }
        else
        {
            auto torem = p[curr];
            a.erase(a.find(torem));
            ans.push_back(curr);
        }
        a.erase(--a.end());
    }
    for(auto& x: ans)
        cout << x << ' ';
    term(' ');
    return 0;
}
