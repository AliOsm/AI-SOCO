// was it all worth it ?
#include <bits/stdc++.h>
//#define int long long
using namespace std;
#define IOS ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
inline int in(){int32_t x ; scanf("%d",&x) ; return x ; }
inline long long lin(){long long x ; scanf("%lld",&x) ; return x ;}
const int maxn = 2e5 + 10;
int a[maxn];
int suf[20][maxn];
pair<int,int> cmp[maxn];
int isa[20][maxn];
int beg[maxn];
map<int,vector<int > > pos;
vector<pair<int,int> > match;
inline bool check(int i , int j , int len)
{
    for (int pt = 19 ; pt >= 0 ; pt --)
    {
        if (len & (1 << pt))
        {
            if (isa[pt][i] == isa[pt][j]){
                i += (1 << pt);
                j += (1 << pt);
            }else return false;
        }
    }
    return true;
    
}
int32_t main()
{
    int n = in();
    for (int i = 0 ; i < n ; i ++) a[i] = in() , suf[0][i] = i , pos[a[i]].push_back(i);
    sort(suf[0],suf[0]+n,[](const int &a , const int &b) {return ::a[a] < ::a[b] ;});
    for (int i = 1 ; i < n ; i ++) beg[i] = a[suf[0][i]] == a[suf[0][i - 1]] ? beg[i - 1] : i;
    for (int i = 0 ; i < n ; i ++) isa[0][suf[0][i]] = beg[i];
    for (int pt = 1 ; pt < 20 ; pt ++)
    {
        for (int i = 0 ; i < n ; i ++){
            int id = suf[pt-1][i];
            cmp[id].first = beg[i];
        }
        for (int i = 0 ; i < n ; i ++){
            int id = suf[pt-1][i];
            if (id + (1 << (pt - 1)) < n){
                cmp[id].second = cmp[id + (1 << (pt - 1))].first;
            }
            else cmp[id].second = -1;
        }
        
        for (int i = 0 ; i < n ; i ++) suf[pt][i] = i;
        sort(suf[pt],suf[pt]+n,[](const int &a , const int &b) {return cmp[a] < cmp[b] ;});
        for (int i = 1 ; i < n ; i ++) beg[i] = cmp[suf[pt][i]] == cmp[suf[pt][i-1]] ? beg[i-1] : i ;
        for (int i = 0 ; i < n ; i ++) isa[pt][suf[pt][i]] = beg[i];
    }
    for (auto x : pos)
    {
        int sz = (int)x.second.size();
        for (int i = 0 ; i < sz ; i ++)
        {
            for (int j = i + 1 ; j < sz ; j ++)
            {
                int id , id2;
                id = x.second[i];
                id2 = x.second[j];
                if (id2 + id2 - id <= n)
                {
                    if (check(id,id2,id2-id)){
                        match.push_back({id2-id,id});
                    }
                }
            }
        }
    }
    int k = -1;
    sort(match.begin(),match.end());
    for (auto x : match)
    {
        if (x.second > k)
        {
            k = x.second + x.first - 1;
        }
    }
    int rem = n - k - 1;
    cout << rem << "\n";
    for (int i = k + 1 ; i < n ; i ++) cout << a[i] << " ";
    cout << "\n";
    return 0;
}
