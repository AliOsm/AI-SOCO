#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define scanl(a) scanf("%lld",&a)
#define scanii(a,b) scanf("%d%d",&a,&b)
#define scaniii(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define scanll(a,b) scanf("%lld%lld",&a,&b)
#define scanlll(a,b,c) scanf("%lld%lld%lld",&a,&b,&c)
#define scani(a) scanf("%d",&a)
#define clr(a) memset(a,0,sizeof(a))
#define clr_(a) memset(a,-1,sizeof(a))
#define pb(a) push_back(a)
#define pii pair<ll,ll>
#define sqr(a) a*a
#define eps 1e-9
#define inf 1e9
#define pi acos(-1.0)
#define ff first
#define ss second
#define INF 1e18
#define siz 100010
#define dbug(x) cout<<x<<" "
int Set(int n,int pos){return n=n | (1<<pos);}///sets the pos bit
int reset(int n,int pos){return n=n & ~(1<<pos);}///resets the pos bit
bool check(int n,int pos){return (bool)(n & (1<<pos));}///return pos bit
ll power(ll x,ll n)
{
    ///complexity O(logn)
    if(n==0)return 1;
    else if(n%2==0)
    {
        ll y=power(x,n/2);
        return y*y;
    }
    else
        return x*power(x,n-1);
}
int strTOint(string s)
{
    stringstream ss;
    int x;
    ss<<s;
    ss>>x;
    return x;
}
double geo_dist(int a,int b,int c,int d)
{
    double dd=(double)(a-c)*(a-c)+(b-d)*(b-d);
    double r=sqrt(dd)+eps;
    return r;
}
ll bigmod(ll a,ll p,ll m)
{
    if(p==0)return 1%m;
    if(p%2==0)
    {
        ll y=bigmod(a,p/2,m);
        return (y*y)%m;
    }
    else
    {
        return (a*bigmod(a,p-1,m))%m;
    }
}
ll x,y,d,g;
void ext_gcd(ll a,ll b)
{
    if(b==0)
    {
        x=1;y=0;d=a;return;
    }
    ext_gcd(b,a%b);
    ll x1=y;
    ll y1=x-(a/b)*y;
    x=x1;
    y=y1;
}
ll modInv (ll a,ll m ) {

    ///if m prime
    ///ll x = bigmod( a, m - 2, m ); ///(ax)%m = 1
   /// i m not prime;
    ext_gcd( a, m);
    ///Process x so that it is between 0 and m-1
    x %= m;
    if ( x < 0 ) x += m;
    return x;
}
vector<int>num;
void input(string s)
{
    ///declare a gloabl vector num & values will be in num
    istringstream ss(s);
    int n;
    while(ss>>n)
    {
        num.pb(n);
    }
}
int fx[]={0,0,-1,1,-1,1,1,-1};
int fy[]={1,-1,0,0,1,1,-1,-1};
///FOR KNIGHT MOVE
///int fx[]={2,1,-1,-2,-2,-1,1,2};
///int fy[]={1,2,2,1,-1,-2,-2,-1};
map<string,int>mp;
vector<ll>dist;
pii cost[200010],cap[200010];
ll gas[200010];
ll n,k,s,t,len;
ll func(ll j)
{
    ll ans=0;
    for(ll i=0;i<len;i++)
    {
        ll temp=cap[j].ff/dist[i];
        ll m=cap[j].ff%dist[i];
        if(temp>=2)ans+=dist[i];
        else if(temp==1)
        {
            if(m==0)ans+=(dist[i]*2);
            else
            {
                ll res=(temp+1)*dist[i];
                ll p=res-cap[j].ff;
                ll q=dist[i]-p;
                p*=2;
                ans+=(p+q);
            }
        }
        else return -1;
    }
    return ans;
}
int binary()
{
    ll low=0,high=n-1;
    ll mid;
    while(high-low>5)
    {
        mid=(low+high)/2;
        ll khoroch=func(mid);
        if(khoroch>t || khoroch==-1)
            low=mid;
        else
            high=mid;
    }
    for (ll i=low;i<=high;i++)
    {
        ll khoroch=func(i);
       // cout<<i<<" "<<khoroch<<endl;
        if(khoroch!=-1 && khoroch<=t)return i;
    }
    return -1;
}
int main()
{
    ///freopen("in.txt","r",stdin);
    ///freopen("out.txt","w",stdout);
    ios_base::sync_with_stdio(false);

    while(cin>>n>>k>>s>>t)
    {
        dist.clear();
        for(ll i=0;i<n;i++)
            {
                cin>>cost[i].ff>>cost[i].ss;
                cap[i].ff=cost[i].ss;
                cap[i].ss=cost[i].ff;
            }
            sort(cap,cap+n);
        ///sort(cost,cost+n);
        for(ll i=0;i<k;i++)
            {
                cin>>gas[i];
            }
        sort(gas,gas+k);
        ll prev=0;
        for(ll i=0;i<k;i++)
        {
            dist.pb(gas[i]-prev);
            prev=gas[i];
        }
        dist.pb(s-prev);
        len=dist.size();
      //  for(int i=0;i<len;i++)cout<<dist[i]<<" ";
        ll in=binary();
        if(in==-1){cout<<-1<<endl;continue;}
        ll ans=INF;
        for(ll i=in;i<n;i++)
        {
            if(cap[i].ss<=ans)ans=cap[i].ss;
        }
        cout<<ans<<endl;
    }
    return 0;
}

