/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using pii = pair<int, int>;

#define pb push_back

constexpr auto MOD = 1000000007LL;
constexpr auto LINF = (1LL<<60);
constexpr auto INF = 2147483647LL;
constexpr auto PI = 3.1415926535897932384626433;
constexpr auto EPS = 1E-9;

template<typename T1, typename T2>
ostream& operator<<(ostream& out, const pair<T1, T2> p){
	out << p.first << ' ' << p.second;
	return out;
}

template <typename T1, typename T2>
istream& operator>>(istream& in, pair<T1, T2> &p){
	in >> p.first >> p.second;
	return in;
}

auto printVector = []<typename T>(ostream& out, vector<T> v){
	copy(v.begin(), v.end(), ostream_iterator<T>(out, " "));
};

int n;
ll m, c;

int main(){
	#ifdef LOCAL
		freopen("input.txt","r",stdin);
//		freopen("output.txt","w",stdout);
	#endif
	ios_base::sync_with_stdio(false);

	cin >> n >> m >> c;
	
	map<ll, ll> speedOnLine;
	ll onLine = 0;

	map<ll, map<ll, ll> > hsh;
	
	for(int i = 0; i < n; i++){
		ll x, vx, vy;
		cin >> x >> vx >> vy;
		if(vx*m == vy){
			speedOnLine[vx]++;
			onLine++;
		}

		hsh[m*vx-vy][vx]++;
	}

	ll res = 0;

	for(auto [_, m]: hsh){
		ll sz = 0;
		for(auto [_, cnt]: m){
			res += cnt*sz;
			sz += cnt;
		}
	}

	res *= 2;
	cout << res << endl;

	return 0;
}

