#include <bits/stdc++.h>
#define REP(i, n) for (long long i = 0; i < n; i++)
using namespace std;
typedef long long Long;

const Long N=200011;

pair<Long,Long> A[N];
vector< pair<Long,Long> > adj[N];
priority_queue< pair<Long, Long> > pq;
bool vis[N];

void process(Long nod){
	vis[nod]=true;
	Long sz=adj[nod].size();
	for(Long i=0; i<sz; i++){
		if(!vis[adj[nod][i].second]){
			pq.push(adj[nod][i]);
		}
	}
}

void prim(Long ini){
	Long pesototal=0;
	process(ini);
	while(!pq.empty()){
		pair<Long, Long> ac=pq.top();
		pq.pop();
		Long nod=ac.second;
		Long peso=-ac.first;
		if(!vis[nod]){
			pesototal += peso;
			process(nod);
		}
	}
	cout<<pesototal<<endl;
	return;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.precision(10);
    cout << fixed;
	
	Long n, m, x, y, w;
	cin >> n >> m;
	for(Long i = 0; i < n; i++){
		cin >> x;
		A[i] = make_pair(x,i+1);
	}
	for(Long i = 0; i < m; i ++){
		cin >> x >> y >> w;
		if( w <= A[x-1].first + A[y-1].first){
			adj[x].push_back(make_pair(-w,y));
			adj[y].push_back(make_pair(-w,x));
		}
	}
	sort(A,A+n);
	for(Long i = 1; i < n; i++){
		x = A[0].second;
		y = A[i].second;
		w = A[i].first + A[0].first;
		adj[x].push_back(make_pair(-w,y));
		adj[y].push_back(make_pair(-w,x));
	}
	prim(1);
	return 0;
}
