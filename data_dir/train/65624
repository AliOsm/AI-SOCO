#include <bits/stdc++.h>
using namespace std;

const int N = 2 * 100 * 1000 + 20;

vector<long long> plc, val;
pair<long long, int> num[N];
long long ans[N];

int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> num[i].first;
	}
	int q;
	cin >> q;
	for (int i = 0; i < q; i++) {
		int t;
		cin >> t;
		if (t == 1) {
			int p, x;
			cin >> p >> x;
			p--;
			num[p].first = x, num[p].second = i;	
		}
		else {
			plc.push_back(i);
			int x;
			cin >> x;
			val.push_back(x);	
		}
	}
	for (int i = (int) plc.size() - 1; i >= 0; i--) {
		ans[i] = max(ans[i + 1], val[i]);
	}
	for (int i = 0; i < n; i++) {
		int x = lower_bound(plc.begin(), plc.end(), num[i].second) - plc.begin();
//		cout << "i = " << i << " x = " << x << endl;
		num[i].first = max(ans[x], num[i].first);
	}
	for (int i = 0 ; i < n; i++) {
		cout << num[i].first << " ";
	}
	return 0;
}
