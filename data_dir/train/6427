#define _CRT_SECURE_NO_WARNINGS
#include<bits/stdc++.h>
using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,a,n) for(int i=a;i<n;i++)
#define mp make_pair
#define fastIO ios::sync_with_stdio(false)
#define read freopen("in.in","r",stdin)
#define write freopen("out.out","w",stdout)
#define scf(xx) scanf("%d",&xx)
#define scfl(xx) scanf("%I64d",&xx)
#define All(a) a.begin(), a.end()

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef long double ld;


int dx[] = { 0, 1, 0, -1, -1, -1, 1, 1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };




int n, m;
vector<ll> w[4];
ll ans[300010];
ll c1[300010];
ll c2[300010];

int main(){
	//read; write;
	scf(n); scf(m);
	rep(i, n){
		int x, y;
		scf(x); scf(y);
		w[x].push_back(y);
	}
	repi(i, 1, 4){
		sort(All(w[i]));
		reverse(All(w[i]));
		//repi(j, 1, w[i].size()){
		//	w[i][j] += w[i][j - 1];
		//}
	}
	// pre calc 
	ans[0] = c1[0] = ans[1] = c1[1] = c2[1] = c2[0] = 0;
	if (w[1].size() > 0) ans[1] = w[1][0], c1[1]++;
	for (int i = 2; i <= m; i++){

		// one step back 
		ans[i] = ans[i - 1];
		c1[i] = c1[i - 1];
		c2[i] = c2[i - 1];
		if (c1[i] < w[1].size()){
			ans[i] += w[1][c1[i]];
			c1[i]++;
		}
		// two steps back
		ll r = ans[i - 2];
		ll one = 0, o = 0;
		if (c1[i - 2] < w[1].size()) one += w[1][c1[i - 2]], o++;
		if (c1[i - 2]+1 < w[1].size()) one += w[1][c1[i - 2] + 1] , o++;
		ll two = 0, t = 0;
		if (c2[i - 2] < w[2].size()) two += w[2][c2[i - 2]], t++;
		if (r + max(one, two) > ans[i]){
			ans[i] = r + max(one, two);
			c1[i] = c1[i - 2];
			c2[i] = c2[i - 2];
			if (one > two) c1[i] += o;
			else c2[i] += t;
		}
	}

	ll res = ans[m];
	rep(i, w[3].size()){
		if (i)w[3][i] += w[3][i - 1];
		int rest = m - (i + 1) * 3;
		if (rest < 0) break;
		ll sum = 0;
		sum = ans[rest];
		res = max(res, w[3][i] + sum);
	}
	cout << res;
	return 0;
}