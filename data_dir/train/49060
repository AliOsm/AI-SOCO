#include <bits/stdc++.h>
using namespace std;
#define read            freopen("C:\\Users\\Dell\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\Dell\\Desktop\\out.txt", "w", stdout)
#define pii             pair<int , int >
#define inf             111111111
#define linf            9111111111111111111
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define pn              printf("\n");
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b ,c)    printf("%d %d %d\n", a, b, c)
#define MP              make_pair
#define vi              vector<int >
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of int
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

/* ***************************************************************************************
   *************************************************************************************** */
const int M=5010;
int C[M], R[M], idC[M], idR[M], A[M][M];
pii q[100010];
int main()
{
#ifndef ONLINE_JUDGE
    read;
#endif
    int i, j, k, row, col, temp, p;

    MEM(C, -1);
    MEM(R, -1);
    MEM(idC, -1);
    MEM(idR, -1);
    MEM(A, 0);
    MEM(q, -1);

    in3(row, col, p);
    for (j=1; j<=p; j++)
    {
        int t;
        in(t);
        if (t==1)
        {
            in2(i, k);
            R[i]=k;
            idR[i]=j;
        }
        else
        {
            in2(i, k);
            C[i]=k;
            idC[i]=j;
        }
    }

    for (i=0; i<M; i++) if (idC[i]!=-1) q[idC[i]]=MP(i, 1);
    for (i=0; i<M; i++) if (idR[i]!=-1) q[idR[i]]=MP(i, 0);

    for (i=0; i<=p; i++)
    {
        if (q[i]!=MP(-1, -1))
        {
            if (q[i].second==1)
            {
                int c=C[q[i].first];
                for (j=0; j<row; j++) A[j][q[i].first-1]=c;
            }
            else
            {
                int c=R[q[i].first];
                for (j=0; j<col; j++) A[q[i].first-1][j]=c;
            }
        }
    }

    for (i=0; i<row; i++)
    {
        for (j=0; j<col; j++)
        {
            prs(A[i][j]);
        }
        pn;
    }

}
