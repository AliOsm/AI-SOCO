// Bismillahirrahmanir Rahim
//NAMOMIZARAHID
#include<bits/stdc++.h>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<string>

#define nl printf("\n")
#define sp printf(" ")

#define rep(i,a,b) for(i=a;i<=b;i++)
#define rev(i,a,b) for(i=a;i>=b;i--)

#define fil freopen("input.txt","r",stdin)

#define pf printf
#define sf scanf


typedef long long l;
typedef unsigned long long ul;

using namespace std;

#define pi acos(-1.0)
#define mp make_pair
#define pb push_back
#define p_q priority_queue


#define dis( a ,b ) abs( a - b )
#define dis2d( x1 ,y1 ,x2 ,y2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) )
#define dis3d( x1 ,y1 ,z1 ,x2 ,y2 ,z2 )    sqrt( ( x1 - x2 ) * ( x1 - x2 ) + ( y1 - y2 ) * ( y1 - y2 ) + ( z1 - z2 ) * ( z1 - z2 ) )


#define C(i) pf("Case %I64d: ",i)


typedef pair< l ,l > pll;
typedef pair< string ,l > psl;
typedef pair< l ,string > pls;
typedef pair< string ,string > pss;
typedef pair< char ,l > pcl;
typedef pair< l ,char > plc;


#define Inf 0x7f7f7f
#define Max 200000001
#define Min -100000000001
#define mod 1000000007

#define ms0(a) memset(a,0,sizeof(a))
#define ms1(a) memset(a,1,sizeof(a))
#define ms_1(a) memset(a,-1,sizeof(a))

#define valid(nx,ny,r,c) nx>=0&&nx<=r-1 && ny>=0&&ny<=c-1

#define ck_bt( v , p ) ( ( v >> p ) & 1 )



int inline in(){int x;sf("%d",&x);return x;}
l inline lin(){l x;sf("%I64d",&x);return x;}
void P(l x){pf("%I64d",x);}


l fx[]={0,0,-1,1};
l fy[]={-1,1,0,0};

/*
struct info
{
    l x,y;
    info() {};
    info(l _x, l _y) {x = _x; y = _y;};

    bool operator < (const info &p) const
    {
		if(x == p.x) return y > p.y;
		else
			return x > p.x;
    }
};
*/


/*
    rep( i , 1 , n )
    {
        a[i] = lin() ;
    }

*/

#define rng 300010

map < l , l >  last_p ;

//set< l > na ;


bool vis[rng] ;

pll na[rng] , tmp ;

l a[rng] , b[rng] , c[rng] , d[rng] , pos[rng] ;
bool ck [rng] ;

char s[rng] ;

int main()
{
    l i , j , r = 5000000000000000010  ;
    //fil;
    //freopen("out.txt","w",stdout);

    //pf("%d",'1' - 48 ) ; nl ;

    l n = lin() ;
    l m = lin() ;
    l k = lin() ;


    l X = lin() ;
    l S = lin() ;

    rep( i , 1 , m )
    {
        a[i] = lin() ;
        pos[i] = -1 ;
    }

    rep( i , 1 , m )
    {
        b[i] = lin() ;
        l baki = S - b[i] ;
        tmp = mp( baki , i ) ;
        na[i] = tmp ;
    }
    sort( na + 1 , na + m + 1 ) ;


    rep( i , 1 , m )
    {
        l f = na[i].first ;
        if( f <= 0 )
        {
            ck[ na[i].second ] = 0 ;
        }
        else
        {
            ck[ na[i].second ] = 1 ;
        }
    }

    rep( i , 1 , k )
    {
        c[i] = lin() ;
    }

    rep( i , 1 , k )
    {
        d[i] = lin() ;
    }

    j = m ;

    rev( i , k , 1 )
    {
        if( j == 0 ) break ;
        if( ck[na[j].second] == 0 )
        {
            j -- ;
            i ++ ;
        }
        else
        {
            if( na[j].first >= d[i] )
            {
                pos [na[j].second] = i ;
                j -- ;
                i ++ ;
            }
        }
    }

    rep( i , 1 , m )
    {
        if( b[i] < S )
        {
            if( pos[i] != -1 )
            {
                l tot = b[i] + d[pos[i]] ;
                if( tot <= S )
                {
                    l g = n - c[pos[i]] ;
                    if( g > 0 )
                    {
                        l time = g * a[i] ;
                        r = min( time , r ) ;
                    }
                }
            }
        }
    }

    rep( i , 1 , m )
    {
        if( b[i] <= S )
        {
            l time = n * a[i] ;
            r = min( r , time ) ;
        }
    }

    rep( i , 1 , k )
    {
        if( d[i] <= S )
        {
            l f = n - c[i] ;
            l time = f * X ;
            r = min( r , time ) ;
        }
    }

    l time = X * n ;
    r = min( r , time ) ;


    P(r) ;

    //sort( a + 1 , a + n + 1 ) ;

    //P( pos ) ; nl ;

    //gets(s);
    return 0;
}


