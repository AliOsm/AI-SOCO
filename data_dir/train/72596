#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <assert.h>
#include <memory>
#include <cstddef>
#include <iterator>

#pragma comment(linker, "/stack:20000000")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef int mt;
typedef double fl;

template<typename T>
constexpr mt infValue = std::numeric_limits<T>::max() - 1000;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(mt i = a; i < b; ++i)
#define repe(a, b, i) for(mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(mt i = a; i > b; --i)
#define repde(a, b, i) for(mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 1000000007ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

#define N 2010
#define K 10
#define P 3
#define M (N * N)
#define p2(x) ((((x) * (x)) % (MOD)))
#define mxy(x, y) ((((x) * (y)) % (MOD)))
#define p2p(x) ((((x) * (x))))

mt b, g, n;
int main(void) {
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d %d %d", &b, &g, &n);
	printf("%d\n", min(n, b) - max(0, n - g) + 1);

	return 0;
}