#include <bits/stdc++.h>
#define PI 3.1415926535897932384626
using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};

struct P
{
    int x,y;
    bool operator <(const P &a) const{

        return y>a.y;
    }
};

bool as(P a,P b)
{
    if(a.x!=b.x)
    return a.x<b.x;
    return a.y<b.y;
}

long long x,y,z,mod=998244353;
vector<int> v;
int i,n,m,k,a,d,b,c,dx[10]={1,0,-1,0},dy[10]={0,1,0,-1};
int e;
long long o[311111];
int l[211111];
int j[1];

//stack<int> s;
set<int> s;
queue<P> q;
P u[311111];
//char r[1];
string r,r1;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();

bool asd(P a,P b)
{
    return a.y<b.y;
}
int main()
{
    scanf("%d",&a);
    o[0]=1;
    for(int t=1;t<=a;t++)
        o[t]=o[t-1]*t%mod;
    for(int t=1;t<=a;t++)
    {
        scanf("%d %d",&n,&m);
        u[t]={n,m};
    }
    x=o[a],y=1,z=1;
    long long p=1;
    sort(u+1,u+a+1,as);
    for(int t=1;t<=a;)
    {
        int i=t;
        for(;u[t].x==u[i].x&&i<=a;i++);
        y*=o[i-t],y%=mod;
        t=i;
    }
    int n=0;
    for(int t=1;t<=a;)
    {
        int i=t;
        for(;u[t].x==u[i].x&&u[t].y==u[i].y&&i<=a;i++)
        {
            if(u[i].y<n) p=0;
            n=max(n,u[i].y);
        }
        p*=o[i-t],p%=mod;
        t=i;
    }
    sort(u+1,u+a+1,asd);
    for(int t=1;t<=a;)
    {
        int i=t;
        for(;u[t].y==u[i].y&&i<=a;i++);
        z*=o[i-t],z%=mod;
        t=i;
    }
    printf("%lld",(x-y-z+p+mod*2)%mod);
}
