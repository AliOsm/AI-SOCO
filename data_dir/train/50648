#include<iostream>
using namespace std;

typedef long long ll;
#define fore(i,ii,iii) for(int i=ii;i<iii;i++)

const ll MOD=1e9+7;
const int N=1e6+10;
ll n,m,f[N],inv[N];

ll qpow(ll a,ll b) { // a^b
  ll r=1;
  while(b) {
    if(b&1)r=(r*a)%MOD;
    b>>=1;
    a=(a*a)%MOD;
  }
  return r%MOD;
}

ll comb(ll n,ll k){return (f[n]*((inv[k]*inv[n-k])%MOD))%MOD;}
ll A(ll n,ll k){return (f[n]*inv[n-k])%MOD;}
ll cayley(ll x,ll y){return (y*qpow(x,x-y-1))%MOD;}

int main() {
  cin>>n>>m;
  f[0]=1;
  inv[0]=1;
  fore(i,1,N)f[i]=(f[i-1]*i)%MOD,inv[i]=qpow(f[i],MOD-2);
  ll res=0;
  fore(k,1,n) {
    ll ac=1;
    if(k>m)break;
    ac=(ac*A(n-2,k-1))%MOD;
    ac=(ac*comb(m-1,k-1))%MOD;
    ac=(ac*qpow(m,n-k-1))%MOD;
    if(k+1<n)ac=(ac*cayley(n,k+1))%MOD;
    res=(res+ac)%MOD;
  }
  cout<<res<<endl;
}