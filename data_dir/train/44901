///==================================================///
///                HELLO WORLD !!                    ///
///                  IT'S ME                         ///
///               BISHAL GAUTAM                      ///
///         [ bsal.gautam16@gmail.com ]              ///
///==================================================///
#include<bits/stdc++.h>
#define X first
#define Y second
#define mpp make_pair
#define nl printf("\n")
#define SZ(x) (int)(x.size())
#define pb(x) push_back(x)
#define pii pair<int,int>
#define pll pair<ll,ll>
///---------------------
#define S(a) scanf("%d",&a)
#define P(a) printf("%d",a)
#define SL(a) scanf("%lld",&a)
#define S2(a,b) scanf("%d%d",&a,&b)
#define SL2(a,b) scanf("%lld%lld",&a,&b)
///------------------------------------
#define all(v) v.begin(),v.end()
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define fr(i,a,n) for(int i=a;i<=n;i++)
using namespace std;
typedef long long ll;
///==========CONSTANTS=============///
///  Digit     0123456789012345678 ///
#define MX     200002
#define inf    10000000000
#define MD     1000000007
#define eps    1e-9
///===============================///

struct data{
    int l,r,sm;
    data(){};
};
data Nd[MX*50+5];
int nw,root[MX+5];

int Ins(int pn,int l,int r,int p,int v){
    int id=++nw;
    Nd[ id ]=Nd[ pn ];
    if(l==r){
        Nd[id].sm+=v;
        return id;
    }
    int md=(l+r)>>1;
    if( p<=md ){
        Nd[id].l=Ins( Nd[id].l, l, md, p, v );
    }
    else{
        Nd[id].r=Ins( Nd[id].r, md+1,r, p, v );
    }
    Nd[ id ].sm=Nd[ Nd[id].l ].sm+Nd[ Nd[id].r ].sm;
    return id;
}

ll Qry(int id,int l,int r,int q1,int q2){
   if(r<q1 || l>q2)return 0;
   if( q1<=l && r<=q2 ) return Nd[id].sm;
   int md=(l+r)>>1;
   return Qry( Nd[id].l,l,md,q1,min(q2,md) )+
          Qry( Nd[id].r,md+1,r,max(q1,md+1),q2 );
}

int n;
ll go(int l,int r,int cur,int pv){
   ll cnt=Qry( root[cur],1,n,l,r );
  // cout<< " : "<<cnt<< " -> ";
   cnt-=Qry( root[pv],1,n,l,r );
  // cout<< " : "<<cnt<<endl;
   return cnt*(cnt-1LL)/2LL;
}

int main() {
    int i,j,k,a,b,c,d,x,y,p,q;
    S2(n,q);
    root[0]=++nw;
    for(i=1;i<=n;i++){
        S(p);
        root[i]=Ins( root[i-1], 1, n, p ,+1 );
       // cout<<i<< " => "<<root[i]<<endl;
    }
   // cout<< "done\n";
    ll ans=((ll)n*((ll)(n-1LL))/2LL);
    while(q--){
        S2(c,a);
        S2(d,b);
        ll tot=ans;
        //cout<<tot<<endl;
        tot-=go(1,a-1,n,0);
        tot-=go(b+1,n,n,0);

        tot-=go(1,n,n,d);
        tot-=go(1,n,c-1,0);

        tot+=go(1,a-1,c-1,0);
        tot+=go(1,a-1,n,d);
        tot+=go(b+1,n,n,d);
        tot+=go(b+1,n,c-1,0);
        printf("%lld\n",tot);
    }
    return 0;
}
