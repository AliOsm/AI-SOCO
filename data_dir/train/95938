#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <list>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <bitset>
 
using namespace std;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define forn1(i, n) for(int i = 1; i <= (int)(n); i++)
#define all(a) (a).begin(), (a).end()
#define sz(a) (int)((a).size())
#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define x first
#define y second
#define y1 __y1
#define sqr(x) ((x) * (x))
 
typedef long long li;
typedef long double ld;
typedef pair<li, li> pt;
 
const int INF = (int)(1e9);
const li INF64 = (li)(INF) * (li)(INF);
const ld eps = 1e-6;
const ld pi = ld(3.1415926535897932384626433832795);
 
inline bool in(int i, int j, int n, int m)
{
    return i >= 1 && i <= n && j >= 1 && j <= m;
}
 
inline int myrand()
{
    return (rand() ^ (rand() << 15));
}
 
const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, 1, 0, -1};
 
const int N = 2e5 + 555;

int n;
ld a[N];
ld w;

inline void gen()
{
    return;
}

inline bool read()
{
    if(scanf("%d %lf", &n, &w) != 2)
        return false;

    forn(i, 2 * n)
        assert(scanf("%lf", &a[i]) == 1);

    return true;
}
    
inline void solve()
{
    sort(a, a + 2 * n);
    ld mnG = a[0], mnB = a[n];

    ld lf = 0, rg = mnG;

    forn(kk, 1000)
    {
        ld mid = (lf + rg) * ld(0.5);
        ld all = mid * n + 2 * mid * n;
        if(all > w)
        {
            rg = mid;
            continue;
        }

        if(mid * 2 <= mnB)
            lf = mid;
        else
            rg = mid;
    }

    cout << lf * n + lf * 2 * n << endl;
    return;
}

int main() {
#ifdef _DEBUG
    assert(freopen("input.txt", "rt", stdin));
    assert(freopen("output.txt", "wt", stdout));
#endif

    cout << setprecision(10) << fixed;
    cerr << setprecision(10) << fixed;

    srand(int(time(NULL)));

    assert(read());
    solve();

#ifdef _DEBUG
    cerr << "TIME == " << clock() << " ms" << endl;
#endif
    return 0;
}