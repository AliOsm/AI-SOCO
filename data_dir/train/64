#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ll long long
#define F first
#define S second
#define pii pair<int,int>
const int M = 1e6+10;
using namespace std;
ll hsh[M],rev[M];
ll mod = 1e9+9;
string x;
ll pw[M];
ll get_hash(int i,int j)
{
	if(i == 0)
	{
		return hsh[j];
	}
	ll tmp1 = hsh[i-1]*pw[j-i+1];
	tmp1%=mod;
	ll tmp = (hsh[j]-tmp1+mod);
	tmp%=mod;
	return tmp;
}
ll get_rev_hash(int i,int j)
{
	if(i == 0)
	{
		return rev[j];
	}
	ll tmp1 = rev[i-1]*pw[j-i+1];
	tmp1%=mod;
	ll tmp = (rev[j]-tmp1+mod);
	tmp%=mod;
	return tmp;
}
bool is_pal(int i,int j)
{
	int n = (int)x.size()-1;
	//cout << get_hash(i,j) << " " << get_rev_hash(n-j,n-i) << endl;
	if(get_hash(i,j) == get_rev_hash(n-j,n-i))
	{
		return 1;
	}
	return 0;
}
void find_ans()
{
	string z = x;
	reverse(z.begin(),z.end());
	for(int i = 0; i < x.size(); i++)
	{
		if(i == 0)
			hsh[i] = x[i]-'a'+1;
		else{
			hsh[i] = hsh[i-1]*27;
			hsh[i]%=mod;
			hsh[i]+=(x[i]-'a'+1);
			hsh[i]%=mod;
		}
	//	cout << hsh[i] <<" ";
	}
	//cout << endl;
	for(int i = 0; i < z.size(); i++)
	{
		if(i == 0)
			rev[i] = z[i]-'a'+1;
		else{
			rev[i] = rev[i-1]*27;
			rev[i]%=mod;
			rev[i]+=(z[i]-'a'+1);
			//cout << rev[i]-rev[i-1]*pw[1] << " " << pw[1] <<endl;
			rev[i]%=mod;
		}
	//	cout << rev[i] << " ";
	}
	int n = x.size()/2;
	int pnt1 = 0,pnt2 = (int)x.size()-1;
	for(int i = 0; i < x.size(); i++)
	{
		if(x[pnt1] != x[pnt2])
			break;
		pnt1++;
		pnt2--;
		if(pnt1 >= pnt2)
			break;
	}
	int ans = pnt1*2;
	pii ans2 = mp(pnt1-1,pnt2+1);
	for(int i = 1; i < x.size();i++)
	{
		int last = pnt1+i-1;
		if(last > pnt2)
			break;
		int st = pnt2 - i +1;
		if(is_pal(pnt1,last))
			ans = pnt1*2 + i,ans2 = mp(last,pnt2+1);
		if(is_pal(st,pnt2))
			ans = pnt1*2+i,ans2 = mp(pnt1-1,st);
	}
	for(int i = 0; i<=ans2.first;i++)
		cout << x[i];
	for(int i=ans2.second;i<x.size();i++){
		if(i > ans2.first)
		cout << x[i];
	}
	cout << "\n";
}
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	for(int i = 0; i<=1000*1000;i++)
	{
		if(i==0)pw[i] = 1;
		else
			pw[i] = pw[i-1]*27;
		pw[i]%=mod;
		//cout << pw[i] << endl;
	}
	int t;
	cin>>t;
	while(t--)
	{
		cin >> x;
		find_ans();
	}
	// ios::sync_with_stdio(false);	

}
