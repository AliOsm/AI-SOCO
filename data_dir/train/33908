#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ll long long
#define ld long double
#define vi   vector<int>
#define pii pair<int, int>
#define ull unsigned long long
#define sz(v)  ((int)((v).size()))
#define all(v) ((v).begin()),((v).end())
#define MEM(dp,i) memset(dp ,i, sizeof (dp))
#define repit( cont , i  ) for( auto i : cont)
#define forr(c,x,n)   for(ll c=x;c<=(ll)n; ++c )
#define forrr(c,x,n)  for(ll c=x;c>=( ll )n ;--c )
#define db(x) cout << " LOOK " <<(#x) <<" = " <<  x << '\n'
#define ICPC ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define printarr(a , l , r ) forr ( i , l , r )cout << a[i] << " ";cout<<endl;
#define printarr2(a, n , m) forr ( i , 1 , n){forr ( j , 1, m )cout << a[i][j] << " ";cout<<endl;}
#define MOD 998244353

//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);

int main()
{
   int t ;
   cin >>t ;
   while ( t-- )
   {
        int a[30] = {0};
        string s;
        cin >> s;
        forr ( i, 0 , s.size()-1 )
        a[s[i]-'a']++;
        vector < int > v;
        forr (i  , 0 , 25 )
        if ( a[i] )
            v.push_back(i);

        int sz= (int)v.size() - 1 ;
        if ( abs(v[0] - v[sz - !(sz & 1 )]) == 1 && abs(v[sz -(sz & 1 )] - v[1]) == 1 )
        {
            cout << "No answer\n";
            continue;
        }
        if ( abs(v[0] - v[sz - !(sz & 1 )]) != 1 )
        {
            for ( int i = 1 ; i <= sz ; i+= 2 )
            while ( a[v[i]]-- )
                cout << char( v[i] + 'a');
            for ( int i = 0 ; i <= sz ; i+= 2 )
            while ( a[v[i]]-- )
                cout << char( v[i] + 'a');
        }
        else
        {
            for ( int i = 0 ; i <= sz ; i+= 2 )
            while ( a[v[i]]-- )
                cout << char( v[i] + 'a');
            for ( int i = 1 ; i <= sz ; i+= 2 )
            while ( a[v[i]]-- )
                cout << char( v[i] + 'a');
        }
        cout << endl;
   }
}
