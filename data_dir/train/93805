#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <string>
#include <iomanip>
#include <assert.h>

using namespace std;

int main()
{    
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n, q;
    cin >> n >> q;
    vector<bool> ans(n + 1, false);
    vector<vector<int>> start(n + 1);
    vector<vector<int>> end(n + 1);
    vector<int> dp(n + 1, 0);
    dp[0] = 1;
    for (int i = 0; i < q; ++i)
    {
        int l, r, x;
        cin >> l >> r >> x;
        start[l].push_back(x);
        end[r].push_back(x);
    }
    for (int i = 1; i <= n; ++i)
    {
        for (int k = 0; k < start[i].size(); ++k)
        {
            for (int j = n; j >= start[i][k]; --j)
            {
                if (dp[j - start[i][k]])
                    dp[j] += dp[j - start[i][k]];
                if (dp[j] > 0)
                    ans[j] = true;
            }           
        }
        for (int k = 0; k < end[i].size(); ++k)
        {
            for (int j = end[i][k]; j <= n; ++j)
            {
                if (dp[j] > 0 && dp[j - end[i][k]] > 0)
                    dp[j] -= dp[j - end[i][k]];                
            }
        }

    }
    int count = 0;
    for (int i = 1; i <= n; ++i)
        if (ans[i])
            ++count;
    cout << count << '\n';
    for (int i = 1; i <= n; ++i)
        if (ans[i])
            cout << i << ' ';
    cout << '\n';
    return 0;
}