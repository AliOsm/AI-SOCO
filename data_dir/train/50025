//raja1999

//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")

#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string> 
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
using namespace __gnu_pbds;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >
#define int ll

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;


//std::ios::sync_with_stdio(false);
int vis[1005][1005],n,m;
string s[1005];
int valid(int x,int y){
	if(x<0||x>=n||y<0||y>=m||vis[x][y]||s[x][y]!='#'){
		return 0;
	}
	return 1;
}
int exp(int x,int y){
	vis[x][y]=1;
	int i,j;
	f(i,-1,2){
		f(j,-1,2){
			if(valid(x+i,y+j) && abs(i)!=abs(j)){
				exp(x+i,y+j);
			}
		}
	}
}
main(){
	std::ios::sync_with_stdio(false); cin.tie(NULL);
	int i,c,fl=0,boo=0,ans=0,row=0,col=0,j;
	cin>>n>>m;
	rep(i,n){
		cin>>s[i];
	}
	rep(i,n){
		c=0;
		boo=0;
		rep(j,m){
			if(s[i][j]=='#'){
				if(boo==1){
					fl=1;
					break;
				}
				c++;
			}
			else{
				if(c!=0){
					c=0;
					boo=1;
				}
			}
		}
	}
	//cout<<fl<<endl;
	rep(j,m){
		c=0;
		boo=0;
		rep(i,n){
			if(s[i][j]=='#'){
				if(boo==1){
					//cout<<i<<" "<<j<<endl;
					fl=1;
					break;
				}
				c++;
			}
			else{
				if(c!=0){
					c=0;
					boo=1;
				}
			}
		}
	}
	//cout<<fl<<endl;
	if(fl){
		cout<<-1<<endl;
		return 0;
	}
	rep(i,n){
		rep(j,m){
			if(s[i][j]=='#'){
				break;
			}
		}
		if(j==m){
			row++;
		}
	}
	rep(j,m){
		rep(i,n){
			if(s[i][j]=='#'){
				break;
			}
		}
		if(i==n){
			col++;
		}
	}
	rep(i,n){
		rep(j,m){
			if(s[i][j]=='#'&&vis[i][j]==0){
				ans++;
				exp(i,j);
			}
		}
	}
	if(row+col!=0 && row*col==0){
		cout<<-1<<endl;
		return 0;
	}
	cout<<ans<<endl;
	return 0;
} 
