#include<bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 

#define ll long long

#define fr(i,a,b) for (ll i = (a), _b = (b); i <= _b; i++)
#define frr(i,a,b) for (ll i = (a), _b = (b); i >= _b; i--)
#define rep(i,n) for (ll i = 0, _n = (n); i < _n; i++)
#define repr(i,n) for (ll i = n - 1; i >= 0; i--)
#define fill(ar,val) memset(ar, val, sizeof(ar))
#define fill0(ar) fill((ar), 0)
#define debug(x) cout<<#x<<": "<<x<<endl

#define ld long double
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef pair<int, int> ii;
typedef pair<ii, int> iii;
typedef vector<ii> vii;
typedef vector<int> vi;

#define INF 1000000000000000000
#define PI 3.14159265358979323846L

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif

    ll n,k,m;
    cin >> n >> k >> m;

    ll t[k];
    ll sum = 0;

    rep(i,k)
    {
    	cin >> t[i];
    	sum = sum + t[i];
    }

    sort(t, t+k);

    ll ans = 0;

    fr(i,0,n)
    {
    	ll m2 = m;

    	if(sum*i>m2)
    		break;
    	ll ans2 = 0;
    	ans2 = (k+1)*i;
    	m2 = m2 - (sum*i);
    	rep(j,k)
    	{
    		if(m2>=((n-i)*t[j]))
    		{
    			m2 = m2 - ((n-i)*t[j]);
    			ans2 = ans2 + n-i;
    		}
    		else
    		{
    			ll xx = m2/t[j];
    			ans2 = ans2 + xx;
    			m2 = 0;
    		}
    	}

    	// cout << ans2 << endl;
    	ans = max(ans, ans2);
    }

    cout << ans << endl;
}
