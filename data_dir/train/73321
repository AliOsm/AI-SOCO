//#include <cstdio>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
//#include <queue>
//#include <stack>
#include <cstring>
#include <cassert>

using namespace std;

#ifdef LOCAL_DEBUG
#include <local_debug.h>
#define DEBUG(x...) cerr << __LINE__ << ": " << #x << " = "; DBG::_print(x)
#else
#define DEBUG(x...)
#endif

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

string solve(int N, int K, string S) {
   sort(S.begin(), S.end());

   if (K == 1) {
      return S;
   }

   map<char, int> freq;
   for (char c : S)
      ++freq[c];

   char ch = S[0];
   if (SZ(freq) == 1) {
      int M = (N + K - 1) / K;
      return string(M, ch);
   }

   if (freq[ch] < K) {
      return string(1, S[K-1]);
   }

   if (freq[ch] > K) {
      return S.substr(K-1);
   }

   string res(1, ch);

   freq.erase(ch);

   if (SZ(freq) == 1) {
      int M = (freq.begin()->second + K - 1) / K;
      res += string(M, freq.begin()->first);
   }
   else {
      for (auto it : freq)
         res += string(it.second, it.first);
   }

   return res;
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(nullptr);

   int TC;
   cin >> TC;
   FOR(tc, 1, TC) {
      int N, K;
      cin >> N >> K;
      string S;
      cin >> S;
      string res = solve(N, K, S);
      cout << res << '\n';
   }

   return 0;
}
