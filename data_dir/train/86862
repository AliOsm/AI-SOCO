//raja1999
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx


using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);
int visited[30],indegree[30],st[102],noneed[101];
vi v;
queue< int> q;
vector< vi> adj(30);
int topo__sort()
{
	int i,j,p;
	for(i=0;i<26;i++)
	{
		for(j=0;j<adj[i].size();j++)
		{
			indegree[adj[i][j]]++;
		}
	}
	for(i=0;i<26;i++)
	{
		if(indegree[i]==0)
		{
			q.push(i);
			visited[i]=1;
		}
	}
	//return 0;
	while(!q.empty())
	{
		p=q.front();
		q.pop();
		v.pb(p);
		rep(i,adj[p].size())
		{
			if(visited[adj[p][i]]!=1){
				indegree[adj[p][i]]--;
				if(indegree[adj[p][i]]==0){
					q.push(adj[p][i]);
					visited[adj[p][i]]=1;
				}
			}
		}
	}
}
int main(){
	std::ios::sync_with_stdio(false);
	int n,i,l ; 
	cin>>n;
	string s[102];
	rep(i,n)
	{
		cin>>s[i];
		st[i]=-1;		
	}
	rep(i,n-1)
	{
		rep(l,min(s[i+1].length(),s[i].length()))
		{
			if(s[i+1][l]!=s[i][l])
			{
				st[i]=l;
				break;
			}
		}
		if(st[i]==-1&&s[i+1].length()<s[i].length())
		{
			cout<<"Impossible"<<endl;
			return 0;
		}
		else if(st[i]==-1)
		{
			noneed[i]=1;
		}
	}
	rep(i,n-1)
	{
		if(noneed[i]!=1)
		{
			adj[s[i][st[i]]-'a'].pb(s[i+1][st[i]]-'a');
		}
	}
	//return 0;
	topo__sort();
	//return  0;
	if(v.size()!=26)
		cout<<"Impossible"<<endl;
	else
	{
		rep(i,v.size())
		{
			cout<<(char)('a'+v[i]);
		}
	}
} 
