# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=100005; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

const int _N=105;
struct Gauss{
	ll mod,a[_N][_N],mp[_N][_N],ans[_N],inv,n; int t;
	inline void Init(int _n,ll _p) { mod=_p,n=_n; }
	inline ll Pow(ll x,ll k){
		ll ans=1; for (;k;k>>=1,(x*=x)%=mod) if (k&1) (ans*=x)%=mod; return ans;
	}
	inline int Solve(int n,int op=1) {
		ll res=1;
		rep(i,1,n) {
			for (t=i;t<=n;++t) if (a[t][i]) break;
			if (t>n) return res;
			if (t!=i) {
				res=-res;
				rep(j,1,n+op) swap(a[i][j],a[t][j]);
			}
			inv=Pow(a[i][i],mod-2);
			rep(j,(1-op)*i+1,n) {
				if (j==i) continue;
				int t=a[j][i]*inv%mod;
				rep(k,1,n+op) a[j][k]=(a[j][k]-t*a[i][k]%mod+mod)%mod;
			}
		}
		if (op==1) rep(i,1,n) ans[i]=a[i][n+1]*Pow(a[i][i],mod-2)%mod;
		return res;
	}
	inline ll Matrix_Tree(ll x){
		mem(a,0);
		rep(i,1,n) rep(j,1,n) {
			if (i==j) continue;
			a[i][j]=mod-mp[i][j]*x-1,a[i][i]+=mod-a[i][j];
		}
		ll ans=Solve(n-1,0);
		rep(i,1,n-1) (ans*=a[i][i])%=_p; return (ans+mod)%mod;
	}
}; 

Gauss G;
int n,x,y;
ll p[105],t;

int main() {
    //file_put();
    
    scanf("%d",&n),G.Init(n,_p);
    rep(i,1,n-1) scanf("%d%d",&x,&y),G.mp[x][y]=G.mp[y][x]=1;
    rep(i,1,n) p[i]=G.Matrix_Tree(i-1);
    rep(i,1,n) { t=1; rep(j,1,n) G.a[i][j]=t,(t*=i)%=_p; }
	rep(i,1,n) G.a[i][n+1]=p[i];
	G.Solve(n); 
	rep(i,1,n) printf("%I64d%c",G.ans[i]," \n"[i==n]);
	
    return 0;
}

