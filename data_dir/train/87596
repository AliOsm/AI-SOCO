#include <bits/stdc++.h>
#define forn(i, n) for(int i = 0; i < (int) n; ++i)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; ++i)
#define For(i, st, en) for(int i = (int)st; i <= (int)en; ++i)
#define clr(x) memset(x, 0, sizeof(x))
#define all(x) (x).begin(),(x).end()
#define pb push_back
#define x first
#define y second
#define mp make_pair

using namespace std;

typedef unsigned int uint;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int, int> PII;

/**
 * The code starts here.
 */

int main()
{
    ios_base::sync_with_stdio(false);

    string s[2];
    forn(i, 2)
            cin >> s[i];

    if (s[0].length() > s[1].length())
    {
        swap(s[0], s[1]);
    }

    ll mod = 1000000007;
    vector<ll> ha[2];
    int n = s[0].length();
    int m = s[1].length();
    int len = max(n, m);
    ll pw[max(n, m) + 1];
    for (int i = 0; i < 2; ++i)
    {
        ha[i].resize(s[i].length() + 1);
    }

    for (int i = 0; i < 2; ++i)
    {
        ha[i][0] = 0;
        for (int j = 0; j < (int)s[i].length(); ++j)
        {
            ha[i][j + 1] = (ha[i][j] * 31 + s[i][j] - 'a' + 1) % mod;
        }
    }

    pw[0] = 1;
    for (int i = 0; i < len; ++i)
    {
        pw[i + 1] = pw[i] * 31 % mod;
    }

    if (ha[1][n] != ha[0][n])
    {
        cout << "0" << endl;
        return 0;
    }

    int ans = 0;
    for (int i = 1; i <= n; ++i)
    {
        if (n % i == 0 && m % i == 0)
        {
            bool ok = true;
            ll has = ha[0][i];
            //cout << has << endl;
            for (int j = 2 * i; j <= n && ok; j += i)
            {
                ll tmp = (ha[0][j] - ha[0][j - i] * pw[i] % mod + mod) % mod;
                //cout << j << " " << tmp << endl;
                if (tmp != has)
                    ok = false;
            }
            for (int j = 2 * i; j <= m && ok; j += i)
            {
                ll tmp = (ha[1][j] - ha[1][j - i] * pw[i] % mod + mod) % mod;
                //cout << j << " " << tmp << endl;
                if (tmp != has)
                    ok = false;
            }

            if (ok)
                ++ans;
        }
    }
    cout << ans << endl;
    return 0;
}
