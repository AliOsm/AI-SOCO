#include <bits/stdc++.h>
using namespace std;
string x;
int val[2000006];
int n, q;

void zfunc() {
	int l = 0, r = 0;
	int v = x.size();
	for (int i = 1; i < v; ++i) {
		if (i > r) {
			l = r = i;
			while (r < v && x[r] == x[r - l])
				++r;
			val[i] = r - l;
			--r;
		} else {
			int k = i - l;
			if (val[k] < r - i + 1)
				val[i] = val[k];
			else {
				l = i;
				while (r < v && x[r] == x[r - l])
					++r;
				val[i] = r - l;
				--r;
			}
		}
	//	cout<<i<<" "<<val[i]<<"\n";
	}
}

long long getans(int v) {
	long long mod = 1000000007;
	long long ans = 1;
	for (int i = 0; i < v; ++i) {
		ans *= 26;
		ans %= mod;
	}
	return ans;
}

int main() {
	cin >> n >> q >> x;
	vector<int> arr(q);
	for (int i = 0; i < q; ++i)
		cin >> arr[i];
	sort(arr.begin(), arr.end());
	if (!q) {
		cout << getans(n);
		return 0;
	}
	int ans = n - x.size();
	int len = x.size();
	x = x + x.substr(1);
	zfunc();
	for (int i = 1; i < q; ++i) {
		if (arr[i] - arr[i - 1] >= len) {
			ans -= len;
		} else {
			if (val[arr[i] - arr[i - 1]] >= len-((arr[i] - arr[i - 1]))) {
				ans -= (arr[i] - arr[i - 1]);
			} else {
				cout << 0;
				return 0;
			}
		}
	}
	cout << getans(ans);
}
