/**
 *    author:  meneketehe
 *    created: 10.03.2019
**/

#include <bits/stdc++.h>
using namespace std;

const int MOD = 100000000;

int n, m, i, j;
int dp[2][105][105];

int solve(int a, int b, bool c) {
	if (a < 0 || b < 0) return 0;
	if (a == 0 && b == 0) return 1;

	if (dp[c][a][b] != -1) return dp[c][a][b];

	int sum = 0;
	if (!c) {
		for (int x = 1; x <= i; x++) {
			sum += solve(a - x, b, 1);
			sum %= MOD;
		}
	} else {
		for (int x = 1; x <= j; x++) {
			sum += solve(a, b - x, 0);
			sum %= MOD;
		}
	}

	return dp[c][a][b] = sum;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m >> i >> j;
	memset(dp, -1, sizeof(dp));

	int ans = (solve(n, m, 0) + solve(n, m, 1)) % MOD;
	cout << ans << '\n';

	return 0;
}