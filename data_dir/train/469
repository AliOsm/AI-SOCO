#include<bits/stdc++.h>
#define xx first
#define yy second
#define mp make_pair
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
const int MAXN=1e5+5;
int pos[MAXN],c[MAXN],Ans[MAXN],cnt[MAXN],co[MAXN];
int ans,n,m;
vector<int> E[MAXN];
struct query
{
    int l,r,k,id;
}Q[MAXN];
bool cmp(query a,query b)
{
    if(pos[a.l]==pos[b.l])
        return a.r<b.r;
    return pos[a.l]<pos[b.l];
}
void Update(int x)
{
    cnt[++c[x]]++;
}
void Delete(int x)
{
	cnt[c[x]--]--;
}
int tim=0;
int in[MAXN],out[MAXN],a[MAXN];
void dfs(int now,int f=0)
{
	in[now]=++tim;
	a[tim]=co[now];
	for(auto v:E[now])
	{
		if(v==f) continue;
		dfs(v,now);
	}
	out[now]=tim;
}
int main()
{
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	scanf("%d%d",&n,&m);
	int sz=ceil(sqrt(1.0*n));
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&co[i]);
		pos[i]=(i-1)/sz;
	}
	for(int i=1;i<n;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		E[u].pb(v);E[v].pb(u);
	}
	dfs(1);
	for(int i=1;i<=m;i++)
	{
		int x,k;
		scanf("%d%d",&x,&k);
		Q[i].l=in[x];Q[i].r=out[x];Q[i].k=k;Q[i].id=i;
	}
	sort(Q+1,Q+1+m,cmp);
	int L=1,R=0;
	for(int i=1;i<=m;i++)
    {
        int id=Q[i].id;
        while(R<Q[i].r)R++,Update(a[R]);
        while(L>Q[i].l)L--,Update(a[L]);
        while(R>Q[i].r)Delete(a[R]),R--;
        while(L<Q[i].l)Delete(a[L]),L++;
        Ans[id]=cnt[Q[i].k];
    }
	for(int i=1;i<=m;i++)
		printf("%d\n",Ans[i]);
	return 0;
}
