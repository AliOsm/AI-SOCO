#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define MX 100000
#define pii pair< int, int >
int a[5007];
int l[5007];
int r[5007];
int lz[5007];
int rz[5007];
int x[5007];

int flz[5007];
int dp[5007];

int n;

pii recZ (int u)
{
    if (flz[u]) return pii{lz[u], rz[u]};
    flz[u] = 1;
    lz[u] = l[u];
    rz[u] = r[u];

    int i;
    pii p;
    for (i = l[u]; i <= r[u]; i++) {
        p = recZ(a[i]);
        lz[u] = min(lz[u], p.first);
        rz[u] = max(rz[u], p.second);
    }
    return pii{lz[u], rz[u]};
}

int rec(int u)
{
    //cout << u << endl;
    if (u > n) return 0;
    if (flz[u]!=-1) return dp[u];
    flz[u] = 1;
    if (lz[a[u]] < u) return dp[u] = rec(u+1);
    //cout << u << endl;
    dp[u] = x[a[u]]+rec(rz[a[u]]+1);
    dp[u] = max(dp[u], rec(u+1));
    //cout << u << ' ' << dp[u] << endl;
    return dp[u];
}


int main(void)
{
    std::ios::sync_with_stdio(false);
    int i, j;
    cin >> n;
    for (i = 1; i <= n; i++) {
        cin >> a[i];
        if (l[a[i]]) r[a[i]] = i;
        else {
            l[a[i]] = i;
            r[a[i]] = i;
        }
    }
    for (i = 0; i <= 5000; i++) recZ(i);

    for (i = 0; i <= 5000; i++) {
        memset(flz, 0, sizeof flz);
        x[i] = 0;
        for (j = lz[i]; j <= rz[i]; j++) {
            if (flz[a[j]]) continue;
            x[i] ^= a[j];
            flz[a[j]] = 1;
            //cout << j << ' ' << x[i] << endl;
        }
        //cout << i << ' ' << lz[i] << ' ' << rz[i] << ' ' << x[i] << endl;
    }

    memset(flz, -1, sizeof flz);

    cout << rec(1) << endl;

    return 0;
}
