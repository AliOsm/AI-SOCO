#include <bits/stdc++.h>

using namespace std;

void print(vector<int> v){
  for(auto x:v)
    cout<<x<<" ";
  cout<<"\n";
}

int Min(string st, int si){
    char com = 'z';
    int index = -1;
    for(int i=0;i<si;++i){
        if(st[i] <= com){
            com = st[i];
            index = i;
        }
    }
    return index;
}

int main() {
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
#endif
    ios::sync_with_stdio(false),cin.tie(0);
    int q;
    cin>>q;
    for(; q>0;--q){
        int n;string st;
        cin>>n>>st;
        int ind_min = Min(st, n);
        vector<int> k;
        for(int i=0;i<n;++i)
            if(st[i] == st[ind_min])
                k.emplace_back(i);
        //print(k);
        //choose from k // trick: test all k
        // assume we selected k 
        // how print string with o(n);
        // qw e rty
        //right side of e shift to left
        //but left side of e shifted (n-k+1) time
            //if (n-k+1) be even then left side of e printed from left to right
             // else left side of e printed from right to left 
        string res = st;
        int ans = 0;
        for(auto ind: k){
            string build = string(st.begin()+ind, st.end());
            if(n % 2 != ind % 2)
                build += string(st.rbegin()+(n-ind), st.rend());
            else
                build += string(st.begin(), st.begin()+ind);
            if(build < res){
                res = build;
                ans = ind;
                
            }
        }
        cout<<res<<"\n"<<ans+1<<"\n";

    }// end program
    
    return 0;
}
