#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()
#define f first
#define s second
int main()
{
    int t; cin >> t;

    while(t--){
        int n ; cin >> n ;

        vector<int>a[2000] ;

        for(int i = 0 ; i < n ; i++){
            int x , y ; cin >> x >> y ;
            a[y].pb(x) ;
        }

        pair<int , int> cur = make_pair(0 , 0) ;

        for(int i = 0 ; i <= 1000 ; i++){
            if(a[i].empty()){
                continue ;
            }

            sort(all(a[i])) ;
        }
        string ans = "" ;
        bool yes = 1 ;
        for(int i = 0 ; i <= 1000 ; i++){

            for(int j = 0 ; j < a[i].size() ; j++){
                if(cur.s > a[i][j]){
                    yes = 0 ;
                    break ;
                }
                int dif = -cur.s + a[i][j] ;
                cur.s = a[i][j] ;
                for(int k = 0 ; k < dif ; k++){
                    ans += "R" ;
                }
                dif = i - cur.f ;
                cur.f = i ;
                for(int k = 0 ; k < dif;  k++){
                    ans += "U" ;
                }
            }
        }

        if(yes){
            cout << "YES" << endl ;
            cout << ans << endl ;
        }
        else {
            cout << "NO" << endl ;
        }
    }
}
/*#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()

set<int>s;

int  dx[] = {-1 , -1 , -1 , 0 , 1 , 1 , 1 , 0} ;
int  dy[] = {-1 , 0 , 1 , 1 , 1 , 0 , -1 , -1} ;

bool image[1080][1920] = {0} ;

void dfs(int x , int y){

    s.insert(x * 1080 + y) ;

    for(int i = 0 ; i < 8 ; i++){
        int xx = x + dx[i] ;
        int yy = y + dy[i] ;

        if(xx >= 0 && xx < 1080 && yy >= 0 && yy < 1920 && image[xx][yy] && s.find(xx * 1080 + y) == s.end()){
                dfs(xx , yy) ;
        }
    }


}
int main()
{
    freopen("img1.txt" , "r" , stdin) ;


    for(int i = 0 ; i < 1080 ; i++){
        for (int j = 0 ; j < 1920 ; j++){
                cin >> image[i][j] ;
        }
    }

    int cnt = 0 ;

    for(int i = 0 ; i < 1080 ; i++){
        for(int j = 0 ; j < 1920 ; j++){
            if(image[i][j]){
                cnt += 1 ;
            }
        }
    }

    int comp = 0 ;

    for(int i = 0 ; i < 1080 ; i++){
        for(int j = 0 ; j < 1920 ; j++){
            int idx = i * 1080 + j ;

            if(s.find(idx) == s.end() && image[i][j]){
                dfs(i , j) ;
                comp += 1 ;
                cout << comp << endl ;
            }
        }
    }

    cout << comp << endl ;

}
*/
/*#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()

int main()
{
    //freopen("read.txt" , "r" , stdin) ;
    //freopen("out.txt" , "w" , stdout) ;
    vector<string>names ;
    string s;

    while(getline(cin , s)){
            names.push_back(s) ;
    }
    map<string , int> mp ;
    for(int i = 0 ; i < names.size() ; i++){

        string tmp = "" ;
        int cnt = 0 ;
        for(int j = 0 ; j < names[i].size() ; j++){
            if(names[i][j] == ' '){
                mp[tmp] = 1 ;
                tmp = "" ;
                continue ;
                cnt += 1 ;
            }
            if(cnt == 100){
                break ;
            }
            tmp += names[i][j] ;
        }
        names[i] = tmp ;
    }

    cout << mp.size() << endl ;

    map<string , int> :: iterator  it = mp.begin() ;


    for(; it != mp.end() ; it++){
        string s = it -> first ;
        cout << s << endl ;
    }
    for(int i = 0 ; i < names.size() ; i++){
        for(int j = i + 1 ; j < names.size() ; j++){
            if(names[i] == names[j]){
                cout << i << ' ' << names[i] << "   " << j << names[j] << endl ;
            }
        }
    }

}
*/
/* Problem B  div2-607

#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()
int main()
{
    int t; cin >> t ;

    while(t--){
        string s , c ; cin >> s >> c ;

        pair<char , int>pos[5005]; pos[(int)s.size()] = make_pair('Z' , 100000) ;

        for(int i = (int)s.size() - 1 ; i >= 0 ; i--){
            pos[i] = min(pos[i + 1] , make_pair(s[i] , i)) ;
        }

        if(s < c){
            cout << s << endl ;
            continue ;
        }
        bool ans = 0 ;
        for(int i = 0 ; i < s.size() ; i++){
            if(i == c.size()){
                break ;
            }
            if(pos[i].first < c[i]){
                swap(s[i] , s[pos[i].second]) ;
                ans = 1 ;
                break ;
            }
        }

        cout << (ans ? s : "---") << endl ;
    }
}

*/

/* Problem A  div2-607

#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()
int main()
{
    int t; cin >> t ;

    while(t--){
        string s; cin >> s ;

        int n = s.size() ;

        if(s.substr(n - 2 , 2) == "po"){
            cout << "FILIPINO" << endl ;
        }
        else if(s.substr(n - 4 , 4) == "masu" || s.substr(n - 4 , 4) == "desu"){
            cout << "JAPANESE" << endl ;
        }
        else {
            cout << "KOREAN" << endl ;
        }
    }
}

*/

/* Problem D  div2-603
#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()
bool vis[200] ;
vector<int> a[200] ; bool fnd[200] = {0} ;
void dfs(int root){

    if(vis[root]){
        return ;
    }
    vis[root] = 1 ;
    for(int i = 0 ; i < a[root].size() ; i++){

        if(!vis[a[root][i]]){
            dfs(a[root][i]) ;
        }
    }

    return ;
}
int main()
{
    int t; t = 1 ;

    while(t--){
        int n ; cin >> n ;
        vector<string> s ;
        for(int i = 0 ; i < n ; i++){
            string x; cin >> x;
            s.pb(x) ;
        }


        for(int i = 0 ; i < n ; i++){
            vector<char> available ;  bool found[200] = {0}  ;

            for(int j = 0 ; j < s[i].size() ; j++){
                if(!found[s[i][j]]){
                    found[s[i][j]] = 1 ; fnd[s[i][j]] = 1 ;
                    available.pb(s[i][j]) ;
                }
            }

            for(int j = 0 ; j < available.size() ; j++){
                for(int k = j + 1 ; k < available.size() ; k++){
                    int u = available[j] , v = available[k] ;
                    a[u].pb(v) ; a[v].pb(u) ;
                }
            }
        }

        int ans = 0 ;

        for(int i = 'a' ; i <= 'z' ; i++){
            if(fnd[i] && !vis[i]){
                dfs(i) ;
                ans += 1 ;
            }
        }

        cout << ans << endl ;
    }
}

*/

/* Problem C  div2-603

#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()

int main()
{
    int t; cin >> t ;

    while(t--){
            long long int n ; cin >> n ;

            set<int> ans ; ans.insert(0);
            for(int i = 1 ; i * i <= n ; i++){
                int res = n / i ;

                if(n / res == i){
                    ans.insert(i) ; ans.insert(res) ;
                }
            }

            set<int> :: iterator it = ans.begin() ;

            cout << ans.size() << endl ;

            for(; it != ans.end() ; it++){
                cout << *it << ' ' ;
            }
            putchar('\n') ;
    }
}

*/

/* Problem B  div2-603

#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()

int main()
{
    int t; cin >> t ;

    while(t--){
        int n ; cin >> n ;

        map<string , int> mp ;

        vector<string> s ;

        for(int i = 0 ; i < n ; i++){
            string x ; cin >> x;
            s.pb(x) ; mp[x]+= 1 ;
        }
        int ans = 0 ;

        for(int i = 0 ; i < n ; i++){
            if(mp[s[i]] > 1){
                ans += 1 ;
                for(int j = 0 ; j < 4 ; j++){
                    bool flag = 0 ;
                    for(int k = 0 ; k < 10 ; k++){
                        string tmp = s[i] ;
                        tmp[j] = k + '0' ;
                        if(mp[tmp] == 0){
                            mp[tmp] = 1 ;
                            mp[s[i]] -= 1 ;
                            s[i] = tmp ;
                            flag = 1 ;
                            break ;
                        }
                    }
                    if(flag){
                        break ;
                    }
                }
            }
        }

        cout << ans << endl;

        for(int i = 0 ; i < n ; i++){
            cout << s[i] << endl ;
        }
    }
}

*/

/* Problem A div2-603
#include <bits/stdc++.h>

using namespace std;

#define pb(x) push_back(x)
#define all(a) a.begin(),a.end()
int main()
{
    int t; cin >> t ;

    while(t--){
        vector<int> a;

        for(int i = 0 ; i < 3 ; i++){
            int x; cin >> x ;
            a.push_back(x) ;
        }

        sort(all(a)) ;

        int ans = min(a[0] + a[1] , a[2]) ;

        if(a[2] < a[0] + a[1]){
            ans += ((a[0] + a[1] - a[2]) / 2) ;
        }

        cout << ans << endl ;
    }
}
*/
