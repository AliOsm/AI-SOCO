#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll MAX = 1000000000LL * 1000000000LL;

int n;
ll p[20];

vector<ll> A, B;

void precalc1(int i, ll cur)
{
    if (i == n / 2) {
        A.push_back(cur);
        return;
    }

    while (cur <= MAX) {
        precalc1(i + 1, cur);
        if (cur > MAX / p[i]) break;
        cur *= p[i];
    }
}

void precalc2(int i, ll cur)
{
    if (i == n) {
        B.push_back(cur);
        return;
    }

    while (cur <= MAX) {
        precalc2(i + 1, cur);
        if (cur > MAX / p[i]) break;
        cur *= p[i];
    }
}

int main()
{
    //freopen("input.txt", "r", stdin);
    ios::sync_with_stdio(false);

    cin >> n;
    for (int i = 0; i < n; i+=2) {
        cin >> p[i];
    }
    for (int i = 1; i < n; i+=2) {
        cin >> p[i];
    }

    A.reserve(1000000);
    B.reserve(1000000);

    precalc1(0, 1);
    precalc2(n / 2, 1);

    //cout << A.size() << " " << B.size() << endl;

    sort(A.begin(), A.end());
    sort(B.begin(), B.end());

    //cout << "sorted" << endl;

    ll k;
    cin >> k;

    ll L = 1, R = 1000000000000000000LL;
    ll ans;

    while (L <= R)
    {
        ll M = (L + R) / 2;
        ll cnt = 0;

        for (int i = 0, j = B.size() - 1; i < A.size(); i++) {
            while (j >= 0 && (A[i] > M / B[j] || A[i] * B[j] > M)) j--;
            cnt += j + 1;
        }

        if (cnt >= k) {
            ans = M;
            R = M - 1;
        }
        else {
            L = M + 1;
        }
    }

    cout << ans << "\n";
    return 0;
}
