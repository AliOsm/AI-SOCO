#include <bits/stdc++.h>
using namespace std;

using pii = pair<int, int>; using vi = vector<int>;
template <class T> istream &operator>>(istream &, vector<T> &);
template <class T> ostream &operator<<(ostream &, const vector<T> &);
using ll = long long; using vll = vector<long long>;
constexpr int INF = 0x3f3f3f3f; constexpr ll BINF = 0x3f3f3f3f3f3f3f3fLL;

int solve() {
	int n; cin >> n;
	vi a(n); cin >> a;
	map<int, int> cnt, mp;
	int ans = 0;
	for (int i=0;i<n;i++) {
		if (cnt[a[i]] > 0) {
			mp[cnt[a[i]]]--;
			if (mp[cnt[a[i]]] == 0) mp.erase(cnt[a[i]]);
		}
		cnt[a[i]]++;
		mp[cnt[a[i]]]++;
		// cerr << i << ' ' << cnt[a[i]] << ' ' << mp[cnt[a[i]]] << endl;
		// if (mp.find(1) != mp.end()) cerr << mp[1] << endl;
		if (mp.size() == 1) {
			// cerr << mp.begin()->first << ' ' << mp.begin()->second << '1' << endl;
			if (mp.begin()->first == 1) ans = i;
			if (mp.begin()->second == 1) ans = i;
		} else if (mp.size() == 2) {
			//cerr << mp.begin()->first << ' ' << mp.begin()->second << '2' << endl;
			if (mp.begin()->first == 1 && mp.begin()->second == 1) ans = i;
			int fst = mp.begin()->first;
			int sec = (++mp.begin())->first;
			if (sec - fst == 1 && mp[sec] == 1) ans = i;
			// cerr << sec << ' ' << fst << ' ' << mp[sec] << endl;
		}
	}

	cout << ans + 1 << endl;
	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	// precompute();
	// int t; cin >> t; for (int i=1;i<=t;i++)
	solve();
	// cout << (solve() ? "YES" : "NO") << endl;
	return 0;
}

template <class T> istream &operator>>(istream &is, vector<T> &v) {
	for (auto it=v.begin();it!=v.end();++it) is >> *it;
	return is;
}

template <class T> ostream &operator<<(ostream &os, const vector<T> &v) {
	for (auto it=v.begin();it!=v.end();) os << *it, os << " \n"[++it==v.end()];
	return os;
}
