#include<bits/stdc++.h>

using namespace std;

const int N=5e3+5,
        inf=998244353;

int n;

set<int>q;

vector<pair<char, int> >ans;

main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin>>n;
    n++;
    if (n<=56) {
        n-=2;
        char x='a'-1;
        int y=1;
        bool flag=false;
        while(1){
            if (!flag) x++;
            if (flag) x--;
            if (x=='h'+1) x='h', flag=true, y++;
            if (x=='a'-1) x='a', flag=false, y++;
            ans.push_back(make_pair(x, y));
            n--;
            if (n==0) {
                if (x=='h'&&y<7) {
                    if (y%2!=0) {
                        ans.pop_back();
                        char X=ans.back().first;
                        int Y=ans.back().second;
                        ans.push_back(make_pair(X, Y+1));
                        x=X;
                        y=Y+1;
                        ans.push_back(make_pair(x, 8));
                        ans.push_back(make_pair('h', 8));
                    } else {
                        char X=ans.back().first;
                        int Y=ans.back().second;
                        ans.push_back(make_pair(X, Y+1));
                        ans.push_back(make_pair('h', 8));

                    }
                } else
                if (x=='h'&&y==7) {
                    ans.pop_back();
                    char X=ans.back().first;
                    int Y=ans.back().second;
                    ans.push_back(make_pair(X, Y+1));
                    ans.push_back(make_pair(X-1, Y+1));
                    ans.push_back(make_pair('h', 8));
                    x=X-1;
                    y=Y+1;
                } else {
                    ans.push_back(make_pair(x, 8));
                    ans.push_back(make_pair('h', 8));
                }
                break;
            }
        }
    } else {
        char x='a'-1;
        int y=1;
        bool flag=false;
        for (int i=1; i<=48; ++i){
                if (!flag) x++;
                if (flag) x--;
                if (x=='h'+1) x='h', flag=true, y++;
                if (x=='a'-1) x='a', flag=false, y++;
                ans.push_back(make_pair(x, y));
        }
        ans.push_back(make_pair('a', 7));
        ans.push_back(make_pair('a', 8));
        for (char c='b'; c<='g'; ++c){
            ans.push_back(make_pair(c, 8));
        }
        ans.push_back(make_pair('g', 7));
        ans.push_back(make_pair('f', 7));
        if (n==57) {
            ans.pop_back();
            ans.pop_back();
            ans.push_back(make_pair('h', 8));
        } else
        if (n==58) {
            ans.pop_back();
            ans.pop_back();
            ans.pop_back();
            ans.push_back(make_pair('f', 7));
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));

        } else
        if (n==59) {
            ans.pop_back();
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));
        } else
        if (n==60) {
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));
        } else
        if (n==61) {
            ans.push_back(make_pair('e', 7));
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));
        } else
        if (n==62) {
            ans.push_back(make_pair('e', 7));
            ans.push_back(make_pair('d', 7));
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));
        } else
        if (n==63) {
            ans.push_back(make_pair('e', 7));
            ans.push_back(make_pair('d', 7));
            ans.push_back(make_pair('c', 7));
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));
        } else
        if (n==64) {
            ans.push_back(make_pair('e', 7));
            ans.push_back(make_pair('d', 7));
            ans.push_back(make_pair('c', 7));
            ans.push_back(make_pair('b', 7));
            ans.push_back(make_pair('h', 7));
            ans.push_back(make_pair('h', 8));
        }
    }
    for (int i=0; i<ans.size(); ++i){
        cout<<ans[i].first<<ans[i].second<<" ";
    }
}
