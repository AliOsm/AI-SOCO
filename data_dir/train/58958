#include "bits/stdc++.h"

#ifdef PRINTERS
#include "printers.hpp"
using namespace printers;
#define tr(a)		cerr<<#a<<" : "<<a<<endl;
#else
#define tr(a)    
#endif

#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define rep(i,a,b)	for(int i=a;i<b;i++)
using namespace std;
int toint(string& s){
	if(sz(s)>6)return -1;
	int ans=0;
	for(auto i:s){
		ans*=10;
		ans+=i-'0';
	}
	if(to_string(ans)==s)return ans;
	else return -1;
}
void solve(){
	int n;
	cin>>n;
	vector<pair<string,pii>>v(n);
	int examples=0;
	rep(i,0,n)cin>>v[i].F>>v[i].S.F,examples+=v[i].S.F,v[i].S.S=toint(v[i].F);
	int ans=0;
	int ex_to_fi=0;
	int fi_to_ex=0;
	vi rem_idx;
	vi ex_s;
	vi fi_s;
	set<int>s;
	rep(i,1,n+1)s.insert(i);
	set<int>super_magic;
	rep(i,0,n){
		if(v[i].S.S>n or v[i].S.S<1)v[i].S.S=-1;
		if(v[i].S.S==-1)rem_idx.pb(i),ans++;
		else if(v[i].S.F==1 and v[i].S.S>=1 and v[i].S.S<=examples){
			s.erase(v[i].S.S);
			continue;
		}
		else if(v[i].S.F==0 and v[i].S.S<=n and v[i].S.S>examples){
			s.erase(v[i].S.S);
			continue;
		}
		else if(v[i].S.F==1)fi_to_ex++,ex_s.pb(i);
		else ex_to_fi++,fi_s.pb(i);
		super_magic.insert(v[i].S.S);
	}
	if(ex_to_fi==0 or fi_to_ex==0){
		cout<<ans+ex_to_fi+fi_to_ex<<endl;
		for(auto i:ex_s){
			cout<<"move "<<v[i].F<<" "<<*s.begin()<<endl;
			s.erase(s.begin());
		}
		for(auto i:fi_s){
			cout<<"move "<<v[i].F<<" "<<*s.rbegin()<<endl;
			s.erase(*s.rbegin());
		}
		for(auto i:rem_idx){
			if(v[i].S.F){
				cout<<"move "<<v[i].F<<" "<<*s.begin()<<endl;		
				s.erase(s.begin());
			}
			else{
				cout<<"move "<<v[i].F<<" "<<*s.rbegin()<<endl;		
				s.erase(*s.rbegin());
			}
		}
		return;
	}
	else{
		bool temp=0;
		string garbage;
		set<int>magic=s;
		for(auto i:ex_s)magic.erase(v[i].S.S);
		for(auto i:fi_s)magic.erase(v[i].S.S);
		if(magic.empty()){
			temp=1;
			for(int beta=n+1;;beta++){
				if(super_magic.count(beta)==0){
					garbage=to_string(beta);
					break;
				}
			}
			cout<<ex_to_fi+fi_to_ex+1+sz(rem_idx)<<endl;
			cout<<"move"<<" "<<v[ex_s.back()].F<<" "<<garbage<<endl;
			magic.insert(v[ex_s.back()].S.S);
			ex_s.pop_back();
			ex_to_fi--;
		}
		else cout<<ex_to_fi+fi_to_ex+sz(rem_idx)<<endl;
		tr(magic)
		tr(ex_s)
		tr(fi_s)
		while(!(ex_s.empty() and fi_s.empty())){
			if(!ex_s.empty() and *magic.begin()<=examples){
				cout<<"move "<<v[ex_s.back()].S.S<<" "<<*magic.begin()<<endl;
				s.erase(*magic.begin());
				magic.erase(magic.begin());
				s.insert(v[ex_s.back()].S.S);
				magic.insert(v[ex_s.back()].S.S);
				ex_s.pop_back();
			}
			else{
				cout<<"move "<<v[fi_s.back()].S.S<<" "<<*magic.rbegin()<<endl;
				s.erase(*magic.rbegin());
				magic.erase(*magic.rbegin());
				s.insert(v[fi_s.back()].S.S);
				magic.insert(v[fi_s.back()].S.S);
				fi_s.pop_back();	
			}
		}
		tr(s)
		for(auto i:rem_idx){
			if(v[i].S.F){
				cout<<"move "<<v[i].F<<" "<<*s.begin()<<endl;		
				s.erase(s.begin());
			}
			else{
				cout<<"move "<<v[i].F<<" "<<*s.rbegin()<<endl;		
				s.erase(*s.rbegin());
			}
		}
		if(temp){
			cout<<"move"<<" "<<garbage<<" "<<*s.begin()<<endl;
		}
	}
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int t=1;
//	cin>>t;
	while(t--){
		solve();
	}
	return 0;
}