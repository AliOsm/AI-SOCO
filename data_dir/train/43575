#include <bits/stdc++.h>
using namespace std;
    
#define fastIO ios::sync_with_stdio(false);	cin.tie(NULL); cout.tie(NULL);
#define asc(s) sort(s.begin(),s.end())
#define des(s) sort(s.rbegin(),s.rend())
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define rev(v) reverse(v.begin(), v.end())
#define lower(s) transform(s.begin(), s.end(), s.begin(), ::tolower);
#define upper(s) transform(s.begin(), s.end(), s.begin(), ::toupper);
#define precision(x,p) fixed<<setprecision(p)<<x
#define mod 1000000007
#define PI 3.14159265358979
typedef long long ll;

#ifndef ONLINE_JUDGE
#define debug(x) cout<<x<<endl;
#else
#define debug(x)
#endif 
    
vector<string> split(string s)
{
    istringstream buf(s);
    istream_iterator<string>beg(buf), end;    
    vector<string>list(beg, end);
    return list;
}
    
    
bool isvowel(char c)
{
    string s = "aeiou";
    if(find(s.begin(),s.end(), c) != s.end()) return true;
    return false; 
}

bool cmp(pair <int,int> &a, pair <int,int> &b)
{
    return a.second > b.second || (a.second==b.second && a.first>b.first);
}

vector<char> maxi(map <char,int>&m)
{
    char c; int count=0;
    
    for(auto x:m)
    {
        if(x.second>count) c = x.first, count = x.second;
    }
    
    vector <char>  ans;
    
    for(auto x:m)
       if(x.second==count)
            ans.pb(x.first);
    
    return ans;
}

bool check(vector <string> &s, string ans, int n)
{
    for(auto x:s)
    {
        int l = x.size();
        if(x!=ans.substr(0,l) && x!=ans.substr(n-l)) return false;
    }
    
    return true;
}

void solve()
{
    int n;
    cin>>n;
    
    int m = 2*n - 2;
    
    
    vector <string> s(m);
    
    for(int i=0;i<m;i++)
    {
        cin>>s[i];
    }
    
    
    map <char,int> f,l;
    
    for(auto x:s)
    {
        f[x[0]]++;
        l[x[x.size()-1]]++;
    }
    
    vector <char> start = maxi(f);
    vector <char> end = maxi(l);
    
    string ans;
    
    for(auto q:start)
    for(auto r:end)
    for(auto x:s)
    {
        if(x.size()==n-1 && x[0]==q)
        {
            ans = x + r;
            
            if(check(s,ans,n))
                {goto y;}
        
        }
    }
    y:
    vector <int> p(n,0);
    
    for(auto x:s)
    {
        int len = x.size();
        
        if(p[len]==0 && x == ans.substr(0,len))
        {
            cout<<'P';
            p[len]++;
        }
        
        else
        {
            cout<<'S';
        }
    }
}

int main()
{

    fastIO

    int t=1;
    // cin>>t;
    
    for(int test_case=1;test_case<=t;test_case++)
    {
        solve();
    }
        return 0;
    
}  