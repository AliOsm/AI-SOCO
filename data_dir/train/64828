#include <bits/stdc++.h>
#define md 1000000007
#define fi first
#define se second
#define mp make_pair
#define	inf 1000000000
#define li 200005
#define int long long
#define pb push_back
using namespace std;
int n,l,r,dp[li][5],sif,bir,ik;
inline int add(int x,int y){
	if(x+y>=md) return x+y-md;
	return x+y;
}
inline int mul(int x,int y){
	return (x%md)*(y%md)%md;
}
int fp(int a,int b){
	if(b==0) return 1;
	if(b==1) return a;
	int t=fp(a,b/2);
	t=mul(t,t);
	if(b%2==1) t=mul(t,a);
	return t;
}
int dfs(int node,int sum){
	int cev=0;
	if(node==n+1){
		if(sum==0) return 1;
		return 0;
	}
	if(~dp[node][sum]) return dp[node][sum];
	cev=add(cev,mul(dfs(node+1,sum),sif));
	cev=add(cev,mul(dfs(node+1,(sum+1)%3),bir));
	cev=add(cev,mul(dfs(node+1,(sum+2)%3),ik));
	return dp[node][sum]=cev;
}
main(){
	memset(dp,-1,sizeof(dp));
	scanf("%lld %lld %lld",&n,&l,&r);
	//~ if(l%3==0) ik-=1;
	//~ if(l%3==1) sif-=1;
	//~ if(l%3==2) bir-=1;
	int nn=r-l+1;
	if(nn%3==0){
		sif=nn/3;
		ik=nn/3;
		bir=nn/3;
	}
	else if(nn%3==1){
		sif=nn/3+1;
		ik=nn/3+1;
		bir=nn/3+1;
		if(l%3==0) {ik-=1;bir-=1;}
		if(l%3==1) {sif-=1;ik-=1;}
		if(l%3==2) {bir-=1;sif-=1;}
	}
	else{
		sif=nn/3+1;
		ik=nn/3+1;
		bir=nn/3+1;
		if(l%3==0) ik-=1;
		if(l%3==1) sif-=1;
		if(l%3==2) bir-=1;
	}
	//~ int k=nn/3+1;
	//~ sif+=k;
	//~ bir+=k;
	//~ ik+=k;
	int ty=dfs(1,0);
	printf("%lld\n",ty);
	return 0;
}

