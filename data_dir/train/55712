#include <bits/stdc++.h>
using namespace std;

const int mod = 998244353, N = 505;
int n, m;
int p[N];
bool vis[N][N];
int dp[N][N];


int solve(int l, int r) {
    if(l > r) return 1;
    if(vis[l][r]) return dp[l][r];
    vis[l][r] = true;
    int MinIdx = -1, Min = n;
    for(int i = l; i <= r; i++) {
        if(Min > p[i]) {
            Min = p[i];
            MinIdx = i;
        }
    }
    int ways1 = 0, ways2 = 0;
    for(int i = l; i <= MinIdx; i++) {
        int cur_ways = 1ll*solve(l, i-1)*solve(i, MinIdx-1)%mod;
        ways1 += cur_ways;
        ways1 %= mod;
    }
    for(int i = MinIdx; i <= r; i++) {
        int cur_ways = 1ll*solve(MinIdx+1, i)*solve(i+1, r)%mod;
        ways2 += cur_ways;
        ways2 %= mod;
    }
    return dp[l][r] = 1ll*ways1*ways2%mod;
}

int main() {
    // freopen("in.txt", "r", stdin);
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> m;
    for(int i = 0; i < n; i++) {
        cin >> p[i];
        p[i]--;
    }
    cout << solve(0, n-1) << endl;
    return 0;
}

