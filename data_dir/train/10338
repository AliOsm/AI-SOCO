#include "bits/stdc++.h"
using namespace std;

const int N = 1e5 + 5;

string f0 = "What are you doing at the end of the world? Are you busy? Will you save us?";
string rec = "What are you doing while sending ""? Are you busy? Will you send ""?";
string fpa = "What are you doing while sending";
string spa = "Are you busy? Will you send";
int fst = 34;
long long dp[N];
int mx;
//What are you doing while sending ""? Are you busy? Will you send ""?

long long get(int n) { 
	if(n > mx) {
		return dp[mx];
	}
	return dp[n];
}

char recur(int n , long long k) {
	if(!n) {
		return f0[k - 1];
	}
	if(k <= fst) {
		if(k <= 32) {
			return fpa[k - 1];
		}
		if(k == 33) {
			return ' ';
		}
		assert( k == 34);
		return '"';
	}
	k -= 34;
	if(k <= get(n - 1)) {
		return recur(n - 1 , k);
	}
	k -= get(n - 1);
	if(k == 1) {
		return '"';
	}
	if(k == 2) {
		return '?';
	}
	if(k == 3) {
		return ' ';
	}
	k -= 3;
	if(k <= (int) spa.size()) {
		return spa[k - 1];
	}
	k -= (int) spa.size();
	if(k == 1) {
		return ' ';
	}
	if(k == 2) {
		return '"';
	}
	k -= 2;
	if(k <= get(n - 1)) {
		return recur(n - 1 , k);
	}
	k -= get(n - 1);
	if(k == 1) {
		return '"';
	}
	assert(k == 2);
	if(k == 2) {
		return '?';
	}
	assert(false);
}

int main() {
	dp[0] = (int) f0.size();
	for(int i = 1; ; ++i) { 
		dp[i] = 68LL + (2LL * dp[i - 1]);
		mx = i;
		if(dp[i] >= (long long) 1e18) {
			break;
		}
	}
	int q;
	scanf("%d" , &q);
	while(q--) {
		int n ;
		long long k;
		scanf("%d %lld" , &n , &k);
		if(n < mx and dp[n] < k) {
			printf(".");
			continue;
		}
		printf("%c" , recur( n , k) );
	}
	return 0;
}