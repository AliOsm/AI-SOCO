#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <valarray>
#include <vector>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(auto it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define mt make_tuple
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

struct timer{
	time_t start;
	timer(){start=clock();}
	~timer(){cerr<<1.*(clock()-start)/CLOCKS_PER_SEC<<" secs"<<endl;}
};

typedef istringstream iss;
typedef long long ll;
typedef pair<ll,ll> pi;
typedef stringstream sst;
typedef vector<ll> vi;

bool ok[12];
int m;
bool v[1010][12][12];
int Prev[1010][12][12];
int found,DIF,PRE;

void f(int turn,int dif,int pre){
	v[turn][dif][pre]=1;
	if(turn==m){
		found=1;DIF=dif,PRE=pre;return;
	}
	rep2(i,1,11)if(ok[i] && i!=pre && i>dif){
		if(v[turn+1][i-dif][i])continue;
		Prev[turn+1][i-dif][i]=pre;
		f(turn+1,i-dif,i);
	}
}

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	string s;
	cin>>s>>m;
	rep2(i,1,11)ok[i]=s[i-1]=='1';
	f(0,0,11);
	if(!found)cout<<"NO";
	else{
		cout<<"YES"<<endl;
		vi v;
		int dif=DIF,pre=PRE;
		rep(i,m){
			v.pb(pre);
			int npre=Prev[m-i][dif][pre];
			int ndif=pre-dif;
			pre=npre,dif=ndif;
		}
		for(int i=sz(v)-1;i>=0;i--)cout<<v[i]<<" ";
	}
}
