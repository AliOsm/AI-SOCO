#include <bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
using ii = pair<long long, long long>;
using ll = long long;
#define oo 1000000000000000000
#define mod 1000000007

void mult(ll res[4][4], ll mat[4][4]){
	ll aux[4][4];
	memset(aux, 0, sizeof aux);
	for(int i = 0; i < 4; i++){
		for(int j = 0; j < 4; j++){
			for(int k = 0; k < 4; k++)
				aux[i][j] += (res[i][k] * mat[k][j]) % mod;
			aux[i][j] %= mod;
		}
	}
	memcpy(res, aux, sizeof aux);
}

void expr(ll mat[4][4], ll e){
	ll ans[4][4];
	memset(ans, 0, sizeof ans);
	for(int i = 0; i < 4; i++)
		ans[i][i] = 1;

	while(e){
		if(e&1)
			mult(ans, mat);
		e >>= 1;
		mult(mat, mat);
	}
	memcpy(mat, ans, sizeof ans);
}

ll qtd[4];
int main (){
	int n;
	ll m;
	scanf("%d %lld", &n, &m);
	ll mat[4][4];
	qtd[1] = 1;
	pair<ii, int> v[20004];
	int t = 0;
	while(n--){
		ll l, r;
		int a;
		scanf("%d %lld %lld", &a, &l, &r);
		v[t++] = {{l, a-1}, 1};
		v[t++] = {{r, a-1}, 2};
	}
	v[t++] = {{m,-1},0};
	sort(v, v + t);
	int oc[4] = {0, 0, 0, 0};
	ll pos = 1;
	int k = 0;
	while(pos != m){
		while(pos == v[k].ff.ff){
			if(v[k].ss == 1)
				oc[v[k].ff.ss]++;
			else
				oc[v[k].ff.ss]--;
			k++;
		}
		for(int i = 0; i < 3; i++)
			if(oc[i]) qtd[i] = 0;
		memset(mat, 0, sizeof mat);
		for(int i = 0; i < 3; i++){
			if(oc[i]) continue;
			mat[i][i] = 1;
			if(i > 0 && !oc[i-1])
				mat[i][i-1] = 1;
			if(i < 2 && !oc[i+1])
				mat[i][i+1] = 1;
		}
		expr(mat, v[k].ff.ff - pos);
		pos = v[k].ff.ff;
		ll qtd2[4];
		memset(qtd2, 0, sizeof qtd2);
		for(int j = 0; j < 4; j++){
			for(int i = 0; i < 4; i++){
				qtd2[j] += (qtd[i] * mat[i][j]) % mod;
			}
			qtd2[j] %= mod;
		}
		memcpy(qtd, qtd2, sizeof qtd);

	}
	printf("%lld\n",qtd[1] );
	return 0;
}