#include <bits/stdc++.h>

using namespace std;
#define ll long long
vector<int>vv[1006],vvv[1006];
int arr[1006];
int brr[1005][1005];
int crr[1006];
int t;
vector<int>V,VV;
void dfs(int u, int p){
    crr[u]=1;
    if(p==0)vvv[t].push_back(u);
    else V.push_back(u);
    for(int i=0; i<vv[u].size(); i++){
        int v=vv[u][i];
        if(crr[v]==0)dfs(v,p);

    }

}

int main(){

    int n,m,k;
    scanf("%d %d %d", &n, &m, &k);

    for(int i=0; i<k; i++)scanf("%d", &arr[i]);
    while(m--){
        int u,v;
        scanf("%d %d", &u, &v);
        vv[u].push_back(v);
        vv[v].push_back(u);
        brr[u][v]=brr[v][u]=1;
    }
    for(int i=0; i<k; i++){
        t++;
        dfs(arr[i],0);
    }
    int z=t+1;
    for(int i=1; i<=n; i++){
        if(crr[i]==0){
            t++;
            dfs(i,1);
        }

    }
    ll ans=0;
    for(int i=1; i<z; i++){
        for(int j=0; j<vvv[i].size(); j++){
            for(int k=j+1; k<vvv[i].size(); k++){
                int x=vvv[i][j],y=vvv[i][k];
                if(brr[x][y]==0){
                    ans++;
                    brr[x][y]=brr[y][x]=1;
                }
            }

        }

    }


    for(int i=1; i<z; i++){
        VV.push_back(int(vvv[i].size()));

    }
    //sort(V.begin(),V.end());
    sort(VV.begin(),VV.end());
    ll d=0;
    for(int i=0; i<V.size(); i++){
        for(int j=i+1; j<V.size(); j++){
            int x=V[i],y=V[j];
            if(brr[x][y]==0){
                brr[x][y]=brr[y][x]=1;
                ans++;
            }
        }
    }
    if(V.size())ans+=(ll)V.size()*(ll)VV[VV.size()-1];
    cout<<ans<<endl;
}
