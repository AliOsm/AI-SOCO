#pragma GCC optimize("O3")
#pragma GCC target("sse4")

#include<bits/stdc++.h>

using namespace std;

#define ll long long

const int maxn=(int)(2e6+2);

ll mod=(ll)(1e9+7);

int mu[maxn],val[maxn];

bool pr[maxn];

vector<int> divs[maxn];

int n,k;

static int add(ll a,ll b)
{
	ll ret=a+b;
		
	if(ret>=mod)
	{
		ret%=mod;
	}
		
	return (int)ret;
}	

static int mul(ll a,ll b)
{
	ll ret=a*b;
		
	if(ret>=mod)
	{
		ret%=mod;
	}
		
	return (int)ret;
}

static int poww(int a,long b)
{
	int x=1,y=a;
		
	while(b>0)
	{	
		if(b%2==1)
		{
			x=mul(x,y);
		}
			
		y=mul(y,y);b=b/2;
	}
		
	return x;
}

static void build()
{		
	for(int i=1;i<maxn;i++)
	{
		mu[i]=1;
		
		pr[i]=true;
	}
		
	pr[0]=pr[1]=false;
	
	for(int i=2;i<maxn;i++)
	{
		if(pr[i])
		{
			for(int j=i+i;j<maxn;j+=i)
			{
				pr[j]=false;
			}
		}
	}
		
	for(int i=2;i<maxn;i++)
	{	
		if(pr[i])
		{
			for(int j=i;j<maxn;j+=i)
			{
				mu[j]*=(-1);
			}
				
			ll curr=i*1ll*i;
			
			if(curr<maxn)
			{
				int now=(int)curr;
				
				for(int j=now;j<maxn;j+=now)
				{
					mu[j]=0;
				}
			}
		}
	}
			
	for(int i=1;i<maxn;i++)
	{
		if(mu[i]!=0)
		{
			for(int j=i;j<maxn;j+=i)
			{
				divs[j].push_back(i);
			}
		}
	}
	
	val[0]=0;
		
	for(int i=1;i<maxn;i++)
	{
		val[i]=poww(i,n);
	}
}

int main()
{
	ios::sync_with_stdio(false);
	
	cin>>n>>k;
	
	build();
	
	int curr=0,res=0;
		
	for(int i=1;i<=k;i++)
	{
		for(int x:divs[i])
		{
			int now=val[(i-1)/x];
				
			now=(now*mu[x]);
				
			now=add(now,mod);
			
			curr=add(curr,add(-now,mod));
				
			now=val[i/x];
				
			now=(now*mu[x]);
				
			now=add(now,mod);
				
			curr=add(curr,now);
		}
			
		int zz=(curr^i);res=add(res,zz);
	}	
		
	cout<<res<<endl;
}



