/// NO PAIN <-> NO GAIN
/// FROM ASHES TO THE EMPIRE
#include <bits/stdc++.h>

#define ss second
#define ff first
#define pb push_back
#define faster ios::sync_with_stdio(0), cin.tie(0), cout.tie(0)

using namespace std;

typedef int ll;
typedef long double ld;

const ll N=1000100,mod=1e9+7,mod2=1e9+9,mod3=998244353,sq=450,base=727,lg=30;

ll n,m,x,y,z,w,k,ans,t,p[N],b[N],seg[5*N];

string s;
void bld(ll pos,ll bb,ll ee){
    ll mid=bb+ee>>1,l=pos*2,r=l+1;
    if(ee-bb<=1){
        seg[pos]=b[bb];
        return;
    }
    bld(l,bb,mid);
    bld(r,mid,ee);
    seg[pos]=min(seg[l],seg[r]);
}
ll get(ll pos,ll bb,ll ee,ll bx,ll ex){
    ll mid=bb+ee>>1,l=pos*2,r=l+1;
    if(ee-bb==ex-bx){
        return seg[pos];
    }
    if(ex<=mid)return get(l,bb,mid,bx,ex);
    if(bx>=mid)return get(r,mid,ee,bx,ex);
    return min(get(r,mid,ee,mid,ex),get(l,bb,mid,bx,mid));
}
bool solbaz(ll i){
    if(i==0)return false;
    y=b[i]-2;
    if(min(p[i-1],y)<0 || x-2!=0 || (i+1!=n && get(1,0,n,i+1,n)-2<0))return false;
    return true;
}
bool solbaste(ll i){
    y=b[i]+2;
    if((i!=0 && min(p[i-1],y)<0) || x+2!=0 || (i+1!=n && get(1,0,n,i+1,n)+2<0))return false;
    return true;
}
int main(){
    //faster;
    cin>>n>>s;x=0;
    for(int i=0;i<n;i++){
        if(s[i]==')')x--;
        else x++;
        b[i]=x;
        p[i]=x;
        if(i)p[i]=min(p[i-1],x);
    }
    bld(1,0,n);
    for(int i=0;i<n;i++){
        if(s[i]=='(' && solbaz(i))ans++;
        if(s[i]==')' && solbaste(i))ans++;
    }
    cout<<ans;
    return 0;
}
