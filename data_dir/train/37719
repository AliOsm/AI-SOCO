    #include <bits/stdc++.h>
    #define f first
    #define s second
    using namespace std;

    int n,w,h;
    int dp[5005];
    vector < pair<pair<int,int> ,int> > vec;

    int solve(int i) {
        if(i == n)
            return dp[i] = 1;

        if(dp[i] != -1)
            return dp[i];

        int ans = 1;
        for(int j = i+1;j<=n;j++) {
            if(vec[j].f.f > vec[i].f.f && vec[j].f.s > vec[i].f.s) {
                ans = max(ans , 1+solve(j));
            }
        }

        return dp[i] = ans;
    }

    void solve2(int i) {
        printf("%d ",vec[i].s);
        if(i == n+1 || dp[i] == 0)
            return;
        for(int j = i+1;j<=n;j++) {
            if(dp[j] == dp[i]-1 && vec[j].f.f > vec[i].f.f && vec[j].f.s > vec[i].f.s) {
                solve2(j);
                break;
            }
        }
        return;
    }
    int main()
    {
        memset(dp,-1,sizeof dp);
        scanf("%d %d %d",&n,&w,&h);
        int t,tt;
        for(int i = 0;i<n;i++) {
            scanf("%d %d",&t,&tt);
            vec.push_back(make_pair(make_pair(t,tt),i+1));
        }
        sort(vec.begin(),vec.end());
        vec.insert(vec.begin(),make_pair(make_pair(w,h),0));
//        for(int i =0;i<vec.size();i++)
//            cout<<vec[i].f.f<<" "<<vec[i].f.s<<" "<<vec[i].s<<endl;
        int ans = 0;
        int ansIndex = -1;
        for(int i = 1;i<=n;i++) {
            if(vec[i].f.f > vec[0].f.f && vec[i].f.s > vec[0].f.s) {
                if(solve(i) > ans) {
                    ansIndex = i;
                    ans = solve(i);
                }
            }
        }
        printf("%d\n",ans);
        if(ansIndex != -1)
            solve2(ansIndex);
        return 0;
    }
