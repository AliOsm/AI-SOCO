#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000002;
const ll INFLL = 100000000000000000ll;
const ll MOD = 1000000007;

// ----------------------------------------------------------------------------------------------------------

int A[505][505], H, W, K;
vii T[50005];

int main()
{
    cin >> H >> W >> K;
    int i = 1, j = 1;
    f(k,1,K-1)
    {
        T[k].pb({i,j});
        j += i%2 ? 1 : -1;
        if(j > W) j = W, i++;
        if(j < 1) j = 1, i++;
        T[k].pb({i,j});
        j += i%2 ? 1 : -1;
        if(j > W) j = W, i++;
        if(j < 1) j = 1, i++;
    }
    while(i <= H)
    {
        T[K].pb({i,j});
        j += i%2 ? 1 : -1;
        if(j > W) j = W, i++;
        if(j < 1) j = 1, i++;
    }
    f(k,1,K)
    {
        cout << SZ(T[k]) << " ";
        for(pii p : T[k]) cout << p.first << " " << p.second << " ";
        cout << "\n";
    }
}

