/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
class ProblemAFeedTheCat {
public:
	void solve(std::istream& in, std::ostream& out) {
		int h, m; in>>h>>m;
        ld H, d, c, n; in>>H>>d>>c>>n;
        ld cost1 = 0;
        ld cost2 = 0;

        if(h>=20){
            out<<setprecision(9)<<fixed;
            out<<(0.8*c*ceil(H/n));
            return;
        }
        int remain = (20*60) - (h*60+m);
        //wait
        ld buns = (remain*d+H)/n;
        cost2 = ceil(buns)*c*0.8;
        //Do not wait
        ld require = ceil(H/n);
        cost1 = require*c;



        out<<setprecision(9)<<fixed;
        out<<min(cost1, cost2);
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ProblemAFeedTheCat solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
