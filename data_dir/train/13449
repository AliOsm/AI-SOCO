#include <cstdio>
#include <cstdint>
#include <array>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <cassert>
#include <memory>
#include <utility>
#include <cstddef>
#include <iterator>

#pragma comment(linker, "/stack:20000000")

using namespace std;
using mt = int32_t;
using fl = double;

template<typename T>
constexpr mt infValue = std::numeric_limits<T>::max() - 1000;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(mt i = a; i < (b); ++i)
#define repe(a, b, i) for(mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(mt i = a; i > (b); --i)
#define repde(a, b, i) for(mt i = a; i >= (b); --i)

constexpr mt INF = infValue<mt>;
constexpr int64_t MOD = 998244353ll;// 1000000007ll;
constexpr double EPS = 1e-6;
constexpr mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

constexpr auto N = 1001;
constexpr auto K = 256;
constexpr auto P = 19;
constexpr auto M = 200111;

mt n;
char t[K];
char s[N];
bool ok = true;
int main(void) {
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	t['A'] = 'A';

	t['b'] = 'd';
	t['d'] = 'b';

	t['p'] = 'q';
	t['q'] = 'p';

	t['H'] = 'H';
	t['I'] = 'I';//i
	t['M'] = 'M';//m
	t['O'] = 'O';
	t['o'] = 'o';
	t['T'] = 'T';
	t['W'] = 'W';
	t['w'] = 'w';
	t['V'] = 'V';
	t['v'] = 'v';
	t['U'] = 'U';
	t['X'] = 'X';
	t['x'] = 'x';
	t['Y'] = 'Y';

	scanf("%s", s);
	n = strlen(s);
	rep(0, n, i) ok &= s[i] == t[s[n - 1 - i]];
	puts(ok ? "TAK": "NIE");
	
	return 0;
}