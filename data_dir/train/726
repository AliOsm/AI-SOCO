#include <iostream>
#include <algorithm>

using namespace std;

constexpr int N = 14;
int a[N];
int b[N];

inline long long score(const int* a, int pos) {
	copy(a, a + N, b);
	// memcpy(b, a, N * sizeof(int));
	int c = b[pos];
	b[pos] = 0;
	int x = c / N;
	c %= N;
	while(c-- > 0) {
		++pos;
		if (pos == N) {
			pos = 0;
		}
		++b[pos];
	}
	long long score = 0;
	for(int i = 0; i < N; ++i) {
		b[i] += x;
		if ((b[i] & 1) == 0) {
			score += b[i];
		}
	}

	return score;
}

int main() {
	ios_base::sync_with_stdio(false);

	for (int i = 0; i < N; ++i) {
		cin >> a[i];
	}

	long long mx = 0;
	for(int i = 0; i < N; ++i) {
		if (a[i] == 0) continue;
		long long s = score(a, i);
		if (mx < s) {
			mx = s;
		}
	}
	cout << mx << endl;
	return 0;
}
