#include<bits/stdc++.h>
using namespace std;
const int N=52;
int n,m,i,j,k,ans;
char a[N][N];
bool vis[N][N];
int dx[]={ 0, 0,+1,-1};
int dy[]={+1,-1, 0, 0};
vector <vector <pair<int,int>>> lakes;

bool valid(int x,int y)
{
    if(min(x,y)<0 or x>=n or y>=m or vis[x][y] or a[x][y]=='*')
        return false;
    return true;
}

void remove_ocean(int x,int y)
{
    vis[x][y]=true;
    for(int i=0;i<4;i++)
        if(valid(x+dx[i],y+dy[i]))
            remove_ocean(x+dx[i],y+dy[i]);
}

void dfs(int x,int y)
{
    vis[x][y]=true;
    lakes.back().push_back({x,y});
    for(int i=0;i<4;i++)
        if(valid(x+dx[i],y+dy[i]))
            dfs(x+dx[i],y+dy[i]);
}

bool cmp(vector <pair<int,int>> &a,vector <pair<int,int>> &b)
{
    return a.size()<b.size();
}

int main()
{
    scanf("%d%d%d",&n,&m,&k);
    for(i=0;i<n;i++) scanf(" %s",a[i]);

    for(i=0;i<m;i++) if(valid(0,i)) remove_ocean(0,i);
    for(i=0;i<m;i++) if(valid(n-1,i)) remove_ocean(n-1,i);
    for(i=0;i<n;i++) if(valid(i,0)) remove_ocean(i,0);
    for(i=0;i<n;i++) if(valid(i,m-1)) remove_ocean(i,m-1);

    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            if(a[i][j]=='.' and !vis[i][j])
            {
                lakes.push_back({});
                dfs(i,j);
            }
        }
    }

    sort(lakes.begin(),lakes.end(),cmp);

    for(i=0;i<lakes.size()-k;i++)
    {
        for(auto j:lakes[i])
        {
            a[j.first][j.second]='*';
            ans++;
        }
    }

    printf("%d\n",ans);
    for(i=0;i<n;i++) printf("%s\n",a[i]);
}
