#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
#define pb push_back
#define f first
#define s second
#define D(x) cout << #x << " = " << (x) << endl;
#define all(x) (x).begin(),(x).end()
const int A = 2;
struct node{
	int N;
	int adj[2];
	node(){ N = 0; adj[0] = adj[1] = -1; }
};
vector<node> tr;
const int MAX = 1000009;
int n,k;
long long arr[MAX];

void insert(long long x){
	int cur = 0;
	tr[cur].N++;
	for(int i=31;i>=0;i--){
		int act = (x>>i) & 1;
		if(tr[cur].adj[act] == -1){
			tr[cur].adj[act] = tr.size();
			tr.push_back(node());
		}
		cur = tr[cur].adj[act];
		tr[cur].N++;
	}
}

long long add(long long s){
	long long r = 0;
	int cur = 0;
	long long act = 0;
	for(int i=31;i>=0;i--){
		if(cur==-1)
			break;
		int c = (s>>i) & 1;
		if((act|(1LL<<i)) >= k){
			if(tr[cur].adj[c ^ 1]!=-1)
				r += tr[ tr[cur].adj[c ^ 1] ].N;
			cur = tr[cur].adj[c];
		}else{
			cur = tr[cur].adj[c ^ 1];
			act |= (1LL<<i);
		}
	}
	if(act>=k && cur!=-1)
		r += tr[cur].N;
	return r;
}

int main()
{
//    freopen("/home/khaled/file.in","r",stdin);
    ios::sync_with_stdio(false);
    cin >> n >> k;
    for(int i=0;i<n;i++)
		cin >> arr[i];
	tr.push_back(node());
	long long s = 0 , ans = 0;
	insert(0);
	for(int i=0;i<n;i++){
		s = s ^ arr[i];
		ans += add(s);
		insert(s);
	}
	cout << ans << endl;
    return 0;
}



