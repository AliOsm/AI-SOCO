/*
 * p.cpp
 *
 *  Created on: 2016/12/27
 *      Author: joi
 */
#include<bits/stdc++.h>
using namespace std;

#define MAX 1002

int n;
int m;
int k;
int belong[MAX];
int siz[MAX];

inline int root(int b){
	if(belong[b]==-1)return b;
	belong[b]=root(belong[b]);
	return belong[b];
}
void merge(int a,int b){
	a=root(a);
	b=root(b);
	if(a==b)return;
	belong[a]=b;
	siz[b]+=siz[a];
}
vector<int> v;
vector<long long int> V;
int main(){
	cin>>n>>m>>k;
	fill(siz,siz+MAX,1);
	memset(belong,-1,sizeof(belong));
	for(int i=0;i<k;i++){
		int a;
		scanf("%d",&a);
		a--;
		v.push_back(a);
	}
	for(int i=0;i<m;i++){
		int a,b;
		scanf("%d%d",&a,&b);
		a--;
		b--;
		merge(a,b);
	}
	long long int free=n;
	for(int i=0;i<v.size();i++){
		int r=root(v[i]);
		free-=siz[r];
		V.push_back(siz[r]);
	}
	sort(V.begin(),V.end());
	long long int ans=0;
	for(int i=0;i+1<V.size();i++){
		ans+=V[i]*(V[i]-1LL)/2LL;
	}
	ans+=(V.back()+free)*(V.back()+free-1LL)/2LL;
	ans-=m;
	printf("%lld\n",ans);
	return 0;
}
