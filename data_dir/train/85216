#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <set>
#include <map>

using namespace std;
const int N = 1000;

char a[N][N];
int us[N][N];
vector<pair<char, pair<int, int> > > ans;
int n, m;

void dfs(int i, int j, int f = 1) {
    if(i < 0 || i >= n || j < 0 || j >= m || a[i][j] == '#')
        return;
    if(us[i][j])
        return;

    us[i][j] = 1;

    ans.push_back(make_pair('B', make_pair(i, j)));
    dfs(i - 1, j, 0);
    dfs(i + 1, j, 0);
    dfs(i, j - 1, 0);
    dfs(i, j + 1, 0);

    if(!f) {
        ans.push_back(make_pair('D', make_pair(i, j)));
        ans.push_back(make_pair('R', make_pair(i, j)));
    }
}

int main() {
    scanf("%d%d\n", &n, &m);
    for(int i = 0; i < n; i++) {
        gets(a[i]);
    }

    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            if(us[i][j] || a[i][j] == '#')
                continue;
            dfs(i, j);
        }
    }

    cout << ans.size() << "\n";
    for(auto i : ans) {
        cout << i.first << " " << i.second.first + 1 << " " << i.second.second + 1 << "\n";
    }
    return 0;
}
