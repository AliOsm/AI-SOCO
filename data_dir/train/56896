#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 2e5 + 11, mod = 1e9 + 7;
const int MAX = 2e7;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-12;
const double PI = acos(-1.0);

#define int ll

int n, m, k, pref[N], a[N];
inline ll get(int l, int r) {
    return pref[r] - pref[l - 1];
}
inline bool check(int x) {
    int curk = k, curm = m - 1;
    fo(i, x + 1, n, 1) {
        if (curk < a[i]) {
            curk = k - a[i];
            if (!curm) return 0;
            --curm;
        } else {
            curk -= a[i];
        }
    }
    return 1;
}
main() {
    file("queue");
    ios;
    cin >> n >> m >> k;
    int l = 0, r = n;
    fo(i, 1, n, 1) cin >> a[i], pref[i] = pref[i - 1] + a[i];
    while (l <= r) check(md) ? r = md - 1 : l = md + 1;
    ++r;
    cout << n - r;
    return 0;
}
/**

*/
