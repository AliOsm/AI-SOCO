#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;
typedef unsigned        un;
typedef long long       ll;
#define all(A)          A.begin(),A.end()
#define rall(A)         A.rbegin(),A.rend()
#define mp              make_pair
#define SP              setprecision
#define mem(A,B)        memset(A,B,sizeof A)
#define sorta(A)        sort(all(A))
#define sortd(A)        sort(rall(A))
#define sortf(A,F)      sort(all(A),F)
#define Max(A,B)        (A>=B?A:B)
#define Min(A,B)        (A<=B?A:B)
#define Get(mask,bit)   mask&(1LL<<bit)
#define Set(mask,bit)   mask|(1LL<<bit)
#define Reset(mask,bit) mask&(~(1LL<<bit))
#define Flib(mask,bit)  mask^(1LL<<bit)
#define LowOn(mask,bit) mask&-mask
#define PI              acos(0.0) * 2
#define exp             2.71828182845904523536028747135266249775724709369995
#define eps             -1000000000
#define oo              1000000000
#define Endl            '\n'
#define inn             goto in
#define ott             goto out
template <class T> inline void remax(T& A, T B){ if (A < B)A = B; }
template <class T> inline void remin(T& A, T B){ if (A > B)A = B; }
string ToString(ll num){ string ret; do{ ret += ((num % 10) + '0'); num /= 10; } while (num); reverse(all(ret)); return ret; }
ll ToNumber(string s){ ll r = 0, p = 1; for (int i = s.size() - 1; i >= 0; --i)r += (s[i] - '0') * p, p *= 10; return r; }
ll Gcd(ll a, ll b){ while (a %= b ^= a ^= b ^= a);  return b; }
ll Power(ll base, ll power){ ll ret = 1; while (power){ if (power & 1)ret *= base; power >>= 1; base *= base; } return ret; }
ll PowerMod(ll base, ll power, ll mod){ if (!power)return 1; if (power & 1)return (base * PowerMod(base, power - 1, mod)) % mod; return PowerMod((base * base) % mod, power >> 1, mod); }
int Log(ll num, ll base){ int ret = 0; while (num){ ++ret; num /= base; } return ret; }
int Count(ll mask){ int ret = 0; while (mask){ if (mask & 1)++ret; mask >>= 1; } return ret; }


inline void run(){
    string s;
    int n, p;
    cin >> n >> p >> s;
    --p;
    if (p < (n >> 1)){
        int po1 = 0, po2 = (n >> 1) - 1, ans = 0;
        while (po1 < (n >> 1)){
            if (s[po1] != s[n - po1 - 1])break;
            ++po1;
        }
        while (po2 >= 0){
            if (s[po2] != s[n - po2 - 1])break;
            --po2;
        }
        if (po1 < (n >> 1) && po2 >= po1){
            if (p < po1)ans = po2 - p;
            else if (p > po2)ans = p - po1;
            else ans = Min(p - po1, po2 - p) + po2 - po1;
            for (int i = po1; i <= po2; ++i)ans += Min(abs(s[i] - s[n - i - 1]), 26 - abs(s[i] - s[n - i - 1]));
        }
        cout << ans << endl;
    }
    else{
        int po1 = (n >> 1), po2 = n - 1, ans = 0;
        while (po1 < n){
            if (s[po1] != s[n - po1 - 1])break;
            ++po1;
        }
        while (po2 >= (n >> 1)){
            if (s[po2] != s[n - po2 - 1])break;
            --po2;
        }
        if (po1 < n && po2 >= po1){
            if (p < po1)ans = po2 - p;
            else if (p > po2)ans = p - po1;
            else ans = Min(p - po1, po2 - p) + po2 - po1;
            for (int i = po1; i <= po2; ++i)ans += Min(abs(s[i] - s[n - i - 1]), 26 - abs(s[i] - s[n - i - 1]));
        }
        cout << ans << endl;
    }
}
int main(){
    //freopen("","r", stdin);
    //freopen("","w", stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr), cout.tie(nullptr);
    run();
    return 0;
}