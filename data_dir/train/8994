#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define fi first
#define se second

const int maxK = 33;

int o[maxK];
int used[maxK];
int a[maxK];
set<ll> happy;

int main() {
    for (int l = 0; l < 11; l++) {
        for (int mask = 0; mask < (1 << l); mask++) {
            ll cur = 0;
            for (int i = 0; i < l; i++) {
                int c = 4 + 3 * ((mask >> i) & 1);
                cur = cur * 10 + c;
            }
            if (cur)happy.insert(cur);
        }
    }
    int n, k;
    cin >> n >> k;
    k--;
    int p = min(n, maxK - 10);
    for (int i = 1; i <= p; i++) {
        o[p - i + 1] = k % i + 1;
        k /= i;
    }
    if (k) {
        cout << -1 << endl;
        return 0;
    }
    int res = 0;
    for (int i = 1; i <= p; i++) {
        int x = o[i];
        int ii;
        for (int j = 1; j <= p && x; j++) {
            x -= 1 - used[j];
            ii = j;
        }
        used[ii] = 1;
        if (happy.find(ii + n - p) != happy.end() && happy.find(i + n - p) != happy.end()) {
            res++;
        }
    }
    for (auto x : happy) {
        if (x < n - p + 1) {
            res++;
        }
    }
    cout << res << endl;
    return 0;
}
