#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
#define pb push_back
#define endl "\n"

int n, a[4100], dp[4100][4100];

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    //freopen("tree.in", "r", stdin);freopen("tree.out", "w", stdout);

    cin >> n;
    vector <int> zhat;
    for (int i = 1; i <= n; i++){
        cin >> a[i];
        zhat.pb(a[i]);
    }
    sort(zhat.begin(), zhat.end());
    zhat.erase(unique(zhat.begin(), zhat.end()), zhat.end());
    for (int i = 1; i <= n; i++){
        a[i] = lower_bound(zhat.begin(), zhat.end(), a[i]) - zhat.begin() + 1;
    }
    for (int i = 1; i <= n; i++){
        for (int j = 1; j <= n; j++)
            dp[i][j] = 1;
    }
    int ans = 1;
    for (int i = 1; i <= n; i++){
        for (int j = 1; j < i; j++){
            dp[i][a[j]] = max(dp[i][a[j]], dp[j][a[i]]+1);
            ans = max(ans, dp[i][a[j]]);
        }
    }
    cout << ans;

}
