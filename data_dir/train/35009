#include "bits/stdc++.h"
#define FI first.first
#define SE first.second
#define TH second
#define fi first
#define se second
#define th second

using namespace std;

class DebugStream {}LOG;
template <typename T>DebugStream &operator<<(DebugStream &s, const T&) { return s; }
#ifdef DEBUG
#define LOG clog
#endif

typedef long long ll;
typedef pair<ll, ll> ii;
typedef long double ld;

const int maxN = 1e3 + 9, maxV = 1e6 + 9, MOD = 1e9 + 7, SQ = 335, lg = 20, bs = 29;

int n;

int makeQuery(int x1, int y1, int x2, int y2, bool swp) {
	if(swp) swap(x1, y1), swap(x2, y2);
	if(x1 > x2) swap(x1, x2);
	if(y1 > y2) swap(y1, y2);
	cout << "? " << x1 + 1 << ' ' << y1 + 1 << ' ' << x2 + 1 << ' ' << y2 + 1 << '\n';
	cout.flush();
	int resp;
	cin >> resp;
	assert(resp != -1);
	return resp;
}

int normbi(int strt, bool swp) {
	int le = strt, ri = n, m;
	while(le + 1 < ri) {
		m = (le + ri) / 2;
		if(makeQuery(0, 0, m, n - 1, swp) & 1)
			le = m;
		else
			ri = m;
	}
	return ri;
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	#ifdef DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif
	cin >> n;

	int crx = 0, cry = 0;
	while(crx < n && makeQuery(0, 0, crx, n - 1, 0) % 2 == 0) crx++;

	while(cry < n && makeQuery(0, 0, cry, n - 1, 1) % 2 == 0) cry++;
	int otx = n, oty = n;

	if(crx < n) otx = normbi(crx, 0);
	if(cry < n) oty = normbi(cry, 1);

	if(crx < n && cry < n) {
		if(makeQuery(crx, cry, crx, cry, 0) % 2 == 0)
			swap(crx, otx);
		cout << "! " << crx + 1 << ' ' << cry + 1 << ' ' << otx + 1 << ' ' << oty + 1 << '\n';
		return 0;
	}

	bool swp = 0;
	if(cry == n) {
		swp = 1;
		swap(crx, cry);
		swap(otx, oty);
	}
	int le = -1, ri = n - 1, m;
	while(le + 1 < ri) {
		m = (le + ri) / 2;	
		if(makeQuery(0, cry, m, cry, swp) & 1)
			ri = m;
		else
			le = m;
	}
	crx = otx = ri;
	if(swp){
		swap(crx, cry);
		swap(otx, oty);
	}

	cout << "! " << crx + 1 << ' ' << cry + 1 << ' ' << otx + 1 << ' ' << oty + 1 << '\n';
}
