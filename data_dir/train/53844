#include <bits/stdc++.h>
using namespace std;
#define rep(i, a) for (int i = 0; i < (a); i++)
#define rep2(i, a, b) for (int i = (a); i < (b); i++)
#define repr(i, a) for (int i = (a) - 1; i >= 0; i--)
#define repr2(i, a, b) for (int i = (b) - 1; i >= (a); i--)
template<class T1, class T2> bool chmin(T1 &a, T2 b) { return b < a && (a = b, true); }
template<class T1, class T2> bool chmax(T1 &a, T2 b) { return a < b && (a = b, true); }
typedef long long ll;

struct node {
	vector<node *> next;
	string s;
	node() : next(26) {}
};

node root;
void add(string s) {
	node *curr = &root;
	string tmp = s;
	reverse(s.begin(), s.end());
	for (char c : s) {
		c = tolower(c);
		if (!curr->next[c - 'a']) 
			curr->next[c - 'a'] = new node();
		curr = curr->next[c - 'a'];
	}
	curr->s = tmp;
}

int n;
string s;

bool vis[101010];
stack<string> stk;

void dfs(int i) {
	if (i == n) {
		vector<string> ans;
		while (!stk.empty()) ans.push_back(stk.top()), stk.pop();
		reverse(ans.begin(), ans.end());
		rep(i, ans.size()) cout << (i ? " " : "") << ans[i];
		cout << endl;
		exit(0);
	}
	if (vis[i]) return;
	node *curr = &root;
	for (int j = i; j < n && j - i + 1 <= 1000; j++) {
		curr = curr->next[s[j] - 'a'];
		if (!curr) break;
		if (curr->s != "") {
			stk.push(curr->s);
			dfs(j + 1);
			stk.pop();
		}
	}
	vis[i] = true;
}

int main() {
	cin >> n >> s;

	int m;
	cin >> m;
	rep(i, m) {
		string t;
		cin >> t;
		add(t);
	}

	dfs(0);
	return 0;
}