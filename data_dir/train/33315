#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <iostream>
#include <map>
#include <iomanip>
#include <set>
#include <ctime>
#include <queue>
#include <cassert>
#include <vector>
#include <algorithm>
 
#define For(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
#define Rep(i,a,b) for(int (i)=(a);(i)<(b);(i)++)
#define Ford(i,a,b) for(int (i)=(a);(i)>=(b);(i)--)
#define foreach(i,a) for(__typeof(a.begin()) i = a.begin() ; (i)!=a.end() ; (i)++ )
#define fi first
#define se second
#define dbg(x) cerr<<#x<<":"<<x<<endl;
#define dg(x) cerr<<#x<<":"<<x<<' ';
#define mp make_pair
#define fill(x,y) memset(x,y,sizeof x)
#define all(x) x.begin(),x.end()
#define bin(x) (1<<(x))
#define NEW(T) (T *)calloc(1,sizeof(T))

using namespace std;

typedef long long Lint;
typedef pair<int,int> ii;

const Lint mod = 1e9+7;

const int MAXN = 1e6+5; 

Lint F[MAXN];

Lint pw(Lint n,int k){
		
	Lint res = 1LL;
	
	for( ; k ; k>>=1 , n = (n*n)%mod )
		if(k&1)
			res = (res*n)%mod;
	
	return res;		
	
}

Lint C(int n,int k){
	
	Lint res = F[n];
	res = res*pw(F[k],mod-2)%mod;
	res = res*pw(F[n-k],mod-2)%mod;
	return res;
		
}

bool f(int a,int l,int r){
	
	while(a){
		if(a%10!=l && a%10!=r)
			return false;
		a/=10;	
	}
	
	return true;
}
int main(){
	
	int a ,b , n ; 
	
	cin >> a >> b >> n ; 
	
	F[0]=1;
	
	For(i,1,n)
		F[i] = F[i-1]*i%mod;
	
	Lint res = 0 ;
	
	For(i,0,n)
		if(f(a*i+b*(n-i),a,b)){
			//cout << i << endl;
			res+=C(n,i);
			res%=mod;
		}
	
	cout << res << endl;
		
	return 0;
}
 
