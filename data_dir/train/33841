#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pll pair<ll, ll>
#pragma GCC optimize ("O3")
using namespace std;
int main () {
    int n; cin>>n;
    map <string, map<int, int>> cnt;
    vector <string> taxi, pizza, girl;
    int m1=0, m2=0, m3=0;
    for (int i=0;i<n;++i) {
        int k; cin>>k;
        string s; cin>>s;
        if (m1==0) taxi.pb(s);
        if (m2==0) pizza.pb(s);
        if (m3==0) girl.pb(s);
        cin.ignore();
        while (k--) {
            char a, b, c, d, e, f;
            scanf ("%c%c-%c%c-%c%c\n", &a, &b, &c, &d, &e, &f);
            if (a==b && b==c && c==d && d==e && e==f) {
                cnt[s][0]++;
                if (cnt[s][0]==m1) taxi.pb(s);
                else if (cnt[s][0]>m1) {
                    m1=cnt[s][0];
                    taxi.clear();
                    taxi.pb(s);
                }
            }
            else if (a>b && b>c && c>d && d>e && e>f) {
                cnt[s][1]++;
                if (cnt[s][1]==m2) pizza.pb(s);
                else if (cnt[s][1]>m2) {
                    m2=cnt[s][1];
                    pizza.clear();
                    pizza.pb(s);
                }
            }
            else {
                cnt[s][2]++;
                if (cnt[s][2]==m3) girl.pb(s);
                else if (cnt[s][2]>m3) {
                    m3=cnt[s][2];
                    girl.clear();
                    girl.pb(s);
                }
            }
        }
    }
    cout<<"If you want to call a taxi, you should call: ";
    for (int i=0;i<(int) taxi.size()-1;++i) cout<<taxi[i]<<", ";
    cout<<taxi[taxi.size()-1]<<".\n";
    cout<<"If you want to order a pizza, you should call: ";
    for (int i=0;i<(int) pizza.size()-1;++i) cout<<pizza[i]<<", ";
    cout<<pizza[pizza.size()-1]<<".\n";
    cout<<"If you want to go to a cafe with a wonderful girl, you should call: ";
    for (int i=0;i<(int) girl.size()-1;++i) cout<<girl[i]<<", ";
    cout<<girl[girl.size()-1]<<'.';
    return 0;
}
