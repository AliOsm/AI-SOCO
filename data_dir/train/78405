#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
using namespace std;
const int mod = 1000000007;
const int MAX = 52;
int n;
int mp[52][52];
struct  Mat {
    __int64 mat[MAX][MAX];
    Mat(){};
    Mat(int n){
        memset(mat,0,sizeof(mat));
    }
    void init(int n){
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
                mat[i][j]= i==j;

    }
    void print(int n){
        printf("****************\n");
        for(int i=0;i<n;i++) 
            for(int j=0;j<n;j++)
                printf(j==n-1?"%I64d\n":"%I64d ",mat[i][j]);
        printf("fuckfuckfuckfuckfuck\n");
    }
    friend Mat operator *(Mat a,Mat b);
    friend Mat operator +(Mat a,Mat b);
    friend Mat operator ^(Mat a,int k);
}E;
Mat operator +(Mat a,Mat b)
{
    Mat c(n);
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            c.mat[i][j]=(a.mat[i][j]+b.mat[i][j])%mod;
    return c;
}
Mat operator *(Mat a,Mat b)
{
    Mat ans(n);
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            for(int k=0;k<n;k++)
                ans.mat[i][j]=(ans.mat[i][j]+a.mat[i][k]*b.mat[k][j])%mod;
    return ans;
}
Mat operator ^(Mat a,__int64 k)
{
    Mat ans=E;
    while(k){
        if(k&1) ans=ans*a;
        a=a*a,k>>=1;
    }
    return ans;
}

int main()
{
    int m,k,x,y;
    __int64 nn;
    scanf("%I64d%d%d",&nn,&n,&k);
    char s[3];
    for(int i=0;i<n;i++) for(int j=0;j<n;j++) mp[i][j]=1;
    for(int i=0;i<k;i++)
    {
        scanf("%s",s);
        if(s[0]>='a' && s[0]<='z') x=s[0]-'a';
        else x=s[0]-'A'+26;
        if(s[1]>='a' && s[1]<='z') y=s[1]-'a';
        else y=s[1]-'A'+26;
        mp[x][y]=0;
    }
    Mat ans;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            ans.mat[i][j] = mp[i][j] ? 1 : 0;
        }
    }
    E.init(n);
    ans=ans^(nn-1);
    __int64 ret=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            ret+=ans.mat[i][j];
            ret%=mod;
        }
    }
    printf("%I64d\n",ret);
    return  0;
}