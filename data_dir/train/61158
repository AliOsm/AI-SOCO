/*
ID: Tariqul
PROG:
LANG: C++
*/

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define fo(i,j,n) for(i=j;i<n;++i)
#define Fo(i,j,n) for(i=n-1;i>=j;--i)
#define foo(i,j,v) fo(i,j,sz(v))
#define Foo(i,j,v) Fo(i,j,sz(v))
#define li(v) v.begin(),v.end()
#define sz(v) ((int)v.size())
#define CLR(a,v) memset((a),(v),sizeof(a))
#define inf 1e9
#ifdef localhost
typedef long long Long;
#else
typedef __int64 Long;
#endif // localhost
#define pi (2*acos(0))
#define eps 1e-9

#define two(X) (1<<(X))
#define twoL(X) (((Long)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)

char BUFFER[100000 + 5];
bool readn(int &n)	{ return scanf("%d",&n) == 1; }
#ifdef localhost
bool readl(Long &n)	{ return scanf("%lld",&n) == 1; }
#else
bool readl(Long &n)	{ return scanf("%I64d",&n) == 1; }
#endif // localhost
bool readd(double &n){ return scanf("%lf",&n) == 1; }
bool reads(string &s){ s = ""; int n = scanf("%s",BUFFER); if(n == 1)s = BUFFER; return n == 1; }
bool readln(string &s){ char *valid = gets(BUFFER); if(valid)s = BUFFER; return ((bool)valid); }
#ifdef localhost
void Print(Long &n, bool printNewLine = true)	{ printNewLine ? printf("%lld\n",n) : printf("%lld",n);  }
#else
void Print(Long &n, bool printNewLine = true)	{ printNewLine ? printf("%I64d\n",n) :  printf("%I64d",n); }
#endif // localhost

void build_prefix_array(int f[], int pref[], string T, string P, bool reverse_needed)
{
    if(reverse_needed){ reverse(li(T)); reverse(li(P)); }
    int i,k;
    f[0] = k = 0;
    foo(i,1,P)
    {
        while(k > 0 && P[k] != P[i])k = f[k-1];
        if(P[k] == P[i])k++;
        f[i] = k;
    }
    k = 0;
    foo(i,0,T)
    {
        while(k > 0 && P[k] != T[i])k = f[k-1];
        if(P[k] == T[i])k++;
        pref[i] = k;
    }
    foo(i,1,T)pref[i] = max(pref[i-1],pref[i]);
}

const int maxn = 1e5 + 10;
const int maxm = 1e3 + 10;

string T,P;
int pref[maxn],suff[maxn],f[maxm];


int match()
{
    if(sz(P) < 2)return 0;
    build_prefix_array(f,pref,T,P,false);
    build_prefix_array(f,suff,T,P,true);
    int i; foo(i,0,T)if(pref[i] + suff[sz(T) - i - 2] >= sz(P))return 1;
    return 0;
}

int main()
{
	#ifdef localhost
	freopen("/home/tariqul/APC/Contest/input.txt","r",stdin);
	//freopen("/home/tariqul/APC/Contest/output.txt","w",stdout);
	#endif

    int i,n,cnt = 0; cin >> T >> n;

    fo(i,0,n)
    {
        reads(P);
        //if(match())cout << "Position: " << i << endl;
        cnt += match();
    }

    cout << cnt << endl;

	return 0;
}
