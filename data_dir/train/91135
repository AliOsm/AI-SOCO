#include <algorithm>
#include <cassert>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

typedef long long int64;
typedef long double real;

#ifdef DEBUG
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#else
#define eprintf(...) assert (true)
#endif

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

using namespace std;

const int MaxN = 10004, NA = -1, MaxC = 0x3F3F3F3F;

int a [MaxN];
int b [MaxN];
int d [MaxN];
int m, n;

int main (void)
{
 int i, j, k, l, res;
 while (scanf (" %d %d", &n, &m) != EOF)
 {
  memset (a, NA, sizeof (a));
  memset (b, NA, sizeof (b));
  for (i = 0; i < m; i++)
  {
   scanf (" %d %d %d", &j, &k, &l);
   a[j] = k;
   b[k] = j;
   d[j] = l;
  }

  vector <int> u, v, w;
  for (i = 1; i <= n; i++)
   if (b[i] == NA && a[i] != NA)
   {
    res = MaxC;
    for (j = i; a[j] != NA; j = a[j])
     res = min (res, d[j]);
    u.push_back (i);
    v.push_back (j);
    w.push_back (res);
   }

  printf ("%d\n", (int) u.size ());
  for (i = 0; i < (int) u.size (); i++)
   printf ("%d %d %d\n", u[i], v[i], w[i]);
 }
 return 0;
}
