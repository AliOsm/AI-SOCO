   #include <bits/stdc++.h>
 
//    #include <boost/multiprecision/cpp_int.hpp>
 #define int long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
 #define ppap pair<pa,int>
  #define PI 3.14159265358979323846
  #define paa pair<int,char>
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int gcd(int v,int b){
                                	if(v==0) return b;
                                	if(b==0) return v;
                                	if(v>b) return gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                                
                int pr[10000100];
                int inv[10000010];
                
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 
                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=((ll)pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=(ll)inv[i+1]*(i+1)%mod;
                	}
                }
                
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;

int mae[60];
int ko[60];

struct unionfind{
	private:
	public:
	int ten;
vector<int> par,ranks,kosuu;
	
	void shoki(int N){
		par.resize(N,0);
		ranks.resize(N,0);
		kosuu.resize(N,1);
		for(int i=0;i<N;i++){
			par[i]=i;
		}
		ten=N;
	}

	int root(int x){
		return par[x]==x ? x : par[x]=root(par[x]);
	}

	bool same(int x,int y){
		return root(x)==root(y);
	}
	bool is_root(int x){
		return x==root(x);
	}
	void unite(int x,int y){
 		x=root(x);
	 	y=root(y);
		int xx=kosuu[x],yy=kosuu[y];
	 	if(x==y) return;
		ten--;
		if(ranks[x]<ranks[y]){
			par[x]=y;
			kosuu[y]=yy+xx;
		}
	 	else {
			par[y]=x;
			if(ranks[x]==ranks[y]) ranks[x]=ranks[x]+1;
	 		kosuu[x]=yy+xx;
	 	}
		return;
	}
};


vector<int> jun(int n,int r){
	//cout<<n<<" "<<r<<endl;
	vector<int> ve;
	if(n==1){
		ve.pb(0);
		return ve;
	}
	if(n==2){
		ve.pb(1);
		ve.pb(0);
		return ve;
	}
	
	ve.pb(n-1);
	unionfind uf;
	uf.shoki(n);
	vector<int> use(n,0);
	use[n-1]=1;
	uf.unite(0,n-1);
	for(int i=1;i<n-1;i++){
		for(int j=0;j<n;j++)if(!use[j]){
			if(uf.same(i,j))continue;
			if(r-mae[n-i]>=0){
				r-=mae[n-i];
				continue;
			}
			else{
				use[j]=1;
				ve.pb(j);
				uf.unite(i,j);
			//	cout<<i<<" "<<j<<endl;
				break;
			}
		}
	}
	for(int i=0;i<n;i++)if(!use[i]){
		ve.pb(i);
	//	for(auto v:ve)cout<<v<<" ";
	//	cout<<endl;
		return ve;
	}
	
}
int M=inf*2000000000ll;
int solve(){
int n,k;
	cin>>n>>k;
	vector<int>kosu;
	vector<int> ans;
	int wa=n;
	k--;
	if(k>=ko[n]){
		cout<<-1<<"\n";
	//	cout<<endl;
		return 0;
	}
	while(1){
		if(wa==0)break;
		int it;
		for(int i=1;i<=wa;i++){
			//cout<<i<<" "<<mae[i]<<" "<<ko[wa-i]<<endl;
			if(M/mae[i]<=ko[wa-i] || mae[i]*ko[wa-i]>k){
				it=i;
				break;
			}
			else{
				k-=mae[i]*ko[wa-i];
			}
		}
		//cout<<it<<endl;
		int t=k/ko[wa-it];
		int e=k%ko[wa-it];
		
		kosu.pb(it);
		
		
		vector<int> ve=jun(it,t);
		for(auto v:ve)ans.pb(v+n-wa+1);
		wa-=it;
		
		k=e;
		
		if(wa==0)break;
	}
	for(auto v:ans)cout<<v<<" ";
	cout<<"\n";

}

signed main(){
	
	
cin.tie(0);
ios::sync_with_stdio(false);


	int n;
	cin>>n;
	ko[0]=1;
	mae[1]=1;
	mae[2]=1;
	mae[3]=1;
	for(int i=4;i<=50;i++){
		
		if(i>=23)mae[i]=mae[i-1];
else		mae[i]=mae[i-1]*(i-2);
	//	cout<<mae[i]<<endl;
	}
	
	ko[1]=1;
	ko[2]=2;
	for(int i=3;i<=50;i++){
		if(i>=23)ko[i]=ko[i-1];
		else{
		ko[i]=mae[i];
		for(int j=1;j<=i-1;j++){
			ko[i]+=mae[j]*ko[i-j];
		}
		}
		//cout<<i<<" "<<ko[i]<<endl;
	}/*
	pr[0]=1;
	pr[1]=1;
	pr[2]=1;
	pr[3]=1;
	pr[4]=2;
	for(int i=5;i<=50;i++){
		pr[i]=pr[i-1]*(i-2);
	}
	*/
	//return 0;
	for(int i=0;i<n;i++)solve();

	return 0; 
 }