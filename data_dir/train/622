#include <bits/stdc++.h>

using namespace std;

const int N = 2e5 + 5;
vector<int> adj[N];
int v[N] , sub[N] , ans[N];

void dfs(int node = 1, int par = -1) {
    sub[node] = v[node];
    for (int child : adj[node]) {
        if (child == par) continue;
        dfs(child , node);
        sub[node] += max(0 , sub[child]);
    }
}

void dfs2 (int node = 1 , int up = 0 , int par = -1) {
    ans[node] = sub[node] + up;
    for (int child : adj[node]) {
        if (child == par) continue;
        dfs2(child , max(0 , ans[node] - max(0 , sub[child])) , node);
    }
}

void run_case() {
    int n;
    cin >> n;
    for (int i = 1 ;i <= n ;i++) {
        cin >> v[i];
        if (!v[i]) v[i] = -1;
    }

    for (int i = 0 ;i < n - 1 ;i++) {
        int u , v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    dfs();
    dfs2();

    for (int i = 1 ;i <= n ;i++)
        cout << ans[i] << ' ';
}

int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    int t = 1;
    while (t--)
        run_case();
}