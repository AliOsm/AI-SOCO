#include <bits/stdc++.h>
using namespace std;

using ll = long long;

int main() {
  int n;
  ll k;
  cin >> n >> k;
  vector <ll> a(n + 1);
  for (int i = 0; i <= n; ++i) {
    cin >> a[i];
  }
  vector <ll> positive(n + 100), negative(n + 100);
  for (int i = 0; i <= n; ++i) {
    if (a[i] >= 0) {
      positive[i] += a[i];
    } else {
      negative[i] += -a[i];
    }
  }
  for (int i = 0; i + 1 < n + 100; ++i) {
    positive[i + 1] += positive[i] / 2;
    positive[i] %= 2;
    negative[i + 1] += negative[i] / 2;
    negative[i] %= 2;
  }
  int sign = 0;
  for (int i = n + 100 - 1; i >= 0; --i) {
    if (positive[i] != negative[i]) {
      if (positive[i] > negative[i]) {
        sign = 1;
      } else {
        sign = -1;
      }
      break;
    }
  }
  vector <ll> b(n + 100);
  for (int i = 0; i < b.size(); ++i) {
    b[i] = (positive[i] - negative[i]) * sign;
  }
  for (int i = 0; i < b.size() - 1; ++i) {
    int x = b[i];
    if (x % 2 == 0) {
      b[i] = 0;
    } else {
      b[i] = 1;
    }
    b[i + 1] += (x - b[i]) / 2;
  }
  int first_one = -1, last_one = -1;
  for (int i = 0; i < b.size(); ++i) {
    if (b[i] == 1) {
      last_one = i;
      if (first_one == -1) {
        first_one = i;
      }
    }
  }
  if (last_one - first_one > 30) {
    cout << 0 << endl;
    return 0;
  }
  ll x = 0;
  for (int i = 0; i + first_one <= last_one; ++i) {
    if (b[i + first_one]) {
      x += (1LL << i);
    }
  }
  int ans = 0;
  for (int i = first_one; i >= max(0, first_one - 30); i--) {
    if (i < n && a[i] - x * sign <= k && a[i] - x * sign >= -k) {
      ans++;
    }
    if (i == n && a[i] - x * sign <= k && a[i] - x * sign >= -k && a[i] - x * sign != 0) {
      ans++;
    }
    x *= 2;
    if (x > 2LL * k) {
      break;
    }
  }
  cout << ans << endl;
}