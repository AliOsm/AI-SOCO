#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define carr( n , array ) forr(i , n) cin >> array[i]
#define F first
#define S second
#define IF ->first
#define IS ->second
#define qqmemset(array , val) memset (array , val , sizeof(array))

const ll max9 = 10 + 1e9 ,  max6 = 10 + 1e6 , max12 = 10 + 1e12 , max15 = 10 + 1e15 ;
const ll min6 = -1 * max6 , min9 = -1 * max9 , min12 = -1 *max12 , min15 = -1 * max15 ;
const ll R = 7 + 1e9 , NN = 10 + 1e5 ;
using namespace std;
int n , m , x , t = 0 , a , b ;
string s [510] ;
bool S [510][510] ;
int di[] = {1 , 0 , -1 , 0} ;
int dj[] = {0 , 1 , 0 , -1} ;
bool isvalid (int i , int j) {
    return i >= 0 && j >= 0 && i < n && j < m ;
}
void solve (int i , int j) {
    if (S[i][j] || !isvalid(i , j) ) return ;
    if (t + x == n * m) return ;
    S[i][j] = true ; t ++ ;
    forr (k , 4) solve(i + di [k] , j + dj [k]) ;
}
int main()
{
    //ios_base::sync_with_stdio(false); cin.tie(NULL);
    cin >> n >> m >> x ; carr(n , s) ;
    forr (i , n) memset(S[i] , false , sizeof(S[i])) ;
    forr (i , n) forr (j , m) if (s[i][j] == '#') {t ++ ; S[i][j] = true ;}
    else a = i , b = j ;
    solve(a , b) ;
    forr (i , n) {
        forr (j , m)
            if (S[i][j]) cout << s[i][j] ; else cout << "X" ;
        cout << endl ;
    }
    return 0;
}
