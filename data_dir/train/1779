/********************************************
*                                           *
*    Solved By : Bir Bahadur Khatri(B'ru)   *
*      Be Positive,be Happy.                *
*                                           *
*********************************************/
#define ff first
#define D double
#define sz size()
#define ss second
#define PB push_back
#define MP make_pair
#define SQR(n) (n*n)
#define CHR getchar()
#define NL printf("\n")
#include<bits/stdc++.h>
#define ULL unsigned LL
#define PI 2.0*acos(0.0)
#define LL long long int
#define S1(a) a=in<int>()
#define SL1(a) a=in<LL>()
#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define all(a) a.begin(),a.end()
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define S2(a,b) a=in<int>(),b=in<int>()
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define BitCnt(a) __builtin_popcountll(a)
#define MEM(a,val) memset(a,val,sizeof(a))
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define _cin ios_base::sync_with_stdio(0); cin.tie(0)
#define cp printf("***** here here here here *****\n");
#define trace1(x)                cerr << #x << ": " << x << endl;
#define InpOut freopen("A.in","r",stdin),freopen("A1.out","w",stdout)
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;
template <typename T> T in(){char ch;T n = 0;bool ng = false;while (1){ch = getchar();if (ch == '-'){ng = true;ch = getchar();break;}if (ch>='0' && ch<='9')     break;}while (1){n = n*10 + (ch - '0');ch = getchar();if (ch<'0' || ch>'9')   break;}return (ng?-n:n);}
template<typename T>inline T POW(T B,T P){ if(P==0) return 1; if(P&1) return B*POW(B,P-1);  else return SQR(POW(B,P/2));}
template<typename T>inline T Gcd(T a,T b){if(a<0)return Gcd(-a,b);if(b<0)return Gcd(a,-b);return (b==0)?a:Gcd(b,a%b);}
template<typename T>inline T Lcm(T a,T b) {if(a<0)return Lcm(-a,b);if(b<0)return Lcm(a,-b);return a*(b/Gcd(a,b));}
long long Bigmod(long long base, long long power, long long MOD){long long ret=1;while(power){if(power & 1)ret=(ret*base)%MOD;base=(base*base)%MOD;power>>=1;}return ret;}
bool isVowel(char ch){ ch=toupper(ch); if(ch=='A'||ch=='U'||ch=='I'||ch=='O'||ch=='E') return true; return false;}
template <typename T> LL isLeft(T a,T b,T c) {return(a.x-b.x)*(b.y-c.y)-(b.x-c.x)*(a.y-b.y);}
long long ModInverse(long long number, long long MOD){return Bigmod(number, MOD-2, MOD);}
bool isConst(char ch){if (isalpha(ch) && !isVowel(ch)) return true; return false;}
int toInt(string s)  { int sm; stringstream ss(s); ss>>sm; return sm; }
///**********************************************************//

#define MD1 1000000007ULL
#define MD2 1000000009ULL
#define MD3 1000000021ULL
#define BS1 10000019ULL
#define BS2 10000079ULL
#define BS3 10000103ULL
#define PUL pair<ULL,ULL>
#define PLL pair<LL,LL>
#define PII pair<int,int>

#define lchild lft,l,mid
#define rchild rgt,mid+1,r
#define ngood  r<st||l>ed
#define good   st<=l&&ed>=r
#define seg    int mid=(l+r)/2,lft=2*id,rgt=lft+1

///         0123456789
#define MX  500007
#define MOD 1000000007
#define INF 2000000000000000LL
#define EPS 1e-9


/// ==========================================////


struct edge {
    int a,b;
    int flow,cap;
    edge(int _a,int _b,int _c,int _d) {
        a=_a,b=_b,cap=_c,flow=_d;
    }
};

struct Dinitz {
    int s,t,d[401],ptr[401];
    vector<edge> e;
    vector<int> g[401];

    void AddEdge(int a,int b,int cap) {
        edge e1=edge(a,b,cap,0);
        edge e2=edge(b,a,0,0);

        g[a].PB(e.sz);
        e.PB(e1);

        g[b].PB(e.sz);
        e.PB(e2);
    }

    bool Bfs() {

        queue<int> q;
        q.push(s);
        MEM(d,-1);
        d[s]=0;

        while(!q.empty()&& d[t]==-1) {
            int u=q.front(); q.pop();

            for(int i=0;i<g[u].sz;i++) {
                int id=g[u][i];
                int v=e[id].b;

                if(d[v]==-1&&e[id].flow<e[id].cap) {
                    q.push(v);
                    d[v]=d[u]+1;
                }
            }
        }
        return d[t]!=-1;
    }

    int Dfs(int v,int flow) {
        if(!flow)   return 0;
        if(v==t)    return flow;

        for(;ptr[v]<g[v].sz;ptr[v]++) {
            int id=g[v][ ptr[v] ];
            int to=e[id].b;

            if(d[to]!=d[v]+1)       continue;

            int pushed=Dfs(to,min( flow,e[id].cap-e[id].flow ));

            if(pushed) {
                e[id].flow+=pushed;
                e[id^1].flow-=pushed;
                return pushed;
            }
        }
        return 0;
    }

    int dinitz() {
        int flow=0;
        while(1) {
            if(!Bfs()) break;

            MEM(ptr,0);

            while(int pushed=Dfs(s,INF)) {
                flow+=pushed;
                if(pushed==0) break;
            }
        }
        return flow;
    }

    Dinitz(int _s,int _t) {
        s=_s,t=_t;
    }
};


bool prime[200000+9];
vector<int> prm;
void seive() {
    prime[1]=true;
    int s=sqrt(200000);
    for(int i=2; i<=s; i++) {
        if(!prime[i]) {
            for(int j=2*i; j<=200000; j+=i) {
                prime[j]=true;
            }
        }
    }
}
vector<PII> A[MX];

int isok(int m) {
    vector<PII> odd;
    vector<PII> eve;
    int sum=0;
    vector<PII> on;
    for(int i=1;i<=m;i++) {
        int ln=A[i].sz;
        F(j,0,ln) {
            if(A[i][j].ss==1) {
                on.PB(A[i][j]);
            }
            else if(A[i][j].ss%2)    odd.PB( A[i][j] );
            else                eve.PB( A[i][j] );
        }
    }
    if(on.sz) {
        sort(all(on));
        odd.PB( on[ on.sz-1 ] );
    }
    int N=odd.sz+eve.sz;
    Dinitz MxF=Dinitz(0,N+1);

    F(i,0,odd.sz) {
        MxF.AddEdge( 0,(i+1),odd[i].ff );
        sum+=odd[i].ff;
        F(j,0,eve.sz) {
            int x=odd[i].ss+eve[j].ss;
            if(!prime[x]) {
                MxF.AddEdge( i+1,(odd.sz+j+1),1e8 );
            }
        }
    }
    F(i,0,eve.sz) {
        MxF.AddEdge( (i+1+odd.sz),(N+1),eve[i].ff );
        sum+=eve[i].ff;
    }
    int x=MxF.dinitz();
    return sum-x;
}

int main() {
    seive();
    int n,m;
    S2(n,m);

    F(i,1,n+1) {
        int p,c,l;
        S3(p,c,l);
        A[l].PB( MP(p,c) );
    }
    int lo=1,hi=n;
    int ans=-1;

    while(lo<=hi) {
        int mid=(lo+hi)/2;
        int x=isok(mid);
        if(x>=m) {
            hi=mid-1;
            ans=mid;
        }
        else lo=mid+1;
    }
    cout<<ans<<endl;

    return 0;
}

///============= Thank You ===================///

/*

5 8
5 5 1
1 5 4
4 6 3
1 12 4
3 12 1

*/
