#include <algorithm>
#include <iostream>
#include <cmath>
#include <fstream>
#include <memory.h>
#include <vector>
#include <string>
#include <iomanip>
#include <cstdlib>
#include <set>
#include <map>
#include <queue>
#include <deque>

using namespace std;

typedef long long ll;
typedef long double ld;  

map<string, vector<string> > mp;

int ans = 0;

void dfs(string s, int cur) {
	if (cur > ans) ans = cur;
	for (int i = 0; i < mp[s].size(); ++i)
		dfs(mp[s][i], cur + 1);
}

string replace(string s) {
	for (int i = 0; i < s.size(); ++i)
		if (s[i] >= 'a' && s[i] <= 'z') s[i] = 'A' + (s[i] - 'a');
	return s;
}
                                                                  
int main() {                      
	int n;
	cin >> n;
	for (int i = 1; i <= n; ++i) {
		string name1, fake, name2;
		cin >> name1 >> fake >> name2;
		name1 = replace(name1), name2 = replace(name2);
		mp[name2].push_back(name1);
	}
	dfs("POLYCARP", 0);
	cout << ans + 1 << endl;	
	return 0;
}
                                                                           