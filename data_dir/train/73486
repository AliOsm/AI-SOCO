#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <hash_map>
#include <hash_set>
#include <vector>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iterator>
using namespace std;
#define mems(arr, val) memset(arr, val, sizeof(arr))
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define all(A) (A).begin(), A.end()
#define mp(a, b) make_pair(a, b)
typedef long long LL;

double dist(double x1, double x2, double y1, double y2)
{
	return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
}

int main()
{
#ifdef MY_SOL
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif
	int n;
	string s;
	cin>>n;
	getline(cin , s);
	getline(cin, s);
	int lastpos = 0;
	while(s[lastpos] == ' ')
	{
		lastpos++;
	}
	vector<string> a;
	for (int i = 0; i < s.size(); ++i)
	{
		if (s[i] == '.' || s[i] == '?' || s[i] == '!')
		{
			a.push_back(s.substr(lastpos, i - lastpos + 1));
			i++;
			while (s[i] == ' ')
			{
				i++;
			}

			lastpos = i;
		}
	}

	int cur = n;
	int ans = 0;
	for (int i = 0; i < a.size(); ++i)
	{
			int tmp = 1;
			if (cur == n) tmp = 0;
		if (a[i].size() + tmp <= cur)
		{

			cur -= a[i].size() + tmp;
		}
		else
		{
			if (a[i].size() > n)
			{
				cout<<"Impossible";
				return 0;
			}
			else
			{
				ans++;
				cur = n - a[i].size();
			}
		}
	}
	ans++;
	cout<<ans;
    return 0;
}