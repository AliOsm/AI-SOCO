// Besmellah

#include<bits/stdc++.h>
using namespace std;

const int MAXN = 100 * 1000 + 19;

int n, sz[MAXN], bg[MAXN];
bool mark[MAXN];
char ans[MAXN];
vector<int> g[MAXN];

void dfs(int v, int par = 0) {
	sz[v] = 1, bg[v] = -1;
	for (int u : g[v])
		if (u ^ par && !mark[u]) {
			dfs(u, v), sz[v] += sz[u];
			if (bg[v] == -1 || sz[u] > sz[bg[v]])
				bg[v] = u;
		}
}

void centroid(int v = 1, char C = 'A') {
	dfs(v);
	int nm = sz[v];
	while (bg[v] != -1 && sz[bg[v]] * 2 > nm)
		v = bg[v];
	ans[v] = C++;
	mark[v] = true;
	for (int u : g[v])
		if (!mark[u])
			centroid(u, C);
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1, u, v; i <= n - 1; i++)
		cin >> u >> v, g[u].push_back(v), g[v].push_back(u);
	centroid();
	for (int i = 1; i <= n; i++)
		cout << ans[i] << ' ';
	return 0;
}
