#include <bits/stdc++.h>
 
using namespace std;
typedef long long ll;
const int N = 1e5+10;

int main() {
	int n,a,b;
	cin>>n>>a>>b;
	vector<pair<int,int>> s;
	for(int x=0;x<n;x++){
		int ll,rr;
		cin>>ll>>rr;
		s.push_back({ll,rr});
	}
	int mx=0;
	for(int x=0;x<n;x++){
		for(int i=0;i<n;i++){
			if(i==x)continue;
			int l=max(s[x].first,s[i].first);
			int v=s[x].second + s[i].second;
			int q=s[x].first + s[i].first;
			int p=max(s[x].second,s[i].second);

			if(q<=a&&p<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}
			if(l<=a&&v<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}

			swap(s[i].first,s[i].second);

			l=max(s[x].first,s[i].first);
			v=s[x].second + s[i].second;
			q=s[x].first + s[i].first;
			p=max(s[x].second,s[i].second);
			
			if(q<=a&&p<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}
			if(l<=a&&v<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}

			swap(s[x].first,s[x].second);

			l=max(s[x].first,s[i].first);
			v=s[x].second + s[i].second;
			q=s[x].first + s[i].first;
			p=max(s[x].second,s[i].second);
			
			if(q<=a&&p<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}
			if(l<=a&&v<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}

			swap(s[i].first,s[i].second);

			l=max(s[x].first,s[i].first);
			v=s[x].second + s[i].second;
			q=s[x].first + s[i].first;
			p=max(s[x].second,s[i].second);
			
			if(q<=a&&p<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}
			if(l<=a&&v<=b){
				mx = max(mx,s[x].first*s[x].second + s[i].first *s[i].second);
			}

			swap(s[x].first,s[x].second);
		}
	}
	cout << mx << endl;
}