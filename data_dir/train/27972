#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

int n,m,k;
char a[55][55],d[55][55];
int vis[55][55],c=0,b=0;

void dfs(int i,int j)
{
	if(i<0||j<0||i>n-1||j>m-1)
	return ;
	if(a[i][j]!='.')return;
	if(vis[i][j])
	return ;
	vis[i][j]=1;
	c++;
	if(i==0||j==0||i==n-1||j==m-1)b=1;
	
	dfs(i+1,j);dfs(i,j+1);dfs(i-1,j);dfs(i,j-1);
}

void dfs1(int i,int j)
{
	if(i<0||j<0||i>n-1||j>m-1)
	return ;
	if(a[i][j]!='.')return;
	if(vis[i][j])
	return ;
	vis[i][j]=1;
	d[i][j]='*';
	
	
	dfs1(i+1,j);dfs1(i,j+1);dfs1(i-1,j);dfs1(i,j-1);
}

int main()
{ios_base::sync_with_stdio(false);

cin>>n>>m>>k;

rep(i,0,n-1)rep(j,0,m-1)cin>>a[i][j],d[i][j]=a[i][j];

vector<pair<int,pii> > v;
rep(i,0,n-1)rep(j,0,m-1)
{
	if(vis[i][j]==0)
	{
		c=0,b=0;
		dfs(i,j);
		if(b==0)v.pb(mp(c,mp(i,j)));
	}
}

sort(all(v));
rep(i,0,n-1)rep(j,0,m-1)vis[i][j]=0;
int kk=v.size()-k,ans=0;

rep(i,0,kk-1)
{
	ans+=v[i].ff;
	dfs1(v[i].ss.ff,v[i].ss.ss);
}

ol(ans);on;

rep(i,0,n-1)
{
	rep(j,0,m-1)
	{
		ol(d[i][j]);
	}
	on;
}


return 0;
}

