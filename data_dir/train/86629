/*######################################################
#########~~~~~####~~~~###~~##~~##~~##~~##~~##~~#########
#########~~##~~##~~##~~##~~~#~~##~~~#~~##~~##~~#########
#~~~~~~##~~~~~###~~~~~~##~~#~~~##~~#~~~##~~##~~##~~~~~~#
#########~~######~~##~~##~~##~~##~~##~~##~~##~~#########
#########~~######~~##~~##~~##~~##~~##~~###~~~~##########
######################################################*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define str string
#define rtn return
#define endl '\n'
#define f first
#define s second
#define sz(x) (int)(x).size()
#define pb push_back
#define db long double
#define Mod 1000000007
#define nu 100005
#define inf 2e18
#define eps 1e-15
#define pll pair <ll, ll>
#define vi vector<ll>
#define fill(a,v) memset(a,v,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define loop(i,a,b) for(ll i=a;i<b;i++)
#define loop1(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,b) for(ll i=0;i<b;i++)
#define pool(i,a,b) for(ll i=b-1;i>=a;i--)
#define per(i,a) for(ll i=(a-1);i>=0;i--)

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " = " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');
  cerr.write(names, comma - names) << " = " << arg1<<" |";
  __f(comma+1, args...);
}
#else
#define trace(...)
#endif

vi q[300005];
int t, n, qr;
int curAns;
vector<pll> one;
ll tim;
int modified[300005];

int main() {
  std::ios_base::sync_with_stdio(false);
  std::cin.tie(NULL);
  std::cout.tie(NULL);
  //start
  cin >> n >> qr;
  while (qr--) {
    ++tim;
    int type, in;
    cin >> type >> in;
    if (type == 1) {
      q[in].pb(in);
      one.pb({in, tim});
      curAns++;
    } else if (type == 2) {
      modified[in] = tim;
      curAns -= q[in].size();
      q[in].clear();
    } else {
      vi temp;
      while (t < in) {
        if (modified[one[t].f] < one[t].s) {
          modified[one[t].f] = one[t].s;
          --curAns;
          q[one[t].f].pop_back();
          temp.pb(one[t].f);
        }
        ++t;
      }
    }
    cout << curAns << endl;
  }
  rtn 0;
}
