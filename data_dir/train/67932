
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 200005;
const ll MOD = 1e9 + 7;
const double eps = 1e-9;

int n, a[N];
vector<pair<int, int> > neg;
vector<int> pos, z;

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif	
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d", a + i);
		if (!a[i]) z.push_back(i);
		else if (a[i] > 0) pos.push_back(i);
		else neg.push_back(make_pair(a[i],i));
	}
	sort(neg.begin(), neg.end());
	reverse(neg.begin(), neg.end());
	int op = 0;
	while (neg.size() >= 2) {
		printf("1 %d %d\n", neg[neg.size() - 2].second, neg.back().second);
		op++;
		pos.push_back(neg.back().second);
		neg.pop_back();
		neg.pop_back();
	}
	if (neg.size() && z.size()) {
		printf("1 %d %d\n", neg.back().second, z.back());
		op++;
		neg.pop_back();
	}
	else if (neg.size() && !z.size() && op < n-1) {
		printf("2 %d\n", neg.back().second);
		op++;
		neg.pop_back();
	}
	while (z.size() >= 2) {
		printf("1 %d %d\n", z.back(), z[z.size() - 2]);
		op++;
		z.pop_back();
	}
	if (z.size() && op < n-1) {
		printf("2 %d\n", z.back());
		op++;
		z.pop_back();
	}
	while (pos.size() >= 2) {
		printf("1 %d %d\n", pos.back(), pos[pos.size() - 2]);
		pos.pop_back();
	}
	return 0;
}