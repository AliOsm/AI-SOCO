#define _CRT_SECURE_NO_WARNINGS
#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

#ifdef _DEBUG
const int N = 600010;
#else
const int N = 600010;
#endif

const int M = 501;

const int inf = 1e9;

int n, m, a[N];
bool used[N];
string s[N];

bool check(string s1, string s2)
{
	if (s1.length() != s2.length()) return false;
	for (int i = 0; i < s1.length(); i++)
		if (s1[i] != '?' && s2[i] != s1[i]) return false;
	return true;
}

int main()

{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	cin >> n >> m;
	for (int i = 1; i <= n; i++) cin >> s[i];
	for (int i = 1; i <= m; i++) cin >> a[i];
	memset(used, false, sizeof(used));
	for (int i = 1; i <= m; i++) used[a[i]] = true;
	bool flag = true;
	string pattern = s[a[1]];
	for (int i = 2; i <= m; i++)
	{
		if (s[a[i]].length() != s[a[1]].length()) flag = false;
		for (int j = 0; j < s[a[i]].length(); j++)
			if (s[a[i]][j] != pattern[j]) pattern[j] = '?';
	}
	for (int i = 1; i <= n; i++)
		if (check(pattern, s[i]) != used[i])
		{
			flag = false;
		}
	if (flag)
	{
		cout << "Yes" << endl;
		cout << pattern;
	}
	else cout << "No";
	return 0;
}