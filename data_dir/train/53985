#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0
#define ll long long

const int N = 1001;

int n, dp[N][N], mod = 1e9 + 7;

int solve(int open, int closed){
    if(open > n || closed > n) return 0;
    if(open < 0 || closed < 0) return 0;
    if(open == 0 && closed == 0) return 1;
    if(closed > open) return 0;
    int &ret = dp[open][closed];
    if(ret != -1) return ret;
    return ret = (solve(open - 1, closed) + solve(open, closed - 1)) % mod;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    memset(dp, -1, sizeof dp);
    cin >> n;
    int ans = 0;
    for(int i = 1 ; i <= 2 * n ; i += 2)
        for(int open = 0 ; open <= i ; open++)
            ans = (ans + solve(open, i - open)) % mod;
    cout << ans << endl;
}
