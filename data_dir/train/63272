#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define s second
#define f first
#define mod int(1e9+7)
#define clr(i, j)   memset(i, j, sizeof i)
#define opt     ios_base::sync_with_stdio(NULL);cin.tie(NULL);cout.tie(NULL);
using namespace std;
typedef  long long ll;
typedef unsigned long long ull ;
typedef long double ld;
typedef vector<ll> vi;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
//--------------------------
ll vShift[70], nShift[70];
ll power(ll x, ll y)
{
    if(y == 0)
        return 1;
    if(y == 1)
        return x;
    ll temp = power(x, y/2);
    temp *= temp;
    if(y%2)
        temp *= x;
    return temp;
}
void sol(ll value, int lvl)
{
    if(lvl == 0)
    {
        printf("%d\n", 1);
        return ;
    }
    printf("%lld ", value);
    ll p = power(2, lvl);
    ll node = (value+vShift[lvl])% p;
    node += p;
    node += (nShift[lvl]), node %= p;
    node += p;
    node /= 2, p/= 2, lvl--;
    node -= vShift[lvl];
    node %= p;
    node += p;
    sol(node, lvl);
}
int main()
{
    clr(vShift, 0);
    clr(nShift, 0);
    int n;
    scanf("%d", &n);
    while(n--)
    {
        int t;
        scanf("%d", &t);
        ll x, k;
        if(t != 3)
        {
            scanf("%lld %lld", &x, &k);
            int level = log2(x);
            ll p = power(2, level);
            if(t == 1)
                vShift[level] += k, vShift[level] %= p;
            else
                nShift[level] += k, nShift[level] %= p;
        }
        else
        {
            scanf("%lld", &x);
            int level = log2(x);
            sol(x, level);
        }
    }
}
