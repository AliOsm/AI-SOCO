#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int,int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
using namespace std;
vector<vector<int > > g;
int a[100100];
int was[100100];
int root;
LL dfs(int v)
{
	was[v]=1;
		vector<pair<LL, int> > q;
		LL res=0;
        FOR(i,0,g[v].size())
        {
                int to=g[v][i];
                if (was[to]==0)
				{
					a[to]--;
					q.push_back(mp(dfs(to),to));
				}
		}
		sort(q.rbegin(),q.rend());
		int p=a[v];
		FOR(i,0,q.size())
		{
			int to=q[i].second;
			if (p>0)
			{
				res+=q[i].first;
				res+=2;
				p--;
			}
		}
		FOR(i,0,q.size())
		{
			int to=q[i].second;
			if (p>0)
			{
				int k=MIN(p,a[to]);
				res+=k+k;
				p-=k;
				a[to]-=k;
			}
		}
	a[v]=p;
	return res;
}
int main()
{
        int n;
        scanf("%d",&n);
        FOR(i,0,n)
                scanf("%d",&a[i]);
        g.resize(n);
        FOR(i,0,n-1)
        {
                int aa,bb;
                scanf("%d%d",&aa,&bb);
                aa--;
                bb--;
                g[aa].push_back(bb);
                g[bb].push_back(aa);
        }
        int root;
        cin>>root;
        root--;
       LL res=dfs(root);
        cout<<res<<endl;
        return 0;
}