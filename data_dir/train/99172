/*	 Hello World!	*/

#include <bits/stdc++.h>

#define pb push_back
#define pf push_front
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for( let(it,v.begin()) ; it != v.end() ; it++)
#define rtr(v,it) for( let(it,v.rbegin()) ; it != v.rend() ; it++)
#define rep1(i,n) for(int i=0; i<(int)n;i++)
#define rep2(i,a,b) for(int i=(int)a; i<=(int)b; i++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define LL long long int
#define PII pair<int,int>
#define VI vector<int>
#define inf INT_MAX

using namespace std;

void FastIO()
{
	ios_base::sync_with_stdio(0);
	cin.tie(NULL);
	cout.tie(NULL);
}

int foo(PII a, PII b)
{
	if(b.f<a.f && a.f<b.s || b.f<a.s && a.s<b.s) return 1;
	return 0;
}

int main()
{
	FastIO();
	int n,a,b,type;
	cin>>n;
	vector< vector< int > > path(101,vector< int >(101,0));
	vector< PII > V(101,PII());
	int cnt=0;
	rep1(i,n)
	{
		cin>>type>>a>>b;
		if(type==2)
		{
			if(path[a-1][b-1]) cout<<"YES"<<endl;
			else cout<<"NO"<<endl;
		}
		else
		{
			V[cnt++]=mp(a,b);
			for(int i=0;i<cnt-1;i++)
			{
				path[i][cnt-1]=foo(V[i],V[cnt-1]);
				path[cnt-1][i]=foo(V[cnt-1],V[i]);
			}
			for(int i=0;i<cnt;i++)
			{
				for(int j=0;j<cnt;j++)
				{
					for(int k=0;k<cnt;k++)
					{
						path[j][k] |= (path[j][i] & path[i][k]);
					}
				}
			}
		}
	}
	return 0;
}