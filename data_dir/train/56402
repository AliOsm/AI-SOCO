#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

map <string, int> mp;

void typedef2(string A, string B){
    int N=A.length(),i,plus=0,minus=0;
    
    REP(i,N) if(A[i] != '&') break; minus = i;
    REP(i,N) if(A[N-1-i] != '*') break; plus = i;
    
    string s = A.substr(minus,N-minus-plus);
    if(mp.find(s) == mp.end()){
        mp[B] = -1;
    } else {
        int ans = mp[s];
        REP(i,plus) if(ans != -1) ans++;
        REP(i,minus) if(ans != -1) ans--;
        mp[B] = ans;
    }
}

int typeof2(string A){
    int N=A.length(),i,plus=0,minus=0;
    
    REP(i,N) if(A[i] != '&') break; minus = i;
    REP(i,N) if(A[N-1-i] != '*') break; plus = i;
    
    string s = A.substr(minus,N-minus-plus);
    if(mp.find(s) == mp.end()){
        return -1;
    } else {
        int ans = mp[s];
        REP(i,plus) if(ans != -1) ans++;
        REP(i,minus) if(ans != -1) ans--;
        return ans;
    }
}

int main(void){
    int N,i,j;
    string S,A,B;
    
    mp["void"] = 0;
    mp["errtype"] = -1;
    
    cin >> N;
    REP(i,N){
        cin >> S;
        if(S == "typedef"){
            cin >> A >> B;
            typedef2(A,B);
        } else {
            cin >> A;
            int ans = typeof2(A);
            if(ans == -1){
                cout << "errtype" << endl;
            } else {
                string s = "void";
                REP(j,ans) s += '*';
                cout << s << endl;
            }
        }
    }
    
    return 0;
}
