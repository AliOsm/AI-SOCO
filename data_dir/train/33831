#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 10000000;
const int ALPHA = 2;

int V;
int trie[MAX][ALPHA];
int cnt[MAX];

int node() {
  REP(i, ALPHA) trie[V][i] = 0;
  return V++;
}

int insert(int n) {
  int t = 0;
  for (int i = 29; i >= 0; i--) {
    int c = ((n & (1 << i)) != 0 ? 1 : 0);
    if (trie[t][c] == 0) trie[t][c] = node();
    t = trie[t][c];
    cnt[t]++;
  }
  return t;
}

int query(int x) {
	int ans = 0;
	int t = 0;
	for(int i = 29; i >= 0; i--) {
		int cero = ((x & (1 << i)) != 0 ? 1 : 0);
		//printf("i = %d, cero = %d\n", i, cero);
		if(trie[t][cero] == 0) {
			//printf("x = %d, i = %d\n", x, i);
			return ans;
		}
		else if(cnt[trie[t][cero]] != (1 << (i))) {
			//printf("%d\n", cero);
			t = trie[t][cero];
		}
		else {
			int one = (cero == 0 ? 1 : 0);
			//printf("%d\n", one);
			ans ^= (1 << i);
			if(trie[t][one] == 0) {
				//printf("AAA\n");
				return ans;
			}
			else t = trie[t][one];
		}
	}
	//printf("FFF\n");
	return ans;
}

int main() {
	
	node();
	int n, m;
	scanf("%d %d", &n, &m);
	set<int> S;
	REP(i, n) {
		int a; scanf("%d", &a);
		if(S.count(a) == 0) insert(a);
		S.insert(a);
	}
	int acc = 0;
	REP(i, m) {
		int x; scanf("%d", &x); acc ^= x;
		printf("%d\n", query(acc));
	}
}