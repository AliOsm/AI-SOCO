 
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 101;
const ll MOD = 1e9 + 7;

int n, ind[N];
ll a[N];
set<pair<ll,int> > s;
vector<vector<int> > g;
bool vis[N];
vector<int> ans, v;

void dfs(int u) {
	if (ans.size()) return;
	vis[u] = 1;
	v.push_back(u);

	if (v.size() == n) {
		ans.swap(v);
		return;
	}

	for (int i = 0; i < g[u].size(); i++)
		if (!vis[g[u][i]]) 
			dfs(g[u][i]);
	v.pop_back();
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	
	scanf("%d", &n);
	g.resize(n);
	for (int i = 0; i < n; i++) {
		scanf("%lld", a + i);
		s.insert(make_pair(a[i],i));
	}

	for (int i = 0; i < n; i++) {
		if (auto it = s.lower_bound(make_pair(a[i] * 2,-1)); 2*a[i] > a[i] && it != s.end() && it->first == a[i]*2) {
			ind[it->second]++;
			g[i].push_back(it->second);
		}
		if (a[i] % 3 != 0) continue;
		if (auto it = s.lower_bound(make_pair(a[i] / 3, -1)); it != s.end() && it->first == a[i] / 3) {
			ind[it->second]++;
			g[i].push_back(it->second);
		}
	}

	for (int i = 0; i < n && !ans.size(); i++) {
		memset(vis, 0, sizeof vis);
		dfs(i);
	}

	for (int i = 0; i < n; i++)
		printf("%lld ", a[ans[i]]);
	puts("");
	return 0; 
}