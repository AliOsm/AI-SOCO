//~In The Name Of Allah~//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#include <math.h>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <string.h>
#include <sstream>
#include <fstream>
#include <functional>
#include <stack>
#include <utility> 
#include <set>
#include <list>
#include <queue>
#include <bitset>
#include <time.h>
#include <unordered_set>
#include <unordered_map>

using namespace std;

#define read freopen("in.txt", "r", stdin)
#define write freopen("out.txt", "w", stdout)
#define all(_) _.begin(), _.end()
#define rall(_) _.rbegin(), _.rend()
#define rep(i, j) for (int i = 0; i < j; i++)
#define Rep(i, j, k) for (int i = j; i < k; i++)
#define siz(_) (int)_.size()
#define ll long long
#define endl '\n'

const double PI = 2.0 * acos(0.0);
const int MOD = 1e9 + 7;
const int oo = MOD;

typedef pair<int, int> pii;

ll gcd(ll x, ll y) { return !y ? x : gcd(y, x%y); }

int main() {
	int n, ans = 0;
	cin >> n;
	vector<int> in(n), rnk(n + 1);
	rep(i, n)
		scanf("%d", &in[i]);
	stack<int> s;
	s.push(in[0]);
	Rep(i, 1, n) {
		while (!s.empty() && in[i] > s.top()) {
			rnk[in[i]] = max(rnk[in[i]], rnk[s.top()] + 1);
			s.pop();
		}
		if (!s.empty() && !rnk[in[i]])
			rnk[in[i]] = 1;
		if (!s.empty())
			ans = max(ans, rnk[in[i]]);
		s.push(in[i]);
	}
	cout << ans << endl;
	return 0;
}