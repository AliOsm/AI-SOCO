#include <bits/stdc++.h>
using namespace std;

struct pos {
	int x, y;

	bool operator==(pos other) const {
		return x == other.x && y == other.y;
	}
};

int n, m;
string ins, grid[55];

int dir[4] = {0, 1, 2, 3};
int dx[4] = { 0, 1, 0,-1};
int dy[4] = { 1, 0,-1, 0};

pos awal, tujuan;

bool check() {
	pos cur = awal;

	for (int i = 0; i < ins.size(); i++) {
		cur.x += dx[dir[ins[i] - '0']];
		cur.y += dy[dir[ins[i] - '0']];

		if (cur.x < 0 || cur.x >= n || cur.y < 0 || cur.y >= m || grid[cur.x][cur.y] == '#') {
			return false;
		}

		if (cur == tujuan) {
			return true;
		}
	}

	return false;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> grid[i];

		for (int j = 0; j < m; j++) {
			if (grid[i][j] == 'S') awal = {i, j};
			if (grid[i][j] == 'E') tujuan = {i, j};
		}
	}

	cin >> ins;

	int ans = 0;

	do {
		if (check()) ans++;
	} while (next_permutation(dir, dir + 4));

	cout << ans << '\n';

	return 0;
}