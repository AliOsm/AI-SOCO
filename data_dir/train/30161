//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
 
ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 
ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n, m;
ll arr[755], guesses[200005], DP[755][755];

ll dp(int i, int rem){
    if(i == n+1)    return 0;
    if(DP[i][rem] != -1)    return DP[i][rem];
    //dont remove ith element
    ll ans = max(0LL, dp(i+1, rem) - arr[i]);
    //remove ith element
    if(rem > 0)
        ans = min(ans, dp(i+1, rem-1));
    return DP[i][rem] = ans;
}


int main(){

    // ios_base::sync_with_stdio(0);

    scanf("%d%d", &n, &m);
    for(int i=1;i<=n;i++)
        scanf("%lld", &arr[i]);
    for(int i=1;i<=m;i++)
        scanf("%lld", &guesses[i]);

    //DP[i][j] = minimum value with which you can start at pos i, and reach
    //n without going below 0, and removing atmost j elements

    memset(DP, -1, sizeof(DP));
    for(int i=1;i<=m;i++){
        
        int ans = n, lo = 0, hi = n;
        while(lo <= hi){

            int mid = (lo + hi)/2;
            if(guesses[i] >= dp(1, mid)){
                ans = min(ans, mid);
                hi = mid-1;
            }
            else{
                lo = mid+1;
            }
        }

        printf("%d\n", ans);
    }

    return 0;
}





