//In the name of Allah

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int , int> pii;

const int N = 1e5+10;

vector <int> a , p;
int dp[N];

inline bool check(int m){
	for(int i = 0 ; i < p.size() ; i++){
		int pos = p[i];
		int x = -1;
		if(i)
			x = dp[i - 1];
		x++;
		if(a[x] < pos){
			if(pos - a[x] > m)
				return false;
			int mx = max(p[i] + m - (pos - a[x]) * 2 , p[i] + (m - (pos - a[x])) / 2);
			dp[i] = upper_bound(a.begin() , a.end() , max(mx , p[i])) - a.begin();
			dp[i]--;
		}
		else{
			dp[i] = upper_bound(a.begin() , a.end() , pos + m) - a.begin();
			dp[i]--;
		}
		if(dp[i] == a.size() - 1)
			return true;
	}
	return false;
}

int32_t main(){
	ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	string s;
	cin >> s;
	for(int i = 0 ; i < n ; i++){
		if(s[i] == '*')
			a.push_back(i);
		if(s[i] == 'P')
			p.push_back(i);
	}
	int l = -1 , h = 2 * n;
	while(h - l > 1){
		int m = (h + l) / 2;
		if(check(m))
			h = m;
		else
			l = m;
	}
	cout << h;
	return 0;
}
