#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

const int N = 1e5 + 7;

int n, k, T[N];
int pre[N], suf[N];

int main()
{
    _upgrade
    cin >> n >> k;
    for(int i = 1; i <= n; i++)
        cin >> T[i];
    if(k > 2)
    {
        cout << *max_element(T + 1, T + n + 1) << "\n";
        return 0;
    }
    if(k == 1)
    {
        cout << *min_element(T + 1, T + n + 1) << "\n";
        return 0;
    }
    pre[1] = T[1], suf[n] = T[n];
    for(int i = 2; i <= n; i++)
        pre[i] = min(T[i], pre[i - 1]);
    for(int i = n - 1; i; i--)
        suf[i] = min(suf[i + 1], T[i]);
    int ans = -1e9 - 7;
    for(int i = 1; i < n; i++)
        ans = max(ans, max(pre[i], suf[i + 1]));
    cout << ans << "\n";
	return 0;
}
