#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
using namespace std;
const int MAXN=1005;
const int MAXM=200005;
const int MAXQ=200005;
const int INF=0x3f3f3f3f;
struct query
{
    int l,r,s,t,id;
    bool operator < (const query &rhs)const
    {
        return l>rhs.l;
    }
}p[MAXQ];
int v[MAXM],u[MAXM],res[MAXQ],dp[MAXN][MAXN];
int main()
{
    int n,m,q;
    scanf("%d%d%d",&n,&m,&q);
    for(int i=1;i<=m;i++)
        scanf("%d%d",&v[i],&u[i]);
    for(int i=1;i<=q;i++)
    {
        scanf("%d%d%d%d",&p[i].l,&p[i].r,&p[i].s,&p[i].t);
        p[i].id=i;
    }
    memset(dp,INF,sizeof(dp));
    for(int i=1;i<=n;i++)dp[i][i]=0;
    sort(p+1,p+q+1);
    for(int i=m,j=1;i>=1;i--)
    {
        dp[u[i]][v[i]]=dp[v[i]][u[i]]=i;
        for(int j=1;j<=n;j++)
        {
            if(j!=u[i])dp[v[i]][j]=min(dp[u[i]][j],dp[v[i]][j]);
            if(j!=v[i])dp[u[i]][j]=min(dp[u[i]][j],dp[v[i]][j]);
        }
        while(j<=q && p[j].l>=i)
        {
            res[p[j].id]=(dp[p[j].s][p[j].t]<=p[j].r);
            j++;
        }
    }
    for(int i=1;i<=q;i++)
        printf("%s\n",(res[i] ? "Yes" : "No"));
    return 0;
}