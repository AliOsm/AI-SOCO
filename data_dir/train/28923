#include <bits/stdc++.h>

using namespace std;

const int maxn = 100005;

const int mod = 1e9 + 7;

typedef long long ll;

// 701 1264 274 1264
bool ok(ll mid, ll x, ll y, ll p, ll q, ll used_prev){

    ll ny = y  + q*mid;

    if( !ny )
        return false;

    //cout << "HERE" << endl;

    ll min_x = x;
    ll max_x = x + q*mid + used_prev;

    ll over_y = ny / q;
    ll target_x = p * over_y;

    max_x -= max_x % over_y;

    //cout << mid << " " << ny << " " << max_x << " " << target_x << " " << over_y << " " << used_prev << endl;

    if( max_x >= target_x && min_x <= target_x)
        return true;

    return false;


}

 ll x, y, p, q;

 bool check(ll ny, ll nx ){


    ll gc = __gcd(nx, ny);


    nx /= gc;
    ny /= gc;

    return (nx == p && ny == q);
 }
ll bruteforce(){

    for(int i = 0; i <= 10000; i++){



        for(int j = 0; j <= i; j++){

            if( y+i == 0 ) continue;


            if( check(y+i, x+j) )
                return i;

        }
    }

    return -1;

}
int main()
{

    ios::sync_with_stdio(0);
    srand (time(NULL));

    int t; cin >> t;

    while(t--){

      /*  x = rand() % 10000;
        y = rand() % 10000;
        p = rand() % 10000;
        q = rand() % 10000;

        q+=p;
        y+= x;

        int gc = __gcd(p,q);
        p /= gc;
        q /= gc;

        if( q == 0 ) q++;
        if( y == 0 ) y++;*/

        cin >> x >> y >> p >> q;


        if( p == q ){
            if( x != y ){
                cout << -1 << endl;
                continue;
            }

            if( y == 0) cout << 1 << endl;
            else cout << 0 << endl;
            continue;

        }

        ll ans = 0;

        if( y % q ){
            ans = q - (y%q);
            y += q - (y%q);
        }

        ll lo = 0, hi = 1000000000LL;
        ll initial_hi = hi;

        while(lo < hi){
            ll mid = (lo + hi + 1) >> 1;

            if( ok(mid, x, y, p, q, ans) )
                hi = mid-1;
            else
                lo = mid;

        }

        if( !ok(lo, x, y, p, q, ans) ) lo++;
        ll cur = q*lo + ans;

        if( lo > initial_hi)
            cout << -1 << endl;
        else
            cout << (lo*q) + ans << endl;

    }
    return 0;

}
