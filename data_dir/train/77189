
// In the name of God
#include <bits/stdc++.h>

using namespace std;
#define Size(x) ((int)(x).size())
#define pb push_back
typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;
const int INF = 1e9 + 10;
const ll BIG = (ll)1e18;
const int MN = 3e2 + 10;

int n , m ,k;
ll val[MN][MN] , pre[MN][MN] , dp[MN][MN];

int main()
{
	ios_base :: sync_with_stdio(false) ,cin.tie(0) , cout.tie(0);
	for(int i=0;i<MN;++i) fill(val[i] , val[i]+MN , BIG), val[i][i] = 0;
	cin >> n >> m >> k;
   	for(int i=0;i<m;++i){
		int l , r , c;cin>>l>>r>>c;--l;
		val[l][r] = min(val[l][r] , 1ll*c);
	}
	for(int i=0;i<=n;++i){
		ll cur = BIG;
		for(int j=0;j<=i;++j){
			cur = min(cur , val[j][i]);
			val[j][i] = cur;		
		}
	}
	for(int i=0;i<MN;++i) fill(pre[i] , pre[i]+MN , BIG) , pre[i][i] = 0;
	for(int sz=1;sz<MN;++sz)
		for(int l=0;l+sz<MN;++l){
			int r = l+sz;
			pre[l][r] = val[l][r];
			for(int i=l+1;i<r;++i)
				pre[l][r] = min(pre[l][r] , pre[l][i] + val[i][r]); 
		}
	for(int i=0;i<MN;++i) fill(dp[i] , dp[i]+MN , BIG) , dp[i][0] = 0;
	for(int i=0;i<n;++i)
		for(int j=1;j<=i+1;++j){
			dp[i+1][j] = min(dp[i][j] , pre[0][i+1]);
			for(int l=0;l<=i;++l) dp[i+1][j] = min(dp[i+1][j], dp[l][j-(i-l+1)] + pre[l][i+1]);
		}
	cout << (dp[n][k]>=BIG?-1:dp[n][k]) << endl;
	return 0;
}

