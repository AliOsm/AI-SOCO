#define _CRT_SECURE_NO_WARNINGS
#include <math.h>
#include <memory.h>
#include <stdio.h>
 
#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>
#pragma comment(linker, "/STACK:667177216")
#define ll long long
#define ull unsigned long long
#define INF 1000000007
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
#define mp make_pair
#define vI vector<int>
#define vvI vector<vector<int>>
#define vLL vector<LL>
#define vS vector<string>
#define fori(i, n) for (int(i) = 0; (i) < n; (i)++)
#define forn(it, from, to) for (int(it) = from; (it) < to; (it)++)
#define forI(tmp) for (auto(it) = (tmp).begin(); (it) != (tmp).end(); (it)++)
#define PI 3.14159265356
#define LD long double
#define sc(a) scanf("%d", &(a))
#define scLL(a) scanf("%I64d", &(a))
#define mems(a, val) memset(a, val, sizeof(a))
#define sz(a) (int)(a).size()
typedef long long LL;
using namespace std;
const LL MOD = 998244353;
const LL MAXN = 2 * 100000 + 100;
 
pair<LL, bool> get_best(vector<int> &a) {
  int maxi = 0;
  int mini = 0;
  int cur = 0;
  for(int i = 0; i < a.size(); ++i) {
    cur += a[i];
    maxi = max(maxi, cur);
    mini = min(mini, cur);
  }
 
  cur = 0;
  vector<int> maxiki, miniki;
    if (cur == maxi) maxiki.push_back(0);
    if (cur == mini) miniki.push_back(0);
  for(int i = 0; i < a.size(); ++i) {
    cur += a[i];
    if (cur == maxi) maxiki.push_back(i);
    if (cur == mini) miniki.push_back(i);
  }
 
  LL ans = maxi - mini + 1;
 
  if (ans == 2) return mp(2, false);
 
  if (maxi == 0 && mini == 0) return mp(1, false);
  if (maxiki.size() == 0) {
    if (mini < -1) return mp(ans, true);
    else return mp(ans, false);
  }
 
  if (miniki.size() == 0) {
    if (maxi > 1) return mp(ans, true);
    else return mp(ans, false);
  }
 
 
  if (miniki[0] > maxiki.back() || maxiki[0] > miniki.back()) return mp(ans, true);
    else return mp(ans, false);
}
 
int main() {
#ifdef ONLINE_JUDGE
  // freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
#endif
  ios::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
 
  int tt;
  cin >> tt;
  while (tt-- > 0) {
    string s;
    cin >> s;
    vector<int> a, b;
    for (int i = 0; i < s.size(); ++i) {
      if (s[i] == 'D') {
        b.push_back(1);
      }
      if (s[i] == 'A') {
        b.push_back(-1);
      }
      if (s[i] == 'W') {
        a.push_back(1);
      }
      if (s[i] == 'S') {
        a.push_back(-1);
      }
    }
 
    auto a1 = get_best(a);
    auto b1 = get_best(b);
 
    LL ans = 1e18;
    ans = min(ans, a1.first * b1.first);
    if (a1.second) {
          ans = min(ans, (a1.first - 1)* b1.first);
 
    }
        if (b1.second) {
          ans = min(ans, (a1.first)* (b1.first-1));
 
    }
    cout<<ans<<endl;
  }
 
  return 0;
}