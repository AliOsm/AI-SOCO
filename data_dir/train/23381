#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll N=100001;
void snum(ll &a){scanf("%lld",&a);}
void snum(ll &a, ll &b){scanf("%lld %lld",&a,&b);}
void snum(ll &a, ll &b, ll &c){scanf("%lld %lld %lld",&a,&b,&c);}
void snum(ll &a, ll &b, ll &c, ll &d){scanf("%lld %lld %lld %lld",&a,&b,&c,&d);}

const int K=1000100;

int fact[K+1];

void extSieve(){
	for( int i=2; i*i <= K; ++i ){
		if( fact[ i ] == 0 ){
			for( int j = i*i ; j <= K ; j+=i ) if( fact[j ] == 0) fact[ j ] = i;
		}
	}
	for( int i=2; i<=K; ++i ){
		if( fact[ i ] == 0 ){
			fact[ i ] = i;
		}
	}
}

vector<ll> fac;
vector<ll> cnt;

void factorize( int n ){
	fac.clear();
	cnt.clear();
	while( n > 1 ){
		int f = fact[ n ];
		int exp = 0;
		while( n % f == 0 ){
			n /= f;
			exp++;	
		}
		fac.push_back(f);
		cnt.push_back(exp);
	}
}

ll raiz(){
	ll num=1;
	for(ll i=0; i<fac.size(); i++){
		for(ll j=0; j<cnt[i]/2; j++){
			num*=fac[i];
		}
	}
	return num;
}

ll aum(){
	ll num=1;
	for(ll i=0; i<fac.size(); i++){
		for(ll j=0; j<cnt[i]; j++){
			num*=fac[i];
		}
		if(cnt[i]%2!=0){
			num*=fac[i];
		}
	}
	return num;
}

int main(){
	extSieve();
	ll n;
	snum(n);
	if(n==1){
		cout<<1<<" "<<0<<endl;
		return 0;
	}
	ll ans=0;
	factorize(n);
	ll mx=0;
	for(ll i=0; i<cnt.size(); i++){
		mx=max(mx,cnt[i]);
	}
	
	bool ok=true;
	for(ll i=0; i<cnt.size(); i++){
		if(mx!=cnt[i]){
			ok=false;
		}
	}
	ll com=1;
	while(com<mx){
		ans++;
		com*=2;
	}
	if(!(ok && mx==com)){
		ans++;
	}
	ll rep=1;
	for(ll i=0; i<fac.size(); i++){
		rep*=fac[i];
	}
	printf("%lld %lld\n",rep,ans);
	return 0;
}

