#include <cstdio>
#include <cstdlib>
#include <functional>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <iostream>
#include <string>
#include <sstream>
#include <cstring>

using namespace std;
typedef pair<int,int> pr;
typedef pair<pr,pr> prr;
typedef pair<int,pr> edge;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
#define char unsigned char

template <class T>
inline T sqr(T a){ return a*a; }

const bool DOUT = false;



int GOW[4][2] = { {0,1},{0,-1},{1,0},{-1,0}};
char GOWC[5] = "rldu";

ll PT[401][401];
const ll mod7 = 1000000007; 

void CalcTria()
{
    PT[0][0] = 1;
    for(int i=1;i<=400;++i)
    {
        PT[i][0] = 1;
        for(int j=1;j<=i;++j)
        {
            PT[i][j] = (PT[i-1][j-1]+PT[i-1][j])%mod7;
        }
    }
}

ull HASH[1001];
ull MOD[1001];
ull Pr = 53;
ull Mod = 1;

void precalc()
{
    MOD[0] = 1;
    for(int j=1;j<=1000;++j)
    {
        MOD[j] = (Pr*MOD[j-1])%Mod;
    }
}

void calchash(char *added)
{
    int i = 0;
    while(*added)
    {
        HASH[i] = ((i?HASH[i-1]:0) + (*added) * MOD[i] )%Mod;
        ++added;
        ++i;
    }
}

ull rethash(int a, int len)
{
    ull temp = Mod+(HASH[a+len-1]-(a?HASH[a-1]:0));
    temp %= Mod;

    temp *= MOD[100-a];
    return temp%Mod;
}


const bool Files = false;

ll bp(ll a, ll b)
{
    ll res = 1;
    while(b)
    {
        if(b&1){ res = res*a%mod7; }
        a = a*a%mod7;
        b>>=1;
    }
    return res;
}

ll gcd(ll a, ll b)
{
    if(a>b)swap(a,b);
    if(a==b || !a)return b;

    if(a&1)
    {
        if(b&1)
            return gcd(a,(b-a)>>1);
        return gcd(a,b>>1);
    }
    else if(b&1)
    {
        return gcd(a>>1,b);
    }

    return gcd(a>>1,b>>1)<<1;
}

set<int, greater<int> > val;
int a[1000001];
int closest[2000001];


int main()
{
    if(Files){ freopen("input.txt","r",stdin);freopen("output.txt","w",stdout); }
    int n;
    scanf("%d",&n);

    for(int i=0;i<n;++i)
    {
        scanf("%d",&a[i]);
        closest[ a[i]+1 ] = a[i];
    }
    for(int i=1;i<=2000000;++i)
    {
        closest[i] = max(closest[i-1],closest[i]);
    }

    int ans = 0;
    sort(a,a+n,greater<int>());
    
    for(int i=0;i<n;++i)
    {
        if(i && a[i-1]==a[i])continue;

        for(int j=2*a[i];j<=2000000;j+=a[i])
        {
            if(closest[j]>j-a[i])
            {
                ans = max(ans,closest[j]%a[i]);
            }
        }
    }

    printf("%d",ans);

    return 0; 
}