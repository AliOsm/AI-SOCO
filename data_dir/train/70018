#include <bits/stdc++.h>

using namespace std;
int third;
bool flag = true;
int second;
int first;
int dfs(int idx,vector<int>list[],int prev,int array[],int par[])
{
    int tot = array[idx];
    for(auto var : list[idx])
    {
        if(var == prev)continue;
        tot += dfs(var,list,idx,array,par);
    }
    if(!flag)return -1;
    if(tot == third)
    {
        flag = false;
        first = idx;
        list[idx].erase(remove(list[idx].begin(),list[idx].end(),par[idx]),list[idx].end());
        list[par[idx]].erase(remove(list[par[idx]].begin(),list[par[idx]].end(),idx),list[par[idx]].end());
    }
    //if(second > 0)cout << tot << " " << idx << " " << prev << "\n";
    return tot;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n;
    cin >> n;
    int array[n + 1];
    int par[n + 1];
    int tot = 0;
    vector<int>list[n + 1];
    int start = 0;
    for(int i = 1; i <= n; i++)
    {
        int idx;
        int temp;
        cin >> idx >> temp;
        par[i] = idx;
        if(idx == 0)
        {
            start = i;
        }
        else
        {
            list[i].push_back(idx);
            list[idx].push_back(i);
        }
        array[i] = temp;
        tot += temp;
    }
    if(tot % 3 != 0)
    {
        cout << "-1";
        return 0;
    }
    third = tot / 3;
    dfs(start,list,-1,array,par);
    flag = true;
    second = first;
    first = 0;
    dfs(start,list,-1,array,par);
    if(first > 0 && first != start && second != start)
    {
        cout << first << " " << second;
    }
    else cout << "-1";
}
