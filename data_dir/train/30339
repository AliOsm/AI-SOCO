#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
#define ll long long
#define ld long double
#define pii pair <int,int>
#define endl '\n'

//#pragma GCC optimize("O3")

using namespace std;

const int mod = 1e9 + 7;

vector <vector <int> > g;
vector <vector <int> > ss, tt;
int cnt = 0, s, t;
vector <pii> res;
int us[200005];

void dfs(int v) {
    us[v] = 1;
    for (auto to : g[v]) {
        //cerr << v << " " << to << endl;
        if (to == s) ss[cnt].pb(v);
        else if (to == t) tt[cnt].pb(v);
        else if (!us[to]) {
            res.pb({v, to});
            dfs(to);
        }
    }
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
  //  freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);
    int n,m;
    cin >> n >> m;
    g.resize(n + 1);
    ss.resize(n + 1);
    tt.resize(n + 1);
    for (int i = 0; i < m; i++) {
        int x,y;
        cin >> x >> y;
        x--;
        y--;
        g[x].pb(y);
        g[y].pb(x);
    }
    int ds, dt;
    cin >> s >> t >> ds >> dt;
    s--;
    t--;
    for (int i = 0; i < n; i++) {
        if (!us[i] && i != s && i != t) {
            dfs(i);
            cnt++;
        }
    }
    int kc = 0;
    for (int i = 0; i < cnt; i++) {
        //cout << ss[i].size() << " " << tt[i].size() << endl;
        if (!ss[i].size()) {
            res.pb({tt[i][0], t});
            dt--;
        } else if (!tt[i].size()) {
            res.pb({ss[i][0], s});
            ds--;
        } else kc++;
    }
    if (dt < 1 || ds < 1 || ds + dt < kc + 1) {
        cout << "No";
        return 0;
    }
    if (!kc) {
        res.pb({s, t});
    } else {
        int f = 0;
        for (int i = 0; i < cnt; i++) {
            if (ss[i].size() && tt[i].size()) {
                if (f) {
                    if (ds) {
                        res.pb({ss[i][0], s});
                        ds--;
                    } else {
                        res.pb({tt[i][0], t});
                        dt--;
                    }
                } else {
                    f = 1;
                    res.pb({ss[i][0], s});
                    res.pb({tt[i][0], t});
                    ds--;
                    dt--;
                }
            }
        }
    }
    cout << "Yes" << endl;
    for (auto x : res) cout << x.F + 1 << " " << x.S + 1 << endl;
    return 0;
}

