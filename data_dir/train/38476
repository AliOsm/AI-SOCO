#include <iostream>
#include <vector>
#include <string>
#include <cmath>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int, int> ii;

void sort_vi(vi & a) {
    sort(a.begin(), a.end());
}

void set_precision(int digits) {
    cout.precision(digits);
    cout.setf(ios::fixed);
}

template <class T = int>
T r() {
    T x;
    cin >> x;
    return x;
}

ll rl() {
    return r<ll>();
}

string rs() {
    return r<string>();
}

vi rvi(int n) {
    vi a(n, 0);
    for (int i = 0; i < n; ++i) a[i] = r();
    return a;
}

vi rsvi(int n) {
    vi a = rvi(n);
    sort_vi(a);
    return a;
}

ll gcd(ll a, ll b) {
    return (a == 0 ? b : gcd(b % a, a));
}

void yn(bool can) {
    cout << (can ? "YES" : "NO") << endl;
}

int f(int size, int need) {
    int delays = (size - 1) / need;
    return size + delays * 5;
}

int main() {
    int n = r(), k = r();
    string s = rs();
    
    int start = -1, end = -1;
    for (int i = 0; i < n; ++i) {
        if (s[i] == 'G') start = i;
        if (s[i] == 'T') end = i;
    }
    
    if (start > end) swap(start, end);
    
    bool can = true;
    
    int delta = end - start;
    can &= delta % k == 0;
    
    if (can) {
        for (int i = start; i <= end; i += k) {
            can &= s[i] != '#';
        }
    }
    
    yn(can);
    
    return 0;
}