#include <bits/stdc++.h>
#define ll long long

using namespace std;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
 ll n, f[200000][3], d[200000][3], z1, z2;
    string s;
    cin >> n >> s;
    f[0][0] = f[0][1] = f[0][2] = 1;

    if (s[0] == 'R')
        f[0][0] = 0;
    else if (s[0] == 'G')
        f[0][1] = 0;
    else
        f[0][2] = 0;

    for (int i = 1; i < n; i++)
        if (s[i] == 'R')
        {
            if (f[i - 1][1] < f[i - 1][2])
            {
                f[i][0] = f[i - 1][1];
                d[i][0] = 1;
            }
            else
            {
                f[i][0] = f[i - 1][2];
                d[i][0] = 2;
            }

            if (f[i - 1][0] < f[i - 1][2])
            {
                f[i][1] = f[i - 1][0] + 1;
                d[i][1] = 0;
            }
            else
            {
                f[i][1] = f[i - 1][2] + 1;
                d[i][1] = 2;
            }

            if (f[i - 1][0] < f[i - 1][1])
            {
                f[i][2] = f[i - 1][0] + 1;
                d[i][2] = 0;
            }
            else
            {
                f[i][2] = f[i - 1][1] + 1;
                d[i][2] = 1;
            }
        }
        else if (s[i] == 'G')
        {
            if (f[i - 1][1] < f[i - 1][2])
            {
                f[i][0] = f[i - 1][1] + 1;
                d[i][0] = 1;
            }
            else
            {
                f[i][0] = f[i - 1][2] + 1;
                d[i][0] = 2;
            }

            if (f[i - 1][0] < f[i - 1][2])
            {
                f[i][1] = f[i - 1][0];
                d[i][1] = 0;
            }
            else
            {
                f[i][1] = f[i - 1][2];
                d[i][1] = 2;
            }

            if (f[i - 1][0] < f[i - 1][1])
            {
                f[i][2] = f[i - 1][0] + 1;
                d[i][2] = 0;
            }
            else
            {
                f[i][2] = f[i - 1][1] + 1;
                d[i][2] = 1;
            }
        }
        else
        {
            if (f[i - 1][1] < f[i - 1][2])
            {
                f[i][0] = f[i - 1][1] + 1;
                d[i][0] = 1;
            }
            else
            {
                f[i][0] = f[i - 1][2] + 1;
                d[i][0] = 2;
            }

            if (f[i - 1][0] < f[i - 1][2])
            {
                f[i][1] = f[i - 1][0] + 1;
                d[i][1] = 0;
            }
            else
            {
                f[i][1] = f[i - 1][2] + 1;
                d[i][1] = 2;
            }

            if (f[i - 1][0] < f[i - 1][1])
            {
                f[i][2] = f[i - 1][0];
                d[i][2] = 0;
            }
            else
            {
                f[i][2] = f[i - 1][1];
                d[i][2] = 1;
            }
        }

    cout << min({f[n - 1][0], f[n - 1][1], f[n - 1][2]}) << endl;
    z1 = n - 1;
    vector <char> ans;

    if (f[n - 1][0] == min({f[n - 1][0], f[n - 1][1], f[n - 1][2]}))
        z2 = 0;
    else if (f[n - 1][1] == min({f[n - 1][0], f[n - 1][1], f[n - 1][2]}))
        z2 = 1;
    else
        z2 = 2;

    while (z1 >= 0)
    {
        if (z2 == 0)
            ans.push_back('R');
        else if (z2 == 1)
            ans.push_back('G');
        else
            ans.push_back('B');

        z2 = d[z1][z2];
        z1--;
    }

    reverse(ans.begin(), ans.end());

    for (auto x: ans)
        cout << x;
}
