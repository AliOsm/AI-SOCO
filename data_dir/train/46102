/*input
1000 6
-100 -200 -300 125 77 -4


*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> PII;
typedef pair<ll , ll> PLL;
typedef long double ld;

#define pb push_back
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
int mod = 1000000007;
#define PI 3.14159265
#define endl '\n'
#define debug(x) cout << #x << " = " << x << endl;
#define MAX 100001

template < typename T > T GCD(T a, T b)            { ll t; while(a) { t = a; a = b % a; b = t; } return b; }
template < typename T > string toString(T a)       { return to_string(a); }
template < typename T > void toInt(string s, T &x) { stringstream str(s); str >> x;}
inline int add(ll a, ll b) {a += b; if (a < 0) a += mod; return a;}
inline int sub(ll a, ll b) {a -= b; if (a < 0) a += mod; return a;}
inline int mul(ll a, ll b) {return (a * 1ll * b) % mod;}
inline int pwr(ll x, ll y) {
    int ans = 1 % mod;
    while (y) {
        if (y & 1) ans = mul(ans, x);
        x = mul(x, x);
        y >>= 1;
    }
    return ans;
}
inline int inv(int a) {return pwr(a, mod - 2);}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    ll H, n;
    cin >> H >> n;
    ll sum = 0;
    ll mn = 1e18, v, tempH = H, ind = 0;;
    vector <ll> vec;
    for (int i = 0; i < n; i++) {
        cin >> v;
        vec.pb(v);
        sum += v;
        if (sum < mn) {
            mn = sum;
            ind = i + 1;
        }
        tempH += v;
        if (tempH <= 0) {
            cout << i + 1 << endl;
            return 0;
        }
    }
    if (tempH >= H) {
        cout << -1 << endl;
        return 0;
    }
    sum = abs(sum);
    mn = abs(mn);
    ll ans = 0, temp = 0;
    ll low = 0, high = H;
    while (low <= high) {
        ll mid = (low + high) / 2;
        ld nmid = (ld)mid;
        ld nsum = (ld)sum;
        ld rem = H - (nmid * 1.0 * nsum);
        if (rem - mn <= 0) {
            ans = mid * n;
            temp = rem;
            high = mid - 1;
        }
        else {
            low = mid + 1;
        }
    }
    for (int i = 0; i < n; i++) {
        if (temp <= 0) {
            cout << ans << endl;
            return 0;
        }
        ans++;
        temp += vec[i];
    }
    cout << ans << endl;

    return 0;
}