#include <iostream>
#include <string>
#include <vector>

using namespace std;

bool go(string s, int k) {
  auto encode = [](int bit) {
    if (bit == 0) {
      return 'a';
    }
    if (bit == 1) {
      return 'A';
    }
    return '0';
  };
  auto decode = [](char ch) {
    if (ch >= 'a' && ch <= 'z') {
      return 1;
    }
    if (ch >= 'A' && ch <= 'Z') {
      return 2;
    }
    return 4;
  };
  int len = (int)s.size();
  vector<int> pref(len + 1);
  pref[0] = 0;
  for (int i = 0; i < len; ++i) {
    pref[i + 1] = pref[i] | decode(s[i]);
  }
  vector<int> suff(len + 1);
  suff[len] = 0;
  for (int i = len - 1; i >= 0; --i) {
    suff[i] = suff[i + 1] | decode(s[i]);
  }
  vector<int> bits(8);
  bits[0] = 0;
  for (int i = 1; i < 8; ++i) {
    bits[i] = bits[i & (i - 1)] + 1;
  }
  for (int i = 0; i < len - k; ++i) {
    int mask = pref[i] | suff[i + k];
    if (3 - bits[mask] == k) {
      for (int j = 0, d = 0; j < 3; ++j) {
        if ((mask >> j & 1) == 0) {
          s[i + d] = encode(j);
          ++d;
        }
      }
      cout << s << '\n';
      return true;
    }
  }
  return false;
}

int main() {
  int tt;
  cin >> tt;
  while (tt--) {
    string s;
    cin >> s;
    for (int i = 0; i <= 3; ++i) {
      if (go(s, i)) {
        break;
      }
    }
  }
}
