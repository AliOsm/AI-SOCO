#include <stdio.h>
#include <algorithm>
using namespace std;
struct node
{
    int id;
    long long num;
};
node a[100010];
bool cmp(const node &a,const node &b)
{
    if (a.num!=b.num) return a.num>b.num;
    return a.id<b.id;
}
int main()
{
    int n,k;
    while (scanf("%d%d",&n,&k)==2)
    {
        long long b;
        scanf("%I64d",&b);
        for (int i=0;i<n;i++)
        {
            scanf("%I64d",&a[i].num);
            a[i].id=i;
        }
        sort(a,a+n-1,cmp);
        int id=n-1;
        long long tsum=0;
        for (int i=0;i<k-1;i++)
            tsum+=a[i].num;
        for (int i=0;i<n-1;i++)
        {
            if (k-1==0)
            {
                if (a[i].num>b) id=min(a[i].id,id);
            }
            else
            {
                long long sum=tsum;
                if (a[k-2].num<a[i].num)
                {
                    sum-=a[i].num;
                    sum+=a[k-1].num;
                }
                else if (a[k-2].num==a[i].num&&a[k-2].id>=a[i].id)
                {
                    sum-=a[i].num;
                    sum+=a[k-1].num;
                }
                if (a[i].num>b-sum) id=min(a[i].id,id);
            }
        }
        printf("%d\n",id+1);
    }
    return 0;
}
