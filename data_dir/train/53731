//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
 
using namespace std;    
const int N = int(3e5) + 12, mod = int(1e9)  + 7; 
 
char s[N];
 
bool ok[20];
int n, id[N], last[3], a[N];
 
void solve(){
	scanf("%d\n%s", &n, s + 1);
	int mn = 0;
	stack <int> st[4];
	for(int i = 1; i <= n; i++){
		a[i] = s[i] - '0';
		if(st[1].empty() || a[st[1].top()] <= a[i]){
			st[1].push(i);
			id[i] = 1;
		}
		else{
			while(!st[1].empty() && a[st[1].top()] > a[i]){
				id[st[1].top()] = 2;
				st[1].pop();
			}
			st[1].push(i);
			id[i] = 1;
		}
	}
	int mx = 10;
	for(int i = 1; i <= n; i++){
	    if(id[i] == 2) mx = min(mx, a[i]);
	    if(a[i] > mx) id[i] = 2;
	}
	last[1] = last[2] = -1;
	for(int i = 1; i <= n; i++){
		int c = s[i] - '0';
		if(last[id[i]] > c){
			puts("-");
			return;
		}
		last[id[i]] = c;
	} 
	if(last[2] == -1) last[2] = mod;
	if(last[2] < last[1]){
		puts("-");
		return;
	}
	for(int i = 1; i <= n; i++){
		printf("%d", id[i]);
	}
	printf("\n");
}
 
int main () {
	int T;
	scanf("%d", &T);
	while(T--){
		solve();
	}
 
return 0;
}
