#include<bits/stdc++.h>
using namespace std;
#define N 205
int a[N],p[N];
int numSet;
int findSet(int i){
    return (a[i]==i)?i:(a[i]=findSet(a[i]));
}
bool isSameSet(int i,int j){
    return findSet(i)==findSet(j);
}
void unionSet(int i,int j){
    if(!isSameSet(i,j)){
        int x=findSet(i);
        int y=findSet(j);
        if(p[x]>p[y])a[y]=x;
        else{
            a[x]=y;
            if(p[x]==p[y])p[y]++;
        }
    }
}
int main(){
    int n,m,i,j,k,lang=1,res=0;
    scanf("%d %d",&n,&m);
    for(i=1;i<=n+m;i++)a[i]=i;
    for(i=1;i<=n;i++){
        scanf("%d",&k);
        for(j=1;j<=k;j++){
            scanf("%d",&lang);
            unionSet(i,lang+n);
        }
    }
    for(i=1;i<n;i++){
        if(!isSameSet(i,lang+n)){
            res++;
            unionSet(i,lang+n);
        }
        if(!isSameSet(i,i+1)){
            res++;
            unionSet(i+1,lang+n);
        }
    }
    printf("%d\n",res);
    return 0;
}
