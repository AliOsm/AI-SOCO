#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PI;
priority_queue<int,vector<int>,greater<int> > pq[500010];
priority_queue<PI,vector<PI>,greater<PI> > rootPQ;
int subRoot,dep[500010],tmpIdx[500010],sz;
vector<int> g[500010];
void dfs(int u,int fa){
	int ch=0;
	for(int v:g[u]){
		if(v==1 || v==fa) continue;
		ch++;
		dep[v]=dep[u]+1;
		dfs(v,u);
	}
	if(!ch) pq[subRoot].push(dep[u]);
}
int main(){
	int n,u,v;
	scanf("%d",&n);
	for(int i=1;i<n;i++){
		scanf("%d%d",&u,&v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for(int v:g[1]){
		subRoot=v;
		dep[v]=1;
		dfs(v,1);
		rootPQ.push(PI(pq[v].top(),v));
		pq[v].pop();
	}
	int ans=0;
	for(int i=1;i<=n;i++){
		sz=0;
		while(!rootPQ.empty() && rootPQ.top().first<=i){
			ans=i;
			tmpIdx[sz++]=rootPQ.top().second;
			rootPQ.pop();
		}
		for(int j=0;j<sz;j++)
			if(!pq[tmpIdx[j]].empty()){
				rootPQ.push(PI(pq[tmpIdx[j]].top(),tmpIdx[j]));
				pq[tmpIdx[j]].pop();
			}
	}
	printf("%d\n",ans);
	return 0;
}