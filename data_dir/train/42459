#include <string.h>
#include <assert.h>
#include <cassert>
#include <unordered_map>

#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
#include <cassert>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair
#define N 1000000

using namespace std;

int v[100000];
int sol(int n) {
    for(int i = 1; i <=n; ++i)v[i] = 0;
    int id = 1;
    printf("=== n = %d\n",n);
    for(int i = 1; i <=n; ++i) {
        for(int j = i+1; j <=n; ++j) {
            if((j-i)>1&&(n%(j-i))==0&&v[j]>0){
                v[i] = v[j];
            }
        }
        if(v[i]==0) {
            printf("i = %d\n",i);
            v[i]=id++;
        }
        for(int j = i+1; j <=n; ++j) {
            if((j-i)>1&&(n%(j-i))==0){
                v[j] = v[i];
                printf("j = %d\n",j);
            }
        }

    }
    printf("n = %d ans = %d\n",n,id-1);
    return id-1;
}
ll sol2(ll n){
    //cin>>n;
    ll ans = n;
    for(ll i = 2; i <=n/i; ++i) {
        if(n%i==0) {
            return i;
        }
    }
    return ans;
}


int main() {
  //  int i = 21;
   //     sol(i);
//    for(int i = 1; i <=50; ++i) {
       // sol(i);
//                printf("i = %d sol %d %d\n",i,sol2(i),sol(i));
 //       assert(sol2(i) == sol(i));
 //   }

    ll n;
    cin>>n;
    int ft = 0;
    ll ans = n;
    for(ll i = 2; i <=n/i; ++i) {
        if(n%i==0) {
            ans = i;
            ft++;
            while(n%i==0) {
                n/=i;
            }
        }
    }
    if(n>1) {
        ft++;
    }
    if(ft==0) {
        cout<<n<<endl;
    }
    else if(ft==1) {
        cout<<ans<<endl;
    }
    else {
        cout<<1<<endl;
    }
}