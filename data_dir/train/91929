//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
typedef long long ll;
const double pi = acos(-1);
const int MOD = 1e9 + 7;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const double eps = 1e-9;
using namespace std;
int a[MAXN], b[MAXN];
priority_queue<pll,vector<pll>,greater<pll> > pq;

int main()
{
    ll n, r, avg;
    nl(n), nl(r), nl(avg);
    ll sum = 0;
    for (int i = 0; i < n; i++)
    {
        nl(a[i]), nl(b[i]);
        if (a[i] < r)
            pq.push({b[i], a[i]});
        sum += a[i];
    }
    ll ans = 0;
    while (sum < n * avg)
    {
        pll f1 = pq.top(); pq.pop();
        if (pq.empty())
        {
            ans += (n * avg - sum) * f1.fi;
            break;
        }
        if (sum + (r - f1.se) > n * avg)
        {
            ans += (n * avg - sum) * f1.fi;
            break;
        }
        else
        {
            sum += (r - f1.se);
            ans += (r - f1.se) * f1.fi;
        }
    }
    prl(ans);
    return 0;
}
