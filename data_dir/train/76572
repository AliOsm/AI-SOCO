#include <iostream>
#include <complex>
#include <vector>
#include <sstream>
#include <string>
#include <math.h>
#include <iomanip>
#include <algorithm>
#include <map>
#include <set>

using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	vector<pair<int, int>> m(3);
	for (int i = 0; i < 3; ++i)
		cin >> m[i].first >> m[i].second;
	sort(m.begin(), m.end());
	int ans = abs(m[0].first - m[1].first) + abs(m[0].second - m[1].second) + 1;
	int a = max(m[0].second, m[1].second);
	int b = min(m[0].second, m[1].second);
	if (b <= m[2].second && m[2].second <= a)
		ans += abs(m[1].first - m[2].first);
	else
		ans += min(abs(a - m[2].second), abs(b - m[2].second)) + abs(m[1].first - m[2].first);
	cout << ans << '\n';
	for (int i = 0; i < abs(m[0].first - m[1].first); ++i)
		cout << m[0].first + i << ' ' << m[0].second << '\n';
	for (int i = b; i <= a; ++i)
		cout << m[1].first << ' ' << i << '\n';
	if (b <= m[2].second && m[2].second <= a)
		for (int i = 1; i <= abs(m[2].first - m[1].first); ++i)
			cout << m[1].first + i << ' ' << m[2].second << '\n';
	else {
		int k = a;
		if (abs(b - m[2].second) < abs(a - m[2].second))
			k = b;
		for (int i = 1; i <= abs(m[2].first - m[1].first); ++i)
			cout << m[1].first + i << ' ' << k << '\n';
		for (int i = min(k, m[2].second); i <= max(k, m[2].second); ++i)
			if (i != k) {
				cout << m[2].first << ' ' << i << '\n';
			}
	}
	return 0;
}