#include <bits/stdc++.h>
#define x first
#define y second
using namespace std;
const int sz=1e3+2;
pair<int,int> a[sz][sz];
int x;
int n;
bool visited[sz][sz][2];
bool my;
pair<long long,long long> dp[sz][sz][2];

pair<int,int> calc(){
    int n2=0,n5=0;
    while(x&&(x&1)==0){
        n2++;
        x>>=1;
    }
    while(x&&x%5==0){
        n5++;
        x/=5;
    }
    return make_pair(n2,n5);
}

bool valid(int i,int j){return i>=0&&j>=0&&i<n&&j<n;}

pair<long long,long long> solve(int r,int c,bool t){
    pair<long long,long long> &ret=dp[r][c][t];
    if(visited[r][c][t]) return ret;
    visited[r][c][t]=1;
    if(r==0&&c==0) return ret=a[0][0];
    ret=a[r][c];
    pair<long long,long long> choice1,choice2;
    choice1.x=choice1.y=choice2.x=choice2.y=1e13;
    if(valid(r-1,c)){
        choice1=solve(r-1,c,t);
        choice1.x+=ret.x;
        choice1.y+=ret.y;
    }
    if(valid(r,c-1)){
        choice2=solve(r,c-1,t);
        choice2.x+=ret.x;
        choice2.y+=ret.y;
    }
    int mn1,mx1,mn2,mx2;
    mn1=min(choice1.x,choice1.y);
    mn2=min(choice2.x,choice2.y);
    mx1=max(choice1.x,choice1.y);
    mx2=max(choice2.x,choice2.y);
    if(!t){
        if(choice1.x<choice2.x) return ret=choice1;
        else if(choice2.x<choice1.x) return ret=choice2;
        else if(choice1.y<choice2.y) return ret=choice1;
        return ret=choice2;
    }
    if(choice1.y<choice2.y) return ret=choice1;
    else if(choice2.y<choice1.y) return ret=choice2;
    else if(choice1.x<choice2.x) return ret=choice1;
    return ret=choice2;

}

vector<char> ans;
void print_sol(int r,int c,pair<long long,long long> have){
    if(r==0&&c==0) return;
    pair<long long,long long> tmp;
    for(int i=0;i<2;i++){
        int nr=r,nc=c;
        if(!i) nr--;
        else nc--;
        if(valid(nr,nc)){
            tmp.x=a[r][c].x+dp[nr][nc][my].x;
            tmp.y=a[r][c].y+dp[nr][nc][my].y;
            if(tmp.x==have.x&&tmp.y==have.y){
                have.x-=a[r][c].x;
                have.y-=a[r][c].y;
                print_sol(nr,nc,have);
                ans.push_back(!i?'D':'R');
                return;
            }
        }
    }
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    scanf("%d",&n);
    bool z=0;
    pair<int,int> pos;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            scanf("%d",&x);
            a[i][j]=calc();
            if(!x){
                z=1;
                pos=make_pair(i,j);
            }
        }
    }
    auto choice1=solve(n-1,n-1,0);
    auto choice2=solve(n-1,n-1,1);
    auto ans1=min(choice1.x,choice1.y);
    auto ans2=min(choice2.x,choice2.y);
    auto ANS=min(ans1,ans2);
    my=ans1>ans2;
    if(z&&ANS>1){
        puts("1");
        for(int i=0;i<pos.x;i++) printf("D");
        for(int i=0;i<pos.y;i++) printf("R");
        for(int i=pos.x;i<n-1;i++) printf("D");
        for(int i=pos.y;i<n-1;i++) printf("R");
        return 0;
    }
    printf("%I64d\n",ANS);
    print_sol(n-1,n-1,dp[n-1][n-1][my]);
    for(auto u:ans) printf("%c",u);
    /*puts("");
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++) printf("%-5I64d %-5I64d || ",dp[i][j].x,dp[i][j].y); puts("");
    }*/
    return 0;
}
