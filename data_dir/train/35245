#include <bits/stdc++.h>
#include <ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define oo       1e9
#define ll       long long
#define sc(x)    scanf("%d",&x)
#define sz(x)    (int)x.size()
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()
#define F        first
#define S        second
#define pi       acos(-1)
#define EPS      1e-12

int n;
int a[111];
int dp[101][1<<17];
int masks[60];
int prime[20],id;

bool isP(int x){
  for(int i=2;i<x;i++)
    if(x%i==0)return 0;
  return 1;
}

void init(){
  for(int i=2;i<60;i++)
    if(isP(i))prime[id++]=i;
  for(int i=1;i<60;i++){
    int msk=0;
    for(int j=0;j<17;j++)
      if(i%prime[j]==0)msk|=(1<<j);
    masks[i]=msk;
  }
}

int solve(int i,int msk){
  if(i==n)return 0;
  int &ret=dp[i][msk];
  if(~ret)return ret;
  ret=oo;
  for(int j=1;j<60;j++){
    if((msk&masks[j])!=0)continue;
    ret=min(ret,solve(i+1,msk|masks[j])+abs(a[i]-j));
  }
  return ret;
}

void buildAns(int i,int msk){
  if(i==n)return;
  int &ret=dp[i][msk];
  for(int j=1;j<60;j++){
    if((msk&masks[j])!=0)continue;
    if(ret==solve(i+1,msk|masks[j])+abs(a[i]-j)){
      printf("%d ",j);
      buildAns(i+1,msk|masks[j]);
      return;
    }
  }
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r", stdin);
  //freopen("output.txt", "w", stdout);
#endif
  init();
  sc(n);
  for(int i=0;i<n;i++)
    sc(a[i]);
  memset(dp,-1,sizeof dp);
  solve(0,0);
  buildAns(0,0);
}
