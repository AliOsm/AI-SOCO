# include <bits/stdc++.h>
#pragma GCC optimize("Ofast")

# define FILE
using namespace std;

const int P = 31;
const int mod = 1e9+7;

string s;
int n, h1[5050], h2[5050], p[5050];
long long cnt[5050];
int dp[5050][5050];

int binpow( int a, int b ){
	if( b == 0 )
		return 1;
	if( b&1 ){
		int x = binpow(a,b/2);
		return 1ll*x*x%mod*a%mod;
	}
	else{
		int x = binpow( a,b/2 );
		return 1ll*x*x%mod;
	}
}
int getB( int j, int i ){
	int l = j, r = i + j - 1;
	int x = h1[r];
	if( l )
		x = (x-h1[l-1]+mod)%mod;
	x = 1ll*x*p[n-l-1] % mod;
	return x;
}
int getE( int j, int i ){
	int l = j, r = i + j - 1;
	int x = h2[l];
	if( r != n-1 )
		x = (x-h2[r+1]+mod)%mod;
	x = 1ll*x*p[r] % mod;
	return x;
}

int main(){

	# ifdef FILEs
		freopen( "input.txt", "r", stdin );
		freopen( "output.txt", "w", stdout );
	# endif
	ios_base::sync_with_stdio(false);
	cin >> s;
	p[0] = 1;
	n = s.size();
	for( int i = 1; i < n; i ++ ){
		p[i] = 1ll*p[i-1]*P%mod;
	}
	for( int i = 0; i < n; i ++ ){
		if( i )
			h1[i] = h1[i-1];
		h1[i] = (h1[i] + 1ll*(s[i]-'a'+1)*p[i])%mod;
	}
	for( int i = n-1; i >= 0; i -- ){
		if( i != n-1 )
			h2[i] = h2[i+1];
		h2[i] = (h2[i] + 1ll*(s[i]-'a'+1)*p[n-i-1])%mod;
	}
	for( int i = 0; i < n; i ++ ){
		dp[1][i] = 1;
	}
	for( int i = 2; i <= n; i ++ ){
		for( int j = 0; j < n-i+1; j ++ ){
			if( getB( j,i ) == getE(j,i) ){
				dp[i][j] = 1;
			}
		}
	}
	for( int i = 2; i <= n; i ++ ){
		for( int j = 0; j < n-i+1; j ++ ){
			int x = getB( j,i/2 );
			int y = getB( j+(i+1)/2,i/2 );
			if( x == y && dp[i/2][j] > 0 ){
				dp[i][j] = dp[i/2][j] + 1;
			}
		}
	}
	for( int i = 1; i <= n; i ++ ){
		for( int j = 0; j < n-i+1; j ++ ){
			cnt[dp[i][j]]++;
		}
	}
	for( int i = n; i >= 1; i -- ){
		cnt[i] += cnt[i+1];
	}
	for( int i = 1; i <= n; i ++ ){
		cout << cnt[i] << ' ';
	}
	return 0;
}