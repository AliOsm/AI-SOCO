#include <bits/stdc++.h>
using namespace std;

int n, x;
typedef map<int, multiset<int>> cmap;
cmap cma[2][2];

int nc(int s)
{
    int v = 0;
    for (int cx = x, i = s; ; i = !i, v++) {
        cmap &cm = cma[s][i];
        int bm = 0;
        cmap::iterator bit;
        for (auto it = cm.begin(); it != cm.upper_bound(cx); it++)
            if (*it->second.rbegin() > bm)
                bm = *it->second.rbegin(), bit = it;
        if (bm == 0)
            break;
        else {
            cx += bm;
            bit->second.erase((++bit->second.rbegin()).base());
            if (bit->second.empty())
                cm.erase(bit);
        }
    }
    return v;
}

int main()
{
    scanf("%d %d", &n, &x);
    for (int i = 0; i < n; i++) {
        int t, h, m;
        scanf("%d %d %d", &t, &h, &m);
        cma[0][t][h].insert(m);
        cma[1][t][h].insert(m);
    }
    printf("%d", max(nc(0), nc(1)));
}