#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
const int mod = 1000000007;

int main() {
    ios::sync_with_stdio(false);
    int t, n, m, a[12][2019] = {};
    cin >> t;
    while (t--) {
        cin >> n >> m;
        vector<pair<int, pii>> b;
        for (int i = 0; i < n; i++) for (int j = 0; j < m; j++) cin >> a[i][j], b.push_back({a[i][j], {i, j}});
        sort(b.begin(), b.end()); reverse(b.begin(), b.end());
        int z = 0;
        if (n <= 3 || m == 1) {
            for (int i = 0; i < n; i++) z += b[i].first;
        } else {
            for (int i = 0; i < 256; i++) if (__builtin_popcount(i) == 4) {
                vector<int> c;
                for (int j = 0; j < 8; j++) if (i & (1 << j)) c.push_back(j);
                set<int> s, t;
                map<int, int> u;
                int v = 0;
                for (int j = 0; j < 4; j++) t.insert(b[c[j]].second.first), s.insert(b[c[j]].second.second), u[b[c[j]].second.second]++, v += b[c[j]].first;
                int r = 0;
                for (auto j : u) r = max(r, j.second);
                //cout << s.size() << ' ' << t.size() << ' ' << r << ' ' << v << '\n';
                bool g = 0;
                if (s.size() == 2 && t.size() == 3 && r == 2) {
                    int d0 = -1, d1 = -1, e0 = -1, e1 = -1;
                    for (int j = 0; j < 4; j++) {
                        if (b[c[j]].second.second == *s.begin()) {
                            if (d0 == -1) d0 = b[c[j]].second.first;
                            else d1 = b[c[j]].second.first;
                        } else {
                            if (e0 == -1) e0 = b[c[j]].second.first;
                            else e1 = b[c[j]].second.first;
                        }
                    }
                    int f0 = abs(d0 - d1), f1 = abs(e0 - e1);
                    if (f0 % 2 != f1 % 2) g = 1;
                }
                if (g) continue;
                z = max(z, v);
            }
        }
        cout << z << '\n';
    }
}
