#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(1e6) + 10, mod = int(1e9)  + 7; 

ll f[25][N + 10];
int lp[N + 10];

int main () {
	f[0][0] = 1;
	for(int k = 1; k <= 23; k++){
		f[k][0] = 2;
	}
	for(int i = 1; i <= N; i++){
		f[0][i] = 1;
		for(int k = 1; k <= 23; k++){
			f[k][i] = (f[k - 1][i] + f[k][i - 1]);
			if(f[k][i] >= mod) f[k][i] -= mod;
		}
	}
	for(int i = 2; i <= N; i += 2) lp[i] = 2;
	for(int i = 3; i <= 1000; i += 2) if(!lp[i]){
		lp[i] = i;
		for(int j = i * i; j <= N; j += (i + i)){
			lp[j] = i;
		}
	}
	for(int i = 2; i <= N; i++){
		if(!lp[i]) lp[i] = i;
	}
	int t,n,r,p,res;
	scanf("%d",&t);
	while(t--){
		scanf("%d%d",&r,&n);
		ll ans = 1;
		while(n > 1){
			p = lp[n];
			res = 0;
			while(n % p == 0){
				n /= p;
				res++;
			}
			ans = ans * f[res][r] % mod;
		}
		printf("%lld\n", ans);
		
	}
	



return 0;
}