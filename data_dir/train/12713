#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<int>v[1000001];
int n,a[1000001],val[1000001],ans[1000001];
int dfs(int id,int p){
	if(a[id]==5) return val[id];
	vector<int>g;
	for(auto i:v[id]){
		if(i!=p){
			g.push_back(dfs(i,id));
		}
	}
	if(a[id]==4) {val[id]=1-g[0];}
	else if(a[id]==3) {val[id]=g[0]^g[1];}
	else if(a[id]==2) {val[id]=g[0]|g[1];}
	else {val[id]=g[0]&g[1];}
	return val[id];
}
int temp[2];
void f(int id){
	if(a[id]==5){
		ans[id]=temp[1-val[id]];
		return ;
	}
	else if(a[id]==4){
		swap(temp[0],temp[1]);
		f(v[id][0]);
		swap(temp[0],temp[1]);
		return;
	}
	int x=v[id][0],y=v[id][1];
	int temp_hold[]={temp[0],temp[1]};
	if(a[id]==3){
		int flag[]={temp[0^val[y]],temp[1^val[y]]};
		temp[0]=flag[0];
		temp[1]=flag[1];
		f(x);
		swap(x,y);
		flag[0]=temp_hold[0^val[y]];
		flag[1]=temp_hold[1^val[y]];
		temp[0]=flag[0];
		temp[1]=flag[1];
		f(x);
	}
	else if(a[id]==2){
		int flag[]={temp[0|val[y]],temp[1|val[y]]};
		temp[0]=flag[0];
		temp[1]=flag[1];
		f(x);
		swap(x,y);
		flag[0]=temp_hold[0|val[y]];
		flag[1]=temp_hold[1|val[y]];
		temp[0]=flag[0];
		temp[1]=flag[1];
		f(x);
	}
	else {
		int flag[]={temp[0&val[y]],temp[1&val[y]]};
		temp[0]=flag[0];
		temp[1]=flag[1];
		f(x);
		swap(x,y);
		flag[0]=temp_hold[0&val[y]];
		flag[1]=temp_hold[1&val[y]];
		temp[0]=flag[0];
		temp[1]=flag[1];
		f(x);
	}
	temp[0]=temp_hold[0];
	temp[1]=temp_hold[1];
}
int main(){
	ios_base::sync_with_stdio(0);
	cin>>n;
	string s;
	for (int i = 0; i < n; ++i)
	{
		cin>>s;
		if(s=="AND") a[i+1]=1;
		if(s=="OR") a[i+1]=2;
		if(s=="XOR") a[i+1]=3;
		if(s=="NOT") a[i+1]=4;
		if(s=="IN") a[i+1]=5;
		if(s=="AND" or s=="OR" or s=="XOR"){
			int x,y;
			cin>>x>>y;
			v[i+1].push_back(x);
			v[i+1].push_back(y);
		}
		else if(s=="NOT"){
			int x;
			cin>>x;
			v[i+1].push_back(x);
		}
		else if(s=="IN"){
			int x;
			cin>>x;
			val[i+1]=x;
		}
	}
	dfs(1,-1);
	temp[0]=0;
	temp[1]=1;
	f(1);
	for (int i = 1; i < n+1; ++i)
	{
		if(a[i]==5){
			cout<<ans[i];
		}
	}
	cout<<endl;
	return 0;
}