#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
vector<vector<int> > g;
int inuse[100100];
int E[200100][2];
vector<int> a,b;
vector<int> ch;
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif
	int n,m,h,t;
	cin>>n>>m>>h>>t;
	g.resize(n);
	int sz=0;
	FOR(i,0,m)
	{
		int v1,v2;
		scanf("%d%d",&v1,&v2);
		v1--; v2--;
		E[sz][0]=v1;
		E[sz++][1]=v2;
		E[sz][0]=v2;
		E[sz++][1]=v1;
		g[v2].push_back(v1);
		g[v1].push_back(v2);
	}
	bool f=false;
	FOR(it,0,m+m)
	{
		int u=E[it][0];
		int v=E[it][1];
		inuse[v]=1;
		inuse[u]=2;
		ch.clear(); ch.push_back(u); ch.push_back(v);
		a.clear();
		b.clear();
		FOR(i,0,MIN(h+t+5,g[v].size()))
			a.push_back(g[v][i]);
		FOR(i,0,MIN(h+t+5,g[u].size()))
			b.push_back(g[u][i]);
		int uk=0,cnt1=0,cnt2=0;
		while ((uk<a.size()) && (cnt1<h))
		{
			if (a[uk]==u)
				uk++;
			else
			{
				inuse[a[uk]]=3;
				ch.push_back(a[uk]);
				uk++;
				cnt1++;
			}
		}
		if (cnt1==h)
		{
			FOR(i,0,b.size())
			{
				if (b[i]==v)
					continue;
				if (cnt2==t)
					break;
				if (inuse[b[i]]==0)
				{
					cnt2++;
					ch.push_back(b[i]);
					inuse[b[i]]=4;
				}
			}
			if (cnt2==t)
			{
				f=true;
				break;
			}
			FOR(i,0,b.size())
			{
				if (cnt2==t)
					break;
				if (inuse[b[i]]==3)
				{
					int cch=-1;
					while (1)
					{
						if (uk==a.size())
							break;
						if (inuse[a[uk]])
						{
							uk++;
							continue;
						}
						cch=a[uk];
						uk++;
					}
					if (cch==-1)
						break;
					inuse[b[i]]=4;
					inuse[cch]=3;
					ch.push_back(cch);
					cnt2++;
				}
			}
			if (cnt2==t)
			{
				f=true;
				break;
			}
		}
		FOR(i,0,ch.size())
			inuse[ch[i]]=0;
	}
	if (!f)
		cout<<"NO"<<endl;
	else
	{
		cout<<"YES"<<endl;
		FOR(i,0,n)
			if (inuse[i]==1)
			{
				cout<<i+1;
			}
		FOR(i,0,n)
			if (inuse[i]==2)
			{
				cout<<" "<<i+1<<endl;
			}
		int cnt=0;
		FOR(i,0,n)
			if (inuse[i]==3)
			{
				if (cnt)
					printf(" ");
				cnt++;
				printf("%d",i+1);
			}
		printf("\n");
		cnt=0;
		FOR(i,0,n)
			if (inuse[i]==4)
			{
				if (cnt)
					printf(" ");
				cnt++;
				printf("%d",i+1);
			}
		printf("\n");
	}
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}