// In The Name Of God :
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <bits/stdc++.h>
using namespace std ;
using namespace __gnu_pbds;
#define X first 
#define Y second
#define int long long
typedef long long ll ;
typedef pair < int , int > pii ; 
typedef pair < pii , int > pii_i ;
#define ordered_set(TYPE) tree<TYPE, null_type, less<TYPE>, rb_tree_tag, tree_order_statistics_node_update>
//#define "%I64d" "%I64d"
const int maxn = 1LL<<21 ;
const int maxL = 21 ;
//const int inf = 1e12 ;
int n , ans = -10000000, ar [ maxn ] , k ;
multiset < int > st1 , st2 ; 

int check ( )
{
  int ret = 0 ; 
  int salam = k ; 
  //k = 0 ;
  while ( st1 . size ( ) && st2 .size ( ) && *st1.begin()<*st2.rbegin() && k )
    {
      k-- ;
      int x , y ;
      x = *st1 . begin ( ) ;
      y = *st2 . rbegin ( ) ;
      st1 . erase ( st1 . find ( x ) ) ;
      st1 . insert ( y ) ; 
      st2 . erase ( st2 . find ( y ) ) ;
      st2 . insert ( x ) ; 
    }
  k = salam ;
  for ( set<int>::iterator it = st1 . begin ( ) ; it!=st1.end();it++ )
    ret += *it ;
  return ret ; 
} 

main ( )
{
  cin >> n >> k ;
  for ( int i = 0 ; i < n ; i ++ )
    cin >> ar [ i ] ;
  for ( int i = 0 ; i < n ; i ++ )
    {
      for ( int j = i ; j < n ;j ++ )
	{
	  st1 . clear ( ) ;
	  for ( int l = i ; l <= j ; l++ )
	    st1. insert ( ar [ l ] ) ;
	  st2 . clear ( ) ;
	  for ( int l = 0 ; l < n ; l++ )
	    if ( l < i || l > j )
	      st2 . insert ( ar [ l ] ) ;
	  ans = max ( ans , check ( ) ) ;
	}
    }
  cout << ans << endl ; 
}
