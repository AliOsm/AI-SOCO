#include <bits/stdc++.h>

        using namespace std;

        /* ---*-----*-----
        ---------o--------
        -----------------*/

        typedef long long ll;
        typedef long double ld;

        typedef pair<int, int> pi;
        typedef pair<ll,ll> pl;
        typedef pair<ld,ld> pd;

        typedef vector<int> vi;
        typedef vector<ld> vd;
        typedef vector<ll> vl;
        typedef vector<pi> vpi;
        typedef vector<pl> vpl;
        typedef vector<char> vc;

        typedef unordered_map<int,int> mii;
        typedef map<ll,ll> mll;
        typedef map<char,int> mci;
        typedef map<string,int> msi;

        #define mp make_pair
        #define pb push_back
        #define f first
        #define s second
        #define lb lower_bound
        #define ub upper_bound

        const int MOD = 1000000007;
        const int N = 1000002;
        set<char> vowel={'A', 'O', 'Y', 'E', 'U', 'I','a','o','y','e','u','i'};
        ll gcd(ll a, ll b) { return (b == 0 ? a : gcd(b, a % b)); }
        bool issquare(ll w ){
            return trunc(sqrt(w))*trunc(sqrt(w))==w;
        }

        int dx[]={1,-1,0,0,1,-1,1,-1};
        int dy[]={0,0,1,-1,1,1,-1,-1};

        int n,m,k,a,l,ans=0,res=0,posmin,posmax,x,y=0,z=0,xmax=0,ymax=0;
        //bool vis[N],check=true;
        int pos[N];
        char c,c1;

        string ch,ch1,ch2;
        priority_queue<int> pq;

        map<char,set<char> > edje;
        msi mastring;
        mci machar;
        mii mai;
        set<char> setchar;

        set<ll> si;

        vl v,vv;
        vpi vvv;

       /* void dfs(int src){
            if(vis[src])return ;
            vis[src]=1;
            for(auto t:adj[src]){
                if(!vis[src])dfs(t);
            }
        }
        */

        int main(){
            ios_base::sync_with_stdio(false);
            //freopen("overcode.in", "r", stdin);
            //memset(dist,INT_MAX,sizeof(dist));
            //memset(vis,0,sizeof(vis));
            memset(pos,-1,sizeof(pos));
            cin >> n;
           cin >> ch;
           pos[200000]=0;
           ans=0;
           for(int i=1;i<=ch.size();i++){
            if(ch[i-1]=='0')ans--;
            else ans++;
            if(pos[ans+200000]<0)pos[ans+200000]=i;
            else{
                res=max(res,i-pos[ans+200000]);
            }
           }
           cout << res << endl;
          return 0;
        }