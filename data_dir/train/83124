#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define F first
#define S second

using namespace __gnu_pbds;
using namespace std;

typedef tree<int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long  ll;

const double EPS = 1e-9;
const double pi = acos(-1);
int dx[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dy[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};

int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    int n , B , A;
    scanf("%d %d %d" , &n , &A , &B);

    int mine;
    scanf("%d" , &mine);

    int a[n - 1];
    for(int i = 0 ; i < n - 1 ; ++i)
        scanf("%d" , &a[i]);

    sort(a , a + n - 1 , greater<int>());

    int S = accumulate(a , a + n - 1 , 0) , ans = 0;
    S += mine;

    for(int i = 0 ; i < n ; ++i){
        long double f = (1.0 * mine * A) / S;
        if(f >= B){
            ans = i;
            break;
        }
        S -= a[i];
    }

    printf("%d\n" , ans);
}
