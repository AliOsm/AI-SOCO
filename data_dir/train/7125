//#inclumode<bits/stmodc++.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>
#include<set>
#include<queue>
#include<deque>
#include<map>
#include<stack>
#include<bitset>
#include<list>
#include<cassert>
#include<numeric>
#include<iomanip>

using namespace std;

const int M = 100 + 3;
const int mod = 1000 * 1000 * 1000 + 7;

struct matrix 
{
    long long a[M][M] = {};
    long long* operator [] (int x) 
    { 
    	return a[x]; 
    }
    matrix operator * (matrix x) 
    {
        matrix ret;
        for (int i = 0; i < M; i++)
        {
		    for (int j = 0; j < M; j++)
		    {
                for (int k = 0; k < M; k++)
                {
				    ret[i][j] = (ret[i][j] + a[i][k] * x[k][j]) % mod;
				}
			}
		}
        return ret;
    }
    matrix operator ^ (long long x) 
    {
        matrix z = *this, ret;
        for (int i = 0; i < M; i++)
            ret[i][i] = 1;
        for (; x; x >>= 1, z = z * z)
            if (x & 1)
                ret = ret * z;
        return ret;
    }
};
long long n;
int m;
matrix ans, f;

int main() 
{
    cin >> n >> m;
    for (int i = 1; i < m; i++)
    {
        f[i][i - 1] = 1;
    }
    f[0][m - 1] = 1;
    f[0][0] = 1;
    f = f ^ n;
    cout << f[0][0];
}

























