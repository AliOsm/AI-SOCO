#include <iomanip>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <cmath>
#include <queue>
#include <bitset>
#include <string>
 
#define ll long long
#define mp make_pair
#define pb push_back
 
using namespace std;
 
const int N = 1000010;

int t;
int n, m;
int a, b;
vector <int> g[N];
bool used[N];
int tin[N], fup[N];
int sz[N];
int tcur;
ll sa, sb;

bool dfs(int v, int p) {
    used[v] = true;
    tcur++;
    tin[v] = tcur;
    fup[v] = tcur;
    sz[v] = 1;
    bool res = false;
    if (v == b) res = true;
    for (int u : g[v]) {
        if (!used[u]) {
            bool cur = dfs(u, v);
            res |= cur;
            fup[v] = min(fup[v], fup[u]);
            sz[v] += sz[u];
            if (v == a) {
                if (!cur) sa += sz[u];
            } 
            else if (v == b) {
                if (fup[u] >= tin[v]) sb += sz[u];
            }
        }
        else if (u != p && tin[u] < tin[v]) {
            fup[v] = min(fup[v], tin[u]);
        }
    }
    return res;
}

void clear() {
    for (int i = 1; i <= n; i++) g[i].clear();
    for (int i = 1; i <= n; i++) used[i] = false;
}

int main() {
    scanf("%d", &t);
    while (t--) {
        scanf("%d%d%d%d", &n, &m, &a, &b);
        clear();
        for (int i = 1; i <= m; i++) {
            int u, v;
            scanf("%d%d", &u, &v);
            g[u].pb(v);
            g[v].pb(u);
        }
        tcur = 0;
        sa = 0;
        sb = 0;
        dfs(a, -1);
        ll ans = sa * sb;
        cout << ans << endl;
    }
	return 0;
}