/*               ______  ______
 \      / |\   |    |    |       |    |  |   |
  \    /  | \  |    |    |____   |____|  |___|
   \  /   |  \ |    |        |   |    |  |   |
    \/    |   \|    |   _____|   |    |  |   |

  -----------IIT Indore----------*/
#include<bits/stdc++.h>
#define rep(i,start,lim) for(long long i=start;i<lim;i++)
#define repd(i,start,lim) for(long long i=start;i>=lim;i--)
#define MOD 1000000007
#define INF 1000000000000000000
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define sz(a) lld((a).size())
#define eb emplace_back
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define br printf("\n")
#define bit(x,i) (x&(1<<i))
#define trace(x) cerr<<#x<<"="<<x<<endl
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
#define N 100005
lld a[N],b[N],ans,n;
vector<plld> v;
ldb inter_point(plld l1,plld l2)
{
	return ((ldb)(l1.s-l2.s)/(l2.f-l1.f));
}
void add(lld m,lld b)
{
	plld curr=mp(m,b);
	while(sz(v)>=2)
	{
		lld tmp=sz(v);
		if(inter_point(v[tmp-2],curr)<inter_point(v[tmp-2],v[tmp-1])) v.pop_back();
		else break;
	}
	v.pb(curr);
}
lld get(lld x)
{
	lld low=0,high=sz(v)-1,mid;
	rep(iter,0,20)
	{
		mid=(low+high)/2;
		if(x<=inter_point(v[mid],v[mid+1])) high=mid;
		else low=mid+1;
	}
	return v[mid].f*x+v[mid].s;
}
int main()
{
	//Convex hull trick :) :)
	scan(n);
	rep(i,0,n) scan(a[i]);
	rep(i,0,n) scan(b[i]);
	add(b[0],0);
	rep(i,1,n) ans=get(a[i]),add(b[i],ans);  
	return 0*print(ans);
}

