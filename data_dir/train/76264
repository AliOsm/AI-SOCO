/*
    N log N
*/

#include <bits/stdc++.h>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl

using namespace std;
typedef long long  ll;
const int N = 1.5e7 + 3 , MAX = 1.5 * 1e7;
bitset<N> p;
int n , cur_gcd = 0 , cnt[N];
int ans = inf;


void sieve(){
    p.set();
    p[0] = p[1] = 0;

    for(int i = 2 ; i < N ; ++i){
        if(p[i]){
            int c = cnt[i - 1] - cnt[0];
            if(2 * i >= N){
                c += cnt[MAX] - cnt[i];
            }
            for(int j = 2 * i ; j < N ; j += i){
                c += cnt[j - 1] - cnt[j - i];
                p[j] = 0;
                if(j + i > MAX){
                    j += i;
                    c += cnt[MAX] - cnt[j - i];
                    break;
                }
            }
            if(c < n)ans = min(ans , c);
        }
    }
}


int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r" , stdin);
#endif
    scanf("%d" , &n);
    vector<int> a(n);
    for(int &x : a)
        scanf("%d" , &x) , cur_gcd = __gcd(cur_gcd , x);

    for(int &x : a)
        x /= cur_gcd , cnt[x]++;

    partial_sum(cnt , cnt + N , cnt);

    sieve();

    printf("%d\n" , (ans >= inf ? -1 : ans));
}
