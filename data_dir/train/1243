// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 100000, A = 200000;

int aa[N];
bool composite[A + 1];

int main() {
	int n; cin >> n;
	for (int i = 0; i < n; i++)
		cin >> aa[i];
	long long ans = 1;
	for (int p = 2; p <= A; p++) {
		if (composite[p])
			continue;
		int k1 = A, k2 = A;
		for (int i = 0; i < n; i++) {
			int a = aa[i], k = 0;
			while (a % p == 0) {
				k++;
				a /= p;
			}
			if (k1 > k)
				k2 = k1, k1 = k;
			else if (k2 > k)
				k2 = k;
			if (k2 == 0)
				break;
		}
		while (k2--)
			ans *= p;
		for (int q = p + p; q <= A; q += p)
			composite[q] = true;
	}
	cout << ans << '\n';
	return 0;
}
