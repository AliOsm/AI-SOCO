#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define ll long long
#define ld long double
#define all(a) a.begin(),a.end()
#define endl '\n'
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ull unsigned long long
#define iter vector<int>::iterator
using namespace std;
using namespace __gnu_pbds;

template<class T>
using ordered_set=tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;

template<class T>
using ordered_multiset=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;

mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());
mt19937_64 rnd1(chrono::steady_clock::now().time_since_epoch().count());

//find_by_order
//order_of_key

const int N=1000+5;
const int inf=1e18+5;
const int mod=1e9+7;
const ld eps=1e-7;

int n,m,k;

ld x[N],y[N];
ld r[N],x1[N],y1[N];
bitset<N>f[N];

ld dist(const int i,const int j)
{
    ld d=sqrtl((x[i]-x1[j])*(x[i]-x1[j])+(y[i]-y1[j])*(y[i]-y1[j]));
    return d;
}

main ()
{
    ios;
    cin>>n>>m>>k;
    for (int i=1;i<=n;++i){
        cin>>x[i]>>y[i];
    }
    for (int i=1;i<=m;++i){
        cin>>r[i]>>x1[i]>>y1[i];
    }
    for (int i=1;i<=n;++i){
        for (int j=1;j<=m;++j){
            if (dist(i,j)<=r[j]){
                f[i][j]=1;
            }
        }
    }
    for (int i=1;i<=k;++i){
        int a,b;
        cin>>a>>b;
        bitset<N>res=(f[a]^f[b]);
        cout<<res.count()<<endl;
    }
}
