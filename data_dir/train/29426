#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
#define int long long
#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define boost() ios_base :: sync_with_stdio(0); cin.tie(); cout.tie(); cout << fixed; cout << setprecision(15); srand(time(NULL))
#define ordered_set tree <pair <int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update>
#define endl '\n'
const int _n = 1e6 + 11;
const long long inf = (long long)1e18 + 1LL;
const long long mod = 1e9 + 7;
const long double eps = 1e-7;

int n, m, a[111][111];
vector <pair <string, int>> res;

void bag() {
  for (int i = 1; i <= m; i++) {
    int mn = INT_MAX;
    for (int j = 1; j <= n; j++) {
      mn = min(mn, a[j][i]);
    }
    for (int j = 1; j <= n; j++) {
      a[j][i] -= mn;
    }
    while (mn > 0) {
      res.pb(mp("col", i));
      mn -= 1;
    }
  }
}

void mor() {
  for (int i = 1; i <= n; i++) {
    int mn = INT_MAX;
    for (int j = 1; j <= m; j++) {
      mn = min(mn, a[i][j]);
    }
    for (int j = 1; j <= m; j++) {
      a[i][j] -= mn;
    }
    while (mn > 0) {
      res.pb(mp("row", i));
      mn -= 1;
    }
  }
}

signed main () {
  boost();
  cin >> n >> m;
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      cin >> a[i][j];
    }
  }
  if (n <= m) {
    mor();
    bag();
  } else {
    bag();
    mor();
  }
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= m; j++) {
      if (a[i][j] > 0) {
        cout << -1 << endl;
        return 0;
      }
    }
  }
  cout << res.size() << endl;
  for (auto x : res) cout << x.first << " " << x.second << endl;
  return 0;
}

