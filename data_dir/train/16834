#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <iomanip>
#include <map>
#include <queue>
#define pb push_back
#define mp make_pair
#define pp pair<int,int>
#define ppp pair<pp, pp>
#define pl pair<ll, ll>
#define p3 pair<pl, pp>
#define fi first
#define se second
typedef long long ll;
using namespace std;
int n, m;
int l[200100], r[200100];
int a[200100];
int f[200100];
vector <pp> b;

bool cmp(pp x, pp y)
{
    return (x.fi > y.fi);
}

int main()
{
    ios::sync_with_stdio(false);
    cin>>n;
    for (int i = 1; i<=n; i++) cin>>a[i];

    a[0] = -1;
    a[n + 1] = -1;
    for (int i = 1; i<=n; i++)
    {
        int k = i - 1;
        while (a[i] <= a[k])
           k = l[k] - 1;
        l[i] = k + 1;
    }

    for (int i = n; i>=1; i--)
    {
        int k = i + 1;
        while (a[i] <= a[k])
               k = r[k] + 1;
        r[i] = k - 1;
    }
    for (int i = 1; i<=n; i++)
         b.pb(mp(a[i], r[i] - l[i] + 1));
    sort(b.begin(), b.end(), cmp);
    m = 1;

    for (int i = 0; i<b.size(); i++)
    {
      while (b[i].se >= m)
      {
          f[m] = b[i].fi;
          m++;
      }
    }
    for (int i = 1; i<=n; i++)
         cout<<f[i]<<" ";
    return 0;
}
