#include <iostream>
#include <vector>
#include <string>
#include <cassert>
#include <cstring>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <algorithm>
#include <map>
#include <cmath>
#include <numeric>
#include <functional>
#include <ctime>
#include <unordered_map>
#include <sstream>
#include <bitset>

using namespace std;
typedef long long Long;
typedef long double Double;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
typedef pair<Long,Long> PLL;

int read(int &x) { return scanf("%d", &x); }
int read(int &x, int &y) { return scanf("%d%d", &x, &y); }
int read(int &x, int &y, int &z) { return scanf("%d%d%d", &x, &y, &z); }
int read(Long &x) { return scanf("%lld", &x); }
int read(Long &x, Long &y) { return scanf("%lld%lld", &x, &y); }
int read(double &x) { return scanf("%lf", &x); }
char buff[2000010];
int read(string &s) { int r = scanf("%s", buff); s = buff; return r; }


int main() {

    int N;
    read(N);
    while (N-->0) {
        string S;
        read(S);
        if (count(S.begin(), S.end(), '1') == 0) {
            cout << 0 << endl;
        } else {
            int f = find(S.begin(), S.end(), '1') - S.begin();
            int e = S.size() - 1 - (find(S.rbegin(), S.rend(), '1') - S.rbegin());
            cout << (e-f+1)-count(S.begin(), S.end(), '1') << endl;
        }
    }








}





