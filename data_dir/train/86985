#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front

// #define fisier 1

using namespace std;

typedef long long ll;

const int mod = 1000000007;
const double dancila = 3.14159265359; // PI 
const double eps = 1e-9;

int n, col[200002];
vector<int> v[200002];
int ans[200002], dif[200002];
void dfs(int dad, int nod)
{
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(vecin == dad)
            continue;
        dfs(nod, vecin);
        dif[nod] += dif[vecin];
    }
    if(col[nod] == 1)
        ++dif[nod];
    else
        --dif[nod];
    dif[nod] = max(dif[nod], 0);
}
void dfs2(int dad, int nod, int df)
{
    int nd = df + (col[nod] == 1 ? 1 : -1);
    ans[nod] = (col[nod] == 1 ? 1 : -1);
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(vecin == dad)
            continue;
        ans[nod] += dif[vecin];
        nd += dif[vecin];
    }
    ans[nod] += df;
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(vecin == dad)
            continue;
        dfs2(nod, vecin, max(nd - dif[vecin], 0));
    }
}
int main()
{

    #ifdef fisier
        ifstream f("input.in");
        ofstream g("output.out");
    #endif

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	
	cin >> n;
    for(int i = 1; i <= n; ++i)
        cin >> col[i];
    for(int i = 1; i < n; ++i)
    {
        int a, b;
        cin >> a >> b;
        v[a].pb(b);
        v[b].pb(a);
    }
    dfs(0, 1);
    dfs2(0, 1, 0);
    for(int i = 1; i <= n; ++i)
        cout << ans[i] << " ";
    return 0;
}
