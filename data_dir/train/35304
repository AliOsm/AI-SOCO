#include<bits/stdc++.h>
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define pb push_back
using namespace std;
using ll = long long;
using pi = pair<ll, ll>;
using vi = vector<ll>;
const int maxn = 3030;

ll n, k, a[maxn], sz[maxn];
pi dp[maxn][maxn];
vector<vi> g;

void dfs(int v, int p) {
	sz[v] = 1;
	dp[v][0] = {0, a[v]};
	for(auto &i : g[v]) {
		if(i == p) continue;
		dfs(i, v);
		int osz = sz[v];
		sz[v] += sz[i];
		for(int x = sz[v]; x >= 0; x--){
			dp[v][x] = {dp[v][x].first + dp[i][0].first, dp[v][x].second + dp[i][0].second};
			for(int j = max(0, x-osz); j <= min(x, (int)sz[i]); j++) {
				if(j) dp[v][x] = max(dp[v][x], {dp[i][j].first + dp[v][x-j].first, dp[i][j].second + dp[v][x-j].second});
				if(j < x) dp[v][x] = max(dp[v][x], {dp[i][j].first + dp[v][x-j-1].first + (dp[i][j].second>0), dp[v][x-j-1].second});
			}
		}
	}
}

void solve() {
	cin >> n >> k;
	g = vector<vi>(n+1);
	for(int t, i = 1; i <= n; i++) cin >> t, a[i] = -t;
	for(int t, i = 1; i <= n; i++) cin >> t, a[i] += t;
	for(int f, t, i = 1; i < n; i++) {
		cin >> f >> t;
		g[f].pb(t);
		g[t].pb(f);
	}
	for(int i = 0; i <= n; i++)
		for(int j = 0; j <= n; j++)
			dp[i][j] = {0, -(1ll<<40)};
	dfs(1, 1);
	int a = dp[1][k-1].first + (dp[1][k-1].second>0);
	cout << a << '\n';
}
int main() {
	cin.tie(0)->sync_with_stdio(0);
	int t;
	cin >> t;
	while(t--) solve();
}
//0 1 0 1 0 1 0 1 2 2
