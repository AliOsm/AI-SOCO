#include <bits/stdc++.h>
using namespace std;
#define _N (int)1e5+5
#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define INF (int)1e9

int n, arr[_N];

int main() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	sort(arr, arr+n);
	if (n == 1) cout << -1 << endl;
	else {
		if (n == 2) {
			int d = arr[1] - arr[0];
			if (d == 0) {
				cout << 1 << endl;
				cout << arr[0] << endl;
				return 0;
			}
			if (d == 1) {
				cout << 2 << endl;
				cout << arr[0] - d << " " << arr[1] + d << endl;
			} else {
				if ((arr[0] + arr[1]) & 1) {
					cout << 2 << endl;
					cout << arr[0] - d << " " << arr[1] + d << endl;
				} else {
					cout << 3 << endl;
					cout << arr[0] - d << " " << (arr[0] + arr[1]) / 2 << " " << arr[1] + d << endl; 
				}
			}
		} else {
			set <int> s;
			for (int i = 1; i < n; i++) {
				s.insert(arr[i] - arr[i-1]);
			}
			if ((int)s.size() > 1) {
				if ((int)s.size() == 2) {
					if (*s.begin() == 0 || *prev(s.end()) == 0) {
						cout << 0 << endl;
						return 0;
					}
					int d = *prev(s.end()), idx = 0, ok = 0;
					for (int i = 1; i < n; i++) {
						if (d <= arr[i] - arr[i-1]) {
							d = arr[i] - arr[i-1];
							idx = i-1;
							ok++;
						}
					}
					if (d & 1) cout << 0 << endl;
					else {
						d >>= 1;
						if (d != *s.begin()) {
							cout << 0 << endl;
						} else {
							if (ok > 1) {
								cout << 0 << endl;
								return 0;
							}
							cout << 1 << endl; 
							cout << arr[idx] + d << endl;
						}
					}
				} else cout << 0 << endl;
			}
			else {
				int d = *s.begin();
				if (d == 0) {
					cout << 1 << endl; //
					cout << arr[0] << endl;
					return 0;
				}
				cout << 2 << endl;
				cout << arr[0] - d << " " << arr[n-1] + d << endl;
			}
		}
	}
	return 0;
}
