///*** One Last Try ***///
#include<bits/stdc++.h>
using namespace std;
#pragma comment(linker, "/stack:200000000")
#define ll long long int
#define inf ( int )( 1e9 + 1e9 )
#define mxs (int)( 1e6 + 10 )
#define md  int mid = ( l + r )>>1;
#define mod (ll)(1e9)+7
//int dx[]={+1,0,+0,-1};///Four Directions
//int dy[]={+0,-1,+1,+0};///Four directions
//int dx [] = {+1,-1,+0,+0,-1,-1,+1,+1};///Eight Directions
//int dy [] = {+0,+0,+1,-1,+1,-1,-1,+1};///Eight Directions
int t, n, m, j, ans, k,a, b, c, d, e,f  , i,sz,cases ,q,source , target,marker;
string s, s2, s3, s4;
//int ar [ mxs ] , ar2 [ mxs ] , ar3 [ mxs ] , parent [ mxs ] ;
vector < int > v;
void brainfuck();
int main()
{
    ios_base::sync_with_stdio(NULL);
    cin.tie(NULL);
    cout.tie(NULL);
    brainfuck();
    return 0;
}
void brainfuck()
{
    cin>>n;
    cin>>s;
    char ch;
    for ( i = 0 ; i < n; i++ )
    {
        if ( !a )
        {
            ch = s [ i ];
            a = 1;
        }
        else if ( a && s [ i ] != ch )
        {
            s2 += ch;
            s2 += s [ i ];
            a = 0;
        }
    }
    cout<<n - s2.size()<<"\n";
    cout<<s2<<"\n";
}
