
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

inline int in() {int x; scanf("%d",&x); return x;}
#define debug(x) cerr << #x << '=' << (x) << endl
#define FOR(i,j,k) for(int i=j;i<k;++i)
#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz
#define Size(x) ((int)(x).size())
#define endl '\n'
#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define pb push_back
#define X first
#define Y second
#define Mp make_pair

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const ld EPS = 1e-12;
const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 100;
const int MN = 1e5 + 10;

vector<pii>ans;
bool mk[MN] , pr[MN];
int n;

void prep()
{
	for(int i=2;i<MN;++i){
		if(pr[i]) continue;
		for(int j=2*i;j<MN;j+=i) pr[j] = true;
	}
}

void solve()
{
	for(int i=3;2*i<=n;++i){
		if(pr[i]) continue;
		vector<int>tmp;
		for(int j=1;i*j<=n;++j)
			if(!mk[i*j]) tmp.pb(i*j);
		if(Size(tmp)%2==0){
			for(int j=0;j<Size(tmp);j+=2) ans.pb(Mp(tmp[j] , tmp[j+1])) , mk[tmp[j]] = mk[tmp[j+1]] = true;
		}else{
			ans.pb(Mp(tmp[0] , tmp[2]));
			mk[tmp[0]] = mk[tmp[2]] = true;
			for(int j=3;j<Size(tmp);j+=2) ans.pb(Mp(tmp[j] , tmp[j+1])) , mk[tmp[j]] = mk[tmp[j+1]] = true;
		}
	}
	int lst = -1;
	for(int i=2;i<=n;++i){
		if(mk[i] || i%2) continue;
		if(~lst){
			ans.pb(Mp(lst , i));
			lst=-1;
		}else lst = i;
	}
	cout << Size(ans) << endl;
	for(int i=0;i<Size(ans);++i) cout << ans[i].X  << ' ' << ans[i].Y << endl;
}

int main()
{
	boost;
	prep();
	cin >> n;
	solve();
	return 0;
}


