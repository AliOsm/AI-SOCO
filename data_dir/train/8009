/*
ID: essi
LANG: C++
TASK: .cpp
*/
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld double long
#define all(n) n.begin(), n.end()
#define rall(s) (s).rbegin(),(s).rend()
#define bs(x) (bitset<60>(x)).to_string()
#define sep ios::sync_with_stdio(0),cin.tie(0)
const ll MAX = 2e5 + 14;
vector<ll> Tree[MAX];
ll W[101][101];
vector<bool> seen(MAX);
ll res = 0;

void dfs(ll node, ll su) {

	for (auto adj: Tree[node]) {
		if (seen[adj] == false) {
			seen[adj] = true;
			su+= W[node][adj];
			res = max(res, su);
			dfs(adj, su);
			su-= W[node][adj];
		}
	}

} 

int main() {
    //ifstream fin ("word.in");
    //ofstream fout ("word.out");
    sep;
    ll n; cin >> n;
    for (ll i = 1; i < n; ++i) {
    	ll u, v, c;
    	cin >> u >> v >> c;
    	W[u][v] = c;
    	W[v][u] = c;
    	Tree[u].emplace_back(v);
    	Tree[v].emplace_back(u);
    };
    seen[0] = true;
    ll su = 0;
    dfs(0,su);
    cout << res << "\n";
}


