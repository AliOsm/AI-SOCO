#include <iostream>
#include <iomanip>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <string>
#include <assert.h>
#include <ctype.h>
#include <limits.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <bitset>
#include <deque>
#include <map>
#include <queue>
#include <set>
#include <sstream>
using namespace std;

typedef long long ll;

const int N = 1e6 + 1;
int n, m, a[N], p[N], sol[N];
vector<vector<int> > val, pos;

int find(int x) {
	if (x == p[x])
		return x;
	return p[x] = find(p[x]);
}

int main(int argc, char **argv) {
//	freopen("in.txt", "r", stdin);
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; ++i) {
		scanf("%d", &a[i]);
		p[i] = i;
	}
	for (int i = 0; i < m; ++i) {
		int a, b;
		scanf("%d%d", &a, &b);
		a = find(a);
		b = find(b);
		p[a] = b;
	}
	pos.resize(n + 1);
	val.resize(n + 1);
	for (int i = 1; i <= n; ++i) {
		int at = find(i);
		pos[at].push_back(i);
		val[at].push_back(a[i]);
	}
	for (int i = 1; i <= n; ++i) {
		sort(val[i].rbegin(), val[i].rend());
		for (int j = 0; j < pos[i].size(); ++j)
			sol[pos[i][j]] = val[i][j];
	}
	for (int i = 1; i <= n; ++i)
		printf("%s%d", i == 1 ? "" : " ", sol[i]);
	puts("");
	return 0;
}