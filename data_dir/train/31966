#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <ll, ll> pii;

#define NL cout<<"\n";
#define ALL(a) a.begin(), a.end()
#define DBG(a) cout<< #a <<" --> "<<(a)<<endl;
#define FastIO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)
#define IN freopen("input.txt","r+",stdin)
#define OUT freopen("output.txt","w+",stdout)

template < class T1,class T2>
ostream &operator <<(ostream &os,const pair < T1,T2 > &p)
{
    os<<"{"<<p.first<<","<<p.second<<"}";
    return os;
}

const ll N=2e5+5;
const ll oo=1e9+7;
vector<ll > g[N];
ll sz[N];
ll dp[N];
ll ans=0;
void dpp(ll u,ll p=-1)
{
    dp[u]=sz[u]=0;
    for(ll v: g[u])
    {
        if(v!=p)
        {
            dpp(v,u);
            sz[u]+=sz[v];
            dp[u]+=dp[v];
        }
    }
    sz[u]++;
    dp[u]+=sz[u];

//    DBG(u);
//    DBG(dp[u]);
//    DBG(sz[u]);
//    NL;
}
void dfs(ll u,ll p=-1)
{
    ans=max(ans,dp[u]);
    for(ll v: g[u])
    {
        if(v!=p)
        {
            dp[u]-=dp[v];
            dp[u]-=sz[v];
            sz[u]-=sz[v];

            sz[v]+=sz[u];
            dp[v]+=dp[u];
            dp[v]+=sz[u];


            dfs(v,u);

            dp[v]-=dp[u];
            dp[v]-=sz[u];
            sz[v]-=sz[u];

            sz[u]+=sz[v];
            dp[u]+=dp[v];
            dp[u]+=sz[v];



        }
    }
}
int32_t main()
{
    FastIO;


    ll n;
    cin>>n;

    for( ll i =1;i<n;i++)
    {
        ll u,v;
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    dpp(1);
    dfs(1);
    cout<<ans;

}
