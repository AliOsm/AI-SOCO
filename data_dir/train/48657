#include <bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define IN freopen("testing.txt","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 1000000000
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

//using namespace __gnu_pbds;
using namespace std ;

typedef pair<int, int> pi ;
//typedef tree< pi, null_type, less<pi>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define maxn 5000005

/*
     *os.find_by_order(k) -> returns the k'th smallest element (indexing starts from 0)
      os.order_of_key(v)  -> returns how many elements are strictly smaller than v
*/
vector <int> op ;
int main()
{
    int n ;

    scanf("%d",&n) ;

    int i = 19 ;

    while(1)
    {
        while( i>=0 && (n&(1<<i)) != 0 )
        {
            i-- ;
        }
        if( i < 0 ) break ;
        n ^= (( 1<<(i+1) )-1) ;
        op.pb(i+1) ;
        if( n == ((1<<20)-1) ) break ;
        n++ ;
        op.push_back(1) ;
    }

    printf("%d\n",(int)op.size()) ;

    for(int i=0 ; i<(int)op.size() ; i+=2) printf("%d ",op[i]) ;

    return 0 ;
}
