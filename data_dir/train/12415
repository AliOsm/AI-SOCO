#include <stdio.h>
#include <math.h>
#include <cstring>

#define pi M_PI

using namespace std;

const int N = 400000;
struct mat
{
    double a[3][3];
};

mat mul(mat a, mat b)
{
    mat ans;
    for(int i = 0; i < 3; i++)
        for(int j = 0; j < 3; j++)
        {
            ans.a[i][j] = 0;
            for(int k = 0; k < 3; k++)
                ans.a[i][j] += a.a[i][k] * b.a[k][j];
        }
    return ans;
}

mat t[N*4];

void modify(int k, int l, int r, int i, mat x)
{
    if(l == r)
    {
        t[k] = x;
        return;
    }
    int c = (l + r)/2;
    if(i <= c)
        modify(k << 1, l, c, i, x);
    else
        modify((k << 1)+1, c+1, r, i, x);
    t[k] = mul(t[(k << 1)], t[(k << 1)+1]);
}

double l[N], ang[N];
int n, m;
mat m1, m2;

int main()
{
    scanf("%d%d", &n, &m);
    for(int i = 0; i < n; i++)
    {
        memset(m2.a, 0, sizeof(m2.a));
        l[i] = 1.0;
        ang[i] = 0.0;
        m2.a[2][2] = 1.0;
        m2.a[0][0] = m2.a[1][1] = cos(0.0);
        m2.a[0][1] = +sin(0.0);
        m2.a[1][0] = -sin(0.0);
        memset(m1.a, 0, sizeof(m1.a));
        m1.a[0][0] = m1.a[1][1] = m1.a[2][2] = 1.0;
        m1.a[0][2] = 1.0;
        modify(1, 0, n-1, i, mul(m2, m1));
    }
    int z, j, a;
    for(int i = 0; i < m; i++)
    {
        scanf("%d%d%d", &z, &j, &a);
        j--;
        if(z == 1)
        {
            l[j] += a;
        }
        else
        {
            ang[j] += a*pi/180.0;
            if(ang[j] > 2*pi)
                ang[j] -= 2*pi;
        }
        memset(m2.a, 0, sizeof(m2.a));
        m2.a[2][2] = 1.0;
        m2.a[0][0] = m2.a[1][1] = cos(ang[j]);
        m2.a[0][1] = +sin(ang[j]);
        m2.a[1][0] = -sin(ang[j]);
        memset(m1.a, 0, sizeof(m1.a));
        m1.a[0][0] = m1.a[1][1] = m1.a[2][2] = 1.0;
        m1.a[0][2] = l[j];
        modify(1, 0, n - 1, j, mul(m2, m1));
        printf("%.7lf %.7lf\n", t[1].a[0][2], t[1].a[1][2]);
    }
    return 0;
}
