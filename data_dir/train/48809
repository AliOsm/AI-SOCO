
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

inline int in() {int x; scanf("%d",&x); return x;}
#define debug(x) cerr << #x << '=' << (x) << endl
#define FOR(i,j,k) for(int i=j;i<k;++i)
#define bpc __builtin_popcount
#define blz __builtin_clz
#define btz __builtin_ctz
#define Size(x) ((int)(x).size())
//#define endl '\n'
#define boost ios_base :: sync_with_stdio(false) , cin.tie(0) , cout.tie(0)
#define pb push_back
#define X first
#define Y second

typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;

const int INF = 1e9 + 10;
const ll LINF = 1000ll*1000*1000*1000*1000*1000 + 100;
const int MN = 2e2 + 10;

ll n;
int sz;
ll fib[MN] , dp1[MN] , dp2[MN] , dp3[MN];
bool mk[MN];

void solve()
{
	fib[0] = 1 , fib[1] = 2;
	if(n <= 2){
		cout << 1 << endl;
		return;
	}
	sz = 1;
	while(fib[sz] <= n)
		fib[sz+1] = fib[sz] + fib[sz-1] , ++sz;
	for(int i=sz-1;i>=0;--i){
		mk[i] = false;
		if(n >= fib[i]) mk[i] = true , n-=fib[i];
	}
	memset(dp1 , 0 , sizeof dp1) , memset(dp2 , 0 , sizeof dp2);
	dp2[0] = 1 , dp2[1] = 1;
	int lst = -1;
	for(int i=2;i<sz;++i){
		if(!mk[i-1] && !mk[i-2]) dp1[i] = dp2[i-2];
		if(!mk[i-1] && mk[i-2]) dp1[i] = dp1[i-2];
		dp2[i] = dp1[i];
		if(lst == -1) dp2[i]++;
		else dp2[i] += dp2[lst];
		if(mk[i]) lst = i;
	}
	cout << dp2[sz-1] << endl;
//	for(int i=2;i<sz;++i)
//		cout << fib[i] << ' ' << dp2[i] << ' ' << dp1[i] << endl;
}

int main()
{
	boost;
	int q;
	cin >> q;
	while(q--){
		cin >> n;
		solve();
	}
	return 0;
}


