using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define st first
#define nd second
#define PB push_back
#define PF push_front
#define FOR(i,a,b) for (long long i=a;i<b;i++)
#define FORE(i,a,b) for (long long i=a;i<=b;i++)
#define FORD(i,a,b) for (long long i=a;i>=b; i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> II;
typedef pair<ll,ll> LL;
const ll INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

ll canhai(ll n)
{
    ll fi,la,mid;
    fi=0;
    la=n+1;
    while (fi+1<la)
    {
        mid=fi/2+la/2;
        if (fi%2 && la%2) mid++;
        if (mid>n/mid) la=mid;
        else fi=mid;
    }
    return fi;
}

ll power(ll a, ll n, ll m)
{
    if (n==0) return 1;
    ll tmp,c;
    tmp=c=a;
    n--;
    while (n)
    {
        if (n%2) tmp=tmp*c%m;
        c=c*c%m;
        n/=2;
    }
    return tmp;
}

struct node
{
    int xx, yy;
};

bool cmp(node a, node b)
{
    return (a.xx<b.xx || ( a.xx==b.xx && a.yy<b.yy) );
}

ll n,ans,x[2000+10],y[2000+10],dem,dx,dy,dd;
node b[2000+10];
int d;

int main()
{
 //   freopen("codeforces.inp", "r", stdin);
 //   freopen(".out", "w", stdout);
    cin >> n;
    FORE(i,1,n) cin >> x[i] >> y[i];

    ans=0;
    FOR(i,1,n)
    {
        dem=0;
        dx=0;
        dy=0;
        FORE(j,i+1,n)
        if (x[i]==x[j]) dx++;
        else if (y[i]==y[j]) dy++;
        else
        {
            b[++dem].xx=x[i]-x[j];
            b[dem].yy=y[i]-y[j];
            d=__gcd( abs(b[dem].xx), abs(b[dem].yy) );
            b[dem].xx/=d;
            b[dem].yy/=d;
            if (b[dem].xx<0 && b[dem].yy<0)
            {
                b[dem].xx*=(-1);
                b[dem].yy*=(-1);
            }
            else if (b[dem].xx<0 && b[dem].yy>0)
            {
                b[dem].xx*=(-1);
                b[dem].yy*=(-1);
            }
        }

        sort(b+1,b+dem+1,cmp);
        ans+=dx*(dx-1)/2+dy*(dy-1)/2;
        dd=1;
        FORE(j,2,dem)
        if ( b[j].xx==b[j-1].xx && b[j].yy==b[j-1].yy ) dd++;
        else
        {
            ans+=dd*(dd-1)/2;
            dd=1;
        }
        ans+=dd*(dd-1)/2;
       // cout << i << " " << x[i] << " " << y[i] << " " << dx << " " << dy << " " << ans << "\n";
       // FORE(j,1,dem) cout << b[j].xx << " " << b[j].yy << "\n";
       // cout << "\n";
    }

    cout << n*(n-1)*(n-2)/6-ans;
}

