#include <iostream>
#include <cstdio>
#include <cmath>

using namespace std;

const int tope=1<<22;
const int primero=1<<21;

int maximum[tope];

void maximize(int &a,int b)
{
  a=max(a,b);
}

void insert(int pos,int val)
{
  //cout<<"insert pos "<<pos<<" val "<<val<<endl;
  pos+=primero;
  maximum[pos]=val;
  while (pos>1) {
    pos/=2;
    maximum[pos]=max(maximum[2*pos],maximum[2*pos+1]);
  }
}

int maxbetween(int pos0,int pos1)
{
  //cout<<"maxbetween pos0 "<<pos0<<" pos1 "<<pos1<<endl;
  if (pos0>pos1) swap(pos0,pos1);
  pos0+=primero;
  pos1+=primero;
  if (pos0==pos1) return maximum[pos0];
  int maxi=max(maximum[pos0],maximum[pos1]);
  while (pos0+1<pos1) {
    if (pos0%2==0) maximize(maxi,maximum[pos0+1]);
    pos0/=2;
    if (pos1%2==1) maximize(maxi,maximum[pos1-1]);
    pos1/=2;
  }
  //cout<<"maxi "<<maxi<<endl;
  return maxi;
}

typedef long long int ll;

const ll modulo=1e9+7;

void add(ll &a,ll b)
{
  a=(a+b)%modulo;
}

const int limit=2000000;

int n,k;
int a[limit];
ll sol;

int ind;
ll sum;
ll val[limit];
ll count[limit];

void compute(int pos)
{
  if (n<=pos+k-1) return;
  compute(pos+k-1);
  ind++;
  val[ind]=maxbetween(pos,pos+k-1);
  count[ind]=1;
  add(sum,val[ind]);
  while (0<ind and val[ind-1]<=val[ind]) {
    add(sum,-val[ind-1]*count[ind-1]);
    add(sum,val[ind]*count[ind-1]);
    val[ind-1]=val[ind];
    count[ind-1]+=count[ind];
    ind--;
  }
  add(sol,sum);
}

int main()
{
  scanf("%d %d",&n,&k);
  for (int i=0;i<n;i++) {
    scanf("%d",a+i);
    insert(i,a[i]);
  }
  for (int i=0;i<k-1;i++) {
    ind=-1;
    sum=0;
    compute(i);
  }
  sol=((sol%modulo)+modulo)%modulo;
  cout<<sol<<endl;
}
