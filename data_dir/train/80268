#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)

#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};
//////////////////////

const int N = 25;

int n;
int X[N],Y[N],Z[N];

struct est
{
	int a,b,c;
	ll mask;
	est(){};
	est( int x, int y, int z, ll mm )
	{
		a = x;
		b = y;
		c = z;
		mask = mm;
	}

	bool operator < ( est foo ) const{
		if( a != foo.a ) return a<foo.a;
		if( b != foo.b ) return b<foo.b;
		if( c != foo.c ) return c<foo.c;
		return mask<foo.mask;
	}
};

vector< est > g;
int maxi;
ll ans = -LINF;
int ret[N];

void back1( int id, int a, int b, int c, ll mask )
{
	if( id == maxi )
	{
		g.pb(est(b-a,c-a,-a,mask));
		return;
	}
	for(int i=0;i<3;++i)
	{
		int s1 = a, s2 = b, s3 = c;
		if(i!=0) s1+=X[id];
		if(i!=1) s2+=Y[id];
		if(i!=2) s3+=Z[id];
		back1(id+1,s1,s2,s3,(mask*4LL)+i+1LL);
	}
}

void back2( int id, int a, int b, int c, ll mask )
{
	if( id == n )
	{
		int lol = lower_bound(g.begin(),g.end(),est(-(b-a),-(c-a),-INF,0LL))-g.begin();
		if( lol >= g.size() || g[lol].a != -(b-a) || g[lol].b != -(c-a) ) return;
		ll val = a-g[lol].c;
		if( val > ans )
		{
			ans = val;
			ll m = g[lol].mask;
			for (int i=maxi-1;i>=0;i--)
			{
				ret[i]=(m&3LL)-1LL;
				m>>=2LL;
			}
			m = mask;
			for (int i=n-1;i>=maxi;i--)
			{
				ret[i] = (m&3LL)-1LL;
				m>>=2LL;
			}
		}
		return;
	}
	for(int i=0;i<3;++i)
	{
		int s1 = a, s2 = b, s3 = c;
		if(i!=0) s1+=X[id];
		if(i!=1) s2+=Y[id];
		if(i!=2) s3+=Z[id];
		back2(id+1,s1,s2,s3,(mask*4LL)+i+1LL);
	}
}


int main()
{
	//ios::sync_with_stdio(0);
	scanf("%d",&n);
	for(int i=0;i<n;++i) scanf("%d %d %d",X+i,Y+i,Z+i);

	maxi = n/2;
	back1(0,0,0,0,0);
	sort(g.begin(),g.end());
	back2(n/2,0,0,0,0);

	if( ans == -LINF )
	{
		puts("Impossible");
		return 0;
	}


	for(int i=0;i<n;++i)
	{
		if (ret[i] != 0) printf("L");
		if (ret[i] != 1) printf("M");
		if (ret[i] != 2) printf("W");
		printf("\n");
	}


	return 0;
}