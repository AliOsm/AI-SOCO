#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define int long long
#define ld long double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define all(x) (x).begin(), (x).end()
#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define for1(i,n) for(int i=1;i<=(int)(n);i++)
const int MOD = 1e9 + 7 ;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1;}return res%p;}
const int N=100002;
int a[N];
int n;
int dp[N];
int solve(int p,int k)
{
      if(p>n) return 0;
      if(dp[p]!=-1) return dp[p];
      return dp[p]=1+solve(p+a[p]+k,k);
}
int32_t main(){
      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      // freopen("output.txt","w",stdout);
      #endif
      cin>>n;
      for(int i=1;i<=n;i++)
      {
            cin>>a[i];
            // a[i]+=i;
      }
      map<int,vector<pii>> ma;
      int q;
      cin>>q;
      for(int i=0;i<q;i++)
      {
            int p,k;
            cin>>p>>k;
            ma[k].pb({p,i});
      }
      int ans[q];
      for(int k=1;k<=n;k++)
      {
            if(ma[k].size()==0) continue;
            memset(dp, -1, sizeof(dp));
            sort(all(ma[k]));
            for(auto x:ma[k])
            {
                  ans[x.se]=solve(x.fi,k);
            }
      }
      for(int i=0;i<q;i++) cout<<ans[i]<<"\n";
}
// p=a[p]+k
// p=a[a[p]+k]+k
// p=a[a[a[p]+k]+k]+k
// I never lose. I either win or I learn