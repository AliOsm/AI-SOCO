#include<bits/stdc++.h>

using namespace std;

//#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;

long long mod = 1000000007LL;
long long large = 2000000000000000000LL;


vector<int> p;
vector<int> op,mark,sz;
int f(int x){
	return x==p[x]?x:p[x] = f(p[x]);
}

int main(){

	ios::sync_with_stdio(false);

	int n,k;
	cin>>n>>k;
	string s;
	cin>>s;
	vector<vector<int> > adj(n,vector<int>());
	for(int i=0;i<k;i++){
		int x;
		cin>>x;
		while(x--){
			int y;
			cin>>y;
			y--;
			adj[y].push_back(i);
		}
	}

	op.assign(k,-1);
	p.assign(k,0);
	for(int i=0;i<k;i++) p[i] = i;

	int ans = 0;
	mark.assign(k,-1);
	sz.assign(k,0);
	for(int i=0;i<k;i++) sz[i] = 1;
	for(int i=0;i<n;i++){
		if(adj[i].size()>1){
			int x = adj[i][0];
			int y = adj[i][1];
			x = f(x);
			y = f(y);
			if(x!=y){
				if(op[y]==-1) swap(x,y);

				if(op[x]==-1&&op[y]==-1){
					if(s[i]=='0'){
						op[x] = y;
						op[y] = x;
						if(mark[x]!=-1){
							if(mark[y]==-1){
								mark[y] = 1-mark[x];
								if(mark[y]==1) ans+=sz[y];
							}
						}else if(mark[y]!=-1){
							if(mark[x]==-1){
								mark[x] = 1-mark[y];
								if(mark[x]==1) ans+=sz[x];
							}
						}
						else ans+=min(sz[x],sz[y]);
					}else{
						if(mark[x]==1) ans-=sz[x];
						if(mark[y]==1) ans-=sz[y];
						p[x] = y;
						sz[y]+=sz[x];
						if(mark[x]!=-1) mark[y] = mark[x];
						else if(mark[y]!=-1) mark[x] = mark[y];
						if(mark[y]==1) ans+=sz[y];

					}
				}else if(op[x]==-1){
					if(mark[x]==1) ans-=sz[x];
					if(mark[y]==1) ans-=sz[y];
					if(mark[op[y]]==1) ans-=sz[op[y]];
					if(mark[y]==-1) ans-=min(sz[y],sz[op[y]]);

					if(s[i]=='0'){
						p[x] = op[y];
						sz[op[y]]+=sz[x];
						if(mark[x]!=-1){
							mark[op[y]] = mark[x];
							mark[y] = 1-mark[op[y]];
						}

					}else{
						p[x] = y;
						sz[y]+=sz[x];
						if(mark[x]!=-1){
							mark[y] = mark[x];
							mark[op[y]] = 1-mark[y];
						}
					}
					if(mark[y]==1) ans+=sz[y];
					if(mark[op[y]]==1) ans+=sz[op[y]];
					if(mark[y]==-1) ans+=min(sz[y],sz[op[y]]);
				}else if(x!=op[y]&&y!=op[x]){
					if(mark[x]==1) ans-=sz[x];
					if(mark[op[x]]==1) ans-=sz[op[x]];
					if(mark[x]==-1) ans-=min(sz[x],sz[op[x]]);
					if(mark[y]==1) ans-=sz[y];
					if(mark[op[y]]==1) ans-=sz[op[y]];
					if(mark[y]==-1) ans-=min(sz[y],sz[op[y]]);
					if(s[i]=='0'){
						p[x] = op[y];
						p[op[x]] = y;
						sz[op[y]]+=sz[x];
						sz[y]+=sz[op[x]];
						if(mark[x]!=-1){
							mark[op[y]] = mark[x];
							mark[y] = 1-mark[op[y]];
						}
					}else{
						p[x] = y;
						p[op[x]] = op[y];
						sz[y]+=sz[x];
						sz[op[y]]+=sz[op[x]];
						if(mark[x]!=-1){
							mark[y] = mark[x];
							mark[op[y]] = 1-mark[y];
						}
					}
					if(mark[y]==1) ans+=sz[y];
					if(mark[op[y]]==1) ans+=sz[op[y]];
					if(mark[y]==-1) ans+=min(sz[y],sz[op[y]]);
				}
			}

		}else if(adj[i].size()==1){
			int x = adj[i][0];
			x = f(x);
			if(op[x]==-1){
				if(s[i]=='1'){
					if(mark[x]==-1) mark[x] = 0;
				}else{
					if(mark[x]==-1){
						mark[x] = 1;
						ans+=sz[x];
					}
				}
			}else{
				if(s[i]=='0'){
					if(mark[x]==-1){
						ans-=min(sz[x],sz[op[x]]);
						mark[x] = 1;
						mark[op[x]] = 0;
						ans+=sz[x];
					}
				}else{
					if(mark[x]==-1){
						ans-=min(sz[x],sz[op[x]]);
						mark[x] = 0;
						mark[op[x]] = 1;
						ans+=sz[op[x]];
					}
				}
			}
		}
		cout<<ans<<endl;
	}





    return 0;
}
