#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <queue>
#include <clocale>
#include <bitset>
#include <cstring>
#include <memory.h>
#include <numeric>
#include <iomanip>
#include <stack>
#include <list>

using namespace std;

#pragma comment (linker, "/STACK:667177216")
#define ll long long
#define LL long long
#define ull unsigned long long
#define ld long double
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pb push_back
const ll mod = 1000000007;
#define INF (int)(2e9)
#define LINF (ll)(4e18)
#define forit(mas) for(auto(it)=(mas).begin();(it)!=(mas).end();(it)++)
#define pii pair<int,int>

ll D[2010][2010];
ll weight[2010];
ll wet[2010];
ll umb[2010];

int main() {

#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	vector<ll>mas(n);
	for (int i = 0; i < n; i++) cin >> mas[i];
	if (n <= 2) {
		cout << 0;
		return 0;
	}
	ll mn = 1e18;
	for (int i = -1; i <= 1; i++) {
		for (int j = -1; j <= 1; j++) {
			ll cnt = 0;
			ll d = (mas[1] + j) - (mas[0] + i);
			cnt += (i != 0) + (j != 0);
			ll prev = mas[1] + j;
			int f = 1;
			for (int k = 2; k < n; k++) {
				ll tmp = prev + d;
				if (mas[k] - tmp == -1 || mas[k] - tmp == 1) cnt++;
				else if (mas[k] != tmp) {
					f = 0;
					break;
				}
				prev = tmp;
			}
			if (f) mn = min(mn, cnt);
		}
	}
	if (mn == 1e18) mn = -1;
	cout << mn;
	return 0;
}