#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> // Common file
#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update
using namespace __gnu_pbds;
using namespace std;
#define IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
long long MOD = 1e9+7;
pair<int,int> dx[4] = {{1,0},{-1,0},{0,1},{0,-1}};
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
const int RANDOM = chrono::high_resolution_clock::now().time_since_epoch().count();
struct chash {
    int operator()(int x) const { return x ^ RANDOM; }
};
//uniform_int_distribution(0,1)(rng)
long long fastpow(long long x,long long k)
{
    if(!k)
        return 1;
    if(k & 1)
        return ((x * fastpow(x,k-1) % MOD) % MOD) % MOD;
    long long ans = fastpow(x,k/2);
    ans %= MOD;
    ans *= ans;
    ans %= MOD;
    return ans;
}
long long sumF(long long x)
{
    int s = 0;
    while(x)
        s += x%10,x /= 10;
    return s;
}
int arr[200005];
int n,m,k;
int isGood(int x)
{
    int usedBoxes = 1;
    int curCap = 0;
    for(int i = x;i <= n;i++)
    {
        if(curCap + arr[i] <= k)
            curCap += arr[i];
        else
            usedBoxes++,curCap = arr[i];
    }
    return usedBoxes;
}
int main()
{
    IO;
    int n;
    cin >> n;
    if(n % 2 == 0)
    {
        cout << "white\n1 2";
        return 0;
    }
    cout << "black";
    return 0;
}
