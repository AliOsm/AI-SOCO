#include <bits/stdc++.h>
using namespace std;



class Solution {
  int n, m;
  vector<vector<int>> g;
  vector<int> vis, A, B;
  bool isBipartite(int u, bool color = 0) {
    vis[u] = color;
    if (color) A.push_back(u + 1);
    else B.push_back(u + 1);
    bool test = true;
    for (int v : g[u]) {
      if (vis[v] == -1) {
        test &= isBipartite(v, !color);
      }
      else if (vis[v] == color) return false;
    }
    return test;
  }
public:
  void run() {
    cin >> n >> m;
    g.resize(n);
    vis.assign(n, -1);
    for (int i = 0; i < m; ++i) {
      int a, b; cin >> a >> b;
      --a, --b;
      g[a].push_back(b), g[b].push_back(a);
    }
    bool test = true;
    for (int i = 0; test and i < n; ++i) if (vis[i] == -1) test &= isBipartite(i);
    if (test) {
      cout << A.size() << '\n';
      for (int i = 0; i < A.size(); ++i) cout << A[i] << " \n"[i == A.size() - 1];
      cout << B.size() << '\n';
      for (int i = 0; i < B.size(); ++i) cout << B[i] << " \n"[i == B.size() - 1];
    }
    else {
      cout << -1 << '\n';
    }
  }             
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  Solution().run();
}
