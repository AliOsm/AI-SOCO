///FUCKOUT
#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")

#include "bits/stdc++.h"
#include <ext/rope> //header with rope
using namespace std;

#define pb push_back
#define F first
#define S second
#define f(i,a,b)  for(int i = a; i < b; i++)
//#define endl '\n'

using namespace __gnu_cxx; //namespace with rope and some additional stuff

using ll = long long;
using db = long double;
using row = vector<int>;
using ii = pair<ll, ll>;

const int N = 3e5+5, M = 1e6 + 5, LG = 17, MOD = 1e9 + 7;
const int BLOCK = 55;
const int BLOCKN = N / BLOCK + 1;
const long double EPS = 1e-7;
using ull = unsigned long long;
int a[N][10];
int n, m;
int x, y;
bool check(int limit){

  vector<int>masks(1 << m, -1);

  f(i,0,n){
    int x = 0;
    f(j,0,m){
      if(a[i][j] >= limit)x |= (1 << j);
    }
    masks[x] = i;
  }

  f(i,0,1<<m)if(~masks[i])
    f(j,0,1<<m)if((~masks[j]) && (i|j) == (1 << m) - 1){
      x = masks[i];
      y = masks[j];
      return true;
    }

  return false;
}
int32_t main(){
#ifdef ONLINE_JUDGE
  ios_base::sync_with_stdio(0);
  cin.tie(0);
#endif // ONLINE_JUDGE

  cin >> n >> m;

  f(i,0,n)
    f(j,0,m)
      cin >> a[i][j];

  int lo = 0, hi = 1000 * 1000 * 1000;


  while(lo < hi){

    int md = lo + (hi-lo+1)/2;
    if(check(md))
      lo=md;
    else
      hi=md-1;

  }

  cerr<<lo<<'\n';

  check(lo);
  cout << x + 1 << ' ' << y + 1 << '\n';

  return 0;
}
