#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using pii = pair<int,int>;

#define fi first
#define se second
#define eb emplace_back
#define all(x) x.begin(), x.end()

int const N = 100 * 1000 + 16;
int const M = 1000 * 1000 * 1000 + 7;

struct someone {
  int s, a, b;
};

int n, S;
someone a[N];

ll chk(ll need) {
  ll v = 0;
  
  for(int i = 0; i < n; ++i) {
    ll take = min(need, (ll)a[i].s);
    v += take * (a[i].b - a[i].a);
    need -= take;
  }

  return v;
}

int main() {
  cin.tie(0);
  cin.sync_with_stdio(0);

  cin >> n >> S;
  ll sum = 0;
  ll ans = 0;
  for(int i = 0; i < n; ++i) {
    cin >> a[i].s >> a[i].a >> a[i].b;
    ans += ll(a[i].s) * a[i].a;
    sum += a[i].s;
  }

  if(sum%S)
    a[n++] = {int(S - (sum%S)), 0, 0}, sum += S-sum%S;

  sort(a, a+n, [] (auto const& a, auto const& b) {
    int dx = a.b - a.a;
    int dy = b.b - b.a;
    return tie(dx, a.s, a.a, a.b) > tie(dy, b.s, b.a, b.b);
  });

  // ll l = 0;
  // ll r = sum/S;
  // ll best = 0;

  // while(l <= r) {
  //   ll d = (r-l)/3;
  //   ll m1 = l+d;
  //   ll m2 = r-d;
  //   if(m1 > m2)
  //     swap(m1, m2);

  //   ll d1 = chk(m1*S);
  //   ll d2 = chk(m2*S);

  //   best = max({best, d1, d2});

  //   if(d1 < d2)
  //     l = m1+1;
  //   else
  //     r = m2-1;
  // }

  ll v = 0;
  ll cnt = 0;
  ll best = 0;
  for(int i = 0; i < n; ++i) {
    int s = a[i].s;

    ll d = a[i].b - a[i].a;

    ll take = min(S-cnt, (ll)s);

    cnt += take;
    v += take * d;

    if(cnt < S)
      continue;

    if(v <= 0)
      break;

    best += v;
    v = 0;

    if(d <= 0)
      break;

    ll rem = s-take;
    cnt = rem % S;
    v = cnt * d;
    best += (rem - cnt) * d;
  }

  cout << ans+best;
}