#include <bits/stdc++.h>

using namespace std;

const int N = 2003, M = 1000000007;
vector <int> dividors[N];
int dp[N][N];

int main()
{
    int n, k, res = 0;
    scanf("%d %d", &n, &k);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j * j <= i; j++)
        {
            if (i % j == 0)
            {
                dividors[i].push_back(j);
                if (i / j != j)
                {
                    dividors[i].push_back(i / j);
                }
            }
        }
    }
    for (int i = 1; i <= k; i++)
    {
        for (int j = 1; j <= n; j++)
        {
            if (i == 1)
            {
                dp[i][j] = 1;
            }
            else
            {
                int sz = dividors[j].size();
                for (int u = 0; u < sz; u++)
                {
                    dp[i][j] = ((long long)dp[i][j] + dp[i-1][dividors[j][u]])%M;
                }
            }
            if (i == k)
            {
                res = ((long long)res + dp[i][j])%M;
            }
        }
    }
    printf("%d", res);
    return 0;
}
