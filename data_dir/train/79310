/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

const bool ready = [](){
    ios_base::sync_with_stdio(false); cin.tie(0);
    cout << fixed << setprecision(12);
    return true;
}();

const double PI = acos(-1);
typedef long long ll;
#define int ll
#define fori(n) for(int i=0; i<int(n); i++)

#define cini(i) int i; cin>>i;
#define cins(s) string s; cin>>s;
#define cind(d) double d; cin>>d;
#define cinai(a,n) vi a(n); fori(n) { cin>>a[i]; }
#define cinas(s,n) vs s(n); fori(n) { cin>>s[i]; }
#define cinad(a,n) vd a(n); fori(n) { cin>>a[i]; }

typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;

/* Inklusion/Exclusion.
 * Solve separate for negative and positive.
 * for pos a<b 
 * ans=nums(b)-nums(a-1)
 */
void solve() {
    cini(k);
    cini(a);
    cini(b);

    if(a<=0 && b<=0) {
        swap(a,b);
        a=-a;
        b=-b;
    }

    int ans=0;
    if(a<0) {
        ans-=a/k;
        ans++;  // zero
    }

    ans+=b/k;
    if(a>0) {
        ans-=(a-1)/k;
    } else if(a==0)
        ans++;

    cout<<ans<<endl;
}

signed main() {
    solve();
}

