#include <bits/stdc++.h>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

const ll OO = 1e18;
const int N = 5009;
int n, m, t;
vector<pair<int, ll> > g[N];
ll memo[N][N];

ll solve(int idx, int rem) {
	if (idx == n - 1)
		return OO * (rem != 0);
	if (rem < 0)
		return OO;
	ll &ret = memo[idx][rem];
	if (ret != -1)
		return ret;
	ret = OO;
	for (auto nxt : g[idx])
		ret = min(ret, nxt.second + solve(nxt.first, rem - 1));
	return ret;
}

bool st = 0;
void path(int idx, int rem) {
	cout << (st ? " " : "") << idx + 1, st = 1;
	if (idx == n - 1) {
		return;
	}
	ll cur = solve(idx, rem);
	for (auto nxt : g[idx]) {
		ll loc = nxt.second + solve(nxt.first, rem - 1);
		if (cur == loc) {
			path(nxt.first, rem - 1);
			break;
		}
	}
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	fastInOut();
	cin >> n >> m >> t;
	int a, b, c;
	for (int i = 0; i < m; ++i)
		cin >> a >> b >> c, --a, --b, g[a].push_back(make_pair(b, c));
	memset(memo, -1, sizeof memo);
	for (int rem = n - 1; rem > 0; --rem) {
		if (solve(0, rem) <= t) {
			cout << rem + 1 << "\n";
			path(0, rem);
			break;
		}
	}
	return 0;
}

void fastInOut() {
	ios_base::sync_with_stdio(0);
	cin.tie(NULL), cout.tie(NULL);
}
