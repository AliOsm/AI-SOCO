#include <bits/stdc++.h>
#define FOR(i, s, n) for (int i = s; i <= n; i++)
#define pb(x) push_back(x)
#define mp(x, y) make_pair(x, y)
#define all(x) x.begin(),x.end()
typedef long long ll;

using namespace std;


int n, p, k;
const int n_ = 1001;
int A, B, x;
int prefA[1053], prefB[1053], common[n_];
short memo[n_][n_][51][2];

// aft = done
short dp (int ques, int made, int aft, int isA) {
	if(ques > n || made == p) return 0;

	short &ret = memo[ques][made][aft][isA];
	if(ret != -1) return ret;

	short takeA = 0, takeB = 0;
	short com = common[ques + aft - 1] - common[ques - 1];

	// take A
	if(isA) {
		short done = prefA[ques + aft - 1] - prefA[ques - 1];
		short nw = prefA[ques + k - 1] - prefA[ques - 1];
		takeA = nw - done + dp(ques + 1, made + 1, k - 1, 1);
	}
	else {
		takeA = (prefA[ques + k - 1] - prefA[ques - 1] - com) + dp(ques + aft, made + 1, (ques + k - 1) - (ques + aft) + 1, 1);
	}
	// takeB
	if(isA) {
		takeB = (prefB[ques + k - 1] - prefB[ques - 1] - com) + dp(ques + aft, made + 1, (ques + k - 1) - (ques + aft) + 1, 0);
	}
	else {
		short done = prefB[ques + aft - 1] - prefB[ques - 1];
		short nw = prefB[ques + k - 1] - prefB[ques - 1];
		takeB = nw - done + dp(ques + 1, made + 1, k - 1, 0);
	}
	// no one
	short dont = dp(ques + 1, made, max(0, aft - 1), isA);

//	if(ques == 8 && made == 1 && aft == 3 && isA == 1)
//		cout << takeA << " " << takeB << " " << dont << " " << (((ques + k - 1) - (ques + aft - 1) + 1))<< "\n";
	return ret = max(takeA, max(takeB, dont));
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> p >> k;
	cin >> A;
	FOR(i, 1, A) cin >> x, prefA[x] = 1;
	cin >> B;
	FOR(i, 1, B) cin >> x, prefB[x] = 1;
	FOR(i, 1, n_ - 1) prefA[i] += prefA[i - 1];
	FOR(i, 1, n_ - 1) prefB[i] += prefB[i - 1];
	FOR(i, 1, n_ - 1) common[i] = common[i - 1] + ((prefA[i] - prefA[i - 1]) && (prefB[i] - prefB[i - 1]));
	memset(memo, -1, sizeof memo);
	cout << dp(1, 0, 0, 1) << "\n";
	return 0;
}
