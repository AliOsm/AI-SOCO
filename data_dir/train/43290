//Be Name Khoda
//no comment...
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e5 + 7;
const int infint = (int)1e9;
const ll inf = (ll)1e18;
pair<ll, ll> P[MAXN];
bool cmp(pair<ll, ll> a, pair<ll, ll> b)
{
	return a.first * b.second < a.second * b.first;
}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	ll n;
	cin >> n;
	ll ans = 0;
	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		ll h = 0, sh = 0, cur = 0;
		for (int j = 0; j < s.size(); j++)
		{
			if(s[j] == 'h')
				h++, ans += cur;
			else
				sh++, cur++;
		}
		P[i] = {h, sh};
	}
	sort(P, P + n, cmp);
	ll sum = 0;
	for (int i = 0; i < n; i++)
	{
		ans += sum * P[i].first;
		sum += P[i].second;
	}
	cout << ans;
}