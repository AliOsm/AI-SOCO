#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
const ll mod = 1e9 + 7;
const int sz = 2005;
const ull hsh = 3797;
int n;
string s;
int valid_digit;
ll ans;
int fr[12];
ll fac[22];

map < ull, bool > dp;

ll calc( int mask ) {
        ull num = 0;
        int k = 0;
        memset( fr, 0, sizeof fr );
        for( int i=0; i<n; i++ ) {
                if( mask & ( 1 << i ) ) {
                        num = num * hsh + s[i];
                        fr[s[i] - '0']++;
                        k++;
                }
        }
        if( dp[num] ) return 0;
        dp[num] = true;
        ll ret = fac[k];
        for( int i=0; i<10; i++ ) {
                ret /= fac[ fr[i] ];
        }
        ll mn = 0;
        if( fr[0] ) {
                fr[0]--;
                k--;
                mn = fac[k];
                for( int i=0; i<10; i++ ) {
                        mn /= fac[ fr[i] ];
                }
        }
        return ret - mn;
}

ll solve() {
        ans = 0;
        dp.clear();
        valid_digit = 0;
        for( const char&c :s ) {
                valid_digit |= ( 1 << ( c - '0' ) );
        }
        int ch = ( 1 << n );
        sort( s.begin(), s.end() );
        int nite_hobe = 0;
        for( int i=0; i<n; i++ ) {
                if( s[i] == 0 ) nite_hobe |= ( 1 << i );
        }
        for( int i=0; i<ch; i++ ) {
                int fl = 1, mask = 0;
                for( int j=0; j<n; j++ ) {
                        if( ( nite_hobe & ( 1 << j ) ) && !( i & ( 1 << j ) ) ) {
                                fl = 0;
                                break;
                        }
                        if( i & ( 1 << j ) ) {
                                mask |= ( 1 << ( s[j] - '0' ) );
                        }
                }
                if( mask != valid_digit ) {
                        fl = 0;
                }
                if( fl ) {
                        ans += calc( i );
                }
        }
        return ans;
}

int main() {
#ifdef CLown1331
        freopen( "in.txt", "r", stdin );
#endif /// CLown1331

        fac[0] = 1;

        for( int i=1; i<22; i++ ) fac[i] = fac[i - 1] * i;

        while( cin >> s ) {

                n = (int)(s.size());

                cerr << s << " " << n << "\n";

                cout << solve() << "\n";
                
                cerr << "---\n";

        }


        return 0;
}
