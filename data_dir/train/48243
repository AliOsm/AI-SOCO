#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define mt make_tuple
#define DEBUG 0
#define cerr if (DEBUG) cerr
#define fprintf if (DEBUG) fprintf 
#define local freopen("in.txt","r",stdin);
#define test cerr<<"hi\n";
#define fi first
#define se second
#define HH1 402653189
#define HH2 1610612741
#define INF 0x3f3f3f3f
#define tii tuple<int,int,int>
#define npos string::npos

#define MOD 1000000007LL

#define MAXN 100005

using namespace std;

int T[30][MAXN<<2]; // [type of charcter] [count]
int D[30][MAXN<<2];
int a[MAXN],n,q; string s;
int cur[30];

void build (int id=1, int l=0, int r=n){
//	cerr << "build " << l << " " << r << endl;
	if (l+1==r) {
		T[a[l]][id]=1;
		return;
	}
	build(id<<1,l,l+r>>1);
	build(id<<1|1, l+r>>1,r);
	
	for (int i=0;i<26;i++) T[i][id] = T[i][id<<1] + T[i][id<<1|1];
}

int cnt(int x, int y, int t, int id=1, int l=0, int r=n){
	
	if (y<=l || r<=x) return 0;
	if (x<=l && r<=y) return T[t][id];
	
	if (D[t][id]!=-1){
		T[t][id<<1] =   D[t][id]*((l+r>>1) -l);
		T[t][id<<1|1] = D[t][id]*(r- (l+r>>1));
		D[t][id<<1] = D[t][id<<1|1] = D[t][id];
		D[t][id]=-1;
	}
	
	return cnt(x,y,t,id<<1,l,l+r>>1) + cnt(x,y,t,id<<1|1,l+r>>1,r);
}

void upd(int x, int y, int t, int v, int id=1, int l=0, int r=n){
//	testss
	if (y<=l || r<=x) return;
	if (x<=l && r<=y){
		T[t][id]=v*(r-l);
		D[t][id]=v; return;
	}
	if (D[t][id]!=-1){
		T[t][id<<1] =   D[t][id]*((l+r>>1) -l);
		T[t][id<<1|1] = D[t][id]*(r- (l+r>>1));
		D[t][id<<1] = D[t][id<<1|1] = D[t][id];
		D[t][id]=-1;
	}
	upd(x,y,t,v,id<<1,l,l+r>>1);
	upd(x,y,t,v,id<<1|1,l+r>>1,r);
	
	T[t][id]=T[t][id<<1] + T[t][id<<1|1];
}

int main(){
	cin >> n >> q >> s; memset(D,-1,sizeof(D));
	for (int i=0;i<s.length();i++) a[i]=s[i]-'a';
	for (int i=0;i<n;i++) cerr << a[i] << " "; cerr<<endl;
	build();
	
	while (q--){
		int x,y,k; cin >> x >> y >> k; x--;
		
		for (int i=0;i<26;i++) cur[i] = cnt(x,y,i);
		for (int i=0;i<5;i++) cerr << cur[i] << " "; cerr<<endl;
		for (int i=0;i<26;i++) upd(x,y,i,0);
		for (int i=0;i<5;i++) cerr << cnt(x,y,i) << " "; cerr<<endl;
		
		int c=x;
		if (k==1) for (int i=0;i<26;i++) if (cur[i]) {
			cerr << "call " << c << " " << c+cur[i] << " " << i << " " << 1 << endl;
			upd(c,c+cur[i],i,1), c+=cur[i];
			for (int i=0;i<5;i++) cerr << cnt(x,y,i) << " "; cerr<<endl;
		}
		if (k==0) for (int i=25;i>=0;i--) if (cur[i]) {
			cerr << "call " << c << " " << c+cur[i] << " " << i << " " << 1 << endl;
			upd(c,c+cur[i],i,1), c+=cur[i];
			for (int i=0;i<5;i++) cerr << cnt(x,y,i) << " "; cerr<<endl;
		}
		for (int i=0;i<5;i++) cerr << cnt(x,y,i) << " "; cerr<<endl;
	}
	
	for (int i=0;i<n;i++) for (int t=0;t<26;t++) if (cnt(i,i+1,t)){
		cout << (char)(t+'a'); break;
	}
}












