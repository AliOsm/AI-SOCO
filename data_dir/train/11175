#include <stdio.h>
#include <vector>
#include <algorithm>
#define pb push_back
using namespace std;

const int INF = (int)1e9;

bool solve(long long max_sum, long long terms) {
    if (terms >= INF) return false;
    return (1 + terms) * terms <= max_sum * 2;
}

vector<long long> build(long long sum, long long terms, long long d) {
    vector<long long> seq;
    for (int i = 1; i < terms; i++) {
        seq.pb(i * d);
        sum -= i;
    }
    seq.pb(sum * d);
    return seq;
}

int main(void) {
    long long n, k;
    long long ans = -1;

    scanf(" %lld %lld", &n, &k);

    /*
        a1 * d + a2 * d + ... + ak * d = n =>
        a1 + a2 + ... + ak = n / d = x =>
        a1 + a2 + ... + ak = x =>
        1 + 2 + ... + k <= x
    */
    for (long long d = 1; d * d <= n; d++) {
        if (n % d == 0) {
            if (solve(n / d, k)) ans = max(ans, d);
            if (solve(d, k)) ans = max(ans, n / d);
        }
    }
    if (ans == -1) {
        printf("%lld\n", ans);
    } else {
        vector<long long> seq = build(n / ans, k, ans);
        for (int i = 0; i < (int)seq.size(); i++) {
            if (i != 0) printf(" ");

            printf("%lld", seq[i]);
        }
    }
    printf("\n");

    return 0;
}
