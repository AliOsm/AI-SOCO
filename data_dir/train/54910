#include <bits/stdc++.h>

using namespace std;

const int inf = (int)(1e9) + 100;
const int mod = (int)(1e9) + 100;
const int N = (int)(2e5) + 100;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define ll long long
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vll vector <ll>
#define vpi vector <pii>
#define vpl vector <pll>
#define sc1(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define frw(i, p, n) for(int i = p; i <= n; i++)
#define bck(i, n, p) for(int i = n; i >= p; i--)
#define mem(a) memset(a, 0, sizeof(a))

ll get(ll a, ll b,  ll c){
	ll ans = 0;
	if(a < 0){
		ans -= a;
		a = 0;
	}
	if(b < 0){
		ans -= b;
		b = 0;
	}
	if(c < 0){
		ans -= c;
		c = 0;
	}
	ans += 3 * max(a, max(b, c)) - a - b- c;
	return ans;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll a,b ,c;
	cin >> a >>b >> c;
	if(a + b + c == 1){
		cout << 0 << endl;
		return 0;
	}
	if(a == b && b == c){
		cout << 0<<endl;
		return 0;
	}
	ll ans = 3 * max(a, max(b, c));	
	ans = min(ans, get(a, b, c));
	ans = min(ans, get(a-1, b, c));
	ans = min(ans, get(a-1, b-1, c));
	ans = min(ans, get(a-1, b-1, c-1));

	ans = min(ans, get(a, b-1, c-1));
	ans = min(ans, get(a-1, b-1, c-1));
	ans = min(ans, get(a-1, b-2, c-1));
	ans = min(ans, get(a-1, b-2, c-2));

	ans = min(ans, get(a, b, c-1));
	ans = min(ans, get(a-1, b, c-1));
	ans = min(ans, get(a-1, b-1, c-1));
	ans = min(ans, get(a-1, b-1, c-2));
	cout << ans<<endl;

	
	return 0;
}