#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<ll,ll> p2;
ll spf[200005];
vector<vector<ll>> cnt(200005);
void solve(){
	ll n,res=1;
	cin>>n;
	spf[1]=1;
	for(ll i=2;i*i<=200000;i++)
	if(!spf[i]){
		spf[i]=i;
		for(ll j=i*i;j<=200000;j+=i)
		if(!spf[j])
		spf[j]=i;
	}
	for(ll i=1;i<=200000;i++)
	if(!spf[i])
	spf[i]=i;
	for(ll i=0;i<n;i++){
		ll x;
		cin>>x;
		map<ll,ll> m;
		while(x>1){
			if(m.find(spf[x])==m.end())
			m.insert({spf[x],0});
			m[spf[x]]++;
			x/=spf[x];
		}
		for(auto it=m.begin();it!=m.end();it++)
		cnt[it->first].push_back(it->second);
	}
	for(ll i=2;i<=200000;i++)
	if(!cnt[i].empty())
	sort(cnt[i].begin(),cnt[i].end());
	for(ll i=2;i<=200000;i++)
	if(ll(cnt[i].size())==n-1)
	res*=pow(i,cnt[i][0]);
	else if(ll(cnt[i].size())==n)
	res*=pow(i,cnt[i][1]);
	cout<<res;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll qc=1;
    for(ll i=1;i<=qc;i++)
    solve();
}
