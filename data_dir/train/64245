#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

typedef long long ll;

set<ll> bads;

int main() {
    ll b, q, l, m, num, ans;

    ios::sync_with_stdio(0);
    cin >> b >> q >> l >> m;
    while (m--) {
        cin >> num;
        bads.insert(num);
    }

    ans = 0LL;
    if (b == 0LL) {
        if (bads.count(b) == 0)
            ans = -1LL;
    }
    else if (q == 0LL) {
        if (abs(b) <= l) {
            if (bads.count(b) == 0)
                ans++;
            if (bads.count(0LL) == 0)
                ans = -1LL;
        }
    }
    else if (q == 1LL) {
        if (abs(b) <= l && bads.count(b) == 0)
            ans = -1LL;
    }
    else if (q == -1LL) {
        if (abs(b) <= l) {
            if (bads.count(b) == 0)
                ans = -1LL;
            if (bads.count(-b) == 0)
                ans = -1LL;
        }
    }
    else {
        while (abs(b) <= l) {
            if (bads.count(b) == 0)
                ans++;
            b *= q;
        }
    }

    if (ans == -1LL)
        cout << "inf" << endl;
    else
        cout << ans << endl;

    return 0;
}