#include <bits/stdc++.h>
#define ll long long
#define ff first
#define ss second
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define pb push_back
using namespace std;

const int N = 1e5 + 10, M = 1e9 + 7, sq = 500;
int a[N], num[N], nxt[N], ended[N];
int n, q;

void ans(int x) {
	int cnt = 0, y = 0;
	while(x != M) {
		cnt += num[x];
		y = x;
		x = nxt[x];
	}
	cout << ended[y] + 1 << " " << cnt << endl;
}

void upd(int x, int y) {
	int z = (x / sq);
	z *= sq;
	for(int i = x; i >= z; i--) {
		if(i + a[i] >= n) {
			nxt[i] = M, num[i] = 1;
			ended[i] = i;
			continue;
		}
		if((i + a[i]) / sq == i / sq) {
			nxt[i] = nxt[i + a[i]];
			num[i] = num[i + a[i]] + 1;
			ended[i] = ended[i + a[i]];
		}
		else {
			nxt[i] = i + a[i];
			num[i] = 1;
			ended[i] = ended[i + a[i]];
		}		
	}
}

int main() {
	use_fast;
	cin >> n >> q;
	for(int i = 0; i < n; i++) {
		cin >> a[i];
	}
	for(int i = n - 1; i >= 0; i--) {
		if(i + a[i] >= n) {
			nxt[i] = M, num[i] = 1;
			ended[i] = i;
			continue;
		}
		if((i + a[i]) / sq == i / sq) {
			nxt[i] = nxt[i + a[i]];
			num[i] = num[i + a[i]] + 1;
			ended[i] = ended[i + a[i]];
		}
		else {
			nxt[i] = i + a[i];
			num[i] = 1;
			ended[i] = ended[i + a[i]];
		}
	}
	while(q--) {
		bool b;
		int x, y;
		cin >> b;
		if(b) {
			cin >> x;
			x--;
			ans(x);
		}
		else {
			cin >> x >> y;
			x--;
			a[x] = y;
			upd(x, y);
		}
	}
    return 0;
}
