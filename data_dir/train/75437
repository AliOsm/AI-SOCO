#include <iostream>
#include <vector>
#include <map>
#include <utility>
#include <string>
#include <algorithm>

using namespace std;

const int SIZE = 1000;

struct Player {
	string name;
	int score;
};

int cmp (pair<string, int>a, pair<string, int>b) {
	return a.second < b.second;
}

int main()
{
	int n, i;
	vector<Player> rounds(SIZE);
	map<string, int> players;

	cin >> n;
	
	for (i = 0; i < n; i++) {
		cin >> rounds[i].name >> rounds[i].score;
		players[rounds[i].name] += rounds[i].score;
	}

	int max = max_element (players.begin(), players.end(), cmp)->second;

	map<string, int>::iterator p, t;
	
	for (p = players.begin(); p != players.end();) {
		if (p->second != max) {
			t = p++;
			players.erase(t);
		}
		else {
			p->second = 0;
			p++;
		}
	}

	for (i = 0; i < n; i++)
		if (players.count(rounds[i].name) > 0)
			if ((players[rounds[i].name] += rounds[i].score) >= max)
				break;

	cout << rounds[i].name;

	return 0;
}
