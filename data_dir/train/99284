#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
template <typename T> inline T sqr(T t) {return t*t;}
#define pb push_back
#define mp make_pair
#define endl "\n"

inline void files(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    #ifdef _WIN32
        return;
    #endif // _WIN32
    //freopen("lca.in", "r", stdin);//freopen("output.out", "w", stdout);
}

int n, sz = 1, t1[100100*4], t2[100100*4];

void update(int v, int num){
    v = v + sz - 1;
    t1[v] = t2[v] = num;
    v>>=1;
    while(v){
        t1[v] = max(t1[v+v], t1[v+v+1]);
        t2[v] = min(t2[v+v], t2[v+v+1]);
        v>>=1;
    }
}

int get_max(int v, int l, int r, int tl, int tr){
    if (l>r||l>tr||tl>r)
        return 0;
    if (tl <= l && r <= tr)
        return t1[v];
    int mid = (l+r)>>1;
    return max(get_max(v+v, l, mid, tl, tr), get_max(v+v+1, mid+1, r, tl, tr));
}

int get_min(int v, int l, int r, int tl, int tr){
    if (l>r||l>tr||tl>r)
        return 1e9;
    if (tl <= l && r <= tr)
        return t2[v];
    int mid = (l+r)>>1;
    return min(get_min(v+v, l, mid, tl, tr), get_min(v+v+1, mid+1, r, tl, tr));
}

bool f (int pos){
    for (int i = pos; i <= n; i++){
        int mn = get_min(1, 1, sz, i-pos+1, i);
        int mx = get_max(1, 1, sz, i-pos+1, i);
        if (mx-mn<=1){
            return 1;
        }
    }
    return 0;
}

int main(){
    //files();
    cin >> n;
    while (sz < n)
        sz += sz;
    for (int i = 1; i <= n; i++){
        int x;
        cin >> x;
        update(i, x);
    }
    int l = 0, r = n;
    while (r-l > 1){
        int mid = (l+r)>>1;
        if (f(mid))
            l = mid; else
            r = mid;
    }
    if (f(r))
        cout << r; else
        cout << l;
}
