#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second

using namespace std;

const double pi = acos(-1);
const int N = 1e6 + 6, mod = 998244353, M = 1e7 + 7;
const ll MAX = 5e18;

int n;
pii a[N];

int moding(ll x){
    while(x < 0)
        x += mod;
    if(x >= mod)
        x %= mod;
    return x;
}

ll allP(int n){
    ll ret = 1;
    while(n)
        ret = moding(ret * n--);
    return ret;
}

bool cmp1(pii x, pii y){
    if(x.ff == y.ff)
        return x.ss < y.ss;
    return x.ff < y.ff;
}

bool cmp2(pii x, pii y){
    if(x.ss == y.ss)
        return x.ff < y.ff;
    return x.ss < y.ss;
}

bool frbd(int i, int j, int x, int y){
    bool ret = 0;
    if(!x)
        ret |= a[i].ff < a[j].ff;
    if(y)
        ret |= a[i].ss < a[j].ss;
    return ret;
}

bool eq(int i, int j, int x, int y){
    bool ret = 1;
    if(!x)
        ret &= a[i].ff == a[j].ff;
    if(y)
        ret &= a[i].ss == a[j].ss;
    return ret;
}


int clc(int x, int y){
    if(x == 0)
        sort(a, a + n, cmp1);
    else
        sort(a, a + n, cmp2);
    int c = 1;
    ll ret = 1;
    for(int i = 1; i < n; i++){
        if(frbd(i, i - 1, x, y))
            return 0;
        if(eq(i, i - 1, x, y))
            c++;
        else
            ret = moding(ret * allP(c)), c = 1;
    }
    return moding(ret * allP(c));
}

int sorted(){
    return clc(0, 0) + clc(1, 1) - clc(0, 1);
}

int main()
{
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
        scanf("%d%d", &a[i].ff, &a[i].ss);
    cout << moding(allP(n) - sorted());
    return 0;
}
