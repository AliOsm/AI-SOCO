#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <iomanip>
#include <climits>
#include <cstdio>
#include <vector>
#include <string>
#include <stack>
#include <cmath>
#include <ctime>
#include <queue>
#include <list>
#include <map>
#include <set>

#define REP(i,n) for(int i = 0; i <(int)n; i++)
#define foreach(it,x) for(__typeof(x.begin()) it = x.begin() ; it!=x.end() ; it++ )

#ifdef KAZAR
    #define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
    #define eprintf(...)
#endif

using namespace std;

const int inf = (int)1e9 + 5757;

template<class T> inline void umax(T &a,T b){if(a<b) a = b;}
template<class T> inline void umin(T &a,T b){if(a>b) a = b;}
template<class T> inline T abs(T a){return a>0 ? a : -a;}
template<class T> inline T lcm(T a,T b){return a/gcd(a,b)*b;}

inline int read(){int x;scanf(" %d",&x);return x;}

int main(){

#ifdef KAZAR
    freopen("f.i","r",stdin);
    freopen("f.cik","w",stdout);
    freopen("error","w",stderr);
#endif

    int n = read();
    int c1 = read();
    int c2 = read();
    int ans = 0;

    for(int i = 0; i < n; i++){
        int t = read();
        if(t == 1){
            if(c1 > 0) c1--;
            else ans++;
        }else{
            if(c2 > 0) c2--;
            else if(c1 > 0) c1--;
            else ans++;
        }
    }

    cout << ans << endl;

    return 0;
}
