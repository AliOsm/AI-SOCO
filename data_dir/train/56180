#include <iostream>
#include <vector>
#include <string.h>
#include <deque>
#include <queue>
#include <algorithm>
#include <set>
#include <map>
#include <sstream>
#include <stack>
#include <iomanip>
#include <cmath>
#include <climits>
#include <complex>
#include <cmath>
#define fi first
#define se second
#define th second
#define FI first
#define SE second.first
#define TH second.second

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef long double ld;
typedef complex<double> cd;

const int maxN = 2e5 + 9, MOD = 998244353, maxV = 202;

int arreglo[maxN], n;

ll T;

int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    cin >> n >> T;
    
    for(int i = 0; i < n; i++){
        cin >> arreglo[i];
    }
    
    int vivos = n;
    
    ll answer = 0;
    
    while(T > 0){
        ll totsum = 0, maxi = 0, mini = 1e18 + 8;
        for(int i = 0; i < n; i++){
            totsum += arreglo[i];
            maxi = max(maxi, (ll)arreglo[i]);
            mini = min(mini, (ll)arreglo[i]);
        }
        
        if(mini > T || maxi == 0) break;
        
        ll cycles = max(0LL, T - maxi) / totsum;
        
        //cout << cycles << '\n';
        
        answer += cycles * vivos;
        T -= cycles * totsum;
        
        for(int i = 0; i < n; i++){
            if(!arreglo[i]) continue;
            if(arreglo[i] <= T){
                T -= arreglo[i];
                answer++;
            }
            else{
                arreglo[i] = 0;
                vivos--;
            }
        }
        for(int i = 0; i < n; i++){
            if(arreglo[i] > T){
                arreglo[i] = 0;
                vivos--;
            }
        }
        
        //cout << answer << ' ' << vivos << ' ' << T << '\n';
        
    }
    cout << answer << '\n';
}

/*
 aafff
 aaaff
 fafff
 affff
 aaaaa
 */


