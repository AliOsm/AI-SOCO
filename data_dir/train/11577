
//template by murugappan....Copied from chamow :p

#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define ld long double
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define priq(i,comp) priority_queue( i, vector< i >,comp)
template<class t>
t lcm(t a,t b)
{
    return ((a*b)/__gcd(a,b));
}
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

//end of template
const int maxn=1e5+4;
vector<int> adjlist[maxn];
int depth[maxn];
int odd,even;
int n,u,v;
void dfs(int cur,int p)
{
    if(depth[cur]%2==0)
        even++;
    else
        odd++;
    for(auto u:adjlist[cur])
    {
        if(u==p)
            continue;
        depth[u]=depth[cur]+1;
        dfs(u,cur);
    }
}
int main()
{
    /*
        assert(freopen("input.txt","r",stdin));
        assert(freopen("output.txt","w",stdout));
    */
    fastread;
    cin>>n;
    for(int i=1;i<n;i++)
    {
        cin>>u>>v;
        adjlist[u].pb(v);
        adjlist[v].pb(u);
    }
    dfs(1,0);
    ll ans=odd;
    ans=ans*even;
    ans-=(n-1);
    cout<<ans;
    return 0;
}

