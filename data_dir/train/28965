//#include <cstdio>
#include <iostream>

#include <cstring>

#include <string>
#include <vector>
#include <algorithm>
//#include <map>
//#include <set>
#include <queue>
//#include <stack>

using namespace std;

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

struct Song {
   int id;
   llong len, beauty;
   bool operator<(const Song& s) {
      if (beauty != s.beauty)
         return beauty > s.beauty;
      if (len != s.len)
         return len > s.len;
      return id < s.id;
   }
};

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(nullptr);
   cout.precision(10);
   cout << fixed;

   int N, K;
   cin >> N >> K;

   vector<Song> songs;
   REP(i, N) {
      int len, beauty;
      cin >> len >> beauty;
      songs.push_back({i, len, beauty});
   }
   sort(songs.begin(), songs.end());

   llong res = 0;
   llong len_topK = 0;
   priority_queue<int, vector<int>, greater<int> > topK;
   for (Song s : songs) {
   // cerr << s.beauty << ' ' << s.len << endl;
      topK.push(s.len);
      len_topK += s.len;
      if (SZ(topK) > K) {
         llong x = topK.top();
         topK.pop();
         len_topK -= x;
      }
      res = max(res, len_topK * s.beauty);
   }

   cout << res << endl;

   return 0;
}
