#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair <ll, ll> pll;

const int Max = 1e5 + 10;
const int Mod = 1e9 + 7;
const ll Inf = 1LL << 62;

int cnt[3];
int col[Max];
bool ok[Max];
vector <int> G[Max];

bool dfs( int src ) {
	cnt[col[src]]++;
	bool ret = 0;
	for( int x : G[src] ) {
		if( !col[x] ) {
			col[x] = 3 - col[src];
			ret |= dfs( x );
		}
		else if( col[x] == col[src] ) {
			ret = 1;
		}
	} return ret;
}

ll calc( ll n ) {
	return n * ( n - 1 ) / 2;
}

int main() {
#ifdef Mr_Emrul
	freopen("inputf.in", "r", stdin);
#endif ///Mr_Emrul

	//ios_base::sync_with_stdio(false);
	//cin.tie(0);
	
	int n, m, u, v;
	scanf("%d %d", &n, &m);
	if( m == 0 ) {
		printf("3 %lld\n", 1LL*n*(n-1)*(n-2)/6);
		return 0;
	}
	bool f = 0;
	for( int i=1; i<=m; i++) {
		scanf("%d %d", &u, &v);
		G[u].push_back( v );
		G[v].push_back( u );
		f |= ( ok[u] || ok[v] );
		ok[u] = ok[v] = 1;
	}
	if( !f ) {
		printf("2 %lld\n", 1LL*m*(n-2));
		return 0;
	}
	f = 0; ll res = 0;
	for( int i=1; i<=n; i++ ) {
		memset( cnt, 0, sizeof cnt );
		if( !col[i] ) {
			col[i] = 1;
			f |= dfs( i );
		} // cout << cnt[1] << " " << cnt[2] << endl;
		res += calc( cnt[1] ) + calc( cnt[2] );
	}
	if( f ) {
		printf("0 1\n");
	}
	else {
		printf("1 %lld\n", res);
	}
	return 0;
}