#include <bits/stdc++.h>

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//#pragma GCC optimize("Ofast")
//1.0 * clock() / CLOCKS_PER_SEC

#define fi first
#define se second
#define ll long long
#define dl double long

using namespace std;

const int NN = 1e3 + 7;
const int N = 2e5 + 7;
const int M = 22;
const ll mod = 1e9 + 7;
const ll inf = 1e18 + 7;
const dl rf = 1e-14;
const int B = sqrt(N);

vector < int > v;

bool ok( int x )
{
    if( x <= 10 )return true;
    int z = 0;
    while( x > 0 ){
        int y = x % 10;
        x /= 10;
        if( x == 0 && y > 0 && z == 0 )return true;
        z += (y > 0);
    }
    return false;
}

void solve1()
{
    int n;
    cin >> n;
    vector < int > ans;
    for( int i = 0; ; i++ ){
        if( v[i] <= n ){
            n -= v[i];
            ans.push_back(v[i]);
            i -= 1;
        }
        if( !n )break;
    }
    cout << (int)ans.size() << "\n";
    for( auto x : ans ){
        cout << x << " ";
    }
    cout << "\n";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    for( int i = 1; i < N; i++ ){
        if( ok(i) )v.push_back(i);
    }
    reverse( v.begin() , v.end() );
    int cghf = 1;cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
