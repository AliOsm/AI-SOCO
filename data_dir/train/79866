#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

const long long MAX = 5100000;
const long long INF = 1LL << 60;
const long long MOD = 1'000'000'007LL;
const long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	ll n, m; scanf("%lld %lld", &n, &m);
	vector<vector<ll>> a(n, vector<ll>(m));
	vector<vector<ll>> b(n, vector<ll>(m));
	for (ll i = 0; i < n; i++) {
		for (ll j = 0; j < m; j++) {
			scanf("%lld", &a[i][j]);
		}
	}
	for (ll i = 0; i < n; i++) {
		for (ll j = 0; j < m; j++) {
			scanf("%lld", &b[i][j]);
		}
	}
	bool flag = true;
	for (ll i = 0; i < m; i++) {
		ll h = 0;
		ll w = i;
		multiset<ll> ma, mb;
		while (h < n && w >= 0) {
			ma.insert(a[h][w]);
			mb.insert(b[h][w]);
			h++; w--;
		}
		if (ma != mb) flag = false;
	}
	for (ll i = 0; i < n; i++) {
		ll h = i;
		ll w = m - 1;
		multiset<ll> ma, mb;
		while (h < n && w >= 0) {
			ma.insert(a[h][w]);
			mb.insert(b[h][w]);
			h++; w--;
		}
		if (ma != mb) flag = false;
	}

	if (flag) puts("YES");
	else puts("NO");
	return 0;
}