#pragma GCC optimize("omit-frame-pointer")
#pragma GCC optimize("unroll-loops")

#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define form(i,a,n) for (int i=(a);i<(n);i++)
#define forn(i,a,n) for (int i=(a);i<(n);i++)
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    for(int i = str.length()-1; i >= 0; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const double eps = 1e-7;
const int maxn = 3e6 + 46;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 7;

pair<int, int> a[maxn];
int ans[maxn];
vector<pair<int, int> > f;

void solve(){
    int n;
    cin >> n;
    f.clear();
    for(int i = 1; i <= n; i++){
        cin >> a[i].fr >> a[i].sc;
        f.pb({a[i].fr, -i});
        f.pb({a[i].sc + 1, i});
    }
    sort(f.begin(), f.end());
    for(int i = 0; i <= n; i++)
        ans[i] = 0;
    set<pair<int, int> > s;
    int t = 0;
    for(pair<int, int> x : f){
        while(t != x.fr){
            if(s.size()){
                ans[(*s.begin()).sc] = t;
                s.erase(s.find(*s.begin()));
            }
            t++;
        }
        x.sc *= -1;
        if(x.sc > 0){
            s.insert(x);
        }
        else{
            x.sc *= -1;
            x.fr = a[x.sc].fr;
            if(s.count(x))
                s.erase(x);
        }
    }
    for(int i = 1; i <= n; i++)
        cout << ans[i] << " ";
    cout << "\n";
}

int main(){
//    srand(228);
    srand(time(0));
    fast_io;
    cin.tie(0);
//    input;
//    output;
//    for(int i = 0; i < 100000; i++)
//        brut();
//    output;
//    freopen("money.in", "r", stdin);
//    freopen("money.out", "w", stdout);
     int t;
     cin >> t;
//    scanf("%d", &t);
//    int cnt = 1;
     while(t--){
//        printf("Case %d: ", cnt);
//    while(1)
        solve();
//         cout << "\n";
//        puts("");
//        cnt++;
     }
    return 0;
}