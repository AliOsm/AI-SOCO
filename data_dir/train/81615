#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set                                                            \
  tree<int, null_type, less<int>, rb_tree_tag,                                 \
       tree_order_statistics_node_update>
#define ll long long int
#define ld double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define pll pair<ll, ll>
const ll mod = 998244353;
const ll M = 2e5 + 5;
ll a[M],f[M],t[M],val[M];
ordered_set s;
ll power(ll a,ll b)
{
    ll val=1;
    while(b)
    {
        if(b%2)
            val=(val*a)%mod;
        b/=2;
        a=(a*a)%mod;
    }
    return val;
}
int main() {
  ios::sync_with_stdio(0);
  cin.tie(0);
  cout.tie(0);
  ll n;
  cin>>n;
  for(ll i=1;i<=n;i++)
  {
    cin>>a[i];
    f[a[i]]=1;
    t[i]=t[i-1];
    if(a[i]==-1)
        t[i]++;
  }
  ll num=0;
  ll deno=t[n];
  ll ini=0;
  for(ll i=1;i<=n;i++)
  {
      if(!f[i])
      {
          val[i]++;
      }
      val[i]+=val[i-1];
  }
  for(ll i=n;i>=1;i--)
  {
      if(a[i]!=-1)
      {
        ini+=s.order_of_key(a[i]);
        s.insert(a[i]);
      }
  }
  for(ll i=1;i<=n;i++)
  {
      if(a[i]!=-1)
      {
          ll p=val[n]-val[a[i]];
          num=(num+(p*t[i]))%mod;
          num=(num+(val[a[i]]*(t[n]-t[i])))%mod;
      }
  }
  cout<<(ini+(num*power(deno,mod-2))%mod+(((t[n]*(t[n]-1))%mod)*power(4,mod-2)))%mod;
}