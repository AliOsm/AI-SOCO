#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef pair< deque<int>, deque<int> > state;

int main() {
	ios_base::sync_with_stdio(false);

	int n;
	cin >> n;

	deque<int> dq[2];
	int k[2];
	fori(i, 0, 2) {
		cin >> k[i];
		fori(j, 0, k[i]) {
			int x; 
			cin >> x;
			dq[i].push_front(x);
		}
	}

	set<state> visited;
	int fights = 0;
	while(!dq[0].empty() && !dq[1].empty()) {
		state current_state = make_pair(dq[0], dq[1]);
		if(visited.count(current_state)) {
			cout << -1 << '\n';
			return 0;
		}
		visited.insert(current_state);

		int c0 = dq[0].back(), c1 = dq[1].back();
		dq[0].pop_back(), dq[1].pop_back();
		if(c0 > c1) {
			dq[0].push_front(c1);
			dq[0].push_front(c0);
		}
		else {
			dq[1].push_front(c0);
			dq[1].push_front(c1);
		}
		fights++;
	}
	
	int winner = dq[0].empty() + 1;
	cout << fights << " " << winner << '\n';

	return 0;
}

