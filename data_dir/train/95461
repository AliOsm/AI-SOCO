#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
const int INF = ~(1<<31);
const double pi = acos(-1);

bool check(vi arr) {
	set<int> ok;
	iter(it,arr) {
		ok.insert(*it);
	}
	return ok.size() == 1;
}

bool checkt(vi arr) {
	int cnt[20];
	memset(cnt,0,sizeof(cnt));
	rep(i,0,arr.size()) cnt[arr[i]]++;
	rep(i,0,20) if(cnt[i] == 3) return false;
	return true;
}

bool second(vi a, vi b) {
	set<int> ok;
	iter(it,a) ok.insert(*it);
	iter(it,b) ok.insert(*it);
	if(ok.size() == 3) return true;
	return false;
}

int main() {
    cin.sync_with_stdio(false);
	vector<vi> k;
	vi hold;
	rep(i,0,24) {
		if((i) % 4 == 0 && i != 0) {
			k.pb(hold);
			hold.clear();
		}
		int n;
		cin >> n;
		hold.pb(n);
	}
	k.pb(hold);
	int cnt = 0;
	bool can = false;
	rep(i,0,6) {
		if(!checkt(k[i])) can = true;
	}
	if(can) {
		cout << "NO" << endl;
		return 0;
	}
	if(check(k[1]) && check(k[5])) cnt++;
	if(check(k[0]) && check(k[2])) cnt++;
	if(check(k[3]) && check(k[4])) cnt++;
	int dacounter = 0;
	if(check(k[0])) dacounter++;
	if(check(k[1])) dacounter++;
	if(check(k[2])) dacounter++;
	if(check(k[3])) dacounter++;
	if(check(k[4])) dacounter++;
	if(check(k[5])) dacounter++;
	if(dacounter != 2) {
		cout << "NO" << endl;
		return 0;
	}
	if(cnt == 3) {
		cout << "NO" << endl;
		return 0;
	} else {
		cnt = 0;
		if(check(k[1]) && check(k[5]) && second(k[0],k[4]) && second(k[2],k[4]) && second(k[2],k[3]) && second(k[0],k[3]))  cnt++;
		if(check(k[0]) && check(k[2]) && second(k[3],k[1]) && second(k[1],k[4]) && second(k[4],k[5]) && second(k[5],k[3]))  cnt++;
		if(check(k[3]) && check(k[4]) && second(k[0],k[1]) && second(k[1],k[2]) && second(k[2],k[5]) && second(k[0],k[5]))  cnt++;

		if(cnt > 0) {
			cout << "YES" << endl;
		} else cout << "NO" << endl;
	
	}
    return 0;
}


