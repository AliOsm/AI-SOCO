//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")
 
#include <stdio.h>
#include <bits/stdc++.h>
 
#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)
 
using namespace std;
 
inline void setmin(int &x, int y) { if (y < x) x = y; }
inline void setmax(int &x, int y) { if (y > x) x = y; }
inline void setmin(ll &x, ll y) { if (y < x) x = y; }
inline void setmax(ll &x, ll y) { if (y > x) x = y; }
 
const int N = 500;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

int dp[N + 1][N * 10 + 1];

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("a.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    cout << fixed;
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n, k;
    cin >> n >> k;
    map<int, int> a, f;
    int h[k];
    rep(i, 0, n * k)
    {
        int x;
        cin >> x;
        a[x]++;
    }
    rep(i, 0, n)
    {
        int x;
        cin >> x;
        f[x]++;
    }
    rep(i, 0, k)
        cin >> h[i];

    dp[0][0] = 0;
    rep(i, 1, n + 1)
    {
        rep(j, 0, n * k + 1)
            rep(cnt, 0, k + 1)
                if (cnt <= j)
                    setmax(dp[i][j], dp[i - 1][j - cnt] + (cnt > 0 ? h[cnt - 1] : 0));
    }

    int ans = 0;
    rep(x, 1, 100000 + 1)
        ans += dp[f[x]][a[x]];
    cout << ans << "\n";
    return 0;
}
