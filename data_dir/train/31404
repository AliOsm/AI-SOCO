#include "bits/stdc++.h"
using namespace std;
const int N=2e5+20;
int n,a[N],b[N],i,j;
vector <int> primes,divisors;
bool is_prime[N];


void find_prime_divisors(int x)
{
	int r=sqrt(x);
	for(int i=0;i<primes.size() and primes[i]<=r;i++)
	{
		if(x%primes[i]) continue;
		divisors.push_back(primes[i]);
		while(x%primes[i]==0) x/=primes[i];
	}
	if(x!=1) divisors.push_back(x);
}

int main()
{
	for(i=2;i<N;i++) is_prime[i]=true;
	for(i=1;i*i<N;i++)
		if(is_prime[i])
			for(j=i*i;j<N;j+=i) is_prime[j]=false;
	for(i=2;i<N;i++)
		if(is_prime[i])
			primes.push_back(i);

	scanf("%d",&n);
	for(i=0;i<n;i++) scanf("%d%d",&a[i],&b[i]);

	find_prime_divisors(a[0]),find_prime_divisors(b[0]);
	for(auto divisor:divisors)
	{
		for(i=0;i<n;i++)
			if(a[i]%divisor!=0 and b[i]%divisor!=0) break;
		if(i==n) return 0 * printf("%d",divisor);
	}
	printf("-1");
}