/// PELE SAID I'M THE BEST IN THE WORLD
/// I SAY I'M THE BEST IN THE WORLD
/// THAT'S HOW YOU SHOULD DO IT.
/// NEVER LOOK AT AN OPPONENT WITH INFERIORITY!
/// John Best, Balon d'Or
#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 100005
#define pb push_back
#define VAL 100005
#define INF (1LL<<62)
#define eps 0.000000000001

using namespace std;

int n,ok;
long long put[100],st,dr,len;

struct inter
{
    long long st,dr;
    bool operator <(const inter A) const
    {
        return st<A.st;
    }
} bad[Nmax];

int main()
{
    int i,j,h,m,rasp;
    long long x,y,niv,l,kkt;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>h>>m; --h;
    put[0]=1;
    for(i=1;i<=h+2;++i) put[i]=1LL*put[i-1]*2;
    while(m--)
    {
        cin>>niv>>x>>y>>rasp; --niv;
        l=y-x+1;
        x*=put[h-niv]; y=x-1+l*put[h-niv];
        if(rasp)
        {
            if(!ok)
            {
                st=x; dr=y; ok=1;
            }
            else
            {
                if(x>dr || y<st)
                {
                    cout<<"Game cheated!"; return 0;
                }
                st=max(st,x); dr=min(dr,y);
            }
        }
        else
        {
            ++len;
            bad[len].st=x; bad[len].dr=y;
        }
    }
    if(!ok)
    {
        st=put[h]; dr=put[h+1]-1;
    }
    if(st>dr)
    {
        cout<<"Game cheated!"; return 0;
    }
    ++len;
    bad[len].st=-1; bad[len].dr=0;
    ++len;
    bad[len].st=put[h+1]; bad[len].dr=put[h+1];
    sort(bad+1,bad+len+1);
    //for(i=1;i<=len;++i) cout<<bad[i].st<<" "<<bad[i].dr<<"\n";
    long long cnt=0;
    if(len)
    {
        long long capat=bad[1].dr;
        for(i=2;i<=len;++i)
        {
            if(bad[i].st>capat+1)
            {
                long long st1=capat+1,dr1=bad[i].st-1;
                if(!(dr1<st || st1>dr))
                {
                    st1=max(st1,st); dr1=min(dr1,dr);
                    //cout<<st1<<" "<<dr1<<"\n";
                    if(st1<=dr1)
                    {
                        kkt=st1; cnt+=dr1-st1+1;
                    }
                }
            }
            capat=max(capat,bad[i].dr);
        }
    }
    if(cnt>1) cout<<"Data not sufficient!";
    else
        if(cnt==1) cout<<kkt;
        else cout<<"Game cheated!";
    return 0;
}
