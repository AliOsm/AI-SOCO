#include<bits/stdc++.h>
using namespace std;
const int MXN = 50009 , STF = 400;
bool is[1009][MXN];
int n  , mm , QN , state[MXN] , ans[MXN] , heavy[MXN];
set < int > adj[MXN];
string cmd[1<<18]; int aa[1<<18] , bb[1<<18];
int main(){
    scanf("%d %d %d",&n,&mm,&QN);
    int oo; scanf("%d",&oo); while(oo--){ int x; scanf("%d",&x); state[x] = 1;}
    while(mm--){
        int a , b;
        scanf("%d %d",&a,&b);
        adj[a].insert(b);
        adj[b].insert(a);
        if(adj[a].size() >= STF) heavy[a] = 1;
        if(adj[b].size() >= STF) heavy[b] = 1;
    }
    for(int j=1;j<=QN;j++){
        char ccc[4]; int a , b;
        scanf("%s %d",ccc,&a);
        if(ccc[0] == 'A' || ccc[0] == 'D') scanf("%d",&b);
        cmd[j] = ccc;
        aa[j] = a , bb[j] = b;
        if(cmd[j][0] == 'A'){
            adj[a].insert(b); adj[b].insert(a);
            if(adj[a].size() >= STF) heavy[a] = 1;
            if(adj[b].size() >= STF) heavy[b] = 1;
        }
        if(cmd[j][0] == 'D'){
            adj[a].erase(b);
            adj[b].erase(a);
        }
    }
    for(int j = QN ; j ; j--){
        int a = aa[j] , b = bb[j];
        if(cmd[j][0] == 'A'){
            adj[a].erase(b);
            adj[b].erase(a);
        }
        if(cmd[j][0] == 'D'){
            adj[a].insert(b);
            adj[b].insert(a);
        }
    }
    vector < int > H;
    int timer = 0;
    for(int j=1;j<=n;j++){
        if(heavy[j]){
            H.push_back(j);
            heavy[j] = ++timer;
            for(auto pp : adj[j])
                is[heavy[j]][pp] = 1;
        }
        else{
            if(state[j])
                for(auto pp : adj[j])
                    ++ans[pp];
        }
    }
    for(int j=1;j<=QN;j++){
        if(cmd[j] == "O"){
            int x = aa[j];
            state[x] = 1;
            if(!heavy[x])
                for(auto &pp : adj[x])
                    ++ans[pp];
        }
        if(cmd[j] == "F"){
            int x = aa[j];
            state[x] = 0;
            if(!heavy[x])
                for(auto &pp : adj[x])
                    --ans[pp];
        }
        if(cmd[j] == "A"){
            int a = aa[j] , b = bb[j];
            if(heavy[a]) is[heavy[a]][b] = 1;
            else adj[a].insert(b);
            if(heavy[b]) is[heavy[b]][a] = 1;
            else adj[b].insert(a);
            if(!heavy[a] && state[a]) ++ans[b];
            if(!heavy[b] && state[b]) ++ans[a];
        }
        if(cmd[j] == "D"){
            int a = aa[j] , b = bb[j];
            if(heavy[a]) is[heavy[a]][b] = 0;
            else adj[a].erase(b);
            if(heavy[b]) is[heavy[b]][a] = 0;
            else adj[b].erase(a);
            if(!heavy[a] && state[a]) --ans[b];
            if(!heavy[b] && state[b]) --ans[a];
        }
        if(cmd[j] == "C"){
            int x = aa[j] , sol = ans[x];
            for(auto &who : H){
                if(state[who])
                    if(is[heavy[who]][x])
                        ++sol;
            }
            printf("%d\n",sol);
        }
    }
}
