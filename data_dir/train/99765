#include <bits/stdc++.h>

#define eb emplace_back
#define pb push_back
#define ll long long
#define ld long double
#define mp make_pair
#define ull unsigned long long
#define all(s) s.begin(), s.end()
#define sz(a) (int)a.size()

const int INF = (int)1e9 + 7;
const int N = (int)7070 + 7;
const int MAXN = (int)3e5 + 228;

using namespace std;

int n, a[MAXN];
int nxt[MAXN * 10][2];
int sz = 1;

void add(int x) {
  int v = 1;
  for (int i = 29; i >= 0; --i) {
    int bit = ((x >> i) & 1);
    if (!nxt[v][bit]) nxt[v][bit] = ++sz;
    v = nxt[v][bit];
  }
}

int get(int v = 1, int bit = 29) {
  if (!v) return 0;
  if (!nxt[v][1]) return get(nxt[v][0], bit - 1);
  if (!nxt[v][0]) return get(nxt[v][1], bit - 1);
  int a = get(nxt[v][0], bit - 1) ^ (1 << bit),
      b = get(nxt[v][1], bit - 1) ^ (1 << bit);
  return min(a, b);
}

int main() {
  ios_base::sync_with_stdio(0);
  cin.tie(0);

#ifdef Local
  freopen(".in", "r", stdin);
#else
  // freopen("sum.in", "r", stdin);
  // freopen("sum.out", "w", stdout);
#endif
  cin >> n;
  // memset(dp, 255, sizeof dp);
  for (int i = 1; i <= n; ++i) {
    cin >> a[i];
    add(a[i]);
  }
  cout << get() << endl;
  return 0;
}