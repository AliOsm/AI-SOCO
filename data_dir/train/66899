#include <bits/stdc++.h>
#define int long long
using namespace std;
const int N = 1123456;
int mod = 1e9 + 7;
const int inf = 1e9 + 7;
int read()
{
    int x;
    scanf("%I64d", &x);
    return x;
}
int bin(int n, int m) {
    int res = 1;
    while(m > 0) {
        if(m % 2 == 1) {
            res *= n;
            res %= mod;
        }
        n *= n;
        m /= 2;
        n %= mod;
    }
    return res;
}
int fib(int x) {
    int i, j, k;
    int a[3][3];
    int b[3][3];
    int c[3][3];
    for(i = 1; i <= 2; i ++) {
        for(j = 1; j <= 2; j ++) {
            a[i][j] = b[i][j] = 0;
        }
    }
    a[1][1] = 2;
    a[1][2] = 3;
    b[1][2] = 1;
    b[2][1] = 1;
    b[2][2] = 1;
    x --;
    while(x > 0) {
        for(i = 1; i <= 2; i ++)
            for(j = 1; j <= 2; j ++)
                c[i][j] = 0;
        if(x % 2 == 0) {
            for(i = 1; i <= 2; i ++) {
                for(j = 1; j <= 2; j ++) {
                    for(k = 1; k <= 2; k ++) {
                        c[i][j] += (b[i][k] * b[k][j]) % mod;
                    }
                }
            }
            for(i = 1; i <= 2; i ++)
                for(j = 1; j <= 2; j ++)
                    b[i][j] = c[i][j] % mod;
            x /= 2;
        }
        else {
            for(j = 1; j <= 2; j ++) {
                for(k = 1; k <= 2; k ++) {
                    c[1][j] += (a[1][k] * b[k][j]) % mod;
                }
            }
            for(j = 1; j <= 2; j ++)
                a[1][j] = c[1][j] % mod;
            x --;
        }
    }
    return a[1][1];
}
main()
{
    int n, m, i, j, k, l;
    cin >> n >> k >> l >> mod;
    int cnt = 0, t = 0;
    while(k > 0) {
        t += (k % 2);
        cnt ++;
        k /= 2;
    }
    if(cnt > l) {
        puts("0");
        return 0;
    }
    cout << (bin(fib(n), l - t) * bin((bin(2, n) - fib(n) + mod) % mod, t)) % mod;
}
