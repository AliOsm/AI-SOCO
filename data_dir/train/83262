#include <bits/stdc++.h>
using namespace std;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl




typedef long long ll;
const int maxn = 1e6 + 5;



int n;
ll a[maxn];

ll lcm(ll x, ll y) {
    return x/__gcd(x,y)*y;
}

ll pw(ll x, ll y) {
    ll res=1;
    while (y) {
	if (y%2) {
	    res=res*x;
	}
	x=x*x;
	y=y/2;
    }
    return res;
}

ll brute() {

    vector<ll> v;
    for (int i=0; i<n; i++) {
	for (int j=i+1; j<n; j++) {
	    v.push_back(lcm(a[i],a[j]));
	}
    }
    ll res = v.front();
    for (ll x: v) {
	res = __gcd(res, x);
    }

    return res;
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);

    cin>>n;
    for (int i=0; i<n; i++) {
	cin>>a[i];
    }

    // for (int i=0; i<n; i++) {
    // 	for (int j=i+1; j<n; j++) {
    // 	    cout<<a[i]<<" "<<a[j]<<": "<<lcm(a[i],a[j])<<endl;
    // 	}
    // }

    map<ll,vector<ll>> occ;

    for (int i=0; i<n; i++) {
	ll x = a[i];
	map<ll,ll> fac;
	for (ll i=2; i*i<=x; i++) {
	    if (x%i==0) {
		while (x%i==0) {
		    fac[i]++;
		    x=x/i;
		}
	    }
	}
	if (x>1) {
	    fac[x]++;
	}

	for (auto p: fac) {
	    occ[p.first].push_back(p.second);
	}
    }


    ll res = 1;
    for (auto &p: occ) {
	sort(p.second.begin(), p.second.end());
	int len = p.second.size();
	ll f = 0;
	if (len == n-1) {
	    f = p.second[0];
	} else if (len == n) {
	    f = p.second[1];
	}
	// cerr<<p.first<<": "<<f<<endl;
	// watch(len);
	res *= pw(p.first, f);
    }


    // ll x = brute();
    // assert(x==res);


    out(res);
  

    return 0;
}
