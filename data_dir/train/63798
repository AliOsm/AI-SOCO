//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define vi vector<int>

const int maxn=(int)(1e5+5);
const ll mod=(ll)(998244353);
int a[maxn];

ll gcd(ll a,ll b)
{
    if(b==0)
    {
        return a;
    }

    else
    {
        return gcd(b,a%b);
    }
}

ll get(ll m)
{
    return (m*(m+1))/2ll;
}

int main()
{
    ios_base::sync_with_stdio(0);

    int m,a,b;

    cin>>m>>a>>b;

    int curr=0;vector<int> v;

    v.pb(0);

    while(true)
    {
        curr+=a;v.pb(curr);

        while(curr-b>=0)
        {
            curr-=b;

            v.pb(curr);
        }

        if(curr==0)
        {
            break;
        }
    }

    v.pop_back();ll res=0,curr_max=0;

    for(int i=0;i<v.size();i++)
    {
        curr_max=max(curr_max,v[i]*1ll);

        if(curr_max<=m)
        {
            res+=(m-curr_max+1);
        }
    }

    ll now=gcd(a,b)*((a+b)/gcd(a,b));

  //  assert(v.size()*1ll==now);

    if(now<=m)
    {
        ll muls=m/gcd(a,b)-((now-1)/gcd(a,b));

        ll add=m*muls;res+=muls;

        ll now1=m/gcd(a,b),now2=(now-1)/gcd(a,b);

        ll val1=get(now1)*gcd(a,b),val2=get(now2)*gcd(a,b);

        val1-=val2;

        res+=add;res-=val1;
    }

    cout<<res<<endl;


    return 0;
}
