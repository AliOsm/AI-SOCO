#include<bits/stdc++.h>
#define god dimasi5eks
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007
#define dancila 3.14159265359
#define eps 1e-9

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    ll x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
long long rand_seed()
{
    long long a = rng();
    return a;
}
int n, m, viz[3][200002], nr, a, b;
vector<int> v[200002];
void dfs(int nod, int av, int wh)
{
    viz[wh][nod] = 1;
    for(int i = 0; i < v[nod].size(); ++i)
    {
        int vecin = v[nod][i];
        if(!viz[wh][vecin] && vecin != av)
            dfs(vecin, av, wh);
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    for(; t; --t)
    {
        cin >> n >> m >> a >> b;
        for(int i = 1; i <= m; ++i)
        {
            int a, b;
            cin >> a >> b;
            v[a].push_back(b);
            v[b].push_back(a);
        }
        dfs(a, b, 1);
        dfs(b, a, 2);
        int nr1 = 0, nr2 = 0;
        for(int i = 1; i <= n; ++i)
            if(i != a && i != b)
            {
                if(viz[1][i] && !viz[2][i])
                    ++nr1;
                if(viz[2][i] && !viz[1][i])
                    ++nr2;
            }
        cout << 1LL * nr1 * nr2 << '\n';
        for(int i = 1; i <= n; ++i)
            v[i].clear(), viz[1][i] = viz[2][i] = 0;
    }
    return 0;
}
