#include<bits/stdc++.h>
using namespace std;
#define M 300007

typedef long long ll;
typedef pair< ll, ll > pll;
typedef pair< int , int >pii;

vector< int >edg[M];
char s[M];
int color[M];

int possible = 1;

void dfs1(int u)
{
    if (possible==0) return;

    color[u] = 1;

    for (int v : edg[u]) {
        if (color[v]==1) {
            possible = 0;
            break;
        }

        if (color[v]==0) dfs1(v);
    }

    if (possible==0) return;

    color[u] = 2;
}

int dp[M];
int nw;

void dfs(int u)
{
    if (color[u]==nw) return;

    color[u] = nw;

    dp[u] = 0;
    if (s[u-1]-'a'==nw) dp[u]++;

    int mx = 0;
    for (int v : edg[u]) {
        dfs(v);
        mx = max(mx, dp[v]);
    }

    dp[u] += mx;
}

int main()
{
    int n, m;

    scanf("%d %d", &n, &m);
    scanf("%s", s);

    while (m--) {
        int x, y;
        scanf("%d %d", &x, &y);
        edg[x].push_back(y);

        if (x==y) {
            printf("%d\n", -1);
            return 0;
        }
    }


    for (int i = 1; i <= n; i++) dfs1(i);

    if (possible==0) {
        printf("%d\n", -1);
        return 0;
    }

    memset(color, -1, sizeof color);

    int ans = 0;

    for (nw = 0; nw  < 26; nw++) {
        for (int i = 1; i <= n; i++) {
            dfs(i);

            ans = max(ans, dp[i]);
        }
    }

    printf("%d\n", ans);

    return 0;
}
