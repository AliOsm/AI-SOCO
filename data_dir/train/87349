/*input
1000 354 63 937
7 2 2 5
5 1 3 2
*/
#include <iostream>
#include <cstdio>
#include <vector>
#include <functional>
#include <math.h>
#include <string.h>
#include <utility>
#include <algorithm>
#include <iomanip>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <bitset>
#include <list>
#include <stdlib.h>
#include <list>
#include <assert.h>
#include <time.h>
#include <fstream>
#include <sstream>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define ll long long
#define N 100005
// const int INF = 1e18;
int n, k, a, b;
vector<char> order;

void verify(bool x) {
	if (!x) {
		cout << "NO"; exit(0);
	}
}
int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n >> k >> a >> b;
	verify(a + b == n);
	if (a < b) {
		int cur = 0;
		for (int i = 1; i <= n; i++) {
			if (cur == k) {
				order.push_back('G'); a--;
				verify(a >= 0);
				cur = 0;
				continue;
			}
			order.push_back('B'); cur++; b--;
			verify(b >= 0);
			if ((n - i) & 1) {
				if (order.back() == 'G' && a == b - 1) break;
				else if (order.back() == 'B' && b == a - 1) break;
			}
			else {
				if (a == b) break;
			}
		}
		while (a || b) {
			if (order.back() == 'G') {
				b--; order.push_back('B');
			}
			else {
				a--; order.push_back('G');
			}
		}
	}
	else {
		swap(a, b);
		int cur = 0;
		for (int i = 1; i <= n; i++) {
			if (cur == k) {
				order.push_back('B'); a--;
				verify(a >= 0);
				cur = 0;
				continue;
			}
			order.push_back('G'); cur++; b--;
			verify(b >= 0);
			if ((n - i) & 1) {
				if (order.back() == 'B' && a == b - 1) break;
				else if (order.back() == 'G' && b == a - 1) break;
			}
			else {
				if (a == b) break;
			}
		}
		while (a || b) {
			if (order.back() == 'B') {
				b--; order.push_back('G');
			}
			else {
				a--; order.push_back('B');
			}
		}
	}
	for (int i = 0; i < order.size(); i++) cout << order[i];
}