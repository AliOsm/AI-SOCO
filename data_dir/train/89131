#include <bits/stdc++.h>

using namespace std;

int const N = 1001000;
long long const mod = 1000000000039LL;
long long const d = 1000009;

int n, m;
vector<int> e[N];
long long q1[N], q2[N];
long long ans;

int main() {
//	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; ++i) {
		int a, b;
		scanf("%d%d", &a, &b);
		e[a].push_back(b);
		e[b].push_back(a);
	}
	for (int v = 1; v <= n; ++v) {
		sort(e[v].begin(), e[v].end());
		long long h1 = 0, h2 = 0;
		bool ok = false;
		for (int i = 0; i < (int)e[v].size(); ++i) {
			if (!ok && e[v][i] > v) {
				h2 = (d * h2 + v) % mod;
				ok = true;
			}
			h1 = (d * h1 + e[v][i]) % mod;
			h2 = (d * h2 + e[v][i]) % mod;
		}
		if (!ok) {
			h2 = (d * h2 + v) % mod;
		}
		q1[v - 1] = h1;
		q2[v - 1] = h2;
	}
	sort(q1, q1 + n);
	sort(q2, q2 + n);
	for (int j, i = 0; i < n; i = j) {
		j = i;
		while (j < n && q1[j] == q1[i]) {
			++j;
		}
		ans += 1LL * (j - i) * (j - i - 1) / 2;
	}
	for (int j, i = 0; i < n; i = j) {
		j = i;
		while (j < n && q2[j] == q2[i]) {
			++j;
		}
		ans += 1LL * (j - i) * (j - i - 1) / 2;
	}
	printf("%I64d\n", ans);
	return 0;
}