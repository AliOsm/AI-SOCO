#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define rep(i,a,b) for(int i=a;i<=b;++i)
#define nl '\n'
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define pb push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
const int N=1e6+9;
const ll mod=1e9+7;

map<string,ll> mpp,mpp1;
map<ll,string> mp,mp1;
vector<ll> v;
set<string> st;
ll c[N],t[] = {0, 2,4,9,10,11};
ll a[N], seg[N<<2] , lazy[N<<2];

void build( ll first, ll last, ll node)
{
    if(first== last)
    {
        seg[node]=a[first];
        return;
    }
    ll mid= first+last >>1;
    build(first, mid, node<<1);
    build(mid+1, last, node<<1|1);
    seg[node]= min (seg[node<<1], seg[node<<1|1]);
}


void update(ll first , ll last, ll node , ll left, ll right, ll val)
{
    if(lazy[node])
    {
        seg[node]+=lazy[node];
        if(first!=last){
          lazy[node<<1]+=lazy[node];
        lazy[node<<1|1]+=lazy[node];
        }
        lazy[node]=0;
    }
    if(first > right || last< left)return ;
    if(first>=left && last<=right)
    {
        seg[node]+=val;
        if(first!=last)
        {
        lazy[node<<1]+=val;
        lazy[node<<1|1]+=val;
        }
        return;
    }
    ll mid= first+last >>1;
    update(first, mid, node<<1 , left, right,val);
    update(mid+1, last, node<<1|1, left, right,val);
    seg[node]= min (seg[node<<1], seg[node<<1|1]);
}

ll query( ll first, ll last , ll node , ll left, ll right)
{

    if(lazy[node])
    {
        seg[node]+=lazy[node];
        if(first!=last){
          lazy[node<<1]+=lazy[node];
        lazy[node<<1|1]+=lazy[node];
        }
        lazy[node]=0;
    }
    if(first>right || last< left)return 1e18;
    if(first>=left &&  last<=right)return seg[node];
    ll mid= first+last >>1;
    ll p= query(first, mid, node<<1, left, right);
    ll q= query(mid+1, last, node<<1|1, left, right);
    return min(p,q);
}

void solve(){
 ll n;
  scanf("%I64d",&n);

      //printf("%I64d\n",n);
  for(ll i=1;i<=n;i++)
    scanf("%I64d",a+i);
 build(1,n,1);
 ll q;
  scanf("%I64d",&q);
 while(q--)
 {
     ll l, r;
     char ch;scanf("%I64d%I64d%c",&l,&r,&ch);

       l++;
       r++;  //cout<<l<<" "<<r<<" "<<ch<<nl;
     if(ch=='\n')
     {ll ans;
        if(l>r)
         {
             ll p= query(1,n,1,l,n);
             ll q= query(1,n,1,1,r);
             ans=min(p,q);
         }
         else ans=query(1,n,1,l,r);

      printf("%I64d\n",ans);
     }
     else {
         ll val;
      scanf("%I64d",&val);
         //cout<<l<<" "<<r<<" "<<val<<"b ";
         if(l>r)
         {
             update(1,n,1,l,n,val);
             update(1,n,1,1,r,val);
         }
         else update(1,n,1,l,r,val);
     }
 }

}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll t=1;
    //cin>>t;
    //if(t^1)exit(0);
    while(t--)solve();

}
