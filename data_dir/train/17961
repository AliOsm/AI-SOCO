#include <bits/stdc++.h>
#define pb  push_back

using namespace std;
using ll = long long int;
const int MAXN = 105, MAXMASK = (1 << 17);

int dp[MAXN][MAXMASK], link[MAXN][MAXMASK], val[MAXN][MAXMASK];

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	vector<int> primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59};
	auto mask = [&primes] (int n)
	{
		int ret = 0;
		for (int i = 0; i < (int)primes.size(); ++i)
			if (n % primes[i] == 0)
				ret += (1 << i);
		return ret;
	};
	
	int n; cin >> n;
	int a[n];
	for (int i = 0; i < n; ++i)
	{
		cin >> a[i];
	}
	for (int i = 0; i < n; ++i)
		for (int mask = 0; mask < MAXMASK; ++mask)
			dp[i][mask] = MAXMASK;
	for (int i = 1; i < 60; ++i)
	{
		if (abs(a[0] - i) < dp[0][mask(i)])
		{
			dp[0][mask(i)] = abs(a[0] - i);
			val[0][mask(i)] = i;
		}
	}
	for (int i = 1; i < n; ++i)
	{
		for (int j = 1; j < 60; ++j)
		{
			int x = mask(j);
			for (int M = 0; M < MAXMASK; ++M)
			{
				if (!(M & x))
				{
					if (dp[i][M | x] > dp[i-1][M] + abs(a[i] - j))
					{
						dp[i][M | x] = dp[i-1][M] + abs(a[i] - j);
						link[i][M | x] = M;
						val[i][M | x] = j;
					}
				}
			}
		}
	}
	vector<int> ans;
	int final = 0, x = 1;
	for (int mask = 0; mask < MAXMASK; ++mask)
	{
		if (dp[n-1][mask] < dp[n-1][final])
		{
			final = mask;
			x = val[n-1][mask];
		}
	}
	ans.pb(x);
	for (int i = n-1; i > 0; --i)
	{
		final = link[i][final];
		ans.pb(val[i-1][final]);
	}
	for (int i = n-1; i >= 0; --i)
		cout << ans[i] << ' ';
}