#include<bits/stdc++.h>

using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long Long;
typedef pair<int,int> PII;

int V[2010], N, A[10];
int mem[2010][1<<12];

int dp(int a, int b, int c, int id, int lvl = 0){
	if(id-3 == N){
		return 0;
	}
	if(a == 0){
		return dp(b, c, V[id], id+1, lvl+1);
	}
	int mas = (a<<8)|(b<<4)|(c);
	if(mem[id][mas] != -1)return mem[id][mas];
	int w = 1000000000;
	int deb = 0;
	// try with 1
//	if(id-3+1 <= N)
	for (int i = 0; i < 4; ++i) {
		int ms = ~(1<<i);
		int na = a&ms, nb = b, nc = c;
		if(na == a && nb == b && nc == c)continue;
		if(deb)cout << string(lvl, '\t') << 1<<":"<<i <<" "<<id << " " << a << endl;
		w = min(w, dp(na, nb, nc, id, lvl+1) + A[1]);
		if(deb)cout << string(lvl, '\t') << w<< endl;
	}
	
	// try with 2
//	if(id-3+2 <= N)
	for (int i = 0; i < 3; ++i) {
		int ms = ~(3<<i);
		int na = a&ms, nb = b&ms, nc = c;
		if(na == a && nb == b && nc == c)continue;
		if(deb)cout << string(lvl, '\t') << 2<<":"<<i<< " "<<id << endl;
		w = min(w, dp(na, nb, nc, id,lvl+1) + A[2]);
		if(deb)cout << string(lvl, '\t') << w<< endl;
	}
	// try with 3
//	if(id-3+3 <= N)
	for (int i = 0; i < 2; ++i) {
		int ms = ~(7<<i);
		int na = a&ms, nb = b&ms, nc = c&ms;
		if(na == a && nb == b && nc == c)continue;
		if(deb)cout << string(lvl, '\t') << 3<<":"<<i<< " "<<id << endl;
		w = min(w, dp(na, nb, nc, id,lvl+1) + A[3]);
		if(deb)cout << string(lvl, '\t') << w<< endl;
	}
	// try with 3
//	if(id-3+4 <= N)
	for (int i = 0; i < 1; ++i) {
		if(deb)cout << string(lvl, '\t') << 4<<":"<<i<< " "<<id << " " << A[4]<< endl;
		w = min(w, dp(0, 0, 0, id+1,lvl+1) + A[4]);
		if(deb)cout << string(lvl, '\t') << w<< endl;
	}
	return mem[id][mas] = w;
}

int main(int argc, char** argv)
{
	memset(mem,-1,sizeof(mem));
	scanf("%d", &N);
	for (int i = 1; i <= 4; ++i) {
		cin >> A[i];
	}
	for (int i = 0; i < 4; ++i) {
		string s;
		cin >> s;
		for (int j = 0; j < N; ++j) {
			V[j] |= (s[j] == '*') << i;
		}
	}
	cout << dp(V[0], V[1], V[2], 3) << endl;
	
	return 0;
}
