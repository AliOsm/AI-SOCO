#include <vector>
#include <list>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#define ll long long
#define MODD 1000000007
using namespace std;

ll CountFirst(ll x) {
    // 2*1-1,...,2*x-1
    x%=MODD;
    return x*x%MODD;
}

ll CountSecond(ll x) {
    x%=MODD;
    // 2*1....2*x

    return x*(x+1)%MODD;
}


ll CountFirst(ll x,ll y) {
    ll ret = (CountFirst(y)-CountFirst(x-1))%MODD;
    if (ret < 0)
        ret+=MODD;
    return ret;
}

ll CountSecond(ll x,ll y) {
    ll ret = (CountSecond(y)-CountSecond(x-1))%MODD;
    if (ret < 0)
        ret += MODD;
    return ret;
}

ll Count(ll x) {
    if (x==0)
        return 0;
    ll y=0;
    ll p1=1;
    ll p2=1;
    int iters=0;
    ll ans=0;
    while(y < x) {
        ll curr = min(1ll<<iters,x-y);
        if (iters%2==0) {
            // first set.
            // p1 to p1+(1<<iters)-1
            ans += CountFirst(p1,p1+curr-1);
            if (ans >= MODD)
                ans -= MODD;
            p1+=curr;
            y+=curr;
        } else {
            // second set.
            // p2 to p2+(1ll<<iters)-1
            ans += CountSecond(p2,p2+curr-1);
            if (ans >= MODD)
                ans -= MODD;
            p2+=curr;
            y+=curr;
        }
        iters++;
    }
    ans %= MODD;
    ans = (ans+MODD)%MODD;
    return ans;
}


int main() {
    ll L,R;
    cin>>L>>R;
    ll ans= Count(R)-Count(L-1);
    ans = (ans+MODD)%MODD;
    cout << ans << endl;
}
