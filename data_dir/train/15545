#include <bits/stdc++.h>

using namespace std;

int const N = 1e5 + 10;

int n, l, x, y, a[N];

set <int> Set;

bool find (int num)
{
	
	for (int i = 1; i <= n; i++)
		if (Set.find (a[i] - num) != Set.end())
			return true;

	return false;
}

bool test ()
{
	for (int i = 1; i <= n; i++)
	{
		if (a[i] - x > 0)
		{
			if (Set.find (a[i] - x + y) != Set.end())
			{
				cout << "1\n";
				cout << a[i] - x << '\n';
				return true; 
			}
			if (Set.find (a[i] - x - y) != Set.end())
			{
				cout << "1\n";
				cout << a[i] - x << '\n';
				return true;
			}
		}

		if (a[i] + x < l)
		{
			if (Set.find (a[i] + x + y) != Set.end())
			{
				cout << "1\n";
				cout << a[i] + x << '\n';
				return true; 
			}
			if (Set.find (a[i] + x - y) != Set.end())
			{
				cout << "1\n";
				cout << a[i] + x << '\n';
				return true;
			}
		}

		if (a[i] - y > 0)
		{
			if (Set.find (a[i] - y + x) != Set.end())
			{
				cout << "1\n";
				cout << a[i] - y << '\n';
				return true;
			}
			if (Set.find (a[i] - y - x) != Set.end())
			{
				cout << "1\n";
				cout << a[i] - y << '\n';
				return true;
			}
		}

		if (a[i] + y < l)
		{
			if (Set.find (a[i] + y + x) != Set.end())
			{
				cout << "1\n";
				cout << a[i] + y << '\n';
				return true;
			}
			if (Set.find (a[i] + y - x) != Set.end())
			{
				cout << "1\n";
				cout << a[i] + y << '\n';
				return true;
			}
		}
	}
	return false;
}

void solve ()
{

	if (find (x) && find (y))
	{
		cout << "0" << '\n';
		return;
	}

	if (find (x))
	{
		cout << "1\n" << y << '\n';
		return;
	}

	if (find (y))
	{
		cout << "1\n" << x << '\n';
		return;
	}

	if (!test())
	{
		cout << "2" << '\n';
		cout << x << " " << y << '\n';
	}
}

int main ()
{
	cin.sync_with_stdio (false);
	cin.tie (0);
	cout.tie (0);
	cin >> n >> l >> x >> y;
	for (int i = 1; i <= n; i++)
	{
		cin >> a[i];
		Set.insert (a[i]);
	}
	solve ();
	return 0;
}