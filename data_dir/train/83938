//! Oos Karim Rokhsat
#include<bits/stdc++.h>
using namespace std;

typedef int                     ll;

#define pb                          push_back

const ll MXN = 5e3 + 10;
const ll MOD = 1e9 + 7; //998244353;

ll n, t, ans;
ll X[MXN], Y[MXN];
vector<ll> G[MXN];
bool vis[MXN], f, D[MXN];

inline void init(){
    t = 0, f = 1, ans = 0;
    for(int i = 0; i <= n; i ++){
        vis[i] = 0;
        D[i] = 0;
        G[i].clear();
    }
    return;
}

void DFS(ll u, bool t){
    vis[u] = 1;
    D[u] = t;
    for(auto v : G[u]){
        if(!vis[v]){
            DFS(v, !t);
        }
        else if(D[u] == D[v]){
            f = 0;
        }
    }
    return;
}

inline bool check(ll x){
    init();
    for(int i = 0; i < n; i ++){
        for(int j = i + 1; j < n; j ++){
            ll x1 = X[i], y1 = Y[i], x2 = X[j], y2 = Y[j];
            ll dis = abs(x1 - x2) + abs(y1 - y2);
            if(dis > x){
                G[i].pb(j);
                G[j].pb(i);
            }
        }
    }

    for(int i = 0; i < n; i ++){
        if(!vis[i]){
            DFS(i, 0);
            ans ++;
        }
    }
    if(f == 1) return 1;
    return 0;
}

int32_t main(){
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    cin >> n;
    for(int i = 0; i < n; i ++){
        cin >> X[i] >> Y[i];
    }

    ll l = -1, r = 1e4 + 1;

    while(r - l > 1){
        ll mid = (l + r) / 2;
        if(check(mid)){
            r = mid;
        }
        else{
            l = mid;
        }
    }

    check(r);

    cout << r << endl;

    ll Ans = 1;
    while(ans --) Ans = (Ans * 2) % MOD;
    cout << Ans;
    return 0;
}

//! N.N
