/**
 * Dont raise your voice, improve your argument.
 * --Desmond Tutu
 */

#include <bits/stdc++.h>
using namespace std;

#define DEBUG
#ifndef DEBUG
#define endl "\n"
#define log(args...)
#else
#define log(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); logf(_it, args); }
void logf(istream_iterator<string> it) {
}
template<typename T, typename ... Args>
void logf(istream_iterator<string> it, T a, Args ... args) {
    cout << *it << " = " << a << endl;
    logf(++it, args...);
}
#endif

#define forn(i,k,n) for(ll i=(k); i<(n); i++)
#define forn(i,n) forn(i,0,n)
#define forn(n) forn(i,0,n)

const double PI = acos(-1);
typedef long long ll;
#define fori(n) for(ll i=0; i<(n); i++)

#define cins(s) string s; cin>>s;
#define cini(i) int i; cin>>i;
#define cinll(l) ll l; cin>>l;
#define cind(d) double d; cin>>d;
#define cinai(a, n) vi a(n); fori(n) { cin>>a[i]; }
#define cinall(a, n) vll a(n); fori(n) { cin>>a[i]; }
#define cinas(s, n) vs s(n); fori(n) { cin>>s[i]; }
#define cinad(a, n) vd a(n); fori(n) { cin>>a[i]; }

typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<double> vd;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<string> vs;
typedef vector<ll> vll;

void solve() {
    cini(n);    // number of words
    cini(l);    // len of words
    cini(k);    // minimizing index
    cins(s);
    sort(s.begin(), s.end());

/* we need to sort the letters in simple scheme...
 * which is not that simple. we create first k words
 * using letters from begin of s or end of s,
 * optimizing for smallest k-th word.
 * This is, any word before k-th word wich is lex smaller than
 * k-th word so far get appended from _end_ of s.
 * Else it gets appended from _begin_ of s, so it stays smaller.
 * greedy.
 */
    vs ans(n, string(""));
    int idxL=0;

    for(int i=0; i<l; i++) {
        for(int j=0; j<k; j++) {
            if(ans[j]==ans[k-1])
                ans[j]+=s[idxL++];
        }
    }
    for(int i=0; i<n; i++) {
        while(ans[i].size()<l)
            ans[i]+=s[idxL++];
    }

    for(int i=0; i<n; i++)
        cout<<ans[i]<<endl;

}

int main() {
    cin.tie(nullptr);
    std::ios::sync_with_stdio(false);
        solve();
}

