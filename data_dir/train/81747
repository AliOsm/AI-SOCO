#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

typedef long long ll;

const ll MAX_N = 1e5 + 5;
ll a, b, p, x, ans, ind, tmp;

ll _sum (ll a, ll b) {
	ll c = a + b;
	if (p <= c)
		c -= p;

	return c;
}

ll _sub (ll a, ll b) {
	ll c = a - b;
	if (c < 0)
		c += p;

	return c;
}

ll _mul (ll a, ll b) {
	ll c = 1LL * a * b % p;
	return c; 
}

ll _pow (ll a, ll b) {
	if (!b)
		return 1;

	ll res = _pow(a, b >> 1);
	res = _mul(res, res);

	if (b & 1)
		res = _mul(res, a);

	return res;
}

ll _div (ll a, ll b) {
	ll c =  _mul(a, _pow(b, p - 2));
	return c;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> a >> b >> p >> x;
	
	ans = (x / p / (p - 1)) * (p - 1);
	x %= p * (p - 1);

	if (x <= 1500000) {
		for (ll i = 1; i <= x; i++)
			ans += _mul(i, _pow(a, i)) == b;

		cout << ans << "\n";
		return 0;
	}

	for (ll i = 1; i < p - 1; i++) {
		tmp = _div(b, _pow(a, i));
		ind = i - ((x + p - 2) / (p - 1)) + 1;

		if (ind < 0)
			ind += p;

		if (ind <= i && ind <= tmp && tmp <= i)
			ans++;

		if (i < ind && (tmp <= i || ind <= tmp))
			ans++;
		x--;
	}

	tmp = b;
	ind = p - (x / (p - 1));

	if (ind < 0)
		ind += p;

	if (ind <= tmp)
		ans++;
	x--;

	cout << ans << "\n";
	return 0;
}