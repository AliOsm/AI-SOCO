//be naame khodaa

#include <bits/stdc++.h>

const int maxn = 500005;
const int sq = 1500;

using namespace std;

int imin = 0, comp = 0;
bool mark[maxn], isLess[maxn], radj[sq][sq];
vector <int> ans[maxn], v[maxn], Less, More;
int id[maxn], node[sq], rdeg[maxn];

void dfs(int cur)
{
	mark[cur] = true;
	ans[comp].push_back(cur);
	for (int i = 0; i < Less.size(); i++)
	{
		int u = node[i];
		if (!mark[u] && !radj[id[cur]][i])
			dfs(u);
	}
}

void make_graph(int n, int imin)
{
	for (int i = 0; i < Less.size(); i++)
	{
		id[Less[i]] = i;
		node[i] = Less[i];
	}
	for (int u : Less)
		for (int w : v[u])
			if (isLess[w])
				radj[id[u]][id[w]] = radj[id[w]][id[u]] = true;
	for (int u : Less)
		if (rdeg[u] < More.size())
			radj[id[imin]][id[u]] = radj[id[u]][id[imin]] = false;
	for (int u : More) ans[0].push_back(u);

	dfs(imin);
	comp++;
	for (int u : Less)
		if (!mark[u])
		{
			dfs(u);
			comp++;
		}
}

int main()
{
	int n, m, a, b;
	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; i++)
	{
		scanf("%d%d", &a, &b);
		a--; b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	int imin = 0;
	for (int i = 0; i < n; i++)
		if (v[i].size() < v[imin].size())
			imin = i;
	isLess[imin] = true;
	for (int u : v[imin])
		isLess[u] = true;
	for (int i = 0; i < n; i++)
		if (isLess[i])
			Less.push_back(i);
		else
			More.push_back(i);
	for (int u : More)
		for (int w : v[u])
			rdeg[w]++;

	make_graph(n, imin);
	printf("%d\n", comp);
	for (int i = 0; i < comp; i++)
	{
		printf("%d ", ans[i].size());
		for (int u : ans[i])
			printf("%d ", u+1);
		printf("\n");
	}
	return 0;
}
