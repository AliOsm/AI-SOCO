#include <bits/stdc++.h>
using namespace std;

typedef pair<int64_t,int64_t> ii;
int64_t n,k,res=0,f[100005][20];
vector<ii> V;

bool Check(int64_t l,int64_t r)
{
    for(int64_t i=0;i<V.size();i++)
        if(f[r][i]-f[l-1][i]<V[i].second)
            return false;
    return true;
}

int64_t Binary(int64_t L)
{
    int64_t rs=-1,l=L,r=n;
    while(l<=r)
    {
        int64_t mid=(l+r)/2;
        if(Check(L,mid)==true)
        {
            rs=mid;
            r=mid-1;
        }
        else
            l=mid+1;
    }
    return rs;
}

int main()
{
    ios_base::sync_with_stdio(false);
    //freopen("818E.INP","r",stdin);
    cin>>n>>k;
    int64_t x;
    for(int64_t i=2;i<=sqrt(k);i++)
    {
        int64_t Count=0;
        while(k%i==0)
        {
            k/=i;
            Count++;
        }
        if(Count>0)
            V.push_back(ii(i,Count));
    }
    if(k>1)
        V.push_back(ii(k,1));
    for(int64_t i=1;i<=n;i++)
    {
        cin>>x;
        for(int64_t j=0;j<V.size();j++)
        {
            int64_t Count=0;
            while(x%V[j].first==0)
            {
                x/=V[j].first;
                Count++;
            }
            f[i][j]=Count;
        }
    }
    for(int64_t i=1;i<=n;i++)
        for(int64_t j=0;j<V.size();j++)
            f[i][j]+=f[i-1][j];
    for(int64_t i=1;i<=n;i++)
    {
        int64_t tmp=Binary(i);
        if(tmp!=-1)
            res+=n-tmp+1;
    }
    cout<<res;
}
