#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb emplace_back
#define mp make_pair
#define MOD 1000000007
#define FAST ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);srand(time(NULL))
struct DSU{
            ll parent[500001],connected[500001];
            void intialize(int x)
            {
                for(ll i=1;i<=x;i++)
                {
                    parent[i]=i;
                    connected[i]=1;
                }
            }
            ll getparent(ll k)
            {
                while(k!=parent[k])
                {
                    parent[k]=parent[parent[k]];
                    k=parent[k];
                }
                return k;
            }
            ll getsize(ll k)
            {
                return connected[getparent(k)];
            }
            void unionn(ll u,ll v)
            {
                ll parent1=getparent(u),parent2=getparent(v);
                if(parent1==parent2)
                  return ;
                if(connected[parent1]>connected[parent2])
                  swap(parent1,parent2);
                connected[parent2]+=connected[parent1];
                connected[parent1]=0;
                parent[parent1]=parent[parent2];
            }
};
DSU dsu;
int main()
{
   ll t;
   cin>>t;
   while(t--)
   {
      ll n;
      cin>>n;
      dsu.intialize(n+1);
      for(ll i=1;i<=n;i++)
      {
          ll x;
          cin>>x;
          dsu.unionn(i,x);
      }
      for(ll i=1;i<=n;i++)   cout<<dsu.getsize(i)<<" ";
      cout<<"\n";
   }
}