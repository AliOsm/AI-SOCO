#include <bits/stdc++.h>

#define F first
#define S second

#define ll long long
#define ull unsigned long long
#define ld long double

#define pb push_back
#define ppb pop_back
#define mp make_pair

#define sz(x) (int) x.size()
#define all(x) x.begin(), x.end()
#define bit(x) __builtin_popcountll(x)
#define sqr(x) ((x) * 1LL * (x))

#define nl '\n'
#define ioi exit(0);

#define NeedForSpeed ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define freopen(x) freopen(x".in", "r", stdin), freopen (x".out", "w", stdout);

using namespace std;

typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <double, double> pdd;

const int N = 1e5 + 7, MxN = 1e6 + 7, mod = 1e9 + 7, inf = 2e9 + 7;
const long long linf = (ll)1e18 + 7;
const double eps = 1e-9;
const int ii[] = {-1, 0, 1, 0, 1, -1, -1, 1}, jj[] = {0, 1, 0, -1, 1, -1, 1, -1};




    int q;
    int p[MxN * 5], pre[MxN * 5], cnt[MxN * 5];
    vector <int> g;
int main(){

    for (int i = 2; i <= (int)5e6; i++){
        if (!p[i]) p[i] = i, g.pb(i);
        for (int j = 0; j < sz(g) && g[j] <= p[i] && g[j] * (ll)i <= (int)5e6; j++)
            p[i * g[j]] = g[j];
    }

    for (int i = 2; i <= (int)5e6; i++){
        cnt[i] = cnt[i / p[i]] + 1;
        pre[i] = pre[i - 1] + cnt[i];
    }

    scanf ("%d", &q);
    for (int i = 1, l, r; i <= q; i++){
        scanf ("%d%d", &l, &r);
        printf ("%d\n", pre[l] - pre[r]);
    }
    ioi
}
