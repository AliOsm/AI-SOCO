#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define Ldouble long double
#define PI 3.1415926535897932384626

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

#define INF (1 << 29)

using namespace std;

int xb, yb, n, xo[24], yo[24];

int dp[1 << 24], dp2[1 << 24];

int d(int a, int b){
	if(a == -1) return xo[b] * xo[b] + yo[b] * yo[b];
	else if(b == -1) return xo[a] * xo[a] + yo[a] * yo[a];
	else return (xo[b] - xo[a]) * (xo[b] - xo[a]) + (yo[b] - yo[a]) * (yo[b] - yo[a]);
}
void upd(int fr, int to, int C){
	if(dp[fr] + C < dp[to]){
		dp[to] = dp[fr] + C;
		dp2[to] = fr;
	}
}

vector<int> route;

int main(){
	scanf("%d %d", &xb, &yb);
	scanf("%d", &n);
	FI(i, 0, n - 1){
		scanf("%d %d", &xo[i], &yo[i]);
		xo[i] -= xb;
		yo[i] -= yb;
	}
	
	FI(i, 1, (1 << n) - 1) dp[i] = INF;
	FI(i, 0, (1 << n) - 2){
		int ini = -1;
		FI(j, 0, n - 1) if((i & (1 << j)) == 0){
			ini = j;
			break;
		}
		//solitary
		upd(i, i + (1 << ini), 2 * d(-1, ini));
		//two items
		FI(j, ini + 1, n - 1) if((i & (1 << j)) == 0){
			upd(i, i + (1 << ini) + (1 << j), d(-1, ini) + d(ini, j) + d(j, -1));
		}
	}
	
	int R = (1 << n) - 1;
	printf("%d\n", dp[R]);
	while(R){
		int T = dp2[R];
		FI(i, 0, n - 1) if((R - T) & (1 << i)) route.push_back(i + 1);
		route.push_back(0);
		R = T;
	}
	FD(i, (int)route.size() - 1, 0) printf("%d ", route[i]);
	printf("0\n");
	return 0;
}