#include<iostream>
#include<vector>
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<queue>
#include<set>
#include<map>
#include<string>
#include<cstring>
#include<algorithm>
#include<deque>
#include<unordered_map>
#include<iomanip>

#define mp make_pair
#define ft first
#define sd second
#define pb push_back
#define ll long long
#define ld double
#define lF long double
#define POP pop_back()
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define FOR(i,a,b) for(int i=(int)a;i<=(int)b;i++)
#define _FOR(i,a,b) for(int i=(int)a;i>=(int)b;i--)
#define mod 1000000007
#define eps 1e-9
#define MEM(x,y) memset(x,y,sizeof(x))

using namespace std;

typedef pair<int,int>pii;

int const N = 55;

int n, m;

int adj[N][N], deg[N];

int par[N], sz[N];
int root(int v){
          if(par[v] == v) return v;
          return root(par[v]);
}
void merge(int x, int y){
          x = root(x), y = root(y);
          if(x == y) return;
          if(sz[y] > sz[x]) swap(x,y);
          par[y] = x;
          sz[x] += sz[y];
}

vector<pii> ans;

int main(){
          
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	cin >> n >> m;
	
	FOR(i,1,n) par[i] = i, sz[i] = 1;
	
	FOR(i,1,m){
	          int u, v;
	          cin >> u >> v;
	          adj[u][v]++;
	          adj[v][u]++;
	          deg[u]++;
	          deg[v]++;
	          merge(u,v);
	}
	
	if(n == 1){
	          if(!m){
	                    cout << "YES\n1\n1 1\n";
	                    return 0;
	          }
	          else if(m == 1 && deg[1] == 2){
	                    cout << "YES\n0\n";
	                    return 0;
	          }
	          else cout << "NO";
	          return 0;
	}
	
	if(m > n){
	          cout << "NO" << '\n';
	          return 0;
	}
	
	FOR(i,1,n)
	 FOR(j,1,n)
	  if(deg[i] > 2){
	            cout << "NO" << '\n';
	            return 0;
	  }
          
          int ok = 1;
          FOR(i,1,n)
           if(root(i) != root(1) || deg[i] != 2) ok = 0;
          
          if(ok){
                    cout << "YES" << '\n' << "0" << '\n';
                    return 0;
          }
          
          while(1){
                    int x = -1, y = -1;
                    FOR(i,1,n){
                              if(deg[i] < 2){
                                        if(x == -1) x = i;
                                        else if(root(i) != root(x) && y == -1) y = i;
                              }
                    }
                    if(x == -1) break;
                    if(y == -1) FOR(i,1,n) if(deg[i] < 2 && i != x) y = i;
                    deg[x]++, deg[y]++;
                    merge(x,y);
                    ans.push_back(pii(x,y));
          }
          
          FOR(i,1,n)
           if(root(i) != root(1)){
                     cout << "NO" << '\n';
                     return 0;
           }
          
   
          cout << "YES" << '\n';       
          cout << ans.size() << '\n';
          for(auto i: ans) cout << i.first << " " << i.second << '\n';
          return 0;
	
}


