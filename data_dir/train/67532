
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const ll MOD = ;

int N, M, D, A[111][111];
int solve(int x)
{
  int ans = 0;
  rep1(i,N) rep1(j,M) ans += abs(A[i][j] - x);
  ans /= D;
  return ans;
}
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0);
  cin >> N >> M >> D;
  int mn = 1e5;
  int mx = -1;
  rep1(i,N) rep1(j,M) 
  {
    cin >> A[i][j];
    mn = min(mn, A[i][j]);
    mx = max(mx, A[i][j]);
  }
  int good = 1;
  rep1(i,N) rep1(j,M) good &= (((A[i][j]-A[1][1])%D) == 0);
  if (!good)
  {
    cout << -1 << endl;
    return 0;
  }
  int ans = INF;
  for (int xx = mn; xx <= mx; xx+=D)
    ans = min(ans, solve(xx));
  cout << ans << endl;
}
