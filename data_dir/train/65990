#include <bits/stdc++.h>

#define FOR(i,b,e) for(int i=(b); i <= (e); ++i)
#define FORD(i,b,e) for(int i=(b); i >= (e); --i)
#define REP(i,n) for(int i=0; i < (n); ++i)
#define SIZE(c) (int) (c).size()
#define ALL(c) (c).begin(), (c).end()
#define PB push_back
#define MP make_pair
#define ST first
#define ND second
#define FWD(i,a,b) for (int i=(a); i<(b); ++i)
#define BCK(i,a,b) for (int i=(a); i>(b); --i)
#define PI 3.14159265358979311600
#define pb push_back
#define mp make_pair
#define st first
#define nd second

using namespace std;

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

typedef vector < int > VI;
typedef vector<ll> VL;

typedef long double K;

const int mod = 1000 * 1000 * 1000 + 7;

const int N = 300005;

int n, m, f[N], result[N], t[N], timer, got[N];
vector<int> g[N];
vector<int> s[N];

int best = 1;

void restore(int v, int pr = -1) {
	set<int> now;
	for (auto& item : s[v]) {
		if (got[item]) {
			now.insert(result[item]);
		}
	}
	int cur = 0;
	for (auto& item : s[v]) {
		if (!got[item]) {
			while (now.count(cur)) ++cur;
			result[item] = cur++;
			best = max(best, cur);
			got[item] = 1;
		}
	}
	for (auto& to : g[v]) {
		if (to == pr) {
			continue;
		}
		restore(to, v);
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> n >> m;
	REP(i, n) {
		int size;
		cin >> size;
		s[i].resize(size);
		for (auto& item : s[i]) {
			cin >> item;
			--item;
		}
	}
	REP(i, n - 1) {
		int x, y;
		cin >> x >> y;
		--x; --y;
		g[x].push_back(y);
		g[y].push_back(x);
	}

	restore(0);

	cout << best << '\n';
	for (int i = 0; i < m; ++i) {
		cout << result[i] + 1 << ' ';
	}
	cout << '\n';

	return 0;
}