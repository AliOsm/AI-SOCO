#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <bitset>
#include <list>

using namespace std;

long long int dist[10001][1001];
bitset<1001> clr[10001];
int a[10001];

int main()
{
    ios_base::sync_with_stdio(false);
    int n,m;
    cin >> n >> m;
    for (int i=0;i<m;i++)
        cin >> a[i];
    sort(a,a+m);

    int g,r;
    cin >> g >> r;

    list<pair<int,int> > q,q1;

    q.push_back({0,g});
    clr[0][g]=1;
    dist[0][g]=0;

    long long int ans=-1;

    while(1){
        while(q.size()){
            auto it=q.begin();
            int p=it->first,t=it->second;
            q.pop_front();
            if (a[p]==n){
                if (ans==-1||ans>dist[p][t])
                    ans=dist[p][t];
                continue;
            }
            if (t==0){
                if (!clr[p][g]){
                    q1.push_back({p,g});
                    clr[p][g]=1;
                }
                continue;
            }
            if (p>0){
                int d=abs(a[p]-a[p-1]);
                if (d<=t){
                    if (!clr[p-1][t-d])
                    {
                        clr[p-1][t-d] = 1;
                        q.push_back({p-1,t-d});
                        dist[p-1][t-d] = d + dist[p][t];
                    }
                }
            }
            if (1){
                int d=abs(a[p]-a[p+1]);
                if (d<=t){
                    if (!clr[p+1][t-d])
                    {
                        clr[p+1][t-d] = 1;
                        q.push_back({p+1,t-d});
                        dist[p+1][t-d] = d + dist[p][t];
                    }
                }
            }
        }
        if (ans!=-1){
            break;
        }
        if (q1.size()){
            for (auto &p:q1){
                dist[p.first][g]=dist[p.first][0];
            }
            swap(q,q1);
        } else {
            break;
        }
    }
    if (ans==-1){
        cout << ans;
        return 0;
    }

    long long int kol=(ans-1)/g;
    cout << ans+r*kol << endl;


    return 0;
}
