/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author HARSHAD
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
int dp[101][101][11][11];
class ProblemDCaesarsLegions {
public:
    ll n1, n2, k1, k2;
    const int MOD = 1e8;
    inline int add(int x, int y){
        return (x+y)%MOD;
    }
    ll rec(int f, int h, int kf, int kh){
        if(f>n1 or h>n2 or kf>k1 or kh>k2) return 0;
        if(f+h==n1+n2){
            if(f==n1 and h==n2 and kf<=k1 and kh<=k2) return 1;
            return 0;
        }
        if(dp[f][h][kf][kh]!=-1) return dp[f][h][kf][kh];
        ll res = add(rec(f+1, h, kf+1, 0),rec(f, h+1, 0, kh+1));
        return dp[f][h][kf][kh] = res;
    }
    void solve(std::istream& in, std::ostream& out) {
		in>>n1>>n2>>k1>>k2;
        memset(dp, -1, sizeof(dp));
        out<<rec(0, 0, 0, 0);
	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	ProblemDCaesarsLegions solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
