#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <cmath>
#define rank krevedka
#define left trulala
#define rigth trulalo
#define ran rank
using namespace std;

char buff[1050];
int total = 0;
int c[520][520];
int d[260000];
int z[260000];
int sum[520][520];
int r[520][520];

void bfs(int x,int y)
{
    c[x][y] = ++total;
    list<pair<int,int> > sp;
    sp.push_back(make_pair(x,y));
    while(sp.begin()!=sp.end())
    {
        int xx = sp.front().first;
        int yy = sp.front().second;
        sp.pop_front();
        z[total]++;
        x = xx - 1; y = yy;
        if(c[x][y]==0){c[x][y] = total; sp.push_back(make_pair(x,y));}
        x = xx + 1; y = yy;
        if(c[x][y]==0){c[x][y] = total; sp.push_back(make_pair(x,y));}
        x = xx; y = yy + 1;
        if(c[x][y]==0){c[x][y] = total; sp.push_back(make_pair(x,y));}
        x = xx; y = yy - 1;
        if(c[x][y]==0){c[x][y] = total; sp.push_back(make_pair(x,y));}
    }
}
int chrise ;
int painted ;

void init()
{
    chrise = painted = 0;
    for(int i=0;i<=total;i++)
        d[i] = 0;
}

void add(int a,int b)
{
    int p  = c[a][b];
    //if(p<0) chrise++; else
    if(p<0) return; else
    if(d[p]++==0) painted += z[p];
}

void sub(int a,int b)
{
    int p  = c[a][b];
    //if(p<0) chrise--; else
    if(p<0) return; else
    if(--d[p]==0) painted -= z[p];
}

int main()
{
    gets(buff);
    int n,k;
    sscanf(buff,"%d%d",&n,&k);
    for(int i=0;i<=n+1;i++)
    for(int j=0;j<=n+1;j++)
        c[i][j] = -1;
    for(int i=0;i<n;i++)
    {
        gets(buff);
        for(int j=0;j<n;j++)
        if(buff[j]=='.') c[i+1][j+1] = 0;
    }

    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
    {
        sum[i][j] = sum[i-1][j] + sum[i][j-1] - sum[i-1][j-1] + int(c[i][j]==-1);
        //cout << sum[i][j]<< " \n"[j==n];
    }
    for(int i=k;i<=n;i++)
    for(int j=k;j<=n;j++)
    {
        r[i][j] = sum[i][j] - sum[i-k][j] - sum[i][j-k] + sum[i-k][j-k];
        //cout << r[i][j]<< " \n"[j==n];
    }

    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
        if(c[i][j]==0) bfs(i,j);
    int res = 0;
    for(int i=1;i<=n-k+1;i++)
    {
        init();
        for(int a=-1;a<=k;a++)
        for(int b=0;b<k;b++)
            add(i+a,b+1);
        for(int a=0;a<k;a++)
            add(i+a,k+1);
        res = max(res,chrise + painted + r[i+k-1][k]);
        //cerr <<res <<' ';
        for(int j = 1;j<n-k+1;j++)
        {
            for(int a=0;a<k;a++)
                add(i+a,j+k+1);
            add(i-1,j+k);
            add(i+k,j+k);
            for(int a=0;a<k;a++)
                sub(i+a,j-1);
            sub(i-1,j);
            sub(i+k,j);
            res = max(res,chrise + painted +r[i+k-1][k+j]);
            //cerr <<res <<' ';
        }
        //cerr <<endl;
    }
    cout <<res <<endl;
    return 0;
}

