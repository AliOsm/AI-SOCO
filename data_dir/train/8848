#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 7;

vector <int> adj[N], radj[N];


int lvl[N], cnt[N];

int32_t main() {
    ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, m; cin >> n >> m;
    for(int i = 1; i <= m; i++) {
        int u, v; cin >> u >> v;
        adj[v].push_back(u);
        radj[u].push_back(v);
    }
    int k; cin >> k; vector <int> v(k);
    for(int &x: v) cin >> x;
    int s = v[0], t = v.back();
    queue <int> q; q.push(t); lvl[t] = 1;
    while(!q.empty()) {
        int u = q.front(); q.pop();
        for(int vv: adj[u]) if(!lvl[vv]) {
            lvl[vv] = lvl[u] + 1;
            q.push(vv);
        }
    }

    for(int i = 1; i <= n; i++) for(int j: radj[i]) if(lvl[i] == lvl[j] + 1) cnt[i]++;

    int mx = 0, mn = 0;

    for(int i = 1; i < k; i++) {
        int x = v[i - 1], y = v[i];
        if(lvl[y] >= lvl[x]) {
            mx++;
            mn++;
        } else {
            if(cnt[x] > 1) ++mx;
        }
    }

    cout << mn << " " << mx << endl;

}
