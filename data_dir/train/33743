#include <bits/stdc++.h>//coded by Nurstan

#define ll long long
#define pb push_back

#define allx x.begin(), x.end()
#define alla a.begin(), a.end()

#define F first
#define S second

// fixed << setprecision
// next_permutation(a, a + n)
// set <int> :: iterator it = x.begin(); it != x.end(); it ++

using namespace std;

const ll INF = int(1e9) + 123;

inline void boost(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
}

int main(){
	boost();
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int n;
	cin >> n;
	int a[n][2], mx = -100;
	for(int i = 0; i < n; i ++) {
		cin >> a[i][0] >> a[i][1];
		mx = max(mx, a[i][0]);
	}
	for(int i = 0; i < n; i ++) {
		for(int j = i + 1; j < n; j ++) {
			if(a[j][1] > a[i][1]) {
				swap(a[i][1], a[j][1]);
				swap(a[i][0], a[j][0]);
			}
			if(a[j][1] == a[i][1] && a[i][0] < a[j][0]){
				swap(a[i][0], a[j][0]);
			}
		}
	}
	if(a[0][1] == 0){
		cout << mx;
		return 0;
	}
	/*for(int i = 0; i < n; i ++) {
		cout << a[i][0] << " " << a[i][1] << endl;
	}*/
	int t = 1, ans = a[0][0], k = a[0][1];
	bool q = 0;
	while(t < n) {
		for(int i = t; i <= min(k, n - 1); i ++) {
			ans += a[i][0];
			if(a[i][1] != 0) {
				q = 1;	
			}
			k += a[i][1];
		}
		if(q == 0) {
			cout << ans;
			return 0;
		}
		q = 0;
		t = min(k, n - 1) + 1;
	}
	cout << ans;
	exit(0);
}

