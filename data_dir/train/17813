#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
int main()
{
	ios::sync_with_stdio(false);
	int n; cin >> n;
	vector<vector<vector<int>>> blocks(4, vector<vector<int>>(n, vector<int>(n)));
	for (int i = 0; i < 4; i++)
	{
		for (int y = 0; y < n; y++)
		{
			string s; cin >> s;
			for (int x = 0; x < n; x++)
				blocks[i][y][x] = (s[x] == '1') ? 1 : 0;
		}
	}
	vector<int> permutation(4);
	for (int i = 0; i < 4; i++)
		permutation[i] = i;
	int result = 4 * n * n;
	do
	{
		for (int start = 0; start <= 1; start++)
		{
			vector<vector<int>> full(2 * n, vector<int>(2 * n));
			for (int i = 0; i < 4; i++)
			{
				int blockI = permutation[i];
				int blockY = i / 2, blockX = i % 2;
				int yShift = blockY * n, xShift = blockX * n;
				for (int y = 0; y < n; y++)
					for (int x = 0; x < n; x++)
						full[y + yShift][x + xShift] = blocks[blockI][y][x];
			}
			int currRes = 0;
			for (int y = 0; y < 2 * n; y++)
			{
				for (int x = 0; x < 2 * n; x++)
				{
					int needVal = (x + y + start) % 2;
					if (full[y][x] != needVal)
						currRes++;
				}
			}
			result = min(result, currRes);
		}
	}
	while (next_permutation(permutation.begin(), permutation.end()));
	cout << result << endl;
}