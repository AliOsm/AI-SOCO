//Believe in yourself.
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define PB push_back
#define MP make_pair
#define INF 1000000000000000007
#define inf 1000000007
#define y1 dasdsvcvd
using namespace std;

int block;
struct query{
int left, right, id;
};

struct query q[100005];
bool cmp(const struct query a, const struct query b)
{
     if(a.left/block != b.left/block )
        return a.left/block < b.left/block;

    return a.right < b.right;
}
vector<pair<int,int> > ans;
int n, m;
int a[100005];
int main()
{
  ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    block = (int)sqrt(n);
    for(int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    for(int i = 0; i < m; i++)
    {
        cin >> q[i].left >> q[i].right;
        q[i].id=i;
        q[i].left--;
        q[i].right--;
    }

    sort(q, q+m, cmp);
    int h[10000007];
    ll sum = 0, l = 0, r = 0;
    if(a[0]<100005)
    h[a[0]]++;
    if( a[0]<100005 && h[a[0]]==a[0])
        sum = 1;
    for(int i = 0; i < m; i++)
    {
        int cl = q[i].left;
        int cr = q[i].right;

        while(cl < l)
        {
            l--;
            int x = a[l];
            if( x > 100005)
                break;
            if(h[x] == x)
                sum--;
            h[x]++;

            if(h[x] == x)
                sum++;

        }
        while(l < cl)
        {   int x=a[l];
            if( x > 100005)
                break;
            if(h[x] == x)
                sum--;
            h[x]--;
            if(h[x] == x)
                sum++;
            l++;
        }
        while(cr < r)
        {   int x = a[r];
            if( x > 100005)
                break;
            if(h[x] == x)
                sum--;
            h[x]--;

             if(h[x] == x)
                sum++;
            r--;
        }
        while(r < cr)
        {
            r++;
            int x = a[r];
                if( x > 100005)
                break;
            if(h[x] == x)
                sum--;
            h[x]++;
            if(h[x] == x)
                sum++;
        }
        //cout << sum <<'\n';
        ans.PB({q[i].id,sum});
    }
    sort(ans.begin(),ans.end());

    for( int i = 0; i < m; i++)
    {
        cout << ans[i].second <<"\n";
    }
return 0;
}