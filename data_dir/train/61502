#include<bits/stdc++.h>
using namespace std;
int n,q,x,y,z,mu[7001];
bitset<7001> bt[100001],st[7001],cac[7001];
vector<int> prime;
bool flag[7001];
int main()
{
    mu[1]=1;
    for(int i=2;i<=7000;i++)
    {
        if(!flag[i])mu[i]=-1,prime.push_back(i);
        for(int j=0;j<prime.size()&&i*prime[j]<=7000;j++)
        {
            flag[i*prime[j]]=1;
            if(i%prime[j])mu[i*prime[j]]=-mu[i];
            else
            {
                mu[i*prime[j]]=0;
                break;
            }
        }
    }
    for(int i=1;i<=7000;i++)
    {
        for(int j=1;j<=i;j++)
        {
            if(i%j==0)st[i].set(j);
            if(i%j==0&&mu[i/j])cac[j].set(i);
        }
    }
    scanf("%d%d",&n,&q);
    for(int i=1,opt;i<=q;i++)
    {
        scanf("%d%d%d",&opt,&x,&y);
        if(opt==1)
        {
            bt[x]=st[y];
        }
        else if(opt==2)
        {
            scanf("%d",&z);
            bt[x]=bt[y]^bt[z];
        }
        else if(opt==3)
        {
            scanf("%d",&z);
            bt[x]=bt[y]&bt[z];
        }
        else
        {
            printf("%d",((bt[x]&cac[y]).count())&1);
        }
    }    
    return 0;
}