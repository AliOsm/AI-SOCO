#include <bits/stdc++.h>
using namespace std;
typedef pair<int, int> pii;

typedef long long ll;
const int N = 300010;
const int oo = 1e9;
const int LOGN = 18;
const int MOD = 1000000007;

string n;
int k, dp[1010][1010][2];
int sh[1010];

int calc(int idx , int ones , bool sm) {
	if (ones < 0)return 0;
	if (idx == n.size())return (ones == 0);
	int &ret = dp[idx][ones][sm];
	if (ret != -1)
		return ret;
	if (sm) {
		return ret = (1ll * calc(idx + 1, ones, sm) + calc(idx + 1, ones - 1, sm)) % MOD;
	}
	if (n[idx] == '0') {
		ret = (1ll * calc(idx + 1, ones, 0)) % MOD;
	} else {
		ret = (1ll * calc(idx + 1, ones, 1) + calc(idx + 1, ones - 1, sm)) % MOD;
	}
	return ret;
}
int ct(int idx){
	int cnt = 0;
	while(idx){
		cnt += idx&1;
		idx /= 2;
	}
	return cnt;
}
int main() {
	memset(dp, -1, sizeof dp);
	cin >> n >> k;
	if(k == 0){
		puts("1");
		return 0;
	}
	sh[1] = 1;
	for (int i = 2; i <= 1000 ; ++i){
		sh[i] = 1 + sh[ct(i)];
	}
	ll res = 0;
	for(int i = 1; i <= n.size() ; ++i){
		if(sh[i] == k){
			res = (res + calc(0,i,0))%MOD;
			if(i == 1){
				res = (res - 1 + MOD)%MOD;
			}
		}
	}

	printf("%lld\n", res);
	return 0;
}