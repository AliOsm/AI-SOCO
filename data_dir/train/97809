#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

using namespace std;

const int N = 100010;

int n, a[N], b[N];
vector<int> vt;

void dfs(int x, int s, vector<int> v){
	if(v.size() > vt.size()) vt = v;
	if(x >= n) return ;
	for(int i = x; i < n; i++){
		if(a[i] & s) continue;
		vector<int> vv = v;
		vv.push_back(i);
		dfs(i + 1, s | a[i], vv);
	}
	return ;
}

int main(){
	scanf("%d", &n);
	for(int i = 0; i < n; i++)
		scanf("%d", &b[i]);
	for(int i = 0; i < n; i++){
		int j = b[i], cnt = 0;
		while(j){
			if(j % 10) a[i] |= (1 << cnt);
			j /= 10;
			cnt++;
		}
	}
	dfs(0, 0, vt);
	cout << vt.size() << endl;
	for(int i = 0; i < vt.size(); i++)
		cout << b[vt[i]] << " ";
	cout << endl;
	return 0;
}
