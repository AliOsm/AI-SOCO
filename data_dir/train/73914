#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
ll x0, y0, ax, ay, bx, by, xs, ys, t, ans;
vector<pair<ll,ll> >v;
int main()
{
    ios::sync_with_stdio(0);
    cin >> x0 >> y0 >> ax >> ay >> bx >> by >> xs >> ys >> t;
    v.push_back({x0, y0});
    while(1){
        v.push_back({ax * v.back().first + bx, ay * v.back().second + by});
        if(v.back().first > 2e16 || v.back().second > 2e16)
            break;
//        if(log10((ld)v.back().first * ax) > 18.5 || log10((ld)v.back().second * ay) > 18.5)
//            break;
    }
    for(int i = 0; i < v.size(); i++){
        ll cnt = 0, av = t - abs(v[i].first - xs) - abs(v[i].second - ys);
        if(av < 0)
            continue;
        cnt++;
        for(int j = i + 1; j < v.size(); j++){
            ll d = abs(v[j].first - v[j - 1].first) + abs(v[j].second - v[j - 1].second);
            if(d <= av)
                av -= d, cnt++;
            else
                break;
        }
        ans = max(ans, cnt);
    }
    reverse(v.begin(), v.end());
    for(int i = 0; i < v.size(); i++){
        ll cnt = 0, av = t - abs(v[i].first - xs) - abs(v[i].second - ys);
        if(av < 0)
            continue;
        cnt++;
        for(int j = i + 1; j < v.size(); j++){
            ll d = abs(v[j].first - v[j - 1].first) + abs(v[j].second - v[j - 1].second);
            if(d <= av)
                av -= d, cnt++;
            else
                break;
        }
        ans = max(ans, cnt);
    }
    cout << ans << endl;
    return 0;
}
