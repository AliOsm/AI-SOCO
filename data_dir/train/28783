/**/
#include <bits/stdc++.h>
using namespace std;
/***********************************************/
const long long mod = 1000000007;
long long res;
vector<pair<long long,char> > t;
vector<pair<long long,char> > s;
void zalgo(long long n){
	if(s.size() == 1){
		for(auto x : t){
			if(x.second == s[0].second && x.first >= s[0].first){
				res += x.first - s[0].first + 1ll;
			}
		}
		return;
	}
	if(n == 0){
		for(long long x = 0;x+1 < t.size();x++){
			if(t[x].second == s[0].second && t[x].first >= s[0].first && t[x+1].second == s[1].second && t[x+1].first >= s[1].first){
				res++;
			}
		}
		return;
	}
	long long L = 0, R = 0;
	vector<long long> Z(t.size());
	for(long long i = 1;i < (long long)t.size();i++){
		if (i > R) {
			L = R = i;
			while (R < t.size() && t[R-L] == t[R]) R++;
			Z[i] = R-L; R--;
		} else {
			long long k = i-L;
			if (Z[k] < R-i+1) Z[i] = Z[k];
			else {
				L = i;
				while (R < t.size() && t[R-L] == t[R]) R++;
				Z[i] = R-L; R--;
			}
		}
	}
	for(long long i = n+1;i < (long long)t.size();i++){
		if(Z[i] >= n){
			if(i + n < (long long)t.size()){
				if(t[i-1].second == s[0].second && t[i-1].first >= s[0].first && t[i+n].second == s[1].second && t[i+n].first >= s[1].first)
					res++;
			}
		}
	}
}
int main() {
	//ios_base::sync_with_stdio(false);
	//cin.tie(nullptr);

	long long n,m;
	//cin>>n>>m;
	scanf("%I64d %I64d",&n,&m);
	vector<pair<long long,char> > in(n+m);
	res = 0;
	for(long long i = m;i < n+m;i++){
		scanf("%I64d-%c",&in[i].first,&in[i].second);
		if(i > m && in[i].second == in[i-1].second){
			in[i-1].first += in[i].first;
			n--;
			i--;
		}
	}
	long long temp = m;
	for(long long i = 0;i < m;i++){
		scanf("%I64d-%c",&in[i].first,&in[i].second);
		if(i > 0 && in[i].second == in[i-1].second){
			in[i-1].first += in[i].first;
			m--;
			i--;
		}
	}
	s.resize(min(2ll,m));
	s[0] = in[0];
	if(m > 1)
		s[1] = in[m-1];
	for(long long i = 1;i+1 < m;i++)t.push_back(in[i]);
	for(long long i = temp;i < n+temp;i++)t.push_back(in[i]);
	zalgo(max(0ll,m-2ll));
	printf("%I64d\n",res);
	return 0;
}
