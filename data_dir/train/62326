#include <iostream>
#include <cstdio>
#include <map>
#include <cstring>
#include <string>
#include <algorithm>
#include <iomanip>
#include <vector>
#include <queue>
#include <set>

using namespace std;

int u[1111];
int M[1111];
int MM[1111];

int main() {
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
    int n;
	scanf("%d", &n);
    for (int i = 1; i <= n; i++) {
        M[i] = 1000000000;
    }
    int d = 512;
    for (;d > 0; d /= 2) {
        vector<int> f;
        memset(u, 0, sizeof(u));
        for (int i = 1; i <= n; i += d * 2) {
            for (int j = 0; j < d; j++) {
                if (i + j <= n) {
                    u[i + j] = 1; 
                    f.push_back(i + j);
                }
            }
        }

        printf("%d\n", (int)f.size());
        for (int i = 0; i < f.size(); i++) {
            printf("%d", f[i]);
            if (i + 1 < f.size()) {
                printf(" ");
            } else {
                printf("\n");
            }
        }
        fflush(stdout);
        for (int i = 1; i <= n; i++) {
            scanf("%d", &MM[i]);
        }

        for (int i = 1; i <= n; i++) {
            if (u[i] == 0) {
                M[i] = min(M[i], MM[i]);
            }
        }

        f.clear();
        memset(u, 0, sizeof(u));
        for (int i = d + 1; i <= n; i += d * 2) {
            for (int j = 0; j < d; j++) {
                if (i + j <= n) {
                    u[i + j] = 1; 
                    f.push_back(i + j);
                }
            }
        }

        if (f.size() == 0) {
            continue;
        }
        
        printf("%d\n", (int)f.size());
        for (int i = 0; i < f.size(); i++) {
            printf("%d", f[i]);
            if (i + 1 < f.size()) {
                printf(" ");
            } else {
                printf("\n");
            }
        }
        fflush(stdout);
        for (int i = 1; i <= n; i++) {
            scanf("%d", &MM[i]);
        }

        for (int i = 1; i <= n; i++) {
            if (u[i] == 0) {
                M[i] = min(M[i], MM[i]);
            }
        }
    }
    printf("-1\n");
    fflush(stdout);
    for (int i = 1; i <= n; i++) {
        printf("%d", M[i]);
        if (i < n) {
            printf(" ");
        } else {
            printf("\n");
        }
    }
    fflush(stdout);
	return 0;
}