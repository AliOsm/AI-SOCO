#include<bits/stdc++.h>

using namespace std;

#define FTB(i,a,b) for(LL i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(LL i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(LL i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(LL i=a,_b=b;i>_b;i--)
#define endl "\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define debug cout<<"VL\n";
#define coYES cout<<"YES\n";
#define coNO cout<<"NO\n";
#define coyes cout<<"yes\n";
#define cono cout<<"no\n";
#define coYes cout<<"Yes\n";
#define coNo cout<<"No\n";
#define PI 3.1415926535897
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define y1 aghksdmlsjdfjavljvlckdfmg
#define lamtron(n) fixed<<setprecision(n)
#define ALL(s) s.begin(),s.end()
#define ONLINE_JUDGE gshysrthrrthbd

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
template<class T> inline T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}

typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<II> VII;
typedef vector<bool> VB;

LL n,m,ng[505][505],dc[505][505];

char a[505][505];

int main(){
    ios::sync_with_stdio(false);cin.tie(0);
    #ifndef ONLINE_JUDGE
    	freopen("input.txt","r",stdin);
    	freopen("output.txt","w",stdout);
    #endif
    cin>>n>>m;
    FTB(i,1,n) FTB(j,1,m) cin>>a[i][j];
    FTB(i,1,n){
        FTB(j,1,m){
            ng[i][j]=ng[i][j-1];
            dc[i][j]=dc[i-1][j];
            if(a[i][j]=='.'){
                if(a[i][j]==a[i][j-1]) ng[i][j]++;
                if(a[i][j]==a[i-1][j]) dc[i][j]++;
            }
        }
    }
    FTB(i,1,n) FTB(j,1,m){
        ng[i][j]+=ng[i-1][j];
        dc[i][j]+=dc[i][j-1];
    }
    LL q;cin>>q;
    while(q--){
        LL a,x,b,y,res=0;
        cin>>a>>x>>b>>y;
        res+=(ng[b][y]-ng[b][x])-(ng[a-1][y]-ng[a-1][x]);
        res+=(dc[b][y]-dc[b][x-1])-(dc[a][y]-dc[a][x-1]);
        cout<<res<<endl;
    }
	return 0;
}




