#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define int long long
using namespace __gnu_pbds;
using namespace std;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


signed main()
{
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);  
 #ifndef ONLINE_JUDGE
    freopen ("INPUT.txt" , "r" , stdin);
    freopen ("OUTPUT.txt" , "w" , stdout);
 #endif

// -------------------------------------Code starts here---------------------------------------------------------------------     

    int r,c;
    cin>>r>>c;
    bool flag=false;
    if(c>r)
    {
        flag=true;
        swap(r,c);
    }
    if(r==1 && c==1)
    {
        cout<<0;
        return 0;
    }
    int row[r+1],col[c+1];
    int cnt=2;
    for(int i=1;i<=r;i++)    
    {
        row[i]=cnt++;
    }
    col[1]=1;
    for(int i=2;i<=c;i++)
    {
        col[i]=cnt++;
    }
    int ans[r+1][c+1];
    for(int i=1;i<=r;i++)
    {
        for(int j=1;j<=c;j++)
        {
            int z=__gcd(row[i],col[j]);
            ans[i][j]=(row[i]*col[j])/z;
        }
    }
    if(flag)
    {
    for(int i=1;i<=c;i++)
    {
        for(int j=1;j<=r;j++)
        {
            cout<<ans[j][i]<<" ";
        }
        cout<<"\n";
    }
    return 0;
    }    
    for(int i=1;i<=r;i++)
    {
        for(int j=1;j<=c;j++)
        {
            cout<<ans[i][j]<<" ";
        }
        cout<<"\n";
    }


// -------------------------------------Code ends here------------------------------------------------------------------
     clock_t clk;
 	clk = clock();
 
    clk = clock() - clk;
 	cerr << fixed << setprecision(6) << "Time: " << ((double)clk)/CLOCKS_PER_SEC << "\n";
 	return 0;
 }