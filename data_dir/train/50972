#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
using namespace std;

#define FOR(i,f,t) for(int i=f; i<(int)t; i++)
#define FORR(i,f,t) for(int i=f; i>(int)t; i--)
#define ms(obj, val) memset(obj, val, sizeof(obj))
#define ms2(obj, val, sz) memset(obj, val, sizeof(obj[0])*sz)
#define pb push_back
#define ri(x) scanf("%d",&x)
#define rl(x) scanf("%lld",&x)
#define rii(x,y) ri(x), ri(y)

typedef vector<int> vi;
typedef long long ll;

const ll MOD = 1e9+7;
const int MAXN = 2e5+5;

ll sq(ll x){
    return x*x %MOD;
}
ll pot(ll b, ll e){
    if(!e) return 1;
    return sq(pot(b,e>>1)) * (e&1?b:1) %MOD;
}

ll inv[MAXN];
ll fact[MAXN];

int n;
char S[MAXN];

int main(){
    fact[0] = 1;
    FOR(i,1,MAXN) fact[i] = fact[i-1]*i%MOD;
    FOR(i,0,MAXN) inv[i] = pot(fact[i], MOD-2);
    scanf("%s",S);
    n = strlen(S);
    int cnto=0, cntc=0;
    FOR(i,0,n) if(S[i]==')') cntc++;
    ll ans = 0;
    FOR(i,0,n){
        if(S[i] == ')') cntc--;
        else{
            ans = (ans - (fact[cnto+cntc]*inv[cnto]%MOD)*inv[cntc])%MOD;
            cnto++;
            ans = (ans + (fact[cnto+cntc]*inv[cnto]%MOD)*inv[cntc])%MOD;
        }
    }
    printf("%lld\n",ans);
}
