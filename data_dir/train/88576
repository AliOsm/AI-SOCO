#include <bits/stdc++.h>
using namespace std;
const int N = 51;
int n;
pair<int,int>a[N];
long long dp[N][N][5001],ans = 1e18;
vector<pair<int,vector<int>>>v;
int main(){
// 	freopen("readin.txt","r",stdin);
	scanf("%d",&n);
	for(int i = 0;i < n;i++){
		scanf("%d",&a[i].first);
		v.push_back({a[i].first,vector<int>()});
	}
	sort(v.rbegin(),v.rend());
	v.resize(unique(v.begin(),v.end()) - v.begin());
	for(int i = 0;i < n;i++){
		scanf("%d",&a[i].second);
		for(auto &j : v)
			if(j.first == a[i].first)
				j.second.push_back(a[i].second);
	}
	for(auto &i : v){
		vector<int>&v = i.second;
		sort(v.begin(),v.end());
		for(int j = 1;j < v.size();j++)v[j]+=v[j - 1];
	}
	for(int i = 0;i < N;i++)
		for(int j = 0;j < N;j++)
			for(int k = 0;k < 5001;k++)
				dp[i][j][k] = 1e18;
	dp[0][0][0] = 0;
	for(int i = 0;i < v.size();i++)
		for(int j = 0;j < n;j++)
			for(int k = 0;k < 5001;k++){
				if(dp[i][j][k] == 1e18)continue;
				vector<int>&v = ::v[i].second;
				for(int q = 1;q <= v.size() && q <= j;q++)
					if(k + v.back() - v[q - 1] < 5001 && j - q + v.size() - q < N)
						dp[i + 1][j - q + v.size() - q][k + v.back() - v[q - 1]] = min(dp[i + 1][j - q + v.size() - q][k + v.back() - v[q - 1]],dp[i][j][k] + ::v[i].first*1LL*(v.size() - q));
				if(v.size() + j < N && v.back() + k < 5001)dp[i + 1][j + v.size()][k + v.back()] = min(dp[i + 1][j + v.size()][k + v.back()],dp[i][j][k] + v.size()*::v[i].first);
			}
	for(int i = 0;i <= n;i++)
		for(int j = 1;j < 5001;j++)
			if(dp[v.size()][i][j] != 1e18)
			ans = min(ans,(dp[v.size()][i][j]*1000 + j - 1)/j);
	printf("%lld\n",ans);
}