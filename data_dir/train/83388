#include <bits/stdc++.h>

using namespace std;
long long p[100005];
long long sz[100005];

int get_root(int v){
    return p[v]==-1 ? v : (p[v]=get_root(p[v]));
}

void unite(int a, int b){
    a=get_root(a);
    b=get_root(b);
    if(sz[a]<sz[b])swap(a,b);
    p[b]=a;
    if(sz[a]==sz[b])sz[a]++;
}


signed main()
{
#ifdef files
	ifstream cin("input.txt");
	ofstream cout("output.txt");
#endif
    memset(p,-1,sizeof(p));
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n,m,l;
    cin >> n >> m >> l;
    vector<long long> v(n);
    int c=0;
    for(int i=0; i<n; i++){
        cin >> v[i];
        if(v[i]>l){
            if(i>0 && v[i-1]>l)unite(i,i-1);
            else c++;
        }
    }
    for(int i=0; i<m; i++){
        int t;
        cin >> t;
        if(t==0){
            cout << c << "\n";
        }
        else{
            int x,d;
            cin >> x >> d;
            x--;
            if(v[x]<=l && v[x]+d>l){
                int z=0;
                if(x>0 && v[x-1]>l)unite(x,x-1), z++;
                if(x+1<n && v[x+1]>l)unite(x,x+1), z++;
                if(z==2)c--;
                else if(z==0)c++;
            }
            v[x]+=d;
        }
    }
}
