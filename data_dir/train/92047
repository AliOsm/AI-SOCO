
#include <bits/stdc++.h>

using namespace std;
vector <int> graph [15] ;
int d ;
bool mark [10 * 1000 + 10][13][2] ;
vector <int> ans ;
void dfs (int u , int sum0 , int sum1 , int dep , int &m) {
    if (mark [sum0 + sum1][u][dep % 2]) return ;
    mark [sum0 + sum1][u][dep % 2] = 1 ;
    dep -- ;
    if (dep % 2 == 0) {
        if (sum1 >= sum0) {
            return ;
        }
    } else {
        if (sum0 >= sum1) {
            return ;
        }
    }
    dep ++ ;
    if (dep == d) {
        m = 1 ;
        return ;
    }
    for (int i = 0 , v ; i < graph[u].size () ; i ++) {
        v = graph [u][i] ;
        if (v == u) continue ;
        if (dep % 2 == 0) {
            dfs(v , sum0 + v , sum1 , dep + 1 , m) ;
        } else {
            dfs(v , sum0 , sum1 + v , dep + 1 , m) ;
        }
        if (m == 1) {
            ans.push_back(v) ;
            return ;
        }
    }
}
int main()
{
    string s ;
    cin >> s >> d ;
    for (int i = 1 ; i <= 10 ; i ++ ) {
        if (s[i - 1] == '0') {
            continue ;
        }
        for (int j = 1 ; j <= 10 ; j ++) {
            if (s[j - 1] == '1') {
                graph [i].push_back (j) ;
            }
        }
    }
    int m = 0 ;
    for (int i = 1 ; i <= 10 ; i ++){
        if (graph[i].size () == 0) {
            continue ;
        }
        dfs (i , i , 0 , 1 , m) ;
        if (m == 1) {
            ans.push_back(i) ;
            break ;
        }
    }
    if (m == 0) {
        cout << "NO" ;
        return 0 ;
    }
    cout << "YES\n" ;
    for (int i = ans.size() - 1 ; i >= 0 ; i --) {
        cout << ans [i] << " ";
    }
    return 0;
}
