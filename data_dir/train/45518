#include<bits/stdc++.h>
using namespace std;
#define optimize ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
char ch;
long long n,kingX,kingY,i,X,Y,up,down,right1,left1,upright1,upleft1,downright1,downleft1,diff;
int main()
{
    optimize
    cin>>n>>kingX>>kingY;
    for(i=0;i<n;i++)
    {
        cin>>ch>>X>>Y;
        // check for up

        if(X==kingX && Y>kingY)
        {
            diff=Y-kingY;

            if(diff<abs(up)||up==0)
            {
                if(ch=='B')
                {
                    up=-diff;
                }

                else
                {
                    up=diff;
                }
            }
        }

        // check for down

        if(X==kingX && Y<kingY)
        {
            diff=kingY-Y;

            if(diff<abs(down)||down==0)
            {
                if(ch=='B')
                {
                    down=-diff;
                }

                else
                {
                    down=diff;
                }
            }
        }

        // check for right1

        if(Y==kingY && X>kingX)
        {
            diff=X-kingX;

            if(diff<abs(right1)||right1==0)
            {
                if(ch=='B')
                {
                    right1=-diff;
                }

                else
                {
                    right1=diff;
                }
            }
        }

        // check for left1

        if(Y==kingY && X<kingX)
        {
            diff=kingX-X;

            if(diff<abs(left1)||left1==0)
            {
                if(ch=='B')
                {
                    left1=-diff;
                }

                else
                {
                    left1=diff;
                }
            }
        }

        // check for diagonal

        if(abs(X-kingX)==abs(Y-kingY))
        {
            diff = abs(X-kingX);

            // check for up right1

            if(X>kingX && Y > kingY)
            {
                if(diff<abs(upright1)||upright1==0)
                {
                    if(ch=='R')
                    {
                        upright1=-diff;
                    }

                    else
                    {
                        upright1=diff;
                    }
                }
            }

            // check for up left1

            if(X < kingX && Y > kingY)
            {
                if(diff<abs(upleft1)||upleft1==0)
                {
                    if(ch=='R')
                    {
                        upleft1=-diff;
                    }

                    else
                    {
                        upleft1=diff;
                    }
                }
            }

            // check for down left1

            if(X < kingX && Y < kingY)
            {
                if(diff<abs(downleft1)||downleft1==0)
                {
                    if(ch=='R')
                    {
                        downleft1=-diff;
                    }

                    else
                    {
                        downleft1=diff;
                    }
                }
            }

            // check for down right1

            if(X > kingX && Y < kingY)
            {
                if(diff<abs(downright1)||downright1==0)
                {
                    if(ch=='R')
                    {
                        downright1=-diff;
                    }

                    else
                    {
                        downright1=diff;
                    }
                }
            }
        }
    }
    if(up>0 || down>0 || right1>0 || left1>0 || upleft1>0 || downleft1>0 || upright1>0 || downright1>0)
        cout<<"YES";
    else
        cout<<"NO";

}
