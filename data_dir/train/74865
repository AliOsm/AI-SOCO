// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define int long long
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
int n, m, xx, xy, l1, l2;
int res = 0;
char a[2013][2013];
int vis[2013][2013];
struct ele {
    int x, y;
    int st;
    int en;
};

bool ok(int i, int j) {
    if((i < 1) || (i > n)) return false;
    if(j < 1 || j > m) return false;
    return true;
}

deque<ele> q;
void dfs(int ix, int iy, int l, int r) {
    for(int i = ix; i >= 1 && a[i][iy] != '*' && !vis[i][iy]; i--) {
        vis[i][iy] = 1;
        if(ok(i, iy + 1) && a[i][iy + 1] != '*' && r + 1 <= l2) {
            q.pb({i, iy + 1, l, r + 1});
        }
        if(ok(i, iy - 1) && a[i][iy - 1] != '*' && l + 1 <= l1) {
            q.pb({i, iy - 1, l + 1, r + 1 - 1});
        }
        // if(ok(i, iy + 1) && a[i][iy + 1] != '*' && r + 1 <= l2) {
        //     q.pb({i, iy + 1, l, r + 1});
        // }
        res++;        
    }
    for(int i = ix + 1; i <= n && a[i][iy] != '*' && !vis[i][iy]; i++) {
        vis[i][iy] = 1;
        if(ok(i, iy + 1) && a[i][iy + 1] != '*' && r + 1 <= l2) {
            q.pb({i, iy + 1, l, r + 1});
        }
        if(ok(i, iy - 1) && a[i][iy - 1] != '*' && l + 1 <= l1) {
            q.pb({i, iy - 1, l + 1, r + 1 - 1});
        }
        // if(ok(i, iy + 1) && a[i][iy + 1] != '*' && r + 1 <= l2) {
        //     q.pb({i, iy + 1, l, r + 1});
        // }
        res++;        
    }
}

void f() {
    while(!q.empty()) {
        auto p = q.front();
        dfs(p.x, p.y, p.st, p.en);
        q.pop_front();
    }
}


int32_t main() {
    fast_io()
    cin >> n >> m;
    res = 0;
    cin >> xx >> xy;
    cin >> l1 >> l2;
    for(int i =1 ; i <= n;i++) {
        for(int j = 1; j <= m; j++) {
            cin >> a[i][j];
        }
    }
    q.pb({xx, xy, 0, 0});
    f();
    cout << res;
    return 0;
}
