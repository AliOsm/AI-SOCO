/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 5e5 + 5;
int m, k, n, s, a[N];
multiset<int> d[N];

inline void readInput() {
	cin >> m >> k >> n >> s;
	for (int i = 0; i < m; i++)
		cin >> a[i];
	for (int i = 0; i < s; i++) {
		int x;
		cin >> x;
		d[--x].insert(m);
	}
}

inline void solve() {
	multiset<int> s;
	for (int i = 0; i < N; i++)
		if (!d[i].empty())
			s.insert(m);
	for (int i = m - 1; ~i; i--) {
		if (!d[--a[i]].empty()) {
			s.erase(s.find(*d[a[i]].rbegin()));
			d[a[i]].erase(--d[a[i]].end());
			d[a[i]].insert(i);
			s.insert(*d[a[i]].rbegin());
		}
		int nxt = *s.rbegin() + 1;
		int sum = i % k + max(nxt - i - k, 0);
		if (nxt <= m && sum <= m - n * k) {
			cout << sum << endl;
			for (int j = 0; j < i % k; j++)
				cout << j + 1 << ' ', sum--;
			for (int j = i; j < nxt; j++) {
				if (d[a[j]].empty() && sum)
					cout << j + 1 << ' ', sum--;
				d[a[j]].erase(j);
			}
			return;
		}
	}
	cout << "-1\n";
}

int main() {
	ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);
	readInput(), solve();
	return 0;
}
