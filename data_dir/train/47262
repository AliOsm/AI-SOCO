#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
//#include <random>
 
using namespace std;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
typedef double ldouble;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
typedef pair<pii, pii> piiii;
 
#define pb push_back
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define rand32() (((unsigned int)(rand()) << 16) | (unsigned int)(rand()))
#define rand64() (((unsigned int64)(rand32()) << 16) | (unsigned int64)(rand32()))
#define bit(mask, b) ((mask >> b) & 1)
#define biton(mask, bit) (mask | (((uint64)(1)) << bit))
#define bitoff(mask, bit) (mask & (~(((uint64)(1)) << bit)))
#define bitputon(mask, bit) (mask |= (((uint64)(1)) << bit))
#define bitputoff(mask, bit) (mask &= (~(((uint64)(1)) << bit)))
#define FAIL() (*((int*)(0)))++
#define INF ((int)(1e9) + 1337)
#define LINF ((int64)(1e18))
#define EPS (1e-7)
#define PI (3.1415926535897932384626433832795)
#define y1 yy1
#define y0 yy0
#define j0 jj0
//#define MOD 1000000007LL
 

//#define HMOD (1000000000000000003LL)
//#ifdef _MY_DEBUG
//#define HMOD 1000000007
//#endif
//#define HBASE 524287

//mt19937 ggen;

string s1[2], s2[2];

void norm(string &s1, string &s2)
{
	while (s2[0] != 'X')
	{
		char c = s1[0];
		s1[0] = s1[1];
		s1[1] = s2[1];
		s2[1] = s2[0];
		s2[0] = c;
	}
	vector<string> s;
	string ss;
	ss = "";
	ss += s1[0];
	ss += s1[1];
	ss += s2[1];
	s.push_back(ss);
	ss = "";
	ss += s1[1];
	ss += s2[1];
	ss += s1[0];
	s.push_back(ss);
	ss = "";
	ss += s2[1];
	ss += s1[0];
	ss += s1[1];
	s.push_back(ss);
	sort (s.begin(), s.end());
	s1[0] = s[0][0];
	s1[1] = s[0][1];
	s2[1] = s[0][2];
}

void solve()
{
	cin >> s1[0] >> s1[1] >> s2[0] >> s2[1];
	norm(s1[0], s1[1]);
	norm(s2[0], s2[1]);
	if (s1[0] == s2[0] && s1[1] == s2[1])
	{
		printf("YES\n");
	}
	else
	{
		printf("NO\n");
	}
}

int main()
{
    //ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
  
	solve();
	
    return 0;
}