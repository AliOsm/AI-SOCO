#include <bits/stdc++.h>
using namespace std;

const int MAXN = 300000;
int l[MAXN], r[MAXN];
char ched[MAXN];


int main() {
  ios_base::sync_with_stdio(false);
  int n, k; cin >> n >> k;
  iota(l, l + n + 2, -1);
  iota(r, r + n + 2, 1);
  memset(ched, 0, sizeof(ched));
  vector<int> a(n + 1), P(n);
  for (int i = 1; i <= n; ++i) cin >> a[i];
  iota(P.begin(), P.end(), 1);
  sort(P.begin(), P.end(), [&](int i, int j) {
    return a[i] > a[j];
  });
  int cur = 1;
  for (int a : P) {
    if (ched[a]) continue;
    ched[a] = cur + '0';
    tie(r[l[a]], l[r[a]]) = make_pair(r[a], l[a]);
    int num = k, it = l[a];
    while (num and it != 0) {
      assert(ched[it] == 0);
      ched[it] = cur + '0';
      tie(r[l[it]], l[r[it]]) = make_pair(r[it], l[it]);
      --num;
      it = l[it];
    }
    num = k, it = r[a];
    while (num and it != n + 1) {
      assert(ched[it] == 0);
      ched[it] = cur + '0';
      tie(r[l[it]], l[r[it]]) = make_pair(r[it], l[it]);
      --num;
      it = r[it];
    }
    cur = 3 - cur;
  }
  cout << (ched + 1) << '\n';
}
