/*  */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

vector<string> ivc;
vector<string> svc;

bool judge(string s) {
	int len = s.length();
	
	if (len==0 || !isdigit(s[0]) || (len>1 && s[0]=='0'))
		return false;
	
	rep(i, 0, len) {
		if (!isdigit(s[i]))
			return false;
	}
	
	return true;
}

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	string line, tmp;
	int b, i;
	
	cin >> line;
	int len = line.length();
	
	b = i = 0;
	while (i < len) {
		if (line[i]==',' || line[i]==';') {
			// if (i > b) {
				tmp = line.substr(b, i-b);
				if (judge(tmp))
					ivc.pb(tmp);
				else
					svc.pb(tmp);
			// }
			b = i + 1;
		}
		++i;
	}
	// if (line[len-1]!=',' && line[len-1]!=';') {
		tmp = line.substr(b, len-b);
		if (judge(tmp))
			ivc.pb(tmp);
		else
			svc.pb(tmp);
	// }
	
	int sz_ivc = SZ(ivc);
	
	if (sz_ivc == 0) {
		puts("-");
	} else {
		putchar('\"');
		rep(i, 0, sz_ivc) {
			if (i) {
				printf(",%s", ivc[i].c_str());
			} else {
				printf("%s", ivc[i].c_str());
			}
		}
		putchar('\"');
		putchar('\n');
	}
	
	int sz_svc = SZ(svc);
	
	if (sz_svc == 0) {
		puts("-");
	} else {
		putchar('\"');
		rep(i, 0, sz_svc) {
			if (i) {
				printf(",%s", svc[i].c_str());
			} else {
				printf("%s", svc[i].c_str());
			}
		}
		putchar('\"');
		putchar('\n');
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
