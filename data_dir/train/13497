#include <bits/stdc++.h>
#include <iostream>	
#define pb push_back
#define mp make_pair
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
using namespace std;
typedef long long ll;
typedef long double ld;
const double PI = acos(-1.0);
const int inf = int(1e9);
const int _inf = -inf;
const int mod = inf + 7;
using namespace std;
const int N = 111111;

int a[N];
void solve()
{	
	int n, m;
	cin >> n >> m;
	int a[n][m], b[n][m];
	int c[n][m];
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			cin >> a[i][j];
		}
	}

	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			cin >> b[i][j];
		}
	}
	bool ok = 1;
	c[0][0] = a[0][0];
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			c[i][j] = min(a[i][j], b[i][j]);
		}
	}
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(c[i][j] >= c[i + 1][j] && i + 1 < n){
				c[i + 1][j] = max(a[i + 1][j], b[i + 1][j]);
			}
			if(c[i][j] >= c[i][j + 1] && j + 1 < m){
				c[i][j + 1] = max(a[i][j + 1], b[i][j + 1]);				
			}
		}
	}
	int d[n][m];
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(c[i][j] >= c[i + 1][j] && i + 1 < n) ok = 0;
			if(c[i][j] >= c[i][j + 1] && j + 1 < m) ok = 0;
		}
	}

	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(c[i][j] == a[i][j]) d[i][j] = b[i][j];
			else d[i][j] = a[i][j];
		}
	}

	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			if(d[i][j] >= d[i + 1][j] && i + 1 < n) ok = 0;
			if(d[i][j] >= d[i][j + 1] && j + 1 < m) ok = 0;
		}
		
	}

	cout << (ok ? "Possible" : "Impossible");
}

int main()
{

	solve();
	return 0;
}