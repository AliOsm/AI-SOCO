#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

ll cur = 0;
vector<int> arr;
map<ll, ll> mp;
vector<pair<ll, pair<ll, ll> > > x;

void dfs(ll pos) {
	int l = 0,
		r = x.size() - 1;
	while(l != r) {
		int mid = ((l + r) >> 1) + ((l + r) & 1);
		if(x[mid].first <= pos) {
			l = mid;
		} else {
			r = mid - 1;
		}
	}
	ll new_pos = pos - x[l].first;
	new_pos %= x[l].second.first;
	if(!mp[new_pos]) {
		dfs(new_pos);
	}
	mp[pos] = mp[new_pos];
}

int main (int argc, char *argv[])
{
	int m;
	scanf("%d", &m);
	while(m--) {
		int type;
		scanf("%d", &type);
		if(type == 1) {
			int x;
			scanf("%d", &x);
			arr.push_back(x);
			mp[cur] = x;
			++cur;
		} else {
			ll l, c;
			scanf("%lld%lld", &l, &c);
			x.push_back(make_pair(cur, make_pair(l, c)));
			cur += l * c;
		}
	}
	int n;
	scanf("%d", &n);
	while(n--) {
		ll pos;
		scanf("%lld", &pos);
		--pos;
		while(!mp[pos]) {
			dfs(pos);
		}
		printf("%lld ", mp[pos]);
	}

	return 0;
}

