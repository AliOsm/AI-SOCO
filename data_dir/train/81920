///Bismillahir Rahmanir Rahim
#include<bits/stdc++.h>

#define                           int                         long long
#define                           fi                          first
#define                           si                          second
#define                           mp                          make_pair
#define                           pb                          push_back
#define                           pi                          pair<int,int>
#define                           f(i,l,r)                    for(int i=l;i<=r;i++)
#define                           M                           200009
#define                           clr(x)                      memset(x,0,sizeof(x));
#define                           bug(i)                      cout<<"akhane ami  "<<i<<endl;
#define                           fast                        ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);




using namespace std;

const int inf=1e18;
const int mod=1e9+7;
int nxt[M+2][30];

main()
{
  fast
  int t;
  cin>>t;
  while(t--)
  {
      string s,t;
      cin>>s>>t;
      int sz=s.size();
      int st[30];
      for(int j=0;j<26;j++)nxt[sz][j]=-1,st[j]=-1;
      for(int i=sz-1;i>=0;i--)
      {

          for(int j=0;j<26;j++)
          {
              nxt[i][j]=nxt[i+1][j];
          }

          int tmp=s[i]-'a';
          st[tmp]=i;
          nxt[i][tmp]=i;
      }
      for(int i=0;i<=sz;i++)
      {
          for(int j=0;j<26;j++)
          {
              if(nxt[i][j]==-1)
              {
                  nxt[i][j]=st[j];
              }
          }
      }
     sz=t.size();
     int cnt=0,last,flag=0,pos;
     for(int i=0;i<sz;i++)
      {     int tmp=t[i]-'a';

           if(i==0)
          {
             pos=nxt[0][tmp];
             cnt++;
             if(pos==(-1))
             {
                 flag=1;
                 break;
             }

          }
          else
          {

               int ls_pos=pos;
               pos=nxt[pos+1][tmp];
               if(pos==(-1))
               {
                   flag=1;
                   break;
               }
               if(pos<=ls_pos)cnt++;

          }
          //cout<<pos<<" # ";

     }
     //cout<<endl;
     if(flag==1)
     {
         cout<<"-1"<<endl;
     }
     else
     {
         cout<<cnt<<endl;
     }

  }



















































    return 0;
}

