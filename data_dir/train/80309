#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define endl  '\n'

using namespace std;

const int MAXN = 1001 * 501 , MOD = 1e9 + 7 ;

int par [ MAXN ] = {} , mark [ MAXN] = {}  ; 

int mark2 [ MAXN ] = {} , n  , size [ MAXN ] = {}   ; 

pair < int , int > s [ MAXN ] = {} ;

vector < int > a [ MAXN ] = {} , ans [ MAXN ]  ; 

int get_par ( int u )
{
    if(par[u]==u)
        return u ; 
    int x =  get_par(par[u]) ;
    par[u] = x ;
    return x ; 
}


inline void merge(int x , int y ) 
{
    int u  = get_par(x) , v = get_par(y);
    if(v==u)
        return ;
    if(size[u]>size[v])
        swap(u,v);
    par[u] = v ; 
    size[v] += size[u] ;

}
inline void add(int u,int f)
{
    fill(mark2,mark2+MAXN,0);
    for(auto v : a[u])
        mark2[v] = 1 ;
    for(int i = 1 ; i <= n ; i ++)
    {
        if(!mark2[i]){
            merge(i,u);
        if(!f)mark[i] = 1 ;
        }
    }
}

 main()
{
    int m , f = 0;
    scanf("%d%d",&n,&m);

    int x , y ; 
    for ( int i = 0 ; i < m ; i ++)
    {
        scanf("%d%d",&x,&y);
        a[x].push_back(y);
        a[y].push_back(x);
    }
    for(int i = 1 ;i <= n ; i ++)
    {
        s[i-1] = {a[i].size(),i};
        par[i] = i ;
        size[i] = 1 ;
    }
    sort(s,s+n);
    for(int i = 0 ; i < n ; i ++)
        if(!mark[s[i].second])
          add(s[i].second,f++);
    
    for(int i = 1 ; i <= n ; i ++)
        ans[get_par(i)].push_back(i);
    vector < int > e ; 
    for(int i = 1 ; i <= n ; i ++)
        if(ans[i].size())
             e.push_back(i);
    printf("%d\n",e.size() - 1);
}
