#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md l + ((r - l) >> 1)
#define all(x) x.begin(),x.end()
#define ll long long
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 1e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9;
const ll INF2 = 2e18;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0};
const int dy[] = {0, 0, 1, -1};
const double EPS = 1e-7;
const double PI = acos(-1.0);

int n, m;
ll h[N], p[N];
inline bool possible(ll time) {
    int l = 1;
    fo(i, 1, n, 1) {
        int r;
        for (r = l; r <= m; ++r) {
            ll t = p[r] - p[l];
            t += min(abs(h[i] - p[l]), abs(h[i] - p[r]));
            if (time < t) break;
        }
        l = r;
        if (l > m) return 1;
    }
    return 0;
}
main() {
    file("queue");
    ios;
    cin >> n >> m;
    fo(i, 1, n, 1) cin >> h[i];
    fo(i, 1, m, 1) cin >> p[i];
    ll l = 0, r = INF2;
    while (l <= r) possible(md) ? r = md - 1 : l = md + 1;
    cout << l;
    return 0;
}
