#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 2001000;


int n, x, y;
ll acc[MAX], acc_cnt[MAX];


void init() {
	for(int i = 1; i < MAX; i++) acc[i] += acc[i - 1];
	for(int i = 1; i < MAX; i++) acc_cnt[i] += acc_cnt[i - 1];
}


ll cnt(int l, int r) {
	if(l > r) return 0;
	else return acc_cnt[r] - (l == 0 ? 0 : acc_cnt[l - 1]);
}

ll sum(int l, int r) {
	if(l > r) return 0;
	else return acc[r] - (l == 0 ? 0 : acc[l - 1]);
}

int a[MAX];

int main() {
	scanf("%d %d %d", &n, &x, &y);
	int M = 0;
	REP(i, n) {
		scanf("%d", a + i);
		acc[a[i]] += a[i];
		acc_cnt[a[i]]++;
		M = max(M, a[i]);
	}
	init();
	ll ans = INFINITY;
	for(ll g = 2; g <= M + 1; g++) {
		int f = min((int)g - 1, x/y);
		ll aux = 0;
		for(ll h = g; h <= M + g; h += g) {
			aux += (cnt(h - f, h)*h - sum(h - f, h))*((ll)y) + cnt(h - g + 1, h - f - 1)*((ll)x);
			//if(g == 2 && cnt(h - f, h) != 0) printf("<%lld %lld %lld %lld %lld %lld>\n", (cnt(h - f, h)*h - sum(h - f, h))*((ll)x), cnt(h - g + 1, h - f - 1)*((ll)y), h, cnt(h - f, h), sum(h - f, h), (cnt(h - f, h)*h - sum(h - f, h))*((ll)x) + cnt(h - g + 1, h - f - 1)*((ll)y));
		}
		if(ans > aux) {
			//printf("g = %lld\n", g);
			ans = aux;
		}
	}
	printf("%lld\n", ans);
}