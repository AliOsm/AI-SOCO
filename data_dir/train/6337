#include <iostream>
#include <vector>
#include <algorithm>
#include <memory>
#include <map>
#include <unordered_map>
#include <set>
#include <queue>
#include <unordered_set>
#include <functional>
#include <climits>
#include <cstring>

using namespace std;
using ll = long long;
const ll MOD = 998244353L;

ll power(ll x, ll n) {
	ll ret = 1;
	while(n) {
		if (n & 1) {
			ret *= x;
			ret %= MOD;
		}
		x *= x;
		x %= MOD;
		n >>= 1;
	}
	return ret;
}

ll inv(ll x, ll mod) {
	return power(x, mod - 2);
}

ll mod(ll x) {
	while(x < 0) {
		x += MOD;
	}
	while(x >= MOD) {
		x -= MOD;
	}
	return x;
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
	ll n;
	cin >> n;
	vector<ll> c(n + 1);
	vector<ll> f(n + 1);
	f[0] = 1;
	for(int i = 1; i <= n; ++i) {
		f[i] = f[i - 1] * i;
		f[i] %= MOD;
	}
	for(int i = 0; i <= n; ++i) {
		c[i] = f[n] * inv(f[i], MOD);
		c[i] %= MOD;
		c[i] *= inv(f[n - i], MOD);
		c[i] %= MOD;
	}
#ifdef DEBUG
	for(int i = 0; i <= n; ++i) {
		cout << "i = " << c[i] << endl;
	}

	for(int i = 0; i <= n; ++i) {
		cout << "i = " << f[i] << endl;
	}
#endif

	ll ret = 0;
	for(int i = 1; i <= n; ++i) {
		ll t = power(3, n * (n - i) + i);
		if ((i + 1) % 2 == 0) {
			ret += (c[i] * t) % MOD;
		} else {
			ret -= (c[i] * t) % MOD;
		}
		ret = mod(ret);
	}
	ret *= 2;
	ret %= MOD;

	ll s = 0;
	for(int i = 0; i < n; ++i) {
		ll x = power(3, i);
		x = 1 - x;
		x = power(x, n);
		ll y = power(3, i);
		y = power(-y, n);
		x -= y;
		x = mod(x);
		x *= c[i];
		x %= MOD;
		if ((i + 1) % 2 == 1) {
			x = -x;
		}		
		s += x;
		s = mod(s);
	}
	s *= 3;
	s %= MOD;

	cout << mod(s + ret) << endl;
	return 0;
}
