#include <bits/stdc++.h>

using namespace std;

const int maxi=1e6;
const long long mo=1e9+7;
struct node
{
    int p;
    int t;
};

node a[maxi],b[maxi];
long long cnt[maxi],fi[maxi],f[maxi];
int n,k,l,r;


bool cmp(node a, node b)
{
  if (a.p<b.p) return 1; else
    return 0;
}

long long step(long long x, long long s)
{
    if (s==0) return 1; else
        if (s%2==1)
    {
        long long g=step(x,s/2);
        return (((g*g)%mo)*x)%mo;
    } else
    {
        long long g=step(x,s/2);
        return (g*g)%mo;
    }
}

int main()
{
    scanf("%d%d",&n,&k);

    f[0]=1;

    for (long long i=1;i<5*1e5;i++)
        f[i]=(f[i-1]*i)%mo;

   for (int i=0;i<=5*1e5;i++)
    fi[i]=step(f[i],mo-2);

  for (int i=1;i<=n;i++)
   {
       scanf("%d%d",&l,&r);
       a[i].p=l;
       a[i].t=1;
       a[i+n].p=r+1;
       a[i+n].t=2;
   }

   sort(a+1,a+2*n+1,cmp);

   int br=0;
   a[0].p=-mo;
   for (int i=1;i<=2*n;i++)
   {
    if (a[i].p!=a[i-1].p)
    {
        br++;
        b[br].p=a[i].p;
    }
    if (a[i].t==2) b[br].t--; else b[br].t++;
   }

   int tr=b[1].t;
   for (int i=2;i<=br;i++)
   {
       cnt[tr]+=b[i].p-b[i-1].p;
       tr+=b[i].t;
   }

   long long ans=0;

 for (int i=k;i<=n;i++)
    ans=(ans+((((f[i]*fi[k])%mo)*((cnt[i]*fi[i-k])%mo))%mo))%mo;
 cout<<ans;

 return 0;
}
//APSOLUTNO SAM PROPO
