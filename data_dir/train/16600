#include "bits/stdc++.h"
//#include "ext/pb_ds/tree_policy.hpp"
//#include "ext/pb_ds/assoc_container.hpp"
#define PB push_back
#define PF push_front
#define LB lower_bound
#define UB upper_bound
#define fr(x) freopen(x,"r",stdin)
#define fw(x) freopen(x,"w",stdout)
#define iout(x) printf("%d\n",x)
#define lout(x) printf("%lld\n",x)
#define REP(x,l,u) for(ll x = l;x<u;x++)
#define RREP(x,l,u) for(ll x = l;x>=u;x--)
#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())
#define mst(x,a) memset(x,a,sizeof(x))
#define all(a) a.begin(),a.end()
#define PII pair<int,int>
#define PLL pair<ll,ll>
#define MP make_pair
#define sqr(x) ((x)*(x))
#define lowbit(x) (x&(-x))
#define lson (ind<<1)
#define rson (ind<<1|1)
#define se second
#define fi first
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl;
#define sz(x) ((int)x.size())
#define EX0 exit(0);


typedef  long long ll;
typedef unsigned long long ull;
typedef double db;
typedef long double ld;
using namespace std;
typedef vector<ll> VLL;
typedef vector<int> VI;
const int block_size = 320;
typedef complex<ll> point;
const ll mod = 1e9+7;
const ll inf = 1e9+7;
const ld eps = 1e-9;
const db PI = atan(1)*4;
template<typename T>
inline int sign(const T&a) {
    if(a<0)return -1;
    if(a>0)return 1;
    return 0;
}

template<typename T,typename S>inline bool upmin(T&a,const S&b){return a>b?a=b,1:0;}
template<typename T,typename S>inline bool upmax(T&a,const S&b){return a<b?a=b,1:0;}

template<typename T> inline void in(T &x) {
    x = 0;
    T f = 1;
    char ch = getchar();
    while (!isdigit(ch)) {
        if (ch == '-') f = -1;
        ch = getchar();
    }
    while (isdigit(ch))  {
        x = x * 10 + ch - '0';
        ch = getchar();
    }
    x *= f;
}

ll twop(int x) {
    return 1LL<<x;
}

template<typename A,typename B > inline void in(A&x,B&y) {
    in(x);
    in(y);
}
template<typename A,typename B,typename C>inline void in(A&x,B&y,C&z) {
    in(x);
    in(y);
    in(z);
}
template<typename A,typename B,typename C,typename D> inline void in(A&x,B&y,C&z,D&d) {
    in(x);
    in(y);
    in(z);
    in(d);
}


ll n,k,v;
ll vol[10000];
bool wan[10000];
bool ok[5010][5010],want[5010][5010];
void bye(){
    cout<<"NO"<<endl;exit(0);
}
int main() {
#ifndef ONLINE_JUDGE
    fr("/Users/zhangqingchuan/Desktop/cp/cp/input.txt");
    fw("/Users/zhangqingchuan/Desktop/cp/cp/output.txt");
#endif

    cin>>n>>k>>v;
    REP(i,1,n+1)in(vol[i]);
    ok[0][0] = 1;
    REP(i,0,n){
        REP(j,0,5010){
            if(ok[i][j]){
                ok[i+1][j] = 1;
                want[i+1][j] = 0;
                ok[i+1][(j+vol[i+1])%k] = 1;
                want[i+1][(j+vol[i+1])%k] = 1;
            }
        }
    }
    ll sum = 0;
    REP(i,1,n+1)sum+=vol[i];;
    if(sum<v)bye();
    if(!ok[n][v%k]){
        bye();
    }
    
    if(v%k == 0){
        cout<<"YES\n";
        REP(i,2,n+1){
            printf("1000000000 %lld 1\n",i);
            vol[1]+=vol[i];
            vol[i] = 0;
        }
        if(v/k)printf("%lld 1 2\n",v/k);
    }else{
        cout<<"YES\n";
        ll cur = v%k;
        VLL ele;
        RREP(i,n,1){
            if(want[i][cur]){
                ele.PB(i);
                cur-=vol[i]%k;
                if(cur<0)cur+=k;
            }
        }
        for(auto i:ele)wan[i] = 1;
        ll fin = ele.back(),oth;
        REP(i,1,n+1)if(i!=fin){
            oth = i;break;
        }
        REP(i,1,n+1){
            if(wan[i]){
                if(i!=fin){
                    vol[fin]+=vol[i];vol[i] = 0;
                    printf("1000000000 %lld %lld\n",i,fin);
                }
            }else{
                if(i!=oth){
                    vol[oth]+=vol[i];vol[i] = 0;
                    printf("1000000000 %lld %lld\n",i,oth);
                }
            }
        }
        if(vol[fin]>v){
            printf("%lld %lld %lld\n",(vol[fin]-v)/k,fin,oth);
        }else if(vol[fin]<v){
            printf("%lld %lld %lld\n",(v-vol[fin])/k,oth,fin);
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    return 0;
}


