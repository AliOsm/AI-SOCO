#include <bits/stdc++.h>

using namespace std;

bool adj[26][26];
vector<int> graph[26];
int deg[26];
vector<int> path;
bool flag = true;
bool vis[26];

void dfs(int u, int par)
{
    path.push_back(u);
    vis[u] = true;
    int cnt = 0;
    for(int i=0; i<graph[u].size(); i++){
        int v = graph[u][i];
        if(v == par) continue;
        cnt++;
    }
    if(cnt > 1){
        flag = false;
        return;
    }
    if(cnt == 0){
        return;
    }
    int nextNode;
    for(int i=0; i<graph[u].size(); i++){
        int v = graph[u][i];
        if(v == par) continue;
        nextNode = v;
    }
    if(vis[nextNode]) flag = false;
    else dfs(nextNode, u);
}

int main()
{
    int cases;
    scanf("%d", &cases);
    while(cases--){
        string str;
        cin >> str;
        int len = (int) str.length();
        if(len == 1){
            cout << "YES" << endl;
            for(char x = 'a'; x <= 'z'; x++) cout << x;
            cout << endl;
            continue;
        }
        memset(adj, false, sizeof adj);
        memset(deg, 0, sizeof deg);
        for(int i=0; i<26; i++) graph[i].clear();
        path.clear();
        flag = true;
        memset(vis, false, sizeof vis);
        for(int i=1; i<str.length(); i++){
            int u = str[i-1]-'a';
            int v = str[i]-'a';
            adj[u][v] = true;
            adj[v][u] = true;
        }
        for(int i=0; i<26; i++){
            for(int j=0; j<26; j++){
                if(adj[i][j]){
                    graph[i].push_back(j);
                    deg[i]++;
                    deg[j]++;
                }
            }
        }
        int root = -1;
        for(int i=0; i<26; i++){
            if(deg[i] == 2) root = i;
        }
        if(root == -1){
            cout << "NO" << endl;
            continue;
        }
        dfs(root, -1);
        if(flag == false){
            cout << "NO" << endl;
            continue;
        }
        string ans = "";
        for(int i=0; i<path.size(); i++){
            int node = path[i];
            ans += (char)((int)node+'a');
        }
        //cout << "THIS " << ans << endl;
        for(int i=0; i<26; i++){
            if(vis[i] == false) ans += (char)(i+'a');
        }
        cout << "YES" << endl;
        cout << ans << endl;
    }
}