#include <bits/stdc++.h>

using namespace std;

long long call(long long n){
    return (n*(n-1)*(n-2))/6;
}
int main(){
    int n;
    scanf("%d",&n);

    int arr[n+5][4];
    for(int i=1;i<=n;i++)scanf("%d %d",&arr[i][1],&arr[i][2]);

    long long res=call(n);

    bool vis[2000+5][2000+5]={};

    for(int i=1;i<=n;i++){
        vector<pair<pair<int,int>,int> >vec;

        for(int j=i+1;j<=n;j++){

            if(vis[i][j])continue;

            int num=arr[j][2]-arr[i][2];
            int den=arr[j][1]-arr[i][1];

            int gcd=__gcd(num,den);

            num/=gcd;
            den/=gcd;

            if(den<0){
                num*=-1;
                den*=-1;
            }
            vec.push_back(make_pair(make_pair(num,den),j));
        }
        sort(vec.begin(),vec.end());

        for(int j=0;j+1<vec.size();j++){
            if(vec[j].first==vec[j+1].first){
                vector<int>temp;
                temp.push_back(i);

                int idx=j,cnt=2;
                while(idx+1<vec.size() && vec[idx].first==vec[idx+1].first){
                    temp.push_back(vec[idx].second);
                    idx++;
                    cnt++;
                }
                temp.push_back(vec[idx].second);
                res-=call(cnt);

                for(int k=0;k<temp.size();k++){
                    for(int l=k+1;l<temp.size();l++){
                        vis[temp[k]][temp[l]]=true;
                    }
                }
                j=idx;
            }
        }
    }
    printf("%lld\n",res);

    return 0;
}
