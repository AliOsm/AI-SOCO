#include<bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define int long long int
using namespace std;
int mod = 1e9+7;
signed main()
{
	fast;
	int n,l,r;
	cin>>n>>l>>r;
	int dp[n+1][3]={};
	int r1 = l%3;
	int r2 = r%3;
	int l0,l1,l2,s0,s1,s2;
	if(r2==0)
	{
		l0 = r;
		l1 = r-2;
		l2 = r-1;
	}
	else if(r2==1)
	{
		l0 = r-1;
		l1 = r;
		l2 = r-2;
	}
	else
	{
		l0 = r-2;
		l1 = r-1;
		l2 = r;
	}
	if(r1 ==0)
	{
		s0 = l;
		s1 = l+1;
		s2 = l+2;
	}
	else if(r1==1)
	{
		s0 = l+2;
		s1 = l;
		s2 = l+1;
	}
	else
	{
		s0 = l+1;
		s1 = l+2;
		s2 = l;
	}
	dp[1][0] = max((int)0,((l0-s0)/3)+1);
	dp[1][1] = max((int)0,((l1-s1)/3)+1);
	dp[1][2] = max((int)0,((l2-s2)/3)+1);
	for(int i=2;i<=n;i++)
	{
		dp[i][0] = (dp[i-1][1]%mod)*(dp[1][2]%mod) + (dp[i-1][2]%mod)*(dp[1][1]%mod) + (dp[i-1][0]%mod)*(dp[1][0]%mod);
		dp[i][1] = (dp[i-1][0]%mod)*(dp[1][1]%mod) + (dp[i-1][1]%mod)*(dp[1][0]%mod) + (dp[i-1][2]%mod)*(dp[1][2]%mod);
		dp[i][2] = (dp[i-1][0]%mod)*(dp[1][2]%mod) + (dp[i-1][1]%mod)*(dp[1][1]%mod) + (dp[i-1][2]%mod)*(dp[1][0]%mod);
		dp[i][0]%=mod;
		dp[i][1]%=mod;
		dp[i][2]%=mod;
	}
	cout<<dp[n][0];
}