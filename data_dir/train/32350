#include <bits/stdc++.h>

using namespace std;

vector <int> g[102020], r_g[102020], order;
int n, m, ans[102020];
int was[102020];
bool u[102020];

void dfs(int v){
	u[v] = 1;
	for(int i = 0;i < g[v].size();++ i){
		int to = g[v][i];
		if(!u[to])
			dfs(to);
	}
	order.push_back(v);
}

int main () {
	cin >> n >> m;
	for(int i = 1;i <= m;++ i){
   		int x, y;
   		cin >> x >> y;
   		g[x].push_back(y);
   		r_g[y].push_back(x);
   		was[x] ++;
   	}
	
	for (int i = 1; i <= n; i ++)
		if(!u[i])
			dfs(i);
	
	priority_queue < int > q;
   	for(int i = 0;i < order.size();++ i){
		int v = order[i];
		if(!was[v])
			q.push(v);   		
   	}
	
	int kol = n;
	while(q.size()){
		int v = q.top();
		q.pop();
		ans[v] = kol --;
		for(int i = 0;i < r_g[v].size();i ++){
			int to = r_g[v][i];
			was[to] --;
			if(!was[to]){
				q.push(to);
			}
		}
	}
	
	for (int i = 1; i <= n; i ++) {
		cout << ans[i] << ' ';
	}
}