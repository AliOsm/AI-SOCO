#include <iostream>
#include <cstring>
#include <cmath>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>

using namespace std;

#define ll long long
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define sz size()
#define all(x) x.begin(),x.end()

const int maxn = 100500;
const int inf = (1 << 30);
const int mod = int(1e9) + 7;
const int base = 257;

vector < int > v[maxn];
vector < pair < int, int > > ans;
int n, k, a[maxn], root, max1;

int main () {        
	ios :: sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("in", "r", stdin);
		freopen("out", "w", stdout);
	#endif
		cin >> n >> k;
		for (int i = 1; i <= n; i++) {
			cin >> a[i];
			if (a[i] == 0)  {
				if (root == 0)
					root = i;
				else {
					cout << -1;
					return 0;
				}
			}
			v[a[i]].pb(i);
			max1 = max(max1, a[i]);
		}
		if (!root || v[1].sz > k || (k == 1 && n > 2)) {
			cout << -1;
			return 0;
		}
		for (int i = 0; i < v[1].sz; i++)
			ans.pb(mp(root, v[1][i]));
		for (int u = 2; u <= max1; u++) {
			if (v[u - 1].sz) {
				int x = v[u].sz / (k - 1) + (v[u].sz % (k - 1) != 0);
				if (x > v[u - 1].sz) {
					cout << -1;
					return 0;
				}
				int r = 0;
				for (int i = 0; i < x; i++) {            
					for (int j = r; j < min(r + k - 1, (int)v[u].sz); j++)
						ans.pb(mp(v[u - 1][i], v[u][j]));
					r += k - 1;
				}
			}
			else {
				cout << -1;
				return 0;
			}
		}
		cout << ans.sz << endl;
		for (int i = 0 ; i < ans.sz; i++)
			cout << ans[i].f << " " << ans[i].s << endl;

	return 0;                        	
}
