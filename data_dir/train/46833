#include <bits/stdc++.h>

using namespace std;

#define endl           '\n'
#define all(x)         x.begin(), x.end()
#define rall(x)        x.rbegin(), x.rend()
#define mem(x, y)      memset(x, y, sizeof x)

template <typename T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <typename T> inline void umin(T &a, T b) {a = a < b ? a : b;}
template <typename T> inline void umax(T &a, T b) {a = a > b ? a : b;}

const int N = (int) 1e5 + 5;
const int INF = (int) 1e9 + 7;
const long long MOD = (long long) 1e9 + 7;

char s[11][11];

inline invalid(int x, int y) {
    return !x or !y or x > 10 or y > 10 or s[x][y] != 'X';
}

inline bool check(int x, int y) {
    int a = 0, b = 0;
    for (int i = y + 1; i <= 10; i++, a++) if (invalid(x, i)) break;
    for (int i = y - 1; i >= 1; i--, b++) if (invalid(x, i)) break;
    if (a + b + 1 >= 5) return true;

    a = 0, b = 0;
    for (int i = x + 1; i <= 10; i++, a++) if (invalid(i, y)) break;
    for (int i = x - 1; i >= 1; i--, b++) if (invalid(i, y)) break;
    if (a + b + 1 >= 5) return true;

    a = 0, b = 0;
    for (int i = x - 1, j = y - 1; !invalid(i, j); i--, j--) a++;
    for (int i = x + 1, j = y + 1; !invalid(i, j); i++, j++) b++;
    if (a + b + 1 >= 5) return true;

    a = 0, b = 0;
    for (int i = x - 1, j = y + 1; !invalid(i, j); i--, j++) a++;
    for (int i = x + 1, j = y - 1; !invalid(i, j); i++, j--) b++;
    if (a + b + 1 >= 5) return true;

    return false;
}

int main() {
    for (int i = 1; i <= 10; i++) scanf("%s", s[i] + 1);
    for (int i = 1; i <= 10; i++) {
        for (int j = 1; j <= 10; j++) {
            if (s[i][j] == 'X' and check(i, j)) {
                return !printf("YES\n");
            }
            if (s[i][j] == '.') {
                s[i][j] = 'X';
                if (check(i, j)) return !printf("YES\n");
                s[i][j] = '.';
            }
        }
    }
    puts("NO");
    return 0;
}