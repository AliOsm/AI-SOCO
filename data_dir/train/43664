#include <bits/stdc++.h>

using namespace std;

const int N = 1234567;

int n, m;
int power[N];
int cnt[N];
int nxt[N];

int main() {
  scanf("%d %d", &n, &m);
  for (int i = 0; i < n; i++) scanf("%d", power + i);
  int len = (int) sqrt(n + .0);
  for (int i = n - 1; i >= 0; i--) {
    int j = i + power[i];
    if (i / len < j / len || j >= n) {
      cnt[i] = 1;
      nxt[i] = min(j, n);
    } else {
      cnt[i] = cnt[j] + 1;
      nxt[i] = nxt[j];
    }
  }
  while (m--) {
    int t; scanf("%d", &t);
    if (t == 0) {
      int a, b; scanf("%d %d", &a, &b); a--;
      power[a] = b;
      for (int i = len - 1; i >= 0; i--) {
        int cur = (a / len) * len + i;
        int to = cur + power[cur];
        if (cur / len < to / len || to >= n) {
          cnt[cur] = 1;
          nxt[cur] = min(to, n);
        } else {
          cnt[cur] = cnt[to] + 1;
          nxt[cur] = nxt[to];
        }
      }
    } else if (t == 1) {
      int a; scanf("%d", &a); a--;
      int last = 0, jumps = 0;
      while (a < n) {
        last = a;
        jumps += cnt[a];
        a = nxt[a];
      }
      while (true) {
        int to = last + power[last];
        if (to >= n) break;
        last = to;
      }
      printf("%d %d\n", last + 1, jumps);
    }
  }
  return 0;
}