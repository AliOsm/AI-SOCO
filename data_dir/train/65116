#include <bits/stdc++.h>
#define endl '\n'

using namespace std;
const int MAXN = (1 << 20);
const int MAXLOG = 22;
const int mod = (int)1e9 + 7;
const int mod_inv2 = mod / 2 + 1;

int q;

void read()
{
	cin >> q;
}

int dp[MAXN][MAXLOG];
int lp[MAXN];

void precompute()
{
	for(int i = 2; i < MAXN; i++) if(!lp[i])
		for(int j = i; j < MAXN; j += i)
			if(!lp[j]) lp[j] = i;

	dp[0][0] = 1;
	for(int r = 1; r < MAXLOG; r++) dp[0][r] = 2;
	for(int i = 1; i < MAXN; i++)
    	for(int r = 0; r < MAXLOG; r++)
            dp[i][r] = (dp[i - 1][r] + (r ? dp[i][r - 1] : 0)) % mod;
}

void solve()
{
	precompute();

	for(int t = 0; t < q; t++)
	{
		int n, r;
		cin >> r >> n;

		int64_t res = 1;

		while(n != 1)
		{
            int cnt = 0, div = lp[n];
            while(n % div == 0) cnt++, n /= div;
            res = (res * 1ll * dp[r][cnt]) % mod;
		}

		cout << res << endl;

	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}
