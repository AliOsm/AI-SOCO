#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll lg=22;
const ll N=2e5+5;
const ll INF=1e18;
const ll mod=1e9+7;
const double PI = 3.14159265358979323846;

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define fast ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1LL;x=(x*x)%m;}return ans%m;}

inline ll mul(ll a, ll b, ll p){ return (a * 1ll * b) % p; }
inline ll sub(ll a, ll b, ll p){ ll c = a - b; if(c < 0) c += p; return c; }
inline ll add(ll a, ll b, ll p){ ll c = a + b; if(c > p) c -= p; return c; }

#define trace1(x)                   cerr<<#x<<": "<<x<<endl
#define trace2(x, y)                cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)             cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)          cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
#define trace7(a, b, c, d, e, f, g) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<" | "<<#g<< ": "<<g<<endl

ll maxi[N],col[N];

int main()
{
  ll t;
  cin>>t;
  while(t--)
  {
    ll n;
    string s;
    cin>>n>>s;
    ll cnt=0,ff=0;
    maxi[0]=s[0]-'0';
    ll las1=INF,las2=INF,mid=-INF;
    for(ll i=1;i<n;i++){maxi[i]=max(maxi[i-1],(ll)s[i]-'0');}
    for(ll i=n-1;i>0;i--)
    {
      ll cur=s[i]-'0';
      ll premax=maxi[i-1];
      if(cur<premax)
      {
        if(cur<=las1)
        {
          cnt++;
          if(cnt==1){mid=cur;}
          las1=cur;
          col[i]=1;
        }
        else{ff=1;break;}
      }
      else if(cur>=premax)
      {
        if(cur<=las2)
        {
          if(cur>=mid)
          {
            las2=cur;
            col[i]=2;
          }
          else
          {
            if(cur<=las1)
            {
              las1=cur;
              col[i]=1;
            }
            else{ff=1;break;}
          }
        }
        else{ff=1;break;}
      }
    }
    ll fir=s[0]-'0';
    if(fir<=las1){col[0]=1;}
    else if(fir>=mid&&fir<=las2){col[0]=2;}
    else{ff=1;}
    //for(ll i=0;i<n;i++){cout<<col[i];}
    //cout<<endl;
    if(ff){cout<<'-'<<endl;}
    else
    {
      for(ll i=0;i<n;i++){cout<<col[i];}
      cout<<endl;
    }
  }
}
