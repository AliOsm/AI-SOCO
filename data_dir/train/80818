#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x, y) memset(x, y, sizeof(x))
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b > a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b < a)a = b; }
const int N = 0, M = 0, Z = 1e9 + 7, inf = 0x3f3f3f3f;
template <class T1, class T2>inline void gadd(T1 &a, T2 b) { a = (a + b) % Z; }
int casenum, casei;
LL n, K;
LL euler(LL x)
{
	LL ans = x;
	for (LL i = 2; i * i <= x; ++i)if (x % i == 0)
	{
		ans = ans / i * (i - 1);
		while (x % i == 0)x /= i;
	}
	if (x > 1)ans = ans / x * (x - 1);
	return ans;
}

int main()
{
	while (~scanf("%lld%lld", &n, &K))
	{
		if (K % 2 == 0)--K;
		LL T = (K + 1) / 2;
		LL ans = n;
		while (T--)
		{
			ans = euler(ans);
			if (ans == 1)break;
		}
		printf("%lld\n", ans % Z);
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【分析】
一个数所有约数的欧拉函数等于这个数本身。

f(x)表示x的欧拉函数
g(x)表示x所有约数的欧拉函数之和，g(x)=x
所以F1(n)=f(n)
F2(n) = g(F1(n)) = F1(n)
F3(n) = f(F2(n)) = f(F1(n))

【时间复杂度&&优化】

1234567890 123
*/