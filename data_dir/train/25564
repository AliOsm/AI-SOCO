// In the name of god
#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <assert.h>
#include <ctime>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <list>
#include <bitset>
#define sqr(a) ((a)*(a))
#define all(a) (a).begin(), (a).end()
using namespace std;
 
template <typename T>
T next_int() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if(ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return p * x;
}
 
string next_token() {
    char ch;
    string ans = "";
    do { ch = getchar(); } while(ch <= ' ');
    while(ch > ' ') {
        ans += ch;
        ch = getchar();
    }
    return ans;
}
 
const long long INF = (long long)1e18;
const int INFINT = (int)1e9 + 227 + 1;
const int MAXN = (int)1e6 + 227 + 1;    
const int MOD = (int)1e9 + 7;
const long double EPS = 1e-9;
 
long long bin_pow(long long a, long long b) {
    if(!b) return 1;
    long long ans = bin_pow(a, b / 2);
    ans = ans * ans;
    if(b % 2) ans = ans * a;
    return ans;
}

string a[10];

bool check() {
    for(int i = 0; i < 10; i++)
        for(int j = 0; j < 10; j++) {
            if(i + 5 <= 10) {
                if(a[i][j] == 'X' && a[i + 1][j] == 'X' && a[i + 2][j] == 'X' && a[i + 3][j] == 'X' && a[i + 4][j] == 'X')
                    return 1;
            }
            if(j + 5 <= 10) {
                if(a[i][j] == 'X' && a[i][j + 1] == 'X' && a[i][j + 2] == 'X' && a[i][j + 3] == 'X' && a[i][j + 4] == 'X')
                    return 1;
            }
            if(j + 5 <= 10 && i + 5 <= 10) {
                if(a[i][j] == 'X' && a[i + 1][j + 1] == 'X' && a[i + 2][j + 2] == 'X' && a[i + 3][j + 3] == 'X' && a[i + 4][j + 4] == 'X')
                    return 1;
            }
            if(j - 4 >= 0 && i + 5 <= 10) {
                if(a[i][j] == 'X' && a[i + 1][j - 1] == 'X' && a[i + 2][j - 2] == 'X' && a[i + 3][j - 3] == 'X' && a[i + 4][j - 4] == 'X')
                    return 1;
            }
        }

    return 0;
}

int main() {
    // freopen(".in", "r", stdin);

    for(int i = 0; i < 10; i++)
        a[i] = next_token();

    for(int i = 0; i < 10; i++)
        for(int j = 0; j < 10; j++)
            if(a[i][j] == '.') {
                a[i][j] = 'X';

                if(check()) {
                    puts("YES");
                    return 0;
                }

                a[i][j] = '.';
            }

    puts("NO");
}

