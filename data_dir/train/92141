#include <iostream>
#include <string>
#include <vector>
#include <hash_map>
#include <hash_set>
#include <algorithm>
#include <queue>
#include <sstream>
#include <iterator>
#include <set>
#include <map>
using namespace std;
typedef long long LL;
#define mems(mas, val) memset(mas, val, sizeof(mas))
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define mp(a,b) make_pair(a, b)
int const SIZE = 200005;

int parent[SIZE];
int type[SIZE];
bool alive[SIZE];
int DNA[SIZE];


int convert(int n, int p)
{
	int ans = 0;
	while(n > 0)
	{
		n /= p;
		ans++;
	}
	return ans;
}

int convtodec(int n, int p)
{
	int curdeg = 1;
	int ans = 0;
	while (n > 0)
	{
		ans += curdeg * (n % 10);
		n /= 10;
		curdeg *= p;
	}

	return ans;
}

int main()
{

#ifdef MY_SOL
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif

	int n;
	cin>>n;
	
	string str;
	cin >> str;

	int firstone = 0, firstzero = 0;
	for (int i = 0; i < n; i++)
	{
		if (i % 2 == 0)
		{
			if (str[i] == '1') firstone++;
			else firstzero++;
		}
		else
		{
			if (str[i] == '0') firstone++;
			else firstzero++;
		}			
	}

	cout << n - max(firstone,firstzero);
    return 0;
}