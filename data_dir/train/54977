#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
#include <random>
#include <cassert>
#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x), end(x)
#define SZ(x) (int)(x).size()
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
#define ln(i, n) " \n"[i == n]
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9;
const LL  INFF = (LL)1e18;
const int mod = (int)1e9 + 7;
const int MXN = (int)1e6 + 7;
char s[MXN];
int dp[MXN][3];
int pre[MXN][3];
char out[MXN];
char ss[] = {'R', 'G', 'B'};
int main(){
	int n; scanf("%d %s", &n, s + 1);
	for (int i = 1; i <= n; i++)
		for (int j = 0; j < 3; j++)
			dp[i][j] = INF;
	for (int i = 1; i <= n; i++) {
		int p;
		if (s[i] == 'R') p = 0;
		else if (s[i] == 'G') p = 1;
		else p = 2;
		for (int j = 0; j < 3; j++) {
			for (int k = 0; k < 3; k++) {
				if (k == j) continue;
				dp[i][j] = min(dp[i-1][k] + (j != p), dp[i][j]);
				if (dp[i-1][k] + (j != p) == dp[i][j]) {
					pre[i][j] = k;
				}
			}
		}
	}
	int ans = INF;
	for (int i = 0; i < 3; i++)
		ans = min(ans, dp[n][i]);
	for (int i = 0; i < 3; i++) {
		if (dp[n][i] == ans) {
			int pp = i;
			for (int j = n; j >= 1; j--) {
				out[j] = ss[pp];
				pp = pre[j][pp];
			}
			break;
		}
	}
	printf("%d\n%s\n", ans, out + 1);
	return 0;
}
