#include<bits/stdc++.h>
using namespace std;
const int blk=400;
char s[100010][11];
int n,m,Q,bel[100010],bl[255],br[255];
pair<int,int> pos[100010][11];
void build(int id)
{
	int L=bl[id],R=br[id];
	for(int i=L;i<=R;i++)fill(pos[i]+1,pos[i]+m+1,make_pair(-1,-1));
	queue<pair<int,int> > q;
	for(int i=L;i<=R;i++)
	{
		if(s[i][1]=='<')
		{
			pos[i][1]=make_pair(i,0);
			q.push(make_pair(i,1));
		}
		if(s[i][m]=='>')
		{
			pos[i][m]=make_pair(i,m+1);
			q.push(make_pair(i,m));
		}
	}
	for(int i=1;i<=m;i++)
	{
		if(s[L][i]=='^')
		{
			pos[L][i]=make_pair(L-1,i);
			q.push(make_pair(L,i));
		}
	}
	while(!q.empty())
	{
		pair<int,int> fr=q.front();q.pop();
		pair<int,int> &v=pos[fr.first][fr.second];
		if(fr.second!=m&&s[fr.first][fr.second+1]=='<')
		{
			pos[fr.first][fr.second+1]=v;
			q.push(make_pair(fr.first,fr.second+1));
		}
		if(fr.second!=1&&s[fr.first][fr.second-1]=='>')
		{
			pos[fr.first][fr.second-1]=v;
			q.push(make_pair(fr.first,fr.second-1));
		}
		if(fr.first!=R&&s[fr.first+1][fr.second]=='^')
		{
			pos[fr.first+1][fr.second]=v;
			q.push(make_pair(fr.first+1,fr.second));
		}
	}
}
char opt[5];
int x,y;
int main()
{
	scanf("%d%d%d",&n,&m,&Q);
	for(int i=1;i<=n;i++)
	{
		scanf("%s",s[i]+1);
		bel[i]=(i-1)/blk+1;
		if(bel[i]!=bel[i-1])bl[bel[i]]=i;
		br[bel[i]]=i;
	}
	for(int i=1;i<=bel[n];i++)build(i);
	while(Q--)
	{
		scanf("%s%d%d",opt,&x,&y);
		if(opt[0]=='A')
		{
			pair<int,int> npos=make_pair(x,y);
			while(npos.first>0&&npos.second>0&&npos.second<=m)npos=pos[npos.first][npos.second];
			printf("%d %d\n",npos.first,npos.second);
		}
		else
		{
			scanf("%s",opt);
			s[x][y]=opt[0];
			build(bel[x]);
		}
	}
	return 0;
}