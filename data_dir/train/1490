/**************************************************************
    Problem: ????
    User: Big_Red_Dates
    Language: GNU_C++11
    Result: Accepted
    Time:0 ms
    Memory:0 kb
    length:0 kb
    score: inf
****************************************************************/
//CLOCKS_PER_SEC
using namespace std;
#include<bitset>
#include<deque>
#include<stdint.h>
#include<set>
#include<stack>
#include<cmath>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<iomanip>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<cstring>
#include<ctime>
#include<unordered_map>
#define sqr(x) (x)*(x)
//#define sort stable_sort
#define ll long long
#define mk make_pair
#define pb push_back
#define in insert
#define mtr(x,y,z) mk(mk(x,y),z)
#define fi first
#define se second
#define lch(x) ((x)<<1)
#define rch(x) (((x)<<1)|1)
#define all(x) (x).begin(),(x).end()
#define titose CLOCKS_PER_SEC
#define fpi(x) freopen(x,"r",stdin);
#define fpo(x) freopen(x,"w",stdout);
#define fprio fpi("in.txt");fpo("out.txt");
#define fast ios_base::sync_with_stdio(false);
inline void read(int &x){int v=0,f=1;char c=getchar();while (!isdigit(c)&&c!='-') c=getchar();if (c=='-') f=-1; else v=(c&15);while (isdigit(c=getchar())) v=(v<<1)+(v<<3)+(c&15);x=v*f;}
inline void read(ll &x){ll v=0ll,f=1ll;char c=getchar();while (!isdigit(c)&&c!='-') c=getchar();if (c=='-') f=-1; else v=(c&15);while (isdigit(c=getchar())) v=(v<<1)+(v<<3)+(c&15);x=v*f;}
inline void readc(char &x){char c;while ((c=getchar())==' ');x=c;}
inline void writes(string s){puts(s.c_str());}
inline void writeln(){writes("");}
inline void writei(int x){if (x<0){putchar('-');x=abs(x);}if (!x) putchar('0');char a[25];int top=0;while (x){a[++top]=(x%10)+'0';x/=10;}while (top){putchar(a[top]);top--;}}
inline void writell(ll x){if (x<0){putchar('-');x=abs(x);}if (!x) putchar('0');char a[25];int top=0;while (x){a[++top]=(x%10)+'0';x/=10;}while (top){putchar(a[top]);top--;}}
#define pii pair<int,int>
#define pll pair<ll,ll>
#define vi vector<int>
#define vl vector<ll>
#define si set<int>
//#define sl set<ll>
#define mii unordered_map<int,int>
#define mll unordered_map<ll,ll>
#define msi unordered_map<string,int>
#define msl unordered_map<string,ll>
#define piii pair<int,pii >
#define piipi pair<pii,int>
#define plll pair<ll,pll >
#define pllpl pair<pll,ll>
#define pqi priority_queue<int>
#define pql priority_queue<ll>
#define npqi priority_queue<int,vector<int>,greater<int> >
#define npql priority_queue<ll,vector<ll>,greater<ll> >
#define forup(i,a,b) for ((i)=(a);(i)<=(b);(i)++)
#define fordo(i,a,b) for ((i)=(a);(i)>=(b);(i)--)
#define rep(i,x) forup ((i),1,(x))
#define repd(i,x) fordo ((i),(x),1)
#define itr iterator
#define fe(itcalc,c) for(__typeof((c).begin()) itcalc=(c).begin();itcalc!=(c).end();itcalc++)
#define NO {cout<<"NO";return 0;}
#define YES {cout<<"YES";return 0;}
#define y0 y000000000000000000000000000
#define y1 y111111111111111111111111111
#define j0 j000000000000000000000000000
#define j1 j111111111111111111111111111
#define cl0(a) memset((a),(0),(sizeof((a))))
#define clz(a) memset((a),(0x16),(sizeof((a))))
#define clf(a) memset((a),(-(0x16)),(sizeof((a))))
#define inf 0x3bbbbbbb
#define lnf 0x1bbbbbbbbbbbbbbbll
//#define sqrt divi
#define p2(i) (1ll<<(i))
#define readi read
#define readll read
/*************************************************/
long long mp[300005];
int n,k,i,j,qq,typ[100005],blk;
long long m,sum[100005],sl[100005],sr[100005];
long long ans;
vector<long long> all;
struct query
{
	int l,r,id;long long ans;
}q[100005];
bool cmp(query x,query y)
{
	if(x.l/blk==y.l/blk)return x.r<y.r;
	return x.l<y.l;
}
bool cmp2(query x,query y)
{
	return x.id<y.id;
}
int f(long long x)
{
	return upper_bound(all(all),x)-all.begin();
}
int main()
{
	read(n);read(k);blk=sqrt(n);
	rep(i,n)read(typ[i]);
	all.pb(0);all.pb(-k);all.pb(k);
	rep(i,n){
		read(sum[i]);
		if(typ[i]==2)sum[i]*=-1;
		sum[i]+=sum[i-1];
		all.pb(sum[i]);
		all.pb(sum[i]-k);
		all.pb(sum[i]+k);
	}
	sort(all(all));all.resize(unique(all(all))-all.begin());
	forup(i,0,n){
		sl[i]=f(sum[i]-k);
		sr[i]=f(sum[i]+k);
		sum[i]=f(sum[i]);
	}
	read(qq); 
	rep(i,qq){
		read(q[i].l);
		read(q[i].r);
		q[i].ans=0;
		q[i].id=i;
	}
	sort(q+1,q+qq+1,cmp);
	int l=1,r=0;
	mp[sum[0]]=1;
	rep(i,qq){
		while(r<q[i].r){
			r++;
			ans+=mp[sl[r]];
			mp[sum[r]]++;
		}
		while(l>q[i].l){
			l--;
			ans+=mp[sr[l-1]];
			mp[sum[l-1]]++;
		}
		while(r>q[i].r){
			mp[sum[r]]--;
			ans-=mp[sl[r]];
			r--;
		}
		while(l<q[i].l){
			mp[sum[l-1]]--;
			ans-=mp[sr[l-1]];
			l++;
		}
		q[i].ans=ans;
	}
	sort(q+1,q+qq+1,cmp2);
	rep(i,qq){
		printf("%I64d\n",q[i].ans);
	}
	return 0;
}