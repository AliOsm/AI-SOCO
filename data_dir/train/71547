// by tmt514
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#define SZ(x) ((int)(x).size())
#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)
using namespace std;
typedef long long LL;

const int N = (1<<20);
int bit[1<<20];
void add(int x) {
  while(x<N) {
    bit[x]++;
    x += (x&-x);
  }
}
int ask(int x) {
  int ret=0;
  while(x) {
    ret += bit[x];
    x -= (x&-x);
  }
  return ret;
}
int ask(int l, int r) {
  return ask(r) - ask(l-1);
}

int main(void) {
  int n, k;
  scanf("%d%d", &n, &k);
  if(k*2 > n) k = n-k;
  LL now = 1;
  int x = 1;
  for(int i=1;i<=n;i++) {
    int nxt = x + k;
    if(nxt <= n+1) {
      now += ask(x+1, nxt-1) + 1;
    } else {
      now += ask(x+1, n) + ask(1, nxt-n-1) + 1;
    }
    printf("%lld%c", now, i==n?'\n':' ');
    
    if (nxt>=n+1) nxt -= n;
    add(x);
    add(nxt);
    x = nxt;
  }

  return 0;
}
