#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL_CHECK
#define trace(x) cerr << #x << ": " << x << " ";
#define trnl cerr << "\n";
#else
#define trace(x) {}
#define trnl {}
#endif
typedef long long lolo;
typedef unsigned long long ulolo;
typedef pair<int, int> pii;
#define F(i,a,b) for(int i=(a);i<(b);++i)
#define R(i,n) F(i,0,n) 
#define FD(i,n) for(int i=(n-1);i>=0;--i)
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define fi first
#define se second
#define M_PI           3.14159265358979323846

const int INF = 1e9 + 23;
const int MOD = 1e9 + 9;
const int N = 1e6 + 100;

int fath[N];

int par(int a) {
  if (fath[a] != a) {
    fath[a] = par(fath[a]);
  }
  return fath[a];
}

void uni(int a, int b) {
  a = par(a), b = par(b);
  if (a == b) {
    return;
  } 
  if (rand()%2) fath[a] = b;
  else fath[b] = a;
}

int p[N];
pair<int, int> prs[N];
vector<int> pos[N];
int where[N];
vector<int> vs[N];

void addpos(int i, int v) {
  where[i] = v;
  pos[v].push_back(i);
  vs[v].push_back(p[i]);
}

int main()
{
  ios_base::sync_with_stdio(0);
  srand (time(NULL));
  int n, m;
  cin >> n >> m;
  for (int i = 1; i <= n; ++i) fath[i] = i;
  for (int i = 1; i <= n; ++i) cin >> p[i];
  for (int i = 0; i < m; ++i) {
    cin >> prs[i].fi >> prs[i].se;
    uni(prs[i].fi, prs[i].se);
  }

  for (int i = 0; i < m; ++i) {
    int a = prs[i].fi, b = prs[i].se;
    int pred = par(a);
    if (!where[a]) addpos(a, pred);
    if (!where[b]) addpos(b, pred);
  }
  
  for (int i = 1; i <= n; ++i) {
    if (!where[i]) addpos(i, i);
  }

  for (int i = 1; i <= n; ++i) {
    sort(ALL(pos[i]));
    sort(ALL(vs[i]));
    reverse(ALL(vs[i]));
    for (int j = 0; j < SZ(pos[i]); ++j) {
      p[pos[i][j]] = vs[i][j];
    }
  }

  for (int i = 1; i <= n; ++i) {
    if (i > 1) cout << " ";
    cout << p[i]; 
  }
  cout << "\n";
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp
