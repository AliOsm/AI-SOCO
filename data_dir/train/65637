#include <bits/stdc++.h>

using namespace std;

#define ll long long

const int N = 1e6+15,mod = 1e9+7;

ll dp[N][2];

int a[N],temp[N];

int find(int x,int n){
    int l = 0,r = n-1,mid;
    while(l<r){
        mid = (l+r+1)/2;
        if(temp[mid]<=x)
            l = mid;
        else
            r = mid-1;
    }
    return l;
}
int cc[N];
int main(){


    ll n,l,k;
    scanf("%lld%lld%lld",&n,&l,&k);

    for(int i=0;i<n;++i)scanf("%d",&a[i]),temp[i]= a[i];
    sort(temp,temp+n);
    int maxi  =0;
    for(int i=0;i<n;++i)
    {
        a[i]= find(a[i],n);
        ++cc[a[i]];
        maxi = max(maxi,a[i]);
    }
    ll seg = (l-1)/n + 1;
    
    ll m = min(k,seg-1);

    int bit = 0,nbit;
    ll ret=0;


    for(int i=0;i<m;++i){

        if(i==0){
            for(int j=0;j<=maxi;++j)
                dp[j][bit]= cc[j];
        }
        else{
            nbit = bit^1;
            ll sum = 0;
            for(int j=0;j<=maxi;++j){
                sum =(sum +dp[j][bit] )%mod;
                dp[j][nbit] = (sum*cc[j])%mod;
            }
            bit = nbit;
        }
        for(int j=0;j<=maxi;++j){
            ll temp = (seg-1 -i)%mod;
            ret = (ret + temp*dp[j][bit])%mod;
        }
    }
    bit = 0;
    memset(dp,0,sizeof(dp));
    for(ll st= (seg-1)*n;st<l;++st){
        int j = st%n;
        ++dp[a[j]][bit];
        ret= (ret+1)%mod;
    }
    k = min(k,seg);
    for(int i=1;i<k;++i){
        nbit = bit^1;
        ll sum = 0;
        
        for(int j=maxi;j>=0;--j){
            sum =(sum +dp[j][bit] )%mod;
            dp[j][nbit] = (sum*cc[j])%mod;
        }
        bit = nbit;
        for(int j=0;j<=maxi;++j){
            ret = (ret + dp[j][bit])%mod;
        }
    }   
    ret= (ret + mod)%mod;
    cout<<ret<<endl;
    return 0;
}   