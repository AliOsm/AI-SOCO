# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=2000005; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
	string s="/home/jslijin/jslijin/code/";
    freopen((s+"code.in").c_str(), "r", stdin);
    freopen((s+"code.out").c_str(), "w", stdout);
}

struct P{ int x,y; };
inline bool operator < (const P &a, const P &b) {
	return a.x<b.x || a.x==b.x && a.y<b.y;
}
int M=3e5,n,m,x,y,p[N],q[N],f[N],sz[N],S[N],top=0;
vector<P> V[N]; map<P,int> G; ll ans[N],ret=0;

int F(int x) { return f[x]==x?x:F(f[x]); }

void update(int k,int l,int r,int L,int R,const P &t) {
	if (L<=l && r<=R) { V[k].pb(t); return; }
	int mid=l+r>>1;
	if (L<=mid) update(k<<1,l,mid,L,R,t);
	if (R>mid) update(k<<1|1,mid+1,r,L,R,t);
}

void dfs(int k,int l,int r){
	int _top=top;
	for (auto t:V[k]) {
		int x=F(t.x),y=F(t.y);
		if (x==y) continue;
		if (sz[x]<sz[y]) swap(x,y);
		ret+=(ll)p[x]*q[y]+(ll)q[x]*p[y];
		p[x]+=p[y],q[x]+=q[y];
		S[++top]=y,f[y]=x,sz[x]+=sz[y];
	}
	int mid=l+r>>1;
	if (l==r) ans[l]=ret; else
		dfs(k<<1,l,mid),dfs(k<<1|1,mid+1,r);
	while (top!=_top) {
		int y=S[top--],x=f[y];
		f[y]=y,sz[x]-=sz[y];
		p[x]-=p[y],q[x]-=q[y];
		ret-=(ll)p[x]*q[y]+(ll)q[x]*p[y];
	}
}

int main() {
    //file_put();

    scanf("%d",&n);
    rep(i,1,M) p[i]=q[i+M]=1;
    rep(i,1,M<<1) sz[i]=1,f[i]=i;
    rep(i,1,n) {
    	scanf("%d%d",&x,&y),y+=M;
    	auto t=P{x,y};
    	if (!G[t]) G[t]=i; else 
    		update(1,1,n,G[t],i-1,t),G[t]=0;
	}
	for (auto t:G) 
		if (t.sec) update(1,1,n,t.sec,n,t.fir);
	dfs(1,1,n);
	rep(i,1,n) printf("%lld ",ans[i]);
	printf("\n");
	
    return 0;
}