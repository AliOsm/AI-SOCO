#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;
const ll N = 1e5 + 100, M = 4, inF = 1e8;

ll n, m, maxi, a[N], b[N], rem[N], dp[N][M];// a -> mouse, b -> cheese
pii p[N];// t, cnt

pii check(pii p, ll d) {
	if(d == p.first)
		p.second++;
	else if(d < p.first) {
		p.first = d;
		p.second = 1;
	}
	return p;
}

void UPD(ll &a, ll b) {
	a = max(a, b);
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	for (int i = 0; i < N; i++)
		p[i] = pii(inF, 0), rem[i] = inF;
	
	cin >> n >> m >> a[0] >> a[0];
	for (ll i = 0; i < n; i++)
		cin >> a[i];
	
	b[0] = -inF;
	for (ll i = 1; i <= m; i++)
		cin >> b[i];
	b[m + 1] = inF;
	
	
	for (ll i = 0; i < n; i++) {
		ll dex = lower_bound(b, b + m + 2, a[i]) - b - 1;
		ll d1 = abs(a[i] - b[dex]), d2 = abs(b[dex + 1] - a[i]);
		if(d1 < d2)
			p[dex] = check(p[dex], d1);
		else if(d1 > d2)
			p[dex + 1] = check(p[dex + 1], d2);
		else
			rem[dex + 1] = a[i];
	}
	for (ll i = 1; i <= m; i++) {
		ll d1 = abs(b[i] - rem[i]), d2 = abs(rem[i + 1] - b[i]);
		if(rem[i] != inF && rem[i + 1] != inF) {
			pii P = check(p[i], d1);
			P = check(P, d2);
			UPD(dp[i][3], dp[i - 1][0] + P.second);
		}
		if(rem[i + 1] != inF) {
			pii P = check(p[i], d2);
			UPD(dp[i][1], dp[i - 1][1] + P.second);
		}
		if(rem[i] != inF) {
			pii P = check(p[i], d1);
			UPD(dp[i][2], dp[i - 1][0] + P.second);
		}
		if(true) {
			pii P = p[i];
			UPD(dp[i][0], dp[i - 1][1] + P.second);
		}
		UPD(dp[i][0], dp[i][2]);
		UPD(dp[i][1], dp[i][3]);
		if(rem[i + 1] == inF) {
			UPD(dp[i][1], dp[i][0]);
			UPD(dp[i][0], dp[i][1]);
		}
	}
	cout << n - dp[m][1];
	return 0;
}
