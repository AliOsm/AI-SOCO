# include <bits/stdc++.h>
# define FILE
using namespace std;

const int N = 4e6 + 100;
const int mod = 1e9 + 7;
const int p = 37;
int pp[N];

int main(){
    # ifdef FILEs
        freopen( "input.txt", "r", stdin );
        freopen( "output.txt", "w", stdout );
    # endif
    ios_base::sync_with_stdio( false );

    pp[0] = 1;
    for( int i = 1; i < N; i ++ ){
    	pp[i] = 1ll*pp[i-1] * p % mod;
    }

    int t;
    cin >> t;
    while( t -- ){
    	int n, cnt11=0, cnt00 = 0, cnt10 = 0, cnt01 = 0;
    	cin >> n;
    	vector < string > bin;
    	vector < int > hash;
    	vector < int > rhash;
    	map < int, int > hashes;
    	for( int i = 0; i < n; i ++ ){
    		string s; cin >> s;
    		if( s[0] == '0' && s.back() == '0' ) cnt00 ++;
    		if( s[0] == '0' && s.back() == '1' ) cnt01 ++;
    		if( s[0] == '1' && s.back() == '0' ) cnt10 ++;
    		if( s[0] == '1' && s.back() == '1' ) cnt11 ++;
    		bin.push_back( s );

    		int hs = 0;
    		for( int j = 0; j < (int)s.size(); j ++ ){
    			hs += 1ll*(s[j]-'0'+ 1 )*pp[j]%mod;
    		}hash.push_back( hs );
    		
    		int rhs = 0;
    		for( int j = (int)s.size()-1; j >= 0; j -- ){
    			rhs += 1ll*( s[j]-'0' + 1)*pp[s.size()-j-1]%mod;
    		}rhash.push_back( rhs );
    		
    		hashes[hs] = 1;
    	}
    	if( cnt01+cnt10 == 0 && cnt11 && cnt00 ){
    		cout << -1 << endl;
    		continue;
    	}else{
    		vector < int > answers;
    		for( int i = 0; i < n; i ++ ){	
    			string s = bin[i];
    			if( s[0] == '1' && s.back() == '0' && cnt10-cnt01 > 1 && !hashes[rhash[i]] ){
    				cnt10--; 
    				cnt01++;
    				answers.push_back( i+1 );
    				hashes[rhash[i]] = 1;
    				hashes[hash[i]] = 0;
    			}
    			if( s[0] == '0' && s.back() == '1' && cnt01-cnt10 > 1 && !hashes[rhash[i]] ){
    				cnt01--;
    				cnt10++;
    				answers.push_back( i+1 );
    				hashes[rhash[i]] = 1;
    				hashes[hash[i]] = 0;
    			}
    		}
    		if( abs( cnt10- cnt01 ) <= 1 ){
    			cout << answers.size() << endl;
    			for( auto c: answers ){
    				cout << c << ' ';
    			}cout << endl;
    		}
    		else{
    			cout << -1 << endl;
    		}
    	}
    }

}	
