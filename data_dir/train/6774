#include<bits/stdc++.h>
using namespace std;
#define ll long long
vector<pair<string,vector<string> > > v,ans;

bool isSuffix(string S, string G){
    string suffix = G.substr(G.size()-S.size());
    return (suffix == S);
}
bool Sort(string &s1 , string &s2){
    return s1.size() < s2.size();
}
int main()
{
    int n; cin>>n;
    while(n--){
        string name; cin>>name;
        int N; cin>>N;
        bool found = 0;
        for (int i = 0 ; i < v.size(); ++i){
            if (v[i].first == name){
                while(N--){
                        string p; cin>>p;
                    v[i].second.push_back(p);
                }
                found = 1;
                break;
            }
        }
        if (!found){
         vector <string> V;
         v.push_back({name,V});
         while(N--){
                    string p; cin>>p;
                    v.back().second.push_back(p);
                }
        }
    }

     for (int i= 0 ; i < v.size() ;++i){
            vector <string> tmp = v[i].second;
            sort(tmp.begin(),tmp.end(),Sort);
            v[i].second = tmp;
    }

    for(int i = 0 ; i < v.size(); ++i){
            vector<string> temp;
        for (int k = 0 ; k < v[i].second.size() ; ++k){
                bool taken = 0 ;
            for (int j = k+1 ; j < v[i].second.size() ; ++j){
                    string F = v[i].second[k] , S = v[i].second[j];
                     if (k != j && F.size() <= S.size()){
                        if (isSuffix(F,S)){
                            taken = 1;
                            break;
                        }
                     }
                }
                if (!taken){
                    temp.push_back(v[i].second[k]);
                }
        }
        ans.push_back({v[i].first,temp});
    }
    cout << ans.size() << endl;
    for (int i= 0 ; i < ans.size() ;++i){
            cout << ans[i].first << " " << ans[i].second.size() << " ";
        for (int k = 0 ; k < ans[i].second.size(); ++k){
            cout << ans[i].second[k] << " ";
        }
    cout << endl;
    }


    return 0;
}
