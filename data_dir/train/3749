#include<bits/stdc++.h>
using namespace std;
typedef  long long  ll;
const long long int mod=1e9 +7;
ll m,k=1,n,a[20005],red[2000005]={0},res=0;    ll prime[1000005];
set<  ll >st,st1,st2;
string s1="";
vector<ll>v[1000005],vnode[200005],v1,v2,v3;
vector< pair<ll,ll> >vv;
vector< pair< ll,pair <ll,ll> > > vvv;
priority_queue <ll> pq;
map<ll,ll>mp;

void sieve(ll x)
{   

    prime[0]=0;prime[1]=0;
    vector<ll>vp;
    for(ll i=2;i<=x;i++)prime[i]=1;
    for (ll p=2; p<=x; p++)
    { 
        if (prime[p]==1)
        {
            vp.push_back(p);
            for (int i=p*2; i<=x; i += p)
                prime[i]=0;
        }
    }
    for(ll i=0;i<vp.size();i++){
       if(n%vp[i]==0)v[n].push_back(vp[i]);
	}
          
}

int main(){
	ios::sync_with_stdio(false);
    cin.tie(NULL);
	ll i=0,x,y,j=0,z=0,q,ans=0,s=1000000,nb0=0,nb=0,nbmax=0,nbinf=0,sm=0,nb2=0,mm=5e8,idx=0,ok=0,l,r,negatif=0,positif=0,l1,r1;
	set<  ll > ::iterator it,it1,it2;
	char c;
   // freopen("a.txt","r",stdin);  
    cin>>m;
    if(m==1)return cout<<"1 0",0;
    n=m;
    y=(ll)sqrt(n);
    while(y*y==n){
    	n=y;
    	nb++;
    	y=(ll)sqrt(n);
	}
	//(n,nb)
	ll p=1;
	st.insert(1);
	for(i=1;i<=22;i++){
		p*=2;
		st.insert(p);	
	}
	if(n==1)return cout<<n<<" "<<nb,0;
	n=m;
	ll min_p=5e9,max_p=0;
	p=1;
	sieve(1000000);
	nb=0;
	for(j=0;j<v[n].size();j++){
		x=v[n][j];m=n;
		while(m>0&&m%x==0){
			m/=x;red[x]++;
		}
		min_p=min(min_p,red[x]);
		max_p=max(max_p,red[x]);
		p*=x;
	}
	it=st.lower_bound(max_p);
	ll max_power=(*it);
	if(min_p<max_power)nb++;
//	cout<<max_power<<" "<<min_p<<endl;
	while(max_power>1){
		nb++;
		max_power/=2;
	}
	cout<<p<<" "<<nb<<endl;    
 }