#include <bits/stdc++.h>
using namespace std;
typedef long long Long;

const Long MX = 40;

Long pot[MX];

void solve(){
	Long n;
	cin >> n;	
	
	bool ok = false;
	Long id = -1;
	for(Long i = 1; i < MX; i++){
		if(n == pot[i]){
			id = i;
			ok = true;
		}
	}
	
	if(ok){
		cout << id - 1 << "\n";
		for(Long i = 1; i < id; i++){
			cout << (1ll<<(i-1)) << " ";
		}
		cout << "\n";
		return;
	}
	
	for(Long i = 1; i < MX; i++){
		if(n == pot[i] + 1){
			id = i;
			ok = true;
		}
	}
	
	if(ok){
		cout << id << "\n";
		cout << 0 << " ";
		for(Long i = 1; i < id; i++){
			cout << (1ll<<(i-1)) << " ";
		}
		cout << "\n";
		return;
	}
	
	vector<Long> aux;
	while(n != 0){
		aux.push_back(n);
		Long p;
		for(Long i = 1; i < MX; i++){
			if(n >= pot[i]){
				p = pot[i];
			}
		}
		Long mn = min(n - (p/2 + 1), p);
		n = mn;
	}
	aux.push_back(0);
	
	/*for(Long xx : aux){
		cout << xx << " ";
	}
	cout << "\n";*/
	
	vector<Long> auxi;
	for(Long i = 1; i < aux.size(); i++){
		auxi.push_back(aux[i-1] - aux[i]);
	}
	
	vector<Long> ans;
	for(Long i = 1; i < auxi.size(); i++){
		ans.push_back(auxi[i-1] - auxi[i]);
	}
	reverse(ans.begin(),ans.end());
	
	cout << ans.size() << "\n";
	for(Long xx : ans){
		cout << xx << " ";
	}
	cout << "\n";
	return;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	cout.precision(10);
	cout << fixed;
	
	pot[0] = 1;
	for(Long i = 1; i < MX; i++){
		pot[i] = pot[i-1] * 2;
	}
	for(Long i = 0; i < MX; i++){
		pot[i]--;
	}
	
	Long t;
	cin >> t;
	while(t--) solve();
	return 0;
}
