#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
const int maxn=1e6+10;
const unsigned long long seed=3121;
const long long seed1=233;
const int mo=19260817;
int n,ans[maxn];
char s[maxn];
unsigned long long sum[maxn],p[maxn];
long long summ[maxn],p1[maxn];
void solve(int st,int ed)
{
	int up=ans[st+1]+2; if (!(up&1)) up--;
	if (st==ed) {return;}
	for (int mid=up;mid>=1;mid-=2)
	{
		unsigned long long sum1,sum2;
		sum1=(sum[st+mid-1]-sum[st-1])*p[ed-mid+1-st];
		sum2=sum[ed]-sum[ed-mid]; 
		long long sum3,sum4;
		sum3=(summ[st+mid-1]-summ[st-1]+mo)%mo*p1[ed-mid+1-st]%mo;
		sum4=(summ[ed]-summ[ed-mid]+mo)%mo;
		if (sum1==sum2 && sum3==sum4) {ans[st]=mid; break;}
	}
}
int main()
{
	scanf("%d%s",&n,s+1); p[0]=1; p1[0]=1; memset(ans,-1,sizeof ans);
	for (int i=1;i<=n;++i)
	{
		p[i]=p[i-1]*seed; p1[i]=p1[i-1]*seed%mo;
		sum[i]=sum[i-1]+p[i]*(unsigned long long)(s[i]-'a');
		summ[i]=(summ[i-1]+p1[i]*(s[i]-'a'))%mo;
	}
	for (int i=n;i>=1;--i) if (i<=n-i+1) solve(i,n-i+1); 
	for (int i=1;i<=n;++i) if (i<=n-i+1) printf("%d%c",ans[i],(i==n?'\n':' '));
return 0;
}