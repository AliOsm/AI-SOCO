//#include <cstdio>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
//#include <queue>
//#include <stack>
#include <cstring>
#include <cassert>

using namespace std;

#ifdef LOCAL_DEBUG
#include <local_debug.h>
#define DEBUG(x...) cerr << __LINE__ << ": " << #x << " = "; DBG::_print(x)
#else
#define DEBUG(x...)
#endif

#define SZ(a) int((a).size())
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

typedef long long llong;
typedef vector<int> VI;
typedef vector<VI> VVI;

int gcd(int a, int b) {
   return b == 0 ? a : gcd(b, a % b);
}

int lcm(int a, int b) {
   return a / gcd(a,b) * b;
}

llong F(int M, int mx, llong n) {
   llong groups = n / M;
   llong sub = mx*groups;
   int last_group = n % M;
   sub += min( last_group, mx );
   llong res = n - sub;
   return res;
}

int main(int argc, char* argv[]) {
   ios_base::sync_with_stdio(false); 
   cin.tie(nullptr);

   int TC;
   cin >> TC;
   FOR(tc, 1, TC) {
      int a, b, Q;
      cin >> a >> b >> Q;
      int M = lcm(a, b);
      FOR(q, 1, Q) {
         llong L, R;
         cin >> L >> R;
         llong res = F(M, max(a, b), R+1) - F(M, max(a, b), L);
         cout << res << ' ';
      }
      cout << '\n';
   }

/*   
   int a = atoi(argv[1]), b = atoi(argv[2]), n = atoi(argv[3]);
   int M = lcm(a, b);
   cerr << "lcm " << M << endl;
   cerr << F(M, max(a, b), n+1) << endl;

   VI V;
   FOR(x, 0, n) {
      int mab = (x % a) % b;
      int mba = (x % b) % a;
      if (mab != mba) {
         V.push_back(x);
      }
   }
   cerr << V.size() << endl;
   for (int x : V)
      cerr << x << ' ';
   cerr << endl;
*/

   return 0;
}
