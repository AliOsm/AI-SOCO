#include <bits/stdc++.h>
using namespace std;

#define L second.first
#define R second.second
#define C first.first
#define I first.second
typedef long long Long;

const Long oo = 1e18;

int n, m, k;
Long dp[55][55][55][155];
pair<pair<int, int>, pair<Long, Long>> a[55];

long long solve(int idx = 1, int rem = n, int prv = 0, int offset = 0) {
	if (m - idx + 1 < rem)
		return -oo;

	if (rem <= 0)
		return 0;

	Long& ret = dp[idx][rem][prv][offset];

	if (~ret)
		return ret;

	ret = solve(idx + 1, rem, prv, offset);

	if (prv > 0) {
		if (a[idx].C > a[prv].C) {
			Long x = a[prv].L + offset;
			Long y[] = { x + k, x * k };

			for (int i = 0; i < 2; ++i) {
				if (y[i] >= a[idx].L && y[i] <= a[idx].R) {
					ret = max(ret, solve(idx + 1, rem - 1, idx, y[i] - a[idx].L) + y[i]);
				}
			}
		}
	}
	else for (Long i = a[idx].L; i <= a[idx].R; ++i) {
		ret = max(ret, solve(idx + 1, rem - 1, idx, i - a[idx].L) + i);
	}

	return ret;
}

void printAns(int idx = 1, int rem = n, int prv = 0, int offset = 0) {
	if (rem <= 0)
		return;

	Long res = solve(idx, rem, prv, offset);

	if (res == solve(idx + 1, rem, prv, offset)) {
		return printAns(idx + 1, rem, prv, offset);
	}

	if (prv > 0) {
		if (a[idx].C > a[prv].C) {
			Long x = a[prv].L + offset;
			Long y[] = { x + k, x * k };

			for (int i = 0; i < 2; ++i) {
				if (y[i] >= a[idx].L && y[i] <= a[idx].R) {
					if (res == solve(idx + 1, rem - 1, idx, y[i] - a[idx].L) + y[i]) {
						printf("%d %lld\n", a[idx].I, y[i]);
						return printAns(idx + 1, rem - 1, idx, y[i] - a[idx].L);
					}
				}
			}
		}
	}
	else for (Long i = a[idx].L; i <= a[idx].R; ++i) {
		if (res == solve(idx + 1, rem - 1, idx, i - a[idx].L) + i) {
			printf("%d %lld\n", a[idx].I, i);
			return printAns(idx + 1, rem - 1, idx, i - a[idx].L);
		}
	}
}

int main() {
	cin >> n >> m >> k;
	for (int i = 1; i <= m; ++i) {
		cin >> a[i].L >> a[i].R >> a[i].C;
		a[i].I = i;
	}
	sort(a + 1, a + m + 1);
	memset(dp, -1, sizeof(dp));
	if (solve() < 0) {
		cout << "NO" << endl;
	}
	else {
		cout << "YES" << endl;
		printAns();
	}
	return 0;
}