#include <bits/stdc++.h>
using namespace std;

#ifdef LOCAL_CHECK
#define trace(x) cerr << #x << ": " << x << " ";
#define trnl cerr << "\n";
#else
#define trace(x) {}
#define trnl {}
#endif
typedef long long lolo;
typedef unsigned long long ulolo;
typedef pair<int, int> pii;
#define R(i,n) for(int i=0;i<(n);++i)
#define F(i,a,b) for(int i=(a);i<(b);++i)
#define FS(i,a,b,s) for(int i=(a);i<(b);i+=(s))
#define FD(i,n) for(int i=(n-1);i>=0;--i)
#define FDS(i,n,s) for(int i=(n-1);i>=0;i-=(s))
#define SZ(x) ((int)(x).size())
#define ALL(x) (x).begin(),(x).end()
#define fi first
#define se second
#define M_PI           3.14159265358979323846

const int INF = 1e9 + 23;
const int MOD = 1e9 + 9;
const int N = 1e6 + 10;


void calcPref(int* arr, int* prf, int n) {
  map<int, int> cnt;
  for (int i=1; i<=n; ++i) {
    ++cnt[arr[i]];
    prf[i] = cnt[arr[i]];
  }
}

void remap(int* arr, int n) {
  map<int, int> mapping;
  for (int i=1, k=1; i<=n; ++i) {
    if (!mapping[arr[i]]) {
      mapping[arr[i]] = k++;
    }
  }
  for (int i=1; i<=n; ++i) arr[i] = mapping[arr[i]];
}

int fw[N];

void add(int idx) {
  while (idx < N) {
    ++fw[idx];
    idx += idx & (-idx);
  }
}

int get(int idx) {
  int sum = 0;
  while (idx > 0) {
    sum += fw[idx];
    idx -= idx & (-idx);
  }
  return sum;
}

int arr[N];
int pref[N], suf[N];

int main()
{
  ios_base::sync_with_stdio(0);
  int n; cin >> n;
  for (int i=1; i<=n; ++i) cin >> arr[i];
  remap(arr, n);
  calcPref(arr, pref, n);
  reverse(arr+1, arr+1 + n);
  calcPref(arr, suf, n);
  reverse(suf+1, suf+1 + n);
  lolo ans = 0;
  for (int i=n; i>0; --i) {
    ans += get(pref[i]-1);
    add(suf[i]);
  }
  cout << ans << "\n";
  return 0;
}
// g++ -W -Wall -Wextra -pedantic -std=c++0x -o p main.cpp
