#include "bits/stdc++.h"
using namespace std;

#define  pb  push_back
typedef long long int ll;
const int N=1e6+6,inf=1e9+7;
vector<int>vec[N],vec2[N];
bool vis[N];
int n,k,id,Nod[N],tbl[22][N],dep[N];
void dfs(int u,int p)
{
    for(auto v:vec[u])
    {
        if(v==p)continue;
        tbl[0][v]=u;
        dep[v]=dep[u]+1;
        dfs(v,u);
    }
    if(vis[u])Nod[++id]=u;
}
void _sparse()
{
    for(int i=1;i<21;i++)
    {
        for(int j=1;j<=n;j++)
            tbl[i][j]=tbl[i-1][tbl[i-1][j]];
    }
}
int _lca(int u,int v)
{
    if(dep[u]<dep[v])swap(u,v);
    int i=20;
    for(;i>=0;i--)
    {
        if(dep[u]-(1<<i)>=dep[v])
            u=tbl[i][u];
    }
    if(u==v)return u;
    for(int i=20;i>=0;i--)
    {
        if(tbl[i][u]!=tbl[i][v])
        {
            u=tbl[i][u];
            v=tbl[i][v];
        }
    }
    return tbl[0][u];
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    cin>>n>>k;
    k*=2;
    for(int i=1,x;i<=k;i++)
        cin>>x,vis[x]=1;
    int m=n-1;
    while(m--)
    {
        int u,v;cin>>u>>v;
        vec[u].pb(v);
        vec[v].pb(u);
    }
    dep[1]=1;
    tbl[0][1]=1;
    dfs(1,-1);
    _sparse();
    ll res=0;
    for(int i=1;i<=k/2;i++)
    {
        int u=Nod[i],v=Nod[k/2 +i];
        int lca=_lca(u,v);
        res+=(dep[u]+dep[v]-2*dep[lca]);
    }
    cout<<res<< "\n";




    return 0;
}
