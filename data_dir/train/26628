/*
 _____ _             _              _           _ 
|_   _| |__   ___   / \   _ __  ___| |__  _   _| |
  | | | '_ \ / _ \ / _ \ | '_ \/ __| '_ \| | | | |
  | | | | | |  __// ___ \| | | \__ \ | | | |_| | |
  |_| |_| |_|\___/_/   \_\_| |_|___/_| |_|\__,_|_|                                                
 */
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define endl  '\n'
#define mii         map<ll int,ll int>
#define msi         map<string,ll int>
#define mis         map<ll int, string>
#define rep(i,a,b)    for(ll int i=a;i<b;i++)
#define mpi         map<pair<ll int,ll int>,ll int>
#define pii         pair<ll int,ll int>
#define vi          vector<ll int>
#define vii         vector<pair<ll int, ll int>>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define what_is(x)  cerr << #x << " is " << x << endl;
#define time        cerr << "\nTime elapsed: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";
using namespace std;
#define N  100005
vii a[N];
bool vis[N];
ll ans,n,k;
ll expo(ll base, ll exponent, ll mod) {        //return base^exponent modulo modulus
    ll ans = 1;
    while(exponent !=0 ) {
        if((exponent&1) == 1) {
            ans = ans*base ;
            ans = ans%mod;
        }
        base = base*base;
        base %= mod;
        exponent>>= 1;
    }
    return ans%mod;
}
ll dfs(ll node)
{
 vis[node]=1;
 ll p=0,vl;
 for(auto i:a[node])
 {
  if(!vis[i.F])
  {
   vl=dfs(i.F);
   if(i.S==1)
   {
    ans+=expo(vl,k,hell);
    ans%=hell;
   }
   else
   {
    p+=vl;
   }
  }
 }
 return(p+1);
}
void solve()
{
 ll x,y,p;
 cin>>n>>k;
 rep(i,1,n)
 {
  cin>>x>>y>>p;
  a[x].pb({y,p});
  a[y].pb({x,p});
 }
 ll ts;
 rep(i,1,n+1)
 {
  if(sz(a[i])==1)
  {
   ts=i;
   break;
  }
 }
 ll rm=dfs(ts);
 ans+=expo(rm,k,hell);
 ans%=hell;
 // what_is(ans);
 // what_is(expo(n,k,hell));
 cout<<(expo(n,k,hell)-ans+hell)%hell;
 return;
}
int main()
{
 ios_base::sync_with_stdio(false);
 cin.tie(0);
 cout.tie(0);
 int TESTS=1;
// cin>>TESTS;
 while(TESTS--)
 {
  solve();
 }
 time
 return 0;
}