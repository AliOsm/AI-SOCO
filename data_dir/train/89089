#include <iostream>
#include <stdio.h>
#include <string>
#include <memory.h>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <time.h>
#include <assert.h>
#include <cmath>
#include <stack>
#include <string.h>
#include <sstream>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 100000;
int n;
ll has[N], need[N];
vector<vector<pair<int, int> > > g;
ll calc(int u) {
	ll needs = 0;
	ll have = has[u];
	for (int i = 0; i < g[u].size(); ++i) {
		ll cur = calc(g[u][i].first);
		if (cur < 0) {
			if (log(-cur) + log(g[u][i].second) > log(1e18)) {
				puts("NO");
				exit(0);
			}
			needs += -cur*g[u][i].second;
			if (needs > 1e18) {
				puts("NO");
				exit(0);
			}
		}
		else
			have += cur;
	}
	have -= needs;
	return have - need[u];
}
int main()
{
	scanf("%d", &n);
	g.resize(n);
	for (int i = 0; i < n; ++i)
		scanf("%lld", has + i);
	for (int i = 0; i < n; ++i)
		scanf("%lld", need + i);
	for (int p, k, i = 1; i < n; ++i) {
		scanf("%d%d", &p, &k);
		--p;
		g[p].push_back(make_pair(i, k));
	}
	ll ret = calc(0);
	if (ret < 0)
		puts("NO");
	else
		puts("YES");
	return 0;
}