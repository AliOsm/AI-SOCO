//============================================================================
// Name        : hoba.cpp :)
// Author      : (O_O Diab) (Why_not) (el 3AQ)
// Copyright   : please, Don't touch me :(
// Description : problem in C++
// MAIN IDEA   :
//============================================================================
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define F first
#define S second
#define pf push_front
#define lp(i,a,b) for (int i=a;i<=(int)b;++i)
#define lp2(i,a,b) for (ll i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define p(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vs vector<string>
#define vl vector<ll>
#define vii vector<pii>
#define vll vector<pll>
#define re return
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define EPS 1e-6
// to convert string to number use int a = stoi(string);
// to convert number to string use string s = to_string(int);
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define clr(c,x) memset(c,x,sizeof(c));
using namespace std;
const ll INFL = 0x3f3f3f3f3f3f3f3fLL;
const int dx[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
const int N = 5e3 + 5, INF = 0x3f3f3f3f, ALPHA = 26, mod = (int) 1e9 + 7;
deque<pair<pii, int>> v;
int dp[N], n, xx, yy, x, y;
int solve(int idx) {
	if (idx >= v.size())
		return 0;
	int &ret = dp[idx];
	if (~ret)
		return ret;
	ret = 0;
	for (int j = idx; j < v.size(); ++j) {
		if (v[j].F.S > v[idx - 1].F.S && v[idx - 1].F.F < v[j].F.F)
			ret = max(ret, solve(j + 1) + 1);
	}
	return ret;
}
void out(int idx) {
	if (idx >= v.size())
		return;
	int &ret = dp[idx];
	for (int j = idx; j < v.size(); ++j) {
		if (v[j].F.S > v[idx - 1].F.S && v[idx - 1].F.F < v[j].F.F)
			if (ret == solve(j + 1) + 1) {
				cout << v[j].S << " ";
				out(j + 1);
				return;
			}
	}
}
int main() {
#ifdef ONLINE_JUDGE
    FAST;
#endif
	cin >> n >> xx >> yy;
	lp(i,1,n)
	{
		cin >> x >> y;
		if (x <= xx)
			continue;
		v.pb( { { x, y }, i });
	}
	sort(all(v));
	v.pf( { { xx, yy }, 0 });
	clr(dp, -1);
	cout << solve(1) << "\n";
	out(1);
	return 0;
}