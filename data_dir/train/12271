//Pham Huu Canh
//C2. Party
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)      for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "c2.inp"
#define foo "c2.out"
#define MOD 1000000007
#define inf 1000111000111000111LL

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;

int trc[2005], sz[2005];
bool valid[2005];

int root(int i) {   return i == trc[i] ? i : trc[i] = root(trc[i]); }

void input()
{
    int i, n, ne, nd, x, y, res;
    
    scanf("%d", &n);
    repi(i, 1, n)   trc[i] = i, sz[i] = 1, valid[i] = true;
    
    scanf("%d", &ne);
    fori(i, ne){
        scanf("%d %d", &x, &y);
        x = root(x), y = root(y);
        if (x == y) continue;
        if (sz[x] > sz[y])  trc[y] = x, sz[x] += sz[y];
        else                trc[x] = y, sz[y] += sz[x];
    }
    
    scanf("%d", &nd);
    fori(i, nd){
        scanf("%d %d", &x, &y);
        x = root(x), y = root(y);
        if (x == y) valid[x] = false;
    }
    
    res = 0;
    repi(i, 1, n)   if (trc[i] == i && valid[i])    res = timmax(res, sz[i]);
    
    printf("%d\n", res);
}

int main()
{
    #ifndef ONLINE_JUDGE
        freopen(fii,"r",stdin);
        freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
