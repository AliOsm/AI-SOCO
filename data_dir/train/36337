#include<bits/stdc++.h>
using namespace std;
const int N=1e5+20;
int n,i,u[N],v[N],cu,cv,c[N];
vector <int> adj[N];
set <int> d[N];
bool possible;
void dfs(int u,int p)
{
    if(!possible) return ;
    for(auto i:adj[u])
    {
        if(i==p) continue;
        dfs(i,u);

        if(d[i].size()>1)
        {
            possible=false;
            return ;
        }
        for(auto j:d[i]) d[u].insert(j);
    }

    d[u].insert(c[u]);
}
int main()
{
    scanf("%d",&n);
    for(i=0;i<n-1;i++)
    {
        scanf("%d%d",&u[i],&v[i]);
        adj[u[i]].push_back(v[i]);
        adj[v[i]].push_back(u[i]);
    }

    for(i=1;i<=n;i++) scanf("%d",&c[i]);

    for(i=0;i<n-1;i++) if(c[u[i]]!=c[v[i]]) cu=u[i], cv=v[i];

    if(cu==cv) return 0 * printf("YES\n1");

    possible=true;
    dfs(cu,-1);
    if(possible) return 0 * printf("YES\n%d",cu);

    for(i=1;i<=n;i++) d[i].clear();
    possible=true;
    dfs(cv,-1);
    if(possible) return 0 * printf("YES\n%d",cv);

    printf("NO");
}
