#include <bits/stdc++.h>
#define nmax 100005
using namespace std;
int n, m, x, y, w, ans;
map<int,int>g[nmax];
int getMaxLen(int node, int weight)
{
    auto it = g[node].lower_bound(weight);
    if (it == g[node].begin()) return 0;
    --it;
    return (*it).second;
}
int main()
{
    scanf("%d %d",&n,&m);
    for (int i=1;i<=m;++i)
    {
        scanf("%d %d %d",&x,&y,&w);
        int currLen = getMaxLen(x, w); // lungimea maxima a unui drum care se termina in a si are greutatea maxim w
        ++currLen;
        if (getMaxLen(y, w+1) > currLen) continue;
        g[y][w] = max(g[y][w], currLen); // asta e noua lungime maxima a unui drum care se termina in b si are greutatea w
        auto it = g[y].upper_bound(w);
        while (it != g[y].end() && (*it).second < currLen)
            g[y].erase(it++);
    }
    for (int i=1;i<=n;++i)
        for (auto x:g[i])
            if (x.second > ans) ans = x.second;
    cout<<ans<<'\n';
    return 0;
}
