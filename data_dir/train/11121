#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <stack>
#include <set>

using namespace std;

const int N = 2010;

const int mod = 1e9 + 7;

typedef unsigned long long ll;

char s[N], sa[N], sb[N];
ll h[N], p[N];

int main(){
	p[0] = 1;
	for(int i = 1; i < N; i++)
		p[i] = p[i - 1] * 127;
	scanf("%s%s%s", s, sa, sb);
	int l = strlen(s);
	int la = strlen(sa);
	int lb = strlen(sb);
	if(la > l || lb > l)
		return puts("0"), 0;
	h[0] = s[0];
	for(int i = 1; s[i]; i++)
		h[i] = h[i - 1] + s[i] * p[i];
	ll ha = 0, hb = 0;
	for(int i = 0; sa[i]; i++)
		ha = ha + sa[i] * p[i + l - la];
	for(int i = 0; sb[i]; i++)
		hb = hb + sb[i] * p[i + l - lb];
	vector<int> a, b;
	ll ta = 0, tb = 0;
	for(int i = 0; i < la; i++)
		ta = ta + s[i] * p[i];
	for(int i = 0; i + la <= l; i++){
		if(ta * p[l - la - i] == ha)
			a.push_back(i);
		ta -= s[i] * p[i];
		ta += s[i + la] * p[i + la];
	}
	for(int i = 0; i < lb; i++)
		tb = tb + s[i] * p[i];
	for(int i = 0; i + lb <= l; i++){
		if(tb * p[l - lb - i] == hb)
			b.push_back(i);
		tb -= s[i] * p[i];
		tb += s[i + lb] * p[i + lb];
	}
	vector<ll> vt;
	for(int i = 0; i < a.size(); i++)
		for(int j = 0; j < b.size(); j++){
			if(a[i] > b[j]) continue;
			if(a[i] + la > b[j] + lb) continue;
			vt.push_back((h[b[j]] - h[a[i]] + s[a[i]] * p[a[i]]) * p[l - b[j]]);
		}
	sort(vt.begin(), vt.end());
	if(vt.size() == 0) cout << 0 << endl;
	else{
		int ret = 1;
		for(int i = 1; i < vt.size(); i++)
			if(vt[i] != vt[i - 1]) ret++;
		cout << ret << endl;
	}
	return 0;
}