#include <bits/stdc++.h>
using namespace std;

#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (int)(2e18)
#define endl          '\n'
#define mp            make_pair
#define time(s)       (double(clock()-s)/double(CLOCKS_PER_SEC))

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

const int N = 5e5+1;
vi g[N], h, sub(N);
int ans;

void dfs(int v, int p){
    for(auto u : g[v]){
        if(u == p)continue;
        dfs(u, v);
        sub[v] += sub[u];
    }
    sub[v]++;
}

void dfs1(int v, int p, int hh){
    for(auto u : g[v]){
        if(u == p)continue;
        dfs1(u, v, hh+1);
    }
    if(si(g[v]) == 1){
        h[hh]++;
    }
}

void solve(){
    int n;
    cin >> n;
    for(int i = 1; i < n; i++){
        int a, b;
        cin >> a >> b;
        g[a].pb(b);
        g[b].pb(a);
    }
    dfs(1, 1);
    for(auto u : g[1]){
        h.resize(2*sub[u]);
        dfs1(u, 1, 1);
        // for(int i = 1; i < si(h); i++)
        //     cout << h[i] << " ";
        // cout << endl;
        for(int i = 1; i < si(h); i++){
            if(i+1 < si(h) && h[i] > 1){
                h[i+1] += h[i]-1;
                ans = max(i, ans);
            }
            else if(i+1 == si(h) && h[i] > 1){
                h.pb(h[i]-1);
                ans = max(i, ans);
            }
            if(h[i] == 1)
                ans = max(i, ans);
        }
        h.clear();
    }
    cout << ans << endl;
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(20);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif
    
    //cin >> t;

    for(int i = 1;i <= t; i++){
        solve();
    }
    cerr << time(start);
    return 0;
}