#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define ss second
#define ff first
#define pb push_back
#define mp make_pair
int x[200100];
bool ok[200100];
ll ans[200100];int n;
vector<int> v[200100];
void go1(){

    queue<int> q;
    for(int i=1;i<=n;i++){
        if(x[i]%2==0)continue;
        ok[i]=1;}
    for(int i=1;i<=n;i++){
        if(x[i]%2==0)continue;
        //ok[i]=1;
        for(int j=0;j<v[i].size();j++){
            if(!ok[v[i][j]]){
                ok[v[i][j]]=1;
                q.push(v[i][j]);
            }
        }


    }
    int cr=1;
    while(q.size()){
        int y=q.size();
        for(int i=0;i<y;i++){
            int o=q.front();
            ans[o]=cr;
            for(int j=0;j<v[o].size();j++){
            if(!ok[v[o][j]]){
                ok[v[o][j]]=1;
                q.push(v[o][j]);
            }
        }
            q.pop();
        }
        cr++;
    }
}


void go2(){

    queue<int> q;
     for(int i=1;i<=n;i++){
        if(x[i]%2==1)continue;
        ok[i]=1;}
    for(int i=1;i<=n;i++){
        if(x[i]%2==1)continue;

        for(int j=0;j<v[i].size();j++){
            if(!ok[v[i][j]]){
                ok[v[i][j]]=1;
                q.push(v[i][j]);
            }
        }


    }
    int cr=1;
    while(q.size()){
        int y=q.size();
        for(int i=0;i<y;i++){
            int o=q.front();
            ans[o]=cr;
            for(int j=0;j<v[o].size();j++){
            if(!ok[v[o][j]]){
                ok[v[o][j]]=1;
                q.push(v[o][j]);
            }
        }
            q.pop();
        }
        cr++;
    }
}
int main(){
    ios_base::sync_with_stdio(0);
    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>x[i];
        if(i+x[i]<=n)v[i+x[i]].pb(i);
        if(i-x[i]>=1)v[i-x[i]].pb(i);
    }
    go1();
    for(int i=0;i<=n;i++)ok[i]=0;
    go2();
    for(int i=1;i<=n;i++){
        if(ans[i]==0)ans[i]=-1;
        cout<<ans[i]<<' ';
    }
    return 0;
    }
