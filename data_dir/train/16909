 #include <bits/stdc++.h>
using namespace std;

#define fora(i, n) for (int i = 0; i < n; ++i)
#define forb(i, n) for (int i = 1; i <=n; ++i)
#define forc(i, n) for (const auto &i : n)
#define mp make_pair
#define pb push_back
#define eb emplace_back
#define sz(x) (int)(x).size()
#define all(x) begin(x), end(x)

using ll = long long;
using ld = long double;

struct res {
	ll a, b;
	vector<pair<ll, ll>> out;
};

res test(ll a, ll b, ll i, res r) {
	if (r.out[i].first > r.out[i].second) {
		r.out[i].second += min(r.out[i].first - 2, b);
		b -= r.out[i].second;
		ll c = min(a, b);
		r.out[i].first += c;
		r.out[i].second += c;
		a -= c;
		b -= c;
	} else {
		r.out[i].first += min(r.out[i].second - 2, a);
		a -= r.out[i].first;
		ll c = min(a, b);
		r.out[i].first += c;
		r.out[i].second += c;
		a -= c;
		b -= c;
	}
	for (ll j = 0; j < sz(r.out); j++) {
		if (j != i) {
			if (r.out[j].first > r.out[j].second) {
				r.out[j].second += min(r.out[j].first - 2, b);
				b -= r.out[j].second;
			} else {
				r.out[j].first += min(r.out[j].second - 2, a);
				a -= r.out[j].first;
			}
		}
	}
	if (a != 0 || b != 0) return {-1, -1, {}};
	return r;
}

res check(ll a, ll b, ll bits) {
	res r = {0, 0, {}};
	for (ll i = 0; i < 5 && r.a < 3 && r.b < 3; i++) {
		if (((bits >> i) & 1) == 0) {
			r.a++;
			if (a >= 25 && i < 4) {
				a -= 25;
				r.out.push_back({25, 0});
			} else if (a >= 15 && i == 4 ) {
				a -= 15;
				r.out.push_back({15, 0});
			} else {
				return {-1, -1, {}};
			}
		} else {
			r.b++;
			if (b >= 25 && i < 4) {
				b -= 25;
				r.out.push_back({0, 25});
			} else if (b >= 15 && i == 4) {
				b -= 15;
				r.out.push_back({0, 15});
			} else {
				return {-1, -1, {}};
			}
		}
	}
	for (ll i = 0; i < sz(r.out); i++) {
		res rr = test(a, b, i, r);
		if (rr.a >= 0) return rr;
	}
	return {-1, -1, {}};
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	ll m;
	cin >> m;
	for (ll i = 0; i < m; i++) {
		ll a, b;
		cin >> a >> b;
		res r = {-1, -1, {}};
		for (ll j = 0; j < (1 << 5); j++) {
			res rr = check(a, b, j);
			if (rr.a >= 0 && (r.a < 0 || (r.a - r.b) < (rr.a - rr.b))) {
				r = rr;
			}
		}
		if (r.a < 0) {
			cout << "Impossible" << endl;
		} else {
			cout << r.a << ":" << r.b << endl;
			for (auto e : r.out) {
				cout << e.first << ":" << e.second << " ";
			}
			cout << endl;
		}
	}
	
}