#include<vector>
#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<map>
#include<string>
#include<algorithm>
#include<utility>
#define inf 1000000000000
#define ll long long

using namespace std;

vector <vector <ll> > ar;
vector <ll> color;
vector <bool> used;
vector <ll> ans;
ll n;

pair<map <ll, ll>*, pair<ll, ll> > dfs(ll v){
    used[v] = true;
    //cout<<v<<endl;
    if ((ar[v].size() == 1) && (used[ar[v][0]])){
        //cout<<1<<endl;
        map <ll, ll> * mas = new map <ll, ll> ();
        //cout<<2<<endl;
        ++(*mas)[color[v]];
        //cout<<3<<endl;
        pair <ll, ll> k;
		k.first = color[v];
		k.second = 1;
        //cout<<4<<endl;
        pair <map<ll, ll>*, pair<ll, ll> > ans;
		ans.first = mas;
		ans.second = k;
        //cout<<5<<endl;
		::ans[v] = ans.second.first;
        return ans;
    }
    vector <pair<map<ll, ll>*, pair<ll, ll> > > mas;
    ll ma_i, ma = -inf;
    for (ll i = 0; i < ar[v].size(); ++i){
        if (!used[ar[v][i]]){
            mas.push_back(dfs(ar[v][i]));
            if ((*mas[mas.size() - 1].first).size() > ma){
                ma = (*mas[mas.size() - 1].first).size();
                ma_i = mas.size() - 1;
            }
        }
    }
    for (ll i = 0; i < mas.size(); ++i){
        if (i != ma_i){
            for (auto j :(*mas[i].first)){
                (*mas[ma_i].first)[j.first] += j.second;
                if ((*mas[ma_i].first)[j.first] > mas[ma_i].second.second){
                    mas[ma_i].second.second = (*mas[ma_i].first)[j.first];
                    mas[ma_i].second.first = j.first;
                }
                else if ((*mas[ma_i].first)[j.first] == mas[ma_i].second.second){
                    mas[ma_i].second.first += j.first;
                }
            }
        }
    }
	(*mas[ma_i].first)[color[v]] += 1;
	if ((*mas[ma_i].first)[color[v]] > mas[ma_i].second.second){
		mas[ma_i].second.second = (*mas[ma_i].first)[color[v]];
		mas[ma_i].second.first = color[v];
	}
	else if ((*mas[ma_i].first)[color[v]] == mas[ma_i].second.second){
		mas[ma_i].second.first += color[v];
	}
    ans[v] = mas[ma_i].second.first;
	return mas[ma_i];
}

int main(){
    cin>>n;
    ar.resize(n);
    color.resize(n);
    used.resize(n);
    used.assign(n, false);
    ans.resize(n);
    for (ll i = 0; i < n; ++i){
        cin>>color[i];
    }
    for (ll i = 0; i < n - 1; ++i){
        ll a, b;
        cin>>a>>b;
        ar[a - 1].push_back(b - 1);
        ar[b - 1].push_back(a - 1);
    }
    dfs(0);
    for (ll i = 0; i < n; ++i){
        cout<<ans[i]<<" ";
    }
}
