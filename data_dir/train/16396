#include <bits/stdc++.h>
using namespace std;

#define FASTIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define LL long long 
#define ar32(x) array<int, x> 
#define ar64(x) array<LL, x>
// Infinity xP
const int oo = 1e9 + 5;
// const int MOD = 1e9 + 7;
const LL ooll = 1e18;
// const int MOD = 998244353;
const int MOD = 1e9 + 7;

const int N = 1e2 + 5;

string s[N];
int taken[N];
void solve() {
    int n, m, i, j, k;
    cin >> n >> m;
    ar32(2) curr = {m, m};
    vector<ar32(3)> v;
    for (i=0;i<n;i++) {
        int t, l, h; cin >> t >> l >> h;
        v.push_back({t, l, h});
    }
    sort(v.begin(), v.end(), [](ar32(3) a, ar32(3) b) {
        return a[0] < b[0];
    });
    int prevt = 0;
    for (i=0;i<n;i++) {
        int curt = v[i][0], l = v[i][1], h = v[i][2];
        curr[0] -= (curt-prevt);
        curr[1] += (curt-prevt);
        // cout << curr[0] << " " << curr[1] << " b4\n";
        while(i+1<n && v[i+1][0] == curt) {
            i++;
            l = max(l, v[i][1]);
            h = min(h, v[i][2]);
        }
        if (l > h) {
            cout << "NO\n";
            return;
        }
        // cout << curr[0] << " " << curr[1] << " after\n";
        curr[0] = max(curr[0], l);
        curr[1] = min(curr[1], h);
        if (curr[0] > curr[1]) {
            cout << "NO\n";
            return;
        }
        prevt = curt;
    }
    cout << "YES\n";
}
 
int main() {
    FASTIO;
    int t = 1;
    cin >> t;
    while(t--) solve();
    return 0;
}