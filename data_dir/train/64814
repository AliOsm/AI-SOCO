#include<bits/stdc++.h>

using namespace std;

#define fRead(x)  freopen(x,"r",stdin)
#define fWrite(x) freopen (x,"w",stdout)

#define LL long long
#define ULL unsigned long long
#define ff first
#define ss second
#define pb push_back
#define INF 2e16
#define PI acos(-1.0)
#define mk make_pair

#define min3(a,b,c) min(a,min(b,c))
#define max3(a,b,c) max(a,max(b,c))
#define min4(a,b,c,d) min(a,min(b,min(c,d)))
#define max4(a,b,c,d) max(a,max(b,max(c,d)))
#define SQR(a) ((a)*(a))
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define REP(i,b) for(int i=0;i<b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
#define MEM(a,x) memset(a,x,sizeof(a))
#define ABS(x) ((x)<0?-(x):(x))

#define scanI(a) scanf("%d",&a)
#define scanI2(a,b) scanI(a) , scanI(b)
#define scanI3(a,b,c) scanI(a), scanI(b), scanI(c)
#define scanI4(a,b,c,d) scanI(a), scanI(b), scanI(c), scanI(d)

#define scanL(a) scanf("%I64d",&a)
#define scanL2(a,b) scanL(a) , scanL(b)
#define scanL3(a,b,c) scanL(a), scanL(b), scanL(c)
#define scanL4(a,b,c,d) scanL(a), scanL(b), scanL(c), scanL(d)

#define SORT(v) sort(v.begin(),v.end())
#define REV(v) reverse(v.begin(),v.end())

#define FastRead ios_base::sync_with_stdio(0);cin.tie(nullptr);
const int N = 105;
const LL MOD = 1e9 + 7;
void MatMul(LL A[N][N], LL B[N][N])
{
    LL R[N][N];
    memset(R, 0, sizeof(R));
    REP(i, N) REP(j, N) REP(k, N) R[i][j] = (R[i][j] + A[i][k] * B[k][j]) % MOD;
    REP(i, N) REP(j, N) B[i][j] = R[i][j];
}


void MatPow(LL R[N][N],LL M[N][N],LL P)
{
    while(P)
    {
        if(P & 1) MatMul(M, R);
        MatMul(M, M);
        P = P >> 1;
    }
}
LL n , m;
LL dp[105];
LL f(LL x)
{
    if(x == 0)return 1;
    if(x < 0)return 0;
    if(dp[x] != -1)return dp[x];
    return dp[x] = (f(x - m) + f(x - 1)) % MOD;
}
int main()
{
    FastRead
    MEM(dp,-1);
    //f(x) = f(x - m) + f(x - 1);
    cin >> n >> m;
    LL R[N][N],M[N][N];
    MEM(R,0);
    MEM(M,0);
    M[0][0] = M[0][m - 1] = 1;
    for(LL i = 1;i < m;i++){
        M[i][i-1] = 1;
    }
    for(LL i = 0;i < m;i++){
        R[m - i - 1][0] = f(i);
    }
    if(n < m){
        cout << f(n) << "\n";
    }else{
        LL d = n - m + 1;
        MatPow(R,M,d);
        cout << R[0][0] << "\n";
    }

//    for(LL i = 0;i < m;i++){
//        for(LL j = 0;j < m;j++){
//            cout << M[i][j] << " ";
//        }cout << endl;
//    }
//    cout << endl;
//    for(LL i = 0;i < m;i++){
//        for(LL j = 0;j < m;j++){
//            cout << R[i][j] << " ";
//        }cout << endl;
//    }
}