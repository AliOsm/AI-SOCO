#include<iostream>      
#include<cstdio>      
#include<map>      
#include<cstring>      
#include<cmath>      
#include<vector>      
#include<algorithm>      
#include<set>      
#include<stack>    
#include<string>      
#include<ctime>    
#include<queue>      
#define inf 0x3f3f3f3f   
#define maxn 210005      
#define eps 1e-8    
#define zero(a) fabs(a)<eps      
#define Min(a,b) ((a)<(b)?(a):(b))      
#define Max(a,b) ((a)>(b)?(a):(b))      
#define pb(a) push_back(a)      
#define mp(a,b) make_pair(a,b)      
#define mem(a,b) memset(a,b,sizeof(a))      
#define LL long long      
#define MOD 1000000007    
#define sqr(a) ((a)*(a))      
#define Key_value ch[ch[root][1]][0]      
#define test puts("OK");      
#define pi acos(-1.0)    
#define lowbit(x) ((-(x))&(x))    
#define HASH1 1331    
#define HASH2 10001 
#define lson step<<1
#define rson step<<1|1   
#define C   240      
#define vi vector<int>    
#define TIME 10      
//#pragma comment(linker, "/STACK:1024000000,1024000000")      
using namespace std;
const int N=505;
int n,x[N];
vector<int>v;
LL path[N][N],ans[N]={0};
int main(){
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++){
            scanf("%I64d",&path[i][j]);
        }
    for(int i=n;i>=1;i--)
        scanf("%d",&x[i]);
    for(int i=1;i<=n;i++){
        v.pb(x[i]);
        for(int k=0;k<v.size();k++){
            for(int j=0;j<v.size();j++){
                if(v[k]==v[j]||v[k]==x[i]||v[j]==x[i]) continue;
                if(path[x[i]][v[j]]>path[x[i]][v[k]]+path[v[k]][v[j]])
                    path[x[i]][v[j]]=path[x[i]][v[k]]+path[v[k]][v[j]];
                if(path[v[j]][x[i]]>path[v[k]][x[i]]+path[v[j]][v[k]])
                    path[v[j]][x[i]]=path[v[k]][x[i]]+path[v[j]][v[k]];
            }
        }
        for(int k=0;k<v.size();k++){
            for(int j=0;j<v.size();j++){
                if(v[k]==v[j]||v[k]==x[i]||v[j]==x[i]) continue;
                if(path[v[k]][v[j]]>path[v[k]][x[i]]+path[x[i]][v[j]])
                    path[v[k]][v[j]]=path[v[k]][x[i]]+path[x[i]][v[j]];
            }
        }
        for(int j=0;j<v.size();j++)
            for(int k=0;k<v.size();k++)
                if(v[j]!=v[k])
                    ans[i]+=path[v[j]][v[k]];
    }
    for(int i=n;i;i--)
        printf("%I64d%c",ans[i],i==1?'\n':' ');
    return 0;
}

