/*<<head>> {{{*/
#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>
#include <string>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
using namespace std;
typedef double db;
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;     // -INF: 0xc0   abs(-INF) = INF + 1
const ll LINF = 0x3f3f3f3f3f3f3f3f;
/*}}}*/                         // zr, zm
const int MOD = (int)1e9+7;     // when MOD = 1e9+7, inv2 = 500000004
const int N = (int)1e5+7;
 
// ------- 变量 ------- //
 
int n, m;
int a[N];
pii seg[N];
vi L[N], R[N];
bool vis[N];
 
// ------- 函数 ------- //
 
#define ls rt << 1
#define rs rt << 1 | 1
#define lson l, m, ls
#define rson m + 1, r, rs
pii t[N<<2]; int lz[N<<2];
inline pii op(pii a, pii b) { return mp(min(a.fi, b.fi), max(a.se, b.se)); }
inline void add(int rt, int val) {
    lz[rt] += val;
    t[rt].fi += val;
    t[rt].se += val;
}
inline void pd(int rt) {
    if (lz[rt]) {
        add(ls, lz[rt]);
        add(rs, lz[rt]);
        lz[rt] = 0;
    }
}
inline void build(int l, int r, int rt) {
    lz[rt] = 0;
    if (l == r) { t[rt] = mp(a[r], a[r]); return ; }
    int m = (l + r) >> 1;
    build(lson); build(rson);
    t[rt] = op(t[ls], t[rs]);
}
inline void upd(int L, int R, int val, int l, int r, int rt) {
    if (L <= l && r <= R) { add(rt, val); return ; }
    pd(rt);
    int m = (l + r) >> 1;
    if (L <= m) upd(L, R, val, lson);
    if (m < R) upd(L, R, val, rson);
    t[rt] = op(t[ls], t[rs]);
}
 
void Init() {
    memset(vis, 0, sizeof(vis));
    rep(i, 1, n+1) scanf("%d", a+i);
    rep(i, 1, n+1) L[i].clear(), R[i].clear();
    rep(i, 1, m+1) scanf("%d%d", &seg[i].fi, &seg[i].se);
}
 
int Solve() {
    build(1, n, 1);
    int ans = -INF;
    vi vans;
    rep(i, 1, m+1) {
        if (seg[i].fi == 1) {
            upd(seg[i].fi, seg[i].se, -1, 1, n, 1);
            vis[i] = 1;
            vans.pb(i);
        }
        L[seg[i].se].pb(i);
        R[seg[i].fi].pb(i);
    }
    ans = max(ans, t[1].se - t[1].fi);
    rep(i, 2, n+1) {
        for (auto o : L[i-1]) {
            upd(seg[o].fi, seg[o].se, 1, 1, n, 1);
            vis[o] = 0;
        }
        for (auto o : R[i]) {
            upd(seg[o].fi, seg[o].se, -1, 1, n, 1);
            vis[o] = 1;
        }
        //de(ans);
        if (ans < t[1].se - t[1].fi) {
            ans = t[1].se - t[1].fi;
            vans.clear();
            rep(i, 1, m+1) if (vis[i]) vans.pb(i);
            //for (auto o : vans) printf("%d ", o); puts("");
        }
        //de(ans); de("======");
    }
    printf("%d\n", ans);
    printf("%d\n", sz(vans));
    rep(i, 0, sz(vans)) printf("%d%c", vans[i], " \n"[i==sz(vans)-1]);
    return 0;
}
 
// ------- main ------- //
 
int main ()
{
    //ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    //freopen("in.txt", "r", stdin);
    //freopen("out.txt", "w", stdout);
 
    //Pre();
    //int t; scanf("%d", &t); while (t--) {
    while (~scanf("%d%d", &n, &m)) {
    //while(fgets(s, N, stdin)) {   // 注意 fgets 会读入换行符
        //if (n == 0) break;
        //static int kase = 0; printf("Case %d: ", ++kase);
        Init();
        Solve();
        //if (t) puts("");
    }
    return 0;
}