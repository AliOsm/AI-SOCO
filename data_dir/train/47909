#include <vector>
#include <list>
#include <algorithm>
#include <functional>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#define ll long long
#define MAXP 420000

using namespace std;


bool isprime[MAXP+2];
vector<int> primes;
int main() {
    
    for(int i=2;i<=MAXP;i++) {
        isprime[i]=true;
    }
    for(int i=2;i<=MAXP;i++) {
        for(int j=2;j*i<=MAXP;j++) {
            isprime[i*j]=false;
        }
    }
    
    primes.push_back(0);
    for(int i=2;i<=MAXP;i++) {
        if (isprime[i]) {
            primes.push_back(i);
        }
    }
    
    int n;
    cin>>n;
    int one_counts = 0;
    int two_counts = 0;
    for(int i=1;i<=n;i++) {
        int x;
        cin>>x;
        if (x == 1)
            one_counts++;
        else
            two_counts++;
    }
    
    
    int pos = 0;
    
    vector<int> ans;
    int ct = 0;
    while(1) {
        int diff = primes[pos+1]-primes[pos];
        int num_twos = min(diff/2,two_counts);
        int num_ones = diff - 2*num_twos;
        
        if (num_twos > two_counts || num_ones > one_counts)
            break;
        
        for(int t=1;t<=num_twos;t++)
            ans.push_back(2);
        for(int t=1;t<=num_ones;t++)
            ans.push_back(1);
        
        one_counts -= num_ones;
        two_counts -= num_twos;
        pos++;
        ct++;
    }
    
    for(int t=1;t<=two_counts;t++)
        ans.push_back(2);
    for(int t=1;t<=one_counts;t++)
        ans.push_back(1);
    
    
    for(int x : ans) {
        printf("%d ",x);
    }
    cout << endl;
    
}
