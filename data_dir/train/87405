#include <bits/stdc++.h>
using namespace std;

const int MAXN=3e5+5;
const long long MOD=998244353;

int T, N, M, X, Y;
int vis[MAXN], day;
long long H;
long long P[MAXN];
bool B[MAXN];
vector <int> V[MAXN];

void dfs(int now,bool tip) {
	if (vis[now]==day) {
		if (B[now]!=tip) {
			H=0;
		}
		
		return;
	}
	
	vis[now]=day;
	B[now]=tip;
	
	if (tip) {
		X++;
	}
	else {
		Y++;
	}
	
	for (int next : V[now]) {
		dfs(next,!tip);
	}
	
	return;
}

int main () {
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	
	P[0]=1;
	for (int i=1;i<MAXN;i++) {
		P[i]=P[i-1]<<1;
		if (P[i]>=MOD) P[i]-=MOD;
	}
	
	cin>>T;
	
	for (int i=1;i<=T;i++) {
		cin>>N>>M;
		day++;
		H=1;
		
		for (int i=1;i<=M;i++) {
			cin>>X>>Y;
			V[X].push_back(Y);
			V[Y].push_back(X);
		}
		
		for (int i=1;i<=N;i++) {
			if (vis[i]!=day) {
				X=0;
				Y=0;
				dfs(i,0);
				H=H*(P[X]+P[Y])%MOD;
			}
			
			V[i].clear();
		}
		
		cout<<H<<'\n';
	}
	
	return 0;
}
