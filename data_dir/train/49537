#include <bits/stdc++.H>
using namespace std;
#define ll long long
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)

int const N = 50;
char s[N + 1];
int n;

bool ask(string z){
	printf("? %s\n", z.c_str());
	fflush(stdout);
	int n;
	scanf("%d", &n);
	f(i, 0, n){
		int j;
		scanf("%d", &j);
		f(k, 0, z.size())s[j - 1 + k] = z[k];
	}
	return n && s[0];
}

string dp(char c, int fr){
	string an;
	while (fr--)an += c;
	return an;
}

void fn(string z = string()){
	printf("! %s\n", z.empty() ? s : z.c_str());
	fflush(stdout);
	scanf("%*d");
}

void fl(){
	f(i, 1, n)if (!s[i] && s[i - 1]){
		if (s[i - 1] == 'H' && i + 1 != n)s[i] = 'H';
		else if (s[i - 1] == 'C' && i + 1 + (n == 4) < n)s[i] = 'C';
	}
}

void solve(){
	scanf("%d", &n);
	f(i, 0, n + 1)s[i] = 0;
	ask("OO");
	ask("OH");
	ask("OC");
	ask("HC");
	ask("CHH");
	int j = 0;
	while (j < n && !s[j])++j;
	if (j == n){
		if (ask("CCC") && s[n - 2] == 'C'){
			if (ask(dp('C', n)) || ask(dp('C', n - 1) + 'H'))return fn();
			return fn(dp('C', n - 1) + 'O');
		}else {
			if (ask(dp('H', n)) || ask(dp('H', n - 1) + 'O'))return fn();
			return fn(dp('C', n - 2) + "HO");
		}
	}
	if (n > 4){
		ask("CHO");
		j = 0;
		while (j < n && !s[j])++j;
	}
	fl();
	vector<string> pr, sf;
	if (j > 0){
		if (s[j] == 'C')while (j > 0)s[--j] = 'C';
		else {
			if (n == 4 && j >= 2 && s[j] == 'O')pr.emplace_back(dp('C', j - 1) + "H");
			pr.emplace_back(dp('C', j));
			pr.emplace_back(dp('H', j));
		}
	}
	if (!s[n - 1]){
		if (!s[n - 2]){
			sf.emplace_back("HO");
			sf.emplace_back("CC");
			sf.emplace_back("CH");
			sf.emplace_back("CO");
		}else {
			if (s[n - 2] == 'C')sf.emplace_back("C");
			sf.emplace_back("H");
			sf.emplace_back("O");
		}
	}
	if (!pr.empty()){
		string sad = s + j;
		bool ok = false;
		f(i, 0, pr.size() - 1)if (ask(pr[i] + sad)){
			ok = true;
			break;
		}
		if (!ok)f(i, 0, j)s[i] = 'H';
	}
	if (!sf.empty()){
		bool ok = false;
		f(i, 0, sf.size() - 1)if (ask(s + sf[i])){
			ok = true;
			break;
		}
		if (!ok){
			if (sf[0].size() == 1)s[n - 1] = 'O';
			else {
				s[n - 2] = 'C';
				s[n - 1] = 'O';
			}
		}
	}
	fn();
}

int main(){
	int t;
	scanf("%d", &t);
	while (t--)solve();
}