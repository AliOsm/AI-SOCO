#include <cstdio>
#include <vector>
#include <set>
#include <algorithm>

using namespace std;

const int N = 100'009;

int to[N];
int w[N];
vector<int> add[N];
vector<int> del[N];
int a[N];
long long f[N][209];

int main() {
  int n, m, k;
  scanf("%d %d %d", &n, &m, &k);
  for (int i = 0; i <= n; ++i) {
    add[i].clear();
    del[i].clear();
  }
  for (int i = 0; i < k; ++i) {
    int l, r;
    scanf("%d %d %d %d", &l, &r, to + i, w + i);
    --l;
    add[l].push_back(i);
    del[r].push_back(i);
  }
  auto cmp = [](int i, int j) {
    if (w[i] != w[j]) {
      return w[i] > w[j];
    }
    if (to[i] != to[j]) {
      return to[i] > to[j];
    }
    return i < j;
  };
  set<int, decltype(cmp)> s(cmp);
  for (int i = 0; i < n; ++i) {
    for (int j : del[i]) {
      s.erase(j);
    }
    for (int j : add[i]) {
      s.insert(j);
    }
    a[i] = !s.empty() ? *s.begin() : -1;
  }
  const long long inf = 1'000'000'000'000'000'000;
  for (int i = 0; i <= n; ++i) {
    for (int j = 0; j <= m; ++j) {
      f[i][j] = inf;
    }
  }
  f[n][0] = 0;
  for (int i = n - 1; i >= 0; --i) {
    for (int j = 0; j < m; ++j) {
      f[i][j + 1] = min(f[i][j + 1], f[i + 1][j]);
    }
    for (int j = 0; j <= m; ++j) {
      if (a[i] == -1) {
        f[i][j] = min(f[i][j], f[i + 1][j]);
      } else {
        f[i][j] = min(f[i][j], f[to[a[i]]][j] + w[a[i]]);
      }
    }
  }
  long long ans = inf;
  for (int i = 0; i <= m; ++i) {
    ans = min(ans, f[0][i]);
  }
  printf("%lld\n", ans);
}
