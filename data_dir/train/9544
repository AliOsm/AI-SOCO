#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <string>
#include <cstring>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <cassert>
#include <ctime>
#include <cstdlib>

using namespace std;

#define forit(it,s) for(__typeof((s).begin()) it=(s).begin();it!=(s).end();it++)
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define all(x) x.begin(),x.end()
#define ll long long
#define pb push_back
#define sz size()
#define mp make_pair
#define f first
#define s second

const double pi = acos(-1.0);
const double eps = 1e-8;

const int inf = 1 << 30;
const int mod = int(1e9) + 7;
const int base = 257;
const int maxn = 100500;

int n, m, u[22][22];
vector < pair < int, int > > g[22][22];

void dfs(int x, int y)
{
	u[x][y] = 1;
	for (int i = 0; i < g[x][y].sz; i++)
	{
		pair < int, int > to = g[x][y][i];
		if (!u[to.f][to.s])
		{
			dfs(to.f, to.s);
		}
	}
}

int main()
{ _
		cin >> n >> m;
		for (int i = 1; i <= n; i++)
		{
			char c; cin >> c;
			if (c == '<')
			{
				for (int j = m; j > 1; j--)
					g[i][j].pb(mp(i, j - 1));
			}
			else
			{
				for (int j = 1; j < m; j++)
					g[i][j].pb(mp(i, j + 1));
			}
		}
		for (int i = 1; i <= m; i++)
		{
			char c; cin >> c;
			if (c == '^')
			{
				for (int j = n; j > 1; j--)
					g[j][i].pb(mp(j - 1, i));
			}
			else
			{
				for (int j = 1; j < n; j++)
					g[j][i].pb(mp(j + 1, i));
			}
		}
		for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
		{
			memset(u, 0, sizeof u);
			dfs(i, j);
			for (int ii = 1; ii <= n; ii++)
			for (int jj = 1; jj <= m; jj++)
				if (!u[ii][jj]) 
				{
					cout << "NO\n";
					return 0;
				}
		}
		cout << "YES\n";
	return 0;
}
