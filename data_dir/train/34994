//satyaki3794
#include <bits/stdc++.h>
#define ff first
#define ss second
#define pb push_back
#define MOD (1000000007LL)
#define LEFT(n) (2*(n))
#define RIGHT(n) (2*(n)+1)
 
using namespace std;
typedef long long ll;
typedef pair<int, int> ii;
typedef pair<int, ii> iii;

ll pwr(ll base, ll p, ll mod = MOD){
ll ans = 1;while(p){if(p&1)ans=(ans*base)%mod;base=(base*base)%mod;p/=2;}return ans;
}
 

ll gcd(ll a, ll b){
    if(b == 0)  return a;
    return gcd(b, a%b);
}


int n, m, mice[5005], split_point[5005];
ii holes[5005];
ll DP[5005][5005], ps[2][5005];

ll get_cost(int h, int l, int r){
    return ps[0][r] - ps[0][l-1];
}


void DnC_DP(int h, int l, int r, int lo, int hi){

    if(l > r)   return;

    int mid = (l+r)/2, optima_mid = mid-1;
    DP[h][mid] = DP[h-1][mid];
    for(int k=min(mid, hi);k>=lo&&(mid-k+1)<=holes[h].ss;k--){
        ll temp = DP[h-1][k-1] + get_cost(h, k, mid);
        if(temp < DP[h][mid]){
            DP[h][mid] = temp;
            optima_mid = k;
        }
    }

// cout<<"at "<<h<<" "<<l<<" "<<r<<" "<<lo<<" "<<hi<<" found optima_mid = "<<optima_mid<<" for mid = "<<mid<<endl;

    DnC_DP(h, l, mid-1, lo, optima_mid);
    DnC_DP(h, mid+1, r, optima_mid, hi);
}


int main(){

    // ios_base::sync_with_stdio(0);
    // cin.tie(0);

    scanf("%d%d", &n, &m);
    for(int i=1;i<=n;i++)   scanf("%d", &mice[i]);
    sort(mice+1, mice+n+1);
    for(int i=1;i<=m;i++)   scanf("%d%d", &holes[i].ff, &holes[i].ss);
    sort(holes+1, holes+m+1);

    for(int j=1;j<=m;j++){
        split_point[j] = -1;
        for(int i=1;i<=n;i++)
            if(mice[i] <= holes[j].ff)
                split_point[j] = i;
    }

    for(int i=1;i<=n;i++){
        ps[0][i] = ps[0][i-1] + mice[i];
        ps[1][i] = ps[1][i-1] - mice[i];
    }

    for(int i=1;i<=n;i++)
        DP[0][i] = (ll)1e15;
    for(int j=1;j<=m;j++){
        for(int i=1;i<=n;i++)
            ps[0][i] = ps[0][i-1] + abs(mice[i] - holes[j].ff);
        DnC_DP(j, 1, n, 1, n);
    }

// cout<<"mice: ";for(int i=1;i<=n;i++)    cout<<mice[i]<<" ";cout<<endl;
// cout<<"holes: ";for(int i=1;i<=m;i++)    cout<<holes[i].ff<<":"<<holes[i].ss<<" ";cout<<endl;
// cout<<"DP:\n";
// for(int i=1;i<=m;i++){
//     cout<<i<<": ";for(int j=1;j<=n;j++) cout<<DP[i][j]<<" ";cout<<endl;
// }cout<<endl;

    if(DP[m][n] == (ll)1e15)    DP[m][n] = -1;
    printf("%lld\n", DP[m][n]);
    return 0;
}




