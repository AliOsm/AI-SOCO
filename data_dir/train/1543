#pragma GCC optimize ("O3")
#include "bits/stdc++.h"
using namespace std;
#define pb push_back
using ll = long long;
using db = long double;
const int N = 1 << 17, MOD = 1e9 + 7;
char grid[505][505];
int n, m;
int dx[] = {-1,1,0,0};
int dy[] = {0,0,-1,1};
int main(){

  cin >> n >> m;
  int cnt = 0;
  for(int i = 1; i <= n; i++){
    for(int j = 1; j <= m; j++)
      cin >> grid[i][j], cnt += (grid[i][j] == '*');
  }
  vector<pair<int,int>> vp;
  for(int i = 1; i <= n; i++)
  for(int j = 1; j <= m; j++){
      if(grid[i][j]!='*')continue;
    bool ok = true;
    for(int k = 0; k < 4; k++){
      ok &= (grid[i+dx[k]][j+dy[k]] == '*');
    }
    if(ok){
      vp.push_back({i,j});
    }
  }

  if(vp.size() != 1){
    cout << "NO\n";
    return 0;
  }
  cnt--;
  for(auto x : vp){
      for(int j = 0; j < 4; j++){
        for(int k = 1; grid[x.first+dx[j] * k][x.second+dy[j]*k] == '*'; k++){
          cnt--;
        }
      }
  }

  if(!cnt)
    cout << "YES\n";
  else
    cout << "NO\n";


  return 0;
}
