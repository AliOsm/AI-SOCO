// in the name of Allah

#include <bits/stdc++.h>
using namespace std;

#define endl '\n'
#define pb push_back
#define ll long long
#define sz(x) ((int) (x.size()))

#define fr first
#define se second

const ll mod = 1000003;

inline ll add(ll a, ll b) {
	a += b;
	if(a >= mod) return a - mod;
	return a;
}

inline ll mul(ll a, ll b) {
	a *= b;
	if(a >= mod) return a % mod;
	return a;
}

inline ll power(ll a, ll b) {
	ll p = 1;
	while(b) {
		if(b&1) p = mul(p, a);
		a = mul(a, a);
		b /= 2;
	}
	return p;
}

const int N = 2e5 + 5;

int cnt[N];
int L, R, RR;

int get(int j) {
	int sum = cnt[j];
	RR = j;
	for(int i=j+1; i<N; i++) {
		sum += cnt[i];
		if(cnt[i] <= 1) {
			RR = i;
			break;
		}
	}
	// cout << j << " " << RR << " " << sum << endl;
	return sum;
}

int main() {
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

	int n, x;
	cin >> n;
	memset(cnt, 0, sizeof cnt);
	for(int i=0; i<n; i++) {
		cin >> x;
		cnt[x]++;
	}
	vector <int> pos;
	for(int i=1; i<N; i++) {
		if(cnt[i] == 1) {
			pos.pb(i);
		}
		else if(cnt[i-1] == 0 && cnt[i]) {
			pos.pb(i);
		}
	}
	int mx = 0;
	for(int e : pos) {
		int now = get(e);
		if(now > mx) {
			mx = now;
			L = e;
			R = RR;
		}
	}
	cout << mx << endl;
	vector <int> v1, v2;
	// cout << L << " " << R << endl;
	for(int i=L; i<=R; i++) {
		if(cnt[i]) {
			v1.pb(i);
			for(int j=1; j<cnt[i]; j++) {
				v2.pb(i);
			}
		}
		else break;
	}
	for(int i : v1) cout << i << " ";
	reverse(v2.begin(), v2.end());
	for(int i : v2) cout << i << " "; cout << endl;

	return 0;
}