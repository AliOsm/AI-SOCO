#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>

using namespace std;

#define V vector
#define MP make_pair
#define MAX INT_MAX
#define MIN INT_MIN
#define all(v)  ((v).begin()), ((v).end())
#define allr(v) ((v).rbegin()), ((v).rend())
#define clr(v, d) mmpet(v, d, sizeof(v))
#define sf(x) scanf("%d", &x)
#define sf2(x, y) scanf("%d %d", &x, &y)
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sfll(x) scanf("%I64d", &x)
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y)
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z)
//ios_base::sync_with_stdio(0);cin.tie(0); cout.tie(0);
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;
const ll size = 1000006 , oo = 1e13;

int main()
{
	int n, m;
	while (cin >> n >> m){
		V<V<pair<int,ll> > > adj(n+1);
		V<ll>vist(n+1,oo) , pr(n+1,-1);
		for (int i = 0; i < m; i++){
			ll x, y, w;
			cin >> x >> y >> w;
			adj[x].push_back({ y, w });
			adj[y].push_back({ x, w });
		}
		priority_queue < pair<ll,pair<int,int> > > q;
		q.push(MP(0LL, MP(-1, 1)));
		vist[1] = 0;
		while (!q.empty()){
			pair<ll, pair<int, int> > p = q.top(); q.pop();
			if (vist[p.second.second] < p.first * -1) continue; //////////////////////
			pr[p.second.second] = p.second.first;
			for (int i = 0; i < adj[p.second.second].size(); i++){
				pair<int,ll> chld = adj[p.second.second][i];
				if (vist[chld.first] > p.first * -1 + chld.second){
					vist[chld.first] = p.first * -1 + chld.second;
					q.push(MP(p.first + chld.second * -1, MP(p.second.second, chld.first)));
				}
			}
		}
		if (vist[n] == oo) cout << "-1" << endl;
		else {
			deque<ll>print;
			while (n != -1) print.push_front(n), n = pr[n];
			for (int i = 0; i < print.size(); i++)
				cout << print[i] << " ";
			cout << endl;
		}
	}

	return 0;
}