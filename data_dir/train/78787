//#pragma GCC target("avx2")
//#pragma GCC optimization("O3")
//#pragma GCC optimization("unroll-loops")
#include <bits/stdc++.h>

#define pb push_back
#define F first
#define S second
#define all(x) x.begin(),x.end()
#define ub upper_bound
#define lb lower_bound
#define bit __builtin_popcount
#define memset(x) memset(x,0,sizeof(x))

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<vector<int>> matrix;

inline void boost(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}

const ll maxn=2e5+123;
const ll inf=1e9+123;
const ll linf=1e18+123;
const ll mod=1e9+7;
const double eps=1e-9;
const double pi=acos(-1);
int dx[8]={0,1,-1,0,1,-1,1,-1};
int dy[8]={1,0,0,-1,1,1,-1,-1};
vector<pii>v;

int main(){
    boost();
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int q;
    cin>>q;
    while(q--){
        int n,k;
        cin>>n>>k;
        string s;
        cin>>s;
        v.clear();
        k--;
        for(int i=0;i<k*2;i++){
            if(i%2==0){
                if(s[i]=='('){
                    continue;
                }
                int id=0;
                for(int j=i;j<=n;j++){
                    if(s[j]=='('){
                        id=j;
                        break;
                    }
                }
                v.pb({i,id});
                reverse(s.begin()+i,s.begin()+id+1);
            }
            else if(i%2==1){
                if(s[i]==')'){
                    continue;
                }
                int id=0;
                for(int j=i;j<=n;j++){
                    if(s[j]==')'){
                        id=j;
                        break;
                    }
                }
                v.pb({i,id});
                reverse(s.begin()+i,s.begin()+id+1);
            }
        }
        int mid=(n+(k*2)-1)/2;
        for(int i=k*2;i<n;i++){
            if(i<=mid){
                if(s[i]=='('){
                    continue;
                }
                int id=0;
                for(int j=i;j<=n;j++){
                    if(s[j]=='('){
                        id=j;
                        break;
                    }
                }
                v.pb({i,id});
                reverse(s.begin()+i,s.begin()+id+1);
            }
            else{
                if(s[i]==')'){
                    continue;
                }
                int id=0;
                for(int j=i;j<=n;j++){
                    if(s[j]==')'){
                        id=j;
                        break;
                    }
                }
                v.pb({i,id});
                reverse(s.begin()+i,s.begin()+id);
            }
        }
        cout<<v.size()<<"\n";
        for(auto i:v){
            cout<<i.F+1<<" "<<i.S+1<<"\n";
        }
    }
	exit(0);
}
