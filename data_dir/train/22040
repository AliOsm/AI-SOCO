#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1 << 28;
//constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

ll popcount(ll S) {
	ll res = 0;
	for (int i = 0; i <= 25; i++) if (S >> i & 1) res++;
	return res;
}

int main()
{

	cin.tie(nullptr);
	ios::sync_with_stdio(false);

	string s; cin >> s;
	ll n = s.size();
	vector<int> dp(1 << 20);
	vector<int> bcnt(1 << 20);
	for (int S = 0; S < (1 << 20); S++) bcnt[S] = popcount(S);
	for (int i = 0; i < n; i++) {
		vector<bool> used(20, false);
		ll S = 0;
		for (int j = 0; i + j < n; j++) {
			int t = s[i + j] - 'a';
			if (used[t]) break;
			used[t] = true;
			S |= (1 << t);
			dp[S] = bcnt[S];
		}
	}
	for (int S = 0; S < (1 << 20); S++) {
		for (int i = 0; i < 20; i++) {
			if (S >> i & 1) {
				chmax(dp[S], dp[S ^ (1 << i)]);
			}
		}
	}

	ll res = 0;
	for (int S = 0; S < (1 << 20); S++) {
		if (dp[S] == bcnt[S]) {
			int T = 0;
			for (int i = 0; i < 20; i++) if (!(S >> i & 1)) T |= (1 << i);
			//cout << S << " " << dp[S] << " " << dp[T] << endl;
			chmax(res, (ll)dp[S] + dp[T]);
		}
	}
	cout << res << endl;
	return 0;

}