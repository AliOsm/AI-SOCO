#include <bits/stdc++.h>
#define ll long long
#define all(aaa) aaa.begin(), aaa.end()
using namespace std;

const int N = 2e5 + 5, mod = 998244353;
bool used[N];
int t[N], a[N];

ll bp(ll a, ll p) {
    ll r = 1;
    while (p > 0) {
        if (p & 1)
            r = r * a % mod;
        p >>= 1;
        a = a * a % mod;
    }
    return r;
}
ll que(int x) {
    ll s = 0;
    for (; x >= 0; x = (x & (x + 1)) - 1)
        s += t[x];
    return s;
}

void upd(int x, int y) {
    for (; x < N; x |= x + 1)
        t[x] += y;
}

signed main()
{
#ifdef HOME
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);

    ll n, c = 0;
    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> a[i];
        if (a[i] == -1) {
            c++;
        }
        else {
            used[a[i]] = 1;
        }
    }

    for (int i = 1; i <= n; i++) {
        if (!used[i]) {
            upd(i, 1);
        }
    }

    ll ans = c * (c - 1) / 2 % mod * bp(2, mod - 2) % mod;

    for (int i = n - 1, j = 0; i >= 0; i--) {
        if (a[i] != -1) {
            int g = que(a[i]);
            ans = (ans + j * bp(c, mod - 2) % mod * g) % mod;
        }
        else {
            j++;
        }
    }

    for (int i = 0, j = 0; i < n; i++) {
        if (a[i] != -1) {
            int g = que(n) - que(a[i]);
            ans = (ans + j * bp(c, mod - 2) % mod * g) % mod;
        }
        else {
            j++;
        }
    }

    fill(t, t + N, 0);

    for (int i = n - 1; i >= 0; i--) {
        if (a[i] != -1) {
            ans = (ans + que(a[i])) % mod;
            upd(a[i], 1);
        }
    }

    cout << ans;

    return 0;
}
