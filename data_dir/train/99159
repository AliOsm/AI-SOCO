/*
    Author: @aliencoder22
    Anil Bansal, DTU
*/
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace __gnu_pbds;
using namespace std;

#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define PSET(x,y) fixed<<setprecision(y)<<x
#define pb push_back
#define pf push_front
#define mp make_pair
#define pii pair<int,int>
#define pid pair<int,double>
#define vi vector<int>
#define ff first
#define ss second
#define int long long
#define ull unsigned long long
#define SIZE 200010
#define mod 1000000007
#define BIG 998244353
#define s(t) scanf("%d",&t)
#define p(t) printf("%d\n",t)
#define mii map<int,int>
//#define TC int tc;cin>>tc;while(tc--)
#define MSET(table,i) memset(table, i, sizeof(table))
#define N 31607
#define INF 1e18
#define endl '\n'
//#define tc int t;cin>>t;while(t--)
#define pi  3.1415926358

int  max3(int  a, int  b, int c)
{
    return max(c, max(a, b));
}
int min3(int a, int  b, int  c)
{
    return min(a, min(b, c));
}
int  power(int  x, int  y )
{
    int res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x);
        y = y >> 1;
        x = (x * x);
    }
    return res;
}
int  powermod(int  x, int  y, int p )
{
    int res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x) % p;
        y = y >> 1;
        x = (x * x) % p;
    }
    return res % p;
}
int logg(int  a)
{
    int  x = 0;
    while (a > 1)
    {
        x++;
        a /= 2;
    }
    return x;
}
int  gcd(int  a, int   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
int ceiling (int  a, int  b)
{
    if (a % b == 0)
        return a / b;
    else
        return a / b + 1;
}
int modinv(int x)
{
    return powermod(x, mod - 2, mod);
}

int input(int *arr, int n)
{
    for (int i = 0; i < n; i++)
        cin >> arr[i];
}

int32_t main()
{
    fast;
    int n;cin >> n;
    int *p=new int[n+1];
    for ( int i = 1; i <= n ;i ++ )
        cin >> p[i];
    int arr[6];
    for ( int i = 1; i <= 5 ;i ++)
        cin >> arr[i];
    int total = 0;
    int cnt[6]={};
    for ( int i = 1; i <= n ; i ++)
    {
        total += p[i];
        for ( int j = 5 ; j >= 1; j -- )
        {
            int particular = total / arr[j];
            cnt[j] += particular;
            total -= particular*arr[j];
        }

    }
    for ( int i = 1; i <= 5 ;i ++ )
        cout << cnt[i] <<" ";
    cout << endl;
    cout << total;
}
