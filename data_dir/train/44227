//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>

const int maxn=(int)(2e5+5);
const ll mod=(ll)(1e9+7);
ll a[maxn],pre[maxn];
ll zz=(ll)(4e18);
int last[maxn];


bool check(ll a,ll b)
{
    return a<=zz/b;
}

ll get(int left,int right,ll prod,ll sum,ll k)
{
   // cout<<prod<<" "<<sum<<" "<<left<<" "<<right<<endl;

    if(prod%k!=0)
    {
        return 0;
    }
    else
    {
        ll now=prod/k;

        ll zz=now-sum;

        if(zz>=0 && zz<=right-left)
        {
          //  cout<<sum<<" "<<prod<<endl;

            return 1;
        }

        return 0;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n;ll k;

    cin>>n>>k;

    int now=0;last[0]=-1;

    for(int i=1;i<=n;i++)
    {
        cin>>a[i];

        pre[i]=pre[i-1]+a[i];

        last[i]=now;

        if(a[i]!=1)
        {
            now=i;
        }
    }

    ll res=0;

    for(int i=1;i<=n;i++)
    {
        ll prod=a[i],sum=a[i];int j=i;

        while(true)
        {
            int left=last[j]+1,right=j;

          //  cout<<i<<" "<<j<<" "<<left<<" "<<right<<endl;

            ll now=get(left,right,prod,sum,k);

            res+=now;

            if(last[j]==0 || !check(prod,a[last[j]]))
            {
                break;
            }

            j=last[j];prod*=a[j];sum=pre[i]-pre[j-1];
        }
    }

    cout<<res<<endl;


    return 0;
}
