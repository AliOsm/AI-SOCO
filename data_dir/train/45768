#include <bits/stdc++.h>

using namespace std;

int a, b, m, l, r, pp[100005];
vector <int> vec;

int bin(int ll, int rr)
{
    int l=0, r=vec.size()-1;
    while (r-l>1)
    {
        int md=(l+r)/2;
        if (vec[md]>=ll && vec[md]<=rr)
            l=md;
        else
            r=md;
    }
    return r;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> a >> b;
    for (int i=1;i<=sqrt(min(a, b));i++)
    {
        if (min(a, b)%i==0)
        {
            if (max(b, a)%i==0)
            {
                vec.push_back(i);
            }
            if (max(b, a)%(min(a, b)/i)==0 && min(a, b)/i!=i)
                vec.push_back(min(a, b)/i);
        }
    }
    sort(vec.begin(), vec.end());
    for (int i=1;i<=vec.size();i++)
    {
        pp[i]=vec[i-1];
    }
    cin >> m;
    for (int i=1;i<=m;i++)
    {
        cin >> l >> r;
        int x=upper_bound(pp+1, pp+1+vec.size(), r)-pp;
        x--;
        if (pp[x]>0 && pp[x]>=l)
            cout << pp[x] << "\n";
        else
            cout << "-1\n";
    }
}
