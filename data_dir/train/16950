#include <bits/stdc++.h>
using namespace std;
#define ll long long
int n, m, cl, ce, v;
vector<int> st, el;
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> m >> cl >> ce >> v;
	st.resize(cl), el.resize(ce);

	for (int i = 0; i < cl; i++)
		cin >> st[i];
	for (int i = 0; i < ce; i++)
		cin >> el[i];

	int q;
	cin >> q;
	vector<int>::iterator it;
	while (q--)
	{
		int x1, y1, x2, y2;
		cin >> x1 >> y1 >> x2 >> y2;
		ll ans = 1e15;
		if (x1 == x2)
			ans = abs(y1 - y2);
		else
		{
			if (st.size())
			{
				it = upper_bound(st.begin(), st.end(), y1);
				if (it != st.end())
				{
					ans = abs(*it - y1) + abs(*it - y2) + abs(x1 - x2);
				}
				it = lower_bound(st.begin(), st.end(), y1);
				if (it != st.begin())
				{
					it--;
					ans = min(ans,
							1ll * abs(*it - y1) + abs(*it - y2) + abs(x1 - x2));
				}
			}
			if (el.size())
			{
				it = upper_bound(el.begin(), el.end(), y1);
				if (it != el.end())
				{
					ll temp = abs(*it - y1) + abs(*it - y2);
					ll d = abs(x1 - x2) / v;
					if (abs(x1 - x2) % v != 0)
						d++;
					temp += d;
					ans = min(ans, temp);
				}
				it = lower_bound(el.begin(), el.end(), y1);
				if (it != el.begin())
				{
					it--;
					ll temp = abs(*it - y1) + abs(*it - y2);
					ll d = abs(x1 - x2) / v;
					if (abs(x1 - x2) % v != 0)
						d++;
					temp += d;
					ans = min(ans, temp);
				}
			}
		}
		cout << ans << '\n';
	}
	return 0;
}
