#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

const ll M = 200 + 10, mod = 1e9 + 7;

struct matrix {
    ll a[M][M];
    matrix() {
        for (int i = 0; i < M; i++)
            for (int j = 0; j < M; j++)
                a[i][j] = 0;
    }
    friend matrix mul(matrix a, matrix b, ll n, ll m, ll k) {
        matrix res;
        for (ll i = 0; i < n; i++)
            for (ll j = 0; j < k; j++) {
                res.a[i][j] = 0;
                for (ll g = 0; g < m; g++)
                    res.a[i][j] = (res.a[i][j] + a.a[i][g] * b.a[g][j]) % mod;
            }
        return res;
    }
    friend matrix power(matrix a, ll n, ll m) {
        matrix res;
        for (ll i = 0; i < n; i++)
            res.a[i][i] = 1;
        while (m) {
            if (m & 1)
                res = mul(res, a, n, n, n);
            m >>= 1;
            a = mul(a, a, n, n, n);
        }
        return res;
    }
};

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    ll n, m;
    cin >> n >> m;
    matrix b;
    for (int i = 0; i < m; i++)
        b.a[i][0] = 1;
    b.a[m - 1][0] = 2;
    if (n > m) {
        matrix a;
        for (int i = 0; i < m - 1; i++)
            a.a[i][i + 1] = 1;
        a.a[m - 1][0] = a.a[m - 1][m - 1] = 1;
        a = power(a, m, n - m);
        matrix ans = mul(a, b, m, m, 1);
        cout << ans.a[m - 1][0] << "\n";
    }
    else 
        cout << b.a[n - 1][0] << "\n";
    return 0;
}