#include <bits/stdc++.h>
using namespace std;

#define ll long long
const int N = 5e5+15;

ll getNumber[N];

bool inf[N];


int getBit(const string &s,const string &t,int ind,int bit,int selNum){
   assert(bit>0);
   if(bit==1){
      if(selNum < s[ind]-'a'){
         return -1;
      } else if(selNum == s[ind]-'a'){
         return 1;
      } else {
         return 0;
      }
   } else if(bit==2){
      if(t[ind]-'a' <selNum ){
         return -1;
      } else if(t[ind]-'a'==selNum ){
         return bit;
      } else {
         return 0;
      }
   } else {
      if(selNum < s[ind]-'a' || t[ind]-'a' <selNum){
         return -1;
      }
      if(s[ind]-'a'< selNum){
         bit^=1;
      }
      if(selNum<t[ind]-'a'){
         bit^=2;
      }
      return bit;
   }
}
int cc = 0;
void dfs(const string &s,const string &t,int ind,int n,int bit){
   if(bit==3){
      ++cc;
   }
   if(bit==0){
      int len = n - ind +1;
      ll cur = 1;
      for(int i=1;i<=len;++i){
         if(cur>=1e9){
            inf[len + 1 - i] = true;
            break;
         }
         getNumber[len + 1 - i] += cur;
         if(i>=2){
            cur*=2;
         }
      }
      return;
   }
   if(ind==n){
      ++getNumber[n];
      return;
   }
   for(int i=0;i<2;++i){
      int nBit = getBit(s,t,ind,bit,i);
      if(nBit ==-1){
         continue;
      } else {
         dfs(s,t,ind+1,n,nBit);
      }
   }
}

void solve(){
   int n,k;
   scanf("%d%d",&n,&k);
   string s,t;
   cin>>s>>t;
   dfs(s,t,0,n,3);
   ll ret = 0;
   int number = 0;
   for(int i=n;i>=1;--i){
      if(inf[i]){
         ret += (ll)k*i;
         break;
      } else {
         ll need = min((ll)k, getNumber[i]);
         k-= need;
         number += need;
         ret += need*i;
      }
   }
   if(number>=2){
      ret -= (cc-1);
   }
   printf("%lld\n",ret);
}
int main(){
   //freopen("input.txt","r",stdin);
   solve();
}