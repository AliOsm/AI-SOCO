//ITNOG
#include<bits/stdc++.h>
 
using namespace std;
 
 
#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
typedef double ld;

const int maxN = 100*1000 + 5;
const int mod = 1000*1000*1000+7;
const int base = 1000003;
const int maxL = 20;
typedef long long ll;
#define X first
#define Y second

struct Ta {
    int s, p, t, ind;
} a[maxN];

bool cmp(Ta p, Ta q) { return (p.p < q.p); }
bool Cmp(Ta p, Ta q) { return (p.t < q.t); }

int n, in;
int ti[maxN], ans[maxN];
int get(int t)
{
    sort(a,a+n, Cmp);
    rep(i,0,n)
    {
	  if(a[i].ind == in) a[i].p = t;
	  ti[i] = a[i].s; ans[i] = 0;
    } 

    set<pair<int,int> > s;
    rep(i,0,n)
    {
	  int dif = 0, cur = 0;
	  if(i) dif = a[i].t - a[i-1].t;
	 
	  while(cur < dif && s.size())
	  {
		auto it = *s.begin(); s.erase(it);
		int ind = it.Y;
		if(ti[ind] <= dif - cur)
		{
//		    cout << i << ' ' << ind << ' ' << ti[ind] << ' ' << cur << ' ' << dif << endl;
		    cur += ti[ind]; ti[ind] = 0;
		    ans[ind] = a[i-1].t + cur;
		}
		else
		{
//		    cout << i << ' ' << ind << ' ' << ti[ind] << endl;
		    ti[ind] -= dif-cur; cur = dif;
		    s.insert(it);
		}
	  }

	  s.insert({-a[i].p, i});
    }

    int cur = a[n-1].t;
    while(s.size())
    {
	  auto it = *s.begin(); s.erase(it);
	  int ind = it.Y;
	  cur += ti[ind]; ans[ind] = cur;
    }


    rep(i,0,n) if(a[i].ind == in) 
    {
//	  cout << ans[i] << endl;
	  return ans[i];
    }
}

int res[maxN];
main()
{
    freopen("input.txt", "r", stdin);
    freopen("output.txt","w",stdout);
    ios::sync_with_stdio(0); cin.tie(0);
    cin >> n;
    rep(i,0,n) 
    {
	  cin >> a[i].t >> a[i].s >> a[i].p, a[i].ind = i;
	  if(a[i].p == -1) in = i;
    }
    int x; cin >> x;
    sort(a,a+n, cmp);

    vector<int> v;
    if(n > 1 && a[1].p > 1) v.push_back(1);
    rep(i,1,n-1) if(a[i].p+1 < a[i+1].p) v.push_back(a[i].p+1);
    v.push_back(a[n-1].p+1);
    sort(v.begin(), v.end());
    
    int lo = 0, hi = v.size();
    while(hi-lo > 1)
    {
	  int mid = (hi+lo) >> 1;
	  if(get(v[mid]) >= x) lo = mid;
	  else hi = mid;
    }
    
    cout << v[lo] << endl;
    get(v[lo]);
    rep(i,0,n) res[a[i].ind] = ans[i];

    rep(i,0,n) cout << res[i] << ' ';
    cout << endl;
    return 0;
}
