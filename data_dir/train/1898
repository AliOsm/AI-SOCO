#include <bits/stdc++.h>

#define SZ(x) (((int)x.size()))

typedef long long ll;
typedef long double ld;

using namespace std;

const int maxn = 20*1000+10;
int dp[maxn], m, n;
bool mark[maxn];
queue<int> q;

void bfs()
{
	int x;
	while (!q.empty())
	{
		x = q.front();
		q.pop();
		if (!(x & 1) && !mark[x >> 1])
		{
			mark[x >> 1] = 1;
			dp[x >> 1] = dp[x] + 1;
			q.push(x >> 1);
		}
		if (x < 2 * m - 1 && !mark[x + 1])
		{
			mark[x + 1] = 1;
			dp[x + 1] = dp[x] + 1;
			q.push(x + 1);
		}
	}
}

int main()
{
	cin >> n >> m;
	if (n >= m)
	{
		cout << n - m;
		return 0;
	}
	mark[m] = 1;
	q.push(m);
	bfs();
	cout << dp[n];
	return 0;
}
