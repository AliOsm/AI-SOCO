#include <bits/stdc++.h>
using namespace std;

#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define B(c)          (c).begin()
#define E(c)          (c).end()
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (int)(1e9)
#define endl          '\n'
#define pow(x, n)     (int)(pow(x, n))
#define mp            make_pair
#define tp            template
#define ty            typename

typedef vector<int>                           vi;
typedef pair<int,int>                         pii;
typedef vector<pii>                           vpi;
typedef priority_queue<pii, vector<pii>, greater<pii> > pq;

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

tp<ty T1, ty T2> istream& operator>>(istream& in, pair<T1, T2> &q){
    in >> q.F >> q.S; return in;
}
tp<ty T1, ty T2> ostream& operator<<(ostream& out, pair<T1, T2> &q){
    out << q.F << " " << q.S; return out;
}
tp< ty T1, ty T2> pair<T1, T2> operator+(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F+p2.F, p1.S+p2.S};
}
tp< ty T1, ty T2> pair<T1, T2> operator-(pair<T1, T2> p1, pair<T1, T2> p2){
    return {p1.F-p2.F, p1.S-p2.S};
}

void solve(){
    int n;
    pii intial, final;
    cin >> intial;
    cin >> final;
    cin >> n;
    map<pii, bool> pre;
    vpi ppp;
    for(int i = 0; i < n; i++){
        int r, a, b;
        cin >> r >> a >> b;
        for(int j = a; j <= b; j++){
            pre[{r, j}] = 1;
            ppp.pb({r, j});
        }
    }
    map<pii, bool> vis;
    vpi king{{1, 1}, {-1, -1}, {1, 0}, {0, 1}, {0, -1}, {-1, 0}, {1, -1}, {-1, 1}};
    map<pii, vpi> g;
    map<pii, int> dis;
    for(auto& u : ppp){
        for(auto& j : king){
            if(pre[u+j])g[u].pb(u+j);
        }
    }
    queue<pii> q;
    q.push(intial);
    dis[intial] = 0;
    vis[intial] = 1;
    while(!q.empty()){
        pii v = q.front();
        q.pop();
        for(auto u : g[v]){
            if(!vis[u]){
                dis[u] = dis[v]+1;
                q.push(u);
                vis[u] = 1;
                if(u == final){
                    cout << dis[u] << endl;
                    return;
                }
            }
        }
    }
    cout << -1 << endl;
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(15);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif
    
   
    
    //cin >> t;

    for(int i = 1;i <= t; i++){
        solve();
    }

    double time_taken = double(clock() - start) / double(CLOCKS_PER_SEC); 
    cerr << time_taken;
    return 0;
}