// practice with Dukkha
#include <algorithm>
#include <iostream>

using namespace std;

const int N = 3500;

int aa[N], bb[N], qu[N];

int main() {
	int t; cin >> t;
	while (t--) {
		int n, m, k; cin >> n >> m >> k;
		k = min(k, m - 1);
		for (int i = 0; i < n; i++)
			cin >> aa[i];
		for (int j = 0; j < m; j++)
			bb[j] = max(aa[j], aa[j + n - m]);
		int l = m - k;
		int head = 0, cnt = 0;
		int ans = 0;
		for (int j = 0; j < m; j++) {
			while (cnt && bb[qu[head + cnt - 1]] >= bb[j])
				cnt--;
			qu[head + cnt++] = j;
			if (j >= l - 1) {
				ans = max(ans, bb[qu[head]]);
				if (qu[head] == j - l + 1)
					head++, cnt--;
			}
		}
		cout << ans << '\n';
	}
	return 0;
}
