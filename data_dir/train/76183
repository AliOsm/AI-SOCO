#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
using namespace std;    
const int N = int(3e5), mod = int(1e9)  + 7; 

set <ll> all, d, r;
int n;
char s[N];

set <ll> :: iterator it;
int main () {
	scanf("%d",&n);
	scanf("\n%s",s +1);
	for(int  i = 1; i <= n; i++){
		if(s[i] == 'R') r.insert(i);
		else d.insert(i);
		all.insert(i);
	}
	while(!r.empty() && !d.empty())
	{
		ll v = *(all.begin());
		ll curv = v;
		v = v % n;
		if(v == 0) v = n;
		all.erase(all.begin());
		if(s[v] == 'R'){
			it = d.upper_bound(v);
			if(it != d.end()){
				all.erase((*it) + curv - v);
				d.erase(it);
			}
			else{
				it = d.begin();
				all.erase((*it) + curv - v + n);
				d.erase(it);
			}	
		}
		else{
			it = r.upper_bound(v);
			if(it != r.end()){
				all.erase((*it) + curv - v);
				r.erase(it);
			}
			else{
				it = r.begin();
				all.erase((*it) + curv - v + n);
				r.erase(it);
			}
		}
		all.insert(curv + n);
	}
	if(!r.empty()) cout << "R";
	else cout << "D";

return 0;
}