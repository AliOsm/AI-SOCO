#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
void sprint(string s) {for (int i = 0; i < (int)s.size(); ++i)	printf("%c",s[i]); printf("\n");}
void help(vector<pair<int,int> >v){
	cout<<"start"<<endl;
	for(auto it:v){
		cout<<it.first<<" "<<it.second<<endl;
	}
	cout<<"end"<<endl;
}
int main(){
	ios_base::sync_with_stdio(0);
	vector<pair<int,int> >s;
	string str;
	cin>>str;
	char c=str[0];
	int cnt=1,id=0;
	vector<int>v;
	for (int i = 1; i < (int)str.size(); ++i)
	{
		if(c!=str[i]){
			v.push_back(c-'a');
			s.push_back({id,cnt});
			c=str[i];
			cnt=1;
			id++;
		}
		else cnt++;
	}
	v.push_back(c-'a');
	s.push_back({id,cnt});
	int ans=0;
	// for (int i = 0; i < (int)v.size(); ++i)
	// {
	// 	cout<<v[i]<<" ";
	// }
	cout<<endl;
	while((int)s.size()>1){
		// help(s);
		int curr_size=(int)s.size();
		int minim=1e6;
		int iter=0;
		for(auto it:s){
			if(iter==0 or iter==curr_size-1){
				minim=min(minim,(it).second);
			}
			else minim=min(minim,((it).second+1)/2);
			iter++;
		}
		// cout<<minim<<endl;
		ans+=minim;
		vector<pair<int,int> >temp;
		iter=0;
		for(auto it:s){
			int tcurr;
			if(iter==0 or iter==curr_size-1){
				tcurr=max(0,it.second-minim);
			}
			else tcurr=max(0,it.second-2*minim);
			if(tcurr>0){
				temp.push_back({it.first,tcurr});
			}
			iter++;
		}
		s.clear();
		int last=-1;
		for(auto it:temp){
			if(last>=0 and v[it.first]==v[s[last].first]){
				s[last].second+=it.second;
			}
			else s.push_back(it),last++;
		}
	}
	cout<<ans<<endl;
	return 0;
}