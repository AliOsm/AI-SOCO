//The best is yet to come...
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 100000010000001000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 100001

ll hotels,rests;
pair<ll,ll>hotel[maxn],rest[maxn];

inline ll f1(pair<ll,ll>p)
{
	ll x=p.F;
	ll y=p.S;
	return x+y;
}
inline ll f2(pair<ll,ll>p)
{
	ll x=p.F;
	ll y=p.S;
	return -x+y;
}
inline ll f3(pair<ll,ll>p)
{
	ll x=p.F;
	ll y=p.S;
	return x-y;
}
inline ll f4(pair<ll,ll>p)
{
	ll x=p.F;
	ll y=p.S;
	return -x-y;
}
int main()
{
	boost1;boost2;	
	ll i,j,n,m,min_f1=inf,min_f2=inf,min_f3=inf,min_f4=inf,cur,ans=inf,ind;
	cin>>n>>m;
	cin>>hotels;
	for(i=1;i<=hotels;i++)
	cin>>hotel[i].F>>hotel[i].S;
	cin>>rests;
	for(i=1;i<=rests;i++)
	cin>>rest[i].F>>rest[i].S;
	for(i=1;i<=hotels;i++)
	{
		min_f1=min(min_f1,f1(hotel[i]));
		min_f2=min(min_f2,f2(hotel[i]));
		min_f3=min(min_f3,f3(hotel[i]));
		min_f4=min(min_f4,f4(hotel[i]));
	}
	for(i=1;i<=rests;i++)
	{
		cur=f1(rest[i])-min_f1;
		cur=max(cur,f2(rest[i])-min_f2);
		cur=max(cur,f3(rest[i])-min_f3);
		cur=max(cur,f4(rest[i])-min_f4);
		if(cur<ans)
		{
			ans=cur;
			ind=i;
		}	
	}
	cout<<ans<<endl;
	cout<<ind;
	return 0;
}
