#include <bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define PB push_back
#define size(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define FR(i, a, b) for(int i = a; i < b; i++)
#define ROF(i, a, b) for(int i = a; i >= b; i--)
#define debug(x) cerr<< #x << ": " << x << endl;
#define fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

const int mod = 998244353;
const int N = 500 + 10;
int arr[N];
ll dp[N][N];
ll pr[N][N];
pii mn[N][N];

int main()
{
	fast;
	int n, m;
	cin>> n >> m;
	FR(i, 0, m)
		cin>> arr[i];	

	FR(i, 0, m)
		FR(j, i, m)
		{
			if(i == j)
				mn[i][j] = {arr[i], i};
			else
				if(arr[j] < mn[i][j - 1].F)
					mn[i][j] = {arr[j], j};
				else
					mn[i][j] = mn[i][j - 1];
		}

	FR(ln, 1, m + 1)
	{
		FR(i, 0, m - ln + 1)
		{
			int j = i + ln - 1; //basta baste

//			cerr<< "\nln i j - " << ln << " " << i << " " << j << ": \n";

			if(ln == 1)
			{
				dp[i][j] = 1;
			}
			else
			{
				int ind = mn[i][j].S;
//				debug(ind);
				ll lf = 1, rt = 1;
				if(ind - 1 >= i)
					lf = pr[i][ind - 1];
				if(ind + 1 <= j)
					rt = pr[ind + 1][j];
				dp[i][j] = (lf * rt) % mod;
			}

//			debug(dp[i][j]);
		}
//		cerr<< endl;

		FR(i, 0, m - ln + 1)
		{
			int j = i + ln - 1; //basta baste

//			cerr<< "\nln i j - " << ln << " " << i << " " << j << ": \n";

			pr[i][j] = (dp[i][j] + dp[i][j]) % mod;
			FR(k, i, j)
			{
				pr[i][j] += (dp[i][k] * dp[k + 1][j]) % mod;
				pr[i][j] %= mod;
			}

//			debug(pr[i][j]);
		}
//		cerr<< endl;
	}

	cout<< dp[0][m - 1] << endl;
	return 0;
}

