#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ll, pll> p3l;
typedef pair<char, ll> pcl;
typedef vector<char> vc;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<p3l> vp3l;
typedef vector<vll> vvll;
typedef vector<vector<pll>> vvpll;
typedef vector<ld> vld;

#define fan(i, a, n) for(auto i=a; i<n; ++i)
#define boost ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0)
#define fna(i, n, a) for(int i=n-1; i>=a; --i)
#define fit(it, x) for(auto &it:x)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define pb push_back
#define rs resize
#define endl "\n"
#define fst first
#define snd second
#define sz size
#define ins insert
#define mp make_pair
#define ce cout << "\n"

ld sqr(ld a) {
  return a * a;
}
//#define dbg(x)
//
//vector<vector<int>> dfsv;
//vector<char> used;
//void dfs(int n){
//    used[n]=true;
//    fit(it,dfsv[n]){
//        if(!used[*it])dfs(*it);
//    }
//}
//ll phi(ll x){
//    ll result = x;
//    for(ll i=2;i*i<=x;i++){
//        if(x%i==0){
//            while(x%i==0){
//                x/=i;
//            }
//            result -= result/i;
//        }
//    }
//    if (x > 1)
//        result -= result / x;
//    return result;
//}
//int gcd (int a, int b) {
//    if (b == 0)
//        return a;
//    else
//        return gcd (b, a % b);
//}
//ll m;
//ll mulmod(ll a,ll b){
//    a%=m;
//    if(b==0)return 1;
//    if(b%2==0){
//        return mulmod((a*a)%m,b/2)%m;
//    }else{
//        return (mulmod((a*a)%m,b/2)%m+a)%m;
//    }
ll get_cnt(ll x) {
  ll sch = 0;
  while (x > 0) {
    sch++;
    x /= 10;
  }
  return sch;
}

int main() {
  boost;
  ll n, k;
  cin >> n >> k;
  map<pll, ll> ost;
  vll a(n);
  vpll stp(n);
  fan(i, 0, n) {
    cin >> a[i];
    stp[i] = {a[i] % k, get_cnt(a[i])};
    ost[stp[i]]++;
  }
  ll sch = 0, g;
  fan(i, 0, n) {
    fan(j, 1, 11) {
      g = a[i] * (ll) pow(10, j);
      g %= k;
      g = (k - g)%k;
      if(ost.find({g,j})!=ost.end()) {
        sch += ost[{g, j}];
        if (stp[i].fst == g && stp[i].snd == j)sch--;
      }
    }
  }
  cout << sch;
  ce;

  return 0;
}