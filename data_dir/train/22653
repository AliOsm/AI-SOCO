#include <bits/stdc++.h>
using namespace std;

const int maxn = 3e5+10, magic = 19;
int n, arr[maxn], res[maxn];
int RMQ[maxn][magic], GCD[maxn][magic], table[maxn];

int getMin(int l, int r) {
    int val = table[r-l+1];
    return min(RMQ[l][val], RMQ[r-(1<<val)+1][val]);
}

int getGCD(int l, int r) {
    int val = table[r-l+1];
    return __gcd(GCD[l][val], GCD[r-(1<<val)+1][val]);
}

int main()
{
    scanf("%d", &n);
    for(int i = 1; i <= n; i++)
        scanf("%d", &arr[i]);

    for(int i = 1; i <= n; i++)
        RMQ[i][0] = GCD[i][0] = arr[i];
    for(int j = 1; j < magic; j++)
        for(int i = 1; i+(1<<j)-1 <= n; i++) {
            RMQ[i][j] =   min(RMQ[i][j-1], RMQ[i+(1<<(j-1))][j-1]);
            GCD[i][j] = __gcd(GCD[i][j-1], GCD[i+(1<<(j-1))][j-1]);
        }
    int cur = 0;
    for(int i = 1; i <= n; i++) {
        while((1<<cur) <= i) cur++;
        table[i] = cur-1;
    }

    int lo = 0, hi = n, ans, sz;
    while(lo <= hi) {
        int mid = (lo + hi)>>1, idx = 0;
        for(int i = 1; i+mid <= n; i++) {
            if(getGCD(i,i+mid) == getMin(i,i+mid))
                res[idx++] = i;
        }
        if(idx) ans = mid, sz = idx, lo = mid+1;
        else hi = mid-1;
    }
    printf("%d %d\n", sz, ans);
    for(int i = 0; i < sz; i++)
        printf("%d ", res[i]);
    return 0;
}
