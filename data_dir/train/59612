#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <cstdlib>
#include <utility>
#include <memory.h>
#include <cassert>
#include <iterator>
#include <bitset>
#include <iomanip>
#include <complex>
#include <queue>
#include <ctime>
#include <deque>
#include <stack>
#include <set>
#include <map>
 
using namespace std;
 
#define pb push_back
#define mp make_pair
#define F first
#define S second

using namespace std;

const int N = 300500;

int n, m;
int p[N], f[N], idx[N];

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++) {
		f[i] = n + 1;
		scanf("%d", &p[i]);
		idx[p[i]] = i;
	}
	multiset<int> s;
	for (int i = 1; i <= m; i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		x = idx[x];
		y = idx[y];
		if (x > y) {
			swap(x, y);
		}
		f[x] = min(f[x], y);
	}
	long long ans = 0LL;
	for (int i = 1; i <= n; i++) {
		s.insert(f[i]);
	}
	multiset<int> :: iterator it;
	for (int i = 1; i <= n; i++) {
		it = s.lower_bound(i);
		if (it != s.end()) {
			ans += (1LL * (*it - i));
		}
		it = s.find(f[i]);
		if (it != s.end()) {
			s.erase(it);
		}
	}
	cout << ans << endl;
	return 0;
}