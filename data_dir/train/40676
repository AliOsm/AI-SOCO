#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-12
typedef pair<int, int> II;
typedef pair<ll, ll> LL;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI (2 * acos(0))
#define linf (1ll << 60)

#define maxn 400005

struct Point{
	ll x, y;
	Point(){};
	Point(ll _x, ll _y){
		x = _x;
		y = _y;
	}
};

int ccw(Point p0, Point p1, Point p2) {
	ll dx1 = p1.x - p0.x, dy1 = p1.y - p0.y;
	ll dx2 = p2.x - p0.x, dy2 = p2.y - p0.y;
	ll d = dx1 * dy2 - dx2 * dy1;
	if(d == 0) return 0;
	return d > 0 ? 1 : -1;
}

Point O;

ll sqr(ll x){
	return x * x;
}

ll sqrdist(Point A, Point B){
	return sqr(A.x - B.x) + sqr(A.y - B.y);
}

bool cmp_angle(Point P1, Point P2) {
    int ret = ccw(O, P1, P2);
    if (ret != 0) return ret > 0;
    return sqrdist(O, P1) < sqrdist(O, P2);
}

int convex_hull(Point a[], int n) {
    if (n <= 3) return n;

    int imin = 0;
    Rep(i, n) if (a[i].y < a[imin].y || (a[i].y == a[imin].y && a[i].x < a[imin].x)) imin = i;

    swap(a[imin], a[0]);
    O = a[0];
    sort(a + 1, a + n, cmp_angle);

    int m = 2;
    For(i, 2, n - 1) {
        while (m > 1 && ccw(a[i], a[m - 1], a[m - 2]) >= 0) --m;
        swap(a[m], a[i]);
        ++m;
    }

    return m;
}

int n;
Point A[maxn];
pair<ll, int> P[maxn];

int main(){

//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;
    Rep(i, n) {
    	cin >> A[i].x >> A[i].y;
    }

    For(i, 1, n - 1){
    	P[i] = mp(sqrdist(A[i], A[0]), i);
    }
    sort(P + 1, P + n);
//    For(i, 1, n - 1) cout << P[i].se << endl;

    cout << 1 << " " << P[1].se + 1 << " ";


    for(int i = 2; i < n; i++) {
//    	cout << ccw(A[0], A[5], A[P[i].se]) << endl;
    	if(ccw(A[0], A[P[1].se], A[P[i].se]) != 0){

    		cout << P[i].se + 1 << endl;
    		return 0;
    	}
    }

    return 0;
}
