#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <map>
#include <set>
#include <bitset>

using namespace std;

int a[2030];

const string b[10]={
//   1234567
    "1110111",
    "0010010",
    "1011101",
    "1011011",
    "0111010",

    "1101011",
    "1101111",
    "1010010",
    "1111111",
    "1111011"
};

int A(string s)
{
    int u=0;
    for (int i=0;i<7;i++)
        if (s[i]=='1')
            u+=(1<<i);
    return u;
}

const int c[10]={
    A(b[0]),
    A(b[1]),
    A(b[2]),
    A(b[3]),
    A(b[4]),

    A(b[5]),
    A(b[6]),
    A(b[7]),
    A(b[8]),
    A(b[9])
};

vector<pair<int,int> > v[2030];

char dp[2020][2020];

int main()
{
    ios_base::sync_with_stdio(false);
    int n,k;
    cin >> n >> k;
    for (int i=0;i<n;i++)
    {
        string s;
        cin >> s;
        a[i]=A(s);
        for (int j=0;j<10;j++)
        {
            int m=c[j];
            if ((m&a[i])==a[i]){
                int x=m^a[i];
                v[i].push_back({j,__builtin_popcount(x)});
            }
        }
    }

    dp[n][0]=1;

    for (int i=n-1;i>=0;i--)
    {
        for (int j=0;j<=k;j++)
        {
            for (auto &p:v[i]){
                int x=p.second;
                if (j<x)
                    continue;
                dp[i][j]|=dp[i+1][j-x];
                if (dp[i][j])
                    break;
            }
        }
    }

    for (int i=0;i<n;i++)
    {
        sort(v[i].rbegin(),v[i].rend());
        int fl=0;
        for (auto &p:v[i]){
            int x=p.second,c=p.first;
            if (dp[i][k]&&dp[i+1][k-x])
            {
                fl=1;
                cout << c;
                k-=x;
                break;
            }
        }
        if (!fl)
        {
            cout << -1;
            return 0;
        }
    }


    return 0;
}
