#include <bits/stdc++.h>
using namespace std;

#define loop(i,n) for(int i = 0;i < int(n);i++)
#define rloop(i,n) for(int i = int(n);i >= 0;i--)
#define range(i,a,b) for(int i = int(a);i <= int(b);i++)
#define SZ(c) int(c.size())
#define ALL(c) c.begin(), c.end()
#define RALL(c) c.rbegin(), c.rend()
#define PI acos(-1)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define sfi1(v) scanf("%d",&v)
#define sfi2(v1,v2) scanf("%d %d",&v1,&v2)
#define sfi3(v1,v2,v3) scanf("%d %d %d",&v1,&v2,&v3)
#define sfll1(v) scanf("%I64d",&v);
#define sfll2(v1,v2) scanf("%I64d %I64d",&v1,&v2)
#define sfll3(v1,v2,v3) scanf("%I64d %I64d %I64d",&v1,&v2,&v3)

typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef long long ll;
typedef pair<int, int> pii;

const int N = 5005;
const int MOD = 1e9 + 7;
int dp[N][N][2];
char str[N];
int n;

int solve(int idx = 0 , int l = 0 , int flag = 0){
    if(l < 0)return 0;
    if(idx == n)
        return 1;

    int &ret = dp[idx][l][flag];
    if(~ret)return ret;
    ret = 0;
    if(flag){
        ret = solve(idx , l-1 , flag);
    }

    if(str[idx] == 's'){
        ret += solve(idx+1 , l , 1);
        if(ret >= MOD)
            ret -= MOD;
    }else{
        ret += solve(idx+1 , l+1 , 0);
        if(ret >= MOD)
            ret -= MOD;
    }

    return ret;
}

int main()
{

    memset(dp,-1,sizeof dp);
    scanf("%d",&n);
    loop(i,n)scanf(" %c",&str[i]);
    printf("%d\n",solve());


    return 0;
}
