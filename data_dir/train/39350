using namespace std;
#include<bits/stdc++.h>
#define ll long long
#define pr pair<ll,ll>
#define pii pair<int,int>
#define fir first
#define sec second
#define mp make_pair
#define pb push_back
#define sz(c) ((int)c.size())
#define all(c) (c).begin(),(c).end()
#define inf(type) numeric_limits <type> :: max()
#define fn "218C"  /// ___FILE_NAME_HERE___
#define rep(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define __rep(c,it) for(__typeof((c).rbegin()) it=(c).rbegin();it!=(c).rend();it++)

template <class T,class U>
void maximize(T &x,U y)
{
    if(x < y)x=y;
}
template <class T,class U>
void minimize(T &x,U y)
{
    if(x > y)x=y;
}
template <class T>
T Abs(T x)
{
    return (x < 0 ? -x : x);
}
template <class T>
T safe_sqrt(T x)
{
    return sqrt(max(x,(T)0));
}
template <class T,class U,class V>
T addmod(T x,U k,V __base)
{
    return ((x+k)%__base + __base)%__base;
}
template <class T,class U,class V>
T submod(T x,U k,V __base)
{
    return ((x-k)%__base + __base)%__base;
}
template <class T,class U,class V>
T mul(T x,U y,V __base)
{
    return (ll)x*y%__base;
}
/*------------------------------------------END_OF_TEMPLATE------------------------------------------*/

const int N=1e2+2;
pii coor[N];
int lab[N];
int n;

bool cmp(int x){return x < 0;}

int findp(int x)
{
    return (lab[x] < 0 ? x : findp(lab[x]));
}

void join(int u,int v)
{
    u=findp(u),v=findp(v);
    if(u==v)return;
    if(lab[u] > lab[v])swap(u,v);
    lab[u]+=lab[v],lab[v]=u;
}

bool canJoin(pii u,pii v)
{
    return (u.fir == v.fir or u.sec == v.sec);
}

int main(void)
{
    #ifndef ONLINE_JUDGE
    freopen(fn".inp","r",stdin);
    freopen(fn".out","w",stdout);
    #endif // ONLINE_JUDGE
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%d%d",&coor[i].fir,&coor[i].sec);
    for(int i=1;i<=n;i++)lab[i]=-1;
    for(int i=1;i<=n;i++)
        for(int j=i+1;j<=n;j++)
           if(canJoin(coor[i],coor[j]))
              join(i,j);
    int ans=count_if(lab+1,lab+1+n,cmp);
    printf("%d",ans-1);
}
