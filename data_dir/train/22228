#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> order_set;

char S[100100];
char Ans[100100];
set < int > s;
int vals[100100];
int main(){
    int t;
    scanf("%d", &t);
    while (t--){
        int n, k;
        scanf("%d%d", &n, &k);
        bool ans = 1;
        int x;
        s.clear();
        for (int i = 0; i < n; ++i){
            scanf("%d", &x);
            s.insert(x);
        }
        if (s.size() > k) puts("-1");
        else {
            int x = 0;
            for (auto it : s)
                vals[++x] = it;
            for (int i = 1; i <= n; ++i)
                if (x < k && s.find(i) == s.end())
                    vals[++x] = i;
            printf("10000\n");
            int cur = 0;
            int num = 1;
            while (cur < 10000){
                ++cur;
                printf(" %d", vals[num]);
                ++num;
                if (num == x + 1) num = 1;
            }
            puts("");
        }
    }

	return 0;
}
