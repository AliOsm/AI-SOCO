#include <bits/stdc++.h>

using namespace std;

const int N = 1e5+5;

int n,m,c;
vector <int> adj[N],G[2];
bool mark[N];
bool color[N];

void dfs(int s,int c = 0) {
  mark[s] = true;
  color[s] = c;
  for (auto i : adj[s]) {
    if (!mark[i]) {
      dfs(i,!c);
    }
  }
}
int main() {
  cin >> n >> m;
  for (int i = 0; i < m; i++) {
    int u,v;
    cin >> u >> v;
    adj[u].push_back(v);
    adj[v].push_back(u);
  }
  for (int i = 1; i <= n; i++) {
    if (!mark[i]) {
      dfs(i);
    }
  }
  for (int i = 1; i <= n; i++) {
    for (auto j : adj[i]) {
      if (color[j] == color[i]) {
        return cout << -1,0;
      }
    }
  }
  for (int i = 1; i <= n; i++) {
    G[color[i]].push_back(i);
  }
  cout << G[0].size() << '\n';
  for (auto i : G[0]) {
    cout << i << " ";
  }
  cout << '\n' << G[1].size() << '\n';
  for (auto i : G[1]) {
    cout << i << " ";
  }
}
