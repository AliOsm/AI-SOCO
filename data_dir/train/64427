#include <bits/stdc++.h>
using namespace std;
#define forn(i, n) for(int i = 0; i < (int) (n); i++)
const int MAXN = 400050;

int n, A[MAXN], B[MAXN], factA[MAXN], factB[MAXN], factC[MAXN], ANS[MAXN];

struct Fenwick {
  static const int sz = 200005;
  int t[sz];
  void clear(){
    memset(t, 0, sizeof t);
  }
  void add(int p, int v){
    for(int i = p; i < sz; i += (i & -i)){
      t[i] += v;
    }
  }
  int sum(int p){
    int s = 0;
    for(int i = p; i; i -= (i & -i)){
      s += t[i];
    }
    return s;
  }
  int sum(int a, int b){
    return sum(b) - sum(a - 1);
  }
  int getind(int x){
    int idx = 0, mask = n;
    while(mask && idx < n){
      int z = idx + mask;
      if(x >= t[z]){
        idx = z;
        x -= t[z];
      }
      mask >>= 1;
    }
    return idx;
  }
};

Fenwick F;

void getFact(int *C, int *fact){
  F.clear();
  forn(i, n) F.add(i + 1, 1); // 1-indexed
  forn(i, n){
    fact[n - i - 1] = F.sum(1, C[i]);
    F.add(C[i] + 1, -1);
  }
  
  //~ forn(i, n){
    //~ printf("de %d! tiene %d\n", i, fact[i]);
  //~ }
  //~ puts("");
}

int main(){
  scanf("%d", &n);
  forn(i, n){
    scanf("%d", &A[i]);
  }
  forn(i, n){
    scanf("%d", &B[i]);
  }
  
  getFact(A, factA);
  getFact(B, factB);
  
  for(int i = 1; i < n; i++){
    factC[i] += factA[i] + factB[i];
    if(factC[i] >= i + 1){
      factC[i] -= i + 1;
      factC[i + 1]++;
    }
  }
  
  //~ forn(i, n){
    //~ printf("de %d! tiene %d\n", i, factC[i]);
  //~ }
  //~ puts("");
  
  F.clear();
  forn(i, n){
    F.add(i + 1, 1);
  }
  forn(i, n){
    
    //~ printf("FENWICK: ");
    //~ forn(j, n){
      //~ printf("%d ", F.sum(j + 1, j + 1));
    //~ }
    //~ puts("");
    
    int x = factC[n - i - 1] + 1;
    
    //~ printf("Busco el ultimo con cum <= %d\n", x);
    
    int a = 0;
    int b = n + 1;
    while(b - a > 1){
      //~ printf("%d %d\n", a, b);
      int c = (a + b) / 2;
      if( F.sum(c) < x){
        a = c;
      }
      else if( F.sum(c) == x && F.sum(c, c) ){
        a = c;
      }
      else {
        b = c;
      }
    }
    
    ANS[i] = a - 1;
    F.add(a, -1);
  }
  
  forn(i, n){
    if(i) printf(" ");
    printf("%d", ANS[i]);
  }
  puts("");
  
  return 0;
}
