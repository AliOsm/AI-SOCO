/********************************************
*                                           *
*    Solved By : Bir Bahadur Khatri(B'ru)   *
*      Be Positive,be Happy.                *
*                                           *
*********************************************/

#define xx first
#define D double
#define sz size()
#define yy second
#define PB push_back
#define SQR(n) (n*n)
#define CHR getchar()
#define NL printf("\n")
#include<bits/stdc++.h>
#define ULL unsigned LL
#define PI 2.0*acos(0.0)
#define LL long long int
#define S1(a) a=in<int>()
#define SL1(a) a=in<LL>()
#define Max(a,b) ((a>b)?a:b)
#define Min(a,b) ((a<b)?a:b)
#define all(a) a.begin(),a.end()
#define _Max(a,b,c) Max(a,Max(b,c))
#define _Min(a,b,c) Min(a,Min(b,c))
#define SL2(a,b) a=in<LL>(),b=in<LL>()
#define F(i,a,b) for(int i=a;i<b; i++)
#define S2(a,b) a=in<int>(),b=in<int>()
#define R(i,a,b) for(int i=a-1;i>=b; i--)
#define BitCnt(a) __builtin_popcountll(a)
#define MEM(a,val) memset(a,val,sizeof(a))
#define SL3(a,b,c) a=in<LL>(),b=in<LL>(),c=in<LL>()
#define S3(a,b,c) a=in<int>(),b=in<int>(),c=in<int>()
#define cp printf("***** here here here here *****\n");
#define InpOut freopen("A.in","r",stdin),freopen("A1.out","w",stdout)
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;

using namespace std;
template <typename T> T in(){char ch;T n = 0;bool ng = false;while (1){ch = getchar();if (ch == '-'){ng = true;ch = getchar();break;}if (ch>='0' && ch<='9')     break;}while (1){n = n*10 + (ch - '0');ch = getchar();if (ch<'0' || ch>'9')   break;}return (ng?-n:n);}
template<typename T>inline T POW(T B,T P){ if(P==0) return 1; if(P&1) return B*POW(B,P-1);  else return SQR(POW(B,P/2));}
template<typename T>inline T Gcd(T a,T b){if(a<0)return Gcd(-a,b);if(b<0)return Gcd(a,-b);return (b==0)?a:Gcd(b,a%b);}
template<typename T>inline T Lcm(T a,T b) {if(a<0)return Lcm(-a,b);if(b<0)return Lcm(a,-b);return a*(b/Gcd(a,b));}
long long Bigmod(long long base, long long power, long long MOD){long long ret=1;while(power){if(power & 1)ret=(ret*base)%MOD;base=(base*base)%MOD;power>>=1;}return ret;}
bool isVowel(char ch){ ch=toupper(ch); if(ch=='A'||ch=='U'||ch=='I'||ch=='O'||ch=='E') return true; return false;}
long long ModInverse(long long number, long long MOD){return Bigmod(number, MOD-2, MOD);}
bool isConst(char ch){if (isalpha(ch) && !isVowel(ch)) return true; return false;}
int toInt(string s)  { int sm; stringstream ss(s); ss>>sm; return sm; }

///**********************************************************//

#define MD1 1000000007ULL
#define MD2 1000000009ULL
#define MD3 1000000021ULL
#define BS1 10000019ULL
#define BS2 10000079ULL
#define BS3 10000103ULL
#define PUL pair<ULL,ULL>

///         0123456789
#define MX  2007
#define MOD 1000000007
#define INF (1<<28)
#define EPS 1e-9
/// ==========================================////

ULL  B1[MX];

void Init() {
    B1[0]=1;
    for(int i=1;i<MX;i++) {
        B1[i]=B1[i-1]*BS1;
    }
}


ULL H[MX];

struct Hash {
    int L;
    Hash() {
        L=0,H[0]=0;
    }
    void Insert(char x) {
        int digit=x-'a'+1; L++;
        H[L]=H[L-1]*BS1+digit;
    }

    ULL SubStr(int l,int r) {
        int len=r-l+1;
        ULL ans;
        ans=H[r]-H[l-1]*B1[len];
        return ans;
    }
};

int n,m,k;

map< ULL ,bool> mp;

bool Ok[MX];

char a[MX],b[MX],c[MX];

int L;
ULL A[MX*MX+10];

int main()
{

    Init();

    gets(a);
    gets(b);
    gets(c);

    n=strlen(a),m=strlen(b),k=strlen(c);

    Hash h=Hash();

    for(int i=1;i<=m;i++) {
        h.Insert(b[i-1]);
    }

    ULL x=H[m];

    h=Hash();

    for(int i=1;i<=k;i++) {
        h.Insert(c[i-1]);
    }

    ULL y=H[k];

    h=Hash();

    int ans=0;


    for(int i=1;i<=n;i++) {
        h.Insert(a[i-1]);
        if(i>=m) {
            if(h.SubStr(i-m+1,i)==x) Ok[i-m+1]=true;
        }
        if(i>=k) {
            if(h.SubStr(i-k+1,i)==y) {
                for(int j=1;j<=i;j++) {
                    if(!Ok[j]) continue;
                    if(i-j+1<max(m,k)) break;
                    ULL X=h.SubStr(j,i);
                    A[L++]=X;
                }
            }
        }
    }

    sort(A,A+L);
    if(L) ans=1;
    for(int i=1;i<L;i++) {
        if( A[i]!=A[i-1] ) ans++;
    }
    printf("%d\n",ans);

    return 0;
}
