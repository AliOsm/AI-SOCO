#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef double db;
typedef pair<int,int> pii;
typedef vector<int> vi;
#define dd(x) cout << #x << " = " << x << ", "
#define de(x) cout << #x << " = " << x << endl
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,a,b) for(int i=(b)-1;i>=(a);--i)
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define mp make_pair
#define pb push_back
#define fi first
#define se second
//INF = 1 061 109 567 ; INF + INF = 2 122 219 134 ;
//LINF = 4 557 430 888 798 830 399 ; LINF + LINF = 9 114 861 777 597 660 798 ;
const int INF = 0x3f3f3f3f;
const ll LINF = 0x3f3f3f3f3f3f3f3f;
const int MOD = (int)1e9+7;
const int N = (int)1e5+7;

//常用函数
char read_char() {char c;for(;;){c=getchar();if(c>='A'&&c<='Z')return c;}}
ll powmod(ll a,ll b) {ll res=1;a%=MOD;for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}
ll add(ll a, ll b) { a = ((a + b) % MOD + MOD) % MOD; return a; }
ll mul(ll a, ll b) { return a * b % MOD; }

//--------变量--------//

int n;
ll xx[4], yy[4], x[4], y[4], a[4], b[4];
int dcos[] = {1, 0, -1, 0};
int dsin[] = {0, 1, 0, -1};
int ok, ans, ret;
//vi tmp;

//--------函数--------//

ll dist(int i, int j) {
    return (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]);
}

bool check() {
    ll mi = LINF;
    rep(i, 0, 3) rep(j, i+1, 4) {
        ll dis = dist(i, j);
        mi = min(mi, dis);
    }
    if (mi == 0) return false;
    rep(i, 0, 4) {
        int ling = 0, dui = 0;
        rep(j, 0, 4) {
            if (i == j) continue;
            ll dis = dist(i, j);
            if (dis == mi) ling++;
            else if (dis == 2 * mi) dui++;
        }
        if (ling != 2 || dui != 1) return false;
    }
    return true;
}

void chg(int p, int stp) {
    x[p] = (xx[p] - a[p]) * dcos[stp] - (yy[p] - b[p]) * dsin[stp] + a[p];
    y[p] = (xx[p] - a[p]) * dsin[stp] + (yy[p] - b[p]) * dcos[stp] + b[p];
}

void dfs(int p) {
    if (p == 4) {
        if (check()) {
            ok = 1;
            //int ret = 0;
            //rep(i, 0, 4) ret += tmp[i];
            ans = min(ans, ret);
        }
        return ;
    }
    rep(i, 0, 4) {
        chg(p, i);
        //tmp.pb(i);
        ret += i;
        dfs(p+1);
        ret -= i;
        //tmp.pop_back();
    }
}

void Init() {
}

int Solve() {
    while (n--) {
        rep(i, 0, 4)
            scanf("%lld%lld%lld%lld", &xx[i], &yy[i], &a[i], &b[i]);
        ok = ret = 0; ans = INF; //tmp.clear(); 
        dfs(0);
        if (ok) printf("%d\n", ans);
        else puts("-1");
    }
}

//--------main--------//

int main ()
{
    while (~scanf("%d", &n)) {
        Init();
        Solve();
    }
    return 0;
}