#include <bits/stdc++.h>

using namespace std;

#define fr first
#define sc second
#define pb push_back
#define ins insert
#define input freopen("input.txt","r",stdin)
#define output freopen("output.txt","w",stdout)
#define mp make_pair
#define fast_io ios_base::sync_with_stdio(0);
#define y1 yy1
//iterator , unsigned, begin, end, count, continue
// fixed setprecision

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

string itosm(ll x){
    if(x == 0)
        return "0";
    string ans = "";
    while(x > 0){
        ans +=((x%10) + '0');
        x/=10;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}

ll stoim(string str){
    ll ans = 0;
    ll k = 1;
    int p = 0;
    if(str[0] == '-')
        p++;
    for(int i = str.length()-1; i >= p; i--){
        ans+=(str[i]-'0')*k;
        k*=10;
    }
    return ans;
}

const ll infll = 1e18 + 3;
const int inf = 1009000999;
const ld eps = 1e-7;
const int maxn = 3e5 + 1146;
const int baseint = 1000200013;
const ll basell = 1e18 + 3;
const ld PI = acos(-1.0);
const ll mod = 1e9 + 7;

pair<ld, ld> a[maxn];

void inline solve(){
    int n, t;
    n = 200000;
    t = 1000000;
    cin >> n >> t;
    for(int i = 0; i < n; i++){
        cin >> a[i].sc;
//        a[i].sc = rand() * rand() % t + 100;
    }
    for(int i = 0; i < n; i++){
        cin >> a[i].fr;
//        a[i].fr = rand() * rand() % t + 100;
    }
    ld v = 0, tt = 0;
    sort(a, a + n);
    for(int i = 0; i < n; i++){
        v += a[i].sc;
        tt += a[i].fr * a[i].sc;
    }
    if(v * t < tt){
        for(int i = n - 1; i >= 0; i--){
            if(v * t - a[i].sc * t < tt - a[i].sc * a[i].fr){
                v -= a[i].sc;
                tt -= a[i].sc * a[i].fr;
            }
            else{
                if(i == 0){
                    v = 0;
                    break;
                }
                ld l = 0, r = a[i].sc, mid;
                for(int q = 0; q < 100; q++){
                    mid = (l + r)/2;
                    if(v * t - t * mid <= tt - mid * a[i].fr)
                        l = mid;
                    else
                        r = mid;
                }
                v -= l;
                break;
            }
        }
    }
    else if(v * t > tt){
        for(int i = 0; i < n; i++){
            if(v * t - t * a[i].sc > tt - a[i].sc * a[i].fr){
                v -= a[i].sc;
                tt -= a[i].sc * a[i].fr;
            }
            else{
                if(i + 1 == n){
                    v = 0;
                    break;
                }
                ld l = 0, r = a[i].sc, mid;
                for(int q = 0; q < 100; q++){
                    mid = (l + r)/2;
                    if(v * t - t * mid >= tt - mid * a[i].fr)
                        l = mid;
                    else
                        r = mid;
                }
                v -= l;
                break;
            }
        }
    }
    cout << fixed << setprecision(20) << v;
}

int main(){
//    srand(time(0));
//    srand(228);
//    srand(2);
    fast_io;
    cin.tie(0);
    cout.tie(0);
//    input;
//    output;
//    for(int i = 0; i < 100000; i++)
//        brut();
//    output;
//    freopen("money.in", "r", stdin);
//    freopen("money.out", "w", stdout);
//     int t;
//     cin >> t;
//     fout << t << endl;
//    scanf("%d", &t);
//     int cnt = 1;
//     while(t--){
//        fout << "Case #" << cnt << ": ";
//        printf("Case %d: ", cnt);
//      while(1)
        solve();
//        brut();
//         cout << "\n";
//        puts("");
//        cnt++;
//     }
    return 0;
}
