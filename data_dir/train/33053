#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>

using namespace std;
 
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

vector<vector<pnt > > g;
LL dp1[310][310];
LL r1(int l, int r)
{
	if (l>r)
		return 0;
	if (dp1[l][r]!=-1)
		return dp1[l][r];
	LL res=1000000000000000000ll;
	FOR(i,0,g[l].size())
	{
		int ri=g[l][i].first;
		int c=g[l][i].second;
		res=min(res,c+r1(ri+1,r));
	}
	return dp1[l][r]=res;
}

LL dp2[310][310];
int n,m,k;
LL r2(int p, int k)
{
	if ((p==n) && (k>0))
		return 1000000000000000000ll;
	if (k<=0)
		return 0;
	if (dp2[p][k]!=-1)
		return dp2[p][k];
	LL res=1000000000000000000ll;
	res=min(res,r2(p+1,k));
	FOR(i,p,n)
	{
		LL val=r1(p,i);
		if (val==1000000000000000000ll)
			continue;
		res=min(res,val+r2(i+1,k-(i-p+1)));
	}
	return dp2[p][k]=res;
}
int main()
{
	#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	double beg=clock();
#endif

	scanf("%d%d%d",&n,&m,&k);
	g.resize(n);
	FOR(i,0,m)
	{
		int l,r,c;
		scanf("%d%d%d",&l,&r,&c);
		l--;
		r--;
		g[l].push_back(mp(r,c));
	}
	MEMS(dp1,-1);
	MEMS(dp2,-1);
	LL res=r2(0,k);
	if (res==1000000000000000000ll)
		cout<<-1<<endl;
	else
		cout<<res<<endl;
#ifdef Fcdkbear
	double end=clock();
	fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}