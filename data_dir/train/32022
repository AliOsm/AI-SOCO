#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<queue>
typedef long long int uli;
using namespace std;

const int mx = 25;
const int mxf = 1e6+10;
uli f[mx],facto[mxf];
const uli mod = 1e9+7;

uli fexp(uli base, uli expo){
    uli ans = 1;
    while(expo!=0){
        if(expo%2==1)
            ans = (ans*base) %mod;
        base = (base*base)%mod;
        expo>>=1;
    }
    return ans;
}
uli cmb(uli a, uli b){
    uli a0 = a%mod;
    uli b0 = b%mod;
    
    uli ans = 1;
    for(int i=0;i<b0;i++) ans = ( ans*(a0-i) )%mod;
    ans = (ans*fexp(facto[b0],mod-2))%mod;
    
    return ans;
}
int main(){
    facto[0] = 1;
    for(uli i=1;i<mxf;i++)
        facto[i] = (facto[i-1]*i)%mod;
//    freopen("data.in","r",stdin);
    int n;
    uli s;
    cin>>n>>s;
    for(int i=0;i<n;i++)
        cin>>f[i];

    uli ans= 0;
    for(int i=1;i<(1<<n);i++){
        uli sf = 0;
        int nones = 0;
        for(int j=0;j<n;j++){
            if((i&(1<<j))!=0){
                nones++;
                sf += f[j]+1;
            }
        }
        if(sf>s) continue;
        //      uli delta = cmb(s-sf+n-1,s-sf);
        uli delta = cmb(s-sf +n-1,n-1);
        if(nones%2==0){
            ans = ( ans - delta )%mod;
        }
        else{
            ans = (ans + delta + mod)%mod;
        }
    }
    ans = (cmb(s+n-1,n-1) - ans + mod)%mod;
    cout<<ans<<endl;
    return 0;
}
