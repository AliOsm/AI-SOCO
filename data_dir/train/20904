#include<bits/stdc++.h>
using namespace std;

#define ll long long

ll dp[22][10][10];

ll solve(ll pos,ll first,ll limit)
{
    ll &res=dp[pos][first][limit];
    if(res!=-1) return res;

    if(pos==19){
        if(first==0){ return res=limit;}
        else if(first<=limit){return res=1;}
        return res=0;
    }
    res=0;
    for(ll i=0;i<=limit;i++){
        if(first==0){ res+=solve(pos+1,i,9);}
        else res+=solve(pos+1,first,9);
//    cout<<res<<endl;
    }
    return res;
}


ll fnc(string r){
    memset(dp,-1,sizeof(dp));
    ll i,shuru=0,res=0,f;
    for(i=0;i<20;i++){
        if(r[i]=='0'&&shuru==0) continue;
        else if(r[i]>'0'){
            if(shuru==0){
                res+=solve(i,0,r[i]-'1');
                shuru=r[i];
                f=r[i]-'0';
            }
            else{
//                    cout<<" "<<res<<endl;
                res+=solve(i,f,r[i]-'1');
            }
        }
    }
    if(shuru==r[19]) res++;
    return res;
}

int main()
{
    ll shajib=0,i,j,n,m,t;
    string l,r;
    cin>>l>>r;
    if(l[0]==l[l.size()-1]) shajib++;
    reverse(l.begin(),l.end());
    reverse(r.begin(),r.end());
    for(i=l.size(); i<20; i++)
        l.push_back('0');
    for(i=r.size(); i<20; i++)
        r.push_back('0');

    reverse(l.begin(),l.end());
    reverse(r.begin(),r.end());
cout<<fnc(r)-fnc(l)+shajib<<endl;
}
