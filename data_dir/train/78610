#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
char s[2010][2010];
int d[2010][2010];
int main(){
    int n, k;
    while(cin>>n>>k){
        k=min(k, n+n-1);
        vector < pair<int, int> > v1;
        vector <char> ans;
        int tmp, mx=0;
        for(int i=0; i<n; ++i){
            scanf("%s",s[i]);
            if(i==0){
                if(s[0][0]=='a')
                    d[0][0]=0;
                else
                    d[0][0]=1;
                if(d[0][0]==k){
                    v1.push_back(mk(0, 0));
                    mx=max(mx, 0);
                }
            }
            for(int j=0; j<n; ++j){
                if(i==0&&j==0)
                    continue;
                tmp=n*n;
                if(i>0)
                    tmp=min(tmp, d[i-1][j]);
                if(j>0)
                    tmp=min(tmp, d[i][j-1]);
                if(s[i][j]=='a')
                    d[i][j]=tmp;
                else
                    d[i][j]=tmp+1;
                if(d[i][j]==k){
                    v1.push_back(mk(i, j));
                    mx=max(mx, i+j);
                }
            }
        }
        if(d[n-1][n-1]<=k){
            for(int i=0; i<n+n-1; ++i){
                cout<<"a";
            }
            cout<<endl;
            continue;
        }
        vector < pair<int, int> > v;
//        cout<<mx<<endl;
        if(v1.size()==0){
            v1.push_back(mk(0,0));
            ans.push_back(s[0][0]);
        }
        else{
            for(int i=0; i<=mx; ++i){
                ans.push_back('a');
            }
        }
        for(int i=0; i<v1.size(); ++i){
            if(v1[i].fs+v1[i].sc!=mx)
                continue;
            v.push_back(v1[i]);
            s[v1[i].fs][v1[i].sc]=s[0][0];
        }
        int dx, dy;
        set< pair<char, pair<int, int> > > st;
        bool l=0;
        while(1){
            if(l)
                ans.push_back(s[v[0].fs][v[0].sc]);
            l=1;
            for(int i=0; i<v.size(); ++i){
//                cout<<v[i].fs<<" "<<v[i].sc<<" "<<s[v[i].fs][v[i].sc]<<endl;
                if(s[v[i].fs][v[i].sc]!=s[v[0].fs][v[0].sc])
                    continue;
                if(v[i].fs<n-1){
                    dx=v[i].fs+1;dy=v[i].sc;
                    st.insert(mk(s[dx][dy], mk(dx, dy)));
                }
                if(v[i].sc<n-1){
                    dx=v[i].fs;dy=v[i].sc+1;
                    st.insert(mk(s[dx][dy], mk(dx,dy)));
                }
            }
//            cout<<endl;
//            cout<<endl;
            if(st.size()==0)
                break;
            v.clear();
            for(auto it:st){
                v.push_back(it.sc);
            }
            st.clear();
        }
         for(int i=0; i<ans.size(); ++i){
            cout<<ans[i];
         }
         cout<<endl;
    }
    return 0;
}


