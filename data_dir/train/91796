#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int k;
const int MAXN = 200005;
string s, t, ans;
int dig[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> k >> s >> t;

	bool carry = false;
	for(int i = k - 1; i >= 0; i--)
	{
		int a = s[i] - 'a', b = t[i] - 'a';
		dig[i] = (a + b + carry) % 26;
		if(a + b + carry >= 26)
			carry = true;
		else
			carry = false;
	}

	ans = "";
	int add = 0;
	if(carry)
		add += 26;
	for(int i = 0; i < k; i++)
	{	
		ans += ((dig[i] + add) / 2 + 'a');
		if((dig[i] + add) % 2 == 1)
			add = 26;
		else
			add = 0;
	}

	cout << ans << "\n";
	return 0;
}
