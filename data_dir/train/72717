#include<bits/stdc++.h>
using namespace std;

int nxt(int n, int d) {
    int m = n%d;
    if (m==0)   return n;
    return n-m+d;
}

long long lcm(int a, int b) {
    int g = __gcd(a, b);
    return 1LL*(a/g)*b;
}

int main() {
    int a, b;
    cin>>a>>b;

    if (a==b) {
        cout<<0<<endl;
        return 0;
    }

    vector<int> divs;
    if (a<b)    swap(a, b);
    int d = a-b;

    for (int i=1; i*i<=d; i++) {
        if (d%i) continue;
        divs.push_back(i);
        if (i*i < d)    divs.push_back(d/i);
    }

    long long ans = lcm(a, b), id = 0;
    for (int x: divs) {
        int c = nxt(a, x);
        int d = nxt(b, x);
        assert(c-a == d-b);
        long long cur = lcm(c, d);
        if (cur < ans) {
            ans = cur;
            id = c-a;
        }
    }
    cout<<id<<endl;
}
