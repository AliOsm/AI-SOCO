#include <bits/stdc++.h>
using namespace std;
vector<vector<long long>> childrens(50100);
vector<vector<long long>> dp(50100,vector<long long>(510,0));
int n,k,a,b,parent[50100];

void dfs(long long curr , long long par){
    dp[curr][0] = 1;
    parent[curr] = par;
    for(long long i : childrens[curr]){
        if(i != par){
            dfs(i,curr);
            for(int j = 0 ; j <= 500 ; j += 1){
                dp[curr][j+1] += dp[i][j];
            }
        }
    }
}

long long dfss(long long curr , long long par){
    long long ret = 0,rett = 0;
    for(long long i : childrens[curr]){
        for(long long p = 0 ; p <= k-2 ; p += 1){
            if(i != par){
                ret += dp[i][p] * (dp[curr][k-p-1]-dp[i][k-p-2]);
            }
        }
    }
    for(long long i : childrens[curr]){
        if(i != par){
            rett += dp[i][k-1];
        }
    }
    return ret/2 + rett;
}

int main()
{
    cin >> n >> k;
    for(long long i = 0 ; i < n-1 ; i += 1){
        cin >> a >> b;
        childrens[a].push_back(b);
        childrens[b].push_back(a);
    }
    dfs(1,-1);
    long long ans=0;
    for(long long i = 1 ; i <= n ; i += 1){
        ans += dfss(i,parent[i]);
    }
    cout << ans;
}