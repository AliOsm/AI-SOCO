/* @nazarbek.altybay */

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <queue>

#define pii pair<int, int>

#define pb push_back
#define mp make_pair

#define f first
#define s second

using namespace std;

typedef long long ll;
typedef long double ld;

const double EPS = 1e-9;
const double PI = acos(-1);

const int INF = (int) 1e9 + 7;
const int MAXN = (int) 2e6 + 7;

const int magic = 360360;

ll a, b;

int k;
int dp[MAXN];

int solve(int from, int to) {
  dp[from] = 0;
  for (int i = from + 1; i <= to; i++) {
    dp[i] = dp[i - 1] + 1;
    for (int j = 2; j <= k; j++)
      if (i - i % j >= from)
        dp[i] = min(dp[i], dp[i - i % j] + 1);
  }
  return dp[to];
}

int main() {
  #ifdef LOCAL
  freopen ("in", "r", stdin);
  #endif

  cin >> b >> a >> k;
  if (a / magic == b / magic) {
    cout << solve(a % magic, b % magic);
  } else {
    ll l = a / magic;
    ll r = b / magic;
    int ansL = solve(a % magic, magic - 1);
    int ansR = solve(0, b % magic);
    int ansM = solve(0, magic - 1) + 1;
    cout << ansL + ansR + ansM * 1ll * (r - l - 1) + 1;
  }

  return 0;
}