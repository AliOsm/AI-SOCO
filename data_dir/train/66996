#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <sstream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

using namespace std;

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define pii pair < int, int >
#define pll pair < long long, long long>
#define ull unsigned long long
#define y1 stupid_cmath
#define left stupid_left
#define right stupid_right
#define vi vector <int>
#define sz(a) (int)a.size()
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x) * (x))

const int inf = (int)1e9;
const int mod = inf + 7;
const double eps = 1e-9;
const double pi = acos(-1.0);

ll read_long() {
    ll ans = 0;
    char c;
    bool started = false;
    bool is_negative = false;
    while (true) {
        c = getchar();
        if ((c < '0' || c > '9') && c != '-' && !started) continue;
        if ((c < '0' || c > '9') && c != '-' && started) break;
        if (started) {
            ans = ans * 10;
        }
        started = true;
        if (c == '-') is_negative = true;
        else ans += c - '0';
    }
    if (is_negative) ans *= -1;
    return ans;
}

int n, h;
int x1[200200], x2[200200];
int a[200200];
int b[200200];
ll pr[2][200200];

ll sum(int id, int l, int r) {
    if (l > r) return 0;
    ll ans = pr[id][r];
    if (l) ans -= pr[id][l - 1];
    return ans;
}

ll calc(int ind) {
    if (a[ind] >= h) {
        return b[ind] * 1ll + h;
    }
    int j = ind;
    int l = ind, r = n - 1;
    while (l <= r) {
        int mid = (l + r) >> 1;
        if (sum(0, ind, mid) < h) {
            j = mid;
            l = mid + 1;
        } else r = mid - 1;
    }
    return h + sum(1, ind, j + 1);
}

int main(){

    scanf("%d%d", &n, &h);
    for (int i = 0; i < n; i++) {
        scanf("%d%d", x1 + i, x2 + i);
        b[i] = x2[i] - x1[i];
        if (i) a[i - 1] = x1[i] - x2[i - 1];
    }
    a[n - 1] = inf * 2;

    pr[0][0] = a[0];
    pr[1][0] = b[0];
    for (int i = 1; i < n; i++) {
        pr[0][i] = pr[0][i - 1] + a[i];
        pr[1][i] = pr[1][i - 1] + b[i];
    }

    ll ans = h;
    for (int i = 0; i < n; i++) {
        ans = max(ans, calc(i));
    }
    
    printf("%lld\n", ans);

    return 0;
}
