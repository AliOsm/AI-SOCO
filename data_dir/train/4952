#include <bits/stdc++.h>

/*#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")   */


//#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
//using namespace __gnu_pbds;

#define ss second
#define ff first
#define int long long
//#define double long double
#define pb push_back

const int N = 2e6 + 51, MOD = 1e9 + 7, mod = 998244353, INF = 2e8;

mt19937 Flash_new_51(51515);

using vi = vector <int>;
using vp = vector <pair <int, int>>;

int n, k;
string s;

int solve () {
    int x = n / k;
    int i = 0, j = k - 1, ans =  0;
    while (i <= j) {
        vi kol(30, 0);
        int sum = 0;
        for (int j1 = 0; j1 < x; j1++) {
            int l = i + j1 * k, r = j + j1 * k;
            kol[s[l] - 'a']++, sum++;
            if (i != j) kol[s[r] - 'a']++, sum++;
        }
        int mx = 0;
        for (auto to : kol) mx = max(mx, to);
        ans += sum - mx;
        i++, j--;
    }
    return ans;
}


signed main() {
    #ifdef Flash
     freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--) {
        cin >> n >> k >> s;
        int ans = 0;
        ans = solve();
        cout << ans << "\n";
    }
}
