#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

using namespace std;
int a[2049][2049];
int closer[2049][2049];
int closel[2049][2049];
int main()
{
#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
#endif
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	FOR(i,0,n)
		FOR(j,0,m)
		{
			closel[i][j]=j-1;
			closer[i][j]=j+1;
		}
	FOR(it,0,k)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		x--;y--;
		int best=2000000000,res1=2000000000,res2=2000000000;
		for (int i=x; i>=0; --i)
		{
			if (x-i>best)
				break;
			int by1,by2;
			if (a[i][y]==0)
			{
				by1=y;
				by2=y;
			}
			else
			{
				by1=closel[i][y];
				by2=closer[i][y];
			}
			if (by1!=-1)
			{
				int cur=ABS(i-x)+ABS(by1-y);
				if ((cur<best) || ((cur==best) && (i<res1)) || ((cur==best) && (i==res1) && (by1<res2)))
				{
					best=cur;
					res1=i;
					res2=by1;
				}
			}
			if (by2!=m)
			{
				int cur=ABS(i-x)+ABS(by2-y);
				if ((cur<best) || ((cur==best) && (i<res1)) || ((cur==best) && (i==res1) && (by2<res2)))
				{
					best=cur;
					res1=i;
					res2=by2;
				}
			}
		}
		FOR(i,x+1,n)
		{
			if (i-x>best)
				break;
			int by1,by2;
			if (a[i][y]==0)
			{
				by1=y;
				by2=y;
			}
			else
			{
				by1=closel[i][y];
				by2=closer[i][y];
			}
			if (by1!=-1)
			{
				int cur=ABS(i-x)+ABS(by1-y);
				if ((cur<best) || ((cur==best) && (i<res1)) || ((cur==best) && (i==res1) && (by1<res2)))
				{
					best=cur;
					res1=i;
					res2=by1;
				}
			}
			if (by2!=m)
			{
				int cur=ABS(i-x)+ABS(by2-y);
				if ((cur<best) || ((cur==best) && (i<res1)) || ((cur==best) && (i==res1) && (by2<res2)))
				{
					best=cur;
					res1=i;
					res2=by2;
				}
			}
		}
		a[res1][res2]=1;
		int v=MIN(m,closer[res1][res2]+1);
		FOR(i,res2+1,v)
			closel[res1][i]=closel[res1][res2];
		v=MAX(0,closel[res1][res2]);
		for (int i=res2-1; i>=v; --i)
			closer[res1][i]=closer[res1][res2];
		printf("%d %d\n",res1+1,res2+1);
	}
	return 0;
}