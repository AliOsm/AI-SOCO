#include <iostream>
#include <cmath>
#include <string>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <fstream>
#include <cassert>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <numeric>
#include <ctime>
#include <cstdlib>
#include <sstream>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define pll pair<long long, long long>
#define y1 stupid_y1
#define ll long long
#define vi vector<int>
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define all(a) a.begin(), a.end()
#define sqr(x) ((x)*(x))
#define sz(a) (int)a.size()
#define file "a"

const int inf = (int)1e9;
const double eps = 1e-9;
const double pi = acos(-1.0);

int n, m;
int x[100100], y[100100], a[100100], b[100100];
multiset < int > g[1010];
bool used[100100];

int main () {
    #ifdef LOCAL
    freopen(file".in", "r", stdin);
    freopen(file".out", "w", stdout);
    #endif

    scanf("%d%d", &n, &m);

    for (int i=1;i<=n;i++) scanf("%d%d", &x[i], &y[i]);

    for (int i=1;i<=m;i++) scanf("%d%d", &a[i], &b[i]);

    for (int i=1;i<=n;i++){
        g[y[i]].insert(x[i]);       
    }

    int ans2 = 0;
    for (int i=1;i<=m;i++){
        if ( g[b[i]].find(a[i]) == g[b[i]].end() ) continue;
        used[i] = true;
        ans2++;
        g[b[i]].erase(g[b[i]].find(a[i]));
    }

    int ans = 0;
    for (int i=1;i<=m;i++){
        if ( used[i] ) continue;
        if ( g[b[i]].empty() ) continue;
        ans++;
        g[b[i]].erase(g[b[i]].begin());                     
    }

    cout <<ans + ans2<<" "<<ans2<<endl;



    #ifdef LOCAL
    cerr << (double)clock() * 1.0 / CLOCKS_PER_SEC << endl;
    #endif

    return 0;
}
