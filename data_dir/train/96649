#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define ss second
#define ff first
#define pb push_back
#define mp make_pair
int n;
int a[100100],b[100100],c[100100],d[100100];
//vector<int> x,y;
map<int,int>m;
vector<pair<pair<int,int>,int > > v;
int p[1000100];
int seg[100100*4];
int seg2[100100*4];
void build(int cr,int s,int e){
    if(s==e){
        seg[cr]=c[p[s]];
        seg2[cr]=d[p[s]];
        return;
    }
    build(cr*2,s,(s+e)/2);
    build(cr*2+1,(s+e)/2+1,e);
    seg[cr]=max(seg[cr*2],seg[cr*2+1]);
    seg2[cr]=min(seg2[cr*2],seg2[cr*2+1]);
    return;
}
int l,r;
int mx=0;
int get1(int cr,int s,int e){
    if(l>e||r<s)return 0;
    if(l<=s&&e<=r){return seg[cr];}
    return max(
    get1(cr*2,s,(s+e)/2),
    get1(cr*2+1,(s+e)/2+1,e));
    //seg[cr]=max(seg[cr*2],seg[cr*2+1]);
    //seg2[cr]=min(seg2[cr*2],seg2[cr*2+1]);
    //return;
}
int get2(int cr,int s,int e){
    if(l>e||r<s)return mx;
    if(l<=s&&e<=r){return seg2[cr];}
    return min(
    get2(cr*2,s,(s+e)/2),
    get2(cr*2+1,(s+e)/2+1,e));
    //seg[cr]=max(seg[cr*2],seg[cr*2+1]);
    //seg2[cr]=min(seg2[cr*2],seg2[cr*2+1]);
    //return;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin>>n;v.pb(mp(mp(0,0),0));
    for(int i=1;i<=n;i++){
        cin>>a[i]>>b[i]>>c[i]>>d[i];
        v.pb(mp(mp(a[i],b[i]),i));
        mx=max(max(b[i],d[i]),mx);
    }
    mx++;
    sort(v.begin(),v.end());
    for(int i=1;i<=n;i++){
        p[i]=v[i].ss;
    }
    build(1,1,n);
    bool ok=1;
    for(int i=1;i<n;i++){
        int hi=n,lo=i,best=i;
        while(hi>=lo){
            int mid=(hi+lo)/2;
            if(v[mid].ff.ff<=v[i].ff.ss){
                best=max(best,mid);
                lo=mid+1;

            }
            else
                hi=mid-1;
        }
        if(best==i)continue;
        l=i;
        r=best;
        int x=get1(1,1,n);
        int y=get2(1,1,n);
        if(x>d[v[i].ss]||y<c[v[i].ss]){ok=0;}
    }
    v.clear();
    v.pb(mp(mp(0,0),0));
    for(int i=1;i<=n;i++){
        swap(a[i],c[i]);
        swap(b[i],d[i]);
        v.pb(mp(mp(a[i],b[i]),i));
    }
    sort(v.begin(),v.end());
    for(int i=1;i<=n;i++){
        p[i]=v[i].ss;
    }
    build(1,1,n);

    for(int i=1;i<n;i++){
        int hi=n,lo=i,best=i;
        while(hi>=lo){
            int mid=(hi+lo)/2;
            if(v[mid].ff.ff<=v[i].ff.ss){
                best=max(best,mid);
                lo=mid+1;

            }
            else
                hi=mid-1;
        }
        if(best==i)continue;
        l=i;
        r=best;
        int x=get1(1,1,n);
        int y=get2(1,1,n);
        if(x>d[v[i].ss]||y<c[v[i].ss]){ok=0;}
    }
    if(ok)cout<<"YES";
    else
        cout<<"NO";
    return 0;
}
/*

1
6       2 3
32      2 2 2 2 2
180     2 2 3 3 5
1116    2 2 3 3 31
7728    2 2 2 2 3
59904
*/
