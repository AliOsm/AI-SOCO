#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int, int> pi;
typedef pair<ll, ll> pl;
typedef vector<pi> vpi;
typedef vector<pl> vpl;

#define read freopen("in.c", "r", stdin)
#define write freopen("out.c", "w", stdout)
#define all(a) (a).begin(), (a).end()
#define mp make_pair
#define ff first
#define ss second
#define left(x) ((x) + (x) + 1)
#define right(x) ((x) + (x) + 2)
#define pb push_back
#define pp pop_back
#define eps 1e-9
#define mx 100005
#define mmx 100000005
#define mmod 1000000007
#define inf (INT_MAX - 5)
#define cs(p) printf("Case %d:", (p)++)
#define nl puts("")
#define sp printf(" ")
#define out(a) printf("%lld", (ll)a)

ll in()
{
    ll a;
    scanf("%lld", &a);
    return a;
}

ll f(ll n)
{
    int cnt = 0;
    while(n)
        n >>= 1, cnt++;
    return cnt;
}

ll solve(ll n, ll a, ll b, ll k)
{
    if(a <= n/2 && b > n/2)
        return k;

    if(a > n/2 && b > n/2)
        a -= n/2, b -= n/2;
    return solve(n/2, a, b, ++k);
}

vi g[mx];

ll bfs()
{
    int ans = 0;
    queue<int> q;
    q.push(1);
    int now = 0;
    while(!q.empty())
    {
        int cnt = 0;
        int k = q.size();
        while(k--)
        {
            int x = q.front();
            q.pop();
            cnt += ((int)g[x].size() & 1);
            for(int i = 0; i < g[x].size(); i++)
                q.push(g[x][i]);
        }
        ans += cnt&1;
    }
    return ans;
}

int main()
{
    ll n = in();
    for(int i = 2; i <= n; i++)
        g[in()].pb(i);
    ll ans = bfs();
    out(ans + 1), nl;
    return 0;
}
