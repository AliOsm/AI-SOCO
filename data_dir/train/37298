#include <bits/stdc++.h>

using namespace std;


//<editor-fold desc="debugger">

template <class X, class Y>
ostream & operator << (ostream & os, const pair <X, Y>& p) {
    return os << "[" << p.first << ", " << p.second << "]" ;
}

template <class Ch, class Tr, class Container>
basic_ostream <Ch, Tr> & operator << (basic_ostream <Ch, Tr> & os, const Container& x) {
    os << "{";
    bool f = 1;
    for (auto&y : x) {
        if (!f) os << ", ";
        else f = 0;
        os << y;
    }
    return os << "}";
}

struct Debug {
#ifndef ONLINE_JUDGE
    template<class T>
    Debug& operator << (const T& x) {
        cerr << x << " , ";
        return *this;
    }
    ~Debug() {cerr << endl;}
    #define debug cerr << "Line(" << __LINE__ << ") : " , Debug()
#else
    template<class T>
    Debug& operator << (const T& x) {
        return *this;
    }
    #define debug Debug()
#endif
};

//</editor-fold>

int main() {
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.in" , "r" , stdin);
#endif
    int n;
    cin >> n;

    vector<int> a(n);

    map<int , int> f;
    f[-1]++;

    int bad = 0 , ind = -1;
    for (int &x : a) {
        cin >> x;
        f[x]++;
        if (f[x] == 2) {
            bad++;
            ind = x;
        }

        if (f[x] > 2) {
            cout << "cslnb";
            return 0;
        }
    }


    if (bad > 1) {
        cout << "cslnb";
        return 0;
    }

    if (bad == 1 && f[ind - 1]) {
        cout << "cslnb";
        return 0;
    }

    sort(a.begin() , a.end());

    long long moves = 0;
    for (int i = 0 , nxt = 0 ;i < n ;i++) {
        nxt += a[i] == nxt;
        if (nxt > a[i]) continue;
        moves += a[i] - nxt;
        nxt++;
    }

    debug << moves;

    cout << (moves&1 ? "sjfnb" : "cslnb");
}