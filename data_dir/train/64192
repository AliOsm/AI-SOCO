#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mp(x, y) make_pair(x, y)
#define mod 1000000007
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= mod;
       }
       tp *= tp;
       tp %= mod;
       b >>= 1ll;
    }
    return res;
}

ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
   return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
   cout << "YES" << endl;
   exit(0);
}

void no() {
   cout << "NO" << endl;
   exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 1e6 + 5, inf = 9e18;
int days[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt();
    vector<ll> a(n);
    for (int i = 0; i < n; i++) {
        a[i] = nxt();
    }
    vector<vector<ll>> dp(n, vector<ll>(2));
    vector<vector<ll>> prev(n, vector<ll>(2, -1));
    dp[0][0] = inf;
    dp[0][1] = -inf;
    for (int i = 1; i < n; i++) {
        dp[i][0] = -inf;
        dp[i][1] = inf;
    }

    for (int i = 1; i < n; i++) {
        {
            if (a[i] > a[i - 1] && dp[i][0] < dp[i - 1][0]) {
                dp[i][0] = dp[i - 1][0];
                prev[i][0] = 0;
            }
            if (a[i] < dp[i - 1][0] && a[i - 1] < dp[i][1]) {
                dp[i][1] = a[i - 1];
                prev[i][1] = 0;
            }
        }
        {
            if (a[i] < a[i - 1] && dp[i][1] > dp[i - 1][1]) {
                dp[i][1] = dp[i - 1][1];
                prev[i][1] = 1;
            }
            if (a[i] > dp[i - 1][1] && a[i - 1] > dp[i][0]) {
                dp[i][0] = a[i - 1];
                prev[i][0] = 1;
            }
        }
    }

    if (dp[n - 1][0] == -inf && dp[n - 1][1] == inf) no();
    ll pos = 0;
    if (dp[n - 1][0] == -inf) pos = 1;
    vector<ll> ans(n, 0);
    for (int i = n - 1; i >= 0; i--) {
        ans[i] = pos;
        pos = prev[i][pos];
    }
    cout << "YES\n";
    for (auto x : ans)
        cout << x << " ";
    return 0;
}
