#include <bits/stdc++.h>

#define F first
#define S second
#define pb push_back
#define ll long long
#define ld long double
#define pii pair <int,int>
#define endl '\n'
#define FILE "chaos"

#pragma GCC target("sse,sse2,sse3,sse3,sse4,popcnt,abm,mmx")

using namespace std;

const int mod = 1e9 + 7;
const int N = 1e5 + 5;

struct kek {
    int cnt, t, nm;
};

bool comp(kek x, kek y) {
    if (x.t == y.t) return x.cnt < y.cnt;
    return x.t < y.t;
}

kek a[200005];
int n, t;

bool can(int mid) {
    int ta = 0, cur = 0;
    for (int i = 0; i < n; i++) {
        if (a[i].cnt >= mid && cur + a[i].t <= t) {
            ta++;
            cur += a[i].t;
        }
    }
    if (ta >= mid) return 1;
    return 0;
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
    // freopen("input.txt", "r", stdin);
    //  freopen("output.txt", "w", stdout);
#endif
    cin >> n >> t;
    for (int i = 0; i < n; i++) {
        cin >> a[i].cnt >> a[i].t;
        a[i].nm = i + 1;
    }
    sort(a, a + n, comp);
    int l = 0, r = n, res = -1;
    while (l <= r) {
        int mid = (l + r) / 2;
        if (can(mid)) {
            l = mid + 1;
            res = mid;
        } else r = mid - 1;
    }
    cout << res << endl;
    cout << res << endl;
    int ta = res, cur = 0;
    for (int i = 0; i < n; i++) {
        if (a[i].cnt >= res && cur + a[i].t <= t) {
            ta--;
            cur += a[i].t;
            cout << a[i].nm << " ";
            if (ta == 0) break;
        }
    }
    return 0;
}
