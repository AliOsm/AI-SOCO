#include <bits/stdc++.h>

using namespace std;

template<class T1, class T2>
istream & operator>> (istream& is, pair<T1,T2> &p){
    return is >> p.first >> p.second;
}
template<class T1, class T2>
ostream & operator<< (ostream &os, pair<T1,T2> &p){
    return os << p.first << " " << p.second;
}

const int N=2005;
const int ADD=100005;
const int M=2*ADD;


int f[M];

inline void add(int r, int val){
    for(;r<M;r|=r+1)f[r]+=val;
}

inline int sum(int r){
    int res=0;
    for(;r>=0;r=(r&(r+1))-1)res+=f[r];
    return res;
}

int v[N];
int n;

int count_inv(){
    int res=0;
    for(int i=n-1; i>=0; i--){
        res+=sum(ADD+v[i]-1);
        add(ADD+v[i],1);
    }
    for(int i=0; i<n; i++)add(ADD+v[i],-1);
    return res;
}


signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin >> n;
    for(int i=0; i<n; i++){
        cin >> v[i];
        if(v[i]<0)v[i]=-v[i];
    }
    int cur=count_inv();
    for(int i=0; i<n; i++){
        v[i]=-v[i];
        int t=count_inv();
        if(t<cur)cur=t;
        else v[i]=-v[i];
    }
    cout << cur;
}
