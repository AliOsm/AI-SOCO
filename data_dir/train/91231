#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef double dl;
typedef long double ldl;

#define vi vector<int>
#define pi pair<int , int>
#define pb(a) push_back(a)
#define mp(a , b) make_pair((a) , (b))
#define F first
#define S second
#define pp pop()

#define eps1 1e-9
#define eps2 1e-6
#define pii acos(-1)
#define inf 2e+9
#define xinf 2e+18

#define fl(i , a , b) for ( int (i) = (a) ; (i) <= (b) ; (i)++ )
#define rfl(i , a ,b) for ( int (i) = (a) ; (i) >= (b) ; (i)-- )
#define banao(ara , i) memset( ara , i , sizeof(ara) )

#define in(a) scanf("%d", &a )
#define inl(a) scanf("%lld", &a )
#define indl(a) scanf("%lf", &a )
#define ins(s) scanf("%s", s )
#define insf(str) scanf("%[^\n]s" , str )
#define inc(a) scanf("%c", &a )

#define gt getchar()

#define out(a) printf("%d", a )
#define outc(ch) printf("%c", ch )
#define outs(str) printf("%s", str )
#define outl(a) printf("%lld", a )
#define outdl(a) printf("%f", a )

#define nl printf("\n")
#define sp printf(" ")
#define cs(i) printf("Case %d: ", i++ )

#define fin freopen("in.c" , "r" , stdin)
#define fout freopen("out.c" , "w" , stdout)
#define re return

int main() {
    int n;
    in(n);
    ll a[n][n], row , col;
    fl(i , 0 , n-1) {
        fl(j, 0 , n-1) {
            inl(a[i][j]);
            if(a[i][j] == 0) row = i , col = j;
        }
    }
    if(n==1) {
        out(1);
        re 0;
    }
    int k = (row+1)%n , l = (col+1)%n;
    ll sumr = 0 , sum2 = 0;
    fl(i , 0 , n-1) {
        sumr += a[k][i];
        sum2 += a[row][i];
    }
    a[row][col] = sumr - sum2;
    fl(i , 0 , n-1) {
        ll nowr = 0, nowl = 0;
        fl(j , 0 , n-1) {
            nowr += a[i][j];
            nowl += a[j][i];
        }
        if((nowr-sumr) || (nowl-sumr)) {
            out(-1);
            re 0;
        }
    }
    ll s = 0;
    fl(i , 0 , n-1) {
        s += a[i][i];
    }
    if(s - sumr) {
        out(-1);
        re 0;
    }
    s = 0;
    fl(i , 0 , n-1) {
        s += a[n-1-i][i];
    }
    if(s - sumr) {
        out(-1);
        re 0;
    }
    if(a[row][col] > 0) {
        outl(a[row][col]);
    }
    else out(-1);
    re 0;
}