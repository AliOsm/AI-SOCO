#include <algorithm>
#include <iostream>
#include <string.h>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#include <queue>
#include <stack>
 
#define F first
#define S second
#define eps 1e-8
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define inf 1000000100
#define sz 100100
 
 
#define name "."
 
typedef long long ll;
 
using namespace std;
int n, p[sz];
vector<int> g[sz];
int dsu(int v){
	return (p[v] == v) ? v : (p[v] = dsu(p[v]));
}
void merge(int a, int b){
	a = dsu(a);
	b = dsu(b);
	if(a > b)
		swap(a, b);
	p[b] = a;
}
int solve(){
	int res = 0;
	set<int> x;
	set<int>::iterator it;
	for(int i = 0; i < n; i++)
		p[i] = i,
		x.insert(i);
	for(int i = 0; i < n; i++){
		for(int j = 0; j < g[i].size(); j++)
			x.erase(g[i][j]);
		it = x.begin();
		for(int j = 0; j < min(101, (int)x.size()); j++){
			int v = *it;
			merge(i, v);
			it++;
		}
		for(int j = 0; j < g[i].size(); j++)
			x.insert(g[i][j]);
	}
	for(int i = 0; i < n; i++)
		for(int j = 0; j < g[i].size(); j++){
			int v = dsu(i), w = dsu(g[i][j]);
			if(v != w){
				merge(v, w);
				res++;
			}
		}
	return res;	
}
int main()
{
//	   	freopen (name".in","r",stdin);
//		freopen (name".out","w",stdout);
	int a, b, m;
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		cin >> a >> b;
		a--, b--;
		g[a].pb(b);
		g[b].pb(a);
	}
	cout << solve();
	return 0;
	
}
