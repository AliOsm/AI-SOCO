#include<bits/stdc++.h>

using namespace std;

#define pii pair < int , int >

#define ff first

#define ss second

vector < int > ad[105];

vector < pii > vv;

string s[105];

int vis[105];

int timee=0;

bool cycle=false;

void dfs(int src)
{
    if(cycle) return ;

    vis[src]=1;

    ++timee;

    for(int i=0; i<ad[src].size(); i++)
    {
        int v=ad[src][i];

        if(!vis[v])
        {
            dfs(v);
        }

        else if(vis[v]==1)
        {
            cycle=true;
        }

    }

    vis[src]=2;

    ++timee;

    vv.push_back({timee,src});
}

int main()
{
    ios_base::sync_with_stdio(false);

    cin.tie(NULL);

    int n,i,j;

    cin>>n;

    for(i=1; i<=n; i++)
    {
        cin>>s[i];
    }

    for(i=2; i<=n; i++)
    {
        int start=0;

        int len1=s[i-1].length(),len2=s[i].length();

        bool chk=false;

        while(start<len1 && start<len2)
        {
            if(s[i-1][start]!=s[i][start])
            {
                int ch1=s[i-1][start]-'a'+1;

                int ch2=s[i][start]-'a'+1;

                ad[ch1].push_back(ch2);

                chk=true;

                break;
            }

            start++;
        }

        if(!chk && len1>len2)
        {
            printf("Impossible\n");

            return 0;

        }

    }

    for(i=1; i<=26; i++)
    {
        if(!vis[i])
        {
            dfs(i);
        }

    }

    if(cycle)
    {
        printf("Impossible\n");

        return 0;
    }

    sort(vv.rbegin(),vv.rend());

    for(i=0; i<vv.size(); i++)
    {
        printf("%c",vv[i].ss+'a'-1);
    }

    printf("\n");

    return 0;


}
