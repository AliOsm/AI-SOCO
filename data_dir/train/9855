#include <iostream>
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ll long long
#define F first
#define S second
#define PI acos(-1)
#define EPS 1e-8
#define BASE 53ll
#define mod 1000000007ll
#define ld long double
#define MAX 900001
#define NIL 0
#define INF (1<<28)

typedef pair<int,int>ii;
typedef pair<ii,int>state;
typedef pair<int,ii>edge;
typedef pair<vector<int>,int>vii;
const int N=1000005;

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll fact(ll n){ll ret=1;for(int i=1;i<=n;i++)ret*=i;return ret;}
bool is_vowel(char c){if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;return 0;}
ld getDistance(ld x1,ld y1,ld x2,ld y2){return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}


int main()
{
   //freopen("test.in","r",stdin);
   //freopen("test.out","w",stdout);
   int n,k;
   scanf("%d%d",&n,&k);
   vector<ii>events,sol;
   for(int i=0;i<n;i++){
    int a,b;
    scanf("%d%d",&a,&b);
    events.pb(ii(a,1));
    events.pb(ii(b+1,-1));
   }
   sort(events.begin(),events.end());
   bool start=0;
   int l,r,sum=0;
   for(int i=0;i<events.size();){
       int cur=events[i].F;
       bool lss=0;
       while(i<n*2&&events[i].F==cur){
           sum+=events[i].S;
           i++;
           if(sum<k)lss=1;
       }
       if(sum>=k){
        if(!start){
            start=1;
            l=cur;
        }
        else{
            if(lss){
                sol.pb(ii(l,cur-1));
                l=cur;
            }
        }
       }
       if(sum<k){
          if(start){
             sol.pb(ii(l,cur-1));
             start=0;
          }
       }
   }
   if(start)sol.pb(ii(start,events[n-1].F-1));
   cout<<sol.size()<<endl;
   for(int i=0;i<sol.size();i++)printf("%d %d\n",sol[i].F,sol[i].S);
   return 0;
}
