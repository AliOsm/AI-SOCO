#include <iostream>
#include <algorithm>
#include <string>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <ctime>
#include <cstdlib>
#include <queue>
#include <cstring>
#include <cassert>
#include <bitset>

using namespace std;

#define mp make_pair
#define f first
#define s second
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define sz(x) ((int)(x).size())
#define sqr(x) ((x)*1ll*(x))

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;

ll a[100100];
vector < ll > b;
ll sum[100100];
ll n, x, k;
map < ll, int > cnt;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);
    
    cin >> n >> x >> k;
    for(int i = 1; i <= n; ++i) {
        cin >> a[i];
        cnt[a[i]]++;
        b.pb(a[i]);
    }
    sort(all(b));
    b.resize(unique(all(b)) - b.begin());
    for(int i = 1; i <= sz(b); ++i) {
        sum[i] = sum[i-1] + cnt[b[i-1]];
    }
    ll ans = 0;
    for(int i = 1; i <= n; ++i) {
        ll pd = (a[i] - 1) / x * x;
        ll ld = pd + k * x;
        int l = lower_bound(all(b), max(ld, a[i])) - b.begin() + 1;
        int r = upper_bound(all(b), ld + x - 1) - b.begin();
        if(l <= r)
            ans += sum[r] - sum[l - 1];
    }
    cout << ans << endl;
    
    
    
    return 0;
}
