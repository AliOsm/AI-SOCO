#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <unordered_map>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <iomanip>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define nl cout<<'\n'
#define ff first
#define ss second
#define READ freopen("input.txt","r",stdin);
#define WRITE    freopen("output.txt","w",stdout);
#define fill(a,x) memset(a,x,sizeof(a));
#define loop(i,x,n) for(int i=x;i<n;i++)
#define TC() ll ttwea;cin>>ttwea;while(ttwea--)
#define ll long long
#define mod 1000000007
#define vi vector<ll>
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ull unsigned long long
#define N 2000010
#define inf 10000000000000000
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
ll dx[]={1,0,-1,0};ll dy[]={0,1,0,-1}; //4 Direction
//ll dx[]={1,1,0,-1,-1,-1,0,1};ll dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
ll gcd(ll x,ll y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
ll expo(ll n,ll m,ll p)   //MODULAR EXPONENTIATION
{
    ll r=1;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
int main()
{
 
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ************************/
   ll n;
   cin>>n;
   ll a[n][n];
   ll dp[n][n];
   for(ll i=0;i<n;i++)
   {
   	for(ll j=0;j<n;j++)
   	{
   		cin>>a[i][j];
   		dp[i][j]=a[i][j];
   		//dp[i][i]=0;
   	}
   }
   vi del(n);
   loop(i,0,n)
   cin>>del[i];
   vi ans(n);
   bool is[n];
   memset(is,false,sizeof(is));
   for(ll i=n-1;i>=0;i--)
   {
   	for(ll j=0;j<n;j++)
   	{
   		for(ll k=0;k<n;k++)
   		{
   			dp[j][k]=min(dp[j][k],dp[j][del[i]-1]+dp[del[i]-1][k]);
   		}
   	}
   	is[del[i]-1]=true;
   	ll s=0;
   	for(ll j=0;j<n;j++)
   	{
   		for(ll k=0;k<n;k++)
   		{
   			if(is[j]==false||is[k]==false)
   				continue;
   			//if(dp[j][k]!=inf)
   				s+=dp[j][k];
   			//cout<<dp[i][j]<<' ';
   		}
   		//nl;
   	}
   	ans[i]=s;
   }
   for(ll i=0;i<n;i++)
   	cout<<ans[i]<<' ';
} 