#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define sz(x) (int)(x).size()
typedef long long ll;
const int oo = (int) 1e9;
const int mod = (int) 1e9 + 7;
const double PI = acos(-1.0);

const int MAX = 20000005;
const int N = 100009;
int n;
ll a[N];
int color[N];
vector<int> g[N];
int cnt[MAX][2];

void DFS(int u)
{
    color[u] = -1;
    for(int i=0;i<sz(g[u]);i++){
        int v = g[u][i];
        DFS(v);
        color[u] = !color[v];
    }
    if(color[u] == -1) color[u] = 0;
}

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%lld",&a[i]);
    }
    for(int i=1;i<n;i++){
        int p;
        scanf("%d",&p);
        g[--p].pb(i);
    }
    DFS(0);
    ll Xor = 0;
    ll sum0 = 0, sum1 = 0;
    for(int i=0;i<n;i++){
        if(color[i] == 0){
            Xor ^= a[i];
        }
        cnt[a[i]][color[i]]++;
        sum0 += (color[i] == 0);
        sum1 += (color[i] == 1);
    }
    ll res = 0;
    if(Xor == 0){
        res += sum0 * (sum0-1) / 2 + sum1 * (sum1-1) / 2;
        for(int i=0;i<MAX;i++)
            res += 1LL * cnt[i][0] * cnt[i][1];
    }else{
        for(int i=0;i<n;i++){
            if(color[i] == 0) res += cnt[Xor^a[i]][1];
        }
    }
    cout << res << endl;
    return 0;
}
