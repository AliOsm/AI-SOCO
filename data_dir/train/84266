#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
#define endl '\n'
#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define mod 1000000007
#define pi (2*acos(0))

ll fp(ll x , ll exp)
{
    if(exp == 0)
        return 1;
    if(exp % 2 == 0)
        return fp((x * x) % mod, exp / 2) % mod;
   return (((fp((x * x) % mod, exp / 2)) % mod) * x) % mod;
}

ll gcd(ll a , ll b)
{
    if(b == 0)
        return a;
    return gcd(b, a % b);
}

ll fact[1000006], inv[1000006];

void calcFacAndInv(ll n)
{
    fact[0] = inv[0] = 1;
    for (ll i = 1; i <= n; i++)
    {
        fact[i] = (i * fact[i - 1]) % mod;
        inv[i] = fp(fact[i], mod - 2);
    }
}

ll ncr(ll n, ll r)
{
    return ((fact[n] * inv[r]) % mod * inv[n - r]) % mod;
}

ll npr(ll n, ll r)
{
    return (fact[n] * inv[n - r]) % mod;
}

bool prime[1000000];
void sieve(int n)
{
    memset(prime, 1, sizeof (prime));
    prime[1] = 0;
    for(ll i = 2; i <= n;i++)
        for(ll j = 2; j * i <= n; j++)
            prime[i * j] = 0;
}

int p[200005], rnk[200005];
map<string, int> mp;
int findp(int x)
{
    if (p[x] == x)
        return x;
    return p[x] = findp(p[x]);
}

bool iscon(int x, int y)
{
    if (findp(x) == findp(y))
        return true;
    return false;
}

void con(int x, int y)
{
    int px = findp(x), py = findp(y);
    if (rnk[px] > rnk[py])
        p[py] = px;
    else if (rnk[px] < rnk[py])
        p[px] = py;
    else
        p[px] = py, rnk[px]++;
}

int main()
{
    ENGZ
    int n, m, q, x, y, z;
    string s, k;
    cin >> n >> m >> q;
    for (int i = 1; i <= n; i++)
    {
        cin >> s;
        mp[s] = i;
        p[i] = i;
        p[i + 100001] = i + 100001;
    }
    while (m--)
    {
        cin >> x >> s >> k;
        y = mp[s], z = mp[k];
        if (x == 1)
        {
            if (iscon(y + 100001, z) || iscon(y, z + 100001))
                cout << "NO\n";
            else
                cout << "YES\n", con(y, z), con(y + 100001, z + 100001);
        }
        else
        {
            if (iscon(y + 100001, z + 100001) || iscon(y, z))
                cout << "NO\n";
            else
                cout << "YES\n", con(y + 100001, z), con(y, z + 100001);
        }
    }
    while (q--)
    {
        cin >> s >> k;
        y = mp[s], z = mp[k];
        if (iscon(y, z) || iscon(y + 100001, z + 100001))
            cout << "1\n";
        else if (iscon(y, z + 100001) || iscon(y + 100001, z))
            cout << "2\n";
        else
            cout << "3\n";
    }
    return 0;
}
