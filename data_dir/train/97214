#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>
#include <queue>
#include <set>
#include <map>

using namespace std;

const int maxn = 2222;

int n, h[maxn];
vector<int> pos[maxn];
int answer[3][maxn];
int kAnswer;
int len, nowAns[maxn];

void writeAnswer() {
    cout << "YES\n";
    for (int i = 0; i < 3; i++) {
        for (int j = 1; j <= n; j++)
            cout << answer[i][j] << " ";
        cout << "\n";
    }
    exit(0);
}

void rec(int x) {
    if (x == 2001) {
        for (int i = 1; i <= len; i++)
            answer[kAnswer][i] = nowAns[i];
        kAnswer++;
        if (kAnswer == 3) {
            writeAnswer();
        }
        return;
    }
    if (pos[x].empty()) { rec(x + 1); return; }
    vector<int> p;
    for (int i = 0; i < (int)pos[x].size(); i++) {
        p.push_back(pos[x][i]);
    }
    do {
        for (size_t i = 0; i < p.size(); i++) {
            nowAns[++len] = p[i];
        }
        rec(x + 1);
        len -= (int)p.size();
    } while (next_permutation(p.begin(), p.end()));
}

long long sum(long long x) {
    return (x * (x + 1)) / 2;
}

bool check(long long n, long long x) {
    long long miKol = 3 * sum(x) - x;
    if (miKol <= n && miKol % 3 == n % 3) return true;
    return false;
}

int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios_base::sync_with_stdio(0);

    long long n;

    cin >> n;

    int res = 0;

    for (int i = 1, r = 1e7; i <= r; i++) {
        if (check(n, i)) res++;
    }

    cout << res << "\n";

    return 0;
}
