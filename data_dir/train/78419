#include <stdio.h>

struct sEdge {
    int v;
    int prev;
    int rev;
    bool skip;
} e[800009];
int ee = 1;
int first[100009];

int deg[400009];

void AddEdge(int u, int v)
{
    e[ee].v = v;
    e[ee].prev = first[u];
    e[ee].rev = ee+1;
    first[u] = ee;
    ee++;

    e[ee].v = u;
    e[ee].prev = first[v];
    e[ee].rev = ee-1;
    first[v] = ee;
    ee++;

    deg[u]++;
    deg[v]++;
}

int circuit[400009];
int len = 0;
void Euler(int v)
{
    while (first[v]) {
        int cur = first[v];
        first[v] = e[cur].prev;
        e[ e[cur].rev ].skip = true;

        if (!e[cur].skip) {
            Euler(e[cur].v);
            circuit[len++] = e[cur].rev;
        }
    }
}

int main()
{
    //freopen("input.txt", "r", stdin);

    int n, m;
    scanf("%d %d", &n, &m);

    for (int i = 0; i < m; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        AddEdge(u, v);
    }

    int prev = -1;
    for (int i = 1; i <= n; i++) {
        if (deg[i] % 2 == 1) {
            if (prev == -1) prev = i;
            else {
                AddEdge(prev, i);
                prev = -1;
            }
        }
    }

    Euler(1);

    if (len%2 == 1) {
        printf("%d\n", len+1);
        printf("1 1\n");
    }
    else {
        printf("%d\n", len);
    }
    for (int i = 0, v = 1; i < len; i++) {
        if (i%2 == 0) {
            printf("%d %d\n", v, e[ circuit[i] ].v);
        }
        else {
            printf("%d %d\n", e[ circuit[i] ].v, v);
        }
        v = e[ circuit[i] ].v;
    }
}
