#define _CRT_SECURE_NO_WARNINGS
#pragma GCC optimize("O3")
#include <iostream>
#include <string>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <map>
#include <list>
#include <ctime>
#include <bitset>
#include <random>
#include <complex>
#include <tuple>
#include <iomanip>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <numeric>
#include <cstdio>
#include <cassert>
#define fastio ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0)
#define ff first
#define ss second
#define add push_back
#define mp make_pair
#define sz(x) (int)x.size()
#define all(x) x.begin(), x.end()
#define r(x) scanf("%d",&x)
#define rd(x) scanf("%lf",&x)
#define rll(x) scanf("%lld",&x)
#define rc(x) scanf("%c",&x)
#define p(x) printf("%d",x)
#define pll(x) printf("%lld",x)
#define	pc(x) printf("%c",x)
#define seg(s,x,i) s.substr(x,i) 
#define rev(x) reverse(all(x))
#define ps printf(" ")
#define pe printf("\n")
using namespace std;
template<class C> void mini(C &a, C b) { a = min(a, b); }
template<class C> void maxi(C &a, C b) { a = max(a, b); }
template<class C> C min3(C a, C b, C c) { return min(min(a, b), c); }
template<class C> C sq(C a) { return a * a; };
typedef long long ll; typedef long double ld;
typedef pair<int, int> pii; typedef pair<ll, ll> pll;
typedef vector<int> vi; typedef vector<ll> vll; typedef vector<vi> vvi;
typedef vector<string> vs; typedef vector<pii> vpi;

inline void Problem()
{	
    string a,b;
    cin>>a>>b;
    vector<char> g = { 'a','i','u','o','e'};
    if (sz(a)!=sz(b))
    {
        cout<<"No";
    }
    else
    {
        for (int i = 0;i<sz(a);++i)
        {   
            bool fa = 0, fb = 0;
            for (char c : g)
            {
                if (c == a[i])
                {
                    fa = 1;
                }
                if (c == b[i])
                {
                    fb = 1;
                }
            }
            if (fa != fb)
            {   
                cout<<"No";
                return;
            }
        }
        cout<<"Yes";
    }
}

int main()
{
	fastio;
	Problem();
	return 0;
}