#include <bits/stdc++.h>

using namespace std;

#define mx 15
#define int long long
#define pii pair <int, int>
#define piii pair <pii, int>
#define fi first
#define se second
#define mod 1000000007
#define inf 1e9+19
#define pb push_back
#define mem(ara, x) memset(ara, x, sizeof ara)
#define read() freopen("in.txt", "r", stdin)
#define write() freopen("out.txt", "w", stdout)
#define fst ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

int ara[mx][mx], vis[105][4];
pii dat[105];
pii dp[105][4];
pii dis[4][4][12][12][12][12];

bool isInside(int x, int y, int N){
    if (x >= 1 && x <= N && y >= 1 && y <= N)
        return true;
    return false;
}

pii piiplus(pii a, pii b){
    return {a.fi+b.fi, a.se+b.se};
}

void clacshort(int a, int b, int c, int d, int e, int f){

}

void calc(int n){
    int dxk[] = {-2, -1, 1, 2, -2, -1, 1, 2};
    int dyk[] = {-1, -2, -2, -1, 1, 2, 2, 1};
    int dxb[] = {1, -1};
    int dyb[] = {1, -1};
    int dxr[] = {1, -1, 0, 0};
    int dyr[] = {0, 0, 1, -1};
    for(int i=0;i<3;i++)
        for(int j=0;j<3;j++)
            for(int l=1;l<=n;l++)
                for(int k=1;k<=n;k++)
                    for(int o=1;o<=n;o++)
                        for(int p=1;p<=n;p++)
                            dis[i][j][l][k][o][p] = {inf, inf};
    for(int i=0;i<3;i++)
        for(int l=1;l<=n;l++)
            for(int k=1;k<=n;k++)
                dis[i][i][l][k][l][k] = {0, 0};
    for(int i=0;i<3;i++)
        for(int j=0;j<3;j++)
            for(int l=1;l<=n;l++)
                for(int k=1;k<=n;k++)
                    if(i!=j)
                        dis[i][j][l][k][l][k] = {1, 1};

    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            int x, y;
            for (int l=0;l<8;l++){
                x = i + dxk[l];  y = j + dyk[l];
                if(isInside(x, y, n)){
                    dis[1][1][i][j][x][y] = {1, 0};
                }
            }
            for (int l=1;l<=n;l++){
                for(int a=0;a<2;a++){
                    for(int b=0;b<2;b++){
                        x = i + dxb[a]*l; y = j + dyb[b]*l;
                        if(isInside(x, y, n)){
                            dis[2][2][i][j][x][y] = {1, 0};
                        }
                    }
                }
                for(int k=0;k<4;k++){
                    x = i + dxr[k]*l; y = j + dyr[k]*l;
                    if(isInside(x, y, n)){
                        dis[0][0][i][j][x][y] = {1, 0};
                    }
                }
            }
        }
    }
    for(int i=0;i<3;i++)
        for(int l=1;l<=n;l++)
            for(int k=1;k<=n;k++)
                for(int a=0;a<3;a++)
                    for(int b=0;b<3;b++)
                        for(int o=1;o<=n;o++)
                            for(int p=1;p<=n;p++)
                                for(int q=1;q<=n;q++)
                                    for(int r=1;r<=n;r++)
                                        dis[a][b][o][p][q][r] = min(dis[a][b][o][p][q][r], piiplus(dis[a][i][o][p][l][k], dis[i][b][l][k][q][r]));

}

pii rec(int i, int typ, int n){
    if(i==n*n) return {0, 0};
    if(vis[i][typ]) return dp[i][typ];
    vis[i][typ] = 1;
    pii ans;
    pii ret1 = piiplus(rec(i+1, 0, n), dis[typ][0][dat[i].fi][dat[i].se][dat[i+1].fi][dat[i+1].se]);
    pii ret2 = piiplus(rec(i+1, 1, n), dis[typ][1][dat[i].fi][dat[i].se][dat[i+1].fi][dat[i+1].se]);
    pii ret3 = piiplus(rec(i+1, 2, n), dis[typ][2][dat[i].fi][dat[i].se][dat[i+1].fi][dat[i+1].se]);
    ans  = min(ret1, min(ret2, ret3));
    return dp[i][typ] = ans;
}

int32_t main(){
    //read();
    fst;
    int n, k;
    while(cin >> n){
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                cin >> ara[i][j];
                dat[ara[i][j]] = {i, j};
            }
        }
        mem(vis, 0);
        calc(n);
        pii ans = {inf, inf};
        for(int i=0;i<3;i++) ans = min(ans, rec(1, i, n));
        cout << ans.fi << " " << ans.se << endl;
    }
    return 0;
}
