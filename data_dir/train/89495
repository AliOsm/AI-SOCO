//let's do it
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 1000001

ll maxi=-inf,cnt,dp[maxn],arr[maxn],dp1[maxn];
vector<ll>v[maxn];

void dfs(ll cur,ll par)
{
    dp[cur]=arr[cur];
    for(ll i=0;i<v[cur].size();i++)
    {
        ll x=v[cur][i];
        if(x==par)
        continue;
        dfs(x,cur);
        dp[cur]+=max(0LL,dp[x]);
    }
    maxi=max(maxi,dp[cur]);
}
void dfs1(ll cur,ll par)
{
    dp1[cur]=arr[cur];
    for(ll i=0;i<v[cur].size();i++)
    {
        ll x=v[cur][i];
        if(x==par)
        continue;
        dfs1(x,cur);
        dp1[cur]+=max(0LL,dp1[x]);
    }
    if(dp1[cur]==maxi)
    {
        cnt++;
        dp1[cur]=0;
    }
}
int main()
{
    boost1;boost2;
    ll i,j,n,x,y;
    cin>>n;
    for(i=1;i<=n;i++)
    cin>>arr[i];
    for(i=1;i<=n-1;i++)
    {
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
    }
    dfs(1,-1);
    dfs1(1,-1);
    cout<<maxi*cnt<<" "<<cnt;
    return 0;
}
