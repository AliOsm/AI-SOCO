/*
                _                _____             _                 
     /\        (_)              / ____|           (_)                
    /  \   _ __ _ _   _ _ __   | (___   __ _ _ __  _  ___  _____   __
   / /\ \ | '__| | | | | '_ \   \___ \ / _` | '_ \| |/ _ \/ _ \ \ / /
  / ____ \| |  | | |_| | | | |  ____) | (_| | | | | |  __/  __/\ V / 
 /_/    \_\_|  | |\__,_|_| |_| |_____/ \__,_|_| |_| |\___|\___| \_/  
              _/ |                               _/ |                
             |__/                               |__/                 
*/

#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define f first
#define s second
#define let(x,a) __typeof(a) x(a)
#define all(a) (a).begin(),(a).end() 
#define endl '\n'
#define present(c,x) ((c).find(x) != (c).end()) 
#define tr(v,it) for(let(it,v.begin()); it != v.end(); it++)
#define rtr(v,it) for(let(it,v.rbegin()); it != v.rend(); it++)

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#define ll long long int
#define pii pair<int,int>
#define vi vector<int>

using namespace std;

int lx[200000],ly[200000],rx[200000],ry[200000],llx[200000],lly[200000],lrx[200000],lry[200000],rlx[200000],rly[200000],rrx[200000],rry[200000];
int x1,Y1,x2,y2,n;

bool hoo(int i) {
	if(i==0) {
		if(rlx[1]<=rrx[1] && rly[1]<=rry[1]) {
			x1=rlx[1], Y1=rly[1];
			return true;
		} else {
			return false;
		}
	} else if(i==n-1) {
		if(llx[n-2]<=lrx[n-2] && lly[n-2]<=lry[n-2]) {
			x1=llx[n-2], Y1=lly[n-2];
			return true;
		} else {
			return false;
		}
	} else {
		if(llx[i-1]>lrx[i-1] || lly[i-1]>lry[i-1] || rlx[i+1]>rrx[i+1] || rly[i+1]>rly[i+1])
			return false;
		x1=max(llx[i-1],rlx[i+1]);
		Y1=max(lly[i-1],rly[i+1]);
		x2=min(lrx[i-1],rrx[i+1]);
		y2=min(lry[i-1],rry[i+1]);
		if(x1<=x2 && Y1<=y2) {
			return true;
		} else {
			return false;
		}
	}
}

void foo(int i, int j, int t) {
	if(t==0) {
		llx[i]=max(llx[j],lx[i]);
		lly[i]=max(lly[j],ly[i]);
		lrx[i]=min(lrx[j],rx[i]);
		lry[i]=min(lry[j],ry[i]);
	} else {
		rlx[i]=max(rlx[j],lx[i]);
		rly[i]=max(rly[j],ly[i]);
		rrx[i]=min(rrx[j],rx[i]);
		rry[i]=min(rry[j],ry[i]);
	}
} 

int main() {
	ios::sync_with_stdio(false);
	cin>>n;
	for(int i=0;i<n;i++) {
		cin>>lx[i]>>ly[i]>>rx[i]>>ry[i];
	}
	llx[0]=lly[0]=rlx[n-1]=rly[n-1]=INT_MIN;
	lrx[0]=lry[0]=rrx[n-1]=rry[n-1]=INT_MAX;
	for(int i=0;i<n;i++) {
		if(i==0) foo(i,i,0);
		else foo(i,i-1,0);
	}
	for(int i=n-1;i>=0;i--) {
		if(i==n-1) foo(i,i,1);
		else foo(i,i+1,1);
	}
	for(int i=0;i<n;i++) {
		//trace4(llx[i],lly[i],lrx[i],lry[i]);
		//trace4(rlx[i],rly[i],rrx[i],rry[i]);
		if(hoo(i)) {
			//trace1(i);
			cout<<x1<<" "<<Y1<<endl;
			return 0;
		}
	}
	return 0;
}