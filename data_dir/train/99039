//Solution by Tima
#include <bits/stdc++.h>
 
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define ld long double
#define pii pair<int, int>
#define y1 sda
 
using namespace std;    
const int N = int(1e6) + 12, mod = int(1e9)  + 7; 

int n, m, used[N], was[N], p[N];
ll a[N], val[N];

vector <int> g[N];

pair <vector <int>,int > rb[N];

mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

bool cmp(int i,int j) {
	return g[i] < g[j];
}

void solve(){
	scanf("%d%d", &n, &m);

	for(int i = 1; i <= n; i++){
		scanf("%lld", &a[i]);
		p[i] = i;
	}
	for(int i = 1,u,v; i <= m; i++){
		scanf("%d%d", &u, &v);
		g[v].pb(u);
		val[u] += a[v];
	}
	ll d = 0;
	for(int i = 1; i <= n; i++) {
		sort(g[i].begin(), g[i].end());
		rb[i] = mp(g[i], i);
	}
	sort(rb + 1, rb + n + 1);
	for(int i = 1; i <= n; i++){
		d = __gcd(val[i],d);
	}      
	ll res = 0;
	for(int i = 1; i <= n; i++){
		res += a[rb[i].s];
		if(i == n || rb[i].f != rb[i + 1].f){
			if(rb[i].f.size() > 0) d = __gcd(d, res);
			res = 0;
		}
	}
	
	for(int i = 1; i <= n + n; i++){
		used[i] = 0;
		val[i] = 0;
		g[i].clear();
	}
	printf("%lld\n", d);


}

int main () {
	int T = 1;
	scanf("%d", &T);

	while(T--){
		solve();
	}

return 0;
}