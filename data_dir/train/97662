#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double

const int N  = 1e5+15;


ll dp[N];
ll pre[N];
ll L[N],R[N];

ll getVal(int ind){
	return pre[ind]- pre[ind-1];
}

ll getSeg(int i,int c,int n){
	assert(i+c-1<=n);
	return min(R[i], L[i+c-1]);
}
void solve(){
	int n,c;
	scanf("%d%d",&n,&c);
	for(int i=1;i<=n;++i){
		int a;
		scanf("%d",&a);
		pre[i] = pre[i-1] + a;
	}
	if(n<c){
		printf("%lld\n", pre[n]);
		return;
	}
	for(int i=1;i<=n;i+=c){
		int r = min(n,i + c-1);
		L[i] = getVal(i);
		for(int j=i+1;j<=r;++j){
			L[j] = min(L[j-1], (ll)getVal(j));
		}
		R[r] = getVal(r);
		for(int j=r-1;j>=i;--j){
			R[j]= min(R[j+1], (ll)getVal(j));
		}
	}

	for(int i=1;i<=n+1;++i){
		dp[i]= 1e18;
	}
	dp[1] = 0;
	for(int i=1;i<=n;++i){
		ll prev = dp[i];
		dp[i+1]= min(dp[i+1], prev + getVal(i));

		if(i+c-1<=n){
			dp[i+c] = min(dp[i+c], prev + pre[i+c-1]- pre[i-1] - getSeg(i,c,n));
		}
	}

	printf("%lld\n", dp[n+1]);
}
int main(){
	//freopen("input.txt","r",stdin);
	solve();
}