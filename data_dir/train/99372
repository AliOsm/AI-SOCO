#include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
int arr[2100];
long long fact[2100];
long long dp[2100][2100];
long long solve(int m ,int k)
{
    if(k==0) return fact[m];
    if(k==1) return (fact[m] * m)%mod;
    if(dp[m][k] != -1) return dp[m][k];
    return dp[m][k] = ((m * solve(m , k-1))%mod + ((k-1) * solve(m+1 , k-2))%mod )%mod;
}
int main()
{
    fact[1] = fact[0] = 1;
    for(int i = 2 ; i<= 2000 ; i++) fact[i] =(fact[i-1] * i)%mod;
    int n;
    cin>>n;
    int m = 0 , k = 0,sum = 0;
    set<int>st;
    for(int i = 0 ; i<n ; i++) {cin>>arr[i]; if(arr[i] != -1) st.insert(arr[i]);}
    for(int i = 0 ; i<n ; i++)
    {
        if(arr[i] == -1)
        {
            if(st.find(i+1) == st.end()) k++;
            sum++;
        }
    }
    m = sum - k;
    memset(dp , -1 ,sizeof dp);
    cout<<solve(m,k)<<endl;
    return 0;
}
