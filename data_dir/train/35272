#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update> ordered_set;

typedef long long LL;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef pair<LL, LL> PLL;

#define FOR(i, a, b) for(int i = (a);i < (b);++i)
#define RFOR(i, b, a) for(int i = (b) - 1;i >= (a);--i)
#define ALL(a) a.begin(), a.end()
#define SZ(a) (int)a.size()
#define PB push_back
#define MP make_pair
#define EB emplace_back
#define f first
#define s second	

const int MOD = 1000 * 1000 * 1000 + 7;
const int INF = 1000 * 1000 * 1000;
const LL LINF = 1ll * INF * INF;
const double PI = acos(-1.0);
const int MAXN = 2 * 1e5 + 7;

int cntl[MAXN][2], cntr[MAXN][2];

int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	int n;
	string s;
	cin >> n >> s;
	
	LL ans = 0;
	ans = (LL)n * (n - 1) / 2;
	set<PII> st;
	FOR(i, 0, n-1)
	{
		if (s[i] != s[i + 1])
		{
			int j = i + 1;
			while(j < n && s[j] == s[i + 1])
			{
				st.insert({i, j});
				++j;
			}
		}
	}
	RFOR(i, n, 1)
	{
		if (s[i] != s[i - 1])
		{
			int j = i - 1;
			while(j >= 0 && s[j] == s[i - 1])
			{
				st.insert({j, i});
				--j;
			}
		}
	}

	cout << ans - SZ(st) << "\n";
	
	return 0;
}
