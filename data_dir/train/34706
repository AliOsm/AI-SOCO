#include <bits/stdc++.h>                                                                                                                                                                                                                        ///Bismillah

#define fast ios_base::sync_with_stdio();   cin.tie(0);   cout.tie(0);
#define randoperation srand(time(0));
#define pii pair < int , int >
#define pll pair < ll, ll >
#define pb push_back
#define pf psuh_front
#define mp make_pair
#define fi first
#define se second
#define fast ios_base::sync_with_stdio();   cin.tie(0);   cout.tie(0);
#define randoperation srand(time(0));
#define eb emplace_back

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const ll N = 1e5 + 7;
const ld pi = 3.14159265359;
const int INF = 1e9 + 7;

const double eps = 1e-9;

///scanf ("%d%d", &x, &y);
///printf("%d", &a)

const int xi[4] = {0, +1, 0, -1};
const int yi[4] = {+1, 0, - 1, 0};

const int horx[8] = {-2, -1, +1, +2, +2, +1, -1, -2};
const int hory[8] = {+1, +2, +2, +1, -1, -2, -2, -1};

int ans, n, t[N], a;

int main(){

  //freopen("ladder.in", "r", stdin);
  //freopen("ladder.out", "w", stdout);

  fast
  randoperation;

  ///           ||
  ///start here \/

  cin >> n >> a;

  for(int i = 1; i <= n; i++){
    cin >> t[i];
  }

  int l = a;
  int r = a;

  while(1){
    if(l == 0 && r == n + 1){
      break;
    }

    if(l == 0){
      if(t[r] == 1){
        ans++;
        l = max(0, l - 1);
        r = min(n + 1, r + 1);
        continue;
      }
    }

    if(r == n + 1){
      if(t[l] == 1){
        ans++;
        l = max(0, l - 1);
        r = min(n + 1, r + 1);
        continue;
      }
    }

    if(t[l] == 1 && t[r] == 1 && l == r){
      ans++;
    }
    else if(t[l] == 1 && t[r] == 1 && l != r){
      ans += 2;
    }
    l = max(0, l - 1);
    r = min(n + 1, r + 1);
  }

  cout << ans;
}
