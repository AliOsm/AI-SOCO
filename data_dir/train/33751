#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define ll long long
#define ld long double
using namespace std;
const int N = 2e5 + 5;
ll n, k, a[N], c[N], nxt[N];
vector<int>anss[N];
bool ok(int sz){
    for(int i = 0; i < N; i++)
        anss[i].clear();
    vector<int>v;
    for(int i = 0; i < n; i++)
        v.push_back(a[i]);
    int idx = 0, s = 0, cnt[N] = {};
    while(!v.empty()){
        if(c[v.back()] > cnt[idx % sz])
            cnt[idx % sz]++, anss[idx % sz].push_back(v.back()), v.pop_back(), s = 0;
        else
            idx++, s++;
        if(s > sz)
            return 0;
    }
    return v.empty();
}
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    cin >> n >> k;
    for(int i = 0; i < n; i++)
        cin >> a[i];
    for(int i = 1; i <= k; i++)
        cin >> c[i];
    sort(a, a + n);
    int s = 1, e = n, mid, ans = n;
    while(s <= e){
        mid = s + e >> 1;
        if(ok(mid))
            ans = mid, e = mid - 1;
        else
            s = mid + 1;
    }
    ok(ans);
    cout << ans << '\n';
    for(int i = 0; i < ans; i++){
        cout << anss[i].size() << ' ';
        for(auto j : anss[i])
            cout << j << ' ';
        cout << '\n';
    }
    return 0;
}
