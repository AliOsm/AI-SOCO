#include <bits/stdc++.h>
using namespace std;


int par[2*(int)1e5+5];
int findp(int u){
    if(u==par[u])return u;
    return par[u]=findp(par[u]);
}
int main(){
    int n,m;
    scanf("%d %d",&n,&m);


    vector<pair<long long,int> >cost;
    for(int i=1;i<=n;i++){
        long long val;
        scanf("%lld",&val);
        cost.push_back(make_pair(val,i));
    }
    sort(cost.begin(),cost.end());

    vector<pair<long long,pair<int,int> > >offer;
    for(int i=1;i<=m;i++){
        int u,v;
        long long w;
        scanf("%d %d %lld",&u,&v,&w);
        offer.push_back(make_pair(w,make_pair(u,v)));
    }
    if(m)sort(offer.begin(),offer.end());

    for(int i=1;i<=n;i++)par[i]=i;

    long long res=0;
    int idx=0;
    for(int i=1;i<cost.size();i++){
        int u=cost[0].second;
        long long wu=cost[0].first;

        int v=cost[i].second;
        long long wv=cost[i].first;

        while(idx<(int)offer.size() && offer[idx].first<wu+wv){
            int pu=findp(offer[idx].second.first);
            int pv=findp(offer[idx].second.second);

            if(pu!=pv){
                par[pu]=pv;
                res+=offer[idx].first;
            }
            idx++;
        }

        int pu=findp(u);
        int pv=findp(v);

        if(pu!=pv){
            par[pu]=pv;
            res+=wu+wv;
        }

    }

    printf("%lld\n",res);


    return 0;
}

