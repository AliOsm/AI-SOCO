#include <bits/stdc++.h>

#ifdef NJUDGE
#include "igba.h"
#endif

using namespace std;

long long w, cnt[9], ans = 0;
int memo[9][840 * 9];

int dp(int x, int s = 0)
{
	if(x == 9)
		return s;
	int ret = 0;
	if(memo[x][s] != -1)
		return memo[x][s];
	for(int i = 0; i <= cnt[x] && x * i + s <= w; ++i)
		ret = max(ret, dp(x + 1, x * i + s));
	return memo[x][s] = ret;
}

int main()
{
	scanf("%lld", &w);
	memset(memo, -1, sizeof memo);
	for(int i = 1; i <= 8; ++i)
	{
		scanf("%lld", &cnt[i]);
		long long x = min(w / 840, cnt[i] / (840 / i));
		w -= x * 840;
		ans += x * 840;
		cnt[i] -= x * (840 / i);
		// while(cnt[i] >= 840 / i && w >= 840)
			// w -= 840, ans += 840, cnt[i] -= 840 / i;
		// cnt[i] %= 840 / i;
	}
	printf("%lld\n", ans + dp(1));
}