#include <bits/stdc++.h>
using namespace std;

typedef complex<int> point;
typedef long long int lli;
typedef long double ld;
#define pii pair<int,int>
#define lasB(b) (b&(-b))
#define pld pair<ld,ld>
#define mod 1000000007
#define PI acos(-1.0)
#define PB push_back
#define N      2003
#define EPS (1e-8)
#define ss substr
#define S second
#define IM image
#define F first
#define RE real
#define B begin
#define E end

struct poi{ld x,y;};
double dist(poi a,poi b)
{
    return hypot(a.x-b.x,a.y-b.y);
}

int n;
poi f1,f2;
ld sol=1e17;
vector<pld>all;
ld MtN[N];

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cin>>n>>f1.x>>f1.y>>f2.x>>f2.y;
    all.PB({-1e17,-1e17});
    for(int i=1;i<=n;i++)
    {
        poi X;
        cin>>X.x>>X.y;
        all.PB({dist(X,f1),dist(X,f2)});
    }
    sort(all.B(),all.E());
    if(n==1)
        return cout<<fixed<<setprecision(0)<<min(all[1].F*all[1].F,all[1].S*all[1].S),0;
    for(int i=n;i>0;i--)
        MtN[i]=max(all[i].S,MtN[i+1]);
    for(int i=0;i<=n;i++)
    {
        ld t1 = all[i].F , t2 = MtN[i+1];
        sol = min(sol,t1*t1+t2*t2);
    }
    cout<<fixed<<setprecision(0)<<min(sol,min(all[n].F*all[n].F,MtN[1]*MtN[1]) );
    return 0;
}
