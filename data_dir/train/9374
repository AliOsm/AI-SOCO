#include <bits/stdc++.h>
using namespace std;

const int N = 1e3 + 5;

int n,dp[N][5],ans;

int main(){



    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;

    for (int i = 1;i <= n;i++){

        int x;
        cin >> x;
        if (x == 0)
            dp[i][0] = max(dp[i - 1][0],max(dp[i - 1][1],dp[i - 1][2]));
        if (x == 1)
            dp[i][1] = max(dp[i - 1][1],max(dp[i - 1][2] + 1,dp[i - 1][0] + 1)),
            dp[i][0] = max(dp[i - 1][1],max(dp[i - 1][2],dp[i - 1][0]));
        if (x == 2)
            dp[i][2] = max(dp[i - 1][2],max(dp[i - 1][1] + 1,dp[i - 1][0] + 1)),
            dp[i][0] = max(dp[i - 1][1],max(dp[i - 1][2],dp[i - 1][0]));
        if (x == 3){

            dp[i][1] = max(max(dp[i - 1][1],dp[i - 1][2] + 1),dp[i - 1][0] + 1);
            dp[i][2] = max(max(dp[i - 1][1] + 1,dp[i - 1][2]),dp[i - 1][0] + 1);
            dp[i][0] = max(dp[i - 1][1],dp[i - 1][2]);
        }
    }
    ans = N;
    for (int i = 1;i <= n;i++){

        ans = min(ans,n - dp[i][1]);
        ans = min(ans,n - dp[i][2]);
        ans = min(ans,n - dp[i][0]);
    }
    cout << ans;

}
