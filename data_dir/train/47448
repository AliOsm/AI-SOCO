#include <bits/stdc++.h>
using namespace std;
const int N = 2e5 + 10;
int n, roots[N], last[N], after[N];
void Build(){
	for (int i=1; i<=n; i++){
		roots[i] = i;
		last[i] = i;
	}
}
int getRoot(int x){
	if (roots[x] == x){
		return x;
	}
	return roots[x] = getRoot(roots[x]);
}
void merge(int x, int y){
	int x_root = getRoot(x);
	int y_root = getRoot(y);
	after[last[x_root]] = y_root;
	last[x_root] = last[y_root];
	roots[y_root] = x_root;
}
int main(){
	// freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w", stdout);
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin>>n;
	Build();
	for (int i=1; i<=n-1; i++){
		int x, y;
		cin>>x>>y;
		merge(x, y);
	}
	int cur = getRoot(1);
	for (int i=1; i<=n; i++){
		cout<<cur<<" ";
		cur = after[cur];
	}
}