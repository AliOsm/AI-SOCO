#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
ll n,m,s,t,dis[1005][1005],edg[1005][1005],res;
vector<vector<ll>> v(1005);
void bfs(ll i){
    vector<ll> vis(n+1,0);
    queue<ll> q;
    q.push(i);
    vis[i]=1;
    while(!q.empty()){
        ll x=q.front();
        q.pop();
        for(ll j=0;j<v[x].size();j++)
        if(!vis[v[x][j]]){
            vis[v[x][j]]=1;
            dis[i][v[x][j]]=dis[i][x]+1;
            q.push(v[x][j]);
        }
    }
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    cin>>n>>m>>s>>t;
    for(ll i=0;i<m;i++){
        ll a,b;
        cin>>a>>b;
        v[a].push_back(b);
        v[b].push_back(a);
        edg[a][b]=1;
        edg[b][a]=1;
    }
    for(ll i=1;i<=n;i++)
    bfs(i);
    for(ll i=1;i<=n;i++)
    for(ll j=i+1;j<=n;j++)
    if(!edg[i][j]){
        ll lo=dis[s][i]+dis[i][j]+dis[j][t];
        lo=min(lo,dis[s][j]+dis[i][j]+dis[i][t]);
        if(lo-dis[i][j]+1>=dis[s][t])
        res++;
    }
    cout<<res;
}