#include <bits/stdc++.h>
#define pb push_back
#define f first
#define s second
#define endl '\n'
typedef long long ll;
typedef long double ld;
using namespace std;


const int N = 1e5 + 10;
int n;
ll a[N];
vector<int> g[200];
int d[200], pre[200];
int shortest = -1;

void bfs(int st) {
  fill(d, d + n + 1, 0);
  fill(pre, pre + n + 1, 0);

  queue<int> bfs;
  bfs.push(st);
  d[st] = 1;

  while (bfs.size()) {
    int i = bfs.front(); bfs.pop();
    for (int j : g[i]) {
      if (pre[i] == j) continue;
      if (d[j] != 0) {
        int len = 1;
        while (d[i] > d[j]) {
          i = pre[i]; len++;
        }

        while (d[j] > d[i]) {
          j = pre[j]; len++;
        }
        while (j != i) {
          i = pre[i];
          j = pre[j];
          len += 2;
        }
        shortest = shortest == -1 ? len : min(shortest, len);
        while (bfs.size()) bfs.pop();
        return;
      } else {
        d[j] = d[i] + 1;
        pre[j] = i;
        bfs.push(j);
      }
    }
  }
}

int main(){
  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%lld", a + i);
  }
  for (int bit = 0; bit < 62; bit++) {
    vector<int> v;
    for (int i = 1; i <= n; i++) {
      if (a[i] >> bit & 1) {
        v.pb(i);
      }
    }
    if (v.size() >= 3) {
      printf("3\n");
      return 0;
    }
  }

  // remove zeros
  sort(a + 1, a + 1 + n);
  int i = 1;
  while (i <= n && a[i] == 0) ++i;
  if (i > n) {
    cout << "-1\n";
    return 0;
  }
  vector<ll> tmp(a + i, a + 1 + n);
  n = tmp.size();
  for (int i = 1; i <= n; i++) {
    a[i] = tmp[i - 1];
  }
  // now we know n <= 124

  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= n; j++) {
      if (i != j && (a[i] & a[j])) {
        g[i].pb(j);
      }
    }
  }

  for (int i = 1; i <= n; i++) 
    bfs(i);
  printf("%d\n", shortest);

  return 0;
}