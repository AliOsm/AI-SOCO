#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
#include <utility>
#include <string>
#include <cstring>
#include <queue>
#include <algorithm>
#include <cmath>
using namespace std;
#define fi first
#define se second
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define EPS 1E-9
#define x1 x111
#define y1 y111
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> pii;
// real solution
int N,V , t[100010],p[100010];
vector<int> t1,t2;
vector<int> s1,s2;
bool compare(const int& f,const int& s){
  return p[f]>p[s];
}
vector<int> ans;
int main(){
  scanf("%d%d",&N,&V);
  for(int i=0;i<N;++i){
   scanf("%d%d",&t[i] , &p[i]);
   if(t[i]==1)t1.pb(i);
   else t2.pb(i);
                      }
  sort(all(t1) , compare); s1.resize(t1.size());
  sort(all(t2) , compare); s2.resize(t2.size());
  if(sz(t1)){s1[0]=p[t1[0]]; for(int i=1;i<sz(t1);++i)s1[i]=s1[i-1]+p[t1[i]];}
  if(sz(t2)){s2[0]=p[t2[0]]; for(int i=1;i<sz(t2);++i)s2[i]=s2[i-1]+p[t2[i]];}
  int bs=0 , bp1=0 , bp2=0;
  for(int take1=0;take1<=min(V , sz(t1));++take1){
   int take2=min(sz(t2) , (V-take1)/2);
   int cs=(take1?s1[take1-1]:0)+(take2?s2[take2-1]:0);
   if(cs>bs){bs=cs; bp1=take1; bp2=take2;}
                                                 }
  for(int i=0;i<bp1;++i)ans.pb(t1[i]+1);
  for(int i=0;i<bp2;++i)ans.pb(t2[i]+1);
  printf("%d\n" , bs);
  for(int i=0;i<sz(ans);++i)printf("%d%c" , ans[i] , (i+1==sz(ans))?'\n':' ');
  //system("pause");
  return 0;
}
