#include <bits/stdc++.h>
using namespace std;

#define REP(i, n) for(int i = 0; i < n; i++)
#define clr(t, val) memset(t, val, sizeof(t))

#define all(v)  v.begin() , v.end()
#define SZ(v) ((int)(v).size())

typedef long long Long;
typedef vector<int> vInt;
typedef vector<vInt> vvInt;
typedef vector<string> vStr;
typedef vector<vStr> vvStr;
typedef pair<int, int> Pair;
typedef pair<Long, Long> PairLong;
typedef vector<Pair> vPair;
typedef vector<vPair> vvPair;
typedef vector<PairLong> vPairLong;
typedef vector<Long> vLong;
typedef tuple<int, int, int> Tuple;
typedef long double LongDouble;

const int MOD = (int)1e9 + 7;
const int MAX_N = (int)1e6 + 1;
int POW2[MAX_N + 1];
void initPow() {
	POW2[0] = 1;
	for (int i = 1; i <= MAX_N; i++) {
		POW2[i] = POW2[i - 1] << 1;
		if (POW2[i] >= MOD) {
			POW2[i] -= MOD;
		}
	}	
}

int getSum(int cnt) {
	assert(cnt <= MAX_N);
	int ans = (POW2[cnt] - 1);
	if (ans < 0) {
		ans += MOD;
	}
	return ans;
}

int main() {
	ios_base :: sync_with_stdio(false);
	initPow();
	string s;
	while (cin >> s) {
		int ans = 0;
		int cntA = 0;
		for (auto c:s) {
			if (c == 'a') {
				cntA ++;
			} else {
				ans += getSum(cntA);
				if (ans >= MOD) {
					ans -= MOD;
				}
			}
		}
		cout << ans << '\n';
	}
}

