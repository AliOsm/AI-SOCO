#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> PI;
const int MAX_N=200000+10;
int cover[MAX_N*4];
inline void down(int idx){
	if(cover[idx]!=-1)
		cover[idx<<1]=cover[idx<<1|1]=cover[idx];
	cover[idx]=-1;
}
void modify(int l,int r,int ql,int qr,int col,int idx){
	if(l==ql && r==qr) cover[idx]=col;
	else{
		down(idx);
		int mid=(l+r)>>1;
		if(qr<=mid) modify(l,mid,ql,qr,col,idx<<1);
		else if(ql>mid) modify(mid+1,r,ql,qr,col,idx<<1|1);
		else modify(l,mid,ql,mid,col,idx<<1),modify(mid+1,r,mid+1,qr,col,idx<<1|1);
	}
}
int query(int l,int r,int pos,int idx){
	if(l==r) return cover[idx];
	int mid=(l+r)>>1;
	down(idx);
	if(pos<=mid) return query(l,mid,pos,idx<<1);
	return query(mid+1,r,pos,idx<<1|1);
}
int num[MAX_N],a[MAX_N];
int main(){
	int n,m,opt,r;
	scanf("%d%d",&n,&m);
	memset(cover,-1,sizeof cover);
	for(int i=1;i<=n;i++)
		scanf("%d",a+i);
	for(int i=1;i<=m;i++){
		scanf("%d%d",&opt,&r);
		modify(1,n,1,r,opt,1);
	}
	int l;
	for(int i=n;i>=1;i--){
		if(query(1,n,i,1)!=-1){
			l=1,r=i;
			break;
		}else{
			num[i]=a[i];
		}
	}
	sort(a+1,a+1+r);
	for(int i=r;i>=1;i--){
		if(query(1,n,i,1)==2){
			num[i]=a[l++];
		}else{
			num[i]=a[r--];
		}
	}
	for(int i=1;i<=n;i++)
		printf("%d ",num[i]);
	puts("");
	return 0;
}