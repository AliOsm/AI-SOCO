#include <bits/stdc++.h>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl

using namespace std;
typedef long long  ll;
const int N = 1e5 + 4;

vector<pair<int , int> > adj[N];
int n , m , k;

int p[N] , sz[N] , spV[N];
vector<pair<pair<int , int> , int> > elist;

void init(){
    iota(p , p + N , 0); // 0 1 2 3
    memset(sz , 0 , sizeof sz);
    elist.clear();
}

int f(int u){
    return p[u] = (p[u] == u ? u : f(p[u]));
}

void join(int u , int v){
    u = f(u) , v = f(v);
    if(u == v)
        return;
    if(sz[u] > sz[v])
        swap(u , v);
    p[u] = v;
    sz[v] += sz[u];
    spV[v] += spV[u];
}

int theOne = -1;

int mst(){
    int ret = 0;
    sort(all(elist) , [](pair<pair<int , int> , int> a , pair<pair<int ,int> , int> b){
            return a.second < b.second;
    });
    for(int i = 0 ; i < (int)elist.size() ; ++i){
        int u = elist[i].first.first , v = elist[i].first.second , cost = elist[i].second;
        if(f(u) == f(v))continue;
        if(spV[f(theOne)] == k)break;
//        watch(u) , watch(v) , watch(cost);
        join(u , v);
        ret = max(ret , cost);
    }
    return ret;
}
int main() {
#ifndef ONLINE_JUDGE
  freopen("input.txt", "r" , stdin);
#endif
    init();
    cin >> n >> m >> k;
    vector<int> sp(k);

    for(int &x : sp)
        cin >> x , spV[x] = 1;
    theOne = sp[0];

    for(int i = 0 ; i < m ; ++i){
        int u , v , w;
        cin >> u >> v >> w;
        elist.pb({{u , v} , w});
    }


    int mx_path = mst();
    for(int i = 0 ; i < k ; ++i)
        cout << mx_path << ' ';
    cout << '\n';
}
