#include <iostream>
#include <vector>
#include <map>
using namespace std;
int n;
long long k, ans;
long long a[100005];
long long pref[100005];
vector<long long> powk;
map<long long, long long> cnt;
int main(){
	cin>>n>>k;
	for (int i=1; i<=n; i++){
		cin>>a[i];
	}
	for (int i=1; i<=n; i++){
		pref[i] = pref[i-1] + a[i];
	}
	if (k == -1){
		powk.push_back(-1);
	}
	powk.push_back(1);
	if (k != -1 && k != 1){
		long long res = k;
		while (1e14 >= res){
			powk.push_back(res);
			res = res * k;
		}
	}
	for (int i=0; i<powk.size(); i++){
		long long cur = powk[i];
		cnt[0]++;
		for (int j=1; j<=n; j++){
			long long diff = pref[j] - cur;
			if (cnt.count(diff) == true){
				auto it = cnt.find(diff);
				long long temp = it->second;
				ans = ans + temp;
			}
			cnt[pref[j]]++;
		}
		cnt.clear();
	}
	cout<<ans;
}