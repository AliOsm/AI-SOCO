#include<bits/stdc++.h>
using namespace std;
const int N = 1e5;
map<int, vector<int>> e[N];
map<int, unsigned long long > a[N];
set<int> used[N];
int timer;


void dfs(int v, int col) {
    if (used[v].find(col) != used[v].end()) {
        return;
    }
    used[v].insert(col);
    a[v][timer / 64] |= 1ll<<(timer % 64);
    for (int to : e[v][col]) {
        dfs(to, col);
    }
}


main() {
#ifndef ONLINE_JUDGE
    freopen("1.txt", "r", stdin);
#endif // ONLINE_JUDGE

    int n, m;
    scanf("%d%d", &n, &m);

    while (m--) {
        int x, y, z;
        scanf("%d%d%d", &x, &y, &z);
        x--; y--;
        e[x][z].push_back(y);
        e[y][z].push_back(x);
    }

    for (int v = 0; v < n; v++)
        for (auto i : e[v])
            if (used[v].find(i.first) == used[v].end()) {
                dfs(v, i.first);
                timer++;
            }

    scanf("%d", &m);

    while (m--) {
        int x, y, ans = 0;
        scanf("%d%d", &x, &y);
        x--; y--;
        if (a[x].size() > a[y].size()) {
            swap(x, y);
        }
        for (auto i : a[x]) {
            auto j = a[y].find(i.first);
            if (j != a[y].end()) {
                ans += __builtin_popcountll(i.second & j->second);
            }
        }
        printf("%d\n", ans);
    }

    return 0;
}
