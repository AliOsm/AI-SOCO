#include <bits/stdc++.h>
using namespace std;
struct IO{
    #define In(x,i) auto i=x.begin();i!=x.end();i++
    #define cinv(x,n) {for (int i=0;i<n;i++){int t; in >> t; x.pb(t);}}
    #define pii pair<int,int>
    #define pb push_back
    #define pii pair<int,int>
    #define sz(x) ((int)(x.size()))
    #define finds(y,x) (y.find(x)!=y.end())
    #define Ignore cin.ignore().get()
    #define PI 3.14159265359
    #define fi first
    #define E3 (1e3+5)
    #define E4 (1e4+5)
    #define E5 (1e5+5)
    #define E6 (1e6+5)
    #define N(x) const int N = x
    #define se second
    #define all(x) x.begin(),x.end()
    //IO
    #define _ ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
    #define print(x) for (auto i : x) cout << i << " "
    #define printl(x) for (auto i : x) cout << i << '\n'
    #define what(x) cerr << #x << " is " << x << endl
    #define pc putchar
    #define nxt cout << '\n'
    #define W8 cin.ignore().get()
    //Typedefs
    #define veci vector<int>
    #define ll long long
    inline IO operator>>(int &p)const{int re=0;register int n=0,sign=1,a=getchar();while(a<'0'||a>'9'){ if(a=='-'){sign=-1;a=getchar();break;}a=getchar();}while(a>='0' && a<='9'){n=(n<<1)+(n<<3)+a-'0';a=getchar();}p = n*sign;return *this;}
    inline IO operator>>(double &x) const { scanf("%lf", &x); return *this; }
    inline IO operator>>(char &x) const { do { x = getchar(); } while (x == ' ' || x == '\n'); return *this; }
    inline IO operator>>(char *x) const { scanf("%s", x); return *this; }
    inline IO operator<<(const int n)const{char d[10];int l = n;short int i=0;if(l<0){pc('-');l=-l;}do{d[i++]=l%10+'0';l=l/10;}while(l);while(i)pc(d[--i]);pc('\n'); return *this;}
    inline IO operator<<(const double x) const { printf("%lf", x); return *this; }
    inline IO operator<<(const char x) const { putchar(x); return *this; }
    inline IO operator<<(const char *x) const { printf("%s", x); return *this; }
}in,out;
typedef long long lint;

lint n;
lint hi=1e9,mid,lo;

lint f(lint m){
	return (m+1)/2+(m/2)*2;
}
int main(){
	cin >> n;
	while(hi-lo>1){
		mid = (hi+lo)/2;
		if (f(mid)>n)
			hi = mid;
		else
			lo = mid;	
	}
	if (f(hi)==n)
		cout << hi;
	else
		cout << lo;
}