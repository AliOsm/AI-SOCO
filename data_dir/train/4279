#include<bits/stdc++.h>
using namespace std;
//#define int long long 
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define F first
#define S second
int const M=1e5+10;
vector<int>ro[M],col[M],maxx[M];
int indx[M],indc[M];
int x[M],y[M];
bool check(int x,int y)
{
	if(x<0 || ro[x].size()==0)return 0;
	if(ro[x][(int)ro[x].size()-1]<y)return 0;
	int ind=lower_bound(ro[x].begin(),ro[x].end(),y)-ro[x].begin();
	return (ro[x][ind]==y);
}
bool check2(int x,int y)
{	
	if(x<0 || col[x].size()==0)return 0;
	if(col[x][(int)col[x].size()-1]<y)return 0;
	int ind=lower_bound(col[x].begin(),col[x].end(),y)-col[x].begin();
	return (col[x][ind]==y);

}
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)scanf("%d%d",&x[i],&y[i]),ro[x[i]].pb(y[i]),col[y[i]].pb(x[i]);
	for(int i=0;i<=1e5;i++)sort(ro[i].begin(),ro[i].end()),sort(col[i].begin(),col[i].end());
	//for(int i=1;i<=1e5;i++)col[i].insert(1e9+10),ro[i].insert(1e9+10);
	int ans=0;
	for(int i=1;i<=n;i++)
	{
		if(ro[x[i]].size()<col[y[i]].size())
		{
			for(int j=0;j<ro[x[i]].size();j++)
			{
				int now;
				if(y[i]>ro[x[i]][j])
					now=x[i]+y[i]-ro[x[i]][j];
				else now=x[i]-y[i]+ro[x[i]][j];
				if(y[i]<ro[x[i]][j] && check(now,y[i]) && check(now,ro[x[i]][j]))ans++;
			}
		}
		else
		{
			for(int j=0;j<col[y[i]].size();j++)
			{
				int now;
				//if(col[y[i]][j]==x[i])continue;
				//int tmp=x[i]-col[y[i]][j];
				if(x[i]>col[y[i]][j])now=y[i]+x[i]-col[y[i]][j];
				else now=y[i]-x[i]+col[y[i]][j];
				if(x[i]<col[y[i]][j] && check2(now,x[i]) && check2(now,col[y[i]][j]))ans++;
			}
		}
	}
	cout<<(ans);
}
