#include<bits/stdc++.h>

//#pragma GCC optimize("fast-math")

using namespace std;

#define DIM 200009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define amen exit(0)
#define fast ios_base::sync_with_stdio(false);

long long i,j,k,l,n,m,res,start,finish;

priority_queue<pairll,vector<pairll>,greater<pairll> >q;

vector<long long>a[DIM],ta[DIM];

long long vis[DIM],dist[DIM];

vector<long long>nums;

int main(){

    fast;

    cin>>n>>m;
    for(i=1;i<=m;i++){
        cin>>k>>l;
        a[l].push_back(k);
        ta[k].push_back(l);
    }

    cin>>k;
    for(i=1;i<=k;i++){
        cin>>l;
        nums.push_back(l);
    }

    finish=nums[k-1];

    for(int i=0;i<DIM;i++){
        dist[i]=INF;
    }

    dist[finish]=0;

    q.push({0,finish});

    while(!q.empty()){
        pairll p=q.top();
        q.pop();

        if(vis[p.se])continue;
        vis[p.se]=1;

        //cout<<"!"<<' '<<p.se<<' '<<p.fi<<endl;

        for(auto to:a[p.se]){
            if(vis[to]==0 && dist[to]>p.fi+1){
                dist[to]=p.fi+1;
                q.push({p.fi+1,to});
            }
        }
    }

//    for(i=1;i<=n;i++)cout<<dist[i]<<' ';
//    cout<<endl;

    long long res1=0,res2=0;

    for(int i=0;i<nums.size()-1;i++){
        if(dist[nums[i]]!=dist[nums[i+1]]+1)res1++,res2++;
        else{
            for(auto to:ta[nums[i]]){
                if(to!=nums[i+1] && dist[to]+1==dist[nums[i]]){
                    res2++;
                    break;
                }
            }
        }
    }

    cout<<res1<<' '<<res2<<endl;

    amen;
}
