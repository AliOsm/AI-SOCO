#include <bits/stdc++.h>

#define MAX_N 1000010
typedef unsigned long long Hash;
const int SEED = 31;
Hash pw[MAX_N];
Hash adjHash[MAX_N];
int a[MAX_N], b[MAX_N];
int main() {
	int N, M, u, v;
	scanf("%d%d", &N, &M);
	pw[0] = 1;
	for(int i = 1; i < N; i ++)
		pw[i] = pw[i - 1] * SEED;
	for(int i = 0; i < M; i ++) {
		scanf("%d%d", &u, &v);
		u --, v--;
		a[i] = u;
		b[i] = v;
		adjHash[u] += pw[v];
		adjHash[v] += pw[u];
	}
	std::vector<Hash> V;
	for(int i = 0; i < N; i ++) {
		V.push_back(adjHash[i]);
	}
	std::sort(V.begin(), V.end());
	Hash ans = 0;
	for(int i = 0; i < N; i ++) {
		int j = i;
		while(j + 1 < N && V[j] == V[j + 1])
			j ++;
		Hash num = j - i + 1;
		ans += (num - 1) * num / 2;
		i = j;
	}
	for(int i = 0; i < M; i ++) {
		if(adjHash[a[i]] - pw[b[i]] == adjHash[b[i]] - pw[a[i]])
			ans ++;
	}
	std::cout << ans << '\n';
	return 0;
}

