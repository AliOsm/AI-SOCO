#include <bits/stdc++.h>

#define ll long long
#define Ok puts("OK");

using namespace std;

const int N = (int)3e5 + 7;
const int mod = (int)998244353;

int add(int a, int b) {
  return (a + b) % mod;
}

int mul(int a, int b) {
  return (a * 1LL * b) % mod;
}

int n;
pair <int, int> ar[N];
int ans;
int f[N];

void precalc() {
  f[0] = 1;
  for (int i = 1; i < N; i++) {
    f[i] = mul(f[i - 1], i);
  }
}

int cnt[N][2];

map <pair<int, int>, int> mp;

main() {
  precalc();
  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%d %d", &ar[i].first, &ar[i].second);
  }
  sort(ar + 1, ar + n + 1);
  int left, right, res;
  left = 1;
  right = 0;
  res = 1;
  while (left <= n) {
    while (right + 1 <= n && ar[right + 1].first == ar[left].first) {
      right++;
    }
    res = mul(res, f[right - left + 1]);
    left = right + 1;
  }
  ans = add(ans, res);
  for (int i = 1; i <= n; i++)
    swap(ar[i].first, ar[i].second);
  sort(ar + 1, ar + n + 1);
  left = 1;
  right = 0;
  res = 1;
  while (left <= n) {
    while (right + 1 <= n && ar[right + 1].first == ar[left].first) {
      right++;
    }
    res = mul(res, f[right - left + 1]);
    left = right + 1;
  }
  ans = add(ans, res);
  res = 1;
  for (int i = 1; i < n; i++) {
    res &= (ar[i].second <= ar[i + 1].second);
  }
  for (int i = 1; i <= n; i++) {
    mp[ar[i]]++;
    res = mul(res, mp[ar[i]]);
  }
  ans = add(ans, mod - res);
  printf("%d\n", add(f[n], mod - ans));
}
