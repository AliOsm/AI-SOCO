#include <bits/stdc++.h>
using namespace std;

typedef pair<long long, long long> P;

long long cross(P a, P b) {
	return a.first * b.second - a.second * b.first;
}

P subtract(P a, P b) {
	return P(a.first - b.first, a.second - b.second);
}

int main() {
	int n;
	long long w, v, u;
	cin >> n >> w >> v >> u;

	vector<P> ps(n);
	for (int i = 0; i < n; i++) {
		long long x, y;
		scanf("%lld %lld", &x, &y);
		ps[i] = make_pair(x, y);
	}

	P z(v, u);

	// straight-forward
	bool ok = true;
	bool ok2 = true;
	for (int i = 0; i < n; i++) {
		if (cross(z, ps[i]) > 0) ok = false;
		if (cross(z, ps[i]) < 0) ok2 = false;
	}
	if (ok || ok2) {
		printf("%.20f\n", (double)w / u);
		return 0;
	}

	// wait
	double X, Y;
	for (int i = 0; i + 2 < ps.size(); i++) {
		int j = i + 1;
		int k = i + 2;
		P d1 = subtract(ps[j], ps[i]);
		P d2 = subtract(ps[k], ps[j]);
		if (cross(d1, z) >= 0 && cross(z, d2) >= 0) {
			X = ps[j].first;
			Y = ps[j].second;
		}
	}

	double Z = max(0.0, X / v - Y / u);
	printf("%.20f\n", (double)w / u + Z);
}