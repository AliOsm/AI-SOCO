#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n;
const int MAXN = 100005;
int a[MAXN], dp[MAXN][6];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 0; i < n; i++)
		cin >> a[i];

	for(int i = 1; i < n; i++)
		for(int j = 1; j <= 5; j++)
		{
			dp[i][j] = -1;
			for(int k = 1; k <= 5; k++)
				if(dp[i - 1][k] != -1)
				{
					if(a[i] > a[i - 1] && j > k)
						dp[i][j] = k;
					if(a[i] < a[i - 1] && j < k)
						dp[i][j] = k;
					if(a[i] == a[i - 1] && j != k)
						dp[i][j] = k;
				}
		}

	for(int j = 1; j <= 5; j++)
	{
		if(dp[n - 1][j] == -1)
			continue;
		vector<int> ans;
		ans.push_back(j);
		int curr = j;
		for(int i = n - 1; i > 0; i--)
		{
			ans.push_back(dp[i][curr]);
			curr = dp[i][curr];
		}
		for(int i = ans.size() - 1; i >= 0; i--)
			cout << ans[i] << " ";
		cout << "\n";
		return 0;
	}

	cout << -1 << "\n";
	return 0;
}
