#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>

typedef long long ll;
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 2000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000007;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// -------------------------------------------------------------------------------------------------------------

char B[15][15];

bool ok()
{
    f(i,1,6) f(j,1,10)
    {
        int cnt = 0;
        f(i2,i,i+4) if(B[i2][j] == 'X') cnt++;
        if(cnt == 5) return true;
    }
    f(i,1,10) f(j,1,6)
    {
        int cnt = 0;
        f(j2,j,j+4) if(B[i][j2] == 'X') cnt++;
        if(cnt == 5) return true;
    }
    f(i,1,6) f(j,1,6)
    {
        int cnt = 0;
        f(d,0,4) if(B[i+d][j+d] == 'X') cnt++;
        if(cnt == 5) return true;
    }
    f(i,1,6) f(j,5,10)
    {
        int cnt = 0;
        f(d,0,4) if(B[i+d][j-d] == 'X') cnt++;
        if(cnt == 5) return true;
    }
    return false;
}

bool win()
{
    f(i,1,10) f(j,1,10) if(B[i][j] == '.')
    {
        B[i][j] = 'X';
        if(ok()) return true;
        B[i][j] = '.';
    }
    return false;
}

int main()
{
    f(i,1,10)
    {
        string s;
        cin >> s;
        f(j,1,10) B[i][j] = s[j-1];
    }
    if(win()) cout << "YES";
    else cout << "NO";
}

