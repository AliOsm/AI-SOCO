#include <string.h>
#include <assert.h>
#include <cassert>
#include <unordered_map>
 
#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stack>
#include <queue>
#include <set>
 
#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
#include <cassert>
 
#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf
 
#define pf printf
#define mp make_pair
#define pir pair<int,int>
#define N 311100
 
const int mod = 998244353;

using namespace std;

ll gcd(ll a, ll b) {
	return b?gcd(b,a%b):a;
}

ll lcm(ll a, ll b) {
	ll t = gcd(a,b);
	return a/t*b;
}

ll lg[N],rg[N];
ll d[N];
int main(){
	int n;
	cin>>n;
	fr(i,1,n+1) {
		cin>>d[i];
	}

	lg[1] = d[1];
	for(int i = 2; i <=n; ++i) {
		lg[i] = gcd(d[i],lg[i-1]);
	}

	rg[n] = d[n];
	for(int i = n-1; i >=1; --i) {
		rg[i] = gcd(d[i], rg[i+1]);
	}

	 ll ans = 1;
	for(int i = 1; i <=n; ++i) {
		if(i==1) {
			ans = lcm(d[i], rg[i+1]);
			//printf("i = %d gcd = %d\n",i,lcm(d[i],rg[i+1]));
		}
		else if(i==n){
			ans = gcd(ans, lcm(d[i], lg[i-1]));
			//printf("i = %d gcd = %d\n",i,lcm(d[i],lg[i-1]));
		}
		else {
			ans = gcd(ans, lcm(d[i], gcd(rg[i+1],lg[i-1])));
			//printf("i = %d gcd = %d\n",i,lcm(d[i],gcd(lg[i-1],rg[i+1])));
		}
		//printf("i = %d ans = %d\n",i,ans);
	}
	cout<<ans<<endl;
}

