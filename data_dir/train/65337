#include <bits/stdc++.h>

using namespace std ;

const int MAXN = 1e5 + 10 ;
const int MAX = 3e7 ;

int arr[MAXN] , exist[MAXN] , to[MAX][2] , Min[MAX][2] ;
int n , q ;

vector<int>Div[MAXN] ;

int cnt = 1e5+1 ;

void Insert(int d , int x)
{
	int cur = d ;
	for(int i = 16 ; i >= 0 ; --i)
	{
		bool a = (x & (1 << i)) ;
		if(!to[cur][a])
			to[cur][a] = cnt++ ;
		Min[cur][a] = min(Min[cur][a] , x) ;
		cur = to[cur][a] ;
	}
	return ;
}

int Query(int x , int k , int s)
{
	int cur = k ;
	int y = s-x ;
	if(y <= 0)
		return -1 ;
	int ans = 0 ;
	for(int i = 16 ; i >= 0 ; --i)
	{
		if(Min[cur][0] > y && Min[cur][1] > y)
			break ;
		bool a = (x & (1 << i)) ;
		if(a && to[cur][0])
			cur = to[cur][0] ;
		else if(!a && to[cur][1] && Min[cur][1] <= y)
			ans += (1 << i) , cur = to[cur][1] ;
		else if(to[cur][0])
			cur = to[cur][0] ;
		else
			ans += (1 << i) , cur = to[cur][1] ;
	}
	if(!ans)
		ans = -1 ;
	return ans ;
}

int main()
{
	ios_base::sync_with_stdio(0) ;
	cin.tie(0) ;
	for(int i = 0 ; i < MAX ; ++i)
		Min[i][0] = Min[i][1] = 1e9 ;
	for(int i = 1 ; i < MAXN ; ++i)
	{
		for(int j = i ; j < MAXN ; j += i)
			Div[j].push_back(i) ;
	}
	cin>>q ;
	while(q--)
	{
		int type ;
		cin>>type ;
		if(type == 1)
		{
			int x ;
			cin>>x ;
			if(exist[x])
				continue ;
			exist[x] = 1 ;
			for(auto &d : Div[x])
				Insert(d , x) ;
		}
		else if(type == 2)
		{
			int x , k , s ;
			cin>>x>>k>>s ;
			if(x%k != 0)
				cout<<-1<<"\n" ;
			else
				cout<<Query(x , k , s)<<"\n" ;
		}
	}
	return 0 ;
}		