#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>
#include <cmath>
#include <algorithm>
#include <map>
#include <vector>
using namespace std;
typedef long long LL;
const int N = 300005;
const int inf = 10000005;
int n , k ;
pair <double , int> x[N];
LL sum[N];
int main () {
    #ifndef ONLINE_JUDGE
        freopen ("input.txt" , "r" , stdin);
    #endif
    scanf ("%d" , &n);
    for (int i = 1 ; i <= n ; i ++) {
        x[i].second = i;
        scanf ("%lf" , &x[i].first);
        // scanf ("%d" , &x[i]);
    }
    sort (x + 1 , x + 1 + n);
    for (int i = 1 ; i < n;  i ++) {
        sum[i] = sum[i - 1] + x[i + 1].first - x[i].first;
    }
    scanf ("%d" , &k);
    double ans = 0 ;int s = 1 , e = k;
    double prefix = 0 , suffix = 0;
    for (int i = 1 ; i < k ; i ++) {
        prefix += sum[i];
        ans += 1.0 * (x[i + 1].first - x[i].first) * (1.0 * i * (k - i));
    }
    for (int i = k - 1 ; i >= 1 ; i --) {
        suffix += sum[k - 1] - sum[i - 1]; 
    }
    double ret = ans;
    for (int i = k ; i < n ; i ++) {
        // cout << prefix << " " << suffix << endl;
        ans -= prefix;
        suffix -= 1.0 * (sum[i - 1] - sum[i - k]);
        // cout << suffix << endl;
        suffix += 1.0 * (x[i + 1].first - x[i].first) * (k - 1);
        ans += suffix;
        prefix -= 1.0 * (x[i - k + 2].first - 1.0 * x[i - k + 1].first) * (k - 1);
        prefix += 1.0 * (sum[i] - sum[i - k + 1]);
        // cout << ans << endl;
        if (ans < ret) {
            ret = ans;
            e = i + 1;
            s = e - (k - 1);
        }
    }
    // cout << ret << endl;
    for (int i = s ; i <= e ; i ++) {
        printf ("%d " , x[i].second);
    }
    return 0;
}