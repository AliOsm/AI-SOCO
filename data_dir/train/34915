#include <bits/stdc++.h>
using namespace std;
#define ll long long

struct Q {
    int l, r, k, i;
    bool operator < (const Q &oth) const {
        return l < oth.l;
    }
};

const int N = 3e5 + 5, T = 70, INF = 2e9;
int a[N], p[N], ans[N];
vector<int> v[N], s;
vector<Q> qr;

int main()
{
#ifdef HOME
    freopen("input.txt", "r", stdin);
#endif
    int n, q;
    scanf("%d%d", &n, &q);

    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
        s.push_back(a[i]);
    }

    sort(s.begin(), s.end());

    for (int i = 0; i < n; i++) {
        a[i] = lower_bound(s.begin(), s.end(), a[i]) - s.begin();
        v[a[i]].push_back(i);
    }


    mt19937 rnd(time(0));

    for (int i = 0; i < q; i++) {
        int l, r, k;
        scanf("%d%d%d", &l, &r, &k);
        l--, r--;
        qr.push_back({l, r, k, i});
    }

    sort(qr.begin(), qr.end());

    for (int i = 0; i < q; i++) {
        int l = qr[i].l, r = qr[i].r, k = qr[i].k,
            mn = INF;

        for (int j = 0; j < T; j++) {
            int z = rnd() % (r - l + 1) + l, g = a[z],
                &t = p[g];
            while (t < v[g].size() && v[g][t] < l)
                t++;
            if ((upper_bound(v[g].begin(), v[g].end(), r) - v[g].begin() - t) * k > r - l + 1)
                mn = min(mn, g);
        }
        ans[qr[i].i] = mn == INF ? -1 : s[mn];
    }

    for (int i = 0; i < q; i++)
        printf("%d\n", ans[i]);

    return 0;
}
