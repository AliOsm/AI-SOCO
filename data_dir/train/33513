#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define sz(a) (lld)((a).size())
#define all(c) (c).begin(),(c).end()             
typedef long double ldb;
typedef long long lld;
const lld MOD = 1e9+7;
const lld INF = 1011111111;
const lld LLINF = 1000111000111000111LL;
const ldb EPS = 1e-10;
const ldb PI = 3.14159265358979323;
using namespace std;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
const lld N = 505;
lld a[N][N],dp[4][N][N],pref[8][N][N],val[8][N][N];
vector<pair<lld,pair<lld,lld>>> v;
lld dist(lld x1,lld y1,lld x2,lld y2) {
    return min(abs(x1-x2), abs(y1-y2))+1;
}
lld get(lld k,lld x1,lld y1,lld x2,lld y2) {
    if(x1>x2 or y1>y2) return 0;
    return pref[k][x2][y2] - pref[k][x2][y1-1] - pref[k][x1-1][y2] + pref[k][x1-1][y1-1];
}
bool check(lld x,lld y,lld r1,lld c1,lld r2,lld c2) {
    return (x>=r1 and x<=r2 and y>=c1 and y<=c2);
}
int32_t main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    lld n,m,q;
    cin>>n>>m>>q;
    rep(i,0,n+2) rep(j,0,m+2) a[i][j] = 5;
    rep(i,1,n+1) rep(j,1,m+1) {
        char x;
        cin>>x;
        if(x=='R') a[i][j] = 0;
        if(x=='G') a[i][j] = 1;
        if(x=='Y') a[i][j] = 2;
        if(x=='B') a[i][j] = 3;
    }
    rep(i,1,n+1) rep(j,1,m+1) if(a[i][j]==0) dp[0][i][j] = 1 + min(dp[0][i-1][j-1],min(dp[0][i-1][j],dp[0][i][j-1])); 
    rep(i,1,n+1) repd(j,m,1) if(a[i][j]==1) dp[1][i][j] = 1 + min(dp[1][i-1][j+1],min(dp[1][i-1][j],dp[1][i][j+1]));
    repd(i,n,1) rep(j,1,m+1) if(a[i][j]==2) dp[2][i][j] = 1 + min(dp[2][i+1][j-1],min(dp[2][i+1][j],dp[2][i][j-1]));
    repd(i,n,1) repd(j,m,1) if(a[i][j]==3) dp[3][i][j] = 1 + min(dp[3][i+1][j+1],min(dp[3][i+1][j],dp[3][i][j+1]));
    
    rep(i,1,n+1) rep(j,1,m+1) {
        lld minm = LLINF;
        minm = min(minm, dp[0][i][j]);
        minm = min(minm, dp[1][i][j+1]);
        minm = min(minm, dp[2][i+1][j]);
        minm = min(minm, dp[3][i+1][j+1]);
        if(minm == 0) continue;
        if(minm >= 8) v.pb(mp(minm, mp(i,j)));
        else rep(k,1,minm+1) val[k][i][j]++;
    }
    sort(all(v)), reverse(all(v));
    rep(k,1,8) rep(i,1,n+1) rep(j,1,m+1) pref[k][i][j] = val[k][i][j] + pref[k][i][j-1] + pref[k][i-1][j] - pref[k][i-1][j-1];

    while(q--) {
        lld r1,c1,r2,c2;
        cin>>r1>>c1>>r2>>c2;
        lld ans = 0;
        for(auto i:v) {
            lld x = i.s.f, y = i.s.s;
            if(check(x,y,r1,c1,r2,c2) && check(x+1,y+1,r1,c1,r2,c2) && check(x+1,y,r1,c1,r2,c2) && check(x,y+1,r1,c1,r2,c2)) {
                lld border = i.f;
                border = min(border, dist(x,y,r1,c1));
                border = min(border, dist(x,y+1,r1,c2));
                border = min(border, dist(x+1,y,r2,c1));
                border = min(border, dist(x+1,y+1,r2,c2));
                ans = max(ans, border);
            }
            else continue;
        }
        rep(i,1,8) {
            lld tmp = get(i,r1+i-1,c1+i-1,r2-i,c2-i);
            if(tmp) ans = max(ans, i);
        }

        cout<<(4*ans*ans)<<endl;
    }
    return 0;
}