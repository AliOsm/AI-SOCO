#include <bits/stdc++.h>
using namespace std;
typedef unsigned long long ull;
typedef  long double ldb;
typedef long long ll;
typedef double dbl;
const int inf = 1e9+7;
const ll llinf = 1e18+7;
const dbl eps = 1e-15;
const int mod = 1e9+7;
#define speed ios::sync_with_stdio(false)
#define N 100001
#define lop(i,n) for (int i=0;i<int(n);i++)
#define rng(i,a,b) for (int i=a;i<int(b);i++)

//        Hi      ^_^  hack me if you can ^_^
//int mx[]= {0,0 ,1,-1, 1,1,-1,-1};
//int my[]= {1,-1,0,0 , 1,-1,1 ,-1};
//bool inside (int i,int j){return (i>=0 && i<n && j>=0 && j<m);}
//bool cmp(string x,string y)   {return x+y<y+x;}
ll a [2000];
int main(){
speed;
int n,d,c=0,t;
cin>>n>>d;
cin>>a[0];
for (int i=1;i<n;i++){
cin>>a[i];
    if (a[i-1]>=a[i]){
    c+= t=((a[i-1]-a[i])/d);
    a[i]+=t*d;
    if (a[i-1]>=a[i]){
    a[i]+=d;c++;}
    if (a[i-1]==a[i]){
    a[i]+=d;c++;}
    }
}
cout<<c;
return 0;
}


/////////////////////////////
/*

#include<stdio.h>
int length= 0;
int fact[10000];
void yo(int num);
void hybrid(int num)
{
int i;
for(i=2;i<=num;i++)
{
yo(i);
}
}
void yo(int num)
{
long i,pr=0,r=0;
for(i=0;i<=length;i++)
{
r = (fact[i]*num + pr)/10;
fact[i] = (fact[i]*num + pr)%10;
pr=r;
}
if(pr!=0)
{
while(r!=0)
{
fact[i]=r%10;
r= r/10;
i++;
}
}
length = i-1;
}
int main()
{
int t;
scanf("%d",&t);
while(t--)
{
length=0;
int num;
int i;
scanf("%d",&num);
fact[0]=1;
hybrid(num);
for(i=length;i>=0;i--)
{
printf("%d",fact[i]);
}
printf("\n");
}
return 0;
}
*/
/*
bool prime[100000001];
void siev(){
    for(int i=0;i<100000001;i++) prime[i] = 1;
    for(int i=2;i<100000001;i++){
        if(prime[i]){
            for(int j=i+i;j<100000001;j+=i){
                prime[j] = 0;
            }
        }
    }
}
siev();
prime[1]=0;

int a[100];
int dp[100];
int n,ans=1;
cin>>n;
for (int i=0;i<n;i++) cin>>a[i];
dp[0]=1;
for (int i=0;i<n;i++){
    for (int j=0;j<i;j++)
        if (a[j]<a[i])
            dp[i]=max(dp[i],dp[j]+1);
        ans=max(ans,dp[i]);
   }
cout<<ans;

long long int r,g,b;
    cin>>r>>g>>b;
    cout<<min(min(min((r+g+b)/3,r+g),g+b),r+b);

*/
/*
bool cmp(string a ,string b){
return a+b<b+a;
if( a.length()==b.length() )return a<b;
char c=a[0];

if( a.length()<b.length()){

for(int i=0;i<a.length();i++){
        if( a[i]<b[i] ){return 1;}
        if( a[i]>b[i] ){return 0;}
}

for(int i=a.length();i<b.length();i++){
        if( b[i]<c )return 0;
        if( b[i]>c )return 1;
         }
return 1;
}
else{

 for(int i=0;i<b.length();i++){
        if( b[i]<a[i] ){return 0;}
        if( b[i]>a[i] ){return 1;}

}
for(int i=b.length();i<a.length();i++){
        if( a[i]<c )return 1;
        if( a[i]>c )return 0;
}
return 0;
}
}
cin>>n;
for(int i=0;i<n;i++){
    cin>>s;
   v[s[0]-'a'].push_back(s);
}
for(int i=0;i<26;i++){

  sort(v[i].begin(),v[i].end());

 for(int j=0;j<v[i].size();j++)cout<<v[i][j];
}
cout<<endl;

cin>>n>>p;
for (int i=0;i<n;i++)
    {
        cin>>s[i];
    }
double t=0.0;
for (int i=n-1;i>=0;i--)
if (s[i]=="halfplus")
    {
        c+=0.5;
        t++;
        c*=4.0;
        c/=2;
    }
else {
    c*=4.0;
    c/=2;
}
double ans=double(c)*double(p)-((double(t)/2.0)*double(p));
cout<<int(ans);

int t,s,q,ans=0;
cin>>t>>s>>q;
int down=s;

cout<<ans;
/*
        while(k--){
        int mx=0;
        for (auto e :f)
            if (e.second>mx)
            {
            mx=e.second;
            ans=e.first;
            }
        //f[ans]=0;
        //f.erase(ans);
        cout<<ans<<endl;
        }
        f.clear();
    }


/*
  h=0;
    for (int i=r;i>=1;i--)
        for (int j=c;j>=1;j--){
        if (a[i][j]) h++;
        if ( h>=k) ans++;
        }
    h=0;
    for (int i=1;i<=r;i++)
        for (int j=c;j>=1;j--){
        if (a[i][j]) h++;
        if ( h>=k) ans++;
        }
        h=0;
    for (int i=r;i>=1;i--)
        for (int j=1;j<=r;j++){
        if (a[i][j]) h++;
        if ( h>=k) ans++;
        }

*/
/*    for(i=0;i<n;i++)
bool bkt(int i,ll cursum){

    if (cursum > sum )      return 0;
    if (mem[i][cursum]!=-1) return mem[i][cursum];
    if (cursum>=sum||i==n)  return mem[i][cursum]= (cursum==sum);
    return mem[i][cursum]=(  bkt(i+1,cursum) || bkt(i,cursum+a[i]) );
}
void f(int x,int y)
{
    if(x<0||x>=n||y<0||y>=m) return ;
    if(a[x][y]!='.') return ;
    if(o[x][y]) return ;
    o[x][y]=true;
    f(x+1,y); f(x-1,y);
    f(x,y+1); f(x,y-1);
    if(k) a[x][y]='X',k--;
}

char grid[255][255];
int mx[] = { 0, 0, 1, -1 };
int my[] = { 1, -1, 0, 0 };
int vis[255][255];
int n,m;
bool inside(int x, int y) {
	return x >= 0 && x < n && y >= 0 && y < m;
}

long double Pi=3.14159265358979323846264338327950;

bool cmp(dbl a,dbl b){
    return fabs(a-b) > EPS;
}
bool ok(dbl v,dbl x){
    dbl v2 = v*v;
    // this statement is equal to v*v >= x but we used cmp to check if two doubles are equal
    return cmp(v2,x) == 0 || v2 > x;
}

dbl mySqrt(dbl x){
    dbl lo = 0,hi = x;
    while(cmp(lo,hi)){
        dbl mid = (lo+hi)/2.0;
        if(ok(mid,x))hi = mid;
        else lo = mid;
    }
    return (lo+hi)/2.0;
}


#define pb push_back
using namespace std;
bitset<1000000>p;
vector<long long>pp;
int main(){
    int i,j,k,T;
    long long n;
    for(i=2;i<1000;i++)
        if(!p[i])
            for(j=i+i;j<1000000;j+=i)p[j]=1;
    for(i=2;i<1000000;i++)
        if(!p[i])pp.pb((long long)i*i);
    scanf("%d",&T);
    while(T--){
        scanf("%I64d",&n);
        if(binary_search(pp.begin(),pp.end(),n))puts("YES");
        else puts("NO");
    }
    return 0;
}


long double pwr (long double x,long long e)
{
    long double ans=1;
    while(e){
        if(e&1)ans*=x;
        x*=x;
        e/=2;
    }
    return ans;
}
/////////////////////
Pyramids
////////////////////
#include<stdio.h>
#include<math.h>

int main()
{
	double l3,l4,l5;
	scanf("%lf%lf%lf",&l3,&l4,&l5);
	l3=(sqrt(2)*(l3*l3*l3))/12;
	l4=(sqrt(2)*(l4*l4*l4))/6;
	l5=((5+sqrt(5))*(l5*l5*l5))/24;
	printf("%.10f\n",l3+l4+l5);
	return 0;
}
*/
/*
freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);

ifstream  fin   ("input.txt");
    ofstream  fout  ("output.txt");
stringstream f;

*/
/*
//////*******
bool isKaem(int *c){

    int sides[3] = {0};
    sides[0] = (c[4] - c[2]) * (c[4] - c[2]) + (c[5] - c[3])* (c[5] - c[3]);
    sides[1] = (c[4] - c[0]) * (c[4] - c[0]) + (c[5] - c[1])* (c[5] - c[1]);
    sides[2] = (c[2] - c[0]) * (c[2] - c[0]) + (c[3] - c[1])* (c[3] - c[1]);

    std::sort(sides, sides + 3);
    if(sides[0] > 0 && sides[2] == sides[0] + sides[1]){return 1;}
    else{return 0;}
}

*/
/*

long long ncr(int n,int r)
{
    long long ans=1;
    r=min(r,n-r);n++;
    for(int f=1;f<=r;f++)
    {
        ans*=n-f;
        ans/=f;
    }
    return ans;
}

ll POWER(ll a , int p){
ll f=1;
while(p--){f*=a;}
return f;
}

ll sum(ll a){
ll c=0;
while(a){ c+=a%10LL; a/=10LL; }
return c;
}

bool isTriangle(int a, int b, int c){
return ( (a+b > c) && (a+c > b) && (b+c > a) );
}
bool checkFisagorth(int a, int b, int c){
return ((a*a + b*b) == c*c);
}
double getCircleArea(int a, int b, int c){
return (a*b*c)/sqrt((a+b+c)*(b+c-a)*(c+a-b)*(a+b-c));
}
double getCylinderArea(int a, int b, int c, int h){
return ( h * getCircleArea(a, b, c) );
}


int n,k;
int arr[555][555];
int main(){
	cin>>n>>k;
	int cnt=1;
	for(int i=1;i<=n;i++){
		for(int j=1;j<k;j++){
			arr[i][j]=cnt++;
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=k;j<=n;j++){
			arr[i][j]=cnt++;
		}
	}
	int sol=0;
	for(int i=1;i<=n;i++){
		sol+=arr[i][k];
	}
	cout<<sol<<endl;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++){
			cout<<arr[i][j]<<" ";
		}
		cout<<endl;
	}
*/
/*
int countSubstring(const std::string& str, const std::string& sub)
{
    if (sub.length() == 0) return 0;
    int count = 0;
    for (size_t offset = str.find(sub); offset != std::string::npos;
	 offset = str.find(sub, offset + sub.length()))
    {
        ++count;
    }
    return count;
}

countSubstring(a,b);
*/

/*
l=s.length();
for (int i=0;i<l;i++)
    cout<<s[i]<<" ";

bool prime[1000005];

void siev(){
    for(int i=0;i<1000000;i++) prime[i] = true;
    for(int i=2;i<1000000;i++){
        if(prime[i]){
            for(int j=i+i;j<1000000;j+=i){
                prime[j] = false;
            }
        }
    }
}
*/
/*
#include <bits/stdc++.h>

using namespace std;

const int N = 1234567;

int a[N], x[N], y[N];

int main() {
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; i++) {
    scanf("%d", a + i);
  }
  set <int> used;
  int cnt = 0;
  int from = 0;
  for (int i = 0; i < n; i++) {
    if (used.find(a[i]) != used.end()) {
      x[cnt] = from;
      y[cnt] = i;
      cnt++;
      used.clear();
      from = i + 1;
    } else {
      used.insert(a[i]);
    }
  }
  if (cnt == 0) {
    printf("%d\n", -1);
    return 0;
  }
  y[cnt - 1] = n - 1;
  printf("%d\n", cnt);
  for (int i = 0; i < cnt; i++) {
    printf("%d %d\n", 1 + x[i], 1 + y[i]);
  }
  return 0;
}
*/
/*
// ************************** ppcm
int ppcm(int X,int Y)
{
  int A=X;
  int B=Y;
  while (A!=B)
  {
    while (A>B) B=B+Y;
    while (A<B) A=A+X;
  }
  return A;
}
while ((L%x) || (L%y)) L++;
*/
/*
    pair<int,int> p[102];
    cin>>n>>m;
    for(int i=0 ; i<n ;i++)
    {
        cin>>p[i].first;
        a[i]=p[i].first;
        p[i].second=i+1;
    }
    sort(p,p+n);
    sort(a,a+n);
    for(int i=0 ; i<n ;i++)
    {
        if (sum+p[i].first<=m)
        {x++;sum+=p[i].first;}
        else break;
    }
    cout<<x<<endl;
    for(int i=0 ; i<x ;i++)
    cout<<p[i].second<<" ";
//*********************************** time
void add(){
    b=(b+1)%60;
    if (!b)
    a=(a+1)%24;
    }
int sym(){
    return a/10==b%10&&a%10==b/10;
    }
//********************************** prime numbers
bool isPrime( ll number )
{
 if ( ( (!(number & 1)) && number != 2 ) || (number < 2) || (number % 3 == 0 && number != 3) )
  return false;

 for( int k = 1; 36*k*k-12*k < number;++k)
  if ( (number % (6*k+1) == 0) || (number % (6*k-1) == 0) )
   return false;
  return true;
 }

// **********************************Palindrom
bool isPalindrom(string s){
    int l = s.length();
    int m=l/2+1;
     for( int k = 0; k < m; ++k)
    {
        if (s[i]!=s[l-i-1])
        return false;
    }
    return true;
}
// ***********************************
#include<iostream>
int i,n,m,t,c=4;
int main(){
 std::cin>>n>>m;
 for(;i<m*n;i++){std::cin>>t;if(t)if(i<m||i>m*n-m||i%m==0||i%m==m-1)c=2;}
 std::cout<<c;
}

if(l==1&&s=="0") {cout<<0;return 0;}
printf("%s\n",ans?(ans>0LL?"left":"right"):"balance");
cin>>a>>b;

l=a.length();
k=b.length();

for (i=0;i<l;i++)
if (a[i]!='0') {x=i;break;}
a=a.substr(x,l-x);
if (i==l) aa=1;
for (i=0;i<k;i++)
if (b[i]!='0') {y=i;break;}
b=b.substr(y,k-y);
if (i==k) bb=1;
if (aa&&bb) {cout<<'=';return 0;}
l=a.length();
k=b.length();

      if (l>k) cout<<'>';
else  if (k>l) cout<<'<';
else
    {    if (a>b) cout<<'>';
    else if (b>a) cout<<'<';
    else          cout<<'=';
    }
for (int i=0;i<10;i++)
    for (int j=0;j<10;j++)
    b[i][j]=true;
///////////////////////////////      convert -_-

long long n,c1,c2,p1,p2,r;
long double mx,mn=2e12+50000000000;
long double P=3.141592654;
const int N=101010;
dbl X[N] , Y[N] , x , y ;

dbl pDistance(dbl x,dbl y,dbl x1,dbl y1,dbl x2,dbl y2)
{
  dbl A = x - x1;
  dbl B = y - y1;
  dbl C = x2 - x1;
  dbl D = y2 - y1;

  dbl dot = A * C + B * D;
  dbl len_sq = C * C + D * D;
  dbl param = -1;
  if (len_sq != 0) //in case of 0 length line
      param = dot / len_sq;

  dbl xx, yy;

  if (param < 0) {
    xx = x1;
    yy = y1;
  }
  else if (param > 1) {
    xx = x2;
    yy = y2;
  }
  else {
    xx = x1 + param * C;
    yy = y1 + param * D;
  }

  dbl dx = x - xx;
  dbl dy = y - yy;
  return dx * dx + dy * dy;
}
/////////////////////////////
string f(int n){
string s="";
while(n){
s+= ((n%k)+'0');
n/=k;
}
reverse(s.begin(),s.end());
return s;
}
    }

for (int i=0;i<3;i++)
    for (int j=0;j<3;j++)
    if(a[i][j]==1)
{
int h=i+1,v=j+1;

//b[h-1][v-1]=!b[h-1][v-1];
b[h-1][v]  =!b[h-1][v];
//b[h-1][v+1]=!b[h-1][v+1];

b[h][v-1]=!b[h][v-1];
b[h][v]  =!(b[h][v]);
b[h][v+1]=!b[h][v+1];

//b[h+1][v-1]=!b[h+1][v-1];
b[h+1][v]  =!b[h+1][v];
//b[h+1][v+1]=!b[h+1][v+1];
}
for (int i=1;i<4;i++)
    {for (int j=1;j<4;j++)
    cout<<b[i][j];
    cout<<endl;
    }
for (i=0;i<n;i++)
{
if(s+a[i]>m) ans++,s=a[i];
else s+=a[i];

#define s second
#define f first
    cin>>n;
    for (i=0;i<n;i++)
        cin>>p[i].f>>p[i].s;

           {
            if(p[i].f<(p[j].f) && p[i].s==p[j].s) f1=1;
            if(p[i].f>(p[j].f) && p[i].s==p[j].s) f2=2;
            if(p[i].f==(p[j].f) && p[i].s>p[j].s) f3=3;
            if(p[i].f==(p[j].f) && p[i].s<p[j].s) f4=4;
           }
           if ( f1 && f2 && f3 && f4 )
            ans++;
    }
cout<<ans;
while(n--){
    cin>>c;
    if(c=='A')a++;
    else
        if(c=='I')i++;
}

  if(!i)      cout<<a<<endl;
  else        cout<<(i==j)?1:0;

for (i=0;i<26;i++)
cout<<a[i];
{
if(__builtin_popcount(i^(111111111111))==1 )
{c++;}
}
cout<<c;
cin>>s>>s1>>s2;
int l=s2.length();
if(s2[l-1]=='k')
{
x=s[0]-'0';
if(x==5||x==6) cout<<53;
else cout<<52;
return 0;
}
else {
if(s.length()==1) y=s[0]-'0';
else y=(s[0]-'0')*10+s[1]-'0';
if(y==31) cout<<7;
else if(y==30) cout<<11;
else cout<<12;
}



for (i=1;i<=n;i++) cout<<i<<" ";
std::ios_base::sync_with_stdio(false);
cin>>n;
for (i=0;i<n;i++)
{cin>>a[i];mn=min(mn,a[i]);}
c=mn*n;
for (i=0;i<n;i++)
    a[i]-=mn;

for (i=0;i<n;i++)
if(a[i]==0)
{
t=0;
for (j=i+1;j<n;j++)
{
   if(a[j])
    {t++;}
    else
    {break;}
}
    k=max(k,t);
    i=j-1;
}
for (i=0;i<n;i++)
if (a[i]==0) {x=i;break;}

for (i=n-1;i>=0;i--)
if (a[i]==0) {y=n-i-1;break;}

k=max(k,x+y);
cout<<c+k;
*/
/*

pair<int,int> p[1001];
int main()
{
    std::ios_base::sync_with_stdio(false);
    ll n,s;
    cin>>s>>n;
    for(int i=0 ; i<n ;i++)
    {
        cin>>p[i].first>>p[i].second;
    }
    sort(p,p+n);
    for(int i=0 ; i<n ;i++)
    {
        if(s>p[i].first) s+=p[i].second;
        else {cout<<"NO"<<endl;return 0;}
    }
    cout<<"YES"<<endl;
    return 0;
}
*/
/*

int main()
{
std::ios_base::sync_with_stdio(false);
cout<<n-n/2-n/3-n/7-n/5+n/6+n/14+n/10+n/15+n/21+n/35-n/105-n/70-n/30-n/42+n/210;
return 0;
}
*/
/*
#include<iostream>
using namespace std;
int n,m,k,i,a[10005],s;
main()
{
    cin>>n>>m>>k;
    for(; i<m+1; i++)cin>>a[i];
    for(i=0; i<m; i++)
        if(__builtin_popcount(a[m]^a[i])<=k)s++;
    cout<<s;
}
*/
/*

    cin>>n>>m>>k;
    for(i=0; i<m+1; i++)
        cin>>a[i];
    while(a[m])
            {
            w+= a[m]&1;
            a[m]/=2;
            }
    for(i=0; i<m; i++)
    {
        int c=0;
            while(a[i])
            {
            c+=a[i]& 1;
            a[i]/=2;
            }
        if(w-c<=k)s++;
    }
    cout<<s;
    return 0;
}
*/
/*
int n,s=0,f=0,l=0;
    cin>>n;
    int a[n];
    for(int i=0; i<n; i++) cin>>a[i];
    for( int i=0;  i<n;  i++) if(a[i]) {f=i;break;}
    for(int i=n-1; i>=0; i++) if(a[i]) {l=i;break;}
    for(int i=f; i<=l; i++)
    {
        if(a[i]) {s++;
        if(i+2>n&&a[i+2]) {s+=2;i++;}}
        else
        {
            while(!a[i++]&&i<=l);

        }
    }
    cout<<s;

cin>>k;
for(int i=1;i<k;i++){
    for(int j=1;j<k;j++){
        if( j==1 )cout<<f(i*j);
        else cout<<" "<<f(i*j);
    }
    cout<<endl;

	for(int i=1;i<=4;i++)
		scanf("%s",s[i]),l[i]=strlen(s[i])-2;

				a&=(l[j]>=l[i]*2),b&=(l[i]>=l[j]*2);
		if(a||b)anss++,ans='A'+i-1;
	}
	if(anss!=1)ans='C';
	printf("%c\n",ans);
	return 0;
}
*/

/////////////////////////////////////////////////////////////////////

/*
#include <bits/stdc++.h>
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, N) for (int I = 0; I < (N); ++I)
#define REPP(I, A, B) for (int I = (A); I < (B); ++I)
#define RI(X) scanf("%d", &(X))
#define RII(X, Y) scanf("%d%d", &(X), &(Y))
#define RIII(X, Y, Z) scanf("%d%d%d", &(X), &(Y), &(Z))
#define DRI(X) int (X); scanf("%d", &X)
#define DRII(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define DRIII(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define RS(X) scanf("%s", (X))
#define CASET int ___T, case_n = 1; scanf("%d ", &___T); while (___T-- > 0)
#define MP make_pair
#define PB push_back
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define LEN(X) strlen(X)
#define PII pair<int,int>
#define VI vector<int>
#define VPII vector<pair<int,int> >
#define PLL pair<long long,long long>
#define VPLL vector<pair<long long,long long> >
#define F first
#define S second
typedef long long LL;
using namespace std;
const int MOD = 1e9+7;
const int SIZE = 1e6+10;


*/
/*
#include<iostream>
#include<string>
#include<cstring>
#include<sstream>
#include<cctype>
#include<string.h>
#include<algorithm>
#include<cmath>
#include<stack>
#include<fstream>
#include<cstdlib>
#include<iomanip>
#include<vector>
#include<map>
#include<set>
using namespace std;
string rev(string a){
                    int i,j;
                    string b="";
                    for(i=0,j=a.length()-1;i<a.length();i++,j--)
                            b+=a[j];
                    return b;
                    }
string add(string e, string f){
                                int i,j,x,y,sum,s;
                                string c="";
                                string a,b,d;
                                int temp=0;
                                a=rev(e);
                                b=rev(f);
                                for(i=0;i<a.length();i++)
                                    {
                                    if(i<b.length())
                                            {
                                            x=a[i]-'0';
                                            y=b[i]-'0';
                                            sum=x+y+temp;
                                            s=sum%10;
                                            c+=s+'0';
                                            temp=0;
                                            if(sum>9) temp=1;
                                            if(i==a.length()-1 && temp==1)
                                                c+='1';
                                            }
                                    else {
                                         x=a[i]-'0';
                                         sum=temp+x;
                                         s=sum%10;
                                         c+=s+'0';
                                         temp=0;
                                         if(sum>9) temp=1;
                                            if(i==a.length()-1 && temp==1)
                                                c+='1';
                                         }
                                    }
                                d=rev(c);
                                return d;
                                }

int main()
{
int i,x;
string a,b,e,f,c;
map<int,string>nt;
nt[0]="0";
nt[1]="1";
for(i=2;i<=5000;i++)
    nt[i]=add(nt[i-1],nt[i-2]);
while(cin>>x)
    {
    cout<<"The Fibonacci number for "<<x<<" is "<<nt[x]<<endl;
    }
return 0;
}
*/
/*
ll n,m,x,y,z,p,a,b;
flipx(){
if (x==0) return;

}
flipy(){
if (y==0) return;
}
flipz(){
if (z==0) return;
}
int main(){
speed;
cin>>n>>m>>x>>y>>z>>p;
x%=4;
y%=2;
z%=4;
while(p--){
    cin>>a>>b;
    flipx();
    flipy();
    flipz();
    cout<<a<<' '<<b<<"\n";
}
*/
/*
string s ;
    while(getline(cin,s))
    {
        string temp = "" ;
        int j=s.length();
        for(int i=0;i<j;i++)
        {
            if(s[i] != ' ')
            {
                temp+= s[i] ;
            }
            else
            {
                for(int k=temp.length()-1;k>=0;k--)
                {
                    cout<<temp[k] ;
                }
                cout<<' ';
            }
        }
        cout << endl ;
    }
    string s ;
    while(getline(cin,s))
    {
        string temp = "" ;
        int j=s.length();
        for(int i=0;i<j;i++)
        {
            if(s[i] != ' ' )
            {
                temp+= s[i] ;
            }
            else
            {
                for(int k=temp.length()-1;k>=0;k--)
                {
                    cout<<temp[k] ;
                }
                cout<<' ';
                temp="";
            }
            if (s[i]=='.')
            {
                for(int k=temp.length()-1;k>=0;k--)
                {
                    cout<<temp[k] ;
                }
                temp="";
            }
        }
        cout << endl ;
    }

*/
