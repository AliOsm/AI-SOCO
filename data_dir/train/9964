/**/
#define _USE_MATH_DEFINES
#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define For(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += ((begin) > (end)?-1:1))
#define all( v ) (v).begin(),(v).end()
template<typename T> using V = vector<T>;
typedef long long int ll;
typedef unsigned long long int ull;
/***********************************************/
/*      ____________
 *     /            \
 *    /  /\      /\  \
 *   /  /  \    /  \  \
 *   \                /
 *    \     \___/    /
 *     \____________/
 */
const ll mod = 1000000007;
struct sb{
	size_t c,ind;
	ull a,b;
};
bool cmp(sb a,sb b){
	return a.c < b.c;
}
struct s{
	ull sub;
	size_t lastsub;
	int before;
	bool can;
}DP [51][101][51];

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	size_t N,M;
	ull K;
	cin>>N>>M>>K;
	V<sb> subs(M);
	For(i,0,M)cin>>subs[i].a>>subs[i].b>>subs[i].c,subs[i].ind = i;
	sort(all(subs),cmp);

	pair<size_t,ull> ans;

	For(i,0,M){
		For(j,subs[i].a,subs[i].b+1){
			size_t l = j - subs[i].a;
			DP[i][l][1].sub = j;
			DP[i][l][1].lastsub = 0;
			DP[i][l][1].before = -1;
			DP[i][l][1].can = true;
			For(k,2,N+1){
				DP[i][l][k].sub = 0;
				DP[i][l][k].lastsub = 0;
				DP[i][l][k].before = -1;
				DP[i][l][k].can = false;
				For(z,i,0){
					if(subs[z].c == subs[i].c)
						continue;
					if(j%K == 0 && j/K >= subs[z].a && (j/K-subs[z].a) <= subs[z].b - subs[z].a){
						if(DP[z][j/K - subs[z].a][k-1].can && DP[z][j/K - subs[z].a][k-1].sub + j >= DP[i][l][k].sub){
							DP[i][l][k].sub = DP[z][j/K - subs[z].a][k-1].sub + j;
							DP[i][l][k].lastsub = j/K - subs[z].a;
							DP[i][l][k].can = true;
							DP[i][l][k].before = z;
						}
					}
					if(j >= K + subs[z].a && (j - K - subs[z].a) <= subs[z].b - subs[z].a){
						if(DP[z][j - K - subs[z].a][k-1].can && DP[z][j - K - subs[z].a][k-1].sub + j >= DP[i][l][k].sub){
							DP[i][l][k].sub = DP[z][j - K - subs[z].a][k-1].sub + j;
							DP[i][l][k].lastsub = j - K - subs[z].a;
							DP[i][l][k].can = true;
							DP[i][l][k].before = z;
						}
					}
				}
				//cout<<i<<' '<<l<<' '<<k<<":\n";
				//cout<<boolalpha<<DP[i][l][k].can<<' ';
				//cout<<DP[i][l][k].sub<<' '<<DP[i][l][k].before<<' '<<DP[i][l][k].lastsub<<endl;
			}
			if(DP[i][l][N].can && DP[i][l][N].sub >= DP[ans.first][ans.second][N].sub)
				ans = {i,l};
		}
	}

	//cout<<ans.first<<' '<<ans.second<<' '<<DP[ans.first][ans.second][N].sub<<endl;

	if(!DP[ans.first][ans.second][N].can){
		cout<<"NO"<<endl;
		return 0;
	}
	cout<<"YES"<<endl;


	V<pair<size_t,ull> > res;
	For(i,N+1,1){
		res.pb({subs[ans.first].ind+1,subs[ans.first].a + ans.second});
		ans = {DP[ans.first][ans.second][i].before,DP[ans.first][ans.second][i].lastsub};
	}

	For(i,N,0)cout<<res[i].first<<' '<<res[i].second<<endl;
	return 0;
}
/**/
