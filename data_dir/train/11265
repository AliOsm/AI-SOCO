/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: AmShZ6
 * Time: 2020-05-16 16:05:01
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll A , B , C , D , ans;

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> A >> B >> C >> D;
    for(int i = C ; i <= D ; i++){
        ll l = 2 * B - i , r = B + C - i;
        l = max(l , 1LL);
        if(r < l)   continue;
        ll cnt = min(r + A - B , r - l + 1);
        ans += (B - A + 1) * max(0ll , cnt);
        r = min(r , B - A);
        if(r < l)   continue;
        ans += r * (r + 1) / 2 - l * (l - 1) / 2;
    }
    cout << ans << endl;

    return 0;
}
/*

*/
