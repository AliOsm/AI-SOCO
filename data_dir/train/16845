#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>
#include <assert.h>

#pragma comment(linker, "/stack:200000000")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;
typedef int mt;
typedef double fl;

template<typename T>
constexpr mt infValue = std::is_same<T, int>::value ? 2000100007 : 8600000000000000007ll;
template<typename T>
constexpr mt maxValue = std::is_same<T, int>::value ? 1000000007 : 1000000000000000001ll;

#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= (b); ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

const mt INF = infValue<mt>;
const long long MOD = 998244353ll;
const double EPS = 1e-6;
const mt MAX = maxValue<mt>;
using pr = pair<mt, mt>;

#define N 3
#define K 4
#define P 3
#define M (N * N)
#define p2(x) ((((x) * (x)) % (MOD)))
#define mxy(x, y) ((((x) * (y)) % (MOD)))

pr p[N];
vector<pr> answ;

pr find(pr a, pr b, pr c) {
	mt minX = min(a.first, b.first);
	mt maxX = max(a.first, b.first);
	mt minY = min(a.second, b.second);
	mt maxY = max(a.second, b.second);

	pr r;
	if (c.first > maxX) r.first = maxX;
	else if (c.first < minX) r.first = minX;
	else r.first = c.first;

	if (c.second > maxY) r.second = maxY;
	else if (c.second < minY) r.second = minY;
	else r.second = c.second;

	mt dx = r.first - c.first > 0 ? 1 : -1;
	mt dy = r.second - c.second > 0 ? 1 : -1;
	while (r != c) {
		answ.push_back(c);
		if (r.first != c.first) c.first += dx;
		else c.second += dy;
	}

	return r;
}

void comp(pr a, pr b, pr c) {
	mt dx = c.first - a.first > 0 ? 1 : -1;
	mt dy = c.second - a.second > 0 ? 1 : -1;
	while (a != c) {
		answ.push_back(a);
		if (a.first != c.first) a.first += dx;
		else a.second += dy;
	}

	dx = b.first - a.first > 0 ? 1 : -1;
	dy = b.second - a.second > 0 ? 1 : -1;
	while (a != b) {
		answ.push_back(a);
		if (a.first != b.first) a.first += dx;
		else a.second += dy;
	}
	answ.push_back(a);
}

int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	rep(0, N, i) scanf("%d %d", &p[i].first, &p[i].second);
	pr c = find(p[0], p[1], p[2]);
	comp(p[0], p[1], c);
	printf("%d\n", answ.size());
	for (const auto& pnt : answ) 
		printf("%d %d\n", pnt.first, pnt.second);
			
	return 0;
}