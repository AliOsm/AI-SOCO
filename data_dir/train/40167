////!multi
//void _(){
//    int n;
//    cin >> n;
//    vs arr(n);
//    cin >> arr;
//    map<string,int> seen;
//    map<string,int> exists;
//    for(string s : arr)
//        ++exists[s];
//    int ans = 0;
//    for(string &s : arr){
//        if(seen[s]){
//            ++ans;
//            for(char c = '0'; c <= '9'; ++c){
//                string t = s;
//                t[0] = c;
//                if(!exists[t]){
//                    s = t;
//                    break;
//                }
//            }
//        }
//        ++seen[s];
//        ++exists[s];
//    }
//    print(ans);
//    print(arr,"\n");
//}
//
#include <map>
#include <iomanip>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<string> vs;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 istream& operator>>(istream& stream, vector<T>& t){
    return read(all(t), stream);
}
T1 istream& read(T b, T e, istream& stream){
    for(T it = b; it != e; ++it)
        stream >> *it;
    return stream;
}
T1 void print(T x, string end = "\n"){
    cout << x << end;
}
T1 ostream& print(T b, T e, string sep = " ", ostream& stream = cout){
    for(T it = b; it != e; ++it){
        stream << *it;
        if(it + 1 != e)
            stream << sep;
    }
    return stream;
}
T1 void print(vector<T> arr, string sep = " "){
    if(arr.empty()){
        return;
    }
    print(arr.begin(), arr.end(), sep);
    cout << '\n';
}
//!multi
void _(){
    int n;
    cin >> n;
    vs arr(n);
    cin >> arr;
    map<string,int> seen;
    map<string,int> exists;
    for(string s : arr)
        ++exists[s];
    int ans = 0;
    for(string &s : arr){
        if(seen[s]){
            ++ans;
            for(char c = '0'; c <= '9'; ++c){
                string t = s;
                t[0] = c;
                if(!exists[t]){
                    s = t;
                    break;
                }
            }
        }
        ++seen[s];
        ++exists[s];
    }
    print(ans);
    print(arr,"\n");
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
    int t;
    cin >> t;
    for(int i = 1; i <= t; ++i){
        _();
    }
}
