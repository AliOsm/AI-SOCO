#include <bits/stdc++.h>
using namespace std;


const int N = 1e5 + 7;

int a[N], t[N], dpL[N], dpR[N];


void update(int idx, int val) {++idx;
    for(int i = idx; i < N; i += i & -i)
        t[i] = max(t[i], val);
}

int query(int idx) { int res = 0; ++idx;
    for(int i = idx; i > 0; i -= i & -i)
        res = max(res, t[i]);
    return res;
}

int main() {
    ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, m; cin >> n >> m;
    for(int i = 1; i <= n; i++) {
        int l, r; cin >> l >> r;
        a[l]++;
        a[r + 1]--;
    }
    for(int i = 1; i <= m; i++) a[i] += a[i - 1];

    for(int i = 1; i <= m; i++) {
        dpL[i] = query(a[i]) + 1;
        update(a[i], dpL[i]);
    }
    memset(t, 0, sizeof t);

    for(int i = m; i >= 1; i--) {
        dpR[i] = query(a[i]) + 1;
        update(a[i], dpR[i]);
    }

    int ans = 0;
    for(int i = 1; i <= m; i++) ans = max(ans, dpL[i] + dpR[i] - 1);

    cout << ans << endl;
}
