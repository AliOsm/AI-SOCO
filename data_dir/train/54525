#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>
#include <bitset>
#include <unordered_map>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

vector<pair<pnt,int> > a;
vector<pnt > b;
set<pnt > S;
int ans[100100];
int n, m, s;

bool go(int n)
{
	int l1 = 0, l2 = 0;
	S.clear();
	int sum = 0;
	while (l2 < b.size())
	{
		while ((l1<a.size()) && (a[l1].first.first >= b[l2].first))
		{
			S.insert(mp(a[l1].first.second, a[l1].second));
			l1++;
		}
		if (S.size() == 0)
			return false;
		int v = S.begin()->second;
		sum += S.begin()->first;
		if (sum > s)
			return false;
		S.erase(S.begin());
		int cnt = 0;
		while ((l2 < b.size()) && (cnt < n))
		{
			ans[b[l2].second] = v;
			l2++;
			cnt++;
		}
	}
	return true;
}

int main()
{
#ifdef Fcdkbear
	freopen("in.txt", "r", stdin);
	//freopen("out.txt","w",stdout);
	double beg = clock();
#endif

	scanf("%d%d%d", &n, &m, &s);
	b.resize(m);
	a.resize(n);
	FOR(i, 0, m)
	{
		scanf("%d", &b[i].first);
		b[i].second = i;
	}
	FOR(i, 0, n)
	{
		scanf("%d", &a[i].first.first);
	}
	FOR(i, 0, n)
	{
		scanf("%d", &a[i].first.second);
		a[i].second = i;
	}
	sort(b.rbegin(), b.rend());
	sort(a.rbegin(), a.rend());
	int l = 1;
	int r = m;
	int best = -1;
	while (l <= r)
	{
		int mid = (l + r) / 2;
		if (go(mid))
		{
			best = mid;
			r = mid - 1;
		}
		else
		{
			l = mid + 1;
		}
	}
	if (best == -1)
	{
		cout << "NO" << endl;
	}
	else
	{
		go(best);
		cout << "YES" << endl;
		FOR(i, 0, m)
		{
			if (i)
				printf(" ");
			printf("%d", ans[i] + 1);
		}
		printf("\n");
	}
#ifdef Fcdkbear
	double end = clock();
	fprintf(stderr, "*** Total time = %.3lf ***\n", (end - beg) / CLOCKS_PER_SEC);
#endif
	return 0;
}