//              +-- -- --++-- +-In the name of ALLAH-+ --++-- -- --+              \\

#include <bits/stdc++.h>

#define int long long

using namespace std ;
using ll = long long ;

int const N = 1e5 + 20 , base = 97 ;
int T , n , id[N] , a[N] , pw[N] , hsh[N] ;
string s ;

inline int get_hash (int L , int R) {
	return (hsh[R] - hsh[L] * 1ll * pw[R - L]);
}

inline int get (int x , int y) {
	int L = 0 , R = n - max(x , y) + 1 ;

	while (L < R - 1) {
		int md = (L + R) >> 1 ;

		if (get_hash(x , x + md) == get_hash(y , y + md)) {
			L = md ;
		}
		else {
			R = md ;
		}
	}

	return L ;
}

inline bool cmp (int x , int y) {
	int l = get(x , y) ;

	if (l + max(x , y) == n) {
		return x > y ;	
	}

	return s[l + x] < s[l + y] ;
}

void pre () {
	pw[0] = 1 , hsh[0] = 0 ;
	for (int i = 0 ; i < n ; i ++) {
		pw[i + 1] = pw[i] * 1ll * base ;
		hsh[i + 1] = (hsh[i] * 1ll * base + s[i]) ;
	}
}

int32_t main(){
//	ios::sync_with_stdio(false) , cin.tie(0) , cout.tie(0) ;

//	scanf("%d" , &T) ;

	cin >> T ;

	while (T --) {
	/*	s = "" ;
		char c ;
		while (1) {
			c = getchar() ;
			if (c > 'z' || c < 'a') {
				break ;
			}
			s += c ;
		}*/ 

		cin >> s ;
		n = s.size() ;

		pre() ;

		iota(id , id + n , 0) ;
		sort(id , id + n , cmp) ;

		for (int i = 0 ; i < n - 1 ; i ++) {
			a[i] = get(id[i] , id[i + 1]) ;
		}

		stack <int> st ;
		st.push(-1) ;

		ll ans = 0 , sm = 0 ;

		for (int i = 0 ; i < n - 1 ; i ++) {
			while (st.top() != -1 && a[st.top()] >= a[i]) {
				int j = st.top() ;
				st.pop() ;

				sm -= (j - st.top()) * a[j] ;
			}
			
			sm += (i - st.top()) * a[i] ;
			ans += sm ;

			st.push(i) ;
		}

		cout << ans * 2 + n * 1ll * (n + 1) / 2 << '\n' ;
//		printf("%lld\n" , ans * 2 + n * 1ll * (n + 1) / 2) ;
	}
}
