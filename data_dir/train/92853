#include<bits/stdc++.h>
#define int long long int
#define ld long double
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD2 998244353
#define MOD1 1e9+7
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define piii pair<pii,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const long double PI = atan(1.0)*4;
const int64_t INF=1000000000000000003;
const int32_t LOG=21;
const int MOD=MOD1;

int32_t main()
{ 
      getFaster;
      int tests=1;
      cin>>tests;
      rep(ii,0,tests)
      {
             int n,l,r;
             cin>>n>>l>>r;
             
             int val=n*(n-1)+1;
             int add=-1;

             if(val==l)
             {
                  cout<<1<<endl;
                  continue;
             }
             if(r==val)
             {
                 add=1;
                 r--;                 
             }     
             int sum=0;
             int check=-1;
             rep(i,1,n+1)
             {
                 sum+=(n-i)*2;
                 if(sum>=l)
                 {
                     check=i;
                     sum-=(n-i)*2;
                     break;
                 } 
             }

             int cur=check;
             int cur1=check+1;
             int cnt=2;
             int start=cur;
             sum++;

             //cout<<"cur is "<<cur<<endl;

             while(sum!=l)
             {
                  if(cnt&1)start=cur;
                  else 
                  {
                        start=cur1;
                        if(cur1==n){cur++;cur1=cur+1;}
                        else cur1++;                        
                  }
                  cnt++;
                  sum++;
             }

             

             while(sum!=r)
             {
                  cout<<start<<" ";
                  if(cnt&1)start=cur;
                  else 
                  {
                        start=cur1;
                        if(cur1==n){cur++;cur1=cur+1;}
                        else cur1++;                        
                  }
                  cnt++;
                  sum++;      
             }

             cout<<start<<" ";

             if(add!=-1)cout<<1<<" ";
             cout<<endl;     




      }

      return 0;                         
}

/*
 TIPS(FOR ME):
 1.) Check for corner cases (like 0 is exception case)
 2.) Check for global memory sizes,memory refreshments and its complexity 
 3.) Check for sorting criteria (if used 1-based indexing)
 4.) Check for numbers overflow (while multiplying and doing MOD)
 5.) Check for typecasting issues like int to float( while dividing numbers)
*/
