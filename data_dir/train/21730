#include <bits/stdc++.h>
 
using namespace std;
 
#define SPEED ios::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define fileio freopen("in.in", "r", stdin),freopen("out.out", "w", stdout);
#define ll long long int
#define FF first
#define SS second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define pll pair<long long int,long long int>
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define pd(x) printf("%d\n",x)
#define plld(x) printf("%lld\n",x)
#define pss printf
#define MOD 998244353
#define INF 1e18
#define eps 0.00001
#define endl '\n'
#define debug(n1) cout<<n1<<endl

int ncr[6005][6005];
ll p,s,r;
ll poly[105][5005];
ll inv[5005];

ll powmod(ll a,ll b)
{	
	ll an=1;
	while(b>0)
	{
		if((b&1))
			an=(an*a)%MOD;
		b>>=1;
		a=(a*a)%MOD;
	}
	return an;
}

int main()
{
	SPEED;
	ll ans=0;
	for(int i=1;i<=5000;i++)
		inv[i]=powmod(i,MOD-2);
	for (int i = 1; i <= 6000; i++) 
        for (int j = 0; j <= i; j++) 
            if (j == 0 || j == i) 
                ncr[i][j] = 1; 
            else
                ncr[i][j] = (ncr[i-1][j-1] + ncr[i-1][j])%MOD; 
    ncr[0][0]=1;
    cin>>p>>s>>r;
    if(s==0&&r==0)
    {
    	cout<<powmod(p,MOD-2)<<endl;
    	return 0;
    }
    for(int i=0;i<=p;i++)
    {
    	poly[i][0]=(i%2?-1:1);
    	for(int j=1;j<=s;j++)
    	{
    		poly[i][j]=ncr[i+j-1][j];
    		if((i%2))
    			poly[i][j]=(MOD-poly[i][j])%MOD;
    	}
    }
    for(int i=max(r,1ll);i<=s;i++)
    {
    	for(int j=1;j<=p;j++)
    	{
    		if(i*j>s)
    			break;
    		int rem=s-i*j;
    		ll tot=0;
    		for(int h=0;h<=rem;h+=i)
    		{
    			if((p-j-h/i)%2==0)
    				tot=(tot+ncr[p-j][h/i]*poly[p-j][rem-h])%MOD;
    			else
    				tot=(tot-ncr[p-j][h/i]*poly[p-j][rem-h])%MOD;
    		}
    		tot=(tot+MOD)%MOD;
    		tot=(tot*1ll*ncr[p-1][j-1])%MOD;
    		tot=(tot*inv[j])%MOD;
    		ans=(ans+tot)%MOD;
    	}
    }
    ll tot=0;
    for(int i=r;i<=s;i++)
    {
    	int rem=s-i;
    	if(p%2==0)
    		tot=(tot-poly[p-1][rem]+MOD)%MOD;
    	else
    		tot=(tot+poly[p-1][rem]+MOD)%MOD;
    }
    ans=(ans*powmod(tot,MOD-2))%MOD;
    cout<<ans<<endl;
	return 0;
}