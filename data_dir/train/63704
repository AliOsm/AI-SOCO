#include <iostream>
using namespace std;

int n, m;

void solve_odd()
{
    if(n==1 && m==2)
    {
        cout << "0\n";
        cout << "1 1\n";
        cout << "1 2\n";
        cout << "1 1\n";
        return;
    }
    if(n==2 && m==1)
    {
        cout << "0\n";
        cout << "1 1\n";
        cout << "2 1\n";
        cout << "1 1\n";
        return;
    }


    cout << "1\n";
    cout << n << " " << m << " 1 1\n";
    int curr_x=1, curr_y=1, dir=+1;
    while(true)
    {
        cout << curr_x << ' ' << curr_y << "\n";
        //cin.get();
        if(curr_x==n && curr_y==m) break;
        if(dir==1 && curr_x==n)
        {
            dir=-1;
            curr_y++;
        }
        else if(dir==-1 && curr_x==1)
        {
            dir=+1;
            curr_y++;
        }
        else curr_x+=dir;
    }
    cout << "1 1\n";
}

void output(int x, int y, bool sw)
{
    if(sw) swap(x, y);
    cout << x << " " << y << "\n";
}

void solve_even(bool sw)
{
    cout << "0\n";
    output(1,1,sw);
    int x=2, y=1, dir=+1;
    while(true)
    {
        output(x, y, sw);
        if(x==2 && y==m) break;
        if(dir==1 && x==n)
        {
            dir=-1;
            y++;
        }
        else if(dir==-1 && x==2)
        {
            dir=+1;
            y++;
        }
        else x+=dir;
    }
    for(int j=m; j>=1; j--) output(1, j, sw);
}

void solve(void)
{
    if(n==1 || m==1) solve_odd();
    else if(n%2==1 && m%2==1) solve_odd();
    else
    {
        bool sw=false;
        if(m%2!=0) swap(n,m), sw=true;
        solve_even(sw);
    }
}

int main()
{
    cin >> n >> m;
    solve();
    return 0;
}
