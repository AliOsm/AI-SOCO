//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")
#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define MP make_pair
#define f first
#define s second
#define FOR(i,a,b) for (int i = a; i < (b); ++i)
#define RFOR(i, b, a) for (int i = b-1; i>=a; --i)
#define FILL(a, b) memset(a, b, sizeof a)
#define ALL(a) a.begin(), a.end()
#define SZ(a) ((int)a.size())
#define bitc(n) __builtin_popcount(n)
#define MAGIC0
mt19937 rnd(time(0)); //rnd()

typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;

const int INF = 1000 * 1000 * 1000 + 7;
const LL LINF = 1LL * INF*INF;
const int MAX = 1e5 + 7;
const double PI = acos(-1.);
const double EPS = 1e-8;
const int MOD = 1000 * 1000 * 1000 + 7;

int main()
{
	ios_base::sync_with_stdio(0);
//	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);
	int n;
	cin >> n;
	vector<LL> a;
	string s;
	FOR(i, 0, n)
	{
		cin >> s;
		LL num = 0;
		FOR(j, 0, SZ(s))
		{
			if (s[j] == '.' || s[j] == '-')
			{
				continue;
			}
			num = num * 10 + s[j] - '0';
		}
		if (s.front() == '-')
		{
			num *= -1;
		}
//		cout << num << endl;
		a.PB(num);
	}

	LL sum = 0;
	FOR(i, 0, n)
	{
//		cout << a[i] << ' ' << a[i] % 100000 << endl;
		sum += a[i] % 100000;
	}

	if (sum % 100000)
	{
		abort();
	}
	sum /= 100000;
//	cout << sum << endl;
	vector<LL> b(n);
	FOR(i, 0, n)
	{
		if (a[i] % 100000 == 0)
		{
			b[i] = a[i];
			continue;
		}
//		cout << i << endl;
		b[i] = (a[i] / 100000) * 100000;
//		cout << b[i] << endl;
		if (sum < 0 && a[i] < 0)
		{
			sum++;
			b[i] -= 100000;
		}
		else
		if (sum > 0 && a[i] > 0)
		{
			sum--;
			b[i] += 100000;
		}
	}
	FOR(i, 0, n)
	{
		cout << b[i] / 100000 << endl;
	}

	return 0;
}





