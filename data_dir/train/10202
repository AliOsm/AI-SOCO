#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.14159265
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<8> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
ll n,l[200020],r[200020],c,ans[200020],q,w;
map<ll,ll>m,t;
set<pair<ll,pii>>s;
int main()
{

//cout<<Pow((ll)1000000,(ll)110);
//freopen("hotel.in","r",stdin);
//freopen("math.in","w",stdout);
//    char input[15];
//    scanf("%s", &input);
cin>>n;
forr(i,1,n)
{
cin>>l[i]>>r[i];
m[l[i]]++;
t[r[i]]--;
}
for(auto p:m)
{
     s.insert({p.F,{m[p.F],t[p.F]}});
}
for(auto p:t)
{
    if(m.count(p.F)==0)
     s.insert({p.F,{m[p.F],t[p.F]}});
}
set<pair<ll,pii>>::iterator it=s.begin();
for(;it!=s.end();it++)
{
    auto k=*it;
    auto y=it;
    y++;
    auto v=*y;

    if(k.S.F&&k.S.S==0)
    {
    c+=k.S.F;
    ans[c]+=v.F-k.F;
    }
    else if(k.S.F==0&&k.S.S)
    {
    ans[c]++;
     c+=k.S.S;
     ans[c]+=v.F-k.F-1;
    }
    else
    {
    c+=k.S.F;
    ans[c]++;
    c+=k.S.S;
     ans[c]+=v.F-k.F-1;
    }

}
forr(i,1,n)
cout<<ans[i]<<" ";

return 0;
}
