#include <bits/stdc++.h>

using namespace std;

int n;
int p[150010];
int sz[150010];
vector<int> an[150010];

void make_set(int v){
    p[v] = v;
    sz[v] = 1;
    an[v].push_back(v);
}

int find_set(int v){
    if(p[v] == v) return v;
    return p[v] = find_set(p[v]);
}

void union_set(int a, int b){
    a = find_set(a);
    b = find_set(b);
    if(a != b){
        if(sz[a] < sz[b]) swap(a, b);
        p[b] = a;
        sz[a] += sz[b];
        for(auto u : an[b]) an[a].push_back(u);
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    int n;
    cin >> n;
    for(int i = 1; i <= n; i++) make_set(i);
    for(int i = 0; i < n - 1; i++){
        int a, b;
        cin >> a >> b;
        union_set(a, b);
    }
    for(auto u : an[find_set(1)]){
        cout << u << ' ';
    }
    return 0;
}
