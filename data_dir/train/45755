#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define MAXN (1 << 20)

using namespace std;
using namespace __gnu_pbds;

template <typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

int N;

void read()
{
	scanf("%d", &N);
}

char add[MAXN][1];
int k[MAXN];

void solve()
{
	set<int> s;
	set<int> sol;
	int ans = 0;

	for(int i = 0; i < N; i++)
	{
		scanf("%s %d", &add[i], &k[i]);

		if(add[i][0] == '+')
		{
			s.insert(k[i]);
		}
		else
		{
			auto it = s.find(k[i]);

			if(it == s.end())
				sol.insert(k[i]);
			else
				s.erase(k[i]);
		}

		ans = max(ans, (int)s.size());
	}

	ans = max(ans, (int)sol.size());

	for(int i = 0; i < N; i++)
	{
		if(add[i][0] == '+')
		{
			sol.insert(k[i]);
		}
		else
		{
			auto it = s.find(k[i]);
			sol.erase(k[i]);
		}

		ans = max(ans, (int)sol.size());
	}

	printf("%d\n", ans);
}

int main()
{
	read();
	solve();
	return 0;
}
