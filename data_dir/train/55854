#include <bits/stdc++.h>
using namespace std;

#define rep(i,x,n) for(int i=x;i<n;i++)
#define repn(i,n,x) for(int i=n;i>=x;i--)
#define repe(i,x,n) for(int i=x;i<=n;i++)
#define F first
#define S second

typedef long long ll;
typedef unsigned long long ull;

vector<vector<int> > con(int n,int tk)
{
    vector<int>v;
    int i=0;
    while(tk>0)
    {
        if(tk%2)
        {
            v.push_back(i);
        }
        i++;
        tk=tk>>1;
    }
    vector<vector<int> >g(n);
    rep(i,0,n)g[i].resize(n);
    rep(i,0,v.size())
    {
        rep(j,0,v.size())
        {
            g[v[i]][v[j]]=1;
            g[v[j]][v[i]]=1;
        }
    }
    //cout<<endl;rep(a,0,g.size()){rep(b,0,g.size())cout<<g[a][b]<<" ";cout<<endl;}

    return g;
}

bool comp(vector<vector<int> >currg,vector<vector<int> >enm)
{
    int n=currg.size();
    rep(i,0,n)
    {
        rep(j,0,n)
        {
            if(currg[i][j]&&enm[i][j])return false;
        }
    }
    return true;
}

int main()
{
    int n,k;
    while(cin>>n>>k)
    {
        vector<string>v(n);
        map<string,int>mp;
        rep(i,0,n){cin>>v[i];mp.insert(make_pair(v[i],i));}
        vector<vector<int> >enm(n);
        rep(i,0,n)enm[i].resize(n);
        rep(i,0,k)
        {
            string s1,s2;
            cin>>s1>>s2;
            enm[mp[s1]][mp[s2]]=1;
            enm[mp[s2]][mp[s1]]=1;
        }
        int limit=pow(2,n);
        set<string>res;
        int mx=0;
        rep(i,0,limit)
        {
            vector<vector<int> >tmp=con(n,i);
            if(comp(tmp,enm))
            {
                set<string> cnt;
                rep(a,0,tmp.size())
                {
                    rep(b,0,tmp.size())if(tmp[a][b]==1)
                    {
                        cnt.insert(v[a]);cnt.insert(v[b]);
                    }
               }
               if(cnt.size()>mx)res=cnt,mx=cnt.size();
            }
        }
        set<string>::iterator it;
        cout<<res.size()<<endl;
        for(it=res.begin();it!=res.end();it++)cout<<*it<<endl;
    }
    return 0;
}
