#include <stdio.h>
#include <math.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
#include <stack>
#include <queue>
#include <set>
#include <list>
#include <bitset>
#include <array>
using namespace std;

#define x first.first
#define y first.second
#define a second
#define fi first
#define se second
#define long long long
typedef pair<int,int> ii;
typedef pair<long,long> ll;
typedef pair<ll,long> lll;

int n;
long dp[1000003];
lll A[1000003];
set<ll> st; // (Y,idx)

int main()
{
	// ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);

	scanf("%d", &n);
	for(int i = 1; i <= n; i++)
		scanf("%lld %lld %lld", &A[i].x, &A[i].y, &A[i].a);

	sort(A+1, A+n+1);
	st.insert({2e9,0});

	long res = 0;
	for(int i = 1; i <= n; i++)
	{

		auto it = st.upper_bound({A[i].y,-1});
		long idx = it->se;

		// printf("%lld %lld %lld %lld\n", A[i].x, A[i].y, A[i].x, idx);
		// for(auto it : st) printf("%lld|%lld ", it.fi, it.se); printf("\n"); fflush(stdout);

		dp[i] = A[i].y * (A[i].x - A[idx].x) - A[i].a + dp[idx];
		for(auto jt = st.begin(); jt != st.end();)
		{
			long Y = jt->fi;
			long idx = jt->se;
			if(dp[idx] - Y*A[idx].x <= dp[i] - Y*A[i].x)
			{
				auto kt = jt; ++jt;
				st.erase(kt);
			}
			else if(dp[i] <= dp[idx]) break;
			else
			{
				st.insert({ (dp[i]-dp[idx]) / (A[i].x-A[idx].x), i});
				break;
			}
		}
		// printf("dp[i] : %lld\n\n", dp[i]);
		res = max(res, dp[i]);
	}
	printf("%lld\n", res);
}








