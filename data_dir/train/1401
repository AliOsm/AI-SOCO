#include <bits/stdc++.h>
 
using namespace std;
 
#define pb push_back
#define mp make_pair
#define fir first
#define sec second
#define ll long long
#define ull unsigned long long
 
ll md=(1e9)*1e9+7;
ll MOD=1e9+7;
int INF=1e9+7;
 
ll binpow (ll a, ll n) {
	if (n == 0)
		return 1;
	if (n % 2 == 1)
		return (binpow (a, n-1) * a) % MOD;
	else {
		int b = binpow (a, n/2)% MOD;
		return (b * b) % MOD;
	}
}
 
pair<int,ll> rev(pair<ll,int> x)
{
    return mp(x.sec,x.fir);
}

int lis(vector<int> &a)
{
    int n=a.size();
    vector<int> d(n+1,1e9+7);
    d[0]=0;
    for (int i=0;i<n;i++)
    {
        int j=(int)(upper_bound(d.begin(),d.end(),a[i])-d.begin());
        //if (d[j-1]<a[i]&&a[i]<d[j])
        {
            d[j]=a[i];
            //cout<<i;
        }
    }
    for (int i=n;i>=0;i--)
        if (d[i]<1e9+7) return i;
}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n,m;
    ll a[200005];
    cin>>n>>m;
    for (int i=0;i<n;i++)
        cin>>a[i];
    sort(a,a+n);
    /*multiset<pair<ll,ll>> s;
    s.insert(mp(a[0],a[0]));
    ll ans=(*s.begin()).sec;
    cout<<ans<<" ";
    ll k=1;
    for (int i=1;i<n;i++)
    {
        s.insert(mp(a[i],a[i]*k));
        ans+=a[i]*k;
        if (i%m==0)
        {
            k++;
            pair<ll,ll> t=*s.begin();
            ans-=t.fir;
            s.erase(s.begin());
            s.insert(mp(t.fir,t.sec+t.fir));
            ans+=t.sec+t.fir;
        }
        cout<<ans<<" ";
    }*/
    ll ans=0,x[200005];
    for (int i=0;i<n;i++)
    {
        if (i<m)
        {
            x[i]=a[i];
        }
        else
        {
            x[i]=x[i-m]+a[i];
        }
        ans+=x[i];
        cout<<ans<<" ";
    }
    return 0;
}
/*
0 0 0
0 0 1
0 1 0
1 0 0
*/
//6 19 3 4 4 2 6 7 8
//2 3 4 4 6 6 7 8 19