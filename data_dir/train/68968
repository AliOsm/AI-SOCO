//ITNOA
#include<bits/stdc++.h>
 
using namespace std;
 
#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second

typedef long long ll;
typedef double ld;

const int maxN = 500*1000 + 5;
const int maxM = 1000*1000*10 + 100;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 317;
const int maxL = 302;

int a[maxN];
int las[maxM], cnt[maxM], te[maxM];
int pw[maxN];
main()
{
    ios::sync_with_stdio(0); cin.tie(0);  
    pw[0] = 1;
    rep(i,1,maxN) pw[i] = pw[i-1] * 2 % mod;

    rep(i,0,maxN) pw[i] = (pw[i] + mod - 1) % mod;

  

    rep(i,2,maxM)
	  if(las[i] == 0) 
		for(int j = i; j < maxM; j += i)
		    las[j] = i;
    
    int n; cin >> n;
    rep(i,0,n) cin >> a[i];
    
    rep(i,0,n)
    {
	  int tmp = a[i];
	  int x = 1;
	  while(tmp > 1)
	  {
		int r = las[tmp];
		if(tmp / r == 1 || las[tmp / r] < r)
		    x *= r;
		tmp /= r;
	  }
	  a[i] = x;
	  cnt[a[i]] ++;
    }

    rep(i,1,maxM)
	  for(int j = 2 * i; j < maxM; j += i)
		cnt[i] += cnt[j];

    for(int i = maxM-1; i > 0; i --)
    {
	  te[i] = cnt[i] = pw[cnt[i]];
	  for(int j = 2 * i; j < maxM; j += i)
		cnt[i] = (cnt[i] + mod - cnt[j]) % mod;
    }
    

    te[1] = (te[1] + mod - cnt[1]) % mod;
    
    int ans = 0;
    rep(i,0,n)
    {
	  int tmp = a[i];
	  vector<int> v;
	  while(tmp > 1)
	  {
		int r = las[tmp];
		v.push_back(r);
		tmp /= r;
	  }

	  int ted = 0;
	  rep(mask,0,(1<<v.size()))
	  {
		int x = 1;
		rep(j,0,v.size())
		    if(mask >> j & 1) x *= v[j];
		if(__builtin_popcount(mask) % 2) ted = (ted + mod - te[x]) % mod;
		else ted = (ted + te[x]) % mod;
	  }

	  ans = (ans + ted) % mod;
    }

    cout << ans << endl;
    return 0;
}
