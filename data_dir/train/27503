#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <cstdint>
#include <algorithm>
using namespace std;

int main(void)
{
	ios::ios_base::sync_with_stdio(false);
	int n, k;
	cin >> n >> k;
	vector<int> v(n);
	for (int i = 0; i < n; ++i)
	{
		cin >> v[i];
	}
	vector<int> dp(n);
	int l = 0, r = 0, ans = -1;
	for (int i = 0; i < n; ++i)
	{
		dp[i] += v[i] == 0;
		if (i)
			dp[i] += dp[i - 1];
	}
	for (int i = 0; i < n; ++i)
	{
		int q = dp[i] + k + 1 - (v[i] == 0);
		int it = std::lower_bound(dp.begin(), dp.end(), q) - dp.begin() - 1;
		int dist = it - i + 1;
		if (dist >= ans)
		{
			ans = dist;
			l = i;
			r = i + dist - 1;
		}
	}
	cout << ans << endl;
	for (int i = 0; i < n; ++i)
	{ 
		if (i >= l && i <= r)
			v[i] = 1;
		cout << v[i] << " ";
	}
	return 0;
}