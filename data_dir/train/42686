#include<stdio.h>
#include<vector>
#include<iostream>
#include<algorithm>

using namespace std;

const int maxi=5e5+5;

vector<int> v[maxi];
vector<pair<int,int> > v1[maxi];
string s;

int n,m,lev,time,p,x,y;
int c1[maxi],c2[maxi],dp[2*maxi][27],poc[maxi];

void dfs(int x)
{
   lev++;
   time++;
   c1[x]=time;
   v1[lev].push_back({time,x});
  for (int i=0;i<v[x].size();i++)
    dfs(v[x][i]);
    c2[x]=time;
    lev--;
}

void calc(int y, int l, int r)
{
  int nep=0;
   for (int i='a';i<='z';i++)
    if ((dp[poc[y]+r+1][i-'a']-dp[poc[y]+l][i-'a'])%2) nep++;
    if (l>r) printf("Yes\n"); else
    if (nep>1) printf("No\n"); else printf("Yes\n");
   return ;
}

int main()
{
    scanf("%d%d",&n,&m);

    for (int i=2;i<=n;i++)
    {
        scanf("%d",&x);
        v[x].push_back(i);
    }
    cin>>s;
    lev=0;
    dfs(1);

    for (int i=1;i<=5e5+1;i++)
        {
            p++;

            for (int j=0;j<26;j++)
                dp[p][j]=0;
            poc[i]=p;
            for (int j=0;j<v1[i].size();j++)
                {
                     p++;
                     for (int k='a';k<='z';k++)
                        dp[p][k-'a']=dp[p-1][k-'a'];
                     dp[p][s[v1[i][j].second-1]-'a']++;
                }
        }


    while(m--)
    {
        scanf("%d%d",&x,&y);
        int l=-1;
        int r=v1[y].size();
        while(l<r-1)
        {
            int tr=(l+r)/2;
            if (v1[y][tr].first<c1[x]) l=tr; else r=tr;
        }
        int lef=r;
         l=-1;
         r=v1[y].size();

        while(l<r-1)
        {
            int tr=(l+r)/2;
            if (v1[y][tr].first<=c2[x]) l=tr; else r=tr;
        }
      int rig=l;
    //  printf("%d %d\n",lef,rig);
      calc(y,lef,rig);
    }
    return 0;
}