#include<bits/stdc++.h>
#pragma GCC optimize("O3")
#define fi first
#define se second
#define pb push_back
#define pf push_front
#define mod 1000000007

using namespace std;

typedef long long ll;


int add(int a, int b)
{
    ll x = a+b;
    if(x >= mod)
        x -= mod;
    if(x < 0)
        x += mod;
    return x;
}
ll mul(ll a, ll b)
{
    return (a*b) % mod;
}

ll pw(ll a, ll b)
{
    ll ans = 1;
    while(b)
    {
        if(b & 1)
            ans = (ans * a) % mod;
        a = (a * a) % mod;
        b >>= 1;
    }
    return ans;
}
int n, m;
bool is[5000002];
bool viz[10000002];
void bfs(int nod)
{
    deque<int>d;
    d.pb(nod);
    viz[nod] = 1;
    while(!d.empty())
    {
        int x = d[0];
        d.pop_front();
        if(x < (1 << n))
        {
			if(!viz[x + (1 << n)])
			{
				viz[x + (1 << n)] = 1;
				d.pb(x + (1 << n));
			}
		}
		else
        {
			int y = (1 << (n + 1)) - 1 - x;
			if(!viz[y] && is[y])
			{
				viz[y] = 1;
                d.pb(y);
			}
			for (int i = 0; i < n; i++)
            {
				y = x | (1 << i);
				if (!viz[y])
				{
                    viz[y] = 1;
                    d.pb(y);
                }
			}
		}
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n >> m;
    for(int i = 1; i <= m; ++i)
    {
        int x;
        cin >> x;
        is[x] = 1;
    }
    int ans = 0;
    for(int i = 0; i < (1<<n); ++i)
        if(!viz[i] && is[i])
            bfs(i), ++ans;
    cout << ans;
    return 0;
}
