#include <bits/stdc++.h>
#define F first
#define S second
#define Mp make_pair
#define Pb push_back
#define Tree int h,int l,int r,int L,int R
#define left 2*h,l,(l+r)/2,L,R
#define right 2*h+1,(l+r)/2+1,r,L,R
using namespace std;
long long n,X,Y,A,B,Z,ans,dp[300005];
vector < long long >v [300005];
long long g(long long x,long long p)
{
	for (int i=0; i<v[x].size(); i++)
		if (v[x][i]!=p) dp[x]+=g(v[x][i],x);

	if (v[x].size()==1 && p!=x) return 1;	
			
	return dp[x]+1;	
}
long long go(long long x,long long p)
{
	if (x==Y) return x;
	long long ret=0;
	for (int i=0; i<v[x].size(); i++)
		if (v[x][i]!=p)	
			if (go(v[x][i],x)>0 && x!=X) return x;
				                     else ret=max(ret,go(v[x][i],x));
				
	return ret;
}
main ()
{
	cin>>n>>X>>Y;
	
	for (int i=1; i<n; i++)
	{
		cin>>A>>B;
		
		v[A].Pb(B);
		v[B].Pb(A);
	}

	dp[X]=g(X,X);
	long long ind=go(X,X);
	dp[X]--;
	
	ans+=(dp[Y]+1)*(dp[X]-dp[ind]); 
	
	cout<<n*(n-1)-ans<<endl;
}