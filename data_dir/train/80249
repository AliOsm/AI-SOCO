#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <string.h>
#include <cstring>
#include <iomanip>
#include <stdio.h>
#include <sstream>
#include <bitset>
#include <locale>
#include <iostream>
#include <cmath>
#include <climits>
#include <iomanip>
#include <math.h>
#include <bitset>
#include <limits.h>
#include <limits>


using namespace std;

#define ll  long long
#define ld  long double
#define oo LLONG_MAX

ll GCD(ll x, ll y) { return !y ? x : GCD(y, x % y); }
ll LCM(ll x, ll y) { return x*y / GCD(x, y); }

#define PI   3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844
int arr[100000];
int main()
{
	ios::sync_with_stdio(false);
	ios_base::sync_with_stdio(false);
	//cin.tie(nullptr), cout.tie(nullptr);

	//freopen("output.txt", "w", stdout);
	//freopen("input.txt", "r", stdin);
	int n, start,answer=0;
	cin >> n >> start;
	for (int i = 1; i <= n; i++)
		cin >> arr[i];

	if (arr[start])
		answer++;
	int l = start - 1, r = start + 1;
	while (!(l<1 && r>n))
	{
		if (arr[l] == arr[r] && arr[l] == 1)
			answer += 2;
		if ((l == 0 && arr[r] == 1) || (r == n+1 && arr[l] == 1))
			answer++;

		l = max(0, l - 1);
		r = min(r+1,n+1);
	
	}
	cout << answer << endl;
	return 0;
}
