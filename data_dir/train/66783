#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
const char dl='\n';
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
string s,t;
ll ans;
int n,m,k;
//ÏÎÄÓÌÀÉ ßÊÈÉ ÊÎÍÒÅÉÍÅÐ ÏÎÒÐ²ÁÅÍ!!!
stack<char>STACK;
deque<char>DEQUE;
queue<char>QUEUE;
////////////////////////////////////
vector<int>p(500005);
int dsu_get (int v) 
{
	return (v == p[v]) ? v : (p[v] = dsu_get (p[v]));
}
void dsu_unite (int a, int b) 
{
	a = dsu_get (a);
	b = dsu_get (b);
	if (rand() & 1)
		swap (a, b);
	if (a != b)
		p[a] = b;
}
int col[500005];
main()
{
	FX iOS
	int i,j; 
	cin>>n>>m;
	for(i=1;i<=n;++i)
		p[i]=i;
	for(i=0;i<m;++i)
	{
		int sz;
		cin>>sz;
		int a[sz];
		for(j=0;j<sz;++j)
			cin>>a[j];
		for(j=1;j<sz;++j)
			dsu_unite(a[0],a[j]);
	}
	for(i=1;i<=n;++i)
		col[dsu_get(i)]++;
	for(i=1;i<=n;++i)
		cout<<col[dsu_get(i)]<<" ";
}