#include<bits/stdc++.h>
using namespace std;


const int N = 105, INF = 1e9;


string s;
/// 0 - vlevo, 1 - vpravo
int n, m, dp[N][N][2];

void upd1(int &x, int y){
    if(y > x){
        x = y;
    }
}

void upd2(int &x, int y){
    if(y < x){
        x = y;
    }
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> s >> m;
    n = (int)s.size();
    memset(dp, -63, sizeof(dp));
    dp[0][0][1] = 0;
    for(int i = 0; i < n; i++){
        for(int j = 0; j <= m; j++){
            if(s[i] == 'F'){
                upd1(dp[i + 1][j][0], dp[i][j][0] - 1);
                upd1(dp[i + 1][j][1], dp[i][j][1] + 1);
                upd1(dp[i + 1][j + 1][1], dp[i][j][0]);
                upd1(dp[i + 1][j + 1][0], dp[i][j][1]);
            }
            else{
                upd1(dp[i + 1][j][0], dp[i][j][1]);
                upd1(dp[i + 1][j][1], dp[i][j][0]);
                upd1(dp[i + 1][j + 1][0], dp[i][j][0] - 1);
                upd1(dp[i + 1][j + 1][1], dp[i][j][1] + 1);
            }
        }
    }
    int cur = -INF;
    for(int i = 0; i <= m; i++){
        if(i % 2 == m % 2){
            upd1(cur, max(dp[n][i][0], dp[n][i][1]));
        }
    }
    int ans = max(0, cur - 0);
    memset(dp, 63, sizeof(dp));
    dp[0][0][1] = 0;
    for(int i = 0; i < n; i++){
        for(int j = 0; j <= m; j++){
            if(s[i] == 'F'){
                upd2(dp[i + 1][j][0], dp[i][j][0] - 1);
                upd2(dp[i + 1][j][1], dp[i][j][1] + 1);
                upd2(dp[i + 1][j + 1][1], dp[i][j][0]);
                upd2(dp[i + 1][j + 1][0], dp[i][j][1]);
            }
            else{
                upd2(dp[i + 1][j][0], dp[i][j][1]);
                upd2(dp[i + 1][j][1], dp[i][j][0]);
                upd2(dp[i + 1][j + 1][0], dp[i][j][0] - 1);
                upd2(dp[i + 1][j + 1][1], dp[i][j][1] + 1);
            }
        }
    }
    cur = INF;
    for(int i = 0; i <= m; i++){
        if(i % 2 == m % 2){
            upd2(cur, min(dp[n][i][0], dp[n][i][1]));
        }
    }
    ans = max(ans, 0 - cur);
    cout << ans;
}
