/////////////////////////   _LeMur_
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 100005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;
mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());

int t;
long long n, k;

long long solve(long long n, long long k) {
    if (k == 0) return n;
    long long mn = 15, mx = -1;
    long long x = n;
    while (x) {
        mn = min(mn, x % 10);
        mx = max(mx, x % 10);
        x /= 10;
    }
    if (mn == 0) return n;
    return solve(n + mn * mx, k - 1);
}

int main() {
    cin >> t;
    while (t--) {
        cin >> n >> k;
        cout << solve(n, k - 1) << endl;
    }
    return 0;
}
