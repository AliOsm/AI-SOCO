///Foxi_Doree
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define gcd __gcd
#define time { ios::sync_with_stdio(0); ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); srand(time(0)); }

using namespace std;
using namespace __gnu_pbds;

ifstream in("input.txt");
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair < ll, ll > pll;
typedef pair < double, double > pdd;
typedef vector < ll > vll;
typedef set < ll > sll;
/*
    find_by_order()
    order_of_key()
*/
typedef tree <
ll, null_type,
less < ll >, rb_tree_tag,
tree_order_statistics_node_update > set_t;
const ll inf = 1000000007, oo = 1e6 + 2, o = 4e5 + 2;

inline void solve()
{
    ll n, i;

    cin >> n;
    vll a(o); vll used(o);
    for(i = 0; i < n; ++i) {
        cin >> a[i];
        ++used[a[i]];
    }

    ll cnt = 0, dst = 0, x; vector < bool > ans(o);
    for(i = 0; i < n; ++i) {
        if(used[a[i]] == 1) ++cnt;
        if(used[a[i]] > 2 && ans[a[i]] == false){
            ++dst;
            ans[a[i]] = true;
            x = a[i];
        }
    }

    cnt += dst;
    if(cnt % 2 == 1) {
        if(dst == 0) {
            cout << "NO";
            exit(0);
        }
        else --cnt, used[x] = 0;
    }

    cout << "YES" << endl;

    ll sch = 0;
    for(i = 0; i < n; ++i) {
        ll k = 2;
        if(sch < cnt / 2) k = 1;

        if(used[a[i]] == 2 || used[a[i]] == 0 || used[a[i]] == -1) {
            if(used[a[i]] == -1) {
                a[i] = 2;
            }
            else a[i] = 1;
        }
        else {
            if(k == 1) {
                used[a[i]] = -1;
            }
            else used[a[i]] = 0;
            ++sch;
            a[i] = k;
        }
    }

    for(i = 0; i < n; ++i) {
        if(a[i] == 1) cout << 'A';
        else cout << 'B';
    }
}

int main()
{
    time

    solve();
}
