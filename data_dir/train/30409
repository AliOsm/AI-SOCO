#include<bits/stdc++.h>
using namespace std;
const int MXN = 5e5 + 10;
int n, q, p, A[MXN], M[MXN], C[MXN], T[MXN];
long long c;
vector < int > P[MXN];
int Bitcount(int x)
{
    if (x == 0)
        return (0);
    return ((x % 2) + Bitcount(x / 2));
}
int FirstBit(int x)
{
    if (x % 2 == 1)
        return (0);
    return (1 + FirstBit(x / 2));
}
void Add(int r, int t)
{
    if (t == 0)
        t = 1;
    else
        t = -1;
    for (int i = 0; i < (1 << ((int)P[r].size())); i++)
	{
        T[i] = 1;
		if (i > 0)
			T[i] = T[i & (i - 1)] * P[r][FirstBit(i)];
		if (t < 0)
			C[T[i]] --;
		if (Bitcount(i) % 2 == 1)
			c -= C[T[i]] * t;
		else
			c += C[T[i]] * t;
		if (t > 0)
			C[T[i]] ++;
	}
}
int main()
{
    scanf("%d%d", &n, &q);
    for (int i = 1; i <= n; i++)
        scanf("%d", &A[i]);
    for (int i = 2; i <= 5e5; i++)
        if (P[i].size() == 0)
            for (int j = i; j <= 5e5; j += i)
                P[j].push_back(i);
    for (int i = 1; i <= q; i++)
    {
        scanf("%d", &p);
        Add(A[p], M[p]);
        M[p] ^= 1;
        printf("%I64d\n", c);
    }
    return (0);
}
