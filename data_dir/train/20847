/**
*
* Author: Mouhanad
* Lang: GNU C++14
*
**/
#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >
typedef long long ll;
const int inf = 1<<30;
const int N =200100;
int n , a[N] , q ;
int lvl[N] , deg[N];
vector < int > adj[N];
priority_queue < ii , vector < ii > > pq ;
void dfs ( int u , int par = 0 , int l = 0){
  deg[u] = adj[u].size() ;
  lvl[u] = l ;
  for ( auto v : adj[u] ){
    if ( v != par )
        dfs(v,u,l+1);
  }
  if ( deg[u]%2 == 0 )
     pq.push({lvl[u],u});

}
vector < int > ANS ;
int main ( ){
  scanf("%d",&n);
  for ( int i = 1 ; i <= n; i++ ){
    int x ;
    scanf("%d",&x);
    if ( x == 0 ) continue;
        adj[x].push_back(i);
        adj[i].push_back(x);
  }
  dfs(1);
  while (pq.size() ){

       ii u = pq.top() ; pq.pop();
       if ( deg[u.S] < 0 || deg[u.S]%2 ) continue;
       ANS.push_back(u.S);
       for ( auto v : adj[u.S]){
        if ( deg[v] != -1 ){
            deg[v]--;
            if ( deg[v] % 2 == 0 )
            pq.push({lvl[v],v});
        }
        deg[u.S] = -1 ;
       }

  }
  if ( ANS.size() != n ) printf("NO\n");
  else {
    printf("YES\n");
   for (auto x : ANS )
    printf("%d\n",x);
  }
return 0 ;
}
