//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC optimize("unroll-loops")

#include <iostream>
#include <stdlib.h>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <random>
#include <assert.h>
#include <memory.h>

#define uint unsigned int
#define ll long long
#define ull unsigned long long
#define ld long double
#define rep(i, l, r) for (int i = l; i < r; i++)
#define repb(i, r, l) for (int i = r; i > l; i--)
#define sz(a) (int)a.size()
#define fi first
#define se second
#define mp(a, b) make_pair(a, b)

using namespace std;

inline void setmin(int &x, int y) { if (y < x) x = y; }
inline void setmax(int &x, int y) { if (y > x) x = y; }
inline void setmin(ll &x, ll y) { if (y < x) x = y; }
inline void setmax(ll &x, ll y) { if (y > x) x = y; }

const int N = 200000;
const int inf = (int)1e9 + 1;
const ll big = (ll)1e18 + 1;
const int P = 239;
const int P1 = 31;
const int P2 = 57;
const int MOD = (int)1e9 + 7;
const int MOD1 = (int)1e9 + 9;
const int MOD2 = 998244353;
const double eps = 1e-9;
const double pi = atan2(0, -1);
const int ABC = 26;

int main()
{
    //freopen("a.in", "r", stdin);
    //freopen("dsu.out", "w", stdout);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.precision(20);
    cout << fixed;
    //ll TL = 0.95 * CLOCKS_PER_SEC;
    //clock_t time = clock();
    int n;
    string s;
    cin >> n >> s;
    int suff[n + 1];
    suff[n] = 0;
    repb(i, n - 1, -1) {
        int v = (s[i] == '(' ? 1 : -1);
        suff[i] = min(0, min(v, v + suff[i + 1]));
    }
    int c0 = 0, c1 = 0;
    rep(i, 0, n) {
        if (s[i] == '(') {
            c0++;
        } else {
            c1++;
        }
    }
    int bal = 0;
    int ans = 0;
    rep(i, 0, sz(s)) {
        if (s[i] == '(') {
            if (c0 - 1 == c1 + 1 && bal - 1 + suff[i + 1] >= 0) {
                ans++;
            }
            bal++;
        } else {
            if (c0 + 1 == c1 - 1 && bal + 1 + suff[i + 1] >= 0) {
                ans++;
            }
            bal--;
            if (bal < 0) {
                break;
            }
        }
    }
    cout << ans << "\n";
    return 0;
}