#include <bits/stdc++.h>
using namespace std;

int a, b, x, y, n;
vector <int> divi[2], f;

void divv(int h, int d){
    for(int i = 1 ; i*i <= h ; i++)
        if(h%i == 0)
            divi[d].push_back(i), divi[d].push_back(h/i);
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    cin >> a >> b >> n;
    divv(a, 0);
    divv(b, 1);
    sort(divi[0].begin(), divi[0].end());
    sort(divi[1].begin(), divi[1].end());
    while(divi[0].size() && divi[0].size()){
        if(divi[0].back() == divi[1].back()){
            f.push_back(divi[0].back());
            divi[0].pop_back();
            divi[1].pop_back();
        }
        else if(divi[0].back() > divi[1].back())
            divi[0].pop_back();
        else divi[1].pop_back();
    }
    sort(f.begin(), f.end());
    while(n-- && cin >> x >> y){
        int up = upper_bound(f.begin(), f.end(), y)-f.begin()-1;
        if(f[up] < x) cout << -1 << endl;
        else cout << f[up] << endl;
    }
    return 0;
}
