#include <bits/stdc++.h>

#define f first
#define s second
#define sz size()
#define pb push_back
#define mem(a,s,b) for(int i=0 ; i<=s ; ++i) a[i]=b;
#define mem2(a,r,c,b) for(int i=0 ; i<=r ; ++i)    for(int j=0 ; j<=c ; ++j)    a[i][j]=b;
#define all(a) a.begin(),a.end()

const double pi=3.1415926536;

using namespace std;
using namespace __gnu_cxx;

int dx[]={0,1,0,-1,-1,-1,1,1};
int dy[]={1,0,-1,0,-1,1,-1,1};

int n,m,u,v,par[51],siz[51];
long long ans=1;

int getSetId(int x)
{
	return x==par[x]?x:par[x]=getSetId(par[x]);
}

void Union_Sets(int x,int y)
{
	int p1=getSetId(x),p2=getSetId(y);
	par[p1]=p2;
	siz[p2]+=siz[p1];
	return;
}

long long pwr(int x, int y)
{
	long long temp=1;
	for(int i=1 ; i<=y ; ++i)	temp*=x;
	return temp;
}

bool isSameSet(int x, int y)
{
	return getSetId(x)==getSetId(y);
}
int main()
{
	cin >> n >> m;
	for(int i=1 ; i<=n ; ++i)	par[i]=i,siz[i]=1;
	for(int i=0 ; i<m ; ++i)
	{
		cin >> u >> v;
		if(!isSameSet(u,v))	Union_Sets(u,v);
	}

	for(int i=1 ; i<=n ; ++i)
	{
		int p=getSetId(i);
		if(par[p]==i)	ans*=pwr(2,siz[p]-1);
	}
	cout << ans << endl;
}
