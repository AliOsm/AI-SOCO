#include <bits/stdc++.h>
  
using namespace std;
  
template<class T> void ckmin(T &a, T b) { a = min(a, b); }
template<class T> void ckmax(T &a, T b) { a = max(a, b); }
  
#define pb push_back
#define mp make_pair
#define cotu cout
#define itn int
#define Red ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define F first
#define S second
#define sz(x) (int)x.size()
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define repst(i, n) for(auto it = n.begin(); it != n.end(); ++it)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
  
#define ordered_set tree<int , null_type,less<int >, rb_tree_tag,tree_order_statistics_node_update> 
  
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 
  
typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
  
const int inf = int(1e9);
const int mod = inf + 7;
const int N = 1e7 + 555;
const double PI = acos(-1.0);
 
 
void solve()
{
	int n;
	cin >> n;
	int a, b, c;
	cin >> a >> b >> c;
	string s;
	cin >> s;
	int cnt = 0;
	vector<char> ns(sz(s) + 1, '0');
	
	for(int i = 0; i < sz(s); ++i){
		if(s[i] == 'R'){
			if(b) b--, cnt++, ns[i] = 'P';
		}
		else if(s[i] == 'P'){
			if(c) c--, cnt++, ns[i] = 'S';
		}
		else{
			if(a) a--, cnt++, ns[i] = 'R';
		}
	}
	for(int i = 0; i < sz(s); ++i){
		if(ns[i] == '0'){
			if(a) a--, ns[i] = 'R';
			else if(b) b--, ns[i] = 'P';
			else c--, ns[i] = 'S';
		}
	}
	if(cnt >= ceil(double(sz(s)) / 2.0)) {
		cout << "YES" << endl;
		rep(i, sz(s)) cout << ns[i];
		cout << endl;
	}
	else cout << "NO" << endl;
}
 
int main()
{
    Red;
    int T;
    cin >> T;
    while(T--)
    solve();
    return 0;
}