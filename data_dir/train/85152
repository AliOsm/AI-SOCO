/* practice with Dukkha */
#include <stdio.h>

#define N	500
#define M	500

int n, m;
char cc[N][M + 1];
char op[N * M * 3];
int ii[N * M * 3], jj[N * M * 3], cnt;

void dfs(int i, int j, int i_, int j_) {
	if (i < 0 || i >= n || j < 0 || j >= m || cc[i][j] != '.')
		return;
	cc[i][j] = ' ';
	op[cnt] = 'B', ii[cnt] = i, jj[cnt] = j, cnt++;
	dfs(i - 1, j, i_, j_);
	dfs(i + 1, j, i_, j_);
	dfs(i, j - 1, i_, j_);
	dfs(i, j + 1, i_, j_);
	if (i != i_ || j != j_) {
		op[cnt] = 'D', ii[cnt] = i, jj[cnt] = j, cnt++;
		op[cnt] = 'R', ii[cnt] = i, jj[cnt] = j, cnt++;
	}
}

int main() {
	int h, i, j;

	scanf("%d%d", &n, &m);
	for (i = 0; i < n; i++)
		scanf("%s", cc[i]);
	for (i = 0; i < n; i++)
		for (j = 0; j < m; j++)
			dfs(i, j, i, j);
	printf("%d\n", cnt);
	for (h = 0; h < cnt; h++)
		printf("%c %d %d\n", op[h], ii[h] + 1, jj[h] + 1);
	return 0;
}
