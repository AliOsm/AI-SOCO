#include <set>
#include <cstdio>
#include <algorithm>

using namespace std;

const int MAXN = 500;

struct DisjointSet {
  int p[MAXN];

  void init(int n) {
    for (int i = 0; i < n; ++i) {
      p[i] = i;
    }
  }

  int getp(int i) {
    return i == p[i] ? i : (p[i] = getp(p[i]));
  }

  bool setp(int i, int j) {
    i = getp(i);
    j = getp(j);
    p[i] = j;
    return i != j;
  }
} ds;


int main() {
  int n, m, k, a;
  bool empty = true;
  set<int> st;

  scanf("%d%d", &n, &m);
  ds.init(n + m);
  for (int i = 0; i < n; ++i) {
    scanf("%d", &k);
    empty = empty && k == 0;
    for (int j = 0; j < k; ++j) {
      scanf("%d", &a);
      --a;
      ds.setp(i, n + a);
    }
  }
  if (empty) {
    printf("%d\n", n);
  } else {
    for (int i = 0; i < n; ++i) {
      st.insert(ds.getp(i));
    }
    printf("%d\n", (int)st.size() - 1);
  }

  return 0;
}

