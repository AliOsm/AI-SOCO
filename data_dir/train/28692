#include "bits/stdc++.h"
using namespace std;

#define debug(args...) fprintf(stderr, args);

typedef pair<int, int> pii;

const int maxn = 1e6 + 10;

int n;
int t[maxn];

int root;
int sum;

int dpsum[maxn];

pii dp[maxn];

vector<int> adj[maxn];

void dfs(int v) {
    dpsum[v] = t[v];

    int ok = 0;

    for(auto u: adj[v]) {
	dfs(u);
	dpsum[v] += dpsum[u];

	ok += dp[u].first;
    }

    if(ok >= 2) {
	int cnt = 2;
	for(auto u: adj[v]) {
	    if(dp[u].first) {
		printf("%d", dp[u].second);

		if(cnt == 2)
		    printf(" ");
		else
		    printf("\n");
		
		--cnt;
	    }

	    if(!cnt)
		exit(0);
	}
    }

    if(v != root && ok >= 1 && dpsum[v] == sum + sum) {
	printf("%d ", v);

	for(auto u: adj[v])
	    if(dp[u].first) {
		printf("%d\n", dp[u].second);
		exit(0);
	    }
    }

    if(ok) {
	for(auto u: adj[v])
	    if(dp[u].first) {
		dp[v] = {1, dp[u].second};
		break;
	    }
    }

    if(dpsum[v] == sum)
	dp[v] = {1, v};
}

void solve() {
    if(sum % 3)
	return;

    sum /= 3;

    dfs(root);
}

int main() {
    scanf("%d", &n);

    for(int i = 1; i <= n; ++i) {
	int par;
	scanf("%d %d", &par, &t[i]);

	sum += t[i];

	if(par)
	    adj[par].push_back(i);
	else
	    root = i;
    }

    solve();

    printf("-1\n");
    return 0;
}
