#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define eps 1e-12
typedef pair<int, int> II;
typedef pair<ll, ll> LL;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI (2 * acos(0))
#define linf (1ll << 60)
#define y1 y32432
#define y0 y435346

#define maxn 3005
multiset<string> S;

ll n, a[maxn];
ll f[maxn][maxn];
ll F[maxn];

void update(int u, ll T){
	for(int i = u; i < maxn; i += i & -i){
		F[i] = max(F[i], T);
	}
}

ll get(int u){
	ll res = (1ll << 60);
	for(int i = u; i >= 0; i--){
		res = min(res, F[i]);
		if(i == 0) break;
	}
	return res;
}

int main(){
//	freopen("in.txt", "r", stdin);
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	vector<ll> V;
	cin >> n;
	For(i, 1, n){
		cin >> a[i];
		a[i] += n - i;
	}
	V.pb(-inf);
	For(i, 1, n) V.pb(a[i]);
	sort(all(V));

	ms(f, 0x3f);
	f[0][0] = 0;
	For(i, 1, n) {
		ll T = (1ll << 60);
		For(j, 0, n){
			T = min(T, f[i - 1][j]);
			f[i][j] = min(f[i][j], T + abs(a[i] - V[j]));
//			cout << i << " " << T << endl;
//			cout << f[1][j] << endl;
		}
	}

	ll res = (1ll << 60);
	For(i, 1, n) res = min(res, f[n][i]);
	cout << res << endl;

    return 0;
}
