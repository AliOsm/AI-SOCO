#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define pii pair<int,int>
#define F first
#define S second
#define mp make_pair

const int mx = 100050;
vector<int> adjlist[mx];
int red[mx];
int blue[mx];
int ans;

pii update(pii x , int v)
{
    if(v >= x.F)
    {
        x.S = x.F;
        x.F = v;
    }
    else if(v >= x.S)
    {
        x.S = v;
    }
    return x;
}

void dfs(int u , int from)
{
    int i , j , v, l = adjlist[u].size();

    pii both , reds;
    both.F = both.S = reds.F = reds.S = 0;

    for(i = 0 ; i < l ; i++)
    {
        v = adjlist[u][i];
        if(v == from)continue;
        dfs(v,u);

        int x = max(red[v],blue[v]);

        both = update(both,x);
        reds = update(reds,red[v]);
    }

    int child = l;
    if(from != -1)child--;

    red[u] = child-1+both.F;
    blue[u] = 1 + reds.F;

    int ret;

    ret = child-2+both.F + both.S;
    if(from != -1)ret++;
    ans = max(ans,ret);

    ret = 1 + reds.F + reds.S;
    ans = max(ans,ret);

}

int main()
{
    int n , i  , k , u , v;
    scanf("%d",&n);

    for(i = 1 ; i < n ; i++)
    {
        scanf("%d %d",&u,&v);
        adjlist[u].push_back(v);
        adjlist[v].push_back(u);
    }

    dfs(1,-1);

    printf("%d\n",ans);


}
