#include <bits/stdc++.h>
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define F first
#define S second
#define ll long long
#define ull unsigned long long
#define ld long double
#define endl '\n'
#define TIME 1.0*clock()/CLOCKS_PER_SEC
#define pii pair < int32_t , int32_t >


#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("-O3")

using namespace std;


mt19937 gen(chrono::system_clock::now().time_since_epoch().count());

const ll mod = 998244353 ;
const int32_t FFTM = 998244353;
const int32_t N = 1e3 + 5;

int32_t SX[4] = {0 , 1 , -1 , 0};
int32_t SY[4] = {1 , 0 , 0 , -1};

int32_t  main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
#ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#else
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
#endif
    int k1, k2, k3;
    char c1, c2, c3;
    cin >> k1 >> c1 >> k2 >> c2 >> k3 >> c3;
    if (c1 == c2 && c2 == c3){
        if (k1 > k2)swap(k1, k2),swap(c1, c2);
        if (k1 > k3)swap(k1, k3),swap(c1, c3);
        if (k2 > k3)swap(k2, k3),swap(c2, c3);
        if (k3 - k2 == 1 && k2 - k1 == 1){
            cout << 0;
            return 0;
        }
    }
    if (k1 == k2 && k1 == k3 && c1 == c2 && c1 == c3){
        cout << 0;
        return 0;
    }
    if ((c1 == c2 && abs(k1 - k2) == 1) || (c1 == c3 && abs(k1 - k3) == 1) || (c2  == c3 && abs(k2 - k3) == 1)){
        cout << 1;
        return 0;
    }
    if ((c1 == c2 && k1 == k2) || (c1 == c3 && k1 == k3) || (c2 == c3 && k2 == k3)){
        cout << 1;
        return 0;
    }
     if ((c1 == c2 && abs(k1 - k2) == 2) || (c1 == c3 && abs(k1 - k3) == 2) || (c2  == c3 && abs(k2 - k3) == 2)){
        cout << 1;
        return 0;
    }
    cout << 2;
    return 0;
}
