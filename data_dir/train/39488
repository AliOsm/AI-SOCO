#include <bits/stdc++.h>

using namespace std;

#define all(x) (x).begin(), (x).end()
#define fast ios::sync_with_stdio(false);cin.tie(0);
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

vector<pair<int,int>> c;
int n,k;

const int nax = 505;
int dp[nax][nax];

int add(int a,int b){
	a += b;
	if(a >= k)a-=k;
	if(a >= k)a-=k;
	if(a >= k)a-=k;
	if(a >= k)a-=k;
	return a;
}

int calc(int idx,int r,int b){
	if(idx == n)return 0;
	int &ret = dp[idx][r];
	if(ret != -1)return ret;
	ret = 0;
	for(int send=0;send<=min(k,c[idx].first);send++){
		int rest = r + c[idx].first - send;
		int blbl = c[idx].second;
		ret = max(ret , calc(idx+1,add(send,rest),add(blbl , b)) + (rest + send) / k + (blbl + b) / k);
		int need = k - send;
		if(blbl >= need){
			// cerr << send << ' ' << need << ' ' << blbl << ' ' << rest << ' ' << c[idx].first - send << '\n';
			ret = max(ret , calc(idx+1,add(rest,0),add(blbl-need , b)) + rest / k + 1 + (blbl-need + b)/k);
		}
	}
	// cerr << idx << ' ' << r << ' ' << b << ' ' << ret << '\n';
	return ret;
}

int main(){
	fast
	cin>>n>>k;
	c.resize(n);
	ll ans = 0;
	for(int i=0;i<n;i++){
		cin>>c[i].first>>c[i].second;
		if(c[i].first > k){
			int h = c[i].first - k;
			int cur = h/k;
			ans += cur;
			c[i].first = k + h % k;
		}
		if(c[i].second > k){
			int h = c[i].second - k;
			int cur = h/k;
			ans += cur;
			c[i].second = k + h % k;
		}
	}
	memset(dp,-1,sizeof(dp));
	cout << ans + calc(0,0,0) << '\n';
}
