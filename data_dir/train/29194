
// In the name of God
#include <bits/stdc++.h>

using namespace std;
#define Size(x) ((int)(x).size())
#define pb push_back
typedef long long ll;
typedef long double ld;
typedef pair<int,int>pii;
const int INF = 1e9 + 10;
const int MN = 1e5 + 10;

bool mk[MN];
int num[MN] ,es[MN] , ee[MN];
vector<int>adj[MN] , rev[MN];
int n , m;

void dfs(int s)
{
	mk[s] = true;
	for(auto v:adj[s]) if(!mk[v]){
		num[v] = num[s]+1;
		dfs(v);
	}
	for(auto v:rev[s]) if(!mk[v]){
		num[v] = num[s]-1;
		dfs(v);
	}
}

bool check(int x){
	for(int i=0;i<m;++i){
		int a = num[es[i]] + 1, b = num[ee[i]];
		if(a%x != b%x) return false;
	}
	return true;
}

int main()
{
	cin >> n >> m;
	for(int i=0;i<m;++i){
		cin >> es[i] >> ee[i];
		--es[i] , --ee[i];
		adj[es[i]].pb(ee[i]);
		rev[ee[i]].pb(es[i]);
	}
	for(int i=0;i<n;++i) if(!mk[i]) dfs(i);
	int mn = 0;
	for(int i=0;i<n;++i) mn = min(mn , num[i]);
	for(int i=0;i<n;++i) num[i] -= mn;
	int Len = 0;
	for(int i=0;i<m;++i){
		int x = num[es[i]] + 1;
		int y = num[ee[i]];
		Len = max(Len , abs(x - y));	
	}
	if(!Len) return cout << n << '\n' , 0;
	int ans = 0;
	for(int i=1;1ll*i*i<=Len;++i){
		if(Len%i == 0){
			if(check(i)) ans = max(ans , i);
			if(check(Len/i)) ans = max(ans , Len/i);
		}
	}
	cout << ans << endl;
	return 0;
}

