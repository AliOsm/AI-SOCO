#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef   long long   int    ll;
long long int mod;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=1e9+9,n,res,k,ans=0,nbcycle=0;
string s2="zero",ch="",s;
set< ll  > st;
vector< pair<string,ll> >vm;
vector< pair< ll, pair<ll,ll> > > vvv;
vector<pair<ll,ll> >vv1,vv2;
vector<ll> v[200005];
ll level[200005],in[200005],out[200005],parent[200005],a[200005];
ll vis[200005];
ll timer=0;
void dfs(ll x,ll p){
    timer++;
    in[x]=timer;
    vis[x]=1;
    parent[x]=p;
    for(ll i=0;i<v[x].size();i++){
        ll y=v[x][i];
        if(!vis[y]){
            level[y]=level[x]+1;
            dfs(y,x);
        }
    }
    timer++;
    out[x]=timer;
}

bool check(ll x,ll y){
    return (in[x]<=in[y] && out[x]>=out[y]||in[x]>=in[y]&&out[x]<=out[y]);

}

int main(){
In_the_name_of_allah_the_merciful

    ll i=0,x=0,y=0,j=0,z,q,nb0=0,nbp=0,nbn=0,nbmax=0,nbinf=0,mm=0,mx=0,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,l1,r1,d;
    set< ll > ::iterator it,it1;
    char c;
   // freopen("a.txt","r",stdin);
     cin>>n>>m;
     for(i=1;i<n;i++){
        cin>>x>>y;
        v[x].pb(y);
        v[y].pb(x);
     }
     for(i=1;i<=n;i++){
            vis[i]=0;
            level[i]=0;
            parent[i]=i;
    }
     dfs(1,1);
     while(m--){
        cin>>k;
        ll node=1;
        ll max_level=0;
        for(i=1;i<=k;i++){
            cin>>a[i];
            if(level[a[i]]>=max_level){
                max_level=level[a[i]];
                node=a[i];
            }
        }
        ll flag=1;
        for(i=1;i<=k;i++){
            if(!check(node,parent[a[i]])){
                flag=0;
                break;
            }
        }
        if(flag)cout<<"YES\n";
        else cout<<"NO\n";
     }
    Alhamdulillah
 }
