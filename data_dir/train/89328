#include <cstdio>
#include <vector>
#include <string>
#include <algorithm>
#include <cassert>
#include <set>  
#include <utility>
#include <functional>

#ifndef ONLINE_JUDGE
#include <chrono>
#endif  // ONLINE_JUDGE


int solve();

int main(int argc, char* argv[] )
{
#ifndef ONLINE_JUDGE
	(void)freopen("input.txt", "r", stdin);
	(void)freopen("output.txt", "w", stdout);
#endif // ONLINE_JUDGE


#ifndef ONLINE_JUDGE
	auto a = std::chrono::steady_clock::now();
#endif  // ONLINE_JUDGE
	

/*****************************************/
	int Q = 1;

	(void)scanf("%d", &Q);
	
	while(Q--)
		solve() ;

/******************************************/


#ifndef ONLINE_JUDGE
	auto b = std::chrono::steady_clock::now();

	__int64 n = std::chrono::duration_cast< std::chrono::microseconds >( b - a ).count() ;

	printf("elapsed: %ld\n", (long int) n);
#endif  // ONLINE_JUDGE


	return 0;
}

static const int N = (1 << 18);
int head[N], nxt[N*2], dst[N * 2], ans[N], que[ N ], depth[N] ;

static int readInt()
{
	int x = 0;
	if (1 == scanf("%d", &x))
		return x;
	return 0;
}
 
 
int solve()
{  
	const int K = readInt();
	const int N = readInt();
	const int A = readInt();
	const int B = readInt();

	assert(A > B);

	// n * B >= K 

	if (N * 1ll * B >= K * 1ll) {
		puts("-1");
		return 0;
	}

	//X * A + (N-X) *B < K

	// X*(A-B) + N*B < K

	// X*(A-B) < K - N*B   > 0

	long long diff = K - N * 1ll * B;
	long long X = diff / (A - B);


	while (X * A + (N - X) * B >= K)
		--X;
	if (X > N)
		X = N;
	else if (X < 0)
		X = 0;

	printf("%lld\n", X);
	
	return 0;
}
