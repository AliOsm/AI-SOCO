#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

struct item{
    int x, y, n;
    item(){}
};

int a,k;
vec<item> m;

int main(){
    fast;
    cin>>a>>k;
    m = vec<item>(a);
    for(int q=0; q<a; q++) cin>>m[q].x;
    for(int q=0; q<a; q++) cin>>m[q].y, m[q].n=q;
    int diff=0;
    vec<char> o(a);
    char c = 'a';
    for(int q=0; q<a; q++){
        umap<int, int> mp;
        int all = 0, dv=0;
        for(;; q++) {
            o[m[q].x-1] = c;
            int c1 = m[q].x;
            int c2 = m[q].y;
            mp[c1]++; if(mp[c1]==1) all++; else dv++;
            mp[c2]++; if(mp[c2]==1) all++; else dv++;
            if(all==dv) break;
        }
        diff++;
        c = min('z', (char)(c+1));
    }
    if(diff<k) cout<<"NO";
    else{
        cout<<"YES\n";
        for(char cc : o) cout<<cc;
    }
}