#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n;
	cin >> n;
	
	vector<int> a(n), b(n);
	
	for(int i = 0; i < n; i++)
		cin >> a[i];
	
	for(int i = 0; i < n; i++)
		cin >> b[i];
	
	int s1 = 0, s2 = 0;
	
	for(int i = 0; i < n; i++){
		if(a[i] == b[i])
			continue;
		if(a[i] > b[i])
			s1++;
		else
			s2++;
	}
	
	int dif = s2 - s1;
	
	if(dif < 0)
		cout << 1 << endl;
	else{
		dif++;
		if(s1 == 0)
			cout << -1 << endl;
		else{
			int mx = dif / s1 + (dif % s1 != 0);
			cout << mx + 1 << endl;
		}
	}

	return 0;
}
