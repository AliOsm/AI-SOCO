#include<bits/stdc++.h>
using namespace std;

typedef long double                 ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 50 + 10;
const ll MXM = 5e2 + 10;
const ll MX5 = 2e5 + 10;
const ll MX6 = 1e6 + 10;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}

ll n, m, ans = 0, k = 0, now, x[MXN], y[MXN], a = 0, b = 0, t = 0;
vector<ll> G[MXN], V[MXN], v;
bool vis[MXN];

void DFS(ll u){
    vis[u] = 1;
    t++;
    for(auto v : G[u]){
        if(!vis[v]) DFS(v);
    }
    return;
}


int main(){
    //fast_io
    //file_io
    cin >> n >> m;
    for(int i = 0; i < m; i++){
        cin >> a >> b;
        G[a].pb(b);
        G[b].pb(a);
    }
    for(int i = 1; i <= n; i++){
        if(!vis[i]){
            t = 0;
            DFS(i);
            if(t > 3) kill(-1);
            if(t == 1){
                v.pb(i);
            }
            else if(t == 2){
                V[k].pb(i);
                V[k].pb(G[i][0]);
                k++;
            }
            else{
                V[k].pb(i);
                V[k].pb(G[i][0]);
                if(G[i].size()==2){
                    V[k].pb(G[i][1]);
                }
                else{
                    V[k].pb(G[G[i][0]][0]);
                }
                k++;
            }
        }
    }
    ll p = 0;
    for(int i = 0; i < k; i++){
        if(V[i].size() == 2){
            if(p == v.size()) kill(-1);
            V[i].pb(v[p]);
            p++;
        }
    }
    if(p < v.size()-1){
        while(p < v.size()){
            V[k].pb(v[p]);
            V[k].pb(v[p+1]);
            V[k].pb(v[p+2]);
            k++;
            p += 3;
        }
    }
    for(int i = 0; i < k; i++){
        cout << V[i][0] << sep << V[i][1] << sep << V[i][2] << endl;
    }
    return 0;
}
//! N.N
