#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second

using namespace std;

const double pi=acos(-1);
const int N=2e5+7,mod=1000000007,M=2e9;
const ll MAX=5e18;

int n,m,u,v,t,mx;
vector<int> g[N];
vector<pii> ans;

struct dsu {
    int sz[N],p[N];

    void init(){
        fill(sz,sz+N,0);
        iota(p,p+N,0);
    }

    int par(int x){
        return p[x]=x==p[x]?x:par(p[x]);
    }

    bool con(int x,int y){
        x=par(x);
        y=par(y);
        if(x==y)
            return 0;
        if(sz[y]>sz[x])
            swap(x,y);
        sz[x]+=sz[y];
        p[y]=x;
        return 1;
    }
}tree;

int main()
{
    tree.init();
    scanf("%d%d",&n,&m);
    for(int i=0;i<m;i++){
        scanf("%d%d",&u,&v);
        g[u].pb(v);
        g[v].pb(u);
    }
    for(int i=1;i<=n;i++){
        if(g[i].size()>g[mx].size())
            mx=i;
    }
    for(int i=0;i<=n;i++){
        t=i;
        if(!i)
            t=mx;
        for(int j:g[t]){
            if(tree.con(t,j))
                ans.pb({t,j});
        }
    }
    for(pii i:ans)
        printf("%d %d\n",i.ff,i.ss);
    return 0;
}
