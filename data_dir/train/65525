#include<bits/stdc++.h>
#define MOD 1000000007
#define ll long long
#define mp make_pair
#define pb push_back 
#define N 110
using namespace std;
ll dp[N][N], nxt[N][26], cur[26];
string s;
ll fun(int a, int k){
	//cerr << a << " " << k << '\n';
	if(a == s.length() + 1){
		if(k == 0)
			return 1;
		return 0;
	}
	if(dp[a][k] != -1)
		return dp[a][k];
	ll ans = 0;
	for(int j = 0; j < 26; j++)
		if(nxt[a][j] != -1)
			ans += fun(nxt[a][j], k - (a ? 1 : 0));
	return dp[a][k] = ans + fun(s.length() + 1, k - (a ? 1 : 0));
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll n, k;
	cin >> n >> k;
	cin >> s;
	memset(dp, -1, sizeof(dp));
	memset(cur, -1, sizeof(cur));
	for(int i = s.length(); i >= 0; i--){
		for(int j = 0; j < 26; j++){
			nxt[i][j] = cur[j];
			//cerr << i << " " << nxt[i][j] << (char)('a' + j) << '\n';
		}
		if(i)
			cur[s[i - 1] - 'a'] = i;
	}
	//cout << fun(0) << '\n';
	ll ans = 0;
	for(int i = n; i >= 0; i--){
		//cerr << i << " " << fun(0, i) << '\n';
	//	cerr << "BOOM\n";
		if(fun(0, i) >= k){
			ans += k * (n - i);
			cout << ans << '\n';
			return 0;
		}
		else{
			ans += fun(0, i) * (n - i);
			k -= fun(0, i);
		}
	}
	cout << -1 << '\n';


}