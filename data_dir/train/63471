#include<bits/stdc++.h>
#include <regex>
#include<ext/numeric>
#include<ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)  (int)v.size()
#define WHITE -1
#define GREY   0
#define BLACK  1
#define CLR(a,v) memset(a,v,sizeof a)
#define PC(x) __builtin_popcount(x)
#define MP make_pair

typedef long long ll;
typedef pair<int, int> ii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<ll> vll;
//typedef unsigned int ui;

typedef complex<double> point;
//#define X real()
//#define Y imag()
#define vec(a,b) ((b)-(a))
//#define dot(a,b) ((conj(a)*(b)).real())
#define cross(a,b) ((conj(a)*(b)).imag())
#define colliner pointOnLine

const double PI = acos(-1.0);

int dx[] = { 0, -1, 0, 1, -1, -1, 1, 1 };
int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };

int DX[] = { 0, 1, 1, 1, 0, -1, -1, -1 };
int DY[] = { 1, 1, 0, -1, -1, -1, 0, 1 };

const int MAX = 1005, MOD = 1e9 + 7, oo = (1 << 30), MAXLOG = 18;
const ll OO = 1ll << 60;
const double EPS = 1e-6;

int n, t, cnt[MAX][MAX];

bool valid(int x, int y) {
	return x >= 0 && x < MAX && y >= 0 && y < MAX;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
//	freopen("out.txt", "w", stdout);
#endif
	scanf("%d%d", &n, &t);
	cnt[500][500] = n;
	queue<ii> q;
	q.push( { 500, 500 });
	while (!q.empty()) {
		ii cur = q.front();
		int x = cur.first, y = cur.second;
		q.pop();
		if (cnt[x][y] < 4)
			continue;
		for (int i = 0; i < 4; ++i) {
			int nx = cur.first + dx[i], ny = cur.second + dy[i];
			cnt[nx][ny] += cnt[x][y] / 4;
			if (cnt[nx][ny] >= 4)
				q.push( { nx, ny });
		}
		cnt[x][y] %= 4;
	}
	while (t--) {
		int x, y;
		scanf("%d%d", &x, &y);
		x += 500, y += 500;
		if (valid(x, y))
			printf("%d\n", cnt[x][y]);
		else
			puts("0");
	}
}
