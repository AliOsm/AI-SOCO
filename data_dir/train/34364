#define _CRT_SECURE_NO_DEPRECATE
#include <iostream>
#include <cmath>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <queue>
#include <string>
using namespace std;
#define inf 1000000000
#define ll long long
#define eps 1e-9
#define VI vector<int>
#define pb push_back
#define L(s) (int)((s).size())
#define all(s) (s).begin(), (s).end()
#define pii pair<int, int>
#define mp make_pair
#define x first
#define y second
int n, m, k;
int p[111111];
int s[111111];
int P(int x) { return ((p[x] == x) ? (x) : (p[x] = P(p[x]))); }
inline void U(int x, int y) {
	x = P(x); y = P(y);
	if (rand() % 2) {
		p[x] = y; s[y] += s[x];
	} else {
		p[y] = x; s[x] += s[y];
	}
}
int main() {
	scanf("%d", &n);
	for(int i = 0; i < n; ++i) p[i] = i, s[i] = 1;
	scanf("%d", &k);
	for(int i = 0; i < k; ++i) {
		int x, y;
		scanf("%d%d", &x, &y);
		--x; --y;
		if (P(x) != P(y)) U(x, y);
	}
	scanf("%d", &m);
	for(int i = 0; i < m; ++i) {
		int x, y;
		scanf("%d%d", &x, &y);
		--x; --y;
		if (P(x) == P(y)) 
			s[P(x)] = 0;
	}
	int ans = 0;
	for(int i = 0; i < n; ++i) if (P(i) == i) ans = max(ans, s[i]);
	cout << ans << endl;
}