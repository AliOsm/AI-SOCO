#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

#ifdef WIN32
#define INT64 "%I64d"
#else
#define INT64 "%lld"
#endif

typedef long long int64;
typedef double real;

const int MaxN = 10004, MaxC = 0x3F3F3F3F, NA = -1;

int p [MaxN];
char s [MaxN];
int k, m, n;

int main (void)
{
 int c, i, r;
 while (scanf (" %d ", &k) != EOF)
 {
  fgets (s, MaxC, stdin);
  n = strlen (s);
  if (s[n - 1] == '\n')
  {
   s[n - 1] = '\0';
   n--;
  }
  m = 0;
  for (i = 0; i < n; i++)
   if (s[i] == '.' || s[i] == '?' || s[i] == '!')
    p[m++] = i;
  c = -1;
  i = 0;
  r = 0;
  while (c < n)
  {
   if (p[i] - c > k)
   {
    r = MaxC;
    break;
   }
   while (i < m && p[i] - c <= k)
    i++;
   r++;
   c = p[i - 1] + 1;
  }
  if (r == MaxC)
   printf ("Impossible\n");
  else
   printf ("%d\n", r);
 }
 return 0;
}
