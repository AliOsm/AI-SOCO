#include <bits/stdc++.h>
using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,n,a) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}


const int maxn=(int)1e2+10;
const int inf=(int)1e9+5;
const int mod=(int)1e6+3;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

int dp[maxn][(1<<17)+10];
int p[maxn][(1<<17)+10];
int a[maxn];

vector<int> good[(1<<17)+10];
int mask[60];

int main() {

   // freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);

    srand(time(NULL));

    vector<int>primes;
    for(int i=2;i<60;++i){
        bool prime=true;
        for(int j=2;j*j<=i;++j)if(i%j==0)prime=false;
        if(prime)primes.pb(i);
    }
    rep(i,2,60){
        rep(j,0,SZ(primes))if(i%primes[j]==0)mask[i]|=(1<<j);
    }
    rep(i,0,1<<17){
        rep(j,1,60){
            if((i&mask[j])==0)good[i].pb(j);
        }
    }
    rep(i,0,1<<17)rep(j,0,maxn)dp[j][i]=inf;
    dp[0][0]=0;
    int n;
    cin>>n;
    rep(i,0,n){
        int x;
        cin>>x;
        rep(mask,0,1<<17){
            for(int z:good[mask]){
                int nval=dp[i][mask]+abs(z-x);
                if(dp[i+1][mask|(::mask[z])]>nval){
                    dp[i+1][mask|(::mask[z])]=nval;
                    p[i+1][mask|(::mask[z])]=z;
                }

            }
        }
    }
    int mask=0;
    rep(i,1,1<<17){
        if(dp[n][mask]>dp[n][i])mask=i;
    }
    vi ans;
    per(i,n+1,1){
        ans.pb(p[i][mask]);
        mask^=::mask[p[i][mask]];
    }
    reverse(all(ans));
    for(int x:ans)cout<<x<<' ';
    cout<<endl;
    return 0;
}
