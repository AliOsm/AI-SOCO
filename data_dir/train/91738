#include <bits/stdc++.h>
using namespace std;

#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'

const int inf = 2000000000;

int n, a, b;
int h[205];
int dp[205][40005][2];
int total;

int recur( int pos, int sum, bool f )
{
	if( sum > a ) return inf;
	if( pos == n ) {
		if( b >= total-sum ) return 0;
		return inf;
	}
	if( dp[pos][sum][f] != -1 ) return dp[pos][sum][f];
	int ret = 0;
	if( !f ) {
		ret = recur( pos+1, sum+h[pos], f );
		if( pos ) ret = min( ret, min(h[pos], h[pos-1])+recur( pos+1, sum, !f ) );
		else ret = min( ret, recur( pos+1, sum, !f ) );
		if( ret >= inf ) ret = inf;
	}
	else if( f ) {
		ret = recur( pos+1, sum, f );
		ret = min( ret, min(h[pos], h[pos-1])+recur( pos+1, sum+h[pos], !f ) );
		if( ret >= inf ) ret = inf;
	}
	dp[pos][sum][f] = ret;
	return ret;
}

int main()
{
	optimize();
	freopen( "input.txt", "r", stdin );
	freopen( "output.txt", "w", stdout );
	memset(dp, -1, sizeof(dp));
	cin >> n >> a >> b;
	for( int i = 0; i < n; ++i ) {
		cin >> h[i];
		total += h[i];
	}
	int ans = recur(0, 0, 0);
	if( ans == inf ) cout << -1 << endl;
	else cout << ans << endl;

}
