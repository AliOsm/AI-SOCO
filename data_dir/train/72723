#include <bits/stdc++.h>

using namespace std;

#define DIM 5009
#define INF 1e18+9

vector<long long>a[DIM];

long long i,j,k,l,n,m,res;

vector<long long>t;

long long start;

long long vis[DIM];

void dfs1(long long v){
    vis[v]=1;
    for(auto to:a[v]){
        if(vis[to]==0)dfs1(to);
    }
    t.push_back(v);
}

void dfs(long long v){
    vis[v]=1;
    for(auto to:a[v]){
        if(vis[to]==0)dfs(to);
    }
}

int main()
{
    cin>>n>>m>>start;

    for(i=1;i<=m;i++){
        cin>>k>>l;
        a[k].push_back(l);
    }

    for(i=1;i<=n;i++){
        if(!vis[i])dfs1(i);
    }

    reverse(t.begin(),t.end());

    memset(vis,0,sizeof(vis));

    dfs(start);

    for(i=0;i<t.size();i++){
        if(!vis[t[i]]){
            dfs(t[i]);
            res++;
        }
    }
    cout<<res<<endl;

    return 0;
}
