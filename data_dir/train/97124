#include <bits/stdc++.h>

using namespace std;

const int MAXN = 2 * 100100, MOD = 998244353, INF = 0x3f3f3f3f;

int n, a[MAXN], ans = 1, cur = 1, tmp;
map<int, int> last;

struct no
{
	int beg, end, mid, mx;
	no *l, *r;
	no(int beg, int end, int v[]) : beg(beg), end(end), mid((beg + end) >> 1), mx(v[beg])
	{
		if(beg != end)
			l = new no(beg, mid, v), r = new no(mid + 1, end, v), mx = max(l->mx, r->mx);
	}
	~no()
	{
		if(beg != end)
			delete l, delete r;
	}
	int getMx(int a, int b)
	{
		if(end < a || b < beg)
			return -INF;
		if(a <= beg && end <= b)
			return mx;
		return max(l->getMx(a, b), r->getMx(a, b));
	}
	void print()
	{
		if(beg != end)
			l->print(), r->print();
		else
			printf("%d ", mx);
	}
};

int main()
{
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i)
		scanf("%d", &a[i]), last[a[i]] = i;
	for(int i = 1; i <= n; ++i)
		a[i] = last[a[i]];
	no seg(1, n, a);
	while(cur != n)
	{
		if((tmp = seg.getMx(1, cur)) > cur)
			cur = tmp;
		else
			cur++, ans = (2LL * ans) % MOD;
	}
	printf("%d\n", ans);
}