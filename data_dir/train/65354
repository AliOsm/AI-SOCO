#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cassert>
#include <tuple>
using namespace std;
typedef long long Long;
Long mulmod(Long a, Long b, Long m) {
	if(!b)return 0;
	Long q=mulmod(a,b/2,m);q=(q+q)%m;
	return b&1?(q+a)%m:q;
}
Long gcd(Long a, Long b){
	return b == 0 ? a : gcd(b, a % b);
}
Long f1(Long a, Long b){
	return b / gcd(a, b);
}
Long f2(Long a, Long b){
//	cout << a << " " << b << endl;
	return b == 0 ? 0 : (1 + f2(a, b - gcd(a,b)));
}
static Long egcd(Long a,Long b, Long &x, Long &y) {
	x = 1, y = 0;
	Long nx = 0, ny = 1;
	Long nr = b, r = a;
	while(nr != 0) {
		Long q = r / nr;
		tie(r, nr) = make_tuple(nr, r - q*nr);
		tie(x, nx) = make_tuple(nx, x - q*nx);
		tie(y, ny) = make_tuple(ny, y - q*ny);
	}
	// bezout = x , y 
	// gcd    = o_r
	return r;
}

static Long modInv(Long a, Long b) {
	Long x,y; 
	egcd(a,b,x,y);
	return x < 0 ? x + b : x;
}
vector<Long> divs(Long n){
	vector<Long> R;
	for (Long i = 1; i*i <= n; ++i) {
		if(n % i == 0){
			R.push_back(i);
			if(i*i != n){
				R.push_back(n/i);
			}
		}
	}
	sort(R.begin(), R.end());
	return R;
}

Long go(const vector<Long> &D, Long b){
	if(b == 0)return 0;
	int g = 0;
	for (int i = 0; i < D.size(); ++i) {
		if(b % D[i] == 0)g = i;
	}
	Long t = b / D[g];
//	Long sub = t * D[g];
//	if(g == D.size()-1)return t;
	for (int i = 0; i < D.size(); ++i) {
		// (b - t*D[g]) % D[i] == 0
		// t*D[g] == b mod D[i]
		if(D[g] % D[i] == 0)continue;
		Long gc = gcd(D[g], D[i]);
		Long tt = mulmod(modInv(D[g] / gc, D[i] / gc), b, D[i]) / gc;
		if(tt < t){
			t = tt;
//			if(tt == 2){
//				cout << D[g] << endl;
//			}
//			sub = t * D[g];
		}
	}
//	cout << "\t"<< t << endl;
//	cout << D[g] << endl;
	return go(D, b - t * D[g]) + t;
}
Long f3(Long a, Long b){
//	cout << a << " " << b << endl;
	vector<Long> D = divs(a);
	return go(D, b);
}


int main () {
    
	Long a, b;
	cin >> a >> b;
	cout << f3(a, b) << endl;
//	cout << f3(4,6) << endl;
//	cout << f2(4,6) << endl;
//	return 0;
//	for (int i = 1; i < 1000; ++i) {
//		for (int j = 1; j < 1000; ++j) {
//			int a = f2(i,j), b = f3(i, j);
//			if(a != b){
//				cout << i << "," << j << "[" << a << "," << b<< "]"<< "\t";
//			}
//		}
////		cout << endl;
//	}
//	cout << "DONE" << endl;
}
