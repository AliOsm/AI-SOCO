#include <bits/stdc++.h>
using namespace std;

bool a[10], d[1001][11][1001], qq = false;
int m;
vector<int> path;

bool solve(int cur, int prev, int num) {
	if(prev > -1) {
		d[num][abs(cur)][prev] = true;
	}
	if(num == m) {
		qq = true;
		path.push_back(prev + 1);
		return true;
	}
	for(int i = 0; i < 10; ++i) {
		if(!a[i] || i == prev || i < abs(cur)) {
			continue;
		}
		if(cur > 0 && abs(cur - i - 1) <= 10) {
			if(!d[num + 1][abs(cur - i - 1)][i]) {
				if(solve(cur - i - 1, i, num + 1)) {
					path.push_back(prev + 1);
					return true;
				}
			}
		} else if(abs(cur + i + 1) <= 10) {
			if(!d[num + 1][abs(cur + i + 1)][i]) {
				if(solve(cur + i + 1, i, num + 1)) {
					path.push_back(prev + 1);
					return true;
				}
			}
		}	                 
	}
	return false;
}

int main() {
	for(int i = 0; i < 10; ++i) {
		char c;
		scanf(" %c", &c);
		if(c == '0') {
			a[i] = false;
		} else {
			a[i] = true;
		}
	}
	scanf("%d", &m);
	solve(0, -1, 0);
	if(qq) {
		printf("YES\n");
	} else {
		printf("NO");
		return 0;
	}
	reverse(path.begin(), path.end());
	for(int i = 1; i < path.size(); ++i) {
		printf("%d ", path[i]);
	}

	return 0;
}