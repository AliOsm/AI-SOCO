//IOI 2021

#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const ll MAXN = 150 + 17, inf = 2e9 + 17;

int n, a[MAXN], dp[MAXN][MAXN][MAXN][2], mark[MAXN][MAXN][MAXN][2], pd[MAXN][2], mark0[MAXN][2];
string s;

int mem0(int x, int p) {
	if (mark0[x][p])
		return pd[x][p];
	if (x <= 0)
		return 0;
	pd[x][p] = (a[x] == -1? -inf: a[x]);
	if (!p)
		pd[x][p] = max(pd[x][p], 0);
	mark0[x][p] = true;
	if (x % 2) {
		for (int i = 0; i <= x - 1; i += 2) {
			pd[x][p] = max(pd[x][p], (int)max(1LL * mem0(x - i - 1, p) + (a[i + 1] == -1? -inf: a[i + 1]), -inf));
		}
	}
	else {
		for (int i = 2; i <= x; i += 2)
			pd[x][p] = max(pd[x][p], (int)max(1LL * mem0(x - i, p) + (a[i] == -1? -inf: a[i]), -inf));
	}
	return pd[x][p];
}

int mem(int l, int r, int k, bool p) {
	if (l == r) {
		if (p)
			return mem0(k + 1, 1);
		else
			return mem0(k + 1, 0);
	}
	if (r < l) {
		if (p)
			return mem0(k, 1);
		else
			return mem0(k, 0);
	}
	if (mark[l][r][k][p])
		return dp[l][r][k][p];
	if (p)
		dp[l][r][k][p] = -inf;
	mark[l][r][k][p] = true;
	for (int i = l; i < r; i++) {
		if (s[i] == s[l] && p)
			dp[l][r][k][p] = max(dp[l][r][k][p], (int)max(max(1LL * mem(l, i, 0, 1) + mem(i + 1, r, k, 1), -inf), max(1LL * mem(i + 1, r, 0, 1) + mem(l, i, k, 1), -inf)));
		if (s[i] == s[l] && !p)
			dp[l][r][k][p] = max(dp[l][r][k][p], (int)max(1LL * mem(l, i, 0, 1) + mem(i + 1, r, k, 0), -inf));
	}
	if (p && s[l] == s[r])
		dp[l][r][k][p] = max(dp[l][r][k][p], mem(l + 1, r - 1, k + 2, p));
	else if (!p) {
		for (int i = 0; i <= k; i += 2)
			dp[l][r][k][p] = max(dp[l][r][k][p], mem(l, r, i, 1));
		dp[l][r][k][p] = max(dp[l][r][k][p], mem(l + 1, r, 0, 0));
	}
	return dp[l][r][k][p];
}

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	cin >> s;
	s = '#' + s;
	cout << mem(1, n, 0, 0) << endl;
	return 0;
}
