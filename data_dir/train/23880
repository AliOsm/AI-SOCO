#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int cnt[256];

int main()
{
    _upgrade
    string x; cin >> x;
    for(auto c: x)
        cnt[c]++;
    string k = "1689"; x = "";
    cnt['1']--, cnt['6']--, cnt['8']--, cnt['9']--;
    for(int c = '1'; c <= '9'; c++)
        while(cnt[c]--) x.push_back(char(c));
    int m = 0;
    for(auto c: x)
        m = (10 * m + c - '0') % 7;
    do {
        int mm = 0;
        for(auto c: k)
            mm = (10 * mm + c - '0');
        if((mm + m * 10000) % 7 == 0)
        {
            cout << x << k;
            while(cnt['0']--) cout << 0;
            cout << "\n";
            return 0;
        }
    } while(next_permutation(all(k)));
    return 0;
}
