//In The name of Allah!
//tire sayyaadane mast be khata khahad raft .... jaade tey shod bi sabab ....
// be koja bayad raft ? ^_^




#include <bits/stdc++.h>

#define F first
#define S second
#define pii pair<int, int>
#define pb push_back

using namespace std;

typedef long long ll;
typedef long double ld;

const int N = 3e5 + 10, mod = 1e9 + 7;

int p[N];
char c[N];
bool tp;
vector<int> vc;

bool ps1[N], ps2[N], sf1[N], sf2[N];

int main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);
	int n; cin >> n;
	for(int i=0; i<n; i++){
		cin >> p[i] >> c[i];
		if(c[i] == 'G')tp = true;
		if(c[i] == 'G')vc.pb(i);
	}
	
	ps1[0] = (c[0] == 'R');
	for(int i=1; i<n; i++)
		ps1[i] = ps1[i - 1] | (c[i] == 'R');

	ps2[0] = (c[0] == 'B');
	for(int i=1; i<n; i++)
		ps2[i] = ps2[i - 1] | (c[i] == 'B');

	for(int i=n-1; i>=0; i--)
		sf1[i] = sf1[i + 1] | (c[i] == 'R');

	for(int i=n-1; i>=0; i--)
		sf2[i] = sf2[i + 1] | (c[i] == 'B');

	if(!tp)
	{
		ll ans = 0;
		ll ls = 0, t1 = 0;
		for(int i=0; i<n; i++)
			if(c[i] == 'R')
			{
				if(ls == 0)ls = p[i];
				else t1 = p[i] - ls;
			}
		ans += t1;
		ls = 0, t1 = 0;
		for(int i=0; i<n; i++)
			if(c[i] == 'B')
			{
				if(ls == 0)ls = p[i];
				else t1 = p[i] - ls;
			}
		ans += t1;
		return cout << ans << endl, 0;
	}

	ll ans = 0;
	bool fr = 0, fb = 0;
	for(int i=0; i<vc[0]; i++)
	{
		if(c[i] == 'R' && !fr)ans += p[vc[0]] - p[i], fr = true;
		if(c[i] == 'B' && !fb)ans += p[vc[0]] - p[i], fb = true;
	}
	
	int sz = vc.size();
	for(int i=0; i<sz-1; i++)
	{
		int len = p[vc[i + 1]] - p[vc[i]];
		int t1 = 0, t2 = 0, l1 = p[vc[i]], l2 = p[vc[i]], m1 = 0, m2 = 0;

		for(int j=vc[i]+1; j<vc[i + 1]; j++)
		{
			if(c[j] == 'R')
			{
				t1++;
				m1 = max(m1, p[j] - l1);
				l1 = p[j];
			}
			if(c[j] == 'B')
			{
				t2++;
				m2 = max(m2, p[j] - l2);
				l2 = p[j];
			}
		}

		if(t1)m1 = max(m1, p[vc[i + 1]] - l1);
		if(t2)m2 = max(m2, p[vc[i + 1]] - l2);

		if(t1 == 0 && t2 == 0)ans += len;
		else if(t1 > 0 && t2 == 0)
		{	
			if(!ps2[n - 1])
				ans += len;
			else ans += 2LL * len - m1;
		}
		else if(t2 > 0 && t1 == 0)
		{
			if(!ps1[n - 1])
				ans += len;
			else ans += 2LL * len - m2;
		}
		else
		{
			ans += min(2LL * len, (ll)len + len + len - m1 - m2);
		}
	}
	
	ll v1 = 0, v2 = 0;

	for(int j=vc[sz - 1]+1; j<n; j++)
	{
		if(c[j] == 'R')v1 = p[j] - p[vc[sz - 1]];
		else v2 = p[j] - p[vc[sz - 1]];
	}
	ans += v1 + v2;
	cout << ans << endl;
}