#include <bits/stdc++.h>
using namespace std;
const int N = 15e4+1, M = 1e7+1;
int n, a[N], b[N];
vector<int> fin;
bool can(int x)
{
    for(int i=0; i<n; i++)
    {
        if(a[i] % x && b[i] % x)
        return 0;
    }
    return 1;
}
void solve()
{
    for(int i : fin) if(can(i)) {cout << i << endl; exit(0);}
}
int main()
{
    cin >> n;
    for(int i=0; i<n; i++)
    scanf("%d %d", &a[i], &b[i]);
    vector<int> vec[2];
    for(int i=2; i*i<=a[0]; i++)
    {
        if(a[0] % i == 0)
        {
            vec[0].push_back(i);
            vec[1].push_back(a[0]/i);
        }
    }
    swap(a[0], b[0]);
    for(int i=2; i*i<=a[0]; i++)
    {
        if(a[0] % i == 0)
        {
            vec[0].push_back(i);
            vec[1].push_back(a[0]/i);
        }
    }
    for(int i : vec[1])
    {
        bool f = 1;
        for(int j=0; j<vec[0].size(); j++) if(i % vec[0][j] == 0) {f = 0; break;}
        if(f)
        fin.push_back(i);
    }
    for(int i : vec[0])
    {
        bool f = 1;
        for(int j=0; j<vec[0].size(); j++)
        if(i % vec[0][j] == 0 && vec[0][j] != i) {f = 0; break;}
        else if(i % vec[0][j] == 0) break;
        if(f)
        fin.push_back(i);
    }
    solve();

    if(can(a[0]))
    {
        cout << a[0] << endl;
        return 0;
    }
    if(can(b[0]))
    {
        cout << b[0] << endl;
        return 0;
    }
    cout << -1 << endl;

}
