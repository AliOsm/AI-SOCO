#include <bits/stdc++.h>
//#pragma GCC optimize("Ofast")

#define LL long long
#define se second
#define fi first

using namespace std;

const int N = 2e5 + 7;
const int mod = 1e9 + 7;
const int B = sqrt(2e5);

int n;
int cnt;
int b[N];
bool used[N];
vector < vector < int > > a;
vector < int > v[N],ans[N];

int main()
{
    ios_base::sync_with_stdio(0);
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    cin >> n;
    a.resize(n * (n - 1) / 2 + 10);
    for( int i = 1; i <= n * (n-1) / 2; i++ ){
        cin >> b[i];
        a[i].resize(b[i] + 10);
        for( int j = 1;  j <= b[i]; j++ ){
            cin >> a[i][j];
            v[a[i][j]].push_back(i);
        }
    }
    for( int i = 1; i <= n * (n - 1) / 2; i++ ){
        vector < int > v1;
        for( int j = 1;  j <= b[i]; j++ ){
            if( !used[a[i][j]] ){
                v1.push_back(a[i][j]);
            }
            if( v1.size() > 1 ){
                bool good = false;
                for( int h = 1; h < v1.size(); h++ ){
                    if( v[v1[h]].size() != v[v1[0]].size() ){
                        good = true;
                        break;
                    }
                    for( int g = 0; g < v[v1[h]].size(); g++ ){
                        if( v[v1[h]][g] != v[v1[0]][g] ){
                            good = true;
                            break;
                        }
                    }
                }
                if( good ){
                    v1.pop_back();
                }
            }
        }
        if( v1.size() > 0 ){
            for( auto x : v1 ){
                ans[cnt].push_back(x);
                used[x] = true;
            }
            cnt++;
        }
    }
    if( cnt < n ){
        int x = n - cnt;
        for( int i = 0; i < cnt; i++ ){
            while( ans[i].size() > 1 ){
                ans[cnt++].push_back(ans[i].back());
                ans[i].pop_back();
                if( cnt == n )break;
            }
            if( cnt == n )break;
        }
    }
    for( int i = 0; i < cnt; i++ ){
        cout << ans[i].size() << " ";
        for( auto x : ans[i] )cout << x << " ";
        cout << "\n";
    }
}
