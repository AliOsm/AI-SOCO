#include <bits/stdc++.h>
using namespace std;

const int N = 3030, oo = 1e9;

int n, i, s[N], c[N], dp[N][N][4], ans = oo;
map<int, int> mp;

int solve(int idx = 0, int prv = 0, int rem = 3) {
	if (rem <= 0) return 0;
	if (idx >= n) return oo;

	int& ret = dp[idx][prv][rem];

	if (~ret) return ret;

	ret = solve(idx + 1, prv, rem);

	if (s[idx] > prv) {
		ret = min(ret, solve(idx + 1, s[idx], rem - 1) + c[idx]);
	}

	return ret;
}

int main() {
	cin >> n;
	for (i = 0; i < n; ++i) {
		cin >> s[i];
		mp[s[i]];
	}
	for (i = 0; i < n; ++i) {
		cin >> c[i];
	}
	i = 0;
	for (auto& it : mp) {
		it.second = ++i;
	}
	for (i = 0; i < n; ++i) {
		s[i] = mp[s[i]];
	}
	memset(dp, -1, sizeof(dp));
	ans = solve();
	cout << (ans >= oo ? -1 : ans);
	return 0;
}