//g++ -o A A.cpp

//g++ -Wl,--stack,16777216 -o A A.cpp


//#include <bits/stdc++.h>
//using namespace std;

#include <iostream>
using std::cin;
using std::cout;
using std::string;
using std::endl;

#include <algorithm>
using std::sort;
using std::min;
using std::max;
using std::pair;//pair <int,int> data[100];sort(data,data+100);

#include <math.h>
//sqrt(123.123)
//ceil(0.12)=1
//pow(x,2)=x^2

#include<cstdio>
//printf()

#include <map>
using std::map;
//map <string,int> x;

#include <stdlib.h>
//abs(-123);

#include <vector>
using std::vector;
//vector<int> x;
//x.push_back(0);
//x.pop_back();
//vector<int> x(10,3);   ==>   x[0]==x[1]==...==x[9]==3;
//vector<int> y(x);      ==>   y[0]==y[1]==...==y[9]==3;
//cout<<x.size();        ==>   10


#include <queue>
using std::queue;

#include <deque>
using std::deque;



#include <stack>
using std::stack;
//.push(123)
//.pop()
//.top()
//.size()
//.size()

#include <set>
using std::set;
using std::multiset;

/*
long long gcd(long long a, long long b)
{
    //O(log(max(a,b)))
    long long t;
    while(b!=0)
    {
        t=a%b;
        a=b;
        b=t;
    }
    return a;
}
*/

/*
long long C(int x,int y)
{
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer/=i;
    }
    return answer;
}
*/




/*
//C(x,y) % mod
long long C(long long x,long long y)
{
    long long mod=1000000007;
    if(x<y){
        return 0;
    }
    long long answer=1;
    int i;
    if(y>x-y)
    {
        y=x-y;
    }
    for(i=1;i<=y;i++)
    {
        answer*=(x+1-i);
        answer%=mod;
    }
    for(i=1;i<=y;i++)
    {
        while(answer%i!=0){
            answer+=mod;
        }
        answer/=i;
        answer%=mod;
    }
    return answer%mod;
}


for (i=0; i<1010; i++) {
    c[i][0]=1;
    for (j=1; j<=i; j++) c[i][j]=(c[i-1][j-1]+c[i-1][j])%md;
}
*/

/*
struct classcomp {
  bool operator() (const int& lhs, const int& rhs) const
  {return lhs>rhs;}
};
*/





int main()
{
   int n,m,k;cin>>n>>m>>k;
   int color[101]={0,};
   for(int i=1;i<=n;i++)cin>>color[i];
   
   int price[101][101]={0,};
   for(int i=1;i<=n;i++){
       for(int j=1;j<=m;j++){
           cin>>price[i][j];
       }
   }
   
   //[n][m][k]
   long long dp[101][101][101]={0,};
   long long INF=12345678901234;
   
   for(int i=0;i<101;i++)for(int j=0;j<101;j++)for(int q=0;q<101;q++)dp[i][j][q]=INF;
   
   
   if(color[1]==0){
       for(int i=1;i<=m;i++){
           dp[1][i][1]=price[1][i];
       }
   }else{
       dp[1][color[1]][1]=0;
   }
    
    
    
    for(int i=2;i<=n;i++){
        if(color[i]!=0){
            int c = color[i];
            for(int j=1;j<=m;j++){
                for(int q=1;q<=k;q++){
                    if(j==c){
                        dp[i][c][q] = min(dp[i][c][q],dp[i-1][j][q]);
                    }else{
                        dp[i][c][q] = min(dp[i][c][q],dp[i-1][j][q-1]);
                    }
                }
            }
        }else if(color[i]==0){
            for(int j=1;j<=m;j++){
                for(int q=1;q<=k;q++){
                    for(int x=1;x<=m;x++){
                        if(x==j){
                            dp[i][j][q] = min(dp[i][j][q],dp[i-1][x][q]+price[i][j]);
                        }else{
                            dp[i][j][q] = min(dp[i][j][q],dp[i-1][x][q-1]+price[i][j]);
                        }
                    }
                }
            }
        }
    }
    
    long long answer=dp[n][1][k];
    
    for(int i=2;i<=m;i++)answer=min(answer,dp[n][i][k]);
    
    cout<<(answer==INF?-1:answer);
    
    return 0;
}


