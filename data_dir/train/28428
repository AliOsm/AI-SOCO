#include <bits/stdc++.h>
#define MOD 1000000007

using namespace std;

const double pi = acos(-1);
const int N = 5e3 + 5;

int n, a[N], b[N], w[N], sz[N], x, y, s;
vector<pair<int, int>> adj[N];
long long g[N], h[N], ans = 2e18, tot_a, tot_b, tot, mn_a, mn_b, mn;

void pre(int u, int prv){
    ++s;
    for(auto i: adj[u])
        if(prv != i.first && i.first != x && i.first != y)
            pre(i.first, u);
}

void DFS(int u, int prv){
    sz[u] = 1;
    g[u] = 0;
    for(auto e: adj[u]){
        int v = e.first;
        int c = e.second;
        if(v == prv || v == x || v == y) continue;
        DFS(v, u);
        sz[u] += sz[v];
        g[u] += g[v] + 1ll * sz[v] * c;
        tot += 1ll * c * sz[v] * (s - sz[v]);
    }
}

void DFS_tany(int u, int prv){
    mn = min(mn, h[u]);
    for(auto e: adj[u]){
        int v = e.first;
        int c = e.second;
        if(v == prv || v == x || v == y) continue;
        h[v] = h[u] - 1ll * sz[v] * c + 1ll * (s - sz[v]) * c;
        DFS_tany(v, u);
    }
}

int main()
{
    scanf("%d", &n);
    for(int i=1; i<n; i++){
        scanf("%d %d %d", a + i, b + i, w + i);
        adj[a[i]].push_back({b[i], w[i]});
        adj[b[i]].push_back({a[i], w[i]});
    }
    for(int i=1; i<n; i++){
        x = a[i], y = b[i];
        s = tot = 0;
        mn = 2e18;
        pre(x, 0);
        DFS(x, 0);
        h[x] = g[x];
        DFS_tany(x, 0);
        tot_a = tot;
        mn_a = mn;
        s = tot = 0;
        mn = 2e18;
        pre(y, 0);
        DFS(y, 0);
        h[y] = g[y];
        DFS_tany(y, 0);
        tot_b = tot;
        mn_b = mn;
        ans = min(ans, 1ll* w[i] * sz[x] * sz[y] + tot_a + tot_b + mn_a * sz[y] + mn_b * sz[x]);
    }
    printf("%lld", ans);
    return 0;
}
