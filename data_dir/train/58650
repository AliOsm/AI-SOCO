/* ****revpro**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define endl	   '\n'
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define rep(i,a,b)  for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)    
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define mp          make_pair
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mii	    map<ll,ll>
using namespace std;

#define N  100005
unordered_map <ll,ll> dis,vis;
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		ll n;
		cin>>n;
		ll l[n],c[n],g=0;
		rep(i,0,n) cin>>l[i],g=__gcd(g,l[i]);
		rep(j,0,n){
			cin>>c[j];
			if(dis.find(l[j])==dis.end())
				dis[l[j]]=c[j];
			else dis[l[j]]=min(dis[l[j]],c[j]);
		}
		if(g!=1)
		{
			cout<<-1;
			return 0;
		}
		priority_queue <pii> q;
		for(auto i:dis)
			q.push({-i.S,i.F});
		pii p;
		while(!q.empty())
		{
			p=q.top();
			q.pop();
			if(vis[p.S])
				continue;
			rep(i,0,n)
			{
				ll g=__gcd(p.S,l[i]);
				if(dis.find(g)==dis.end()||dis[g]>dis[p.S]+c[i])
				{
					dis[g]=dis[p.S]+c[i];
					q.push({-dis[g],g});
				}
			}
		}
		cout<<dis[1];
	}
	return 0;
}