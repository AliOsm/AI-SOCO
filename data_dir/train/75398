/**
 *   Author: Praveen Ojha
 *   Created: 11 May 2019
 *   Time: 21:04:52
**/
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define mod 1000000007
#define inf 1e18+5
#define PI 3.141592653589793238510
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define __ ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define vi vector<int>
#define vpii vector<pair<int,int> > 
#define vvi vector<vector<int> >
#define PRINT_TIME cerr << "Time elapsed: " << 1.0 * clock() / CLOCKS_PER_SEC << " s." <<endl;
#define sim template < class c
#define ris return * this
#define dor > debug & operator <<
#define eni(x) sim > typename   enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {
sim > struct rge { c b, e; };
sim > rge<c> range(c i, c j) { return rge<c>{i, j}; }
sim > auto dud(c* x) -> decltype(cerr << *x, 0);
sim > char dud(...);
struct debug {
#ifdef LOCAL
~debug() { cerr << endl; }
eni(!=) cerr << boolalpha << i; ris; }
eni(==) ris << range(begin(i), end(i)); }
sim, class b dor(pair < b, c > d) {
  ris << "(" << d.first << ", " << d.second << ")";
}
sim dor(rge<c> d) {
  *this << "[";
  for (auto it = d.b; it != d.e; ++it)
    *this << ", " + 2 * (it == d.b) << *it;
  ris << "]";
}
#else
sim dor(const c&) { ris; }
#endif
};
#define imie(...) " [" << #__VA_ARGS__ ": " << (__VA_ARGS__) << "] "
typedef long double ld;
typedef pair<int,int> pii;
/////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////
map <int,pii> mp;
int32_t main(){__
    int n,m,s,f,x,y,z;
    cin>>n>>m>>s>>f;
    for(int i=0;i<m;i++){
        cin>>x>>y>>z;
        mp[x]={y,z};
    }
    string ans;
    int prev=0;
    for(auto i:mp){
        if(s==f)
            break;
        if(i.first-prev>1){
            int add=i.first-prev-1;
            while(s<f && add)
            {
                s++;
                ans+='R';
                add--;
            }
            while(s>f && add){
                s--;
                ans+='L';
                add--;
            }
            if(s==f)
                break;
        }
        int left=i.second.first,right=i.second.second;
        if(s>=left && s<=right){
            ans+='X';
        }
        else if(s<f && s+1>=left && s+1<=right){
            ans+='X';
        }
        else if(s>f && s-1>=left && s-1<=right){
            ans+='X';
        }
        else
        {
            if(s<f){
                ans+='R';
                s++;
            }
            else if(s>f){
                ans+='L';
                s--;
            }
            else
                break;
        }
        prev=i.first;
    }
    while(s<f)
    {
        ans+='R';
        s++;
    }
    while(s>f){
        ans+='L';
        s--;
    }
    cout<<ans<<"\n";
return 0;
}