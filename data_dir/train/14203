#include <bits/stdc++.h>
using namespace std;
#define ll  long long
#define pb  push_back
#define vi  vector<ll >
#define vvi vector<vi >
#define all(x) x.begin(), x.end()

struct stree {
    ll  inf;
    int n;
    vi  t;
    stree () {};
    stree(vi a) {
        inf = (ll)2e9 + 5;
        n = 1;
        while (n < a.size())
            n *= 2;
        t.assign(n + n, inf);
        for (int i = 0; i < a.size(); ++i)
            t[n + i] = a[i];
        for (int i = n - 1; i > 0; --i)
            t[i] = min(t[i + i], t[i + i + 1]);
    };
    void upd(int i, ll x) {
        t[i += n] = x;
        for (i /= 2; i > 0; i /= 2)
            t[i] = min(t[i + i], t[i + i + 1]);
    }
    ll get(int l, int r) {
        ll res = inf;
        for (l += n, r += n; l <= r; l /= 2, r /= 2) {
            if (l % 2 == 1)
                res = min(res, t[l++]);
            if (r % 2 == 0)
                res = min(res, t[r--]);
        }
        return res;
    }
};

int inf = (ll)2e9 + 5;
int n;
vi  a, b;
vector<set<int> > g;

bool ok() {
    cin >> n;
    a.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> a[i];
    b.resize(n);
    for (int i = 0; i < n; ++i)
        cin >> b[i];

    stree t(a);

    g.clear();
    g.resize(n + 1);
    for (int i = 0; i < n; ++i)
        g[a[i]].insert(i);

    for (int i = 0; i < n; ++i) {
        int x = b[i];
        if (g[x].empty()) return false;
        int j = *g[x].begin();
        g[x].erase(j);
        a[j] = inf;
        t.upd(j, inf);
        if (t.get(0, j) < x) return false;
    }
    return true;
}

int main() {
    ios_base::sync_with_stdio(false);
    int t; cin >> t;
    while (t--)
        cout << (ok() ? "YES\n" : "NO\n");

    return 0;
}