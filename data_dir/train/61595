#include <bits/stdc++.h>
using namespace std;

string n;
int a[100005], b[100005], c[100005], d[100005];

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int l, m, rem, j;
    bool tf;
    cin >> n;
    l = n.size();
    b[0] = c[0] = d[0] = 0;
    for(int i = 1; i <= l; i++)
        d[i] = (int)n[i - 1] - 48;
    for(int i = 0; i <= l; i++)
        a[i] = d[i];
    m = l;
    for(int i = m; i > m / 2; i--) {
        b[i] = a[i] / 2;
        if(m - i + 1 != i)
            b[m - i + 1] = a[i] - b[i];
        if(a[i] != 9 && a[m - i] == 1) {
            b[i] += 5;
            if(m - i + 1 != i)
                b[m - i + 1] += 5;
            j = i - 1;
            a[j]--;
            while(a[j] == -1) {
                a[j] = 9;
                a[--j]--;
            }
        }
        a[m - i + 1] -= (b[i] + b[m - i + 1]) % 10;
        if(a[m - i + 1] < 0)
            a[m - i + 1] += 10;
    }
    for(int i = 1; i <= m; i++)
        c[i] = b[m - i + 1];
    rem = 0;
    for(int i = m; i >= 0; i--) {
        rem = b[i] + c[i] + rem;
        a[i] = rem % 10;
        rem /= 10;
    }
    tf = true;
    if(m == 0 || b[1] == 0) tf = false;
    for(int i = 0; i <= l; i++)
        if(a[i] != d[i]) {
            tf = false;
            break;
        }
    if(tf) {
        for(int i = 1; i <= m; i++)
            cout << b[i];
        return 0;
    }
    for(int i = 0; i <= l; i++)
        a[i] = d[i];
    m = l - 1;
    for(int i = m; i > m / 2; i--) {
        b[i] = a[i + 1] / 2;
        if(m - i + 1 != i)
            b[m - i + 1] = a[i + 1] - b[i];
        if(a[i + 1] != 9 && a[m - i + 1] == 1) {
            b[i] += 5;
            if(m - i + 1 != i)
                b[m - i + 1] += 5;
            j = i;
            a[j]--;
            while(a[j] == -1) {
                a[j] = 9;
                a[--j]--;
            }
        }
        a[m - i + 2] -= (b[i] + b[m - i + 1]) % 10;
        if(a[m - i + 2] < 0)
            a[m - i + 2] += 10;
    }
    for(int i = 1; i <= m; i++)
        c[i] = b[m - i + 1];
    rem = 0;
    for(int i = m; i >= 0; i--) {
        rem = b[i] + c[i] + rem;
        a[i + 1] = rem % 10;
        rem /= 10;
    }
    tf = true;
    if(m == 0 || b[1] == 0) tf = false;
    for(int i = 0; i <= l; i++)
        if(a[i] != d[i]) {
            tf = false;
            break;
        }
    if(tf) {
        for(int i = 1; i <= m; i++)
            cout << b[i];
        return 0;
    }
    cout << 0;
}
