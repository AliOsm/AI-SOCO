#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo ll(1e16)
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define sf(x) scanf("%d", &x);
#define sf2(x, y) scanf("%d %d", &x, &y);
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z);
#define sfll(x) scanf("%I64d", &x);
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y);
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z);
#define sfd(x) scanf("%f", &x);
#define pr(x) printf("%I64d\n", x);

typedef long long ll;
using namespace std;

vector<ll>a;
ll dp[200010][2];

ll solve(int i, bool dir) {
    if(i < 0 || i >= a.size()) return 0;
    if(dp[i][dir] != -1) return dp[i][dir];
    dp[i][dir] = oo;
    return dp[i][dir] = a[i] + (dir ? solve(i + a[i], !dir) : solve(i - a[i], !dir));
}

int main() {
    int n;
    while(cin >> n) {
        a.resize(n);
        for(int i = 1; i < n; scanf("%I64d", &a[i++]));
        
        memset(dp, -1, sizeof dp);
        dp[0][0] = oo;
        for(int i = 1; i < n; i++) {
            int tmp;
            if(dp[i][0] == -1) tmp = solve(i, 0);
            if(dp[i][1] == -1) tmp = solve(i, 1);
        }


        for(int i = 1; i < n; i++) {
            if(dp[i][0] >= oo) { pr(-1LL); }
            else pr(i + dp[i][0]);
        }
    }
    return 0;
}
