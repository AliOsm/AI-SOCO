#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef   long long  int   ll;
long long int mod=1e9+7;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=0,n,res=0,k,ans=0;
string s2="zero",ch="",s,t,s1="";
vector< pair<string,ll> >vm;
vector< pair< pair<ll,ll>,ll > > vvv;
vector<pair<ll,ll> >vv,vv1;
vector< ll > v1;
set< pair<ll,ll> >st;
set<ll>v[200005];
ll a[200005],vis[200005],b[200005];
void dfs(ll x,ll p){
    vis[x]=1;
    if(b[x]==x)v1.pb(x);
    for(set<ll>::iterator it=v[x].begin();it!=v[x].end();it++){
        ll y=(*it);
        if(!vis[y])dfs(y,x);
        else if(vis[y]&&y!=p||a[x]==y&&a[y]==x){
            st.insert({min(x,y),max(x,y)});
        }

    }


}


int main(){
                                        In_the_name_of_allah_the_merciful


    ll i=0,x,z,y,j=0,q,mm=0,mx=0,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,l1,r1,d;
    set< pair<ll,ll>  > ::iterator it,it1;
   // freopen("a.txt","r",stdin);
    cin>>n;
    for(i=1;i<=n;i++){
        cin>>a[i];
        b[i]=a[i];
    }
    for(i=1;i<=n;i++){
        if(a[i]!=i){
            v[i].insert(a[i]);
            v[a[i]].insert(i);
        }
    }
    memset(vis,0,sizeof(vis));
    for(i=1;i<=n;i++){
        if(!vis[i])dfs(i,0);
    }
    for(it=st.begin();it!=st.end();it++){
        pair<ll,ll> p=(*it);
        if(b[p.first]==p.second)b[p.first]=p.first;
        else b[p.second]=p.second;
    }
    for(i=1;i<=n;i++)v[i].clear();
    for(i=1;i<=n;i++){
        if(b[i]!=i){
            v[i].insert(b[i]);
            v[b[i]].insert(i);
        }
    }
    v1.clear();
    memset(vis,0,sizeof(vis));
    for(i=1;i<=n;i++){
        if(!vis[i]){
            dfs(i,0);
        }
    }
    if((ll)v1.size()){
        ll node=v1[0];
        for(i=0;i<v1.size();i++){
            if(b[v1[i]]==a[v1[i]]&&a[v1[i]]==v1[i])node=v1[i];
        }
        for(i=0;i<v1.size();i++){
            b[v1[i]]=node;
        }
    }
    for(i=1;i<=n;i++)if(b[i]!=a[i])res++;
    cout<<res<<endl;
    for(i=1;i<=n;i++)cout<<b[i]<<" ";





                                                Alhamdulillah
 }

