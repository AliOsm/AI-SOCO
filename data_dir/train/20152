#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef vector<ll> vl ;

#define mp make_pair
#define pb push_back
#define f first
#define s second
#define all(v) (v).rbegin(),(v).rend()

const int MOD = 1000000007;
const int N = 1000005;
const double PI =4*atan(1);

ll m,x,y,n,p,k;
ll z[N];
string ch,ch2;
map<ll,ll> maa;

        void pattern(){
            ll left=0;
            ll right=0;
            for(int k=1;k<n;k++){
                if(k>right){
                    right=k;
                    left=k;
                    while(right<n && ch2[right]==ch2[right-left])
                        right++;
                    z[k]=right-left;
                    right--;
                }
                else {
                    ll k1=k-left;
                    if(z[k1]+k-1<right){
                        z[k]=z[k1];
                    }else{
                        left=k;
                        while(right<n && ch2[right]==ch2[right-left])
                        right++;
                        z[k]=right-left;
                        right--;
                    }
                }
            }
         }


int main(){
    ios::sync_with_stdio(0);
    //freopen("easy.txt","r",stdin);
    cin >> ch;
    for(int i=0;i<ch.size();i++){
        maa[ch[i]-'0']++;
    }
    cin >> ch2;
     n=ch2.size();
    pattern();
    ll res=0;
    for(int i=1;i<n;i++){
        if(z[i]==n-i)res=max(res,n-i);
    }
    //cout << res << endl;
    string sh="",sh1="";
    for(int i=0;i<res;i++){
        sh+=ch2[i];
    }
    if(res==0){
        sh1=ch2;
    }else{
        for(int i=res;i<n;i++){
            sh1+=ch2[i];
        }
    }
    //cout << sh1 << " " << sh << endl;
    x=sh.size();
    y=sh1.size();
    k=ch.size();
    while(x<k){
        sh+=sh1;
        x+=y;
    }
    string ans="";
    for(int i=0;i<x;i++){
        if(sh[i]=='0' && maa[0]>0){
            ans+=sh[i];
            maa[0]--;
        }else if(sh[i]=='1' && maa[1]>0){
            maa[1]--;
            ans+=sh[i];
        }else{
            break;
        }
    }
    x=ans.size();
    for(int i=0;i<k-x;i++){
        if(maa[0]){ans+='0';maa[0]--;}
        else ans+='1';
    }
    cout << ans;

    return 0;
}