#include <bits/stdc++.h>

#define Mod 1000000007
#define fr first
#define se second

using namespace std;

int N;
map <int, int> mp;
vector <long long> v;
long long dp[(1<<10)][(1<<10)];
long long NUM = 1;

long long Pow_Mod(long long a, long long b) {
	if(b == 0) return 1;
	long long x = Pow_Mod(a, b/2);
	x = (x*x)%Mod;
	if(b%2) x = (x*a)%Mod;
	return x;
}

bool check(int x) {
	while(x) {
		int t = x%10;
		if(t != 4 &&  t != 7) return 0;
		x /= 10;
	}
	return 1;
}

long long memo(int i, int j) {
	if(i+1 < j) return 0;
	if(j == 0) return 1;
	if(i < 0) return 0;
	if(dp[i][j] != -1) return dp[i][j];
	dp[i][j] = ((memo(i-1, j)%Mod) + ((memo(i-1, j-1)%Mod) * (v[i]%Mod))%Mod)%Mod;
	return dp[i][j];
}

long long GET(int i) {
	if(i > N) return 0;
	if(i == 0 || N == i) return 1;
	NUM = (NUM * (i+1))%Mod;
	NUM = (NUM * Pow_Mod(N-i, Mod-2))%Mod;
	return NUM;
}

long long C(int i, int j) {
	long long ans = 1;
	for(int k=1; k<=j; k++) {
		ans = (ans * (i-k+1))%Mod;
		ans = (ans * Pow_Mod(k, Mod-2))%Mod;
	}
	return ans;
}

int main() {
	memset(dp, -1, sizeof dp);
	int n, k, t;
	cin >> n >> k;
	for(int i=0; i<n; i++) {
		cin >> t;
		if(check(t)) mp[t]++;
		else N++;
	}
	if(k < N) NUM = C(N, k+1);
	for(auto elem : mp) v.push_back(elem.se);
	long long ans = 0;
	for(int i=0; i<=k; i++) ans = (ans + ((memo(v.size()-1, i)%Mod) * (GET(k-i)%Mod))%Mod)%Mod;
	cout << ans%Mod << endl;
	return 0;
}