                     /*"Success isn't permanent, failure isn't fatal,
                                      it's the courage to continue that counts"*/
#include<bits/stdc++.h>
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
using namespace std;
const ll mod=1e9+7;         
const int N=5e5+4;

vector<int> v[N];

int l[N],r[N],cntr=1;

void dfs(int node,int par)
{
    for(int it:v[node])
    if(it!=par)
    {
        l[it]=cntr++;
    }
    
    r[node]=cntr++;
    
    reverse(v[node].begin(),v[node].end());  //for preventing partial intersection among children and ensuring one range inside another

    for(int it:v[node])
    if(it!=par)
    dfs(it,node);
}

int main()
{   
    int n;
    
    scn(n);
    
    rep(i,0,n-1)
    {
        int a,b;
        
        scn(a);  scn(b);
        
        v[a].pb(b);
        
        v[b].pb(a);
    }
    
    l[1]=cntr++;
    
    dfs(1,-1);
    
    rep(i,1,n+1)
    printf("%d %d\n",l[i],r[i]);
    
    return 0;
}