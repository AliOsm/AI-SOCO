#include <bits/stdc++.h>
#define F first
#define S second
using namespace std;
typedef long long ll;
typedef pair<ll, ll>pll;

const int mod = 1e9 + 7;
const int N = 1e6 + 5;
const int b = 31;
const int b2 = 37;

int pw[N], inv[N], pw2[N], inv2[N];

int mul(int a, int b)
{
    a = (a + mod) % mod;
    b = (b + mod) % mod;
    return (1ll * a * b) % mod;
}

int add(int a, int b)
{
    a = (a + mod) % mod;
    b = (b + mod) % mod;
    return (a + b) % mod;
}

int fastpow(int base, int power)
{
    if(!power)
        return 1;
    int ret = fastpow(base, power / 2);
    ret = mul(ret, ret);
    if(power & 1)
        ret = mul(ret, base);
    return ret;
}

void pre()
{
    pw[0] = inv[0] = pw2[0] = inv2[0] =1;
    int mul_inv = fastpow(b, mod - 2);
    int mul_inv2 = fastpow(b2, mod - 2);
    for(int i = 1; i < N; i++)
    {
        pw[i] = mul(pw[i - 1], b), inv[i] = mul(inv[i - 1], mul_inv);
        pw2[i] = mul(pw2[i - 1], b2), inv2[i] = mul(inv2[i - 1], mul_inv2);
    }
}

void biggest(vector<char> &s,vector<char> &t)
{
    int sz = min(s.size(), t.size());
    pll hsh_t = {0, 0}, hsh_s = {0, 0};
    int j = 0, k = 0;
    for(int i = 0;i < sz;++i)
    {
        hsh_t.F = add(hsh_t.F, mul(t[i] - 'a' + 1, pw[k]));
        hsh_t.S = add(hsh_t.S, mul(t[i] - 'a' + 1, pw2[k]));
        ++k;
    }
    for(int i = (int)s.size() - sz;i < s.size();++i)
    {
        hsh_s.F = add(hsh_s.F, mul(s[i] - 'a' + 1, pw[j]));
        hsh_s.S = add(hsh_s.S, mul(s[i] - 'a' + 1, pw2[j]));
        ++j;
    }
    j = (int)s.size() - sz;
    while(hsh_s != hsh_t)
    {
        --k;
        hsh_t.F = add(hsh_t.F, -mul(t[k] - 'a' + 1, pw[k]));
        hsh_t.S = add(hsh_t.S, -mul(t[k] - 'a' + 1, pw2[k]));
        hsh_s.F = add(hsh_s.F, -mul(s[j] - 'a' + 1, pw[0]));
        hsh_s.S = add(hsh_s.S, -mul(s[j] - 'a' + 1, pw2[0]));
        hsh_s.F = mul(hsh_s.F, inv[1]);
        hsh_s.S = mul(hsh_s.S, inv2[1]);
        ++j;
    }
    for(int i = k;i < t.size();++i)
        s.push_back(t[i]);
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    pre();
    int n;
    vector<char> s, t;
    cin >> n;
    for(int i = 0;i < n;++i)
    {
        string tmp;
        cin >> tmp;
        for(auto it : tmp)
            t.push_back(it);
        biggest(s, t);
        t.clear();
    }
    for(auto it : s)
        cout << it;
    return 0;
}
