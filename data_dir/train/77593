#include <bits/stdc++.h>
#define endl '\n'

//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4")

using namespace std;
template<class T, class T2> inline int chkmax(T &x, const T2 &y) { return x < y ? x = y, 1 : 0; }
template<class T, class T2> inline int chkmin(T &x, const T2 &y) { return x > y ? x = y, 1 : 0; }
const int MAXN = (1 << 10);

int n, a[MAXN];
int dp[MAXN][MAXN][2];
vector<int> adj[MAXN];

void read()
{
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> a[i];
}

int rec(int l, int r, int fl)
{
	if(l == r) 
		return 1;

	int mid = (fl == 0) ? l : r;	
	int &memo = dp[l][r][fl];
	if(memo != -1) return memo;

	memo = 0;
	int l_ok = (l == mid), r_ok = (r == mid);
	for(int it: adj[mid])
	{
		if(!l_ok && l <= it && it < mid)
			if(rec(l, it, 1) && rec(it, mid - 1, 0)) l_ok = 1;

		if(!r_ok && mid < it && it <= r)
			if(rec(mid + 1, it, 1) && rec(it, r, 0)) r_ok = 1;
	}

	memo = (l_ok & r_ok);
	return memo;
}

void solve()
{
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
			if(i != j && __gcd(a[i], a[j]) != 1)
				adj[i].push_back(j);

	memset(dp, -1, sizeof(dp));
	for(int mid = 0; mid < n; mid++)
	{
		if(rec(0, mid, 1) && rec(mid, n - 1, 0))
		{
			cout << "YES" << endl;
			return;
		}
	}

	cout << "NO" << endl;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

