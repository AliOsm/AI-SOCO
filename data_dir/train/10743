#include <bits/stdc++.h>
#define ll long long
#define F first
#define S second
#define mp make_pair
#define All(v) v.begin(),v.end()
using namespace std;
int n;
int vis[100005];
vector < int > v[100005];
int dfs2(int node , int par)
{
    int F = node;
    vis[F] = 0;
    while(1)
    {
        if(v[node].size() > 2)
        {
            return -1;
        }
        if(v[node].size() == 1)
        {
            return node;
        }
        if(v[node][0] != par)
        {
            par = node;
            node = v[node][0];
        }
        else
        {
            par = node;
            node = v[node][1];
        }
    }

}
int dfs(int node)
{
    vis[node] = 1;
    vector < int > R;
    for(int i=0;i<v[node].size();i++)
    {
        int u = v[node][i];
        if(!vis[u])
        {
            int X = dfs2(u,node);
            if(X == -1)
                {
                    cout<<"No";
                    return 0;
                }
            R.push_back(X);
        }
    }
    cout<<"Yes\n";
    cout<<(R.size())<<endl;
    for(int i=0;i<R.size();i++)
    {
        cout<<node<<" "<<R[i]<<endl;
    }
}

int main()
{
    cin>>n;
    for(int i=0;i<n-1;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        v[x].push_back(y);
        v[y].push_back(x);
    }
    int maxx = 0 , root = 1;;
    for(int i=1;i<=n;i++)
    {
        if(v[i].size() > maxx)
        {
            maxx = v[i].size();
            root = i;
        }
    }
    dfs(root);


}
