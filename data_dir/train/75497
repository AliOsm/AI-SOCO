#include <bits/stdc++.h>

using namespace std;
const int N=3e5+5;
int a[N];
multiset<int>st;
vector<int>vec;
vector<int> adj[N];
int cal(int u)
{
    vec.clear();
    st.erase(st.find(a[u]));
    for(auto v:adj[u])
    {
        vec.push_back(a[v]);
        st.erase(st.find(a[v]));
    }
    int mx=a[u];
    if(st.size()!=0) mx=max(mx,(*prev(st.end()))+2);

    for(int i=0;i<vec.size();i++) mx=max(mx,vec[i]+1);
    st.insert(a[u]);

    for(int v:adj[u]) st.insert(a[v]);

    return mx;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n,ans=2e9;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
        st.insert(a[i]);
    }
    for(int i=1;i<n;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    for(int i=1;i<=n;i++)
    {
        ans=min(ans,cal(i));
    }
    cout<<ans<<endl;
    return 0;
}
