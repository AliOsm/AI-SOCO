//██████╗ ██╗   ██╗██╗      ██████╗ ███████╗
//██╔══██╗██║   ██║██║      ██╔══██╗██╔════╝
//██████╔╝██║   ██║██║█████╗██║  ██║█████╗
//██╔══██╗██║   ██║██║╚════╝██║  ██║██╔══╝
//██║  ██║╚██████╔╝██║      ██████╔╝███████╗
//╚═╝  ╚═╝ ╚═════╝ ╚═╝      ╚═════╝ ╚══════╝
#include <bits/stdc++.h>

//#pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#include <algorithm>
using namespace std;

#define fst first
#define snd second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back

#define all(v) (v).begin(), (v).end()
#define sz(v) ((int)(v).size())
#define sqr(x) ((x) * (x))

#define ADD_OPERATORS_IN(T, COMP) \
    bool operator < (const T& ot) const { return COMP(ot) == -1; } \
    bool operator > (const T& ot) const { return COMP(ot) == 1; } \
    bool operator == (const T& ot) const { return COMP(ot) == 0; } \
    bool operator != (const T& ot) const { return COMP(ot) != 0; }

#define ADD_OPERATORS_OUT(T, COMP) \
    bool operator < (const T& a, const T& b) const { return COMP(a, b) == -1; } \
    bool operator > (const T& a, const T& b) const { return COMP(a, b) == 1; } \
    bool operator == (const T& a, const T&b) const { return COMP(a, b) == 0; } \
    bool operator != (const T& a, const T&b) const { return COMP(a, b) != 0; }


typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector<int> vi;

mt19937_64 mt_rand(chrono::system_clock::now().time_since_epoch().count());

template<typename T1, typename T2> inline bool upmax(T1& a, T2 b) { return (a < b ? (a = b, true) : false); }
template<typename T1, typename T2> inline bool upmin(T1& a, T2 b) { return (b < a ? (a = b, true) : false); }

const int maxn = (int) 2e5+10;
const int maxlog = 21;
const int base = 998'244'353;
const ld eps = (ld) 1e-9;
const ld PI = acos(-1.);
const int pp = 41;
const int INF = (int) 2e9;
const ll llinf = (ll) 1e18;

int n;
ll a[maxn];

ll f[maxn];

pair<ll, ll> calc(ll x1, ll x2,  bool & ok) {
    ok = true;

    ll A2 = x1 + x2;
    if (A2 & 1) {
        ok = 0;
        return {-1, -1};
    }

    ll A = A2 / 2;
    ll B = x2 - A;
    if (B <= 0) {
        ok = 0;
        return {-1, -1};
    }
    return {A, B};
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    cin >> n;
    for (int i = 2; i <= n; i += 2) {
        cin >> a[i];
    }
    ll curPref = 0;
    for (int i = 2; i <= n; i += 2) {
        ll lst = a[i - 2];
        ll curAns = llinf;
        for (int j = 1; j * j <= a[i]; j ++) {
            if (a[i] % j == 0) {
                ll x1 = j;
                ll x2 = a[i] / j;
                bool ok;
                ll A, B;
                tie(A, B) = calc(x1, x2, ok);
                if (ok && sqr(B) > curPref && A < curAns) {
                    curAns = A;
                    a[i - 1] = sqr(B) - curPref;
                }
            }
        }
        if (curAns == llinf) {
            cout << "No";
            return 0;
        }
        curPref += a[i - 1];
        curPref += a[i];
    }
    cout << "Yes\n";
    for (int i = 1; i <=n ;i ++) {
        cout << a[i] << " ";
    }
    return 0;

}