#include<bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
//using namespace __gnu_pbds;

#define ss second
#define ff first
#define int long long
//#define double long double
#define pb push_back


const int N = 2e6 + 51 + 51, MOD = 1e9 + 7, mod = 998244353, INF = 2e18;

mt19937 Flash_new_51(51515);

using vi = vector <int>;
using vp = vector <pair <int, int>>;

//gp_hash_table<int, int> table;
int a, b, c, d, kek[10];
vi ans;

void check ()  {
    if (kek[1] || kek[0] || kek[2] || kek[3]) return;
    for (int i = 0; i < ans.size() - 1; i++) {
        if (abs(ans[i] - ans[i + 1]) != 1) return;
    }
    cout << "YES\n";
    for (auto to : ans) cout << to << ' ';
    exit(0);
}

void lool(int i, int j) {
        ans.clear();
        while (kek[i] && kek[j]) {
            ans.pb(i), ans.pb(j);
            kek[i]--, kek[j]--;
        }
        if (ans.empty());
        else
            if (ans.back() == 0 && kek[1]) ans.pb(1), kek[1]--;

        while (kek[2] && kek[1]) {
            ans.pb(2), ans.pb(1);
            kek[2]--, kek[1]--;
        }
        if (ans.empty());
        else
        if(ans.back() == 1 && kek[2]) kek[2]--, ans.pb(2);
           while (kek[2] && kek[3]) {
            ans.pb(3), ans.pb(2);
            kek[2]--, kek[3]--;
        }

        if (kek[0]) ans.pb(0), kek[0]--;
        if (kek[1]) ans.pb(1), kek[1]--;
        if (kek[2]) ans.pb(2), kek[2]--;
        if (kek[3]) ans.pb(3), kek[3]--;
        check();
}


signed main() {
    #ifdef Flash
     freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cin >> a >> b >> c >> d;
    for (int i = 0; i <= 3; i++) {
        for (int j = 0; j <= 3; j++) {
            if (i == j || abs(i - j) != 1) continue;
            kek[0] = a, kek[1] = b, kek[2] = c, kek[3] = d;
            lool(i, j);
        }
    }
    cout << "NO\n";

}
