#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <string>
#include <cmath>
#include <memory.h>
#include <sstream>
#include <stack>
#include <fstream>
#include <list>
#include <cstdio>
#include <map>
#include <list>
#include <stdlib.h>
#include <queue>
#include <set>
using namespace std;

/*
*/

long long dp[20][(1<<18) + 5];
int n;
int g[25][25];
int m;
int a[25];
long long sol(int i, int msk, int cnt)
{
	if(dp[i][msk] != -1) return dp[i][msk];
	if (cnt == m) return 0;
	long long r = 0;
	for (int j = 0; j < n; j++)
	{
		if (msk & (1<<j)) continue;
		r = max(r, g[i][j] + a[j] + sol(j, msk|(1<<j), cnt + 1));
	}
	return dp[i][msk] = r;
}
int main()
{
	int k;
	cin>>n>>m>>k;
	for (int i = 0; i < n; i++) cin>>a[i];
	memset(g, 0, sizeof(g));
	memset(dp, -1, sizeof(dp));
	for (int i = 0; i < k; i++)
	{
		int x, y, c;
		cin>>x>>y>>c;
		x--;
		y--;
		g[x][y] = c;
	}
	long long mx = 0;
	for (int i = 0; i < n; i++)
	{
		mx = max(mx, a[i] + sol(i, 1<<i, 1));
	}
	cout<<mx<<endl;
}