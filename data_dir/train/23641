#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int MAX = 55;
int arr[MAX], mark[MAX][MAX][MAX];
int n, p, f, pass = 1;
ll memo[MAX][MAX][MAX];

ll roll(int idx, int left, int sum) {
	if(idx == n + 1) {
		return left == 0;
	}
	ll &ans = memo[idx][left][sum];
	if(mark[idx][left][sum] == pass) {
		return ans;
	}
	mark[idx][left][sum] = pass;
	ans = roll(idx + 1, left, sum);
	if(idx != f && left > 0 && sum >= arr[idx]) {
		ans += roll(idx + 1, left - 1, sum - arr[idx]);
	}
	return ans;
}

int gcd(int a, int b) {
	return !b ? a : gcd(b, a % b);
}

double joga_na_mao_de_deus(vector<int> up, vector<int> down) {
	for(auto &a : up) {
		for(auto &b : down) {
			int g = gcd(a, b);
			a /= g;
			b /= g;
		}
	}
	ll u = 1, d = 1;
	for(auto &each : up) {
		u *= each;
	}
	for(auto &each : down) {
		d *= each;
	}
	return (double) u / (double) d;
}

int main() {
	scanf("%d", &n);
	fori(i, 1, n + 1) {
		scanf("%d", arr + i);
	}
	scanf("%d", &p);

	double ans = 0.0;
	fori(i, 1, n + 1) {
		f = i;
		int k = p - arr[i];
		if(k >= 0) {
			fori(j, 0, n) {
				ll cur = roll(1, j, k);	
				vector<int> up, down;
				fori(a, 1, j + 1) {
					up.push_back(a);
				}
				fori(a, 1, n - j) {
					up.push_back(a);
				}
				fori(a, 1, n + 1) {
					down.push_back(a);
				}
				ans += cur * joga_na_mao_de_deus(up, down);
			}
		}
		pass++;
	}
	printf("%.15lf\n", ans);

	return 0;
}

