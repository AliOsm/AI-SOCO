#include <bits/stdc++.h>
using namespace std;

template<typename T>
void out(T x) { cout << x << endl; exit(0); }
#define watch(x) cout << (#x) << " is " << (x) << endl




typedef long long ll;
const ll mod = 1e9+7;
const int maxn = 1e5 + 5;
const int inf = 1e9 + 10;

int n,m,k;
int c[maxn];

int par[maxn];
int cc[maxn];
int id=0;

vector<pair<int,int>> g[maxn];
int d[555][555];

void relax(int &x, int y) {
    x=min(x,y);
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);
    memset(cc,-1,sizeof(cc));
    
    cin>>n>>m>>k;
    for (int i=0; i<k; i++) {
	cin>>c[i];
    }

    for (int i=0; i<m; i++) {
	int u,v,w; cin>>u>>v>>w;
	--u;
	--v;
	g[u].push_back({w,v});
	g[v].push_back({w,u});
    }

    for (int i=0,x=0; i<k; i++) {
	for (int j=0; j<c[i]; j++) {
	    par[x++]=i;
	}
    }

    for (int i=0; i<n; i++) {
	if (~cc[i]) continue;
	cc[i]=++id;
	queue<int> qq;
	qq.push(i);
	while (qq.size()) {
	    int at=qq.front();
	    qq.pop();
	    for (auto ed: g[at]) {
		int wei=ed.first;
		int to=ed.second;
		if (wei) continue;
		if (~cc[to]) continue;
		cc[to]=id;
		qq.push(to);
	    }
	}
    }
    


    for (int i=1; i<n; i++) {
	if (par[i]==par[i-1]) {
	    if (cc[i] != cc[i-1]) out("No");
	}
    }

    for (int i=0; i<k; i++) {
	for (int j=0; j<k; j++) {
	    d[i][j]=inf;
	    if (i==j) d[i][j]=0;
	}
    }

    for (int i=0; i<n; i++) {
	for (auto ed: g[i]) {
	    int wei=ed.first;
	    int to=ed.second;
	    relax(d[par[i]][par[to]], wei);
	}
    }

    for (int q=0; q<k; q++) {
	for (int i=0; i<k; i++) {
	    for (int j=0; j<k; j++) {
		relax(d[i][j], d[i][q]+d[q][j]);
	    }
	}
    }



    cout<<"Yes\n";

    for (int i=0; i<k; i++) {
	for (int j=0; j<k; j++) {
	    if (d[i][j]==inf) d[i][j]=-1;
	    cout<<d[i][j]<<" ";
	}
	cout<<"\n";
    }



  

    return 0;
}
