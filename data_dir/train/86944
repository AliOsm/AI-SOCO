//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define sz(x) (int)(x).size()
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int _i = 0; _i < (n); _i++) ni(a[_i])
#define nal(a, n) for (int _i = 0; _i < (n); _i++) nl(a[_i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define st first
#define nd second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int mod = 1e9 + 7;
const int inf = 1e9 + 7;
const int N = 1e6 + 5;
const double eps = 1e-9;
array<int,3> a[N];

void solve() {
  int n; ll m; scanf("%d %I64d", &n, &m);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < 3; j++)
      ni(a[i][j]);
  }
  sort(a, a+n);
  int lo = m, hi = m, lst = 0;
  for (int i = 0; i < n; i++) {
    int d = a[i][0] - lst;
    if (hi+d < a[i][1] || lo-d > a[i][2]) {
      printf("NO\n");
      return;
    }
    hi += d, lo -= d;
    hi = min(hi, a[i][2]);
    lo = max(lo, a[i][1]);
    if (lo > hi) {
      printf("NO\n");
      return;
    }
    lst = a[i][0];
  }
  if (lo > hi)
    printf("NO\n");
  else
    printf("YES\n");
}

int main() {
  int q; scanf("%d", &q);
  while (q--) solve();
  return 0;
}
