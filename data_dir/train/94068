#include <bits/stdc++.h>
//#include "rubo.h"

#define dbl double
#define pb push_back
#define SQ(x) (x)*(x)
#define ll long long
#define ull unsigned long long
#define vc vector
#define F first
#define S second
//#define in ll
#define pll pair<ll,ll>
#define pii pair<int,int>
#define all(x) x.begin(), x.end()
#define loop(xxx, yyy) for(int xxx = 0; xxx < yyy; xxx++)
//#define printf(fmt...) (0)
//#define puts(fmt...) (0)

using namespace std;

const int MAXN = 111111;

int n;

vc<int> g[MAXN];

dbl res = 0;

void dfs(int v, int p, dbl &add) {
//    printf("%d %d %.3lf\n",v+1,p,add);

    dbl prev = add;

    if(v != 0)
        res += add;

    if (v == 0 && g[v].size() >= 2) {
        add /= g[v].size();
    }

    if (v != 0 && g[v].size() > 2) {
        add /= (g[v].size()-1);
    }




    for (int to : g[v])
        if (to != p) {
            dfs(to, v, add);
        }


    if (v == 0 && g[v].size() >= 2) {
        add = prev;
    }

    if (v != 0 && g[v].size() > 2) {
        add = prev;
    }


}


//void bfs() {
//
//    int start = 0;
//
//    queue<int> q;
//
//    used[start] = true;
//    q.push(start);
//
//    while (!q.empty()) {
//        int from = q.front();
//        q.pop();
//
//        for (int to : g[from]) {
//            if (!used[to]) {
//                used[to] = true;
//                d[to] = d[from] + 1;
//                q.push(to);
//            }
//        }
//    }
//
//
//}
//

int main() {
    scanf("%d", &n);


    int u, v;
    loop(i, n - 1) {
        scanf("%d%d", &u, &v);
        u--, v--;
        g[v].pb(u);
        g[u].pb(v);
    }

    dbl add = 1.0;
    dfs(0, -1, add);


//    loop(i,n){
//        printf("%d ",kotr[i]);
//    }
//    printf("\n");



//    printf("d\n");
//    loop(i,n){
//        printf("%d ",d[i]);
//    }
//    printf("\n");




    printf("%.11lf\n", res);

    return 0;
}
