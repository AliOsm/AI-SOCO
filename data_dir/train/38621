#include<bits/stdc++.h>

using namespace std;
#define FTB(i,a,b) for(LL i=a,_b=b;i<=_b;i++)
#define FT(i,a,b) for(LL i=a,_b=b;i<_b;i++)
#define FGB(i,a,b) for(LL i=a,_b=b;i>=_b;i--)
#define FG(i,a,b) for(LL i=a,_b=b;i>_b;i--)
#define endl "\n"
#define debug cout<<"debug\n"
#define PB push_back
#define mp make_pair
#define fi first
#define se second
#define PI 3.1415926535897
#define lbnd(f,s,gt) lower_bound(f,s,gt)
#define ubnd(f,s,gt) upper_bound(f,s,gt)
#define y1 aghksdmlsjdfjavljvlckdfmg
#define lamtron(n) fixed<<setprecision(n)
#define ALL(s) s.begin(),s.end()
#define ONLINE_JUDGE gshysrthrrthbd

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
template<class T> inline T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}

typedef double DB;
typedef long long LL;
typedef unsigned long long UL;
typedef long double LD;
typedef pair<LL,LL> II;
typedef vector<LL> VI;
typedef vector<II> VII;
typedef vector<bool> VB;



LL n,v[400005],dem1,dem2,top,prsum=0;
bool isPr[400005];
VI res;


int main(){
    ios::sync_with_stdio(false);cin.tie(0);
    #ifndef ONLINE_JUDGE
    	freopen("input.txt","r",stdin);
    	freopen("output.txt","w",stdout);
    #endif
    cin>>n;
    FTB(i,1,n){
        LL a;cin>>a;
        a==1?dem1++:dem2++;
    }
    FTB(i,2,400000){
        isPr[i]=true;
    }
    FTB(i,2,400000){
        if(isPr[i]==false) continue;
        v[++top]=i;
        for(LL j=i*i;j<=400000;j+=i) isPr[j]=false;
    }
    LL g=0;
    while(dem1>0||dem2>0){
        g++;
        if(dem1==0){
            while(dem2){
                dem2--;
                res.PB(2);
            }
            break;
        }
        else if(dem2==0){
            while(dem1){
                dem1--;
                res.PB(1);
            }
            break;
        }
        LL tmp=min(dem2,(v[g]-prsum)/2);
        FTB(i,1,tmp){
            dem2--;
            res.PB(2);
            prsum+=2;
        }
        while(dem1>0&&prsum<v[g]){
            res.PB(1);
            prsum++;
            dem1--;
        }

    }
    for(auto x:res) cout<<x<<" ";

	return 0;
}