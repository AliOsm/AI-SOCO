#include<bits/stdc++.h>
using namespace std;

const int N = 3005;
int p[N][N];
int g[N*N];


vector<int> reduce(vector<int> a, int b) {
    int n = a.size();
    deque<int> dq;
    vector<int> ans;

    int cr = -1;
    for (int l=0; l+b-1<n; l++) {
        int r = l+b-1;

        while (cr < r) {
            cr++;
            while (dq.size() && a[dq.back()] >= a[cr]) dq.pop_back();
            dq.push_back(cr);
        }

        while (dq.front() < l)  dq.pop_front();
        ans.push_back(a[dq.front()]);
    }
    return ans;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n, m, a, b;
    cin>>n>>m>>a>>b;

    int x, y, z;
    cin>>g[0]>>x>>y>>z;

    for (int i=1; i<n*m; i++) {
        g[i] = (1LL*g[i-1]*x+y)%z;
    }

    for (int i=0; i<n; i++) {
        for (int j=0; j<m; j++) {
            p[i][j] = g[i*m+j];
        }
    }



    int nn = n-a+1, mm = m-b+1;
    for (int i=0; i<n; i++) {
        vector<int> v;
        for (int j=0; j<m; j++)
            v.push_back(p[i][j]);

        v = reduce(v, b);
        assert(v.size() == mm);
        for (int j=0; j<mm; j++) {
            p[i][j] = v[j];
        }
    }
    m = mm;

    for (int j=0; j<m; j++) {
        vector<int> v;
        for (int i=0; i<n; i++)
            v.push_back(p[i][j]);

        v = reduce(v, a);
        assert(v.size() == nn);
        for (int i=0; i<nn; i++)
            p[i][j] = v[i];
    }

    n = nn;
    long long ans= 0;
    for (int i=0; i<n; i++)
        for (int j=0; j<m; j++)
            ans += p[i][j];

    cout<<ans<<endl;
}
