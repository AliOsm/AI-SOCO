#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll N=1e6+5;
const ll INF=1e18;
const ll mod=1e9+7;

#define f first
#define s second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define bits(x) __builtin_popcountll(x)
#define OPT ios_base::sync_with_stdio(false);cin.tie(NULL);

vector<ll> g[N];
ll n,m,u,v,d,x,in[N],out[N],mark[N];

void DFS(ll cur,ll par)
{
  in[cur]=-INF;
  if(mark[cur]){in[cur]=0;}
  for(ll i:g[cur])
  {
    if(i==par){continue;}
    DFS(i,cur);
    in[cur]=max(in[cur],1+in[i]);
  }
}

void DFSX(ll cur,ll par)
{
  ll x=-INF,y=-INF,ass;
  for(ll i:g[cur])
  {
    if(i==par){continue;}
    if(x<=in[i]){y=x;x=in[i];}
    else if(y<in[i]){y=in[i];}
  }
  for(ll i:g[cur])
  {
    if(i==par){continue;}
    if(in[i]==x){ass=y;}
    else{ass=x;}
    out[i]=max(1+out[cur],2+ass);
    if(mark[i]&&out[i]<0){out[i]=0;}
    DFSX(i,cur);
  }
}

void MaiN()
{
  cin>>n>>m>>d;
  for(ll i=1;i<=m;i++){cin>>x;mark[x]=1;}
  for(ll i=1;i<n;i++)
  {
    cin>>u>>v;
    g[u].pb(v);
    g[v].pb(u);
  }
  DFS(1,0);
  ll cnt=0;
  out[1]=-INF;
  if(mark[1]){out[1]=0;}
  DFSX(1,0);
  for(ll i=1;i<=n;i++)
  {
    if(in[i]<=d&&out[i]<=d){cnt++;}
  }
  cout<<cnt<<endl;
}

int main()
{
  OPT;
  int t=1;
  //cin>>t;
  while(t--){MaiN();}
}
