#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
#define fore(i,ii,iii) for(int i=ii;i<iii;i++)
#define pb push_back
#define sz(a) ((int)(a).size())
#define mset(a) memset(a,-1,sizeof(a));
#define all(a) a.begin(),a.end()
#define fst first
#define snd second

const int N=3e5+15;
int n,m,a[N],uf[N];
vector<int>g[N];
void uf_init(){memset(uf,-1,sizeof(uf));}
int uf_find(int x){return uf[x]<0?x:uf[x]=uf_find(uf[x]);}
bool uf_join(int x, int y){
	x=uf_find(x);y=uf_find(y);
	if(x==y)return false;
	if(uf[x]>uf[y])swap(x,y);
	uf[x]+=uf[y];uf[y]=x;
	return true;
}
vector<pair<int,int>>res;
int main() {
  ios::sync_with_stdio(false);
  uf_init();
  cin>>n>>m;
  int best=0;
  fore(i,0,m) {
    int x,y;
    cin>>x>>y;x--,y--;
    g[x].pb(y);
    g[y].pb(x);
  }
  fore(i,0,n)if(g[i].size()>g[best].size())best=i;
  queue<int> q;
  q.push(best);
  while(q.size()) {
    int t=q.front();q.pop();
    for(int i:g[t]) {
      int x=uf_find(t),y=uf_find(i);
      if(x!=y) {
        res.pb({t+1,i+1});
        uf_join(x,y);
        q.push(y);
      }
    }
  }
  for(auto it:res)cout<<it.fst<<" "<<it.snd<<endl;
}