#pragma comment(linker, "/STACK:640000000")
#include <bits/stdc++.h>

#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()                                                                                               	
#define ll long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)

using namespace std;

typedef pair<int, int> pii;

const double eps = 1e-9;
const double pi = acos(-1.0);

const int maxn = (int)1e6 + 10;

int n, m;
vector<string> v;
bool dp[maxn];
bool dp2[maxn];
int dist[maxn];

void solve() {
	dp[0] = true;
	for (int i = 1; i < n * m; i++) {
		int x = i / m;
		int y = i % m;
		if (v[x][y] == '#') continue;
		if (x > 0) {
			dp[i] |= dp[(x - 1) * m + y];
		}
		if (y > 0) {
			dp[i] |= dp[x * m + y - 1];
		}
	}
}

void solve2() {
	dp2[n * m - 1] = true;
	for (int i = n * m - 2; i >= 0; i--) {
		int x = i / m;
		int y = i % m;
		if (v[x][y] == '#') continue;
		if (x + 1 < n) {
			dp2[i] |= dp2[(x + 1) * m + y];
		}
		if (y + 1 < m) {
			dp2[i] |= dp2[x * m + y + 1];
		}
	}
}

int main() {
	#ifdef LOCAL
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
	#endif

	cin >> n >> m;
	v.resize(n);

	for (int i = 0; i < n; i++) cin >> v[i];

	solve();
	solve2();

	if (!dp[n * m - 1]) {
		cout << 0 << endl;
		return 0;
	}

	for (int i = 1; i < n * m - 1; i++) if (dp[i] && dp2[i]) {
		int x = i / m;
		int y = i % m;
		dist[x + y]++;
	}

	for (int i = 1; i < n + m - 2; i++) if (dist[i] == 1) {
		cout << 1 << endl;
		return 0;
	}

	cout << 2 << endl;

	return 0;
}