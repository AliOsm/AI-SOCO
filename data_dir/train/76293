#include <bits/stdc++.h>


using namespace std;

const int N = 1001;

set<int> g[N];

int n, k;
int a, b, c, d;
vector<int> path1;
vector<int> path2;


int main() {
#ifndef ONLINE_JUDGE
	freopen("C:\\Users\\Hippskill\\ClionProjects\\timus\\input.txt", "r", stdin);
#endif
    srand(time(0));
	scanf("%d%d", &n, &k);
	scanf("%d%d%d%d", &a, &b, &c, &d);
	if(k < n + 1){
		printf("-1");
		return 0;
	}
	path1.push_back(a);
	path1.push_back(c);
	for(int i = 1; i <= n; i++){
		if(i == a || i == b || i == c || i == d)
			continue;
		path1.push_back(i);
	}
	path1.push_back(d);
	path1.push_back(b);
	bool f = false;
	while(clock() / CLOCKS_PER_SEC < 1.8) {
		random_shuffle(path1.begin() + 2, path1.end() - 2);
		bool fail = false;
		for(int i = 0; i < path1.size() - 1; i++) {
			int v = path1[i];
			int to = path1[i + 1];
			if(v == c && to == d)
				fail = true;
			if(v == d && to == c)
				fail = true;
		}
		if(!fail) {
			f = true;
			break;
		}
	}
	if(!f){
		printf("-1");
		return 0;
	}
	path2.push_back(c);
	path2.push_back(a);
	for(int i = 2; i < path1.size() - 2; i++){
		path2.push_back(path1[i]);
	}
	path2.push_back(b);
	path2.push_back(d);
	for(auto i : path1){
		printf("%d ", i);
	}
	printf("\n");

	for(auto i : path2){
		printf("%d ", i);
	}
	return 0;

	return 0;

}