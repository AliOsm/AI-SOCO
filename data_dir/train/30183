//bismillahir rahmanir rahim            //Author:Fayed Anik
 
#include <bits/stdc++.h> 
 
using namespace std;
 
 
#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e17
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")

string s;
stack<ll>st;
int main(){
    ll n;
    sfl(n);
    st.push(1);
    ll val=0,mx=(1ll<<32),x,now;
    FOR(i,n){
        cin>>s;
        if(s=="for"){
            sfl(x);
            now=min(mx,st.top()*x);
            st.push(now);
        }
        else if(s=="end"){
            st.pop();
        }
        else{
            val += st.top();
        }
    }

    if(val>=mx){
        printf("OVERFLOW!!!");
    }
    else{
        pfl(val);
    }
    return 0;
    
    return 0;
}



