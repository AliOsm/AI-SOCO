#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cstdio>
#include <stdio.h>
#include <fstream>
#include <map>
#include <set>
#include <cstdlib>
#include <queue>
#include <math.h>
#include <cmath>
#include <cstring>
#include <stdlib.h>
#include <stack>
#include <iomanip>
#define ll long long
#define endl '\n'
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pll pair<ll,ll>
#define pull pair<ull,ull>
ll MOD=1000000007;
ll inf=1e18;
using namespace std;

vector<string> L;
map< int , bool > Mem;

int msk;
map< pii, int> Cnt;

bool Solve()
{
    int i,j,x,y,a,b,z;
    if(Mem.find(msk)!=Mem.end()){return Mem[msk];}
    for(i=0;i<L.size();i++)
    {
        for(j=0;j<L[i].size();j++)
        {
            if(L[i][j]=='.'){continue;}
            // move right
            x=j;
            while(x<L[i].size() && L[i][x]=='O')
            {
                L[i][x]='.';
                msk+=(1<<Cnt[mp(i,x)]);
                if(Solve()==false)
                {
                    for(z=j;z<=x;z+=2){L[i][z]='O';msk-=(1<<Cnt[mp(i,z)]);}
                    Mem[msk]=true;
                    return true;
                }
                x+=2;
            }
            for(z=j;z<x;z+=2){L[i][z]='O';msk-=(1<<Cnt[mp(i,z)]);}
            
            // move down right
            x=i;y=j;
            while(x<L.size() && y<L[x].size() && L[x][y]=='O')
            {
                L[x][y]='.';
                msk+=(1<<Cnt[mp(x,y)]);
                if(Solve()==false)
                {
                    for(a=i,b=j;a<=x;a++,b++){L[a][b]='O';msk-=(1<<Cnt[mp(a,b)]);}
                    Mem[msk]=true;
                    return true;
                }
                x++;y++;
            }
            for(a=i,b=j;a<x;a++,b++){L[a][b]='O';msk-=(1<<Cnt[mp(a,b)]);}
            
            // move down left
            x=i;y=j;
            while(x<L.size() && y>=0 && L[x][y]=='O')
            {
                L[x][y]='.';
                msk+=(1<<Cnt[mp(x,y)]);
                if(Solve()==false)
                {
                    for(a=i,b=j;a<=x;a++,b--){L[a][b]='O';msk-=(1<<Cnt[mp(a,b)]);}
                    Mem[msk]=true;
                    return true;
                }
                x++;y--;
            }
            for(a=i,b=j;a<x;a++,b--){L[a][b]='O';msk-=(1<<Cnt[mp(a,b)]);}
        }
    }
    Mem[msk]=false;
    return false;
}




int main()
{
    ios::sync_with_stdio(0);
    int i,j;
    string s;
    int cnt=0;
    for(i=0;i<5;i++)
    {
        getline(cin,s);
        for(j=0;j<s.size();j++)
        {
            if(s[j]!='O')
            {
                s[j]='.';
            }
            else
            {
                Cnt[mp(i,j)]=cnt++;
            }
        }
        L.pb(s);
    }
    if(Solve())
    {
        cout<<"Karlsson";
    }
    else
    {
        cout<<"Lillebror";
    }
    return 0;
} 