
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vli  = vector < li        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 2e5 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);


void solve(int testCase){

    int n , k;
    scanf("%d %d" , &n , &k);

    multiset < ii > ms;
    for(int i = 1 ; i <= n ; i ++){
            int x; scanf("%d" , &x);
            ms.insert({x , i});
    }

    if(n == 1){
            printf("0 0\n");
            return;
    }

    vii ans;
    int m = 0;
    while(m < k){

            ii p1 = *ms.begin();

            auto it = ms.end(); it --;
            ii p2 = *it;

            if(abs(p1.first - p2.first) <= 1) break;

            ms.erase(it);
            ms.erase(ms.begin());

            p2.first --;
            p1.first ++;
            ans.push_back({p2.second , p1.second});

            ms.insert(p1);
            ms.insert(p2);

            m ++;
    }

    auto it = ms.end(); it --;
    int s = (*it).first - (*(ms.begin())).first;
    printf("%d %d\n" , s , m);
    for(ii A : ans){
            printf("%d %d\n" , A.first , A.second);
    }

}

main(){

    int t = 1;
    // scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
