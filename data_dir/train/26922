///*BISMILLAHIR RAHMANIR RAHIM*///
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll egcd(ll a,ll b,ll &x,ll &y){
    if(a==0){
        x=0,y=1;
        return b;
    }
    ll x1,y1;
    ll gcd=egcd(b%a,a,x1,y1);
    x=y1-(b/a)*x1;
    y=x1;
    return gcd;
}
ll modInverse(ll b,ll m){
    ll x,y;
    ll g=egcd(b,m,x,y);
    if(g==1)return (x%m+m)%m;
    return -1;
}
ll modDivide(ll a,ll b,ll m){
    a=a%m;
    ll inv=modInverse(b,m);
    return (inv*a)%m;
}
ll modPow(ll x,ll y,ll m){
    ll res=1;
    x=x%m;
    while(y>0){
        if(y&1)res=(res*x)%m;
        y=y>>1;
        x=(x*x)%m;
    }
    return res;
}
map<ll,bool>chk;
int main(){
    ll a,b,p,x,n,a1,a2,b1,b2,i,j,ans=0;
    scanf("%I64d %I64d %I64d %I64d",&a,&b,&p,&x);
    a1=modInverse(p-1,p);
    a2=modInverse(p,p-1);
    for(i=0;i<p;i++){
        b1=(b*modDivide(1,modPow(a,i,p),p))%p;
        ll X=i*p*a2+b1*(p-1)*a1;
        X=X%(p*(p-1));
        if(chk[X])continue;
        chk[X]=true;
        if(X<=x)ans+=((x-X)/(p*(p-1)))+1;
    }
    printf("%I64d\n",ans);
    return 0;
}
