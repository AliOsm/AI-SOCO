# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<double,double> pdd;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=100005; 
const double PI=acos(-1.0);
const double eps=1e-6;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

struct ttype{ int x,y,r; } P[4]; vector<pdd> V; int n,e=0;

vector <pdd> intersect(int x1,int y1,int r1,int x2,int y2,int r2){
	vector <pdd> v; v.clear();
	if (x1==x2 && y1==y2) return v;
	r1*=r1,r2*=r2;
	int R2=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
	int R4=R2*R2;
	int d1=2*(r1+r2),d2=(r1-r2)*(r1-r2)+R4;
	if (d1*R2<d2) return v;
	double x=(x1+x2)/2.0+(x2-x1)*(r1-r2)/(2.0*R2);
	double y=(y1+y2)/2.0+(y2-y1)*(r1-r2)/(2.0*R2);
	if (d1*R2==d2) { v.pb(mp(x,y)); return v; }
	double d=sqrt(1.0*d1/R2-1.0*d2/R4)/2.0;
	v.pb(mp(x+d*(y2-y1),y+d*(x1-x2)));
	v.pb(mp(x-d*(y2-y1),y-d*(x1-x2)));
	return v;
}

bool on(int k,double x,double y) {
	return abs((x-P[k].x)*(x-P[k].x)+(y-P[k].y)*(y-P[k].y)-P[k].r*P[k].r)<eps;
}

bool same(const pdd &a,const pdd &b) {
	return abs(a.fir-b.fir)<eps && abs(a.sec-b.sec)<eps;
}

bool check(const pdd &s) {
	rep_it(it,V) if (same(*it,s)) return 0; return 1;
}

int main() {
    //file_put();

    scanf("%d",&n);
    rep(i,1,n) scanf("%d%d%d",&P[i].x,&P[i].y,&P[i].r);
    rep(i,1,n-1) rep(j,i+1,n) {
    	vector <pdd> s=intersect(P[i].x,P[i].y,P[i].r,P[j].x,P[j].y,P[j].r);
    	rep_it(it,s) if (check(*it)) V.pb(*it);
	}
	if (V.empty()) return 0*printf("%d\n",n+1); 
	rep(i,1,n) {
		int t=0; rep_it(it,V) if (on(i,it->fir,it->sec)) t++; e+=max(t,1);
	}
	printf("%d\n",e-V.size()+2);
	
    return 0;
}

