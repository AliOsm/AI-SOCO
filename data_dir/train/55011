#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
#include <map>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <queue>
#include <stack>
#include <cassert>
#include <unordered_map>
#include <unordered_set>

using namespace std;

typedef long long ll;

const int N = 5e5 + 5;

int n;
int a[N];
ll ls[N], rs[N];
ll cl[N], cr[N];

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie();
    
    stack<int> st;
    
    cin >> n;
    
    for(int i = 1; i <= n; ++i) {
        cin >> a[i];
        cl[i] = 1;
        while(!st.empty() && a[st.top()] > a[i]) {
            cl[i] += cl[st.top()];
            st.pop();
        }
        if(st.empty()) {
            ls[i] = cl[i] * a[i];
        } else {
            ls[i] = ls[st.top()] + cl[i] * a[i];
        }
        st.push(i);
    }
    
    while (!st.empty()) {
        st.pop();
    }
    
    for(int i = n; i >= 1; --i) {
        cr[i] = 1;
        while(!st.empty() && a[st.top()] > a[i]) {
            cr[i] += cr[st.top()];
            st.pop();
        }
        if(st.empty()) {
            rs[i] = cr[i] * a[i];
        } else {
            rs[i] = rs[st.top()] + cr[i] * a[i];
        }
        st.push(i);
    }
    
    int pos = 1;
    for(int i = 1; i <= n; ++i) {
        if(ls[i] + rs[i] - a[i] > ls[pos] + rs[pos] - a[pos]) {
            pos = i;
        }
    }
    
    for(int i = pos - 1; i >= 1; --i) {
        if(a[i] > a[i+1]) {
            a[i] = a[i+1];
        }
    }
    for(int i = pos + 1; i <= n; ++i) {
        if(a[i] > a[i-1]) {
            a[i] = a[i-1];
        }
    }
    
    for(int i = 1; i <= n; ++i) {
        cout << a[i] << " ";
    }
    cout << endl;
    
    return 0;
}
