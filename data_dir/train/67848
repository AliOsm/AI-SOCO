#include <bits/stdc++.h>

using namespace std;

template<class T1, class T2>
istream & operator>> (istream& is, pair<T1,T2> &p){
    return is >> p.first >> p.second;
}
template<class T1, class T2>
ostream & operator<< (ostream &os, pair<T1,T2> &p){
    return os << p.first << " " << p.second;
}

const int N=2005;
const int K=26;
const int inf=30000;

int16_t dp[K][N][N];

int dp2[K][N];

int dp3[N][N];

int sum[N];
int ind[N];

int m;

int get_dp(int pos, int ch){
    int i=upper_bound(sum,sum+m+1,pos)-sum;
    if(i==m+1)return -1;
    i--;
    if(dp[ch][ind[i]][pos-sum[i]]!=inf && dp[ch][ind[i]][pos-sum[i]]>=pos-sum[i])return sum[i]+dp[ch][ind[i]][pos-sum[i]]+1;
    i++;
    if(i==m)return -1;
    i=dp2[ch][i];
    if(i==inf)return -1;
    return dp[ch][ind[i]][0]==inf ? -1 : sum[i]+dp[ch][ind[i]][0]+1;
}

signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin >> n;
	vector<string> b(n);
	for(int i=0; i<n; i++){
        cin >> b[i];
        for(int j=0; j<K; j++){
            char c='a'+j;
            dp[j][i][b[i].size()]=inf;
            for(int k=b[i].size()-1; k>=0; k--){
                if(b[i][k]==c)dp[j][i][k]=k;
                else dp[j][i][k]=dp[j][i][k+1];
            }
        }
	}
	cin >> m;
	for(int i=0; i<m; i++){
        cin >> ind[i];
        ind[i]--;
        sum[i+1]=sum[i]+b[ind[i]].size();
	}
	for(int i=0; i<K; i++){
        dp2[i][m]=inf;
        for(int j=m-1; j>=0; j--){
            if(dp[i][ind[j]][0]!=inf)dp2[i][j]=j;
            else dp2[i][j]=dp2[i][j+1];
        }
	}
	string s;
	cin >> s;
	memset(dp3,255,sizeof(dp3));
	dp3[0][0]=0;
	for(int i=1; i<=s.size(); i++){
        dp3[i][0]=0;
        for(int j=1; j<=i; j++){
            dp3[i][j]=dp3[i-1][j];
            if(dp3[i-1][j-1]!=-1){
                int val=get_dp(dp3[i-1][j-1],s[i-1]-'a');
                if(dp3[i][j]==-1 || (val!=-1 && dp3[i][j]>val))dp3[i][j]=val;
            }
        }
	}
	int ans=0;
	for(int i=1; i<=s.size(); i++){
        if(dp3[s.size()][i]!=-1)ans=i;
	}
	cout << ans;
}
