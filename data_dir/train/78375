#include <bits/stdc++.h>
#include <ext/hash_map>
#include <ext/numeric>

using namespace std;
using namespace __gnu_cxx;

typedef long long ll;
typedef unsigned long long ull;

void fastInOut();

int d1[2][4] = { { -1, 1, 0, 0 }, { -1, 1, -1, 1 } };
int d2[2][4] = { { 0, 0, -1, 1 }, { -1, -1, 1, 1 } };

bool check(int x, int y) {
    return (x >= 1 && y >= 1 && x <= 8 && y <= 8);
}

int bfs(int xs, int ys, int xe, int ye, int type) {
    queue<pair<int, int> > Q;
    bool vis[10][10];
    int lvl = 0;
    memset(vis, 0, sizeof vis);
    Q.push(make_pair(xs, ys));
    while (Q.size()) {
        int size = Q.size();
        while (size--) {
            int x = Q.front().first, y = Q.front().second;
            Q.pop();
            if (!check(x, y) || vis[x][y])
                continue;
            if (x == xe && y == ye)
                return lvl;
            vis[x][y] = 1;
            if (type < 2)
                for (int d = 1; d <= 8; ++d)
                    for (int j = 0; j < 4; ++j) {
                        int nx = x + (d1[type][j] * d);
                        int ny = y + (d2[type][j] * d);
                        Q.push(make_pair(nx, ny));
                    }
            else
                for (int i = 0; i < 2; ++i)
                    for (int j = 0; j < 4; ++j) {
                        int nx = x + d1[i][j];
                        int ny = y + d2[i][j];
                        Q.push(make_pair(nx, ny));
                    }
        }
        ++lvl;
    }
    return 0;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    fastInOut();
    int xs, ys, xe, ye;
    cin >> xs >> ys >> xe >> ye;
    cout << bfs(xs, ys, xe, ye, 0) << " ";
    cout << bfs(xs, ys, xe, ye, 1) << " ";
    cout << bfs(xs, ys, xe, ye, 2) << "\n";
    return 0;
}

void fastInOut() {
    ios_base::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);
}
