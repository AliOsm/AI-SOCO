#include <bits/stdc++.h>

using namespace std;
#define ll long long
vector<vector<int>> adj(100005);
int vis[100005],l[100005],val[100005],p[100010][20];

void dfs(int cur,int lvl){
    vis[cur]=1;
    l[cur]=lvl;
    for(int i=0;i<adj[cur].size();i++){
        if(!vis[adj[cur][i]]){
            p[adj[cur][i]][0]=cur;
            dfs(adj[cur][i],lvl+1);
        }
    }
}
int n;

void pre(){
    for(int j=1;j<=19;j++){
        for(int i=1;i<=n;i++){
            if(p[i][j-1]!=-1){
                p[i][j]=p[p[i][j-1]][j-1];
            }
        }
    }
}

int LCA(int u,int v){
    if(l[u]<l[v]){
        int tmp=v;
        v=u;
        u=tmp;
    }
    for(int i=19;i>=0;i--){
        if(p[u][i]!=-1&&l[p[u][i]]>=l[v]){
            u=p[u][i];
        }
    }
    if(u==v){
        return u;
    }
    for(int i=19;i>=0;i--){
        if(p[u][i]!=p[v][i]){
            u=p[u][i];
            v=p[v][i];
        }
    }
    return p[u][0];
}
map<pair<int,int>,int> mp;

int dfs1(int cur){
    vis[cur]=2;
    int sum=val[cur];
    for(int i=0;i<adj[cur].size();i++){
        if(vis[adj[cur][i]]!=2){
            sum+=dfs1(adj[cur][i]);
        }
    }
    mp[{cur,p[cur][0]}]=sum;
    return sum;
}

int main() {
    //freopen("bitstrings_as_a_service.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin>>n;
    int ar[n],br[n];
    for(int i=0;i<n-1;i++){
        cin>>ar[i]>>br[i];
        adj[ar[i]].push_back(br[i]);
        adj[br[i]].push_back(ar[i]);
    }
    memset(p,-1,sizeof p);
    dfs(1,0);
    pre();
    int q;
    cin>>q;
    for(int i=0;i<q;i++){
        int x,y;
        cin>>x>>y;
        int lca=LCA(x,y);
        val[x]++;
        val[y]++;
        val[lca]-=2;
    }
    dfs1(1);
    for(int i=0;i<n-1;i++){
        cout<<mp[{ar[i],br[i]}]+mp[{br[i],ar[i]}]<<" ";
    }
    cout<<endl;
    return 0;
}