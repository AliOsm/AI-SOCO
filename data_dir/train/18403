#include <bits/stdc++.h>
#define sc second
#define fr first
#define ll long long
#define pii pair<int,int>

using namespace std;

string lw;
string en;
int dp[16][2];
int go[16][2];

int f(int i,int up){

    if(i+(int)en.size() == lw.size()){
        if(up)
            return 1;
        for(int j=0 ;j <en.size() ; i++,j++){
            if(en[j] < lw[i])
                return 0;
            if(en[j] > lw[i])
                return 1;
        }
        return 1;
    }
    if(dp[i][up] != -1)
        return dp[i][up];
    int mn = lw[i] - '0';
    if(up)mn = 0;
    bool ok =0;
    for(int j=mn ;j <10 ; j++){
        ok = f(i+1,up||(j>lw[i]-'0'));
        go[i][up] = j;
        if(ok)
            break;
    }
    return dp[i][up] = ok;
}

string get(int i,int up){
    if(i+(int)en.size() == lw.size()){
        return en;
    }
    string res = "";
    res.push_back(go[i][up]+'0');
    return  res + get(i+1,up||(go[i][up] > lw[i]-'0'));
}

string add(string s){
    bool ok =0;
    for(int i=(int)s.size()-1 ;i >=0 ; i--){
        if(s[i] != '9'){
            s[i]++;
            ok = 1;
            break;
        }
        s[i]= '0';
    }
    if(!ok){
        reverse(s.begin(),s.end());
        s.push_back('1');
        reverse(s.begin(),s.end());
    }
    return s;
}

int main(){
    ios::sync_with_stdio(0);
    int tt;
    cin>>tt;
    string s;
    while(tt--){
        cin>>s;
        reverse(s.begin(),s.end());
        s.pop_back();
        s.pop_back();
        s.pop_back();
        s.pop_back();
        reverse(s.begin(),s.end());
        lw = "000000000001989";
        string res = "";
        for(int i=(int)s.size()-1 ; i>=0 ;i--){
            en = s.substr(i,(int)s.size()-i);
            memset(dp,-1,sizeof dp);
            f(0,0);
            res = get(0,0);
            //cout<<res<<endl;
            lw = add(res);
            //cout<<lw<<endl;
        }
        reverse(res.begin(),res.end());
        while(res.back() == '0')res.pop_back();

        reverse(res.begin(),res.end());
        cout<<res<<endl;
    }
    return 0;
}
