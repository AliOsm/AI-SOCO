#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef pair<ll,ll> ii;
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define rrep(i,a,b) for(ll i=a;i>b;i-=1)
#define vi vector<ll>
#define vii vector<vector<ll> >
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define tr(c,i) for( typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
# define M_PI           3.14159265358979323846
ll t=1 ;
void solve()
{
    ll n , p , f = 0 ;
    cin >> n >> p ;
    char ans ;
    vector< char > v( n + 1 ) ;
    rep( i , 1 , n + 1 )
        cin >> v[ i ] ;
    rep( i , 1 , n - p + 1 )
    {
        if( v[ i ] == '.' || v[ i + p ] == '.' )
        {
            if( v[ i ] != '.' )
            {
                if( v[ i + p ] == '.' )
                {
                    v[ i + p ] = '0' + !( v[ i ] - '0' ) ;
                }
            }
            if( v[ i + p] != '.' )
            {
                if( v[ i] == '.' )
                {
                    v[ i ] = '0' + !( v[ i + p ] - '0' ) ;
                }
            }
            if( v[ i ] == '.' && v[ i + p ] == '.' )
            {
                v[ i ] = '0' ;
                v[ i + p ] = '1' ;
            }
        }
    }
    rep( i , 1 , n - p + 1 )
    {
        //cout << v[ i ] << ' ' << v[ i + p  ] << "\n" ;
        if( v[ i ] != v[ i + p ] )
            f = 1 ;
    }
    if( f == 0 )
        cout << "No" ;
    else
    {
        rep( i , 1 , n + 1 )
        {
            if( v[ i ] != '.' )
                cout << v[ i ] ;
            else
                cout << "0" ;
        }
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve();
    return 0;
}

