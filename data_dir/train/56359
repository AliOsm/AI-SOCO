#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
typedef double ld;
#define int ll
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef vector< vvi > vvvi;
typedef vector<pii> vpi;
typedef vector<short> vs;
typedef vector<vs> vvs;
typedef vector<vvs> vvvs;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vvl> vvvl;
typedef vector<ld> vld;
typedef vector<vld> vvld;
typedef vector<vvld> vvvld;
typedef vector<string> vst;
typedef vector<vst> vvst;
typedef pair<ld, ld> pld;
typedef complex<double> base;

#define inmin(a, b) a = min(a, (b))
#define inmax(a, b) a = max(a, (b))
#define mp(a, b) make_pair(a, (b))
#define ALL(a) a.begin(),a.end()
#define RALL(a) a.rbegin(),a.rend()
#define sqr(x) ((x) * (x))
#define fori(i, n) for(int i = 0; i < int(n); ++i)
#define SZ(a) ((int)((a).size()))
#define triple(T) tuple<T, T, T>
#define quad(T) tuple<T, T, T, T>
#define watch(x) cout << (#x) << " = " << x << endl;
#ifdef MAX_HOME
#define cerr cout
#else
#define cerr if (false) cerr
#endif


void err(istream_iterator<string> it) {}
template<typename T, typename... Args>
void err(istream_iterator<string> it, T a, Args... args) {
    cerr << *it << " = " << a << endl;
    err(++it, args...);
}

const double PI = 2 * acos(0.0);

const string DIGITS = "0123456789";
const string ALPH = "abcdefghijklmnopqrstuvwxyz";

template <class T0, class T1>
inline ostream & operator << (ostream &out, pair<T0, T1> &a) {
    return out << "{" << a.first << ", " << a.second << "}";
}

template <class T0, class T1, class T2>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) << ", " << get<2>(a) << "}";
}

template <class T0, class T1, class T2, class T3>
inline ostream & operator << (ostream &out, tuple<T0, T1, T2, T3> &a) {
    return out << "{" << get<0>(a) << ", " << get<1>(a) <<
               ", " << get<2>(a) << ", " <<  get<3>(a) << "}";
}

template<class T>
inline ostream & operator << (ostream &out, vector<T> &a) {
    out << "[";
    fori (i, a.size())
        out << a[i] << vector<string>{", ", "]  "}[i + 1 == a.size()];
    return out;
}



void smain();

signed main() {
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);

#ifdef ART_HOME
    freopen("input.txt", "r", stdin);
    clock_t start = clock();
#endif
    cout << setprecision(12) << fixed;
    smain();
#ifdef ART_HOME
    cout << "\n\n\n\nTOTAL EXECUTION TIME: " << float( clock () - start ) /  CLOCKS_PER_SEC << endl;
#endif
}


istream &operator >> (istream &in, pii &a)
{
    in >> a.first >> a.second;
    return in;
}


const int N = 1 << 20;
int used[N];


void smain()
{
    int n, m, k, s;
    cin >> m >> k >> n >> s;

    vi vl(m);
    for (int i = 0; i < m; ++i)
        cin >> vl[i];

    int cnt = 0;
    vi chal(s);

    for (int i = 0; i < s; ++i)
    {
        int a;
        cin >> a;
        used[a]++;
        chal[i] = a;

        if (used[a] == 1)
            cnt++;
    }

    int l = -1, r = -1;
    int ans = 1e18;
    int pl, pr;

    while (l < m && r < m) {
        l++;

        if (l)
        {
            used[vl[l - 1]]++;

            if (used[vl[l - 1]] == 1)
                cnt++;
        }

        r++;

        while (r < m && cnt)
        {
            used[vl[r]]--;

            if (used[vl[r]] == 0)
                cnt--;

            r++;
        }

        r--;
        if (!cnt && r - ((l / k + 1) * k - 1) < ans)
            ans = min(ans, r - ((l / k + 1) * k - 1)), pl = l, pr = r;
    }

    fill(used, used + N, 0);
    for (int v : chal)
        used[v]++;

    if (ans < 0)
    {
        cout << "0\n";
        return;
    }
    
    if (ans <= m - n * k)
    {
        l = pl - 1;
        vi cpy;

        while (l >= 0 && l / k == pl / k && ans)
            cpy.push_back(l--), ans--;

        while (ans)
        {
            if (used[vl[pl]])
                used[vl[pl++]]--;
            else
                cpy.push_back(pl++), ans--;
        }


        cout << SZ(cpy) << '\n';
        for (int v : cpy)
            cout << v + 1 << ' ';
    }
    else
        cout << "-1\n";
}
