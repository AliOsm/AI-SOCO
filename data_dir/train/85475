#include <iostream>
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <time.h>
#include <stdlib.h>
#include <string>
#include <bitset>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <sstream>
#include <stack>
#include <iomanip>
using namespace std;
#define pb push_back
#define mp make_pair
typedef pair<int,int> pii;
typedef long long ll;
typedef double ld;
typedef vector<int> vi;
#define fi first
#define se second
#define fe first
#define FO(x) {freopen(#x".in","r",stdin);freopen(#x".out","w",stdout);}
#define Edg int M=0,fst[SZ],vb[SZ],nxt[SZ];void ad_de(int a,int b){++M;nxt[M]=fst[a];fst[a]=M;vb[M]=b;}void adde(int a,int b){ad_de(a,b);ad_de(b,a);}
#define Edgc int M=0,fst[SZ],vb[SZ],nxt[SZ],vc[SZ];void ad_de(int a,int b,int c){++M;nxt[M]=fst[a];fst[a]=M;vb[M]=b;vc[M]=c;}void adde(int a,int b,int c){ad_de(a,b,c);ad_de(b,a,c);}
#define es(x,e) (int e=fst[x];e;e=nxt[e])
#define esb(x,e,b) (int e=fst[x],b=vb[e];e;e=nxt[e],b=vb[e])
#define SZ 2333333
int n,m,l[SZ];
vector<int> vs[1000099];
ll ans[SZ];
vector<pii> qs[1000099];
inline void add_qry(int a,int b,int c)
{
	if(c>=0) qs[b].pb(pii(a,c));
}
int ts[SZ]; ll qzh[SZ];
#define UP 23333333
void dfs(int x)
{
	if(x+x<=n)
	{
		dfs(x+x);
		for(auto g:vs[x+x])
			if(g+l[x+x]<=UP) vs[x].pb(g+l[x+x]);
		vs[x+x].clear();
	}
	if(x+x+1<=n)
	{
		dfs(x+x+1);
		for(auto g:vs[x+x+1])
			if(g+l[x+x+1]<=UP) vs[x].pb(g+l[x+x+1]);
		vs[x+x+1].clear();
	}
	vs[x].pb(0);
	int tn=0;
	for(auto g:vs[x]) ts[++tn]=g;
	sort(ts+1,ts+1+tn);
	for(int i=1;i<=tn;++i)
		qzh[i]=qzh[i-1]+ts[i];
	for(auto q:qs[x])
	{
		int c=q.se,u=upper_bound(ts+1,ts+1+tn,c)-ts-1;
		ans[q.fi]+=c*(ll)u-qzh[u];
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=2;i<=n;++i) scanf("%d",l+i);
	for(int i=1;i<=m;++i)
	{
		int a,b,bf=0;
		scanf("%d%d",&a,&b);
		add_qry(i,a,b);
		for(int g=a;g&&b>=0;bf=g,b-=l[g],g>>=1)
		{
			if(g==a) continue;
			ans[i]+=b;
			add_qry(i,bf^1,b-l[bf^1]);
		}
	}
	dfs(1);
	for(int i=1;i<=m;++i)
		printf("%I64d\n",ans[i]);
}