#include <bits/stdc++.h>

using namespace std;

const int Z = 26;

int g[Z][Z];
int used[Z];
vector<pair<int, int>> ans;

void dfs(int v, int cc) {
  used[v] = 1;
  for (int u = 0; u < Z; u++) {
    if (u == v) {
      continue;
    }
    if (g[v][u] && !used[u]) {
      ans.emplace_back(v, u);
      dfs(u, cc);
    }
  }
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int n;
  cin >> n;
  string a, b;
  cin >> a >> b;    
  for (int i = 0; i < n; i++) {
    if (a[i] == b[i]) {
      continue;
    }
    g[a[i] - 'a'][b[i] - 'a'] = 1;
    g[b[i] - 'a'][a[i] - 'a'] = 1;
  }
  int cc = 0;
  for (int i = 0; i < Z; i++) {
    if (!used[i]) {
      dfs(i, cc);
      cc++;
    }
  }
  cout << ans.size() << '\n';
  for (auto& p : ans) {
    cout << (char) (p.first + 'a') << ' ' << (char) (p.second + 'a') << '\n';
  }
  return 0;
}