#include <bits/stdc++.h>

using namespace std;



#define N 50

#define x first

#define y second



typedef pair<int, int> pii;



int common(pii a, pii b) {

    if (a.x == b.x) {

        if (a.y == b.y) return -1;

        return a.x;

    }

    if (a.x == b.y) {

        if (a.y == b.x) return -1;

        return a.x;

    }

    if (a.y == b.x) {

        if (a.x == b.y) return -1;

        return a.y;

    }

    if (a.y == b.y) {

        if (a.x == b.x) return -1;

        return a.y;

    }

    return -1;

}



int n, m;

pii a[N], b[N];

int da[N], db[N];

map<int, int> ca[N], cb[N], clr;



int main() {


    scanf("%d %d", &n, &m);

    for (int i = 0; i < n; i ++) {

        scanf("%d %d", &a[i].x, &a[i].y);

        if (a[i].x > a[i].y) swap(a[i].x, a[i].y);

    }

    for (int j = 0; j < m; j ++) {

        scanf("%d %d", &b[j].x, &b[j].y);

        if (b[j].x > b[j].y) swap(b[j].x, b[j].y);

    }

    for (int i = 0; i < n; i ++)

    for (int j = 0; j < m; j ++) {

        int tmp = common(a[i], b[j]);

        if (tmp == -1) continue;

        ca[i][tmp] = 1, cb[j][tmp] = 1;

        clr[tmp] = 1;

    }

    if (clr.size() == 1) {

        return printf("%d\n", clr.begin() -> x), 0;

    }

    for (int i = 0; i < n; i ++) {

        if (ca[i].size() >= 2) return puts("-1"), 0;

    }

    for (int j = 0; j < m; j ++) {

        if (cb[j].size() >= 2) return puts("-1"), 0;

    }

    return puts("0"), 0;



}