#include <bits/stdc++.h>

using namespace std;
#define F first
#define S second
const int N=3005;
vector<int> adj[N+5];
long long cnt[N+5][N+5];
long long cal(long long x)
{
    return (x*(x-1))/2;
}
int bfs(int node)
{
    queue<pair<int,int>>q;
    q.push({node,0});
    while(!q.empty())
    {
        int x=q.front().F,d=q.front().S;
        q.pop();
        if(d>2) q.pop();
        else if(d==2) cnt[node][x]++;
        else
        {
            for(auto v:adj[x]) q.push({v,d+1});
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n,m,x,y;
    long long ans=0;
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        cin>>x>>y;
        adj[x].push_back(y);
    }
    for(int i=1;i<=n;i++) bfs(i);
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            if(i!=j)ans+=cal(cnt[i][j]);
    cout<<ans<<endl;
    return 0;
}
