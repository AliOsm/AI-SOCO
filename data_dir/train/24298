#include <bits/stdc++.h>
#ifdef DEMETRIO
#define deb(...) fprintf(stderr,__VA_ARGS__)
#define deb1(x) cerr << #x << " = " << x << endl
#else
#define deb(...) 0
#define deb1(x) 0
#endif
#define fst first
#define snd second
#define fore(i,a,b) for(int i=a,ThxDem=b;i<ThxDem;++i)
#define pb push_back
#define ALL(s) s.begin(),s.end()
#define FIN ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define SZ(n) ((int)(n).size())
using namespace std;
typedef long long ll;
typedef pair<int,int> ii;

struct O{
	ll p,c,id;
	bool operator<(const O &o)const{
		if(p!=o.p)return p<o.p;
		if(c!=o.c)return c>=o.c;
		return id<o.id;
	}
};

set<O> used, av;

const int N=1e6+5, M=2e5+5;
vector<ll> add[N], rem[N];
O A[M];
ll n,k,m;

int main() {FIN;
	cin>>n>>k>>m;
	fore(x,0,m){
		int l,r;cin>>l>>r>>A[x].c>>A[x].p;A[x].id=x;
		add[l].pb(x);
		rem[r].pb(x);
	}
	ll cas=0, cur=0, ans=0;
	fore(x,1,n+1){
		for(int v:add[x])av.insert(A[v]);
		
		while(SZ(av)&&cas<k){
			O tmp=*av.begin();used.insert(tmp);av.erase(tmp);
			cas+=tmp.c;
			cur+=tmp.p*tmp.c;
		}
		
		while(SZ(av)&&av.begin()->p<=used.rbegin()->p){
			O tmp=*av.begin();av.erase(tmp);used.insert(tmp);
			cas+=tmp.c;
			cur+=tmp.p*tmp.c;
		}
		
		while(SZ(used)&&cas-used.rbegin()->c>=k){
			O tmp=*used.rbegin();used.erase(tmp);av.insert(tmp);
			cas-=tmp.c;
			cur-=tmp.c*tmp.p;
		}
		
		if(cas<=k)ans+=cur;
		else ans+=cur-(cas-k)*used.rbegin()->p;
		
		for(int v:rem[x]){
			if(used.count(A[v])){
				cur-=A[v].c*A[v].p;
				cas-=A[v].c;
				used.erase(A[v]);
			}else{
				av.erase(A[v]);
			}
		}
	}
	cout<<ans<<"\n";
}
/*
5 7 3
1 4 5 3
1 3 5 2
2 5 10 1
1 16
2 16
3 16
4 17
5 7
72
*/
