//be naame khodaa

#include <iostream>
#include <cmath>
#include <string>

using namespace std;

int n, m;
char a[405][405];
int h[405][405], v[405][405], dig1[405][405], dig2[405][405];

bool good(int x, int y)
{
    return (x >= 1 && x <= m && y >= 1 && y <= n && a[x][y] == '0');
}

int triangle(int x, int y)
{

    int ans = 0;
    if (a[x][y] == '1')
        return 0;
    for (int i = 1; good(x+i, y) && good(x, y-i); i++)
        if (dig1[x+i][y] == dig1[x-1][y-i-1])
            ans++;

    for (int i = 1; good(x, y-i) && good(x-i, y); i++)
        if (dig2[x-i][y] == dig2[x+1][y-i-1])
            ans++;

    for (int i = 1; good(x, y+i) && good(x-i, y); i++)
        if (dig1[x-i-1][y-1] == dig1[x][y+i])
            ans++;

    for (int i = 1; good(x, y+i) && good(x+i, y); i++)
        if (dig2[x][y+i] == dig2[x+i+1][y-1])
            ans++;

    for (int i = 1; good(x-i, y-i) && good(x+i, y-i); i++)
        if (h[x+i][y-i] == h[x-i-1][y-i])
            ans++;

    for (int i = 1; good(x-i, y+i) && good(x+i, y+i); i++)
        if (h[x+i][y+i] == h[x-i-1][y+i])
            ans++;

    for (int i = 1; good(x-i, y-i) && good(x-i, y+i); i++)
        if (v[x-i][y+i] == v[x-i][y-i-1])
            ans++;

    for (int i = 1; good(x+i, y-i) && good(x+i, y+i); i++)
        if (v[x+i][y+i] == v[x+i][y-i-1])
            ans++;

    return ans;
}

int main()
{
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
        {
            cin >> a[j][i];
            int b = (a[j][i] == '1');
            h[j][i] = h[j-1][i] + b;
            v[j][i] = v[j][i-1] + b;
            dig1[j][i] = dig1[j-1][i-1] + b;
            dig2[j][i] = dig2[j+1][i-1] + b;
        }
    long long ans = 0;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++)
            ans += triangle(j, i);
    cout << ans << endl;
    return 0;
}
