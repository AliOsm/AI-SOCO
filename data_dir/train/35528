#include <bits/stdc++.h>

#define x first
#define y second
#define pb push_back
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;

const int MOD = 1000000007;
const int oo = 1e9;
const int N = 500010;

int n , a[N], q, last[N], ans[N];
pii prv[N], seg[4 * N];
vector<pii> cur[N];
int at;
pii obj;
void insert(int n , int s , int e) {
	if (s > at || e < at)return;
	if (s == e) {
		seg[n] = obj;
		return;
	}
	insert(2 * n, s, (s + e) / 2);
	insert(2 * n + 1, (s + e) / 2 + 1, e);
	seg[n] = max(seg[2 * n], seg[2 * n + 1]);
}
int get(int n , int s , int e , int l , int r) {
	if (s > r || e < l)return 0;
	if (s >= l && e <= r) {
		return seg[n].first > r ? seg[n].second : 0;
	}
	return max(get(2 * n, s, (s + e) / 2, l, r), get(2 * n + 1, (s + e) / 2 + 1, e, l, r));
}
int main() {
	cin >> n;
	for (int i = 0 ; i <= 500000; ++i)
		last[i] = n + 1;
	for (int i = 1; i <= n; ++i) {
		scanf("%d", &a[i]);
	}
	cin >> q;
	for (int l, r, i = 0; i < q; ++i) {
		scanf("%d%d", &l, &r);
		cur[l].push_back(make_pair(r, i));
	}
	for (int i = n; i >= 1 ; --i) {
		if (last[a[i]] <= n) {
			at = last[a[i]];
			obj = make_pair(-1, 0);
			insert(1, 1, n);
		}
		at = i;
		obj = prv[a[i]] = make_pair( last[a[i]], a[i]);
		insert(1, 1, n);
		last[a[i]] = i;
		for (auto go : cur[i]) {
			ans[go.second] = get(1, 1, n, i, go.first);
		}
	}
	for (int i = 0; i < q; ++i) {
		printf("%d\n", ans[i] );

	}
	return 0;
}