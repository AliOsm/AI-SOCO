#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC target("avx,avx2,fma")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pf push_front
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("board.in");ofstream out("board.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

ll a,k;
vec<ll> m;

int main() {
    fast;
    cin>>a>>k;
    m = vec<ll>(a);
    for(int q=0; q<a; q++) cin>>m[q];
    ll o = 0;
    for(ll bt=59; bt>=0; bt--){
        ll nw = o+(1LL<<bt);
        vec<vec<int>> dp(a, vec<int>(k));
        ll prefs = 0;
        for(int q=0; q<a; q++){
            prefs += m[q];
            dp[q][0] = (prefs&nw)==nw;
            for(int w=1; w<=q && w<k; w++){
                ll sum = m[q];
                for(int pr=q-1; pr>=0; pr--){
                    dp[q][w] |= dp[pr][w-1] && ((sum&nw)==nw);
                    sum += m[pr];
                }
            }
        }
        if(dp[a-1][k-1]) o = nw;
    }
    cout<<o;
}