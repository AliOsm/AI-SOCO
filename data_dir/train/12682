#include <iostream>
#include<bits/stdc++.h>
using namespace std;
vector<int>vec[300100],adj[300100];
int visit[300100],col[300100];
void dfs(int node)
{
    visit[node] = 1;
    set<int>st;
    vector<int>no;
    for(int i = 0 ; i<vec[node].size() ; ++i)
        {
            if(col[vec[node][i]])
            st.insert(col[vec[node][i]]);
            else no.push_back(vec[node][i]);
        }
    int x = 1;
    for(int i = 0 ; i<no.size() ; ++i)
    {
           while(st.find(x) != st.end()) x++;
           col[no[i]] = x++;
    }
    for(int i = 0 ; i<adj[node].size() ; ++i)
        if(!visit[adj[node][i]]) dfs(adj[node][i]);
}
int main()
{

    int n,m;
    cin>>n>>m;
    int maxi = 0;

    for(int i = 1 ; i<=n ; ++i)
    {
        int k;
        scanf("%d" , &k);
        maxi = max(maxi , k);
        for(int j = 0 ; j<k ; ++j)
        {
            int x;
            scanf("%d" , &x);
            vec[i].push_back(x);
        }
    }
    for(int i = 0 ; i<n-1 ; ++i)
    {
        int x,y;
        scanf("%d%d" , &x , &y);
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    if(!maxi) maxi = 1;
    cout<<maxi<<endl;
    dfs(1);
    for(int i = 1 ; i<=m ; i++)
    {
        if(!col[i]) printf("1 ");
        else printf("%d " , col[i]);
    }
    return 0;
}
