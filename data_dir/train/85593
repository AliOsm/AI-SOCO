#include <stdio.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <assert.h>
#include <queue>
#include <string.h>
#include <string>
#include <set>
#include <memory.h>
#include <functional>
#include <bitset>
using namespace std;
#define ll long long


const int mod = 1e9+7;
int add(int x,int y) {
    int ret = (x+y)%mod;
    if(ret<0) {
        ret += mod;
    }
    return ret;
}
int mul(int x,int y) {
    ll ret= (ll)x*y%mod;
    return (int)ret;
}
const int N = 1e6+1;

vector<int> divisor[N];

int dp[N];

void solve() {
    int n,x,y;
    scanf("%d %d %d",&n,&x,&y);
    vector<pair<int,int> > in;
    for(int i=0;i<n;++i) {
        int l,r;
        scanf("%d %d",&l,&r);
        in.push_back(make_pair(l, r));
    }
    sort(in.begin(),in.end());
    multiset<int> s;
    int ret = 0;
    for(int i=0;i<n;++i) {
        int l = in[i].first, r = in[i].second;
        multiset<int>::iterator it = s.lower_bound(l);
        ret = add(ret, add(x, mul(r-l,y)));
        if(it!= s.begin()) {
            it = prev(it);
            ll cost = (ll)y*(l-*it) - x;
            if(cost<0) {
                ret = add(ret,cost);
                s.erase(it);
            }
        }
        s.insert(r);
    }
    printf("%d\n",ret);
}

int main() {
    //freopen("/Users/gotop/Documents/ps_practice/ps_practice/input.txt", "r", stdin);
    solve();
}
