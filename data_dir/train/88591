/**
SXR0aXAkI0JwbXptI3FhI3Z3I293bCNqY2IjUG0jMCNicG0jVHFkcXZvLyNCcG0jQW10bjBhY2phcWFicXZvLyNNYm16dml0MSNWdyNhdGN1am16I2tpdiNhbXF9bSNQcXUjVnd6I0F0bW14MSNQcWEjaXptI2l0dCNicHF2b2EjUXYjYnBtI3BtaWRtdmEjaXZsI3d2I21pemJwMSNFcHcjcWEjYnBtem0ja2l2I3F2Ym16a21sbSNRdiNQcWEjeHptYW12a20jbXtrbXhiI0lhI3BtI3htenVxYmJtYnBHI1BtI3N2d2VtYnAjRXBpYiMraXh4bWl6bWJwI2J3I1BxYSNrem1pYmN6bWEjSWEsI0ptbnd6bSN3eiNJbmJteiN3eiNKbXBxdmwjYnBtdTEjVnd6I2FwaXR0I2JwbXwja3d1eGlhYSNJY29wYiN3biNwcWEjc3Z3ZXRtbG9tI017a214YiNpYSNQbSNlcXR0bWJwMSNQcWEjYnB6d3ZtI2x3YnAjbXtibXZsI1dkbXojYnBtI3BtaWRtdmEjSXZsI3d2I21pemJwLyNpdmwjUG0jbm1tdG1icCNWdyNuaWJxb2NtI3F2I29jaXpscXZvI0l2bCN4em1hbXpkcXZvI2JwbXUvI053eiNQbSNxYSNicG0jVXdhYiNQcW9wMSNCcG0jQWN4em11bSMrcXYjb3R3enwsMQ==
*/
#include <cstring>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <queue>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
 
#define F first
#define S second
#define endl '\n'
#define deb(x) cout<<#x<<' '<<x<<endl;
#define pb push_back
 using namespace __gnu_pbds;
using namespace std;
 
/*
#ifdef IZI_KATKA
#define int __int64_t
#else
#define int __int64
#endif
*/
 
const long long MOD = 1e18 + 7;
const long long MAXN = 1e6 + 1;
 
typedef long long ll;
 
#define pii pair<int,int>
 
long long readInt() {
    bool minus1 = false;
    long long result = 0;
    char ch;
    ch = getchar();
    while (true) {
        if (ch == '-') break;
        if (ch >= '0' && ch <= '9') break;
        ch = getchar();
    }
    if (ch == '-') minus1 = true; else result = ch-'0';
    while (true) {
        ch = getchar();
        if (ch < '0' || ch > '9') break;
        result = result*10 + (ch - '0');
    }
    if (minus1)
        return -result;
    else
        return result;
}
const int N = 501;
int a[N][N];
bool used[N][N];

int n, X, Y;
int norm(int x, int y) {
    return (1 <= x && x <= n && 1 <= y && y <= n);
}
string ans = "";

void init(int x, int y) {
    if (!a[x][y]) {
        a[x][y] = 1;
        ans.pb('1');
    }
    used[x][y] = 1;
    for (int j = y + 1; j <= n; j++) {
        if (a[x][j] && !used[x][y+1]) {
            ans.pb('R');
            init(x, y + 1);
            ans.pb('L');
        }
    }
    for (int i = 1; i <= x - 1; i ++) {
        if (a[i][y] && !used[x - 1][y]) {
            ans.pb('U');
            init(x - 1, y);
            ans.pb('D');
        }
    }
    for (int i = x + 1; i <= n; i++) {
        if (a[i][y] && !used[x+1][y]) {
            ans.pb('D');
            init(x + 1, y);
            ans.pb('U');
        } 
    }
    for (int j = 1; j <= y - 1; j ++) {
        if(a[x][j] && !used[x][y - 1]) {
            ans.pb('L');
            init(x, y - 1);
            ans.pb('R');
        }
    }
}

int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, 1, -1};
char dir[] = {'D', 'U', 'R', 'L'};
char anti[] = {'U', 'D', 'L', 'R'};
void dfs(int x, int y) {
    used[x][y] = 1;
    for (int i = 0; i < 4; i++) {
        if (norm(x + dx[i], y + dy[i])) {
            if (a[x + dx[i]][y + dy[i]] && !used[x + dx[i]][y + dy[i]]) {
                ans.pb(dir[i]);
                dfs(x + dx[i], y + dy[i]);
                ans.pb(anti[i]);
            }
        }
    }
    if (a[x][y]) {
        ans.pb('2');
        a[x][y] = 0;
    }
}

main() {
	#ifdef IZI_KATKA
	assert(freopen("input", "r", stdin));
    assert(freopen("output", "w", stdout));
    #endif
    n = readInt(), X = readInt(), Y = readInt();
    for (int i = 1;  i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            cin >> a[i][j];
        }
    }
    init(X, Y);
    memset(used, 0, sizeof(used));
    dfs(X, Y);
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            if (a[i][j]) {
                cout << "NO";
                return 0;
            }
        }
    }
    cout << "YES\n";
    cout << ans;
    return 0;
}