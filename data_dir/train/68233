#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < int, int > ii;

const int N = 3e5 + 5;
const int LOG = 31;

int n;
int a[N], b[N];

class trie{ public:
	int id, cnt;
	trie *c[2], *dad;
	trie() {
		cnt = 0;
		id = 1e9 + 333;
		c[0] = c[1] = dad = 0;
	}
};

typedef trie* pTrie;

pTrie root, p;

void add(int x) {
	p = root;
	for(int i = LOG - 1; i >= 0; i--) {
		bool w = x & (1 << i);
		if(!p -> c[w]) {
			p -> c[w] = new trie;
			p -> c[w] -> dad = p;
		}
		p = p -> c[w];
		p -> cnt++;
	}
}

void del(int x) {
	// puts("d1");
	p = root;
	for(int i = LOG - 1; i >= 0; i--) {
		bool w = x & (1 << i);
		p = p -> c[w];
		p -> cnt--;
	}
	// puts("d2");
}

int get(int x) {
	// puts("i1");
	p = root;
	int num = 0;
	if(p -> c[0] or p -> c[1]) {
		for(int i = LOG - 1; i >= 0; i--) {
			bool w = x & (1 << i);
			if(p -> c[w] and p -> c[w] -> cnt) {
				if(w) num |= 1 << i;
				p = p -> c[w];
			}
			else {
				if(!w) num |= 1 << i;
				p = p -> c[!w];
			}
		}
	}
	// puts("i2");
	return num;
}

int main() {

	scanf("%d", &n);

	for(int i = 1; i <= n; i++)
		scanf("%d", a + i);

	for(int i = 1; i <= n; i++)
		scanf("%d", b + i);

	root = new trie;

	for(int i = 1; i <= n; i++)
		add(b[i]);

	for(int i = 1; i <= n; i++) {
		int x = get(a[i]);
		printf("%d ", x ^ a[i]);
		del(x);
	}

	puts("");

    return 0;

}

