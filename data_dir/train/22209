#include <stdio.h>
#include <algorithm>
#include <string.h>
using namespace std;
typedef struct
{
    int id,z;
} node;
node p[100010];
bool cmp(node x,node y)
{
    return x.z<y.z;
}
int xl[100010],xr[100010],yl[100010],yr[100010],z[100010],next[100010],pre[100100];
int txl[100010],txr[100010],tyl[100010],tyr[100010],tz[100010];
int use[100010];
int main()
{
    int n;
    while (scanf("%d",&n)==1)
    {
        for (int i=0;i<n;i++)
            scanf("%d%d%d%d%d",&xl[i],&xr[i],&yl[i],&yr[i],&z[i]);
        for (int i=0;i<n;i++)
        {
            p[i].z=z[i];
            p[i].id=i;
        }
        sort(p,p+n,cmp);
        for (int i=0;i<n;i++)
        {
            next[i]=i+1;
            if (i==n-1) next[i]=n;
            pre[i]=i-1;
            if (i==0) pre[i]=n;
        }
        next[n]=0;
        pre[n]=n-1;
        for (int i=0;i<n;i++)
        {
            txl[i]=xl[p[i].id];
            txr[i]=xr[p[i].id];
            tyl[i]=yl[p[i].id];
            tyr[i]=yr[p[i].id];
            tz[i]=z[p[i].id];
        }
        memset(use,0,sizeof(use));
        int m;
        scanf("%d",&m);
        for (int i=0;i<m;i++)
        {
            int tx,ty;
            scanf("%d%d",&tx,&ty);
            bool find=false;
            for (int j=next[n];j!=n;j=next[j])
            {
                if (!use[j]&&txl[j]<=tx&&txr[j]>=tx&&tyl[j]<=ty&&tyr[j]>=ty)
                {
                    use[j]=1;
                    printf("%d\n",p[j].id+1);
                    next[pre[j]]=next[j];
                    pre[next[j]]=pre[j];
                    find=true;
                    break;
                }
            }
            if (!find) puts("0");
        }
    }
    return 0;
}
