#include <string.h>
#include <cstdio>
#include <iostream>
#include <string>

using namespace std;

typedef long long ll;
inline int lowb(int num) {return num & (-num); }
inline int bitnum(int nValue) { return __builtin_popcount(nValue); }

const int maxn = 55;
const int maxl = 20;
double fac[maxn];
ll rdp[1 << maxl];
ll mask[maxn][maxl];
string arr[maxn];
int n, l;

int main(){
	cin >> n;
	for(int i = 0; i < n; i++) cin >> arr[i];
	l = arr[0].size();
	for(int i = 0; i < n; i++) for(int j = 0; j < l; j++) {
		for(int ii = 0; ii < n; ii++) if(arr[ii][j] == arr[i][j])
			mask[i][j] |= 1ll << ii;
	}
	fac[0] = 1;
	for(int i = 1; i < maxn; i++) fac[i] = fac[i - 1] * i;
	int rev = 1ll << l;
	rev--;
	double ans = 0;
	for(int i = 0; i < n; i++) {
		memset(rdp, 0, sizeof(rdp));
		rdp[0] = 1ll << n; rdp[0]--;
		for(int rmask = 1; rmask < 1 << l; rmask++) {
			rdp[rmask] = rdp[rmask - lowb(rmask)] & mask[i][31 - __builtin_clz(lowb(rmask))];
			if(rdp[rmask] != 1ll << i)
				ans += fac[bitnum(rmask)] * fac[l - bitnum(rmask)] / fac[l];
		}
	}
	printf("%.10lf\n", ans / n + 1.0 * (n != 1));

    return 0;
}
