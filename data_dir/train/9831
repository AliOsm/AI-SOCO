#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);


using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57;
const int M = 1e6 + 500;

unordered_map<lli, lli > cnt;

void solve()
{
    lli n;
    cin>>n;
    lli a[n];
    lli extra = 0;
    for(int i = 0; i < n; i ++)
    {
        cin>>a[i];
        cnt[a[i]] ++;
        if(cnt[a[i]] == 2)
            extra ++;
    }
    lli l = 0, r = 0, ans = 1e9;
    while(l < n )
    {
  //      cout<<extra<<endl;
        if(extra > 0 && r < n)
        {
            cnt[a[r]] --;
            if(cnt[a[r]] == 1)
                extra --;
            r ++;
        }
        else
        {
            cnt[a[l]] ++;
            if(cnt[a[l]] == 2)
                extra ++;
            l ++;
        }
            if(extra == 0){
//                    cout<<l<<' '<<r<<endl;
           //     cout<<cnt[1]<<' '<<cnt[2]<<endl;
                ans = min(ans, r - l);
//                cout<<l<<' '<<r<<endl;
            }

    }
    if(extra == 0)
        ans = min(ans, r - l);
    if(ans > 1e8)
        ans = 0;
    cout<<ans;
    return ;
}
/*
10
1 2 3 4 4 4 5 5 5 1
*/
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    lli t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}
