#include <bits/stdc++.h>

using namespace std;

#define sz(a) int(a.size())

const int MAX_N = 3e5+10;
bool vis [MAX_N];
vector <int> cn [MAX_N];
vector <int> dn [MAX_N];

long long ans = 0;
vector <int> w;

long long f [MAX_N];

void dfs(int u) {
	vis[u] = 1;
	
	vector <long long> ch;
	
	for (int i = 0; i < sz(cn[u]); i++) {
		int v = cn[u][i];
		if(vis[v]) continue;
		dfs(v);
		ch.push_back(f[v] - dn[u][i]);
	}
	
	sort(ch.rbegin(), ch.rend());
	f[u] = w[u];
	if(sz(ch) && ch[0] > 0) f[u] += ch[0];
	if(sz(ch) > 1) ans = max(ans, ch[0] + ch[1] + w[u]);
	ans = max(ans, f[u]);
}

int main () {
	int n;
	scanf("%d", &n);
	w.resize(n);
	for (int &t : w) scanf("%d",&t);
	for (int i = 1; i < n; i++) {
		int u, v, c;
		scanf("%d%d%d", &u, &v, &c);
		u--,v--;
		cn[u].push_back(v);
		cn[v].push_back(u);
		
		dn[u].push_back(c);
		dn[v].push_back(c);
	}
	
	dfs(0);
	cout << ans << endl;
}
