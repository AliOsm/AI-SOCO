#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <bitset>
#include <cstring>
#include <cctype>
#include <queue>

using namespace std;

#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define all(c) (c).begin(), (c).end()
#define sz(x) (int)x.size()
#define SWS ios_base::sync_with_stdio(false)
#define rfile freopen("input.txt", "r", stdin)
#define wfile freopen("output.txt", "w", stdout)
#define files rfile; wfile

typedef long long ll;
typedef long double ld;

const int Z = (int)1e5 + 111;
const int inf = (int)1e9 + 111;
const ll llinf = (ll)1e18 + 5;
bool used[Z];

int main() {
	//files;
	SWS;
	int n, m;
	cin >> n >> m;
	queue <pair<int, int> > q;
	q.push(mk(0,n));
	while (!q.empty()) {
		int k = q.front().fi, v = q.front().se;
		q.pop();
		if (used[v]) continue;
		used[v] = 1;
		if (v == m) {
			cout << k;
			return 0;
		}
		if (v >= 0) q.push({k+1,v-1});
		if (v <= m * 2) q.push({k+1,v * 2});
	}
	return 0;
}