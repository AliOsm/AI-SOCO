//In the name of God

#include <iostream>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
using namespace std;
#define mp make_pair
#define lol long long
const int MAXN=1e5+10;
lol dis[MAXN],a[MAXN],b[MAXN],w[MAXN];
vector <pair<int,int> > g[MAXN];

void dij(int r)
{
  set <pair <int,int> > s;
  s.insert(mp(0,r));
  while(!s.empty())
    {
      pair <int,int> p=*(s.begin());
      s.erase(s.begin());
      if(dis[p.second]<=p.first)
	continue;
      dis[p.second]=p.first;
      int v=p.second;
      for(int i=0;i<g[v].size();i++)
	{
	  int u=g[v][i].first;
	  if(dis[u]>dis[v]+g[v][i].second)
	    s.insert(mp(dis[v]+g[v][i].second,u));
	}
    }
}

int main()
{
  ios::sync_with_stdio(false);
  int n,m,s,ans=0;
  cin>>n>>m>>s;
  for(int i=1;i<=n;i++)
    dis[i]=1e9+10;
  for(int i=1;i<=m;i++)
    {
      cin>>a[i]>>b[i]>>w[i];
      g[a[i]].push_back(mp(b[i],w[i]));
      g[b[i]].push_back(mp(a[i],w[i]));
    }
  int l;
  cin>>l;
  dij(s);
  for(int i=1;i<=m;i++)
    {
      int v=a[i],u=b[i];
      if(dis[v]<l and l-dis[v]<w[i] and w[i]-(l-dis[v])+dis[u]>l)
	ans++;
      if(dis[u]<l and l-dis[u]<w[i] and w[i]-(l-dis[u])+dis[v]>l)
	ans++;
      if(dis[v]<l and dis[u]<l and dis[v]+dis[u]+w[i]==2*l)
	ans++;
    }
  for(int i=1;i<=n;i++)
    if(dis[i]==l)
      ans++;
  cout<<ans<<endl;
  return 0;
}
