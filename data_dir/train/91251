#include<bits/stdc++.h>

using namespace std;


#define ss second
#define ff first
#define int long long
//#define double long double
#define pb push_back

const int N = 2e6 + 1, MOD = 1e9 + 7, mod = 998244353, INF = 3e18;

mt19937 Flash_new_51(51515);

using vi = vector <int>;
using vp = vector <pair <int, int>>;


map <pair <int, int>, int> mp;
int used[N], p, a[N];
pair <int, int> po[N];
vi g[N];

signed main() {
    #ifdef Flash
     freopen("input.txt", "r", stdin);
    // freopen("output.txt", "w", stdout);
    #endif
    cin.tie(0);
    p = Flash_new_51() % 10101 + 515151515;
    for (int i = 2; i <= 1e5; i++) {
        if (used[i]) continue;
        for (int j = i; j <= 1e5; j+= i) {
            used[j] = i;
        }
    }
    int n, k;
    cin >> n >> k;
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        int x = a[i];
        while (x > 1) {
            g[i].pb(used[x]);
            x/= used[x];
        }
        int j = 0, sum = 0, h = 0;
        while (j < g[i].size()) {
            int c = g[i][j], kol = 0;
            while (j < g[i].size() && c == g[i][j]) kol++, j++;
            kol%= k;
            if (kol != 0) {
               h = ((h * p) % MOD + kol) % MOD;
               h = ((h * p) % MOD + c) % MOD;
               sum++;
            }
        }
        mp[{sum, h}]++;
        po[i] = {sum, h};
    }
    int ans = 0;
    for (int i = 0; i < n; i++) {
        int j = 0, sum = 0, h = 0;
        while (j < g[i].size()) {
            int c = g[i][j], kol = 0;
            while (j < g[i].size() && c == g[i][j]) kol++, j++;
            kol%= k;
            kol = (k - kol) % k;
            if (kol != 0) {
               h = ((h * p) % MOD + kol) % MOD;
               h = ((h * p) % MOD + c) % MOD;
               sum++;
            }
        }
        mp[po[i]]--;
        ans+= mp[{sum, h}];
    }
    cout << ans;
}
