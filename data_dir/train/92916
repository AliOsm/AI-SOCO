#include <iostream>
#include <iomanip>
#include <string>
#include <sstream>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <utility>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#include <complex>

using namespace std;

using ll = long long;
using ld = long double;
using pii = pair<int, int>;

constexpr int MAXN = 100005;
int n; ll d;
ll a[MAXN];
ll p[MAXN];
ll pmax[MAXN];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

    scanf("%d %I64d", &n, &d);
    p[0] = 0;
    for (int i = 1; i <= n; ++i) {
        scanf("%I64d", a + i);
        p[i] = p[i - 1] + a[i];
    }
    pmax[n] = p[n];
    for (int i = n - 1; i >= 1; --i) {
        pmax[i] = max(p[i], pmax[i + 1]);
    }

    /*
    for (int i = 1; i <= n; ++i) 
        printf("%lld%c", p[i], " \n"[i == n]);

    for (int i = 1; i <= n; ++i) 
        printf("%lld%c", pmax[i], " \n"[i == n]);
    */

    // account balance must be non-negative at each 0
    // can never exceed d
    ll bal = 0LL;
    bool pos = true;
    int moves = 0;
    for (int i = 1; i <= n; ++i) {
        // printf("Day %d balance is %lld\n", i, bal);
        if (a[i] == 0 and bal < 0) {
            ll best_future = pmax[i] - p[i];
            ll headroom = d - best_future;
            ll added = headroom - bal;

            bal = headroom;
            if (added < 0 or headroom < 0 or bal < 0) {
                pos = false;
                break;
            }

            /*
            printf("Best future: %lld\n", best_future);
            printf("Headroom: %lld\n", headroom);
            printf("Added %lld to the pot on day %d\n", added, i);
            */

            ++moves;
        } else {
            bal += a[i];
        }

        if (bal > d) {
            pos = false;
            break;
        }
    }

    if (!pos) {
        printf("%d\n", -1);
    } else {
        printf("%d\n", moves);
    }

    return 0;
}
