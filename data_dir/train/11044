#include <bits/stdc++.h>
using namespace std;
int timer = 0;

const int MAXN = 2e5 +77;

int p[MAXN];
int Rank[MAXN];


int root (int v) {
	if (v == p[v])
		return v;
	return p[v] = root(p[v]);
}

void unite(int a, int b) {
	a = root (a);
	b = root (b);
	if (a != b) {
		if (Rank[a] < Rank[b])
			swap (a, b);
		p[b] = a;
		if (Rank[a] == Rank[b])
			++Rank[a];
	}
}


map <string, int> m;

int main() {
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
    #endif // ONLINE_JUDGE
    int n, M, q;
    cin >> n >> M >> q;
    for (int i = 1; i <= n; i++) {
        string a;
        cin >> a;
        timer ++;
        m[a] = timer;
        p[timer * 2] = timer * 2;
        p[timer * 2 + 1] = timer * 2 + 1;

    }
    while(M--) {
        int type;
        string a, b;
        cin >> type >> a >> b;
        if (type == 1) {
            if (root(m[a] * 2) == root(m[b] * 2 + 1)) {
                cout << "NO\n";
            } else {
                cout << "YES\n";
                unite(m[a] * 2, m[b] * 2);
                unite(m[a] * 2 + 1, m[b] * 2 + 1);
            }
        } else {
            if (root(m[a]*2) == root(m[b]*2)) {
                cout << "NO\n";
            } else {
                cout << "YES\n";
                unite(m[a] * 2, m[b] * 2 + 1);
                unite(m[a] * 2 + 1, m[b] * 2);
            }
        }
    }
    while(q--) {
        string a, b;
        cin >> a >> b;
        int id_a = m[a];
        int id_b = m[b];
        if (root(id_a * 2) == root(id_b * 2)) {
            cout << 1 << "\n";
        } else if (root(id_a * 2 + 1) == root(id_b * 2) && root(id_a * 2) == root(id_b * 2 + 1)) {
            cout << 2 << "\n";
        } else {
            cout << 3 << "\n";
        }
    }
}