#include <bits/stdc++.h>

using namespace std;

const int MaxN = 2e5 + 15;
const int K = 500;
const int C = 100 + 2;


pair<int, int> p[500][C];
int ex[500][C];
int a[MaxN];
int n;

pair<int, int> findSet(int h, int x)
{
    if(p[h][x].first != x)
        p[h][x] = findSet(h, p[h][x].first);
    return p[h][x];
}

void updatePoint(int pos, int x, int y)
{
    if(a[pos] == x)
        a[pos] = y;
}

void updateSegment(int pos, int x, int y)
{
    if(!ex[pos][x])
        return;
    if(!ex[pos][y])
    {
        ex[pos][y] = ex[pos][x];
        p[pos][findSet(pos, ex[pos][x]).first].second = y;
        ex[pos][x] = 0;
    }else
    {
        p[pos][findSet(pos, ex[pos][x]).first] = findSet(pos, ex[pos][y]);
        ex[pos][x] = 0;
    }
}

void update(int pos)
{
    for(int i = pos * K; i < n && i < (pos + 1) * K; ++i)
        a[i] = findSet(pos, a[i]).second;

    for(int i = 1; i < C; ++i)
    {
        ex[pos][i] = i;
        p[pos][i] = make_pair(i, i);
    }
    for(int i = pos * K; i < n && i < (pos + 1) * K; ++i)
        ex[pos][a[i]] = a[i];
}

void prepare(int pos)
{
    for(int i = 1; i < C; ++i)
    {
        ex[pos][i] = i;
        p[pos][i] = make_pair(i, i);
    }
    for(int i = pos * K; i < n && i < (pos + 1) * K; ++i)
        ex[pos][a[i]] = a[i];
}

void make(int l, int r, int x, int y)
{
    if(x == y)
        return;

    int L = l / K;
    int R = r / K;

    if(L == R)
    {
        update(L);
        for(int i = l; i <= r; ++i)
        {
            if(a[i] == x)
                a[i] = y;
        }
    }else
    {
        update(L);
        update(R);
        while(l / K == L)
        {
            updatePoint(l, x, y);
            ++l;
        }
        while(r / K == R)
        {
            updatePoint(r, x, y);
            --r;
        }
        for(int i = L + 1; i < R; ++i)
            updateSegment(i, x, y);
    }
}

int main()
{
//    freopen("input.txt", "r", stdin);
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);

    cin >> n;

    for(int i = 0; i < n; ++i)
        cin >> a[i];

    for(int i = 0; i * K < n; ++i)
        prepare(i);

    int t;
    cin >> t;
    while(t --> 0)
    {
        int l, r, x, y;
        cin >> l >> r >> x >> y;
        --l;
        --r;
        make(l, r, x, y);
    }

    for(int i = 0; i * K < n; ++i)
        update(i);

    for(int i = 0; i < n; ++i)
        cout << a[i] << ' ';
    cout << '\n';

    return 0;
}
