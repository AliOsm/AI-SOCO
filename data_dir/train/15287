#include <bits/stdc++.h>
using namespace std;
#define ll long long
    vector <ll> three(39, 0);


    void solve()
    {
            ll n;
            vector <ll> cur;
            cin>>n;
            ll m = n;
            while (m)
            {
                cur.push_back(m%3);
                m/=3;
            }

            ll ans = 0;
            cur.push_back(0);
            cur.push_back(0);
            /*   cout<<"before"<<endl;
            for(ll i=0; i<cur.size(); i++)
                cout<<cur[i];
            cout<<endl;*/
        ll p = -1;
            for(ll i = cur.size() - 1; i>=0; i--)
            {
                if (cur[i] > 1)
                {
                    p = i;
                    cur[i] = 0;
                    cur[i+1]++;
                    for(ll j = i+1; j<=cur.size(); j++)
                    {
                        if (cur[j] <2)
                        {
                            //cur[j] = 1;
                            break;
                        }
                        else
                        {
                            cur[j] = 0;
                            cur[j + 1]++;
                        }
                    }

                    //ans+=three[i+1];
                    break;
                }
                //else
                  //  ans+=cur[i]*three[i];
            }
        if (p!=-1)
        for(ll i = p; i>=0; i--)
            cur[i] = 0;

           /*     cout<<"after"<<endl;
            for(ll i=0; i<cur.size(); i++)
                cout<<cur[i];
            cout<<endl;
*/
            for(ll i = cur.size() - 1; i>=0; i--)
            {
                if (cur[i] > 0)
                {
                    ans+=three[i] * cur[i];
                }
            }


        cout<<ans<<endl;

    }

int main()
{
    three[0] = 1;
    ll i,j;
    for(i = 1; i<=38; i++)
        three[i] = three[i - 1]*3;


    ll v;
    cin>>v;
    for(ll i=0; i<v; i++)
        solve();





    return 0;
}
