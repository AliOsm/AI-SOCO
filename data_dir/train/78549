#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       a*(b/gcd(a,b))
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define all(v)         v.begin(),v.end()
#define fill(a,b)      memset(a,b,sizeof a)
#define smax(a, b)     a=max(a, b)
#define smin(a, b)     a=min(a, b)
#define sqr(x)         x*x
#define cube(x)        x*x*x
#define endl           '\n'

int in() {
    int n;
    scanf("%d",&n);
    return n;
}

ll Lin() {
    ll n;
    scanf("%lld",&n);
    return n;
}

double Din() {
    double n;
    scanf("%lf",&n);
    return n;
}

const ll inf = 1e17;
const ll mod = 1e9 + 7;
const int N = 1e3 + 5;

string s[N];

int l[N][N], r[N][N], u[N][N], d[N][N], a[N][N], b[N][N], c[N][N];



int main() {
    int n=in(), m=in();
    for(int i=0; i<n; i++)
        cin>>s[i];

    for(int i=1; i<=n; i++) {
        for(int j=1; j<=m; j++) {
            if(s[i-1][j-1]=='*') u[i][j]=u[i-1][j]+1;
        }
    }

    for(int i=n; i>=1; i--) {
        for(int j=1; j<=m; j++) {
            if(s[i-1][j-1]=='*') d[i][j]=d[i+1][j]+1;
        }
    }

    for(int i=1; i<=n; i++) {
        for(int j=1; j<=m; j++) {
            if(s[i-1][j-1]=='*') l[i][j]=l[i][j-1]+1;
        }
    }

    for(int i=1; i<=n; i++) {
        for(int j=m; j>=1; j--) {
            if(s[i-1][j-1]=='*') r[i][j]=r[i][j+1]+1;
        }
    }

    int ans=0;
    for(int i=2; i<n; i++) {
        for(int j=2; j<m; j++) {
            int k=min(min(l[i][j], r[i][j]), min(u[i][j], d[i][j]));
            if(s[i-1][j-1]=='*' && k>1) {
                a[i-k+1][j]++, a[i+k][j]--;
                b[i][j-k+1]++, b[i][j+k]--;
                c[i][j]=k;
                ans++;
            }
        }
    }

    for(int i=1; i<=n; i++) {
        for(int j=1; j<=m; j++) {
            a[i][j]+=a[i-1][j];
        }
    }

    for(int i=1; i<=n; i++) {
        for(int j=1; j<=m; j++) {
            b[i][j]+=b[i][j-1];
        }
    }

    for(int i=1; i<=n; i++) {
        for(int j=1; j<=m; j++) {
            if(s[i-1][j-1]=='*' && a[i][j]+b[i][j]==0) return !printf("-1\n");
        }
    }

    printf("%d\n", ans);
    for(int i=1; i<=n; i++) {
        for(int j=1; j<=m; j++) {
            if(c[i][j]>0) printf("%d %d %d\n", i, j, c[i][j]-1);
        }
    }

    return 0;
}

