#include<bits/stdc++.h>
using namespace std;
#define fr first
#define sc second
typedef long long ll;
typedef double ld;
typedef pair<ll,ll> p2;
typedef pair<ll,p2> p3;
typedef vector<int> vi;
const ll MoD1 = 7 + 1e9;
const ll MoD2 =  1 + 1e7;
const ll INF32 = 5 + 2e9;
const ll INF64 = 5 + 1e18;
const ll MAX = 5+ 3e5;

ll N,M,a[MAX];
p2 c[MAX];
bool Try(ll D)
{
    int mp[N+1];
    memset(mp,0,sizeof(mp));
    ll cc = D;
    int j = upper_bound(c,c+M,p2(D,INF32)) - c;
    for(int i=j-1;i>=0;i--)
    {
        ll dd = c[i].fr;
        int tt = c[i].sc;
        cc = min(cc,dd);
        int x = min( a[tt] - mp[tt] ,cc );
        cc -= x;
        D -= x;
        mp[tt] += x;
    }
    for(int i=1;i<=N;i++)
        D -= 2*( a[i] - mp[i] );
    return D >= 0;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin >> N >> M;
    for(int i=1; i<=N; i++)
        cin >> a[i];
    for(int j=0; j<M; j++)
    {
        ll x,y;
        cin >> x >> y;
        c[j] = p2( x,y );
    }
    sort(c,c+M);
    int l=0,r=INF32,mid,ans;
    while(l<=r)
    {
        mid = l+r>>1;
        if( Try(mid) )
            ans = mid,r = mid-1;
        else
            l = mid+1;
    }
    cout << ans << endl;

    return 0;
}
