#include <bits/stdc++.h>

#define ll long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second

using namespace std;

const double pi=acos(-1);
const int N=2e6+6,mod=1000000007,M=2e9;
const ll MAX=5e18;

struct flight{
    int d,f,t,c;

    operator<(const flight& a)const{
        return d<a.d;
    }
}a[N];

int n,m,k,c,arv[N],lv[N];
ll sum,preSum[N],ans=MAX;

int main()
{
    scanf("%d%d%d",&n,&m,&k);
    for(int i=0;i<m;i++)
        scanf("%d%d%d%d",&a[i].d,&a[i].f,&a[i].t,&a[i].c);
    sort(a,a+m);

    for(int i=m-1;i>=0;i--){
        if(a[i].t){
            if(!lv[a[i].t]){
                lv[a[i].t]=a[i].c,c++;
                sum+=a[i].c;
            }
            else if(a[i].c<lv[a[i].t]){
                sum-=lv[a[i].t]-a[i].c;
                lv[a[i].t]=a[i].c;
            }
        }
        if(c==n)
            preSum[a[i].d]=sum;
    }
    c=sum=0;
    for(int i=a[m-1].d;i>=0;i--){
        if(!preSum[i])
            preSum[i]=preSum[i+1];
    }
    for(int i=0;i<m;i++){
        if(a[i].f){
            if(!arv[a[i].f]){
                arv[a[i].f]=a[i].c,c++;
                sum+=a[i].c;
            }
            else if(a[i].c<arv[a[i].f]){
                sum-=arv[a[i].f]-a[i].c;
                arv[a[i].f]=a[i].c;
            }
        }
        if(c==n){
            if(preSum[a[i].d+k+1])
                ans=min(ans,preSum[a[i].d+k+1]+sum);
        }
    }
    if(ans==MAX)
        ans=-1;
    cout<<ans;
    return 0;
}
