#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <functional>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
#define  int long long int
typedef complex<long double> cd;
const long double pi=acos(-1);
typedef double db;
typedef long double ldb;
typedef pair <int, int> pii;
typedef pair <db, db> pdd;
typedef vector<int> vi;
typedef vector<vector<int> > matrix;
#define m1 make_pair
#define pb push_back
#define flush fflush(stdout)
#define IOS std::ios::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define reset(x,v) memset(x,v,sizeof(x))
#define sz(x) (int)(x.size())
#define ff first
#define ss second
#define endl "\n"
#define debug(x) (cerr << #x << ": " << x << "\n")
#define setbits(x) __builtin_popcount(x)
inline ll gcd(ll a,ll b){if(a==0) return b;return gcd(b%a,a);}
inline ll power(ll a,ll n,ll m){if(n==0)return 1;ll p=power(a,n/2,m);p=(p*p)%m;if(n%2) return (p*a)%m;else return p;}
const ll MOD =998244353;
const ll hell=1000000007;
const int INF = 1e17;
const ll LL_INF = 0x3f3f3f3f3f3f3f3f;

typedef tree<int, null_type, less<int>, rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;

int32_t main()
{
    IOS;
    int t;
    cin>>t;
    while(t--)
    {
        int r,c;
        cin>>r>>c;
        string s[r];
        for(int i=0;i<r;i++)
            cin>>s[i];
        int cnt=0;
        for(int i=0;i<r;i++)
            for(int j=0;j<c;j++)
                cnt+=(s[i][j]=='A');
        if(!cnt)
        {
            cout<<"MORTAL"<<endl;
            
        }
        else
        {
            int up[r+2]={0};int to;
            int dw[r+2]={0};
            int lft[c+2]={0};int rgt[c+2]={0};int isr[r+2]={0};int isc[c+2]={0};
            for(int i=0;i<r;i++)
            {
                for(int j=0;j<c;j++)
                {
                    up[i+1]=up[i+1]|(s[i][j]=='P');
                    dw[i+1]=dw[i+1]|(s[i][j]=='P');
                    isr[i+1]+=(s[i][j]=='A');
                }
            }
            for(int i=0;i<c;i++)
            {
                for(int j=0;j<r;j++)
                {
                    lft[i+1]=lft[i+1]|(s[j][i]=='P');
                    rgt[i+1]=rgt[i+1]|(s[j][i]=='P');
                    isc[i+1]=isc[i+1]+(s[j][i]=='A');
                }
            }
            for(int i=1;i<=r;i++)
                up[i]=up[i]|up[i-1];
            for(int i=r;i>=1;i--)
                dw[i]=dw[i]|dw[i+1];
            for(int i=1;i<=c;i++)
                lft[i]=lft[i]|lft[i-1];
            for(int i=c;i>=1;i--)
                rgt[i]=rgt[i]|rgt[i+1];
            int ans=4;
            for(int i=1;i<=r;i++)
            {
                if(isr[i])
                {
                   if(isr[i]==c)
                   {
                       to=0;
                   }
                    else
                    {
                        if(s[i-1][0]=='A'||s[i-1][c-1]=='A')
                            to=1;
                        else
                            to=2;
                    }
                    if(up[i-1])
                        to++;
                    if(dw[i+1])
                        to++;
                    ans=min(ans,to);
                }
            }
            for(int i=1;i<=c;i++)
            {
                if(isc[i])
                {
                    if(isc[i]==r)
                    {
                        to=0;
                    }
                    else
                    {
                        if(s[0][i-1]=='A'||s[r-1][i-1]=='A')
                            to=1;
                        else
                            to=2;
                    }
                    if(lft[i-1])
                        to++;
                    if(rgt[i+1])
                        to++;
                    ans=min(ans,to);
                }
            }
            cout<<ans<<endl;
        }
    }
    return 0;
}

