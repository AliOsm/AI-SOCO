#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <unordered_map>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <cassert>
#include <regex>
#include <random>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define pii pair<int,int> 
#define vi vector<int>
#define vpii vector<pii>
#define vvi vector<vector<int>>
#define forn(it,from,to) for(int (it)=from; (it)<to; (it)++)
const int  Inf = 2 * 1000 * 1000 * 1000;
ll LINF = (ll)4e18;
using namespace std;
//ll mod = 1e9 + 7;
#define M_PI       3.14159265358979323846   // pi



int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("domino-covering-1.in", "r", stdin);
	//freopen("domino-covering-1.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	
	int n,m;
	cin>>n>>m;
	vector<vector<int> > a(n, vector<int> (m)), b(n, vector<int> (m));
	forn(i,0,n)forn(j,0,m)cin>>a[i][j];
	forn(i,0,n)forn(j,0,m)cin>>b[i][j];
	
	vector<vector<int> > ta(n + m + n +m + 10);
	vector<vector<int> > tb(n + m+ n +m + 10);
	for(int i = 0; i < n; ++i) {
	    for(int j = 0; j < m; ++j) {
	        ta[i + j].push_back(a[i][j]);
	        tb[i + j].push_back(b[i][j]);
	    }
	}
	
    bool good = true;
    for(int i = 0; i < ta.size(); ++i) {
        sort(all(ta[i]));
        sort(all(tb[i]));
        good &= ta[i] == tb[i];
    }
    
    cout<<(good ? "YES" : "NO");
	
	return 0;
}