#include <bits/stdc++.h>
using namespace std;

const int N = 200002;

typedef long long LL;

int d[2][N], idx[2][N], type[N], f[N];

int chk(int s, int k, int m, int M) {
        vector <LL> v;
        for(int i = 1; i <= m; i++)
                v.push_back(1LL * d[type[i]][M] * f[i]);
        sort(v.begin(), v.end());
        LL sum = 0;
        for(int i = 0; i < k; i++)
                sum += v[i];
        return sum <= (LL)s;
}

int main() {
        int n, m, k, s; scanf("%d %d %d %d", &n, &m, &k, &s);
        d[0][0] = d[1][0] = INT_MAX;
        for(int i = 1; i <= n; i++) {
                scanf("%d", &d[0][i]);
                if(d[0][i] < d[0][i - 1]) {
                        idx[0][i] = i;
                } else {
                        d[0][i] = d[0][i - 1];
                        idx[0][i] = idx[0][i - 1];
                }
        }

        for(int i = 1; i <= n; i++) {
                scanf("%d", &d[1][i]);
                if(d[1][i] < d[1][i - 1]) {
                        idx[1][i] = i;
                } else {
                        d[1][i] = d[1][i - 1];
                        idx[1][i] = idx[1][i - 1];
                }
        }
        for(int i = 1; i <= m; i++) {
                scanf("%d %d", &type[i], &f[i]);
                type[i]--;
        }

        int L = 1, R = n, ans = -1;
        while(L <= R) {
                int M = (L + R) >> 1;
                if(chk(s, k, m, M)) {
                        ans = M;
                        R = M - 1;
                } else  L = M + 1;
        }
        printf("%d\n", ans);
        if(~ans) {
                vector < pair <LL, pair <int, int> > > t;
                for(int i = 1; i <= m; i++) {
                        t.push_back({1LL * d[type[i]][ans] * f[i], {i, idx[type[i]][ans]}});
                }
                sort(t.begin(), t.end());
                for(int i = 0; i < k; i++) {
                        printf("%d %d\n", t[i].second.first, t[i].second.second);
                }
        }
}
