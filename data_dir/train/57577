#include <sstream>
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<ctime>
#include<cmath>
#include<map>
#include<stack>
#include<random>
#include<queue>
#include<list>
#include<math.h>
#include<complex>
using namespace std;
#define ll long long int
#define ld long double
#define key pair<ld,ld>
#define ii pair<int,int>
#define si set<int>
#define vii vector<pair<int,int> >
#define vi vector<int>
#define vll vector<ll>
#define vb vector<bool>
#define vvi vector<vector<int> >
#define vs vector<string>
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define nu 100001
#define mul(x,y) ((ll)(x)*(y))%mod
#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)
#define fastio  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define forn(i, n) for (int i = 0; i < int(n); i++)
const ll INF=9223372036854775807;
const ll mod=998244353;
const int NUM=21;
ll  MOD(ll  a,ll  b)
{
    if(a>b)
        return a-b;
    else
        return b-a;
}
ll  max3(ll  a,ll  b,ll c)
{
    return max(c,max(a,b));
}
ll min3(ll a,ll  b,ll  c)
{
    return min(a,min(b,c));
}
ll  power(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x);//%mod;
        y = y>>1;
        x = (x*x);//%mod;
    }
    return res;//%mod;
}
ll  power1(ll  x,ll  y )
{
    ll res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res*x)%mod;
        y = y>>1;
        x = (x*x)%mod;
    }
    return res%mod;
}
ll logg(ll  a)
{
    ll  x=0;
    while(a>1)
    {
        x++;
        a/=2;
    }
    return x;
}
ll  gcd(ll  a,ll   b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll abso(ll x)
{
    if(x<0)
    {
        return -x;
    }
    return x;
}
ll ceiling (ll  a,ll  b)
{
    if(a%b==0)
    {
        return a/b;
    }
    else
    {
        return a/b+1;
    }
}
ll modinv(ll x)
{
    return power1(x,mod-2);
}
vvi adj;
vector<int> comp;
set<int> g;
queue<int> q;
set<pair<int,int>> f;
void solve(int n)
{
    for(int i=1;i<=n;i++)
    {
        g.insert(i);
    }
    while(!g.empty())
    {
        q.push(*g.begin());
        g.erase(g.begin());
        int num=0;
        while(!q.empty())
        {
            num++;
            int cur=q.front();
            q.pop();
            if(g.empty())
            {
                continue;
            }
            else
            {
                int x=0;
                while(g.upper_bound(x)!=g.end())
                {
                    int y=*g.upper_bound(x);
                    if(f.find(mp(cur,y))==f.end())
                    {
                        q.push(y);
                        g.erase(y);
                    }
                    x=y;
                }
            }
        }
        if(num!=0){
            comp.pb(num);}
    }
}
int main()
{
    fastio;
    ll n,l;
    cin>>n>>l;
    vll c(n);
    for(int i=0;i<n;i++)
    {
        cin>>c[i];
    }
    vll ans(31);
    vll bin(31);
    for(ll k=0;k<=30;k++)
    {
        ll t=INF;
        for(ll j=0;j<=k&&j<n;j++)
        {
            t=min(t,power(2,k-j)*c[j]);
        }
        ans[k]=t;
    }
    ll temp=l;
    ll fin=0;
    for(ll j=0;j<=30;j++)
    {
        bin[j]=temp%2;
        temp=temp/2;
    }
    auto bin1=bin;
    temp=l;
    for(ll j=0;j<=30;j++)
    {
        if(temp%2!=0)
        {
            if(ans[j]==INF)
            {
                fin=INF;
                break;
            }
            fin+=ans[j];
        }
        temp=temp/2;
    }
    for(int i=0;i<=30;i++)
    {
        if(bin[i]==0)
        {
            ll tt=0;
            bin1[i]=1;
            for(int j=i-1;j>=0;j--)
            {
                bin1[j]=0;
            }
            for(int j=30;j>=0;j--)
            {
                if(bin1[j]>0)
                {
                    tt+=ans[j];
                }
            }
            fin=min(fin,tt);
        }
    }
    cout<<fin;
}
