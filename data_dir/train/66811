#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 200'009;

vector<int> g[N];
int sz[N];
int de[N];

void dfs1(int x, int pa) {
  sz[x] = 1;
  for (int y : g[x]) {
    if (y == pa) {
      continue;
    }
    de[y] = de[x] + 1;
    dfs1(y, x);
    sz[x] += sz[y];
  }
}

int f[N];
long long ans;

int dfs2(int x, int pa) {
  int sum = f[x];
  for (int y : g[x]) {
    if (y == pa) {
      continue;
    }
    sum += dfs2(y, x);
  }
  if (f[x] == 0) {
    ans += sum;
  }
  return sum;
}

int o[N];

int main() {
  int n, m;
  scanf("%d%d", &n, &m);
  for (int i = 0; i < n; ++i) {
    g[i].clear();
  }
  for (int i = 0; i < n - 1; ++i) {
    int x, y;
    scanf("%d%d", &x, &y);
    --x;
    --y;
    g[x].push_back(y);
    g[y].push_back(x);
  }
  de[0] = 1;
  dfs1(0, -1);
  for (int i = 0; i < n; ++i) {
    o[i] = i;
  }
  sort(o, o + n, [](int i, int j) {
    return sz[i] - de[i] > sz[j] - de[j];
  });
  for (int i = 0; i < n; ++i) {
    f[i] = 1;
  }
  for (int i = 0; i < n - m; ++i) {
    f[o[i]] = 0;
  }
  ans = 0;
  dfs2(0, -1);
  printf("%lld\n", ans);
}
