#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <iomanip>
#include <bitset>
#include <stack>
#include <memory.h>
#include <list>
#include <numeric>
#include <functional>
#include <complex>
#include <unordered_set>

#define ll long long
#define ld long double
#define ull unsigned ll
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()

using namespace std;

int mod;

int add(int a, int b) {
	return (a + b) % mod;
}

int sub(int a, int b) {
	return (a - b + mod) % mod;
}


int main() {
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	//freopen("dictionary.in", "r", stdin);
	//freopen("dictionary.out", "w", stdout);
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	cout.precision(6); cout.setf(ios::fixed);
	int n;
	cin >> n >> mod;

	vector<int>a(n);
	for (auto&x : a) cin >> x;

	vector<int>b(n);
	for (auto&x : b) cin >> x;

	sort(all(a));
	sort(all(b));

	vector<int>candidates(n);
	for (int i = 0; i < n; i++) {
		candidates[i] = sub(b[i], a[0]);
	}

	sort(all(candidates));
	for (int i = 0; i < n; i++) {
		int cur = candidates[i];
		vector<int>c = a;
		for (auto&x : c) {
			x = add(cur, x);
		}

		sort(all(c));
		if (c == b) {
			cout << cur;
			return 0;
		}
	}
	return 0;
}
