#include<iostream>
#include<vector>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<complex>
#include<set>
#include<map>
#include<queue>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;
typedef long long ll;

const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

vi primes;
bool p[50000];
set<int> ok;
int ans;
void rec(int m,int k,int pos,ll prod,int sign){
	//cerr<<m<<" "<<k<<" "<<pos<<" "<<prod<<" "<<sign<<" "<<m/prod*sign<<endl;
	//dbg(primes[pos]); dbg(min(m,k));
	if(prod>m)return;
	if(!ok.count(prod)){
		ok.insert(prod);
		ans+=m/prod*sign;
	}
	if(primes[pos]>min(m,k-1))return;
	rec(m,k,pos+1,prod*primes[pos],-sign);
	if(prod*primes[pos]<=m)rec(m,k,pos+1,prod,sign);
}
int solve(int n,int k){
	for(int i=2;i*i<=k;i++)if(k%i==0)return 0;
	ans=0;
	ok.clear();
	rec(n/k,k,0,1,1);
	return ans;
}
void run()
{
	primes.clear();
	for(int i=2;i<50000;i++)if(!p[i]){
		primes.pb(i);
		for(ll j=(ll)i*i;j<50000;j+=i)p[j]=1;
	}
	
	int l,r,k;
	cin>>l>>r>>k;
	cout<<solve(r,k)-solve(l-1,k)<<endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	int cs=3;rep(i,cs)
#endif
	run();
}
