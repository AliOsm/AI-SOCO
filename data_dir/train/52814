/**
*
* Author: MARS
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >

typedef unsigned long long ull;
typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl E = 2.71828182845904523536;
const ldbl pi = acos(-1);
const dbl eps = 1e-9;
const ll mod = 1e9+7;
const ll inf = 1LL<<30;

/** /////////// ** Code ** /////////// **/

const int N=100100;
vector<ll>mn[N];
ll nxt[N][2];
int n,m;
ll mx;

int main()
{
    scanf("%d%d",&n,&m);
    for(int i=0 ; i<m ; i++){
        int a,b;
        scanf("%d%d",&a,&b);
        if(b < a) b+=n;
        mn[a].push_back(b);
        mx=max(mx,(ll)mn[a].size());
    }


    if(mx == 1){
        for(int i=1 ; i<=n ; i++){
            if(mn[i].size()){
                nxt[i][0]=mn[i][0];
                nxt[i+n][0]=mn[i][0]+n;
            }
        }

        for(int j=1 ; j<=n ; j++){
            ll ans=0;
            for(int i=j ; i<n+j ; i++)
                ans=max(ans,nxt[i][0]-j);

            printf("%lld ",ans);
        }

        return 0;
    }

    for(int i=1 ; i<=n ; i++){
        sort(mn[i].begin(),mn[i].end());

        if(mn[i].size() == mx){
            nxt[i][1]=mn[i][1];
            nxt[i+n][1]=mn[i][1]+n;

            nxt[i][0]=mn[i][0];
            nxt[i+n][0]=mn[i][0]+n;
        }
        if(mn[i].size() == mx-1){
            nxt[i][1]=mn[i][0];
            nxt[i+n][1]=mn[i][0]+n;
        }
    }

    for(int j=1 ; j<=n ; j++){
        ll ans=(mx-2)*n , inc=0;

        for(int i=j ; i<n+j ; i++){
            inc=max(inc,nxt[i][1]-j);
            inc=max(inc,n+nxt[i][0]-j);
        }

        printf("%lld ",ans+inc);
    }


    return 0;
}
