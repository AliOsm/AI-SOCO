#include <bits/stdc++.h>
using namespace std;

const int modulo = 1000000007;
const int MAXN = 1005;
int dp[MAXN * 2][MAXN];

int main()
{
	int n;

	scanf("%d", &n);
	memset(dp, -1, sizeof(dp));
	dp[n * 2][0] = 0;
	for(int i = n * 2 - 1; i >= 0; --i)
		for(int j = 0; j <= n; ++j)
		{
			bool valid = false;
			
			dp[i][j] = i & 1;
			if(j > 0 && dp[i + 1][j - 1] != -1)
				dp[i][j] = (dp[i][j] + dp[i + 1][j - 1]) % modulo, valid = true;
			if(j < n && dp[i + 1][j + 1] != -1)
				dp[i][j] = (dp[i][j] + dp[i + 1][j + 1]) % modulo, valid = true;
			if(!valid)
				dp[i][j] = -1;
		}
	printf("%d\n", dp[0][0]);

	return 0;
}
