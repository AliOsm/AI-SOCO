#include <bits/stdc++.h>

using namespace std;

const int N = 5e6 + 5;
int nxt[N][7];
int en[N];
int sz = 1;
bool prefex[N];
void insert(char s[]) {
	int node = 0;
	int n = strlen(s);
	for (int i = 0; i < n; ++i) {
		if (!nxt[node][s[i] - 'a'])
			nxt[node][s[i] - 'a'] = sz++;
		prefex[node] = true;
		node = nxt[node][s[i] - 'a'];
	}
	prefex[node] = true;
	++en[node];
}

char s[55];
int len, test;
map<pair<int, int>, int> id;
int go(int i, int node) {
	if (!prefex[node] || id[{i, node}] == test)
		return 0;
	id[{i, node}] = test;
	if (i == len)
		return en[node];
	int ret = 0;
	if (s[i] == '?') {
		ret += go(i + 1, node);
		for (char j = 'a'; j <= 'e'; ++j) {
			if (nxt[node][j - 'a'])
				ret += go(i + 1, nxt[node][j - 'a']);
		}
	} else {
		if (nxt[node][s[i] - 'a'])
			ret = go(i + 1, nxt[node][s[i] - 'a']);
	}
	return ret;
}
int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	int n, m;
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; ++i) {
		scanf("%s", s);
		insert(s);
	}
	while (m--) {
		scanf("%s", s);
		len = strlen(s);
		++test;
		printf("%d\n", go(0, 0));
	}
	
	return 0;
}