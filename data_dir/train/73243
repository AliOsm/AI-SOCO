/*﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃★☆
 |Author: WiYR
 |Created Time.: 2013/10/6 22:01:54
 |File Name: Below the Diagonal.cpp
 |Description: 
★☆﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃﹄﹃*/
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
typedef __int64 i64;
typedef long long ll;
const double eps=1e-7;
const int inf=0x7FFFFFFF;
#define rep(i,n) for(int i=0;i<n;i++)
#define mset(a,i) memset(a,i,sizeof(a))
#define PB(i) push_back(i)
#define lson l,m,o<<1
#define rson m+1,r,o<<1|1

using namespace std;
const int N=1000+10;
bool one[N][N];
int row[N],col[N];
struct node{
    int op,x,y;
    node(){};
    node(int a,int b,int c){
        op=a,x=b,y=c;
    }
};
vector<node>ans;
int main() {
//  freopen("input.txt","r",stdin); 
    int n,ii,jj;
    scanf("%d",&n);
    rep(i,n-1){
        scanf("%d%d",&ii,&jj);
        ii--,jj--;
        one[ii][jj]=1;
        ++row[ii];
        ++col[jj];
    }
    for(int i=n-1;i>=0;i--){
    //    cout<<col[0]<<endl;
        for(int j=i;j>=0;j--){
            if(col[j]==0){
                swap(col[i],col[j]);
                rep(k,n)
                    swap(one[k][i],one[k][j]);
                if(i!=j)
                    ans.push_back(node(2,i,j));
                break;
            }
        }
        for(int j=i;j>=0;j--){
            if(row[j]){
                swap(row[j],row[i]);
                rep(k,n){
                    swap(one[i][k],one[j][k]);
                    if(one[i][k]) col[k]--;
                }
                if(j!=i)
                    ans.push_back(node(1,i,j));
                break;
            }
        }
    }
    int s=ans.size();
    printf("%d\n",s);
    rep(i,s)
        printf("%d %d %d\n",ans[i].op,ans[i].x+1,ans[i].y+1);
    return 0;
}
