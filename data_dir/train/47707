#pragma GCC optimize ("O3")
#include<bits/stdc++.h>
using namespace std;
typedef long long ll ;
const int N = 2e5+5 ;
int n ,a[N] ,b[N] ;
int spars_min[20][N] ;
int spars_max[20][N] ;
int LG[N]={-1} ;
ll ans ;
int RMinQ(int s,int e){
    int siz = e - s + 1 ;
    int lg = LG[siz] ;
    return min(spars_min[lg][s] ,spars_min[lg][e-(1<<lg)+1]) ;
}
int RMaxQ(int s,int e){
    int siz = e - s + 1 ;
    int lg = LG[siz] ;
    return max(spars_max[lg][s] ,spars_max[lg][e-(1<<lg)+1]) ;
}
int beg(int i){
    int st=i ,en=n-1 ;
    while(st<en){
        int mid=(st+en)/2;
        if(RMinQ(i,mid)==RMaxQ(i,mid))en=mid;
        else if(RMinQ(i,mid)>RMaxQ(i,mid))st=mid+1 ;
        else en=mid-1 ;
    }
    return RMinQ(i,st)==RMaxQ(i,st)?st:-1 ;
}
int en(int i){
    int st=beg(i) ,en=n-1 ;
    while(st<en){
        int mid=(st+en+1)/2;
        if(RMinQ(i,mid)==RMaxQ(i,mid))st=mid;
        else if(RMinQ(i,mid)>RMaxQ(i,mid))st=mid+1 ;
        else en=mid-1 ;
    }
    return st ;
}
int main(){
    scanf("%d",&n);
    for(int i=0;i<n;++i)scanf("%d",a+i);
    for(int i=0;i<n;++i)scanf("%d",b+i);
    for(int i=0;i<n;++i){
        LG[i+1] = LG[i] + !(i&(i+1)) ;
        spars_min[0][i] = b[i] ;
        spars_max[0][i] = a[i] ;
    }
    for(int lg = 1 ;(1<<lg)<=n ;++lg)for(int i =0;i+(1<<lg)<=n;++i){
        spars_min[lg][i] = min(spars_min[lg-1][i] ,spars_min[lg-1][i+(1<<(lg-1))]) ;
        spars_max[lg][i] = max(spars_max[lg-1][i] ,spars_max[lg-1][i+(1<<(lg-1))]) ;
    }
    for(int i=0;i<n;++i)if(~beg(i))ans += en(i) - beg(i) + 1 ;
    printf("%lld",ans);
    return 0;
}
