#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

bool f( vector<int>& nums, int mid, int h ) {
  if ( mid > nums.size() ) return false;
  long long answer = 0;
  vector<int> freq(mid, 0);
  for ( int i = 0; i < nums.size(); i++ ) {
    int pos = i % mid;
    answer += max(0, nums[i] - freq[pos]);
    freq[pos]++;
  }
  return answer >= h;
}

int main() {
  ios_base::sync_with_stdio(false); cin.tie(NULL);
  int n, m;
  while ( cin >> n >> m ) {
    vector<int> nums(n);
    
    for ( auto& i : nums ) cin >> i;
    sort(nums.rbegin(), nums.rend());

    int lo = 1, hi = n + 1;
    while ( hi - lo > 1 ) {
      int mid = (lo + hi) >> 1;
      if ( f(nums, mid, m) ) {
        hi = mid;
      } else {
        lo = mid;
      }
    }
    if ( f(nums, lo, m) ) cout << lo << endl;
    else if ( f(nums, hi, m) ) cout << hi << endl;
    else cout << -1 << endl;
  }
  return 0;
}