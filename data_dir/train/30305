#include <cstdio>
#include <algorithm>
#include <iostream>

using namespace std;

const int mod = 998244353;

int add(int a, int b) {
  a += b;
  return a >= mod ? a - mod : a;
}

int mul(int a, int b) {
  return (int)((long long)a * b % mod);
}

const int N = 300'009;

int f[N];
int a[N];
int b[N];
int o[N];

int main() {
  f[0] = 1;
  for (int i = 1; i < N; ++i) {
    f[i] = mul(f[i - 1], i);
  }
  int n;
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%d%d", a + i, b + i);
    o[i] = i;
  }
  sort(o, o + n, [](int i, int j) {
    return a[i] != a[j] ? a[i] < a[j] : b[i] < b[j];
  });
  int bad = 0;
  {
    int cur = 1;
    int cnt = 1;
    for (int i = 1; i < n; ++i) {
      if (b[o[i]] < b[o[i - 1]]) {
        cur = 0;
        break;
      }
      if (a[o[i]] == a[o[i - 1]] && b[o[i]] == b[o[i - 1]]) {
        ++cnt;
      } else {
        cur = mul(cur, f[cnt]);
        cnt = 1;
      }
    }
    cur = mul(cur, f[cnt]);
    bad = add(bad, mod - cur);
  }
  sort(a, a + n);
  {
    int cur = 1;
    int cnt = 1;
    for (int i = 1; i < n; ++i) {
      if (a[i] == a[i - 1]) {
        ++cnt;
      } else {
        cur = mul(cur, f[cnt]);
        cnt = 1;
      }
    }
    cur = mul(cur, f[cnt]);
    bad = add(bad, cur);
  }
  sort(b, b + n);
  {
    int cur = 1;
    int cnt = 1;
    for (int i = 1; i < n; ++i) {
      if (b[i] == b[i - 1]) {
        ++cnt;
      } else {
        cur = mul(cur, f[cnt]);
        cnt = 1;
      }
    }
    cur = mul(cur, f[cnt]);
    bad = add(bad, cur);
  }
  printf("%d\n", add(f[n], mod - bad));
}
