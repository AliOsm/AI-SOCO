#include<bits/stdc++.h>
#define ll int
#define f first
#define s second
#define pb push_back
using namespace std;
ll n,m,T,fix[300005];
vector<ll>g;
set<pair<ll,ll> > ed;
vector<ll>st[300005];
set<ll>p;
map<ll,ll>mp[300005];
void amoxsna(){
    scanf("%d%d",&n,&m);
    for(int i=1; i<=3*n; i++){
            st[i].clear();
            mp[i].clear();
            fix[i] = 0;
    }
    ed.clear();
    g.clear();
    for(int i=1; i<=m; i++){
        int x,y;
        scanf("%d%d",&x,&y);
        st[x].pb(y);
        st[y].pb(x);
        if(x > y)swap(x,y);
        mp[x][y] = i;
        ed.insert(make_pair(x , y));
        p.insert(i);
    }
    
    while(ed.size()){
        pair<ll ,ll>x = (*ed.begin());
        ed.erase(ed.begin());
        g.pb(mp[x.f][x.s]);
        fix[x.f] = 1;
        fix[x.s] = 1;
        if(g.size() >= n){
            printf("Matching\n");
            for(int i=0; i<g.size(); i++){
                printf("%d ",g[i]);
            }
            printf("\n");
            return;
        }
        for(int it = 0; it < st[x.f].size(); it++){
            int ff = x.f;
            int gg = st[x.f][it];
            if(ff > gg)swap(ff , gg);
            if(ed.find(make_pair(ff , gg)) != ed.end()){
                ed.erase(ed.find(make_pair(ff , gg)));
            }
        }
        x.f = x.s;
        for(int it = 0; it < st[x.f].size(); it++){
            int ff = x.f;
            int gg = st[x.f][it];
            if(ff > gg)swap(ff , gg);
            if(ed.find(make_pair(ff , gg)) != ed.end()){
                ed.erase(ed.find(make_pair(ff , gg)));
            }
        }
    }
    printf("IndSet\n");
    ll kk = n;
    for(int i=1; i<=3*kk; i++){
        if(fix[i] == 1)continue;
        n--;
        printf("%d ",i);
        if(!n)break;
    }
    printf("\n");
    
}
int main(){
    cin >> T;
    
    while(T--)amoxsna();
    
    
    
    
    
    
    return 0;
}
