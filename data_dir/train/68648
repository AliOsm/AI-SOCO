#include <bits/stdc++.h>
 
#define fore(i, l, r) for(int i = int(l); i < int(r); i++)
#define forn(i, n) fore(i, 0, n)
#define nfor(i, n) for(int i = int(n) - 1; i >= 0; --i)
#define for1(i, n) for(int i = 1; i < int(n); ++i)
 
#define mp make_pair
#define pb push_back
#define sz(a) int((a).size())
#define all(a) (a).begin(), (a).end()
#define x first
#define y second
#define correct(x, y, xmax, ymax) ((x) >= 0 && (x) < (xmax) && (y) >= 0 && (y) < (ymax))
 
using namespace std;
 
template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }
template<typename T> inline T sqr(T a){ return a * a; }
template<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }
template<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }
template<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }
 
template<class A, class B> ostream& operator <<(ostream &out, const pair<A, B> &p) {
    return out << "(" << p.x << ", " << p.y << ")";
};
 
template<class A> ostream& operator <<(ostream &out, const vector<A> &v) {
    out << "[";
    forn(i, sz(v)) {
        if(i)
            out << ", ";
        out << v[i];
    }
    return out << "]";
}
 
typedef long long li;
typedef long double ld;
typedef pair<int, int> pt;
typedef vector <int> vi;

const int dx[] = {-1, 0, 1,  0};
const int dy[] = { 0, 1, 0, -1};
const int dxK[] = {-1, -1, 0, 1, 1,  1,  0, -1};
const int dyK[] = { 0,  1, 1, 1, 0, -1, -1, -1};
const int dxKn[] = {-2, -1, 1, 2,  2,  1, -1, -2};
const int dyKn[] = { 1,  2, 2, 1, -1, -2, -2, -1};
 
const int INF = int(1e9) + 100;
const li INF64 = int(1e18) + 100;
const ld EPS = 1e-9;
const ld PI = acosl(-1.0);
 
const int N = 300 * 1000 + 9;
const int LOGN = 20;
 
int n;
int a[44];
int nv[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
int v[] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

inline bool read() {
    if(!(cin >> n ))
        return false;
    forn(i, n)
        cin >> a[i];
    return true;
}

inline void solve() {
    string need = "";
    forn(i, n)
        need += char(a[i]);
    
    string s = "";
    forn(i, 12)
        s += char(v[i]);
    string t = "";
    forn(i, 12)
        t += char(nv[i]);
    
    string ss = t + t + t + t + s + t + t + t + t;
    forn(i, sz(ss))
        if(ss.substr(i, n) == need){
            puts("Yes");
            return;
        }

    puts("No");
}
 
int main() {
#ifdef _DEBUG
    freopen("input.txt", "r", stdin);
    int tt = clock();
#endif
    cout << fixed << setprecision(15);
    cerr << fixed << setprecision(15);
 
    while(read()) {
        solve();
 
#ifdef _DEBUG
        cerr << "TIME = " << clock() - tt << endl;
        tt = clock();
#endif
    }
 
    return 0;
}