#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define ii pair<int,int>
#define vii vector<ii>
#define vvii vector<vii>
#define F first
#define S second
#define forl(i,n) for(int i=0;i<n;i++)
#define fore(i,n) for(int i=1;i<=n;i++)
#define INF 1000000009
#define MOD 1000000007
#define gcd(a,b) __gcd(a,b)
#define all(x)	x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define print(x)	for(auto it=x.begin();it!=x.end();it++)	cout<<*it<<' ';	cout<<endl;
#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL);	cout.tie(NULL);
int dist[1005][1005];
int main()
{
    fastio;
    int n,m,p;
    cin>>n>>m>>p;
    vl s(p+1);
    fore(i,p)   cin>>s[i];
    queue<ii> q[p+1];
    forl(i,1005)
    forl(j,1005)
        dist[i][j]=INF;
    char M[n+5][m+5];
    int free=0;
    forl(i,n)
    forl(j,m)
    {
        cin>>M[i][j];
        if(M[i][j]>='1'&&M[i][j]<='9')
        {
            q[M[i][j]-'0'].push(mp(i,j));
            dist[i][j]=0;
        }
        else if(M[i][j]=='.')   free++;
    }
    ll time=1;
    set<int> ss;
    fore(i,p)
        ss.insert(i);
    int x,y;
    ii temp;
    while(free>0&&!ss.empty())
    {
        for(int i=1;i<=p&&free>0&&!ss.empty();i++)
        {
            if(q[i].empty())
                ss.erase(i);
            ll mx=time*s[i];
            while(!q[i].empty()&&free>0)
            {
                temp=q[i].front();
                if(dist[temp.F][temp.S]>=mx)
                    break;
                q[i].pop();
                x=temp.F;
                y=temp.S;
                //cout<<x<<' '<<y<<endl;
                if(x>0&&M[x-1][y]=='.')
                {
                    dist[x-1][y]=dist[x][y]+1;
                    q[i].push(mp(x-1,y));
                    M[x-1][y]=(char)(i+'0');
                    free--;
                }

                if(x<n-1&&M[x+1][y]=='.')
                {
                    dist[x+1][y]=dist[x][y]+1;
                    q[i].push(mp(x+1,y));
                    M[x+1][y]=(char)(i+'0');
                    free--;
                }

                if(y<m-1&&M[x][y+1]=='.')
                {
                    dist[x][y+1]=dist[x][y]+1;
                    q[i].push(mp(x,y+1));
                    M[x][y+1]=(char)(i+'0');
                    free--;
                }

                if(y>0&&M[x][y-1]=='.')
                {
                    dist[x][y-1]=dist[x][y]+1;
                    q[i].push(mp(x,y-1));
                    M[x][y-1]=(char)(i+'0');
                    free--;
                }
            }
            if(q[i].empty())
                ss.erase(i);
        }
        time++;
    }
    vi ans(p,0);
    forl(i,n)
    forl(j,m)
    {
        if(M[i][j]>='1'&&M[i][j]<='9')
        {
            x=M[i][j]-'1';
            ans[x]++;
        }
    }
    print(ans);
}
