//CONTEST SOURCE
#include <bitset>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <cstdio>
#include <set>
using namespace std;
#define ll long long
#define x first
#define y second
#define pii pair<int, int>
#define pdd pair<double, double>
#define L(s) (int)(s).size()
#define VI vector<int>
#define all(s) (s).begin(), (s).end()
#define pb push_back
#define mp make_pair
#define inf 1000000000
int a[3][111111];
int n;
ll cur_top, cur_mid, cur_bot, prv_top, prv_mid, prv_bot;
set<ll> s[3];
int main() {
  scanf("%d", &n);
  for(int i = 0; i < 3; ++i) {
    for(int j = 0; j < n; ++j) {
      scanf("%d", &a[i][j]);
    }
  }
  cur_top = 0;
  cur_mid = -1LL * inf * inf;
  cur_bot = -1LL * inf * inf;
  prv_top = -1LL * inf * inf;
  prv_mid = -1LL * inf * inf;
  prv_bot = -1LL * inf * inf;
  for(int i = 0; i < n; ++i) {
    ll top = -1LL * inf * inf, mid = -1LL * inf * inf, bot = -1LL * inf * inf;
    top = max(top, cur_top + a[0][i]);
    if (i) top = max(top, prv_bot + a[0][i] + a[1][i] + a[2][i] + a[0][i - 1] + a[1][i - 1] + a[2][i - 1]);
    top = max(top, cur_mid + a[0][i] + a[1][i]);
    top = max(top, cur_bot + a[0][i] + a[1][i] + a[2][i]);
    mid = max(mid, cur_mid + a[1][i]);
    mid = max(mid, cur_top + a[0][i] + a[1][i]);
    mid = max(mid, cur_bot + a[2][i] + a[1][i]);
    bot = max(bot, cur_bot + a[2][i]);
    if (i) bot = max(bot, prv_top + a[0][i] + a[1][i] + a[2][i] + a[0][i - 1] + a[1][i - 1] + a[2][i - 1]);
    bot = max(bot, cur_mid + a[2][i] + a[1][i]);
    bot = max(bot, cur_top + a[0][i] + a[1][i] + a[2][i]);
    prv_top = cur_top;
    prv_mid = cur_mid;
    prv_bot = cur_bot;
    cur_top = top;
    cur_mid = mid;
    cur_bot = bot;
    //cerr << i << " " << cur_top << " " << cur_mid << " " << cur_bot << endl;
  }
  cout << cur_bot << endl;
}
