#include<bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define pb push_back
#define mk make_pair
#define ld long double
#define y1 asdfghjkl
#define ufo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
using namespace std;

mt19937_64 mt_rnd_64(chrono::steady_clock::now().time_since_epoch().count());
long long rnd(long long l, long long r){
    return (mt_rnd_64() % (r-l+1)) + l;
}

const int N = 1e5 + 5;
const int inf = 1e9 + 7;

int n,k,timer;
int st[N];
int fn[N];
int tin[N];
int tout[N];
int p[N][30];
vector<int>g[N];
pair<int,int>ed[N];
map<pair<int,int>,int>mp;

void dfs(int v,int pr)
{
    tin[v] = ++timer;
    p[v][0] = pr;
    for(int i = 1;i <= 20;i++)
        p[v][i] = p[p[v][i-1]][i-1];
    for(int i = 0;i < g[v].size();i++){
        int to = g[v][i];
        if(to == pr)continue;
        dfs(to,v);
    }
    tout[v] = ++timer;
}

bool pred(int x,int y)
{
    return (tin[x] <= tin[y] && tout[x] >= tout[y]);
}

int lca(int x,int y)
{
    if(pred(x,y))return x;
    if(pred(y,x))return y;
    for(int i = 20;i >= 0;i--)
        if(!pred(p[x][i],y))
            x = p[x][i];
    return p[x][0];
}

int dfs1(int v,int pr)
{
    int ans = 0;
    for(int i = 0;i < g[v].size();i++){
        int to = g[v][i];
        if(to != pr)
            ans += dfs1(to,v);
    }
    ans += st[v];
    ans -= fn[v];
    mp[mk(pr,v)] = ans;
    mp[mk(v,pr)] = ans;
    return ans;
}

main()
{
    ufo;
    tin[0] = -inf;
    tin[0] = inf;
    cin>>n;
    for(int i = 0;i < n-1;i++){
        int u,v;
        cin>>u>>v;
        ed[i].ff = u;
        ed[i].ss = v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs(1,1);
    cin>>k;
    for(int i = 0;i < k;i++){
        int u,v,l;
        cin>>u>>v;
        st[u]++;
        st[v]++;
        fn[lca(u,v)]+=2;
    }
    dfs1(1,1);
    for(int i = 0;i < n-1;i++)
        cout<<mp[mk(ed[i].ff,ed[i].ss)]<<' ';
}
