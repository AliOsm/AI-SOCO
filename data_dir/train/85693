#include <iostream>
#include <set>
using namespace std;

set<pair<int, char>> S;
string str;
int n, q;

void cut(int l) {
  auto it = S.upper_bound({l, 'z'});
  it--;
  if (it->first < l) S.insert({l, it->second});
}

int main() {
  cin >> n >> q >> str;
  
  for (int i = 0; i < (int)str.size(); i++)
    S.insert({i+1, str[i]});
  S.insert({n+1, '*'});

  while (q--) {
    int l, r, k;
    cin >> l >> r >> k;

    cut(l);
    cut(r+1);

    auto it = S.lower_bound({l, 'a'});
    int cnt[26]={};
    while (it->first != r+1) {
      auto jt = it; ++jt;
      cnt[it->second - 'a'] += jt->first - it->first;
      S.erase(it);
      it = jt;
    }

    if (k) {
      for (int i = 0; i < 26; l += cnt[i++])
        if (cnt[i])
          S.insert({l, i+'a'});
    } else {
      for (int i = 25; i >= 0; l += cnt[i--])
        if (cnt[i])
          S.insert({l, i+'a'});
    }
  }
  
  string ans;
  for (auto it = S.begin(); it != S.end(); it++) {
    auto jt = it; ++jt;
    if (jt != S.end())
      ans += string(jt->first - it->first, it->second);
  }
  
  cout << ans << endl;
  return 0;
}
