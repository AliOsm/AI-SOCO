#include <ext/rope>
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>
using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long
typedef vector<vector<ll>> mat;

const int N = 1e6  + 5 , mod = 1e9 + 7;
string a , b;
ll f[N] , inv[N] , out;

ll fp(ll n , ll p , ll m)
{
    ll re = 1;
    if(n == 0) return re;
    while(p)
    {
        if(p & 1) re = (re * n) % m;
        p >>= 1;
        n = (n * n) % mod;
    }
    return re;
}

ll solve(string &s)
{
    ll c[26] = {} , re = 0;
    for(auto i : a)
        c[i - 'a']++;

    for(int i = 0 ; i < s.size() ; i++)
    {
        ll sum = 0 , temp = 0 , sum2 = 0;
        for(int j = 0 ; j < 26 ; j++)
            sum += c[j];
        for(int j = 0 ; j < s[i] - 'a' ; j++)
            sum2 += c[j];

        temp = sum2 * f[sum - 1] % mod;
        for(int j = 0 ; j < 26 ; j++)
            temp = temp * inv[c[j]] % mod;

        re = (re + temp) % mod;

        if(!c[s[i] - 'a']) break;
        c[s[i] - 'a']--;
    }

    return re;
}

int main()
{
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    f[0] = inv[0] = 1;
    for(int i = 1 ; i < N ; i++)
        f[i] = (f[i - 1] * (ll)i) % mod,
        inv[i] = fp(f[i] , mod - 2 , mod);

    cin >> a >> b;
    cout << (solve(b) - solve(a) - 1 + mod) % mod;

    return 0;
}
