/* 
chirag11032000
Chirag Thakur
*/

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

template < typename T >
using ordered_set = tree < T, null_type, less < T >, rb_tree_tag, tree_order_statistics_node_update >;

typedef long long ll;
typedef double db;
typedef pair < int, int > pii;
typedef pair < ll, ll > pll;

#ifndef ONLINE_JUDGE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template < typename Arg1 >
void __f(const char* name, Arg1&& arg1) {
    cerr << name << " : " << arg1 << std :: endl;
}
template < typename Arg1, typename... Args >
void __f(const char* names, Arg1&& arg1, Args&&... args) {
    const char* comma = strchr(names + 1, ',');
    cerr.write(names, comma - names) << " : " << arg1 << " | ";
    __f(comma + 1, args...);
}
#else
#define trace(...)
#endif

#define pb push_back
#define fast_io() ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)

const db PI = acos(-1);
const ll MOD = 1e9 + 7, INF = LLONG_MAX;
const ll N = 1e5 + 10;

void test_case();

int main() {
	fast_io();
	test_case();
	cerr << "Time taken: " << int((clock() * 1000.) / CLOCKS_PER_SEC) << "ms\n";
	return 0;
}

void test_case() {
	ll n, l, r, ql, qr;
	cin >> n >> l >> r >> ql >> qr;
	vector < ll > a(n + 1);
	for (ll i = 1; i <= n; ++i) {
		cin >> a[i];
	}
	vector < ll > pref(n + 2);
	for (ll i = 1; i <= n; ++i) {
		pref[i] = pref[i - 1] + a[i];
	}
	vector < ll > suff(n + 2);
	for (ll i = n; i >= 1; --i) {
		suff[i] = suff[i + 1] + a[i];
	}
	ll res = INF;
	for (ll i = 0; i <= n; ++i) {
		ll lft = i;
		ll rght = n - i;
		ll curr = pref[lft] * l + suff[lft + 1] * r;
		trace(pref[lft], suff[lft + 1]);
		if (lft > rght) {
			curr += (lft - rght - 1) * ql;
		} else if (rght > lft) {
			curr += (rght - lft - 1) * qr;
		}
		trace(curr);
		res = min(res, curr);
	}
	cout << res << "\n";
}