#include <bits/stdc++.h>
#include <ctime>
using namespace std;

namespace MyNamespace {
#define space ' '
#define enter "\n"
#define fi first
#define se second
#define INF 2000000007
#define mp make_pair

    typedef long long ll;
    typedef unsigned long long ull;
    typedef pair<int, int> pii;
    typedef set<int> si;
    typedef map<int, int> mii;
    typedef pair<ll, ll> pll;
    typedef vector<int> vi;
    typedef vector<pii> vii;

    template<typename T>
    T sqr (T x) {
        return x * x;
    }

    template<typename T>
    T gcd (T a, T b) {
        return b ? gcd(b, a % b) : a;
    }

    template<class T>
    T chmin (T &x, const T &y) {
        if (y < x)
            return x = y;
        return x;
    }

    template<class T>
    T chmax (T &x, const T &y) {
        if (x < y)
            return x = y;
        return x;
    }


    template<class P, class Q>
    ostream &operator<< (ostream &os, const pair<P, Q> &p) {
        return os << '(' << p.fi << ", " << p.se << ')';
    }


    template<class T>
    ostream &operator<< (ostream &os, const vector<T> &v) {
        os << '{';
        bool was = false;
        for (const T &x : v) {
            if (was)
                os << ", ";
            was = true;
            os << x;
        }
        os << '}';
        return os;
    }

    template<class T>
    ostream &operator<< (ostream &os, const set<T> &v) {
        os << '[';
        bool was = false;
        for (const T &x : v) {
            if (was)
                os << ", ";
            was = true;
            os << x;
        }
        os << ']';
        return os;
    }

    template<class P, class Q>
    ostream &operator<< (ostream &os, const map<P, Q> &m) {
        os << '<';
        bool was = false;
        for (const auto &x : m) {
            if (was)
                os << ", ";
            was = true;
            os << x;
        }
        os << '>';
        return os;
    }
}

using namespace MyNamespace;

int a1, a2;
int ans;
vector <int> a;

int main () {
    ios_base::sync_with_stdio(false);
	cin >> a1 >> a2;
	a.push_back(a2);
	a.push_back(a2);
	a.push_back(a2);
	while (a[0] != a1) {
		int can = a[1] + a[2] - 1;
		a[0] = min(can, a1);
		ans++;
		sort(a.begin(), a.end());
	}
	cout << ans;
}
