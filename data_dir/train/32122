#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector< ii > vii;

#define INF 0x3F3F3F3F
#define LINF 0x3F3F3F3F3F3F3F3FLL
#define pb push_back
#define mp make_pair
#define pq priority_queue
#define LSONE(s) ((s)&(-s)) //LASTBIT
#define DEG_to_RAD(X)   (X * PI / 180)
#define F first
#define S second
#define PI 2*acos(0)
 
#ifdef ONLINE_JUDGE
#define debug(args...)
#else
#define debug(args...) fprintf(stderr,args)
#endif

//////////////////////
int dx[] = {1,-1,0,0};
int dy[] = {0,0,-1,1};	
//////////////////////

const int N = 100010;

int n,m;
vii g[N];
vi prob[N];
vi ml[N];
int dis[N];

int dij()
{
	memset(dis,INF,sizeof dis);
	pq<ii>q; q.push(mp(0,0)); dis[0] = 0;
	while(!q.empty())
	{
		ii foo = q.top(); q.pop();
		int x = foo.S, w = foo.F*-1;
		if( dis[x] != w ) continue;

		int idx = lower_bound(prob[x].begin(),prob[x].end(),w)-prob[x].begin();
		if( idx < prob[x].size() && prob[x][idx] == w ) w = ml[x][idx];

		for(int i=0;i<g[x].size();++i)
		{
			int y = g[x][i].F, c = g[x][i].S;
			int nxt = w+c;
			if( dis[y] > nxt )
			{
				dis[y] = nxt;
				q.push(mp(-dis[y],y));
			}
		}
	}
	return dis[n-1];
}

int main()
{
	//ios::sync_with_stdio(0);
	scanf("%d %d",&n,&m);
	for(int i=0;i<m;++i){
		int a,b,c; scanf("%d %d %d",&a,&b,&c);
		a--;b--;
		g[a].pb(mp(b,c));
		g[b].pb(mp(a,c));
	}

	for(int i=0;i<n;++i){
		int q; scanf("%d",&q);
		while(q--){
			int x; scanf("%d",&x);
			prob[i].pb(x);
			ml[i].pb(0);
		}
		if( prob[i].size() == 0 ) continue;
		int ult = prob[i].size()-1;
		ml[i][ult] = prob[i][ult]+1;
		for(int j=ult-1;j>=0;--j){
			if( prob[i][j]+1 == prob[i][j+1] ) ml[i][j] = ml[i][j+1];
			else ml[i][j] = prob[i][j]+1;
		}
	}
	int ans = dij();
	if( ans == INF ) ans = -1; 
	printf("%d\n",ans);
	return 0;
}