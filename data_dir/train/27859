#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

const int N = 100000;

struct E {
	int i, a, c;
} ee[N];

int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++) {
		ee[i].i = i;
		cin >> ee[i].a;
	}
	sort(ee, ee + n, [] (auto &e, auto &f) { return e.a < f.a; });
	for (int i = 0; i < n; i++) {
		ee[i].c = i;
		ee[i].a = 0;
	}
	sort(ee, ee + n, [] (auto &e, auto &f) { return e.i < f.i; });
	int k = 0;
	vector<vector<int>> cc;
	for (int i = 0; i < n; i++)
		if (ee[i].a == 0) {
			k++;
			vector<int> c;
			for (int j = i; ee[j].a == 0; j = ee[j].c) {
				ee[j].a = 1;
				c.push_back(j);
			}
			cc.push_back(c);
		}
	cout << k << endl;
	for (auto &c : cc) {
		cout << c.size();
		for (int j : c)
			cout << ' ' << j + 1;
		cout << endl;
	}
	return 0;
}
