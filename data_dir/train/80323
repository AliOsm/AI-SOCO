/*
 Anton Gulikov
*/
#pragma comment(linker,"/STACK:300000000")
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <list>
#include <math.h>
#include <string>
#include <stdlib.h>

#define gcd(a,b) __gcd((a),(b))
#define sqr(a) ((a)*(a))
#define odd(a) ((a)&1)
#define foru(i,n) for (int i=0;i<(n);i++)
#define ford(i,n) for (int i=(n)-1;i>=0;i--)
#define forab(i,l,r) for (int i=(l);i<=(r);i++)
#define forabd(i,r,l) for (int i=(r);i>=(l);i--)
#define fillchar(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define F first
#define S second
#define all(x) x.begin,x.end
#define pw2(x) (1ull<<(x))
#define mp make_pair

const long double eps=1e-20;
const long double pi=acos(-1.0);
const long long inf=1000*1000*1000*1000*1000*1000;
const long long base=1000*1000*1000+7;

using namespace std;

int n,m,z,a[111111],x,y;
bool fl;
set <int> g[111111];

int main(){
	ios_base :: sync_with_stdio(false);
	cin>>n>>m;
	foru(i,m){
		cin>>x>>y;
		x; y;
		g[x].insert(y); g[y].insert(x);
	}
	foru(i,n) a[i]=i+1;
	if (n<9){
		do{
			z=0;
			fl=true;
			foru(i,n){
				if (z==m) break;
				if (g[a[i]].find(a[(i+1)%n])!=g[a[i]].end()){
					fl=false;
					break;
				}
				if (!fl) break;
				z++;
			}
			if (fl && z==m){
				z=0;
				foru(i,n){
					if (z==m) return 0;
					cout<<a[i]<<" "<<a[(i+1)%n]<<endl;
					z++;
				}
				return 0;
			}
		} while (next_permutation(a,a+n));
		cout<<"-1";
		return 0;
	}
	foru(test,666){
		random_shuffle(a,a+n);
		z=0;
		fl=true;
		foru(i,n){
			if (z==m) break;
			if (g[a[i]].find(a[(i+1)%n])!=g[a[i]].end()){
				fl=false;
				break;
			}
			if (!fl) break;
			z++;
		}
		if (fl && z==m){
			z=0;
			foru(i,n){
				if (z==m) return 0;
				cout<<a[i]<<" "<<a[(i+1)%n]<<endl;
				z++;
			}
			return 0;
		}
	}
	cout<<"-1";
	return 0;	
}