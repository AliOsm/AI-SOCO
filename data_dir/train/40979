#include<bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef pair<int,int> pii;
typedef vector<int> vec;

#define ones(x) __builtin_popcount(x)
#define onesl(x) __builtin_popcountl(x)
#define onesll(x) __builtin_popcountll(x)

#define pb push_back
#define mp make_pair
#define mt make_tuple
#define scn(n) scanf("%d",&n)
#define scnll(n) scanf("%lld",&n)
#define scn2(n,m) scanf("%d%d",&n,&m)
#define scn3(n,m,w) scanf("%d%d%d",&n,&m,&w)
#define scn2ll(n,m) scanf("%lld%lld",&n,&m)
#define atoz(v) v.begin(),v.end()
#define ratoz(v) v.rbegin(),v.rend()
#define Fill(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define fi first
#define se second
#define inf 1e9
#define pi acos(-1.0)
#define sqr(x) x*x
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define ten(n) (int)1e##n
#define tenll(n) (lli)1e##n
#define N 200004

int cnt[N];
vector<int>g[N];

void dfs(int x , int par = -1){

    cnt[x] = 1;

    for(int u : g[x]){

        if(par == u) continue;
        dfs(u,x);
        cnt[x] += cnt[u];
    }
}


void solve(int x){

    for(int u : g[x]){
        if(cnt[u]%2 == 0) solve(u);
    }

    printf("%d\n",x);

    for(int u : g[x]){
        if(cnt[u]%2) solve(u);
    }
}

int main()
{
    ///freopen("output.txt","w",stdout);
    ///freopen("input.txt","r",stdin);

    int n;
    scn(n);
    int root;

    for(int i=1; i<=n; i++){
        int x;
        scn(x);

        if(x){
            g[x].pb(i);
        }
        else root = i;
    }

    if(n%2 == 0){
        cout<<"NO";
        return 0;
    }

    cout<<"YES\n";

    dfs(root);
    solve(root);

    return 0;
}
