#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
int p[MAXN],ata[MAXN];
bool vis[MAXN];
struct LinkedList{
	int next,prev;
}arr[MAXN];
int tap(int x){
	if(ata[x]==x)
		return x;
	return ata[x]=tap(ata[x]);	
}
bool merge(int x,int y){
	if((x=tap(x))==(y=(tap(y))))
		return 0;
	if(x>y)
		swap(x,y);
	ata[y]=x;	return true;
}
int best=INF,second_best=INF;
void dfs(int nd){
	if(vis[nd])
		return;
	vis[nd]=1;
	if(nd<best){
		if(best<second_best)
			second_best=best;
		best=nd;
	}
	else if(nd<second_best)
		second_best=nd;
	dfs(p[nd]);	
}
void rem(int x){
	arr[arr[x].prev].next=arr[x].next;
	arr[arr[x].next].prev=arr[x].prev;
	arr[x].next=arr[x].prev=x;
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	int n,m;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",p+i),ata[i]=i;
	scanf("%d",&m);	
	int cnt=0;	
	for(int i=1;i<=n;i++)
		cnt+=merge(i,p[i]);
	if(cnt==m){
		puts("0");
		return 0;
	}	
	if(cnt<m){
		printf("%d\n",m-cnt);
		for(int i=1;i<=n;i++)
			if(tap(i)!=1 and cnt<m)
				printf("1 %d ",tap(i)),cnt+=merge(i,1);
		puts("");
		return 0;
	}
	printf("%d\n",cnt-m);
	while(cnt>m){
		memset(vis,0,sizeof vis);
		for(int i=1;i<=n;i++){
			if(p[i]==i)
				continue;
			best=INF,second_best=INF;	
			dfs(i);
			printf("%d %d ",best,second_best);
			swap(p[best],p[second_best]);
			break;
		}
		cnt--;
	}
	puts("");
	return 0;
}
