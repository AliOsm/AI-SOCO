#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

using namespace std;
char a[60][60];
int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};
int n,m;
int was[60][60];
int doit(int x, int y)
{
	int res=0;
	FOR(i,0,4)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		if ((nx>=0) && (nx<n) && (ny>=0) && (ny<m) && (a[nx][ny]=='#'))
			res++;
	}
	return res;
}
void dfs(int x, int y)
{
	if (was[x][y])
		return;
	was[x][y]=1;
	FOR(i,0,4)
	{
		int nx=x+dx[i];
		int ny=y+dy[i];
		if ((nx>=0) && (nx<n) && (ny>=0) && (ny<m) && (a[nx][ny]=='#'))
			dfs(nx,ny);
	}
}
int main()
{
#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
#endif
	scanf("%d%d",&n,&m);
	FOR(i,0,n)
		scanf("%s",&a[i]);
	int cnt=0;
	FOR(i,0,n)
		FOR(j,0,m)
		if (a[i][j]=='#')
			cnt++;
	if (cnt<3)
	{
		cout<<-1<<endl;
		return 0;
	}
	FOR(i,0,n)
		FOR(j,0,m)
			if (a[i][j]=='#')
			{
				a[i][j]='.';
				MEMS(was,0);
				bool f=false;
				FOR(i1,0,n)
				{
					if (f)
						break;
					FOR(j1,0,m)
						if (a[i1][j1]=='#')
						{
							dfs(i1,j1);
							f=true;
							break;
						}
				}
				FOR(i1,0,n)
					FOR(j1,0,m)
						if ((a[i1][j1]=='#') && (was[i1][j1]==0))
						{
							cout<<1<<endl;
							return 0;
						}
				a[i][j]='#';
			}
	cout<<2<<endl;
	return 0;
}