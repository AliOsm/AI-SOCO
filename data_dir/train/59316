#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

int V,E,Q;
int a[100010],b[100010];
int q1[100010],q2[100010];
int ans[100010];

int p[100010];
int rank[100010];

int root(int x){
    if(p[x] != x) p[x] = root(p[x]);
    return p[x];
}

void connect(int x, int y){
    int rx=root(x),ry=root(y);
    if(rx == ry) return;
    if(rank[rx] > rank[ry]) {p[ry] = rx; rank[rx] += rank[ry];}
    if(rank[rx] <= rank[ry]) {p[rx] = ry; rank[ry] += rank[rx];}
}

int main(void){
    int i,j;
    
    scanf("%d%d",&V,&E);
    REP(i,E){
        scanf("%d%d",&a[i],&b[i]);
        a[i]--; b[i]--;
    }
    scanf("%d",&Q);
    REP(i,Q){
        scanf("%d%d",&q1[i],&q2[i]);
        q1[i]--; q2[i]--;
    }
    
    REP(i,E){
        REP(j,V) p[j] = j;
        REP(j,V) rank[j] = 1;
        
        REP(j,E) if(j != i) connect(a[j],b[j]);
        REP(j,Q) if(root(q1[j]) != root(q2[j])) ans[j]++;
    }
    
    REP(i,Q) printf("%d\n",ans[i]);
    
    return 0;
}
