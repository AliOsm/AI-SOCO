#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
#define F first
#define S second

struct from { int a, b; char c; };
bool dp[1005][2005];
from f[1005][2005];

void print(int i, int j)
{
	if (i == 0) return;
	print(f[i][j].a, f[i][j].b);
	cout << f[i][j].c;
}

int main()
{
	ios_base::sync_with_stdio(0), cin.tie(0);

	int n, k;
	string s;
	cin >> n >> k >> s;

	dp[0][1002] = true;
	for (int i = 0; i < n; ++i)
		for (int j = 1; j < 2005; ++j)
			if (dp[i][j])
			{
				string t = "WLD";
				if (s[i] != '?') t = s[i];

				for (auto c : t)
				{
					if (c == 'W' && (abs(j-1002+1) != k || i == n-1))
					{
						dp[i+1][j+1] = true;
						f[i+1][j+1] = {i, j, c};
					}
					if (c == 'L' && (abs(j-1002-1) != k || i == n-1))
					{
						dp[i+1][j-1] = true;
						f[i+1][j-1] = {i, j, c};
					}
					if (c == 'D' && (abs(j-1002) != k || i == n-1))
					{
						dp[i+1][j] = true;
						f[i+1][j] = {i, j, c};
					}
				}
			}

	if (dp[n][1002+k])
		print(n, 1002+k);
	else if (dp[n][1002-k])
		print(n, 1002-k);
	else
		cout << "NO\n";

	return 0;
}
