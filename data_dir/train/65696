# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) (x&1)
typedef long long ll;
typedef long double ld;
const ll oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const int _cnt = 1000 * 1000;
const int _p = 1000 * 1000 * 1000 + 7;
ll o(ll x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
//ll gcd(ll a, ll b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }
using namespace std;

void file_put() {
	freopen("filename.in", "r", stdin);
	freopen("filename.out", "w", stdout);
}

int n, x, cnt = 0;
multiset <int> S, ans;

int main() {
	//file_put();

	scanf("%d", &n);
	for (int i = 1; i <= n*n; i++) {
		scanf("%d", &x);
		S.insert(x);
	}
	for (int i = 1; i <= n; i++) {
		x = *(--S.end());
		S.erase(S.find(x));
		for (auto it = ans.begin(); it != ans.end(); it++) {
			S.erase(S.find(gcd(x, (*it))));
			S.erase(S.find(gcd(x, (*it))));
		}
		ans.insert(x);
	}
	for (auto x : ans) printf("%d ", x);
	printf("\n");

	return 0;
}
