#include "bits/stdc++.h"
using namespace std;
int A[105] , B[10005] , C[105];
vector<int> V;

bool IsNotPossible( int N , int k ){
    int i , Count = 0;

    for( i = 1 ; i <= N ; ++i ){
        Count += C[i];
        if( C[i] == 1 ) V.emplace_back( i );
    }
    
    if( Count > k ) return true;
    else{ 
        while( int(V.size()) < k ){
            V.emplace_back( V[0] );
        }

        return false;
    }
}

int FindBeautifulArray( int N , int k ){
    int i = 1 , j = 0 , p = 1;

    while( i <= N ){
        if( A[i] == V[j] ) ++i;
        B[p++] = V[j++];
        if( j == int(V.size()) ) j = 0;
    }

    return p - 1;
}

int main(){
    int T , N , m , k , i;
    scanf( "%d" , &T );

    while( T-- ){
        scanf( "%d%d" , &N , &k );
        fill( C + 1 , C + N + 1 , 0 );
        V.clear();

        for( i = 1 ; i <= N ; ++i ){
            scanf( "%d" , A + i );
            C[A[i]] = 1;
        }

        if( IsNotPossible( N , k ) ) puts( "-1" );
        else{
            m = FindBeautifulArray( N , k );
            printf( "%d\n" , m );

            for( i = 1 ; i <= m ; ++i )
                printf( "%d " , B[i] );
            
            puts( "" );
        }
    }

    return 0;
}