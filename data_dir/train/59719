//ITNOA
#include<bits/stdc++.h> 

using namespace std;
 
#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second
 
typedef long long ll;
typedef long double ld;

const int maxN = 1000*1000 + 5;
//const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 500;


int m,mod;
ll t;
int c[22][22];

struct Mat
{
    int a[22];
    Mat(){
	memset(a,0,sizeof a);
    }       
};
Mat operator *(const Mat &p, const Mat &q)
{
    Mat ans;
    rep(i,0,m+1) rep(j,0,i+1) rep(k,0,(m-i)+1)
    {
	int tmp = (1LL) * p.a[i] * q.a[(i-j) + k] % mod;
	tmp = (1LL) * tmp * ((1LL) * c[j+k][j] * c[m - (j+k)][i-j] % mod) % mod;
	ans.a[j+k] = (ans.a[j+k] + tmp) % mod;
    }
    return ans;
}
Mat power(Mat p, ll k)
{
    Mat ans;
    ans.a[0] = 1;
    while(k)
    {
	if(k & 1) ans = ans * p;
	k >>= 1; p = p * p;
    }
    return ans;
}

Mat p;
int e[1<<20], b[22];
int dp[21][1<<20];

int32_t main()
{
//    ios::sync_with_stdio(0); cin.tie(0);
    rep(i,0,22) c[i][0] = 1;
    rep(i,1,22) rep(j,1,22)
	c[i][j] = c[i-1][j] + c[i-1][j-1];

    scanf("%d%I64d%d", &m, &t, &mod);
    rep(i,0,(1<<m))
	scanf("%d", &e[i]);
    rep(i,0,m+1)
	scanf("%d", &b[i]);

    rep(i,0,m+1)
	p.a[i] = b[i];

    Mat ans = power(p, t);
    rep(i,0,m+1)
	b[i] = ans.a[i];

    
    rep(i,0,(1<<m))
	dp[0][i] = e[i] % mod;
    
    rep(p,0,m)
	for(int i = m-1; i >= 0; i --)
	    rep(mask,0,(1<<m))
		dp[i+1][mask ^ (1<<p)] = (dp[i+1][mask ^ (1<<p)] + dp[i][mask]) % mod;
    
    rep(mask,0,(1<<m))
    {
	int res = 0;
	rep(i,0,m+1)
	{
	    res += (1LL) * dp[i][mask] * b[i] % mod;
	    res %= mod;
	}
	printf("%d\n", res);
    }    
    return 0;
}
