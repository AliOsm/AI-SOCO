
#include <cstdlib>
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

const int maxn = 300;
bool used[maxn + 12] = {0};
int matrix[maxn + 12][maxn + 12] = {0};
int n;
int sz;
int ind[maxn + 12];
int val[maxn + 12];

void dfs(int node) {
 used[node] = true;
 ind[sz++] = node;
 for (int i = 0; i < n; ++i) {
  if (matrix[node][i] && !used[i]) {
   dfs(i);
  }
 }
}

int main () {

 cin >> n;

 int p[maxn + 12];
 for (int i = 0; i < n; ++i) {
  cin >> p[i];
 }
 
 string s;
 for (int i = 0; i < n; ++i) {
  cin >> ws >> s;
  for (int j =0 ; j < n; ++j ){
   if (s[j] == '1') {
    matrix[i][j] = 1;
   }
  }
 }
  
 for (int i = 0; i < n; ++i) {
  if (!used[i]) {
   sz = 0;
   dfs(i);
   sort(ind, ind+sz);
   for (int j = 0; j < sz; ++j) {
    val[j] = p[ind[j]];
   }
   sort(val, val + sz);
   for (int j = 0; j < sz; ++j) {
    p[ind[j]] = val[j];
   }
  }
 } 
 
 for (int i = 0; i < n; ++i) {
  cout << p[i] << " ";
 }

 return 0;
}