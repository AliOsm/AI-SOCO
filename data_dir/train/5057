#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define vi vector<int>
#define vl vector<ll>
#define vp vector<pi>
#define vpl vector<pl>
#define pb push_back
#define INF 1000000005
#define LINF 1000000000000000005
#ifdef LOCAL_DEFINE
    mt19937 rng(69);
#else
    seed_seq seq{
        (uint64_t) chrono::duration_cast<chrono::nanoseconds>(chrono::high_resolution_clock::now().time_since_epoch()).count(),
        //(uint64_t) __builtin_ia32_rdtsc(),
        //(uint64_t) (uintptr_t) make_unique<char>().get()
    };
    mt19937 rng(seq);
#endif

int n,p[100005],x[100005],y[100005],z[100005],a,b,s[100005],m;

vp g[100005];

ll ans;

void DFS(int nod, int par){
    p[nod]=par;
    s[nod]=1;
    for(pi i : g[nod]){
        if(i.x!=par){
            DFS(i.x,nod);
            ans+=(ll)i.y*s[i.x]*(n-s[i.x]);
            s[nod]+=s[i.x];
        }
    }
}

int32_t main(){
#ifdef LOCAL_DEFINE
    ifstream cin("input.in");
#endif
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    cout << fixed << setprecision(8);
    cin >> n;
    for(int i=1;i<n;i++){
        cin >> x[i] >> y[i] >> z[i];
        g[x[i]].pb({y[i],z[i]});
        g[y[i]].pb({x[i],z[i]});
    }
    DFS(1,-1);
    cin >> m;
    for(int i=1;i<=m;i++){
        cin >> a >> b;
        ll d=z[a]-b;
        z[a]=b;
        if(p[y[a]]==x[a]){
            ans-=d*s[y[a]]*(n-s[y[a]]);
        }
        else{
            ans-=d*s[x[a]]*(n-s[x[a]]);
        }
        cout << 3.0*ans/(1.0*n*(n-1)/2.0) << '\n';
    }
}
