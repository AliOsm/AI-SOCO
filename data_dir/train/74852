#pragma comment (linker, "/STACK:256000000")
 
#define _USE_MATH_DEFINES
#define _CRT_NO_DEPRECEATE
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <iomanip>
#include <fstream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <cstring>
#include <vector>
#include <utility>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <memory.h>
#include <sstream>
#include <cassert>
#include <ctime>
#include <complex>
#include <unordered_set>
//#include <random>
 
using namespace std;
 
typedef unsigned int uint32;
typedef long long int64;
typedef unsigned long long uint64;
typedef double ldouble;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;
typedef pair<pii, pii> piiii;
 
#define pb push_back
#define sq(x) ((x)*(x))
#define tmin(x,y,z) (min(min((x),(y)),(z)))
#define rand32() (((unsigned int)(rand()) << 16) | (unsigned int)(rand()))
#define rand64() (((unsigned int64)(rand32()) << 16) | (unsigned int64)(rand32()))
#define bit(mask, b) ((mask >> b) & 1)
#define biton(mask, bit) (mask | (((uint64)(1)) << bit))
#define bitoff(mask, bit) (mask & (~(((uint64)(1)) << bit)))
#define bitputon(mask, bit) (mask |= (((uint64)(1)) << bit))
#define bitputoff(mask, bit) (mask &= (~(((uint64)(1)) << bit)))
#define FAIL() (*((int*)(0)))++
#define INF ((int)(1e9) + 1337)
#define LINF ((int64)(1e18))
#define EPS (1e-7)
#define PI (3.1415926535897932384626433832795)
#define y1 yy1
#define y0 yy0
#define j0 jj0

//#define HMOD (1000000000000000003LL)
//#ifdef _MY_DEBUG
//#define HMOD 1000000007
//#endif
//#define HBASE 524287
const int MAXN = 1000000;
const int LN = 30;
//mt19937 ggen;
int n, m, k;

int en = 1;
int trie[MAXN * LN][2];
int val[MAXN * LN];
int mas[MAXN];

inline void add(int x)
{
	int cur = 0;
	for(int i = LN - 1; i >= 0; --i)
	{
		int q = ((1 << i) & x) > 0;
		if (trie[cur][q])
			cur = trie[cur][q];
		else
			cur = trie[cur][q] = en++;
		val[cur]++;
	}
}

int64 ans(int x)
{
	int64 res = 0;
	int cur = 0;
	for(int i = LN - 1; i >= 0; --i)
	{
		int kq = ((1 << i) & k) > 0;
		int xq = ((1 << i) & x) > 0;
		if (kq == 0)
		{
			res += val[trie[cur][!xq]];
		}
		
		if (!trie[cur][xq ^ kq])
			return res;
		cur = trie[cur][xq ^ kq];
	}
	res += val[cur];
	return res;
}

void solve()
{
	scanf("%d %d", &n, &k);
	for(int i = 0; i < n; ++i)
	{
		scanf("%d", &mas[i]);
	}
	add(0);
	int xo = 0;
	int64 an = 0;
	for(int i = 0; i < n; ++i)
	{
		xo ^= mas[i];
		an += ans(xo);
		add(xo);
	}
	cout << an;
}

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0);
#ifdef _MY_DEBUG
    freopen("input.txt", "rt", stdin); freopen("output.txt", "wt", stdout);
#else
    //freopen(TASK ".in", "rt", stdin); freopen(TASK ".out", "wt", stdout);
#endif
    srand(1313);
	solve();
    return 0;
}