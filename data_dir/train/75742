#include<stdio.h>
#include<iostream>
#include<string.h>
#include<string>
#include<ctype.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<time.h>
using namespace std;
void fre() { freopen("c://test//input.in", "r", stdin); freopen("c://test//output.out", "w", stdout); }
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
#define MP(x,y) make_pair(x,y)
#define ls o<<1
#define rs o<<1|1
typedef long long LL;
typedef unsigned long long UL;
typedef unsigned int UI;
template <class T1, class T2>inline void gmax(T1 &a, T2 b) { if (b>a)a = b; }
template <class T1, class T2>inline void gmin(T1 &a, T2 b) { if (b<a)a = b; }
const int N = 105, M = 0, Z = 1e9 + 7, ms63 = 0x3f3f3f3f;
char a[N], b[N];
int f[N][N];
int cnta[128], cntb[128];
int main()
{
	while (~scanf("%s%s", a + 1, b + 1))
	{
		int n = strlen(a + 1);
		int m = strlen(b + 1);
		for (int i = 1; i <= n; ++i)
		{
			for (int j = 1; j <= m; ++j)
			{
				f[i][j] = max(f[i - 1][j], f[i][j - 1]);
				if (a[i] == b[j])f[i][j] = f[i - 1][j - 1] + 1;
			}
		}
		MS(cnta, 0);
		MS(cntb, 0);
		for (int i = 1; i <= n; ++i)++cnta[a[i]];
		for (int i = 1; i <= m; ++i)++cntb[b[i]];

		int flag = 1;
		for (int i = 'a'; i <= 'z'; ++i)
		{
			if (flag == -1)continue;
			if (cnta[i] < cntb[i])flag = -1;
			if (cnta[i] > cntb[i])flag = 0;
		}

		if (f[n][m] == m)puts("automaton");
		else if (flag == 1)puts("array");
		else if (flag == -1)puts("need tree");
		else puts("both");
	}
	return 0;
}
/*
【trick&&吐槽】


【题意】


【类型】


【分析】


【时间复杂度&&优化】


【数据】


*/