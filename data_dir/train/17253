#include<bits/stdc++.h>
using namespace std;

#define sc( x ) scanf( "%d" , &x )
#define REP( i , n ) for( int i = 0 ; i < n ; ++i )
#define clr( t , val ) memset( t , val , sizeof( t ) )

#define pb push_back
#define all( v ) v.begin() , v.end()
#define SZ( v ) ((int)(v).size())

#define mp make_pair
#define fi first
#define se second

#define N 100000
#define ALP 26

typedef pair< int , int > pii;
typedef long long ll;
typedef vector< int > vi; 

int next[ N + 5 ][ ALP + 1 ] , term[ N + 5 ];
int nodes ;
void reset(){
    nodes = 1;
    clr( next , -1 );
}
void add( string &s ){
    int p = 0;
    REP( i , SZ( s ) ){
        int c = s[ i ] - 'a' , v = next[ p ][ c ];
        if( v == -1 ) p = next[ p ][ c ] = nodes ++;
        else p = v;
    }
    term[ p ] = 1;
}
bool used1[ N + 5 ];
int memo1[ N + 5 ];
int win( int u ){
    if( used1[ u ] ) return memo1[ u ];
    used1[ u ] = 1;
    int &dev = memo1[ u ] = 0;
    REP( c , ALP ){
        int v = next[ u ][ c ];
        if( v == -1 ) continue;
        if( !win( v ) ){
            dev = 1;
            break;
        }
    }
    return dev;
}
bool used2[ N + 5 ];
int memo2[ N + 5 ];
int lose( int u ){
    
    if( used2[ u ] ) return memo2[ u ];
    used2[ u ] = 1;
    int &dev = memo2[ u ] = 0;
    int cnt = 0;
    REP( c , ALP ){
        int v = next[ u ][ c ];
        if( v == -1 ) continue;
        cnt = 1;
        if( !lose( v ) ){
            dev = 1;
            break;
        }
    }
    if( !cnt ) dev = 1;
    return dev;
}
int main(){
    ios_base :: sync_with_stdio( 0 );
    int n , k;
    while( cin >> n >> k ){
        reset();
        REP( i , n ){
            string s;
            cin >> s ;
            add( s );
        }
        clr( used1 , 0 ) , clr( used2 , 0 );
        if( !win( 0 ) ) {
            cout << "Second\n" ;
            continue;
        }
        if( lose( 0 ) ){
            cout << "First\n";
            continue;
        }
        cout << ( (k&1) ? "First" : "Second" ) << '\n';
    }
}