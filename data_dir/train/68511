#include <stdio.h>        
#include <string.h>        
#include <ctype.h>        
#include <stdlib.h>      
#include <queue> 
using namespace std; 
 
 
int n, m, x, y, k; 
bool a[110][110]; 
 
bool u[110], b[110]; 
 
void cln() { 
	for (int j = 0; j < 110; j++)  
		u[j] = 0; 
} 
 
bool dfs(int x, int c, int p) { 
	u[c] = true; 
	for (int i = 0; i < n; i++)  
		if (a[c][i]) { 
			if (i == x && p != x) 
				return true; 
			if (u[i]) 
				continue; 
			if (dfs(x, i, c))
				return true;
		} 
		return false; 
} 
 
bool bfs() { 
	cln(); 
	queue<int> q; 
	q.push(0); 
	u[0] = 1; 
	while (!q.empty()) { 
		int v = q.front(); 
		q.pop(); 
		for (int i = 0; i < n; ++i) { 
			if (a[v][i]) { 
				if (!u[i]) { 
					u[i] = true; 
					q.push(i); 
				} 
			} 
		} 
	} 
	bool t = 1; 
	for (int i = 0; i < n; i++) 
		t = t && u[i]; 
	return t; 
} 
 
 
int main() {     
	//freopen("input.txt", "r", stdin);      
	//freopen("output.txt", "w", stdout);   
	scanf("%d %d", &n, &m); 
	for (int i = 0; i < m ; i++) { 
		scanf("%d %d", &x, &y); 
		a[x - 1][y - 1] = a[y - 1][x - 1] = 1; 
	} 
	if (!bfs()) { 
		printf("NO"); 
		return 0; 
	} 
	for (int i = 0; i < n; i++) { 
		cln(); 
		if (dfs(i, i, -1)) { 
			b[i] = 1; 
			k++; 
		} 
	} 
	if (!k) { 
		printf("NO"); 
		return 0; 
	} 
	cln(); 
	int pp; 
	for (pp = 0; !b[pp]; pp++); 
	dfs(pp, pp, -1); 
	for (int i = 0; i < n; i++) 
		if (b[i]) 
			if (!u[i]) { 
				printf("NO"); 
				return 0; 
			} 
	printf("FHTAGN!"); 
	return 0; 
}