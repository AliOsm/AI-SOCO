#include <bits/stdc++.h>
using namespace std;
#define SZ(x) ((int)(x).size())
const int INF = 1<<30;
const int N = 500 + 5;

int dp1[N][N], dp2[N][N];

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	int n, m, k; cin >> n >> m >> k;
	for(int i=1;i<=n;i++){
		vector<int> able;
		string ss; cin >> ss;
		for(int j=0;j<m;j++){
			if(ss[j]=='1') able.push_back(j);
		}
		// 上j堂，最少要待多久
		dp2[i][0] = 0;
		for(int j=1;j<=SZ(able);j++){
			dp2[i][j] = INF;
			for(int t=0;t<=SZ(able)-j;t++){
				dp2[i][j] = min(dp2[i][j], able[t+j-1]-able[t]+1);
			}
		}
		// 翹j堂，最少還要待多久
		for(int j=0;j<=k;j++) dp1[i][j] = INF;
		for(int a=0;a<=k;a++) for(int b=0;b<=SZ(able);b++){
			if(a+b > k) break;
			dp1[i][a+b] = min(dp1[i][a+b], dp1[i-1][a]+dp2[i][SZ(able)-b]);
		}
	}
	cout << dp1[n][k] << '\n';
	return 0;
}