#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

#define INF (1<<29)
#define _abs(x) ((x)>0?(x):-(x))

int K,score[110][110];
int ansx,ansyl,ansyr,ans;
int low[110],high[110];

void check(int x, int yl, int yr){
    int sum=0,i;
    
    if(x < 0 || x >= K || yl < 0 || yr > K) return;
    for(i=yl;i<yr;i++) sum += score[x][i];
    
    if(sum < ans){
        ans = sum;
        ansx = x; ansyl = yl; ansyr = yr;
    }
}

int main(void){
    int N,i,j,x;
    
    scanf("%d%d",&N,&K);
    
    int mid = K / 2;
    REP(i,K) REP(j,K) score[i][j] = _abs(i-mid) + _abs(j-mid);
    
    REP(i,K) low[i] = K;
    
    REP(i,N){
        scanf("%d",&x);
        ansx = ansyl = ansyr = -1; ans = INF;
        
        REP(j,K){
            if(low[j] == K){
                int tmp = (K - x) / 2;
                check(j,tmp,tmp+x);
            } else {
                check(j,low[j]-x,low[j]);
                check(j,high[j],high[j]+x);
            }
        }
        
        if(ansx == -1){
            printf("-1\n");
        } else {
            printf("%d %d %d\n",ansx+1,ansyl+1,ansyr);
            low[ansx] = min(low[ansx],ansyl);
            high[ansx] = max(high[ansx],ansyr);
        }
    }
    
    return 0;
}
