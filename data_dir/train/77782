#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define rand() (rand() << 15 | rand())
using namespace std;
//using namespace __gnu_pbds;

//template<typename T>
//using ordered_set =
//tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long  ll;
#define EPS 1e-9
#define PI acos(-1.0)

void solve() {
   int n , k;
   cin >> n >> k;
   vector<int> cnt(k + 1 , 0) , lim(k + 2 , 0);
   vector<int> a(n);
   for(int i = 0 ; i < n ; ++i){
      cin >> a[i];
      cnt[a[i]]++;
   }

   for(int i = 1 ; i <= k ; ++i){
      cin >> lim[i];
   }

   vector<vector<int>> rs;
   int lst = 0 , p = 0;
   for(int i = k ; i > 0 ; --i){
      if(!cnt[i])continue;
      int diff = lim[i] - lst , j = 0;
      if(!diff)
         j = (rs.empty() ? 0 : p);
      int rm = cnt[i];
      while(rm){
         if(j == rs.size())rs.push_back({});
         while(rm > 0 && rs[j].size() < lim[i])rs[j].pb(i) , rm-- , p = j;
         ++j;
      }
      lst = lim[i];
   }
   cout << rs.size() << "\n";
   for(auto &v : rs){
      cout << v.size();
      for(int &x : v)
         cout << " " << x;
      cout << '\n';
   }
}
int main() {
#ifndef ONLINE_JUDGE
   freopen("input.txt", "r", stdin);
#endif
   ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
   int t = 1;
//   cin >> t;
   while(t--){
      solve();
   }
}