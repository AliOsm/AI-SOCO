//bismillahir rahmanir rahim            //Author:Fayed Anik
 
#include <bits/stdc++.h> 
 
using namespace std;
 
 
#define         ll                         long  long
#define         lf                         double 
#define         pb(x)                      push_back(x)
#define         ull                        unsigned long long
#define         sfl(a)                     scanf("%lld",&a)
#define         sf(a)                      scanf("%d",&a)
#define         pf(a)                      printf("%d\n",a)
#define         pfl(a)                     printf("%lld\n",a)
#define         pdl(a)                     printf("%llf\n",a)
#define         FOR(x,n)                   for(ll x=1;x<=n;++x)
#define         vii                        vector< ll > v
#define         pi                         3.14159265359
#define         mex                        10000000
#define         pii                        pair< ll , ll >
#define         mem(m,a)                   memset( m, a,sizeof m)
#define         mp(a,b)                    make_pair(a,b)
#define         maxn                       100000
#define         mod                        1000000007
#define         INF                        1e17
#define         f1                         first
#define         f2                         second
#define         all(v)                     v.begin(),v.end()
#define         PI                         acos(-1)
#define         printminusone              printf("-1\n")
#define         bug                        printf("bug")
#define         FILEIN                     freopen("in.txt","r",stdin)
#define         FILEOUT                    freopen("out.txt","w",stdout)

#define lim 200005

ll n,s;
pii P[lim];

bool comp(pii x , pii y){
    if(x.f1==y.f1){
        return P[x.f2].f1 < P[y.f2].f1;
    }
    else{
        return x.f1 < y.f1;
    }
}

ll ok(ll median){
    ll sum=s;
    vector<pii>tmp;
    for(ll i=1;i<=n;i++){
        if(P[i].f2<median){
            tmp.pb(mp(P[i].f1,i));
            sum -= P[i].f1;
        }
        else if(P[i].f1>median){
            tmp.pb(mp(P[i].f1,i));
            sum -= P[i].f1;
        }
        else{
            tmp.pb(mp(median,i));
            sum -= median;
        }
    }
    sort(all(tmp),comp);
    ll mid=n/2;
    if(median>tmp[mid].f1){
        return 1;
    }
    else  if(median < tmp[mid].f1){
        return 2;
    }
    else{
        
        ll mn;
        for(ll i=mid-1;i>=0;i--){
            if(P[tmp[i].f2].f2 >= median){
                sum += tmp[i].f1;
                sum -= P[tmp[i].f2].f1;
            }
        }
        
        if(sum>=0){
            return 3;
        }
        else{
            return 4;
        }
    }
    
}
int main(){
    ll tc;
    sfl(tc);
    FOR(cs,tc){
        sfl(n),sfl(s);
        FOR(i,n){
            sfl(P[i].f1),sfl(P[i].f2);
        }
        ll lw=1,hi=s,ans=0,mid,t;
        while(lw<=hi){
            mid=(lw+hi)>>1;
            t=ok(mid);
            if( t==1 ){
                hi=mid-1;
            }
            else if( t== 2 ){
                lw=mid+1;
            }
            else if( t== 3 ){
                ans=mid;
                lw=mid+1;
            }
            else{
                hi=mid-1;
            }
        }
        pfl(ans);
    }
    return 0;
}

