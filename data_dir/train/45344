#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define x first
#define y second
#define ndl '\n'
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define up_b upper_bound
#define low_b lower_bound
#define sz(x) (int)x.size()
#define bit __builtin_popcount
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()

using namespace std;
using namespace __gnu_pbds;

template<typename T> using indexed_set = tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;
typedef pair<int, ll> pil;
typedef pair<ll, int> pli;
typedef pair<int, ull> piu;
typedef vector<vector<int>> matrix;

const ll INF = 1e18 + 123;
const ld EPS = 1e-9;
const int inf = 1e9 + 123;
const int MOD = 1e9 + 7;
const int N = 1023;
const int M = 1e6 + 123;
const double pi = acos(-1.0);
const int dx[] = {0, 0, 1, -1};
const int dy[] = {1, -1, 0, 0};

int n, m;
char c[N][N];

bool used[N][N];

void dfs(int x, int y){
    used[x][y] = 1;
    for (int i = 0; i < 4; i++){
        int nx = x + dx[i];
        int ny = y + dy[i];
        if (!used[nx][ny] && c[nx][ny] == '#'){
            dfs(nx, ny);
        }
    }
}

void solve(){
    cin >> n >> m;
    for (int i = 1; i <= n; i++){
        for (int j = 1; j <= m; j++){
            cin >> c[i][j];
        }
    }
    int ans = 0;
    for (int i = 1; i <= n; i++){
        for (int j = 1; j <= m; j++){
            if (!used[i][j] && c[i][j] == '#'){
                dfs(i, j);
                ans++;
            }
        }
    }
    bool fr = 0, fc = 0;
    for (int i = 1; i <= n; i++){
        int l = -1;
        for (int j = 1; j <= m; j++){
            if (c[i][j] == '#'){
                l = j;
                break;
            }
        }
        if (l == -1){
            fr = 1;
            continue;
        }
        bool was = 0;
        for (int j = m; j >= l; j--){
            if (c[i][j] == '#'){
                was = 1;
            }
            else if (was){
                ans = -1;
                break;
            }
        }
    }
    for (int j = 1; j <= m; j++){
        int l = -1;
        for (int i = 1; i <= n; i++){
            if (c[i][j] == '#'){
                l = i;
                break;
            }
        }
        if (l == -1){
            fc = 1;
            continue;
        }
        bool was = 0;
        for (int i = n; i >= l; i--){
            if (c[i][j] == '#'){
                was = 1;
            }
            else if (was){
                ans = -1;
                break;
            }
        }
    }
    if (fc != fr){
        ans = -1;
    }
    cout << ans;
}

int main(){
    #ifdef KAZAKH
        freopen("input.txt", "r", stdin);
    #endif
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t = 1;
    //cin >> t;
    for (int i = 1; i <= t; i++){
        //cout << "case #" << i << ": ";
        solve();
    }
    return 0;
}
