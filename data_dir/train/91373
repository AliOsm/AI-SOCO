#include<bits/stdc++.h>
#define IOS ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define ll long long
#define INF 2000000000

using namespace std;

int main()
{
    IOS;
    #ifndef ONLINE_JUDGE
    	freopen("input.txt", "r", stdin);
    	freopen("output.txt", "w", stdout);
    #endif
    ll u,v;
    cin >> u >> v;
    vector<ll>ans;
    int carry = 0;
    map<ll,ll>ct;
    for(int i = 0; i <= 60; i++)
    {
    	ll x = (u&(1LL<<i));
    	ll y = (v&(1LL<<i));
    	if(!carry)
    	{
    		if(!x && !y)
    			continue;
    		else if(!x && y)
    		{
    			if(i == 0)
    			{
    				cout << -1;
    				return 0;
    			}
    			ans.push_back((1LL<<(i-1)));
    			ans.push_back((1LL<<(i-1)));
    		}
    		else if(x && !y)
    		{

    			if(i == 0)
    			{
    				cout << -1;
    				return 0;
    			}
    			ans.push_back((1LL<<(i-1)));
    			ans.push_back((1LL<<(i-1)));
    			ans.push_back((1LL<<i));
    			carry = 1;
    		}
    		else
    		{
    			ans.push_back(1LL<<i);
    		}
    	}
    	else
    	{
    		if(!x && !y)
    		{
    			ans.push_back(1LL<<(i-1));
    			ans.push_back(1LL<<(i-1));
    		}
    		else if(!x && y)
    		{
    			carry = 0;
    		}
    		else if(x && !y)
    		{
    			ans.push_back((1LL<<i));
    		}
    		else
    		{
    			ans.push_back(1LL<<i);
    			ans.push_back(1LL<<(i-1));
    			ans.push_back(1LL<<(i-1));
    		}
    	}
    }
    if(carry)
    {
    	cout << -1;
   		return 0;
    }
    int maxim = 0;
    for(auto it:ans)
    	ct[it]++;
    for(auto it:ct)
    	maxim = max(maxim,it.second);
    vector<ll>finans;
    while(maxim)
    {
    	ll val = 0;
    	for(auto it = ct.begin();it != ct.end();)
    	{
    		val += (*it).first;
    		((*it).second)--;
    		if((*it).second == 0)
    			it = ct.erase(it);
    		else
    			it++;
    	}
    	finans.push_back(val);
    	maxim--;
    }
    cout << finans.size() << "\n";
    for(auto it:finans)
    	cout << it << " ";
}  	 	


