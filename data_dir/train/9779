#pragma GCC optimize("O3")
//#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld  double
#define pii pair<int,int>
#define pip pair<int,pii>
#define ppi pair<pii,int> 
#define ppp pair<pii,pii>
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define ff first
#define ss second
#define warmup ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
const int N = 2003, mod=1e9+7;
const ll inf=(1e18+11);
char a[N][N];
vector<pii> g[N][N];
int in[N][N];
bool vis[N][N];

signed main()
{
    warmup
    
    int n,m,sz=0;
    cin>>n>>m;
    int i,j;
    for(i=1;i<=n;++i)
        for(j=1;j<=m;++j)
            cin>>a[i][j];
    
    queue<pii> q;
    for(i=1;i<=n;++i)
    {
        for(j=1;j<=m;++j)
        {
            if(a[i][j]=='.')
            {
                ++sz;
                
                if(a[i-1][j]=='.')
                    ++in[i][j], g[i][j].pb({i-1,j});
                if(a[i+1][j]=='.')
                    ++in[i][j], g[i][j].pb({i+1,j});
                if(a[i][j-1]=='.')
                    ++in[i][j], g[i][j].pb({i,j-1});
                if(a[i][j+1]=='.')
                    ++in[i][j], g[i][j].pb({i,j+1});
                
                if(in[i][j]==1)
                    q.push({i,j});
            }
        }
    }   
    
    while(!q.empty())
    {
        tie(i,j)=q.front();
        q.pop();
        
        if(vis[i][j])
            continue;
        vis[i][j]=1;
        --sz;
        
 //       cout<<i<<' '<<j<<'\n';
        
        if(a[i][j]=='.')
        {
            if(a[i-1][j]=='.')
                a[i][j]='v', a[i-1][j]='^', --in[--i][j];
            else if(a[i+1][j]=='.')
                a[i][j]='^', a[i+1][j]='v', --in[++i][j];
            else if(a[i][j-1]=='.')
                a[i][j]='>', a[i][j-1]='<', --in[i][--j];
            else
                a[i][j]='<', a[i][j+1]='>', --in[i][++j];
            
            --sz;
            vis[i][j]=1;
        }
        
        for(auto it:g[i][j])
        {
            --in[it.ff][it.ss];
            
            if(in[it.ff][it.ss]==1)
                q.push({it.ff,it.ss});
        } 
    }   
    if(sz)
        cout<<"Not unique";
    else
    {
        for(i=1;i<=n;++i,cout<<'\n')
            for(j=1;j<=m;++j)
                cout<<a[i][j];
    }   
    
    return 0;
}
