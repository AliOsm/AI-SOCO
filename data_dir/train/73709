#include <bits/stdc++.h>
using namespace std;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	int n, m;
	cin >> n >> m;
	vector< vector<int> > graph(n);
	for (int i = 0; i < m; i++) {
		int u, v;
		cin >> u >> v;
		u--; v--;
		graph[u].push_back(v);
		graph[v].push_back(u);
	}
	vector<int> dep(n), dp(n);
	vector< pair<int, int> > ans;
	bool bridge = false;
	function<void(int, int)> dfs = [&](int u, int p) {
		dep[u] = dep[p] + 1;
		for (int v : graph[u]) {
			if (dep[v]) {
				if (v != p) {
					if (dep[v] > dep[u]) {
						dp[u]--;
						ans.emplace_back(v, u);
					} else if (dep[v] < dep[u]) {
						dp[u]++;
					}
				}
			} else {
				ans.emplace_back(u, v);
				dfs(v, u);
				dp[u] += dp[v];
			}
		}
		if (dp[u] == 0 && u != p) {
			bridge = true;
		}
	};
	dfs(0, 0);
	if (bridge) {
		cout << "0\n";
		return 0;
	}
	for (auto &p : ans) {
		cout << p.first + 1 << ' ' << p.second + 1 << '\n';
	}
	return 0;
}
