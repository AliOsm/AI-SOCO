// rc.cpp
//

#include <math.h>
#include <string.h>

#include <iterator>
#include <fstream>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <list>
#include <stack>
#include <algorithm>
#include <numeric>

using namespace std;

typedef unsigned char uchar;
typedef unsigned int uint;
typedef unsigned __int64 uint64;

#define PI 3.1415926535897932384626433832795
#define EPS 1E-8

uint s[1000],
	 v[1000],
	 nv;

bool l[1000];

int main(int argc, char* argv[])
{
	uint n, k;
	cin >> n >> k;

	for (uint i = 0; i < n; ++i)
	{
		cin >> s[i];
		l[s[i] - 1] = true;
	}

	uint nk = -1;

	for (uint i = 0; i < n; ++i)
	{
		if (!l[i])
		{
			bool w = false;
			uint x = i + 1,
				 c = 0;

			if (x == k)
				nk = 0, w = true;

			while (x)
			{
				x = s[x - 1];
				++c;
				if (x == k)
					nk = c, w = true;
			}

			if (w)
				nk = c - nk;

			if (!w)
				v[nv++] = c;
		}
	}

	fill(l, l + 1000, false);
	uint mx = nk - 1;
	l[nk - 1] = true;

	for (uint i = 0; i < nv; ++i)
	{
		for (uint j = mx; j != -1; --j)
		{
			if (l[j])
				l[j + v[i]] = true;
		}

		mx += v[i];
	}

	for (uint i = 0; i < 1000; ++i)
	{
		if (l[i])
			cout << i + 1 << endl;
	}

	return 0;
}
