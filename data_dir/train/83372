#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,pair<ll,ll> >
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define hell 1000000007
#define f first
#define s second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<ll , null_type , less<ll> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t = 1  ;
void solve()
{
    ll n , m , k ;
    cin >> n >> m >> k ;
    vector<ll> v(n) , diff ;
    rep( i , 0 , n )
    {
        cin >> v[i] ;
    }
    rep( i , 1 , n )
        diff.pb(v[i]-v[i-1]-1);
    sort(all(diff));
    ll ans = n ;
    rep( i , 0 , n - k )
    {
        ans += diff[i] ;
    }
    cout << ans ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
/*
l = {}
def gcd(a,b):
    if b == 0 :
        return a
    else:
        return gcd(b,b%a)
for i in range(2,26):
    x = 2**i - 1
    ans = -1
    for j in range(x) :
        ans = max( ans , gcd( x ^ j , x & j ) )
    l[x]=ans
print(l)

*/
