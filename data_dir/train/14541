#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdio>
#include <iomanip>
#include <fstream>
#include <cassert>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <numeric>
#include <ctime>
#include <bitset>
#include <complex>

using namespace std;

#define int long long

void solve() {
	int n, m;
	cin >> n >> m;
	vector<int> ends;
	int cur = 0;
	while (true) {
		cur += m;
		int dg = cur % 10;
		if (find(ends.begin(), ends.end(), dg) == ends.end()) {
			ends.push_back(dg);
		} else {
			break;
		}
	}
	int f = n / m;
	int full = f / (int)ends.size();
	int sum = 0;
	for (auto t : ends) {
		sum += t;
	}
	int ans = full * sum;
	for (int i = 0; i < f % (int)ends.size(); i++) {
		ans += ends[i];
	}
	cout << ans << endl;
}

signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int t;
	cin >> t;
	while (t--) {
		solve();
	}
}
