#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long double ld;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;
#define Max 1000001
#define inf INT_MAX
#define llinf LONG_LONG_MAX
#define fast ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define pb push_back
#define ff first
#define ss second
#define all(v) v.begin(),v.end()
#define endl '\n'
const ll N=(1ll<<24),mod=1000000007,bit=24;
ll dp[N+1];
signed main()
{
    fast;
    ll pro=1,temp,t,i,j,l,r,n,m,mid,z,k,x,y,rem,carry=0,ind,ans=0,mx=-llinf,mn=llinf,cnt=0,curr=0,prev,next,sum=0,flag=1,i1=-1,i2=-1,u,v,mask;
    memset(dp,0,sizeof(dp));
    cin>>n;
    string s;
    for(i=1;i<=n;i++)
    {
    	cin>>s;
    	mask=0;
    	for(j=0;j<3;j++)
    	{
    		x=1ll<<(s[j]-'a');
    		mask|=x;
    	}
    	dp[mask]++;
    }
    for(i=0;i<bit;i++)
    {
    	for(mask=0;mask<N;mask++)
    	{
    		if(mask & (1ll<<i))
    		{
    			dp[mask]+=dp[mask ^ (1ll<<i)];
    		}
    	}
    }
    for(mask=0;mask<N;mask++)
    {
    	x=n-dp[N-1-mask];            //Findinig whether there exist a word containing any of the given vowels is same as finding the total 
    	ans^=(x*x);                  //number of words which doesn't contain any of the given vowels and substract it from n. 
    }
    cout<<ans<<endl;
    return 0;
}