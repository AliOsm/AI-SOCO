#include "bits/stdc++.h"
#define MAXN 100009
#define INF 1000000007
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define pb(x) push_back(x)
#define wr cout<<"----------------"<<endl;
#define ppb() pop_back()
#define tr(ii,c) for(__typeof((c).begin()) ii=(c).begin();ii!=(c).end();ii++)
#define ff first
#define ss second
#define my_little_dodge 46
#define debug(x)  cerr<< #x <<" = "<< x<<endl;
using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
template<class T>bool umin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
template<class T>bool umax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
vector<PII>adj[MAXN];
int dis[MAXN],dp[MAXN],imp[MAXN],n;
int P[MAXN][20],lvl[MAXN],par[MAXN];
pair<PII,int> pre[MAXN],suf[MAXN];
void dfs(int nd,int pr){
	P[nd][0]=pr;
	lvl[nd]=(~pr?lvl[pr]+1:1);
	int mx=0,cnt=0,who;
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i].ff;
		int val=adj[nd][i].ss;
		if(to==pr)
			continue;
		dfs(to,nd);
		if(dis[to]+val==mx)
			cnt++;
		else if(dis[to]+val>mx)
			mx=dis[to]+val,cnt=1,who=to;
	}
	if(mx){
		dis[nd]=mx;
		if(cnt>1)
			dp[nd]=nd;
		else
			dp[nd]=dp[who];
	}
	else{
		if(imp[nd])
			dis[nd]=0,dp[nd]=nd;
		else
			dis[nd]=-INF,dp[nd]=0;
	}
}
int LCA(int x,int y){
	if(lvl[x]<lvl[y])
		swap(x,y);
	for(int i=17;i>=0;i--)
		if(~P[x][i] and lvl[x]-(1<<i)>=lvl[y])
			x=P[x][i];	
	if(x==y)
		return x;	
	for(int i=17;i>=0;i--)
		if(~P[x][i] and P[x][i]!=P[y][i])
			x=P[x][i],y=P[y][i];
	return P[x][0];
}

void build(){
	for(int j=1;j<=17;j++)
		for(int i=1;i<=n;i++)
			if(~P[i][j-1])
				P[i][j]=P[P[i][j-1]][j-1];
}
void solve(int x,int y){
	//~ cout<<x<<">"<<y<<endl;
	int z=LCA(x,y);
	par[x]++;par[y]++;par[z]--;
	if(~P[z][0])	
		par[P[z][0]]--;
}
void dfs1(int nd,int pr,int diss,int dpp){
	//~ cout<<nd<<" "<<max(diss,dis[nd])<<endl;
	//~ cout<<nd<<" "<<dpp<<endl;
	if(max(dis[nd],diss)>0 and imp[nd]){
		if(dis[nd]==diss)
			solve(nd,nd);
		else{
			if(dis[nd]<diss)
				solve(nd,dpp);
			else
				solve(nd,dp[nd]);
		}
	}pair<PII,int> tmp=mp(mp(-INF,0),0);
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i].ff;
		int cost=adj[nd][i].ss;
		if(to==pr)
			continue;
		pre[to]=tmp;	
		if(dis[to]+cost>tmp.ff.ff)
			tmp=mp(mp(dis[to]+cost,1),dp[to]);
		else if(dis[to]+cost==tmp.ff.ff)
			tmp.ff.ss++;
	}tmp=mp(mp(-INF,0),0);
	for(int i=int(adj[nd].size()-1);i>=0;i--){
		int to=adj[nd][i].ff;
		int cost=adj[nd][i].ss;
		if(to==pr)
			continue;
		suf[to]=tmp;	
		if(dis[to]+cost>tmp.ff.ff)
			tmp=mp(mp(dis[to]+cost,1),dp[to]);
		else if(dis[to]+cost==tmp.ff.ff)
			tmp.ff.ss++;
	}
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i].ff;
		int cost=adj[nd][i].ss;
		if(to==pr)
			continue;
		PII val=mp(diss,1);
		int who=dpp;
		if(pre[to].ff.ff>val.ff)
			val=pre[to].ff,who=pre[to].ss;
		else if(pre[to].ff.ff==val.ff)
			val.ss+=pre[to].ff.ss;
		if(suf[to].ff.ff>val.ff)
			val=suf[to].ff,who=suf[to].ss;
		else if(suf[to].ff.ff==val.ff)
			val.ss+=suf[to].ff.ss;
		//~ if(nd==1)	
			//~ cout<<val.ff+cost<<"~"<<val.ss<<" "<<who<<endl;
		if(val.ff<=0){
			if(imp[nd])
				dfs1(to,nd,cost,nd);
			else
				dfs1(to,nd,-INF,0);
		}
		else{	
			if(val.ss==1)	
				dfs1(to,nd,val.ff+cost,who);	
			else
				dfs1(to,nd,val.ff+cost,nd);	
		}
	}
}
void finalize(int nd,int pr){
	for(int i=0;i<int(adj[nd].size());i++){
		int to=adj[nd][i].ff;
		if(to==pr)
			continue;
		finalize(to,nd);	
		par[nd]+=par[to];	
	}
}
int main(){
	#ifndef ONLINE_JUDGE
    freopen("file.in", "r", stdin);
	#endif	
	memset(P,-1,sizeof P);
	int m;
	scanf("%d%d",&n,&m);
	while(m--){
		int x;
		scanf("%d",&x);
		imp[x]=1;
	}
	for(int i=1;i<n;i++){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		adj[u].pb(mp(v,w));
		adj[v].pb(mp(u,w));
	}
	dfs(1,-1);build();dfs1(1,-1,-INF,0);finalize(1,-1);
	int ans=0,res=0;
	for(int i=1;i<=n;i++)
		if(!imp[i]){
			if(par[i]>ans)
				ans=par[i],res=1;
			else if(par[i]==ans)
				res++;
		}
	printf("%d %d\n",ans,res);	
	//~ for(int i=1;i<=n;i++)
		//~ printf("dis[%d] = %d dp[%d] = %d\n",i,dis[i],i,dp[i]);
	return 0;
}
