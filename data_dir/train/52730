#include <bits/stdc++.h>

using namespace std;

typedef unsigned long long ll;

const double EPS = 1e-9;

ll n, k, x;

ll bits[32], arr[222222], vrr[222222];
ll mor;

void db(ll n) {
    ll x = 0;
    while (x < 31) {
        if (n & (1<<x)) {
            bits[x]++;
        }
        x++;
    }
}

void recalc() {
    mor = 0;
    for (ll i = 0; i < 32; i++) bits[i] = 0;
    for (ll i = 0; i < n; i++) {
        db(arr[i]);
        mor |= arr[i];
    }
}

ll profit(ll e) {
    ll retval = mor;
    for (ll i = 0; i < 31; i++) {
        if (arr[e] & (1<<i)) {
            if (bits[i] == 0) cerr << "ALERT!!!" << endl;
            if (bits[i] == 1) retval -= (1<<i);
        }
    }
    return retval | vrr[e];
}

int main() {
    ios::sync_with_stdio(false);
    cin >> n >> k >> x;
    ll ox = x;
    while(--k) {
        x *= ox;
    }
    for (ll i = 0; i < n; i++) {
        cin >> arr[i];
        vrr[i] = arr[i]*x;
    }
    recalc();
    //cerr << "FIRST MOR: " << mor << endl;

    ll p = 0;
    ll pro = profit(0);
    for (ll i = 1; i < n; i++) {
        ll cpro = profit(i);
        if (cpro > pro) {
            pro = cpro;
            p = i;
        }
    }
    arr[p] = vrr[p];
    recalc();
    cout << mor << endl;
}
