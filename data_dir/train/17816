#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

int dp[250001][3], a, b, c, p[250001], n, i, k1, k2, k3;

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> k1 >> k2 >> k3;

    for (i = 1; i <= k1; i++) {
        cin >> a;

        p[a] = 1;
    }

    for (i = 1; i <= k2; i++) {
        cin >> b;

        p[b] = 2;
    }

    for (i = 1; i <= k3; i++) {
        cin >> c;

        p[c] = 3;
    }

    n = k1 + k2 + k3;

    for (i = 1; i <= n; i++) dp[i][0] = dp[i][1] = dp[i][2] = 1000000000;

    for (i = 1; i <= n; i++) {
        dp[i][0] = min(dp[i][0], dp[i - 1][0] + (p[i] != 1));

        dp[i][1] = min(dp[i][1], dp[i - 1][0] + (p[i] != 2));

        dp[i][1] = min(dp[i][1], dp[i - 1][1] + (p[i] != 2));

        dp[i][2] = min(dp[i][2], dp[i - 1][0] + (p[i] != 3));

        dp[i][2] = min(dp[i][2], dp[i - 1][1] + (p[i] != 3));

        dp[i][2] = min(dp[i][2], dp[i - 1][2] + (p[i] != 3));
    }

    cout << min(min(dp[n][0], dp[n][1]), dp[n][2]) << endl;

    return 0;
}
