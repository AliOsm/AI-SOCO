#include <iostream>
#include <cmath>
#include <algorithm>
#define Log 20
using namespace std;
int d[1000010];
int cha[1000010][22];
int n,a,b,res,q;

int getBit(int x,int k)
{
    return ((x>>k)&1);
}

int lca(int u,int v)
{
   if (d[u]>d[v]) swap(u,v);
   int x=d[v]-d[u];
   for (int k=Log; k>=0; k--)
        if (getBit(x,k)==1)
           v=cha[v][k];
   if (u==v) return u;
   for (int k=Log; k>=0; k--)
   if (cha[u][k]!=cha[v][k])
   {
       u=cha[u][k];
       v=cha[v][k];
   }
   return cha[u][0];
}

void SetLink(int v,int u)
{
    cha[u][0]=v;
    d[u]=d[v]+1;
    for (int i=1; i<=Log; i++)
        cha[u][i]=cha[cha[u][i-1]][i-1];
}

int dist(int u,int v)
{
    int x=lca(u,v);
    return (d[u]+d[v]-2*d[x]);
}

int main()
{
    ios::sync_with_stdio(false);
    for (int i=0; i<=Log; i++)
         cha[1][i]=1;
    d[1]=0;
    SetLink(1,2);
    SetLink(1,3);
    SetLink(1,4);
    n=4;
    a=2;
    b=3;
    res=dist(a,b);
    cin>>q;
    int v;
    for (int i=1; i<=q; i++)
    {
        cin>>v;
        SetLink(v,n+1);
        SetLink(v,n+2);
        n=n+2;
        int da=dist(a,n);
        int db=dist(b,n);
        if ((da>db) && (da>res))
        {
            b=n;
            res=da;
        }
        else
        if (db>res)
        {
            a=n;
            res=db;
        }
        cout<<res<<"\n";
    }
    return 0;
}
