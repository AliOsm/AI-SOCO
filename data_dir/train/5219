// Let's bring the sky down :)
#include<bits/stdc++.h>
#define ll long long
using namespace std;
const int N = 2e5 + 5;
const ll inf = 1e11;
const ll ninf = -inf;
ll a[N], b[N];

int n, m;
bool calc(ll mid){
    int idx = 1;
    ll reach;
    for(int i = 1; i <= n; i++){
        if(b[idx] >= a[i]){
            reach = a[i] + mid;
        }
        else{
            ll db = a[i] - b[idx];
            ll lr = (db > mid ? ninf : mid - 2LL * db);
            ll rl = (mid - db < 0 ? ninf : (mid - db) >> 1);
            reach = a[i] + max(lr, rl);
        }
        while(reach >= b[idx] && idx <= m){
                idx++;
        }
        if(idx == m + 1) return 1;
    }
    return(idx >= m + 1 ? 1 : 0);
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    cin >> n >> m;
    for(int i = 1; i <= n; i++) cin >> a[i];
    for(int i = 1; i <= m; i++) cin >> b[i];
    ll lo = -1, hi = (1LL << 50);
    while(hi - lo > 1){
        ll mid = hi + lo >> 1;
        if(calc(mid))
            hi = mid;
        else lo = mid;
    }
    cout << hi;
return 0;
}
