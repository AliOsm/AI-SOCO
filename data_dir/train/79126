//besmellah
#include <bits/stdc++.h>
using namespace std;

vector <int> GN, PX;

int main(){
	int n;
	cin >> n;
	GN.resize(n + 1);
	PX.resize(n + 1);
	for (int i = 3; i <= n; i++){
		set <int> MEX;
		int k = sqrt(2 * i);
		for (int j = 2; j <= k; j++){
			if (j % 2 == 1){
				if (i % j == 0 && i / j >= j / 2 + 1){
					MEX.insert(PX[i / j + j / 2] ^ PX[i / j - j / 2 - 1]);
					if (i == n && (PX[i / j + j / 2] ^ PX[i / j - j / 2 - 1]) == 0){
						cout << j;
						return 0;
					}
				}
			}
			else{
				if (i % j == j / 2 && i / j >= j / 2){
					MEX.insert(PX[i / j + j / 2] ^ PX[i / j - j / 2]);
					if (i == n && (PX[i / j + j / 2] ^ PX[i / j - j / 2]) == 0){
						cout << j;
						return 0;
					}
				}
			}
		}
		for (int j = 0; j <= n; j++){
			if (MEX.find(j) == MEX.end()){
				GN[i] = j;
				PX[i] = PX[i - 1] ^ j;
				break;
			}
		}
//		cout << i << ' ' << GN[i] << endl;
	}
	cout << -1;
}
