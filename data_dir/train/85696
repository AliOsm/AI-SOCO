#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include <iostream>
#include <cmath>
#include <iomanip>
#include <string>
#include <cstring>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <stdio.h>
#include <climits>
#include <stack>
#include <queue>
#include <vector>
#include <set>
#include <sstream>
#include <map>
#include <ctime>
#include <cstdlib>
#include <list>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;
#define OO 1e8
int dx8[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
int dy8[] = { -1, 1, 0, 0, -1, -1, 1, 1 };
int dy[] = { 1, -1, 0, 0 };
int dx[] = { 0, 0, 1, -1 };
int X[6] = { 0, 0, 0, -1, 0, 1 };
int Y[6] = { 0, 0, -1, 0, 1, 0 };
int Z[6] = { 1, -1, 0, 0, 0, 0 };
// start + (end - start) / 2;
bool f = 0;
int digits[11], D[11];
void check(int rem, int i){
    if (f)return;
    if (rem == 0){
        f = 1;
        for (int i = 0; i <= 9; i++)
            D[i] = digits[i];
        return;
    }
    if (i == 10)
        return;
    check(rem, i + 1);
    int x = rem / i;
    rem -= min(x, digits[i]) * i;
    digits[i] -= x;
    check(rem, i + 1);
    digits[i] += x;
    rem += min(x, digits[i]) * i;
}
int main(){
    int n, sum = 0, sum2 = 0;
    string ans = "";
    memset(digits, 0, sizeof digits);
    cin >> n;
    for (int i = 0; i < n; i++){
        int x;
        cin >> x;
        ans += (x + '0');
        sum += x;
        digits[x]++;
        D[x]++;
    }
    if (!digits[0]){
        cout << "-1\n";
        return 0;
    }
    sum2 = sum;
    if (sum % 3){
        while (!f){
            sum--;
            while ((sum % 3))
                sum--;
            check(sum2 - sum, 1);
        }
    }
    f = 0;
    for (int i = 9; i >= 0; i--){
        for (int j = 0; j < D[i]; j++){
            if (i == 0 && !f){
                cout << "0\n";
                return 0;
            }
            f = 1;
            cout << i;
        }
    }
    cout << "\n";
}