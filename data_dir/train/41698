#include <bits/stdc++.h>
#define ld long double
#define ll long long int
#define mod 1000000007
#define ll_inf 1e18
#define int_inf 1e9
#define pb push_back
#define endl '\n'
#define Endl '\n'
#define eps 1e-9
#define PI acos(-1.0)
#define ii pair<int,int>
#define fi first
#define se second
#define prout(x) cout.precision(x)
using namespace std;
vector<int>v[1212];
int depth[1212];
bool vis[1212];
bool cant[1223];
ld x[1212], y[1212], r[1212];
int main(){
    int n;
    cin>>n;
    for(int i=0;i<n;i++)cin>>x[i]>>y[i]>>r[i];
    for(int i=0;i<n;i++){
        int par=-1;
        for(int j=0;j<n;j++){
            if(i==j)continue;
            if(r[j]<=r[i])continue;
            ld d=hypot(x[i]-x[j], y[i]-y[j]);
            ld rr=r[i]+r[j];
            if(rr<=d)continue;
            if(par==-1 || r[par]>r[j]){
                par=j;
            }
        }
        //cout<<par<<" "<<i<<endl;
        if(par!=-1){
            v[par].pb(i);
            cant[i]=1;
        }
    }
    //return 0;
    ld ans=0.0;
    queue<int>q;
    for(int i=0;i<n;i++){
        if(cant[i]==0){
            q.push(i);
            depth[i]=-1;
            //cout<<"Added  fst "<<r[i]<<endl;
            ans+=r[i]*r[i];
        }
    }
    while(!q.empty()){
        int node=q.front();
        q.pop();
        int sz=v[node].size();
        for(int i=0;i<sz;i++){
            int nx=v[node][i];
            q.push(nx);
            //cout<<"node is "<<r[node]<<" "<<"nxt is "<<r[nx]<<endl;
            depth[nx]=depth[node]+1;
            if(depth[nx]%2==0)ans+=r[nx]*r[nx];// cout<<"Aded "<<r[nx]<<endl;
            else ans-=r[nx]*r[nx];// cout<<"Removed "<<r[nx]<<endl;
        }
    }
    ans*=PI;
    prout(15);
    cout<<fixed<<ans<<endl;
    return 0;
}
