
#include<bits/stdc++.h>


using namespace std;

using ll   = long long;
using ii   = pair   < int , int >;
using i3   = pair   < int , ii  >;
using li   = pair   < ll  , int >;
using lii  = pair   < ll  , ii  >;
using pll  = pair   < ll  , ll  >;
using vi   = vector < int       >;
using vl   = vector < ll        >;
using vii  = vector < ii        >;
using vpll = vector < pll       >;
using vi3  = vector < i3        >;
using vlii = vector < lii       >;


const int N = 2e5 + 5;
const ll INF = 1e17 + 7;
const double eps = 1e-9 , PI = acos(-1);



int n , m;
int a[N];
int ans[N][3];

void solve(int testCase){

    scanf("%d" , &n);
    for(int i = 1 ; i <= n ; i ++){
            scanf("%d" , &a[i]);
    }
    a[0] = 1e9;
    a[n+1] = 1e9;

    for(int i = 1 ; i <= n ; i ++){
            ans[i][1] = 1 + (a[i] >= a[i-1] ? ans[i-1][1] : 0);
    }

    for(int i = n ; i >= 1 ; i --){
            ans[i][2] = 1 + (a[i] >= a[i+1] ? ans[i+1][2] : 0);
    }

    int mx = 0;
    for(int i = 1 ; i <= n ; i ++){
            mx = max(mx , ans[i][1] + ans[i][2] - 1);
    }

    printf("%d\n" , mx);

}

main(){

    int t = 1;
    //scanf("%d" , &t);

    for(int testCase = 1 ; testCase <= t ; testCase ++){
            solve(testCase);
    }

    return 0;
}
