#include <iostream>
#include <cmath>
#include <algorithm>
#include <fstream>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <deque>
#include <list>
using namespace std;

#define space " "
#define enter endl
#define ex exit(0)
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define input(s)\
    freopen(s,"r",stdin)
#define output(s)\
    freopen(s,"w",stdout)
#define INF 2000000007
#define LINF 40000000000000000007

typedef long long LL;
typedef unsigned long long ULL;
typedef double DB;
typedef long double LDB;
typedef pair<int,int> P;

const int MAXM=4e6+10;
const int MAXN=8e5+10;

int n,m,pos,ma,mi;
int a[MAXN];
int dist[MAXN];
P b[MAXN],t[MAXM],val;

inline bool cmp(P a,P b)
{
    if (a.fi<b.fi)
        return true;
    if (a.fi>b.fi)
        return false;
    return a.se<b.se;
}

P build(int x,int l,int r)
{
    if (l==r)
        return t[x]=mp(dist[l],l);
    int md=(l+r)/2;
    return t[x]=cmp(build(x+x,l,md),build(x+x+1,md+1,r)) ? t[x+x] : t[x+x+1];
}

P getMin(int x,int l,int r,int tl,int tr)
{
    if (r<l || tr<tl)
        return mp(1e9,1e9);
    if (l>=tl && r<=tr)
    {
        if (t[x].fi>ma-mi+1)
            return mp(1e9,1e9);
        if (t[x].fi+t[x].se<=ma)
            return t[x];
        return getMin(x,l,r,l,tr-max(t[x].fi/10,1));
    }
    P resL,resR;
    int md=(l+r)/2;
    if (tl<=md)
        resL=getMin(x+x,l,md,tl,tr);
    else
        resL=mp(1e9,1e9);
    if (tr>md)
        resR=getMin(x+x+1,md+1,r,tl,tr);
    else
        resR=mp(1e9,1e9);
    return cmp(resL,resR) ? resL : resR;
}

int main()
{
    cin >> n >> m;
    for (int i=1; i<=n; i++)
    {
        scanf("%d",a+i);
        b[i]=mp(a[i],i);
    }
    sort(b+1,b+n+1);
    for (int i=1; i<n; i++)
    {
        if (b[i].fi==b[i+1].fi)
            dist[b[i].se]=b[i+1].se-b[i].se;
        else
            dist[b[i].se]=INF;
    }
    dist[b[n].se]=INF;
    build(1,1,n);
    for (int i=1; i<=m; i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        ma=y,mi=x;
        if (y-x==0)
        {
            cout << "-1\n";
            continue;
        }
        P res=getMin(1,1,n,x,y);
        if (res.fi+res.se>y || res.fi+res.se<x)
            printf("-1\n");
        else
            printf("%d\n",res.fi);
    }
}
