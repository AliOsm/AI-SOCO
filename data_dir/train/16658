#include<bits/stdc++.h>

using namespace std;

vector<string>v;
string t1="",t2="";
bool vis2[1009];

bool isvalidprefix(int n) {
    string prefix=t1;
    int r=0;
    bool vis[1009];
    for(int i=0; i<=n; i++) {
        vis[i]=false;
    }
    for(int i=0; i<n; i++) {
        bool f=true;
        for(int j=0; j<v[i].size(); j++) {
            if(prefix[j]!=v[i][j]) {
                f=false;
                break;
            }
        }
        if(f and !vis[v[i].size()]) {
            r++;
            vis[v[i].size()]=true;
            vis2[i]=true;
        }
    }

    if(r>= n/2) {
        return true;
    } else {
        return false;
    }
}
bool isvalidsuffix(int n) {
    string suffix=t2;
    int r=0;
    bool vis[1009];
    for(int i=0; i<=n; i++) {
        vis[i]=false;
    }
    for(int i=0; i<n; i++) {
        bool f=true;
        for(int j=v[i].size()-1,k=suffix.size()-1; j>=0; j--,k--) {
            if(suffix[k]!=v[i][j]) {
                f=false;
                break;
            }
        }
        if(f and !vis[v[i].size()] and !vis2[i]) {
            r++;
            vis[v[i].size()]=true;
        }

    }

    if(r>= n/2) {
        return true;
    } else {
        return false;
    }
}

int main() {
    int k;
    cin>>k;
    int n = k*2 - 2;


    for(int i=1; i<=n; i++) {
        string s;
        cin>>s;
        if(s.size()==k-1) {
            if(t1.size()==0) {
                t1+=s;
            } else {
                t2+=s;
            }
        }
        v.push_back(s);

    }
    for(int i=0; i<=n; i++) {
        vis2[i]=false;
    }
    bool f1=isvalidprefix(n);
    bool f2=isvalidsuffix(n);
    vector<string>res;
    if(f1 and f2) {
        bool vis[1009];
        for(int i=0; i<=n; i++) {
            vis[i]=false;
        }
        string prefix="";
        prefix+=t1;
        for(int i=0; i<n; i++) {
            bool f=true;
            for(int j=0; j<v[i].size(); j++) {
                if(prefix[j]!=v[i][j]) {
                    f=false;
                    break;
                }
            }
            if(f and !vis[v[i].size()]) {
                res.push_back("P");
                vis[v[i].size()]=true;
            }
            else{
                res.push_back("S");
            }
        }
    }
    else{
        bool vis[1009];
        for(int i=0; i<=n; i++) {
            vis[i]=false;
        }
        string prefix="";
        prefix+=t2;
        for(int i=0; i<n; i++) {
            bool f=true;
            for(int j=0; j<v[i].size(); j++) {
                if(prefix[j]!=v[i][j]) {
                    f=false;
                    break;
                }
            }
            if(f and !vis[v[i].size()]) {
                res.push_back("P");
                vis[v[i].size()]=true;
            }
            else{
                res.push_back("S");
            }
        }
    }
    for(int i=0;i<n;i++){
        cout<<res[i];
    }
    return 0;
}
