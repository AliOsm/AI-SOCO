/*
▄███████▀▀▀▀▀▀███████▄
░▐████▀▒ЗАПУСКАЕМ▒▀██████▄
░███▀▒▒▒▒▒ДЯДЮ▒▒▒▒▒▒▀█████
░▐██▒▒▒▒▒▒БОГДАНА▒▒▒▒▒████▌
░▐█▌▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌
░░█▒▄▀▀▀▀▀▄▒▒▄▀▀▀▀▀▄▒▐███▌
░░░▐░░░▄▄░░▌▐░░░▄▄░░▌▐███▌
░▄▀▌░░░▀▀░░▌▐░░░▀▀░░▌▒▀▒█▌
░▌▒▀▄░░░░▄▀▒▒▀▄░░░▄▀▒▒▄▀▒▌
░▀▄▐▒▀▀▀▀▒▒▒▒▒▒▀▀▀▒▒▒▒▒▒█
░░░▀▌▒▄██▄▄▄▄████▄▒▒▒▒█▀
░░░░▄██████████████▒▒▐▌
░░░▀███▀▀████▀█████▀▒▌
░░░░░▌▒▒▒▄▒▒▒▄▒▒▒▒▒▒▐
░░░░░▌▒▒▒▒▀▀▀▒▒▒▒▒▒▒▐
.....   .    .   .    .
  .    . .    . .    . .
  .   .....    .    .....
  .  .     .   .   .     .
*/
//#pragma GCC optimize("Ofast")
//#pragma GCC optimize("no-stack-protector")
//#pragma GCC optimize("unroll-loops")
//#pragma GCC optimize("fast-math")
//#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
#include <random>
 
using namespace std;
 
template<typename T> void uin(T &a, T b) {
    if (b < a) a = b;
}

template<typename T> void uax(T &a, T b) {
    if (b > a) a = b;
}

#define int long long

const int INF = 1e9 + 228;

const int maxn = 200 * 1000 + 228;

int n;

string s;

int fx, fy;

pair<int, int> pref[maxn], suff[maxn];

pair<int, int> go(string s) {
	for (int i = 1; i <= n; ++i) {
		pref[i] = pref[i - 1];
		if (s[i - 1] == 'U') ++pref[i].second;
		if (s[i - 1] == 'D') --pref[i].second;
		if (s[i - 1] == 'L') --pref[i].first;
		if (s[i - 1] == 'R') ++pref[i].first;
	}
	for (int i = n; i > 0; --i) {
		suff[i] = suff[i + 1];
		if (s[i - 1] == 'U') ++suff[i].second;
		if (s[i - 1] == 'D') --suff[i].second;
		if (s[i - 1] == 'L') --suff[i].first;
		if (s[i - 1] == 'R') ++suff[i].first;
	}
	int x = 0, y = 0;
	for (int i = 0; i < (int)s.size(); ++i) {
		if (s[i] == 'U') ++y;
		if (s[i] == 'D') --y;
		if (s[i] == 'R') ++x;
		if (s[i] == 'L') --x;
	}
	return {x, y};
}


bool check(int l, int r) {
	++l;
	++r;
	pair<int, int> p = pref[l - 1];
	p.first += suff[r + 1].first;
	p.second += suff[r + 1].second;
	if (abs(p.first - fx) + abs(p.second - fy) <= r - l + 1) return 1;
	return 0;
}

void solve() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;
	cin >> s;
	cin >> fx >> fy;
	if ((abs(fx) + abs(fy)) % 2 != n % 2) {
		cout << -1 << endl;
		return;
	}
	if (go(s) == make_pair(fx, fy)) {
		cout << 0 << endl;
		return;
	}
	int mn = INF;
	check(0, 2);
	for (int i = 0; i < n; ++i) {
		int l = i - 1, r = n;
		while (r - l > 1) {
			int mid = (l + r) >> 1;
			if (check(i, mid)) {
				r = mid;
			} else {
				l = mid;
			}
		}
		if (check(i, r)) {
			uin(mn, r - i + 1);
		}
	}
	if (mn == INF) {
		cout << -1 << endl;
	} else {
		cout << mn << endl;
	}
}
signed main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	// freopen("perm.in", "r", stdin);
	// freopen("perm.out", "w", stdout);
	solve();
	return 0;
}
