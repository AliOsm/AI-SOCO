#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <unordered_map>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <iomanip>
#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define nl cout<<'\n'
#define ff first
#define ss second
#define READ freopen("input.txt","r",stdin);
#define WRITE    freopen("output.txt","w",stdout);
#define fill(a,x) memset(a,x,sizeof(a));
#define loop(i,x,n) for(int i=x;i<n;i++)
#define TC() ll ttwea;cin>>ttwea;while(ttwea--)
#define ll long long
#define mod 1000000007
#define vi vector<ll>
#define pb push_back
#define mp make_pair
#define all(a) a.begin(), a.end()
#define ull unsigned long long
#define N 8000010
#define inf 10000000000000000
#define debug1(x) cerr << #x << ": " << x <<'\n'
#define debug2(x, y) cerr << #x << ": " << x << '\t' << #y << ": " << y <<'\n'
#define debug3(x, y, z) cerr << #x << ": " << x << '\t' << #y << ": " << y << '\t' << #z << ": " << z <<'\n'
using namespace std;
//ll dx[]={1,0,-1,0};ll dy[]={0,1,0,-1}; //4 Direction
//ll dx[]={1,1,0,-1,-1,-1,0,1};ll dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
ll gcd(ll x,ll y)
{
    if(y==0)
        return x;
    else
        return gcd(y,x%y);
}
ll expo(ll n,ll m,ll p)   //MODULAR EXPONENTIATION
{
    ll r=1;
    while(m>0)
    {
        if(m%2)
            r=(r*n)%p;
        n=(n*n)%p;
        m=m/2;
    }
    return r%p;
}
vi adj[1000000];
bool sh[20000];
bool vis[20000];
ll count=0;
vi ans;
void dfs(ll s,ll f)
{
  vis[s]=true;
  for(ll i=0;i<adj[s].size();i++)
  {
      if(vis[adj[s][i]])
        continue;
      if(f==1||sh[adj[s][i]]==true)
        ans.pb(adj[s][i]),dfs(adj[s][i],1);
      else
        dfs(adj[s][i],0);

  }
}
ll a[110001][27];
string s;
bool f(ll k,ll j)
{
    for(ll i=k;i<s.size();i++)
      if(a[i+1][j]-a[i-k][j]<=0)
        return false;
      return true;

}
int main()
{
 
   IOS;
   #ifndef ONLINE_JUDGE
   freopen("input.txt","r",stdin); 
   freopen("output.txt","w",stdout);
   #endif
   /********************* Code starts here ************************/
   //string s;
   cin>>s;
   
   memset(a,0,sizeof(a));
   
   for(ll i=1;i<=s.size();i++)
   {
     for(ll j=0;j<26;j++)
     {
        if(s[i-1]-'a'!=j)
          a[i][j]=a[i-1][j];
        else
          a[i][j]=a[i-1][j]+1;
     }
   }
   ll ans=inf;
   for(ll i=0;i<26;i++)
   {
      ll l=0,h=s.size()-1;
      while(l<h)
      {
          ll mid=(l+h)/2;
          if(f(mid,i))
            h=mid;
          else
            l=mid+1;
      }
      ans=min(ans,l+1);
   }
   if(ans!=inf)
   cout<<ans;
 else
  cout<<s.size()/2+1;
   return 0;
}