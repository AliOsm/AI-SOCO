#include<bits/stdc++.h>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define rand() (rand() << 15 | rand())
using namespace std;
typedef long long  ll;
const int N = 2e5 + 2;

int n , m , p;
vector<int> a , b;
vector<int> adj[N];
map<int , int> cnt;
int shouldbe = -1;
vector<int> res;

void increase(int cur , int add , int now , int &matches){
    if(cur == now)matches--;
    if(cur + add == now)matches++;
}

void solve(vector<int> arr){
    map<int , int> curCnt;
    int matches = 0;
    if((int)arr.size() < m)return;
    for(int i = 0 ; i < m ; ++i){
        int prv = curCnt[a[arr[i]]];
        increase(prv , 1 , cnt[a[arr[i]]] , matches);
        curCnt[a[arr[i]]]++;
    }
    int l = 0 , r = m - 1;
    while(r < (int)arr.size()){
        if(matches == shouldbe)res.pb(arr[l] + 1);
        if(r + 1 == (int)arr.size())break;
        int prv = curCnt[a[arr[++r]]] , nxt = prv + 1;
        increase(prv , 1 , cnt[a[arr[r]]] , matches);
        curCnt[a[arr[r]]]++;
        prv = curCnt[a[arr[l]]];
        increase(prv , -1 , cnt[a[arr[l]]] , matches);
        curCnt[a[arr[l++]]]--;
    }
}


int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt" , "r" , stdin);
#endif
    ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
    cin >> n >> m >> p;
    a.resize(n);
    b.resize(m);

    for(int i = 0 ; i < n ; ++i){
        cin >> a[i];
        adj[i % p].pb(i);
    }

    for(int &x : b)
        cin >> x , cnt[x]++;
    shouldbe = cnt.size();

    for(int i = 0 ; i < p ; ++i){
        solve(adj[i]);
    }
    
    sort(all(res));
    cout << (int)res.size() << "\n";
    for(int x : res)
        cout << x << ' ';
    cout << "\n";
}
