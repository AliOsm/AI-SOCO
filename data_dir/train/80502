# include <stdio.h>
# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define IOS ios_base :: sync_with_stdio(0);cin.tie(0)
# define p(v) cerr << #v << " = " << v << '\n'
# define p2(v) cerr << #v << " = " << (complex < int > (v.x,v.y)) << '\n'
# define vi vector < int >
# define vll vector < ll >
# define pii pair < int , int >
# define mp make_pair
int s[1 << 20];
ll t1[1 << 20];
ll t2[1 << 20];
void up(int node)
{
    t1[node] = max(t1[node << 1],t1[node << 1 | 1]);
    t2[node] = t2[node << 1] + t2[node << 1 | 1];
}
void build(int p,int u,int node)
{
    if (p == u)
        t1[node] = t2[node] = s[p];
    else
    {
        int m = (p + u) / 2;
        build(p,m,node << 1);
        build(m+1,u,node << 1 | 1);
        up(node);
    }
}
void U1(int p,int u,int pos,int v,int node)
{
    if (p == u)
        t1[node] = t2[node] = v;
    else
    {
        int m = (p + u) / 2;
        if (pos <= m)
            U1(p,m,pos,v,node << 1);
        else
            U1(m+1,u,pos,v,node << 1 | 1);
        up(node);
    }
}
void U2(int p,int u,int l,int r,int k,int node)
{
    if (t1[node] < k)
        return;
    if (p == u)
        t1[node] = t2[node] = t1[node] % k;
    else
    {
        int m = (p + u) / 2;
        if (l <= m) U2(p,m,l,r,k,node << 1);
        if (m+1<=r) U2(m+1,u,l,r,k,node << 1 | 1);
        up(node);
    }
}
ll Q(int p,int u,int l,int r,int node)
{
    if (l <= p && u <= r)
        return t2[node];
    ll ans = 0;
    int m = (p + u) / 2;
    if (l <= m) ans += Q(p,m,l,r,node << 1);
    if (m+1<=r) ans += Q(m+1,u,l,r,node << 1 | 1);
    return ans;
}
int main(void)
{
    #ifdef CF
    freopen("input","r",stdin);
    #endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    int n,m;
    IOS;
    fi>>n>>m;
    for (int i = 1;i <= n;++i)
        fi>>s[i];
    build(1,n,1);
    while (m --)
    {
        int op;
        fi>>op;
        if (op == 1)
        {
            int l,r;
            fi>>l>>r;
            fo << Q(1,n,l,r,1) << '\n';
        }
        else
        if (op == 2)
        {
            int l,r,k;
            fi>>l>>r>>k;
            U2(1,n,l,r,k,1);
        }
        else
        {
            int l,r;
            fi>>l>>r;
            U1(1,n,l,r,1);
        }
    }
    cerr << "Time elapsed :" << clock() * 1000.0 / CLOCKS_PER_SEC << " ms" << '\n';
    return 0;
}
