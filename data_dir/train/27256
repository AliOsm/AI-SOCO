#include <bits/stdc++.h>
using namespace std;

bool chmax(int64_t& a, int64_t b){
    if(a < b){
        a = b;
        return true;
    }else{
        return false;
    }
}

void solve(){
    int N, K;
    cin >> N >> K;
    vector<vector<int>> BA(N);
    for(int i=0; i<N; i++){
        int a, b;
        cin >> a >> b;
        BA[i] = {b, a, i};
    }
    sort(BA.begin(), BA.end());

    vector<vector<int64_t>> dp(N+1, vector<int64_t>(K+2, -1e18));
    auto prv = dp;

    dp[0][0] = 0;
    for(int i=0; i<N; i++) for(int j=0; j<=K; j++) if(dp[i][j] >= 0){
        if(chmax(dp[i+1][j], dp[i][j] + BA[i][0]*(K-1))) prv[i+1][j] = j;
        if(chmax(dp[i+1][j+1], dp[i][j] + BA[i][1] + BA[i][0]*j)) prv[i+1][j+1] = j;
    }

    vector<int> use, not_use;
    int k = K;
    for(int i=N-1; i>=0; i--){
        if(prv[i+1][k] != k){
            k--;
            use.push_back(i);
        }else{
            not_use.push_back(i);
        }
    }
    vector<int> ans;
    while(use.size() > 1){
        ans.push_back(BA[use.back()][2]+1);
        use.pop_back();
    }
    for(int a : not_use){
        int idx = BA[a][2];
        ans.push_back(idx+1);
        ans.push_back(-(idx+1));
    }
    ans.push_back(BA[use[0]][2]+1);

    cout << ans.size() << endl;
    for(int a : ans) cout << a << " ";
    cout << endl;
}

int main(){
    int T;
    cin >> T;
    while(T--) solve();
    return 0;
}
