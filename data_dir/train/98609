#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfi(x) scanf("%d" , &x)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfl(x) scanf("%I64d" , &x)
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfd(x) scanf("%lf", &x)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define sfc(x) scanf("%c", &x)
#define testv(x) cerr << x << ' '
#define wtf(s) freopen((s), "w", stdout)
#define rff(s) freopen((s), "r", stdin)
#define test cerr << "here"
#define mod 1000000007
#define pi (2*acos(0))
typedef long double ld;
typedef long long ll;

int n, m;
bool vis[1003], par[1003];
vector<pair<int, int>> v[1003];

pair<pair<int, int>, int> solve(int orig, int x, int maxi)
{
    if (vis[x])
        return {{-1, -1}, INT_MAX};
    vis[x] = true;
    if (v[x].empty())
        return {{orig, x}, maxi};
    return solve(orig, v[x][0].first, min(maxi, v[x][0].second));
}

int main() {
    int x, y, z;
    vector<pair<pair<int, int>, int>> ve;
    cin >> n >> m;
    while (m--)
    {
        cin >> x >> y >> z;
        v[x].push_back({y, z});
        par[y] = true;
    }
    for (int i = 1; i <= n; i++)
        if (!par[i])
        {
            pair<pair<int, int>, int> tmp = solve(i, i, INT_MAX);
            if (tmp.second != INT_MAX)
                ve.push_back(tmp);
        }
    sort(ve.begin(), ve.end());
    cout << ve.size() << endl;
    for (int i = 0; i < ve.size(); i++)
        cout << ve[i].first.first << ' ' << ve[i].first.second << ' ' << ve[i].second << endl;
    return 0;
}