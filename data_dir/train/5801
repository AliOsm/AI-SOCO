#include <bits/stdc++.h>

using namespace std;

vector<int> bef[4005];
vector<int> cnt[4005];
vector<int> done[4005];
int a[4005];

int main() {
  int n;
  scanf("%d", &n);
  for(int i = 0; i < n; i++) {
    scanf("%d", a + i);
  }
  for(int i = 0; i < n; i++) {
    if(i) {
      bef[i] = bef[i - 1];
      if(!binary_search(bef[i].begin(), bef[i].end(), a[i - 1])) {
        bef[i].push_back(a[i - 1]);
        sort(bef[i].begin(), bef[i].end());
      }
    }
    cnt[i].resize(bef[i].size());
    done[i].resize(bef[i].size());
  }
  int ans = 1;
  for(int i = 0; i < n; i++) {
    for(int j = i - 1; j >= 0; j--) {
      int idi = lower_bound(bef[i].begin(), bef[i].end(), a[j]) - bef[i].begin();
      if(done[i][idi]) continue;
      done[i][idi] = 1;
      int idj = lower_bound(bef[j].begin(), bef[j].end(), a[i]) - bef[j].begin();
      int b = 0;
      if(idj < bef[j].size() && bef[j][idj] == a[i]) {
        b = cnt[j][idj];
      }
      cnt[i][idi] = max(cnt[i][idi], b + 1);
      ans = max(ans, cnt[i][idi] + 1);
      //printf("%d %d %d\n", i, j, cnt[i][idi]);
    }
  }
  cout << ans << endl;
  return 0;
}