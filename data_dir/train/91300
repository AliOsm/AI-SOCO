//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(2e5+5);
const ll mod=(ll)(998244353);
int c[maxn],comp[maxn],val[maxn],deg[maxn];
vector<int> al[maxn],rev_al[maxn];
int n,ctr=0,res=0,add;
vector<int> v;
bool vis[maxn];

void dfs1(int u)
{
    vis[u]=true;

    for(int x:al[u])
    {
        if(!vis[x])
        {
            dfs1(x);
        }
    }

    v.pb(u);
}

static void dfs2(int u)
{
    vis[u]=true;comp[u]=ctr;

    add=min(add,c[u]);

    for(int x:rev_al[u])
    {
        if(!vis[x])
        {
            dfs2(x);
        }
    }
}

void scc()
{
    for(int i=0;i<n;i++)
    {
        if(!vis[i])
        {
            dfs1(i);
        }
    }

    fill(vis,vis+maxn,false);

    for(int i=v.size()-1;i>=0;i--)
    {
        int x=v[i];

        if(!vis[x])
        {
            add=INT_MAX;

            dfs2(x);

            val[ctr]=add;

            ctr++;
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(0);

    cin>>n;

    for(int i=0;i<n;i++)
    {
        cin>>c[i];
    }

    for(int i=0;i<n;i++)
    {
        int x;cin>>x;

        x--;

        al[i].pb(x);

        rev_al[x].pb(i);
    }

    scc();

    for(int i=0;i<n;i++)
    {
        for(int x:al[i])
        {
            int u=comp[i],v=comp[x];

            if(u!=v)
            {
                deg[u]++;
            }
        }
    }

    for(int i=0;i<ctr;i++)
    {
        if(deg[i]==0)
        {
            res+=val[i];
        }
    }

    cout<<res<<endl;return 0;
}
