#define _CRT_SECURE_NO_WARNINGS
#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

#ifdef _DEBUG
const int N = 300000;
#else
const int N = 300000;
#endif

char a[4][4];
const int dx[4] = {1, 1, 0, 1};
const int dy[4] = {0, 1, 1, -1};

bool check1(vector <pair<int, int> > &tmp)
{
	for (int i = 0; i < 3; i++)
		if (a[tmp[i].first][tmp[i].second] != 'x') return false;
	return true;
}

bool checkInside(int x, int y)
{
	return (x >= 0 && x < 4 && y >= 0 && y < 4);
}

bool check()
{
	for (int i = 0; i < 4; i++)
		for (int j = 0; j < 4; j++)
		{
			vector <pair<int, int> > tmp;
			for (int k = 0; k < 4; k++) 
			{
				tmp.clear();
				for (int p = 0; p < 3; p++)
				{
					tmp.push_back(mp(i + p * dx[k], j + p * dy[k]));
				}
				bool flag = true;
				for (int p = 0; p < 3; p++)
					if (!checkInside(tmp[p].first, tmp[p].second)) flag = false;
				if (flag)
				{
					if (check1(tmp))
					{
						return true;
					}
				}
			}
		}
	return false;
}


int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	for (int i = 0; i < 4; i++)
		for (int j = 0; j < 4; j++) cin >> a[i][j];
	for (int i = 0; i < 4; i++)
		for (int j = 0; j < 4; j++)
			if (a[i][j] == '.')
			{
				a[i][j] = 'x';
				if (check())
				{
					cout << "YES";
					return 0;
				}
				a[i][j] = '.';
			}
	cout << "NO";
	return 0;
}