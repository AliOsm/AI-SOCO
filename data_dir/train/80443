#include <cstring>
#include <map>
#include <deque>
#include <queue>
#include <stack>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <set>
#include <complex>
#include <list>
#include <climits>
#include <cctype>
#include <bitset>
#include <list>
#include <fstream>
using namespace std;

#define all(v)              ((v).begin()), ((v).end())
#define allr(v)             ((v).rbegin()), ((v).rend())
#define clr(v, d)           memset(v, d, sizeof(v))
#define V  	                vector
#define ss 	                second
#define ff  	            first


typedef unsigned long long          ull;
typedef long long                   ll;
typedef long double                 LD;


ll suf(ll a){ return (a*(a + 1)) / 2; }
const ll  OO = 1e6 + 10, MOD = 1e6 + 3;
vector<vector<int> >adj, can;
int dx[]{1, -1, 0, 0, 1, -1, 1, -1};
int dy[]{0, 0, 1, -1, 1, -1, -1, 1};
int R[50005][7], updat[6];
ll gcd(ll a, ll b){
	if (a == 0)return b;
	gcd(b % a, a);
}
int main()
{
	std::ios_base::sync_with_stdio(0);
	cin.tie(NULL); cout.tie(NULL);
	LD  n, m, k, a, b, c, d;
	string s,s1;
	while (cin >> a >> b>> c >> d){
		swap(a, b), swap(c, d);
		int x = b * c - a * d, y = b * d;
		x = abs(x);
		int g = gcd(x, y);
		x /= g, y /= g;
		if (a / b > c / d){
			a *= y, b *= x;
			g = gcd(a, b);
			cout << ll(b / g) << "/"<< ll(a / g) << endl;
		}
		else{
			c *= y, d *= x;
			g = gcd(c, d);
			cout << ll(d / g) << "/" << ll( c / g) << endl;
		}
	}
	return 0;

}