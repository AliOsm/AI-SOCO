#include<bits/stdc++.h>
using namespace std;

# define C continue;
# define R return

# define D double
# define I insert
# define ll long long
# define ld long double

# define ull unsigned long long
# define ui unsigned int

# define pb push_back
# define pf push_front

# define vi vector < int >
# define vc vector < char >
# define vs vector < string >
# define vb vector < bool >
# define vd vector < D >
# define vll vector < ll >
# define vull vector < ull >
# define vld vector < ld >
# define PQ priority_queue

# define vvi vector < vector < int > >
# define vvb vector < vector < bool > >
# define vvc vector < vector < char > >
# define vvs vector < vs >
# define vvll vector < vector < ll > >
# define vvd vector < vector < D > >
# define vvld vector < vector < ld > >

# define all(v) (v).begin() , (v).end()
# define allrev(v) (v).rbegin() , (v).rend()
# define allcomp(v) v.begin() , v.end() , comp
# define allrevcomp(v) v.rbegin() , v.rend() , comp

# define pii pair < int , int >
# define pll pair < ll , ll >
# define pld pair < ld , ld >
# define pDD pair < D , D >

# define vpld vector < pld >
# define vpii vector < pii >
# define vpll vector < pll >
# define vpDD vector < pDD >

# define vvpii vector < vector < pii > >
# define F first
# define S second
# define mp make_pair

# define dist(a,b,p,q) sqrt((p-a)*(p-a) + (q-b)*(q-b))

# define pp(n) printf("%.10Lf",n);
# define line cout<<"\n";
# define fast ios_base::sync_with_stdio(false) ; cin.tie(0) ; cout.tie(0);

string vow = "aeiou";
int month[] = {-1, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

const int dxhorse[] = {-2, -2, -1, -1, 1, 1, 2, 2};
const int dyhorse[] = {1, -1, 2, -2, 2, -2, 1, -1};

const int dx[] = { -1 , 0 , 1 , 0 } ;
const int dy[] = { 0 , 1 , 0 , -1 } ;

const ld pie = 3.1415926535897932384626 ;
const ll mod = 1e9 + 7 ;

/// Tip : If a and b are positive integers ; we may say - ceil (a/b) = 1 + floor ( (a-1)/b ) .

const int N = 102 ;
array < int , 4 > v[N] ;

void solve ( int test_case )
{
    int n , m ;
    cin >> n >> m  ;

    int place = 1 ;
    for ( int i = n ; i > 0 ; i -- )
    {
        v[i][0] = place ;
        place += 2 ;
    }

    place = 2 ;

    for ( int i = n ; i > 0 ; i -- )
    {
        v[i][3] = place ;
        place += 2 ;
    }

    place = v[1][3] + 1 ;

    for ( int i = n ; i > 0 ; i -- )
    {
        v[i][1] = place ;
        place += 2 ;
    }

    place = v[n][1] + 1 ;

    for ( int i = n ; i > 0 ; i -- )
    {
        v[i][2] = place ;
        place += 2 ;
    }

    int row = n ;
    int bak = m ;

    while ( m )
    {
        if ( v[row][1] > 0 && v[row][1] <= bak )
        {
            cout << v[row][1] << " " ;
            v[row][1] = 0 ;
            m -- ;
        }

        else if ( v[row][0] > 0 && v[row][0] <= bak )
        {
            cout << v[row][0] << " " ; v[row][0] = 0 ;
            m --  ;
        }

        else if ( v[row][2] > 0 && v[row][2] <= bak )
        {
            cout << v[row][2] << " " ; v[row][2] = 0 ;
            m -- ;
        }

        else if ( v[row][3] > 0 && v[row][3] <= bak )
        {
            cout << v[row][3] << " " ; v[row][3] = 0 ;
            m -- ;
        }

        else row -- ;
    }

    line ;
}

int main()
{fast
    int t = 1;
    // cin >> t;

    for ( int i=1 ; i <= t ; i ++ ) solve ( i ) ;
    return 0;
}
