//Bismillah
#include <bits/stdc++.h>
using namespace std; 
#define FOR(i,begin,end) for (int i=begin;i<=end;i++)
#define rep(i,t) for (int i=0;i<t;i++)
#define pb push_back
#define mp make_pair
#define endl '\n'
typedef long long ll;

int n,m,k;
const int maxN = 1000 + 10;
char a[maxN][maxN];
bool vis[maxN][maxN];
int res[maxN*maxN]; //res[x]: mohite moallefeye x om
int cmp[maxN][maxN]; //cmp[x][y]: component number of point x,y 

void dfs(int x,int y,int comp)
{
    vis[x][y] = true;
    cmp[x][y] = comp;
    for (int i = -1 ; i <= 1 ; i++)
        for (int j = -1 ; j <= 1 ; j++)
        {
            if (abs(i)==1 && abs(j)==1)
                continue;

            int xx = x+i , yy = y+j;
            if (a[xx][yy]=='*')
                res[comp]++;
            else
            if (a[xx][yy]=='.' && !vis[xx][yy])
                dfs(xx,yy,comp);
        }
}

int main()
{
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin >> n >> m >> k;
    FOR(i,1,n)
        FOR(j,1,m)
            cin >> a[i][j];
    
    FOR(i,0,n+1)
        a[i][0] = a[i][m+1] = '#';    
    FOR(j,0,m+1)
        a[0][j] = a[n+1][j] = '#';

    int comp_num = 1;
    FOR(i,1,n)
        FOR(j,1,m)
            if (!vis[i][j] && a[i][j] == '.')
                dfs(i,j,comp_num++);

    rep(q,k)
    {
        int x,y;
        cin >> x >> y;
        cout << res[cmp[x][y]] << endl;
    }
    return 0;
}