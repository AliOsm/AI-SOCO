/*
    U FAIL U IMPROVE,
                     U SKIP U LOSE!!
                                    */
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
typedef long long int lli;
lli M=1e9+9;   
#define INF 100000000
#define sqr(x) (x) * (x)
#define bip(n) __builtin_popcount(n)//no of ones bit in binary!!
#define bictz(n) __builtin_ctz(n)//no of trailing zeroes in binary!!
#define biclz(n) __builtin_clz(n)//no of leading zeroes in binary!!
#define bffs(n) __builtin_ffs(n)//index of first one bit!!
typedef pair<lli,lli> ll;
#define mem1(a,x) fill(&a[0], &a[0] + sizeof(a) / sizeof(a[0]), x)
#define mem2(a,x) fill(&a[0][0], &a[0][0] +sizeof(a)/sizeof(a[0][0]),x)
#define mem3(a,x) fill(&a[0][0][0], &a[0][0][0] +sizeof(a)/sizeof(a[0][0][0]),x)
#define fi1 ifstream fin("input.txt")
#define of1 ofstream fout("output.txt")
typedef tree<lli,null_type,less<lli>,rb_tree_tag,tree_order_statistics_node_update> ost;
lli n,k,m,t,q,z;
const double pi=3.14159265358979323846;
//unordered_map<pair<ll,lli>,lli> mp;
lli me(lli a,lli b,lli M)
{
    if(b==0)
    return 1;
    else if(b%2==0)
    return me((a*a)%M,b/2,M);
    else
    return (a%M*me((a*a)%M,(b-1)/2,M)%M)%M;
}
lli mI(lli a,lli m)
{
    return me(a,m-2,m);
}
vector<int> pf(string s) {
    int n = (int)s.length();
    vector<int> pi(n);
    for (int i = 1; i < n; i++) {
        int j = pi[i-1];
        while (j > 0 && s[i] != s[j])
            j = pi[j-1];
        if (s[i] == s[j])
            j++;
        pi[i] = j;
    }
    return pi;
}
//lli vis[305][305];
//lli a[500005];
//lli good[5005][5005];
//string s;
//map<lli,lli> vis;
//map<lli,lli> ml;
//vector<ll> v[2000005];
//lli mx=0;
lli ff=0;
unordered_map<lli,lli> mm,mm1,mm2;
struct edge
{
    lli first,second,third;
};
vector<edge> vv;

vector<lli> v[200005];
//set<lli> s;
map<lli,lli> mk;
//int f=0;
map<ll,lli> bb;
//lli mx=-1;
//lli a[200005];
lli mi=1e18;
ll p[200005];
lli mx=1;
//set<lli> s;
lli hpy,atky,defy,hpm,atkm,defm,h,d,fl;
map<ll,lli> allow;
lli a[300005];
lli tot=1e18;
map<ll,lli> vis;
string s1="\0";
string s2="\0";
string s;
string ss;
lli f=0;
map<ll,lli> ml;
void solve(lli i,lli j,lli cnt,lli pi,lli pj)
{
    if(i==n&&j==n)
    return;
    if(s[cnt]=='S')
    {
            ml[{i,j}]='S';
            solve(i+1,j,cnt+1,i,j);
    }
    else
    {
            ml[{i,j}]='E';
            solve(i,j+1,cnt+1,i,j);
    }
}
string hh;
string ans;
void solve1(lli i,lli j,lli cnt)
{
    if(i>n||j>n)
    return;
    if(i==n&&j==n)
    {
        ans=hh;
        return;
    }
    if(ml[{i,j}])
    {
        lli d='S';
        if(ml[{i,j}]==d)
        {
            hh+='E';
            solve1(i,j+1,cnt+1);
            hh.pop_back();
        }
        else
        {
            hh+='S';
            solve1(i+1,j,cnt+1);
            hh.pop_back();
        }
    }
    else
    {
        if(i<=n&&j+1<=n)
        {
        hh+='E';
            solve1(i,j+1,cnt+1);
            hh.pop_back();
        }
        else
        {
            hh+='S';
            solve1(i+1,j,cnt+1);
            hh.pop_back();
        }
    }
}
int main()
{
cin>>n;
set<ll,greater<ll>> s;
set<ll> s1;
for(int i=1;i<=n;i++)
{
    cin>>a[i];
    s.insert({i,a[i]});
    s1.insert({i,a[i]});
}
lli d=s1.begin()->second;
lli d1=s.begin()->second;
if(d!=d1)
{
    cout<<(s.begin()->first-s1.begin()->first);
}
else
{
    lli mx=0;
    for(auto &i:s1)
    {
        if(i.second!=d1)
        mx=max(mx,s.begin()->first-i.first);
    }
    for(auto &i:s)
    {
        if(i.second!=d)
        mx=max(mx,i.first-s1.begin()->first);
    }
    cout<<mx;
}
}