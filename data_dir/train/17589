#include <bits/stdc++.h>

using namespace std;

#define debug(x) '[' << #x << " is: " << x << "] "
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int nax = 2e5 + 100;

vector<int> g[nax];
int par[nax];
int mx,st;

void go(int u,int p = 0,int dist =0){
    if(dist > mx){
        mx = dist;
        st = u;
    }
    par[u] = p;
    for(int v : g[u]){
        if(v == p)continue;
        go(v,u,dist+1);
    }
}


int main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.precision(10);
    cout << fixed;
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
    #endif
    int n;
    cin>>n;
    for(int i=0;i<n-1;i++){
        int u,v;
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }       
    go(1);
    mx=0;
    int bf = st,tmp = bf;
    go(st);
    int ans = mx;
    mx=1e9;
    go(st);
    // cout << st << ' ' << bf << endl;
    int best = par[bf];
    queue<int> q;
    vector<int> cost(n+1,1e9);

    while(bf){
        q.push(bf);
        cost[bf] = 0;
        // cout << bf << ' ' << par[bf] << endl;
        bf = par[bf];
    }
    mx=0;
    while(q.size()){
        int u = q.front();
        q.pop();
        if(cost[u] > mx){
        // cout << u << ' ' << cost[u] << *endl;
            mx = cost[u];
            best = u;
        }
        for(int v : g[u]){
            if(cost[v] != 1e9)continue;
            cost[v] = cost[u] + 1;
            q.push(v);
        }
    }
    ans+=mx;
    cout << ans << '\n';
    cout << st << ' ' << tmp << ' ' << best << endl;
}