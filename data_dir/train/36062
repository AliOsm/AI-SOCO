#include <bits/stdc++.h>
using namespace std;

const int inf = 1e9+7;

struct Task {
	int n;
	vector<vector<int>> g;
	vector<int> color;

	Task(int n): n(n), g(n), color(n) {
		for (int i = 0; i < n - 1; ++i) {
			int x, y;
			cin >> x >> y;
			--x; --y;
			g[x].push_back(y);
			g[y].push_back(x);
		}
	}

	void dfs(int v, int pr, int c) {
		int cur = 1;
		for (auto& to : g[v]) {
			if (to == pr) {
				continue;
			}
			while (cur == color[v] || cur == c) {
				++cur;
			}
			color[to] = cur++;
			dfs(to, v, color[v]);
		}
	}

	void run() {
		color[0] = 1;
		dfs(0, -1, 0);
		cout << *max_element(color.begin(), color.end()) << '\n';
		for (auto& item : color) {
			cout << item << ' ';
		}
		cout << '\n';
	}
};

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);

	int t = 1;
	while (t--) {
		int n;
		cin >> n;
		Task a(n);
		a.run();
	}
	return 0;
}