#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define ll int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
const ll M=5002;
ll a[M];
ll dp[M][M][2][2],n;
ll solve(ll i,ll rem,ll f,ll t=0)
{
	ll prv;
	if(i==n+1)
	{
		if(rem<=0)
			return 0;
		return 6e8;
	}
	if(dp[i][rem][f][t]!=-1)
		return dp[i][rem][f][t];
	dp[i][rem][f][t]=2e9;
	if(f==1)
	{
		if(a[i+1]>=a[i])
		{
			prv=a[i+1];
			a[i+1]=a[i]-1;
			dp[i][rem][f][t]=min(solve(i+1,rem-1,0,1)+prv-a[i+1],dp[i][rem][f][t]);
			a[i+1]=prv;
			if(a[i+1]!=a[i])
				dp[i][rem][f][t]=min(dp[i][rem][f][t],solve(i+1,rem,1));
			else
			{
				dp[i][rem][f][t]=min(solve(i+1,rem,0),dp[i][rem][f][t]);
			}
		}
		else
		{
			dp[i][rem][f][t]=min(dp[i][rem][f][t],solve(i+1,rem-1,0));
			prv=a[i];
			a[i]=a[i+1]-1;
			dp[i][rem][f][t]=min(dp[i][rem][f][t],solve(i+1,rem,1)+prv-a[i]);
			a[i]=prv;
		}
	}
	else
	{
		if(a[i+1]>a[i])
		{
			dp[i][rem][f][t]=min(solve(i+1,rem,1),dp[i][rem][f][t]);
		}
		else
		{
			prv=a[i];
			a[i]=a[i+1]-1;
			dp[i][rem][f][t]=min(solve(i+1,rem,1)+prv-a[i],dp[i][rem][f][t]);
			a[i]=prv;
			dp[i][rem][f][t]=min(solve(i+1,rem,0),dp[i][rem][f][t]);
		}
	}
	return dp[i][rem][f][t];
}
int main()
{
	ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll i;	
	memset(dp,-1,sizeof(dp));
	cin>>n;
	for(i=1;i<=n;i++)
		cin>>a[i];
	for(i=1;i<=n/2+n%2;i++)
		cout<<solve(1,i,1,0)<<" ";
	cout<<"\n";
	return 0;
}