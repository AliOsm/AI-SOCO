//██████╗ ██╗   ██╗██╗      ██████╗ ███████╗
//██╔══██╗██║   ██║██║      ██╔══██╗██╔════╝
//██████╔╝██║   ██║██║█████╗██║  ██║█████╗
//██╔══██╗██║   ██║██║╚════╝██║  ██║██╔══╝
//██║  ██║╚██████╔╝██║      ██████╔╝███████╗
//╚═╝  ╚═╝ ╚═════╝ ╚═╝      ╚═════╝ ╚══════╝
#include <bits/stdc++.h>


// #pragma GCC target("sse,sse2,sse3,ssse3,sse4")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
using namespace std;

#define fst first
#define snd second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back

#define all(v) (v).begin(), (v).end()
#define sz(v) ((int)(v).size())
#define sqr(x) ((x) * (x))

typedef long long ll;
typedef  double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector<int> vi;

#define next ajksdslk
#define prev aklsfjk

mt19937_64 mt_rand(chrono::system_clock::now().time_since_epoch().count());

template<typename T1, typename T2> inline bool upmax(T1& a, T2 b) { return (a < b ? (a = b, true) : false); }
template<typename T1, typename T2> inline bool upmin(T1& a, T2 b) { return (b < a ? (a = b, true) : false); }

const int maxn = (int) 5e6 + 100;
const int maxlog = 21;
const int base = 998244353;
const ld eps = (ld) 1e-9;
const ld PI = acos(-1.);
//const int pp = 41;
const int inf = 2e9;
const ll llinf = 1e18;


int n, k;
int f[2222][4444];
int a[maxn];

int bp(int a, int n) {
  int res = 1;
  while (n) {
    if (n & 1) res = 1ll * res * a % base;
    a = 1ll * a * a % base;
    n >>= 1;
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);
#ifdef LOCAL
  freopen ("input.txt", "r", stdin);
#endif

  cin >> n >> k;
  for (int i = 0; i < n; i ++) {
    cin >> a[i];
  }

  f[0][n] = 1;
  for (int i = 0; i < n; i ++) {
    for (int diff = - i; diff <=  i ; diff ++) {
      int add = f[i][diff + n];

      if (a[i] == a[ (i + 1) % n ]) {
        (f[i + 1][ diff + n ] += 1ll * add * k % base) %= base;
      } else {
        (f[i + 1][diff + 1 + n] += add) %= base;
        (f[i + 1][diff - 1 + n] += add) %= base;
        (f[i + 1][ diff + n ] += 1ll * add * (k - 2) % base) %= base;
      }
    }
  }
  int ans = 0;
  for (int i = 1; i <= n; i ++) {
    (ans += f[n][i + n]) %= base;
  }
  cout << ans << "\n";


  return 0;
}