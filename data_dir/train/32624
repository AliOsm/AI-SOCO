#include <bits/stdc++.h>

#define f first
#define s second
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)((x).size())
#define sqr(x) ((x)*(x))

using namespace std;

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;

const int maxn = (int)1e5 + 5;
const int inf = (int)1e9;
const int mod = (int)1e9 + 7;
const ll INF = (ll)1e18;
const double eps = 1e-9;

int p[maxn];
int h[maxn];
ll sum[maxn];
ll ans[maxn];
int n, a[maxn], b[maxn];
char u[maxn];
ll mx;

int par(int v) {
 	return p[v] == v ? v : p[v] = par(p[v]);
}                        

void uni(int x, int y) {
 	if(h[x] > h[y]) 
		p[y] = x, sum[x] += sum[y];
	else if(h[x] < h[y])
		p[x] = y, sum[y] += sum[x];
	else
		p[y] = x, h[x]++, sum[x] += sum[y];	
}

int main() {
	
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i) {
		scanf("%d", a + i);
		p[i] = i;
		h[i] = 1;
		sum[i] = a[i];
	}
	for(int i = 1; i <= n; ++i)
		scanf("%d", b + i);

	for(int i = n; i >= 1; --i) {
		int x = b[i];
		if(x > 1 && u[x-1]) {
			uni(par(x), par(x-1));
		}
		if(x < n && u[x+1])  {
			uni(par(x), par(x+1));
		}
		mx = max(mx, sum[par(x)]);
		ans[i-1] = mx;
		u[x] = 1;
	}

	for(int i = 1; i <= n; ++i)
		printf("%lld\n", ans[i]);
	return 0;
}