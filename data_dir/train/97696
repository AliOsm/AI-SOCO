//https://codeforces.com/blog/entry/47457
#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.141592654
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
#define input ios_base::sync_with_stdio(0);cin.tie(0);
//#define x real()
//#define y imag()
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef complex<double> point;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<30> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
int n,m,mem[1000004][6][6],c[1000006],x;
int dp(int i=1,int p1=0,int p2=0)
{
    if(i>m)return 0;
    int&ret=mem[i][p1][p2];
    if(~ret)return ret;
    ret=-1e9;
    int num=c[i]-p1;
    forr(j,0,min(2,num))
    {
        int g=min(j,c[i+1]-p2);
        g=min(g,c[i+2]);
        ret=max(ret,dp(i+1,p2+g,g)+g+(num-j)/3);
    }
    return ret;
}
int main()
{

//cout<<Pow((ll)1000000,(ll)110);
//freopen("CAMP.IN","r",stdin);
//freopen("CAMP.OUT","w",stdout);
//    char input[15];
//    scanf("%s", &input);  array of char
//  gets(c+1);  array of char
input;
cin>>n>>m;
forr(i,1,n)
{
    cin>>x;
    c[x]++;
}
memset(mem,-1,sizeof mem);
cout<<dp();
return 0;
}
