//============================================================================
// Name        : hoba.cpp :)
// Author      : (O_O Diab) (Why_not) (el 3AQ)
// Copyright   : please, Don't touch me :(
// Description : problem in C++
// MAIN IDEA   :
//============================================================================
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define F first
#define S second
#define pf push_front
#define lp(i,a,b) for (int i=a;i<=(int)b;++i)
#define lp2(i,a,b) for (ll i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define p(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vs vector<string>
#define vl vector<ll>
#define vii vector<pii>
#define vll vector<pll>
#define re return
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define EPS 1e-6
// to convert string to number use int a = stoi(string);
// to convert number to string use string s = to_string(int);
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define clr(c,x) memset(c,x,sizeof(c));
using namespace std;
const ll INFL = 0x3f3f3f3f3f3f3f3fLL;
const int dx[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
const int N = 1e5 + 5, mod = (int) 1e9 + 7, INF = 0x3f3f3f3f, ALPHA = 26;
char arr[4][4];
inline bool solve(char ch) {
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			int endx = i + 1;
			int endy = j + 1;
			if (endx == 4 || endy == 4)
				continue;
			bool mynf34 = false;
			for (int startx = i; startx <= endx; startx++) {
				for (int starty = j; starty <= endy; starty++) {
					if (arr[startx][starty] == ch) {
						mynf34 = true;
						break;
					}
				}
			}
			if (!mynf34)
				return true;
		}
	}
	return false;
}
int main() {
#ifdef ONLINE_JUDGE
    FAST;
#endif
	for (int i = 0; i < 4; ++i)
		for (int j = 0; j < 4; j++)
			cin >> arr[i][j];
	for (int i = 0; i < 4; ++i) {
		for (int j = 0; j < 4; j++) {
			if (solve('.') || solve('#')) {
				cout << "YES\n";
				return 0;
			}
			if (arr[i][j] == '#') {
				arr[i][j] = '.';
				if (solve('.') || solve('#')) {
					cout << "YES\n";
					return 0;
				}
				arr[i][j] = '#';
			} else {
				arr[i][j] = '#';
				if (solve('.') || solve('#')) {
					cout << "YES\n";
					return 0;
				}
				arr[i][j] = '.';
			}
		}
	}
	cout << "NO\n";
	return 0;
}