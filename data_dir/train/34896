#include <bits/stdc++.h>
#define SZ(x) (int)x.size()
const int SZ=2e5+5;
using namespace std;

bool isOpen(char x)
{
    return (x=='(' || x=='{' || x=='[' || x=='<');  
}
bool isClose(char x)
{
    return (x==')' || x=='}' || x==']' || x=='>');  
}

bool isSame(char a,char b)
{
    return ( (a=='('&&b==')') || (a=='['&&b==']') ||
             (a=='{'&&b=='}') || (a=='<'&&b=='>') );
}

int main()
{
    stack<char> bracket;
    string s; cin>>s;
    int res=0;
    
    for(int i=0;i<SZ(s);i++)
    {
        if(isOpen(s[i]))
            bracket.push(s[i]);
        else
        {
            if(SZ(bracket)==0)
                {cout<<"Impossible"; return 0;}

            char x=bracket.top();
            bracket.pop();

            if(isClose(x))
                {cout<<"Impossible"; return 0;}
            if(!isSame(x,s[i]))
                res++;
        }
    }
    
    if(SZ(bracket))
        cout<<"Impossible";
    else
        cout<<res;
}