#include <bits/stdc++.h>

using namespace std;

int cost[82][82], dp[82][82][82][82], n, m, k;
bool u[82][82][82][82];

int calc(int l, int r, int pos, int need) {
  	if (u[l][r][pos][need]) return dp[l][r][pos][need];
 	u[l][r][pos][need] = 1;
  	int &ans = dp[l][r][pos][need];
  	ans = 1e9;
  	if (need == 1) {
    	ans = 0;
   		return dp[l][r][pos][need] = ans;
  	}
  	for (int i = l + 1;i < pos;i++) {
    	if (cost[pos][i]) {
    	  ans = min(ans, calc(l, pos, i, need - 1) + cost[pos][i]);
    	}
  	}
  	for (int i = pos + 1;i < r;i++) {
    	if (cost[pos][i]) {
      		ans = min(ans, calc(pos, r, i, need - 1) + cost[pos][i]);
    	}
  	}
	return dp[l][r][pos][need] = ans;
}

int main () {
	cin >> n >> k >> m;
	while (m --) {
		int x, y, z;
		cin >> x >> y >> z;
		if(!cost[x][y])
			cost[x][y] = z;
		else
			cost[x][y] = min(z, cost[x][y]);
	}
	
	int ans = 1e9;
	for (int i = 1;i <= n; i ++) {
		ans = min(ans, calc(0, n + 1, i, k));
	}
	cout << (ans == 1e9 ? -1 : ans) ;
}