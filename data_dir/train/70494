#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef pair<double, double> pdd;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
int ctz(uint x) {return __builtin_ctz(x);}
int ctzll(ull x) {return __builtin_ctzll(x);}
int clz(uint x) {return __builtin_clz(x);}
int clzll(ull x) {return __builtin_clzll(x);}
int popcnt(uint x) {return __builtin_popcount(x);}
int popcntll(ull x) {return __builtin_popcountll(x);}
int bsr(uint x) {return 31^clz(x);}
int bsrll(ull x) {return 63^clzll(x);}

#define N 1000016
#define MX 10000016
#define INF 1000000000000000ULL

uint f[MX][2];
uint a[N];

void upd(uint h[2], uint i)
{
    uint ah1 = a[h[1]], ai = a[i];
    if (ah1 > a[i]) {
        h[1] = i;
        ah1 = ai;
        if (a[h[0]] > ah1) swap(h[0], h[1]);
    }
}

int main()
{
    canhazfast();

    int n;
    uint mx = 0;
    uint ansi = 0, ansj = 0;
    ull lo = INF;

    cin >> n;
    a[0] = MX;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
        mx = max(mx, a[i]);
        if (f[a[i]][0]) f[a[i]][1] = i;
        else f[a[i]][0] = i;
    }
    for (uint i = mx; i > 0; --i) {
        uint g[2] = {};
        for (uint j = i; j <= mx; j += i) {
            for (uint k : f[j]) upd(g, k);
        }
        uint x = g[0], y = g[1];
        if (x && y) {
            ull tmp = (ull)a[x]*a[y]/gcd(a[x], a[y]);
            if (lo > tmp) {
                lo = tmp;
                ansi = x;
                ansj = y;
            }
        }
    }
    cout << min(ansi, ansj) << ' ' << max(ansi, ansj) << '\n';

    return 0;
}
