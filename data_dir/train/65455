#pragma optimization_level 3
//#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC target("avx,avx2,fma")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("sumsqr.in");ofstream out("sumsqr.out");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int a,b,k;
str x,y;

int main() {
    fast;
    cin>>a>>b>>k>>x>>y;
    vec<vec<int>> nos(a, vec<int>(b));
    for(int q=0; q<a; q++){
        for(int w=0; w<b; w++){
            if(x[q]==y[w]){
                nos[q][w] = 1+(q&&w ? nos[q-1][w-1] : 0);
            }
            else{
                nos[q][w] = 0;
            }
        }
    }
    vec<vec<vec<int>>> dp(a, vec<vec<int>>(b, vec<int>(k)));
    for(int q=0; q<a; q++){
        for(int w=0; w<b; w++){
            for(int e=0; e<k; e++){
                dp[q][w][e] = max((q ? dp[q-1][w][e] : 0), (w ? dp[q][w-1][e] : 0));
                int d = nos[q][w];
                if(d){
                    dp[q][w][e] = max(dp[q][w][e], (min(q,w)-d>=0 && e ? dp[q-d][w-d][e-1] : 0)+d);
                }
            }
        }
    }
    cout<<dp[a-1][b-1][k-1];
}
