#include <bits/stdc++.h>
#define LL long long
#define pb push_back
#define mp make_pair
using namespace std;

int n,pos[100100],a[100100];
vector<pair<int,int> > vec;
bool mark[100100]={0};
vector<int> primes;

int bs(int l,int r,int x){
	if(l>r) return -1;
	int mid = (l+r)/2;
	if(primes[mid]<=x) return max(primes[mid],bs(mid+1,r,x));
	else return bs(l,mid-1,x);
}

int main() {
	int x;
	mark[0]=mark[1]=1;
	for(LL i=4;i<=100000;i+=2) mark[i]=1;
	for(LL i=3;i<=100000;i+=2){
		if(!mark[i]){
			for(LL j=i*i;j<=100000;j+=i) mark[j]=1;
		}
	}
	primes.pb(2);
	for(int i=3;i<=100000;i+=2) if(!mark[i]) primes.pb(i);
	cin>>n;
	for(int i=1;i<=n;i++) cin>>a[i],pos[a[i]]=i;
	for(int i=1;i<=n;i++){
		//for(int i=1;i<=n;i++) cout<<a[i]<<" ";cout<<endl;
		//for(int i=1;i<=n;i++) cout<<pos[i]<<" ";cout<<endl;
		//cout<<i<<" "<<pos[i]<<endl;
		if(pos[i]==i) continue;
		if(!mark[pos[i]-i+1]){
			vec.pb(mp(i,pos[i]));
			int temp = a[i];
			swap(a[pos[i]],a[i]);
			swap(pos[temp],pos[i]);
		}
		else{
			while(pos[i]!=i){
				x = bs(0,primes.size(),pos[i]-i+1);//cout<<x<<endl;
				x = pos[i]-x+1;//cout<<x<<endl;
				vec.pb(mp(x,pos[i]));
				int temp = a[x];
				swap(a[x],a[pos[i]]);
				swap(pos[temp],pos[i]);
			}
			// for(int j=i+1;j<=n;j++){
			// 	if(!mark[pos[i]-j+1]){
			// 		vec.pb(mp(j,pos[i]));
			// 		int temp = a[j];
			// 		swap(a[j],a[pos[i]]);
			// 		swap(pos[temp],pos[i]);
			// 		vec.pb(mp(i,j));
			// 		temp=a[i];
			// 		int temp2 = a[j];
			// 		swap(a[i],a[j]);
			// 		swap(pos[temp],pos[temp2]);//cout<<i<<" "<<j<<" C"<<endl;
			// 		break;
			// 	}
			// }
		}
	}
	cout<<vec.size()<<endl;
	for(int i=0;i<vec.size();i++){
		cout<<vec[i].first<<" "<<vec[i].second<<endl;
	}
	return 0;
}