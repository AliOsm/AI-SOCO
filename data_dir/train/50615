		//			- -- --- ---- -----be name khoda----- ---- --- -- -			\\

#include <bits/stdc++.h>
using namespace std;

const int N = 1 << 18;

struct Seg {
	int s[N * 2], n;
	void add(int i, int value)
	{
		for(i += N; i; i /= 2)
			s[i] += value;
	}
	int get(int i, int id = 1, int st = 0, int e = N)
	{
		if(s[id] <= i)
			return -1;
		if(id >= N)
		{
			assert(!i);
			return st;
		}
		int mid = (st + e)/2;
		int x = get(i, id * 2, st, mid);
		if(x != -1)
			return x;
		return get(i - s[id * 2], id * 2 + 1, mid, e);
	}
	int sum(int r)
	{
		int res = 0;
		for(r += N; r; r/= 2)
			if(r % 2)
				res += s[--r];
		return res;
	}
} sA, sB, sC;

int a[N], b[N], c[N], d[N], n;

int main()
{
	ios::sync_with_stdio(0); cin.tie(0);
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> a[i];
	for(int i = 0; i < n; i++)
		cin >> b[i];
	for(int i = 0; i < n; i++)
	{
		sA.add(i, 1);
		sB.add(i, 1);
		sC.add(i, 1);
	}
	for(int i = 0; i < n; i++)
	{
		int xA = sA.sum(a[i]);
		sA.add(a[i], -1);
		int xB = sB.sum(b[i]);
		sB.add(b[i], -1);
		c[i] = xA + xB;
	}
	for(int i = n - 1; i; i--)
	{
		int m = (n - i);
		c[i - 1] += c[i] / m;
		c[i] %= m;
	}
	c[0] %= n;
	for(int i = 0; i < n ;i++)
	{
		int x = sC.get(c[i]);
		sC.add(x, -1);
		d[i] = x;
	}
	for(int i = 0; i < n; i++)
		cout << d[i] << " ";
	cout << endl;
}
