#include<bits/stdc++.h>
using namespace std;
#define int long long int
#define double long double
#define pb push_back
#define endl '\n'
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define sz(a) (int)((a).size())
#define fuck() cout<<"--------"<<endl
#define see(x) cout<<#x<<" = "<<x<<endl
#define see2(x,y) cout<<#x<<" = "<<x<<"::"<<#y<<" = "<<y<<endl 
const int mod=998244353;
typedef pair<int,int> pii;
const int N=5000+5;
int fac[N],ifac[N];
int mult(int a,int b){
    int res=a;
    res*=b;
    if(res>=mod){
        res%=mod;
    }
    return res;
}
int add(int a,int b){
    int res=a+b;
    if(res>=mod){
        res%=mod;
    }
    return res;
}
int expo(int base,int exponent){
    int ans=1;
    base%=mod;
    while(exponent!=0){
        if(exponent&1) ans=(1LL*ans*base)%mod;
        base=(1LL*base*base)%mod;
        exponent>>=1;
    }
    return ans%mod;
}
int modinv(int k){
    return expo(k,mod-2);
}
void fac_process(){
    fac[0]=1;
    for(int i=1;i<N;i++){
        fac[i]=fac[i-1]*i;
        fac[i]%=mod;
    }
    ifac[N-1]=modinv(fac[N-1]);
    for(int i=N-2;i>=0;i--){
        ifac[i]=ifac[i+1]*(i+1);
        ifac[i]%=mod;
    }
}
int nCr(int n,int r){
    if(r>n)return 0;
    int ans=fac[n];
    ans%=mod;
    ans*=ifac[n-r];
    ans%=mod;
    ans*=ifac[r];
    ans%=mod;
    return ans;
}
int32_t main()
{
    ios_base::sync_with_stdio(0); cin.tie(0);cout.tie(0);
    int a,b,c;
    fac_process();
    cin>>a>>b>>c;
    int ans1=0,ans2=0,ans3=0;
    for(int i=0;i<=min(a,b);i++){
        ans1=add(ans1,mult(mult(nCr(a,i),nCr(b,i)),fac[i]));
    }
    for(int i=0;i<=min(b,c);i++){
        ans2=add(ans2,mult(mult(nCr(b,i),nCr(c,i)),fac[i]));
    }
    for(int i=0;i<=min(a,c);i++){
        ans3=add(ans3,mult(mult(nCr(a,i),nCr(c,i)),fac[i]));
    }
    cout<<mult(ans1,mult(ans2,ans3));
}