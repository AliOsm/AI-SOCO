#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn=1e5+5;
ll seg[4*maxn][21];
ll all[4*maxn];
ll n,a[maxn],q;
bool mark[4*maxn];
inline void init(int s,int e,int tag){
	if(s==e){
		for(int i=0 ; i<21 ; i++)
			seg[tag][i]= ((a[s]>>i)&1);
		return ;
	}
	int mid=(s+e)/2;
	init(s,mid,tag*2);
	init(mid+1,e,tag*2+1);
	for(int i=0 ; i<21 ; i++)
		seg[tag][i]=seg[tag*2][i]+seg[tag*2+1][i];
}
inline void go(int s,int e,int mid,int tag){
	if(!mark[tag])return ;
	mark[tag*2]=mark[tag*2+1]=true;
	mark[tag]=false;
	all[tag*2] ^= all[tag];
	all[tag*2+1] ^= all[tag];
	for(int i=0 ; i<21 ; i++)if(1&(all[tag]>>i)){
		seg[tag*2][i]=(mid-s+1)-seg[tag*2][i];
		seg[tag*2+1][i]=(e-mid)-seg[tag*2+1][i];
	}
	all[tag]=0;
}
inline void add(int s,int e,int tag,int L,int R,int val){
	if(s>R || e<L)
		return ;
	if(s>=L && e<=R){
		all[tag] ^= val;
		for(int i=0 ; i<21 ; i++)
			if((val>>i)&1)
				seg[tag][i]=(e-s+1)-seg[tag][i];
		mark[tag]=true;
		return ;
	}
	int mid=(s+e)/2;
	go(s,e,mid,tag);
	add(s,mid,tag*2,L,R,val);
	add(mid+1,e,tag*2+1,L,R,val);
	for(int i=0 ; i<21 ; i++)
		seg[tag][i]=seg[tag*2][i]+seg[tag*2+1][i];
}
inline ll get(int s,int e,int tag,int L,int R){
	if(s>R || e<L)
		return 0;
	if(s>=L && e<=R){
		ll tmp=0;
		for(int i=0 ; i<21 ; i++)
			tmp += (1ll<<i)*seg[tag][i];
		return tmp;
	}
	int mid=(s+e)/2;
	go(s,e,mid,tag);
	return get(s,mid,tag*2,L,R)+get(mid+1,e,tag*2+1,L,R);
}
int main(){
	scanf(" %lld",&n);
	for(int i=1 ; i<=n ; i++)scanf(" %lld",&a[i]);
	init(1,n,1);scanf(" %lld",&q);
	while(q--){
		int t,x,y,z;
		scanf(" %d %d %d",&t,&x,&y);
		if(t==2){
			scanf(" %d",&z);
			add(1,n,1,x,y,z);
		}
		else{
			ll ans=get(1,n,1,x,y);
			printf("%lld\n",ans);
		}
	}
	return 0;
}
