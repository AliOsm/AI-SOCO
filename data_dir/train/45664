/**
*
* Author: Mouhanad
* Lang: GNU C++14
*
**/
#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >
typedef long long ll;
const int inf = 1<<30;
const int N =100100;
int n , m;
vector < pair < int , ii > > edge ;
bool prime[1000006];
void sieve( int lower){

for(int i=2;i<lower ;i++)prime[i]=1;
prime[0]=prime[1]=0;

for(int i=2;i*i<lower;i++)
    if( prime[i] )
        for(int j=i*i;j<lower;j+=i){
            prime[j]=0;
        }

}
vector < int > pri ;
int main ( ){
 sieve( 400000);
 for ( int i = 1; i  <= 500005 ; i++ ) if ( prime[i] ) pri.push_back(i);
 scanf("%d %d",&n ,&m);
 m--;
 edge.push_back({1,{n,3}});
 ll sum = 3LL ;
 for ( int i = 2 ; i <= n-1 ; i++ ){
   //  cerr << n << "*" << m <<endl;;
     m--;
     edge.push_back({1,{i,3}});
     sum += 3LL ;
 }
  if ( !prime[sum]){
    pair < int , ii > tmp = edge.back();
    edge.pop_back();
    int x = lower_bound(pri.begin(), pri.end() , sum ) - pri.begin();
    tmp.S.S += pri[x]-sum ;
    edge.push_back(tmp);
     sum = pri[x] ;
  }

  for ( int i = 2 ; i <= n ; i++ ){
      bool st = 0 ;
    for ( int j = i+1 ; j <= n ; j++ ){
           if ( m <= 0 ){
            st = 0 ;
            break;
           }
           edge.push_back({i,{j,1000000000}});
           m-- ;
    }
    if ( st ) break;
  }
  printf("%d %lld\n" , 3 , sum );
  for ( auto x : edge ){
    printf("%d %d %d\n", x.F , x.S.F , x.S.S );
  }
return 0 ;
}
