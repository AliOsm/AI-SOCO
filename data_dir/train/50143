#define _USE_MATH_DEFINES

#include <iostream>
#include <cstdio>
#include <string>
#include <cstdlib>
#include <set>
#include <utility>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <cmath>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>
#include <functional>
#include <cassert>
#include <chrono>
#include <memory>

using namespace std;

#define int long long
//region TEMPLATE
////@formatter:off
#define double long double
typedef long long ll;
typedef unsigned long long ull;
template<typename T>void __read(T &a) { cin >> a; }
template<typename T, typename ... Args> void __read(T &a, Args &... args) { cin >> a;__read(args...);}
#define make(t, ...) t __VA_ARGS__; __read(__VA_ARGS__)
#define makev(a, n) VI a(n); FOR(n) cin >> a[i];
#define ALL(x) (x).begin(), (x).end()
#define RALL(x) (x).rbegin(), (x).rend()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(signed i = 0; i <(b); i++)
#define FORE(i, l, r) for(int i = (l); i < (r); i++)
#define NFOR(i, n) for(int i = (((int) n)-1); i >= 0; i--)
typedef vector<int> VI;
typedef vector<vector<int>> VVI;
typedef pair<int, int> PII;
typedef pair<pair<int, int>, int> PPII;
constexpr ll M7 = 1000000007ll;
constexpr ll M9 = 1000000009ll;
constexpr ll MFFT = 998244353ll;
template<class T> void outv(T &a) { for (auto &x : a) cout << x << ' '; }
static mt19937 rnd(static_cast<unsigned>(chrono::steady_clock::now().time_since_epoch().count())); // NOLINT(cert-err58-cpp)
auto __fast_io__ = (ios_base::sync_with_stdio(false), cin.tie(nullptr)); // NOLINT(cert-err58-cpp,cppcoreguidelines-interfaces-global-init)
////@formatter:on
//endregion

void solve1() {
    make(int, t);
    while (t--) {
        make(int, n);
        int cnt = 0;
        FOR(n) {
            make(int, q);
            cnt += q & 1;
        }
        if (cnt == 0 || cnt == n) {
            cout << "YES\n";
        } else {
            cout << "NO\n";
        }
    }
}

void solve2() {
    make(int, t);
    while (t--) {
        make(int, n);
        makev(a, n);
        for (int i = 0; i < n; ++i) {
            for (int j = i + 2; j < n; ++j) {
                if (a[i] == a[j]) {
                    cout << "YES\n";
                    goto end;
                }
            }
        }
        cout << "NO\n";
        end:;
    }
}

void solve3() {
    make(int, t);
    while (t--) {
        make(string, s);
        s.insert(s.begin(), 'R');
        s.push_back('R');
        int d = 0;
        for (int i = 0; i < s.length(); ++i) {
            int j = i + 1;
            while (j < s.length() && s[j] == 'L') {
                j++;
            }
            d = max(d, j - i);
        }
        cout << d << '\n';
    }
}

void solve4() {
    make(int, n);
    VI d(n);
    for (int i = 0; i < n; ++i) {
        cin >> d[i];
    }
    for (int i = 0; i < n; ++i) {
        make(int, q);
        d[i] -= q;
    }
    sort(ALL(d));
    int r = n;
    int cnt = 0;
    for (int l = 0; l < n; ++l) {
        while (r > l && d[r - 1] + d[l] > 0) {
            r--;
        }
        r = max(r, l + 1);
        cnt += n - r;
    }
    cout << cnt;
}

void solve5() {
    make(int, n, h, l, r);
    VI dp(h, -M7);
    dp[0] = 0;
    for (int i = 0; i < n; ++i) {
        make(int, q);
        VI ndp(h, -M7);
        for (int j = 0; j < h; ++j) {
            for (int x : {q - 1, q}) {
                int nj = (j + x) % h;
                int d = l <= nj && nj <= r;
                ndp[nj] = max(ndp[nj], dp[j] + d);
            }
        }
        dp = move(ndp);
    }
    cout << *max_element(ALL(dp));
}

void solve6() {
    make(int, n);
    makev(c, n);
    VVI g(n);
    for (int i = 1; i < n; ++i) {
        make(int, v, u);
        v--, u--;
        g[v].push_back(u);
        g[u].push_back(v);
    }
    VI b(n);
    function<void(int, int)> dfs = [&](int v, int p) {
        b[v] = c[v] == 0 ? -1 : 1;
        for (int u : g[v]) {
            if (u != p) {
                dfs(u, v);
                b[v] += max(0ll, b[u]);
            }
        }
    };
    dfs(0, -1);
    VI dp(n);
    function<void(int, int)> dfs2 = [&](int v, int p) {
        dp[v] = b[v];
        for (int u : g[v]) {
            if (u != p) {
                b[v] -= max(0ll, b[u]);
                b[u] += max(0ll, b[v]);
                dfs2(u, v);
                b[u] -= max(0ll, b[v]);
                b[v] += max(0ll, b[u]);
            }
        }
    };
    dfs2(0, -1);
    outv(dp);
}

int32_t main() {
    solve6();
    return 0;
}