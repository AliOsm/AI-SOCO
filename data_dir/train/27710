#include <bits/stdc++.h>
using namespace std;
long long a[100111];
long long ans[100111];
long long pref[100111];
long long res;
long long cnt[2000111];
long long n, m, k;
const long long MAGIC = 320;
struct BLACK_MAGIC {
    long long left, right, id;
};
bool comp(BLACK_MAGIC a, BLACK_MAGIC b) {
    if (a.left / MAGIC != b.left / MAGIC) {
        return a.left / MAGIC < b.left / MAGIC;
    } return a.right / MAGIC < b.right / MAGIC;
}
void add(long long x){
  res += cnt[pref[x] ^ k];
  cnt[pref[x]]++;
}
void rem(long long x){
  cnt[pref[x]]--;
  res -= cnt[pref[x] ^ k];
}
BLACK_MAGIC q[1000011];
int main(){
    cin >> n >> m >> k;
    for (long long i = 1; i <= n; i++) {
        cin >> a[i];
        pref[i] = pref[i-1]^a[i];
    }
    for (long long i = 1; i <= m; i++) {
        cin >> q[i].left >> q[i].right;
        q[i].id = i;
    }
    sort(q + 1, q + 1 + m, comp);
    long long L, R;
    L = R = 0;
    cnt[0]++;
    for (long long i = 1; i <= m; i++) {
        long long l = q[i].left - 1, r = q[i].right;
        while(L < l) rem(L++);
        while(L > l) add(--L);
        while(R < r) add(++R);
        while(R > r) rem(R--);
        ans[q[i].id] = res;
    }
    for (long long i = 1; i <= m; i++) {
        cout << ans[i] << '\n';
    }
}
