#include <bits/stdc++.h>
using namespace std;

int x[2222], y[2222];
map< pair<pair<int, int>, pair<int, int> > , int > cnt;

int get(int count) {
	int start = -1;
	int end = 3000;
	while (end - start > 1) {
		int mid = (end + start) >> 1;
		if (mid * (mid - 1) >= count)
			end = mid;
		else
			start = mid;
	}
	return end;
}


int gcd(int x, int y) {
	if (x > y)
		swap(x, y);
	if (x == 0)
		return y;
	return gcd(y % x, x);
}

pair<pair<int, int>, pair<int, int> > getLine(int i, int j) {
	int dy = y[i] - y[j];
	int dx = x[i] - x[j];
	int g = gcd(abs(dx), abs(dy));
	if (dx < 0)
		dy = -dy, dx = -dx;
	if (dx == 0)
		dy = abs(dy);
	if (g) {
		dy /= g;
		dx /= g;
	}

	int a = (y[i] * dx - dy * x[i]);
	int b = dx;
	g = gcd(abs(a), abs(b));
	if (b < 0)
		a = -a, b = -b;
	if (b == 0)
		a = abs(a);
	if (g) {
		a /= g;
		b /= g;
	}

	if (dx == 0)
		a = x[i], b = x[i];
	if (dy == 0)
		a = y[i], b = y[i];
	return make_pair(make_pair(dy, dx), make_pair(a, b));
}

int main() {
	ios::sync_with_stdio(false);


	long long n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> x[i] >> y[i];

	for (int i = 0; i < n; i++)
		for (int j = i + 1; j < n; j++) {

			pair<pair<int, int>, pair<int, int> > line = getLine(i, j);
			if (cnt.find(line) == cnt.end())
				cnt[line] = 0;
			cnt[line] += 2;
		}

	long long ans = (n * (n - 1) * (n - 2)) / 6;

	for (map< pair<pair<int, int>, pair<int, int> > , int >::iterator it = cnt.begin(); it != cnt.end(); it++) {
		int count = it->second;
		long long number = get(count);
		ans -= (number * (number - 1) * (number - 2)) / 6;
	}
	cout << ans << endl;



	return 0;
}
