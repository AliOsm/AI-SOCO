#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/**------------------------------------BITMASK------------------------------------------**/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/**-----------------------------------------------------------------------------------------------**/

/**-----------------------------DIRECTION_ARRAY-------------------------**/
///------FOUR_DIRECTION---------///
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


///------EIGHT_DIRECTION---------///
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/**--------------------------------------------------------------------------------------**/

int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}


/*****int exgcd(int A, int B, int *X, int *Y){


    int x2, y2, x1, y1, x, y, r, r1, r2, q;
    x2=1; y2=0;
    x1=0; y1=1;
    for(r2=A, r1=B; r1!=0 ; r2=r1, r1=r, x2=x1, y2=y1, x1=x, y1=y){

        q=r2/r1;
        r=r2%r1;
        x=x2-(x1*q);

        y=y2-(y1*q);
    }
    *X=x2;
    *Y=y2;
    return r2;

}******/




///-----------------------------START FROM HERE--------------------------------------///
vector<ll>vv;
vector<int>vv2;
int fncc(ll b){

    ll ret=1;
    for(ll i=2; i*i<=b; i++){

        if(b%i==0){
   // if(b==7)cout<<i<<" "<<(b%i)<<endl;
            ret=b/i;
            break;
        }

    }

    return ret;

}

int fnc(int b){

    for(int i=0; i<vv.size(); i++){
        if(vv[i]==b)return vv2[i];

    }
    return 0;
}
int solve(int b){

    int ans;
    for(int i=vv.size()-1; i>=0; i--){

        if(vv[i]<b)return ans;
        ans=vv[i];

    }


}



int main(){


    for(ll p=2; p<=(1<<26); p*=2){

        vv.pb(p-1);


    }
    for(int i=0; i<vv.size(); i++){

        int ans=fncc(vv[i]);
        vv2.pb(ans);
    }

    int q;
    scanf("%d", &q);

    for(int cs=1; cs<=q; cs++){

        int b;
        scanf("%d", &b);
        int flag=fnc(b);
        if(flag!=0)printf("%d\n", flag);
        else {
            int ans=solve(b);
            printf("%d\n", ans);
        }

    }



}
