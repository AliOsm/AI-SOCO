#include<bits/stdc++.h> 

#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;
typedef long double ld;

const ll MOD = 1e14+7;
const ld PI = 3.14159265;

ll powerWithMod(ll base, ll exponent, ll modulus = LLONG_MAX)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

ll modInverse(ll a, ll m = MOD)
{
	return powerWithMod(a, m-2, m);
}

void solution1(long long a, long long b, int k)
{
    vector<long long> ans;
    int indmax = 1 << (b - a + 1);
    long long answer = MOD;
    for (int i = 1; i < indmax; i++)
    {
        if (__builtin_popcount(i) > k)
            continue;
        long long currentXor=0;
        for (int j = 0; j < b - a + 1; j++)
            if ( i & (1<<j))
                currentXor ^= (a + j);
        if (currentXor < answer)
        {
            answer = currentXor;
            ans.clear();
            for (int j = 0; j < b - a + 1; j++)
                if ( i & (1<<j))
                    ans.push_back(a + j);
        }
    }
    cout << answer << endl;
    cout << ans.size() << endl;
    for (int i = 0; i < ans.size(); i++)
        cout << ans[i] << " ";
    cout << endl;
}

void solution2(long long a, long long b, int k)
{
    if (k == 1)
    {
        cout << a << endl;
        cout << 1 << endl;
        cout << a << endl;
        return;
    }
    if (k == 2)
    {
        cout << 1 << endl;
        cout << 2 << endl;
        if (a & 1)
            cout << a + 1 << " " << a + 2 << endl;
        else
            cout << a << " " << a + 1 << endl;
        return;
    }
    if (k >= 4)
    {
        cout << 0 << endl;
        cout << 4 << endl;
        long long frst = a;
        if (frst&1)
            frst++;
        cout << frst << " " << frst + 1 << " " << frst + 2 << " " << frst + 3 << endl;
        return;
    }
    long long mn = 1;
    long long mx = 3;
    while (mx <= b)
    {
        if (mn >= a)
        {
            cout << 0 << endl;
            cout << 3 << endl;
            cout << mn << " " << mx - 1 << " " << mx << endl;
            return;
        }
        mn<<=1;
        mn++;
        mx<<=1;
    }
    cout << 1 << endl;
    cout << 2 << endl;
    if (a & 1)
        cout << a + 1 << " " << a + 2 << endl;
    else
        cout << a << " " << a + 1 << endl;
    return;
}

ll l,r,k;

int main()
{
	ssync;
	cin>>l>>r>>k;
	if(r - l < 5)
		solution1(l, r, k);
	else
		solution2(l, r, k);
	return 0;
}
