#include<bits/stdc++.h>
 
#define ll long long
#define Add_Speed ios_base::sync_with_stdio(0);cin.tie(NULL);
#define pb push_back
#define mp make_pair
#define f first
#define sz size()
#define s second
#define pii pair<int, int>
#define all(s) s.begin(), s.end()
#define file(s) freopen(s".in","r",stdin); freopen(s".out","w",stdout);
#define inf INT_MAX
#define int ll

using namespace std;
 
const int maxn = 3e5 + 100;
const int mod = (int)1e9 + 7;
const int maxlog = (int)20;
const int P = mod;

int n, m, ans;  
vector<int> g[4];    
inline ll f(int x, int y, int z) {
  ll k = 0;
  x = min(x, (int)g[1].sz);
  y = min(y, (int)g[2].sz);
  z = min(z, (int)g[3].sz);
  if (x) k += g[1][x - 1];
  if (y) k += g[2][y - 1];
  if (z) k += g[3][z - 1];
  ans = max(ans, k);
  return k;
}
main  () {
  cin >> n >> m;
  for(int i = 1; i <= n; i++){
    int w, c;
    cin >> w >> c;
    g[w].pb(c);
  }
  for(int i = 1; i <= 3; i++){
    sort(all(g[i]));
    reverse(all(g[i]));
    for(int j = 1; j < g[i].sz; j++)
      g[i][j] += g[i][j - 1];
  }
  for(int i = 0; i <= g[3].sz; i++){
    if(i * 3 > m) continue;
    int cur = m - i * 3, k2 = min(cur / 2, (int)g[2].sz), k1 = min(cur - k2 * 2, (int)g[1].sz);  
    int l = 0, r = k2, res = -1;
    while(l <= r){
      int mid = (l + r) >> 1;
      int mid1 = min(k2, mid + 1);
      if (f(k1 + mid * 2, k2 - mid, i) < f(k1 + mid1 * 2, k2 - mid1, i)) {
        l = mid + 1;
      } else {
        r = mid - 1;
      }
    }
  }
  cout << ans;
}