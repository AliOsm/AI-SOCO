#include<bits/stdc++.h>

using namespace std;

#define pb push_back
const int maxi = 1e6+10;

long long mo1, mo2,b1,b2;

int a[maxi];
string s;
vector<int> v[maxi];
int n;
char ch[maxi], res[maxi];
mt19937 rng(time(0));
long long hes1[maxi], hes2[maxi];
long long hesr1[maxi], hesr2[maxi];
long long d1[maxi], d2[maxi];

void clear_everything(int n)
{
    for (int i=1;i<=n+5;i++)
    {
        hes1[i]=0;
        hes2[i]=0;
        hesr1[i] = 0;
        hesr2[i] = 0;
    }


    b1 = rng()%10000 + 200;
    b2 = rng()%10000 + 200;
    mo1 = rng()%1000000000 + 1000000000;
    mo2= rng()%1000000000 + 1000000000;

   d1[0] = 1;
   d2[0] = 1;
   for (int i =1;i<=n;i++){
    d1[i] = (d1[i-1]*b1)%mo1;
    d2[i] = (d2[i-1]*b2)%mo2;
   }

    for (int i=1;i<=n;i++)
    {
        hes1[i] = (hes1[i-1] + d1[i] * s[i])%mo1;
        hes2[i] = (hes2[i-1] + d2[i] * s[i])%mo2;
    }

    for (int i=n;i>=0;i--)
    {
        hesr1[i] = (hesr1[i+1] + d1[n -i +1] * s[i])%mo1;
        hesr2[i] = (hesr2[i+1] + d2[n - i +1] * s[i])%mo2;
    }
}

int check(int x, int len)
{
     long long val11 = (hes1[x+len -1] - hes1[x-1] + mo1)%mo1;
     long long val12 = (hes2[x+len -1] - hes2[x-1] + mo2)%mo2;

     long long val21 = (hesr1[x] - hesr1[x+len] + mo1) %mo1;
     long long val22 = (hesr2[x] - hesr2[x+len] + mo2) %mo2;

     int first = x;
     int second = n - (x+len) + 2;

     if (first>=second)
     {
         val21 = (val21*d1[first - second ])%mo1;
         val22 = (val22*d2[first - second])%mo2;
     } else
     {
         val11 = (val11*d1[second -first ])%mo1;
         val12 = (val12*d2[second - first])%mo2;
     }


     return (val11 == val21 && val12 == val22);
}


void solve()
{
     scanf("%s",&ch);


     s.assign(ch);

     n = s.size();
     s = '#' + s;

     clear_everything(n);

     int ans = 0;
     int l = 1;
     int r = n;

     while(l<r)
     {
         if (s[l]==s[r])
         {
             ans+=2;
             l++;
             r--;
         } else
         break;
     }

     if (l>=r) {

        printf("%s\n", ch);
        return;
     }

     int type = 0;
     int len = 0;

     for (int i = l; i<=r;i++)
        if (check(l, i - l +1))
        {

            len = i - l +1;
        }


    for (int i = l ;i<=r;i++)
        if (check(i, r -i +1)){
         if (r-i+1 > len)
    {

        len = r-i+1;
        type = 1;
    }
  }
    int lef, rig;
    if (type==0)
    {
        lef = l;
        rig = l + len -1;
    } else
    {
        lef = r - len+1;
        rig = r;
    }
   int cur = 0;
   for (int i = 1;i<l;i++)
    res[cur++] = s[i];

   for (int i = lef; i<=rig;i++)
     res[cur++] = s[i];

     for (int i = r+1;i<=n;i++)
        res[cur++] = s[i];

     res[cur] ='\0';

     printf("%s\n",res);
}

int main()
{
    int t;
    cin>>t;

    while(t--)
        solve();
    return 0;
}
//NECU NECU DIJAMANTE, SUHO ZLATO, BRILIJANTE
//NIT SAFIRE NIT RUBINE, SAMO ONA DA LJUBI ME
//NIT SAFIRE NIT RUBINE, SAMO ONA DA LJUBI ME
