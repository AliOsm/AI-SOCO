#include<bits/stdc++.h>
using namespace std;

#define fi(i,a,b)   for(long long i=a;i<=b;i++)
#define fr(i,a)     for(long long i=0;i<a;i++)
#define fd(i,a,b)   for(long long i=b;i>=a;i--)
#define clr(x)      memset(x,0,sizeof(x))
#define cln(x)      memset(x,-1,sizeof(x))
#define __          printf(" ")
#define _           printf("\n")
#define _o          printf("1\n")
#define stree       long long lft=node<<1,rht=(node<<1)|1,mid=(s+e)>>1
#define mod         1000000007
#define read()      freopen("in.txt","r",stdin);
#define write()     freopen("out.txt","w",stdin);
#define _log        17
#define _size       300000

long long a[300030];



struct RMQ{
     long long m[_size+20][_log+2];
     long long n;
     void ini(long long _n){
         n=_n;
         fr(i,n) m[i][0]=a[i];
         fi(j,1,_log) for(long long i=0;i+(1<<j)-1<n;i++)
                  m[i][j]=__gcd(m[i][j-1],m[i+(1<<(j-1))][j-1]);
     }
     long long qry(long long s,long long e){
         long long r=log2(e-s+1);
         return __gcd(m[s][r],m[e-(1<<r)+1][r]);
     }
}gcd;


vector<long long>vec[300030];


main(){
    long long n;
    scanf("%lld",&n);
    fr(i,n) scanf("%lld",a+i);
    gcd.ini(n);

    fr(i,n){
       long long s,e,mid,x,y;
       s=0,e=i;
       while(s<e){
          mid=(s+e)>>1;
          if(gcd.qry(mid,i)%a[i]) s=mid+1;
          else e=mid;
       }
       x=s;
       s=i,e=n-1;
       while(s<e){
          mid=(s+e+1)>>1;
          if(gcd.qry(i,mid)%a[i]) e=mid-1;
          else s=mid;
       }
       y=s;
       long long pre=-1;
       if(!vec[y-x].empty()) pre=vec[y-x].back();
       if(pre!=x) vec[y-x].push_back(x);
    }
    fd(i,0,300003) if(!vec[i].empty()){
       long long x=vec[i].size();
       printf("%lld %lld\n",x,i);
       fr(j,x) printf(j?" %lld":"%lld",vec[i][j]+1);
       _;
       break;
    }

    return 0;
}
