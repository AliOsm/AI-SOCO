/*****Enigma27*****/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pll         pair<ll int,ll int>
#define vll          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define x           first
#define y           second
#define sz(x)       (ll int)x.size()
#define hell        1000000007
#define rep(i,a,b)	for(ll int i=a;i<b;i++)
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define gcd(a,b)    __gcd((a),(b))
#define lcm(a,b)    ((a)*(b)) / gcd((a),(b))
#define ios	    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
ll n,i,j,k,l,sum=0,flag=0,t,a[100005],ans=0;
string mat[15],s[15];
void rotateMatrix(int N)
{
    for (int x = 0; x < N / 2; x++)
    {
        for (int y = x; y < N-x-1; y++)
        {
            char temp = mat[x][y];
            mat[x][y] = mat[y][N-1-x];
            mat[y][N-1-x] = mat[N-1-x][N-1-y];
            mat[N-1-x][N-1-y] = mat[N-1-y][x];
            mat[N-1-y][x] = temp;
        }
    }
}
void check(){
	bool flag=true;
	//for(i=0;i<n;i++)cout<<mat[i]<<" "<<s[i]<<endl;
	for(i=0;i<n;i++){	//same
		if(mat[i]!=s[i]) {
			flag =false;
			break;
		}
	}
	if(flag){
		cout<<"Yes\n";
		exit(0);
	}
    flag =true;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(mat[i][j]!=s[n-1-i][j]) flag=false;
		}
	}
	if(flag){
		cout<<"Yes\n";exit(0);
	}
	flag =true;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			if(mat[i][j]!=s[i][n-1-j]) flag=false;
		}
	}
	if(flag){
		cout<<"Yes\n";exit(0);
	}
	return;
}
int main()
{
	ios
	cin>>n;
	for(i=0;i<n;i++){
		cin>>mat[i];
	}
	for(i=0;i<n;i++){
		cin>>s[i];
	}
	check();
	rotateMatrix(n);

	check();
	rotateMatrix(n);

	check();
	rotateMatrix(n);

	check();
	rotateMatrix(n);
	cout<<"No\n";
	return 0;
}