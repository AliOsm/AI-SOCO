#include<stdio.h>
#include<vector>
#include<algorithm>
#include<queue>
#include <string>
#include<bits/stdc++.h>
using namespace std;
typedef long long  ll;
typedef pair<ll, ll>pii;
//typedef bitset<19> mask;
//int x4[4]={1,0,0,-1};
int n,m,x,y,dis1[500],dis2[500];
map<pair<int,int>,int>s;
vector<int>adj1[500],adj2[500];
void dfs1(int s)
{
    for(int i=0;i<adj1[s].size();i++)
    {
        if(dis1[s]+1<dis1[adj1[s][i]])
        {
            dis1[adj1[s][i]]=dis1[s]+1;
            dfs1(adj1[s][i]);
        }
    }
}

void dfs2(int s)
{
    for(int i=0;i<adj2[s].size();i++)
    {
        if(dis2[s]+1<dis2[adj2[s][i]])
        {
            dis2[adj2[s][i]]=dis2[s]+1;
            dfs2(adj2[s][i]);
        }
    }
}
int main()
{
//freopen("hotel.in","r",stdin);
//freopen("math.in","w",stdout);
//printf("%s %.4f\n",k.c_str(),g);
scanf("%d%d",&n,&m);
for(int i=1;i<=m;i++)
{
    scanf("%d%d",&x,&y);
    adj1[x].push_back(y);
    adj1[y].push_back(x);
    s[{x,y}]=1;
    s[{y,x}]=1;
}
for(int i=1;i<=n;i++)
{
    for(int j=i+1;j<=n;j++)
    {
        if(s[{i,j}]!=1)
            {
                adj2[i].push_back(j);
                adj2[j].push_back(i);
            }
    }
}
fill(dis1,dis1+420,1e9);
fill(dis2,dis2+420,1e9);
dis1[1]=0;
dis2[1]=0;
dfs1(1);
dfs2(1);
 if(dis1[n]==1e9||dis2[n]==1e9)
    cout<<"-1";
else
    cout<<max(dis1[n],dis2[n]);
 return 0;
}
