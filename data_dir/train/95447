#include <bits/stdc++.h>
using namespace std;
using namespace std::chrono;

#define all(x) begin(x), end(x)
#define sz(x) (ll)(x).size()

using ll = long long;
using ld = long double;

void gen(ll n) {
    set<ll> seen;
    ll next = 1;
    vector<ll> res;
    for (ll i = 0; i < n; i++) {
        while (seen.find(next) != seen.end()) next++;
        ll a = next;
        seen.insert(a);
        ll b = next + 1;
        while (seen.find(b) != seen.end() || seen.find(a^b) != seen.end()) b++;
        seen.insert(b);
        ll c = a^b;
        seen.insert(c);
        cout << c << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    //gen(100);
    ll t;
    cin >> t;
    for (ll i = 0; i < t; i++) {
        ll x;
        cin >> x;
        x--;

        ll l = 0;
        ll y = x / 3;
        while (y >= (1ll << (l + 1)) - (1ll << l)) {
            y -= (1ll << (l + 1)) - (1ll << l);
            l += 2;
        }
        if (x % 3 == 0) {
            cout << ((1ll << l) + y) << endl;
        } else if (x % 3 == 1) {
            vector<ll> tmp = {0, 2, 3, 1};
            ll left = 1ll << (l + 1);
            for (ll r = 1ll<<l; r > 4; r /= 4) {
                left += tmp[y / (r / 4)] * (r / 4);
                y %= (r / 4);
            }
            cout << left + tmp[y] << endl;
        } else {
            vector<ll> tmp = {0, 3, 1, 2};
            ll left = (1ll << (l + 1)) + (1ll << l);
            for (ll r = 1ll<<l; r > 4; r /= 4) {
                left += tmp[y / (r / 4)] * (r / 4);
                y %= (r / 4);
            }
            cout << left + tmp[y] << endl;
        }
    }
}
