#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define F first
#define S second
#define IF -> F
#define IS -> S
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define mid (st + en) / 2
#define lef 2 * Node
#define rig lef + 1
#define Parent Node + (Node & (~Node + 1))
#define Neig Node - (Node & (~Node + 1))

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 1e6 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;

int main()
{
    string s ; cin >> s;
    int Ans = 0 ;
    forr (i , s.size()) Ans = max(Ans , s[i] - '0') ;
    cout << Ans << endl ;
    while (Ans --) {
        string out = "" ;
        for (int i = s.size() - 1 ; i >= 0 ; i --)
            if (s[i] > '0') {
                s[i] -- ;
                out += '1' ;
            } else out += '0' ;
        reverse(ALLV(out)) ;
        int i = 0 ;
        while (out [i] == '0') i ++ ;
        forq (j , i , out.size() - 1)
        cout << out [j] ;
        cout << " " ;
    }
    return 0;
}
