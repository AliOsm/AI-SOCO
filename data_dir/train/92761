#include <cstdio>
#include <iostream>
#include <string>
#include <sstream>
#include <stack>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <set>
#include <cstdlib>
#include <bitset>
#include <tuple>
#include <assert.h>
#include <deque>
#include <bitset>
#include <iomanip>
#include <limits>
#include <chrono>
#include <random>
#include <array>
#include <unordered_map>
#include <functional>
#include <complex>
#include <numeric>

template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }

constexpr long long MAX = 5100000;
constexpr long long INF = 1LL << 60;
constexpr int inf = 1000000007;
constexpr long long mod = 1000000007LL;
//constexpr long long mod = 998244353LL;
const long double PI = acos(-1);

using namespace std;
typedef unsigned long long ull;
typedef long long ll;

deque<pair<ll, ll>> dq;
bool check(ll x) {
	if (dq.empty()) return true;
	if ((dq.front().first - 1) / 2 >= x) return false;
	return true;
}

int main()
{
	/*
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	*/

	int n; scanf("%d", &n);
	vector<ll> a(n * 3); for (int i = 0; i < n; i++) scanf("%lld", &a[i]);
	for (int i = n; i < n * 3; i++) a[i] = a[i % n];
	int right = 0;
	vector<int> res(n);
	for (int left = 0; left < n; left++) {
		while (right < n * 3 and check(a[right])) {
			while (!dq.empty() and dq.back().first < a[right]) dq.pop_back();
			dq.emplace_back(a[right], right);
			right++;
		}
		if (right != 3 * n) res[left] = right - left;
		else res[left] = -1;
		if (!dq.empty() and dq.front().second == left) dq.pop_front();
	}
	for (int i = 0; i < n; i++) cout << res[i] << " \n"[i + 1 == n];
	return 0;

}