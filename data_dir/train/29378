#include <bits/stdc++.h>
using namespace std;
#define pii             pair<int , int >
#define inf             1111111111
#define in(a)           scanf("%d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%d%d", &a, &b)
#define in3(a, b, c)    scanf("%d%d%d", &a, &b, &c)
#define mp              make_pair
#define vi              vector<int >
#define _ceil(n, a)     ((n)%(a)==0?((n)/(a)):((n)/(a)+1))
#define cl              clear()
#define sz              size()
#define pn              printf("\n")
#define pr(a)           printf("%d\n", a)
#define prs(a)          printf("%d ", a)
#define pr2(a, b)       printf("%d %d\n", a, b)
#define pr3(a, b, c)    printf("%d %d %d\n", a, b, c)
#define pb              push_back
#define mem(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define ext(a)          {printf("%s\n", a); return 0;}
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)
#define x               first
#define y               second
#define lc              (2*i)
#define rc              (2*i+1)
#define sst             clock_t t = clock()
#define eed             printf ("It took me %d clicks.\n", (int)(clock() - t))

//#define prr(args...) { vector<string> _v = split(#args, ','); err(_v.begin(), args); pn;}
//vector<string> split(const string& s, char c) {
//	vector<string> v;
//	stringstream ss(s);
//	string x;
//	while (getline(ss, x, c))
//		v.emplace_back(x);
//	return move(v);
//}
//void err(vector<string>::iterator it) {}
//template<typename T, typename... Args>
//void err(vector<string>::iterator it, T a, Args... args) {
//	cerr <<a<<" ";
//	err(++it, args...);
//}

typedef long long LL;
//int  dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int  dx[]={1,1,0,-1,-1,-1,0,1,0};int dy[]={0,1,1,1,0,-1,-1,-1,0};//8 direction
//int  dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(int n, int pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//int  on(int n, int pos) {return n | (1<<pos);} //typecast 1 in case of int
//int  off(int n, int pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

const int M = 3000010, mod = 1000000007;
int visited[M], taken[M];
vector<pii>A;
vi temp;
int main()
{
#ifndef ONLINE_JUDGE
    freopen("C:\\Users\\Dell\\Desktop\\in.txt", "r", stdin);
//    freopen("C:\\Users\\Dell\\Desktop\\in.txt", "w", stdout);
#endif
    ios_base::sync_with_stdio(false);

    int n, i, j, k;

    mem(visited, 0);
    mem(taken, 0);

    in(n);

    for (i=3; i<=n; i+=2)
    {
        if (!visited[i])
        {
            temp.clear();
            for (j=i; j<=n; j+=i)
            {
                visited[j] = true;
                if (!taken[j]) temp.pb(j);
            }

            if (temp.size() > 1)
            {
                if (temp.size() % 2 == 1) temp[1] = i, j = 1;
                else j = 0;

                for (; j<temp.size(); j+=2)
                {
                    A.pb(mp(temp[j], temp[j+1]));
                    taken[temp[j]] = taken[temp[j+1]] = true;
                }
            }
        }
    }

    temp.clear();
    for (i=2; i<=n; i+=2) if (!taken[i]) temp.pb(i);

    for (i=1; i<temp.size(); i+=2) A.pb(mp(temp[i-1], temp[i]));

    sort(all(A));

    pr(A.size());
    for (i=0; i<A.size(); i++) pr2(A[i].x, A[i].y);


return 0;
}
