#include <bits/stdc++.h>
using namespace std;
#define oo 666666666
#define ll long long
#define ld long double

int n,m;
char A[1005][1005];
int SP[1005][1005];

bool valid(int r, int c)
{
    return r>=1 && c>=1 && r<=n && c<=m && A[r][c]!='T';
}

int main()
{
    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    memset(A,'T',sizeof A);
    cin>>n>>m;
    for(int i=1; i<=n; i++)
        for(int j=1; j<=m; j++)
        cin>>A[i][j];

    int ats = 0;
    queue<array<int,2>>q;
    for(int i=1; i<=n; i++)
        for(int j=1; j<=m; j++)
        if(A[i][j]=='E')
        q.push({i,j}),SP[i][j]=1;

    while(!q.empty())
    {
        int r = q.front()[0];
        int c = q.front()[1];
        q.pop();
        for(int dr = -1; dr<2; dr++)
        for(int dc = -1; dc<2; dc++)
            if(abs(dr)+abs(dc) < 2)
            if(valid(r+dr,c+dc) && SP[r+dr][c+dc]==0)
            SP[r+dr][c+dc]=SP[r][c]+1,q.push({r+dr,c+dc});
    }

    int dist = 0;
    for(int i=1; i<=n; i++)
        for(int j=1; j<=m; j++)
        if(A[i][j]=='S')
            dist = SP[i][j];

    for(int i=1; i<=n; i++)
        for(int j=1; j<=m; j++)
            if(A[i][j]>'0' && A[i][j]<='9' && SP[i][j] <= dist && SP[i][j] > 0)
            ats+=A[i][j]-'0';

    cout<<ats;
}
