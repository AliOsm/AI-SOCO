#pragma GCC optimize("Ofast")
#pragma GCC target("sse4")

#include <iostream>
#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <queue>
#include <ctime>

using namespace std;

#define REP(i, n) for(int (i) = 0; (i) < (n); (i)++)
#define SZ(a) (int)(a).size()
#define ALL(a) (a).begin(), (a).end()

bool is_cat(int x) {
	for (int i = 0; i <= 20; i++) {
		if (x == (1 << i) - 1) {
			return true;
		}		
	}
	return false;
}

int find_top(int x, int lim, bool need_zero) {
	for (int i = lim; i >= 0; i--) {
		bool has_zero = ((x & (1 << i)) == 0);
		if (need_zero ^ has_zero) {
			continue;
		}
		return i;
	}
	return -1;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    int x;
    cin >> x;
    int lim = find_top(x, 20, false);
    assert(lim != -1);
    int cnt = 0;
    vector<int> res;
    while (!is_cat(x)) {
    	int pos = find_top(x, lim, true);
    	assert(pos != -1);
    	++cnt;
    	res.push_back(pos + 1);
    	x ^= ((1 << (pos + 1)) - 1);    	
    	if (is_cat(x)) {
    		break;
    	}
    	++cnt;
    	++x;
    }
    cout << cnt << endl;
    for (int x : res) cout << x << " ";
    cout << endl;
    return 0;
}