/*
 _____ _             _              _           _ 
|_   _| |__   ___   / \   _ __  ___| |__  _   _| |
  | | | '_ \ / _ \ / _ \ | '_ \/ __| '_ \| | | | |
  | | | | | |  __// ___ \| | | \__ \ | | | |_| | |
  |_| |_| |_|\___/_/   \_\_| |_|___/_| |_|\__,_|_|                                                

*/
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp>
#define ll          long long
#define pb          push_back
#define ppb         pop_back
#define	endl		'\n'
#define mii         map<ll,ll>
#define msi         map<string,ll>
#define mis         map<ll, string>
#define rep(i,a,b)    for(ll i=a;i<b;i++)
#define repr(i,a,b) for(ll i=b-1;i>=a;i--)
#define trav(a, x) 	for(auto& a : x)
#define pii         pair<ll,ll>
#define vi          vector<ll>
#define vii         vector<pair<ll, ll>>
#define vs          vector<string>
#define all(a)      (a).begin(),(a).end()
#define F           first
#define S           second
#define sz(x)       (ll)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define max(a,b)	(a>b?a:b)
#define min(a,b)	(a<b?a:b)

/*	For Debugging	*/
#define DEBUG 		cerr<<"/n>>>I'm Here<<</n"<<endl;
#define display(x) trav(a,x) cout<<a<<" ";cout<<endl;
#define what_is(x)  cerr << #x << " is " << x << endl;

std::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define TIME        cerr << "\nTime elapsed: " << setprecision(5) <<1000.0 * clock() / CLOCKS_PER_SEC << "ms\n";
#define DECIMAL(n)  cout << fixed ; cout << setprecision(n);
#define FAST ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace __gnu_pbds;
using namespace std;
#define PI 3.141592653589793
#define N  1000005
ll n,l,r;
ll a[N][3],seg[4*N][3];
string s;
void build(ll cur,ll st,ll end)
{
	if(st==end)
	{
		seg[cur][0]=0;
		if(s[st-1]=='(')
		seg[cur][1]=1;
		else
		seg[cur][2]=1;
		return;
	}
	ll mid=(st+end)>>1;
	build(2*cur,st,mid);
	build(2*cur+1,mid+1,end);
	ll t=min(seg[2*cur][1],seg[2*cur+1][2]);
	seg[cur][0]=seg[2*cur][0]+seg[2*cur+1][0]+2*t;	/*  1-change here  */
	seg[cur][1]=seg[2*cur][1]+seg[2*cur+1][1]-t;	/*  1-change here  */
	seg[cur][2]=seg[2*cur][2]+seg[2*cur+1][2]-t;	/*  1-change here  */
}
vi query(ll cur,ll st,ll end,ll l,ll r)
{
	if(l<=st&&r>=end)
	{
		vi tmp(3);
		rep(i,0,3)
		tmp[i]=seg[cur][i];
		return tmp;
	}
	if(r<st||l>end)
	{
		vi tmp(3,0);
		return tmp;
	}                          /*  2-change here  */
	ll mid=(st+end)>>1;
	vi ans1=query(2*cur,st,mid,l,r);
	vi ans2=query(2*cur+1,mid+1,end,l,r);
	ll t=min(ans1[1],ans2[2]);
	vi ans_net(3);
	ans_net[0]=ans1[0]+ans2[0]+2*t;
	ans_net[1]=ans1[1]+ans2[1]-t;
	ans_net[2]=ans1[2]+ans2[2]-t;
	return (ans_net);                 /*  3-change here  */
}
void solve()
{
	cin>>s;
	ll n=s.length();
	ll m;
	cin>>m;
	build(1,1,n);
	rep(i,0,m)
	{
		ll l,r;
		cin>>l>>r;
		cout<<query(1,1,n,l,r)[0]<<endl;
	}
	return;
}
int main()
{
	FAST
	int TESTS=1;
//	cin>>TESTS;
	while(TESTS--)
	{
		solve();
	}
	TIME
	return 0;
}