#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define sf(x) scanf("%d", &x);
#define sf2(x, y) scanf("%d %d", &x, &y);
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z);
#define sfll(x) scanf("%I64d", &x);
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y);
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z);
#define sfd(x) scanf("%f", &x);
#define pr(x) printf("%d ", x);

typedef long long ll;
using namespace std;

int dfa[1000010][26];
void build(string &s) {
    memset(dfa, 0, sizeof dfa);
    int x = 0;
    for(int i = 0; i < s.size(); i++) {
        for(int c = 0; c < 26; c++) dfa[i][c] = dfa[x][c];
        x = dfa[i][s[i] - 'A'];
        dfa[i][s[i] - 'A'] = i + 1;
    }

    for(int c = 0; c < 26; c++) dfa[s.size()][c] = dfa[x][c];
}

bool search(string &s) {
    int x = 0;
    for(int i = 0; i < s.size(); i++) x = dfa[x][s[i] - 'A'];
    return x;
}

int main() {
    int n;
    string a, b;
    while(cin >> n>>a>>b) {
        reverse(all(a));
        for(int i = 0; i < n; i++) {
            if(a[i] == 'N') a[i] = 'S';
            else if(a[i] == 'S') a[i] = 'N';
            else if(a[i] == 'E') a[i] = 'W';
            else a[i] = 'E';
        }

        build(a);
        search(b) ? cout << "NO\n" : cout << "YES\n";
    }
    return 0;
}
