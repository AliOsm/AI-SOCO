#include <stdio.h>
#include <iostream>
#include <vector>
#include <assert.h>
#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <sstream>
#include <memory.h>
#include <time.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;
typedef long long ll;
bool notPrime[200001] = { 1,1 };
int main()
{
	for (int i = 2; i*i <= 200000; ++i)
		if (!notPrime[i])
			for (int j = i*i; j <= 200000; j += i)
				notPrime[j] = true;
	vector<int> p;
	for (int i = 2; i <= 200000; ++i)
		if (!notPrime[i])
			p.push_back(i);
	int n, e;
	scanf("%d%d", &n, &e);
	vector<vector<int> > sol;
	int x = *lower_bound(p.begin(), p.end(), n);
	int z = x - (n - 2);
	sol.push_back({ 1,2,z });
	for (int i = 2; i + 1 <= n; ++i)
		sol.push_back({ i,i + 1,1 });
	for (int i = 1; i <= n && sol.size() != e; ++i)
		for (int j = i + 2; j <= n && sol.size() != e; ++j)
			sol.push_back({ i,j,3 * x });
	printf("%d %d\n", x, x);
	for (int i = 0; i < sol.size(); ++i)
		printf("%d %d %d\n", sol[i][0], sol[i][1], sol[i][2]);
	return 0;
}