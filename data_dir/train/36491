#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
int a[200010], c[200010];
vector <int> v[200010];

int low[200010], depth[200010], timer, cyc;
vector <int> scc[200010];
stack<int> stck;
bool vis[200010], sccs[200010], in[200010];
void dfs(int x){
  low[x]=depth[x]=timer++;
  stck.push(x);
  vis[x]=1;
  in[x]=1;
  int nxt;
//  for(int i=0; i<a[x].size(); ++i){
    nxt=a[x];
    if(!vis[nxt]){
      dfs(nxt);
      low[x]=min(low[x], low[nxt]);
    }
    else{
      if(in[nxt])
        low[x]=min(low[x], depth[nxt]);
    }
//  }
  if(low[x]>=depth[x]){
    while(1){
      nxt=stck.top();
      scc[cyc].push_back(nxt);
      stck.pop();
      in[nxt]=0;
      if(nxt==x)
        break;
    }
    ++cyc;
  }
}
int main(){
  int n;
  while(cin>>n){
    for(int i=1; i<=n; ++i){
        cin>>c[i];
    }
    for(int i=1; i<=n; ++i){
        cin>>a[i];
    }
    for(int i=1; i<=n; ++i){
        if(!vis[i])
            dfs(i);
    }
    int mn=0;
    ll ans=0;
    for(int i=0; i<cyc; ++i){
        mn=c[scc[i][0]];
        if(scc[i].size()==1)
            continue;
//        cout<<i<<"::"<<endl;
        for(int j=0; j<scc[i].size(); ++j){
            mn=min(mn, c[scc[i][j]]);
//            cout<<scc[i][j]<<" ";
        }
//        cout<<endl;
        ans+=mn;
    }
    for(int i=1; i<=n; ++i)
        if(a[i]==i)
            ans+=c[i];
    cout<<ans<<endl;
  }
  return 0;
}


