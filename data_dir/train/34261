#include <bits/stdc++.h>
#define um unordered_map
#define us unordered_set
#define f first
#define s second
#define pb push_back
#define MOD 1000000007
#define eps 1e-9
#define INF 1000000002

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<int, pii> piii;
typedef pair<pii,pii> piiii;

const int N = 255;
int n, k, grp[N], fact[N], factInv[N], pwrs[N], cumFact[N], cumPwr[N];

int dp[N][N], baam[N];

ll pwr(int b, int p) {
    if(!p)
        return 1;

    ll ans = pwr(b, p>>1);
    ans = ans * ans % MOD;
    if(p&1)
        ans = ans * b % MOD;
    return ans;
}

int nCk(int n, int k) {
    return 1LL * fact[n] * factInv[k] % MOD * factInv[n-k] % MOD;
}

ll val(int c) {
    if(baam[c] != -1)
        return baam[c];
    ll ret = 0;
    for(int i =0 ;i<=c;i++) {
        ret = ret + pwr(pwrs[i], MOD-2) * pwr(fact[i], MOD-2) % MOD * pwr(fact[c-i], MOD-2) % MOD;
        ret %= MOD;
    }
    return baam[c] = ret;
}

int solve(int i, int rem) {
    if(i == n)
        return rem == 0;
    if(dp[i][rem] != -1)
        return dp[i][rem];
    int ans = 0;
    int c = n - rem;
    ll x = val(c);
    for(int o = 0;o<=rem;o++) {
        ll tmp = 1LL * solve(i+1, rem-o) * nCk(rem, o) % MOD * fact[c] % MOD * pwrs[n-o] % MOD;
        if(!o) {
            ll y = (x - pwr(fact[c], MOD-2) + MOD) % MOD;
            ans = (ans + tmp * y % MOD) % MOD;
        } else {
            ans = (ans + tmp * x % MOD) % MOD;
        }
    }
    return dp[i][rem] = ans;
}


int main() {

    fact[0] = cumFact[0] = 1;
    for(ll i=1;i<N;i++)
        fact[i] = fact[i-1] * i % MOD, cumFact[i] = 1LL * cumFact[i-1] * fact[i] % MOD;

    factInv[0] = 1;
    for(int i= 1;i<N;i++)
        factInv[i] = pwr(fact[i], MOD-2);
    pwrs[0] = 1;
    cumPwr[0] = 1;
    scanf("%d%d",&n,&k);
    if(k == 1)
        return printf("1"), 0;
    for(int i = 1;i<N;i++)
        pwrs[i] = pwrs[i-1] * (k-1LL) % MOD, cumPwr[i] = 1LL * cumPwr[i-1] * pwrs[i] % MOD;
    memset(dp, -1, sizeof dp);
    memset(baam, -1, sizeof baam);
    printf("%d", solve(0, n));
    return 0;
}

