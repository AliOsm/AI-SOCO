#include <bits/stdc++.h>
using namespace std;
#define PB push_back
#define ZERO (1e-10)
#define INF int(1e9+1)
#define CL(A,I) (memset(A,I,sizeof(A)))
#define DEB printf("DEB!\n");
#define D(X) cout<<"  "<<#X": "<<X<<endl;
#define EQ(A,B) (A+ZERO>B&&A-ZERO<B)
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
#define IN(n) int n;scanf("%d",&n);
#define FOR(i, m, n) for (int i(m); i < n; i++)
#define F(n) FOR(i,0,n)
#define FF(n) FOR(j,0,n)
#define FT(m, n) FOR(k, m, n)
#define aa first
#define bb second
void ga(int N,int *A){F(N)scanf("%d",A+i);}
#define MX (100009)
vi g[MX];
void dw(int u,int p,int d,int *D){
    D[u]=d;
    for(auto i:g[u])if(i^p)dw(i,u,d+1,D);
}
ii ctr(int N,int l=0){
    static int D[MX],U[MX],d;
    ii B;
    dw(l,-1,0,D),dw(max_element(D,D+N)-D,-1,0,D);
    dw(l=max_element(D,D+N)-D,-1,0,U),d=D[l]>>1;
    F(N)if(D[i]==U[i]&&D[i]==d)return {i,-1};
    F(N)if(D[i]==d&&U[i]==d+1)B.bb=i;
        else if(D[i]==d+1&&U[i]==d)B.aa=i;
    return B;
}
vi f;
int N,a,b,D[MX],V[MX];
void dd(int u,int p,int d){
    if(g[u].size()==1u&&!V[d]++)f.PB(u);
    for(auto&h:g[u])if(h^p)dd(h,u,d+1);
}
bool dfs(int u,int p,int d){
    if(!D[d])D[d]=g[u].size();
    if(D[d]^g[u].size())return 0;
    for(auto&h:g[u])if(h^p&&!dfs(h,u,d+1))return 0;
    return 1;
}
int main(void){
    scanf("%d",&N);
    F(N-1)scanf("%d%d",&a,&b),g[--a].PB(--b),g[b].PB(a);
    ii w=ctr(N);
    if(dfs(w.aa,w.aa,0))return printf("%d\n",w.aa+1),0;
    F(N)if(g[i].size()==1u)dd(i,i,0),i=N;
    CL(V,0);for(int i=N-1;~i;--i)if(g[i].size()==1u)dd(i,i,0),i=0;
    for(auto&h:f)if(CL(D,0),dfs(h,h,0))return printf("%d\n",h+1),0;
    puts("-1");
    return 0;
}
