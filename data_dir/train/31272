#include<stdio.h>
int lcs[1005][1005];
char a[1005],b[1005];
int n,m,k;
int dp[1005][1005][15];
int max(int a,int b)
    {
    if(a>=b)return a;
    return b;
}
int main()
    {
    scanf("%d%d%d",&n,&m,&k);
    scanf("%s%s",&a,&b);
    int i,j,l;
    for(i=1;i<=n;i++)
        {
        for(j=1;j<=m;j++)
            {
            if(a[i-1]==b[j-1])lcs[i][j] = 1 + lcs[i-1][j-1];
            
        }
    }
  /*  for(i=1;i<=n;i++)
        {
        for(j=1;j<=m;j++)
            {
            printf("%d ",lcs[i][j]);
        }
        printf("\n");
    }
    */
       int ans = 0;
    
    for(l=1;l<=k;l++)
        {
        for(i=1;i<=n;i++)
            {
            for(j=1;j<=m;j++)
                {
                if(lcs[i][j])
                    {
             // printf("ending at %d %d for len %d\n",i,j,l);
                  
                       int ccc = dp[i-lcs[i][j]][j-lcs[i][j]][l-1] + lcs[i][j] ;
                    if(ccc<dp[i][j][l-1])ccc = dp[i][j][l-1];
                   // if(ccc<l)ccc = 0;
                    if(ccc<dp[i][j-1][l])ccc = dp[i][j-1][l];
                    if(ccc<dp[i-1][j][l])ccc = dp[i-1][j][l];
                     if(ccc<dp[i][j-1][l-1])ccc = dp[i][j-1][l-1];
                    if(ccc<dp[i-1][j][l-1])ccc = dp[i-1][j][l-1];
                    dp[i][j][l] = ccc;
                    if(dp[i][j][l] > ans)ans = dp[i][j][l];
               //     printf("hence %d %d %d is %d \n",i,j,l,dp[i][j][l]);
                }
                else {
                    dp[i][j][l] = max(dp[i][j-1][l],dp[i-1][j][l]);
                }
            }
        }
    }
    printf("%d\n",ans);
 
}