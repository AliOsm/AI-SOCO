#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds ;
#define ll long long
#define ld long double
#define pp pair<ll,ll>
#define rep(i,a,b) for(ll i=a;i<b;i+=1)
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(a) int((a).size())
#define present(c,x) ((c).find(x) != (c).end())
#define mp make_pair
#define hell 1000000007
#define F first
#define S second
#define sll(x) scanf("%lld",&x)
#define si(x) scanf("%d",&x)
typedef tree<pp , null_type , less<pp> , rb_tree_tag , tree_order_statistics_node_update > ordered_set ;
ll t=1 ;
void solve()
{
    ll ts , tf , cur = 0 , fin = 0 ,curst=0, num , lo , hi , mid , ans1 = 1e15 , ans2 = -1 , d , n ;
    queue<ll> q ;
    cin >> ts >> tf >> d >> n ;
    vector<ll> visitors(n) ;
    set<ll> s ;
    s.insert(0);
    s.insert(ts);
    fin = ts ;
    rep( i , 0 , n ){
        cin >> visitors[i] ;
        s.insert(max(0LL,visitors[i]-1));
        //s.insert(visitors[i]);
        s.insert(ts+(i+1)*d);
        //s.insert(ts+(i+1)*d+1);
    }
    for( auto it : s ){
        cur = it ;
        curst = it ;
        curst = max(curst,ts);
        num = upper_bound(all(visitors),cur)-visitors.begin();
        curst = max(curst,ts+num*d);
        if(curst+d<=tf){
            if(curst-cur<ans1){
                ans1=curst-cur;
                ans2=cur;
            }
        }
    }
    cout << ans2; // << ' ' << ans1 ;
}
signed main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //cin>>t;
    while(t--)
        solve() ;
    return 0 ;
}
