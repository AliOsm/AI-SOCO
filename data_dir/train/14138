#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <bitset>
#include <random>
#include <cassert>

using std::ios_base;
using std::cin;
using std::cout;
using std::cerr;
using std::endl;
using std::fixed;

using std::vector;
using std::string;
using std::stack;
using std::queue;
using std::deque;
using std::map;
using std::set;
using std::unordered_map;
using std::unordered_set;
using std::bitset;

using std::tuple;
using std::make_tuple;
using std::pair;
using std::make_pair;

using std::sort;
using std::reverse;
using std::nth_element;

#define pb push_back
#define mp make_pair
#define all(x) x.begin(), x.end()
#define sqr(x) ((x) * (x))

#define forn(i, n) for (int i = 0; i < (n); i++)
#define fornr(i, n) for (int i = (n) - 1; i >= 0; i--)
#define forab(i, a, b) for (int i = (a); i < (b); i++)

int n;
char s[105];
int t[105], a[105];

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.precision(10);
    cout << fixed;

    cin >> n;
    int cm = 0;
    for (int i = 0; i < n; ++i) {
        cin >> s[i];
        s[i] -= '0';
        cm += s[i];
    }
    for (int i = 0; i < n; ++i) {
        cin >> a[i] >> t[i];
    }

    for (int i = 1; i < 1000000; ++i) {
        int c = 0;
        for (int j = 0; j < n; ++j) {
            if (i == t[j]) {
                s[j] ^= 1;
                t[j] += a[j];
            }
            c += s[j];
        }
        cm = std::max(cm, c);
    }
    cout << cm << '\n';

#ifdef LOCAL
    cerr << "\n== " << 1.0 * clock() / CLOCKS_PER_SEC << " sec.\n";
#endif
    return 0;
}
