//#include<bits/stdc++.h>
#include<functional>
#include<algorithm>
#include<iostream>
#include<iomanip>
#include<climits>
#include<cstring>
#include<cstdlib>
#include<cstddef>
#include<memory>
#include<string>
#include<cstdio>
#include<vector>
#include<cctype>
#include<ctime>
#include<cmath>
#include<queue>
#include<stack>
#include<deque>
#include<set>
#include<map>

#define fi first
#define se second
#define INF 0x3f3f3f3f
#define pi 3.1415926535898
#define lson l,(l+r)/2,rt<<1
#define rson (l+r)/2+1,r,rt<<1|1

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;

const int MAXN=1e6+10;
const int MOD=1e9+7;
const ll LLMAX=2e18;

priority_queue<int,vector<int>,greater<int> > qu;
priority_queue<int,vector<int>,less<int> > qd;

void test()
{
    FILE *fin=NULL,*fout=NULL;
    fin=freopen("D:\\Project__C++\\testdata.in","r",stdin);
    fout=freopen("D:\\Project__C++\\testdata.out","w",stdout);
}

/***************************************************************************/
vector<int>G[MAXN];
int ans[MAXN][3],color[MAXN],in[MAXN],sum=0;

void dfs(int now,int before)
{
    if(G[now].size()!=2)
    {
        if(G[now].size()==1)    color[now]=1;
        ans[sum++][1]=now;
        return ;
    }
    color[now]=1;
    for(int i=0;i<G[now].size();i++)
        if(G[now][i]!=before&&color[G[now][i]]==0)
            dfs(G[now][i],now);
}

int main(void)
{
    int n,x,y,count=0;  cin>>n;
    for(int i=0;i<n-1;i++)
    {
        scanf("%d%d",&x,&y);
        in[x]++,in[y]++;
        G[x].push_back(y);
        G[y].push_back(x);
    }
    for(int i=1;i<=n;i++)
        if(in[i]>=3)
            count++;
    if(count>=2)    return cout<<"No"<<endl,0;
    else    cout<<"Yes"<<endl;
    for(int i=1;i<=n;i++)
        if(G[i].size()==1&&color[i]==0)
        {
            ans[sum][0]=i;
            color[i]=1;
            dfs(G[i][0],i);
        }
    cout<<sum<<endl;
    for(int i=0;i<sum;i++)
        cout<<ans[i][0]<<' '<<ans[i][1]<<endl;
    return 0;
}
