#include<stdio.h>
#include<string.h>
#include<iostream>
#include<sstream>
#include<algorithm>
#include<set>
#include<map>
#include<deque>
#include<vector>
#include<list>
#include<tr1/unordered_map>
#include<functional>
using namespace std;

inline void print(char pt) {
    printf("%c\n", pt);
}
inline void print(int pt) {
    printf("%d\n", pt);
}
inline void print(long long pt) {
    printf("%I64d\n", pt);
}
inline void print(double pt) {
    printf("%.20f\n", pt);
}
inline void print(char pt[]) {
    printf("%s\n", pt);
}
inline void print() {
    printf("\n");
}

inline int scan(int &pt) {
    return scanf("%d", &pt);
}
inline int scan(char &pt) {
    return scanf("%c", &pt);
}
inline int scan(long long &pt) {
    return scanf("%I64d", &pt);
}
inline int scan(double &pt) {
    return scanf("%lf", &pt);
}
inline int scan(char pt[]) {
    return scanf("%s", pt);
}
const long long moda = 1034120412891ll;

using namespace std;


int prime[1100000];
int isprime[11000000];
int getlist(int listsize)
{
    memset(isprime,1,sizeof(isprime));
    int primesize = 0;
    isprime[1]=0;
    for(int i=2;i<=listsize;i++)
    {
        if(isprime[i])prime[primesize++]=i;
         for(int j=0;j<primesize&&i*prime[j]<listsize;j++)
         {
            isprime[i*prime[j]]=0;
            if(i%prime[j]==0)break;
        }
    }
    return primesize;
}


int n,m,k;
long long a[300000];
map<int,int>mapa;
map<int,int>mapb;
int main() {
    int p = getlist(1000);

    for(int i=0;i<p-1;i++){
        mapa[prime[i] + prime[i+1]+1]++;
    }

    int cnt = 0;
    for(int i=2;i<p;i++){
        if(prime[i] && mapa[prime[i]]){
            mapb[prime[i]] = ++cnt;
        }
    }

    scan(n);
    scan(k);
    auto it = mapb.lower_bound(n);
    if(it->first!=n)it--;

    //cout<<it->second <<endl;
    if(it->second>=k)print("YES");
    else print("NO");
    return 0;
}
