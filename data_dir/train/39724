#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define dbg(x) cout << #x << '=' << x << '\n';
#define ll long long
#define pi pair<int,int>
#define pl pair<ll,ll>
#define pd pair<double,double>
#define ld long double
#define pld pair<ld,ld>
#define lg length()
#define sz size()
#define pb push_back
#define MAXN 100005
#define INF 1000000005
#define LINF 1000000000000000005
#define x1 xdddddddddddddddddd
#define y1 ydddddddddddddddddd

int n,a[500005],sg[2000005],q,x,y,z;

void Upd(int nod, int l, int r, int p, int v){
    if(l>p || r<p) return;
    if(l==r){
        sg[nod]=v;
        return;
    }
    int mid=(l+r)/2;
    Upd(2*nod,l,mid,p,v);
    Upd(2*nod+1,mid+1,r,p,v);
    sg[nod]=__gcd(sg[2*nod],sg[2*nod+1]);
}

int Qry(int nod, int l, int r, int lt, int rt){
    if(l>rt || r<lt) return 0;
    if(l>=lt && r<=rt) return sg[nod];
    int mid=(l+r)/2;
    return __gcd(Qry(2*nod,l,mid,lt,rt),Qry(2*nod+1,mid+1,r,lt,rt));
}


int Qry2(int nod, int l, int r, int lt, int rt){
    if(l>rt || r<lt) return r+1;
    if(l>=lt && r<=rt){
        //cout << nod << ' ' << l << ' ' << r << '\n';
        if(sg[nod]%z==0) return r+1;
        else if(l==r){
            return r;
        }
        else{
            int mid=(l+r)/2;
            int p=Qry2(2*nod,l,mid,lt,rt);
            if(p==mid+1){
                return Qry2(2*nod+1,mid+1,r,lt,rt);
            }
            else return p;
        }
    }
    int mid=(l+r)/2;
    int p=Qry2(2*nod,l,mid,lt,rt);
    if(p==mid+1) return Qry2(2*nod+1,mid+1,r,lt,rt);
    else return p;
}

int32_t main(){
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    cin >> n;
    for(int i=1;i<=n;i++){
        cin >> a[i];
        Upd(1,1,n,i,a[i]);
    }
    cin >> q;
    for(int i=1;i<=q;i++){
        cin >> x;
        if(x==1){
            cin >> x >> y >> z;
            int g=Qry(1,1,n,x,y);
            if(g%z==0) cout << "YES\n";
            else{
                int l=Qry2(1,1,n,x,y);
                int f=Qry(1,1,n,l,l);
                Upd(1,1,n,l,z);
                g=Qry(1,1,n,x,y);
                if(g%z==0) cout << "YES\n";
                else cout << "NO\n";
                Upd(1,1,n,l,f);
            }
        }
        else{
            cin >> x >> y;
            Upd(1,1,n,x,y);
        }
    }
}
