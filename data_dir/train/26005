#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define F first
#define S second

using namespace std;
int n;
int par[1002];            
queue < pair <int, int> > q;
int get (int x) {
	if (par[x] == x) {
		return x;
	}
	else {
		return par[x] = get (par[x]);
	}
}
void union_sets (int l, int r) {
	int f = get (l), s = get (r);
	if (f != s) {
		if (f > s) {
			par[s] = f;
		}	
		else {
			par[f] = s;
		}
	}
	else {
	   q.push(mp (l, r) );
	}
}
int main () {
	cin >> n;
	for (int i = 1; i <= n; i ++) {
		par[i] = i;
	}	
	for (int i = 1; i < n; i ++) {
		int l, r;
		cin >> l >> r;
		union_sets (l, r);
	}
	vector <pair < pair <int, int>, pair <int, int> > > ans;
	for (int i = 1; i <= n; i ++) {
		for (int j = i + 1; j <= n; j ++) {
			int f = get (i), s = get (j);
			if (f != s) {
			    ans.pb(mp (q.front(), mp(f, s) ) );
			    q.pop();
			    union_sets (f, s); 
			}
		}   	
	}           
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i ++) {
		cout << ans[i].F.F << " " << ans[i].F.S << " " << ans[i].S.F << " " << ans[i].S.S << endl;
	}
}