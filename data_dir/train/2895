#include <bits/stdc++.h>
using namespace std;

const int shift = 2000;
long long dp[2005][4005];
int c[2005];
int t[2005];
int n;

long long sol(int i, int dif)
{
	if (dif > 2000)
		return 0;
	if (i == n)
	{
		if (dif >= 0)
			return 0;
		return 10000000000000ll;
	}
	if (dp[i][shift + dif] != -1)
		return dp[i][shift + dif];
	return dp[i][shift + dif] = min(c[i] + sol(i+1, dif + t[i]), sol(i+1, dif - 1));
}

int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d %d", t+i, c+i);
	memset(dp, -1, sizeof(dp));
	printf("%lld\n", sol(0,0));
}