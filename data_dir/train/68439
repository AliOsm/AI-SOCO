#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n;
	cin >> n;
	
	string a, b;
	cin >> a >> b;
	
	vector<vector<int>> A(26), B(26);
	vector<int> IA, IB;
	
	for(int i = 0; i < n; i++){
		if(a[i] == '?')
			IA.push_back(i);
		else
			A[a[i] - 'a'].push_back(i);
	}
	
	for(int i = 0; i < n; i++){
		if(b[i] == '?')
			IB.push_back(i);
		else
			B[b[i] - 'a'].push_back(i);
	}

	vector<pii> ans;
	
	for(int i = 0; i < 26; i++){
		int mn = min((int)A[i].size(), (int)B[i].size());
		while(mn--){
			ans.push_back({A[i].back(), B[i].back()});
			A[i].pop_back();
			B[i].pop_back();
		}
	}
	
	for(int i = 0; i < 26 && (int)IA.size() > 0; i++){
		while(B[i].size() > 0 && IA.size() > 0){
			ans.push_back({IA.back(), B[i].back()});
			IA.pop_back();
			B[i].pop_back();
		}
	}
	
	for(int i = 0; i < 26 && (int)IB.size() > 0; i++){
		while(A[i].size() > 0 && IB.size() > 0){
			ans.push_back({A[i].back(), IB.back()});
			IB.pop_back();
			A[i].pop_back();
		}
	}
	
	while(IA.size() > 0 && IB.size() > 0){
		ans.push_back({IA.back(), IB.back()});
		IA.pop_back();
		IB.pop_back();
	}
	
	cout << ans.size() << endl;
	for(auto &p : ans)
		cout << p.first + 1 << " " << p.second + 1 << endl;

	return 0;
}
