#include <bits/stdc++.h>

using namespace std;

typedef unsigned uint;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldbl;
typedef pair<int, int> pii;
typedef pair<uint, uint> puu;
typedef pair<ll, ll> pll;
typedef pair<ull, ull> pull;
typedef pair<double, double> pdd;
typedef vector<int> vi;
typedef vector<uint> vu;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<pii> vpii;
typedef vector<puu> vpuu;
typedef vector<pll> vpll;
typedef vector<pull> vpull;
typedef vector<string> vstr;
typedef vector<double> vdbl;
typedef vector<ldbl> vldbl;
#define pb push_back
#define ppb pop_back
#define pfr push_front
#define ppfr pop_front
#define emp emplace
#define empb emplace_back
#define be begin
#define rbe rbegin
#define all(x) (x).be(), (x).end()
#define rall(x) (x).rbe(), (x).rend()
#define fir first
#define sec second
#define mkp make_pair
#define brif(cond) if (cond) break
#define ctif(cond) if (cond) continue
#define retif(cond) if (cond) return
void canhazfast() {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}
template<typename T> T gcd(T a, T b) {return b ? gcd(b, a%b) : a;}
template<typename T> T extgcd(T a, T b, T &x, T &y)
{
    T x0 = 1, y0 = 0, x1 = 0, y1 = 1;
    while (b) {
        T q = a/b; a %= b; swap(a, b);
        x0 -= q*x1; swap(x0, x1);
        y0 -= q*y1; swap(y0, y1);
    }
    x = x0; y = y0; return a;
}
int ctz(uint x) {return __builtin_ctz(x);}
int ctzll(ull x) {return __builtin_ctzll(x);}
int clz(uint x) {return __builtin_clz(x);}
int clzll(ull x) {return __builtin_clzll(x);}
int popcnt(uint x) {return __builtin_popcount(x);}
int popcntll(ull x) {return __builtin_popcountll(x);}
int bsr(uint x) {return 31^clz(x);}
int bsrll(ull x) {return 63^clzll(x);}

#define MX 1024

int a[MX][MX];

int main()
{
    canhazfast();

    int n, m;
    vector<vi> row, col;

    cin >> n >> m;
    row.resize(n, vi(m));
    col.resize(m, vi(n));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> a[i][j];
            row[i][j] = a[i][j];
            col[j][i] = a[i][j];
        }
        sort(all(row[i]));
        row[i].erase(unique(all(row[i])), row[i].end());
    }
    for (int j = 0; j < m; ++j) {
        sort(all(col[j]));
        col[j].erase(unique(all(col[j])), col[j].end());
    }
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            int rl = lower_bound(all(row[i]), a[i][j])-row[i].be();
            int rh = row[i].end()-upper_bound(all(row[i]), a[i][j]);
            int cl = lower_bound(all(col[j]), a[i][j])-col[j].be();
            int ch = col[j].end()-upper_bound(all(col[j]), a[i][j]);
            int ans = max(rl, cl)+max(rh, ch)+1;
            cout << ans << ' ';
        }
        cout << '\n';
    }

    return 0;
}
