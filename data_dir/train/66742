//                             In The Name Of Allah
#include <bits/stdc++.h>
#define ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define ll long long
#define pb push_back
#define int long long
using namespace std;
 
const ll N = 1e6 + 1000, OO = 1e18 + 10, M = 1e9 + 7, M2 = 998244353, lg = 22;
typedef pair <int, int> pii;
int dp[N], dp2[N], dk2[N], dk[N];
char c[N];
 
int32_t main() {
	int n, m;
	cin >> n >> m;
	int p = 0;
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			cin >> c[++p];
		}
	}
	dp[1] = 1, dp2[1] = 1;
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			int t = (i - 1) * m + j;
			int x = max(t - 1, (int)0);
			int y = max(t - m, (int)0);
			if(t == 1)
				continue;
			if(c[t] == '#') {
				dp[t] = 0;
				dp2[t] = 0;
				continue;
			}
			dp[t] = dp[x] + dp[y];
			dp2[t] = dp2[x] + dp2[y];
			dp2[t] %= M2;
			dp[t] %= M;
		}
	}
	int f = n * m;
	if(dp[f] == 0 && dp2[f] == 0)
		return cout << 0, 0;
	dk[n * m] = 1, dk2[n * m] = 1;
	for(int i = n; i >= 1; i--) {
		for(int j = m; j >= 1; j--) {
			int t = (i - 1) * m + j;
			int x = min(t + 1, n * m + 1);
			int y = min(t + m, n * m + 1);
			if(t == n * m)
				continue;
			if(c[t] == '#') {
				dk[t] = 0;
				dk2[t] = 0;
				continue;
			}
			dk[t] = dk[x] + dk[y];
			dk2[t] = dk2[x] + dk2[y];
			dk2[t] %= M2;
			dk[t] %= M;
		}
	}
	for(int i = 1; i <= n; i++) {
		for(int j = 1; j <= m; j++) {
			int t = (i - 1) * m + j;
			if(t == 1 || t == (n * m))
				continue;
			if((dp[t] % M * dk[t]) % M == dp[n * m] && (dp2[t] % M2 * dk2[t]) % M2 == dp2[n * m])
				return cout << 1, 0;
		}
	}
	cout << 2 << endl;
	return 0;
}
