#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
#include <cctype>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <list>
#include <bitset>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef long double ld;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef stringstream ss;

#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(),(x).end()
#define clr(t,v) memset((t),(v),sizeof(t))
#define endl ('\n')

#define rep(i,n) int i=0,_##i=(n);i<(_##i);i++
#define dwn(i,n) int i=(n);(--i)>=0;
#define repr(i,a,b) __typeof(b) i=(a),_##i=(b);i<(_##i);i++
#define dwnr(i,a,b) __typeof(b) i=(b),_##i=(a);(i--)>(_##i);
#define repi(i,a) __typeof((a).begin()) i=(a).begin(),_##i=(a).end();i!=(_##i);i++
#define dwni(i,a) __typeof((a).rbegin()) i=(a).rbegin(),_##i=(a).rend();i!=(_##i);i++

const int inf=1999999999;
const double pi=acos(-1.0);
const double eps=1e-9;
char gc(){char c;while(isspace(c=getchar()));return c;}
int gs(char*s){fgets(s,9999999,stdin);int l=strlen(s);while(l && isspace(s[l-1]))s[--l]=0;return l;}
int avail,turnl;
int cost[100];
int spentt[100][100];
bool go(int a,int sk,int cardi)
{
	int need=max(1,cost[cardi]-sk-spentt[a][cardi]);
//	cout<<need<<' '<<avail<<endl;
	if(need<=avail)
	{
		avail-=need;
		return true;
	}
	spentt[a][cardi]+=avail;
	return false;
}
int skill[100][2];
string name[100];
bool done[100];
void run()
{
	clr(spentt,0);
	int playn;
	cin>>playn>>turnl;
	for(rep(i,playn))
	{
		int a,b,c,d;
		cin>>a>>b>>c>>d;
		skill[i][0]=a+d;
		skill[i][1]=b+c;
	}
	int cardn;
	cin>>cardn;
	for(rep(i,cardn))
		cin>>name[i]>>cost[i];
	int cardi=0;
	int player=0;
	vector<string> win[100];
	int donen=0;
	while(donen<cardn)
	{
		for(rep(i,playn))
		{
			avail=turnl;
			while(go(i,skill[i][player],cardi))
			{
				win[i].push_back(name[cardi]);
				done[cardi]=true;
				donen++;
				if(avail<=0)
					break;
				if(donen==cardn)
					break;
				do
				{
					cardi=(cardi+1)%cardn;
				}while(done[cardi]);
			}
			if(donen==cardn)
				break;
			do
			{
				cardi=(cardi+1)%cardn;
			}while(done[cardi]);
		}
		player=!player;
	}
	for(rep(i,playn))
	{
		cout<<sz(win[i]);
		for(rep(j,sz(win[i])))
			cout<<' '<<win[i][j];
		cout<<endl;
	}
}
int main()
{
	freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
	ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);
	run();
	return 0;
}
