#include<iostream>
#include<cmath>
#include<cstdio>
using namespace std;
double xx[200006],yy[200006];
int nomber[10005],pul[10005];
double xold[10005];
double x[10006],r[10006];
double xxx[10006],rrr[10006];
void mergesort(double *a,double *b,double *c,double *d,int n)
{
    int i0,i1,iRight,iEnd,width,i,j;
    for(width=1;width<n;width<<=1)
        for(i=0;i<n;i+=(width<<1))
        {
            i0=i;
            iEnd=min(i+(width<<1),n);
            iRight=i1=min(i+width,n);
            for(j=i;j<iEnd;j++)
                if(i0<iRight &&(i1==iEnd || a[i0]<a[i1]))
                {
                    b[j]=a[i0];
                    d[j]=c[i0++];
                }
                else
                {
                    b[j]=a[i1];
                    d[j]=c[i1++];
                }
            for(j=i;j<iEnd;j++)
            {
                a[j]=b[j];
                c[j]=d[j];
            }
        }
}
int main()
{
    int n,m;
    int count=0;
    cin>>n;
    int i;
    for(i=0;i<n;i++)
    {
        scanf("%lf%lf",&x[i],&r[i]);
        xold[i]=x[i];
    }
    cin>>m;
    for(i=0;i<m;i++)
        scanf("%lf%lf",&xx[i],&yy[i]);
    mergesort(x,xxx,r,rrr,n);
    int ll;
    int rr;
    int res;
    for(i=0;i<n;i++)
    {
        ll=-1;
        rr=n;
        while(rr-ll>1)
        {
            res=((ll+rr)>>1);
            if(x[res]>xold[i])
                rr=res;
            else if(x[res]<xold[i])
                ll=res;
            else
                break;
        }
        nomber[res]=i;
        pul[i]=-1;
    }
    for(i=0;i<m;i++)
    {
        ll=-1;
        rr=n;
        while(rr-ll>1)
        {
            res=((ll+rr)>>1);
            if(x[res]<xx[i])
                ll=res;
            else
                rr=res;
        }
        if( ll>-1 && 1.0000*sqrt(yy[i]*yy[i]+(x[ll]-xx[i])*(x[ll]-xx[i]))<=r[ll]+0.0000001 && pul[nomber[ll]]==-1)
        {
            pul[nomber[ll]]=i+1;
            count++;
        }
        if( rr<n && 1.0000*sqrt(yy[i]*yy[i]+(x[rr]-xx[i])*(x[rr]-xx[i]))<=r[rr]+0.0000001 && pul[nomber[rr]]==-1)
        {
            pul[nomber[rr]]=i+1;
            count++;
        }
    }
    cout<<count<<endl;
    for(i=0;i<n-1;i++)
        printf("%d ",pul[i]);
    printf("%d\n",pul[i]);
    return 0;
}
