#include <bits/stdc++.h>
typedef long long ll;
typedef long double ld;
using namespace std;

const int maxn = 1e5 + 5;
vector <int> a[maxn];
int c[maxn], dp[maxn], cnt[maxn];
vector <int> sol;

void dfs(int u) {
    dp[u] = 1;
    cnt[u] = c[u];
    for (int v : a[u]) {
        dp[u]++;
        cnt[u] += c[v];
        dfs(v);
    }
    if (dp[u] == cnt[u])
        sol.push_back(u);
}

void solve() {
    int n;
    cin >> n;
    int root = -1;
    for (int i = 1; i <= n; ++i) {
        int p;
        cin >> p >> c[i];
        if (p == -1)
            root = i;
        else {
            a[p].push_back(i);
            
        }
    }
    dfs(root);
    sort(sol.begin(), sol.end());
    if (sol.size() == 0) {
        cout << -1;
    }
    else {
        for (int ans : sol)
            cout << ans << ' ';
    }
}

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
#ifdef arrias
    freopen("true.txt", "r", stdin);
#endif 
    solve();
    return 0;
}