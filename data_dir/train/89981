#include <iostream>
#include <functional>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stdint.h>
using namespace std;

std::map<std::string, int> q;
int id = 0;

int getId(string & str)
{
	for (int i = 0; i < str.size(); ++i)
	{
		str[i] = tolower(str[i]);
	}
	if (q.count(str))
		return q[str];
	else
	{
		return q[str] = id++;
	}
}

int main()
{
	int n;
	cin >> n;
	map<int, std::vector<int> > g;
	for (int i = 0; i < n; ++i)
	{
		string name1, tmp, name2;
		cin >> name1 >> tmp >> name2;
		int a = getId(name1);
		int b = getId(name2);
		g[b].push_back(a);
	}
	int s = q["polycarp"];
	std::queue<int> w;
	w.push(s);
	int inf = 1000 * 1000 * 1000;
	vector<int> d(id, inf);
	d[s] = 0;
	while (!w.empty())
	{
		int v = w.front();
		w.pop();
		for (int i = 0; i < g[v].size(); ++i)
		{
			int to = g[v][i];
			if (d[to] > d[v] - 1)
			{
				d[to] = d[v] - 1;
				w.push(to);
			}
		}
	}
	int mx = 0;
	for (int i = 0; i < d.size(); ++i)
	{
		mx = min(mx, d[i]);
	}
	cout << -mx + 1;
}