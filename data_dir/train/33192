//Link : https://codeforces.com/contest/1253

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define N (1<<18) + 152

/*
#include <limits.h>
INT_MAX
LLONG_MAX
*/

int a[N];
ll dp[N][20];

int maxChoice;

int getMaxBit(int n) {
  int ret = 0;
  while(n>1) {
    ++ret;
    n/=2;
  }
  return ret;
}
const ll inf = 1e18;
ll solveDp(int ind,int n,int t) {
  if(ind==n) {
    if(t== maxChoice) {
      return 0;
    }
    return inf;
  }
  ll &ret = dp[ind][t];
  if(ret!=-1) {
    return ret;
  }
  ret = inf;
  if( t+1<=getMaxBit(ind+1)) {
    ret = min(ret, solveDp(ind+1,n,t+1) + a[ind]);
  }
  ret = min(ret, solveDp(ind+1,n,t));
  return ret;
}
void solve() {
  int n;
  scanf("%d ", &n);
  for(int i=0;i<n;++i) {
    scanf("%d ", &a[i]);
  }
  for(int i=0;i<n;++i) {
    if(a[i]==-1) {
      for(int j=0;j<=i;++j) {
        a[j] = 0;
      }
      break;
    }
  }
  maxChoice = getMaxBit(n);
  memset(dp,-1,sizeof(dp));
  printf("%lld\n", solveDp(1,n,0));
}


int main() {
    //freopen("input.txt","r",stdin);
    solve();
    return 0;
}
