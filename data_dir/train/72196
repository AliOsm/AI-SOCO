#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))
#define x(t) get<0>(t)
#define y(t) get<1>(t)
#define z(t) get<2>(t)

template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

typedef long long LL;
typedef tuple<int, int> T2;
typedef tuple<int, int, int> T3;

#define INF (0x3f3f3f3f)

#define MAXN (505)

int in[MAXN][MAXN];
int R, C, Q;
int row_scores[MAXN];

void cal_score(int r) {
    int cnt = 0;
    row_scores[r] = 0;
    REP(i, C) {
        if (in[r][i] == 1) {
            cnt++;
            maxa(row_scores[r], cnt);
        } else {
            cnt = 0;
        }
    }
}

int main() {
    scanf("%d %d %d", &R, &C, &Q);
    REP(i, R) {
        REP(j, C) {
            scanf("%d", &in[i][j]);
        }
    }

    REP(i, R) {
        cal_score(i);
    }

    int r, c;
    REP(q, Q) {
        scanf("%d %d", &r, &c);
        r--, c--;
        in[r][c] ^= 1;
        cal_score(r);
        int ans = 0;
        REP(i, R) maxa(ans, row_scores[i]);
        printf("%d\n", ans);
    }
    return 0;
}
