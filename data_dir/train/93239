#include <iostream>
#include <algorithm>
#include <cstdio>
#include <map>
#define SIZE 100010
using namespace std;
typedef long long ll;
int BIT[SIZE];
void insert(int p,int how){
  for(;p<SIZE;p+=(p&(-p)))BIT[p]=max(BIT[p],how);
}
int get(int p){
  int ans=0;
  for(;p>0;p-=(p&(-p)))ans=max(ans,BIT[p]);
  return ans;
}
int N;
int R[SIZE],dp[SIZE];
void solve(){
  dp[N-1]=1;insert(R[N-1],1);
  for(int i=N-2;i>=0;--i){
   dp[i]=1+get(R[i]);
   insert(R[i],dp[i]);
                         }
}
map<ll,int> CX,CY;
int X[SIZE],Y[SIZE],n,v;ll V;
int POSL[SIZE];
bool compare(const int& a,const int& b){return (X[a]!=X[b])?X[a]<X[b]:Y[a]>Y[b];}
int main(){
  int i,j,k,l;
  //system("pause");
  scanf("%d",&n);
  for(i=0;i<n;++i)scanf("%d%d",&X[i],&Y[i]);
  ++n;scanf("%d",&v);V=v;
  for(i=0;i<n;++i){
   CX[X[i]+Y[i]*V]=0;
   CY[X[i]-Y[i]*V]=0;
                  }
  l=1;for(map<ll,int>::iterator it=CX.begin();it!=CX.end();++it)it->second=l++;
  l=1;for(map<ll,int>::iterator it=CY.begin();it!=CY.end();++it)it->second=l++;
  for(i=0;i<n;++i){
   POSL[i]=i;
   int ox=X[i],oy=Y[i];
   X[i]=CX[ox+oy*V];
   Y[i]=CY[ox-oy*V];
                  }
  sort(POSL,POSL+n,compare);
  N=0;
  for(i=0;i<n;++i){j=POSL[i];R[N++]=Y[j];}
  solve();
  int A1=0,A2=0;
  int BADX=CX[0],BADY=CY[0];
  for(i=0;i<N;++i){
   if(X[POSL[i]]==BADX && Y[POSL[i]]==BADY)A1=max(A1,dp[i]-1);
   else A2=max(A2,dp[i]);
                  }
  printf("%d %d\n",A1,max(A1,A2));
  //system("pause");
  return 0;
}
