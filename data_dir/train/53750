#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
//#define int                 long long
#define ll              	long long
#define ld                  long double
#define rep(i,n)            for(int i=0;i<n;i++)
#define hell                1000000007
#define inf                 (ll)1e15
#define vi                  vector<int>
#define vii                 vector< vi >
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define pii                 pair<int,int>
#define all(c)              c.begin(),c.end()
#define sz(c)               (int)c.size()
#define hash1               105727LL
#define hash2               hell
//#define endl                '\n'
#define eps                 1e-10
#define pi                  3.141592653589793238462643383279502884197
typedef tree<pair<int,int>,null_type,less<pair<int,int> >,
				rb_tree_tag,tree_order_statistics_node_update> statisticsTree;
ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll power(ll x, ll y,ll p)
{
	ll res=1;
	x=x%p;
	while(y>0)
	{
		if(y&1)
			res=((res%p)*(x%p))%p;
		y=y>>1;
		x=((x%p)*(x%p))%p;
	}
	return res;
}
ll raichu(ll x,ll y)
{
	ll res=1;
	while(y>0)
	{
		if(y&1)
			res=((res)*(x));
		y=y>>1;
		x=((x)*(x));
	}
	return res;
}
bool isprime(ll n)
{
	if(n<2) return false;
	else if(n==2) return true;
	else if(n%2==0) return false;
	else
	{
		ll z=sqrt(n);
		rep(i,z-1) if(n%(i+2)==0) return false;
		return true;
	}
}
int ti;
vector<pii > ans;
void dfs1(int c,int p,vector<vector<pair<int,int> > > &g,vi &disc,vi &vis,vi &low,vi &par)
{
	par[c]=p;
	int child=0;
	disc[c]=ti;
	low[c]=ti;
	ti++;
	vis[c]=1;
	for(auto i:g[c])
	{
		if(i.se==p) continue;
		if(vis[i.se]==-1)
		{
			child++;
			dfs1(i.se,c,g,disc,vis,low,par);
			low[c]=min(low[c],low[i.se]);
			if(low[i.se]>disc[c]) ans.pb(mp(c,i.se));
		}
		else low[c]=min(low[c],disc[i.se]);
	}
	return;
}
void dfs2(int c,vector<vector<pair<int,int> > > &g,set<pii >&s,vi &vis,int t)
{
	vis[c]=t;
	for(auto i:g[c])
	{
		if(vis[i.se]==0 && s.find(mp(c,i.se))==s.end() && s.find(mp(i.se,c))==s.end())
		{
			dfs2(i.se,g,s,vis,t);
		}
	}
	return;
}
void dfs3(int st,int p,int en,vector<vector<pair<int,int> > > &g,vi &C)
{
	ti+=C[st];
	if(st==en)
	{
		if(ti>0) cout<<"YES";
		else cout<<"NO";
		exit(0);
	}
	for(auto i:g[st])
	{
		if(i.se!=p)
		{
			ti+=i.fi;
			dfs3(i.se,st,en,g,C);
			ti-=i.fi;
		}
	}
	ti-=C[st];
	return;
}
int32_t main()
{
	//freopen("B-large.in","r",stdin);
	//freopen("out2.txt","w",stdout);
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tests=1,Tests;
	//cin>>tests;
	Tests=tests;
	while(tests--)
	{
		int n,m;
		cin>>n>>m;
		vector<vector<pair<int,int> > > g(n);
		rep(i,m)
		{
			int u,v,w;
			cin>>u>>v>>w;
			g[--u].pb(mp(w,--v));
			g[v].pb(mp(w,u));
		}
		int a,b;
		cin>>a>>b;
		a--;
		b--;
		vi disc(n,-1),vis(n,-1),low(n,-1),par(n,-1);
		for(int i=0;i<n;i++)
		{
			if(vis[i]==-1)
			{
				ti=0;
				dfs1(i,-1,g,disc,vis,low,par);
			}
		}
		set<pii > s(ans.begin(),ans.end());
		rep(i,n) vis[i]=0;
		vector<int> C;
		int t=0;
		rep(i,n)
		{
			if(vis[i]==0)
			{
				t++;
				dfs2(i,g,s,vis,t);
			}
		}
		C.resize(t);
		vector<vector<pair<int,int> > > G(t);
		rep(i,n)
		{
			for(auto j:g[i])
			{
				if(vis[i]!=vis[j.se]) G[vis[i]-1].pb(mp(j.fi,vis[j.se]-1));
				else C[vis[i]-1]+=j.fi;
			}
		}
		ti=0;
		dfs3(vis[a]-1,vis[a]-1,vis[b]-1,G,C);
		cout<<"NO";
	}
	return 0;
}