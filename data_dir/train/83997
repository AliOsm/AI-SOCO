#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <bitset>
#include <vector>
#include <queue>
#include <memory.h>
#include <deque>
#include <iomanip>
#include <utility>
#include <string>
#include <ext/rope>
#include <iterator>

using namespace std;
using namespace __gnu_cxx;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size
#define scf scanf
#define prf printf       
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define gcd(a,b) __gcd(a,b)
#define print(x) prf("%d\n", x.sz()); for (int i = 0; i < x.sz(); i++) prf("%d ", x[i]);
#define getBit(x,i) ((x&(1<<i))!=0 ? 1 : 0)
#define For(i,n) for (int i = 0; i < n; ++i)
#define FOR(i,begin,end,move) for (int i = begin; i != end; i += move)

typedef long long ll;

const ll base = 1000000007LL;
const ll INF = 10000000000000LL;
    
ll c1, c2, x, y;

bool can(ll mid)
{
    ll p1 = mid - mid / x;
    ll p2 = mid - mid / y;
    if (p1 >= c1 && p2 >= c2 && c1 + c2 <= (mid - (mid/(x*y))))
        return true;
    else return false;
}

int main()
{                    
    cin >> c1 >> c2 >> x >> y;
    ll l = 0;
    ll r = (ll)1e18;
    while (r - l > 1LL)
    {
        ll mid = (l + r) / 2LL;
        if (can(mid))
            r = mid;
        else l = mid;   
    }
    if (can(l))
        cout << l << endl;
    else cout << r << endl;                      
    return 0;
}