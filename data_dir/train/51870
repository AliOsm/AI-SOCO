#include <iostream>
#include <iomanip>

#include <cmath>
#include <algorithm>

#include <deque>
#include <list>

#include <vector>
#include <string>

#include <set>
#include <map>

#include <random>
#include <numeric>
#include <functional>

#include <bitset>

#include <cassert>

#include <queue>
#include <stack>

#include <unordered_set>
#include <unordered_map>

using namespace std;

typedef long long ll;

const int N = 6;

int a[N] = { 4, 8, 15, 16, 23, 42 }, answer[N];

int ask(int a, int b) {
	cout << "? " << a << " " << b << endl;
	int result;
	cin >> result;
	return result;
}

bool is(int x) {
	return (x == 4 || x == 8 || x == 15 || x == 16 || x == 23 || x == 42);
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	map <int, pair <int, int>> mp;
	for (int i = 0; i < N; i++) {
		for (int j = i + 1; j < N; j++) {
			mp[a[i] * a[j]] = { a[i], a[j] };
		}
	}
	int a = ask(1, 2);
	int b = ask(1, 3);
	int c = ask(4, 5);
	int d = ask(4, 6);
	if (b % mp[a].first == 0 && is(b / mp[a].first) && mp[a].first != a / mp[a].first && mp[a].first != b / mp[a].first && a /mp[a].first != b / mp[a].first) {
		answer[0] = mp[a].first;
		answer[1] = a / mp[a].first;
		answer[2] = b / mp[a].first;
	}
	else {
		answer[0] = mp[a].second;
		answer[1] = a / mp[a].second;
		answer[2] = b / mp[a].second;
	}
	if (d % mp[c].first == 0 && is(d / mp[c].first) && mp[c].first != c / mp[c].first && mp[c].first != d / mp[c].first && c / mp[c].first != d / mp[c].first) {
		answer[3] = mp[c].first;
		answer[4] = c / mp[c].first;
		answer[5] = d / mp[c].first;
	}
	else {
		answer[3] = mp[c].second;
		answer[4] = c / mp[c].second;
		answer[5] = d / mp[c].second;
	}
	cout << "! ";
	for (int i = 0; i < N; i++) {
		cout << answer[i] << " ";
	}
	cout << endl;
	return 0;
}
