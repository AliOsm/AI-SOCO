#include<bits/stdc++.h>
using namespace std;
int n, m, x, y, z, p, q, r;
int vis[200000];

int ara[200000];

vector < int > vec[200000], tmp;

int cnt = 0;

void dfs(int pos)
{
    if(vis[pos]) return;
    vis[pos] = 1;
    dfs(ara[pos]);
    tmp.push_back(pos);
}

int main()
{
    cin >> n;

    for(int i = 1; i <= n; i++) scanf("%d", &ara[i]);

    bool flg1 = false, flg2 = false, flgodd = false;
    int ek = 0, dui = -1;

    for(int i = 1; i <= n; i++){
        if(vis[i]) continue;
        tmp.clear();

        dfs(i);

        vec[cnt] = tmp;
        cnt++;

        if(tmp.size() == 1){
            flg1 = true;
            ek = tmp[0];
        }
        else if((int)tmp.size() % 2)  flgodd = true;

        //cout << tmp.size() << endl;

        if(tmp.size() == 2){
            flg2 = true;
            dui = cnt - 1;
        }
    }

    if(flg1){
        cout << "YES" << endl;
        for(int i = 1; i <= n; i++){
            if(i == ek) continue;
            printf("%d %d\n", i, ek);
        }
        return 0;

    }

    if(flgodd){
        cout << "NO" << endl;
        return 0;
    }

    if(!flg2) {
        printf("NO\n");
        return 0;
    }

    printf("YES\n");

    for(int i = 0; i < cnt; i++){
        if(i == dui) continue;

        for(int j = 0; j < vec[i].size(); j++){
            printf("%d %d\n", vec[i][j], vec[dui][j & 1]);
        }

    }

    printf("%d %d\n", vec[dui][0], vec[dui][1]);

    return 0;
}
