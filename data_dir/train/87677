#include <bits/stdc++.h>
#define ll long long
using namespace std;
const int N = 5005, M = 3e5 + 5;
int dp[N][N], n, k;
int a[M];
int get(int i, int j) {
	return i * ((n - 1) / k) + j * ((n - 1) / k - 1) + 1 + i + j;
}
int target;
int solve(int ind, int r) {
	if (ind + r == k) return 0;
	int &ret = dp[ind][r];
	if (ret != -1) return ret;
	int indx = get(ind, r);
	ret = 2e9;
//	cout << ind << " " << r << " " << indx << " " << target << endl;
	if (ind + 1 <= target) ret = solve(ind + 1, r) + a[indx + (n - 1) / k] - a[indx];
	if (r + 1 + target <= k) ret = min(ret, solve(ind, r + 1) + a[indx + (n - 1) / k - 1] - a[indx]);
	return ret;
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> k;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	target = n % k;
	if (!target) target = k;
	sort(a + 1, a + 1 + n);
	memset(dp, -1, sizeof dp);
	cout << solve(0, 0) << endl;
	return 0;
}

