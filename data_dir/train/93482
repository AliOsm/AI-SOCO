#include <bits/stdc++.h>
namespace myland{
    using namespace std;
    namespace _abbr{
        #define fi first
        #define se second
        #define pb push_back
        #define pr make_pair
        #define lb lower_bound
        #define ub upper_bound
        #define str string
        #define _1s __builtin_popcountll
        #define nth(a,l,r,k) nth_element(a+l,a+l+k-1,a+r+1)
        typedef unsigned int ui;
        typedef long long ll;
        typedef unsigned long long ull;
        typedef double db;
        typedef long double ld;
        typedef pair<int,int> pii;
        typedef pair<ll,ll> pll;
        typedef vector<int> vi;
        typedef vector<ll> vl;
        typedef vector<pii> vpii;
        typedef vector<pll> vpll;
        typedef vector<vector<int>> vvi;
        typedef vector<vector<ll>> vvl;
        typedef vector<vector<pll>> vvpll;
    }using namespace _abbr;
    namespace _constant{
        const double EPS(1e-8);
        const double PI(acos(-1.0));
        const int INF(0x3f3f3f3f);
        const ll INFL(0x3f3f3f3f3f3f3f3fll);
        const int MOD(1e9+7);//998244353, 16341163, 999983
        const int dx[]={-1,0,1,0,-1,1,1,-1}, dy[]={0,1,0,-1,1,1,-1,-1};
    }using namespace _constant;
    namespace _solve{
        #define XOR int main()
        #define GG exit(0)
        #define rep(x,a,b) for(int x=a;x<=b;x++)
        #define per(x,a,b) for(int x=b;x>=a;x--)
        #define times(x) for(int cas=1,tms=(x);cas<=tms;cas++)
        #define CaseT int T;cin >> T;times(T)
        #define TCase int T;scanf("%d",&T);times(T)
        #define continue(_) if(_) continue;
        #define break(_) if(_) break;
    }using namespace _solve;
    namespace _calculate{
        bool odd(ll x){return x&1;}
        bool even(ll x){return (x&1)^1;}
        bool posi(ll x){return x>0;}
        bool nega(ll x){return x<0;}
        bool zero(ll x){return x==0;}
        bool prime(ll x){if(x<2) return 0;
            for(int i=2;i*i<=x;i++) if(x%i==0) return 0;
            return 1;}
        ll droot(ll x){return 1+(x-1)%9;}
        ll upd(ll a, ll b){return a%b?a/b+1:a/b;};
        ll random(ll a, ll b){return a+rand()*rand()%(b-a+1);};
        ll bitn(ll x){ll c=0;while(x)c++,x>>=1;return c;}
        template<class T>T sqr(T x){return x*x;}
        ll qpow(ll a, ll n, ll mod = MOD){
            ll res(1);while(n){
            if(n&1) (res*=a)%=mod;
            (a*=a)%=mod;n>>=1;}
            return res%mod;}
        ll inv(ll a, ll mod = MOD){return qpow(a,mod-2);}
        template<class T>void tomin(T& a,T b){if(b<a) a=b;}
        template<class T>void tomax(T& a,T b){if(b>a) a=b;}
    }using namespace _calculate;
    namespace _simple_algo{
        #define rg(a,x,y) (a+x), (a+y+1)
        #define vrg(a,x,y) (a.begin()+x),(a.begin()+y+1)
        #define all(x) (x).begin(),(x).end()
        #define rall(x) (x).rbegin(),(x).rend()
        #define clr(a,b) memset(a,b,sizeof(a))
        #define fil(a,b) fill(all(a),b)
        #define _sum(a) accumulate(a, 0ll)
        #define sz(a) (ll(a.size()))
        ll sol(const string& s){ll x=0;
            for(char c:s)x=x*10+c-48;return x;}
        string los(ll x){string s = "";
            if(x==0) return "0";
            while(x) s=char(x%10+48)+s,x/=10;
            return s;}
        bool pal(const string& s){int l = s.size();
            for(int i=0,j=l-1;i<j;i++,j--)
                if(s[i]!=s[j]) return 0;return 1;}
    }using namespace _simple_algo;
    namespace _io{
        #define FAST_IO ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
        #define bug cerr << "!!!" << endl;
        #define bugc(_) cerr << (#_) << " = " << (_) << endl;
        template<class T>void rd(T& x){cin>>x;}
        str srd(){str s;cin>>s;return s;}
        ll rd(){
            ll x=0,f=1;char ch=getchar();
            while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
            while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
            return x*f;}
        void rd(int& x){x=rd();}
        void rd(ll& x){x=rd();}
        template<class A,class B>void rd(pair<A,B>& p){cin >> p.fi >> p.se;}
        template<class A,class B>void rd(A& a,B& b){rd(a), rd(b);}
        template<class A,class B,class C>void rd(A& a,B& b,C& c){rd(a,b);rd(c);}
        template<class T>void wt(const T& x){cout << x << endl;}
        template<class T>void wt(const T& x, char c){cout << x << c;}
        template<class T>void wt(const T& x, const str& s){cout << x << s;}
        template<class T>void wt(const T& x, int rnd){
            cout << fixed << setprecision(rnd) << x << endl;}
        template<class T>void wt(const vector<T>& v){
            for(int i=0;i<sz(v);i++)wt(v[i]," \n"[i==sz(v)-1]);}
        template<class A,class B>void wt(const pair<A,B>& pr){
            cout << pr.fi << ' ' << pr.se << endl;}
    }using namespace _io;
}using namespace myland;
const int N = 2e5 + 5;

struct Dsu{
    int fa[N];
    Dsu(){rep(i,0,N-1) fa[i]=i;}
    int fd(int x){return x==fa[x]?x:fa[x]=fd(fa[x]);}
    bool join(int x, int y){return fd(x)==fd(y)?0:(fa[fd(x)]=fd(y),1);}
};

struct e{int u, v, w;};

int n, m, u, v, w;
Dsu dsu;
vector<e>es, tes;
int idx=1, head[N], to[N<<1], co[N<<1], nxt[N<<1];
int dep[N], fa[N][20], mx[N][20];

void dfs(int u, int f){
    fa[u][0] = f;
    for(int i=head[u];i;i=nxt[i]){
        int v = to[i], w = co[i];
        continue(f==v);
        dep[v] = dep[u] + 1;
        mx[v][0] = w;
        dfs(v, u);
    }
}

void doubly(){
    dfs(1, 1);
    rep(j,1,19) rep(i,1,n)
        fa[i][j] = fa[fa[i][j-1]][j-1],
        mx[i][j] = max(mx[i][j-1], mx[fa[i][j-1]][j-1]);
}

int get_mx(int u, int v){
    if(dep[u]<dep[v]) swap(u,v);
    int ret = -1;
    per(i,0,19) if(dep[fa[u][i]]>=dep[v])
        tomax(ret, mx[u][i]), u = fa[u][i];
    if(u==v) return ret;
    per(i,0,19) if(fa[u][i]!=fa[v][i])
        tomax(ret, mx[u][i]), u = fa[u][i],
        tomax(ret, mx[v][i]), v = fa[v][i];
    tomax(ret, mx[u][0]), tomax(ret, mx[v][0]);
    return ret;
}

XOR{
    rd(n, m);
    times(m){
        rd(u, v, w);
        es.pb({u, v, w});
    }
    tes = es;
    sort(all(es),[](e a, e b){return a.w<b.w;});
    ll ans = 0;
    for(e& x:es) if(dsu.join(x.u, x.v)) ans += x.w,//(cout << x.u << ' ' << x.v << endl),
        to[idx] = x.v, co[idx] = x.w, nxt[idx] = head[x.u], head[x.u] = idx++,
        to[idx] = x.u, co[idx] = x.w, nxt[idx] = head[x.v], head[x.v] = idx++;
    doubly();
    for(e& x:tes) wt(ans+x.w-get_mx(x.u, x.v));
}