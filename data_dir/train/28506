#include <bits/stdc++.h>
#define off  exit( 0 )
#define cn   continue
#define rt   return
#define sc   scanf
#define pr   printf
#define pb   push_back
#define pf   push_front
#define p_f  pop_front
#define p_b  pop_back
#define ff   first
#define ss   second
#define ll   long long
#define ld   long double
#define N    256
#define M    1000000007
#define I    1000000000000000000
#define pdd  pair < ld, ld >
#define pll  pair < ll, ll >
#define pii  pair < int, int >
#define sqr( a )           a * a
#define all( c )           c.begin(), c.end()
#define srt( c )           sort( all( c ) )
#define rev( c )           reverse( all( c ) )
#define srtr( c )          sort( c.rbegin(), c.rend() );
using namespace std;
int n, m, k, lim, sum, extra, pos;
char c[N][N], ans[N][N];
string s = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

void solve()
{
    sum = 0;
    pos = 0;
    cin >> n >> m >> k;
    for( int i = 0; i < n; i ++ )
        for( int  j = 0; j < m; j ++ )
        {
            cin >> c[i][j];
            sum += ( c[i][j] == 'R' );
        }
    extra = sum % k;
    sum /= k;
    lim = sum;
    if( extra )
    {
        lim ++;
        extra --;
    }
    for( int i = 0; i < n; i ++ )
    {
        if( i % 2 )
        {
            for( int j = m - 1; j >= 0; j -- )
            {
                if( c[i][j] == 'R' )lim --;
                ans[i][j] = s[pos];
                if( lim == 0 )
                {
                    pos ++;
                    pos = min( pos, k - 1 );
                    lim = sum;
                    if( extra )
                    {
                        lim ++;
                        extra --;
                    }
                }
            }
        }
        else
        {
            for( int j = 0; j < m; j ++ )
            {
                if( c[i][j] == 'R' )lim --;
                ans[i][j] = s[pos];
                if( lim == 0 )
                {
                    pos ++;
                    pos = min( pos, k - 1 );
                    lim = sum;
                    if( extra )
                    {
                        lim ++;
                        extra --;
                    }
                }
            }
        }
    }
    for( int i = 0; i < n; i ++ )
    {
        for( int j = 0; j < m; j ++ )
            cout << ans[i][j];
        cout << endl;
    }
}
int main()
{
    ll tt = 1;
    sc( "%d", &tt );
    for( ll i = 1; i <= tt; i ++ )
    {
        solve();
    }
}
