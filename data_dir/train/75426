#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using PII = pair<int, int>;
using VI = vector<int>;

int main() {
#ifdef LOCAL_EXEC
//	freopen("sample.in", "r", stdin);
//	freopen("sample.out", "w", stdout);
#else
  ios_base::sync_with_stdio(false); cin.tie(NULL);
#endif

  vector<int> primes;
  [&]() {
    const int N = 4e4;
    vector<bool> isprime(N, true);
    for (int i = 2; i < N; i++) {
      if (isprime[i]) {
        primes.push_back(i);
        for (int j = 2 * i; j < N; j += i) {
          isprime[j] = false;
        }
      }
    }
  }();

  int t; cin >> t;
  while (t--) {
    int n; cin >> n;
    const int nn = n;
    vector<PII> fac;
    for (int p: primes) {
      if (n % p == 0) {
        int f = 0;
        while (n % p == 0) {
          n /= p;
          f++;
        }
        fac.emplace_back(f, p);
      }
    }
    if (n > 1) fac.emplace_back(1, n);

    if (fac.size() == 1) {
      if (fac[0].first >= 6) {
        cout << "YES\n";
        int p = fac[0].second;
        cout << p << ' ' << p*p << ' ' << (nn / (p*p*p)) << '\n';
      } else {
        cout << "NO\n";
      }
    } else if (fac.size() == 2) {
      if (fac[0] > fac[1]) swap(fac[0], fac[1]);
      if (fac[0].first == 1) {
        if (fac[1].first < 3) {
          cout << "NO\n";
        } else {
          int a = fac[0].second;
          int b = fac[1].second;
          cout << "YES\n";
          cout << a << ' ' << b << ' ' << (nn / (a * b)) << '\n';
        }
      } else {
        int a = fac[0].second;
        int b = a * fac[1].second;
        cout << "YES\n";
        cout << a << ' ' << b << ' ' << (nn / (a * b)) << '\n';
      }
    } else {
      int a = 1, b = 1;
      while (fac[0].first--) a *= fac[0].second;
      while (fac[1].first--) b *= fac[1].second;
      cout << "YES\n";
      cout << a << ' ' << b << ' ' << (nn / (a * b)) << '\n';
    }
  }

  return 0;
}
