#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma comment(linker, "/STACK:16777216")

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
using matrix = vector<vector<long long>>;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;

#define all(x) (x).begin(), (x).end()
//#define int ll

void FAST_IO() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifdef _offline
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif // _offline
}

signed main() {
    FAST_IO();
    int n;
    cin >> n;
    set<pii> setik;
    for (int i = 0; i < n; ++i) {
        int k, b;
        cin >> k >> b;
        if (k == 0) {
            continue;
        }
        pii res = {-b, k};
        if (res.first == 0) {
            res.second = 0;
            setik.insert(res);
            continue;
        }
        if (res.first < 0) {
            res.first *= -1;
            res.second *= -1;
        }
        int g = __gcd(res.first, res.second);
        res.first /= g;
        res.second /= g;
        setik.insert(res);
    }
    cout << setik.size();
}
