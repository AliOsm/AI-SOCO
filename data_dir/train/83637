//IOI 2021
//this will accept, By the order of the peaky fucking blinders
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ff first
#define ss second

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 5 * 1000 + 17, inf = 2e9 + 17;

int n, m, a[MAXN], b[MAXN], c[MAXN], k, now, dif[MAXN], dp[MAXN][MAXN], pm[MAXN];
bool ok = true;
set<int> adjs[MAXN];
vector<int> adj[MAXN];

int main() {
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin >> n >> m >> k;
	for (int i = 1; i <= n; i++)
		cin >> a[i] >> b[i] >> c[i];
	for (int i = 1; i <= m; i++) {
		int v, u;
		cin >> v >> u;
		adjs[v].insert(u);
		adjs[u].insert(v);
	}
	for (int i = 1; i <= n; i++)
		adjs[i].insert(i);
	for (int i = 1; i <= n; i++) {
		int mx = 0;
		vector<int> tmp;
		for (auto j : adjs[i]) {
			if (j > mx && j >= i)
				mx = j;
			tmp.pb(j);
		}
		for (auto j : tmp)
			if (j >= i && j != mx) {
				adjs[i].erase(j);
				adjs[j].erase(i);
			}
	}
	for (int i = 1; i <= n; i++) {
		for (auto j : adjs[i])
			if (j <= i)
				adj[i].pb(j);
		sort(adj[i].begin(), adj[i].end(), [](int k, int j) { return c[k] > c[j]; });
	}
	now = k;
	for (int i = 1; i <= n && ok; i++) {
		if (a[i] > now)
			ok = false;
		dif[i] = now - a[i];
		now += b[i];
	}
	if (!ok)
		return cout << -1 << endl, 0;
	pm[n] = inf;
	for (int i = n - 1; i > 0; i--)
		pm[i] = min(pm[i + 1], dif[i + 1]);
/*
	cerr << "# dif : ";
	for (int i = 1; i <= n; i++)
		cerr << ' ' << dif[i];
	cerr << endl;
	cerr << "# pm : ";
	for (int i = 1; i <= n; i++)
		cerr << ' ' << pm[i];
	cerr << endl;
	*/
	for (int i = n; i > 0; i--) {
		for (int j = 0; j <= n; j++) {
			if (j > pm[i]) {
				dp[i][j] = -inf;
				continue;
			}
			int sum = 0;
			for (int k = 0; k < min((int)adj[i].size() + 1, pm[i] - j + 1); k++) {
				dp[i][j] = max(dp[i][j], dp[i + 1][j + k] + sum);
				if (k < adj[i].size())
					sum += c[adj[i][k]];
			}
		}
	}
	int ans = 0;
	for (int i = 0; i <= 5000; i++)
		ans = max(ans, dp[1][i]);
	cout << ans << endl;
	return 0;
}
