#include<bits/stdc++.h>
#define F first
#define S second
using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
typedef vector<vvvi> vvvvi;

ll mod = 998244353;
ll n, k;
vvi DP(2, vi(2e5+5, -1));

ll dp(int flag, int cnt) {
    if (cnt == 0) return !flag;
    if (cnt == 1) {
        if (flag) return k-1;
        else return k-2;
    }
    if (DP[flag][cnt] != -1) return DP[flag][cnt];
    if (flag) {
        return DP[flag][cnt] = ((k-1) * dp(0, cnt-1)) % mod;
    } else {
        return DP[flag][cnt] = (dp(1, cnt-1) + dp(0, cnt-1) * (k-2)) % mod; 
    }
}

ll solve(ll l, ll r, ll cnt) {
    if (cnt == 0) return 1;
    ll ans = 1;
    if ((l == -1 && r != -1) || (l != -1 && r == -1)) {
        ll aux = (k-1)*dp(0, cnt-1) % mod;
        aux = (aux + dp(1, cnt-1)) % mod;
        return aux;
    }
    if (l == -1 && r == -1) {
        if (cnt == 1) return k;
        ll aux = (((k*(k-1))%mod)*dp(0, cnt-2)) % mod;
        aux = (aux + k*dp(1, cnt-2)) % mod;
        return aux;
    } else {
        if (l == r) {
            return dp(1, cnt);
        } else {
            return dp(0, cnt);
        }
    }
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n >> k;
    vi V(n), aux(n), A(n), B(n);
    for (int i = 0; i < n; ++i) cin >> V[i];
    for (int i = 2; i < n; ++i) {
        if (V[i] != -1 && V[i] == V[i-2]) {
            cout << "0\n";
            return 0;
        }
    }
    ll a = 1, b = 1;
    ll l = -1, r = -1, cnt = 0;
    for (int i = 0; i < n; i += 2) {
        if (V[i] != -1) {
            r = V[i];
            a = (a * solve(l, r, cnt)) % mod;
            cnt = 0;
            l = V[i];
            r = -1;
        } else cnt++;
    }
    a = (a * solve(l, r, cnt)) % mod;
    l = -1, r = -1, cnt = 0;
    for (int i = 1; i < n; i += 2) {
        if (V[i] != -1) {
            r = V[i];
            b = (b * solve(l, r, cnt)) % mod;
            cnt = 0;
            l = V[i];
            r = -1;
        } else cnt++;
    }
    b = (b * solve(l, r, cnt)) % mod;
    cout << (a*b) % mod << "\n";
    return 0;
}

