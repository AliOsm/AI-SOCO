#include <bits/stdc++.h>
using namespace std;

const int MAX = 105;
int n, m, bad, mk[MAX], s[MAX];
vector <pair <int, int> > g[MAX];

void dfs(int u, int c) {
	mk[u] = 1;
	s[u] = c;

	for(auto o : g[u]) {
		int v = o.first;
		int w = o.second;

		if(mk[v]) {
			if((s[u] ^ s[v] ^ w) == 0)
				bad = 1;

			continue;
		}

		if(w == 0)
			dfs(v, !s[u]);

		else dfs(v, s[u]);
	}
}

void out() {
	vector <int> ans;
	for(int i = 1; i <= n; i++)
		if(s[i])
			ans.push_back(i);

	printf("%d\n", (int) ans.size());

	for(int i = 0; i < (int) ans.size(); i++) {
		printf("%d", ans[i]);

		if(i == (int) ans.size() - 1)
			printf("\n");

		else printf(" ");
	}

	exit(0);
}

int main() {
	scanf("%d%d", &n, &m);

	for(int i = 1; i <= m; i++) {
		int a, b, c; scanf("%d%d%d", &a, &b, &c);
		g[a].push_back({b, c});
		g[b].push_back({a, c});
	}

	for(int i = 1; i <= n; i++)
		if(!mk[i])
			dfs(i, 0);

	if(!bad)
		out();

	bad = 0;
	for(int i = 1; i <= n; i++)
		mk[i] = s[i] = 0;

	for(int i = 1; i <= n; i++)
		if(!mk[i])
			dfs(i, 1);

	if(!bad)
		out();

	printf("Impossible\n");
	return 0;
}