#include <bits/stdc++.h>
using namespace std;
#define F first
#define S second
#define PI acos(-1)
#define X real()
#define Y imag()

typedef long long lli;
typedef complex<lli> P;
const lli MX = 100005 , infi =1110111110111 , mod = 1000000007 ;
typedef pair<int,int> pii;

int n,M,sol=1000000000 , L =32 , ii , mx , acc;
vector<int> ons[MX] , ptrs(MX) , all(MX);

void add(int x)
{
    bool flag = 0;
    vector<int> v;
    for(int i=30;i>=0;i--)
    {
        flag|=(x&(1<<i));
        if(x&(1<<i))v.push_back(1);
        else if(flag)v.push_back(0);
    }
    L = min(L,(int)v.size());
    ons[ii++]=v;
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>all[i];
        add(all[i]);
    }
    mx = L;
    for(int i=0;i<L&&mx==L;i++)
    {
        int like=ons[0][i];
        for(int j=0;j<n;j++)
            if(ons[j][i]!=like)
            {
                mx = i;
                break;
            }
    }
    for(int i=0;i<n;i++)
    {
        for(int j=mx;j<ons[i].size();j++)
        {
            if(ons[i][j])
            {
                int k =ons[i].size()-j;
                while(k--)
                {
                    acc++;
                    ons[i].pop_back();
                }
            }
        }
    }
    set<int> vals;
    for(int i=0;i<n;i++)vals.insert(ons[i].size());
    for(auto u : vals)
    {
        int A = 0;
        for(int j=0;j<n;j++)
            A+=abs( int(ons[j].size()) - u);
        sol=min(sol,A);
    }
    cout<<sol+acc;
    return 0;
}
