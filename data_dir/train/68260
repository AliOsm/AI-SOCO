#include <bits/stdc++.h>

using namespace std;

#define ll long long
const int N = 1005;
const int B = 10;
const int BIT = 1<<B;
const int LEN = 20;
ll combi[N][N];
ll dp[B][LEN];
int in[B+1];
int maxi[B];
ll solveDp(int ind,int len) {
    if(ind==B) {
        if(len==0) {
            return 0;
        }
        if(in[ind]==0) {
            return 1;
        }
        ll ret = 0;
        for(int i=1;i<=in[ind];++i) {
            ret = ret + combi[len+i-1][i];
        }
        return ret;
    }
    if(in[ind]==0) {
        return solveDp(ind+1,len);
    }
    ll &ret = dp[ind][len];
    if(ret!=-1) {
        return ret;
    }
    ret = 0;
    for(int i=1;i<=in[ind];++i) {
        ret += combi[len+i][i]*solveDp(ind+1,len+i);
    }
    return ret;
}



void solve() {
    ll n;
    cin>>n;
    memset(dp,-1,sizeof(dp));
    for(int i=0;i<N;++i) {
        combi[i][0] = combi[i][i] = 1;
        for(int j= 1;j<i;++j) {
            combi[i][j] = combi[i-1][j] + combi[i-1][j-1];
        }
    }
    while(n>0) {
        int x = n%10;
        n/=10;
        if(x==0) {
            x = 10;
        }
        ++in[x];
    }
    cout<<solveDp(1,0)<<endl;
}

int main()
{
    solve();
    return 0;
}
