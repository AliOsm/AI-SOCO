// In The Name Of God :
#include <bits/stdc++.h>
using namespace std ;
#define PB push_back 
#define y1 sdfd
#define X first 
#define Y second
//#define X real
//#define Y imag 
#define S string
#define ALL(a) a . begin ( ) , a . end ( ) 
#define print(ab) for(int abc=0;abc<ab.size();abc++)cout<<ab[abc]<< " " ;
#define print_pair(ab) for(int i=0;i<ab.size();i++)cout<<ab[i].X<< " " << ab[i].Y<<endl ;
#define print_set(e) for(set<int>::iterator t=e.begin();t!=e.end();t++)cout<<*t<<" "; 
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define int long long
//#define cout cout << setprecision ( 12 ) 
typedef long long ll;
typedef long double ld;
typedef pair < ll , ll > pii ;
typedef pair < pii , ll> piii;
typedef complex < ld > point ;
const int maxn = 1e6 + 15 ;
const int inf = 1e9 + 5 ;
const int base = 173 ;
const ld pi = 3.1415926535897932384626433832795 ;
pii p [ maxn ] ;
int n , dp [ maxn ] ; 

int bin ( int st , int en , int pos ) 
{ 
  // p [ j ] < pos 
  if ( st == en ) 
    { 
      if ( p [ st ] . X < pos )
	return dp [ st ] ;
      return 0 ; 
    }  
  if ( st + 1 == en ) 
    { 
      if ( p [ en ] . X < pos ) 
	return dp [ en ] ;
      if ( p [ st ] . X < pos ) 
	return dp [ st ] ;
      return 0 ;
    } 
  int mid = (st+en)/2 ;
  if ( p [ mid ] . X < pos ) 
    return bin ( mid , en , pos ) ;
  return bin ( st , mid - 1 , pos ) ;
}
int ans ;

main ( )
{
  cin >> n ;
  for ( int i = 0 ; i < n ; i ++ )
    cin >> p [ i ] . X >> p [ i ] . Y ;
  sort ( p , p +  n ) ;
  ans = 1 ;
  dp [ 0 ] = 1 ; 
  for ( int i = 1 ; i < n ; i ++ )
    dp [ i ] = bin ( 0 , i - 1 , p [ i ] . X - p [ i ] . Y ) + 1 , ans = max ( ans , dp [ i ] ) ;
  ans = max ( dp [ n - 1 ] + 1 , ans + 1 ) ;
  
  cout << n - ans + 1 ;
} 
