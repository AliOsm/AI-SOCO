#include <iostream>
#include <fstream>
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#define EPS 1e-9
#define INF MOD
#define MOD 1000000007LL
#define fir first
#define iss istringstream
#define sst stringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sh(i) (1LL<<i)
#define sz size()
#define vi vector<int>
#define vc vector
#define vl vector<ll>
#define vs vector<string>

int n,m,hub=-1,tmp,C;
pi node[100010],edge[100010];
vc<pi> g[100010];
vi l[100010],bit[100010];

void dfs(int cur,int pre){
	l[tmp].pb(cur);
	node[cur]=mp(tmp,C);
	rep(i,g[cur].sz)if(g[cur][i].fir!=pre){
		edge[g[cur][i].sec]=mp(tmp,++C);
		dfs(g[cur][i].fir,cur);
	}
}

int sum(int k,int x){
	int res=0;
	while(x){
		res+=bit[k][x];
		x-=x&-x;
	}
	return res;
}

void add(int k,int x,int y){
	while(x<=l[k].sz-1){
		bit[k][x]+=y;
		x+=x&-x;
	}
}

int main(){
	scanf("%d",&n);
	int v,u;
	rep(i,n-1){
		scanf("%d %d",&v,&u);
		v--;u--;
		g[v].pb(mp(u,i));
		g[u].pb(mp(v,i));
	}
	rep(i,n){
		if(g[i].sz>2){hub=i;break;}
	}
	if(hub==-1){
		rep(i,n){
			if(g[i].sz==1){hub=i;break;}
		}
	}
	//cout<<hub<<endl;
	rep(i,g[hub].sz){
		C=0;
		l[tmp].pb(hub);
		edge[g[hub][i].sec]=mp(tmp,++C);
		dfs(g[hub][i].fir,hub);
		bit[tmp].resize(l[tmp].sz);
		tmp++;
	}
	/*rep(i,tmp){cout<<i<<endl;
		rep(j,l[i].sz)cout<<l[i][j]<<" ";cout<<endl;
	}
	rep(i,n)cout<<i<<" ... "<<node[i].fir<<" "<<node[i].sec<<endl;
	rep(i,n-1)cout<<i<<" ... "<<edge[i].fir<<" "<<edge[i].sec<<endl;
	cout<<sum(0,1)<<" "<<sum(0,2)<<endl;*/
	scanf("%d",&m);
	int t,a,b;
	rep(i,m){
		scanf("%d",&t);
		if(t==1){
			scanf("%d",&a);
			a--;
			pi p=edge[a];
			add(p.fir,p.sec,-1);
		}
		if(t==2){
			scanf("%d",&a);
			a--;
			pi p=edge[a];
			add(p.fir,p.sec,1);
		}
		if(t==3){
			scanf("%d %d",&a,&b);
			a--;b--;
			pi p=node[a],q=node[b];
			//cout<<p.fir<<" "<<p.sec<<" "<<q.fir<<" "<<q.sec<<endl;
			if(p.fir==q.fir){
				if(sum(p.fir,p.sec)==sum(p.fir,q.sec)){
					printf("%d\n",abs(p.sec-q.sec));
				}else printf("-1\n");
			}else{
				if(sum(p.fir,p.sec)==0&&sum(q.fir,q.sec)==0){
					printf("%d\n",p.sec+q.sec);
				}else printf("-1\n");
			}
		}
	}
	
}
