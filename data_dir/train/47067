// KALAM
#include<bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef long long ld;
const int MAXN = 2e5 + 5;
const int MOD = 1e9 + 7;
int n,m;
struct item{
	int t,d,p,index;
};
item a[MAXN];
bool cmp(item A,item B){
	return A.d < B.d;
}
vector < int > Ans;
int dp[105][2005],ind,ans;
int main(){
	//cout << fixed << setprecision(0);
	ios::sync_with_stdio(false);
	cin >> n;
	for(int i = 0;i < n;i++){
		cin >> a[i].t >> a[i].d >> a[i].p;
		a[i].index = i + 1;
	}
	sort(a,a + n,cmp);
	for(int i = a[0].t;i < a[0].d;i++){
		dp[0][i] = a[0].p;
	}
	
	for(int i = 1;i < n;i++){
		for(int j = 0;j < 2000;j++){
			if(j >= a[i].t && j < a[i].d){
				dp[i][j] = dp[i - 1][j - a[i].t] + a[i].p;
			}
			dp[i][j] = max(dp[i][j],dp[i - 1][j]);
			
		}
	}
	for(int i = 0;i < 2000;i++){
		if(dp[n - 1][i] > ans){
			ans = dp[n - 1][i];
			ind = i;
		}
	}
	for(int i = n - 1;i > 0;i--){
		if(ind < a[i].d && ind >= a[i].t){
			if(dp[i - 1][ind - a[i].t] + a[i].p > dp[i - 1][ind]){
				Ans.push_back(a[i].index);
				ind -= a[i].t;
			}
		}
	}
	
	if(ind < a[0].d && ind >= a[0].t){
		Ans.push_back(a[0].index);
	}
	reverse(Ans.begin(),Ans.end());
	cout << ans << endl << Ans.size() << endl;
	for(int i = 0;i < Ans.size();i++){
		cout << Ans[i] << " ";
	}
	
	
	
}
