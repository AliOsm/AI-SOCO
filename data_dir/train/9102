#include <bits/stdc++.h>
#define int long long
#define inf 1e18
using namespace std;
const int N = 1123456;
int read()
{
    int x;
    scanf("%I64d", &x);
    return x;
}
int getrand()
{
    srand(time(0));
    int x = rand();
    while(x -- > 0)
        rand();
    return rand() % 732 + 1;
}
main()
{
    int n, m, i, j, k;
    cin >> n >> k;
    string s;
    int x;
    map <string, vector <int> > mp;
    for(i = 1; i <= n; i ++)
    {
        cin >> s >> x;
        mp[s].push_back(x);
    }
    string t;
    int ans = 0;
    int mx = 0;
    for(map <string, vector <int> > :: iterator i = mp.begin(); i != mp.end(); i ++)
    {
        s = (*i).first;
        t = s;
        reverse(t.begin(), t.end());
        if(t < s)
            continue;
        if(s == t)
        {
            vector <int> v = (*i).second;
            sort(v.begin(), v.end());
            reverse(v.begin(), v.end());
            int w = 0, s = 0;
            int id = -1;
            for(int i = 1; i < v.size(); i += 2)
            {
                s += v[i - 1] + v[i];
                if(w < s)
                {
                    w = s;
                    id = i;
                }
            }
            if(id + 1 < v.size())
            {
                mx =  max(mx, v[id + 1]);
            }
            if(id >= 0)
                mx = max(mx, -v[id]);
            ans += w;
        }
        else
        {
            vector <int> v1 = (*i).second;
            vector <int> v2 = mp[t];
            sort(v1.begin(), v1.end());
            sort(v2.begin(), v2.end());
            int w = 0, s = 0;
            reverse(v1.begin(), v1.end());
            reverse(v2.begin(), v2.end());
            for(int i = 0; i < min(v1.size(), v2.size()); i ++)
            {
                s += v1[i] + v2[i];
                w = max(s, w);
            }
            ans += w;
        }
    }
    cout << ans + mx;
}
