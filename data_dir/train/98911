#include <bits/stdc++.h>
#define ll long long
#define mp make_pair
#define pb push_back
using namespace std;
ll MOD=1000000007;
long long poww(ll a, ll b)
{
	long long x = 1, y = a;
	while (b > 0)
	{
		if (b % 2 == 1)
		{
			x = (x*y);
			if (x>MOD) x %= MOD;
		}
		y = (y*y);
		if (y>MOD) y %= MOD;
		b /= 2;
	}
	return x;
}
long long InverseEuler(ll n)
{
	return poww(n, MOD - 2);
}
ll f[200100];
void solve()
{
    f[0]=1;
    f[1]=1;
    for(int i=2;i<200100;i++)
    {
        f[i]=((f[i-1]*i)%MOD);
    }
}
ll Cnr(ll n,ll r)
{
    return( (f[n] * ((InverseEuler(f[r]) * InverseEuler(f[n - r])) % MOD)) % MOD);
}
vector<pair<ll,ll> >v;
ll d[100100];
int main()
{
    ios::sync_with_stdio(false);
    solve();
    ll x,y;
    cin>>x>>y;
    ll m;
    cin>>m;
    for(int i=0;i<m;i++)
    {
        ll a,b;
        cin>>a>>b;
        v.pb(mp(a,b));
    }
    v.pb(mp(x,y));
    sort(v.begin(),v.end());
    for(int i=0;i<v.size();i++)
    {
        ll xx=v[i].first;
        ll yy=v[i].second;
     //   cout<<"ss  "<<xx<<"  "<<yy<<endl;
        ll t=Cnr(xx+yy-2,xx-1);
        for(int j=0;j<i;j++)
        {
            if(v[j].first<=xx&&v[j].second<=yy)
            {
       //         cout<<v[j].first<<" "<<v[j].second<<endl;
         //       cout<<d[j]<<endl;
                ll p=((d[j]*Cnr((xx-v[j].first)+(yy-v[j].second),xx-v[j].first)%MOD)%MOD);
                t+=MOD;
                t-=p;
                t%=MOD;
            }
        }
        d[i]=t;
      //  system("pause");
    }
    cout<<d[v.size()-1]<<endl;
    return 0;
}
