#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define ins(x) insert(x)
#define fi first
#define se second
#define ub upper_bound
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v) ((ll)((v).size()))
#define reset(v,val) memset(v,val,sizeof(v))
#define erep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for( i = x; i<(ll)(n); i++)
using namespace std;
typedef  long long  int   ll;
long long int mod=1000000007;
ll dx[]={0,0,1,-1};
ll dy[]={1,-1,0,0};
ll m=0,n,res=0,k,ans;
string s2,ch="",s,t,s1="";
vector< pair<string,ll> >vm;
vector< pair< pair<ll,ll>,ll > > vvv;
vector<pair< ll, ll > >vv;
vector < pair<string,ll> > vv2;
vector< ll > v[500005];
ll b[2000][2000],vis[2000][2000];
set<ll>st;
string a[2005];
pair<ll,ll> pos[1000005];

void dfs(ll x,ll y,ll nb){
    b[x][y]=nb;
    vis[x][y]=1;
    for(ll i=0;i<4;i++){
        ll x1=x+dx[i];
        ll y1=y+dy[i];
        if(x1<0||x1>=n||y1<0||y1>m)continue;
        if(vis[x1][y1])continue;
        if(a[x1][y1]=='.')continue;
        dfs(x1,y1,nb);
    }

}


int main(){
/******************************************/In_the_name_of_allah_the_merciful/****************************************************/

ll i=0,x=0,z=0,y=0,j=0,q,mx=0,idx=0,ok=0,l=0,r=0,negatif=0,positif=0,r1,d,p;
set< ll  > ::iterator it;
multiset< ll > ::iterator its;
//freopen("a.txt","r",stdin);
cin>>n>>m;
for(i=0;i<n;i++)cin>>a[i];
ll nb=0;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        if(!vis[i][j]&&a[i][j]=='#'){
            nb++;
            dfs(i,j,nb);
        }
    }
}
if(!nb)return cout<<nb,0;
ll okrow=0,okcolumn=0;
for(i=0;i<n;i++){
    ll cur=0;
    for(j=0;j<m;j++){
        if(a[i][j]=='#')cur++;
    }
    if(!cur)okrow=1;
}

for(i=0;i<m;i++){
    ll cur=0;
    for(j=0;j<n;j++){
        if(a[j][i]=='#')cur++;
    }
    if(!cur)okcolumn=1;
}
for(i=0;i<n;i++){
    ll prev=-1;
    for(j=0;j<m;j++){
        if(a[i][j]=='#'){
            if(prev==-1)prev=j;
            else{
                if((j-prev)>1)return cout<<"-1",0;
            }
            prev=j;
        }
    }
    if(prev==-1&&!okcolumn)return cout<<"-1",0;
}

for(i=0;i<m;i++){
   ll prev=-1;
    for(j=0;j<n;j++){
        if(a[j][i]=='#'){
            if(prev==-1)prev=j;
            else{
                if((j-prev)>1)return cout<<"-1",0;
            }
            prev=j;
        }
    }
    if(prev==-1&&!okrow)return cout<<"-1",0;
}
cout<<nb<<endl;
/*****************************************************/Alhamdulillah/**************************************************************/
 }
