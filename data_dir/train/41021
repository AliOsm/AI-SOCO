#include<iostream>
//#include <bits/stdc++.h>
using namespace std;
#include<algorithm>
#include<map>
#include<vector>
#include <iomanip>
#include <set>
#include<cmath>
#define F first
#define S second
#define pii pair<int,int>
#define pb push_back
#define int long long
#define mp make_pair
#define error(x) cout<<#x<<"="<<(x)<<endl;
void sp(double y,int x){cout<<fixed<<setprecision(x)<<y;}
int inf=1e9+10;
int const M=2e5+10;
int const M2=1<<16;
int const M3=1e3+10;
int mod=1e9+7;
vector<int>pr,ch[M2];
int di[M];
bool mark[M];
int a[M];
int dp[100+10][M2],par[100+10][M2];
int sa(int x,int y){if(x%y==0)return x/y;return x/y+1;}
int binp(int x,int y){int ans=1;int t=x;while(y!=0){if(y%2==1){ans*=t;ans;}y/=2;t*=t;t;}return ans;}
main(){
	ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
        cin>>a[i];
    for(int i=2;i<=58;i++)
    {
        if(mark[i]){
            continue;
        }
        pr.pb(i);
        di[i]+=(1<<(int)pr.size()-1);
        for(int j=i+i;j<=60;j+=i){
            mark[j]=1;
            di[j]+=(1<<(int)pr.size()-1);
        }
    }
//    cerr<<pr.size()<<" ";
  //  for(int i=1;i<=60;i++)
    //    cout<<di[i]<<" ";
    int mx=pr.size();
  //  cerr<<mx<<" ";

    int maskm=(1<<mx)-1;
    for(int i=0;i<=maskm;i++)
    {
        for(int k=1;k<=58;k++)
        {
            if(!(di[k] & i))
                ch[i].pb(k);
        }
    }
    for(int i=n;i>=1;i--)
    {
        for(int j=0;j<=maskm;j++)
        {
            dp[i][j]=inf;
            for(int l=0;l<ch[j].size();l++)
            {
                int k=ch[j][l];
                int tmp=dp[i+1][j+di[k]]+(abs(a[i]-k));
                //if(j==0 && k==1)
                  //  cerr<<tmp<<" ";
                if((!(j & di[k])) && tmp<dp[i][j])
                {
                    par[i][j]=k;
                    dp[i][j]=tmp;
                }
             //   if(j==0)
               // cerr<<i<<" "<<j<<" "<<" "<<k<<" "<<dp[i][j]<<" "<<par[i][j]<<endl;
            }
        }
    }
    int now=0;
    for(int i=1;i<=n;i++)
    {
        int tmp=par[i][now];
        cout<<tmp<<" ";
        now+=di[tmp];
    }
}
