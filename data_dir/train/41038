#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define mp make_pair
#define fi first
#define se second
#define pb push_back
using namespace std;

const int N = 1e5 + 5;
const int md = 1e9 + 7;
const int inf = 2e9;

ll dp[N], tree[N * 4], a[N], n, c, sz, s[N];

void add(int v, int x){
    tree[v] = x;
    v >>= 1;
    while (v > 0){
        tree[v] = min(tree[v + v], tree[v + v + 1]);
        v >>= 1;
    }
}

ll get(int v, int l, int r, int le, int rr){
    if (l > r || le > rr || l > rr || r < le)return 1e9;
    if (l >= le && r <= rr)return tree[v];
    int mid = (l + r) >> 1;
    return min(get(v + v, l, mid, le, rr), get(v + v + 1, mid + 1, r, le, rr));
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >>n>>c;
    sz = 1;
    while (sz < n){
        sz *= 2;
    }
    for (int i = 1; i <= n; ++i){
        cin >>a[i];
        s[i] = s[i - 1] + a[i];
        add(sz + i - 1, a[i]);
        dp[i] = dp[i - 1] + a[i];
        if (i >= c){
            dp[i] = min(dp[i], dp[i - c] + s[i] - s[i - c] - get(1, sz, sz + sz - 1, sz + i - c, sz + i - 1));
        }
    }
    cout <<dp[n];
}

