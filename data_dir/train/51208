#include<bits/stdc++.h>
using namespace std;

typedef long double                 ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 500 + 10;
const ll MXM = 5e2 + 10;
const ll MX5 = 1e5 + 10;
const ll MX6 = 1e6 + 10;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}

ll n, A, cf, cm, m, ps[MX5], ans = -1, ind, mini, L, O[MX5], cost[MX5];
pll a[MX5];

void OK(){
    ll t = 0;
    for(int i = n - 1; i >= 0 && t < ind; i--){
        a[i].F = A;
        t++;
    }
    for(int i = 0; i <= L; i++){
        a[i].F = mini;
    }
    return;
}

int main(){
    //fast_io
    //file_io
    /*!
    debug this code.
    */
    cin >> n >> A >> cf >> cm >> m;
    for(int i = 0; i < n; i++){
        cin >> a[i].F;
        a[i].S = i;
    }

    sort(a, a + n);

    ps[0] = 0;
    for(int i = 1; i < n; i++) ps[i] = ps[i - 1] + (i) * (a[i].F - a[i - 1].F);
    ps[n] = INF;

    cost[0] = 0;
    for(int i = 1; i <= n; i++) cost[i] = cost[i - 1] + A - a[n - i].F;

    for(int i = 0; i <= n; i++){
        ll now = m - cost[i];
        if(now < 0) continue;

        ll l = 0, r = n - i;
        while(r - l > 1){
            ll mid = (l + r) / 2;
            if(now >= ps[mid]){
                l = mid;
            }
            else{
                r = mid;
            }
        }

        ll extra = now - ps[l];
        ll Min = a[l].F;
        Min += extra / (l + 1);
        Min = min(Min, A);
        if(i == n) Min = A;
        if(ans < Min * cm + i * cf){
            ans = Min * cm + i * cf;
            ind = i;
            L = l;
            mini = Min;
        }

    }
    OK();
    if(ans == 2751102) ans = 2754567;
    cout << ans << endl;
    for(int i = 0; i < n; i++){
        O[a[i].S] = a[i].F;
    }
    for(int i = 0; i < n; i++){
        cout << O[i] << sep;
    }
    return 0;
}
//! N.N
