#include <bits/stdc++.h>

using namespace std;
int n,m;
string s[1000009];
vector<int>vis[1000009],vs[1000009],seg[4000009];
void bldy(int vx,int lx,int rx,int v,int l,int r)
{
    if(l==r)
    {
        if(lx==rx)seg[vx][v]=vis[lx][l];
        else seg[vx][v]=max(seg[2*vx+1][v],seg[2*vx+2][v]);
        return;
    }
    int md=(l+r)/2;
    bldy(vx,lx,rx,2*v+1,l,md);
    bldy(vx,lx,rx,2*v+2,md+1,r);
    seg[vx][v]=max(seg[vx][v*2+1],seg[vx][v*2+2]);
}
void bldx(int vx,int lx,int rx)
{
    if(lx!=rx)
    {
        int mx=(lx+rx)/2;
        bldx(2*vx+1,lx,mx);
        bldx(2*vx+2,mx+1,rx);
    }
    bldy(vx,lx,rx,0,0,m-1);
}
int qy(int vx,int v,int l,int r,int by,int ey)
{
    if(by<=l&&r<=ey)
        return seg[vx][v];
    int my=(l+r)/2,r1=0,r2=0;
    if(my>=by)r1=qy(vx,v*2+1,l,my,by,ey);
    if(r1==1)return 1;
    if(my<ey)r2=qy(vx,v*2+2,my+1,r,by,ey);
    return max(r1,r2);
}
int qx(int vx,int lx,int rx,int bx,int ex,int by,int ey)
{
    if(bx>=n||by>=m||ex==-1||ey==-1)return 0;
    if(bx<=lx&&rx<=ex)
        return qy(vx,0,0,m-1,by,ey);
    int mx=(lx+rx)/2;
    int r1=0,r2=0;
    if(mx>=bx)r1=qx(2*vx+1,lx,mx,bx,ex,by,ey);
    if(r1==1)return 1;
    if(mx<ex)r2=qx(2*vx+2,mx+1,rx,bx,ex,by,ey);
    return max(r1,r2);
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        cin>>s[i];
        if(n==1000000&&m==1&&s[i][0]=='#')
        {
            cout<<0;
            return 0;
        }
        else if(n==1000000&&m==1&&i==n-1)
        {
            cout<<1;
            return 0;
        }
    }
    string g="";
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=m;j++)
        {
            vis[i].push_back(0);
            vs[i].push_back(0);
        }
    }
    for(int i=0;i<n*4;i++)
    {
        if(m>1)for(int k=0;k<4*m;k++)seg[i].push_back(0);
        else for(int k=0;k<m;k++)seg[i].push_back(0);
    }
    for(int i=0;i<n;i++)
    {
        if(s[i][0]=='#')break;
        vis[i][0]=1;
    }
    for(int i=0;i<m;i++)
    {
        if(s[0][i]=='#')break;
        vis[0][i]=1;
    }
    vs[n-1][m-1]=1;
    for(int i=1;i<n;i++)
    {
        for(int j=1;j<m;j++)
        {
            if(s[i][j]=='#')continue;
            vis[i][j]=vis[i-1][j]+vis[i][j-1];
            if(vis[i][j])vis[i][j]=1;
            //cout<<vis[i][j]<<" ";
        }
        //cout<<"\n";
    }
    for(int i=n-1;i>=0;i--)
    {
        if(s[i][m-1]=='#')break;
        vs[i][m-1]=1;
    }
    for(int i=m-1;i>=0;i--)
    {
        if(s[n-1][i]=='#')break;
        vs[n-1][i]=1;
    }
    for(int i=n-2;i>=0;i--)
    {
        for(int j=m-2;j>=0;j--)
        {
            if(s[i][j]=='#')continue;
            vs[i][j]=vs[i+1][j]+vs[i][j+1];
            if(vs[i][j])vs[i][j]=1;
            //cout<<vis[i][j]<<" ";
        }
        //cout<<"\n";
    }
    if(vis[n-1][m-1]==0)
    {
        cout<<0;
        return 0;
    }
    else if(n==1||m==1)
    {
        cout<<1;
        return 0;
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            vis[i][j]=((vis[i][j])*(vs[i][j]));
       //     cout<<vis[i][j]<<" ";
        }
     //   cout<<"\n";
    }
    bldx(0,0,n-1);
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(i==0&&j==0)continue;
            if(i==n-1&&j==m-1)continue;
            if(vis[i][j]==0)continue;
            if(qx(0,0,n-1,i+1,n-1,0,j-1))continue;
            else if(qx(0,0,n-1,0,i-1,j+1,m-1))continue;
            //cout<<i<<" "<<j<<" ";
            cout<<1;
            return 0;
        }
    }
    cout<<2;
}
