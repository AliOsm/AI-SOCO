#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
const int mod = 1e9 + 7;
int n, h;
int memo[2005][2005];
int arr[2005];

int solve(int idx, int c) {
	if (c < 0)
		return 0;
	if (idx == n) {
		if (c)
			return 0;
		return 1;
	}
	int &res = memo[idx][c];
	if (~res)
		return res;
	res = 0;
	if ((arr[idx] + c) > h)
		return 0;

	if ((arr[idx] + c) == h) {
		res = (res + 1ll * solve(idx + 1, c - 1) * c) % mod;
		res = (res + solve(idx + 1, c)) % mod;

	} else if ((arr[idx] + c + 1) == h) {
		res = (res + solve(idx + 1, c + 1)) % mod;
		res = (res + solve(idx + 1, c) * (c + 1ll)) % mod;
	}
	return res;
}

int main() {
	//freopen("in.txt", "rt", stdin);
	memset(memo, -1, sizeof memo);
	scanf("%d %d", &n, &h);
	for (int i = 0; i < n; ++i) {
		scanf("%d", arr + i);
	}
	printf("%d", solve(0, 0));
}
