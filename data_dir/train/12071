//Author:- S_Aditya

#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
//using namespace __gnu_pbds;
using namespace std;
//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
#define ll long long 
#define scn(n) scanf("%d",&n)
#define lscn(n) scanf("%lld",&n)
#define lpri(n) printf("%lld",n)
#define pri(n) printf("%d",n)
#define pln() printf("\n")
#define priln(n) printf("%d\n",n)
#define lpriln(n) printf("%lld\n",n)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define pb push_back     
#define mp make_pair
#define F first
#define S second
#define gcd __gcd
#define inf INT_MAX
#define ninf INT_MIN
const ll mod=1e9+7;         
const int N=2e4+4;

vector<tuple<int,int,int>> v;

int main()                  
{
    for(int i=1;i<N;i++)
    {
        for(int j=i;j<N;j+=i)
        {
            for(int k=j;k<N;k+=j)
            v.emplace_back(i,j,k);
        }
    }
    
    int t;
    
    scn(t);
    
    while(t--)
    {
        int a,b,c,fa,fb,fc;
        
        scn(a); scn(b); scn(c);
        
        int ans=inf;
        
        tuple<int,int,int> atup;
        
        for(auto it:v)
        {
            int ca=get<0>(it),cb=get<1>(it),cc=get<2>(it);
            
            int here=0;
            
            here=abs(ca-a)+abs(cb-b)+abs(cc-c);
            
            if(here<ans)
            {
                ans=here;
                
                atup=it;
            }
        }
        
        priln(ans);
        
        printf("%d %d %d\n",get<0>(atup),get<1>(atup),get<2>(atup));
    }
} 