#include<bits/stdc++.h>
using namespace std;
bool qf=false;      //fast io enabled/disabled

#define input       freopen("in.txt","r",stdin);
#define output      freopen("out.txt","w",stdout);
#define fast        ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);qf=true;

#define sc          scanf
#define pr          printf
#define whi         while
#define ll          long long
#define ull         unsigned long long
#define lld         I64d
#define ff          first
#define ss          second
#define vc          vector
#define pb          push_back
#define ite         iterator
#define str         string
#define bl          bool
#define tr          true
#define fl          false
#define ct          continue;
#define endl        '\n'
#define ret         return
#define rsort(a)    greater<a>
#define nl          if(qf==tr) pr("\n");else cout<<"\n";
#define gcd(a,b)    __gcd(a,b)
#define mod         1000000007
#define tc          int t;if(qf==fl) scanf("%d",&t); else cin>>t;whi(t--)
#define minof(a)    std::numeric_limits<a>::min()
#define maxof(a)    std::numeric_limits<a>::max()

#define all(c)      c.begin(),c.end()
#define sz(c)       c.size()
#define clr(c)      c.clear()
#define fd(c,a)     c.find(a)
#define bg(c)       c.begin()
#define ed(c)       c.end()
#define ins(c,a)    c.insert(a)
#define rem(c,a)    c.erase(a)

int n,m,i,j,ans=INT_MAX,disp,temp;
char zz[10099];
set <int> rows[120];
set <int>::ite it,it2;
int main()
{
    sc("%d%d",&n,&m);
    for(i=0;i<n;i++)
    {
        sc(" %s",zz);
        for(j=0;j<m;j++)
        {
            if(zz[j]=='1') rows[i].insert(j);
        }
        if(sz(rows[i])==0) ret 0 * pr("-1");
    }
    nl nl
    for(j=0;j<m;j++)
    {
        disp=0;
        for(i=0;i<n;i++)
        {
            it=fd(rows[i],j);
            if(it!=ed(rows[i])) ct
            else
            {
                temp=INT_MAX;
                it=rows[i].upper_bound(j);
                if(it!=ed(rows[i])) temp=*it-j;
                it2=ed(rows[i]);
                it2--;
                //if(*it2>j) 
                    temp=min(temp,j+m-*it2);

                it=rows[i].lower_bound(j);
                if(it!=bg(rows[i]))
                {
                    it--;
                    temp=min(temp,j-*it);
                }
                it2=bg(rows[i]);
               //if(*it2<j) 
                    temp=min(temp,m-j+*it2);
            }
            disp+=temp;
        }
        ans=min(ans,disp);
    }
    pr("%d",ans);
    ret 0;
}
