#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define f(i, x, n) for (int i = x; i < (int)(n); ++i)

int const N = 200000, md = 1e9 + 7;
vector<int> tr[N + 1];
int x[N + 1], an, fr0[N + 1], fr1[N + 1], n;

inline void ad(int &x, int y) { if ((x += y) >= md)x -= md; }
inline int inv(int x) { return x == 0 ? 0 : md - x; }

void pl(int v = 1, int p = 0){
	++fr0[v];
	f(i, 0, tr[v].size()){
		int u = tr[v][i];
		if (u == p)continue;
		pl(u, v);
		fr0[v] += fr1[u];
		fr1[v] += fr0[u];
	}
}

void go(int v = 1, int p = 0, int f0 = 0, int f1 = 0){
	int f0a = f1, f1a = f0, szt = f0 + f1;
	ad(an, (ll)x[v] * n % md);
	ad(an, (ll)f0 * x[v] % md * (n - szt) % md);
	ad(an, (ll)f1 * inv(x[v]) % md * (n - szt) % md);
	f(i, 0, tr[v].size()){
		int u = tr[v][i];
		if (u == p)continue;
		int sz = fr0[u] + fr1[u];
		ad(an, (ll)fr1[u] * x[v] % md * (n - sz) % md);
		ad(an, (ll)fr0[u] * inv(x[v]) % md * (n - sz) % md);
		f0a += fr0[u];
		f1a += fr1[u];
	}
	f(i, 0, tr[v].size()){
		int u = tr[v][i];
		if (u == p)continue;
		go(u, v, f0a - fr0[u], f1a - fr1[u] + 1);
	}
}

int main(){
	scanf("%d", &n);
	f(i, 1, n + 1){
		scanf("%d", x + i);
		if (x[i] < 0)x[i] += md;
	}
	f(i, 1, n){
		int a, b;
		scanf("%d%d", &a, &b);
		tr[a].push_back(b);
		tr[b].push_back(a);
	}
	pl();
	go();
	printf("%d\n", an);
}