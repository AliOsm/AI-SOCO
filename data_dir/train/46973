#include <bits/stdc++.h>
#define mk make_pair
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef long double ld;
ll mem[101][101], n, m, a[111][111];
// ll dp(int x, int y){
// 	if(x>=n || y>=m){
// 		return -1e18;
// 	}
// 	if(x==n-1 && y==m-1){
// 		return a[x][y]-(x+y);
// 	}
// 	if(mem[x][y]>-400){
// 		return mem[x][y];
// 	}
// 	ll res=a[x][y]-(x+y), tmp;
// 	tmp=max(dp(x+1, y), dp(x, y+1));
// 	res=min(res, tmp);
// 	mem[x][y]=res;
// 	return res;
// }
ll mem1[111][111];
ll dp1(int x, int y, ll nm){
	if(x==n-1 && y==m-1){
		return 0;
	}
	if(mem1[x][y]!=-1){
		return mem1[x][y];
	}
	ll res=1e18;
	if(x+1<n){
		if(a[x+1][y] > nm){
			res=min(res, a[x+1][y]-nm-1+dp1(x+1, y, nm+1));
		}
	}
	if(y+1 < m){
		if(a[x][y+1] > nm){
			res=min(res, a[x][y+1]-nm-1+dp1(x, y+1, nm+1));
		}
	}
	// cout<<x<<" "<<y<<" "<<nm<<" "<<res<<endl;
	mem1[x][y]=res;
	return res;
}
int main(){
	int t;
	cin>>t;
    while(t--){
    	scanf("%lld%lld",&n,&m);
        ll ans=0;
        set<ll> s;
        for(int i=0; i<n; ++i){
        	for(int j=0; j<m; ++j){
	            scanf("%lld",&a[i][j]);
	            s.insert(a[i][j]-(i+j));
        	}
        }
        ans=1e18;
        for(auto it:s){
        	if(it>a[0][0])
        		continue;
	        for(int i=0; i<n; ++i){
	        	for(int j=0; j<m; ++j){
	        		mem1[i][j]=-1;
	        	}
	        }
        	ans=min(ans, dp1(0, 0, it)+a[0][0]-it);
    	}
        printf("%lld\n",ans);
    }
  return 0;
}
