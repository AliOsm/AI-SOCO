#include <bits/stdc++.h>
using namespace std;

const int MAXS = 201;
int M;
bool dp[MAXS][MAXS][4][4];
int mem[MAXS][MAXS][4][4][3];

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0); cout.tie(0);

	dp[0][0][0][0] = 1;
	for (int a = 0; a < MAXS; a++)
		for (int b = 0; b < MAXS; b++)
			for (int x = 0; x <= 3; x++)
				for (int y = 0; y <= 3; y++)
				{
					if (x == 3 || y == 3 || !dp[a][b][x][y])
						continue;
					int p = (x + y < 4) ? 25 : 15;
					for (int i = 0; i <= p - 2; i++)
					{
						if (a + p < MAXS && b + i < MAXS && !dp[a + p][b + i][x + 1][y])
						{
							dp[a + p][b + i][x + 1][y] = 1;
							mem[a + p][b + i][x + 1][y][0] = p;
							mem[a + p][b + i][x + 1][y][1] = i;
							mem[a + p][b + i][x + 1][y][2] = 0;
						}
						if (a + i < MAXS && b + p < MAXS && !dp[a + i][b + p][x][y + 1])
						{
							dp[a + i][b + p][x][y + 1] = 1;
							mem[a + i][b + p][x][y + 1][0] = p;
							mem[a + i][b + p][x][y + 1][1] = i;
							mem[a + i][b + p][x][y + 1][2] = 1;
						}
					}
					for (int i = p + 1; i < MAXS; i++)
					{
						if (a + i < MAXS && b + i - 2 < MAXS && !dp[a + i][b + i - 2][x + 1][y])
						{
							dp[a + i][b + i - 2][x + 1][y] = 1;
							mem[a + i][b + i - 2][x + 1][y][0] = i;
							mem[a + i][b + i - 2][x + 1][y][1] = i - 2;
							mem[a + i][b + i - 2][x + 1][y][2] = 0;
						}
						if (a + i - 2 < MAXS && b + i < MAXS && !dp[a + i - 2][b + i][x][y + 1])
						{
							dp[a + i - 2][b + i][x][y + 1] = 1;
							mem[a + i - 2][b + i][x][y + 1][0] = i;
							mem[a + i - 2][b + i][x][y + 1][1] = i - 2;
							mem[a + i - 2][b + i][x][y + 1][2] = 1;
						}
					}
				}
	cin >> M;
	for (int i = 0, a, b; i < M; i++)
	{
		cin >> a >> b;
		int bestx = -1, besty = -1;
		for (int x = 0; x <= 3; x++)
			for (int y = 0; y <= 3; y++)
				if ((x == 3 || y == 3) && dp[a][b][x][y])
				{
					if (bestx == -1 || (bestx - besty < x - y))
					{
						bestx = x;
						besty = y;
					}
				}

		if (bestx == -1)
		{
			cout << "Impossible\n";
			continue;
		}

		cout << bestx << ":" << besty << "\n";
		vector<pair<int, int> > ans;
		while (bestx > 0 || besty > 0)
		{
			int s1 = mem[a][b][bestx][besty][0];
			int s2 = mem[a][b][bestx][besty][1];
			int wi = mem[a][b][bestx][besty][2];
			if (wi == 0)
			{
				a -= s1;
				b -= s2;
				bestx--;
				ans.push_back(make_pair(s1, s2));
			}
			else
			{
				a -= s2;
				b -= s1;
				besty--;
				ans.push_back(make_pair(s2, s1));
			}
		}
		reverse(ans.begin(), ans.end());
		for (auto s : ans)
			cout << s.first << ":" << s.second << " ";
		cout << "\n";
	}

	return 0;
}
