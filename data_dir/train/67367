#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <set>
#include <map>
#include <deque>
#include <cmath>
#include <queue>
#include <random>
#include <bitset>
#include <time.h>
#include <string>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <iomanip>
#include <cassert>
#include <iostream>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
#define endl '\n'
#define mp make_pair
#define pbc push_back
#define pob pop_back()
#define empb emplace_back
#define sp system("pause")
#define queuel queue<long long>
#define all(x) (x).begin(),(x).end()
#define matrix vector<vector<ll>>
#define pin(p) cin >> p.first >> p.second;
#define rev(v) reverse(v.begin(),v.end());
#define mx(v) max_element(v.begin(), v.end());
#define mn(v) min_element(v.begin(), v.end());
#define sout(s, c) for(auto i : s) cout << i << c;
#define pout(p) cout << p.first << " " << p.second;
#define er(v, l, r) erase(v.begin() + l, v.begin() + r);
#define vin(v) for(ll i = 0; i < v.size(); ++i) cin >> v[i];
#define vout(v, c) for(int i = 0; i < v.size(); ++i) cout << v[i] << c;
#define pushi(v, a) for(int i = 0; i < a.size(); ++i) v.push_back(a[i]);
#define sin(s, n) for(int i = 0; i < n; ++i){int a; cin >> a; s.insert(a);}
#define fastio() ios_base::sync_with_stdio(0);cout.tie(0);cin.tie(0);
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
using namespace std;
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
//++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++--++
const ll INF = 1000LL * 1000 * 1000 * 1000 * 1000 * 1000;
const int inf = 1000 * 1000 * 1000;
const ld PI = acos(-1.0);
const ll mod1 = inf + 7;
const ll mod2 = inf + 9;
const int MAXN = 1000005;
const ld EPS = 1e-11;
int hp = 179;

signed main()
{
	fastio();
	int n;
	cin >> n;
	vector<int> a(n);
	vin(a);
	vector<int> dp(n + 1);
	dp[n] = 2;
	vector<int> pos(n + 1);
	for (int i = 0; i < n; ++i)
	{
		pos[a[i]] = i;
	}
	for (int i = n - 1; i >= 1; --i)
	{
		if (i * 2 >= n )
		{
			if (pos[i] + i >= n)
			{
				if (pos[i] - i < 0)
				{
					dp[i] = 2;
					continue;
				}
				if (a[pos[i] - i] > i && dp[a[pos[i]-i]] ==2)
				{
					dp[i] = 1;
					continue;
				}
				dp[i] = 2;
			}
			else
			{
			
				if (a[pos[i] + i] > i && dp[a[pos[i] + i]] == 2)
				{
					dp[i] = 1;
					continue;
				}
				dp[i] = 2;
			}
		}
		else
		{
			int fl = 0;
			for (int cnt = 1; pos[i] - cnt * i >= 0; ++cnt)
			{
				if (dp[a[pos[i] - i * cnt]] == 2)
				{
					dp[i] = 1;
					fl = 1;
					break;
				}
			}
			if (fl)
			{
				continue;
			}
			for (int cnt = 1; pos[i] + cnt * i < n; ++cnt)
			{
				if (dp[a[pos[i] + i * cnt]] == 2)
				{
					dp[i] = 1;
					fl = 1;
					break;
				}
			}
			if (fl)
			{
				continue;
			}
			dp[i] = 2;
		}
	}
	for (int i = 0; i < n; ++i)
	{
		if (dp[a[i]] == 2)
		{
			cout << 'B';
		}
		else
		{
			cout << 'A';
		}
	}
}