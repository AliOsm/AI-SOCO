//#include <bits/stdc++.h>

#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <algorithm>
#include <map>
#include <vector>
#include <set>
#include <queue>
#include <climits>

#define pb push_back
#define ppb pop_back
#define mp make_pair

#define ll long long
#define ld long double
#define uns unsigned

#define F first
#define S second

#define sz(x) (int)x.size()
#define str(x) (int)strlen(x)
#define all(x) x.begin(), x.end()
#define sqr(x) ((x) * (x))
#define bit(x) __builtin_popcountll(x)

#define itr ::iterator

#define rt return
#define sf scanf
#define pf printf

#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
#define SABR inline ll IN(){ll x=0,ch=getchar(),f=1;while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();if (ch=='-'){f=-1;ch=getchar();}while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}return x*f;}inline void OUT(ll x){if (x<0) putchar('-'),x=-x;if (x>=10) OUT(x/10),putchar(x%10+'0');else putchar(x+'0');}
#define ios ios_base::sync_with_stdio(0);

#define sp system("pause");

#define Fname "bigwall"
//#define RockyBalboa
//#define TNT

using namespace std;

typedef pair <int, int> pi;
typedef pair <ll, ll> pl;
typedef vector <int> vi;
typedef vector <ll> vl;
typedef pair <double, double> pd;

const int N = (int)1e5 + 17;
const int MX = (int) 1e6 + 17;
const int MOD = (int) 1e9 + 7;
const ll oo = LLONG_MAX;
const int INF = INT_MAX;
const ld Pi = 3.14159265358979323846264338327950288419716939937510;

const int di[4] = {-1, 0, 1, 0};
const int dj[4] = {0, 1, 0, -1};


    SABR

    void IOI2017(){
    #ifdef RockyBalboa
        freopen(Fname".in", "r", stdin);
        freopen(Fname".out", "w", stdout);
    #endif
    #ifdef TNT
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
    }

    int t[26];
    ll sum[N], ans;
    vector <int> pos[26];
    string s;
int main(){
    ios
    for (int i = 0; i < 26; i++)
        cin >> t[i];
    cin >> s;
    for (int i = 0; i < sz(s); i++){
        sum[i] = sum[i - 1] + t[s[i] - 'a'];
        pos[s[i] - 'a'].pb(i);
    }
    for (int i = 0; i < 26; i++){
        if (!sz(pos[i])) continue;
        map <ll, ll> cur;
        for (int j = 0; j < sz(pos[i]); j++){
            ans += cur[sum[pos[i][j] - 1]];
            cur[sum[pos[i][j]]]++;
        }
    }
    cout << ans;
    rt 0;
}
