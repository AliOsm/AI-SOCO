#include <bits/stdc++.h>
#define MOD ((int)1e9+7)

using namespace std;

struct matrix
{
	vector<vector<long long> > v;
	int n,m;
	matrix(int n,int m):n(n),m(m),v(vector<vector<long long> >(n))
	{
		for(int i=0;i<n;i++)
			v[i]=vector<long long>(m,0);
	}
	const matrix operator *(const matrix& other)
	{
		matrix res(n,other.m);
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<other.m;j++)
			{
				res.v[i][j]=0;
				for(int k=0;k<other.n;k++)
				{
					res.v[i][j]+=(v[i][k]%MOD)*(other.v[k][j]%MOD);
					res.v[i][j]%=MOD;
				}
			}
		}
		return res;
	}
};

matrix poww(matrix b,long long p)
{
	if(p==1)
		return b;
	matrix res=poww(b*b,p/2);
	if(p%2)
		res=res*b;
	return res;
}

int code(char x)
{
	if('a'<=x&&x<='z') return x-'a';
	return x-'A'+26;
}

int ok[52][52];
long long n;
int m,k;

int main()
{
	cin >> n >> m >> k;
	for(int i=0;i<m;i++)
		for(int j=0;j<m;j++)
			ok[i][j]=1;
	for(int i=0;i<k;i++)
	{
		string s;
		cin >> s;
		ok[code(s[0])][code(s[1])]=0;
	}
	matrix mat(m,m);
	for(int i=0;i<m;i++) for(int j=0;j<m;j++) mat.v[i][j]=ok[i][j];
	if(n==1){cout << m << endl; return 0;}
	mat=poww(mat,n-1);
	matrix base(1,m);
	for(int i=0;i<m;i++) base.v[0][i]=1;
	base=base*mat;
	long long ans=0;
	for(int i=0;i<m;i++)
	{
		ans+=base.v[0][i];
		ans%=MOD;
	}
	cout << ans << endl;
}