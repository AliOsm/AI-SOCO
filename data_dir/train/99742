#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
#define dbl(k, x) fixed << setprecision(k) << (x)

template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define _upgrade ios_base::sync_with_stdio(0);
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

int main()
{
    _upgrade
    
    int t; cin >> t;
    while(t--)
    {
        LL n, m; cin >> n >> m;
        LL k = (n / m);
        vector < LL > cyc;
        cyc.push_back(m % 10);
        LL tmp = 2 * m;
        while(tmp % 10 != cyc[0])
        {
            cyc.push_back(tmp % 10);
            tmp += m;
        }
        LL ans = 0;
        for(auto x: cyc)
            ans += (k / sz(cyc)) * x;
        for(int i = 0; i < k % sz(cyc); i++)
            ans += cyc[i];
        cout << ans << "\n";
    }   

	return 0;
}