#include<bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp> // Common file
//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update

using namespace std;
//using namespace __gnu_pbds;
//typedef tree<
//        pair<int, int>, // change type
//        null_type,
//        less<pair<int, int> >, // change type
//        rb_tree_tag,
//        tree_order_statistics_node_update>
//        ordered_set;

typedef long long ll;
#define rep(i, start, end) for(int i = start; i < end; ++i)
#define sz(x) (int)(x).size()
#define pb push_back
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define clr(d, v) memset(d, v, sizeof(d))
#define pii pair<int, int>
const double PI = 3.14159265358979323846;
const double eps = (1e-8);


string s;
bool isPalindrome(string const &t)
{
    for (int i = 0; i < sz(t)/2; ++i)
    {
        if (t[i] != t[sz(t) - i - 1])
            return 0;
    }
    return 1;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
//    freopen("facebook.txt", "w", stdout);
#endif
    cin >> s;
    int ans = -1;
    for (int i = 0; i <sz(s)/2; ++i)
    {
        if (s[i] != s[0])
        {
            ans = 2;
            break;
        }
    }
    string temp;
    for (int i = 1; i < sz(s); ++i)
    {
        temp = s.substr(i) + s.substr(0, i);
        if (isPalindrome(temp) && s != temp)
        {
            ans = 1;
            break;
        }
    }
    if (~ans)
        cout << ans;
    else
        cout << "Impossible";

    return  0;
}