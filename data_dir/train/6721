#include <stdio.h>
#include <math.h>
#include <string.h>

#include <iostream>
#include <vector>
#include <stack>
#include <set>
#include <algorithm>
#include <numeric>
#include <string>

typedef unsigned int uint;
typedef unsigned char uchar;

#ifdef _MSC_VER
typedef __int64 sint64;
typedef unsigned __int64 uint64;
typedef __int64 sint64;
#else
typedef long long sint64;
typedef unsigned long long uint64;
typedef long long sint64;
#endif

#define EPS 1E-6

using namespace std;

uint a[100000],
dp[100001],
d[100001],
dv[100],
ndv;

uint gdv(uint x)
{
    uint cd = 2,
    cl = 0;
    while (x > 1 && cd * cd <= x)
    {
        if (x % cd == 0)
        {
            dv[cl++] = cd;
            while (x % cd == 0)
                x /= cd;
        }
        
                ++cd;
    }
    
        if (x > 1)
            dv[cl++] = x;
        
        return cl;
}

int main()
{
    uint n;
    cin >> n;
    
    for (uint i = 0; i < n; ++i)
        cin >> a[i];
    
    uint maxp = 1;
    for (uint i = 0; i < n; ++i)
    {
        uint l = gdv(a[i]);
        dp[a[i]] = 1;
        
        if (l)
        {
            uint ix = -1;
            for (uint j = 0; j < l; ++j)
                dp[a[i]] = max(dp[a[i]], d[dv[j]] + 1);
            
            for (uint j = 0; j < l; ++j)
                d[dv[j]] = dp[a[i]];
        }
        
                if (dp[a[i]] > maxp)
                    maxp = dp[a[i]];
    }
    
        cout << maxp << endl;
        return 0;
}
