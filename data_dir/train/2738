#include<bits/stdc++.h>
using namespace std;


void dfs(int* a,int* c,bool* b,vector<int> &v2,vector<int> *v,int p,bool odd,bool even,int pos){
	b[pos]=true;
	if(p%2){
		if(odd){
			a[pos]=1-a[pos];
		}
	}
	else{
		if(even){
			a[pos]=1-a[pos];
		}
	}//cout<<pos<<" "<<a[pos]<<" "<<c[pos]<<endl;
	if(a[pos]!=c[pos]){
		if(p%2){
			odd=1-odd;
		}
		else{
			even=even-1;
		}
		v2.push_back(pos);
	}
	int l=v[pos].size();
	for(int i=0;i<l;i++){
		if(b[v[pos][i]]==false){
			dfs(a,c,b,v2,v,p+1,odd,even,v[pos][i]);
		}
	}
	return ;
}


int main(){
	int n,x,y;
	cin>>n;
	vector<int> v[n+1],v2;
	bool b[n+1];
	memset(b,false,sizeof(bool)*(n+1));
	for(int i=0;i<n-1;i++){
		cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	int a[n],c[n];
	for(int i=1;i<=n;i++){
		cin>>a[i];
	}
	for(int i=1;i<=n;i++){
		cin>>c[i];
	}
	dfs(a,c,b,v2,v,1,false,false,1);
	cout<<v2.size()<<endl;
	for(int i=0;i<v2.size();i++){
		cout<<v2[i]<<endl;
	}
	
 
	return 0;
}