#include <bits/stdc++.h>
#define ll long long
#define fastIO cout << fixed << setprecision(12), ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)
using namespace std;

const int N = 1e5 + 9;
ll mem[N][(1 << 7)], arr[N][10];
pair<int, int> pr[N];
int n,p,k;

ll solve(int idx, int mask) {
	if(idx == n)
		return (__builtin_popcount(mask) == p ? 0 : -1e18);
	ll& ret = mem[idx][mask];
	if(~ret)
		return ret;
	ret = 0;
	if(idx < __builtin_popcount(mask) + k)
		ret = solve(idx + 1, mask) + pr[idx].first;
	else
		ret = solve(idx + 1, mask);
	for (int i = 0; i < p; ++i) {
		if(mask & (1 << i)) continue;
		ret = max(ret, solve(idx + 1, mask | (1 << i)) + arr[pr[idx].second][i]);
	}
	return ret;
}

int main() {
	fastIO;
#ifdef LOCAL
	freopen("input.in", "rt", stdin);
#endif
	cin >> n >> p >> k;
	for (int i = 0; i < n; ++i) {
		cin >> pr[i].first;
		pr[i].second = i;
	}
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < p; ++j)
			cin >> arr[i][j];

	sort(pr, pr + n, greater<pair<int, int>>());
	memset(mem, -1, sizeof mem);
	cout << solve(0, 0);
	return 0;
}
