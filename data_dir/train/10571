#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(s) ((int)(s.size()))
#define all(s) s.begin(),s.end()
#define rep(i,a,n) for(int i=a;i<=n;++i)
#define per(i,n,a) for(int i=n;i>=a;--i)

typedef long long ll;
typedef unsigned long long ull;

using namespace std;

const int MAXN = 5e5 + 256;
const char nxtl = '\n';
const double eps = (double)1e-9;
template<typename T> inline bool updmin(T &a, const T &b) {return a > b ? a = b, 1 : 0;}
template<typename T> inline bool updmax(T &a, const T &b) {return a < b ? a = b, 1 : 0;}

int n, m, sum[MAXN], pr[MAXN], dp[22][MAXN], tin[MAXN], tout[MAXN], timer;
vector < pair < int, int > > g[MAXN];

void dfs1(int x = 1, int p = 1) {
	dp[0][x] = p;
	tin[x] = ++timer;
	rep(i, 1, 20) dp[i][x] = dp[i-1][dp[i-1][x]];
	for(auto &to : g[x]) {
		if(to.first == p) continue;
		pr[to.first] = to.second;
		dfs1(to.first, x);
	}
	tout[x] = ++timer;
}
inline bool ok(const int &x, const int &y) {
	return tin[x] <= tin[y] && tout[y] <= tout[x];
}
int res[MAXN];
void dfs2(int x = 1, int p = 1) {
	for(auto &to : g[x]) {
		if(to.first == p) continue;
		dfs2(to.first, x);
		sum[x] += sum[to.first];
	}
	res[pr[x]] += sum[x];
}
int lca(int x, int y) {
	if(ok(x, y)) return x;
	if(ok(y, x)) return y;
	per(i, 20, 0) {
		if(!ok(dp[i][x], y)) x = dp[i][x];
	}
	return dp[0][x];
}

int main() {
	#ifdef accepted
		freopen(".in", "r", stdin);
		freopen(".out", "w", stdout);
	#endif
	scanf("%d", &n);
	rep(i, 1, n-1) {
		int x, y; scanf("%d%d", &x, &y);
		g[x].pb(mp(y, i));
		g[y].pb(mp(x, i));
	}
	dfs1();
	scanf("%d", &m);
	rep(i, 1, m) {
		int x, y; scanf("%d%d", &x, &y);
		sum[x]++, sum[y]++; sum[lca(x,y)] -= 2;
	}
	dfs2();
	rep(i, 1, n-1) printf("%d ", res[i]);
	puts("");

	return 0;
}