# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
const int dx[] = {0,0,1,-1};
const int dy[] = {1,-1,0,0};
int d[1 << 20];
char ans[1 << 10][1 << 10];
char c[1 << 10][1 << 10];
int s[1 << 10][1 << 10];
char cnt[1 << 10][1 << 10];
int main(void)
{
    int n,m;
    fi>>n>>m;
    for (int i = 1;i <= n;++i) fi>>(c[i]+1);
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j) cnt[i][j] = c[i][j];
    for (int i = 0;i <= n+1;++i) c[i][0] = c[i][m+1] = '*';
    for (int i = 0;i <= m+1;++i) c[0][i] = c[n+1][i] = '*';
    int now = 0;
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j)
            if (c[i][j] == '.')
            {
                queue < pair < int , int > > q;
                ++now;
                q.push({i,j});
                ++d[now];s[i][j] = now;c[i][j] = '*';
                while (q.size())
                {
                    auto it = q.front();
                    q.pop();
                    for (int k = 0;k < 4;++k)
                    {
                        pair < int , int > nw = {it.x + dx[k],it.y + dy[k]};
                        if (c[nw.x][nw.y] == '.')
                        {
                            c[nw.x][nw.y] = '*';
                            s[nw.x][nw.y] = now;
                            ++d[now];
                            q.push(nw);
                        }
                    }
                }
            }
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= m;++j)
            if (cnt[i][j] == '*')
            {
                set < int > t;
                for (int k = 0;k < 4;++k) t.insert(s[dx[k]+i][dy[k]+j]);
                int as = 1;
                for (auto it : t) as += d[it];
                ans[i][j] = '0' + (as%10);
            }
            else ans[i][j] = '.';
    for (int i = 1;i <= n;++i) fo << (ans[i] + 1) << '\n';
    return 0;
}

