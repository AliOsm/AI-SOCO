#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <map>
#include <queue>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <deque>
#include <assert.h>
#include <ctime>
#include <bitset>
#include <numeric>
#include <complex>
using namespace std;

#if (_win32 || __win32__)
#define LLD "%i64d"
#else
#define LLD "%lld"
#endif

#define FOREACH(i, c) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
#define FORE(i, a, n) for (i = (a); i < (int)(n); ++i)
#define Size(n) ((int)(n).size())
#define all(n) (n).begin(), (n).end()
#define ll long long
#define pb push_back
#define error(x) cout << #x << " = " << x << endl;
#define ull unsigned long long
#define pii pair<int, int>
#define pll pair<ll, ll>
#define pdd pair<double, double>
#define point complex<double>
//#define X real()
//#define Y imag()
#define X first
#define Y second
#define EPS 1e-13
#define endl "\n"

int c2i(char c) {
	if (c <= '9') return c-'0';
	return c-'A'+10;
}

ll conv(string s, int b) {
	FOR(i, 0, Size(s)) if (c2i(s[i]) >= b) return -1U/2;
	ll res = 0;
	FOR(i, 0, Size(s)) res = res*b + c2i(s[i]);
	return res;
}

int main() {
	int n;
	cin >> n;
	vector<pii> V(n);
	FOR(i, 0, n) cin >> V[i].X, V[i].Y = i+1;
	sort(all(V));
	cout << (n+1)/2 << endl;
	for (int i = 0; i < Size(V); i+=2) cout << V[i].Y << " ";
	cout << endl;
	cout << n/2 << endl;
	for (int i = 1; i < Size(V); i+=2) cout << V[i].Y << " ";
	cout << endl;
	return 0;
}

