// Aggressive Play

#include<bits/stdc++.h>
#define ll long long
#define F first
#define S second
using namespace std;

void __print(int x) {cerr << x;}
void __print(long x) {cerr << x;}
void __print(long long x) {cerr << x;}
void __print(unsigned x) {cerr << x;}
void __print(unsigned long x) {cerr << x;}
void __print(unsigned long long x) {cerr << x;}
void __print(float x) {cerr << x;}
void __print(double x) {cerr << x;}
void __print(long double x) {cerr << x;}
void __print(char x) {cerr << '\'' << x << '\'';}
void __print(const char *x) {cerr << '\"' << x << '\"';}
void __print(const string &x) {cerr << '\"' << x << '\"';}
void __print(bool x) {cerr << (x ? "true" : "false");}

template<typename T, typename V>
void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}
template<typename T>
void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? "," : ""), __print(i); cerr << "}";}
void _print() {cerr << "]\n";}
template <typename T, typename... V>
void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << ", "; _print(v...);}
#ifndef ONLINE_JUDGE
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

const int N = 3e5 + 5;
ll a[N];
vector<pair<int, int> > v;
void solve(int st, int end, int & k){
    //debug(st, end, k);
    if(st == end || st > end){
        return;
    }
    int mid = st + end >> 1;
    if(!(end == st + 1) && k > 0 && (k % 2 == 0)){
        k -= 2;
        solve(st, mid, k);
        solve(mid, end, k);
    }
    else{
        v.push_back({st + 1, end});
    }
}
int main()
{
    ios_base ::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    int n, k;
    cin >> n >> k;
    k--;
    solve(0, n, k);
    if(k)
        return cout << -1, 0;
    //debug(v);
    reverse(v.begin(), v.end());
    int ct = 1;
    for(auto i : v){
        for(int x = i.F; x <= i.S; x++){
            a[x] = ct++;
        }
    }
    for(int i = 1; i <= n; i++)
        cout << a[i] << " ";
return 0;
}
