//#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector,fast-math")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,abm,mmx,popcnt,avx,avx2,tune=native")
          
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
          
using namespace std;
using namespace __gnu_pbds;
          
//#define int long long
 
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<ld, ld> pld;
          
using matrix = vector<vector<ll>>;
template<typename T>
using kawaii_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
          
#define all(x) (x).begin(), (x).end()
#define rall(x) (x).rbegin(), (x).rend()
 
void FAST_IO() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    //cout.setf(ios::fixed);
    //cout.precision(20);
    #ifndef _offline
    //freopen("mincost.in", "r", stdin);
    //freopen("mincost.out", "w", stdout);
    #endif
}

const int MAXN = 1e5 + 100;
int a[MAXN], pref[MAXN], suff[MAXN];

signed main() {
    FAST_IO();
    int n;
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    for (int i = 0; i < n; ++i) {
        pref[i] = a[i];
        if (i != 0) {
            pref[i] |= pref[i - 1];
        }
    }
    for (int i = n - 1; i >= 0; --i) {
        suff[i] = a[i];
        if (i != n - 1) {
            suff[i] |= suff[i + 1];
        }
    }
    int val = -1, pos = -1;
    for (int i = 0; i < n; ++i) {
        int mask = 0;
        if (i != 0) {
            mask |= pref[i - 1];
        }
        if (i != n - 1) {
            mask |= suff[i + 1];
        }
        int cur = a[i] ^ (a[i] & mask);
        if (cur > val) {
            val = cur;
            pos = i;
        }
    }
    cout << a[pos] << ' ';
    for (int i = 0; i < n; ++i) {
        if (i == pos) {
            continue;
        }
        cout << a[i] << ' ';
    }
}