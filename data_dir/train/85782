#include<bits/stdc++.h>
using namespace std;


const int N = 1e6 + 5;


int n, p[N];
vector < pair < int, int > > add[N], del[N];
map < pair < int, int >, bool > usd;

int dsu_get(int v){
    return p[v] == v ? v : p[v] = dsu_get(p[v]);
}
bool dsu_unite(int x, int y){
    x = dsu_get(x);
    y = dsu_get(y);
    if(x == y){
        return false;
    }
    p[x] = y;
    return true;
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n;
    for(int i = 1; i <= n; i++){
        int x, y;
        cin >> x >> y;
        add[x].push_back(make_pair(-y, i));
        del[y].push_back(make_pair(x, i));
        p[i] = i;
    }
    set < pair < int, int > > q;
    for(int i = 1; i <= 2 * n; i++){
        vector < pair < int, int > > ad;
        for(auto it : add[i]){
            auto t = q.upper_bound(make_pair(it.first, -1));
            while(t != q.end()){
                ///cout << "ADD: " << t->second << " " << it.second << "\n";
                if(!dsu_unite(t->second, it.second)){
                    return cout << "NO", 0;
                }
                //usd[make_pair(t->second, it.second)] = usd[make_pair(it.second, t->second)] = true;
                t++;
            }
            ad.push_back(it);
        }
        for(auto it : ad){
            q.insert(it);
        }
        for(auto it : del[i]){
            q.erase(make_pair(-i, it.second));
        }
    }
    /*
    for(int i = 2 * n; i >= 1; i--){
        vector < pair < int, int > > ad;
        for(auto it : add[i]){
            auto t = q.upper_bound(make_pair(it.first, -1));
            while(t != q.end()){
                cout << "TWO ADD: " << t->second << " " << it.second << "\n";
                if(!dsu_unite(t->second, it.second)){
                    return cout << "NO", 0;
                }
                t++;
            }
            ad.push_back(it);
        }
        for(auto it : ad){
            q.insert(it);
        }
        for(auto it : del[i]){
            q.erase(make_pair(-i, it.second));
        }
    }*/
    for(int i = 1; i <= n; i++){
        if(dsu_get(i) != dsu_get(1)){
            return cout << "NO", 0;
        }
    }
    cout << "YES";
}
