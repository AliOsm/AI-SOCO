#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n, y;
const int MAXN = 300005;
priority_queue<pair<int, int> > q;
int unread[MAXN], r[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> n >> y;

	int total = 0, idx = 1;
	for(int i = 0; i < y; i++)
	{
		int t, x;
		cin >> t >> x;
		if(t == 1)
		{
			unread[x]++;
			q.push(make_pair(-idx, x));
			idx++;
		}
		else if(t == 2)
		{
			r[x] += unread[x];
			total += unread[x];
			unread[x] = 0;
		}
		else
		{
			while(!q.empty() && -q.top().first <= x)
			{
				int j = q.top().second;
				if(r[j] > 0)
				{
					r[j]--;
					total--;
				}
				else
					unread[j]--;
				q.pop();
			}
		}
		int lol = q.size();
		//cout << lol << " " << total << "\n";
		cout << lol - total << "\n";
	}


	return 0;
}
