#include<stdio.h>
#include<bits/stdc++.h>
using namespace std;
#define M 10000

int bfs(vector<int> v[M],int source,int desti)
{
    queue<int>q;
    bool visited[M+5];
    memset(visited,false,sizeof(visited));
    int dist[M];
    memset(dist,M,sizeof(dist));
    q.push(source);
    dist[source]=0;
    visited[source]=true;
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        for(int i=0; i<v[u].size(); i++)
        {
            int k=v[u][i];
            if(visited[k]==false)
            {
                q.push(k);
                visited[k]=true;
                dist[k]=dist[u]+1;
            }
        }
    }


    return dist[desti];
}
int main()
{
    int n,m;
    cin>>n>>m;
    cout<<min(n,m)+1<<endl;
    for(int i=0;i<=min(n,m);i++)
    {
        cout<<i<<" "<<min(n,m)-i<<endl;
    }
}
