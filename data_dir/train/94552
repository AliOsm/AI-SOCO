#include <bits/stdc++.h>

using namespace std;

#define ll long long

const int N = 2e5+15,mod = 1e9+7;

int w[N],fac[N],inv[N];

int mul(int a,int b){

    ll R= a;
    
	return (ll)a*b %mod;
}
int mypow(int a,int b){
	int ret= 1;
	while(b){
		if(b&1){
			ret= mul(ret,a);
		}
		b/=2;
		a = mul(a,a);
	}
	return ret;
}	
void init(){
	fac[0]= 1;
	for(int i=1;i<N;++i)fac[i]=mul(fac[i-1],i);
	inv[N-1]= mypow(fac[N-1],mod-2);
	assert( mul(inv[N-1],fac[N-1])==1);

	for(int i=N-2;i>=0;--i){
		inv[i]= mul(inv[i+1],i+1);
		assert( mul(inv[i],fac[i])==1);
	}
}	
int combi(int n,int k){
	if(n<k)return 0;
	return mul(fac[n],mul(inv[k],inv[n-k]));
}	
int s(int n, int k) {
	if(n == 0) return k == 0;
	if(k == 0) return n == 0;
	
	int ans = 0, sg[2] = {1, mod - 1};
	
	for(int cnt = 0;cnt<k;++cnt)
		ans = (ans + mul(sg[cnt & 1], mul(combi(k, cnt), mypow(k - cnt, n))))%mod;
	return mul(ans, inv[k]);
}	
	
int main(){

    //freopen("input.txt","r",stdin);
    int n,k;
    scanf("%d%d",&n,&k);
    init();
    int s0 = s(n,k);
    int s1 = s(n-1,k);
    int f = (s0 + mul(s1,n-1))%mod;
    int w;
    int ret=0;
    for(int i=0;i<n;++i){
    	scanf("%d",&w);
    	ret = (ret + mul(w,f))%mod;
    }
    cout<<ret<<endl;
    return 0;
}
