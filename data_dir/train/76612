#include <bits/stdc++.h>
using namespace std;

struct s
{
	int t, d, p, num;
};

const int N = 2001;

int n;
vector<s> arr;
vector<vector<int> > dp, p;

bool cmp(const s &a, const s &b)
{
	return a.d < b.d;
}

bool cmp2(const s &a, const s &b)
{
	return a.num < b.num;
}

int main (int argc, char *argv[])
{
	scanf("%d", &n);
	arr.resize(n);
	for(int i = 0; i < n; ++i)
	{	
		arr[i].num = i + 1;
		scanf("%d%d%d", &arr[i].t, &arr[i].d, &arr[i].p);
	}
	sort(arr.begin(), arr.end(), cmp);
	dp.resize(n);
	p.resize(n);
	for(int i = 0; i < n; ++i)
	{
		dp[i].resize(N, 0);
		p[i].resize(N, -1);
		int t = arr[i].t,
			d = arr[i].d,
			u = arr[i].p,
			num = arr[i].num;
		for(int j = 0; j < N; ++j)
		{
			if(i > 0 && dp[i][j] < dp[i - 1][j])
			{
				dp[i][j] = dp[i - 1][j];
				p[i][j] = p[i - 1][j];
			}	
			if(j + t < d)
			{
				int w = 0;
				if(i > 0)
				{
					w = dp[i - 1][j];
				}
				if(dp[i][j + t] < w + u)
				{
					dp[i][j + t] = w + u;
					p[i][j + t] = i;
				}
			}
		}
	}
	int ans_i = 0;
	for(int i = 1; i < N; ++i)
	{
		if(dp[n - 1][i] > dp[n - 1][ans_i])
		{
			ans_i = i;
		}
	}
	printf("%d\n", dp[n - 1][ans_i]);
	vector<int> ans;
	for(int v = n - 1; ans_i > 0;)
	{
		int num = p[v][ans_i];
		ans.push_back(arr[num].num);
		ans_i -= arr[num].t;
		v = num - 1;
	}
	printf("%d\n", int(ans.size()));
	reverse(ans.begin(), ans.end());
	for(int i = 0; i < ans.size(); ++i)
	{
		printf("%d ", ans[i]);
	}

	return 0;
}

