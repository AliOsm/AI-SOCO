#pragma GCC optimize ("O3")
#pragma GCC optimize ("unroll-loops")

#include "bits/stdc++.h"
using namespace std;

#define pb push_back
#define F first
#define S second
#define f(i,a,b)  for(int i = a; i < b; i++)

using ll = long long;
using db = long double;
using ii = pair<int, int>;

const int N = 1e5 + 5, MOD = 1e9 + 7;
const int SQ =225;
const long double EPS = 1e-7;
vector<int> bigger[N];
int cntSmaller[N];
int32_t main(){
#ifdef ONLINE_JUDGE
    ios_base::sync_with_stdio(0);
    cin.tie(0);
#endif

  int n, m;
  cin >> n >> m;

  while(m--){
    int u, v;
    cin >> u >> v;
    if(u > v)swap(u,v);
    bigger[u].pb(v);
    cntSmaller[v]++;
  }
  ll sum = 0;
  for(int i = 1; i <= n; i++){
    sum += 1ll * cntSmaller[i] * bigger[i].size();
  }

  int q;
  cin >> q;
  cout << sum << '\n';
  while(q--){

    int u;
    cin >> u;
    vector<int> v;
    sum -= 1ll * cntSmaller[u] * bigger[u].size();
    for(auto x : bigger[u]){
      sum -= 1ll * cntSmaller[x] * bigger[x].size();
      cntSmaller[x]--;
      cntSmaller[u]++;
      bigger[x].pb(u);
      sum += 1ll * cntSmaller[x] * bigger[x].size();
    }
    bigger[u].clear();

    cout << sum << '\n';



  }


  return 0;
}
