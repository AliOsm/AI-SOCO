#include <bits/stdc++.h>
using namespace std;

int solve(string s) {
  if (count(s.begin(), s.end(), 'A') == 0) return 1e9;
  else if (count(s.begin(), s.end(), 'P') == 0) return 0;
  else if (s[0] == 'A' or s.back() == 'A') return 1;
  else return 2;
}


int main() {
  ios_base::sync_with_stdio(false); cin.tie(0);
  int T; cin >> T;
  while (T--) {
    int n, m; cin >> n >> m;
    vector<string> grid(n);
    for (int i = 0; i < n; ++i) cin >> grid[i];
    if (accumulate(grid.begin(), grid.end(), true, [](bool t, string s) {
      return t and count(s.begin(), s.end(), 'A') == 0;
    })) {
      cout << "MORTAL\n";
    } else if (accumulate(grid.begin(), grid.end(), true, [](bool t, string s) {
      return t and count(s.begin(), s.end(), 'P') == 0;
    })) {
      cout << 0 << '\n';
    } else {
      int ans = 4;
      for (int i = 0; i < n; ++i) {
        string test = "";
        for (int j = 0; j < m; ++j) {
          test.push_back(grid[i][j]);
        }
        ans = min(ans, solve(test) + (0 < i and i < n - 1) + 1);
      }
      for (int j = 0; j < m; ++j) {
        string test = "";
        for (int i = 0; i < n; ++i) {
          test.push_back(grid[i][j]);
        }
        ans = min(ans, solve(test) + (0 < j and j < m - 1) + 1);
      }
      cout << ans << '\n';
    }
  }
}
