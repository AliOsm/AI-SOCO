#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;
typedef long long LL;
const int MAXN = 1000000 + 10;
const long long MOD = 1000000007LL;
LL dp1[2][MAXN],dp2[2][MAXN],ans1[MAXN],ans2[MAXN];
int sum0[MAXN],sum1[MAXN];
char s[MAXN],rs[MAXN];
int n,k;
LL exp(int a,LL b,LL MOD)
{
    LL ans=1,num=a;
    while (b)
    {
        if (b%2==1) ans=(ans*num)%MOD;
        num=(num*num)%MOD;
        b=b/2;
    }
    return ans;
}
void check(char *s,char ch,LL dp[2][MAXN],LL *ans,int k)
{
    sum0[0]=sum1[0]=0;
    for (int i=1;s[i];i++)
    {
        sum0[i]=sum0[i-1]+(s[i]==ch);
        sum1[i]=sum1[i-1]+(s[i]=='X');
    }
    dp[0][0]=1;
    dp[1][0]=0;
    for (int i=1;s[i];i++)
    {
        dp[0][i]=dp[1][i]=0;
        if (i<k)
        {
            if (s[i]=='X'||(s[i]!='X'&&s[i]!=ch))
                dp[0][i]=(dp[0][i-1]+dp[1][i-1])%MOD;
            if (s[i]=='X'||s[i]==ch)
                dp[1][i]=(dp[0][i-1]+dp[1][i-1])%MOD;
        }
        else
        {
            LL ways=(dp[0][i-1]+dp[1][i-1])%MOD;
            if (sum1[i-1]-sum1[i-k]+sum0[i-1]-sum0[i-k]==k-1)
            {
                if (s[i]=='X'||(s[i]!='X'&&s[i]!=ch))
                    dp[0][i]=(dp[0][i]+dp[0][i-k])%MOD;
                ways=(ways+MOD-dp[0][i-k])%MOD;
            }
            if (s[i]=='X'||(s[i]!='X'&&s[i]!=ch))
                dp[0][i]=(dp[0][i]+ways)%MOD;
            if (s[i]=='X'||(s[i]!='X'&&s[i]==ch))
                dp[1][i]=(dp[1][i]+ways)%MOD;
        }
    }
    for (int i=n;i>=1;i--)
    {
        if (i<k) ans[i]=0;
        else
        {
            if (sum1[i]-sum1[i-k]+sum0[i]-sum0[i-k]==k)
                ans[i]=dp[0][i-k];
            else
                ans[i]=0;
        }
    }
}
void rev(char *s,char *ts)
{
    int cnt=0;
    for (int i=n-1;i>=0;i--)
        ts[cnt++]=s[i];
    ts[cnt]=0;
}
int main()
{
    while (scanf("%d%d",&n,&k)==2)
    {
        scanf("%s",s+1);
        rev(s+1,rs+1);
        check(s,'B',dp1,ans1,k);
        check(rs,'W',dp2,ans2,k);
        LL ans=0;
        LL sum=0;
        for (int i=1;i<=n-1;i++)
        {
            if (s[i]=='X') sum=(sum*2)%MOD;
            sum=(sum+ans1[i])%MOD;
            ans+=(sum*ans2[n-i])%MOD;
            ans%=MOD;
        }
        printf("%I64d\n",ans);
    }
    return 0;
}
