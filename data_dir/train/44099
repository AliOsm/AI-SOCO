#pragma comment(linker, "/STACK:167177216")

#include <stdio.h>
#include <stack>
#include <math.h>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <string>
#include <memory.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <time.h>

using namespace std;

#define mp make_pair
#define pb push_back
#define pii pair<int,int>

typedef long long li;
typedef long double ld;
typedef unsigned long long uli;

const int INF = 1e9;
const ld eps = 1e-9;

vector<int> g[111];
int cnt[111];
int ans[222];
int a[222];
int n;
bool used[222];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);

    cin >> n;
    for(int i = 1; i <= 2 * n; i++)
    {
        cin >> a[i];
        cnt[a[i]]++;
        g[a[i]].pb(i);
    }
    int kol1 = 0, kol2 = 0;
    for(int i = 10; i <= 99; i++)
    {
        if(g[i].size() >= 2)
        {
            cnt[i] -= 2;
            kol1++;
            ans[g[i][g[i].size() - 1]] = 1;
            kol2++;
            ans[g[i][g[i].size() - 2]] = 2;
            g[i].pop_back();
            g[i].pop_back();
            used[i] = true;
        }
    }

    for(int i = 10; i <= 99; i++)
    {
        if(g[i].size() == 1 && !used[i])
        {
            cnt[i]--;
            if(kol1 < kol2)
            {
                kol1++;
                ans[g[i][0]] = 1;
            }
            else
            {
                kol2++;
                ans[g[i][0]] = 2;
            }
            g[i].clear();
        }
    }

    cout << kol1 * kol2 << endl;
    for(int i = 10; i <= 99; i++)
    {
        for(int j = 0; j < g[i].size(); j++)
        {
            if(kol1 < n)
            {
                kol1++;
                ans[g[i][j]] = 1;
            }
            else
            {
                kol2++;
                ans[g[i][j]] = 2;
            }
        }
    }

    for(int i = 1; i <= 2 * n; i++)
        cout << ans[i] << ' ';
    cout << endl;
    return 0;
}