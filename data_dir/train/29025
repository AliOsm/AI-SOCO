#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define fr first
#define sc second
#define pb push_back
#define maxheap priority_queue<int>
#define minheap priority_queue<int, vector<int>, greater<int> >
const int INF = 1e9+7;
const int MAXN = 5e5 + 200;
const  long double eps = 1e-16;
const long double pi = acos(-1.0);
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;


void solve(){

    long long A, B;
    cin >> A >> B;
    long long b = 9;
    if (b > B){
        cout << 0 << endl;
        return;
    }
long long    ans = A;
    while (true){
        b *= 10;
        b += 9;
        if (b > B) {
            cout << ans << endl;
            return;
        }
        ans += A;
    }

}

int main() {
ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
cout.setf(ios::fixed), cout.precision(10);
 //freopen("input.in", "r", stdin);
// freopen("output.out", "w", stdout);
 int step;
 cin >> step;
  for (int i = 1; i <= step; i++){
         solve();
    }
}
