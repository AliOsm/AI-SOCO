#include <bits/stdc++.h>
#define MOD 1000000007

using namespace std;

const double pi = acos(-1);
const int N = 1e3 + 5;

typedef complex<long double> point;
#define colliner pointOnLine
#define cross(a,b) ((conj(a)*(b)).imag())
#define vec(a,b) ((b)-(a))
#define EPS 1e-9

bool pointOnLine(const point& a, const point& b, const point& p) {
    // degenerate case: line is a point
    return fabs(cross(vec(a,b),vec(a,p))) < EPS;
}

vector<point> v;

int main()
{
    int n, x, y;
    scanf("%d %d %d", &n, &x, &y);
    point s(x, y);
    for(int i=0; i<n; i++){
        scanf("%d %d", &x, &y);
        point p(x, y);
        int f = 0;
        for(point a: v)
            f |= colliner(p, s, a);
        if(!f) v.push_back(p);
    }
    printf("%d\n", v.size());
    return 0;
}
