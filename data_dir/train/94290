#include <bits/stdc++.h>
#define ull unsigned ll
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define y1 sdfgsfdgs
#define exp sdfgsfdgsdf
#define ld long double
#define ll long long
#define pb push_back

using namespace std;

const ll MXN = 1e5 + 3;
const ll INF = 1e9 + 7;
const ll LINF = 1e18 + 15;
const ll MIN = 1e3 + 2;
const ld EPS = 1e-9;

ll n, m, a[MXN], b[MXN], used[MXN], id, mini = LINF, c[MIN][MIN], ans, x[MXN], y[MXN], z[MXN], bns, d[MIN][MIN];
vector <ll> g[MXN];
bool u[MXN];

void dfs(ll x)
{
    u[x] = true;
    for (ll i = 0; i < g[x].size(); i++)
    {
        ll to = g[x][i];
        if (!u[to])
        {

            dfs(to);
        }
    }
}
int main()
{
    cin >> n >> m;
    for (ll i = 1; i <= m; i++){
        cin >> a[i] >> b[i];
        used[a[i]]++;
        used[b[i]]++;
        c[a[i]][b[i]] = 1;
        c[b[i]][a[i]] = 1;
    }
    for (ll i = 1; i <= n; i++){
        if (used[i] < mini){
            mini = used[i];
            id = i;
        }
    }
    for (ll i = 1; i <= n; i++){
        if (i != id){
           if (!c[id][i]){
                ans++;
                x[ans] = id;
                y[ans] = i;
           }
        }
    }
    for (ll i = 1; i <= n; i++){
        if (i != id){
            if (c[id][i]){
                bns++;
                z[bns] = i;
            }
        }
    }
    for (ll i = 1; i <= bns; i++){
        for (ll j = 1; j <= n; j++){
            if (j != id && j != z[i]){
                if (!d[z[i]][i]){
                    d[z[i]][i] = 1;
                    d[i][z[i]] = 1;
                    ans++;
                    x[ans] = z[i];
                    y[ans] = j;
                }
            }
        }
    }
    cout << ans << "\n";
    for (ll i = 1; i <= ans; i++){
        cout << x[i] << " " << y[i] << "\n";
    }
    return 0;
}
