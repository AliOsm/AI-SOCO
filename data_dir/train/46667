#pragma comment(linker, "/STACK:134217728")

#include <cstdio>
#include <cmath>
#include <string>
#include <algorithm>
#include <iostream>
#include <numeric>
#include <vector>
#include <map>
#include <set>
#include <functional>
#include <queue>

using namespace std;

typedef long long LL;

int n;

char s[222][222];

vector<int> G[222];
set<int> GS[222];

vector<string> S;
map<string, int> M;

void go(int k, int pos, string ss)
{
	if (!M.count(ss))
	{
		M[ss] = M.size();
		S.push_back(ss);
	}
	if (!s[k][pos])
	{
		if (ss.size() > 0)
			GS[k].insert(M[ss]);
		return;
	}
	if (ss.size() < 4)
		go(k, pos + 1, ss + s[k][pos]);
	go(k, pos + 1, ss);
}

int u[222], mate[111111];

int gogo(int x)
{
	if (x == -1)
		return 1;
	if (u[x])
		return 0;
	u[x] = 1;
	for(int i = 0; i < G[x].size(); ++i)
	{
		int to = G[x][i];
		if (gogo(mate[to]))
		{
			mate[to] = x;
			return 1;
		}
	}
	return 0;
}


int main()
{
#ifndef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	scanf("%d", &n);
	for(int i = 0; i < n; ++i)
		scanf("%s", s[i]);
	for(int i = 0; i < n; ++i)
		go(i, 0, "");
	for(int i = 0; i < n; ++i)
		G[i] = vector<int>(GS[i].begin(), GS[i].end());
	memset(mate, -1, sizeof(mate));
	int total = 0;
	for(int i = 0; i < n; ++i)
	{
		memset(u, 0, sizeof(u));
		total += gogo(i);
	}
	if (total != n)
		printf("-1\n");
	else
	{
		vector<int> res(n);
		for(int i = 0; i < 111111; ++i)
			if (mate[i] != -1)
				res[mate[i]] = i;
		for(int i = 0; i < n; ++i)
			printf("%s\n", S[res[i]].c_str());
	}
	return 0;
}