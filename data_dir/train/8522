#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC target("avx,avx2,fma")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
typedef unsigned int uint;
typedef unsigned long long ull;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());

const int G = 1<<21, T = 1<<20;
int a, z, DO[G];

void add(int x){for(x+=T; x; x/=2) DO[x]++;}
void rem(int x){for(x+=T; x; x/=2) DO[x]--;}

int get_kth(int k){
    int v = 1;
    for(; v*2<G;){
        v*=2;
        if(DO[v]<k) k-=DO[v], v++;
    }
    return v-T;
}

int main() {
    fast;
    memset(DO, 0, sizeof(DO));
    cin>>a>>z;
    for(int q=0; q<a; q++){
        int x; cin>>x;
        add(x);
    }
    for(; z--;){
        int x; cin>>x;
        if(x>0) add(x);
        else{
            x *= -1;
            rem(get_kth(x));
        }
    }
    if(DO[1]==0) cout<<0;
    else cout<<get_kth(1);
}