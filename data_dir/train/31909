#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <cstring>
#include <cstdio>
// Kobe is the GOAT
// DON'T DIVIDE
// Greedy, Prefix, Sets/Bsearch, Dfs/bfs, DP
// Stack, Bitmask, Dsu 
using namespace std;

int n;
const int MAXN = 100005;
vector<int> adj[MAXN];
int total[MAXN];

int dfs(int idx, int par)
{
	int curr = 0;
	for(int i = 0; i < adj[idx].size(); i++)
		if(adj[idx][i] != par)
			curr += dfs(adj[idx][i], idx);
	if(curr == 0)
		curr = 1;
	total[curr]++;
	return curr;
}

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;

	for(int i = 2; i <= n; i++)
	{
		int p;
		cin >> p;
		adj[p].push_back(i);
		adj[i].push_back(p);
	}

	int l = dfs(1, 1);
	for(int i = 1; i <= l; i++)
		for(int j = 0; j < total[i]; j++)
			cout << i << " ";
	cout << "\n";
	return 0;
}
