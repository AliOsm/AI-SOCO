#include <cmath>
#include <vector>
#include <iostream>
#include <ctime>
#include <algorithm>
#include <queue>
#include <cstdio>
#include <cstring>
#include <set>
#include <map>

using namespace std;
typedef long long Long;

int main()
{
	int W,H,N;
	cin >> W >> H >> N;
	set<int> SH; SH.insert(0); SH.insert(H);
	set<int> SV; SV.insert(0); SV.insert(W);
	multiset<int> AW , AH;
	AW.insert(W);
	AH.insert(H);
	for (int i = 0; i < N; ++i) {
		string c; int p;
		cin >> c >> p;
		if(c == "H"){
			set<int>::iterator it = SH.lower_bound(p);
			int hi = *it;
			it--;
			int lo = *it;
			AH.erase(AH.lower_bound(hi-lo));
			AH.insert(hi-p);
			AH.insert(p-lo);
			SH.insert(p);
		}else{
			set<int>::iterator it = SV.lower_bound(p);
			int hi = *it;
			it--;
			int lo = *it;
			AW.erase(AW.lower_bound(hi-lo));
			AW.insert(hi-p);
			AW.insert(p-lo);
			SV.insert(p);
		}
		cout << 1LL * (*AH.rbegin()) * (*AW.rbegin()) << endl;
	}
}

