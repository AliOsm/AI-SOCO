#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 300300;
int a[MAX], b[MAX];
vector<int> adj[MAX];
int h[MAX];
int cnt[2];

void dfs(int u, int p, int lvl) {
	h[u] = lvl;
	for(int v : adj[u]) if(v != p) {
		dfs(v, u, lvl + 1);
	}
}


int main() {
	int n; scanf("%d", &n);
	REP(i, n - 1) {
		scanf("%d %d", a + i, b + i);
		adj[a[i]].pb(b[i]);
		adj[b[i]].pb(a[i]);
	}
	int root = -1;
	for(int i = 1; i <= n; i++) {
		if((int)adj[i].size() == 1) {
			root = i;
			break;
		}
	}
	dfs(root, -1, 0);
	bool q = true;
	for(int u = 1; u <= n; u++) {
		if(u != root && (int)adj[u].size() == 1) {
			if(h[u]%2 == 1) q = false;
		}
	}

	int ans1 = (q ? 1 : 3);
	int ans2 = n - 1;
	for(int u = 1; u <= n; u++) {
		int sz = 0;
		for(int v : adj[u]) {
			if((int)adj[v].size() == 1) sz++;
		}
		if(sz > 0) ans2 -= sz - 1;
	}
	printf("%d %d\n", ans1, ans2);
}