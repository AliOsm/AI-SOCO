//

#include <iostream>
#include <string>
#include <cmath>
#include <vector>
#include <algorithm>
#include <iterator>
#include <cstdlib>
#include <cstdio>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <list>

using namespace std;

int size_n;
vector <pair <int, pair <int, int >>> likes(0);

bool cmp(pair <int, pair <int, int >> a, pair <int, pair <int, int >> b);
int fnd(int numb);

int main()
{
	int ii, jj;
	int id, tmp;

	cin >> size_n;

	for (ii = 0; ii < size_n; ii++)
	{
		cin >> id;

		tmp = fnd(id);

		if (tmp == -1)
		{
			likes.push_back(make_pair(id, make_pair(1, ii)));
		}
		else
		{
			likes[tmp].second.first++;
			likes[tmp].second.second = ii;
		}
	}

	sort(likes.begin(), likes.end(), cmp);

	cout << likes[0].first << endl;

	return 0;
}

int fnd(int numb)
{
	int ii;
	int len;

	len = likes.size();

	for (ii = 0; ii < len; ii++)
	{
		if (numb == likes[ii].first)
			return ii;
	}

	return -1;
}

bool cmp(pair <int, pair <int, int >> a, pair <int, pair <int, int >> b)
{
	if (a.second.first > b.second.first)
		return 1;
	else if (a.second.first < b.second.first)
		return 0;
	else
	{
		if (a.second.second < b.second.second)
			return 1;
		else
			return 0;
	}
}