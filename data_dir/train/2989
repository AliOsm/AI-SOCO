#include<bits/stdc++.h>

#define F first
#define S second
#define ll long long
#define ull unsigned long long
#define pb push_back

using namespace std;
const int N = 200000;
int h[N], p[N];
vector < int > g[N];
int n;
int dp[25][N], f[N];
void dfs(int v, int pp = -1, int H = 1){
    h[v] = H;
    p[v] = pp;
    f[v] = 1;
    for (auto u: g[v]){
        if (u == pp) continue;
        dfs(u, v, H + 1);
        f[v] += f[u];
    }
}
main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    cin >> n;
    for (int i = 0; i < n - 1; i++){
        int u, v;
        cin >> u >> v;
        g[u].pb(v);
        g[v].pb(u);
    }
    dfs(1);
    p[1] = 0;
    for (int i = 1; i <= n; i++) dp[0][i] = p[i];
    for (int i = 1; i <= 20; i++){
        for (int j = 1; j <= n; j++){
            int v = dp[i - 1][j];
            dp[i][j] = dp[i - 1][v];
        }
    }
    int q;
    cin >> q;
    while(q--){
        int u, v;
        int s1 = 0;
        int s2 = 0;
        cin >> u >> v;
        if (u == v){
            cout << n << endl;
            continue;
        }
        if (h[u] > h[v]) swap(u, v);
        int u0, v0;
        u0 = u;
        v0 = v;
        for (int i = 20; i >= 0; i--){
            if (h[v] - h[u] >= (1 << i)) v = dp[i][v];
        }
        if (v != u){
            for (int i = 20; i >= 0; i--){
                if (dp[i][v] != dp[i][u]){
                    v = dp[i][v];
                    u = dp[i][u];
                }
            }
            s1 = f[u];
            s2 = f[v];
            v = dp[0][v];
        }
        int V = v;
        int w = h[u0] + h[v0] - h[v] - h[v];
        if (w & 1){
            cout << 0 << endl;
            continue;
        }
        v = v0;
        w /= 2;
        for (int i = 20; i >= 0; i--){
            if (w > (1 << i)){
                w -= (1 << i);
                v = dp[i][v];
            }
        }
        if (V == p[v]){
            cout << f[1] - s1 - s2 << endl;
            continue;
        }
        cout << f[p[v]] - f[v] << endl;
    }
}
