#include <stdio.h>
#include <math.h>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <algorithm>
#include <functional>
#include <iostream>
using namespace std;
using namespace std::rel_ops;
 
 
int n, xa, xb, p;
char s[1000];
 
void print() {
    for (int i = p - 1; i >= 0; i--)
        printf("%c", s[i]);
    printf("\n");
}
 
int main() {
    scanf("%d%d", &n, &xb);
 
    for (p = 0; (p + 1) * 9 <= xb; p++)
        s[p] = '9';
    if (xb % 9)
        s[p++] = '0' + xb % 9;
    print();
 
    for (int i = 0; i < n - 1; i++) {
        xa = xb;
        scanf("%d", &xb);
 
        if (xb > xa && xb - xa <= '9' - s[0]) {
            s[0] += xb - xa;
        } else {
            for (int j = 0; 1; j++) {
                if (j == p)
                    s[p++] = '0';
 
                if (s[j] == '9') {
                    xa -= s[j] - '0';
                    continue;
                }
                if (xb - xa - 1 < 0) {
                    xa -= s[j] - '0';
                    continue;
                }
                int dd, rem, remD;
                for (dd = 1; s[j] + dd <= '9'; dd++) {
                    rem = xb - xa - dd;
                    remD = rem ? (rem - 1) / 9 + 1 : 0;
                    if (remD <= j) 
                        break;
                }
                if (s[j] + dd > '9') {
                    xa -= s[j] - '0';
                    continue;
                }
                s[j] += dd;
                int pp;
                for (pp = 0; (pp + 1) * 9 <= rem; pp++)
                    s[pp] = '9';
                if (rem % 9)
                    s[pp++] = '0' + rem % 9;
                for (; pp < j; pp++)
                    s[pp] = '0';
                break;
            }
        }
        print();
    }
}