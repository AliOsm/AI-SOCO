#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N = 100005;

inline int in() {int x; scanf("%d",&x); return x;}
inline ll lin() {ll x; scanf("%I64d",&x); return x;}

int n , res;
int a[105], b[105];
int dp[105][5];

int go(int x , int prev){
    if(x > n) return 0;
    if(dp[x][prev] != -1) return dp[x][prev];
    int ret = INT_MAX;
    if(a[x] == 0 && b[x] == 0){
        ret = 1 + go(x + 1, 0);
    }else{
        if(prev == 1){
            if(b[x] == 0){
                ret = min(ret , 1 + go(x + 1, 2));
            }else{
                ret = min(ret , go(x + 1, 2));
            }
        }
        if(prev == 2){
            if(a[x] == 0){
                ret = min(ret , 1 + go(x + 1, 1));
            }else{
                ret = min(ret , go(x + 1, 1));
            }
        }
        if(prev == 0){
            if(a[x] == 0){
                ret = min(ret , 1 + go(x + 1, 1));
            }else{
                ret = min(ret , go(x + 1, 1));
            }

            if(b[x] == 0){
                ret = min(ret , 1 + go(x + 1, 2));
            }else{
                ret = min(ret , go(x + 1, 2));
            }
        }

        ret = min(ret , 1 + go(x + 1, 0));
    }
    return dp[x][prev] = ret;
}

int main(){
    n = in(); res = 0;
    for(int i = 1;i <= n; i++){
        int x = in();
        if(x == 1 || x == 3) b[i] = 1;
        if(x == 2 || x == 3) a[i] = 1;
    }

    memset(dp, -1, sizeof dp);
    res = go(0 , 0) - 1;

    printf("%d\n",res);
}
