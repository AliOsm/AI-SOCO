#include <bits/stdc++.h>
using namespace std;
#define x first
#define y second
#define dbg(x) cout << #x << '=' << x << '\n';
#define ll long long
#define pi pair<int,int>
#define pl pair<long long,long long>
#define lg length()
#define pb push_back
#define MAXN 100005
#define INF 1000000005
#define LINF 1000000000000000005

int n,m,xs,ys,xt,yt,v[1005][1005],d[1005][1005],k;

char a[1005][1005];

queue <pi> q;

int32_t main(){
    ios_base :: sync_with_stdio(0); cin.tie(); cout.tie();
    cin >> n >> m >> k;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            cin >> a[i][j];
            d[i][j]=1e9;
        }
    }
    cin >> xs >> ys >> xt >> yt;
    v[xs][ys]=1; d[xs][ys]=0;
    q.push({xs,ys});

    while(q.size()){
        xs=(q.front()).x;
        ys=(q.front()).y;
        q.pop();
        for(int i=xs+1;i<=min(xs+k,n);i++){
            if(a[i][ys]=='#') break;
            if(v[i][ys]){
                if(d[i][ys]==d[xs][ys]+1) continue;
                else break;
            }
            v[i][ys]=1;
            d[i][ys]=d[xs][ys]+1;
            q.push({i,ys});
        }
        for(int i=xs-1;i>=max(xs-k,1);i--){
            if(a[i][ys]=='#') break;
            if(v[i][ys]){
                if(d[i][ys]==d[xs][ys]+1) continue;
                else break;
            }
            v[i][ys]=1;
            d[i][ys]=d[xs][ys]+1;
            q.push({i,ys});
        }
        for(int i=ys+1;i<=min(ys+k,m);i++){
            if(a[xs][i]=='#') break;
            if(v[xs][i]){
                if(d[xs][i]==d[xs][ys]+1) continue;
                else break;
            }
            v[xs][i]=1;
            d[xs][i]=d[xs][ys]+1;
            q.push({xs,i});
        }
        for(int i=ys-1;i>=max(ys-k,1);i--){
            if(a[xs][i]=='#') break;
            if(v[xs][i]){
                if(d[xs][i]==d[xs][ys]+1) continue;
                else break;
            }
            v[xs][i]=1;
            d[xs][i]=d[xs][ys]+1;
            q.push({xs,i});
        }
    }


    if(d[xt][yt]==1e9) cout << -1;
    else cout << d[xt][yt];

}
