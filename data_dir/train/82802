#include <bits/stdc++.h>
#include <ext/numeric>
#include <ext/hash_map>
using namespace std;
using namespace __gnu_cxx;

#define EPS      1e-9
#define F        first
#define S        second
#define pi       acos(-1)
#define ll       long long
#define inf      0x3f3f3f3f
#define sz(x)    (int)x.size()
#define sc(x)    scanf("%d",&x)
#define all(x)   x.begin(),x.end()
#define rall(x)  x.rbegin(),x.rend()

string s1,s2;
int cnt[2][26];
const int MOD=1000000007;
int fac[1010101];
int tot;
hash_map<int,int> pwRes;

int pwr(ll base,int pw){
  if(pwRes[base])return pwRes[base];
  int bb=base;
  ll ans=1;
  while(pw){
    if(pw&1){
      ans=ans*base;
      if(ans>=MOD)ans%=MOD;
    }
    base=base*base;
    if(base>=MOD)base%=MOD;
    pw=(pw>>1)
;  }
  return pwRes[bb]=ans;
}

int getCnt(){
  ll res=fac[tot];
  for(int i=0;i<26;++i){
    res=(res*1LL*pwr(fac[cnt[0][i]],MOD-2));
    if(res>=MOD)res%=MOD;
  }
  return res;
}

void sub(int &a,int b){
  a-=b;
  if(a<0)a+=MOD;
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("in.txt", "r", stdin);
//freopen("out.txt", "w", stdout);
#endif
  cin>>s1>>s2;
  for(int i=0;i<sz(s1);++i)
    cnt[0][s1[i]-'a']++,
    cnt[1][s2[i]-'a']++;
  fac[0]=1;
  for(int i=1;i<1000101;++i)
    fac[i]=fac[i-1]*1LL*i%MOD;
  tot=sz(s1);
  ll cur=getCnt();
  int out=cur;
  bool match=1;
  for(int i=0;i<26;++i)
    match&=(cnt[0][i]==cnt[1][i]);
  sub(out,match+1);
  for(int i=0;i<sz(s2);++i){
    for(int j=s2[i]-'a'+1;j<26;++j){
      if(cnt[0][j]==0)continue;
      cur=cur*cnt[0][j]%MOD;
      cur=cur*pwr(tot,MOD-2)%MOD;
      sub(out,cur);
      cur=cur*tot%MOD;
      cur=cur*pwr(cnt[0][j],MOD-2)%MOD;
    }
    if(cnt[0][s2[i]-'a']==0)
      break;
    cur=cur*cnt[0][s2[i]-'a']%MOD;
    cur=cur*pwr(tot,MOD-2)%MOD;
    cnt[0][s2[i]-'a']--;
    tot--;
  }
  tot=sz(s1);
  memset(cnt,0,sizeof cnt);
  for(int i=0;i<sz(s1);++i)
    cnt[0][s1[i]-'a']++;
  cur=getCnt();
  for(int i=0;i<sz(s1);++i){
    for(int j=0;j<s1[i]-'a';++j){
      if(cnt[0][j]==0)continue;
      cur=cur*cnt[0][j]%MOD;
      cur=cur*pwr(tot,MOD-2)%MOD;
      sub(out,cur);
      cur=cur*tot%MOD;
      cur=cur*pwr(cnt[0][j],MOD-2)%MOD;
    }
    cur=cur*cnt[0][s1[i]-'a']%MOD;
    cur=cur*pwr(tot,MOD-2)%MOD;
    cnt[0][s1[i]-'a']--;
    tot--;
  }
  printf("%d\n",out);
}