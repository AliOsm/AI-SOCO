/// In The Name Of God

#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include <bits/stdc++.h>

#define f first
#define s second

#define pb push_back
#define pp pop_back
#define mp make_pair

#define sz(x) (int)x.size()
#define sqr(x) ((x) * 1ll * (x))
#define all(x) x.begin(), x.end()

#define rep(i, l, r) for (int i = (l); i <= (r); i++)
#define per(i, l, r) for (int i = (l); i >= (r); i--)

#define Kazakhstan ios_base :: sync_with_stdio(0), cin.tie(0), cout.tie(0);

#define nl '\n'
#define ioi exit(0);

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const int N = (int)5e5 + 7;
const int inf = (int)1e9 + 7;
const int mod = (int)1e9 + 7;
const ll linf = (ll)1e18 + 7;

const int dx[] = {-1, 0, 1, 0, 1, -1, -1, 1};
const int dy[] = {0, 1, 0, -1, 1, -1, 1, -1};

using namespace std;

int n, m;
int a[N], ans[N];
vector < pair <int, int> > q[N];
int l1[N], l2[N], bfr[N];
vector <int> cl[N];

struct tree {
	set <int> st[N << 2];
	int t[N << 2];
	void upd(int p, int x, int v = 1, int tl = 1, int tr = n) {
		if (tl == tr) {
			if (x < 0) st[v].erase(-x);
			else st[v].insert(x);
			if (!sz(st[v])) t[v] = 0;
			else t[v] = *st[v].rbegin();
			return;
		}
		int tm = tl + tr >> 1;
		if (p <= tm) upd(p, x, v << 1, tl, tm);
		else upd(p, x, v << 1 | 1, tm + 1, tr);
		t[v] = max(t[v << 1], t[v << 1 | 1]);
	}
	int get(int l, int r, int v = 1, int tl = 1, int tr = n) {
		if (l <= tl && tr <= r) return t[v];
		if (tl > r || tr < l) return 0;
		int tm = tl + tr >> 1;
		return max(get(l, r, v << 1, tl, tm), get(l, r, v << 1 | 1, tm + 1, tr));
	}
} t;

int main() {
	#ifdef IOI2018
		freopen ("in.txt", "r", stdin);
	#endif
	Kazakhstan
	cin >> n;
	rep(i, 1, n) {
		cin >> a[i];
	}
	cin >> m;
	rep(i, 1, m) {
		int l, r;
		cin >> l >> r;
		q[r].pb({l, i});
	}
	rep(i, 1, n) {
		l1[i] = bfr[a[i]];
		bfr[a[i]] = i;
	}
	memset(bfr, 0, sizeof(bfr));
	per(i, n, 1) {
		l2[i] = bfr[a[i]];
		bfr[a[i]] = i;
		l1[i]++;
		if (!l2[i]) l2[i] = n + 1;
		l2[i]--;
	}
	rep(i, 1, n) {
		cl[l2[i]].pb(i);
	}

	rep(i, 1, n) {
		t.upd(l1[i], i);

		for (auto it : q[i]) {
			int p = t.get(1, it.f);
			if (p >= it.f) ans[it.s] = a[p];
			else ans[it.s] = 0;
		}

		for (auto it : cl[i]) t.upd(l1[it], -it);
	}
	rep(i, 1, m) {
		cout << ans[i] << nl;
	}
	ioi
}
