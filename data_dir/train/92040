#include <bits/stdc++.h>
using namespace std;
long long Q,l,r,k,c[1123456];
bool used[1123456];
set<long long> a[10];

inline long long f(long long x){
    long long t = 1;
    while(x){
        if(x%10)
            t *= x%10;
        x /= 10;
    }
    return t;
}

inline long long g(long long x){
    if(x<10){
        a[x].insert(x);
        return x;
    }else{
        long long t = g(f(x));
        a[t].insert(x);
        return t;
    }
    
}

int main(){
    ios_base::sync_with_stdio(false);
    cin>>Q;
    for(int i=1000000;i>0;--i){
        if(!used[i]){
            g(i);
        }
    }
    for(int i = 1, d = 0; i < 10; ++i){
        a[i].insert(0);
        a[i].insert(10000000);
        for(auto j : a[i]){
            if(j!=0&&j!=10000000)
                c[j] = c[d] + 1;
            d = j;
        }
    }
    while(Q--){
        cin>>l>>r>>k;
        auto L = a[k].lower_bound(l), R = a[k].upper_bound(r);
        if(L!=a[k].begin()&&*prev(L)>=l)
            --L;
        if(R==a[k].end()||*R>r){
            --R;
        }
        if(*L>r){
            cout<<0<<endl;
            continue;
        }
        cout<<c[*R] - c[*L] + 1<<endl;
        // cout<<*L<<" "<<*R<<endl;
        // cout<<c[*L]<<" "<<c[*R]<<endl;
    }
}