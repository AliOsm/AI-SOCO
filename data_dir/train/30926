//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
//#pragma GCC target("avx,tune=native")
// Anand Jaisingh

#include<bits/stdc++.h>

using namespace std;

typedef complex<double> base;
typedef long double ld;
typedef long long ll;

#define pb push_back
#define pii pair<int,int>
#define pll pair< ll , ll >
#define vi vector<int>
#define vvi vector< vi >

const int maxn=(int)(105);
const ll mod=(ll)(998244353);
int a[maxn][maxn],c[maxn][maxn];
vector< pair< string, int > > v1,v2;

int solve1(int n,int m)
{
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            a[i][j]=c[i][j];
        }
    }

    for(int i=0;i<n;i++)
    {
        int curr=INT_MAX;

        for(int j=0;j<m;j++)
        {
            curr=min(curr,a[i][j]);
        }

        for(int j=0;j<m;j++)
        {
            int diff=a[i][j]-curr;

            for(int k=0;k<n;k++)
            {
                a[k][j]-=diff;
            }

            for(int k=0;k<diff;k++)
            {
                v1.pb({"col",j+1});
            }
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a[i][j]<0 || (j>=1 && a[i][j]!=a[i][j-1]))
            {
                return INT_MAX;
            }
        }
    }

    for(int i=0;i<n;i++)
    {
        int curr=INT_MAX;

        for(int j=0;j<m;j++)
        {
            curr=min(curr,a[i][j]);
        }

        for(int j=0;j<curr;j++)
        {
            v1.pb({"row",i+1});
        }
    }

    return v1.size();
}

int solve2(int n,int m)
{
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            a[i][j]=c[i][j];
        }
    }

    for(int j=0;j<m;j++)
    {
        int curr=INT_MAX;

        for(int i=0;i<n;i++)
        {
            curr=min(curr,a[i][j]);
        }

        for(int i=0;i<n;i++)
        {
            int diff=a[i][j]-curr;

            for(int k=0;k<m;k++)
            {
                a[i][k]-=diff;
            }

            for(int k=0;k<diff;k++)
            {
                v2.pb({"row",i+1});
            }
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a[i][j]<0 || (i>=1 && a[i][j]!=a[i-1][j]))
            {
                return INT_MAX;
            }
        }
    }

    for(int j=0;j<m;j++)
    {
        int curr=INT_MAX;

        for(int i=0;i<n;i++)
        {
            curr=min(curr,a[i][j]);
        }

        for(int i=0;i<curr;i++)
        {
            v2.pb({"col",j+1});
        }
    }

    return v2.size();
}

int main()
{
    ios_base::sync_with_stdio(0);

    int n,m;cin>>n>>m;

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>c[i][j];
        }
    }

    int val1=solve1(n,m),val2=solve2(n,m);

    if(min(val1,val2)==INT_MAX)
    {
        cout<<(-1)<<endl;
    }

    else if(val1<=val2)
    {
        cout<<val1<<endl;

        for(auto x:v1)
        {
            cout<<(x.first)<<" "<<(x.second)<<endl;
        }
    }

    else
    {
        cout<<val2<<endl;

        for(auto x:v2)
        {
            cout<<(x.first)<<" "<<(x.second)<<endl;
        }
    }

   return 0;
}
