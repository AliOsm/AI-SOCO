#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <memory.h>
#include <ctime>

using namespace std;

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned


int a[2010][2010];
int howmany[2010];
string s;
LL dp[60][60][2];
LL r(int p, int k, int sm)
{
	if (p==s.size())
		return (k==0);
	if (dp[p][k][sm]!=-1)
		return dp[p][k][sm];
	int nsm=sm;
	if (s[p]=='1')
		nsm=1;
	LL res=r(p+1,k,nsm);
	if ((sm==1) || (s[p]=='1'))
	{
		if (k>0)
			res+=r(p+1,k-1,sm);
	}
	return dp[p][k][sm]=res;
}
int main()
{
#ifdef Fcdkbear
    freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    double beg=clock();
#endif
	
	/*for (int m=1; m<=200; ++m)
	{
		FOR(i,0,m)
			a[0][i]=0;
		a[0][m]=1;
		FOR(i,1,m+1)
			FOR(j,0,m+1)
			{
				int v=0;
				if (j)
					v^=a[i-1][j-1];
				if (j!=m)
					v^=a[i-1][j+1];
				a[i][j]=v;
			}
		int sum=0;
		FOR(i,0,m+1)
			sum+=a[m][i];
		howmany[sum]++;
		printf("%d %d\n",m,sum);
		/*FOR(i,0,m+1)
		{
			FOR(j,0,m+1)
			{
				printf("%d ",a[i][j]);
			}
			printf("\n");
		}

	}*/
	/*FOR(i,0,2000)
	{
		if (howmany[i])
			printf("%d %d\n",i,howmany[i]);
	}*/
	LL n,t;
	cin>>n>>t;
	if ((t&(t-1))!=0)
	{
		cout<<0<<endl;
		return 0;
	}
	n++;
	s="";
	while (n)
	{
		s+=((n&1)+'0');
		n/=2;
	}
	int k=0;
	LL oldt=t;
	while (t>0)
	{
		t/=2;
		k++;
	}
	reverse(s.begin(),s.end());
	MEMS(dp,-1);
	LL res=r(0,k,0);
	if (oldt==1)
		res--;
	cout<<res<<endl;
#ifdef Fcdkbear
    double end=clock();
    fprintf(stderr,"*** Total time = %.3lf ***\n",(end-beg)/CLOCKS_PER_SEC);
#endif
	return 0;
}