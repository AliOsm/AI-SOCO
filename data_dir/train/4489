#pragma GCC optimize("Ofast,no-stack-protector")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx")
#pragma GCC target("avx,tune=native")

#include <bits/stdc++.h>

using namespace std;

vector<int> G[100005];
int ans[100005][105];
vector<int> arrayLists[105];

void bfs(int type) {
    queue<pair<int, int>> zerone;
    for (int i = 0; i < arrayLists[type].size(); i++) zerone.push(make_pair(arrayLists[type][i], 0));
    while (!zerone.empty()) {
        auto temp = zerone.front();
        zerone.pop();
        if (ans[temp.first][type] != INT_MAX) continue;
        ans[temp.first][type] = temp.second;
        for (int i = 0; i < G[temp.first].size(); i++) {
            zerone.push(make_pair(G[temp.first][i], temp.second + 1));
        }
    }
}


int main() {
    cin.tie(NULL);
    ios_base::sync_with_stdio(false);
    int n;
    int m;
    int k;
    int s;
    cin >> n >> m >> k >> s;
    for (int i = 0; i <= n; i++) for (int j = 0; j < 105; j++)ans[i][j] = INT_MAX;

    int values[n + 1];
    for (int i = 1; i <= n; i++) {
        cin >> values[i];
        arrayLists[values[i]].push_back(i);
    }

    for (int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;
        G[x].push_back(y);
        G[y].push_back(x);
    }
    for (int i = 1; i <= k; i++)bfs(i);
    for (int i = 1; i <= n; i++) sort(ans[i], ans[i] + 105);
    for (int i = 1; i <= n; i++) {
        int anss = 0;
        for (int j = 0; j < s; j++) anss += ans[i][j];
        cout << anss << " ";
    }

    return 0;
}