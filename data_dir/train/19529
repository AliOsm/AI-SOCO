		//			- -- --- ---- -----be name khoda----- ---- --- -- -			\\

#include <bits/stdc++.h>

using namespace std;

const int N = 200002;

struct {
	int f[N];
	void add(int x, int s)
	{
		for(; x < N; x += x & (-x))
			f[x] = max(f[x], s);
	}
	int get(int i)
	{
		int ans = 0;
		for(; i; i -= i & (-i))
			ans = max(ans, f[i]);
		return ans;
	}
} fl, fr;

int a[N], l[N], r[N], cnt[N], len;
pair<int, int> b[N];

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin >> n;
	for(int i = 1; i <= n; i++)
	{
		cin >> a[i];
		b[i] = make_pair(a[i], i);
	}


	sort(b + 1, b + n + 1);
	for(int i = 1; i <= n; i++)
	{
		int li = i;
		l[b[i].second] = fl.get(b[i].second - 1) + 1;
		for(i++; i <= n && b[i].first == b[i - 1].first; i++)
			l[b[i].second] = fl.get(b[i].second - 1) + 1;
		i = li;
		fl.add(b[i].second, l[b[i].second]);
		for(i++; i <= n && b[i].first == b[i - 1].first; i++)
			fl.add(b[i].second, l[b[i].second]);
		i--;
	}
	reverse(b + 1, b + n + 1);
	for(int i = 1; i <= n; i++)
	{
		int li = i;
		r[b[i].second] = fr.get(n - b[i].second) + 1;
		for(i++; i <= n && b[i].first == b[i - 1].first; i++)
			r[b[i].second] = fr.get(n - b[i].second) + 1;
		i = li;
		fr.add(n - b[i].second + 1, r[b[i].second]);
		for(i++; i <= n && b[i].first == b[i - 1].first; i++)
			fr.add(n - b[i].second + 1, r[b[i].second]);
		i--;
	}


	for(int i = 1; i <= n; i++)
		len = max(len, l[i] + r[i] - 1);
	for(int i = 1; i <= n; i++)
		if(l[i] + r[i] - 1 == len)
			cnt[l[i]]++;
	for(int i = 1; i <= n; i++)
		if(l[i] + r[i] - 1 < len)
			cout << 1;
		else if(cnt[l[i]] == 1)
			cout << 3;
		else
			cout << 2;
	cout << endl;
}
