#include <bits/stdc++.h>
#define MOD 1000000007
#define endl "\n"
typedef long long ll;
using namespace std;

const int N = 333333;
vector<int> tree[N];
ll par[N], cnt[N];
bool path[N];
ll n, x, y;

void dfs(int u, int p = 0) {
    par[u] = p;
    cnt[u] = 1;
    for(v : tree[u]) {
        if(v != p) {
            dfs(v, u);
            cnt[u] += cnt[v];
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    cout.precision(10);
    cin >> n >> x >> y;
    for(int i = 1; i < n; i++) {
        int u, v;
        cin >> u >> v;
        tree[u].push_back(v);
        tree[v].push_back(u);
    }
    dfs(x);
    int node = y;
    while(node != x) {
        path[node] = true;
        node = par[node];
    }
    path[x] = true;
    ll cntx = 1;
    for(v : tree[x]) {
        if(!path[v]) {
            cntx += cnt[v];
        }
    }
    fill(cnt + 1, cnt + n + 1, 0);
    fill(par + 1, par + n + 1, 0);
    dfs(y);
    ll cnty = 1;
    for(v : tree[y]) {
        if(!path[v]) {
            cnty += cnt[v];
        }
    }
    ll ans = n * (n - 1) - cntx * cnty;
    cout << ans << endl;
    return 0;
}
