#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define pi acos(-1)
#define inf 1000000007
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 20000

template<typename T,typename TT> 
ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> 
ostream& operator<<(ostream &s,vector<T> t){for(int i=0;i<t.size();i++)s<<t[i]<<" ";return s;}
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)
char s[155][155];
int dp[155][155],pre[155],last[155],n,m;
int fun(int x,int y,int d)
{
    if(x>=n)return 0;
    if(x==n-1)
    {
        if(d==0&&pre[x]<y)return inf;
        if(d&&last[x]>y)return inf;
        if(d==0)return max(0,last[x]-y);
        if(d)return max(0,y-pre[x]);
    }
    int &res=dp[x][y];
    if(res+1)return res;
    res=inf;
    if(d==0)
    {
        if(pre[x]<y)return res=inf;
        int pos=max(last[x],last[x+1]);pos=max(pos,y);
        for(int i=pos;i<m;i++)res=min(res,i-y+1+fun(x+1,i,1));
    }
    else
    {
        if(last[x]>y)return res=inf;
        int pos=min(pre[x],pre[x+1]);pos=min(pos,y);
        for(int i=pos;i>=0;i--)res=min(res,y-i+1+fun(x+1,i,0));
    }
    return res;
}
int main()
{
    int i,j,t=0;
    while(~scanf("%d%d",&n,&m))
    {
        for(i=0;i<n;i++)
        {
            scanf("%s",s[i]);
            pre[i]=m+1;last[i]=-1;
            for(j=0;j<m;j++)
            if(s[i][j]=='W')
            {if(pre[i]==m+1)pre[i]=j;last[i]=j;}
        }
        while(n>=0&&pre[n-1]==m+1)n--;
        memset(dp,-1,sizeof(dp));
        int ans=fun(0,0,0);
        printf("%d\n",ans);
    }
}