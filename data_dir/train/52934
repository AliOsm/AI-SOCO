#include <bits/stdc++.h>

using namespace std;

const int N = 3010;
const long long INF = (long long)1e18 + 10;

int n;
int x[N], c[N];
int idx[N];
long long dp[N];
long long dd[N];

void init() {
  for (int i = 1; i <= n; ++i) {
    dd[i] = dd[i - 1] + x[idx[i]];
  }
}

long long len(int i, int j) {
  return dd[j] - dd[i] - 1ll * x[idx[i]] * (j - i);
}

int cmp(int a, int b) {
  return x[a] < x[b];
}

int main() {
  scanf("%d", &n);
  for (int i = 1; i <= n; ++i) {
    scanf("%d%d", x + i, c + i);
  }
  for (int i = 1; i <= n; ++i) {
    idx[i] = i;
  }
  sort(idx + 1, idx + n + 1, cmp);
  init();
  fill(dp, dp + n + 1, INF);
  dp[n + 1] = 0;
  dp[n] = c[idx[n]];
  for (int i = n - 1; i >= 1; --i) {
    int ii = idx[i];
    for (int j = i + 1; j <= n + 1; ++j) {
      int jj = idx[j];
      dp[i] = min(dp[i], dp[j] + len(i, j - 1) + c[ii]);
    }
  }
  printf("%lld\n", dp[1]);
  return 0;
}
