#pragma GCC optimize("O3")
#include <bits/stdc++.h>

using namespace std;
using namespace __gnu_cxx;


#define f first
#define s second
#define sz size()
#define em empty()
#define pb push_back
#define pf push_front
#define mem(a,b,s) for(int i=0 ; i<=s ; ++i) a[i]=b;
#define mem2(a,r,c,b) for(int i=0 ; i<=r ; ++i)    for(int j=0 ; j<=c ; ++j)    a[i][j]=b;
#define all(a) a.begin(),a.end()
#define rall(a)	a.rbegin(),a.rend()
#define mp make_pair
#define in insert
#define sc(x) scanf("%d",&x)
#define scl(a)	scanf("%lld",&a)
#define sc2(a,b)	scanf("%d%d",&a,&b)
#define rep(x,a,b)	for(int x=a ; x<=b ; ++x)
#define irep(x,a,b)	for(int x=a ; x>=b ; --x)

typedef unsigned long long ull;
typedef long long ll;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<pair<int,int> > vii;
typedef set<int> si;
typedef set<pair<int,int> > sii;
typedef map<int,int>	mii;
typedef pair<int,char>	ic;
typedef pair<int,string> is;
typedef long double ld;
typedef priority_queue<ii> pqii;
typedef priority_queue<int>pqi;

const double pi=3.14159265358979323846264338327950288419716939937510582097494459;
const double EPS = 1e-9;
const int MAXN=1e5+10;
const ll MOD=1e9+7;
const int oo=2e9+10;
const ll OO=1e18;

int dx[]={0,1,0,-1,-1,-1,1,1};
int dy[]={1,0,-1,0,-1,1,-1,1};

int n,m,ans;
char g[505][505];

int check(int x, int y)
{
	if(ans)	return -1;
	rep(i,0,3)	if(g[x+dx[i]][y+dy[i]]!='*')	return 0;
	rep(j,y+1,m)
	{
		if(g[x][j]!='*')	break;
		g[x][j]='.';
	}
	irep(j,y-1,1)
	{
		if(g[x][j]!='*')	break;
		g[x][j]='.';
	}
	rep(j,x+1,n)
	{
		if(g[j][y]!='*')	break;
		g[j][y]='.';
	}
	irep(j,x-1,1)
	{
		if(g[j][y]!='*')	break;
		g[j][y]='.';
	}
	g[x][y]='.';
	return 1;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("In.txt","r",stdin);
//	freopen("Out.txt","w",stdout);
#else
//	freopen("In.txt","r",stdin);
//	freopen("Out.txt","w",stdout);
#endif

	scanf("%d%d",&n,&m);
	rep(i,1,n)	rep(j,1,m)	scanf(" %c",g[i]+j);
	rep(i,1,n)	rep(j,1,m)	if(g[i][j]=='*')	ans=check(i,j);
	rep(i,1,n)	rep(j,1,m)	if(g[i][j]=='*')	ans=check(i,j);
	if(ans==1)	return puts("YES");
	return puts("NO");
}
