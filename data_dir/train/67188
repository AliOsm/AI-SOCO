#include <bits/stdc++.h>
#include <sys/time.h>

using namespace std;

#define rep(i, a, b) for(int i = a; i < (b); ++i)
#define trav(a, x) for(auto& a : x)
#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()

using ll = long long;
using ld = long double;
using pii = pair<int, int>;
using vi = vector<int>;

typedef long long H;
static const H M = INT_MAX;
static H C; // initialized below

// Arithmetic mod M. "typedef H K;" instead if you think
// test data is random. (Haha, good luck.)
struct K {
	H x; K(H x=0) : x(x) {}
	K operator+(K o) { H y = x + o.x; return y - (y >= M) * M; }
	K operator*(K o) { return x*o.x % M; }
	H operator-(K o) { H y = x - o.x; return y + (y < 0) * M; }
};

struct HashInterval {
	vector<K> ha, pw;
	HashInterval(string& str) : ha(sz(str)+1), pw(ha) {
		pw[0] = 1;
		rep(i,0,sz(str))
			ha[i+1] = ha[i] * C + str[i],
			pw[i+1] = pw[i] * C;
	}
	H hashInterval(int a, int b) { // hash [a, b)
		return ha[b] - ha[a] * pw[b - a];
	}
};

constexpr int MAXN = 2e5 + 5;
string s;
int dp[MAXN][26];

bool diverse(int l, int r) {
    int found = 0;
    for (int j = 0; j < 26; ++j) {
        found += dp[r][j] - dp[l][j] > 0;
    }

    return found > 2;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);

	timeval tp;
	gettimeofday(&tp, 0);
	C = tp.tv_usec;

    cin >> s;
    string t(s);
    reverse(all(t));
    HashInterval f(s), b(t);

    int n = s.size();
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < 26; ++j) {
            dp[i + 1][j] = dp[i][j];
        }
        ++dp[i + 1][s[i] - 'a'];
    }

    int q;
    cin >> q;
    while (q-- > 0) {
        int l, r;
        cin >> l >> r;
        --l;

        // len 1: irreducible
        // at least 3 distinct letters: irreducible
        // otherwise, just check first and last letters!!

        if (r - l == 1 or diverse(l, r) or s[l] != s[r - 1]) {
            cout << "Yes\n";
        } else {
            cout << "No\n";
        }

        // t is a reducible anagram of s if there is some prefix of t which is a prefix of s
        // Otherwise, t is an irreducible anagram of s
        //
        // baaaab has no options
        //
        // ababab has 
        // bbabaa
        //
        // cbabac
        // aaccbb
        //
        // cbabaaac
        // aaaaccbb
        //
        // abbaaa has no options
    }

    return 0;
}
