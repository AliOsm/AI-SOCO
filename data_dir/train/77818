#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
const long long M = (long long) 1e5;
const long long int Mod = (long long) 1e9 + 7;
//int n , q , u , v , type , m , x, cnt = 0;
int a[N];
string inp;
map < char , int > mtp;
bool check(int qcnt) {
    int cnt = 0;
    for(int i = 0; i < 26; ++i) {
        cnt += mtp[(char)(i + 'A')] ? 1 : 0;
    }
    cnt += qcnt;
    return cnt == 26;
}
string get(int l , int r) {
    string ans = "";
    for(int i = 0; i < l; ++i) {
            if(inp[i] == '?') ans += 'A';
              else ans += inp[i];
    }
    string tmp = "";
    int seen[26] = {0};
    for(int i = 0; i < 26; ++i) seen[i] = 0;
    for(int i = l; i <= r; ++i) {
        if(inp[i] != '?')
        seen[inp[i] - 'A'] = 1;
    }
    for(int i = l; i <= r; ++i) {
        if(inp[i] != '?' && seen[inp[i] - 'A']) {
            tmp += inp[i];
        } else {
            char c;
            for(int j = 0; j < 26; ++j) {
                if(!seen[j]) {
                    c = (char) (j + 'A');
                    break;
                }
            }
            tmp += c;
            seen[c - 'A'] = 1;
        }
    }
    ans += tmp;

    int to = (int) inp.size();
    for(int i = r + 1; i < to; ++i) {
            if(inp[i] == '?') ans += 'A';
            else ans += inp[i];
    }
    return ans;
}
int main() {
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    cin >> inp;
    int to = (int) inp.size();
    if(to < 26) {
        cout << "-1";
        return 0;
    }
    int qcnt = 0;
    for(int i = 0; i < 26; ++i) {
            if(inp[i] != '?')
            ++mtp[inp[i]];
            else qcnt++;
    }
    bool ok = false;
    int l = -1 , r = -1;
    for(int i = 26; !ok && i < to; ++i) {
            ok |= check(qcnt);
            if(ok) {
                r = i - 1;
                l = r - 25;
                break;
            }
            if(inp[i - 26] == '?') --qcnt;
            else --mtp[inp[i - 26]];
            if(inp[i] == '?') ++qcnt;
            else ++mtp[inp[i]];
    }
    if(!ok) {
        ok |= check(qcnt);
        if(ok) {
            r = to - 1;
            l = r - 25;
        }
    }
    if(!ok) {
        cout << "-1";
        return 0;
    }
    cout << get(l , r) << endl;
}
