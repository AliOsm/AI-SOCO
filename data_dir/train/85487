#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair
#define sz(x) (int)(x).size()
#define li long long
#define ld long double
#define x first
#define y second
#define pt pair<int, int>
#define pll pair<li, li>
#define forn(i, t) for(int i = 0; i < (t); i++)
#define fore(i, f, t) for(int i = (f); i < (t); i++)
#define forr(i, f, t) for(int i = (f) - 1; i >= (t); i--)
#define all(x) (x).begin(), (x).end()
#define ins insert

using namespace std;

const int INF = 1e9;
const int MOD = 1e9 + 7;
const li INF64 = 1e18;
const ld EPS = 1e-7;

mt19937 myrand(time(NULL));

const int N = 103;

int n, m;
string s[N];
string t;
int a[N];
pt st, en;

bool read(){
	if(!(cin >> n >> m))
		return 0;
	forn(i, n){
		cin >> s[i];
		forn(j, m)
			if (s[i][j] == 'S')
				st = mp(i, j);
			else if (s[i][j] == 'E')
				en = mp(i, j);
	}
	cin >> t;
	forn(i, sz(t))
		a[i] = t[i] - '0';
	return 1;
}

int dx[] = {-1, 0, 1, 0};
int dy[] = {0, 1, 0, -1};

bool in(int x, int y){
	return (x >= 0 && x < n && y >= 0 && y < m && s[x][y] != '#');
}

bool check(vector<int> p){	
	auto cur = st;
	
	forn(i, sz(t)){
		cur.x += dx[p[a[i]]];
		cur.y += dy[p[a[i]]];
		if (!in(cur.x, cur.y))
			return false;
		if (cur == en)
			return true;
	}
	
	return false;
}

void solve(){
	vector<int> p = {0, 1, 2, 3};
	int ans = 0;
	do{
		if (check(p))
			++ans;
	} while (next_permutation(all(p)));
	cout << ans << endl;
}

int main(){
	#ifdef _DEBUG
		freopen("input.txt", "r", stdin);
	#endif
	while(read())
		solve();
	return 0;
}