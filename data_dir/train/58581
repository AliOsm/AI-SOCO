#include <cstdio>
#include <cstddef>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cctype>
#include <cassert>
#include <ciso646>
#include <climits>
#include <cmath>


#include <algorithm>
#include <utility>
#include <functional>
#include <numeric>
#include <string>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <deque>
 
  
typedef std::pair< int, int > pii;
typedef std::vector< int > vi;
typedef std::vector< pii > vii ;

struct query
{
    int t,l,r;
};

int main(int argc, char * argv[] ) 
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif //end online-judge    
    
    
    int n,m,q;
    scanf("%d%d%d", &n, &q, &m ) ;
    
    
    vi a( 1 + n ); 
    for(int i = 1; i <= n; ++i)scanf("%d", &a[ i ] );
    
    std::vector< query > qs( q );
    for(int i = 0; i < q; ++i){
        scanf("%d%d%d", &(qs[i].t), &(qs[i].l), &(qs[i].r) ) ;
    }
    
    vi idx(m);
    for(int i = 0; i < m; ++i) scanf("%d", &(idx[i] ) ) ;
    
    for(int i = q-1; i >= 0; --i)
    {
        query z = qs[i];
        
        if (z.t == 1 ) {
            // shift right
            for(int  j = 0; j < m; ++j)
            {
                if (idx[j] >= z.l && idx[j] <= z.r ) {
                    --idx[j];
                    if (idx[j] < z.l ){
                        idx[j] = z.r ;
                    }
                }
            }
        } else {
            
            // reverse  [l..r]
            //    l <= x <= r  -->  0 <= x- l <= r - l  :  x-l ==> (r-l) - (x-l) = r- x  ==> x ==> r + l - x
            for(int j = 0; j < m; ++j)
            {
                if (idx[j] >= z.l && idx[j] <= z.r ) {
                    idx[j] = z.r + z.l - idx[j];
                }
            }
        }
    }
    
    
    for(int i = 0; i < m; ++i)
    {
        printf("%d ", a[idx[i]] ) ;
    }
    printf("\n");
    
}