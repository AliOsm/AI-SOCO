
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <functional>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 4100;
const ll MOD = 1e9+7;
const double eps = 1e-9;

int n,m,q,w[12],f[N],sum[N][101];
char st[15];
vector<int> s;

string toString(int x) {
	string s = "";
	for(int i=0; i<n; i++)
		s += (x & (1<<i) ? "1" : "0");
	return s;
}

int toNumber(string s) {
	int x = 0;
	for(int i=0; i<n; i++)
		if(s[i]=='1')
			x |= (1<<i);
	return x;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif
	scanf("%d%d%d",&n,&m,&q);
	for(int i=0; i<n; i++)
		scanf("%d",w+i);
	for(int i=0,j; i<m; i++) {
		scanf("%s",st);
		f[j = toNumber(st)]++;
		s.push_back(j);
	}
	sort(s.begin(),s.end());
	s.resize(unique(s.begin(),s.end())-s.begin());
	for(int msk=0; msk<(1<<n); msk++) {
		for(int i=0; i<s.size(); i++) {
			int cnt = 0;
			for(int j=0; j<n && cnt<=100; j++)
				if((msk & (1<<j)) == (s[i] & (1<<j))) 
					cnt += w[j];
			if(cnt <= 100)
				sum[msk][cnt] += f[s[i]];
		}
		for(int i=1; i<=100; i++)
			sum[msk][i] += sum[msk][i-1];
	}
	while(q--) {
		scanf("%s",st);
		int x = toNumber(st),k;
		scanf("%d",&k);
		printf("%d\n",sum[x][k]);
	} 
 	return 0;
}