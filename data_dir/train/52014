#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 7;

vector <pair <int, int> > a[N];


vector <int> adj[N];


int vis[N], ans[N], st[N];

stack <int> stk;



int cycle(int u) {
    if(st[u]) return 1;
    if(vis[u]) return 0;
    st[u] = vis[u] = 1;
    for(int v: adj[u])
        if(cycle(v))
            return 1;
    st[u] = 0;
    return 0;
}

void dfs(int u) {
    if(vis[u]) return;
    vis[u] = 1;
    for(int v: adj[u])
        dfs(v);
    stk.push(u);
}

int main() {
    int n, m, dummy = m; cin >> n >> m;
    dummy = m;
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= m; j++) {
            int x; cin >> x;
            if(~x)
                a[i].push_back(make_pair(x, j));
        }
        sort(a[i].begin(), a[i].end());
        int prv = ++dummy;
        for(int k = 0; k < a[i].size(); k++) {
            int idx, cur = ++dummy;
            for(int j = k; j < a[i].size() && a[i][j].first == a[i][k].first; j++) {
                idx = j;
                adj[prv].push_back(a[i][j].second);
                adj[a[i][j].second].push_back(cur);
            }
            k = idx;
            prv = cur;
        }
    }


    for(int i = 1; i <= dummy; i++) {
        if(cycle(i)) {
            cout << -1 << endl;
            return 0;
        }
    }

    memset(vis, 0, sizeof vis);

    for(int i = 1; i <= dummy; i++) dfs(i);

    int id = 0;

    while(!stk.empty()) {
        int u = stk.top(); stk.pop();
        if(u <= m) ans[++id] = u;
    }


    for(int i = 1; i <= m; i++) cout << ans[i] << " ";

}
