#include <bits/stdc++.h>

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//#pragma GCC optimize("Ofast")
//1.0 * clock() / CLOCKS_PER_SEC

#define fi first
#define se second
#define ll long long
#define dl double long

using namespace std;

const int NN = 2e5 + 7;
const int N = 1e6 + 7;
const int M = 22;
const int mod = 998244353;
const ll inf = 1e18 + 7;
const dl rf = 1e-14;
const int B = sqrt(N);
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

void solve1()
{
    int n,m;
    cin >> n >> m;
    vector < string > v(n);
    for( int i = 0; i < n; i++ ){
        cin >> v[i];
    }
    string ans = v[0];
    for( int i = 0; i < m; i++ ){
        char c = ans[i];
        for( int j = 0; j < 26; j++ ){
            ans[i] = (char)(j + 'a');
            bool f = true;
            for( int h = 0; h < n; h++ ){
                int x = 0;
                for( int g = 0; g < m; g++ ){
                    x += (v[h][g] != ans[g]);
                }
                f &= (x <= 1);
            }
            if( f ){
                cout << ans << "\n";
                return;
            }
        }
        ans[i] = c;
    }
    cout << "-1\n";
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
