#include <bits/stdc++.h>

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//#pragma GCC optimize("Ofast")
//1.0 * clock() / CLOCKS_PER_SEC

#define fi first
#define se second
#define ll long long
#define dl double long

using namespace std;

const ll NN = 1e9;
const int N = 5e3 + 7;
const int M = 22;
const ll mod = 1e9 + 7;
const ll inf = 1e18 + 7;
const dl rf = 1e-14;
const int B = sqrt(N);

void solve1()
{
    int n,m;
    cin >> n >> m;
    vector < vector < int > > v(n + 1);
    for( int i = 1; i <= m; i++ ){
        int a,b;
        cin >> a >> b;
        v[a].push_back(b);
    }
    vector < vector < int > > d(n + 1 , vector < int > (n + 1 , 0) );
    for( int i = 1; i <= n; i++ ){
        for( int j = 1; j <= n; j++ ){
            if( i > j )d[i][j] = n - i + j;
            else d[i][j] = j - i;
        }
    }
    for( int i = 1; i <= n; i++ ){
        sort( v[i].begin() , v[i].end() , [&](int j , int h){
            return d[i][j] < d[i][h];
        });
    }
    for( int i = 1; i <= n; i++ ){
        int ans = 0;
        for( int j = 1; j <= n; j++ ){
            if( v[j].empty() )continue;
            ans = max( ans , d[i][j] + n * ((int)v[j].size() - 1) + d[j][v[j][0]] );
        }
        cout << ans << " ";
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    //freopen( "input.txt" , "r" , stdin );
    //freopen( "output.txt" , "w" , stdout );

    int cghf = 1;//cin >> cghf;
    while( cghf-- ){
        solve1();
    }
}
