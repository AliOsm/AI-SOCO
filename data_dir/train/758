/*
  GL HF
*/


///scanf ("%d%d", &x, &y);
///printf("%d", &a)

#include <bits/stdc++.h>

#define fast ios_base::sync_with_stdio();   cin.tie(0);   cout.tie(0);
#define randoperation srand(time(0));
#define pii pair < int , int >
#define pll pair < ll, ll >
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define fast ios_base::sync_with_stdio();   cin.tie(0);   cout.tie(0);
#define randoperation srand(time(0));

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

const ll N = 1e6 + 8;
const ld pi = 3.14159265359;
const int INF = 1e9 + 1;
const double eps = 1e-9;

string s, str;

int x, y;

bool check_for_palindrom(string fstr){ /// return 1 if palindrome string

  if(fstr.size() == 3){

    if(fstr[0] == fstr[fstr.size() - 1]){
      return 1;
    }

    return 0;
  }

  if(fstr.size() == 1){
    return 1;
  }

  if(fstr.size() % 2 == 0){

    string ans1 = "";

    for(int i = 0; i < fstr.size() / 2; i++){
      ans1 += fstr[i];
    }

    reverse(fstr.begin(), fstr.end());

    for(int i = 0; i < ans1.size(); i++){
      if(ans1[i] != fstr[i]){
        return 0;
      }
    }

    return 1;
  }

  else{

    string ans1 = "";

    for(int i = 0; i < fstr.size() / 2; i++){
      ans1 += fstr[i];
    }

    reverse(fstr.begin(), fstr.end());

    for(int i = 0; i < ans1.size(); i++){
      if(ans1[i] != fstr[i]){
        return 0;
      }
    }

    return 1;
  }
}

int main(){

  //freopen("inevit.in", "r", stdin);
  //freopen("inevit.out", "w", stdout);

  fast
  randoperation;

  ///           ||
  ///start here \/

  cin >> s;

  if(check_for_palindrom(s)){
    cout << "YES";
    return 0;
  }

  for(int i = 0; i < s.size(); i++){
    if(s[i] != '0'){
      x = i;
      break;
    }
  }

  for(int i = s.size() - 1; i >= 0; i--){
    if(s[i] != '0'){
      y = i;
      break;
    }
  }

  for(int i = x; i <= y; i++){
    str += s[i];
  }

  if(str == ""){
    cout << "YES";
    return 0;
  }

  if(check_for_palindrom(str)){
    cout << "YES";
  }
  else{
    cout << "NO";
  }
}
