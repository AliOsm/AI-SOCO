#include <bits/stdc++.h>

// define BEGIN
#define pb push_back
#define mp make_pair

#define fi first
#define se second
// define END

// typedef BEGIN
// typedef END

using namespace std;

// const BEGIN
// const END

// variables BEGIN
vector < pair <int, int> > g[200005];

bool st[100005], u[100005], ans = 1;

vector <int> g2[100005];

int n, m, col[100005];
// variables END

void dfs (int v){
    u[v] = 1;

    for (pair <int, int> it : g[v]){
        int nxt = (col[v] ^ it.se);

        if (u[it.fi]){
            ans &= (col[it.fi] == nxt);
        }
        else {
            col[it.fi] = nxt;
            dfs (it.fi);
        }
    }
}

void solve (){
    scanf ("%d %d", &n, &m);

    for (int i = 1; i <= n; ++ i){
        scanf ("%d", &st[i]);
        st[i] ^= 1;
    }

    for (int i = 1, sz; i <= m; ++ i){
        scanf ("%d", &sz);

        for (int x; sz > 0; -- sz){
            scanf ("%d", &x);
            g2[x].pb (i);
        }
    }

    for (int i = 1, a, b; i <= n; ++ i){
        a = g2[i][0], b = g2[i][1];

        g[a].pb (mp (b, st[i]));
        g[b].pb (mp (a, st[i]));
    }

    for (int i = 1; i <= m; ++ i){
        if (!u[i]){
            dfs (i);
        }
    }

    printf (ans ? "YES\n" : "NO\n");
}

int main (){
    int tt = 1;

    for (; tt > 0; -- tt){
        solve ();
    }

    return 0;
}