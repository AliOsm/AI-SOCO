#include <bits/stdc++.h>
using namespace std;
#define forr(i, a, b) for(ll i = (a); i < (ll) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define forall(it, v) for(auto it = v.begin(); it != v.end(); ++it)
#define dforn(i, n) for(ll i = ((ll) n) - 1; i >= 0; i--)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
typedef long long ll;
const ll MAXN = 1000050;

struct node {
  ll peso, id;
  node(ll peso = 0, ll id = 0):peso(peso), id(id){}
};
bool operator < (node a, node b){
  return a.peso < b.peso;
}

ll n, k, A[MAXN], cost, ans[MAXN];
priority_queue<node> Q;

int main() {
  scanf("%lld %lld", &n, &k);
  forn(i, n){
    scanf("%lld", &A[i]);
  }
  forn(i, k){
    Q.push(node(A[i], i));
  }
  for(ll i = k; i < n + k; i++){
    if(i < n){
      Q.push(node(A[i], i));
    }
    node v = Q.top(); Q.pop();
    ans[v.id] = i;
    cost += v.peso * (i - v.id);
  }
  printf("%lld\n", cost);
  forn(i, n){
    if(i) printf(" ");
    printf("%lld", ans[i] + 1);
  }
  return 0;
}
