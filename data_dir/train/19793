/*input
3 2 2
abcdef

*/
#ifdef UncleGrandpa
#include <prettyprint.hpp>
#endif
#include <bits/stdc++.h>
using namespace std;
#define int long long
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define bit(x,y) ((x>>y)&1)
#define loop(i,l,r) for(int i=(l); i<=(r); i++)
#define rloop(i,l,r) for(int i=(l); i>=(r); i--)
#define debug(x...) {cout << "[" << #x << "] ="; _print(x);}
void _print() {cout << endl;}
template<typename T, typename... Ts> void _print(const T& value, const Ts&... values) {cout << ' ' << value; _print(values...);}
template<typename T, typename... Ts> void print(const T& value, const Ts&... values) {cout << value; _print(values...);}
// const int N =;

int n, l, k;
string s;
vector<string> ans;
signed main() {
    ios_base::sync_with_stdio(false); cin.tie(0);
    cin >> n >> l >> k;
    cin >> s;
    sort(s.begin(), s.end()); reverse(s.begin(), s.end());
    loop(i, 0, n - 1) ans.push_back("");
    int rem = k;
    loop(lev, 1, l) {
        vector<char> cur;
        loop(i, 1, rem) cur.push_back(s.back()), s.pop_back();
        rloop(i, cur.size() - 1, 0) {
            ans[k - (cur.size() - i)] += cur[i];
        }
        rloop(i, cur.size() - 1, 0) {
            if (cur[i] != cur.back()) {
                rem = cur.size() - 1 - i;
                break;
            }
        }
    }
    for (auto &it : ans) {
        while (it.size() < l) it += s.back(), s.pop_back();
    }
    for (auto it : ans) cout << it << endl;
}