#include<iostream>
#include<stdio.h>
#include<cassert>
#include<cstring>
#include<time.h>
#include<cstdlib>
#include<cmath>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
#define forit(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
double p[222];
int a[222];
double dp[222][222][444];
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    int n,l,k; cin >> n >> l >> k;
    for (int i = 0; i < n; i++) {
        cin >> p[i]; p[i] /= 100.0;
    }
    for (int i = 0; i < n; i++) {
        cin >> a[i];
    }
    dp[0][0][222] = 1.0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            for (int k = 0; k < 444; k++) if (dp[i][j][k] != 0.0) {
                dp[i + 1][j + 1][min(k + a[i],443)] += dp[i][j][k] * p[i];
                dp[i + 1][j][k] += dp[i][j][k] * (1.0 - p[i]);
            }
        }
    }
    double res = 0.0;
    for (int i = l; i <= n; i++) {
        for (int j = 222 - k; j < 444; j++) {
            res += dp[n][i][j];
        }
    }
    printf("%.12lf\n",res);
    return 0;
}
