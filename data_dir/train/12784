#include<bits/stdc++.h>
using namespace std;
#define MOD           100000000019
#define C             100000030111
#define p2           1000159
#define p1           1000003
#define int          long long 
#define D            double
#define S            second
#define F            first
#define pb           push_back
#define ff           fflush(stdout)
#define ppb          pop_back()
#define B(c)         (c).begin()
#define E(c)         (c).end()
#define all(c)       (c).begin(),(c).end()
#define rall(c)      (c).rbegin(),(c).rend()
#define SORT(v)       sort(ALL(v))  
#define DB            cerr<<"move"<<endl;
#define DV(x)        cerr<<x<<endl;
#define inputarr(a,n)  for(int i=0;i<n;++i) cin>>a[i]
#define printarr(a,n)  for(int i=0;i<n;++i) cout<<a[i]<<" "
#define lb           lower_bound
#define ub           upper_bound
#define si(c)        (int)((c).size())
#define gcd(a,b)      __gcd(a,b)
#define lcm(a,b)     (a*(b/gcd(a,b)))
#define sqr(a)       ((a) * (a))
#define optimize()   ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef pair<int,int>                         pii;
typedef pair<int,pii>                         pipii;
typedef vector<vector<int> >                  vvi;
typedef map<int,int>                          mp;
typedef map<pii,int>                          mpii;
typedef map<int,pii>                          mipi;
typedef map<string,int>                       msi;
typedef priority_queue<int, vector<int>, greater<int> > pq;
typedef vector<int>::iterator                  vit;
typedef set<int>::iterator                     sit;
typedef multiset<int>                          ms;
typedef map<int,int>::iterator                 mit;
typedef map<pii,int>::iterator                 mpiit;
typedef map<int,pii>::iterator                 mipit;
typedef multiset<int>::iterator                msit;
inline  bool checkBit(int n, int i) { return n&((int)1<<i); }
inline  int setBit(int n, int i) { return n|((int)1<<i);; }
inline  int resetBit(int n, int i) { return n&(~((int)1<<i)); }
inline  bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
inline  bool isLeapYear(int year) { return (year%400==0) || (year%4==0 && year%100!=0); }
inline  void normal(int &a) { a = (a+MOD)%MOD; }
inline  int modMul(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a*b)%MOD; }
inline  int modAdd(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); return (a+b)%MOD; }
inline  int modSub(int a, int b) { a %= MOD, b %= MOD; normal(a), normal(b); a -= b; normal(a); return a; }
inline  int modPow(int b, int p) { int r = 1; while(p) { if(p&1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }
inline  int modInv(int a) { return modPow(a, MOD-2); }
inline  int modDiv(int a,int b) { return modMul(a, modInv(b)); }
const int N=5e5+1;
int b_l[N][25];
//vector<int>v;
//int prime[N];
/*
int ans=0;
int fact(int n){
	if(n==0)return 0;
	return (n==1?1:(n*fact(n-1))%C);
}
void P(){
for(int i=2;i<=N;i++){
	    if(!prime[i]){
		for(int j=2*i;j<=N;j+=i){
		prime[j]=i;}
		}
	}
}/*
int ctoi(char c){
	return (int)(c-'0');
}*/
int query(int l,int r){
	int ans=0;
	bool flag=0;
	for(int i=24;i>=0;i--){
		if(b_l[l][i]<r){
	       ans+=((int)1<<i);
	       l=b_l[l][i];
		}
	}
	return (b_l[l][0]>=r?ans+1:-1);
}
void solve(){
   int n,q;cin>>n>>q;
   for(int i=0;i<n;i++){
   	  int l,r;cin>>l>>r;
   	  b_l[l][0]=max(b_l[l][0],r);
   }
   for(int i=1;i<N;i++){
   	  if(b_l[i][0]==0)b_l[i][0]=i;
   	  b_l[i][0]=max(b_l[i][0],b_l[i-1][0]);
   }
   for(int i=1;i<=24;i++){
   	  for(int j=0;j<N;j++){
   	  	  b_l[j][i]=b_l[b_l[j][i-1]][i-1];
	   }
   }
   while(q--){
   	  int x,y;
   	  cin>>x>>y;
   	  cout<<query(x,y)<<endl;
   }
}
signed main(){   
    optimize();
    //initialize();
	int t=1;
	//P();
   // cin>>t;
	while(t--){
		solve();
	}
}