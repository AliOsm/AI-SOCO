#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define x first
#define y second
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define PI (atan(1)*4)
#define mp make_pair
using namespace std;
const int maxn = 1000;
string arr[maxn];
int sp[10], n, m, p, ans[10];
int dist[maxn][maxn];
queue< pair<int, int> > q;
char toChar(int x) {
	return '0' + x;
}

int toInt(char x) {
	return x - '0';
}

int main()
{
	fastread;
	cin >> n >> m >> p;
	for (int i = 1; i <= p; i++)
		cin >> sp[i];
	for (int i = 0; i < n; i++)
		cin >> arr[i];
	for (int i = 1; i <= p; i++) {
		for (int u = 0; u < n; u++) {
			for (int v = 0; v < m; v++) {
				if (arr[u][v] == toChar(i)) {
					q.push({u, v});
				}
			}
		}
	}
	while (!q.empty()) {
		pair<int, int> cur = q.front();
		q.pop();
		queue<pair<int, int>> tq;
		tq.push(cur);
		dist[cur.x][cur.y] = 0;
		int pows = sp[toInt(arr[cur.x][cur.y])];
		while (!q.empty()) {
			pair<int, int> nxt = q.front();
			if (arr[nxt.x][nxt.y] == arr[cur.x][cur.y]) {
				tq.push(nxt);
				dist[nxt.x][nxt.y] = 0;
				q.pop();
			} else {
				break;
			}
		}
		while (!tq.empty()) {
			pair<int, int> tcur = tq.front();
			tq.pop();
			if (dist[tcur.x][tcur.y] == pows)
				continue;
			for (int x = -1; x <= 1; x++) {
				for (int y = -1; y <= 1; y++) {
					if (abs(x) == abs(y))
						continue;
					if ((x + tcur.x) >= 0 && (x + tcur.x) < n && (y + tcur.y) >= 0 && (y + tcur.y) < m && arr[x + tcur.x][y + tcur.y] == '.') {
						arr[x + tcur.x][y + tcur.y] = arr[tcur.x][tcur.y];
						dist[x + tcur.x][y + tcur.y] = dist[tcur.x][tcur.y] + 1;
						tq.push({x + tcur.x, y + tcur.y});
						// cout << "pushing" << x + tcur.x << " " << y + tcur.y << endl;
						q.push({x + tcur.x, y + tcur.y});
					}
				}
			}

		}
	}

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (arr[i][j] == '.' || arr[i][j] == '#')
				continue;
			ans[toInt(arr[i][j])]++;

		}
	}
	for (int i = 1; i <= p; i++)
		cout << ans[i] << " " ;
	return 0;
}