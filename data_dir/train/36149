#include <functional>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <assert.h>
#include <bitset>
#include <string>
#include <cstdio>
#include <math.h>
#include <complex>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <ctime>
#include <set>
#include <bitset>
#include <map>
using namespace std;

#define int64 long long
#define mp make_pair

#ifdef _DEBUG
const int N = 310;
#else
const int N = 3000010;
#endif

const int mx = 10000000;

int n;
string s, t;
bool used[26][26];
bool marked[26];
vector <pair<char, char> > ans;

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	cin >> s;
	cin >> t;
	n = s.length();
	memset(used, false, sizeof(used));
	memset(marked, false, sizeof(marked));
	for (int i = 0; i < n; i++)
	{
		char c1 = s[i];
		char c2 = t[i];
		if (c1 > c2) swap(c1, c2);
		int k1 = c1 - 'a';
		int k2 = c2 - 'a';
		if (c1 == c2) continue;
		if (marked[k1] ^ marked[k2])
		{
			cout << -1;
			return 0;
		}
		if (!marked[k1])
		{
			marked[k1] = true;
			marked[k2] = true;
			used[k1][k2] = true;
			ans.push_back(mp(c1, c2));
		}
		else
		{
			if (!used[k1][k2])
			{
				cout << -1;
				return 0;
			}
		}
	}
	for (int i = 0; i < n; i++)
		if (s[i] == t[i])
		{
			int k = s[i] - 'a';
			if (marked[k])
			{
				cout << -1;
				return 0;
			}
		}
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i++) cout << ans[i].first << " " << ans[i].second << endl;
	return 0;
}