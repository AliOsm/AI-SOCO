#include <stdio.h>
#include <math.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>
#include <stack>
#include <queue>
#include <set>
#include <list>

using namespace std;

#define fi first
#define se second
#define long long long
typedef pair<long,long> ll;

vector<int> vec[33];
ll ans[33];
long tim = 40;
bool visited[33];
bool used[33][4];
long mox[] = {0,0,-1,1}, moy[] = {-1,1,0,0};


void dfs(int u)
{
	// printf("%d %d %d %d %d\n", u, used[u][0], used[u][1], used[u][2], used[u][3]);
	visited[u] = 1;
	int use = 0;
	for(int v : vec[u])
	{
		if(!visited[v])
		{
			while(used[u][use])	use++;
			ans[v].fi = ans[u].fi + (1LL<<(tim-1))*mox[use];
			ans[v].se = ans[u].se + (1LL<<(tim-1))*moy[use];
			tim--;
			used[u][use] = 1;
			if(use == 0) used[v][1] = 1;
			if(use == 1) used[v][0] = 1;
			if(use == 2) used[v][3] = 1;
			if(use == 3) used[v][2] = 1;
			dfs(v);
		}
	}
}

int main()
{
    // ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	// freopen("input.in", "r", stdin);
	int n; scanf("%d", &n);
	for(int i = 1; i < n; i++)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		vec[u].push_back(v);
		vec[v].push_back(u);
	}
	for(int i = 1; i < n; i++)
	{
		if(vec[i].size() > 4)
		{
			printf("NO\n");
			return 0;
		}
	}
	ans[1] = {0,0};
	dfs(1);

	printf("YES\n");
	for(int i = 1; i <= n; i++) printf("%lld %lld\n", ans[i].fi, ans[i].se);
}	










