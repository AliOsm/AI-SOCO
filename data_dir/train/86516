#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cstdio>
#include <stdio.h>
#include <fstream>
#include <map>
#include <set>
#include <cstdlib>
#include <queue>
#include <math.h>
#include <cmath>
#include <cstring>
#include <stdlib.h>
#include <stack>
#include <iomanip>
#define ll long long
#define endl '\n'
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pull pair<ull,ull>
ll MOD=1000000007;
ll inf=1e18;
using namespace std;
vector<int> A;
map<int,int> Pos,V;
vector< pii > Ans;
int prv[100091];
bool C[100091];
vector<int> P;
void Sieve()
{
    int i,j;
    for(i=0;i<100051;i++)
    {
        C[i]=true;
    }
    for(i=2;i<100051;i++)
    {
        if(C[i]==false){continue;}
        P.pb(i);
        j=2;
        while(i*j<100051)
        {
            C[i*j]=false;
            j++;
        }
    }
    int ind=1;
    for(i=2;i<100001;i++)
    {
        if(P[ind]>i){prv[i]=P[ind-1];}
        else{prv[i]=P[ind];ind++;}
    }
}




int main()
{
    int n,i,x,pos,d,j,y;
    Sieve();
    cin>>n;
    
    for(i=0;i<n;i++)
    {
        cin>>x;
        A.pb(x);
        Pos[x]=i;
        V[i]=x;
    }
    
    
    sort(A.begin(),A.end());
    
    
    for(i=0;i<n;i++)
    {
        x=A[i];
        pos=Pos[x];
        
        d=pos-i;
        if(d<0){d*=-1;}
        d++;
        //cout<<x<<":\n";
        while(pos!=i)
        {
            //cout<<pos<<" "<<i<<endl;
            d=pos-i;if(d<0){d*=-1;}d++;
            if(pos<i)
            {
                Ans.pb(mp(pos,pos+prv[d]-1));
                y=V[pos+prv[d]-1];
                Pos[x]=pos+prv[d]-1;
                Pos[y]=pos;
                V[pos+prv[d]-1]=x;
                V[pos]=y;
                pos+=prv[d]-1;
            }
            else
            {
                Ans.pb(mp(pos-prv[d]+1,pos));
                y=V[pos-prv[d]+1];
                Pos[x]=pos-prv[d]+1;
                Pos[y]=pos;
                V[pos-prv[d]+1]=x;
                V[pos]=y;
                pos-=prv[d]-1;
            }
        }
        //for(j=0;j<n;j++)
        //{
        //  cout<<A[j]<<" "<<Pos[A[j]]<<endl;
        //}
        //cout<<"----------\n";
    }
    
    cout<<Ans.size()<<endl;
    
    for(i=0;i<Ans.size();i++)
    {
        cout<<Ans[i].first+1<<" "<<Ans[i].second+1<<endl;
    }
    
    return 0;
} 