#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
const ll mod=998244353;
const ll inf=(1ll<<61);
const int SQ=600;
const int MX=1e4+4;
int n,m,a[20][MX],dp[1<<17][17][17],adj[20][20],up[20][20];
int DP(int mask,int x,int y){
//    cout<<mask<<" "<<x<<" "<<y<<endl;
    if(mask+1==(1<<n))return up[x][y];
    int &ret=dp[mask][x][y];if(ret!=-1)return ret;
    ret=0;
    for(int i=0;i<n;i++){
        if((mask&(1<<i)))continue;
        ret=max(ret,min(adj[i][x],DP(mask|(1<<i),i,y)));
    }
    return ret;
}
int main(){
    cin>>n>>m;
    for(int i=0;i<n;i++)for(int j=0;j<m;j++)scanf("%d",&a[i][j]);
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            adj[i][j]=up[i][j]=1e9+2;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            for(int o=0;o<m;o++){
                adj[i][j]=min(adj[i][j],abs(a[i][o]-a[j][o]));
                if(o+1<m)up[i][j]=min(up[i][j],abs(a[i][o]-a[j][o+1]));
            }
        }
    }
    memset(dp,-1,sizeof(dp));
    int ans=0;
    for(int i=0;i<n;i++){
        ans=max(ans,DP((1<<i),i,i));
    }
    cout<<ans<<endl;
}
