#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

const int MAX = 26;
const int INF = 0x3F3F3F3F;
int dis[MAX][MAX];

int main() {
	ios_base::sync_with_stdio(false);

	string s, t;
	cin >> s >> t;

	if(s.size() != t.size()) {
		cout << -1 << '\n';
		return 0;
	}

	memset(dis, 0x3F, sizeof dis);

	int n;
	cin >> n;
	fori(i, 0, n) {
		char u, v;
		int w;
		cin >> u >> v >> w;
		int mu = u - 'a', mv = v - 'a';
		dis[mu][mv] = min(dis[mu][mv], w);
	}
	
	fori(i, 0, 26) {
		dis[i][i] = 0;
	}

	fori(k, 0, 26) {
		fori(i, 0, 26) {
			fori(j, 0, 26) {
				dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);
			}
		}
	}

	int ans = 0;
	fori(i, 0, s.size()) {
		int best = INF;
		char letter = '$';
		fori(j, 0, 26) {
			int sv = s[i] - 'a';
			int st = t[i] - 'a';
			if(dis[sv][j] < INF && dis[st][j] < INF) {
				if(best > dis[sv][j] + dis[st][j]) {
					best = dis[sv][j] + dis[st][j];
					letter = 'a' + j;
				}
			}
		}
		if(best == INF) {
			cout << -1 << '\n';
			return 0;
		}
		ans += best;
		s[i] = t[i] = letter;
	}

	cout << ans << '\n';
	cout << s << '\n';

	return 0;
}

