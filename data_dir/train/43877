
//template by murugappan....Copied from chamow :p

#include<bits/stdc++.h>
using namespace std;

#define ll int
#define ld long double
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define priq(i,comp) priority_queue( i, vector< i >,comp)
template<class t>
t lcm(t a,t b)
{
    return ((a*b)/__gcd(a,b));
}
#define fastread ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

//end of template
const ll maxn=400;
ll arr[maxn][maxn];
ll n,m;
void transpose()
{
    for(ll i=0;i<maxn;i++)
    {
        for(ll j=0;j<=i;j++)
        {
            swap(arr[i][j],arr[j][i]);
        }
    }
}
bool check()
{
    bool can=true;
    ll freq[4],lv[4];
    memset(freq,0,sizeof(freq));
    for(ll i=0;i<4;i++)
        lv[i]=-1;
    for(ll i=0;i<n;i++)
    {
        for(ll j=1;j<m;j++)
        {
            if(arr[i][j]!=arr[i][j-1])
                can=false;

        }
        freq[arr[i][0]]++;
        if(lv[arr[i][0]]!=-1 && lv[arr[i][0]]!=(i-1))
            can=false;
        else
            lv[arr[i][0]]=i;
    }
    bool so=true;
    for(ll i=2;i<4;i++)
    {
        if(freq[i]!=freq[i-1])
            so=false;
    }
    return (can && so);
}
map<char,ll> myMap;
int main()
{
    /*
        assert(freopen("input.txt","r",stdin));
        assert(freopen("output.txt","w",stdout));
    */
    fastread;
    myMap['R']=1;
    myMap['G']=2;
    myMap['B']=3;
    cin>>n>>m;
    char temp;
    for(ll i=0;i<n;i++)
    {
        for(ll j=0;j<m;j++)
        {
            cin>>temp;
            arr[i][j]=myMap[temp];
        }
    }
    if(check())
        cout<<"YES";
    else
    {

        transpose();
        swap(n,m);
        if(check())
        {
            cout<<"YES";

        }
        else
            cout<<"NO";
    }
    return 0;
}

