#include<bits/stdc++.h>
#define In_the_name_of_allah_the_merciful ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define Alhamdulillah return 0;
#define pb push_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
#define ins insert 
#define fi first 
#define se second 
#define pi pair<ll,ll>
#define all(v) v.begin(),v.end()
#define sz(v) ((ll)((v).size()));
#define reset(v,val) memset(v,val,sizeof(v));
#define rep(i, x, n) for ( i = x; i<=(ll)(n); i++)
#define irep(i, x, n) for( i = x; i<(ll)(n); i++)
#define _for(i, x, n) for ( i =x; i>=(ll)(n); i--)
#define _ifor(i, x, n) for( i =x; i>(ll)(n); i--)

using namespace std;
typedef  long long int   ll;
const long long int mod=1e9+7;
ll m,k,n,a[500005],vis[500005],res=0,dp[500005][5],dp2[500005],ans=0,sm=0,l,r;
set<ll>st,st1,st2;
string s1="",s;
vector<ll>v,vnode[200005],v1,v2,v3;
vector< pi>vv;
vector< pair< ll,pi> > vvv;
priority_queue <ll> pq;
map< pi , ll >red;
ll xa,xb,xc,ya,yb,yc;

ll countDivisibles(ll A, ll B, ll M) 
{   if(B<0)return 0;
    if (A % M == 0) 
        return (B / M) - (A / M) + 1; 
    return (B / M) - (A / M); 
} 

ll solve(ll i,ll md){
	if(i>n){
		return (md==0);
	}
	ll &ret=dp[i][md];
	if(ret!=-1)return ret;
	ll choix=0;
	for(ll j=0;j<=2;j++){
		ll nb=0;
		if(j==0){
			nb=countDivisibles(l,r,3);
		}
		else if(j==1){
			ll x,y;
			x=l;y=r;
			nb=countDivisibles(x-1,y-1,3);
		}
		else if(j==2){
			ll x,y;
			x=l;y=r;
			x=max(y=(0),l-2);
			y=r-2;
		nb=countDivisibles(x,y,3);
		}
		choix+=nb*solve(i+1,(md+j)%3);
		choix%=mod;
	}
	return ret=choix;
}

int main(){
In_the_name_of_allah_the_merciful

	ll i=0,x,y,j=0,z=0,mx=0,nb0=0,nb=0,nbmax=0,nbinf=0,nb2=0,mm=5e9,idx=0,ok=0,negatif=0,positif=0,l1,r1;
	set<ll> ::iterator it,it1,it2;
	char c;
     //freopen("a.txt","r",stdin);  
    cin>>n>>l>>r;
    memset(dp,-1,sizeof(dp));
    res=solve(1,0);
    cout<<res<<endl;
Alhamdulillah
 }