/*
    STARK_BOY
*/
#include <bits/stdc++.h>
#include <fstream>
using namespace std;
#define rep(i,a,b) for(ll i=a;i<b;i++)
#define repe(i,a,b) for(ll i=a;i<=b;i++)
#define bac(i,a,b) for(ll i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define F first
#define S second
typedef long long ll;
typedef vector< ll > vi;
typedef vector<pair<ll,ll> > vpii;
typedef pair<ll,ll> pii;
#define all(c) c.begin(),c.end()
#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define setbitc(x) __builtin_popcount(x)
#define init(x,a) memset(x,a,sizeof(x))
#define INF 1000000000  
#define MOD 1000000007
#define M 998244353
#define N 200005
# define PI           3.14159265358979323846  /* pi */
mt19937 rng32(chrono::steady_clock::now().time_since_epoch().count());

ll modExpo(ll x,ll n)
{
    if(n==0)
        return 1;
    else if(n%2 == 0)        //n is even
        return modExpo((x*x)%MOD,n/2);
    else                             //n is odd
        
        return (x*modExpo((x*x)%MOD,(n-1)/2))%MOD;

}
ll modInverse(ll n) 
{ 
    return modExpo(n,MOD-2); 
}

//Variables Start
ll n,m,k,ar[N],vis[N];
vi adj[N];
string s;
//Variables End

void dfs(ll ver)
{
    vis[ver]=1;
    for(auto i:adj[ver])
    {
        if(!vis[i])dfs(i);
    }
}
int main()
{
    ios
    int ti=1;
    //cin>>ti;
    while(ti--)
    {
        cin>>n>>m>>k;
        rep(i,0,m)
        {
            ll x,y;
            cin>>x>>y;
            if(x!=1)adj[y].pb(x);
            if(y!=1)adj[x].pb(y);
            
        }
        ll cnt=0;
        set<ll> se;
        queue<ll> q;
        for(auto i:adj[1])
        {
            //cout<<i<<" ";
            if(!vis[i]){se.insert(i);cnt++;dfs(i);}
        }
        if(k<cnt || k>adj[1].size()){cout<<"NO";return 0;}
        init(vis,0);
        vis[1]=1;
        ll l=0;
        while(se.size()!=k)
        {
            se.insert(adj[1][l]);
            l++;
        }
        cout<<"YES"<<endl;
        for(auto i:se){q.push(i);vis[i]=1;cout<<"1 "<<i<<endl;}
        
        while(!q.empty())
        {
            ll pos=q.front();
            q.pop();
            for(auto i:adj[pos])
            if(!vis[i])
            {
                cout<<pos<<" "<<i<<endl;
                vis[i]=1;
                q.push(i);
            }
        }


    }
    return 0;
        
}