#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
#define pii pair<int, int>
#define pll pair<ll, ll>
const int mod = (1e9) + 7;
const double eps = 1e-6;
const int siz = 15e6 + 5, siz2 = 3e5 + 5, siz3 = 5032108;
int n, arr[siz], best, val[siz2], g=-1, mx, sp[siz];
int gcd(int a, int b) {
	return b == 0 ? a : gcd(b, a%b);
}
void sieve() {
	for (int i = 2; i <= mx; i++) {
		sp[i] = i;
	}
	for (int i = 2; i*i <= mx; i++) {
		if (sp[i]!=i) {
			continue;
		}
		for (int j = i*i; j <= mx; j += i) {
			sp[j] = min(sp[j], i);
		}
	}
}
int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &val[i]);
		g = g == -1 ? val[i] : gcd(g, val[i]);
	}
	for (int i = 0; i < n; i++) {
		val[i] /= g;
		mx = max(mx, val[i]);
	}
	sieve();
	for (int i = 0; i < n; i++) {
		int cur = val[i], lst = -1;
		while (cur != 1) {
			int p = sp[cur];
			if (p != lst) {
				arr[p]++;
				best = max(best, arr[p]);
			}
			lst = p;
			cur /= p;
		}
	}
	printf("%d\n", best == 0 ? -1 : n - best);
	return 0;
}