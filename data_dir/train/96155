#include <bits/stdc++.h>
using namespace std;

int f[5005][5005], dp[5005][5005];

int fix(long long a) {
    return (a + 1000000007) % 1000000007;
}

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n, k;
    string s, curs;
    cin >> n >> s;
    s = "0" + s;
    for(int i = 0; i < 5005; i++)
        dp[i][n + 1] = -1;
    for(int i = n; i > 0; i--)
        for(int j = i - 1; j > 0; j--) {
            if(s[j] > s[i])
                dp[j][i] = -1;
            else if(s[j] < s[i])
                dp[j][i] = 0;
            else if(dp[j + 1][i + 1] == -1)
                dp[j][i] = -1;
            else
                dp[j][i] = dp[j + 1][i + 1] + 1;
        }
    f[0][0] = 1;
    for(int i = 1; i <= n; i++) {
        f[i][0] = 0;
        f[i][1] = 1;
        for(int j = 2; j <= i; j++) {
            if(s[j] == '0') {
                f[i][j] = f[i][j - 1];
                continue;
            }
            if(i > (j - 1) * 2)
                f[i][j] = fix(f[i][j - 1] + f[j - 1][j - 1]);
            else {
                k = j * 2 - i - 1;
                if(dp[k][j] > -1 && dp[k][j] < j - k)
                    f[i][j] = fix(f[i][j - 1] + fix(f[j - 1][j - 1] - f[j - 1][k - 1]));
                else
                    f[i][j] = fix(f[i][j - 1] + fix(f[j - 1][j - 1] - f[j - 1][k]));
            }
        }
    }
    cout << f[n][n] << "\n";
}
