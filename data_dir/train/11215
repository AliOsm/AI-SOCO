#include<bits/stdc++.h>
#define y1 niljhkdfj
using namespace std;
const int N = 1e6 + 5;
int n, type[N], l[N], r[N];
bool us[N], dp[N];

void dfs(int x){
    if (type[x] == 2){
        dfs(l[x]);
        dfs(r[x]);
        dp[x] = dp[l[x]] & dp[r[x]];
    }
    if (type[x] == 3){
        dfs(l[x]);
        dfs(r[x]);
        dp[x] = dp[l[x]] | dp[r[x]];
    }
    if (type[x] == 4){
        dfs(l[x]);
        dfs(r[x]);
        dp[x] = dp[l[x]] ^ dp[r[x]];
    }
    if (type[x] == 5){
        dfs(l[x]);
        dp[x] = !dp[l[x]];
    }
}

void get_ans(int x){
    if (type[x] == 1){
        us[x] = 1;
        return;
    }
    if (type[x] == 5){
        get_ans(l[x]);
        return;
    }
    if (type[x] == 2){
        if (dp[l[x]] == 1 && dp[r[x]] == 1){
            get_ans(l[x]);
            get_ans(r[x]);
        }
        if (dp[l[x]] == 1 && dp[r[x]] == 0)get_ans(r[x]);
        if (dp[l[x]] == 0 && dp[r[x]] == 1)get_ans(l[x]);
    }
    if (type[x] == 3){
        if (dp[l[x]] == 0 && dp[r[x]] == 0){
            get_ans(l[x]);
            get_ans(r[x]);
        }
        if (dp[l[x]] == 1 && dp[r[x]] == 0)get_ans(l[x]);
        if (dp[l[x]] == 0 && dp[r[x]] == 1)get_ans(r[x]);
    }
    if (type[x] == 4){
        get_ans(l[x]);
        get_ans(r[x]);
    }
}

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    cin >>n;
    for (int i = 1; i <= n; ++i){
        string s;
        cin >>s;
        if (s == "IN"){
            type[i] = 1;
            cin >>dp[i];
        }
        if (s == "AND"){
            type[i] = 2;
            cin >>l[i]>>r[i];
        }
        if (s == "OR"){
            type[i] = 3;
            cin >>l[i]>>r[i];
        }
        if (s == "XOR"){
            type[i] = 4;
            cin >>l[i]>>r[i];
        }
        if (s == "NOT"){
            type[i] = 5;
            cin >>l[i];
        }
    }
    dfs(1);
    get_ans(1);
    for (int i = 1; i <= n; ++i){
        if (type[i] == 1){
            if (us[i])cout <<(!dp[1]);else cout <<dp[1];
        }
    }
}
