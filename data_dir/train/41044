//Caution to the wind,complete freedom
#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
#define MOD 1000000007
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define irr acos(-1.0)
#define MAX 2000003
#define MAXA 100003
#define sl(n) scanf("%lld",&n)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
int last[100001];
int dp[100005];
int a[100005];
int chk[100005];
vector<int> prim;
void sieve()
{
    int i,j;
    for(i=2;i<=100000;i++)
    {
        if(chk[i]==true)
            continue;
            prim.push_back(i);
        for(j=2*i;j<=100000;j+=i)
            chk[j]=1;
    }

}
int main()
{
    int i,j,n;
    cin>>n;
    sieve();
    for(j=0;j<n;j++)
        cin>>a[j];
    dp[0]=1;
    int k=a[0];
    memset(last,-1,sizeof(last));
    for(i=0;i<prim.size();i++)
    {
        if(k%prim[i]==0)
            last[prim[i]]=0;
    }
    for(j=1;j<n;j++)
    {
        int k=a[j];
        dp[j]=1;
        for(i=0;i<prim.size();i++)
        {
            if(prim[i]>sqrt(k))
                break;
            if(k%prim[i]==0)
            {
                if(last[prim[i]]==-1)
                   last[prim[i]]=j;
                else
                {
                    dp[j]=max(dp[j],dp[last[prim[i]]]+1);
                    last[prim[i]]=j;
                }
                while(k%prim[i]==0)k/=prim[i];
            }

        }
        if(k!=1)
            {
                if(last[k]==-1)
                    last[k]=j;
                else
                dp[j]=max(dp[j],dp[last[k]]+1);
                last[k]=j;
            }

    }
    int ans=-1;
    for(j=0;j<n;j++)
        ans=max(ans,dp[j]);
    cout<<ans;
    return 0;
}
