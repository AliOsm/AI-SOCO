#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define OO 4e18
#define oo 2e9
#define yalla ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define FILES freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define sz  100005
#define re return
#define F first
#define S second
#define pll pair<ll,ll>
#define mod  998244353
#define pi acos(-1)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int,null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
template<class T> using ordered_class_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
const int N=105;
ll t,n,m;
ll grid[N][N],dp[N][N];
///
void init()
{for(int i=0;i<=n;i++)
 for(int y=0;y<=m;y++)
  dp[i][y]=-1;
}
///
ll solve(int i,int j,ll VAL_mid,int state)
{
 if(grid[i][j]<VAL_mid)
   re OO;
 if((i==n-1&&j==m-1&&state==0) ||(!i&&!j&&state==1) )
   re (grid[i][j]-VAL_mid);
 if(dp[i][j]!=-1)
   re dp[i][j];
 ///
 ll fi=OO,se=OO,diff=grid[i][j]-VAL_mid;
 if(!state)///down
 {if(i+1<n)
   fi=solve(i+1,j,VAL_mid+1,0)+diff;
  if(j+1<m)
   se=solve(i,j+1,VAL_mid+1,0)+diff;
 }
 else///up
 {if(i-1>=0)
   fi=solve(i-1,j,VAL_mid-1,1)+diff;
  if(j-1>=0)
   se=solve(i,j-1,VAL_mid-1,1)+diff;
 }
 ///
 re dp[i][j]=min(fi,se);
}
int main()
{yalla;
 cin>>t;
 while(t--)
 {cin>>n>>m;
  ll ans=OO;
  for(int i=0;i<n;i++)
   {for(int y=0;y<m;y++)
     cin>>grid[i][y];
   }
  ///
  for(int i=0;i<n;i++)
  {for(int y=0;y<m;y++)
    {init();
     ///
     ll fi=solve(i,y,grid[i][y],0);
     dp[i][y]=-1;
     ll se=solve(i,y,grid[i][y],1);
     ans=min(ans,fi+se);
    }
  }
  cout<<ans<<endl;
 }
 re 0;
}