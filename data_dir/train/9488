/*jai mata di
 * let's rock*/
#include <bits/stdc++.h>
using namespace std;
const int N=200004;
const int Inf=1e9+7;
int a[N],h[N],mp[N];
int dp[N][4];
int m;
vector<int>vec;
int dfs(int i,int j)
{
	if(i==m) return 0;
	if(dp[i][j]!=-1) return dp[i][j];
	int res=Inf;
	if(j==0)
	{
		res=min(res,1+dfs(i+1,0));
		res=min(res,1+dfs(i+1,1));
		res=min(res,1+dfs(i+1,2));
	}
	else if(j==1)
	{
		if(vec[i-1]==vec[i]-1)
		   res=min(res,dfs(i+1,0));
		else res=min(res,1+dfs(i+1,0));
		res=min(res,1+dfs(i+1,1));
		res=min(res,1+dfs(i+1,2));   
	}
	else
	{
		if(vec[i-1]+1==vec[i]-1)
		    res=min(res,dfs(i+1,0));
		else res=min(res,1+dfs(i+1,0)); 
		if(vec[i-1]+1==vec[i])
		    res=min(res,dfs(i+1,1));
		else res=min(res,1+dfs(i+1,1));
		res=min(res,1+dfs(i+1,2));       
	}
	dp[i][j]=res;
	return res;
}
int main()
{
	int n;
	scanf("%d",&n);
	int i;
	memset(dp,-1,sizeof(dp));
	vec.push_back(0);
	for(i=1;i<=n;i++) 
	{
		scanf("%d",&a[i]);
		if(mp[a[i]]==0)
		  vec.push_back(a[i]);
		mp[a[i]]=1;  
	}
	sort(vec.begin(),vec.end());
	sort(a+1,a+n+1);
	m=vec.size();
    int min_ans=dfs(1,0);
    int mx_ans=0;
    for(i=1;i<=n;i++)
    {
		if(h[a[i]-1]==0)
		{
			mx_ans++;
			h[a[i]-1]++;
		}
		else if(h[a[i]]==0)
		{
			mx_ans++;
			h[a[i]]=1;
		}
		else if(h[a[i]+1]==0)
		{
			mx_ans++;
			h[a[i]+1]++;
		}
	}
	printf("%d %d\n",min_ans,mx_ans);
	return 0;
    
}
