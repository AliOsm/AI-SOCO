#include <bits/stdc++.h>
using namespace std;
mt19937 rng(std::chrono::system_clock::now().time_since_epoch().count());
const int N = 1e4;
vector<long long>v,temp,temp1;
int freq[N];
long long ans = 1;
int main(){
// 	freopen("input.txt","r",stdin);
	int n;
	scanf("%d",&n);
	v.resize(n);
	while(n--)scanf("%lld",&v[n]);
	shuffle(v.begin(),v.end(),rng);
	for(int i = 0;i < min(13,(int)v.size());i++){
		temp.clear();
		for(auto j : v)temp.push_back(__gcd(j,v[i]));
		sort(temp.begin(),temp.end());
		temp1 = temp;
		temp1.resize(unique(temp1.begin(),temp1.end()) - temp1.begin());
		int cur = 0;
		for(auto j : temp){
			if(temp1[cur] != j)cur++;
			freq[cur]++;
		}
		for(int j = 0;j < temp1.size();j++){
			for(int k = j + 1;k < temp1.size();k++)
				if(temp1[k]%temp1[j] == 0)
					freq[j]+=freq[k];
			if(2*freq[j] >= v.size())
				ans = max(ans,temp1[j]);
		}
		for(int j = 0;j < temp1.size();j++)freq[j] = 0;
	}
	printf("%lld\n",ans);
}