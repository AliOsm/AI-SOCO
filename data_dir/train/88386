#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;

#define FORN(i, n) for (int (i) = 0; (i) < (n); ++(i))
#define FORN1(i, n) for (int (i) = (n) - 1; (i) >= 0; --(i))
#define FORNa(i, a, n) for (int (i) = (a); (i) < (n); ++(i))
#define PB(a, x) a.push_back(x)
#define MK(a, b) make_pair(a, b)

const int MOD = (1e9 + 7);
const int INF = (1e9 + 7);


int abssum(const vector<int> &w, int a, int b) {
    vector<int> tmp;
    FORN(i, w.size()) {
        if (i != a && i != b) {
            tmp.push_back(w[i]);
        }
    }
    int sum = 0;
    int i = 0;
    while (i < tmp.size()) {
        sum += tmp[i + 1] - tmp[i];
        i += 2;
    }
    return sum;
}

void solve() {
    int n = 0;
    cin >> n;
    vector<int> w(2 * n);
    FORN(i, 2 * n) {
        cin >> w[i];
    }
    sort(w.begin(), w.end());

    int ans = INF;

    FORN(i, 2 * n) {
        FORNa(j, i + 1, 2 * n) {
            ans = min(ans, abssum(w, i, j));
        }
    }
    cout << ans << endl;
}

int main() {
    ios_base::sync_with_stdio(false);

    #ifdef MY_DEBUG
    int t = 0;
    cin >> t;
    while (t--) {
        solve();
    }
    #else
        solve();
    #endif

    return 0;
}
