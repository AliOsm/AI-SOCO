#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <sstream>
#include <stack>
#include <cassert>
#include <ctime>
#include <cmath>
#include <queue>
#include <ctime>
#include <cassert>
#include <vector>
#include <cmath>
#include <stack>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

const int N = 10010;
const int M = 100010;
const int inf = 0x3f3f3f3f;
const int mod = 1e9 + 7;
const int pi = cos(-1.0);
const ll oo = 0x3f3f3f3f3f3f3f3fll;

#define pb push_back
#define sz(x) ((x).size())

char s[11][11];
int dir[4][2] = {{2, 2}, {2, -2}, {-2, 2}, {-2, -2}};

int vis[2][11][11];

bool Check(int x, int y){
	if(x > 8 || x < 1 || y > 8 || y < 1) return false;
	return true;
}

void dfs(int x, int y, int d, int vis[11][11]){
	if(vis[x][y] + 1) return ;
	vis[x][y] = d & 1;
	for(int i = 0; i < 4; i++){
		int xx = x + dir[i][0];
		int yy = y + dir[i][1];
		if(!Check(xx, yy)) continue;
		dfs(xx, yy, d + 1, vis);
	}
}

int main(){
	int ca;
	for(scanf("%d", &ca); ca--;){
		for(int i = 1; i <= 8; i++)
			scanf("%s", s[i] + 1);
		memset(vis, -1, sizeof(vis));
		for(int i = 1, k = 0; i <= 8; i++)
			for(int j = 1; j <= 8; j++)
				if(s[i][j] == 'K') dfs(i, j, 0, vis[k]), k++;
		bool ret = false;
		for(int i = 1; i <= 8; i++)
			for(int j = 1; j <= 8; j++)
				if(s[i][j] != '#' && vis[0][i][j] == vis[1][i][j] && vis[0][i][j] != -1) ret = true;
		if(ret) puts("YES");
		else puts("NO");
	}
	return 0;
}
