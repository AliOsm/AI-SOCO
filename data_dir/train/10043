#include <iostream>
#include <string.h>
#include <ctime>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <stack>
#include <iomanip>
#include <vector>
#define fi first
#define se second

using namespace std;
const int maxN = 2e5 + 9, MOD = 998244353, lg = 19;

typedef long long ll;
typedef pair<ll, int> ii;

/*void incExc(int init[maxN], int ans[maxN]){
 
 for(int i = 1; i < maxN; buc[i] = 0, root[i++] = 1)
 for(int j = i; j < maxN; i += j)
 buc[i] += init[j];
 
 for(int i = 2; i < maxN; i++)
 if(root[i] == 1)
 for(int j = i; j < maxN; j += i)
 root[j] *= i, buc[j] *= -1;
 
 for(int i = 1; i < maxN; i++)
 if(root[i] == i)
 for(int j = i; j < maxN; j += i)
 ans[j] -= buc[i];
 
 for(int i = 1; i < maxN; i++) ans[i] = buc[1] - ans[i];
 
 //for each i, ans[i] = sum of init vals of all numbers not coprime to i
 }*/

int n;
int arr[maxN];

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    
    int k;
    cin >> n >> k;
    
    vector<int> vc;
    for(int i = 1; i <= n; i++) vc.push_back(i);
    
    int lead = 0;
    for(int i = 0; i < k; i++){
        int inp;
        cin >> inp;
        int cnd = (lead + inp) % vc.size();
        
        cout << vc[cnd] << ' ';
        vc.erase(vc.begin() + cnd);
        cnd %= vc.size();
        lead = cnd;
    }
    
    cout << '\n';
}

