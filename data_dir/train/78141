# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define scn(x) scanf("%I64d",&x)
# define scan(x) scanf("%d",&x)
# define print(x) printf("%d ",x)
# define prnt(x) printf("%I64d ",x);
# define eol printf("\n")
# define IOS ios_base :: sync_with_stdio(0)
# define pe "Possible"
# define ie "Impossible"
# define halt(...) {fo << (__VA_ARGS__) << '\n';exit(0);}
# define rep1(n) for (int qwerty = 1;qwerty <= n;++qwerty)
# ifdef CF
# define DEBUG
# endif // CF
# ifdef DEBUG
# define pp(n) cerr << #n << " = " << n << '\n'
# define ppp(v) for (auto it : v) cerr << it << ' ';cerr << '\n'
# define aprint(x,y,z) for (int i = x;i <= y;++i) cerr << z[i] << ' ';cerr << '\n'
# else
# define pp(n) ;
# define ppp(v) ;
# define aprint(x,y,z);
# endif // DEBUG
# define rep(n) for (int i = 1;i <= n;++i)
const int mod = 1e9 + 7;
struct matrix
{
    int D[105][105];
    matrix(void)
    {
        memset(D,0,sizeof(D));
    }
};
ll s[1005];
matrix mult(matrix a,matrix b,int n)
{
    matrix c;
    for (int k = 1;k <= n;++k)
        for (int i = 1;i <= n;++i)
            for (int j = 1;j <= n;++j)
                c.D[i][j] = (c.D[i][j] + 1ll * a.D[i][k] * b.D[k][j]) % mod;
    return c;
}
int main(void)
{
    # ifdef CF
    freopen("input","r",stdin);
    # endif // CF
    srand(time(0));
    fo << fixed << setprecision(7);
    cerr << fixed << setprecision(7);
    ll t;
    int n;
    fi>>n>>t;
    for (int i = 1;i <= n;++i) fi>>s[i];
    matrix ans,a;
    if (t == 1) return fo << n << '\n',0;
    t -= 2;
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= n;++j)
            a.D[i][j] = (__builtin_popcountll(s[i] ^ s[j]) % 3) == 0;
    ans = a;
    while (t)
    {
        if (t&1) ans = mult(ans,a,n);
        a = mult(a,a,n);
        t /= 2;
    }
    int rs = 0;
    for (int i = 1;i <= n;++i)
        for (int j = 1;j <= n;++j)
            rs = (rs + ans.D[i][j]) % mod;
    fo << rs << '\n';
    return 0;
}


