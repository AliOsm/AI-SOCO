#include<bits/stdc++.h>
#define x first
#define y second
#define int long long
using namespace std;
const int N = 1e5 + 10;
int n, r, t, w, M[N];
pair < int , int > A[N];
void Mark(int a, int b)
{
    for (int i = 0; i < n; i++)
    {
        if ((A[a].x - A[b].x) * (A[a].y - A[i].y) == (A[a].x - A[i].x) * (A[a].y - A[b].y) || (i == a || i == b))
            M[i] = 1;
        else
            M[i] = 0;
    }
}
bool Solve(int a, int b, int c)
{
    int d = -1;
    Mark(a, b);
    for (int i = 0; i < n; i++)
        if (i != c && !M[i])
            d = i;
    if (d == -1)
        return (1);
    for (int i = 0; i < n; i++)
    {
        if (i == a || i == b || i == c || i == d || M[i])
            continue;
        if ((A[c].x - A[d].x) * (A[c].y - A[i].y) != (A[c].x - A[i].x) * (A[c].y - A[d].y))
            return (0);
    }
    return (1);
}
int32_t main()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        cin >> A[i].x >> A[i].y;
    if (n <= 4)
        return !printf("YES");
    for (int i = 2; i < n; i++)
        if ((A[0].x - A[1].x) * (A[0].y - A[i].y) != (A[0].x - A[i].x) * (A[0].y - A[1].y))
            w = i;
    if (!w)
        return !printf("YES");
    r |= Solve(0, 1, w);
    r |= Solve(0, w, 1);
    r |= Solve(1, w, 0);
    if (r)
        printf("YES");
    else
        printf("NO");
    return (0);
}
