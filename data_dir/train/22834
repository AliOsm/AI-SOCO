#pragma GCC optimize("Ofast")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

const ll INF = 1000000000000000000LL;
const int MAX_N = 200005;

int n, k;
string s;
ll t[4 * MAX_N];
ll dp[MAX_N];

void build(int i, int l, int r)
{
	if (l == r)
		t[i] = INF;
	else
	{
		int mid = (l + r) / 2;
		build(2 * i + 1, l, mid);
		build(2 * i + 2, mid + 1, r);
		t[i] = min(t[2 * i + 1], t[2 * i + 2]);
	}
}

ll getValue(int i, int l, int r, int pos)
{
	if (l == r)
		return t[i];
	else
	{
		int mid = (l + r) / 2;
		if (pos <= mid)
			return getValue(2 * i + 1, l, mid, pos);
		else
			return getValue(2 * i + 2, mid + 1, r, pos);
	}
}

ll getMin(int i, int l, int r, int lx, int rx)
{
	if (l == lx && r == rx)
		return t[i];
	else
	{
		int mid = (l + r) / 2;
		ll result = INF;
		if (lx <= mid)
			result = getMin(2 * i + 1, l, mid, lx, min(rx, mid));
		if (rx > mid)
			result = min(result, getMin(2 * i + 2, mid + 1, r, max(lx, mid + 1), rx));
		return result;
	}
}

void setValue(int i, int l, int r, int pos, ll val)
{
	if (l == r)
		t[i] = val;
	else
	{
		int mid = (l + r) / 2;
		if (pos <= mid)
			setValue(2 * i + 1, l, mid, pos, val);
		else
			setValue(2 * i + 2, mid + 1, r, pos, val);
		t[i] = min(t[2 * i + 1], t[2 * i + 2]);
	}
}

int32_t main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> n >> k >> s;
	build(0, 0, n);
	dp[0] = 0;
	for (int i = 1; i <= n; i++)
		dp[i] = INF;

	for (int i = 1; i <= n; i++)
	{
		dp[i] = min(dp[i], dp[i - 1] + i);

		if (s[i - 1] == '1')
		{
			dp[i] = min(dp[i], dp[max(0, i - k - 1)] + i);
			setValue(0, 0, n, i, dp[i]);
		}

		dp[i] = min(dp[i], getMin(0, 0, n, max(0, i - k), i));
	}
	cout << dp[n] << endl;

	return 0;
}