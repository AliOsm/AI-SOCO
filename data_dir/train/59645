#include <bits/stdc++.h>

using namespace std;
const int N=3e5+5;
int a[N];
long long cum[N];
map< long long , vector<long long> >idx;
map<long long , int>m,vis;
vector<long long>v;
int solve(long long x,int r)
{
    v.clear();
    int ret=0;
    v=idx[x];
    for(int i=0;i+1<v.size();i++)
    {
        if(v[i+1]>=r) break;
        ret+=v[i+1]-v[i]-1;
    }
    return ret;
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);

    int n;
    cin>>n;
    idx[0].push_back(0);
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
        cum[i]=cum[i-1]+a[i];
        idx[cum[i]].push_back(i);
    }
    long long sum=0;
    for(int i=n;i>=1;i--)
    {
        sum+=a[i];
        if(m.find(sum)==m.end())
            m[sum]=i;
    }
    int ans=1e9;
    ans=solve(0,n+1);
    vis[0]=1;
    for(int i=1;i<n;i++)
    {
        if(vis.find(cum[i])!=vis.end()) continue;
        vis[cum[i]]=1;
        ans=min(ans,solve(cum[i],m[cum[i]*-1])+(i+n-m[cum[i]*-1]));
    }
    cout<<ans<<endl;
    return 0;
}
