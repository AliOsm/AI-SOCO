// Author: πα

#include <bits/stdc++.h>
using namespace std;

int main()
{
    vector<int> hrs, pri;
    map<int, int> op;
    op[0] = 0;
    hrs.push_back(0);
    int n, m, i, p, q, t, last = 0, hero;
    cin >> n >> m;
    for(i = 0; i < n+n; i++)
    {
        cin >> p;
        hrs.push_back(p);
    }
    for(i = 0; i < m; i++)
    {
        cin >> p >> q;
        op[p] = q;
        op[q] = p;
        if(hrs[p] > hrs[q])
            pri.push_back(p);
        else
            pri.push_back(q);
    }
    cin >> t;
    if(t == 1)
    {
        while(n--)
        {
            if(pri.size())
            {
                hero = pri.front();
                pri.erase(pri.begin());
            }
            else
                hero = max_element(hrs.begin(), hrs.end()) - hrs.begin();
            hrs[hero] = 0;
            cout << hero << endl;
            cin >> last;
            hrs[last] = 0;
        }
    }
    if(t == 2)
    {
        while(n--)
        {
            cin >> last;
            hrs[last] = 0;
            if(op[last])
            {
                hero = op[last];
                pri.erase(remove(pri.begin(), pri.end(), op[last]), pri.end());
                pri.erase(remove(pri.begin(), pri.end(), op[op[last]]), pri.end());
            }
            else if(pri.size())
            {
                hero = pri.front();
                pri.erase(pri.begin());
            }
            else
                hero = max_element(hrs.begin(), hrs.end()) - hrs.begin();
            op[op[hero]] = 0;
            op[hero] = 0;
            hrs[hero] = 0;
            cout << hero << endl;
        }
    }
    return 0;
}
