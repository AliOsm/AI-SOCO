#include <bits/stdc++.h>
using namespace std;

const int mod = 1e9 + 7;

priority_queue <int> buy;
priority_queue <int, vector <int>, greater <int> > sell;
queue <int> q;

int main(){
	int n, rec, price, temp, ans, flag, cnt;
	char s[10];
	scanf("%d",&n);
	rec = 0;
	for (int i = 1; i <= n; i++){
		scanf("%s %d",s,&price);
		if (s[1] == 'D') q.push(price);
		else{
			flag = 0;
			while (!q.empty()){
				temp = q.front();
				q.pop();
				if (temp == price) flag = 1;
				else if (temp < price) buy.push(temp);
				else sell.push(temp);
			}
			if (sell.empty() && buy.empty()){
				if (flag) rec++;
			}
			else if (sell.empty()){
				if (buy.top() > price){
					printf("0\n");
					return 0;
				}
				if (flag) rec++;
				else buy.pop();
			}
			else if (buy.empty()){
				if (sell.top() < price){
					printf("0\n");
					return 0;
				}
				if (flag) rec++;
				else sell.pop();
			}
			else{
				if (buy.top() > price || sell.top() < price || buy.top() > sell.top()){
					printf("0\n");
					return 0;
				}
				if (flag) rec++;
				else{
					if (buy.top() == price) buy.pop();
					else sell.pop();
				}
			}
		} 
	}
	cnt = 0;
	while (!q.empty()){
		temp = q.front();
		q.pop();
		if ((buy.empty() || buy.top() < temp) && (sell.empty() || sell.top() > temp)) cnt++;
	}
	ans = 1;
	for (int i = 1; i <= rec; i++){
		ans *= 2;
		ans %= mod;
	}
	ans = (1LL * ans * (cnt + 1)) % mod;
	printf("%d\n",ans);
	return 0;
}