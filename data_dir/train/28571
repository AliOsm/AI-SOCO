#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 100, MOD = 1000 * 1000 * 1000 + 7, inF = MOD;

int n, now, ans, h[N], dp[N];

int sum(int a, int b) {
	a += b;
	if(a < 0)
		a += MOD;
	else if(a >= MOD)
		a -= MOD;
	return a;
}

int mul(int a, int b) {
	return 1LL * a * b % MOD;
}

int main() {
	ios::sync_with_stdio(false), cin.tie(0);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> h[i];
		ans = sum(ans, --h[i]);
	}
	for (int i = 1; i < n; i++) {
		dp[i] = sum(min(h[i], h[i - 1]), mul(dp[i - 1], min(min(h[i], h[i - 1]), i > 1? h[i - 2]: inF)));
		ans = sum(ans, mul(min(h[i], h[i - 1]), dp[i]));
	}
	cout << ans;
	return 0;
}
