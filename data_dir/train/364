#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;

ll two[200001];
int cnt[1000001];
ll ans[1000001];

int main() {
	int n;
	scanf("%d", &n);

	two[0] = 1;
	for (int i = 1; i <= n; i++)
		two[i] = two[i - 1] * 2 % MOD;

	for (int i = 0; i < n; i++) {
		int t;
		scanf("%d", &t);
		cnt[t]++;
	}

	for (int i = 2; i <= 1000000; i++)
		for (int j = i + i; j <= 1000000; j += i)
			cnt[i] += cnt[j];

	ll ret = 0;
	for (int i = 1000000; i >= 2; i--) {
		ans[i] = cnt[i] * two[cnt[i] - 1] % MOD;

		// if (i == 3) printf("%lld\n", ans[i]);
		for (int j = i + i; j <= 1000000; j += i)
			ans[i] = (ans[i] - ans[j] + MOD) % MOD;
		ret = (ret + ans[i] * i % MOD) % MOD;
	}

	printf("%lld", ret);
}