#include <bits/stdc++.h>
using namespace std;

string to_string(string s) {
    return '"' + s + '"';
}

string to_string(const char* s) {
    return to_string((string) s);
}

string to_string(bool b) {
    return (b ? "true" : "false");
}

template <typename A, typename B>
string to_string(pair<A, B> p) {
    return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}

template <typename A>
string to_string(A v) {
    bool first = true;
    string res = "{";
    for (const auto &x : v) {
        if (!first) {
            res += ", ";
        }
        first = false;
        res += to_string(x);
    }
    res += "}";
    return res;
}

void debug_out() { cerr << endl; }

template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
    cerr << " " << to_string(H);
    debug_out(T...);
}

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

void test_case() {
    int n;
    cin >> n;
    vector<vector<int>> s(n);
    vector<int> done(n);
    vector<int> mn(n);
    vector<int> mx(n);
    for (int i = 0; i < n; ++i) {
        int l;
        cin >> l;
        s[i].resize(l);
        for (int j = 0; j < l; ++j) {
            cin >> s[i][j];
        }
        set<int> st;
        for (int j = l - 1; j >= 0; --j) {
            auto it = st.upper_bound(s[i][j]);
            if (it != st.end()) {
                done[i] = 1;
            }
            st.insert(s[i][j]);
        }
        mn[i] = *min_element(s[i].begin(), s[i].end());
        if (done[i]) {
            mx[i] = INT_MIN;
        } else {
            mx[i] = *max_element(s[i].begin(), s[i].end());
        }
    }
    sort(mx.begin(), mx.end());
    int solved = accumulate(done.begin(), done.end(), 0);
    long long prs = 0;
    for (int i = 0; i < n; ++i) {
        if (done[i]) {
            prs += n;
        } else {
            int up = upper_bound(mx.begin(), mx.end(), mn[i]) - mx.begin();
            prs += n - up + solved;
        }
    }
    cout << prs << "\n";
}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    test_case();
    return 0;
}
