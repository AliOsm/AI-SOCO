#include <iostream>
#include <algorithm>
#include <ctime>
#include <iomanip>
#include <set>
#include <map>
#include <vector>
#include <stdio.h>
using namespace std;
const long long maxInt = (int)1e9;
const int MaxN = (int)1e3 + 228;

char a[MaxN][MaxN];
int i, j, n, m, t, used[MaxN][MaxN], k[MaxN * MaxN], type[MaxN][MaxN];

void go(int x, int y) {
    if(x < 0 || y < 0 || x > n - 1 || y > m - 1 || a[x][y] == '*' || used[x][y]) {
        return;
    }
    used[x][y] = 1;

    k[t]++;
    go(x - 1, y);
    go(x + 1, y);
    go(x, y + 1);
    go(x, y - 1);

    type[x][y] = t;
}

int main() {
//  freopen(".in", "r", stdin);
//  freopen(".out", "w", stdout);

    cin >> n >> m;
    for(i = 0; i < n; i++) {
        scanf("%s", &a[i]);
    }

    for(i = 0; i < n; i++) {
        for(j = 0; j < m; j++) {
            if(used[i][j]) {
                continue;
            }
            t++;
            go(i, j);
        }

    }

    for(i = 0; i < n; i++) {
        for(j = 0; j < m; j++) {
            if(a[i][j] == '.') {
                cout << ".";
                continue;
            }
            int ans = 1;
            int x = i;
            int y = j;
            if(x + 1 < n) ans += k[type[x + 1][y]];
            if(x - 1 >= 0 && (x + 1 == n || type[x + 1][y] != type[x - 1][y])) ans += k[type[x - 1][y]];
            if(y + 1 < m && (x + 1 == n || type[x + 1][y] != type[x][y + 1]) && (x - 1 == -1 || type[x][y + 1] != type[x - 1][y])) ans += k[type[x][y + 1]];
            if(y - 1 >= 0 && (x + 1 == n || type[x + 1][y] != type[x][y - 1]) && (x - 1 == -1 || type[x][y - 1] != type[x - 1][y])
                && (y + 1 == m || type[x][y + 1] != type[x][y - 1])) ans += k[type[x][y - 1]];
            cout << ans % 10;
        }
        puts("");
    }
}
