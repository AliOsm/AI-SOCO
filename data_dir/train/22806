/* 
chirag11032000
Chirag Thakur
*/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef double db;
typedef pair < ll, ll > pll;

#define pb push_back
#define fast_io() ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)

const ll N = 1e5 + 10;

ll dp[N][2], a[N], n;

ll solve(ll num, ll pos, ll win);

int main() {
    // fast_io();
    for (ll i = 0; i < N; ++i) {
    	for (ll j = 0; j < 2; ++j) {
    		dp[i][j] = -1;
    	}
    }
    cin >> n;
    for (ll i = 1; i <= n; ++i) {
    	cin >> a[i];
    }
    for (ll i = 1; i <= n; ++i) {
    	// cout << i << "\n";
    	ll ans = solve(a[i], i, 0);
    	if (ans == 0) {
    		cout << "A";
    	} else {
    		cout << "B";
    	}
    }
    cout << "\n";
    return 0;
}


ll solve(ll num, ll pos, ll win) {
	if (dp[pos][win] == -1) {
		ll ans = win ^ 1;
		for (ll jmp = num; ; jmp += num) {
			if ((pos + jmp > n) && (pos - jmp < 1)) {
				break;
			}
			if ((pos + jmp <= n) && (a[pos + jmp] > a[pos])) {
				// cout << "Forward: " <<  pos + jmp << "\n";
				ll next = solve(a[pos + jmp], pos + jmp, win ^ 1);
				if (next != ans) {
					ans = next;
					break;
				}
			}
			if ((pos - jmp >= 1) && (a[pos - jmp] > a[pos])) {
				// cout << "Back: " <<  pos - jmp << "\n";
				ll next = solve(a[pos - jmp], pos - jmp, win ^ 1);
				if (next != ans) {
					ans = next;
					break;
				}	
			}
		}
		dp[pos][win] = ans;
	}
	return dp[pos][win];
}
