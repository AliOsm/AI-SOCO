#include <bits/stdc++.h>
using namespace std;

int MAX = (int) 2e9;

void incr(int val, map<int, int> & counts) {
    counts[val]++;
}

void decr(int val, map<int, int> & counts) {
    counts[val]--;
    if (counts[val] == 0) counts.erase(val);
}

int main() {
    ios_base::sync_with_stdio(false);
    int n; cin >> n;
    vector<int> a(n);
    for (int i = 0; i < n; i++) cin >> a[i];
    vector<vector<int>> adj(n);
    for (int i = 0; i < n - 1; i++) {
        int v, u; cin >> v >> u; v--; u--;
        adj[v].push_back(u);
        adj[u].push_back(v);
    }
    map<int, int> counts;
    for (int val : a) counts[val]++;
    int res = MAX;
    for (int start = 0; start < n; start++) {
        decr(a[start], counts);
        for (int nxt : adj[start]) decr(a[nxt], counts);
        int here = counts.empty() ? -MAX : counts.rbegin() -> first + 2;
        for (int nxt : adj[start]) here = max(here, a[nxt] + 1);
        here = max(here, a[start]);
        res = min(res, here);
        incr(a[start], counts);
        for (int nxt : adj[start]) incr(a[nxt], counts);
    }
    cout << res << endl;
}