/* ****Enigma27**** */

#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define	endl		'\n'
#define pll         pair<ll int,ll int>
#define vll          vector<ll int>
#define all(a)      (a).begin(),(a).end()
#define x           first
#define y           second
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define rep(i,a,b)   for(ll i=a;ia<b;i++)
#define gcd(a,b)    __gcd((a),(b))
#define lcm(a,b)    ((a)*(b)) / gcd((a),(b))
const double 	pi=3.141592653589793238462643383279502884197169399375105820974944;
#define ios	    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
#define N	100005
ll n,i,j,k,l,sum=0,flag=0,ans=0,q;
map<ll,ll> f;
void add(ll val,ll t)
{
    ll p=0;
    for(ll i=30;i>=0;i--)
    {	
        if(val&(1<<i))
        {
            p=2*p+2;
            f[p]+=t;
        }
        else
        {
            p=2*p+1;
            f[p]+=t;
        }
    }
}
ll query(ll val)
{
	
    ll p=0,ans=0;
    for(ll i =30;i>=0;i--)
    {
    
        if(val&(1<<i))
        {	
            if(f[2*p+1])
            { 
                p=2*p+1;
                ans+=(1<<i);
            }
            else
                p=2*p+2;
        }
        else
        {
            if(f[2*p+2])
            { 
                p=2*p+2;
                ans+=(1<<i);
            }
            else
                p=2*p+1;
        }
    }
    return ans;
}
int main()
{	
	
	cin>>q;
	add(0,1);
	while(q--){
		char c;
		cin>>c>>k;
		if(c=='?') cout<<query(k)<<endl;
		else if(c=='+') add(k,1);
		else add(k,-1);
	}
	return 0;
}