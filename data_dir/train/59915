#include<bits/stdc++.h>
using namespace std;
typedef unsigned long long ll;
ll dp[300][300], nxt[300][300];

ll m, base, x, y, z;
string str;
const ll inf = 2100000000000000000;

ll ppow(ll n, ll m)
{
    ll re = 1;
    for(ll i = 1; i <= m; i++) re = re * n;
    return re;

}

ll convrt(ll pos, ll pw)
{
    if(pos == -1) return 0;
    if(dp[pos][pw] != -1) return dp[pos][pw];


    ll sm = 0;
    ll re = inf, nnn = pos;

    for(ll i = pos, j = 0; i >= 0; i--, j++){
        //if(j == 10) break;

        ll tmp = str[i] - '0';

        sm = sm + ppow(10, j) * tmp;

        if(tmp == 0 && j != 0) continue;

        if(sm >= base) break;

        //cout << pos << ' ' << sm << ' ' << base << endl;

        if(sm * ppow(base, pw) >= inf) break;


        ll p = 0;
        p = convrt(pos - j - 1, pw + 1) + sm * ppow(base, pw);

        //if(pos == 14) cout << pw << ' ' << sm << ' ' << p << endl;

        if(p < re){
            re = p;
            nxt[pos][pw] = pos - j - 1;
        }
    }
    return dp[pos][pw] = re;

}

int main()
{
    cin >> base >> str;

    memset(dp, -1, sizeof(dp));

    ll ans = convrt(str.size() - 1, 0);

    cout << ans << endl;

    int pos = str.size() - 1;
    int pw = 0;

    /*while(pos != 0){
        cout << pos << endl;
        pos = nxt[pos][pw];
        pw++;
    }*/


    return 0;
}
