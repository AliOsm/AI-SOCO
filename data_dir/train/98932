#include <bits/stdc++.h>
#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define F first
#define S second
#define sc(x) scanf("%d", &x)

using namespace std;

typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long  ll;

const double EPS = 1e-9;
const double pi = acos(-1);
int dx[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dy[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};
const int N = 2004;
int memo[N][N] , a[N] , E , m , n , ed[N];
ii I[N];

void Raining(){
    for(int i = 0 ; i < n ; ++i)
        for(int j = I[i].F ; j <= I[i].S ; ++j)
            ed[j] = i + 1;
}

int solve(int i = 0 , int indx = -1){
    if(i && ed[i] && ed[i - 1] && ed[i] == ed[i - 1] && indx == -1)return inf;
    if(i == E)return 0;


    int &ret = memo[i][indx + 1];
    if(~ret)
        return ret;

    ret = inf;
    if(~indx){
        ret = min(ret , a[indx] + solve(i + 1 , indx));
        if(a[i])ret = min(ret , a[i] + solve(i + 1 , i));
        ret = min(ret , solve(i + 1 , -1));
    }
    else{
        ret = min(ret , solve(i + 1 , -1));
        if(a[i])ret = min(ret , a[i] + solve(i + 1 , i));
    }

    return ret;
}


int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    sc(E) , sc(n) , sc(m);

    for(int i = 0 ; i < n ; ++i){
        sc(I[i].F) , sc(I[i].S);
    }

    Raining();

    int indx , val;
    for(int i = 0 ; i < m ; ++i)
        sc(indx) , sc(val) , a[indx] = min((a[indx] == 0 ? inf : a[indx]) , val);

    memset(memo , -1 , sizeof memo);

    int ans = solve();
    printf("%d\n" , (ans == inf ? -1 : ans));
}
