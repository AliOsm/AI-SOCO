#include<bits/stdc++.h>

using namespace std;

//int edg[10][10]; /// edg[i][j] = 1 if node i and node j is connected directly

vector < int > edg[100005];

int vis[100005] ;
long long cnt[4]; /// vis[n] = 1 if node n is visited

void dfs(int n , int s)
{
    vis[n] = 1;
    cnt[s]++;

    if(s == 1) s = 2;
    else s = 1;

    int a , i;

    for(i = 0 ; i<edg[n].size() ; i++){
        a = edg[n][i];
        if(vis[a] == 0) dfs(a , s);
    }
}

int main(){
    int n , m , i , a , b; /// n = number of nodes , m = number of edges;
    scanf("%d",&n);
    m = n-1;
    for( i = 1 ; i<=m ; i++){
        scanf("%d %d", &a , &b);
//        edg[a][b] = 1;
//        edg[b][a] = 1;

        if( a != b ){
            edg[a].push_back(b);
            edg[b].push_back(a);
        }
    }

//    for(int i = 1 ; i<=n ; i++){
//        printf("node %d:\n",i);
//        for(int j = 0 ; j<edg[i].size() ; j++) printf("%d ",edg[i][j]);
//        printf("\n");
//    }

    dfs(1,1); /// set A = 1 , set B = 2

    printf("%lld\n",cnt[1]*cnt[2]-m);

    return 0;
}
