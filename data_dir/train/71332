/* Ternary Search */
#include<bits/stdc++.h>
using namespace std;
vector <int> a[100100];
vector <int> b;
int n;

int get(int t)
{
   b.clear();
   int res = 0;
   int del;
   int m = a[0].size();
   for (int i=1; i<=100000; i++)
   {
      del = 0;
      if (a[i].size()>=t) del = (a[i].size()-t+1);
      for (int j = 0; j<del; j++)
          res += a[i][j];
      for (int j = del; j<a[i].size();j++)
          b.push_back(a[i][j]);
      m+=del;
   }
   if (m>=t) return res;
   del = (t-m);
   sort(b.begin(),b.end());
   for (int  i = 0; i<del; i++)
       res+=b[i];
   return res;
}

int main()
{
    cin>>n;
    int  u,v;
    for (int i=1; i<=n; i++)
    {
        cin>>u>>v;
        a[u].push_back(v);
    }
    for (int i=1; i<=100000; i++)
         sort(a[i].begin(),a[i].end());
    int l = 1;
    int r = n;
    int m1,m2;
    while (abs(r-l)>5)
    {
        m1 = l + (r-l)/3;
        m2 = r - (r-l)/3;
        int r1 = get(m1);
        int r2 = get(m2);
        if (r1==r2)
        {
            l = m1; r = m2;
        }
        else
        if (r1>r2) l = m1;
        else
            r = m2;
    }

    int ress = 1000000007;
    for (int i=l; i<=r; i++)
         ress = min(ress,get(i));
    cout<<ress;
    return 0;
}
