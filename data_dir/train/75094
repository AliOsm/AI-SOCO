/*****Enigma_27*****/
#include<bits/stdc++.h>
#define ll          long long
#define pb          push_back
#define mp          make_pair
#define pll         pair<ll,ll>
#define vll          vector<ll>
#define all(a)      (a).begin(),(a).end()
#define f           first
#define s           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define lbnd        lower_bound
#define ubnd        upper_bound
#define bs          binary_search
#define ios        	ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
using namespace std;
ll x,y,w,n,i,j,k,l,t=1,ans=0,flag=0,p,q,r;
string s;
map<pair<ll,ll> ,ll  > m;
map<pair<ll,ll> ,ll> visited;
pair<ll,pair<ll,ll> > temp;
priority_queue<pair<ll,pair<ll,ll> >,vector<pair<ll,pair<ll,ll> > >,greater< pair<ll,pair<ll,ll> > > > pq;
int main()
{   ios
    cin>>x>>y>>p>>q>>n;
    for(i=0;i<n;i++)
    {
        cin>>k>>l>>r;
        for(j=l;j<=r;j++) m[{k,j}]=1;
    }
    pq.push({0,{x,y}});
    while(!pq.empty())
    {
        temp=pq.top();pq.pop();
       // cout<<temp.s.f<< " -->  "<<temp.s.s<<endl;
        ll xx=temp.s.f,yy=temp.s.s;
        if(xx==p&&yy==q) {cout<<temp.f;return 0;}
        temp.f++;
        if(visited[{xx,yy}]==1) continue;
        visited[{xx,yy}]=1;
        if(!visited[{xx,yy-1}]&&m[{xx,yy-1}]) pq.push({temp.f,{xx,yy-1}});
        if(!visited[{xx,yy+1}]&&m[{xx,yy+1}]) pq.push({temp.f,{xx,yy+1}});
        if(!visited[{xx-1,yy}]&&m[{xx-1,yy}]) pq.push({temp.f,{xx-1,yy}});
        if(!visited[{xx+1,yy}]&&m[{xx+1,yy}]) pq.push({temp.f,{xx+1,yy}});
        if(!visited[{xx-1,yy-1}]&&m[{xx-1,yy-1}]) pq.push({temp.f,{xx-1,yy-1}});
        if(!visited[{xx-1,yy+1}]&&m[{xx-1,yy+1}]) pq.push({temp.f,{xx-1,yy+1}});
        if(!visited[{xx+1,yy-1}]&&m[{xx+1,yy-1}]) pq.push({temp.f,{xx+1,yy-1}});
        if(!visited[{xx+1,yy+1}]&&m[{xx+1,yy+1}]) pq.push({temp.f,{xx+1,yy+1}});

    }
    cout<<-1;
	return 0;
}
