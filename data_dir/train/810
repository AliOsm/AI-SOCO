#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define re return
#define ll long long
#define ull unsigned ll
#define ld long double
#define f first
#define s second
#define pi acos(-1)
#define oo (ll)1e9+8
#define OO 1e18
#define EPS 1e-9
#define Endl '\n'
#define all(v) (v).begin(),(v).end()
#define FX(n) fixed<<setprecision(n)
#define mm(o,k) memset(o,k,sizeof o)
#define IO ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
using namespace std;
const int N=500+5,M=N*2;
string s;
char last;
int n,len,cnt,kolo;
vector<pair<int,int> > mp[29];
inline bool vowel(char ch){
    if(ch=='a')re 1;
    if(ch=='e')re 1;
    if(ch=='o')re 1;
    if(ch=='i')re 1;
    if(ch=='u')re 1;
    re 0;
}
vector<string> klmat;
vector<int> idxs;
int main()
{
    IO;
    int n;
    cin >> n;
    for(int i=0;i<n;++i){
        cin >> s;
        klmat.push_back(s);
        len=s.size();
        cnt=0;
        for(int j=len-1;~j;--j){
            if(vowel(s[j])){
                if(!cnt)last=s[j];
                ++cnt;
            }
        }
        if(cnt)mp[last-'a'].push_back({cnt,i});
        else ++kolo,idxs.push_back(i);
    }
    vector<pair<pair<int,int>,pair<int,int> > > ans;
    vector<pair<int,int> > say7;
    for(int i=0;i<26;++i){
        sort(mp[i].begin(),mp[i].end());
        len=mp[i].size();
        for(int j=0;j<len;++j){
            if(j+1<len){
                if(mp[i][j].f==mp[i][j+1].f){
                    ans.push_back(make_pair(mp[i][j],mp[i][j+1]));
                    ++j;
                }
                else{
                    say7.push_back(mp[i][j]);
                }
            }
            else{
                say7.push_back(mp[i][j]);
            }
        }
    }
    sort(say7.begin(),say7.end());
    vector<pair<pair<int,int>,pair<int,int> > > nlmo;
    len=say7.size();
    for(int i=0;i+1<len;++i){
        if(say7[i].f==say7[i+1].f)
            nlmo.push_back(make_pair(say7[i],say7[i+1])),++i;
    }
    pair<int,int> awl,tani;
    vector<pair<pair<int,int>,pair<int,int> > > out;
    while(ans.size()){
        auto p=ans.back();
        ans.pop_back();

        if(nlmo.size()){
            awl=make_pair(p.f.s,nlmo.back().f.s);
            tani=make_pair(nlmo.back().s.s,p.s.s);
            out.push_back(make_pair(awl,tani));
            nlmo.pop_back();
        }
        else{
            if(ans.size()){

                awl=make_pair(p.f.s,ans.back().f.s);
                tani=make_pair(ans.back().s.s,p.s.s);
                out.push_back(make_pair(awl,tani));

                ans.pop_back();
            }
        }
    }
    cout<<out.size()<<endl;
    for(auto p:out){
        cout<<klmat[p.f.s]<<" "<<klmat[p.f.f]<<"\n";
        cout<<klmat[p.s.f]<<" "<<klmat[p.s.s]<<"\n";
    }
    re 0;
}