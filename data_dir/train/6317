#include<bits/stdc++.h>
using namespace std;
#define M 100005

int par[M], dist[M];
set<int> se[M];
int nxt[M];

void dfs(int s)
{
    for(int v: se[s])
    {
        dist[v] = dist[s]+1;
        dfs(v);
    }
}

int main()
{
    int n;
    scanf("%d", &n);

    for(int i = 1; i < n; i++)
    {
        scanf("%d", par+i);
        se[par[i]].insert(i);
    }

    dfs(0);

    int mx = 0, cur = -1;
    for(int i = 0; i < n; i++)
    {
        if(dist[i] > mx) mx = dist[i], cur = i;
    }

    vector<int> ans;

    while(cur)
    {
        int p = par[cur];

        if(se[p].size() == 1) cur = p;
        else
        {
            auto it = se[p].begin();
            if(*it == cur) ++it;

            int x = *it;

            par[cur] = x;
            se[p].erase(cur);
            se[x].insert(cur);
            ans.push_back(cur);
        }
    }

    for(int i = 1; i < n; i++) nxt[par[i]] = i;

    cur = 0;
    for(int i = 0; i < n; i++)
    {
        printf("%d ", cur);
        cur = nxt[cur];
    }
    printf("\n");

    reverse(ans.begin(), ans.end());

    printf("%d\n", ans.size());
    for(int x: ans) printf("%d ", x);

    return 0;
}
