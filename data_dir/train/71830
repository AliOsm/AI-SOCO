#include<bits/stdc++.h>
using namespace std;
#define N 200001
int n,m,p,B,nb,cur,ans,f[N],mx[N],bel[N],tag[N];
struct rua
{
	int w,v,w2;
	void read(){scanf("%d%d",&w,&v);}
	void read2(){scanf("%d%d%d",&w,&w2,&v);}
	bool operator <(const rua &t)const{return w<t.w;}
}a[N],b[N],c[N];
void Build()
{
	int l=1,r=min(m,B);
	while(l<=m)
	  {
	  mx[++nb]=ans;
	  for(int i=l;i<=r;i++)
	    {
	    bel[i]=nb;
		f[i]=-b[i].v;
		mx[nb]=max(mx[nb],f[i]);
		}
	  cur=max(cur,mx[nb]);
	  l=r+1,r=min(m,l+B-1);
	  }
}
void add(int x)
{
	int w=c[x].w2,v=c[x].v;
	int k=upper_bound(b+1,b+m+1,(rua){w,v,233})-b;
	while(k<=m && bel[k]==bel[k-1])
	  {
	  f[k]+=v;
	  mx[bel[k]]=max(mx[bel[k]],f[k]+tag[bel[k]]);
	  cur=max(cur,mx[bel[k]]);
	  k++;
	  }
	if(k>m)return;
	for(int i=bel[k];i<=nb;i++)
	  tag[i]+=v,mx[i]+=v,cur=max(cur,mx[i]);
}
int main()
{
	B=sqrt(N)+1;
	cur=ans=-2147483647;
	scanf("%d%d%d",&n,&m,&p);
	for(int i=1;i<=n;i++)a[i].read();
	for(int i=1;i<=m;i++)b[i].read();
	for(int i=1;i<=p;i++)c[i].read2();
	sort(a+1,a+n+1);
	sort(b+1,b+m+1);
	sort(c+1,c+p+1);
	Build();
	int k=1;
	for(int i=1;i<=n;i++)
	  {
	  while(k<=p && c[k].w<a[i].w)add(k++);
	  ans=max(ans,-a[i].v+cur);
	  }
	printf("%d\n",ans);
}