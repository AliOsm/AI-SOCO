#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define sz(a) (lld)((a).size())
#define all(c) (c).begin(),(c).end()             
typedef long double ldb;
typedef long long lld;
const lld MOD = 998244353;
const lld INF = 1011111111;
const lld LLINF = 1000111000111000111LL;
const ldb EPS = 1e-10;
const ldb PI = 3.14159265358979323;
using namespace std;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
#define endl '\n'
#define fre freopen("1.in","r",stdin); freopen("1.out","w",stdout);
const lld N = 100005;
//////Simple Integer Functions
int add(int a, int b, int m = MOD) {
    int tmp = a+b;
    if(tmp >= m) tmp -= m;
    return tmp;
}
int sub(int a, int b, int m = MOD) {
    int tmp = a-b;
    if(tmp < 0) tmp += m;
    if(tmp >= m) tmp -= m;
    return tmp;
}
int mul(int a, int b, int m = MOD) {
    long long tmp = 1LL * a * b;
    if(tmp >= m) tmp %= m;
    return tmp;
}
int powm(int base, int exp, int m = MOD) {
    int ans = 1;
    while(exp) {
        if(exp&1) ans = mul(ans, base, m);
        exp >>= 1, base = mul(base, base, m);
    }
    return ans;
}
////////////////////////////////
int a[N],dp[N][205][2],pre[N][205][2];
int32_t main() {
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n;
    cin>>n;
    for(int i=1;i<=n;i++) cin>>a[i];
    dp[0][1][0] = 1;
    for(int j=1;j<=200;j++) pre[0][j][0] = 1;
    for(int i=1;i<=n;i++) {
        for(int j=1;j<=200;j++) {
            if(a[i] != -1 and j != a[i]) continue;
            dp[i][j][0] = add(pre[i-1][j-1][0], pre[i-1][j-1][1]);
            dp[i][j][1] = add(dp[i-1][j][0], sub(pre[i-1][200][1], pre[i-1][j-1][1]));
        }
        for(int j=1;j<=200;j++) {
            pre[i][j][0] = add(pre[i][j-1][0], dp[i][j][0]);
            pre[i][j][1] = add(pre[i][j-1][1], dp[i][j][1]);
        }
    }
    int ans = 0;
    for(int j=1;j<=200;j++) ans = add(ans, dp[n][j][1]);
    cout<<ans;
    return 0;
}