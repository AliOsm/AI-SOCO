#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = 998244353;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<int> v[200000];

ll dp[200000];
ll fac[200001];

ll go(int o, int pa) {
	if (dp[o] != -1) return dp[o];

	ll ret = 1;
	for (int i = 0; i < sz(v[o]); i++) {
		if (v[o][i] == pa) continue;
		ret *= go(v[o][i], o);
		ret %= MOD;
	}

	return dp[o] = ret * fac[sz(v[o])] % MOD;
}

int main() {
	memset(dp, -1, sizeof(dp));
	int n;
	scanf("%d", &n);

	fac[0] = 1;
	for (int i = 1; i <= 200000; i++)
		fac[i] = (ll)fac[i - 1] * i % MOD;

	int a, b;
	for (int i = 0; i < n - 1; i++) {
		scanf("%d %d", &a, &b);
		a--; b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	printf("%lld", go(0, 0) * n % MOD);
}