#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

int N,Q;
int a[100010];
int ql[110],qr[110];
ll ans[110];

void query(int L, int M, int R, ll x){
    int i;
    
    // cout << L << ' ' << M << ' ' << R << endl;
    
    REP(i,Q) if(ql[i] < M && qr[i] > M){
        ll tmp1 = M - max(L, ql[i]);
        ll tmp2 = min(R, qr[i]) - M;
        ans[i] += tmp1 * tmp2 * x;
    //  cout << tmp1 << ' ' << tmp2 << ' ' << x << endl;
    }
}

int main(void){
    int i,j;
    
    cin >> N >> Q;
    REP(i,N) scanf("%d", &a[i]);
    REP(i,Q){
        scanf("%d%d", &ql[i], &qr[i]);
        ql[i]--;
    }
    
    set <int> s;
    s.insert(0);
    s.insert(N);
    
    vector <pair <int, int> > v;
    for(i=1;i<N;i++){
        int tmp = a[i] - a[i-1];
        if(tmp < 0) tmp = -tmp;
        v.push_back(make_pair(tmp, i));
    }
    
    sort(v.begin(),v.end());
    int sz = v.size();
    
    for(i=sz-1;i>=0;i--){
        ll d = v[i].first;
        int id = v[i].second;
        s.insert(id);
        __typeof(s.begin()) itr = s.find(id);
        itr--;
        int L = *(itr);
        itr++; itr++;
        int R = *(itr);
        query(L, id, R, d);
    }
    
    REP(i,Q) cout << ans[i] << endl;
    
    return 0;
}
