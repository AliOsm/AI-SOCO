#pragma gcc optimize ("o3")
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef double ld;

const int N = 101;
pair<int, int> dp[N][N * N * 2 + 5];
bool vis[N][N * N * 2 + 5];
int n;
int a[N];
int b[N];

pair<int, int> solve(int idx, int rem)
{
    pair<int, int> &ret = dp[idx][rem + N * N];
    if(vis[idx][rem + N * N])
      return ret;
    ret = {0, 0};
    vis[idx][rem + N * N] = 1;
    if(idx == n)
    {
      if(rem == 0)
        return ret = {0, 0};
      else
        return ret = {1e7, 1e7};
    }
    ret = solve(idx + 1, rem + a[idx]);
    for(int i = 0; i <= b[idx] - a[idx]; i++)
    {
      pair<int, int> cur = solve(idx + 1, rem - i);
      cur.first += 1;
      cur.second += i;
      if(cur.first < ret.first || (cur.first == ret.first && cur.second < ret.second))
        ret = cur;
    }
    return ret;
}

int main()
{
  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
  // freopen("input.txt", "r", stdin);
  // freopen("output.txt", "w", stdout);
  cin >> n;
  for(int i = 0; i < n; i++)
    cin >> a[i];
  for(int i = 0; i < n; i++)
    cin >> b[i];
  pair<int, int> ans = solve(0, 0);
  cout << ans.first << ' ' << ans.second;
  return 0;
}
