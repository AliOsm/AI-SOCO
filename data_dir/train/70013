#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/**------------------------------------BITMASK------------------------------------------**/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/**-----------------------------------------------------------------------------------------------**/

/**-----------------------------DIRECTION_ARRAY-------------------------**/
///------FOUR_DIRECTION---------///
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


///------EIGHT_DIRECTION---------///
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/**--------------------------------------------------------------------------------------**/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}


/*****int exgcd(int A, int B, int *X, int *Y){


    int x2, y2, x1, y1, x, y, r, r1, r2, q;
    x2=1; y2=0;
    x1=0; y1=1;
    for(r2=A, r1=B; r1!=0 ; r2=r1, r1=r, x2=x1, y2=y1, x1=x, y1=y){

        q=r2/r1;
        r=r2%r1;
        x=x2-(x1*q);

        y=y2-(y1*q);
    }
    *X=x2;
    *Y=y2;
    return r2;

}******/




///-----------------------------START FROM HERE--------------------------------------///

int arr[200005];
vector<pii>vv[200005];

int n, m, k;
ll t;
bool fnc(int mid){

    ll T=0;
    int sq=0, mx=0;
    for(int i=1; i<=n; i++){
        T++;
        for(int j=0; j<vv[i].size(); j++){
            pii zz=vv[i][j];
            if(zz.ss>arr[mid]){
                //T++;
                mx=max(mx, zz.ff);
            }

        }
        if(i>mx)sq=i;
        else if(i==mx){
            ll zz=i-sq;
            T+=(2ll*zz);
            sq=i;
        }
        //if(mid==3)cout<<i<<"  "<<T<<endl;
    }
    T++;
    if(T<=t)return true;
    return false;
}

int main(){

    scanf("%d %d %d %lld", &m, &n, &k, &t);
    for(int i=1; i<=m; i++)scanf("%d", &arr[i]);
    sort(arr+1, arr+m+1);
    reverse(arr+1, arr+m+1);
    for(int i=1; i<=k; i++){

        int l, r, d;
        scanf("%d %d %d", &l, &r, &d);
        vv[l].pb(make_pair(r,d ));

    }
    arr[0]=200000000;
    int l=1, h=m, ans=0;

    while(l<=h){

        int mid=(l+h)/2;
        bool z=fnc(mid);
        //cout<<mid<<" "<<z<<endl;
        if(z){
            ans=mid;
            l=mid+1;
        }else h=mid-1;

    }
    printf("%d\n", ans);
}
