#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mp(x, y) make_pair(x, y)
#define mod 1000000007
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

vector<ll> fact(ll n) {
    vector<ll> ans;
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            ll ct = 0;
            while (n % i == 0) {
                ct++;
                n /= i;
            }
            ans.push_back(i);
        }
    }
    if (n > 1) {
        ans.push_back(n);
    }
    return ans;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= mod;
       }
       tp *= tp;
       tp %= mod;
       b >>= 1ll;
    }
    return res;
}

ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
   return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
   cout << "YES" << endl;
   exit(0);
}

void no() {
   cout << "NO" << endl;
   exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 2e5 + 5, inf = 9e18;
int days[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt();
    string s;
    cin >> s;
    vector<ll> ct(26, 0);
    for (int i = 0; i < n; i++) {
        ct[s[i] - 'a']++;
    }
    for (int i = 0; i < n; i++) {
        ct[s[i] - 'a']--;
        bool flag = 0;
        for (int j = s[i] - 'a' - 1; j >= 0; j--) {
            if (ct[j]) flag = 1;
        }
        if (flag) {
            for (int j = i + 1; j < n; j++) {
                if (s[i] > s[j]) {
                    return cout << "YES\n" << i + 1 << " " << j + 1, 0;
                }
            }
        }
    }
    no();
    return 0;
}
