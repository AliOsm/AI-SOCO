/*
PROG : milk2
LANG : C++
*/
#include<bits/stdc++.h>
typedef long long ll;
typedef long double ld;
#define pii pair<int, int>
#define pll pair<ll, ll>
#define sync ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define FOR(i, a, b) for(int i = (a);i < (b);i++)
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define fi first
#define se second
#define sqr(a) ((a) * (a))
#define pi 3.1415926535897932
#define read ifstream in("input.txt")
#define write ofstream out("output.txt")
#define vii vector<int>
#define mii map<int, int>

using namespace std;

int n, m, k;
pll dp1[100005], dp2[100005];
ll x[100005];

int main()
{
    //ifstream in("moocast.in");
    //ofstream out("moocast.out");
    cin >> n;
    for(int i = 0;i < n;i++)
        cin >> x[i];

    ll mx1 = x[0], mx2 = x[n - 1];
    dp1[0] = mp(0, x[0]);
    dp2[n - 1] = mp(0, x[n - 1]);
    dp1[-1] = mp(0, 1e18);
    dp2[n] = mp(0, 1e18);
    for(int i = 1;i < n;i++){
        dp1[i] = mp(dp1[i - 1].fi, x[i]);
        if (mx1 >= x[i]){
            mx1++;
            dp1[i] = mp(dp1[i - 1].fi + mx1 - x[i], mx1);
        }
        mx1 = max(mx1, x[i]);
    }

    /*FOR(i, 0, n)
    if (!dp1[i].fi)
        cout << "0         ";
    else
    cout << dp1[i].fi << " ";
    cout << endl;
    FOR(i, 0, n)
    if (!dp1[i].se)
        cout << "0         ";
    else
    cout << dp1[i].se << " ";
    cout << endl;*/

    for(int i = n - 2;i >= 0;i--){
        dp2[i] = mp(dp2[i + 1].fi, x[i]);
        if (mx2 >= x[i]){
            mx2++;
            dp2[i] = mp(dp2[i + 1].fi + mx2 - x[i], mx2);
        }
        mx2 = max(mx2, x[i]);
    }

    /*FOR(i, 0, n)
    if (!dp2[i].fi)
        cout << "0         ";
    else
    cout << dp2[i].fi << " ";cout << endl;
    FOR(i, 0, n)
    if (!dp2[i].se)
        cout << "0         ";
    else
    cout << dp2[i].se << " ";*/

    ll ans = 1e18;
    for(int i = 0;i < n;i++){
        ll cnt = 0;
        if (dp1[i].se != dp2[i + 1].se){
            cnt = dp1[i].fi + dp2[i + 1].fi;
        }
        else{
            cnt = dp1[i].fi + dp2[i + 1].fi + 1;
        }
        ans = min(ans, cnt);
    }

    cout << endl;
    cout << ans;

    return 0;
    ///dont forget about initialization array please
}
