#include <bits/stdc++.h>
#define fi first
#define se second
#define mp make_pair
#define mt make_tuple
#define pb push_back
#define eb emplace_back
#define emp emplace

using namespace std;
using ll = long long;
using ii = pair<int, int>;

const int N = 2010;
char m[N][N];
int n, k;

int ra[N], rb[N];
int ca[N], cb[N];

int a[N][N];

void add(int x, int ia, int ja, int ib, int jb)
{
	a[ia][ja] += x;
	a[ib+1][jb+1] += x;
	a[ia][jb+1] -= x;
	a[ib+1][ja] -= x;
}

int main()
{
	memset(ra, 0x3f, sizeof(ra));
	memset(ca, 0x3f, sizeof(ca));
	memset(rb, -1, sizeof(rb));
	memset(cb, -1, sizeof(cb));

	scanf("%d %d", &n, &k);
	for (int i = 0; i < n; i++)
	{
		scanf("%s", m[i]);
		for (int j = 0; j < n; j++)
		{
			if (m[i][j] == 'B')
			{
				ra[i] = min(ra[i], j);
				rb[i] = max(rb[i], j);
				ca[j] = min(ca[j], i);
				cb[j] = max(cb[j], i);
			}
		}
	}
	int ans = 0;
	for (int i = 0; i < n; i++)
	{
		ans += (rb[i] == -1);
		ans += (cb[i] == -1);
	}

	for (int i = 0; i < n; i++)
	{
		if (rb[i] == -1) continue;
		if (rb[i] - ra[i] + 1 > k) continue;

		int ia = max(i-k+1, 0);
		int ja = max(rb[i]-k+1, 0);
		int ib = min(i, n - k + 1);
		int jb = min(ra[i], n - k + 1);
		
		add(1, ia, ja, ib, jb);
	}

	for (int j = 0; j < n; j++)
	{
		if (cb[j] == -1) continue;
		if (cb[j] - ca[j] + 1 > k) continue;

		int ia = max(0, cb[j] - k + 1);
		int ja = max(0, j - k + 1);
		int ib = min(ca[j], n - k + 1);
		int jb = min(j, n - k + 1);

		add(1, ia, ja, ib, jb);
	}

	int plus = 0;

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			if (i)
				a[i][j] += a[i-1][j];
			if (j)
				a[i][j] += a[i][j-1];
			if (i and j)
				a[i][j] -= a[i-1][j-1];
			
			plus = max(plus, a[i][j]);
		}
	}
	ans += plus;
	printf("%d\n", ans);
	return 0;
}

