#include<bits/stdc++.h>
#define int long long
using namespace std;


const int N = 1e6 + 5, MOD1 = 1e9 + 9, MOD2 = 999888777;

int P1, P2, p1[N], p2[N];
int h1[N], h2[N], rh1[N], rh2[N];
int n, L[N], R[N];


mt19937 rnd(time(nullptr));
inline int my_rnd(int l, int r){
    return rnd() % (r - l + 1) + l;
}
inline pair < int, int > get_hash(int l, int r){
    int hsh1 = (h1[r] - h1[l - 1] + MOD1) % MOD1 * p1[N - r] % MOD1,
        hsh2 = (h2[r] - h2[l - 1] + MOD2) % MOD2 * p2[N - r] % MOD2;
    return make_pair(hsh1, hsh2);
}
inline pair < int, int > get_rev_hash(int l, int r){
    int ll = l, rr = r;
    l = n - rr + 1;
    r = n - ll + 1;
    int hsh1 = (rh1[r] - rh1[l - 1] + MOD1) % MOD1 * p1[N - r] % MOD1,
        hsh2 = (rh2[r] - rh2[l - 1] + MOD2) % MOD2 * p2[N - r] % MOD2;
    return make_pair(hsh1, hsh2);
}
inline bool check(int l, int r){
    return get_hash(l, r) == get_rev_hash(l, r);
}
int ans1, ans2, ans3, ans4;
inline void upd(int l, int r){
    if(ans2 - ans1 + 1 < r - l + 1){
        ans1 = l;
        ans2 = r;
    }
}
inline void upd(int l1, int r1, int l2, int r2){
    if(ans2 - ans1 + 1 + ans4 - ans3 + 1 < r1 - l1 + 1 + r2 - l2 + 1){
        ans1 = l1;
        ans2 = r1;
        ans3 = l2;
        ans4 = r2;
    }
}
main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    P1 = my_rnd(35, 49);
    P2 = my_rnd(35, 49);
    while(P1 == P2){
        P2 = my_rnd(35, 49);
    }
    p1[0] = p2[0] = 1;
    for(int i = 1; i < N; i++){
        p1[i] = p1[i - 1] * P1 % MOD1;
        p2[i] = p2[i - 1] * P2 % MOD2;
    }
    int t;
    cin >> t;
    while(t--){
        string s;
        cin >> s;
        n = (int)s.size();
        for(int i = 1; i <= n; i++){
            h1[i] = (h1[i - 1] + p1[i] * (s[i - 1] - 'a' + 1)) % MOD1;
            h2[i] = (h2[i - 1] + p2[i] * (s[i - 1] - 'a' + 1)) % MOD2;
        }
        reverse(s.begin(), s.end());
        for(int i = 1; i <= n; i++){
            rh1[i] = (rh1[i - 1] + p1[i] * (s[i - 1] - 'a' + 1)) % MOD1;
            rh2[i] = (rh2[i - 1] + p2[i] * (s[i - 1] - 'a' + 1)) % MOD2;
        }
        reverse(s.begin(), s.end());
        ans1 = 0;
        ans2 = -1;
        ans3 = 0;
        ans4 = -1;
        for(int i = 1; i <= n; i++){
            if(check(1, i)){
                upd(1, i);
            }
            if(check(i, n)){
                upd(i, n);
            }
        }
        s = '#' + s;
        for(int i = 1, j = n; i < j; i++, j--){
            if(s[i] != s[j]){
                break;
            }
            upd(1, i, j, n);
            for(int k = i + 1; k < j; k++){
                if(check(i + 1, k)){
                    upd(1, k, j, n);
                }
            }
            for(int k = j - 1; k > i; k--){
                if(check(k, j - 1)){
                    upd(1, i, k, n);
                }
            }
        }
        ///cout << ans1 << " " << ans2 << " " << ans3 << " " << ans4 << "\n";
        cout << s.substr(ans1, ans2 - ans1 + 1) + s.substr(ans3, ans4 - ans3 + 1) << "\n";
    }
}
