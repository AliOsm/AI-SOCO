#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef long double LD;
typedef pair < int, int > PII;
typedef pair < LL, LL > PLL;
typedef pair < LD, LD > PDD;

#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
template < typename _T > inline void _DBG(const char *s, _T x) { cerr << s << " = " << x << "\n"; }
template < typename _T, typename... args > void _DBG(const char *s, _T x, args... a) { while(*s != ',') cerr << *s++; cerr << " = " << x << ','; _DBG(s + 1, a...); }

#ifdef LOCAL
#define DBG(...) _DBG(#__VA_ARGS__, __VA_ARGS__)
#else
#define DBG(...) (__VA_ARGS__)
#define cerr if(0) cout
#endif

// ********************** CODE ********************** //

void solve(int k, int a, int l, int b)
{
    for(int i = 0; i < k * a; i += a)
    {
        for(int j = i; j < i + a; j++)
        {
            if(i == j)
                cout << i + a << " ";
            else
                cout << j << " ";
        }
    }

    swap(k, l), swap(a, b);

    for (int i = l * b; i < k * a + l * b; i += a)
    {
        for (int j = i; j < i + a; j++)
        {
            if (i == j)
                cout << i + a << " ";
            else
                cout << j << " ";
        }
    }

    exit(0);
}

int main()
{
    _upgrade
    LL n, a, b;
    cin >> n >> a >> b;
    LL j = n;
    for(LL i = 0; i * a <= n; i++)
    {
        while(j >= 0 && i * a + j * b > n) j--;
        if(j >= 0 && i * a + j * b == n)
        {
            solve(i, a, j, b);
        }
    }
    cout << "-1\n";
	return 0;
}
