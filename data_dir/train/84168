#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(ll i = (a); i <= (b); i++)
#define fd(i,a,b) for(ll i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<ll,ll>
#define SZ(x) ((ll)x.size())
#define vii vector<pair<ll,ll>>

const ll INF = 1000000002;
const ll INFLL = 100000000000000000ll;
const ll MOD = 1000000007;

// ----------------------------------------------------------------------------------------------------------

ll A[200005], B[200005], N, M, W;

bool ok(ll h)
{
    f(i,1,N) B[i] = 0;
    ll ints = 0, open = 0;
    f(i,1,N)
    {
        open -= B[i];
        ll need = max(h - A[i] - open, 0ll);
        ints += need;
        open += need;
        B[i+W] += need;
    }
    return ints <= M;
}

int main()
{
    cin >> N >> M >> W;
    f(i,1,N) scanf("%I64d", &A[i]);
    ll a = 1, b = 2000000000;
    while(b-a > 1)
    {
        ll p = (a+b) / 2;
        if(ok(p)) a = p;
        else b = p;
    }
    if(ok(a)) cout << a;
    else cout << b;
}
