#include <bits/stdc++.h>
#define base 1000000007LL
#define ll long long
#define X first
#define Y second
#define mp make_pair
#define pb push_back
#define FOR(i,a,b) for(ll i=(a),_b=(b); i<=_b; i++)
#define FORE(i,a,b) for(ll i=(a),_b=(b); i>=_b; i--)

using namespace std;

typedef pair<int, int> II;
typedef vector<II> vi;

struct data {
    ll l, r, cs, f;
} b[200010];

ll n, q, a[200010], part, cnt[1000010], res, p[200010];

bool cmp(data a, data b)
{
    if (a.f == b.f) return a.r < b.r;
    return a.f < b.f;
}
void add(ll u) { res += (1 + 2*cnt[a[u]]++)*a[u]; }
void del(ll u) { res -= (-1 + 2*cnt[a[u]]--)*a[u]; }

int main()
{
    ios::sync_with_stdio(0);
    //freopen("inp.txt", "r", stdin);
    scanf("%I64d %I64d", &n, &q);
    FOR(i,1,n) scanf("%I64d", &a[i]);
    ll k = long(sqrt(n));
    part = n / k + (n % k > 0);
    FOR(i,1,q) {
        scanf("%I64d %I64d", &b[i].l, &b[i].r);
        b[i].cs = i;
        b[i].f = b[i].l / part - (b[i].l % part == 0);
    }
    sort(b+1, b+q+1, cmp);
    ll currL = 1;
    ll currR = 1;
    res = a[1];
    cnt[a[1]]++;
    FOR(i,1,q) {
        while (currR > b[i].r) del(currR--);
        while (currR < b[i].r) add(++currR);
        while (currL < b[i].l) del(currL++);
        while (currL > b[i].l) add(--currL);
        p[b[i].cs] = res;
    }
    FOR(i,1,q) printf("%I64d\n", p[i]);
    return 0;
}
