#include <bits/stdc++.h>
#define MOD 1000000007
#define Nmax 1000005
#define pb push_back
#define mp make_pair
#define INF 2000000000
#define eps 0.000000000001

using namespace std;

int n,k,aib[Nmax],dp[Nmax],a[Nmax],ss[Nmax];
long long l;

struct el
{
    int val,poz;
    bool operator <(const el A) const
    {
        return val<A.val;
    }
} v[Nmax];

inline void Fix(int &x)
{
    if(x>=MOD) x-=MOD;
    if(x<0) x+=MOD;
}

inline long long qry(int p)
{
    int i;
    int sol=0;
    for(i=p;i>0;i-=(i&(-i)))
    {
        sol+=aib[i]; Fix(sol);
    }
    return sol;
}

inline void upd(int p, int val)
{
    int i;
    for(i=p;i<=n;i+=(i&(-i)))
    {
        aib[i]+=val; Fix(aib[i]);
    }
}

inline void Normalize()
{
    int i;
    sort(v+1,v+n+1);
    a[v[1].poz]=1;
    for(i=2;i<=n;++i)
    {
        a[v[i].poz]=a[v[i-1].poz];
        if(v[i].val>v[i-1].val) ++a[v[i].poz];
    }
}

int main()
{
    int i,j,t;
    long long buc,buc1;
    int sol=0;
    #ifndef ONLINE_JUDGE
        freopen ("date.in","r",stdin);
        freopen ("date.out","w",stdout);
    #endif
    cin.sync_with_stdio(0);
    cin>>n>>l>>k;
    for(i=1;i<=n;++i)
    {
        cin>>a[i]; v[i].val=a[i]; v[i].poz=i;
    }
    Normalize();

   // for(i=1;i<=n;++i) cout<<a[i]<<" ";
    //cout<<"\n\n";

    buc1=l/n;
    if(l%n) buc=buc1+1;
    else buc=buc1;
    for(i=1;i<=k && i<=buc;++i)
    {
        for(j=1;j<=n;++j) ss[j]=dp[j];
        for(j=1;j<=n;++j)
        {
            if(i>1)
                dp[j]=qry(a[j]);
            else dp[j]=1;
            //cout<<dp[j]<<" ";
            if(i<=buc1)
            {
                sol+=(1LL*((buc1-i+1)%MOD)*dp[j])%MOD;
                Fix(sol);
            }
            if(j<=l-buc1*n)
            {
                sol+=dp[j]; Fix(sol);
            }
        }
        for(j=1;j<=n;++j) aib[j]=0;
        for(j=1;j<=n;++j)
        {
            //upd(j,(MOD-ss[j])%MOD);
            upd(a[j],dp[j]);
        }
        //cout<<"\n";
    }
    cout<<sol;
    return 0;
}
