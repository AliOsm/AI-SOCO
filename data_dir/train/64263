#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <numeric>
#include <cassert>

const int mod = 998244353;

const int debug = 0;

int solve(const int n, const std::string& s) {
    int cntFront = 1;
    for (int i = 1; i < n && s[i-1] == s[i]; ++i) {
        ++cntFront;
    }
    int cntBack = 1;
    for (int i = n-2; i >= 0 && s[i] == s[i+1]; --i) {
        ++cntBack;
    }
    if (debug) {
        std::cout << "front = " << cntFront << " back = " << cntBack << std::endl;
    }
    int64_t answ = (s.front() == s.back()) * 1LL * cntBack * cntFront % mod;
    answ = (answ + cntFront + cntBack) % mod;
    return int((answ+1) % mod);
}


int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(0); std::cout.tie(0); std::cerr.tie(0);
    int n; std::string s;
    while (std::cin >> n >> s) {
        std::cout << solve(n, s) << std::endl;
    }
    return 0;
}