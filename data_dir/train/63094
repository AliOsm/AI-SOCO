#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include <functional>
#include <iomanip>
#include <iostream>
#include <string>
#include <sstream>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <hash_set>
#include <hash_map>
#include <algorithm>
#include <memory>

//#define NDEBUG
#include <cassert>

#define FILE_READER assert(freopen("input.txt", "r", stdin)); assert(freopen("output.txt", "w", stdout));
#define FAST_READER ios::sync_with_stdio(false); cin.tie(nullptr);
#define all_(v) (v).begin(), (v).end()
#define for_(i, a, b) for (int i = (a); i < (int)(b); i++)
#define ford_(i, a, b) for (int i = (a); i > (int)(b); i--)
#define foreach_(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
#define sz_(v) ((int)(v).size())
#define mp_ make_pair
#define pb_ push_back
typedef long long LL_;
typedef long double LD_;
template<class T> T sqr_(T a) {return a * a;}
template<class T> T abs_(T a) {return a > 0 ? a : -a;}
template<class T> T sgn_(T a) {return a > 0 ? 1 : (a < 0 ? -1 : 0);}

using namespace std;

string s;
string ans;

bool good () {
    int op=0,n=ans.size();
    for (int i=0;i<n;++i){
        if(ans[i]=='('){
            ++op;
        }else{
            --op;
        }
        if(op<0){
            return false;
        }
    }
    return true;
}

int main() {

//#ifndef ONLINE_JUDGE 
    //FILE_READER 
//#endif    
    //assert(freopen("input.txt", "r", stdin)); assert(freopen("output.txt", "w", stdout));

    FAST_READER;

    cin >> s;
    int op,cl,other,pos,n,amt;
    op=cl=other=pos=amt=0;
    n=s.size();
    for (int i = 0; i < n; ++i) {
        if(s[i]=='#'){
            s[i]=')';
            pos=i;
            ++cl;
            ++amt;
        }else{
            if(s[i]==')'){
                ++cl;
            }else{
                ++op;
            }
        }
    }

    if (op < cl) {
        cout << -1;
        return 0;
    }

    for (int i =0 ; i <= pos; ++i) {
        ans.push_back(s[i]);
    }
    for (int i =0 ; i < op-cl;++i) {
        ans.push_back(')');
    }
    for (int i = pos + 1; i < n; ++i) {
        ans.push_back(s[i]);
    }

    if (!good()){
        cout << -1;
    }else{
        for (int i = 0; i + 1 < amt; ++i) {
            cout << 1 << "\n";
        }
        cout << op - cl + 1;
    }
    return 0;
}