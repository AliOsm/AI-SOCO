#include <bits/stdc++.h>

//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>

//using namespace __gnu_pbds;
using namespace std;

//template<typename T>
//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef vector<int> vi;
typedef long long ll;

#define pb push_back
#define inf 0x3f3f3f3f
#define all(v) (v).begin() , (v).end()
#define ones(n) __builtin_popcount(n)
#define watch(x) cout << (#x) << " is " << (x) << endl

int di[] = {0, 0, 1, -1, 1, 1, -1, -1};
int dj[] = {1, -1, 0, 0, -1, 1, 1, -1};

const int N = 1e3 + 5 , M = 2e3 + 5, MOD = 998244353;
int n , k;
int memo[2][2][N][M];
int solve(int i , int cnt , bool f , bool s) {
    if(i == n)
        return cnt == k;

    int &ret = memo[f][s][i][cnt];
    if(~ret)
        return ret;

    if(i == 0) {
        ret = 0;
        for (int x = 0 ;x <= 1 ;x++) {
            for (int y = 0 ;y <= 1 ;y++) {
                ret += solve(i + 1 , cnt + 2 - (x == y), x , y) % MOD;
                ret %= MOD;
            }
        }
    } else {
        ret = solve(i + 1 , cnt , f , s) % MOD;
        ret += solve(i + 1 , cnt + 2 - (f == s) , !f , !s) % MOD;
        ret %= MOD;
        ret += solve(i + 1 , cnt + (f == s) , f , !s) % MOD;
        ret %= MOD;
        ret += solve(i + 1 , cnt + (f == s) , !f , s) % MOD;
        ret %= MOD;
    }

    return ret;
}
int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    scanf("%d%d",&n,&k);
    memset(memo , -1 , sizeof memo);
    printf("%d" , solve(0 , 0 , 0 , 0));
}