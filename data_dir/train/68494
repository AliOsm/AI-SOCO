#include <bits/stdc++.h>

using namespace std;

vector<int> num;
int csum = 0;
void normalize() {
    int ans = 0;
    for (int i = 0; i < 400; i++) {
        if(num[i] > 9) {
            num[i] = 0;
            num[i+1]++;
        }
        ans += num[i];
    }
    csum = ans;
}

void genv(int t) {
    int i = 0;
    while (t) {
        if (t >= 9) {
            num[i] = 9;
            t -= 9;
        } else {
            num[i] = t;
            return;
        }
        i++;
    }
}

void prt() {
    int last = 0;
    for (int i = 0; i < 499; i++) {
        if (num[i] != 0)
            last = i;
    }
    for (int i = last; i >= 0; i--) {
        cout << num[i];
    } cout << endl;
}

void enlarge(int v) {
    int i = 0;
    while (v) {
        int m = 9-num[i];
        if (m <= v) {
            v -= m;
            csum += m;
            num[i] = 9;
        } else {
            num[i] += v;
            csum += v;
            return;
        }
        i++;
    }
}

void shrink(int t) {
    int i = 0;
    while (csum > t) {
        if (num[i] == 0) {
            i++;
            continue;
        }
        num[i] = 0;
        num[i+1]++;
        normalize();
    }
}

int t, n;
int main(void) {
    ios_base::sync_with_stdio(false); num.resize(500);
    cin >> n;
    cin >> t;
    genv(t);
    csum = t;
    prt();
    for (int i = 1; i < n; i++) {
        //cout << "CSUM: " << csum << endl;
        cin >> t;
        num[0]++;
        normalize();
        int v = t-csum;
        //cout << "V: " << v << endl;
        if (v > 0) {
            enlarge(v);
        } else if (v < 0) {
            shrink(t);
            v = t-csum;
            if (v > 0)
                enlarge(v);
        }
        prt();
    }
}
