#include <bits/stdc++.h>
using namespace std;

#define all(x) begin(x), end(x)
#define sz(x) (ll)(x).size()

using ll = long long;
using ld = long double;

string a, b; //a needs to be set
vector<int> longest;

//transformes "aa" to ".a.a." to find even length palindromes
void init() {
    b = string(sz(a) * 2 + 1, '.');
    longest.assign(sz(b), 0);
    for (int i = 0; i < sz(a); i++) {
        b[2 * i + 1] = a[i];
}}

string manacher() {
    int center = 0, last = 0, n = sz(b);
    for (int i = 1; i < n - 1; i++) {
        int i2 = 2 * center - i;
        longest[i] = (last > i) ? min(last - i, longest[i2]) : 0;
        while (i + longest[i] + 1 < n && i - longest[i] - 1 >= 0 &&
                 b[i + longest[i] + 1] == b[i - longest[i] - 1]) {
            longest[i]++;
        }
        if (i + longest[i] > last) {
            center = i;
            last = i + longest[i];
    }}
    //convert lengths to string b (optional)
    //for (int i = 0; i < n; i++) longest[i] = 2 * longest[i] + 1;
    ll l = 0;
    ll r = 0;
    for (ll i = 0; i < sz(b); i++) {
        ll d = min(i, sz(b) - 1 - i);
        if (d == longest[i] && r-l < 2*d+1) {
            l = i - d;
            r = i + d + 1;
        }
    }
    return b.substr(l, r - l);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    ll t;
    cin >> t;
    for (ll i = 0; i < t; i++) {
        string s;
        cin >> s;
        ll l = 0;
        while (l < sz(s) - 1 - l && s[l] == s[sz(s) - 1 - l]) l++;
        string pref = s.substr(0, l);
        a = s.substr(l, sz(s) - 2*l);
        init();
        cout << pref;
        s = manacher();
        for (char c : s) {
            if (c != '.') cout << c;
        }
        reverse(all(pref));
        cout << pref << endl;
    }
}
