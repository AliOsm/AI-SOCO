#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <string.h>
#include <cstdlib>
#include <ctime>
#include <assert.h>
#include <unordered_map>
#include <unordered_set>

typedef long long ll ;
using namespace std;
vector<ll> v;
ll dp[1<<18][100],n,m;
ll bt(ll mask,ll rem)
{
    if(mask==(1LL<<n)-1LL)
    {
        if(rem==0)
            return 1;
        return 0;
    }
    if(dp[mask][rem]!=-1)
        return dp[mask][rem];
    ll ret=0,i,k;
    for(int h=0; h<=9; h++)
    {
        if(mask==0&&h==0)
            continue;
        i=-1;
        for(k =0; k<n; k++)
        {
            if(((1LL<<k)&mask)==0&&v[k]==h)
            {
                i=k;
                break;
            }
        }
        if(i!=-1)
        {
            ret+=bt(((1LL<<i)|mask),(rem*10+v[i])%m);
        }
    }
    return dp[mask][rem]=ret;
}

int main()
{
    //std::cin.tie(0);
    //std::ios::sync_with_stdio(false);
    //freopen("farm.in", "r", stdin);
    //freopen("farm.out", "w", stdout);
    ll x;
    cin >> x>>m;
    while(x)
    {
        v.push_back(x%10);
        x/=10;
    }
    n=v.size();
    memset(dp,-1,sizeof dp);
    cout << bt(0,0) << endl;
    return 0;
}
