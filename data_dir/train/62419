//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
//#pragma GCC opatimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#pragma GCC diagnostic ignored "-Wmissing-declarations"
#define FINAL_OUT(x) {cout << (x) << '\n'; exit(0); }
inline int safe_mul(const int x, const int y) __attribute__ ((warn_unused_result));

int const maxn = 205;
vector<int> gr[maxn];
int a[maxn];

inline void maxs(int&x, const int y) {
    if (x < y)
        x = y;
}

vector<int> dfs(int k, int v, int p = -1) {
    vector<int> res(k+1, 0);
    res[0] = a[v];
    for (int ne : gr[v])
    if (ne != p) {
        auto cur = dfs(k, ne, v);
        vector<int> nres(k+1,0);

        for (int in = 0; in <= k; ++in) {
            maxs(nres[min(in + 1, k)], cur[in]);
            for (int iv = 0; iv <= k; ++iv)
                if (iv + in >= k)
                    maxs(nres[min(iv, in + 1)], res[iv] + cur[in]);
        }
        for (int i = 0; i <= k; ++i)
            maxs(res[i], nres[i]);
    }

    return res;
}

int main() {
//    freopen("in.txt","r", stdin);
//    cout << fixed << setprecision(15);
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);

    int n, k;
    cin >> n >> k;

    for (int i = 1; i <= n; ++i)
        cin >> a[i];

    for (int i = 1; i < n; ++i) {
        int x,y;
        cin >> x >> y;
        gr[x].push_back(y);
        gr[y].push_back(x);
    }

    auto res = dfs(k, 1);
    cout << *max_element(begin(res), end(res)) << endl;
}
