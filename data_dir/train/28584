#include <bits/stdc++.h>
#define LL long long
using namespace std;

vector<int> primes;
const int N = 1.5e7+9;
bool isp[N];

void sieve()
{
    fill(isp, isp+N, 1);
    isp[0] = isp[1] = 0;

    for (int i=2; i*i<N; i++)
        if (isp[i])
            for (int j = i*i; j<N; j+=i)
                isp[j] = 0;

    for (int i=2; i<N; i++)
        if (isp[i])
            primes.push_back(i);
}

int a[N];

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    sieve();

    int n;
    cin>>n;
    map<int, vector<int> > mp;

    for (int i=1; i<=n; i++)
    {
        cin>>a[i];
        int x = a[i];
        for (auto p: primes) {
            if (p*p > x)    break;
            int cnt = 0;
            while (x%p==0)
                cnt++,
                x/=p;
            if (cnt)    mp[p].push_back(cnt);
        }
        if (x>1)        mp[x].push_back(1);
    }
    int ans = n;

    for (auto &pr: mp) {
        int p = pr.first;
        vector<int> v = pr.second;
        int mn = 1e9+7, cnt;
        if (v.size() < n) {
            mn = 0;
            cnt = n - v.size();
        }
        else {
            for (int i=0; i<n; i++)
                if (v[i] < mn)          mn = v[i], cnt = 1;
                else if (v[i] == mn)    cnt++;
        }
        ans = min(ans, cnt);
    }
    if (ans >= n)   ans = -1;
    cout<<ans<<endl;
}
