#include <bits/stdc++.h>

using namespace std;

const int N = 150 + 5;
int sp[N][N];
int n;
vector<int>vec;
stack<int>st;
int main() {
    cin.tie(0);
    cin.sync_with_stdio(0);

    cin>>n;
    for(int i = 1 ; i<=n ; ++i)
        for(int j = 1 ; j<=n ; ++j) sp[i][j] = 1e8;

    string s;

    for(int i = 1 ; i<=n ; ++i)
    {
        cin>>s;
        for(int j = 0 ; j<n ; ++j)
        {
            if(s[j] == '1') sp[i][j+1] = 1;
        }
    }

    for(int k = 1 ; k<=n ; ++k)
    {
        for(int i = 1 ; i<=n ; ++i)
        {
            for(int j = 1 ; j<=n ; ++j)
            {
                if(i== j) continue;
                sp[i][j] = min(sp[i][j] , sp[i][k] + sp[k][j]);
            }
        }
    }


    int m;
    cin>>m;
    for(int i = 0 ; i<m ; ++i)
    {
        int x;
        cin>>x;
        vec.push_back(x);
    }

    st.push(vec[m-1]);
    st.push(vec[m-2]);

    for(int i = m-3 ; i>=0 ; --i)
    {
        while(st.size() > 1)
        {
            int x = st.top();
            st.pop();
            int y = st.top();
            int z = vec[i];
            if(sp[z][y] == sp[z][x] + sp[x][y])
            {
                continue;
            }
            else
            {
                st.push(x);
                break;
            }
        }
        st.push(vec[i]);
    }
    vec.clear();
    cout<<st.size()<<endl;
    while(!st.empty()) {
        printf("%d " , st.top());
        st.pop();
    }

    return 0;
}
