#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 200200 , L = 20 ;
int n ;
int p[N][L];
ll s[N][L] , a[N] , cnt[N] ;
vector<int>v[N];

ll sum(int u,int k){
ll ret=0ll;
for(int i=0;i<L;i++)
    if( k&( 1<<i ) ){
        ret+=s[u][i];
        u=p[u][i];
    }
return ret;
}

bool ok(int u,int k){
return sum(u,k) <= a[u];
}

void add(int u,int k){
cnt[ p[u][0] ]++;
for(int i=0;i<L;i++)
    if( k&( 1<<i ) ){
        u=p[u][i];
    }
cnt[ p[u][0] ]--;
}

void dfs(int u){

for(auto w:v[u]){
        dfs(w);
    cnt[u]+=cnt[w];
}
}


int main(){

scanf("%d",&n);
for(int i=1;i<=n;i++)
scanf("%lld",a+i);
for(int i=2;i<=n;i++){
    scanf("%d %lld",&(p[i][0]),&(s[i][0]));
v[ p[i][0] ].push_back(i);
}
p[0][0]=0;
s[0][0]=1ll<<33;
p[1][0]=0;
s[1][0]=1ll<<33;


for(int j=1;j<L;j++)
    for(int i=1;i<=n;i++){
        p[i][j]=p[ p[i][j-1] ][j-1];
        s[i][j]=s[i][j-1]+ s[ p[i][j-1] ][j-1];
    }

for(int i=2;i<=n;i++){

    int low=0 , high = 1<<30;
    while( low < high ){
        int mid = low+high+1>>1;
        if( ok(i,mid) )low=mid;
        else high=mid-1;
    }
    add( i , high );
}
dfs(1);
for(int i=1;i<=n;i++)
    printf("%lld%c",cnt[i], ( i==n )?'\n':' ' );
return 0;
}
