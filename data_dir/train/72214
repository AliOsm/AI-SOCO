#include <bits/stdc++.h>
using namespace std;
#define int long long
vector<int> par;
int root(int x) {
    return (par[x]==x)?x:(par[x]=root(par[x]));
}
void join(int x, int y) {
    par[root(x)] = root(y);
}
int32_t main() {
    ios::sync_with_stdio(false);cin.tie(0);
    int n,m,x,y;
    cin>>n>>m;
    // dsu init
    par.resize(n+1);
    for(int i=1;i<=n;i++) {
        par[i] = i;
    }
    vector<int> cost(n+1);
    for(int i=1;i<=n;i++) cin>>cost[i];
    for(int i=0;i<m;i++) {
        cin>>x>>y;
        join(x,y);
    }
    vector<int> vals(n+1,-1);
    for(int i=1;i<=n;i++) {
        int loc = root(i);
        if(vals[loc]!=-1) {
            vals[loc] = min(vals[loc], cost[i]);
        } else
            vals[loc] = cost[i];
    }
    int ans = 0;
    for(int i=1;i<=n;i++) {
        ans += max(0ll, vals[i]);
    }
    cout<<ans;
    return 0;
}