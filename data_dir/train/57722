#include <bits/stdc++.h>
	
	
	using namespace std;
	#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);srand(time(NULL));
	
	#define ll long long
	#define do double
	#define ff first
	#define ss second
	#define FOR(a,n) for(i=0;i<n;i++){	cin>>a[i];}
	#define pb push_back
	#define mp make_pair
	#define inf LONG_LONG_MAX
	#define mod 1000000007 
	

	
ll count(ll n)
{
	ll k=n,s=0;
	while(k>0)
	{
		s+=k%10;
		k/=10;	
	}
	return s;
}
ll div(ll n)
{
	for(ll i=2;i*i<=n;i++)
	{
		if(n%i==0)
		{	//cout<<"ZZ"<<n<<endl;
			return n/i;
		}
	}
	return 0;
}

ll d,x,y;
void extendedEuclid(ll A, ll B) 
{
    if(B == 0) {
        d = A;
        x = 1;
        y = 0;
    }
    else {
        extendedEuclid(B, A%B);
        int temp = x;
        x = y;
        y = temp - (A/B)*y;
    }
}
/*
vector<vector<ll> > v(200010);
map<ll,ll> vis,num;

void bfs(ll n)
{
	ll i;
	queue<ll> q;
	q.push(n);
	//cout<<endl<<endl<<endl;
	while(q.size()>0)
	{
		ll x=q.front();
		vis[x]=1;
		q.pop();
		for(i=0;i<v[x].size();i++)
		{
			if(vis[v[x][i]]==0)
			{
				cout<<x<<" "<<v[x][i]<<endl;
				q.push(v[x][i]);
				vis[v[x][i]]=1;
			}
		}
	}
	
}*/

ll power(ll x,ll y, ll p) 
{ 
    ll res = 1; 
    x = x % p;
    while (y > 0) 
    {  // If y is odd, multiply x with result 
        if (y & 1) 
            res = (res*x) % p;
            
        y = y>>1; 
        x = (x*x) % p;   
    } 
    return res; 
} 
ll isPrime(ll n)
		{
		    
		   if(n==0 || n==1)
		   return 0;
		    if (n%2 == 0) 
		    	return 2;
		    
		    if(n%3==0)
		        return 3;
		 
		    for (ll i=5; i*i<=n; i=i+6)
		    {
		        if (n%i == 0)
		           return i;
		        if (n%(i+2) == 0)
		           return i+2;
		    }
		    
		    return n;
		}

map<pair<ll,ll> ,ll> vis;
ll v[100][100];
vector<pair<ll,ll> > set1,set2;
ll dfs(pair<ll,ll> p,ll n)
{
	
	stack<pair<ll,ll> > s;
	set1.pb(p);
	s.push(p);
    vis[p]=1;
	while(s.size()>0)
	{
		pair<ll,ll> x=s.top();
		s.pop();
		ll i=x.ff,j=x.ss;
		if(i>0 && v[i-1][j]==0 && vis[mp(i-1,j)]==0)
		{
			s.push(mp(i-1,j));
			set1.pb(mp(i-1,j));
			vis[mp(i-1,j)]=1;
		}
		if(i<n-1 && v[i+1][j]==0 && vis[mp(i+1,j)]==0)
		{
			s.push(mp(i+1,j));
			set1.pb(mp(i+1,j));
			vis[mp(i+1,j)]=1;
		}
		if(j>0 && v[i][j-1]==0 && vis[mp(i,j-1)]==0)
		{
			s.push(mp(i,j-1));
			set1.pb(mp(i,j-1));
			vis[mp(i,j-1)]=1;
		}
		if(j<n-1 && v[i][j+1]==0 && vis[mp(i,j+1)]==0)
		{
			s.push(mp(i,j+1));
			set1.pb(mp(i,j+1));
			vis[mp(i,j+1)]=1;
		}
	}
	
}

ll dfs1(pair<ll,ll> p,ll n)
{
	
	stack<pair<ll,ll> > s;
	set2.pb(p);
	s.push(p);
    vis[p]=1;
	while(s.size()>0)
	{
		pair<ll,ll> x=s.top();
		s.pop();
		ll i=x.ff,j=x.ss;
		if(i>0 && v[i-1][j]==0 && vis[mp(i-1,j)]==0)
		{
			s.push(mp(i-1,j));
			set2.pb(mp(i-1,j));
			vis[mp(i-1,j)]=1;
		}
		if(i<n-1 && v[i+1][j]==0 && vis[mp(i+1,j)]==0)
		{
			s.push(mp(i+1,j));
			set2.pb(mp(i+1,j));
			vis[mp(i+1,j)]=1;
		}
		if(j>0 && v[i][j-1]==0 && vis[mp(i,j-1)]==0)
		{
			s.push(mp(i,j-1));
			set2.pb(mp(i,j-1));
			vis[mp(i,j-1)]=1;
		}
		if(j<n-1 && v[i][j+1]==0 && vis[mp(i,j+1)]==0)
		{
			s.push(mp(i,j+1));
			set2.pb(mp(i,j+1));
			vis[mp(i,j+1)]=1;
		}
	}
	
}

int main()
{
	fast
	ll n,i,j;
	cin>>n;
	ll r1,c1,r2,c2;
	cin>>r1>>c1>>r2>>c2;
	
	for(i=0;i<n;i++)
	{
		string s;
		cin>>s;
		for(j=0;j<n;j++)
		{
			v[i][j]=s[j]-'0';
		}
	}
	pair<ll,ll> p;
	p=mp(r1-1,c1-1);
	dfs(p,n);
	p=mp(r2-1,c2-1);
	dfs1(p,n);
	ll ans=inf;
	for(i=0;i<set1.size();i++)
	{
	    for(j=0;j<set2.size();j++)
	    {
	        ll t;
	        t=(set1[i].ff-set2[j].ff)*(set1[i].ff-set2[j].ff) + (set1[i].ss-set2[j].ss)*(set1[i].ss-set2[j].ss);
	        
	        ans=min(ans,t);
	        //cout<<t<<endl;
	    }
	}
	cout<<ans;
	
}