#include <bits/stdc++.h>
using namespace std;
const int MAXN=1010;
int n,m,a[MAXN][MAXN],b[MAXN][MAXN],c[MAXN][MAXN],d[MAXN][MAXN],table[MAXN][MAXN],ans,help,p;
void fill()
{
	//filling a
	for(int j=1;j<=m;j++)
	{
		a[1][j]=a[1][j-1]+table[1][j];
	}
	for(int i=1;i<=n;i++)
	{
		a[i][1]=a[i-1][1]+table[i][1];
	}
	for(int i=2;i<=n;i++)
	{
		for(int j=2;j<=m;j++)
		{
			a[i][j]=max(a[i-1][j],a[i][j-1])+table[i][j];
		}
	}
	//done
	//filling b
	for(int j=m;j>=1;j--)
	{
		b[n][j]=b[n][j+1]+table[n][j];
	}
	for(int i=n;i>=1;i--)
	{
		b[i][m]=b[i+1][m]+table[i][m];
	}
	for(int i=n-1;i>=1;i--)
	{
		for(int j=m-1;j>=1;j--)
		{
			b[i][j]=max(b[i+1][j],b[i][j+1])+table[i][j];
		}
	}
	//done
	//filling c
	for(int j=1;j<=m;j++)
	{
		c[n][j]=c[n][j-1]+table[n][j];
	}
	for(int i=n;i>=1;i--)
	{
		c[i][1]=c[i+1][1]+table[i][1];
	}
	for(int i=n-1;i>=1;i--)
	{
		for(int j=2;j<=m;j++)
		{
			c[i][j]=max(c[i][j-1],c[i+1][j])+table[i][j];
		}
	}
	//done
	//filling d
	for(int j=m;j>=1;j--)
	{
		d[1][j]=table[1][j]+d[1][j+1];
	}
	for(int i=1;i<=n;i++)
	{
		d[i][m]=table[i][m]+d[i-1][m];
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=m-1;j>=1;j--)
		{
			d[i][j]=max(d[i-1][j],d[i][j+1])+table[i][j];
		}
	}
	//done
}
void pr()
{
	
	cout<<"A"<<endl;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cout<<a[i][j]<<" ";
		}
		cout<<endl;
	}
	cout<<"B"<<endl;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cout<<b[i][j]<<" ";
		}
		cout<<endl;
	}
	cout<<"C"<<endl;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cout<<c[i][j]<<" ";
		}
		cout<<endl;
	}
	cout<<"D"<<endl;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cout<<d[i][j]<<" ";
		}
		cout<<endl;
	}
	cout<<endl;
}
int main()
{
	cin>>n>>m;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			cin>>table[i][j];
		}
	}
	fill();
	for(int i=2;i<n;i++)
	{
		for(int j=2;j<m;j++)
		{
			help=max(a[i][j-1]+b[i][j+1]+c[i+1][j]+d[i-1][j],a[i-1][j]+b[i+1][j]+c[i][j-1]+d[i][j+1]);
			ans=max(ans,help);
		}
	}
	printf("%d\n",ans);
	return 0;
}
