// KALAM
# include <bits/stdc++.h>

using namespace std;
const int N = 1e3 + 77  , Mod = 1e9 + 7;
int n , dis[N][N] , s , t , m;
bool adj[N][N];
vector < int > a[N];
void bfs(int st){
	for(int i = 0;i < N;i++)dis[st][i] = Mod;
	dis[st][st] = 0;
	deque < int > dq;
	dq.push_back(st);
	while(dq.size()){
		int v = dq.front();dq.pop_front();
		for(int u : a[v]){
			if(dis[st][u] > dis[st][v] + 1){
				dq.push_back(u);
				dis[st][u] = dis[st][v] + 1;
			}
		}
	}
}
int main(){
	ios_base::sync_with_stdio(false);cin.tie(0);
	cin >> n >> m >> s >> t;
	for(int i = 1;i <= m;i++){
		int v , u;cin >> v >> u;
		a[v].push_back(u);
		a[u].push_back(v);
		adj[v][u] = adj[u][v] = true;
	}
	for(int i = 1;i <= n;i++){
		bfs(i);
	}
	int A = 0;
	for(int i = 1;i <= n;i++){
		for(int j = i + 1;j <= n;j++){
			
			if(adj[i][j])continue;
			if(dis[i][s] + dis[j][t] < dis[s][t] - 1 || dis[i][t] + dis[j][s] < dis[s][t] - 1)continue;
			A++;
		}
	}
	cout << A;
	return 0;
}