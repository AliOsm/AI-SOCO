#include <bits/stdc++.h>
#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mp(x, y) make_pair(x, y)
#define mod 1000000007
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

vector<ll> fact(ll n) {
    vector<ll> ans;
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            ll ct = 0;
            while (n % i == 0) {
                ct++;
                n /= i;
            }
            ans.push_back(i);
        }
    }
    if (n > 1) {
        ans.push_back(n);
    }
    return ans;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= mod;
       }
       tp *= tp;
       tp %= mod;
       b >>= 1ll;
    }
    return res;
}

ll vec_mult(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3) {
   return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
   cout << "YES" << endl;
   exit(0);
}

void no() {
   cout << "NO" << endl;
   exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 2e5 + 5, inf = 9e18;
int days[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

ll dx[] = {0, 1, 1, 1, 2};
ll dy[] = {0, 1, -1, 0, 0};
bool prefix_function (vector<ll> s) {
	int n = s.size();
	vector<int> pi(n);
	for (int i = 1; i < n - 1; ++i) {
		int j = pi[i - 1];
		while (j > 0 && s[i] != s[j])
			j = pi[j - 1];
		if (s[i] == s[j])
            ++j;
		pi[i] = j;
		if (pi[i] * 2 == s.size()) return 1;
	}
	return 0;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt(), m = nxt();
    vector<vector<ll>> a(n);
    while (m--) {
        ll x = nxt() - 1, y = nxt() - 1;
        if (x > y) swap(x, y);
        a[x].push_back(y - x);
        a[y].push_back(x - y + n);
    }
    vector<ll> s;

    for (auto x : a) {
        vector<ll> t = x;
        sort(all(t));
        for (auto y : t) {
            s.push_back(y);
        }
        s.push_back(inf);
    }
    for (auto x : a) {
        vector<ll> t = x;
        sort(all(t));
        for (auto y : t) {
            s.push_back(y);
        }
        s.push_back(inf);
    } 
    if (prefix_function(s)) ok();
    no();

    return 0;
}
