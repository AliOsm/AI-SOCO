//Itâ€™s never too late to become what you might have been....
 #include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define inf 1000000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 1000001

struct st
{
	int x,y,type,id;
};
st a[maxn];

bool way(st p,st q)
{
	if(p.x!=q.x)
	return p.x<q.x;
	return p.type>q.type;
}
set<pair<ll,ll> >s;
ll maxi[maxn],ans[maxn];

int main()
{
	boost1;boost2;	
	ll i,j,n,x,y,type,id,id1,m;
	cin>>n;
	for(i=1;i<=n;i++)
	{
		cin>>a[i].x;
		cin>>a[i].y;
		a[i].type=0;
		a[i].id=i;
	}
	cin>>m;
	for(i=1;i<=m;i++)
	{
		cin>>a[i+n].x;
		cin>>a[i+n].y;
		a[i+n].type=1;
		a[i+n].id=i;
		cin>>maxi[i];
	}
	sort(a+1,a+n+m+1,way);
	for(i=1;i<=n+m;i++)
	{
		x=a[i].x;
		y=a[i].y;
		type=a[i].type;
		id=a[i].id;
		if(type==1)
		s.insert(mp(y,id));
		else
		{
			if(s.lower_bound(mp(y,0))==s.end())
			{
				cout<<"NO";
				return 0;
			}
			pair<ll,ll> p=*s.lower_bound(mp(y,0));
			id1=p.S;
			maxi[id1]--;
			if(maxi[id1]==0)
			s.erase(p);
			ans[id]=id1;
		}
	}
	cout<<"YES"<<endl;
	for(i=1;i<=n;i++)
	cout<<ans[i]<<" ";
	return 0;
}
