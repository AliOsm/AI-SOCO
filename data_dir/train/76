#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end())
#define cpresent(s,x) (find(all(s),x) != s.end())
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;

int d[5005][5005];int p[5005][5005];
vector<pll> v[5005];

int main()
{ios_base::sync_with_stdio(false);
int n,m;
ll t;
cin>>n>>m>>t;

while(m--)
{
	int a,b,c;
	cin>>a>>b>>c;
	v[a].pb(mp(b,c));
}
rep(i,0,5004)rep(j,0,5004)d[i][j]=1e9+7;

	d[1][0] = 0;
	priority_queue < pair<int,pii> > q;
	q.push (make_pair (0, mp(1,0)));
	while (!q.empty()) 
	{
		int at = q.top().second.ff,  cur_d = -q.top().first;
		int kk=q.top().ss.ss;
		q.pop();
		if (cur_d > d[at][kk])  continue;
		if(cur_d>t)continue;
 
		for (size_t j=0; j<v[at].size(); ++j) 
		{
			int to = v[at][j].first;
				ll len = v[at][j].second;
				ll k1=d[at][kk];
				k1+=len;
				if(k1>t)continue;
			if (d[at][kk] + len < d[to][kk+1]) 
			{
				d[to][kk+1] = d[at][kk] + len;
				p[to][kk+1]=at;
				q.push (make_pair (-d[to][kk+1], mp(to,kk+1)));
			}
		}
	}

int ans=0;

rep(i,0,5004)
if(d[n][i]<=t)ans=i;

ol(ans+1);on;

int at=n;

vii v1;
v1.pb(n);

rep(i,1,ans)
{
	at=p[at][ans-i+1];
	v1.pb(at);
}

reverse(all(v1));
tr(v1,it)
{
	ol(*it);os;
}

return 0;
}

