#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <memory.h>
#include <cassert>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (b); i++)
#define forn(i, n) forr(i, 0, n)
#define sz(c) ((int)c.size())
#define forall(it,v) for(auto it=v.begin();it!=v.end();++it)
#define pb push_back
#define fst first
#define snd second
typedef long long ll;
#define dforn(i, n) for(int i = n - 1; i >= 0; i--)
#define dprint(v) cout << #v"=" << v << endl

const int MAXN = 256;

string s;
int bucket[MAXN], mn, mx, tipos;

int main() {
    //~ freopen("input.in", "r", stdin);
    while(cin >> s){
        memset(bucket, 0, sizeof bucket);
        mn = 200050;
        mx = 0;
        tipos = 0;
        
        forn(i, (int)s.size()){
            bucket[ s[i] - 'a' ]++;
        }
        forn(i, MAXN){
            if(bucket[i]){
                tipos++;
                mx = max(bucket[i], mx);
                mn = min(bucket[i], mn);
            }
        }
        
        switch(tipos){
            case 1:
                puts("No");
                break;
            case 2:
                printf("%s\n", mn >= 2 ? "Yes" : "No");
                break;
            case 3:
                printf("%s\n", mx >= 2 ? "Yes" : "No");
                break;
            case 4:
                puts("Yes");
                break;
            default:
                puts("No");
        }
    }
    return 0;
}
