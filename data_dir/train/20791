#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 100000 + 10;
const int M = 1000000007;
const double PI = atan(1) * 4;
const int oo = 1000000000;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
#define pb push_back 
#define all(c) (c).begin(),(c).end()
int n,m,k,w,cst[1001][1001], bst[1001], vis[1001];
struct node{
	int u, cst, prt;
	node(int a, int b, int c){
		u=a;cst=b;prt=c;
	}
	bool operator<(const node&e)const{
		if(cst==e.cst)
			return u>e.u;
		return cst>e.cst;
	}
};
vector<vector<string> > v;

void dijk(){
	priority_queue<node> q;
	for(int i=0; i<k; ++i){
		q.push(node(i,n*m,-1));
		bst[i]=n*m;
	}
	vector<ii> g;
	int ans=0;
	while(!q.empty()){
		node cur=q.top();
		q.pop();
		if(vis[cur.u])continue;
		vis[cur.u]=true;
		ans+=cur.cst;
		g.pb(ii(cur.u+1,cur.prt+1));
		for(int i=0; i<k; ++i){
			if(i==cur.u)continue;
			int ncst=cst[cur.u][i];
			if(ncst<bst[i]){
				bst[i]=ncst;
				q.push(node(i,ncst,cur.u));
			}
		}
	}
	cout<<ans<<endl;
	for(int i=0; i<k; ++i)
		printf("%d %d\n", g[i].first, g[i].second);
}
int get(int a, int b){
	int cur=0;
	for(int i=0; i<n; ++i)
		for(int j=0; j<m; ++j)
			cur+=v[a][i][j]!=v[b][i][j];
	return cur;
}
int main(){
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	cin>>n>>m>>k>>w;
	v.resize(k);
	for(int i=0; i<k; ++i){
		v[i].resize(n);
		for(int j=0; j<n; ++j)
			cin>>v[i][j];
	}
	for(int i=0; i<k; ++i)
		for(int j=0; j<i; ++j)
			cst[i][j]=cst[j][i]=get(i,j)*w;
	dijk();
}


