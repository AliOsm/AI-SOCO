#include <cstdio>
#include <memory.h>
#include <cstring>
#include <vector>
#include <deque>
#include <cstdlib>
#include <queue>
#include <algorithm>
#include <cmath>
#include <cassert>
#include <functional>
#include <iostream>
#include <set>
#include <list>
#include <map>
#include <time.h>
#include <unordered_map>
#include <unordered_set>
#include <bitset>
#define sz(x) (int)(x).size()
#define all(x) (x).begin(), (x).end()
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef pair<int, int> pii;
typedef pair<int, pii> piii;
typedef pair<ll, ll> pll;
typedef pair<ll, int> pli;
typedef pair<int, ll> pil;
typedef pair<string, int> psi;
typedef pair<char, int> pci;
typedef pair<int, char> pic;
const ll MOD = (ll)1e9 + 7;
const long double PI = 3.141592653589793238462643383279502884197;

priority_queue<int, vector<int>, greater<int> > pq;
vector<pii> ans;

int vec[300001];
int now[300001];
int n;

int op(int o) {
	if (n / 2 >= o) return n;
	else return 1;
}

int oop(int o) {
	if (n / 2 >= o) return n;
	else return 1;
}

void sw(int a, int b) {
	if (op(a) == op(b)) {
		ans.push_back({ a, op(a) });
		ans.push_back({ b, op(b) });
		ans.push_back({ a, op(a) });
	}
	else if (abs(a - b) >= n / 2) {
		ans.push_back({ a, b });
	}
	else {
		ans.push_back({ a, op(a) });
		ans.push_back({ b, op(b) });
		ans.push_back({ op(a), op(b) });
		ans.push_back({ a, op(a) });
		ans.push_back({ b, op(b) });
	}
	swap(now[vec[a]], now[vec[b]]);
	swap(vec[a], vec[b]);
}

int main() {
	scanf("%d", &n);

	for (int i = 1; i <= n; i++) {
		scanf("%d", &vec[i]);
		now[vec[i]] = i;
	}

	for (int i = 1; i <= n; i++) {
		if (i == vec[i]) continue;
		// printf("%d %d//\n", i, now[i]);
		sw(i, now[i]);
	}

	printf("%d\n", sz(ans));
	for (int i = 0; i < sz(ans); i++)
		printf("%d %d\n", ans[i].first, ans[i].second);
}