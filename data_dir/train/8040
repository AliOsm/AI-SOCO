#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

vector<string> v;
int x,y;
bool vis[15];
int f[5][5];
void dfs(int pos,string s)
{
	if (pos==5)
	{
		v.push_back(s);
		return;
	}
	for (int i=0;i<10;++i)
	{
		if (vis[i]) continue;
		vis[i]=true;
		char ch='0'+i;
		dfs(pos+1,s+ch);
		vis[i]=false;
	}
}
void change(string s,int x,int y)
{
	vector<string> vv;
	vv.clear();
	for (int i=0;i<v.size();++i)
	{
		int dqx,dqy;
		dqx=dqy=0;
		for (int j=0;j<4;++j) if (s[j]==v[i][j]) dqx++;
		for (int j=0;j<4;++j) vis[v[i][j]-'0']=true;
		for (int j=0;j<4;++j) if (vis[s[j]-'0']) dqy++;
		dqy-=dqx;
		for (int j=0;j<4;++j) vis[v[i][j]-'0']=false;
		if (dqx==x&&dqy==y) vv.push_back(v[i]);
	}
	v.clear();
	for (int i=0;i<vv.size();++i) v.push_back(vv[i]);
}
int calc(int x)
{
	for (int i=0;i<=4;++i)
		for (int j=0;j<=4;++j) f[i][j]=0;
	for (int i=0;i<v.size();++i)
	{
		int dqx,dqy;
		dqx=dqy=0;
		for (int j=0;j<4;++j) if (v[x][j]==v[i][j]) dqx++;
		for (int j=0;j<4;++j) vis[v[i][j]-'0']=true;
		for (int j=0;j<4;++j) if (vis[v[x][j]-'0']) dqy++;
		dqy-=dqx;
		for (int j=0;j<4;++j) vis[v[i][j]-'0']=false;
		f[dqx][dqy]++;
	}
	int maxx=0;
	for (int i=0;i<=4;++i)
		for (int j=0;j<=4;++j) maxx=max(maxx,f[i][j]);
	return maxx;
}
int main()
{
	srand(time(0));
	for (int i=0;i<10;++i) vis[i]=false;
	v.clear();
	dfs(1,"");
	while (true)
	{
		int minx=1e9,id;
		for (int i=0;i<v.size();++i)
		{
			if (calc(i)<minx)
			{
				minx=calc(i);
				id=i;
			}
		}
		cout<<v[id]<<endl;
		fflush(stdout);
		scanf("%d%d",&x,&y);
		if (x==4&&y==0) break;
		change(v[id],x,y);
	}
	return 0;
}