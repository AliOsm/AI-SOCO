#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back
#define last sjdkfljsdlf
#define next kfdsjflsdfd

typedef long long ll;
typedef pair<int, int> pii;

int n, m;
ll dp[19][1 << 19];
int g[19][19];

inline int getBit(int mask, int bit) {
  return mask >> bit & 1;
}

int main() {
#ifdef LOCAL
  freopen("input.txt", "r", stdin);
#endif
  scanf("%d%d", &n, &m);
  for (int i = 0, a, b; i < m; ++i) {
    scanf("%d%d", &a, &b);
    --a; --b;
    g[a][b] = g[b][a] = 1;
  }
  ll res = 0;
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j <= i; ++j)
      memset(dp[j], 0, sizeof(int) * (1 << (i + 1)));
    dp[i][1 << i] = 1;               
    for (int mask = 0; mask < 1 << (i + 1); ++mask) {
      for (int last = 0; last <= i; ++last) {
        if (getBit(mask, last) == 0) continue;
        if (g[i][last]) {
          res += dp[last][mask];
        }
        for (int next = 0; next < i; ++next) {
          if (g[last][next] && getBit(mask, next) == 0) {
            dp[next][mask | (1 << next)] += dp[last][mask];
          }
        }
      }
    }
  }
  printf("%lld\n", (res - m) / 2);
  return 0;
}