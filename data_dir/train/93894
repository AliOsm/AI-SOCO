#include <bits/stdc++.h>
using namespace std;
int n,m,l,r,a[1000005],ans[1000005];
vector<set<int> >edges(1e6+5);
vector<int>tmp,val;
bool vis[1000005];
void dfs(int node){
    vis[node] = 1;
    tmp.push_back(node);
    val.push_back(a[node]);
    for(auto i : edges[node])
        if(!vis[i])
            dfs(i);
}
int main()
{
    ios::sync_with_stdio(0);
    cin>>n>>m;
    for(int i = 1; i <= n; i++)
        cin >> a[i];
    for(int i = 0; i < m; i++)
        cin >> l >> r, edges[l].insert(r), edges[r].insert(l);
    for(int i = 1; i <= n; i++){
        if(!vis[i]){
            dfs(i);
            sort(tmp.begin(),tmp.end());
            sort(val.rbegin(),val.rend());
            for(int j = 0; j < tmp.size(); j++)
                ans[tmp[j]] = val[j];
            tmp.clear();
            val.clear();
        }
    }
    for(int i = 1; i <= n; i++)
        cout << ans[i] << " ";
    return 0;
}
