#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
using namespace std;
typedef long long LL;
const int N = 100005;
const int MOD  = 1000000007;
int n , k , p , dep[N];
vector <int> e[N];
void dfs (int u , int pre , int d) {
    dep[u] = d;
    for (int i = 0 ; i < e[u].size() ; i ++) {
        int v = e[u][i];
        if (v == pre) continue;
        dfs (v , u , d + 1);
    }
}
int main () {
    #ifndef ONLINE_JUDGE
        freopen ("input.txt" , "r" , stdin);
        // freopen ("output.txt" , "w" , stdout);
    #endif
    scanf ("%d %d %d" , &n , &k , &p);
    for (int i = 1 ; i < n ; i ++) {
        int u , v;
        scanf ("%d %d" , &u , &v);
        e[u].push_back (v);
        e[v].push_back (u);
    }
    dfs (1 , 0 , 0);
    sort (dep + 1 , dep + 1 + n);
    int ans = 0;
    LL coin = 0;
    for (int i = 2 , j = 2 ; i <= n ; i ++) {
        while (coin > p) {
            coin -= dep[i] - dep[j];
            j ++;
        }
        ans = max (ans , i - j + 1);
        coin += (i - j + 1) * (dep[i + 1] - dep[i]);
    }
    printf ("%d\n" , min (k , ans));
    return 0;
}