#include <bits/stdc++.h>
using namespace std;
const int N = 5e3 + 7;
int g[N];
int mark[N];
int mv[N];
string s;
vector<pair<int, int> > sz;
int main()
{
	ios::sync_with_stdio(false);

	cin >> s;
	int n = s.length();

	for (int i=1; i<=n; i++)
	{
		for (int j=i-1; j>=0; j--)
			mark[g[max(j-1, 0)] ^ g[max(i-j-2, 0)]] = i;
		while (mark[g[i]] == i)
			g[i]++;
	}

	memset(mark, 0, sizeof mark);
	for (int i=1; i+1<n; i++)
		if (s[i-1] == s[i+1])
			mark[i] = 1;

	int ans = 0, cnt = 0;
	for (int i=0; i<n; i++)
		if (mark[i])
		{
			cnt++;
			if (!mark[i+1])
			{
				sz.push_back({i-cnt+1, cnt});
				ans ^= g[cnt];
				cnt = 0;
			}
		}
	if (ans == 0)
	{
		cout << "Second\n";
		return 0;
	}
	cout << "First\n";
	for (int i=0; i<sz.size(); i++)
		for (int j=0; j<sz[i].second; j++)
			if (!(ans ^ g[sz[i].second] ^ g[max(j-1, 0)] ^ g[max(sz[i].second - j - 2, 0)]))
			{
				cout << sz[i].first+j+1 << "\n";
				return 0;
			}
	return 0;
}

