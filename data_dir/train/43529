#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll, ll> pii;
typedef pair<double,double> pdd;
#define MEM(a, b) memset(a, (b), sizeof(a))
#define SZ(i) ll(i.size())
#define FOR(i, j, k, in) for (ll i=j ; i<k ; i+=in)
#define RFOR(i, j, k, in) for (ll i=j ; i>=k ; i-=in)
#define REP(i, j) FOR(i, 0, j, 1)
#define REP1(i,j) FOR(i, 1, j+1, 1)
#define RREP(i, j) RFOR(i, j, 0, 1)
#define ALL(_a) _a.begin(),_a.end()
#define mp make_pair
#define pb push_back
#define eb emplace_back
#define X first
#define Y second
#ifdef tmd
#define debug(...) do{\
    fprintf(stderr,"%s - %d (%s) = ",__PRETTY_FUNCTION__,__LINE__,#__VA_ARGS__);\
    _do(__VA_ARGS__);\
}while(0)
template<typename T>void _do(T &&_x){cerr<<_x<<endl;}
template<typename T,typename ...S> void _do(T &&_x,S &&..._t){cerr<<_x<<" ,";_do(_t...);}
template<typename _a,typename _b> ostream& operator << (ostream &_s,const pair<_a,_b> &_p){return _s<<"("<<_p.X<<","<<_p.Y<<")";}
template<typename It> ostream& _OUTC(ostream &_s,It _ita,It _itb)
{
    _s<<"{";
    for(It _it=_ita;_it!=_itb;_it++)
    {
        _s<<(_it==_ita?"":",")<<*_it;
    }
    _s<<"}";
    return _s;
}
template<typename _a> ostream &operator << (ostream &_s,vector<_a> &_c){return _OUTC(_s,ALL(_c));}
template<typename _a> ostream &operator << (ostream &_s,set<_a> &_c){return _OUTC(_s,ALL(_c));}
template<typename _a,typename _b> ostream &operator << (ostream &_s,map<_a,_b> &_c){return _OUTC(_s,ALL(_c));}
template<typename _t> void pary(_t _a,_t _b){_OUTC(cerr,_a,_b);cerr<<endl;}
#define IOS()
#else
#define debug(...)
#define pary(...)
#define endl '\n'
#define IOS() ios_base::sync_with_stdio(0);cin.tie(0)
#endif

template<class T> inline bool cmax(T &a, const T &b) { return b > a ? a = b, true : false; }
template<class T> inline bool cmin(T &a, const T &b) { return b < a ? a = b, true : false; }
template<class T> using MaxHeap = priority_queue<T>;
template<class T> using MinHeap = priority_queue<T, vector<T>, greater<T>>;

const ll MOD=1000000007;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll MAXN=2e5+5;
const ll MAXLG=__lg(MAXN)+2;

ll n,k,q;
ll a[MAXN];

class zkw {
public:
  ll seg[MAXN*2];
  void build() {
    for (ll i=n-1;i>0;i--) {
      seg[i] = max(seg[i<<1],seg[i<<1|1]);
    }
  }

  void modi(ll pos,ll val) {
    pos += n;
    for (seg[pos]=val;pos>1;pos>>=1) {
      seg[pos>>1] = max(seg[pos],seg[pos^1]);
    }
  }

  ll query(ll l,ll r) {
    ll ret = -INF;
    for (l+=n,r+=n;l<r;l>>=1,r>>=1) {
      if (l&1) {
      	ret = max(ret,seg[l++]);
      }
      if (r&1) {
	      ret = max(ret,seg[--r]);
      }
    }
    return ret;
  }

}m[35];

ll ar[5];
ll tw[6] = {1,2,4,8,16,32};
/********** Good Luck :) **********/
int main()
{
    IOS();
    cin >> n >> k;

    REP (i,n) {
      REP (j,k) {
        cin >> ar[j];
      }
      REP (j,tw[k]) {
        ll sum = 0;
        REP (id,k) {
          sum += ((1<<id)&j)?ar[id]:-ar[id];
        } 
        debug(j,i,sum);
        m[j].seg[n+i] = sum;
      }
    }

    REP(i,tw[k]) {
      m[i].build();
    }
    debug("built");

    cin >> q;
    ll cmd;
    while (q--) {
      cin >> cmd;
      if (cmd == 1) {
        ll pos = 0;
        cin >> pos;
        pos--;
        REP (i,k) {
          cin >> ar[i];
        }
        for (int i=0;i<tw[k];i++) {
          ll sum = 0;
          REP (j,k) {
            sum += ((1<<j)&i)?ar[j]:-ar[j];
          }
          m[i].modi(pos,sum);
        }
      } else {
        ll l, r;
        cin >> l >> r;
        l--;
        ll ret = 0;
        REP (i,tw[k]) {
          debug(m[i].query(l,r),m[tw[k]-1-i].query(l,r));
          ret = max(m[i].query(l,r)+m[tw[k]-1-i].query(l,r),ret);
        }
        cout << ret << endl;
      }
    }
    return 0;
}
