#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cstring>
#include<map>
#include<cmath>
#include<bitset>
#include<set>
#include<cstdlib>
#include<complex>
#include<list>
#include<sstream>
#include<cassert>
#include<iomanip>
#include<limits>

using namespace std;

#define double long double

typedef pair<int,int> ii;
typedef pair<int,long long> il;
typedef pair<long long,long long> ll;
typedef pair<ll,int> lli;
typedef pair<long long,int> li;
typedef pair<double,double> dd;
typedef pair<ii,int> iii;
typedef pair<double,int> di;
typedef pair<int,ii> iii2;
typedef pair<ii,ii> iiii;
typedef vector<int> vi;
long long mod = 1000000007LL;
long long large = 2000000000000000000LL;

int n,m;

int id(int x,int y){
	return x*m+y;
}

int main(){

	cin>>n>>m;
	vector<vector<int> > g(n,vector<int>(m,0));
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			char c;
			cin>>c;
			if(c=='#') g[i][j] = 1;
		}
	}

	vector<vector<int> > adj(n*m,vector<int>());
	for(int i=0;i<n;i++){
		int pre = -1;
		for(int j=0;j<m;j++){
			if(g[i][j]==1){
				if(pre==-1){
					pre = j;
				}else{
					adj[id(i,j)].push_back(id(i,pre));
					adj[id(i,pre)].push_back(id(i,j));
					pre = j;
				}
			}
		}
	}

	for(int j=0;j<m;j++){
		int pre = -1;
		for(int i=0;i<n;i++){
			if(g[i][j]==1){
				if(pre==-1) pre = i;
				else{
					adj[id(i,j)].push_back(id(pre,j));
					adj[id(pre,j)].push_back(id(i,j));
					pre = i;
				}
			}
		}
	}

	vector<vector<int> > ng(n,vector<int>(m,0));
	vector<bool> vis(n*m,false);

	vector<bool> r(n,false);
	vector<bool> c(m,false);
	for(int i=0;i<n*m;i++){
		if(g[i/m][i%m]==0) continue;
		if(!vis[i]){
			vis[i] = true;
			vector<int> comp;
			comp.push_back(i);
			queue<int> q;
			q.push(i);
			while(!q.empty()){
				int u = q.front();
				q.pop();
				for(int j=0;j<(int)adj[u].size();j++){
					int v = adj[u][j];
					if(!vis[v]){
						vis[v] = true;
						comp.push_back(v);
						q.push(v);
					}
				}
			}
			set<int> row,col;
			for(int j=0;j<(int)comp.size();j++){
				int u = comp[j];
				row.insert(u/m);
				col.insert(u%m);
			}
			for(set<int>::iterator it = row.begin();it!=row.end();it++){
				int x = *it;

				if(r[x]){
					cout<<"No"<<endl;
					return 0;
				}
				r[x] = true;
			}
			for(set<int>::iterator it = col.begin();it!=col.end();it++){
				int x = *it;
				if(c[x]){
					cout<<"No"<<endl;
					return 0;
				}
				c[x] = true;
			}

			for(set<int>::iterator it = row.begin();it!=row.end();it++){
				for(set<int>::iterator it2 = col.begin();it2!=col.end();it2++){
					ng[*it][*it2] = 1;
				}
			}
		}
	}

	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(g[i][j]!=ng[i][j]){
				cout<<"No"<<endl;
				return 0;;
			}
		}
	}
	cout<<"Yes"<<endl;

    return 0;
}
