#include<bits/stdc++.h>
using namespace std;
#define ll    int
#define INF 10000000
#define f first
#define pi pair<double,double>
#define mp make_pair
#define pb emplace_back
#define mod 1000000007
#define s second
#define mp make_pair
#define fr freopen("input-25.txt","r",stdin)
#define fo freopen("output-25.txt","w",stdout)
vector<ll>g[100011];
ll dp[100011][20];
ll d[100011];
ll depth[100011];
vector<ll>o;
ll ind[100011];
void dfs(ll v,ll p){
    if(p!=-1){
        d[v]=d[p]+1;
    }
    o.pb(v);
    dp[v][0]=p;
    for(auto x:g[v]){
        if(x!=p){
            dfs(x,v);
            depth[v]+=depth[x];
        }
    }
    depth[v]++;
}
ll lca(ll u,ll v){
    if(d[u]<d[v]) swap(u,v);
    ll diff=d[u]-d[v];
    for(int j=0;j<20;j++){
        if((diff>>j)&1){
            u=dp[u][j];
        }
    }
    if(u!=v){
        for(int i=19;i>=0;i--){
            if(dp[u][i]!=dp[v][i]){
                u=dp[u][i];
                v=dp[v][i];
            }
        }
        u=dp[u][0];
    }
    return u;
}
int main(){
ll n;
scanf("%d",&n);
ll u,v;
for(int i=1;i<n;i++){
    scanf("%d",&u);
    scanf("%d",&v);
    u--;
    v--;
    g[u].pb(v);
    g[v].pb(u);
}
for(int i=0;i<20;i++){
    for(int j=0;j<n;j++){
        dp[j][i]=-1;
    }
}
d[0]=0;
dfs(0,-1);
ll m;
scanf("%d",&m);
for(int i=0;i<o.size();i++){
    ind[o[i]]=i;
}
for(int i=0;i<20;i++){
    for(int j=0;j<n;j++){
        if(dp[j][i]!=-1){
            dp[j][i+1]=dp[dp[j][i]][i];

        }
    }
}
ll l,k;
ll dis,ans;
ll ut,vt,h;
while(m--){
    scanf("%d",&u);
    scanf("%d",&v);
    u--;
    v--;
    if(u==v){
        printf("%d\n",n);
        continue;
    }
    ut=u;
    vt=v;
    l=lca(u,v);
    dis=d[u]+d[v]-2*d[l];
    if(dis%2!=0 ){
        printf("0\n");
        continue;
    }

    dis/=2;
    ans=0;
    if(d[u]-d[l]>dis){
        for(int i=0;i<20;i++){
            if((dis>>i)&1){
                u=dp[u][i];
            }
        }
        k=u;
        u=ut;
        v=vt;
        dis--;
        h=u;
        for(int i=0;i<20;i++){
            if((dis>>i)&1){
                h=dp[h][i];
            }
        }
        ans=depth[k]-depth[h];
    }
    else if(d[v]-d[l]>dis){
        for(int i=0;i<20;i++){
            if((dis>>i)&1){
                v=dp[v][i];
            }
        }
        k=v;
        u=ut;
        v=vt;
        dis--;
        h=v;
       for(int i=0;i<20;i++){
            if((dis>>i)&1){
                h=dp[h][i];
            }
        }
        ans=depth[k]-depth[h];
    }
    else{
        k=l;
        u=ut;
        v=vt;
        h=u;
        dis--;
        for(int i=0;i<20;i++){
            if((dis>>i)&1){
                h=dp[h][i];
            }
        }
        ans=depth[h];
         h=v;
       for(int i=0;i<20;i++){
            if((dis>>i)&1){
                h=dp[h][i];
            }
        }
        ans+=depth[h];
        ans=depth[l]-ans;
        ans=ans+depth[0]-depth[l];
    }
    printf("%d\n",ans);
}
}
