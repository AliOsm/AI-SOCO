#include<bits/stdc++.h>
#define rep(i,start,lim) for(int i=start;i<lim;i++)
#define repd(i,start,lim) for(int i=start;i>=lim;i--)
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define YES printf("Yes\n")
#define NO printf("No\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define N 500005
int parity[N],ans[N],cnt[N][26],sz[N],mk[N],level[N];
vector<int> adj[N];
vector<pair<int,int>> queries[N];
string s;
void pre(int curr=1) {
	sz[curr]=1;
	for(auto i:adj[curr]) level[i]=level[curr]+1,pre(i),sz[curr]+=sz[i];
}
void update(int curr) {
	parity[level[curr]]-=cnt[level[curr]][s[curr]-'a'];
	cnt[level[curr]][s[curr]-'a']^=1;
	parity[level[curr]]+=cnt[level[curr]][s[curr]-'a'];
	for(auto i:adj[curr]) if(!mk[i]) update(i);
}
void dfs(int curr=1,int keep=0) {
	int mx=0,big=-1;
	for(auto i:adj[curr]) if(sz[i]>mx) mx=sz[i],big=i;
	for(auto i:adj[curr]) if(i!=big) dfs(i,1);
	if(big!=-1) mk[big]=1,dfs(big);
	update(curr);	
	for(auto q:queries[curr]) ans[q.s]=(parity[q.f] <= 1LL );
	if(big!=-1) mk[big]=0;
	if(keep) update(curr);
}
main()
{
	int n,u,v,m,x;
	scan(n),scan(m),level[1]=1;
	rep(i,1,n) scan(x),adj[x].pb(i+1);
	cin>>s,s=" "+s;
	rep(i,0,m) scan(u),scan(v),queries[u].pb({v,i});
	pre(),dfs();
	rep(i,0,m) if(ans[i]) YES; else NO;
	return 0;
}