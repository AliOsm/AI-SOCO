#include <bits/stdc++.h>
using namespace std;

typedef long long int64;
const int
	mf[4] = { -1, 0, 1, 0 },
	mc[4] = { 0, 1, 0, -1 },
	inv[4] = { 2, 3, 0, 1 };
int n, dr[35][4];
pair <int64, int64> res[35];
vector <int> g[35];

void dfs(int u, int p = -1, int d = 1 << 30) {
	if((int) g[u].size() > 4) {
		printf("NO\n");
		exit(0);
	}

	for(int v : g[u]) {
		if(v != p) {
			for(int l = 0; l < 4; l++) {
				if(dr[u][l])
					continue;

				int64 nx = res[u].first + d * 1LL * mf[l];
				int64 ny = res[u].second + d * 1LL * mc[l];

				res[v] = {nx, ny};
				dr[u][l] = 1;
				dr[v][inv[l]] = 1;
				break;
			}

			dfs(v, u, d / 2);
		}
	}
}

int main() {
	scanf("%d", &n);

	for(int i = 1; i < n; i++) {
		int a, b; scanf("%d%d", &a, &b);
		g[a].push_back(b);
		g[b].push_back(a);
	}

	res[1] = { 0, 0 };
	dfs(1);

	printf("YES\n");
	for(int i = 1; i <= n; i++)
		printf("%lld %lld\n", res[i].first, res[i].second);
	return 0;
}