#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>
 
using namespace std;
using namespace __gnu_pbds;
 
#define endl '\n'
 
typedef long long ll;
typedef pair<ll, ll> pii;
typedef tree<int, null_type,less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
 
template<typename T>
static T randint(T lo, T hi){
	return uniform_int_distribution<T>(lo, hi)(rng);
}
 

 
int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
 
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
 	
	int a, b, c, d;
	cin >> a >> b >> c >> d;

	const int maxn = 1e6 + 5;

	vector<ll> dp(maxn);

	for(int i = a; i <= b; i++){
		dp[i + b]++;
		dp[i + c + 1]--;
	}

	for(int i = 1; i < maxn; i++)
		dp[i] += dp[i - 1];

	for(int i = maxn - 2; i >= 0; i--)
		dp[i] += dp[i + 1];

	ll ans = 0;

	for(int i = c; i <= d; i++)
		ans += 1ll * dp[i + 1];

	cout << ans << endl;
 
	return 0;
}