#include <stdio.h>
#include <map>
#include <numeric>
#include <ctype.h>
#include <string>
#include <iostream>
#include <assert.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <queue>
#include <algorithm>
#include <set>
using namespace std;

typedef long long ll;
const ll MOD=1000000007;

struct line
{
	// a+bx
	ll a,b;
	pair<ll,ll> intersect(line& other)
	{
		ll num=a-other.a;
		ll den=other.b-b;
		if(den<0)
		{
			num*=-1;
			den*=-1;
		}
		return make_pair(num,den);
	}
};

int main()
{
	int n;
	scanf("%d",&n);
	vector<pair<int,int> > x(n);
	for(int i=0;i<n;i++)
		scanf("%d%d",&x[i].first, &x[i].second);
	sort(x.begin(), x.end());

	map<int,int> xtmp;
	for(int i=0;i<n;i++)
		xtmp[x[i].first]=x[i].second;

	x=vector<pair<int,int> >(xtmp.begin(), xtmp.end());
	n=x.size();

	vector<line> st;
	for(int i=0;i<n;i++)
	{
		ll cx=x[i].first;
		ll cy=x[i].second;
		ll ca = cy-cx*cx;
		ll cb = 2*cx;
		line cur{ca, cb};
		while(st.size()>=2)
		{
			line l1=st[st.size()-2];
			line l2=st[st.size()-1];

			pair<ll,ll> int1=l1.intersect(cur);
			pair<ll,ll> int2=l2.intersect(cur);
			if(int2.first*int1.second<=int1.first*int2.second)
			{
				st.pop_back();
			}
			else
				break;
		}
		st.push_back(cur);
	}

	printf("%d\n",(int)(st.size())-1);

	return 0;
}
