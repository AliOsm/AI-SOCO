/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(200005);

long long l[MAXN],r[MAXN];

#define PLL pair<long long,long long>
#define PLLI pair< PLL , int >

PLLI b[MAXN];

int ans[MAXN];

bool compare(const PLLI &p, const PLLI &q) {
    if(p.X.Y != q.X.Y) return p.X.Y < q.X.Y;
    return p.X.X < q.X.X;
}

int main(){

    int n,m;
    S("%d%d",&n,&m);
    REP(i,n)
    {
        S("%I64d%I64d",&l[i],&r[i]);
        if(i)
            b[i-1] = PLLI(mp(l[i]-r[i-1], r[i]-l[i-1]), i-1);
    }

    multiset<PLL>s;
    multiset<PLL>::iterator it;

    REP(i,m)
    {
        long long x;
        S("%I64d",&x);
        s.insert(PLL(x,i));
    }

    if(m < n-1)
    {
        P("No");
        return 0;
    }

    sort(b,b+n-1,compare);

    REP(i,n-1)
    {
        it = s.lower_bound(mp(b[i].X.X, 0));

        if(it == s.end())
        {
            P("No");
            return 0;
        }

        else if(it->X > b[i].X.Y)
        {
            P("No");
            return 0;
        }

        ans[b[i].Y] = it->Y;
        s.erase(it);
    }

    P("Yes\n");
    REP(i,n-1)
        P("%d ",ans[i]+1);

}
