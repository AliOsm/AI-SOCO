#include <bits/stdc++.h>
using namespace std;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long long long 

int main(){
   IOS;

   long int n,m;
   cin>>n>>m;

	vector<vector<char>> v(n,vector<char>(m));
	for(long int i = 0; i < n; i++)
		for(long int j = 0; j < m; j++)
			cin>>v[i][j];

	// for(auto vec : v){
	// 	for(auto ele : vec)
	// 		cout<<ele<<" ";
	// 	cout<<endl;
	// }

	vector<pair<pair<long int,long int>,long int>> ans;
	vector<vector<bool>> visited(n,vector<bool>(m));

	for(long int i = 0; i < n; i++){
		for(long int j = 0; j < m; j++){
			if(v[i][j] == '*'){
				long int val = 1;
				while(i - val >= 0 && i + val < n && j - val >= 0 && j + val < m  && v[i+val][j] == '*' && v[i-val][j] == '*' && v[i][j+val] == '*' && v[i][j-val] == '*'){
					visited[i-val][j] = visited[i+val][j] = visited[i][j+val] = visited[i][j-val] = visited[i][j] = true;
					val++;
				}
				if(val > 1)
					ans.push_back({{i+1,j+1},val-1});
				// cout<<val<<endl;
			}
		}
	}

	for(long int i = 0; i < n; i++)
		for(long int j = 0; j < m; j++)
			if(v[i][j] == '*' && !visited[i][j])
				return cout<<"-1", 0;

	cout<<ans.size()<<endl;

	for(auto ele : ans)
		cout<<ele.first.first<<" "<<ele.first.second<<" "<<ele.second<<endl;
   return 0;
}