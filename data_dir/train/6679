#include <iostream> 
#include <sstream> 
#include <vector> 
#include <set> 
#include <map> 
#include <algorithm> 
#include <string> 
#include <cstring> 

using namespace std; 

long long ans,MAX,l,r,A,B,AA,BB;
int i,j,p,can,sm;

int good(long long A, long long B){
    if (A>B)  return 0;
    if (A<l) return 0;
    if (B>r) return 0;
    return 1;
}

int main(){
    cin >> l >> r;

    for (i = 59;i>=-1;i--){
        for (j = 59;j>=-1;j--){
            A = l;
            B = r;
            if (i>=0)
               A = (l ^ (1LL << i));
            if (j>=0)
               B = (r ^ (1LL << j));
               
            if (A<l) continue;
            if (B>r) continue;

            can = 0;
            for (p = 59; p>=0; p--){
                AA = 0;
                BB = 0;
                sm = can;
                if (((A & (1LL << p)) <= (B & (1LL << p))) || (can))
                   if ((A^B)>(AA^BB)){
                      AA = A;
                      BB = B;
                      sm = 1;
                   }
                   
                
                   
                if (p<i){
                   A = (A ^ (1LL << p));
                   
                if (((A & (1LL << p)) <= (B & (1LL << p))) || (can))
                   if ((A^B)>(AA^BB)){
                      AA = A;
                      BB = B;
                      sm = 1;
                   }

                   A = (A ^ (1LL << p));                   
                }
                
                if (p<j){
                   B = (B ^ (1LL << p));
                   
                if (((A & (1LL << p)) <= (B & (1LL << p))) || (can))
                   if ((A^B)>(AA^BB)){
                      AA = A;
                      BB = B;
                      sm = 1;
                   }

                   B = (B ^ (1LL << p));                                            
                }
                
                if ((p<i) && (p<j)){
                   A = (A ^ (1LL << p));                          
                   B = (B ^ (1LL << p));
                   
                if (((A & (1LL << p)) <= (B & (1LL << p))) || (can))
                   if ((A^B)>(AA^BB)){
                      AA = A;
                      BB = B;
                      sm = 1;
                   }

                   A = (A ^ (1LL << p));
                   B = (B ^ (1LL << p));                                                                      
                }                               
                   
                A = AA;
                B = BB;
                
                if (sm == 0) break;
                
                if (A<=B)
                if ((A^B)>MAX) 
                {
                        //       cout << (1LL << p) << " " << A << " " << B << " " << p << " " << (A & (1LL << p)) << " " <<  (B & (1LL << p)) <<  endl;
                               MAX = (A^B);
                }
                if (((A & (1LL << p)) < (B & (1LL << p)))) can = 1;
            }           
        }
    }
        
    cout << MAX << endl;
//    system("pause");
    return 0;
}
