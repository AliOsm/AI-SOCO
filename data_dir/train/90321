/* MO's on Trees */
#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define esp 1e-9
#define N 50100
#define M 100100
#define vi vector<int>
#define pp pair<int, int>
#define query pair<pp, pp>
#define mod 1000000007
#define LOG 15
#define SEG 500
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
using namespace std;
int n, t;
double c[123];

vector <int> a[123];
vector <int> rr;

bool cmp(double x, double y) {
    double z = abs(x - y);
    return (z <= esp);
}

void pour(int x, double T) {
    double add = min(1 - c[x], T);
    c[x] += add;
    double rm = (T - add) / (1.0 * a[x].size());
    for (int i = 0; i < a[x].size(); i++)
        pour(a[x][i], rm);
}


int main() {
   // freopen("in.in", "r", stdin);
   // freopen("ou.ou", "w", stdout);
    cin >> n >> t;
    int cnt = 1;
    rr.pb(1);
    for (int i = 2; i <= n; i++) {
        vector <int> d;
        for (int j = 1; j <= i; j++) {
            cnt++;
            d.pb(cnt);
        }
        int m  = rr.size() - i + 1;

        for (int j = 0; j < d.size() - 1; j++) {
            a[rr[m]].pb(d[j]);
            a[rr[m]].pb(d[j + 1]);
            m++;
        }
        for (int j = 0; j < d.size(); j++)
            rr.pb(d[j]);
    }

    for (int i = 1; i <= t; i++) {
        pour(1, 1);
    }

    int ret = 0;
    for (int i = 1; i <= cnt; i++)
        if (cmp(c[i], 1.0))
        ret++;
    cout << ret;
    /**/return 0;
}
