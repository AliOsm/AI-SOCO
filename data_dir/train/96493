#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template <class T> int size(const T &x) { return x.size(); }
#define rep(i,a,b) for(int i = (a); i < (b); i++)
#define iter(it,c) for(auto it = (c).begin(); it != (c).end();++it)
#define pb push_back
#define fs first
#define sc second
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

const int INF = ~(1<<31);
const double pi = acos(-1);
const double EPS = 1e-9;

string first = "What are you doing at the end of the world? Are you busy? Will you save us?";
string ok1 = "What are you doing while sending \"";
string ok2 = "\"? Are you busy? Will you send \"";
string ok3 = "\"?";

ll hi = 1000000000000000000LL;
ll memo[55];

ll GETN(ll n) {
	if(n > 53) return GETN(53);
	if(n == 0) return first.size();
	if(memo[n] != -1) return memo[n];
	return memo[n] = ok1.size()+GETN(n-1)+ok2.size()+GETN(n-1)+ok3.size();
}

string ans = ok1+first+ok2+first+ok3;

char get(ll at) {
	if(at < 0) return '.';
	if(at >= ans.size()) return '.';
	return ans[at];
}
char get2(ll at) {
	if(at < 0) return '.';
	if(at >= first.size()) return '.';
	return first[at];
}


char rec(ll at, ll n) {
	if(n == 0) return get2(at);
	if(n == 1) return get(at);

	if(at < ok1.size()) {
		return ok1[at];
	}
	at -= ok1.size();
	if(at < GETN(n-1)) {
		return rec(at,n-1);
	} 
	at -= GETN(n-1);

	if(at < ok2.size()) {
		return ok2[at];
	} 

	at -= ok2.size();
	if(at < GETN(n-1)) {
		return rec(at,n-1);
	}

	at -= GETN(n-1);
	if(at < ok3.size()) {
		return ok3[at];
	}
	return '.';
}


int main() {
    cin.sync_with_stdio(false);
	memset(memo,-1,sizeof(memo));
	ll q;
	cin >> q;
	string th = "";
	rep(i,0,q) {
		ll n,k;
		cin >> n >> k;
		k--;
		char back = rec(k,n);
		th += back;
	}
	cout << th << endl;
    return 0;
}


