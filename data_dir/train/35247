//Pham Huu Canh
//E. Dreamoon and Strings
//Algorithm:
//Complexity:
//AC:

#include <iostream>
#include <fstream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#define max64 9223372036854775807LL
#define max32 2147483647
#define maxty 1001001001
#define max16 32767
#define EPS 1e-8
#define ll long long
#define ull unsigned long long
#define pb push_back
#define mp make_pair
#define PQ priority_queue
#define LB lower_bound
#define UB upper_bound
#define fi first
#define se second
#define timmax(x, y)    ((x) > (y) ? (x) : (y))
#define timmin(x, y)    ((x) < (y) ? (x) : (y))
#define fori(i, n)      for((i) = 0; (i) < (n); (i)++)
#define ford(i, n)      for((i) = (n-1); (i) >= 0; (i)--)
#define fore(i, v)		for(typeof(v.begin()) i = v.begin(); i != v.end(); i++)
#define repi(i, a, b)   for((i) = (a); (i) <= (b); (i)++)
#define repd(i, a, b)   for((i) = (a); (i) >= (b); (i)--)
#define all(tmpv)      tmpv.begin(), tmpv.end()

#define fii "e.inp"
#define foo "e.out"
#define MOD 1000000007
#define inf 1000111000111000111LL

using namespace std;

typedef pair<int, int> II;
typedef vector<int> VI;

int a[2005], dp[2005][2005];
char s[2005], t[2005];

void input()
{
	int i, j, k, lens, lent;
	
	scanf("%s %s", &s, &t);
	
	lens = strlen(s);
	lent = strlen(t);
	fori(i, lens){
		k = 0;
		for (j = i; j < lens; j++)
			if (s[j] == t[k]){
				k++;
				if (k == lent)	break;
			}
		if (k == lent)	a[i] = j;
		else			a[i] = -1;
	}
	
	fori(i, lens)	repi(j, 0, i){						//dp[i+1] = s[0...i],	dp[i] = s[0...i-1]
		dp[i+1][j] = timmax(dp[i+1][j], dp[i][j]);
		dp[i+1][j+1] = timmax(dp[i+1][j+1], dp[i][j]);
		
		if (a[i] >= 0)
			dp[a[i] + 1][j + (a[i] - i + 1) - lent] = timmax(dp[a[i] + 1][j + (a[i] - i + 1) - lent], dp[i][j] + 1);
	}
	
	repi(i, 0, lens)	printf("%d ", dp[lens][i]);
}

int main()
{
    #ifndef ONLINE_JUDGE
    	freopen(fii,"r",stdin);
    	freopen(foo,"w",stdout);
    #endif

    input();

    return 0;
}
