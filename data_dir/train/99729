#include<stdio.h>
#include<vector>
#include<algorithm>
#include <iostream>
#include <cmath>
#include <complex>
#include<queue>
#include <string>
#include<bits/stdc++.h>
#define pi 3.14159265
#define forr(i,a,b) for(int i=a;i<=b;i++)
#define F first
#define S second
using namespace std;
typedef pair<double,double>pdd;
typedef long long  ll;
typedef pair<ll, ll>pii;
//template<typename T>T gcd(T x, T y) { if(y == 0)return x; else return gcd(y, x%y); }
//typedef bitset<8> mask;
//int x[8]={1,0,0,-1,-1,-1,1,1};
//int y[8]={0,1,-1,0,-1,1,-1,1};
//const double PI = acos(-1.0);
//const double EPS = 1e-9;
//typedef complex<double> point;
string a,b;
int n,m,l,r;
vector<int>va,vb;
bool oka(int x)
{
    if(n%x!=0)return 0;
    string f=a.substr(0,x);
    for(int i=0;i<n;i+=x)
    {
        string g=a.substr(i,x);
        if(g!=f)return 0;
    }
    return 1;
}
bool okb(int x)
{
    if(m%x!=0)return 0;
    string f=b.substr(0,x);
    for(int i=0;i<m;i+=x)
    {
        string g=b.substr(i,x);
        if(g!=f)return 0;
    }
    return 1;
}
int main()
{

//cout<<Pow((ll)1000000,(ll)110);
//freopen("hotel.in","r",stdin);
//freopen("math.in","w",stdout);
//    char input[15];
//    scanf("%s", &input);
cin>>a>>b;
n=a.size();
m=b.size();
for(int i=1;i<=n;i++)
    if(n%i==0)va.push_back(i);
for(int i=1;i<=m;i++)
    if(m%i==0)vb.push_back(i);
int ans1=0;
forr(i,0,va.size()-1)
{
    if(oka(va[i]))
    {
        ans1=va[i];
        break;
    }
}
string aa=a.substr(0,ans1);
int ans2=0;
forr(i,0,vb.size()-1)
{
    if(okb(vb[i]))
    {
        ans2=vb[i];
        break;
    }
}
string bb=b.substr(0,ans2);
int ans=0;
if(aa!=bb)
{
    cout<<"0";
    return 0;
}
else
{
    forr(i,1,min(n,m))
    {
        if(n%(ans1*i)==0&&m%(ans1*i)==0)ans++;
        if(ans1*i>min(n,m))break;
    }
    cout<<ans;
}
 return 0;
}
