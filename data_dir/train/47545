#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using ii = pair<int, int>;
#define ff first
#define ss second
#define pb push_back

const int N = 1000005;
const int mod = 1e9 + 7;

vector<int> pos[N];
set<ii> s;
int cnt;

void rem(int val){
	for(int i : pos[val]){
		auto it = s.lower_bound({i, 0});
		if(it != s.begin()){
			if(prev(it)->ss > it->ss){
				cnt--;
			}
		}
		if(next(it) != s.end()){
			if(next(it)->ss < it->ss){
				cnt--;
			}
		}
		if(it != s.begin() && next(it) != s.end()){
			if(prev(it)->ss > next(it)->ss){
				cnt++;
			}
		}
		s.erase(it);
	}
}

void add(int val){
	for(int i : pos[val]){
		auto it = s.lower_bound({i, 0});
		if(it != s.end() && it != s.begin()){
			if(prev(it)->ss > it->ss){
				cnt--;
			}
		}
		if(it != s.end()){
			if(it->ss < val){
				cnt++;
			}
		}
		if(it != s.begin()){
			if(prev(it)->ss > val){
				cnt++;
			}
		}
		s.insert({i, val});
	}
}

int main(){
	ll n, x;
	scanf("%lld %lld", &n, &x);
	for(int i = 0; i < n; i++){
		int a;
		scanf("%d", &a);
		if(i && a < s.rbegin()->ss)
			cnt++;
		s.insert({i, a});
		pos[a].pb(i);
	}
	int r = 1;
	ll ans = 0;
	for(int l = 1; l <= x; l++){
		while(cnt && r <= x){
			rem(r);
			r++;
		}
		if(!cnt){
			ans += x - r + 2;
			if(l == r) ans--;
		}
		if(r > l){
			add(l);
		}
		else{
			r++;
		}
	}
	printf("%lld\n", ans);
	return 0;
}

