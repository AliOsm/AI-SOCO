#define _CRT_SECURE_NO_WARNINGS 1
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <algorithm>
#include <numeric>
#include <unordered_map>
#include <sstream>
#include <iostream>
#include <cmath>
#include<cstring>
#include <cstdio>
#include <stack>
#include<iomanip>
#include<queue>
#include<functional>
#include<iterator>
#include<new>
#include<cstdlib>
#include<math.h>
#include<fstream>
using namespace std;
#define pi 3.141592653589793
#define ii  pair<int,int>
#define ll long long
#define p10(ans) printf("%0.10f\n", ans)
#define pr(ans) printf("%d\n", ans)
#define scc(x)  scanf("%c\n", &c)
#define pll(ans) printf("%lld\n", ans)
#define scll(x) scanf("%lld",&x)
#define scd(a)  scanf("%lf", &a)
#define sci(x)  scanf("%d",&x)
#define pc(ans)  printf("%c", ans)
#define pd(a)    printf("%lf\n", a)
#define scanfchararray(arr) scanf("%s", arr)
#define printfstring(s)    printf("%s", s.c_str())
#define all(v)             v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define sz(v)            ((int)((v).size()))
#define mod 1000000007
#define mem(arr,d) memset(arr,d,sizeof(arr))
#define inf 10000000000000000
#define ninf -10000000000000000;
#define eps 1e-7
#define nearestPowerOfTwo(S) ((int)pow(2.0, (int)((log((double)S) / log(2.0)) + 0.5)))
#define loop0(i,n) for(int i=0;i<n;++i)
#define loop1(i,n) for(int i=1;i<=n;++i)
/*ll power(ll base, ll exp) {
base %= mod;
ll result = 1;
while (exp > 0) {
if (exp & 1)
result = (result * base) % mod;
base = (base * base) % mod;
exp >>= 1;
}
return result;
}
*/
/*long long gcd(long long a, long long b)
{
if (b == 0)return a; return gcd(b, a%b);
}
long long lcm(long long a, long long b) {
return  a * b / gcd(a, b);
}
*/
const int MAXN = 110;
int  memo[MAXN][MAXN][27][2];
vector<pair<int,int>>arr[MAXN];
bool solve(int u, int v, int prev, int dor) {
	int &ret = memo[u][v][prev][dor];
	if (~ret)return ret;
	if (dor) {
		for (auto s : arr[u]) {
			if (s.second >= prev) {
				if (!solve(s.first, v, s.second, 1-dor))
					return ret = 1;
			}
		}
	}
	else {
		for (auto s : arr[v]) {
			if (s.second >= prev) {
				 if(!solve(u, s.first, s.second, 1-dor))
				  return ret=1;
			}
		}
	}
	return ret = 0;
}
int main() {
	int n, m,u,v; 
	char c;
	sci(n); sci(m);
	for (int i = 0; i < m; ++i) {
		sci(u); sci(v); cin >> c;
		arr[u].push_back({ v,c - 'a' });
	}
	mem(memo, -1);

	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= n; ++j) {
			if (solve(i, j, 0, 1))printf("A");
			else printf("B");
		}
		printf("\n");
	}
}