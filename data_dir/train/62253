// 03.04.2019


/*

*/


# include <iostream>
# include <cstdio>
# include <cstring>
# include <string>
# include <cstdlib>
# include <cmath>
# include <iomanip>
# include <vector>
//                 insert, append, size
# include <stack>
//                 push, pop, top, empty
# include <queue>
//                 push, pop, front, empty
# include <map>
# include <list>
//                 push_back, begin, end
# include <algorithm>


# define iabs(x) ( (x) < 0 ? (-(x)) : (x) )
# define sqr(x) ( (x) * (x) )


//# define lint long long int
# define lint __int64

# define fi first
# define se second

# define x XX_
# define y YY_


using namespace std;

struct E
{
   int info;
   E * next;
   E (int pinfo, E * pnext=NULL)
   {
       info = pinfo, next = pnext;
   }
};


typedef pair <int, int> Pair;
typedef pair <int, Pair> trio;
typedef pair <Pair, lint> Trio;
typedef pair <Pair, Pair> Quattro;


const int N = 200200;
const int M = 256;
const int K = 26;
const int INF = 2000000000;
const double eps = 1e-12;


int k, m, n, mark [N];
Pair p [N];
E * List [N];
char s [N];
queue <int> q;
bool ok;


int F ();


int main ()
{
# ifndef ONLINE_JUDGE
   freopen ("F.TXT", "r", stdin);
   freopen ("OUTPUT.OUT", "w", stdout);
# endif

   ios_base::sync_with_stdio (false);
   cin.tie (NULL);

   cin >> n >> m;

   for ( int i=0; i < m; i++ )
   {
      int a, b;
      cin >> a >> b;
      a--, b--;
      p [i].fi = a, p [i].se = b;
      List [a] = new E (b, List [a]);
      List [b] = new E (a, List [b]);
   }

# ifndef ONLINE_JUDGE
   cout << "*** n = " << n << endl;
   cout << "*** m = " << m << endl;
   for ( int i=0; i < m; i++ )
      cout << "*** " << p [i].fi << " " << p [i].se << endl;
   for ( int i=0; i < n; i++ )
   {
      cout << "*** " << i << " :";
      for ( E * r=List [i]; r != NULL; r=r->next )
         cout << " " << r->info;
      cout << endl;
   }
# endif

   mark [0] = 1;
   q.push (0);
   ok = true;
   for ( ; ! q.empty (); )
   {
      int a = q.front ();
      q.pop ();
      for ( E * r=List [a]; r != NULL; r=r->next )
         if ( mark [r->info] == 0 )
         {
            mark [r->info] = -mark [a];
            q.push (r->info);
         }
         else if ( mark [a] == mark [r->info] )
         {
            ok = false;
            break;
         }

      if ( ! ok )
         break;
   }

# ifndef ONLINE_JUDGE
   cout << "*** ";
   for ( int i=0; i < n; i++ )
      cout << " " << mark [i];
   cout << endl;
# endif

   if ( ok )
   {
      cout << "YES" << endl;
      for ( int i=0; i < m; i++ )
         cout << ( mark [p [i].fi] > 0 ? 1 : 0 );
      cout << endl;
   }
   else
      cout << "NO" << endl;

//   system ("pause");
   return 0;
}

int F ()
{
   return 0;
}
