// only miss the sun when it starts to snow

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn=1e5+10,mod=1e9+7;
const ll inf=1e18;

ll a[maxn];
int par[130], h[130];

int main(){
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie();

    int N,n=0; cin>>N;

    for(int i=0;i<N;i++){
	ll x; cin>>x;
	if(x!=0) a[n++]=x;
    }
    for(int i=0;i<61;i++){
	int cnt=0;
	for(int j=0;j<n;j++)
	    cnt+= bit(a[j], i);
	if(cnt>2) return cout<<3<<endl,0;
    }
    
    int ans=n+1;
    queue<int> q;
    
    for(int i=0;i<n;i++){
	memset(h,-1,sizeof h);
	h[i]=0;
	q.push(i);

	while(sz(q)){
	    int u=q.front();
	    q.pop();

	    for(int y=0;y<n;y++){
		if(h[y]==-1 && (a[u] & a[y])!=0)
		    h[y]=h[u]+1, par[y]=u , q.push(y);
	    }
	}

	for(int j=0;j<n;j++){
	    for(int k=0;k<n;k++){
		if(h[j]==-1 || h[k]==-1 || j==k || par[j]==k || par[k]==j || (a[j] & a[k])==0) continue;
		ans=min(ans, h[j] + h[k] + 1);
	    }
	}
    }
    if(ans == n+1) ans=-1;
    return cout<<ans<<endl,0;
}
// Deathly mistakes:
//  * Read the problem carefully.
//  * Check maxn.
//  * Overflows.


// #pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
