#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define pb push_back
#define pi 3.14159265  //35897932384626433
#define INF 1e18
#define MOD 1000000007
#define all(s) s.begin(),s.end()
#define mp make_pair
#define vc vector<int>
#define vp vector<pair<int,int> >
#define sec second
#define sz(x) (int)((x).size())
#define timesaver ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
const int N =  3 * 1e5 + 5;
ll gcd(ll a, ll b){ if(a==0) return b; else return gcd(b%a,a);}
ll power(ll base,ll exp,ll mod=MOD) {ll ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
bool visit[N];
vector<pair<ll, ll> > v[N];
ll a[N];
void dfs(ll n, ll dist, ll cur){
	if(max(cur, dist + cur) > a[n])
		return;
	dist = max(cur, dist + cur);
	visit[n] = 1;
	for (int i = 0; i < (int)v[n].size(); i += 1)
	{
		if(!visit[v[n][i].first])
			dfs(v[n][i].first, dist, v[n][i].sec); 
	}
}
int main(){
	timesaver;
	ll n, ans = 0, x, y;
	cin >> n;
	for (int i = 1; i <= n; i += 1)
	{
		cin >> a[i];
	}
	for (int i = 1; i < n; i += 1)
	{
		cin >> x >> y;
		v[i + 1].pb(mp(x, y));
		v[x].pb(mp(i + 1, y));
	}
	dfs(1LL, 0LL, 0LL);
	for (int i = 1; i <= n; i += 1)
	{
		if(!visit[i])
			ans++;
	}
	cout << ans;
}

