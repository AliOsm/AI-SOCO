#include <bits/stdc++.h>
#include <iostream>	
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define repr(i,n) for(int i = n - 1; i >= 0; --i)
#define Rep(i, a, n) for(int i = (a); i <=(n); ++i)
#define Repr(i, a, n) for(int i = (n); i >= (a); --i)
using namespace std;
typedef long long ll;
const double PI = acos(-1.0);
const int inf = int(2e9);
const int _inf = -inf;
const int mod = inf + 7;
using namespace std;
vector<int> g[51];
vector<int> res;
bool used[51];
bool was[51];
int d[51][3];
void dfs(int v){
	used[v] = 1;
	res.pb(v);
	rep(i, g[v].size())
	{
		int to = g[v][i];
		if(!used[to]) dfs(to);
	}
}
void solve(){
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < m; ++i){
		int u, v;
		cin >> u >> v;
		g[u].pb(v);
		g[v].pb(u);
	}	
	int sum = n;
	vector<int> ans;
	int cnt = 1;
	for(int i = 0; i <= 51; ++i) for(int j = 0; j < 3; ++j) d[i][j] = -1;
	for(int i = 1; i <= n; ++i)
	{
		if(!used[i]){
			res.clear();
			dfs(i);
			if(res.size() > 3) {
				cout << -1;
				return;
			}
			else if(res.size() == 1) continue;
			else{
				rep(j, res.size())
				{
					d[cnt][j] = res[j];
					was[res[j]]	= 1;	
				}
				cnt++;
			}

		}
	}
	if(cnt > n / 3 + 1) {
		cout << -1;
		return;
	}
	for(int i = 1; i <= n; ++i) if(!was[i]) ans.pb(i);
	int p = 0;
	for(int i = 1; i <= n / 3; ++i){
		for(int j = 0; j < 3; ++j){
			if(d[i][j] == -1) { cout << ans[p] << " "; p++; }
			else cout << d[i][j] << " "; 
		}
		cout << endl;
	}
}
int main(){
	solve();
return 0;
}