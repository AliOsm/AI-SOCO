#include <bits/stdc++.h>

using namespace std;
const int N=1e5+5;
vector< pair<int,int> >  arr[N];
map<int,int>id;
long long largest[N];
int idx[N];
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    int n,mx1,mx2,cnt=0;
    long long ans=-1;
    memset(largest,-1,sizeof largest);
    cin>>n;
    for(int i=0;i<n;i++)
    {
        int c,h;
        cin>>c>>h;
        if(id[c]==0) id[c]=++cnt;
        arr[id[c]].push_back({h,i+1});
    }
    vector< pair<int,int> >v;
    for(int i=0;i<N;i++)
    {
        if(arr[i].size()==0) continue;
        sort(arr[i].rbegin(),arr[i].rend());
        long long sum=0;
        v=arr[i];
        for(int j=0;j<v.size();j++)
        {
            sum+=v[j].first;
            if(sum>largest[j+1])
            {
                largest[j+1]=sum;
                idx[j+1]=i;
            }
        }
    }
    for(int i=0;i<N;i++)
    {
        if(arr[i].size()==0) continue;
        v=arr[i];
        long long sum=0;
        for(int j=0;j<v.size();j++)
        {
            sum+=v[j].first;
            if(sum+largest[j]>ans&&largest[j]!=-1&&idx[j]!=i)
            {
                ans=sum+largest[j];
                mx1=i;
                mx2=idx[j];
            }
            if(sum+largest[j+1]>ans&&largest[j+1]!=-1&&idx[j+1]!=i)
            {
                ans=sum+largest[j+1];
                mx1=i;
                mx2=idx[j+1];
            }
            if(sum+largest[j+2]>ans&&largest[j+2]!=-1&&idx[j+2]!=i)
            {
                ans=sum+largest[j+2];
                mx1=idx[j+2];
                mx2=i;
            }
        }
    }
    cout<<ans<<endl;
    cout<<arr[mx2].size()+arr[mx2].size()+(arr[mx1].size()>arr[mx2].size())<<endl;
    for(int i=0;i<arr[mx2].size();i++)
    {
        cout<<arr[mx1][i].second<<" "<<arr[mx2][i].second<<" ";
    }
    if(arr[mx1].size()>arr[mx2].size())
        cout<<arr[mx1][arr[mx2].size()].second;
    cout<<endl;
    return 0;
}
