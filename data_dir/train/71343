# include <bits/stdc++.h>
using namespace std;
# define fi cin
# define fo cout
# define x first
# define y second
# define ll long long
# define db long double
# define scn(x) scanf("%I64d",&x)
# define scan(x) scanf("%d",&x)
# define print(x) printf("%d ",x)
# define prnt(x) printf("%I64d ",x);
# define eol printf("\n")
unordered_map < int , int > F[10015];
pair < int , int > Q[1 << 20];
int dp[5][1 << 20];
int d[1 << 20];
int bfs(int n)
{
    d[0] = 0;
    for (int i = 1;i <= n;++i) d[i] = -1;
    queue < int > q;
    q.push(0);
    while (!q.empty() && d[n] == -1)
    {
        int node = q.front();
        q.pop();
        for (auto it : F[node])
            if (it.y > 0 && d[it.x] == -1)
                d[it.x] = node,q.push(it.x);
    }
    if (d[n] == -1) return 0;
    int flow = 1e9;
    for (int vertex = n;vertex;vertex = d[vertex]) flow = min(flow,F[d[vertex]][vertex]);
    for (int vertex = n;vertex;vertex = d[vertex])
        F[d[vertex]][vertex] -= flow,F[vertex][d[vertex]] += flow;
    return flow;
}
int main(void)
{
    int n,b,q;
    fi>>n>>b>>q;
    Q[++q] = {b,n};
    for (int i = 1;i < q;++i) fi>>Q[i].x>>Q[i].y;
    sort(Q+1,Q+1+q);
    for (int i = 1;i < q;++i) if (Q[i+1].y < Q[i].y) return puts("unfair") * 0;
    for (int i = 1;i <= 5;++i) F[0][i] = n / 5;
    dp[0][0] = 0;
    for (int i = 1;i <= 1e4 + 55;++i)
        for (int k = 0;k < 5;++k)
            dp[k][i] = dp[k][i-1] + ((i%5) == k);
    for (int i = 1;i <= 5;++i)
        for (int j = 1;j <= q;++j)
            F[i][j+5] = dp[i%5][Q[j].x] - dp[i%5][Q[j-1].x];
    for (int i = 1;i <= q;++i)
        F[i+5][q+6] = Q[i].y - Q[i-1].y;
    int flow = 0,cnt = 0;
    while ((cnt = bfs(q+6)) != 0) flow += cnt;
    return 0 * puts(flow == n ? "fair" : "unfair");
}
