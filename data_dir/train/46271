#include<bits/stdc++.h>
#define int long long
#define ll long long
#define F first
#define S second
#define ld long double
using namespace std;

const int MAXN = 501 * 1001  ;

vector < int > adj [ MAXN ] ;

int st [ MAXN ] = {} , sz [ MAXN ] = {} , en [ MAXN ] = {} , tme = 0 , n , dp [ MAXN ] = {} , mark [ MAXN ]   ;


int  dp3 [ MAXN ] = {}  , dp4 [ MAXN ] = {} ;

void dfs(int u , int p )
{
    st[u] = tme ++ ;
    sz[u] = 1 ;
    for(auto v : adj[u])
    {
        if(v==p)
            continue ;
        dfs(v,u);
        sz[u] += sz[v] ;
        if(sz[v]>n/2)
        {
            if(sz[v] - dp[v] > n/2)
                mark[u] = 1 ;
        }
        dp[u] = max(dp[u],dp[v]);
    }
    if(n-sz[u]>n/2)
        mark[u] = 2 ;
    if(sz[u]<=n/2)
        dp[u] = sz[u] ;
    en[u] = tme ;



}

void dfs2(int u , int p )
{

    int mx1 = -1, mx2 = -1 , ind1 = 0  ;
    for(auto v : adj[u])
    {
        if(v==p)
            continue ;
        dp4[v] = dp4[u] ;
        if(dp[v]>=mx1)
            mx2 = mx1, mx1 = dp[v] , ind1 = v ;
        else
            if(dp[v]>=mx2)
                mx2 = dp[v] ;
    }
    for(auto v : adj[u])
    {
        if(v==p)
            continue ;
        dp3[v] = dp3[u] ;
        if(v!=ind1)
            dp4[v] = max(dp4[v],mx1);
        else
            dp4[v] = max(dp4[v],mx2);
        if(n-sz[u]<=n/2)
        {
            dp3[v] = max(dp3[v],n-sz[u]);
        }
        dfs2(v,u);
    }
}

int32_t main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> n ;
    int x , y ;
    for(int i = 0 ; i < n - 1 ; i ++ )
    {
        cin >> x >> y ;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }

    dfs(1,0);
    dfs2(1,0);


    for(int i = 1 ; i <= n ; i ++ )
    {
        if(mark[i]==2)
        {
           // cout << i << endl ;
           if(n-sz[i]-dp4[i]<=n/2)
                mark[i] = 0;
        //   cout << i << ' '<< dp4[i] << endl ;

            if(dp3[i])
            {
                if(n-sz[i]-dp3[i]<=n/2)
                    mark[i] = 0 ;
            }
        }
    }
    for(int i = 1 ; i <= n ; i ++ )
        cout<<(mark[i]?0:1)<<' ';




}
