#pragma GCC optimize("O3")
#include<bits/stdc++.h>
#define rc(x) return cout<<x<<endl,0
#define pb push_back
#define in insert
#define er erase
#define fd find
#define fr first
#define sc second
typedef long long ll;
const ll INF=0x3f3f3f3f3f3f3f3f;
const ll llinf=(1LL<<61);
const int inf=(1<<30);
const int nmax=1e5+50;
const int mod=1e9+7;
using namespace std;
ll n,invf[55],s,sm,nr,i,msk,ans,f[25];
ll pw(ll n,ll p)
{
    ll tmp=n,ans=1;
    for(int i=0;i<=32;i++)
    {
        if(p&(1LL<<i))ans=(ans*tmp)%mod;
        tmp=(tmp*tmp)%mod;
    }
    return ans;
}
ll nck(ll x,ll y)
{
	if(x<0 || y>x || y<0)return 0LL;
	if(x-y<y)y=x-y;
	x%=mod;
	ll rs=1;
	for(ll i=0;i<y;i++)
	{
		rs=(rs*(x-i))%mod;
		rs=(rs*invf[i+1])%mod;
	}
	return rs;
}
int main()
{
    //freopen("sol.in","r",stdin);
    //freopen("sol.out","w",stdout);
    ios_base::sync_with_stdio(false);cin.tie(0);cerr.tie(0);cout.tie(0);
	cin>>n>>s;
	invf[0]=1;
	for(i=1;i<=50;i++)invf[i]=pw(i,mod-2);
	for(i=0;i<n;i++)cin>>f[i];
	for(msk=0;msk<(1<<n);msk++)
	{
		nr=sm=0;
		for(i=0;i<n;i++)
		{
			if(msk&(1<<i))
			{
				nr++;
				sm+=f[i]+1;
			}
		}
		if(!(nr&1))ans=(ans+nck(s-sm+n-1,s-sm))%mod;
		else ans=(ans-nck(s-sm+n-1,s-sm)+mod)%mod;
	}
	//ans=(nck(s+n-1,s)-ans+mod)%mod;
	cout<<ans<<endl;
    return 0;
}
