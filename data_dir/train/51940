#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define MAX ((int)(1e4))
#define MAX_X ((int)(1e6 + 2))
#define pi (2.0*acos(0))
#define M ((int)(1e9 + 7))
#define NN ((ll)(305))
#define N ((int)(1e5 + 5))
#define eps (0)
#define log 21


using namespace std;
using namespace __gnu_pbds;

typedef long long ll;
typedef unsigned long long ull;


typedef tree < ll,  null_type,  less < ll >,  rb_tree_tag,  tree_order_statistics_node_update > o_set;

int dpp[2][N];

int call(bool flag , int idx)
{
    if(idx<0) return 0;
    if(idx==0){
        if(flag) return 1;
        return 0;
    }

    if( dpp[flag][idx]!=-1) return dpp[flag][idx];
    int ans = call(flag , idx-1) + call(1,idx - 2);
    if(ans>=M) ans -= M;
    return dpp[flag][idx] = ans;
}

int main()
{
    int n , m, ans = 0;
    scanf("%d %d",&n,&m);
    memset(dpp,-1,sizeof dpp);
    ans += call(0,n);
    ans += ans;
    if(ans>=M) ans -= M;
    int tmp = call(0,m);
    tmp += tmp;
    if(tmp>=M) tmp -= M;
    ans += tmp;
    if(ans>=M) ans -= M;
    ans += 2;
    if(ans>=M) ans -= M;
    printf("%d\n",ans);
    return 0;
}
