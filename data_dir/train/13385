#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
#define fi first
#define se second

ll gcd(ll a, ll b) {
    if(!a || !b) {
        return a + b;
    }
    return gcd(b, a % b);
}

ll abs_(ll a) {return max(a, -a);}

ll fmod(ll &x, ll mod) {
    x = (x % mod + mod) % mod;
}

int main() {
    #define task "a"
    //freopen(task".in", "r", stdin);
    //freopen(task".out", "w", stdout);
    int n, m;
    cin >> n >> m;
    vector<vector<ll> > a(n, vector<ll>(m));
    ll mod = 0;
    vector<ll> c(n);
    vector<ll> d(m);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
            if (!i && j) {
                d[j] = a[i][j] - a[i][j - 1];
            }
            if (i && !j) {
                c[i] = a[i][j] - a[i - 1][j];
            }
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
            if (j) {
                mod = gcd(abs_(d[j] - (a[i][j] - a[i][j - 1])), mod);
            }
            if (i) {
                mod = gcd(abs_(c[i] - (a[i][j] - a[i - 1][j])), mod);
            }
        }
    }
    if (mod == 0) {
        mod = (ll)1e18;
    }
    c[0] = a[0][0];
    for (int i = 1; i < n; i++) {
        c[i] += c[i - 1];
    }
    for (int i = 1; i < m; i++) {
        d[i] += d[i - 1];
    }
    vector<vector<ll> > b(n, vector<ll>(m));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            b[i][j] = (c[i] + d[j]);
            fmod(b[i][j], mod);
        }
    }
    if (b != a) {
        cout << "NO" << endl;
        return 0;
    }
    cout << "YES" << endl;
    cout << mod << endl;
    for (int i = 0; i < n; i++) {
        fmod(c[i], mod);
        cout << c[i] << " ";
    }
    cout << endl;
    for (int i = 0; i < m; i++) {
        fmod(d[i], mod);
        cout << d[i] << " ";
    }
    cout << endl;
    return 0;
}
