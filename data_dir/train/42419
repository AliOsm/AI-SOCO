#include <iostream>
#include <vector>
#include <string>
using namespace std;

int solve()	//Shrek wins-(0) looses-(1) draw-(2)
{
	int N,M,K;
	string A[100];
	cin >> N >> M >> K;
	for(int i=0;i<N;i++)
		cin >> A[i];
	if(M==1)
		return 1;
	int tp[100];
	bool shrekOpen = 0;	//has row with only shrek & space
	bool donkOpen = 0;  //has row with only donk & space
	bool shrekClosed = 1;//all rows with shrek have no space
	bool donkClosed = 1;//all rows with donk have no space
	vector<int> difs;
	for(int i=0;i<N;i++)
	{
		tp[i] = 0;
		vector<int> x;
		for(int j=0;j<M;j++)
		{
			if(A[i][j]=='-') tp[i] |= 1;
			if(A[i][j]=='G') tp[i] |= 2;
			if(A[i][j]=='R') tp[i] |= 4;
			if(A[i][j]!='-') x.push_back(j);
		}
		if(tp[i] == 3) {shrekOpen = 1;shrekClosed = 0;}
		if(tp[i] == 5) {donkOpen = 1;donkClosed = 0;}
		if(tp[i] == 7) {shrekClosed = 0;donkClosed = 0;}
		if(tp[i] >= 6) difs.push_back(x[1]-x[0]-1);
	}
	if(shrekClosed) return 1;
	if(donkClosed) return 0;
	if(shrekOpen && donkOpen) return 2;
	if(shrekOpen) return 0;
	if(donkOpen) return 1;
	while(1)
	{
		bool arePos = 0;
		int tot = 0;
		for(int i=0;i<difs.size();i++)
		{
			if(difs[i] > 0) arePos = 1;
			tot += difs[i]&1;
			difs[i] >>= 1;
		}
		if(tot%(K+1))
			return 0;
		if(!arePos)
			break;
	}
	return 1;
}

int main()
{
	int x = solve();
	if(x==0) cout << "First" << endl;
	if(x==1) cout << "Second" << endl;
	if(x==2) cout << "Draw" << endl;
}