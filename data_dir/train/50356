#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <set>
#include <iomanip>
using namespace std;
#define INF 2001001001
#define MOD 1000000007
typedef long long ll;
set<int>divs;
int N,A[150001],B[150001];
queue<int>todo;

bool isprime(int X){
  for (int i=2;i*i<=X;i++)
    if (X%i==0)
      return false;
  return true;
}
int main()
{
  scanf("%d",&N);
  for (int i=0;i<N;i++)
    scanf("%d%d",&A[i],&B[i]);
  for (int i=2;i*i<=A[0];i++){
    if (A[0]%i==0){
      if (divs.count(i)==0 && isprime(i))
	divs.insert(i);
      if (divs.count(A[0]/i)==0 && isprime(A[0]/i))
	divs.insert(A[0]/i);
    }
  }
  for (int i=2;i*i<=B[0];i++){
    if (B[0]%i==0){
      if (divs.count(i)==0 && isprime(i))
	divs.insert(i);
      if (divs.count(B[0]/i)==0 && isprime(B[0]/i))
	divs.insert(B[0]/i);
    }
  }
  if (isprime(A[0]))
    divs.insert(A[0]);
  if (isprime(B[0]))
    divs.insert(B[0]);
  for (int i=1;i<N;i++){
    for (set<int>::iterator it=divs.begin();it!=divs.end();it++){
      if (A[i]%(*it)==0 || B[i]%(*it)==0)
	continue;
      else
	todo.push(*it);
    }
    while (!todo.empty()){
      divs.erase(todo.front());
      todo.pop();
    }
  }
  if (divs.size()==0)
    cout<<-1<<endl;
  else
    cout<<*divs.begin()<<endl;
  return 0;
}
