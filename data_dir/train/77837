/* In the name of Allah */
#include<bits/stdc++.h>
using namespace std;

const int N = 20;
double dp[1 << N][N], p[N][N];

int main() {
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			cin >> p[i][j];
	for (int i = dp[1][0] = 1; i < 1 << n; i++)
		for (int j = 0; j < n; j++)
			if (i >> j & 1)
				for (int k = 0; k < n; k++)
					dp[i][j] = max(dp[i][j], p[j][k] * dp[i ^ (1 << k)][j] + p[k][j] * dp[i ^ (1 << j)][k]);
	cout << fixed << *max_element(dp[(1 << n) - 1], dp[(1 << n) - 1] + n);
}
