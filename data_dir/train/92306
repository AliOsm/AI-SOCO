#include <bits/stdc++.h>
using namespace std;
using lld = int64_t;
using llf = long double;
const int N = 100000 + 5;

lld x[ N ], y[ N ];

int main() {
	ios_base::sync_with_stdio( false );
	cin.tie( nullptr );
	cout.precision(20);
	lld ax, ay, bx, by, tx, ty;
	cin >> ax >> ay >> bx >> by >> tx >> ty;
	int n; cin >> n;
	for ( int i = 0 ; i < n ; ++ i )
		cin >> x[ i ] >> y[ i ];
	llf tot = 0, ans = 1e100;
	for ( int i = 0 ; i < n ; ++ i )
		tot += hypot( x[ i ] - tx, y[ i ] - ty ) * 2;

	// only one person
	{
		llf m = hypot( ax - tx, ay - ty );
		for ( int i = 0 ; i < n ; ++ i ) {
			m = min( m, ( llf ) hypot( x[ i ] - ax, y[ i ] - ay ) - hypot( x[ i ] - tx, y[ i ] - ty ) );
		}
		ans = min( ans, tot + m );
	}
	{
		llf m = hypot( bx - tx, by - ty );
		for ( int i = 0 ; i < n ; ++ i ) {
			m = min( m, ( llf ) hypot( x[ i ] - bx, y[ i ] - by ) - hypot( x[ i ] - tx, y[ i ] - ty ) );
		}
		ans = min( ans, tot + m );
	}
	// both
	{
		int idx = -1;
		llf ma = hypot( ax - tx, ay - ty );
		for ( int i = 0 ; i < n ; ++ i ) {
			if ( hypot( x[ i ] - ax, y[ i ] - ay ) - hypot( x[ i ] - tx, y[ i ] - ty ) < ma ) {
				ma = hypot( x[ i ] - ax, y[ i ] - ay ) - hypot( x[ i ] - tx, y[ i ] - ty );
				idx = i;
			}
		}
		llf mb = hypot( bx - tx, by - ty );
		for ( int i = 0 ; i < n ; ++ i ) {
			if ( i == idx ) continue;
			mb = min( mb, ( llf ) hypot( x[ i ] - bx, y[ i ] - by ) - hypot( x[ i ] - tx, y[ i ] - ty ) );
		}
		ans = min( ans, tot + ma + mb );
	}
	{
		int idx = -1;
		llf mb = hypot( bx - tx, by - ty );
		for ( int i = 0 ; i < n ; ++ i ) {
			if ( hypot( x[ i ] - bx, y[ i ] - by ) - hypot( x[ i ] - tx, y[ i ] - ty ) < mb ) {
				mb = hypot( x[ i ] - bx, y[ i ] - by ) - hypot( x[ i ] - tx, y[ i ] - ty );
				idx = i;
			}
		}
		llf ma = hypot( ax - tx, ay - ty );
		for ( int i = 0 ; i < n ; ++ i ) {
			if ( i == idx ) continue;
			ma = min( ma, ( llf ) hypot( x[ i ] - ax, y[ i ] - ay ) - hypot( x[ i ] - tx, y[ i ] - ty ) );
		}
		ans = min( ans, tot + ma + mb );
	}
	cout << ans << '\n';
	return 0;
}