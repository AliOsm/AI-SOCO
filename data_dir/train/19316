#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <set>
using namespace std;

string s;
vector<string> x;
int ans;

bool cmp(string a, string b)
{
    int n = a.length();
    for (int i = 0; i < n; ++i)
        if (a[i] != b[i])
            return a[i] > b[i];
    return true;
}

int check(string s)
{
    int n = s.length();
    //for (int i = (n + 1) / 2; i < n; ++i)
    for (int i = n - 1; i >= (n + 1) / 2; --i)
    {
        if (s[i] == '0')
            continue;
        if (i != n - i)
            return i;
        else if (cmp(s.substr(0, i), s.substr(i)))
            return i;
    }
    return -1;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin >> s;
    x.push_back(s);
    while (x.size())
    {
        if (x.back().length() == 1)
        {
            x.pop_back();
            ++ans;
            continue;
        }
        if (x.back().length() == 1)
        {
            x.pop_back();
            ++ans;
            continue;
        }
        int tmp = check(x.back());
        if (tmp != -1)
        {
            string s1 = x.back().substr(0, tmp);
            string s2 = x.back().substr(tmp);
            x.pop_back();
            x.push_back(s1);
            x.push_back(s2);
        }
        else
        {
            x.pop_back();
            ++ans;
        }
    }
    cout << ans << endl;
    return 0;
}