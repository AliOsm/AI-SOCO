#include<bits/stdc++.h>
using namespace std;

long long f[1000000];
long long r[1000000];
long long h[1000000];
long long dp[1000000];
long long cur[1000000];
map<long long,bool> mp1;
map<long long,int> mp2;
int n;



long long get(int x,int l,int r,int ll,int rr)
{
    if(l>rr || r<ll)return 0;
    if(l>=ll && r<=rr)return f[x];
    int u=(l+r)/2;
    return max(get(x+x,l,u,ll,rr),get(x+x+1,u+1,r,ll,rr));
}

void up(int x,long long y)
{
    while(x)
    {
        f[x]=max(f[x],y);
        x/=2;
    }
}

int main()
{
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>r[i]>>h[i];
        cur[i]=r[i]*r[i]*h[i];
        mp1[cur[i]]=1;
    }
    int c=1;
    for(map<long long,bool>::iterator it=mp1.begin();it!=mp1.end();it++)
    {
        mp2[it->first]=c;
        ++c;
    }
    int sz=1;
    while(sz<n)sz+=sz;
    for(int i=1;i<=n;i++)
    {
        cur[i]=mp2[cur[i]];
        ///cout<<i<<' '<<cur[i]<<endl;
    }
    for(int i=1;i<=n;i++)
    {
        dp[i]=r[i]*r[i]*h[i]+get(1,1,sz,1,cur[i]-1);
        ///cout<<i<<' '<<get(cur[i]-1)<<endl;
        up(sz-1+cur[i],dp[i]);
    }
    for(int i=2;i<=n;i++)dp[i]=max(dp[i-1],dp[i]);
    cout.precision(9);
    cout<<fixed<<3.14159265359*(dp[n]);
}
