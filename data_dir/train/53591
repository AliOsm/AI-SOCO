#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
#define F first
#define S second



int main()
{
	#ifdef DGC
		freopen("a.txt", "r", stdin);
		//freopen("out.txt", "w", stdout);
	#endif
	ios_base::sync_with_stdio(0), cin.tie(0);

	string a, b, s;
	cin >> s;

	int n = s.length();
	int i = 0;
	while (i < n && s[i] == '0') ++i;

	if (i == n)
	{
		cout << "0";
		return 0;
	}

	s = s.substr(i, n-i);

	n = s.length();
	i = 0;
	while (i < n && s[i] != '.') ++i;

	a = s.substr(0, i);
	b = (i < n) ? s.substr(i+1, n-(i+1)) : "0";
	if (a.empty()) a = "0";
	if (b.empty()) b = "0";

	if (a == "0" && b == "0")
	{
		cout << "0";
		return 0;
	}

	int la = a.length();
	int lb = b.length();

	while (lb > 1 && b[lb-1] == '0') --lb;
	b = b.substr(0, lb);

	if (b == "0")
		s = a, i = n = la;

	if (i == n)
	{
		int cnt = 0;
		while (s[n-1] == '0') --n, ++cnt;

		cout << s[0];
		if (n > 1)
			cout << "." << s.substr(1, n-1);
		if (cnt+n-1 > 0)
			cout << "E" << cnt+n-1;
		return 0;
	}

	s = a+b;
	n = s.length();
	i = 0;
	while (i < n && s[i] == '0') ++i;
	s = s.substr(i, n-i);

	cout << s[0];
	if (s.length() > 1)
		cout << "." << s.substr(1, n-1);
	int cnt = (i >= la) ? (la-i-1) : (la-i-1);
	if (cnt != 0)
		cout << "E" << cnt;

	return 0;
}
