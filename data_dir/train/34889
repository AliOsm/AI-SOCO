#include <cstdlib>
#include <iostream>
#include <map>
#include <stdio.h>
#include <vector>
#include<bits/stdc++.h>
#include <ctype.h>
#include <list>
#include <stack>
#include <queue>
#include <string.h>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#define _CRT_SECURE_NO_DEPRECATE
#define INF 1000000000
#define Set(a, s) memset(a, s, sizeof (a))
#define forpos(i,j,k) for (int i=0 ; i<j ; i+=k)
#define forneg(i,j,k) for (int i=j ;i>=0 ;i-=k)
#define PI 3.14159265358979323846
#define pf printf
#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
       ( std::ostringstream() << std::dec << x ) ).str()
#include<queue>


using namespace std;

typedef long long ll;
typedef std::pair<int,int> ii;
typedef std::pair<std::string,int> si;
typedef vector<int> vi;
typedef vector<ii> vii;
/*ll bfs( ll m )
{

    ii x = q.front();q.pop();
    vis[x.first]=1;
    if(x.first==m)return x.second;
    if(x.first-1>=0 && vis[x.first-1]!=1)
    q.push(pair<int,int>(x.first-1,x.second+1));
    if(x.first*2 <=2*m && vis[x.first*2]!=1)
    q.push(pair<int,int>(x.first*2,x.second+1));

    return bfs(m);

}*/
int main(){
   // ios::sync_with_stdio(false) ;
    int n , s ,a, b ; cin >> n >> s;
    int mx=-1;
    while(n--)
    {

        cin>>a>>b;
        if(a<s )
            if(b==0)mx=max(mx,0);
            else mx=max(mx,100-b);
        else if(a==s && b==0)mx=max(mx,0) ;
    }
    cout<<mx;
    return 0 ;
}
/*
int main(){
    ios::sync_with_stdio(false) ;
    int t ;
    cin>>t ;
    for(int r = 0 ; r<t ; r++ ){
           int n ; cin>>n ;
           int m ; cin>>m ;

           int a[m+1][n+1] ;

           for(int i  = 0 ; i<n ;i++){
            for(int j = 0 ; j <m ; j++){
                a[i][j] = 0 ;
                int x ; cin>>x ;
                a[i][j] = x ;

            }
           }
           bool flag1 = true ;
           bool flag2 = true ;

           for(int i  = 0 ; i<n ;i++){
                int counter = 0 ;
            for(int j = 0 ; j <m ; j++){
            counter+=a[i][j];
            if(counter>2){
                    flag1 = false ;
                     break ;
            }
           }
           }
           for(int j = 0 ; j <m ; j++){
                int counter =  0;
           for(int i  = 0 ; i<n ;i++){
            counter+=a[i][j];
            if(counter>2){
                    flag2 = false ;
                    break ;
            }
           }
           }

           if(flag1&&flag2)cout<<"Yes"<<endl ;
           else cout<<"No"<<endl ;




    }

    return 0 ;
} */
