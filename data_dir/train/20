#include <bits/stdc++.h>
#define ll long long
#define ld long double
#define pb push_back
#define forq(i , a , b) for (int i = (a); i <= (b); ++i)
#define forr(i , b) forq( i , 0 , b - 1 )
#define F first
#define S second
#define I ->
#define endl '\n'
#define qqmemset(array , val) memset (array , val , sizeof(array))
#define ALLV(vect) vect.begin() , vect.end()
#define mid (st + en) / 2
#define lef 2 * Node
#define rig lef + 1

ll R = 7 + 1e9 , NUMTESTCASE ;
const int NN = 10 + 1e6 ;
const double pi = acos(-1.0) ;
int di [4] = {1 , 0 , -1 , 0} , dj [4] = {0 , 1 , 0 , -1} , DI [8] = {1 , 1 , 0 , -1 , -1 , -1 , 0 , 1} , DJ [8] = {0 , 1 , 1 , 1 , 0 , -1 , -1 , -1} ;
using namespace std;
string s , Draft ;
int n , k ;
void Up (int pos) {
    if (Draft [pos] != '9') return void (Draft [pos] ++ ) ;
    Draft [pos] = '0' ;
    Up (pos - 1) ;
}
void update (int pos) {
    if (s.substr (pos , k) == Draft) return update(pos + k) ;
    for (int i = pos ; i < min(pos + k , n); i ++)
        if (s [i] < Draft [i % k])
            return ;
        else if (s[i] > Draft [i % k])
            return Up (k - 1) ;
}
int main()
{
    cin >> n >> k >> s ;
    cout << n << endl ;
    int t = n ;
    Draft = s.substr (0 , k) ;
    while ( (s.size ()) % k)
        s += '0' ;
    n = s.size () ;
    update(0) ;
    string ans = "" ;
    for (int i = 0 ; i < t ; i ++ )
        ans += Draft [i % k] ;
    cout << ans ;
    return 0;
}
/*
454
444
*/
                