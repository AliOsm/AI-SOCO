// Kono Giorno Giovanna wa yume ga aru
// In tribute to ba4mohandes Akram and Tsunami

#pragma GCC optimize ("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("avx,avx2,fma,sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")

#include <bits/stdc++.h>
using namespace std;

/***********************************************/
/* Dear online judge:
 * I've read the problem, and tried to solve it.
 * Even if you don't accept my solution, you should respect my effort.
 * I hope my code compiles and gets accepted.
 *  ___  __     _______    _______      
 * |\  \|\  \  |\  ___ \  |\  ___ \     
 * \ \  \/  /|_\ \   __/| \ \   __/|    
 *  \ \   ___  \\ \  \_|/__\ \  \_|/__  
 *   \ \  \\ \  \\ \  \_|\ \\ \  \_|\ \ 
 *    \ \__\\ \__\\ \_______\\ \_______\
 *     \|__| \|__| \|_______| \|_______|
 */
const long long mod = 1000000007;
//const long long mod = 998244353;
mt19937 rng((int) chrono::steady_clock::now().time_since_epoch().count());

// watch this
//using ll = long long;
//typedef long long LL;
//using uint = unsigned int;
#define ll long long
#undef ll

const int mxN = 1000010;

bool solveG(vector<vector<int> > & g, vector<pair<int, int> > & degg, int n) {
	int N = g.size();
	vector<bool> vis(N);
	vector<int> res;
	for (int i = 0; i < N; i++) {
		int u = degg[i].second;
		if (vis[u])
			continue;
		res.push_back(u + 1);
		for (auto v : g[u]) {
			vis[v] = true;
		}
		vis[u] = true;
	}
	if ((int) res.size() >= n) {
		cout << "IndSet\n";
		for (int i = 0; i < n; i++)
			cout << res[i] << " \n"[i + 1 == n];
		return true;
	}
	return false;
}

bool solveE(vector<pair<int, int> > & eds, vector<pair<int, int> > & dege,
		int N, int n) {
	int M = eds.size();
	vector<bool> vis(N);
	vector<int> res;
	for (int i = 0; i < M; i++) {
		int u = dege[i].second;
		if (vis[eds[u].first] || vis[eds[u].second])
			continue;
		res.push_back(u + 1);
		vis[eds[u].first] = vis[eds[u].second] = true;
	}
	if ((int) res.size() >= n) {
		cout << "Matching\n";
		for (int i = 0; i < n; i++)
			cout << res[i] << " \n"[i + 1 == n];
		return true;
	}
	return false;
}

int main() {
#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	//	freopen("mr_x.txt", "r", stdin);
	//	freopen("out.txt", "w", stdout);
#endif

	int T;
	cin >> T;
	while (T--) {
		int n, N, M;
		cin >> n >> M;
		N = n * 3;
		vector<pair<int, int> > eds(M);
		vector<vector<int> > g(N);
		vector<pair<int, int> > degg(N);
		vector<pair<int, int> > dege(M);
		for (int i = 0; i < N; i++)
			degg[i].second = i;
		for (int i = 0, u, v; i < M; i++) {
			cin >> u >> v;
			u--, v--;
			eds[i] = make_pair(u, v);
			g[u].push_back(v);
			g[v].push_back(u);
			degg[u].first++;
			degg[v].first++;
		}
		for (int i = 0; i < M; i++) {
			dege[i] = {degg[eds[i].first].first + degg[eds[i].second].first, i};
		}
		// indep
		sort(begin(degg), end(degg));
		if (solveG(g, degg, n))
			continue;
		bool f = false;
		for (int i = 0; i < 47 && f; i++) {
			shuffle(degg.begin(), degg.end(), rng);
			if (solveG(g, degg, n))
				f = true;
		}
		if (f)
			continue;
		// matching
		sort(begin(dege), end(dege));
		if (solveE(eds, dege, N, n))
			continue;
		f = false;
		for (int i = 0; i < 47 && f; i++) {
			shuffle(dege.begin(), dege.end(), rng);
			if (solveE(eds, dege, N, n))
				f = true;
		}
		if (f)
			continue;
		cout << "Impossible\n";
	}
	return 0;
}
