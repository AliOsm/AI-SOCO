#include<bits/stdc++.h>
using namespace std;
typedef long double ld;
typedef long long int ll;

const ll logx=30;
const ll N=1e4+5;
const ll M=3e5+5;
const ll mod=1e9+7;
const ll INF=1e9+5;
const double PI = 3.14159265358979323846;

#define ints(n) scanf("%d",&n)
#define intp(n) printf("%d\n",n)
#define longs(n) scanf("%intd",&n)
#define longp(n) printf("%intd\n",n)

inline ll mul(ll a, ll b){ return (a * 1ll * b) % mod; }
inline ll sub(ll a, ll b){ ll c = a - b; if(c < 0) c += mod; return c; }
inline ll add(ll a, ll b){ ll c = a + b; if(c > mod) c -= mod; return c; }

#define f first
#define s second
#define pb(x) push_back(x)
#define pf(x) push_front(x)
#define mp(x,y) make_pair(x,y)
#define GCD(a,b) __gcd((a),(b))
#define all(v) v.begin(),v.end()
#define bits(x) __builtin_popcount(x)
#define LCM(a,b) ((a)*(b))/GCD((a),(b))
#define ms(dp,val) memset(dp,val,sizeof(dp))
#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);
template<typename T> T power(T x,T y,ll m){T ans=1;while(y>0){if(y&1LL) ans=(ans*x)%m;y>>=1ll;x=(x*x)%m;}return ans%m;}

#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
    cerr << name << " : " << arg1 << '\n';
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}

int n,m,a[16][N],val[16][N],dp[16][16][(1<<16)];

void PreCompute()
{
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<n;j++)
    {
      int mini=INF;
      if(i==j){continue;}
      for(int h=0;h<m;h++){mini=min(mini,(abs(a[i][h]-a[j][h])));}
      val[i][j]=mini;
    }
  }
}

int F(int fir,int las,int mask)
{
  int maxi=-INF;
  if(bits(mask)==n-1)
  {
    int rem,hmin=INF;
    for(int i=0;i<n;i++)
    {
      int setx=mask&(1<<i);
      if(setx){continue;}
      rem=i;break;
    }
    hmin=val[las][rem];
    for(int i=0;i<m-1;i++){hmin=min(hmin,abs(a[rem][i]-a[fir][i+1]));}
    return hmin;
  }
  if(dp[fir][las][mask]!=-1){return dp[fir][las][mask];}
  for(int i=0;i<n;i++)
  {
    int setx=mask&(1<<i);
    if(setx){continue;}
    maxi=max(maxi,min(val[las][i],F(fir,i,mask|(1<<i))));
  }
  return dp[fir][las][mask]=maxi;
}

int main()
{
  fast;
  ms(dp,-1);
  cin>>n>>m;
  int maxi=0;
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<m;j++){cin>>a[i][j];}
  }
  PreCompute();
  if(n==1)
  {
    int mini=INF;
    for(int i=0;i<m-1;i++){mini=min(mini,abs(a[0][i]-a[0][i+1]));}
    cout<<mini<<endl;
    exit(0);
  }
  for(int i=0;i<n;i++){maxi=max(maxi,F(i,i,(1<<i)));}
  cout<<maxi<<endl;
}
