/////////////////////////   _LeMur_
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
//#include <chrono>
//#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <ctime>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 3005;
const int inf = 1000 * 1000 * 1000;
const int mod = 1000 * 1000 * 1000 + 7;

int n;
int s[N];

int answ[N];

int dp[N][N];
int mx[N] , id[N];

int mas[N][N];
int pref[N];

bool check(int id){
    if(s[id] == 0 && s[id + 1] == 0 && s[id + 2] == 1 && s[id + 3] == 1)return false;
    if(s[id] == 0 && s[id + 1] == 1 && s[id + 2] == 0 && s[id + 3] == 1)return false;
    if(s[id] == 1 && s[id + 1] == 1 && s[id + 2] == 1 && s[id + 3] == 0)return false;
    if(s[id] == 1 && s[id + 1] == 1 && s[id + 2] == 1 && s[id + 3] == 1)return false;
    return true;
}

int main() {
    //mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%d",&s[i]);
    }
    ///
    for(int i=1;i<=n;i++){
        for(int j=i+1;j<=n;j++){
            if(s[i] == s[j]){
                dp[i][j] = dp[i - 1][j - 1] + 1;
            }
            if(dp[i][j] > mx[j]){
                mx[j] = dp[i][j];
                id[j] = i;
            }
        }
    }
    ///
    mas[1][0] = 1;
    for(int i=1;i<=n;i++){
        mas[i + 1][i] = 1;
        for(int j=i;j>=1;j--){
            mas[j][i] = mas[j + 1][i];
            if(j + 1 <= i){
                mas[j][i] += mas[j + 2][i];
                mas[j][i] %= mod;
            }
            if(j + 2 <= i){
                mas[j][i] += mas[j + 3][i];
                mas[j][i] %= mod;
            }
            if(j + 3 <= i && check(j)){
                mas[j][i] += mas[j + 4][i];
                mas[j][i] %= mod;
            }
        }
    }
    ///
    pref[0] = 1;
    for(int i=1;i<=n;i++){
        pref[i] = 1;
        for(int j=1;j<=i;j++){
            pref[i] += mas[j][i];
            pref[i] %= mod;
        }
    }
    ///
    for(int i=1;i<=n;i++){
        answ[i] = answ[i - 1];
        ///
        int x = i - mx[i];
        answ[i] += (pref[x] - 1) * 1ll * mas[x + 1][i] % mod;
        answ[i] %= mod;
        ///
        for(int j=1;j<=3;j++){
            if(x - j + 1 < 1)break;
            for(int h=1;h<=3;h++){
                if(j + h > 4)break;
                if(x + h > i)break;
                if(j + h <= 3 || (j + h == 4 && check(x - j + 1))){
                    answ[i] += pref[x - j] * 1ll * mas[x + h + 1][i] % mod;
                    answ[i] %= mod;
                }
            }
        }
        ///
        printf("%d\n",answ[i]);
    }
	return 0;
}
