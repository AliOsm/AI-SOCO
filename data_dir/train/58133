#include <bits/stdc++.h>

#define SZ(x) (((int)x.size()))

typedef long long ll;

using namespace std;

const int mod = 1000000007, maxn = 300*1000+10;
int n, p, t, q, s[maxn], f[maxn], x, k, h[maxn];
ll sum[maxn], man[maxn];
vector<int> vec[maxn];

void add(ll *a, int loc, int val)
{
	for (loc++; loc <= n; loc += loc & -loc)
	{
		a[loc] += val;
		a[loc] %= mod;
	}
}

ll get(ll *a, int loc)
{
	ll res = 0;
	for (; loc; loc -= loc & -loc)
	{
		res += a[loc];
		res %= mod;
	}
	return res;
}

void dfs(int u)
{
	s[u] = t++;
	for (auto w : vec[u])
	{
		h[w] = h[u] + 1;
		dfs(w);
	}
	f[u] = t;
}

int main()
{
	ios::sync_with_stdio(0);
	scanf("%d", &n);
	for (int i = 0; i < n - 1; i++)
	{
		scanf("%d", &p);
		p--;
		vec[p].push_back(i + 1);
	}
	dfs(0);
	scanf("%d", &q);
	for (int i = 0; i < q; i++)
	{
		scanf("%d", &t);
		if (t == 1)
		{
			scanf("%d %d %d", &t, &x, &k);
			t--;
			add(sum, s[t], ((ll)x + (ll)h[t] * k) % mod);
			add(sum, f[t], mod - ((ll)x + (ll)h[t] * k) % mod);
			add(man, s[t], k);
			add(man, f[t], mod - k);
		}
		else
		{
			scanf("%d", &x);
			x--;
			printf("%lld\n", (get(sum, s[x] + 1) + mod - ((get(man, s[x] + 1) * h[x]) % mod)) % mod);
		}
	}
	return 0;
}
