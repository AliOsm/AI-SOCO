#include <bits/stdc++.h>

#define x0 abc
#define y0 ABC
#define x1 abcd
#define y1 ABCD
#define xn abcde
#define yn ABCDE

#define l_b lower_bound
#define u_b upper_bound

#define fi first
#define se second
#define m_p make_pair

#define p_b push_back
#define po_b pop_back

#define ld long double
#define ll long long

#define re return
#define cont continue

#define MAXLL 9000000000000000000LL
#define MAXINT 2000000000

#define MINLL -9000000000000000000LL
#define MININT -2000000000

#define P acos(-1)

#define endl '\n'

#define OUT cout << "-------" << endl;

using namespace std;

char c[251];

int a[251], n, i, j;

bool pole[251], mx[251][251];

bool x;

    void dfs(int nom, int deep)
    {
        int i;

        pole[nom] = true;

        a[nom] = deep % 2;

        for (i = 1; i <= n; i++)
            if ((!pole[i]) && (mx[nom][i])) dfs(i, deep + 1);
    }

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> n;

    for (i = 1; i <= n; i++) cin >> c[i];

    for (i = 1; i <= n; i++)
        for (j = i + 1; j <= n; j++)
            if (c[i] > c[j]) mx[i][j] = mx[j][i] = true;

    for (i = 1; i <= n; i++)
        if (!pole[i]) dfs(i, 0);

    x = true;

    for (i = 1; i <= n; i++)
        for (j = 1; j <= n; j++)
            if ((mx[i][j]) && (a[i] == a[j])) x = false;

    if (!x) {
        cout << "NO" << endl;

        re 0;
    }

    cout << "YES" << endl;

    for (i = 1; i <= n; i++) cout << a[i];

    cout << endl;

    re 0;
}
