#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define int long long
#define ll long long
#define ull unsigned long long
#define ff first
#define ss second
#define pb push_back
#define mk make_pair
#define ld long double
#define y1 asdfghjkl
#define y2 asdfghjkq
#define y3 asdfghjkw
#define ufo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
using namespace std;
using namespace __gnu_pbds;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;

mt19937_64 mt_rnd_64(chrono::steady_clock::now().time_since_epoch().count());
long long rnd(long long l, long long r){
    return (mt_rnd_64() % (r-l+1)) + l;
}

const int N = 1e3 + 5;

int t;
int n;
int A,B,s,sp,l,r,cnt;
bool x;
int a[N];

main()
{
    ufo;
    cin>>t;
    for(int T = 0;T < t;T++){
        cin>>n;
        for(int i = 1;i <= n;i++)
            cin>>a[i];
        x = 1;
        l = 2;
        r = n;
        A = a[1];
        B = 0;
        sp = a[1];
        cnt = 1;
        while(1){
            if(l > r)break;
            cnt++;
            if(!x){
                s = 0;
                while(s <= sp && l <= r){
                    A += a[l];
                    s += a[l++];
                }
                sp = s;
            }
            else{
                s = 0;
                while(s <= sp && r >= l){
                    B += a[r];
                    s += a[r--];
                }
                sp = s;
            }
            x ^= 1;
        }
        cout<<cnt<<' '<<A<<' '<<B<<'\n';
    }
}
