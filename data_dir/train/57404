#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
// #pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
#include <random>
#include <sstream>
#include <complex>
 
using namespace std;

#define int long long
#define ull unsigned long long
#define double long double
#define time time228
#define left left228
#define right right228

template<typename T> void uin(T &a, T b) {
    if (b < a) a = b;
}

template<typename T> void uax(T &a, T b) {
    if (b > a) a = b;
}

const int N = 555;

int a[N][N], c[N];

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
	int n, m;
	cin >> n >> m;
	int x = 0;
	for (int i = 1; i <= n; ++i) {
		c[i] = 1;
		for (int j = 1; j <= m; ++j) {
			cin >> a[i][j];
		}
		x ^= a[i][1];
	}
	if (x) {
		cout << "TAK\n";
		for (int i = 1; i <= n; ++i) cout << c[i] << endl;
		return 0;
	}
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= m; ++j) {
			if (a[i][j] != a[i][1]) {
				c[i] = j;
				break;
			}
		}
		if (a[i][c[i]] != a[i][1]) {
			cout << "TAK\n";
			for (int j = 1; j <= n; ++j) cout << c[j] << endl;
			return 0;
		}
	}
	cout << "NIE\n";
	return 0;
}
