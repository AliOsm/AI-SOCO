#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<double> point;
#define F first
#define S second

string sum(string a, string b)
{
	//cout << a << " " << b << endl;
	string c = "";
	int r = 0;
	//reverse(a.begin(), a.end());
	//reverse(b.begin(), b.end());

	while (!a.empty() || !b.empty())
	{
		int d1 = a.empty() ? 0 : (a.back()-'0');
		int d2 = b.empty() ? 0 : (b.back()-'0');
		if (!a.empty()) a.pop_back();
		if (!b.empty()) b.pop_back();

		c.push_back((d1+d2+r) % 10 + '0');
		r = (d1+d2+r) / 10;
	}

	while (r > 0)
		c.push_back(r % 10), r /= 10;
	reverse(c.begin(), c.end());
	//cout << c << endl;
	return c;
}

int main()
{
	#ifdef DGC
		//freopen("a.txt", "r", stdin);
		//freopen("b.txt", "w", stdout);
	#endif

	ios_base::sync_with_stdio(0), cin.tie(0);

	int n;
	cin >> n;
	string s;
	cin >> s;

	string ans = s+s;
	for (int i = n/2, c = 0; i < n && c < 3; ++i)
		if (s[i] != '0')
		{
			string temp = sum(s.substr(0, i), s.substr(i, n-i));
			if (temp.length() < ans.length() || (temp.length() == ans.length() && temp < ans))
				ans = temp;
			++c;
		}

	for (int i = n/2-1, c = 0; i > 0 && c < 3; --i)
		if (s[i] != '0')
		{
			string temp = sum(s.substr(0, i), s.substr(i, n-i));
			if (temp.length() < ans.length() || (temp.length() == ans.length() && temp < ans))
				ans = temp;
			++c;
		}

	cout << ans << "\n";

	return 0;
}
