#include <bits/stdc++.h>

using namespace std;

// for debug
//#define cin myCin
//ifstream cin("test.txt");
//#define cout myCout
//ofstream cout("res.txt");
#define STOP system("pause");

#define FORU(i, a, b) for (int i = a; i < b; i++)
#define FORD(i, a, b) for (int i = a - 1; i >= b; i--)
#define ALL(v) v.begin(), v.end()
#define MAXEL(x, n) *max_element(x, x + n)
#define MAXELS(v) *max_element(ALL(v))
#define MINEL(x, n) *min_element(x, x + n)
#define MINELS(v) *min_element(ALL(v))
#define LB(x, n, a) int (lower_bound(x, x + n, a) - x)
#define LBS(v, a) int (lower_bound(ALL(v), a) - v.begin())
#define UB(x, n, a) int (upper_bound(x, x + n, a) - x)
#define UBS(v, a) int (upper_bound(ALL(v), a) - v.begin())
#define SORT(x, n) sort(x, x + n)
#define SORTS(v) sort(ALL(v))
#define PB push_back
#define MP make_pair
#define CINVI(v) { int cur; cin >> cur; v.PB(cur); }
#define BSS(v, a) (LBS(v, a) == v.size() || v[LBS(v, a)] != a ? -1 : LBS(v, a))
#define REV(v) reverse(ALL(v))
#define SQR(a) (a) * (a)

typedef long long li;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <double, double> pdd;
typedef map <int, int> mii;
typedef map <string, int> msi;
typedef vector <int> vi;
typedef set <int> si;

const int SHINF = 1 << 15;
const int INF = 1 << 30;
const li LINF = 1LL << 62;

// types, constants and variables

// solving
void solve() {
}

const int N = 302;
int a[N], l[N], r[N];

// reading
int main() {
	ios_base :: sync_with_stdio(false);
	cin.tie(NULL);

	//-----------------------------------------------
	
	int n,m;
	cin >> n >> m;
	
	for (int i = 0; i < n; i++)
		cin >> a[i];
		
	for (int i = 0; i < m; i++){
		cin >> l[i] >> r[i];
		l[i]--;
		r[i]--;
	}
	
	int ans = 0, i0;
	for (int i = 0; i < n; i++){
		
		int p[N] = {0};
		for (int j = 0; j < m; j++)
			if (l[j] > i || r[j] < i){
				p[l[j]]--;
				p[r[j]+1]++;
			}
		
		int min = INF;
		for (int j = 0; j < n; j++){
			if (j > 0) p[j] += p[j-1];
			if (i != j && a[j]+p[j] < min) min = a[j]+p[j];
		}
			
		if (a[i]-min > ans){
			ans = a[i]-min;
			i0 = i;
		}
	}
	
	cout << ans << endl;
	
	vi v;
	for (int j = 0; j < m; j++)
		if (l[j] > i0 || r[j] < i0) v.PB(j+1);
		
	cout << v.size() <<endl;
	for (int i = 0; i < v.size(); i++)
		cout << v[i] << " ";
}
