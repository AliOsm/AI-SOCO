#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
#define fore(i,o,p) for(int i=o,ggd=p;i<ggd;i++)
#define pb push_back
#define SZ(a) ((int)(a).size())
#define mset(a,b) memset(a,b,sizeof(a));
#define ALL(a) a.begin(),a.end()
#define fst first
#define snd second

const int N=3e5+15;
int n,a[N],vis[10],dp[10][10][11][10];
ll res[10][10];
void get(int x,int y,int fr,int to) {
  memset(vis,0,sizeof(vis));
  queue<ii>q;
  q.push({fr,0});
  while(SZ(q)) {
    ii t=q.front();q.pop();
    if(vis[t.fst] && t.fst==to){
      dp[x][y][fr][to]=t.snd;
      return;
    }
    int l=(t.fst+x)%10,r=(t.fst+y)%10;
    if(!vis[l])vis[l]=1,q.push({l,t.snd+1});
    if(!vis[r])vis[r]=1,q.push({r,t.snd+1});
  }
}

void get_empty(int x,int y,int to) {
  memset(vis,0,sizeof(vis));
  queue<ii>q;
  q.push({0,1});
  vis[0]=1;
  while(SZ(q)) {
    ii t=q.front();q.pop();
    if(t.fst==to){
      dp[x][y][10][to]=t.snd;
      return;
    }
    int l=(t.fst+x)%10,r=(t.fst+y)%10;
    if(!vis[l])vis[l]=1,q.push({l,t.snd+1});
    if(!vis[r])vis[r]=1,q.push({r,t.snd+1});
  }
}

int main() {
  ios::sync_with_stdio(false);
  memset(dp,-1,sizeof(dp));
  string s;cin>>s;
  fore(x,0,10)fore(y,0,10)fore(to,0,10){
    get_empty(x,y,to);
    fore(fr,0,10)get(x,y,fr,to);
  }
  // fore(i,0,11){fore(j,0,10)cout<<dp[0][1][i][j]<<" ";cout<<endl;}
  fore(x,0,10) {
    fore(y,0,10) {
      int cur=10;
      for(char c:s){
        if(dp[x][y][cur][c-'0']==-1ll){res[x][y]=-1ll;break;}
        res[x][y]+=dp[x][y][cur][c-'0'];
        // if(x==0&&y==1)cout<<"now res: "<<res[x][y]<<endl;
        cur=c-'0';
      }
    }
  }
  fore(i,0,10){fore(j,0,10)cout<<max(-1ll,res[i][j]-SZ(s))<<" ";cout<<endl;}
}