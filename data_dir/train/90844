#include <bits/stdc++.h>
typedef long long ll;
using namespace std;
vector< bool> vis(26,0);
vector< set<ll> > adj(26);
vector< char > ans;
void dfs(ll u){
    ans.push_back(char('a' + u));
    vis[u]=1;
    for(auto &v:adj[u])if(!vis[v])dfs(v);
}

void solve(){
    string s;cin>>s;
    ll n = s.size();
    ans.clear();
    for(ll i=0;i<26;i++)adj[i].clear(),vis[i]=0;
    for(ll i=0;i<26;i++){
        for(ll j=0;j<n;j++){
            if(s[j]!=char('a'+i))continue;
            if(j-1>=0){
                ll l = s[j-1]-'a';
                if(!adj[i].count(l)){
                    adj[i].insert(l);
                    if(adj[i].size()>2){
                        cout<<"NO\n";
                        return;
                    }
                    adj[l].insert(i);
                    if(adj[l].size()>2){
                        cout<<"NO\n";
                        return;
                    }
                }
            }

            if(j+n<n){
                ll r = s[j+1]-'a';
                if(!adj[i].count(r)){
                    adj[i].insert(r);
                    if(adj[i].size()>2){
                        cout<<"NO\n";
                        return;
                    }
                    adj[r].insert(i);
                    if(adj[r].size()>2){
                        cout<<"NO\n";
                        return;
                    }
                }
            }
        }
    }

    for(ll i=0;i<26;i++){
        if(vis[i])continue;
        if(adj[i].size()==1)dfs(i);

        if(adj[i].size()>2){
            cout<<"NO\n";
            return;
        }
    }
    for(ll i=0;i<26;i++){
        if(vis[i])continue;
        if(adj[i].size()!=0){
            cout<<"NO\n";
            return;
        }
        ans.push_back(char('a'+i));
    }
    cout<<"YES\n";
    for(ll i=0;i<26;i++)cout<<ans[i];
    cout<<"\n";
}
int main(){
    ios_base:: sync_with_stdio(false);
    cin.tie(NULL); cout.tie(NULL);
    ll t;cin>>t;
    while(t--)solve();
}



