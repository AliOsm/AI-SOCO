#include<bits/stdc++.h>

#define SZ(x) ((int(x.size())))

typedef long long ll;

using namespace std;

map <string, bool> type;
map <string, int> v, s;
int t, tv, ts;
string ss, tt, asl, qq;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin >> t;
    type["void"] = 1;
    for (int j = 0; j < t; j++)
    {
        cin >> ss;
        if (ss == "typeof")
        {
            cin >> tt;
            tv = ts = 0;
            asl = "";
            for (int i = 0; i < tt.length(); i++)
            {
                if (tt[i] == '&')
                    tv++;
                else if (tt[i] == '*')
                    ts++;
                else
                    asl += tt[i];
            }
            if (asl == "errtype" || (asl != "void" && !type[asl]))
                cout << "errtype" << endl;
            else
            {
                if (tv < ts)
                {
                    ts -= tv;
                    tv = 0;
                }
                else
                {
                    tv -= ts;
                    ts = 0;
                }
                if (asl == "void" && tv > 0)
                    cout << "errtype" << endl;
                else if (asl == "void")
                {
                    cout << "void";
                    for (int i = 0; i < ts; i++)
                        cout << "*";
                    cout << endl;
                }
                else
                {
                    if (!type[asl])
                        cout << "errtype" << endl;
                    else
                    {
                        tv += v[asl];
                        ts += s[asl];
                        if (tv > ts)
                        {
                            tv -= ts;
                            ts = 0;
                        }
                        else
                        {
                            ts -= tv;
                            tv = 0;
                        }
                        if (tv > 0)
                            cout << "errtype" << endl;
                        else
                        {
                            cout << "void";
                            for (int i = 0; i < ts; i++)
                                cout << "*";
                            cout << endl;
                        }
                    }
                }
            }
        }
        else
        {
            cin >> tt >> qq;
            ts = tv = 0;
            asl = "";
            for (int i = 0; i < tt.length(); i++)
            {
                if (tt[i] == '&')
                    tv++;
                else if (tt[i] == '*')
                    ts++;
                else
                    asl += tt[i];
            }
            if (asl == "errtype")
            {
                type[qq] = 0;
                v[qq] = s[qq] = 0;
            }
            else
            {
                if (ts > tv)
                {
                    ts -= tv;
                    tv = 0;
                }
                else
                {
                    tv -= ts;
                    ts = 0;
                }
                if (asl == "void" && tv > 0)
                {
                    type[qq] = 0;
                    s[qq] = v[qq] = 0;
                }
                else if (asl == "void")
                {
                    type[qq] = 1;
                    v[qq] = 0;
                    s[qq] = ts;
                }
                else
                {
                    if (!type[asl])
                    {
                        type[qq] = 0;
                        s[qq] = v[qq] = 0;
                    }
                    else
                    {
                        ts += s[asl];
                        tv += v[asl];
                        if (ts > tv)
                        {
                            ts -= tv;
                            tv = 0;
                        }
                        else
                        {
                            tv -= ts;
                            ts = 0;
                        }
                        if (tv > 0)
                        {
                            type[qq] = 0;
                            s[qq] = v[qq] = 0;
                        }
                        else
                        {
                            type[qq] = 1;
                            s[qq] = ts;
                            v[qq] = 0;
                        }
                    }
                }
            }
        }
    }
    return 0;
}