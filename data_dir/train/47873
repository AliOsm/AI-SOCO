#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
const int INF = 1e9+7;
const int MAXN = 2e3 + 20;
const double eps = 1e-9;
const long long inf = 1e18;
const long double pi = acos(-1.0);
using namespace std;
/*
void qsort(int first, int last){
	int l,r,c,x;
	if (first < last) {
		x = a[ (first + last) / 2];
		l = first;
		r = last;
		while (l <= r){
			while (a[l] < x) l++;
			while (a[r] > x) r--;
			if (l <=r ){
				c = a[l];
				a[l] = a[r];
				a[r] = c;
				l++;
				r--;
			}
 		}
 		qsort(first , r);
 		qsort(l , last);
	}
}
*/ 

int n,m;
long long ft;

long long binpow(int a, int m){
	if (m == 0) return 1;
	
	if (m % 2 == 1) return (binpow(a , m - 1) * a ) % INF;
	else{
		long long b = (binpow(a , m / 2) ) % INF;
		return (b*b) %INF;
	}
}

void solve() {
	
	cin>>n>>m;
	ft = binpow(2 , m);
	cout<< binpow(ft - 1 , n ) % INF <<endl;
}
 
 
int main() {
    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);
    cout.setf(ios::fixed), cout.precision(20);
//  freopen("kotlin.in", "r", stdin);
//	freopen("kotlin.out", "w", stdout);
	
	int t = 1;
	while (t > 0){
		t--;
		solve();
	}
	return 0;
}
