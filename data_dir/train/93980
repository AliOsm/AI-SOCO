#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#include <ctime>

using namespace std;
 
#define sqr(a) ((a)*(a))
#define all(a) (a).begin(), (a).end()
 
const int MOD = (int) 1e9 + 7;
const int MAGIC = 400;
 
const bool DEBUG = false;

struct Fenwik {
    vector<int> t;

    Fenwik(int n) {
        t.resize(n + 1);
    }

    void inc(int pos) {
        ++pos;
        for (int i = pos; i < t.size(); i += (i & -i))
            ++t[i];
    }

    int get(int r) {
        ++r;
        int ans = 0;
        for (int i = r; i > 0; i -= (i & -i))
            ans += t[i];
        return ans;
    }
} ;

int main() {
    // freopen("input.txt", "r", stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    // srand(time(0));

    int n;
    cin >> n;

    vector<int> a(n);
    vector<pair<int, int> > b;
    for (int i = 0; i < n; ++i) {
        cin >> a[i];

        b.push_back({a[i], -i});
    }

    sort(all(b));
    reverse(all(b));

    for (int i = 0; i < n; ++i)
        b[i].second *= -1;

    int m;
    cin >> m;

    vector<pair<pair<int, int>, int> > q;
    for (int i = 0; i < m; ++i) {
        int k, pos;
        cin >> k >> pos;

        q.push_back({{k, pos}, i});
    }

    sort(all(q));

    int len = 0;
    Fenwik t(n);
    vector<int> ans(m);
    for (int i = 0; i < m; ++i) {
        while (len < q[i].first.first) {
            t.inc(b[len].second);

            // cout << "+ " << b[len].first << " " << b[len].second << "\n";

            ++len;
        }

        int l = 0;
        int r = n - 1;

        while (r - l > 1) {
            int c = (l + r) / 2;
            if (t.get(c) < q[i].first.second)
                l = c;
            else
                r = c;
        }

        int e;
        if (t.get(l) == q[i].first.second)
            e = l;
        else
            e = r;

        ans[q[i].second] = e;
        // cout << q[i].first.first << " " << q[i].first.second << " " << e << "\n";
    }

    for (auto i : ans)
        cout << a[i] << "\n";
}
