#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define pb push_back
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ff first
#define ss second
#define PI 2*acos(0.0)
#define all(a) a.begin(),a.end()
#define INF (1<<28)
#define mem(a,x) memset(a,x,sizeof(a))
#define SEGMENT_TREE left=2*node,right=left+1,mid=(b+e)/2
using namespace std;


/**------------------------------------BITMASK------------------------------------------**/
//int Change(int N, int pos){return N= N^(1<<pos);}
//bool Check(int N, int pos){return (bool)(N &(1<<pos));}
/**-----------------------------------------------------------------------------------------------**/

/**-----------------------------DIRECTION_ARRAY-------------------------**/
///------FOUR_DIRECTION---------///
//int fx[]={0,1,0,-1};
//int fy[]={1,0,-1,0};


///------EIGHT_DIRECTION---------///
//int fx[]={0,1,1,1,0,-1,-1,-1};
//int fy[]={1,1,0,-1,-1,-1,0,1};
/**--------------------------------------------------------------------------------------**/

//int gcd(int a, int b){return (a==0)? b: gcd(b%a,a);}
//int lcm(int a, int b){return (a/gcd(a,b))*b;}


/*****int exgcd(int A, int B, int *X, int *Y){


    int x2, y2, x1, y1, x, y, r, r1, r2, q;
    x2=1; y2=0;
    x1=0; y1=1;
    for(r2=A, r1=B; r1!=0 ; r2=r1, r1=r, x2=x1, y2=y1, x1=x, y1=y){

        q=r2/r1;
        r=r2%r1;
        x=x2-(x1*q);

        y=y2-(y1*q);
    }
    *X=x2;
    *Y=y2;
    return r2;

}******/




///-----------------------------START FROM HERE--------------------------------------///

string SS[1005];

vector<int>vv[2005], vv1[2005], vv2[2005];

int vis[2005], vis2[2005], st[2005];
int ans[2005];
void dfs(int u, int par, int xx){
    vis[u]=xx;
    for(int i=0; i<vv[u].size(); i++){
        int v=vv[u][i];
        if(vis[v]!=0)continue;
        if(v!=par)dfs(v, u, xx);

    }


}

bool dfs2(int u){


    vis2[u]=1;
    st[u]=1;
    bool ret=0;
    for(int i=0; i<vv2[u].size(); i++){

        int v=vv2[u][i];
        if(st[v]==1)return 1;
        if(vis2[v])continue;
        ret|=dfs2(v);
    }
    st[u]=0;
    return ret;


}

void dfs3(int u){

    int mx=1;
    for(int i=0; i<vv2[u].size(); i++){

        int v=vv2[u][i];
        if(ans[v]==0)dfs3(v);
        mx=max(mx, ans[v]+1);
        //if(u==1)cout<<v<<" "<<ans[v]+1<<" "<<mx<<endl;

    }
    if(mx==0)ans[u]=1;
    else ans[u]=mx;


}

int main(){

    int n,m;
    scanf("%d %d", &n, &m);

    for(int i=0; i<n; i++)cin>>SS[i];

    for(int i=0; i<n; i++){

        for(int j=0; j<m; j++){
            if(SS[i][j]=='='){
                vv[i+1].pb(n+j+1);
                vv[n+j+1].pb(i+1);
            }

        }

    }
    int xx=0;
    for(int i=1; i<=n+m; i++){
       if(vis[i]==0) dfs(i, i, ++xx);
    }
    for(int i=0; i<n; i++){

        for(int j=0; j<m; j++){

            if(SS[i][j]=='>')vv2[vis[i+1]].pb(vis[n+j+1]);
            else if(SS[i][j]=='<')vv2[vis[n+j+1]].pb(vis[i+1]);

        }

    }

    for(int i=1; i<=xx; i++){
        if(vis2[i]==0){
            bool cycle=dfs2(i);
            if(cycle){
                cout<<"No";
                return 0;
            }
        }

    }
//    cout<<"hoiche "<<xx<<endl;
    for(int i=1; i<=xx; i++){
        if(ans[i]==0)dfs3(i);

    }
    cout<<"Yes"<<endl;
    for(int i=1; i<=n; i++){

        cout<<ans[vis[i]]<<" ";
       // cout<<i<<" "<<vis[i]<<endl;
    }
    cout<<endl;
    for(int j=1; j<=m; j++){
        cout<<ans[vis[n+j]]<<" ";
        //cout<<j<<" "<<vis[n+j]<<endl;
    }


}

