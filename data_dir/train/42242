#include <bits/stdc++.h>
using namespace std;

struct pt {
	int x, y;

	pt(int x = 0, int y = 0) : x(x), y(y) {}

	pt operator - (const pt &p) const {
		return pt(x - p.x, y - p.y);
	}
};

int dot(pt a, pt b) {
	return a.x * b.x + a.y * b.y;
}

int cross(pt a, pt b) {
	return a.x * b.y - a.y * b.x;
}

bool is_right(vector <pt> p) {
	int c1 = dot(p[1] - p[0], p[2] - p[0]);
	int c2 = dot(p[0] - p[1], p[2] - p[1]);
	int c3 = dot(p[0] - p[2], p[1] - p[2]);

	int area = abs(cross(p[1] - p[0], p[2] - p[0]));

	if(area == 0)
		return false;

	return !c1 || !c2 || !c3;
}

int main() {
	vector <pt> p;
	for(int i = 0; i < 3; i++) {
		int x, y; scanf("%d%d", &x, &y);
		p.push_back(pt(x, y));
	}

	if(is_right(p)) {
		printf("RIGHT\n");
		return 0;
	}

	for(int i = 0; i < 3; i++) {
		for(int dx = -1; dx <= 1; dx++) {
			for(int dy = -1; dy <= 1; dy++) {
				if(abs(dx) + abs(dy) == 1) {
					p[i].x += dx;
					p[i].y += dy;

					if(is_right(p)) {
						printf("ALMOST\n");
						return 0;
					}

					p[i].x -= dx;
					p[i].y -= dy;
				}
			}
		}
	}

	printf("NEITHER\n");
	return 0;
}