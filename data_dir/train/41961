#include <iostream>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <map>
#include<unordered_map>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include<bitset>
#include<deque>
#include<string>
#include<list>
#include<iterator>
#include<sstream>
#include <algorithm>
#include <math.h>
#define lli long long int
#define lower(a) transform(a.begin(),a.end(),a.begin(),::tolower);

using namespace std;

const int N = 3e5 + 500;
const long long mod = 1e9 + 7;
const long long cmod = 998244353 ;
const long long inf = 1LL << 61;
const int M = 1e6 + 500;
const lli ths = 1LL << 40;
const int NN = 5e3 + 6;

lli ans = 0;
vector<string> dep[N];

lli idx = 0;
string s;

lli fun(string t) {
    lli val = 0;
    for(int i = 0; i < t.size(); i ++) {
        val *= 10;
        val += (t[i] - '0');
    }
    return val;
}


void dfs(lli d) {
    ans = max(ans, d);
    string temp = "";
    while(s[idx] != ',') {
        temp += s[idx ++];
    }
    dep[d].push_back(temp);
    idx ++;
    temp = "";
    while(idx < s.size() && s[idx] != ','){
        temp += s[idx ++];
    }
    lli times = fun(temp);
    idx ++;
    for(int i = 0; i < times; i ++) {
        dfs(d + 1);
    }
    return ;
}

void solve()
{
    cin>>s;
    while(idx < s.size()) {
        dfs(1);
    }
    cout<<ans<<endl;;
    for(int i = 1; i <= ans ; i ++) {
        for(auto it : dep[i])
            cout<<it<<' ';
        cout<<endl;
    }
    cout<<'\n';
    return ;
}

/*
*/

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    int t;
    t = 1;
//    cin>>t;
    while(t --)
    {
        solve();
    }
    return 0;
}

