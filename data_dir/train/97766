#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
const ll M=1e5+5,mod=1e9+7;
ll a[M],fact[M],sum[M],val[M];
map<ll,ll> m;
std::vector<ll> v;
ll power(ll a,ll b)
{
	ll val=1;
	while(b)
	{
		if(b%2)
			val=(val*a)%mod;
		a=(a*a)%mod;
		b/=2;
	}
	return val;
}
ll comb(ll n,ll k)
{
	if(k>n)
		return 0;
	ll x=fact[n];
	ll y=(fact[n-k]*fact[k])%mod;
	return (x*power(y,mod-2))%mod;
}
int main()
{
	ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	ll n,k,x,y,i,j;
	cin>>n>>k;
	fact[0]=1;
	for(i=1;i<=n;i++)
		fact[i]=(fact[i-1]*i)%mod;
	for(i=1;i<=n;i++)
	{
		cin>>a[i];
		ll temp=a[i];
		bool f=0;
		while(temp)
		{
			if(temp%10!=4 && temp%10!=7)
				f=1;
			temp/=10;
		}
		if(f==0)
			m[a[i]]++;
	}
	ll s=0;
	for(auto it=m.begin();it!=m.end();it++)
	{
		v.pb(it->ss);
		s+=it->ss;
	}
	ll rm=n-s;
	ll p=v.size();
	for(i=0;i<p;i++)
	{
		sum[1]=(sum[1]+v[i])%mod;
	}
	for(i=0;i<p;i++)
	{
		val[i]=(v[i]*(sum[1]-v[i]))%mod;
	}
	ll ans=0;
	for(i=2;i<=k;i++)
	{
		if(i>p)
			break;
		for(j=0;j<p;j++)
		{
			sum[i]=(sum[i]+val[j])%mod;
		}
		sum[i]=(sum[i]*power(i,mod-2))%mod;
		for(j=0;j<p;j++)
		{
			ll temp=(sum[i]-val[j])%mod;
			temp=(temp+mod)%mod;
			val[j]=(v[j]*temp)%mod;
		}
	}
	ans=comb(rm,k);
	for(i=1;i<=k;i++)
	{
		if(i>p)
			break;
		ans=(ans+(sum[i]*comb(rm,k-i))%mod)%mod;
	}
	cout<<ans<<"\n";
	return 0;
}