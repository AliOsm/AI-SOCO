#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <memory.h>
#include <cmath>
#include <string>
#include <ctime>

using namespace std;
const int MOD = 1000000007;
int dp[505][505];
int n;
int b[505];
int solve(int l, int r) {
    if (l > r) return 1;
    if (dp[l][r] != -1) return dp[l][r];
    int tmp = solve(l + 1, r);
    for (int i = l + 1; i <= r; ++i) {
        if (b[i] > b[l]) {
            long long cur = solve(l + 1, i - 1), c = solve(i, r);
            cur = cur * c % MOD;
            tmp = tmp + cur;
            if (tmp >= MOD) tmp -= MOD;
        }
    }
    dp[l][r] = tmp;
    return dp[l][r];
}
int main() {
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &b[i]);
    }
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j)
            dp[i][j] = -1;
    }
    printf("%d\n", solve(1, n - 1));
    return 0;
}
