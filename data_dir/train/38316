#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<ll> vll;
typedef pair<int, int> pii;
typedef vector<string> vs;
typedef vector<bool> vb;
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<vector<int> > vvi;
typedef vector<pii> vii;
typedef vector<vector<pii> > vvii;
typedef long double ld;
typedef map<int, int> mapii;
typedef map<string, int> mapsi;

#define erep(i, x, n) for (auto i = x; i<=(ll)(n); i++)
#define rep(i, x, n) for(auto i = x; i<(ll)(n); i++)
#define INF  LLONG_MAX
#define all(v) ((v).begin()), ((v).end())
#define sz(v) ((int)((v).size()))
#define pi  acos(-1)
#define mod(n,m) ((n % m + m) % m)
#define eps (1e-8)
#define reset(n, m) memset(n, m, sizeof n)
#define endl '\n'
#define output freopen("output.txt", "w", stdout)
#define mp(x, y, z) { x, {y, z } }

const int N = 1e6 + 5;
int n, k;
int cnt[N];
vi arr;
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	cin >> n >> k;
	arr = vi(n);
	vi temp;
	ll sum = 0;
	int mx = 0;
	rep(i, 0, n)
	{
		cin >> arr[i];
		mx = max(mx, arr[i]);
		cnt[arr[i]]++;
	}
	sort(all(arr));

	sum = n;

	rep(i, 0, n)
	{
		int idx = upper_bound(all(arr), arr[i] + k) - arr.begin();
		idx--;
		if (idx != i && arr[idx] > arr[i])
			sum--;
	}

	cout << sum;

	return 0;
}

