#include<bits/stdc++.h>
using namespace std ;
#define LL long long
#define MOD 1000000007LL
#define PI acos(-1.0)


/*
// Ordered set
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
template<typename T> using orderset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;
//orderset<int> s ; //orderset<int>::iterator it ;
//orderset<int> X; //X.insert(1); //X.insert(2); //X.insert(4); //X.insert(8); //X.insert(16);
//cout<<*X.find_by_order(1)<<endl; // 2 //cout<<*X.find_by_order(2)<<endl; // 4 //cout<<*X.find_by_order(4)<<endl; // 16 //cout<<(end(X)==X.find_by_order(6))<<endl; // true
//cout<<X.order_of_key(-5)<<endl;  // 0 //cout<<X.order_of_key(1)<<endl;   // 0 //cout<<X.order_of_key(3)<<endl;   // 2 //cout<<X.order_of_key(4)<<endl;   // 2 //cout<<X.order_of_key(400)<<endl; // 5
*/

LL n ;

LL a[100005][4] ;
vector< LL > res ;
bool Ck[100005] ;

map< pair< LL , LL > , vector< LL > > ma ;


void Input(){
    scanf("%lld",&n) ;
    for( int i = 1 ; i <= n - 2 ; i ++ ){
        for( int j = 1 ; j <= 3 ; j ++ ){
            scanf("%lld",&a[i][j]) ;
        }
    }
}

bool smane( pair< pair< LL , LL > , LL > tmp ){
    res.clear() ;
    LL tot = 0 ;
    pair< pair< LL , LL > , LL > tmp1 ;
    bool ok = 1 ;
    while( 1 ){
        tot ++ ;
        tmp1 = tmp ;
        Ck[tmp1.second] = 1 ;
        LL val = 0 ;
        res.push_back( tmp1.first.first ) ;
        for( int i = 1 ; i <= 3 ; i ++ ){
            if( a[tmp1.second][i] != tmp1.first.first && a[tmp1.second][i] != tmp1.first.second ){
                val = a[tmp1.second][i] ;
                break ;
            }
        }
        tmp.first = { tmp.first.second , val } ;
        if( ma[tmp.first].size() == 1 ){
            res.push_back( tmp1.first.second ) ;
            res.push_back( val ) ;
            break ;
        }
        else if(ma[tmp.first].size() == 2){
            if( ma[tmp.first][0] == tmp1.second ){
                tmp.second = ma[tmp.first][1] ;
            }
            else{
                tmp.second = ma[tmp.first][0] ;
            }
        }
        else{
            ok = 0 ;
            break ;
        }
        if( tot > n - 2 ) break ;
    }
    if( tot == n - 2 && ok ) return 1 ;
    return 0 ;
}

void Calculation(){
    for( int i = 1 ; i <= n - 2 ; i ++ ){
        for( int j = 1 ; j <= 3 ; j ++ ){
            for( int k = j + 1 ; k <= 3 ; k ++ ){
                ma[{a[i][j],a[i][k]}].push_back( i ) ;
                ma[{a[i][k],a[i][j]}].push_back( i ) ;
            }
        }
    }
    vector< pair< pair< LL , LL > , LL > > store ;
    for( auto x : ma ){
        if( x.second.size() == 1 ){
            store.push_back( { x.first , x.second[0] } ) ;
        }
    }
    for( auto x : store ){
        //cout<< x.first.first << " " << x.first.second << ": " << x.second << endl ;
        if( smane( x ) ){
            break ;
        }
    }
    for( auto x : res ){
        printf("%lld ",x) ;
    }
}

void Solve(){
    Input() ;
    Calculation() ;
}

int main()
{
    LL q ;
    //scanf("%lld",&q) ;
    q = 1 ;
    while( q -- ) Solve() ;
    return 0 ;
}
