#include <bits/stdc++.h>
using namespace std;
using namespace std::chrono;

#define all(x) begin(x), end(x)
#define sz(x) (ll)(x).size()

using ll = long long;
using ld = long double;
using bits = bitset<7>;

vector<bits> digits = {bits{"1110111"},
                       bits{"0010010"},
                       bits{"1011101"},
                       bits{"1011011"},
                       bits{"0111010"},
                       bits{"1101011"},
                       bits{"1101111"},
                       bits{"1010010"},
                       bits{"1111111"},
                       bits{"1111011"}};

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    ll n, k;
    cin >> n >> k;
    vector<bits> in(n);
    for (ll i = 0; i < n; i++) {
        cin >> in[i];
    }
    vector<vector<bool>> ok(n + 1, vector<bool>(k + 1));
    ok[n][0] = true;
    for (ll i = n - 1; i >= 0; i--) {
        for (ll j = 0; j <= k; j++) {
            for (ll d = 9; d >= 0; d--) {
                ll x = (in[i] ^ digits[d]).count();
                if ((in[i] | digits[d]) == digits[d] && j - x >= 0 && ok[i + 1][j - x]) {
                    ok[i][j] = true;
                }
            }
        }
    }
    for (ll i = 0; i < n; i++) {
        bool found = false;
        for (ll d = 9; d >= 0 && !found; d--) {
            ll x = (in[i] ^ digits[d]).count();
            if ((in[i] | digits[d]) == digits[d] && k - x >= 0 && ok[i + 1][k - x]) {
                found = true;
                cout << d;
                k -= x;
            }
        }
        if (!found) {
            cout << -1 << endl;
            return 0;
        }
    }
    cout << endl;
}
