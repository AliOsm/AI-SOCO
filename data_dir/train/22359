#include <bits/stdc++.h>
#define pb push_back
#define F first
#define S second
#define ins insert
#define mp make_pair
#define fo(i, n1, n, x) for(int i = n1; i <= n; i += x)
#define foo(i, n, n1, x) for(int i = n; i >= n1; i -= x)
#define bit __builtin_popcount
#define md (l + ((r - l) / 2))
#define all(x) x.begin(),x.end()
#define ll long long
#define ld long double
#define eb emplace_back
#define ub upper_bound
#define lb lower_bound
#define ios ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define file(s) if (fopen(s".in", "r")) freopen(s".in", "r", stdin), freopen(s".out", "w", stdout)

using namespace std;

const int N = 5e5 + 11, mod = 1e9 + 7;
const int INF1 = 2e9 + 11;
const ll INF2 = 2e18 + 11;
const int base = 500;
const int P = 31;
const int dx[] = {1, -1, 0, 0, 1, 1, -1, -1};
const int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};
const double EPS = 1e-12;
const double PI = acos(-1.0);

#define int ll

int n, a, b, t, ans, pref[N], suff[N];
string s;
inline void solve(string s) {
    for (int i = 0; i < n; ++i) pref[i] = pref[i - 1] + 1 + (i ? a : 0) + (s[i] == 'w' ? b : 0);
    for (int i = n - 1; i >= 0; --i) suff[i] = suff[i + 1] + 1 + a + (s[i] == 'w' ? b : 0);
    int cur = 0;
    for (int i = 0; i < n; ++i) {
        if (pref[i] > t) break;
        ans = max(ans, i + 1);
        while (pref[i] + suff[cur] + i * a > t) ++cur;
        ans = max(ans, i + 1 + n - cur);
    }
}
main() {
    file("queue");
    ios;
    cin >> n >> a >> b >> t >> s;
    solve(s);
    reverse(s.begin() + 1, s.end());
    memset(pref, 0, sizeof pref);
    memset(suff, 0, sizeof suff);
    solve(s);
    cout << min(ans, n);
    return 0;
}
