/// You just can't beat the person who never gives up
/// ICPC next year

#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<bits/stdc++.h>
using namespace std ;
const int N = 2e5+5 ;

int n ,k ,a[N] ;
map<int ,long long> prv ,nxt ,cntprv ,cntnxt ,cntt ;
int main(){
    scanf("%d%d",&n,&k);
    for(int i=0;i<n;++i){
        scanf("%d",a+i);
        ++cntt[a[i]] ;
    }
    sort(a,a+n);


    vector<pair<int,int>> tmp ;
    for(auto go:cntt) tmp.push_back(go);
    int cnt = 0 ;
    for(auto go:tmp){
        cntprv[go.first] = cnt ;
        cnt += go.second ;
    }
    cnt = 0 ;
    reverse(tmp.begin(),tmp.end());
    for(auto go:tmp){
        cntnxt[go.first] = cnt ;
        cnt += go.second ;
    }


    vector<int> v ;
    for(int i=0;i<n;++i) v.push_back(a[i]-1) ;
    int l = 0 ;
    long long sum = 0 ;
    cnt = 0 ;
    for(auto go:v){
        while(l<n && a[l]<go){
            ++cnt ;
            sum += a[l] ;
            ++l ;
        }
        prv[go] = 1ll*go*cnt - sum ;
    }
    v.clear() ;
    for(int i=0;i<n;++i) v.push_back(a[i]+1) ;
    cnt = 0 ;
    l = n-1 ;
    sum = 0 ;
    reverse(v.begin(),v.end());
    for(auto go:v){
        while(l>=0 && a[l]>go){
            ++cnt ;
            sum += a[l] ;
            --l ;
        }
        nxt[go] = sum - 1ll*go*cnt ;
    }
    long long ans = 1e18 ;
    for(auto go:cntt){
        long long aa = go.first ;

        long long cc = go.second ;
        if(cc>=k) return cout << 0,0 ;

        long long cprv = cntprv[aa] ;
        long long cnxt = cntnxt[aa] ;

        if(cc+cprv>=k){
            long long cur = prv[aa-1] + k - cc ;
            ans = min(ans ,cur) ;
        }
        if(cc+cnxt>=k){
            long long cur = nxt[aa+1] + k - cc ;
            ans = min(ans ,cur) ;
        }
        long long cur = prv[aa-1] + nxt[aa+1] + k - cc ;
        ans = min(ans ,cur);
    }
    cout << ans ;
    return 0;
}
