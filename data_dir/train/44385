#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

const int oo = 2000000000;

int main()
{
	int n; cin >> n;
	string dir; cin >> dir;
	int vs[n];
	set<int> left;
	set<int> right;
	for(int i = 0; i < n; i++)
	{
		cin >> vs[i];
		if(dir[i] == 'L') left.insert(vs[i]);
		else right.insert(vs[i]);
	}
	
	int ret = oo;
	for(int i = 0; i < n; i++)
	{
		if(dir[i] == 'L')
		{
			set<int>::iterator it = right.lower_bound(vs[i]);
			if(right.size() > 0 && it != right.begin())
			{
				it--;
				ret = min(ret, abs((*it)-vs[i]));
			}
		}
		else
		{
			set<int>::iterator it = left.upper_bound(vs[i]);
			if(it != left.end())
			{
				ret = min(ret, abs((*it)-vs[i]));
			}
		}
	}
	if(ret == oo) ret = -2;
	cout << ret/2 << endl;
	
	return 0;
}