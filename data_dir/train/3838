#include <bits/stdc++.h>

using namespace std;

#define si(a) scanf("%d",&a)
#define GH 48
#define MAX 100005
#define MOD 95542721

int s[4*MAX][GH],sft[4*MAX],lazy[4*MAX],a[MAX],n;

int mod_mul(long long a,long long b)
{
    return (a*b)%MOD;
}

int mod_plus(int a,int b)
{
    return (a+b)%MOD;
}

void build(int id=1,int l=0,int r=n)
{
    if(r-l<2){
        s[id][0]=a[l];
        for(int i=1;i<GH;i++)
            s[id][i]=mod_mul(mod_mul(s[id][i-1],s[id][i-1]),s[id][i-1]);
        return ;
    }
    int mid=(l+r)>>1;
    build(2*id,l,mid);
    build(2*id+1,mid,r);
    for(int i=0;i<GH;i++)
        s[id][i]=mod_plus(s[2*id][i],s[2*id+1][i]);
}

void update(int val,int id)
{
    lazy[id]+=val;
    sft[id]=(sft[id]+val)%GH;
}

void shift(int id)
{
    update(lazy[id],2*id);
    update(lazy[id],2*id+1);
    lazy[id]=0;
}

void increase(int b,int e,int id=1,int l=0,int r=n)
{
    if(b>=r || e<=l)return ;
    if(l>=b && r<=e){
        update(1,id);
        return ;
    }
    shift(id);
    int mid=(l+r)>>1;
    increase(b,e,2*id,l,mid);
    increase(b,e,2*id+1,mid,r);
    sft[id]=0;
    for(int i=0;i<GH;i++)
        s[id][i]=mod_plus(s[2*id][(i+sft[2*id])%GH],s[2*id+1][(i+sft[2*id+1])%GH]);
}

int query(int b,int e,int id=1,int l=0,int r=n)
{
    if(b>=r || e<=l)return 0;
    if(l>=b && r<=e)return s[id][sft[id]];
    shift(id);
    int mid=(l+r)>>1;
    return mod_plus(query(b,e,2*id,l,mid),query(b,e,2*id+1,mid,r));
}

void print_it(void)
{
    for(int i=0;i<n;i++)printf("%d ",query(i,i+1));
    printf("\n");
}

int main()
{
    //freopen("input.txt","r",stdin);
    si(n);
    int i;
    for(i=0;i<n;i++)si(a[i]);
    build();
    int q;
    si(q);
    for(i=0;i<q;i++){
        int type,l,r;
        si(type);si(l);si(r);
        if(type==2)increase(l-1,r);
        else printf("%d\n",query(l-1,r));
        //print_it();
    }
    return 0;
}
