/*
.....   .   .   .   .
  .    . .   . .   . .
  .   .....   .   .....
  .  .     .  .  .     .
*/
#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC optimize("fast-math")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
#include <random>
#include <sstream>
 
using namespace std;



#define prev prev228
#define index index228
#define left left228
#define right right228
#define hash hash228
#define y1 y1228

template<typename T> void uin(T &a, T b) {
    if (b < a) a = b;
}

template<typename T> void uax(T &a, T b) {
    if (b > a) a = b;

}

#define int long long

const int maxm = 1000 * 1000 * 10 + 228;

bool exist[maxm];

int a[5005];

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int n, k;
    cin >> n >> k;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];

        exist[a[i]] = 1;
    }
    int q;
    cin >> q;
    for (int it = 0; it < q; ++it) {
        int x;
        cin >> x;
        int res = 21;
        for (int i = 1; i <= n; ++i) {
            for (int c1 = 0; c1 <= k; ++c1) {
                int cur = a[i] * c1;
                if (cur == x) {
                    uin(res, c1);
                }
                if (cur > x) break;
                for (int dop = 1; dop <= k - c1; ++dop) {
                    if ((x - cur) % dop == 0 && (x - cur) / dop
                     < maxm && exist[(x - cur) / dop]) {
                        uin(res, c1 + dop);
                    }
                }
            }
        }
        if (res == 21) cout << -1 << '\n';
        else cout << res << '\n';
    }
    return 0;
}

