#include <bits/stdc++.h>
using namespace std;
const int N = 2e5 + 1;
int p[N],n,ans[N];
bool bad[N];
vector<int>v[N],a[N],comp;
int get(int u){return p[u] == u ? u : p[u] = get(p[u]);}
int main(){
// 	freopen("input.txt","r",stdin);
	int T;
	scanf("%d",&T);
	while(T--){
		comp.clear();
		scanf("%d",&n);
		for(int i = 0;i < n;i++)p[i] = i,bad[i] = 0;
		for(int i = 0,l,r;i < n;i++){
			scanf("%d%d",&l,&r);
			v[l].push_back(i);
			a[r + 1].push_back(i);
			comp.push_back(l);
			comp.push_back(r + 1);
		}
		sort(comp.begin(),comp.end());
		comp.resize(unique(comp.begin(),comp.end()) - comp.begin());
		vector<int>have;
		for(auto i : comp){
			for(auto j : a[i])bad[j] = 1;
			while(have.size() && bad[have.back()])have.pop_back();
			if(have.empty() && v[i].size()){
				have.push_back(v[i].back());
				v[i].pop_back();
			}
			for(auto j : v[i]){
				p[get(j)] = get(have.back());
				have.push_back(j);
			}
			v[i].clear();
			a[i].clear();
		}
		int first = get(0);
		bool diff = 0;
		for(int i = 0;i < n;i++){
			if(get(i) == first)ans[i] = 1;
			else{
				ans[i] = 2;
				diff = 1;
			}
		}
		if(!diff)puts("-1");
		else {
			for(int i = 0;i < n;i++)printf("%d ",ans[i]);
			puts("");
		}
	}
}