#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cstring>
#include <complex>
#include <cassert>
#include <cstdlib>
#include <cstdio>
#include <bitset>
#include <vector>
#include <string>
#include <cmath>
#include <ctime>
#include <stack>
#include <queue>
#include <list>
#include <map>
#include <set>

#define all(x) (x).begin(), (x).end()
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)

#ifdef KAZAR
    #define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
    #define eprintf(...) 0
#endif

using namespace std;

template<class T> inline void umax(T &a,T b){if(a<b) a = b ; }
template<class T> inline void umin(T &a,T b){if(a>b) a = b ; }
template<class T> inline T abs(T a){return a>0 ? a : -a;}
template<class T> inline T gcd(T a,T b){return __gcd(a, b);}
template<class T> inline T lcm(T a,T b){return a/gcd(a,b)*b;}

typedef long long ll;
typedef pair<int, int> ii;

const int inf = 1e9 + 143;
const ll longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

const int MAX = 1e7;

int main(){

#ifdef KAZAR
    freopen("f.input","r",stdin);
    freopen("f.output","w",stdout);
    freopen("error","w",stderr);
#endif

    ll c, ha, hb, wa, wb;

    cin >> c >> ha >> hb >> wa >> wb;

    ll ans = 0ll;
    for(int x = 0; x <= MAX && x * wa <= c; x++){
        ll y = (c - x * wa) / wb;
        umax(ans, x * ha + y * hb);
    }
    for(int x = c / wa; x >= 0 && x >= c / wa - MAX; x--){
        ll y = (c - x * wa) / wb;
        umax(ans, x * ha + y * hb);
    }

    swap(ha, hb);
    swap(wa, wb);

    for(int x = 0; x <= MAX && x * wa <= c; x++){
        ll y = (c - x * wa) / wb;
        umax(ans, x * ha + y * hb);
    }
    for(int x = c / wa; x >= 0 && x >= c / wa - MAX; x--){
        ll y = (c - x * wa) / wb;
        umax(ans, x * ha + y * hb);
    }

    cout << ans << endl;

    return 0;
}


