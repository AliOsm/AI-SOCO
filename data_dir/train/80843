#include <bits/stdc++.h>
#ifndef M_PI
#define M_PI 3.14159265358979323846264338327
#endif // M_PI
#define endl "\n"
#define S struct
#define X first
#define Y second
#define V vector
#ifndef __linux__
#define LLD "%I64d"
#else
#define LLD "%ll""d"
#endif
#define FOR(x, y, z) for (int x = (y); x < (z); ++x)
#define FORR(x, y, z) for (int x = (y); x > (z); --x)
#define GET(a, n) for (int __i = 0; __i < (n); ++__i) cin >> a[__i];
#define GETM(a, n, m) for (int __i = 0; __i < (n); ++__i) for (int __j = 0; __j < m; ++__j) cin >> a[__i][__j];
#define PRINTM(a, n, m) for (int __i = 0; __i < (n); ++__i) { for (int __j = 0; __j < m; ++__j) cout << a[__i][__j] << " ";  cout << endl; };
#define PRINT(a, n) for (int __i = 0; __i < (n); ++__i) cout << a[__i] << " ";
#define IT(a) a.begin(), a.end()
#define SQR(x) (x) * (x)
#define CASE(a, s) cout << "Case #" << a << ": " << s << endl;
#define DEB(a) cout << #a << " = " << (a) << endl; cout.flush();
#define DEBA(a) for (auto __i: a) cout << __i << " "; cout << endl; cout.flush();
#define IFDEB(b, a) if (b) { cout << #a << " = " << (a) << endl; cout.flush(); }
#define YESNO(cond) cout << ((cond) ? "Yes" : "No") << endl;
#define UMAX(left, right) left = max(left, right);
#define UMIN(left, right) left = min(left, right);
using namespace std;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair <int, int> PII;
typedef pair <LL, LL> PLL;
const int MOD = 1000000007;
void yes() { cout << "Yes" << endl;}
void no() { cout << "No" << endl;}
S Sync_stdio { Sync_stdio() { cin.tie(NULL); ios_base::sync_with_stdio(false); } } _sync_stdio;
S FAIL { FAIL () { cout << "CHANGE!!!" << endl;}};

S Q
{
    int t;
    int l;
    int r;
};

int main()
{
    int n, q, m;
    cin >> n >> q >> m;
    vector <int> a(n);
    GET(a, n);
    vector <Q> queries(q);
    FOR (i, 0, q) {
        cin >> queries[i].t >> queries[i].l >> queries[i].r;
        --queries[i].l;
        --queries[i].r;
    }
    reverse(IT(queries));
    vector <int> pos1(m);
    GET(pos1, m);
    FOR (i, 0, m) {
        --pos1[i];
    }
    FOR (i, 0, m) {
        int pos = pos1[i];
        //cout << pos << "$" << endl;
        for (const auto &query: queries) {
            if (!(query.l <= pos && pos <= query.r)) {
                continue;
            }
            if (query.t == 1) {
                if (pos == query.l) {
                    pos = query.r;
                } else {
                    --pos;
                }
            } else {
                int r = query.r - query.l;
                //DEB(r);
                //DEB(query.l);
                //DEB(pos);
                pos = (r - (pos - query.l)) + query.l;
                //DEB(pos);
            }
            //cout << pos << "*" << endl;
        }
        cout << a[pos] << " ";
    }
    return 0;
}
