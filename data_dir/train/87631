#include<bits/stdc++.h>
using namespace std;

// Vasito
typedef long long ll;
typedef pair<ll,ll> pt;
#define fore(i,ii,iii)for(ll i=ii;i<iii;i++)
#define rfor(i,ii,iii)for(ll i=iii-1;i>=ii;i--)
#define all(s) s.begin(),s.end()
#define pb push_back
#define mset(a,b) memset(a,b,sizeof(a))
#define fst first
#define snd second
// Extra
#define OUT(a)cout<<a<<endl
#define ANS(a) OUT(res.size());for(auto i:a)cout<<i<<" ";ENDL
#define PRINT(a,init,end) FOR(i,init,end) cout<<a[i]<<" ";ENDL
#define PRINTV(a) for(auto i:a)cout<<i<<" ";ENDL

const ll N=1e5+15;
ll n,m,k,dp[N][215];
multiset<pt>mset;
vector<pt> a[N];
pt best[N];

ll solve(ll t,ll b) {
  if(t>n)return 0;
  if(dp[t][b]!=-1)return dp[t][b];
  //cout<<"solve: "<<t<<" "<<b<<endl;
  if(best[t].fst<0)return solve(t+1,b);
  ll res=best[t].fst+solve(best[t].snd,b);
  if(b)res=min(res,solve(t+1,b-1));
  return dp[t][b]=res;
}
int main() {
  ios::sync_with_stdio(false);
  mset(dp,-1);
  cin>>n>>m>>k;
  fore(i,0,k) {
    ll s,t,d,w;
    cin>>s>>t>>d>>w;
    a[s].pb({w,d+1});
    a[t+1].pb({-w,d+1});
  }
  fore(i,1,n+1) {
    for(pt i:a[i]) {
      if(i.fst>=0)mset.insert(i);
      else {
        auto it=mset.find({-i.fst,i.snd});
        mset.erase(it);
      }
    }
    if(mset.size())best[i]=*(prev(mset.end()));
    else best[i]={-1,-1};
    //cout<<"best["<<i<<"]: "<<best[i].fst<<" "<<best[i].snd<<endl;
  }
  //cout<<"done process"<<endl;
  cout<<solve(1,m)<<endl;
  //fore(i,1,n+1)fore(j,0,m)cout<<i<<" "<<j<<" : "<<solve(i,j)<<endl;
}