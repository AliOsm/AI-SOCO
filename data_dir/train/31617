#include <stdio.h>
#include <vector>
#include <map>
#include <queue>
#include <string.h>
#define pb push_back
#define MAXN 1000005
using namespace std;

vector <pair <int, int> > p;
map <int, int> mapa;
queue <int> fila;
int v[1005];
vector <int> a;
int dp[1005][1005];
int m;

int solve(int pos, int mask) {
	if (pos >= (int)a.size()) {
		if (mask != ((1 << m) - 1)) {
			return 0;
		}
		return 1;
	}

	if (dp[pos][mask] != -1) {
		return dp[pos][mask];
	}
	
	int aux = solve(pos + 1, mask);
	int test = mask & a[pos];
	if (test == 0) {
		aux = max(aux, solve(pos + 1, mask | a[pos]));
	}
	dp[pos][mask] = aux;
	return aux;
}
	
int main(void) {
	int n, k;
	int c;

	scanf(" %d %d", &n, &k);
	for (int i = 2; i * i <= k; i++) {
		if (k % i == 0) {
			int counter = 0;
			while(k % i == 0) {
				counter++;
				k /= i;
			}
			p.pb(make_pair(i, counter));
		}
	}
	if (k != 1) {
		p.pb(make_pair(k, 1));
	}

	m = (int)p.size();
	int mask = 0;
	for (int i = 0; i < n; i++) {
		scanf(" %d", &c);
		int ok = 1;
		for (int j = 0; j < m; j++) {
			if (c % p[j].first == 0) {
				int counter = 0;
				int aux = c;
				while(aux % p[j].first == 0) {
					aux /= p[j].first;
					counter++;
				}
				if (counter >= p[j].second) {
					mask |= (1 << j);
				}
			}
		}
	}
	if (mask == ((1 << m) - 1)) {
		printf("Yes\n");
	} else {
		printf("No\n");
	}

	return 0;
}