#include <bits/stdc++.h>
#include <stdio.h>    
 
using namespace std;
     
#define F first
#define S second
#define lb lower_bound
#define ub upper_bound
#define pb push_back
#define pf push_front  
#define ppb pop_back
#define mp make_pair
#define bpp __builtin_popcount
#define sqr(x) ((x) * (x))
#define al 0x3F3F3F3F
#define sz(x) x.size()
#define all(x) x.begin(), x.end()
#define in insert
#define ppf pop_front
#define endl '\n'
//#define int long long
 
typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;                                                                                                                                                                                                                                    
typedef pair <int, int> pii;
 
const int mod = (int)1e9 + 7;                                  
const int N = (int)1e6 + 123;
const ll inf = 3e18 + 1;
                                       
const double pi = acos(-1.0);
const double eps = 1e-7;
const int dx[] = {0, 0, 1, 0, -1};
const int dy[] = {0, 1, 0, -1, 0};                                                                                                                                                                                                                 

int n, s, h[101], m[101];
       
inline void boost () {
    ios_base :: sync_with_stdio(NULL);
    cin.tie(NULL), cout.tie(NULL);
}                                                                    
                                                 
inline void Solve () {  
	boost ();
	cin >> n >> s;
	for (int i = 1; i <= n; i ++) {
		cin >> h[i] >> m[i];
	}
	if (h[1] * 60 + m[1] > s) cout << "0 0", exit (0);
	for (int i = 1; i < n; i ++) {
		int time1 = h[i] * 60 + m[i];
		int time2 = h[i + 1] * 60 + m[i + 1];
		int time3 = time1 + s + 1;
		if (time2 - time3 > s) cout << time3 / 60 << ' ' << time3 % 60, exit (0);
	}
	int how = h[n] * 60 + m[n];
	how += s + 1;
	cout << how / 60 << ' ' << how % 60;
}
 
main () {
//  freopen("sparse.in", "r", stdin);    
//  freopen("sparse.out", "w", stdout);          
    int tt = 1;                                                                                                                                                                                                            
//  cin >> tt;
    while (tt --) {
        Solve ();
    }
    return 0;
}