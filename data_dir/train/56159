#include<bits/stdc++.h>
#define CLR(a)              memset(a, 0, sizeof(a))
#define SET(a, x)           memset(a, x, sizeof(a))
#define SORT(v)             sort(v.begin(), v.end())
#define REV(v)              reverse(v.begin(), v.end())
#define FOR(i, n)           for (int i=0; i<n; i++)
#define FOR1(i, n)          for (int i=1; i<=n; i++)
#define ROF(i, n)           for (int i=n-1; i>=0; i--)
#define ROF1(i, n)          for (int i=n; i>=1; i--)
#define LOOP(i, x, n)       for (int i=x; i<=n; i++)
#define READ(x)             freopen(x, "r", stdin);
#define WRITE(x)            freopen(x, "w", stdout);
#define fastIO()            ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define PI                  acos(-1.0)
#define pb                  push_back
#define mp                  make_pair
#define fi                  first
#define se                  second
#define all(v)              v.begin(), v.end()

using namespace std;

typedef long long              ll;
typedef unsigned long long     ull;
typedef vector<int>            vi;
typedef pair<int, int>         pii;
typedef pair<string, int>      psi;
typedef pair<char, int>        pci;

const double eps = 1e-9;

int fx[] = {-1, 1, 0, 0, -1, -1, 1, 1};
int fy[] = {0, 0, -1, 1, -1, 1, -1, 1};

int kx[] = {1, 1, 2, 2, -1, -1, -2, -2};
int ky[] = {2, -2, 1, -1, 2, -2, 1, -1};

#define MX 102
int n, A[MX];

//int go(int pos, int one){
//    if (pos > n)
//        return 0;
//    int ans = 0;
//    if (one) ans = max(ans, A[pos] + go(pos+1, 1));
//    else{
//        if (!A[pos]) ans = max(ans, 1 + go(pos+1, 0));
//        else ans = max(ans, 1 + go(pos+1, 1));
//    }
//    return ans;
//}

int main()
{
//    READ("in.txt");
    fastIO();
    cin >> n;
    FOR1(i, n) cin >> A[i];
    int zero = 0, ans = 0;
    FOR1(i, n){
        if (A[i] == 0) zero++;
        int one = 0;
        for (int j = i; j <= n; j++){
            if (A[j]) ++one;
        }
        ans = max(ans, zero + one);
    }
    cout << ans << endl;
    return 0;
}


