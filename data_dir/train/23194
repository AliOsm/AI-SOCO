#include <bits/stdc++.h>
#define MAX (ll)(3e3+7)
#define MOD (ll)(1e9+7)
#define INF (ll)(1e18)

using namespace std;
using ll = long long;
using ld = long double;

bool ch[MAX][MAX];

int main () {
	int n, m;
	cin >> n >> m;
	int ar[n], l1 = -1;
	int co[n] = {};
	for (int i = 0; i < n; i++) {
		cin >> ar[i];
		if (ar[i] == 100) {
			l1 = i;
		}
		else if (ar[i] == 0) {
			co[i] = i ? co[i - 1] + 1 : 1;
		}
	}
	int cc = 1;
	queue<pair<int, pair<int, int>>> q;
	ch[0][1] = 1;
	q.push (make_pair (0, make_pair (0, 1)));
	pair<int, int> pp;
	while (q.size ()) {
		pair<int, pair<int, int>> p = q.front ();
		q.pop ();
		pp = p.second;
		if (pp.second >= n || p.first >= m) {
			continue;
		}
		bool fl = 0, fd = 0, sl = 0, sd = 0;
		fl = l1 < pp.second;
		fd = co[n - 1] - co[pp.second - 1] < n - pp.second;
		sd = ar[pp.first] > 0;
		sl = ar[pp.first] < 100;
		if (fl && sd) {
			if (ch[pp.first][pp.second + 1] == 0) {
				ch[pp.first][pp.second + 1] = 1;
				cc++;
				q.push (make_pair (p.first + 1, make_pair (pp.first, pp.second + 1)));
			}
		}
		if (fd && sl) {
			if (ch[pp.second][pp.second + 1] == 0) {
				ch[pp.second][pp.second + 1] = 1;
				cc++;
				q.push (make_pair (p.first + 1, make_pair (pp.second, pp.second + 1)));
			}
		}
		if (fd && sd) {
			if (ch[pp.second + 1][pp.second + 2] == 0) {
				ch[pp.second + 1][pp.second + 2] = 1;
				cc++;
				q.push (make_pair (p.first + 1, make_pair (pp.second + 1, pp.second + 2)));
			}
		}
	}
	cout << cc << "\n";
}
