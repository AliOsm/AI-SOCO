#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
	vector<pair<int, int> > throws;
	int n;
	cin >> n;
	int ascore = 0;
	int bscore = 0;
	for(int i = 0; i < n; i++) {
		int ai;
		cin >> ai;
		throws.push_back(make_pair(ai,1));
		ascore += 3;
	}
	int m;
	cin >> m;
	for(int i = 0; i < m; i++) {
		int bi;
		cin >> bi;
		throws.push_back(make_pair(bi,2));
		bscore += 3;
	}
	int bestdiff = ascore - bscore;
	int bestascore = ascore;
	int bestbscore = bscore;
	sort(throws.begin(), throws.end());
	for(int i = 0; i < throws.size(); ) {
		int j;
		for(j = i; j < throws.size() && throws[j].first == throws[i].first; j++) {
			if(throws[j].second == 1) {
				ascore--;
			} else {
				bscore--;
			}
		}
		i = j;
		int currdiff = ascore - bscore;
		if(currdiff > bestdiff) {
			bestdiff = currdiff;
			bestascore = ascore;
			bestbscore = bscore;
		}
	}
	cout << bestascore << ":" << bestbscore << endl;
	return 0;
}