#include <bits/stdc++.h>

using namespace std;
const int N = 2e5 + 9 ;
int n ,a[N] , ans[N] , ans2[N];
int dp[N][2][2];
int solve(int idx , int prv , int st)
{
	if(idx == n)
	{
		if(a[n-1] == a[0])
			return 1 ;
		else
			return (prv != st) ;
	}
	int &ret = dp[idx][prv][st] ;
	if(ret != -1)
		return ret ;
	ret = 0 ;
	if(a[idx] == a[idx-1])
	{
		ret = solve(idx+1 , 0 , st) ;
		ret |= solve(idx+1 , 1 , st) ;
	}
	else
		ret = solve(idx+1 , !prv , st) ;
	return ret ;
}
void build(int idx , int prv , int st)
{
	if(idx == n)
		return ;
	if(a[idx] == a[idx-1])
	{
		if(solve(idx+1 , 0 , st))
		{
			cout<<1<<" " ;
			build(idx+1 , 0 , st) ;
		}
		else
		{
			cout<<2<<" " ;
			build(idx+1 , 1 , st) ;
		}
	}
	else
	{
		if(prv == 0)
			cout<<2<<" " ;
		else
			cout<<1<<" " ;
		build(idx+1 , !prv , st) ;
	}
	return ;
}
int main()
{

    int t;
    scanf("%d" , &t);
    while(t--){
        memset(dp  , -1 , sizeof dp);
        scanf("%d" , &n);
        bool f = 1;
        for(int i = 0  ; i < n ; ++i){
            scanf("%d" , &a[i]);
            if(i){
                if(a[i]!=a[i-1]) f = 0;
            }
        }
        if(f){
            cout << 1 << endl;
            for(int i = 0 ; i < n ; ++i) cout << 1 << " ";
            cout << endl;
            continue;
        }
        if(solve(1 , 0 , 0)){
            cout << 2 << endl;
            cout << 1 << " ";
            build(1 , 0 , 0);
            cout << endl;
        }
        else{
            cout << 3 << endl;
            cout << 3 << " ";
            for(int i = 1 ; i < n ;++i){
                if(i & 1) cout << 1 << " ";
                else cout << 2 << " ";
            }
            cout << endl;
        }
    }
    return 0;
}
