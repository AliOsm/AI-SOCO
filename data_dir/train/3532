#include <bits/stdc++.h> 
using namespace std;
#define fl(i,a,b) for(int i=a;i<b;i++)
#define endl '\n'
#define pb push_back
#define ff first
#define ff first
#define ss second
#define inf 2e18
#define mod 1000000007
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);
#define mx 200005
#define ll long long
#define pi 3.1415926535897932384626433
#define int long long
vector<int> v[mx];
int d[mx],odd;
bool vis[mx];
int cnt = 0;
void dfs(int x,int p)
{
	vis[x] = 1;
	d[x] = d[p] + 1;
	if(d[x] & 1)
		odd++;
	cnt++;
	for(auto u : v[x])
	{
		if(u == p)
			continue;
		if(vis[u])
		{
			if(d[u] % 2 == d[x] % 2)
			{
				cout << 0 << " " << 1;
				exit(0);
			}
		}
		else
		{
			dfs(u,x);
		}
 
	}
}
void solve()
{
	int n,m;
	cin >> n >> m;
	if(m == 0)
	{
		ll ans = 1LL*n*(n - 1)*(n - 2) / 6;
		cout << 3 << " " << ans;
		exit(0);
	}
	fl(i,1,m+1)
	{
		int x,y;
		cin >> x >> y;
		v[x].pb(y);
		v[y].pb(x);
	}
	ll ans = 0;
	fl(i,1,n + 1)
	{
		if(!vis[i])
		{
			cnt = 0;
			odd = 0;
			dfs(i,0);
			int even = cnt - odd;
			// Focus -> 0
			ans += 1LL * even *( even - 1) / 2 + 1LL * odd * (odd - 1) / 2;
		}
	}
	bool f = 0;
 
	fl(i,1,n+1)
	{
		if(v[i].size() > 1)
		{
			f = 1;
		}
	}
	if(f == 0)
	{
		cout << 2 << " " <<  1LL * m * (n - 2) ;
		exit(0);
	}
	cout << 1 <<" " << ans << endl;
}
main()
{
	fast;
	int t =  1;
	while(t--)
	{
		solve();
	}
}
