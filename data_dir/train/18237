#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include<sstream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include<queue>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define N 100005
#define inf 1000000
#define sz(a) int(a.size())
#define pii pair<int,int>
#define vi vector<int>
pair<int,int>mash[10001];
int a[N],h[N],l[N],r[N];
int main()
{
   // freopen("in.txt","r",stdin);
    int n,i,j,k,b,m;
    while(~scanf("%d%d",&n,&m))
    {pair<double,int>add[m];
     for(i=0;i<n;i++)scanf("%d%d%d%d",&a[i],&h[i],&l[i],&r[i]);
     for(i=0;i<m;i++)scanf("%d%d",&mash[i].fi,&mash[i].se);
     sort(mash,mash+m);
     for(i=0;i<n;i++)
     {
      pair<double,int>v(0.,0);
      if(l[i]==100)v.se=1;
      else v.fi=log(1-1.*l[i]/100);
      int p=lower_bound(mash,mash+m,mp(a[i]-h[i],-inf))-mash;
      add[p].fi+=v.fi;add[p].se+=v.se;
      p=lower_bound(mash,mash+m,mp(a[i],-inf))-mash;
      add[p].fi-=v.fi;add[p].se-=v.se;
      v=mp(0.,0);
      if(r[i]==100)v.se=1;
      else v.fi=log(1-1.*r[i]/100);
      p=lower_bound(mash,mash+m,mp(a[i],inf))-mash;
      add[p].fi+=v.fi;add[p].se+=v.se;
      p=lower_bound(mash,mash+m,mp(a[i]+h[i],inf))-mash;
      add[p].fi-=v.fi;add[p].se-=v.se;
     }
     double li=0,res=0;int z=0;
     for(i=0;i<m;i++)
     {
      li+=add[i].fi;
      z+=add[i].se;
      if(z==0)res+=exp(li)*mash[i].se;
     }
     printf("%.4lf\n",res);
    }
    return 0;
}
