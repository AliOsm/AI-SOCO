#include <bits/stdc++.h>
#define  FOR(i,x,n) for(ll i=x;i<n;i++)
#define rFOR(i,x,n) for(ll i=x;i>n;i--)
#define SZ(x) (int)x.size()
typedef long long ll;
const int SIZE=1e7+5;
using namespace std;

bool Prime[SIZE];
ll cummPrime[SIZE];
ll cummPali[SIZE];

void PF()
{
    FOR(i,2,SIZE)
        if(Prime[i]==0)
            FOR(j,i*i,SIZE)
                Prime[j]=1, j+=i-1;

    FOR(i,2,SIZE)
        cummPrime[i]=cummPrime[i-1]+(Prime[i]==0);
}

void Pali()
{
    FOR(i,1,SIZE)
    {
        ll num=i; int idx=0; char checkNum[8];
        while(num)
            checkNum[idx++]=(char)((num%10)+'0'), 
            num/=10;
        
        bool isPali=1;
        FOR(j,0,idx/2)
            if(checkNum[j]!=checkNum[idx-j-1])
                { isPali=0; break;}
        
        cummPali[i]=isPali;
    }
    
    FOR(i,1,SIZE)
        cummPali[i]+=cummPali[i-1];
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL),cout.tie(NULL);
    
    PF();
    Pali();
    ll p,q;
    cin>>p>>q;
    
    rFOR(i,SIZE-1,-1)
        if(cummPrime[i]*q<=cummPali[i]*p)
            { cout<<i; return 0;}
            
    cout<<"Palindromic tree is better than splay tree";
}