#include <bits/stdc++.h>
using namespace std;

//.define
// #define FILE_IN_OUT
#define RET(_x)                       return cout << (_x) << '\n', 0;
#define all(_obj)                     (_obj).begin(), (_obj).end()
#define loop(_n)                      for (int i = 0; i < (_n); ++i)
#define ceilDiv(_dividend, _divider)  (((_dividend) - 1LL + (_divider)) / (_divider))
#define has(_obj, _val)               ((_obj).find(_val) != (_obj).end())
#define sz(_obj)                      static_cast<int>((_obj).size())
#ifdef SHJ_LOCAL
#define debug(_x)                     std::cerr << (#_x) << " = " << (_x) << '\n' << std::flush;
#else
#define debug(_x)                     {}
#endif
#define endl "\n"
template<typename Tp>
inline void outarr(Tp _begin, Tp _end, const char* _delim = " ") {
    for (Tp current = _begin; current != _end; ++current) {
        std::cout << *current << _delim;
    }
    std::cout << '\n';
}

//.constant
using ll  = long long;
using pii = std::pair<int, int>;
constexpr int INF = 0x3f3f3f3f;
constexpr int MOD = static_cast<const int>(1e9 + 7);

//.data

//.code
int main() {
#ifdef FILE_IN_OUT
    std::ifstream cin ("input.txt",  std::ios::in);
    std::ofstream cout("output.txt", std::ios::out);
#else
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
#endif

    int t;
    cin >> t;
    while (t--) {
        int n, a, b, c;
        string s;
        cin >> n >> a >> b >> c >> s;
        int ba = 0;
        int bb = 0;
        int bc = 0;
        for (char x : s) {
            if (x == 'S') {
                ++bc;
            } else if (x == 'P') {
                ++bb;
            } else {
                ++ba;
            }
        }
        if (min(a, bc) + min(b, ba) + min(c, bb) < ceilDiv(n, 2)) {
            cout << "NO" endl;
            continue;
        }
        cout << "YES" endl;
        string ans(n, '-');
        loop(n) {
            if (s[i] == 'S' && a > 0) {
                --a;
                ans[i] = 'R';
            } else if (s[i] == 'R' && b > 0) {
                --b;
                ans[i] = 'P';
            } else if (s[i] == 'P' && c > 0) {
                --c;
                ans[i] = 'S';
            }
        }
        loop(n) {
            if (ans[i] == '-') {
                if (a > 0) {
                    --a;
                    ans[i] = 'R';
                } else if (b > 0) {
                    --b;
                    ans[i] = 'P';
                } else if (c > 0) {
                    --c;
                    ans[i] = 'S';
                }
            }
        }
        cout << ans << endl;
    }

#ifdef FILE_IN_OUT
    cin.close();
    cout.close();
#endif
    return 0;
}
