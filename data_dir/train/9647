//A smooth sea never made a skilled sailor...
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll  long long  int
#define inf 1000000000
#define mod 1000000007
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"

vector<ll>v;
ll size,dp[200][4][4];
ll solve(ll pos,ll tight,ll started)
{
	if(pos==size)
	return started;
	ll ans=dp[pos][tight][started];
	if(ans!=-1)
	return ans;
	ans=0;
	ll n_tight,n_started,mini,maxi;
	if(!tight)
	{
		mini=0;
		maxi=1;
	}
	else
	{
		mini=0;
		maxi=min(1LL,v[pos]);
	}
	for(ll i=mini;i<=maxi;i++)
	{
		if(!tight)
		n_tight=0;
		else
		{
			if(i==v[pos])
			n_tight=1;
			else
			n_tight=0;
		}
		n_started=0;
		if(started)
		n_started=1;
		else if(i!=0)
		n_started=1;
		ans+=solve(pos+1,n_tight,n_started);
		
	}
	dp[pos][tight][started]=ans;
	return ans;
}	
int main()
{
	boost1;boost2;
	ll i,j,n,k,tn;
	cin>>n;
	tn=n;
	while(tn>0)
	{
		v.pb(tn%10);
		tn/=10;
	}
	reverse(all(v));
	size=v.size();
	for(i=0;i<=100;i++)
	{
		for(j=0;j<=1;j++)
		{
			for(k=0;k<=1;k++)
			dp[i][j][k]=-1;
		}
	}
	cout<<solve(0,1,0);
	return 0;
}
