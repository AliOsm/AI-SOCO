//#pragma GCC optimize("O3")
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/rope>
#define mem(a,v) memset((a), (v), sizeof (a))
#define enl printf("\n")
#define case(t) printf("Case #%d: ", (t))
#define ni(n) scanf("%d", &(n))
#define nl(n) scanf("%I64d", &(n))
#define nai(a, n) for (int i = 0; i < (n); i++) ni(a[i])
#define nal(a, n) for (int i = 0; i < (n); i++) nl(a[i])
#define pri(n) printf("%d\n", (n))
#define prl(n) printf("%I64d\n", (n))
#define pii pair<int, int>
#define pil pair<int, long long>
#define pll pair<long long, long long>
#define vii vector<pii>
#define vil vector<pil>
#define vll vector<pll>
#define vi vector<int>
#define vl vector<long long>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
using namespace __gnu_pbds;
typedef long long ll;
typedef cc_hash_table<int,int,hash<int>> ht;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> oset;
const double pi = acos(-1);
const int MOD = 998244353;
const int INF = 1e9 + 7;
const int MAXN = 1e6 + 5;
const int MAXK = 1e3 + 5;
const double eps = 1e-9;
int a[MAXN], dp[MAXK][MAXK];
int n, k;

int solve(int x) {
	dp[0][0] = 1;
	int r = 0;
	for (int i = 0; i < n; i++) {
		while (a[i] - a[r] >= x) r++;
		for (int j = 0; j <= k; j++)
			dp[i+1][j] = dp[i][j];
		for (int j = 0; j < k; j++)
			dp[i+1][j+1] = (dp[i+1][j+1] + dp[r][j]) % MOD;
	}
	return dp[n][k];
}

int main() {
	scanf("%d %d", &n, &k);
	nai(a, n);
	sort(a, a + n);
	int ans = 0;
	for (int x = 1; x <= 100000 / max(k-1, 1); x++)
		ans = (ans + solve(x)) % MOD;
	pri(ans);
    return 0;
}
