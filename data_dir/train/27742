#include <iostream>
#include <set>

#define N 100005

using namespace std;

typedef pair<int, int> pt;

set<pt> s;
int marked[2][N];

int main() {
    int n, q, r, c;
    
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> n >> q;
    while (q--) {
        cin >> r >> c;
        r--;
        marked[r][c] ^= 1;
        if (r == 0) {
            if (marked[r][c]) {
                if (marked[r^1][c-1])
                    s.insert(make_pair(c, c-1));
                if (marked[r^1][c])
                    s.insert(make_pair(c, c));
                if (marked[r^1][c+1])
                    s.insert(make_pair(c, c+1));
            }
            else {
                s.erase(make_pair(c, c-1));
                s.erase(make_pair(c, c));
                s.erase(make_pair(c, c+1));
            }
        }
        else {
            if (marked[r][c]) {
                if (marked[r^1][c-1])
                    s.insert(make_pair(c-1, c));
                if (marked[r^1][c])
                    s.insert(make_pair(c, c));
                if (marked[r^1][c+1])
                    s.insert(make_pair(c+1, c));
            }
            else {
                s.erase(make_pair(c-1, c));
                s.erase(make_pair(c, c));
                s.erase(make_pair(c+1, c));
            }
        }
        cout << (s.size() == 0 ? "Yes" : "No") << endl;
    }
    
    return 0;
}
