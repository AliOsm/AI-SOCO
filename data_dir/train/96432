#include<bits/stdc++.h>
using namespace std;
const int MAX=1e3+9;
int n,m,d[MAX],ma[MAX],tmp[MAX],col[MAX],ans;
vector<int> g[MAX];
void bfs(int vv)
{
	for (int i=0;i<n;i++) tmp[i]=1e9;
	tmp[vv]=0;
	queue<int> q;
	q.push(vv);
	while (q.size())
	{
		int v=q.front();
		d[vv]=max(d[vv],tmp[v]);
		for (auto u:g[v]) 
			if (tmp[u]==1e9) 
				tmp[u]=tmp[v]+1,q.push(u);
		q.pop();
	}
}
void dfs(int v)
{
	ma[v]=d[v];
	for (auto u:g[v]) 
		if (!col[u])
			col[u]=3-col[v],dfs(u),ma[v]=max(ma[v],ma[u]);
		else
		if (col[v]==col[u])
		{cout<<-1; exit(0);}
}
int main()
{
	cin>>n>>m;
	for (int i=0,v,u;i<m;i++) cin>>v>>u,v--,u--,g[v].push_back(u),g[u].push_back(v);
	for (int i=0;i<n;i++) bfs(i);
	for (int i=0;i<n;i++) if (!col[i]) col[i]=1,dfs(i),ans+=ma[i];
	cout<<ans;
}
