#include<bits/stdc++.h>
using namespace std;

long long X[3030][3030];

void sliding_window_minimum(long long ARR[],long long n,long long K,long long *a){
  deque< long long > window;
  long long IX;
  for(long long i=1;i<=n;i++){
     while (!window.empty() && ARR[window.back()] >= ARR[i]) window.pop_back();
     window.push_back(i);
     while(window.front() <= i - K) window.pop_front();
     a[i]=ARR[window.front()];
  }
  return;
}

main(){
    long long n,m,a,b;
    long long g,x,y,z;
    cin>>n>>m>>a>>b;
    cin>>g>>x>>y>>z;
    long long cur=-1;
    long long p[3030],q[3030];
    for(long long i=1;i<=n;i++){
        for(long long j=1;j<=m;j++) {
            if(cur==-1) cur=g;
            else cur=(cur*x+y)%z;
            p[j]=cur;
        }
        sliding_window_minimum(p,m,b,X[i]);
        //for(long long j=1;j<=m;j++) X[i][j]=q[j];
    }

    for(long long j=1;j<=m;j++){
        for(long long i=1;i<=n;i++) p[i]=X[i][j];
        sliding_window_minimum(p,n,a,q);
        for(long long i=1;i<=n;i++) X[i][j]=q[i];
    }
    long long sum=0;

//    for(long long i=1;i<=n;i++){
//        for(long long j=1;j<=m;j++) cout<<X[i][j]<<" ";
//        cout<<endl;
//    }

    for(long long i=a;i<=n;i++) for(long long j=b;j<=m;j++) sum+=X[i][j];
    cout<<sum<<endl;

    return 0;
}
