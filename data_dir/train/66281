#include <bits/stdc++.h>
#define base 1000000007LL
#define ll long long
#define X first
#define Y second
#define mp make_pair
#define pb push_back
#define CLR(a) memset(a,0,sizeof(a))
#define FOR(i,a,b) for(int i=(a),_b=(b); i<=_b; i++)
#define FORE(i,a,b) for(int i=(a),_b=(b); i>=_b; i--)

using namespace std;

typedef pair<int, int> II;
typedef vector<II> vi;

int n, c[200010], g[200010], h[200010], f[200010], b, height[200010];
vector<int> a[200010], A[200010];
bool fr[200010];

void dfs(int u, int b)
{
    f[u] = b;
    fr[u] = true;
    for (vector<int>::iterator it = a[u].begin(); it!=a[u].end(); it++) {
        int v = *it;
        if (!fr[v]) {
            if (c[v] == c[u]) dfs(v, b);
        }
    }
}

void dfs2(int u, int p)
{
    for (vector<int>::iterator it = A[u].begin(); it!=A[u].end(); it++) {
        int v = *it;
        if (v != p) {
            height[v] = height[u] + 1;
            dfs2(v, u);
        }
    }
}

int main()
{
    ios::sync_with_stdio(0);
    //freopen("inp.txt", "r", stdin);
    scanf("%d", &n);
    FOR(i,1,n) scanf("%d", &c[i]);
    FOR(i,1,n-1) {
        int u, v;
        scanf("%d %d", &u, &v);
        a[u].pb(v);
        a[v].pb(u);
        g[i] = u;
        h[i] = v;
    }
    FOR(i,1,n)
        if (!fr[i]) {
            b++;
            dfs(i, b);
        }
    FOR(i,1,n-1)
        if (f[g[i]] != f[h[i]]) {
            A[f[g[i]]].pb(f[h[i]]);
            A[f[h[i]]].pb(f[g[i]]);
        }
    height[1] = 1;
    dfs2(1, 0);
    int Max = 0;
    int vt = 0;
    FOR(i,1,b)
        if (height[i] > Max) {
            Max = height[i];
            vt = i;
        }
    CLR(height);
    dfs2(vt, 0);
    Max = 0;
    FOR(i,1,b) Max = max(height[i], Max);
    cout << Max/2+Max%2;
    return 0;
}
