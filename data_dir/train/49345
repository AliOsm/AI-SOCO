#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef pair<int, int> pi;

bool col;

vector<vector<int> > t;
vector<bool> vi;
vector<bool> color;

void dfs(int father,bool cl) {
  vi[father]=true;
//  cout << "pare=" <<father<< " "<<endl;
  color[father]=cl;
  for (auto ver: t[father]) {
//    cout << "son" << ver<<" "<<endl;
    if ((vi[ver]) and (color[ver]==color[father])) col=true;
    if (!vi[ver]) dfs(ver,!cl);
  }
}

int main() {
  int n, m;
  col=false;
  scanf("%d %d",&n, &m);
  t = vector<vector<int> >(n);
  vi= vector<bool>(n, false);
  color =vector<bool>(n);
  vector<int> w,b;
  for (int i=0; i<m; i++) {
    int a,b;
    scanf("%d %d",&a,&b);
    a--; b--;
    t[a].push_back(b);
    t[b].push_back(a);
  }
//   for (int i=0; i<n; i++) {
//     cout << "Vert"<<i+1 <<": ";
//     for (auto p: t[i])
//       cout << p+1<<" ";
//     cout <<endl;
//   }
  
  for (int i=0; i< n; i++)
    if (!vi[i]) {
//      cout << i+1 <<endl;
      dfs(i,false);
    }
  if (col) printf("-1\n");
  else {
    for (int i=0; i<n; i++) {
      if (color[i])
	w.push_back(i);
      else 
	b.push_back(i);
    }
    printf("%d\n",(int) w.size());
    for (auto p:w) 
      printf("%d\n",p+1);
    printf("%d\n",(int) b.size());
    for (auto p:b) 
      printf("%d\n",p+1);
  }
  return 0;
}

