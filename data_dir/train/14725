#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef pair < int, int > PII;

int n, m, k;
vector < int > A, B;
vector < PII > S;

bool check(int x)
{
    B.clear();
    for(int i = x - 1; i >= 0; i--)
        B.push_back(S[i].first);
    int mn = -1, ll = 0, rr = 0;
    for(int i = 0; i < (int)B.size() + (int)A.size(); i++)
    {
        if(i % k == 0) mn++;
        int xx = 0;
        if(ll == (int)A.size())
        {
            xx = B[rr++];
        }
        else if(rr == (int)B.size())
        {
            xx = A[ll++];
        }
        else
        {
            if(A[ll] < B[rr]) xx = A[ll++];
            else xx = B[rr++];
        }
        if(xx < mn) return false;
    }
    return true;
}

int bin_search(int l, int r)
{
    while(l + 1 < r)
    {
        int s = (l + r) / 2;
        check(s) ? l = s : r = s;
    }
    return l;
}

int main()
{
    scanf("%d%d%d", &n, &m, &k);
    for(int i = 0; i < n; i++)
    {
        int x; scanf("%d", &x);
        A.push_back(x);
    }
    for(int i = 1; i <= m; i++)
    {
        int x; scanf("%d", &x);
        S.push_back({x, i});
    }
    sort(A.begin(), A.end());
    sort(S.begin(), S.end());
    reverse(S.begin(), S.end());
    int ans = bin_search(-1, m + 1);
    printf("%d\n", ans);
    for(int i = 0; i < ans; i++)
        printf("%d ", S[i].second);
    return 0;
}
