#include<bits/stdc++.h>
using namespace std;
#define fr first
#define sc second
typedef long long ll;
typedef double ld;
typedef pair<int,int> p2;
typedef pair<p2,int> p3;
typedef vector<ll> vi;
const ll Mod = 7 + 1e9;
const ll INF32 = 5 + 2e9;
const ll INF64 = 5 + 1e18;
const ll MAX = 5+ 1e6;
int n, q, L1, R1, L2, R2, TAR,a[MAX],b[MAX];
p2 LAZY[MAX];
void PushLazy(int x)
{
    int l = LAZY[x].fr,r = LAZY[x].sc;
    if(l == r)
        return ;
    int mid = l+r>>1;
    LAZY[x<<1] = p2(l ,mid);
    LAZY[x<<1 |1] = p2(mid+1 ,r);
    LAZY[x] = p2(0,0);

}
void update(int x = 1,int l = 1,int r = n)
{
    if( LAZY[x] != p2(0,0) )
        PushLazy(x);
    if( l > R1 || r < L1 )
        return ;
    if( L1 <= l && r <= R1 ){
        int xx = l - L1;
        int yy = r - R1;
        LAZY[x] = p2(L2 + xx,R2 + yy);
        PushLazy(x);
        return ;
    }
    int mid = l+r>>1 ,c1 = x<<1 ,c2 = x<<1 |1;
    update(c1,l,mid);
    update(c2,mid+1,r);
}
void query(int x = 1,int l = 1,int r = n)
{
    if( LAZY[x] != p2(0,0) )
        PushLazy(x);
    if( r < TAR || l > TAR )
        return ;
    if( l == r){
        if( LAZY[x] != p2(0,0) )
            printf("%d\n" , a[ LAZY[x].fr ] );
        else
            printf("%d\n" , b[l] );
        return ;
    }
    int mid = l+r>>1 ,c1 = x<<1 ,c2 = x<<1 |1;
    query(c1,l,mid);
    query(c2,mid+1,r);
}
int main()
{
    cin >> n >> q;
    for(int i=1;i<=n;i++)
        scanf("%d" , & a[i] );
    for(int i=1;i<=n;i++)
        scanf("%d" , & b[i] );
    int Type,k;
    while(q--){
        scanf("%d" ,& Type );
        if(Type == 1){
            scanf("%d%d%d" ,&L1 ,&L2 ,&k );
            swap(L1,L2);
            R1 = L1 + k-1;
            R2 = L2 + k-1;
            update();
        } else {
            scanf("%d" ,& TAR );
            query();
        }
    }
    return 0;
}
