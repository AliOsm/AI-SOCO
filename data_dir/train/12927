//                             In The Name Of Allah
#include <bits/stdc++.h>
#define ss second
#define ff first
#define use_fast ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define ret(n) return cout << n, 0
#define se(n) cout << setprecision(n) << fixed
#define pb push_back
#define int long long
#define ld long double
using namespace std; 
 
const int N = 1e5 + 100, OO = 1e8 + 100, M = 1e9 + 7, P = 6151, sq = 360, lg = 26;
typedef pair <int, int> pii;
vector <int> v[N];
int pr[N][lg + 10], h[N], d[N];
queue <int> q;
bool mark[N];

void dfs(int x, int y) {
	pr[x][0] = y;
	for(int i = 1; i <= lg; i++)
		pr[x][i] = pr[pr[x][i - 1]][i - 1];
	h[x] = h[y] + 1;
	d[x] = h[x];
	for(auto u : v[x]) 
		if(u != y)
			dfs(u, x);
}

int get(int x, int y) {
	if(h[x] < h[y])
		swap(x, y);
	for(int i = lg; i >= 0; i--) {
		if(h[x] - (1ll << i) >= h[y]) {
			x = pr[x][i];
		}
	}
	if(x == y)
		return x;
	for(int i = lg; i >= 0; i--) 
		if(pr[x][i] != pr[y][i])
			x = pr[x][i], y = pr[y][i];
	return pr[x][0];
}

void relax() {
	while(!q.empty()) {
		int x = q.front();
		q.pop();
		for(auto u : v[x]) {
			if(!mark[u]) {
				d[u] = min(d[u], d[x] + 1);
				q.push(u);
				mark[u] = true;
			}
		}
	}
	memset(mark, 0, sizeof(mark));
}

int32_t main() {
	use_fast;
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < n - 1; i++) {
		int x, y;
		cin >> x >> y;
		v[x].pb(y);
		v[y].pb(x);
	}
	h[0] = -1;
	dfs(1, 0);
	for(int i = 1; i <= m; i++) {
		if(i % sq == 0) 
			relax();
		int tp, x, y;
		cin >> tp >> x;
		if(tp == 1) {
			q.push(x);
			mark[x] = true;
			d[x] = 0;
			continue;
		}
		int ans = d[x];
		vector <int> f;
		while(!q.empty()) {
			f.pb(q.front());
			q.pop();
		}
		for(auto u : f)
			q.push(u);
		for(auto u : f) {
			int z = get(u, x);
			ans = min(ans, h[x] + h[u] - 2 * h[z]);
		}
		cout << ans << endl;
	}
	return 0;
} 
/*
be carefull :
1- if not solve after 20 min, read again twice
2- after submit read the code again
3- fun with contest
4- ... 
*/
