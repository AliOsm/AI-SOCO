# include <iostream>
# include <sstream>
# include <cstdio>
# include <cstdlib>
# include <algorithm>
# include <string>
# include <cstring>
# include <cmath>
# include <stack>
# include <queue>
# include <vector>
# include <list>
# include <map>
# include <set>
# include <deque>
# include <iterator>
# include <functional>
# include <bitset>
# include <climits>
# include <ctime>
using namespace std;
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define odd(x) ((x)&1)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#define all(x) (x).begin(),(x).end()
#define mem(a,x) memset(a,x,sizeof(a))
#define rep(i,a,b) for (int i=(a); i<=(b); ++i)
#define per(i,a,b) for (int i=(a); i>=(b); --i)
#define rep_it(it,x) for (__typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
#define ____ puts("\n_______________\n\n") 
#define debug(x) ____; cout<< #x << " => " << (x) << endl
#define debug_pair(x) cout<<"\n{ "<<(x).fir<<" , "<<(x).sec<<" }\n"
#define debug_arr(x,n) ____; cout<<#x<<":\n"; rep(i,0,n) cout<<#x<<"["<<(i)<<"] => "<<x[i]<<endl
#define debug_arr2(x,n,m) ____; cout<<#x<<":\n"; rep(i,0,n) rep(j,0,m) cout<<#x<<"["<<(i)<<"]["<<(j)<<"]= "<<x[i][j]<<((j==m)?"\n\n":"    ")
#define debug_set(x) ____; cout<<#x<<": \n"; rep_it(it,x) cout<<(*it)<<" "; cout<<endl
#define debug_map(x) ____; cout<<#x<<": \n"; rep_it(it,x) debug_pair(*it)
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;
const int oo = /*2 * 1000 * 1000 * 1000*/0x3f3f3f3f;
const ll ooo=9223372036854775807ll; 
const int _cnt = 1000 * 1000 + 7;
const int _p = 1000 * 1000 * 1000 + 7;
const int N=1000005; 
const double PI=acos(-1.0);
const double eps=1e-9;
int o(int x) { return x%_p; }
int gcd(int a, int b) { return b ? gcd(b, a%b) : a; }
int lcm(int a, int b) { return a / gcd(a, b)*b; }

void file_put() {
    freopen("filename.in", "r", stdin);
    freopen("filename.out", "w", stdout);
}

ll sum(ll x) {
	ll y=2*x;
	y=floor(sqrt(y*1.0))-3;
	y=max(y,0);
	while ((y+1)*(y+2)/2<=x) y++;
	return -(y*y+2*y-6*x)*(y+1)/6;
}

const int _N=1e6+5,_M=1e6+5;
struct Tu{
	int head[_N],nxt[_M],e[_M],n,tot; ll v[_N],w[_M];
	void Init(int _n) { n=_n,mem(head,0),tot=0; }
	void I(int x,int y,ll _w) { e[++tot]=y,w[tot]=_w; nxt[tot]=head[x],head[x]=tot; }
};

struct Tarjan{
	int id[_N],dfn[_N],low[_N],s[_N],n,r,t,tot; bool in[_N];
	void dfs(Tu &A,int x) {
		dfn[x]=low[x]=++t,in[x]=1,s[++r]=x;
		for (int i=A.head[x],y; i; i=A.nxt[i])
			if (!dfn[y=A.e[i]]) dfs(A,y),low[x]=min(low[x],low[y]); else 
			if (in[y]) low[x]=min(low[x],dfn[y]);
		if (low[x]==dfn[x]) { ++tot; while (r && s[r+1]!=x) id[s[r]]=tot,in[s[r--]]=0; }
	}
	void solve(Tu &A,Tu &B) {
		n=A.n; mem(dfn,0); mem(low,0); mem(in,0); r=tot=t=0;
		rep(x,1,n) if (!dfn[x]) dfs(A,x); B.Init(tot); mem(B.v,0); 
		rep(x,1,n) for (int i=A.head[x]; i; i=A.nxt[i]) 
			if (id[x]==id[A.e[i]]) B.v[id[x]]+=sum(A.w[i]); else B.I(id[x],id[A.e[i]],A.w[i]);
		//rep(x,1,n) B.v[id[x]]+=A.v[x];
	}
};

bool vis[N];
ll dp[N],w;
Tu A,B;
Tarjan T;
int n,m,x,y,s0;

void dfs(int x,int p) {
	if (vis[x]) return; vis[x]=1;
	for (int i=B.head[x]; i; i=B.nxt[i]) {
		if (B.e[i]==p) continue;
		dfs(B.e[i],x);
		dp[x]=max(dp[x],dp[B.e[i]]+B.w[i]);
	}
	dp[x]+=B.v[x];
}

int main() {
    //file_put();
    
    scanf("%d%d",&n,&m);
    mem(vis,0);
    A.Init(n); 
    rep(i,1,m) {
    	scanf("%d%d%I64d",&x,&y,&w);
    	A.I(x,y,w);
	}
	T.solve(A,B);
	scanf("%d",&s0);
	dfs(T.id[s0],0);
	printf("%I64d\n",dp[T.id[s0]]);
	
    return 0;
}

