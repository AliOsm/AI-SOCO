#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <algorithm>
#include <cmath>
#define pb push_back
using namespace std;
const int mo=998244353;
const int maxn=32000000+10;;
int prime[maxn],cnt;
bool f[maxn];
long long d,p[130],inv[130];
vector<long long>now;
long long po(long long a,long long b)
{
	if (b==0) return 1;
	if (b==1) return a%mo;
	long long c=po(a,b/2);
	if (b&1) return c*c%mo*a%mo;else return c*c%mo;
}
long long calc(long long x)
{
	long long ans=1,sum=0;
	for (auto i:now)
	{
		if (i>x) break;
		if (x%i==0)
		{
			long long num=0;
			while (x%i==0) {x/=i; num++;}
			sum+=num; ans=ans*inv[num]%mo;
		}
	}
	ans=ans*p[sum]%mo;
return ans;
}
int main()
{
	scanf("%lld",&d);
	p[0]=inv[0]=1; for (int i=1;i<=120;i++) p[i]=p[i-1]*i%mo,inv[i]=po(p[i],mo-2);
	memset(f,1,sizeof f); f[0]=f[1]=0;
	for (int i=2;i<=maxn-10;i++)
	{
		if (f[i]) prime[++cnt]=i;
		for (int j=1;j<=cnt && 1ll*i*prime[j]<=maxn-10;j++)
		{
			f[i*prime[j]]=0;
			if (i%prime[j]==0) break;
		}
	}
	for (int i=1;i<=cnt && prime[i]<=d;i++)
	if (d%prime[i]==0)
	{
		now.pb(prime[i]);
		while (d%prime[i]==0) d/=prime[i];
	}
	if (d!=1) now.pb(d);
	int _; scanf("%d",&_);
	while (_--)
	{
		long long u,v,t; scanf("%lld%lld",&u,&v);
		t=__gcd(u,v); u/=t; v/=t;
		printf("%lld\n",calc(u)*calc(v)%mo);
	}
return 0;
}