#include <bits/stdc++.h> 
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define int long long
#define ld double
#define fi first
#define se second
#define pb push_back
#define pii pair<int,int>
#define sz(x) ((long long)x.size())
#define all(x) (x).begin(), (x).end()
const int MOD =1e9+7;
#define oset(x) tree<x, null_type, less<x>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
int mpow(int a,int b,int p=MOD){a=a%p;int res=1;while(b>0){if(b&1)res=(res*a)%p;a=(a*a)%p;b=b>>1LL;}return res%p;}
const int N=2*1e5+2,M=201;

void solve()
{
	int n;
	cin>>n;
	if(n==3)
	{
		cout<<"2\n1 3";
		return;
	}
	if(n<=2)
	{
		cout<<"1\n 1";
		return;
	}
	vector<int> ans;
	for(int i=1;i<=n/2;i++)
	{
		ans.pb(i);
		ans.pb(n-i+1);
	}
	if(n%2==0)
	{
		cout<<n<<"\n";
		cout<<ans[n-1]<<" ";
		for(int i=0;i<n-1;i++)
		{
			cout<<ans[i]<<" ";
		}
	}
	else{
		cout<<n<<"\n";
		cout<<n/2+1<<" ";
		for(auto x:ans) cout<<x<<" ";
	}
}
// 1,2,3,4,5
// 1,5,2,4,3
// 
// 1,2,3,4
// 3,1,4.2
// 1,2,3,4,5,6
// 4,1,6,2,5,3
// 1,2,3,4,5
// 3,1,5,2,4
int32_t main(){
	ios_base::sync_with_stdio(false);cin.tie(NULL);
	#ifdef LOCAL
	freopen("input.txt", "r", stdin);
	#endif
	int t=1;
	// cin>>t;
	while(t--)
		solve();
} 