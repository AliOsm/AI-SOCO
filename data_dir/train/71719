#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <iomanip>

typedef int64_t _64;
using namespace std;

const int N = 200001;

vector<int> ansa, ansb;

void solve(int a, int b)
{
	if (a == 0)return;
	while (a >= b)
	{
		if (b == a) {
			ansa.push_back(a); break;
		}
		else {
			ansa.push_back(b);
			a = a - b;
			b = min(a, b - 1);
		}
	}
}


int main() {
	ios::sync_with_stdio(false);
	_64 a, b; cin >> a >> b;
	_64 tot = a + b;
	_64 l = 1, r = tot;
	_64 ans;
	bool inv = false;
	if (a > b) {
		swap(a, b); inv = true;
	}
	while (l <= r)
	{
		_64 m = l + (r-l) / 2;
		if (m*(m + 1) / 2 > tot)
		{
			r = m - 1;
		}
		else
		{
			ans = m;
			l = m + 1;
		}
	}
	ans = min(ans, min(a, b));
	//cout << ans << endl;
	solve(a, ans);
	sort(ansa.begin(), ansa.end());
	int j = 1;
	int cur = 0;
	while (b>=j)
	{
		while (cur < ansa.size() && ansa[cur] < j) ++cur;
		if (cur < ansa.size() && j == ansa[cur]) {
			++j;
			++cur;
			continue;
		}
		ansb.push_back(j);
		b -= j;
		++j;
	}

	if (inv) swap(ansa, ansb);
	cout << ansa.size() << endl;
	for (int i = 0; i < ansa.size(); ++i) cout << ansa[i] << ' ';
	cout << endl;
	cout << ansb.size() << endl;
	for (int i = 0; i < ansb.size(); ++i) cout << ansb[i] << ' ';

	return 0;
}