#include <bits/stdc++.h>

#ifdef DEBUG
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#else
#define eprintf(...)
#endif

using namespace std;
using ll = long long;

const int N = 300005;

int n, m;
int a[N];
int mn[N], mx[N];

void add(int *ft, int x, int val) {
	for(; x < N; x += x & -x)
		ft[x] += val;
}
int sum(int *ft, int x) {
	int ans = 0;
	for(; x > 0; x -= x & -x)
		ans += ft[x];
	return ans;
}
int sum(int *ft, int i, int j) {
	return sum(ft, j) - sum(ft, i - 1);
}
int ft[N];
int ft2[N];

int b[N];
int last[N];
int tmp[N];

int main() {
	
	scanf("%d %d", &n, &m);

	for(int i = 1; i <= n; i++) mn[i] = mx[i] = i;

	for(int i = 1; i <= m; i++) scanf("%d", a + i);

	for(int i = 1; i <= m; i++) {
		b[i] = last[ a[i] ];
		last[ a[i] ] = i;
	}
	for(int i = 1; i <= m; i++) {
		eprintf("> b[%d] = %d\n", i, b[i]);
	}
	memset(last, 0, sizeof last);

	for(int i = 1; i <= m; i++) {
		if(sum(ft, a[i], a[i]) == 0) {
			mx[ a[i] ] += sum(ft, a[i], N-1);
			add(ft, a[i], 1);
		}
		else {
			tmp[ a[i] ] += sum(ft2, b[i]+1);
			eprintf("at %d tmp[%d] = %d\n", i, a[i], tmp[ a[i] ]);
			eprintf("> %d\n", b[ b[i] ]);
			mx[ a[i] ] = max(mx[ a[i] ], tmp[ a[i] ] + 1);
			tmp[ a[i] ] = 0;
		}
		add(ft2, b[i]+1, 1);
		tmp[ a[i] ] -= sum(ft2, i+1);
		eprintf("at %d prec tmp[%d] = %d\n", i, a[i], tmp[ a[i] ]);
		last[ a[i] ] = i;
	}

	memset(last, 0, sizeof last);
	memset(tmp, 0, sizeof tmp);

	int k = 1;
	for(int i = m; i > 0; i--) {
		if(tmp[ a[i] ] == 0) {
			last[k++] = a[i];
			tmp[ a[i] ] = 1;
		}
		mn[ a[i] ] = 1;
	}

	for(int i = 1; i <= n; i++) if(!tmp[i])
		last[k++] = i;
	
	for(int i = 1; i <= n; i++) {
		mx[ last[i] ] = max(mx[ last[i] ], i);
	}

	for(int i = 1; i <= n; i++) {
		printf("%d %d\n", mn[i], mx[i]);
	}
}
