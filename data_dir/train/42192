#include <iostream>
#include <cstdio>
#include <cstdlib>
using namespace std;
const int maxn=1e6+10;
int n,st[maxn],to[maxn],nt[maxn],topt,ans1,ans2,root,de[maxn],dep[maxn];
inline void add(int x,int y){to[++topt]=y; nt[topt]=st[x]; st[x]=topt;}
void dfs(int x,int fa)
{
	int p=st[x];
	while (p)
	{
		if (to[p]!=fa) {dep[to[p]]=dep[x]+1; dfs(to[p],x);}
		p=nt[p];
	}
}
void dfs2(int x,int fa)
{
	int p=st[x],num=0;
	while (p)
	{
		if (to[p]!=fa)
		{
			if (de[to[p]]==1) num++;
			dfs2(to[p],x);
		}
		p=nt[p];
	}
	if (num) ans2-=(num-1);
}
int main()
{
	scanf("%d",&n); ans1=3; ans2=n-1;
	for (int i=1;i<n;i++)
	{
		int x,y; scanf("%d%d",&x,&y);
		add(x,y); add(y,x); de[x]++; de[y]++;
	}
	//ans1
	for (int i=1;i<=n;i++) if (de[i]==1) {root=i; break;}
	dep[root]=1; dfs(root,0); bool ff=1;
	for (int i=1;i<=n;i++) if ((de[i]==1) && (dep[i]%2==0)) {ff=0; break;}
	if (ff) ans1=min(ans1,1);
	//ans2
	for (int i=1;i<=n;i++) if (de[i]!=1) {root=i; break;}
	dfs2(root,0);
	printf("%d %d\n",ans1,ans2);
return 0;
}