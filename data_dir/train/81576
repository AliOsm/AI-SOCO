#include<bits/stdc++.h>
#define ld long double

using namespace std;


const int MAXN = 2000 , mod = 1e9 + 7 ;

string s [ MAXN ]  ;


int dp [ MAXN ] [ MAXN ] = {} , hdp [ MAXN ] [ MAXN ]  = {} ;

vector < pair < int , int > > p , hp, p2   ,q [ MAXN ] ; ;

//map  < pair < pair < int , int > , pair < int , int > > , int > dp ;

vector  < pair < int , pair < int , int  > > > ww;

int f(int x1 , int y1 , int x2 , int y2)
{

    cout << x1<<' ' <<x2<<' '<<y1<<' '<<y2<<endl;;
    if(x1>x2||y1>y2||s[x1][y1]!=s[x2][y2])
        return 0 ;
    if((x1==x2&&y1==y2)||(y2-y1==1&&x1==x2)||(y2==y1&&x2==x1+1))
    {
        return 1;
    }

    int ans = 0 ;
    ans += f(x1+1,y1,x2-1,y2);
    ans += f(x1+1,y1,x2,y2-1);
    ans += f(x1,y1+1,x2-1,y2);
    ans += f(x1,y1+1,x2,y2-1);
    return ans%mod;

}


int32_t main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n , m ;
    cin >> n >> m ;
    int x = n + m - 1 ;
    if(x%2==1)
        x=x/2+1;
    else
        x=x/2;
    for(int i = 0 ; i < n ; i ++ )
    {
     cin >> s[i];

        if(x-i-1<m&&x-i-1>-1)
        {
            p.push_back({i,x-i-1});
            if(n%2==m%2)
            {dp [ i][i] = 1;

                p2.push_back({i,x-i-1});
            }
        }
        if(n%2!=m%2&&x-i<m&&x-i>-1)
            p2.push_back({i,x-i});
    }
    for(int i  = 0 ;  i < n ; i ++ )
        for(int j =  0 ; j < m ; j ++ )
            q[i+j+1].push_back({i,j});
    int y = n + m - 1;
    if(y%2==0)
    {
        for(auto u : p )
        {
            if(u.first < n - 1 )
            {
                 dp[u.first][u.first+1] = (s[u.first][u.second] == s[u.first+1][u.second] );
            //    cout << dp[{u,{u.first+1,u.second}}] << endl ;
            }
            if(u.second < m - 1 )
            {
                dp[u.first][u.first] = (s[u.first][u.second] == s[u.first][u.second+1] );
            //    cout << dp[{u,{u.first,u.second+1}}] << endl ;
            }
        }
    }
    int sz = p.size();

    for(int o = x - 1 ; o > 0 ; o -- )
    {
        ww.clear();
        p.clear();
        p2.clear();
        for(auto u : q[o])
        {
            p.push_back(u);
        }
        for(auto u : q[n+m-o])
        {
            p2.push_back(u);
        }
        for(auto u : p)
        {
            if(u.second<0)
                continue;
            for(auto v : p2)
            {
                if(v.second>=m)
                    continue;
                if(s[u.first][u.second]!=s[v.first][v.second])
                    continue;
                int ans = (dp[u.first+1][v.first] + dp[u.first+1][v.first-1])%mod +
                (dp[u.first][v.first] + dp[u.first][v.first-1])%mod;

                ww.push_back({ans%mod,{u.first,v.first}});
            }
        }
        for(int i = 0 ; i < n ; i ++)
            for(int j = 0 ; j < n ; j ++ )
            dp[i][j]=0;
        for(auto u : ww)
        {
            dp[u.second.first][u.second.second] = u.first ;
        }
    }
    cout << dp[0][n-1];


}




