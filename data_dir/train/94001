// Problem name :
// Algorithm :
// Contest/Practice :
// Source :
// Comment :
// Date :

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <string>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<assert.h>


#define pause system("pause")
#define FOR(s,e,inc) for(int i=s;i<=e;i+=inc)
#define mod 1000000007
#define inf 1<<30
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define F first
#define S second
#define sz(x) ((int)x.size())
#define sqr(x) ( (x)* (x) )
#define eps 1e-9
#define gcd(x,y) __gcd(x,y)
#define on(x,w)  x=x|(1<<w)
#define check(x,w) (x&(1<<w))==(1<<w)?true:false
#define all(x) (x).begin(),(x).end()
#define pf printf

typedef long long ll;
typedef unsigned long long ull;

using namespace std;


template<class T>
inline T mod_v(T num)
{
    if(num>=0)
        return num%mod;
    else
        return (num%mod+mod)%mod;
}

template<class T>
inline void memset1(vector<T>&v,int s,T value)
{
    for(int i=0;i<s;i++)
        v[i]=value;
}

template<class T>
inline void memset2(vector<vector<T> >&v,int s1,int s2,T value)
{
    for(int i=0;i<s1;i++)
        for(int j=0;j<s2;j++)
            v[i][j]=value;
}


template<class T>
T fast_pow(T n , T p)
{
    if(p==0) return 1;
    if(p%2)
    {
        T g=mod_v ( mod_v(n) * mod_v(fast_pow(n,p-1)) );
        return g;
    }
    else
    {
        T g=fast_pow(n,p/2);
        g=mod_v( mod_v(g) * mod_v(g) ) ;
        return g;
    }
}

template<class T>
inline T modInverse(T n)
{
    return fast_pow(n,mod-2);
}

template<class T>
inline void debug(string S1,T S2,string S3)
{
    cout<<S1<<S2<<S3;
}

#ifndef ONLINE_JUDGE
#  define p(x) cout<<x<<endl;
#else if
#  define print(x) 0;
#endif

//.......Code start from here ! .......

//ll dp[5005][5005];
//ll kp[5005];
//ll q[5005];
//int n,m,k;
//
//
//ll re(int i,int count)
//{
//    if(count==k)
//    {
//        return 0;
//    }
//    if(i+m-1>n)
//    {
//        return -10000000;
//    }
//    else if(dp[i][count]!=-1) return dp[i][count];
//
//    ll r1=0,r2=0;
//    r1=q[i+m-1]-q[i-1]+re(i+m,count+1);
//    r2=re(i+1,count);
//
//    return dp[i][count]=max(r1,r2);
//}


int main()
{
//    scanf("%d %d %d",&n,&m,&k);
//
//    q[0]=0;
//    for(int i=1;i<=n;i++)
//    {
//        scanf("%I64d",&kp[i]);
//        q[i]=q[i-1]+kp[i];
//    }
//
//    for(int i=0;i<5005;i++)
//        for(int j=0;j<5005;j++)
//            dp[i][j]=-1;
//    printf("%I64d\n",re(1,0));
    int n;
    scanf("%d",&n);
    if(n<4)
    {
        printf("NO\n");
    }
    else if(n==4)
    {
        printf("YES\n");
        printf("%d * %d = 8\n",2,4);
        printf("%d * %d = 24\n",8,3);
        printf("%d * %d = 24\n",24,1);
    }
    else if(n==5)
    {
        printf("YES\n");
        printf("%d * %d = %d\n",4,5,20);
        printf("%d + %d = %d\n",2,3,5);
        printf("%d + %d = %d\n",20,5,25);
        printf("%d - %d = %d\n",25,1,24);
    }

    else if(n>=6)
    {
        printf("YES\n");
        printf("%d - %d = 1\n",6,5);
        printf("%d - %d = 0\n",1,1);
        for(int i=7;i<=n;i++)
            printf("%d * %d = 0\n",i,0);
        printf("%d * %d = 8\n",2,4);
        printf("%d * %d = 24\n",8,3);
        printf("%d + %d = 24\n",24,0);
    }

    return 0;
}

