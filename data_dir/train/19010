#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <map>
#include <bitset>
#include <set>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <string.h>
#include <cstring>
#include <iomanip>
#include <unordered_map>
#include <sstream>
#include <stdio.h>
#include <sstream>
#include <bitset>
#include <functional>
#include <locale>
#include <cmath>
#include <iomanip>
#include <math.h>
#include <bitset>
using namespace std;
#define ll  long long
#define ld long double
#define PI 3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844
int GCD(int x, int y) { return !y ? x : GCD(y, x % y); }
int LCM(int x, int y){ return x*y / GCD(x, y); }
ll ceilDivision(ll dividend, ll divisor){ return (dividend + divisor - 1) / divisor; }
int main()
{
    //freopen("a.txt", "r", stdin);
    //freopen("b.txt", "w", stdout);
    ll n, d,Max,sum,begin;
    cin >> n >> d;
    vector<pair<ll, ll> >arr(n);
    for (int i = 0; i < n; i++)
        cin >> arr[i].first >> arr[i].second;
    sort(arr.begin(), arr.end());
    begin = 0, Max = sum = arr[0].second;
    for (int i = 1; i < n; i++)
    {
        if (arr[i].first - arr[begin].first < d)
            sum += arr[i].second, Max = max(sum, Max);
        else
        {
            while (arr[i].first - arr[begin].first >= d)
                sum -= arr[begin].second, begin++;
            sum += arr[i].second, Max = max(sum, Max);
        }
    }
    cout << Max << endl;
    return 0;
}
