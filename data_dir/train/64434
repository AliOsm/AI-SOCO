#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

typedef long long ll;
using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

#define all(x) x.begin(), x.end()
#define f(i,a,b) for(int i = (a); i <= (b); i++)
#define fd(i,a,b) for(int i = (a); i >= (b); i--)
#define mp make_pair
#define faster_io() ios_base::sync_with_stdio(false)
#define pb push_back
#define pii pair<int,int>
#define SZ(x) ((int)x.size())
#define vii vector<pair<int,int>>

const int INF = 1000000005;
const ll INFLL = 1000000000000000002ll;
const ll MOD = 1000000007;

inline ll min(ll a, ll b, ll c){return min(min(a,b),c);}
inline ll min(ll a, ll b, ll c, ll d){return min(min(min(a,b),c),d);}
inline ll max(ll a, ll b, ll c){return max(max(a,b),c);}
inline ll max(ll a, ll b, ll c, ll d){return max(max(max(a,b),c),d);}

// ----------------------------------------------------------------------------------------------------------

ll N;

ll exp(ll n, ll e)
{
    e += MOD-1;
    e %= MOD-1;
    if(e == 0) return 1;
    if(e%2) return (exp(n, e-1) * n) % MOD;
    ll k = exp(n,e/2);
    return (k*k) % MOD;
}

int main()
{
    cin >> N;
    bool even = false;
    ll e = 1, e2 = 1;
    f(i,1,N)
    {
        ll k;
        scanf("%I64d", &k);
        k %= MOD-1;
        e *= k;
        e %= MOD-1;
        if(k%2 == 0) even = true;
    }

    ll a = even ? exp(2,e-1) + 1 : exp(2,e-1) - 1;
    a += MOD;
    a %= MOD;
    a *= exp(3,MOD-2);
    a %= MOD;
    ll b = exp(2,e-1);
    cout << a << "/" << b << "\n";
}
