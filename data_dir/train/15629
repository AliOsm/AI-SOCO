
#include "bits/stdc++.h"
using namespace std;
char S[1005] , T[1005];
int dp[1005][1005][11][2];

int main(){
	int N , m , i , j , k , p;
	scanf( "%d%d%d" , &N , &m , &k );
	scanf( "%s%s" , S , T );

	for( i = 0 ; i < N ; ++i ){
		if( S[i] == T[0] ) dp[i][0][1][1] = 1;
		if( i >= 1 ) dp[i][0][1][0] = max( dp[i - 1][0][1][0] , dp[i - 1][0][1][1] );
	}

	for( i = 0 ; i < m ; ++i ){
		if( S[0] == T[i] ) dp[0][i][1][1] = 1;
		if( i >= 1 ) dp[0][i][1][0] = max( dp[0][i - 1][1][0] , dp[0][i - 1][1][1] );
	}
	
	int Temp;

	for( i = 1 ; i <= k ; ++i ){	
		for( j = 1 ; j < N ; ++j ){
			for( p = 1 ; p < m ; ++p ){
				if( S[j] == T[p] ){
					dp[j][p][i][1] = max( dp[j - 1][p - 1][i][1] + 1 , 
						max( dp[j - 1][p - 1][i - 1][0] + 1 , dp[j - 1][p - 1][i - 1][1] + 1 ) );
				}

				dp[j][p][i][0] = max( max( dp[j][p - 1][i][0] , dp[j][p - 1][i][1] ) , 
					max( dp[j - 1][p][i][0] , dp[j - 1][p][i][1] ) );	
				Temp = max( dp[j - 1][p - 1][i][0] , dp[j - 1][p - 1][i][1] );
				dp[j][p][i][0] = max( dp[j][p][i][0] , Temp );				
			}
		}
	}

	printf( "%d\n" , max( dp[N - 1][m - 1][k][1] , dp[N - 1][m - 1][k][0] ) );
	return 0;
}