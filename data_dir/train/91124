#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdlib>
#include <map>
#include <string>
#include <iomanip>
#include <cstdio>
using namespace std;

map<string, int> num;
int k = 1;
vector<int> g[300];

int dfs(int v) {
    int ans = 1;
    for(int i = 0; i < g[v].size(); i++) {
            int to = g[v][i];
            ans = max(ans, dfs(to) + 1);
    }
    return ans;
}

void toLower(string& s) {
     for(int i = 0; i < s.length(); i++) {
             if (!(s[i] >= 'a' && s[i] <= 'z')) {
                        s[i] = 'a' + s[i] - 'A';
             }
     }
}

int main() {
    ios_base::sync_with_stdio(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    
    num["polycarp"] = 0;
    int n;
    cin >> n;
    for(int i = 0; i < n; i++) {
            string s1, s2;
            cin >> s1 >> s2 >> s2;
            toLower(s1);
            toLower(s2);
            if (num.find(s1) == num.end()) num[s1] = k++;
            if (num.find(s2) == num.end()) num[s2] = k++;
            g[num[s2]].push_back(num[s1]);
    }
    
    cout << dfs(0);
    
    return 0;
}
            
                         
