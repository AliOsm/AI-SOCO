#include <bits/stdc++.h>

using namespace std;

const int maxn = 19;

long long a[maxn];

long long c[maxn][maxn];
long long f[1 << maxn][maxn];

int main()
{
    int n, m, k;
    cin >> n >> m >> k;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < k; i++)
    {
        int x, y;
        cin >> x >> y;
        x--; y--;
        cin >> c[x][y];
    }
    for (int i = 0; i < n; i++)
        f[1 << i][i] = a[i];
    long long ans = 0;
    for (int mask = 0; mask < (1 << n); mask++)
    {
        for (int last = 0; last < n; last++) if ((mask & (1 << last)) > 0)
        {
            for (int nw = 0; nw < n; nw++) if ((mask & (1 << nw)) == 0)
            {
                f[mask | (1 << nw)][nw] = max(f[mask | (1 << nw)][nw], f[mask][last] + a[nw] + c[last][nw]);
            }
        }
        if (__builtin_popcount(mask) == m)
        {
            for (int j = 0; j < n; j++)
                ans = max(ans, f[mask][j]);
        }
    }
    cout << ans << endl;
    return 0;
}
