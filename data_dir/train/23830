#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
using namespace std;
#define MS0(I) memset(I, 0, sizeof(I));
#define MS1(I) memset(I, -1, sizeof(I));
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define rep1(i, s, n) for(int i = (s); i < (n); ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define DRI(A) int A; scanf("%d", &A);
#define DRII(A, B) int A, B; scanf("%d %d", &A, &B);
#define DRIII(A, B, C) int A, B, C; scanf("%d %d %d", &A, &B, &C);
#define DRL(A) long long A; scanf("%lld", &A);
#define DRLL(A, B) long long A, B; scanf("%lld %lld", &A, &B);
#define DRLLL(A, B, C) long long A, B, C; scanf("%lld %lld %lld", &A, &B, &C);
#define SZ(X) ((int)X.size() )
#define MP make_pair 
#define pb push_back
#define F first
#define S second
#define ALL(I) (I).begin(), (I).end()
typedef long long LL;
typedef unsigned long long ULL;
typedef double DB;
typedef long double LDB;
typedef pair<int, int> PII; 
typedef pair<int, LL> PIL;
typedef pair<LL, int> PLI;
typedef pair<LL, LL> PLL;
const double eps = 1e-9;
const double PI = acos(-1);
const LL INFF = 1e18;
const int INF = 1e9+1;
const int mod = 1e9+7;
const int MAX = 1e5+7;
int a[MAX];
inline int val(int l, int r, int v){
  int res = r / v - l / v;
  return l % v == 0 ? res + 1 : res;
}
int n, x, k;
inline int go(int l, int r, int v){
  int res = l-1;
  while(l <= r){
    int mid = (l + r) >> 1;
    int rs = val(v, a[mid], x);
    if(rs > k) r = mid - 1;
    else if(rs == k) r = mid - 1, res = mid;
    else l = mid + 1;
  }
  return res;
}
inline int gogo(int l, int r, int v){
  int res = l-1;
  while(l <= r){
    int mid = (l + r) >> 1;
    int rs = val(v, a[mid], x);
    if(rs > k) r = mid - 1;
    else if(rs == k) l = mid + 1, res = mid;
    else l = mid + 1;
  }
  return res;
}
map<int, LL>mp;
int main(void){
  scanf("%d %d %d", &n, &x, &k);
  rep1(i, 1, n+1) scanf("%d", a + i);
  sort(a + 1, a + n + 1);
  LL ans = 0;
  rep1(i, 1, n+1) mp[ a[i] ]++;
  if(k == 1){
    for(auto xx : mp){
      if(xx.F % x == 0) ans += xx.S*(xx.S - 1)/2;
    }
  }
  else if(k == 0){
    for(auto xx : mp){
      if(xx.F % x) ans += xx.S*(xx.S - 1)/2;
    }
  }
  rep1(i, 1, n+1){
    int ll = go(i, n, a[i]);
    if(ll == i-1) continue;
    int rr = gogo(i, n, a[i]);
    ans += rr - ll + 1;
  }

  printf("%lld\n", ans);
  return 0;
}
