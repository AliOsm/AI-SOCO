#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e6+10;
uli a[mx],s[mx];
vector<int>e[mx];
uli f(uli i,uli j){
   if(a[i]==a[j]){
      if(-s[i]-a[i]*i>=-s[j]-a[j]*j)return 0;
      return 1e9; 
   }
   uli num=(-s[j]-a[j]*j)-(-s[i]-a[i]*i);
   uli den=a[i]-a[j];
   if(num<0)return 0;
   return (num+den-1)/den;
}
int main(){
   int n;
   scanf("%d",&n);
   uli ans=0;
   for(int i=0;i<n;i++){
      scanf("%lld",a+i);
      ans+=uli(i+1)*a[i];
   }
   uli inc=0;
   for(int it=0;it<2;it++){
      s[n]=0;
      uli sum=0;
      for(int i=n-1;i>=0;i--){
         s[i]=sum;
         sum+=a[i];
         e[i].clear();
      }
      int v=0;
      for(int i=0;i<n;i++){
         e[i].push_back(i);
         for(int j=0;j<int(e[i].size());j++){
            int u=e[i][j];
            if(a[u]>=a[v]){
               uli x=f(u,v);
               if(x<=i)v=u;
               else if(i<x && x<n)e[x].push_back(u);
            }
            else{
               uli x=f(v,u);
               if(i<x && x<n)e[x].push_back(v);
               if(-s[u]+a[u]*uli(i-u)>=-s[v]+a[v]*uli(i-v))v=u;               
            }
         }
         uli delta=-s[v]+a[v]*uli(i-v)+s[i];
         inc=max(inc,delta);
      }
      reverse(a,a+n);
      for(int i=0;i<n;i++)a[i]=-a[i];
   }
   ans+=max(0ll,inc);
   printf("%lld\n",ans);
   return 0;
}


