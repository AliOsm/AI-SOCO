#define _CRT_SECURE_NO_WARNINGS
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <string>

#define oo 1e9
#define pi 3.1415926536
#define all(x) x.begin(),x.end()
#define sorta(x) sort(all(x))
#define sortam(x,comp) sort(all(x),comp)
#define sortd(x) sort(x.rbegin(),x.rend())
#define sf(x) scanf("%d", &x);
#define sf2(x, y) scanf("%d %d", &x, &y);
#define sf3(x, y, z) scanf("%d %d %d", &x, &y, &z);
#define sfll(x) scanf("%I64d", &x);
#define sfll2(x, y) scanf("%I64d %I64d", &x, &y);
#define sfll3(x, y, z) scanf("%I64d %I64d %I64d", &x, &y, &z);
#define sfd(x) scanf("%f", &x);
#define pr(x) printf("%d\n", x);

typedef long long ll;
using namespace std;

char s[100010];

void Z(vector<pair<int, int> >&ret) {
    int sz = strlen(s);
    vector<int> f(sz + 1, 0), pat(sz + 1, 0);
    int l = 0, r = 0;
    for(int i = 1; i < sz; i++) {
        if(f[i - l] <= r - i) f[i] = f[i - l];
        else {
            l = i;
            if(i > r)
                r = i;
            for(f[i] = r - i; r < sz; r++, f[i]++)
            if(s[r] != s[f[i]])
                break;
            r--;
        }
        pat[f[i]]++;
    }

    pat[sz]++;
    for(int i = sz - 1; i >= 0; i--) pat[i] += pat[i + 1];

    for(int i = 0; i < sz; i++) {
        if(f[i] == sz-i) ret.push_back({f[i], pat[f[i]]});
    }
}

int main() {
    scanf("%s", s);
    vector<pair<int, int> >l;
    Z(l);
    sorta(l);
    l.push_back({strlen(s), 1});
    pr(l.size());
    for(int i = 0; i < l.size(); i++) printf("%d %d\n", l[i].first, l[i].second);
    return 0;
}
