
#include<bits/stdc++.h>
using namespace std;
/**
********************************************************************
******************* Author:Bisnu sarkar ****************************
********************************************************************
**/
#define ull            unsigned long long
#define ll             long long
#define vi             vector<int>
#define pb             push_back
#define mp             make_pair
#define pii            pair<int,int>
#define vit            vector<int> :: iterator
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second
#define endl           '\n';
#define what_is(x)     cerr << #x << " is " << x << endl;
///*....Debugger....*/
#define error(args...) {vector <string> _v = split(#args, ','); err(_v.begin(), args); cout << endl;}
vector <string> split(const string &s, char c) {
    vector <string> v;
    stringstream ss(s); string x;
    while (getline(ss, x, c)) v.emplace_back(x);
    return move(v);
}
void err(vector <string> :: iterator it) {}
template <typename T, typename... Args>
void err(vector <string> :: iterator it, T a, Args... args) {
    cout << it -> substr((*it)[0] == ' ', it -> length()) << " = " << a << ", ";
    err(++it, args...);
}
 
int ini(){int x; scanf("%d",&x);return x;}
long long inl(){ long long x;scanf("%lld",&x); return x;}
double ind(){double x; scanf("%lf",&x);return x;}
#define Iin ini();
#define Lin inl();
#define Din ind();

int set_1(int n,int pos){return n = (n | (1<<pos));}
int reset_0(int n,int pos){return n= n & ~(1<<pos);}
bool check_bit(int n,int pos){return n = n & (1<<pos);}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};
const int N = (int) 1e5 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);
const double eps=1e-9;

int a[N],square[N];

int main()
{
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);  
    int t=1,te=0;
    for(int i=1;i<N;i++){
        square[i]=i*i;
    }

    while(t--){
        int n;
        cin>>n;

        vector<int>v,sq;
        for(int i=1;i<=n;i++){
            int x;
            cin>>x;
            int d= sqrt(x);            

            if(d*d==x){
                sq.push_back(x);
            }
            else{
                v.push_back(min(abs(square[d]-x),abs(square[d+1]-x)));
            }
        }
       
        sort(v.begin(),v.end());
        int sz=v.size();
        int need=n/2;
        ll res=0;
       // printf("%d %d\n",v.size(),need);
        if(sz>=need){
            int x=sz-need;

            for(int i=0;i<x;i++){
                res+=(ll)v[i];
            }
        }
        else{
            std::vector<int> final;
            for(int x: sq){
                for(int i=1;i<3;i++){
                    int d=sqrt(x+i);

                    if(d*d != (x+i)){
                      //  printf("%d %d %d\n",d,x,i );
                        final.push_back(i);
                    }
                }
            }
            sort(final.begin(),final.end());


            int x=need-sz;
           // printf("%d\n", x);

            for(int i=0;i<x;i++){
               // printf("%d\n", final[i]);
                res+=(ll)final[i];
            }
        }
        printf("%lld\n", res);

        //printf("Case %d: ",++te);
    }
    return 0;
}


