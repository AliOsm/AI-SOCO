/*-----Deep D. Savani------------
-------DAIICT,INDIA--------------
//logic credits - dotorya
*/
#include<bits/stdc++.h>
#define pb push_back
#define ff first
#define ss second
#define mp make_pair
#define mod 1000000007
#define deb(x) cout<<#x<<" : "<<x<<endl;
#define deb2(x,y) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<endl;
#define deb3(x,y,z) cout<<#x<<" : "<<x<<"\t"<<#y<<" : "<<y<<"\t"<<#z<<" : "<<z<<endl;
#define nax 101010
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;
    
using namespace std;

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 

#define T ll  
#define ordered_set tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update> 
    
long long modulo(long long base,long long exponent,long long modulus);
long long choose(ll n,ll k);
ll inverse(ll a,ll m);



void build()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
}

int pos[nax][1010];
bool val[nax][1010];
int cnt[nax];    
    
int main(){

    build();
    FIO
    ll n,m,q;
    cin>>n>>m>>q;

    for(int i=1;i<=n;i++)
    	pos[0][i]=i;

    ll track=n;
    for(int i=1;i<=q;i++)
    {
    	ll type;
    	cin>>type;
    	//deb(type);

    	for(int j=1;j<=n;j++)
    	{
    		pos[i][j]=pos[i-1][j];
    	}

    	if(type==1)
    	{
    		ll x,y;
    		cin>>x>>y;

    		track++;
    		for(int j=1;j<=m;j++)
    			val[track][j]=val[pos[i][x]][j];
    		val[track][y]=1;
    		

    		pos[i][x]=track;

    		for(int j=1;j<=m;j++)
    			cnt[track]+=val[track][j];
    	}
    	else if(type==2)
    	{
    		ll x,y;
    		cin>>x>>y;

    		track++;
    		for(int j=1;j<=m;j++)
    			val[track][j]=val[pos[i][x]][j];
    		val[track][y]=0;
    		

    		pos[i][x]=track;

    		for(int j=1;j<=m;j++)
    			cnt[track]+=val[track][j];
    	}
    	else if(type==3)
    	{
    		ll x;
    		cin>>x;

    		track++;
    		for(int j=1;j<=m;j++)
    			val[track][j]=!val[pos[i][x]][j];
    		
    		pos[i][x]=track;

    		for(int j=1;j<=m;j++)
    			cnt[track]+=val[track][j];
    	}
    	else
    	{
    		ll x;
    		cin>>x;

    		for(int j=1;j<=n;j++)
    			pos[i][j]=pos[x][j];
    	}

    	//deb(i);
    	ll ans=0;
    	for(int j=1;j<=n;j++)
    		ans+=cnt[pos[i][j]];
    	cout<<ans<<endl;
    }
    return 0;
}
    
        
    
long long modulo(long long base,long long exponent,long long modulus)
{
    if(modulus ==1)
        return 0;
    
    long long result=1;
    base=base % modulus;
    while(exponent>0)
    {
        if(exponent%2==1)
        {
            result=(result*base) % modulus;

        }
        exponent=exponent>>1;
        base = (base*base) % modulus;
    }
        return result;
}
    
long long choose(ll n,ll k)
{
    if(k==0)  return 1;
    return (n* choose(n-1,k-1))/k;
}
    
void EE(ll a,ll b,ll &co1,ll &co2)
{
    if(a%b==0)
    {
        co1=0;
        co2=1;
        return;
    }
    EE(b,a%b,co1,co2);
    ll temp=co1;
    co1=co2;
    co2=temp-co2*(a/b);
}
    
ll inverse(ll a,ll m)
{
    ll x,y;
    EE(a,m,x,y);
    if(x<0) x+=m;
    return x;
}