#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define se second
#define fi first
#define pb push_back
const int N=2e6 + 5;
int cs[N],l[N],r[N],mx[N],mn[N],allr[N],alll[N];
ll sum[N];
vector<int> cmp;

void add(int x){
	cmp.pb(x);
	cmp.pb(x - 1);
	cmp.pb(x + 1);
}

int main(){

	//freopen("in.txt","r",stdin);

	int n;
	scanf("%d",&n);
	ll d=0;
	for(int i=0;i < n;i++){
		scanf("%d%d",l + i,r + i);
		add(l[i]);
		add(r[i]);
		d+=i + 1;
		mx[i + 1]=0;
		mn[i + 1]=1e9;
	}
	sort(cmp.begin(),cmp.end());
	cmp.resize(unique(cmp.begin(),cmp.end()) - cmp.begin());
	for(int i=0;i < n;i++){
		l[i]=lower_bound(cmp.begin(),cmp.end(),l[i]) - cmp.begin();
		r[i]=lower_bound(cmp.begin(),cmp.end(),r[i]) - cmp.begin();
		cs[l[i]]++;
		sum[l[i]]+=i + 1;
		cs[r[i] + 1]--;
		sum[r[i] + 1]-=i + 1;
	}
	int ans=0;
	for(int i=0;i < cmp.size();i++){
		if(i) sum[i]+=sum[i - 1], cs[i]+=cs[i - 1];
		if(cs[i] == n - 1){
			ll x=d - sum[i];
			mx[x]=max(mx[x],i);
			mn[x]=min(mn[x],i);
		}
		if(cs[i] == n){
			alll[i]=1 + (i ? alll[i - 1] : 0);
		}
	}
	for(int i=cmp.size() - 1;i >= 0;i--){
		if(cs[i] == n){
			allr[i]=1 + allr[i + 1];
			int l=i,r=i;
			if(l){
				l-=alll[l - 1];
			}
			r+=allr[r + 1];
			ans=max(ans,cmp[r] - cmp[l]);
		}
	}
	for(int i=1;i <= n;i++){
		if(mn[i] <= mx[i]){
			int l=mn[i],r=mx[i];
			if(l){
				l-=alll[l - 1];
			}
			r+=allr[r + 1];
			ans=max(ans,cmp[r] - cmp[l]);
		}
	}
	cout << ans << endl;

	return 0;
}
