#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define x first
#define y second
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
const int MOD = 1000000007;
const int oo = 2e9;
const int N = 200000 + 100;

int n;
string s[4][210];

char c[210][210];

int main() {
	cin >> n;
	for (int i = 0; i < 4; ++i)
		for (int j = 0 ; j < n ; ++j)
			cin >> s[i][j];
	vector<int> p;
	for (int i = 0; i < 4; ++i) {
		p.pb(i);
	}
	int mn = 1e9;
	do {
		for (int i = 0 ; i < 4; ++i) {
			for (int j = 0 ; j < n ; ++j) {
				for (int k = 0 ; k < n ; ++k) {
					int offsetX = 0;
					int offsetY = 0;
					if (i == 1) {
						offsetY = n;
					}
					if (i == 2) {
						offsetX = n;
					}
					if (i == 3) {
						offsetX = offsetY = n;
					}
					c[offsetX + j][offsetY + k] = s[p[i]][j][k];
				}
			}
		}
		bool white = 1;
		int c1 = 0 , c2 = 0;
		for (int i = 0 ; i < 2 * n ; ++i) {
			for (int j = 0 ; j < 2 * n ; ++j) {
				//cout << white;

				if (c[i][j] - '0' == (int) white)
					c1++;
				if (c[i][j] - '0' != (int) white)
					c2++;
				white = !white;
			}
			white = !white;
			//cout << endl;
		}
	/*	for (int i = 0; i < 2 * n; ++i) {
			for (int j = 0 ; j < 2 * n ; ++j) {
				cout << c[i][j];
			}
			cout << endl;
		}*/
		mn = min(mn, min(c1, c2));

	} while (next_permutation(p.begin(), p.end()));
	cout << mn << endl;
	return 0;
}
