#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef pair<int, int> ii;

string simulate(const string &s) {
	vector<int> o, z;
	ford(i, s.size() - 1, 0) {
		if(s[i] == '1') {
			o.push_back(i);
		}
		else {
			z.push_back(i);
		}
	}
	int player = 0;
	while(o.size() + z.size() > 2) {
		if(player == 0) {
			if(!o.empty()) {
				o.pop_back();
			}
			else {
				z.pop_back();
			}
		}
		else {
			if(!z.empty()) {
				z.pop_back();
			}
			else {
				o.pop_back();
			}
		}
		player ^= 1;
	}
	if(o.empty()) {
		return "00";
	}
	else if(z.empty()) {
		return "11";
	}
	else if(z[0] < o[0]) {
		return "01";
	}
	return "10";
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	string s;
	cin >> s;

	string a = s, b = s, c = s, d = s;
	int ones = 0, zeros = 0;
	fori(i, 0, s.size()) {
		if(s[i] == '?') {
			a[i] = '0';
			b[i] = '1';
		}
		else {
			zeros += s[i] == '0';
			ones += s[i] == '1';
		}
	}

	int n = s.size();
	int zeros_needed = n / 2 - zeros;
	int ones_needed = (n + 1) / 2 - ones;
	fori(i, 0, n) { // 11....00.....
		if(s[i] == '?') {
			if(ones_needed > 0) {
				c[i] = '1';
				ones_needed--;
			}
			else {
				c[i] = '0';
				zeros_needed--;
			}
		}
	}

	zeros_needed = n / 2 - zeros;
	ones_needed = (n + 1) / 2 - ones;
	fori(i, 0, n) { // 00..........11........
		if(s[i] == '?') {
			if(zeros_needed > 0) {
				d[i] = '0';
				zeros_needed--;
			}
			else {
				d[i] = '1';
				ones_needed--;
			}
		}
	}

	set<string> ans;
	ans.insert(simulate(a));
	ans.insert(simulate(b));
	ans.insert(simulate(c));
	ans.insert(simulate(d));

	for(auto &each : ans) {
		cout << each << '\n';
	}

	return 0;
}

