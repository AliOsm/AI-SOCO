#include <stdio.h>
#include <stack>
#include <map>
#include <string.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <iomanip>
#include <math.h>
#include <vector>
#include <set>
#include <queue>
#include <climits>
#include <unordered_map>
#include <iterator> 
using namespace std;
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define inf32 INT_MAX
#define inf64 LLONG_MAX
#define PI acos(-1)
#define cos45 cos(PI/4)
#define ld long double
#define inf 1000000
const int mod = (1e9) + 7;
const double eps = 1e-6;
const int siz = 1e5 + 5, siz2 = 1e5 + 5;
int n, m;
pair<int, int> cp[3005];
int votes[3005], temp[3005];
bool vis[3005];
void fill() {
	for (int i = 1; i <= m; i++) {
		temp[i] = votes[i];
	}
}
int main()
{
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%d%d", &cp[i].second, &cp[i].first);
		votes[cp[i].second]++;
	}
	sort(cp, cp + n);
	ll mn = LLONG_MAX;
	for (int i = 1; i <= n; i++) {
		fill();
		int my = 0;
		ll cur = 0;
		for (int j = 0; j < n; j++) {
			int p = cp[j].second;
			if (p == 1) {
				my++;
				vis[j] = true;
				continue;
			}
			if (temp[p] >= i) {
				cur += cp[j].first;
				temp[p]--;
				my++;
				vis[j] = true;
			}
		}
		if (my < i) {
			for (int j = 0; j < n; j++) {
				if (vis[j]) {
					continue;
				}
				cur += cp[j].first;
				my++;
				if (my >= i) {
					break;
				}
			}
		}
		mn = min(mn, cur);
		memset(vis, 0, sizeof vis);
	}
	printf("%I64d\n", mn);
	return 0;
}