#include <bits/stdc++.h>

using namespace std;
using ll = long long;

const int N = 300005;

int n;
int a[N];

ll dp[N][3];

ll f(int i, int last) {
	if(i == n) return last ? -1e18 : 0;
	if(last > a[i]) return -1e18;
	ll &ans = dp[i][last];
	if(~ans) return ans;

	ans = -1e18;

	for(int nlast = 0; nlast < 3; nlast++) {
		if(last and last == nlast) continue;
		if(a[i] < max(last, nlast)) continue;
		ll tmp = (a[i] - max(last, nlast)) / 2 + f(i + 1, nlast);
		if(nlast > 0) tmp++;
		tmp += (abs(last - nlast) - 1) / 2;
		tmp += (min(last, nlast) - 1) / 2;
		ans = max(ans, tmp);
	}

	return ans;
}

int main() {
	memset(dp, -1, sizeof dp);

	scanf("%d", &n);

	for(int i = 0; i < n; i++) scanf("%d", a + i);

	ll ans = 0;

	stack<int> s;
	int i;
	for(i = 0; i < n and a[i] >= 2; i++) {
		ans += a[i] / 2;
		if(a[i] % 2) {
			if(!s.empty() and (i - s.top()) % 2) {
				s.pop();
				ans++;
			}
			else s.push(i);
		}
	}

	for(int last = s.empty() ? -1 : s.top(); i < n; i++) {
		ans += a[i] / 2;
		if(a[i] % 2) {
			if(last == -1) last = i;
			else if((i - last) % 2) ans++, last = -1;
			else last = i;
		}
	}

	printf("%lld\n", ans);

	// printf("%lld\n", f(0, 0));
}
