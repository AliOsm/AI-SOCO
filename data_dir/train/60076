#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define pb push_back
#define all(v) (v).begin() , (v).end()
#define popcnt(x) __builtin_popcount(x)
#define inf 0x3f3f3f3f
#define watch(x) cout << (#x) << " is " << (x) << endl
#define F first
#define S second

using namespace std;
using namespace __gnu_pbds;

template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef long long  ll;

const double EPS = 1e-9;
const double pi = acos(-1.0);
int dx[] = {0 , 0 , 1 , -1 , 1 , 1 , -1 , -1};
int dy[] = {1 ,-1 , 0 , 0 , -1 , 1 ,  1 , -1};
const int N = 2e5 + 45;

int sz[N] , dfs_num[N] , nodeToNum[N] , num = 0 , n , q;

vi adj[N];

int dfs(int node = 1 , int par = -1){
    nodeToNum[node] = num;
    dfs_num[num] = node;
    num++;
    int ret = 1;
    for(int child : adj[node]){
        if(child != par)ret += dfs(child , node);
    }
    return sz[node] = ret;
}


int main(){
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
#endif
    cin >> n >> q;

    int u;
    for(int i = 2 ; i <= n ; ++i){
        cin >> u;
        adj[i].pb(u);
        adj[u].pb(i);
    }

    for(int i = 1 ; i <= n ; ++i)
        sort(all(adj[i]));

    dfs();
    int v , k;
    while(q--){
        cin >> v >> k;
//        watch(sz[v]);
        if(k > sz[v]){
            puts("-1");
            continue;
        }

        int indx = nodeToNum[v];
        cout << dfs_num[indx + k - 1] << endl;
    }
}
