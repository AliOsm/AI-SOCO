#include<bits/stdc++.h>
#define MOD 1000000007
#define MOD2 1000000006
#define TEMPMOD1 998244353
#define TEMPMOD2 998244352
#define INF 1000000000000000007
#define NEGINF -1000000000000000007
#define vll vector<ll> 
#define vvll vector<vector<ll>>
#define pll pair<ll,ll>
#define plll pair<pll,ll>
#define vpll vector<pll>
using namespace std;
typedef long long int ll;


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    set<ll> tempgraph[26];
    ll num,len,vert1,vert2;
    ll incoming[26];
    bool check1[26];
    for(ll i=0;i<26;i++)
    {
        incoming[i]=0;
        check1[i]=false;
    }
    string str;
    cin>>num;
    while(num--)
    {
        cin>>str;
        len=str.size();
        for(ll i=0;i<(len-1);i++)
        {
            vert1=str[i]-'a';
            vert2=str[i+1]-'a';
            check1[vert1]=true;
            check1[vert2]=true;
            if(tempgraph[vert1].find(vert2)==tempgraph[vert1].end())
            {
                tempgraph[vert1].insert(vert2);
                incoming[vert2]++;
            }
        }
        if(len==1)
        {
            vert2=str[0]-'a';
            check1[vert2]=true;
        }
    }
    ll next[26];
    set<ll> ::iterator it;
    ll front;
    ll count1[26];
    for(ll i=0;i<26;i++)
    {
        count1[i]=0;
    }
    for(ll i=0;i<26;i++)
    {
        if(tempgraph[i].size()>1)
        {
            cout<<"NO";
            exit(0);
        }
        if(tempgraph[i].size()==0)
        {
            next[i]=-1;
            continue;
        }
        it=tempgraph[i].begin();
        count1[*it]++;
        next[i]=*it;
    }
    for(ll i=0;i<26;i++)
    {
        if(count1[i]>1)
        {
            cout<<"NO";
            exit(0);
        }
    }
    string final;
    queue<ll> q1;
    bool visit[26];
    for(ll i=0;i<26;i++)
    {
        visit[i]=false;
        if(incoming[i]==0 && (check1[i]))
        {
            q1.push(i);
        }
    }
    char ch='a',ch2;
    while(!q1.empty())
    {
        front=q1.front();
        while(front!=-1)
        {
            ch2=ch+front;
            final+=ch2;
            visit[front]=true;
            front=next[front];
        }
        q1.pop();
    }
    for(ll i=0;i<26;i++)
    {
        if(check1[i] && !visit[i])
        {
            cout<<"NO";
            exit(0);
        }
    }
    cout<<final;
    return 0;
}