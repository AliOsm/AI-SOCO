#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define int long long
#define all(sdk) sdk.begin(),sdk.end()
#define mll map<int, int>
#define pb push_back
#define rep(i,a,b) for(int i=a;i<b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define mp make_pair
#define hell 1000000007
#define endl '\n'
#define vvll vector<vector<int> >
#define vll vector<int>
#define mint map<int,int> 
#define sz(x) (int)x.size()
#define sll set<int>
#define pll pair<int,int>
#define F first
#define S second

int c[21][21];
int a[405];
int freq[1005];
void solve(){  
    int n;
    cin>>n;
    rep(i,0,n*n){
        cin>>a[i];
        freq[a[i]]++;
    }
    if(n%2){
        int count_odd=0;
        int count2=0;
        rep(i,1,1001){
            if(freq[i]%2){
                c[n/2][n/2]=i;
                freq[i]--;
                ++count_odd;
            }
            
        }
        if(count_odd!=1){
            cout<<"NO"<<endl;
            return;
        }
        int row=0,col=0;
        rep(i,1,1001){
            if(freq[i]%4==2){
                ++count2;
            }
        }
        if(count2>2*(n/2)){
            cout<<"NO"<<endl;
            return;
        }
        rep(i,0,n/2){
            int done=0;
            rep(k,1,1001){
                if(freq[k]%4==2){
                    c[i][n/2]=k;
                    c[n-i-1][n/2]=k;
                    freq[k]-=2;
                    done=1;
                    break;
                }
            }
            if(done)
                continue;
            rep(k,1,1001){
                if(freq[k]){
                    c[i][n/2]=k;
                    c[n-i-1][n/2]=k;
                    freq[k]-=2;
                    break;
                }
            }
        }
        rep(i,0,n/2){
            int done=0;
            rep(k,1,1001){
                if(freq[k]%4==2){
                    c[n/2][i]=k;
                    c[n/2][n-i-1]=k;
                    freq[k]-=2;
                    done=1;
                    break;
                }
            }
            if(done)
                continue;
            rep(k,1,1001){
                if(freq[k]){
                    c[n/2][i]=k;
                    c[n/2][n-i-1]=k;
                    freq[k]-=2;
                    break;
                }
            }
        }
        rep(i,0,n/2){
            rep(j,0,n/2){
                rep(k,1,1001){
                    if(freq[k]){
                        freq[k]-=4;
                        c[i][j]=k;
                        c[n-1-i][j]=k;
                        c[i][n-1-j]=k;
                        c[n-1-i][n-1-j]=k;
                        break;
                    }
                }
            }
        }
    }
    else{
        rep(i,1,1001){
            if(freq[i]%4!=0){
                cout<<"NO"<<endl;
                return;
            }
        }
        int idx=0;
        rep(i,1,1001){
            rep(j,0,freq[i]/4){
                int row=idx/(n/2);
                int col=idx%(n/2);
                c[row][col]=i;
                c[row][n-1-col]=i;
                c[n-1-row][col]=i;
                c[n-1-row][n-1-col]=i;
                idx++;
            }
        }
    }
    cout<<"YES"<<endl;
    rep(i,0,n){
        rep(j,0,n){
            cout<<c[i][j]<<' ';
        }
        cout<<endl;
    }
}

signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    // cin>>t;
    while(t--){
        solve();
    }
    return 0;
}