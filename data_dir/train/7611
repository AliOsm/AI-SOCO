/* Author haleyk10198 */
/* �@��:  haleyk10198 */
/* CF handle: haleyk100198*/
/* FOR ACM-ICPC WF*/
#include <bits/stdc++.h>

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vi>;
using pii = pair<int, int>;

#define pb push_back

constexpr auto MOD = 1000000007LL;
constexpr auto LINF = (1LL << 60);
constexpr auto INF = 2147483647LL;
constexpr auto PI = 3.1415926535897932384626433;
constexpr auto EPS = 1E-9;

template<typename T1, typename T2>
ostream &operator<<(ostream &out, const pair<T1, T2> p) {
    out << p.first << ' ' << p.second;
    return out;
}

template<typename T1, typename T2>
istream &operator>>(istream &in, pair<T1, T2> &p) {
    in >> p.first >> p.second;
    return in;
}

template<typename T>
istream &operator>>(istream &in, vector<T> &v) {
    for (auto &x: v)
        in >> x;
    return in;
}

template<typename T>
ostream &operator<<(ostream &out, vector<T> v) {
    for (int i = 0; i < v.size(); i++)
        out << v[i] << (i + 1 == v.size() ? '\n' : ' ');
    out.flush();
    return out;
}

#if __cplusplus < 201703L
#define mp make_pair
#endif

#define MAXN 300010

int n, m, h[MAXN];
ll T[MAXN], res[MAXN];
vector<pii> batch[MAXN];

vi e[MAXN];

void upd(int pos, int v){
    for(++pos; pos <= n; pos+=pos&-pos){
        T[pos] += v;
    }
}

void upd(int x, int y, int v){
    upd(x, v);
    upd(y, -v);
}

ll ask(int pos){
   ll ret = 0;
   for(++pos; pos; pos-=pos&-pos){
       ret += T[pos];
   }

   return ret;
}

ll ask(int x, int y){
    return ask(y-1)-ask(x-1);
}

void dfs(int now,int prv){
    for(auto [d, x]: batch[now]){
        upd(h[now], h[now]+d+1, x);
    }

    res[now] = ask(h[now]);
    for(auto x: e[now]){
        if(x == prv)
            continue;
        h[x] = h[now]+1;
        dfs(x, now);
    }

    for(auto [d, x]: batch[now]){
        upd(h[now], h[now]+d+1, -x);
    }
}

int main() {
#ifdef LOCAL
    freopen("../input.txt", "r", stdin);
//		freopen("output.txt","w",stdout);
    freopen("../debug.txt", "w", stderr);
#endif
    ios_base::sync_with_stdio(false);

    cin >> n;

    for(int i = 1, x, y; i < n; i++){
        cin >> x >> y;
        e[x].push_back(y);
        e[y].push_back(x);
    }

    cin >> m;
    for(int i = 0, v, d, x; i < m; i++){
        cin >> v >> d >> x;
        batch[v].push_back(pair(d, x));
    }

    dfs(1, 1);

    for(int i = 1; i <= n; i++)
        cout << res[i] << (i == n? '\n': ' ');

    return 0;
}
