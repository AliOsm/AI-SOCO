////////////////////////////////////////////    _LeMur_
//#pragma GCC optimize("Ofast,no-stack-protector")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native")
#define _CRT_SECURE_NO_WARNINGS
#include <unordered_map>
#include <unordered_set>
#include <functional>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <chrono>
#include <random>
#include <bitset>
#include <cstdio>
#include <vector>
#include <string>
#include <ctime>
#include <stack>
#include <queue>
#include <cmath>
#include <list>
#include <map>
#include <set>

using namespace std;

const int N = 105;
const int inf = 1000 * 1000 * 1000;
const int mod = 998244353;

int n;
string s;

int a[N] , b[N];
int answ = 0;

int main(){
	mt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());
    cin >> n;
    cin >> s;
    for(int i=0;i<(int)s.size();i++){
        answ += s[i] - '0';
    }
    for(int i=1;i<=n;i++){
        cin >> a[i] >> b[i];
    }
    int cnt = 1000;
    for(int i=1;i<=cnt;i++){
        int sum = 0;
        for(int j=1;j<=n;j++){
            if(i >= b[j] && (i - b[j]) % a[j] == 0){
                s[j - 1] = (s[j - 1] == '0') ? '1' : '0';
            }
            sum += s[j - 1] - '0';
        }
        answ = max(answ , sum);
    }
    cout << answ << endl;
    return 0;
}
