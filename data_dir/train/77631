#include <bits/stdc++.h>

#define pb push_back
#define fi first
#define se second
#define mk make_pair

using namespace std;

int pa[1000200];
int a[1000200];

int Pa(int u)
 {
  if (pa[u] == u) return u;
  pa[u]=Pa(pa[u]);
  return pa[u];
 }

void uni(int u,int v)
 {
  u=Pa(u);
  v=Pa(v);
  pa[v]=u;
 }

vector < pair < int , int > > b;
vector < int > edg[1000200];
vector < int > q,g[1000200];
int res[1000200];
int xr[1000200];

int n,m,i,j,x,all;

int main()
 {
  scanf("%d%d",&n,&m);
  for (i=0;i<n*m;i++)
   {
    scanf("%d",&x);
    a[all]=x;
    all++;
   }

  for (i=0;i<all;i++) pa[i]=i;

  for (i=0;i<n;i++)
   {
    b.clear();
    for (j=0;j<m;j++)
     b.pb(mk(a[i*m+j],i*m+j));
    sort(b.begin(),b.end());
    for (j=1;j<m;j++)
     if (b[j].fi == b[j-1].fi)
      uni(b[j].se,b[j-1].se); else
      edg[b[j-1].se].pb(b[j].se);
   }

  for (j=0;j<m;j++)
   {
    b.clear();
    for (i=0;i<n;i++)
     b.pb(mk(a[i*m+j],i*m+j));
    sort(b.begin(),b.end());
    for (i=1;i<n;i++)
     if (b[i].fi == b[i-1].fi)
      uni(b[i].se,b[i-1].se); else
      edg[b[i-1].se].pb(b[i].se);
   }

  for (i=0;i<all;i++)
   for (j=0;j<edg[i].size();j++)
    g[Pa(i)].pb(Pa(edg[i][j])),
    xr[Pa(edg[i][j])]++;

  for (i=0;i<all;i++)
   if (Pa(i) == i && xr[i] == 0)
    q.pb(i);

  while (q.size())
   {
    int u=q.back();
    res[u]++;
    q.pop_back();

    for (i=0;i<g[u].size();i++)
     {
      res[g[u][i]]=max(res[g[u][i]],res[u]);
      xr[g[u][i]]--;
      if (xr[g[u][i]] == 0) q.pb(g[u][i]);
     }
   }

  for (i=0;i<n;i++)
   {
    for (j=0;j<m;j++)
     printf("%d ",res[Pa(i*m+j)]);
    printf("\n");
   }
 }