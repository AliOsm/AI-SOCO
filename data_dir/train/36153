#include <stdio.h>
#include <stdlib.h>
#include <sys/time.h>

#define N	31622	/* sqrt(10^9) */

void init_rand() {
	struct timeval tv;

	gettimeofday(&tv, NULL);
	srand(tv.tv_sec ^ tv.tv_usec);
}

int rand_(int n) {
	return (rand() * 45677LL + rand()) % n;
}

int rr[N];

int compare(const void *a, const void *b) {
	int i = *(int *) a;
	int j = *(int *) b;

	return rr[i] != rr[j] ? rr[i] - rr[j] : i - j;
}

int main() {
	int t;

	init_rand();
	scanf("%d", &t);
	while (t--) {
		static int ii[N];
		int a, b, p, q, i, j, k, x, r, x_, r_, s, tmp;

		scanf("%d%d%d%d", &a, &b, &p, &q);
		for (i = 0; i < N; i++) {
			rr[i] = ((long long) i * p * 2 - q + q * 2) % (q * 2);
			ii[i] = i;
		}
		for (j = 0; j < N; j++) {
			i = rand_(j + 1);
			tmp = ii[i], ii[i] = ii[j], ii[j] = tmp;
		}
		qsort(ii, N, sizeof *ii, compare);
		k = 1;
		for (i = 1; i < N; i++)
			if (rr[ii[i - 1]] != rr[ii[i]])
				ii[k++] = ii[i];
		r_ = ((long long) a * p * 2 - q + q * 2) % (q * 2);
		if (r_ > q * 2 - r_)
			r_ = q * 2 - r_;
		x_ = a;
		while (a <= b && a % N != 0) {
			x = a;
			r = ((long long) x * p * 2 - q + q * 2) % (q * 2);
			if (r > q * 2 - r)
				r = q * 2 - r;
			if (r_ > r || (r_ == r && x_ > x))
				r_ = r, x_ = x;
			a++;
		}
		while (b >= a && b % N != N - 1) {
			x = b;
			r = ((long long) x * p * 2 - q + q * 2) % (q * 2);
			if (r > q * 2 - r)
				r = q * 2 - r;
			if (r_ > r || (r_ == r && x_ > x))
				r_ = r, x_ = x;
			b--;
		}
		while (a <= b) {
			int lower = -1, upper = k;

			s = (long long) a * p * 2 % (q * 2);
			while (upper - lower > 1) {
				i = (lower + upper) / 2;
				if ((long long) s + rr[ii[i]] < q * 2)
					lower = i;
				else
					upper = i;
			}
			if (lower < 0)
				lower += k;
			if (upper >= k)
				upper -= k;
			x = a + ii[lower];
			r = (q * 2) - ((long long) x * p * 2 - q + q * 2) % (q * 2);
			if (r_ > r || (r_ == r && x_ > x))
				r_ = r, x_ = x;
			x = a + ii[upper];
			r = ((long long) x * p * 2 - q + q * 2) % (q * 2);
			if (r_ > r || (r_ == r && x_ > x))
				r_ = r, x_ = x;
			a += N;
		}
		printf("%d\n", x_);
	}
	return 0;
}
