//In The Name Of God
#include<bits/stdc++.h>
#define pb push_back
using namespace std;

const int MAXN = 1e5+22 ;

bool swr,sw,swb,mark[MAXN];
vector<int>G[MAXN];
int deg[MAXN],n,m;

void dfsbus(int v,int par)
{
	mark[v]=true;
	int ted=0;
	for(int i=0;i<G[v].size();i++)
	{
		int u=G[v][i];
		if(u!=par and ted>=1)
		{
			swb=false;
			return ;
		}
		else if(!mark[u])
		{
			ted++;
			dfsbus(u,v);
		}
		if(!swb)
			return ;
	}
}

void dfsring(int v,int par)
{
	int ted=0;
	if(v==1 and sw)
		return;
	else if(v==1)
		sw=true;
	for(int i=0;i<G[v].size();i++)
	{
		int u=G[v][i];
		if(u!=par and ted and v!=1)
		{
			swr=false;
			return;
		}
		if(u!=par)
		{
			ted++;
			dfsring(u,v);
		}
		if(!swr)
			return ;
	}
}

int main()
{
	cin >> n >> m ;
	for(int i=1,x,y;i<=m;i++)
	{
		cin >> x >> y ;
		G[x].pb(y);
		G[y].pb(x);
		deg[x]++;
		deg[y]++;
	}
	int sum=0,q=0;
	bool st=true;
	for(int i=1;i<=n;i++)
	{
		if(deg[i]==1 and st)
		{
			st=false;
			swb=true;
			dfsbus(i,0);
			if(swb)
			{
				cout << "bus topology";
				return 0;
			}
		}
		if(deg[i]==1)
			sum++;
		if(deg[i]==2)
			q++;
	}
	if(sum==0 and q==n)
	{
		swr=true;
		dfsring(1,0);
		if(swr)
		{
			cout << "ring topology";
			return 0;
		}
	}
	if(sum==n-1)
	{
		cout << "star topology" ;
		return 0;	
	}
	cout << "unknown topology";
	return 0;
}
