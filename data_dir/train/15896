#include<bits/stdc++.h>
using namespace std;
#define fr first
#define sc second
typedef long long ll;
typedef double ld;
typedef pair<int,int> p2;
typedef pair<ll,p2> p3;
typedef vector<int> vi;
const ll Mod = 7 + 1e9;
const ll INF32 = 5 + 2e9;
const ll INF64 = 1 + 5e3;
const ll MAX = 5+ 3e5;

int N,boss[MAX],sz[MAX];
vector<pair<int,bool> > G[MAX];

int DFS1(int u,int pre,int BOSS)
{
    boss[u] = BOSS;
    int sum = 0;
    for(auto v : G[u])
        if( v.fr != pre && v.sc == 1 )
        sum += DFS1(v.fr,u,BOSS) +1;
    return sum;
}
int cnt;
bool vis[MAX];
int DFS2(int u,int pre)
{
    vis[u] = 1;
    cnt += sz[ boss[u] ];
    int sum = 1;
    for(auto v : G[u])
        if( v.fr != pre && v.sc == 0 )
            sum += DFS2(v.fr,u);
    return sum;
}
int main()
{
    cin >> N ;
    for(int i=0;i<N-1;i++)
    {
        int u,v,w;
        cin >> u >> v >> w;
        G[u].push_back({v,w});
        G[v].push_back({u,w});
    }
    ll ans = 0;
    for(int i=1;i<=N;i++)
        if( boss[i] == 0 )
            sz[i] = DFS1(i,i,i);
    for(int i=1;i<=N;i++)
        if( !vis[i] )
        {
            cnt = 0;
            ll temp = DFS2(i,i);
            ans += temp*cnt;
            ans += temp*(temp-1);
        }
    cout << ans << endl;
    return 0;
}
