#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <unordered_set>
#include <fstream>
#include <map>
#include <unordered_map>
#include <random>
#include <stack>
#include <stdio.h>
#include <algorithm>
#include <cmath>
#include <ctime>

using namespace std;
#define ll long long
#define MOD 1000000007
#define mp(a, b) make_pair(a, b)
#define PI 3.1415926535
#define EPS 0.00000001
#define pii pair<int, int>
#define INF 1000000000ll*1000000000ll

#define DEBUG 41

#ifndef DEBUG

ifstream in("input.in");
ofstream out("output.out");

#define cin in
#define cout out

#endif

int a[123456];

int dp[1001][1001];

int main()
{
    int n;
    cin >> n;
    bool isSort = 1;
    for(int i = 1; i <= n; ++i)
    {
        cin >> a[i];
        isSort &= (a[i] >= a[i-1]);
    }

    if(isSort)
    {
        cout << 0;
        return 0;
    }
    int ind = -1;
    for(int i = 2; i <= n; ++i)
    {
        if(a[i] < a[i-1])
        {
            ind = i;
            break;
        }
    }
    
    vector<int> b(n+1, 0);
    for(int i = 1; i <= n; ++i)
    {
        if(i >= ind)
            b[i - ind +1] = a[i];
        else
            b[n + 1 - ind + i] = a[i];
    }

    isSort = 1;
    for(int i = 1; i <= n; ++i)
        isSort &= (b[i] >= b[i-1]);
    if(isSort)
        cout << n - ind + 1;
    else
        cout << -1;


}

/*
s + d^s * (1-d) * i
r = sum[i]/ i;

1+d^s * ln(d) * i * (1-d) = 0
1 = d^s * ln(1/d) * i * (1-d)
1 / ln(1/d) / i / (1-d) = d^s-
     1
-------------------- = d^s
ln(1/d) * i * (1-d)

ln(1/d) * i * (1-d) = (1/d)^s

ln( ln(1/d) * i * (1-d) )   1/d^s = ln(X) / ln(1/d)

*/