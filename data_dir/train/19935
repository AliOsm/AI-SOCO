#include <bits/stdc++.h>
using namespace std;
const int Nmax = 300;
int n, m, k, d[3] = {0, 0, 1}, c[3] = {1, -1, 0};
bool kt[Nmax+1][Nmax+1];

int init();
int solve();
int xuli(int &x, int &y, int t);
int tim(int &x, int &y);

int main()
{
    init();
    solve();
}

int init()
{
    scanf("%d%d%d", &n, &m, &k);
    memset(kt, true, sizeof kt);
}

int solve()
{
    int i, x = 1, y = 1;
    int t = n*m/k;

    for (i = 1; i <= k - 1; i++) xuli(x, y, t);
    t = n*m - t*(k - 1);
    xuli(x, y, t);
}

int xuli(int &x, int &y, int t)
{
    printf("%d ", t);
    int dem = 0;
    while (dem < t)
    {
        dem++;
        kt[x][y] = false;
        printf("%d %d ", x, y);
        tim(x, y);
    }
    printf("\n");
}

int tim(int &x, int &y)
{
    int i;

    for (i = 0; i <= 2; i++)
    {
        int u = x + d[i];
        int v = y + c[i];
        if (kt[u][v] && u > 0 && v > 0 && u <= n && v <= m)
        {
            x = u;
            y = v;
            return 0;
        }
    }
}

















































