#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 100100;

ll mod = 1000000007;

ll mpow(ll n, ll p) {
	if(p == 0) return 1;
	else {
		ll aux = mpow(n, p/2);
		aux = (aux*aux)%mod;
		if(p%2 == 0) return aux;
		else return (aux*n)%mod;
	}
}

ll inv(ll n) {
	return mpow(n, mod - 2);
}

ll f[MAX], fi[MAX];

int tmp[1010];

void init() {
	f[0] = fi[0] = 1;
	for(ll i = 1; i < MAX; i++) {
		f[i] = (i*f[i - 1])%mod;
		fi[i] = inv(f[i]);
	}
	
	for(int i = 1; i < 1010; i++) {
		int j = i;
		int cnt = 0;
		while(j != 1) {
			int cnt0 = 0;
			int k = j;
			while(k != 0) {
				if(k%2 == 1) cnt0++;
				k /= 2;
			}
			j = cnt0;
			cnt++;
		}
		tmp[i] = cnt;
	}
}

ll bin(ll n, ll k) {
	if(k < 0 || k > n) return 0;
	ll ans = (f[n]*fi[k])%mod;
	ans = (ans*fi[n - k])%mod;
	return ans;
}

char n[MAX];

ll auxf(int k) {
	int sz = strlen(n);
	if(k == 1) return (ll)(sz - 1);
	int cnt = 0;
	ll ans = 0;
	REP(i, sz) {
		if(n[i] == '1') {
			ans += bin(sz - i - 1, k - cnt);
			ans %= mod;
			cnt++;
		}
	}
	if(cnt == k) ans = (ans + 1)%mod;
	return ans;
}


int main() {
	init();
	scanf("%s", n);
	int k; scanf("%d", &k);
	if(k == 0) {
		printf("1\n");
		return 0;
	}
	
	ll ans = 0;
	for(int i = 1; i < 1010; i++) {
		if(tmp[i] == k - 1) ans += auxf(i);
		ans %= mod;
	}
	printf("%lld\n", ans);
}