#include<bits/stdc++.h>
using namespace std;

#define ll             long long
#define LL             long long
#define pii            pair<int, int>
#define pll            pair<ll, ll>
#define pil            pair<int, ll>
#define pli            pair<ll, int>
#define vi             vector<int>
#define vl             vector<ll>
#define vii            vector<pii>
#define vll            vector<pll>
#define vil            vector<pil>
#define vli            vector<pli>
#define pb             push_back
#define ppb            pop_back
#define mp             make_pair
#define ff             first
#define ss             second
#define TN             typename
#define all(v)         v.begin(), v.end()
#define endl           '\n'

template <TN T> T gcd(T a, T b) {return !b ? a : gcd(b, a % b);}
template <TN T> T lcm(T a, T b) {return a * (b / gcd(a, b));}
template <TN T> T sqr(T a) {return a * a;}
template <TN T> T cube(T a) {return a * a * a;}
template <TN T> inline void smin(T &a, T b) {a = a < b ? a : b;}
template <TN T> inline void smax(T &a, T b) {a = a > b ? a : b;}
template <TN T> void fill(T a[], T n, T b) {for (int i = 0; i <= n; i++) a[i] = b;}

int in() {int n; scanf("%d", &n); return n;}
ll Lin() {ll n; scanf("%lld", &n); return n;}
double Din() {double n; scanf("%lf", &n); return n;}

const ll inf = (ll)1e17;
const ll mod = (ll)1e9 + 7;
const int N = 1e5 + 5;

ll n, a[N], A, B;
int k;

ll bs(ll x) {
	int low = 1, high = k;
	ll ans = 0;
	while (low <= high) {
		ll mid = (low + high) / 2;
		if (a[mid] <= x) ans = mid, low = mid + 1;
		else high = mid - 1;
	}
	return ans;
}

ll call(ll left, ll right) {
	ll cnt = bs(right) - bs(left - 1);
	if (cnt == 0) return A;
	if (left == right) return B * cnt;
	ll ans = B * cnt * (ll)(right - left + 1);
	ll mid = (left + right) / 2;
	ans = min(ans, call(left, mid) + call(mid + 1, right));
	return ans;
}

int solve() {
	n = Lin(), k = in(), A = Lin(), B = Lin();
	n = (1LL << n);
	for (int i = 1; i <= k; i++) {
		a[i] = Lin();
	}
	sort(a + 1, a + k + 1);
	printf("%lld\n", call(1, n));
	return 0;
}

int main() {
	int test = 1, tc = 0;
	//scanf("%d", &test);
	while (test--) {
		//printf("Case %d: ", ++tc);
		solve();
	}
	return 0;
}