#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <algorithm>
#include <cmath>
#include <locale>
#include <random>
#include <cassert>
#include <sstream>
using namespace std;
#define F first
#define S second
#define pb push_back
#define MP make_pair
#define ALL(x) begin(x), end(x)
#define SZ(x) (int)(x).size()
#define rep(i, n) for(int i = 0; i < n; ++i)
#define rep1(i, a, b) for(int i = a; i < b; ++i)
#define per1(i, a, b) for(int i = a; i >= b; --i)
#define IOS ios_base::sync_with_stdio(0); cin.tie(0)
#define ln(i, n) " \n"[i == n]
typedef long long LL;
typedef long double LDB;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
//////////////////////
const long double eps = 1e-13;
const long double PI = acos(-1);
const int INF = (int)1e9;
const LL  INFF = (LL)1e18;
const int mod = 998244353;
const int MXN = (int)4e2 + 7;
inline LL add(LL v1, LL v2){
	v1 += v2;
	if (v1 >= mod) v1 -= mod;
	if (v1 < 0) v1 += mod;
	return v1;
};
int a[MXN];
vector<PII> qy[MXN][MXN];
int dp[MXN][MXN][2];
int main(){
	int n, m; scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; i++) 
		scanf("%d", a + i);
	LL ans = 0;
	while (m--) {
		int l, r, c, t; 
		scanf("%d %d %d %d", &l, &r, &c, &t);
		t = min(t, r-l-1);
		qy[t][l].pb(MP(r, c));
	}
	int p1 = 0, p2 = 1;
	for (int i = 1; i < n; i++) {
		for (int j = i + 1; j <= n; j++)
			dp[i][j][0] = a[j] - a[i];
		for (PII x : qy[0][i]) {
			ans = max(ans, dp[i][x.F][0]*1ll*x.S);
		}
	}
	for (int i = 1; i < n; i++, swap(p1, p2)) {
		for (int l = 1; l < n; l++) {
			int p = l+i;
			for (int r = l+i+1; r <= n; r++) {
				while (max(dp[l][p][p1], a[r]-a[p]) >= max(dp[l][p+1][p1], a[r]-a[p+1])) p++;
				dp[l][r][p2] = max(dp[l][p][p1], a[r] - a[p]);
			}
			for (PII x : qy[i][l]) {
				ans = max(ans, dp[l][x.F][p2]*1ll*x.S);
			}
		}
	}
	printf("%lld\n", ans);
	return 0;
}
