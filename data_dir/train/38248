#include <iostream>
#include <stack>
#include <cmath>
#include <vector>
#include <map>
#include <string>
#include <algorithm>
#include <cstdlib>
#include <cstdio>
#include <set>
#include <queue>
#include <functional>
#include <ctime>

using namespace std;
#define double long double
typedef long long ll;
typedef unsigned long long ull;

const int mod7 = 1000000007;
typedef pair<ll,ll> pr;

#define NAME "monsters"




int main()
{
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen(NAME".in", "r" ,stdin); freopen(NAME".out","w",stdout);
    //ios::sync_with_stdio(false);

    int m;
    cin >> m;
    vector<pr> data;
    vector< pair<int,string> > data2;
    for(int i=0;i<m;++i)
    {
        int a;
        cin >> a;
        if(a)
        {
            data.push_back( make_pair(a,i) );
        }
        else
        {
            sort(data.begin(),data.end(),greater< pr > () );
            if(data.size()==0)
            {
                cout << "0" << endl;
            }
            else if(data.size()==1)
            {
                data2.push_back( make_pair(data[0].second,"pushStack") );
                
                sort(data2.begin(),data2.end());
                for(int j=0;j<data2.size();++j)
                cout << data2[j].second << endl;
                cout << "1 popStack" << endl;
            }
            else if(data.size()==2)
            {
                data2.push_back( make_pair(data[0].second,"pushStack") );
                data2.push_back( make_pair(data[1].second,"pushQueue") );
                
                sort(data2.begin(),data2.end());
                for(int j=0;j<data2.size();++j)
                cout << data2[j].second << endl;
                cout << "2 popStack popQueue" << endl;
            }
            else 
            {
                data2.push_back( make_pair(data[0].second,"pushStack") );
                data2.push_back( make_pair(data[1].second,"pushQueue") );
                data2.push_back( make_pair(data[2].second,"pushFront") );
                for(int j=3;j<data.size();++j)
                    data2.push_back( make_pair(data[j].second,"pushBack"));
                
                sort(data2.begin(),data2.end());
                for(int j=0;j<data2.size();++j)
                cout << data2[j].second << endl;
                cout << "3 popStack popQueue popFront" << endl;
            }
            data.clear();
            data2.clear();
        }
    }
for(int i=0;i<data.size();++i)
cout << "pushStack" << endl;
    return 0;
}