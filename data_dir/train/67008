#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
typedef vector<int> VI;
typedef unsigned long long ULL;

#define MP make_pair
#define PB push_back
#define FOR(i, a, b) for (int i = (a); i<(b); ++i)
#define RFOR(i, b, a) for (int i = (b)-1; i>=(a); --i)
#define ALL(a) a.begin(), a.end()
#define SZ(a) (int)a.size()
#define f first
#define s second
#define FILL(a, b) memset(a, b, sizeof(a))

const int MAX = 400*1000+5;
const int INF = 1000*1000*1000 + 7;
const LL LINF = 1LL*INF*INF;
const int MOD = INF;
const double PI = acos(-1.);
const int MAXN = 100007;

mt19937 rnd(time(0));

LL gcd(LL a, LL b)
{
    if (a < b)
    {
        swap(a, b);
    }
    while(b)
    {
        a %= b;
        swap(a, b);
    }
    return a;
}

VI x[26];

void solve()
{
	string s, t;
	cin >> s >> t;
	VI was(26);
	FOR(i, 0, 26)
	{
		x[i].clear();
	}
	FOR(i, 0, SZ(s))
	{
		was[s[i] - 'a'] = 1;
		x[s[i] - 'a'].PB(i);
	}
	FOR(i, 0, SZ(t))
	{
		if (!was[t[i] - 'a'])
		{
			cout << "-1\n";
			return;
		}
	}

	int j = 0;
	int pos = -1;
	int ch = t[j] - 'a';
	int ans = 0;
	while(j < SZ(t))
	{
		ch = t[j] - 'a';
		int p = lower_bound(ALL(x[ch]), pos + 1) - x[ch].begin();
		if (p >= SZ(x[ch]))
		{
			++ans;
			pos = -1;
			continue;
		}
		pos = x[ch][p];
		++j;
	}
	cout << ans + 1 << "\n";
}

int main()
{
	ios_base::sync_with_stdio(0);
	int t;
	cin >> t;
	while(t--)
	{	
		solve();
	}

	return 0;	
}
	
	






