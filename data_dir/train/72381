#include <iostream>
#include <fstream>
#include <algorithm>
#include <random>
#include <ctime>
#include <bitset>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <cmath>
#include <cstring>
#define ld long double
#define ull unsigned long long
#define ll long long
#define pb push_back
#define pii pair<int, int>
using namespace std;
ll gcd(ll a, ll b) { return !a ? b : gcd(b % a, a); }
ll lg(ll a, ll b) { return floor(log(a) / log(b)); }
ll pw(ll a, ll b) { return b > 0 ? a * pw(a, b - 1) : 1; }
int sqr(int x) { return x * x; }
//ifstream fin("input.txt");
//ofstream fout("output.txt");
int a[101];
vector<int> b[101], tmp[101], q;

int main()
{
    ios_base::sync_with_stdio(0);
    int n, m, i, j, s, st, x, y;
    cin >> n >> m;
    for (i = 0; i < m; i++)
    {
        cin >> x >> y;
        b[x].pb(y);
    }
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= n; j++) tmp[j] = b[j];
        s = 0, st = i;
        while (1)
        {
            if (q.empty())
            {
                bool t = 0;
                for (j = 1; j <= n; j++)
                {
                    if (!tmp[j].empty())
                    {
                        t = 1;
                        break;
                    }
                }
                if (!t) break;
            }
            for (j = 0; j < q.size(); j++)
                if (q[j] == st) q.erase(q.begin() + j), j--;
            if (!tmp[st].empty())
            {
                int ind, sm, msm = 0;
                for (j = 0; j < tmp[st].size(); j++)
                {
                    if (tmp[st][j] > st) sm = tmp[st][j] - st;
                    else sm = n + tmp[st][j] - st;
                    if (sm > msm) msm = sm, ind = j;
                }
                q.pb(tmp[st][ind]);
                tmp[st].erase(tmp[st].begin() + ind);
            }
            st < n ? st++ : st = 1;
            s++;
        }
        a[i] = s - 1;
    }
    for (i = 1; i <= n; i++)
        cout << a[i] << ' ';
    return 0;
}