#define _CRT_SECURE_NO_WARNINGS

#include <iostream>
#include <cstdio>
#include <string>
#include <stdlib.h>
#include <set>
#include <vector>
#include <list>
#include <algorithm>
#include <regex>
#include <math.h>
#include <map>
#include <iterator>
#include <climits>
#include <numeric>
#include <bitset>
#include <unordered_map>
#include <unordered_set>
#include <iomanip>
#include <queue>
#include <deque>
#include <stack>
#include <array>
#include <valarray>
#include <complex>
#include <random>

using namespace std;

typedef array<int, 2> hv;
typedef int integer;
#define int long long
#define double long double
#define make(type, x) type x; cin>>x
#define make2(type, x, y) type x, y; cin>>x>>y
#define make3(type, x, y, z) type x, y, z; cin>>x>>y>>z
#define make4(type, x, y, z, q) type x, y, z, q; cin>>x>>y>>z>>q
#define ALL(x) (x).begin(), (x).end()
#define FORIT(p) for(auto it = p.begin(); it != p.end(); it++)
#define FOR(b) for(int i = 0; i <(b); i++)
#define VI vector<int>
#define VVI vector<vector<int>>
#define PII pair<int, int>
#define PPII pair<PII, int>
#define M7 1000000007l
#define M9 1000000009l
#define make_v(a, n) VI a(n); FOR(n) cin >> a[i];
#define get_bit(mask, pos) ((mask >> pos) & 1)
#define set_bit_0(mask, pos) (mask & (~(1 << pos)))
#define set_bit_1(mask, pos) (mask | (1 << pos))

VI x, y;

bool checkLine(int x0, int y0, int x1, int y1, int x2, int y2) {
	int vx1 = x1 - x0;
	int vy1 = y1 - y0;
	int vx2 = x2 - x0;
	int vy2 = y2 - y0;
	return (vx1*vy2 - vy1 * vx2) == 0;
}


bool checkLine(VI& index) {
	if (index.size() < 3) return true;
	bool ok = true;
	for (int i : index) {
		ok = ok && checkLine(x[index[0]], y[index[0]], x[index[1]], y[index[1]], x[i], y[i]);
	}
	return ok;
}

void Solve() {
	make(int, n);
	x = y = VI(n);
	FOR(n) cin >> x[i] >> y[i];
	if (n < 5) return void(cout << "YES");
	VI secondLine;

	secondLine.clear();
	FOR(n) {
		if (!checkLine(x[0], y[0], x[1], y[1], x[i], y[i])) 
			secondLine.push_back(i);
	}
	if (checkLine(secondLine)) return void(cout << "YES");

	secondLine.clear();
	FOR(n) {
		if (!checkLine(x[0], y[0], x[2], y[2], x[i], y[i]))
			secondLine.push_back(i);
	}
	if (checkLine(secondLine)) return void(cout << "YES");

	secondLine.clear();
	FOR(n) {
		if (!checkLine(x[1], y[1], x[2], y[2], x[i], y[i]))
			secondLine.push_back(i);
	}
	if (checkLine(secondLine)) return void(cout << "YES");

	cout << "NO";

}


integer main() {
	ios_base::sync_with_stdio(0);
	cin.tie();
#if  _DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	Solve();
	while (!cin.eof()) {
		string s = "_";
		do getline(cin, s);
		while (!cin.eof() && !s.empty());
		if (cin.eof()) return 0;
		FOR(2) cout << endl;
		Solve();
	}
#else
	Solve();
#endif
	return 0;
}