#include<bits/stdc++.h>
using namespace std;
const int MAX=1009;
int d[MAX],n,m,a,b;
bool mark[MAX],mark2[MAX],flag;
vector<int> g[MAX],g2[MAX];
vector<pair<int,int> > edge;
void dfs (int v){mark[v]=true; for (auto u:g[v]) if (!mark[u]) dfs(u);}
void dfs2(int v){mark2[v]=true;for (auto u:g2[v])if(!mark2[u])dfs2(u);}
int main()
{
	cin>>n>>m;
	for (int i=0;i<m;i++) cin>>a>>b,a--,b--,edge.push_back({a,b}),g[a].push_back(b),g2[b].push_back(a);
	dfs(0),dfs2(n-1);
	for (int j=0;j<n;j++)
		for (auto i:edge)
			if (mark[i.first] && mark2[i.second])
			{
				if (d[i.second]>d[i.first]+2)
				{
					if (j==n-1) flag=true;
					d[i.second]=d[i.first]+2;
				}
				if (d[i.first]>d[i.second]-1)
				{
					if (j==n-1) flag=true;
					d[i.first]=d[i.second]-1;
				}
			}
	if (flag) cout<<"No";
	else {cout<<"Yes\n"; for (auto i:edge) if (mark[i.first] && mark2[i.second]) cout<<d[i.second]-d[i.first]<<'\n'; else cout<<1<<'\n';}
}
