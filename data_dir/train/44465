//raja1999

#pragma comment(linker, "/stack:200000000")
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,avx,avx2")

#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string> 
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
//setbase - cout << setbase (16)a; cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 <<endl;prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
using namespace __gnu_pbds;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >
//#define int ll

typedef tree<
int,
null_type,
less<int>,
rb_tree_tag,
tree_order_statistics_node_update>
ordered_set;
#define int ll
//std::ios::sync_with_stdio(false);
map<pii,int>mapi;
map<pii,int>::iterator it;
int x[1005],y[1005];
vector<set<int> > se(500005);
vector<set<pii> > lol(500005);
main(){
	std::ios::sync_with_stdio(false); cin.tie(NULL);
	int n,ans=0,tot=0,i,j,val,num,den,c,k,gg,gg1,val1;
	cin>>n;
	rep(i,n){
		cin>>x[i]>>y[i];
	}
	rep(i,n){
		f(j,i+1,n){
			num=y[j]-y[i];
			den=x[j]-x[i];
			val=__gcd(abs(num),abs(den));
			num/=val;
			den/=val;
			if(den<0){
				num*=-1;
				den*=-1;
			}
			if(den==0){
				num=1;				
			}
			if(num==0){
				den=1;
			}
			mapi[mp(den,num)]=1;
		}
	}
	c=0;
	for(it=mapi.begin();it!=mapi.end();it++){
		it->ss=c++;
	}
	//cout<<c<<endl;
	rep(i,n){
		f(j,i+1,n){
			num=y[j]-y[i];
			den=x[j]-x[i];
			val=__gcd(abs(num),abs(den));
			num/=val;
			den/=val;
			if(den<0){
				num*=-1;
				den*=-1;
			}
			if(den==0){
				num=1;				
			}
			if(num==0){
				den=1;
			}
			val1=mapi[mp(den,num)];
			if(den==0){
				if(se[val1].find(x[i])==se[val1].end()){
					se[val1].insert(x[i]);
				}
			}
			else if(num==0){
				if(se[val1].find(y[i])==se[val1].end()){
					se[val1].insert(y[i]);
				}
			}
			else{
				gg=num*(100000-x[i]);
				gg+=den*y[i];
				gg1=den;
				val=__gcd(abs(gg),abs(gg1));
				gg/=val;
				gg1/=val;
				if(gg==0){
					gg1=1;
				}
				if(lol[val1].find(mp(gg,gg1))==lol[val1].end()){
					lol[val1].insert(mp(gg,gg1));
				}
			}
		}
	}
	for(it=mapi.begin();it!=mapi.end();it++){
		tot+=se[it->ss].size()+lol[it->ss].size();
	}
	for(it=mapi.begin();it!=mapi.end();it++){
		gg=se[it->ss].size()+lol[it->ss].size();
		val=gg*(tot-gg);
		ans+=val;
	}
	ans/=2LL;
	cout<<ans<<endl;
	
	return 0;
} 
	