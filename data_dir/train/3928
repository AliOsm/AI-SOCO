#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <cstdio>
#include <map>
#include <hash_map>
#include <string>
#include <iomanip>
#include <vector>
#include <memory.h>
#include <queue>
#include <set>
#include <stack>
#include <algorithm>
#include <math.h>
#include <sstream>
#include <functional>
#include <bitset>
#pragma comment (linker, "/STACK:167177216")
using namespace std;
#define mems(A, val) memset(A, val, sizeof(A))
#define mp(a, b) make_pair(a, b)
#define all(B) (B).begin(), (B).end()
#define forn(it, from, to) for(int it = from; it < to; ++it)
#define forit (it, coll) for(auto it = coll.begin(); it != coll.end(); ++it)
const int MAX = 2147483647;
const int MAXN = 220;
typedef long long LL;
const LL MOD = 1000000000 + 7;



int main()
{
#ifdef _DEBUG
    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#else
    //freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
    //freopen("m3.in", "r", stdin); freopen("m3.out", "w", stdout);
#endif
    string s;
    cin >> s;
    int oddA = 0, oddB = 0, evenA = 0, evenB = 0;

    LL ansOdd = 0, ansEven = 0;
    for (int i = 0; i < s.size(); ++i)
    {
        ansOdd++;
        if (s[i] == 'a')
        {
            if (i % 2 == 0)
            {
                ansOdd += evenA;
                ansEven += oddA;
                evenA++;
            }
            else
            {
                ansOdd += oddA;
                ansEven += evenA;
                oddA++;
            }
        }
        else
        {
            if (i % 2 == 0)
            {
                ansOdd += evenB;
                ansEven += oddB;
                evenB++;
            }
            else
            {
                ansOdd += oddB;
                ansEven += evenB;
                oddB++;
            }
        }
    }
    cout << ansEven << " " << ansOdd;
    return 0;
}