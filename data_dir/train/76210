#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	const ll oo = 1e16 + 50;
	
	int t;
	cin >> t;
	
	while(t--){
		int n;
		ll k;
		cin >> n >> k;
		
		vector<ll> v(n);
		for(int i = 0; i < n; i++)
			cin >> v[i];
			
		vector<ll> pows;
		
		pows.push_back(1ll);
		
		ll cur = 1;
		while(cur * k <= oo){
			pows.push_back(cur * k);
			cur *= k;
		}
		
		map<ll, ll> cnt;
		
		
		for(int i = 0; i < n; i++){
			for(int j = pows.size() - 1; j >= 0; j--){
				ll x = pows[j];
				if(v[i] >= x){
					v[i] -= x;
					cnt[x]++;
				}
			}
		}
		
		bool ok = true;
		for(int i = 0; i < n; i++)
			if(v[i] > 0)
				ok = false;
		
		for(auto &el : cnt)
			if(el.second > 1)
				ok = false;
		
		cout << (ok ? "YES" : "NO") << endl;
		
		
	}

	return 0;
}
