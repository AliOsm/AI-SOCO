// KALAM
#include<bits/stdc++.h>

using namespace std;
typedef long long ll;
typedef long double ld;
const int N = 1e6 + 77;
const int MOD = 1e9 + 7;
const ll oo = 2e18;
int n,m,p[N],x,y,res[N];
vector < int > a[N],V,d;
bool mark[N];
void dfs(int v){
	mark[v] = true;
	V.push_back(v);
	d.push_back(p[v]);
	for(int u : a[v]){
		if(mark[u])continue;
		dfs(u);
	}
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i = 1;i <= n;i++){
		scanf("%d",p + i);
	}
	for(int i = 1;i <= m;i++){
		scanf("%d%d",&x,&y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	for(int i = 1;i <= n;i++){
		if(mark[i])continue;
		d.clear();V.clear();
		dfs(i);
		sort(d.begin(),d.end());reverse(d.begin(),d.end());
		sort(V.begin(),V.end());
		for(int j = 0;j < V.size();j++){
			res[V[j]] = d[j];
		}
	}
	for(int i = 1;i <= n;i++){
		printf("%d ",res[i]);
	}
	
	
	return 0;
}
