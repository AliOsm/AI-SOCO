#include <bits/stdc++.h>
#define ll long long int
#define mod 1000000007
#define pii pair<int, int>
#define fr(n) for (int i = 0; i < n; i++)
#define fr1(n) for (int i = 1; i <= n; i++)
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    int n, m, a[5003] = {}, b[5003] = {}, g[5003] = {}, c = 1, z = 0;
    vector<int> p = {2};
    for (int i = 3; i < 31640; i++) {
        bool y = 0;
        for (int j = 0; p[j] * p[j] <= i; j++) if (i % p[j] == 0) {y = 1; break;}
        if (!y) p.push_back(i);
    }
    cin >> n >> m;
    fr1(n) cin >> a[i];
    fr(m) cin >> b[i];
    fr1(n) {
        g[i] = __gcd(a[i], g[i - 1]);
        int h = a[i];
        for (int j : p) if (h % j == 0) {
            if (binary_search(b, b + m, j)) {
                while (h % j == 0) h /= j, z--;
            } else {
                while (h % j == 0) h /= j, z++;
            }
        }
        if (h > 1) {
            if (binary_search(b, b + m, h)) z--;
            else z++;
        }
    }
    for (int i = n; i; i--) {
        if (g[i] == c) continue;
        g[i] /= c;
        int g0 = g[i], x = 0;
        for (int j : p) if (g[i] % j == 0) {
            if (binary_search(b, b + m, j)) while (g[i] % j == 0) g[i] /= j, x++;
            else while (g[i] % j == 0) g[i] /= j, x--;
        }
        if (g[i] > 1) {
            if (binary_search(b, b + m, g[i])) x++;
            else x--;
        }
        if (x > 0) z += x * i, c *= g0;
    }
    cout << z;
}
