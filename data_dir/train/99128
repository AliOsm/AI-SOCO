
#include<bits/stdc++.h>
using namespace std;
/**
******************* Author:Bisnu sarkar ****************************
**/
/*
#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")
*/
#define fRead(x)       freopen(x,"r",stdin)
#define fWrite(x)      freopen (x,"w",stdout)
#define ull            unsigned long long
#define ll             long long
#define pii            pair<int,int>
#define sit            set<int> :: iterator
#define vrit           vector<int> :: reverse iterator
#define ff             first
#define ss             second
#define endl           '\n';
#define sz(s)          (int)s.size()
#define all(s)         s.begin(),s.end()
#define IO             ios_base::sync_with_stdio(false),cin.tie(NULL);  
#define what_is(x)     cerr << #x << " is " << x << endl;
///*....Debugger....*///
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }
void err(istream_iterator<string> it) {cout << endl;}
template<typename T, typename... Args> void err(istream_iterator<string> it, T a, Args... args) {
  cerr << *it << " = " << a << ", ";
  err(++it, args...);
}
///*....Input....*///
template <typename T> inline void Int(T &n) {
  n = 0; int f = 1; register int ch = getchar();
  for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;
  for (; isdigit(ch); ch = getchar()) n = (n << 3) + (n << 1) + ch - '0';
  n = n * f;
}
 
template <typename T, typename TT> inline void Int(T &n, TT &m) { Int(n); Int(m); }
template <typename T, typename TT, typename TTT> inline void Int(T &n, TT &m, TTT &l) { Int(n, m); Int(l);}
double ind(){double x; scanf("%lf",&x);return x;}

///*....Bitmask....*///
int set_1(int n,int pos){return n = (n | (1<<pos));}
int reset_0(int n,int pos){return n= n & ~(1<<pos);}
bool check_bit(int n,int pos){return n = n & (1<<pos);}

int dx[8]= {1,0,-1,0,-1,-1,1,1};
int dy[8]= {0,1,0,-1,-1,1,-1,1};

///*....Constraints....*///
const int N = (int) 2e3 + 5;
const int M = (int) 1e9 + 7;
const double pi=2* acos(0.0);
const double eps=1e-9;

ll a[N][N];
ll main_dia[2*N],sub_dia[2*N];

int main()
{
    int n;
    Int(n);

    for(int i=1;i<=n;++i){
    	for(int j=1;j<=n;++j){
    		Int(a[i][j]);	
    		main_dia[i-j+n]+=a[i][j];
    		sub_dia[i+j]+=a[i][j];
    	}
    }
	
    ll even_best=0ll,odd_best=0ll;
    int ex,ey,ox,oy;
    for(int i=1;i<=n;++i){
    	for(int j=1;j<=n;++j){
    		ll s = main_dia[i-j+n]+sub_dia[i+j]-a[i][j];
    		if((i+j) %2 == 0){
    			if(s >= even_best){
    				ex=i,ey=j;
    				even_best=s;
    			} 
    		}
    		else{
    			if(s >= odd_best){
    				ox=i,oy=j;
    				odd_best=s;
    			} 
    		}
    	}
    }
    printf("%lld\n", even_best+odd_best);

    printf("%d %d %d %d\n", ex,ey,ox,oy);

    return 0;
}




