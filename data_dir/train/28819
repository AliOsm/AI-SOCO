#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ff first
#define ss second

typedef long long int ll;
typedef vector< pair<int, int> > vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long int> vll;
typedef pair<int, int> pii;

const ll INF = 1e18;
const int inf = 1e9;
const int MOD = 1e9 + 7;
const int nax = 1000000 + 10;

ll p, x , y;

bool present(ll s)
{
    /*
i := (s div 50) mod 475
repeat 25 times:
    i := (i * 96 + 42) mod 475
    print (26 + i)
    */

    ll cur = (s / 50);
    cur %= 475;

    for(int i = 1; i <= 25; i++)
        {
            cur = (cur * 96 + 42) % 475;
            if(26 + cur == p)
                return true;
        }
        return false;
}
int main()
{
    ios::sync_with_stdio(0);
    cin >> p >> x >> y;

    ll x1 = x;
    while(x >= y)
    {
        if(present(x) == true)
        {
            cout << 0;
            return 0;
        }
        x -= 50;
    }

    x = x1 - 50;

     while(x >= y)
    {
        if(present(x) == true)
        {
            cout << 0;
            return 0;
        }
        x -= 50;
    }

    ll cnt1 = 0;

    x = x1;

    while(x < y)
        {
            x += 100;
            cnt1++;
        }

        ll ans1, ans2;

        int iter = 0;
    while(1)
    {
        iter ++;
        if(present(x) == true)
        {
            ans1 = cnt1;
            break;
        }

        if(iter > 1e5)
        {
            ans1 = inf;
            break;
        }
        cnt1++;
        x += 100;
    }
    ll cnt2 = 0;

    x = x1 - 50;
    while(x < y)
        {
            x += 100;
            cnt2++;
        }

    iter = 0;
    while(1)
    {
        iter ++;
        if(present(x) == true)
        {
            ans1 = cnt2;
            break;
        }

        if(iter > 1e5)
        {
            ans1 = inf;
            break;
        }
        cnt2++;
        x += 100;
    }

    cout << min(cnt1, cnt2);
    return 0;
}
