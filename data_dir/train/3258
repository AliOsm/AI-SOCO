#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#pragma GCC optimize("unroll-loops")

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define ll long long int
#define pb push_back
#define mp make_pair
#define ld long double
#define sz(a) (ll)(a).size()
#define endl "\n"

typedef tree<pair<ll,ll> ,null_type,less<pair<ll,ll> >,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
//K-th smallest
//cout << k << "kth smallest: " << *A.find_by_order(k-1) << endl;
//NO OF ELEMENTS < X
//cout << "No of elements less than " << X << " are " << A.order_of_key(X) << endl;

const int MAXN = 5005;

ll n, ans, a[MAXN];
ll rec(ll l, ll r, ll x)
{
	if(l > r) return 0;
	ll minx = 1e18, ans = 0;
	for(int i=l;i<=r;i++) minx = min(minx, a[i]);
	ll ind = l;
	while(ind <= r)
	{
		while(ind <= r && a[ind] == minx) ind++;
		if(ind > r) break;
		ll ind2 = ind;
		while(ind <= r && a[ind] > minx) ind++;
		ans += rec(ind2, ind - 1, minx);
	}
	return min(r - l + 1, ans + minx - x);
}

int main()
{
	std::ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for(int i=0;i<n;i++) cin >> a[i];
    cout << rec(0, n - 1, 0) << endl;	
    return 0;
}