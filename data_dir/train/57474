/*input
10 4
5 4 1 5 4 3 7 1 2 5
4 6
2 1
10 8
3 5
*/
#include <bits/stdc++.h>
using namespace std;
int ind[200005],n,k;
pair<int,int> a[200005];
vector<int> v[200005];
template <typename T>
class SegmentTree{
	vector<T> segtree;
	public:
	SegmentTree(int size){
		segtree.resize(4*size,0);
	}
	void update(int u, int a, int b, int i, int j, T x){
		if(j<a || i>b || a>b) return;
		if(j>=b && i<=a){
			segtree[u]=x;
			return;
		}
		update(u*2,a,(a+b)/2,i,j,x); update(u*2+1,(a+b)/2+1,b,i,j,x);
		segtree[u]=segtree[u*2]+segtree[u*2+1];
	}
	void update(int i, T x){
		update(1, 0, segtree.size()/4-1, i, i, x);
	}
	void update(int i, int j, T x){
		update(1, 0, segtree.size()/4-1, i, j, x);
	}
	T query(int u, int a, int b, int i, int j){
		if(j<a || i>b || a>b) return 0;
		if(j>=b && i<=a) return segtree[u];
		return query(u*2,a,(a+b)/2,i,j)+query(u*2+1,1+(a+b)/2,b,i,j);
	}
	T query(int i, int j){
		return query(1,0,segtree.size()/4-1,i,j);
	}
};
int main(){
	#ifdef ONLINE_JUDGE
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	#endif
	cin>>n>>k;
	for(int i=1;i<=n;++i){
		cin>>a[i].first;
		a[i].second = i;
	}
	sort(a+1,a+n+1);
	for(int i=1;i<=n;++i)
		ind[a[i].second] = i;
	for(int x,y;k--;){
		cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	SegmentTree<int> seg(n+5);
	for(int i=1;i<=n;++i)
		seg.update(i,1);
	for(int u=1;u<=n;++u){
		for(auto i:v[u]) seg.update(ind[i],0);
		int low = 0, high = n, mid;
		while(low<high){
			mid = low+high+1>>1;
			if(a[mid].first<a[ind[u]].first) low = mid;
			else high = mid-1;
		}
		cout<<seg.query(0,low)<<' ';
		for(auto i:v[u]) seg.update(ind[i],1);
	}
}