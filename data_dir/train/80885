#include <bits/stdc++.h>
#define endl '\n'

#define int long long

using namespace std;
const int MAXN = (1 << 20);

int n, p, k;
vector<int> G[MAXN];

void read()
{
	cin >> n >> k >> p;
	for(int i = 0; i < n - 1; i++)
	{
		int u, v;
		cin >> u >> v;
		G[u].push_back(v);
		G[v].push_back(u);
	}
}

vector<int> li;

void dfs(int u, int pr, int d)
{
	li.push_back(d);
	for(int v: G[u])
		if(v != pr)
			dfs(v, u, d + 1);
}

int l, r, ret, ans, sum;

void add() 
{
	sum += li[r];
	ret = li[r] * (r - l + 1) - sum;
}

void del()
{
	if(l == r) 
	{
		ret = 0;
		sum = 0;
		return;
	}
	
	sum -= li[l];
	ret = li[r] * (r - l) - sum;
}

bool check() { return (r - l + 1) <= k && ret <= p; }

void solve()
{
	dfs(1, -1, 0);
	sort(li.begin(), li.end());

	ret = 0; ans = (k >= 1); sum = 0;
	for(l = 1, r = 1; r < n; r++)
	{
		add();
		while(l <= r && !check()) del(), l++;
		ans = max(ans, r - l + 1);
	}

	cout << ans << endl;
}

#undef int
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	read();
	solve();
	return 0;
}

