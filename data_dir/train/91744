#include <bits/stdc++.h>
using namespace std;

int N, M, K, Q, ANS = 1e9 + 5, S[505][505], X[505][505];
vector<int> T;

bool broken(int t) {
    for (int i = 1; i <= N; i++)
        for (int j = 1; j <= M; j++)
            X[i][j] = (S[i][j] != -1 && S[i][j] <= t) + X[i][j - 1] + X[i - 1][j] - X[i - 1][j - 1];

    for (int i = K; i <= N; i++)
        for (int j = K; j <= M; j++)
            if (X[i][j] - X[i - K][j] - X[i][j - K] + X[i - K][j - K] == K * K)
                return true;

    return false;
}


int main() {
    memset(S, -1, sizeof(S));

    scanf("%d %d %d %d", &N, &M, &K, &Q);

    for (int i = 0, x, y, t; i < Q; i++) {
        scanf("%d %d %d", &x, &y, &t);
        S[x][y] = t;
        T.push_back(t);
    }

    sort(T.begin(), T.end());

    int lo = 0, hi = T.size() - 1, mi;

    while (lo <= hi) {
        mi = (lo + hi) / 2;

        if (broken(T[mi])) {
            ANS = min(ANS, T[mi]);
            hi = mi - 1;
        } else {
            lo = mi + 1;
        }
    }

    printf("%d\n", ANS <= 1e9 ? ANS : -1);
}
