#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <sstream>
#include <cassert>
#include <queue>
#include <bitset>
#include <ctime>
#include <random>
#include <chrono>
using namespace std;
#define forr(i, a, b) for(int i = (a); i < (int) (b); i++)
#define forn(i, n) forr(i, 0, n)
#define db(v) cerr << #v << " = " << v << endl
#define pb push_back
#define sz(x) ((int)x.size())
#define fst first
#define snd second
typedef long long ll;
typedef pair<int, int> ii;
const int MAXN = 200050;
const int MOD = 998244353;

int n, m, A, B[MAXN];

int add(int a, int b){
  a += b;
  if(a >= MOD)
    a -= MOD;
  return a;
}

int mul(int a, int b){
  return a * 1LL * b % MOD;
}

int expmod(int b, ll e){
  if(!e) return 1;
  if(e&1) return mul(b, expmod(b, e-1));
  int k = expmod(b, e/2);
  return mul(k, k);
}

int inv(int x){
  return expmod(x, MOD-2);
}

int main(){
  while(scanf("%d %d %d", &n, &m, &A) >= 1){
    forn(i, m) scanf("%d", &B[i]);
    int ans = expmod(A, n - 2*B[m-1]);
    for(int i = m-1; i >= 1; i--) B[i] -= B[i-1];
    forn(i, m){
      int cnt = expmod(A, B[i]);
      cnt = add(mul(mul(cnt, cnt-1), inv(2)), cnt);
      ans = mul(ans, cnt);
    }
    printf("%d\n", ans);
  }
  return 0;
}
