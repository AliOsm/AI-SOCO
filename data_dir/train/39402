#include <bits/stdc++.h>

using namespace std;

const int N = 200010;
const int inf = (int) 1e9;

int a[N];
int f[N];
vector<int> g[N];  

void dfs(int v, int pv) {
  f[v] = (a[v] == 1 ? 1 : -1);
  for (int to : g[v]) {
    if (to == pv) {
      continue;
    }
    dfs(to, v);
    f[v] += max(0, f[to]);
  }
}

void dfs_reroot(int v, int pv) {
  for (int to : g[v]) {
    if (to == pv) {
      continue;
    }
    f[to] = f[to] + max(0, f[v] - max(0, f[to]));
    dfs_reroot(to, v);
  }  
}

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int n;
  cin >> n;
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  for (int i = 0; i + 1 < n; i++) {
    int a, b;
    cin >> a >> b;
    a--; b--;
    g[a].push_back(b);
    g[b].push_back(a);
  }
  dfs(0, -1);
  dfs_reroot(0, -1);
  for (int i = 0; i < n; i++) {
    cout << f[i] << ' ';
  }
  cout << '\n';
  return 0;
}