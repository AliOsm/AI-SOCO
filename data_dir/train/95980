#include <bits/stdc++.h>
using namespace std;

int n, ans = 0;
vector<int> t;

void update(int v, int tl, int tr, int pos, int val)
{
	if(tl == tr)
	{
		t[v] = val;
	} else
	{
		int tm = (tl + tr) / 2;
		if(pos <= tm)
		{
			update(2 * v + 1, tl, tm, pos, val);
		} else
		{
			update(2 * v + 2, tm + 1, tr, pos, val);
		}

		t[v] = max(t[2 * v + 1], t[2 * v + 2]);
	}
}

int get(int v, int tl, int tr, int l, int r)
{
	if(l > r)
	{
		return 0;
	} else if(tl == l && tr == r)
	{
		return t[v];
	} else
	{
		int tm = (tl + tr) / 2;
		return max(get(2 * v + 1, tl, tm, l, min(tm, r)), get(2 * v + 2, tm + 1, tr, max(tm + 1, l), r));
	}
}

int main (int argc, char *argv[])
{
	scanf("%d", &n);
	t.resize(4 * n + 4, 0);
	for(int i = 1; i <= n; ++i)
	{
		int a;
		scanf("%d", &a);
		int cur_ans = get(0, 0, n, 0, a);
		ans = max(ans, cur_ans + 1);
		update(0, 0, n, a, cur_ans + 1);
	}
	printf("%d", ans);

	return 0;
}

