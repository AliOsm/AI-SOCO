#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define endl '\n'
#define Endl '\n'
#define fi first
#define ii pair<ll,ll>
#define iii pair<int, ii>
#define se second
#define ld long double
#define mod 1000000007
#define popcount __builtin_popcountll
#define x0 zxcxzcsacasd
#define x1 ghfghujfgfg
#define y0 olkjhdnncvcv
#define y1 bhvgrewm345345435
using namespace std;

struct trie{
    trie *zero, *one;
    trie(){
        zero = NULL;
        one = NULL;
    }
}*root = new trie();
int n, a[300010], m;
void add(string s){
    trie *cur = root;
    for(int i=0;i<20;i++){
        if(s[i]=='0'){
            if(cur->zero==NULL)cur->zero = new trie();
            cur = cur->zero;
            continue;
        }
        if(cur->one==NULL)cur->one = new trie();
        cur = cur->one;
    }
}
int cnt[33];
void add(int x){
    for(int i=0;i<19;i++){
        cnt[18-i] += x%2;
        x/=2;
        cnt[18-i]%=2;
    }
}
int get(){
    trie *cur = root;
    int ret = 0;
    for(int i=0;i<19;i++){
        if(cnt[i]==0){  // zero - one
            if(cur->zero!=NULL){
                ret*=2;
                cur = cur->zero;
                continue;
            }
            ret= ret * 2 + 1;
            cur = cur->one;
            continue;
        }

        if(cur->one!=NULL){
            ret*=2;
            cur = cur->one;
            continue;
        }
        ret = ret * 2 + 1;
        cur = cur->zero;
    }
    return ret;
}
string to_str(int x){
    string ret = "";
    while(x){
        ret+=char(x%2 + '0');
        x/=2;
    }
    reverse(ret.begin(), ret.end());
    while(ret.length()!=19)ret = "0" + ret;
    return ret;
}
bool has[1000010];
int main(){
    int n, q;
    cin>>n>>q;
    for(int i=0;i<n;i++){
        int x;
        scanf("%d", &x);
        has[x] = 1;
    }
    for(int i=0;i<(1<<19);i++){
        if(has[i])continue;
        string s = to_str(i);
        add(s);
    }
    while(q--){
        int x;
        scanf("%d", &x);
        add(x);
        printf("%d\n", get());
    }
}

