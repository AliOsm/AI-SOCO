#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#include <random>
#include <chrono>

using namespace std;
using namespace __gnu_pbds;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;
//typedef tree<int,null_type,less<int>,rb_tree_tag, tree_order_statistics_node_update> indexed_set;


int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	//mt19937 rng(5);
	//srand(time(0));
	
	const int maxn = 200 + 5;
	
	int t;
	cin >> t;
	
	while(t--){
		int n;
		cin >> n;
		
		vector<int> a(n + 1);
		vector<vector<int>> pos(maxn);
		
		int ans = 0;
		
		for(int i = 0; i < n; i++){
			cin >> a[i];
			pos[a[i]].push_back(i);
		}
		
		for(int x = 1; x < maxn; x++){
			int lo = 0, hi = (int)pos[x].size() - 1;
			while(lo <= hi){
				if(lo == hi){
					ans = max(ans, 2 * (lo + 1) - 1);
				}
				else{
					int l = pos[x][lo];
					int r = pos[x][hi];
					
					for(int y = 1; y < maxn; y++){
						if(y != x){
							
							int p1 = lower_bound(pos[y].begin(), pos[y].end(), l) - pos[y].begin();
							int p2 = upper_bound(pos[y].begin(), pos[y].end(), r) - pos[y].begin();
							ans = max(ans, 2 * (lo + 1) + p2 - p1);
						}
					}
				}
				lo++;
				hi--;
			}
		}
		
		cout << ans << endl;
	}
	
	return 0;
}
