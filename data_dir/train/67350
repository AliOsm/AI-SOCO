#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define ll long long
#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define gcd __gcd
#define lcm(a, b) (a*b)/gcd(a, b) //credit to DMK
#define pcount __builtin_popcount 
#define pcountll __builtin_popcountll
#define int ll 
#define nxtperm next_permutation
//#pragma GCC optimize ("O3")
//#pragma GCC target ("sse4.2")
const ll mod = 1000000007;
const double PI = acos(-1.);
using namespace std;
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>,rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
const int maxn = 110; 
int n, a[200000], c[maxn][maxn], dp[maxn][maxn], k; 
 
void mul(int a[][maxn], int b[][maxn])
{
	int temp[maxn][maxn]; 
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			temp[i][j] = 0; 
			for(int k=0;k<n;k++)
			{
				temp[i][j] = (temp[i][j] + (a[i][k]%mod*b[k][j]%mod)%mod)%mod; 
			}
		}
	}
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++) 
			a[i][j] = temp[i][j]; 
}
 
void binpow(int ans[][maxn], int a[][maxn], int exp)
{
	while(exp)
	{
		if(exp&1) mul(ans, a); 
		mul(a,a); 
		exp >>= 1; 
	}
}
 
signed main()
{
//	freopen("in.txt", "r", stdin); freopen("out.txt", "w", stdout);
	cin >> n >> k;
	for(int i=0;i<n;i++) cin >> a[i]; 
	if(k == 1) 
	{
		cout << n; 
		return 0; 
	}
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			c[i][j] = (pcountll(a[i]^a[j])%3 == 0?1:0); 
		}
	}
	for(int i=0;i<n;i++) dp[0][i] = 1;//(pcountll(a[i])%3 == 0 ? 1:0 ); 
	binpow(dp, c, k-1);
	int ans = 0;  
	for(int i=0;i<n;i++) ans = (ans + dp[0][i])%mod; 
	cout << ans ;
}