#include <bits/stdc++.h>

#define debug(x) cout << #x << " = " << x << endl
#define fori(i, ini, lim) for(int i = int(ini); i < int(lim); i++)
#define ford(i, ini, lim) for(int i = int(ini); i >= int(lim); i--)

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> ii;

vector<ii> points;
int n;

bool collinear(const ii &P, const ii &Q, const ii &R) {
	return (P.first * Q.second + P.second * R.first + Q.first * R.second) == (R.first * Q.second + R.second * P.first + Q.first * P.second);
}

bool ok(int a, int b) {
	vector<ii> other;

	fori(i, 0, n) {
		if(!collinear(points[a], points[b], points[i])) {
			other.push_back(points[i]);
		}
	}
	
	fori(i, 2, other.size()) {
		if(!collinear(other[0], other[1], other[i])) {
			return false;
		}
	}

	return true;
}

int main() {
	scanf("%d", &n);

	if(n <= 4) {
		puts("YES");
		return 0;
	}

	fori(i, 0, n) {
		int x, y;
		scanf("%d %d", &x, &y);
		points.emplace_back(x, y);
	}

	if(ok(0, 1) || ok(0, 2) || ok(1, 2)) {
		puts("YES");
	}
	else {
		puts("NO");
	}

	return 0;
}
