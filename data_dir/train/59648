//Be Name Khoda
//Ahay! Hormat ha hefz she baradare man ... 
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template <typename T> using ordered_multiset =  tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
typedef long long ll;
typedef long double ld;
const int MOD = (int)1e9 + 7;
const int MAXN = (int)1e4 + 7;
const int infint = (int)2e9;
const ll inf = (ll)1e18 + 7;
int a[105], b[105];
int dp2[105][2 * MAXN];
int *dp[105];
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n, k;
	cin >> n >> k;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < 105; i++)
		dp[i] = dp2[i] + MAXN;
	for (int i = 0; i < n; i++)
	{
		cin >> b[i];
		b[i] *= k;
	}
	for (int i = 0; i <= n; i++)	
		for (int j = -10000; j <= 10000; j++)
			dp[i][j] = -1;
	dp[0][0] = 0;
	for (int i = 0; i < n; i++)
		for (int j = -10000; j <= 10000; j++)
		{
			int diff = a[i] - b[i];
			dp[i + 1][j] = dp[i][j];
			if(j - diff >= -10000 and j - diff <= 10000 and dp[i][j - diff] != -1)
				dp[i + 1][j] = max(dp[i + 1][j], dp[i][j - diff] + a[i]);
		}
	if(dp[n][0] == 0)
		cout << -1;
	else
		cout << dp[n][0];
}
