// High above the clouds there is a rainbow...

#include<bits/stdc++.h>

#define F first
#define S second
#define PB push_back
#define sz(s) int((s).size())
#define bit(n,k) (((n)>>(k))&1)

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

const int maxn=1e5+10,mod=1e9+7;
const ll inf=1e18;

int x[maxn],b[maxn],n,l;
double dp[maxn];
int upd[maxn];

inline double f(int i,int j,double w){
    return sqrt( abs(x[j]-x[i]-l) ) - w*b[j];
}
bool check(double x){
    dp[0]=0;
    for(int i=1;i<=n;i++){
	upd[i]=0;
	double num= f(0,i,x);
	for(int j=1;j<i;j++){
	    double num2= dp[j] + f(j,i,x);
	    if(num>num2) num=num2, upd[i]=j;
	}
	dp[i]=num;
    }
    return dp[n]<=0;
}

int main(){
    ios_base::sync_with_stdio(false);cin.tie(0);

    cin>>n>>l;

    for(int i=1;i<=n;i++){
	cin>>x[i]>>b[i];
    }
    double l=0,r=10000;

    for(int i=0;i<100;i++){
	double mid=(l+r)/2;
	if(check(mid)) r=mid;
	else l=mid;			   
    }
    vector<int> ans;
    int tmp=n;
    while(tmp>0){
	ans.PB(tmp);
	tmp=upd[tmp];
    }
    reverse(ans.begin(), ans.end() );
    for(int x:ans){
	cout<<x<<" ";
    }
    return cout<<endl,0;
}
// Deathly mistakes:
//  * Read the problem curfully.
//  * Check maxn.
//  * Overflows.


// #pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
