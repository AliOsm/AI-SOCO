#include<bits/stdc++.h>
using namespace std;

const int N = 100 * 1000 + 20, SQ = 317;
int n, q, a[N], l[N], r[N], tmp[N], cnt[N], sum, ans[N], st, en;

bool cmp(int i, int j) {
    if (l[i] / SQ != l[j] / SQ)
        return l[i] < l[j];
    return r[i] < r[j];
}

void addL() {
    int val = a[--st];
    if (val > n || !val)
        return;
    cnt[val]++;
    if (cnt[val] == val)
        sum++;
    else if (cnt[val] == val + 1)
        sum--;
}

void addR() {
    int val = a[en++];
    if (val > n || !val)
        return;
    cnt[val]++;
    if (cnt[val] == val)
        sum++;
    else if (cnt[val] == val + 1)
        sum--;
}

void eraseL() {
    int val = a[st++];
    if (val > n || !val)
        return;
    cnt[val]--;
    if (cnt[val] == val - 1)
        sum--;
    else if (cnt[val] == val)
        sum++;
}

void eraseR() {
    int val = a[--en];
    if (val > n || !val)
        return;
    cnt[val]--;
    if (cnt[val] == val - 1)
        sum--;
    else if (cnt[val] == val)
        sum++;
}

int main() {
    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
    cin >> n >> q;
    for (int i = 0; i < n; i++)
        cin >> a[i];
    for (int i = 0; i < q; i++) {
        cin >> l[i] >> r[i];
        l[i]--;
    }
    iota(tmp, tmp + q, 0);
    sort(tmp, tmp + q, cmp);
    for (int i = 0; i < q; i++) {
        while (st > l[tmp[i]])
            addL();
        while (en < r[tmp[i]])
            addR();
        while (st < l[tmp[i]])
            eraseL();
        while (en > r[tmp[i]])
            eraseR();
        ans[tmp[i]] = sum;
    }
    for (int i = 0; i < q; i++)
        cout << ans[i] << "\n";
    return 0;
}