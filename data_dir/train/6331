#include <bits/stdc++.h>
typedef long long ll ;
using namespace std;

int main()
{
    /*
  int n ;
   string s ;
  cin >> n >> s;

  vector < string > vi ;
    int ans1 = 0 ;
   for(int i = 0 ; i < s.size() ; i++){
      if(isalpha(s[i])){
          string x ;
          x.push_back(s[i]);
          int j = i + 1 ;
          while(j < n && isalpha(s[j])){
              x += s[j] ;
              j++ ;
          }
          i = j ;
          ans1 = max(ans1 , (int)x.size());
      }
      else if(s[i] == '('){
           for(int j = i + 1 ; s[j] != ')' ; j++){
                if(isalpha(s[j])){
                    string x ;
                    x.push_back(s[j]);
                    int k = j + 1 ;
                    while(isalpha(s[k])){
                        x += s[k];
                        k++;
                    }
                    j = k ;
                    vi.push_back(x);
                }
           }

      }
   }

   cout << ans1 << " " << (int)vi.size() ;
*/


    vector < int > v ;

    int n ;

    cin >> n ;

    int m = n ;

  //! 32 // 10 10 10



   bool b = 0 ;
    while(m){
        int di = floor(log10(m)) + 1 ;
        int c = m / (int)powl(10, di - 1) ;
        int x = m % (int)powl(10, di - 1) ;
        if(!b)
        for(int i = 0 ; i < c ; i++)
            v.push_back((int)powl(10 , di - 1));
        else{
           for(int i = 0 ; i < v.size() && c ; i++ , c--)
                v[i] +=   (int)powl(10 , di - 1);
            if(c)
                 for(int i = 0 ; i < c ; i++)
                   v.push_back((int)powl(10 , di - 1));
        }
        m =  x;
        b = 1 ;
    }

    cout << v.size() << endl ;

    for(int i = 0 ; i < v.size() ; i++) cout << v[i] << " " ;


    return 0;
}
