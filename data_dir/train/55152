#include <bits/stdc++.h>

using namespace std;

typedef long long LL;
const int MX = 2 * 1e5 + 5;
const int INF = 1e9 + 7;
int n, a[MX];
vector<int> vaux, vaux2;

int main () {
//	freopen("in.txt", "r", stdin);
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		int s = sqrt(a[i]);
		if (s * s != a[i]) {
			vaux.push_back(min(abs(a[i] - s * s), abs(a[i] - (s + 1) * (s + 1))));
		}
		else {
			if (a[i] == 0) {
				vaux2.push_back(2);
			}
			else {
				vaux2.push_back(1);
			}
		}
	}
	if (vaux.size() == n / 2) {
		cout << 0 << endl;
	}
	else if (vaux.size() > n / 2) {
		sort(vaux.begin(), vaux.end());
		int rem = vaux.size() - n / 2;
		LL res = 0;
		for (int i = 0; i < rem; i++) {
			res += vaux[i];
		}
		cout << res << endl;
	}
	else {
		int rem = n / 2 - vaux.size();
		sort(vaux2.begin(), vaux2.end());
		int res = 0;
		for (int i = 0; i < rem; i++) res += vaux2[i];
		cout << res << endl;
	}
	return 0;
}