#include<bits/stdc++.h>
using namespace std;
int mod = 1000000007;
string s;
int n, m, r, least;
int mem[2005][2005][2];
bool vis[2005][2005][2];
int solve(int ind, int delta, int bef) {
	if (delta < 0 || delta > 2000)
		return 0;
	if (bef == 1 && ind == n - m)
		return delta == 0;
	if (vis[ind][delta][bef])
		return mem[ind][delta][bef];
	vis[ind][delta][bef] = 1;
	int ans = 0;
	if (bef != 0 || ind < n - m) {
		ans += solve(ind + 1, delta + 1, bef);
		ans += solve(ind + 1, delta - 1, bef);
		if (ans >= mod)
			ans -= mod;
	}
	if (bef == 0 && delta + least >= 0)
		ans += solve(ind, delta + r, 1);
	if (ans >= mod)
		ans -= mod;
	return mem[ind][delta][bef] = ans;
}


int main() {
	ios::sync_with_stdio(false);
	cin >> n >> m;
	getline(cin, s);
	getline(cin, s);

	for (int i = 0; i < int(s.size()); i++) {
		if (s[i] == '(')
			r++;
		else
			r--;
		least = min(least, r);
	}

	cout << solve(0, 0, 0) << endl;









	return 0;
}
