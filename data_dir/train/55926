//vi _(){
//    int n;
//    cin >> n;
//    map<char,int> cnt;
//    string s;
//    cin >> s;
//    for(char c : s)
//        cnt[c]++;
//    int z = cnt['z'];
//    int o = cnt['n'];
//    vi ans;
//    rep(i,1,o)
//        ans.pb(1);
//    rep(i,1,z)
//        ans.pb(0);
//    return ans;
//}
//
#include <map>
#include <iomanip>
#include <vector>
#include <utility>
#include <iostream>
#include <string>
#define pb push_back
#define REP_INT(i,l,r) for(int i = l; i <= r; ++i)
#define GET_REP_MACRO(_1,_2,_3,_4,NAME,...) NAME
#define rep(...) GET_REP_MACRO(__VA_ARGS__,REP_ANY,REP_INT)(__VA_ARGS__)
#define all(v) (v).begin(), (v).end()
#define sz(v) ll(v.size())
#define T1 template<typename T> static
using namespace std;
typedef long long ll;
typedef vector<int> vi;
T1 ostream& operator<<(ostream& stream, const vector<T>& t);
T1 istream& read(T, T, istream& = cin);
T1 ostream& operator<<(ostream& stream, const vector<T>& t){
    for(int i = 0; i < sz(t); ++i){
        stream << t[i];
        if(i+1 < sz(t))
            stream << ' ';
    }
    return stream;
}
vi _(){
    int n;
    cin >> n;
    map<char,int> cnt;
    string s;
    cin >> s;
    for(char c : s)
        cnt[c]++;
    int z = cnt['z'];
    int o = cnt['n'];
    vi ans;
    rep(i,1,o)
        ans.pb(1);
    rep(i,1,z)
        ans.pb(0);
    return ans;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(15);
        cout << _() << '\n';
}
