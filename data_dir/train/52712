#include <bits/stdc++.h>

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

#define sf scanf
#define pf printf
#define pb push_back
#define mp make_pair
#define PI ( acos(-1.0) )
#define mod 1000000007LL
#define maxn 5000005
#define IN freopen("C.in","r",stdin)
#define OUT freopen("output.txt","w",stdout)
#define FOR(i,a,b) for(i=a ; i<=b ; i++)
#define DBG pf("Hi\n")
#define INF 2000000000000000000LL
#define i64 long long int
#define eps (1e-8)
#define xx first
#define yy second
#define ln 17
#define off 2

using namespace __gnu_pbds;
using namespace std ;

typedef tree< i64, null_type, less<i64>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
typedef pair<i64, i64> pii;

i64 a[100] , k ;

vector <i64 > ans ;

void recur( i64 i , i64 w )
{
    if( i==ans.size() ) ans.pb(0) ;
    if( w==1 )
    {
        if( i%2==0 )
        {
            if( ans[i]==k-1 )
            {
                ans[i] = 0 ;
                recur(i+1,1) ;
            }
            else ans[i]++ ;
        }
        else{

            if( ans[i]==0 )
            {
                ans[i] = k-1 ;
                recur(i+1,1) ;
            }
            else ans[i]-- ;
        }
    }
    return ;
}

int main()
{
    i64 i , j , l , m, n , p ;

    scanf("%lld %lld",&p,&k) ;

    n = p ;

    i= 0 ;

    while(n!=0)
    {
        a[i] = n%k ;
        n = n/k ;
        i++ ;
    }

    l = j = i ;

    for(i=j-1 ; i>=0 ; i--) ans.pb(0LL) ;

    for(i=j-1 ; i>=0 ; i--)
    {
    //    printf("%lld: %lld\n",i,a[i]) ;
                if( a[i]==0 )
                {
                    ans[i] = 0 ;
                    continue ;
                }
        if(i%2==0) ans[i] = a[i] ;
        else{
            ans[i] = k-a[i] ;
            recur(i+1,1) ;
        }
    }

    printf("%lld\n",(i64)ans.size()) ;

    for(i=0 ; i<ans.size() ; i++) printf("%lld ",ans[i]) ;

    return 0 ;
}
