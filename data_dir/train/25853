#include<iostream>
#include<vector>
#include<algorithm>
#include<map>
#include<iterator>
#include<stack>
#include<string>
#include<climits>
#include<bitset>
#include<queue>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<sstream>
#include<iomanip>

#define MOD 1000000007
#define ll long long int
#define vi vector<int>
#define vll vector<long long int>
#define vvi vector<vector<int> >
#define vvl vector<vector<long long int> >
#define vp vector<pair<int, int> >
#define sc(n) scanf("%d", &n)
#define ssync ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)
#define PI 3.14159265

using namespace std;

string toBin(long long int a)
{
	return bitset<64>(a).to_string();
}

void printArr(int* a, int n)
{
	for(int i = 0; i < n; i++)
		printf("%d ", a[i]);
	printf("\n");
}

string intToString (ll a)
{
	ostringstream temp;
	temp<<a;
	return temp.str();
}

ll powerWithMod(ll base, ll exponent, ll modulus)
{
	ll result = 1;
	base %= modulus;
	while(exponent > 0)
	{
		if(exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}

int dp[1000005];

int main()
{
	ssync;
	int k, cnt=0;
	string a;
	cin >> k >> a;
	dp[0] = -1;
	for(int i=0; i<a.size(); i++)
	{
		if(a[i] == '1')
		{
			cnt++;
			dp[cnt]=i;
		}
	}
	dp[cnt+1] = a.size();
	ll ans = 0;
	if(k == 0)
	{
		for(int i=1; i <= cnt+1; i++)
			ans += (ll)(dp[i] - dp[i-1]) * (dp[i] - 1 - dp[i-1]) / 2;
	}
	else
	{
		int s, e;
		for(s = 1, e=s+k-1; e <= cnt; s++, e++)
			ans += (ll)(dp[s]-dp[s-1]) * (dp[e+1]-dp[e]);
	}
	cout << ans << "\n";
	return 0;
}
