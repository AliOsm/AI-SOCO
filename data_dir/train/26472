#include<bits/stdc++.h>
using namespace std;

typedef double                 ld;
typedef long long                   ll;
typedef pair<int,int>               pii;
typedef pair<ll,ll>                 pll;
typedef pair<string , string>       pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define sep                         ' '
#define endl                        '\n'
#define file_io                     freopen("input.txt" , "r+" , stdin) ; freopen("output.txt" , "w+" , stdout);
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define error(x)                    cerr << "$$$ " << x << '\n';
#define error2(x,y)                 cerr << "#F : " << x << "      #S : " << y << '\n';
#define kill(x)                     return cout << x << endl , 0;
#define pb                          push_back

const ll MXN = 70 + 10;
const ll MXM = 5e2 + 10;
const ll MX5 = 2e5 + 10;
const ll MX6 = 1e6 + 10;
const ll INF = 8e18;
const ld eps = 1e-9;
const ll MOD = 1e9 + 7; //998244353;

ll power(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * power(a * a % md, b / 2, md) % md : power(a * a % md, b / 2, md) % md));
}
ll bmm(ll a,ll b){
    return (a%b==0 ? b : bmm(b,a%b));
}
string base2(ll n){
    string a="";while(n>=2){a+=(char)(n%2+'0');n/=2;}a+=(char)(n+'0');reverse(all(a));return a;
}
/*
ll M[MX5], P[MX5], S[MX5];

set<ll> st;
vector<ll> v[MX5];

void solve(){
    ll n, m;
    cin >> n;
    for(int i = 0; i < n; i ++){
        cin >> M[i];
    }
    cin >> m;
    for(int i = 0; i < n; i ++){
        cin >> P[i] >> S[i];
    }



    return;
}
*/

ll A1[MX5], A2[MX5], A3[MX5];
ll dp[MX5][5];
set<ll> st1, st2, st3;
int main(){
    fast_io
    //file_io
    /*
    ll q;
    cin >> q;
    while(q--){
        solve();
    }*/
    ll k1, k2, k3;
    cin >> k1 >> k2 >> k3;
    for(int i = 0; i < k1; i ++){
        cin >> A1[i];
        st1.insert(A1[i]);
    }
    for(int i = 0; i < k2; i ++){
        cin >> A2[i];
        st2.insert(A2[i]);
    }
    for(int i = 0; i < k3; i ++){
        cin >> A3[i];
        st3.insert(A3[i]);
    }
    ll n = k1 + k2 + k3;
    std::set<ll>::iterator itr;

    itr = st1.lower_bound(1);
    if(itr == st1.end() || *itr != 1){
        dp[0][0] ++;
    }
    itr = st2.lower_bound(1);
    if(itr == st2.end() || *itr != 1){
        dp[0][1]++;
    }
    itr= st3.lower_bound(1);
    if(itr == st3.end() || *itr != 1){
        dp[0][2]++;
    }

    for(int i = 1; i < n; i ++){
        dp[i][0] = dp[i - 1][0];
        itr = st1.lower_bound(i + 1);
        if(itr == st1.end() || *itr != i + 1){
            dp[i][0] ++;
        }
        itr = st2.lower_bound(i + 1);
        bool f = 0;
        if(itr == st2.end() || *itr != i + 1){
            f = 1;
        }
        dp[i][1] = f + min(dp[i - 1][0], dp[i - 1][1]);
        f = 0;
        itr= st3.lower_bound(i + 1);
        if(itr == st3.end() || *itr != i + 1){
            f = 1;
        }
        dp[i][2] = f + min({dp[i - 1][0], dp[i - 1][1], dp[i - 1][2]});
    }
    cout << min({dp[n - 1][0], dp[n - 1][1], dp[n - 1][2]});
    return 0;
}

//! N.N
