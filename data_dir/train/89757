#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0;
#define ll long long

const int N = 363310;

int n, x, mod = 1e9 + 7;
string s;
set <int> a, b;
vector <int> t;
vector <pair <string, int> > v;

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    cin >> n;
    a.insert(-1e9);
    b.insert(1e9);
    int ans = 1;
    for(int i = 0 ; i < n && cin >> s >> x ; i++)
        v.push_back(make_pair(s, x));
    for(int i = 0 ; i < n ; i++){
        if(v[i].first == "ADD"){
            t.clear();
            int j = i;
            while(j < v.size() && v[j].first == "ADD")
                j++;
            j--;
            for(int k = i ; k <= j ; k++){
                int cur = v[k].second;
                if(cur <= *a.rbegin()) a.insert(cur);
                else if(cur >= *b.begin()) b.insert(cur);
                else t.push_back(cur);
            }
            sort(t.begin(), t.end());
            i = j;
        }
        else{
            int cur = v[i].second;
            if(cur == *a.rbegin()){
                a.erase(cur);
                for(auto &j : t) b.insert(j);
            }
            else if(cur == *b.begin()){
                b.erase(cur);
                for(auto &j : t) a.insert(j);
            }
            else if(a.count(cur)){
                finish(0);
            }
            else if(b.count(cur)){
                finish(0);
            }
            else{
                ans = 2LL * ans % mod;
                for(auto &j : t){
                    if(j < cur) a.insert(j);
                    else if(j > cur) b.insert(j);
                }
            }
            t.clear();
        }
    }
    if(t.size()) ans = 1LL * ans * ((ll)t.size() + 1) % mod;
    cout << ans << endl;
    return 0;
}
