#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define ll long long
#define ull  unsigned long long
#define pb push_back

using namespace std;
using namespace __gnu_pbds;
typedef  tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 20000000;
int ans = 0;
int f[N];
map < int, vector < int > > m1, m2;
int t1[200000], t2[200000];
main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    for (int i = 2; i <= 1e7; i++){
        if (!f[i]){
            for (int j = i; j <= 1e7; j += i) if (f[j] == 0) f[j] = i;
        }
    }
    int n, m;
    cin >> n >> m;
    for (int i = 1; i <= n; i++){
        int x;
        cin >> x;
        t1[i] = x;
        while(x != 1){
            m1[f[x]].pb(i);
            x /= f[x];
        }
    }
    for (int i = 1; i <= m; i++){
        int y;
        cin >> y;
        t2[i] = y;
        while(y != 1){
            m2[f[y]].pb(i);
            y /= f[y];
        }
    }
    for (int i = 2; i <= 1e7; i++){
        if (f[i] != i) continue;
        int p1 = min(m1[i].size(), m2[i].size());
        int p2 = p1;
        for (auto j: m1[i]){
            if (p1 == 0) break;
            while(p1 && t1[j] % i == 0){
                t1[j] /= i;
                p1--;
            }
        }
        for (auto j: m2[i]){
            if (p2 == 0) break;
            while(p2 && t2[j] % i == 0){
                t2[j] /= i;
                p2--;
            }
        }
    }
    cout << n << " " << m << endl;
    for (int i = 1; i <= n; i++) cout << t1[i] << " ";
    cout << endl;
    for (int i = 1; i <= m; i++) cout << t2[i] << " ";
}
