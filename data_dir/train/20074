#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%ll"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
int N;
char D[500010][2] , buf[20];
int dp[500010][26] , len[500010];
int best[26][26];
int main(){
  scanf("%d",&N);
  for(int i=0;i<N;++i){
   scanf("%s",&buf);
   int L=strlen(buf); len[i]=L;
   D[i][0]=buf[0]-'a';
   D[i][1]=buf[L-1]-'a';
                      }
  for(int i=0;i<26;++i)
   for(int j=0;j<26;++j)
    best[i][j] = (i==j)?0:-100000000;
  int ans=0;
  for(int i=0;i<N;++i){
   for(char beg=0;beg<26;++beg){
    dp[i][beg]=-100000000;
    relaxMax(dp[i][beg] , best[beg][D[i][0]]+len[i]);
                               }
   for(char beg=0;beg<26;++beg){
    relaxMax(best[beg][D[i][1]] , dp[i][beg]);
                               }
   relaxMax(ans , dp[i][D[i][1]]);
                      }
  printf("%d\n" , ans);
  return 0;
}

