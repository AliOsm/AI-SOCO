#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0;
#define ll long long

int n, x, cnt[71], pow2[100001], dp[71][(1<<19)], mod = 1000000007;
set <int> s;
vector <int> p;

bool prime(int a){
    for(int i = 2 ; i*i <= a ; i++)
        if(a%i == 0) return 0;
    return 1;
}
int mask(int x){
    if(x == 0) return 0;
    int ret = 0;
    for(int i = 0 ; i < p.size() ; i++)
        while(x%p[i] == 0){
            x /= p[i];
            ret ^= (1<<i);
        }
    return ret;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    pow2[0] = 1;
    for(int i = 1 ; i <= 100000 ; i++)
        pow2[i] = pow2[i-1]*2%mod;
    for(int i = 2 ; i <= 70 ; i++)
        if(prime(i)) p.push_back(i);
    cin >> n;
    while(n-- && cin >> x)
        cnt[x]++, s.insert(x);
    dp[0][0] = 1;
    int cur = 1;
    for(int i : s){
        int mas = mask(i);
        for(int j = 0 ; j < (1<<19) ; j++){
            ll occ = pow2[cnt[i]-1];
            dp[cur][j] = dp[cur-1][j]%mod*occ%mod;
            dp[cur][j] = (dp[cur][j]+dp[cur-1][(j^mas)]%mod*occ%mod)%mod;
        }
        cur++;
    }
    cout << (dp[(int)(s.size())][0]-1+mod)%mod << endl;
    return 0;
}
