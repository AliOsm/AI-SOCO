#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 10;
int n, m;
vector<int> graph[N];
bool used[N], flag;
void Dfs(int v, int parent){
	used[v] = true;
	for (int i=0; i<graph[v].size(); i++){
		int child = graph[v][i];
		if (used[child] == true && child != parent){
			flag = true;
		}
		if (used[child] == false){
			Dfs(child, v);
		}
	}
}
int main(){
	// freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w", stdout);
	ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
	cin>>n>>m;
	for (int i=1; i<=m; i++){
		int from, to;
		cin>>from>>to;
		graph[from].push_back(to);
		graph[to].push_back(from);
	}
	int ans = 0;
	for (int i=1; i<=n; i++){
		if (used[i] == false){
			Dfs(i, 0);
			if (flag == false){
				ans++;
			}
		}
		flag = false;
	}
	cout<<ans;
}