#include <bits/stdc++.h>
using namespace std;

#define si(n) scanf("%d",&n)
#define ll long long
#define MAX 200005
#define f first
#define s second

const int mod=(int) 1e9+7;
ll fact[MAX],inv[MAX];

int bigmod(ll a,ll p)
{
    long long ret = 1;
    while(p) {
        if(p & 1) ret = ret * a % mod;
        a = a * a % mod;
        p >>= 1;
    }
    return ret;
}

int mod_add(ll a,ll b) {
  a+=b;
  if(a>=mod) a-=mod;
  return a;
}

int mod_sub(ll a,ll b) {
  a-=b;
  if (a<0) a+=mod;
  return a;
}

int mod_mul(ll a, ll b) {
  return (a*b)%mod;
}

int mod_div(ll a,ll b)
{
    return mod_mul(a,bigmod(b,mod-2));
}


int mod_power(int a,int b) {
  int res=1;
  while (b>0) {
    if (b&1) {
      res=mod_mul(res,a);
    }
    a=mod_mul(a,a);
    b>>=1;
  }
  return res;
}

void factorial()
{
    fact[0]=1;
    inv[0]=1;
    for(int i=1;i<MAX;i++){
        fact[i]=mod_mul(fact[i-1],i);
        inv[i]=mod_power(fact[i],mod-2);
    }
}

ll nCr(ll n,ll r)
{
    if(r>n)return 0;
    ll ret=fact[n];
    ret=(ret*inv[r])%mod;
    ret=(ret*inv[n-r])%mod;

    return ret;
}

int n,k,cnt;
vector<pair<int,int> >gr[MAX];
bool vis[MAX];

void dfs(int now)
{
    vis[now]=true;
    cnt++;
    for(auto to : gr[now]){
        if(to.s==1 || vis[to.f])continue;
        dfs(to.f);
    }
}


int main()
{
    //freopen("input.txt","r",stdin);
    //factorial();
    int i,j;
    si(n);si(k);
    for(i=1;i<n;i++){
        int u,v,c;
        si(u);si(v);si(c);
        gr[u].push_back({v,c});
        gr[v].push_back({u,c});
    }

    ll ans=mod_power(n,k);

    for(i=1;i<=n;i++){
        if(vis[i])continue;
        cnt=0;
        dfs(i);
        ans=mod_sub(ans,mod_power(cnt,k));

    }
    cout<<ans<<endl;



    return 0;
}
