//#pragma comment(linker, "/stack:200000000")
//#pragma GCC optimize ("Ofast")
//#pragma GCC target ("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
#include<bits/stdc++.h>
using namespace std;
#define int long long
#define d long double
#define pii pair<int,int>
#define pb push_back
#define pf push_front
#define cases int t;cin>>t;while(t--)
#define N 100003
#define M 1003
#define inf LLONG_MAX
int mod=1e9+7;
//int mod=998244353;
vector<int> g[N];
map<pii,bool> col;
bool vis[N];
int cnt=0;

int fast_power(int base, int power)
{
    int result = 1;
    while(power > 0)
    {
        if(power % 2 == 1)
            result = (result*base) % mod;
        base = (base * base) % mod;
        power = power / 2;
    }
    return result;
}

void dfs(int i)
{
    ++cnt;
    vis[i]=true;

    for(auto j:g[i])
    {
        if(!vis[j] && col[{i,j}]==0)
        {
            dfs(j);
        }
    }
}

signed main()
{
    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);

    fill(vis,vis+N,0);
    col.clear();
    int n,k;
    cin>>n>>k;
    int i,j,x,y,z;
    for(i=1;i<=n-1;++i)
    {
        cin>>x>>y>>z;
        g[x].pb(y);
        g[y].pb(x);
        col[{x,y}]=col[{y,x}]=z;
    }

    int temp=0;
    for(i=1;i<=n;++i)
    {
        if(!vis[i])
        {
            cnt=0;
            dfs(i);
            temp=(temp+fast_power(cnt,k))%mod;
        }
    }
    int ans=fast_power(n,k);
    ans=(ans-temp+mod)%mod;
    cout<<ans;



    return 0;
}
