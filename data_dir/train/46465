#include <stdio.h>
#include <string.h>
#include <vector>
#include <algorithm>
using namespace std;

struct node
{
    int id,pos;
    int c;
};
vector <node> get[1010];
bool cmp(const node &a,const node &b)
{
    if (a.c!=b.c) return a.c>b.c;
    return a.pos<b.pos;
}
node p[1010],tp[10][1010];
int main()
{
    int k,n;
    while (scanf("%d%d",&n,&k)==2)
    {
        for (int i=0;i<k;i++)
            get[i].clear();
        int cnt1=0,cnt2=0;
        for (int i=0;i<n;i++)
        {
            scanf("%d%d",&p[i].c,&p[i].id);
            p[i].c*=2;
            p[i].pos=i+1;
            if (p[i].id==1)
                tp[1][cnt1++]=p[i];
            else
                tp[2][cnt2++]=p[i];
        }
        sort(tp[1],tp[1]+cnt1,cmp);
        sort(tp[2],tp[2]+cnt2,cmp);
        int now1=0,now2=0,sum1=cnt1,sum2=cnt2;
        for (int i=0;i<k;i++)
        {
            if (sum1+sum2==k-i)
            {
                for (;i<k;i++)
                {
                    if (now1!=cnt1)
                        get[i].push_back(tp[1][now1++]);
                    else
                        get[i].push_back(tp[2][now2++]);
                }
                break;
            }
            if (now1==cnt1)
            {
                get[i].push_back(tp[2][now2++]);
                sum2--;
            }
            else
            {
                get[i].push_back(tp[1][now1++]);
                sum1--;
            }
        }
        while (now1!=cnt1||now2!=cnt2)
        {
            if (now1!=cnt1) get[k-1].push_back(tp[1][now1++]);
            if (now2!=cnt2) get[k-1].push_back(tp[2][now2++]);
        }
        double sum=0;
        for (int i=0;i<k;i++)
        {
            int minn=get[i][0].c;
            bool have=false;
            int len=get[i].size();
            for (int j=0;j<len;j++)
            {
                if (get[i][j].id==1) have=true;
                minn=min(get[i][j].c,minn);
                sum+=get[i][j].c;
            }
            if (have) sum-=minn/2.0;
        }
        printf("%.1f\n",sum/2.0);
        for (int i=0;i<k;i++)
        {
            printf("%d",get[i].size());
            int len=get[i].size();
            for (int j=0;j<len;j++)
                printf(" %d",get[i][j].pos);
            printf("\n");
        }
    }
    return 0;
}
