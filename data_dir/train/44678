#include<bits/stdc++.h>
#define rep(i,start,lim) for(lld i=start;i<lim;i++)
#define repd(i,start,lim) for(lld i=start;i>=lim;i--)
#define scan(x) scanf("%lld",&x)
#define print(x) printf("%lld ",x)
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define br printf("\n")
#define sz(a) lld((a).size())
#define YES printf("YES\n")
#define NO printf("NO\n")
#define all(c) (c).begin(),(c).end()
using namespace std;
#define INF         1011111111
#define LLINF       1000111000111000111LL
#define EPS         (double)1e-10
#define MOD         1000000007
#define PI          3.14159265358979323
using namespace std;
typedef long double ldb;
typedef long long lld;
lld powm(lld base,lld exp,lld mod=MOD) {lld ans=1;while(exp){if(exp&1) ans=(ans*base)%mod;exp>>=1,base=(base*base)%mod;}return ans;}
typedef vector<lld> vlld;
typedef pair<lld,lld> plld;
typedef map<lld,lld> mlld;
typedef set<lld> slld;
#define N 200005
lld fact[N],invfact[N];
lld dp[2005];
lld nCr(lld n,lld r) {
	if(r>n) return 0;
	lld ans = (fact[n] * invfact[r])%MOD;
	ans = (ans*invfact[n-r])%MOD;
	return ans;	
}
lld get(lld sx,lld sy,lld dx,lld dy) {
	return nCr(dx-sx+dy-sy,dx-sx);
}
int main()
{
	lld h,w,n,x,y;
	fact[0]=invfact[0]=1;
	rep(i,1,N) fact[i] = (fact[i-1]*i)%MOD, invfact[i] = powm(fact[i],MOD-2);
	vector<plld> v;
	cin>>h>>w>>n;
	rep(i,1,n+1) cin>>x>>y,v.pb(mp(x,y));
	v.pb(mp(h,w));
	sort(all(v));
	rep(i,0,n+1) {
		dp[i] = get(1,1,v[i].f,v[i].s);
		rep(j,0,i) {
			if(v[j].f <= v[i].f and v[j].s <= v[i].s) dp[i] = (dp[i] - (dp[j] * get(v[j].f,v[j].s,v[i].f,v[i].s))%MOD + MOD)%MOD;
		}
	}
	cout<<dp[n];
	return 0;
}