#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define po pop_back
#define pb push_back
#define mk make_pair
#define lw lower_bound
#define up upper_bound
#define ff first
#define ss second
#define boost ios_base::sync_with_stdio(); cin.tie(0); cout.tie(0);
#define MOD 1000000007
#define MAX INT_MAX
#define MIN INT_MIN
#define forn(i,n) for(int i=0;i<n;i++)
#define forn1(i,n) for(int i=1;i<=n;i++)
#define ford(i,n) for(int i=n-1;i>=0;i--)
#define ford1(i,n) for(int i=n;i>=1;i--)
#define forlr(i,l,r) for(int i=l;i<=r;i++)
#define forrl(i,r,l) for(int i=r;i>=l;i--)
ll d[1234567],a,b,c[1234567],c1[123456][6],e,i,j,n,k,x,y;
pair<ll,ll> p[1234567];
vector<ll> v,v1;
int main(){
	cin>>n;
	while(n--){
		string s;
		cin>>s;
		set<pair<ll,string>>se;
		string s1,s2;
		ll ans=0;
		for(int i=0;i<s.size();i++){
			s1+=s[i];
			s2=s[i]+s2;
			if(s1==s2){
				se.insert({-s1.size(),s1});
	//			cout<<s1<<"\n";
			}
	//		cout<<s1<<" "<<s2<<"\n";
		}
		s1="";
		s2="";
		for(int i=s.size()-1;i>=0;i--){
			s1+=s[i];
			s2=s[i]+s2;
			if(s1==s2){
				se.insert({-s1.size(),s1});
	//			cout<<s1<<"\n";
			}
			//cout<<s1<<" "<<s2<<"\n";
		}
		ll l=0;
		ll r=s.size()-1;
		s1="";
		//abcdfdcecba
		while(s[l] == s[r] && r > l){
			s1+=s[l];
			l++;
			r--;
		}
				string ss="",sss="",S="";
				//cout<<S<<"\n";
				for(int i=l;i<=r;i++)S+=s[i];
				//cout<<S<<"\n";
					for(int i=0;i<S.size();i++){
						ss+=S[i];
						sss=S[i]+sss;
						//cout<<ss<<" "<<sss<<"\n";
						if(sss==ss){
							//cout<<ss<<"\n";
							string ssss=s1;
							reverse(ssss.begin(),ssss.end());
							se.insert({2*-s1.size()-ss.size(),string(s1+ss+ssss)});
				//			cout<<s1<<"\n";
						}
				//		cout<<s1<<" "<<s2<<"\n";
					}
					ss="";
					sss="";
					for(int i=S.size()-1;i>=0;i--){
						ss+=S[i];
						sss=S[i]+sss;
						if(sss==ss){
							//cout<<ss<<"\n";
							string ssss=s1;
							reverse(ssss.begin(),ssss.end());
							se.insert({2*-s1.size()-ss.size(),string(s1+ss+ssss)});
				//			cout<<s1<<"\n";
						}
						//cout<<s1<<" "<<s2<<"\n";
					}
	//	cout<<s1<<"\n";
		pair<ll,string>p=*se.begin();
		cout<<p.ss<<'\n';
		}
	}