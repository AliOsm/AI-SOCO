/**
*
* Author: MARS
* Lang: GNU C++14
*
**/

#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair<int,int>

typedef long double ldbl;
typedef long long ll;
typedef double dbl;

const ldbl pi = acos(-1);
const ll inf = 1LL<<62;
const dbl eps = 1e-9;
const ll mod = 1e9+7;

/** /////////// ** Code ** /////////// **/

const int N=200200;
vector<int>adj[N];
ll dp[N], val[N], a[N];
ll ans=-inf;

void DFS(int u, int p){
    val[u]=a[u];
    for(auto v:adj[u]){
        if(v == p) continue;
        DFS(v, u);
        val[u]+=val[v];
    }

    dp[u]=val[u];
    vector<ll>vec;
    for(auto v:adj[u]){
        if(v == p) continue;
        dp[u] = max(dp[u], dp[v]);
        vec.push_back(dp[v]);
    }

    sort(vec.begin(), vec.end(), greater<ll>());
    if(vec.size() > 1)
        ans=max(ans, vec[0]+vec[1]);
}

int main(){
    int n;
    scanf("%d",&n);
    for(int i=1 ; i<=n ; i++)
        scanf("%lld",&a[i]);

    for(int i=0 ; i<n-1 ; i++){
        int u,v;
        scanf("%d%d",&u,&v);
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    DFS(1, 0);
    if(ans == -inf) printf("Impossible");
    else printf("%lld",ans);
}
