#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll; 
typedef pair<int,int > pp;
 
 
#define sz(x) (int)x.size() 
#define PI acos(-1)
int const N=2e5+10;
int  oo = 1e9;
int mod = oo+7;
ll OO = 3e18;

int n,aa[101];
map<vector<int >,int > sv;
int hsh_v(vector<int>& v ){
	int h = 0,p=31,f=1;
	for(int i=0;i<sz(v);i++){
		h+=(f*1LL*v[i])%mod;
		h%=mod;
		f=f*1LL*p%mod;
	}
	return h;
}
vector<int > compute_diff(int x,int cnt,bool lft = 0){
	vector<int > df;
	for(int i=0;i<n;i++){
		int w = aa[i]&((1<<15)-1);
		if(lft)w = aa[i]>>15;
		int ox = x xor w;
		int need = __builtin_popcount(ox);
		if(lft) need = cnt - need;
		if(need < 0) return {};
		df.push_back(need);
	}
	return df;
}
void solve(){
	cin>>n;
	for(int i=0;i<n;i++)cin>>aa[i];
	for(int j=0;j<=30;j++){
		sv.clear();
		for(int i=0;i<(1<<15);i++){
			auto h = compute_diff(i,j,1);
			if(h.empty())continue;
			sv[h]=i;
		}
		for(int i=0;i<(1<<15);i++){
			auto h = compute_diff(i,j);
			if(h.empty()||sv.find(h)==sv.end())continue;
			int an=((sv[h]<<15) | i);
			cout<<an<<'\n';
			for(int k=0;k<n;k++){
				assert(__builtin_popcount(aa[k] xor an) == j);
			}
			return ;
		}
	}
	cout<<-1<<'\n';
}
 
int main() {
	#ifndef ONLINE_JUDGE
		freopen("a.in","r",stdin);
		freopen("a.out","w",stdout);
	#endif
	ios::sync_with_stdio(0);
	cin.tie(0);
	int t=1;
	// cin>>t;
	while(t--)solve();
	
	return 0;
}
