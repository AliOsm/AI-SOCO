#include <iostream>
#include <vector>
#include <string>
#include <limits>
#include <set>
#include <map>
#include <algorithm>
#include <stack>
#include <cstdlib>
#include <cstdio>
using namespace std;

vector<vector<pair<int, int> > > g;
vector<bool> used;
vector<int> ret;

bool dfs(int v)
{
    used[v] = true;
    bool f = true;
    for (int i = 0; i < g[v].size(); ++i)
    {
        int to = g[v][i].first;       
        if (!used[to])
        {
            bool st = dfs(to);
            if (st)
            {
                if (g[v][i].second == 2)
                {
                    ret.push_back(to);
                    f = false;
                }
            }
            else
            {
                f = false;
            }
        }
    }
    return f;
}

int main(void)
{
    int n;
    cin >> n;
    g.resize(n);    
    used.resize(n, false);
    for (int i = 0; i < n - 1; ++i)
    {
        int x, y, t;
        cin >> x >> y >> t;
        --x, --y;
        g[x].push_back(make_pair(y, t));
        g[y].push_back(make_pair(x, t));        
    }  
    dfs(0); 
    cout << ret.size() << endl;
    for (int i = 0;i < ret.size(); ++i)
        cout << ret[i]+1 <<  ' '; 
    return 0;
}