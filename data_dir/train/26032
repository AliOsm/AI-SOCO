// I can't tell you what it really is,
// I can only tell you what it feels like.
#include "bits/stdc++.h"
using namespace std;
 
#define int long long
#define F first
#define S second
#define sz(x) ((int)x.size())
#define rep(i,a,n) for (int i = a; i <= n; ++i)
#define all(v)  v.begin(), v.end()
#define pb push_back
#define P pair < int, int >
#define E cout << '\n'

const int mod = 1e9 + 7;
const int N = 4e5 + 5;

int a[N], b[N];
map < int, int > mp;
 
inline void solve() {
   int n, ans(0), x;
   cin >> n;
   rep(i,1,n) {
   	cin >> x;
   	a[i] = x;
   }
   vector < P > v;
   rep(i,1,n) {
   	cin >> x;
   	b[i] = x;
   	v.push_back({a[i], x});
   }
   sort(all(v));
   for (int i = 0; i < n; ) {
   	int cur = v[i].first, now(0), st = i;
   	while (i < n and cur == v[i].first) {
   		++i;
   		now += v[i-1].second;
   	}
   	// cout << st << ' ' << i << ' ' << cur << '\n';
   	if (i - st > 1) {
   		ans += now;
   		// cout << now << '\n';
   		mp[cur] = 1;
   	}
   }
   // cout << ans << '\n';
   if (!ans) {
   	cout << "0";
   	return;
   }
  rep(j,1,n) {
  	if (!mp[a[j]]) {
  		for (auto i : mp) {
  			if (i.S && (a[j] & i.F) == a[j]) {
  				// cout << a[j] << ' ' << i.first << '\n';
  				ans += b[j];
  				break;
  			}
  		}
  	}   
  }
  cout << ans;
}
signed main() {
  ios_base::sync_with_stdio(0);
  cin.tie(NULL);
  cout.tie(NULL);
  int t = 1;
  //cin >> t; while(t--)
  solve();
  return 0;
}