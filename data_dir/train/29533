#include <bits/stdc++.h>
using namespace std;
#define REP(i, n) for (int i = 0; i < int(n); i++)
#define FOR(i, a, b) for (int i = a; i < int(b); i++)
#define FOREACH(i, v) for (__typeof((v).begin()) i = (v).begin(); i != (v).end(); i++)
#define SIZE(v) ((int)(v).size())
#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define ll long long
#define pii pair<int, int>

const int MAX = 100100;

int b[MAX], p[MAX];
char type[MAX];

int cntD[MAX], cntC[MAX];
int dpD[MAX], dpC[MAX];
vector<int> vD[MAX], vC[MAX];


int main() {
	int n, c, d;
	scanf("%d %d %d", &n, &c, &d);
	REP(i, n) {
		scanf("%d %d %c", b + i, p + i, type + i);
		if(type[i] == 'D') {
			cntD[p[i]] = dpD[p[i]] = max(dpD[p[i]], b[i]);
			vD[p[i]].pb(b[i]);
		}
		else {
			cntC[p[i]] = dpC[p[i]] = max(dpC[p[i]], b[i]);
			vC[p[i]].pb(b[i]);
		}
	}
	for(int i = 1; i < MAX; i++) dpD[i] = max(dpD[i], dpD[i - 1]);
	for(int i = 1; i < MAX; i++) dpC[i] = max(dpC[i], dpC[i - 1]);
	int ans02 = -1, ans11 = -1, ans20 = -1;
	
	for(int i = 0; i <= d/2; i++)
	if((int)vD[i].size() >= 2) {
		sort(vD[i].begin(), vD[i].end(), greater<int>());
		ans20 = vD[i][0] + vD[i][1];
	}
	for(int i = 0; i <= c/2; i++)
	if((int)vC[i].size() >= 2) {
		sort(vC[i].begin(), vC[i].end(), greater<int>());
		ans02 = vC[i][0] + vC[i][1];
	}
	
	REP(i, d) {
		int j = min(d - i, i - 1);
		if(j < i && cntD[i] != 0 && dpD[j] != 0) {
			if(ans20 == -1 || (ans20 != -1 && ans20 < cntD[i] + dpD[j])) ans20 = cntD[i] + dpD[j];
		}
	}
	
	REP(i, c) {
		int j = min(c - i, i - 1);
		if(j < i && cntC[i] != 0 && dpC[j] != 0) {
			if(ans02 == -1 || (ans02 != -1 && ans02 < cntC[i] + dpC[j])) ans02 = cntC[i] + dpC[j];
		}
	}
	
	if(dpD[d] != 0 && dpC[c] != 0) ans11 = dpD[d] + dpC[c];
	
	
	if(ans02 == -1 && ans11 == -1 && ans20 == -1) printf("0\n");
	else printf("%d\n", max(ans02, max(ans11, ans20)));
	
}