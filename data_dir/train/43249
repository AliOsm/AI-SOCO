#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <bitset>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned long ul;
typedef long double ld;

const int maxn = 100500 * 10;

int n, q;
int a[maxn], delta[maxn], go[maxn];
int used[maxn];
int lst[maxn], lstSz;

int nxt(int pos) {
    return (pos == n ? 1 : pos + 1);
}

int query(ll b) {
    ll sum = 0;
    int l = 1, r = n;
    int dst = -1;
    for (; l <= n; l++) {
        while (dst + 1 < n && sum + a[nxt(r)] <= b) {
            dst++;
            r = nxt(r);
            sum += a[r];
        }
        delta[l] = dst + 1;
        dst--;
        sum -= a[l];
    }
    for (int i = 1; i <= n; i++) {
        go[i] = i + delta[i];
        while (go[i] > n) go[i] -= n;
    }
    fill(used, used + n + 1, 0);
    int color = 0;
    int res = (int)1e9;
    for (int v = 1; v <= n; v++) {
        if (used[v]) continue;
        color++;
        int x = v;
        lstSz = 0;
        while (used[x] == 0) {
            used[x] = color;
            lst[lstSz++] = x;
            x = go[x];
        }
        if (used[x] != color) continue;
        int pos = 0;
        for (int it = lstSz - 1; it >= 0; it--)
            if (lst[it] == x) {
                pos = it;
                break;
            }
        if (pos != 0) {
            for (int i = pos; i < lstSz; i++)
                lst[i - pos] = lst[i];
            lstSz -= pos;
        }
        int sum = 0;
        for (int i = 0; i < lstSz; i++)
            sum += delta[lst[i]];
        int cnt = lstSz;
        int l = 0;
        int r = 0;
        for (; r < lstSz; r++) {
            while (cnt > 1 && sum - delta[lst[l]] >= n) {
                sum -= delta[lst[l]];
                cnt--;
                l++;
                if (l == lstSz) l = 0;
            }
            if (cnt < res) res = cnt;
            cnt++;
            sum += delta[lst[r]];
        }
    }
    return res;
}

int main()
{
    //srand(time(0));
    //freopen("input.txt", "r", stdin);

    scanf("%d%d", &n, &q);

    for (int i = 1; i <= n; i++) {
        scanf("%d", a + i);
    }

    while (q--) {
        ll b;
        cin >> b;
        cout << query(b) << "\n";
    }

    return 0;
}
