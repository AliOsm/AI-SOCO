#include <bits/stdc++.h>

using namespace std;

int n , q ;
string a  ;

unordered_map < char , vector < string > > masks ;
unordered_map < string , long long > dp ;
unordered_map < string , bool > vis ;
string ss ;
long long sol(string s)
{
    if ( s.size() == n ) return 1 ;
    if ( s.size() > n ) return 0 ;
    if ( vis[s] ) return dp[s] ;
    int ans = 0 ;
    for ( int i = 0 ; i < masks[s.front()].size() ; i++ )
    {
        ss = masks[s.front()][i] ;
        if ( s.size() > 1 )
            ss += s.substr(1) ;
        ans += sol(ss) ;
    }
    vis[s] = 1 ;
    dp[s] = ans ;
    return ans ;
}
string lol ;
int f( int ctr )
{

}
int main()
{
    ios_base::sync_with_stdio(0) ;
    cin.tie(0) ;

    cin >> n >> q ;
    int x , y  , z ;
    char b ;
    for ( int i = 0 ; i < q ; i++ )
    {
        cin >> a >> b ;
        masks[b].push_back(a) ;
    }
    cout << sol("a") ;
    return 0;
}
