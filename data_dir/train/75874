#include<bits/stdc++.h>

using namespace std;

const int maxn = 2e5 + 5;

typedef pair<int, int> pii;

set<pii> s;
vector<int> g[maxn];
int depth[maxn], inv[maxn], total;

void dfs(int u, int p){
    for(auto &v : g[u]){
        if(v != p){
            depth[v] = depth[u] + 1;
            if(s.find(pii(u, v)) == s.end())
                inv[v]++, total++;
            inv[v] += inv[u];
            dfs(v, u);
        }
    }
}

int main(){

    int n;
    scanf("%d", &n);

    for(int i = 1, a, b; i < n; i++){
        scanf("%d%d", &a, &b);
        g[a].push_back(b);
        g[b].push_back(a);
        s.insert({a, b});
    }

    dfs(1, 0);

    // cout << total << endl;
    // for(int i = 1; i <= n; i++)
    //     cout << i << " " << depth[i] << " " << inv[i] << endl;

    // //return 0;

    int ans = 1e9;
    vector<int> v;

    for(int i = 1; i <= n; i++){
        int sol = total - inv[i] + depth[i] - inv[i];
        if(sol < ans)
            ans = sol, v.clear(), v.push_back(i);
        else if(sol == ans)
            v.push_back(i);
    }

    printf("%d\n", ans);
    printf("%d", v[0]);
    for(int i = 1; i < (int)v.size(); i++)
        printf(" %d", v[i]);
    printf("\n");

    return 0;
}