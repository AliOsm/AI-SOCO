#include <bits/stdc++.h>

#define rep(i, n) for (int i = 0; i < (n); i++)
#define repr(i, n) for (int i = (n) - 1; i >= 0; i--)

using namespace std;
using ll = long long;

int main() {
  cin.tie(nullptr);
  ios::sync_with_stdio(false);
  int n, m;
  cin >> n >> m;
  vector<set<int>> g(n + 1);
  rep(i, m) {
    int u, v;
    cin >> u >> v;
    u--; v--;
    g[u].insert(v);
    g[v].insert(u);
  }
  rep(i, n) {
    if (g[i].size() % 2 == 1) {
      g[n].insert(i);
      g[i].insert(n);
    }
  }
  vector<pair<int, int>> ans;
  auto dfs = [&](auto dfs, int u) -> void {
    while (!g[u].empty()) {
      int v = *g[u].begin();
      g[u].erase(v);
      g[v].erase(u);
      dfs(dfs, v);
      ans.emplace_back(u, v);
    }
  };
  auto check = [&](pair<int, int> e) {
    return e.first == n || e.second == n;
  };
  vector<pair<int, int>> res;
  repr(x, n+1) {
    ans.clear();
    dfs(dfs, x);
    int i = 0;
    while (i < ans.size()) {
      if (check(ans[i])) {
        i++;
        continue;
      }
      int j = i;
      while (i < ans.size() && !check(ans[i])) i++;
      for (int k = j; k < i; k += 2) {
        res.push_back(ans[k]);
      }
      if ((i - j) % 2 == 0) {
        res.push_back(ans[i - 1]);
      }
    }
  }
  cout << res.size() << '\n';
  for (auto p : res) cout << p.first+1 << ' ' << p.second+1 << '\n';
}

