#include <bits/stdc++.h>
using namespace std;

#define int long long

vector <int> digits;

int dp[13][401][11];

int f(int idx, int s, int carry) {

        if(idx == digits.size()) {
               if(carry == 0) return s;
               return 0;
        }
        if(~dp[idx][s][carry]) return dp[idx][s][carry];
        int ret = 0;
        for(int i = 0; i <= 9; i++) {
                for(int j = 0; j <= 9; j++) {
                        if((i + j + carry) % 10 == digits[idx]) {
                                ret = max(ret, f(idx + 1, s + i + j, (i + j + carry) / 10));
                        }
                }
        }
        return dp[idx][s][carry] = ret;
}

int32_t main() {
        memset(dp, -1, sizeof dp);
        int n; cin >> n;
        while(n) {
            digits.push_back(n % 10);
            n /= 10;
        }
        cout << f(0, 0, 0) << endl;
}

