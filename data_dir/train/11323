#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 10;

int dep, now;
long long p, nowpos;
long long rec[64];
char s[N];
stack <int> st;

void findpos(){
	int d = 1;
	nowpos = rec[dep - 1];
	while (true){
		if (nowpos == p){
			now = d;
			break;
		}
		else if (nowpos < p){
			d++;
			nowpos += rec[dep - d];
			st.push(1);
		}
		else{
			d++;
			nowpos -= rec[dep - d];
			st.push(-1);
		}
	}
}

int main(){
	long long n, temp;
	int q, len;
	scanf("%I64d %d",&n,&q);
	temp = n + 1;
	dep = -1;
	while (temp > 0){
		dep++;
		temp >>= 1;
	}
	rec[0] = 1;
	for (int i = 1; i <= 60; i++) rec[i] = rec[i - 1] * 2;
	for (int i = 1; i <= q; i++){
		scanf("%I64d",&p);
		scanf("%s", s + 1);
		len = strlen(s + 1);
		while (!st.empty()) st.pop();
		findpos();
		for (int j = 1; j <= len; j++){
			if (s[j] == 'U'){
				if (now == 1) continue;
				nowpos -= rec[dep - now] * st.top();
				st.pop();
				now--;
			}
			else if (s[j] == 'L'){
				if (now == dep) continue;
				now++;
				nowpos -= rec[dep - now];
				st.push(-1);
			}
			else{
				if (now == dep) continue;
				now++;
				nowpos += rec[dep - now];
				st.push(1);
			}
		}
		printf("%I64d\n", nowpos);
	}
	return 0;
}