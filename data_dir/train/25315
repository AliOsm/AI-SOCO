#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_cxx;
using namespace __gnu_pbds;

template<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define ll long long
#define ull unsigned long long

int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    int n;
    cin >> n;
    const int N = 10;
    int cnt[N] = {} , cnt2[N] = {};
    int x;
    for(int i = 0 ; i < n ; i++) cin >> x , cnt[x]++;
    for(int i = 0 ; i < n ; i++) cin >> x , cnt2[x]++;

    int f = 0 , s = 0;
    for(int i = 0 ; i < N ; i++)
    {
        if((cnt[i] + cnt2[i]) % 2) return cout << -1 , 0;
        if(cnt[i] > cnt2[i]) f += (cnt[i] - cnt2[i]) / 2;
        else if(cnt[i] < cnt2[i]) s += (cnt2[i] - cnt[i]) / 2;
    }

    if(f != s) cout << -1;
    else cout << f;

    return 0;
}