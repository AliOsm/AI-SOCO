#include <bits/stdc++.h>
using namespace std;
#define finish(x) return cout << x << endl, 0;
#define ll long long

int n, m, x, y, s, t, ans, dist[2][1001];
bool exist[1001][1001];
vector <int> v[1001];
set <pair <int, int> > ready;

void work(int node, int ind){
    for(int i = 1 ; i <= n ; i++)
        dist[ind][i] = (int)1e9;
    ready.insert(make_pair(0, node));
    while(ready.size()){
        auto top = *ready.begin();
        ready.erase(ready.begin());
        if(dist[ind][top.second] < top.first) continue;
        dist[ind][top.second] = top.first;
        for(int i : v[top.second])
            ready.insert(make_pair(top.first+1, i));
    }
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    cin >> n >> m >> s >> t;
    for(int i = 0 ; i < m && cin >> x >> y ; i++)
        v[x].push_back(y), v[y].push_back(x), exist[x][y] = exist[y][x] = 1;
    work(s, 0);
    work(t, 1);
    int dis = dist[0][t];
    for(int i = 1 ; i <= n ; i++)
        for(int j = i+1 ; j <= n ; j++)
            if(exist[i][j] == 0 && min(dist[0][i]+dist[1][j]+1, dist[0][j]+dist[1][i]+1) >= dis) ans++;
    cout << ans << endl;
    return 0;
}
