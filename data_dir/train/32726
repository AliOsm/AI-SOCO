#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <string>
#include <memory.h>
#include <sstream>
#include <stack>
#include <deque>
#include <queue>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
using namespace std;
typedef long long ll;
const int N = 100000 + 10;
const int M = 1000000007;
const double PI = atan(1) * 4;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
vvi g;
vi v,primes,bst;
bool pr[2050010];
vector<vector<pair<int,int> > >last;
void add(int x, int u, int dth){
	int ls=-1;
	for(int i=0; i<primes.size() && x>1; ++i){
		if(x%primes[i]==0){
			if(!last[primes[i]].empty()){
				if(last[primes[i]].back().first>ls){
					ls=last[primes[i]].back().first;
					bst[u]=last[primes[i]].back().second;
				}
			}
			last[primes[i]].pb(make_pair(dth,u));
			while(x%primes[i]==0)
				x/=primes[i];
		}
	}
	if(x>1){
		if(!last[x].empty()){
			if(last[x].back().first>ls){
				ls=last[x].back().first;
				bst[u]=last[x].back().second;
			}
		}
		last[x].pb(make_pair(dth,u));
	}
}
void subt(int x, int u){
	for(int i=0; i<primes.size() && x>1; ++i){
		if(x%primes[i]==0){
			last[primes[i]].pop_back();
			while(x%primes[i]==0)
				x/=primes[i];
		}
	}
	if(x>1)
		last[x].pop_back();
}
void build(int u, int p, int d){
	add(v[u], u, d);
	for(int i=0; i<g[u].size(); ++i){
		int t = g[u][i];
		if(t==p)
			continue;
		build(t, u, d+1);
	}
	subt(v[u], u);
}
int main() {
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	int ct;
	for(ct=2; ct*ct<2e6+5e4; ++ct){
		if(pr[ct])
			continue;
		primes.pb(ct);
		for(int j=ct*ct; j<2e6+5e4; j+=ct)
			pr[j]=true;
	}
	int n,q;
	last.resize(2e6+10);
	cin>>n>>q;
	v.resize(n);
	g.resize(n);
	bst.resize(n,-2);
	for(int i=0; i<n; ++i)
		scanf("%d",&v[i]);
	for(int a,b,i=0; i<n-1; ++i){
		scanf("%d%d",&a,&b);
		--a;--b;
		g[a].pb(b);
		g[b].pb(a);
	}
	build(0,-1,0);
	while(q--){
		int t;
		scanf("%d",&t);
		if(t==1){
			int x;
			scanf("%d",&x);
			--x;
			printf("%d\n",bst[x]+1);
		}else{
			int x,y;
			scanf("%d%d",&x,&y);
			v[x-1]=y;
			bst.clear();
			bst.resize(n,-2);
			build(0,-1,0);
		}
	}
}