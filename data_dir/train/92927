#include<bits/stdc++.h>
#define f first
#define s second 
#define ll long long
#define pb push_back
#define mp make_pair
#define FX fflush(stdin);cout<<fixed,cout.precision(18);
#define iOS ios_base::sync_with_stdio(false);cin.tie(NULL);
#define pii pair<int,int>
#define pll pair<long long,long long>
#define all(x) x.begin(), x.end()
const char dl='\n';
const long double eps=0.00000001;
const long long MOD=1e9+7;
const long long mod=998244353;
const double PI=3.141592653589793238463;
const long double pi = 4 * atan(1.0);
using namespace std;
void debug() {cout<<endl;}
template <typename H, typename... T> void debug(H p, T... t) {
   std::cout << p<<" ";
   debug(t...);
}
string s,t;
ll ans;
int n,m,k;
ll a[200005],b[200005],c[200005],mx,sum;
main()
{
	FX iOS
	int i,j; 
	cin>>n>>m;
	multiset<pll>boys;
	for(i=0;i<n;++i)
	{
		cin>>a[i];
		sum+=a[i];
		mx=max(mx,a[i]);
		boys.insert({-a[i],-m});
	}
	for(i=0;i<m;++i)cin>>b[i];
	sort(b,b+m,greater<ll>());
	for(i=0;i<m;++i)
	{
		c[i]=sum;
		if(mx>b[i])
			return cout<<-1,0;
		if(mx<b[i])
		{
			ll give=0;
			ll can=0;
			bool found=false;
			while(boys.size())
			{
				auto it=boys.begin();
				boys.erase(it);
				if((*it).s==-1)continue;
				found=true;
				can=-((*it).s);
				give=-((*it).f);
				break;
			}
			if(!found)
				return cout<<-1,0;
			c[i]+=(b[i]-give);
			can--;
			if(can>1)
				boys.insert({-give,-can});
		}
	}
	for(i=0;i<m;++i)
		ans+=c[i];//,cout<<c[i]<<" ";
	cout<<ans;
}