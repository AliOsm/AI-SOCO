#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = 333;
const int mod = (int)1e9 + 7;
const int INF = (int)1e5 + 10;
int g[maxn],deg[maxn];
int cost[100005];
int dp1[100005],dp2[100005],dp3[100005];
bool used[maxn];
vector<int> cur;
void dfs(int v) {
    used[v] = true;
    cur.pb(v);
    if (g[v]) dfs(g[v]);
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    int n,q,t; cin >> n >> q >> t;
    for (int i = 1; i <= n; i++) {
        scanf("%d",&cost[i]);
    }
    for (int i = 0; i < q; i++) {
        int b,c; cin >> b >> c;
        deg[c]++;
        g[b] = c;
    }
    vector < vector<int> > v;
    for (int i = 1; i <= n; i++) {
        if (deg[i] != 0) continue;
        cur.clear();
        dfs(i);
        v.pb(cur);
    }
    for (int i = 1; i <= n; i++) {
        if (!used[i]) {
            cout << 0 << endl;
            return 0;
        }
    }
    int totA = 0;
    for (int i = 0; i < sz(v); i++) {
        int A = 0;
        reverse(all(v[i]));
        for (int j = 0; j < sz(v[i]); j++) {
            A += cost[v[i][j]] * j;
            if (A > t) {
                cout << 0 << endl;
                return 0;
            }
        }
        totA += A;
        if (totA > t) {
            cout << 0 << endl;
            return 0;
        }
    }
    dp2[totA] = 1;
    for (int i = 0; i < sz(v); i++) {
        vector<int> sum(sz(v[i]));
        for (int j = 0; j < sz(v[i]); j++) {
            sum[j] = cost[v[i][j]];
        }
        for (int j = sz(v[i]) - 2; j >= 0; j--) {
            sum[j] += sum[j + 1];
            if (sum[j] > INF) sum[j] = INF;
        }
        for (int j = 0; j < sz(v[i]); j++) {
            for (int k = totA + sum[j]; k <= t; k++) {
                dp2[k] += dp2[k - sum[j]];
                dp2[k] %= mod;
            }
        }
    }
    cout << dp2[t] << endl;
    return 0;
}
