#include <bits/stdc++.h>

using namespace std;

#define SZ(x) ((int)(x).size())
#define PB(x) push_back(x)
#define MEMSET(x,v) memset(x,v,sizeof(x))
#define REP(i,n) for(int i=0;(i)<(n);++(i))
#define x first
#define y second
#define INF (0x3f3f3f3f)

typedef long long LL;
typedef pair<int, int> P2;
template<class A, class B> inline bool mina(A &x, B y) {return (x > y)?(x=y,1):0;}
template<class A, class B> inline bool maxa(A &x, B y) {return (x < y)?(x=y,1):0;}

const int MAXN = 100005;

LL M, A, B;
LL minReq[MAXN];

int main() {
    cin >> M >> A >> B;
    int cur = 0;
    int minn = 0;
    MEMSET(minReq, -1);
    minReq[cur] = minn;
    while (true) {
        if (cur >= B) {
            cur -= B;
            assert(cur < A);
            if (cur == 0) break;
            minReq[cur] = minn;
        } else {
            cur += A;
            minn = max(minn, cur);
        }
    }
    // REP(i, A) {
    //     cerr << minReq[i] << endl;
    // }

    LL res = 0;
    REP(i, A) {
        if (minReq[i] == -1)
            continue; // unreachable
        if (minReq[i] > M)
            continue; // out of range
        LL num_before_minR = (minReq[i] - i - 1) / A + 1;
        res += (M - minReq[i] + 1) * num_before_minR;
        LL start = i + num_before_minR * A;
        if (start <= M) {
            LL cnt = (M - start) / A + 1;
            LL last = start + A * (cnt - 1);
            LL start_v = (M - start + 1);
            LL last_v =(M - last + 1);
            res += (start_v + last_v) * cnt / 2;
        }
    }
    cout << res << endl;
    return 0;
}
