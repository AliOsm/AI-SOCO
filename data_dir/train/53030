// start of CP 2.0
#include <bits/stdc++.h>

//____By:sirjan13____

#define ll long long int
#define ld long double
#define mod 1000000007
#define mod1 mod
#define mod2 100000009
#define show(a) for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define vll vector<ll>
#define pb push_back
#define pi pair<int,int>
#define si set<int>
#define sll set<ll>
#define pll pair<ll, ll>
#define sci(x) scanf("%d",&x)
#define scs(x)  scanf("%s", x)
#define scll(x) scanf("%I64d",&x)
#define all(v) v.begin(),v.end()
#define sot(v) sort(v.begin(), v.end())
#define maxheap priority_queue<int>
#define minheap priority_queue<int,vector<int>,greater<int>>
#define mp make_pair
#define fast_io() cin.sync_with_stdio(false);cout.sync_with_stdio(false);
#define PI 3.1415926535
#define long_zero 0ll
#define long_one 1ll

inline int sbt(int x){return __builtin_popcount(x);}

using namespace std;

#define TRACE
#ifdef TRACE
#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << std::endl;
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define deb(...)
#endif
#define N 113
#define M 2013

int n;
struct ele {
    int ind, t, d, p;
    bool operator<(ele &a) {
        return d < a.d;
    }
} a[N];

int dp[N][M];
vi stored;

int f(int i, int t) {
    if(i > n) return 0;
    if(dp[i][t] != -1) return dp[i][t];
    if((a[i].t + t) >= a[i].d)  return dp[i][t] = f(i + 1, t);
    int res = 0;
    res = max(res, a[i].p + f(i + 1, t + a[i].t));
    res = max(res, f(i + 1, t));
    return dp[i][t] = res;
}

void calc(int i, int t) {
    if(i > n) return;
    if((t + a[i].t) >= a[i].d) {
        calc(i + 1, t);
        return;
    }
    if(f(i + 1, t + a[i].t) + a[i].p > f(i + 1, t)) {
        stored.pb(i);
        calc(i + 1, t + a[i].t);
        return;
    }
    calc(i + 1, t);
}

bool cmp(int i, int j) {
    return a[i].d < a[j].d;
}

int main() {
    fast_io()
    cin >> n;
    for(int i = 1; i <= n; i++) {
        cin >> a[i].t >> a[i].d >> a[i].p;
        a[i].ind = i;  
    }
    memset(dp, -1, sizeof dp);
    sort(a + 1, a + n + 1);
    int res = f(1, 0);
    cout << res << endl;
    calc(1, 0);
    cout << stored.size() << endl;
    sort(all(stored), cmp);
    for(auto ell: stored) cout << a[ell].ind << " ";
	return 0;
}
