#include <bits/stdc++.h>
using namespace std;

#define int           long long
#define S             second
#define F             first
#define pb            push_back
#define all(c)        (c).begin(),(c).end()
#define rall(c)       (c).rbegin(),(c).rend() 
#define lb            lower_bound
#define si(c)         (int)((c).size())
#define lcm(a, b)      (a * (b / __gcd(a,b)))  
#define inf           (long long)(2e18)
#define endl          '\n'
#define mp            make_pair
#define time(s)       (double(clock()-s)/double(CLOCKS_PER_SEC))
#define debug(args...)    _F(#args, args)
#define vi            std::vector<int>
#define pii           pair<int, int> 
#define vpi           vector<pii>

clock_t start;
mt19937_64 rng(chrono::system_clock::now().time_since_epoch().count());

template<typename T> void _F(const char *name, T arg1){
    cerr << name << " = " << arg1 << endl;
}
template<typename T, typename... Args> void _F(const char *names, T arg1, Args... args){
    const char *name = strchr(names, ',');
    cerr.write(names, name-names) << " = " << arg1 << endl;
    _F(name+2, args...);
}

void solve(){
    int n;
    double T;
    cin >> n >> T;
    double t[n], a[n];
    for(int i = 0; i < n; i++){
        cin >> a[i];
    }
    for(int j = 0; j < n; j++){
        cin >> t[j];
    }
    double ans = 0, pp = 0, nn = 0;
    std::vector<pair<double, double> > po, ne;
    for(int i = 0; i < n; i++){
        if(t[i] > T)po.pb({t[i]-T, a[i]}), pp += a[i]*(t[i]-T);
        else if(t[i] < T)ne.pb({T-t[i], a[i]}), nn += a[i]*(T-t[i]);
        else ans += a[i];
    }
    if(pp >= nn){
        sort(all(po));
        for(auto u : ne)ans += u.S;
        int j = 0;
        while(nn){
            if(po[j].F*po[j].S <= nn){
                ans += po[j].S;
                nn -= po[j].F*po[j].S;
                j++;
            }else{
                ans += nn/po[j].F;
                nn = 0;
            }
        }
    }else{
        sort(all(ne));
        for(auto u : po)ans += u.S;
        int j = 0;
        while(pp){
            if(ne[j].F*ne[j].S <= pp){
                ans += ne[j].S;
                pp -= ne[j].F*ne[j].S;
                j++;
            }else{
                ans += pp/ne[j].F;
                pp = 0;
            }
        }
    }
    cout << ans << endl;
}

signed main(){

    ios_base::sync_with_stdio(0); 
    cin.tie(0); cout.tie(0);   

    int t = 1;
    start = clock(); 

    cout << fixed << setprecision(12);

    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin); 
    freopen("output.txt", "w", stdout);
    freopen("error.txt", "w", stderr);
    #endif

    //cin >> t;
  
    for(int i = 1; i <= t; ++i){
        solve();
    }
    //cerr << time(start);
    return 0;
}