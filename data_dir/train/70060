#include <bits/stdc++.h>

using namespace std;

int n, k;
vector < pair <int, int> > e;
vector <int> v;

int go(int cnt, int leaf) {
  if (cnt == 1) {
    v.push_back(1);
    return 1 + 1;
  } else if (cnt == 2) {
    v.push_back(1);
    v.push_back(2);
    e.push_back({1, 2});
    return 1 + 1 + 1;
  } else {
    int k = 0;
    for (int i = 2; i <= cnt; ++i) {
      if (v.size() <= k) {
	v.push_back(i);
	e.push_back({1, i});
      } else {
	e.push_back({v[k], i});
	v[k] = i;
      }
      ++k;
      if (k == leaf) k = 0;
    }
    int a = (cnt - 1) / leaf;
    int b = (cnt - 1) % leaf;
    if (b == 0) {
      return a + a + 2;
    } else if (b == 1) {
      return a + a + 1 + 2;
    } else {
      return a + a + 1 + 1 + 2;
    }
  }
}

void add(int l, int r) {
  int k = 0;
  for (int i = l; i <= r; ++i) {
    e.push_back({v[k], i});
    ++k;
    if (k == v.size()) k = 0;
  }
}


int main() {
  scanf("%d%d", &n, &k);
  int t = min(n - k - 1, k);
  int d = go(n - k, t);
  add(n - k + 1, n);
  printf("%d\n", d);
  for (auto ee : e) {
    printf("%d %d\n", ee.first, ee.second);
  }
  return 0;
}
