#include <bits/stdc++.h>

#define pb push_back
#define pp pop_back
#define mp make_pair
#define ld long double
#define f first
#define s second
#define ll long long

using namespace std;

const int N = 1e5 + 5;

const int mod = 1e9 + 7;

void add(int &a, int b)
{
  a += b;
  if (a >= mod) a -= mod;
}

int sum(int a, int b)
{	
  add(a, b);
  return a;
}

int mult(int a, int b)
{
  return (1ll * a * b) % mod;
}

int n, a[N], ans, k, pre[N], carry = 1;

unordered_map < int, int > bad, was;

int gcd(int a, int b)
{
  while(b)
  {
    a %= b;
    swap(a, b);
  }
  return a;
}

int calc(int x)
{
  if (x == 1) return 0;
  if (was.count(x)) return was[x];
  for (int i = 2;1ll * i * i <= x;i++)
    if (x % i == 0)
      return was[x] = calc(x / i) + (bad[i] ? -1 : 1);
  return was[x] = calc(x / x) + (bad[x] ? -1 : 1);
}

int get(int x)
{
  return pre[x] / carry;
}

int main()
{
  ios_base::sync_with_stdio(0);
	
  clock_t start = clock();

  cin >> n >> k;
  for (int i = 1;i <= n;i++) cin >> a[i];
  for (int i = 1, x;i <= k;i++)
  {
    cin >> x;
    bad[x] = 1;
  }
  for (int i = 1;i <= n;i++) 
  {
    ans += calc(a[i]);
    pre[i] = gcd(pre[i - 1], a[i]); 
  }
  for (int i = n;i;i--)
  {
    int x = get(i);
    int y = calc(x);
    if (y <= 0) 
    {
      carry *= x;
      ans -= i * y;
    }
  }
  cout << ans << endl;
  
  double duration = ((double) clock() - start) / (double) CLOCKS_PER_SEC;
//  cout << "Time: " << fixed << setprecision(10) << duration << endl;
	
  return 0;
}