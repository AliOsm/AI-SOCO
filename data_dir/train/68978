#include <bits/stdc++.h>

#define fi first
#define se second
#define p_b push_back
#define pll pair<ll,ll>
#define endl "\n"
#define m_p make_pair
#define all(x) x.begin(),x.end()
#define ld long double

using namespace std;
typedef long long ll;
const ll MAXN = 1123456;
const ll MOD = 998244353;

template <typename T>
T sqr(T x){
    return x * x;
}

template <typename T>
void vout(T s){
    cout << s << endl;
    exit(0);
}

ll bp(ll a,ll n){
    ll res = 1;
    while(n){
        if(n % 2)res *= a;
        a *= a;
        n >>= 1;
    }
    return res;
}

ll dp[21][1200][2];
ll sum[21][1200][2];

ll f(ll x){
    return 1ll << x;
}

ll mult(ll a, ll b){
    return (a * b) % MOD;
}

void u(ll &a, ll b){a = (a + b) % MOD;}

ll calc(ll what, ll k){
    if(!what)return 0;
    vector <ll> a;
    ll x = what;

    while(x){
        a.p_b(x % 10);
        x /= 10;
    }
    reverse(all(a));

    ll len = a.size();
    ll ans = 0;
    for(int mb_len = 1; mb_len <= len; mb_len++){

        for(int i = 0; i < 21; i++)
        for(int j = 0; j < 1200; j++){
            dp[i][j][0] = dp[i][j][1] = 0;
            sum[i][j][0] = sum[i][j][1] = 0;
        }

        for(int i = 1; i < 10; i++){
            if(mb_len < len){
                    dp[1][f(i)][0] = 1;
                    sum[1][f(i)][0] = i;
            }else{
                if(i < a[0]){
                    dp[1][f(i)][0] = 1;
                    sum[1][f(i)][0] = i;
                }else if(i == a[0]){
                    dp[1][f(i)][1] = 1;
                    sum[1][f(i)][1] = i;
                }
            }
        }

        for(int i = 1; i < mb_len; i++){
            for(int old_musk = 0; old_musk < 1200; old_musk++){
                for(int digits = 0; digits < 10; digits++){
                    ll new_musk = f(digits) | old_musk;
                    u(dp[i + 1][new_musk][0], dp[i][old_musk][0]);
                    u(sum[i + 1][new_musk][0], mult(sum[i][old_musk][0], 10ll) + mult(digits, dp[i][old_musk][0]));
                    if(mb_len < len || digits < a[i]){
                        u(dp[i + 1][new_musk][0], dp[i][old_musk][1]);
                        u(sum[i + 1][new_musk][0], mult(sum[i][old_musk][1], 10ll) + mult(digits, dp[i][old_musk][1]));
                    }else if(digits == a[i]){
                        u(dp[i + 1][new_musk][1], dp[i][old_musk][1]);
                        u(sum[i + 1][new_musk][1], mult(sum[i][old_musk][1], 10ll) + mult(digits, dp[i][old_musk][1]));
                    }
                }
            }
        }

        for(int i = 1; i < 1200; i++){
            if(__builtin_popcount(i) <= k)u(ans, sum[mb_len][i][0] + sum[mb_len][i][1]);
        }
    }

    return ans;
}

int main(){
    ios_base :: sync_with_stdio(0);
    cin.tie(0);
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ll l, r, k;
    cin >> l >> r >> k;
    ll res = calc(r, k) - calc(l - 1, k);
    while(res < 0)res += MOD;
    cout << res << "\n";
    cerr << "Time execute: " << clock() / (double)CLOCKS_PER_SEC << " sec" << endl;
    return 0;
}
