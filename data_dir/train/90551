#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <functional>
#include <set>
#include <map>
#include <string>
#include <queue>
#include <stack>
#include <cstring>
#include <iterator>
#include <cmath>
#include <unordered_set>
#include <unordered_map>
#include <bitset>
#include <chrono>

using namespace std;
typedef int mt;
//#define mt int
#define rep(a, b, i) for(register mt i = a; i < b; ++i)
#define repe(a, b, i) for(register mt i = a; i <= b; ++i)
#define repd(a, b, i) for(register mt i = a; i > b; --i)
#define repde(a, b, i) for(register mt i = a; i >= b; --i)

#define N 2011
#define K 27
#define P 2
#define M (10001)
#define INF 8600000000000000007//10000000000000007// 1e16 + 7//100000000000000007
//const mt inf = 8600000000000000007;
#define MOD 1000000007ll  //1000000007//1e9 + 7
#define EPS 1e-6
#define MAX 1000000000000000001
//#pragma comment(linker, "/STACK:200000000")

mt n, m, k, answ;
char s[N][N];
int main(void)
{
#ifdef _DEBUG
	freopen("in.txt", "r", stdin);
#endif
	scanf("%d %d %d", &n, &m, &k);
	rep(0, n, i) 
		scanf("%s", s[i]);
	rep(0, n, i) {
		mt x = 0;
		rep(0, m, j) {
			if (s[i][j] == '.') ++x;
			else answ += max(x - k + 1, 0), x = 0;
		}
		answ += max(x - k + 1, 0), x = 0;
	}
	if (k > 1) {
		rep(0, m, j) {
			mt x = 0;
			rep(0, n, i) {
				if (s[i][j] == '.') ++x;
				else answ += max(x - k + 1, 0), x = 0;
			}
			answ += max(x - k + 1, 0), x = 0;
		}
	}

	printf("%d\n", answ);

	return 0;
}