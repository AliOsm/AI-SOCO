
	/*If you are slow ,try hard and become fast 
		If you are making mistakes , learn from them and correct them
			If you are weak in something , do practice and become good at it
	*/
/* Don't do just for the sake ... learn from it , that is more important */

//Don't Think Just Do It!!
//only for brute force
//#pragma GCC optimize("Ofast")
//#pragma GCC optimize("unroll-loops")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,fma,abm,mmx,avx,avx2,tune=native")

#include <bits/stdc++.h>
using namespace std;

//#define TRACE
 
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
	cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
	const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

clock_t time_p=clock();
void rtime(){ time_p=clock()-time_p; cerr<<"Time Taken : "<<(float)1000*(time_p)/CLOCKS_PER_SEC<<"\n";}

#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define nl "\n"
#define pp pair < ll , ll > 
#define sz(x) (ll)x.size()
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
long double pi = 3.14159265358979323;
 
const double EPS = 1e-12;
const int N = 2e5 + 5;
const int mod = 1e9 + 7;
 
ll a[N],parent[N],sz[N];
 
void init(ll n){
	for(int i = 1 ;  i <= n ; i++ ){
		parent[i] = i;
		sz[i] = 1;
	}
}
ll find_parent(ll v){
	if(v == parent[v])return v;
	return parent[v] = find_parent(parent[v]);
}
bool join(ll x , ll y){
	x = find_parent(x);
	y = find_parent(y);
	if(x == y)return false;
	if(sz[x] < sz[y])swap(x,y);
	parent[y] = x;
	sz[x] += sz[y];
	return true;
} 
int main()
{
    fast;
    ll n , m;
    cin >> n >> m ;
    vector < pp > v;
    for(int i = 1 ; i <= n ;i++ ){
     	cin >> a[i];
     	v.pb({a[i],i});       
    }
    st(v);
   
    vector < pair < ll , pair < ll , ll > > > edges;
   
    ll a , b , c;
    for(int i = 0 ; i < m ;i++ ){
            cin >> a >> b >> c;
            edges.pb({c,{a,b}});
    }
    ll idx = v[0].se , val = v[0].fe;
    for(int i = 1 ;  i < n ; i++ ){
    	edges.pb({val + v[i].fe,{idx , v[i].se}});
    }

    init(n);
    //there will be total of m + n edges we have to consider
    st(edges);
    ll ans = 0 ;
    for(auto it : edges){
    	if(join(it.se.fe , it.se.se)){
    		ans += it.fe;
    	}
    }
    cout << ans;

    





















    
    return 0;
    
}