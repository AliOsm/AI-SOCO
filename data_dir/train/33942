#include <bits/stdc++.h>
using namespace std;

const int MAX = 4e5 + 5;
const int INF = 1e9;
int n, m, x, y;
int a[MAX][8];
pair <int, int> v[1 << 8];

bool can(int K) {
	for(int i = 1; i <= n; i++) {
		int msk = 0;

		for(int j = 0; j < m; j++) {
			if(a[i][j] < K) {
				msk |= 1 << j;
			}
		}

		// printf("i = %d, %d %d\n", i, v[msk].first, v[msk].second);

		if(msk == 0) {
			x = y = i;
			return true;
		}

		if(v[msk].first != -1 && v[msk].first >= K) {
			x = i;
			y = v[msk].second;
			return true;
		}
	}

	return false;
}

int main() {
	scanf("%d%d", &n, &m);

	for(int i = 1; i < (1 << m); i++) {
		v[i] = { -1, -1 };
	}

	for(int i = 1; i <= n; i++) {
		for(int j = 0; j < m; j++)
			scanf("%d", &a[i][j]);

		for(int msk = 1; msk < (1 << m); msk++) {
			int mn = INF;

			for(int k = 0; k < m; k++) {
				if(msk & 1 << k) {
					mn = min(mn, a[i][k]);
				}
			}

			v[msk] = max(v[msk], make_pair(mn, i));
		}
	}

	int st = 0, nd = INF, ans = 0;

	while(st <= nd) {
		int mid = (st + nd) >> 1;

		if(can(mid)) {
			ans = max(ans, mid);
			st = mid + 1;
		}

		else nd = mid - 1;
	}

	printf("%d %d\n", x, y);
	return 0;
}