#include <bits/stdc++.h>

using namespace std;

const int inf = (int)(1e9) + 100;
const int mod = (int)(1e9) + 7;
const int N = (int)(2e5) + 100;

#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define ff first
#define ss second
#define ll long long
#define pii pair <int, int>
#define pll pair <ll, ll>
#define vi vector <int>
#define vll vector <ll>
#define vpi vector <pii>
#define vpl vector <pll>
#define sc1(a) scanf("%d", &a)
#define sc2(a, b) scanf("%d%d", &a, &b)
#define frw(i, p, n) for(int i = p; i <= n; i++)
#define bck(i, n, p) for(int i = n; i >= p; i--)
#define mem(a) memset(a, 0, sizeof(a))


//Elibay tebe konec :D (c) Sabo
// Burger King 
// Google Sabo

int n, m;
int a[N], was[N];
map <int, int> card;
int odd = 0, even = 0, mnodd = 1, mneven = 2, cnt = 0;
     
void get_ans(int x){
	cout << x << endl;
	for(int i = 1; i <= n; i++) cout << a[i] << ' ';
	exit(0);
}



void get_no(){
	cout << -1;
	exit(0);
}

int get_next(int & num){
	while(card.count(num)) num+=2;
//	cout << "mynum : " << num << endl;
	if(num > m) get_no();
	card[num] = 1;
	return num;	
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	for(int i = 1; i <= n; i++){
		cin >> a[i];
		odd += (a[i]%2 == 1);
		even += (a[i]%2 == 0);
		if(card.count(a[i])) was[i] = 1;
		card[a[i]] = 1;
	}
	if(odd == even && card.size() == n){
		get_ans(0);
	}
	for(int i = 1; i <= n; i++){
		if(!was[i]) continue;
		if(odd > even){
			if(a[i]%2 == 1){
				a[i] = get_next(mneven);
				odd--;
				even++;
				cnt++;
			}
			else{
				a[i] = get_next(mneven);
				cnt++;
		  	}
      	}
      	else if(odd < even){
      		if(a[i]%2 == 0){
				a[i] = get_next(mnodd);
				odd++;
				even--;
				cnt++;
			}
			else{
				a[i] = get_next(mnodd);
				cnt++;
		  	}	
      	}
      	else{
      		if (a[i]%2 == 1){
				a[i] = get_next(mnodd);
				cnt ++;
			}
			else{
				a[i] = get_next(mneven);
				cnt ++;
			}	
      	}
	}
//	cout << odd << ' ' << even << ' ';
	if(odd == even){
		get_ans(cnt);
	}
	for(int i = 1; i <= n; i++){
		if(odd == even){
			get_ans(cnt);
		}
		if(odd > even){
			if(a[i]%2 == 1){
				a[i] = get_next(mneven);
				odd--;
				even++;
				cnt++;
			}
      	}
      	else if(odd < even){
      		if(a[i]%2 == 0){
				a[i] = get_next(mnodd);
				odd++;
				even--;
				cnt++;
			}
      	}
	}
	get_ans(cnt);
	#ifndef ONLINE_JUDGE
        fprintf(stderr, "Time: %d ms\n", (int)(clock() * 1000. / CLOCKS_PER_SEC));
    #endif
	return 0;
}
