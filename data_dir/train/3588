#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <set>

using namespace std;

vector < int > g[111111];
bool used[111111];

void dfs(int v, int& cnt) {
	if (used[v])
		return;
	cnt++;
	used[v] = true;
	for (auto u : g[v]) {
		dfs(u, cnt);
	}
}

int main() {
	ios_base :: sync_with_stdio(false);
	cin.tie(0);
	int test = 0;
	int n, k;
	cin >> n >> k;
	for (int i = 0; i < k; i++) {
		int x, y;
		cin >> x >> y;
		x--; y--;
		g[x].push_back(y);
		g[y].push_back(x);
	}
	int ans = 0;
	for (int i = 0; i < n; i++) {
		if (used[i]) continue;
		int cnt = 0;
		dfs(i, cnt);
		ans += cnt - 1;
	}
	cout << k - ans;
	return 0;
}