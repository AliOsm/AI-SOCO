#include<bits/stdc++.h>
#define int long long
#define ll long long
#define ld long double
#define F first
#define S second
using namespace std;

const int MAXN = 111 ;

int dp [ MAXN ] [ MAXN ] [ MAXN ] =  {} ;

int c [ MAXN ] [ MAXN ] = {} , col [ MAXN ] = {} ;

int32_t main()
{

    ios::sync_with_stdio(0);
    cin.tie(0) ;
    int n , m , k ;
    cin >> n >> m >> k ;
    for(int i = 0 ; i < n ; i ++ )
        cin >> col[i];
    for(int i = 0 ; i < n ; i ++ )
        for(int j = 1 ; j <= m ; j ++ )
            cin >> c[i][j] ;
    for(int i = 0 ; i < n ; i ++ )
        for(int j = 1 ; j <= m ; j ++ )
           for(int q = 0 ; q <= k ; q ++ )
                dp[i][j][q] = 1e18 ;
    if(col[0])
    {
        dp[0][col[0]][1] = 0 ;
    }
    else
    {
        for(int i = 1 ; i <= m ; i ++ )
            dp[0][i][1] = c[0][i] ;
    }
 //   cout << dp[0][1][1]<<endl;

    for(int i = 1 ; i < n ; i ++ )
    {
        for(int j = 1 ; j <= m ; j ++ )
        {
            if(col[i]&&col[i]!=j)
                continue ;
            for(int q = 1 ; q <= k ; q ++ )
            {
                if(col[i])
                {
                    dp[i][j][q] = dp[i-1][j][q] ;
                    for(int w = 1 ; w <= m ; w ++ )
                        if(w!=j)dp[i][j][q] = min(dp[i][j][q],dp[i-1][w][q-1]) ;
                }
                else
                {
                    dp[i][j][q] = dp[i-1][j][q] + c[i][j] ;
                    for(int w = 1 ; w <= m ; w ++ )
                        if(w!=j)dp[i][j][q] = min(dp[i][j][q],dp[i-1][w][q-1]+c[i][j]) ;
                }

          //      cout << i << ' '<<j << ' ' << q << ' ' << dp[i][j][q] << '\n';
            }
        }
    }
    int ans = 1e18 ;
    for(int i = m ; i >= 1 ; i -- )
        ans = min(ans,dp[n-1][i][k]) ;
    cout << (ans>1e17?-1:ans);





}
