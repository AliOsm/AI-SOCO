#include <iostream>
#include <cstring>
using namespace std;

const int MAXN=100000+9;

void normalize(int *A)
{
	/*
    for(int i=MAXN-3; i>=0; i--)
	{
        if(A[i]==1 && A[i+1]==1)
		{
			A[i]=0; A[i+1]=0; A[i+2]+=1;
		}
	}
	*/
    int i=0, j;
    int bnd=MAXN-3;
    while(i<=bnd)
	{
        if(A[i]==0)
		{
			i++;
			continue;
		}
        j=i;
        while(j+1<=bnd && A[j+1]==1) j++;
		for(int k=j+1; k>i+1; k-=2)
		{
			A[k]++;
			A[k-1]--;
			A[k-2]--;
		}
		i=j+1;
	}
}

int a[2][MAXN];
int solve(void)
{
	normalize(a[0]); normalize(a[1]);
	/*
	for(int i=0; i<2; i++)
	{
		for(int j=0; j<10; j++) cout << a[i][j] << ' ';
		cout << '\n';
	}
	*/

    for(int i=MAXN-1; i>=0; i--)
	{
		if(a[1][i]!=a[0][i]) return a[1][i]>a[0][i] ? 1 : 0;
	}
	return 2;
}

int main()
{
	string s;
	for(int i=0; i<2; i++)
	{
		memset(a[i], 0, MAXN*sizeof(int));
		cin >> s;
		int len=s.size();
		for(int j=0; j<len; j++) a[i][len-1-j]=s[j]-'0';
	}

	int temp=solve();
	if(temp==0) cout << ">";
	else if(temp==2) cout << "=";
	else cout << "<";
	return 0;
}
