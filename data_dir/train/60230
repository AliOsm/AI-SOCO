#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
using namespace std;

#define REP(i,n) for(int i=0; i<n; ++i)
#define FOR(i,a,b) for(int i=a; i<=b; ++i)
#define FORR(i,a,b) for (int i=a; i>=b; --i)
#define ALL(c) (c).begin(), (c).end()

typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef pair<int,int> P;
typedef pair<ll,ll> PL;

int mp(int x, int y){
	if (2*x > y) return 500;
	if (4*x > y) return 1000;
	if (8*x > y) return 1500;
	if (16*x > y) return 2000;
	if (32*x > y) return 2500;
	return 3000;
}

int main() {
	int n, m = 5;
	cin >> n;
	VI t1(m), t2(m), a(m);
	REP(i,n){
		REP(j,m){
			int t;
			cin >> t;
			if (t >= 0) a[j]++;
			if (i == 0) t1[j] = t;
			if (i == 1) t2[j] = t;
		}
	}

	VI win(m);
	bool imp = true;
	REP(j,m){
		if (t1[j] != -1 && (t1[j] < t2[j] || t2[j] == -1)) win[j] = 1, imp = false;
	}

	if (imp){
		cout << -1 << endl;
		return 0;
	}

	REP(i,1000000){
		int p = n + i;
		int s1 = 0, s2 = 0;
		REP(j,m){
			if (t1[j] != -1) s1 += mp(a[j], p) / 250 * (250 - t1[j]);
			if (t2[j] != -1) s2 += mp(a[j], p) / 250 * (250 - t2[j]);
		}
		if (s1 > s2){
			cout << i << endl;
			return 0;
		}
		REP(j,m){
			if (!win[j] && t1[j] != -1) a[j]++;
		}
	}
	cout << -1 << endl;

    return 0;
}