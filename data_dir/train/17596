#include <bits/stdc++.h>
using namespace std;

const int N = 2e3+5;
int n, m, a, b, dx, dy;
char g[N][N];
bool vis[N][N];
deque< pair<pair<int, int>, pair<int, int> > > q;

bool valid(int i, int j) {
    return i>=0 && j>=0 && i<n && j<m;
}

int bfs() {
    q.push_back({{a, b}, {dx, dy}});
    int res = 0;
    while (!q.empty()) {
        auto it = q.front();
        q.pop_front();
        int x = it.first.first;
        int y = it.first.second;
        int rx = it.second.first;
        int ry = it.second.second;
        if (vis[x][y])
            continue;
        vis[x][y] = true;
        res++;
        if (valid(x-1, y) && g[x-1][y] == '.') 
            q.push_front({{x-1, y}, {rx, ry}});
        if (valid(x+1, y) && g[x+1][y] == '.') 
            q.push_front({{x+1, y}, {rx, ry}});
        if (valid(x, y-1)  && g[x][y-1] == '.' && rx > 0) 
            q.push_back({{x, y-1}, {rx-1, ry}});
        if (valid(x, y+1)  && g[x][y+1] == '.' && ry > 0) 
            q.push_back({{x, y+1}, {rx, ry-1}});
    }
    return res;
}

int main() {
    cin >> n >> m >> a >> b >> dx >> dy;
    a--, b--;
    for (int i=0; i<n; i++)
        cin >> g[i];
    cout << bfs();
}