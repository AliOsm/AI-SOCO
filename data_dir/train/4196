#pragma GCC optimize ("O3")
/*
    Prodigia comploratus,
    silens, oro:
    "Regnet exitium."
*/
#include "bits/stdc++.h"
using namespace std;
using ll = long long;
using db = long double;
const int N = 1e6+6, MOD = 1e9 + 7;
vector<int> go[N];
int n, x;
int a[N];
int ab[N], ba[N];
int main(){
    cin>> n >> x;
    bool f = true;
    long long ans =1;
    for(int i= 1; i <= n; i++){
        cin >> a[i];
        f &= (a[i] >= a[i-1]);
        go[a[i]].push_back(i);
    }
    if(f){
        cout << 1ll * x * (x + 1) / 2 << '\n';
        return 0;
    }
    int mxPrefix = 0, mxSuffix=x+1;
    int b4 = 0;
    for(int i = 1; i <= x; i++){
        if(go[i].empty()){
            ab[i]=b4;
            mxPrefix=i;
            ans++;
            continue;;
        }
        if(go[i][0] < b4)break;
        mxPrefix = i;
        ans++;
        b4 = go[i].back();
        ab[i]=b4;
    }
    b4 = n + 1;
    for(int i = x; i >= 1;--i){
        if(go[i].empty()){
            mxSuffix=i;
            ba[i]=b4;
            ans++;
            continue;
        }
        if(go[i].back() > b4)break;
        mxSuffix=i;
        ans++;
        b4 = go[i][0];
        ba[i] = b4;
    }
    for(int i = 1; i <= mxPrefix&&ab[i]<ba[x]; i++){
        ///see those such that go[i].back() < go[i][0]
        int lo = mxSuffix,hi=x;
        while(lo <hi){
            int md = lo+(hi-lo)/2;
            if(ab[i]<ba[md])
                hi=md;
            else
                lo=md+1;
        }
        ans+=(x-lo+1);
    }

    cout << ans << '\n';

    return 0;
}
