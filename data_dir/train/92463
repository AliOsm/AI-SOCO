#include <functional>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <cstdlib>
#include <numeric>
#include <iomanip>
#include <cstring>
#include <cassert>
#include <memory>
#include <chrono>
#include <cstdio>
#include <bitset>
#include <vector>
#include <math.h>
#include <queue>
#include <stack>
#include <ctime>
#include<list>
#include <set>
#include <map>

using namespace std;

#define rep(i,a,n) for (int i=(a);i<(n);i++)
#define per(i,n,a) for (int i=(n)-1;i>=(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) (int)x.size()

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef pair<ll,ll> pll;
typedef pair<int,int> pii;

template <typename T>
T nextInt() {
    T x = 0, p = 1;
    char ch;
    do { ch = getchar(); } while(ch <= ' ');
    if (ch == '-') {
        p = -1;
        ch = getchar();
    }
    while(ch >= '0' && ch <= '9') {
        x = x * 10 + (ch - '0');
        ch = getchar();
    }
    return x * p;
}

const int maxn=(int)5e6+10;
const int inf=(int)1e9+5;
const int mod=(int)1e9+7;
const ll llinf=(ll)1e18+5;
const ld pi=acos(-1.0);

int d[maxn];

int main() {

    //freopen("input.txt", "r", stdin);
   // freopen("output.txt", "w", stdout);

    ios_base::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--){
        char c;
        cin>>c;
        if(c=='+'||c=='-'){
            ll x;
            cin>>x;
            int m=0;
            rep(i,0,20){
                int c=x%10;c%=2;
                m|=c<<i;
                x/=10;
            }
            if(c=='+'){
                d[m]++;
            }else if(c=='-')d[m]--;
        }
        else {
            int m=0;
            string s;
            cin>>s;
            rep(i,0,s.length()){
                m|=(s[s.length()-1-i]-'0')<<i;
            }
            cout<<d[m]<<'\n';
        }

    }
    return 0;
}
