#include <iostream>
using namespace std;

int dp[500001][26];
int n, p;
string s;

inline int gn(char x) {
       return x - int('A');
}

string restore(int pt, int x) {
       if (pt == 0) {
              for(int i = 0; i < p; i++) {
                      if (i == x) continue;
                      if (dp[pt][x] == (gn(s[pt]) != x)) {
                                    string s;
                                    return s + (char)(int('A') + x);
                      }
              }
       }
       for(int i = 0; i < p; i++) {
               if (i == x) continue;
               if (dp[pt][x] == dp[pt - 1][i] + (gn(s[pt]) != x)) {
                             return restore(pt - 1, i) + (char)(int('A') + x);
               }
       }
}
               
                

int main() {
    ios_base::sync_with_stdio(0);
    cin >> n >> p >> s;
    for(int i = 0; i < p; i++) dp[0][i] = (i != gn(s[0]));
    
    for(int i = 1; i < s.length(); i++) {
            int fs = 0;
            int sn = -1;
            for(int j = 1; j < p; j++) {
                    if (dp[i - 1][j] < dp[i - 1][fs]) fs = j;
            }
            for(int j = 0; j < p; j++) {
                    if (j != fs && (sn == -1 || (dp[i - 1][sn] > dp[i - 1][j]))) sn = j;
            }
            //if (i == 1) cout << fs << " " << sn << endl;
            
            for(int j = 0; j < p; j++) {
                    if (fs != j) dp[i][j] = dp[i - 1][fs] + (gn(s[i]) != j);
                    else dp[i][j] = dp[i - 1][sn] + (gn(s[i]) != j);
            }
    }
    
   
    int tmp = -1;
    int ans = 1 << 29;
    for(int i = 0; i < p; i++) {
            if (ans > dp[s.length() - 1][i]) {
                    ans = dp[s.length() - 1][i];
                    tmp = i;
            }
    }
    cout << ans << endl;
    cout << restore(s.length() - 1, tmp);
    return 0;
}
    

    
