/*"Everything in the universe is balanced. Every disappointment
   you face in life will be balanced by something good for you!
                Keep going, never give up."						*/
#include "bits/stdc++.h"
using namespace std;

#define ll long long int
#define rep(i,a,b) for(int i=a;i<=b;++i)
#define nl '\n'
#define repd(i,a,b) for(int i=a;i>=b;--i)
#define pb push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
const ll p_mod=9999999999999983;
const long double pi = 3.14159265358979323;
const ll N=5e3+9;
const ll mod=1e9+7;

//ll powerk(ll x, ll y){if(y==0)return 1;if(y==1)return x;if(y&1) return ((powerk((x*x)%mod, y/2)%mod)*x)%mod;else return powerk((x*x)%mod,y/2)%mod;}

vector<ll> v[N];
ll vis[N], level[N];
string s[N];

int dfs( ll x, ll papa )
{
	
	vis[x]=1;
	level[x]= level[papa]+1;
	//cout<<x<<" "<<papa<<" "<<level[x]<<nl;
	for(auto it: v[x])
	{
		if(vis[it])
		{
			if(level[x]-level[it]==2 && s[it-1][papa-1]=='1')
			{
				cout<<it<<" "<<papa<<" "<<x<<nl;
				return -1;
			}
		}
		else
		{
			ll l =dfs(it,x);
			if(l==-1)return -1;
		}
	}
	return 1;
}

void solve()
{    
	ll n,m;
	cin>>n;
	rep(i,0,n-1)cin>>s[i];
	rep(i,0,n-1)
	{
		rep(j,0,n-1)
		if(s[i][j]=='1')
			v[i+1].pb(j+1);
	}
	rep(i,1,n)
	if(vis[i]==0)
		for(auto it: v[i])
			if(it>i){
				level[i]=0;
		ll l = dfs(it,i);
		if(l==-1)return ;
	}
	cout<<-1;

}


int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    ll t=1;
    //pre();
    //cin>>t;
    //if(t^1)exit(0);
    while(t--)
       solve();
}

