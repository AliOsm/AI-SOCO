
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <climits>
#include <limits.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <assert.h>
#include <cstring>
using namespace std;
#define rep(i, n) for (int (i) = 0, j123 = n; (i) < j123; (i) ++)
#define rep1(i, n) for (int (i) = 1, j123 = n; (i) <= j123; (i) ++)
#define db(x) {cout << #x << " = " << (x) << endl;}
#define dba(a, x, y) {cout << #a << " :";for(int i123=(x);i123<=(y);i123++) cout<<setw(4)<<(a)[i123];cout<<endl;}
#define clr(x) memset(x,0,sizeof(x));
#define mp make_pair
#define pb push_back
#define sz(x) int(x.size())
#define endl '\n'
typedef long long ll;
typedef long double ld;
const int INF = INT_MAX;
const ll INFL = LLONG_MAX;
const ld pi = acos(-1);
// const int MOD = ;

int N, M, Q;
int g[222][222];
int A[222];
int B[222];
int C[222];
vector<int> adj[222];
int f(int color, int x) { return x==g[color][x]?x:g[color][x]=f(color,g[color][x]); }
int init()
{
  clr(g);
  rep(i,222) adj[i].clear();
}
int main()
{
  ios_base::sync_with_stdio(0); cout.precision(15); cout << fixed; cout.tie(0);
  cin >> N >> M;
  rep(i,222) rep(j,222) g[i][j]=j;
  rep1(i,M) 
  {
    cin >> A[i] >> B[i] >> C[i];
    int a = f(C[i],A[i]);
    int b = f(C[i],B[i]);
    if (a != b)
    {
      g[C[i]][a]=g[C[i]][b];
    }
  }
  cin >> Q;
  rep1(qqq,Q)
  {
    int u, v;
    cin >> u >> v;
    int ans = 0;
    rep1(color,100)
    if (f(color,u) == f(color,v))
      ans++;
    cout << ans << endl;
  }
}
