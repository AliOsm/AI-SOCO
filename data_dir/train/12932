#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <stack>
#include <complex>
#include <random>
#include <bitset>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;

int N, X, Y;
bool dif[10];

int ask(int bit1, int bit2) 
{
    int cnt = 0;
    for (int i = 1; i <= N; i++)
        cnt += ((1<<bit1) & i) && ((1<<bit2) & i);
    if (cnt == 0)
        return 0;
            
    cout << "? " << cnt;
    for (int i = 1; i <= N; i++)
        if (((1<<bit1) & i) && ((1<<bit2) & i))
            cout << " " << i;
    cout << "\n";
    fflush(stdout);

    int ret;
    cin >> ret;
    return ret;
}

void getDif()
{
    for (int i = 0; i < 10; i++)
    {
        int q = ask(i, i);
        dif[i] = q == Y || q == (X ^ Y);
    }
}

int main()
{
    cin >> N >> X >> Y;

    getDif();
    int ans1 = 0, ans2 = 0, difBit = -1;
    for (int i = 0; i < 10; i++)
        if (dif[i])
        {
            ans1 |= 1<<i;
            difBit = i;
            break;
        }
    
    for (int i = 0; i < 10; i++)
    {
        if (i == difBit)
            continue;

        int q = ask(i, difBit);
        if (q == Y || q == (X ^ Y)) //ans1 has i
        {
            ans1 |= 1<<i;
            if (!dif[i]) //ith bit is same so ans2 has i
                ans2 |= 1<<i;
        }
        else //ans1 doesn't have i
        {
            if (dif[i]) //ith bit is different so ans2 has i
                ans2 |= (1<<i);
        }
    }
    
    if (ans1 > ans2)
        swap(ans1, ans2);

    cout << "! " << ans1 << " " << ans2 << "\n";
    fflush(stdout);

    return 0;
}
