#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

const int MAXN = 100100;
const int MAXK = 42;
int N, M;
vector<pair<int, pair<int, int> > > A[MAXN];
int cnt[MAXK];
int R[MAXK];
int g[MAXK][MAXK];

int gcd(int m, int n)
{
    if (m % n == 0)
        return n;
    return gcd(n, m % n);
}

bool check()
{
    for(int i = 1; i <= 40; i++) 
        if(cnt[i])
            for(int j = i + 1; j <= 40; j++) 
                if(cnt[j])
                    if(R[i] % g[i][j] != R[j] % g[i][j])
                        return false;
    return true;
}

int go2(int idx, int st, int en)
{
    for(int i = 1; i <= 40; i++)
        cnt[i] = 0;
    int ret = 0;
    for(int i = st, j = st; j < en; j++)
    {
        while(cnt[A[idx][j].second.second] > 0 && R[A[idx][j].second.second] != A[idx][j].second.first)
        {
            cnt[A[idx][i].second.second]--;
            i++;
        }
        cnt[A[idx][j].second.second]++;
        R[A[idx][j].second.second] = A[idx][j].second.first;
        while(!check())
        {
            cnt[A[idx][i].second.second]--;
            i++;
        }
        ret = max(ret, j - i + 1);
    }
    return ret;
}

int go(int idx)
{
    int ret = 0;
    for(int i = 0, j; i < A[idx].size(); i = j)
    {
        j = i;
        while (j < A[idx].size() && j - i == A[idx][j].first - A[idx][i].first)
            j++;
        ret = max(ret, go2(idx, i, j));
    }
    return ret;
}

int main()
{
    for(int i = 1; i <= 40; i++)
        for(int j = 1; j <= 40; j++)
            g[i][j]= gcd(i, j);

    scanf("%d %d", &N, &M);
    for(int i = 0, sz; i < N; i++)
    {
        scanf("%d", &sz);
        for(int j = 0, a; j < sz; j++)
        {
            scanf("%d", &a);
            A[a].push_back(make_pair(i, make_pair(j, sz)));
        }
    }
    for(int i = 1; i <= M; i++)
        printf("%d\n", go(i));

    return 0;
}