#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
 
using namespace __gnu_pbds;
using namespace std;
 
 
#define fast ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
#define PSET(x,y) fixed<<setprecision(y)<<x
#define pb push_back
#define pii pair<int,int>
#define pf push_front
#define mp make_pair
#define vi vector<int>
#define vip vector<pair<int,int> >
#define ff first
#define ss second
#define int long long
#define mod 1000000007
#define BIG 998244353
#define s(t) scanf("%lld",&t)
#define p(t) printf("%lld\n",t)
#define mii map<int,int>
#define MSET(table,i) memset(table, i, sizeof(table))
#define endl '\n'
#define tc int t;cin>>t;while(t--)
#define pi  3.1415926358
#define bits(x) __builtin_popcount(x)
#define minimum(a,n) min_element(a,a+n)-a
#define maximum(a,n) max_element(a,a+n)-a
#define pqbig priority_queue<int>
#define pqsmall priority_queue<pii,vector<pii>,greater<pii> >
#define all(v) v.begin(),v.end()
#define sitr set<int>:: iterator
#define spitr set<pii>:: iterator
#define mitr map<int,int>:: iterator
 
int toint(const string &s) {stringstream ss; ss << s; int x; ss >> x; return x;}
string tostring ( int number ) {stringstream ss; ss << number; return ss.str();}
 
 
typedef tree<int, null_type, less<int>, rb_tree_tag,
        tree_order_statistics_node_update>
        new_data_set;
 
 
#define trace1(x)                cerr<<#x<<": "<<x<<endl
#define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
#define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
#define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
#define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
#define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
 
const int N=2e5+5;
vi adj[N];
int arr[N];
int dist_a[N],dist_b[N],dist_c[N];
bool vis[N];
int n,m;
 
void bfs(int x,int dist[])
{
	for(int i=1;i<=n;i++)
		vis[i]=false;
	queue<pii> q;
	q.push(mp(x,0));
	vis[x]=true;
	while(!q.empty())
	{
		pii p=q.front();
		q.pop();
		dist[p.ff]=p.ss;
		for(int i=0;i<adj[p.ff].size();i++)
		{
			int el=adj[p.ff][i];
			if(!vis[el])
				vis[el]=true,q.push(mp(el,p.ss+1));
		}
	}
}

int32_t main()
{
    fast;
    tc
    {
    	int a,b,c;cin>>n>>m>>a>>b>>c;
    	for(int i=1;i<=n;i++)
    		adj[i].clear();

    	for(int i=1;i<=m;i++)
    		cin>>arr[i];
    	sort(arr+1,arr+m+1);
    	for(int i=1;i<=m;i++)
    		arr[i]+=arr[i-1];

    	for(int i=1;i<=m;i++)
    	{
    		int x,y;cin>>x>>y;
    		adj[x].pb(y);
    		adj[y].pb(x);
    	}

    	bfs(a,dist_a);
    	bfs(b,dist_b);
    	bfs(c,dist_c);

    	int ans=1e18;
    	for(int i=1;i<=n;i++)
    	{
    		int tot=dist_a[i]+dist_b[i]+dist_c[i];
    		//trace5(tot,dist_a[i],dist_b[i],dist_c[i],i);
    		if(tot>m)
    			continue;
    		int cur=arr[tot]+arr[dist_b[i]];
    		ans=min(ans,cur);
    	}

    	cout<<ans<<endl;
    }
}