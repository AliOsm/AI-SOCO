#include <bits/stdc++.h>
#define _FORTIFY_SOURCE 0
#pragma GCC optimize("Ofast")
#pragma GCC optimize("no-stack-protector")
#pragma GCC optimize("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native")
#pragma GCC optimize("fast-math")

using namespace std;

const int N = 1e5 + 50, MOD = 1e9 + 7;

#define int long long


signed main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    int l, r, l1;
    int sum = 0, sum1 = 0;
    cin >> l >> r;
    l1 = l - 1;
    int k = 1;
    for (int i = 0; i < 1000; i++) {
		if (i % 2 == 0) {
			sum+= min(k, l1);
		}
		else sum1+= min(l1, k);
		l1-=k;
		if (l1 <= 0) break;
		k*= 2;
    }
    k = 1;
    int ans = (((sum % MOD) * (sum % MOD)) % MOD + ((sum1 % MOD) * ((sum1 + 1) % MOD)) % MOD) % MOD, ans1 = 0;
    sum = sum1 = 0;
    //cout << ans << endl;
	for (int i = 0; i < 1000; i++) {
		if (i % 2 == 0) {
			sum+= min(k, r);
		}
		else sum1+= min(r, k);
		r-=k;
		if (r <= 0) break;
		k*= 2;
    }
    ans1 = (((sum % MOD) * (sum % MOD)) % MOD + ((sum1 % MOD) * ((sum1 + 1) % MOD)) % MOD) % MOD;
    ans = ans1 - ans;
   while (ans < 0) ans+= MOD;
    cout << ans;
}
