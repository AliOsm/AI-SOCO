
// ~/BAU/ACM-ICPC/Teams/Rampage/Corvus
// ~/sudo apt-get verdict Accpeted

#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <memory.h>
#include <limits.h>
#include <math.h>
#include <string.h>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <bitset>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
const int N = 1000001; 
const ll MOD = 1e9 + 7;

int t,mx,last,a[N],f1[N],f2[N];

bool check(int n,int m,int x,int y) {
	memset(f2,0,sizeof f2);
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++) {
			int d = abs(i-x)+abs(j-y);
			if(d>=N) return 0;
			f2[d]++;
		}
	for(int i=0; i<N; i++)
		if(f1[i]!=f2[i])
			return 0;
	return 1;
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.in", "r", stdin);
#endif

	scanf("%d",&t);
	for(int i=0; i<t; i++) {
		scanf("%d",a+i);
		f1[a[i]]++;
		mx = max(mx,a[i]);
	}
	if(t==1) {
		puts("1 1\n1 1");
		return 0;
	}
	for(int i=1, j=4; i<=mx; i++,j+=4)
		if(f1[i]!=j) {
			last = i;
			break;
		}

	for(int n=1; n*n<=t; n++)
		if(t%n==0) {
			int m = t/n;
			int x = last;
			int y = n+m-mx-x;
			if(check(n,m,x-1,y-1)) {
				printf("%d %d\n%d %d\n", n, m, x, y);
				return 0;
			}
			if(check(m,n,x-1,y-1)) {
				printf("%d %d\n%d %d\n", m, n, x, y);
				return 0;
			}
		} 
	puts("-1");
 	return 0;
}