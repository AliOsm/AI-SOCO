#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
const int N = 300006;
const ll mod = 998244353;

#define F first
#define S second

vector<int> G[N];

int a[N];
int par[N];
int d[N];

void no() {
    puts("0");
    exit(0);
}

void dfs(int now,int ppar,int cur_depth) {
    par[now] = ppar;
    d[now] = cur_depth;
    for (int i:G[now]) {
        if (i == ppar) continue;
        dfs(i,now,cur_depth+1);
    }
}

vector<int> v[N];

int used[N]; //i --> par[i]

ll ans=1;

void dfs2(int now,int ptr,int ori_col) {
    //cerr << "now = " << now << " , ptr = " << ptr << " , ! = " << ori_col << endl;
    if (a[now] && a[now] != ori_col) {
        ans *= ptr;
        ans %= mod;
        return;
    }
    for (int i:G[now]) {
        int a=now,b = i;
        if (d[a] > d[b]) swap(a,b);
        if (used[b] != -1) continue;
        used[b] = ori_col;
        dfs2(i,ptr+1,ori_col);
    }
}

int main () {
    //int n,k; scanf("%d%d",&n,&k);
    int n; scanf("%d",&n); int k = 2;
    for (int i=1;i<=n;++i) {
        scanf("%d",&a[i]);
        if (a[i]) {
            v[ a[i] ].push_back(i);
        }
    }
    for (int i=1;i<n;++i) {
        int x,y; scanf("%d%d",&x,&y);
        G[x].push_back(y); G[y].push_back(x);
    }
    dfs(1,1,1);
    memset(used,-1,sizeof(used));
    for (int i=1;i<=k;++i) {
        set<pii> st;
        for (int j:v[i]) {
            st.insert(make_pair(-d[j],j));
        }
        while (st.size() != 1) {
            pii p = *(st.begin());
            st.erase(st.begin());
            int id = p.S;
            if (a[id] == 0)  a[id] = i;
            if (a[id] != 0 && a[id] != i) {
                no();
            }
            if (used[id] != -1) {
                no();
            }
            used[id] = i;
            st.insert(make_pair(-d[ par[id] ],par[id]));
        }
        int _ = st.begin()->S;
        if (a[_] == 0) a[_] = i;
        if (a[_] != i) no();
    }
    //ll ans = 1;
    //cerr << "haha " << endl;
    for (int i=1;i<=n;++i) {
        if (a[i])dfs2(i,0,a[i]);
    }
    printf("%lld\n",ans);
}

