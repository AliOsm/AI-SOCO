#include <bits/stdc++.h>
using namespace std;
int n,d;
vector<pair<int,int> > money;
long long contsum[100005];
int BS(int friendship)
{
    int lo = 0;
    int hi = money.size();
    while(lo != hi)
    {
        int mid = (lo + hi) / 2;
        if(money[mid].first < friendship)
            lo = mid+1;
        else
            hi = mid;
    }
    return lo;
}
int main()
{
    cin >> n >> d;
    for(int i = 0;i < n;i++)
    {
        int x,y;
        scanf("%d %d",&x,&y);
        money.push_back({x,y});
    }
    sort(money.begin(),money.end());
    long long sum = 0;
    for(int i = 1;i <= money.size();i++)
    {
        sum += money[i-1].second;
        contsum[i] = sum;
    }
    long long maxFriendShip = 0;
    for(int i = 0;i < money.size();i++)
    {
        long long NowMoney = money[i].first;
        int limit = BS(NowMoney+d);
        long long another = contsum[limit] - contsum[i];
        maxFriendShip = max(maxFriendShip,another);

    }
    cout << maxFriendShip;
    return 0;
}
