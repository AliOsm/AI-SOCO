#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <map>
#include <queue>
#include <cstring>
#include <cstdlib>
#include <set>
using namespace std;
#define INF 1001001001
#define MOD 1000000007
typedef long long ll;

map<string,int>mp;

int main()
{
  ios_base::sync_with_stdio(0);cin.tie(0);
  int N;
  cin>>N;
  for (int i=0;i<N;i++){
    int C;
    string S;
    cin>>C>>S;
    sort(S.begin(),S.end());
    if (mp.count(S)==0)
      mp[S]=C;
    else
      mp[S]=min(mp[S],C);
  }
  int ans=INF;
  if (mp.count("A")>0 && mp.count("B")>0 && mp.count("C")>0)
    ans=min(ans,mp["A"]+mp["B"]+mp["C"]);
  if (mp.count("ABC")>0)
    ans=min(ans,mp["ABC"]);
  if (mp.count("AB")>0 && mp.count("C")>0)
    ans=min(ans,mp["AB"]+mp["C"]);
  if (mp.count("AB")>0 && mp.count("AC")>0)
    ans=min(ans,mp["AB"]+mp["AC"]);
  if (mp.count("AB")>0 && mp.count("BC")>0)
    ans=min(ans,mp["AB"]+mp["BC"]);
  /////////////////////////////////
  if (mp.count("AC")>0 && mp.count("B")>0)
    ans=min(ans,mp["AC"]+mp["B"]);
  if (mp.count("AC")>0 && mp.count("AB")>0)
    ans=min(ans,mp["AC"]+mp["AB"]);
  if (mp.count("AC")>0 && mp.count("BC")>0)
    ans=min(ans,mp["AC"]+mp["BC"]);
  ////////////////////////////
  if (mp.count("BC")>0 && mp.count("A")>0)
    ans=min(ans,mp["BC"]+mp["A"]);
  if (mp.count("BC")>0 && mp.count("AC")>0)
    ans=min(ans,mp["BC"]+mp["AC"]);
  if (mp.count("BC")>0 && mp.count("AB")>0)
    ans=min(ans,mp["BC"]+mp["AB"]);
  if (ans==INF)
    cout<<-1<<endl;
  else
    cout<<ans<<endl;
  return 0;
}
