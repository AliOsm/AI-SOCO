#include<bits/stdc++.h>
#define st first
#define nd second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define umax(x,y) x=max(x,y)
#define umin(x,y) x=min(x,y)
#define ll long long 
#define ii pair<int,int>
#define iii pair<ii,int>
#define iiii pair<ii,ii>
#define sz(x) ((int) x.size())
#define orta ((bas+son)/2)
#define all(x) x.begin(),x.end()
#define pw(x) (1<<(x))
#define inf 1000000009
#define MOD 1000000007
#define N 100005
#define M 2500005
#define LOG 20
#define KOK 300
#define EPS 0.0000001
using namespace std;

int m,a,b;
int vis[2*N],dst[2*N];
ll ans;

ll s(int x){return (ll)x*(x+1)/2;}

ll gs(int a,int b) {

	return s(b)-s(a-1);

}

void solve() {

	priority_queue<ii> q;

	q.push({0,0});

	while(!q.empty()) {

		ii x=q.top();

		q.pop();

		if(vis[x.nd]) continue ;

		vis[x.nd]=1;

		dst[x.nd]=-x.st;

		if(x.nd>=b) {

			q.push({x.st,x.nd-b});

		}

		if(x.nd<b || x.nd<a) {

			q.push({-max(-x.st,x.nd+a),x.nd+a});

		}

	}

}

int main() {

	scanf("%d %d %d",&m,&a,&b);

	solve();

 	for(int i=0;i<a;i++) {

 		if(!vis[i] || dst[i]>m) continue ;

 		int frs=dst[i];

 		int cd=(frs-i)/a+1;

 		int nx=min(m+1,cd*a+i);

 		ans+=(ll)(nx-frs)*cd;

 		if(nx==m+1) continue ;

 		int prm=(m-nx+1)/a;

 		ans+=(ll)a*gs(cd+1,cd+prm);

 		ans+=(ll)(m-(prm*a+nx)+1)*(cd+prm+1);

 	}

 	printf("%lld",ans);

}