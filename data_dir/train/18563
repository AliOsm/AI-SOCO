/**
*
* Author: Mouhanad
* Lang: GNU C++14
*
**/
#include<bits/stdc++.h>
using namespace std;

#define F first
#define S second
#define ii pair < int , int >
#define LS pair < ll , string >
typedef long long ll;
const int inf = 1<<30;
const int N =300010;
int n , a[3][N] , q ;
ll Rsum1[N] , Lsum1[N];
ll Rsum2[N] , Lsum2[N];
ll XRsum1[N] , XLsum1[N];
ll XRsum2[N] , XLsum2[N];
int main ( ){
  scanf("%d",&n);
  for ( int i =1 ; i<= n ;i++ ){
    int x;
    scanf("%d",&x);
    a[1][i] = x ;
    Rsum1[i]+= x + Rsum1[i-1];
    XRsum1[i]+= (1LL*x*(i-1)) + XRsum1[i-1];
  }
  for ( int i =1 ; i<= n ;i++ ){
    int x;
    scanf("%d",&x);
    a[2][i] = x ;
    Rsum2[i]+= x + Rsum2[i-1];
    XRsum2[i]+= (1LL*x*(i)) + XRsum2[i-1];
  }

   for ( int i = n , j = 1 ; i >=1  ;i-- , j++){

     int x =a[1][i] ;
    Lsum1[i]+= x + Lsum1[i+1];
    XLsum1[i]+= (1LL*x*(j)) + XLsum1[i+1];
  }
   for ( int i = n , j = 1 ; i >=1  ;i-- , j++){

     int x =a[2][i] ;
    Lsum2[i]+= x + Lsum2[i+1];
    XLsum2[i]+= (1LL*x*(j)) + XLsum2[i+1];
  }
    ll mx = 0 , l = 0 , cnt = 0  , all = 0LL ;
   for ( int i = 1 ; i <= n ; i++  ){
      ll cur =0 ;
     for ( int j = 1 ; j <= 2;  j++ , cnt++ ){
             cur = 0 ;
            int fk = cnt ;

             if ( j == 1 ){
              if ( i %2 == 0 ) fk++;
              cur = XRsum1[n]-XRsum1[i-1] ;
             // cerr << cur  <<" " << fk <<"&\n";
              cur += 1LL*abs(fk-(i-1))*(Rsum1[n]-Rsum1[i-1]);
              // cerr << i <<" " << j <<" "  << cur <<endl;
               int st = (n-i+1) + fk;
               int id = i ;
               if ( i%2==0 ) id++;
               cur += XLsum2[id] ;
               cur += 1LL*(st-1)*(Lsum2[id]);
              // cerr <<"**" << i << " " << j <<"  "<< cur <<endl;
             }else {

              if ( i % 2 == 0 ) fk --;

              cur = XRsum2[n]-XRsum2[i-1] ;
             // cerr << cur  <<" " << fk <<"&\n";
              cur += 1LL*abs(fk-(i))*(Rsum2[n]-Rsum2[i-1]);
              // cerr << i <<" " << j <<" "  << cur <<endl;
               int st = (n-i+1) + fk;
               int id = i ;
              if ( i & 1 ) id++;
               cur += XLsum1[id] ;
               cur += 1LL*(st-1)*(Lsum1[id]);
             //  cerr <<"**" << i << " " << j <<"  "<< cur <<endl;

             }
             ll tony = a[(j+1)%2][i]*cnt;
             mx = max ( mx , cur + all - tony );
             all += (1LL*fk*a[j][i]);
     }
   }
   printf("%lld\n",mx);
return 0 ;
}
