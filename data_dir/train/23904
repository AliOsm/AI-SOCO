/*
LANG: C++
TASK: twofive
*/
#include <iostream>
#include <fstream>
#include <algorithm>
#include <iomanip>
#include <random>
#include <ctime>
#include <bitset>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <cmath>
#include <climits>
#include <cstring>
#include <queue>
#include <deque>
#include <list>
#include <stack>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#pragma GCC optimize("O3")
#define ld long double
#define ull unsigned long long
#define ll long long
#define pb push_back
#define pii pair<int, int>
#define pll pair<ll, ll>
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define fast_io cout.tie(0), cin.tie(0), ios_base::sync_with_stdio(0)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using namespace std;
ld eps = (ld)1 / 1e9;
ll inf = 1e18, mod1 = 998244353, mod2 = 1e9 + 7;
ll sqr(ll a) { return a * a; }
ll gcd(ll a, ll b) { return !a ? b : gcd(b % a, a); }
ll binpow(ll a, ll b, ll mod) { return b ? (b % 2 ? (a * (sqr(binpow(a, b / 2, mod)) % mod)) % mod : sqr(binpow(a, b / 2, mod)) % mod) : 1; }
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
set<int> s1[201], izn[201];
bool valid(vector<int> vc)
{
    int i, j, r, dl, n = vc.size();
    unordered_set<int> ind;
    for (i = 1; i < n; i++) ind.insert(i);
    for (i = 1; i < n; i++)
    {
        dl = 0;
        for (auto f: ind)
        {
            r = izn[f].size();
            if (i - r < -1) continue;
            set<int> s1;
            for (j = i; j > i - r; j--) s1.insert(vc[j]);
            if (s1 == izn[f])
            {
                dl = f;
                break;
            }
        }
        if (!dl) return 0;
        ind.erase(dl);
    }
    return ind.empty();
}

int main()
{
    //freopen("twofive.in", "r", stdin), freopen("twofive.out", "w", stdout);
    fast_io;
    int test, n, k, i, j, k1, v, ind;
    cin >> test;
    while (test--)
    {
        cin >> n;
        for (i = 1; i < n; i++) izn[i].clear();
        for (i = 1; i < n; i++)
        {
            cin >> k;
            for (j = 1; j <= k; j++) cin >> v, izn[i].insert(v);
        }
        for (i = 1; i <= n; i++)
        {
            v = i;
            vector<int> vc;
            for (j = 1; j < n; j++) s1[j] = izn[j];
            bool bl = 0;
            while (1)
            {
                vc.pb(v);
                if (vc.size() == n) break;
                k1 = ind = 0;
                for (j = 1; j < n; j++)
                {
                    if (s1[j].find(v) != s1[j].end()) s1[j].erase(v);
                    if (s1[j].size() == 1) k1++, ind = *(s1[j].begin());
                    if (k1 > 1) bl = 1;
                    if (bl) break;
                }
                if (!k1) bl = 1;
                if (bl) break;
                v = ind;
            }
            if (!bl && valid(vc))
            {
                for (auto f: vc) cout << f << ' ';
                cout << '\n';
                break;
            }
        }
    }
    return 0;
}