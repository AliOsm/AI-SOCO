#ifdef D
#include "header.h"
#else
#include "bits/stdc++.h"
#endif

using namespace std;

#define type(x) __typeof((x).begin())
#define foreach(i, x) for(type(x) i = (x).begin(); i != (x).end(); i++)

typedef long long ll;
typedef pair < int, int > ii;

const int inf = 1e9 + 333;
const ll linf = 1e18 + 333;

const int N = 1e5 + 5;

int n;
int ch[N], sum[N];
ll ans[N];
vector < ii > v[N];

void dfs(int p, int x) {
    ch[x] = 1;
    vector < pair < double, ii > > vec;
    foreach(it, v[x]) {
        int u = it -> first;
        int e = it -> second;
        if(u != p) {
            dfs(x, u);
            ch[x] += ch[u];
            sum[x] += sum[u] + e;
            vec.push_back({(double) ch[u] / (sum[u] + e), {u, e}});
        }
    }
    sort(vec.begin(), vec.end());
    reverse(vec.begin(), vec.end());
    ll res = 0;
    foreach(it, vec) {
        int u = it -> second.first;
        int e = it -> second.second;
        ans[x] += ans[u] + (ll) e * ch[u] + res * ch[u];
        res += (sum[u] * 2 + e * 2);
    }
}

int main () {
    
    scanf("%d", &n);
    
    for(int i = 1; i < n; i++) {
        int x, y, c;
        scanf("%d %d %d", &x, &y, &c);
        v[x].push_back({y, c});
        v[y].push_back({x, c});
    }
    
    dfs(-1, 1);
    
    printf("%.12lf\n", (double) ans[1] / (n - 1));
    
    return 0;
    
}
