#include<bits/stdc++.h>
#define lc (p<<1)
#define rc ((p<<1)|1)
using namespace std;
int n,a[200010];
class segtree
{
	public:
		int tag[800010];
		void pushnow(int p,int v)
		{
			tag[p]=max(tag[p],v);
			return;
		}
		void pushdown(int p)
		{
			if(tag[p]!=-1)
			{
				pushnow(lc,tag[p]);
				pushnow(rc,tag[p]);
				tag[p]=-1;
			}
		}
		void build(int p,int l,int r)
		{
			if(l==r)
			{
				tag[p]=a[l];
				return;
			}
			tag[p]=-1;
			int mid=(l+r)>>1;
			build(lc,l,mid);
			build(rc,mid+1,r);
		}
		void modify(int p,int l,int r,int ml,int mr,int v)
		{
			if(ml<=l&&r<=mr)
			{
				tag[p]=max(tag[p],v);
				return;
			}
			pushdown(p);
			int mid=(l+r)>>1;
			if(ml<=mid)modify(lc,l,mid,ml,mr,v);
			if(mr>mid)modify(rc,mid+1,r,ml,mr,v);
		}
		void modify2(int p,int l,int r,int pos,int v)
		{
			if(l==r)
			{
				tag[p]=v;
				return;
			}
			pushdown(p);
			int mid=(l+r)>>1;
			if(pos<=mid)modify2(lc,l,mid,pos,v);
			else modify2(rc,mid+1,r,pos,v);
		}
		void query(int p,int l,int r)
		{
			if(l==r)
			{
				printf("%d ",tag[p]);
				return;
			}
			pushdown(p);
			int mid=(l+r)>>1;
			query(lc,l,mid);
			query(rc,mid+1,r);
		}
}T;
int Q;
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)scanf("%d",&a[i]);
	T.build(1,1,n);
	scanf("%d",&Q);
	for(int i=1,opt,x,y;i<=Q;i++)
	{
		scanf("%d%d",&opt,&x);
		if(opt==1)
		{
			scanf("%d",&y);
			T.modify2(1,1,n,x,y);
		}
		else
		{
			T.modify(1,1,n,1,n,x);
		}	
	}
	T.query(1,1,n);	
	return 0;
}