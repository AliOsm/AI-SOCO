#include<bits/stdc++.h>
#define int long long int
#define ld long double
#define getFaster ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL)
#define rep(i,init,n) for(int i=init;i<n;i++)
#define rev(i,n,init) for(int i=n;i>=init;i--)
#define MAXN 200005
#define MOD2 998244353
#define MOD1 1e9+7
#define f first
#define s second
#define endl '\n'
#define pii pair<int,int>
#define piii pair<pii,int>
#define precise(i) cout<<fixed<<setprecision(i)
using namespace std;
const long double PI = atan(1.0)*4;
const int64_t INF=1000000000000000003;
const int32_t LOG=21;
const int MOD=MOD1;

int32_t main()
{ 
      getFaster;
      int tests=1;
      cin>>tests;
      rep(ii,0,tests)
      {      
          int n,k;
          cin>>n>>k;
          
          vector<char> v;
          int cnt2=2;
          int cnt1=n-2;
          rep(i,1,n+1)
          {
          	   if(cnt1==0)
          	   {
          	   	  rep(j,0,cnt2)
          	   	  v.push_back('b');
          	   	  break;
          	   }
          	   else if(cnt2==0)
          	   {
          	   	   rep(j,0,cnt1)
          	   	   v.push_back('a');
          	   	   break;
          	   }	
               if(cnt2==2)
               {
               	   int spots=n-i;
               	   int val=(spots*(spots-1))/2;
               	   if(val>=k)
               	   {
                      v.push_back('a');
                      cnt1--;
                      continue;
               	   }
               	   else
               	   {
               	   	  v.push_back('b');
               	   	  k-=val;
               	   	  cnt2--;
               	   	  continue;
               	   }	
               }
               else if(cnt2==1)
               {
               	   int spots=n-i;
               	   int val=spots;
               	   if(val>=k)
               	   {
                      v.push_back('a');
                      cnt1--;
                      continue;
               	   }
               	   else
               	   {
               	   	  v.push_back('b');
               	   	  k-=val;
               	   	  cnt2--;
               	   	  continue;
               	   }    
               }	

          }
          for(auto it: v)
          cout<<it;
          cout<<endl;	
      }
      return 0;     
}

/*
 TIPS:
 1.) Check for corner cases (like 0 is exception case)
 2.) Check for global memory sizes,memory refreshments and its complexity 
 3.) Check for sorting criteria (if used 1-based indexing)
 4.) Check for numbers overflow (while multiplying and doing MOD)
 5.) Check for typecasting issues like int to float( while dividing numbers)
*/
