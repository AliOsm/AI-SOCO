#pragma GCC optimize("Ofast")
#pragma GCC optimize ("unroll-loops")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")

#include<bits/stdc++.h>
using namespace std;
#define MAX 1000005
#define ll long long int

void update(ll BIT[],int indx,ll val){ while(indx<MAX) {BIT[indx]+=val; indx+=(indx&-indx);}}
ll sum(ll BIT[],int indx){ll ans=0; while(indx!=0){ans+=BIT[indx]; indx-=(indx&-indx);} return ans;}

ll BIT1[MAX];
ll BIT2[MAX];
int A[MAX];
int B[MAX];
map<int,int>Map;

int main(){
    int n;
    scanf("%d",&n);
    for(int i=1;i<=n;i++){scanf("%d",&A[i]); B[i]=A[i];}
    sort(B+1,B+n+1);

    int Count=0;
    for(int i=1;i<=n;i++) if(!Map.count(B[i])) Map[B[i]]=++Count;
    for(int i=1;i<=n;i++) A[i]=Map[A[i]];

    ll ans=0;
    for(int i=n;i>=1;i--) {
        ans+=sum(BIT2,A[i]);
        update(BIT2,A[i],sum(BIT1,A[i]));
        update(BIT1,A[i],1);
    }
    cout<<ans<<endl;
}
