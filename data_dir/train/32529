//Noszály Áron 8a Debreceni Fazekas Mihály Gimnázium

#include<bits/stdc++.h>
#include<cstdlib>

using namespace std;

typedef long long ll;
typedef unsigned long long ul;
typedef long double ld;

#define all(s) (s).begin(),(s).end()
#define pb push_back
#define IO ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)
#define INF std::numeric_limits<int>::max()
#define MINF std::numeric_limits<int>::min()
#define tmax(a,b,c) max((a),max((b),(c)))
#define tmin(a,b,c) min((a),min((b),(c)))
#define vpii vector<pair<int,int>>
#define vpll vector<pair<ll,ll>>
#define mp make_pair
#define xx first
#define yy second
#define sz(x) (int)(x).size()

#ifndef ONLINE_JUDGE
#  define LOG(x) (cerr << #x << " = " << (x) << endl)
#else
#  define LOG(x) ((void)0)
#endif

const long double PI = acos(-1);

int d1[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
int d2[8][2]={{1,0},{0,1},{0,-1},{-1,0},{1,1},{-1,1},{1,-1},{-1,-1}};

const int N=1000010;

int par[N], size[N];

void init()
{
	for(int i=0;i<N;++i) par[i]=-1;
	for(int i=0;i<N;++i) size[i]=1;
}

int get(int x)
{
	if(par[x]==-1) return x;
	return par[x]=get(par[x]);
}

void merge(int x, int y)
{
	x=get(x);
	y=get(y);
	
	if(size[x]>size[y]) swap(x,y);
	par[x]=y;
	size[y]+=size[x];
}

priority_queue<int> l[N];

int main()
{
	IO;
	init();
	
	int n,m;cin>>n>>m;
	int a[n];
	for(int i=0;i<n;++i) cin>>a[i];

	
	for(int j=0;j<m;++j)
	{
		int a,b;cin>>a>>b;
		a--;b--;
		if(get(a)!=get(b)) merge(a,b);
	}
	
	for(int i=0;i<n;++i)
	{
		l[get(i)].push(a[i]);
	}
	
	
	for(int i=0;i<n;++i)
	{
		a[i]=l[get(i)].top();
		l[get(i)].pop();
	}
	
	for(int i=0;i<n;++i) cout<<a[i]<<" ";
	cout<<"\n";
	return 0;
}


