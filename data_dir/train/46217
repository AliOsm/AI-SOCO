#include <iostream>
#include <vector>
#include <string>
#include <cstdio>
#include <map>
#include <cmath>
#include <algorithm>

using namespace std;

#define next Next

bool used[100][300000];
long long dp[100][300000];
long long n;
int m;
int c[33], e[33];

int get(int *e) {
    int ans = 0;
    for (int i = 0; i < 10; ++i)
        ans = ans * (c[i] + 1) + e[i];
    return ans;
}

long long count(int x, int *e, bool ok) {
    int f = get(e);
    if (f == 0) {
        if (x == 0) return 1;
        return 0;
    }
    if (used[x][f]) return dp[x][f];
    used[x][f] = true;
    int t = 0;
    if (!ok) t = 1;
    for (int i = t; i < 10; ++i) {
        if (e[i] == 0) continue;
        int p = (x * 10 + i) % m;
        e[i]--;
        dp[x][f] += count(p, e, true);
        e[i]++;
    }
    return dp[x][f];
}

int main(){
  // freopen("input.txt","r",stdin);
   ios :: sync_with_stdio(false);
   cin >> n >> m;
   while (n > 0) {
        e[n%10]++;
        n /= 10;
   }

   for (int i = 0; i < 10; ++i) {
       c[i] = e[i];
   }
   cout << count(0, e, false) << endl;
   return 0;
}
