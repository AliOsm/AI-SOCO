#include <bits/stdc++.h>
using namespace std;
#define read            freopen("C:\\Users\\Dell\\Desktop\\in.txt", "r", stdin)
#define write           freopen("C:\\Users\\Dell\\Desktop\\in.txt", "w", stdout)
#define pii             pair<LL , LL >
#define inf             INT_MAX/3
#define linf            LLONG_MAX/3
#define in(a)           scanf("%I64d", &a)
#define ins(a)          scanf("%s", a)
#define in2(a, b)       scanf("%I64d%I64d", &a, &b)
#define in3(a, b, c)    scanf("%I64d%I64d%I64d", &a, &b, &c)
#define pn              printf("\n");
#define pr(a)           printf("%I64d\n", a)
#define prs(a)          printf("%I64d ", a)
#define pr2(a, b)       printf("%I64d %I64d\n", a, b)
#define pr3(a, b, c)    printf("%I64d %I64d %I64d\n", a, b, c)
#define pcs(a)          printf("Case %I64d: ", a)
#define MP              make_pair
#define vi              vector<LL >
#define cl              clear()
#define sz              size()
#define pb              push_back
#define MEM(a, b)       memset((a), (b), sizeof(a))
#define all(X)          (X).begin(), (X).end ()
#define iter(it, X)     for (__typeof((X).begin()) it = (X).begin(); it != (X).end(); it++)
#define oka(x, y)       ((x)>=0&&(x)<row&&(y)>=0&&(y)<col)

typedef long long LL;
inline LL getnum()
{
    char c = getchar();
    LL num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}
string haircut(string a)
{
    LL l=0, r=a.size()-1, i;
    string b;
    while (l<a.size()&&a[l]==')'&&a[i]!=']') l++;
    while (r>=0&&a[r]=='('&&a[i]!='[') r--;
    for (i=l; i<=r; i++) b+=a[i];
    return b;
}
//LL  dx[]={1,0,-1,0};LL dy[]={0,1,0,-1}; //4 Direction
//LL  dx[]={1,1,0,-1,-1,-1,0,1};LL dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//LL  dx[]={2,1,-1,-2,-2,-1,1,2};LL dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//bool check(LL n, LL pos) {return (n & (1<<pos))>>pos;} //typecast 1 in case of int
//LL  on(LL n, LL pos) {return n | (1<<pos);} //typecast 1 in case of int
//LL  off(LL n, LL pos) {return n & ~(1<<pos);} //typecast 1 in case of int
//bool operator < (const data &d) const{return cost<d.cost;} //reverse in priority queue

const LL M=500100;
LL A[M], B[M], magic, n;
bool canmake(LL g)
{
    LL i, j, k, temp=magic;
    for (i=0; i<n; i++)
    {
        if (A[i]*g>B[i])
        {
            k=A[i]*g-B[i];
            if (k>temp) return false;
            temp-=k;
        }
    }
    return true;
}
int main()
{
#ifndef ONLINE_JUDGE
    read;
#endif
    LL i, j, k, l, h, m;

    in2(n, magic);
    for (i=0; i<n; i++) in(A[i]);
    for (i=0; i<n; i++) in(B[i]);

    l=0;
    h=10000000100;

    while (l<h)
    {
        m=(l+h+1)/2;

        if (canmake(m)) l=m;
        else h=m-1;
    }

    pr(l);

return 0;
}
