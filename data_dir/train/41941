//============================================================================
// Name        : hoba.cpp :)
// Author      : (O_O Diab) (Why_not) (el 3AQ)
// Copyright   : please, Don't touch me :(
// Description : problem in C++
// MAIN IDEA   :
//============================================================================
#include<bits/stdc++.h>
#define ll long long
#define ld long double
#define rw freopen("input.txt","r",stdin),freopen("output.txt","w",stdout);
#define pb push_back
#define F first
#define S second
#define pf push_front
#define lp(i,a,b) for (int i=a;i<=(int)b;++i)
#define lp2(i,a,b) for (ll i=a;i>=b;--i)
#define f(x) return cout<<x<<"\n",0
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(c) c.begin(),c.end()
#define allr(c) c.rbegin(),c.rend()
#define p(x) cout<<#x<<" = { "<<x<<" } \n"
#define vi vector<int>
#define vs vector<string>
#define vl vector<ll>
#define vii vector<pii>
#define vll vector<pll>
#define re return
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define EPS 1e-6
// to convert string to number use int a = stoi(string);
// to convert number to string use string s = to_string(int);
#define FAST ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define clr(c,x) memset(c,x,sizeof(c));
using namespace std;
const ll INFL = 0x3f3f3f3f3f3f3f3fLL;
const int dx[] = { 0, 1, 0, -1, 1, -1, 1, -1 };
const int dy[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
const int N = 2e5 + 5, mod = (int) 1e9 + 7, INF = 0x3f3f3f3f, ALPHA = 26;
map<int, int> a;
vi v;
int main() {
#ifdef ONLINE_JUDGE
	FAST
#endif
	int n, b, x, ans = INT_MAX;
	cin >> n >> b;
	b *= 8;
	b /= n;
	lp(i,1,n)
	{
		cin >> x;
		++a[x];
	}
	v.pb(0);
	for (auto u : a)
		v.pb(u.S);
	int sum = 1;
	lp(i,1,b)
	{
		sum *= 2;
		if (sum >= (int) v.size())
			f(0);
	}
	lp(i,1,v.size()-1)
		v[i] += v[i - 1];
	lp(i,sum,v.size()-1)
		ans = min(ans, n - (v[i] - v[i - sum]));
	f(ans);
	return 0;
}