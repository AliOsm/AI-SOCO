#include "bits/stdc++.h"
using namespace std;

const int N = 1e5 + 5;

int n, k;
int a[N], b[N];
int main( ){

    cin >> n >> k;

    for(int i = 0; i < n / k; i++)  cin >> a[i];
    for(int i = 0; i < n / k; i++)  cin >> b[i];

    int tmp = 1;

    for(int i = 0; i < k; i++) tmp = tmp * 10;
    ///lambda
    auto firstDigit = [&](int x)->int {
        int cnt = 1;
        while(x >= 10){
            x /= 10;
            cnt++;
        }
        if(cnt != k)return 0;
        return x;
    };

    int ans = 1;

    for(int i = 0; i < n / k; i++){

        int numOfMultiples = (tmp - 1) / a[i] + (0 % a[i] == 0);

        int lo = 0, hi = numOfMultiples - 1;

        int cnt = numOfMultiples;

        while(lo < hi){

            int md = lo + (hi - lo) / 2;

            if(b[i] <= firstDigit(md * a[i]))
                hi=md;
            else
                lo=md+1;

        }

        int firstWithTheDigitIDontWant = lo;

        lo = 0, hi = numOfMultiples - 1;

        while(lo < hi){

            int md = lo + (hi - lo + 1) / 2;

            if(b[i] >= firstDigit(md * a[i]))
                lo=md;
            else
                hi=md-1;

        }

        int lastWithTheDigitIDontWant = lo;

        if(firstDigit(firstWithTheDigitIDontWant * a[i]) == b[i]){
            cnt -=
            (lastWithTheDigitIDontWant - firstWithTheDigitIDontWant + 1);
        }
//        cout << lastWithTheDigitIDontWant << ' ' << firstWithTheDigitIDontWant << '\n';
//        cerr << cnt << '\n';

        ans = ans * 1ll * cnt % 1000000007;

    }

    cout << ans << '\n';

    return 0;
}
