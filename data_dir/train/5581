#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <fstream>
#include <cstring>
#include <map>
#include <deque>
#include <set>
#include <string>
#include <iomanip>
#include <vector>
#include <queue>
using namespace std;

#define pii pair<int, int>
#define mkp make_pair
typedef long long int ll;
typedef long double ld;




int main() {
	int n, m;
	cin >> n >> m;
	map<string, int> mp;
	map<int, string> kk;
	set<pii> st;
	for (int i = 0; i < n; i++) {
		string s;
		cin >> s;
		mp[s] = i;
		kk[i] = s;
	}
	for (int i = 0; i < m; i++) {
		string a, b;
		cin >> a >> b;
		st.insert(mkp(mp[a], mp[b]));
		st.insert(mkp(mp[b], mp[a]));
	}
	int k = 0, ans = -1;
	for (int mask = 0; mask < (1 << n); mask++) {
		int zk = 0;
		bool f = false;
		for (int a = 0; a < n; a++) {
			if (mask & (1 << a))
				zk++;
			else
				continue;
			for (int b = a + 1; b < n; b++) {
				if ((mask & (1 << b)) == 0) continue;
				if (st.count(mkp(a, b))) {
					f = true;
					break;
				}
			}
		}
		if (f) continue;
		if (zk > k) {
			k = zk;
			ans = mask;
		}
	}
	vector<string> vec;
	for (int i = 0; i < n; i++) {
		if (ans & (1 << i))
			vec.push_back(kk[i]);
	}
	sort(vec.begin(), vec.end());
	cout << vec.size() << endl;
	for (int i = 0; i < vec.size(); i++)
		cout << vec[i] << endl;
}