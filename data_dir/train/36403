#include<bits/stdc++.h>
using namespace std;

#define MAX 100005
#define si(n) scanf("%lld",&n)
#define ll long long
#define f first
#define s second
#define mp(a,b) make_pair(a,b)

ll arr[MAX],tree[4*MAX];


ll sum(int node,int tl,int tr,int l,int r)
{
    if(l>r)
        return 0;
    if(l==tl && r==tr)
        return tree[node];
    int mid=(tl+tr)/2;

    return max(sum(node*2,tl,mid,l,min(r,mid))
        , sum(node*2+1,mid+1,tr,max(l,mid+1),r));
}

void update(int node,int l,int r,int pos,ll val)
{
    if(l==r)
        tree[node]=val;
    else{
        int mid=(l+r)/2;
        if(pos<=mid)
            update(node*2,l,mid,pos,val);
        else
            update(node*2+1,mid+1,r,pos,val);
        tree[node]=max(tree[node*2],tree[node*2+1]);
    }
}

vector<pair<ll,ll> >v;
ll dp[MAX],tmp[MAX],idx[MAX];

int main()
{
    //freopen("input.txt","r",stdin);
    ll i,j,n;
    si(n);
    for(i=0;i<n;i++){
        ll r,h;
        si(r);si(h);
        tmp[i]=r*r*h;
        v.push_back(mp(tmp[i],-i));
    }
    sort(v.begin(),v.end());
    for(i=0;i<v.size();i++){
        idx[-v[i].s]=i;
    }
    ll ans=0;
    for(i=0;i<n;i++){
        ll val=sum(1,0,n-1,0,idx[i]-1)+tmp[i];
        update(1,0,n-1,idx[i],val);
        ans=max(ans,val);
    }
    printf("%.10f\n",(double)ans* acos(-1.0));

    return 0;
}
