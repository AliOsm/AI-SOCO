#include <cstdio>
#include <utility>
#include <iostream>
#include <set>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

typedef long long Long;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;

void run(int s, int e, int lo, int hi, int t, vector<int> &V) {
    if (s == e) {
        V[s] = lo;
        return;
    }
    int mi = (s + e) / 2;
    int m = (lo + hi) / 2;
    if (t == 0) {
        if ((hi-lo+1) % 2 == 1) m--;
        run(s, mi, m+1, hi, !t, V);
        run(mi+1, e, lo, m, !t, V);
    } else {
        run(s, mi, lo, m, !t, V);
        run(mi+1, e, m+1, hi, !t, V);
    }
}

int cn(const vector<int> &V, int ma = 1000000) {
    int N = V.size();
    int ans = 0;
    {
        vector<int> P(N, 1);
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < i; ++j) {
                if (V[j] < V[i]) {
                    P[i] = max(P[j] + 1, P[i]);
                }
            }
        }
        ans += *max_element(P.begin(), P.end());
        if (ans > ma) return ans;
    }
    {
        vector<int> P(N, 1);
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < i; ++j) {
                if (V[j] > V[i]) {
                    P[i] = max(P[j] + 1, P[i]);
                }
            }
        }
        ans += *max_element(P.begin(), P.end());
        if (ans > ma) return ans;
    }
    return ans;
}

int bf(int N) {
    vector<int> V(N);
    for (int i = 0; i < N; ++i) {
        V[i] = i;
    }
    int mi = 1000;
    vector<int> A;
    do {
        int ans = cn(V, mi);
        if (ans < mi) {
            mi = ans;
            A = V;
        }
    } while(next_permutation(V.begin(), V.end()));
    for (int i : A) {
        cout << i+1 << " ";
    }
    return mi;
}

int main() {

//    for (int i = 1; i < 9; ++i) {
//        cout << bf(i) << endl;
//    }
//    return 0;
    vector<int> A(1);
    int c = 2, s = 1;
    for (int i = 0; A.size() <= 1000000; ++i) {
        for (int j = 0; j < s; ++j) {
            A.push_back(c);
        }
        c++;
        for (int j = 0; j < s; ++j) {
            A.push_back(c);
        }
        c++;
        s++;
    }
    int N;
    cin >> N;
//    if (N < 7) {
//        bf(N);
//        return 0;
//    }
    int sq = sqrt(N);
    for (int i = 0; i < N; i += sq) {
        for (int j = 0; j < sq; ++j) {
            int n = i + sq  - j;
            if (n <= N) {
                cout << n << " ";
            }
        }
    }
//    cout << A[N] << endl;//<< " " << bf(N) << endl;
//    VI V(N);
//    run(0, N-1, 0, N-1, 0, V);
//    for (int i = 0; i < N; ++i) {
//        cout << V[i]+1 << " ";
//    }


//    cout << bf(N)  << " " << cn(V) << endl;

    return 0;
}
