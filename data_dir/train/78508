#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <algorithm>

using namespace std;

typedef size_t index_t;
typedef vector< index_t > index_vector;

typedef vector< char > bool_vector;

#define forin(i,n) for (index_t (i) = 0, __size = (n); (i) < __size; ++(i))
#define all(x) (x).begin(), (x).end()
#define space ' '
#define nl '\n'
	
int read_int()
{
	int value;
	cin >> value;
	
	return value;
}

bool check_event(int event_result)
{
	return (event_result + event_result) % 4 != 2;
}

int main()
{
	size_t n = read_int();
	
	index_vector good_cars;
	forin(car, n)
	{
		bool is_good = true;
		forin(other_car, n)
		{
			int event_result = read_int();
			is_good &= check_event(event_result);
		}
		
		if (is_good)
			good_cars.push_back(car + 1);
	}
	
	cout << good_cars.size() << nl;
	
	forin(i, good_cars.size())
		cout << good_cars[i] << space;
	
	cout << nl;
	
	return 0;
}