#include<bits/stdc++.h>

using namespace std;

#define PB push_back
#define MEM(n, val) memset(n, val, sizeof(n))
#define FOR(i, j, k) for(int i = j; i <= k; i++)
#define ROF(i, j, k) for(int i = j; i >= k; i--)
#define LL long long

bool chk[300];
string str;
int n;
///int ara[1010];
vector<string> valid;

int main()  {
    std::ios_base::sync_with_stdio(false);
    int len;
    cin >> len;
    cin >> str;
    FOR(i, 0, len - 1)   {
        if(str[i] != '*')  {
            chk[ str[i] ] = 1;
        }
    }
    cin >> n;
    FOR(i, 0, n - 1)   {
        ///cin >> ara[i];
        string tmp;
        cin >> tmp;
        bool is_valid = 1;
        FOR(j, 0, (int)tmp.size() - 1)   {
            if(str[j] == '*' && chk[ tmp[j] ])   {
                is_valid = 0;
                break;
            }
            else if(str[j] != '*' && str[j] != tmp[j])  {
                is_valid = 0;
                break;
            }
        }

        if(is_valid)    {
            valid.PB(tmp);
        }
    }

    int ans = 0;
    for(char ch = 'a'; ch <= 'z'; ch++)   {
        if(valid.size() == 0)   {
            break;
        }
        if(chk[ch]) {
            continue;
        }
        int foo = 0;
        FOR(i, 0, (int)valid.size() - 1)   {
            bool is_valid = 0;
            FOR(j, 0, (int)valid[i].size() - 1)   {
                if(str[j] == '*' && valid[i][j] == ch)   {
                    is_valid = 1;
                    break;
                }
            }
            if(is_valid)    {foo++;}
        }
        if(foo == (int)valid.size()) {
            ans++;
        }
    }
    cout << ans;

    return 0;
}
/**
2
*b
1
cc


3
a*b
2
abb
acb


4
a**d
3
aadd
abcd
acdd
*/
