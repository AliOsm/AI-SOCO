#pragma GCC optimize(2)
#pragma GCC optimize(3)
#pragma GCC optimize(4)
#include<bits/stdc++.h>
using namespace std;
#define y1 y11
#define fi first
#define se second
#define pi acos(-1.0)
#define LL long long
//#define mp make_pair
#define pb push_back
#define ls rt<<1, l, m
#define rs rt<<1|1, m+1, r
#define ULL unsigned LL
#define pll pair<LL, LL>
#define pli pair<LL, int>
#define pii pair<int, int>
#define piii pair<pii, int>
#define pdd pair<double, double>
#define mem(a, b) memset(a, b, sizeof(a))
#define debug(x) cerr << #x << " = " << x << "\n";
#define fio ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
//head

int q;
LL k;
vector<int> vc;
int sol(LL n) {
    LL l = 1, r = 9, d = 1, x = 0;
    while(true) {
        if(x+(r-l+1)*d >= n) {
            LL t = l+(n-x)/d-1;
            if((n-x)%d == 0) return t%10;
            else {
                ++t;
                vc.clear();
                while(t) vc.pb(t%10), t /= 10;
                reverse(vc.begin(), vc.end());
                return vc[(n-x)%d-1];
            }
        }
        x += (r-l+1)*d;
        ++d;
        l = r+1;
        r = r*10+9;
    }
}
int solve(LL n) {
    LL l = 1, r = 9, d = 1, x = 0, y = 0, t;
    while(true) {
        if(x+(y+d+y+(r-l+1)*d)*(r-l+1)/2 >= n) {
            LL ll = 0, rr = r-l+1, mm=ll+rr+1>>1;
            while(ll < rr) {
                LL tmp = x+(y+d+y+mm*d)*mm/2;
                if(mm == 0) tmp = x;
                if(tmp < n) ll = mm;
                else rr = mm-1;
                mm = ll+rr+1 >> 1;
            }
            if(mm == 0) return sol(n-x);
            else return sol(n-x-(y+d+y+mm*d)*mm/2);
        }
        x += (y+d+y+(r-l+1)*d)*(r-l+1)/2;
        y += (r-l+1)*d;
        ++d;
        l = r+1;
        r = r*10+9;
    }
}
int main() {
    scanf("%d", &q);
    while(q--) {
        scanf("%lld", &k);
        printf("%d\n", solve(k));
    }
    return 0;
}

