#include <bits/stdc++.h>
/*#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
template <typename T> using ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;*/

#define all(c) c.begin(),c.end()
#define ll long long
#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())
#define mp(x, y) make_pair(x, y)
#define mod 1000000007
#define PI 3.1415926536
#define pll pair<ll, ll>
using namespace std;

bool is_prime(ll n) {
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

vector<ll> fact(ll n) {
    n = abs(n);
    vector<ll> ans;
    for (int i = 1; i * i <= n; i++) {
        if (n % i == 0) {
            ans.push_back(i);
            ans.push_back(n / i);
        }
    }
    return ans;
}

inline ll getPow(ll a,ll b) {
    ll res = 1ll, tp = a;
    while (b){
       if (b&1ll) {
           res *= tp;
           res %= mod;
       }
       tp *= tp;
       tp %= mod;
       b >>= 1ll;
    }
    return res;
}

ll vec_mult(const pll & t1, const pll & t2, const pll & t3) {
   const ll & x1 = t1.first, y1 = t1.second;
   const ll & x2 = t2.first, y2 = t2.second;
   const ll & x3 = t3.first, y3 = t3.second;
   return abs((x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1));
}

void ok() {
   cout << "YES" << endl;
   exit(0);
}

void no() {
   cout << "NO" << endl;
   exit(0);
}

inline ll nxt() {
    ll x;
    cin >> x;
    return x;
}

const ll N = 2e5 + 5, inf = 1e18;
int days[13] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0), cout.tie(0);
    ll n = nxt(), m = nxt();
    ll te1 = 0;
    ll te2 = 0;
    for (int i = 1; i <= m; i++) {
        ll cur = getPow(m, mod - 2) % mod * (i - 1) % mod * getPow(m, mod - 2) % mod;
        te1 += cur;
        te1 %= mod;
    }
    for (int i = 1; i <= m; i++) {
        te2 += getPow(m, mod - 2) * getPow(m, mod - 2) % mod;
        te2 %= mod;
    }

    vector<ll> a(n);
    vector<ll> b(n);
    for (int i = 0; i < n; i++) {
        a[i] = nxt();
    }
    for (int i = 0; i < n; i++) {
        b[i] = nxt();
    }
    ll ans = 0;
    ll t = 1ll;
    for (int i = 0; i < n; i++) {
        if (a[i] == 0) {
            if (b[i] == 0) {
                ans += t * te1 % mod;
            } else {
                ll tmp = m - b[i];
                ans += t * tmp % mod * getPow(m, mod - 2) % mod;
            }
        } else {
            if (b[i] == 0) {
                ll tmp = a[i] - 1;
                ans += t * tmp % mod * getPow(m, mod - 2) % mod;
            } else {
                if (a[i] > b[i]) {
                    ans += t;
                    break;
                }
            }
        }

        if (a[i] == 0 && b[i] == 0) {
            t *= te2;
        } else if (a[i] == 0 && b[i]) {
            t *= getPow(m, mod - 2);
        } else if (a[i] && b[i] == 0) {
            t *= getPow(m, mod - 2);
        } else if (a[i] && b[i]) {
            if (a[i] < b[i]) {
                t = 0;
            }
        }
        t %= mod;
        ans %= mod;
    }
    cout << ans % mod;
    return 0;
}