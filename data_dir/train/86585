 /*
    __                      _    _            __                 __
   / /_/\__        __ _    | | _| | __     _  \ \       __/\__  / /
  / /\    /       / _` |   | |/ / |/ /    (_)  | |      \    / / / 
 / / /_  _\      | (_| |   |   <|   <      _   | |      /_  _\/ /  
/_/    \/         \__,_|___|_|\_\_|\_\    (_)  | |        \/ /_/   
                      |_____|                 /_/                  

*/
#include <bits/stdc++.h>
#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long int
#define ld long double
using namespace std;
const long double pi = 3.14159265358979323;
const double EPS = 1e-12;
const int N = 1e6 + 5;
const int MOD = 1e9 + 7;

std::vector<pair<ll, ll> > v;
int main(){
	fast;
	ll n, x, xx, y;
	cin >> n >> x >> xx;
	for(int i = 0; i < n; i++){
		cin >> y;
		v.push_back({y, i});
	}
	sort(v.begin(), v.end());
	//reverse approach
	for(int  i = 0; i < n; i++){
		ll t = (x + v[i].first - 1) / v[i].first;
		if(t + i < n){
			ll tt = (xx + v[t + i].first - 1) / v[t + i].first;
			if(t + i + tt <= n){
				cout << "Yes\n";
				cout << t << " " << tt << "\n";
				for(int j = i; j < t + i; j++) cout << v[j].second + 1 << " ";
				cout << "\n";
				for(int j = t + i; j < tt + t + i; j++) cout << v[j].second + 1 << " ";
				return 0;
			}
		}
	}
	for(int i = 0; i < n; i++){
		ll t = (xx + v[i].first - 1) / v[i].first;
		if(t + i < n){
			ll tt = (x + v[t + i].first - 1) / v[t + i].first;
			if(tt + t + i <= n){
				cout << "Yes\n";
				cout << tt << " " << t << "\n";
				for(int j = t + i; j < tt + t + i; j++) cout << v[j].second + 1 << " ";
				cout << "\n";
				for(int j = i; j < t + i; j++) cout << v[j].second + 1 << " ";			
				return 0;
			}
		}
	}
	cout << "No\n";

	return 0;
}
/*
 check for corner cases(n == 1?)
 read the highlighted part again
 check nested for loops, flags, and breaks
*/
