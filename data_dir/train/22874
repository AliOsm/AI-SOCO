#include<bits/stdc++.h>
#define pb push_back
using namespace std;
const int N = 2000*100 + 10;
typedef long long ll;

int st[N] , en[N], h[N] , pt , n;
ll tr[N*4] , a[N];
vector <int> adj[N];
bool mark[N];
void DFS(int v , int par = 0){

     mark[v] = 1;
     st[v] = pt++;
     h[v] = h[par] + 1;

     for(int u : adj[v])
        if(!mark[u])
                DFS(u , v);

     en[v] = pt;
     return;
}

int rec(int x){     
     return ((x%2) ? 1 : -1);   
}

void add(int l , int r , ll val , int b = 0 , int e = n , int ind = 1){
    if(l <= b && e <= r){
        tr[ind] += val;
        return;
    }

    int mid = (b+e)/2;
    if(l < mid)
        add(l , r , val , b , mid , ind*2);
    if(r > mid)
        add(l , r , val , mid , e , ind*2 + 1);
    
    return;
}

ll get(int p , ll sgn , int b = 0 , int e = n , int ind = 1){
    
    int mid = (b + e)/2 , ret = tr[ind]*sgn;

    if(b + 1 == e)
        return ret;

    if(p < mid)
        ret += get(p , sgn , b , mid , ind*2);
    else
        ret += get(p , sgn , mid , e , ind*2 + 1);
        
    return ret;
}

int main(){

    ios_base::sync_with_stdio(0) , cin.tie(0) , cout.tie(0);

    int m , u , v , val , type;
    cin >> n >> m;
        
    for(int i = 0 ; i < n ; i++)
        cin >> a[i];

    for(int i = 1 ; i < n ; i++){
        cin >> u >> v;
        u-- , v--;
        adj[u].pb(v);
        adj[v].pb(u);
    }

    DFS(0);
    
    for(int i = 0 ; i < m ; i++){
        cin >> type >> v;
        v--;
        if(type == 1){
                cin >> val;
                add(st[v] , en[v] , val*rec(h[v]));
        }
        else
                cout << get(st[v] , rec(h[v])) + a[v] << endl;
        
    }

    return 0;
}
