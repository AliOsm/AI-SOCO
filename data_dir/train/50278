//g++ -std=c++14 -g -O2 -o ./a ./A.cpp
#include <bits/stdc++.h>
using namespace std;
#define ff first
#define ss second
#define nl '\n'
typedef long long ll;
//////////////////////////////////////////////////////////////////////

const int N = 100100;
char a[N];int n;
const int INF = -(0x80808080);

int dp[N][3][2];
bool done[N][3][2],take[N][3][2];

int f(int i=1,int rem=0,bool z=1){
  if(i>n)return (rem==0?0:-INF);
  if(done[i][rem][z])return dp[i][rem][z];
  
  done[i][rem][z]=1;
  
  int ret = -INF;

  int lv = f(i+1,rem,z);

  if(a[i]=='0' and z){
    ret = lv;
  }else{
    int tk = 1 + f(i+1,(a[i]+rem)%3,0);
    if(tk>lv){
      ret=tk;
      take[i][rem][z]=1;
    }else{
      ret=lv;
    }
  }
  
  return dp[i][rem][z]=ret;
}

int main(){
  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
  
  cin>>1+a;n=strlen(1+a);

  memset(dp,0x80,sizeof dp);
  memset(done,0,sizeof done);
  memset(take,0,sizeof take);

  int len = f();
  
  if(len==0){
    bool fl=0;
    for(int i=1;i<=n;i++)if(a[i]=='0'){fl=1;break;}
    if(fl)cout<<0<<nl;
    else cout<<-1<<nl;
  }else{
    string sol;

    int rem=0;bool zz=1;
    for(int idx=1;idx<=n;idx++){
      if(take[idx][rem][zz]){
	sol+=a[idx];
	rem=(rem+a[idx])%3;
	zz=0;
      }
    }

    cout<<sol<<nl;
  }
  
  return 0;
}
