#include <bits/stdc++.h>

using namespace std;
int const N=2e5+10,M=11,OO=2e9,oo=1e9+1;
int n,m;
int aa[N];
pair<int,int > seg[N<<2][M];

pair<int,int > getMin(pair<int,int > a,pair<int,int > b){
    int mn1=min(a.first,a.second),mn2=min(b.first,b.second);
    int mx1=max(a.first,a.second),mx2=max(b.first,b.second);
    if(mx1<=mn2)return a;
    if(mx2<mn1)return b;
    return {mn1,mn2};
}
void upd(int p,int l,int r,int at,int digit, int value){
    if(l==at&&r==at){
        seg[p][digit] = {value,oo};
        return ;
    }
    int m=(l+r)>>1;
    if(at<=m)upd(p<<1,l,m,at,digit,value);
    else upd(p<<1|1,m+1,r,at,digit,value);
    seg[p][digit]=getMin(seg[p<<1][digit],seg[p<<1|1][digit]);
}
pair<int,int > get(int p,int l,int r,int lx,int rx,int digit){
    if(l>=lx&&r<=rx)return seg[p][digit];
    if(l>rx||r<lx)return {oo,oo};
    int m=(l+r)>>1;
    pair<int,int > f1=get(p<<1,l,m,lx,rx,digit),f2 = get(p<<1|1,m+1,r,lx,rx,digit);
    return getMin(f1,f2);
}
void onUpdate(int idx,int x){
    int tmp=x;
    for(int j=0;j<M;j++){
        if(tmp%10)upd(1,1,n,idx,j,x);
        else upd(1,1,n,idx,j,oo);
        tmp/=10;
    }
}
int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin>>n>>m;
    for(int i=1;i<=n;i++){
        cin>>aa[i];
        onUpdate(i,aa[i]);
    }
    for(int i=0;i<m;i++){
        int t;
        cin>>t;
        if(t==1){
            int idx,x;
            cin>>idx>>x;
            onUpdate(idx,x);
        }else{
            int l,r;
            cin>>l>>r;
            if(l==r){
                cout<<-1<<'\n';
                continue;
            }
            int an=OO+1;
            for(int j=0;j<M;j++){
                pair<int,int > vv = get(1,1,n,l,r,j);
                if(vv.first==oo||vv.second==oo)continue;
                an=min(an,vv.first+vv.second);
            }
            if(an>OO)cout<<-1<<'\n';
            else cout<<an<<'\n';
        }
    }
    return 0;
}