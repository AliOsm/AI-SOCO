#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_WARINGS
#define _USE_MATH_DEFINES

#include <bits/stdc++.h>

using namespace std;

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int64, int64> pll;

const int INF = (int)(1e9 + 1337);
const int64 LINF = (int64)(4e18);
const double EPS = (double)(1e-11);
#define sq(x) ((x)*(x))
#define FAIL() ((*(int*)(0))++)

const int MAXN = 10005;

int n;
int p[MAXN];
vector <vector <int> > g;
bool used[MAXN];

void dfs(int v)
{
    used[v] = true;
    for (int i = 0; i < (int)g[v].size(); i++)
    {
        int to = g[v][i];
        if (!used[to])
        {
            dfs(to);
        }
    }
}

void solve()
{
    scanf ("%d", &n);
    g.resize(n + 1);
    for (int i = 1; i <= n; i++)
    {
        scanf ("%d", &p[i]);
        g[p[i]].push_back(i);
        g[i].push_back(p[i]);
    }
    int ans = 0;
    for (int i = 1; i <= n; i++)
    {
        if (!used[i])
        {
            ++ans;
            dfs(i);
        }
    }
    printf("%d\n", ans);
    fflush(stdout);
}

int main()
{
    solve();
}

