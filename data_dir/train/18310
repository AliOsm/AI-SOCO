#include<bits/stdc++.h>
using namespace std;
#define int long long int
#define double long double
#define pb push_back
#define endl '\n'
#define all(x) (x).begin(),(x).end()
#define F first
#define S second
#define sz(a) (int)((a).size())
#define fuck() cout<<"--------"<<endl
#define see(x) cout<<#x<<" = "<<x<<endl
#define see2(x,y) cout<<#x<<" = "<<x<<"::"<<#y<<" = "<<y<<endl 
const int mod=1000000007;
typedef pair<int,int> pii;
const int inf=1e17;
const int N=1e5+5;
void __solve(){
		int n;
		cin>>n;
		vector<int>p(n),pos(n),cnt(n);
		for(auto &i:p){
			cin>>i;
			i--;
		}
		set<int>unvis;
		multiset<int>cnt_vals;
		for(int i=0;i<n;i++){
			unvis.insert(i);
			cnt[i]=1;
			cnt_vals.insert(1);
			pos[p[i]]=i;
		}
		bool ok=true;
		for(int i=0;i<n;i++){
			int id=pos[i];
			int mx_cnt=*cnt_vals.rbegin();
			if(mx_cnt!=cnt[id]){
				ok=false;
				break;
			}
			unvis.erase(id);
			cnt_vals.erase(cnt_vals.find(cnt[id]));
			auto it=unvis.upper_bound(id);
			if(it!=unvis.end()){
				cnt_vals.erase(cnt_vals.find(cnt[*it]));
				cnt[*it]+=cnt[id];
				cnt_vals.insert(cnt[*it]);
			}
		}
		if(ok)cout<<"Yes"<<endl;
		else cout<<"No"<<endl;
}
int32_t main()
{
	ios_base::sync_with_stdio(0); cin.tie(0);cout.tie(0);
	int T;
	cin>>T;
	while(T--){
		__solve();
	}
}