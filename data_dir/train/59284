#include<bits/stdc++.h>
using namespace std;



const int N = 5e5 + 5;



int n, k, a[N];

inline bool check1(int x){
    long long cur = 0;
    for(int i = 1; i <= n; i++){
        cur += max(0, x - a[i]);
    }
    return cur <= k;
}

inline bool check2(int x){
    long long cur = 0;
    for(int i = 1; i <= n; i++){
        cur += max(0, a[i] - x);
    }
    return cur <= k;
}


int main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> k;
    int kk = k;
    for(int i = 1; i <= n; i++){
        cin >> a[i];
    }
    int l = 0, r = 2e9, ans1, ans2;
    while(r - l > 1){
        int mid = (r + l) >> 1;
        if(check1(mid)){
            l = mid;
        }
        else{
            r = mid;
        }
    }
    if(check1(r)){
        ans1 = r;
    }
    else{
        ans1 = l;
    }
    for(int i = 1; i <= n; i++){
        k -= max(0, ans1 - a[i]);
        a[i] = max(a[i], ans1);
    }
    for(int i = 1; i <= n && k; i++){
        if(a[i] == ans1){
            a[i]++;
            k--;
        }
    }
    k = kk;
    l = 0, r = 2e9;
    while(r - l > 1){
        int mid = (r + l) >> 1;
        if(check2(mid)){
            r = mid;
        }
        else{
            l = mid;
        }
    }
    if(check2(l)){
        ans2 = l;
    }
    else{
        ans2 = r;
    }
    for(int i = 1; i <= n; i++){
        k -= max(0, a[i] - ans2);
        a[i] = min(a[i], ans2);
    }
    for(int i = 1; i <= n && k; i++){
        if(a[i] == ans2){
            a[i]--;
            k--;
        }
    }
    int mn = 2e9, mx = -2e9;
    for(int i = 1; i <= n; i++){
        mn = min(mn, a[i]);
        mx = max(mx, a[i]);
    }
    cout << mx - mn;
}
