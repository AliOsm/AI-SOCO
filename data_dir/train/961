//be naame khodaa

#include <bits/stdc++.h>

typedef long long ll;

const int maxn = 1e5 + 5;

using namespace std;

struct T
{
	ll x, y;
	int id;
	T () {}
	T (ll x_, ll y_, int id_)
	{
		x = x_;
		y = y_;
		id = id_;
	}
	bool operator < (T b) const
	{
		ll xp = x*b.y, yp = b.x*y;
		return (xp < yp || xp == yp && id < b.id);
	}
};

bool cmp(pair <int, int> a, pair <int, int> b)
{
	ll x = (ll)a.first*b.second;
	ll y = (ll)b.first*a.second;
	return x < y;
}

vector < pair <int, int> > p;
bool bad[maxn], in[maxn];
int g[maxn], good[maxn];
vector <int> v[maxn];
int n, m, k;

bool ok(int id, bool chap)
{
	set <T> s;
	for (int i = 0; i < n; i++)
	{
		if (bad[i]) continue;
		s.insert(T(g[i] = good[i], v[i].size(), i));
		in[i] = true;
	}
	while (!s.empty())
	{
		auto z = s.begin();
		pair <int, int> zp;
		zp.first = z->x, zp.second = z->y;
		if (cmp(zp, p[id]))
		{
			int cur = z->id;
			for (int u : v[cur])
			{
				if (!in[u]) continue;
				s.erase(T(g[u], v[u].size(), u));
				g[u]--;
				s.insert(T(g[u], v[u].size(), u));
			}
			s.erase(z);
			in[cur] = false;
		}
		else
			break;
	}
	if (chap)
	{
		printf("%d\n", s.size());
		for (auto it = s.begin(); it != s.end(); it++)
			printf("%d ", it->id+1);
		printf("\n");
	}
	return !s.empty();
}

int main()
{
	int a, b;
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i < k; i++)
	{
		scanf("%d", &a);
		bad[a-1] = true;
	}
	for (int i = 0; i < m; i++)
	{
		scanf("%d%d", &a, &b);
		a--; b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	p.push_back({0, 1});
	for (int i = 0; i < n; i++)
	{
		int d = v[i].size();
		for (int j = 1; j <= d; j++)
		{
			p.push_back({j, d});
			if (!bad[v[i][j-1]])
				good[i]++;
		}
	}
	sort(p.begin(), p.end(), cmp);
	int l = 0, r = p.size(), mid;
	while (r-l > 1)
		(ok(mid = (l+r)/2, false) ? l : r) = mid;
	ok(l, true);
    return 0;
}
