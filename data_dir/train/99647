   #include <bits/stdc++.h>
//    #include <boost/multiprecision/cpp_int.hpp>
 #define int  long long
 #define inf  1000000007
 #define pa pair<int,int>
 #define ll long long
 #define pal pair<double,double>
  #define PI 3.14159265358979323846
  #define  mp make_pair
  #define  pb push_back
  #define EPS (1e-8)
                                          
    int dx[8]={0,1,0,-1,1,1,-1,-1};
    int dy[8]={1,0,-1,0,-1,1,1,-1};
                                            using namespace std;
                                   			class pa3{
                                            	public:
                                            	int x;
                                   				int y,z;
                                            	pa3(int x=0,int y=0,int z=0):x(x),y(y),z(z) {}
                                            	bool operator < (const pa3 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		 return z<p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                   				bool operator > (const pa3 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		 return z>p.z;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa3 &p) const{
                                            		return x==p.x && y==p.y && z==p.z;
                                            	}
                                            		bool operator != (const pa3 &p) const{
                                            			return !( x==p.x && y==p.y && z==p.z);
                                            	}
                                            
                                            };
                                            
                                            class pa4{
                                            	public:
                                            	int x;
                                            	int y,z,w;
                                            	pa4(int x=0,int y=0,int z=0,int w=0):x(x),y(y),z(z),w(w) {}
                                            	bool operator < (const pa4 &p) const{
                                            		if(x!=p.x) return x<p.x;
                                            		if(y!=p.y) return y<p.y;
                                            		if(z!=p.z)return z<p.z;
                                            		return w<p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator > (const pa4 &p) const{
                                            		if(x!=p.x) return x>p.x;
                                            		if(y!=p.y) return y>p.y;
                                            		if(z!=p.z)return z>p.z;
                                            		return w>p.w;
                                            		//return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa4 &p) const{
                                            		return x==p.x && y==p.y && z==p.z &&w==p.w;
                                            	}
                                            		
                                            
                                            };
                                            class pa2{
                                            	public:
                                            	int x,y;
                                            	pa2(int x=0,int y=0):x(x),y(y) {}
                                            	pa2 operator + (pa2 p) {return pa2(x+p.x,y+p.y);}
                                            	pa2 operator - (pa2 p) {return pa2(x-p.x,y-p.y);}
                                            	bool operator < (const pa2 &p) const{
                                            		return y != p.y ? y<p.y: x<p.x;
                                            	}
                                            	bool operator > (const pa2 &p) const{
                                            		return x != p.x ? x<p.x: y<p.y;
                                            	}
                                            	bool operator == (const pa2 &p) const{
                                            		return abs(x-p.x)==0 && abs(y-p.y)==0;
                                            	}
                                            	bool operator != (const pa2 &p) const{
                                            		return !(abs(x-p.x)==0 && abs(y-p.y)==0);
                                            	}
                                            		
                                            
                                            };
                                            
 
                      
                                string itos( int i ) {
                                ostringstream s ;
                                s << i ;
                                return s.str() ;
                                }
                                 
                                int Gcd(int v,int b){
                                	if(v==0) return b;
                                	if(b==0) return v;
                                	if(v>b) return Gcd(b,v);
                                	if(v==b) return b;
                                	if(b%v==0) return v;
                                	return Gcd(v,b%v);
                                }
                 
                            
                                int mod;
int extgcd(int a, int b, int &x, int &y) {
    if (b == 0) {
        x = 1;
        y = 0;
        return a;
    }
    int d = extgcd(b, a%b, y, x);
    y -= a/b * x;
    return d;
}
pa operator+(const pa & l,const pa & r) {   
    return {l.first+r.first,l.second+r.second};                                    
}    
pa operator-(const pa & l,const pa & r) {   
    return {l.first-r.first,l.second-r.second};                                    
}  
                int beki(int wa,int rr,int warukazu){
                	if(rr==0) return 1%warukazu;
                	if(rr==1) return wa%warukazu;
                	wa%=warukazu;
                	if(rr%2==1) return ((ll)beki(wa,rr-1,warukazu)*(ll)wa)%warukazu;
                	ll zx=beki(wa,rr/2,warukazu);
                	return (zx*zx)%warukazu;
                }
 /*
                              
                int pr[1000100];
                int inv[1000110];
                

                
    			int comb(int nn,int rr){
    				if(rr<0 || rr>nn || nn<0) return 0;
    				int r=pr[nn]*inv[rr];
    				r%=mod;
    				r*=inv[nn-rr];
    				r%=mod;
    				return r;
    			}
               
                void gya(int ert){
                	pr[0]=1;
                	for(int i=1;i<=ert;i++){
                		pr[i]=((ll)pr[i-1]*i)%mod;
                	}
                		inv[ert]=beki(pr[ert],mod-2,mod);
                	for(int i=ert-1;i>=0;i--){
                		inv[i]=(ll)inv[i+1]*(i+1)%mod;
                	}
                }
               */ 
              //   cin.tie(0);
    		//	ios::sync_with_stdio(false);
    			//priority_queue<pa3,vector<pa3>,greater<pa3>> pq;            
                 //sort(ve.begin(),ve.end(),greater<int>());
 //   mt19937(clock_per_sec);
  //  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count()) ;

vector<int> mana(string s){
	int leng=s.length();
	
	int it=0;
	vector<int> X(leng,0);
	int t=0;
	while(it<leng){
		int sa=1;
		while(it-t>=0&&it+t<leng&&s[it-t]==s[it+t])t++;
		X[it]=t;
		while(it-sa>=0&&X[it-sa]+sa<t){
			X[it+sa]=X[it-sa];
			sa++;
		}
		it+=sa;
		t-=sa;
	}
	return X;
}


void solve(){
	string s;
	cin>>s;
	int l=s.length();
	
	string t="";
	for(int i=0;i<l;i++){
		t+=s[i];
		if(i<l-1)t+="Z";
	}
	vector<int> ve=mana(t);
	vector<int> G(l,0);
//	cout<<l<<endl;
//	for(auto v:ve)cout<<v<<" ";
//	cout<<endl;
	for(int i=0;i<2*l-1;i++){
		if(i%2){
			if(ve[i]%2==0)ve[i]++;
			if(i<l){
				G[i/2-(ve[i]-3)/2]=max(G[i/2-(ve[i]-3)/2],ve[i]-1);
			}
			if(i>=l-1){
				G[i/2+1+(ve[i]-3)/2]=max(G[i/2+1+(ve[i]-3)/2],ve[i]-1);		
			}
		}
		else{
			if(ve[i]%2)ve[i]++;
			if(i<l){
				G[i/2-(ve[i]-2)/2]=max(G[i/2-(ve[i]-2)/2],ve[i]-1);
			}
			if(i>=l-1){
				G[i/2+(ve[i]-2)/2]=max(G[i/2+(ve[i]-2)/2],ve[i]-1);		
			}
		}
	
	}
	
	for(int i=1;i<(l+1)/2;i++)G[i]=max(G[i-1]-2,G[i]);
	for(int i=l-2;i>=(l-1)/2;i--)G[i]=max(G[i+1]-2,G[i]);
	
//	for(auto v:G)cout<<v<<" ";
//	cout<<endl;
	
	pa3 ans={0,0,0};
	int a=0,b=l-1;
	while(1){
	
			ans=max(ans,(pa3){a*2+G[a],a+G[a],a});
			ans=max(ans,(pa3){a*2+G[b],a,G[b]+a});
		
		
	if(s[a]!=s[b])break;
	a++,b--;
		if(a>b) break;
		
	}
//	cout<<ans.y<<" "<<ans.z<<endl;
	for(int i=0;i<ans.y;i++)cout<<s[i];
	for(int i=l-ans.z;i<l;i++)cout<<s[i];
	cout<<"\n";
	
}

signed main(){
cin.tie(0);
ios::sync_with_stdio(false);
	
	int n;
	cin>>n;
	for(int i=0;i<n;i++)solve();
	
	//if()
	
	return 0;
 }


