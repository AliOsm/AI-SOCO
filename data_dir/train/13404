#include <bits/stdc++.h>
using namespace std;

struct Friend {
  int probs = 0, k = 0, cost = 0;
  void read() {
    int x;
    cin >> cost >> k >> x;
    for (int i = 0; i < x; ++i) {
      int a; cin >> a;
      --a;
      probs |= 1 << a;
    }
  }
  bool operator<(const Friend& oth) const {
    return k < oth.k;
  }
} F[100];

int main(){
  ios_base::sync_with_stdio(false); cin.tie(0);
  int n, m, b; cin >> n >> m >> b;
  for (int i = 0; i < n; ++i) F[i].read();
  sort(F, F + n);
  vector<long long> dp(1<<m, 1ll<<60);
  dp[0] = 0;
  long long ans = 1ll << 60;
  for (int i = 0; i < n; ++i) {
    int probs = F[i].probs, cost = F[i].cost, k = F[i].k;
    for (int S = 0; S < (1<<m); ++S) {
      dp[S|probs] = min(dp[S|probs], dp[S] + cost);
    }
    ans = min(ans, dp.back() + 1ll * k * b);
  }
  cout << (ans == (1ll<<60) ? -1ll : ans) << '\n';
}
