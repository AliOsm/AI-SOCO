#include<bits/stdc++.h>

using namespace std;

#define fRead(x)        freopen(x,"r",stdin)
#define fWrite(x)       freopen (x,"w",stdout)

#define LL              long long
#define ULL             unsigned long long
#define ff              first
#define ss              second
#define pb              push_back
#define INF             2e16
#define PI              acos(-1.0)
#define mk              make_pair
#define pii             pair<int,int>
#define pll             pair<LL,LL>


#define min3(a,b,c)     min(a,min(b,c))
#define max3(a,b,c)     max(a,max(b,c))
#define min4(a,b,c,d)   min(a,min(b,min(c,d)))
#define max4(a,b,c,d)   max(a,max(b,max(c,d)))
#define SQR(a)          ((a)*(a))
#define FOR(i,a,b)      for(int i=a;i<=b;i++)
#define ROF(i,a,b)      for(int i=a;i>=b;i--)
#define REP(i,b)        for(int i=0;i<b;i++)
#define MEM(a,x)        memset(a,x,sizeof(a))
#define ABS(x)          ((x)<0?-(x):(x))

#define SORT(v)         sort(v.begin(),v.end())
#define REV(v)          reverse(v.begin(),v.end())


#define FastRead        ios_base::sync_with_stdio(0);cin.tie(nullptr);
const int N = 10005;
int ara[N + 5];
int n;
int answer[N + 5];

void process()
{
    for(int i = 1;i <= n;i++){
        for(int j = 2; ;j++){
            int num = j * j;
            if(num > ABS(ara[i]))break;
            while(ara[i] % num == 0){
                ara[i]/=num;
            }
        }
    }
}

int pre[N];
int main()
{
    scanf("%d",&n);
    FOR(i,1,n)scanf("%d",&ara[i]);
    process();

    for(int i = n;i >= 1;i--){
        for(int j = 1;j < i;j++){
            if(ara[i] == ara[j]){
                pre[i] = j;
            }
        }
    }


    for(int i = 1;i <= n;i++){
        int st = 0;
        for(int j = i;j <= n;j++){
            if(ara[j] == 0){
                answer[max(1,st)]++;
                continue;
            }
            int got = pre[j];
            if(got < i)st++;
            answer[st]++;
        }
    }
    for(int i = 1;i <= n;i++)printf("%d ",answer[i]);
}

