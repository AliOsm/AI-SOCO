 /*
 Problem name :
 Algorithm : Not Sure Yet
 Contest/Practice :
 Source :
 Comment : Whenever you start to believe  yourself, people also start to believe in you
 Date : --
 Last Update : 25-Mar-2015
*/

#include<bits/stdc++.h>

#define pause           system("pause");
#define FOR(s,e,inc)    for(int i=s;i<=e;i+=inc)
#define mod             1000000007
#define UNIQUE(V) (V).erase(unique((V).begin(),(V).end()),(V).end())//vector must be sorted
#define inf             1<<30
#define pb              push_back
#define ppb             pop_back
#define mp              make_pair
#define F               first
#define S               second
#define sz(x)           ((int)x.size())
#define sqr(x)          ( (x)* (x) )
#define eps             1e-9
#define lcm(x,y)        (abs(x) /gcd(x,y))* abs(y)
#define on(x,w)         x|(1<<w)
#define check(x,w)      (x&(1<<w))
#define all(x)          (x).begin(),(x).end()
#define pf              printf
#define sf              scanf
#define pi              acos(-1.0)
#define reset(x,v)      memset(x,v,sizeof(x));
#define AND             &&
#define OR              ||
#define what_is(x)      cerr<<#x<<" is "<<x<<"\n";

typedef long long ll;
typedef unsigned long long llu;

using namespace std;


template<class T>
inline T mod_v(T num)
{
    if(num>=0)
        return num%mod;
    else
        return (num%mod+mod)%mod;
}
template<class T>
inline T gcd(T a,T b)
{
    a=abs(a);
    b=abs(b);

    while(b) b ^= a ^= b ^= a %= b;
    return a;
}

template<class T>
T fast_pow(T n , T p)
{
    if(p==0) return 1;
    if(p%2)
    {
        T g=mod_v ( mod_v(n) * mod_v(fast_pow(n,p-1)) );
        return g;
    }
    else
    {
        T g=fast_pow(n,p/2);
        g=mod_v( mod_v(g) * mod_v(g) ) ;
        return g;
    }
}

template<class T>
inline T modInverse(T n)
{
    return fast_pow(n,mod-2);
}
 

bool equalTo ( double a, double b ){ if ( fabs ( a - b ) <= eps ) return true; else return false; }
bool notEqual ( double a, double b ){if ( fabs ( a - b ) > eps ) return true; else return false; }
bool lessThan ( double a, double b ){ if ( a + eps < b ) return true; else return false; }
bool lessThanEqual ( double a, double b ){if ( a < b + eps ) return true;   else return false;}
bool greaterThan ( double a, double b ){if ( a > b + eps ) return true;else return false;}
bool greaterThanEqual ( double a, double b ){if ( a + eps > b ) return true;else return false;}

#define debug(args...) {dbg,args; cerr<<endl;}

struct debugger{
    template<typename T> debugger& operator , (const T& v){
        cerr<<v<<" ";
        return *this;
    }
}dbg;

int nextInt() { int n; scanf("%d", &n); return n; }
long long nextLong() { long long n; scanf("%lld", &n); return n; }
void print(int n){ printf("%d", n); }
void println(int n){ printf("%d\n", n); }
void println(long long n){ printf("%lld\n", n); }



template<class T>
inline int in(register T& num)
{
    register char c=0;
    num=0;
    bool n=false;
    while(c<33)c=getchar();
    while(c>33){
        if(c=='-')
            n=true;
        else num=num*10+c-'0';
        c=getchar();
    }
    num=n?-num:num;
    return 1;
}

/******* ! Code start from here ! *******/

string a,b;
char s[103];
int f[201];
int dp[102][102][102];
int ln;

int re(int p,int q,int r){
    if(r==ln ) return -inf;

    if(p==sz(a) or q==sz(b) ) return 0;

    int &res = dp[p][q][r];

    if(res!=-1) return res;

    res = 0;

    if(a[p]==b[q] ){
        
        int tmp = r; 

        while(tmp>=0 and s[tmp+1]!=a[p]) 
            tmp = f[tmp];  
      //  debug(p,q,tmp) 
        res = max(res, 1 + re(p+1,q+1,tmp+1) );
 
    }

    res = max(res,re(p+1,q,r) );
    res = max(res,re(p,q+1,r) );

    return res;
}

string res;

void P_re(int p,int q,int r){
     
    if(r==ln ) return ;

    if(p==sz(a) or q==sz(b) ) return ;
 
    if(a[p]==b[q]     ){
        
        int tmp = r; 
        while(tmp>=0 and s[tmp+1]!=a[p]) 
            tmp = f[tmp];  


        if(dp[p][q][r] == 1 + re(p+1,q+1,tmp+1) ){
            res.pb(a[p] );
            P_re(p+1,q+1,tmp+1); 
            return;
        }

    }

    if(re(p+1,q,r)>re(p,q+1,r) )
        P_re(p+1,q,r);
    else 
        P_re(p,q+1,r);

}

int main()
{
//     std::ios_base::sync_with_stdio(false);

    #ifdef kimbbakar
        freopen ( "E:/Code/in.txt", "r", stdin );
//        freopen ( "E:/Code/out.txt", "w", stdout );
    #endif

    cin>>a>>b>>s;
    f[0] = -1;
    f[1] = 0;
    ln = strlen(s);
 
    for(int i=ln;i>0;i--)
        s[i]=s[i-1] ;
     

    reset(dp,-1);

    for(int i=2;i<=ln;i++){
        int j = i,k=1;

        while(j<=ln and s[k]==s[j] ){
            f[j] = max(f[j],k );
            k++,j++;
        }
 
    }

    if(re(0,0,0)){
        P_re(0,0,0);
        cout<<res;        
    }
    else cout<<0;




    return 0;
}



