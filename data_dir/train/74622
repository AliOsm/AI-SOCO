#include <bits/stdc++.h>

using namespace std;

struct vec
{
    long double x,y;
    bool operator ==(const vec &a) const{
        return x==a.x&&y==a.y;
    }
    bool operator <(const vec &a) const{
        if(a.x!=x) return x<a.x;
        return y<a.y;
    }
    vec operator +(const vec &a) const{
        return {x+a.x,y+a.y};
    }
    vec operator *(const long double &a) const{
        return {x*a,y*a};
    }
    vec operator -(const vec &a) const{
        return {x-a.x,y-a.y};
    }
    vec operator /(const long double &a) const{
        return {x/a,y/a};
    }
    long double len() const{
        return sqrt(x*x+y*y);
    }
    long double dot(const vec &a) const{
        return x*a.x+y*a.y;
    }
    long double crs(const vec &a) const{
        return x*a.y-y*a.x;
    }
    vec proj(const vec &a) const{
        return (a/a.len())*(*this).dot(a)/a.len();
    }
};

struct P
{
    long long x,y;
    bool operator <(const P &a)const{
        return y>a.y;
    }
};


bool as(P a,P b)
{
    //if(a.y!=b.y)
    //return a.y<b.y;
    return a.x<b.x;
}

long long x,y,z,mod=1000000007;
vector<int> v;
int i,n,m,k,a,d,b,c,dx[10]={1,0,-1,0},dy[10]={0,1,0,-1};
int e;
int o[111];
int l[1];
int j[1];
//stack<int> s;
set<int> s;
queue<int> q;
P u[1];
char r[111111];
//string r,r1;
//2147483647
//'1'==49;
//'A'==65;
//'a'==97;
//unordered_
map<int,int> p;
//v.resize(unique(v.begin(),v.end())-v.begin());

//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
//rng();


int main()
{
    scanf("%lld %lld %d",&x,&y,&a);
    z=__gcd(x,y);
    x/=z,y/=z;
    //printf("@@@%lld %lld\n",x,y);
    for(int t=1;t<=a;t++)
    {
        long long n,m;
        scanf("%d %lld %d %lld",&c,&n,&d,&m);
        n--,m--;
        if(c==1)
            n/=x;
        else n/=y;
        if(d==1) m/=x;
        else m/=y;
        if(n==m) puts("YES");
        else puts("NO");
    }
}
