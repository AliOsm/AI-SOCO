#include <bits/stdc++.h>
using namespace std;

#define ENGZ ios::sync_with_stdio(0);cin.tie(0);ios_base::sync_with_stdio(0);
#define sfl3(x, y, z) scanf("%I64d%I64d%I64d", &x, &y, &z)
#define sfl2(x, y) scanf("%I64d%I64d" , &x,&y)
#define sfi2(x, y) scanf("%d%d" , &x,&y)
#define wtf(s) freopen((s), "w", stdout)
#define sfd2(x, y) scanf("%lf", &x, &y)
#define rff(s) freopen((s), "r", stdin)
#define sfl(x) scanf("%I64d" , &x)
#define sfi(x) scanf("%d" , &x)
#define sfd(x) scanf("%lf", &x)
#define sfc(x) scanf("%c", &x)
#define mod 1000000007
#define pi (2*acos(0))
typedef long long ll;
#define endl '\n'

vector<bool> prime (10000001, true);

void sieve(int n)
{
    prime[0] = prime[1] = false;
    for (int i = 2; i <= n; i++)
        for (int j = i * i; j <= n && prime[i] && i * 1ll * i <= n; j += i)
            prime[j] = false;
}

int main() {
    ll q, x;
    sieve(10000000);
    bool isprime = true;
    vector<ll> v;
    cin >> q;
    x = q;
    for (ll i = 2; i * i <= x && isprime; i++)
        if (x % i == 0)
            isprime = false;
    if (isprime)
        return cout << "1\n0", 0;
    for (int i = 2; q > 1 && i <= 1e7; i++)
        while (q % i == 0)
            v.push_back(i), q /= i;
    if (q != 1)
        v.push_back(q);
    if (v.size() == 2)
        return cout << 2, 0;
    q = x;
    v.clear();
    for (ll i = 2; i * i <= q; i++)
        if (q % i == 0)
        {
            v.push_back(i);
            if (q / i != i) {
                v.push_back(q / i);
            }
        }
    for (int i = 0; i < v.size(); i++)
    {
        vector<ll> ve;
        isprime = true;
        for (ll j = 2; j * j <= v[i]; j++)
            if (v[i] % j == 0)
                isprime = false;
        if (isprime)
            continue;
        x = v[i];
        for (int j = 2; v[i] > 1 && j <= 1e7; j++)
            while (v[i] % j == 0)
                v[i] /= j, ve.push_back(j);
        if (v[i] != 1)
            ve.push_back(v[i]);
        if (ve.size() == 2)
            return cout << "1\n" << x << endl, 0;
    }
    return 0;
}