/*
 * temp.cpp
 *
 *  Created on: 2012-7-18
 *      Author: BSBandme
 */
//#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <iostream>
#include <fstream>
#include <string.h>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cassert>
#include <list>
#include <iomanip>
#include <math.h>
#include <deque>
#include <utility>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <climits>
#include <cctype>
#include <cmath>
#include <cstdlib>
#include <functional>
#include <sstream>

using namespace std;

#define mpr make_pair
typedef unsigned long long ull;
typedef long long ll;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef pair <double, double> pdd;
typedef vector <int> vi;
typedef vector <ll> vll;
typedef vector <double> vd;
typedef vector <string> vs;
typedef map <string, int> mpsi;
typedef map <double, int> mpdi;
typedef map <int, int> mpii;

const double pi = acos(0.0) * 2.0;
const double eps = 1e-12;
const int step[8][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};

template <class T> inline T abs1(T a) {return a < 0 ? -a : a;}
template <class T> inline T max1(T a, T b, T c = -1234567, T d = -1234567) {
	T ans =  a > b ? a : b;
	if(c != -1234567) ans = max1(ans, c);
	if(d != -1234567) ans = max1(ans, d);
	return ans;
}
template <class T> inline T min1(T a, T b, T c = -1234567, T d = -1234567) {
	T ans = a < b ? a : b;
	if(c != -1234567) ans = min(ans, c);
	if(d != -1234567) ans = min(ans, d);
	return ans;
}
template <class T> inline T gcd1(T a, T b) {
	if(a < b) swap(a, b);
	if(b == 0) return a;
	if(a % b == 0) return b;
	return gcd1(b, a % b);
}
template <class T> inline T lowb(T num) {return num & (-num); }
inline int jud(double a, double b){
	if(abs(a) < eps && abs(b) < eps) return 0;
	else if(abs1(a - b) / abs1(a) < eps) return 0;
	if(a < b) return -1;
	return 1;
}
template <typename t>
inline int jud(t a, t b){
	if(a < b) return -1;
	if(a == b) return 0;
	return 1;
}
template <typename it, typename t1>
inline int find(t1 val, it a, int na, bool f_small = 1, bool f_lb = 1){
	int be = 0, en = na - 1;
	if(*a <= *(a + na - 1)){
		if(f_lb == 0) while(be < en){
			int mid = (be + en + 1) / 2;
			if(jud(*(a + mid), val) != 1) be = mid;
			else en = mid - 1;
		}else while(be < en){
			int mid = (be + en) / 2;
			if(jud(*(a + mid), val) != -1) en = mid;
			else be = mid + 1;
		}
		if(f_small && jud(*(a + be), val) == 1) be--;
		if(!f_small && jud(*(a + be), val) == -1) be++;
	} else {
		if(f_lb) while(be < en){
			int mid = (be + en + 1) / 2;
			if(jud(*(a + mid), val) != -1) be = mid;
			else en = mid - 1;
		}else while(be < en){
			int mid = (be + en) / 2;
			if(jud(*(a + mid), val) != 1) en = mid;
			else be = mid + 1;
		}
		if(!f_small && jud(*(a + be), val) == -1) be--;
		if(f_small && jud(*(a + be), val) == 1) be++;
	}
	return be;
}
inline int bitnum(ull nValue){
    nValue = ((0xaaaaaaaaaaaaaaaaull & nValue)>>1) + (0x5555555555555555ull & nValue);
    nValue = ((0xccccccccccccccccull & nValue)>>2) + (0x3333333333333333ull & nValue);
    nValue = ((0xf0f0f0f0f0f0f0f0ull & nValue)>>4) + (0x0f0f0f0f0f0f0f0full & nValue);
    nValue = ((0xff00ff00ff00ff00ull & nValue)>>8) + (0x00ff00ff00ff00ffull & nValue);
    nValue = ((0xffff0000ffff0000ull & nValue)>>16) + (0x0000ffff0000ffffull & nValue);
    nValue = ((0xffffffff00000000ull & nValue)>>32) + (0x00000000ffffffffull & nValue);
	return nValue;
}
long long pow(long long n, long long m, long long mod = 0){
	long long ans = 1;
	long long k = n;
	while(m){
		if(m & 1) {
			ans *= k;
			if(mod) ans %= mod;
		}
		k *= k;
		if(mod) k %= mod;
		m >>= 1;
	}
	return ans;
}


//.........................mi.......feng.......xian.......wai.......jin.......zhi.......challenge...............................................

const int maxn = 100100;
ll gcdb;
ll a[maxn], la, lb, p;
ll fac[maxn], lfac;
ll arr[maxn], larr, ans;
bool f = 0;
set <ll> s, s1;

void dfs(ll num, int cnt, int deep) {
	if(deep == larr) {
		if(f == 0) {
			f = 1;
			return;
		}
		if(cnt & 1) ans += (p - 1) / num;
		else ans -= (p - 1) / num;
		return;
	}
	dfs(num, cnt, deep + 1);
	ll gcd11 = gcd1(num, arr[deep]);
	if(num * arr[deep] / gcd11 <= p - 1)
		dfs(num * arr[deep] / gcd11, cnt + 1, deep + 1);
}

int main(){
	ios_base::sync_with_stdio(0);
//	freopen("input.txt", "r", stdin);
	scanf("%I64d%I64d%I64d", &la, &lb, &p);
	for(int i = 0; i < la; i++) scanf("%I64d", a + i);
	for(int i = 0; i < lb; i++) {
		ll temp;
		scanf("%I64d", &temp);
		gcdb = gcd1(gcdb, temp);
	}

	for(ll i = 1; i * i < p; i++) {
		if((p - 1) % i == 0) {
			fac[lfac++] = i;
			if((p - 1) / i != i)
				fac[lfac++] = (p - 1) / i;
		}
	}
	sort(fac, fac + lfac);

	bool flag = 0;
	for(int i = 0; i < la; i++) {
		if(a[i] % p == 0){
			flag = 1;
			continue;
		}
		for(int j = 0; j < lfac; j++)
			if(pow(a[i], gcdb * fac[j], p) == 1) {
				s.insert((p - 1) / fac[j]);
				break;
			}
	}
	s1 = s;
//	cerr << s1.size() << endl;
	set <ll> :: iterator it = s1.end(), it1;
	for(it--; ; it--) {
		for(int j = 0; j < lfac; j++)
			if(*it % fac[j] == 0 && fac[j] != *it)  {
				it1 = s.find(fac[j]);
	//			cerr << *it1 << endl;
				if(it1 != s.end())
					s.erase(*it);
			}
		if(it == s1.begin()) break;
	}

	for(it = s.begin(); it != s.end(); it++)
		arr[larr++] = *it;
//	for(int i = 0; i < larr; i++)
//		cerr << arr[i] << ' ';
//	cerr << endl << gcdb << endl;

	dfs(1, 0, 0);
	cout << ans + flag << endl;



	return 0;
}



