#include<bits/stdc++.h>

using namespace std;
const int MAXN = 200100;

#define int long long

struct seg{
	seg *fe,*fd;
	int meio,l,r,soma,q;
	
	seg(int x,int y){
		l = x ,r = y;
		meio = (x + y) / 2;
		soma = q = 0;
		
		if(l == r) return;
		
		fe = new seg(x,meio);
		fd = new seg(meio + 1,y);
	}
	
	void up(int pos,int novo){
		if(l == r){
			soma = novo;
			q = 1;
			return;
		}
		if(pos <= meio) fe->up(pos,novo);
		else fd->up(pos,novo);
		
		q = fe->q + fd->q;
		soma = fe->soma + fd->soma;
	}
	
	pair<int,int> get(int a,int b){
		if(l >= a && r <= b) return {soma,q};
		if(l > b || r < a) return {0,0};
		pair<int,int> r1 = fe->get(a,b) , r2 = fd->get(a,b);
		return{r1.first + r2.first,r1.second + r2.second};
	}
};

struct str{
	int x,v,id;
};

seg st(1,MAXN) , st2(1,MAXN);
str v[MAXN];
int p[MAXN];

bool comp1(str a,str b){
	if(a.v != b.v) return a.v > b.v;
	return a.x > b.x;
}
bool comp2(str a,str b){
	return a.x < b.x;
}
bool comp3(str a,str b){
	if(a.v != b.v) return a.v < b.v;
	return a.x < b.x;
}

signed main(){
	int n;
	cin >> n;
	
	int neg = 0 ,sn = 0, resp = 0;
	
	for(int i = 1;i <= n;i++) cin >> v[i].x , v[i].id = i;
	for(int i = 1;i <= n;i++){
		cin >> v[i].v;
		if(v[i].v < 0) neg ++ , sn += v[i].x;
	}
	
	sort(v + 1,v + n + 1,comp2);
	
	for(int i = 1;i <= n;i++) p[v[i].id] = i;
 	
 	for(int i = n;i >= 1;i--){
 		//cout << "/ " << v[i].id << endl;
 		if(v[i].v >= 0) resp += neg * v[i].x - sn;
 		else neg -- , sn -= v[i].x;
	}
	
	//cout << "| " << resp << endl;
 	
 	sort(v + 1,v + n + 1,comp1);
 	
	for(int i = 1;i <= n;i++){
		if(v[i].v < 0) continue;
		pair<int,int> r = st.get(p[v[i].id],n);
		resp += r.first - v[i].x * r.second;
		st.up(p[v[i].id],v[i].x);
		
		//cout << "/ " << v[i].id << " " << v[i].x << " " << p[v[i].id] << " " << resp << " / " << r.first << " " << r.second << endl;
	}
	
	sort(v + 1,v + n + 1,comp3);
	
	for(int i = 1;i <= n;i++){
		if(v[i].v >= 0) continue;
		neg ++;
		pair<int,int> r = st2.get(1,p[v[i].id]);
		resp += v[i].x * r.second - r.first;
		st2.up(p[v[i].id],v[i].x);
	}
	
	cout << resp << endl; 
	 
}