#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <vector>
#include <bits/stdc++.h>
using namespace std;
/*bool used[100000];
int d[100000];
vector <int> g[100000];
void bfs(int v)
{
    queue <int> q;
    used[v] = 1;
    d[v] = 0;
    q.push(v);
    while(!q.empty())
    {
        int k = q.front();
        q.pop();
        for(int i =0; i < g[k].size(); i++)
        {
            int to = g[k][i];
            if(!used[to])
            {
                used[to] = 1;
                q.push(to);
                d[to] = d[k] + 1;
            }
        }
    }
}*/
    int a[100];
int main()
{
    int n, m;
    cin >> n >> m;
    for(int i =1; i <= m; i++)
    {
        int ig, kol = 0;
        for(int j =1; j <= n; j++)
        {
            long long z;
            cin >> z;
            if(kol < z)
            {
                kol = z;
                ig = j;
            }
        }
        if(kol == 0)
        {
            a[1]++;
        }
        else
        {
        a[ig]++;
        }
    }
    int kol = 0, ig;
    for(int i =1; i <= n; i++)
    {
        if(kol < a[i])
            {
                kol = a[i];
                ig = i;
            }

    }
    cout << ig;

}