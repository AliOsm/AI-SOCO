#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(int i = (a); i <= (b); ++i)
#define FORD(i,a,b) for(int i = (a); i >= (b); --i)
#define RI(i,n) FOR(i,1,(n))
#define REP(i,n) FOR(i,0,(n)-1)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define sz(w) (int) w.size()
typedef vector<int> vi;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<pii, int> para;
const ll inf = 1e18 + 7;
const int maxN = 1e6 + 5;

int n, m, k;
int day, depFrom, depTo, cost;
vector<pii> flightsFrom[maxN], flightsTo[maxN]; // to - do stolicy, from - ze stolicy
int maxDay = 0;
ll pref[maxN], suf[maxN];
int ansPref[maxN], ansSuf[maxN];
bool usedPref[maxN], usedSuf[maxN];

int main() {
	ios_base::sync_with_stdio(0);
	cin>>n>>m>>k;
	REP(i, m) {
		cin>>day>>depFrom>>depTo>>cost;
		if (depFrom == 0)
			flightsFrom[day].pb(pii(depTo, cost));
		else
			flightsTo[day].pb(pii(depFrom, cost));

		maxDay = max(maxDay, day);
	}
	int num = 0;
	ll sum = 0;
	pref[0] = inf;
	RI(i, maxDay) {
		pref[i] = pref[i - 1];
		for (auto p : flightsTo[i]) {
			if (!usedPref[p.st]) {
				usedPref[p.st] = 1;
				num++;
				sum += p.nd;
				ansPref[p.st] = p.nd;
			} else {
				if (p.nd < ansPref[p.st]) {
					sum += (-ansPref[p.st] + p.nd);
					ansPref[p.st] = p.nd;
				}
			}
		}
		if (num == n) pref[i] = min(pref[i - 1], sum);
		//cout<<pref[i]<<" ";
	}
	suf[maxDay + 1] = inf;
	num = 0;
	sum = 0;
	FORD(i, maxDay, 1) {
		suf[i] = suf[i + 1];
		for (auto p : flightsFrom[i]) {
			if (!usedSuf[p.st]) {
				usedSuf[p.st] = 1;
				num++;
				sum += p.nd;
				ansSuf[p.st] = p.nd;
			} else {
				if (p.nd < ansSuf[p.st]) {
					sum += (-ansSuf[p.st] + p.nd);
					ansSuf[p.st] = p.nd;
				}
			}
		}
		if (num == n) suf[i] = min(suf[i + 1], sum);
	}
	//RI(i, maxDay) cout<<suf[i]<<" ";
	ll res = inf;
	FOR(i, 2, maxDay - k) {
		res = min(res, pref[i - 1] + suf[i + k]);
	}
	if (res >= inf) cout<<"-1"; else cout<<res<<endl;
	return 0;
}
