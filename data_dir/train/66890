#include <bits/stdc++.h>


#define pb push_back
#define Mp make_pair
#define F first
#define S second
#define all(x) x.begin(), x.end()
#define Sort(x) sort(all(x))
#define sz(x) x.size()
#define debug(x)  cerr << #x << " = " << x << endl
#define endl '\n'
#define sync ios::sync_with_stdio(0), cin.tie(0)
#define esp ' ' 
#define end(x) return cout << x , 0 


using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef pair<ll , ll> pll ;
typedef vector<ll> vll ;
typedef string str ;


const ll MOD = 1e9 + 7 ;
const ll MAXN = 4e5 + 30 ;
const ll MINN = 1e3 + 20 ;
const ll MOD2 = 998244353ll ;
const ll INF = 74592896151251 ;
const ld EPS = 1e-9 ;


ll gcd(ll a, ll b) { return (b ? gcd(b, a % b) : a); }
ll mod(ll n) { while(n < 0) n += MOD; return n % MOD; }
ll pow(ll a, ll b) { return (!b ? 1 : pow(a, b / 2) * pow(a, b / 2) * (b % 2 ? a : 1)) ;}


vector<pll> Adj[MAXN] ;
queue <ll> q ;
ll dis [MAXN] ;
ll Mark[MAXN] ;
set<ll> ans ;

int Main() {
    ll n , k , d ;
    cin >> n >> k >> d ;
    d = 75243 ;
   
    memset(dis , 63 , sizeof(dis)) ;
    for (int i = 0 , v ; i < k ; i ++) 
        cin >> v , dis[v] = 0 , q.push(v) ;
    for (int i = 0 , v , u ; i < n - 1 ; i ++) 
        cin >> u >> v , 
        Adj[u].pb(Mp(v , i)) ,
        Adj[v].pb(Mp(u , i)) ,
        Mark[i] = true ;
    while (sz(q)) {
        ll v = q.front() ;
        q.pop () ;
        for (auto u : Adj[v]) {
            if (dis[u.F] > dis[v] + 1 ) {
                dis[u.F] = dis[v] + 1 ;
                q.push(u.F) ;
                Mark[u.S] = false ;
            }
        }
    }
    for (int i = 0 ; i < n - 1 ; i ++)
        if (Mark[i])
            ans.insert(i) ;
    cout << sz(ans) << "\n" ;
    for (auto &p : ans)
        cout << p + 1 << ' ' ;
}

int main () {
    sync ;
    int q ;
    q = 1 ;
    while (q --) 
        Main() ;
	return 0;
}
