#include <bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define int long long
 
const int N=2e5+5;

 
		   //       |----|       /\      |    |   -----   |
		   //       |   /       /  \     |    |     |     |
		   //       |--/       /----\    |----|     |     |
		   //       |   \     /      \   |    |     |     |
		   //       |    \   /        \  |    |   -----   -------

int n,arr[1005];
int cache[1005];
int fact[1005];
int mod=998244353;
int inv(int x)
{
	int r,y;
	for(r=1,y=mod-2;y>0;x=(x*x)%mod,y/=2)
		if(y%2==1)
			r=r*x%mod;
	return r;
}
int nCr(int n, int m)
{
	return fact[n] *inv(fact[m])%mod *inv(fact[n-m])%mod ;
}
int dp(int pos)
{
	if(pos==n)
		return 1;
	if(cache[pos]!=-1)
		return cache[pos];
	int ans=0;
	if(arr[pos]>0)
	{
		for(int j=pos+arr[pos]+1;j<=n;j++)
		{
			ans+=nCr(j-pos-1,arr[pos])*dp(j);
			ans%=mod;
		}
	}
	return cache[pos]=ans;
}
int32_t main()
{
	IOS;
	cin>>n;
	fact[0]=1;
	fact[1]=1;
	for(int i=2;i<=1004;i++)
		fact[i]=(i*fact[i-1])%mod;
	for(int i=0;i<n;i++)
		cin>>arr[i];
	memset(cache,-1,sizeof(cache));
	int ans=0;
	for(int i=0;i<n;i++)
	{
		ans+=dp(i);
		ans%=mod;
	}
	cout<<ans;
}