/* 48D */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 1e5+5;
int c[maxn];
int a[maxn];
int ans[maxn];

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int n;
	vpii vp;
	
	scanf("%d", &n);
	rep(i, 0, n) {
		scanf("%d", &a[i]);
		vp.pb(mp(a[i], i));
		++c[a[i]];
	}
	
	sort(all(vp));
	
	c[0] = INT_MAX;
	int m = 0, mx = 0;
	
	rep(i, 1, maxn) {
		if (c[i]==0 || c[i]>c[i-1])
			break;
		m += c[i];
		mx = max(mx, c[i]);
	}
	
	if (m < n) {
		puts("-1");
		return 0;
	}
	
	int i = 0, j, k;
	int sz = SZ(vp);
	
	while (i < sz) {
		j = vp[i].fir;
		k = 1;
		while (i<sz && vp[i].fir==j) {
			ans[vp[i].sec] = k++;
			++i;
		}
	}
	
	printf("%d\n", mx);
	rep(ii, 0, n)
		printf("%d ", ans[ii]);
	putchar('\n');
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
