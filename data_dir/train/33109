#include <bits/stdc++.h>

using namespace std;

#define mx 300005
#define int long long
#define pii pair <int, int>
#define piii pair <int, pii>
#define fi first
#define se second
#define mod 1000000007
#define inf 1e18+19
#define pb push_back
#define mem(ara, x) memset(ara, x, sizeof ara)
#define read() freopen("in.txt", "r", stdin)
#define write() freopen("out.txt", "w", stdout)
#define eps 0.0000001
#define fst ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);

string str;
vector <piii> g[mx];
int dis[mx], par[mx];

void dijkestra(int n, int k){
    for(int i=1;i<=n;i++) {
        dis[i] = inf;
        sort(g[i].begin(), g[i].end());
    }
    dis[1] = 0;
    priority_queue <pii, vector <pii>, greater <pii> > q;
    q.push({0, 1});
    while(!q.empty()){
        int a = q.top().fi;
        int b = q.top().se;
        q.pop();
        if(dis[b]==a){
            for(int i=0;i<g[b].size();i++){
                int c = g[b][i].se.fi;
                int d = g[b][i].fi;
                if(dis[c]>dis[b]+d){
                    dis[c] = dis[b]+d;
                    q.push({dis[c], c});
                    par[c] = g[b][i].se.se;
                }
            }
        }
    }
    vector <pii> v;
    for(int i=2;i<=n;i++) {
        v.push_back({dis[i], par[i]});
    }
    sort(v.begin(), v.end());
    vector <int> ans;
    for(int i=0;i<v.size();i++){
        if((int)(ans.size())>=k) break;
        ans.push_back(v[i].se);
    }
    cout <<  (int)(ans.size()) << endl;
    for(int i=0;i<ans.size();i++) cout << ans[i] << " ";
    cout << endl;
}

int32_t main(){
    //read();
    fst;
    int n, m, k;
    while(cin >> n >> m >> k){
        for(int i=1;i<=m;i++){
            int a, b, c;
            cin >> a >> b >> c;
            g[a].push_back({c, {b, i}});
            g[b].push_back({c, {a, i}});
        }
        dijkestra(n, k);
        for(int i=1;i<=n;i++) g[i].clear();

    }
    return 0;
}
