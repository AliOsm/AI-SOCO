#include<bits/stdc++.h>
using namespace std;
pair < int , int > ara[2000];
int n, m, x, y, z, p, q, r;

int dp[610][1210];
int nxt[610][1210];
string str;

int isPossible(int pos, int len)
{
    if(len == 0) return 1;
    if(pos == n + 1) return 1;

    if(dp[pos][len] != -1) return dp[pos][len];

    //cout << pos << ' ' << len << endl;

    int re = 0, p = 0, q = 0;

    for(int i = ara[pos].first ; i <= ara[pos].second; i++){
        if(i >= len) break;

        if(i % 2){

            int frstlen = i - 1;
            int scndlen = len - i - 1;

            int nxtpos = pos + (frstlen / 2) + 1;

            p = q = 0;

            p = isPossible(pos + 1, frstlen);
            q = isPossible(nxtpos, scndlen);

            if(p == 1 && q == 1){
                re = 1;
                nxt[pos][len] = i;
                break;
            }

        }
    }

    return dp[pos][len] = re;

}

void banaoString(int pos, int len, int strt)
{
    if(len == 0) return;
    if(pos == n + 1) return;

    int i = nxt[pos][len];

//    cout << pos << ' ' << len << ' ' << strt << ' ' << nxt[pos][len] << endl;

    int frstlen = i - 1;
    int scndlen = len - i - 1;
    int nxtpos = pos + (frstlen / 2) + 1;

    str[strt] = '(';
    str[strt + i] = ')';

    banaoString(pos + 1, frstlen, strt + 1);
    banaoString(nxtpos, scndlen, strt + i + 1);

}

int main()
{
    memset(dp, -1, sizeof(dp));

    cin >> n;
    for(int i = 1; i <= n; i++) scanf("%d %d", &ara[i].first, &ara[i].second);

    int len = 2 * n;

    int ans = isPossible(1, len);

    if(ans == 0){
        printf("IMPOSSIBLE\n");
    }

    else{

        str.resize(len);

        banaoString(1, len, 0);

        cout << str << endl;


    }

    return 0;
}
