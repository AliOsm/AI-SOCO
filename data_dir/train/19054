#include <bits/stdc++.h>

using namespace std;

#define DIM 200009
#define INF ((long long)1e18+9ll)
#define pairll pair<long long,long long>
#define fi first
#define se second
#define ld long double
#define endl '\n'
#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)
#define amen exit(0)

long long i,j,k,l,n,m,timer,res;

long long s[DIM],h[DIM],d[DIM],num[DIM];

vector<long long>a[DIM];

long long dfs(long long v,long long parent,long long d,long long sum){
   // cout<<v<<' '<<sum<<' '<<s[v]<<endl;
    if(s[v]!=-1 && sum>s[v]){
        cout<<-1<<endl;
        amen;
    }

    if(s[v]!=-1)num[v]=s[v]-sum;
    if(s[v]!=-1)sum=s[v];

    long long k=INF;

    if(s[v]==-1){
        for(auto to:a[v]){
            if(to==parent)continue;
            k=min(k,s[to]-sum);
        }
    }

    if(k!=INF)sum+=k,num[v]=k;
    if(k!=INF && k<0){
        cout<<-1<<endl;
        amen;
    }

    for(auto to:a[v]){
        if(to!=parent){
            dfs(to,v,d+1,sum);
        }
    }
}

int main()
{
    fast;

    cin>>n;

    for(i=2;i<=n;i++){
        cin>>k;
        a[k].push_back(i);
        a[i].push_back(k);
    }

    for(i=1;i<=n;i++){
        cin>>s[i];
    }

    dfs(1,-1,0,0);

    for(i=1;i<=n;i++)res+=num[i];

    cout<<res<<endl;

    amen;
}
