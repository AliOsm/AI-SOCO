#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/detail/standard_policies.hpp>
#include <ext/rope>

using namespace std;
using namespace __gnu_pbds;
using namespace __gnu_cxx;

#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define endl "\n"
#define long long long 

#define TRACE
#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
    template <typename Arg1>
    void __f(const char* name, Arg1&& arg1){
        cout << name << " : " << arg1 << endl;
        //use cerr if u want to display at the bottom
    }
    template <typename Arg1, typename... Args>
    void __f(const char* names, Arg1&& arg1, Args&&... args){
        const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
    }
#else
#define trace(...)
#endif

typedef trie<string,null_type,trie_string_access_traits<>,pat_trie_tag,trie_prefix_search_node_update> pref_trie;
typedef tree<long int,null_type,less<long int>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;
typedef cc_hash_table<long int,long int, hash<long int>, equal_to<long int>, direct_mask_range_hashing<long int>, 
hash_standard_resize_policy<hash_exponential_size_policy<>, hash_load_check_resize_trigger<true>, true>> ht;

long int solve(vector<pair<long int,long int>> &v, long int be, long int n,long int lastIncrease, vector<vector<long int>> &dp){
   if(be == n)
      return 0;

   if(dp[be][lastIncrease] != -1)
      return dp[be][lastIncrease];

   long int ans = LLONG_MAX;

   for(long int increase = 0; increase <= 2; increase++){
      if(v[be].first + increase != v[be - 1].first + lastIncrease){
         ans = min(ans , increase * v[be].second + solve(v,be+1,n,increase,dp));
      }
   }
   return dp[be][lastIncrease] =  ans;
}

int main(){
   IOS;
 //    #ifndef ONLINE_JUDGE
 //        freopen("in.txt",  "r",  stdin);
 //        freopen("out.txt", "w", stdout);
 //    #endif
   long int t;
   cin>>t;

   while(t--){
      long int n;
      cin>>n;

      vector<vector<long int>> dp(n+1,vector<long int>(3,-1));
      vector<pair<long int,long int>> v(n);
      for(long int i = 0; i < n; i++)
          cin>>v[i].first>>v[i].second;

       cout<<min({solve(v,1,n,0,dp),solve(v,1,n,1,dp) + v[0].second,solve(v,1,n,2,dp) + 2*v[0].second})<<endl;
   }  

   return 0;
}