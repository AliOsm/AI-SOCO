#include <iomanip>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cstdio>
#include <cmath>
#include <queue>
#include <bitset>
#include <string>
 
#define ll long long
#define mp make_pair
#define pb push_back
 
using namespace std;
 
const int N = 300010;
const int MOD = 1e9+7;
const ll mx = 4e18;

struct Segment {
    int l, r;
    Segment(){}
    bool operator < (const Segment &other) const {
        return mp(l, r) < mp(other.l, other.r);
    }
};

int t;
int n;
ll s;
Segment a[N];

bool check(int x) {
    int cnt = 0;
    ll rest = s;
    for (int i = 1; i <= n; i++) {
        if (a[i].r < x) {
            cnt++;
            rest -= a[i].l;
        }
        else if (a[i].l > x) {
            rest -= a[i].l;
        }
    }
    if (cnt >= n / 2 + 1) return false;
    for (int i = 1; i <= n; i++) {
        if (a[i].l <= x && a[i].r >= x) {
            cnt++;
            if (cnt < n / 2 + 1) {
                rest -= a[i].l;
            }
            else {
                rest -= x;
            }
        }
    }
    return (rest >= 0);
}

int main() {
    scanf("%d", &t);
    while (t--) {
        scanf("%d%I64d", &n, &s);
        for (int i = 1; i <= n; i++) scanf("%d%d", &a[i].l, &a[i].r);
        sort(a + 1, a + n + 1);
        int l = 0, r = 1e9;
        while (l + 1 < r) {
            int m = (l + r) / 2;
            if (check(m)) l = m;
            else r = m - 1;
        }
        int ans;
        if (check(r)) ans = r;
        else ans = l;
        printf("%d\n", ans);
    }
	return 0;
}