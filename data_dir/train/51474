#include<bits/stdc++.h>
#define ll long long
#define f first
#define s second
#define pb push_back
using namespace std;
ll bst[200005],ch[200005],n,k;
ll pa[200005],lvl[200005];
vector<ll>v[200005];
void go(ll x,ll par){
    ch[x] = 1;
    lvl[x] = lvl[par] + 1;
    pa[x] = par;
    for(int i=0; i<v[x].size(); i++){
        if(v[x][i] != par){
            go(v[x][i] , x);
            ch[x] += ch[v[x][i]];
        }
    }
}
void count(ll x){
    if(v[x].size() == 0){
        bst[x] = x;
        return;
    }
    for(int i=0; i<v[x].size(); i++)
        count(v[x][i]);
    bst[x] = bst[v[x][0]];
}
void solve(ll x,ll y){
    ll f = bst[x];
    cout << "d " << f << endl;
    cin >> k;
    ll len = y + lvl[f] - lvl[x] - k;
    len /= 2;
    while(lvl[f] - lvl[x] != len){
        f = pa[f];
    }
    if(len == y){
        cout << "! " << f << endl;
        exit(0);
    }
    cout << "s " << f << endl;
    cin >> k;
    solve(k , y - len - 1);
}
int main(){
    ios::sync_with_stdio(false);
    cin >> n;
    for(int i=1; i<n; i++){
        int x,y;
        cin >> x >> y;
        v[x].pb(y);
        v[y].pb(x);
    }
    go(1 , 0);
    for(int i=1; i<=n; i++)
        v[i].clear();
    for(int i=2; i<=n; i++)
        v[pa[i]].pb(i);
    for(int i=1; i<=n; i++)
        for(int j=1; j<v[i].size(); j++)
            if(ch[v[i][j]] > ch[v[i][0]])
                swap(v[i][j] , v[i][0]);
    count(1);
    cout << "d " << 1 << endl;
    cin >> k;
    solve(1 , k);
    
    
    return 0;
}
