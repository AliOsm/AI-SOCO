#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <cstdio>
#include <cstring>

#define forn(i, n) for (int i = 0; i < n; i ++)
#define ford(i, n) for (int i = n - 1; i >= 0; i --)
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define pi 3.1415926535897932
#define ll long long

using namespace std;

bool use2[500];
pair<int, int> a[500];
int ans[500];
int cost[500];

int dist(pair<int, int> a, pair<int, int> b){
	return abs(a.x - b.x) + abs(a.y - b.y);
}

int main(){
	//freopen ("input.txt","rt",stdin);
	//freopen ("output.txt","wt",stdout);
	int n, m;
	memset(use2, false, sizeof(use2));
	cin >> n >> m;
	forn(i, n)
		ans[i] = -1;
	forn(i, n)
		cin >> a[i].x >> a[i].y;
	forn(i, m)
		cin >> cost[i];
	bool q = true;
	for (int i = 1; i < n; i +=2){
		int res = 0;
		if (a[i].x == a[i-1].x) res ++;
		if (a[i].y == a[i-1].y) res ++;
		if (a[i].x == a[(i+1) % n].x) res ++;
		if (a[i].y == a[(i+1) % n].y) res ++;
		if (res !=2 || a[i] == a[(i+1) % n] || a[i] == a[i -1]){
			q = false;
			break;
		}
		int k = dist(a[i], a[i-1]) + dist(a[i], a[(i+1)%n]);
		forn(j, m){
			if (!use2[j] && cost[j] == k){
				use2[j] = true;
				ans[i] = j + 1;
				break;
			}
			if (j== m - 1){
				q = false;
				break;
			}
		}
	}
	if (q){
		cout << "YES" << endl;
		forn(i, n)
			printf ("%d ", ans[i]);
		exit(0);
	}
	forn(i, n)
		ans[i] = -1;
	memset(use2, false, sizeof(use2));
	for (int i = 0; i < n; i +=2){
		int res = 0;
		if (a[i].x == a[(i-1+n) % n].x) res ++;
		if (a[i].y == a[(i-1+n)%n].y) res ++;
		if (a[i].x == a[(i+1) % n].x) res ++;
		if (a[i].y == a[(i+1) % n].y) res ++;
		if (res !=2 || a[i] == a[(i+1) % n] || a[i] == a[(i -1 + n)%n]){
			cout << "NO";
			exit(0);
		}
		int k = dist(a[i], a[(i-1+n)%n]) + dist(a[i], a[(i+1)%n]);
		forn(j, m){
			if (!use2[j] && cost[j] == k){
				use2[j] = true;
				ans[i] = j + 1;
				break;
			}
			if (j== m - 1){
				cout << "NO";
				exit(0);
			}
		}
	}
	cout << "YES" << endl;
	forn(i, n)
		printf ("%d ", ans[i]);
	return 0;
}