#include <bits/stdc++.h>

using namespace std;
typedef long long lint;


lint   hibit(lint m){for (int i=62;i>=0;i--) if ((1ll<<i)&m) return i;}

lint par(lint a) {
  if (a == 1) {
    return 1;
  }
  return (a >> 1ll);
}

lint lca(lint u,lint v) {
  lint beg = min(u,v);
  if (beg == 1) {
    return 1;
  }
  while(par(u) != par(v)) {
    if (hibit(u) > hibit(v)) {
      swap(u,v);
    }
    v >>= 1ll;
  }
  if (u == beg && u == v) {
    return u;
  }
  return par(u);
}

int q;
map <pair<long long,long long>,long long> dist;

lint getDist(lint u,lint v) {
  long long res = 0ll;
  lint t = lca(u,v);
  while(u != t) {
    res += dist[{u,par(u)}];
    u >>= 1ll;
  }
  while(v != t) {
    res += dist[{v,par(v)}];
    v >>= 1ll;
  }
  return res;
}

void update(lint u,lint v,lint w) {
  lint t = lca(u,v);
  while(u != t) {
    dist[{u,par(u)}] += w;
    dist[{par(u),u}] += w;
    u >>= 1ll;
  }
  while(v != t) {
    dist[{v,par(v)}] += w;
    dist[{par(v),v}] += w;
    v >>= 1ll;
  }
}

int main() {
  cin >> q;
  for (int i = 0; i < q; i++) {
    lint t,u,v,w;
    cin >> t >> u >> v;
    if (t == 2) {
      cout << getDist(u,v) << '\n';
    } else {
      cin >> w;
      update(u,v,w);
    }
  }  
}