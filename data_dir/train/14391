#include<bits/stdc++.h>
//#include <boost/multiprecision/cpp_int.hpp>

//using namespace boost::multiprecision;

using namespace std;
#define PI                      3.1415926535897932384626
#define MOD                     998244353
#define int                     long long int
#define fi                      first
#define se                      second
#define pq                      priority_queue
#define pb                      push_back
#define endl                    '\n'
#define all(x)                  x.begin(),x.end()
#define pii                     pair<int,int>
#define fill(x,y)               memset(x,y,sizeof(x));
#define fast                    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define hash                    _H
#define lg                      long double         
#define vi                      std::vector<int>
#define sz(x)                   ((int)x.size())



template<typename T> T pow(T a,T b, int m){T ans=1; while(b>0){ if(b%2==1) ans=(ans*a)%m; b/=2; a=(a*a)%m; } return ans%m; }
template<typename T>T InverseMod(T a,int m){return pow(a,m-2,m);}
template<typename T>int SquareDist(T a,T b){int x = abs(a.fi - b.fi),y = abs(a.se - b.se); return x*x + y*y;}




void solve() {
    int n,k;
    cin >> n >> k;
    string s;
    cin >> s;
    queue<string > q;
    map <string,int> mp;
    q.push(s);
    set<string> ans;
    while(q.size() and ans.size() < k) {
        //cout << ans.size() << endl;
        string temp = q.front();
        q.pop();
        //cout << temp << endl;
        ans.insert(temp);
        for(int i = 0; i < temp.length();) {
            string k = "";
            for(int j = 0; j < temp.length(); ++j  ) {
                if(j != i)
                    k += temp[j];
            }
            int mm = i;
            while(i < temp.length() and temp[i] == temp[mm])
                ++i;
            if(mp[k] == 0)
            {
                q.push(k);
                mp[k] = 1;
            }
        }
    }
    if(ans.size() < k)
    {
        cout << -1;
        exit(0);
    }
    int out = 0;
    for(auto i:ans){
        //cout << i << endl;
        out += (n - i.length());
    }
    cout << out << endl;
}      




signed main()
{
    fast;
    int t = 1;
    //cin >> t;
    while(t--)
        solve();
} 