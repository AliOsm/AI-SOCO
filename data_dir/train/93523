#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

const int N = 400005;
vector <int> v[N];
int mxdist[N], cnt, k, d, n;

void dfs(int x, int par)
{
    if (cnt == n)
    {
        return;
    }
    int sz = v[x].size();
    if (mxdist[x] < d)
    {
        for (int i = 0; i < k - sz; i++)
        {
            v[x].push_back(++cnt);
            v[cnt].push_back(x);
            mxdist[cnt] = mxdist[x] + 1;
            if (cnt == n)
            {
                return;
            }
        }
    }
    sz = v[x].size();
    for (int i = 0; i < sz; i++)
    {
        if (v[x][i] != par)
        {
            dfs(v[x][i], x);
        }
    }
}

void print(int x, int par)
{
    int sz = v[x].size();
    for (int i = 0; i < sz; i++)
    {
        if (v[x][i] != par)
        {
            printf("%d %d\n", x, v[x][i]);
            print(v[x][i], x);
        }
    }
}

int main()
{
    scanf("%d %d %d", &n, &d, &k);
    if ((k == 1 && n > 2) || d >= n)
    {
        printf("NO");
    }
    else
    {
        for (cnt = 1; cnt < d + 1; cnt++)
        {
            v[cnt].push_back(cnt+1);
            v[cnt+1].push_back(cnt);
            mxdist[cnt] = max(cnt-1, d+1-cnt);
        }
        mxdist[cnt] = d;
        dfs(1, 0);
        if (cnt < n)
        {
            printf("NO");
        }
        else
        {
            printf("YES\n");
            print(1, 0);
        }
    }
    return 0;
}
