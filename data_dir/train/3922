#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define PP pop_back()
#define ALL(x) x.begin(),x.end()
#define st first
#define nd second
#define sz(x) (int) x.size()
#define pii pair<int,int>
#define ii int,int
#define ll long long
#define llu long long unsigned
#define INPUT freopen("inp.in","r",stdin);
#define OUTPUT freopen("oup.out","w",stdout);
#define sag(x) 2*x+1
#define sol(x) 2*x
#define orta (bas+son)/2
#define MIN3(x,y,z) min(min(x,y),z)
#define MAX3(x,y,z) max(max(x,y),z)
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define ROF(i,j,k) for(int i=j;i>=k;i--)
#define dbgs(x) cerr<<(#x)<<" --> "<<(x)<<" "
#define dbg(x) cerr<<(#x)<<" --> "<<(x)<<endl;getchar()
#define MOD 1000000007
#define inf 1000000005
#define N 5005
#define ss dp[i-1][v[j][k].st]+v[j][k].nd
using namespace std;
int dp[N][N];
int n,m,t,x,y,z,last,ans;
vector<pii> v[N];
stack<int> s;
int main() {
    FOR(i,0,N-5) FOR(j,0,N-5) dp[i][j]=inf;
    scanf("%d %d %d",&n,&m,&t);
    FOR(i,1,m) {
        scanf("%d %d %d",&x,&y,&z);
        v[y].PB(MP(x,z));
    }
    dp[1][1]=0;
    FOR(i,1,n) FOR(j,1,n) FOR(k,0,sz(v[j])-1) {
        dp[i][j]=min(dp[i][j],(ss<=t?ss:inf));
        if(j==n && dp[i][j]!=inf) ans=i;
    }
    last=n;
    s.push(last);
    printf("%d\n",ans);
    ROF(i,ans,1) FOR(j,0,sz(v[last])-1) {
        if(dp[i][last]==dp[i-1][v[last][j].st]+v[last][j].nd) {
            last=v[last][j].st;
            s.push(last);
            break ;
        }
    }
    while(!s.empty()) {
        printf("%d ",s.top());
        s.pop();
    }
}
