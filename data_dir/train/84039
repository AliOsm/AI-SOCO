#include<bits/stdc++.h>
using namespace std;
#define N 3001
#define LL long long
LL n,m,p[N],c[N],s[N],ans;
struct rua{LL v,id;}_[N];
vector<rua>d[N];
bool vis[N];
bool cmp(rua x,rua y){return x.v<y.v;}
int main()
{
	scanf("%I64d%I64d",&n,&m);
	ans=n*1000000000ll;
	for(LL i=1;i<=n;i++)
	  {
	  scanf("%I64d%I64d",&p[i],&c[i]);
	  d[p[i]].push_back({c[i],i});
	  _[i]={c[i],i};
	  s[p[i]]++;
	  }
	sort(_+1,_+n+1,cmp);
	bool x=true;
	for(int i=2;i<=m;i++)
	  if(s[i]>=s[1])x=false;
	if(x)return printf("0\n"),0;
	for(int i=1;i<=m;i++)
	  sort(d[i].begin(),d[i].end(),cmp);
	for(int i=1;s[1]+i<=n/2+1;i++)
	  {
	  memset(vis,true,sizeof(vis));
	  for(int j=1;j<=n;j++)
	    if(p[j]!=1)vis[j]=false;
	  LL cnt=0;
	  for(int j=2;j<=m;j++)
	    cnt+=max(0ll,s[j]-s[1]-i+1);
	  if(cnt>i)continue;
	  LL res=0;
	  for(int j=2;j<=m;j++)
	    if(s[j]>=s[1]+i)
	      for(int k=0;k<=s[j]-s[1]-i;k++)
	        res+=d[j][k].v,vis[d[j][k].id]=true;
	  for(int j=1;j<=n && cnt<i;j++)
	    if(!vis[_[j].id])cnt++,res+=_[j].v;
	  ans=min(ans,res);
	  }
	printf("%I64d\n",ans);
	return 0;
}
