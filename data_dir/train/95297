#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef pair<int,int> PII;

class Imp {
public:
    static const int MOD = 1000000007;
    typedef long long LL;
    int u;
    Imp(){};    // 以下所有函数的传入参数都必须在[0,MOD)之间
    Imp(int v):u(v){}   // 且运算符左侧类型必须是Imp
    operator int&(){return u;}
    operator const int&() const {return u;}
    Imp operator +(int v) const {return u+v<MOD?u+v:u+v-MOD;}
    Imp operator -(int v) const {return u<v?u-v+MOD:u-v;}
    Imp operator *(int v) const {return u*LL(v)%MOD;}
    Imp operator /(int v) const {return u*RR(v)%MOD;}
    Imp operator -() const {return u?MOD-u:0;}
    Imp& operator +=(int v){u+=u+v<MOD?v:v-MOD; return *this;}
    Imp& operator -=(int v){u-=u<v?v-MOD:v; return *this;}
    Imp& operator *=(int v){u=u*LL(v)%MOD; return *this;}
    Imp& operator /=(int v){u=u*RR(v)%MOD; return *this;}
    static LL RR(int x){
        return x>1?RR(MOD%x)*(MOD-MOD/x)%MOD:x;
    }
};

char s[1000005];
Imp dp[1000005][3];

int main(){
    gets(s);
    if(s[0]=='?'){
        dp[0][0]=1;
        dp[0][1]=1;
        dp[0][2]=1;
    }else if(s[0]=='0'){
        dp[0][0]=1;
    }else if(s[0]=='1'){
        dp[0][1]=1;
    }else if(s[0]=='2'){
        return puts("0"),0;
    }else{
        dp[0][2]=1;
    }
    int n=strlen(s);
    for(int i=1;i<n;i++){
        if(s[i]=='?'){
            dp[i][0]+=dp[i-1][0];
            dp[i][0]+=dp[i-1][2];
            dp[i][1]+=dp[i-1][0];
            dp[i][1]+=dp[i-1][2];
            dp[i][2]+=dp[i-1][1]+dp[i-1][2];
        }else if(s[i]=='0'){
            dp[i][0]+=dp[i-1][0];
        }else if(s[i]=='1'){
            dp[i][0]+=dp[i-1][2];
            dp[i][1]+=dp[i-1][0];
        }else if(s[i]=='2'){
            dp[i][1]+=dp[i-1][2];
        }else{
            dp[i][2]+=dp[i-1][1]+dp[i-1][2];
        }
    }
    printf("%d\n",(dp[n-1][0]+dp[n-1][2]).u);
}
