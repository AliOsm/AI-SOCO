#include <bits/stdc++.h>
using namespace std;

#define N 110
#define INF 0x3f3f3f3f
char s[2][N];
int f[N][2][2], n; 

int main()
{
	while (scanf("%s%s", s[0] + 1, s[1] + 1) != EOF)
	{
		n = strlen(s[0] + 1);
		memset(f, 0, sizeof f);
		if (s[0][1] == 'X') f[1][0][0] = f[1][0][1] = -INF;
		if (s[1][1] == 'X') f[1][0][0] = f[1][1][0] = -INF;
		for (int i = 2; i <= n; ++i)
		{
			for (int j = 0; j < 2; ++j)
				for (int k = 0; k < 2; ++k)
					f[i][j][k] = -INF;
			int Max = 0;
			for (int j = 0; j < 2; ++j)
				for (int k = 0; k < 2; ++k)
					Max = max(Max, f[i - 1][j][k]);
			f[i][1][1] = Max;
			if (s[0][i] == '0' && s[1][i] == '0')
			{
				f[i][0][0] = Max; 
				for (int j = 0; j < 2; ++j)
					for (int k = 0; k < 2; ++k)
						if (!j || !k)
							f[i][1][1] = max(f[i][1][1], f[i - 1][j][k] + 1);
				f[i][1][0] = max(f[i][1][0], f[i - 1][0][0] + 1);
				f[i][0][1] = max(f[i][0][1], f[i - 1][0][0] + 1); 
			}
			if (s[0][i] == '0')
			{
				f[i][0][1] = max(f[i][0][1], Max); 
				f[i][1][1] = max(f[i][1][1], f[i - 1][0][0] + 1);
			}
			if (s[1][i] == '0')
			{
				f[i][1][0] = max(f[i][1][0], Max);
				f[i][1][1] = max(f[i][1][1], f[i - 1][0][0] + 1);
			}
		//	for (int j = 0; j < 2; ++j)
		//		for (int k = 0; k < 2; ++k)
		//			printf("%d %d %d %d\n", i, j, k, f[i][j][k]);
		}
		int res = 0;
		for (int i = 0; i < 2; ++i)
			for (int j = 0; j < 2; ++j)
				res = max(res, f[n][i][j]);
		printf("%d\n", res);
	}
	return 0;
}
