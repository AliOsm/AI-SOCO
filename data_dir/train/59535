#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#include<bits/stdc++.h>
#define F first
#define S second
#define vec vector
#define ms multiset
#define pb push_back
#define pll pair<ll,ll>
#define pdd pair<ld, ld>
#define pq priority_queue
#define umap unordered_map
#define uset unordered_set
#define pii pair<int, int>
#define pnn pair<Node*, Node*>
#define uid uniform_int_distribution
#define FILE ifstream in("input.txt");ofstream out("output.txt");
#define fast cin.tie(0);cout.tie(0);cin.sync_with_stdio(0);cout.sync_with_stdio(0);
using namespace std;
typedef string str;
typedef long long ll;
typedef long double ld;
mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count()); //uid<int> u1(5, 10); u1(rnd);

int main(){
    fast;
    str s,t; cin>>s>>t;
    int a = s.size(), k = t.size();
    vec<int> pr(k), sf(k);
    int i = 0;
    for(int q=0; q<a && i<k; q++){
        if(s[q]!=t[i]) continue;
        pr[i++] = q+1;
    }
    i = k-1;
    for(int q = a-1; q>=0 && i>=0; q--){
        if(s[q]!=t[i]) continue;
        sf[i--] = a-q;
    }
    int o = a-min(pr[k-1], sf[0]);
    for(int q=0; q+1<k; q++) o = max(o, a-(pr[q]+sf[q+1]));
    cout<<o;
}