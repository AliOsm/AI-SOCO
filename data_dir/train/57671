#include<bits/stdc++.h>
#define LL long long
#define LD long double
#define ull unsigned long long
#define fi first
#define se second
#define mk make_pair
#define PLL pair<LL, LL>
#define PLI pair<LL, int>
#define PII pair<int, int>
#define SZ(x) ((int)x.size())
#define ALL(x) (x).begin(), (x).end()
#define fio ios::sync_with_stdio(false); cin.tie(0);

using namespace std;

const int N = 2e5 + 7;
const int inf = 0x3f3f3f3f;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int mod = 1e9 + 7;
const double eps = 1e-8;
const double PI = acos(-1);

template<class T, class S> inline void add(T& a, S b) {a += b; if(a >= mod) a -= mod;}
template<class T, class S> inline void sub(T& a, S b) {a -= b; if(a < 0) a += mod;}
template<class T, class S> inline bool chkmax(T& a, S b) {return a < b ? a = b, true : false;}
template<class T, class S> inline bool chkmin(T& a, S b) {return a > b ? a = b, true : false;}

int q, n;
int c[N][2], id[N];

int main() {
    scanf("%d", &q);
    while(q--) {
        scanf("%d", &n);
        for(int i = 1; i <= n; i++) {
            c[i][0] = c[i][1] = 0;
            id[i] = i;
        }
        for(int i = 1; i <= n; i++) {
            int a, f;
            scanf("%d%d", &a, &f);
            c[a][f]++;
        }
        sort(id + 1, id + 1 + n, [&](int x, int y) {
            return c[x][0] + c[x][1] > c[y][0] + c[y][1];
        });
        int ans1 = 0, ans2 = 0;
        priority_queue<int> que;
        for(int i = n, j = 1; i >= 1; i--) {
            while(j <= n && c[id[j]][0] + c[id[j]][1] >= i) {
                que.push(c[id[j]][1]);
                j++;
            }
            if(SZ(que)) {
                ans1 += i;
                ans2 += min(i, que.top());
                que.pop();
            }
        }
        printf("%d %d\n", ans1, ans2);
    }
    return 0;
}

/*
*/
