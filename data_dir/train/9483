#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>

#define F first
#define S second
#define int long long
#define ull  unsigned long long
#define pb push_back
#define double long double

using namespace std;
using namespace __gnu_pbds;
typedef  tree< int , null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;
const int N = 10020;
int s[N], p[N], dp[2][N], l[N], r[N];
main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int n;
    int x;
    set < int > ss;
    cin >> n >> x;
    ss.insert(x);
    for (int i = 1; i <= n; i++){
        cin >> l[i] >> r[i];
        ss.insert(l[i]);
        ss.insert(r[i]);
    }
    vector < int > a;
    for (auto i: ss){
        a.pb(i);
        if (i != x) dp[0][a.size() - 1] = 1e18;
    }
    int m = a.size();
    for (int i = 1; i <= n; i++){
        int c = i % 2;
        p[0] = 1e18;
        for (int j = 1; j <= m; j++){
            p[j] = min(p[j - 1], dp[c ^ 1][j - 1] - a[j - 1]);
        }
        s[m + 1] = 1e18;
        for (int j = m; j >= 1; j--){
            s[j] = min(s[j + 1], dp[c ^ 1][j - 1] + a[j - 1]);
        }
        for (int j = 0; j < m; j++){
            int d;
            if (l[i] <= a[j] && a[j] <= r[i]) d = 0; else
            if (a[j] < l[i]) d = l[i] - a[j]; else
            d = a[j] - r[i];
            dp[c][j] = d + min(p[j + 1] + a[j], s[j + 1] - a[j]);
        }
    }
    int ans = 1e18;
    for (int i = 0; i < m; i++){
        ans = min(dp[n % 2][i], ans);
    }
    cout << ans;
}
