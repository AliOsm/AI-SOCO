#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <set>
#include <string.h>
using namespace std;

int dp[100500][27];
char s[100500];
char bad[26];
int n;
int INF = 1 << 30;
int k;

int main() {
    for(int i = 0; i < 26; i++) {
            bad[i] = 0;
    }
    scanf("%s\n", s);
    scanf("%d\n", &k);
    for(int i = 0; i < k; i++) {
            char a, b;
            scanf("%c%c\n", &a, &b);
            bad[a - 'a'] = b;
            bad[b - 'a'] = a;
    }
            
    n = strlen(s);
    
    for(int i = 0; i < 26; i++) {
            dp[0][i] = INF;
    }
    
    dp[0][s[0] - 'a'] = 0;
    dp[0][26] = 1;
    
    for(int i = 1; i < n; i++) {
            for(int j = 0; j <= 26; j++) {
                    dp[i][j] = INF;
                    if (s[i] == 'a' + j) {
                             for(int k = 0; k <= 26; k++) {
                                     if (bad[s[i] - 'a'] != 'a' + k) {
                                                   dp[i][j] = min(dp[i][j], dp[i - 1][k]);
                                     }
                             }
                             //dp[i][j] = min(dp[i][j], dp[i - 1][bad[s[i]]] + 1);
                             dp[i][j] = min(dp[i][j], i);
                    } else {
                           dp[i][j] = min(dp[i][j], dp[i - 1][j] + 1);
                    }
            }
    }
    int ans = INF;
    for(int i = 0; i <= 26; i++) {
            ans = min(ans, dp[n - 1][i]);
    }
    
    printf("%d", ans);              
        
    return 0;
}
