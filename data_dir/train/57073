//g++  5.4.0

#include<bits/stdc++.h>
using namespace std;

#define ff first
#define ss second
#define int long long
#define ld long double
#define pb push_back
#define pii pair< int,int >
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0) ;

const int nax = 4e5+10;
vector<int> lvl[nax] , deg(nax,0);

signed main()
{
    fast;
    int  n , d , k;
    cin >> n >> k >> d;
    if( d==1 )
    {
        if( n<=2 && n==k+1 )
        {
            cout << "YES\n";
            if( n==2 )
                cout << "1 2";
        }
        else
            cout << "NO";
        return 0;
    }
    else
    {
        int mx_dep = n-1;
        int mn_dep = 0;
        if( n >= 2 ) mn_dep = 1;
        if( n >= 3 ) mn_dep = 2;
        int p = d+1;
        int last = d;
        int one = d-1;
        while( p + last * (d-1) <= n )
        {
            last *= (d-1);
            one *= (d-1);
            p += last;
            mn_dep += 2;
        }
      
        if( p + one < n )
            mn_dep += 2;
        else if( p+1 <= n )
            mn_dep++;
       
        if( mn_dep <= k && mx_dep >= k )
        {
            cout << "YES\n";
            
            for(int i=1 ; i<=k ; i++ )
            {
                cout << i << " " << i+1 << "\n";
                deg[i]++;
                deg[i+1]++;
                lvl[ max( k+1-i,i-1 )].pb( i );
            }
            lvl[k].pb( k+1 );
            
            int l = 1;
            int x = k+2;
            while( x <= n )
            {
                while( !lvl[l].empty() )
                {
                    int y = lvl[l].back();
                    lvl[l].pop_back();
                    while( deg[y] < d && x <= n )
                    {
                        cout << y << " " << x << "\n";
                        deg[x]++;
                        deg[y]++;
                        lvl[l+1].pb( x );
                        x++;
                    }
                }
                l++;
            }
        }
        else
            cout << "NO";
    }
}



