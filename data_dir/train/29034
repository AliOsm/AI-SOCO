#include <iostream>
#include <stdio.h>
#include <vector>
#include <map>
#include <algorithm>

using namespace std;
const int N = 300000, delt = 10001;
const int md = 1e9 + 7;

int a[N], dp[2][N][2];

inline void fix(int& x) {
    x = (x >= md ? x - md : x);
}

int main() {
    ios::sync_with_stdio(false);

    int n;
    cin >> n;

    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }

    int q = 0;
    dp[q][+delt][0] = 1;

    int ans = 0;

    for(int i = 0; i < n; i++) {
        int dq = 1 ^ q;

        for(int j = 0; j <= delt + delt; j++) {
            dp[dq][j][0] = dp[dq][j][1] = 0;
        }

        for(int j = 0; j <= delt + delt; j++) {
            if(dp[q][j][1]) {
                dp[dq][j + a[i]][1] += dp[q][j][1];
                fix(dp[dq][j + a[i]][1]);

                dp[dq][j - a[i]][1] += dp[q][j][1];
                fix(dp[dq][j - a[i]][1]);
            }
            if(dp[q][j][0]) {
                dp[dq][j][0] += dp[q][j][0];
                fix(dp[dq][j][0]);

                dp[dq][j + a[i]][1] += dp[q][j][0];
                fix(dp[dq][j + a[i]][1]);

                dp[dq][j - a[i]][1] += dp[q][j][0];
                fix(dp[dq][j - a[i]][1]);
            }
        }


        q = 1 - q;
        ans += dp[q][delt][1];
        fix(ans);
//        for(int j = delt - 4; j <= delt + 4; j++) {
//                cout << dp[q][j][1] << " ";
//        }
//        cout << "\n";
    }

    cout << ans << "\n";
    return 0;
}
