//Not Aiming For Anything 

#include<bits/stdc++.h>
using namespace std;

#define fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)
#define ll long long
#define ld long double
#define pb push_back
#define fe first
#define se second
#define nl "\n"
#define pp pair < ll , ll > 
#define sz(x) (ll)x.size()
#define st(x) sort(x.begin(),x.end())
#define rst(x) sort(x.rbegin(), x.rend())
#define all(x) x.begin(),x.end()
long double pi = 3.14159265358979323;
 
const double EPS = 1e-12;
const int N = 1e6 + 5;
const int mod = 1e9 + 7;
 

 
 
int main()
{
    fast;
    ll t;
    cin >> t ;
    while(t--){
      ll n ,k;
      cin >> n >> k ;
      char s[n+1];
      for(int i = 1 ; i <= n ;i++ ){
              cin >> s[i];
      }
      ll dp[n+1][2] = {};
      ll cnt[n+1] = {};
      for(int i = 1 ; i <= n ;i++ ){
               dp[i][0] = mod ;
               dp[i][1] = mod;
               cnt[i] += cnt[i-1] + (s[i] == '1');
      }
     // int cnt = 0 ;
      

      //multiset < ll > s;
      //s.insert(0);
      ll ans = cnt[n];
    //  cout << ans << " ";
      for(int i = 1 ; i <= n ;i++ ){

              if(i >= k){
                dp[i][1] = min(dp[i-k][1] + cnt[i-1] - cnt[i-k],cnt[i-1]) + (s[i] != '1');
                //dp[i][0] = min(cnt[i-1],*s.begin()) + (s[i] != '0');
              //  s.erase(s.find(dp[i-k][1]));
              }
              else{
                dp[i][1] =  cnt[i-1] + (s[i] != '1');
                //dp[i][0]  = min(cnt[i-1], dp[i-k-1][1] + cnt[i-1] - cnt[i-k-1]) + (s[i] != '0');
              }
              ans = min(ans , dp[i][1] + cnt[n] - cnt[i]);
              //That was it
             // cout << dp[i][1] << " ";
             // if(s[i] == '1')cnt[i] += 1;
              //cnt[i] += cnt[i-1];
      }
      cout << ans << "\n";
     // cout << min(dp[n][0],dp[n][1]) << "\n";
    }
    





















    
    return 0;
    
}