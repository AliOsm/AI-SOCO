#pragma GCC optimize ("O3")
#include <bits/stdc++.h>
#define abdelrahman010 ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
typedef long long ll;
typedef long double ld;
using namespace std;
const int N = 2 * 1e5 + 5;
int n , m , dp[N];
int mx = -1 , x;
bool a[N];
vector<int> g[N] , g2[N];
void dfs(int node , int par , int cnt)
{
	int &ans = dp[node];
	ans = -1;
	if(a[node])
		ans = cnt;
	for(auto &i : g[node])
		if(i != par)
		{
			dfs(i , node , cnt + 1);
			ans = max(ans , dp[i]);
		}
}
void dfs2(int node , int par , int cnt)
{
	if(cnt > mx)
		mx = cnt , x = node;
	else if(cnt == mx)
		x = min(x , node);
	for(auto &i : g2[node])
		if(i != par)
			dfs2(i , node , cnt + 1);
}
int main()
{
	abdelrahman010
	cin >> n >> m;
	for(int i = 1;i < n;i++)
	{
		int u , v;
		cin >> u >> v;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	int root;
	for(int i = 0;i < m;i++)
	{
		int u;
		cin >> u;
		a[u] = true;
		root = u;
	}
	dfs(root , root , 0);
	int cnt = 0;
	for(int i = 1;i <= n;i++)
		if(dp[i] > 0)
			for(auto &j : g[i])
				if(dp[j] > 0)
					g2[i].push_back(j) , cnt++;
	dfs2(root , root , 0);
	mx = -1;
	int out = x;
	dfs2(x , x , 0);
	cout << min(out , x) << '\n' << cnt - mx;
	return 0;
}
