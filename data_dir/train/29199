#include <string.h>
#include <assert.h>
#include <cassert>
#include <unordered_map>

#include <sstream>
#include <stdio.h>
#include <assert.h>
#include <math.h>
#include <bitset>
#include <algorithm>
#include <iostream>
#include <stack>
#include <queue>
#include <set>

#include <map>
#include <vector>
#include <string>
#include <stdlib.h>
#include <cassert>

#define ll long long
#define clr(x) memset(x,0,sizeof(x))
#define _clr(x) memset(x,-1,sizeof(x))
#define fr(i,a,b) for(int i = a; i < b; ++i)
#define frr(i,a,b) for(int i = a; i > b; --i)
#define pb push_back
#define sf scanf

#define pf printf
#define mp make_pair
#define N 3200000

using namespace std;

int n;
int a[N];
int g,s,b;

int sol(){
    int num = 0;
    queue<ll> ft;
    for(int i = 0; i < n; ++i) {
        //printf("i = %d a = %d\n",i,a[i]);
        if(i==0) {
            num=1;
        }
        else {
            if(a[i]!=a[i-1]) {
                ft.push(num);
                num=1;
            }
            else {
                num++;
            }
        }
    }
    ft.push(num);
    g = 0;s = 0;b = 0;
    if(ft.size()<3) {
        return -1;
    }
    g = ft.front();
    ft.pop();

    //printf("g = %d\n",g);
    while(!ft.empty()&&s<=g) {
        s += ft.front();
        ft.pop();
    }
    //printf("s = %d\n",s);

    while(!ft.empty()&&b<=g) {
        b += ft.front();
        ft.pop();
    }
    //printf("b = %d\n",b);

    if(g>=s || g >=b) {
        return -1;
    }

    if((g+b+s)*2>n) {
        return -1;
    }

    while(!ft.empty()) {
        ll t = ft.front();
        ft.pop();
        if((g+b+s+t)*2>n) {
            break;
        }
        b += t;
    }

    if((g+b+s)*2>n) {
        return -1;
    }

    return 0;
}

int main() {
    int t;
    cin>>t;
    while(t--) {
        cin>>n;
        fr(i,0,n) {
            sf("%d",&a[i]);
        }
        if(sol()==-1){
            g = 0; s = 0; b = 0;
        }
        cout<<g<<" "<<s<<" "<<b<<endl;
    }
}