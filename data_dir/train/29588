#include <cstdio>

int dis(int x1, int y1, int x2, int y2)
{
    return (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2);
}

int dot(int x1, int y1, int x2, int y2, int x3, int y3)
{
    return (x2 - x1) * (x3 - x1) + (y2 - y1) * (y3 - y1);
}

int main()
{
    int n;
    scanf("%d", &n);

    while(n--)
    {



        int x[4], y[4], a[4], b[4];
        for(int i = 0; i < 4; i++)
            scanf("%d%d%d%d", x + i, y + i, a + i, b + i);
        int ans = 2147483647;
        for(int i = 0; i < 4; i++)
        {
            for(int j = 0; j < 4; j++)
            {
                for(int k = 0; k < 4; k++)
                {
                    for(int l = 0; l < 4; l++)
                    {
                        int nx[4], ny[4];
                        int times[4] = {i, j, k, l};
                        for(int m = 0; m < 4; m++)
                        {
                            nx[m] = x[m];
                            ny[m] = y[m];
                        }
                        for(int m = 0; m < 4; m++)
                        {
                            for(int o = 0; o < times[m]; o++)
                            {
                                int bx = nx[m], by = ny[m];
                                nx[m] = a[m] - (by - b[m]);
                                ny[m] = b[m] + (bx - a[m]);
                            }
                        }

                        bool flag = false;
                        for(int m = 0; m < 4; m++)
                        {
                            for(int o = 0; o < 4; o++)
                            {
                                if(o == m)
                                    continue;
                                for(int p = 0; p < 4; p++)
                                {
                                    if(o == p || m == p)
                                        continue;
                                    if(dis(nx[m], ny[m], nx[o], ny[o]) == dis(nx[m], ny[m], nx[p], ny[p]) && dis(nx[m], ny[m], nx[o], ny[o]) != 0 && dot(nx[m], ny[m], nx[o], ny[o], nx[p], ny[p]) == 0)
                                    {
                                        for(int q = 0; q < 4; q++)
                                        {
                                            if(q == m || q == o || q == p)
                                                continue;
                                            if(nx[m] == nx[q] && ny[m] == ny[q])
                                                continue;
                                            if(dis(nx[q], ny[q], nx[o], ny[o]) == dis(nx[q], ny[q], nx[p], ny[p]) && dis(nx[q], ny[q], nx[o], ny[o]) != 0 && dot(nx[q], ny[q], nx[o], ny[o], nx[p], ny[p]) == 0)
                                            {
                                                flag = true;
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        if(flag)
                        {
                            int buf = i + j + k + l;
                            if(ans > buf)
                                ans = buf;
                //printf("%d %d %d %d\n", i, j, k, l);
                        }
                    }
                }
            }
        }
        if(ans != 2147483647)
            printf("%d\n", ans);
        else
            printf("-1\n");
    }
    return 0;
}
