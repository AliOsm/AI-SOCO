#include <bits/stdc++.h>

using namespace std;

int n;
vector<int> ans;
vector<vector<int>> g;

void bfs(int st) {
    vector<int> used(n);
    used[st] = 1;
    set<int> can = {st};
    while (!can.empty()) {
        int u = *can.begin();
        can.erase(can.begin());
        ans.push_back(u);
        for (auto v : g[u]) {
            if (!used[v]) {
                can.insert(v);
                used[v] = 1;
            }
        }
    }
}

signed main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    
    #ifdef LOCAL
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
    
    int m;
    cin >> n >> m;
    g.resize(n);
    for (int i = 0; i < m; i++) {
        int u, v;
        cin >> u >> v;
        u--;
        v--;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    bfs(0);
    for (auto t : ans) {
        cout << t + 1 << ' ';
    }
}
