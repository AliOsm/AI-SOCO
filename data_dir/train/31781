#include <bits/stdc++.h>
using namespace std;

int tc, l, r;
char dp[405][405][405];
string s, t;

bool solve(int id, int lo, int hi) {
	if (id == s.size()) {
		if (lo == l && hi == r) return 1;
		else return 0;
	}

	if (dp[id][lo][hi] != -1) {
		return dp[id][lo][hi];
	}

	bool ok = solve(id + 1, lo, hi);
	if (lo < l && s[id] == t[lo]) {
		ok |= solve(id + 1, lo + 1, hi);
	}

	if (hi < r && s[id] == t[hi]) {
		ok |= solve(id + 1, lo, hi + 1);
	}

	dp[id][lo][hi] = ok;
	return dp[id][lo][hi];
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> tc;
	while (tc--) {
		cin >> s >> t;
		for (int i = 0; i <= s.size(); i++) {
			for (int j = 0; j <= t.size(); j++) {
				for (int k = 0; k <= t.size(); k++) {
					dp[i][j][k] = -1;
				}
			}
		}

		bool ok = false;
		for (int i = 0; i <= t.size(); i++) {
			l = i;
			r = t.size();
			ok |= solve(0, 0, i);
		}

		cout << (ok ? "YES\n" : "NO\n");
	}

	return 0;
}